{
  "metadata": {
    "timestamp": 1736567099701,
    "page": 691,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "go-jira/jira",
      "stars": 2681,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".chglog",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2646484375,
          "content": "jira\nschemas/*.json\n/_t/.gnupg/random_seed\n/_t/issue.props\n/_t/attach.props\n/_t/garbage.bin\n/_t/attach1.txt\n/_t/binary.out\n/_t/foobar.bin\n/_t/.password-store/GoJira/api-token:gojira@corybennett.org.gpg\n/_t/.password-store/GoJira/api-token:mothra@corybennett.org.gpg\ndist\n"
        },
        {
          "name": ".jira.d",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 25.4697265625,
          "content": "<a name=\"unreleased\"></a>\n## [Unreleased]\n\n\n<a name=\"v1.0.28\"></a>\n## [v1.0.28] - 2021-05-05\n\n<a name=\"v1.0.27\"></a>\n## [v1.0.27] - 2020-10-01\n### Block\n- [f7587f4](https://github.com/go-jira/go-jira/commit/f7587f43f12bcf0b47e52a5abe775daf6cbb3229): reverse order of arguments\n### Chore\n- [2c7a9b2](https://github.com/go-jira/go-jira/commit/2c7a9b283025202428db629b1a9ecdc63a9b704f): V1.0.27 changelog bump\n### Templates\n- [0e3082f](https://github.com/go-jira/go-jira/commit/0e3082fab6e12a337f5fe26c3e2dec5cb51425d8): add wrap helper function\n\n<a name=\"v1.0.26\"></a>\n## [v1.0.26] - 2020-09-11\n### Chore\n- [c3d22b7](https://github.com/go-jira/go-jira/commit/c3d22b765a6f3cd93445033da5c19fc0feaeaece): v1.0.26 changelog bump\n### Cicd\n- [96ec333](https://github.com/go-jira/go-jira/commit/96ec3339a4cc810da20450a9d9e91612c2b9aad4): automated releases fixes\n- [31f7b03](https://github.com/go-jira/go-jira/commit/31f7b0397890388947f2312cf42af494c7a6979f): automated changelog and release\n\n<a name=\"v1.0.25\"></a>\n## [v1.0.25] - 2020-09-11\n### Bugfix\n- [aa8dae7](https://github.com/go-jira/go-jira/commit/aa8dae7c5b7035e086bd60b3d354ffa43c30caf7): only build jira tool with gox\n### Chore\n- [578c44c](https://github.com/go-jira/go-jira/commit/578c44c628e3134e4d46f3250baf46d6b054cfe8): v1.0.25 release\n### Fix(Changelog)\n- [ff5decc](https://github.com/go-jira/go-jira/commit/ff5decc114b297e9b393f8d4af72bbace0037c73): fix changelog version\n### Tests\n- [a8c961f](https://github.com/go-jira/go-jira/commit/a8c961fe19f424df3fdbe108a374cc56b8ff9fe0): rework passive tests into native go tests\n\n<a name=\"v1.0.24\"></a>\n## [v1.0.24] - 2020-09-04\n### Cicd\n- [d093bcf](https://github.com/go-jira/go-jira/commit/d093bcf63adbd1d4e88640307aa8a5c8669ac535): deflake tests\n### Tests\n- [3bc5e42](https://github.com/go-jira/go-jira/commit/3bc5e42bd0186dbc5c47f022b9528207140fa297): transition if under review\n### Transition\n- [3c1c4d9](https://github.com/go-jira/go-jira/commit/3c1c4d95e199a717499f1f4259649152a6832e9f): map field name to id\n### Username-Deprecation\n- [6a27e28](https://github.com/go-jira/go-jira/commit/6a27e28c61c45f4b2a6aff473cf28852a2df64a2): use email and display names\n### Pull Requests\n- Merge pull request [#367](https://github.com/go-jira/go-jira/issues/367) from bbkane/master\n- Merge pull request [#349](https://github.com/go-jira/go-jira/issues/349) from aszenz/patch-1\n- Merge pull request [#355](https://github.com/go-jira/go-jira/issues/355) from go-jira/vanniktech-patch-1\n- Merge pull request [#323](https://github.com/go-jira/go-jira/issues/323) from tjamet/issue-comment\n\n\n<a name=\"v1.0.23\"></a>\n## [v1.0.23] - 2020-02-26\n### Add Sprig Template Functions, Replaces [#215] Http\n- [719f7a6](https://github.com/go-jira/go-jira/commit/719f7a68a7f2c01e428a1ad3519a611c92268d27): //masterminds.github.io/sprig/\n -  [#215](https://github.com/go-jira/go-jira/issues/215)### All\n- [31c113d](https://github.com/go-jira/go-jira/commit/31c113d1baf2dba814bca3e1dcc519ab8b0269e9): unindent some code\n- [f125ef3](https://github.com/go-jira/go-jira/commit/f125ef3fa9c7a64e8dfda9a643cadf0241b09bc7): convert to a Go module\n### CI\n- [664c5ca](https://github.com/go-jira/go-jira/commit/664c5cad246cbd4c861b615eb567d3874151d1a1): test on Go 1.12.x, cleanup\n### Docs\n- [d8189f0](https://github.com/go-jira/go-jira/commit/d8189f0a018d1afd364237e51ca8ed43ea1aabb1): update pass documentation with password-name\n### Fixes #228: Make '\n- [52a577e](https://github.com/go-jira/go-jira/commit/52a577ea48afea9efb7a1f4163301129a66f7b76): ' gpg files temporary to fix go mod\n - Fixes [#228](https://github.com/go-jira/go-jira/issues/228)### Merge Branch 'Make-Password-Source-Binary-Exchangeable' Of Https\n- [e26fbfc](https://github.com/go-jira/go-jira/commit/e26fbfcb142f2ce8c7c33a977d4cf0b436d743eb): //github.com/patrickpichler/jira into patrickpichler-make-password-source-binary-exchangeable\n### README\n- [098d963](https://github.com/go-jira/go-jira/commit/098d963881322c2b2efba48ef6a39f235bdae881): trim down the content\n### T\n- [d237e86](https://github.com/go-jira/go-jira/commit/d237e86cda3812b23f432e90d120ec21e749a854): rename to _t to fix module support\n - Fixes [#228](https://github.com/go-jira/go-jira/issues/228)### Update All Usage Of User.Name To User.AccountId For Privacy Migration: Https\n- [a26683e](https://github.com/go-jira/go-jira/commit/a26683e01dc7e161e735b1b387d1633bc32da2fe): //developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/\n### Pull Requests\n- Merge pull request [#318](https://github.com/go-jira/go-jira/issues/318) from jrschumacher/patch-1\n- Merge pull request [#317](https://github.com/go-jira/go-jira/issues/317) from go-jira/privacy-migration\n- Merge pull request [#302](https://github.com/go-jira/go-jira/issues/302) from go-jira/simplify-template-tables\n- Merge pull request [#292](https://github.com/go-jira/go-jira/issues/292) from pdecat/cache_password\n- Merge pull request [#301](https://github.com/go-jira/go-jira/issues/301) from go-jira/allow-issue-ints\n- Merge pull request [#286](https://github.com/go-jira/go-jira/issues/286) from patrickpichler/add-gopass-instructions-to-readme\n- Merge pull request [#285](https://github.com/go-jira/go-jira/issues/285) from patrickpichler/add-gopass-support\n- Merge pull request [#283](https://github.com/go-jira/go-jira/issues/283) from go-jira/sprig\n- Merge pull request [#273](https://github.com/go-jira/go-jira/issues/273) from acaloiaro/master\n- Merge pull request [#282](https://github.com/go-jira/go-jira/issues/282) from pcockwell/fix/choose-direct-transition-match-if-available\n- Merge pull request [#280](https://github.com/go-jira/go-jira/issues/280) from go-jira/cut_v1_0_21\n- Merge pull request [#275](https://github.com/go-jira/go-jira/issues/275) from go-jira/remove_gopkg_in\n- Merge pull request [#278](https://github.com/go-jira/go-jira/issues/278) from go-jira/update-figtree\n- Merge pull request [#276](https://github.com/go-jira/go-jira/issues/276) from go-jira/fix_228\n- Merge pull request [#266](https://github.com/go-jira/go-jira/issues/266) from mbethke/fix-multiline-worklog-comment\n- Merge pull request [#263](https://github.com/go-jira/go-jira/issues/263) from kojustin/master\n- Merge pull request [#253](https://github.com/go-jira/go-jira/issues/253) from mvdan/module\n- Merge pull request [#240](https://github.com/go-jira/go-jira/issues/240) from jgraglia/patch-1\n- Merge pull request [#219](https://github.com/go-jira/go-jira/issues/219) from kerhac/master\n- Merge pull request [#236](https://github.com/go-jira/go-jira/issues/236) from CodeLingoBot/rewrite\n- Merge pull request [#245](https://github.com/go-jira/go-jira/issues/245) from justmiles/211\n\n\n<a name=\"v1.0.22\"></a>\n## [v1.0.22] - 2019-09-30\n### All\n- [bb9790f](https://github.com/go-jira/go-jira/commit/bb9790f28783c1b82a3685a9c4657241e906826a): unindent some code\n- [89fe2ec](https://github.com/go-jira/go-jira/commit/89fe2ecf16709511c3e04e02f7c7906a5ac6865a): convert to a Go module\n### CI\n- [80743e4](https://github.com/go-jira/go-jira/commit/80743e4da870a1febcc65d18d08242bb201b744d): test on Go 1.12.x, cleanup\n### Docs\n- [48c15e2](https://github.com/go-jira/go-jira/commit/48c15e2daa7b3f4c84526bd9f030828f378edfc2): update pass documentation with password-name\n### Fixes #228: Make '\n- [3984d0d](https://github.com/go-jira/go-jira/commit/3984d0d4848fdfe790f46ec18bd3b71782e36c32): ' gpg files temporary to fix go mod\n - Fixes [#228](https://github.com/go-jira/go-jira/issues/228)### README\n- [dc9a9de](https://github.com/go-jira/go-jira/commit/dc9a9de165859057e4596aa47961e84de34b0b4b): trim down the content\n### T\n- [8994b42](https://github.com/go-jira/go-jira/commit/8994b42f714f8fc5b224bda8b5835f003d96ef02): rename to _t to fix module support\n - Fixes [#228](https://github.com/go-jira/go-jira/issues/228)\n<a name=\"v1.0.21\"></a>\n## [v1.0.21] - 2019-09-16\n### All\n- [31c113d](https://github.com/go-jira/go-jira/commit/31c113d1baf2dba814bca3e1dcc519ab8b0269e9): unindent some code\n- [f125ef3](https://github.com/go-jira/go-jira/commit/f125ef3fa9c7a64e8dfda9a643cadf0241b09bc7): convert to a Go module\n### CI\n- [664c5ca](https://github.com/go-jira/go-jira/commit/664c5cad246cbd4c861b615eb567d3874151d1a1): test on Go 1.12.x, cleanup\n### Docs\n- [d8189f0](https://github.com/go-jira/go-jira/commit/d8189f0a018d1afd364237e51ca8ed43ea1aabb1): update pass documentation with password-name\n### Fixes #228: Make '\n- [52a577e](https://github.com/go-jira/go-jira/commit/52a577ea48afea9efb7a1f4163301129a66f7b76): ' gpg files temporary to fix go mod\n - Fixes [#228](https://github.com/go-jira/go-jira/issues/228)### README\n- [098d963](https://github.com/go-jira/go-jira/commit/098d963881322c2b2efba48ef6a39f235bdae881): trim down the content\n### T\n- [d237e86](https://github.com/go-jira/go-jira/commit/d237e86cda3812b23f432e90d120ec21e749a854): rename to _t to fix module support\n - Fixes [#228](https://github.com/go-jira/go-jira/issues/228)### Pull Requests\n- Merge pull request [#275](https://github.com/go-jira/go-jira/issues/275) from go-jira/remove_gopkg_in\n- Merge pull request [#278](https://github.com/go-jira/go-jira/issues/278) from go-jira/update-figtree\n- Merge pull request [#276](https://github.com/go-jira/go-jira/issues/276) from go-jira/fix_228\n- Merge pull request [#266](https://github.com/go-jira/go-jira/issues/266) from mbethke/fix-multiline-worklog-comment\n- Merge pull request [#263](https://github.com/go-jira/go-jira/issues/263) from kojustin/master\n- Merge pull request [#253](https://github.com/go-jira/go-jira/issues/253) from mvdan/module\n- Merge pull request [#240](https://github.com/go-jira/go-jira/issues/240) from jgraglia/patch-1\n- Merge pull request [#219](https://github.com/go-jira/go-jira/issues/219) from kerhac/master\n- Merge pull request [#236](https://github.com/go-jira/go-jira/issues/236) from CodeLingoBot/rewrite\n- Merge pull request [#245](https://github.com/go-jira/go-jira/issues/245) from justmiles/211\n- Merge pull request [#220](https://github.com/go-jira/go-jira/issues/220) from ejsuncy/master\n\n\n<a name=\"v1.0.20\"></a>\n## [v1.0.20] - 2018-08-04\n\n<a name=\"v1.0.19\"></a>\n## [v1.0.19] - 2018-08-02\n### Pull Requests\n- Merge pull request [#197](https://github.com/go-jira/go-jira/issues/197) from kojiromike/spellcheck\n\n\n<a name=\"v1.0.18\"></a>\n## [v1.0.18] - 2018-07-29\n### They Broke Golang.Org/X/Net: ERROR: Vendor/Golang.Org/X/Net/Proxy/Socks5.Go:11:2\n- [7191c77](https://github.com/go-jira/go-jira/commit/7191c7751b2d18d7f951d089fa3235acf5748d4b): use of internal package not allowed\n### Pull Requests\n- Merge pull request [#178](https://github.com/go-jira/go-jira/issues/178) from vergenzt/patch-1\n\n\n<a name=\"v1.0.17\"></a>\n## [v1.0.17] - 2018-04-15\n### [#157] Add `Password-Directory\n- [06b26c9](https://github.com/go-jira/go-jira/commit/06b26c9e00384318ec7a51fa1c5ff5de63ea686b): path` to allow overriding PASSWORD_STORE_DIR from configs\n -  [#157](https://github.com/go-jira/go-jira/issues/157)### Pull Requests\n- Merge pull request [#161](https://github.com/go-jira/go-jira/issues/161) from vanniktech/patch-1\n\n\n<a name=\"v1.0.16\"></a>\n## [v1.0.16] - 2018-04-01\n### Pull Requests\n- Merge pull request [#150](https://github.com/go-jira/go-jira/issues/150) from catskul/parameterized-go-makefile\n- Merge pull request [#153](https://github.com/go-jira/go-jira/issues/153) from catskul/document-shell-completion\n- Merge pull request [#152](https://github.com/go-jira/go-jira/issues/152) from catskul/fix-missing-priority\n\n\n<a name=\"v1.0.15\"></a>\n## [v1.0.15] - 2018-03-08\n### Pull Requests\n- Merge pull request [#151](https://github.com/go-jira/go-jira/issues/151) from catskul/build-instructions\n- Merge pull request [#142](https://github.com/go-jira/go-jira/issues/142) from anthonyrisinger/patch-1\n\n\n<a name=\"v1.0.14\"></a>\n## [v1.0.14] - 2017-11-04\n### Pull Requests\n- Merge pull request [#130](https://github.com/go-jira/go-jira/issues/130) from onionjake/master\n\n\n<a name=\"v1.0.13\"></a>\n## [v1.0.13] - 2017-10-28\n### Pull Requests\n- Merge pull request [#126](https://github.com/go-jira/go-jira/issues/126) from schorsch3000/master\n- Merge pull request [#129](https://github.com/go-jira/go-jira/issues/129) from blachniet/logout-help-typo-fix\n- Merge pull request [#124](https://github.com/go-jira/go-jira/issues/124) from gvol/master\n- Merge pull request [#128](https://github.com/go-jira/go-jira/issues/128) from mivok/escape-issuetype\n\n\n<a name=\"v1.0.12\"></a>\n## [v1.0.12] - 2017-10-04\n\n<a name=\"v1.0.11\"></a>\n## [v1.0.11] - 2017-09-26\n\n<a name=\"v1.0.10\"></a>\n## [v1.0.10] - 2017-09-18\n\n<a name=\"v1.0.9\"></a>\n## [v1.0.9] - 2017-09-17\n\n<a name=\"v1.0.8\"></a>\n## [v1.0.8] - 2017-09-17\n\n<a name=\"v1.0.7\"></a>\n## [v1.0.7] - 2017-09-15\n\n<a name=\"v1.0.6\"></a>\n## [v1.0.6] - 2017-09-13\n\n<a name=\"v1.0.5\"></a>\n## [v1.0.5] - 2017-09-11\n\n<a name=\"v1.0.4\"></a>\n## [v1.0.4] - 2017-09-08\n\n<a name=\"v1.0.3\"></a>\n## [v1.0.3] - 2017-09-06\n\n<a name=\"v1.0.2\"></a>\n## [v1.0.2] - 2017-09-06\n\n<a name=\"v1.0.1\"></a>\n## [v1.0.1] - 2017-09-06\n\n<a name=\"v1.0.0\"></a>\n## [v1.0.0] - 2017-09-05\n\n<a name=\"v0.1.15\"></a>\n## [v0.1.15] - 2017-08-25\n### Pull Requests\n- Merge pull request [#104](https://github.com/go-jira/go-jira/issues/104) from wrouesnel/keyring-update\n- Merge pull request [#90](https://github.com/go-jira/go-jira/issues/90) from bbaugher/master\n\n\n<a name=\"v0.1.14\"></a>\n## [v0.1.14] - 2017-05-10\n\n<a name=\"v0.1.13\"></a>\n## [v0.1.13] - 2017-04-24\n### Pull Requests\n- Merge pull request [#78](https://github.com/go-jira/go-jira/issues/78) from davidreuss/generic-issuelink\n- Merge pull request [#77](https://github.com/go-jira/go-jira/issues/77) from davidreuss/fix-start-parameter-for-pagination\n\n\n<a name=\"v0.1.12\"></a>\n## [v0.1.12] - 2017-03-22\n### Pull Requests\n- Merge pull request [#74](https://github.com/go-jira/go-jira/issues/74) from clausb/BrowseOnWindows\n\n\n<a name=\"v0.1.11\"></a>\n## [v0.1.11] - 2017-02-26\n\n<a name=\"v0.1.10\"></a>\n## [v0.1.10] - 2017-02-08\n### Doc Tweak\n- [e6faa4e](https://github.com/go-jira/go-jira/commit/e6faa4eab1a8d6a7fb624b79bb58a641d02e876b): add info for setting username\n### Merge Branch 'Master' Of Github.Com\n- [63bc2ae](https://github.com/go-jira/go-jira/commit/63bc2ae15a2ebafa16861965951800e0d5c122bd): Netflix-Skunkworks/go-jira\n### Refactor Password Source, Allow For \"Pass\" To Be Used, Update Tests To Use `Password-Source\n- [cb70941](https://github.com/go-jira/go-jira/commit/cb70941aad2b8198f5c8ad8d1e1a7a98dc820cd9): pass`\n### Pull Requests\n- Merge pull request [#65](https://github.com/go-jira/go-jira/issues/65) from mlbright/patch-1\n- Merge pull request [#64](https://github.com/go-jira/go-jira/issues/64) from astrostl/patch-2\n- Merge pull request [#62](https://github.com/go-jira/go-jira/issues/62) from astrostl/patch-1\n\n\n<a name=\"v0.1.9\"></a>\n## [v0.1.9] - 2016-12-18\n### Fix(Http)\n- [b326623](https://github.com/go-jira/go-jira/commit/b326623ed22677a3ff76d2c4c67bb7ca7ecb3877): Add proxy transport\n- [72c78c6](https://github.com/go-jira/go-jira/commit/72c78c6c1c63a70d837c8e367754792c8a30ae06): Add proxy transport\n### Merge Branch 'Master' Of Github.Com\n- [ac515e2](https://github.com/go-jira/go-jira/commit/ac515e2743e1bcf5f492a0e25d2b084f3311f0d0): Netflix-Skunkworks/go-jira\n### Pull Requests\n- Merge pull request [#61](https://github.com/go-jira/go-jira/issues/61) from sylus/feature-proxy\n- Merge pull request [#60](https://github.com/go-jira/go-jira/issues/60) from facundoolano/patch-1\n\n\n<a name=\"v0.1.8\"></a>\n## [v0.1.8] - 2016-11-24\n### Pull Requests\n- Merge pull request [#53](https://github.com/go-jira/go-jira/issues/53) from jshirley/master\n\n\n<a name=\"v0.1.7\"></a>\n## [v0.1.7] - 2016-08-24\n### Pull Requests\n- Merge pull request [#52](https://github.com/go-jira/go-jira/issues/52) from dbrower/master\n\n\n<a name=\"v0.1.6\"></a>\n## [v0.1.6] - 2016-08-21\n\n<a name=\"v0.1.5\"></a>\n## [v0.1.5] - 2016-08-21\n\n<a name=\"v0.1.4\"></a>\n## [v0.1.4] - 2016-08-12\n\n<a name=\"v0.1.3\"></a>\n## [v0.1.3] - 2016-07-30\n### Pull Requests\n- Merge pull request [#24](https://github.com/go-jira/go-jira/issues/24) from mikepea/edit_template_common\n\n\n<a name=\"v0.1.2\"></a>\n## [v0.1.2] - 2016-06-29\n\n<a name=\"v0.1.1\"></a>\n## [v0.1.1] - 2016-06-28\n### Merge Branch 'Master' Of Github.Com\n- [dd0f5ef](https://github.com/go-jira/go-jira/commit/dd0f5efd3247157686c2c88817d3ad375de399ea): Netflix-Skunkworks/go-jira\n### Pull Requests\n- Merge pull request [#39](https://github.com/go-jira/go-jira/issues/39) from mikepea/system_template_dir\n- Merge pull request [#38](https://github.com/go-jira/go-jira/issues/38) from jglick/patch-1\n- Merge pull request [#37](https://github.com/go-jira/go-jira/issues/37) from tobyjoe/add-resource-expansion\n- Merge pull request [#35](https://github.com/go-jira/go-jira/issues/35) from QuinnyPig/fix-readme\n- Merge pull request [#34](https://github.com/go-jira/go-jira/issues/34) from jonathanio/fix/issuetypes-url-escaping\n\n\n<a name=\"v0.1.0\"></a>\n## [v0.1.0] - 2016-01-29\n### Add Component/Components Support\n- [595a521](https://github.com/go-jira/go-jira/commit/595a5212b43be28e01a0d5a6cf98a8de89383e41): add and list for now.\n### Merge Branch 'Master' Of Github.Com\n- [9e90376](https://github.com/go-jira/go-jira/commit/9e90376816c295d3a75b4f51703c24fd95873625): Netflix-Skunkworks/go-jira\n- [382bf4f](https://github.com/go-jira/go-jira/commit/382bf4faeb17198b54950a05b0fdb3e126af8d73): Netflix-Skunkworks/go-jira\n### Pull Requests\n- Merge pull request [#33](https://github.com/go-jira/go-jira/issues/33) from mikepea/make_jirad\n- Merge pull request [#31](https://github.com/go-jira/go-jira/issues/31) from mikepea/component_mgmt\n- Merge pull request [#30](https://github.com/go-jira/go-jira/issues/30) from mikepea/unwatch_support\n- Merge pull request [#26](https://github.com/go-jira/go-jira/issues/26) from mikepea/vote_support\n\n\n<a name=\"v0.0.20\"></a>\n## [v0.0.20] - 2016-01-21\n### Correct Naming Of Parameter\n- [8e66246](https://github.com/go-jira/go-jira/commit/8e662462dac6cccdf8af277797777caeff3ad2bc): set/add/remove are actions.\n### Pull Requests\n- Merge pull request [#27](https://github.com/go-jira/go-jira/issues/27) from blalor/insecure-skip-verify\n- Merge pull request [#21](https://github.com/go-jira/go-jira/issues/21) from mikepea/label_command\n- Merge pull request [#22](https://github.com/go-jira/go-jira/issues/22) from mikepea/library_break_out\n- Merge pull request [#20](https://github.com/go-jira/go-jira/issues/20) from mikepea/add_join_template_func\n\n\n<a name=\"0.0.19\"></a>\n## [0.0.19] - 2015-12-09\n\n<a name=\"0.0.18\"></a>\n## [0.0.18] - 2015-12-03\n\n<a name=\"0.0.17\"></a>\n## [0.0.17] - 2015-12-03\n\n<a name=\"0.0.16\"></a>\n## [0.0.16] - 2015-11-23\n\n<a name=\"0.0.15\"></a>\n## [0.0.15] - 2015-11-23\n\n<a name=\"0.0.14\"></a>\n## [0.0.14] - 2015-11-17\n### Pull Requests\n- Merge pull request [#16](https://github.com/go-jira/go-jira/issues/16) from oschrenk/fix-typo\n- Merge pull request [#14](https://github.com/go-jira/go-jira/issues/14) from mikepea/ls_with_updated\n\n\n<a name=\"0.0.13\"></a>\n## [0.0.13] - 2015-09-19\n\n<a name=\"0.0.12\"></a>\n## [0.0.12] - 2015-09-18\n\n<a name=\"0.0.11\"></a>\n## [0.0.11] - 2015-09-16\n\n<a name=\"0.0.10\"></a>\n## [0.0.10] - 2015-09-15\n\n<a name=\"0.0.9\"></a>\n## [0.0.9] - 2015-09-15\n### Allow \"Abort\n- [80b6f5a](https://github.com/go-jira/go-jira/commit/80b6f5a198fbe17aa0245c470d47c2988d8624c3): true\" to be set while editing to cancel the edit operation\n\n<a name=\"0.0.8\"></a>\n## [0.0.8] - 2015-07-31\n### Pull Requests\n- Merge pull request [#11](https://github.com/go-jira/go-jira/issues/11) from mikepea/max_results_option\n\n### Note\n\nthat testing against our JIRA instance, in a project with\nmore than 1000 open issues, suggests that the JIRA has an internal\nlimit of 1000 results in a single query.\n\n\n<a name=\"0.0.7\"></a>\n## [0.0.7] - 2015-07-01\n### Merge Branch 'Master' Of Github.Com\n- [b72040b](https://github.com/go-jira/go-jira/commit/b72040bfd413bcdc88ca2c3f6843a7f6dee2e898): Netflix-Skunkworks/go-jira\n### Pull Requests\n- Merge pull request [#9](https://github.com/go-jira/go-jira/issues/9) from nelfin/quickfix/take-user\n\n\n<a name=\"0.0.6\"></a>\n## [0.0.6] - 2015-02-27\n### Set JIRA_OPERATION To \"View\" When No Operation Used (Ie\n- [8040746](https://github.com/go-jira/go-jira/commit/8040746bcf6aac6e3ff6e419c349661a8fc9bf99): jira GOJIRA-123)\n\n<a name=\"0.0.5\"></a>\n## [0.0.5] - 2015-02-21\n\n<a name=\"0.0.4\"></a>\n## [0.0.4] - 2015-02-19\n\n<a name=\"0.0.3\"></a>\n## [0.0.3] - 2015-02-19\n### [Issue #8] Detect X-Seraph-Loginreason\n- [f3feff7](https://github.com/go-jira/go-jira/commit/f3feff796fbecca6477ecbc1e9dae6a2b78e755c): AUTHENTICATION_DENIED header to catch login failures\n -  [#8](https://github.com/go-jira/go-jira/issues/8)### Pull Requests\n- Merge pull request [#7](https://github.com/go-jira/go-jira/issues/7) from jaybuff/empty-projects\n\n\n<a name=\"0.0.2\"></a>\n## [0.0.2] - 2015-02-18\n\n<a name=\"0.0.1\"></a>\n## 0.0.1 - 2015-02-18\n### Adding Commands\n- [18f10fd](https://github.com/go-jira/go-jira/commit/18f10fd12521584c7d85b20dff2b1c2da0854cb9): * create * dups * blocks * watch\n### Merge Branch 'Nil-Assignee' Of Https\n- [25539ef](https://github.com/go-jira/go-jira/commit/25539efedda0e06e103fc942e16405c0c09ba621): //github.com/jaybuff/go-jira into jaybuff-nil-assignee\n### Work In Progress, Minor Refactor.  Added Commands\n- [acbc24b](https://github.com/go-jira/go-jira/commit/acbc24b2096f31a5805fa48984724a4a6c1da431): * login * editmeta ISSUE * edit ISSUE * issuetypes [-p PROJECT] * createmeta [-p PROJECT] [-i ISSUETYPE] * transitions ISSUE\n### Pull Requests\n- Merge pull request [#2](https://github.com/go-jira/go-jira/issues/2) from jaybuff/clean-up\n\n\n[Unreleased]: https://github.com/go-jira/go-jira/compare/v1.0.28...HEAD\n[v1.0.28]: https://github.com/go-jira/go-jira/compare/v1.0.27...v1.0.28\n[v1.0.27]: https://github.com/go-jira/go-jira/compare/v1.0.26...v1.0.27\n[v1.0.26]: https://github.com/go-jira/go-jira/compare/v1.0.25...v1.0.26\n[v1.0.25]: https://github.com/go-jira/go-jira/compare/v1.0.24...v1.0.25\n[v1.0.24]: https://github.com/go-jira/go-jira/compare/v1.0.23...v1.0.24\n[v1.0.23]: https://github.com/go-jira/go-jira/compare/v1.0.22...v1.0.23\n[v1.0.22]: https://github.com/go-jira/go-jira/compare/v1.0.21...v1.0.22\n[v1.0.21]: https://github.com/go-jira/go-jira/compare/v1.0.20...v1.0.21\n[v1.0.20]: https://github.com/go-jira/go-jira/compare/v1.0.19...v1.0.20\n[v1.0.19]: https://github.com/go-jira/go-jira/compare/v1.0.18...v1.0.19\n[v1.0.18]: https://github.com/go-jira/go-jira/compare/v1.0.17...v1.0.18\n[v1.0.17]: https://github.com/go-jira/go-jira/compare/v1.0.16...v1.0.17\n[v1.0.16]: https://github.com/go-jira/go-jira/compare/v1.0.15...v1.0.16\n[v1.0.15]: https://github.com/go-jira/go-jira/compare/v1.0.14...v1.0.15\n[v1.0.14]: https://github.com/go-jira/go-jira/compare/v1.0.13...v1.0.14\n[v1.0.13]: https://github.com/go-jira/go-jira/compare/v1.0.12...v1.0.13\n[v1.0.12]: https://github.com/go-jira/go-jira/compare/v1.0.11...v1.0.12\n[v1.0.11]: https://github.com/go-jira/go-jira/compare/v1.0.10...v1.0.11\n[v1.0.10]: https://github.com/go-jira/go-jira/compare/v1.0.9...v1.0.10\n[v1.0.9]: https://github.com/go-jira/go-jira/compare/v1.0.8...v1.0.9\n[v1.0.8]: https://github.com/go-jira/go-jira/compare/v1.0.7...v1.0.8\n[v1.0.7]: https://github.com/go-jira/go-jira/compare/v1.0.6...v1.0.7\n[v1.0.6]: https://github.com/go-jira/go-jira/compare/v1.0.5...v1.0.6\n[v1.0.5]: https://github.com/go-jira/go-jira/compare/v1.0.4...v1.0.5\n[v1.0.4]: https://github.com/go-jira/go-jira/compare/v1.0.3...v1.0.4\n[v1.0.3]: https://github.com/go-jira/go-jira/compare/v1.0.2...v1.0.3\n[v1.0.2]: https://github.com/go-jira/go-jira/compare/v1.0.1...v1.0.2\n[v1.0.1]: https://github.com/go-jira/go-jira/compare/v1.0.0...v1.0.1\n[v1.0.0]: https://github.com/go-jira/go-jira/compare/v0.1.15...v1.0.0\n[v0.1.15]: https://github.com/go-jira/go-jira/compare/v0.1.14...v0.1.15\n[v0.1.14]: https://github.com/go-jira/go-jira/compare/v0.1.13...v0.1.14\n[v0.1.13]: https://github.com/go-jira/go-jira/compare/v0.1.12...v0.1.13\n[v0.1.12]: https://github.com/go-jira/go-jira/compare/v0.1.11...v0.1.12\n[v0.1.11]: https://github.com/go-jira/go-jira/compare/v0.1.10...v0.1.11\n[v0.1.10]: https://github.com/go-jira/go-jira/compare/v0.1.9...v0.1.10\n[v0.1.9]: https://github.com/go-jira/go-jira/compare/v0.1.8...v0.1.9\n[v0.1.8]: https://github.com/go-jira/go-jira/compare/v0.1.7...v0.1.8\n[v0.1.7]: https://github.com/go-jira/go-jira/compare/v0.1.6...v0.1.7\n[v0.1.6]: https://github.com/go-jira/go-jira/compare/v0.1.5...v0.1.6\n[v0.1.5]: https://github.com/go-jira/go-jira/compare/v0.1.4...v0.1.5\n[v0.1.4]: https://github.com/go-jira/go-jira/compare/v0.1.3...v0.1.4\n[v0.1.3]: https://github.com/go-jira/go-jira/compare/v0.1.2...v0.1.3\n[v0.1.2]: https://github.com/go-jira/go-jira/compare/v0.1.1...v0.1.2\n[v0.1.1]: https://github.com/go-jira/go-jira/compare/v0.1.0...v0.1.1\n[v0.1.0]: https://github.com/go-jira/go-jira/compare/v0.0.20...v0.1.0\n[v0.0.20]: https://github.com/go-jira/go-jira/compare/0.0.19...v0.0.20\n[0.0.19]: https://github.com/go-jira/go-jira/compare/0.0.18...0.0.19\n[0.0.18]: https://github.com/go-jira/go-jira/compare/0.0.17...0.0.18\n[0.0.17]: https://github.com/go-jira/go-jira/compare/0.0.16...0.0.17\n[0.0.16]: https://github.com/go-jira/go-jira/compare/0.0.15...0.0.16\n[0.0.15]: https://github.com/go-jira/go-jira/compare/0.0.14...0.0.15\n[0.0.14]: https://github.com/go-jira/go-jira/compare/0.0.13...0.0.14\n[0.0.13]: https://github.com/go-jira/go-jira/compare/0.0.12...0.0.13\n[0.0.12]: https://github.com/go-jira/go-jira/compare/0.0.11...0.0.12\n[0.0.11]: https://github.com/go-jira/go-jira/compare/0.0.10...0.0.11\n[0.0.10]: https://github.com/go-jira/go-jira/compare/0.0.9...0.0.10\n[0.0.9]: https://github.com/go-jira/go-jira/compare/0.0.8...0.0.9\n[0.0.8]: https://github.com/go-jira/go-jira/compare/0.0.7...0.0.8\n[0.0.7]: https://github.com/go-jira/go-jira/compare/0.0.6...0.0.7\n[0.0.6]: https://github.com/go-jira/go-jira/compare/0.0.5...0.0.6\n[0.0.5]: https://github.com/go-jira/go-jira/compare/0.0.4...0.0.5\n[0.0.4]: https://github.com/go-jira/go-jira/compare/0.0.3...0.0.4\n[0.0.3]: https://github.com/go-jira/go-jira/compare/0.0.2...0.0.3\n[0.0.2]: https://github.com/go-jira/go-jira/compare/0.0.1...0.0.2\n"
        },
        {
          "name": "CHANGELOG.md.old",
          "type": "blob",
          "size": 47.1904296875,
          "content": "# Changelog\n\n## 1.0.25 - 2020-09-11\n\n* Ensure body is NPE safe [Louis DeLosSantos] [[42e5d23](https://github.com/Netflix-Skunkworks/go-jira/commit/42e5d23)]\n* Support empty responses in request commands [Louis DeLosSantos] [[b572037](https://github.com/Netflix-Skunkworks/go-jira/commit/b572037)]\n\n## 1.0.24 - 2020-09-04\n\n* Make -h flag show --help [Benjamin Kane] [[4bf1d03](https://github.com/Netflix-Skunkworks/go-jira/commit/4bf1d03)]\n* transition: map field name to id [Louis DeLosSantos] [[3c1c4d9](https://github.com/Netflix-Skunkworks/go-jira/commit/3c1c4d9)]\n* username-deprecation: use email and display names [Louis DeLosSantos] [[6a27e28](https://github.com/Netflix-Skunkworks/go-jira/commit/6a27e28)]\n* Add support to get all comments for an issue [Thibault Jamet] [[a311d0d](https://github.com/Netflix-Skunkworks/go-jira/commit/a311d0d)]\n* update all usage of user.name to user.accountId for privacy migration: https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/ [Cory Bennett] [[a26683e](https://github.com/Netflix-Skunkworks/go-jira/commit/a26683e)]\n* add template functions to handle table output, fixes [#176](https://github.com/Netflix-Skunkworks/go-jira/issues/176), replaces [#296](https://github.com/Netflix-Skunkworks/go-jira/issues/296) [Cory Bennett] [[7e97463](https://github.com/Netflix-Skunkworks/go-jira/commit/7e97463)]\n* use `password-source-path` to allow overriding binary and/or path to binary [Cory Bennett] [[d6173ce](https://github.com/Netflix-Skunkworks/go-jira/commit/d6173ce)]\n* allow issues on command line to automatically prefix with project when defined [Cory Bennett] [[d002d7f](https://github.com/Netflix-Skunkworks/go-jira/commit/d002d7f)]\n* Forgot you use TAB instead of spaces [Cory Bennett] [[789886c](https://github.com/Netflix-Skunkworks/go-jira/commit/789886c)]\n* Fixed append project to view [Cory Bennett] [[8a46215](https://github.com/Netflix-Skunkworks/go-jira/commit/8a46215)]\n* Added a line break removal function [Cory Bennett] [[9cbd993](https://github.com/Netflix-Skunkworks/go-jira/commit/9cbd993)]\n* Pushed Readfile to .jira.d directory instead of pwd [Cory Bennett] [[db53622](https://github.com/Netflix-Skunkworks/go-jira/commit/db53622)]\n* Cache password to avoid invoking password source on each API request [Patrick Decat] [[0f059a5](https://github.com/Netflix-Skunkworks/go-jira/commit/0f059a5)]\n* Add support to switch out password source binary [Patrick Pichler] [[659a5c8](https://github.com/Netflix-Skunkworks/go-jira/commit/659a5c8)]\n* Add error handling to pass password-source [Patrick Pichler] [[3339303](https://github.com/Netflix-Skunkworks/go-jira/commit/3339303)]\n* Add gopass support [Patrick Pichler] [[3c0a62e](https://github.com/Netflix-Skunkworks/go-jira/commit/3c0a62e)]\n* add sprig template functions, replaces [[#215](https://github.com/Netflix-Skunkworks/go-jira/issues/215)] http://masterminds.github.io/sprig/ [Cory Bennett] [[719f7a6](https://github.com/Netflix-Skunkworks/go-jira/commit/719f7a6)]\n* [[#232](https://github.com/Netflix-Skunkworks/go-jira/issues/232)] fix api to use common Version schema also rewrote the schema fetcher to use Go [Cory Bennett] [[90f01ce](https://github.com/Netflix-Skunkworks/go-jira/commit/90f01ce)]\n* fix syntax [Cory Bennett] [[94dd489](https://github.com/Netflix-Skunkworks/go-jira/commit/94dd489)]\n* Address comments for direct name match [Patrick Cockwell] [[a70384b](https://github.com/Netflix-Skunkworks/go-jira/commit/a70384b)]\n* Choose exact transition match if available [Patrick Cockwell] [[a646f76](https://github.com/Netflix-Skunkworks/go-jira/commit/a646f76)]\n* [[#277](https://github.com/Netflix-Skunkworks/go-jira/issues/277)] update figtree to latest [Cory Bennett] [[0e520a4](https://github.com/Netflix-Skunkworks/go-jira/commit/0e520a4)]\n* Switch over to using github.com/go-jira/jira, from gopkg.in [Mike Pountney] [[27f57b2](https://github.com/Netflix-Skunkworks/go-jira/commit/27f57b2)]\n* Add 'pctOf' and 'fit' template functions [Adriano Caloiaro] [[027adee](https://github.com/Netflix-Skunkworks/go-jira/commit/027adee)]\n* fix worklog template to allow multiline comments [Matthias Bethke] [[43e07f1](https://github.com/Netflix-Skunkworks/go-jira/commit/43e07f1)]\n* Allow reading password from stdin [Justin Ko] [[225e1dc](https://github.com/Netflix-Skunkworks/go-jira/commit/225e1dc)]\n* all: unindent some code [Daniel Martí] [[31c113d](https://github.com/Netflix-Skunkworks/go-jira/commit/31c113d)]\n* don't use ReadAll when decoding JSON [Daniel Martí] [[9bcdcc1](https://github.com/Netflix-Skunkworks/go-jira/commit/9bcdcc1)]\n* start making staticcheck happier [Daniel Martí] [[9b9186f](https://github.com/Netflix-Skunkworks/go-jira/commit/9b9186f)]\n* all: convert to a Go module [Daniel Martí] [[f125ef3](https://github.com/Netflix-Skunkworks/go-jira/commit/f125ef3)]\n* CI: test on Go 1.12.x, cleanup [Daniel Martí] [[664c5ca](https://github.com/Netflix-Skunkworks/go-jira/commit/664c5ca)]\n* make automatic pagination on search optional, fix tests [Cory Bennett] [[36c99ce](https://github.com/Netflix-Skunkworks/go-jira/commit/36c99ce)]\n* prefer defer resp.Body.Close to avoid leaks on subsequent errors [Cory Bennett] [[181bd74](https://github.com/Netflix-Skunkworks/go-jira/commit/181bd74)]\n* add pagination to search [Miles Maddox] [[76dd1d8](https://github.com/Netflix-Skunkworks/go-jira/commit/76dd1d8)]\n* Fix function comments based on best practices from Effective Go [CodeLingo Bot] [[23ac118](https://github.com/Netflix-Skunkworks/go-jira/commit/23ac118)]\n\n## 1.0.23 - 2020-02-26\n\n* update all usage of user.name to user.accountId for privacy migration: https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/ [Cory Bennett] [[a26683e](https://github.com/Netflix-Skunkworks/go-jira/commit/a26683e)]\n* add template functions to handle table output, fixes [#176](https://github.com/Netflix-Skunkworks/go-jira/issues/176), replaces [#296](https://github.com/Netflix-Skunkworks/go-jira/issues/296) [Cory Bennett] [[7e97463](https://github.com/Netflix-Skunkworks/go-jira/commit/7e97463)]\n* use `password-source-path` to allow overriding binary and/or path to binary [Cory Bennett] [[d6173ce](https://github.com/Netflix-Skunkworks/go-jira/commit/d6173ce)]\n* allow issues on command line to automatically prefix with project when defined [Cory Bennett] [[d002d7f](https://github.com/Netflix-Skunkworks/go-jira/commit/d002d7f)]\n* Forgot you use TAB instead of spaces [Cory Bennett] [[789886c](https://github.com/Netflix-Skunkworks/go-jira/commit/789886c)]\n* Fixed append project to view [Cory Bennett] [[8a46215](https://github.com/Netflix-Skunkworks/go-jira/commit/8a46215)]\n* Added a line break removal function [Cory Bennett] [[9cbd993](https://github.com/Netflix-Skunkworks/go-jira/commit/9cbd993)]\n* Pushed Readfile to .jira.d directory instead of pwd [Cory Bennett] [[db53622](https://github.com/Netflix-Skunkworks/go-jira/commit/db53622)]\n* Cache password to avoid invoking password source on each API request [Patrick Decat] [[0f059a5](https://github.com/Netflix-Skunkworks/go-jira/commit/0f059a5)]\n* Add support to switch out password source binary [Patrick Pichler] [[659a5c8](https://github.com/Netflix-Skunkworks/go-jira/commit/659a5c8)]\n* Add error handling to pass password-source [Patrick Pichler] [[3339303](https://github.com/Netflix-Skunkworks/go-jira/commit/3339303)]\n* Add gopass support [Patrick Pichler] [[3c0a62e](https://github.com/Netflix-Skunkworks/go-jira/commit/3c0a62e)]\n* add sprig template functions, replaces [[#215](https://github.com/Netflix-Skunkworks/go-jira/issues/215)] http://masterminds.github.io/sprig/ [Cory Bennett] [[719f7a6](https://github.com/Netflix-Skunkworks/go-jira/commit/719f7a6)]\n* [[#232](https://github.com/Netflix-Skunkworks/go-jira/issues/232)] fix api to use common Version schema also rewrote the schema fetcher to use Go [Cory Bennett] [[90f01ce](https://github.com/Netflix-Skunkworks/go-jira/commit/90f01ce)]\n\n## 1.0.22 - 2019-09-30\n\n* fix syntax [Cory Bennett] [[807ca76](https://github.com/Netflix-Skunkworks/go-jira/commit/807ca76)]\n* Address comments for direct name match [Patrick Cockwell] [[a70384b](https://github.com/Netflix-Skunkworks/go-jira/commit/a70384b)]\n* Choose exact transition match if available [Patrick Cockwell] [[a646f76](https://github.com/Netflix-Skunkworks/go-jira/commit/a646f76)]\n\n\n## 1.0.21 - 2019-09-16\n\n* [[#277](https://github.com/Netflix-Skunkworks/go-jira/issues/277)] update figtree to latest [Cory Bennett] [[0e520a4](https://github.com/Netflix-Skunkworks/go-jira/commit/0e520a4)]\n* Switch over to using github.com/go-jira/jira, from gopkg.in [Mike Pountney] [[27f57b2](https://github.com/Netflix-Skunkworks/go-jira/commit/27f57b2)]\n* fix worklog template to allow multiline comments [Matthias Bethke] [[43e07f1](https://github.com/Netflix-Skunkworks/go-jira/commit/43e07f1)]\n* Allow reading password from stdin [Justin Ko] [[225e1dc](https://github.com/Netflix-Skunkworks/go-jira/commit/225e1dc)]\n* all: unindent some code [Daniel Martí] [[31c113d](https://github.com/Netflix-Skunkworks/go-jira/commit/31c113d)]\n* don't use ReadAll when decoding JSON [Daniel Martí] [[9bcdcc1](https://github.com/Netflix-Skunkworks/go-jira/commit/9bcdcc1)]\n* start making staticcheck happier [Daniel Martí] [[9b9186f](https://github.com/Netflix-Skunkworks/go-jira/commit/9b9186f)]\n* all: convert to a Go module [Daniel Martí] [[f125ef3](https://github.com/Netflix-Skunkworks/go-jira/commit/f125ef3)]\n* CI: test on Go 1.12.x, cleanup [Daniel Martí] [[664c5ca](https://github.com/Netflix-Skunkworks/go-jira/commit/664c5ca)]\n* make automatic pagination on search optional, fix tests [Cory Bennett] [[36c99ce](https://github.com/Netflix-Skunkworks/go-jira/commit/36c99ce)]\n* prefer defer resp.Body.Close to avoid leaks on subsequent errors [Cory Bennett] [[181bd74](https://github.com/Netflix-Skunkworks/go-jira/commit/181bd74)]\n* add pagination to search [Miles Maddox] [[76dd1d8](https://github.com/Netflix-Skunkworks/go-jira/commit/76dd1d8)]\n* Fix function comments based on best practices from Effective Go [CodeLingo Bot] [[23ac118](https://github.com/Netflix-Skunkworks/go-jira/commit/23ac118)]\n* [[#201](https://github.com/Netflix-Skunkworks/go-jira/issues/201)] update required library, failing to populate cookiejar from cookies file [Cory Bennett] [[ee69afa](https://github.com/Netflix-Skunkworks/go-jira/commit/ee69afa)]\n\n## 1.0.20 - 2018-08-04\n\n* [[#201](https://github.com/Netflix-Skunkworks/go-jira/issues/201)] update required library, failing to populate cookiejar from cookies file [Cory Bennett] [[ee69afa](https://github.com/Netflix-Skunkworks/go-jira/commit/ee69afa)]\n\n## 1.0.19 - 2018-08-02\n\n* [[#199](https://github.com/Netflix-Skunkworks/go-jira/issues/199)] [[#198](https://github.com/Netflix-Skunkworks/go-jira/issues/198)] update http client library, fix issues with internal login retries [Cory Bennett] [[0cba806](https://github.com/Netflix-Skunkworks/go-jira/commit/0cba806)]\n\n## 1.0.18 - 2018-07-29\n\n* [[#196](https://github.com/Netflix-Skunkworks/go-jira/issues/196)] add `jira session` command to show session information if user is authenticated [Cory Bennett] [[f592107](https://github.com/Netflix-Skunkworks/go-jira/commit/f592107)]\n* [[#192](https://github.com/Netflix-Skunkworks/go-jira/issues/192)] fix template usage for 'fixVersions' in transition template [Cory Bennett] [[c9a4e30](https://github.com/Netflix-Skunkworks/go-jira/commit/c9a4e30)]\n* move HandleExit to the jiracli package [Cory Bennett] [[ef9b731](https://github.com/Netflix-Skunkworks/go-jira/commit/ef9b731)]\n* they broke golang.org/x/net: ERROR: vendor/golang.org/x/net/proxy/socks5.go:11:2: use of internal package not allowed [Cory Bennett] [[7191c77](https://github.com/Netflix-Skunkworks/go-jira/commit/7191c77)]\n* udpate deps [Cory Bennett] [[d16bcc2](https://github.com/Netflix-Skunkworks/go-jira/commit/d16bcc2)]\n* udpate for figtree api changes [Cory Bennett] [[07ba74b](https://github.com/Netflix-Skunkworks/go-jira/commit/07ba74b)]\n* udpate to use latest dep, update figtree [Cory Bennett] [[462ef1c](https://github.com/Netflix-Skunkworks/go-jira/commit/462ef1c)]\n* [[#171](https://github.com/Netflix-Skunkworks/go-jira/issues/171)] change proposed PasswordPath to PasswordName [Cory Bennett] [[213a7e0](https://github.com/Netflix-Skunkworks/go-jira/commit/213a7e0)]\n* add pass path to config [dvogt23] [[fa01ff5](https://github.com/Netflix-Skunkworks/go-jira/commit/fa01ff5)]\n\n## 1.0.17 - 2018-04-15\n\n* fix IsTerminal usage for windows [Cory Bennett] [[7f9595c](https://github.com/Netflix-Skunkworks/go-jira/commit/7f9595c)]\n* [[#166](https://github.com/Netflix-Skunkworks/go-jira/issues/166)] fix issue when editing templates specified with full path [Cory Bennett] [[d787ac0](https://github.com/Netflix-Skunkworks/go-jira/commit/d787ac0)]\n* only prompt on logout if stdin and stdout are terminals [Cory Bennett] [[09a61c3](https://github.com/Netflix-Skunkworks/go-jira/commit/09a61c3)]\n* [[#163](https://github.com/Netflix-Skunkworks/go-jira/issues/163)] fix url path join logic [Cory Bennett] [[9146346](https://github.com/Netflix-Skunkworks/go-jira/commit/9146346)]\n* [[#160](https://github.com/Netflix-Skunkworks/go-jira/issues/160)] prompt when api-token is invalid to get new token [Cory Bennett] [[e639cce](https://github.com/Netflix-Skunkworks/go-jira/commit/e639cce)]\n* [[#157](https://github.com/Netflix-Skunkworks/go-jira/issues/157)] add `password-directory: path` to allow overriding PASSWORD_STORE_DIR from configs [Cory Bennett] [[06b26c9](https://github.com/Netflix-Skunkworks/go-jira/commit/06b26c9)]\n* [[#160](https://github.com/Netflix-Skunkworks/go-jira/issues/160)] allow `jira logout` to delete your api-token from keychain [Cory Bennett] [[bd3cf99](https://github.com/Netflix-Skunkworks/go-jira/commit/bd3cf99)]\n\n## 1.0.16 - 2018-04-01\n\n* [[#159](https://github.com/Netflix-Skunkworks/go-jira/issues/159)] fix `slice bounds out of range` error in `abbrev` template function [Cory Bennett] [[359bec2](https://github.com/Netflix-Skunkworks/go-jira/commit/359bec2)]\n* [[#158](https://github.com/Netflix-Skunkworks/go-jira/issues/158)] always print usage to stdout [Cory Bennett] [[79c83f6](https://github.com/Netflix-Skunkworks/go-jira/commit/79c83f6)]\n\n## 1.0.15 - 2018-03-08\n\n* [[#147](https://github.com/Netflix-Skunkworks/go-jira/issues/147)] [[#148](https://github.com/Netflix-Skunkworks/go-jira/issues/148)] add support for api token based authentication [Cory Bennett] [[edb0662](https://github.com/Netflix-Skunkworks/go-jira/commit/edb0662)]\n* refactor to simplify main [Cory Bennett] [[43ebc84](https://github.com/Netflix-Skunkworks/go-jira/commit/43ebc84)] [[0d7c1a7](https://github.com/Netflix-Skunkworks/go-jira/commit/0d7c1a7)]\n* [[#145](https://github.com/Netflix-Skunkworks/go-jira/issues/145)] fix to match AuthProvider interface [Cory Bennett] [[80325a5](https://github.com/Netflix-Skunkworks/go-jira/commit/80325a5)]\n* [[#141](https://github.com/Netflix-Skunkworks/go-jira/issues/141)] better handling in responseError for non-json error responses [Cory Bennett] [[20a9666](https://github.com/Netflix-Skunkworks/go-jira/commit/20a9666)]\n* Update unexportTemplates.go [GitHub] [[6da9974](https://github.com/Netflix-Skunkworks/go-jira/commit/6da9974)]\n* [[#139](https://github.com/Netflix-Skunkworks/go-jira/issues/139)] add shellquote and toMinJson template functions [Cory Bennett] [[8c7ca38](https://github.com/Netflix-Skunkworks/go-jira/commit/8c7ca38)]\n* [[#137](https://github.com/Netflix-Skunkworks/go-jira/issues/137)] update kingpeon dep to allow access to dynamic command structure [Cory Bennett] [[425fa63](https://github.com/Netflix-Skunkworks/go-jira/commit/425fa63)]\n* field name is \"comment\" not \"comments\" [Cory Bennett] [[464742c](https://github.com/Netflix-Skunkworks/go-jira/commit/464742c)]\n\n## 1.0.14 - 2017-11-04\n\n* [[#131](https://github.com/Netflix-Skunkworks/go-jira/issues/131)] fix parsing global options before command execution (allow unixproxy/socksproxy to be set in config.yml) [Cory Bennett] [[042bc48](https://github.com/Netflix-Skunkworks/go-jira/commit/042bc48)]\n* add/update deps [Cory Bennett] [[a2e36e8](https://github.com/Netflix-Skunkworks/go-jira/commit/a2e36e8)]\n* add support for using socks proxy [onionjake] [[ff985f9](https://github.com/Netflix-Skunkworks/go-jira/commit/ff985f9)]\n\n## 1.0.13 - 2017-10-28\n\n* fix transition command [Cory Bennett] [[9597f9b](https://github.com/Netflix-Skunkworks/go-jira/commit/9597f9b)]\n* fix default values to load after parsing configs [Cory Bennett] [[c9b5054](https://github.com/Netflix-Skunkworks/go-jira/commit/c9b5054)]\n* add test to make sure IssueType.Fields does not disappear on regeneration [Cory Bennett] [[3966def](https://github.com/Netflix-Skunkworks/go-jira/commit/3966def)]\n* add tests for validating changes to auto-generated jiradata files [Cory Bennett] [[41d1a7c](https://github.com/Netflix-Skunkworks/go-jira/commit/41d1a7c)]\n* Fix typo in 'logout' command help [Cory Bennett] [[9000777](https://github.com/Netflix-Skunkworks/go-jira/commit/9000777)]\n* Add URL escaping to an additional issuetype call [Cory Bennett] [[7bfa241](https://github.com/Netflix-Skunkworks/go-jira/commit/7bfa241)]\n* Add --resolution option [Cory Bennett] [[e6600cf](https://github.com/Netflix-Skunkworks/go-jira/commit/e6600cf)]\n* Create Metadata Not Populated Correctly [Dillon Buchanan] [[093c510](https://github.com/Netflix-Skunkworks/go-jira/commit/093c510)]\n* add regexReplace template function [Dirk Heilig] [[d3e294e](https://github.com/Netflix-Skunkworks/go-jira/commit/d3e294e)]\n\n## 1.0.12 - 2017-10-04\n\n* add `{{env.VARNAME}}` template support to allow use of env vars [Cory Bennett] [[4d74554](https://github.com/Netflix-Skunkworks/go-jira/commit/4d74554)]\n\n## 1.0.11 - 2017-09-26\n\n* [[#115](https://github.com/Netflix-Skunkworks/go-jira/issues/115)] fix transition template for description [Cory Bennett] [[986cc78](https://github.com/Netflix-Skunkworks/go-jira/commit/986cc78)]\n* update edit command to set queryFields on search to match what is used in template [Cory Bennett] [[3913726](https://github.com/Netflix-Skunkworks/go-jira/commit/3913726)]\n* fix edit with query loop, allow continuation when not submitting previous issue [Cory Bennett] [[0ba8aa0](https://github.com/Netflix-Skunkworks/go-jira/commit/0ba8aa0)]\n* fix edit when priority is not set [Cory Bennett] [[098eb99](https://github.com/Netflix-Skunkworks/go-jira/commit/098eb99)]\n* flatten CommandRegistry list to make it more readable [Cory Bennett] [[2ddaed2](https://github.com/Netflix-Skunkworks/go-jira/commit/2ddaed2)]\n\n## 1.0.10 - 2017-09-18\n\n* clean up usage formatting, print aliases [Cory Bennett] [[9f433ac](https://github.com/Netflix-Skunkworks/go-jira/commit/9f433ac)]\n* fix edit [Cory Bennett] [[4c6b36c](https://github.com/Netflix-Skunkworks/go-jira/commit/4c6b36c)]\n* fix named query template expansion [Cory Bennett] [[a8eaa97](https://github.com/Netflix-Skunkworks/go-jira/commit/a8eaa97)]\n* fix usage message [Cory Bennett] [[cd3cfd8](https://github.com/Netflix-Skunkworks/go-jira/commit/cd3cfd8)]\n\n## 1.0.9 - 2017-09-17\n\n* need issuetype to use the default list table template now [Cory Bennett] [[3e8b9bd](https://github.com/Netflix-Skunkworks/go-jira/commit/3e8b9bd)]\n* [[#102](https://github.com/Netflix-Skunkworks/go-jira/issues/102)] add issuetype into the default queryfields and add it to the default `table` list template [Cory Bennett] [[c9d8dfb](https://github.com/Netflix-Skunkworks/go-jira/commit/c9d8dfb)]\n\n## 1.0.8 - 2017-09-17\n\n* [[#100](https://github.com/Netflix-Skunkworks/go-jira/issues/100)] add support for posting, fetching, listing and removing attachments [Cory Bennett] [[66eb7bf](https://github.com/Netflix-Skunkworks/go-jira/commit/66eb7bf)]\n\n## 1.0.7 - 2017-09-15\n\n* [[#87](https://github.com/Netflix-Skunkworks/go-jira/issues/87)] add various commands for interacting with epics [Cory Bennett] [[893454f](https://github.com/Netflix-Skunkworks/go-jira/commit/893454f)]\n\n## 1.0.6 - 2017-09-13\n\n* tweaks for templates in named queries to work better [Cory Bennett] [[00cba79](https://github.com/Netflix-Skunkworks/go-jira/commit/00cba79)]\n* [[#99](https://github.com/Netflix-Skunkworks/go-jira/issues/99)] add support for named queries to be stored in configs [Cory Bennett] [[fb43753](https://github.com/Netflix-Skunkworks/go-jira/commit/fb43753)]\n* [[#98](https://github.com/Netflix-Skunkworks/go-jira/issues/98)] add `--status` option for JQL filter on status with `list` command [Cory Bennett] [[5da04c1](https://github.com/Netflix-Skunkworks/go-jira/commit/5da04c1)]\n\n## 1.0.5 - 2017-09-11\n\n* use --gjq for GJson Query to filter json response data [Cory Bennett] [[608e586](https://github.com/Netflix-Skunkworks/go-jira/commit/608e586)]\n* fix field tag syntax [Cory Bennett] [[2c552ac](https://github.com/Netflix-Skunkworks/go-jira/commit/2c552ac)]\n* add '{{jira}}' template macro to refer to path of currently running jira command [Cory Bennett] [[941824d](https://github.com/Netflix-Skunkworks/go-jira/commit/941824d)]\n\n## 1.0.4 - 2017-09-08\n\n* update deps for kingpeon update use os.exec instead of syscall.exec for windows [Cory Bennett] [[86b963b](https://github.com/Netflix-Skunkworks/go-jira/commit/86b963b)]\n\n## 1.0.3 - 2017-09-06\n\n* [[#66](https://github.com/Netflix-Skunkworks/go-jira/issues/66)] add --started option to `jira worklog add` to change the start time for worklog [Cory Bennett] [[e6faee1](https://github.com/Netflix-Skunkworks/go-jira/commit/e6faee1)]\n* [[#45](https://github.com/Netflix-Skunkworks/go-jira/issues/45)] automatically add comment to issue even if transition does not support comment updates during transtion [Cory Bennett] [[c4be59c](https://github.com/Netflix-Skunkworks/go-jira/commit/c4be59c)]\n\n## 1.0.2 - 2017-09-06\n\n* update dependencies [Cory Bennett] [[aa876cd](https://github.com/Netflix-Skunkworks/go-jira/commit/aa876cd)]\n* update for github.com/AlecAivazis/survey => gopkg.in/AlecAivazis/survey.v1 package [Cory Bennett] [[9453179](https://github.com/Netflix-Skunkworks/go-jira/commit/9453179)]\n* use stdout to determin output terminal size [Cory Bennett] [[4d79af4](https://github.com/Netflix-Skunkworks/go-jira/commit/4d79af4)]\n\n## 1.0.1 - 2017-09-06\n\n* [[#13](https://github.com/Netflix-Skunkworks/go-jira/issues/13)] change default input syntax to not require escaping for special characters [Cory Bennett] [[1106558](https://github.com/Netflix-Skunkworks/go-jira/commit/1106558)]\n\n## 1.0.0 - 2017-09-05\n\n* fix build for windows [Cory Bennett] [[1b854da](https://github.com/Netflix-Skunkworks/go-jira/commit/1b854da)]\n* change the default log output format [Cory Bennett] [[f1b8c64](https://github.com/Netflix-Skunkworks/go-jira/commit/f1b8c64)]\n* tweak auto-login so it does not print the standard `jira login` command output [Cory Bennett] [[49f6cdc](https://github.com/Netflix-Skunkworks/go-jira/commit/49f6cdc)]\n* add --quiet global option [Cory Bennett] [[c226077](https://github.com/Netflix-Skunkworks/go-jira/commit/c226077)]\n* refactor to allow for --insecure and --unixproxy arguments [Cory Bennett] [[c0358eb](https://github.com/Netflix-Skunkworks/go-jira/commit/c0358eb)]\n* handle html response on expired cookies (require X-Ausername header to always be present) [Cory Bennett] [[21920c5](https://github.com/Netflix-Skunkworks/go-jira/commit/21920c5)]\n* allow login prompt to be interrupted [Cory Bennett] [[7ab6c22](https://github.com/Netflix-Skunkworks/go-jira/commit/7ab6c22)]\n* fmt -> log typo [Cory Bennett] [[bccf09f](https://github.com/Netflix-Skunkworks/go-jira/commit/bccf09f)]\n* make ~/.jira.d directory if not already present [Cory Bennett] [[e72479c](https://github.com/Netflix-Skunkworks/go-jira/commit/e72479c)]\n* fix go vet [Cory Bennett] [[e04b506](https://github.com/Netflix-Skunkworks/go-jira/commit/e04b506)]\n* fix tests [Cory Bennett] [[ba35f55](https://github.com/Netflix-Skunkworks/go-jira/commit/ba35f55)]\n* add OK printf [Cory Bennett] [[dc02181](https://github.com/Netflix-Skunkworks/go-jira/commit/dc02181)]\n* change --method to use -M for backwards compat [Cory Bennett] [[b120c0b](https://github.com/Netflix-Skunkworks/go-jira/commit/b120c0b)]\n* add resolution to dup'd issues when necessary [Cory Bennett] [[2638396](https://github.com/Netflix-Skunkworks/go-jira/commit/2638396)]\n* call correct function for `labels remove|set` commands [Cory Bennett] [[ad1a62a](https://github.com/Netflix-Skunkworks/go-jira/commit/ad1a62a)]\n* data argument is optional (for GET and DELETE requests) [Cory Bennett] [[4b60313](https://github.com/Netflix-Skunkworks/go-jira/commit/4b60313)]\n* fix usage, overrides not serialized correctly [Cory Bennett] [[84119a2](https://github.com/Netflix-Skunkworks/go-jira/commit/84119a2)]\n* fix `jira ISSUE-123` command line parsing [Cory Bennett] [[fa4ac25](https://github.com/Netflix-Skunkworks/go-jira/commit/fa4ac25)]\n* add logger object to jiracmd [Cory Bennett] [[aed952b](https://github.com/Netflix-Skunkworks/go-jira/commit/aed952b)]\n* refactor for GlobalOptions and CommonOptions [Cory Bennett] [[979da1f](https://github.com/Netflix-Skunkworks/go-jira/commit/979da1f)]\n* move commands from jiracli package to jiracmd package [Cory Bennett] [[0a5510b](https://github.com/Netflix-Skunkworks/go-jira/commit/0a5510b)]\n* use jiracli.Error object to disambiguate between kingpin errors and cli errors [Cory Bennett] [[fb1bfeb](https://github.com/Netflix-Skunkworks/go-jira/commit/fb1bfeb)]\n* fix stray newline for list table template [Cory Bennett] [[36c26c5](https://github.com/Netflix-Skunkworks/go-jira/commit/36c26c5)]\n* fix dynamic table output when not on tty [Cory Bennett] [[3942f6f](https://github.com/Netflix-Skunkworks/go-jira/commit/3942f6f)]\n* when using --verbose set the JIRA_DEBUG environment variable so custom-commands can auto enable verbose output [Cory Bennett] [[da9a2b2](https://github.com/Netflix-Skunkworks/go-jira/commit/da9a2b2)]\n* make `jira ISSUE-123` usage call `jira view ISSUE-123` [Cory Bennett] [[ec0858b](https://github.com/Netflix-Skunkworks/go-jira/commit/ec0858b)]\n* integrate kingpeon library to allow for custom commands via configuration [Cory Bennett] [[301a61f](https://github.com/Netflix-Skunkworks/go-jira/commit/301a61f)]\n* use terminal width to adjust list table output [Cory Bennett] [[2a081dd](https://github.com/Netflix-Skunkworks/go-jira/commit/2a081dd)]\n* set yaml/json tags for option structs [Cory Bennett] [[f52d2c4](https://github.com/Netflix-Skunkworks/go-jira/commit/f52d2c4)]\n* update generated data files [Cory Bennett] [[c89f11d](https://github.com/Netflix-Skunkworks/go-jira/commit/c89f11d)]\n* automatically login when anonymous user detected [Cory Bennett] [[21add54](https://github.com/Netflix-Skunkworks/go-jira/commit/21add54)]\n* refactor trivial objects in favor of arguments to static functions [Cory Bennett] [[1f345ce](https://github.com/Netflix-Skunkworks/go-jira/commit/1f345ce)]\n* set JIRA_OPERATION when parsing configs.  Use figtree config types for options to make defaulting work [Cory Bennett] [[5716a7c](https://github.com/Netflix-Skunkworks/go-jira/commit/5716a7c)]\n* add better handing for usage error [Cory Bennett] [[b235dcc](https://github.com/Netflix-Skunkworks/go-jira/commit/b235dcc)]\n* adding `request` command, removing dead code [Cory Bennett] [[56b1c9d](https://github.com/Netflix-Skunkworks/go-jira/commit/56b1c9d)]\n* adding Do required for request language [Cory Bennett] [[a1c2849](https://github.com/Netflix-Skunkworks/go-jira/commit/a1c2849)]\n* add `browse` command and implement -b option for most operations [Cory Bennett] [[a91b9d5](https://github.com/Netflix-Skunkworks/go-jira/commit/a91b9d5)]\n* fix IssueAssign [Cory Bennett] [[f32cc70](https://github.com/Netflix-Skunkworks/go-jira/commit/f32cc70)]\n* merge in update for upstream changes [#104](https://github.com/Netflix-Skunkworks/go-jira/issues/104) [Cory Bennett] [[19d8686](https://github.com/Netflix-Skunkworks/go-jira/commit/19d8686)]\n* add `export-templates` command [Cory Bennett] [[abaad56](https://github.com/Netflix-Skunkworks/go-jira/commit/abaad56)]\n* add `issuetypes` command [Cory Bennett] [[da39323](https://github.com/Netflix-Skunkworks/go-jira/commit/da39323)]\n* add `components` command [Cory Bennett] [[0bd3ca2](https://github.com/Netflix-Skunkworks/go-jira/commit/0bd3ca2)]\n* add `component add` command [Cory Bennett] [[cc90610](https://github.com/Netflix-Skunkworks/go-jira/commit/cc90610)]\n* add `take`, `unassign` and `assign|give` commands [Cory Bennett] [[959524a](https://github.com/Netflix-Skunkworks/go-jira/commit/959524a)]\n* adding `labels [add|set|remove]` commands [Cory Bennett] [[9161861](https://github.com/Netflix-Skunkworks/go-jira/commit/9161861)]\n* add `comment` command [Cory Bennett] [[f0b08c5](https://github.com/Netflix-Skunkworks/go-jira/commit/f0b08c5)]\n* add `watch` command [Cory Bennett] [[ec0ac3c](https://github.com/Netflix-Skunkworks/go-jira/commit/ec0ac3c)]\n* add `rank ISSUE after|before ISSUE` command [Cory Bennett] [[8b863d2](https://github.com/Netflix-Skunkworks/go-jira/commit/8b863d2)]\n* add `vote` command [Cory Bennett] [[a08c92f](https://github.com/Netflix-Skunkworks/go-jira/commit/a08c92f)]\n* add `issuelinktypes` command [Cory Bennett] [[37f81a4](https://github.com/Netflix-Skunkworks/go-jira/commit/37f81a4)]\n* add `issuelink` command [Cory Bennett] [[aacc9f4](https://github.com/Netflix-Skunkworks/go-jira/commit/aacc9f4)]\n* fix closing duplicate issue on `dup` command [Cory Bennett] [[fc696c3](https://github.com/Netflix-Skunkworks/go-jira/commit/fc696c3)]\n* rewrite checkpoint [Cory Bennett] [[36632a5](https://github.com/Netflix-Skunkworks/go-jira/commit/36632a5)]\n\n## 0.1.14 - 2017-05-10\n\n* fix unsafe casting for --quiet flag [Cory Bennett] [[6f29f43](https://github.com/Netflix-Skunkworks/go-jira/commit/6f29f43)]\n* [[#80](https://github.com/Netflix-Skunkworks/go-jira/issues/80)] add `jira unassign` and `jira give ISSUE --default` commands [Cory Bennett] [[03d8633](https://github.com/Netflix-Skunkworks/go-jira/commit/03d8633)]\n\n## 0.1.13 - 2017-04-24\n\n* work around `github.com/tmc/keyring` compile error for windows [Cory Bennett] [[85298e9](https://github.com/Netflix-Skunkworks/go-jira/commit/85298e9)]\n* Added generic issuelink command [David Reuss] [[cc54d11](https://github.com/Netflix-Skunkworks/go-jira/commit/cc54d11)]\n* Added --start parameter for pagination on results [David Reuss] [[9b94d9e](https://github.com/Netflix-Skunkworks/go-jira/commit/9b94d9e)]\n\n## 0.1.12 - 2017-03-22\n\n* Implement \"browse\" subcommand on Windows [Claus Brod] [[ca333d8](https://github.com/Netflix-Skunkworks/go-jira/commit/ca333d8)]\n\n## 0.1.11 - 2017-02-26\n\n* [[#69](https://github.com/Netflix-Skunkworks/go-jira/issues/69)] add subtask command [Cory Bennett] [[21a2ed5](https://github.com/Netflix-Skunkworks/go-jira/commit/21a2ed5)]\n\n## 0.1.10 - 2017-02-08\n\n* set GPG_TTY in .bashrc [Cory Bennett] [[b1e552f](https://github.com/Netflix-Skunkworks/go-jira/commit/b1e552f)]\n* force password in case password already exists [Cory Bennett] [[d5a2c3b](https://github.com/Netflix-Skunkworks/go-jira/commit/d5a2c3b)]\n* refactor password source, allow for \"pass\" to be used, update tests to use `password-source: pass` [Cory Bennett] [[5a71939](https://github.com/Netflix-Skunkworks/go-jira/commit/5a71939)]\n\n## 0.1.9 - 2016-12-18\n\n* only warn about needing login when not already running the login command [Cory Bennett] [[6c24e55](https://github.com/Netflix-Skunkworks/go-jira/commit/6c24e55)]\n* fix(http): Add proxy transport [William Hearn] [[4bd740b](https://github.com/Netflix-Skunkworks/go-jira/commit/4bd740b)] [[2dff6c9](https://github.com/Netflix-Skunkworks/go-jira/commit/2dff6c9)]\n\n## 0.1.8 - 2016-11-24\n\n* [[#12](https://github.com/Netflix-Skunkworks/go-jira/issues/12)] integrate with keyring for password storage and provide http basic auth credentials for every request since most jira services have websudo enabled with does not allow cookie based authentication [Cory Bennett] [[b8a6e57](https://github.com/Netflix-Skunkworks/go-jira/commit/b8a6e57)]\n* Cleaning up usage [Jay Shirley] [[8add52b](https://github.com/Netflix-Skunkworks/go-jira/commit/8add52b)]\n* Update usage [Jay Shirley] [[b56e32a](https://github.com/Netflix-Skunkworks/go-jira/commit/b56e32a)]\n* use gopkg.in for links to maintain version compatibility [Cory Bennett] [[1414d1f](https://github.com/Netflix-Skunkworks/go-jira/commit/1414d1f)]\n* golint [Cory Bennett] [[44cdebf](https://github.com/Netflix-Skunkworks/go-jira/commit/44cdebf)]\n* add \"rank\" command allow ordering backlog issues in agile projects [Cory Bennett] [[e4cc9c6](https://github.com/Netflix-Skunkworks/go-jira/commit/e4cc9c6)]\n* Adding a unixproxy mechanism [Jay Shirley] [[5b9c0dd](https://github.com/Netflix-Skunkworks/go-jira/commit/5b9c0dd)]\n\n## 0.1.7 - 2016-08-24\n\n* Prefer transition names which match exactly [Don Brower] [[e40f9c1](https://github.com/Netflix-Skunkworks/go-jira/commit/e40f9c1)]\n* update tempates to make them more readable with space trimming added to go-1.6 [Cory Bennett] [[693b3e4](https://github.com/Netflix-Skunkworks/go-jira/commit/693b3e4)]\n\n## 0.1.6 - 2016-08-21\n\n* make \"worklogs\" command print output through template allow \"add worklog\" command to open edit template [Cory Bennett] [[cc3fbee](https://github.com/Netflix-Skunkworks/go-jira/commit/cc3fbee)]\n* remove extra newline at end of worklogs template [Cory Bennett] [[d08ef15](https://github.com/Netflix-Skunkworks/go-jira/commit/d08ef15)]\n* adding worklog related templates [Cory Bennett] [[ab1cd27](https://github.com/Netflix-Skunkworks/go-jira/commit/ab1cd27)]\n\n## 0.1.5 - 2016-08-21\n\n* update for golint [Cory Bennett] [[5a4e17c](https://github.com/Netflix-Skunkworks/go-jira/commit/5a4e17c)]\n* fix for go vet [Cory Bennett] [[355fb42](https://github.com/Netflix-Skunkworks/go-jira/commit/355fb42)]\n\n## 0.1.4 - 2016-08-12\n\n* when running \"dups\" on a Process Management Project type, you have to start/stop the task to resolve it [Cory Bennett] [[2c91905](https://github.com/Netflix-Skunkworks/go-jira/commit/2c91905)]\n* allow for defaultResolution option for transition command [Cory Bennett] [[a328c2d](https://github.com/Netflix-Skunkworks/go-jira/commit/a328c2d)]\n* add \"backlog\" command for Kanban related Issues [Cory Bennett] [[5d39b23](https://github.com/Netflix-Skunkworks/go-jira/commit/5d39b23)]\n* fix --noedit flag with \"dups\" command [Cory Bennett] [[37c07fa](https://github.com/Netflix-Skunkworks/go-jira/commit/37c07fa)]\n* add \"votes\" and \"labels\" to default view template [Cory Bennett] [[6f73b8c](https://github.com/Netflix-Skunkworks/go-jira/commit/6f73b8c)]\n* add \"blockerType\" config param, for issueLinkType use for \"blocks\" command [Cory Bennett] [[30fd301](https://github.com/Netflix-Skunkworks/go-jira/commit/30fd301)]\n* update gitter room [Cory Bennett] [[4b822b1](https://github.com/Netflix-Skunkworks/go-jira/commit/4b822b1)]\n* default issuetype to \"Bug\" for project that have Bug, otherwise try \"Task\" [Cory Bennett] [[0c807b4](https://github.com/Netflix-Skunkworks/go-jira/commit/0c807b4)]\n* make view template only show fields that have values [Cory Bennett] [[8238fe8](https://github.com/Netflix-Skunkworks/go-jira/commit/8238fe8)]\n* make default create template only display fields if they are valid fields for the project [Cory Bennett] [[adc2ace](https://github.com/Netflix-Skunkworks/go-jira/commit/adc2ace)]\n* ignore empty json fields when processing templates [Cory Bennett] [[f5f3e28](https://github.com/Netflix-Skunkworks/go-jira/commit/f5f3e28)]\n* allow JIRA_LOG_FORMAT env variable to control log output format [Cory Bennett] [[469def0](https://github.com/Netflix-Skunkworks/go-jira/commit/469def0)]\n* remove extraneous debug [Cory Bennett] [[752a94d](https://github.com/Netflix-Skunkworks/go-jira/commit/752a94d)]\n* add logout command modify password prompt to echo masked password [Cory Bennett] [[8ad91be](https://github.com/Netflix-Skunkworks/go-jira/commit/8ad91be)]\n* tweak cookies to store hostname dump all http request/response with --verbose [Cory Bennett] [[f93fe79](https://github.com/Netflix-Skunkworks/go-jira/commit/f93fe79)]\n* load configs in order of closest to cwd (/etc/go-jira.yml is last) [Cory Bennett] [[f54267b](https://github.com/Netflix-Skunkworks/go-jira/commit/f54267b)]\n\n## 0.1.3 - 2016-07-30\n\n* [[#43](https://github.com/Netflix-Skunkworks/go-jira/issues/43)] add support for jira done|todo|prog commands [Cory Bennett] [[dd7d1cc](https://github.com/Netflix-Skunkworks/go-jira/commit/dd7d1cc)]\n* Reporter is not generally editable. [Mike Pountney] [[a637b43](https://github.com/Netflix-Skunkworks/go-jira/commit/a637b43)]\n\n## 0.1.2 - 2016-06-29\n\n* [[#44](https://github.com/Netflix-Skunkworks/go-jira/issues/44)] Close tmpfile before rename to work around \"The process cannot access the file because it is being used by another process\" error on windows. [Cory Bennett] [[0980f8e](https://github.com/Netflix-Skunkworks/go-jira/commit/0980f8e)]\n\n## 0.1.1 - 2016-06-28\n\n* use USERPROFILE instead of HOME for windows, rework paths to use filepath.Join for better cross platform support [Cory Bennett] [[adcedc4](https://github.com/Netflix-Skunkworks/go-jira/commit/adcedc4)]\n* Include templates from a system path [Mike Pountney] [[cf10f53](https://github.com/Netflix-Skunkworks/go-jira/commit/cf10f53)]\n* Added support for the ```expand``` option for Issues [tobyjoe] [[fb4afc9](https://github.com/Netflix-Skunkworks/go-jira/commit/fb4afc9)]\n* change for api changes to go-logging [Cory Bennett] [[7bfc6e8](https://github.com/Netflix-Skunkworks/go-jira/commit/7bfc6e8)]\n* Fix issuetype calls adding URL escaping [Jonathan Wright] [[e4a25e2](https://github.com/Netflix-Skunkworks/go-jira/commit/e4a25e2)]\n\n## 0.1.0 - 2016-01-29\n\n* Fixes [#32](https://github.com/Netflix-Skunkworks/go-jira/issues/32) - make path to cookieFile if it's not present [Mike Pountney] [[6644579](https://github.com/Netflix-Skunkworks/go-jira/commit/6644579)]\n* Add component/components support: add and list for now. [Mike Pountney] [[d7b3226](https://github.com/Netflix-Skunkworks/go-jira/commit/d7b3226)]\n* Tweak the CmdWatch contract and add watcher remove support [Mike Pountney] [[383847a](https://github.com/Netflix-Skunkworks/go-jira/commit/383847a)]\n* Amend vote/unvote to be vote/vote --down [Mike Pountney] [[797edef](https://github.com/Netflix-Skunkworks/go-jira/commit/797edef)]\n* Add 'vote' and 'unvote' [Mike Pountney] [[c95e66e](https://github.com/Netflix-Skunkworks/go-jira/commit/c95e66e)]\n\n## 0.0.20 - 2016-01-21\n\n* [issue [#28](https://github.com/Netflix-Skunkworks/go-jira/issues/28)] check to make sure we got back issuetypes for create metadata [Cory Bennett] [[ee0e780](https://github.com/Netflix-Skunkworks/go-jira/commit/ee0e780)]\n* Add insecure option for TLS endpoints [Brian Lalor] [[6a88bb9](https://github.com/Netflix-Skunkworks/go-jira/commit/6a88bb9)]\n* Correct naming of parameter: set/add/remove are actions. [Mike Pountney] [[303784f](https://github.com/Netflix-Skunkworks/go-jira/commit/303784f)]\n* Tweak CmdLabels args so that magic happens with CLI [Mike Pountney] [[40a7c65](https://github.com/Netflix-Skunkworks/go-jira/commit/40a7c65)]\n* Expose ViewTicket as per FindIssues [Mike Pountney] [[8977f3d](https://github.com/Netflix-Skunkworks/go-jira/commit/8977f3d)]\n* Add exposed versions of getTemplate and runTemplate [Mike Pountney] [[da6cbd5](https://github.com/Netflix-Skunkworks/go-jira/commit/da6cbd5)]\n* Add 'labels' command to set/add/remove labels [Mike Pountney] [[230b52d](https://github.com/Netflix-Skunkworks/go-jira/commit/230b52d)]\n* Add a 'join' func to the template engine [Mike Pountney] [[a7820fe](https://github.com/Netflix-Skunkworks/go-jira/commit/a7820fe)]\n* make \"jira\" golang package, move code from jira/cli to root, move jira/main.go to main/main.go [Cory Bennett] [[7268b9e](https://github.com/Netflix-Skunkworks/go-jira/commit/7268b9e)]\n\n## 0.0.19 - 2015-12-09\n\n* fix jira trans TRANS ISSUE (case sensitivity issue), also go fmt [Cory Bennett] [[3c30f3b](https://github.com/Netflix-Skunkworks/go-jira/commit/3c30f3b)]\n\n## 0.0.18 - 2015-12-03\n\n* need to default \"quiet\" to false [Cory Bennett] [[4f4a89b](https://github.com/Netflix-Skunkworks/go-jira/commit/4f4a89b)]\n\n## 0.0.17 - 2015-12-03\n\n* add --quiet command to not print the OK .. add --saveFile option to print the issue/link to a file on create command [Cory Bennett] [[c9ac162](https://github.com/Netflix-Skunkworks/go-jira/commit/c9ac162)]\n* fix overrides [Cory Bennett] [[eaddfe6](https://github.com/Netflix-Skunkworks/go-jira/commit/eaddfe6)]\n* add abstract request wrapper to allow you to access/process random apis supported by Jira but not yet supported by go-jira [Cory Bennett] [[90ef56a](https://github.com/Netflix-Skunkworks/go-jira/commit/90ef56a)]\n\n## 0.0.16 - 2015-11-23\n\n* jira edit should not require one arguemnt (allow for --query) [Cory Bennett] [[a1eb4a1](https://github.com/Netflix-Skunkworks/go-jira/commit/a1eb4a1)]\n\n## 0.0.15 - 2015-11-23\n\n* [[#17](https://github.com/Netflix-Skunkworks/go-jira/issues/17)] print usage on missing arguments [Cory Bennett] [[fd2a2fe](https://github.com/Netflix-Skunkworks/go-jira/commit/fd2a2fe)]\n\n## 0.0.14 - 2015-11-17\n\n* s/enpoint/endpoint/g [Oliver Schrenk] [[c5d251d](https://github.com/Netflix-Skunkworks/go-jira/commit/c5d251d)]\n* Implement dateFormat template command [Mike Pountney] [[68d3bae](https://github.com/Netflix-Skunkworks/go-jira/commit/68d3bae)]\n* Add 'updated' field to default queryfields. [Mike Pountney] [[91e2475](https://github.com/Netflix-Skunkworks/go-jira/commit/91e2475)]\n* Fix export-templates option (typo) [Mike Pountney] [[4d7fdb8](https://github.com/Netflix-Skunkworks/go-jira/commit/4d7fdb8)]\n* when yaml element resolves to \"\\n\" strip it out so we dont post it to jira [Cory Bennett] [[47ced2f](https://github.com/Netflix-Skunkworks/go-jira/commit/47ced2f)]\n* print PUT/POST data when using --dryrun to help debug [Cory Bennett] [[618f245](https://github.com/Netflix-Skunkworks/go-jira/commit/618f245)]\n\n## 0.0.13 - 2015-09-19\n\n* replace dead/deprecated code.google.com/p/gopass with golang.org/x/crypto/ssh/terminal for reading password from stdin [Cory Bennett] [[909eb06](https://github.com/Netflix-Skunkworks/go-jira/commit/909eb06)]\n\n## 0.0.12 - 2015-09-18\n\n* fix exception from \"jira create\" [Cory Bennett] [[9348a4b](https://github.com/Netflix-Skunkworks/go-jira/commit/9348a4b)]\n* add some debug messages to help diagnose login failures [Cory Bennett] [[1c08a7d](https://github.com/Netflix-Skunkworks/go-jira/commit/1c08a7d)]\n\n## 0.0.11 - 2015-09-16\n\n* add --version [Cory Bennett] [[8385ee2](https://github.com/Netflix-Skunkworks/go-jira/commit/8385ee2)]\n* fix command line parser broken in 0.0.10 [Cory Bennett] [[15ae929](https://github.com/Netflix-Skunkworks/go-jira/commit/15ae929)]\n\n## 0.0.10 - 2015-09-15\n\n* allow for command aliasing in conjunction with executable config files. Issue #5 [Cory Bennett] [[23590d4](https://github.com/Netflix-Skunkworks/go-jira/commit/23590d4)]\n* update usage [Cory Bennett] [[ef7a57e](https://github.com/Netflix-Skunkworks/go-jira/commit/ef7a57e)]\n\n## 0.0.9 - 2015-09-15\n\n* use forked yaml.v2 so as to not lose line terminations present in jira fields [Cory Bennett] [[f84e77f](https://github.com/Netflix-Skunkworks/go-jira/commit/f84e77f)]\n* adding a |~ literal yaml syntax to just chomp a single newline (again to preserve existing formatting in jira fields) [Cory Bennett] [[f84e77f](https://github.com/Netflix-Skunkworks/go-jira/commit/f84e77f)]\n* for indent/comment allow for unicode line termination characters that yaml will use for parsing [Cory Bennett] [[f84e77f](https://github.com/Netflix-Skunkworks/go-jira/commit/f84e77f)]\n* fix \"edit\" default option, change how defaults are dealt with for filters [Cory Bennett] [[4265913](https://github.com/Netflix-Skunkworks/go-jira/commit/4265913)]\n* for edit template add issue id as comment, also add \"comments\" as comment so you can review the comment details while editing [Cory Bennett] [[968a9df](https://github.com/Netflix-Skunkworks/go-jira/commit/968a9df)]\n* add \"comment\" template filter to comment out multiline statements [Cory Bennett] [[d664868](https://github.com/Netflix-Skunkworks/go-jira/commit/d664868)]\n* add getOpt wrappers to get options with defaults [Cory Bennett] [[c0070cf](https://github.com/Netflix-Skunkworks/go-jira/commit/c0070cf)]\n* make --dryrun work [Cory Bennett] [[d229ac1](https://github.com/Netflix-Skunkworks/go-jira/commit/d229ac1)]\n* refactor config/option loading so command options override settings in config files [Cory Bennett] [[d229ac1](https://github.com/Netflix-Skunkworks/go-jira/commit/d229ac1)]\n* allow query options to be used on the \"edit\" command to iterate editing [Cory Bennett] [[d229ac1](https://github.com/Netflix-Skunkworks/go-jira/commit/d229ac1)]\n* remove duplication for defaults [Cory Bennett] [[f8c8ddf](https://github.com/Netflix-Skunkworks/go-jira/commit/f8c8ddf)]\n* use optigo for option parsing, drop docopt [Cory Bennett] [[7bbd571](https://github.com/Netflix-Skunkworks/go-jira/commit/7bbd571)]\n* allow \"abort: true\" to be set while editing to cancel the edit operation [Cory Bennett] [[ea67a77](https://github.com/Netflix-Skunkworks/go-jira/commit/ea67a77)]\n* if no changes are made on edit templates then abort edit [Cory Bennett] [[e69b65c](https://github.com/Netflix-Skunkworks/go-jira/commit/e69b65c)]\n\n## 0.0.8 - 2015-07-31\n\n* Add --max_results option for 'ls' [Mike Pountney] [[e06ff0c](https://github.com/Netflix-Skunkworks/go-jira/commit/e06ff0c)]\n\n## 0.0.7 - 2015-07-01\n\n* fix \"take\" command not honouring user option [Andrew Haigh] [[8f1d2b9](https://github.com/Netflix-Skunkworks/go-jira/commit/8f1d2b9)]\n* fix typo [Cory Bennett] [[06f57fe](https://github.com/Netflix-Skunkworks/go-jira/commit/06f57fe)]\n\n## 0.0.6 - 2015-02-27\n\n* allow --sort= to disable sort override [Cory Bennett] [[701f091](https://github.com/Netflix-Skunkworks/go-jira/commit/701f091)]\n* fix default JIRA_OPERATION env variable [Cory Bennett] [[82fd9b9](https://github.com/Netflix-Skunkworks/go-jira/commit/82fd9b9)]\n* automatically close duplicate issues with \"Duplicate\" resolution [Cory Bennett] [[ebf1700](https://github.com/Netflix-Skunkworks/go-jira/commit/ebf1700)]\n* set JIRA_OPERATION to \"view\" when no operation used (ie: jira GOJIRA-123) [Cory Bennett] [[050848a](https://github.com/Netflix-Skunkworks/go-jira/commit/050848a)]\n* add --sort option to \"list\" command [Cory Bennett] [[f359030](https://github.com/Netflix-Skunkworks/go-jira/commit/f359030)]\n\n## 0.0.5 - 2015-02-21\n\n* handle editor having arguments [Cory Bennett] [[7186fb3](https://github.com/Netflix-Skunkworks/go-jira/commit/7186fb3)]\n* add more template error handling [Cory Bennett] [[3e6f2b3](https://github.com/Netflix-Skunkworks/go-jira/commit/3e6f2b3)]\n* allow create template to specify defalt watchers with -o watchers=... [Cory Bennett] [[4db2e4e](https://github.com/Netflix-Skunkworks/go-jira/commit/4db2e4e)]\n* if config files are executable then run them and parse the output [Cory Bennett] [[7a2f7f5](https://github.com/Netflix-Skunkworks/go-jira/commit/7a2f7f5)]\n\n## 0.0.4 - 2015-02-19\n\n* add --template option to export-templates to export a single template [Cory Bennett] [[343fbb6](https://github.com/Netflix-Skunkworks/go-jira/commit/343fbb6)]\n* add \"table\" template to be used with \"list\" command [Cory Bennett] [[8954ec1](https://github.com/Netflix-Skunkworks/go-jira/commit/8954ec1)]\n\n## 0.0.3 - 2015-02-19\n\n* [issue [#8](https://github.com/Netflix-Skunkworks/go-jira/issues/8)] detect X-Seraph-Loginreason: AUTHENTICATION_DENIED header to catch login failures [Cory Bennett] [[2dcf665](https://github.com/Netflix-Skunkworks/go-jira/commit/2dcf665)]\n* project should always be uppercase [Jay Buffington] [[1b69d12](https://github.com/Netflix-Skunkworks/go-jira/commit/1b69d12)]\n* if response is 400, check json for errorMessages and log them [Jay Buffington] [[4924dfa](https://github.com/Netflix-Skunkworks/go-jira/commit/4924dfa)]\n* validate project [Jay Buffington] [[dc5ae42](https://github.com/Netflix-Skunkworks/go-jira/commit/dc5ae42)]\n\n## 0.0.2 - 2015-02-18\n\n* add missing --override options on transition command\n* add browse command\n\n## 0.0.1 - 2015-02-18\n\n* Initial experimental release\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0595703125,
          "content": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.1318359375,
          "content": "NAME=jira\nGO?=go\n\nOS=$(shell uname -s)\nifeq ($(filter CYGWIN%,$(OS)),$(OS))\n\texport CWD=$(shell cygpath -wa .)\n\texport SEP=\\\\\n\texport CYGWIN=winsymlinks:native\n\tBIN ?= $(GOBIN)$(SEP)$(NAME).exe\nelse\n\texport CWD=$(shell pwd)\n\texport SEP=/\n\tBIN ?= $(GOBIN)$(SEP)$(NAME)\nendif\n\nDIST=$(CWD)$(SEP)dist\n\nGOBIN ?= $(CWD)\n\nCURVER ?= $(patsubst v%,%,$(shell [ -d .git ] && git describe --abbrev=0 --tags || grep ^\\#\\# CHANGELOG.md | awk '{print $$2; exit}'))\nLDFLAGS:= -w\nVERSION ?= development\n\nbuild:\n\t$(GO) build -gcflags=\"-e\" -v -ldflags \"$(LDFLAGS) -s\" -o '$(BIN)' cmd/jira/main.go\n\nvet:\n\t@$(GO) vet .\n\t@$(GO) vet ./jiracli\n\t@$(GO) vet ./jiracmd\n\t@$(GO) vet ./jiradata\n\t@$(GO) vet ./cmd/jira\n\nlint:\n\t@$(GO) get github.com/golang/lint/golint\n\t@golint .\n\t@golint ./jiracli\n\t@golint ./jiracmd\n\t@golint ./jiradata\n\t@golint ./cmd/jira\n\nall:\n\tGO111MODULE=off $(GO) get -u github.com/mitchellh/gox\n\trm -rf dist\n\tmkdir -p dist\n\tgox -ldflags=\"-w -s\" -ldflags=\"-X 'github.com/go-jira/jira.VERSION=$(VERSION)'\" -output=\"dist/github.com/go-jira/jira-{{.OS}}-{{.Arch}}\" -osarch=\"darwin/amd64 linux/386 linux/amd64 windows/386 windows/amd64\" ./cmd/jira\n\ninstall:\n\t${MAKE} GOBIN=$$HOME/bin build\n\nNEWVER ?= $(shell echo $(CURVER) | awk -F. '{print $$1\".\"$$2\".\"$$3+1}')\nTODAY  := $(shell date +%Y-%m-%d)\n\nchanges:\n\t@git log --pretty=format:\"* %s [%cn] [%h]\" --no-merges ^v$(CURVER) HEAD *.go jiracli/*.go jiradata/*.go jiracmd/*.go cmd/*/*.go *.lock | grep -vE 'gofmt|go fmt|version bump'\n\nupdate-changelog:\n\t@echo \"# Changelog\" > CHANGELOG.md.new; \\\n\techo >> CHANGELOG.md.new; \\\n\techo \"## $(NEWVER) - $(TODAY)\" >> CHANGELOG.md.new; \\\n\techo >> CHANGELOG.md.new; \\\n\t$(MAKE) --no-print-directory --silent changes | \\\n\tperl -pe 's{\\[([a-f0-9]+)\\]}{[[$$1](https://github.com/Netflix-Skunkworks/go-jira/commit/$$1)]}g' | \\\n\tperl -pe 's{\\#(\\d+)}{[#$$1](https://github.com/Netflix-Skunkworks/go-jira/issues/$$1)}g' >> CHANGELOG.md.new; \\\n\ttail -n +2 CHANGELOG.md >> CHANGELOG.md.new; \\\n    perl -pi -e 's{VERSION = \"$(CURVER)\"}{VERSION = \"$(NEWVER)\"}' jira.go; \\\n\tmv CHANGELOG.md.new CHANGELOG.md; \\\n\t$(NULL)\n\nupdate-usage:\n\t@perl -pi -e 'undef $$/; s|\\n```\\nusage.*?```|\"\\n```\\n\".qx{./jira --help}.\"```\"|esg' README.md\n\nrelease:\n\tmake update-usage\n\tgit diff --exit-code --quiet README.md || git commit -m \"Updated Usage\" README.md\n\tgit commit -m \"Updated Changelog\" CHANGELOG.md\n\tgit commit -m \"version bump\" jira.go\n\tgit tag v$(NEWVER)\n\tgit push --tags\n\nversion:\n\t@echo $(CURVER)\n\nclean: clean-password-store\n\trm -rf ./$(NAME)\n\nclean-password-store:\n\trm -f \"$(CWD)/_t/.password-store/GoJira/api-token:gojira@corybennett.org.gpg\"\n\trm -f \"$(CWD)/_t/.password-store/GoJira/api-token:mothra@corybennett.org.gpg\"\n\ntest-password-store:\n\tln -s \"api-token__gojira@corybennett.org.gpg\" \"$(CWD)/_t/.password-store/GoJira/api-token:gojira@corybennett.org.gpg\"\n\tln -s \"api-token__mothra@corybennett.org.gpg\" \"$(CWD)/_t/.password-store/GoJira/api-token:mothra@corybennett.org.gpg\"\n\nprove: test-password-store\n\tchmod -R g-rwx,o-rwx $(CWD)/_t/.gnupg\n\tOSHT_VERBOSE=1 prove -v _t/*.t\n\ngenerate:\n\tcd schemas && ./fetch-schemas.py\n\tgrep -h slipscheme jiradata/*.go | grep json | sort | uniq | awk -F\\/\\/ '{print $$2}' | while read cmd; do $$cmd; done\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 24.7158203125,
          "content": "[![Build Status](https://travis-ci.org/go-jira/jira.svg?branch=master)](https://travis-ci.org/go-jira/jira)\n[![GoDoc](https://godoc.org/github.com/go-jira/jira?status.svg)](https://godoc.org/github.com/go-jira/jira)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n\n# go-jira\n\nSimple command line client for Atlassian's Jira service written in Go.\n\n## GDPR USERNAME DISCLAIMER\n\nWhen this tool was initial written the \"username\" parameter was widely used in the Atlassian API.\nDue to GDPR restrictions this parameter was been almost completely phased out other then V1 login.\nThe \"--user\" field is still provided as a default global, however moving forward any usage of this field should be phased out in favor of the \"--login\" option. \n\nCommands which previously took a username will now expect an email address such as watch, create, assign, etc...\n\n## Install\n\n### Download\n\nYou can download one of the pre-built binaries for **go-jira** [here](https://github.com/go-jira/jira/releases).\n\n### Build\n\nYou can build and install the official repository with [Go](https://golang.org/dl/) (before running the below command, ensure you have `GO111MODULE=on` set in your environment):\n\n\tgo get github.com/go-jira/jira/cmd/jira\n\nThis will checkout this repository into `$GOPATH/src/github.com/go-jira/jira/`, build, and install it.\n\nIt should then be available in $GOPATH/bin/jira.\n\n## Usage\n\n\n#### Setting up TAB completion\n\nSince go-jira is built with the \"kingpin\" golang command line library we support bash/zsh shell completion automatically:\n\n * <https://github.com/alecthomas/kingpin/tree/v2.2.5#bashzsh-shell-completion>\n\nFor example, in bash, adding something along the lines of:\n\n  `eval \"$(jira --completion-script-bash)\"`\n\nto your bashrc, or .profile (assuming go-jira binary is already in your path) will cause jira to offer tab completion behavior.\n\n## Configuration\n\n**go-jira** uses a configuration hierarchy.  When loading the configuration from disk it will recursively look through all parent directories in your current path looking for a **.jira.d** directory.  If your current directory is not a child directory of your homedir, then your homedir will also be inspected for a **.jira.d** directory.  From all of **.jira.d** directories discovered **go-jira** will load a **&lt;command&gt;.yml** file (ie for `jira list` it will load `.jira.d/list.yml`) then it will merge in any properties from the **config.yml** if found.  The configuration properties found in a file closest to your current working directory will have precedence.  Properties overridden with command line options will have final precedence.\n\nThe complicated configuration hierarchy is used because **go-jira** attempts to be context aware.  For example, if you are working on a \"foo\" project and you `cd` into your project workspace, wouldn't it be nice if `jira ls` automatically knew to list only issues related to the \"foo\" project?  Likewise when you `cd` to the \"bar\" project then `jira ls` should only list issues related to \"bar\" project.  You can do this with by creating a configuration under your project workspace at **./.jira.d/config.yml** that looks like:\n\n```yaml\nproject: foo\n```\n\nYou will need to specify your local jira endpoint first, typically in your homedir like:\n\n```bash\nmkdir ~/.jira.d\n\ncat <<EOM >~/.jira.d/config.yml\nendpoint: https://jira.mycompany.com\nEOM\n```\n\nThen use `jira login` to authenticate yourself as $USER. To change your username, use the `-u` CLI flag or set `user:` in your config.yml\n\n### Dynamic Configuration\n\nIf the **.jira.d/config.yml** file is executable, then **go-jira** will attempt to execute the file and use the stdout for configuration.  You can use this to customize templates or other overrides depending on what type of operation you are running.  For example if you would like to use the \"table\" template when ever you run `jira ls`, then you can create a template like this:\n\n```sh\n#!/bin/sh\n\necho \"endpoint: https://jira.mycompany.com\"\necho \"editor: emacs -nw\"\n\ncase $JIRA_OPERATION in\n    list)\n      echo \"template: table\";;\nesac\n```\n\nOr if you always set the same overrides when you create an issue for your project you can do something like this:\n\n```sh\n#!/bin/sh\necho \"project: GOJIRA\"\n\ncase $JIRA_OPERATION in\n    create)\n        echo \"assignee: $USER\"\n        echo \"watchers: mothra\"\n        ;;\nesac\n```\n\n### Custom Commands\nYou can now create custom commands for `jira` just by editing your `.jira.d/config.yml` config file.  These commands are effectively shell-scripts that can have documented options and arguments. The basic format is like:\n```yaml\ncustom-commands:\n  - command1\n  - command2\n```\n##### Commands\nWhere the individual commands are maps with these keys:\n* `name: string` [**required**] This is the command name, so for `jira foobar` you would have `name: foobar`\n* `help: string` This is help message displayed in the usage for the command\n* `hidden: bool` This command will be hidden from users, but still executable.  Sometimes useful for constructing complex commands where one custom command might call another.\n* `default: bool` Use this for compound command groups.  If you wanted to have `jira foo bar` and `jira foo baz` you would have two commands with `name: foo bar` and `name: foo baz`.  Then if you wanted `jira foo baz` to be called by default when you type `jira foo` you would set `default: true` for that custom command.\n* `options: list`  This is the list of possible option flags that the command will accept\n* `args: list` This is the list of command arguments (like the ISSUE) that the command will accept.\n* `aliases: string list`: This is a list of alternate names that the user can provide on the command line to run the same command.  Typically used to shorten the command name or provide alternatives that users might expect.\n* `script: string` [**required**] This is the script that will be executed as the action for this command. The value will be treated as a template and substitutions for options and arguments will be made before executing.\n\n##### Options\nThese are possible keys under the command `options` property:\n* `name: string` [**required**] Name of the option, so `name: foobar` will result in `--foobar` option.\n* `help: string` The help message displayed in usage for the option.\n* `type: string`:  The type of the option, can be one of these values: `BOOL`, `COUNTER`, `ENUM`, `FLOAT32`, `FLOAT64`, `INT8`, `INT16`, `INT32`, `INT64`, `INT`, `STRING`, `STRINGMAP`, `UINT8`, `UINT16`, `UINT32`,  `UINT64` and `UINT`.  Most of these are primitive data types an should be self-explanatory.  The default type is `STRING`. There are some special types:\n  * `COUNTER` will be an integer type that increments each time the option is used.  So something like `--count --count` will results in `{{options.count}}` of `2`.\n  * `ENUM` type is used with the `enum` property.  The raw type is a string and **must** be one of the values listed in the `enum` property.\n  * `STRINGMAP` is a `string => string` map with the format of `KEY=VALUE`.  So `--override foo=bar --override bin=baz` will allow for `{{options.override.foo}}` to be `bar` and `{{options.override.bin}}` to be `baz`.\n* `short: char` The single character option to be used so `short: c` will allow for `-c`.\n* `required: bool` Indicate that this option must be provided on the command line.  Conflicts with the `default` property.\n* `default: any` Specify the default value for the option.  Conflicts with the `required` property.\n* `hidden: bool` Hide the option from the usage help message, but otherwise works fine.  Sometimes useful for developer options that user should not play with.\n* `repeat: bool` Indicate that this option can be repeated.  Not applicable for `COUNTER` and `STRINGMAP` types.  This will turn the option value into an array that you can iterate over.  So `--day Monday --day Thursday` can be used like `{{range options.day}}Day: {{.}}{{end}}`\n* `enum: string list` Used with the `type: ENUM` property, it is a list of strings values that represent the set of possible values the option accepts.\n\n##### Arguments\nThese are possible keys under the command `args` property:\n* `name: string` [**required**] Name of the option, so `name: ISSUE` will show in the usage as `jira <command> ISSUE`.  This also represents the name of the argument to be used in the script template, so `{{args.ISSUE}}`.\n* `help: string` The help message displayed in usage for the argument.\n* `type: string`:  The type of the argument, can be one of these values: `BOOL`, `COUNTER`, `ENUM`, `FLOAT32`, `FLOAT64`, `INT8`, `INT16`, `INT32`, `INT64`, `INT`, `STRING`, `STRINGMAP`, `UINT8`, `UINT16`, `UINT32`,  `UINT64` and `UINT`.  Most of these are primitive data types an should be self-explanatory.  The default type is `STRING`.  There are some special types:\n  * `COUNTER` will be an integer type that increments each the argument is provided  So something like `jira <command> ISSUE-12 ISSUE-23` will results in `{{args.ISSUE}}` of `2`.\n  * `ENUM` type is used with the `enum` property.  The raw type is a string and **must** be one of the values listed in the `enum` property.\n  * `STRINGMAP` is a `string => string` map with the format of `KEY=VALUE`.  So `jira <command> foo=bar bin=baz` along with a `name: OVERRIDE` property will allow for `{{args.OVERRIDE.foo}}` to be `bar` and `{{args.OVERRIDE.bin}}` to be `baz`.\n* `required: bool` Indicate that this argument must be provided on the command line.  Conflicts with the `default` property.\n* `default: any` Specify the default value for the argument.  Conflicts with the `required` property.\n* `repeat: bool` Indicate that this argument can be repeated.  Not applicable for `COUNTER` and `STRINGMAP` types.  This will turn the template value into an array that you can iterate over.  So `jira <command> ISSUE-12 ISSUE-23` can be used like `{{range args.ISSUE}}Issue: {{.}}{{end}}`\n* `enum: string list` Used with the `type: ENUM` property, it is a list of strings values that represent the set of possible values for the argument.\n\n##### Script Template\nThe `script` property is a template that would produce `/bin/sh` compatible syntax after the template has been processed.  There are 2 key template functions `{{args}}` and `{{options}}` that return the parsed arguments and option flags as a map.\n\nTo demonstrate how you might use args and options here is a `custom-test` command:\n```yaml\ncustom-commands:\n  - name: custom-test\n    help: Testing the custom commands\n    options:\n      - name: abc\n        short: a\n        default: default\n      - name: day\n        type: ENUM\n        enum:\n          - Monday\n          - Tuesday\n          - Wednesday\n          - Thursday\n          - Friday\n        required: true\n    args:\n      - name: ARG\n        required: true\n      - name: MORE\n        repeat: true\n    script: |\n      echo COMMAND {{args.ARG}} --abc {{options.abc}} --day {{options.day}} {{range $more := args.MORE}}{{$more}} {{end}}\n```\n\nThen to run it:\n```\n$ jira custom-test\nERROR Invalid Usage: required flag --day not provided\n\n$ jira custom-test --day Sunday\nERROR Invalid Usage: enum value must be one of Monday,Tuesday,Wednesday,Thursday,Friday, got 'Sunday'\n\n$ jira custom-test --day Tuesday\nERROR Invalid Usage: required argument 'ARG' not provided\n\n$ jira custom-test --day Tuesday arg1\nCOMMAND arg1 --abc default --day Tuesday\n\n$ jira custom-test --day Tuesday arg1 more1 more2 more3\nCOMMAND arg1 --abc default --day Tuesday more1 more2 more3\n\n$ jira custom-test --day Tuesday arg1 more1 more2 more3 --abc non-default\nCOMMAND arg1 --abc non-default --day Tuesday more1 more2 more3\n\n$ jira custom-test --day Tuesday arg1 more1 more2 more3 -a short-non-default\nCOMMAND arg1 --abc short-non-default --day Tuesday more1 more2 more3\n```\n\nThe script has access to all the environment variables that are in your current environment plus those that `jira` will set.  `jira` sets environment variables for each config property it has parsed from `.jira.d/config.yml` or the command configs at `.jira.d/<command>.yml`.  It might be useful to see all environment variables that `jira` is producing, so here is a simple custom command to list them:\n```yaml\ncustom-commands:\n  - name: env\n    help: print the JIRA environment variables available to custom commands\n    script: |\n      env | grep JIRA\n ```\n\nYou could use the environment variables automatically, so if your `.jira.d/config.yml` looks something like this:\n```yaml\nproject: PROJECT\ncustom-commands:\n  - name: print-project\n    help: print the name of the configured project\n    script: \"echo $JIRA_PROJECT\"\n```\n\n##### Examples\n\n* `jira mine` for listing issues assigned to you\n```yaml\ncustom-commands:\n  - name: mine\n    help: display issues assigned to me\n    script: |-\n      if [ -n \"$JIRA_PROJECT\" ]; then\n          # if `project: ...` configured just list the issues for current project\n          {{jira}} list --template table --query \"resolution = unresolved and assignee=currentuser() and project = $JIRA_PROJECT ORDER BY priority asc, created\"\n      else\n          # otherwise list issues for all project\n          {{jira}} list --template table --query \"resolution = unresolved and assignee=currentuser() ORDER BY priority asc, created\"\n      fi\n```\n* `jira sprint` for listing issues in your current sprint\n```yaml\ncustom-commands:\n  - name: sprint\n    help: display issues for active sprint\n    script: |-\n      if [ -n \"$JIRA_PROJECT\" ]; then\n          # if `project: ...` configured just list the issues for current project\n          {{jira}} list --template table --query \"sprint in openSprints() and type != epic and resolution = unresolved and project=$JIRA_PROJECT ORDER BY rank asc, created\"\n      else\n          # otherwise list issues for all project\n          {{jira}} list --template table --query \"sprint in openSprints() and type != epic and resolution = unresolved ORDER BY rank asc, created\"\n      fi\n```\n\n### Editing\n\nWhen you run command like `jira edit` it will open up your favorite editor with the templatized output so you can quickly edit.  When the editor\ncloses **go-jira** will submit the completed form.  The order which **go-jira** attempts to determine your preferred editor is:\n\n* **editor** property in any config.yml file\n* **JIRA_EDITOR** environment variable\n* **EDITOR** environment variable\n* vim\n\n### Templates\n\n**go-jira** has the ability to customize most output (and editor input) via templates.  There are default templates available for all operations,\nwhich may or may not work for your actual jira implementation.  Jira is endlessly customizable, so it is hard to provide default templates\nthat will work for all issue types.\n\nWhen running a command like `jira edit` it will look through the current directory hierarchy trying to find a file that matches **.jira.d/templates/edit**,\nif found it will use that file as the template, otherwise it will use the default **edit** template hard-coded into **go-jira**.  You can export the default\nhard-coded templates with `jira export-templates` which will write them to **~/.jira.d/templates/**.\n\n#### Writing/Editing Templates\n\nFirst the basic templating functionality is defined by the Go language 'text/template' library.  The library reference documentation can be found [here](https://golang.org/pkg/text/template/), and there is a good primer document [here](https://gohugo.io/templates/go-templates/).  `go-jira` also provides a few extra helper functions to make it a bit easier to format the data, those functions are defined [here](https://github.com/go-jira/jira/blob/master/jiracli/templates.go#L64).\n\nKnowing what data and fields are available to any given template is not obvious. The easiest approach to determine what is available is to use the `debug` template on any given operation.  For example to find out what is available to the \"view\" templates, you can use:\n```\njira view GOJIRA-321 -t debug\n```\n\nThis will print out the data in JSON format that is available to the template.  You can do this for any other operation, like \"list\":\n```\njira list -t debug\n```\n\n### Authentication\n\n#### Atlassian Cloud\n\nFor Atlassian Cloud hosted Jira [API Tokens are now required](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-basic-auth-and-cookie-based-auth/).  You will automatically be prompted for an API Token if your jira endpoint ends in `.atlassian.net`.\n\n##### Quickstart API Token and Keychain\n\n1. Edit your config or execute the snippit (make sure to replace `<SUBDOMAIN>` and `<EMAIL>`)\n```\nexport SUBDOMAIN=\"https://<SUBDOMAIN>.atlassian.net\"\nexport EMAIL=\"<EMAIL>\"\nmkdir -p ~/.jira.d\nprintf \"endpoint: $SUBDOMAIN\\nuser: $EMAIL\\npassword-source: keyring\" > ~/.jira.d/config.yml\n```\n2. Create a new API Token at [id.atlassian.com](https://id.atlassian.com/manage-profile/security)\n3. Execute `jira session` and enter your API Token. `jira` will add your session to the keyring.\n\n#### Private Jira Service\nIf you are using a private Jira service, you can force `jira` to use an api-token by setting the `authentication-method: api-token` property in your `$HOME/.jira.d/config.yml` file.  The API Token needs to be presented to the Jira service on every request, so it is recommended to store this API Token security within your OS's keyring, or using the `pass`/`gopass` service as documented below so that it can be programmatically accessed via `jira` and not prompt you every time.  For a less-secure option you can also provide the API token via a `JIRA_API_TOKEN` environment variable.  If you are unable to use an api-token for an Atlassian Cloud hosted Jira then you can still force `jira` to use the old session based authentication (until it the hosted system stops accepting it) by setting `authentication-method: session`.\n\nThe API Token authentication requires both the token and the email of the user. The email mut be set in the  `user:` in your config.yml. Failure to provide the `user` will result in a 401 error.\n\nIf your Jira service still allows you to use the Session based authentication method then `jira` will prompt for a password automatically when get a response header from the Jira service that indicates you do not have an active session (ie the `X-Ausername` header is set to `anonymous`).  Then after authentication we cache the `cloud.session.token` cookie returned by the service [session login api](https://docs.atlassian.com/jira/REST/cloud/#auth/1/session-login) and reuse that on subsequent requests.  Typically this cookie will be valid for several hours (depending on the service configuration).  To automatically securely store your password for easy reuse by jira You can enable a `password-source` via `.jira.d/config.yml` with possible values of `keyring`, `pass` or `gopass`.\n\nDepending on how your private Jira service is configured, API tokens may require the \"[Bearer][]\" authentication scheme instead of the traditional \"[Basic][]\" [authentication scheme][scheme]. In this case, set the `authentication-method: bearer-token` property in your `$HOME/.jira.d/config.yml` file.\n\n[scheme]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication#authentication_schemes\n[Bearer]: https://datatracker.ietf.org/doc/html/rfc6750\n[Basic]: https://tools.ietf.org/html/rfc7617\n\n| **API token [scheme][]** | `authentication-method` | **Example HTTP request header**                 |\n|:------------------------:|-------------------------|-------------------------------------------------|\n|        [Basic][]         | `api-token`             | `Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQK` |\n|        [Bearer][]        | `bearer-token`          | `Authorization: Bearer MY_TOKEN`                |\n\n#### User vs Login\nThe Jira service has sometimes differing opinions about how a user is identified.  In other words the ID you login with might not be ID that the jira system recognized you as.  This matters when trying to identify a user via various Jira REST APIs (like issue assignment).  This is especially relevant when trying to authenticate with an API Token where the authentication user is usually an email address, but within the Jira system the user is identified by a user name.  To accommodate this `jira` now supports two different properties in the config file.  So when authentication using the API Tokens you will likely want something like this in your `$HOME/.jira.d/config.yml` file:\n```yaml\nuser: person\nlogin: person@example.com\n```\n\nYou can also override these values on the command line with `jira --user person --login person@example.com`.  The `login` value will be used only for authentication purposes, the `user` value will be used when a user name is required for any Jira service API calls.\n\n#### `keyring` password source\nOn OSX and Linux there are a few keyring providers that `go-jira` can use (via this [golang module](https://github.com/tmc/keyring)).  To integrate `go-jira` with a supported keyring just add this configuration to `$HOME/.jira.d/config.yml`:\n```yaml\npassword-source: keyring\n```\nAfter setting this and issuing a `jira login`, your credentials will be stored in your platform's backend (e.g. Keychain for Mac OS X) automatically. Subsequent operations, like a `jira ls`, should automatically login.\n\n#### `pass` password source\nAn alternative to the keyring password source is the `pass` tool (documentation [here](https://www.passwordstore.org/)).  This uses gpg to encrypt/decrypt passwords on demand and by using `gpg-agent` you can cache the gpg credentials for a period of time so you will not be prompted repeatedly for decrypting the passwords.  The advantage over the keyring integration is that `pass` can be used on more platforms than OSX and Linux, although it does require more setup.  To use `pass` for password storage and retrieval via `go-jira` just add this configuration to `$HOME/.jira.d/config.yml`:\n```yaml\npassword-source: pass\npassword-name: jira.example.com/myuser\n```\n\nThis assumes you have already setup `pass` correctly on your system.  Specifically you will need to have created a gpg key like this:\n\n```\n$ gpg --gen-key\n```\n\nThen you will need the GPG Key ID you want associated with `pass`.  First list the available keys:\n```\n$ gpg --list-keys\n/home/gojira/.gnupg/pubring.gpg\n-------------------------------------------------\npub   2048R/A307D709 2016-12-18\nuid                  Go Jira <gojira@example.com>\nsub   2048R/F9A047B8 2016-12-18\n```\n\nThen initialize the `pass` tool to use the correct key:\n```\n$ pass init \"Go Jira <gojira@example.com>\"\n```\n\nNow insert your password with the name you configured.\n\n```\n$ pass insert jira.example.com/myuser\n```\n\nYou probably want to setup gpg-agent so that you don't have to type in your gpg passphrase all the time.  You can get `gpg-agent` to automatically start by adding something like this to your `$HOME/.bashrc`\n```bash\nif [ -f $HOME/.gpg-agent-info ]; then\n    . $HOME/.gpg-agent-info\n    export GPG_AGENT_INFO\nfi\n\nif [ ! -f $HOME/.gpg-agent.conf ]; then\n  cat <<EOM >$HOME/.gpg-agent.conf\ndefault-cache-ttl 604800\nmax-cache-ttl 604800\ndefault-cache-ttl-ssh 604800\nmax-cache-ttl-ssh 604800\nEOM\nfi\n\nif [ -n \"${GPG_AGENT_INFO}\" ]; then\n    nc  -U \"${GPG_AGENT_INFO%%:*}\" >/dev/null </dev/null\n    if [ ! -S \"${GPG_AGENT_INFO%%:*}\" -o $? != 0 ]; then\n        # set passphrase cache so I only have to type my passphrase once a day\n        eval $(gpg-agent --options $HOME/.gpg-agent.conf --daemon --write-env-file $HOME/.gpg-agent-info --use-standard-socket --log-file $HOME/tmp/gpg-agent.log --verbose)\n    fi\nfi\nexport GPG_TTY=$(tty)\n```\n\n#### `gopass` password source\nThere is also the possibility to use [gopass](https://www.gopass.pw/) as a password source. `gopass` (like `pass`) uses gpg to encrypt/decrypt passwords. To use `gopass` for password storagte and retrieval via `go-jira` just add this configuration to `$HOME/.jira.d/config.yml`:\n```yaml\npassword-source: gopass\npassword-name: jira.example.com/myuser\n```\n\nFor this to work, you need a working `gopass` installation. \n\nTo configure your `gpg-agent` to cache your gpg passphrase take a look at the `pass` section of the readme. \n\n#### `stdin` password source\n\nWhen `password-source` is set to `stdin`, the `jira login` command will read from stdin until EOF, and the bytes read will be the used as the password. This is useful if you have some other programmatic method for fetching passwords. For example, if `password-generator` creates a one-time password and prints it to stdout, you could use it like this.\n\n```bash\n$ ./password-generator | jira login --endpoint=https://my.jira.endpoint.com --user=USERNAME\n```\n\n#### Switch path  used for password source\nFor `gopass` and `pass` it is possible to specify the full path for the `password-source` tool  used for retrieval of the password. This can be accomplised\nby setting the `password-source-path` option in the configuration file. \n\nE.g.\n```yaml\npassword-source: gopass\npassword-name: jira.example.com/myuser\npassword-source-path: /path/to/my-special-gopass\n```\n\nThis will cause go-jira to use the `gopass` style cli interaction with the `my-special-gopass` binary.\n\nIf you ommit the `password-source-path` option, either `gopass` (for `gopass`) or `pass` (for `pass`) \nwill be used.\n"
        },
        {
          "name": "_t",
          "type": "tree",
          "content": null
        },
        {
          "name": "attachment.go",
          "type": "blob",
          "size": 1.130859375,
          "content": "package jira\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/go-jira/jira/jiradata\"\n)\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/attachment-getAttachment\nfunc (j *Jira) GetAttachment(id string) (*jiradata.Attachment, error) {\n\treturn GetAttachment(j.UA, j.Endpoint, id)\n}\n\nfunc GetAttachment(ua HttpClient, endpoint string, id string) (*jiradata.Attachment, error) {\n\turi := URLJoin(endpoint, \"rest/api/2/attachment\", id)\n\tresp, err := ua.GetJSON(uri)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 200 {\n\t\tresults := &jiradata.Attachment{}\n\t\treturn results, json.NewDecoder(resp.Body).Decode(results)\n\t}\n\treturn nil, responseError(resp)\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/attachment-removeAttachment\nfunc (j *Jira) RemoveAttachment(id string) error {\n\treturn RemoveAttachment(j.UA, j.Endpoint, id)\n}\n\nfunc RemoveAttachment(ua HttpClient, endpoint string, id string) error {\n\turi := URLJoin(endpoint, \"rest/api/2/attachment\", id)\n\tresp, err := ua.Delete(uri)\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 204 {\n\t\treturn nil\n\t}\n\treturn responseError(resp)\n}\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "component.go",
          "type": "blob",
          "size": 0.916015625,
          "content": "package jira\n\nimport (\n\t\"bytes\"\n\t\"encoding/json\"\n\n\t\"github.com/go-jira/jira/jiradata\"\n)\n\ntype ComponentProvider interface {\n\tProvideComponent() *jiradata.Component\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/component-createComponent\nfunc (j *Jira) CreateComponent(cp ComponentProvider) (*jiradata.Component, error) {\n\treturn CreateComponent(j.UA, j.Endpoint, cp)\n}\n\nfunc CreateComponent(ua HttpClient, endpoint string, cp ComponentProvider) (*jiradata.Component, error) {\n\treq := cp.ProvideComponent()\n\tencoded, err := json.Marshal(req)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\turi := URLJoin(endpoint, \"rest/api/2/component\")\n\tresp, err := ua.Post(uri, \"application/json\", bytes.NewBuffer(encoded))\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 201 {\n\t\tresults := &jiradata.Component{}\n\t\treturn results, json.NewDecoder(resp.Body).Decode(results)\n\t}\n\treturn nil, responseError(resp)\n}\n"
        },
        {
          "name": "epic.go",
          "type": "blob",
          "size": 2.8623046875,
          "content": "package jira\n\nimport (\n\t\"bytes\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"net/url\"\n\t\"strings\"\n\n\t\"github.com/coryb/oreo\"\n\n\t\"github.com/go-jira/jira/jiradata\"\n)\n\n// https://docs.atlassian.com/jira-software/REST/latest/#agile/1.0/epic-getIssuesForEpic\nfunc (j *Jira) EpicSearch(epic string, sp SearchProvider) (*jiradata.SearchResults, error) {\n\treturn EpicSearch(j.UA, j.Endpoint, epic, sp)\n}\n\nfunc EpicSearch(ua HttpClient, endpoint string, epic string, sp SearchProvider) (*jiradata.SearchResults, error) {\n\treq := sp.ProvideSearchRequest()\n\t// encoded, err := json.Marshal(req)\n\t// if err != nil {\n\t// \treturn nil, err\n\t// }\n\turi, err := url.Parse(URLJoin(endpoint, \"rest/agile/1.0/epic\", epic, \"issue\"))\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tparams := url.Values{}\n\tif len(req.Fields) > 0 {\n\t\tparams.Add(\"fields\", strings.Join(req.Fields, \",\"))\n\t}\n\tif req.JQL != \"\" {\n\t\tparams.Add(\"jql\", req.JQL)\n\t}\n\tif req.MaxResults != 0 {\n\t\tparams.Add(\"maxResults\", fmt.Sprintf(\"%d\", req.MaxResults))\n\t}\n\tif req.StartAt != 0 {\n\t\tparams.Add(\"startAt\", fmt.Sprintf(\"%d\", req.StartAt))\n\t}\n\tif req.ValidateQuery != \"\" {\n\t\tparams.Add(\"validateQuery\", req.ValidateQuery)\n\t}\n\turi.RawQuery = params.Encode()\n\n\tresp, err := ua.Do(oreo.RequestBuilder(uri).WithHeader(\"Accept\", \"application/json\").Build())\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 200 {\n\t\tresults := &jiradata.SearchResults{}\n\t\treturn results, json.NewDecoder(resp.Body).Decode(results)\n\t}\n\treturn nil, responseError(resp)\n}\n\ntype EpicIssuesProvider interface {\n\tProvideEpicIssues() *jiradata.EpicIssues\n}\n\n// https://docs.atlassian.com/jira-software/REST/latest/#agile/1.0/epic-moveIssuesToEpic\nfunc (j *Jira) EpicAddIssues(epic string, eip EpicIssuesProvider) error {\n\treturn EpicAddIssues(j.UA, j.Endpoint, epic, eip)\n}\n\nfunc EpicAddIssues(ua HttpClient, endpoint string, epic string, eip EpicIssuesProvider) error {\n\treq := eip.ProvideEpicIssues()\n\tencoded, err := json.Marshal(req)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\turi := URLJoin(endpoint, \"rest/agile/1.0/epic\", epic, \"issue\")\n\tresp, err := ua.Post(uri, \"application/json\", bytes.NewBuffer(encoded))\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 204 {\n\t\treturn nil\n\t}\n\treturn responseError(resp)\n}\n\n// https://docs.atlassian.com/jira-software/REST/latest/#agile/1.0/epic-removeIssuesFromEpic\nfunc (j *Jira) EpicRemoveIssues(eip EpicIssuesProvider) error {\n\treturn EpicRemoveIssues(j.UA, j.Endpoint, eip)\n}\n\nfunc EpicRemoveIssues(ua HttpClient, endpoint string, eip EpicIssuesProvider) error {\n\treq := eip.ProvideEpicIssues()\n\tencoded, err := json.Marshal(req)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\turi := URLJoin(endpoint, \"rest/agile/1.0/epic/none/issue\")\n\tresp, err := ua.Post(uri, \"application/json\", bytes.NewBuffer(encoded))\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 204 {\n\t\treturn nil\n\t}\n\treturn responseError(resp)\n}\n"
        },
        {
          "name": "error.go",
          "type": "blob",
          "size": 0.533203125,
          "content": "package jira\n\nimport (\n\t\"encoding/json\"\n\t\"net/http\"\n\n\t\"github.com/go-jira/jira/jiradata\"\n)\n\nfunc responseError(resp *http.Response) error {\n\tresults := &jiradata.ErrorCollection{}\n\tif err := json.NewDecoder(resp.Body).Decode(results); err != nil {\n\t\tresults.Status = resp.StatusCode\n\t\tresults.ErrorMessages = append(results.ErrorMessages, err.Error())\n\t}\n\tif len(results.ErrorMessages) == 0 && len(results.Errors) == 0 {\n\t\tresults.Status = resp.StatusCode\n\t\tresults.ErrorMessages = append(results.ErrorMessages, resp.Status)\n\t}\n\treturn results\n}\n"
        },
        {
          "name": "fields.go",
          "type": "blob",
          "size": 0.603515625,
          "content": "package jira\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/go-jira/jira/jiradata\"\n)\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/field-getFields\nfunc (j *Jira) GetFields() ([]jiradata.Field, error) {\n\treturn GetFields(j.UA, j.Endpoint)\n}\n\nfunc GetFields(ua HttpClient, endpoint string) ([]jiradata.Field, error) {\n\turi := URLJoin(endpoint, \"rest/api/2/field\")\n\tresp, err := ua.GetJSON(uri)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer resp.Body.Close()\n\tif resp.StatusCode == 200 {\n\t\tresults := []jiradata.Field{}\n\t\treturn results, json.NewDecoder(resp.Body).Decode(&results)\n\t}\n\treturn nil, responseError(resp)\n}\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 2.3232421875,
          "content": "module github.com/go-jira/jira\n\ngo 1.12\n\nrequire (\n\tgithub.com/Masterminds/goutils v1.1.0 // indirect\n\tgithub.com/Masterminds/semver v1.5.0 // indirect\n\tgithub.com/Masterminds/sprig v2.21.0+incompatible\n\tgithub.com/Netflix/go-expect v0.0.0-20180928190340-9d1f4485533b // indirect\n\tgithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc // indirect\n\tgithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf // indirect\n\tgithub.com/cheekybits/genny v1.0.0 // indirect\n\tgithub.com/coryb/figtree v1.0.1-0.20190907170512-58176d03ef0d\n\tgithub.com/coryb/kingpeon v0.0.0-20180107011214-9a669f143f2e\n\tgithub.com/coryb/oreo v0.0.0-20180804211640-3e1b88fc08f1\n\tgithub.com/davecgh/go-spew v1.1.0 // indirect\n\tgithub.com/fatih/camelcase v1.0.0 // indirect\n\tgithub.com/google/go-cmp v0.5.2\n\tgithub.com/google/uuid v1.1.1 // indirect\n\tgithub.com/guelfey/go.dbus v0.0.0-20131113121618-f6a3a2366cc3 // indirect\n\tgithub.com/hinshun/vt10x v0.0.0-20180809195222-d55458df857c // indirect\n\tgithub.com/huandu/xstrings v1.2.0 // indirect\n\tgithub.com/imdario/mergo v0.3.7 // indirect\n\tgithub.com/jinzhu/copier v0.0.0-20180308034124-7e38e58719c3\n\tgithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51\n\tgithub.com/kr/pretty v0.1.0\n\tgithub.com/kr/pty v1.1.4 // indirect\n\tgithub.com/mattn/go-colorable v0.0.9 // indirect\n\tgithub.com/mattn/go-isatty v0.0.3 // indirect\n\tgithub.com/mgutz/ansi v0.0.0-20170206155736-9520e82c474b\n\tgithub.com/mitchellh/go-wordwrap v1.0.1\n\tgithub.com/olekukonko/tablewriter v0.0.3\n\tgithub.com/pkg/browser v0.0.0-20170505125900-c90ca0c84f15\n\tgithub.com/pkg/errors v0.8.0\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/stretchr/testify v1.2.2\n\tgithub.com/theckman/go-flock v0.4.0 // indirect\n\tgithub.com/tidwall/gjson v0.0.0-20180711011033-ba784d767ac7\n\tgithub.com/tidwall/match v1.0.0 // indirect\n\tgithub.com/tmc/keyring v0.0.0-20171121202319-839169085ae1\n\tgolang.org/x/crypto v0.0.0-20180723164146-c126467f60eb\n\tgolang.org/x/net v0.0.0-20171102191033-01c190206fbd\n\tgolang.org/x/sys v0.0.0-20180727230415-bd9dbc187b6e // indirect\n\tgopkg.in/AlecAivazis/survey.v1 v1.6.1\n\tgopkg.in/alecthomas/kingpin.v2 v2.2.6\n\tgopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127 // indirect\n\tgopkg.in/coryb/yaml.v2 v2.0.0-20180616071044-0e40e46f7153\n\tgopkg.in/op/go-logging.v1 v1.0.0-20160211212156-b2cb9fa56473\n\tgopkg.in/yaml.v2 v2.2.2 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 9.201171875,
          "content": "github.com/Masterminds/goutils v1.1.0 h1:zukEsf/1JZwCMgHiK3GZftabmxiCw4apj3a28RPBiVg=\ngithub.com/Masterminds/goutils v1.1.0/go.mod h1:8cTjp+g8YejhMuvIA5y2vz3BpJxksy863GQaJW2MFNU=\ngithub.com/Masterminds/semver v1.5.0 h1:H65muMkzWKEuNDnfl9d70GUjFniHKHRbFPGBuZ3QEww=\ngithub.com/Masterminds/semver v1.5.0/go.mod h1:MB6lktGJrhw8PrUyiEoblNEGEQ+RzHPF078ddwwvV3Y=\ngithub.com/Masterminds/sprig v2.21.0+incompatible h1:nPETddHHEG1ucL7H5t5T95IuWaDe5qB9ImEaztiXgRc=\ngithub.com/Masterminds/sprig v2.21.0+incompatible/go.mod h1:y6hNFY5UBTIWBxnzTeuNhlNS5hqE0NB0E6fgfo2Br3o=\ngithub.com/Netflix/go-expect v0.0.0-20180928190340-9d1f4485533b h1:sSQK05nvxs4UkgCJaxihteu+r+6ela3dNMm7NVmsS3c=\ngithub.com/Netflix/go-expect v0.0.0-20180928190340-9d1f4485533b/go.mod h1:oX5x61PbNXchhh0oikYAH+4Pcfw5LKv21+Jnpr6r6Pc=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc h1:cAKDfWh5VpdgMhJosfJnn5/FoN2SRZ4p7fJNX58YPaU=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf h1:qet1QNfXsQxTZqLG4oE62mJzwPIB8+Tee4RNCL9ulrY=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/cheekybits/genny v1.0.0 h1:uGGa4nei+j20rOSeDeP5Of12XVm7TGUd4dJA9RDitfE=\ngithub.com/cheekybits/genny v1.0.0/go.mod h1:+tQajlRqAUrPI7DOSpB0XAqZYtQakVtB7wXkRAgjxjQ=\ngithub.com/coryb/figtree v0.0.0-20180728224503-071d1ef303df h1:cS4Z9Nlv8J4UqFbLp9ltZypgenm2p3Jeg0yqLfpH2pc=\ngithub.com/coryb/figtree v0.0.0-20180728224503-071d1ef303df/go.mod h1:uAkZUEGm6dROpxfy+8vXLs7JrLCI4O+gQyKAuISxI/g=\ngithub.com/coryb/figtree v1.0.1-0.20190907170512-58176d03ef0d h1:99xxg8FYj+5TYg88DxA4xL8ODuI6OvuSu35WQOVPDPg=\ngithub.com/coryb/figtree v1.0.1-0.20190907170512-58176d03ef0d/go.mod h1:uAkZUEGm6dROpxfy+8vXLs7JrLCI4O+gQyKAuISxI/g=\ngithub.com/coryb/kingpeon v0.0.0-20180107011214-9a669f143f2e h1:tGmk9Tuyz7fKuBq/d3nFJvVWRvc48MEBKQC4uYV3wb0=\ngithub.com/coryb/kingpeon v0.0.0-20180107011214-9a669f143f2e/go.mod h1:gBc0uEH6swbOMoR7VkVuW7w5fGvZu/KHeSgxBR4Ta7Q=\ngithub.com/coryb/oreo v0.0.0-20180804211640-3e1b88fc08f1 h1:Hh0qSvmvoAGL8VxvEoUv9UuUf9XlKcQtSxAMTz1kqfE=\ngithub.com/coryb/oreo v0.0.0-20180804211640-3e1b88fc08f1/go.mod h1:l/wuS2rM8ostk0aApWje8tsZNWJPOc2TVr85B0n3e6M=\ngithub.com/davecgh/go-spew v1.1.0 h1:ZDRjVQ15GmhC3fiQ8ni8+OwkZQO4DARzQgrnXU1Liz8=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/fatih/camelcase v1.0.0 h1:hxNvNX/xYBp0ovncs8WyWZrOrpBNub/JfaMvbURyft8=\ngithub.com/fatih/camelcase v1.0.0/go.mod h1:yN2Sb0lFhZJUdVvtELVWefmrXpuZESvPmqwoZc+/fpc=\ngithub.com/google/go-cmp v0.5.2 h1:X2ev0eStA3AbceY54o37/0PQ/UWqKEiiO2dKL5OPaFM=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/uuid v1.1.1 h1:Gkbcsh/GbpXz7lPftLA3P6TYMwjCLYm83jiFQZF/3gY=\ngithub.com/google/uuid v1.1.1/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/guelfey/go.dbus v0.0.0-20131113121618-f6a3a2366cc3 h1:fngCxKbvZdctIsWj2hYijhAt4iK0JXSSA78B36xP0yI=\ngithub.com/guelfey/go.dbus v0.0.0-20131113121618-f6a3a2366cc3/go.mod h1:0CNX5Cvi77WEH8llpfZ/ieuqyceb1cnO5//b5zzsnF8=\ngithub.com/hinshun/vt10x v0.0.0-20180809195222-d55458df857c h1:kp3AxgXgDOmIJFR7bIwqFhwJ2qWar8tEQSE5XXhCfVk=\ngithub.com/hinshun/vt10x v0.0.0-20180809195222-d55458df857c/go.mod h1:DqJ97dSdRW1W22yXSB90986pcOyQ7r45iio1KN2ez1A=\ngithub.com/huandu/xstrings v1.2.0 h1:yPeWdRnmynF7p+lLYz0H2tthW9lqhMJrQV/U7yy4wX0=\ngithub.com/huandu/xstrings v1.2.0/go.mod h1:DvyZB1rfVYsBIigL8HwpZgxHwXozlTgGqn63UyNX5k4=\ngithub.com/imdario/mergo v0.3.7 h1:Y+UAYTZ7gDEuOfhxKWy+dvb5dRQ6rJjFSdX2HZY1/gI=\ngithub.com/imdario/mergo v0.3.7/go.mod h1:2EnlNZ0deacrJVfApfmtdGgDfMuh/nq6Ok1EcJh5FfA=\ngithub.com/jinzhu/copier v0.0.0-20180308034124-7e38e58719c3 h1:sHsPfNMAG70QAvKbddQ0uScZCHQoZsT5NykGRCeeeIs=\ngithub.com/jinzhu/copier v0.0.0-20180308034124-7e38e58719c3/go.mod h1:yL958EeXv8Ylng6IfnvG4oflryUi3vgA3xPs9hmII1s=\ngithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51 h1:Z9n2FFNUXsshfwJMBgNA0RU6/i7WVaAegv3PtuIHPMs=\ngithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51/go.mod h1:CzGEWj7cYgsdH8dAjBGEr58BoE7ScuLd+fwFZ44+/x8=\ngithub.com/kr/pretty v0.1.0 h1:L/CwN0zerZDmRFUapSPitk6f+Q3+0za1rQkzVuMiMFI=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/pty v1.1.4 h1:5Myjjh3JY/NaAi4IsUbHADytDyl1VE1Y9PXDlL+P/VQ=\ngithub.com/kr/pty v1.1.4/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/mattn/go-colorable v0.0.9 h1:UVL0vNpWh04HeJXV0KLcaT7r06gOH2l4OW6ddYRUIY4=\ngithub.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=\ngithub.com/mattn/go-isatty v0.0.3 h1:ns/ykhmWi7G9O+8a448SecJU3nSMBXJfqQkl0upE1jI=\ngithub.com/mattn/go-isatty v0.0.3/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=\ngithub.com/mattn/go-runewidth v0.0.6 h1:V2iyH+aX9C5fsYCpK60U8BYIvmhqxuOL3JZcqc1NB7k=\ngithub.com/mattn/go-runewidth v0.0.6/go.mod h1:H031xJmbD/WCDINGzjvQ9THkh0rPKHF+m2gUSrubnMI=\ngithub.com/mgutz/ansi v0.0.0-20170206155736-9520e82c474b h1:j7+1HpAFS1zy5+Q4qx1fWh90gTKwiN4QCGoY9TWyyO4=\ngithub.com/mgutz/ansi v0.0.0-20170206155736-9520e82c474b/go.mod h1:01TrycV0kFyexm33Z7vhZRXopbI8J3TDReVlkTgMUxE=\ngithub.com/mitchellh/go-wordwrap v1.0.1 h1:TLuKupo69TCn6TQSyGxwI1EblZZEsQ0vMlAFQflz0v0=\ngithub.com/mitchellh/go-wordwrap v1.0.1/go.mod h1:R62XHJLzvMFRBbcrT7m7WgmE1eOyTSsCt+hzestvNj0=\ngithub.com/olekukonko/tablewriter v0.0.3 h1:i0LBnzgiChAWHJYTQAZJDOgf8MNxAVYZJ2m63SIDimI=\ngithub.com/olekukonko/tablewriter v0.0.3/go.mod h1:YZeBtGzYYEsCHp2LST/u/0NDwGkRoBtmn1cIWCJiS6M=\ngithub.com/pkg/browser v0.0.0-20170505125900-c90ca0c84f15 h1:mrI+6Ae64Wjt+uahGe5we/sPS1sXjvfT3YjtawAVgps=\ngithub.com/pkg/browser v0.0.0-20170505125900-c90ca0c84f15/go.mod h1:4OwLy04Bl9Ef3GJJCoec+30X3LQs/0/m4HFRt/2LUSA=\ngithub.com/pkg/errors v0.8.0 h1:WdK/asTD0HN+q6hsWO3/vpuAkAr+tw6aNJNDFFf0+qw=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/stretchr/testify v1.2.2 h1:bSDNvY7ZPG5RlJ8otE/7V6gMiyenm9RtJ7IUVIAoJ1w=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/theckman/go-flock v0.4.0 h1:bcqNkS4RTQBGWybG7IBimUMxnLz53Qes1+D4QaOhzJc=\ngithub.com/theckman/go-flock v0.4.0/go.mod h1:kjuth3y9VJ2aNlkNEO99G/8lp9fMIKaGyBmh84IBheM=\ngithub.com/tidwall/gjson v0.0.0-20180711011033-ba784d767ac7 h1:PW7TzL8BOpYMcUYSv4qWDoH1Y5iRzVABteynvfF7pwE=\ngithub.com/tidwall/gjson v0.0.0-20180711011033-ba784d767ac7/go.mod h1:c/nTNbUr0E0OrXEhq1pwa8iEgc2DOt4ZZqAt1HtCkPA=\ngithub.com/tidwall/match v1.0.0 h1:Ym1EcFkp+UQ4ptxfWlW+iMdq5cPH5nEuGzdf/Pb7VmI=\ngithub.com/tidwall/match v1.0.0/go.mod h1:LujAq0jyVjBy028G1WhWfIzbpQfMO8bBZ6Tyb0+pL9E=\ngithub.com/tmc/keyring v0.0.0-20171121202319-839169085ae1 h1:+gXfyhy0t28Guz+vFztBg45yIquB2bNtiFvbItzJtUc=\ngithub.com/tmc/keyring v0.0.0-20171121202319-839169085ae1/go.mod h1:gsa3jftQ3xia55nzIN4lXLYzDcWdxjojdKoz+N0St2Y=\ngolang.org/x/crypto v0.0.0-20180723164146-c126467f60eb h1:Ah9YqXLj6fEgeKqcmBuLCbAsrF3ScD7dJ/bYM0C6tXI=\ngolang.org/x/crypto v0.0.0-20180723164146-c126467f60eb/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/net v0.0.0-20171102191033-01c190206fbd h1:CLQSRrSDQMOMkogMxky7XOkERftMegAnxjT2re4E66M=\ngolang.org/x/net v0.0.0-20171102191033-01c190206fbd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/sys v0.0.0-20180727230415-bd9dbc187b6e h1:3dQ4fR8k5KugjVKO0oqSd1odxuk2yaE2CIfxWP2WarQ=\ngolang.org/x/sys v0.0.0-20180727230415-bd9dbc187b6e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngopkg.in/AlecAivazis/survey.v1 v1.6.1 h1:HyWkjKGBpzhNxrpaKRLDqoa4L1f4cMVBNU4bnVmU8Mw=\ngopkg.in/AlecAivazis/survey.v1 v1.6.1/go.mod h1:2Ehl7OqkBl3Xb8VmC4oFW2bItAhnUfzIjrOzwRxCrOU=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6 h1:jMFz6MfLP0/4fUyZle81rXUoxOBFi19VUFKVDOQfozc=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127 h1:qIbj1fsPNlZgppZ+VLlY7N33q108Sa+fhmuc+sWQYwY=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/coryb/yaml.v2 v2.0.0-20180616071044-0e40e46f7153 h1:3KfEubBNUdXqlEXuMz13dXy4cYK2AvuPhp8fKTYuPdU=\ngopkg.in/coryb/yaml.v2 v2.0.0-20180616071044-0e40e46f7153/go.mod h1:Vth2iKfSejHZ3p6akgWO0iSjuuiu6mNCEgzcYUCnumw=\ngopkg.in/op/go-logging.v1 v1.0.0-20160211212156-b2cb9fa56473 h1:6D+BvnJ/j6e222UW8s2qTSe3wGBtvo0MbVQG/c5k8RE=\ngopkg.in/op/go-logging.v1 v1.0.0-20160211212156-b2cb9fa56473/go.mod h1:N1eN2tsCx0Ydtgjl4cqmbRCsY4/+z4cYDeqwZTk6zog=\ngopkg.in/yaml.v2 v2.2.2 h1:ZCJp+EgiOT7lHqUV2J862kp8Qj64Jo6az82+3Td9dZw=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\n"
        },
        {
          "name": "httpClient.go",
          "type": "blob",
          "size": 0.3330078125,
          "content": "package jira\n\nimport (\n\t\"io\"\n\t\"net/http\"\n)\n\ntype HttpClient interface {\n\tDelete(url string) (*http.Response, error)\n\tDo(*http.Request) (*http.Response, error)\n\tGetJSON(url string) (*http.Response, error)\n\tPost(url, bodyType string, body io.Reader) (*http.Response, error)\n\tPut(url, bodyType string, body io.Reader) (*http.Response, error)\n}\n"
        },
        {
          "name": "issue.go",
          "type": "blob",
          "size": 18.14453125,
          "content": "package jira\n\nimport (\n\t\"bytes\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io\"\n\t\"mime/multipart\"\n\t\"net/url\"\n\t\"strings\"\n\n\t\"github.com/coryb/oreo\"\n\n\t\"github.com/go-jira/jira/jiradata\"\n)\n\ntype IssueQueryProvider interface {\n\tProvideIssueQueryString() string\n}\n\ntype IssueOptions struct {\n\tFields        []string `json:\"fields,omitempty\" yaml:\"fields,omitempty\"`\n\tExpand        []string `json:\"expand,omitempty\" yaml:\"expand,omitempty\"`\n\tProperties    []string `json:\"properties,omitempty\" yaml:\"properties,omitempty\"`\n\tFieldsByKeys  bool     `json:\"fieldsByKeys,omitempty\" yaml:\"fieldsByKeys,omitempty\"`\n\tUpdateHistory bool     `json:\"updateHistory,omitempty\" yaml:\"updateHistory,omitempty\"`\n}\n\nfunc (o *IssueOptions) ProvideIssueQueryString() string {\n\tparams := []string{}\n\tif len(o.Fields) > 0 {\n\t\tparams = append(params, \"fields=\"+strings.Join(o.Fields, \",\"))\n\t}\n\tif len(o.Expand) > 0 {\n\t\tparams = append(params, \"expand=\"+strings.Join(o.Expand, \",\"))\n\t}\n\tif len(o.Properties) > 0 {\n\t\tparams = append(params, \"properties=\"+strings.Join(o.Properties, \",\"))\n\t}\n\tif o.FieldsByKeys {\n\t\tparams = append(params, \"fieldsByKeys=true\")\n\t}\n\tif o.UpdateHistory {\n\t\tparams = append(params, \"updateHistory=true\")\n\t}\n\tif len(params) > 0 {\n\t\treturn \"?\" + strings.Join(params, \"&\")\n\t}\n\treturn \"\"\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/issue-getIssue\nfunc (j *Jira) GetIssue(issue string, iqg IssueQueryProvider) (*jiradata.Issue, error) {\n\treturn GetIssue(j.UA, j.Endpoint, issue, iqg)\n}\n\nfunc GetIssue(ua HttpClient, endpoint string, issue string, iqg IssueQueryProvider) (*jiradata.Issue, error) {\n\tquery := \"\"\n\tif iqg != nil {\n\t\tquery = iqg.ProvideIssueQueryString()\n\t}\n\turi := URLJoin(endpoint, \"rest/api/2/issue\", issue)\n\turi += query\n\tresp, err := ua.GetJSON(uri)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 200 {\n\t\tresults := &jiradata.Issue{}\n\t\treturn results, json.NewDecoder(resp.Body).Decode(results)\n\t}\n\treturn nil, responseError(resp)\n}\n\nfunc (j *Jira) GetIssueWorklog(issue string) (*jiradata.Worklogs, error) {\n\treturn GetIssueWorklog(j.UA, j.Endpoint, issue)\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/issue/{issueIdOrKey}/worklog-getIssueWorklog\nfunc GetIssueWorklog(ua HttpClient, endpoint string, issue string) (*jiradata.Worklogs, error) {\n\tstartAt := 0\n\ttotal := 1\n\tmaxResults := 100\n\tworklogs := jiradata.Worklogs{}\n\tfor startAt < total {\n\t\turi := URLJoin(endpoint, \"rest/api/2/issue\", issue, \"worklog\")\n\t\turi += fmt.Sprintf(\"?startAt=%d&maxResults=%d\", startAt, maxResults)\n\t\tresp, err := ua.GetJSON(uri)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t\tdefer resp.Body.Close()\n\n\t\tif resp.StatusCode == 200 {\n\t\t\tresults := &jiradata.WorklogWithPagination{}\n\t\t\terr := json.NewDecoder(resp.Body).Decode(results)\n\t\t\tif err != nil {\n\t\t\t\treturn nil, err\n\t\t\t}\n\t\t\tstartAt = startAt + maxResults\n\t\t\ttotal = results.Total\n\t\t\tworklogs = append(worklogs, results.Worklogs...)\n\t\t} else {\n\t\t\treturn nil, responseError(resp)\n\t\t}\n\t}\n\treturn &worklogs, nil\n}\n\nfunc (j *Jira) GetIssueComment(issue string) (*jiradata.Comments, error) {\n\treturn GetIssueComment(j.UA, j.Endpoint, issue)\n}\n\n// https://docs.atlassian.com/software/jira/docs/api/REST/7.12.0/#api/2/issue-getComments\nfunc GetIssueComment(ua HttpClient, endpoint string, issue string) (*jiradata.Comments, error) {\n\tstartAt := 0\n\ttotal := 1\n\tmaxResults := 100\n\tcomments := jiradata.Comments{}\n\tfor startAt < total {\n\t\turi := URLJoin(endpoint, \"rest/api/2/issue\", issue, \"comment\")\n\t\turi += fmt.Sprintf(\"?startAt=%d&maxResults=%d\", startAt, maxResults)\n\t\tresp, err := ua.GetJSON(uri)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t\tdefer resp.Body.Close()\n\n\t\tif resp.StatusCode == 200 {\n\t\t\tresults := &jiradata.CommentsWithPagination{}\n\t\t\terr := json.NewDecoder(resp.Body).Decode(results)\n\t\t\tif err != nil {\n\t\t\t\treturn nil, err\n\t\t\t}\n\t\t\tstartAt = startAt + maxResults\n\t\t\ttotal = results.Total\n\t\t\tcomments = append(comments, results.Comments...)\n\t\t} else {\n\t\t\treturn nil, responseError(resp)\n\t\t}\n\t}\n\treturn &comments, nil\n}\n\ntype WorklogProvider interface {\n\tProvideWorklog() *jiradata.Worklog\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/issue/{issueIdOrKey}/worklog-addWorklog\nfunc (j *Jira) AddIssueWorklog(issue string, wp WorklogProvider) (*jiradata.Worklog, error) {\n\treturn AddIssueWorklog(j.UA, j.Endpoint, issue, wp)\n}\n\nfunc AddIssueWorklog(ua HttpClient, endpoint string, issue string, wp WorklogProvider) (*jiradata.Worklog, error) {\n\treq := wp.ProvideWorklog()\n\tencoded, err := json.Marshal(req)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\turi := URLJoin(endpoint, \"rest/api/2/issue\", issue, \"worklog\")\n\tresp, err := ua.Post(uri, \"application/json\", bytes.NewBuffer(encoded))\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 201 {\n\t\tresults := &jiradata.Worklog{}\n\t\treturn results, json.NewDecoder(resp.Body).Decode(results)\n\t}\n\treturn nil, responseError(resp)\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/issue-getEditIssueMeta\nfunc (j *Jira) GetIssueEditMeta(issue string) (*jiradata.EditMeta, error) {\n\treturn GetIssueEditMeta(j.UA, j.Endpoint, issue)\n}\n\nfunc GetIssueEditMeta(ua HttpClient, endpoint string, issue string) (*jiradata.EditMeta, error) {\n\turi := URLJoin(endpoint, \"rest/api/2/issue\", issue, \"editmeta\")\n\tresp, err := ua.GetJSON(uri)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 200 {\n\t\tresults := &jiradata.EditMeta{}\n\t\treturn results, json.NewDecoder(resp.Body).Decode(results)\n\t}\n\treturn nil, responseError(resp)\n}\n\ntype IssueUpdateProvider interface {\n\tProvideIssueUpdate() *jiradata.IssueUpdate\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/issue-editIssue\nfunc (j *Jira) EditIssue(issue string, iup IssueUpdateProvider) error {\n\treturn EditIssue(j.UA, j.Endpoint, issue, iup)\n}\n\nfunc EditIssue(ua HttpClient, endpoint string, issue string, iup IssueUpdateProvider) error {\n\treq := iup.ProvideIssueUpdate()\n\tencoded, err := json.Marshal(req)\n\tif err != nil {\n\t\treturn err\n\t}\n\turi := URLJoin(endpoint, \"rest/api/2/issue\", issue)\n\tresp, err := ua.Put(uri, \"application/json\", bytes.NewBuffer(encoded))\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 204 {\n\t\treturn nil\n\t}\n\treturn responseError(resp)\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/issue-createIssue\nfunc (j *Jira) CreateIssue(iup IssueUpdateProvider) (*jiradata.IssueCreateResponse, error) {\n\treturn CreateIssue(j.UA, j.Endpoint, iup)\n}\n\nfunc CreateIssue(ua HttpClient, endpoint string, iup IssueUpdateProvider) (*jiradata.IssueCreateResponse, error) {\n\treq := iup.ProvideIssueUpdate()\n\tencoded, err := json.Marshal(req)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\turi := URLJoin(endpoint, \"rest/api/2/issue\")\n\tresp, err := ua.Post(uri, \"application/json\", bytes.NewBuffer(encoded))\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 201 {\n\t\tresults := &jiradata.IssueCreateResponse{}\n\t\treturn results, json.NewDecoder(resp.Body).Decode(results)\n\t}\n\treturn nil, responseError(resp)\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/issue-getCreateIssueMeta\nfunc (j *Jira) GetIssueCreateMetaProject(projectKey string) (*jiradata.CreateMetaProject, error) {\n\treturn GetIssueCreateMetaProject(j.UA, j.Endpoint, projectKey)\n}\n\nfunc GetIssueCreateMetaProject(ua HttpClient, endpoint string, projectKey string) (*jiradata.CreateMetaProject, error) {\n\turi := URLJoin(endpoint, \"rest/api/2/issue/createmeta\")\n\turi += fmt.Sprintf(\"?projectKeys=%s&expand=projects.issuetypes.fields\", projectKey)\n\tresp, err := ua.GetJSON(uri)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 200 {\n\t\tresults := &jiradata.CreateMeta{}\n\t\terr = json.NewDecoder(resp.Body).Decode(results)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t\tfor _, project := range results.Projects {\n\t\t\tif project.Key == projectKey {\n\t\t\t\treturn project, nil\n\t\t\t}\n\t\t}\n\t\treturn nil, fmt.Errorf(\"project %s not found\", projectKey)\n\t}\n\treturn nil, responseError(resp)\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/issue-getCreateIssueMeta\nfunc (j *Jira) GetIssueCreateMetaIssueType(projectKey, issueTypeName string) (*jiradata.IssueType, error) {\n\treturn GetIssueCreateMetaIssueType(j.UA, j.Endpoint, projectKey, issueTypeName)\n}\n\nfunc GetIssueCreateMetaIssueType(ua HttpClient, endpoint string, projectKey, issueTypeName string) (*jiradata.IssueType, error) {\n\turi := URLJoin(endpoint, \"rest/api/2/issue/createmeta\")\n\turi += fmt.Sprintf(\"?projectKeys=%s&issuetypeNames=%s&expand=projects.issuetypes.fields\", projectKey, url.QueryEscape(issueTypeName))\n\tresp, err := ua.GetJSON(uri)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode != 200 {\n\t\treturn nil, responseError(resp)\n\t}\n\tresults := &jiradata.CreateMeta{}\n\tif err := json.NewDecoder(resp.Body).Decode(results); err != nil {\n\t\treturn nil, err\n\t}\n\tfor _, project := range results.Projects {\n\t\tif project.Key != projectKey {\n\t\t\tcontinue\n\t\t}\n\t\tfor _, issueType := range project.IssueTypes {\n\t\t\tif issueType.Name == issueTypeName {\n\t\t\t\treturn issueType, nil\n\t\t\t}\n\t\t}\n\t}\n\treturn nil, fmt.Errorf(\"project %s and IssueType %s not found\", projectKey, issueTypeName)\n}\n\ntype LinkIssueProvider interface {\n\tProvideLinkIssueRequest() *jiradata.LinkIssueRequest\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/issueLink-linkIssues\nfunc (j *Jira) LinkIssues(lip LinkIssueProvider) error {\n\treturn LinkIssues(j.UA, j.Endpoint, lip)\n}\n\nfunc LinkIssues(ua HttpClient, endpoint string, lip LinkIssueProvider) error {\n\treq := lip.ProvideLinkIssueRequest()\n\tencoded, err := json.Marshal(req)\n\tif err != nil {\n\t\treturn err\n\t}\n\turi := URLJoin(endpoint, \"rest/api/2/issueLink\")\n\tresp, err := ua.Post(uri, \"application/json\", bytes.NewBuffer(encoded))\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 201 {\n\t\treturn nil\n\t}\n\treturn responseError(resp)\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/issue-getTransitions\nfunc (j *Jira) GetIssueTransitions(issue string) (*jiradata.TransitionsMeta, error) {\n\treturn GetIssueTransitions(j.UA, j.Endpoint, issue)\n}\n\nfunc GetIssueTransitions(ua HttpClient, endpoint string, issue string) (*jiradata.TransitionsMeta, error) {\n\turi := URLJoin(endpoint, \"rest/api/2/issue\", issue, \"transitions\")\n\turi += \"?expand=transitions.fields\"\n\tresp, err := ua.GetJSON(uri)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 200 {\n\t\tresults := &jiradata.TransitionsMeta{}\n\t\treturn results, json.NewDecoder(resp.Body).Decode(results)\n\t}\n\treturn nil, responseError(resp)\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/issue-doTransition\nfunc (j *Jira) TransitionIssue(issue string, iup IssueUpdateProvider) error {\n\treturn TransitionIssue(j.UA, j.Endpoint, issue, iup)\n}\n\nfunc TransitionIssue(ua HttpClient, endpoint string, issue string, iup IssueUpdateProvider) error {\n\treq := iup.ProvideIssueUpdate()\n\tencoded, err := json.Marshal(req)\n\tif err != nil {\n\t\treturn err\n\t}\n\turi := URLJoin(endpoint, \"rest/api/2/issue\", issue, \"transitions\")\n\tresp, err := ua.Post(uri, \"application/json\", bytes.NewBuffer(encoded))\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 204 {\n\t\treturn nil\n\t}\n\treturn responseError(resp)\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/issueLinkType-getIssueLinkTypes\nfunc (j *Jira) GetIssueLinkTypes() (*jiradata.IssueLinkTypes, error) {\n\treturn GetIssueLinkTypes(j.UA, j.Endpoint)\n}\n\nfunc GetIssueLinkTypes(ua HttpClient, endpoint string) (*jiradata.IssueLinkTypes, error) {\n\turi := URLJoin(endpoint, \"rest/api/2/issueLinkType\")\n\tresp, err := ua.GetJSON(uri)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 200 {\n\t\tresults := struct {\n\t\t\tIssueLinkTypes jiradata.IssueLinkTypes\n\t\t}{\n\t\t\tIssueLinkTypes: jiradata.IssueLinkTypes{},\n\t\t}\n\t\treturn &results.IssueLinkTypes, json.NewDecoder(resp.Body).Decode(&results)\n\t}\n\treturn nil, responseError(resp)\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/issue-addVote\nfunc (j *Jira) IssueAddVote(issue string) error {\n\treturn IssueAddVote(j.UA, j.Endpoint, issue)\n}\n\nfunc IssueAddVote(ua HttpClient, endpoint string, issue string) error {\n\turi := URLJoin(endpoint, \"rest/api/2/issue\", issue, \"votes\")\n\tresp, err := ua.Post(uri, \"application/json\", strings.NewReader(\"{}\"))\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 204 {\n\t\treturn nil\n\t}\n\treturn responseError(resp)\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/issue-removeVote\nfunc (j *Jira) IssueRemoveVote(issue string) error {\n\treturn IssueRemoveVote(j.UA, j.Endpoint, issue)\n}\n\nfunc IssueRemoveVote(ua HttpClient, endpoint string, issue string) error {\n\turi := URLJoin(endpoint, \"rest/api/2/issue\", issue, \"votes\")\n\tresp, err := ua.Delete(uri)\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 204 {\n\t\treturn nil\n\t}\n\treturn responseError(resp)\n}\n\ntype RankRequestProvider interface {\n\tProvideRankRequest() *jiradata.RankRequest\n}\n\n// https://docs.atlassian.com/jira-software/REST/cloud/#agile/1.0/issue-rankIssues\nfunc (j *Jira) RankIssues(rrp RankRequestProvider) error {\n\treturn RankIssues(j.UA, j.Endpoint, rrp)\n}\n\nfunc RankIssues(ua HttpClient, endpoint string, rrp RankRequestProvider) error {\n\treq := rrp.ProvideRankRequest()\n\tencoded, err := json.Marshal(req)\n\tif err != nil {\n\t\treturn err\n\t}\n\turi := URLJoin(endpoint, \"rest/agile/1.0/issue/rank\")\n\tresp, err := ua.Put(uri, \"application/json\", bytes.NewBuffer(encoded))\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 204 {\n\t\treturn nil\n\t}\n\treturn responseError(resp)\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/issue-addWatcher\nfunc (j *Jira) IssueAddWatcher(issue, user string) error {\n\treturn IssueAddWatcher(j.UA, j.Endpoint, issue, user)\n}\n\nfunc IssueAddWatcher(ua HttpClient, endpoint string, issue, user string) error {\n\turi := URLJoin(endpoint, \"rest/api/2/issue\", issue, \"watchers\")\n\tresp, err := ua.Post(uri, \"application/json\", strings.NewReader(fmt.Sprintf(\"%q\", user)))\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 204 {\n\t\treturn nil\n\t}\n\treturn responseError(resp)\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/issue-addWatcher\nfunc (j *Jira) IssueRemoveWatcher(issue, user string) error {\n\treturn IssueRemoveWatcher(j.UA, j.Endpoint, issue, user)\n}\n\nfunc IssueRemoveWatcher(ua HttpClient, endpoint string, issue, user string) error {\n\turi := URLJoin(endpoint, \"rest/api/2/issue\", issue, \"watchers\")\n\turi += fmt.Sprintf(\"?accountId=%s\", user)\n\tresp, err := ua.Delete(uri)\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 204 {\n\t\treturn nil\n\t}\n\treturn responseError(resp)\n}\n\ntype CommentProvider interface {\n\tProvideComment() *jiradata.Comment\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/issue/{issueIdOrKey}/comment-addComment\nfunc (j *Jira) IssueAddComment(issue string, cp CommentProvider) (*jiradata.Comment, error) {\n\treturn IssueAddComment(j.UA, j.Endpoint, issue, cp)\n}\n\nfunc IssueAddComment(ua HttpClient, endpoint string, issue string, cp CommentProvider) (*jiradata.Comment, error) {\n\treq := cp.ProvideComment()\n\tencoded, err := json.Marshal(req)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\turi := URLJoin(endpoint, \"rest/api/2/issue\", issue, \"comment\")\n\tresp, err := ua.Post(uri, \"application/json\", bytes.NewBuffer(encoded))\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 201 {\n\t\tresults := jiradata.Comment{}\n\t\treturn &results, json.NewDecoder(resp.Body).Decode(&results)\n\t}\n\treturn nil, responseError(resp)\n}\n\ntype UserProvider interface {\n\tProvideUser() *jiradata.User\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/issue-assign\nfunc (j *Jira) IssueAssign(issue, name string) error {\n\treturn IssueAssign(j.UA, j.Endpoint, issue, name)\n}\n\nfunc IssueAssign(ua HttpClient, endpoint string, issue, name string) error {\n\t// this is special, not using the jiradata.User structure\n\t// because we need to be able to send `null` as the name param\n\t// when we want to un-assign the issue\n\treq := struct {\n\t\tName *string `json:\"name\"`\n\t}{&name}\n\tif name == \"\" {\n\t\treq.Name = nil\n\t}\n\n\tencoded, err := json.Marshal(req)\n\tif err != nil {\n\t\treturn err\n\t}\n\turi := URLJoin(endpoint, \"rest/api/2/issue\", issue, \"assignee\")\n\tresp, err := ua.Put(uri, \"application/json\", bytes.NewBuffer(encoded))\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 204 {\n\t\treturn nil\n\t}\n\treturn responseError(resp)\n}\n\nfunc IssueAssignAccountID(ua HttpClient, endpoint string, issue, acctId string) error {\n\t// this is special, not using the jiradata.User structure\n\t// because we need to be able to send `null` as the name param\n\t// when we want to un-assign the issue\n\treq := struct {\n\t\tAccountID *string `json:\"accountId\"`\n\t}{&acctId}\n\tif acctId == \"\" {\n\t\treq.AccountID = nil\n\t}\n\n\tencoded, err := json.Marshal(req)\n\tif err != nil {\n\t\treturn err\n\t}\n\turi := URLJoin(endpoint, \"rest/api/2/issue\", issue, \"assignee\")\n\tresp, err := ua.Put(uri, \"application/json\", bytes.NewBuffer(encoded))\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 204 {\n\t\treturn nil\n\t}\n\treturn responseError(resp)\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/issue/{issueIdOrKey}/attachments-addAttachment\nfunc (j *Jira) IssueAttachFile(issue, filename string, contents io.Reader) (*jiradata.ListOfAttachment, error) {\n\treturn IssueAttachFile(j.UA, j.Endpoint, issue, filename, contents)\n}\n\nfunc IssueAttachFile(ua HttpClient, endpoint string, issue, filename string, contents io.Reader) (*jiradata.ListOfAttachment, error) {\n\tvar buf bytes.Buffer\n\tw := multipart.NewWriter(&buf)\n\tformFile, err := w.CreateFormFile(\"file\", filename)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\t_, err = io.Copy(formFile, contents)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\turi, err := url.Parse(URLJoin(endpoint, \"rest/api/2/issue\", issue, \"attachments\"))\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treq := oreo.RequestBuilder(uri).WithMethod(\"POST\").WithHeader(\n\t\t\"X-Atlassian-Token\", \"no-check\",\n\t).WithHeader(\n\t\t\"Accept\", \"application/json\",\n\t).WithContentType(w.FormDataContentType()).WithBody(&buf).Build()\n\tw.Close()\n\n\tresp, err := ua.Do(req)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 200 {\n\t\tresults := jiradata.ListOfAttachment{}\n\t\treturn &results, json.NewDecoder(resp.Body).Decode(&results)\n\t}\n\treturn nil, responseError(resp)\n}\n"
        },
        {
          "name": "jira.go",
          "type": "blob",
          "size": 0.3359375,
          "content": "package jira\n\nimport (\n\t\"github.com/coryb/oreo\"\n)\n\n// replace by ldflags\nvar VERSION = \"development\"\n\ntype Jira struct {\n\tEndpoint string     `json:\"endpoint,omitempty\" yaml:\"endpoint,omitempty\"`\n\tUA       HttpClient `json:\"-\" yaml:\"-\"`\n}\n\nfunc NewJira(endpoint string) *Jira {\n\treturn &Jira{\n\t\tEndpoint: endpoint,\n\t\tUA:       oreo.New(),\n\t}\n}\n"
        },
        {
          "name": "jiracli",
          "type": "tree",
          "content": null
        },
        {
          "name": "jiracmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "jiradata",
          "type": "tree",
          "content": null
        },
        {
          "name": "project.go",
          "type": "blob",
          "size": 1.3828125,
          "content": "package jira\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/go-jira/jira/jiradata\"\n)\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/project-getProjectComponents\nfunc (j *Jira) GetProjectComponents(project string) (*jiradata.Components, error) {\n\treturn GetProjectComponents(j.UA, j.Endpoint, project)\n}\n\nfunc GetProjectComponents(ua HttpClient, endpoint string, project string) (*jiradata.Components, error) {\n\turi := URLJoin(endpoint, \"rest/api/2/project\", project, \"components\")\n\tresp, err := ua.GetJSON(uri)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 200 {\n\t\tresults := jiradata.Components{}\n\t\treturn &results, json.NewDecoder(resp.Body).Decode(&results)\n\t}\n\treturn nil, responseError(resp)\n}\n\n// https://developer.atlassian.com/cloud/jira/platform/rest/v2#api-api-2-project-projectIdOrKey-versions-get\nfunc (j *Jira) GetProjectVersions(project string) (*jiradata.Versions, error) {\n\treturn GetProjectVersions(j.UA, j.Endpoint, project)\n}\n\nfunc GetProjectVersions(ua HttpClient, endpoint string, project string) (*jiradata.Versions, error) {\n\turi := URLJoin(endpoint, \"rest/api/2/project\", project, \"versions\")\n\tresp, err := ua.GetJSON(uri)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 200 {\n\t\tresults := jiradata.Versions{}\n\t\treturn &results, json.NewDecoder(resp.Body).Decode(&results)\n\t}\n\treturn nil, responseError(resp)\n}\n"
        },
        {
          "name": "schemas",
          "type": "tree",
          "content": null
        },
        {
          "name": "search.go",
          "type": "blob",
          "size": 3.8212890625,
          "content": "package jira\n\nimport (\n\t\"bytes\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com/go-jira/jira/jiradata\"\n)\n\ntype SearchProvider interface {\n\tProvideSearchRequest() *jiradata.SearchRequest\n}\n\ntype SearchOptions struct {\n\tAssignee    string `yaml:\"assignee,omitempty\" json:\"assignee,omitempty\"`\n\tQuery       string `yaml:\"query,omitempty\" json:\"query,omitempty\"`\n\tQueryFields string `yaml:\"query-fields,omitempty\" json:\"query-fields,omitempty\"`\n\tProject     string `yaml:\"project,omitempty\" json:\"project,omitempty\"`\n\tComponent   string `yaml:\"component,omitempty\" json:\"component,omitempty\"`\n\tIssueType   string `yaml:\"issue-type,omitempty\" json:\"issue-type,omitempty\"`\n\tWatcher     string `yaml:\"watcher,omitempty\" json:\"watcher,omitempty\"`\n\tReporter    string `yaml:\"reporter,omitempty\" json:\"reporter,omitempty\"`\n\tStatus      string `yaml:\"status,omitempty\" json:\"status,omitempty\"`\n\tSort        string `yaml:\"sort,omitempty\" json:\"sort,omitempty\"`\n\tMaxResults  int    `yaml:\"max-results,omitempty\" json:\"max-results,omitempty\"`\n}\n\nfunc (o *SearchOptions) ProvideSearchRequest() *jiradata.SearchRequest {\n\treq := &jiradata.SearchRequest{}\n\n\tif o.Query == \"\" {\n\t\tqbuff := bytes.NewBufferString(\"resolution = unresolved\")\n\t\tif o.Project != \"\" {\n\t\t\tqbuff.WriteString(fmt.Sprintf(\" AND project = '%s'\", o.Project))\n\t\t}\n\t\tif o.Component != \"\" {\n\t\t\tqbuff.WriteString(fmt.Sprintf(\" AND component = '%s'\", o.Component))\n\t\t}\n\t\tif o.Assignee != \"\" {\n\t\t\tqbuff.WriteString(fmt.Sprintf(\" AND assignee = '%s'\", o.Assignee))\n\t\t}\n\t\tif o.IssueType != \"\" {\n\t\t\tqbuff.WriteString(fmt.Sprintf(\" AND issuetype = '%s'\", o.IssueType))\n\t\t}\n\t\tif o.Watcher != \"\" {\n\t\t\tqbuff.WriteString(fmt.Sprintf(\" AND watcher = '%s'\", o.Watcher))\n\t\t}\n\t\tif o.Reporter != \"\" {\n\t\t\tqbuff.WriteString(fmt.Sprintf(\" AND reporter = '%s'\", o.Reporter))\n\t\t}\n\t\tif o.Status != \"\" {\n\t\t\tqbuff.WriteString(fmt.Sprintf(\" AND status = '%s'\", o.Status))\n\t\t}\n\t\tif o.Sort != \"\" {\n\t\t\tqbuff.WriteString(fmt.Sprintf(\" ORDER BY %s\", o.Sort))\n\t\t}\n\t\treq.JQL = qbuff.String()\n\t} else {\n\t\treq.JQL = o.Query\n\t}\n\n\treq.Fields = append(req.Fields, \"summary\")\n\tif o.QueryFields != \"\" {\n\t\tfields := strings.Split(o.QueryFields, \",\")\n\t\treq.Fields = append(req.Fields, fields...)\n\t}\n\treq.StartAt = 0\n\treq.MaxResults = o.MaxResults\n\n\treturn req\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#api/2/search-searchUsingSearchRequest\nfunc (j *Jira) Search(sp SearchProvider, opts ...SearchOpt) (*jiradata.SearchResults, error) {\n\treturn Search(j.UA, j.Endpoint, sp, opts...)\n}\n\ntype searchConfig struct {\n\tautoPaginate bool\n}\n\ntype SearchOpt func(*searchConfig)\n\nfunc WithAutoPagination() SearchOpt {\n\treturn func(c *searchConfig) {\n\t\tc.autoPaginate = true\n\t}\n}\n\nfunc Search(ua HttpClient, endpoint string, sp SearchProvider, opts ...SearchOpt) (*jiradata.SearchResults, error) {\n\tc := &searchConfig{}\n\tfor _, opt := range opts {\n\t\topt(c)\n\t}\n\n\treq := sp.ProvideSearchRequest()\n\tlimit := req.MaxResults\n\tif limit == 0 {\n\t\t// max page size is 100\n\t\treq.MaxResults = 100\n\t}\n\n\tissues := jiradata.Issues{}\n\tfor {\n\t\tencoded, err := json.Marshal(req)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t\turi := URLJoin(endpoint, \"rest/api/2/search\")\n\t\tresp, err := ua.Post(uri, \"application/json\", bytes.NewBuffer(encoded))\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t\tdefer resp.Body.Close()\n\n\t\tif resp.StatusCode != 200 {\n\t\t\treturn nil, responseError(resp)\n\t\t}\n\n\t\tpage := &jiradata.SearchResults{}\n\t\terr = json.NewDecoder(resp.Body).Decode(page)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t\tif !c.autoPaginate {\n\t\t\treturn page, nil\n\t\t}\n\n\t\tissues = append(issues, page.Issues...)\n\t\t// if we are done paginating just force all issues onto current\n\t\t// response and return\n\t\tif (limit > 0 && len(issues) >= limit) || len(issues) >= page.Total {\n\t\t\tpage.Issues = issues\n\t\t\treturn page, nil\n\t\t}\n\t\treq.StartAt = len(issues)\n\t\tif len(issues)+req.MaxResults > limit {\n\t\t\treq.MaxResults = limit - len(issues)\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "serverinfo.go",
          "type": "blob",
          "size": 0.458984375,
          "content": "package jira\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/go-jira/jira/jiradata\"\n)\n\nfunc ServerInfo(ua HttpClient, endpoint string) (*jiradata.ServerInfo, error) {\n\turi := URLJoin(endpoint, \"rest/api/2/serverInfo\")\n\tresp, err := ua.GetJSON(uri)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 200 {\n\t\tresults := jiradata.ServerInfo{}\n\t\treturn &results, json.NewDecoder(resp.Body).Decode(&results)\n\t}\n\treturn nil, responseError(resp)\n}\n"
        },
        {
          "name": "session.go",
          "type": "blob",
          "size": 2.0546875,
          "content": "package jira\n\nimport (\n\t\"bytes\"\n\t\"encoding/json\"\n\n\t\"github.com/go-jira/jira/jiradata\"\n)\n\ntype AuthProvider interface {\n\tProvideAuthParams() *jiradata.AuthParams\n}\n\ntype AuthOptions struct {\n\tUsername string\n\tPassword string\n}\n\nfunc (a *AuthOptions) ProvideAuthParams() *jiradata.AuthParams {\n\treturn &jiradata.AuthParams{\n\t\tUsername: a.Username,\n\t\tPassword: a.Password,\n\t}\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#auth/1/session-login\nfunc (j *Jira) NewSession(ap AuthProvider) (*jiradata.AuthSuccess, error) {\n\treturn NewSession(j.UA, j.Endpoint, ap)\n}\n\nfunc NewSession(ua HttpClient, endpoint string, ap AuthProvider) (*jiradata.AuthSuccess, error) {\n\treq := ap.ProvideAuthParams()\n\tencoded, err := json.Marshal(req)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\turi := URLJoin(endpoint, \"rest/auth/1/session\")\n\tresp, err := ua.Post(uri, \"application/json\", bytes.NewBuffer(encoded))\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 200 {\n\t\tresults := &jiradata.AuthSuccess{}\n\t\treturn results, json.NewDecoder(resp.Body).Decode(results)\n\t}\n\treturn nil, responseError(resp)\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#auth/1/session-currentUser\nfunc (j *Jira) GetSession() (*jiradata.CurrentUser, error) {\n\treturn GetSession(j.UA, j.Endpoint)\n}\n\nfunc GetSession(ua HttpClient, endpoint string) (*jiradata.CurrentUser, error) {\n\turi := URLJoin(endpoint, \"rest/auth/1/session\")\n\tresp, err := ua.GetJSON(uri)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 200 {\n\t\tresults := &jiradata.CurrentUser{}\n\t\treturn results, json.NewDecoder(resp.Body).Decode(results)\n\t}\n\treturn nil, responseError(resp)\n}\n\n// https://docs.atlassian.com/jira/REST/cloud/#auth/1/session-logout\nfunc (j *Jira) DeleteSession() error {\n\treturn DeleteSession(j.UA, j.Endpoint)\n}\n\nfunc DeleteSession(ua HttpClient, endpoint string) error {\n\turi := URLJoin(endpoint, \"rest/auth/1/session\")\n\tresp, err := ua.Delete(uri)\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer resp.Body.Close()\n\tif resp.StatusCode == 204 {\n\t\treturn nil\n\t}\n\treturn responseError(resp)\n}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "users.go",
          "type": "blob",
          "size": 1.623046875,
          "content": "package jira\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"net/url\"\n\t\"strings\"\n\n\t\"github.com/go-jira/jira/jiradata\"\n)\n\ntype UserSearchOptions struct {\n\tQuery      string `yaml:\"query,omitempty\" json:\"query,omitempty\"`\n\tUsername   string `yaml:\"username,omitempty\" json:\"username,omitempty\"`\n\tAccountID  string `yaml:\"accountId,omitempty\" json:\"accountId,omitempty\"`\n\tStartAt    int    `yaml:\"startAt,omitempty\" json:\"startAt,omitempty\"`\n\tMaxResults int    `yaml:\"max-results,omitempty\" json:\"max-results,omitempty\"`\n\tProperty   string `yaml:\"property,omitempty\" json:\"property,omitempty\"`\n}\n\n// https://developer.atlassian.com/cloud/jira/platform/rest/v2/#api-rest-api-2-user-search-get\n\nfunc UserSearch(ua HttpClient, endpoint string, opts *UserSearchOptions) ([]*jiradata.User, error) {\n\turi := URLJoin(endpoint, \"rest/api/2/user/search\")\n\tparams := []string{}\n\tif opts.Query != \"\" {\n\t\tparams = append(params, \"query=\"+url.QueryEscape(opts.Query))\n\t}\n\tif opts.AccountID != \"\" {\n\t\tparams = append(params, \"accountId=\"+url.QueryEscape(opts.AccountID))\n\t}\n\tif opts.StartAt != 0 {\n\t\tparams = append(params, fmt.Sprintf(\"startAt=%d\", opts.StartAt))\n\t}\n\tif opts.MaxResults != 0 {\n\t\tparams = append(params, fmt.Sprintf(\"maxResults=%d\", opts.MaxResults))\n\t}\n\tif opts.Property != \"\" {\n\t\tparams = append(params, \"property=\"+url.QueryEscape(opts.Property))\n\t}\n\tif len(params) > 0 {\n\t\turi += \"?\" + strings.Join(params, \"&\")\n\t}\n\tresp, err := ua.GetJSON(uri)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer resp.Body.Close()\n\n\tif resp.StatusCode == 200 {\n\t\tresults := []*jiradata.User{}\n\t\treturn results, json.NewDecoder(resp.Body).Decode(&results)\n\t}\n\treturn nil, responseError(resp)\n}\n"
        },
        {
          "name": "utils.go",
          "type": "blob",
          "size": 0.30859375,
          "content": "package jira\n\nimport (\n\t\"fmt\"\n\t\"net/url\"\n\t\"path\"\n)\n\nfunc URLJoin(endpoint string, paths ...string) string {\n\tu, err := url.Parse(endpoint)\n\tif err != nil {\n\t\tpanic(fmt.Errorf(\"unable to parse endpoint: %s\", endpoint))\n\t}\n\tpaths = append([]string{u.Path}, paths...)\n\tu.Path = path.Join(paths...)\n\treturn u.String()\n}\n"
        }
      ]
    }
  ]
}