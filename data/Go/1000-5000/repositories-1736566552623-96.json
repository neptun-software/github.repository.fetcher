{
  "metadata": {
    "timestamp": 1736566552623,
    "page": 96,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jenkins-x/jx",
      "stars": 4590,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.2119140625,
          "content": "draft.toml\ntarget/classes\ntarget/generated-sources\ntarget/generated-test-sources\ntarget/maven-archiver\ntarget/maven-status\ntarget/surefire-reports\ntarget/test-classes\ntarget/*.original\ncharts/\nNOTICE\nLICENSE\nREADME.md"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.380859375,
          "content": "# Binaries for programs and plugins\n*.exe\n*.dll\n*.so\n*.dylib\n\n# Test binary, build with `go test -c`\n*.test\n\n# Output of the go coverage tool, specifically when used with LiteIDE\n*.out\n\ndebug\n\n# Project-local glide cache, RE: https://github.com/Masterminds/glide/issues/736\n.glide/\n\n.idea/\n*.iml\n\n.vscode/\n\n#Various temporary created while building/running jx.\n/build/\n/release/\ndist/\nscanning/\n.updatebot-repos/\n.terraform/\nmyvalues.yaml\nmyvalues.yml\n**/extraValues.yaml\n\n# vim swap files\n*.swp\n\n#OSX system files.\n**/.DS_Store\n\nvendor/**\n\n# if you run `jx install --gitops` locally\njenkins-x-dev-environment\n\n# generated apidocs\ndocs/apidocs/build\ndocs/apidocs/includes\ndocs/apidocs/site\n\n# ignore these files 1 by 1 so we can not ignore the stylesheet override\ndocs/apidocs/static/FontAwesome.otf\ndocs/apidocs/static/bootstrap-3.3.7.min.js\ndocs/apidocs/static/bootstrap.min.css\ndocs/apidocs/static/font-awesome.min.css\ndocs/apidocs/static/fontawesome-webfont.eot\ndocs/apidocs/static/fontawesome-webfont.svg\ndocs/apidocs/static/fontawesome-webfont.ttf\ndocs/apidocs/static/fontawesome-webfont.woff\ndocs/apidocs/static/fontawesome-webfont.woff2\ndocs/apidocs/static/jquery-3.2.1.min.js\ndocs/apidocs/static/jquery.scrollTo.min.js\ndocs/apidocs/static/scroll.js\npkg/jx/cmd/verify-pod.log\n\nplugin.gz\n\n# syft\n/usr/local/bin/syft\n\n# docker credential binaries\ndocker-credential-*\n\n# sbom json created by syft\nsbom.json\n\n\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 2.8017578125,
          "content": "linters-settings:\n  depguard:\n    rules:\n      main:\n        list-mode: original\n        deny:\n        - pkg: github.com/jenkins-x/jx/v2/pkg/log\n          desc: \"use jenkins-x/jx-logging instead\"\n        - pkg: github.com/satori/go.uuid\n          desc: \"use github.com/google/uuid instead\"\n        - pkg: github.com/pborman/uuid\n          desc: \"use github.com/google/uuid instead\"\n  dupl:\n    threshold: 100\n  exhaustive:\n    default-signifies-exhaustive: false\n  funlen:\n    lines: 200\n    statements: 150\n  goconst:\n    min-len: 3\n    min-occurrences: 3\n  gocritic:\n    enabled-tags:\n    - diagnostic\n    - experimental\n    - opinionated\n    - performance\n    - style\n    disabled-checks:\n    - dupImport # https://github.com/go-critic/go-critic/issues/845\n    - ifElseChain\n    - octalLiteral\n    - whyNoLint\n    - wrapperFunc\n    - importShadow # not important for now\n    - unnamedResult # not important\n  gocyclo:\n    min-complexity: 15\n  goimports: {}\n  revive:\n    confidence: 0\n  gofmt:\n    simplify: true\n  mnd:\n    # don't include the \"operation\" and \"assign\"\n    checks: [argument, case, condition, return]\n  govet:\n    settings:\n      printf:\n        funcs:\n        - (github.com/jenkins-x/jx-logging/v3/pkg/log/Logger()).Debugf\n        - (github.com/jenkins-x/jx-logging/v3/pkg/log/Logger()).Infof\n        - (github.com/jenkins-x/jx-logging/v3/pkg/log/Logger()).Warnf\n        - (github.com/jenkins-x/jx-logging/v3/pkg/log/Logger()).Errorf\n        - (github.com/jenkins-x/jx-logging/v3/pkg/log/Logger()).Fatalf\n  lll:\n    line-length: 140\n  misspell: {}\n  nolintlint:\n    allow-unused: false # report any unused nolint directives\n    require-explanation: false # don't require an explanation for nolint directives\n    require-specific: false # don't require nolint directives to be specific about which linter is being skipped\nlinters:\n  # please, do not use `enable-all`: it's deprecated and will be removed soon.\n  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint\n  disable-all: true\n  enable:\n  - asciicheck\n  - bodyclose\n  - depguard\n  - errcheck\n  - gofmt\n  - goimports\n  - goprintffuncname\n  - gosec\n  - gosimple\n  - ineffassign\n  - misspell\n  - mnd\n  - nakedret\n  - rowserrcheck\n  - staticcheck\n  - typecheck\n  - unconvert\n  - unparam\n  - unused\n  - revive\n  - gocritic\n  - govet\n  - dupl\nissues:\n  exclude-dirs:\n  - cmd/docs\n  # Excluding configuration per-path, per-linter, per-text and per-source\n  exclude-rules:\n  #    - path: _test\\.go\n  #      linters:\n  #        - gomnd\n  #    https://github.com/go-critic/go-critic/issues/926\n  - linters:\n    - gocritic\n    text: \"unnecessaryDefer:\"\n  exclude:\n  - 'shadow: declaration of \"err\" shadows declaration at'\n  max-same-issues: 0\n\nrun:\n  timeout: 30m\n# golangci.com configuration\n# https://github.com/golangci/golangci/wiki/Configuration\n"
        },
        {
          "name": ".goreleaser.yml",
          "type": "blob",
          "size": 2.583984375,
          "content": "version: 2\nenv:\n  - GO111MODULE=on\n  - CGO_ENABLED=0\n  - COSIGN_EXPERIMENTAL=true\nbefore:\n  hooks:\n    - go mod download\nbuilds:\n  - id: jx\n    # Path to main.go file or main package.\n    # Default is `.`.\n    main: ./cmd/main.go\n    # Binary name.\n    # Can be a path (e.g. `bin/app`) to wrap the binary in a directory.\n    # Default is the name of the project directory.\n    binary: jx\n    # Custom ldflags templates.\n    # Default is `-s -w -X main.version={{.Version}} -X main.commit={{.ShortCommit}} -X main.date={{.Date}} -X main.builtBy=goreleaser`.\n    ldflags:\n      - -X \"{{.Env.ROOTPACKAGE}}/pkg/cmd/version.Version={{.Env.VERSION}}\" -X \"{{.Env.ROOTPACKAGE}}/pkg/cmd/version.Revision={{.Env.REV}}\" -X \"{{.Env.ROOTPACKAGE}}/pkg/cmd/version.Branch={{.Env.BRANCH}}\" -X \"{{.Env.ROOTPACKAGE}}/pkg/cmd/version.BuildDate={{.Env.BUILDDATE}}\" -X \"{{.Env.ROOTPACKAGE}}/pkg/cmd/version.GoVersion={{.Env.GOVERSION}}\"\n    # GOOS list to build for.\n    # For more info refer to: https://golang.org/doc/install/source#environment\n    # Defaults are darwin and linux.\n    goos:\n      - windows\n      - darwin\n      - linux\n    # GOARCH to build for.\n    # For more info refer to: https://golang.org/doc/install/source#environment\n    # Defaults are 386 and amd64.\n    goarch:\n      - amd64\n      - arm64\n    ignore:\n      - goos: windows\n        goarch: arm64\narchives:\n  - name_template: \"jx-{{ .Os }}-{{ .Arch }}\"\n    format_overrides:\n      - goos: windows\n        format: zip\nchecksum:\n  # You can change the name of the checksums file.\n  # Default is `jx_{{ .Version }}_checksums.txt`.\n  name_template: \"jx-checksums.txt\"\n  # Algorithm to be used.\n  # Accepted options are sha256, sha512, sha1, crc32, md5, sha224 and sha384.\n  # Default is sha256.\n  algorithm: sha256\nchangelog:\n  # set it to true if you wish to skip the changelog generation\n  disable: true\nrelease:\n  # If set to true, will not auto-publish the release.\n  # Default is false.\n  draft: false\n  # If set to auto, will mark the release as not ready for production\n  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1\n  # If set to true, will mark the release as not ready for production.\n  # Default is false.\n  prerelease: true\n  # You can change the name of the GitHub release.\n  # Default is `{{.Tag}}`\n  name_template: \"{{.Env.VERSION}}\"\nsboms:\n  - artifacts: archive\nsigns:\n  - cmd: cosign\n    env:\n      - COSIGN_EXPERIMENTAL=1\n    certificate: '${artifact}.pem'\n    output: true\n    artifacts: all\n    args:\n      - sign-blob\n      - --yes=true\n      - '--output-certificate=${certificate}'\n      - '--output-signature=${signature}'\n      - '${artifact}'\n"
        },
        {
          "name": ".helmignore",
          "type": "blob",
          "size": 0.388671875,
          "content": "# Patterns to ignore when building packages.\n# This supports shell glob matching, relative path matching, and\n# negation (prefixed with !). Only one pattern per line.\n.DS_Store\n# Common VCS dirs\n.git/\n.gitignore\n.bzr/\n.bzrignore\n.hg/\n.hgignore\n.svn/\n# Common backup files\n*.swp\n*.bak\n*.tmp\n*~\n# Various IDEs\n.project\n.idea/\n*.tmproj\n*.png\n\n# known compile time folders\ntarget/\nnode_modules/\nvendor/"
        },
        {
          "name": ".jx",
          "type": "tree",
          "content": null
        },
        {
          "name": ".lighthouse",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.MD",
          "type": "blob",
          "size": 10.0732421875,
          "content": "\n# Hacking on JX\n\nThis guide is for developers who want to improve the Jenkins X jx CLI. These instructions will help you set up a\ndevelopment environment for working on the jx source code.\n\n## Prerequisites\n\nTo compile, test and contribute towards the jx binaries you will need:\n\n - [git][]\n - [Go][] 1.23 is supported\n\nIn most cases, install the prerequisite according to its instructions. See the next section\nfor a note about Go cross-compiling support.\n\n### Configuring Go\n\nThe jx's binary CLI is built on your machine in your GO Path. \n\nOn macOS, Go can be installed with [Homebrew][]:\n\n```shell\n\n$ brew install go \n```\n\nIt is also straightforward to build Go from source:\n\n```shell\n$ sudo su\n$ curl -sSL https://go.dev/dl/go1.23.4.src.tar.gz | tar -C /usr/local -xz\n$ cd /usr/local/go/src\n$ # compile Go for the default platform first, then add cross-compile support\n$ ./make.bash --no-clean\n$ GOOS=linux GOARCH=amd64 ./make.bash --no-clean\n```\n\n## Fork the Repository\n\nBegin at GitHub by forking jx, then clone your fork locally. Since jx is a Go package, it\nshould be located at `$GOPATH/src/github.com/jenkins-x/jx`.\n\n```shell\n$ mkdir -p $GOPATH/src/github.com/jenkins-x\n$ cd $GOPATH/src/github.com/jenkins-x\n$ git clone git@github.com:<username>/jx.git\n$ cd jx\n```\n\nAdd the conventional [upstream][] `git` remote in order to fetch changes from jx's main master\nbranch and to create pull requests:\n\n```shell\n$ git remote add upstream https://github.com/jenkins-x/jx.git\n```\n\n## Build Your Changes\n\nWith the prerequisites installed and your fork of jx cloned, you can make changes to local jx\nsource code.\n\nRun `make` to build the `jx`  binaries:\n\n```shell\n\n$ make build      # runs dep and builds `jx`  inside the build/\n```\n\n## Testing\n\nThe jx test suite is divided into three sections:\n - The standard unit test suite\n - Slow unit tests\n - Integration tests\n\nTo run the standard test suite:\n```make test```\n\nTo run the standard test suite including slow running tests:\n```make test-slow```\n\nTo run all tests including integration tests (NOTE These tests are not encapsulated):\n```make test-slow-integration```\n\n\nTo get a nice HTML report on the tests:\n```make test-report-html```\n\n### Writing tests\n\n### Unit Tests\n\nUnit tests should be isolated (see what is an unencapsulated test), and should contain the `t.Parallel()` directive in order to keep things nice and speedy.\n\nIf you add a slow running (more than a couple of seconds) test, it needs to be wrapped like so:\n```\nif testing.Short() {\n\tt.Skip(\"skipping a_long_running_test\")\n} else {\n\t// Slow test goes here...\n}\n```\nSlows tests can (and should) still include `t.Parallel()`\n\nBest practice for unit tests is to define the testing package appending _test to the name of your package, e.g. `mypackage_test` and then import `mypackage` inside your tests.\nThis encourages good package design and will enable you to define the exported package API in a composable way.\n\n### Integration Tests\n\nTo add an integration test, create a separate file for your integration tests using the naming convention `mypackage_integration_test.go` Use the same package declaration as your unit tests: `mypackage_test`. At the very top of the file before the package declaration add this custom build directive:\n\n```\n// +build integration\n\n```\nNote that there needs to be a blank line before you declare the package name. \n\nThis directive will ensure that integration tests are automatically separated from unit tests, and will not be run as part of the normal test suite.\nYou should NOT add `t.Parallel()` to an unencapsulated test as it may cause intermittent failures.\n\n### What is an unencapsulated test?\nA test is unencapsulated (not isolated) if it cannot be run (with repeatable success) without a certain surrounding state. Relying on external binaries that may not be present, writing or reading from the filesystem without care to specifically avoid collisions, or relying on other tests to run in a specific sequence for your test to pass are all examples of a test that you should carefully consider before committing. If you would like to easily check that your test is isolated before committing simply run: `make docker-test`, or if your test is marked as slow: `make docker-test-slow`. This will mount the jx project folder into a golang docker container that does not include any of your host machines environment. If your test passes here, then you can be happy that the test is encapsulated.\n\n### Mocking / Stubbing\nMocking or stubbing methods in your unit tests will get you a long way towards test isolation. Coupled with the use of interface based APIs you should be able to make your methods easily testable and useful to other packages that may need to import them.\nhttps://github.com/petergtz/pegomock Is our current mocking library of choice, mainly because it is very easy to use and doesn't require you to write your own mocks (Yay!)\nWe place all interfaces for each package in a file called `interface.go` in the relevant folder. So you can find all interfaces for `github.com/jenkins-x/jx/v2/pkg/util` in `github.com/jenkins-x/jx/v2/pkg/util/interface.go` \nGenerating/Regenerating a mock for a given interface is easy, just go to the `interface.go` file that corresponds with the interface you would like to mock and add a comment directly above your interface definition that will look something like this:\n```\n// CommandInterface defines the interface for a Command\n//go:generate pegomock generate github.com/jenkins-x/jx/v2/pkg/util CommandInterface -o mocks/command_interface.go\ntype CommandInterface interface {\n\tDidError() bool\n\tDidFail() bool\n\tError() error\n\tRun() (string, error)\n\tRunWithoutRetry() (string, error)\n\tSetName(string)\n\tSetDir(string)\n\tSetArgs([]string)\n\tSetTimeout(time.Duration)\n\tSetExponentialBackOff(*backoff.ExponentialBackOff)\n}\n```\nIn the example you can see that we pass the generator to use: `pegomock generate` the package path name: `github.com/jenkins-x/jx/v2/pkg/util` the name of the interface: `CommandInterface` and finally an output directive to write the generated file to a mock subfolder. To keep things nice and tidy it's best to write each mocked interface to a separate file in this folder. So in this case: `-o mocks/command_interface.go`\n\nNow simply run:\n```\ngo generate ./...\n```\nor\n```\nmake generate\n```\n\nYou now have a mock to test your new interface!\nThe new mock can now be imported into your test file and used for easy mocking/stubbing.\nHere's an example:\n```\npackage util_test\n\nimport (\n\t\"errors\"\n\t\"testing\"\n\n\t\"github.com/jenkins-x/jx/v2/pkg/util\"\n\tmocks \"github.com/jenkins-x/jx/v2/pkg/util/mocks\"\n\t. \"github.com/petergtz/pegomock\"\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestJXBinaryLocationSuccess(t *testing.T) {\n\tt.Parallel()\n\tcommandInterface := mocks.NewMockCommandInterface()\n\tWhen(commandInterface.RunWithoutRetry()).ThenReturn(\"/test/something/bin/jx\", nil)\n\n\tres, err := util.JXBinaryLocation(commandInterface)\n\tassert.Equal(t, \"/test/something/bin\", res)\n\tassert.NoError(t, err, \"Should not error\")\n}\n```\nHere we're importing the mock we need in our import declaration:\n```\nmocks \"github.com/jenkins-x/jx/v2/pkg/util/mocks\"\n```\nThen inside the test we're instantiating `NewMockCommandInterface` which was automatically generated for us by pegomock.\n\nNext we're stubbing something that we don't actually want to run when we execute our test. In this case we don't want to make a call to an external binary as that could break our tests isolation. We're using some handy matchers which are provided by pegomock, and importing using a `.` import to keep the syntax neat (You probably shouldn't do this outside of tests):\n```\nWhen(commandInterface.RunWithoutRetry()).ThenReturn(\"/test/something/bin/jx\", nil)\n```\nNow when we can setup our  test using the mock interface and make assertions as normal.\n\n\n### Debug logging\n\nLots of the test have debug output to try figure out when things fail. You can enable verbose debug logging for tests via\n\n```shell \nexport JX_TEST_DEBUG=true\n```\n\n## Debugging\n\nFirst you need to [install Delve](https://github.com/derekparker/delve/blob/master/Documentation/installation/README.md)\n\nThen you should be able to run a debug version of a jx command:\n\n```\ndlv --listen=:2345 --headless=true --api-version=2 exec ./build/jx -- some arguments\n```\n\nThen in you IDE you should be able to then set a breakpoint and connect to `2345`.\n\ne.g. in IntellJ you create a new `Go Remote` execution and then hit `Debug`\n\n### Debugging jx with stdin\n\nIf you want to debug using `jx` with `stdin` to test out terminal interaction, you can start `jx` as usual from the command line then:\n\n* find the `pid` of the jx command via something like `ps -elaf | grep jx`\n* start Delve attaching to the pid:\n\n```shell\n\ndlv --listen=:2345 --headless=true --api-version=2 attach SomePID\n```\n\n### Debugging a unit test\n\nYou can run a single unit test via\n\n```shell\nexport TEST=\"TestSomething\"\nmake test1\n```\n\nYou can then start a Delve debug session on a unit test via:\n\n```shell\nexport TEST=\"TestSomething\"\nmake debugtest1\n```\n\nThen set breakpoints and debug in your IDE like in the above debugging.\n\n### Using a helper script\n\nIf you create a bash file called `jxDebug` as the following (replacing `SomePid` with the actual `pid`):\n\n```bash\n#!/bin/sh\necho \"Debugging jx\"\ndlv --listen=:2345 --headless=true --api-version=2 exec `which jx` -- $*\n```\n\nThen you can change your `jx someArgs` CLI to `jxDebug someArgs` then debug it!\n\n## Pre-commit Hooks\n\nThese are installed as a git 'pre-commit' hook and it operates automatically via a hook when using the `git commit` command. To setup this hook:\n* Install [pre-commit](https://pre-commit.com/#install)\n* Once installed, ensure you're at the root of this repository where the `.pre-commit-config.yaml` file exists, then:\n\n```bash\npre-commit install\n```\n\nIf you wish to find out more:\n- [pre-commit](https://pre-commit.com)\n- [git hooks](https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks)\n\n[git]: https://git-scm.com/\n[dep]: https://github.com/golang/dep \n[go]: https://golang.org/\n[Homebrew]: https://brew.sh/\n[Kubernetes]: https://github.com/kubernetes/kubernetes\n[Minikube]: https://github.com/kubernetes/minikube\n[upstream]: https://help.github.com/articles/fork-a-repo/\n[upx]: https://upx.github.io\n"
        },
        {
          "name": "DCO",
          "type": "blob",
          "size": 1.388671875,
          "content": "Developer Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n660 York Street, Suite 102,\nSan Francisco, CA 94110 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.40234375,
          "content": "FROM ghcr.io/jenkins-x/jx-cli-base-image:0.1.1\n\nARG VERSION\nARG TARGETARCH\nARG TARGETOS\n\nENV HOME /home\nENV JX3_HOME /home/.jx3\n\nRUN echo using jx version ${VERSION} and OS ${TARGETOS} arch ${TARGETARCH} && \\\n  mkdir -p /home/.jx3 && \\\n  curl -L https://github.com/jenkins-x/jx/releases/download/v${VERSION}/jx-${TARGETOS}-${TARGETARCH}.tar.gz | tar xzv && \\\n  mv jx /usr/bin\n\nRUN jx upgrade plugins --mandatory\n"
        },
        {
          "name": "Dockerfile-boot",
          "type": "blob",
          "size": 0.71875,
          "content": "FROM alpine:3.16.2\n\nARG BUILD_DATE\nARG VERSION\nARG REVISION\nARG TARGETARCH\nARG TARGETOS\n\nLABEL maintainer=\"jenkins-x\"\n\nRUN addgroup -S app \\\n    && adduser -S -g app app \\\n    && apk --no-cache add \\\n    ca-certificates curl git git-lfs make netcat-openbsd bash yq\n\nENV JX_HOME /root/.jx\nENV JX3_HOME /root/.jx\nENV HELM_DATA_HOME /root/.local/share/helm\n\nRUN echo using jx version ${VERSION} and OS ${TARGETOS} arch ${TARGETARCH} && \\\n  mkdir -p /home/.jx3 && \\\n  curl -L https://github.com/jenkins-x/jx/releases/download/v${VERSION}/jx-${TARGETOS}-${TARGETARCH}.tar.gz | tar xzv && \\\n  mv jx /usr/bin\n\nRUN jx upgrade plugins --boot --path /usr/bin && \\\n  jx secret plugins upgrade\n\n#RUN chown -R app:app /usr/bin/jx /home\n#USER app\n\n\n\n"
        },
        {
          "name": "Dockerfile-go",
          "type": "blob",
          "size": 0.4873046875,
          "content": "FROM golang:1.23.2-alpine3.19@sha256:f6392ffebb028fed5ffe743ddb9716e38402c978779edd66474bb5d05f5e65e4\n\nARG VERSION\nARG TARGETARCH\nARG TARGETOS\n\n#ENV HOME /home\nENV JX3_HOME /home/.jx3\n\nRUN apk add --no-cache curl && \\\n  echo using jx version ${VERSION} and OS ${TARGETOS} arch ${TARGETARCH} && \\\n  mkdir -p /home/.jx3 && \\\n  curl -L https://github.com/jenkins-x/jx/releases/download/v${VERSION}/jx-${TARGETOS}-${TARGETARCH}.tar.gz | tar xzv && \\\n  mv jx /usr/bin\n\nRUN jx upgrade plugins --mandatory\n"
        },
        {
          "name": "Dockerfile-go-maven",
          "type": "blob",
          "size": 1.0126953125,
          "content": "# ToDo: Make it work with alpine, not sure why alpine images complain about java not found\nFROM golang:1.23.2@sha256:a7f2fc9834049c1f5df787690026a53738e55fc097cd8a4a93faa3e06c67ee32\n\n# Maven\nENV MAVEN_VERSION 3.6.3\nENV M2_HOME /opt/apache-maven-$MAVEN_VERSION\nENV maven.home $M2_HOME\nENV M2 $M2_HOME/bin\nENV PATH $M2:$PATH\nENV JAVA_HOME=/opt/jdk-15.0.1\nENV PATH=$JAVA_HOME/bin:$PATH\nENV JX3_HOME /home/.jx3\n\nARG VERSION\nARG TARGETARCH\nARG TARGETOS\n\nRUN curl -f -L https://repo1.maven.org/maven2/org/apache/maven/apache-maven/$MAVEN_VERSION/apache-maven-$MAVEN_VERSION-bin.tar.gz | tar -C /opt -xzv\n\nRUN curl -f -L https://download.java.net/java/GA/jdk15.0.1/51f4f36ad4ef43e39d0dfdbaf6549e32/9/GPL/openjdk-15.0.1_linux-x64_bin.tar.gz  | tar -C /opt -xzv\n\nRUN echo using jx version ${VERSION} and OS ${TARGETOS} arch ${TARGETARCH} && \\\n  mkdir -p /home/.jx3 && \\\n  curl -L https://github.com/jenkins-x/jx/releases/download/v${VERSION}/jx-${TARGETOS}-${TARGETARCH}.tar.gz | tar xzv && \\\n  mv jx /usr/bin\n\nRUN jx upgrade plugins --mandatory\n"
        },
        {
          "name": "Dockerfile-kubectl",
          "type": "blob",
          "size": 0.671875,
          "content": "FROM alpine:3.16.2\n\nARG VERSION\nARG TARGETARCH\nARG TARGETOS\n\nLABEL org.opencontainers.image.authors=\"Linux Foundation\" \\\n      org.opencontainers.image.description=\"Kubectl docker image used by Jenkins X\" \\\n      org.opencontainers.image.ref.name=\"alpine:3.16.2\" \\\n      org.opencontainers.image.source=\"https://github.com/jenkins-x/jx/blob/main/Dockerfile-kubectl\" \\\n      org.opencontainers.image.title=\"kubectl\"\n\nRUN apk add --update --no-cache curl &&\\\n    adduser -D -u 1001 jx\n\nRUN curl -LO \"https://dl.k8s.io/release/v${VERSION}/bin/${TARGETOS}/${TARGETARCH}/kubectl\" &&\\\n    chmod +x kubectl && \\\n    mv kubectl /usr/local/bin\n\nUSER 1001\nENTRYPOINT [ \"kubectl\" ]\nCMD [ \"--help\" ]\n"
        },
        {
          "name": "Dockerfile-tfo-aws",
          "type": "blob",
          "size": 1.21484375,
          "content": "FROM amazon/aws-cli\n\nARG TARGETARCH\nARG TARGETOS\nARG VERSION\n\n# install packages\nRUN yum -y update \\\n    && yum install -y git tar gzip unzip jq which\\\n    && yum clean all && rm -rf /var/cache/yum\n\nRUN curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/aws-iam-authenticator && \\\n    chmod +x aws-iam-authenticator && \\\n    mv aws-iam-authenticator /usr/bin/aws-iam-authenticator\n\n# terraform\nENV TERRAFORM 1.1.2\nRUN curl -LO https://releases.hashicorp.com/terraform/${TERRAFORM}/terraform_${TERRAFORM}_linux_amd64.zip && \\\n  unzip terraform_${TERRAFORM}_linux_amd64.zip && \\\n  chmod +x terraform && mv terraform /usr/bin && rm terraform_${TERRAFORM}_linux_amd64.zip\n\n# jx\nRUN echo using jx version ${VERSION} and OS ${TARGETOS} arch ${TARGETARCH} && \\\n  mkdir -p /home/.jx3 && \\\n  curl -L https://github.com/jenkins-x/jx/releases/download/v${VERSION}/jx-${TARGETOS}-${TARGETARCH}.tar.gz | tar xzv && \\\n  mv jx /usr/bin\n\n# lets install the boot plugins\nRUN jx upgrade plugins --boot --path /usr/bin\n\n# lets install the admin plugin\nRUN jx admin help\n\nCOPY run.sh /run.sh\nENTRYPOINT [\"/bin/bash\"]\nCMD [\"/run.sh\"]\n\nLABEL org.opencontainers.image.source https://github.com/jenkins-x/jx\n"
        },
        {
          "name": "Dockerfile-tfo-gcp",
          "type": "blob",
          "size": 0.9404296875,
          "content": "FROM google/cloud-sdk:slim\nUSER root\n\nARG TARGETARCH\nARG TARGETOS\nARG VERSION\n\nLABEL org.opencontainers.image.source https://github.com/jenkins-x/jx\n\n# unzip\nRUN apt-get install -y unzip bash jq && \\\n    rm -rf /var/lib/apt/lists/*\n\n# terraform\nENV TERRAFORM 1.1.2\nRUN curl -LO https://releases.hashicorp.com/terraform/${TERRAFORM}/terraform_${TERRAFORM}_linux_amd64.zip && \\\n  unzip terraform_${TERRAFORM}_linux_amd64.zip && \\\n  chmod +x terraform && mv terraform /usr/bin && rm terraform_${TERRAFORM}_linux_amd64.zip\n\n# jx\nRUN echo using jx version ${VERSION} and OS ${TARGETOS} arch ${TARGETARCH} && \\\n  mkdir -p /home/.jx3 && \\\n  curl -L https://github.com/jenkins-x/jx/releases/download/v${VERSION}/jx-${TARGETOS}-${TARGETARCH}.tar.gz | tar xzv && \\\n  mv jx /usr/bin\n\n# lets install the boot plugins\nRUN jx upgrade plugins --boot --path /usr/bin\n\n# lets install the admin plugin\nRUN jx admin help\n\nCOPY run.sh /run.sh\nENTRYPOINT [\"/bin/bash\"]\nCMD [\"run.sh\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.08203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [2018] [Jenkins X Team]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 6.22265625,
          "content": "# Make does not offer a recursive wildcard function, so here's one:\nrwildcard=$(wildcard $1$2) $(foreach d,$(wildcard $1*),$(call rwildcard,$d/,$2))\n\nSHELL := /bin/sh\nNAME := jx\nBINARY_NAME := jx\nBUILD_TARGET = build\nMAIN_SRC_FILE=cmd/main.go\nGO := GO111MODULE=on go\nGO_NOMOD :=GO111MODULE=off go\nREV := $(shell git rev-parse --short HEAD 2> /dev/null || echo 'unknown')\nORG := jenkins-x\nORG_REPO := $(ORG)/$(NAME)\nRELEASE_ORG_REPO := $(ORG_REPO)\nROOT_PACKAGE := github.com/$(ORG_REPO)\n\n# The go version is derived from the image built by this repo: https://github.com/jenkins-x/jx-goreleaser-image\nGO_VERSION := $(shell $(GO) version | sed -e 's/^[^0-9.]*\\([0-9.]*\\).*/\\1/')\nGO_DEPENDENCIES := $(call rwildcard,pkg/,*.go) $(call rwildcard,cmd/,*.go)\n\nGIT_TREE_STATE := $(shell test -z \"`git status --porcelain`\" && echo \"clean\" || echo \"dirty\")\nBRANCH     := $(shell git rev-parse --abbrev-ref HEAD 2> /dev/null  || echo 'unknown')\nBUILD_DATE := $(shell date -u +%Y-%m-%dT%H:%M:%S)\nCGO_ENABLED = 0\n\nREPORTS_DIR=$(BUILD_TARGET)/reports\n\nGOTEST := $(GO) test\n\n# set dev version unless VERSION is explicitly set via environment\nVERSION ?= $(shell echo \"$$(git for-each-ref refs/tags/ --count=1 --sort=-version:refname --format='%(refname:short)' 2>/dev/null)-dev+$(REV)\" | sed 's/^v//')\n\n# Build flags for setting build-specific configuration at build time - defaults to empty\n#BUILD_TIME_CONFIG_FLAGS ?= \"\"\n\n# Full build flags used when building binaries. Not used for test compilation/execution.\nBUILDFLAGS :=  -ldflags \\\n  \" -X $(ROOT_PACKAGE)/pkg/cmd/version.Version=$(VERSION)\\\n\t\t-X $(ROOT_PACKAGE)/pkg/cmd/version.Revision=$(REV)\\\n\t\t-X $(ROOT_PACKAGE)/pkg/cmd/version.Branch=$(BRANCH)\\\n\t\t-X $(ROOT_PACKAGE)/pkg/cmd/version.GitTreeState=$(GIT_TREE_STATE)\\\n\t\t-X $(ROOT_PACKAGE)/pkg/cmd/version.BuildDate=$(BUILD_DATE)\\\n\t\t-X $(ROOT_PACKAGE)/pkg/cmd/version.GoVersion=$(GO_VERSION)\\\n\t\t$(BUILD_TIME_CONFIG_FLAGS)\"\n\n# Some tests expect default values for version.*, so just use the config package values there.\nTEST_BUILDFLAGS :=  -ldflags \"$(BUILD_TIME_CONFIG_FLAGS)\"\n\nifdef DEBUG\nBUILDFLAGS := -gcflags \"all=-N -l\" $(BUILDFLAGS)\nendif\n\nifdef PARALLEL_BUILDS\nBUILDFLAGS += -p $(PARALLEL_BUILDS)\nGOTEST += -p $(PARALLEL_BUILDS)\nelse\n# -p 4 seems to work well for people\nGOTEST += -p 4\nendif\n\nifdef DISABLE_TEST_CACHING\nGOTEST += -count=1\nendif\n\nTEST_PACKAGE ?= ./...\nCOVER_OUT:=$(REPORTS_DIR)/cover.txt\nCOVERFLAGS=-coverprofile=$(COVER_OUT) --covermode=atomic --coverpkg=./pkg/...\n\n.PHONY: list\nlist: ## List all make targets\n\t@$(MAKE) -pRrn : -f $(MAKEFILE_LIST) 2>/dev/null | awk -v RS= -F: '/^# File/,/^# Finished Make data base/ {if ($$1 !~ \"^[#.]\") {print $$1}}' | egrep -v -e '^[^[:alnum:]]' -e '^$@$$' | sort\n\n.PHONY: help\n.DEFAULT_GOAL := help\nhelp:\n\t@grep -h -E '^[a-zA-Z0-9_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$2}'\n\nfull: check ## Build and run the tests\ncheck: build test ## Build and run the tests\n\nprint-version: ## Print version\n\t@echo $(VERSION)\n\nbuild: $(GO_DEPENDENCIES) clean ## Build jx binary for current OS\n\tgo mod download\n\tCGO_ENABLED=$(CGO_ENABLED) $(GO) $(BUILD_TARGET) $(BUILDFLAGS) -o build/$(BINARY_NAME) $(MAIN_SRC_FILE)\n\nbuild-all: $(GO_DEPENDENCIES) build make-reports-dir ## Build all files - runtime, all tests etc.\n\tCGO_ENABLED=$(CGO_ENABLED) $(GOTEST) -run=nope -tags=integration -failfast -short ./... $(BUILDFLAGS)\n\ntidy-deps: ## Cleans up dependencies\n\t$(GO) mod tidy\n\t# mod tidy only takes compile dependencies into account, let's make sure we capture tooling dependencies as well\n\t@$(MAKE) install-generate-deps\n\n.PHONY: make-reports-dir\nmake-reports-dir:\n\tmkdir -p $(REPORTS_DIR)\n\ntest: ## Run tests with the \"unit\" build tag\n\tKUBECONFIG=/cluster/connections/not/allowed JX3_HOME=/tmp/jx3 CGO_ENABLED=$(CGO_ENABLED) $(GOTEST) --tags=unit -failfast -short ./... $(TEST_BUILDFLAGS)\n\ntest-coverage : make-reports-dir ## Run tests and coverage for all tests with the \"unit\" build tag\n\tCGO_ENABLED=$(CGO_ENABLED) $(GOTEST) --tags=unit $(COVERFLAGS) -failfast -short ./... $(TEST_BUILDFLAGS)\n\ntest-report-html: make-reports-dir test-coverage\n\t$(GO) tool cover -html=$(COVER_OUT)\n\ntest-total-cov: make-reports-dir test-coverage\n\t$(GO) tool cover -func=$(COVER_OUT)\n\ninstall: $(GO_DEPENDENCIES) ## Install the binary\n\tGOBIN=${GOPATH}/bin $(GO) install $(BUILDFLAGS) $(MAIN_SRC_FILE)\n\nlinux: ## Build for Linux\n\tCGO_ENABLED=$(CGO_ENABLED) GOOS=linux GOARCH=amd64 $(GO) $(BUILD_TARGET) $(BUILDFLAGS) -o build/linux/$(BINARY_NAME) $(MAIN_SRC_FILE)\n\tchmod +x build/linux/$(BINARY_NAME)\n\narm: ## Build for ARM\n\tCGO_ENABLED=$(CGO_ENABLED) GOOS=linux GOARCH=arm $(GO) $(BUILD_TARGET) $(BUILDFLAGS) -o build/arm/$(BINARY_NAME) $(MAIN_SRC_FILE)\n\tchmod +x build/arm/$(BINARY_NAME)\n\nwin: ## Build for Windows\n\tCGO_ENABLED=$(CGO_ENABLED) GOOS=windows GOARCH=amd64 $(GO) $(BUILD_TARGET) $(BUILDFLAGS) -o build/win/$(BINARY_NAME)-windows-amd64.exe $(MAIN_SRC_FILE)\n\ndarwin: ## Build for OSX\n\tCGO_ENABLED=$(CGO_ENABLED) GOOS=darwin GOARCH=amd64 $(GO) $(BUILD_TARGET) $(BUILDFLAGS) -o build/darwin/$(BINARY_NAME) $(MAIN_SRC_FILE)\n\tchmod +x build/darwin/$(BINARY_NAME)\n\n.PHONY: release\nrelease: clean linux test\n\nrelease-all: release linux win darwin\n\n.PHONY: goreleaser\ngoreleaser:\n\tstep-go-releaser --organisation=$(ORG) --revision=$(REV) --branch=$(BRANCH) --build-date=$(BUILD_DATE) --go-version=$(GO_VERSION) --root-package=$(ROOT_PACKAGE) --version=$(VERSION)\n\n.PHONY: clean\nclean: ## Clean the generated artifacts\n\trm -rf build release dist\n\nget-fmt-deps: ## Install test dependencies\n\t$(GO_NOMOD) install golang.org/x/tools/cmd/goimports\n\n.PHONY: fmt\nfmt: importfmt ## Format the code\n\t$(eval FORMATTED = $(shell $(GO) fmt ./...))\n\t@if [ \"$(FORMATTED)\" == \"\" ]; \\\n      \tthen \\\n      \t    echo \"All Go files properly formatted\"; \\\n      \telse \\\n      \t\techo \"Fixed formatting for: $(FORMATTED)\"; \\\n      \tfi\n\n.PHONY: importfmt\nimportfmt: get-fmt-deps\n\t@echo \"Formatting the imports...\"\n\tgoimports -w $(GO_DEPENDENCIES)\n\n.PHONY: lint\nlint: ## Lint the code\n\t./hack/gofmt.sh\n\t./hack/linter.sh\n\t./hack/generate.sh\n\n.PHONY: all\nall: fmt build test lint\n\nbin/docs:\n\tgo build $(LDFLAGS) -v -o bin/docs cmd/docs/*.go\n\n.PHONY: docs\ndocs: bin/docs ## update docs\n\t@echo \"Generating docs\"\n\t@./bin/docs --target=./docs/cmd\n\t@./bin/docs --target=./docs/man/man1 --kind=man\n\t@rm -f ./bin/docs"
        },
        {
          "name": "OWNERS",
          "type": "blob",
          "size": 0.142578125,
          "content": "approvers:\n- rawlingsj\n- jstrachan\n- rajdavies\n- ankitm123\n- maintainers\nreviewers:\n- rawlingsj\n- jstrachan\n- rajdavies\n- ankitm123\n- maintainers\n"
        },
        {
          "name": "OWNERS_ALIASES",
          "type": "blob",
          "size": 0.0361328125,
          "content": "foreignAliases:\n- name: jx-community\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.857421875,
          "content": "# Jenkins X CLI\n\n[![Documentation](https://godoc.org/github.com/jenkins-x/jx?status.svg)](https://pkg.go.dev/mod/github.com/jenkins-x/jx)\n[![Go Report Card](https://goreportcard.com/badge/github.com/jenkins-x/jx)](https://goreportcard.com/report/github.com/jenkins-x/jx)\n[![Releases](https://img.shields.io/github/release-pre/jenkins-x/jx.svg)](https://github.com/jenkins-x/jx/releases)\n[![LICENSE](https://img.shields.io/github/license/jenkins-x/jx.svg)](https://github.com/jenkins-x/jx/blob/master/LICENSE)\n[![Slack Status](https://img.shields.io/badge/slack-join_chat-white.svg?logo=slack&style=social)](https://slack.k8s.io/)\n[![codecov](https://codecov.io/gh/jenkins-x/jx/branch/main/graph/badge.svg?token=aBT7eQHx37)](https://codecov.io/gh/jenkins-x/jx)\n\n`jx` is the modular command line CLI for [Jenkins X 3.x](https://jenkins-x.io/v3/about/)\n\n## Commands\n\nSee the [jx command reference](https://jenkins-x.io/v3/develop/reference/jx/)\n\n## Issues\n\nTo track [issues in this repository](https://github.com/jenkins-x/jx/issues) and all the related [Plugins](#plugins) use these links:\n\n* [view open issues in jenkins-x-plugins](https://github.com/issues?q=is%3Aopen+is%3Aissue+author%3Ajstrachan+archived%3Afalse+user%3Ajenkins-x-plugins)\n* [view open pull requests in jenkins-x-plugins](https://github.com/pulls?q=is%3Aopen+is%3Apr+archived%3Afalse+user%3Ajenkins-x-plugins+-label%3Adependencies)\n\n## Plugins\n\nYou can browse the documentation for all of the `jx`  plugins at:\n\n* [Plugin CLI Reference](https://jenkins-x.io/v3/develop/reference/jx/)\n* [Plugin Source](https://github.com/jenkins-x-plugins)\n\n\n## Components\n\n* [jx-git-operator](https://github.com/jenkins-x/jx-git-operator) is an operator for triggering jobs when git commits are made\n* [octant-jx](https://github.com/jenkins-x/octant-jx) an open source Jenkins X UI for  [vmware-tanzu/octant](https://github.com/vmware-tanzu/octant)\n\n## Libraries\n\nThese are the modular libraries which have been refactored out of the main [jenkins-x/jx](https://github.com/jenkins-x/jx) repository as part of the [modularisation enhancement process](https://github.com/jenkins-x/enhancements/tree/master/proposals/5#1-overview)\n       \n* [go-scm](https://github.com/jenkins-x/go-scm) API for working with SCM providers\n* [jx-api](https://github.com/jenkins-x/jx-api) the core JX APIs\n* [jx-helpers](https://github.com/jenkins-x/jx-helpers) a bunch of utilities (mostly from the `util` package) refactored + no longer dependent on [jenkins-x/jx](https://github.com/jenkins-x/jx/) \n* [jx-kube-client](https://github.com/jenkins-x/jx-kube-client) the core library for working with kube/jx/tekton clients\n* [jx-logging](https://github.com/jenkins-x/jx-logging) logging APIs\n* [lighthouse-client](https://github.com/jenkins-x/lighthouse-client) client library for working with [lighthouse](https://github.com/jenkins-x/lighthouse)\n     \n                                        \n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.40625,
          "content": "# Security Policy\n\nThe Jenkins X project takes security seriously. We make every possible effort to ensure users can adequately secure their automation infrastructure. To that end, we work with Jenkins X platform and app developers, as well as security researchers, to fix security vulnerabilities in Jenkins X in a timely manner, and to improve the security of Jenkins X in general.\n\n## Supported Versions\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 2.0.x   | :white_check_mark: |\n\n\n## Reporting a Vulnerability\n\nIf you find a vulnerability in Jenkins X, please report it in the Jenkins CI issue tracker under the [SECURITY](https://issues.jenkins-ci.org/browse/SECURITY) project. **Please do not report security issues in the github tracker.**\nThis project is configured in such a way that only the reporter and the security team can see the details. By restricting access to this potentially sensitive information, we can work on a fix and deliver it before the method of attack becomes well-known.\n\nIf you are unable to report using the above issue tracker, you can also send your report to the private Jenkins Security Team mailing list: jenkinsci-cert@googlegroups.com\n\n## Vulnerabilities in Apps\n\nWhilst the Jenkins X team is not responsible for the quality of third party apps, please still use the above reporting mechanism and we will co-ordinate with the app developer to ensure a fix in a secure maner.\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.3310546875,
          "content": "#!/bin/sh\n\nif [ -z \"$GCP_SA\" ]\nthen\n  echo \"no GCP SA specified\"\nelse\n  echo \"enabling GCP Service Account from $GCP_SA\"\n  gcloud auth activate-service-account --key-file $GCP_SA\nfi\n\n\necho \"building container image version: $VERSION\"\n\ngcloud builds submit --config cloudbuild.yaml --project jenkinsxio --substitutions=_VERSION=\"$VERSION\"\n\n"
        },
        {
          "name": "charts",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "custom-boilerplate.go.txt",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "dependency-matrix",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 4.1806640625,
          "content": "module github.com/jenkins-x/jx\n\nrequire (\n\tgithub.com/blang/semver v3.5.1+incompatible\n\tgithub.com/cpuguy83/go-md2man v1.0.10\n\tgithub.com/jenkins-x/jx-api/v4 v4.7.6\n\tgithub.com/jenkins-x/jx-helpers/v3 v3.8.0\n\tgithub.com/jenkins-x/jx-kube-client/v3 v3.0.8\n\tgithub.com/jenkins-x/jx-logging/v3 v3.0.17\n\tgithub.com/pkg/browser v0.0.0-20180916011732-0a3d74bf9ce4\n\tgithub.com/rhysd/go-github-selfupdate v1.2.3\n\tgithub.com/spf13/cobra v1.8.1\n\tgithub.com/spf13/pflag v1.0.5\n\tgithub.com/stretchr/testify v1.9.0\n\tk8s.io/api v0.31.2\n\tk8s.io/apimachinery v0.31.2\n\tk8s.io/client-go v0.31.2\n\tsigs.k8s.io/kustomize/kyaml v0.17.1\n\n)\n\nrequire (\n\tdario.cat/mergo v1.0.0 // indirect\n\tgithub.com/AlecAivazis/survey/v2 v2.3.4 // indirect\n\tgithub.com/MakeNowJust/heredoc v1.0.0 // indirect\n\tgithub.com/cenkalti/backoff v2.2.1+incompatible // indirect\n\tgithub.com/creack/pty v1.1.18 // indirect\n\tgithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc // indirect\n\tgithub.com/emicklei/go-restful/v3 v3.12.1 // indirect\n\tgithub.com/fatih/color v1.15.0 // indirect\n\tgithub.com/fxamacker/cbor/v2 v2.7.0 // indirect\n\tgithub.com/ghodss/yaml v1.0.0 // indirect\n\tgithub.com/go-errors/errors v1.4.2 // indirect\n\tgithub.com/go-logr/logr v1.4.2 // indirect\n\tgithub.com/go-openapi/jsonpointer v0.21.0 // indirect\n\tgithub.com/go-openapi/jsonreference v0.21.0 // indirect\n\tgithub.com/go-openapi/swag v0.23.0 // indirect\n\tgithub.com/go-stack/stack v1.8.1 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b // indirect\n\tgithub.com/golang/protobuf v1.5.4 // indirect\n\tgithub.com/google/gnostic-models v0.6.8 // indirect\n\tgithub.com/google/go-cmp v0.6.0 // indirect\n\tgithub.com/google/go-github/v30 v30.1.0 // indirect\n\tgithub.com/google/go-querystring v1.0.0 // indirect\n\tgithub.com/google/gofuzz v1.2.0 // indirect\n\tgithub.com/google/uuid v1.6.0 // indirect\n\tgithub.com/imdario/mergo v0.3.16 // indirect\n\tgithub.com/inconshreveable/go-update v0.0.0-20160112193335-8152e7eb6ccf // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/jenkins-x/logrus-stackdriver-formatter v0.2.7 // indirect\n\tgithub.com/josharian/intern v1.0.0 // indirect\n\tgithub.com/json-iterator/go v1.1.12 // indirect\n\tgithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51 // indirect\n\tgithub.com/mailru/easyjson v0.7.7 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.17 // indirect\n\tgithub.com/mgutz/ansi v0.0.0-20200706080929-d51e80ef957d // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 // indirect\n\tgithub.com/rawlingsj/jsonschema v0.0.0-20210511142122-a9c2cfdb7dcf // indirect\n\tgithub.com/russross/blackfriday v1.6.0 // indirect\n\tgithub.com/sirupsen/logrus v1.9.3 // indirect\n\tgithub.com/tcnksm/go-gitconfig v0.1.2 // indirect\n\tgithub.com/ulikunitz/xz v0.5.9 // indirect\n\tgithub.com/vrischmann/envconfig v1.3.0 // indirect\n\tgithub.com/x448/float16 v0.8.4 // indirect\n\tgithub.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb // indirect\n\tgithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415 // indirect\n\tgithub.com/xeipuuv/gojsonschema v1.2.0 // indirect\n\tgolang.org/x/crypto v0.28.0 // indirect\n\tgolang.org/x/net v0.30.0 // indirect\n\tgolang.org/x/oauth2 v0.23.0 // indirect\n\tgolang.org/x/sys v0.26.0 // indirect\n\tgolang.org/x/term v0.25.0 // indirect\n\tgolang.org/x/text v0.19.0 // indirect\n\tgolang.org/x/time v0.7.0 // indirect\n\tgoogle.golang.org/protobuf v1.35.1 // indirect\n\tgopkg.in/evanphx/json-patch.v4 v4.12.0 // indirect\n\tgopkg.in/inf.v0 v0.9.1 // indirect\n\tgopkg.in/yaml.v2 v2.4.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n\tk8s.io/klog/v2 v2.130.1 // indirect\n\tk8s.io/kube-openapi v0.0.0-20241009091222-67ed5848f094 // indirect\n\tk8s.io/utils v0.0.0-20240921022957-49e7df575cb6 // indirect\n\tsigs.k8s.io/json v0.0.0-20241014173422-cfa47c3a1cc8 // indirect\n\tsigs.k8s.io/structured-merge-diff/v4 v4.4.1 // indirect\n\tsigs.k8s.io/yaml v1.4.0 // indirect\n)\n\ngo 1.23\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 25.47265625,
          "content": "dario.cat/mergo v1.0.0 h1:AGCNq9Evsj31mOgNPcLyXc+4PNABt905YmuqPYYpBWk=\ndario.cat/mergo v1.0.0/go.mod h1:uNxQE+84aUszobStD9th8a29P2fMDhsBdgRYvZOxGmk=\ngithub.com/AlecAivazis/survey/v2 v2.3.4 h1:pchTU9rsLUSvWEl2Aq9Pv3k0IE2fkqtGxazskAMd9Ng=\ngithub.com/AlecAivazis/survey/v2 v2.3.4/go.mod h1:hrV6Y/kQCLhIZXGcriDCUBtB3wnN7156gMXJ3+b23xM=\ngithub.com/MakeNowJust/heredoc v1.0.0 h1:cXCdzVdstXyiTqTvfqk9SDHpKNjxuom+DOlyEeQ4pzQ=\ngithub.com/MakeNowJust/heredoc v1.0.0/go.mod h1:mG5amYoWBHf8vpLOuehzbGGw0EHxpZZ6lCpQ4fNJ8LE=\ngithub.com/Netflix/go-expect v0.0.0-20220104043353-73e0943537d2 h1:+vx7roKuyA63nhn5WAunQHLTznkw5W8b1Xc0dNjp83s=\ngithub.com/Netflix/go-expect v0.0.0-20220104043353-73e0943537d2/go.mod h1:HBCaDeC1lPdgDeDbhX8XFpy1jqjK0IBG8W5K+xYqA0w=\ngithub.com/TV4/logrus-stackdriver-formatter v0.1.0 h1:nFea8RiX7ecTnWPM+9FIqwZYJdcGo58CHMGIVdYzMXg=\ngithub.com/TV4/logrus-stackdriver-formatter v0.1.0/go.mod h1:wwS7hOiBvP6SBD0UXCa767+VhHkaXrfX0MzUojYcN0Q=\ngithub.com/blang/semver v3.5.1+incompatible h1:cQNTCjp13qL8KC3Nbxr/y2Bqb63oX6wdnnjpJbkM4JQ=\ngithub.com/blang/semver v3.5.1+incompatible/go.mod h1:kRBLl5iJ+tD4TcOOxsy/0fnwebNt5EWlYSAyrTnjyyk=\ngithub.com/cenkalti/backoff v2.2.1+incompatible h1:tNowT99t7UNflLxfYYSlKYsBpXdEet03Pg2g16Swow4=\ngithub.com/cenkalti/backoff v2.2.1+incompatible/go.mod h1:90ReRw6GdpyfrHakVjL/QHaoyV4aDUVVkXQJJJ3NXXM=\ngithub.com/cpuguy83/go-md2man v1.0.10 h1:BSKMNlYxDvnunlTymqtgONjNnaRV1sTpcovwwjF22jk=\ngithub.com/cpuguy83/go-md2man v1.0.10/go.mod h1:SmD6nW6nTyfqj6ABTjUi3V3JVMnlJmwcJI5acqYI6dE=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/creack/pty v1.1.17/go.mod h1:MOBLtS5ELjhRRrroQr9kyvTxUAFNvYEK993ew/Vr4O4=\ngithub.com/creack/pty v1.1.18 h1:n56/Zwd5o6whRC5PMGretI4IdRLlmBXYNjScPaBgsbY=\ngithub.com/creack/pty v1.1.18/go.mod h1:MOBLtS5ELjhRRrroQr9kyvTxUAFNvYEK993ew/Vr4O4=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/emicklei/go-restful/v3 v3.12.1 h1:PJMDIM/ak7btuL8Ex0iYET9hxM3CI2sjZtzpL63nKAU=\ngithub.com/emicklei/go-restful/v3 v3.12.1/go.mod h1:6n3XBCmQQb25CM2LCACGz8ukIrRry+4bhvbpWn3mrbc=\ngithub.com/fatih/color v1.15.0 h1:kOqh6YHBtK8aywxGerMG2Eq3H6Qgoqeo13Bk2Mv/nBs=\ngithub.com/fatih/color v1.15.0/go.mod h1:0h5ZqXfHYED7Bhv2ZJamyIOUej9KtShiJESRwBDUSsw=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/fxamacker/cbor/v2 v2.7.0 h1:iM5WgngdRBanHcxugY4JySA0nk1wZorNOpTgCMedv5E=\ngithub.com/fxamacker/cbor/v2 v2.7.0/go.mod h1:pxXPTn3joSm21Gbwsv0w9OSA2y1HFR9qXEeXQVeNoDQ=\ngithub.com/ghodss/yaml v1.0.0 h1:wQHKEahhL6wmXdzwWG11gIVCkOv05bNOh+Rxn0yngAk=\ngithub.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\ngithub.com/go-errors/errors v1.4.2 h1:J6MZopCL4uSllY1OfXM374weqZFFItUbrImctkmUxIA=\ngithub.com/go-errors/errors v1.4.2/go.mod h1:sIVyrIiJhuEF+Pj9Ebtd6P/rEYROXFi3BopGUQ5a5Og=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-openapi/jsonpointer v0.21.0 h1:YgdVicSA9vH5RiHs9TZW5oyafXZFc6+2Vc1rr/O9oNQ=\ngithub.com/go-openapi/jsonpointer v0.21.0/go.mod h1:IUyH9l/+uyhIYQ/PXVA41Rexl+kOkAPDdXEYns6fzUY=\ngithub.com/go-openapi/jsonreference v0.21.0 h1:Rs+Y7hSXT83Jacb7kFyjn4ijOuVGSvOdF2+tg1TRrwQ=\ngithub.com/go-openapi/jsonreference v0.21.0/go.mod h1:LmZmgsrTkVg9LG4EaHeY8cBDslNPMo06cago5JNLkm4=\ngithub.com/go-openapi/swag v0.23.0 h1:vsEVJDUo2hPJ2tu0/Xc+4noaxyEffXNIs3cOULZ+GrE=\ngithub.com/go-openapi/swag v0.23.0/go.mod h1:esZ8ITTYEsH1V2trKHjAN8Ai7xHb8RV+YSZ577vPjgQ=\ngithub.com/go-stack/stack v1.8.1 h1:ntEHSVwIt7PNXNpgPmVfMrNhLtgjlmnZha2kOpuRiDw=\ngithub.com/go-stack/stack v1.8.1/go.mod h1:dcoOX6HbPZSZptuspn9bctJ+N/CnF5gGygcUP3XYfe4=\ngithub.com/go-task/slim-sprig/v3 v3.0.0 h1:sUs3vkvUymDpBKi3qH1YSqBQk9+9D/8M2mN1vB6EwHI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0/go.mod h1:W848ghGpv3Qj3dhTPRyJypKRiqCdHZiAzKg9hl15HA8=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b h1:VKtxabqXZkF25pY9ekfRL6a582T4P37/31XEstQ5p58=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/gnostic-models v0.6.8 h1:yo/ABAfM5IMRsS1VnXjTBvUb61tFIHozhlYvRgGre9I=\ngithub.com/google/gnostic-models v0.6.8/go.mod h1:5n7qKqH0f5wFt+aWF8CW6pZLLNOfYuF5OpfBSENuI8U=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-github/v30 v30.1.0 h1:VLDx+UolQICEOKu2m4uAoMti1SxuEBAl7RSEG16L+Oo=\ngithub.com/google/go-github/v30 v30.1.0/go.mod h1:n8jBpHl45a/rlBUtRJMOG4GhNADUQFEufcolZ95JfU8=\ngithub.com/google/go-querystring v1.0.0 h1:Xkwi/a1rcvNg1PPYe5vI8GbeBY/jrVuDX5ASuANWTrk=\ngithub.com/google/go-querystring v1.0.0/go.mod h1:odCYkC5MyYFN7vkCjXpyrEuKhc/BUO6wN/zVPAxq5ck=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/gofuzz v1.2.0 h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=\ngithub.com/google/gofuzz v1.2.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/pprof v0.0.0-20240727154555-813a5fbdbec8 h1:FKHo8hFI3A+7w0aUQuYXQ+6EN5stWmeY/AZqtM8xk9k=\ngithub.com/google/pprof v0.0.0-20240727154555-813a5fbdbec8/go.mod h1:K1liHPHnj73Fdn/EKuT8nrFqBihUSKXoLYU0BuatOYo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/hinshun/vt10x v0.0.0-20220119200601-820417d04eec h1:qv2VnGeEQHchGaZ/u7lxST/RaJw+cv273q79D81Xbog=\ngithub.com/hinshun/vt10x v0.0.0-20220119200601-820417d04eec/go.mod h1:Q48J4R4DvxnHolD5P8pOtXigYlRuPLGl6moFx3ulM68=\ngithub.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\ngithub.com/imdario/mergo v0.3.16 h1:wwQJbIsHYGMUyLSPrEq1CT16AhnhNJQ51+4fdHUnCl4=\ngithub.com/imdario/mergo v0.3.16/go.mod h1:WBLT9ZmE3lPoWsEzCh9LPo3TiwVN+ZKEjmz+hD27ysY=\ngithub.com/inconshreveable/go-update v0.0.0-20160112193335-8152e7eb6ccf h1:WfD7VjIE6z8dIvMsI4/s+1qr5EL+zoIGev1BQj1eoJ8=\ngithub.com/inconshreveable/go-update v0.0.0-20160112193335-8152e7eb6ccf/go.mod h1:hyb9oH7vZsitZCiBt0ZvifOrB+qc8PS5IiilCIb87rg=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/jenkins-x/jx-api/v4 v4.7.6 h1:+SJwYn/uF7CwbC5cD399zLjcM+VEgJMS89QL8ixa0WY=\ngithub.com/jenkins-x/jx-api/v4 v4.7.6/go.mod h1:qBBQ+CUsclk9O8vV0dksPpyKgS0wXe7O/3Tzm9xxRiA=\ngithub.com/jenkins-x/jx-helpers/v3 v3.8.0 h1:1xrEhyMeFUBDME3Filt7Co2tGjID5EOMnSo3HAhVM+M=\ngithub.com/jenkins-x/jx-helpers/v3 v3.8.0/go.mod h1:4FcqDU6+PXksYHJkmlCMrlnriR1LsnLKZ2coXVzCrXE=\ngithub.com/jenkins-x/jx-kube-client/v3 v3.0.8 h1:AzXuXCdv4DQf8wqR5c1UL0uXVu6KrAjdPtPb6wrG0Hs=\ngithub.com/jenkins-x/jx-kube-client/v3 v3.0.8/go.mod h1:ELgPjZhMqYiCKml4L16GREF6bkC890KRKfpNCz+aIgE=\ngithub.com/jenkins-x/jx-logging/v3 v3.0.17 h1:0qpgKfpxl4uks6vZZV5LCGCOOD3axgMxoK3m6X74kpQ=\ngithub.com/jenkins-x/jx-logging/v3 v3.0.17/go.mod h1:vUW4EJxE8TowVsFhcwcpKag189ZS5J25a3kyMPq1mYM=\ngithub.com/jenkins-x/logrus-stackdriver-formatter v0.2.7 h1:waTRYQoVXfRZXs1SVGgk8hcHdlBZOP8rJJLYg33up6k=\ngithub.com/jenkins-x/logrus-stackdriver-formatter v0.2.7/go.mod h1:4xQdtL7MXIiluYFTF1cP7c0IZdLv5UMJv3h1ttgH72w=\ngithub.com/josharian/intern v1.0.0 h1:vlS4z54oSdjm0bgjRigI+G1HpF+tI+9rE5LLzOg8HmY=\ngithub.com/josharian/intern v1.0.0/go.mod h1:5DoeVV0s6jJacbCEi61lwdGj/aVlrQvzHFFd8Hwg//Y=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51 h1:Z9n2FFNUXsshfwJMBgNA0RU6/i7WVaAegv3PtuIHPMs=\ngithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51/go.mod h1:CzGEWj7cYgsdH8dAjBGEr58BoE7ScuLd+fwFZ44+/x8=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=\ngithub.com/mailru/easyjson v0.7.7/go.mod h1:xzfreul335JAWq5oZzymOObrkdz5UnU4kGfJJLY9Nlc=\ngithub.com/mattn/go-colorable v0.1.2/go.mod h1:U0ppj6V5qS13XJ6of8GYAs25YV2eR4EVcfRqFIhoBtE=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.8/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.17 h1:BTarxUcIeDqL27Mc+vyvdWYSL28zpIhv3RoTdsLMPng=\ngithub.com/mattn/go-isatty v0.0.17/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mgutz/ansi v0.0.0-20170206155736-9520e82c474b/go.mod h1:01TrycV0kFyexm33Z7vhZRXopbI8J3TDReVlkTgMUxE=\ngithub.com/mgutz/ansi v0.0.0-20200706080929-d51e80ef957d h1:5PJl274Y63IEHC+7izoQE9x6ikvDFZS2mDVS3drnohI=\ngithub.com/mgutz/ansi v0.0.0-20200706080929-d51e80ef957d/go.mod h1:01TrycV0kFyexm33Z7vhZRXopbI8J3TDReVlkTgMUxE=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=\ngithub.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.14.0 h1:2mOpI4JVVPBN+WQRa0WKH2eXR+Ey+uK4n7Zj0aYpIQA=\ngithub.com/onsi/ginkgo/v2 v2.19.0 h1:9Cnnf7UHo57Hy3k6/m5k3dRfGTMXGvxhHFvkDTCTpvA=\ngithub.com/onsi/ginkgo/v2 v2.19.0/go.mod h1:rlwLi9PilAFJ8jCg9UE1QP6VBpd6/xj3SRC0d6TU0To=\ngithub.com/onsi/gomega v1.4.2/go.mod h1:ex+gbHU/CVuBBDIJjb2X0qEXbFg53c61hWP/1CpauHY=\ngithub.com/onsi/gomega v1.33.1 h1:dsYjIxxSR755MDmKVsaFQTE22ChNBcuuTWgkUDSubOk=\ngithub.com/onsi/gomega v1.33.1/go.mod h1:U4R44UsT+9eLIaYRB2a5qajjtQYn0hauxvRm16AVYg0=\ngithub.com/pkg/browser v0.0.0-20180916011732-0a3d74bf9ce4 h1:49lOXmGaUpV9Fz3gd7TFZY106KVlPVa5jcYD1gaQf98=\ngithub.com/pkg/browser v0.0.0-20180916011732-0a3d74bf9ce4/go.mod h1:4OwLy04Bl9Ef3GJJCoec+30X3LQs/0/m4HFRt/2LUSA=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/rawlingsj/jsonschema v0.0.0-20210511142122-a9c2cfdb7dcf h1:YPl5D1RlBkDDxJBodNwBtzBnqDQobrDJcs/2x3Grfts=\ngithub.com/rawlingsj/jsonschema v0.0.0-20210511142122-a9c2cfdb7dcf/go.mod h1:8LFgdjjkhuo3+T0/kprWPWGqh2+v8QC4hLyjNK6j15s=\ngithub.com/rhysd/go-github-selfupdate v1.2.3 h1:iaa+J202f+Nc+A8zi75uccC8Wg3omaM7HDeimXA22Ag=\ngithub.com/rhysd/go-github-selfupdate v1.2.3/go.mod h1:mp/N8zj6jFfBQy/XMYoWsmfzxazpPAODuqarmPDe2Rg=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/russross/blackfriday v1.5.2/go.mod h1:JO/DiYxRf+HjHt06OyowR9PTA263kcR/rfWxYHBV53g=\ngithub.com/russross/blackfriday v1.6.0 h1:KqfZb0pUVN2lYqZUYRddxF4OR8ZMURnJIG5Y3VRLtww=\ngithub.com/russross/blackfriday v1.6.0/go.mod h1:ti0ldHuxg49ri4ksnFxlkCfN+hvslNlmVHqNRXXJNAY=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/tcnksm/go-gitconfig v0.1.2 h1:iiDhRitByXAEyjgBqsKi9QU4o2TNtv9kPP3RgPgXBPw=\ngithub.com/tcnksm/go-gitconfig v0.1.2/go.mod h1:/8EhP4H7oJZdIPyT+/UIsG87kTzrzM4UsLGSItWYCpE=\ngithub.com/ulikunitz/xz v0.5.9 h1:RsKRIA2MO8x56wkkcd3LbtcE/uMszhb6DpRf+3uwa3I=\ngithub.com/ulikunitz/xz v0.5.9/go.mod h1:nbz6k7qbPmH4IRqmfOplQw/tblSgqTqBwxkY0oWt/14=\ngithub.com/vrischmann/envconfig v1.3.0 h1:4XIvQTXznxmWMnjouj0ST5lFo/WAYf5Exgl3x82crEk=\ngithub.com/vrischmann/envconfig v1.3.0/go.mod h1:bbvxFYJdRSpXrhS63mBFtKJzkDiNkyArOLXtY6q0kuI=\ngithub.com/x448/float16 v0.8.4 h1:qLwI1I70+NjRFUR3zs1JPUCgaCXSh3SW62uAKT1mSBM=\ngithub.com/x448/float16 v0.8.4/go.mod h1:14CWIYCyZA/cWjXOioeEpHeN/83MdbZDRQHoFcYsOfg=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb h1:zGWFAtiMcyryUHoUjUJX0/lt1H2+i2Ka2n+D3DImSNo=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=\ngithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415 h1:EzJWgHovont7NscjpAxXsDA8S8BMYve8Y5+7cuRE7R0=\ngithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415/go.mod h1:GwrjFmJcFw6At/Gs6z4yjiIwzuJ1/+UwLxMQDVQXShQ=\ngithub.com/xeipuuv/gojsonschema v1.2.0 h1:LhYJRs+L4fBtjZUfuSZIKGeVu0QRy8e5Xi7D17UxZ74=\ngithub.com/xeipuuv/gojsonschema v1.2.0/go.mod h1:anYRn/JVcOK2ZgGU+IjEV4nwlhoK5sQluxsYJ78Id3Y=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20201221181555-eec23a3978ad/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=\ngolang.org/x/crypto v0.28.0 h1:GBDwsMXVQi34v5CCYUm2jkJvu4cbtru2U4TN2PSyQnw=\ngolang.org/x/crypto v0.28.0/go.mod h1:rmgy+3RHxRZMyY0jjAJShp2zgEdOqj2AO7U0pYmeQ7U=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.30.0 h1:AcW1SDZMkb8IpzCdQUaIq2sP4sZ4zw+55h6ynffypl4=\ngolang.org/x/net v0.30.0/go.mod h1:2wGyMJ5iFasEhkwi13ChkO/t1ECNC4X4eBKkVFyYFlU=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20181106182150-f42d05182288/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.23.0 h1:PbgcYx2W7i4LvjJWEbf0ngHV6qJYr86PkAV3bXdLEbs=\ngolang.org/x/oauth2 v0.23.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.26.0 h1:KHjCJyddX0LoSTb3J+vWpupP9p0oznkqVk/IfjymZbo=\ngolang.org/x/sys v0.26.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201117132131-f5c789dd3221/go.mod h1:Nr5EML6q2oocZ2LXRh80K7BxOlk5/8JxuGnuhpl+muw=\ngolang.org/x/term v0.0.0-20210503060354-a79de5458b56/go.mod h1:tfny5GFUkzUvx4ps4ajbZsCe5lw1metzhBm9T3x7oIY=\ngolang.org/x/term v0.25.0 h1:WtHI/ltw4NvSUig5KARz9h521QvRC8RmF/cuYqifU24=\ngolang.org/x/term v0.25.0/go.mod h1:RPyXicDX+6vLxogjjRxjgD2TKtmAO6NZBsBRfrOLu7M=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.5/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.19.0 h1:kTxAhCbGbxhK0IwgSKiMO5awPoDQ0RpfiVYBfK860YM=\ngolang.org/x/text v0.19.0/go.mod h1:BuEKDfySbSR4drPmRPG/7iBdf8hvFMuRexcpahXilzY=\ngolang.org/x/time v0.7.0 h1:ntUhktv3OPE6TgYxXWv9vKvUSJyIFJlyohwbkEwPrKQ=\ngolang.org/x/time v0.7.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.24.0 h1:J1shsA93PJUEVaUSaay7UXAyE8aimq3GW0pjlolpa24=\ngolang.org/x/tools v0.24.0/go.mod h1:YhNqVBIfWHdzvTLs0d8LCuMhkKUgSUKldakyV7W/WDQ=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.3.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/protobuf v1.35.1 h1:m3LfL6/Ca+fqnjnlqQXNpFPABW1UD7mjh8KO2mKFytA=\ngoogle.golang.org/protobuf v1.35.1/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/evanphx/json-patch.v4 v4.12.0 h1:n6jtcsulIzXPJaxegRbvFNNrZDjbij7ny3gmSPG+6V4=\ngopkg.in/evanphx/json-patch.v4 v4.12.0/go.mod h1:p8EYWUEYMpynmqDbY58zCKCFZw8pRWMG4EsWvDvM72M=\ngopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=\ngopkg.in/inf.v0 v0.9.1 h1:73M5CoZyi3ZLMOyDlQh031Cx6N9NDJ2Vvfl76EDAgDc=\ngopkg.in/inf.v0 v0.9.1/go.mod h1:cWUDdTG/fYaXco+Dcufb5Vnc6Gp2YChqWtbxRZE0mXw=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20200615113413-eeeca48fe776/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nk8s.io/api v0.31.2 h1:3wLBbL5Uom/8Zy98GRPXpJ254nEFpl+hwndmk9RwmL0=\nk8s.io/api v0.31.2/go.mod h1:bWmGvrGPssSK1ljmLzd3pwCQ9MgoTsRCuK35u6SygUk=\nk8s.io/apimachinery v0.31.2 h1:i4vUt2hPK56W6mlT7Ry+AO8eEsyxMD1U44NR22CLTYw=\nk8s.io/apimachinery v0.31.2/go.mod h1:rsPdaZJfTfLsNJSQzNHQvYoTmxhoOEofxtOsF3rtsMo=\nk8s.io/client-go v0.31.2 h1:Y2F4dxU5d3AQj+ybwSMqQnpZH9F30//1ObxOKlTI9yc=\nk8s.io/client-go v0.31.2/go.mod h1:NPa74jSVR/+eez2dFsEIHNa+3o09vtNaWwWwb1qSxSs=\nk8s.io/klog/v2 v2.130.1 h1:n9Xl7H1Xvksem4KFG4PYbdQCQxqc/tTUyrgXaOhHSzk=\nk8s.io/klog/v2 v2.130.1/go.mod h1:3Jpz1GvMt720eyJH1ckRHK1EDfpxISzJ7I9OYgaDtPE=\nk8s.io/kube-openapi v0.0.0-20241009091222-67ed5848f094 h1:MErs8YA0abvOqJ8gIupA1Tz6PKXYUw34XsGlA7uSL1k=\nk8s.io/kube-openapi v0.0.0-20241009091222-67ed5848f094/go.mod h1:7ioBJr1A6igWjsR2fxq2EZ0mlMwYLejazSIc2bzMp2U=\nk8s.io/utils v0.0.0-20240921022957-49e7df575cb6 h1:MDF6h2H/h4tbzmtIKTuctcwZmY0tY9mD9fNT47QO6HI=\nk8s.io/utils v0.0.0-20240921022957-49e7df575cb6/go.mod h1:OLgZIPagt7ERELqWJFomSt595RzquPNLL48iOWgYOg0=\nsigs.k8s.io/json v0.0.0-20241014173422-cfa47c3a1cc8 h1:gBQPwqORJ8d8/YNZWEjoZs7npUVDpVXUUOFfW6CgAqE=\nsigs.k8s.io/json v0.0.0-20241014173422-cfa47c3a1cc8/go.mod h1:mdzfpAEoE6DHQEN0uh9ZbOCuHbLK5wOm7dK4ctXE9Tg=\nsigs.k8s.io/kustomize/kyaml v0.17.1 h1:TnxYQxFXzbmNG6gOINgGWQt09GghzgTP6mIurOgrLCQ=\nsigs.k8s.io/kustomize/kyaml v0.17.1/go.mod h1:9V0mCjIEYjlXuCdYsSXvyoy2BTsLESH7TlGV81S282U=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.1 h1:150L+0vs/8DA78h1u02ooW1/fFq/Lwr+sGiqlzvrtq4=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.1/go.mod h1:N8hJocpFajUSSeSJ9bOZ77VzejKZaXsTtZo4/u7Io08=\nsigs.k8s.io/yaml v1.4.0 h1:Mk1wCc2gy/F0THH0TAp1QYyJNzRm2KCLy3o5ASXVI5E=\nsigs.k8s.io/yaml v1.4.0/go.mod h1:Ejl7/uTz7PSA4eKMyQCUTnhZYNmLIl+5c2lQPGR2BPY=\n"
        },
        {
          "name": "hack",
          "type": "tree",
          "content": null
        },
        {
          "name": "jx.pub",
          "type": "blob",
          "size": 0.173828125,
          "content": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEofm/QFAG18JrP+/t0gBTTwK+nstS\nZIUiIMfC2HnLPndiThh+HxH9aSkrVZed/yK/0gbvmthxbe07dMre2VA/zw==\n-----END PUBLIC KEY-----\n"
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "run.sh",
          "type": "blob",
          "size": 5.5302734375,
          "content": "#!/bin/bash -e\n##\n## TODO - When the $TFO_RESOURCE approaches 253 characters, this script should\n##        truncate accordingly to make sure that any secrets/configmaps that\n##        get saved here don't get blocked by the K8S API due to names being\n##        too long.\n##\n# Let the finalizer or manual destroy by passing in $DESTROY=\"true\"\n# Terraforms will be applyed only then $APPLY=\"true\"\nfunction run_terraform {\n    # options:\n    #   destroy=true|false\n    declare $@\n\n    if [ \"$destroy\" = \"true\" ];then\n        destroy_when_true='-destroy'\n    fi\n\n    terraform -chdir=. init\n    if [ $? -gt 0 ];then return 1;fi\n\n    terraform -chdir=. plan $TFOPS_VARFILE_FLAG $destroy_when_true -out plan.out 2>&1| tee $TMP\n    if [ ${PIPESTATUS[0]} -gt 0 ];then\n        set +x\n        save_plan\n        set -x\n        return 1\n    else\n        set +x\n        save_plan\n        set -x\n    fi\n    set +x\n\n    n=0\n    while true;do\n        (( n++ ))\n        get_action # sets $action variable\n        if [ \"$action\" = \"apply\" ];then\n            break\n        elif [ \"$action\" = \"abort\" ];then\n            exit 0\n        fi\n        if [ $n -gt 60 ];then\n            echo \"Waiting for user action. Check the cm/${TFO_RESOURCE}-action\"\n            n=0\n        fi\n        sleep 1\n    done\n\n    set -x\n    terraform apply plan.out\n    if [ $? -gt 0 ];then return 1;fi\n\n    set +x\n    # Replan to see what tf thinks should happen next.\n    terraform -chdir=. plan $TFOPS_VARFILE_FLAG $destroy_when_true 2>&1| tee $TMP\n}\n\nfunction save_plan {\n    # Clean the output from coloration\n    cat $TMP | sed -r \"s/\\x1B\\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g\" > $CLEAN\n\n    # Save the intermediate plan\n    cp $CLEAN tfplan\n    kubectl delete cm ${TFO_RESOURCE}-plan > /dev/null 2>&1 || true\n    kubectl create cm ${TFO_RESOURCE}-plan --from-file tfplan\n}\n\nfunction save_output {\n    # Save terraform output as a configmap\n    # TODO sensative items should be stored as a secret\n    cat << EOF > \"$TFO_RESOURCE-output.yaml\"\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: $TFO_RESOURCE-output\n  namespace: $NAMESPACE\ndata:\n$(terraform output -json| jq -r '.|keys[] as $k| \"  \\($k): |-\\n    \\(.[$k].value)\"')\nEOF\n\n    kubectl apply -f \"$TFO_RESOURCE-output.yaml\"\n\n}\n\nfunction get_action {\n    action=`kubectl get cm ${TFO_RESOURCE}-action -ojsonpath='{.data.action}'`\n    export action\n}\n\nif [ \"${AWS_WEB_IDENTITY_TOKEN_FILE}\" != \"\" ] ;then\n    apk add --update-cache \\\n        python \\\n        python-dev \\\n        py-pip \\\n        build-base \\\n        && pip install boto3\n    cat << EOF_HERE > .get_assumed_credentials.py\n#!/usr/bin/python\nimport os\nimport boto3\nsession = boto3.Session()\ncredentials = session.get_credentials().get_frozen_credentials()\nprint('export AWS_ACCESS_KEY_ID=\"{0}\"\\nexport AWS_SECRET_ACCESS_KEY=\"{1}\"\\nexport AWS_SECURITY_TOKEN=\"{2}\"\\nexport AWS_SESSION_TOKEN=\"{2}\"'.format(credentials.access_key, credentials.secret_key, credentials.token))\nEOF_HERE\n\n    chmod +x .get_assumed_credentials.py\n    eval `./.get_assumed_credentials.py`\n    rm .get_assumed_credentials.py\n\n    unset AWS_ROLE_ARN\n    unset AWS_WEB_IDENTITY_TOKEN_FILE\nfi\n\nif [ \"$GIT_PASSWORD\" != \"\" ];then\n    echo setting git password\n    ASKPASS=`mktemp`\n    cat << EOF > $ASKPASS\n#!/bin/sh\nexec echo \"$GIT_PASSWORD\"\nEOF\n    chmod +x $ASKPASS\n    export GIT_ASKPASS=$ASKPASS\nfi\n\n# Troubleshooting lines\n# env\n# ls -lah ~/.ssh\n\n#\n# Assume the default is to use git to pull tf files and\n# Assume the tfvars lives at \"tfvars\" in root of untar-ed dir\nexport TMP=`mktemp`\nexport CLEAN=`mktemp`\nREPO_COUNT=`find /tfops -type f  -not -path /tfops -name repo.tar|wc -l`\n\n\nif [ \"$STACK_REPO\" != \"\" ];then\n    set -x\n    MAIN_MODULE_TMP=`mktemp -d`\n    git clone $STACK_REPO $MAIN_MODULE_TMP/stack || exit $?\n    cd $MAIN_MODULE_TMP/stack\n    git checkout $STACK_REPO_HASH\n    if [ \"$STACK_REPO_SUBDIR\" != \"\" ];then\n        pwd\n        ls -lah\n        cp -r $STACK_REPO_SUBDIR /$TFOPS_MAIN_MODULE\n    else\n        mv $MAIN_MODULE_TMP/stack /$TFOPS_MAIN_MODULE\n    fi\nelif [ \"$REPO_COUNT\" -gt 0 ];then\n        find /tfops -type f  -not -path /tfops -name repo.tar -exec tar -xf {} -C / \\;\nelse\n    echo \"No terraform stack to run\"\n    exit 1\nfi\n\nif [ \"$TFOPS_CONFIGMAP_PATH\" != \"\" ];then\n    cp $TFOPS_CONFIGMAP_PATH/* /$TFOPS_MAIN_MODULE\nfi\n\ncd /$TFOPS_MAIN_MODULE\n\n# Load a custom backend\nif stat backend_override.tf >/dev/null 2>/dev/null; then\n    echo \"Using custom backend\"\nelse\n    echo \"Loading hashicorp backend\"\n    set -x\n    envsubst < /backend.tf > /backend_override.tf\n    mv /backend_override.tf .\nfi\n\n# Run the prerun script\nif stat prerun.sh >/dev/null 2>/dev/null; then\n    # prerun.sh needs exec privileges\n    chmod +x prerun.sh\n    ./prerun.sh\nfi\n\n\nWAIT_TIME=${WAIT_TIME:-60}\nATTEMPTS=${ATTEMPTS:-10}\ni=0\nuntil run_terraform destroy=$DESTROY || (( i++ >= $ATTEMPTS ));do\n    echo \"($i/$ATTEMPTS) Terraform did not exit 0, waiting $WAIT_TIME\"\n    sleep $WAIT_TIME\ndone\n\n# Clean the output from coloration\ncat $TMP | sed -r \"s/\\x1B\\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g\" > $CLEAN\n\n# Status Helpers:\nawk '/^Error:/{y=1}y' $CLEAN > ERROR\n\nread -d '' -r -a arr <<< `grep \"^Plan:\" $CLEAN|tr -dc '0-9,'|tr ',' ' '` #`\necho -n ${arr[0]} > PLAN\necho -n ${arr[1]} > CHANGE\necho -n ${arr[2]} > DESTROY\n\nkubectl delete cm ${TFO_RESOURCE}-status > /dev/null 2>&1 || true\nkubectl create cm ${TFO_RESOURCE}-status \\\n    --from-file ERROR \\\n    --from-file PLAN \\\n    --from-file CHANGE \\\n    --from-file DESTROY\n\nsave_output\nsave_plan\n\n# Run the postrun script\nif stat postrun.sh >/dev/null 2>/dev/null; then\n    # postrun.sh needs exec privileges \n    chmod +x postrun.sh\n    ./postrun.sh\nfi"
        }
      ]
    }
  ]
}