{
  "metadata": {
    "timestamp": 1736567077915,
    "page": 665,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pingc0y/URLFinder",
      "stars": 2728,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".goreleaser.yaml",
          "type": "blob",
          "size": 1.2333984375,
          "content": "# This is an example .goreleaser.yml file with some sensible defaults.\n# Make sure to check the documentation at https://goreleaser.com\nbefore:\n  hooks:\n    # You may remove this if you don't use go modules.\n    - go mod tidy\n    # you may remove this if you don't need go generate\n    - go generate ./...\nbuilds:\n  - env:\n      - CGO_ENABLED=0\n    goos:\n      - linux\n      - windows\n      - darwin\n\narchives:\n  - format: tar.gz\n    # this name template makes the OS and Arch compatible with the results of uname.\n    name_template: >-\n      {{ .ProjectName }}_\n      {{- title .Os }}_\n      {{- if eq .Arch \"amd64\" }}x86_64\n      {{- else if eq .Arch \"386\" }}i386\n      {{- else }}{{ .Arch }}{{ end }}\n      {{- if .Arm }}v{{ .Arm }}{{ end }}\n    # use zip for windows archives\n    format_overrides:\n      - goos: windows\n        format: zip\nchecksum:\n  name_template: 'checksums.txt'\nsnapshot:\n  name_template: \"{{ incpatch .Version }}-next\"\nchangelog:\n  sort: asc\n  filters:\n    exclude:\n      - '^docs:'\n      - '^test:'\n\n# The lines beneath this are called `modelines`. See `:help modeline`\n# Feel free to remove those if you don't want/use them.\n# yaml-language-server: $schema=https://goreleaser.com/static/schema.json\n# vim: set ts=2 sw=2 tw=0 fo=cnqoj\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0380859375,
          "content": "MIT License\n\nCopyright (c) 2022 pingc0y\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.521484375,
          "content": "## URLFinder\n\nURLFinder是一款快速、全面、易用的页面信息提取工具\n\n用于分析页面中的js与url,查找隐藏在其中的敏感信息或未授权api接口\n\n大致执行流程:\n\n<img src=\"https://github.com/pingc0y/URLFinder/raw/master/img/process.png\" width=\"85%\"  />\n\n\n\n有什么需求或bug欢迎各位师傅提交lssues\n\n## 快速使用\n单url\n```\n显示全部状态码\nURLFinder.exe -u http://www.baidu.com -s all -m 3\n\n显示200和403状态码\nURLFinder.exe -u http://www.baidu.com -s 200,403 -m 3\n```\n批量url\n```\n结果分开保存\n导出全部\nURLFinder.exe -s all -m 3 -f url.txt -o .\n只导出html\nURLFinder.exe -s all -m 3 -f url.txt -o res.html\n\n结果统一保存\nURLFinder.exe -s all -m 3 -ff url.txt -o .\n```\n参数（更多参数使用 -i 配置）：\n```\n-a  自定义user-agent请求头  \n-b  自定义baseurl路径  \n-c  请求添加cookie  \n-d  指定获取的域名,支持正则表达式\n-f  批量url抓取,需指定url文本路径  \n-ff 与-f区别：全部抓取的数据,视为同一个url的结果来处理（只打印一份结果 | 只会输出一份结果） \n-h  帮助信息   \n-i  加载yaml配置文件,可自定义请求头、抓取规则等（不存在时,会在当前目录创建一个默认yaml配置文件）  \n-m  抓取模式：\n        1  正常抓取（默认）\n        2  深入抓取 （URL深入一层 JS深入三层 防止抓偏）\n        3  安全深入抓取（过滤delete,remove等敏感路由） \n-max 最大抓取数\n-o  结果导出到csv、json、html文件,需指定导出文件目录（.代表当前目录）\n-s  显示指定状态码,all为显示全部  \n-t  设置线程数（默认50）\n-time 设置超时时间（默认5,单位秒）\n-u  目标URL  \n-x  设置代理,格式: http://username:password@127.0.0.1:8877\n-z  提取所有目录对404链接进行fuzz(只对主域名下的链接生效,需要与 -s 一起使用）  \n        1  目录递减fuzz  \n        2  2级目录组合fuzz\n        3  3级目录组合fuzz（适合少量链接使用）\n```\n## 使用截图\n\n[![0.jpg](https://github.com/pingc0y/URLFinder/raw/master/img/0.jpg)](https://github.com/pingc0y/URLFinder/raw/master/img/0.jpg)   \n[![1.jpg](https://github.com/pingc0y/URLFinder/raw/master/img/1.jpg)](https://github.com/pingc0y/URLFinder/raw/master/img/1.jpg)  \n[![2.jpg](https://github.com/pingc0y/URLFinder/raw/master/img/2.jpg)](https://github.com/pingc0y/URLFinder/raw/master/img/2.jpg)  \n[![3.jpg](https://github.com/pingc0y/URLFinder/raw/master/img/3.jpg)](https://github.com/pingc0y/URLFinder/raw/master/img/3.jpg)  \n[![4.jpg](https://github.com/pingc0y/URLFinder/raw/master/img/4.jpg)](https://github.com/pingc0y/URLFinder/raw/master/img/4.jpg)  \n[![5.jpg](https://github.com/pingc0y/URLFinder/raw/master/img/5.jpg)](https://github.com/pingc0y/URLFinder/raw/master/img/5.jpg)\n\n## 部分说明\n\nfuzz功能是基于抓到的404目录和路径。将其当作字典,随机组合并碰撞出有效路径,从而解决路径拼接错误的问题\n\n结果会优先显示输入的url顶级域名,其他域名不做区分显示在 other\n\n结果会优先显示200,按从小到大排序（输入的域名最优先,就算是404也会排序在其他子域名的200前面）\n\n为了更好的兼容和防止漏抓链接,放弃了低误报率,错误的链接会变多但漏抓概率变低,可通过 ‘-s 200’ 筛选状态码过滤无效的链接（但不推荐只看200状态码）\n##  编译\n以下是在windows环境下,编译出各平台可执行文件的命令\n\n```\nSET CGO_ENABLED=0\nSET GOOS=windows\nSET GOARCH=amd64\ngo build -ldflags \"-s -w\" -o ./URLFinder-windows-amd64.exe\n\nSET CGO_ENABLED=0\nSET GOOS=windows\nSET GOARCH=386\ngo build -ldflags \"-s -w\" -o ./URLFinder-windows-386.exe\n\nSET CGO_ENABLED=0\nSET GOOS=linux\nSET GOARCH=amd64\ngo build -ldflags \"-s -w\" -o ./URLFinder-linux-amd64\n\nSET CGO_ENABLED=0\nSET GOOS=linux\nSET GOARCH=arm64\ngo build -ldflags \"-s -w\" -o ./URLFinder-linux-arm64\n\nSET CGO_ENABLED=0\nSET GOOS=linux\nSET GOARCH=386\ngo build -ldflags \"-s -w\" -o ./URLFinder-linux-386\n\nSET CGO_ENABLED=0\nSET GOOS=darwin\nSET GOARCH=amd64\ngo build -ldflags \"-s -w\" -o ./URLFinder-macos-amd64\n\nSET CGO_ENABLED=0\nSET GOOS=darwin\nSET GOARCH=arm64\ngo build -ldflags \"-s -w\" -o ./URLFinder-macos-arm64\n```\n\n\n## 更新说明\n2023/9/9  \n修复 -ff 重复验证问题  \n修复 自动识别协议bug  \n\n2023/9/2  \n修复 子目录定位bug   \n\n2023/8/30  \n修复 -i 配置请求头错误问题   \n变化 支持自动识别http/https  \n变化 -o 输入完整文件名可只导出指定类型  \n变化 无 -s 参数时，链接改为无颜色方便使用管道符\n\n2023/5/11  \n变化 -i 配置文件可自定义：线程数、抓取深度、敏感路由、超时时间、最大抓取数   \n新增 -time 设置超时时间  \n新增 -max 设置最大抓取数  \n新增 添加版本更新提示  \n修复 已知bug\n\n2023/5/5   \n修复 多个任务时html结果混乱  \n新增 结果添加302跳转信息  \n变化 未获取到数据时不打印与输出结果\n\n2023/4/22   \n修复 已知bug  \n变化 -d 改为正则表达式  \n变化 打印显示抓取来源  \n新增 敏感信息增加Other  \n新增 -ff 全部抓取的数据,视为同一个url的结果来处理（只打印一份结果 | 只会输出一份结果）\n\n2023/2/21   \n修复 已知bug\n\n2023/2/3   \n新增 域名信息展示  \n变化 -i配置文件可配置抓取规则等\n\n2023/1/29  \n新增 -b 设置baseurl路径  \n新增 -o json、html格式导出  \n新增 部分敏感信息获取  \n新增 默认会进行简单的js爆破  \n变化 能抓到更多链接,但垃圾数据变多  \n变化 代理设置方式变更\n\n2022/10/25  \n新增 -t 设置线程数(默认50)  \n新增 -z 对主域名的404链接fuzz测试  \n优化 部分细节\n\n2022/10/6  \n新增 -x http代理设置  \n修改 多个相同域名导出时覆盖问题处理\n\n2022/9/23  \n新增 对base标签的兼容  \n修复 正则bug\n\n2022/9/16  \n新增 -m 3 安全的深入抓取,过滤delete、remove等危险URL   \n新增 -d 获取指定域名资源  \n新增 -o 导出到文件显示获取来源source  \n修复 已知bug\n\n2022/9/15  \n修复 某种情况下的数组越界\n\n2022/9/12  \n修复 linux与mac下的配置文件生成错误  \n修复 已知逻辑bug\n\n2022/9/5  \n新增 链接存在标题时,显示标题  \n新增 -i 参数,加载yaml配置文件（目前只支持配置请求头headers）  \n修改 部分代码逻辑  \n修复 当ip存在端口时,导出会去除端口\n\n2022/8/29  \n新增 抓取url数量显示  \n优化 部分代码  \n新增 提供各平台可执行文件\n\n2022/8/27   \n新增 -o 改为自定义文件目录  \n新增 导出文件改为csv后缀,表格查看更方便  \n修复 已知正则bug\n\n2022/8/19  \n优化 加长超时时间避免误判\n\n2022/8/5  \n新增 状态码过滤  \n新增 状态码验证显示进度  \n修复 域名带端口输出本地错误问题\n\n2022/7/25   \n优化 js规则  \n优化 排序  \n新增 根据状态码显示彩色字体\n\n2022/7/6   \n完善 规则\n\n2022/6/27   \n优化 规则  \n新增 提供linux成品程序\n\n2022/6/21   \n修改 获取状态码从自动改为手动（-s）  \n新增 显示响应内容大小\n\n2022/6/16   \n优化 提取规则增强兼容性  \n修复 数组越界错误处理\n\n2022/6/14  \n修复 部分网站返回空值的问题\n\n2022/6/13  \n新增 自定义user-agent请求头功能  \n新增 批量url抓取功能  \n新增 结果导出功能  \n优化 过滤规则  \n优化 结果排版\n\n2022/6/8  \n修复 忽略ssl证书错误\n\n# 开发由来\n致敬JSFinder！开发此工具的初衷是因为经常使用 JSFinder 时会返回空或链接不完整,而且作者已经很久没有更新修复 bug 了。因此,萌生了自己开发一款类似工具的想法。\n\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "crawler",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.2578125,
          "content": "module github.com/pingc0y/URLFinder\n\ngo 1.19\n\nrequire (\n\tgithub.com/gookit/color v1.5.2\n\tgopkg.in/yaml.v3 v3.0.1\n)\n\nrequire (\n\tgithub.com/xo/terminfo v0.0.0-20210125001918-ca9a967f8778 // indirect\n\tgolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 1.896484375,
          "content": "github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/gookit/color v1.5.2 h1:uLnfXcaFjlrDnQDT+NCBcfhrXqYTx/rcCa6xn01Y8yI=\ngithub.com/gookit/color v1.5.2/go.mod h1:w8h4bGiHeeBpvQVePTutdbERIUf3oJE5lZ8HM0UgXyg=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0 h1:pSgiaMZlXftHpm5L7V1+rVB+AZJydKsMxsQBIJw4PKk=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/xo/terminfo v0.0.0-20210125001918-ca9a967f8778 h1:QldyIu/L63oPpyvQmHgvgickp1Yw510KJOqX7H24mg8=\ngithub.com/xo/terminfo v0.0.0-20210125001918-ca9a967f8778/go.mod h1:2MuV+tbUrU1zIOPMxZ5EncGwgmMJsa+9ucAQZXxsObs=\ngolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44 h1:Bli41pIlzTzf3KEY06n+xnzK/BESIg2ze4Pgfh/aI8c=\ngolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405 h1:yhCVgyC4o1eVCa2tZl7eS0r+SDo693bJlVdllGtEeKM=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n/.github/\n"
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 0.2353515625,
          "content": "package main\n\nimport (\n\t\"github.com/pingc0y/URLFinder/cmd\"\n\t\"github.com/pingc0y/URLFinder/crawler\"\n\t\"github.com/pingc0y/URLFinder/util\"\n\t\"io\"\n\t\"log\"\n)\n\nfunc main() {\n\tlog.SetOutput(io.Discard)\n\tutil.GetUpdate()\n\tcmd.Parse()\n\tcrawler.Run()\n}\n"
        },
        {
          "name": "mode",
          "type": "tree",
          "content": null
        },
        {
          "name": "result",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}