{
  "metadata": {
    "timestamp": 1736567053085,
    "page": 637,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mmcloughlin/avo",
      "stars": 2772,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0146484375,
          "content": "*.coverprofile\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 2.1826171875,
          "content": "run:\n  timeout: 5m\nlinters:\n  enable-all: true\n  disable:\n    - cyclop\n    - dupword\n    - err113\n    - errname\n    - exhaustruct\n    - forbidigo\n    - forcetypeassert\n    - funlen\n    - gochecknoglobals\n    - gochecknoinits\n    - goconst\n    - godox\n    - gosec\n    - iface\n    - inamedparam\n    - ireturn\n    - lll\n    - mnd\n    - nlreturn\n    - nonamedreturns\n    - paralleltest\n    - perfsprint\n    - prealloc\n    - recvcheck\n    - rowserrcheck\n    - tagliatelle\n    - testpackage\n    - unparam\n    - varnamelen\n    - wastedassign\n    - wrapcheck\n    - wsl\nlinters-settings:\n  depguard:\n    rules:\n      main:\n        allow:\n          - github.com/mmcloughlin/avo\n          - golang.org/x/\n          - $gostd\n  gci:\n    sections:\n      - standard\n      - default\n      - prefix(github.com/mmcloughlin/avo)\n  revive:\n    enable-all-rules: true\n    rules:\n      - name: add-constant\n        disabled: true\n      - name: confusing-results\n        disabled: true\n      - name: cognitive-complexity\n        disabled: true\n      - name: cyclomatic\n        disabled: true\n      - name: deep-exit\n        disabled: true\n      - name: empty-block\n        disabled: true\n      - name: flag-parameter\n        disabled: true\n      - name: function-length\n        disabled: true\n      - name: if-return\n        disabled: true\n      - name: line-length-limit\n        disabled: true\n      - name: max-public-structs\n        disabled: true\n      - name: modifies-value-receiver\n        disabled: true\n      - name: unexported-naming\n        disabled: true\n      - name: unhandled-error\n        arguments:\n          - 'fmt\\.(P|Fp)rint(ln|f)?'\n          - 'text/tabwriter\\.Writer\\.Flush'\n      - name: unused-parameter\n        disabled: true\n      - name: unused-receiver\n        disabled: true\nissues:\n  exclude-use-default: false\n  exclude:\n    # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok\n    - Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*printf?|os\\.(Un)?Setenv). is not checked\n    # gocritic: https://github.com/go-critic/go-critic/issues/762\n    - \" with `(len|cap|real|imag)`\"\n    # We want to allow all caps in certain cases.\n    - \"ALL_CAPS in Go names\"\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.482421875,
          "content": "BSD 3-Clause License\n\nCopyright (c) 2018, Michael McLoughlin\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.416015625,
          "content": "<p align=\"center\">\n  <img src=\"logo.svg\" width=\"40%\" border=\"0\" alt=\"avo\" />\n  <br />\n  <img src=\"https://img.shields.io/github/actions/workflow/status/mmcloughlin/avo/ci.yml?style=flat-square\" alt=\"Build Status\" />\n  <a href=\"https://pkg.go.dev/github.com/mmcloughlin/avo\"><img src=\"https://img.shields.io/badge/doc-reference-007d9b?logo=go&style=flat-square\" alt=\"go.dev\" /></a>\n  <a href=\"https://goreportcard.com/report/github.com/mmcloughlin/avo\"><img src=\"https://goreportcard.com/badge/github.com/mmcloughlin/avo?style=flat-square\" alt=\"Go Report Card\" /></a>\n</p>\n\n<p align=\"center\">Generate x86 Assembly with Go</p>\n\n`avo` makes high-performance Go assembly easier to write, review and maintain. The `avo` package presents a familiar assembly-like interface that simplifies development without sacrificing performance:\n\n* **Use Go control structures** for assembly generation; `avo` programs _are_ Go programs\n* **Register allocation**: write functions with virtual registers and `avo` assigns physical registers for you\n* **Automatically load arguments and store return values**: ensure memory offsets are correct for complex structures\n* **Generation of stub files** to interface with your Go package\n\nFor more about `avo`:\n\n* Introductory talk [\"Better `x86` Assembly Generation with Go\"](https://www.youtube.com/watch?v=6Y5CZ7_tyA4) at [dotGo 2019](https://2019.dotgo.eu/) ([slides](https://speakerdeck.com/mmcloughlin/better-x86-assembly-generation-with-go))\n* [Longer tutorial at Gophercon 2019](https://www.youtube.com/watch?v=WaD8sNqroAw) showing a highly-optimized dot product ([slides](https://speakerdeck.com/mmcloughlin/better-x86-assembly-generation-with-go-gophercon-2019))\n* Watch [Filippo Valsorda](https://filippo.io/) live code the [rewrite of `filippo.io/edwards25519` assembly with `avo`](https://vimeo.com/679848853)\n* Explore [projects using `avo`](doc/adopters.md)\n* Discuss `avo` and general Go assembly topics in the [#assembly](https://gophers.slack.com/archives/C6WDZJ70S) channel of [Gophers Slack](https://invite.slack.golangbridge.org/)\n\n_Note: APIs subject to change while `avo` is still in an experimental phase. You can use it to build [real things](examples) but we suggest you pin a version with your package manager of choice._\n\n## Quick Start\n\nInstall `avo` with `go get`:\n\n```\n$ go get -u github.com/mmcloughlin/avo\n```\n\n`avo` assembly generators are pure Go programs. Here's a function that adds two `uint64` values:\n\n```go\n//go:build ignore\n\npackage main\n\nimport . \"github.com/mmcloughlin/avo/build\"\n\nfunc main() {\n\tTEXT(\"Add\", NOSPLIT, \"func(x, y uint64) uint64\")\n\tDoc(\"Add adds x and y.\")\n\tx := Load(Param(\"x\"), GP64())\n\ty := Load(Param(\"y\"), GP64())\n\tADDQ(x, y)\n\tStore(y, ReturnIndex(0))\n\tRET()\n\tGenerate()\n}\n```\n\n`go run` this code to see the assembly output. To integrate this into the rest of your Go package we recommend a [`go:generate`](https://blog.golang.org/generate) line to produce the assembly and the corresponding Go stub file.\n\n```go\n//go:generate go run asm.go -out add.s -stubs stub.go\n```\n\nAfter running `go generate` the [`add.s`](examples/add/add.s) file will contain the Go assembly.\n\n```s\n// Code generated by command: go run asm.go -out add.s -stubs stub.go. DO NOT EDIT.\n\n#include \"textflag.h\"\n\n// func Add(x uint64, y uint64) uint64\nTEXT ·Add(SB), NOSPLIT, $0-24\n\tMOVQ x+0(FP), AX\n\tMOVQ y+8(FP), CX\n\tADDQ AX, CX\n\tMOVQ CX, ret+16(FP)\n\tRET\n```\n\nThe same call will produce the stub file [`stub.go`](examples/add/stub.go) which will enable the function to be called from your Go code.\n\n```go\n// Code generated by command: go run asm.go -out add.s -stubs stub.go. DO NOT EDIT.\n\npackage add\n\n// Add adds x and y.\nfunc Add(x uint64, y uint64) uint64\n```\n\nSee the [`examples/add`](examples/add) directory for the complete working example.\n\n## Examples\n\nSee [`examples`](examples) for the full suite of examples.\n\n### Slice Sum\n\nSum a slice of `uint64`s:\n\n```go\nfunc main() {\n\tTEXT(\"Sum\", NOSPLIT, \"func(xs []uint64) uint64\")\n\tDoc(\"Sum returns the sum of the elements in xs.\")\n\tptr := Load(Param(\"xs\").Base(), GP64())\n\tn := Load(Param(\"xs\").Len(), GP64())\n\n\tComment(\"Initialize sum register to zero.\")\n\ts := GP64()\n\tXORQ(s, s)\n\n\tLabel(\"loop\")\n\tComment(\"Loop until zero bytes remain.\")\n\tCMPQ(n, Imm(0))\n\tJE(LabelRef(\"done\"))\n\n\tComment(\"Load from pointer and add to running sum.\")\n\tADDQ(Mem{Base: ptr}, s)\n\n\tComment(\"Advance pointer, decrement byte count.\")\n\tADDQ(Imm(8), ptr)\n\tDECQ(n)\n\tJMP(LabelRef(\"loop\"))\n\n\tLabel(\"done\")\n\tComment(\"Store sum to return value.\")\n\tStore(s, ReturnIndex(0))\n\tRET()\n\tGenerate()\n}\n```\n\nThe result from this code generator is:\n\n```s\n// Code generated by command: go run asm.go -out sum.s -stubs stub.go. DO NOT EDIT.\n\n#include \"textflag.h\"\n\n// func Sum(xs []uint64) uint64\nTEXT ·Sum(SB), NOSPLIT, $0-32\n\tMOVQ xs_base+0(FP), AX\n\tMOVQ xs_len+8(FP), CX\n\n\t// Initialize sum register to zero.\n\tXORQ DX, DX\n\nloop:\n\t// Loop until zero bytes remain.\n\tCMPQ CX, $0x00\n\tJE   done\n\n\t// Load from pointer and add to running sum.\n\tADDQ (AX), DX\n\n\t// Advance pointer, decrement byte count.\n\tADDQ $0x08, AX\n\tDECQ CX\n\tJMP  loop\n\ndone:\n\t// Store sum to return value.\n\tMOVQ DX, ret+24(FP)\n\tRET\n```\n\nFull example at [`examples/sum`](examples/sum).\n\n### Features\n\nFor demonstrations of `avo` features:\n\n* **[args](examples/args):** Loading function arguments.\n* **[returns](examples/returns):** Building return values.\n* **[complex](examples/complex):** Working with `complex{64,128}` types.\n* **[data](examples/data):** Defining `DATA` sections.\n* **[ext](examples/ext):** Interacting with types from external packages.\n* **[pragma](examples/pragma):** Apply compiler directives to generated functions.\n\n### Real Examples\n\nImplementations of full algorithms:\n\n* **[sha1](examples/sha1):** [SHA-1](https://en.wikipedia.org/wiki/SHA-1) cryptographic hash.\n* **[fnv1a](examples/fnv1a):** [FNV-1a](https://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function#FNV-1a_hash) hash function.\n* **[dot](examples/dot):** Vector dot product.\n* **[md5x16](examples/md5x16):** AVX-512 accelerated [MD5](https://en.wikipedia.org/wiki/MD5).\n* **[geohash](examples/geohash):** Integer [geohash](https://en.wikipedia.org/wiki/Geohash) encoding.\n* **[stadtx](examples/stadtx):** [`StadtX` hash](https://github.com/demerphq/BeagleHash) port from [dgryski/go-stadtx](https://github.com/dgryski/go-stadtx).\n\n## Adopters\n\nPopular projects[^projects] using `avo`:\n\n[^projects]: Projects drawn from the `avo` third-party test suite. Popularity\nestimated from Github star count collected on Jan 1, 2025.\n\n<img src=\"https://images.weserv.nl?fit=cover&h=24&mask=circle&maxage=7d&url=https%3A%2F%2Fgithub.com%2Fgolang.png&w=24\" width=\"24\" height=\"24\" hspace=\"4\" valign=\"middle\" /> [golang / **go**](https://github.com/golang/go)\n:star: 124.9k\n> The Go programming language\n\n<img src=\"https://images.weserv.nl?fit=cover&h=24&mask=circle&maxage=7d&url=https%3A%2F%2Fgithub.com%2Fklauspost.png&w=24\" width=\"24\" height=\"24\" hspace=\"4\" valign=\"middle\" /> [klauspost / **compress**](https://github.com/klauspost/compress)\n:star: 4.9k\n> Optimized Go Compression Packages\n\n<img src=\"https://images.weserv.nl?fit=cover&h=24&mask=circle&maxage=7d&url=https%3A%2F%2Fgithub.com%2Fgolang.png&w=24\" width=\"24\" height=\"24\" hspace=\"4\" valign=\"middle\" /> [golang / **crypto**](https://github.com/golang/crypto)\n:star: 3.1k\n> [mirror] Go supplementary cryptography libraries\n\n<img src=\"https://images.weserv.nl?fit=cover&h=24&mask=circle&maxage=7d&url=https%3A%2F%2Fgithub.com%2Fklauspost.png&w=24\" width=\"24\" height=\"24\" hspace=\"4\" valign=\"middle\" /> [klauspost / **reedsolomon**](https://github.com/klauspost/reedsolomon)\n:star: 1.9k\n> Reed-Solomon Erasure Coding in Go\n\n<img src=\"https://images.weserv.nl?fit=cover&h=24&mask=circle&maxage=7d&url=https%3A%2F%2Fgithub.com%2Fbytedance.png&w=24\" width=\"24\" height=\"24\" hspace=\"4\" valign=\"middle\" /> [bytedance / **gopkg**](https://github.com/bytedance/gopkg)\n:star: 1.8k\n> Universal Utilities for Go\n\n<img src=\"https://images.weserv.nl?fit=cover&h=24&mask=circle&maxage=7d&url=https%3A%2F%2Fgithub.com%2Fcloudflare.png&w=24\" width=\"24\" height=\"24\" hspace=\"4\" valign=\"middle\" /> [cloudflare / **circl**](https://github.com/cloudflare/circl)\n:star: 1.3k\n> CIRCL: Cloudflare Interoperable Reusable Cryptographic Library\n\n<img src=\"https://images.weserv.nl?fit=cover&h=24&mask=circle&maxage=7d&url=https%3A%2F%2Fgithub.com%2Fsegmentio.png&w=24\" width=\"24\" height=\"24\" hspace=\"4\" valign=\"middle\" /> [segmentio / **asm**](https://github.com/segmentio/asm)\n:star: 875\n> Go library providing algorithms optimized to leverage the characteristics of modern CPUs\n\n<img src=\"https://images.weserv.nl?fit=cover&h=24&mask=circle&maxage=7d&url=https%3A%2F%2Fgithub.com%2Fzeebo.png&w=24\" width=\"24\" height=\"24\" hspace=\"4\" valign=\"middle\" /> [zeebo / **xxh3**](https://github.com/zeebo/xxh3)\n:star: 412\n> XXH3 algorithm in Go\n\n<img src=\"https://images.weserv.nl?fit=cover&h=24&mask=circle&maxage=7d&url=https%3A%2F%2Fgithub.com%2Fzeebo.png&w=24\" width=\"24\" height=\"24\" hspace=\"4\" valign=\"middle\" /> [zeebo / **blake3**](https://github.com/zeebo/blake3)\n:star: 407\n> Pure Go implementation of BLAKE3 with AVX2 and SSE4.1 acceleration\n\n<img src=\"https://images.weserv.nl?fit=cover&h=24&mask=circle&maxage=7d&url=https%3A%2F%2Fgithub.com%2Flukechampine.png&w=24\" width=\"24\" height=\"24\" hspace=\"4\" valign=\"middle\" /> [lukechampine / **blake3**](https://github.com/lukechampine/blake3)\n:star: 365\n> An AVX-512 accelerated implementation of the BLAKE3 cryptographic hash function\n\nSee the [full list of projects using `avo`](doc/adopters.md).\n\n## Contributing\n\nContributions to `avo` are welcome:\n\n* Feedback from using `avo` in a real project is incredibly valuable. Consider [porting an existing project to `avo`](https://github.com/mmcloughlin/avo/issues/40).\n* [Submit bug reports](https://github.com/mmcloughlin/avo/issues/new) to the issues page.\n* Pull requests accepted. Take a look at outstanding [issues](https://github.com/mmcloughlin/avo/issues) for ideas (especially the [\"good first issue\"](https://github.com/mmcloughlin/avo/labels/good%20first%20issue) label).\n* Join us in the [#assembly](https://gophers.slack.com/archives/C6WDZJ70S) channel of [Gophers Slack](https://invite.slack.golangbridge.org/).\n\n## Credits\n\nInspired by the [PeachPy](https://github.com/Maratyszcza/PeachPy) and [asmjit](https://github.com/asmjit/asmjit) projects. Thanks to [Damian Gryski](https://github.com/dgryski) for advice, and his [extensive library of PeachPy Go projects](https://github.com/mmcloughlin/avo/issues/40).\n\n## License\n\n`avo` is available under the [BSD 3-Clause License](LICENSE).\n"
        },
        {
          "name": "attr",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "buildtags",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.181640625,
          "content": "coverage:\n  status:\n    project:\n      default:\n        informational: true\n    changes:\n      default:\n        informational: true\n    patch:\n      default:\n        informational: true\n"
        },
        {
          "name": "doc.go",
          "type": "blob",
          "size": 0.0654296875,
          "content": "// Package avo is a high-level x86 assembly generator.\npackage avo\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.2431640625,
          "content": "module github.com/mmcloughlin/avo\n\ngo 1.22.0\n\ntoolchain go1.22.7\n\nrequire (\n\tgolang.org/x/arch v0.12.0\n\tgolang.org/x/sys v0.28.0\n\tgolang.org/x/tools v0.28.0\n)\n\nrequire (\n\tgolang.org/x/mod v0.22.0 // indirect\n\tgolang.org/x/sync v0.10.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 0.91796875,
          "content": "github.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngolang.org/x/arch v0.12.0 h1:UsYJhbzPYGsT0HbEdmYcqtCv8UNGvnaL561NnIUvaKg=\ngolang.org/x/arch v0.12.0/go.mod h1:FEVrYAQjsQXMVJ1nsMoVVXPZg6p2JE2mx8psSWTDQys=\ngolang.org/x/mod v0.22.0 h1:D4nJWe9zXqHOmWqj4VMOJhvzj7bEZg4wEYa759z1pH4=\ngolang.org/x/mod v0.22.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/tools v0.28.0 h1:WuB6qZ4RPCQo5aP3WdKZS7i595EdWqWR8vqJTlwTVK8=\ngolang.org/x/tools v0.28.0/go.mod h1:dcIOrVd3mfQKTgrDVQHqCPMWy6lnhfhtX3hLXYVLfRw=\n"
        },
        {
          "name": "gotypes",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "ir",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo.svg",
          "type": "blob",
          "size": 2.669921875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<svg\n   xmlns=\"http://www.w3.org/2000/svg\"\n   width=\"803.36798\"\n   height=\"244.91901\"\n   viewBox=\"0 0 803.36798 244.91901\"\n   style=\"fill:none\">\n  <!--\n    Avocado by Mati Carrizales from the Noun Project\n    https://thenounproject.com/term/avocado/956339\n  -->\n  <path\n     d=\"m 407.05,187.7 c 4.667,0 9.333,-0.583 14,-1.75 L 419.3,208 c -6.533,2.333 -13.533,3.5 -21,3.5 -9.1,0 -16.333,-1.983 -21.7,-5.95 -5.133,-3.967 -8.4,-10.617 -9.8,-19.95 -5.367,8.167 -13.3,14.583 -23.8,19.25 -10.267,4.433 -21.117,6.65 -32.55,6.65 -17.267,0 -31.5,-3.967 -42.7,-11.9 -11.2,-8.167 -16.8,-19.833 -16.8,-35 0,-13.3 5.833,-24.733 17.5,-34.3 11.667,-9.8 28.583,-16.567 50.75,-20.3 l 46.55,-7.7 v -9.8 c 0,-11.667 -3.617,-21 -10.85,-28 -7.233,-7 -17.267,-10.5 -30.1,-10.5 -11.667,0 -21.817,2.8 -30.45,8.4 -8.4,5.6 -14.933,13.883 -19.6,24.85 L 254.1,72.2 c 4.667,-13.067 13.3,-23.45 25.9,-31.15 12.833,-7.7 27.767,-11.55 44.8,-11.55 20.767,0 37.45,5.017 50.05,15.05 12.6,10.033 18.9,24.85 18.9,44.45 v 86.1 c 0,4.2 1.05,7.35 3.15,9.45 2.1,2.1 5.483,3.15 10.15,3.15 z m -95.2,-0.7 c 14.7,0 27.3,-3.5 37.8,-10.5 10.733,-7 16.1,-16.1 16.1,-27.3 v -24.15 l -39.2,7.35 c -15.633,2.8 -27.3,6.883 -35,12.25 -7.7,5.133 -11.55,11.783 -11.55,19.95 0,7.233 2.8,12.833 8.4,16.8 5.6,3.733 13.417,5.6 23.45,5.6 z m 292.882,-154 -72.8,175 h -28 l -72.8,-175 h 31.85 l 55.3,146.65 L 575.332,33 Z m 113.936,-3.5 c 26.366,0 47.016,8.05 61.95,24.15 15.166,16.1 22.75,38.383 22.75,66.85 0,28.467 -7.584,50.75 -22.75,66.85 -14.934,16.1 -35.584,24.15 -61.95,24.15 -26.367,0 -47.134,-8.05 -62.3,-24.15 -14.934,-16.1 -22.4,-38.383 -22.4,-66.85 0,-28.467 7.466,-50.75 22.4,-66.85 15.166,-16.1 35.933,-24.15 62.3,-24.15 z m 0,24.15 c -17.734,0 -31.617,5.95 -41.65,17.85 -10.034,11.9 -15.05,28.233 -15.05,49 0,20.767 5.016,37.1 15.05,49 10.033,11.9 23.916,17.85 41.65,17.85 17.733,0 31.616,-5.95 41.65,-17.85 10.033,-11.9 15.05,-28.233 15.05,-49 0,-20.767 -5.017,-37.1 -15.05,-49 -10.034,-11.9 -23.917,-17.85 -41.65,-17.85 z\"\n     style=\"fill:#00a29c\" />\n  <path\n     d=\"m 166.602,151.97 c 0,48.009 -35.937,86.949 -80.301,86.949 C 41.9374,238.919 6,199.979 6,151.97 6,103.961 41.1452,6 85.5088,6 129.8,6 166.602,103.961 166.602,151.97 Z\"\n     stroke-miterlimit=\"10\"\n     style=\"stroke:#00a29c;stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:10\" />\n  <path\n     d=\"m 86.301,185.656 c 22.672,0 41.051,-18.369 41.051,-41.027 0,-22.659 -18.379,-41.027 -41.051,-41.027 -22.6717,0 -41.0507,18.368 -41.0507,41.027 0,22.658 18.379,41.027 41.0507,41.027 z\"\n     stroke-miterlimit=\"10\"\n     style=\"stroke:#00a29c;stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:10\" />\n</svg>\n"
        },
        {
          "name": "operand",
          "type": "tree",
          "content": null
        },
        {
          "name": "pass",
          "type": "tree",
          "content": null
        },
        {
          "name": "printer",
          "type": "tree",
          "content": null
        },
        {
          "name": "reg",
          "type": "tree",
          "content": null
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "x86",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}