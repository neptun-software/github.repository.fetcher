{
  "metadata": {
    "timestamp": 1736567302595,
    "page": 903,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ying32/govcl",
      "stars": 2271,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.076171875,
          "content": "*.pas linguist-language=go\n*.inc linguist-language=go\n*.h linguist-language=go"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.0927734375,
          "content": "# Uncomment these types if you want even more clean repository. But be careful.\n# It can make harm to an existing project source. Read explanations below.\n#\n# Resource files are binaries containing manifest, project icon and version info.\n# They can not be viewed as text or compared by diff-tools. Consider replacing them with .rc files.\n#*.res\n#\n# Type library file (binary). In old Delphi versions it should be stored.\n# Since Delphi 2009 it is produced from .ridl file and can safely be ignored.\n#*.tlb\n#\n# Diagram Portfolio file. Used by the diagram editor up to Delphi 7.\n# Uncomment this if you are not using diagrams or use newer Delphi version.\n#*.ddp\n#\n# Visual LiveBindings file. Added in Delphi XE2.\n# Uncomment this if you are not using LiveBindings Designer.\n#*.vlb\n#\n# Deployment Manager configuration file for your project. Added in Delphi XE2.\n# Uncomment this if it is not mobile development and you do not use remote debug feature.\n#*.deployproj\n# \n# C++ object files produced when C/C++ Output file generation is configured.\n# Uncomment this if you are not using external objects (zlib library for example).\n#*.obj\n#\n\n# Delphi compiler-generated binaries (safe to delete)\n*.exe\n*.dll\n*.bpl\n*.bpi\n*.dcp\n*.so\n*.apk\n*.drc\n*.map\n*.dres\n*.rsm\n*.tds\n*.dcu\n*.lib\n*.a\n*.o\n*.ocx\n*.app\n*.dylib\n*.lps\n# Delphi autogenerated files (duplicated info)\n*.cfg\n*.hpp\n*Resource.rc\n\n# Delphi local files (user-specific info)\n*.local\n*.identcache\n*.projdata\n*.tvsconfig\n*.dsk\n\n# Delphi history and backups\n__history\n__recovery\nbackup\nlib\n*.~*\n\n# Castalia statistics file (since XE7 Castalia is distributed with Delphi)\n*.stat\n/.vscode\n.idea\n/bin\n/Librarys\n*.she\n*.vsf\n*.ini\n*.td\n*.bak\n/samples/ExtPlugins\n/samples/cef3browser\n/samples/ipscanner\n/samples/libcefext_x64_test.rar\n/samples/Windows/miniblinkWebview/LocalStorage\n/samples/Windows/miniblinkWebview/cookies.dat\n/samples/Windows/wkeWebBrowser/wke.dll.mblink\n/samples/opengl\n\n/samples/markdownEd/icons/\n/samples/cef2goTest\n/samples/eventsTest\n*.res\n/samples/testbindevents\n/samples/cgoTest/\n/samples/multilanguage2\ngo.sum\n/samples/controls\nmidform\n/samples/FCSimulator\n/samples/facecheck"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0947265625,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n   \n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.3896484375,
          "content": "\n[中文](README.zh-CN.md)   | English    \n\n### GoVCL\n\nCross-platform Golang GUI library, The core binding is [liblcl](https://github.com/ying32/liblcl), a common cross-platform GUI library created by [Lazarus](https://www.lazarus-ide.org/).    \n\n**GoVCL is a native GUI library, not based on HTML, let alone DirectUI library, everything is practical.**       \n\n**Full name: `Go Language Visual Component Library`**    \n\n*govcl minimum requirement is go1.9.2.*    \n\n----\n\n**Because GoVCL has already entered a stable stage and is currently in a state of pure maintenance. Under normal circumstances, no new features or components will be added. If there are no bugs that need to be fixed (referring to the bugs in govcl), in principle, a new version will not be released.   2023/11/20**  \n\n----\n\n[Screenshots](https://z-kit.cc/en/screenshot.html) | \n[WIKI(Chinese)](https://gitee.com/ying32/govcl/wikis/pages) | \n[What's-new(Chinese)](https://z-kit.cc/en/changelog.html) \n\n----\n\n### Ⅰ. Support Platform    \n**Windows** | **Linux** | **macOS**  \n\n> If you want to support linux arm and linux 32bit, you need to compile the corresponding liblcl binary.   \n\n### Ⅱ. Pre-compiled GUI library binary download ([source code](https://github.com/ying32/liblcl))     \n[![liblcl](https://img.shields.io/github/downloads/ying32/govcl/latest/liblcl-2.2.3.zip.svg)](https://github.com/ying32/govcl/releases/download/v2.2.3/liblcl-2.2.3.zip)  \n\n### Ⅲ. UI Designer(Two options)  \n\n* 1、 Easy UI designer (single-page design, suitable for those who do not want to install Lazarus, and the project is not too complicated)      \n\n[![GoVCLDesigner.win](https://img.shields.io/github/downloads/ying32/govcl/latest/GoVCLDesigner-win-1.2.1.zip.svg)](https://github.com/ying32/govcl/releases/download/v2.2.3/GoVCLDesigner-win-1.2.1.zip)  \n\n**Note: This UI designer is no longer updated, but it does not affect use.**  \n\n* 2. res2go IDE plugin source code（[source code](https://github.com/ying32/res2go-ide-plugin)）  \n\n**How to use: [Installation method](https://gitee.com/ying32/govcl/wikis/pages?sort_id=2645001&doc_id=102420)**   \n\n> Note: Designed in Lazarus, code written in Golang.  \n \n### Ⅳ. usage: \n\n#### Step 1: Get the govcl code  \n\n> go get -u github.com/ying32/govcl    \n\n*Note: You can also use go module mode, configure in go.mod, such as: `github.com/ying32/govcl v2.2.3+incompatible`.*  \n\n#### Step 2: Write the code\n\n* Method 1(Use Lazarus to design the GUI. recommend): \n\n```golang\npackage main\n\n\nimport (\n   // Do not reference this package if you use custom syso files\n   _ \"github.com/ying32/govcl/pkgs/winappres\"\n   \"github.com/ying32/govcl/vcl\"\n)\n\ntype TMainForm struct {\n    *vcl.TForm\n    Btn1     *vcl.TButton\n}\n\ntype TAboutForm struct {\n    *vcl.TForm\n    Btn1    *vcl.TButton\n}\n\nvar (\n    mainForm *TMainForm\n    aboutForm *TAboutForm\n)\n\nfunc main() {\n    vcl.Application.Initialize()\n    vcl.Application.SetMainFormOnTaskBar(true)\n    vcl.Application.CreateForm(&mainForm)\n    vcl.Application.CreateForm(&aboutForm)\n    vcl.Application.Run()\n}\n\n// -- TMainForm\n\nfunc (f *TMainForm) OnFormCreate(sender vcl.IObject) {\n    \n}\n\nfunc (f *TMainForm) OnBtn1Click(sender vcl.IObject) {\n    aboutForm.Show()\n}\n\n// -- TAboutForm\n\nfunc (f *TAboutForm) OnFormCreate(sender vcl.IObject) {\n \n}\n\nfunc (f *TAboutForm) OnBtn1Click(sender vcl.IObject) {\n    vcl.ShowMessage(\"Hello!\")\n}\n```\n**Method 1 needs to be used in conjunction with the res2go tool.**  \n\n\n* Method 2(Pure code, imitating the way of FreePascal class):  \n\n```golang\npackage main\n\n\nimport (\n   // Do not reference this package if you use custom syso files\n   _ \"github.com/ying32/govcl/pkgs/winappres\"\n   \"github.com/ying32/govcl/vcl\"\n)\n\ntype TMainForm struct {\n    *vcl.TForm\n    Btn1     *vcl.TButton\n}\n\ntype TAboutForm struct {\n    *vcl.TForm\n    Btn1    *vcl.TButton\n}\n\nvar (\n    mainForm *TMainForm\n    aboutForm *TAboutForm\n)\n\nfunc main() {\n    vcl.RunApp(&mainForm, &aboutForm)\n}\n\n// -- TMainForm\n\nfunc (f *TMainForm) OnFormCreate(sender vcl.IObject) {\n    f.SetCaption(\"MainForm\")\n    f.Btn1 = vcl.NewButton(f)\n    f.Btn1.SetParent(f)\n    f.Btn1.SetBounds(10, 10, 88, 28)\n    f.Btn1.SetCaption(\"Button1\")\n    f.Btn1.SetOnClick(f.OnBtn1Click)  \n}\n\nfunc (f *TMainForm) OnBtn1Click(sender vcl.IObject) {\n    aboutForm.Show()\n}\n\n\n// -- TAboutForm\n\nfunc (f *TAboutForm) OnFormCreate(sender vcl.IObject) {\n    f.SetCaption(\"About\")\n    f.Btn1 = vcl.NewButton(f)\n    //f.Btn1.SetName(\"Btn1\")\n    f.Btn1.SetParent(f)\n    f.Btn1.SetBounds(10, 10, 88, 28)\n    f.Btn1.SetCaption(\"Button1\")\n    f.Btn1.SetOnClick(f.OnBtn1Click)  \n}\n\nfunc (f *TAboutForm) OnBtn1Click(sender vcl.IObject) {\n    vcl.ShowMessage(\"Hello!\")\n}\n``` \n\n#### Step 3: Copy the corresponding binary   \n\n* Windows: Depending on whether the compiled binary is 32 or 64 bits, copy the corresponding `liblcl.dll` to the current executable file directory or system environment path.  \n  * Go environment variable: `GOARCH = amd64 386` `GOOS = windows` `CGO_ENABLED=0`    \n\n* Linux: Copy `liblcl.so` under the current executable file directory (you can also copy `liblcl.so` to `/usr/lib/` (32bit liblcl) or `/usr/lib/x86_64-linux-gnu/` (64bit liblcl) directory , Used as a public library).  \n  * Go environment variable: `GOARCH = amd64` `GOOS = linux` `CGO_ENABLED=1`  \n\n* MacOS: Copy `liblcl.dylib` to the current executable file directory (note under MacOS: you need to create info.plist file yourself), or refer to: [App packaging on MacOS](https://gitee.com/ying32/govcl/wikis/pages?sort_id=410056&doc_id=102420)  \n  * Go environment variable: `GOARCH = amd64` `GOOS = darwin` `CGO_ENABLED=1`  \n\nNote: The \"current executable file directory\" here refers to the location of the executable file generated by your currently compiled project.\n\n---   \n\n**Special Note: All UI components are non-threaded/non-coroutine safe. When used in goroutine, use [vcl.ThreadSync](https://gitee.com/ying32/govcl/wikis/pages?sort_id=976890&doc_id=102420) to synchronize updates to the UI.**  \n\n**Special Note 2: If you use go>=1.15 to compile Windows executable files, you must use the `-buildmode=exe` compilation option, otherwise there will be errors.**  \n\n---\n\n### Ⅴ. FAQ\n\nQ: Why is there no English WIKI?   \nA: My English is bad. You can try using Google Translate [Chinese WIKI](https://gitee.com/ying32/govcl/wikis/pages).    \n \n---  \n\n### Ⅵ. API document\n\n* [Lazarus LCL component WIKI](http://wiki.freepascal.org/LCL_Components)  \n* [Windows API document](https://msdn.microsoft.com/zh-cn/library/ms123401.aspx)\n\n"
        },
        {
          "name": "README.zh-CN.md",
          "type": "blob",
          "size": 5.919921875,
          "content": "\n中文   | [English](README.md)    \n\n### GoVCL\n \n跨平台的Golang GUI库, 核心绑定自 [Lazarus](https://www.lazarus-ide.org/) 创建的通用跨平台GUI库 [liblcl](https://github.com/ying32/liblcl) 。    \n\n**GoVCL是一个原生GUI库，不是基于HTML，更不是DirectUI库，一切以实用为主。**    \n\n**中文全称：`Go语言可视化组件库`；英文全称：`Go Language Visual Component Library`**    \n\n*govcl最低要求go1.9.2。*    \n\n----\n\n**因为GoVCL早已经进入稳定阶段，目前处于纯维护状态，正常情况下不会增加新功能或者新组件，如果没有什么bug需要修复（指govcl这块的bug），原则上是不会发布新版本了。 2023/11/20**  \n\n----\n\n[截图查看](https://z-kit.cc/screenshot.html) | \n[中文文档](https://gitee.com/ying32/govcl/wikis/pages) | \n[更新日志](https://z-kit.cc/changelog.html) \n\n----\n\n### 一、支持的平台  \n**Windows** | **Linux** | **macOS**  \n\n> 如果你想要支持linux arm及linux 32bit则需要自己编译对应的liblcl二进制。  \n\n----\n\n### 二、预编译GUI库二进制下载（[源代码](https://github.com/ying32/liblcl)）       \n[![liblcl](https://img.shields.io/github/downloads/ying32/govcl/latest/liblcl-2.2.3.zip.svg)](https://github.com/ying32/govcl/releases/download/v2.2.3/liblcl-2.2.3.zip)  \n\n### 三、UI设计器（两种选择）\n\n* 1、 简易UI设计器（单页设计，适合不想安装Lazarus，项目不太复杂的）    \n\n[![GoVCLDesigner.win](https://img.shields.io/github/downloads/ying32/govcl/latest/GoVCLDesigner-win-1.2.1.zip.svg)](https://github.com/ying32/govcl/releases/download/v2.2.3/GoVCLDesigner-win-1.2.1.zip)  \n\n**注：此UI设计器已经不再更新了，但不影响使用。**\n\n* 2、 res2go IDE插件源代码（[源代码](https://github.com/ying32/res2go-ide-plugin)）  \n\n**使用方法: [安装方法](https://gitee.com/ying32/govcl/wikis/pages?sort_id=2645001&doc_id=102420)**   \n\n> 注：用Lazarus设计界面，用Golang写代码。    \n  \n---\n### 四、使用方法  \n\n#### 步骤一：获取govcl代码  \n\n> go get -u github.com/ying32/govcl  \n\n*注：也可用go module方式拉取，在go.mod中配置如：`github.com/ying32/govcl v2.2.3+incompatible`。*  \n\n#### 步骤二：编写代码    \n\n* 方法一(使用Lazarus设计界面。推荐)：  \n\n```golang\npackage main\n\n\nimport (\n   // 如果你使用自定义的syso文件则不要引用此包\n   _ \"github.com/ying32/govcl/pkgs/winappres\"\n   \"github.com/ying32/govcl/vcl\"\n)\n\ntype TMainForm struct {\n    *vcl.TForm\n    Btn1     *vcl.TButton\n}\n\ntype TAboutForm struct {\n    *vcl.TForm\n    Btn1    *vcl.TButton\n}\n\nvar (\n    mainForm *TMainForm\n    aboutForm *TAboutForm\n)\n\nfunc main() {\n    vcl.Application.Initialize()\n    vcl.Application.SetMainFormOnTaskBar(true)\n    vcl.Application.CreateForm(&mainForm)\n    vcl.Application.CreateForm(&aboutForm)\n    vcl.Application.Run()\n}\n\n// -- TMainForm\n\nfunc (f *TMainForm) OnFormCreate(sender vcl.IObject) {\n    \n}\n\nfunc (f *TMainForm) OnBtn1Click(sender vcl.IObject) {\n    aboutForm.Show()\n}\n\n// -- TAboutForm\n\nfunc (f *TAboutForm) OnFormCreate(sender vcl.IObject) {\n \n}\n\nfunc (f *TAboutForm) OnBtn1Click(sender vcl.IObject) {\n    vcl.ShowMessage(\"Hello!\")\n}\n```\n**方法一需要配合res2go工具使用。**  \n\n\n* 方法二(纯代码，仿照FreePascal类的方式)：  \n\n```golang\npackage main\n\n\nimport (\n   // 如果你使用自定义的syso文件则不要引用此包\n   _ \"github.com/ying32/govcl/pkgs/winappres\"\n   \"github.com/ying32/govcl/vcl\"\n)\n\ntype TMainForm struct {\n    *vcl.TForm\n    Btn1     *vcl.TButton\n}\n\ntype TAboutForm struct {\n    *vcl.TForm\n    Btn1    *vcl.TButton\n}\n\nvar (\n    mainForm *TMainForm\n    aboutForm *TAboutForm\n)\n\nfunc main() {\n    vcl.RunApp(&mainForm, &aboutForm)\n}\n\n// -- TMainForm\n\nfunc (f *TMainForm) OnFormCreate(sender vcl.IObject) {\n    f.SetCaption(\"MainForm\")\n    \n    f.Btn1 = vcl.NewButton(f)\n    f.Btn1.SetParent(f)\n    f.Btn1.SetBounds(10, 10, 88, 28)\n    f.Btn1.SetCaption(\"Button1\")\n    f.Btn1.SetOnClick(f.OnBtn1Click)  \n}\n\nfunc (f *TMainForm) OnBtn1Click(sender vcl.IObject) {\n    aboutForm.Show()\n}\n\n\n// -- TAboutForm\n\nfunc (f *TAboutForm) OnFormCreate(sender vcl.IObject) {\n    f.SetCaption(\"About\")\n    f.Btn1 = vcl.NewButton(f)\n    //f.Btn1.SetName(\"Btn1\")\n    f.Btn1.SetParent(f)\n    f.Btn1.SetBounds(10, 10, 88, 28)\n    f.Btn1.SetCaption(\"Button1\")\n    f.Btn1.SetOnClick(f.OnBtn1Click)  \n}\n\nfunc (f *TAboutForm) OnBtn1Click(sender vcl.IObject) {\n    vcl.ShowMessage(\"Hello!\")\n}\n\n```\n\n#### 步骤三：复制对应的二进制    \n\n* Windows: 根据编译的二进制是32还是64位的，复制对应的`liblcl.dll`到当前可执行文件目录或系统环境路径下。 \n  * Go环境变量： `GOARCH = amd64 386` `GOOS = windows` `CGO_ENABLED=0`   \n\n* Linux: 复制`liblcl.so`当前可执行文件目录下(也可复制liblcl.so到`/usr/lib/`(32bit liblcl)或者`/usr/lib/x86_64-linux-gnu/`(64bit liblcl)目录中，作为公共库使用)。  \n  * Go环境变量： `GOARCH = amd64` `GOOS = linux` `CGO_ENABLED=1`\n\n* MacOS: 复制`liblcl.dylib`当前可执行文件目录下（MacOS下注意：需要自行创建info.plist文件），或者参考：[MacOS上应用打包](https://gitee.com/ying32/govcl/wikis/pages?sort_id=410056&doc_id=102420)   \n  * Go环境变量： `GOARCH = amd64` `GOOS = darwin` `CGO_ENABLED=1`  \n\n\n注：这里的`当前可执行文件目录`指的是你当前编译的项目生成的可执行文件位置。\n\n----\n\n### 五、注意:  \n\n**特别注意：所有UI组件都是非线程/协程安全的，当在goroutine中使用时，请使用[vcl.ThreadSync](https://gitee.com/ying32/govcl/wikis/pages?sort_id=976890&doc_id=102420)来同步更新到UI上。**    \n\n**特别注意2：如果你使用go>=1.15编译Windows可执行文件，则必须则必须使用`-buildmode=exe`编译选项，不然会有错误。**  \n\n### 六、API文档\n\n* [Lazarus LCL组件WIKI](http://wiki.freepascal.org/LCL_Components)\n* [Windows API文档](https://msdn.microsoft.com/zh-cn/library/ms123401.aspx)  \n\n"
        },
        {
          "name": "Tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkgs",
          "type": "tree",
          "content": null
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "vcl",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}