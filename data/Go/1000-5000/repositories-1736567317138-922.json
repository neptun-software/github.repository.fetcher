{
  "metadata": {
    "timestamp": 1736567317138,
    "page": 922,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "eapache/go-resiliency",
      "stars": 2243,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.259765625,
          "content": "# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n_obj\n_test\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\n*.test\n*.prof\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 2.298828125,
          "content": "# Changelog\n\n*Note: I will occasionally bump the minimum required Golang version without\nbumping the major version of this package, which violates the official Golang\npackaging convention around breaking changes. Typically the versions being\ndropped are multiple years old and long unsupported.*\n\n#### Version 1.7.0 (2024-07-19)\n\n - Adds `Retrier.WithSurfaceWorkErrors()` to ask the Retrier to always return\n   the work function's error even if a context deadline is hit (thanks to\n   Elizabeth Cox).\n\n#### Version 1.6.0 (2024-02-19)\n\n - Adds `Breaker.GetState()` to check the breaker state directly (e.g. for\n   monitoring metrics).\n - Fix a race condition in the Batcher that could have lead to a panic if\n   multiple batches ended up executing at once (thanks to Tiago Peczenyj for the\n   discovery and very clear bug report).\n - Fix `Batcher.Shutdown()` to behave correctly when multiple batches end up\n   executing at once.\n - A variety of small refactors, simplifications, and test suite improvements.\n\n#### Version 1.5.0 (2023-12-14)\n\n - Adds `Retrier.WithInfiniteRetry()` and `Retrier.RunFn()` to handle more\n   complex cases (thanks to Maxime Beckman).\n\n#### Version 1.4.0 (2023-08-14)\n\n - Adds `Batcher.Shutdown()` to flush any pending work without waiting for the\n   timer, e.g. on application shutdown (thanks to Ivan Stankov).\n - Fix possible memory leaks of Timer objects in Deadline, Retrier, and\n   Semaphore (thanks to Dmytro Nozdrin).\n\n#### Version 1.3.0 (2022-06-27)\n\n - Increased minimum Golang version to 1.13.\n - Fix a goroutine leak in `Deadline.Run()` on `ErrTimeOut`.\n - Add a `go.mod` file to conform to more recent Golang version standards.\n - Use `errors.Is` when classifying errors for the `Retrier` (thanks to Taufik\n   Rama).\n - Add implementation of `LimitedExponentialBackoff` for the `Retrier` (thanks\n   to tukeJonny).\n\n#### Version 1.2.0 (2019-06-14)\n\n - Increased minimum Golang version to 1.7.\n - Add `RunCtx` method on `Retrier` to support running with a context.\n - Ensure the `Retrier`'s use of random numbers is concurrency-safe.\n - Bump CI to ensure we support newer Golang versions.\n\n#### Version 1.1.0 (2018-03-26)\n\n - Improve documentation and fix some typos.\n - Bump CI to ensure we support newer Golang versions.\n - Add `IsEmpty()` method on `Semaphore`.\n\n#### Version 1.0.0 (2015-02-13)\n\nInitial release.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0517578125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014 Evan Huus\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.126953125,
          "content": "go-resiliency\n=============\n\n[![Golang CI](https://github.com/eapache/go-resiliency/actions/workflows/golang-ci.yml/badge.svg)](https://github.com/eapache/go-resiliency/actions/workflows/golang-ci.yml)\n[![GoDoc](https://godoc.org/github.com/eapache/go-resiliency?status.svg)](https://godoc.org/github.com/eapache/go-resiliency)\n[![Code of Conduct](https://img.shields.io/badge/code%20of%20conduct-active-blue.svg)](https://eapache.github.io/conduct.html)\n\nResiliency patterns for golang.\nBased in part on [Hystrix](https://github.com/Netflix/Hystrix),\n[Semian](https://github.com/Shopify/semian), and others.\n\nCurrently implemented patterns include:\n- circuit-breaker (in the `breaker` directory)\n- semaphore (in the `semaphore` directory)\n- deadline/timeout (in the `deadline` directory)\n- batching (in the `batcher` directory)\n- retriable (in the `retrier` directory)\n\n*Note: I will occasionally bump the minimum required Golang version without\nbumping the major version of this package, which violates the official Golang\npackaging convention around breaking changes. Typically the versions being\ndropped are multiple years old and long unsupported.*\n"
        },
        {
          "name": "batcher",
          "type": "tree",
          "content": null
        },
        {
          "name": "breaker",
          "type": "tree",
          "content": null
        },
        {
          "name": "deadline",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.0478515625,
          "content": "module github.com/eapache/go-resiliency\n\ngo 1.13\n"
        },
        {
          "name": "retrier",
          "type": "tree",
          "content": null
        },
        {
          "name": "semaphore",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}