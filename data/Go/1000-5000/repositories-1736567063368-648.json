{
  "metadata": {
    "timestamp": 1736567063368,
    "page": 648,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "hairyhenderson/gomplate",
      "stars": 2752,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0537109375,
          "content": ".vscode\n*.md\n*.cid\n*.iid\nbin/\ncoverage/\ndocs/\ntestbin/\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.095703125,
          "content": ".git\nbin\ntestbin\nreport.xml\n./gomplate\n*.cid\n*.iid\n*.out\n.netlify\ndocs/.hugo_build.lock\nbench.txt\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 1.5185546875,
          "content": "linters-settings:\n  govet:\n    enable-all: true\n  gocyclo:\n    min-complexity: 10\n  gomoddirectives:\n    replace-local: false\n    replace-allow-list: []\n    retract-allow-no-explanation: false\n    exclude-forbidden: true\n  dupl:\n    threshold: 100\n  goconst:\n    min-len: 2\n    min-occurrences: 5\n    ignore-tests: true\n  lll:\n    line-length: 140\n  nolintlint:\n    allow-unused: false # report any unused nolint directives\n    require-explanation: false # don't require an explanation for nolint directives\n    require-specific: false # don't require nolint directives to be specific about which linter is being skipped\n\nlinters:\n  disable-all: true\n  enable:\n    - asciicheck\n    - bodyclose\n    - copyloopvar\n    # - dogsled\n    # - dupl\n    - errcheck\n    # - exhaustive\n    # - funlen\n    # - gci\n    # - gochecknoglobals\n    - gochecknoinits\n    - gocognit\n    - goconst\n    - gocritic\n    # - gocyclo\n    # - godox\n    - gofmt\n    - gofumpt\n    - goheader\n    - goimports\n    # - gomnd\n    - gomoddirectives\n    - gomodguard\n    - goprintffuncname\n    - gosec\n    - gosimple\n    - govet\n    - ineffassign\n    # - lll\n    - misspell\n    - nakedret\n    - nestif\n    # - nlreturn\n    - noctx\n    - nolintlint\n    - prealloc\n    - revive\n    - rowserrcheck\n    - sloglint\n    - sqlclosecheck\n    - staticcheck\n    - stylecheck\n    - testifylint\n    - typecheck\n    - unconvert\n    - unparam\n    - unused\n    - whitespace\n    # - wsl\n\nissues:\n  exclude-rules:\n    - path: _test\\.go\n      linters:\n        - errcheck\n\nrun:\n  concurrency: 4\n  timeout: 5m\n"
        },
        {
          "name": ".imgbotconfig",
          "type": "blob",
          "size": 0.0830078125,
          "content": "{\n    \"ignoredFiles\": [ \"*.svg\", \"vendor/*\" ],\n    \"aggressiveCompression\": \"true\"\n}\n"
        },
        {
          "name": ".release-please-manifest.json",
          "type": "blob",
          "size": 0.0205078125,
          "content": "{\n    \".\": \"4.3.0\"\n}\n"
        },
        {
          "name": ".trivyignore",
          "type": "blob",
          "size": 0.17578125,
          "content": "# Ignoring CVE-2022-0778 as it's mostly covered by Alpine 3.15.1, except for\n# libretls, which isn't used at all. Should be able to remove this when 3.15.2\n# is out.\nCVE-2022-0778\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 66.794921875,
          "content": "# Change Log\n\n## [4.3.0](https://github.com/hairyhenderson/gomplate/compare/v4.2.0...v4.3.0) (2024-12-17)\n\n\n### Features\n\n* **fs:** Support Vault AWS IAM auth ([#2264](https://github.com/hairyhenderson/gomplate/issues/2264)) ([1da9105](https://github.com/hairyhenderson/gomplate/commit/1da91051d43152c23e4df62f2082e44300986fdc))\n\n\n### Bug Fixes\n\n* **datasources:** Fix aws+sm bug when reading secrets not starting with slash ([#2284](https://github.com/hairyhenderson/gomplate/issues/2284)) ([a69bb64](https://github.com/hairyhenderson/gomplate/commit/a69bb645210bd335e2ce3cece1b54af3a286db7a))\n* **datasources:** Properly support aws+sm with args ([#2291](https://github.com/hairyhenderson/gomplate/issues/2291)) ([ddc4efb](https://github.com/hairyhenderson/gomplate/commit/ddc4efb9edc84131a0ed6c327b0e62ce653be156))\n* **fs:** Cache data in stdinfs ([#2288](https://github.com/hairyhenderson/gomplate/issues/2288)) ([cd74bb8](https://github.com/hairyhenderson/gomplate/commit/cd74bb8eae53597d8272bcdffdaa34e1b839a700))\n* **fs:** fix mergefs bug where files were opened too many times ([#2287](https://github.com/hairyhenderson/gomplate/issues/2287)) ([7eb7829](https://github.com/hairyhenderson/gomplate/commit/7eb7829dc69830dbe42cbf688a90eca561d75671))\n\n\n### Documentation\n\n* **fix:** Quotation in external templates example ([#2263](https://github.com/hairyhenderson/gomplate/issues/2263)) ([d512164](https://github.com/hairyhenderson/gomplate/commit/d512164c7f192ed21251d700918d98fe7d6c76a0))\n* **fix:** Typo of description in functions/test ([#2265](https://github.com/hairyhenderson/gomplate/issues/2265)) ([478b745](https://github.com/hairyhenderson/gomplate/commit/478b745e75c3e03a96fff7af39128e63dc356e34))\n\n\n### Dependencies\n\n* **actions:** Bump docker/setup-buildx-action from 3.7.1 to 3.8.0 ([#2286](https://github.com/hairyhenderson/gomplate/issues/2286)) ([86b934e](https://github.com/hairyhenderson/gomplate/commit/86b934e4bf9bcfb8ead3e401a7f20def3eb04f72))\n* **docker:** Bump alpine from 3.20 to 3.21 ([#2278](https://github.com/hairyhenderson/gomplate/issues/2278)) ([9439cad](https://github.com/hairyhenderson/gomplate/commit/9439cade4601fc093ed5ac9bd3af15c9d1230781))\n* **go:** Bump cuelang.org/go from 0.10.1 to 0.11.0 ([#2267](https://github.com/hairyhenderson/gomplate/issues/2267)) ([7b89601](https://github.com/hairyhenderson/gomplate/commit/7b89601c28b586d0f9bcc181f0adbbcf57fda3e4))\n* **go:** Bump github.com/hairyhenderson/go-fsimpl from 0.1.8 to 0.2.0 ([#2271](https://github.com/hairyhenderson/gomplate/issues/2271)) ([e29e3ee](https://github.com/hairyhenderson/gomplate/commit/e29e3ee8ea0590993407c03ad7e34ba2546db28d))\n* **go:** Bump github.com/hairyhenderson/go-fsimpl from 0.2.0 to 0.2.1 ([#2290](https://github.com/hairyhenderson/gomplate/issues/2290)) ([d7e8e19](https://github.com/hairyhenderson/gomplate/commit/d7e8e1924a0f9a5a91114e0645ed5f33a5d4d953))\n* **go:** Bump github.com/itchyny/gojq from 0.12.16 to 0.12.17 ([#2272](https://github.com/hairyhenderson/gomplate/issues/2272)) ([fe927f9](https://github.com/hairyhenderson/gomplate/commit/fe927f97f4d95033be226a16dbf97186631a71c6))\n* **go:** Bump github.com/lmittmann/tint from 1.0.5 to 1.0.6 ([#2285](https://github.com/hairyhenderson/gomplate/issues/2285)) ([e04f119](https://github.com/hairyhenderson/gomplate/commit/e04f119d992103513360954763e4950a1d3b109b))\n* **go:** Bump github.com/Masterminds/semver/v3 from 3.3.0 to 3.3.1 ([#2268](https://github.com/hairyhenderson/gomplate/issues/2268)) ([71a58a1](https://github.com/hairyhenderson/gomplate/commit/71a58a197a2e635b968f3cedaa74a9645818f882))\n* **go:** Bump github.com/stretchr/testify from 1.9.0 to 1.10.0 ([#2270](https://github.com/hairyhenderson/gomplate/issues/2270)) ([67cf0b2](https://github.com/hairyhenderson/gomplate/commit/67cf0b268efc8b81e8b089ea45cfc5592b604b4d))\n* **go:** Bump golang.org/x/crypto from 0.29.0 to 0.30.0 ([#2277](https://github.com/hairyhenderson/gomplate/issues/2277)) ([e2cf0df](https://github.com/hairyhenderson/gomplate/commit/e2cf0df170dab56dc7432f4f5bcb7d96e0eac705))\n* **go:** Bump golang.org/x/crypto from 0.30.0 to 0.31.0 ([#2280](https://github.com/hairyhenderson/gomplate/issues/2280)) ([f4d9693](https://github.com/hairyhenderson/gomplate/commit/f4d969393c6482d2dece401f2685cc727f822374))\n* **go:** Bump golang.org/x/sys from 0.27.0 to 0.28.0 ([#2274](https://github.com/hairyhenderson/gomplate/issues/2274)) ([2e9d862](https://github.com/hairyhenderson/gomplate/commit/2e9d862e49a704cd17dbf16d2d5ae849e04f5667))\n* **go:** Bump golang.org/x/term from 0.26.0 to 0.27.0 ([#2275](https://github.com/hairyhenderson/gomplate/issues/2275)) ([b53e9e4](https://github.com/hairyhenderson/gomplate/commit/b53e9e4b33c92bbf8d45e9e0349554446a3816c1))\n* **go:** Bump k8s.io/client-go from 0.31.2 to 0.31.3 ([#2269](https://github.com/hairyhenderson/gomplate/issues/2269)) ([8d23672](https://github.com/hairyhenderson/gomplate/commit/8d23672623f4f2d11c4b7d536cdc2412eeb7c17b))\n* **go:** Bump k8s.io/client-go from 0.31.3 to 0.32.0 ([#2282](https://github.com/hairyhenderson/gomplate/issues/2282)) ([aaaf0da](https://github.com/hairyhenderson/gomplate/commit/aaaf0da696e8ce5216c7004f734b11eb6414cc50))\n\n## [4.2.0](https://github.com/hairyhenderson/gomplate/compare/v4.1.0...v4.2.0) (2024-11-10)\n\n\n### Features\n\n* **config:** Allow avoiding reading default config file ([#2227](https://github.com/hairyhenderson/gomplate/issues/2227)) ([18791a4](https://github.com/hairyhenderson/gomplate/commit/18791a4e6e08de406e9c1e257cc4be2a85f29eea))\n\n\n### Bug Fixes\n\n* **datasources:** Properly handle datasources and other URLs beginning with '../' ([#2255](https://github.com/hairyhenderson/gomplate/issues/2255)) ([53d6ca0](https://github.com/hairyhenderson/gomplate/commit/53d6ca0ee470cd6d3595c380b55934ee26d8ce9f))\n* **lint:** Address new lint warnings from golangci-lint 1.62 ([#2256](https://github.com/hairyhenderson/gomplate/issues/2256)) ([a13844c](https://github.com/hairyhenderson/gomplate/commit/a13844c9c0a3d03e0fba4627a51445ca9ae8100b))\n* **lint:** Fix or ignore lint errors ([#2228](https://github.com/hairyhenderson/gomplate/issues/2228)) ([69d3e0c](https://github.com/hairyhenderson/gomplate/commit/69d3e0c46e34a57e6cfcb58d36b28c6f0beb134e))\n* **strings:** Avoid potential overflow on 32-bit systems ([#2257](https://github.com/hairyhenderson/gomplate/issues/2257)) ([1bd86d8](https://github.com/hairyhenderson/gomplate/commit/1bd86d8d48940d0919a3d47729a17520a32e05f9))\n\n\n### Documentation\n\n* **fix:** Fix example output for coll.Merge ([#2252](https://github.com/hairyhenderson/gomplate/issues/2252)) ([60a575f](https://github.com/hairyhenderson/gomplate/commit/60a575f8e18dbfe383a10bb4536890dbaaaf291f))\n* **fix:** Minor fix in documentation related to `--exclude-processing` ([#2238](https://github.com/hairyhenderson/gomplate/issues/2238)) ([52abefa](https://github.com/hairyhenderson/gomplate/commit/52abefaff16f70da044ed56abafc3e25b9ccd7d9))\n* **links:** Fix broken link ([#2254](https://github.com/hairyhenderson/gomplate/issues/2254)) ([7e64928](https://github.com/hairyhenderson/gomplate/commit/7e64928e31e07fb9c8e63b7c395949722461870f))\n\n\n### Dependencies\n\n* **actions:** Bump docker/login-action from 3.2.0 to 3.3.0 ([#2189](https://github.com/hairyhenderson/gomplate/issues/2189)) ([8f40d1f](https://github.com/hairyhenderson/gomplate/commit/8f40d1fffd456266a1ac563df8fde5589e52d8de))\n* **actions:** Bump docker/setup-buildx-action from 3.4.0 to 3.6.1 ([#2198](https://github.com/hairyhenderson/gomplate/issues/2198)) ([71f53aa](https://github.com/hairyhenderson/gomplate/commit/71f53aa08871e2da51d5739738dadf3ff10f552d))\n* **actions:** Bump docker/setup-buildx-action from 3.6.1 to 3.7.1 ([#2233](https://github.com/hairyhenderson/gomplate/issues/2233)) ([f908325](https://github.com/hairyhenderson/gomplate/commit/f9083259a9f3221f956e7ba2aff68846cfc2c850))\n* **actions:** Bump docker/setup-qemu-action from 3.1.0 to 3.2.0 ([#2188](https://github.com/hairyhenderson/gomplate/issues/2188)) ([2869ba1](https://github.com/hairyhenderson/gomplate/commit/2869ba16d6dfa9ee941c241060187deb6e0e5ee9))\n* **docker:** Bump golang from 1.22-alpine to 1.23-alpine ([#2212](https://github.com/hairyhenderson/gomplate/issues/2212)) ([8946529](https://github.com/hairyhenderson/gomplate/commit/8946529478bb9ca417df438604b322c5bee2ed29))\n* **go:** Bump cuelang.org/go from 0.9.2 to 0.10.1 ([#2241](https://github.com/hairyhenderson/gomplate/issues/2241)) ([ca531f2](https://github.com/hairyhenderson/gomplate/commit/ca531f23bcadfcf56f4b5fb6067c3a75e2d964a0))\n* **go:** Bump github.com/aws/aws-sdk-go from 1.54.15 to 1.54.16 ([#2172](https://github.com/hairyhenderson/gomplate/issues/2172)) ([19cd050](https://github.com/hairyhenderson/gomplate/commit/19cd050be438f9d407800725f16139d8a5f86624))\n* **go:** Bump github.com/aws/aws-sdk-go from 1.54.16 to 1.55.5 ([#2200](https://github.com/hairyhenderson/gomplate/issues/2200)) ([6cdc97d](https://github.com/hairyhenderson/gomplate/commit/6cdc97ddce3037e8949ce40450dbc7c4d11ff754))\n* **go:** Bump github.com/hairyhenderson/go-fsimpl from 0.1.7 to 0.1.8 ([#2243](https://github.com/hairyhenderson/gomplate/issues/2243)) ([d464787](https://github.com/hairyhenderson/gomplate/commit/d4647871a06410549748b242547991736be96c8c))\n* **go:** Bump github.com/hashicorp/go-sockaddr from 1.0.6 to 1.0.7 ([#2229](https://github.com/hairyhenderson/gomplate/issues/2229)) ([bcb33a2](https://github.com/hairyhenderson/gomplate/commit/bcb33a21fb3032fa71cc4e08894865ced77b22a3))\n* **go:** Bump github.com/hashicorp/vault/api from 1.14.0 to 1.15.0 ([#2223](https://github.com/hairyhenderson/gomplate/issues/2223)) ([2e06943](https://github.com/hairyhenderson/gomplate/commit/2e06943fd9267452f999e0c9f5861d0bf74bfd69))\n* **go:** Bump github.com/hashicorp/vault/api/auth/aws ([#2224](https://github.com/hairyhenderson/gomplate/issues/2224)) ([87edb20](https://github.com/hairyhenderson/gomplate/commit/87edb2041dccb9b6e2579e35f5e3ac7391442744))\n* **go:** Bump github.com/lmittmann/tint from 1.0.4 to 1.0.5 ([#2178](https://github.com/hairyhenderson/gomplate/issues/2178)) ([cb30e90](https://github.com/hairyhenderson/gomplate/commit/cb30e90e523dd793c4a76d0f7fb0e2a0c6623cbb))\n* **go:** Bump github.com/Masterminds/semver/v3 from 3.2.1 to 3.3.0 ([#2216](https://github.com/hairyhenderson/gomplate/issues/2216)) ([8d8d696](https://github.com/hairyhenderson/gomplate/commit/8d8d6962fb8537e85226b8659dd4ff28c89742de))\n* **go:** Bump github.com/Shopify/ejson from 1.5.2 to 1.5.3 ([#2247](https://github.com/hairyhenderson/gomplate/issues/2247)) ([2622800](https://github.com/hairyhenderson/gomplate/commit/2622800d7ef2239094266ac17b5970fe80627435))\n* **go:** Bump golang.org/x/crypto from 0.25.0 to 0.27.0 ([#2221](https://github.com/hairyhenderson/gomplate/issues/2221)) ([33faeb3](https://github.com/hairyhenderson/gomplate/commit/33faeb3d2850d502c74243de0189be0b92ddbe5a))\n* **go:** Bump golang.org/x/crypto from 0.27.0 to 0.29.0 ([#2248](https://github.com/hairyhenderson/gomplate/issues/2248)) ([94716fc](https://github.com/hairyhenderson/gomplate/commit/94716fcc8a39461cdc3dbb1e1a5bf18484b72dc3))\n* **go:** Bump golang.org/x/sys from 0.22.0 to 0.24.0 ([#2209](https://github.com/hairyhenderson/gomplate/issues/2209)) ([9900424](https://github.com/hairyhenderson/gomplate/commit/9900424a1279fdf135d161779060837ab66ad5ed))\n* **go:** Bump golang.org/x/term from 0.22.0 to 0.24.0 ([#2219](https://github.com/hairyhenderson/gomplate/issues/2219)) ([ab5d4ad](https://github.com/hairyhenderson/gomplate/commit/ab5d4add4bbf8799167d7941502056f4b3be437f))\n* **go:** Bump golang.org/x/text from 0.16.0 to 0.17.0 ([#2207](https://github.com/hairyhenderson/gomplate/issues/2207)) ([9ab0fc9](https://github.com/hairyhenderson/gomplate/commit/9ab0fc9cee3082bb2ec5da769e818f2cb954518e))\n* **go:** Bump golang.org/x/text from 0.17.0 to 0.18.0 ([#2220](https://github.com/hairyhenderson/gomplate/issues/2220)) ([8c16576](https://github.com/hairyhenderson/gomplate/commit/8c165762eaf89d73335ef603373fd5225dbd5eb6))\n* **go:** Bump google.golang.org/grpc in the go_modules group ([#2175](https://github.com/hairyhenderson/gomplate/issues/2175)) ([836cbf0](https://github.com/hairyhenderson/gomplate/commit/836cbf0de4a77c052e976572c41450ab0e3e7966))\n* **go:** Bump k8s.io/client-go from 0.30.2 to 0.30.3 ([#2183](https://github.com/hairyhenderson/gomplate/issues/2183)) ([e13e016](https://github.com/hairyhenderson/gomplate/commit/e13e0165eac70568c074b41cad599d17ca1c29c0))\n* **go:** Bump k8s.io/client-go from 0.30.3 to 0.31.1 ([#2225](https://github.com/hairyhenderson/gomplate/issues/2225)) ([c60a045](https://github.com/hairyhenderson/gomplate/commit/c60a0457274f4c816f88952934b2744ba50c086a))\n* **go:** Bump k8s.io/client-go from 0.31.1 to 0.31.2 ([#2242](https://github.com/hairyhenderson/gomplate/issues/2242)) ([e080b07](https://github.com/hairyhenderson/gomplate/commit/e080b07b7c808c157c243dee0adc2a2fa58b769e))\n\n## [4.1.0](https://github.com/hairyhenderson/gomplate/compare/v4.0.1...v4.1.0) (2024-07-06)\n\n\n### Features\n\n* **strings:** New functions TrimRight and TrimLeft ([#2148](https://github.com/hairyhenderson/gomplate/issues/2148)) ([bdf3a1e](https://github.com/hairyhenderson/gomplate/commit/bdf3a1eb92020a0d1ce202df14b49f2f13445476))\n\n\n### Bug Fixes\n\n* **vault:** Upgrade go-fsimpl for KVv2 vault bug, and add test coverage ([#2157](https://github.com/hairyhenderson/gomplate/issues/2157)) ([6ffd703](https://github.com/hairyhenderson/gomplate/commit/6ffd7039b439dbdc40c63b19c85d7f1015ed842d))\n\n\n### Documentation\n\n* **datasources:** clarify state of Vault KV v2 support ([#2154](https://github.com/hairyhenderson/gomplate/issues/2154)) ([c9643ca](https://github.com/hairyhenderson/gomplate/commit/c9643cad84f95ac0086f8caa0b868364741aa6e6))\n* **fix:** Fix broken links, add CI to check ([#2156](https://github.com/hairyhenderson/gomplate/issues/2156)) ([bdf4f8c](https://github.com/hairyhenderson/gomplate/commit/bdf4f8c7d802c6f8ce4bbe6418d583a1449fe493))\n* **fix:** Update docs configs to work with the latest hugo theme version ([#2155](https://github.com/hairyhenderson/gomplate/issues/2155)) ([17eb360](https://github.com/hairyhenderson/gomplate/commit/17eb360dfaeaf3186b736971f45f3c418d583845))\n\n\n### Dependencies\n\n* **actions:** Bump docker/setup-buildx-action from 3.3.0 to 3.4.0 ([#2163](https://github.com/hairyhenderson/gomplate/issues/2163)) ([129ff6b](https://github.com/hairyhenderson/gomplate/commit/129ff6bde8a1fb46b0c2e52586f94cd1b470720b))\n* **actions:** Bump docker/setup-qemu-action from 3.0.0 to 3.1.0 ([#2160](https://github.com/hairyhenderson/gomplate/issues/2160)) ([16ebbbe](https://github.com/hairyhenderson/gomplate/commit/16ebbbedf9d6b328c8012933242fbb93b6e3613c))\n* **go:** Bump github.com/aws/aws-sdk-go from 1.54.10 to 1.54.11 ([#2152](https://github.com/hairyhenderson/gomplate/issues/2152)) ([e0a6e4f](https://github.com/hairyhenderson/gomplate/commit/e0a6e4f5d707513ef4c33ae8e019da455a7394b6))\n* **go:** Bump github.com/aws/aws-sdk-go from 1.54.11 to 1.54.13 ([#2158](https://github.com/hairyhenderson/gomplate/issues/2158)) ([720c70c](https://github.com/hairyhenderson/gomplate/commit/720c70c26b958be784577a349ec2b3a1160e0e54))\n* **go:** Bump github.com/aws/aws-sdk-go from 1.54.13 to 1.54.14 ([#2159](https://github.com/hairyhenderson/gomplate/issues/2159)) ([114c54d](https://github.com/hairyhenderson/gomplate/commit/114c54df69738156a70079b5de3352a032c755f9))\n* **go:** Bump github.com/aws/aws-sdk-go from 1.54.14 to 1.54.15 ([#2165](https://github.com/hairyhenderson/gomplate/issues/2165)) ([51947a7](https://github.com/hairyhenderson/gomplate/commit/51947a7d5ca7d797ee4998aadfcf856abc8f7a67))\n* **go:** Bump github.com/hairyhenderson/go-fsimpl from 0.1.6 to 0.1.7 ([#2167](https://github.com/hairyhenderson/gomplate/issues/2167)) ([80b7c5a](https://github.com/hairyhenderson/gomplate/commit/80b7c5a1aba49239b336d7eeed2525acc2d361be))\n* **go:** Bump golang.org/x/term from 0.21.0 to 0.22.0 ([#2162](https://github.com/hairyhenderson/gomplate/issues/2162)) ([59192ec](https://github.com/hairyhenderson/gomplate/commit/59192ec7efe1b59fd800fe399ee5fe063f80287b))\n\n## [4.0.1](https://github.com/hairyhenderson/gomplate/compare/v4.0.0...v4.0.1) (2024-06-28)\n\n\n### Bug Fixes\n\n* **test:** Fix strings.Repeat test that failed in the wrong way on 32bit ([#2129](https://github.com/hairyhenderson/gomplate/issues/2129)) ([6290186](https://github.com/hairyhenderson/gomplate/commit/62901868f10e887f602e85b37eac70c77f864cc4))\n\n\n### Documentation\n\n* **chore:** Uncomment 'released' tags for functions in v4.0.0 ([#2125](https://github.com/hairyhenderson/gomplate/issues/2125)) ([e3b86e8](https://github.com/hairyhenderson/gomplate/commit/e3b86e89fca0aad9f5a4f9856f0b57d9cc693470))\n\n\n### Dependencies\n\n* **go:** Bump cuelang.org/go from 0.9.1 to 0.9.2 ([#2142](https://github.com/hairyhenderson/gomplate/issues/2142)) ([720960e](https://github.com/hairyhenderson/gomplate/commit/720960eb9f25d4d63a037a17648891b8fcf07275))\n* **go:** Bump github.com/aws/aws-sdk-go from 1.54.2 to 1.54.6 ([699a2ed](https://github.com/hairyhenderson/gomplate/commit/699a2ed2e202ada74b5c1150a1f6939dff509c86))\n* **go:** Bump github.com/aws/aws-sdk-go from 1.54.6 to 1.54.8 ([#2139](https://github.com/hairyhenderson/gomplate/issues/2139)) ([a3475c0](https://github.com/hairyhenderson/gomplate/commit/a3475c01e7afe9b5361dd455434244d6c24f7875))\n* **go:** Bump github.com/aws/aws-sdk-go from 1.54.8 to 1.54.9 ([#2143](https://github.com/hairyhenderson/gomplate/issues/2143)) ([715f2c2](https://github.com/hairyhenderson/gomplate/commit/715f2c263f1f6a2c3cb46e4bd5e7996d3587a2e2))\n* **go:** Bump github.com/aws/aws-sdk-go from 1.54.9 to 1.54.10 ([#2145](https://github.com/hairyhenderson/gomplate/issues/2145)) ([227b65d](https://github.com/hairyhenderson/gomplate/commit/227b65df1c23504c52428ad49dd42496b353f573))\n* **go:** bump github.com/hack-pad/hackpadfs ([#2127](https://github.com/hairyhenderson/gomplate/issues/2127)) ([e6c032b](https://github.com/hairyhenderson/gomplate/commit/e6c032bf458473ff07f0591bef7021e99a851757))\n* **go:** Bump github.com/hack-pad/hackpadfs from 0.2.2 to 0.2.3 ([#2131](https://github.com/hairyhenderson/gomplate/issues/2131)) ([4805247](https://github.com/hairyhenderson/gomplate/commit/48052470edcdd5cb3dc8b6ab4ec5bea3048f23a6))\n* **go:** Bump github.com/hack-pad/hackpadfs from 0.2.3 to 0.2.4 ([#2137](https://github.com/hairyhenderson/gomplate/issues/2137)) ([eddceaa](https://github.com/hairyhenderson/gomplate/commit/eddceaaf98f0ebd427b154a4bd777c3116112dd6))\n* **go:** Bump github.com/hairyhenderson/go-fsimpl from 0.1.4 to 0.1.5 ([#2146](https://github.com/hairyhenderson/gomplate/issues/2146)) ([7e425e1](https://github.com/hairyhenderson/gomplate/commit/7e425e17dbdf561244fa97404f2739bce31b7369))\n* **go:** bump github.com/hairyhenderson/go-fsimpl to fix 32-bit panic ([#2128](https://github.com/hairyhenderson/gomplate/issues/2128)) ([5104b19](https://github.com/hairyhenderson/gomplate/commit/5104b19ded072d8ed286cbb41168fb55edb63064))\n\n## [v2.7.0](https://github.com/hairyhenderson/gomplate/tree/v2.7.0) (2018-07-27)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v2.6.0...v2.7.0)\n\n**Implemented enhancements:**\n\n- Adding slice/array support to conv.Has [\\#365](https://github.com/hairyhenderson/gomplate/pull/365) ([hairyhenderson](https://github.com/hairyhenderson))\n- Allowing datasources to be defined dynamically [\\#357](https://github.com/hairyhenderson/gomplate/pull/357) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Fixed bugs:**\n\n- Require alias for defineDatasource [\\#358](https://github.com/hairyhenderson/gomplate/pull/358) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Closed issues:**\n\n- Feature Request: Allow datasources to be defined dynamically [\\#349](https://github.com/hairyhenderson/gomplate/issues/349)\n- Can't evaluate field Trunc in type \\*funcs.StringFuncs [\\#347](https://github.com/hairyhenderson/gomplate/issues/347)\n\n**Merged pull requests:**\n\n- Generating docs [\\#366](https://github.com/hairyhenderson/gomplate/pull/366) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding new strings.Sort function [\\#364](https://github.com/hairyhenderson/gomplate/pull/364) ([hairyhenderson](https://github.com/hairyhenderson))\n- Reducing output on template errors [\\#362](https://github.com/hairyhenderson/gomplate/pull/362) ([hairyhenderson](https://github.com/hairyhenderson))\n- Move integration tests [\\#361](https://github.com/hairyhenderson/gomplate/pull/361) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding fail and assert functions [\\#360](https://github.com/hairyhenderson/gomplate/pull/360) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding conv.ToBool/conv.ToBools functions [\\#359](https://github.com/hairyhenderson/gomplate/pull/359) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding new defineDatasource function [\\#356](https://github.com/hairyhenderson/gomplate/pull/356) ([hairyhenderson](https://github.com/hairyhenderson))\n- New path/filepath function namespaces [\\#355](https://github.com/hairyhenderson/gomplate/pull/355) ([hairyhenderson](https://github.com/hairyhenderson))\n- Add conv.ToStrings function [\\#354](https://github.com/hairyhenderson/gomplate/pull/354) ([hairyhenderson](https://github.com/hairyhenderson))\n- Bump golang from 1.10-alpine to 1.10.3-alpine [\\#353](https://github.com/hairyhenderson/gomplate/pull/353) ([dependabot[bot]](https://github.com/apps/dependabot))\n- Bump alpine from 3.7 to 3.8 [\\#352](https://github.com/hairyhenderson/gomplate/pull/352) ([dependabot[bot]](https://github.com/apps/dependabot))\n- Update golang:1.10-alpine Docker digest to 1c53b8 [\\#351](https://github.com/hairyhenderson/gomplate/pull/351) ([renovate[bot]](https://github.com/apps/renovate))\n- Update alpine:3.7 Docker digest to 5ce5f5 [\\#350](https://github.com/hairyhenderson/gomplate/pull/350) ([renovate[bot]](https://github.com/apps/renovate))\n- Update golang:1.10-alpine Docker digest to 79d51d [\\#348](https://github.com/hairyhenderson/gomplate/pull/348) ([renovate[bot]](https://github.com/apps/renovate))\n\n## [v2.6.0](https://github.com/hairyhenderson/gomplate/tree/v2.6.0) (2018-06-09)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v2.5.0...v2.6.0)\n\n**Implemented enhancements:**\n\n- Directory datasource [\\#215](https://github.com/hairyhenderson/gomplate/issues/215)\n\n**Fixed bugs:**\n\n- The `sockaddr.Include` and `sockaddr.Exclude` do not have \"private\" selector. [\\#328](https://github.com/hairyhenderson/gomplate/issues/328)\n- Support commas in number conversion [\\#345](https://github.com/hairyhenderson/gomplate/pull/345) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Closed issues:**\n\n- Add slugify [\\#336](https://github.com/hairyhenderson/gomplate/issues/336)\n- Action Required: Fix Renovate Configuration [\\#335](https://github.com/hairyhenderson/gomplate/issues/335)\n- Consider publishing sha256sums of release files [\\#318](https://github.com/hairyhenderson/gomplate/issues/318)\n- Vault list support [\\#229](https://github.com/hairyhenderson/gomplate/issues/229)\n\n**Merged pull requests:**\n\n- Update golang:1.10-alpine Docker digest to 56db23 [\\#346](https://github.com/hairyhenderson/gomplate/pull/346) ([renovate[bot]](https://github.com/apps/renovate))\n- Update golang:1.10-alpine Docker digest to bb3108 [\\#344](https://github.com/hairyhenderson/gomplate/pull/344) ([renovate[bot]](https://github.com/apps/renovate))\n- Adding env datasource [\\#341](https://github.com/hairyhenderson/gomplate/pull/341) ([hairyhenderson](https://github.com/hairyhenderson))\n- Add strings.Slug function [\\#339](https://github.com/hairyhenderson/gomplate/pull/339) ([hairyhenderson](https://github.com/hairyhenderson))\n- Updating vendored packages [\\#338](https://github.com/hairyhenderson/gomplate/pull/338) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding directory support for file datasources [\\#334](https://github.com/hairyhenderson/gomplate/pull/334) ([hairyhenderson](https://github.com/hairyhenderson))\n- Overhauling datasource documentation [\\#333](https://github.com/hairyhenderson/gomplate/pull/333) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding vault list support [\\#332](https://github.com/hairyhenderson/gomplate/pull/332) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding more math functions [\\#331](https://github.com/hairyhenderson/gomplate/pull/331) ([hairyhenderson](https://github.com/hairyhenderson))\n- Add missing anchor for RFC 1918 link in sockaddr documentation. [\\#330](https://github.com/hairyhenderson/gomplate/pull/330) ([kwilczynski](https://github.com/kwilczynski))\n- Remove notion of \"private\" selector from the Include/Exclude filter. [\\#329](https://github.com/hairyhenderson/gomplate/pull/329) ([kwilczynski](https://github.com/kwilczynski))\n- Improving documentation around slim binaries [\\#327](https://github.com/hairyhenderson/gomplate/pull/327) ([hairyhenderson](https://github.com/hairyhenderson))\n- Update golang:1.10-alpine Docker digest to 96e25c [\\#325](https://github.com/hairyhenderson/gomplate/pull/325) ([renovate[bot]](https://github.com/apps/renovate))\n- Update alpine:3.7 Docker digest to 8c03bb [\\#324](https://github.com/hairyhenderson/gomplate/pull/324) ([renovate[bot]](https://github.com/apps/renovate))\n- Adding strings.Trunc and strings.Abbrev [\\#323](https://github.com/hairyhenderson/gomplate/pull/323) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding crypto.Bcrypt function [\\#322](https://github.com/hairyhenderson/gomplate/pull/322) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding strings.TrimSuffix and strings.Repeat [\\#321](https://github.com/hairyhenderson/gomplate/pull/321) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding missing docs for file.Walk and strings.TrimPrefix [\\#320](https://github.com/hairyhenderson/gomplate/pull/320) ([hairyhenderson](https://github.com/hairyhenderson))\n- Add ability to generate checksums of binaries [\\#319](https://github.com/hairyhenderson/gomplate/pull/319) ([hairyhenderson](https://github.com/hairyhenderson))\n- Update golang:1.10-alpine Docker digest to 9de80c [\\#317](https://github.com/hairyhenderson/gomplate/pull/317) ([renovate[bot]](https://github.com/apps/renovate))\n\n## [v2.5.0](https://github.com/hairyhenderson/gomplate/tree/v2.5.0) (2018-05-04)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v2.4.0...v2.5.0)\n\n**Implemented enhancements:**\n\n- Exec mode... [\\#300](https://github.com/hairyhenderson/gomplate/issues/300)\n- Need a way to determine whether a datasource is reachable [\\#286](https://github.com/hairyhenderson/gomplate/issues/286)\n- Add `go-sockaddr` functions [\\#145](https://github.com/hairyhenderson/gomplate/issues/145)\n- Adding datasourceReachable function [\\#315](https://github.com/hairyhenderson/gomplate/pull/315) ([hairyhenderson](https://github.com/hairyhenderson))\n- Execute additional command after -- [\\#307](https://github.com/hairyhenderson/gomplate/pull/307) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Fixed bugs:**\n\n- panic when parsing an empty CSV as a datasource [\\#311](https://github.com/hairyhenderson/gomplate/issues/311)\n- File mode is not preserved [\\#296](https://github.com/hairyhenderson/gomplate/issues/296)\n- Fixing panic when parsing empty CSVs and CSVs containing only newlines [\\#312](https://github.com/hairyhenderson/gomplate/pull/312) ([hairyhenderson](https://github.com/hairyhenderson))\n- Avoid closing stdout [\\#306](https://github.com/hairyhenderson/gomplate/pull/306) ([hairyhenderson](https://github.com/hairyhenderson))\n- Writing output files from a stdin template requires permissions [\\#305](https://github.com/hairyhenderson/gomplate/pull/305) ([benjdewan](https://github.com/benjdewan))\n- Linting subpackages too... [\\#302](https://github.com/hairyhenderson/gomplate/pull/302) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Closed issues:**\n\n- Writing an output file from a template provided via --in sets no FileMode when run using Docker [\\#304](https://github.com/hairyhenderson/gomplate/issues/304)\n- function \"dict\" not defined [\\#291](https://github.com/hairyhenderson/gomplate/issues/291)\n- unexpected \"|\" in template clause [\\#290](https://github.com/hairyhenderson/gomplate/issues/290)\n- Conditional statement as default value in getenv? [\\#285](https://github.com/hairyhenderson/gomplate/issues/285)\n- Pull in sprig functions? [\\#283](https://github.com/hairyhenderson/gomplate/issues/283)\n- Consider breaking the gomplate cmd into a sub-package [\\#147](https://github.com/hairyhenderson/gomplate/issues/147)\n\n**Merged pull requests:**\n\n- Relaxing restriction on empty datasources [\\#316](https://github.com/hairyhenderson/gomplate/pull/316) ([hairyhenderson](https://github.com/hairyhenderson))\n- Improving error handling for datasources [\\#314](https://github.com/hairyhenderson/gomplate/pull/314) ([hairyhenderson](https://github.com/hairyhenderson))\n- Pin alpine Docker tag [\\#309](https://github.com/hairyhenderson/gomplate/pull/309) ([renovate[bot]](https://github.com/apps/renovate))\n- Adding alpine Docker image variant [\\#308](https://github.com/hairyhenderson/gomplate/pull/308) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding basic metrics around template rendering [\\#303](https://github.com/hairyhenderson/gomplate/pull/303) ([hairyhenderson](https://github.com/hairyhenderson))\n- Preserve FileMode of input file when writing output file [\\#301](https://github.com/hairyhenderson/gomplate/pull/301) ([djgilcrease](https://github.com/djgilcrease))\n- Exporting the writer used when templates are sent to Stdout [\\#299](https://github.com/hairyhenderson/gomplate/pull/299) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding new conv.Default function [\\#298](https://github.com/hairyhenderson/gomplate/pull/298) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding time.Since and time.Until funcs [\\#295](https://github.com/hairyhenderson/gomplate/pull/295) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding time.ParseDuration function [\\#294](https://github.com/hairyhenderson/gomplate/pull/294) ([hairyhenderson](https://github.com/hairyhenderson))\n- Relax inputs for many functions [\\#293](https://github.com/hairyhenderson/gomplate/pull/293) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding conv.ToString function [\\#292](https://github.com/hairyhenderson/gomplate/pull/292) ([hairyhenderson](https://github.com/hairyhenderson))\n- chore\\(deps\\): update golang:1.10-alpine docker digest to 356aea [\\#289](https://github.com/hairyhenderson/gomplate/pull/289) ([renovate[bot]](https://github.com/apps/renovate))\n- meta: Add release for freebsd-amd64 [\\#287](https://github.com/hairyhenderson/gomplate/pull/287) ([jen20](https://github.com/jen20))\n- New env.ExpandEnv function [\\#284](https://github.com/hairyhenderson/gomplate/pull/284) ([hairyhenderson](https://github.com/hairyhenderson))\n- New function proposal: `strings.TrimPrefix` [\\#282](https://github.com/hairyhenderson/gomplate/pull/282) ([christopher-avila](https://github.com/christopher-avila))\n- New function: `file.Walk` [\\#281](https://github.com/hairyhenderson/gomplate/pull/281) ([christopher-avila](https://github.com/christopher-avila))\n- Update golang Docker image 1.10-alpine digest \\(2d95d3\\) [\\#280](https://github.com/hairyhenderson/gomplate/pull/280) ([renovate[bot]](https://github.com/apps/renovate))\n- Update deps [\\#273](https://github.com/hairyhenderson/gomplate/pull/273) ([hairyhenderson](https://github.com/hairyhenderson))\n- Putting main pkg in cmd subdirectory [\\#264](https://github.com/hairyhenderson/gomplate/pull/264) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v2.4.0](https://github.com/hairyhenderson/gomplate/tree/v2.4.0) (2018-03-04)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v2.3.0...v2.4.0)\n\n**Implemented enhancements:**\n\n- Support setting Vault server URL in datasource URL [\\#243](https://github.com/hairyhenderson/gomplate/issues/243)\n- Exclude option support [\\#218](https://github.com/hairyhenderson/gomplate/issues/218)\n- Adding sockaddr namespace [\\#271](https://github.com/hairyhenderson/gomplate/pull/271) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding file namespace [\\#270](https://github.com/hairyhenderson/gomplate/pull/270) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Fixed bugs:**\n\n- Solaris build is broken 💥 [\\#255](https://github.com/hairyhenderson/gomplate/issues/255)\n- strings.Indent should not indent when width is 0 [\\#268](https://github.com/hairyhenderson/gomplate/pull/268) ([keitwb](https://github.com/keitwb))\n- Attempting to fix intermittent Integration Test failure [\\#260](https://github.com/hairyhenderson/gomplate/pull/260) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Closed issues:**\n\n- docker run hairyhenderson/gomplate --version doesn't print version [\\#266](https://github.com/hairyhenderson/gomplate/issues/266)\n\n**Merged pull requests:**\n\n- Log test output in CI [\\#272](https://github.com/hairyhenderson/gomplate/pull/272) ([hairyhenderson](https://github.com/hairyhenderson))\n- Updating vendored dependencies [\\#269](https://github.com/hairyhenderson/gomplate/pull/269) ([hairyhenderson](https://github.com/hairyhenderson))\n- Fix the example command in 'use with docker' section [\\#267](https://github.com/hairyhenderson/gomplate/pull/267) ([yizhiheng](https://github.com/yizhiheng))\n- Migrate from bats to pure Go for integration tests [\\#265](https://github.com/hairyhenderson/gomplate/pull/265) ([hairyhenderson](https://github.com/hairyhenderson))\n- Rebasing Docker images on `scratch` instead of alpine [\\#261](https://github.com/hairyhenderson/gomplate/pull/261) ([hairyhenderson](https://github.com/hairyhenderson))\n- Building with Go 1.10 [\\#258](https://github.com/hairyhenderson/gomplate/pull/258) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v2.3.0](https://github.com/hairyhenderson/gomplate/tree/v2.3.0) (2018-02-12)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v2.2.0...v2.3.0)\n\n**Implemented enhancements:**\n\n- Enable reading from AWS SSM Parameter Store? [\\#245](https://github.com/hairyhenderson/gomplate/issues/245)\n- Can we specify stdin as a datasource? [\\#230](https://github.com/hairyhenderson/gomplate/issues/230)\n- Trade the dependency on `aws-sdk-go` for something smaller [\\#47](https://github.com/hairyhenderson/gomplate/issues/47)\n- Allow vault address to be specified in the vault:// URL [\\#251](https://github.com/hairyhenderson/gomplate/pull/251) ([hairyhenderson](https://github.com/hairyhenderson))\n- Add AWS SSM Parameter support [\\#248](https://github.com/hairyhenderson/gomplate/pull/248) ([tyrken](https://github.com/tyrken))\n- Add crypto namespace [\\#236](https://github.com/hairyhenderson/gomplate/pull/236) ([hairyhenderson](https://github.com/hairyhenderson))\n- Support setting MIME type with URL query string [\\#234](https://github.com/hairyhenderson/gomplate/pull/234) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding support for stdin: scheme for datasources [\\#233](https://github.com/hairyhenderson/gomplate/pull/233) ([hairyhenderson](https://github.com/hairyhenderson))\n- Can now pass --exclude as a flag [\\#220](https://github.com/hairyhenderson/gomplate/pull/220) ([Gman98ish](https://github.com/Gman98ish))\n\n**Fixed bugs:**\n\n- \"unexpected {{end}}\" error that only happens when using --input-dir [\\#238](https://github.com/hairyhenderson/gomplate/issues/238)\n\n**Closed issues:**\n\n- gomplate should output which template was being parsed when an error is encountered [\\#239](https://github.com/hairyhenderson/gomplate/issues/239)\n- function \"math\" not defined [\\#224](https://github.com/hairyhenderson/gomplate/issues/224)\n\n**Merged pull requests:**\n\n- new logo [\\#253](https://github.com/hairyhenderson/gomplate/pull/253) ([hairyhenderson](https://github.com/hairyhenderson))\n- bind test binaries explicitly to 127.0.0.1 [\\#252](https://github.com/hairyhenderson/gomplate/pull/252) ([hairyhenderson](https://github.com/hairyhenderson))\n- Updating github.com/aws/aws-sdk-go to v1.12.70 [\\#247](https://github.com/hairyhenderson/gomplate/pull/247) ([hairyhenderson](https://github.com/hairyhenderson))\n- Updating for dep 0.4.0 and revendoring [\\#246](https://github.com/hairyhenderson/gomplate/pull/246) ([hairyhenderson](https://github.com/hairyhenderson))\n- Increase gometalinter timeout and make it go faster locally [\\#244](https://github.com/hairyhenderson/gomplate/pull/244) ([hairyhenderson](https://github.com/hairyhenderson))\n- Refactoring template processing [\\#241](https://github.com/hairyhenderson/gomplate/pull/241) ([hairyhenderson](https://github.com/hairyhenderson))\n- Naming template after input filename [\\#240](https://github.com/hairyhenderson/gomplate/pull/240) ([hairyhenderson](https://github.com/hairyhenderson))\n- Pruning dependencies with `dep prune` [\\#237](https://github.com/hairyhenderson/gomplate/pull/237) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v2.2.0](https://github.com/hairyhenderson/gomplate/tree/v2.2.0) (2017-11-03)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v2.1.0...v2.2.0)\n\n**Implemented enhancements:**\n\n- Add some time-related functions [\\#199](https://github.com/hairyhenderson/gomplate/issues/199)\n- Adding math.Seq function [\\#227](https://github.com/hairyhenderson/gomplate/pull/227) ([hairyhenderson](https://github.com/hairyhenderson))\n- Add time.ParseLocal and time.ParseInLocation functions [\\#223](https://github.com/hairyhenderson/gomplate/pull/223) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding time.ZoneOffset function [\\#222](https://github.com/hairyhenderson/gomplate/pull/222) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding conv.ToInt64, conv.ToFloat64, and others... [\\#216](https://github.com/hairyhenderson/gomplate/pull/216) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding math functions [\\#214](https://github.com/hairyhenderson/gomplate/pull/214) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Fixed bugs:**\n\n- Fixing conv.Join to handle non-interface{} arrays [\\#226](https://github.com/hairyhenderson/gomplate/pull/226) ([hairyhenderson](https://github.com/hairyhenderson))\n- Fixing bugs in ToInt64/ToFloat64 [\\#217](https://github.com/hairyhenderson/gomplate/pull/217) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Merged pull requests:**\n\n- Using Go 1.9.x now - go test ignores vendor on its own now [\\#228](https://github.com/hairyhenderson/gomplate/pull/228) ([hairyhenderson](https://github.com/hairyhenderson))\n- Stabilizing integration tests a bit [\\#221](https://github.com/hairyhenderson/gomplate/pull/221) ([hairyhenderson](https://github.com/hairyhenderson))\n- Don't panic on template errors [\\#219](https://github.com/hairyhenderson/gomplate/pull/219) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v2.1.0](https://github.com/hairyhenderson/gomplate/tree/v2.1.0) (2017-10-14)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v2.0.1...v2.1.0)\n\n**Implemented enhancements:**\n\n- Add time funcs [\\#211](https://github.com/hairyhenderson/gomplate/pull/211) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Fixed bugs:**\n\n- 'client nonce mismatch' when using AWS auth with nonce [\\#205](https://github.com/hairyhenderson/gomplate/issues/205)\n- AWS Auth nonce file not created if it doesn't already exist [\\#204](https://github.com/hairyhenderson/gomplate/issues/204)\n- \"gomplate -in flibbit\" should produce an error [\\#192](https://github.com/hairyhenderson/gomplate/issues/192)\n- Fixes \\#192 - fail with unknown args [\\#208](https://github.com/hairyhenderson/gomplate/pull/208) ([drmdrew](https://github.com/drmdrew))\n- Remove trailing spaces [\\#207](https://github.com/hairyhenderson/gomplate/pull/207) ([stuart-c](https://github.com/stuart-c))\n- Create file if it doesn't exist [\\#206](https://github.com/hairyhenderson/gomplate/pull/206) ([stuart-c](https://github.com/stuart-c))\n\n**Closed issues:**\n\n- Document 4 new conv functions in 2.0.0 [\\#196](https://github.com/hairyhenderson/gomplate/issues/196)\n\n**Merged pull requests:**\n\n- Document conv.ParseInt, conv.ParseFloat, conv.ParseUint, and conv.Atoi [\\#212](https://github.com/hairyhenderson/gomplate/pull/212) ([danedmunds](https://github.com/danedmunds))\n\n## [v2.0.1](https://github.com/hairyhenderson/gomplate/tree/v2.0.1) (2017-09-08)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v2.0.0...v2.0.1)\n\n**Fixed bugs:**\n\n- Crash when vault secret is not found [\\#200](https://github.com/hairyhenderson/gomplate/issues/200)\n- Fixing crash on 404 [\\#201](https://github.com/hairyhenderson/gomplate/pull/201) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Merged pull requests:**\n\n- Add nonce support [\\#202](https://github.com/hairyhenderson/gomplate/pull/202) ([stuart-c](https://github.com/stuart-c))\n\n## [v2.0.0](https://github.com/hairyhenderson/gomplate/tree/v2.0.0) (2017-08-10)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v1.10.0...v2.0.0)\n\n**Implemented enhancements:**\n\n- Consul support [\\#173](https://github.com/hairyhenderson/gomplate/issues/173)\n- Extracting data namespace, renaming typeconv to conv namespace [\\#194](https://github.com/hairyhenderson/gomplate/pull/194) ([hairyhenderson](https://github.com/hairyhenderson))\n- Vault AWS EC2 auth [\\#190](https://github.com/hairyhenderson/gomplate/pull/190) ([stuart-c](https://github.com/stuart-c))\n- Consul vault auth [\\#187](https://github.com/hairyhenderson/gomplate/pull/187) ([stuart-c](https://github.com/stuart-c))\n- Vault write support [\\#183](https://github.com/hairyhenderson/gomplate/pull/183) ([stuart-c](https://github.com/stuart-c))\n- Add Consul & BoltDB datasource support [\\#178](https://github.com/hairyhenderson/gomplate/pull/178) ([stuart-c](https://github.com/stuart-c))\n\n**Closed issues:**\n\n- gomplate --version: 0.0.0 [\\#188](https://github.com/hairyhenderson/gomplate/issues/188)\n\n**Merged pull requests:**\n\n- Adding a couple extra integration tests for vault [\\#195](https://github.com/hairyhenderson/gomplate/pull/195) ([hairyhenderson](https://github.com/hairyhenderson))\n- Moving mustParse functions into new typeconv package [\\#193](https://github.com/hairyhenderson/gomplate/pull/193) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding unit tests for libkv datasources [\\#189](https://github.com/hairyhenderson/gomplate/pull/189) ([hairyhenderson](https://github.com/hairyhenderson))\n- Fixing up typos and formatting in docs [\\#186](https://github.com/hairyhenderson/gomplate/pull/186) ([hairyhenderson](https://github.com/hairyhenderson))\n- Migrate from glide to dep [\\#185](https://github.com/hairyhenderson/gomplate/pull/185) ([hairyhenderson](https://github.com/hairyhenderson))\n- Updating dependencies [\\#184](https://github.com/hairyhenderson/gomplate/pull/184) ([hairyhenderson](https://github.com/hairyhenderson))\n- Switch to using official Go Vault client [\\#177](https://github.com/hairyhenderson/gomplate/pull/177) ([stuart-c](https://github.com/stuart-c))\n\n## [v1.10.0](https://github.com/hairyhenderson/gomplate/tree/v1.10.0) (2017-08-01)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v1.9.1...v1.10.0)\n\n**Implemented enhancements:**\n\n- Adding support for \\_FILE fallback to env.Getenv function [\\#181](https://github.com/hairyhenderson/gomplate/pull/181) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Closed issues:**\n\n- 17.7M on Alpine Images [\\#171](https://github.com/hairyhenderson/gomplate/issues/171)\n\n**Merged pull requests:**\n\n- Moving getenv to separate package [\\#179](https://github.com/hairyhenderson/gomplate/pull/179) ([hairyhenderson](https://github.com/hairyhenderson))\n- Remove VFS argument from ReadSource which isn't used [\\#175](https://github.com/hairyhenderson/gomplate/pull/175) ([stuart-c](https://github.com/stuart-c))\n- Disabling cgo so the binary is truly static [\\#174](https://github.com/hairyhenderson/gomplate/pull/174) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v1.9.1](https://github.com/hairyhenderson/gomplate/tree/v1.9.1) (2017-06-22)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v1.9.0...v1.9.1)\n\n**Implemented enhancements:**\n\n- Enhance the indent function [\\#165](https://github.com/hairyhenderson/gomplate/issues/165)\n\n**Fixed bugs:**\n\n- gomplate v1.9.0  - fails for aws.EC2 calls that take 1s or plus \\(Windows\\) [\\#168](https://github.com/hairyhenderson/gomplate/issues/168)\n- Adding AWS\\_TIMEOUT environment variable [\\#169](https://github.com/hairyhenderson/gomplate/pull/169) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Closed issues:**\n\n- Gomplate function to output a gomplate function [\\#167](https://github.com/hairyhenderson/gomplate/issues/167)\n\n## [v1.9.0](https://github.com/hairyhenderson/gomplate/tree/v1.9.0) (2017-06-14)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v1.8.0...v1.9.0)\n\n**Implemented enhancements:**\n\n- DNS resolver function... [\\#157](https://github.com/hairyhenderson/gomplate/issues/157)\n- Regular expression support [\\#152](https://github.com/hairyhenderson/gomplate/issues/152)\n- Enhancing indent function [\\#166](https://github.com/hairyhenderson/gomplate/pull/166) ([hairyhenderson](https://github.com/hairyhenderson))\n- Creating a strings namespace [\\#164](https://github.com/hairyhenderson/gomplate/pull/164) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding regexp support [\\#161](https://github.com/hairyhenderson/gomplate/pull/161) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding net.Lookup\\* functions [\\#158](https://github.com/hairyhenderson/gomplate/pull/158) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Closed issues:**\n\n- JSON formatting [\\#163](https://github.com/hairyhenderson/gomplate/issues/163)\n- panic: template: template:19:25: executing \"template\" at \\<.Env\\>: map has no entry for key \"Env\" [\\#160](https://github.com/hairyhenderson/gomplate/issues/160)\n- Suggestion: add directory support for loading environment [\\#159](https://github.com/hairyhenderson/gomplate/issues/159)\n\n## [v1.8.0](https://github.com/hairyhenderson/gomplate/tree/v1.8.0) (2017-06-09)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v1.7.0...v1.8.0)\n\n**Implemented enhancements:**\n\n- base64 encode/decode support [\\#155](https://github.com/hairyhenderson/gomplate/issues/155)\n- Ability to include raw text from non-structured files [\\#142](https://github.com/hairyhenderson/gomplate/issues/142)\n- Support CSV datasources  [\\#44](https://github.com/hairyhenderson/gomplate/issues/44)\n- Adding new base64.Encode/base64.Decode functions [\\#156](https://github.com/hairyhenderson/gomplate/pull/156) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding TOML support [\\#154](https://github.com/hairyhenderson/gomplate/pull/154) ([hairyhenderson](https://github.com/hairyhenderson))\n- Add include function [\\#153](https://github.com/hairyhenderson/gomplate/pull/153) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding CSV datasource support [\\#150](https://github.com/hairyhenderson/gomplate/pull/150) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Closed issues:**\n\n- Improve the docs and move to a separate place \\(not the README\\) [\\#146](https://github.com/hairyhenderson/gomplate/issues/146)\n\n**Merged pull requests:**\n\n- Moving docs out of README [\\#149](https://github.com/hairyhenderson/gomplate/pull/149) ([hairyhenderson](https://github.com/hairyhenderson))\n- Namespacing the aws funcs [\\#148](https://github.com/hairyhenderson/gomplate/pull/148) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v1.7.0](https://github.com/hairyhenderson/gomplate/tree/v1.7.0) (2017-05-24)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v1.6.0...v1.7.0)\n\n**Implemented enhancements:**\n\n- Add \"replace\" function and documentation [\\#140](https://github.com/hairyhenderson/gomplate/pull/140) ([jen20](https://github.com/jen20))\n- Adding new indent function [\\#139](https://github.com/hairyhenderson/gomplate/pull/139) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding new toJSONPretty function [\\#137](https://github.com/hairyhenderson/gomplate/pull/137) ([hairyhenderson](https://github.com/hairyhenderson))\n- Add urlParse function \\(i.e. url.Parse\\) [\\#132](https://github.com/hairyhenderson/gomplate/pull/132) ([hairyhenderson](https://github.com/hairyhenderson))\n- Add splitN function \\(i.e. strings.SplitN\\) [\\#131](https://github.com/hairyhenderson/gomplate/pull/131) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Fixed bugs:**\n\n- toJSON fails to marshal objects with nested objects [\\#138](https://github.com/hairyhenderson/gomplate/issues/138)\n- function \"has\" will panic when used on nested map [\\#134](https://github.com/hairyhenderson/gomplate/issues/134)\n- Using  github.com/ugorji/go/codec for JSON encoding instead of encoding/json [\\#144](https://github.com/hairyhenderson/gomplate/pull/144) ([hairyhenderson](https://github.com/hairyhenderson))\n- Fixing bug with 'has' and 'datasource' around referencing sub-maps in nested maps [\\#135](https://github.com/hairyhenderson/gomplate/pull/135) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Closed issues:**\n\n- Ability to join list of items into string with separator [\\#143](https://github.com/hairyhenderson/gomplate/issues/143)\n\n**Merged pull requests:**\n\n- Add `solaris-amd64` build target [\\#141](https://github.com/hairyhenderson/gomplate/pull/141) ([jen20](https://github.com/jen20))\n- Making the built Docker image smaller [\\#136](https://github.com/hairyhenderson/gomplate/pull/136) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v1.6.0](https://github.com/hairyhenderson/gomplate/tree/v1.6.0) (2017-05-01)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v1.5.1...v1.6.0)\n\n**Implemented enhancements:**\n\n- Support for bulk operations [\\#117](https://github.com/hairyhenderson/gomplate/issues/117)\n- Authentication for HTTP/HTTPS datasources [\\#113](https://github.com/hairyhenderson/gomplate/issues/113)\n- Make all secrets settable via files [\\#106](https://github.com/hairyhenderson/gomplate/issues/106)\n- Adding ds alias for datasource function [\\#129](https://github.com/hairyhenderson/gomplate/pull/129) ([hairyhenderson](https://github.com/hairyhenderson))\n- Add --input-dir and --output-dir as options [\\#119](https://github.com/hairyhenderson/gomplate/pull/119) ([rhuss](https://github.com/rhuss))\n- Adding more ways to specify input/output [\\#114](https://github.com/hairyhenderson/gomplate/pull/114) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Fixed bugs:**\n\n- Open datasource file in read-only mode [\\#126](https://github.com/hairyhenderson/gomplate/pull/126) ([rhuss](https://github.com/rhuss))\n\n**Merged pull requests:**\n\n- Migrating to spf13/cobra for commandline processing [\\#128](https://github.com/hairyhenderson/gomplate/pull/128) ([hairyhenderson](https://github.com/hairyhenderson))\n- Updating vendored deps [\\#127](https://github.com/hairyhenderson/gomplate/pull/127) ([hairyhenderson](https://github.com/hairyhenderson))\n- Removing integration test dependency on internet access [\\#121](https://github.com/hairyhenderson/gomplate/pull/121) ([hairyhenderson](https://github.com/hairyhenderson))\n- Updating vendored deps \\(aws-sdk-go and go-yaml\\) [\\#120](https://github.com/hairyhenderson/gomplate/pull/120) ([hairyhenderson](https://github.com/hairyhenderson))\n- Fix readme ToC link to `--datasource-d` [\\#118](https://github.com/hairyhenderson/gomplate/pull/118) ([jamiemjennings](https://github.com/jamiemjennings))\n- Support arbitrary headers with HTTP datasources [\\#115](https://github.com/hairyhenderson/gomplate/pull/115) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding some very basic integration tests [\\#112](https://github.com/hairyhenderson/gomplate/pull/112) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v1.5.1](https://github.com/hairyhenderson/gomplate/tree/v1.5.1) (2017-03-23)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v1.5.0...v1.5.1)\n\n**Implemented enhancements:**\n\n- Support Vault authentication on HTTPS datasource [\\#54](https://github.com/hairyhenderson/gomplate/issues/54)\n- Supporting \\*\\_FILE env vars for vault datasource credentials [\\#107](https://github.com/hairyhenderson/gomplate/pull/107) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding support for AppRole vault auth backend [\\#105](https://github.com/hairyhenderson/gomplate/pull/105) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding support for userpass vault auth backend [\\#104](https://github.com/hairyhenderson/gomplate/pull/104) ([hairyhenderson](https://github.com/hairyhenderson))\n- Allow custom auth backend mount point for app-id backend [\\#103](https://github.com/hairyhenderson/gomplate/pull/103) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Fixed bugs:**\n\n- Awful performance rendering templates with `ec2tag` function in non-aws environments [\\#110](https://github.com/hairyhenderson/gomplate/issues/110)\n- Performance fixes for running ec2tag in non-aws environments [\\#111](https://github.com/hairyhenderson/gomplate/pull/111) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Merged pull requests:**\n\n- Clean up vault auth strategies code [\\#130](https://github.com/hairyhenderson/gomplate/pull/130) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v1.5.0](https://github.com/hairyhenderson/gomplate/tree/v1.5.0) (2017-03-07)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v1.4.0...v1.5.0)\n\n**Implemented enhancements:**\n\n- Allow setting custom delimiters [\\#100](https://github.com/hairyhenderson/gomplate/issues/100)\n- Allow overriding the template delimiters [\\#102](https://github.com/hairyhenderson/gomplate/pull/102) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding 'has' func to determine if an object has a named key [\\#101](https://github.com/hairyhenderson/gomplate/pull/101) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding toJSON and toYAML functions [\\#99](https://github.com/hairyhenderson/gomplate/pull/99) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v1.4.0](https://github.com/hairyhenderson/gomplate/tree/v1.4.0) (2017-03-03)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v1.3.0...v1.4.0)\n\n**Implemented enhancements:**\n\n- Adding more functions from the strings package [\\#96](https://github.com/hairyhenderson/gomplate/pull/96) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Merged pull requests:**\n\n- shutting up golint [\\#97](https://github.com/hairyhenderson/gomplate/pull/97) ([hairyhenderson](https://github.com/hairyhenderson))\n- Putting vendor/ in repo [\\#95](https://github.com/hairyhenderson/gomplate/pull/95) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v1.3.0](https://github.com/hairyhenderson/gomplate/tree/v1.3.0) (2017-02-03)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v1.2.4...v1.3.0)\n\n**Implemented enhancements:**\n\n- Adding datasourceExists function [\\#94](https://github.com/hairyhenderson/gomplate/pull/94) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Closed issues:**\n\n- Crash when datasource is not specified [\\#93](https://github.com/hairyhenderson/gomplate/issues/93)\n\n## [v1.2.4](https://github.com/hairyhenderson/gomplate/tree/v1.2.4) (2017-01-13)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v1.2.3...v1.2.4)\n\n**Merged pull requests:**\n\n- Building a slim macOS binary too [\\#92](https://github.com/hairyhenderson/gomplate/pull/92) ([hairyhenderson](https://github.com/hairyhenderson))\n- Vendoring dependencies with glide [\\#91](https://github.com/hairyhenderson/gomplate/pull/91) ([hairyhenderson](https://github.com/hairyhenderson))\n- Updating README [\\#88](https://github.com/hairyhenderson/gomplate/pull/88) ([rdbaron](https://github.com/rdbaron))\n\n## [v1.2.3](https://github.com/hairyhenderson/gomplate/tree/v1.2.3) (2016-11-24)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v1.2.2...v1.2.3)\n\n**Fixed bugs:**\n\n- gomplate with vault datasource panics when environment variables are unset [\\#83](https://github.com/hairyhenderson/gomplate/issues/83)\n- Fixing bug where vault data is incorrectly cached [\\#87](https://github.com/hairyhenderson/gomplate/pull/87) ([hairyhenderson](https://github.com/hairyhenderson))\n- No vault addr dont panic [\\#85](https://github.com/hairyhenderson/gomplate/pull/85) ([drmdrew](https://github.com/drmdrew))\n\n**Merged pull requests:**\n\n- Mention CLI and datasources support in description [\\#86](https://github.com/hairyhenderson/gomplate/pull/86) ([drmdrew](https://github.com/drmdrew))\n\n## [v1.2.2](https://github.com/hairyhenderson/gomplate/tree/v1.2.2) (2016-11-20)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v1.2.1...v1.2.2)\n\n**Implemented enhancements:**\n\n- Adding support for GitHub auth strategy for Vault datasources [\\#80](https://github.com/hairyhenderson/gomplate/pull/80) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Fixed bugs:**\n\n- gomplate w/vault error: user: Current not implemented on linux/amd64  [\\#79](https://github.com/hairyhenderson/gomplate/issues/79)\n- Avoiding CGO landmine [\\#81](https://github.com/hairyhenderson/gomplate/pull/81) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v1.2.1](https://github.com/hairyhenderson/gomplate/tree/v1.2.1) (2016-11-19)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v1.2.0...v1.2.1)\n\n**Fixed bugs:**\n\n- Removing vestigial newline addition [\\#77](https://github.com/hairyhenderson/gomplate/pull/77) ([hairyhenderson](https://github.com/hairyhenderson))\n- Handle redirects from vault server versions earlier than v0.6.2 [\\#76](https://github.com/hairyhenderson/gomplate/pull/76) ([drmdrew](https://github.com/drmdrew))\n\n**Closed issues:**\n\n- Handle vault HTTP redirects [\\#75](https://github.com/hairyhenderson/gomplate/issues/75)\n\n## [v1.2.0](https://github.com/hairyhenderson/gomplate/tree/v1.2.0) (2016-11-15)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v1.1.2...v1.2.0)\n\n**Implemented enhancements:**\n\n- Support for Vault datasources \\(app-id & token auth\\) [\\#74](https://github.com/hairyhenderson/gomplate/pull/74) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding Dockerfile [\\#68](https://github.com/hairyhenderson/gomplate/pull/68) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Merged pull requests:**\n\n- Added a read me section about multiple line if/else/end statements. [\\#73](https://github.com/hairyhenderson/gomplate/pull/73) ([EtienneDufresne](https://github.com/EtienneDufresne))\n- Adding instructions for installing via the homebrew tap [\\#72](https://github.com/hairyhenderson/gomplate/pull/72) ([hairyhenderson](https://github.com/hairyhenderson))\n- Updating codegangsta/cli reference to urfave/cli [\\#70](https://github.com/hairyhenderson/gomplate/pull/70) ([hairyhenderson](https://github.com/hairyhenderson))\n- Formatting with gofmt -s [\\#66](https://github.com/hairyhenderson/gomplate/pull/66) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v1.1.2](https://github.com/hairyhenderson/gomplate/tree/v1.1.2) (2016-09-06)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v1.1.1...v1.1.2)\n\n**Fixed bugs:**\n\n- Fixing a panic in Ec2Info.go [\\#62](https://github.com/hairyhenderson/gomplate/pull/62) ([marcboudreau](https://github.com/marcboudreau))\n\n## [v1.1.1](https://github.com/hairyhenderson/gomplate/tree/v1.1.1) (2016-09-04)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v1.1.0...v1.1.1)\n\n**Implemented enhancements:**\n\n- Caching responses from EC2 [\\#61](https://github.com/hairyhenderson/gomplate/pull/61) ([hairyhenderson](https://github.com/hairyhenderson))\n- Short-circuit ec2 function defaults when not in AWS [\\#60](https://github.com/hairyhenderson/gomplate/pull/60) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Fixed bugs:**\n\n- Slow and repeated network calls during ec2 functions [\\#59](https://github.com/hairyhenderson/gomplate/issues/59)\n\n## [v1.1.0](https://github.com/hairyhenderson/gomplate/tree/v1.1.0) (2016-09-02)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v1.0.0...v1.1.0)\n\n**Implemented enhancements:**\n\n- Provide default when region can't be found [\\#55](https://github.com/hairyhenderson/gomplate/issues/55)\n- Adding ability to provide default for ec2region function [\\#58](https://github.com/hairyhenderson/gomplate/pull/58) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Merged pull requests:**\n\n- Fixing broken tests [\\#57](https://github.com/hairyhenderson/gomplate/pull/57) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v1.0.0](https://github.com/hairyhenderson/gomplate/tree/v1.0.0) (2016-07-14)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v0.6.0...v1.0.0)\n\n**Implemented enhancements:**\n\n- Support HTTP/HTTPS datasources [\\#45](https://github.com/hairyhenderson/gomplate/issues/45)\n- Adding support for HTTP/HTTPS datasources [\\#53](https://github.com/hairyhenderson/gomplate/pull/53) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v0.6.0](https://github.com/hairyhenderson/gomplate/tree/v0.6.0) (2016-07-12)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v0.5.1...v0.6.0)\n\n**Implemented enhancements:**\n\n- Support YAML data sources [\\#43](https://github.com/hairyhenderson/gomplate/issues/43)\n- Adding YAML support [\\#52](https://github.com/hairyhenderson/gomplate/pull/52) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v0.5.1](https://github.com/hairyhenderson/gomplate/tree/v0.5.1) (2016-06-21)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v0.5.0...v0.5.1)\n\n**Fixed bugs:**\n\n- Gomplate sometimes stalls for 5s [\\#48](https://github.com/hairyhenderson/gomplate/issues/48)\n- Make things start faster [\\#51](https://github.com/hairyhenderson/gomplate/pull/51) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v0.5.0](https://github.com/hairyhenderson/gomplate/tree/v0.5.0) (2016-05-22)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v0.4.0...v0.5.0)\n\n**Implemented enhancements:**\n\n- It'd be nice to also resolve templates from files [\\#8](https://github.com/hairyhenderson/gomplate/issues/8)\n- Switching argument parsing to codegangsta/cli [\\#42](https://github.com/hairyhenderson/gomplate/pull/42) ([hairyhenderson](https://github.com/hairyhenderson))\n- New datasource function - allows use of JSON files as a data source for the template [\\#9](https://github.com/hairyhenderson/gomplate/pull/9) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Fixed bugs:**\n\n- Fixing broken versions in build-x target [\\#38](https://github.com/hairyhenderson/gomplate/pull/38) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v0.4.0](https://github.com/hairyhenderson/gomplate/tree/v0.4.0) (2016-04-12)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v0.3.0...v0.4.0)\n\n**Implemented enhancements:**\n\n- New functions join, title, toLower, and toUpper [\\#36](https://github.com/hairyhenderson/gomplate/pull/36) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v0.3.0](https://github.com/hairyhenderson/gomplate/tree/v0.3.0) (2016-04-11)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v0.2.2...v0.3.0)\n\n**Implemented enhancements:**\n\n- Adding slice and jsonArray template functions [\\#34](https://github.com/hairyhenderson/gomplate/pull/34) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Closed issues:**\n\n- gomplate -v returns 0.1.0 even for newer releases [\\#33](https://github.com/hairyhenderson/gomplate/issues/33)\n\n**Merged pull requests:**\n\n- Setting the version at build time from the latest tag [\\#35](https://github.com/hairyhenderson/gomplate/pull/35) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v0.2.2](https://github.com/hairyhenderson/gomplate/tree/v0.2.2) (2016-03-28)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v0.2.1...v0.2.2)\n\n**Fixed bugs:**\n\n- Fixing -v flag [\\#32](https://github.com/hairyhenderson/gomplate/pull/32) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v0.2.1](https://github.com/hairyhenderson/gomplate/tree/v0.2.1) (2016-03-28)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v0.2.0...v0.2.1)\n\n**Fixed bugs:**\n\n- AWS-dependent functions should fail gracefully when not running in AWS [\\#26](https://github.com/hairyhenderson/gomplate/issues/26)\n- It's 'ec2region', not 'region' [\\#29](https://github.com/hairyhenderson/gomplate/pull/29) ([hairyhenderson](https://github.com/hairyhenderson))\n- Using defaults on network errors and timeouts [\\#27](https://github.com/hairyhenderson/gomplate/pull/27) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v0.2.0](https://github.com/hairyhenderson/gomplate/tree/v0.2.0) (2016-03-28)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v0.1.1...v0.2.0)\n\n**Implemented enhancements:**\n\n- Would be nifty to be able to resolve EC2 metadata [\\#15](https://github.com/hairyhenderson/gomplate/issues/15)\n- Adding ec2tag and ec2region functions [\\#24](https://github.com/hairyhenderson/gomplate/pull/24) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding new ec2dynamic function [\\#23](https://github.com/hairyhenderson/gomplate/pull/23) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding json filter function [\\#21](https://github.com/hairyhenderson/gomplate/pull/21) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding ec2meta function [\\#20](https://github.com/hairyhenderson/gomplate/pull/20) ([hairyhenderson](https://github.com/hairyhenderson))\n\n**Merged pull requests:**\n\n- 📖 Documenting the ec2meta function [\\#22](https://github.com/hairyhenderson/gomplate/pull/22) ([hairyhenderson](https://github.com/hairyhenderson))\n- 💄 Refactoring to split functions [\\#19](https://github.com/hairyhenderson/gomplate/pull/19) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v0.1.1](https://github.com/hairyhenderson/gomplate/tree/v0.1.1) (2016-03-22)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v0.1.0...v0.1.1)\n\n**Implemented enhancements:**\n\n- Should support default values for environment variables [\\#14](https://github.com/hairyhenderson/gomplate/issues/14)\n\n**Merged pull requests:**\n\n- Updating README with docs for getenv with default [\\#17](https://github.com/hairyhenderson/gomplate/pull/17) ([hairyhenderson](https://github.com/hairyhenderson))\n- Adding support to getenv for a default value [\\#16](https://github.com/hairyhenderson/gomplate/pull/16) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v0.1.0](https://github.com/hairyhenderson/gomplate/tree/v0.1.0) (2016-02-20)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v0.0.2...v0.1.0)\n\n**Merged pull requests:**\n\n- Adding new functions `bool` and `getenv` [\\#10](https://github.com/hairyhenderson/gomplate/pull/10) ([hairyhenderson](https://github.com/hairyhenderson))\n- 📖 Adding details to README [\\#7](https://github.com/hairyhenderson/gomplate/pull/7) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v0.0.2](https://github.com/hairyhenderson/gomplate/tree/v0.0.2) (2016-01-24)\n[Full Changelog](https://github.com/hairyhenderson/gomplate/compare/v0.0.1...v0.0.2)\n\n**Merged pull requests:**\n\n- 💄 slight refactoring & adding some vague unit tests... [\\#5](https://github.com/hairyhenderson/gomplate/pull/5) ([hairyhenderson](https://github.com/hairyhenderson))\n- 💄 slight refactoring & adding some vague unit tests... [\\#4](https://github.com/hairyhenderson/gomplate/pull/4) ([hairyhenderson](https://github.com/hairyhenderson))\n\n## [v0.0.1](https://github.com/hairyhenderson/gomplate/tree/v0.0.1) (2016-01-23)\n\n\n\\* *This Change Log was automatically generated by [github_changelog_generator](https://github.com/skywinder/Github-Changelog-Generator)*\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.7470703125,
          "content": "# Contributing to gomplate\n\nThanks for considering a contribution! All contributions are welcome, including\nbug reports, bug fixes, new features or even just questions.\n\n## Features\n\nFor PRs, please:\n- Consider filing an [issue](https://github.com/hairyhenderson/gomplate/issues/new) first, especially if you're not sure if your idea will be accepted.\n- Commit messages should follow the repo's [conventional commit](https://www.conventionalcommits.org/en/v1.0.0/) style. See [`release-please-config.json`](./release-please-config.json) for valid commit types.\n- [Link to any relevant issues](https://help.github.com/articles/autolinked-references-and-urls/) in the PR\n- Add new tests to cover the new code, and make sure all tests pass (`make lint test integration`)\n- Please try to conform to the existing code style, and see [Style Guide](#style-guide) for more details\n\n## Bugs\n\nSubmit issues to [issue tracker](https://github.com/hairyhenderson/gomplate/issues/).\n\nAny bug fix PRs must also include unit tests and/or integration tests to prevent regression.\n\nIf you think you've found a sensitive security issue, please e-mail me before opening an issue: dhenderson@gmail.com. My PGP key is available on Keybase: https://keybase.io/dhenderson/.\n\n## Versioning, API and Deprecation\n\nI try to follow [Semantic Versioning 2.0.0](https://semver.org/spec/v2.0.0.html) as much as possible, and as such the version numbers attached to gomplate releases have _semantic meaning_. That is, patch-level releases (e.g. when going from 2.3.0 to 2.3.1) will only contain bug fixes and will not otherwise add or remove features, while minor-level releses (e.g. 2.3.0 to 2.4.0) will only contain new features and will not remove or make breaking changes to features, and major-level releases (e.g. 2.3.0 to 3.0.0) will contain breaking changes (either feature removals, renames, or significant behaviour changes).\n\nWhen making a change that'll require either a _minor_ or _major_ version bump upon release, the PR should be labeled with the `api/minor` or `api/major` labels.\n\nNote also that _only_ the \"Public API\" is subject to the semver guarantees. Here's what I consider as \"Public API\":\n1. exported code\n  - this includes the behaviour of that code as documented\n  - excluding function definitions (in the `funcs/` sub-directory)\n  - excluding unit and integration tests\n2. template functions\n  - the namespaced function names and aliases, as used inside templates (e.g. `math.Add`)\n  - the Go functions that implement these functions _may_ change:\n    - the function signature may change in compatible ways (i.e. a parameter type widening from `string` to `interface{}`)\n3. the `gomplate` command and its command-line arguments\n\nAny semver guarantees only apply between released versions of gomplate. I reserve the right to make breaking changes to new features before these features are delivered in a release.\n\nSometimes, a deprecation is necessary. I will mark these deprecations in the documentation as soon as possible, and the deprecations may turn into removals (or renames, behaviour changes, etc...) as early as the next major version. However, features may stay deprecated for many major versions without being removed.\n\n## Style Guide\n\nCode style is enforced by [`golangci-lint`](https://github.com/golangci/golangci-lint) during CI builds.\n\n### Template Function Style\n\nGomplate's code base has grown organically, and so it's full of quirks and inconsistencies. However, there are a few style points that have emerged over the years:\n\n1. Generally, all template functions should take `interface{}` as an input type, and do type conversions where necessary. As an example, see https://github.com/hairyhenderson/gomplate/blob/af961ebe30041acb4e7f94ddd5f7c92372f97111/funcs/math.go#L96..L111\n    - In cases where a function takes a slice as input, use `interface{}` as the input, and convert it to a `[]interface{}` if needed\n2. Where defaults can be inferred, I prefer allowing a relaxed polymorphic style - see https://github.com/hairyhenderson/gomplate/blob/af961ebe30041acb4e7f94ddd5f7c92372f97111/funcs/crypto.go#L118..L133 as an example\n    - tl;dr: I take `...interface{}` as a single input type, and do type conversion and argument inference based on the number of arguments provided\n    - this only works when certain args can be considered \"optional\"\n3. Pipelining (i.e. `{{ \"result of some action\" | some.Function }}`) is powerful and it's good to make sure that functions with multiple arguments specify them in a sane order for pipelining.\n    - When you're unsure about argument order, prefer the order that will make pipelining easier:\n      ```\n      {{ \"one,two,three\" | strings.Split \",\" }} <- this is far more natural\n      ```\n    - Don't depend too much on existing functions as a guide - there's already a lot of inconsistency there!\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.9619140625,
          "content": "# syntax=docker/dockerfile:1.8-labs\nFROM --platform=linux/amd64 golang:1.23-alpine AS build\n\nARG TARGETOS\nARG TARGETARCH\nARG TARGETVARIANT\nENV GOOS=$TARGETOS GOARCH=$TARGETARCH\n\nRUN apk add --no-cache make git\n\nWORKDIR /go/src/github.com/hairyhenderson/gomplate\nCOPY go.mod /go/src/github.com/hairyhenderson/gomplate\nCOPY go.sum /go/src/github.com/hairyhenderson/gomplate\n\nRUN --mount=type=cache,id=go-build-${TARGETOS}-${TARGETARCH}${TARGETVARIANT},target=/root/.cache/go-build \\\n\t--mount=type=cache,id=go-pkg-${TARGETOS}-${TARGETARCH}${TARGETVARIANT},target=/go/pkg \\\n\t\tgo mod download -x\n\nCOPY . /go/src/github.com/hairyhenderson/gomplate\n\nRUN --mount=type=cache,id=go-build-${TARGETOS}-${TARGETARCH}${TARGETVARIANT},target=/root/.cache/go-build \\\n\t--mount=type=cache,id=go-pkg-${TARGETOS}-${TARGETARCH}${TARGETVARIANT},target=/go/pkg \\\n\t\tmake build\nRUN mv bin/gomplate* /bin/\n\nFROM scratch AS gomplate-linux\n\nARG VCS_REF\nARG TARGETOS\nARG TARGETARCH\nARG TARGETVARIANT\n\nLABEL org.opencontainers.image.revision=$VCS_REF \\\n\torg.opencontainers.image.source=\"https://github.com/hairyhenderson/gomplate\"\n\nCOPY --from=build /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt\nCOPY --from=build /bin/gomplate_${TARGETOS}-${TARGETARCH}${TARGETVARIANT} /gomplate\n\nENTRYPOINT [ \"/gomplate\" ]\n\nFROM alpine:3.21 AS gomplate-alpine\n\nARG VCS_REF\nARG TARGETOS\nARG TARGETARCH\nARG TARGETVARIANT\n\nLABEL org.opencontainers.image.revision=$VCS_REF \\\n\torg.opencontainers.image.source=\"https://github.com/hairyhenderson/gomplate\"\n\nCOPY --from=build /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt\nCOPY --from=build /bin/gomplate_${TARGETOS}-${TARGETARCH}${TARGETVARIANT} /bin/gomplate\n\nENTRYPOINT [ \"/bin/gomplate\" ]\n\nFROM --platform=windows/amd64 mcr.microsoft.com/windows/nanoserver:ltsc2022 AS gomplate-windows\nARG TARGETOS\nARG TARGETARCH\nARG TARGETVARIANT\nCOPY --from=build /bin/gomplate_${TARGETOS}-${TARGETARCH}${TARGETVARIANT}.exe /gomplate.exe\n\nFROM gomplate-$TARGETOS AS gomplate\n"
        },
        {
          "name": "Dockerfile.integration",
          "type": "blob",
          "size": 0.4052734375,
          "content": "FROM vault:1.13.3 AS vault\n\nFROM consul:1.15.4 AS consul\n\nFROM golang:1.23-alpine\n\nCOPY --from=vault /bin/vault /bin/vault\nCOPY --from=consul /bin/consul /bin/consul\n\nRUN apk add --no-cache make tzdata\n\nWORKDIR /go/src/github.com/hairyhenderson/gomplate/\nCOPY internal/tests/integration ./internal/tests/integration\nCOPY Makefile ./Makefile\nCOPY bin/gomplate_linux-amd64 ./bin/gomplate\n\nCMD [\"make\", \"integration\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.068359375,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016-2023 Dave Henderson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the “Software”), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 8.822265625,
          "content": ".DEFAULT_GOAL = build\nGO := go\nextension = $(patsubst windows,.exe,$(filter windows,$(1)))\nPKG_NAME := gomplate\nDOCKER_REPO ?= hairyhenderson/$(PKG_NAME)\nPREFIX := .\nDOCKER_LINUX_PLATFORMS ?= linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7,linux/ppc64le,linux/s390x\nDOCKER_PLATFORMS ?= $(DOCKER_LINUX_PLATFORMS),windows/amd64\n# we just load by default, as a \"dry run\"\nBUILDX_ACTION ?= --load\nTAG_LATEST ?= latest\nTAG_ALPINE ?= alpine\n\nifeq (\"$(CI)\",\"true\")\nLINT_PROCS ?= 1\nelse\nLINT_PROCS ?= $(shell nproc)\nendif\n\nCOMMIT ?= `git rev-parse --short HEAD 2>/dev/null`\nVERSION ?= $(shell $(GO) run ./version/gen/vgen.go)\n\nVERSION_PATH ?= `$(GO) list ./version`\nCOMMIT_FLAG ?= -X $(VERSION_PATH).GitCommit=$(COMMIT)\nVERSION_FLAG ?= -X $(VERSION_PATH).Version=$(VERSION)\nGO_LDFLAGS ?= $(COMMIT_FLAG) $(VERSION_FLAG)\n\nGOOS ?= $(shell $(GO) version | sed 's/^.*\\ \\([a-z0-9]*\\)\\/\\([a-z0-9]*\\)/\\1/')\nGOARCH ?= $(shell $(GO) version | sed 's/^.*\\ \\([a-z0-9]*\\)\\/\\([a-z0-9]*\\)/\\2/')\n\n# allow overriding CGO_ENABLED for scenarios where gomplate must be compiled with CGO enabled, such as when using boringcrypto.\nCGO_ENABLED ?= 0\n\nifeq (\"$(TARGETVARIANT)\",\"\")\nifneq (\"$(GOARM)\",\"\")\nTARGETVARIANT := v$(GOARM)\nendif\nelse\nifeq (\"$(GOARM)\",\"\")\nGOARM ?= $(subst v,,$(TARGETVARIANT))\nendif\nendif\n\n# platforms := freebsd-amd64 linux-amd64 linux-386 linux-armv5 linux-armv6 linux-armv7 linux-arm64 darwin-amd64 solaris-amd64 windows-amd64.exe windows-386.exe\nplatforms := freebsd-amd64 linux-amd64 linux-386 linux-armv6 linux-armv7 linux-arm64 linux-ppc64le linux-s390x darwin-amd64 darwin-arm64 solaris-amd64 windows-amd64.exe windows-386.exe\n\nclean:\n\trm -Rf $(PREFIX)/bin/*\n\trm -f $(PREFIX)/*.[ci]id\n\nbuild-x: $(patsubst %,$(PREFIX)/bin/$(PKG_NAME)_%,$(platforms))\n\n$(PREFIX)/bin/%.zip: $(PREFIX)/bin/%\n\t@zip -j $@ $^\n\n$(PREFIX)/bin/$(PKG_NAME)_windows-%.zip: $(PREFIX)/bin/$(PKG_NAME)_windows-%.exe\n\t@zip -j $@ $^\n\n$(PREFIX)/bin/$(PKG_NAME)_%_checksum_sha256.txt: $(PREFIX)/bin/$(PKG_NAME)_%\n\t@sha256sum $< > $@\n\n$(PREFIX)/bin/$(PKG_NAME)_%_checksum_sha512.txt: $(PREFIX)/bin/$(PKG_NAME)_%\n\t@sha512sum $< > $@\n\n$(PREFIX)/bin/checksums.txt: $(PREFIX)/bin/checksums_sha256.txt\n\t@cp $< $@\n\n$(PREFIX)/bin/checksums_sha256.txt: \\\n\t\t$(patsubst %,$(PREFIX)/bin/$(PKG_NAME)_%_checksum_sha256.txt,$(platforms))\n\t@cat $^ > $@\n\n$(PREFIX)/bin/checksums_sha512.txt: \\\n\t\t$(patsubst %,$(PREFIX)/bin/$(PKG_NAME)_%_checksum_sha512.txt,$(platforms))\n\t@cat $^ > $@\n\n$(PREFIX)/%.signed: $(PREFIX)/%\n\t@keybase sign < $< > $@\n\n%.iid: Dockerfile\n\t@docker build \\\n\t\t--build-arg VCS_REF=$(COMMIT) \\\n\t\t--target $(subst .iid,,$@) \\\n\t\t--iidfile $@ \\\n\t\t.\n\ndocker-multi: Dockerfile\n\tdocker buildx build \\\n\t\t--build-arg VCS_REF=$(COMMIT) \\\n\t\t--platform $(DOCKER_PLATFORMS) \\\n\t\t--tag $(DOCKER_REPO):$(TAG_LATEST) \\\n\t\t--target gomplate \\\n\t\t$(BUILDX_ACTION) .\n\tdocker buildx build \\\n\t\t--build-arg VCS_REF=$(COMMIT) \\\n\t\t--platform $(DOCKER_LINUX_PLATFORMS) \\\n\t\t--tag $(DOCKER_REPO):$(TAG_ALPINE) \\\n\t\t--target gomplate-alpine \\\n\t\t$(BUILDX_ACTION) .\n\n%.cid: %.iid\n\t@docker create $(shell cat $<) > $@\n\nbuild-release: artifacts.cid\n\t@docker cp $(shell cat $<):/bin/. bin/\n\ndocker-images: gomplate.iid\n\nGO_FILES := $(shell find . -type f -name \"*.go\")\n\n$(PREFIX)/bin/$(PKG_NAME)_%v5$(call extension,$(GOOS)): $(GO_FILES)\n\tGOOS=$(shell echo $* | cut -f1 -d-) GOARCH=$(shell echo $* | cut -f2 -d- ) GOARM=5 CGO_ENABLED=$(CGO_ENABLED) \\\n\t\t$(GO) build \\\n\t\t\t-ldflags \"-w -s $(GO_LDFLAGS)\" \\\n\t\t\t-o $@ \\\n\t\t\t./cmd/$(PKG_NAME)\n\n$(PREFIX)/bin/$(PKG_NAME)_%v6$(call extension,$(GOOS)): $(GO_FILES)\n\tGOOS=$(shell echo $* | cut -f1 -d-) GOARCH=$(shell echo $* | cut -f2 -d- ) GOARM=6 CGO_ENABLED=$(CGO_ENABLED) \\\n\t\t$(GO) build \\\n\t\t\t-ldflags \"-w -s $(GO_LDFLAGS)\" \\\n\t\t\t-o $@ \\\n\t\t\t./cmd/$(PKG_NAME)\n\n$(PREFIX)/bin/$(PKG_NAME)_%v7$(call extension,$(GOOS)): $(GO_FILES)\n\tGOOS=$(shell echo $* | cut -f1 -d-) GOARCH=$(shell echo $* | cut -f2 -d- ) GOARM=7 CGO_ENABLED=$(CGO_ENABLED) \\\n\t\t$(GO) build \\\n\t\t\t-ldflags \"-w -s $(GO_LDFLAGS)\" \\\n\t\t\t-o $@ \\\n\t\t\t./cmd/$(PKG_NAME)\n\n$(PREFIX)/bin/$(PKG_NAME)_windows-%.exe: $(GO_FILES)\n\tGOOS=windows GOARCH=$* GOARM= CGO_ENABLED=$(CGO_ENABLED) \\\n\t\t$(GO) build \\\n\t\t\t-ldflags \"-w -s $(GO_LDFLAGS)\" \\\n\t\t\t-o $@ \\\n\t\t\t./cmd/$(PKG_NAME)\n\n$(PREFIX)/bin/$(PKG_NAME)_%$(TARGETVARIANT)$(call extension,$(GOOS)): $(GO_FILES)\n\tGOOS=$(shell echo $* | cut -f1 -d-) GOARCH=$(shell echo $* | cut -f2 -d- ) GOARM=$(GOARM) CGO_ENABLED=$(CGO_ENABLED) \\\n\t\t$(GO) build \\\n\t\t\t-ldflags \"-w -s $(GO_LDFLAGS)\" \\\n\t\t\t-o $@ \\\n\t\t\t./cmd/$(PKG_NAME)\n\n$(PREFIX)/bin/$(PKG_NAME)$(call extension,$(GOOS)): $(PREFIX)/bin/$(PKG_NAME)_$(GOOS)-$(GOARCH)$(TARGETVARIANT)$(call extension,$(GOOS))\n\tcp $< $@\n\nbuild: $(PREFIX)/bin/$(PKG_NAME)_$(GOOS)-$(GOARCH)$(TARGETVARIANT)$(call extension,$(GOOS)) $(PREFIX)/bin/$(PKG_NAME)$(call extension,$(GOOS))\n\n# test with race detector on supported platforms\n# windows/amd64 is supported in theory, but in practice it requires a C compiler\nrace_platforms := 'linux/amd64' 'darwin/amd64' 'darwin/arm64'\nifeq (,$(findstring '$(GOOS)/$(GOARCH)',$(race_platforms)))\nexport CGO_ENABLED=0\ntest:\n\t$(GO) test -coverprofile=c.out ./...\nelse\ntest:\n\t$(GO) test -race -coverprofile=c.out ./...\nendif\n\nbench.txt: go.mod go.sum $(GO_FILES)\n\t$(GO) test -benchmem -run=xxx -bench . ./... | tee $@\n\n.SECONDEXPANSION:\ntestbin/%.test.exe: $$(shell $$(GO) list -f '{{.Dir}}' $$(subst testbin/,,$$(subst .test.exe,,$$@)))\n\t@GOOS=windows GOARCH=amd64 $(GO) test -c -o $@ $<\n\n.SECONDEXPANSION:\ntestbin/%.test: $$(shell $$(GO) list -f '{{.Dir}}' $$(subst testbin/,,$$(subst .test,,$$@)))\n\t@$(GO) test -c -o $@ $<\n\n# this is a special target for testing a package on Windows from a non-Windows\n# host. It builds the Windows test binary, then SCPs it to the Windows host, and\n# runs the tests there. This depends on the GO_REMOTE_WINDOWS environment\n# variable being set as 'username@host'. The Windows host must have Git Bash\n# installed, or maybe MSYS2, so that a number of standard Unix tools are\n# available. Git must also be configured with a username and email address. See\n# the GitHub workflow config in .github/workflows/build.yml for hints.\n# A recent PowerShell is also required, such as version 7.3 or later.\n#\n# An F: drive is expected to be available, with a tmp directory. This is used\n# to make sure gomplate can deal with files on a different volume.\n.SECONDEXPANSION:\ntestbin/%.test.exe.remote: $$(shell $$(GO) list -f '{{.Dir}}' $$(subst testbin/,,$$(subst .test.exe.remote,,$$@)))\n\t@echo $<\n\t@GOOS=windows GOARCH=amd64 $(GO) test -tags timetzdata -c -o $(PREFIX)/testbin/remote-test.exe $<\n\t@scp -q $(PREFIX)/testbin/remote-test.exe $(GO_REMOTE_WINDOWS):/$(shell ssh $(GO_REMOTE_WINDOWS) 'echo %TEMP%' | cut -f2 -d= | sed -e 's#\\\\#/#g')/\n\t@ssh -o 'SetEnv TMP=F:\\tmp' $(GO_REMOTE_WINDOWS) '%TEMP%\\remote-test.exe'\n\n# test-remote-windows runs the above target for all packages that have tests\n.SECONDEXPANSION:\ntest-remote-windows: $$(shell $$(GO) list -f '{{ if not (eq \"\" (join .TestGoFiles \"\")) }}testbin/{{.ImportPath}}.test.exe.remote{{end}}' ./...)\n\nifeq ($(OS),Windows_NT)\nintegration: $(PREFIX)/bin/$(PKG_NAME)$(call extension,$(GOOS))\n\t$(GO) test -v \\\n\t\t-ldflags \"-X `$(GO) list ./internal/tests/integration`.GomplateBinPath=$(shell cygpath -ma .)/$<\" \\\n\t\t./internal/tests/integration\nelse\nintegration: $(PREFIX)/bin/$(PKG_NAME)\n\t$(GO) test -v \\\n\t\t-ldflags \"-X `$(GO) list ./internal/tests/integration`.GomplateBinPath=$(shell pwd)/$<\" \\\n\t\t./internal/tests/integration\nendif\n\nintegration.iid: Dockerfile.integration $(PREFIX)/bin/$(PKG_NAME)_linux-amd64$(call extension,$(GOOS))\n\tdocker build -f $< --iidfile $@ .\n\ntest-integration-docker: integration.iid\n\tdocker run -it --rm $(shell cat $<)\n\ngen-changelog:\n\tdocker run -it -v $(shell pwd):/app --workdir /app -e CHANGELOG_GITHUB_TOKEN hairyhenderson/github_changelog_generator \\\n\t\tgithub_changelog_generator --no-filter-by-milestone --exclude-labels duplicate,question,invalid,wontfix,admin\n\n# uses hugo modules now\n# docs/themes/hugo-theme-relearn:\n# \tgit clone https://github.com/McShelby/hugo-theme-relearn.git $@\n\ngen-docs:\n\tcd docs/; hugo\n\ndocs/content/functions/%.md: docs-src/content/functions/%.yml docs-src/content/functions/func_doc.md.tmpl\n\tgomplate -d data=$< -f docs-src/content/functions/func_doc.md.tmpl -o $@\n\n# run the above target for all files found in docs-src/content/functions/*.yml\ngen-func-docs: $(shell find docs-src/content/functions -name \"*.yml\" | sed -e 's#docs-src#docs#' -e 's#\\.yml#\\.md#')\n\n# this target doesn't usually get used - it's mostly here as a reminder to myself\n# hint: make sure CLOUDCONVERT_API_KEY is set ;)\ngomplate.png: gomplate.svg\n\tcloudconvert -f png -c density=288 $^\n\nlint:\n\t@golangci-lint run --verbose --max-same-issues=0 --max-issues-per-linter=0\n\nci-lint:\n\t@golangci-lint run --verbose --max-same-issues=0 --max-issues-per-linter=0 --out-format=github-actions\n\n.PHONY: gen-changelog clean test build-x build-release build test-integration-docker gen-docs lint clean-images clean-containers docker-images integration gen-func-docs\n.DELETE_ON_ERROR:\n.SECONDARY:\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.4716796875,
          "content": "<img src=\"docs/static/images/gomplate.png\" width=\"512px\" alt=\"gomplate logo\"/>\n\n_Read the docs at [docs.gomplate.ca][docs-url], chat with developers and community in the [#gomplate channel][] on [Gophers Slack][]_\n\n[![Build][gh-actions-image]][gh-actions-url]\n[![Go Report Card][reportcard-image]][reportcard-url]\n[![Codebeat Status][codebeat-image]][codebeat-url]\n[![Coverage][gocover-image]][gocover-url]\n[![Total Downloads][gh-downloads-image]][gh-downloads-url]\n[![CII Best Practices][cii-bp-image]][cii-bp-url]\n\n[![DockerHub Pulls][dockerhub-pulls-image]][dockerhub-url]\n\n[![Chocolatey](https://img.shields.io/chocolatey/v/gomplate.svg)](https://chocolatey.org/packages/gomplate)\n[![Chocolatey](https://img.shields.io/chocolatey/dt/gomplate.svg)](https://chocolatey.org/packages/gomplate)\n\n[![Install Docs][install-docs-image]][install-docs-url]\n[![Slack][slack-image]][slack-url]\n[![Discussions][discussions-image]][discussions-url]\n\n`gomplate` is a template renderer which supports a growing list of datasources,\nsuch as: JSON (_including EJSON - encrypted JSON_), YAML, AWS EC2 metadata,\n[Hashicorp Consul](https://www.consul.io/) and [Hashicorp Vault](https://www.vaultproject.io/) secrets.\n\nCome chat with developers and community in the [#gomplate channel][] on [Gophers Slack][] and on [GitHub Discussions][discussions-url]!\n\nHere are some hands-on examples of how `gomplate` works:\n\n```console\n$ # at its most basic, gomplate can be used with environment variables...\n$ echo 'Hello, {{ .Env.USER }}' | gomplate\nHello, hairyhenderson\n\n$ # but that's kind of boring. gomplate has tons of functions to do useful stuff, too\n$ gomplate -i 'the answer is: {{ mul 6 7 }}'\nthe answer is: 42\n\n$ # and, since gomplate uses Go's templating syntax, you can do fun things like:\n$ gomplate -i '{{ range seq 5 1 }}{{ . }} {{ if eq . 1 }}{{ \"blastoff\" | toUpper }}{{ end }}{{ end }}'\n5 4 3 2 1 BLASTOFF\n\n$ # the real fun comes when you use datasources!\n$ cat ./config.yaml\nfoo:\n  bar:\n    baz: qux\n$ gomplate -d config=./config.yaml -i 'the value we want is: {{ (datasource \"config\").foo.bar.baz }}'\nthe value we want is: qux\n\n$ # datasources are defined by URLs, and gomplate is not limited to just file-based datasources:\n$ gomplate -d ip=https://ipinfo.io -i 'country code: {{ (ds \"ip\").country }}'\ncountry code: CA\n\n$ # standard input can be used as a datasource too:\n$ echo '{\"cities\":[\"London\", \"Johannesburg\", \"Windhoek\"]}' | gomplate -d city=stdin:///in.json -i '{{ range (ds \"city\").cities }}{{.}}, {{end}}'\nLondon, Johannesburg, Windhoek, \n\n$ # and here's something a little more complicated:\n$ export CITIES='city: [London, Johannesburg, Windhoek]'\n$ cat in.tmpl\n{{ range $i, $city := (ds \"cities\").city -}}\n{{ add 1 $i }}: {{ include \"weather\" (print $city \"?0\") }}\n{{ end }}\n$ gomplate -d 'cities=env:///CITIES?type=application/yaml' -d 'weather=https://wttr.in/?0' -H 'weather=User-Agent: curl' -f in.tmpl\n1: Weather report: London\n\n    \\  /       Partly cloudy\n  _ /\"\".-.     4-7 °C\n    \\_(   ).   ↑ 20 km/h\n    /(___(__)  10 km\n               0.0 mm\n\n2: Weather report: Johannesburg\n\n    \\  /       Partly cloudy\n  _ /\"\".-.     15 °C\n    \\_(   ).   ↘ 0 km/h\n    /(___(__)  10 km\n               2.2 mm\n\n3: Weather report: Windhoek\n\n    \\  /       Partly cloudy\n  _ /\"\".-.     20 °C\n    \\_(   ).   ↑ 6 km/h\n    /(___(__)  20 km\n               0.0 mm\n```\n\nRead the documentation at [docs.gomplate.ca][docs-url], and join the discussion\nin [GitHub Discussions][discussions-url]!\n\n_Please report any bugs found in the [issue tracker](https://github.com/hairyhenderson/gomplate/issues/)._\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2016-2023 Dave Henderson\n\n[gh-actions-image]: https://github.com/hairyhenderson/gomplate/workflows/Build/badge.svg?branch=main\n[gh-actions-url]: https://github.com/hairyhenderson/gomplate/actions?workflow=Build&branch=main\n\n[reportcard-image]: https://goreportcard.com/badge/github.com/hairyhenderson/gomplate\n[reportcard-url]: https://goreportcard.com/report/github.com/hairyhenderson/gomplate\n[codebeat-image]: https://codebeat.co/badges/39ed2148-4b86-4d1e-8526-25f60e159ba1\n[codebeat-url]: https://codebeat.co/projects/github-com-hairyhenderson-gomplate\n[gocover-image]: https://gocover.io/_badge/github.com/hairyhenderson/gomplate\n[gocover-url]: https://gocover.io/github.com/hairyhenderson/gomplate\n[gh-downloads-image]: https://img.shields.io/github/downloads/hairyhenderson/gomplate/total.svg\n[gh-downloads-url]: https://github.com/hairyhenderson/gomplate/releases\n\n[cii-bp-image]: https://bestpractices.coreinfrastructure.org/projects/337/badge\n[cii-bp-url]: https://bestpractices.coreinfrastructure.org/projects/337\n\n[dockerhub-url]: https://hub.docker.com/r/hairyhenderson/gomplate\n[dockerhub-pulls-image]: https://img.shields.io/docker/pulls/hairyhenderson/gomplate.svg\n\n[docs-url]: https://docs.gomplate.ca\n[install-docs-image]: https://img.shields.io/badge/install-docs-blue.svg\n[install-docs-url]: https://docs.gomplate.ca/installing\n\n[Gophers Slack]: https://invite.slack.golangbridge.org\n[#gomplate channel]: https://gophers.slack.com/messages/CGTR16RM2/\n\n[slack-image]: https://img.shields.io/badge/slack-gophers/%23gomplate-00ADD8.svg?logo=slack\n[slack-url]: https://gophers.slack.com/messages/CGTR16RM2/\n\n[discussions-image]: https://img.shields.io/badge/discussions-gomplate-blue.svg?logo=github\n[discussions-url]: https://github.com/hairyhenderson/gomplate/discussions\n\n[![Analytics](https://ga-beacon.appspot.com/UA-82637990-1/gomplate/README.md?pixel)](https://github.com/igrigorik/ga-beacon)\n"
        },
        {
          "name": "aws",
          "type": "tree",
          "content": null
        },
        {
          "name": "base64",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "coll",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.go",
          "type": "blob",
          "size": 12.9697265625,
          "content": "package gomplate\n\nimport (\n\t\"fmt\"\n\t\"io\"\n\t\"net/http\"\n\t\"os\"\n\t\"slices\"\n\t\"strconv\"\n\t\"strings\"\n\t\"time\"\n\n\t\"github.com/hairyhenderson/gomplate/v4/internal/config\"\n\t\"github.com/hairyhenderson/gomplate/v4/internal/iohelpers\"\n\t\"github.com/hairyhenderson/yaml\"\n)\n\n// Parse a config file\nfunc Parse(in io.Reader) (*Config, error) {\n\tout := &Config{}\n\tdec := yaml.NewDecoder(in)\n\terr := dec.Decode(out)\n\tif err != nil && err != io.EOF {\n\t\treturn out, fmt.Errorf(\"YAML decoding failed, syntax may be invalid: %w\", err)\n\t}\n\treturn out, nil\n}\n\n// Config models gomplate's configuration file and command-line options. It\n// also contains some fields that can't be set in the config file.\ntype Config struct {\n\t// Stdin - override for stdin:// URLs or the '-' input file. Can't be set in\n\t// the config file.\n\t// Usually this should be left as default - this will be set at runtime.\n\tStdin io.Reader `yaml:\"-\"`\n\n\t// Stdout - override for the '-' output file. Can't be set in the config\n\t// file.\n\t// Usually this should be left as default - this will be set at runtime.\n\tStdout io.Writer `yaml:\"-\"`\n\n\t// Stderr - override for plugins to write to stderr. Can't be set in the\n\t// config file.\n\t// Usually this should be left as default - this will be set at runtime.\n\tStderr io.Writer `yaml:\"-\"`\n\n\t// ExtraHeaders - Extra HTTP headers not attached to pre-defined datsources.\n\t// Potentially used by datasources defined in the template at runtime. Can't\n\t// currently be set in the config file.\n\tExtraHeaders map[string]http.Header `yaml:\"-\"`\n\n\tDataSources map[string]DataSource   `yaml:\"datasources,omitempty\"`\n\tContext     map[string]DataSource   `yaml:\"context,omitempty\"`\n\tTemplates   map[string]DataSource   `yaml:\"templates,omitempty\"`\n\tPlugins     map[string]PluginConfig `yaml:\"plugins,omitempty\"`\n\n\tInput                 string   `yaml:\"in,omitempty\"`\n\tInputDir              string   `yaml:\"inputDir,omitempty\"`\n\tInputFiles            []string `yaml:\"inputFiles,omitempty,flow\"`\n\tExcludeGlob           []string `yaml:\"excludes,omitempty\"`\n\tExcludeProcessingGlob []string `yaml:\"excludeProcessing,omitempty\"`\n\n\tOutputDir   string   `yaml:\"outputDir,omitempty\"`\n\tOutputMap   string   `yaml:\"outputMap,omitempty\"`\n\tOutputFiles []string `yaml:\"outputFiles,omitempty,flow\"`\n\tOutMode     string   `yaml:\"chmod,omitempty\"`\n\n\tLDelim string `yaml:\"leftDelim,omitempty\"`\n\tRDelim string `yaml:\"rightDelim,omitempty\"`\n\n\tMissingKey string `yaml:\"missingKey,omitempty\"`\n\n\tPostExec []string `yaml:\"postExec,omitempty,flow\"`\n\n\tPluginTimeout time.Duration `yaml:\"pluginTimeout,omitempty\"`\n\n\tExecPipe     bool `yaml:\"execPipe,omitempty\"`\n\tExperimental bool `yaml:\"experimental,omitempty\"`\n}\n\n// TODO: remove when we remove the deprecated array format for templates\ntype rawConfig struct {\n\tDataSources map[string]DataSource   `yaml:\"datasources,omitempty\"`\n\tContext     map[string]DataSource   `yaml:\"context,omitempty\"`\n\tTemplates   config.Templates        `yaml:\"templates,omitempty\"`\n\tPlugins     map[string]PluginConfig `yaml:\"plugins,omitempty\"`\n\n\tInput                 string   `yaml:\"in,omitempty\"`\n\tInputDir              string   `yaml:\"inputDir,omitempty\"`\n\tInputFiles            []string `yaml:\"inputFiles,omitempty,flow\"`\n\tExcludeGlob           []string `yaml:\"excludes,omitempty\"`\n\tExcludeProcessingGlob []string `yaml:\"excludeProcessing,omitempty\"`\n\n\tOutputDir   string   `yaml:\"outputDir,omitempty\"`\n\tOutputMap   string   `yaml:\"outputMap,omitempty\"`\n\tOutputFiles []string `yaml:\"outputFiles,omitempty,flow\"`\n\tOutMode     string   `yaml:\"chmod,omitempty\"`\n\n\tLDelim string `yaml:\"leftDelim,omitempty\"`\n\tRDelim string `yaml:\"rightDelim,omitempty\"`\n\n\tMissingKey string `yaml:\"missingKey,omitempty\"`\n\n\tPostExec []string `yaml:\"postExec,omitempty,flow\"`\n\n\tPluginTimeout time.Duration `yaml:\"pluginTimeout,omitempty\"`\n\n\tExecPipe     bool `yaml:\"execPipe,omitempty\"`\n\tExperimental bool `yaml:\"experimental,omitempty\"`\n}\n\n// TODO: remove when we remove the deprecated array format for templates\n//\n// Deprecated: custom unmarshaling will be removed in the next version\nfunc (c *Config) UnmarshalYAML(value *yaml.Node) error {\n\tr := rawConfig{}\n\terr := value.Decode(&r)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t*c = Config{\n\t\tDataSources:           r.DataSources,\n\t\tContext:               r.Context,\n\t\tTemplates:             r.Templates,\n\t\tPlugins:               r.Plugins,\n\t\tInput:                 r.Input,\n\t\tInputDir:              r.InputDir,\n\t\tInputFiles:            r.InputFiles,\n\t\tExcludeGlob:           r.ExcludeGlob,\n\t\tExcludeProcessingGlob: r.ExcludeProcessingGlob,\n\t\tOutputDir:             r.OutputDir,\n\t\tOutputMap:             r.OutputMap,\n\t\tOutputFiles:           r.OutputFiles,\n\t\tOutMode:               r.OutMode,\n\t\tLDelim:                r.LDelim,\n\t\tRDelim:                r.RDelim,\n\t\tMissingKey:            r.MissingKey,\n\t\tPostExec:              r.PostExec,\n\t\tPluginTimeout:         r.PluginTimeout,\n\t\tExecPipe:              r.ExecPipe,\n\t\tExperimental:          r.Experimental,\n\t}\n\n\treturn nil\n}\n\n// TODO: remove when we remove the deprecated array format for templates\n//\n// Deprecated: custom unmarshaling will be removed in the next version\nfunc (c Config) MarshalYAML() (interface{}, error) {\n\taux := rawConfig{\n\t\tDataSources:           c.DataSources,\n\t\tContext:               c.Context,\n\t\tTemplates:             c.Templates,\n\t\tPlugins:               c.Plugins,\n\t\tInput:                 c.Input,\n\t\tInputDir:              c.InputDir,\n\t\tInputFiles:            c.InputFiles,\n\t\tExcludeGlob:           c.ExcludeGlob,\n\t\tExcludeProcessingGlob: c.ExcludeProcessingGlob,\n\t\tOutputDir:             c.OutputDir,\n\t\tOutputMap:             c.OutputMap,\n\t\tOutputFiles:           c.OutputFiles,\n\t\tOutMode:               c.OutMode,\n\t\tLDelim:                c.LDelim,\n\t\tRDelim:                c.RDelim,\n\t\tMissingKey:            c.MissingKey,\n\t\tPostExec:              c.PostExec,\n\t\tPluginTimeout:         c.PluginTimeout,\n\t\tExecPipe:              c.ExecPipe,\n\t\tExperimental:          c.Experimental,\n\t}\n\n\treturn aux, nil\n}\n\n// mergeDataSourceMaps - use d as defaults, and override with values from o\nfunc mergeDataSourceMaps(d, o map[string]DataSource) map[string]DataSource {\n\tfor k, v := range o {\n\t\tc, ok := d[k]\n\t\tif ok {\n\t\t\td[k] = mergeDataSources(c, v)\n\t\t} else {\n\t\t\td[k] = v\n\t\t}\n\t}\n\treturn d\n}\n\n// mergeDataSources - use left as default, and override with values from right\nfunc mergeDataSources(left, right DataSource) DataSource {\n\tif right.URL != nil {\n\t\tleft.URL = right.URL\n\t}\n\tif left.Header == nil {\n\t\tleft.Header = right.Header\n\t} else {\n\t\tfor k, v := range right.Header {\n\t\t\tleft.Header[k] = v\n\t\t}\n\t}\n\treturn left\n}\n\n// DataSource - datasource configuration\ntype DataSource = config.DataSource\n\ntype PluginConfig struct {\n\tCmd     string\n\tArgs    []string      `yaml:\"args,omitempty\"`\n\tTimeout time.Duration `yaml:\"timeout,omitempty\"`\n\tPipe    bool          `yaml:\"pipe,omitempty\"`\n}\n\n// UnmarshalYAML - satisfy the yaml.Umarshaler interface - plugin configs can\n// either be a plain string (to specify only the name), or a map with a name,\n// timeout, and pipe flag.\nfunc (p *PluginConfig) UnmarshalYAML(value *yaml.Node) error {\n\tif value.Kind == yaml.ScalarNode {\n\t\ts := \"\"\n\t\terr := value.Decode(&s)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\t*p = PluginConfig{Cmd: s}\n\t\treturn nil\n\t}\n\n\tif value.Kind != yaml.MappingNode {\n\t\treturn fmt.Errorf(\"plugin config must be a string or map\")\n\t}\n\n\ttype raw struct {\n\t\tCmd     string\n\t\tArgs    []string\n\t\tTimeout time.Duration\n\t\tPipe    bool\n\t}\n\tr := raw{}\n\terr := value.Decode(&r)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t*p = PluginConfig(r)\n\n\treturn nil\n}\n\n// MergeFrom - use this Config as the defaults, and override it with any\n// non-zero values from the other Config\n//\n// Note that Input/InputDir/InputFiles will override each other, as well as\n// OutputDir/OutputFiles.\nfunc (c *Config) MergeFrom(o *Config) *Config {\n\tswitch {\n\tcase !isZero(o.Input):\n\t\tc.Input = o.Input\n\t\tc.InputDir = \"\"\n\t\tc.InputFiles = nil\n\t\tc.OutputDir = \"\"\n\tcase !isZero(o.InputDir):\n\t\tc.Input = \"\"\n\t\tc.InputDir = o.InputDir\n\t\tc.InputFiles = nil\n\tcase !isZero(o.InputFiles):\n\t\tif !(len(o.InputFiles) == 1 && o.InputFiles[0] == \"-\") {\n\t\t\tc.Input = \"\"\n\t\t\tc.InputFiles = o.InputFiles\n\t\t\tc.InputDir = \"\"\n\t\t\tc.OutputDir = \"\"\n\t\t}\n\t}\n\n\tif !isZero(o.OutputMap) {\n\t\tc.OutputDir = \"\"\n\t\tc.OutputFiles = nil\n\t\tc.OutputMap = o.OutputMap\n\t}\n\tif !isZero(o.OutputDir) {\n\t\tc.OutputDir = o.OutputDir\n\t\tc.OutputFiles = nil\n\t\tc.OutputMap = \"\"\n\t}\n\tif !isZero(o.OutputFiles) {\n\t\tc.OutputDir = \"\"\n\t\tc.OutputFiles = o.OutputFiles\n\t\tc.OutputMap = \"\"\n\t}\n\tif !isZero(o.ExecPipe) {\n\t\tc.ExecPipe = o.ExecPipe\n\t\tc.PostExec = o.PostExec\n\t\tc.OutputFiles = o.OutputFiles\n\t}\n\tif !isZero(o.ExcludeGlob) {\n\t\tc.ExcludeGlob = o.ExcludeGlob\n\t}\n\tif !isZero(o.ExcludeProcessingGlob) {\n\t\tc.ExcludeProcessingGlob = o.ExcludeProcessingGlob\n\t}\n\tif !isZero(o.OutMode) {\n\t\tc.OutMode = o.OutMode\n\t}\n\tif !isZero(o.LDelim) {\n\t\tc.LDelim = o.LDelim\n\t}\n\tif !isZero(o.RDelim) {\n\t\tc.RDelim = o.RDelim\n\t}\n\tif c.Templates == nil {\n\t\tc.Templates = o.Templates\n\t} else {\n\t\tc.Templates = mergeDataSourceMaps(c.Templates, o.Templates)\n\t}\n\tif c.DataSources == nil {\n\t\tc.DataSources = o.DataSources\n\t} else {\n\t\tc.DataSources = mergeDataSourceMaps(c.DataSources, o.DataSources)\n\t}\n\tif c.Context == nil {\n\t\tc.Context = o.Context\n\t} else {\n\t\tc.Context = mergeDataSourceMaps(c.Context, o.Context)\n\t}\n\tif len(o.Plugins) > 0 {\n\t\tfor k, v := range o.Plugins {\n\t\t\tc.Plugins[k] = v\n\t\t}\n\t}\n\n\treturn c\n}\n\n// validate the Config\nfunc (c Config) validate() (err error) {\n\terr = notTogether(\n\t\t[]string{\"in\", \"inputFiles\", \"inputDir\"},\n\t\tc.Input, c.InputFiles, c.InputDir)\n\tif err == nil {\n\t\terr = notTogether(\n\t\t\t[]string{\"outputFiles\", \"outputDir\", \"outputMap\"},\n\t\t\tc.OutputFiles, c.OutputDir, c.OutputMap)\n\t}\n\n\tif err == nil {\n\t\terr = notTogether(\n\t\t\t[]string{\"outputDir\", \"outputMap\", \"execPipe\"},\n\t\t\tc.OutputDir, c.OutputMap, c.ExecPipe)\n\t}\n\n\tif err == nil {\n\t\terr = mustTogether(\"outputDir\", \"inputDir\",\n\t\t\tc.OutputDir, c.InputDir)\n\t}\n\n\tif err == nil {\n\t\terr = mustTogether(\"outputMap\", \"inputDir\",\n\t\t\tc.OutputMap, c.InputDir)\n\t}\n\n\tif err == nil {\n\t\tf := len(c.InputFiles)\n\t\tif f == 0 && c.Input != \"\" {\n\t\t\tf = 1\n\t\t}\n\t\to := len(c.OutputFiles)\n\t\tif f != o && !c.ExecPipe {\n\t\t\terr = fmt.Errorf(\"must provide same number of 'outputFiles' (%d) as 'in' or 'inputFiles' (%d) options\", o, f)\n\t\t}\n\t}\n\n\tif err == nil {\n\t\tif c.ExecPipe && len(c.PostExec) == 0 {\n\t\t\terr = fmt.Errorf(\"execPipe may only be used with a postExec command\")\n\t\t}\n\t}\n\n\tif err == nil {\n\t\tif c.ExecPipe && (len(c.OutputFiles) > 0 && c.OutputFiles[0] != \"-\") {\n\t\t\terr = fmt.Errorf(\"must not set 'outputFiles' when using 'execPipe'\")\n\t\t}\n\t}\n\n\tif err == nil {\n\t\tmissingKeyValues := []string{\"\", \"error\", \"zero\", \"default\", \"invalid\"}\n\t\tif !slices.Contains(missingKeyValues, c.MissingKey) {\n\t\t\terr = fmt.Errorf(\"not allowed value for the 'missing-key' flag: %s. Allowed values: %s\", c.MissingKey, strings.Join(missingKeyValues, \",\"))\n\t\t}\n\t}\n\n\treturn err\n}\n\nfunc notTogether(names []string, values ...interface{}) error {\n\tfound := \"\"\n\tfor i, value := range values {\n\t\tif isZero(value) {\n\t\t\tcontinue\n\t\t}\n\t\tif found != \"\" {\n\t\t\treturn fmt.Errorf(\"only one of these options is supported at a time: '%s', '%s'\",\n\t\t\t\tfound, names[i])\n\t\t}\n\t\tfound = names[i]\n\t}\n\treturn nil\n}\n\nfunc mustTogether(left, right string, lValue, rValue interface{}) error {\n\tif !isZero(lValue) && isZero(rValue) {\n\t\treturn fmt.Errorf(\"these options must be set together: '%s', '%s'\",\n\t\t\tleft, right)\n\t}\n\n\treturn nil\n}\n\nfunc isZero(value interface{}) bool {\n\tswitch v := value.(type) {\n\tcase string:\n\t\treturn v == \"\"\n\tcase []string:\n\t\treturn len(v) == 0\n\tcase bool:\n\t\treturn !v\n\tdefault:\n\t\treturn false\n\t}\n}\n\n// applyDefaults - any defaults changed here should be added to cmd.InitFlags as\n// well for proper help/usage display.\nfunc (c *Config) applyDefaults() {\n\tif c.Stdout == nil {\n\t\tc.Stdout = os.Stdout\n\t}\n\tif c.Stderr == nil {\n\t\tc.Stderr = os.Stderr\n\t}\n\tif c.Stdin == nil {\n\t\tc.Stdin = os.Stdin\n\t}\n\n\tif c.InputDir != \"\" && c.OutputDir == \"\" && c.OutputMap == \"\" {\n\t\tc.OutputDir = \".\"\n\t}\n\tif c.Input == \"\" && c.InputDir == \"\" && len(c.InputFiles) == 0 {\n\t\tc.InputFiles = []string{\"-\"}\n\t}\n\tif c.OutputDir == \"\" && c.OutputMap == \"\" && len(c.OutputFiles) == 0 {\n\t\tc.OutputFiles = []string{\"-\"}\n\t}\n\tif c.LDelim == \"\" {\n\t\tc.LDelim = \"{{\"\n\t}\n\tif c.RDelim == \"\" {\n\t\tc.RDelim = \"}}\"\n\t}\n\tif c.MissingKey == \"\" {\n\t\tc.MissingKey = \"error\"\n\t}\n\n\tif c.PluginTimeout == 0 {\n\t\tc.PluginTimeout = 5 * time.Second\n\t}\n}\n\n// getMode - parse an os.FileMode out of the string, and let us know if it's an override or not...\nfunc (c *Config) getMode() (os.FileMode, bool, error) {\n\tmodeOverride := c.OutMode != \"\"\n\tm, err := strconv.ParseUint(\"0\"+c.OutMode, 8, 32)\n\tif err != nil {\n\t\treturn 0, false, err\n\t}\n\tmode := iohelpers.NormalizeFileMode(os.FileMode(m))\n\tif mode == 0 && c.Input != \"\" {\n\t\tmode = iohelpers.NormalizeFileMode(0o644)\n\t}\n\treturn mode, modeOverride, nil\n}\n\n// String -\nfunc (c *Config) String() string {\n\tout := &strings.Builder{}\n\tout.WriteString(\"---\\n\")\n\tenc := yaml.NewEncoder(out)\n\tenc.SetIndent(2)\n\n\t// dereferenced copy so we can truncate input for display\n\tc2 := *c\n\tif len(c2.Input) >= 11 {\n\t\tc2.Input = c2.Input[0:8] + \"...\"\n\t}\n\n\terr := enc.Encode(c2)\n\tif err != nil {\n\t\treturn err.Error()\n\t}\n\treturn out.String()\n}\n"
        },
        {
          "name": "config_test.go",
          "type": "blob",
          "size": 13.7587890625,
          "content": "package gomplate\n\nimport (\n\t\"net/http\"\n\t\"net/url\"\n\t\"strings\"\n\t\"testing\"\n\t\"time\"\n\n\t\"github.com/hairyhenderson/gomplate/v4/internal/iohelpers\"\n\t\"github.com/hairyhenderson/yaml\"\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n)\n\nfunc TestParseConfigFile(t *testing.T) {\n\tt.Parallel()\n\tin := \"in: hello world\\n\"\n\texpected := &Config{\n\t\tInput: \"hello world\",\n\t}\n\tcf, err := Parse(strings.NewReader(in))\n\trequire.NoError(t, err)\n\tassert.Equal(t, expected, cf)\n\n\t// legacy array form for templates (will be removed in v4.1.0 or so)\n\tin = `in: hello world\ntemplates:\n  - foo=bar\n  - baz=https://example.com/baz.yaml\n`\n\n\texpected = &Config{\n\t\tInput: \"hello world\",\n\t\tTemplates: map[string]DataSource{\n\t\t\t\"foo\": {URL: mustURL(\"bar\")},\n\t\t\t\"baz\": {URL: mustURL(\"https://example.com/baz.yaml\")},\n\t\t},\n\t}\n\tcf, err = Parse(strings.NewReader(in))\n\trequire.NoError(t, err)\n\tassert.Equal(t, expected, cf)\n\n\tin = `in: hello world\noutputFiles: [out.txt]\nchmod: 644\n\ndatasources:\n  data:\n    url: file:///data.json\n  moredata:\n    url: https://example.com/more.json\n    header:\n      Authorization: [\"Bearer abcd1234\"]\n\ncontext:\n  .:\n    url: file:///data.json\n\nplugins:\n  foo:\n    cmd: echo\n    pipe: true\n\ntemplates:\n  foo:\n    url: file:///tmp/foo.t\n\npluginTimeout: 2s\n`\n\texpected = &Config{\n\t\tInput:       \"hello world\",\n\t\tOutputFiles: []string{\"out.txt\"},\n\t\tDataSources: map[string]DataSource{\n\t\t\t\"data\": {\n\t\t\t\tURL: mustURL(\"file:///data.json\"),\n\t\t\t},\n\t\t\t\"moredata\": {\n\t\t\t\tURL: mustURL(\"https://example.com/more.json\"),\n\t\t\t\tHeader: map[string][]string{\n\t\t\t\t\t\"Authorization\": {\"Bearer abcd1234\"},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tContext: map[string]DataSource{\n\t\t\t\".\": {\n\t\t\t\tURL: mustURL(\"file:///data.json\"),\n\t\t\t},\n\t\t},\n\t\tOutMode: \"644\",\n\t\tPlugins: map[string]PluginConfig{\n\t\t\t\"foo\": {Cmd: \"echo\", Pipe: true},\n\t\t},\n\t\tTemplates:     map[string]DataSource{\"foo\": {URL: mustURL(\"file:///tmp/foo.t\")}},\n\t\tPluginTimeout: 2 * time.Second,\n\t}\n\n\tcf, err = Parse(strings.NewReader(in))\n\trequire.NoError(t, err)\n\tassert.EqualValues(t, expected, cf)\n}\n\nfunc mustURL(s string) *url.URL {\n\tu, err := url.Parse(s)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\treturn u\n}\n\nfunc TestValidate(t *testing.T) {\n\tt.Parallel()\n\trequire.NoError(t, validateConfig(\"\"))\n\n\trequire.Error(t, validateConfig(`in: foo\ninputFiles: [bar]\n`))\n\trequire.Error(t, validateConfig(`inputDir: foo\ninputFiles: [bar]\n`))\n\trequire.Error(t, validateConfig(`inputDir: foo\nin: bar\n`))\n\n\trequire.Error(t, validateConfig(`outputDir: foo\noutputFiles: [bar]\n`))\n\n\trequire.Error(t, validateConfig(`in: foo\noutputFiles: [bar, baz]\n`))\n\n\trequire.Error(t, validateConfig(`inputFiles: [foo]\noutputFiles: [bar, baz]\n`))\n\n\trequire.Error(t, validateConfig(`outputDir: foo\noutputFiles: [bar]\n`))\n\n\trequire.Error(t, validateConfig(`outputDir: foo\n`))\n\n\trequire.Error(t, validateConfig(`outputMap: foo\n`))\n\n\trequire.Error(t, validateConfig(`outputMap: foo\noutputFiles: [bar]\n`))\n\n\trequire.Error(t, validateConfig(`inputDir: foo\noutputDir: bar\noutputMap: bar\n`))\n\n\trequire.Error(t, validateConfig(`execPipe: true\n`))\n\trequire.Error(t, validateConfig(`execPipe: true\npostExec: \"\"\n`))\n\n\trequire.NoError(t, validateConfig(`execPipe: true\npostExec: [echo, foo]\n`))\n\n\trequire.Error(t, validateConfig(`execPipe: true\noutputFiles: [foo]\npostExec: [echo]\n`))\n\n\trequire.NoError(t, validateConfig(`execPipe: true\ninputFiles: ['-']\npostExec: [echo]\n`))\n\n\trequire.Error(t, validateConfig(`inputDir: foo\nexecPipe: true\noutputDir: foo\npostExec: [echo]\n`))\n\n\trequire.Error(t, validateConfig(`inputDir: foo\nexecPipe: true\noutputMap: foo\npostExec: [echo]\n`))\n}\n\nfunc validateConfig(c string) error {\n\tin := strings.NewReader(c)\n\tcfg, err := Parse(in)\n\tif err != nil {\n\t\treturn err\n\t}\n\terr = cfg.validate()\n\treturn err\n}\n\nfunc TestMergeFrom(t *testing.T) {\n\tt.Parallel()\n\tcfg := &Config{\n\t\tInput: \"hello world\",\n\t\tDataSources: map[string]DataSource{\n\t\t\t\"data\": {\n\t\t\t\tURL: mustURL(\"file:///data.json\"),\n\t\t\t},\n\t\t\t\"moredata\": {\n\t\t\t\tURL: mustURL(\"https://example.com/more.json\"),\n\t\t\t\tHeader: http.Header{\n\t\t\t\t\t\"Authorization\": {\"Bearer abcd1234\"},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tContext: map[string]DataSource{\n\t\t\t\"foo\": {\n\t\t\t\tURL: mustURL(\"https://example.com/foo.yaml\"),\n\t\t\t\tHeader: http.Header{\n\t\t\t\t\t\"Accept\": {\"application/yaml\"},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tOutMode: \"644\",\n\t}\n\tother := &Config{\n\t\tOutputFiles: []string{\"out.txt\"},\n\t\tDataSources: map[string]DataSource{\n\t\t\t\"data\": {\n\t\t\t\tHeader: http.Header{\n\t\t\t\t\t\"Accept\": {\"foo/bar\"},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tContext: map[string]DataSource{\n\t\t\t\"foo\": {\n\t\t\t\tHeader: http.Header{\n\t\t\t\t\t\"Accept\": {\"application/json\"},\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"bar\": {URL: mustURL(\"stdin:///\")},\n\t\t},\n\t}\n\n\texpected := &Config{\n\t\tInput:       \"hello world\",\n\t\tOutputFiles: []string{\"out.txt\"},\n\t\tDataSources: map[string]DataSource{\n\t\t\t\"data\": {\n\t\t\t\tURL: mustURL(\"file:///data.json\"),\n\t\t\t\tHeader: http.Header{\n\t\t\t\t\t\"Accept\": {\"foo/bar\"},\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"moredata\": {\n\t\t\t\tURL: mustURL(\"https://example.com/more.json\"),\n\t\t\t\tHeader: http.Header{\n\t\t\t\t\t\"Authorization\": {\"Bearer abcd1234\"},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tContext: map[string]DataSource{\n\t\t\t\"foo\": {\n\t\t\t\tURL: mustURL(\"https://example.com/foo.yaml\"),\n\t\t\t\tHeader: http.Header{\n\t\t\t\t\t\"Accept\": {\"application/json\"},\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"bar\": {URL: mustURL(\"stdin:///\")},\n\t\t},\n\t\tOutMode: \"644\",\n\t}\n\n\tassert.EqualValues(t, expected, cfg.MergeFrom(other))\n\n\tcfg = &Config{\n\t\tInput: \"hello world\",\n\t}\n\tother = &Config{\n\t\tInputFiles:  []string{\"in.tmpl\", \"in2.tmpl\"},\n\t\tOutputFiles: []string{\"out\", \"out2\"},\n\t}\n\texpected = &Config{\n\t\tInputFiles:  []string{\"in.tmpl\", \"in2.tmpl\"},\n\t\tOutputFiles: []string{\"out\", \"out2\"},\n\t}\n\n\tassert.EqualValues(t, expected, cfg.MergeFrom(other))\n\n\tcfg = &Config{\n\t\tInput:       \"hello world\",\n\t\tOutputFiles: []string{\"out\", \"out2\"},\n\t}\n\tother = &Config{\n\t\tInputDir:  \"in/\",\n\t\tOutputDir: \"out/\",\n\t}\n\texpected = &Config{\n\t\tInputDir:  \"in/\",\n\t\tOutputDir: \"out/\",\n\t}\n\n\tassert.EqualValues(t, expected, cfg.MergeFrom(other))\n\n\tcfg = &Config{\n\t\tInput:       \"hello world\",\n\t\tOutputFiles: []string{\"out\"},\n\t}\n\tother = &Config{\n\t\tInput:    \"hi\",\n\t\tExecPipe: true,\n\t\tPostExec: []string{\"cat\"},\n\t}\n\texpected = &Config{\n\t\tInput:    \"hi\",\n\t\tExecPipe: true,\n\t\tPostExec: []string{\"cat\"},\n\t}\n\n\tassert.EqualValues(t, expected, cfg.MergeFrom(other))\n\n\tcfg = &Config{\n\t\tInput:       \"hello world\",\n\t\tOutputFiles: []string{\"-\"},\n\t\tPlugins: map[string]PluginConfig{\n\t\t\t\"sleep\": {Cmd: \"echo\"},\n\t\t},\n\t\tPluginTimeout: 500 * time.Microsecond,\n\t}\n\tother = &Config{\n\t\tInputFiles:  []string{\"-\"},\n\t\tOutputFiles: []string{\"-\"},\n\t\tPlugins: map[string]PluginConfig{\n\t\t\t\"sleep\": {Cmd: \"sleep.sh\"},\n\t\t},\n\t}\n\texpected = &Config{\n\t\tInput:       \"hello world\",\n\t\tOutputFiles: []string{\"-\"},\n\t\tPlugins: map[string]PluginConfig{\n\t\t\t\"sleep\": {Cmd: \"sleep.sh\"},\n\t\t},\n\t\tPluginTimeout: 500 * time.Microsecond,\n\t}\n\n\tassert.EqualValues(t, expected, cfg.MergeFrom(other))\n\n\tcfg = &Config{\n\t\tInput:   \"hello world\",\n\t\tOutMode: \"644\",\n\t}\n\tother = &Config{\n\t\tOutputFiles: []string{\"out.txt\"},\n\t\tContext: map[string]DataSource{\n\t\t\t\"foo\": {\n\t\t\t\tURL: mustURL(\"https://example.com/foo.yaml\"),\n\t\t\t\tHeader: http.Header{\n\t\t\t\t\t\"Accept\": {\"application/json\"},\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"bar\": {URL: mustURL(\"stdin:///\")},\n\t\t},\n\t\tDataSources: map[string]DataSource{\n\t\t\t\"data\": {\n\t\t\t\tURL: mustURL(\"file:///data.json\"),\n\t\t\t},\n\t\t\t\"moredata\": {\n\t\t\t\tURL: mustURL(\"https://example.com/more.json\"),\n\t\t\t\tHeader: http.Header{\n\t\t\t\t\t\"Authorization\": {\"Bearer abcd1234\"},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}\n\texpected = &Config{\n\t\tInput:       \"hello world\",\n\t\tOutputFiles: []string{\"out.txt\"},\n\t\tContext: map[string]DataSource{\n\t\t\t\"foo\": {\n\t\t\t\tURL: mustURL(\"https://example.com/foo.yaml\"),\n\t\t\t\tHeader: http.Header{\n\t\t\t\t\t\"Accept\": {\"application/json\"},\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"bar\": {URL: mustURL(\"stdin:///\")},\n\t\t},\n\t\tDataSources: map[string]DataSource{\n\t\t\t\"data\": {\n\t\t\t\tURL: mustURL(\"file:///data.json\"),\n\t\t\t},\n\t\t\t\"moredata\": {\n\t\t\t\tURL: mustURL(\"https://example.com/more.json\"),\n\t\t\t\tHeader: http.Header{\n\t\t\t\t\t\"Authorization\": {\"Bearer abcd1234\"},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tOutMode: \"644\",\n\t}\n\n\tassert.EqualValues(t, expected, cfg.MergeFrom(other))\n\n\t// test template merging & a few other things\n\tcfg = &Config{\n\t\tInputDir:    \"indir/\",\n\t\tExcludeGlob: []string{\"*.txt\"},\n\t\tTemplates: map[string]DataSource{\n\t\t\t\"foo\": {\n\t\t\t\tURL: mustURL(\"file:///foo.yaml\"),\n\t\t\t},\n\t\t\t\"bar\": {\n\t\t\t\tURL:    mustURL(\"stdin:///\"),\n\t\t\t\tHeader: http.Header{\"Accept\": {\"application/json\"}},\n\t\t\t},\n\t\t},\n\t}\n\tother = &Config{\n\t\tExcludeGlob: []string{\"*.yaml\"},\n\t\tOutputMap:   \"${ .in }.out\",\n\t\tOutMode:     \"600\",\n\t\tLDelim:      \"${\",\n\t\tRDelim:      \"}\",\n\t\tTemplates: map[string]DataSource{\n\t\t\t\"foo\": {URL: mustURL(\"https://example.com/foo.yaml\")},\n\t\t\t\"baz\": {URL: mustURL(\"vault:///baz\")},\n\t\t},\n\t}\n\texpected = &Config{\n\t\tInputDir:    \"indir/\",\n\t\tExcludeGlob: []string{\"*.yaml\"},\n\t\tOutputMap:   \"${ .in }.out\",\n\t\tOutMode:     \"600\",\n\t\tLDelim:      \"${\",\n\t\tRDelim:      \"}\",\n\t\tTemplates: map[string]DataSource{\n\t\t\t\"foo\": {URL: mustURL(\"https://example.com/foo.yaml\")},\n\t\t\t\"bar\": {\n\t\t\t\tURL:    mustURL(\"stdin:///\"),\n\t\t\t\tHeader: http.Header{\"Accept\": {\"application/json\"}},\n\t\t\t},\n\t\t\t\"baz\": {URL: mustURL(\"vault:///baz\")},\n\t\t},\n\t}\n\n\tassert.EqualValues(t, expected, cfg.MergeFrom(other))\n}\n\nfunc TestConfig_String(t *testing.T) {\n\tt.Run(\"defaults\", func(t *testing.T) {\n\t\tc := &Config{}\n\t\tc.applyDefaults()\n\n\t\texpected := `---\ninputFiles: ['-']\noutputFiles: ['-']\nleftDelim: '{{'\nrightDelim: '}}'\nmissingKey: error\npluginTimeout: 5s\n`\n\t\tassert.Equal(t, expected, c.String())\n\t})\n\n\tt.Run(\"overridden values\", func(t *testing.T) {\n\t\tc := &Config{\n\t\t\tLDelim:      \"L\",\n\t\t\tRDelim:      \"R\",\n\t\t\tInput:       \"foo\",\n\t\t\tOutputFiles: []string{\"-\"},\n\t\t\tTemplates: map[string]DataSource{\n\t\t\t\t\"foo\": {URL: mustURL(\"https://www.example.com/foo.tmpl\")},\n\t\t\t\t\"bar\": {URL: mustURL(\"file:///tmp/bar.t\")},\n\t\t\t},\n\t\t}\n\t\texpected := `---\nin: foo\noutputFiles: ['-']\nleftDelim: L\nrightDelim: R\ntemplates:\n  foo:\n    url: https://www.example.com/foo.tmpl\n  bar:\n    url: file:///tmp/bar.t\n`\n\t\tassert.YAMLEq(t, expected, c.String())\n\t})\n\n\tt.Run(\"long input\", func(t *testing.T) {\n\t\tc := &Config{\n\t\t\tLDelim:      \"L\",\n\t\t\tRDelim:      \"R\",\n\t\t\tInput:       \"long input that should be truncated\",\n\t\t\tOutputFiles: []string{\"-\"},\n\t\t\tTemplates: map[string]DataSource{\n\t\t\t\t\"foo\": {URL: mustURL(\"https://www.example.com/foo.tmpl\")},\n\t\t\t\t\"bar\": {URL: mustURL(\"file:///tmp/bar.t\")},\n\t\t\t},\n\t\t}\n\t\texpected := `---\nin: long inp...\noutputFiles: ['-']\nleftDelim: L\nrightDelim: R\ntemplates:\n  foo:\n    url: https://www.example.com/foo.tmpl\n  bar:\n    url: file:///tmp/bar.t\n`\n\t\tassert.YAMLEq(t, expected, c.String())\n\t})\n\n\tt.Run(\"relative dirs\", func(t *testing.T) {\n\t\tc := &Config{\n\t\t\tInputDir:  \"in/\",\n\t\t\tOutputDir: \"out/\",\n\t\t}\n\t\texpected := `---\ninputDir: in/\noutputDir: out/\n`\n\t\tassert.YAMLEq(t, expected, c.String())\n\t})\n\n\tt.Run(\"outputmap\", func(t *testing.T) {\n\t\tc := &Config{\n\t\t\tInputDir:  \"in/\",\n\t\t\tOutputMap: \"{{ .in }}\",\n\t\t}\n\t\texpected := `---\ninputDir: in/\noutputMap: '{{ .in }}'\n`\n\n\t\tassert.YAMLEq(t, expected, c.String())\n\t})\n\n\tt.Run(\"pluginTimeout\", func(t *testing.T) {\n\t\tc := &Config{\n\t\t\tPluginTimeout: 500 * time.Millisecond,\n\t\t}\n\t\texpected := `---\npluginTimeout: 500ms\n`\n\n\t\tassert.YAMLEq(t, expected, c.String())\n\t})\n\n\tt.Run(\"plugins\", func(t *testing.T) {\n\t\tc := &Config{\n\t\t\tPlugins: map[string]PluginConfig{\n\t\t\t\t\"foo\": {\n\t\t\t\t\tCmd:     \"bar\",\n\t\t\t\t\tTimeout: 1 * time.Second,\n\t\t\t\t\tPipe:    true,\n\t\t\t\t},\n\t\t\t},\n\t\t}\n\t\texpected := `---\nplugins:\n  foo:\n    cmd: bar\n    timeout: 1s\n    pipe: true\n`\n\n\t\tassert.YAMLEq(t, expected, c.String())\n\t})\n}\n\nfunc TestApplyDefaults(t *testing.T) {\n\tt.Parallel()\n\tcfg := &Config{}\n\n\tcfg.applyDefaults()\n\tassert.EqualValues(t, []string{\"-\"}, cfg.InputFiles)\n\tassert.EqualValues(t, []string{\"-\"}, cfg.OutputFiles)\n\tassert.Empty(t, cfg.OutputDir)\n\tassert.Equal(t, \"{{\", cfg.LDelim)\n\tassert.Equal(t, \"}}\", cfg.RDelim)\n\n\tcfg = &Config{\n\t\tInputDir: \"in\",\n\t}\n\n\tcfg.applyDefaults()\n\tassert.Empty(t, cfg.InputFiles)\n\tassert.Empty(t, cfg.OutputFiles)\n\tassert.Equal(t, \".\", cfg.OutputDir)\n\tassert.Equal(t, \"{{\", cfg.LDelim)\n\tassert.Equal(t, \"}}\", cfg.RDelim)\n\n\tcfg = &Config{\n\t\tInput:  \"foo\",\n\t\tLDelim: \"<\",\n\t\tRDelim: \">\",\n\t}\n\n\tcfg.applyDefaults()\n\tassert.Empty(t, cfg.InputFiles)\n\tassert.EqualValues(t, []string{\"-\"}, cfg.OutputFiles)\n\tassert.Empty(t, cfg.OutputDir)\n\tassert.Equal(t, \"<\", cfg.LDelim)\n\tassert.Equal(t, \">\", cfg.RDelim)\n\n\tcfg = &Config{\n\t\tInput:    \"foo\",\n\t\tExecPipe: true,\n\t}\n\n\tcfg.applyDefaults()\n\tassert.Empty(t, cfg.InputFiles)\n\tassert.EqualValues(t, []string{\"-\"}, cfg.OutputFiles)\n\tassert.Empty(t, cfg.OutputDir)\n\tassert.True(t, cfg.ExecPipe)\n\n\tcfg = &Config{\n\t\tInputDir:  \"foo\",\n\t\tOutputMap: \"bar\",\n\t}\n\n\tcfg.applyDefaults()\n\tassert.Empty(t, cfg.InputFiles)\n\tassert.Empty(t, cfg.Input)\n\tassert.Empty(t, cfg.OutputFiles)\n\tassert.Empty(t, cfg.OutputDir)\n\tassert.False(t, cfg.ExecPipe)\n\tassert.Equal(t, \"bar\", cfg.OutputMap)\n}\n\nfunc TestGetMode(t *testing.T) {\n\tc := &Config{}\n\tm, o, err := c.getMode()\n\trequire.NoError(t, err)\n\tassert.Equal(t, iohelpers.NormalizeFileMode(0), m)\n\tassert.False(t, o)\n\n\tc = &Config{OutMode: \"755\"}\n\tm, o, err = c.getMode()\n\trequire.NoError(t, err)\n\tassert.Equal(t, iohelpers.NormalizeFileMode(0o755), m)\n\tassert.True(t, o)\n\n\tc = &Config{OutMode: \"0755\"}\n\tm, o, err = c.getMode()\n\trequire.NoError(t, err)\n\tassert.Equal(t, iohelpers.NormalizeFileMode(0o755), m)\n\tassert.True(t, o)\n\n\tc = &Config{OutMode: \"foo\"}\n\t_, _, err = c.getMode()\n\trequire.Error(t, err)\n}\n\nfunc TestPluginConfig_UnmarshalYAML(t *testing.T) {\n\tin := `foo`\n\tout := PluginConfig{}\n\terr := yaml.Unmarshal([]byte(in), &out)\n\trequire.NoError(t, err)\n\tassert.EqualValues(t, PluginConfig{Cmd: \"foo\"}, out)\n\n\tin = `[foo, bar]`\n\tout = PluginConfig{}\n\terr = yaml.Unmarshal([]byte(in), &out)\n\trequire.Error(t, err)\n\n\tin = `cmd: foo`\n\tout = PluginConfig{}\n\terr = yaml.Unmarshal([]byte(in), &out)\n\trequire.NoError(t, err)\n\tassert.EqualValues(t, PluginConfig{Cmd: \"foo\"}, out)\n\n\tin = `cmd: foo\ntimeout: 10ms\npipe: true\n`\n\tout = PluginConfig{}\n\terr = yaml.Unmarshal([]byte(in), &out)\n\trequire.NoError(t, err)\n\tassert.EqualValues(t, PluginConfig{\n\t\tCmd:     \"foo\",\n\t\tTimeout: time.Duration(10) * time.Millisecond,\n\t\tPipe:    true,\n\t}, out)\n}\n"
        },
        {
          "name": "context.go",
          "type": "blob",
          "size": 0.9521484375,
          "content": "package gomplate\n\nimport (\n\t\"context\"\n\t\"os\"\n\t\"strings\"\n\n\t\"github.com/hairyhenderson/gomplate/v4/internal/datafs\"\n\t\"github.com/hairyhenderson/gomplate/v4/internal/parsers\"\n)\n\n// context for templates\ntype tmplctx map[string]interface{}\n\n// Env - Map environment variables for use in a template\nfunc (c *tmplctx) Env() map[string]string {\n\tenv := make(map[string]string)\n\tfor _, i := range os.Environ() {\n\t\tsep := strings.Index(i, \"=\")\n\t\tenv[i[0:sep]] = i[sep+1:]\n\t}\n\treturn env\n}\n\n// createTmplContext reads the datasources for the given aliases\nfunc createTmplContext(\n\tctx context.Context, aliases []string,\n\tsr datafs.DataSourceReader,\n) (interface{}, error) {\n\ttctx := &tmplctx{}\n\tfor _, a := range aliases {\n\t\tct, b, err := sr.ReadSource(ctx, a)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\n\t\tcontent, err := parsers.ParseData(ct, string(b))\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\n\t\tif a == \".\" {\n\t\t\treturn content, nil\n\t\t}\n\n\t\t(*tctx)[a] = content\n\t}\n\treturn tctx, nil\n}\n"
        },
        {
          "name": "context_test.go",
          "type": "blob",
          "size": 1.5341796875,
          "content": "package gomplate\n\nimport (\n\t\"context\"\n\t\"net/url\"\n\t\"os\"\n\t\"testing\"\n\n\t\"github.com/hairyhenderson/go-fsimpl\"\n\t\"github.com/hairyhenderson/gomplate/v4/internal/datafs\"\n\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n)\n\nfunc TestEnvMapifiesEnvironment(t *testing.T) {\n\tc := &tmplctx{}\n\tenv := c.Env()\n\tassert.Equal(t, env[\"USER\"], os.Getenv(\"USER\"))\n}\n\nfunc TestEnvGetsUpdatedEnvironment(t *testing.T) {\n\tc := &tmplctx{}\n\tassert.Empty(t, c.Env()[\"FOO\"])\n\tt.Setenv(\"FOO\", \"foo\")\n\tassert.Equal(t, \"foo\", c.Env()[\"FOO\"])\n}\n\nfunc TestCreateContext(t *testing.T) {\n\tctx := context.Background()\n\treg := datafs.NewRegistry()\n\tsr := datafs.NewSourceReader(reg)\n\n\tc, err := createTmplContext(ctx, nil, sr)\n\trequire.NoError(t, err)\n\tassert.Empty(t, c)\n\n\tfsmux := fsimpl.NewMux()\n\tfsmux.Add(datafs.EnvFS)\n\n\tctx = datafs.ContextWithFSProvider(ctx, fsmux)\n\n\tfooURL := \"env:///foo?type=application/yaml\"\n\tbarURL := \"env:///bar?type=application/yaml\"\n\tuf, _ := url.Parse(fooURL)\n\tub, _ := url.Parse(barURL)\n\n\treg.Register(\"foo\", DataSource{URL: uf})\n\treg.Register(\".\", DataSource{URL: ub})\n\n\tt.Setenv(\"foo\", \"foo: bar\")\n\tc, err = createTmplContext(ctx, []string{\"foo\"}, sr)\n\trequire.NoError(t, err)\n\tassert.IsType(t, &tmplctx{}, c)\n\ttctx := c.(*tmplctx)\n\tds := ((*tctx)[\"foo\"]).(map[string]interface{})\n\tassert.Equal(t, \"bar\", ds[\"foo\"])\n\n\tt.Setenv(\"bar\", \"bar: baz\")\n\tc, err = createTmplContext(ctx, []string{\".\"}, sr)\n\trequire.NoError(t, err)\n\tassert.IsType(t, map[string]interface{}{}, c)\n\tds = c.(map[string]interface{})\n\tassert.Equal(t, \"baz\", ds[\"bar\"])\n}\n"
        },
        {
          "name": "conv",
          "type": "tree",
          "content": null
        },
        {
          "name": "crypto",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs-src",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "env",
          "type": "tree",
          "content": null
        },
        {
          "name": "file",
          "type": "tree",
          "content": null
        },
        {
          "name": "funcs.go",
          "type": "blob",
          "size": 1.728515625,
          "content": "package gomplate\n\nimport (\n\t\"context\"\n\t\"text/template\"\n\n\t\"github.com/hairyhenderson/gomplate/v4/internal/config\"\n\t\"github.com/hairyhenderson/gomplate/v4/internal/funcs\"\n)\n\n// CreateFuncs - function mappings are created here\nfunc CreateFuncs(ctx context.Context) template.FuncMap {\n\tf := template.FuncMap{}\n\taddToMap(f, funcs.CreateDataFuncs(ctx))\n\taddToMap(f, funcs.CreateAWSFuncs(ctx))\n\taddToMap(f, funcs.CreateGCPFuncs(ctx))\n\taddToMap(f, funcs.CreateBase64Funcs(ctx))\n\taddToMap(f, funcs.CreateNetFuncs(ctx))\n\taddToMap(f, funcs.CreateReFuncs(ctx))\n\taddToMap(f, funcs.CreateStringFuncs(ctx))\n\taddToMap(f, funcs.CreateEnvFuncs(ctx))\n\taddToMap(f, funcs.CreateConvFuncs(ctx))\n\taddToMap(f, funcs.CreateTimeFuncs(ctx))\n\taddToMap(f, funcs.CreateMathFuncs(ctx))\n\taddToMap(f, funcs.CreateCryptoFuncs(ctx))\n\taddToMap(f, funcs.CreateFileFuncs(ctx))\n\taddToMap(f, funcs.CreateFilePathFuncs(ctx))\n\taddToMap(f, funcs.CreatePathFuncs(ctx))\n\taddToMap(f, funcs.CreateSockaddrFuncs(ctx))\n\taddToMap(f, funcs.CreateTestFuncs(ctx))\n\taddToMap(f, funcs.CreateCollFuncs(ctx))\n\taddToMap(f, funcs.CreateUUIDFuncs(ctx))\n\taddToMap(f, funcs.CreateRandomFuncs(ctx))\n\taddToMap(f, funcs.CreateSemverFuncs(ctx))\n\treturn f\n}\n\n// addToMap - add src's entries to dst\nfunc addToMap(dst, src map[string]interface{}) {\n\tfor k, v := range src {\n\t\tdst[k] = v\n\t}\n}\n\n// SetExperimental enables experimental functions and features in the given\n// context. This must be done before creating functions. The set of experimental\n// features enabled by this is not fixed and will change over time.\nfunc SetExperimental(ctx context.Context) context.Context {\n\t// This just calls the internal function. This is here to make experimental\n\t// functions available to external packages.\n\treturn config.SetExperimental(ctx)\n}\n"
        },
        {
          "name": "gcp",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 9.5546875,
          "content": "module github.com/hairyhenderson/gomplate/v4\n\ngo 1.23.4\n\nrequire (\n\tcuelang.org/go v0.11.0\n\tgithub.com/Masterminds/goutils v1.1.1\n\tgithub.com/Masterminds/semver/v3 v3.3.1\n\tgithub.com/Shopify/ejson v1.5.3\n\tgithub.com/aws/aws-sdk-go v1.55.5\n\tgithub.com/fullsailor/pkcs7 v0.0.0-20190404230743-d7302db945fa\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/gosimple/slug v1.14.0\n\tgithub.com/hack-pad/hackpadfs v0.2.4\n\tgithub.com/hairyhenderson/go-fsimpl v0.2.1\n\tgithub.com/hairyhenderson/toml v0.4.2-0.20210923231440-40456b8e66cf\n\tgithub.com/hairyhenderson/xignore v0.3.3-0.20230403012150-95fe86932830 // iofs-port branch\n\tgithub.com/hashicorp/go-sockaddr v1.0.7\n\tgithub.com/hashicorp/vault/api v1.15.0\n\tgithub.com/hashicorp/vault/api/auth/aws v0.8.0\n\tgithub.com/itchyny/gojq v0.12.17\n\tgithub.com/johannesboyne/gofakes3 v0.0.0-20240217095638-c55a48f17be6\n\tgithub.com/joho/godotenv v1.5.1\n\tgithub.com/lmittmann/tint v1.0.6\n\tgithub.com/spf13/cobra v1.8.1\n\tgithub.com/stretchr/testify v1.10.0\n\tgithub.com/ugorji/go/codec v1.2.12\n\tgo4.org/netipx v0.0.0-20231129151722-fdeea329fbba\n\tgolang.org/x/crypto v0.31.0\n\tgolang.org/x/exp v0.0.0-20240719175910-8a7402abbf56 // indirect\n\tgolang.org/x/sys v0.28.0\n\tgolang.org/x/term v0.27.0\n\tgolang.org/x/text v0.21.0\n\tgotest.tools/v3 v3.5.1\n\tinet.af/netaddr v0.0.0-20230525184311-b8eac61e914a\n\tk8s.io/client-go v0.32.0\n)\n\n// TODO: replace with gopkg.in/yaml.v3 after https://github.com/go-yaml/yaml/pull/862\n// is merged\nrequire github.com/hairyhenderson/yaml v0.0.0-20220618171115-2d35fca545ce\n\nrequire (\n\tcel.dev/expr v0.16.1 // indirect\n\tcloud.google.com/go v0.116.0 // indirect\n\tcloud.google.com/go/auth v0.9.8 // indirect\n\tcloud.google.com/go/auth/oauth2adapt v0.2.4 // indirect\n\tcloud.google.com/go/compute/metadata v0.5.2 // indirect\n\tcloud.google.com/go/iam v1.2.1 // indirect\n\tcloud.google.com/go/monitoring v1.21.1 // indirect\n\tcloud.google.com/go/storage v1.44.0 // indirect\n\tdario.cat/mergo v1.0.0 // indirect\n\tgithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.16.0 // indirect\n\tgithub.com/Azure/azure-sdk-for-go/sdk/azidentity v1.8.0 // indirect\n\tgithub.com/Azure/azure-sdk-for-go/sdk/internal v1.10.0 // indirect\n\tgithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob v1.5.0 // indirect\n\tgithub.com/Azure/go-autorest v14.2.0+incompatible // indirect\n\tgithub.com/Azure/go-autorest/autorest/to v0.4.0 // indirect\n\tgithub.com/AzureAD/microsoft-authentication-library-for-go v1.2.2 // indirect\n\tgithub.com/GoogleCloudPlatform/opentelemetry-operations-go/detectors/gcp v1.24.1 // indirect\n\tgithub.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/metric v0.48.1 // indirect\n\tgithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/resourcemapping v0.48.1 // indirect\n\tgithub.com/Microsoft/go-winio v0.6.2 // indirect\n\tgithub.com/ProtonMail/go-crypto v1.0.0 // indirect\n\tgithub.com/armon/go-metrics v0.4.1 // indirect\n\tgithub.com/aws/aws-sdk-go-v2 v1.32.6 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.6.7 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/config v1.28.6 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/credentials v1.17.47 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.21 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/feature/s3/manager v1.17.10 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.25 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.25 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/ini v1.8.1 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/v4a v1.3.25 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.1 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/checksum v1.4.6 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.6 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.18.6 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/s3 v1.71.0 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/secretsmanager v1.34.7 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/ssm v1.56.1 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sso v1.24.7 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.28.6 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sts v1.33.2 // indirect\n\tgithub.com/aws/smithy-go v1.22.1 // indirect\n\tgithub.com/cenkalti/backoff/v4 v4.3.0 // indirect\n\tgithub.com/census-instrumentation/opencensus-proto v0.4.1 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/cloudflare/circl v1.3.9 // indirect\n\tgithub.com/cncf/xds/go v0.0.0-20240905190251-b4127c9b8d78 // indirect\n\tgithub.com/cockroachdb/apd/v3 v3.2.1 // indirect\n\tgithub.com/cyphar/filepath-securejoin v0.2.5 // indirect\n\tgithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc // indirect\n\tgithub.com/dustin/gojson v0.0.0-20160307161227-2e71ec9dd5ad // indirect\n\tgithub.com/emirpasic/gods v1.18.1 // indirect\n\tgithub.com/envoyproxy/go-control-plane v0.13.0 // indirect\n\tgithub.com/envoyproxy/protoc-gen-validate v1.1.0 // indirect\n\tgithub.com/fatih/color v1.17.0 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/go-git/gcfg v1.5.1-0.20230307220236-3a3c6141e376 // indirect\n\tgithub.com/go-git/go-billy/v5 v5.6.0 // indirect\n\tgithub.com/go-jose/go-jose/v4 v4.0.2 // indirect\n\tgithub.com/go-logr/logr v1.4.2 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/golang-jwt/jwt/v5 v5.2.1 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/google/go-cmp v0.6.0 // indirect\n\tgithub.com/google/s2a-go v0.1.8 // indirect\n\tgithub.com/google/wire v0.6.0 // indirect\n\tgithub.com/googleapis/enterprise-certificate-proxy v0.3.4 // indirect\n\tgithub.com/googleapis/gax-go/v2 v2.13.0 // indirect\n\tgithub.com/gosimple/unidecode v1.0.1 // indirect\n\tgithub.com/hairyhenderson/go-git/v5 v5.12.1-0.20240530140403-1b868a7b8a3c // indirect\n\tgithub.com/hashicorp/consul/api v1.30.0 // indirect\n\tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n\tgithub.com/hashicorp/go-cleanhttp v0.5.2 // indirect\n\tgithub.com/hashicorp/go-hclog v1.6.3 // indirect\n\tgithub.com/hashicorp/go-immutable-radix v1.3.1 // indirect\n\tgithub.com/hashicorp/go-multierror v1.1.1 // indirect\n\tgithub.com/hashicorp/go-retryablehttp v0.7.7 // indirect\n\tgithub.com/hashicorp/go-rootcerts v1.0.2 // indirect\n\tgithub.com/hashicorp/go-secure-stdlib/awsutil v0.3.0 // indirect\n\tgithub.com/hashicorp/go-secure-stdlib/parseutil v0.1.8 // indirect\n\tgithub.com/hashicorp/go-secure-stdlib/strutil v0.1.2 // indirect\n\tgithub.com/hashicorp/go-uuid v1.0.3 // indirect\n\tgithub.com/hashicorp/golang-lru v1.0.2 // indirect\n\tgithub.com/hashicorp/hcl v1.0.0 // indirect\n\tgithub.com/hashicorp/serf v0.10.1 // indirect\n\tgithub.com/hashicorp/vault/api/auth/approle v0.8.0 // indirect\n\tgithub.com/hashicorp/vault/api/auth/userpass v0.8.0 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/itchyny/timefmt-go v0.1.6 // indirect\n\tgithub.com/jbenet/go-context v0.0.0-20150711004518-d14ea06fba99 // indirect\n\tgithub.com/jmespath/go-jmespath v0.4.0 // indirect\n\tgithub.com/kevinburke/ssh_config v1.2.0 // indirect\n\tgithub.com/kylelemons/godebug v1.1.0 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/mitchellh/go-homedir v1.1.0 // indirect\n\tgithub.com/mitchellh/mapstructure v1.5.0 // indirect\n\tgithub.com/pelletier/go-toml/v2 v2.2.3 // indirect\n\tgithub.com/pjbgf/sha1cd v0.3.0 // indirect\n\tgithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 // indirect\n\tgithub.com/ryanuber/go-glob v1.0.0 // indirect\n\tgithub.com/ryszard/goskiplist v0.0.0-20150312221310-2dfbae5fcf46 // indirect\n\tgithub.com/sergi/go-diff v1.3.2-0.20230802210424-5b0b94c5c0d3 // indirect\n\tgithub.com/shabbyrobe/gocovmerge v0.0.0-20230507112040-c3350d9342df // indirect\n\tgithub.com/skeema/knownhosts v1.2.2 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgithub.com/xanzy/ssh-agent v0.3.3 // indirect\n\tgo.opencensus.io v0.24.0 // indirect\n\tgo.opentelemetry.io/auto/sdk v1.1.0 // indirect\n\tgo.opentelemetry.io/contrib/detectors/gcp v1.29.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.54.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0 // indirect\n\tgo.opentelemetry.io/otel v1.33.0 // indirect\n\tgo.opentelemetry.io/otel/metric v1.33.0 // indirect\n\tgo.opentelemetry.io/otel/sdk v1.33.0 // indirect\n\tgo.opentelemetry.io/otel/sdk/metric v1.29.0 // indirect\n\tgo.opentelemetry.io/otel/trace v1.33.0 // indirect\n\tgo4.org/intern v0.0.0-20230525184215-6c62f75575cb // indirect\n\tgo4.org/unsafe/assume-no-moving-gc v0.0.0-20231121144256-b99613f794b6 // indirect\n\tgocloud.dev v0.40.0 // indirect\n\tgolang.org/x/mod v0.21.0 // indirect\n\tgolang.org/x/net v0.32.0 // indirect\n\tgolang.org/x/oauth2 v0.24.0 // indirect\n\tgolang.org/x/sync v0.10.0 // indirect\n\tgolang.org/x/time v0.7.0 // indirect\n\tgolang.org/x/tools v0.26.0 // indirect\n\tgolang.org/x/xerrors v0.0.0-20240716161551-93cc26a95ae9 // indirect\n\tgoogle.golang.org/api v0.201.0 // indirect\n\tgoogle.golang.org/genproto v0.0.0-20241007155032-5fefd90f89a9 // indirect\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20241209162323-e6fa225c2576 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241209162323-e6fa225c2576 // indirect\n\tgoogle.golang.org/grpc v1.68.1 // indirect\n\tgoogle.golang.org/grpc/stats/opentelemetry v0.0.0-20240907200651-3ffb98b2c93a // indirect\n\tgoogle.golang.org/protobuf v1.35.2 // indirect\n\tgopkg.in/warnings.v0 v0.1.2 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 73.6796875,
          "content": "cel.dev/expr v0.16.1 h1:NR0+oFYzR1CqLFhTAqg3ql59G9VfN8fKq1TCHJ6gq1g=\ncel.dev/expr v0.16.1/go.mod h1:AsGA5zb3WruAEQeQng1RZdGEXmBj0jvMWh6l5SnNuC8=\ncloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.116.0 h1:B3fRrSDkLRt5qSHWe40ERJvhvnQwdZiHu0bJOpldweE=\ncloud.google.com/go v0.116.0/go.mod h1:cEPSRWPzZEswwdr9BxE6ChEn01dWlTaF05LiC2Xs70U=\ncloud.google.com/go/auth v0.9.8 h1:+CSJ0Gw9iVeSENVCKJoLHhdUykDgXSc4Qn+gu2BRtR8=\ncloud.google.com/go/auth v0.9.8/go.mod h1:xxA5AqpDrvS+Gkmo9RqrGGRh6WSNKKOXhY3zNOr38tI=\ncloud.google.com/go/auth/oauth2adapt v0.2.4 h1:0GWE/FUsXhf6C+jAkWgYm7X9tK8cuEIfy19DBn6B6bY=\ncloud.google.com/go/auth/oauth2adapt v0.2.4/go.mod h1:jC/jOpwFP6JBxhB3P5Rr0a9HLMC/Pe3eaL4NmdvqPtc=\ncloud.google.com/go/compute/metadata v0.5.2 h1:UxK4uu/Tn+I3p2dYWTfiX4wva7aYlKixAHn3fyqngqo=\ncloud.google.com/go/compute/metadata v0.5.2/go.mod h1:C66sj2AluDcIqakBq/M8lw8/ybHgOZqin2obFxa/E5k=\ncloud.google.com/go/iam v1.2.1 h1:QFct02HRb7H12J/3utj0qf5tobFh9V4vR6h9eX5EBRU=\ncloud.google.com/go/iam v1.2.1/go.mod h1:3VUIJDPpwT6p/amXRC5GY8fCCh70lxPygguVtI0Z4/g=\ncloud.google.com/go/logging v1.11.0 h1:v3ktVzXMV7CwHq1MBF65wcqLMA7i+z3YxbUsoK7mOKs=\ncloud.google.com/go/logging v1.11.0/go.mod h1:5LDiJC/RxTt+fHc1LAt20R9TKiUTReDg6RuuFOZ67+A=\ncloud.google.com/go/longrunning v0.6.1 h1:lOLTFxYpr8hcRtcwWir5ITh1PAKUD/sG2lKrTSYjyMc=\ncloud.google.com/go/longrunning v0.6.1/go.mod h1:nHISoOZpBcmlwbJmiVk5oDRz0qG/ZxPynEGs1iZ79s0=\ncloud.google.com/go/monitoring v1.21.1 h1:zWtbIoBMnU5LP9A/fz8LmWMGHpk4skdfeiaa66QdFGc=\ncloud.google.com/go/monitoring v1.21.1/go.mod h1:Rj++LKrlht9uBi8+Eb530dIrzG/cU/lB8mt+lbeFK1c=\ncloud.google.com/go/pubsub v1.44.0 h1:pLaMJVDTlnUDIKT5L0k53YyLszfBbGoUBo/IqDK/fEI=\ncloud.google.com/go/pubsub v1.44.0/go.mod h1:BD4a/kmE8OePyHoa1qAHEw1rMzXX+Pc8Se54T/8mc3I=\ncloud.google.com/go/storage v1.44.0 h1:abBzXf4UJKMmQ04xxJf9dYM/fNl24KHoTuBjyJDX2AI=\ncloud.google.com/go/storage v1.44.0/go.mod h1:wpPblkIuMP5jCB/E48Pz9zIo2S/zD8g+ITmxKkPCITE=\ncloud.google.com/go/trace v1.11.1 h1:UNqdP+HYYtnm6lb91aNA5JQ0X14GnxkABGlfz2PzPew=\ncloud.google.com/go/trace v1.11.1/go.mod h1:IQKNQuBzH72EGaXEodKlNJrWykGZxet2zgjtS60OtjA=\ncuelabs.dev/go/oci/ociregistry v0.0.0-20240906074133-82eb438dd565 h1:R5wwEcbEZSBmeyg91MJZTxfd7WpBo2jPof3AYjRbxwY=\ncuelabs.dev/go/oci/ociregistry v0.0.0-20240906074133-82eb438dd565/go.mod h1:5A4xfTzHTXfeVJBU6RAUf+QrlfTCW+017q/QiW+sMLg=\ncuelang.org/go v0.11.0 h1:2af2nhipqlUHtXk2dtOP5xnMm1ObGvKqIsJUJL1sRE4=\ncuelang.org/go v0.11.0/go.mod h1:PBY6XvPUswPPJ2inpvUozP9mebDVTXaeehQikhZPBz0=\ndario.cat/mergo v1.0.0 h1:AGCNq9Evsj31mOgNPcLyXc+4PNABt905YmuqPYYpBWk=\ndario.cat/mergo v1.0.0/go.mod h1:uNxQE+84aUszobStD9th8a29P2fMDhsBdgRYvZOxGmk=\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.16.0 h1:JZg6HRh6W6U4OLl6lk7BZ7BLisIzM9dG1R50zUk9C/M=\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.16.0/go.mod h1:YL1xnZ6QejvQHWJrX/AvhFl4WW4rqHVoKspWNVwFk0M=\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity v1.8.0 h1:B/dfvscEQtew9dVuoxqxrUKKv8Ih2f55PydknDamU+g=\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity v1.8.0/go.mod h1:fiPSssYvltE08HJchL04dOy+RD4hgrjph0cwGGMntdI=\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity/cache v0.3.0 h1:+m0M/LFxN43KvULkDNfdXOgrjtg6UYJPFBJyuEcRCAw=\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity/cache v0.3.0/go.mod h1:PwOyop78lveYMRs6oCxjiVyBdyCgIYH6XHIVZO9/SFQ=\ngithub.com/Azure/azure-sdk-for-go/sdk/internal v1.10.0 h1:ywEEhmNahHBihViHepv3xPBn1663uRv2t2q/ESv9seY=\ngithub.com/Azure/azure-sdk-for-go/sdk/internal v1.10.0/go.mod h1:iZDifYGJTIgIIkYRNWPENUnqx6bJ2xnSDFI2tjwZNuY=\ngithub.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storage/armstorage v1.6.0 h1:PiSrjRPpkQNjrM8H0WwKMnZUdu1RGMtd/LdGKUrOo+c=\ngithub.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storage/armstorage v1.6.0/go.mod h1:oDrbWx4ewMylP7xHivfgixbfGBT6APAwsSoHRKotnIc=\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob v1.5.0 h1:mlmW46Q0B79I+Aj4azKC6xDMFN9a9SyZWESlGWYXbFs=\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob v1.5.0/go.mod h1:PXe2h+LKcWTX9afWdZoHyODqR4fBa5boUM/8uJfZ0Jo=\ngithub.com/Azure/go-autorest v14.2.0+incompatible h1:V5VMDjClD3GiElqLWO7mz2MxNAK/vTfRHdAubSIPRgs=\ngithub.com/Azure/go-autorest v14.2.0+incompatible/go.mod h1:r+4oMnoxhatjLLJ6zxSWATqVooLgysK6ZNox3g/xq24=\ngithub.com/Azure/go-autorest/autorest/to v0.4.0 h1:oXVqrxakqqV1UZdSazDOPOLvOIz+XA683u8EctwboHk=\ngithub.com/Azure/go-autorest/autorest/to v0.4.0/go.mod h1:fE8iZBn7LQR7zH/9XU2NcPR4o9jEImooCeWJcYV/zLE=\ngithub.com/AzureAD/microsoft-authentication-extensions-for-go/cache v0.1.1 h1:WJTmL004Abzc5wDB5VtZG2PJk5ndYDgVacGqfirKxjM=\ngithub.com/AzureAD/microsoft-authentication-extensions-for-go/cache v0.1.1/go.mod h1:tCcJZ0uHAmvjsVYzEFivsRTN00oz5BEsRgQHu5JZ9WE=\ngithub.com/AzureAD/microsoft-authentication-library-for-go v1.2.2 h1:XHOnouVk1mxXfQidrMEnLlPk9UMeRtyBTnEFtxkV0kU=\ngithub.com/AzureAD/microsoft-authentication-library-for-go v1.2.2/go.mod h1:wP83P5OoQ5p6ip3ScPr0BAq0BvuPAvacpEuSzyouqAI=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/DataDog/datadog-go v3.2.0+incompatible/go.mod h1:LButxg5PwREeZtORoXG3tL4fMGNddJ+vMq1mwgfaqoQ=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/detectors/gcp v1.24.1 h1:pB2F2JKCj1Znmp2rwxxt1J0Fg0wezTMgWYk5Mpbi1kg=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/detectors/gcp v1.24.1/go.mod h1:itPGVDKf9cC/ov4MdvJ2QZ0khw4bfoo9jzwTJlaxy2k=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/metric v0.48.1 h1:UQ0AhxogsIRZDkElkblfnwjc3IaltCm2HUMvezQaL7s=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/metric v0.48.1/go.mod h1:jyqM3eLpJ3IbIFDTKVz2rF9T/xWGW0rIriGwnz8l9Tk=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/cloudmock v0.48.1 h1:oTX4vsorBZo/Zdum6OKPA4o7544hm6smoRv1QjpTwGo=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/cloudmock v0.48.1/go.mod h1:0wEl7vrAD8mehJyohS9HZy+WyEOaQO2mJx86Cvh93kM=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/resourcemapping v0.48.1 h1:8nn+rsCvTq9axyEh382S0PFLBeaFwNsT43IrPWzctRU=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/resourcemapping v0.48.1/go.mod h1:viRWSEhtMZqz1rhwmOVKkWl6SwmVowfL9O2YR5gI2PE=\ngithub.com/Masterminds/goutils v1.1.1 h1:5nUrii3FMTL5diU80unEVvNevw1nH4+ZV4DSLVJLSYI=\ngithub.com/Masterminds/goutils v1.1.1/go.mod h1:8cTjp+g8YejhMuvIA5y2vz3BpJxksy863GQaJW2MFNU=\ngithub.com/Masterminds/semver/v3 v3.3.1 h1:QtNSWtVZ3nBfk8mAOu/B6v7FMJ+NHTIgUPi7rj+4nv4=\ngithub.com/Masterminds/semver/v3 v3.3.1/go.mod h1:4V+yj/TJE1HU9XfppCwVMZq3I84lprf4nC11bSS5beM=\ngithub.com/Microsoft/go-winio v0.5.2/go.mod h1:WpS1mjBmmwHBEWmogvA2mj8546UReBk4v8QkMxJ6pZY=\ngithub.com/Microsoft/go-winio v0.6.2 h1:F2VQgta7ecxGYO8k3ZZz3RS8fVIXVxONVUPlNERoyfY=\ngithub.com/Microsoft/go-winio v0.6.2/go.mod h1:yd8OoFMLzJbo9gZq8j5qaps8bJ9aShtEA8Ipt1oGCvU=\ngithub.com/ProtonMail/go-crypto v1.0.0 h1:LRuvITjQWX+WIfr930YHG2HNfjR1uOfyf5vE0kC2U78=\ngithub.com/ProtonMail/go-crypto v1.0.0/go.mod h1:EjAoLdwvbIOoOQr3ihjnSoLZRtE8azugULFRteWMNc0=\ngithub.com/Shopify/ejson v1.5.3 h1:2TfdPKTkHXADrvxQrW+mOpl+btx0kDn4/kjzOQ1gIH8=\ngithub.com/Shopify/ejson v1.5.3/go.mod h1:bVvQ3MaBCfMOkIp1rWZcot3TruYXCc7qUUbI1tjs/YM=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alecthomas/units v0.0.0-20190717042225-c3de453c63f4/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/anmitsu/go-shlex v0.0.0-20200514113438-38f4b401e2be h1:9AeTilPcZAjCFIImctFaOjnTIavg87rW78vTPkQqLI8=\ngithub.com/anmitsu/go-shlex v0.0.0-20200514113438-38f4b401e2be/go.mod h1:ySMOLuWl6zY27l47sB3qLNK6tF2fkHG55UZxx8oIVo4=\ngithub.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e/go.mod h1:3U/XgcO3hCbHZ8TKRvWD2dDTCfh9M9ya+I9JpbB7O8o=\ngithub.com/armon/go-metrics v0.0.0-20180917152333-f0300d1749da/go.mod h1:Q73ZrmVTwzkszR9V5SSuryQ31EELlFMUz1kKyl939pY=\ngithub.com/armon/go-metrics v0.4.1 h1:hR91U9KYmb6bLBYLQjyM+3j+rcd/UhE+G78SFnF8gJA=\ngithub.com/armon/go-metrics v0.4.1/go.mod h1:E6amYzXo6aW1tqzoZGT755KkbgrJsSdpwZ+3JqfkOG4=\ngithub.com/armon/go-radix v0.0.0-20180808171621-7fddfc383310/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=\ngithub.com/armon/go-radix v1.0.0/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=\ngithub.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5 h1:0CwZNZbxp69SHPdPJAN/hZIm0C4OItdklCFmMRWYpio=\ngithub.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5/go.mod h1:wHh0iHkYZB8zMSxRWpUBQtwG5a7fFgvEO+odwuTv2gs=\ngithub.com/aws/aws-sdk-go v1.34.0/go.mod h1:5zCpMtNQVjRREroY7sYe8lOMRSxkhG6MZveU8YkpAk0=\ngithub.com/aws/aws-sdk-go v1.44.256/go.mod h1:aVsgQcEevwlmQ7qHE9I3h+dtQgpqhFB+i8Phjh7fkwI=\ngithub.com/aws/aws-sdk-go v1.55.5 h1:KKUZBfBoyqy5d3swXyiC7Q76ic40rYcbqH7qjh59kzU=\ngithub.com/aws/aws-sdk-go v1.55.5/go.mod h1:eRwEWoyTWFMVYVQzKMNHWP5/RV4xIUGMQfXQHfHkpNU=\ngithub.com/aws/aws-sdk-go-v2 v1.32.6 h1:7BokKRgRPuGmKkFMhEg/jSul+tB9VvXhcViILtfG8b4=\ngithub.com/aws/aws-sdk-go-v2 v1.32.6/go.mod h1:P5WJBrYqqbWVaOxgH0X/FYYD47/nooaPOZPlQdmiN2U=\ngithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.6.7 h1:lL7IfaFzngfx0ZwUGOZdsFFnQ5uLvR0hWqqhyE7Q9M8=\ngithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.6.7/go.mod h1:QraP0UcVlQJsmHfioCrveWOC1nbiWUl3ej08h4mXWoc=\ngithub.com/aws/aws-sdk-go-v2/config v1.28.6 h1:D89IKtGrs/I3QXOLNTH93NJYtDhm8SYa9Q5CsPShmyo=\ngithub.com/aws/aws-sdk-go-v2/config v1.28.6/go.mod h1:GDzxJ5wyyFSCoLkS+UhGB0dArhb9mI+Co4dHtoTxbko=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.17.47 h1:48bA+3/fCdi2yAwVt+3COvmatZ6jUDNkDTIsqDiMUdw=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.17.47/go.mod h1:+KdckOejLW3Ks3b0E3b5rHsr2f9yuORBum0WPnE5o5w=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.21 h1:AmoU1pziydclFT/xRV+xXE/Vb8fttJCLRPv8oAkprc0=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.21/go.mod h1:AjUdLYe4Tgs6kpH4Bv7uMZo7pottoyHMn4eTcIcneaY=\ngithub.com/aws/aws-sdk-go-v2/feature/s3/manager v1.17.10 h1:zeN9UtUlA6FTx0vFSayxSX32HDw73Yb6Hh2izDSFxXY=\ngithub.com/aws/aws-sdk-go-v2/feature/s3/manager v1.17.10/go.mod h1:3HKuexPDcwLWPaqpW2UR/9n8N/u/3CKcGAzSs8p8u8g=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.25 h1:s/fF4+yDQDoElYhfIVvSNyeCydfbuTKzhxSXDXCPasU=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.25/go.mod h1:IgPfDv5jqFIzQSNbUEMoitNooSMXjRSDkhXv8jiROvU=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.25 h1:ZntTCl5EsYnhN/IygQEUugpdwbhdkom9uHcbCftiGgA=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.25/go.mod h1:DBdPrgeocww+CSl1C8cEV8PN1mHMBhuCDLpXezyvWkE=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.8.1 h1:VaRN3TlFdd6KxX1x3ILT5ynH6HvKgqdiXoTxAF4HQcQ=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.8.1/go.mod h1:FbtygfRFze9usAadmnGJNc8KsP346kEe+y2/oyhGAGc=\ngithub.com/aws/aws-sdk-go-v2/internal/v4a v1.3.25 h1:r67ps7oHCYnflpgDy2LZU0MAQtQbYIOqNNnqGO6xQkE=\ngithub.com/aws/aws-sdk-go-v2/internal/v4a v1.3.25/go.mod h1:GrGY+Q4fIokYLtjCVB/aFfCVL6hhGUFl8inD18fDalE=\ngithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.1 h1:iXtILhvDxB6kPvEXgsDhGaZCSC6LQET5ZHSdJozeI0Y=\ngithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.1/go.mod h1:9nu0fVANtYiAePIBh2/pFUSwtJ402hLnp854CNoDOeE=\ngithub.com/aws/aws-sdk-go-v2/service/internal/checksum v1.4.6 h1:HCpPsWqmYQieU7SS6E9HXfdAMSud0pteVXieJmcpIRI=\ngithub.com/aws/aws-sdk-go-v2/service/internal/checksum v1.4.6/go.mod h1:ngUiVRCco++u+soRRVBIvBZxSMMvOVMXA4PJ36JLfSw=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.6 h1:50+XsN70RS7dwJ2CkVNXzj7U2L1HKP8nqTd3XWEXBN4=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.6/go.mod h1:WqgLmwY7so32kG01zD8CPTJWVWM+TzJoOVHwTg4aPug=\ngithub.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.18.6 h1:BbGDtTi0T1DYlmjBiCr/le3wzhA37O8QTC5/Ab8+EXk=\ngithub.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.18.6/go.mod h1:hLMJt7Q8ePgViKupeymbqI0la+t9/iYFBjxQCFwuAwI=\ngithub.com/aws/aws-sdk-go-v2/service/s3 v1.71.0 h1:nyuzXooUNJexRT0Oy0UQY6AhOzxPxhtt4DcBIHyCnmw=\ngithub.com/aws/aws-sdk-go-v2/service/s3 v1.71.0/go.mod h1:sT/iQz8JK3u/5gZkT+Hmr7GzVZehUMkRZpOaAwYXeGY=\ngithub.com/aws/aws-sdk-go-v2/service/secretsmanager v1.34.7 h1:Nyfbgei75bohfmZNxgN27i528dGYVzqWJGlAO6lzXy8=\ngithub.com/aws/aws-sdk-go-v2/service/secretsmanager v1.34.7/go.mod h1:FG4p/DciRxPgjA+BEOlwRHN0iA8hX2h9g5buSy3cTDA=\ngithub.com/aws/aws-sdk-go-v2/service/ssm v1.56.1 h1:cfVjoEwOMOJOI6VoRQua0nI0KjZV9EAnR8bKaMeSppE=\ngithub.com/aws/aws-sdk-go-v2/service/ssm v1.56.1/go.mod h1:fGHwAnTdNrLKhgl+UEeq9uEL4n3Ng4MJucA+7Xi3sC4=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.24.7 h1:rLnYAfXQ3YAccocshIH5mzNNwZBkBo+bP6EhIxak6Hw=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.24.7/go.mod h1:ZHtuQJ6t9A/+YDuxOLnbryAmITtr8UysSny3qcyvJTc=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.28.6 h1:JnhTZR3PiYDNKlXy50/pNeix9aGMo6lLpXwJ1mw8MD4=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.28.6/go.mod h1:URronUEGfXZN1VpdktPSD1EkAL9mfrV+2F4sjH38qOY=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.33.2 h1:s4074ZO1Hk8qv65GqNXqDjmkf4HSQqJukaLuuW0TpDA=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.33.2/go.mod h1:mVggCnIWoM09jP71Wh+ea7+5gAp53q+49wDFs1SW5z8=\ngithub.com/aws/smithy-go v1.22.1 h1:/HPHZQ0g7f4eUeK6HKglFz8uwVfZKgoI25rb/J+dnro=\ngithub.com/aws/smithy-go v1.22.1/go.mod h1:irrKGvNn1InZwb2d7fkIRNucdfwR8R+Ts3wxYa/cJHg=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/bgentry/speakeasy v0.1.0/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=\ngithub.com/bwesterb/go-ristretto v1.2.3/go.mod h1:fUIoIZaG73pV5biE2Blr2xEzDoMj7NFEuV9ekS419A0=\ngithub.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=\ngithub.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/census-instrumentation/opencensus-proto v0.4.1 h1:iKLQ0xPNFxR/2hzXZMrBo8f1j86j5WHzznCCQxV/b8g=\ngithub.com/census-instrumentation/opencensus-proto v0.4.1/go.mod h1:4T9NM4+4Vw91VeyqjLS6ao50K5bOcLKN6Q42XnYaRYw=\ngithub.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/circonus-labs/circonus-gometrics v2.3.1+incompatible/go.mod h1:nmEj6Dob7S7YxXgwXpfOuvO54S+tGdZdw9fuRZt25Ag=\ngithub.com/circonus-labs/circonusllhist v0.1.3/go.mod h1:kMXHVDlOchFAehlya5ePtbp5jckzBHf4XRpQvBOLI+I=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cloudflare/circl v1.3.3/go.mod h1:5XYMA4rFBvNIrhs50XuiBJ15vF2pZn4nnUKZrLbUZFA=\ngithub.com/cloudflare/circl v1.3.9 h1:QFrlgFYf2Qpi8bSpVPK1HBvWpx16v/1TZivyo7pGuBE=\ngithub.com/cloudflare/circl v1.3.9/go.mod h1:PDRU+oXvdD7KCtgKxW95M5Z8BpSCJXQORiZFnBQS5QU=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cncf/xds/go v0.0.0-20240905190251-b4127c9b8d78 h1:QVw89YDxXxEe+l8gU8ETbOasdwEV+avkR75ZzsVV9WI=\ngithub.com/cncf/xds/go v0.0.0-20240905190251-b4127c9b8d78/go.mod h1:W+zGtBO5Y1IgJhy4+A9GOqVhqLpfZi+vwmdNXUehLA8=\ngithub.com/cockroachdb/apd/v3 v3.2.1 h1:U+8j7t0axsIgvQUqthuNm82HIrYXodOV2iWLWtEaIwg=\ngithub.com/cockroachdb/apd/v3 v3.2.1/go.mod h1:klXJcjp+FffLTHlhIG69tezTDvdP065naDsHzKhYSqc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/cyphar/filepath-securejoin v0.2.5 h1:6iR5tXJ/e6tJZzzdMc1km3Sa7RRIVBKAK32O2s7AYfo=\ngithub.com/cyphar/filepath-securejoin v0.2.5/go.mod h1:aPGpWjXOXUn2NCNjFvBE6aRxGGx79pTxQpKOJNYHHl4=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f h1:lO4WD4F/rVNCu3HqELle0jiPLLBs70cWOduZpkS1E78=\ngithub.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f/go.mod h1:cuUVRXasLTGF7a8hSLbxyZXjz+1KgoB3wDUb6vlszIc=\ngithub.com/dustin/gojson v0.0.0-20160307161227-2e71ec9dd5ad h1:Qk76DOWdOp+GlyDKBAG3Klr9cn7N+LcYc82AZ2S7+cA=\ngithub.com/dustin/gojson v0.0.0-20160307161227-2e71ec9dd5ad/go.mod h1:mPKfmRa823oBIgl2r20LeMSpTAteW5j7FLkc0vjmzyQ=\ngithub.com/dvyukov/go-fuzz v0.0.0-20210103155950-6a8e9d1f2415/go.mod h1:11Gm+ccJnvAhCNLlf5+cS9KjtbaD5I5zaZpFMsTHWTw=\ngithub.com/elazarl/goproxy v0.0.0-20230808193330-2592e75ae04a h1:mATvB/9r/3gvcejNsXKSkQ6lcIaNec2nyfOdlTBR2lU=\ngithub.com/elazarl/goproxy v0.0.0-20230808193330-2592e75ae04a/go.mod h1:Ro8st/ElPeALwNFlcTpWmkr6IoMFfkjXAvTHpevnDsM=\ngithub.com/emicklei/proto v1.13.2 h1:z/etSFO3uyXeuEsVPzfl56WNgzcvIr42aQazXaQmFZY=\ngithub.com/emicklei/proto v1.13.2/go.mod h1:rn1FgRS/FANiZdD2djyH7TMA9jdRDcYQ9IEN9yvjX0A=\ngithub.com/emirpasic/gods v1.18.1 h1:FXtiHYKDGKCW2KzwZKx0iC0PQmdlorYgdFG9jPXJ1Bc=\ngithub.com/emirpasic/gods v1.18.1/go.mod h1:8tpGGwCnJ5H4r6BWwaV6OrWmMoPhUl5jm/FMNAnJvWQ=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/go-control-plane v0.13.0 h1:HzkeUz1Knt+3bK+8LG1bxOO/jzWZmdxpwC51i202les=\ngithub.com/envoyproxy/go-control-plane v0.13.0/go.mod h1:GRaKG3dwvFoTg4nj7aXdZnvMg4d7nvT/wl9WgVXn3Q8=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/envoyproxy/protoc-gen-validate v1.1.0 h1:tntQDh69XqOCOZsDz0lVJQez/2L6Uu2PdjCQwWCJ3bM=\ngithub.com/envoyproxy/protoc-gen-validate v1.1.0/go.mod h1:sXRDRVmzEbkM7CVcM06s9shE/m23dg3wzjl0UWqJ2q4=\ngithub.com/fatih/color v1.7.0/go.mod h1:Zm6kSWBoL9eyXnKyktHP6abPY2pDugNf5KwzbycvMj4=\ngithub.com/fatih/color v1.9.0/go.mod h1:eQcE1qtQxscV5RaZvpXrrb8Drkc3/DdQ+uUYCNjL+zU=\ngithub.com/fatih/color v1.13.0/go.mod h1:kLAiJbzzSOZDVNGyDpeOxJ47H46qBXwg5ILebYFFOfk=\ngithub.com/fatih/color v1.17.0 h1:GlRw1BRJxkpqUCBKzKOw098ed57fEsKeNjpTe3cSjK4=\ngithub.com/fatih/color v1.17.0/go.mod h1:YZ7TlrGPkiz6ku9fK3TLD/pl3CpsiFyu8N92HLgmosI=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/fsouza/fake-gcs-server v1.50.2 h1:ulrS1pavCOCbMZfN5ZPgBRMFWclON9xDsuLBniXtQoE=\ngithub.com/fsouza/fake-gcs-server v1.50.2/go.mod h1:VU6Zgei4647KuT4XER8WHv5Hcj2NIySndyG8gfvwckA=\ngithub.com/fullsailor/pkcs7 v0.0.0-20190404230743-d7302db945fa h1:RDBNVkRviHZtvDvId8XSGPu3rmpmSe+wKRcEWNgsfWU=\ngithub.com/fullsailor/pkcs7 v0.0.0-20190404230743-d7302db945fa/go.mod h1:KnogPXtdwXqoenmZCw6S+25EAm2MkxbG0deNDu4cbSA=\ngithub.com/gliderlabs/ssh v0.3.7 h1:iV3Bqi942d9huXnzEF2Mt+CY9gLu8DNM4Obd+8bODRE=\ngithub.com/gliderlabs/ssh v0.3.7/go.mod h1:zpHEXBstFnQYtGnB8k8kQLol82umzn/2/snG7alWVD8=\ngithub.com/go-git/gcfg v1.5.1-0.20230307220236-3a3c6141e376 h1:+zs/tPmkDkHx3U66DAb0lQFJrpS6731Oaa12ikc+DiI=\ngithub.com/go-git/gcfg v1.5.1-0.20230307220236-3a3c6141e376/go.mod h1:an3vInlBmSxCcxctByoQdvwPiA7DTK7jaaFDBTtu0ic=\ngithub.com/go-git/go-billy/v5 v5.6.0 h1:w2hPNtoehvJIxR00Vb4xX94qHQi/ApZfX+nBE2Cjio8=\ngithub.com/go-git/go-billy/v5 v5.6.0/go.mod h1:sFDq7xD3fn3E0GOwUSZqHo9lrkmx8xJhA0ZrfvjBRGM=\ngithub.com/go-git/go-git-fixtures/v4 v4.3.2-0.20231010084843-55a94097c399 h1:eMje31YglSBqCdIqdhKBW8lokaMrL3uTkpGYlE2OOT4=\ngithub.com/go-git/go-git-fixtures/v4 v4.3.2-0.20231010084843-55a94097c399/go.mod h1:1OCfN199q1Jm3HZlxleg+Dw/mwps2Wbk9frAWm+4FII=\ngithub.com/go-jose/go-jose/v4 v4.0.2 h1:R3l3kkBds16bO7ZFAEEcofK0MkrAJt3jlJznWZG0nvk=\ngithub.com/go-jose/go-jose/v4 v4.0.2/go.mod h1:WVf9LFMHh/QVrmqrOfqun0C45tMe3RoiKJMPvgWwLfY=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/kit v0.9.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-quicktest/qt v1.101.0 h1:O1K29Txy5P2OK0dGo59b7b0LR6wKfIhttaAhHUyn7eI=\ngithub.com/go-quicktest/qt v1.101.0/go.mod h1:14Bz/f7NwaXPtdYEgzsx46kqSxVwTbzVZsDC26tQJow=\ngithub.com/go-sql-driver/mysql v1.5.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-test/deep v1.0.2 h1:onZX1rnHT3Wv6cqNgYyFOOlgVKJrksuCMCRvJStbMYw=\ngithub.com/go-test/deep v1.0.2/go.mod h1:wGDj63lr65AM2AQyKZd/NYHGb0R+1RLqB8NKt3aSFNA=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/golang-jwt/jwt/v5 v5.2.1 h1:OuVbFODueb089Lh128TAcimifWaLhJwVflnrgM17wHk=\ngithub.com/golang-jwt/jwt/v5 v5.2.1/go.mod h1:pqrtFR0X4osieyHYxtmOUWsAWrfe1Q5UVIyoH402zdk=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.0.1 h1:gK4Kx5IaGY9CD5sPJ36FHiBJ6ZXl0kilRiiCj+jdYp4=\ngithub.com/google/btree v1.0.1/go.mod h1:xXMiIv4Fb/0kKde4SpL7qlzvu5cMJDRkFDxJfI9uaxA=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-replayers/grpcreplay v1.3.0 h1:1Keyy0m1sIpqstQmgz307zhiJ1pV4uIlFds5weTmxbo=\ngithub.com/google/go-replayers/grpcreplay v1.3.0/go.mod h1:v6NgKtkijC0d3e3RW8il6Sy5sqRVUwoQa4mHOGEy8DI=\ngithub.com/google/go-replayers/httpreplay v1.2.0 h1:VM1wEyyjaoU53BwrOnaf9VhAyQQEEioJvFYxYcLRKzk=\ngithub.com/google/go-replayers/httpreplay v1.2.0/go.mod h1:WahEFFZZ7a1P4VM1qEeHy+tME4bwyqPcwWbNlUI1Mcg=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/martian/v3 v3.3.3 h1:DIhPTQrbPkgs2yJYdXU/eNACCG5DVQjySNRNlflZ9Fc=\ngithub.com/google/martian/v3 v3.3.3/go.mod h1:iEPrYcgCF7jA9OtScMFQyAlZZ4YXTKEtJ1E6RWzmBA0=\ngithub.com/google/renameio/v2 v2.0.0 h1:UifI23ZTGY8Tt29JbYFiuyIU3eX+RNFtUwefq9qAhxg=\ngithub.com/google/renameio/v2 v2.0.0/go.mod h1:BtmJXm5YlszgC+TD4HOEEUFgkJP3nLxehU6hfe7jRt4=\ngithub.com/google/s2a-go v0.1.8 h1:zZDs9gcbt9ZPLV0ndSyQk6Kacx2g/X+SKYovpnz3SMM=\ngithub.com/google/s2a-go v0.1.8/go.mod h1:6iNWHTpQ+nfNRN5E00MSdfDwVesa8hhS32PhPO8deJA=\ngithub.com/google/subcommands v1.2.0/go.mod h1:ZjhPrFU+Olkh9WazFPsl27BQ4UPiG37m3yTrtFlrHVk=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/wire v0.6.0 h1:HBkoIh4BdSxoyo9PveV8giw7ZsaBOvzWKfcg/6MrVwI=\ngithub.com/google/wire v0.6.0/go.mod h1:F4QhpQ9EDIdJ1Mbop/NZBRB+5yrR6qg3BnctaoUk6NA=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.4 h1:XYIDZApgAnrN1c855gTgghdIA6Stxb52D5RnLI1SLyw=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.4/go.mod h1:YKe7cfqYXjKGpGvmSg28/fFvhNzinZQm8DGnaburhGA=\ngithub.com/googleapis/gax-go/v2 v2.13.0 h1:yitjD5f7jQHhyDsnhKEBU52NdvvdSeGzlAnDPT0hH1s=\ngithub.com/googleapis/gax-go/v2 v2.13.0/go.mod h1:Z/fvTZXF8/uw7Xu5GuslPw+bplx6SS338j1Is2S+B7A=\ngithub.com/gopherjs/gopherjs v1.17.2 h1:fQnZVsXk8uxXIStYb0N4bGk7jeyTalG/wsZjQ25dO0g=\ngithub.com/gopherjs/gopherjs v1.17.2/go.mod h1:pRRIvn/QzFLrKfvEz3qUuEhtE/zLCWfreZ6J5gM2i+k=\ngithub.com/gorilla/handlers v1.5.2 h1:cLTUSsNkgcwhgRqvCNmdbRWG0A3N4F+M2nWKdScwyEE=\ngithub.com/gorilla/handlers v1.5.2/go.mod h1:dX+xVpaxdSw+q0Qek8SSsl3dfMk3jNddUkMzo0GtH0w=\ngithub.com/gorilla/mux v1.8.1 h1:TuBL49tXwgrFYWhqrNgrUNEY92u81SPhu7sTdzQEiWY=\ngithub.com/gorilla/mux v1.8.1/go.mod h1:AKf9I4AEqPTmMytcMc0KkNouC66V3BtZ4qD5fmWSiMQ=\ngithub.com/gosimple/slug v1.14.0 h1:RtTL/71mJNDfpUbCOmnf/XFkzKRtD6wL6Uy+3akm4Es=\ngithub.com/gosimple/slug v1.14.0/go.mod h1:UiRaFH+GEilHstLUmcBgWcI42viBN7mAb818JrYOeFQ=\ngithub.com/gosimple/unidecode v1.0.1 h1:hZzFTMMqSswvf0LBJZCZgThIZrpDHFXux9KeGmn6T/o=\ngithub.com/gosimple/unidecode v1.0.1/go.mod h1:CP0Cr1Y1kogOtx0bJblKzsVWrqYaqfNOnHzpgWw4Awc=\ngithub.com/hack-pad/hackpadfs v0.2.4 h1:7pmzQGR6JsGq/uB0JWxd3wTBi7I85f46CHGvcfrJsiE=\ngithub.com/hack-pad/hackpadfs v0.2.4/go.mod h1:2XDioLb2NwaQzRYo+cpgNx1iMALzBQ4bQoLhHpArQZM=\ngithub.com/hairyhenderson/go-fsimpl v0.2.1 h1:4ZL0Za0CPIfZlmGtbgkbXCEcmHLCz8lb/+nG1fynNc4=\ngithub.com/hairyhenderson/go-fsimpl v0.2.1/go.mod h1:3U3+ojRth1JGA7iVbIs8xMNlTO+3glax6G86vpjOO7U=\ngithub.com/hairyhenderson/go-git/v5 v5.12.1-0.20240530140403-1b868a7b8a3c h1:xMrmLR6z8h/0tmlyaL7qUVdAUwZxesK39M5UsW6Sag0=\ngithub.com/hairyhenderson/go-git/v5 v5.12.1-0.20240530140403-1b868a7b8a3c/go.mod h1:Zmx3hhKyK7D4XzJi0wnoMKuQxed4SX3slgzF4UhUYJ4=\ngithub.com/hairyhenderson/toml v0.4.2-0.20210923231440-40456b8e66cf h1:I1sbT4ZbIt9i+hB1zfKw2mE8C12TuGxPiW7YmtLbPa4=\ngithub.com/hairyhenderson/toml v0.4.2-0.20210923231440-40456b8e66cf/go.mod h1:jDHmWDKZY6MIIYltYYfW4Rs7hQ50oS4qf/6spSiZAxY=\ngithub.com/hairyhenderson/xignore v0.3.3-0.20230403012150-95fe86932830 h1:f+VnmDFJqYgkq1PRraUsYEzJ7bFr36CmzOb/xfV5Q9s=\ngithub.com/hairyhenderson/xignore v0.3.3-0.20230403012150-95fe86932830/go.mod h1:UqUZ8CHnVcV2/rb26Ydn+PQO7bAI8kFONU/vaK1Q/WU=\ngithub.com/hairyhenderson/yaml v0.0.0-20220618171115-2d35fca545ce h1:cVkYhlWAxwuS2/Yp6qPtcl0fGpcWxuZNonywHZ6/I+s=\ngithub.com/hairyhenderson/yaml v0.0.0-20220618171115-2d35fca545ce/go.mod h1:7TyiGlHI+IO+iJbqRZ82QbFtvgj/AIcFm5qc9DLn7Kc=\ngithub.com/hashicorp/consul/api v1.30.0 h1:ArHVMMILb1nQv8vZSGIwwQd2gtc+oSQZ6CalyiyH2XQ=\ngithub.com/hashicorp/consul/api v1.30.0/go.mod h1:B2uGchvaXVW2JhFoS8nqTxMD5PBykr4ebY4JWHTTeLM=\ngithub.com/hashicorp/consul/sdk v0.16.1 h1:V8TxTnImoPD5cj0U9Spl0TUxcytjcbbJeADFF07KdHg=\ngithub.com/hashicorp/consul/sdk v0.16.1/go.mod h1:fSXvwxB2hmh1FMZCNl6PwX0Q/1wdWtHJcZ7Ea5tns0s=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=\ngithub.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-cleanhttp v0.5.0/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=\ngithub.com/hashicorp/go-cleanhttp v0.5.2 h1:035FKYIWjmULyFRBKPs8TBQoi0x6d9G4xc9neXJWAZQ=\ngithub.com/hashicorp/go-cleanhttp v0.5.2/go.mod h1:kO/YDlP8L1346E6Sodw+PrpBSV4/SoxCXGY6BqNFT48=\ngithub.com/hashicorp/go-hclog v1.5.0/go.mod h1:W4Qnvbt70Wk/zYJryRzDRU/4r0kIg0PVHBcfoyhpF5M=\ngithub.com/hashicorp/go-hclog v1.6.3 h1:Qr2kF+eVWjTiYmU7Y31tYlP1h0q/X3Nl3tPGdaB11/k=\ngithub.com/hashicorp/go-hclog v1.6.3/go.mod h1:W4Qnvbt70Wk/zYJryRzDRU/4r0kIg0PVHBcfoyhpF5M=\ngithub.com/hashicorp/go-immutable-radix v1.0.0/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-immutable-radix v1.3.1 h1:DKHmCUm2hRBK510BaiZlwvpD40f8bJFeZnpfm2KLowc=\ngithub.com/hashicorp/go-immutable-radix v1.3.1/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-msgpack v0.5.3/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=\ngithub.com/hashicorp/go-msgpack v0.5.5 h1:i9R9JSrqIz0QVLz3sz+i3YJdT7TTSLcfLLzJi9aZTuI=\ngithub.com/hashicorp/go-msgpack v0.5.5/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=\ngithub.com/hashicorp/go-multierror v1.0.0/go.mod h1:dHtQlpGsu+cZNNAkkCN/P3hoUDHhCYQXV3UM06sGGrk=\ngithub.com/hashicorp/go-multierror v1.1.0/go.mod h1:spPvp8C1qA32ftKqdAHm4hHTbPw+vmowP0z+KUhOZdA=\ngithub.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\ngithub.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\ngithub.com/hashicorp/go-retryablehttp v0.5.3/go.mod h1:9B5zBasrRhHXnJnui7y6sL7es7NDiJgTc6Er0maI1Xs=\ngithub.com/hashicorp/go-retryablehttp v0.7.7 h1:C8hUCYzor8PIfXHa4UrZkU4VvK8o9ISHxT2Q8+VepXU=\ngithub.com/hashicorp/go-retryablehttp v0.7.7/go.mod h1:pkQpWZeYWskR+D1tR2O5OcBFOxfA7DoAO6xtkuQnHTk=\ngithub.com/hashicorp/go-rootcerts v1.0.2 h1:jzhAVGtqPKbwpyCPELlgNWhE1znq+qwJtW5Oi2viEzc=\ngithub.com/hashicorp/go-rootcerts v1.0.2/go.mod h1:pqUvnprVnM5bf7AOirdbb01K4ccR319Vf4pU3K5EGc8=\ngithub.com/hashicorp/go-secure-stdlib/awsutil v0.3.0 h1:I8bynUKMh9I7JdwtW9voJ0xmHvBpxQtLjrMFDYmhOxY=\ngithub.com/hashicorp/go-secure-stdlib/awsutil v0.3.0/go.mod h1:oKHSQs4ivIfZ3fbXGQOop1XuDfdSb8RIsWTGaAanSfg=\ngithub.com/hashicorp/go-secure-stdlib/parseutil v0.1.8 h1:iBt4Ew4XEGLfh6/bPk4rSYmuZJGizr6/x/AEizP0CQc=\ngithub.com/hashicorp/go-secure-stdlib/parseutil v0.1.8/go.mod h1:aiJI+PIApBRQG7FZTEBx5GiiX+HbOHilUdNxUZi4eV0=\ngithub.com/hashicorp/go-secure-stdlib/strutil v0.1.2 h1:kes8mmyCpxJsI7FTwtzRqEy9CdjCtrXrXGuOpxEA7Ts=\ngithub.com/hashicorp/go-secure-stdlib/strutil v0.1.2/go.mod h1:Gou2R9+il93BqX25LAKCLuM+y9U2T4hlwvT1yprcna4=\ngithub.com/hashicorp/go-sockaddr v1.0.0/go.mod h1:7Xibr9yA9JjQq1JpNB2Vw7kxv8xerXegt+ozgdvDeDU=\ngithub.com/hashicorp/go-sockaddr v1.0.7 h1:G+pTkSO01HpR5qCxg7lxfsFEZaG+C0VssTy/9dbT+Fw=\ngithub.com/hashicorp/go-sockaddr v1.0.7/go.mod h1:FZQbEYa1pxkQ7WLpyXJ6cbjpT8q0YgQaK/JakXqGyWw=\ngithub.com/hashicorp/go-syslog v1.0.0/go.mod h1:qPfqrKkXGihmCqbJM2mZgkZGvKG1dFdvsLplgctolz4=\ngithub.com/hashicorp/go-uuid v1.0.0/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.1/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.3 h1:2gKiV6YVmrJ1i2CKKa9obLvRieoRGviZFL26PcT/Co8=\ngithub.com/hashicorp/go-uuid v1.0.3/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-version v1.2.1 h1:zEfKbn2+PDgroKdiOzqiE8rsmLqU2uwi5PB5pBJ3TkI=\ngithub.com/hashicorp/go-version v1.2.1/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v1.0.2 h1:dV3g9Z/unq5DpblPpw+Oqcv4dU/1omnb4Ok8iPY6p1c=\ngithub.com/hashicorp/golang-lru v1.0.2/go.mod h1:iADmTwqILo4mZ8BN3D2Q6+9jd8WM5uGBxy+E8yxSoD4=\ngithub.com/hashicorp/hcl v1.0.0 h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=\ngithub.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=\ngithub.com/hashicorp/logutils v1.0.0/go.mod h1:QIAnNjmIWmVIIkWDTG1z5v++HQmx9WQRO+LraFDTW64=\ngithub.com/hashicorp/mdns v1.0.4/go.mod h1:mtBihi+LeNXGtG8L9dX59gAEa12BDtBQSp4v/YAJqrc=\ngithub.com/hashicorp/memberlist v0.5.0 h1:EtYPN8DpAURiapus508I4n9CzHs2W+8NZGbmmR/prTM=\ngithub.com/hashicorp/memberlist v0.5.0/go.mod h1:yvyXLpo0QaGE59Y7hDTsTzDD25JYBZ4mHgHUZ8lrOI0=\ngithub.com/hashicorp/serf v0.10.1 h1:Z1H2J60yRKvfDYAOZLd2MU0ND4AH/WDz7xYHDWQsIPY=\ngithub.com/hashicorp/serf v0.10.1/go.mod h1:yL2t6BqATOLGc5HF7qbFkTfXoPIY0WZdWHfEvMqbG+4=\ngithub.com/hashicorp/vault/api v1.15.0 h1:O24FYQCWwhwKnF7CuSqP30S51rTV7vz1iACXE/pj5DA=\ngithub.com/hashicorp/vault/api v1.15.0/go.mod h1:+5YTO09JGn0u+b6ySD/LLVf8WkJCPLAL2Vkmrn2+CM8=\ngithub.com/hashicorp/vault/api/auth/approle v0.8.0 h1:FuVtWZ0xD6+wz1x0l5s0b4852RmVXQNEiKhVXt6lfQY=\ngithub.com/hashicorp/vault/api/auth/approle v0.8.0/go.mod h1:NV7O9r5JUtNdVnqVZeMHva81AIdpG0WoIQohNt1VCPM=\ngithub.com/hashicorp/vault/api/auth/aws v0.8.0 h1:6E14D7eHjV+Ytk8HmKLbTGS/LaXD9hP2FXe7IIKCrHc=\ngithub.com/hashicorp/vault/api/auth/aws v0.8.0/go.mod h1:SweK5366gCeO5krBk6Fpjz/MX2oa+iiIZz/Nu8/nMZw=\ngithub.com/hashicorp/vault/api/auth/userpass v0.8.0 h1:JFFzMld+VO/S1v8HQNJzcy+3o+xfx/iH49dsiQ1G5jk=\ngithub.com/hashicorp/vault/api/auth/userpass v0.8.0/go.mod h1:+XbsSnbbyo+yjySfKcIsyl28kO4C/c4Czo7og0XCtUo=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/itchyny/gojq v0.12.17 h1:8av8eGduDb5+rvEdaOO+zQUjA04MS0m3Ps8HiD+fceg=\ngithub.com/itchyny/gojq v0.12.17/go.mod h1:WBrEMkgAfAGO1LUcGOckBl5O726KPp+OlkKug0I/FEY=\ngithub.com/itchyny/timefmt-go v0.1.6 h1:ia3s54iciXDdzWzwaVKXZPbiXzxxnv1SPGFfM/myJ5Q=\ngithub.com/itchyny/timefmt-go v0.1.6/go.mod h1:RRDZYC5s9ErkjQvTvvU7keJjxUYzIISJGxm9/mAERQg=\ngithub.com/jbenet/go-context v0.0.0-20150711004518-d14ea06fba99 h1:BQSFePA1RWJOlocH6Fxy8MmwDt+yVQYULKfN0RoTN8A=\ngithub.com/jbenet/go-context v0.0.0-20150711004518-d14ea06fba99/go.mod h1:1lJo3i6rXxKeerYnT8Nvf0QmHCRC1n8sfWVwXF2Frvo=\ngithub.com/jmespath/go-jmespath v0.3.0/go.mod h1:9QtRXoHjLGCJ5IBSaohpXITPlowMeeYCZ7fLUTSywik=\ngithub.com/jmespath/go-jmespath v0.4.0 h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=\ngithub.com/jmespath/go-jmespath v0.4.0/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1 h1:shLQSRRSCCPj3f2gpwzGwWFoC7ycTf1rcQZHOlsJ6N8=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1/go.mod h1:L3OGu8Wl2/fWfCI6z80xFu9LTZmf1ZRjMHUOPmWr69U=\ngithub.com/johannesboyne/gofakes3 v0.0.0-20240217095638-c55a48f17be6 h1:W8heH5NR7dfdB4FehSFI+DxjCbVKe9fPkPqKzCPJwnM=\ngithub.com/johannesboyne/gofakes3 v0.0.0-20240217095638-c55a48f17be6/go.mod h1:AxgWC4DDX54O2WDoQO1Ceabtn6IbktjU/7bigor+66g=\ngithub.com/joho/godotenv v1.5.1 h1:7eLL/+HRGLY0ldzfGMeQkb7vMd0as4CfYvUVzLqw0N0=\ngithub.com/joho/godotenv v1.5.1/go.mod h1:f4LDr5Voq0i2e/R5DDNOoa2zzDfwtkZa6DnEwAbqwq4=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.9/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/jtolds/gls v4.20.0+incompatible h1:xdiiI2gbIgH/gLH7ADydsJ1uDOEzR8yvV7C0MuV77Wo=\ngithub.com/jtolds/gls v4.20.0+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/kevinburke/ssh_config v1.2.0 h1:x584FjTGwHzMwvHx18PXxbBVzfnxogHaAReU4gf13a4=\ngithub.com/kevinburke/ssh_config v1.2.0/go.mod h1:CT57kijsi8u/K/BOFA39wgDQJ9CxiF4nAY/ojJ6r6mM=\ngithub.com/keybase/go-keychain v0.0.0-20231219164618-57a3676c3af6 h1:IsMZxCuZqKuao2vNdfD82fjjgPLfyHLpR41Z88viRWs=\ngithub.com/keybase/go-keychain v0.0.0-20231219164618-57a3676c3af6/go.mod h1:3VeWNIJaW+O5xpRQbPp0Ybqu1vJd/pm7s2F473HRrkw=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/lib/pq v1.10.9 h1:YXG7RB+JIjhP29X+OtkiDnYaXQwpS4JEWq7dtCCRUEw=\ngithub.com/lib/pq v1.10.9/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/lmittmann/tint v1.0.6 h1:vkkuDAZXc0EFGNzYjWcV0h7eEX+uujH48f/ifSkJWgc=\ngithub.com/lmittmann/tint v1.0.6/go.mod h1:HIS3gSy7qNwGCj+5oRjAutErFBl4BzdQP6cJZ0NfMwE=\ngithub.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=\ngithub.com/mattn/go-colorable v0.1.4/go.mod h1:U0ppj6V5qS13XJ6of8GYAs25YV2eR4EVcfRqFIhoBtE=\ngithub.com/mattn/go-colorable v0.1.6/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\ngithub.com/mattn/go-colorable v0.1.9/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\ngithub.com/mattn/go-colorable v0.1.12/go.mod h1:u5H1YNBxpqRaxsYJYSkiCWKzEfiAb1Gb520KVy5xxl4=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.3/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=\ngithub.com/mattn/go-isatty v0.0.8/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\ngithub.com/mattn/go-isatty v0.0.11/go.mod h1:PhnuNfih5lzO57/f3n+odYbM4JtupLOxQOAqxQCu2WE=\ngithub.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\ngithub.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/miekg/dns v1.1.26/go.mod h1:bPDLeHnStXmXAq1m/Ch/hvfNHr14JKNPMBo3VZKjuso=\ngithub.com/miekg/dns v1.1.41 h1:WMszZWJG0XmzbK9FEmzH2TVcqYzFesusSIB41b8KHxY=\ngithub.com/miekg/dns v1.1.41/go.mod h1:p6aan82bvRIyn+zDIv9xYNUpwa73JcSh9BKwknJysuI=\ngithub.com/mitchellh/cli v1.1.0/go.mod h1:xcISNoH86gajksDmfB23e/pu+B+GeFRMYmoHXxx3xhI=\ngithub.com/mitchellh/go-homedir v1.1.0 h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=\ngithub.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/mitchellh/go-wordwrap v1.0.1 h1:TLuKupo69TCn6TQSyGxwI1EblZZEsQ0vMlAFQflz0v0=\ngithub.com/mitchellh/go-wordwrap v1.0.1/go.mod h1:R62XHJLzvMFRBbcrT7m7WgmE1eOyTSsCt+hzestvNj0=\ngithub.com/mitchellh/mapstructure v0.0.0-20160808181253-ca63d7c062ee/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=\ngithub.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/onsi/gomega v1.34.1 h1:EUMJIKUjM8sKjYbtxQI9A4z2o+rruxnzNvpknOXie6k=\ngithub.com/onsi/gomega v1.34.1/go.mod h1:kU1QgUvBDLXBJq618Xvm2LUX6rSAfRaFRTcdOeDLwwY=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.1.0 h1:8SG7/vwALn54lVB/0yZ/MMwhFrPYtpEHQb2IpWsCzug=\ngithub.com/opencontainers/image-spec v1.1.0/go.mod h1:W4s4sFTMaBeK1BQLXbG4AdM2szdn85PY75RI83NrTrM=\ngithub.com/pascaldekloe/goe v0.0.0-20180627143212-57f6aae5913c/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=\ngithub.com/pascaldekloe/goe v0.1.0 h1:cBOtyMzM9HTpWjXfbbunk26uA6nG3a8n06Wieeh0MwY=\ngithub.com/pascaldekloe/goe v0.1.0/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=\ngithub.com/pelletier/go-toml/v2 v2.2.3 h1:YmeHyLY8mFWbdkNWwpr+qIL2bEqT0o95WSdkNHvL12M=\ngithub.com/pelletier/go-toml/v2 v2.2.3/go.mod h1:MfCQTFTvCcUyyvvwm1+G6H/jORL20Xlb6rzQu9GuUkc=\ngithub.com/pjbgf/sha1cd v0.3.0 h1:4D5XXmUUBUl/xQ6IjCkEAbqXskkq/4O7LmGn0AqMDs4=\ngithub.com/pjbgf/sha1cd v0.3.0/go.mod h1:nZ1rrWOcGJ5uZgEEVL1VUM9iRQiZvWdbZjkKyFzPPsI=\ngithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c h1:+mdjkGKdHQG3305AYmdv1U2eRNDiU2ErMBj1gwrq8eQ=\ngithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c/go.mod h1:7rwL4CYBLnjLxUqIJNnCWiEdr3bn6IUYi15bNlnbCCU=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/xattr v0.4.10 h1:Qe0mtiNFHQZ296vRgUjRCoPHPqH7VdTOrZx3g0T+pGA=\ngithub.com/pkg/xattr v0.4.10/go.mod h1:di8WF84zAKk8jzR1UBTEWh9AUlIZZ7M/JNt8e9B6ktU=\ngithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10 h1:GFCKgmp0tecUJ0sJuv4pzYCqS9+RGSn52M3FUwPs+uo=\ngithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10/go.mod h1:t/avpk3KcrXxUnYOhZhMXJlSEyie6gQbtLq5NM3loB8=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/posener/complete v1.1.1/go.mod h1:em0nMJCgc9GFtwrmVmEMR/ZL6WyhyjMBndrE9hABlRI=\ngithub.com/posener/complete v1.2.3/go.mod h1:WZIdtGGp+qx0sLrYKtIRAruyNpv6hFCicSgv7Sy7s/s=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=\ngithub.com/prometheus/client_golang v1.4.0/go.mod h1:e9GMxYsXl05ICDXkRhurwBS4Q3OK1iX/F2sw+iXX5zU=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.2.0/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.9.1/go.mod h1:yhUN8i9wzaXS3w1O07YhxHEBxD+W35wd8bs7vj7HSQ4=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.0.8/go.mod h1:7Qr8sr6344vo1JqZ6HhLceV9o3AJ1Ff+GxbHq6oeK9A=\ngithub.com/protocolbuffers/txtpbfmt v0.0.0-20240823084532-8e6b51fa9bef h1:ej+64jiny5VETZTqcc1GFVAPEtaSk6U1D0kKC2MS5Yc=\ngithub.com/protocolbuffers/txtpbfmt v0.0.0-20240823084532-8e6b51fa9bef/go.mod h1:jgxiZysxFPM+iWKwQwPR+y+Jvo54ARd4EisXxKYpB5c=\ngithub.com/redis/go-redis/v9 v9.6.1 h1:HHDteefn6ZkTtY5fGUE8tj8uy85AHk6zP7CpzIAM0y4=\ngithub.com/redis/go-redis/v9 v9.6.1/go.mod h1:0C0c6ycQsdpVNQpxb1njEQIqkx5UcsM8FJCQLgE9+RA=\ngithub.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=\ngithub.com/rogpeppe/go-internal v1.13.1 h1:KvO1DLK/DRN07sQ1LQKScxyZJuNnedQ5/wKSR38lUII=\ngithub.com/rogpeppe/go-internal v1.13.1/go.mod h1:uMEvuHeurkdAXX61udpOXGD/AzZDWNMNyH2VO9fmH0o=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=\ngithub.com/ryanuber/go-glob v1.0.0 h1:iQh3xXAumdQ+4Ufa5b25cRpC5TYKlno6hsv6Cb3pkBk=\ngithub.com/ryanuber/go-glob v1.0.0/go.mod h1:807d1WSdnB0XRJzKNil9Om6lcp/3a0v4qIHxIXzX/Yc=\ngithub.com/ryszard/goskiplist v0.0.0-20150312221310-2dfbae5fcf46 h1:GHRpF1pTW19a8tTFrMLUcfWwyC0pnifVo2ClaLq+hP8=\ngithub.com/ryszard/goskiplist v0.0.0-20150312221310-2dfbae5fcf46/go.mod h1:uAQ5PCi+MFsC7HjREoAz1BU+Mq60+05gifQSsHSDG/8=\ngithub.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529 h1:nn5Wsu0esKSJiIVhscUtVbo7ada43DJhG55ua/hjS5I=\ngithub.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529/go.mod h1:DxrIzT+xaE7yg65j358z/aeFdxmN0P9QXhEzd20vsDc=\ngithub.com/sergi/go-diff v1.3.2-0.20230802210424-5b0b94c5c0d3 h1:n661drycOFuPLCN3Uc8sB6B/s6Z4t2xvBgU1htSHuq8=\ngithub.com/sergi/go-diff v1.3.2-0.20230802210424-5b0b94c5c0d3/go.mod h1:A0bzQcvG0E7Rwjx0REVgAGH58e96+X0MeOfepqsbeW4=\ngithub.com/shabbyrobe/gocovmerge v0.0.0-20190829150210-3e036491d500/go.mod h1:+njLrG5wSeoG4Ds61rFgEzKvenR2UHbjMoDHsczxly0=\ngithub.com/shabbyrobe/gocovmerge v0.0.0-20230507112040-c3350d9342df h1:S77Pf5fIGMa7oSwp8SQPp7Hb4ZiI38K3RNBKD2LLeEM=\ngithub.com/shabbyrobe/gocovmerge v0.0.0-20230507112040-c3350d9342df/go.mod h1:dcuzJZ83w/SqN9k4eQqwKYMgmKWzg/KzJAURBhRL1tc=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/sirupsen/logrus v1.7.0/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/skeema/knownhosts v1.2.2 h1:Iug2P4fLmDw9f41PB6thxUkNUkJzB5i+1/exaj40L3A=\ngithub.com/skeema/knownhosts v1.2.2/go.mod h1:xYbVRSPxqBZFrdmDyMmsOs+uX1UZC3nTN3ThzgDxUwo=\ngithub.com/smarty/assertions v1.15.0 h1:cR//PqUBUiQRakZWqBiFFQ9wb8emQGDb0HeGdqGByCY=\ngithub.com/smarty/assertions v1.15.0/go.mod h1:yABtdzeQs6l1brC900WlRNwj6ZR55d7B+E8C6HtKdec=\ngithub.com/smartystreets/goconvey v1.8.1 h1:qGjIddxOk4grTu9JPOU31tVfq3cNdBlNa5sSznIX1xY=\ngithub.com/smartystreets/goconvey v1.8.1/go.mod h1:+/u4qLyY6x1jReYOp7GOM2FSt8aP9CzCZL03bI28W60=\ngithub.com/spf13/afero v1.2.1/go.mod h1:9ZxEEn6pIJ8Rxe320qSDBk6AsU0r9pR7Q4OcevTdifk=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2 h1:xuMeJ0Sdp5ZMRXx/aWO6RZxdr3beISkG5/G/aIRr3pY=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.2/go.mod h1:R6va5+xMeoiuVRoj+gSkQ7d3FALtqAAGI1FQKckRals=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.2/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/tv42/httpunix v0.0.0-20150427012821-b75d8614f926/go.mod h1:9ESjWnEqriFuLhtthL60Sar/7RFoluCcXsuvEwTV5KM=\ngithub.com/ugorji/go/codec v1.2.12 h1:9LC83zGrHhuUA9l16C9AHXAqEV/2wBQ4nkvumAE65EE=\ngithub.com/ugorji/go/codec v1.2.12/go.mod h1:UNopzCgEMSXjBc6AOMqYvWC1ktqTAfzJZUZgYf6w6lg=\ngithub.com/xanzy/ssh-agent v0.3.3 h1:+/15pJfg/RsTxqYcX6fHqOXZwwMP+2VyYWJeWM2qQFM=\ngithub.com/xanzy/ssh-agent v0.3.3/go.mod h1:6dzNDKs0J9rVPHPhaGCukekBHKqfl+L3KghI1Bc68Uw=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngo.etcd.io/bbolt v1.3.5/go.mod h1:G5EMThwa9y8QZGBClrRx5EY+Yw9kAhnjy3bSjsnlVTQ=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.opentelemetry.io/auto/sdk v1.1.0 h1:cH53jehLUN6UFLY71z+NDOiNJqDdPRaXzTel0sJySYA=\ngo.opentelemetry.io/auto/sdk v1.1.0/go.mod h1:3wSPjt5PWp2RhlCcmmOial7AvC4DQqZb7a7wCow3W8A=\ngo.opentelemetry.io/contrib/detectors/gcp v1.29.0 h1:TiaiXB4DpGD3sdzNlYQxruQngn5Apwzi1X0DRhuGvDQ=\ngo.opentelemetry.io/contrib/detectors/gcp v1.29.0/go.mod h1:GW2aWZNwR2ZxDLdv8OyC2G8zkRoQBuURgV7RPQgcPoU=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.54.0 h1:r6I7RJCN86bpD/FQwedZ0vSixDpwuWREjW9oRMsmqDc=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.54.0/go.mod h1:B9yO6b04uB80CzjedvewuqDhxJxi11s7/GtiGa8bAjI=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0 h1:TT4fX+nBOA/+LUkobKGW1ydGcn+G3vRw9+g5HwCphpk=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0/go.mod h1:L7UH0GbB0p47T4Rri3uHjbpCFYrVrwc1I25QhNPiGK8=\ngo.opentelemetry.io/otel v1.33.0 h1:/FerN9bax5LoK51X/sI0SVYrjSE0/yUL7DpxW4K3FWw=\ngo.opentelemetry.io/otel v1.33.0/go.mod h1:SUUkR6csvUQl+yjReHu5uM3EtVV7MBm5FHKRlNx4I8I=\ngo.opentelemetry.io/otel/metric v1.33.0 h1:r+JOocAyeRVXD8lZpjdQjzMadVZp2M4WmQ+5WtEnklQ=\ngo.opentelemetry.io/otel/metric v1.33.0/go.mod h1:L9+Fyctbp6HFTddIxClbQkjtubW6O9QS3Ann/M82u6M=\ngo.opentelemetry.io/otel/sdk v1.33.0 h1:iax7M131HuAm9QkZotNHEfstof92xM+N8sr3uHXc2IM=\ngo.opentelemetry.io/otel/sdk v1.33.0/go.mod h1:A1Q5oi7/9XaMlIWzPSxLRWOI8nG3FnzHJNbiENQuihM=\ngo.opentelemetry.io/otel/sdk/metric v1.29.0 h1:K2CfmJohnRgvZ9UAj2/FhIf/okdWcNdBwe1m8xFXiSY=\ngo.opentelemetry.io/otel/sdk/metric v1.29.0/go.mod h1:6zZLdCl2fkauYoZIOn/soQIDSWFmNSRcICarHfuhNJQ=\ngo.opentelemetry.io/otel/trace v1.33.0 h1:cCJuF7LRjUFso9LPnEAHJDB2pqzp+hbO8eu1qqW2d/s=\ngo.opentelemetry.io/otel/trace v1.33.0/go.mod h1:uIcdVUZMpTAmz0tI1z04GoVSezK37CbGV4fr1f2nBck=\ngo4.org/intern v0.0.0-20211027215823-ae77deb06f29/go.mod h1:cS2ma+47FKrLPdXFpr7CuxiTW3eyJbWew4qx0qtQWDA=\ngo4.org/intern v0.0.0-20230525184215-6c62f75575cb h1:ae7kzL5Cfdmcecbh22ll7lYP3iuUdnfnhiPcSaDgH/8=\ngo4.org/intern v0.0.0-20230525184215-6c62f75575cb/go.mod h1:Ycrt6raEcnF5FTsLiLKkhBTO6DPX3RCUCUVnks3gFJU=\ngo4.org/netipx v0.0.0-20231129151722-fdeea329fbba h1:0b9z3AuHCjxk0x/opv64kcgZLBseWJUpBw5I82+2U4M=\ngo4.org/netipx v0.0.0-20231129151722-fdeea329fbba/go.mod h1:PLyyIXexvUFg3Owu6p/WfdlivPbZJsZdgWZlrGope/Y=\ngo4.org/unsafe/assume-no-moving-gc v0.0.0-20211027215541-db492cf91b37/go.mod h1:FftLjUGFEDu5k8lt0ddY+HcrH/qU/0qk+H8j9/nTl3E=\ngo4.org/unsafe/assume-no-moving-gc v0.0.0-20230525183740-e7c30c78aeb2/go.mod h1:FftLjUGFEDu5k8lt0ddY+HcrH/qU/0qk+H8j9/nTl3E=\ngo4.org/unsafe/assume-no-moving-gc v0.0.0-20231121144256-b99613f794b6 h1:lGdhQUN/cnWdSH3291CUuxSEqc+AsGTiDxPP3r2J0l4=\ngo4.org/unsafe/assume-no-moving-gc v0.0.0-20231121144256-b99613f794b6/go.mod h1:FftLjUGFEDu5k8lt0ddY+HcrH/qU/0qk+H8j9/nTl3E=\ngocloud.dev v0.40.0 h1:f8LgP+4WDqOG/RXoUcyLpeIAGOcAbZrZbDQCUee10ng=\ngocloud.dev v0.40.0/go.mod h1:drz+VyYNBvrMTW0KZiBAYEdl8lbNZx+OQ7oQvdrFmSQ=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190923035154-9ee001bba392/go.mod h1:/lpIB1dKB+9EgE3H3cr1v9wB50oz8l4C4h62xy7jSTY=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.0.0-20220622213112-05595931fe9d/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\ngolang.org/x/crypto v0.3.1-0.20221117191849-2c476679df9a/go.mod h1:hebNnKkNXi2UzZN1eVRvBB7co0a+JxK6XbPiWVs/3J4=\ngolang.org/x/crypto v0.7.0/go.mod h1:pYwdfH91IfpZVANVyUOhSIPZaFoJGxTFbZhFTx+dXZU=\ngolang.org/x/crypto v0.13.0/go.mod h1:y6Z2r+Rw4iayiXXAIxJIDAJ1zMW4yaTpebo8fPOliYc=\ngolang.org/x/crypto v0.18.0/go.mod h1:R0j02AL6hcrfOiy9T4ZYp/rcWeMxM3L6QYxlOuEG1mg=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20240719175910-8a7402abbf56 h1:2dVuKD2vS7b0QIHQbpyTISPd0LeHDbnYEryqj5Q1ug8=\ngolang.org/x/exp v0.0.0-20240719175910-8a7402abbf56/go.mod h1:M4RDyNAINzryxdtnbRXRL/OHtkFuWGRjvuhBJpk2IlY=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.10.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.12.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.14.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/mod v0.21.0 h1:vvrHzRwRfVKSiLrG+d4FMl/Qi4ukBCE6kZlTUkDYRT0=\ngolang.org/x/mod v0.21.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190923162816-aa69164e4478/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210410081132-afb366fc7cd1/go.mod h1:9tjilg8BloeKEkVJvy7fQ90B1CfIiPueXVOjqfkSzI8=\ngolang.org/x/net v0.0.0-20211112202133-69e39bad7dc2/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.1.0/go.mod h1:Cx3nUiGt4eDBEyega/BKRp+/AlGL8hYe7U9odMt2Cco=\ngolang.org/x/net v0.2.0/go.mod h1:KqCZLdyyvdV855qA2rE3GC2aiw5xGR5TEjj8smXukLY=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.8.0/go.mod h1:QVkue5JL9kW//ek3r6jTKnTFis1tRmNAW2P1shuFdJc=\ngolang.org/x/net v0.9.0/go.mod h1:d48xBJpPfHeWQsugry2m+kC02ZBRGRgulfHnEXEuWns=\ngolang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=\ngolang.org/x/net v0.15.0/go.mod h1:idbUs1IY1+zTqbi8yxTbhexhEEk5ur9LInksu6HrEpk=\ngolang.org/x/net v0.20.0/go.mod h1:z8BVo6PvndSri0LbOE3hAn0apkU+1YvI6E70E9jsnvY=\ngolang.org/x/net v0.32.0 h1:ZqPmj8Kzc+Y6e0+skZsuACbx+wzMgo5MQsJh9Qd6aYI=\ngolang.org/x/net v0.32.0/go.mod h1:CwU0IoeOlnQQWJ6ioyFrfRuomB8GKF6KbYXZVyeXNfs=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.24.0 h1:KTBBxWqUa0ykRPLtV69rRto9TLXcqYkeswu48x/gvNE=\ngolang.org/x/oauth2 v0.24.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.3.0/go.mod h1:FU7BRWz2tNW+3quACPkgCx/L+uEAv1htQ0V83Z9Rj+Y=\ngolang.org/x/sync v0.6.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180823144017-11551d06cbcc/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190922100055-0a153f010e69/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190924154521-2837fb4f24fe/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210303074136-134d130e1a04/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210927094055-39ccf1dd6fa6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220503163025-988cb79eb6c6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220728004956-3c1f35247d10/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.2.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.3.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.7.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.12.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.16.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.1.0/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.2.0/go.mod h1:TVmDHMZPmdnySmBfhjOoOdhjzdE1h4u1VwSiw2l1Nuc=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.6.0/go.mod h1:m6U89DPEgQRMq3DNkDClhWw02AUbt2daBVO4cn4Hv9U=\ngolang.org/x/term v0.7.0/go.mod h1:P32HKFT3hSsZrRxla30E9HqToFYAQPCMs/zFMBUFqPY=\ngolang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=\ngolang.org/x/term v0.12.0/go.mod h1:owVbMEjm3cBLCHdkQu9b1opXd4ETQWc3BhuQGKgXgvU=\ngolang.org/x/term v0.16.0/go.mod h1:yn7UURbUtPyrVJPGPq404EukNFxcm/foM+bV/bfcDsY=\ngolang.org/x/term v0.27.0 h1:WP60Sv1nlK1T6SupCHbXzSaN0b9wUmsPoRS9b61A23Q=\ngolang.org/x/term v0.27.0/go.mod h1:iMsnZpn0cago0GOrHO2+Y7u7JPn5AylBrcoWkElMTSM=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.4.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.8.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.13.0/go.mod h1:TvPlkZtksWOMsz7fbANvkp4WM8x/WCo/om8BMLbz+aE=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.7.0 h1:ntUhktv3OPE6TgYxXWv9vKvUSJyIFJlyohwbkEwPrKQ=\ngolang.org/x/time v0.7.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190829051458-42f498d34c4d/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20190907020128-2ca718005c18/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/tools v0.8.0/go.mod h1:JxBZ99ISMI5ViVkT1tr6tdNmXeTrcpVSD3vZ1RsRdN4=\ngolang.org/x/tools v0.13.0/go.mod h1:HvlwmtVNQAhOuCjW7xxvovg8wbNq7LwfXh/k7wXUl58=\ngolang.org/x/tools v0.17.0/go.mod h1:xsh6VxdV005rRVaS6SSAf9oiAqljS7UZUacMZ8Bnsps=\ngolang.org/x/tools v0.26.0 h1:v/60pFQmzmT9ExmjDv2gGIfi3OqfKoEP6I5+umXlbnQ=\ngolang.org/x/tools v0.26.0/go.mod h1:TPVVj70c7JJ3WCazhD8OdXcZg/og+b9+tH/KxylGwH0=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20240716161551-93cc26a95ae9 h1:LLhsEBxRTBLuKlQxFBYUOU8xyFgXv6cOTp2HASDlsDk=\ngolang.org/x/xerrors v0.0.0-20240716161551-93cc26a95ae9/go.mod h1:NDW/Ps6MPRej6fsCIbMTohpP40sJ/P/vI1MoTEGwX90=\ngoogle.golang.org/api v0.201.0 h1:+7AD9JNM3tREtawRMu8sOjSbb8VYcYXJG/2eEOmfDu0=\ngoogle.golang.org/api v0.201.0/go.mod h1:HVY0FCHVs89xIW9fzf/pBvOEm+OolHa86G/txFezyq4=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20241007155032-5fefd90f89a9 h1:nFS3IivktIU5Mk6KQa+v6RKkHUpdQpphqGNLxqNnbEk=\ngoogle.golang.org/genproto v0.0.0-20241007155032-5fefd90f89a9/go.mod h1:tEzYTYZxbmVNOu0OAFH9HzdJtLn6h4Aj89zzlBCdHms=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241209162323-e6fa225c2576 h1:CkkIfIt50+lT6NHAVoRYEyAvQGFM7xEwXUUywFvEb3Q=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241209162323-e6fa225c2576/go.mod h1:1R3kvZ1dtP3+4p4d3G8uJ8rFk/fWlScl38vanWACI08=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241209162323-e6fa225c2576 h1:8ZmaLZE4XWrtU3MyClkYqqtl6Oegr3235h7jxsDyqCY=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241209162323-e6fa225c2576/go.mod h1:5uTbfoYQed2U9p3KIj2/Zzm02PYhndfdmML0qC3q3FU=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.68.1 h1:oI5oTa11+ng8r8XMMN7jAOmWfPZWbYpCFaMUTACxkM0=\ngoogle.golang.org/grpc v1.68.1/go.mod h1:+q1XYFJjShcqn0QZHvCyeR4CXPA+llXIeUIfIe00waw=\ngoogle.golang.org/grpc/stats/opentelemetry v0.0.0-20240907200651-3ffb98b2c93a h1:UIpYSuWdWHSzjwcAFRLjKcPXFZVVLXGEM23W+NWqipw=\ngoogle.golang.org/grpc/stats/opentelemetry v0.0.0-20240907200651-3ffb98b2c93a/go.mod h1:9i1T9n4ZinTUZGgzENMi8MDDgbGC5mqTS75JAv6xN3A=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.35.2 h1:8Ar7bF+apOIoThw1EdZl0p1oWvMqTHmpA2fRTyZO8io=\ngoogle.golang.org/protobuf v1.35.2/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/mgo.v2 v2.0.0-20180705113604-9856a29383ce/go.mod h1:yeKp02qBN3iKW1OzL3MGk2IdtZzaj7SFntXj72NppTA=\ngopkg.in/warnings.v0 v0.1.2 h1:wFXVbFY8DY5/xOe1ECiWdKCzZlxgshcYVNkBHstARME=\ngopkg.in/warnings.v0 v0.1.2/go.mod h1:jksf8JmL6Qr/oQM2OXTHunEvvTAsrWBLb6OOjuVWRNI=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.5/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngotest.tools/v3 v3.5.1 h1:EENdUnS3pdur5nybKYIh2Vfgc8IUNBjxDPSjtiJcOzU=\ngotest.tools/v3 v3.5.1/go.mod h1:isy3WKz7GK6uNw/sbHzfKBLvlvXwUyV06n6brMxxopU=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\ninet.af/netaddr v0.0.0-20230525184311-b8eac61e914a h1:1XCVEdxrvL6c0TGOhecLuB7U9zYNdxZEjvOqJreKZiM=\ninet.af/netaddr v0.0.0-20230525184311-b8eac61e914a/go.mod h1:e83i32mAQOW1LAqEIweALsuK2Uw4mhQadA5r7b0Wobo=\nk8s.io/client-go v0.32.0 h1:DimtMcnN/JIKZcrSrstiwvvZvLjG0aSxy8PxN8IChp8=\nk8s.io/client-go v0.32.0/go.mod h1:boDWvdM1Drk4NJj/VddSLnx59X3OPgwrOo0vGbtq9+8=\n"
        },
        {
          "name": "gomplate.go",
          "type": "blob",
          "size": 3.58203125,
          "content": "// Package gomplate is a template renderer which supports a number of datasources,\n// and includes hundreds of built-in functions.\npackage gomplate\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"fmt\"\n\t\"log/slog\"\n\t\"path/filepath\"\n\t\"strings\"\n\t\"text/template\"\n\t\"time\"\n\n\t\"github.com/hairyhenderson/gomplate/v4/internal/datafs\"\n)\n\n// Run all gomplate templates specified by the given configuration\nfunc Run(ctx context.Context, cfg *Config) error {\n\tMetrics = newMetrics()\n\n\t// apply defaults before validation\n\tcfg.applyDefaults()\n\n\terr := cfg.validate()\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to validate config: %w\\n%+v\", err, cfg)\n\t}\n\n\tif cfg.Experimental {\n\t\tslog.SetDefault(slog.With(\"experimental\", true))\n\t\tslog.InfoContext(ctx, \"experimental functions and features enabled!\")\n\n\t\tctx = SetExperimental(ctx)\n\t}\n\n\t// bind plugins from the configuration to the funcMap\n\tfuncMap := template.FuncMap{}\n\terr = bindPlugins(ctx, cfg, funcMap)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t// if a custom Stdin is set in the config, inject it into the context now\n\tctx = datafs.ContextWithStdin(ctx, cfg.Stdin)\n\n\t// if a custom FSProvider is set in the context, use it, otherwise inject\n\t// the default now - one is needed for the calls below to gatherTemplates\n\t// as well as the rendering itself\n\tif datafs.FSProviderFromContext(ctx) == nil {\n\t\tctx = datafs.ContextWithFSProvider(ctx, DefaultFSProvider)\n\t}\n\n\t// extract the rendering options from the config\n\topts := optionsFromConfig(cfg)\n\topts.Funcs = funcMap\n\ttr := newRenderer(opts)\n\n\tstart := time.Now()\n\n\t// figure out how to name output files (only relevant if we're dealing with an InputDir)\n\tnamer := chooseNamer(cfg, tr)\n\n\t// prepare to render templates (read them in, open output writers, etc)\n\ttmpl, err := gatherTemplates(ctx, cfg, namer)\n\n\tMetrics.GatherDuration = time.Since(start)\n\tif err != nil {\n\t\tMetrics.Errors++\n\t\treturn fmt.Errorf(\"failed to gather templates for rendering: %w\", err)\n\t}\n\tMetrics.TemplatesGathered = len(tmpl)\n\n\terr = tr.RenderTemplates(ctx, tmpl)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\treturn nil\n}\n\ntype outputNamer interface {\n\t// Name the output file for the given input path\n\tName(ctx context.Context, inPath string) (string, error)\n}\n\ntype outputNamerFunc func(context.Context, string) (string, error)\n\nfunc (f outputNamerFunc) Name(ctx context.Context, inPath string) (string, error) {\n\treturn f(ctx, inPath)\n}\n\nfunc chooseNamer(cfg *Config, tr *renderer) outputNamer {\n\tif cfg.OutputMap == \"\" {\n\t\treturn simpleNamer(cfg.OutputDir)\n\t}\n\treturn mappingNamer(cfg.OutputMap, tr)\n}\n\nfunc simpleNamer(outDir string) outputNamer {\n\treturn outputNamerFunc(func(_ context.Context, inPath string) (string, error) {\n\t\toutPath := filepath.Join(outDir, inPath)\n\t\treturn filepath.Clean(outPath), nil\n\t})\n}\n\nfunc mappingNamer(outMap string, tr *renderer) outputNamer {\n\treturn outputNamerFunc(func(ctx context.Context, inPath string) (string, error) {\n\t\ttcontext, err := createTmplContext(ctx, tr.tctxAliases, tr.sr)\n\t\tif err != nil {\n\t\t\treturn \"\", err\n\t\t}\n\n\t\t// add '.in' to the template context and preserve the original context\n\t\t// in '.ctx'\n\t\ttctx := &tmplctx{}\n\t\t//nolint:gocritic\n\t\tswitch c := tcontext.(type) {\n\t\tcase *tmplctx:\n\t\t\tfor k, v := range *c {\n\t\t\t\tif k != \"in\" && k != \"ctx\" {\n\t\t\t\t\t(*tctx)[k] = v\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t(*tctx)[\"ctx\"] = tcontext\n\t\t(*tctx)[\"in\"] = inPath\n\n\t\tout := &bytes.Buffer{}\n\t\terr = tr.renderTemplatesWithData(ctx,\n\t\t\t[]Template{{Name: \"<OutputMap>\", Text: outMap, Writer: out}}, tctx)\n\t\tif err != nil {\n\t\t\treturn \"\", fmt.Errorf(\"failed to render outputMap with ctx %+v and inPath %s: %w\", tctx, inPath, err)\n\t\t}\n\n\t\treturn filepath.Clean(strings.TrimSpace(out.String())), nil\n\t})\n}\n"
        },
        {
          "name": "gomplate_test.go",
          "type": "blob",
          "size": 5.5732421875,
          "content": "package gomplate\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"testing\"\n\t\"text/template\"\n\n\t\"github.com/hairyhenderson/gomplate/v4/aws\"\n\t\"github.com/hairyhenderson/gomplate/v4/conv\"\n\t\"github.com/hairyhenderson/gomplate/v4/env\"\n\t\"github.com/hairyhenderson/gomplate/v4/internal/datafs\"\n\t\"github.com/hairyhenderson/gomplate/v4/internal/parsers\"\n\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n)\n\nfunc testTemplate(t *testing.T, tr *renderer, tmpl string) string {\n\tt.Helper()\n\n\tvar out bytes.Buffer\n\terr := tr.Render(context.Background(), \"testtemplate\", tmpl, &out)\n\trequire.NoError(t, err)\n\n\treturn out.String()\n}\n\nfunc TestGetenvTemplates(t *testing.T) {\n\ttr := newRenderer(RenderOptions{\n\t\tFuncs: template.FuncMap{\n\t\t\t\"getenv\": env.Getenv,\n\t\t\t\"bool\":   conv.ToBool,\n\t\t},\n\t})\n\tassert.Empty(t, testTemplate(t, tr, `{{getenv \"BLAHBLAHBLAH\"}}`))\n\tassert.Equal(t, os.Getenv(\"USER\"), testTemplate(t, tr, `{{getenv \"USER\"}}`))\n\tassert.Equal(t, \"default value\", testTemplate(t, tr, `{{getenv \"BLAHBLAHBLAH\" \"default value\"}}`))\n}\n\nfunc TestBoolTemplates(t *testing.T) {\n\tg := newRenderer(RenderOptions{\n\t\tFuncs: template.FuncMap{\n\t\t\t\"bool\": conv.ToBool,\n\t\t},\n\t})\n\tassert.Equal(t, \"true\", testTemplate(t, g, `{{bool \"true\"}}`))\n\tassert.Equal(t, \"false\", testTemplate(t, g, `{{bool \"false\"}}`))\n\tassert.Equal(t, \"false\", testTemplate(t, g, `{{bool \"foo\"}}`))\n\tassert.Equal(t, \"false\", testTemplate(t, g, `{{bool \"\"}}`))\n}\n\nfunc TestEc2MetaTemplates(t *testing.T) {\n\tcreateGomplate := func(data map[string]string, region string) *renderer {\n\t\tec2meta := aws.MockEC2Meta(data, nil, region)\n\t\treturn newRenderer(RenderOptions{Funcs: template.FuncMap{\"ec2meta\": ec2meta.Meta}})\n\t}\n\n\tg := createGomplate(nil, \"\")\n\tassert.Equal(t, \"\", testTemplate(t, g, `{{ec2meta \"foo\"}}`))\n\tassert.Equal(t, \"default\", testTemplate(t, g, `{{ec2meta \"foo\" \"default\"}}`))\n\n\tg = createGomplate(map[string]string{\"instance-id\": \"i-1234\"}, \"\")\n\tassert.Equal(t, \"i-1234\", testTemplate(t, g, `{{ec2meta \"instance-id\"}}`))\n\tassert.Equal(t, \"i-1234\", testTemplate(t, g, `{{ec2meta \"instance-id\" \"default\"}}`))\n}\n\nfunc TestEc2MetaTemplates_WithJSON(t *testing.T) {\n\tec2meta := aws.MockEC2Meta(map[string]string{\"obj\": `\"foo\": \"bar\"`}, map[string]string{\"obj\": `\"foo\": \"baz\"`}, \"\")\n\n\tg := newRenderer(RenderOptions{\n\t\tFuncs: template.FuncMap{\n\t\t\t\"ec2meta\":    ec2meta.Meta,\n\t\t\t\"ec2dynamic\": ec2meta.Dynamic,\n\t\t\t\"json\":       parsers.JSON,\n\t\t},\n\t})\n\n\tassert.Equal(t, \"bar\", testTemplate(t, g, `{{ (ec2meta \"obj\" | json).foo }}`))\n\tassert.Equal(t, \"baz\", testTemplate(t, g, `{{ (ec2dynamic \"obj\" | json).foo }}`))\n}\n\nfunc TestJSONArrayTemplates(t *testing.T) {\n\tg := newRenderer(RenderOptions{\n\t\tFuncs: template.FuncMap{\n\t\t\t\"jsonArray\": parsers.JSONArray,\n\t\t},\n\t})\n\n\tassert.Equal(t, \"[foo bar]\", testTemplate(t, g, `{{jsonArray \"[\\\"foo\\\",\\\"bar\\\"]\"}}`))\n\tassert.Equal(t, \"bar\", testTemplate(t, g, `{{ index (jsonArray \"[\\\"foo\\\",\\\"bar\\\"]\") 1 }}`))\n}\n\nfunc TestYAMLTemplates(t *testing.T) {\n\tg := newRenderer(RenderOptions{\n\t\tFuncs: template.FuncMap{\n\t\t\t\"yaml\":      parsers.YAML,\n\t\t\t\"yamlArray\": parsers.YAMLArray,\n\t\t},\n\t})\n\n\tassert.Equal(t, \"bar\", testTemplate(t, g, `{{(yaml \"foo: bar\").foo}}`))\n\tassert.Equal(t, \"[foo bar]\", testTemplate(t, g, `{{yamlArray \"- foo\\n- bar\\n\"}}`))\n\tassert.Equal(t, \"bar\", testTemplate(t, g, `{{ index (yamlArray \"[\\\"foo\\\",\\\"bar\\\"]\") 1 }}`))\n}\n\nfunc TestHasTemplate(t *testing.T) {\n\tg := newRenderer(RenderOptions{\n\t\tFuncs: template.FuncMap{\n\t\t\t\"yaml\": parsers.YAML,\n\t\t\t\"has\":  conv.Has,\n\t\t},\n\t})\n\tassert.Equal(t, \"true\", testTemplate(t, g, `{{has (\"foo:\\n  bar: true\" | yaml) \"foo\"}}`))\n\tassert.Equal(t, \"true\", testTemplate(t, g, `{{has (\"foo:\\n  bar: true\" | yaml).foo \"bar\"}}`))\n\tassert.Equal(t, \"false\", testTemplate(t, g, `{{has (\"foo: true\" | yaml) \"bah\"}}`))\n\ttmpl := `{{- $data := yaml \"foo: bar\\nbaz: qux\\n\" }}\n{{- if (has $data \"baz\") }}\n{{- $data.baz }}\n{{- end }}`\n\tassert.Equal(t, \"qux\", testTemplate(t, g, tmpl))\n\ttmpl = `{{- $data := yaml \"foo: bar\\nbaz: qux\\n\" }}\n{{- if (has $data \"quux\") }}\n{{- $data.quux }}\n{{- else }}\n{{- $data.foo }}\n{{- end }}`\n\tassert.Equal(t, \"bar\", testTemplate(t, g, tmpl))\n}\n\nfunc TestMissingKey(t *testing.T) {\n\ttests := map[string]struct {\n\t\tMissingKey  string\n\t\tExpectedOut string\n\t}{\n\t\t\"missing-key = zero\":    {MissingKey: \"zero\", ExpectedOut: \"<no value>\"},\n\t\t\"missing-key = invalid\": {MissingKey: \"invalid\", ExpectedOut: \"<no value>\"},\n\t\t\"missing-key = default\": {MissingKey: \"default\", ExpectedOut: \"<no value>\"},\n\t}\n\tfor name, tt := range tests {\n\t\tt.Run(name, func(t *testing.T) {\n\t\t\tg := newRenderer(RenderOptions{\n\t\t\t\tMissingKey: tt.MissingKey,\n\t\t\t})\n\t\t\ttmpl := `{{ .name }}`\n\t\t\tassert.Equal(t, tt.ExpectedOut, testTemplate(t, g, tmpl))\n\t\t})\n\t}\n}\n\nfunc TestCustomDelim(t *testing.T) {\n\tg := newRenderer(RenderOptions{\n\t\tLDelim: \"[\",\n\t\tRDelim: \"]\",\n\t})\n\tassert.Equal(t, \"hi\", testTemplate(t, g, `[print \"hi\"]`))\n}\n\nfunc TestSimpleNamer(t *testing.T) {\n\tn := simpleNamer(\"out/\")\n\tout, err := n.Name(context.Background(), \"file\")\n\trequire.NoError(t, err)\n\texpected := filepath.FromSlash(\"out/file\")\n\tassert.Equal(t, expected, out)\n}\n\nfunc TestMappingNamer(t *testing.T) {\n\tctx := context.Background()\n\treg := datafs.NewRegistry()\n\ttr := &renderer{\n\t\tsr: datafs.NewSourceReader(reg),\n\t\tfuncs: map[string]interface{}{\n\t\t\t\"foo\": func() string { return \"foo\" },\n\t\t},\n\t}\n\tn := mappingNamer(\"out/{{ .in }}\", tr)\n\tout, err := n.Name(ctx, \"file\")\n\trequire.NoError(t, err)\n\texpected := filepath.FromSlash(\"out/file\")\n\tassert.Equal(t, expected, out)\n\n\tn = mappingNamer(\"out/{{ foo }}{{ .in }}\", tr)\n\tout, err = n.Name(ctx, \"file\")\n\trequire.NoError(t, err)\n\texpected = filepath.FromSlash(\"out/foofile\")\n\tassert.Equal(t, expected, out)\n}\n"
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "math",
          "type": "tree",
          "content": null
        },
        {
          "name": "metrics.go",
          "type": "blob",
          "size": 0.83203125,
          "content": "package gomplate\n\nimport \"time\"\n\n// Metrics tracks interesting basic metrics around gomplate executions. Warning: experimental!\n// This may change in breaking ways without warning. This is not subject to any semantic versioning guarantees!\nvar Metrics *MetricsType\n\n// MetricsType - Warning: experimental! This may change in breaking ways without warning.\n// This is not subject to any semantic versioning guarantees!\ntype MetricsType struct {\n\t// times for rendering each template\n\tRenderDuration map[string]time.Duration\n\t// time it took to gather templates\n\tGatherDuration time.Duration\n\t// time it took to render all templates\n\tTotalRenderDuration time.Duration\n\n\tTemplatesGathered  int\n\tTemplatesProcessed int\n\tErrors             int\n}\n\nfunc newMetrics() *MetricsType {\n\treturn &MetricsType{\n\t\tRenderDuration: make(map[string]time.Duration),\n\t}\n}\n"
        },
        {
          "name": "net",
          "type": "tree",
          "content": null
        },
        {
          "name": "netlify.toml",
          "type": "blob",
          "size": 0.1435546875,
          "content": "[build]\ncommand = \"make gen-docs\"\npublish = \"docs/public/\"\n\n[build.environment]\nHUGO_VERSION = \"0.128.0\"\nNODE_VERSION = \"20\"\nGO_VERSION = \"1.22.4\"\n"
        },
        {
          "name": "packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugins.go",
          "type": "blob",
          "size": 4.0703125,
          "content": "package gomplate\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n\t\"os/exec\"\n\t\"os/signal\"\n\t\"path/filepath\"\n\t\"runtime\"\n\t\"text/template\"\n\t\"time\"\n\n\t\"github.com/hairyhenderson/gomplate/v4/conv\"\n)\n\n// bindPlugins creates custom plugin functions for each plugin specified by\n// the config, and adds them to the given funcMap. Uses the configuration's\n// PluginTimeout as the default plugin Timeout. Errors if a function name is\n// duplicated.\nfunc bindPlugins(ctx context.Context, cfg *Config, funcMap template.FuncMap) error {\n\tfor k, v := range cfg.Plugins {\n\t\tif _, ok := funcMap[k]; ok {\n\t\t\treturn fmt.Errorf(\"function %q is already bound, and can not be overridden\", k)\n\t\t}\n\n\t\t// default the timeout to the one in the config\n\t\ttimeout := cfg.PluginTimeout\n\t\tif v.Timeout != 0 {\n\t\t\ttimeout = v.Timeout\n\t\t}\n\n\t\tfuncMap[k] = PluginFunc(ctx, v.Cmd, PluginOpts{\n\t\t\tTimeout: timeout,\n\t\t\tPipe:    v.Pipe,\n\t\t\tStderr:  cfg.Stderr,\n\t\t\tArgs:    v.Args,\n\t\t})\n\t}\n\n\treturn nil\n}\n\n// PluginOpts are options for controlling plugin function execution\ntype PluginOpts struct {\n\t// Stderr can be set to redirect the plugin's stderr to a custom writer.\n\t// Defaults to os.Stderr.\n\tStderr io.Writer\n\n\t// Args are additional arguments to pass to the plugin. These precede any\n\t// arguments passed to the plugin function at runtime.\n\tArgs []string\n\n\t// Timeout is the maximum amount of time to wait for the plugin to complete.\n\t// Defaults to 5 seconds.\n\tTimeout time.Duration\n\n\t// Pipe indicates whether the last argument should be piped to the plugin's\n\t// stdin (true) or processed as a commandline argument (false)\n\tPipe bool\n}\n\n// PluginFunc creates a template function that runs an external process - either\n// a shell script or commandline executable.\nfunc PluginFunc(ctx context.Context, cmd string, opts PluginOpts) func(...interface{}) (interface{}, error) {\n\ttimeout := opts.Timeout\n\tif timeout == 0 {\n\t\ttimeout = 5 * time.Second\n\t}\n\n\tstderr := opts.Stderr\n\tif stderr == nil {\n\t\tstderr = os.Stderr\n\t}\n\n\tplugin := &plugin{\n\t\tctx:     ctx,\n\t\tpath:    cmd,\n\t\targs:    opts.Args,\n\t\ttimeout: timeout,\n\t\tpipe:    opts.Pipe,\n\t\tstderr:  stderr,\n\t}\n\n\treturn plugin.run\n}\n\n// plugin represents a custom function that binds to an external process to be executed\ntype plugin struct {\n\tctx     context.Context\n\tstderr  io.Writer\n\tpath    string\n\targs    []string\n\ttimeout time.Duration\n\tpipe    bool\n}\n\n// builds a command that's appropriate for running scripts\nfunc (p *plugin) buildCommand(a []string) (name string, args []string) {\n\tswitch filepath.Ext(p.path) {\n\tcase \".ps1\":\n\t\ta = append([]string{\"-File\", p.path}, a...)\n\t\treturn findPowershell(), a\n\tcase \".cmd\", \".bat\":\n\t\ta = append([]string{\"/c\", p.path}, a...)\n\t\treturn \"cmd.exe\", a\n\tdefault:\n\t\treturn p.path, a\n\t}\n}\n\n// finds the appropriate powershell command for the platform - prefers\n// PowerShell Core (`pwsh`), but on Windows if it's not found falls back to\n// Windows PowerShell (`powershell`).\nfunc findPowershell() string {\n\tif runtime.GOOS != \"windows\" {\n\t\treturn \"pwsh\"\n\t}\n\n\t_, err := exec.LookPath(\"pwsh\")\n\tif err != nil {\n\t\treturn \"powershell\"\n\t}\n\treturn \"pwsh\"\n}\n\nfunc (p *plugin) run(args ...interface{}) (interface{}, error) {\n\ta := conv.ToStrings(args...)\n\ta = append(p.args, a...)\n\n\tname, a := p.buildCommand(a)\n\n\tctx, cancel := context.WithTimeout(p.ctx, p.timeout)\n\tdefer cancel()\n\n\tvar stdin *bytes.Buffer\n\tif p.pipe && len(a) > 0 {\n\t\tstdin = bytes.NewBufferString(a[len(a)-1])\n\t\ta = a[:len(a)-1]\n\t}\n\n\tc := exec.CommandContext(ctx, name, a...)\n\tif stdin != nil {\n\t\tc.Stdin = stdin\n\t}\n\n\tc.Stderr = p.stderr\n\toutBuf := &bytes.Buffer{}\n\tc.Stdout = outBuf\n\n\tstart := time.Now()\n\terr := c.Start()\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"starting command: %w\", err)\n\t}\n\n\t// make sure all signals are propagated\n\tsigs := make(chan os.Signal, 1)\n\tsignal.Notify(sigs)\n\tgo func() {\n\t\tselect {\n\t\tcase sig := <-sigs:\n\t\t\t// Pass signals to the sub-process\n\t\t\tif c.Process != nil {\n\t\t\t\t_ = c.Process.Signal(sig)\n\t\t\t}\n\t\tcase <-ctx.Done():\n\t\t}\n\t}()\n\n\terr = c.Wait()\n\telapsed := time.Since(start)\n\n\tif ctx.Err() != nil {\n\t\terr = fmt.Errorf(\"plugin timed out after %v: %w\", elapsed, ctx.Err())\n\t}\n\n\treturn outBuf.String(), err\n}\n"
        },
        {
          "name": "plugins_test.go",
          "type": "blob",
          "size": 3.1904296875,
          "content": "package gomplate\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"fmt\"\n\t\"os\"\n\t\"strings\"\n\t\"testing\"\n\t\"text/template\"\n\t\"time\"\n\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n)\n\nfunc TestBindPlugins(t *testing.T) {\n\tctx := context.Background()\n\tfm := template.FuncMap{}\n\tcfg := &Config{\n\t\tPlugins: map[string]PluginConfig{},\n\t}\n\terr := bindPlugins(ctx, cfg, fm)\n\trequire.NoError(t, err)\n\tassert.EqualValues(t, template.FuncMap{}, fm)\n\n\tcfg.Plugins = map[string]PluginConfig{\"foo\": {Cmd: \"bar\"}}\n\terr = bindPlugins(ctx, cfg, fm)\n\trequire.NoError(t, err)\n\tassert.Contains(t, fm, \"foo\")\n\n\terr = bindPlugins(ctx, cfg, fm)\n\tassert.ErrorContains(t, err, \"already bound\")\n}\n\nfunc TestBuildCommand(t *testing.T) {\n\tctx := context.Background()\n\tdata := []struct {\n\t\tname, path string\n\t\targs       []string\n\t\texpected   []string\n\t}{\n\t\t{\"foo\", \"foo\", nil, []string{\"foo\"}},\n\t\t{\"foo\", \"foo\", []string{\"bar\"}, []string{\"foo\", \"bar\"}},\n\t\t{\"foo\", \"foo.bat\", nil, []string{\"cmd.exe\", \"/c\", \"foo.bat\"}},\n\t\t{\"foo\", \"foo.cmd\", []string{\"bar\"}, []string{\"cmd.exe\", \"/c\", \"foo.cmd\", \"bar\"}},\n\t\t{\"foo\", \"foo.ps1\", []string{\"bar\", \"baz\"}, []string{\"pwsh\", \"-File\", \"foo.ps1\", \"bar\", \"baz\"}},\n\t}\n\tfor _, d := range data {\n\t\tp := &plugin{\n\t\t\tctx:  ctx,\n\t\t\tpath: d.path,\n\t\t}\n\t\tname, args := p.buildCommand(d.args)\n\t\tactual := append([]string{name}, args...)\n\t\tassert.EqualValues(t, d.expected, actual)\n\t}\n}\n\nfunc TestRun(t *testing.T) {\n\tctx, cancel := context.WithCancel(context.Background())\n\tdefer cancel()\n\n\tstderr := &bytes.Buffer{}\n\tp := &plugin{\n\t\tctx:     ctx,\n\t\ttimeout: 500 * time.Millisecond,\n\t\tstderr:  stderr,\n\t\tpath:    \"echo\",\n\t}\n\tout, err := p.run(\"foo\")\n\trequire.NoError(t, err)\n\tassert.Equal(t, \"\", stderr.String())\n\tassert.Equal(t, \"foo\", strings.TrimSpace(out.(string)))\n\n\tp = &plugin{\n\t\tctx:     ctx,\n\t\ttimeout: 500 * time.Millisecond,\n\t\tstderr:  stderr,\n\t\tpath:    \"echo\",\n\t\targs:    []string{\"foo\", \"bar\"},\n\t}\n\tout, err = p.run()\n\trequire.NoError(t, err)\n\tassert.Equal(t, \"\", stderr.String())\n\tassert.Equal(t, \"foo bar\", strings.TrimSpace(out.(string)))\n\n\tp = &plugin{\n\t\tctx:     ctx,\n\t\ttimeout: 500 * time.Millisecond,\n\t\tstderr:  stderr,\n\t\tpath:    \"echo\",\n\t\targs:    []string{\"foo\", \"bar\"},\n\t}\n\tout, err = p.run(\"baz\", \"qux\")\n\trequire.NoError(t, err)\n\tassert.Equal(t, \"\", stderr.String())\n\tassert.Equal(t, \"foo bar baz qux\", strings.TrimSpace(out.(string)))\n}\n\nfunc ExamplePluginFunc() {\n\tctx := context.Background()\n\n\t// PluginFunc creates a template function that runs an arbitrary command.\n\tf := PluginFunc(ctx, \"echo\", PluginOpts{})\n\n\t// The function can be used in a template, but here we'll just run it\n\t// directly. This is equivalent to running 'echo foo bar'\n\tout, err := f(\"foo\", \"bar\")\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tfmt.Println(out)\n\n\t// Output:\n\t// foo bar\n}\n\nfunc ExamplePluginFunc_with_template() {\n\tctx := context.Background()\n\n\tf := PluginFunc(ctx, \"echo\", PluginOpts{})\n\n\t// PluginFunc is intended for use with gomplate, but can be used in any\n\t// text/template by adding it to the FuncMap.\n\ttmpl := template.New(\"new\").Funcs(template.FuncMap{\"echo\": f})\n\n\ttmpl, err := tmpl.Parse(`{{ echo \"baz\" \"qux\" }}`)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\terr = tmpl.Execute(os.Stdout, nil)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\t// Output:\n\t// baz qux\n}\n"
        },
        {
          "name": "random",
          "type": "tree",
          "content": null
        },
        {
          "name": "regexp",
          "type": "tree",
          "content": null
        },
        {
          "name": "release-please-config.json",
          "type": "blob",
          "size": 0.921875,
          "content": "{\n    \"$schema\": \"https://raw.githubusercontent.com/googleapis/release-please/main/schemas/config.json\",\n    \"release-type\": \"go\",\n    \"changelog-type\": \"default\",\n    \"changelog-sections\": [\n        {\n            \"type\": \"feat\",\n            \"section\": \"Features\"\n        },\n        {\n            \"type\": \"fix\",\n            \"section\": \"Bug Fixes\"\n        },\n        {\n            \"type\": \"docs\",\n            \"section\": \"Documentation\"\n        },\n        {\n            \"type\": \"deps\",\n            \"section\": \"Dependencies\"\n        },\n        {\n            \"type\": \"chore\",\n            \"section\": \"Miscellaneous Chores\",\n            \"hidden\": true\n        },\n        {\n            \"type\": \"build\",\n            \"section\": \"Build System\",\n            \"hidden\": true\n        },\n        {\n            \"type\": \"ci\",\n            \"section\": \"Continuous Integration\",\n            \"hidden\": true\n        }\n    ],\n    \"packages\": {\n        \".\": {}\n    }\n}\n"
        },
        {
          "name": "render.go",
          "type": "blob",
          "size": 10.720703125,
          "content": "package gomplate\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"io\"\n\t\"io/fs\"\n\t\"net/http\"\n\t\"path\"\n\t\"slices\"\n\t\"strings\"\n\t\"sync\"\n\t\"text/template\"\n\t\"time\"\n\n\t\"github.com/hairyhenderson/go-fsimpl\"\n\t\"github.com/hairyhenderson/go-fsimpl/autofs\"\n\t\"github.com/hairyhenderson/gomplate/v4/internal/datafs\"\n\t\"github.com/hairyhenderson/gomplate/v4/internal/funcs\"\n)\n\n// RenderOptions - options for controlling how templates are rendered, and\n// what data are available.\ntype RenderOptions struct {\n\t// Datasources - map of datasources to be read on demand when the\n\t// 'datasource'/'ds'/'include' functions are used.\n\tDatasources map[string]DataSource\n\t// Context - map of datasources to be read immediately and added to the\n\t// template's context\n\tContext map[string]DataSource\n\t// Templates - map of templates that can be referenced as nested templates\n\tTemplates map[string]DataSource\n\n\t// Extra HTTP headers not attached to pre-defined datsources. Potentially\n\t// used by datasources defined in the template.\n\tExtraHeaders map[string]http.Header\n\n\t// Funcs - map of functions to be added to the default template functions.\n\t// Duplicate functions will be overwritten by entries in this map.\n\tFuncs template.FuncMap\n\n\t// LeftDelim - set the left action delimiter for the template and all nested\n\t// templates to the specified string. Defaults to \"{{\"\n\tLDelim string\n\t// RightDelim - set the right action delimiter for the template and all nested\n\t// templates to the specified string. Defaults to \"{{\"\n\tRDelim string\n\n\t// MissingKey controls the behavior during execution if a map is indexed with a key that is not present in the map\n\tMissingKey string\n}\n\n// optionsFromConfig - translate the internal config struct to a RenderOptions.\n// Does not set the Funcs field.\nfunc optionsFromConfig(cfg *Config) RenderOptions {\n\topts := RenderOptions{\n\t\tDatasources:  cfg.DataSources,\n\t\tContext:      cfg.Context,\n\t\tTemplates:    cfg.Templates,\n\t\tExtraHeaders: cfg.ExtraHeaders,\n\t\tLDelim:       cfg.LDelim,\n\t\tRDelim:       cfg.RDelim,\n\t\tMissingKey:   cfg.MissingKey,\n\t}\n\n\treturn opts\n}\n\ntype renderer struct {\n\tsr          datafs.DataSourceReader\n\tnested      map[string]DataSource\n\tfuncs       template.FuncMap\n\tlDelim      string\n\trDelim      string\n\tmissingKey  string\n\ttctxAliases []string\n}\n\n// Renderer provides gomplate's core template rendering functionality.\n// See [NewRenderer].\ntype Renderer interface {\n\t// RenderTemplates renders a list of templates, parsing each template's\n\t// Text and executing it, outputting to its Writer. If a template's Writer\n\t// is a non-[os.Stdout] [io.Closer], it will be closed after the template is\n\t// rendered.\n\tRenderTemplates(ctx context.Context, templates []Template) error\n\n\t// Render is a convenience method for rendering a single template. For more\n\t// than one template, use [Renderer.RenderTemplates]. If wr is a non-[os.Stdout]\n\t// [io.Closer], it will be closed after the template is rendered.\n\tRender(ctx context.Context, name, text string, wr io.Writer) error\n}\n\n// NewRenderer creates a new template renderer with the specified options.\n// The returned renderer can be reused, but it is not (yet) safe for concurrent\n// use.\n//\n// Experimental: subject to breaking changes before the next major release\nfunc NewRenderer(opts RenderOptions) Renderer {\n\treturn newRenderer(opts)\n}\n\nfunc newRenderer(opts RenderOptions) *renderer {\n\tif Metrics == nil {\n\t\tMetrics = newMetrics()\n\t}\n\n\t// this should be the only place where this registry is created\n\treg := datafs.NewRegistry()\n\n\ttctxAliases := []string{}\n\n\tfor alias, ds := range opts.Context {\n\t\ttctxAliases = append(tctxAliases, alias)\n\t\treg.Register(alias, DataSource{\n\t\t\tURL:    ds.URL,\n\t\t\tHeader: ds.Header,\n\t\t})\n\t}\n\tfor alias, ds := range opts.Datasources {\n\t\treg.Register(alias, DataSource{\n\t\t\tURL:    ds.URL,\n\t\t\tHeader: ds.Header,\n\t\t})\n\t}\n\n\t// convert the internal Templates to a map[string]Datasource\n\t// TODO: simplify when Templates is removed\n\tnested := map[string]DataSource{}\n\tfor alias, ds := range opts.Templates {\n\t\tnested[alias] = DataSource{\n\t\t\tURL:    ds.URL,\n\t\t\tHeader: ds.Header,\n\t\t}\n\t}\n\n\tfor k := range opts.ExtraHeaders {\n\t\treg.AddExtraHeader(k, opts.ExtraHeaders[k])\n\t}\n\n\tif opts.Funcs == nil {\n\t\topts.Funcs = template.FuncMap{}\n\t}\n\n\tmissingKey := opts.MissingKey\n\tif missingKey == \"\" {\n\t\tmissingKey = \"error\"\n\t}\n\n\tsr := datafs.NewSourceReader(reg)\n\n\treturn &renderer{\n\t\tnested:      opts.Templates,\n\t\tsr:          sr,\n\t\tfuncs:       opts.Funcs,\n\t\ttctxAliases: tctxAliases,\n\t\tlDelim:      opts.LDelim,\n\t\trDelim:      opts.RDelim,\n\t\tmissingKey:  missingKey,\n\t}\n}\n\n// Template contains the basic data needed to render a template with a Renderer\ntype Template struct {\n\t// Writer is the writer to output the rendered template to. If this writer\n\t// is a non-os.Stdout io.Closer, it will be closed after the template is\n\t// rendered.\n\tWriter io.Writer\n\t// Name is the name of the template - used for error messages\n\tName string\n\t// Text is the template text\n\tText string\n}\n\nfunc (r *renderer) RenderTemplates(ctx context.Context, templates []Template) error {\n\tif datafs.FSProviderFromContext(ctx) == nil {\n\t\tctx = datafs.ContextWithFSProvider(ctx, DefaultFSProvider)\n\t}\n\n\t// configure the template context with the refreshed Data value\n\t// only done here because the data context may have changed\n\ttmplctx, err := createTmplContext(ctx, r.tctxAliases, r.sr)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\treturn r.renderTemplatesWithData(ctx, templates, tmplctx)\n}\n\nfunc (r *renderer) renderTemplatesWithData(ctx context.Context, templates []Template, tmplctx interface{}) error {\n\t// update funcs with the current context\n\t// only done here to ensure the context is properly set in func namespaces\n\tf := CreateFuncs(ctx)\n\n\t// add datasource funcs here because they need to share the source reader\n\taddToMap(f, funcs.CreateDataSourceFuncs(ctx, r.sr))\n\n\t// add user-defined funcs last so they override the built-in funcs\n\taddToMap(f, r.funcs)\n\n\t// track some metrics for debug output\n\tstart := time.Now()\n\tdefer func() { Metrics.TotalRenderDuration = time.Since(start) }()\n\tfor _, template := range templates {\n\t\terr := r.renderTemplate(ctx, template, f, tmplctx)\n\t\tif err != nil {\n\t\t\treturn fmt.Errorf(\"renderTemplate: %w\", err)\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc (r *renderer) renderTemplate(ctx context.Context, template Template, f template.FuncMap, tmplctx interface{}) error {\n\tif template.Writer != nil {\n\t\tif wr, ok := template.Writer.(io.Closer); ok {\n\t\t\tdefer wr.Close()\n\t\t}\n\t}\n\n\ttstart := time.Now()\n\ttmpl, err := r.parseTemplate(ctx, template.Name, template.Text, f, tmplctx)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"parse template %s: %w\", template.Name, err)\n\t}\n\n\terr = tmpl.Execute(template.Writer, tmplctx)\n\tMetrics.RenderDuration[template.Name] = time.Since(tstart)\n\tif err != nil {\n\t\tMetrics.Errors++\n\t\treturn fmt.Errorf(\"failed to render template %s: %w\", template.Name, err)\n\t}\n\tMetrics.TemplatesProcessed++\n\n\treturn nil\n}\n\nfunc (r *renderer) Render(ctx context.Context, name, text string, wr io.Writer) error {\n\treturn r.RenderTemplates(ctx, []Template{\n\t\t{Name: name, Text: text, Writer: wr},\n\t})\n}\n\n// parseTemplate - parses text as a Go template with the given name and options\nfunc (r *renderer) parseTemplate(ctx context.Context, name, text string, funcs template.FuncMap, tmplctx interface{}) (tmpl *template.Template, err error) {\n\ttmpl = template.New(name)\n\n\tmissingKey := r.missingKey\n\tif missingKey == \"\" {\n\t\tmissingKey = \"error\"\n\t}\n\n\tmissingKeyValues := []string{\"error\", \"zero\", \"default\", \"invalid\"}\n\tif !slices.Contains(missingKeyValues, missingKey) {\n\t\treturn nil, fmt.Errorf(\"not allowed value for the 'missing-key' flag: %s. Allowed values: %s\", missingKey, strings.Join(missingKeyValues, \",\"))\n\t}\n\n\ttmpl.Option(\"missingkey=\" + missingKey)\n\n\tfuncMap := copyFuncMap(funcs)\n\n\t// the \"tmpl\" funcs get added here because they need access to the root template and context\n\taddTmplFuncs(funcMap, tmpl, tmplctx, name)\n\ttmpl.Funcs(funcMap)\n\ttmpl.Delims(r.lDelim, r.rDelim)\n\t_, err = tmpl.Parse(text)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\terr = r.parseNestedTemplates(ctx, tmpl)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"parse nested templates: %w\", err)\n\t}\n\n\treturn tmpl, nil\n}\n\nfunc (r *renderer) parseNestedTemplates(ctx context.Context, tmpl *template.Template) error {\n\tfsp := datafs.FSProviderFromContext(ctx)\n\n\tfor alias, n := range r.nested {\n\t\tu := *n.URL\n\n\t\tfname := path.Base(u.Path)\n\t\tif strings.HasSuffix(u.Path, \"/\") {\n\t\t\tfname = \".\"\n\t\t}\n\n\t\tu.Path = path.Dir(u.Path)\n\n\t\tfsys, err := fsp.New(&u)\n\t\tif err != nil {\n\t\t\treturn fmt.Errorf(\"filesystem provider for %q unavailable: %w\", &u, err)\n\t\t}\n\n\t\t// TODO: maybe need to do something with root here?\n\t\t_, reldir, err := datafs.ResolveLocalPath(fsys, u.Path)\n\t\tif err != nil {\n\t\t\treturn fmt.Errorf(\"resolveLocalPath: %w\", err)\n\t\t}\n\n\t\tif reldir != \"\" && reldir != \".\" {\n\t\t\tfsys, err = fs.Sub(fsys, reldir)\n\t\t\tif err != nil {\n\t\t\t\treturn fmt.Errorf(\"sub filesystem for %q unavailable: %w\", &u, err)\n\t\t\t}\n\t\t}\n\n\t\t// inject context & header in case they're useful...\n\t\tfsys = fsimpl.WithContextFS(ctx, fsys)\n\t\tfsys = fsimpl.WithHeaderFS(n.Header, fsys)\n\t\tfsys = datafs.WithDataSourceRegistryFS(r.sr, fsys)\n\n\t\t// valid fs.FS paths have no trailing slash\n\t\tfname = strings.TrimRight(fname, \"/\")\n\n\t\t// first determine if the template path is a directory, in which case we\n\t\t// need to load all the files in the directory (but not recursively)\n\t\tfi, err := fs.Stat(fsys, fname)\n\t\tif err != nil {\n\t\t\treturn fmt.Errorf(\"stat %q: %w\", fname, err)\n\t\t}\n\n\t\tif fi.IsDir() {\n\t\t\terr = parseNestedTemplateDir(ctx, fsys, alias, fname, tmpl)\n\t\t} else {\n\t\t\terr = parseNestedTemplate(ctx, fsys, alias, fname, tmpl)\n\t\t}\n\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\n\treturn nil\n}\n\nfunc parseNestedTemplateDir(ctx context.Context, fsys fs.FS, alias, fname string, tmpl *template.Template) error {\n\tfiles, err := fs.ReadDir(fsys, fname)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"readDir %q: %w\", fname, err)\n\t}\n\n\tfor _, f := range files {\n\t\tif !f.IsDir() {\n\t\t\terr = parseNestedTemplate(ctx, fsys,\n\t\t\t\tpath.Join(alias, f.Name()),\n\t\t\t\tpath.Join(fname, f.Name()),\n\t\t\t\ttmpl,\n\t\t\t)\n\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t}\n\t}\n\n\treturn nil\n}\n\nfunc parseNestedTemplate(_ context.Context, fsys fs.FS, alias, fname string, tmpl *template.Template) error {\n\tb, err := fs.ReadFile(fsys, fname)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"readFile %q: %w\", fname, err)\n\t}\n\n\t_, err = tmpl.New(alias).Parse(string(b))\n\tif err != nil {\n\t\treturn fmt.Errorf(\"parse nested template %q: %w\", fname, err)\n\t}\n\n\treturn nil\n}\n\n// DefaultFSProvider is the default filesystem provider used by gomplate\nvar DefaultFSProvider = sync.OnceValue(\n\tfunc() fsimpl.FSProvider {\n\t\tfsp := fsimpl.NewMux()\n\n\t\t// start with all go-fsimpl filesystems\n\t\tfsp.Add(autofs.FS)\n\n\t\t// override go-fsimpl's filefs with wdfs to handle working directories\n\t\tfsp.Add(datafs.WdFS)\n\n\t\t// gomplate-only filesystem\n\t\tfsp.Add(datafs.EnvFS)\n\t\tfsp.Add(datafs.StdinFS)\n\t\tfsp.Add(datafs.MergeFS)\n\n\t\treturn fsp\n\t})()\n"
        },
        {
          "name": "render_test.go",
          "type": "blob",
          "size": 3.5654296875,
          "content": "package gomplate\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"fmt\"\n\t\"net/url\"\n\t\"os\"\n\t\"strings\"\n\t\"testing\"\n\t\"testing/fstest\"\n\n\t\"github.com/hairyhenderson/go-fsimpl\"\n\t\"github.com/hairyhenderson/gomplate/v4/internal/datafs\"\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n)\n\nfunc TestRenderTemplate(t *testing.T) {\n\twd, _ := os.Getwd()\n\tt.Cleanup(func() {\n\t\t_ = os.Chdir(wd)\n\t})\n\t_ = os.Chdir(\"/\")\n\n\tfsys := fstest.MapFS{}\n\tfsp := fsimpl.NewMux()\n\tfsp.Add(datafs.EnvFS)\n\tfsp.Add(datafs.StdinFS)\n\tfsp.Add(datafs.WrappedFSProvider(fsys, \"mem\", \"\"))\n\tctx := datafs.ContextWithFSProvider(context.Background(), fsp)\n\n\t// no options - built-in function\n\ttr := NewRenderer(RenderOptions{})\n\tout := &bytes.Buffer{}\n\terr := tr.Render(ctx, \"test\", \"{{ `hello world` | toUpper }}\", out)\n\trequire.NoError(t, err)\n\tassert.Equal(t, \"HELLO WORLD\", out.String())\n\n\t// with datasource and context\n\thu, _ := url.Parse(\"stdin:\")\n\twu, _ := url.Parse(\"env:WORLD\")\n\n\tt.Setenv(\"WORLD\", \"world\")\n\n\ttr = NewRenderer(RenderOptions{\n\t\tContext: map[string]DataSource{\n\t\t\t\"hi\": {URL: hu},\n\t\t},\n\t\tDatasources: map[string]DataSource{\n\t\t\t\"world\": {URL: wu},\n\t\t},\n\t})\n\tctx = datafs.ContextWithStdin(ctx, strings.NewReader(\"hello\"))\n\tout = &bytes.Buffer{}\n\terr = tr.Render(ctx, \"test\", `{{ .hi | toUpper }} {{ (ds \"world\") | toUpper }}`, out)\n\trequire.NoError(t, err)\n\tassert.Equal(t, \"HELLO WORLD\", out.String())\n\n\t// with a nested template\n\tnu, _ := url.Parse(\"nested.tmpl\")\n\tfsys[\"nested.tmpl\"] = &fstest.MapFile{Data: []byte(\n\t\t`<< . | toUpper >>`)}\n\n\ttr = NewRenderer(RenderOptions{\n\t\tTemplates: map[string]DataSource{\n\t\t\t\"nested\": {URL: nu},\n\t\t},\n\t\tLDelim: \"<<\",\n\t\tRDelim: \">>\",\n\t})\n\tout = &bytes.Buffer{}\n\terr = tr.Render(ctx, \"test\", `<< template \"nested\" \"hello\" >>`, out)\n\trequire.NoError(t, err)\n\tassert.Equal(t, \"HELLO\", out.String())\n\n\t// errors contain the template name\n\ttr = NewRenderer(RenderOptions{})\n\terr = tr.Render(ctx, \"foo\", `{{ bogus }}`, &bytes.Buffer{})\n\tassert.ErrorContains(t, err, \"template: foo:\")\n}\n\n//// examples\n\nfunc ExampleRenderer() {\n\tctx := context.Background()\n\n\t// create a new template renderer\n\ttr := NewRenderer(RenderOptions{})\n\n\t// render a template to stdout\n\terr := tr.Render(ctx, \"mytemplate\",\n\t\t`{{ \"hello, world!\" | toUpper }}`,\n\t\tos.Stdout)\n\tif err != nil {\n\t\tfmt.Println(\"gomplate error:\", err)\n\t}\n\n\t// Output:\n\t// HELLO, WORLD!\n}\n\nfunc ExampleRenderer_manyTemplates() {\n\tctx := context.Background()\n\n\t// create a new template renderer\n\ttr := NewRenderer(RenderOptions{})\n\n\ttemplates := []Template{\n\t\t{\n\t\t\tName:   \"one.tmpl\",\n\t\t\tText:   `contents of {{ tmpl.Path }}`,\n\t\t\tWriter: &bytes.Buffer{},\n\t\t},\n\t\t{\n\t\t\tName:   \"two.tmpl\",\n\t\t\tText:   `{{ \"hello world\" | toUpper }}`,\n\t\t\tWriter: &bytes.Buffer{},\n\t\t},\n\t\t{\n\t\t\tName:   \"three.tmpl\",\n\t\t\tText:   `1 + 1 = {{ math.Add 1 1 }}`,\n\t\t\tWriter: &bytes.Buffer{},\n\t\t},\n\t}\n\n\t// render the templates\n\terr := tr.RenderTemplates(ctx, templates)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tfor _, t := range templates {\n\t\tfmt.Printf(\"%s: %s\\n\", t.Name, t.Writer.(*bytes.Buffer).String())\n\t}\n\n\t// Output:\n\t// one.tmpl: contents of one.tmpl\n\t// two.tmpl: HELLO WORLD\n\t// three.tmpl: 1 + 1 = 2\n}\n\nfunc ExampleRenderer_datasources() {\n\tctx := context.Background()\n\n\t// a datasource that retrieves JSON from a public API\n\tu, _ := url.Parse(\"https://ipinfo.io/1.1.1.1\")\n\ttr := NewRenderer(RenderOptions{\n\t\tContext: map[string]DataSource{\n\t\t\t\"info\": {URL: u},\n\t\t},\n\t})\n\n\terr := tr.Render(ctx, \"jsontest\",\n\t\t`{{\"\\U0001F30E\"}} {{ .info.hostname }} is served by {{ .info.org }}`,\n\t\tos.Stdout)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\t// Output:\n\t// 🌎 one.one.one.one is served by AS13335 Cloudflare, Inc.\n}\n"
        },
        {
          "name": "renovate.json",
          "type": "blob",
          "size": 0.57421875,
          "content": "{\n  \"extends\": [\"schedule:weekends\"],\n  \"separatePatchReleases\": false,\n  \"prCreation\": \"immediate\",\n  \"branchPrefix\": \"renovate/\",\n  \"minor\": {\n    \"automerge\": true\n  },\n  \"patch\": {\n    \"automerge\": true\n  },\n  \"pin\": {\n    \"automerge\": true\n  },\n  \"lockFileMaintenance\": {\n    \"automerge\": true\n  },\n  \"docker\": {\n    \"fileMatch\": [\"(^|/)Dockerfile.*$\"],\n    \"major\": {\n      \"enabled\": true\n    }\n  },\n  \"ignorePaths\": [\n    \"vendor/**\"\n  ],\n  \"rangeStrategy\": \"auto\",\n  \"rebaseStalePrs\": true,\n  \"prConcurrentLimit\": 20,\n  \"prHourlyLimit\": 4,\n  \"labels\": [\n    \"dependencies\"\n  ]\n}\n"
        },
        {
          "name": "strings",
          "type": "tree",
          "content": null
        },
        {
          "name": "template.go",
          "type": "blob",
          "size": 10.2119140625,
          "content": "package gomplate\n\nimport (\n\t\"context\"\n\t\"errors\"\n\t\"fmt\"\n\t\"io\"\n\t\"io/fs\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"text/template\"\n\n\t\"github.com/hack-pad/hackpadfs\"\n\t\"github.com/hairyhenderson/gomplate/v4/internal/datafs\"\n\t\"github.com/hairyhenderson/gomplate/v4/internal/iohelpers\"\n\t\"github.com/hairyhenderson/gomplate/v4/tmpl\"\n\n\t// TODO: switch back if/when fs.FS support gets merged upstream\n\t\"github.com/hairyhenderson/xignore\"\n)\n\n// ignorefile name, like .gitignore\nconst gomplateignore = \".gomplateignore\"\n\nfunc addTmplFuncs(f template.FuncMap, root *template.Template, tctx interface{}, path string) {\n\tt := tmpl.New(root, tctx, path)\n\ttns := func() *tmpl.Template { return t }\n\tf[\"tmpl\"] = tns\n\tf[\"tpl\"] = t.Inline\n}\n\n// copyFuncMap - copies the template.FuncMap into a new map so we can modify it\n// without affecting the original\nfunc copyFuncMap(funcMap template.FuncMap) template.FuncMap {\n\tif funcMap == nil {\n\t\treturn nil\n\t}\n\n\tnewFuncMap := make(template.FuncMap, len(funcMap))\n\tfor k, v := range funcMap {\n\t\tnewFuncMap[k] = v\n\t}\n\treturn newFuncMap\n}\n\n// gatherTemplates - gather and prepare templates for rendering\nfunc gatherTemplates(ctx context.Context, cfg *Config, outFileNamer outputNamer) ([]Template, error) {\n\tmode, modeOverride, err := cfg.getMode()\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tvar templates []Template\n\n\tswitch {\n\tcase cfg.Input != \"\":\n\t\t// open the output file - no need to close it, as it will be closed by the\n\t\t// caller later\n\t\ttarget, oerr := openOutFile(ctx, cfg.OutputFiles[0], 0o755, mode, modeOverride, cfg.Stdout)\n\t\tif oerr != nil {\n\t\t\treturn nil, fmt.Errorf(\"openOutFile: %w\", oerr)\n\t\t}\n\n\t\ttemplates = []Template{{\n\t\t\t// the arg-provided input string gets a special name\n\t\t\tName:   \"<arg>\",\n\t\t\tText:   cfg.Input,\n\t\t\tWriter: target,\n\t\t}}\n\tcase cfg.InputDir != \"\":\n\t\t// input dirs presume output dirs are set too\n\t\ttemplates, err = walkDir(ctx, cfg, cfg.InputDir, outFileNamer, cfg.ExcludeGlob, cfg.ExcludeProcessingGlob, mode, modeOverride)\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"walkDir: %w\", err)\n\t\t}\n\tcase len(cfg.InputFiles) > 0:\n\t\ttemplates = make([]Template, len(cfg.InputFiles))\n\t\tfor i, f := range cfg.InputFiles {\n\t\t\ttemplates[i], err = fileToTemplate(ctx, cfg, f, cfg.OutputFiles[i], mode, modeOverride)\n\t\t\tif err != nil {\n\t\t\t\treturn nil, fmt.Errorf(\"fileToTemplate: %w\", err)\n\t\t\t}\n\t\t}\n\t}\n\n\treturn templates, nil\n}\n\n// walkDir - given an input dir `dir` and an output dir `outDir`, and a list\n// of .gomplateignore and exclude globs (if any), walk the input directory and create a list of\n// tplate objects, and an error, if any.\nfunc walkDir(ctx context.Context, cfg *Config, dir string, outFileNamer outputNamer, excludeGlob []string, excludeProcessingGlob []string, mode os.FileMode, modeOverride bool) ([]Template, error) {\n\tdir = filepath.ToSlash(filepath.Clean(dir))\n\n\t// get a filesystem rooted in the same volume as dir (or / on non-Windows)\n\tfsys, err := datafs.FSysForPath(ctx, dir)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\t// we need dir to be relative to the root of fsys\n\t// TODO: maybe need to do something with root here?\n\t_, resolvedDir, err := datafs.ResolveLocalPath(fsys, dir)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"resolveLocalPath: %w\", err)\n\t}\n\n\t// we need to sub the filesystem to the dir\n\tsubfsys, err := fs.Sub(fsys, resolvedDir)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"sub: %w\", err)\n\t}\n\n\t// just check . because fsys is subbed to dir already\n\tdirStat, err := fs.Stat(subfsys, \".\")\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"stat %q (%q): %w\", dir, resolvedDir, err)\n\t}\n\tdirMode := dirStat.Mode()\n\n\ttemplates := make([]Template, 0)\n\tmatcher := xignore.NewMatcher(subfsys)\n\n\texcludeMatches, err := matcher.Matches(\".\", &xignore.MatchesOptions{\n\t\tIgnorefile:    gomplateignore,\n\t\tNested:        true, // allow nested ignorefile\n\t\tAfterPatterns: excludeGlob,\n\t})\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"ignore matching failed for %s: %w\", dir, err)\n\t}\n\n\texcludeProcessingMatches, err := matcher.Matches(\".\", &xignore.MatchesOptions{\n\t\t// TODO: fix or replace xignore module so we can avoid attempting to read the .gomplateignore file for both exclude and excludeProcessing patterns\n\t\tIgnorefile:    gomplateignore,\n\t\tNested:        true, // allow nested ignorefile\n\t\tAfterPatterns: excludeProcessingGlob,\n\t})\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"passthough matching failed for %s: %w\", dir, err)\n\t}\n\n\tpassthroughFiles := make(map[string]bool)\n\n\tfor _, file := range excludeProcessingMatches.MatchedFiles {\n\t\t// files that need to be directly copied\n\t\tpassthroughFiles[file] = true\n\t}\n\n\t// Unmatched ignorefile rules's files\n\tfor _, file := range excludeMatches.UnmatchedFiles {\n\t\t// we want to pass an absolute (as much as possible) path to fileToTemplate\n\t\tinPath := filepath.Join(dir, file)\n\t\tinPath = filepath.ToSlash(inPath)\n\n\t\t// but outFileNamer expects only the filename itself\n\t\toutFile, err := outFileNamer.Name(ctx, file)\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"outFileNamer: %w\", err)\n\t\t}\n\n\t\t_, ok := passthroughFiles[file]\n\t\tif ok {\n\t\t\terr = copyFileToOutDir(ctx, cfg, inPath, outFile, mode, modeOverride)\n\t\t\tif err != nil {\n\t\t\t\treturn nil, fmt.Errorf(\"copyFileToOutDir: %w\", err)\n\t\t\t}\n\n\t\t\tcontinue\n\t\t}\n\n\t\ttpl, err := fileToTemplate(ctx, cfg, inPath, outFile, mode, modeOverride)\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"fileToTemplate: %w\", err)\n\t\t}\n\n\t\t// Ensure file parent dirs - use separate fsys for output file\n\t\toutfsys, err := datafs.FSysForPath(ctx, outFile)\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"fsysForPath: %w\", err)\n\t\t}\n\t\tif err = hackpadfs.MkdirAll(outfsys, filepath.Dir(outFile), dirMode); err != nil {\n\t\t\treturn nil, fmt.Errorf(\"mkdirAll %q: %w\", outFile, err)\n\t\t}\n\n\t\ttemplates = append(templates, tpl)\n\t}\n\n\treturn templates, nil\n}\n\nfunc readInFile(ctx context.Context, inFile string, mode os.FileMode) (source string, newmode os.FileMode, err error) {\n\tnewmode = mode\n\tvar b []byte\n\n\t//nolint:nestif\n\tif inFile == \"-\" {\n\t\tstdin := datafs.StdinFromContext(ctx)\n\t\tb, err = io.ReadAll(stdin)\n\t\tif err != nil {\n\t\t\treturn source, newmode, fmt.Errorf(\"read from stdin: %w\", err)\n\t\t}\n\n\t\tsource = string(b)\n\t} else {\n\t\tvar fsys fs.FS\n\t\tvar si fs.FileInfo\n\t\tfsys, err = datafs.FSysForPath(ctx, inFile)\n\t\tif err != nil {\n\t\t\treturn source, newmode, fmt.Errorf(\"fsysForPath: %w\", err)\n\t\t}\n\n\t\tsi, err = fs.Stat(fsys, inFile)\n\t\tif err != nil {\n\t\t\treturn source, newmode, fmt.Errorf(\"stat %q: %w\", inFile, err)\n\t\t}\n\t\tif mode == 0 {\n\t\t\tnewmode = si.Mode()\n\t\t}\n\n\t\t// we read the file and store in memory immediately, to prevent leaking\n\t\t// file descriptors.\n\t\tb, err = fs.ReadFile(fsys, inFile)\n\t\tif err != nil {\n\t\t\treturn source, newmode, fmt.Errorf(\"readAll %q: %w\", inFile, err)\n\t\t}\n\n\t\tsource = string(b)\n\t}\n\treturn source, newmode, err\n}\n\nfunc getOutfileHandler(ctx context.Context, cfg *Config, outFile string, mode os.FileMode, modeOverride bool) (io.Writer, error) {\n\t// open the output file - no need to close it, as it will be closed by the\n\t// caller later\n\ttarget, err := openOutFile(ctx, outFile, 0o755, mode, modeOverride, cfg.Stdout)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"openOutFile: %w\", err)\n\t}\n\n\treturn target, nil\n}\n\nfunc copyFileToOutDir(ctx context.Context, cfg *Config, inFile, outFile string, mode os.FileMode, modeOverride bool) error {\n\tsourceStr, newmode, err := readInFile(ctx, inFile, mode)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\toutFH, err := getOutfileHandler(ctx, cfg, outFile, newmode, modeOverride)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\twr, ok := outFH.(io.Closer)\n\tif ok && wr != os.Stdout {\n\t\tdefer wr.Close()\n\t}\n\n\t_, err = outFH.Write([]byte(sourceStr))\n\treturn err\n}\n\nfunc fileToTemplate(ctx context.Context, cfg *Config, inFile, outFile string, mode os.FileMode, modeOverride bool) (Template, error) {\n\tsource, newmode, err := readInFile(ctx, inFile, mode)\n\tif err != nil {\n\t\treturn Template{}, err\n\t}\n\n\ttarget, err := getOutfileHandler(ctx, cfg, outFile, newmode, modeOverride)\n\tif err != nil {\n\t\treturn Template{}, err\n\t}\n\n\ttmpl := Template{\n\t\tName:   inFile,\n\t\tText:   source,\n\t\tWriter: target,\n\t}\n\n\treturn tmpl, nil\n}\n\n// openOutFile returns a writer for the given file, creating the file if it\n// doesn't exist yet, and creating the parent directories if necessary. Will\n// defer actual opening until the first non-empty write. If the file already\n// exists, it will not be overwritten until the first difference is encountered.\n//\n// TODO: dirMode is always called with 0o755 - should either remove or make it configurable\n//\n//nolint:unparam\nfunc openOutFile(ctx context.Context, filename string, dirMode, mode os.FileMode, modeOverride bool, stdout io.Writer) (out io.Writer, err error) {\n\tout = iohelpers.NewEmptySkipper(func() (io.Writer, error) {\n\t\tif filename == \"-\" {\n\t\t\treturn iohelpers.NopCloser(stdout), nil\n\t\t}\n\t\treturn createOutFile(ctx, filename, dirMode, mode, modeOverride)\n\t})\n\treturn out, nil\n}\n\nfunc createOutFile(ctx context.Context, filename string, dirMode, mode os.FileMode, modeOverride bool) (out io.WriteCloser, err error) {\n\t// we only support writing out to local files for now\n\tfsys, err := datafs.FSysForPath(ctx, filename)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"fsysForPath: %w\", err)\n\t}\n\n\tmode = iohelpers.NormalizeFileMode(mode.Perm())\n\tif modeOverride {\n\t\terr = hackpadfs.Chmod(fsys, filename, mode)\n\t\tif err != nil && !errors.Is(err, fs.ErrNotExist) {\n\t\t\treturn nil, fmt.Errorf(\"failed to chmod output file %q with mode %q: %w\", filename, mode, err)\n\t\t}\n\t}\n\n\topen := func() (out io.WriteCloser, err error) {\n\t\t// Ensure file parent dirs\n\t\tif err = hackpadfs.MkdirAll(fsys, filepath.Dir(filename), dirMode); err != nil {\n\t\t\treturn nil, fmt.Errorf(\"mkdirAll %q: %w\", filename, err)\n\t\t}\n\n\t\tf, err := hackpadfs.OpenFile(fsys, filename, os.O_RDWR|os.O_CREATE|os.O_TRUNC, mode)\n\t\tif err != nil {\n\t\t\treturn out, fmt.Errorf(\"failed to open output file '%s' for writing: %w\", filename, err)\n\t\t}\n\t\tout = f.(io.WriteCloser)\n\n\t\treturn out, err\n\t}\n\n\t// if the output file already exists, we'll use a SameSkipper\n\tfi, err := hackpadfs.Stat(fsys, filename)\n\tif err != nil {\n\t\t// likely means the file just doesn't exist - further errors will be more useful\n\t\treturn iohelpers.LazyWriteCloser(open), nil\n\t}\n\tif fi.IsDir() {\n\t\t// error because this is a directory\n\t\treturn nil, isDirError(fi.Name())\n\t}\n\n\tout = iohelpers.SameSkipper(iohelpers.LazyReadCloser(func() (io.ReadCloser, error) {\n\t\treturn hackpadfs.OpenFile(fsys, filename, os.O_RDONLY, mode)\n\t}), open)\n\n\treturn out, err\n}\n"
        },
        {
          "name": "template_test.go",
          "type": "blob",
          "size": 6.017578125,
          "content": "package gomplate\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"io\"\n\t\"io/fs\"\n\t\"net/url\"\n\t\"os\"\n\t\"testing\"\n\t\"testing/fstest\"\n\t\"text/template\"\n\n\t\"github.com/hack-pad/hackpadfs\"\n\t\"github.com/hack-pad/hackpadfs/mem\"\n\t\"github.com/hairyhenderson/gomplate/v4/internal/datafs\"\n\t\"github.com/hairyhenderson/gomplate/v4/internal/iohelpers\"\n\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n)\n\nfunc TestOpenOutFile(t *testing.T) {\n\tmemfs, _ := mem.NewFS()\n\tfsys := datafs.WrapWdFS(memfs)\n\n\t_ = hackpadfs.Mkdir(fsys, \"/tmp\", 0o777)\n\n\tctx := datafs.ContextWithFSProvider(context.Background(), datafs.WrappedFSProvider(fsys, \"file\"))\n\n\tf, err := openOutFile(ctx, \"/tmp/foo\", 0o755, 0o644, false, nil)\n\trequire.NoError(t, err)\n\n\t_, err = f.Write([]byte(\"hello world\"))\n\trequire.NoError(t, err)\n\n\twc, ok := f.(io.WriteCloser)\n\tassert.True(t, ok)\n\terr = wc.Close()\n\trequire.NoError(t, err)\n\n\ti, err := hackpadfs.Stat(fsys, \"/tmp/foo\")\n\trequire.NoError(t, err)\n\tassert.Equal(t, iohelpers.NormalizeFileMode(0o644), i.Mode())\n\n\tout := &bytes.Buffer{}\n\n\tf, err = openOutFile(ctx, \"-\", 0o755, 0o644, false, out)\n\trequire.NoError(t, err)\n\n\t_, err = f.Write([]byte(\"hello world\"))\n\trequire.NoError(t, err)\n\tassert.Equal(t, \"hello world\", out.String())\n}\n\nfunc TestGatherTemplates(t *testing.T) {\n\t// chdir to root so we can use relative paths\n\twd, _ := os.Getwd()\n\tt.Cleanup(func() {\n\t\t_ = os.Chdir(wd)\n\t})\n\t_ = os.Chdir(\"/\")\n\n\tfsys, _ := mem.NewFS()\n\n\t_ = hackpadfs.WriteFullFile(fsys, \"foo\", []byte(\"bar\"), 0o600)\n\t_ = hackpadfs.Mkdir(fsys, \"in\", 0o777)\n\t_ = hackpadfs.WriteFullFile(fsys, \"in/1\", []byte(\"foo\"), 0o644)\n\t_ = hackpadfs.WriteFullFile(fsys, \"in/2\", []byte(\"bar\"), 0o644)\n\t_ = hackpadfs.WriteFullFile(fsys, \"in/3\", []byte(\"baz\"), 0o644)\n\n\tctx := datafs.ContextWithFSProvider(context.Background(), datafs.WrappedFSProvider(fsys, \"file\"))\n\n\tcfg := &Config{\n\t\tStdin:  &bytes.Buffer{},\n\t\tStdout: &bytes.Buffer{},\n\t}\n\tcfg.applyDefaults()\n\ttemplates, err := gatherTemplates(ctx, cfg, nil)\n\trequire.NoError(t, err)\n\tassert.Len(t, templates, 1)\n\n\tbuf := &bytes.Buffer{}\n\tcfg = &Config{\n\t\tInput:  \"foo\",\n\t\tStdout: buf,\n\t}\n\tcfg.applyDefaults()\n\ttemplates, err = gatherTemplates(ctx, cfg, nil)\n\trequire.NoError(t, err)\n\tassert.Len(t, templates, 1)\n\tassert.Equal(t, \"foo\", templates[0].Text)\n\n\t_, err = templates[0].Writer.Write([]byte(\"hello world\"))\n\trequire.NoError(t, err)\n\tassert.Equal(t, \"hello world\", buf.String())\n\n\ttemplates, err = gatherTemplates(ctx, &Config{\n\t\tInput:       \"foo\",\n\t\tOutputFiles: []string{\"out\"},\n\t}, nil)\n\trequire.NoError(t, err)\n\tassert.Len(t, templates, 1)\n\n\t// out file is created only on demand\n\t_, err = hackpadfs.Stat(fsys, \"out\")\n\trequire.ErrorIs(t, err, fs.ErrNotExist)\n\n\t_, err = templates[0].Writer.Write([]byte(\"hello world\"))\n\trequire.NoError(t, err)\n\n\tinfo, err := hackpadfs.Stat(fsys, \"out\")\n\trequire.NoError(t, err)\n\tassert.Equal(t, iohelpers.NormalizeFileMode(0o644), info.Mode())\n\t_ = hackpadfs.Remove(fsys, \"out\")\n\n\tbuf = &bytes.Buffer{}\n\tcfg = &Config{\n\t\tInputFiles:  []string{\"foo\"},\n\t\tOutputFiles: []string{\"out\"},\n\t\tStdout:      buf,\n\t}\n\ttemplates, err = gatherTemplates(ctx, cfg, nil)\n\trequire.NoError(t, err)\n\tassert.Len(t, templates, 1)\n\tassert.Equal(t, \"bar\", templates[0].Text)\n\n\t_, err = templates[0].Writer.Write([]byte(\"hello world\"))\n\trequire.NoError(t, err)\n\t// negative test - we should not be writing to stdout\n\tassert.NotEqual(t, \"hello world\", buf.String())\n\n\tinfo, err = hackpadfs.Stat(fsys, \"out\")\n\trequire.NoError(t, err)\n\tassert.Equal(t, iohelpers.NormalizeFileMode(0o600), info.Mode())\n\thackpadfs.Remove(fsys, \"out\")\n\n\tbuf = &bytes.Buffer{}\n\tcfg = &Config{\n\t\tInputFiles:  []string{\"foo\"},\n\t\tOutputFiles: []string{\"out\"},\n\t\tOutMode:     \"755\",\n\t\tStdout:      buf,\n\t}\n\ttemplates, err = gatherTemplates(ctx, cfg, nil)\n\trequire.NoError(t, err)\n\tassert.Len(t, templates, 1)\n\tassert.Equal(t, \"bar\", templates[0].Text)\n\n\t_, err = templates[0].Writer.Write([]byte(\"hello world\"))\n\trequire.NoError(t, err)\n\t// negative test - we should not be writing to stdout\n\tassert.NotEqual(t, \"hello world\", buf.String())\n\n\tinfo, err = hackpadfs.Stat(fsys, \"out\")\n\trequire.NoError(t, err)\n\tassert.Equal(t, iohelpers.NormalizeFileMode(0o755), info.Mode())\n\thackpadfs.Remove(fsys, \"out\")\n\n\ttemplates, err = gatherTemplates(ctx, &Config{\n\t\tInputDir:  \"in\",\n\t\tOutputDir: \"out\",\n\t}, simpleNamer(\"out\"))\n\trequire.NoError(t, err)\n\trequire.Len(t, templates, 3)\n\tassert.Equal(t, \"foo\", templates[0].Text)\n\thackpadfs.Remove(fsys, \"out\")\n}\n\nfunc TestCreateOutFile(t *testing.T) {\n\tfsys, _ := mem.NewFS()\n\t_ = hackpadfs.Mkdir(fsys, \"in\", 0o755)\n\n\tctx := datafs.ContextWithFSProvider(context.Background(), datafs.WrappedFSProvider(fsys, \"file\"))\n\n\t_, err := createOutFile(ctx, \"in\", 0o755, 0o644, false)\n\trequire.Error(t, err)\n\tassert.IsType(t, &fs.PathError{}, err)\n}\n\nfunc TestParseNestedTemplates(t *testing.T) {\n\twd, _ := os.Getwd()\n\tt.Cleanup(func() {\n\t\t_ = os.Chdir(wd)\n\t})\n\t_ = os.Chdir(\"/\")\n\n\t// in-memory test filesystem\n\tfsys := fstest.MapFS{\n\t\t\"foo.t\": {Data: []byte(\"hello world\"), Mode: 0o600},\n\t}\n\n\tctx := datafs.ContextWithFSProvider(context.Background(), datafs.WrappedFSProvider(fsys, \"file\"))\n\n\t// simple test with single template\n\tu, _ := url.Parse(\"foo.t\")\n\tnested := map[string]DataSource{\"foo\": {URL: u}}\n\n\ttmpl, _ := template.New(\"root\").Parse(`{{ template \"foo\" }}`)\n\n\tr := &renderer{nested: nested}\n\n\terr := r.parseNestedTemplates(ctx, tmpl)\n\trequire.NoError(t, err)\n\n\tout := bytes.Buffer{}\n\terr = tmpl.Execute(&out, nil)\n\trequire.NoError(t, err)\n\tassert.Equal(t, \"hello world\", out.String())\n\n\t// test with directory of templates\n\tfsys[\"dir/\"] = &fstest.MapFile{Mode: 0o777 | os.ModeDir}\n\tfsys[\"dir/foo.t\"] = &fstest.MapFile{Data: []byte(\"foo\"), Mode: 0o600}\n\tfsys[\"dir/bar.t\"] = &fstest.MapFile{Data: []byte(\"bar\"), Mode: 0o600}\n\n\tu, _ = url.Parse(\"dir/\")\n\tnested[\"dir\"] = DataSource{URL: u}\n\n\ttmpl, _ = template.New(\"root\").Parse(`{{ template \"dir/foo.t\" }} {{ template \"dir/bar.t\" }}`)\n\n\tr = &renderer{nested: nested}\n\terr = r.parseNestedTemplates(ctx, tmpl)\n\trequire.NoError(t, err)\n\n\tout = bytes.Buffer{}\n\terr = tmpl.Execute(&out, nil)\n\trequire.NoError(t, err)\n\tassert.Equal(t, \"foo bar\", out.String())\n}\n"
        },
        {
          "name": "template_unix.go",
          "type": "blob",
          "size": 0.220703125,
          "content": "//go:build !windows\n// +build !windows\n\npackage gomplate\n\nimport (\n\t\"os\"\n\n\t\"golang.org/x/sys/unix\"\n)\n\nfunc isDirError(name string) *os.PathError {\n\treturn &os.PathError{\n\t\tOp:   \"open\",\n\t\tPath: name,\n\t\tErr:  unix.EISDIR,\n\t}\n}\n"
        },
        {
          "name": "template_unix_test.go",
          "type": "blob",
          "size": 1.4609375,
          "content": "//go:build !windows\n\npackage gomplate\n\nimport (\n\t\"context\"\n\t\"testing\"\n\n\t\"github.com/hack-pad/hackpadfs\"\n\t\"github.com/hack-pad/hackpadfs/mem\"\n\t\"github.com/hairyhenderson/gomplate/v4/internal/datafs\"\n\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n)\n\nfunc TestWalkDir_UNIX(t *testing.T) {\n\tmemfs, _ := mem.NewFS()\n\tfsys := datafs.WrapWdFS(memfs)\n\n\tctx := datafs.ContextWithFSProvider(context.Background(), datafs.WrappedFSProvider(fsys, \"file\"))\n\n\tcfg := &Config{}\n\n\t_, err := walkDir(ctx, cfg, \"/indir\", simpleNamer(\"/outdir\"), nil, nil, 0, false)\n\trequire.Error(t, err)\n\n\terr = hackpadfs.MkdirAll(fsys, \"/indir/one\", 0o777)\n\trequire.NoError(t, err)\n\terr = hackpadfs.MkdirAll(fsys, \"/indir/two\", 0o777)\n\trequire.NoError(t, err)\n\terr = hackpadfs.WriteFullFile(fsys, \"/indir/one/foo\", []byte(\"foo\"), 0o644)\n\trequire.NoError(t, err)\n\terr = hackpadfs.WriteFullFile(fsys, \"/indir/one/bar\", []byte(\"bar\"), 0o644)\n\trequire.NoError(t, err)\n\terr = hackpadfs.WriteFullFile(fsys, \"/indir/two/baz\", []byte(\"baz\"), 0o644)\n\trequire.NoError(t, err)\n\n\ttemplates, err := walkDir(ctx, cfg, \"/indir\", simpleNamer(\"/outdir\"), []string{\"*/two\"}, []string{}, 0, false)\n\trequire.NoError(t, err)\n\n\texpected := []Template{\n\t\t{\n\t\t\tName: \"/indir/one/bar\",\n\t\t\tText: \"bar\",\n\t\t},\n\t\t{\n\t\t\tName: \"/indir/one/foo\",\n\t\t\tText: \"foo\",\n\t\t},\n\t}\n\tassert.Len(t, templates, 2)\n\tfor i, tmpl := range templates {\n\t\tassert.Equal(t, expected[i].Name, tmpl.Name)\n\t\tassert.Equal(t, expected[i].Text, tmpl.Text)\n\t}\n}\n"
        },
        {
          "name": "template_windows.go",
          "type": "blob",
          "size": 0.23828125,
          "content": "//go:build windows\n// +build windows\n\npackage gomplate\n\nimport (\n\t\"os\"\n\n\t\"golang.org/x/sys/windows\"\n)\n\nfunc isDirError(name string) *os.PathError {\n\treturn &os.PathError{\n\t\tOp:   \"open\",\n\t\tPath: name,\n\t\tErr:  windows.ERROR_INVALID_HANDLE,\n\t}\n}\n"
        },
        {
          "name": "template_windows_test.go",
          "type": "blob",
          "size": 1.7060546875,
          "content": "//go:build windows\n// +build windows\n\npackage gomplate\n\nimport (\n\t\"context\"\n\t\"io/fs\"\n\t\"os\"\n\t\"testing\"\n\n\t\"github.com/hack-pad/hackpadfs\"\n\t\"github.com/hack-pad/hackpadfs/mem\"\n\t\"github.com/hairyhenderson/gomplate/v4/internal/datafs\"\n\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n)\n\nfunc TestWalkDir_Windows(t *testing.T) {\n\twd, _ := os.Getwd()\n\tt.Cleanup(func() {\n\t\t_ = os.Chdir(wd)\n\t})\n\t_ = os.Chdir(\"C:/\")\n\n\tmemfs, _ := mem.NewFS()\n\tfsys := datafs.WrapWdFS(memfs)\n\n\tctx := datafs.ContextWithFSProvider(context.Background(), datafs.WrappedFSProvider(fsys, \"file\"))\n\n\tcfg := &Config{}\n\n\t_, err := walkDir(ctx, cfg, `C:\\indir`, simpleNamer(`C:/outdir`), nil, nil, 0, false)\n\trequire.Error(t, err)\n\n\terr = hackpadfs.MkdirAll(fsys, `C:\\indir\\one`, 0o777)\n\trequire.NoError(t, err)\n\terr = hackpadfs.MkdirAll(fsys, `C:\\indir\\two`, 0o777)\n\trequire.NoError(t, err)\n\terr = hackpadfs.WriteFullFile(fsys, `C:\\indir\\one\\foo`, []byte(\"foo\"), 0o644)\n\trequire.NoError(t, err)\n\terr = hackpadfs.WriteFullFile(fsys, `C:\\indir\\one\\bar`, []byte(\"bar\"), 0o644)\n\trequire.NoError(t, err)\n\terr = hackpadfs.WriteFullFile(fsys, `C:\\indir\\two\\baz`, []byte(\"baz\"), 0o644)\n\trequire.NoError(t, err)\n\n\tfi, err := fs.Stat(fsys, `C:\\indir\\two\\baz`)\n\trequire.NoError(t, err)\n\tassert.Equal(t, \"baz\", fi.Name())\n\n\ttemplates, err := walkDir(ctx, cfg, `C:\\indir`, simpleNamer(`C:/outdir`), []string{`*\\two`}, []string{}, 0, false)\n\trequire.NoError(t, err)\n\n\texpected := []Template{\n\t\t{\n\t\t\tName: `C:/indir/one/bar`,\n\t\t\tText: \"bar\",\n\t\t},\n\t\t{\n\t\t\tName: `C:/indir/one/foo`,\n\t\t\tText: \"foo\",\n\t\t},\n\t}\n\trequire.Len(t, templates, 2)\n\tfor i, tmpl := range templates {\n\t\tassert.Equal(t, expected[i].Name, tmpl.Name)\n\t\tassert.Equal(t, expected[i].Text, tmpl.Text)\n\t}\n}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "time",
          "type": "tree",
          "content": null
        },
        {
          "name": "tmpl",
          "type": "tree",
          "content": null
        },
        {
          "name": "version",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}