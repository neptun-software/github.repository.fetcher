{
  "metadata": {
    "timestamp": 1736566568713,
    "page": 117,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "zalando/postgres-operator",
      "stars": 4461,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.052734375,
          "content": "[flake8]\nexclude=.git,__pycache__\nmax-line-length=120\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.2822265625,
          "content": "# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n_obj\n_test\n_manifests\n_tmp\ngithub.com\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\n*.test\n*.prof\n/vendor/\n/kubectl-pg/vendor/\n/build/\n/docker/build/\n/github.com/\n.idea\n.vscode\n\nscm-source.json\n\n# diagrams\n*.aux\n*.log\n\n# Python\n# Adapted from https://github.com/github/gitignore/blob/master/Python.gitignore\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# Distribution / packaging\n.Python\nui/app/node_modules\nui/operator_ui/static/build\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n.pytest_cache/\n\n# e2e tests\ne2e/manifests\ne2e/tls\n\n# Translations\n*.mo\n*.pot\n\nmocks\n\nui/.npm/\n\n.DS_Store\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 0.0927734375,
          "content": "# https://github.com/golangci/golangci/wiki/Configuration\n\nservice:\n  prepare:\n    - make deps\n"
        },
        {
          "name": ".zappr.yaml",
          "type": "blob",
          "size": 0.2900390625,
          "content": "# for github.com\nX-Zalando-Team: \"acid\"\n# type should be one of [code, doc, config, tools, secrets]\n# code will be the default value, if X-Zalando-Type is not found in .zappr.yml\nX-Zalando-Type: code\n\napprovals:\n  groups:\n    zalando:\n      minimum: 2\n      from:\n        orgs:\n          - zalando"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.091796875,
          "content": "# global owners\n*        @sdudoladov @Jan-M @FxKu @jopadi @idanovinda @hughcapet @macedigital\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.8212890625,
          "content": "# Contributing guidelines\n\nWanna contribute to the Postgres Operator? Yay - here is how!\n\n## Reporting issues\n\nBefore filing an issue, if you have a question about Postgres Operator or have\na problem using it, please read the [concepts](docs/index.md) page or use the\ndifferent guides that we provide for [users](docs/user.md),\n[developers](docs/developer.md) or [admins](docs/administrator). Also double\ncheck with the current issues on our [Issues Tracker](https://github.com/zalando/postgres-operator/issues).\n\n## Contributing a pull request\n\n1. Submit a comment to the relevant issue or create a new issue describing your\n   proposed change.\n2. Do a fork, develop and test your code changes.\n3. Include documentation\n4. Submit a pull request.\n\nYou'll get feedback about your pull request as soon as possible.\n\nHappy Operator hacking ;-)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0517578125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2024 Zalando SE\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 0.2900390625,
          "content": "Sergey Dudoladov <sergey.dudoladov@zalando.de>\nFelix Kunde <felix.kunde@zalando.de>\nJan Mussler <jan.mussler@zalando.de>\nJociele Padilha <jociele.padilha@zalando.de>\nIda Novindasari <ida.novindasari@zalando.de>\nPolina Bungina <polina.bungina@zalando.de>\nMatthias Adler <matthias.adler@zalando.de>\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.4853515625,
          "content": ".PHONY: clean local test linux macos mocks docker push e2e\n\nBINARY ?= postgres-operator\nBUILD_FLAGS ?= -v\nCGO_ENABLED ?= 0\nifeq ($(RACE),1)\n\tBUILD_FLAGS += -race -a\n    CGO_ENABLED=1\nendif\n\nLOCAL_BUILD_FLAGS ?= $(BUILD_FLAGS)\nLDFLAGS ?= -X=main.version=$(VERSION)\nDOCKERDIR = docker\n\nIMAGE ?= registry.opensource.zalan.do/acid/$(BINARY)\nTAG ?= $(VERSION)\nGITHEAD = $(shell git rev-parse --short HEAD)\nGITURL = $(shell git config --get remote.origin.url)\nGITSTATUS = $(shell git status --porcelain || echo \"no changes\")\nSOURCES = cmd/main.go\nVERSION ?= $(shell git describe --tags --always --dirty)\nDIRS := cmd pkg\nPKG := `go list ./... | grep -v /vendor/`\n\nifeq ($(DEBUG),1)\n\tDOCKERFILE = DebugDockerfile\n\tDEBUG_POSTFIX := -debug-$(shell date hhmmss)\n\tBUILD_FLAGS += -gcflags \"-N -l\"\nelse\n\tDOCKERFILE = Dockerfile\nendif\n\nifeq ($(FRESH),1)\n  DEBUG_FRESH=$(shell date +\"%H-%M-%S\")\nendif\n\nifdef CDP_PULL_REQUEST_NUMBER\n\tCDP_TAG := -${CDP_BUILD_VERSION}\nendif\n\nifndef GOPATH\n\tGOPATH := $(HOME)/go\nendif\n\nPATH := $(GOPATH)/bin:$(PATH)\nSHELL := env PATH=$(PATH) $(SHELL)\n\ndefault: local\n\nclean:\n\trm -rf build\n\nlocal: ${SOURCES}\n\thack/verify-codegen.sh\n\tCGO_ENABLED=${CGO_ENABLED} go build -o build/${BINARY} $(LOCAL_BUILD_FLAGS) -ldflags \"$(LDFLAGS)\" $^\n\nlinux: ${SOURCES}\n\tGOOS=linux GOARCH=amd64 CGO_ENABLED=${CGO_ENABLED} go build -o build/linux/${BINARY} ${BUILD_FLAGS} -ldflags \"$(LDFLAGS)\" $^\n\nmacos: ${SOURCES}\n\tGOOS=darwin GOARCH=amd64 CGO_ENABLED=${CGO_ENABLED} go build -o build/macos/${BINARY} ${BUILD_FLAGS} -ldflags \"$(LDFLAGS)\" $^\n\ndocker: ${DOCKERDIR}/${DOCKERFILE}\n\techo `(env)`\n\techo \"Tag ${TAG}\"\n\techo \"Version ${VERSION}\"\n\techo \"CDP tag ${CDP_TAG}\"\n\techo \"git describe $(shell git describe --tags --always --dirty)\"\n\tdocker build --rm -t \"$(IMAGE):$(TAG)$(CDP_TAG)$(DEBUG_FRESH)$(DEBUG_POSTFIX)\" -f \"${DOCKERDIR}/${DOCKERFILE}\" --build-arg VERSION=\"${VERSION}\" .\n\nindocker-race:\n\tdocker run --rm -v \"${GOPATH}\":\"${GOPATH}\" -e GOPATH=\"${GOPATH}\" -e RACE=1 -w ${PWD} golang:1.23.4 bash -c \"make linux\"\n\npush:\n\tdocker push \"$(IMAGE):$(TAG)$(CDP_TAG)\"\n\nmocks:\n\tGO111MODULE=on go generate ./...\n\ntools:\n\tGO111MODULE=on go get k8s.io/client-go@kubernetes-1.30.4\n\tGO111MODULE=on go install github.com/golang/mock/mockgen@v1.6.0\n\tGO111MODULE=on go mod tidy\n\nfmt:\n\t@gofmt -l -w -s $(DIRS)\n\nvet:\n\t@go vet $(PKG)\n\t@staticcheck $(PKG)\n\ndeps: tools\n\tGO111MODULE=on go mod vendor\n\ntest:\n\thack/verify-codegen.sh\n\tGO111MODULE=on go test ./...\n\ncodegen:\n\thack/update-codegen.sh\n\ne2e: docker # build operator image to be tested\n\tcd e2e; make e2etest\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.2666015625,
          "content": "# Postgres Operator\n\n![Tests](https://github.com/zalando/postgres-operator/workflows/operator-tests/badge.svg)\n![E2E Tests](https://github.com/zalando/postgres-operator/workflows/operator-e2e-tests/badge.svg)\n[![Coverage Status](https://coveralls.io/repos/github/zalando/postgres-operator/badge.svg?branch=master)](https://coveralls.io/github/zalando/postgres-operator?branch=master)\n\n<img src=\"docs/diagrams/logo.png\" width=\"200\">\n\nThe Postgres Operator delivers an easy to run highly-available [PostgreSQL](https://www.postgresql.org/)\nclusters on Kubernetes (K8s) powered by [Patroni](https://github.com/zalando/patroni).\nIt is configured only through Postgres manifests (CRDs) to ease integration into automated CI/CD\npipelines with no access to Kubernetes API directly, promoting infrastructure as code vs manual operations.\n\n### Operator features\n\n* Rolling updates on Postgres cluster changes, incl. quick minor version updates\n* Live volume resize without pod restarts (AWS EBS, PVC)\n* Database connection pooling with PGBouncer\n* Support fast in place major version upgrade. Supports global upgrade of all clusters.\n* Restore and cloning Postgres clusters on AWS, GCS and Azure\n* Additionally logical backups to S3 or GCS bucket can be configured\n* Standby cluster from S3 or GCS WAL archive\n* Configurable for non-cloud environments\n* Basic credential and user management on K8s, eases application deployments\n* Support for custom TLS certificates\n* UI to create and edit Postgres cluster manifests\n* Compatible with OpenShift\n\n### PostgreSQL features\n\n* Supports PostgreSQL 17, starting from 13+\n* Streaming replication cluster via Patroni\n* Point-In-Time-Recovery with\n[pg_basebackup](https://www.postgresql.org/docs/17/app-pgbasebackup.html) /\n[WAL-E](https://github.com/wal-e/wal-e) via [Spilo](https://github.com/zalando/spilo)\n* Preload libraries: [bg_mon](https://github.com/CyberDem0n/bg_mon),\n[pg_stat_statements](https://www.postgresql.org/docs/17/pgstatstatements.html),\n[pgextwlist](https://github.com/dimitri/pgextwlist),\n[pg_auth_mon](https://github.com/RafiaSabih/pg_auth_mon)\n* Incl. popular Postgres extensions such as\n[decoderbufs](https://github.com/debezium/postgres-decoderbufs),\n[hypopg](https://github.com/HypoPG/hypopg),\n[pg_cron](https://github.com/citusdata/pg_cron),\n[pg_partman](https://github.com/pgpartman/pg_partman),\n[pg_stat_kcache](https://github.com/powa-team/pg_stat_kcache),\n[pgq](https://github.com/pgq/pgq),\n[pgvector](https://github.com/pgvector/pgvector),\n[plpgsql_check](https://github.com/okbob/plpgsql_check),\n[postgis](https://postgis.net/),\n[set_user](https://github.com/pgaudit/set_user) and\n[timescaledb](https://github.com/timescale/timescaledb)\n\nThe Postgres Operator has been developed at Zalando and is being used in\nproduction for over five years.\n\n## Supported Postgres & K8s versions\n\n| Release   | Postgres versions | K8s versions      | Golang  |\n| :-------- | :---------------: | :---------------: | :-----: |\n| v1.14.0   | 13 &rarr; 17      | 1.27+             | 1.23.4  |\n| v1.13.0   | 12 &rarr; 16      | 1.27+             | 1.22.5  |\n| v1.12.0   | 11 &rarr; 16      | 1.27+             | 1.22.3  |\n| v1.11.0   | 11 &rarr; 16      | 1.27+             | 1.21.7  |\n| v1.10.1   | 10 &rarr; 15      | 1.21+             | 1.19.8  |\n| v1.9.0    | 10 &rarr; 15      | 1.21+             | 1.18.9  |\n\n## Getting started\n\nFor a quick first impression follow the instructions of this\n[tutorial](docs/quickstart.md).\n\n## Supported setups of Postgres and Applications\n\n![Features](docs/diagrams/neutral_operator_dark.png#gh-dark-mode-only)\n![Features](docs/diagrams/neutral_operator_light.png#gh-light-mode-only)\n\n## Documentation\n\nThere is a browser-friendly version of this documentation at\n[postgres-operator.readthedocs.io](https://postgres-operator.readthedocs.io)\n\n* [How it works](docs/index.md)\n* [Installation](docs/quickstart.md#deployment-options)\n* [The Postgres experience on K8s](docs/user.md)\n* [The Postgres Operator UI](docs/operator-ui.md)\n* [DBA options - from RBAC to backup](docs/administrator.md)\n* [Build, debug and extend the operator](docs/developer.md)\n* [Configuration options](docs/reference/operator_parameters.md)\n* [Postgres manifest reference](docs/reference/cluster_manifest.md)\n* [Command-line options and environment variables](docs/reference/command_line_and_environment.md)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.09765625,
          "content": "# Security\n\nIf you have discovered a security vulnerability, please email tech-security@zalando.de.\n"
        },
        {
          "name": "build-ci.sh",
          "type": "blob",
          "size": 0.2021484375,
          "content": "#!/bin/sh\nset -e -x\n\nteam_repo=\"$GOPATH/src/github.com/zalando/\"\nproject_dir=\"$team_repo/postgres-operator\"\n\nmkdir -p \"$team_repo\"\n\nln -s \"$PWD\" \"$project_dir\"\ncd \"$project_dir\"\n\nmake deps clean docker push\n"
        },
        {
          "name": "charts",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "delivery.yaml",
          "type": "blob",
          "size": 2.0693359375,
          "content": "version: \"2017-09-20\"\npipeline:\n    - id: build-postgres-operator\n      type: script\n      vm_config:\n        type: linux\n        size: large\n        image: cdp-runtime/go\n      cache:\n        paths:\n          - /go/pkg/mod       # pkg cache for Go modules\n          - ~/.cache/go-build # Go build cache\n      commands:\n        - desc: Run unit tests\n          cmd: |\n            make deps mocks test\n\n        - desc: Build Docker image\n          cmd: |\n            IS_PR_BUILD=${CDP_PULL_REQUEST_NUMBER+\"true\"}\n            if [[ ${CDP_TARGET_BRANCH} == \"master\" && ${IS_PR_BUILD} != \"true\" ]]\n            then\n              IMAGE=registry-write.opensource.zalan.do/acid/postgres-operator\n            else\n              IMAGE=registry-write.opensource.zalan.do/acid/postgres-operator-test\n            fi\n            export IMAGE\n            make docker push\n\n    - id: build-operator-ui\n      type: script\n      vm_config:\n        type: linux\n\n      commands:\n        - desc: 'Prepare environment'\n          cmd: |\n            apt-get update\n            apt-get install -y build-essential\n\n        - desc: 'Compile JavaScript app'\n          cmd: |\n            cd ui\n            make appjs\n\n        - desc: 'Build and push Docker image'\n          cmd: |\n            cd ui\n            IS_PR_BUILD=${CDP_PULL_REQUEST_NUMBER+\"true\"}\n            if [[ ${CDP_TARGET_BRANCH} == \"master\" && ${IS_PR_BUILD} != \"true\" ]]\n            then\n              IMAGE=registry-write.opensource.zalan.do/acid/postgres-operator-ui\n            else\n              IMAGE=registry-write.opensource.zalan.do/acid/postgres-operator-ui-test\n            fi\n            export IMAGE\n            make docker\n            make push\n\n    - id: build-logical-backup\n      type: script\n      vm_config:\n        type: linux\n\n      commands:\n        - desc: Build image\n          cmd: |\n            cd logical-backup\n            export TAG=$(git describe --tags --always --dirty)\n            IMAGE=\"registry-write.opensource.zalan.do/acid/logical-backup\"\n            docker build --rm -t \"$IMAGE:$TAG$CDP_TAG\" .\n            docker push \"$IMAGE:$TAG$CDP_TAG\"\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "e2e",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 3.060546875,
          "content": "module github.com/zalando/postgres-operator\n\ngo 1.23.4\n\nrequire (\n\tgithub.com/aws/aws-sdk-go v1.53.8\n\tgithub.com/golang/mock v1.6.0\n\tgithub.com/lib/pq v1.10.9\n\tgithub.com/motomux/pretty v0.0.0-20161209205251-b2aad2c9a95d\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/r3labs/diff v1.1.0\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/stretchr/testify v1.9.0\n\tgolang.org/x/crypto v0.31.0\n\tgolang.org/x/exp v0.0.0-20240112132812-db7319d0e0e3\n\tgopkg.in/yaml.v2 v2.4.0\n\tk8s.io/api v0.30.4\n\tk8s.io/apiextensions-apiserver v0.25.9\n\tk8s.io/apimachinery v0.30.4\n\tk8s.io/client-go v0.30.4\n\tk8s.io/code-generator v0.25.9\n)\n\nrequire (\n\tgithub.com/Masterminds/semver v1.5.0\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/emicklei/go-restful/v3 v3.11.0 // indirect\n\tgithub.com/evanphx/json-patch v4.12.0+incompatible // indirect\n\tgithub.com/go-logr/logr v1.4.1 // indirect\n\tgithub.com/go-openapi/jsonpointer v0.19.6 // indirect\n\tgithub.com/go-openapi/jsonreference v0.20.2 // indirect\n\tgithub.com/go-openapi/swag v0.22.3 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/golang/protobuf v1.5.4 // indirect\n\tgithub.com/google/gnostic-models v0.6.8 // indirect\n\tgithub.com/google/go-cmp v0.6.0 // indirect\n\tgithub.com/google/gofuzz v1.2.0 // indirect\n\tgithub.com/google/uuid v1.3.0 // indirect\n\tgithub.com/gorilla/websocket v1.5.0 // indirect\n\tgithub.com/imdario/mergo v0.3.6 // indirect\n\tgithub.com/jmespath/go-jmespath v0.4.0 // indirect\n\tgithub.com/josharian/intern v1.0.0 // indirect\n\tgithub.com/json-iterator/go v1.1.12 // indirect\n\tgithub.com/kr/text v0.2.0 // indirect\n\tgithub.com/mailru/easyjson v0.7.7 // indirect\n\tgithub.com/moby/spdystream v0.2.0 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/mxk/go-flowrate v0.0.0-20140419014527-cca7078d478f // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgolang.org/x/mod v0.17.0 // indirect\n\tgolang.org/x/net v0.25.0 // indirect\n\tgolang.org/x/oauth2 v0.10.0 // indirect\n\tgolang.org/x/sync v0.10.0 // indirect\n\tgolang.org/x/sys v0.28.0 // indirect\n\tgolang.org/x/term v0.27.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgolang.org/x/time v0.3.0 // indirect\n\tgolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d // indirect\n\tgoogle.golang.org/appengine v1.6.7 // indirect\n\tgoogle.golang.org/protobuf v1.33.0 // indirect\n\tgopkg.in/inf.v0 v0.9.1 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n\tk8s.io/gengo v0.0.0-20220902162205-c0856e24416d // indirect\n\tk8s.io/gengo/v2 v2.0.0-20240228010128-51d4e06bde70 // indirect\n\tk8s.io/klog/v2 v2.120.1 // indirect\n\tk8s.io/kube-openapi v0.0.0-20240228011516-70dd3763d340 // indirect\n\tk8s.io/utils v0.0.0-20230726121419-3b25d923346b // indirect\n\tsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd // indirect\n\tsigs.k8s.io/structured-merge-diff/v4 v4.4.1 // indirect\n\tsigs.k8s.io/yaml v1.3.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 19.8251953125,
          "content": "github.com/Masterminds/semver v1.5.0 h1:H65muMkzWKEuNDnfl9d70GUjFniHKHRbFPGBuZ3QEww=\ngithub.com/Masterminds/semver v1.5.0/go.mod h1:MB6lktGJrhw8PrUyiEoblNEGEQ+RzHPF078ddwwvV3Y=\ngithub.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5 h1:0CwZNZbxp69SHPdPJAN/hZIm0C4OItdklCFmMRWYpio=\ngithub.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5/go.mod h1:wHh0iHkYZB8zMSxRWpUBQtwG5a7fFgvEO+odwuTv2gs=\ngithub.com/aws/aws-sdk-go v1.53.8 h1:eoqGb1WOHIrCFKo1d51cMcnt1ralfLFaEqRkC5Zzv8k=\ngithub.com/aws/aws-sdk-go v1.53.8/go.mod h1:LF8svs817+Nz+DmiMQKTO3ubZ/6IaTpq3TjupRn3Eqk=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/emicklei/go-restful/v3 v3.11.0 h1:rAQeMHw1c7zTmncogyy8VvRZwtkmkZ4FxERmMY4rD+g=\ngithub.com/emicklei/go-restful/v3 v3.11.0/go.mod h1:6n3XBCmQQb25CM2LCACGz8ukIrRry+4bhvbpWn3mrbc=\ngithub.com/evanphx/json-patch v4.12.0+incompatible h1:4onqiflcdA9EOZ4RxV643DvftH5pOlLGNtQ5lPWQu84=\ngithub.com/evanphx/json-patch v4.12.0+incompatible/go.mod h1:50XU6AFN0ol/bzJsmQLiYLvXMP4fmwYFNcr97nuDLSk=\ngithub.com/go-logr/logr v0.2.0/go.mod h1:z6/tIYblkpsD+a4lm/fGIIU9mZ+XfAiaFtq7xTgseGU=\ngithub.com/go-logr/logr v1.4.1 h1:pKouT5E8xu9zeFC39JXRDukb6JFQPXM5p5I91188VAQ=\ngithub.com/go-logr/logr v1.4.1/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-openapi/jsonpointer v0.19.6 h1:eCs3fxoIi3Wh6vtgmLTOjdhSpiqphQ+DaPn38N2ZdrE=\ngithub.com/go-openapi/jsonpointer v0.19.6/go.mod h1:osyAmYz/mB/C3I+WsTTSgw1ONzaLJoLCyoi6/zppojs=\ngithub.com/go-openapi/jsonreference v0.20.2 h1:3sVjiK66+uXK/6oQ8xgcRKcFgQ5KXa2KvnJRumpMGbE=\ngithub.com/go-openapi/jsonreference v0.20.2/go.mod h1:Bl1zwGIM8/wsvqjsOQLJ/SH+En5Ap4rVB5KVcIDZG2k=\ngithub.com/go-openapi/swag v0.22.3 h1:yMBqmnQ0gyZvEb/+KzuWZOXgllrXT4SADYbvDaXHv/g=\ngithub.com/go-openapi/swag v0.22.3/go.mod h1:UzaqsxGiab7freDnrUUra0MwWfN/q7tE4j+VcZ0yl14=\ngithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 h1:tfuBGBXKqDEevZMzYi5KSi8KkcZtzBcTgAUUtapy0OI=\ngithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572/go.mod h1:9Pwr4B2jHnOSGXyyzV8ROjYa2ojvAY6HCGYYfMoC3Ls=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.6.0 h1:ErTB+efbowRARo13NNdxyJji2egdxLGQhRaY+DUumQc=\ngithub.com/golang/mock v1.6.0/go.mod h1:p6yTPP+5HYm5mzsMV8JkE6ZKdX+/wYM6Hr+LicevLPs=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/gnostic-models v0.6.8 h1:yo/ABAfM5IMRsS1VnXjTBvUb61tFIHozhlYvRgGre9I=\ngithub.com/google/gnostic-models v0.6.8/go.mod h1:5n7qKqH0f5wFt+aWF8CW6pZLLNOfYuF5OpfBSENuI8U=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/gofuzz v1.1.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/gofuzz v1.2.0 h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=\ngithub.com/google/gofuzz v1.2.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/pprof v0.0.0-20210720184732-4bb14d4b1be1 h1:K6RDEckDVWvDI9JAJYCmNdQXq6neHJOYx3V6jnqNEec=\ngithub.com/google/pprof v0.0.0-20210720184732-4bb14d4b1be1/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/uuid v1.3.0 h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=\ngithub.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gorilla/websocket v1.4.2/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/gorilla/websocket v1.5.0 h1:PPwGk2jz7EePpoHN/+ClbZu8SPxiqlu12wZP/3sWmnc=\ngithub.com/gorilla/websocket v1.5.0/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/imdario/mergo v0.3.6 h1:xTNEAn+kxVO7dTZGu0CegyqKZmoWFI0rF8UxjlB2d28=\ngithub.com/imdario/mergo v0.3.6/go.mod h1:2EnlNZ0deacrJVfApfmtdGgDfMuh/nq6Ok1EcJh5FfA=\ngithub.com/jmespath/go-jmespath v0.4.0 h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=\ngithub.com/jmespath/go-jmespath v0.4.0/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1 h1:shLQSRRSCCPj3f2gpwzGwWFoC7ycTf1rcQZHOlsJ6N8=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1/go.mod h1:L3OGu8Wl2/fWfCI6z80xFu9LTZmf1ZRjMHUOPmWr69U=\ngithub.com/josharian/intern v1.0.0 h1:vlS4z54oSdjm0bgjRigI+G1HpF+tI+9rE5LLzOg8HmY=\ngithub.com/josharian/intern v1.0.0/go.mod h1:5DoeVV0s6jJacbCEi61lwdGj/aVlrQvzHFFd8Hwg//Y=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/kr/pretty v0.2.0/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/lib/pq v1.10.9 h1:YXG7RB+JIjhP29X+OtkiDnYaXQwpS4JEWq7dtCCRUEw=\ngithub.com/lib/pq v1.10.9/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=\ngithub.com/mailru/easyjson v0.7.7/go.mod h1:xzfreul335JAWq5oZzymOObrkdz5UnU4kGfJJLY9Nlc=\ngithub.com/moby/spdystream v0.2.0 h1:cjW1zVyyoiM0T7b6UoySUFqzXMoqRckQtXwGPiBhOM8=\ngithub.com/moby/spdystream v0.2.0/go.mod h1:f7i0iNDQJ059oMTcWxx8MA/zKFIuD/lY+0GqbN2Wy8c=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/motomux/pretty v0.0.0-20161209205251-b2aad2c9a95d h1:LznySqW8MqVeFh+pW6rOkFdld9QQ7jRydBKKM6jyPVI=\ngithub.com/motomux/pretty v0.0.0-20161209205251-b2aad2c9a95d/go.mod h1:u3hJ0kqCQu/cPpsu3RbCOPZ0d7V3IjPjv1adNRleM9I=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/mxk/go-flowrate v0.0.0-20140419014527-cca7078d478f h1:y5//uYreIhSUg3J1GEMiLbxo1LJaP8RfCpH6pymGZus=\ngithub.com/mxk/go-flowrate v0.0.0-20140419014527-cca7078d478f/go.mod h1:ZdcZmHo+o7JKHSa8/e818NopupXU1YMK5fe1lsApnBw=\ngithub.com/onsi/ginkgo/v2 v2.15.0 h1:79HwNRBAZHOEwrczrgSOPy+eFTTlIGELKy5as+ClttY=\ngithub.com/onsi/ginkgo/v2 v2.15.0/go.mod h1:HlxMHtYF57y6Dpf+mc5529KKmSq9h2FpCF+/ZkwUxKM=\ngithub.com/onsi/gomega v1.31.0 h1:54UJxxj6cPInHS3a35wm6BK/F9nHYueZ1NVujHDrnXE=\ngithub.com/onsi/gomega v1.31.0/go.mod h1:DW9aCi7U6Yi40wNVAvT6kzFnEVEI5n3DloYBiKiT6zk=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/r3labs/diff v1.1.0 h1:V53xhrbTHrWFWq3gI4b94AjgEJOerO1+1l0xyHOBi8M=\ngithub.com/r3labs/diff v1.1.0/go.mod h1:7WjXasNzi0vJetRcB/RqNl5dlIsmXcTTLmF5IoH6Xig=\ngithub.com/rogpeppe/go-internal v1.10.0 h1:TMyTOH3F/DB16zRVcYyreMH6GnZZrwQVAoYjRBZyWFQ=\ngithub.com/rogpeppe/go-internal v1.10.0/go.mod h1:UQnix2H7Ngw/k4C5ijL5+65zddjncjaFoBhdsK/akog=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20240112132812-db7319d0e0e3 h1:hNQpMuAJe5CtcUqCXaWga3FHu+kQvCqcsoVaQgSV60o=\ngolang.org/x/exp v0.0.0-20240112132812-db7319d0e0e3/go.mod h1:idGWGoKP1toJGkd5/ig9ZLuPcZBC3ewk7SzmH0uou08=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.17.0 h1:zY54UmvipHiNd+pm+m0x9KhZ9hl1/7QNMyxXbc6ICqA=\ngolang.org/x/mod v0.17.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=\ngolang.org/x/net v0.25.0 h1:d/OCCoBEUq33pjydKrGQhw7IlUPI2Oylr+8qLx49kac=\ngolang.org/x/net v0.25.0/go.mod h1:JkAGAh7GEvH74S6FOH42FLoXpXbE/aqXSrIQjXgsiwM=\ngolang.org/x/oauth2 v0.10.0 h1:zHCpF2Khkwy4mMB4bv0U37YtJdTGW8jI0glAApi0Kh8=\ngolang.org/x/oauth2 v0.10.0/go.mod h1:kTpgurOux7LqtuxjuyZa4Gj2gdezIt/jQtGnNFfypQI=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.27.0 h1:WP60Sv1nlK1T6SupCHbXzSaN0b9wUmsPoRS9b61A23Q=\ngolang.org/x/term v0.27.0/go.mod h1:iMsnZpn0cago0GOrHO2+Y7u7JPn5AylBrcoWkElMTSM=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.3.0 h1:rg5rLMjNzMS1RkNLzCG38eapWhnYLFYXDXj2gOlr8j4=\ngolang.org/x/time v0.3.0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200505023115-26f46d2f7ef8/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.1/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d h1:vU5i/LfpvrRCpgM/VPfJLg5KjxD3E+hfT1SH+d9zLwg=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d/go.mod h1:aiJjzUbINMkxbQROHiO6hDPo2LHcIPhhQsa9DLh0yGk=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/appengine v1.6.7 h1:FZR1q0exgwxzPzp/aF+VccGrSfxfPpkBqjIIEq3ru6c=\ngoogle.golang.org/appengine v1.6.7/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/protobuf v1.33.0 h1:uNO2rsAINq/JlFpSdYEKIZ0uKD/R9cpdv0T+yoGwGmI=\ngoogle.golang.org/protobuf v1.33.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/inf.v0 v0.9.1 h1:73M5CoZyi3ZLMOyDlQh031Cx6N9NDJ2Vvfl76EDAgDc=\ngopkg.in/inf.v0 v0.9.1/go.mod h1:cWUDdTG/fYaXco+Dcufb5Vnc6Gp2YChqWtbxRZE0mXw=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nk8s.io/api v0.30.4 h1:XASIELmW8w8q0i1Y4124LqPoWMycLjyQti/fdYHYjCs=\nk8s.io/api v0.30.4/go.mod h1:ZqniWRKu7WIeLijbbzetF4U9qZ03cg5IRwl8YVs8mX0=\nk8s.io/apiextensions-apiserver v0.25.9 h1:Pycd6lm2auABp9wKQHCFSEPG+NPdFSTJXPST6NJFzB8=\nk8s.io/apiextensions-apiserver v0.25.9/go.mod h1:ijGxmSG1GLOEaWhTuaEr0M7KUeia3mWCZa6FFQqpt1M=\nk8s.io/apimachinery v0.30.4 h1:5QHQI2tInzr8LsT4kU/2+fSeibH1eIHswNx480cqIoY=\nk8s.io/apimachinery v0.30.4/go.mod h1:iexa2somDaxdnj7bha06bhb43Zpa6eWH8N8dbqVjTUc=\nk8s.io/client-go v0.30.4 h1:eculUe+HPQoPbixfwmaSZGsKcOf7D288tH6hDAdd+wY=\nk8s.io/client-go v0.30.4/go.mod h1:IBS0R/Mt0LHkNHF4E6n+SUDPG7+m2po6RZU7YHeOpzc=\nk8s.io/code-generator v0.25.9 h1:lgyAV9AIRYNxZxgLRXqsCAtqJLHvakot41CjEqD5W0w=\nk8s.io/code-generator v0.25.9/go.mod h1:DHfpdhSUrwqF0f4oLqCtF8gYbqlndNetjBEz45nWzJI=\nk8s.io/gengo v0.0.0-20220902162205-c0856e24416d h1:U9tB195lKdzwqicbJvyJeOXV7Klv+wNAWENRnXEGi08=\nk8s.io/gengo v0.0.0-20220902162205-c0856e24416d/go.mod h1:FiNAH4ZV3gBg2Kwh89tzAEV2be7d5xI0vBa/VySYy3E=\nk8s.io/gengo/v2 v2.0.0-20240228010128-51d4e06bde70 h1:NGrVE502P0s0/1hudf8zjgwki1X/TByhmAoILTarmzo=\nk8s.io/gengo/v2 v2.0.0-20240228010128-51d4e06bde70/go.mod h1:VH3AT8AaQOqiGjMF9p0/IM1Dj+82ZwjfxUP1IxaHE+8=\nk8s.io/klog/v2 v2.2.0/go.mod h1:Od+F08eJP+W3HUb4pSrPpgp9DGU4GzlpG/TmITuYh/Y=\nk8s.io/klog/v2 v2.120.1 h1:QXU6cPEOIslTGvZaXvFWiP9VKyeet3sawzTOvdXb4Vw=\nk8s.io/klog/v2 v2.120.1/go.mod h1:3Jpz1GvMt720eyJH1ckRHK1EDfpxISzJ7I9OYgaDtPE=\nk8s.io/kube-openapi v0.0.0-20240228011516-70dd3763d340 h1:BZqlfIlq5YbRMFko6/PM7FjZpUb45WallggurYhKGag=\nk8s.io/kube-openapi v0.0.0-20240228011516-70dd3763d340/go.mod h1:yD4MZYeKMBwQKVht279WycxKyM84kkAx2DPrTXaeb98=\nk8s.io/utils v0.0.0-20230726121419-3b25d923346b h1:sgn3ZU783SCgtaSJjpcVVlRqd6GSnlTLKgpAAttJvpI=\nk8s.io/utils v0.0.0-20230726121419-3b25d923346b/go.mod h1:OLgZIPagt7ERELqWJFomSt595RzquPNLL48iOWgYOg0=\nsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd h1:EDPBXCAspyGV4jQlpZSudPeMmr1bNJefnuqLsRAsHZo=\nsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd/go.mod h1:B8JuhiUyNFVKdsE8h686QcCxMaH6HrOAZj4vswFpcB0=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.1 h1:150L+0vs/8DA78h1u02ooW1/fFq/Lwr+sGiqlzvrtq4=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.1/go.mod h1:N8hJocpFajUSSeSJ9bOZ77VzejKZaXsTtZo4/u7Io08=\nsigs.k8s.io/yaml v1.2.0/go.mod h1:yfXDCHCao9+ENCvLSE62v9VSji2MKu5jeNfTrofGhJc=\nsigs.k8s.io/yaml v1.3.0 h1:a2VclLzOGrwOHDiV8EfBGhvjHvP46CtW5j6POvhYGGo=\nsigs.k8s.io/yaml v1.3.0/go.mod h1:GeOyir5tyXNByN85N/dRIT9es5UQNerPYEKK56eTBm8=\n"
        },
        {
          "name": "hack",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubectl-pg",
          "type": "tree",
          "content": null
        },
        {
          "name": "logical-backup",
          "type": "tree",
          "content": null
        },
        {
          "name": "manifests",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 0.5078125,
          "content": "site_name: Postgres Operator\nrepo_url: https://github.com/zalando/postgres-operator\ntheme: readthedocs\n\nnav:\n  - Concepts: 'index.md'\n  - Quickstart: 'quickstart.md'\n  - Postgres Operator UI: 'operator-ui.md'\n  - Admin guide: 'administrator.md'\n  - User guide: 'user.md'\n  - Developer guide: 'developer.md'\n  - Reference:\n    - Config parameters: 'reference/operator_parameters.md'\n    - Manifest parameters: 'reference/cluster_manifest.md'\n    - CLI options and environment: 'reference/command_line_and_environment.md'\n"
        },
        {
          "name": "mocks",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "run_operator_locally.sh",
          "type": "blob",
          "size": 10.3076171875,
          "content": "#!/usr/bin/env bash\n#\n# Deploy a Postgres Operator to a minikube aka local Kubernetes cluster\n# Optionally re-build the operator binary beforehand to test local changes\n\n# Known limitations:\n# 1) minikube provides a single node K8s cluster. That is, you will not be able test functions like pod\n#    migration between multiple nodes locally\n# 2) this script configures the operator via configmap, not the operator CRD\n\n\n# enable unofficial bash strict mode\nset -o errexit\nset -o nounset\nset -o pipefail\nIFS=$'\\n\\t'\n\n\nreadonly PATH_TO_LOCAL_OPERATOR_MANIFEST=\"/tmp/local-postgres-operator-manifest.yaml\"\nreadonly PATH_TO_PORT_FORWARED_KUBECTL_PID=\"/tmp/kubectl-port-forward.pid\"\nreadonly PATH_TO_THE_PG_CLUSTER_MANIFEST=\"/tmp/minimal-postgres-manifest.yaml\"\nreadonly LOCAL_PORT=\"8080\"\nreadonly OPERATOR_PORT=\"8080\"\n\n\n# minikube needs time to create resources,\n# so the script retries actions until all the resources become available\nfunction retry(){\n\n    local -r retry_cmd=\"$1\"\n    local -r retry_msg=\"$2\"\n\n    # Time out after three minutes.\n    for i in {1..60}; do\n        if  eval \"$retry_cmd\"; then\n            return 0\n        fi\n        echo \"$retry_msg\"\n        sleep 3\n    done\n\n    >2& echo \"The command $retry_cmd timed out\"\n    return 1\n}\n\nfunction display_help(){\n    echo \"Usage: $0 [ -r | --rebuild-operator ] [ -h | --help ] [ -n | --deploy-new-operator-image ] [ -t | --deploy-pg-to-namespace-test ]\"\n}\n\nfunction clean_up(){\n\n    echo \"==== CLEAN UP PREVIOUS RUN ==== \"\n\n    local status\n    status=$(minikube status --format \"{{.Host}}\" || true)\n\n    if [[ \"$status\" = \"Running\" ]] || [[ \"$status\" = \"Stopped\" ]]; then\n        echo \"Delete the existing local cluster so that we can cleanly apply resources from scratch...\"\n        minikube delete\n    fi\n\n    if [[ -e \"$PATH_TO_LOCAL_OPERATOR_MANIFEST\" ]]; then\n        rm -v \"$PATH_TO_LOCAL_OPERATOR_MANIFEST\"\n    fi\n\n    # the kubectl process does the port-forwarding between operator and local ports\n    # we restart the process to bind to the same port again (see end of script)\n    if [[ -e \"$PATH_TO_PORT_FORWARED_KUBECTL_PID\" ]]; then\n\n        local pid\n        pid=$( < \"$PATH_TO_PORT_FORWARED_KUBECTL_PID\")\n\n        # the process dies if a minikube stops between two invocations of the script\n        if kill \"$pid\" > /dev/null  2>&1; then\n            echo \"Kill the kubectl process responsible for port forwarding for minikube so that we can re-use the same ports for forwarding later...\"\n        fi\n        rm -v  \"$PATH_TO_PORT_FORWARED_KUBECTL_PID\"\n\n    fi\n}\n\n\nfunction start_minikube(){\n\n    echo \"==== START MINIKUBE ====\"\n    echo \"May take a few minutes ...\"\n\n    minikube start\n    kubectl config set-context minikube\n\n    echo \"==== MINIKUBE STATUS ====\"\n    minikube status\n    echo \"\"\n}\n\n\nfunction build_operator_binary(){\n\n    # redirecting stderr greatly reduces non-informative output during normal builds\n    echo \"Build operator binary (stderr redirected to /dev/null)...\"\n    make clean deps local test > /dev/null 2>&1\n\n}\n\n\nfunction deploy_self_built_image() {\n\n    echo \"==== DEPLOY CUSTOM OPERATOR IMAGE ==== \"\n\n    build_operator_binary\n\n    # the fastest way to run a docker image locally is to reuse the docker from minikube\n    # set docker env vars so that docker can talk to the Docker daemon inside the minikube\n    eval $(minikube docker-env)\n\n    # image tag consists of a git tag or a unique commit prefix\n    # and the \"-dev\" suffix if there are uncommited changes in the working dir\n    local -x TAG\n    TAG=$(git describe --tags --always --dirty=\"-dev\")\n    readonly TAG\n\n    # build the image\n    make docker > /dev/null 2>&1\n\n    # update the tag in the postgres operator conf\n    # since the image with this tag already exists on the machine,\n    # docker should not attempt to fetch it from the registry due to imagePullPolicy\n    sed -e \"s/\\(image\\:.*\\:\\).*$/\\1$TAG/; s/smoke-tested-//\" manifests/postgres-operator.yaml > \"$PATH_TO_LOCAL_OPERATOR_MANIFEST\"\n\n    retry \"kubectl apply -f \\\"$PATH_TO_LOCAL_OPERATOR_MANIFEST\\\"\" \"attempt to create $PATH_TO_LOCAL_OPERATOR_MANIFEST resource\"\n}\n\n\nfunction start_operator(){\n\n    echo \"==== START OPERATOR ====\"\n    echo \"Certain operations may be retried multiple times...\"\n\n    # the order of resource initialization is significant\n    local file\n    for file  in \"configmap.yaml\" \"operator-service-account-rbac.yaml\"\n    do\n        retry \"kubectl  create -f manifests/\\\"$file\\\"\" \"attempt to create $file resource\"\n    done\n\n    cp  manifests/postgres-operator.yaml $PATH_TO_LOCAL_OPERATOR_MANIFEST\n\n    if [[ \"$should_build_custom_operator\" = true ]]; then # set in main()\n        deploy_self_built_image\n    else\n        retry \"kubectl create -f ${PATH_TO_LOCAL_OPERATOR_MANIFEST}\" \"attempt to create ${PATH_TO_LOCAL_OPERATOR_MANIFEST} resource\"\n    fi\n\n    local -r msg=\"Wait for the postgresql custom resource definition to register...\"\n    local -r cmd=\"kubectl get crd | grep --quiet 'postgresqls.acid.zalan.do'\"\n    retry \"$cmd\" \"$msg \"\n\n}\n\n\nfunction forward_ports(){\n\n    echo \"==== FORWARD OPERATOR PORT $OPERATOR_PORT TO LOCAL PORT $LOCAL_PORT  ====\"\n\n    local operator_pod\n    operator_pod=$(kubectl get pod -l name=postgres-operator -o jsonpath={.items..metadata.name})\n\n    # Spawn `kubectl port-forward` in the background to keep current terminal\n    # responsive. Hide stdout because otherwise there is a note about each TCP\n    # connection. Do not hide stderr so port-forward setup errors can be\n    # debugged. Sometimes the port-forward setup fails because expected k8s\n    # state isn't achieved yet. Try to detect that case and then run the\n    # command again (in a finite loop).\n    for _attempt in {1..20}; do\n        # Delay between retry attempts. First attempt should already be\n        # delayed.\n        echo \"soon: invoke kubectl port-forward command (attempt $_attempt)\"\n        sleep 5\n\n        # With the --pod-running-timeout=4s argument the process is expected\n        # to terminate within about that time if the pod isn't ready yet.\n        kubectl port-forward --pod-running-timeout=4s \"$operator_pod\" \"$LOCAL_PORT\":\"$OPERATOR_PORT\" 1> /dev/null &\n        _kubectl_pid=$!\n        _pf_success=true\n\n        # A successful `kubectl port-forward` setup can pragmatically be\n        # detected with a time-based criterion: it is a long-running process if\n        # successfully set up. If it does not terminate within deadline then\n        # consider the setup successful. Overall, observe the process for\n        # roughly 7 seconds. If it terminates before that it's certainly an\n        # error. If it did not terminate within that time frame then consider\n        # setup successful.\n        for ib in {1..7}; do\n            sleep 1\n            # Portable and non-blocking test: is process still running?\n            if kill -s 0 -- \"${_kubectl_pid}\" >/dev/null 2>&1; then\n                echo \"port-forward process is still running\"\n            else\n                # port-forward process seems to have terminated, reap zombie\n                set +e\n                # `wait` is now expected to be non-blocking, and exits with the\n                # exit code of pid (first arg).\n                wait $_kubectl_pid\n                _kubectl_rc=$?\n                set -e\n                echo \"port-forward process terminated with exit code ${_kubectl_rc}\"\n                _pf_success=false\n                break\n            fi\n        done\n\n        if [ ${_pf_success} = true ]; then\n            echo \"port-forward setup seems successful. leave retry loop.\"\n            break\n        fi\n\n    done\n\n    if [ \"${_pf_success}\" = false ]; then\n        echo \"port-forward setup failed after retrying. exit.\"\n        exit 1\n    fi\n\n    echo \"${_kubectl_pid}\" > \"$PATH_TO_PORT_FORWARED_KUBECTL_PID\"\n}\n\n\nfunction check_health(){\n\n    echo \"==== RUN HEALTH CHECK ==== \"\n\n    local -r check_cmd=\"curl --location --silent --output /dev/null http://127.0.0.1:$LOCAL_PORT/clusters\"\n    local -r check_msg=\"Wait for port forwarding to take effect\"\n    echo \"Command for checking: $check_cmd\"\n\n    if  retry \"$check_cmd\" \"$check_msg\"; then\n        echo \"==== SUCCESS: OPERATOR IS RUNNING ==== \"\n        echo \"To stop it cleanly, run 'minikube delete'\"\n    else\n        >2& echo \"==== FAILURE: OPERATOR DID NOT START OR PORT FORWARDING DID NOT WORK\"\n        exit 1\n    fi\n}\n\n\nfunction submit_postgresql_manifest(){\n\n    echo \"==== SUBMIT MINIMAL POSTGRES MANIFEST ==== \"\n\n    local namespace=\"default\"\n    cp manifests/minimal-postgres-manifest.yaml $PATH_TO_THE_PG_CLUSTER_MANIFEST\n\n    if $should_deploy_pg_to_namespace_test; then\n          kubectl create namespace test\n          namespace=\"test\"\n          sed --in-place 's/namespace: default/namespace: test/'  $PATH_TO_THE_PG_CLUSTER_MANIFEST\n    fi\n\n    kubectl create -f $PATH_TO_THE_PG_CLUSTER_MANIFEST\n    echo \"The operator will create the PG cluster with minimal manifest $PATH_TO_THE_PG_CLUSTER_MANIFEST in the ${namespace} namespace\"\n\n}\n\n\nfunction main(){\n\n    if ! [[ $(basename \"$PWD\") == \"postgres-operator\" ]]; then\n        echo \"Please execute the script only from the root directory of the Postgres Operator repo.\"\n        exit 1\n    fi\n\n    trap \"echo 'If you observe issues with minikube VM not starting/not proceeding, consider deleting the .minikube dir and/or rebooting before re-running the script'\" EXIT\n\n    local should_build_custom_operator=false\n    local should_deploy_pg_to_namespace_test=false\n    local should_replace_operator_image=false\n\n    while true\n    do\n        # if the 1st param is unset, use the empty string as a default value\n        case \"${1:-}\" in\n            -h | --help)\n                display_help\n                exit 0\n                ;;\n            -r | --rebuild-operator) # with minikube restart\n                should_build_custom_operator=true\n                break\n                ;;\n            -n | --deploy-new-operator-image) # without minikube restart that takes minutes\n                should_replace_operator_image=true\n                break\n                ;;\n            -t | --deploy-pg-to-namespace-test) # to test multi-namespace support locally\n                should_deploy_pg_to_namespace_test=true\n                break\n                ;;\n            *)  break\n                ;;\n        esac\n    done\n\n    if ${should_replace_operator_image}; then\n       deploy_self_built_image\n       exit 0\n    fi\n\n    clean_up\n    start_minikube\n    start_operator\n    submit_postgresql_manifest\n    forward_ports\n    check_health\n\n    exit 0\n}\n\n\nmain \"$@\"\n"
        },
        {
          "name": "ui",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}