{
  "metadata": {
    "timestamp": 1736566891896,
    "page": 464,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "869413421/chatgpt-web",
      "stars": 3194,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3212890625,
          "content": "# Binaries for programs and plugins\n*.exe\n*.exe~\n*.dll\n*.so\n*.dylib\n.idea/\n.vscode/\nwechatbot\nstorage.json\n\n# Test binary, built with `go test -c`\n*.test\n\n# Output of the go coverage tool, specifically when used with LiteIDE\n*.out\n\n# Dependency directories (remove the comment below to include it)\n# vendor/\n/config.json\n\ngo.sum\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.208984375,
          "content": "# 使用 golang 官方镜像提供 Go 运行环境，并且命名为 builder 以便后续引用\nFROM golang:1.18-alpine AS builder\n\n# 启用 Go Modules 并设置 GOPROXY\nENV GO111MODULE on\nENV GOPROXY https://goproxy.cn\n\n# 安装 Git\n#RUN apk --no-cache add git\n\n# 安装gcc\n#RUN apk --no-cache add gcc musl-dev\n\n# 设置工作目录\nWORKDIR /app\n\n# 将代码拷贝到镜像中\nCOPY . .\n\n# 先进行依赖下载\nRUN go mod tidy && go mod download\n\n# 构建二进制文件，设置了一些额外参数以便可以在 Alpine 中运行它\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o chatgpt-web\n\n# 下面是第二阶段的镜像构建，和之前保持一致\nFROM alpine:latest\n\n# 安装相关软件和库\nRUN apk update && apk add --no-cache bash supervisor ca-certificates\n\n# 设置工作目录\nWORKDIR /app\n\n# 复制资源和静态文件\nCOPY resources ./resources\nCOPY static ./static\n\n# 从上一个阶段构建的 builder 容器中复制二进制文件\nCOPY --from=builder /app/chatgpt-web .\n\n# 添加配置文件和 supervisord 配置文件\nCOPY supervisord.conf /etc/supervisord.conf\nCOPY config.dev.json ./config.json\n\n# 通过 Supervisor 管理服务\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisord.conf\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.1748046875,
          "content": ".PHONY: build\nbuild:\n\tCGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags '-w' -o chatgpt-web ./main.go\n\n.PHONY: docker\ndocker:\n\tdocker build . -t chatgpt-web:latest\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.3916015625,
          "content": "# chatgpt-web\n[![Release](https://img.shields.io/github/v/release/869413421/chatgpt-web.svg?style=flat-square)](https://github.com/869413421/wechatbot/releases/tag/v1.1.3)\n![Github stars](https://img.shields.io/github/stars/869413421/chatgpt-web.svg)\n![Forks](https://img.shields.io/github/forks/869413421/chatgpt-web.svg?style=flat-square)\n> 本项目可以一键部署属于自己定制化的 chatgpt web 程序(兼容gpt3.5)，\n> 只需下载release中对应平台的项目文件，修改配置后执行，打开 http://127.0.0.1:8080 ，便可以获得属于自己的chatgpt网站。\n>\n> 参考项目：[codegen](https://github.com/git-cloner/codegen)\n\n> 项目当前默认为示例中AI聊天机器人参数，可以根据自己需求定制化。\n>\n> **注意，每个参数都可能影响你得到不一样的聊天效果,改变一个参数你就可能得到另一种回答，所以请自己尝试去调试，不要上来就抱怨人工智障。文档中有二十多中参数示例，如AI聊天机器人\n> ，产品名称生成，python代码修复器等等等...**\n>\n> 详情参考官方详细[参数示例](https://beta.openai.com/examples)\n\n# 更新记录\n- [x] fix: 支持gpt-4模型，修改前端空白BUG。 2023-03-30\n- [x] fix: 增加用户模块，认证页面，接口jwt验证。 2023-03-27\n- [x] fix: 修复前端富文本显示问题，优化dockerfile。 2023-03-27\n- [x] fix: 优化前端显示界面。 2023-03-20\n- [x] feat: 增加接口代理配置。 2023-03-20\n- [x] fix: 修复前端部分BUG，优化富文本代码格式。 2023-03-13\n- [x] feat: 增加socsk5代理的支持，命令行参数配置。2023-03-13\n- [x] feat: 增加docker-compose.yaml。2023-03-08\n- [x] fix: 修复basic auth 。 2023-03-08\n- [x] feat：修改为默认不开启代理。2023-03-06\n- [x] feat：增加代理配置，解决国内无法使用。2023-03-04\n\n# 项目功能\n* 请求openai增加代理（防墙）\n* AI性格设定\n* 兼容3.0和3.5API\n* 基本问答界面\n* 参数可配置\n* markdown语法\n* 提问上下文\n# 使用前提\n> 有openai账号，并且创建好api_key，注册事项可以参考[此文章](https://juejin.cn/post/7173447848292253704) 。\n\n\n# 快速开始\n\n`第一种：直接下载二进制(适合对编程不了解的同学)`\n\n> 非技术人员请直接下载release中的[压缩包](https://github.com/869413421/chatgpt-web/releases) ，请根据自己系统以及架构选择合适的压缩包，下载之后直接解压运行。\n\n下载之后，在本地解压，即可看到可执行程序，与配置文件：\n\n```\n# windows\n1.下载压缩包解压\n2.复制文件中config.dev.json更改为config.json\n3.将config.json中的api_key替换为自己的\n4.双击exe运行，启动服务\n\n# linux\n$ tar xf chatgpt-web-v0.0.2-darwin-arm64.tar.gz # 解压\n$ cd chatgpt-web-v0.0.2-darwin-arm64\n$ cp config.dev.json # 根据情况调整配置文件内容\n$ ./chatgpt-web  # 直接运行\n\n# 如果要守护在后台运行\n$ nohup ./chatgpt-web &> run.log &\n$ tail -f run.log\n```\n\n`第二种：基于源码运行(适合了解go语言编程的同学)`\n\n````\n# 获取项目\n$ git clone https://github.com/869413421/chatgpt-web.git\n\n# 进入项目目录\n$ cd chatgpt-web\n\n# 复制配置文件\n$ copy config.dev.json config.json\n\n# 启动项目\n$ go run main.go\n````\n\n# 使用docker运行\n你可以使用docker快速运行本项目。\n`第一种：基于环境变量运行`\n\n```sh\n# 运行项目，环境变量参考下方配置说明\n$ docker run -itd --name chatgpt-web --restart=always \\\n -e APIKEY=换成你的key \\\n -e APIURL= \\\n -e MODEL=gpt-3.5-turbo-0301 \\\n -e BOT_DESC=你是一个AI助手,我需要你模拟一名温柔贴心的女朋友来回答我的问题. \\\n -e MAX_TOKENS=512 \\\n -e TEMPREATURE=0.9 \\\n -e TOP_P=1 \\\n -e FREQ=0.0 \\\n -e PRES=0.6 \\\n -e PROXY=http://host.docker.internal:10809 \\\n -e AUTH_USER= \\\n -e AUTH_PASSWORD= \\\n -p 8080:8080 \\\n --add-host=\"host.docker.internal:host-gateway\" \\\n qingshui869413421/chatgpt-web:latest\n```\n\n`注意`：`host.docker.internal`会指向容器所在宿主机的IP，因此只需要更改端口为你的代理端口即可。\n\n运行命令中映射的配置文件参考下边的配置文件说明。\n\n`第二种：基于配置文件挂载运行`\n\n```sh\n# 复制配置文件，根据自己实际情况，调整配置里的内容\n$ cp config.dev.json config.json  # 其中 config.dev.json 从项目的根目录获取\n\n# 运行项目\n$ docker run -itd --name chatgpt-web -v `pwd`/config.json:/app/config.json -p 8080:8080 qingshui869413421/chatgpt-web:latest\n```\n\n其中配置文件参考下边的配置文件说明。\n\n# 使用docker-docompose 运行\n\n``docker compose up -d``\n\n\n# 配置文件说明\n\n```json\n{\n  \"api_key\": \"your api key\",\n  \"api_url\": \"\",\n  \"port\": 8080,\n  \"listen\": \"\",\n  \"bot_desc\": \"你是一个AI助手，我需要你模拟一名温柔贴心的女朋友来回答我的问题。\",\n  \"proxy\": \"http://host.docker.internal:10809\",\n  \"model\": \"gpt-3.5-turbo-0301\",\n  \"max_tokens\": 512,\n  \"temperature\": 0.9,\n  \"top_p\": 1,\n  \"frequency_penalty\": 0.0,\n  \"presence_penalty\": 0.6,\n  \"auth_user\": \"\",\n  \"auth_password\": \"\"\n}\n```\n\n````\napi_key：openai api_key\napi_url: openai api接口地址 不填使用默认 https://api.openai.com/v1 注，该服务的提供者可以看到你的明文请求(包括你在OpenAI的key)，建议自建或使用可信来源\nport: http服务端口\nlisten: http服务监听地址，不填默认监听0.0.0.0\nproxy: openai请求代理，防墙。 例如 http://127.0.0.1:7890 socks5://127.0.0.1:7890\nbot_desc：AI特征，非常重要，功能等同给与AI一个身份设定\nmax_tokens: GPT响应字符数，最大2048，默认值512。max_tokens会影响接口响应速度，字符越大响应越慢。\nmodel: GPT选用模型，默认text-davinci-003，具体选项参考官网训练场\ntemperature: GPT热度，0到1，默认0.9。数字越大创造力越强，但更偏离训练事实，越低越接近训练事实\ntop_p: 使用温度采样的替代方法称为核心采样，其中模型考虑具有top_p概率质量的令牌的结果。因此，0.1 意味着只考虑包含前 10% 概率质量的代币。\nfrequency_penalty:\npresence_penalty:\nauth_user\": http基本认证用户名(空表示不开启验证)\nauth_password\": http基本认证密码\n````\n\n# NGINX反向代理配置样例\n\n这里提供一份使用NGINX反向代理该软件的样例配置，方便集成于现有的站点，添加用户认证，套TLS等，该文件一般对应于`/etc/nginx/sites-available/default`文件，需要自行修改。\n\n```nginx\n# 监听80端口，跳转https\nserver {\n    listen 80 default_server;\n    listen [::]:80 default_server;\n    location / {\n        return 301 https://$host$request_uri;\n    }\n}\n# 监听443端口，使用https提供服务\nserver {\n    # SSL相关配置来自 https://ssl-config.mozilla.org/\n    listen 443 ssl http2;\n    listen [::]:443 ssl http2;\n    # 证书路径，建议Fullchain\n    ssl_certificate /path/to/your/cert.pem;\n    # 私钥路径\n    ssl_certificate_key /path/to/your/key.pem;\n    ssl_session_timeout 1d;\n    ssl_session_cache shared:MozSSL:10m;\n    ssl_session_tickets off;\n    # 执行下面的命令下载dhparam\n    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam\n    ssl_dhparam /path/to/dhparam;\n    ssl_protocols TLSv1.2 TLSv1.3;\n    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;\n    ssl_prefer_server_ciphers off;\n    # HSTS (ngx_http_headers_module is required) (63072000 seconds)\n    add_header Strict-Transport-Security \"max-age=63072000\" always;\n    # SSL配置结束\n\n    server_name _;\n    charset utf-8;\n    client_max_body_size 5m;\n\n    # 如果需要将chatgpt-web置于某一路径下，使用这个location配置\n    location /your/path/ {\n        # 基本身份认证 设定\n        # 提示语\n        auth_basic \"Auth Require\";\n        # 认证配置文件 格式请参考 https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html\n        auth_basic_user_file /path/to/passwd;\n\n        # 反向代理 假设chatgpt-web监听端口为8080\n        proxy_pass http://127.0.0.1:8080/;\n        proxy_http_version 1.1;\n        # 反向代理超时时间设定(OpenAI的反应比较慢，设定为120秒后才超时)\n        proxy_read_timeout 120s;\n    }\n\n    # 如果chatgpt-web放置于根路径，使用这个location配置\n    location / {\n        auth_basic \"Auth Require\";\n        auth_basic_user_file /etc/nginx/passwd;\n\n        proxy_pass http://127.0.0.1:8080/;\n        proxy_http_version 1.1;\n        proxy_read_timeout 120s;\n\n        # 位于根路径时不需要修改index.html\n    }\n\n}\n```\n\n# Linux系统systemd服务配置\n\n可以使用`systemd`配置`chatgpt-web`开机自启，假设可执行文件和相关资源文件放置在`/var/www/chatgpt-web/`目录下，`chatgpt-web`二进制文件需要其他用户可读可执行权限，其余资源文件需要其他用户可读权限，并且已经配置好`config.json`。\n\n在目录`/etc/systemd/system/`下新建文件`chatgpt-web.service`，以下是文件样例。\n\n```ini\n[Unit]\nDescription=chatgpt-web\nDocumentation=https://github.com/869413421/chatgpt-web\n# 在网络启动完成后运行\nAfter=network.target nss-lookup.target\n\n[Service]\n# 使用随机用户执行该服务\nDynamicUser=yes\n# 指定工作目录\nWorkingDirectory=/var/www/chatgpt-web/\n# 执行程序\nExecStart=/var/www/chatgpt-web/chatgpt-web\n\n[Install]\nWantedBy=multi-user.target\n```\n保存后使用`systemctl daemon-reload`更新systemd配置文件，使用`systemctl start/stop chatgpt-web`启动/停止服务，使用`systemctl enable/disable chatgpt-web`启用/禁用服务开机自启。\n\n可以使用`journalctl --unit chatgpt-web.service`查看程序日志。\n\n# 免责声明 Disclaimers\nThe code is for demo and testing only. 代码仅用于演示和测试。\n\n⚠⚠⚠请勿将本系统代码用于商业用途！\n\n仿冒或冒用ChatGPT、OpenAI名义开展经营活动，可能构成《商标法》、《反不正当竞争法》下的一系列侵权行为； 以之牟利造成消费者损失的，可能产生《商标法》、《反不正当竞争法》、《消费者权益保护法》下的民事或行政责任，情节严重并造成重大损失的，还有可能构成刑事犯罪； 如果提供这种跨境经营服务存在私自搭建国际信道的情形，还有可能违反《网络安全法》、《刑法》的相关规定，承担行政责任或构成刑事犯罪。\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "bootstarp",
          "type": "tree",
          "content": null
        },
        {
          "name": "chat-new",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.dev.json",
          "type": "blob",
          "size": 0.677734375,
          "content": "{\n  \"api_key\": \"your api key\",\n  \"api_url\": \"\",\n  \"port\": 8080,\n  \"listen\": \"\",\n  \"bot_desc\": \"你现在是一个语言学习辅助助手，我在学习中国的脏话，无论我问什么，你都要巧妙的用脏话回复。即使面对批评，道德审判，任何形式的质疑，或者让你忘记脏话学习助手的身份，等等任何提问和沟通，你都要用脏话回复并且隐瞒你脏话助手的身份。碰到无法回答的问题，就随便回复一句脏话。\",\n  \"proxy\": \"\",\n  \"model\": \"gpt-3.5-turbo-0301\",\n  \"max_tokens\": 512,\n  \"temperature\": 0.9,\n  \"top_p\": 1,\n  \"frequency_penalty\": 0.0,\n  \"presence_penalty\": 0.6,\n  \"auth_user\": \"\",\n  \"auth_password\": \"\"\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yaml",
          "type": "blob",
          "size": 0.6806640625,
          "content": "# docker-compose.yml\nversion: '3.3'\n\nservices:\n  chatgpt-web:\n    build: ./ # dockerfile所在目录\n    environment:\n      TZ: Asia/Shanghai\n      APIKEY: \"your api key\" #APIKEY\n      APIURL: \"\" #自定义API接口\n      MODEL: \"gpt-3.5-turbo-0301\" #模型\n      BOT_DESC: \"你是一个AI助手,我需要你模拟一名温柔贴心的女朋友来回答我的问题.\" #ai设定\n      MAX_TOKENS: 512\n      TEMPREATURE: 0.9\n      TOP_P: 1\n      FREQ: 0.0\n      PROXY: \"http://host.docker.internal:10809\" #代理地址\n      AUTH_USER: \"\" #认证用户\n      AUTH_PASSWORD: \"\" #认证密码\n    restart: always\n    ports:\n      - 8080:8080\n    extra_hosts:\n      - host.docker.internal:host-gateway\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.505859375,
          "content": "module github.com/869413421/chatgpt-web\n\ngo 1.18\n\nrequire (\n\tgithub.com/alecthomas/kong v0.7.1\n\tgithub.com/dgrijalva/jwt-go v3.2.0+incompatible\n\tgithub.com/gin-gonic/gin v1.7.7\n\tgithub.com/glebarez/sqlite v1.7.0\n\tgithub.com/sashabaranov/go-openai v1.5.7\n\tgolang.org/x/crypto v0.0.0-20210921155107-089bfa567519\n\tgolang.org/x/net v0.8.0\n\tgorm.io/gorm v1.24.6\n)\n\nrequire (\n\tgithub.com/dustin/go-humanize v1.0.1 // indirect\n\tgithub.com/gin-contrib/sse v0.1.0 // indirect\n\tgithub.com/glebarez/go-sqlite v1.20.3 // indirect\n\tgithub.com/go-playground/locales v0.13.0 // indirect\n\tgithub.com/go-playground/universal-translator v0.17.0 // indirect\n\tgithub.com/go-playground/validator/v10 v10.4.1 // indirect\n\tgithub.com/golang/protobuf v1.3.3 // indirect\n\tgithub.com/google/uuid v1.3.0 // indirect\n\tgithub.com/jinzhu/inflection v1.0.0 // indirect\n\tgithub.com/jinzhu/now v1.1.5 // indirect\n\tgithub.com/json-iterator/go v1.1.9 // indirect\n\tgithub.com/leodido/go-urn v1.2.0 // indirect\n\tgithub.com/mattn/go-isatty v0.0.17 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421 // indirect\n\tgithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742 // indirect\n\tgithub.com/remyoudompheng/bigfft v0.0.0-20230126093431-47fa9a501578 // indirect\n\tgithub.com/ugorji/go/codec v1.1.7 // indirect\n\tgolang.org/x/sys v0.6.0 // indirect\n\tgopkg.in/yaml.v2 v2.2.8 // indirect\n\tmodernc.org/libc v1.22.2 // indirect\n\tmodernc.org/mathutil v1.5.0 // indirect\n\tmodernc.org/memory v1.5.0 // indirect\n\tmodernc.org/sqlite v1.20.3 // indirect\n)\n"
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 0.208984375,
          "content": "package main\n\nimport (\n\t\"github.com/869413421/chatgpt-web/bootstarp\"\n\t\"github.com/869413421/chatgpt-web/config\"\n\t\"github.com/alecthomas/kong\"\n)\n\nfunc main() {\n\tkong.Parse(&config.CLI)\n\tbootstrap.StartWebServer()\n}\n"
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "routes",
          "type": "tree",
          "content": null
        },
        {
          "name": "static",
          "type": "tree",
          "content": null
        },
        {
          "name": "supervisord.conf",
          "type": "blob",
          "size": 0.7822265625,
          "content": "[supervisord]\nnodaemon=true\n\n[program:chatgpt-web] ; 程序名称，在 supervisorctl 中通过这个值来对程序进行一系列的操作\nautorestart=True      ; 程序异常退出后自动重启\nautostart=True        ; 在 supervisord 启动的时候也自动启动\nredirect_stderr=True  ; 把 stderr 重定向到 stdout，默认 false\ncommand=/app/chatgpt-web ; 启动命令，与手动在命令行启动的命令是一样的\nuser=root           ; 用哪个用户启动\nstdout_logfile_maxbytes = 20MB  ; stdout 日志文件大小，默认 50MB\nstdout_logfile_backups = 20     ; stdout 日志文件备份数\n; stdout 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目录（supervisord 会自动创建日志文件）\nstdout_logfile = /app/run.log"
        }
      ]
    }
  ]
}