{
  "metadata": {
    "timestamp": 1736566603004,
    "page": 157,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "alexellis/arkade",
      "stars": 4290,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".DEREK.yml",
          "type": "blob",
          "size": 1.4462890625,
          "content": "curators:\n - alexellis\n - Shikachuu\n - welteki\n - nitishkumar71\n - Jasstkn\n - rgee0\n\nfeatures:\n - dco_check\n - comments\n - pr_description_required\n - release_notes\n\ncustom_messages:\n  - name: template\n    value: |\n           This project uses Issue and PR templates and requires that all\n           users fill out the template in detail before help can be given.\n\n           To continue please edit your Issue/PR or open a new one, and\n           please provide all the fields requested.\n\n           Thank you for your contribution.\n\n  - name: propose\n    value: |\n           This project follows a contributing guide which states that all\n           changes must be proposed with an Issue before being worked on.\n\n           Please raise an Issue and update your Pull Request to include\n           the ID or link as part of the description.\n\n           Thank you for your contribution.\n\n  - name: test\n    value: |\n           This project follows a contributing guide which requires that\n           all changes are tested before being merged. You should include\n           worked examples that a maintainer can run to prove that the\n           changes are good.\n\n           Screenshots and command line output are also accepted, but\n           must show the positive, and negative cases, not just that\n           what was added worked as you expected.\n\n           Thank you for your contribution.\n\ncontributing_url: https://github.com/alexellis/arkade/blob/master/CONTRIBUTING.md\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1025390625,
          "content": "arkade\narkade.exe\nbin/**\nkubeconfig\n.DS_Store\n.idea/\nmc\n/arkade-*\n/faas-cli*\ntest.out\ndocker-compose.yaml"
        },
        {
          "name": "ADOPTERS.md",
          "type": "blob",
          "size": 2.3427734375,
          "content": "# Arkade use-cases\n\nIf you use arkade at home or at work, let us know about it. Feel free to include links to blog posts that mention arkade or Tweets too.\n\n## Adopters\n\n## Blog posts & mentions\n\n* 19 November, 2021 - [Announcing The Kasten App for Arkade](https://www.openfaas.com/blog/arkade-kasten-app/)\n* 20 August, 2021 - [KUBERNETES TOOLS, TIPS & TRICKS](https://vzilla.co.uk/vzilla-blog/the-vzilla-kubernetes-tools-tips-tricks)\n* 5August, 2021 - [Two year update: Building an Open Source Marketplace for Kubernetes](https://blog.alexellis.io/kubernetes-marketplace-two-year-update/)\n* 5 August, 2021 - [6 Tools to Run Kubernetes Locally](https://yankee.dev/6-tools-to-run-kubernetes-locally)\n* 3 August, 2021 - [Disposable Local Development Environments with Vagrant, Docker, and Arkade by Ivan Velichko](https://iximiuz.com/en/posts/how-to-setup-development-environment/)\n* 28 October, 2021 - [Kubernetes: How To Install Arkade - by Anto Online](https://anto.online/guides/kubernetes-how-to-install-arkade/)\n* 8 December, 2020 - [Announcing Venafi Sponsored Apps for Arkade](https://www.openfaas.com/blog/arkade-venafi/)\n* 20 September, 2020 - [Kubernetes Serverless: OpenFaaS](https://www.freshbrewed.science/2020/09/20/kubernetes-serverless-openfaas.html)\n* 2 September, 2020 - [Portainer for Kubernetes](https://www.linuxadvise.com/post/portainer-for-kubernetes)\n* 13 August, 2020 - [Why did the OpenFaaS community build arkade and what's in it for you?](https://www.openfaas.com/blog/openfaas-arkade/)\n* 24 Jan, 2021 - [My Kubernetes Book: arkade](https://k8s-book.vupti.me/setup-a-powerful-kubernetes-client/arkade/)\n* 28 July, 2020 - [Video: Walk-through of arkade - for Kubernetes](https://www.youtube.com/watch?v=8wU9s_mua8M)\n* 28 July, 2020 - [Video: What is arkade? by Alex Ellis](https://www.youtube.com/watch?v=6PwrpI6d60s)\n* 15 May, 2020 - [Install Apps on Kubernetes with Arkade](https://blog.pistack.co.za/install-apps-on-kubernetes-with-arkade/)\n* 21 April, 2020 - [Call OpenFaaS Serverless Functions with Gloo API Gateway](https://medium.com/alterway/call-openfaas-serverless-functions-with-gloo-api-gateway-678a00710481)\n* 1 March, 2020 - [arkade by example — apps for Kubernetes, the easy way](https://itnext.io/kubernetes-apps-the-easy-way-f06d9e5cad3c)\n* 28 Feb, 2020 - [Introducing Arkade - The Kubernetes app installer](https://blog.heyal.co.uk/introducing-arkade/)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 8.7177734375,
          "content": "## Contributing\n\n### Guidelines\n\nHere are a few guidelines for contributing:\n\n* If you would like to contribute to the codebase then please raise an issue to propose the change or feature.\n* Do not work on an issue / PR until it gets a `design/approved` label from a maintainer.\n* Do not mix feature changes or fixes with refactoring - it makes the code harder to review and means there is more for\n  the maintainers (with limited time) to test.\n\n* If you have found a bug please raise an issue and fill out the whole template.\n* Don't raise PRs for typos, these aren't necessary - just raise an Issue.\n* If the documentation can be improved / translated etc. please raise an issue to discuss.\n\n* Please always provide a summary of what you changed, how you did it and how it can be tested.\n* Most of the time we like to keep one commit per PR or if you have more you should have a perfect reason for it.\n  (That's why we like to amend to a commit and commonly require rebase a multiple commit PR, before we approve/merge\n  it.)\n* If the Issue involves adding multiple features, like both a Helm chart and a CLI tool, create a PR per tool/chart, to\n  cleanly separate them.\n\nAll commits must have a `Signed-off-by:` line in accordance with the Developer Certificate of Origin, which you can read\nabout at the end of this document.\n\nTo add the sign-off, simply run:\n\n```bash\ngit config --global user.name \"Full Name\"\ngit config --global user.email \"you@example.com\"\n\ngit commit -s / --signoff\n```\n\nWe do not expect to contact you in relation to your contributions, however a real, genuine email address must be used which is contactable. A no-reply email address will result in the DCO being marked as invalid by Derek, the DCO bot we use.\n\nThis is not cryptography (GPG commit signing), does not require any keys and does not take any longer than typing in the above three\ncommands.\n\n### Recommended settings for apps for `arkade install`\n\n`arkade install` is primarily meant for use during development and experimentation, however most apps should also have\noptions available to make them suitable for production.\n\nBy default, turn off:\n\n* persistence and volumes\n* multiple replicas or HA\n* clustering\n* additional sidecars and components\n\nBut make them configurable, so `--persistence` would be `false` by default for an app like Postgresql, but easy to\nenable.\n\n### Recommended way for adding binaries to `arkade get`\n\nFor installable CLIs, add the following architectures when available:\n\n**For Darwin (MacOS):**\n\n* AMD64 / `x86_64` (Intel)\n* ARM64 / `arm64` (M1)\n\n**For Linux:**\n\n* AMD64 / `x86_64` (Intel/AMD)\n* ARM64 / `aarch64` (64-bit Raspberry Pi OS, AWS Graviton and commercial 64-bit ARM servers)\n* ARMv7 / `armhf` (32-bit Raspberry Pi OS)\n\n**For Windows:**\n\n* AMD64 (Intel/AMD)\n\nDo not add ARMv6 support, or 32-bit architecture.\n\nFreeBSD and other operating systems are not supported at this time.\n\nBinaries that are packaged as `.zip`, `.tgz` or `.tar.gz` are also supported, look at previous apps to find an example\nto copy.\n\nAlways write a unit tests for your tool in the `pkg/get/get_test.go`.\n\nIn the unit tests always pin an exact version and write a test case for that version.\n\nYou can try different architectures and OSes with `arkade get` via `--arch` and `--os` flags, to try out arm64 binaries\nfor example.\n\nPlease always test your tools manually (`hack/test-tool.sh`) and with the end-to-end test tool (`make e2e`). Add the output of these commands to the PR description.\n\n**Available variables in the `URLTemplate`:**\n\n* `OS` (current OS or value of the `--os` flag)\n* `Arch` (current architecture or value of the `--arch` flag)\n* `Name` (name of the tool)\n* `Version` (version of the tool)\n* `VersionNumber` (version of the tool with the `v` removed)\n\nExample:\n\n```json\n{\n  \"OS\": \"darwin\",\n  \"Arch\": \"arm64\",\n  \"Name\": \"gh\",\n  \"Version\": \"v2.14.7\",\n  \"VersionNumber\": \"2.14.7\"\n}\n```\n\n**Available variables in the `BinaryTemplate`:**\n\n* `OS` (current OS or value of the `--os` flag)\n* `Arch` (current architecture or value of the `--arch` flag)\n* `Name` (name of the tool)\n* `Version` (version of the tool)\n* `VersionNumber` (version of the tool with the `v` removed)\n* `Repo` (name of the GitHub repository)\n* `Owner` (owner of the GitHub repository)\n\nExample:\n\n```json\n{\n  \"OS\": \"darwin\",\n  \"Arch\": \"arm64\",\n  \"Name\": \"gh\",\n  \"Version\": \"v2.14.7\",\n  \"VersionNumber\": \"2.14.7\",\n  \"Repo\": \"cli\",\n  \"Owner\": \"cli\"\n}\n```\n\n### Edit and Generate demo GIF\n\nTo add an entry to the demo GIF:\n- Open the `docs/arkade.tape` file in your preferred text editor.\n- Insert your desired commands according to the following format\n\n```\nType@50ms \"# Short decription of what the command does\" Sleep <duration>\nHide\nCtrl+C\nShow\n\nType \"<command>\" Enter Sleep <duration>\nHide\nType \"clear\" Enter\nShow\n```\n\n- Generate the GIF file.\n\n```bash\n$ vhs docs/arkade.tape\n```\n\n- Publish the GIF to get a shareable URL\n```bash\n$ vhs publish arkade.gif\n```\n\n### Workflow for a first-time contributing\n\nHere's the basics for contributing:\n\n#### Cloning\n\n```bash\nmkdir $GOPATH/go/src/github.com/alexellis\ngit clone https://github.com/alexellis/arkade\ncd arkade\n\ngo build\n```\n\n#### Adding your fork:\n\n```bash\ngit remote add fork https://github.com/NAME/arkade\n```\n\n#### To verify changes:\n\n```bash\ngofmt -w -s ./pkg\ngofmt -w -s ./cmd\n\n# Run all the unit tests\nmake test\n\n# Use e2e tests ot check that URLs can be downloaded for all tools\nmake e2e\n```\n\n#### Checkout a branch to start work\n\n```bash\ngit checkout -b fork/add-NAME-of-APP\n```\n\n#### Push up your changes for a PR\n\n```bash\ngit config user.name \"Full name\"\ngit config user.email \"real@email.com\"\n\ngit commit -s\n\ngit push fork add-NAME-of-APP\n```\n\n#### Test other people's PRs\n\nYou can also check out other people's PRs and test them:\n\n```bash\narkade get gh\ngh auth\n\n$ gh pr list\n\nShowing 10 of 10 open pull requests in alexellis/arkade\n\n#477  Add comma escaping for --set flag        yankeexe:fix-openfaas-helm-set\n#438  Added support to install kube-ps1        andreppires:master\n\ngh checkout 477\n\ngo build\n\n# Try the new version of arkade\n./arkade\n```\n\n### Compliance\n\nAll commits need to be signed-off in accordance with the Developer Certificate of Origin (DCO) as per below.\n\nThe [Derek bot](https://github.com/alexellis/derek) will enforce this policy, if you need help please get in touch.\n\n#### License\n\nThis project is licensed under the MIT License.\n\n### Reporting a suspected vulnerability / security issue\n\nIf you would like to report a suspected vulnerability / security issue, please email alex@openfaas.com. Bear in mind\nthat this is a community project, and it may take a few days to get back to you. If you have a working code sample in a\nprivate GitHub repo, please feel free to give access to that also.\n\n#### Sign-off your work\n\nThe sign-off is a simple line at the end of the explanation for a patch. Your\nsignature certifies that you wrote the patch or otherwise have the right to pass\nit on as an open-source patch. The rules are pretty simple: if you can certify\nthe below (from [developercertificate.org](http://developercertificate.org/)):\n\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n1 Letterman Drive\nSuite D4700\nSan Francisco, CA, 94129\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\nThen you just add a line to every git commit message:\n\n    Signed-off-by: Joe Smith <joe.smith@email.com>\n\nUse your real name (sorry, no pseudonyms or anonymous contributions.)\n\nIf you set your `user.name` and `user.email` git configs, you can sign your\ncommit automatically with `git commit -s`.\n\n* Please sign your commits with `git commit -s` so that commits are traceable.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.041015625,
          "content": "MIT License\n\nCopyright (c) 2019 Alex Ellis\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.359375,
          "content": "Version := $(shell git describe --tags --dirty)\nGitCommit := $(shell git rev-parse HEAD)\nLDFLAGS := \"-s -w -X github.com/alexellis/arkade/pkg.Version=$(Version) -X github.com/alexellis/arkade/pkg.GitCommit=$(GitCommit)\"\nPLATFORM := $(shell ./hack/platform-tag.sh)\nSOURCE_DIRS = cmd pkg main.go\nexport GO111MODULE=on\n\n.PHONY: all\nall: gofmt test build dist hash\n\n.PHONY: build\nbuild:\n\tgo build\n\n.PHONY: gofmt\ngofmt:\n\t@test -z $(shell gofmt -l -s $(SOURCE_DIRS) ./ |grep -v vendor/| tee /dev/stderr) || (echo \"[WARN] Fix formatting issues with 'make gofmt'\" && exit 1)\n\n.PHONY: test\ntest:\n\tCGO_ENABLED=0 go test $(shell go list ./... | grep -v /vendor/|xargs echo) -cover\n\n.PHONY: e2e\ne2e:\n\tCGO_ENABLED=0 go test github.com/alexellis/arkade/pkg/get -cover --tags e2e -v\n\n.PHONY: dist\ndist:\n\tmkdir -p bin\n\tCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags $(LDFLAGS) -o bin/arkade\n\tCGO_ENABLED=0 GOOS=darwin go build -ldflags $(LDFLAGS) -o bin/arkade-darwin\n\tCGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -a -ldflags $(LDFLAGS) -o bin/arkade-darwin-arm64\n\tCGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=6 go build -ldflags $(LDFLAGS) -o bin/arkade-armhf\n\tCGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags $(LDFLAGS) -o bin/arkade-arm64\n\tCGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -ldflags $(LDFLAGS) -o bin/arkade.exe\n\n.PHONY: hash\nhash:\n\trm -rf bin/*.sha256 && ./hack/hashgen.sh\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 73.48828125,
          "content": "# arkade - Open Source Marketplace For Developer Tools\n\narkade is how developers install the latest versions of their favourite CLI tools and Kubernetes apps.\n\nWith `arkade get`, you'll have `kubectl`, `kind`, `terraform`, and `jq` on your machine faster than you can type `apt-get install` or `brew update`.\n\n<img src=\"docs/arkade-logo-sm.png\" alt=\"arkade logo\" width=\"150\" height=\"150\">\n\n[![Sponsor this](https://img.shields.io/static/v1?label=Sponsor&message=%E2%9D%A4&logo=GitHub&link=https://github.com/sponsors/alexellis)](https://github.com/sponsors/alexellis) [![CI Build](https://github.com/alexellis/arkade/actions/workflows/build.yml/badge.svg)](https://github.com/alexellis/arkade/actions/workflows/build.yml)\n[![URL Checker](https://github.com/alexellis/arkade/actions/workflows/e2e-url-checker.yml/badge.svg)](https://github.com/alexellis/arkade/actions/workflows/e2e-url-checker.yml)\n[![GoDoc](https://godoc.org/github.com/alexellis/arkade?status.svg)](https://godoc.org/github.com/alexellis/arkade)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n![Downloads](https://img.shields.io/github/downloads/alexellis/arkade/total)\n\nWith over 120 CLIs and 55 Kubernetes apps (charts, manifests, installers) available for Kubernetes, gone are the days of contending with dozens of README files just to set up a development stack with the usual suspects like ingress-nginx, Postgres, and cert-manager.\n\n- [arkade - Open Source Marketplace For Developer Tools](#arkade---open-source-marketplace-for-developer-tools)\n  - [Support arkade 👋](#support-arkade-)\n  - [Should you try arkade?](#should-you-try-arkade)\n  - [Getting arkade](#getting-arkade)\n  - [Usage overview](#usage-overview)\n  - [Download CLI tools with arkade](#download-cli-tools-with-arkade)\n  - [Install System Packages](#install-system-packages)\n  - [Install packages from OCI images](#install-packages-from-oci-images)\n  - [Install CLIs during CI with GitHub Actions](#install-clis-during-ci-with-github-actions)\n  - [Bump Helm chart versions](#bump-helm-chart-versions)\n  - [Verify and upgrade images in Helm charts](#verify-and-upgrade-images-in-helm-charts)\n    - [Upgrade images within a Helm chart](#upgrade-images-within-a-helm-chart)\n  - [Verify images within a helm chart](#verify-images-within-a-helm-chart)\n  - [Installing apps with arkade](#installing-apps-with-arkade)\n    - [Create a Kubernetes cluster](#create-a-kubernetes-cluster)\n    - [Install a Kubernetes app](#install-a-kubernetes-app)\n    - [Uninstall an app](#uninstall-an-app)\n    - [Reduce the repetition](#reduce-the-repetition)\n    - [Say goodbye to values.yaml and hello to flags](#say-goodbye-to-valuesyaml-and-hello-to-flags)\n    - [Override with `--set`](#override-with---set)\n    - [Compounding apps](#compounding-apps)\n      - [Get a self-hosted TLS registry with authentication](#get-a-self-hosted-tls-registry-with-authentication)\n      - [Get a public IP for a private cluster and your IngressController](#get-a-public-ip-for-a-private-cluster-and-your-ingresscontroller)\n    - [Explore the apps](#explore-the-apps)\n  - [Community \\& contributing](#community--contributing)\n    - [Tutorials \\& community blog posts](#tutorials--community-blog-posts)\n      - [Watch a video walk-through by Alex Ellis](#watch-a-video-walk-through-by-alex-ellis)\n      - [Featured tutorials](#featured-tutorials)\n      - [Official blog posts](#official-blog-posts)\n      - [Community posts](#community-posts)\n    - [Suggest a new app](#suggest-a-new-app)\n  - [Sponsored apps](#sponsored-apps)\n  - [FAQ](#faq)\n    - [How does `arkade` compare to `helm`?](#how-does-arkade-compare-to-helm)\n    - [Is arkade suitable for production use?](#is-arkade-suitable-for-production-use)\n    - [What is in scope for `arkade get`?](#what-is-in-scope-for-arkade-get)\n    - [Automatic download of tools](#automatic-download-of-tools)\n    - [Improving the code or fixing an issue](#improving-the-code-or-fixing-an-issue)\n    - [Join us on Slack](#join-us-on-slack)\n    - [License](#license)\n  - [Catalog of apps and CLIs](#catalog-of-apps-and-clis)\n    - [Catalog of Apps](#catalog-of-apps)\n    - [Catalog of CLIs](#catalog-of-clis)\n\n## Support arkade 👋\n\nArkade is built to save you time so you can focus and get productive quickly.\n\n<a href=\"https://github.com/sponsors/alexellis/\">\n<img alt=\"Sponsor this project\" src=\"https://github.com/alexellis/alexellis/blob/master/sponsor-today.png\" width=\"90%\">\n</a>\n\nYou can support Alex's work on arkade [via GitHub Sponsors](https://github.com/sponsors/alexellis/).\n\nOr get a copy of his eBook on Go so you can learn how to build tools like k3sup, arkade, and OpenFaaS for yourself:\n\n<a href=\"https://openfaas.gumroad.com/l/everyday-golang\">\n<img src=\"https://public-files.gumroad.com/7j27fj7c5xqxm3f9lyxj1pg8oa1w\" alt=\"Buy Everyday Go\" width=\"50%\"></a>\n\n## Should you try arkade?\n\n> I was setting up a new dev environment yesterday. Kind, helm, kustomize, kubectl, all this stuff. My take is - arkade is highly underappreciated.\n> I'd spend an hour in the past to install such tools. With arkade it was under ten minutes.\n>\n> [Ivan Velichko](https://twitter.com/iximiuz/status/1422605221226860548?s=20), SRE @ Booking.com\n\n> Before arkade whenever I used to spin up an instance, I used to go to multiple sites and download the binary. Arkade is one of my favourite tools.\n> \n> [Kumar Anurag](https://kubesimplify.com/arkade) - Cloud Native Enthusiast\n\n> It's hard to use K8s without Arkade these days.\n> My team at @lftechnology absolutely loves it.\n>\n> [@Yankexe](https://twitter.com/yankexe/status/1305427718050250754?s=20)\n\n> arkade is really a great tool to install CLI tools, and system packages, check this blog on how to get started with arkade it's a time saver.\n> \n> [Kiran Satya Raj](https://twitter.com/jksrtwt/status/1556592117627047936?s=20&t=g0gnSP98jg3ZwU7sQqUrLw)\n\n> This is real magic get #kubernetes up and going in a second; then launch #openfaas a free better than lambda solution that uses docker images.\n>\n> [Greg](https://twitter.com/cactusanddove) runs Fullstack JS and is a JavaScript developer\n\n> for getting the basics installed, nothing beats arkade\n> it can install commonly used cli tools like kubectl locally for you, as well as common k8s pkgs like ingress-nginx or portainer\n>\n> [@arghzero](https://twitter.com/ArghZero/status/1346097288851070983?s=20)\n\n> I finally got around to installing Arkade, super simple!\n> quicker to install this than the argocli standalone commands, but there are lots of handy little tools in there.\n> also, the neat little part about arkade, not only does it make it easy to install a ton of different apps and CLIs you can also get the info on them as well pretty quickly.\n> \n> [Michael Cade @ Kasten](https://twitter.com/MichaelCade1/status/1390403831167700995?s=20)\n\n> You've to install the latest and greatest tools for your daily @kubernetesio tasks? No problem, check out #arkade the open source #kubernetes marketplace 👍\n>\n> [Thorsten Hans](https://twitter.com/ThorstenHans/status/1457982292597608449?s=20) - Cloud Native consultant\n\n> If you want to install quickly a new tool in your dev env or in your k8s cluster you can use the Arkade (https://github.com/alexellis/arkade) easy and quick you should it try out! Ps. I contribute to this project 🥰\n>\n> [Carlos Panato](https://twitter.com/comedordexis/status/1423339283713347587) - Staff engineer @ Mattermost\n\n> arkade is the 'brew install' of Kubernetes. You can install and run an application in a single command. Finally! https://github.com/alexellis/arkade / by Alex Ellis\n>\n> [John Arundel](https://twitter.com/bitfield/status/1242385165445455872?s=20) - Cloud consultant, author\n\n## Demo\n\n![demo](https://vhs.charm.sh/vhs-7Fyg69mwbYHFuUtSKnWMYT.gif)\n\n## Getting arkade\n\n```bash\n# Note: you can also run without `sudo` and move the binary yourself\ncurl -sLS https://get.arkade.dev | sudo sh\n\narkade --help\nark --help  # a handy alias\n\n# Windows users with Git Bash\ncurl -sLS https://get.arkade.dev | sh\n```\n\n> Windows users: arkade requires bash to be available, therefore Windows users should [install and use Git Bash](https://git-scm.com/downloads)\n\nAn alias of `ark` is created at installation time, so you can also run `ark install APP`\n\n## Usage overview\n\nArkade can be used to install Kubernetes apps or to download CLI tools.\n\n* `arkade install` - install a Kubernetes app\n* `arkade info` - see the post installation screen for a Kubernetes app\n* `arkade get` - download a CLI tool\n* `arkade update` - perform a self-update of arkade on MacOS and Linux\n\nAn arkade \"app\" could represent a helm chart such as `openfaas/faas-netes`, a custom CLI installer such as `istioctl`, or a set of static manifests (i.e. MetalLB).\n\nAn arkade \"tool\" is a CLI that can be downloaded for your operating system. Arkade downloads statically-linked binaries from their upstream locations on GitHub or the vendor's chosen URL such as with `kubectl` and `terraform`.\n\n> Did you know? Arkade users run `arkade get` both on their local workstations, and on their CI runners such as GitHub Actions or Jenkins.\n\n## Download CLI tools with arkade\n\narkade downloads the correct version of a CLI for your OS and CPU.\n\nWith automatic detection of: Windows / MacOS / Linux / Intel / ARM.\n\n```bash\n# Download a binary release of a tool\n\narkade get kubectl\n\n# Download a specific version of that tool\narkade get kubectl@v1.22.0\n\n# Download multiple tools at once\narkade get kubectl \\\n  helm \\\n  istioctl\n\n# Download multiple specific versions\narkade get faas-cli@0.13.15 \\\n  kubectl@v1.22.0\n\n# Override machine os/arch\narkade get faas-cli \\\n  --arch arm64 \\\n  --os linux\n\n# Override machine os/arch\narkade get faas-cli \\\n  --arch arm64 \\\n  --os darwin\n```\n> This is a time saver compared to searching for download pages every time you need a tool.\n\nFiles are stored at `$HOME/.arkade/bin/`\n\nWant to download tools to a custom path such as into the GitHub Actions cached tool folder?\n\n```bash\narkade get faas-cli kubectl \\\n  --path $HOME/runner/_work/_tools\n\n# Usage:\n/runner/_work/_tools/faas-cli version\n\nPATH=$PATH:$HOME/runner/_work/_tools\nfaas-cli version\n```\n\nThink of `arkade get TOOL` as a doing for CLIs, what `arkade install` does for helm.\n\nAdding a new tool for download is as simple as editing [tools.go](https://github.com/alexellis/arkade/blob/master/pkg/get/tools.go).\n\n[Click here for the full catalog of CLIs](#catalog-of-clis)\n\n## Install System Packages\n\nSystem packages are tools designed for installation on a Linux workstation, server or CI runner.\n\nThese are a more limited group of applications designed for quick setup, scripting and CI, and generally do not fit into the `arkade get` pattern, due to additional installation steps or system configuration.\n\n```bash\n# Show packages\narkade system install\n\n# Show package flags\narkade system install go --help\n\n# Install latest version of Go to /usr/local/bin/go\narkade system install go\n\n# Install Go 1.18 to /tmp/go\narkade system install go \\\n  --version 1.18 \\\n  --path /tmp/\n\n# Install containerd for ARM64, 32-bit ARM or x86_64\n# with systemd enabled\narkade system install containerd \\\n  --systemd\n```\n\nRun the following to see what's available `arkade system install`:\n\n```\n  actions-runner  Install GitHub Actions Runner\n  buildkitd       Install Buildkitd\n  caddy           Install Caddy Server\n  cni             Install CNI plugins\n  containerd      Install containerd\n  firecracker     Install Firecracker\n  gitlab-runner   Install GitLab Runner\n  go              Install Go\n  node            Install Node.js\n  prometheus      Install Prometheus\n  pwsh            Install Powershell\n  registry        Install registry\n  tc-redirect-tap Install tc-redirect-tap\n```\n\nThe initial set of system apps is now complete, learn more in the original proposal: [Feature: system packages for Linux servers, CI and workstations #654](https://github.com/alexellis/arkade/issues/654)\n\n## Install Packages from OCI images\n\nFor packages distributed in Open Container Initiative (OCI) images, you can use `arkade oci install` to extract them to a given folder on your system.\n\nvmmeter is one example of a package that is only published as a container image, which is not released on a GitHub releases page.\n\n```bash\narkade oci install ghcr.io/openfaasltd/vmmeter \\\n  --path /usr/local/bin\n```\n\n* `--path` - the folder to extract the package to\n* `--version` - the version of the package to extract, if not specified the `:latest` tag is used\n* `--arch` - the architecture to extract, if not specified the host's architecture is used\n\n## Install CLIs during CI with GitHub Actions\n\n* [alexellis/arkade-get@master](https://github.com/alexellis/arkade-get)\n\nExample of downloading faas-cli (specific version) and kubectl (latest), putting them into the PATH automatically, and executing one of them in a subsequent step.\n\n```yaml\n    - uses: alexellis/arkade-get@master\n      with:\n        kubectl: latest\n        faas-cli: 0.14.10\n    - name: check for faas-cli\n      run: |\n        faas-cli version\n```\n\nIf you just need system applications, you could also try \"setup-arkade\":\n\n* [alexellis/setup-arkade@master](https://github.com/alexellis/setup-arkade)\n\n```yaml\n    - uses: alexellis/setup-arkade@v2\n    - name: Install containerd and go\n      run: |\n        arkade system install containerd\n        arkade system install go\n```\n\n## Bump Helm chart versions\n\nTo bump the patch version of your Helm chart, run `arkade chart bump -f ./chart/values.yaml`. This updates the patch component of the version specified in Chart.yaml.\n\n```bash\narkade chart bump -f ./charts/flagger/values.yaml\ncharts/flagger/Chart.yaml 1.36.0 => 1.37.0\n```\n\nBy default, the new version is written to stdout. To bump the version in the file, run the above command with the `--write` flag.\nTo bump the version in the chart's Chart.yaml only if the chart has any changes, specify the `--check-for-updates` flag:\n\n```bash\narkade chart bump -f ./charts/flagger/values.yaml --check-for-updates\nno changes detected in charts/flagger/values.yaml; skipping version bump\n```\n\nThe directory that contains the Helm chart should be a Git repository. If the flag is specified, the command runs `git diff --exit-code <file>` to figure out if the file has any changes.\n\n## Verify and upgrade images in Helm charts\n\nThere are two commands built into arkade designed for software vendors and open source maintainers.\n\n* `arkade helm chart upgrade` - run this command to scan for container images and update them automatically by querying a remote registry. \n* `arkade helm chart verify` - after changing the contents of a values.yaml or docker-compose.yaml file, this command will check each image exists on a remote registry\n\nWhilst end-users may use a GitOps-style tool to deploy charts and update their versions, maintainers need to make conscious decisions about when and which images to change within a Helm chart or compose file.\n\nThese two features are used by OpenFaaS Ltd on projects and products like OpenFaaS CE/Pro (Serverless platform) and faasd (docker-compose file). \n\n### Upgrade images within a Helm chart\n\nWith the command `arkade chart upgrade` you can upgrade the image tags of a Helm chart from within a values.yaml file to the latest available semantically versioned image.\n\nOriginal YAML file:\n\n```yaml\nstan:\n  # Image used for nats deployment when using async with NATS-Streaming.\n  image: nats-streaming:0.24.6\n```\n\nRunning the command with `--verbose` prints the upgraded tags to stderr, allowing the output to stdout to be piped to a file.\n\n```bash\narkade chart upgrade -f \\\n  ~/go/src/github.com/openfaas/faas-netes/chart/openfaas/values.yaml \\\n  --verbose\n\n2023/01/03 10:12:47 Verifying images in: /home/alex/go/src/github.com/openfaas/faas-netes/chart/openfaas/values.yaml\n2023/01/03 10:12:47 Found 18 images\n2023/01/03 10:12:48 [natsio/prometheus-nats-exporter] 0.8.0 => 0.10.1\n2023/01/03 10:12:50 [nats-streaming] 0.24.6 => 0.25.2\n2023/01/03 10:12:52 [prom/prometheus] v2.38.0 => 2.41.0\n2023/01/03 10:12:54 [prom/alertmanager] v0.24.0 => 0.25.0\n2023/01/03 10:12:54 [nats] 2.9.2 => 2.9.10\n```\n\nUpdated YAML file printed to console:\n\n```yaml\nstan:\n  # Image used for nats deployment when using async with NATS-Streaming.\n  image: nats-streaming:0.25.2\n```\n\nWrite the updated image tags back to the file:\n\n```bash\narkade chart upgrade -f \\\n  ~/go/src/github.com/openfaas/faasd/docker-compose.yaml \\\n  --write\n```\n\nSupported:\n\n* `image:` - at the top level\n* `component.image:` i.e. one level of nesting\n* Docker Hub and GitHub Container Registry\n\nNot supported yet:\n* Custom strings that don't match the word \"image\": `clientImage: `\n* Split fields for the image and tag name i.e. `image.name` and `image.tag`\n* Third-level nesting `openfaas.gateway.image`\n\n## Verify images within a helm chart\n\nThe `arkade chart verify` command validates that all images specified are accessible on a remote registry and takes a values.yaml file as its input.\n\nSuccessful checking of a chart with `image: ghcr.io/openfaas/cron-connector:TAG`:\n\n```bash\narkade chart verify  -f ~/go/src/github.com/openfaas/faas-netes/chart/cron-connector/values.yaml\n\necho $?\n0\n```\n\nThere is an exit code of zero and no output when the check passes.\n\nYou can pass `--verbose` to see a detailed view of what's happening.\n\nChecking of nested components, where two of the images do not exist `autoscaler.image` and `dashboard.image`:\n\n```bash\narkade chart verify  -f ~/go/src/github.com/openfaas/faas-netes/chart/openfaas/values.yamlecho $?\n2 images are missing in /Users/alex/go/src/github.com/openfaas/faas-netes/chart/openfaas/values.yaml\n\nCOMPONENT           IMAGE\ndashboard           ghcr.io/openfaasltd/openfaas-dashboard:0.9.8\nautoscaler          ghcr.io/openfaasltd/autoscaler:0.2.5\n\nError: verifying failed\n\necho $?\n1\n```\n\nSupported:\n\n* `image:` - at the top level\n* `component.image:` i.e. one level of nesting\n\nNot supported yet:\n* Custom strings that don't match the word \"image\": `clientImage: `\n* Split fields for the image and tag name i.e. `image.name` and `image.tag`\n* Third-level nesting `openfaas.gateway.image`\n\n## Installing apps with arkade\n\nYou'll need a Kubernetes cluster to arkade. Unlike cloud-based marketplaces, arkade doesn't have any special pre-requirements and can be used with any private or public cluster.\n\n### Create a Kubernetes cluster\n\nIf you have Docker installed, then you can install Kubernetes using KinD in a matter of moments:\n\n```bash\narkade get kubectl@v1.22.0 \\\n  kind@v0.11.1\n\nkind create cluster\n```\n\nYou can also download k3d [k3s](https://github.com/rancher/k3s) in the same way with `arkade get k3d`.\n\n### Install a Kubernetes app\n\nNo need to worry about whether you're installing to Intel or ARM architecture, the correct values will be set for you automatically.\n\n```bash\narkade install openfaas \\\n  --gateways 2 \\\n  --load-balancer false\n```\n\nThe post-installation message shows you how to connect. And whenever you want to see those details again, just run `arkade info openfaas`.\n\nThere are even more options you can choose with `arkade install openfaas --help` - the various flags you see map to settings from the helm chart README, that you'd usually have to look up and set via a `values.yaml` file.\n\nIf there's something missing from the list of flags that you need, arkade also supports `--set` for any arkade app that uses helm. Note that not every app uses helm.\n\nRemember how awkward it was last time you installed the [Kubernetes dashboard](https://github.com/kubernetes/dashboard)? And how you could never remember the command to get the token to log in?\n\n```bash\narkade install kubernetes-dashboard\n```\n\nForgot your token? `arkade info kubernetes-dashboard`\n\nThis is an example of an arkade app that uses static YAML manifests instead of helm.\n\nPrefer [Portainer](https://www.portainer.io)? Just run: `arkade install portainer`\n\n### Uninstall an app\n\nRun `arkade uninstall` or `arkade delete` for more information on how to remove applications from a Kubernetes cluster.\n\n### Reduce the repetition\n\n[Normally up to a dozen commands](https://cert-manager.io/docs/installation/kubernetes/) (including finding and downloading helm), now just one. No searching for the correct CRD to apply, no trying to install helm, no trying to find the correct helm repo to add:\n\n```bash\narkade install cert-manager\n```\n\nOther common tools:\n\n```bash\narkade install ingress-nginx\n\narkade install metrics-server\n```\n\n### Say goodbye to values.yaml and hello to flags\n\nWe use strongly typed Go CLI flags, so that you can run `--help` instead of trawling through countless Helm chart README files to find the correct `--set` combination for what you want.\n\n```bash\narkade install ingress-nginx --help\n\nInstall ingress-nginx. This app can be installed with Host networking for\ncases where an external LB is not available. please see the --host-mode\nflag and the ingress-nginx docs for more info\n\nUsage:\n  arkade install ingress-nginx [flags]\n\nAliases:\n  ingress-nginx, nginx-ingress\n\nExamples:\n  arkade install ingress-nginx --namespace default\n\nFlags:\n  -h, --help               help for ingress-nginx\n      --host-mode          If we should install ingress-nginx in host mode.\n  -n, --namespace string   The namespace used for installation (default \"default\")\n      --update-repo        Update the helm repo (default true)\n```\n\n### Override with `--set`\n\nYou can also set helm overrides, for apps which use helm via `--set`\n\n```bash\nark install openfaas --set faasIdler.dryRun=false\n```\n\nAfter installation, an info message will be printed with help for usage, you can get back to this at any time via:\n\n```bash\narkade info <NAME>\n```\n\n### Compounding apps\n\nApps are easier to discover and install than helm chart which involve many more manual steps, however when you compound apps together, they really save you time.\n\n#### Get a self-hosted TLS registry with authentication\n\nHere's how you can get a self-hosted Docker registry with TLS and authentication in just 5 commands on an empty cluster:\n\nHere's how you would bootstrap OpenFaaS with TLS:\n\n```bash\narkade install ingress-nginx\narkade install cert-manager\narkade install openfaas\narkade install openfaas-ingress \\\n  --email web@example.com \\\n  --domain openfaas.example.com\n```\n\nAnd here's what it looks like for a private Docker registry with authentication enabled:\n\n```bash\narkade install ingress-nginx\narkade install cert-manager\narkade install docker-registry\narkade install docker-registry-ingress \\\n  --email web@example.com \\\n  --domain reg.example.com\n```\n\n#### Get a public IP for a private cluster and your IngressController\n\nAnd if you're running on a private cloud, on-premises or on your laptop, you can simply add the [inlets-operator](https://github.com/inlets/inlets-operator/) using [inlets](https://docs.inlets.dev/) to get a secure TCP tunnel and a public IP address.\n\n```bash\narkade install inlets-operator \\\n  --access-token $HOME/digitalocean-token \\\n  --region lon1 \\\n  --provider digitalocean\n```\n\nThis makes your cluster behave like it was on a public cloud and LoadBalancer IPs go from Pending to a real, functioning IP.\n\n### Explore the apps\n\nYou can view the various apps available with `arkade install / --help`, more are available when you run the command yourself.\n\n```bash\narkade install --help\nark --help\n\nExamples:\n  arkade install\n  arkade install openfaas --helm3 --gateways=2\n  arkade install inlets-operator --token-file $HOME/do-token\n```\n\nSee the full catalog of apps: [See all apps](#catalog-of-apps)\n\n## Community & contributing\n\n### Tutorials & community blog posts\n\n#### Watch a video walk-through by Alex Ellis\n\n[![Install Apps and CLIs to Kubernetes](http://img.youtube.com/vi/8wU9s_mua8M/hqdefault.jpg)](https://www.youtube.com/watch?v=8wU9s_mua8M)\n\n#### Featured tutorials\n\n* [arkade by example — Kubernetes apps, the easy way 😎](https://medium.com/@alexellisuk/kubernetes-apps-the-easy-way-f06d9e5cad3c) - Alex Ellis\n* [Walk-through — install Kubernetes to your Raspberry Pi in 15 minutes](https://medium.com/@alexellisuk/walk-through-install-kubernetes-to-your-raspberry-pi-in-15-minutes-84a8492dc95a)\n* [Get a TLS-enabled Docker registry in 5 minutes](https://blog.alexellis.io/get-a-tls-enabled-docker-registry-in-5-minutes/) - Alex Ellis\n* [Get TLS for OpenFaaS the easy way with arkade](https://blog.alexellis.io/tls-the-easy-way-with-openfaas-and-k3sup/) - Alex Ellis\n\n#### Official blog posts\n\n* [Two year update: Building an Open Source Marketplace for Kubernetes](https://blog.alexellis.io/kubernetes-marketplace-two-year-update/)\n* [Why did the OpenFaaS community build arkade and what's in it for you?](https://www.openfaas.com/blog/openfaas-arkade/) - Alex Ellis\n\n#### Community posts\n\n* [A bit of Istio before tea-time](https://blog.alexellis.io/a-bit-of-istio-before-tea-time/) - Alex Ellis\n* [Kubernetes: Automatic Let's Encrypt Certificates for Services with arkade](https://medium.com/@admantium/kubernetes-automatic-lets-encrypt-certificates-for-services-2a5f4aa7f886)\n* [Introducing Arkade - The Kubernetes app installer](https://blog.heyal.co.uk/introducing-arkade/) - Alistair Hey\n* [Portainer for kubernetes in less than 60 seconds!!](https://www.portainer.io/2020/04/portainer-for-kubernetes-in-less-than-60-seconds/) - by Saiyam Pathak\n* [Video walk-through with DJ Adams - Pi & Kubernetes with k3s, k3sup, arkade and OpenFaaS](https://www.youtube.com/watch?v=ZiR3QEfBivk)\n* [Coffee chat: Easy way to install Kubernetes Apps - arkade (ark)](https://sachcode.com/tech/coffee-chat-easy-way-install-kubernetes-apps/) by Sachin Jha\n* [Arkade & OpenFaaS: serverless on the spot](https://zero2datadog.readthedocs.io/en/latest/faas.html) by Blaise Pabon\n* [\"Tool of the Day\" with Adrian Goins from Rancher Labs](https://youtu.be/IWtEtfpqoRg?t=1425)\n\n### Suggest a new app\n\nTo suggest a new app, please check past issues and [raise an issue for it](https://github.com/alexellis/arkade). Think also whether your app suggestion would be a good candidate for a Sponsored App.\n\n## Sponsored apps\n\nYou can now propose your project or product as a Sponsored App. Sponsored Apps work just like any other app that we've curated, however they will have a note next to them in the app description `(sponsored)` and a link to your chosen site upon installation. An app sponsorship can be purchased for a minimum of 12 months and includes free development of the Sponsored App, with ongoing support via GitHub for the Sponsored App for the duration only. Ongoing support will be limited to a set amount of hours per month.\n\nWhen your sponsorship expires the Sponsored App will be removed from arkade, and the ongoing support will cease. A Sponsored App can be renewed 60 days prior to expiration subject to a separate agreement and payment.\n\nExample:\n\n```bash\narkade VENDOR install PRODUCT\narkade acmeco install dashboard\n```\n\n[Contact OpenFaas Ltd](mailto:contact@openfaas.com) to find out how you can have your Sponsored App added to arkade.\n\n## FAQ\n\n### How does `arkade` compare to `helm`?\n\nIn the same way that [brew](https://brew.sh) uses git and Makefiles to compile applications for your Mac, `arkade` uses upstream [helm](https://helm.sh) charts and `kubectl` to install applications to your Kubernetes cluster. arkade exposes strongly-typed flags for the various popular options for helm charts, and enables easier discovery through `arkade install --help` and `arkade install APP --help`.\n\n### Is arkade suitable for production use?\n\nIf you consider helm suitable, and `kubectl` then yes, arkade by definition uses those tools and the upstream artifacts of OSS projects.\n\nDo you want to run arkade in a CI or CD pipeline? Go ahead.\n\n### What is in scope for `arkade get`?\n\nGenerally speaking, tools that are used with the various arkade apps or with Kubernetes are in scope. If you want to propose a tool, raise a GitHub issue.\n\nWhat about package management? `arkade get` provides a faster alternative to package managers like `apt` and `brew`, you're free to use either or both at the same time.\n\n### Automatic download of tools\n\nWhen required, tools, CLIs, and the helm binaries are downloaded and extracted to `$HOME/.arkade`.\n\nIf installing a tool which uses helm3, arkade will check for a cached version and use that, otherwise it will download it on demand.\n\nDid you accidentally run arkade as root? **Running as root is not required**, and will mean your KUBECONFIG environment variable will be ignored. You can revert this using [the notes on release 0.1.18](https://github.com/alexellis/arkade/releases/tag/0.1.8).\n\n### Improving the code or fixing an issue\n\nBefore contributing code, please see the [CONTRIBUTING guide](https://github.com/alexellis/arkade/blob/master/CONTRIBUTING.md). Note that arkade uses the same guide as [inlets.dev](https://inlets.dev/).\n\nBoth Issues and PRs have their own templates. Please fill out the whole template.\n\nAll commits must be signed-off as part of the [Developer Certificate of Origin (DCO)](https://developercertificate.org)\n\n### Join us on Slack\n\nJoin `#contributors` at [slack.openfaas.io](https://slack.openfaas.io)\n\n### License\n\nMIT\n\n## Catalog of apps and CLIs\n\nAn app is software or an add-on for your Kubernetes cluster.\n\nA CLI or \"tool\" is a command line tool that you run directly on your own workstation or a CI runner.\n\n### Catalog of Apps\n\n|          TOOL           |                             DESCRIPTION                             |\n|-------------------------|---------------------------------------------------------------------|\n| argocd                  | Install argocd                                                      |\n| cassandra               | Install cassandra                                                   |\n| cert-manager            | Install cert-manager                                                |\n| chart                   | Install the specified helm chart                                    |\n| cockroachdb             | Install CockroachDB                                                 |\n| consul-connect          | Install Consul Service Mesh                                         |\n| cron-connector          | Install cron-connector for OpenFaaS                                 |\n| crossplane              | Install Crossplane                                                  |\n| docker-registry         | Install a community maintained Docker registry chart                |\n| docker-registry-ingress | Install registry ingress with TLS                                   |\n| falco                   | Install Falco                                                       |\n| gitea                   | Install gitea                                                       |\n| gitlab                  | Install GitLab                                                      |\n| grafana                 | Install grafana                                                     |\n| influxdb                | Install influxdb                                                    |\n| ingress-nginx           | Install ingress-nginx                                               |\n| inlets-operator         | Install inlets-operator                                             |\n| istio                   | Install istio                                                       |\n| jenkins                 | Install jenkins                                                     |\n| kafka                   | Install Confluent Platform Kafka                                    |\n| kafka-connector         | Install kafka-connector for OpenFaaS                                |\n| kong-ingress            | Install kong-ingress for OpenFaaS                                   |\n| kube-image-prefetch     | Install kube-image-prefetch                                         |\n| kube-state-metrics      | Install kube-state-metrics                                          |\n| kubernetes-dashboard    | Install kubernetes-dashboard                                        |\n| kuma                    | Install Kuma                                                        |\n| kyverno                 | Install Kyverno                                                     |\n| linkerd                 | Install linkerd                                                     |\n| loki                    | Install Loki for monitoring and tracing                             |\n| metallb-arp             | Install MetalLB in L2 (ARP) mode                                    |\n| metrics-server          | Install metrics-server                                              |\n| minio                   | Install minio                                                       |\n| mongodb                 | Install mongodb                                                     |\n| mqtt-connector          | Install mqtt-connector for OpenFaaS                                 |\n| nats-connector          | Install OpenFaaS connector for NATS                                 |\n| nfs-provisioner         | Install nfs subdir external provisioner                             |\n| opa-gatekeeper          | Install Open Policy Agent (OPA) Gatekeeper                          |\n| openfaas                | Install openfaas                                                    |\n| openfaas-ingress        | Install openfaas ingress with TLS                                   |\n| openfaas-loki           | Install Loki-OpenFaaS and Configure Loki logs provider for OpenFaaS |\n| portainer               | Install portainer to visualise and manage containers                |\n| postgresql              | Install postgresql                                                  |\n| prometheus              | Install Prometheus for monitoring                                   |\n| qemu-static             | Install qemu-user-static                                            |\n| rabbitmq                | Install rabbitmq                                                    |\n| redis                   | Install redis                                                       |\n| registry-creds          | Install registry-creds                                              |\n| sealed-secret           | Install sealed-secrets                                              |\n| tekton                  | Install Tekton pipelines and dashboard                              |\n| traefik2                | Install traefik2                                                    |\n| vault                   | Install vault                                                       |\n| waypoint                | Install Waypoint                                                    |\n\nThere are 52 apps that you can install on your cluster.\n\n> Note to contributors, run `go build && ./arkade install --print-table` to generate this list\n\n### Catalog of CLIs\n\n|                                     TOOL                                     |                                                                            DESCRIPTION                                                                            |\n|------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [actions-usage](https://github.com/self-actuated/actions-usage)              | Get usage insights from GitHub Actions.                                                                                                                           |\n| [actuated-cli](https://github.com/self-actuated/actuated-cli)                | Official CLI for actuated.dev                                                                                                                                     |\n| [argocd](https://github.com/argoproj/argo-cd)                                | Declarative, GitOps continuous delivery tool for Kubernetes.                                                                                                      |\n| [argocd-autopilot](https://github.com/argoproj-labs/argocd-autopilot)        | An opinionated way of installing Argo-CD and managing GitOps repositories.                                                                                        |\n| [arkade](https://github.com/alexellis/arkade)                                | Portable marketplace for downloading your favourite DevOps CLIs and installing helm charts, with a single command.                                                |\n| [atuin](https://github.com/atuinsh/atuin)                                    | Sync, search, and backup shell history with Atuin.                                                                                                                |\n| [autok3s](https://github.com/cnrancher/autok3s)                              | Run Rancher Lab's lightweight Kubernetes distribution k3s everywhere.                                                                                             |\n| [buildx](https://github.com/docker/buildx)                                   | Docker CLI plugin for extended build capabilities with BuildKit.                                                                                                  |\n| [bun](https://github.com/oven-sh/bun)                                        | Bun is an incredibly fast JavaScript runtime, bundler, transpiler, and package manager – all in one.                                                              |\n| [butane](https://github.com/coreos/butane)                                   | Translates human readable Butane Configs into machine readable Ignition Configs                                                                                   |\n| [caddy](https://github.com/caddyserver/caddy)                                | Caddy is an extensible server platform that uses TLS by default                                                                                                   |\n| [ch-remote](https://github.com/cloud-hypervisor/cloud-hypervisor)            | The ch-remote binary is used for controlling an running Virtual Machine.                                                                                          |\n| [cilium](https://github.com/cilium/cilium-cli)                               | CLI to install, manage & troubleshoot Kubernetes clusters running Cilium.                                                                                         |\n| [civo](https://github.com/civo/cli)                                          | CLI for interacting with your Civo resources.                                                                                                                     |\n| [cloud-hypervisor](https://github.com/cloud-hypervisor/cloud-hypervisor)     | Cloud Hypervisor is an open source Virtual Machine Monitor (VMM) that runs on top of the KVM hypervisor and the Microsoft Hypervisor (MSHV).                      |\n| [clusterawsadm](https://github.com/kubernetes-sigs/cluster-api-provider-aws) | Kubernetes Cluster API Provider AWS Management Utility                                                                                                            |\n| [clusterctl](https://github.com/kubernetes-sigs/cluster-api)                 | The clusterctl CLI tool handles the lifecycle of a Cluster API management cluster                                                                                 |\n| [cmctl](https://github.com/cert-manager/cmctl)                               | cmctl is a CLI tool that helps you manage cert-manager and its resources inside your cluster.                                                                     |\n| [conftest](https://github.com/open-policy-agent/conftest)                    | Write tests against structured configuration data using the Open Policy Agent Rego query language                                                                 |\n| [consul](https://github.com/hashicorp/consul)                                | A solution to connect and configure applications across dynamic, distributed infrastructure                                                                       |\n| [copa](https://github.com/project-copacetic/copacetic)                       | CLI for patching container images                                                                                                                                 |\n| [cosign](https://github.com/sigstore/cosign)                                 | Container Signing, Verification and Storage in an OCI registry.                                                                                                   |\n| [cr](https://github.com/helm/chart-releaser)                                 | Hosting Helm Charts via GitHub Pages and Releases                                                                                                                 |\n| [crane](https://github.com/google/go-containerregistry)                      | crane is a tool for interacting with remote images and registries                                                                                                 |\n| [croc](https://github.com/schollz/croc)                                      | Easily and securely send things from one computer to another                                                                                                      |\n| [crossplane](https://github.com/crossplane/crossplane)                       | Simplify some development and administration aspects of Crossplane.                                                                                               |\n| [dagger](https://github.com/dagger/dagger)                                   | A portable devkit for CI/CD pipelines.                                                                                                                            |\n| [devspace](https://github.com/devspace-sh/devspace)                          | Automate your deployment workflow with DevSpace and develop software directly inside Kubernetes.                                                                  |\n| [dive](https://github.com/wagoodman/dive)                                    | A tool for exploring each layer in a docker image                                                                                                                 |\n| [docker-compose](https://github.com/docker/compose)                          | Define and run multi-container applications with Docker.                                                                                                          |\n| [doctl](https://github.com/digitalocean/doctl)                               | Official command line interface for the DigitalOcean API.                                                                                                         |\n| [duplik8s](https://github.com/Telemaco019/duplik8s)                          | kubectl plugin to duplicate resources in a Kubernetes cluster.                                                                                                    |\n| [eks-node-viewer](https://github.com/awslabs/eks-node-viewer)                | eks-node-viewer is a tool for visualizing dynamic node usage within an EKS cluster.                                                                               |\n| [eksctl](https://github.com/eksctl-io/eksctl)                                | Amazon EKS Kubernetes cluster management                                                                                                                          |\n| [eksctl-anywhere](https://github.com/aws/eks-anywhere)                       | Run Amazon EKS on your own infrastructure                                                                                                                         |\n| [etcd](https://github.com/etcd-io/etcd)                                      | Distributed reliable key-value store for the most critical data of a distributed system.                                                                          |\n| [faas-cli](https://github.com/openfaas/faas-cli)                             | Official CLI for OpenFaaS.                                                                                                                                        |\n| [faasd](https://github.com/openfaas/faasd)                                   | faasd - a lightweight & portable faas engine                                                                                                                      |\n| [firectl](https://github.com/firecracker-microvm/firectl)                    | Command-line tool that lets you run arbitrary Firecracker MicroVMs                                                                                                |\n| [flux](https://github.com/fluxcd/flux2)                                      | Continuous Delivery solution for Kubernetes powered by GitOps Toolkit.                                                                                            |\n| [flyctl](https://github.com/superfly/flyctl)                                 | Command line tools for fly.io services                                                                                                                            |\n| [fstail](https://github.com/alexellis/fstail)                                | Tail modified files in a directory.                                                                                                                               |\n| [fzf](https://github.com/junegunn/fzf)                                       | General-purpose command-line fuzzy finder                                                                                                                         |\n| [gh](https://github.com/cli/cli)                                             | GitHub’s official command line tool.                                                                                                                              |\n| [glab](https://github.com/gitlab-org/cli)                                    | A GitLab CLI tool bringing GitLab to your command line.                                                                                                           |\n| [golangci-lint](https://github.com/golangci/golangci-lint)                   | Go linters aggregator.                                                                                                                                            |\n| [gomplate](https://github.com/hairyhenderson/gomplate)                       | A flexible commandline tool for template rendering. Supports lots of local and remote datasources.                                                                |\n| [goreleaser](https://github.com/goreleaser/goreleaser)                       | Deliver Go binaries as fast and easily as possible                                                                                                                |\n| [gptscript](https://github.com/gptscript-ai/gptscript)                       | Natural Language Programming                                                                                                                                      |\n| [grafana-agent](https://github.com/grafana/agent)                            | Grafana Agent is a telemetry collector for sending metrics, logs, and trace data to the opinionated Grafana observability stack.                                  |\n| [grype](https://github.com/anchore/grype)                                    | A vulnerability scanner for container images and filesystems                                                                                                      |\n| [hadolint](https://github.com/hadolint/hadolint)                             | A smarter Dockerfile linter that helps you build best practice Docker images                                                                                      |\n| [helm](https://github.com/helm/helm)                                         | The Kubernetes Package Manager: Think of it like apt/yum/homebrew for Kubernetes.                                                                                 |\n| [helmfile](https://github.com/helmfile/helmfile)                             | Deploy Kubernetes Helm Charts                                                                                                                                     |\n| [hey](https://github.com/alexellis/hey)                                      | Load testing tool                                                                                                                                                 |\n| [hostctl](https://github.com/guumaster/hostctl)                              | Dev tool to manage /etc/hosts like a pro!                                                                                                                         |\n| [hubble](https://github.com/cilium/hubble)                                   | CLI for network, service & security observability for Kubernetes clusters running Cilium.                                                                         |\n| [hugo](https://github.com/gohugoio/hugo)                                     | Static HTML and CSS website generator.                                                                                                                            |\n| [influx](https://github.com/influxdata/influxdb)                             | InfluxDB’s command line interface (influx) is an interactive shell for the HTTP API.                                                                              |\n| [inlets-pro](https://github.com/inlets/inlets-pro)                           | Cloud Native Tunnel for HTTP and TCP traffic.                                                                                                                     |\n| [inletsctl](https://github.com/inlets/inletsctl)                             | Automates the task of creating an exit-server (tunnel server) on public cloud infrastructure.                                                                     |\n| [istioctl](https://github.com/istio/istio)                                   | Service Mesh to establish a programmable, application-aware network using the Envoy service proxy.                                                                |\n| [jq](https://github.com/jqlang/jq)                                           | jq is a lightweight and flexible command-line JSON processor                                                                                                      |\n| [just](https://github.com/casey/just)                                        | Just a command runner                                                                                                                                             |\n| [k0s](https://github.com/k0sproject/k0s)                                     | Zero Friction Kubernetes                                                                                                                                          |\n| [k0sctl](https://github.com/k0sproject/k0sctl)                               | A bootstrapping and management tool for k0s clusters                                                                                                              |\n| [k3d](https://github.com/k3d-io/k3d)                                         | Helper to run Rancher Lab's k3s in Docker.                                                                                                                        |\n| [k3s](https://github.com/k3s-io/k3s)                                         | Lightweight Kubernetes                                                                                                                                            |\n| [k3sup](https://github.com/alexellis/k3sup)                                  | Bootstrap Kubernetes with k3s over SSH < 1 min.                                                                                                                   |\n| [k9s](https://github.com/derailed/k9s)                                       | Provides a terminal UI to interact with your Kubernetes clusters.                                                                                                 |\n| [kail](https://github.com/boz/kail)                                          | Kubernetes log viewer.                                                                                                                                            |\n| [keploy](https://github.com/keploy/keploy)                                   | Test generation for Developers. Generate tests and stubs for your application that actually work!                                                                 |\n| [kgctl](https://github.com/squat/kilo)                                       | A CLI to manage Kilo, a multi-cloud network overlay built on WireGuard and designed for Kubernetes.                                                               |\n| [kim](https://github.com/rancher/kim)                                        | Build container images inside of Kubernetes. (Experimental)                                                                                                       |\n| [kind](https://github.com/kubernetes-sigs/kind)                              | Run local Kubernetes clusters using Docker container nodes.                                                                                                       |\n| [kops](https://github.com/kubernetes/kops)                                   | Production Grade K8s Installation, Upgrades, and Management.                                                                                                      |\n| [krew](https://github.com/kubernetes-sigs/krew)                              | Package manager for kubectl plugins.                                                                                                                              |\n| [ktop](https://github.com/vladimirvivien/ktop)                               | A top-like tool for your Kubernetes cluster.                                                                                                                      |\n| [kube-bench](https://github.com/aquasecurity/kube-bench)                     | Checks whether Kubernetes is deployed securely by running the checks documented in the CIS Kubernetes Benchmark.                                                  |\n| [kube-burner](https://github.com/cloud-bulldozer/kube-burner)                | A tool aimed at stressing Kubernetes clusters by creating or deleting a high quantity of objects.                                                                 |\n| [kube-linter](https://github.com/stackrox/kube-linter)                       | KubeLinter is a static analysis tool that checks Kubernetes YAML files and Helm charts to ensure the applications represented in them adhere to best practices.   |\n| [kube-score](https://github.com/zegl/kube-score)                             | A tool that performs static code analysis of your Kubernetes object definitions.                                                                                  |\n| [kubebuilder](https://github.com/kubernetes-sigs/kubebuilder)                | Framework for building Kubernetes APIs using custom resource definitions (CRDs).                                                                                  |\n| [kubecm](https://github.com/sunny0826/kubecm)                                | Easier management of kubeconfig.                                                                                                                                  |\n| [kubecolor](https://github.com/kubecolor/kubecolor)                          | KubeColor is a kubectl replacement used to add colors to your kubectl output.                                                                                     |\n| [kubeconform](https://github.com/yannh/kubeconform)                          | A FAST Kubernetes manifests validator, with support for Custom Resources                                                                                          |\n| [kubectl](https://github.com/kubernetes/kubernetes)                          | Run commands against Kubernetes clusters                                                                                                                          |\n| [kubectx](https://github.com/ahmetb/kubectx)                                 | Faster way to switch between clusters.                                                                                                                            |\n| [kubens](https://github.com/ahmetb/kubectx)                                  | Switch between Kubernetes namespaces smoothly.                                                                                                                    |\n| [kubescape](https://github.com/kubescape/kubescape)                          | kubescape is the first tool for testing if Kubernetes is deployed securely as defined in Kubernetes Hardening Guidance by NSA and CISA                            |\n| [kubeseal](https://github.com/bitnami-labs/sealed-secrets)                   | A Kubernetes controller and tool for one-way encrypted Secrets                                                                                                    |\n| [kubetail](https://github.com/johanhaleby/kubetail)                          | Bash script to tail Kubernetes logs from multiple pods at the same time.                                                                                          |\n| [kubetrim](https://github.com/alexellis/kubetrim)                            | Tidy up old Kubernetes clusters from kubeconfig.                                                                                                                  |\n| [kubeval](https://github.com/instrumenta/kubeval)                            | Validate your Kubernetes configuration files, supports multiple Kubernetes versions                                                                               |\n| [kubie](https://github.com/sbstp/kubie)                                      | A more powerful alternative to kubectx and kubens                                                                                                                 |\n| [kumactl](https://github.com/kumahq/kuma)                                    | kumactl is a CLI to interact with Kuma and its data                                                                                                               |\n| [kustomize](https://github.com/kubernetes-sigs/kustomize)                    | Customization of kubernetes YAML configurations                                                                                                                   |\n| [kwok](https://github.com/kubernetes-sigs/kwok)                              | KWOK stands for Kubernetes WithOut Kubelet, responsible for simulating the lifecycle of fake nodes, pods, and other Kubernetes API resources                      |\n| [kwokctl](https://github.com/kubernetes-sigs/kwok)                           | CLI tool designed to streamline the creation and management of clusters, with nodes simulated by `kwok`                                                           |\n| [kyverno](https://github.com/kyverno/kyverno)                                | CLI to apply and test Kyverno policies outside a cluster.                                                                                                         |\n| [labctl](https://github.com/iximiuz/labctl)                                  | iximiuz Labs control - start remote microVM playgrounds from the command line.                                                                                    |\n| [lazydocker](https://github.com/jesseduffield/lazydocker)                    | A simple terminal UI for both docker and docker-compose, written in Go with the gocui library.                                                                    |\n| [lazygit](https://github.com/jesseduffield/lazygit)                          | A simple terminal UI for git commands.                                                                                                                            |\n| [linkerd2](https://github.com/linkerd/linkerd2)                              | Ultralight, security-first service mesh for Kubernetes.                                                                                                           |\n| [mc](https://github.com/minio/mc)                                            | MinIO Client is a replacement for ls, cp, mkdir, diff and rsync commands for filesystems and object storage.                                                      |\n| [metal](https://github.com/equinix/metal-cli)                                | Official Equinix Metal CLI                                                                                                                                        |\n| [minikube](https://github.com/kubernetes/minikube)                           | Runs the latest stable release of Kubernetes, with support for standard Kubernetes features.                                                                      |\n| [mixctl](https://github.com/inlets/mixctl)                                   | A tiny TCP load-balancer.                                                                                                                                         |\n| [mkcert](https://github.com/FiloSottile/mkcert)                              | A simple zero-config tool to make locally trusted development certificates with any names you'd like.                                                             |\n| [nats](https://github.com/nats-io/natscli)                                   | Utility to interact with and manage NATS.                                                                                                                         |\n| [nats-server](https://github.com/nats-io/nats-server)                        | Cloud native message bus and queue server                                                                                                                         |\n| [nerdctl](https://github.com/containerd/nerdctl)                             | Docker-compatible CLI for containerd, with support for Compose                                                                                                    |\n| [nova](https://github.com/FairwindsOps/nova)                                 | Find outdated or deprecated Helm charts running in your cluster.                                                                                                  |\n| [oc](https://github.com/openshift/oc)                                        | Client to use an OpenShift 4.x cluster.                                                                                                                           |\n| [oh-my-posh](https://github.com/jandedobbeleer/oh-my-posh)                   | A prompt theme engine for any shell that can display kubernetes information.                                                                                      |\n| [op](https://github.com/1password/)                                          | 1Password CLI enables you to automate administrative tasks and securely provision secrets across development environments.                                        |\n| [opa](https://github.com/open-policy-agent/opa)                              | General-purpose policy engine that enables unified, context-aware policy enforcement across the entire stack.                                                     |\n| [openshift-install](https://github.com/openshift/installer)                  | CLI to install an OpenShift 4.x cluster.                                                                                                                          |\n| [operator-sdk](https://github.com/operator-framework/operator-sdk)           | Operator SDK is a tool for scaffolding and generating code for building Kubernetes operators                                                                      |\n| [osm](https://github.com/openservicemesh/osm)                                | Open Service Mesh uniformly manages, secures, and gets out-of-the-box observability features.                                                                     |\n| [pack](https://github.com/buildpacks/pack)                                   | Build apps using Cloud Native Buildpacks.                                                                                                                         |\n| [packer](https://github.com/hashicorp/packer)                                | Build identical machine images for multiple platforms from a single source configuration.                                                                         |\n| [polaris](https://github.com/FairwindsOps/polaris)                           | Run checks to ensure Kubernetes pods and controllers are configured using best practices.                                                                         |\n| [popeye](https://github.com/derailed/popeye)                                 | Scans live Kubernetes cluster and reports potential issues with deployed resources and configurations.                                                            |\n| [porter](https://github.com/getporter/porter)                                | With Porter you can package your application artifact, tools, etc. as a bundle that can distribute and install.                                                   |\n| [promtool](https://github.com/prometheus/prometheus)                         | Prometheus rule tester and debugging utility                                                                                                                      |\n| [rclone](https://github.com/rclone/rclone)                                   | 'rsync for cloud storage' - Google Drive, S3, Dropbox, Backblaze B2, One Drive, Swift, Hubic, Wasabi, Google Cloud Storage, Azure Blob, Azure Files, Yandex Files |\n| [regctl](https://github.com/regclient/regclient)                             | Utility for accessing docker registries                                                                                                                           |\n| [rekor-cli](https://github.com/sigstore/rekor)                               | Secure Supply Chain - Transparency Log                                                                                                                            |\n| [replicated](https://github.com/replicatedhq/replicated)                     | CLI for interacting with the Replicated Vendor API                                                                                                                |\n| [rosa](https://github.com/openshift/rosa)                                    | Red Hat OpenShift on AWS (ROSA) command line tool                                                                                                                 |\n| [rpk](https://github.com/redpanda-data/redpanda)                             | Kafka compatible streaming platform for mission critical workloads.                                                                                               |\n| [run-job](https://github.com/alexellis/run-job)                              | Run a Kubernetes Job and get the logs when it's done.                                                                                                             |\n| [scaleway-cli](https://github.com/scaleway/scaleway-cli)                     | Scaleway CLI is a tool to help you pilot your Scaleway infrastructure directly from your terminal.                                                                |\n| [seaweedfs](https://github.com/seaweedfs/seaweedfs)                          | SeaweedFS is a fast distributed storage system for blobs, objects, files, and data lake, for billions of files!                                                   |\n| [skupper](https://github.com/skupperproject/skupper)                         | Skupper is an implementation of a Virtual Application Network, enabling rich hybrid cloud communication                                                           |\n| [snowmachine](https://github.com/rgee0/snowmachine)                          | Festive cheer for your terminal.                                                                                                                                  |\n| [sops](https://github.com/getsops/sops)                                      | Simple and flexible tool for managing secrets                                                                                                                     |\n| [stern](https://github.com/stern/stern)                                      | Multi pod and container log tailing for Kubernetes.                                                                                                               |\n| [syft](https://github.com/anchore/syft)                                      | CLI tool and library for generating a Software Bill of Materials from container images and filesystems                                                            |\n| [talosctl](https://github.com/siderolabs/talos)                              | The command-line tool for managing Talos Linux OS.                                                                                                                |\n| [task](https://github.com/go-task/task)                                      | A simple task runner and build tool                                                                                                                               |\n| [tctl](https://github.com/temporalio/tctl)                                   | Temporal CLI.                                                                                                                                                     |\n| [terraform](https://github.com/hashicorp/terraform)                          | Infrastructure as Code for major cloud providers.                                                                                                                 |\n| [terraform-docs](https://github.com/terraform-docs/terraform-docs)           | Generate documentation from Terraform modules in various output formats.                                                                                          |\n| [terragrunt](https://github.com/gruntwork-io/terragrunt)                     | Terragrunt is a thin wrapper for Terraform that provides extra tools for working with multiple Terraform modules                                                  |\n| [terrascan](https://github.com/tenable/terrascan)                            | Detect compliance and security violations across Infrastructure as Code.                                                                                          |\n| [tflint](https://github.com/terraform-linters/tflint)                        | A Pluggable Terraform Linter.                                                                                                                                     |\n| [tfsec](https://github.com/aquasecurity/tfsec)                               | Security scanner for your Terraform code                                                                                                                          |\n| [tilt](https://github.com/tilt-dev/tilt)                                     | A multi-service dev environment for teams on Kubernetes.                                                                                                          |\n| [timoni](https://github.com/stefanprodan/timoni)                             | A package manager for Kubernetes powered by CUE.                                                                                                                  |\n| [tkn](https://github.com/tektoncd/cli)                                       | A CLI for interacting with Tekton.                                                                                                                                |\n| [tofu](https://github.com/opentofu/opentofu)                                 | OpenTofu lets you declaratively manage your cloud infrastructure                                                                                                  |\n| [trivy](https://github.com/aquasecurity/trivy)                               | Vulnerability Scanner for Containers and other Artifacts, Suitable for CI.                                                                                        |\n| [vagrant](https://github.com/hashicorp/vagrant)                              | Tool for building and distributing development environments.                                                                                                      |\n| [vault](https://github.com/hashicorp/vault)                                  | A tool for secrets management, encryption as a service, and privileged access management.                                                                         |\n| [vcluster](https://github.com/loft-sh/vcluster)                              | Create fully functional virtual Kubernetes clusters - Each vcluster runs inside a namespace of the underlying k8s cluster.                                        |\n| [vhs](https://github.com/charmbracelet/vhs)                                  | CLI for recording demos                                                                                                                                           |\n| [viddy](https://github.com/sachaos/viddy)                                    | A modern watch command. Time machine and pager etc.                                                                                                               |\n| [waypoint](https://github.com/hashicorp/waypoint)                            | Easy application deployment for Kubernetes and Amazon ECS                                                                                                         |\n| [yq](https://github.com/mikefarah/yq)                                        | Portable command-line YAML processor.                                                                                                                             |\n| [yt-dlp](https://github.com/yt-dlp/yt-dlp)                                   | Fork of youtube-dl with additional features and fixes                                                                                                             |\nThere are 162 tools, use `arkade get NAME` to download one.\n\n> Note to contributors, run `go build && ./arkade get --format markdown` to generate this list"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "get.sh",
          "type": "blob",
          "size": 4.833984375,
          "content": "#!/usr/bin/env bash\n\n# Copyright OpenFaaS Author(s) 2022\n#########################\n# Repo specific content #\n#########################\n\nexport VERIFY_CHECKSUM=0\nexport ALIAS_NAME=\"ark\"\nexport OWNER=alexellis\nexport REPO=arkade\n\nif [ -z \"$BINLOCATION\" ]; then\n    BINLOCATION=\"/usr/local/bin\"\nfi\n\nexport SUCCESS_CMD=\"$BINLOCATION/$REPO version\"\n\n###############################\n# Content common across repos #\n###############################\n\nversion=$(curl -sI https://github.com/$OWNER/$REPO/releases/latest | grep -i \"location:\" | awk -F\"/\" '{ printf \"%s\", $NF }' | tr -d '\\r')\nif [ ! $version ]; then\n    echo \"Failed while attempting to install $REPO. Please manually install:\"\n    echo \"\"\n    echo \"1. Open your web browser and go to https://github.com/$OWNER/$REPO/releases\"\n    echo \"2. Download the latest release for your platform. Call it '$REPO'.\"\n    echo \"3. chmod +x ./$REPO\"\n    echo \"4. mv ./$REPO $BINLOCATION\"\n    if [ -n \"$ALIAS_NAME\" ]; then\n        echo \"5. ln -sf $BINLOCATION/$REPO /usr/local/bin/$ALIAS_NAME\"\n    fi\n    exit 1\nfi\n\nhasCli() {\n\n    hasCurl=$(which curl)\n    if [ \"$?\" = \"1\" ]; then\n        echo \"You need curl to use this script.\"\n        exit 1\n    fi\n}\n\ncheckHash(){\n\n    sha_cmd=\"sha256sum\"\n\n    if [ ! -x \"$(command -v $sha_cmd)\" ]; then\n    sha_cmd=\"shasum -a 256\"\n    fi\n\n    if [ -x \"$(command -v $sha_cmd)\" ]; then\n\n    targetFileDir=${targetFile%/*}\n\n    (cd \"$targetFileDir\" && curl -sSL $url.sha256|$sha_cmd -c >/dev/null)\n\n        if [ \"$?\" != \"0\" ]; then\n            rm \"$targetFile\"\n            echo \"Binary checksum didn't match. Exiting\"\n            exit 1\n        fi\n    fi\n}\n\ngetPackage() {\n    uname=$(uname)\n    userid=$(id -u)\n\n    suffix=\"\"\n    case $uname in\n    \"Darwin\")\n        arch=$(uname -m)\n        case $arch in\n        \"x86_64\")\n        suffix=\"-darwin\"\n        ;;\n        esac\n        case $arch in\n        \"arm64\")\n        suffix=\"-darwin-arm64\"\n        ;;\n        esac\n    ;;\n\n    \"MINGW\"*)\n    suffix=\".exe\"\n    BINLOCATION=\"$HOME/bin\"\n    mkdir -p $BINLOCATION\n\n    ;;\n    \"Linux\")\n        arch=$(uname -m)\n        echo $arch\n        case $arch in\n        \"aarch64\")\n        suffix=\"-arm64\"\n        ;;\n        esac\n        case $arch in\n        \"armv6l\" | \"armv7l\")\n        suffix=\"-armhf\"\n        ;;\n        esac\n    ;;\n    esac\n\n    targetFile=\"/tmp/$REPO$suffix\"\n\n    if [ \"$userid\" != \"0\" ]; then\n        targetFile=\"$(pwd)/$REPO$suffix\"\n    fi\n\n    if [ -e \"$targetFile\" ]; then\n        rm \"$targetFile\"\n    fi\n\n    url=https://github.com/$OWNER/$REPO/releases/download/$version/$REPO$suffix\n    echo \"Downloading package $url as $targetFile\"\n\n    curl -sSL $url --output \"$targetFile\"\n\n    if [ \"$?\" = \"0\" ]; then\n\n        if [ \"$VERIFY_CHECKSUM\" = \"1\" ]; then\n            checkHash\n        fi\n\n    chmod +x \"$targetFile\"\n\n    echo \"Download complete.\"\n\n    if [ ! -w \"$BINLOCATION\" ]; then\n\n            echo\n            echo \"============================================================\"\n            echo \"  The script was run as a user who is unable to write\"\n            echo \"  to $BINLOCATION. To complete the installation the\"\n            echo \"  following commands may need to be run manually.\"\n            echo \"============================================================\"\n            echo\n            echo \"  sudo cp $REPO$suffix $BINLOCATION/$REPO\"\n\n            if [ -n \"$ALIAS_NAME\" ]; then\n                echo \"  sudo ln -sf $BINLOCATION/$REPO $BINLOCATION/$ALIAS_NAME\"\n            fi\n\n            echo\n\n        else\n\n            echo\n            echo \"Running with sufficient permissions to attempt to move $REPO to $BINLOCATION\"\n\n            if [ ! -w \"$BINLOCATION/$REPO\" ] && [ -f \"$BINLOCATION/$REPO\" ]; then\n\n            echo\n            echo \"================================================================\"\n            echo \"  $BINLOCATION/$REPO already exists and is not writeable\"\n            echo \"  by the current user.  Please adjust the binary ownership\"\n            echo \"  or run sh/bash with sudo.\"\n            echo \"================================================================\"\n            echo\n            exit 1\n\n            fi\n\n            mv \"$targetFile\" $BINLOCATION/$REPO\n\n            if [ \"$?\" = \"0\" ]; then\n                echo \"New version of $REPO installed to $BINLOCATION\"\n            fi\n\n            if [ -e \"$targetFile\" ]; then\n                rm \"$targetFile\"\n            fi\n\n            if [ $(which $ALIAS_NAME) ]; then\n                echo \"There is already a command '$ALIAS_NAME' in the path, NOT creating alias\"\n            else\n                if [ -n \"$ALIAS_NAME\" ]; then\n                    if [ ! -L $BINLOCATION/$ALIAS_NAME ]; then\n                        ln -s $BINLOCATION/$REPO $BINLOCATION/$ALIAS_NAME\n                        echo \"Creating alias '$ALIAS_NAME' for '$REPO'.\"\n                    fi\n                fi\n            fi\n\n            ${SUCCESS_CMD}\n        fi\n    fi\n}\n\nhasCli\ngetPackage"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.640625,
          "content": "module github.com/alexellis/arkade\n\ngo 1.22.0\n\nrequire (\n\tgithub.com/Masterminds/semver v1.5.0\n\tgithub.com/alexellis/go-execute/v2 v2.2.1\n\tgithub.com/cheggaaa/pb/v3 v3.1.5\n\tgithub.com/docker/go-units v0.5.0\n\tgithub.com/google/go-containerregistry v0.20.2\n\tgithub.com/morikuni/aec v1.0.0\n\tgithub.com/olekukonko/tablewriter v0.0.5\n\tgithub.com/otiai10/copy v1.14.0\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/sethvargo/go-password v0.3.1\n\tgithub.com/spf13/cobra v1.8.1\n\tgolang.org/x/crypto v0.28.0\n\tgolang.org/x/mod v0.21.0\n\tgopkg.in/yaml.v3 v3.0.1\n)\n\nrequire (\n\tgithub.com/VividCortex/ewma v1.2.0 // indirect\n\tgithub.com/containerd/stargz-snapshotter/estargz v0.15.1 // indirect\n\tgithub.com/docker/cli v27.1.2+incompatible // indirect\n\tgithub.com/docker/distribution v2.8.3+incompatible // indirect\n\tgithub.com/docker/docker-credential-helpers v0.8.2 // indirect\n\tgithub.com/fatih/color v1.17.0 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/klauspost/compress v1.17.9 // indirect\n\tgithub.com/kr/pretty v0.3.1 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.16 // indirect\n\tgithub.com/mitchellh/go-homedir v1.1.0 // indirect\n\tgithub.com/opencontainers/go-digest v1.0.0 // indirect\n\tgithub.com/opencontainers/image-spec v1.1.0 // indirect\n\tgithub.com/rivo/uniseg v0.4.7 // indirect\n\tgithub.com/rogpeppe/go-internal v1.12.0 // indirect\n\tgithub.com/sirupsen/logrus v1.9.3 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgithub.com/vbatts/tar-split v0.11.5 // indirect\n\tgolang.org/x/sync v0.8.0 // indirect\n\tgolang.org/x/sys v0.26.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 8.9072265625,
          "content": "github.com/Masterminds/semver v1.5.0 h1:H65muMkzWKEuNDnfl9d70GUjFniHKHRbFPGBuZ3QEww=\ngithub.com/Masterminds/semver v1.5.0/go.mod h1:MB6lktGJrhw8PrUyiEoblNEGEQ+RzHPF078ddwwvV3Y=\ngithub.com/VividCortex/ewma v1.2.0 h1:f58SaIzcDXrSy3kWaHNvuJgJ3Nmz59Zji6XoJR/q1ow=\ngithub.com/VividCortex/ewma v1.2.0/go.mod h1:nz4BbCtbLyFDeC9SUHbtcT5644juEuWfUAUnGx7j5l4=\ngithub.com/alexellis/go-execute/v2 v2.2.1 h1:4Ye3jiCKQarstODOEmqDSRCqxMHLkC92Bhse743RdOI=\ngithub.com/alexellis/go-execute/v2 v2.2.1/go.mod h1:FMdRnUTiFAmYXcv23txrp3VYZfLo24nMpiIneWgKHTQ=\ngithub.com/cheggaaa/pb/v3 v3.1.5 h1:QuuUzeM2WsAqG2gMqtzaWithDJv0i+i6UlnwSCI4QLk=\ngithub.com/cheggaaa/pb/v3 v3.1.5/go.mod h1:CrxkeghYTXi1lQBEI7jSn+3svI3cuc19haAj6jM60XI=\ngithub.com/containerd/stargz-snapshotter/estargz v0.15.1 h1:eXJjw9RbkLFgioVaTG+G/ZW/0kEe2oEKCdS/ZxIyoCU=\ngithub.com/containerd/stargz-snapshotter/estargz v0.15.1/go.mod h1:gr2RNwukQ/S9Nv33Lt6UC7xEx58C+LHRdoqbEKjz1Kk=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/docker/cli v27.1.2+incompatible h1:nYviRv5Y+YAKx3dFrTvS1ErkyVVunKOhoweCTE1BsnI=\ngithub.com/docker/cli v27.1.2+incompatible/go.mod h1:JLrzqnKDaYBop7H2jaqPtU4hHvMKP+vjCwu2uszcLI8=\ngithub.com/docker/distribution v2.8.3+incompatible h1:AtKxIZ36LoNK51+Z6RpzLpddBirtxJnzDrHLEKxTAYk=\ngithub.com/docker/distribution v2.8.3+incompatible/go.mod h1:J2gT2udsDAN96Uj4KfcMRqY0/ypR+oyYUYmja8H+y+w=\ngithub.com/docker/docker-credential-helpers v0.8.2 h1:bX3YxiGzFP5sOXWc3bTPEXdEaZSeVMrFgOr3T+zrFAo=\ngithub.com/docker/docker-credential-helpers v0.8.2/go.mod h1:P3ci7E3lwkZg6XiHdRKft1KckHiO9a2rNtyFbZ/ry9M=\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/fatih/color v1.17.0 h1:GlRw1BRJxkpqUCBKzKOw098ed57fEsKeNjpTe3cSjK4=\ngithub.com/fatih/color v1.17.0/go.mod h1:YZ7TlrGPkiz6ku9fK3TLD/pl3CpsiFyu8N92HLgmosI=\ngithub.com/google/go-cmp v0.5.9 h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-containerregistry v0.20.2 h1:B1wPJ1SN/S7pB+ZAimcciVD+r+yV/l/DSArMxlbwseo=\ngithub.com/google/go-containerregistry v0.20.2/go.mod h1:z38EKdKh4h7IP2gSfUUqEvalZBqs6AoLeWfUy34nQC8=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/klauspost/compress v1.17.9 h1:6KIumPrER1LHsvBVuDa0r5xaG0Es51mhhB9BQB2qeMA=\ngithub.com/klauspost/compress v1.17.9/go.mod h1:Di0epgTjJY877eYKx5yC51cX2A2Vl2ibi7bDH9ttBbw=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-runewidth v0.0.9/go.mod h1:H031xJmbD/WCDINGzjvQ9THkh0rPKHF+m2gUSrubnMI=\ngithub.com/mattn/go-runewidth v0.0.16 h1:E5ScNMtiwvlvB5paMFdw9p4kSQzbXFikJ5SQO6TULQc=\ngithub.com/mattn/go-runewidth v0.0.16/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\ngithub.com/mitchellh/go-homedir v1.1.0 h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=\ngithub.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/morikuni/aec v1.0.0 h1:nP9CBfwrvYnBRgY6qfDQkygYDmYwOilePFkwzv4dU8A=\ngithub.com/morikuni/aec v1.0.0/go.mod h1:BbKIizmSmc5MMPqRYbxO4ZU0S0+P200+tUnFx7PXmsc=\ngithub.com/olekukonko/tablewriter v0.0.5 h1:P2Ga83D34wi1o9J6Wh1mRuqd4mF/x/lgBS7N7AbDhec=\ngithub.com/olekukonko/tablewriter v0.0.5/go.mod h1:hPp6KlRPjbx+hW8ykQs1w3UBbZlj6HuIJcUGPhkA7kY=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.1.0 h1:8SG7/vwALn54lVB/0yZ/MMwhFrPYtpEHQb2IpWsCzug=\ngithub.com/opencontainers/image-spec v1.1.0/go.mod h1:W4s4sFTMaBeK1BQLXbG4AdM2szdn85PY75RI83NrTrM=\ngithub.com/otiai10/copy v1.14.0 h1:dCI/t1iTdYGtkvCuBG2BgR6KZa83PTclw4U5n2wAllU=\ngithub.com/otiai10/copy v1.14.0/go.mod h1:ECfuL02W+/FkTWZWgQqXPWZgW9oeKCSQ5qVfSc4qc4w=\ngithub.com/otiai10/mint v1.5.1 h1:XaPLeE+9vGbuyEHem1JNk3bYc7KKqyI/na0/mLd/Kks=\ngithub.com/otiai10/mint v1.5.1/go.mod h1:MJm72SBthJjz8qhefc4z1PYEieWmy8Bku7CjcAqyUSM=\ngithub.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rivo/uniseg v0.4.7 h1:WUdvkW8uEhrYfLC4ZzdpI2ztxP1I582+49Oc5Mq64VQ=\ngithub.com/rivo/uniseg v0.4.7/go.mod h1:FN3SvrM+Zdj16jyLfmOkMNblXMcoc8DfTHruCPUcx88=\ngithub.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sethvargo/go-password v0.3.1 h1:WqrLTjo7X6AcVYfC6R7GtSyuUQR9hGyAj/f1PYQZCJU=\ngithub.com/sethvargo/go-password v0.3.1/go.mod h1:rXofC1zT54N7R8K/h1WDUdkf9BOx5OptoxrMBcrXzvs=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.7.0 h1:nwc3DEeHmmLAfoZucVR881uASk0Mfjw8xYJ99tb5CcY=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/vbatts/tar-split v0.11.5 h1:3bHCTIheBm1qFTcgh9oPu+nNBtX+XJIupG/vacinCts=\ngithub.com/vbatts/tar-split v0.11.5/go.mod h1:yZbwRsSeGjusneWgA781EKej9HF8vme8okylkAeNKLk=\ngolang.org/x/crypto v0.28.0 h1:GBDwsMXVQi34v5CCYUm2jkJvu4cbtru2U4TN2PSyQnw=\ngolang.org/x/crypto v0.28.0/go.mod h1:rmgy+3RHxRZMyY0jjAJShp2zgEdOqj2AO7U0pYmeQ7U=\ngolang.org/x/mod v0.21.0 h1:vvrHzRwRfVKSiLrG+d4FMl/Qi4ukBCE6kZlTUkDYRT0=\ngolang.org/x/mod v0.21.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/sync v0.8.0 h1:3NFvSEYkUoMifnESzZl15y791HH1qU2xm6eCJU5ZPXQ=\ngolang.org/x/sync v0.8.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.26.0 h1:KHjCJyddX0LoSTb3J+vWpupP9p0oznkqVk/IfjymZbo=\ngolang.org/x/sys v0.26.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngotest.tools/v3 v3.0.3 h1:4AuOwCGf4lLR9u3YOe2awrHygurzhO/HeQ6laiA6Sx0=\ngotest.tools/v3 v3.0.3/go.mod h1:Z7Lb0S5l+klDB31fvDQX8ss/FlKDxtlFlw3Oa8Ymbl8=\n"
        },
        {
          "name": "hack",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 1.0166015625,
          "content": "// Copyright (c) arkade author(s) 2022. All rights reserved.\n// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n\npackage main\n\nimport (\n\t\"os\"\n\n\t\"github.com/alexellis/arkade/cmd\"\n\t\"github.com/alexellis/arkade/cmd/chart\"\n\t\"github.com/alexellis/arkade/cmd/oci\"\n\t\"github.com/alexellis/arkade/cmd/system\"\n\t\"github.com/spf13/cobra\"\n)\n\nfunc main() {\n\tprintarkadeASCIIArt := cmd.PrintArkadeASCIIArt\n\n\tvar rootCmd = &cobra.Command{\n\t\tUse: \"arkade\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tprintarkadeASCIIArt()\n\t\t\tcmd.Help()\n\t\t},\n\t}\n\n\trootCmd.AddCommand(cmd.MakeInstall())\n\trootCmd.AddCommand(cmd.MakeVersion())\n\trootCmd.AddCommand(cmd.MakeInfo())\n\trootCmd.AddCommand(cmd.MakeUpdate())\n\trootCmd.AddCommand(cmd.MakeGet())\n\trootCmd.AddCommand(cmd.MakeUninstall())\n\trootCmd.AddCommand(cmd.MakeShellCompletion())\n\n\trootCmd.AddCommand(chart.MakeChart())\n\trootCmd.AddCommand(system.MakeSystem())\n\trootCmd.AddCommand(oci.MakeOci())\n\n\tif err := rootCmd.Execute(); err != nil {\n\t\tos.Exit(1)\n\t}\n}\n"
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}