{
  "metadata": {
    "timestamp": 1736567052419,
    "page": 636,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ua-nick/Data-Structures-and-Algorithms",
      "stars": 2774,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.578125,
          "content": "language: go\n\ngo:\n  - \"1.9.x\"\n  - \"1.10.x\"\n\nscript:\n  cd BinarySearch && go test ./;\n  cd ../BubbleSort && go test ./;\n  cd ../CocktailSort && go test ./;\n  cd ../CombSort && go test ./;\n  cd ../ExponentialSearch && go test ./;\n  cd ../GnomeSort && go test ./;\n  cd ../InsertionSort && go test ./;\n  cd ../InterpolationSearch && go test ./;\n  cd ../JumpSearch && go test ./;\n  cd ../LinearSearch && go test ./;\n  cd ../MergeSort && go test ./;\n  cd ../SelectionSort && go test ./;\n  cd ../TernarySearch && go test ./;\n  cd ../NaiveStringSearch && go test ./;\n  cd ../RabinKarp && go test ./;\n"
        },
        {
          "name": "BinarySearch",
          "type": "tree",
          "content": null
        },
        {
          "name": "BinaryTree",
          "type": "tree",
          "content": null
        },
        {
          "name": "BubbleSort",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.15234375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\neducation, socio-economic status, nationality, personal appearance, race,\nreligion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at floyernick@gmail.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.759765625,
          "content": "# Contributing Guide\n\nHi! Thanks for the interest in the project. Here are some notes if you want to make the project better ;)\n\n#### I have a question\nClearly formulate your question and create an issue.\n\n#### I have found a bug\nSimply create a pull request and provide a detailed description of the problem.\n\n#### I have a proposition for improvement\nCreate an issue if you have an idea or create a pull request if you know how to solve it in a source code.\n\n#### I have made own implementation of algorithm or data structure\nUnfortunately, we do not accept third-party implementations.\n\n### General notes\n- Make your code clean and clear.\n- Make sure that your code passes the tests, otherwise, it will be rejected.\n- Use labels to specify the type of issue or pull request.\n"
        },
        {
          "name": "CircularBuffer",
          "type": "tree",
          "content": null
        },
        {
          "name": "CocktailSort",
          "type": "tree",
          "content": null
        },
        {
          "name": "CombSort",
          "type": "tree",
          "content": null
        },
        {
          "name": "DoublyLinkedList",
          "type": "tree",
          "content": null
        },
        {
          "name": "ExponentialSearch",
          "type": "tree",
          "content": null
        },
        {
          "name": "GnomeSort",
          "type": "tree",
          "content": null
        },
        {
          "name": "HashTable",
          "type": "tree",
          "content": null
        },
        {
          "name": "InsertionSort",
          "type": "tree",
          "content": null
        },
        {
          "name": "InterpolationSearch",
          "type": "tree",
          "content": null
        },
        {
          "name": "JumpSearch",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0478515625,
          "content": "MIT License\n\nCopyright (c) 2018 Mykyta Paliienko\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "LinearSearch",
          "type": "tree",
          "content": null
        },
        {
          "name": "LinkedList",
          "type": "tree",
          "content": null
        },
        {
          "name": "MergeSort",
          "type": "tree",
          "content": null
        },
        {
          "name": "NaiveStringSearch",
          "type": "tree",
          "content": null
        },
        {
          "name": "Queue(LinkedList)",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.8623046875,
          "content": "# Data Structures and Algorithms\n\n[![Go Report Card](https://goreportcard.com/badge/github.com/floyernick/Data-Structures-and-Algorithms)](https://goreportcard.com/report/github.com/floyernick/Data-Structures-and-Algorithms) [![Build Status](https://travis-ci.org/floyernick/Data-Structures-and-Algorithms.svg?branch=master)](https://travis-ci.org/floyernick/Data-Structures-and-Algorithms) [![License](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/floyernick/Data-Structures-and-Algorithms/blob/master/LICENSE)\n\nClean and simple implementation in Go\n\n## Implementation\n\nThere are several data structures and algorithms implemented in this project. The list will be replenished with time.\n\n##### Data structures\n- Circular Buffer\n- Linked List\n- Doubly Linked List\n- Stack\n- Queue\n- Binary Tree\n- Hash Table\n- Trie\n\n##### Searching algorithms\n- Linear Search\n- Binary Search\n- Jump Search\n- Interpolation Search\n- Exponential Search\n- Ternary Search\n\n##### String searching algorithms\n\n- Naive String Search\n- Rabin-Karp Algorithm\n\n##### Sorting algorithms\n- Selection Sort\n- Insertion Sort\n- Bubble Sort\n- Comb Sort\n- Cocktail Sort\n- Gnome Sort\n- Merge Sort\n\n## Usage\n\nThe library is not intended for direct use by importing. We strongly recommend copying the necessary implementations and adjusting to your case.\n\nYou can download the source using `go get` command:\n\n```\ngo get github.com/floyernick/Data-Structures-and-Algorithms\n```\n\nDon't forget about proverb:\n> A little copying is better than a little dependency.\n\n## Contribute\n\nWe would be happy to receive your propositions of improvement! Read [Contributing Guide](https://github.com/floyernick/Data-Structures-and-Algorithms/blob/master/CONTRIBUTING.md) for more details.\n\n## License\n\nThis project is licensed under the **MIT License**.\n\n## Authors\n\n**Mykyta Paliienko** - [GitHub profile](https://github.com/floyernick)"
        },
        {
          "name": "RabinKarp",
          "type": "tree",
          "content": null
        },
        {
          "name": "ReverseArray",
          "type": "tree",
          "content": null
        },
        {
          "name": "SelectionSort",
          "type": "tree",
          "content": null
        },
        {
          "name": "Stack(Array)",
          "type": "tree",
          "content": null
        },
        {
          "name": "Stack(LinkedList)",
          "type": "tree",
          "content": null
        },
        {
          "name": "TernarySearch",
          "type": "tree",
          "content": null
        },
        {
          "name": "Trie",
          "type": "tree",
          "content": null
        },
        {
          "name": "dsa.go",
          "type": "blob",
          "size": 0.01171875,
          "content": "package dsa\n"
        }
      ]
    }
  ]
}