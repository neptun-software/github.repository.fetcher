{
  "metadata": {
    "timestamp": 1736567279507,
    "page": 878,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "envoyproxy/ratelimit",
      "stars": 2325,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.193359375,
          "content": "cover.out\n\nbin/\n.idea/\n.vscode/\nvendor\ncert.pem\nkey.pem\nprivate.pem\nredis-per-second.conf\nredis.conf\nredis-verify-peer.conf\ndump.rdb\n\n# Directories created by \"test_with_redis\" make target.\n63*\n26*\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.79296875,
          "content": "default_language_version:\n  python: python3\nrepos:\n  - repo: https://github.com/tekwizely/pre-commit-golang\n    rev: v1.0.0-beta.4\n    hooks:\n      - id: go-imports\n        args: [\"-w\", \"-local\", \"github.com/envoyproxy/ratelimit\"]\n      - id: go-fumpt\n        args: [\"-l\", \"-w\", \".\"]\n\n  - repo: https://github.com/pre-commit/mirrors-prettier\n    rev: \"v2.4.1\"\n    hooks:\n      - id: prettier\n        exclude: \"test/config/bad_yaml.yaml\"\n\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.0.1\n    hooks:\n      - id: check-added-large-files\n      - id: check-case-conflict\n      - id: check-json\n      - id: check-merge-conflict\n      - id: end-of-file-fixer\n      - id: trailing-whitespace\n\n  - repo: https://github.com/jumanjihouse/pre-commit-hooks\n    rev: 2.1.5\n    hooks:\n      - id: shfmt\n"
        },
        {
          "name": ".prettierrc.yaml",
          "type": "blob",
          "size": 0.0185546875,
          "content": "singleQuote: false\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.1396484375,
          "content": "## Community Code of Conduct\n\nratelimit follows the [CNCF Code of Conduct](https://github.com/cncf/foundation/blob/master/code-of-conduct.md).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.484375,
          "content": "We welcome contributions from the community. Here are some guidelines.\n\n# Coding style\n\n- Ratelimit uses [gofumpt](https://github.com/mvdan/gofumpt) and [goimports](https://pkg.go.dev/golang.org/x/tools/cmd/goimports) for Go styling.\n\n# Submitting a PR\n\n- Fork the repo.\n- Before committing any code, install the pre-commits by:\n\n```bash\nmake precommit_install\n# Example usage if you want to run it manually\npre-commit run # Run against staged changes\npre-commit run -a # Run against all files\n```\n\n- Pre-commits will automatically format your code at commit time.\n- Create your PR.\n- Tests will automatically run for you.\n- When all of the tests are passing, tag @envoyproxy/ratelimit-maintainers and\n  we will review it and merge.\n- Party time.\n\n# DCO: Sign your work\n\nThe sign-off is a simple line at the end of the explanation for the\npatch, which certifies that you wrote it or otherwise have the right to\npass it on as an open-source patch. The rules are pretty simple: if you\ncan certify the below (from\n[developercertificate.org](https://developercertificate.org/)):\n\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n660 York Street, Suite 102,\nSan Francisco, CA 94110 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\nthen you just add a line to every git commit message:\n\n    Signed-off-by: Joe Smith <joe@gmail.com>\n\nusing your real name (sorry, no pseudonyms or anonymous contributions.)\n\nYou can add the sign off when creating the git commit via `git commit -s`.\n\nIf you want this to be automatic you can set up some aliases:\n\n```bash\ngit config --add alias.amend \"commit -s --amend\"\ngit config --add alias.c \"commit -s\"\n```\n\n## Fixing DCO\n\nIf your PR fails the DCO check, it's necessary to fix the entire commit history in the PR. Best\npractice is to [squash](https://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html)\nthe commit history to a single commit, append the DCO sign-off as described above, and [force\npush](https://git-scm.com/docs/git-push#git-push---force). For example, if you have 2 commits in\nyour history:\n\n```bash\ngit rebase -i HEAD^^\n(interactive squash + DCO append)\ngit push origin -f\n```\n\nNote, that in general rewriting history in this way is a hindrance to the review process and this\nshould only be done to correct a DCO mistake.\n"
        },
        {
          "name": "DCO",
          "type": "blob",
          "size": 1.3876953125,
          "content": "Developer Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n1 Letterman Drive\nSuite D4700\nSan Francisco, CA, 94129\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.5712890625,
          "content": "FROM golang:1.23.3@sha256:73f06be4578c9987ce560087e2e2ea6485fb605e3910542cadd8fa09fc5f3e31 AS build\nWORKDIR /ratelimit\n\nENV GOPROXY=https://proxy.golang.org\nCOPY go.mod go.sum /ratelimit/\nRUN go mod download\n\nCOPY src src\nCOPY script script\n\nRUN CGO_ENABLED=0 GOOS=linux go build -o /go/bin/ratelimit -ldflags=\"-w -s\" -v github.com/envoyproxy/ratelimit/src/service_cmd\n\nFROM alpine:3.20.3@sha256:1e42bbe2508154c9126d48c2b8a75420c3544343bf86fd041fb7527e017a4b4a AS final\nRUN apk --no-cache add ca-certificates && apk --no-cache update\nCOPY --from=build /go/bin/ratelimit /bin/ratelimit\n"
        },
        {
          "name": "Dockerfile.integration",
          "type": "blob",
          "size": 0.4560546875,
          "content": "# Running this docker image runs the integration tests.\nFROM golang@sha256:73f06be4578c9987ce560087e2e2ea6485fb605e3910542cadd8fa09fc5f3e31\n\nRUN apt-get update -y && apt-get install sudo stunnel4 redis memcached -y && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /workdir\n\nENV GOPROXY=https://proxy.golang.org\nCOPY go.mod go.sum /workdir/\nRUN go mod download\n\nCOPY Makefile /workdir\nRUN make bootstrap\n\nCOPY src /workdir/src\nCOPY test /workdir/test\nCMD make tests_with_redis\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0927734375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner].\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 6.0966796875,
          "content": "export GO111MODULE=on\nPROJECT = ratelimit\nREGISTRY ?= envoyproxy\nIMAGE := $(REGISTRY)/$(PROJECT)\nINTEGRATION_IMAGE := $(REGISTRY)/$(PROJECT)_integration\nMODULE = github.com/envoyproxy/ratelimit\nGIT_REF = $(shell git describe --tags --exact-match 2>/dev/null || git rev-parse --short=8 --verify HEAD)\nVERSION ?= $(GIT_REF)\nSHELL := /bin/bash\nBUILDX_PLATFORMS := linux/amd64,linux/arm64/v8\n# Root dir returns absolute path of current directory. It has a trailing \"/\".\nPROJECT_DIR := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))\nexport PROJECT_DIR\nifneq ($(shell docker compose version 2>/dev/null),)\n  DOCKER_COMPOSE=docker compose\nelse\n  DOCKER_COMPOSE=docker-compose\nendif\n\n.PHONY: bootstrap\nbootstrap: ;\n\ndefine REDIS_STUNNEL\ncert = private.pem\npid = /var/run/stunnel.pid\n[redis]\naccept = 127.0.0.1:16381\nconnect = 127.0.0.1:6381\nendef\ndefine REDIS_PER_SECOND_STUNNEL\ncert = private.pem\npid = /var/run/stunnel-2.pid\n[redis]\naccept = 127.0.0.1:16382\nconnect = 127.0.0.1:6382\nendef\ndefine REDIS_VERIFY_PEER_STUNNEL\ncert = private.pem\npid = /var/run/stunnel-3.pid\n[redis]\nCAfile = cert.pem\naccept = 127.0.0.1:16361\nconnect = 127.0.0.1:6361\nendef\nexport REDIS_STUNNEL\nexport REDIS_PER_SECOND_STUNNEL\nexport REDIS_VERIFY_PEER_STUNNEL\nredis.conf:\n\techo \"$$REDIS_STUNNEL\" >> $@\nredis-per-second.conf:\n\techo \"$$REDIS_PER_SECOND_STUNNEL\" >> $@\nredis-verify-peer.conf:\n\techo \"$$REDIS_VERIFY_PEER_STUNNEL\" >> $@\n\n.PHONY: bootstrap_redis_tls\nbootstrap_redis_tls: redis.conf redis-per-second.conf redis-verify-peer.conf\n\topenssl req -new -newkey rsa:4096 -days 365 -nodes -x509 \\\n    -subj \"/C=US/ST=Denial/L=Springfield/O=Dis/CN=localhost\" \\\n    -addext \"subjectAltName = DNS:localhost\" \\\n    -keyout key.pem  -out cert.pem\n\tcat key.pem cert.pem > private.pem\n\tsudo cp cert.pem /usr/local/share/ca-certificates/redis-stunnel.crt\n\tchmod 640 key.pem cert.pem private.pem\n\tsudo update-ca-certificates\n\tsudo stunnel redis.conf\n\tsudo stunnel redis-per-second.conf\n\tsudo stunnel redis-verify-peer.conf\n.PHONY: docs_format\ndocs_format:\n\tscript/docs_check_format\n\n.PHONY: fix_format\nfix_format:\n\tscript/docs_fix_format\n\tgo fmt $(MODULE)/...\n\n.PHONY: check_format\ncheck_format: docs_format\n\t@gofmt -l $(shell go list -f '{{.Dir}}' ./...) | tee /dev/stderr | read && echo \"Files failed gofmt\" && exit 1 || true\n\n.PHONY: compile\ncompile:\n\tmkdir -p ./bin\n\tgo build -mod=readonly -o ./bin/ratelimit $(MODULE)/src/service_cmd\n\tgo build -mod=readonly -o ./bin/ratelimit_client $(MODULE)/src/client_cmd\n\tgo build -mod=readonly -o ./bin/ratelimit_config_check $(MODULE)/src/config_check_cmd\n\n.PHONY: tests_unit\ntests_unit: compile\n\tgo test -race $(MODULE)/...\n\n.PHONY: tests\ntests: compile\n\tgo test -race -tags=integration $(MODULE)/...\n\n.PHONY: tests_with_redis\ntests_with_redis: bootstrap_redis_tls tests_unit\n\tredis-server --port 6381 --requirepass password123 &\n\tredis-server --port 6382 --requirepass password123 &\n\tredis-server --port 6361 --requirepass password123 &\n\n\tredis-server --port 6392 --requirepass password123 &\n\tredis-server --port 6393 --requirepass password123 --slaveof 127.0.0.1 6392 --masterauth password123 &\n\tmkdir 26394 && cp test/integration/conf/sentinel.conf 26394/sentinel.conf && redis-server 26394/sentinel.conf --sentinel --port 26394 &\n\tmkdir 26395 && cp test/integration/conf/sentinel.conf 26395/sentinel.conf && redis-server 26395/sentinel.conf --sentinel --port 26395 &\n\tmkdir 26396 && cp test/integration/conf/sentinel.conf 26396/sentinel.conf && redis-server 26396/sentinel.conf --sentinel --port 26396 &\n\tredis-server --port 6397 --requirepass password123 &\n\tredis-server --port 6398 --requirepass password123 --slaveof 127.0.0.1 6397 --masterauth password123 &\n\tmkdir 26399 && cp test/integration/conf/sentinel-pre-second.conf 26399/sentinel.conf && redis-server 26399/sentinel.conf --sentinel --port 26399 &\n\tmkdir 26400 && cp test/integration/conf/sentinel-pre-second.conf 26400/sentinel.conf && redis-server 26400/sentinel.conf --sentinel --port 26400 &\n\tmkdir 26401 && cp test/integration/conf/sentinel-pre-second.conf 26401/sentinel.conf && redis-server 26401/sentinel.conf --sentinel --port 26401 &\n\n\tmkdir 6386 && cd 6386 && redis-server --port 6386 --cluster-enabled yes --requirepass password123 &\n\tmkdir 6387 && cd 6387 && redis-server --port 6387 --cluster-enabled yes --requirepass password123 &\n\tmkdir 6388 && cd 6388 && redis-server --port 6388 --cluster-enabled yes --requirepass password123 &\n\tmkdir 6389 && cd 6389 && redis-server --port 6389 --cluster-enabled yes --requirepass password123 &\n\tmkdir 6390 && cd 6390 && redis-server --port 6390 --cluster-enabled yes --requirepass password123 &\n\tmkdir 6391 && cd 6391 && redis-server --port 6391 --cluster-enabled yes --requirepass password123 &\n\tsleep 2\n\techo \"yes\" | redis-cli --cluster create -a password123 127.0.0.1:6386 127.0.0.1:6387 127.0.0.1:6388 --cluster-replicas 0\n\techo \"yes\" | redis-cli --cluster create -a password123 127.0.0.1:6389 127.0.0.1:6390 127.0.0.1:6391 --cluster-replicas 0\n\tredis-cli --cluster check -a password123 127.0.0.1:6386\n\tredis-cli --cluster check -a password123 127.0.0.1:6389\n\n\tgo test -race -tags=integration $(MODULE)/...\n\n.PHONY: docker_tests\ndocker_tests:\n\tdocker build -f Dockerfile.integration . -t $(INTEGRATION_IMAGE):$(VERSION) && \\\n\tdocker run $$(tty -s && echo \"-it\" || echo) $(INTEGRATION_IMAGE):$(VERSION)\n\n.PHONY: docker_image\ndocker_image: docker_tests\n\tdocker build . -t $(IMAGE):$(VERSION)\n\n.PHONY: docker_push\ndocker_push: docker_image\n\tdocker push $(IMAGE):$(VERSION)\n\n.PHONY: docker_multiarch_image\ndocker_multiarch_image: docker_tests\n\tdocker buildx build -t $(IMAGE):$(VERSION) --platform $(BUILDX_PLATFORMS) .\n\n.PHONY: docker_multiarch_push\ndocker_multiarch_push: docker_multiarch_image\n\tdocker buildx build -t $(IMAGE):$(VERSION) --platform $(BUILDX_PLATFORMS) --push .\n\n.PHONY: integration_tests\nintegration_tests:\n\t$(DOCKER_COMPOSE) --project-directory $(PWD)  -f integration-test/docker-compose-integration-test.yml up --build  --exit-code-from tester\n\n.PHONY: precommit_install\nprecommit_install:\n\tpython3 -m pip install -r requirements-dev.txt\n\tgo install mvdan.cc/gofumpt@v0.1.1\n\tgo install mvdan.cc/sh/v3/cmd/shfmt@latest\n\tgo install golang.org/x/tools/cmd/goimports@v0.1.7\n\tpre-commit install\n"
        },
        {
          "name": "OWNERS.md",
          "type": "blob",
          "size": 0.1484375,
          "content": "- Matt Klein ([mattklein123](https://github.com/mattklein123)) (mklein@lyft.com)\n- Yuki Sawa ([ysawa0](https://github.com/ysawa0)) (yukisawa@gmail.com)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 55.435546875,
          "content": "<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Overview](#overview)\n- [Docker Image](#docker-image)\n- [Supported Envoy APIs](#supported-envoy-apis)\n  - [API Deprecation History](#api-deprecation-history)\n- [Building and Testing](#building-and-testing)\n  - [Docker-compose setup](#docker-compose-setup)\n  - [Full test environment - Configure rate limits through files](#full-test-environment---configure-rate-limits-through-files)\n  - [Full test environment - Configure rate limits through an xDS Management Server](#full-test-environment---configure-rate-limits-through-an-xds-management-server)\n  - [Self-contained end-to-end integration test](#self-contained-end-to-end-integration-test)\n- [Configuration](#configuration)\n  - [The configuration format](#the-configuration-format)\n    - [Definitions](#definitions)\n    - [Descriptor list definition](#descriptor-list-definition)\n    - [Rate limit definition](#rate-limit-definition)\n    - [Replaces](#replaces)\n    - [ShadowMode](#shadowmode)\n    - [Including detailed metrics for unspecified values](#including-detailed-metrics-for-unspecified-values)\n    - [Examples](#examples)\n      - [Example 1](#example-1)\n      - [Example 2](#example-2)\n      - [Example 3](#example-3)\n      - [Example 4](#example-4)\n      - [Example 5](#example-5)\n      - [Example 6](#example-6)\n      - [Example 7](#example-7)\n      - [Example 8](#example-8)\n      - [Example 9](#example-9)\n  - [Loading Configuration](#loading-configuration)\n    - [File Based Configuration Loading](#file-based-configuration-loading)\n    - [xDS Management Server Based Configuration Loading](#xds-management-server-based-configuration-loading)\n  - [Log Format](#log-format)\n  - [GRPC Keepalive](#grpc-keepalive)\n  - [Health-check](#health-check)\n    - [Health-check configurations](#health-check-configurations)\n  - [GRPC server](#grpc-server)\n- [Request Fields](#request-fields)\n- [GRPC Client](#grpc-client)\n  - [Commandline flags](#commandline-flags)\n- [Global ShadowMode](#global-shadowmode)\n  - [Configuration](#configuration-1)\n  - [Statistics](#statistics)\n- [Statistics](#statistics-1)\n  - [Statistics options](#statistics-options)\n  - [DogStatsD](#dogstatsd)\n    - [Example](#example)\n    - [Continued example:](#continued-example)\n  - [Prometheus](#prometheus)\n- [HTTP Port](#http-port)\n  - [/json endpoint](#json-endpoint)\n- [Debug Port](#debug-port)\n- [Local Cache](#local-cache)\n- [Redis](#redis)\n  - [Redis type](#redis-type)\n  - [Pipelining](#pipelining)\n  - [One Redis Instance](#one-redis-instance)\n  - [Two Redis Instances](#two-redis-instances)\n  - [Health Checking for Redis Active Connection](#health-checking-for-redis-active-connection)\n- [Memcache](#memcache)\n- [Custom headers](#custom-headers)\n- [Tracing](#tracing)\n- [TLS](#tls)\n- [mTLS](#mtls)\n- [Contact](#contact)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n# Overview\n\nThe rate limit service is a Go/gRPC service designed to enable generic rate limit scenarios from different types of\napplications. Applications request a rate limit decision based on a domain and a set of descriptors. The service\nreads the configuration from disk via [runtime](https://github.com/lyft/goruntime), composes a cache key, and talks to the Redis cache. A\ndecision is then returned to the caller.\n\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/envoyproxy/ratelimit/badge)](https://securityscorecards.dev/viewer/?uri=github.com/envoyproxy/ratelimit)\n\n# Docker Image\n\nFor every main commit, an image is pushed to [Dockerhub](https://hub.docker.com/r/envoyproxy/ratelimit/tags?page=1&ordering=last_updated). There is currently no versioning (post v1.4.0) and tags are based on commit sha.\n\n# Supported Envoy APIs\n\n[v3 rls.proto](https://github.com/envoyproxy/data-plane-api/blob/master/envoy/service/ratelimit/v3/rls.proto) is currently supported.\nSupport for [v2 rls proto](https://github.com/envoyproxy/data-plane-api/blob/master/envoy/service/ratelimit/v2/rls.proto) is now deprecated.\n\n## API Deprecation History\n\n1. `v1.0.0` tagged on commit `0ded92a2af8261d43096eba4132e45b99a3b8b14`. Ratelimit has been in production use at Lyft for over 2 years.\n2. `v1.1.0` introduces the data-plane-api proto and initiates the deprecation of the legacy [ratelimit.proto](https://github.com/lyft/ratelimit/blob/0ded92a2af8261d43096eba4132e45b99a3b8b14/proto/ratelimit/ratelimit.proto).\n3. `e91321b` [commit](https://github.com/envoyproxy/ratelimit/commit/e91321b10f1ad7691d0348e880bd75d0fca05758) deleted support for the legacy [ratelimit.proto](https://github.com/envoyproxy/ratelimit/blob/0ded92a2af8261d43096eba4132e45b99a3b8b14/proto/ratelimit/ratelimit.proto).\n   The current version of ratelimit protocol is changed to [v3 rls.proto](https://github.com/envoyproxy/data-plane-api/blob/master/envoy/service/ratelimit/v3/rls.proto)\n   while [v2 rls.proto](https://github.com/envoyproxy/data-plane-api/blob/master/envoy/service/ratelimit/v3/rls.proto) is still supported\n   as a legacy protocol.\n4. `4bb32826` deleted support for legacy [v2 rls.proto](https://github.com/envoyproxy/data-plane-api/blob/master/envoy/service/ratelimit/v3/rls.proto)\n\n# Building and Testing\n\n- Install Redis-server.\n- Make sure go is setup correctly and checkout rate limit service into your go path. More information about installing\n  go [here](https://golang.org/doc/install).\n- In order to run the integration tests using a local Redis server please run two Redis-server instances: one on port `6379` and another on port `6380`\n  ```bash\n  redis-server --port 6379 &\n  redis-server --port 6380 &\n  ```\n- To setup for the first time (only done once):\n  ```bash\n  make bootstrap\n  ```\n- To compile:\n\n  ```bash\n  make compile\n  ```\n\n  Ensure you set the correct platform if running OSX host with a linux container e.g.\n\n  ```bash\n  GOOS=linux make compile\n  ```\n\n- To compile and run tests:\n  ```bash\n  make tests\n  ```\n- To run the server locally using some sensible default settings you can do this (this will setup the server to read the configuration files from the path you specify):\n  ```bash\n  USE_STATSD=false LOG_LEVEL=debug REDIS_SOCKET_TYPE=tcp REDIS_URL=localhost:6379 RUNTIME_ROOT=/home/user/src/runtime/data RUNTIME_SUBDIRECTORY=ratelimit RUNTIME_APPDIRECTORY=config\n  ```\n\n## Docker-compose setup\n\nThe docker-compose setup has three containers: redis, ratelimit-build, and ratelimit. In order to run the docker-compose setup from the root of the repo, run\n\n```bash\ndocker-compose up\n```\n\nThe ratelimit-build container will build the ratelimit binary. Then via a shared volume the binary will be shared with the ratelimit container. This dual container setup is used in order to use a\na minimal container to run the application, rather than the heftier container used to build it.\n\nIf you want to run with [two redis instances](#two-redis-instances), you will need to modify\nthe docker-compose.yml file to run a second redis container, and change the environment variables\nas explained in the [two redis instances](#two-redis-instances) section.\n\n## Full test environment - Configure rate limits through files\n\nTo run a fully configured environment to demo Envoy based rate limiting, run:\n\n```bash\nexport CONFIG_TYPE=FILE\ndocker-compose -f docker-compose-example.yml up --build --remove-orphans\n```\n\nThis will run ratelimit, redis, prom-statsd-exporter and two Envoy containers such that you can demo rate limiting by hitting the below endpoints.\n\n```bash\ncurl localhost:8888/test\ncurl localhost:8888/header -H \"foo: foo\" # Header based\ncurl localhost:8888/twoheader -H \"foo: foo\" -H \"bar: bar\" # Two headers\ncurl localhost:8888/twoheader -H \"foo: foo\" -H \"baz: baz\"  # This will be rate limited\ncurl localhost:8888/twoheader -H \"foo: foo\" -H \"bar: banned\" # Ban a particular header value\ncurl localhost:8888/twoheader -H \"foo: foo\" -H \"baz: shady\" # This will never be ratelimited since \"baz\" with value \"shady\" is in shadow_mode\ncurl localhost:8888/twoheader -H \"foo: foo\" -H \"baz: not-so-shady\" # This is subject to rate-limiting because the it's now in shadow_mode\n```\n\nEdit `examples/ratelimit/config/example.yaml` to test different rate limit configs. Hot reloading is enabled.\n\nThe descriptors in `example.yaml` and the actions in `examples/envoy/proxy.yaml` should give you a good idea on how to configure rate limits.\n\nTo see the metrics in the example\n\n```bash\n# The metrics for the shadow_mode keys\ncurl http://localhost:9102/metrics | grep -i shadow\n```\n\n## Full test environment - Configure rate limits through an xDS Management Server\n\nTo run a fully configured environment to demo Envoy based rate limiting, run:\n\n```bash\nexport CONFIG_TYPE=GRPC_XDS_SOTW\ndocker-compose -f docker-compose-example.yml --profile xds-config up --build --remove-orphans\n```\n\nThis will run in `xds-config` docker-compose profile which will run example xDS-Server, ratelimit, redis, prom-statsd-exporter and two Envoy containers such that you can demo rate limiting by hitting the below endpoints.\n\n```bash\ncurl localhost:8888/test\ncurl localhost:8888/header -H \"foo: foo\" # Header based\ncurl localhost:8888/twoheader -H \"foo: foo\" -H \"bar: bar\" # Two headers\ncurl localhost:8888/twoheader -H \"foo: foo\" -H \"baz: baz\"  # This will be rate limited\ncurl localhost:8888/twoheader -H \"foo: foo\" -H \"bar: banned\" # Ban a particular header value\ncurl localhost:8888/twoheader -H \"foo: foo\" -H \"baz: shady\" # This will never be ratelimited since \"baz\" with value \"shady\" is in shadow_mode\ncurl localhost:8888/twoheader -H \"foo: foo\" -H \"baz: not-so-shady\" # This is subject to rate-limiting because the it's now in shadow_mode\n```\n\nEdit[`examples/xds-sotw-config-server/resource.go`](examples/xds-sotw-config-server/resource.go) to test different rate limit configs.\n\nTo see the metrics in the example\n\n```bash\n# The metrics for the shadow_mode keys\ncurl http://localhost:9102/metrics | grep -i shadow\n```\n\n## Self-contained end-to-end integration test\n\nIntegration tests are coded as bash-scripts in `integration-test/scripts`.\n\nThe test suite will spin up a docker-compose environment from `integration-test/docker-compose-integration-test.yml`\n\nIf the test suite fails it will exit with code 1.\n\n```bash\nmake integration_tests\n```\n\n# Configuration\n\n## The configuration format\n\nThe rate limit configuration file format is YAML (mainly so that comments are supported).\n\n### Definitions\n\n- **Domain:** A domain is a container for a set of rate limits. All domains known to the Ratelimit service must be\n  globally unique. They serve as a way for different teams/projects to have rate limit configurations that don't conflict.\n- **Descriptor:** A descriptor is a list of key/value pairs owned by a domain that the Ratelimit service uses to\n  select the correct rate limit to use when limiting. Descriptors are case-sensitive. Examples of descriptors are:\n  - (\"database\", \"users\")\n  - (\"message_type\", \"marketing\"),(\"to_number\",\"2061234567\")\n  - (\"to_cluster\", \"service_a\")\n  - (\"to_cluster\", \"service_a\"),(\"from_cluster\", \"service_b\")\n\n### Descriptor list definition\n\nEach configuration contains a top level descriptor list and potentially multiple nested lists beneath that. The format is:\n\n```yaml\ndomain: <unique domain ID>\ndescriptors:\n  - key: <rule key: required>\n    value: <rule value: optional>\n    rate_limit: (optional block)\n      name: (optional)\n      replaces: (optional)\n       - name: (optional)\n      unit: <see below: required>\n      requests_per_unit: <see below: required>\n    shadow_mode: (optional)\n    detailed_metric: (optional)\n    descriptors: (optional block)\n      - ... (nested repetition of above)\n```\n\nEach descriptor in a descriptor list must have a key. It can also optionally have a value to enable a more specific\nmatch. The \"rate_limit\" block is optional and if present sets up an actual rate limit rule. See below for how the\nrule is defined. If the rate limit is not present and there are no nested descriptors, then the descriptor is\neffectively whitelisted. Otherwise, nested descriptors allow more complex matching and rate limiting scenarios.\n\n### Rate limit definition\n\n```yaml\nrate_limit:\n  unit: <second, minute, hour, day>\n  requests_per_unit: <uint>\n```\n\nThe rate limit block specifies the actual rate limit that will be used when there is a match.\nCurrently the service supports per second, minute, hour, and day limits. More types of limits may be added in the\nfuture based on user demand.\n\n### Replaces\n\nThe replaces key indicates that this descriptor will replace the configuration set by another descriptor.\n\nIf there is a rule being evaluated, and multiple descriptors can apply, the replaces descriptor will drop evaluation of\nthe descriptor which it is replacing.\n\nTo enable this, any descriptor which should potentially be replaced by another should have a name keyword in the\nrate_limit section, and any descriptor which should potentially replace the original descriptor should have a name\nkeyword in its respective replaces section. Whenever limits match to both rules, only the rule which replaces the\noriginal will take effect, and the limit of the original will not be changed after evaluation.\n\nFor example, let's say you have a bunch of endpoints and each is classified under read or write, with read having a\ncertain limit and write having another. Each user has a certain limit for both endpoints. However, let's say that you\nwant to increase a user's limit to a single read endpoint. The only option without using replaces would be to increase\ntheir limit for the read category. The replaces keyword allows increasing the limit of a single endpoint in this case.\n\n### ShadowMode\n\nA shadow_mode key in a rule indicates that whatever the outcome of the evaluation of the rule, the end-result will always be \"OK\".\n\nWhen a block is in ShadowMode all functions of the rate limiting service are executed as normal, with cache-lookup and statistics\n\nAn additional statistic is added to keep track of how many times a key with \"shadow_mode\" has overridden result.\n\nThere is also a Global Shadow Mode\n\n### Including detailed metrics for unspecified values\n\nSetting the `detailed_metric: true` for a descriptor will extend the metrics that are produced. Normally a descriptor that matches a value that is not explicitly listed in the configuration will from a metrics point-of-view be rolled-up into the base entry. This can be problematic if you want to have those details available for analysis.\n\nNB! This should only be enabled in situations where the potentially large cardinality of metrics that this can lead to is acceptable.\n\n### Examples\n\n#### Example 1\n\nLet's start with a simple example:\n\n```yaml\ndomain: mongo_cps\ndescriptors:\n  - key: database\n    value: users\n    rate_limit:\n      unit: second\n      requests_per_unit: 500\n\n  - key: database\n    value: default\n    rate_limit:\n      unit: second\n      requests_per_unit: 500\n```\n\nIn the configuration above\nthe domain is \"mongo_cps\" and we setup 2 different rate limits in the top level descriptor list. Each of the limits\nhave the same key (\"database\"). They have a different value (\"users\", and \"default\"), and each of them setup a 500\nrequest per second rate limit.\n\n#### Example 2\n\nA slightly more complex example:\n\n```yaml\ndomain: messaging\ndescriptors:\n  # Only allow 5 marketing messages a day\n  - key: message_type\n    value: marketing\n    descriptors:\n      - key: to_number\n        rate_limit:\n          unit: day\n          requests_per_unit: 5\n\n  # Only allow 100 messages a day to any unique phone number\n  - key: to_number\n    rate_limit:\n      unit: day\n      requests_per_unit: 100\n```\n\nIn the preceding example, the domain is \"messaging\" and we setup two different scenarios that illustrate more\ncomplex functionality. First, we want to limit on marketing messages to a specific number. To enable this, we make\nuse of _nested descriptor lists._ The top level descriptor is (\"message_type\", \"marketing\"). However this descriptor\ndoes not have a limit assigned so it's just a placeholder. Contained within this entry we have another descriptor list\nthat includes an entry with key \"to_number\". However, notice that no value is provided. This means that the service\nwill match against any value supplied for \"to_number\" and generate a unique limit. Thus, (\"message_type\", \"marketing\"),\n(\"to_number\", \"2061111111\") and (\"message_type\", \"marketing\"),(\"to_number\", \"2062222222\") will each get 5 requests\nper day.\n\nThe configuration also sets up another rule without a value. This one creates an overall limit for messages sent to\nany particular number during a 1 day period. Thus, (\"to_number\", \"2061111111\") and (\"to_number\", \"2062222222\") both\nget 100 requests per day.\n\nWhen calling the rate limit service, the client can specify _multiple descriptors_ to limit on in a single call. This\nlimits round trips and allows limiting on aggregate rule definitions. For example, using the preceding configuration,\nthe client could send this complete request (in pseudo IDL):\n\n```\nRateLimitRequest:\n  domain: messaging\n  descriptor: (\"message_type\", \"marketing\"),(\"to_number\", \"2061111111\")\n  descriptor: (\"to_number\", \"2061111111\")\n```\n\nAnd the service will rate limit against _all_ matching rules and return an aggregate result; a logical OR of all\nthe individual rate limit decisions.\n\n#### Example 3\n\nAn example to illustrate matching order.\n\n```yaml\ndomain: edge_proxy_per_ip\ndescriptors:\n  - key: remote_address\n    rate_limit:\n      unit: second\n      requests_per_unit: 10\n\n  # Black list IP\n  - key: remote_address\n    value: 50.0.0.5\n    rate_limit:\n      unit: second\n      requests_per_unit: 0\n```\n\nIn the preceding example, we setup a generic rate limit for individual IP addresses. The architecture's edge proxy can\nbe configured to make a rate limit service call with the descriptor `(\"remote_address\", \"50.0.0.1\")` for example. This IP would\nget 10 requests per second as\nwould any other IP. However, the configuration also contains a second configuration that explicitly defines a\nvalue along with the same key.\nIf the descriptor `(\"remote_address\", \"50.0.0.5\")` is received, the service\nwill _attempt the most specific match possible_. This means\nthe most specific descriptor at the same level as your request. Thus, key/value is always attempted as a match before just key.\n\n#### Example 4\n\nThe Ratelimit service matches requests to configuration entries with the same level, i.e\nsame number of tuples in the request's descriptor as nested levels of descriptors\nin the configuration file. For instance, the following request:\n\n```\nRateLimitRequest:\n  domain: example4\n  descriptor: (\"key\", \"value\"),(\"subkey\", \"subvalue\")\n```\n\nWould **not** match the following configuration. Even though the first descriptor in\nthe request matches the 1st level descriptor in the configuration, the request has\ntwo tuples in the descriptor.\n\n```yaml\ndomain: example4\ndescriptors:\n  - key: key\n    value: value\n    rate_limit:\n      requests_per_unit: 300\n      unit: second\n```\n\nHowever, it would match the following configuration:\n\n```yaml\ndomain: example4\ndescriptors:\n  - key: key\n    value: value\n    descriptors:\n      - key: subkey\n        rate_limit:\n          requests_per_unit: 300\n          unit: second\n```\n\n#### Example 5\n\nWe can also define unlimited rate limit descriptors:\n\n```yaml\ndomain: internal\ndescriptors:\n  - key: ldap\n    rate_limit:\n      unlimited: true\n\n  - key: azure\n    rate_limit:\n      unit: minute\n      requests_per_unit: 100\n```\n\nFor an unlimited descriptor, the request will not be sent to the underlying cache (Redis/Memcached), but will be quickly returned locally by the ratelimit instance.\nThis can be useful for collecting statistics, or if one wants to define a descriptor that has no limit but the client wants to distinguish between such descriptor and one that does not exist.\n\nThe return value for unlimited descriptors will be an OK status code with the LimitRemaining field set to MaxUint32 value.\n\n#### Example 6\n\nA rule using shadow_mode is useful for soft-launching rate limiting. In this example\n\n```\nRateLimitRequest:\n  domain: example6\n  descriptor: (\"service\", \"auth-service\"),(\"user\", \"user-a\")\n```\n\n`user-a` of the `auth-service` would not get rate-limited regardless of the rate of requests, there would however be statistics related to the breach of the configured limit of 10 req / sec.\n\n`user-b` would be limited to 20 req / sec however.\n\n```yaml\ndomain: example6\ndescriptors:\n  - key: service\n    descriptors:\n      - key: user\n        value: user-a\n        rate_limit:\n          requests_per_unit: 10\n          unit: second\n        shadow_mode: true\n      - key: user\n        value: user-b\n        rate_limit:\n          requests_per_unit: 20\n          unit: second\n```\n\n#### Example 7\n\nWhen the replaces keyword is used, that limit will replace any limit which has the name being replaced as its name, and\nthe original descriptor's limit will not be affected.\n\nIn the example below, the following limits will apply:\n\n```\n(key_1, value_1), (user, bkthomps): 5 / sec\n(key_2, value_2), (user, bkthomps): 10 / sec\n(key_1, value_1), (key_2, value_2), (user, bkthomps): 10 / sec since the (key_1, value_1), (user, bkthomps) rule was replaced and this will not affect the 5 / sec limit that would take effect with (key_2, value_2), (user, bkthomps)\n```\n\n```yaml\ndomain: example7\ndescriptors:\n  - key: key_1\n    value: value_1\n    descriptors:\n      - key: user\n        value: bkthomps\n        rate_limit:\n          name: specific_limit\n          requests_per_unit: 5\n          unit: second\n  - key: key_2\n    value: value_2\n    descriptors:\n      - key: user\n        value: bkthomps\n        rate_limit:\n          replaces:\n            - name: specific_limit\n          requests_per_unit: 10\n          unit: second\n```\n\n#### Example 8\n\nIn this example we demonstrate how a descriptor without a specified value is configured to override the default behavior and include the matched-value in the metrics.\n\nRate limiting configuration and tracking works as normally\n\n```\n(key_1, unspecified_value): 10 / sec\n(key_1, unspecified_value2): 10 / sec\n(key_1, value_1): 20 / sec\n```\n\n```yaml\ndomain: example8\ndescriptors:\n  - key: key1\n    detailed_metric: true\n    rate_limit:\n      unit: minute\n      requests_per_unit: 10\n  - key: key1\n    value: value1\n    rate_limit:\n      unit: minute\n      requests_per_unit: 20\n```\n\nThe metrics keys will be the following:\n\n\"key1_unspecified_value\"\n\"key1_unspecified_value2\"\n\"key1_value1\"\n\nrather than the normal\n\"key1\"\n\"key1_value1\"\n\n#### Example 9\n\nValue supports wildcard matching to apply rate-limit for nested endpoints:\n\n```\n(key_1, value_1): 20 / sec\n(key_1, value_2): 20 / sec\n```\n\n```yaml\ndomain: example9\ndescriptors:\n  - key: key1\n    value: value*\n    rate_limit:\n      unit: minute\n      requests_per_unit: 20\n```\n\n## Loading Configuration\n\nRate limit service supports following configuration loading methods. You can define which methods to use by configuring environment variable `CONFIG_TYPE`.\n\n| Config Loading Method                                                             | Value for Environment Variable `CONFIG_TYPE` |\n| --------------------------------------------------------------------------------- | -------------------------------------------- |\n| [File Based Configuration Loading](#file-based-configuration-loading)             | `FILE` (Default)                             |\n| [xDS Server Based Configuration Loading](#xds-server-based-configuration-loading) | `GRPC_XDS_SOTW`                              |\n\nWhen the environment variable `FORCE_START_WITHOUT_INITIAL_CONFIG` set to `false`, the Rate limit service will wait for initial rate limit configuration before\nstarting the server (gRPC, Rest server endpoints). When set to `true` the server will start even without initial configuration.\n\n### File Based Configuration Loading\n\nThe Ratelimit service uses a library written by Lyft called [goruntime](https://github.com/lyft/goruntime) to do configuration loading. Goruntime monitors\na designated path, and watches for symlink swaps to files in the directory tree to reload configuration files.\n\nThe path to watch can be configured via the [settings](https://github.com/envoyproxy/ratelimit/blob/master/src/settings/settings.go)\npackage with the following environment variables:\n\n```\nRUNTIME_ROOT default:\"/srv/runtime_data/current\"\nRUNTIME_SUBDIRECTORY\nRUNTIME_APPDIRECTORY default:\"config\"\nRUNTIME_IGNOREDOTFILES default:\"false\"\n```\n\n**Configuration files are loaded from RUNTIME_ROOT/RUNTIME_SUBDIRECTORY/RUNTIME_APPDIRECTORY/\\*.yaml**\n\nThere are two methods for triggering a configuration reload:\n\n1. Symlink RUNTIME_ROOT to a different directory.\n2. Update the contents inside `RUNTIME_ROOT/RUNTIME_SUBDIRECTORY/RUNTIME_APPDIRECTORY/` directly.\n\nThe former is the default behavior. To use the latter method, set the `RUNTIME_WATCH_ROOT` environment variable to `false`.\n\nThe following filesystem operations on configuration files inside `RUNTIME_ROOT/RUNTIME_SUBDIRECTORY/RUNTIME_APPDIRECTORY/` will force a reload of all config files:\n\n- Write\n- Create\n- Chmod\n- Remove\n\nFor more information on how runtime works you can read its [README](https://github.com/lyft/goruntime).\n\nBy default it is not possible to define multiple configuration files within `RUNTIME_SUBDIRECTORY` referencing the same domain.\nTo enable this behavior set `MERGE_DOMAIN_CONFIG` to `true`.\n\n### xDS Management Server Based Configuration Loading\n\nxDS Management Server is a gRPC server which implements the [Aggregated Discovery Service (ADS)](https://github.com/envoyproxy/data-plane-api/blob/97b6dae39046f7da1331a4dc57830d20e842fc26/envoy/service/discovery/v3/ads.proto).\nThe xDS Management server serves [Discovery Response](https://github.com/envoyproxy/data-plane-api/blob/97b6dae39046f7da1331a4dc57830d20e842fc26/envoy/service/discovery/v3/discovery.proto#L69) with [Ratelimit Configuration Resources](api/ratelimit/config/ratelimit/v3/rls_conf.proto)\nand with Type URL `\"type.googleapis.com/ratelimit.config.ratelimit.v3.RateLimitConfig\"`.\n\nThe xDS client in the Rate limit service configure Rate limit service with the provided configuration.\nIn case of connection failures, the xDS Client retries the connection to the xDS server with exponential backoff and the backoff parameters are configurable.\n\n1. `XDS_CLIENT_BACKOFF_JITTER`: set to `\"true\"` to add jitter to the exponential backoff.\n2. `XDS_CLIENT_BACKOFF_INITIAL_INTERVAL`: The base amount of time the xDS client waits before retrying the connection after failure. Default: \"10s\"\n3. `XDS_CLIENT_BACKOFF_MAX_INTERVAL`: The max backoff interval is the upper limit on the amount of time the xDS client will wait between retries. After reaching the max backoff interval, the next retries will continue using the max interval. Default: \"60s\"\n4. `XDS_CLIENT_BACKOFF_RANDOM_FACTOR`: This is a factor by which the initial interval is multiplied to calculate the next backoff interval. Default: \"0.5\"\n\nThe followings are the gRPC connection options.\n\n1. `XDS_CLIENT_MAX_MSG_SIZE_IN_BYTES`: The maximum message size in bytes that the xDS client can receive.\n\nFor more information on xDS protocol please refer to the [envoy proxy documentation](https://www.envoyproxy.io/docs/envoy/latest/api-docs/xds_protocol).\n\nYou can refer to [the sample xDS configuration management server](examples/xds-sotw-config-server/README.md).\n\nThe xDS server for listening for configuration can be set via [settings](https://github.com/envoyproxy/ratelimit/blob/master/src/settings/settings.go)\npackage with the following environment variables:\n\n```\nCONFIG_GRPC_XDS_NODE_ID default:\"default\"\nCONFIG_GRPC_XDS_SERVER_URL default:\"localhost:18000\"\nCONFIG_GRPC_XDS_SERVER_CONNECT_RETRY_INTERVAL default:\"3s\"\n```\n\nAs well Ratelimit supports TLS connections, these can be configured using the following environment variables:\n\n1. `CONFIG_GRPC_XDS_SERVER_USE_TLS`: set to `\"true\"` to enable a TLS connection with the xDS configuration management server.\n2. `CONFIG_GRPC_XDS_CLIENT_TLS_CERT`, `CONFIG_GRPC_XDS_CLIENT_TLS_KEY`, and `CONFIG_GRPC_XDS_SERVER_TLS_CACERT` to provides files to specify a TLS connection configuration to the xDS configuration management server.\n3. `CONFIG_GRPC_XDS_SERVER_TLS_SAN`: (Optional) Override the SAN value to validate from the server certificate.\n\nWhen using xDS you can configure extra headers that will be added to GRPC requests to the xDS Management server.\nExtra headers can be useful for providing additional authorization information. This can be configured using the following environment variable:\n\n`CONFIG_GRPC_XDS_CLIENT_ADDITIONAL_HEADERS` - set to `\"<k1:v1>,<k2:v2>\"` to add multiple headers to GRPC requests.\n\n## Log Format\n\nA centralized log collection system works better with logs in json format. JSON format avoids the need for custom parsing rules.\nThe Ratelimit service produces logs in a text format by default. For Example:\n\n```\ntime=\"2020-09-10T17:22:35Z\" level=debug msg=\"loading domain: messaging\"\ntime=\"2020-09-10T17:22:35Z\" level=debug msg=\"loading descriptor: key=messaging.message_type_marketing\"\ntime=\"2020-09-10T17:22:35Z\" level=debug msg=\"loading descriptor: key=messaging.message_type_marketing.to_number ratelimit={requests_per_unit=5, unit=DAY}\"\ntime=\"2020-09-10T17:22:35Z\" level=debug msg=\"loading descriptor: key=messaging.to_number ratelimit={requests_per_unit=100, unit=DAY}\"\ntime=\"2020-09-10T17:21:55Z\" level=warning msg=\"Listening for debug on ':6070'\"\ntime=\"2020-09-10T17:21:55Z\" level=warning msg=\"Listening for HTTP on ':8080'\"\ntime=\"2020-09-10T17:21:55Z\" level=debug msg=\"waiting for runtime update\"\ntime=\"2020-09-10T17:21:55Z\" level=warning msg=\"Listening for gRPC on ':8081'\"\n```\n\nJSON Log format can be configured using the following environment variables:\n\n```\nLOG_FORMAT=json\n```\n\nOutput example:\n\n```\n{\"@message\":\"loading domain: messaging\",\"@timestamp\":\"2020-09-10T17:22:44.926010192Z\",\"level\":\"debug\"}\n{\"@message\":\"loading descriptor: key=messaging.message_type_marketing\",\"@timestamp\":\"2020-09-10T17:22:44.926019315Z\",\"level\":\"debug\"}\n{\"@message\":\"loading descriptor: key=messaging.message_type_marketing.to_number ratelimit={requests_per_unit=5, unit=DAY}\",\"@timestamp\":\"2020-09-10T17:22:44.926037174Z\",\"level\":\"debug\"}\n{\"@message\":\"loading descriptor: key=messaging.to_number ratelimit={requests_per_unit=100, unit=DAY}\",\"@timestamp\":\"2020-09-10T17:22:44.926048993Z\",\"level\":\"debug\"}\n{\"@message\":\"Listening for debug on ':6070'\",\"@timestamp\":\"2020-09-10T17:22:44.926113905Z\",\"level\":\"warning\"}\n{\"@message\":\"Listening for gRPC on ':8081'\",\"@timestamp\":\"2020-09-10T17:22:44.926182006Z\",\"level\":\"warning\"}\n{\"@message\":\"Listening for HTTP on ':8080'\",\"@timestamp\":\"2020-09-10T17:22:44.926227031Z\",\"level\":\"warning\"}\n{\"@message\":\"waiting for runtime update\",\"@timestamp\":\"2020-09-10T17:22:44.926267808Z\",\"level\":\"debug\"}\n```\n\n## GRPC Keepalive\n\nClient-side GRPC DNS re-resolution in scenarios with auto scaling enabled might not work as expected and the current workaround is to [configure connection keepalive](https://github.com/grpc/grpc/issues/12295#issuecomment-382794204) on server-side.\nThe behavior can be fixed by configuring the following env variables for the ratelimit server:\n\n- `GRPC_MAX_CONNECTION_AGE`: a duration for the maximum amount of time a connection may exist before it will be closed by sending a GoAway. A random jitter of +/-10% will be added to MaxConnectionAge to spread out connection storms.\n- `GRPC_MAX_CONNECTION_AGE_GRACE`: an additive period after MaxConnectionAge after which the connection will be forcibly closed.\n\n## Health-check\n\nHealth check status is determined internally by individual components.\nCurrently, we have three components that determine the overall health status of the rate limit service.\nEach of the individual component's health needs to be healthy for the overall to report healthy.\nSome components may be turned OFF via configurations so overall health is not effected by that component's health status.\n\n- Redis health (Turned ON. Defaults to healthy)\n- Configuration status (Turned OFF unless configured to be ON via `HEALTHY_WITH_AT_LEAST_ONE_CONFIG_LOADED` see below section. Defaults to unhealthy)\n  - If the environment variable is enabled then, it will start in an unhealthy state and become healthy when at least one config is loaded. If we later fail to load any configs, it will go unhealthy again.\n- Sigterm (Turned ON. Defaults to healthy)\n  - Turns unhealthy if receives sigterm signal\n    All components needs to be healthy for overall health to be healthy.\n\n### Health-check configurations\n\nHealth check can be configured to check if rate-limit configurations are loaded using the following environment variable.\n\n```\nHEALTHY_WITH_AT_LEAST_ONE_CONFIG_LOADED default:\"false\"`\n```\n\nIf `HEALTHY_WITH_AT_LEAST_ONE_CONFIG_LOADED` is enabled then health check will start as unhealthy and becomes healthy if\nit detects at least one domain is loaded with the config. If it detects no config again then it will change to unhealthy.\n\n## GRPC server\n\nBy default the ratelimit gRPC server binds to `0.0.0.0:8081`. To change this set\n`GRPC_HOST` and/or `GRPC_PORT`. If you want to run the server on a unix domain\nsocket then set `GRPC_UDS`, e.g. `GRPC_UDS=/<dir>/ratelimit.sock` and leave\n`GRPC_HOST` and `GRPC_PORT` unmodified.\n\n# Request Fields\n\nFor information on the fields of a Ratelimit gRPC request please read the information\non the RateLimitRequest message type in the Ratelimit [proto file.](https://github.com/envoyproxy/envoy/blob/master/api/envoy/service/ratelimit/v3/rls.proto)\n\n# GRPC Client\n\nThe [gRPC client](https://github.com/envoyproxy/ratelimit/blob/master/src/client_cmd/main.go) will interact with ratelimit server and tell you if the requests are over limit.\n\n## Commandline flags\n\n- `-dial_string`: used to specify the address of ratelimit server. It defaults to `localhost:8081`.\n- `-domain`: used to specify the domain.\n- `-descriptors`: used to specify one descriptor. You can pass multiple descriptors like following:\n\n```\ngo run main.go -domain test \\\n-descriptors name=foo,age=14 -descriptors name=bar,age=18\n```\n\n# Global ShadowMode\n\nThere is a global shadow-mode which can make it easier to introduce rate limiting into an existing service landscape. It will override whatever result is returned by the regular rate limiting process.\n\n## Configuration\n\nThe global shadow mode is configured with an environment variable\n\nSetting environment variable `SHADOW_MODE` to `true` will enable the feature.\n\n## Statistics\n\nThere is an additional service-level statistics generated that will increment whenever the global shadow mode has overridden a rate limiting result.\n\n# Statistics\n\nThe rate limit service generates various statistics for each configured rate limit rule that will be useful for end\nusers both for visibility and for setting alarms. Ratelimit uses [gostats](https://github.com/lyft/gostats) as its statistics library. Please refer\nto [gostats' documentation](https://godoc.org/github.com/lyft/gostats) for more information on the library.\n\nStatistics default to using [StatsD](https://github.com/statsd/statsd) and configured via the env vars from [gostats](https://github.com/lyft/gostats).\n\nTo output statistics to stdout instead, set env var `USE_STATSD` to `false`\n\nConfigure statistics output frequency with `STATS_FLUSH_INTERVAL`, where the type is `time.Duration`, e.g. `10s` is the default value.\n\nTo disable statistics entirely, set env var `DISABLE_STATS` to `true`\n\nRate Limit Statistic Path:\n\n```\nratelimit.service.rate_limit.DOMAIN.KEY_VALUE.STAT\n```\n\nDOMAIN:\n\n- As specified in the domain value in the YAML runtime file\n\nKEY_VALUE:\n\n- A combination of the key value\n- Nested descriptors would be suffixed in the stats path\n\nThe default mode is that the value-part is omitted if the rule that matches is a descriptor without a value. Specifying the `detailed_metric` configuration parameter changes this behavior and creates a unique metric even in this situation.\n\nSTAT:\n\n- near_limit: Number of rule hits over the NearLimit ratio threshold (currently 80%) but under the threshold rate.\n- over_limit: Number of rule hits exceeding the threshold rate\n- total_hits: Number of rule hits in total\n- shadow_mode: Number of rule hits where shadow_mode would trigger and override the over_limit result\n\nTo use a custom near_limit ratio threshold, you can specify with `NEAR_LIMIT_RATIO` environment variable. It defaults to `0.8` (0-1 scale). These are examples of generated stats for some configured rate limit rules from the above examples:\n\n```\nratelimit.service.rate_limit.mongo_cps.database_default.over_limit: 0\nratelimit.service.rate_limit.mongo_cps.database_default.total_hits: 2846\nratelimit.service.rate_limit.mongo_cps.database_users.over_limit: 0\nratelimit.service.rate_limit.mongo_cps.database_users.total_hits: 2939\nratelimit.service.rate_limit.messaging.message_type_marketing.to_number.over_limit: 0\nratelimit.service.rate_limit.messaging.message_type_marketing.to_number.total_hits: 0\nratelimit.service.rate_limit.messaging.auth-service.over_limit.total_hits: 1\nratelimit.service.rate_limit.messaging.auth-service.over_limit.over_limit: 1\nratelimit.service.rate_limit.messaging.auth-service.over_limit.shadow_mode: 1\n```\n\n## Statistics options\n\n1. `EXTRA_TAGS`: set to `\"<k1:v1>,<k2:v2>\"` to tag all emitted stats with the provided tags. You might want to tag build commit or release version, for example.\n\n## DogStatsD\n\nTo enable dogstatsd integration set:\n\n1. `USE_DOG_STATSD`: `true` to use [DogStatsD](https://docs.datadoghq.com/developers/dogstatsd/?code-lang=go)\n\ndogstatsd also enables so called `mogrifiers` which can\nconvert from traditional stats tags into a combination of stat name and tags.\n\nTo enable mogrifiers, set a comma-separated list of them in `DOG_STATSD_MOGRIFIERS`.\n\ne.g. `USE_DOG_STATSD_MOGRIFIERS`: `FOO,BAR`\n\nFor each mogrifier, define variables that declare the mogrification\n\n1. `DOG_STATSD_MOGRIFIERS_%s_PATTERN`: The regex pattern to match on\n2. `DOG_STATSD_MOGRIFIERS_%s_NAME`: The name of the metric to emit. Can contain variables.\n3. `DOG_STATSD_MOGRIFIERS_%s_TAGS`: Comma-separated list of tags to emit. Can contain variables.\n\nVariables within mogrifiers are strings such as `$1`, `$2`, `$3` which can be used to reference\na match group from the regex pattern.\n\n### Example\n\nIn the example below we will set mogrifier DOMAIN to adjust\n`some.original.metric.TAG` to `some.original.metric` with tag `domain:TAG`\n\nFirst enable a single mogrifier:\n\n1. `USE_DOG_STATSD_MOGRIFIERS`: `DOMAIN`\n\nThen, declare the rules for the `DOMAIN` modifier:\n\n1. `DOG_STATSD_MOGRIFIER_DOMAIN_PATTERN`: `^some\\.original\\.metric\\.(.*)$`\n2. `DOG_STATSD_MOGRIFIER_DOMAIN_NAME`: `some.original.metric`\n3. `DOG_STATSD_MOGRIFIER_DOMAIN_TAGS`: `domain:$1`\n\n### Continued example:\n\nLet's also set another mogrifier which outputs the hits metrics with a domain and descriptor tag\n\nFirst, enable an extra mogrifier:\n\n1. `USE_DOG_STATSD_MOGRIFIERS`: `DOMAIN,HITS`\n\nThen, declare additional rules for the `DESCRIPTOR` mogrifier\n\n1. `DOG_STATSD_MOGRIFIER_HITS_PATTERN`: `^ratelimit\\.service\\.rate_limit\\.([^.]+)\\.(.*)\\.([^.]+)$`\n2. `DOG_STATSD_MOGRIFIER_HITS_NAME`: `ratelimit.service.rate_limit.$3`\n3. `DOG_STATSD_MOGRIFIER_HITS_TAGS`: `domain:$1,descriptor:$2`\n\n## Prometheus\n\nTo enable Prometheus integration set:\n\n1. `USE_PROMETHEUS`: `true` to use [Prometheus](https://prometheus.io/)\n2. `PROMETHEUS_ADDR`: The port to listen on for Prometheus metrics. Defaults to `:9090`\n3. `PROMETHEUS_PATH`: The path to listen on for Prometheus metrics. Defaults to `/metrics`\n4. `PROMETHEUS_MAPPER_YAML`: The path to the YAML file that defines the mapping from statsd to prometheus metrics.\n\nDefine the mapping from statsd to prometheus metrics in a YAML file.\nFind more information about the mapping in the [Metric Mapping and Configuration](https://github.com/prometheus/statsd_exporter?tab=readme-ov-file#metric-mapping-and-configuration).\nThe default setting is:\n\n```yaml\nmappings: # Requires statsd exporter >= v0.6.0 since it uses the \"drop\" action.\n  - match: \"ratelimit.service.rate_limit.*.*.near_limit\"\n    name: \"ratelimit_service_rate_limit_near_limit\"\n    timer_type: \"histogram\"\n    labels:\n      domain: \"$1\"\n      key1: \"$2\"\n  - match: \"ratelimit.service.rate_limit.*.*.over_limit\"\n    name: \"ratelimit_service_rate_limit_over_limit\"\n    timer_type: \"histogram\"\n    labels:\n      domain: \"$1\"\n      key1: \"$2\"\n  - match: \"ratelimit.service.rate_limit.*.*.total_hits\"\n    name: \"ratelimit_service_rate_limit_total_hits\"\n    timer_type: \"histogram\"\n    labels:\n      domain: \"$1\"\n      key1: \"$2\"\n  - match: \"ratelimit.service.rate_limit.*.*.within_limit\"\n    name: \"ratelimit_service_rate_limit_within_limit\"\n    timer_type: \"histogram\"\n    labels:\n      domain: \"$1\"\n      key1: \"$2\"\n\n  - match: \"ratelimit.service.rate_limit.*.*.*.near_limit\"\n    name: \"ratelimit_service_rate_limit_near_limit\"\n    timer_type: \"histogram\"\n    labels:\n      domain: \"$1\"\n      key1: \"$2\"\n      key2: \"$3\"\n  - match: \"ratelimit.service.rate_limit.*.*.*.over_limit\"\n    name: \"ratelimit_service_rate_limit_over_limit\"\n    timer_type: \"histogram\"\n    labels:\n      domain: \"$1\"\n      key1: \"$2\"\n      key2: \"$3\"\n  - match: \"ratelimit.service.rate_limit.*.*.*.total_hits\"\n    name: \"ratelimit_service_rate_limit_total_hits\"\n    timer_type: \"histogram\"\n    labels:\n      domain: \"$1\"\n      key1: \"$2\"\n      key2: \"$3\"\n  - match: \"ratelimit.service.rate_limit.*.*.*.within_limit\"\n    name: \"ratelimit_service_rate_limit_within_limit\"\n    timer_type: \"histogram\"\n    labels:\n      domain: \"$1\"\n      key1: \"$2\"\n      key2: \"$3\"\n\n  - match: \"ratelimit.service.call.should_rate_limit.*\"\n    name: \"ratelimit_service_should_rate_limit_error\"\n    match_metric_type: counter\n    labels:\n      err_type: \"$1\"\n\n  - match: \"ratelimit_server.*.total_requests\"\n    name: \"ratelimit_service_total_requests\"\n    match_metric_type: counter\n    labels:\n      grpc_method: \"$1\"\n\n  - match: \"ratelimit_server.*.response_time\"\n    name: \"ratelimit_service_response_time_seconds\"\n    timer_type: histogram\n    labels:\n      grpc_method: \"$1\"\n\n  - match: \"ratelimit.service.config_load_success\"\n    name: \"ratelimit_service_config_load_success\"\n    match_metric_type: counter\n  - match: \"ratelimit.service.config_load_error\"\n    name: \"ratelimit_service_config_load_error\"\n    match_metric_type: counter\n\n  - match: \"ratelimit.service.rate_limit.*.*.*.shadow_mode\"\n    name: \"ratelimit_service_rate_limit_shadow_mode\"\n    timer_type: \"histogram\"\n    labels:\n      domain: \"$1\"\n      key1: \"$2\"\n      key2: \"$3\"\n```\n\n# HTTP Port\n\nThe ratelimit service listens to HTTP 1.1 (by default on port 8080) with two endpoints:\n\n1. /healthcheck → return a 200 if this service is healthy\n1. /json → HTTP 1.1 endpoint for interacting with ratelimit service\n\n## /json endpoint\n\nTakes an HTTP POST with a JSON body of the form e.g.\n\n```json\n{\n  \"domain\": \"dummy\",\n  \"descriptors\": [\n    { \"entries\": [{ \"key\": \"one_per_day\", \"value\": \"something\" }] }\n  ]\n}\n```\n\nThe service will return an http 200 if this request is allowed (if no ratelimits exceeded) or 429 if one or more\nratelimits were exceeded.\n\nThe response is a RateLimitResponse encoded with\n[proto3-to-json mapping](https://developers.google.com/protocol-buffers/docs/proto3#json):\n\n```json\n{\n  \"overallCode\": \"OVER_LIMIT\",\n  \"statuses\": [\n    {\n      \"code\": \"OVER_LIMIT\",\n      \"currentLimit\": {\n        \"requestsPerUnit\": 1,\n        \"unit\": \"MINUTE\"\n      }\n    },\n    {\n      \"code\": \"OK\",\n      \"currentLimit\": {\n        \"requestsPerUnit\": 2,\n        \"unit\": \"MINUTE\"\n      },\n      \"limitRemaining\": 1\n    }\n  ]\n}\n```\n\n# Debug Port\n\nThe debug port can be used to interact with the running process.\n\n```\n$ curl 0:6070/\n/debug/pprof/: root of various pprof endpoints. hit for help.\n/rlconfig: print out the currently loaded configuration for debugging\n/stats: print out stats\n```\n\nYou can specify the debug server address with the `DEBUG_HOST` and `DEBUG_PORT` environment variables. They currently default to `0.0.0.0` and `6070` respectively.\n\n# Local Cache\n\nRatelimit optionally uses [freecache](https://github.com/coocood/freecache) as its local caching layer, which stores the over-the-limit cache keys, and thus avoids reading the\nredis cache again for the already over-the-limit keys. The local cache size can be configured via `LocalCacheSizeInBytes` in the [settings](https://github.com/envoyproxy/ratelimit/blob/master/src/settings/settings.go).\nIf `LocalCacheSizeInBytes` is 0, local cache is disabled.\n\n# Redis\n\nRatelimit uses Redis as its caching layer. Ratelimit supports two operation modes:\n\n1. One Redis server for all limits.\n1. Two Redis instances: one for per second limits and another one for all other limits.\n\nAs well Ratelimit supports TLS connections and authentication. These can be configured using the following environment variables:\n\n1. `REDIS_TLS` & `REDIS_PERSECOND_TLS`: set to `\"true\"` to enable a TLS connection for the specific connection type.\n1. `REDIS_TLS_CLIENT_CERT`, `REDIS_TLS_CLIENT_KEY`, and `REDIS_TLS_CACERT` to provides files to specify a TLS connection configuration to Redis server that requires client certificate verification. (This is effective when `REDIS_TLS` or `REDIS_PERSECOND_TLS` is set to to `\"true\"`).\n1. `REDIS_TLS_SKIP_HOSTNAME_VERIFICATION` set to `\"true\"` will skip hostname verification in environments where the certificate has an invalid hostname, such as GCP Memorystore.\n1. `REDIS_AUTH` & `REDIS_PERSECOND_AUTH`: set to `\"password\"` to enable password-only authentication to the redis host.\n1. `REDIS_AUTH` & `REDIS_PERSECOND_AUTH`: set to `\"username:password\"` to enable username-password authentication to the redis host.\n1. `CACHE_KEY_PREFIX`: a string to prepend to all cache keys\n\nFor controlling the behavior of cache key incrementation when any of them is already over the limit, you can use the following configuration:\n\n1. `STOP_CACHE_KEY_INCREMENT_WHEN_OVERLIMIT`: Set this configuration to `true` to disallow key incrementation when one of the keys is already over the limit.\n\n`STOP_CACHE_KEY_INCREMENT_WHEN_OVERLIMIT` is useful when multiple descriptors are included in a single request. Setting this to `true` can prevent the incrementation of other descriptors' counters if any of the descriptors is already over the limit.\n\n## Redis type\n\nRatelimit supports different types of redis deployments:\n\n1. Single instance (default): Talk to a single instance of redis, or a redis proxy (e.g. https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/other_protocols/redis)\n1. Sentinel: Talk to a redis deployment with sentinel instances (see https://redis.io/topics/sentinel)\n1. Cluster: Talk to a redis in cluster mode (see https://redis.io/topics/cluster-spec)\n\nThe deployment type can be specified with the `REDIS_TYPE` / `REDIS_PERSECOND_TYPE` environment variables. Depending on the type defined, the `REDIS_URL` and `REDIS_PERSECOND_URL` are expected to have the following formats:\n\n1. \"single\": Depending on the socket type defined, either a single hostname:port pair or a unix domain socket reference.\n1. \"sentinel\": A comma separated list with the first string as the master name of the sentinel cluster followed by hostname:port pairs. The list size should be >= 2. The first item is the name of the master and the rest are the sentinels.\n1. \"cluster\": A comma separated list of hostname:port pairs with all the nodes in the cluster.\n\n## Pipelining\n\nBy default, for each request, ratelimit will pick up a connection from pool, write multiple redis commands in a single write then reads their responses in a single read. This reduces network delay.\n\nFor high throughput scenarios, ratelimit also support [implicit pipelining](https://github.com/mediocregopher/radix/blob/v3.5.1/pool.go#L238) . It can be configured using the following environment variables:\n\n1. `REDIS_PIPELINE_WINDOW` & `REDIS_PERSECOND_PIPELINE_WINDOW`: sets the duration after which internal pipelines will be flushed.\n   If window is zero then implicit pipelining will be disabled.\n1. `REDIS_PIPELINE_LIMIT` & `REDIS_PERSECOND_PIPELINE_LIMIT`: sets maximum number of commands that can be pipelined before flushing.\n   If limit is zero then no limit will be used and pipelines will only be limited by the specified time window.\n\n`implicit pipelining` is disabled by default. To enable it, you can use default values [used by radix](https://github.com/mediocregopher/radix/blob/v3.5.1/pool.go#L278) and tune for the optimal value.\n\n## One Redis Instance\n\nTo configure one Redis instance use the following environment variables:\n\n1. `REDIS_SOCKET_TYPE`\n1. `REDIS_URL`\n1. `REDIS_POOL_SIZE`\n1. `REDIS_TYPE` (optional)\n\nThis setup will use the same Redis server for all limits.\n\n## Two Redis Instances\n\nTo configure two Redis instances use the following environment variables:\n\n1. `REDIS_SOCKET_TYPE`\n1. `REDIS_URL`\n1. `REDIS_POOL_SIZE`\n1. `REDIS_PERSECOND`: set this to `\"true\"`.\n1. `REDIS_PERSECOND_SOCKET_TYPE`\n1. `REDIS_PERSECOND_URL`\n1. `REDIS_PERSECOND_POOL_SIZE`\n1. `REDIS_PERSECOND_TYPE` (optional)\n\nThis setup will use the Redis server configured with the `_PERSECOND_` vars for\nper second limits, and the other Redis server for all other limits.\n\n## Health Checking for Redis Active Connection\n\nTo configure whether to return health check failure if there is no active redis connection\n\n1. `REDIS_HEALTH_CHECK_ACTIVE_CONNECTION` : (default is \"false\")\n\n# Memcache\n\nExperimental Memcache support has been added as an alternative to Redis in v1.5.\n\nTo configure a Memcache instance use the following environment variables instead of the Redis variables:\n\n1. `MEMCACHE_HOST_PORT=`: a comma separated list of hostname:port pairs for memcache nodes (mutually exclusive with `MEMCACHE_SRV`)\n1. `MEMCACHE_SRV=`: an SRV record to lookup hosts from (mutually exclusive with `MEMCACHE_HOST_PORT`)\n1. `MEMCACHE_SRV_REFRESH=0`: refresh the list of hosts every n seconds, if 0 no refreshing will happen, supports duration suffixes: \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n1. `BACKEND_TYPE=memcache`\n1. `CACHE_KEY_PREFIX`: a string to prepend to all cache keys\n1. `MEMCACHE_MAX_IDLE_CONNS=2`: the maximum number of idle TCP connections per memcache node, `2` is the default of the underlying library\n1. `MEMCACHE_TLS`: set to `\"true\"` to connect to the server with TLS.\n1. `MEMCACHE_TLS_CLIENT_CERT`, `MEMCACHE_TLS_CLIENT_KEY`, and `MEMCACHE_TLS_CACERT` to provide files that parameterize the memcache client TLS connection configuration.\n1. `MEMCACHE_TLS_SKIP_HOSTNAME_VERIFICATION` set to `\"true\"` will skip hostname verification in environments where the certificate has an invalid hostname.\n\nWith memcache mode increments will happen asynchronously, so it's technically possible for\na client to exceed quota briefly if multiple requests happen at exactly the same time.\n\nNote that Memcache has a max key length of 250 characters, so operations referencing very long\ndescriptors will fail. Descriptors sent to Memcache should not contain whitespaces or control characters.\n\nWhen using multiple memcache nodes in `MEMCACHE_HOST_PORT=`, one should provide the identical list of memcache nodes\nto all ratelimiter instances to ensure that a particular cache key is always hashed to the same memcache node.\n\n# Custom headers\n\nRatelimit service can be configured to return custom headers with the ratelimit information. It will populate the response_headers_to_add as part of the [RateLimitResponse](https://www.envoyproxy.io/docs/envoy/latest/api-v3/service/ratelimit/v3/rls.proto#service-ratelimit-v3-ratelimitresponse).\n\nThe following environment variables control the custom response feature:\n\n1. `LIMIT_RESPONSE_HEADERS_ENABLED` - Enables the custom response headers\n1. `LIMIT_LIMIT_HEADER` - The default value is \"RateLimit-Limit\", setting the environment variable will specify an alternative header name\n1. `LIMIT_REMAINING_HEADER` - The default value is \"RateLimit-Remaining\", setting the environment variable will specify an alternative header name\n1. `LIMIT_RESET_HEADER` - The default value is \"RateLimit-Reset\", setting the environment variable will specify an alternative header name\n\n# Tracing\n\nRatelimit service supports exporting spans in OLTP format. See [OpenTelemetry](https://opentelemetry.io/) for more information.\n\nThe following environment variables control the tracing feature:\n\n1. `TRACING_ENABLED` - Enables the tracing feature. Only \"true\" and \"false\"(default) are allowed in this field.\n1. `TRACING_EXPORTER_PROTOCOL` - Controls the protocol of exporter in tracing feature. Only \"http\"(default) and \"grpc\" are allowed in this field.\n1. `TRACING_SERVICE_NAME` - Controls the service name appears in tracing span. The default value is \"RateLimit\".\n1. `TRACING_SERVICE_NAMESPACE` - Controls the service namespace appears in tracing span. The default value is empty.\n1. `TRACING_SERVICE_INSTANCE_ID` - Controls the service instance id appears in tracing span. It is recommended to put the pod name or container name in this field. The default value is a randomly generated version 4 uuid if unspecified.\n1. Other fields in [OTLP Exporter Documentation](https://github.com/open-telemetry/opentelemetry-specification/blob/v1.8.0/specification/protocol/exporter.md). These section needs to be correctly configured in order to enable the exporter to export span to the correct destination.\n1. `TRACING_SAMPLING_RATE` - Controls the sampling rate, defaults to 1 which means always sample. Valid range: 0.0-1.0. For high volume services, adjusting the sampling rate is recommended.\n\nYou may use the following commands to quickly setup a openTelemetry collector together with a Jaeger all-in-one binary for quickstart:\n\n```bash\ndocker run --name otlp -d -p 4318 -p 4317 -v examples/otlp-collector:/tmp/otlp-collector otel/opentelemetry-collector:0.48.0 -- --config /tmp/otlp-collector/config.yaml\notelcol-contrib --config examples/otlp-collector/config.yaml\n\ndocker run -d --name jaeger -p 16686:16686 -p 14250:14250 jaegertracing/all-in-one:1.33\n```\n\n# TLS\n\nRatelimit supports TLS for it's gRPC endpoint.\n\nThe following environment variables control the TLS feature:\n\n1. `GRPC_SERVER_USE_TLS` - Enables gRPC connections to server over TLS\n1. `GRPC_SERVER_TLS_CERT` - Path to the file containing the server cert chain\n1. `GRPC_SERVER_TLS_KEY` - Path to the file containing the server private key\n\nRatelimit uses [goruntime](https://github.com/lyft/goruntime) to watch the TLS certificate and key and will hot reload them on changes.\n\n# mTLS\n\nRatelimit supports mTLS when Envoy sends requests to the service.\n\nTLS must be enabled on the gRPC endpoint in order for mTLS to work see [TLS](#TLS).\n\nThe following variables can be set to enable mTLS on the Ratelimit service.\n\n1. `GRPC_CLIENT_TLS_CACERT` - Path to the file containing the client CA certificate.\n1. `GRPC_CLIENT_TLS_SAN` - (Optional) DNS Name to validate from the client cert during mTLS auth\n\nIn the envoy config use, add the `transport_socket` section to the ratelimit service cluster config\n\n```yaml\n\"name\": \"ratelimit\"\n\"transport_socket\":\n  \"name\": \"envoy.transport_sockets.tls\"\n  \"typed_config\":\n    \"@type\": \"type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext\"\n    \"common_tls_context\":\n      \"tls_certificates\":\n        - \"certificate_chain\":\n            \"filename\": \"/opt/envoy/tls/ratelimit-client-cert.pem\"\n          \"private_key\":\n            \"filename\": \"/opt/envoy/tls/ratelimit-client-key.pem\"\n      \"validation_context\":\n        \"match_subject_alt_names\":\n          - \"exact\": \"ratelimit.server.dnsname\"\n        \"trusted_ca\":\n          \"filename\": \"/opt/envoy/tls/ratelimit-server-ca.pem\"\n```\n\n# Contact\n\n- [envoy-announce](https://groups.google.com/forum/#!forum/envoy-announce): Low frequency mailing\n  list where we will email announcements only.\n- [envoy-users](https://groups.google.com/forum/#!forum/envoy-users): General user discussion.\n  Please add `[ratelimit]` to the email subject.\n- [envoy-dev](https://groups.google.com/forum/#!forum/envoy-dev): Envoy developer discussion (APIs,\n  feature design, etc.). Please add `[ratelimit]` to the email subject.\n- [Slack](https://envoyproxy.slack.com/): Slack, to get invited go [here](http://envoyslack.cncf.io).\n  We have the IRC/XMPP gateways enabled if you prefer either of those. Once an account is created,\n  connection instructions for IRC/XMPP can be found [here](https://envoyproxy.slack.com/account/gateways).\n  The `#ratelimit-users` channel is used for discussions about the ratelimit service.\n"
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose-example.yml",
          "type": "blob",
          "size": 2.609375,
          "content": "version: \"3\"\nservices:\n  redis:\n    image: redis:alpine\n    expose:\n      - 6379\n    ports:\n      - 6379:6379\n    networks:\n      - ratelimit-network\n\n  statsd:\n    image: prom/statsd-exporter:v0.18.0\n    entrypoint: /bin/statsd_exporter\n    command:\n      - \"--statsd.mapping-config=/etc/statsd-exporter/conf.yaml\"\n    expose:\n      - 9125\n      - 9102\n    ports:\n      - 9125:9125\n      - 9102:9102 # Visit http://localhost:9102/metrics to see metrics in Prometheus format\n    networks:\n      - ratelimit-network\n    volumes:\n      - ./examples/prom-statsd-exporter/conf.yaml:/etc/statsd-exporter/conf.yaml\n\n  ratelimit:\n    image: envoyproxy/ratelimit:master\n    command: /bin/ratelimit\n    ports:\n      - 8080:8080\n      - 8081:8081\n      - 6070:6070\n    depends_on:\n      - redis\n      - statsd\n    networks:\n      - ratelimit-network\n    volumes:\n      - ./examples/ratelimit/config:/data/ratelimit/config\n    environment:\n      - USE_STATSD=true\n      - STATSD_HOST=statsd\n      - STATSD_PORT=9125\n      - LOG_LEVEL=debug\n      - REDIS_SOCKET_TYPE=tcp\n      - REDIS_URL=redis:6379\n      - RUNTIME_ROOT=/data\n      - RUNTIME_SUBDIRECTORY=ratelimit\n      - RUNTIME_WATCH_ROOT=false\n      - CONFIG_TYPE=${CONFIG_TYPE:-FILE}\n      - CONFIG_GRPC_XDS_NODE_ID=test-node-id\n      - CONFIG_GRPC_XDS_SERVER_URL=ratelimit-xds-config-server:18000\n\n  ratelimit-xds-config-server:\n    image: ratelimit-xds-config-server:latest\n    build:\n      context: examples/xds-sotw-config-server\n      dockerfile: Dockerfile\n    command: [\"-nodeID\", \"test-node-id\", \"-port\", \"18000\", \"-debug\", \"true\"]\n    expose:\n      - 18000\n    networks:\n      - ratelimit-network\n    profiles:\n      - xds-config\n\n  envoy-proxy:\n    image: envoyproxy/envoy-dev:latest\n    entrypoint: \"/usr/local/bin/envoy\"\n    command:\n      - \"--service-node proxy\"\n      - \"--service-cluster proxy\"\n      - \"--config-path /etc/envoy/envoy.yaml\"\n      - \"--concurrency 1\"\n      - \"--mode serve\"\n      - \"--log-level info\"\n    volumes:\n      - ./examples/envoy/proxy.yaml:/etc/envoy/envoy.yaml\n    networks:\n      - ratelimit-network\n    expose:\n      - \"8888\"\n      - \"8001\"\n    ports:\n      - \"8888:8888\"\n      - \"8001:8001\"\n\n  envoy-mock:\n    image: envoyproxy/envoy-dev:latest\n    entrypoint: \"/usr/local/bin/envoy\"\n    command:\n      - \"--service-node mock\"\n      - \"--service-cluster mock\"\n      - \"--config-path /etc/envoy/envoy.yaml\"\n      - \"--concurrency 1\"\n      - \"--mode serve\"\n      - \"--log-level info\"\n    volumes:\n      - ./examples/envoy/mock.yaml:/etc/envoy/envoy.yaml\n    networks:\n      - ratelimit-network\n    expose:\n      - \"9999\"\n    ports:\n      - \"9999:9999\"\n\nnetworks:\n  ratelimit-network:\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 1.5888671875,
          "content": "version: \"3\"\nservices:\n  redis:\n    image: redis:alpine\n    expose:\n      - 6379\n    ports:\n      - 6379:6379\n    networks:\n      - ratelimit-network\n\n  memcached:\n    image: memcached:alpine\n    expose:\n      - 11211\n    ports:\n      - 11211:11211\n    networks:\n      - ratelimit-network\n\n  # minimal container that builds the ratelimit service binary and exits.\n  ratelimit-build:\n    image: golang:1.21.5-alpine\n    working_dir: /go/src/github.com/envoyproxy/ratelimit\n    command: go build -o /usr/local/bin/ratelimit ./src/service_cmd/main.go\n    volumes:\n      - .:/go/src/github.com/envoyproxy/ratelimit\n      - binary:/usr/local/bin/\n\n  ratelimit-client-build:\n    image: golang:1.21.5-alpine\n    working_dir: /go/src/github.com/envoyproxy/ratelimit\n    command: go build -o /usr/local/bin/ratelimit_client ./src/client_cmd/main.go\n    volumes:\n      - .:/go/src/github.com/envoyproxy/ratelimit\n      - binary:/usr/local/bin/\n\n  ratelimit:\n    image: alpine:3.6\n    command: >\n      sh -c \"until test -f /usr/local/bin/ratelimit; do sleep 5; done; /usr/local/bin/ratelimit\"\n    ports:\n      - 8080:8080\n      - 8081:8081\n      - 6070:6070\n    depends_on:\n      - redis\n      - ratelimit-build\n      - ratelimit-client-build\n    networks:\n      - ratelimit-network\n    volumes:\n      - binary:/usr/local/bin/\n      - ./examples:/data\n    environment:\n      - USE_STATSD=false\n      - LOG_LEVEL=debug\n      - REDIS_SOCKET_TYPE=tcp\n      - REDIS_URL=redis:6379\n      - RUNTIME_ROOT=/data\n      - RUNTIME_SUBDIRECTORY=ratelimit\n      - MEMCACHE_HOST_PORT=memcached:11211\n\nnetworks:\n  ratelimit-network:\n\nvolumes:\n  binary:\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 3.048828125,
          "content": "module github.com/envoyproxy/ratelimit\n\ngo 1.22.8\n\nrequire (\n\tgithub.com/DataDog/datadog-go/v5 v5.5.0\n\tgithub.com/alicebob/miniredis/v2 v2.33.0\n\tgithub.com/bradfitz/gomemcache v0.0.0-20230905024940-24af94b03874\n\tgithub.com/coocood/freecache v1.2.4\n\tgithub.com/envoyproxy/go-control-plane v0.13.2-0.20241219025321-f011ad88ec17\n\tgithub.com/go-kit/log v0.2.1\n\tgithub.com/golang/mock v1.6.0\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/gorilla/mux v1.8.1\n\tgithub.com/grpc-ecosystem/go-grpc-middleware v1.4.0\n\tgithub.com/jpillora/backoff v1.0.0\n\tgithub.com/kelseyhightower/envconfig v1.4.0\n\tgithub.com/libp2p/go-reuseport v0.4.0\n\tgithub.com/lyft/goruntime v0.3.0\n\tgithub.com/lyft/gostats v0.4.14\n\tgithub.com/mediocregopher/radix/v3 v3.8.1\n\tgithub.com/prometheus/client_golang v1.19.1\n\tgithub.com/prometheus/client_model v0.6.0\n\tgithub.com/prometheus/statsd_exporter v0.26.1\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/stretchr/testify v1.10.0\n\tgo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.53.0\n\tgo.opentelemetry.io/otel v1.28.0\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.28.0\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.27.0\n\tgo.opentelemetry.io/otel/sdk v1.28.0\n\tgo.opentelemetry.io/otel/trace v1.28.0\n\tgolang.org/x/net v0.33.0\n\tgoogle.golang.org/grpc v1.65.0\n\tgoogle.golang.org/protobuf v1.34.2\n\tgopkg.in/yaml.v2 v2.4.0\n)\n\nrequire (\n\tcel.dev/expr v0.15.0 // indirect\n\tgithub.com/Microsoft/go-winio v0.5.0 // indirect\n\tgithub.com/alicebob/gopher-json v0.0.0-20230218143504-906a9b012302 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/cenkalti/backoff/v4 v4.3.0 // indirect\n\tgithub.com/census-instrumentation/opencensus-proto v0.4.1 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/cncf/xds/go v0.0.0-20240423153145-555b57ec207b // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/envoyproxy/protoc-gen-validate v1.1.0 // indirect\n\tgithub.com/fsnotify/fsnotify v1.7.0 // indirect\n\tgithub.com/go-logfmt/logfmt v0.6.0 // indirect\n\tgithub.com/go-logr/logr v1.4.2 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/golang/protobuf v1.5.4 // indirect\n\tgithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 // indirect\n\tgithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/prometheus/common v0.48.0 // indirect\n\tgithub.com/prometheus/procfs v0.12.0 // indirect\n\tgithub.com/stretchr/objx v0.5.2 // indirect\n\tgithub.com/yuin/gopher-lua v1.1.1 // indirect\n\tgo.opentelemetry.io/otel/metric v1.28.0 // indirect\n\tgo.opentelemetry.io/proto/otlp v1.3.1 // indirect\n\tgolang.org/x/sys v0.28.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgolang.org/x/xerrors v0.0.0-20231012003039-104605ab7028 // indirect\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20240701130421-f6361c86f094 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240701130421-f6361c86f094 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 26.431640625,
          "content": "cel.dev/expr v0.15.0 h1:O1jzfJCQBfL5BFoYktaxwIhuttaQPsVWerH9/EEKx0w=\ncel.dev/expr v0.15.0/go.mod h1:TRSuuV7DlVCE/uwv5QbAiW/v8l5O8C4eEPHeu7gf7Sg=\ncloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/DataDog/datadog-go/v5 v5.5.0 h1:G5KHeB8pWBNXT4Jtw0zAkhdxEAWSpWH00geHI6LDrKU=\ngithub.com/DataDog/datadog-go/v5 v5.5.0/go.mod h1:K9kcYBlxkcPP8tvvjZZKs/m1edNAUFzBbdpTUKfCsuw=\ngithub.com/Microsoft/go-winio v0.5.0 h1:Elr9Wn+sGKPlkaBvwu4mTrxtmOp3F3yV9qhaHbXGjwU=\ngithub.com/Microsoft/go-winio v0.5.0/go.mod h1:JPGBdM1cNvN/6ISo+n8V5iA4v8pBzdOpzfwIujj1a84=\ngithub.com/alicebob/gopher-json v0.0.0-20230218143504-906a9b012302 h1:uvdUDbHQHO85qeSydJtItA4T55Pw6BtAejd0APRJOCE=\ngithub.com/alicebob/gopher-json v0.0.0-20230218143504-906a9b012302/go.mod h1:SGnFV6hVsYE877CKEZ6tDNTjaSXYUk6QqoIK6PrAtcc=\ngithub.com/alicebob/miniredis/v2 v2.33.0 h1:uvTF0EDeu9RLnUEG27Db5I68ESoIxTiXbNUiji6lZrA=\ngithub.com/alicebob/miniredis/v2 v2.33.0/go.mod h1:MhP4a3EU7aENRi9aO+tHfTBZicLqQevyi/DJpoj6mi0=\ngithub.com/benbjohnson/clock v1.1.0/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/bradfitz/gomemcache v0.0.0-20230905024940-24af94b03874 h1:N7oVaKyGp8bttX0bfZGmcGkjz7DLQXhAn3DNd3T0ous=\ngithub.com/bradfitz/gomemcache v0.0.0-20230905024940-24af94b03874/go.mod h1:r5xuitiExdLAJ09PR7vBVENGvp4ZuTBeWTGtxuX3K+c=\ngithub.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=\ngithub.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/census-instrumentation/opencensus-proto v0.4.1 h1:iKLQ0xPNFxR/2hzXZMrBo8f1j86j5WHzznCCQxV/b8g=\ngithub.com/census-instrumentation/opencensus-proto v0.4.1/go.mod h1:4T9NM4+4Vw91VeyqjLS6ao50K5bOcLKN6Q42XnYaRYw=\ngithub.com/cespare/xxhash/v2 v2.1.2/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cncf/xds/go v0.0.0-20240423153145-555b57ec207b h1:ga8SEFjZ60pxLcmhnThWgvH2wg8376yUJmPhEH4H3kw=\ngithub.com/cncf/xds/go v0.0.0-20240423153145-555b57ec207b/go.mod h1:W+zGtBO5Y1IgJhy4+A9GOqVhqLpfZi+vwmdNXUehLA8=\ngithub.com/coocood/freecache v1.2.4 h1:UdR6Yz/X1HW4fZOuH0Z94KwG851GWOSknua5VUbb/5M=\ngithub.com/coocood/freecache v1.2.4/go.mod h1:RBUWa/Cy+OHdfTGFEhEuE1pMCMX51Ncizj7rthiQ3vk=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/go-control-plane v0.12.1-0.20240123181358-841e293a220b h1:M0BhcNaW04UV1haQO8IFSDB64dAeiBSsTMZks/sYDcQ=\ngithub.com/envoyproxy/go-control-plane v0.12.1-0.20240123181358-841e293a220b/go.mod h1:lFu6itz1hckLR2A3aJ+ZKf3lu8HpjTsJSsqvVF6GL6g=\ngithub.com/envoyproxy/go-control-plane v0.13.1 h1:vPfJZCkob6yTMEgS+0TwfTUfbHjfy/6vOJ8hUWX/uXE=\ngithub.com/envoyproxy/go-control-plane v0.13.1/go.mod h1:X45hY0mufo6Fd0KW3rqsGvQMw58jvjymeCzBU3mWyHw=\ngithub.com/envoyproxy/go-control-plane v0.13.2-0.20241219025321-f011ad88ec17 h1:vJbk97KFgBX0QdyydT18FDmwqCeRZzUYUdm/o338h8I=\ngithub.com/envoyproxy/go-control-plane v0.13.2-0.20241219025321-f011ad88ec17/go.mod h1:lHUJZHyVI6Q4Vr6qjD60ZHBybFRLzqoKVZGIJi0/i8s=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/envoyproxy/protoc-gen-validate v1.0.4 h1:gVPz/FMfvh57HdSJQyvBtF00j8JU4zdyUgIUNhlgg0A=\ngithub.com/envoyproxy/protoc-gen-validate v1.0.4/go.mod h1:qys6tmnRsYrQqIhm2bvKZH4Blx/1gTIZ2UKVY1M+Yew=\ngithub.com/envoyproxy/protoc-gen-validate v1.1.0 h1:tntQDh69XqOCOZsDz0lVJQez/2L6Uu2PdjCQwWCJ3bM=\ngithub.com/envoyproxy/protoc-gen-validate v1.1.0/go.mod h1:sXRDRVmzEbkM7CVcM06s9shE/m23dg3wzjl0UWqJ2q4=\ngithub.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4IgpuI1SZQ=\ngithub.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=\ngithub.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=\ngithub.com/go-kit/log v0.1.0/go.mod h1:zbhenjAZHb184qTLMA9ZjW7ThYL0H2mk7Q6pNt4vbaY=\ngithub.com/go-kit/log v0.2.1 h1:MRVx0/zhvdseW+Gza6N9rVzU/IVzaeE1SFI4raAhmBU=\ngithub.com/go-kit/log v0.2.1/go.mod h1:NwTd00d/i8cPZ3xOwwiv2PO5MOcx78fFErGNcVmBjv0=\ngithub.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=\ngithub.com/go-logfmt/logfmt v0.6.0 h1:wGYYu3uicYdqXVgoYbvnkrPVXkuLM1p1ifugDMEdRi4=\ngithub.com/go-logfmt/logfmt v0.6.0/go.mod h1:WYhtIu8zTZfxdn5+rREduYbwxfcBr/Vr6KEVveWlfTs=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.6.0 h1:ErTB+efbowRARo13NNdxyJji2egdxLGQhRaY+DUumQc=\ngithub.com/golang/mock v1.6.0/go.mod h1:p6yTPP+5HYm5mzsMV8JkE6ZKdX+/wYM6Hr+LicevLPs=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gorilla/mux v1.8.1 h1:TuBL49tXwgrFYWhqrNgrUNEY92u81SPhu7sTdzQEiWY=\ngithub.com/gorilla/mux v1.8.1/go.mod h1:AKf9I4AEqPTmMytcMc0KkNouC66V3BtZ4qD5fmWSiMQ=\ngithub.com/grpc-ecosystem/go-grpc-middleware v1.4.0 h1:UH//fgunKIs4JdUbpDl1VZCDaL56wXCB/5+wF6uHfaI=\ngithub.com/grpc-ecosystem/go-grpc-middleware v1.4.0/go.mod h1:g5qyo/la0ALbONm6Vbp88Yd8NsDy6rZz+RcrMPxvld8=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 h1:bkypFPDjIYGfCYD5mRBvpqxfYX1YCS1PXdKYWi8FsN0=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0/go.mod h1:P+Lt/0by1T8bfcF3z737NnSbmxQAppXMRziHUxPOC8k=\ngithub.com/jpillora/backoff v1.0.0 h1:uvFg412JmmHBHw7iwprIxkPMI+sGQ4kzOWsMeHnm2EA=\ngithub.com/jpillora/backoff v1.0.0/go.mod h1:J/6gKK9jxlEcS3zixgDgUAsiuZ7yrSoa/FX5e0EB2j4=\ngithub.com/kelseyhightower/envconfig v1.4.0 h1:Im6hONhd3pLkfDFsbRgu68RDNkGF1r3dvMUtDTo2cv8=\ngithub.com/kelseyhightower/envconfig v1.4.0/go.mod h1:cccZRl6mQpaq41TPp5QxidR+Sa3axMbJDNb//FQX6Gg=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.3/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/libp2p/go-reuseport v0.4.0 h1:nR5KU7hD0WxXCJbmw7r2rhRYruNRl2koHw8fQscQm2s=\ngithub.com/libp2p/go-reuseport v0.4.0/go.mod h1:ZtI03j/wO5hZVDFo2jKywN6bYKWLOy8Se6DrI2E1cLU=\ngithub.com/lyft/goruntime v0.3.0 h1:VLBYR4s3XazkUT8lLtq9CJrt58YmLQQumrK3ktenEkI=\ngithub.com/lyft/goruntime v0.3.0/go.mod h1:BW1gngSpMJR9P9w23BPUPdhdbUWhpirl98TQhOWWMF4=\ngithub.com/lyft/gostats v0.4.1/go.mod h1:Tpx2xRzz4t+T2Tx0xdVgIoBdR2UMVz+dKnE3X01XSd8=\ngithub.com/lyft/gostats v0.4.14 h1:xmP4yMfDvEKtlNZEcS2sYz0cvnps1ri337ZEEbw3ab8=\ngithub.com/lyft/gostats v0.4.14/go.mod h1:cJWqEVL8JIewIJz/olUIios2F1q06Nc51hXejPQmBH0=\ngithub.com/mediocregopher/radix/v3 v3.8.1 h1:rOkHflVuulFKlwsLY01/M2cM2tWCjDoETcMqKbAWu1M=\ngithub.com/mediocregopher/radix/v3 v3.8.1/go.mod h1:8FL3F6UQRXHXIBSPUs5h0RybMF8i4n7wVopoX3x7Bv8=\ngithub.com/opentracing/opentracing-go v1.1.0/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/planetscale/vtprotobuf v0.5.1-0.20231212170721-e7d721933795 h1:pH+U6pJP0BhxqQ4njBUjOg0++WMMvv3eByWzB+oATBY=\ngithub.com/planetscale/vtprotobuf v0.5.1-0.20231212170721-e7d721933795/go.mod h1:t/avpk3KcrXxUnYOhZhMXJlSEyie6gQbtLq5NM3loB8=\ngithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10 h1:GFCKgmp0tecUJ0sJuv4pzYCqS9+RGSn52M3FUwPs+uo=\ngithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10/go.mod h1:t/avpk3KcrXxUnYOhZhMXJlSEyie6gQbtLq5NM3loB8=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_golang v1.19.1 h1:wZWJDwK+NameRJuPGDhlnFgx8e8HN3XHQeLaYJFJBOE=\ngithub.com/prometheus/client_golang v1.19.1/go.mod h1:mP78NwGzrVks5S2H6ab8+ZZGJLZUq1hoULYBAYBw1Ho=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.6.0 h1:k1v3CzpSRUTrKMppY35TLwPvxHqBu0bYgxZzqGIgaos=\ngithub.com/prometheus/client_model v0.6.0/go.mod h1:NTQHnmxFpouOD0DpvP4XujX3CdOAGQPoaGhyTchlyt8=\ngithub.com/prometheus/common v0.48.0 h1:QO8U2CdOzSn1BBsmXJXduaaW+dY/5QLjfB8svtSzKKE=\ngithub.com/prometheus/common v0.48.0/go.mod h1:0/KsvlIEfPQCQ5I2iNSAWKPZziNCvRs5EC6ILDTlAPc=\ngithub.com/prometheus/procfs v0.12.0 h1:jluTpSng7V9hY0O2R9DzzJHYb2xULk9VTR1V1R/k6Bo=\ngithub.com/prometheus/procfs v0.12.0/go.mod h1:pcuDEFsWDnvcgNzo4EEweacyhjeA9Zk3cnaOZAZEfOo=\ngithub.com/prometheus/statsd_exporter v0.26.1 h1:ucbIAdPmwAUcA+dU+Opok8Qt81Aw8HanlO+2N/Wjv7w=\ngithub.com/prometheus/statsd_exporter v0.26.1/go.mod h1:XlDdjAmRmx3JVvPPYuFNUg+Ynyb5kR69iPPkQjxXFMk=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/sirupsen/logrus v1.6.0/go.mod h1:7uNnSEd1DgxDLC74fIahvMZmmYsHGZGEOFrfsX/uA88=\ngithub.com/sirupsen/logrus v1.7.0/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2 h1:xuMeJ0Sdp5ZMRXx/aWO6RZxdr3beISkG5/G/aIRr3pY=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngithub.com/yuin/gopher-lua v1.1.1 h1:kYKnWBjvbNP4XLT3+bPEwAXJx262OhaHDWDVOPjL46M=\ngithub.com/yuin/gopher-lua v1.1.1/go.mod h1:GBR0iDaNXjAgGg9zfCvksxSRnQx76gclCIb7kdAd1Pw=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.53.0 h1:9G6E0TXzGFVfTnawRzrPl83iHOAV7L8NJiR8RSGYV1g=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.53.0/go.mod h1:azvtTADFQJA8mX80jIH/akaE7h+dbm/sVuaHqN13w74=\ngo.opentelemetry.io/otel v1.28.0 h1:/SqNcYk+idO0CxKEUOtKQClMK/MimZihKYMruSMViUo=\ngo.opentelemetry.io/otel v1.28.0/go.mod h1:q68ijF8Fc8CnMHKyzqL6akLO46ePnjkgfIMIjUIX9z4=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0 h1:3Q/xZUyC1BBkualc9ROb4G8qkH90LXEIICcs5zv1OYY=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0/go.mod h1:s75jGIWA9OfCMzF0xr+ZgfrB5FEbbV7UuYo32ahUiFI=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.28.0 h1:R3X6ZXmNPRR8ul6i3WgFURCHzaXjHdm0karRG/+dj3s=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.28.0/go.mod h1:QWFXnDavXWwMx2EEcZsf3yxgEKAqsxQ+Syjp+seyInw=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.27.0 h1:QY7/0NeRPKlzusf40ZE4t1VlMKbqSNT7cJRYzWuja0s=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.27.0/go.mod h1:HVkSiDhTM9BoUJU8qE6j2eSWLLXvi1USXjyd2BXT8PY=\ngo.opentelemetry.io/otel/metric v1.28.0 h1:f0HGvSl1KRAU1DLgLGFjrwVyismPlnuU6JD6bOeuA5Q=\ngo.opentelemetry.io/otel/metric v1.28.0/go.mod h1:Fb1eVBFZmLVTMb6PPohq3TO9IIhUisDsbJoL/+uQW4s=\ngo.opentelemetry.io/otel/sdk v1.28.0 h1:b9d7hIry8yZsgtbmM0DKyPWMMUMlK9NEKuIG4aBqWyE=\ngo.opentelemetry.io/otel/sdk v1.28.0/go.mod h1:oYj7ClPUA7Iw3m+r7GeEjz0qckQRJK2B8zjcZEfu7Pg=\ngo.opentelemetry.io/otel/trace v1.28.0 h1:GhQ9cUuQGmNDd5BTCP2dAvv75RdMxEfTmYejp+lkx9g=\ngo.opentelemetry.io/otel/trace v1.28.0/go.mod h1:jPyXzNPg6da9+38HEwElrQiHlVMTnVfM3/yv2OlIHaI=\ngo.opentelemetry.io/proto/otlp v1.3.1 h1:TrMUixzpM0yuc/znrFTP9MMRh8trP93mkCiDVeXrui0=\ngo.opentelemetry.io/proto/otlp v1.3.1/go.mod h1:0X1WI4de4ZsLrrJNLAQbFeLCm3T7yBkR0XqQ7niQU+8=\ngo.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/goleak v1.1.10/go.mod h1:8a7PlsEVH3e/a/GLqe5IIrQx6GzcnRmZEufDUTk4A7A=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\ngo.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=\ngo.uber.org/zap v1.18.1/go.mod h1:xg/QME4nWcxGxrpdeYfq7UvYrLh66cuVKdrbD1XF/NI=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=\ngolang.org/x/net v0.33.0 h1:74SYHlV8BIgHIFC/LrYkOGIwL19eTYXQ5wc6TBuO36I=\ngolang.org/x/net v0.33.0/go.mod h1:HXLR5J+9DxmrqMwG9qjGCxZ+zKXxBru04zlTvWlWuN4=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191005200804-aed5e4c7ecf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200523222454-059865788121/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211025201205-69cdffdb9359/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20191108193012-7d206e10da11/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.1/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20231012003039-104605ab7028 h1:+cNy6SZtPcJQH3LJVLOSmiC7MMxXNOb3PU/VUEz+EhU=\ngolang.org/x/xerrors v0.0.0-20231012003039-104605ab7028/go.mod h1:NDW/Ps6MPRej6fsCIbMTohpP40sJ/P/vI1MoTEGwX90=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20200423170343-7949de9c1215/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240701130421-f6361c86f094 h1:0+ozOGcrp+Y8Aq8TLNN2Aliibms5LEzsq99ZZmAGYm0=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240701130421-f6361c86f094/go.mod h1:fJ/e3If/Q67Mj99hin0hMhiNyCRmt6BQ2aWIJshUSJw=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240701130421-f6361c86f094 h1:BwIjyKYGsK9dMCBOorzRri8MQwmi7mT9rGHsCEinZkA=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240701130421-f6361c86f094/go.mod h1:Ue6ibwXGpU+dqIcODieyLOcgj7z8+IcskoNIgZxtrFY=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.29.1/go.mod h1:itym6AZVZYACWQqET3MqgPpjcuV5QH3BxFS3IjizoKk=\ngoogle.golang.org/grpc v1.65.0 h1:bs/cUb4lp1G5iImFFd3u5ixQzweKizoZJAwBNLR42lc=\ngoogle.golang.org/grpc v1.65.0/go.mod h1:WgYC2ypjlB0EiQi6wdKixMqukr6lBc0Vo+oOgjrM5ZQ=\ngoogle.golang.org/protobuf v1.34.2 h1:6xV6lTsCfpGD21XK49h7MhtcApnLqkfYgPcdHftf6hg=\ngoogle.golang.org/protobuf v1.34.2/go.mod h1:qYOHts0dSfpeUzUFpOMr/WGzszTmLH+DiWniOlNbLDw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\n"
        },
        {
          "name": "integration-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "repokitteh.star",
          "type": "blob",
          "size": 0.1259765625,
          "content": "pin(\"github.com/repokitteh/modules\", \"4ee2ed0c3622aad7fcddc04cb5dc866e44a541e6\")\n\nuse(\"github.com/repokitteh/modules/wait.star\")\n"
        },
        {
          "name": "requirements-dev.txt",
          "type": "blob",
          "size": 0.017578125,
          "content": "pre-commit>=2.9.3\n"
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}