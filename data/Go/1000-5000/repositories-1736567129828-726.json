{
  "metadata": {
    "timestamp": 1736567129828,
    "page": 726,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjczMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kubernetes-sigs/controller-runtime",
      "stars": 2607,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3681640625,
          "content": "# Binaries for programs and plugins\n*.exe\n*.exe~\n*.dll\n*.so\n*.dylib\n\n# Test binary, build with `go test -c`\n*.test\n\n# Output of the go coverage tool, specifically when used with LiteIDE\n*.out\n\n# editor and IDE paraphernalia\n.idea\n*.swp\n*.swo\n*~\n\n# Vscode files\n.vscode\n\n# Tools binaries.\nhack/tools/bin\n\n# Release artifacts\ntools/setup-envtest/out\n\njunit-report.xml\n/artifacts\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 5.46875,
          "content": "linters:\n  disable-all: true\n  enable:\n    - asasalint\n    - asciicheck\n    - bidichk\n    - bodyclose\n    - copyloopvar\n    - dogsled\n    - dupl\n    - errcheck\n    - errchkjson\n    - errorlint\n    - exhaustive\n    - ginkgolinter\n    - goconst\n    - gocritic\n    - gocyclo\n    - gofmt\n    - goimports\n    - goprintffuncname\n    - gosimple\n    - govet\n    - importas\n    - ineffassign\n    - makezero\n    - misspell\n    - nakedret\n    - nilerr\n    - nolintlint\n    - prealloc\n    - revive\n    - staticcheck\n    - stylecheck\n    - tagliatelle\n    - typecheck\n    - unconvert\n    - unparam\n    - unused\n    - whitespace\n\nlinters-settings:\n  govet:\n    enable-all: true\n    disable:\n      - fieldalignment\n      - shadow\n  importas:\n    no-unaliased: true\n    alias:\n      # Kubernetes\n      - pkg: k8s.io/api/core/v1\n        alias: corev1\n      - pkg: k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1\n        alias: apiextensionsv1\n      - pkg: k8s.io/apimachinery/pkg/apis/meta/v1\n        alias: metav1\n      - pkg: k8s.io/apimachinery/pkg/api/errors\n        alias: apierrors\n      - pkg: k8s.io/apimachinery/pkg/util/errors\n        alias: kerrors\n      # Controller Runtime\n      - pkg: sigs.k8s.io/controller-runtime\n        alias: ctrl\n  revive:\n    rules:\n      # The following rules are recommended https://github.com/mgechev/revive#recommended-configuration\n      - name: blank-imports\n      - name: context-as-argument\n      - name: context-keys-type\n      - name: dot-imports\n      - name: error-return\n      - name: error-strings\n      - name: error-naming\n      - name: exported\n      - name: if-return\n      - name: increment-decrement\n      - name: var-naming\n      - name: var-declaration\n      - name: range\n      - name: receiver-naming\n      - name: time-naming\n      - name: unexported-return\n      - name: indent-error-flow\n      - name: errorf\n      - name: superfluous-else\n      - name: unreachable-code\n      - name: redefines-builtin-id\n      #\n      # Rules in addition to the recommended configuration above.\n      #\n      - name: bool-literal-in-expr\n      - name: constant-logical-expr\n\nissues:\n  max-same-issues: 0\n  max-issues-per-linter: 0\n  # We are disabling default golangci exclusions because we want to help reviewers to focus on reviewing the most relevant\n  # changes in PRs and avoid nitpicking.\n  exclude-use-default: false\n  # List of regexps of issue texts to exclude, empty list by default.\n  exclude:\n    # The following are being worked on to remove their exclusion. This list should be reduced or go away all together over time.\n    # If it is decided they will not be addressed they should be moved above this comment.\n    - Subprocess launch(ed with variable|ing should be audited)\n    - (G204|G104|G307)\n    - \"ST1000: at least one file in a package should have a package comment\"\n  exclude-files:\n    - \"zz_generated.*\\\\.go$\"\n    - \".*conversion.*\\\\.go$\"\n  exclude-rules:\n    - linters:\n        - gosec\n      text: \"G108: Profiling endpoint is automatically exposed on /debug/pprof\"\n    - linters:\n        - revive\n      text: \"exported: exported method .*\\\\.(Reconcile|SetupWithManager|SetupWebhookWithManager) should have comment or be unexported\"\n    - linters:\n        - errcheck\n      text: Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*print(f|ln)?|os\\.(Un)?Setenv). is not checked\n    - linters:\n        - staticcheck\n      text: \"SA1019: .*The component config package has been deprecated and will be removed in a future release.\"\n    # With Go 1.16, the new embed directive can be used with an un-named import,\n    # revive (previously, golint) only allows these to be imported in a main.go, which wouldn't work for us.\n    # This directive allows the embed package to be imported with an underscore everywhere.\n    - linters:\n        - revive\n      source: _ \"embed\"\n    # Exclude some packages or code to require comments, for example test code, or fake clients.\n    - linters:\n        - revive\n      text: exported (method|function|type|const) (.+) should have comment or be unexported\n      source: (func|type).*Fake.*\n    - linters:\n        - revive\n      text: exported (method|function|type|const) (.+) should have comment or be unexported\n      path: fake_\\.go\n    # Disable unparam \"always receives\" which might not be really\n    # useful when building libraries.\n    - linters:\n        - unparam\n      text: always receives\n    # Dot imports for gomega and ginkgo are allowed\n    # within test files.\n    - path: _test\\.go\n      text: should not use dot imports\n    - path: _test\\.go\n      text: cyclomatic complexity\n    - path: _test\\.go\n      text: \"G107: Potential HTTP request made with variable url\"\n    # Append should be able to assign to a different var/slice.\n    - linters:\n        - gocritic\n      text: \"appendAssign: append result not assigned to the same slice\"\n    - linters:\n        - gocritic\n      text: \"singleCaseSwitch: should rewrite switch statement to if statement\"\n    # It considers all file access to a filename that comes from a variable problematic,\n    # which is naiv at best.\n    - linters:\n        - gosec\n      text: \"G304: Potential file inclusion via variable\"\n    - linters:\n        - dupl\n      path: _test\\.go\n    - linters:\n        - revive\n      path: .*/internal/.*\n    - linters:\n        - unused\n      # Seems to incorrectly trigger on the two implementations that are only\n      # used through an interface and not directly..?\n      path: pkg/controller/priorityqueue/metrics\\.go\n\nrun:\n  go: \"1.23\"\n  timeout: 10m\n  allow-parallel-runners: true\n"
        },
        {
          "name": ".gomodcheck.yaml",
          "type": "blob",
          "size": 0.4296875,
          "content": "upstreamRefs:\n  - k8s.io/api\n  - k8s.io/apiextensions-apiserver\n  - k8s.io/apimachinery\n  - k8s.io/apiserver\n  - k8s.io/client-go\n  - k8s.io/component-base\n  # k8s.io/klog/v2 -> conflicts with k/k deps\n  # k8s.io/utils -> conflicts with k/k deps\n\nexcludedModules:\n  # --- test dependencies:\n  - github.com/onsi/ginkgo/v2\n  - github.com/onsi/gomega\n\n  # --- We want a newer version with generics support for this\n  - github.com/google/btree\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.6728515625,
          "content": "# Contributing guidelines\n\n## Sign the CLA\n\nKubernetes projects require that you sign a Contributor License Agreement (CLA) before we can accept your pull requests.\n  \nPlease see https://git.k8s.io/community/CLA.md for more info\n\n## Contributing steps\n\n1. Submit an issue describing your proposed change to the repo in question.\n1. The [repo owners](OWNERS) will respond to your issue promptly.\n1. If your proposed change is accepted, and you haven't already done so, sign a Contributor License Agreement (see details above).\n1. Fork the desired repo, develop and test your code changes.\n1. Submit a pull request.\n\n## Test locally\n\nRun the command `make test` to test the changes locally.\n"
        },
        {
          "name": "FAQ.md",
          "type": "blob",
          "size": 4.01171875,
          "content": "# FAQ\n\n### Q: How do I know which type of object a controller references?\n\n**A**: Each controller should only reconcile one object type.  Other\naffected objects should be mapped to a single type of root object, using\nthe `handler.EnqueueRequestForOwner` or `handler.EnqueueRequestsFromMapFunc` event\nhandlers, and potentially indices. Then, your Reconcile method should\nattempt to reconcile *all* state for that given root objects.\n\n### Q: How do I have different logic in my reconciler for different types of events (e.g. create, update, delete)?\n\n**A**: You should not. Reconcile functions should be idempotent, and\nshould always reconcile state by reading all the state it needs, then\nwriting updates.  This allows your reconciler to correctly respond to\ngeneric events, adjust to skipped or coalesced events, and easily deal\nwith application startup.  The controller will enqueue reconcile requests\nfor both old and new objects if a mapping changes, but it's your\nresponsibility to make sure you have enough information to be able clean\nup state that's no longer referenced.\n\n### Q: My cache might be stale if I read from a cache! How should I deal with that?\n\n**A**: There are several different approaches that can be taken, depending\non your situation.\n\n- When you can, take advantage of optimistic locking: use deterministic\n  names for objects you create, so that the Kubernetes API server will\n  warn you if the object already exists.  Many controllers in Kubernetes\n  take this approach: the StatefulSet controller appends a specific number\n  to each pod that it creates, while the Deployment controller hashes the\n  pod template spec and appends that.\n\n- In the few cases when you cannot take advantage of deterministic names\n  (e.g. when using generateName), it may be useful in to track which\n  actions you took, and assume that they need to be repeated if they don't\n  occur after a given time (e.g. using a requeue result).  This is what\n  the ReplicaSet controller does.\n\nIn general, write your controller with the assumption that information\nwill eventually be correct, but may be slightly out of date. Make sure\nthat your reconcile function enforces the entire state of the world each\ntime it runs.  If none of this works for you, you can always construct\na client that reads directly from the API server, but this is generally\nconsidered to be a last resort, and the two approaches above should\ngenerally cover most circumstances.\n\n### Q: Where's the fake client?  How do I use it?\n\n**A**: The fake client\n[exists](https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg/client/fake),\nbut we generally recommend using\n[envtest.Environment](https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg/envtest#Environment)\nto test against a real API server.  In our experience, tests using fake\nclients gradually re-implement poorly-written impressions of a real API\nserver, which leads to hard-to-maintain, complex test code.\n\n### Q: How should I write tests?  Any suggestions for getting started?\n\n- Use the aforementioned\n  [envtest.Environment](https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg/envtest#Environment)\n  to spin up a real API server instead of trying to mock one out.\n\n- Structure your tests to check that the state of the world is as you\n  expect it, *not* that a particular set of API calls were made, when\n  working with Kubernetes APIs.  This will allow you to more easily\n  refactor and improve the internals of your controllers without changing\n  your tests.\n\n- Remember that any time you're interacting with the API server, changes\n  may have some delay between write time and reconcile time.\n\n### Q: What are these errors about no Kind being registered for a type?\n\n**A**: You're probably missing a fully-set-up Scheme.  Schemes record the\nmapping between Go types and group-version-kinds in Kubernetes. In\ngeneral, your application should have its own Scheme containing the types\nfrom the API groups that it needs (be they Kubernetes types or your own).\nSee the [scheme builder\ndocs](https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg/scheme) for\nmore information.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 7.884765625,
          "content": "#!/usr/bin/env bash\n\n#  Copyright 2020 The Kubernetes Authors.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n\n# If you update this file, please follow\n# https://suva.sh/posts/well-documented-makefiles\n\n## --------------------------------------\n## General\n## --------------------------------------\n\nSHELL:=/usr/bin/env bash\n.DEFAULT_GOAL:=help\n\n#\n# Go.\n#\nGO_VERSION ?= 1.23.2\n\n# Use GOPROXY environment variable if set\nGOPROXY := $(shell go env GOPROXY)\nifeq ($(GOPROXY),)\nGOPROXY := https://proxy.golang.org\nendif\nexport GOPROXY\n\n# Active module mode, as we use go modules to manage dependencies\nexport GO111MODULE=on\n\n# Hosts running SELinux need :z added to volume mounts\nSELINUX_ENABLED := $(shell cat /sys/fs/selinux/enforce 2> /dev/null || echo 0)\n\nifeq ($(SELINUX_ENABLED),1)\n  DOCKER_VOL_OPTS?=:z\nendif\n\n# Tools.\nTOOLS_DIR := hack/tools\nTOOLS_BIN_DIR := $(abspath $(TOOLS_DIR)/bin)\nGOLANGCI_LINT := $(abspath $(TOOLS_BIN_DIR)/golangci-lint)\nGO_APIDIFF := $(TOOLS_BIN_DIR)/go-apidiff\nCONTROLLER_GEN := $(TOOLS_BIN_DIR)/controller-gen\nENVTEST_DIR := $(abspath tools/setup-envtest)\nSCRATCH_ENV_DIR := $(abspath examples/scratch-env)\nGO_INSTALL := ./hack/go-install.sh\n\n# The help will print out all targets with their descriptions organized bellow their categories. The categories are represented by `##@` and the target descriptions by `##`.\n# The awk commands is responsible to read the entire set of makefiles included in this invocation, looking for lines of the file as xyz: ## something, and then pretty-format the target and help. Then, if there's a line with ##@ something, that gets pretty-printed as a category.\n# More info over the usage of ANSI control characters for terminal formatting: https://en.wikipedia.org/wiki/ANSI_escape_code#SGR_parameters\n# More info over awk command: http://linuxcommand.org/lc3_adv_awk.php\n.PHONY: help\nhelp:  ## Display this help\n\t@awk 'BEGIN {FS = \":.*##\"; printf \"\\nUsage:\\n  make \\033[36m<target>\\033[0m\\n\"} /^[a-zA-Z_0-9-]+:.*?##/ { printf \"  \\033[36m%-15s\\033[0m %s\\n\", $$1, $$2 } /^##@/ { printf \"\\n\\033[1m%s\\033[0m\\n\", substr($$0, 5) } ' $(MAKEFILE_LIST)\n\n## --------------------------------------\n## Testing\n## --------------------------------------\n\n.PHONY: test\ntest: test-tools ## Run the script check-everything.sh which will check all.\n\tTRACE=1 ./hack/check-everything.sh\n\n.PHONY: test-tools\ntest-tools: ## tests the tools codebase (setup-envtest)\n\tcd tools/setup-envtest && go test ./...\n\n## --------------------------------------\n## Binaries\n## --------------------------------------\n\nGO_APIDIFF_VER := v0.8.2\nGO_APIDIFF_BIN := go-apidiff\nGO_APIDIFF := $(abspath $(TOOLS_BIN_DIR)/$(GO_APIDIFF_BIN)-$(GO_APIDIFF_VER))\nGO_APIDIFF_PKG := github.com/joelanford/go-apidiff\n\n$(GO_APIDIFF): # Build go-apidiff from tools folder.\n\tGOBIN=$(TOOLS_BIN_DIR) $(GO_INSTALL) $(GO_APIDIFF_PKG) $(GO_APIDIFF_BIN) $(GO_APIDIFF_VER)\n\nCONTROLLER_GEN_VER := v0.14.0\nCONTROLLER_GEN_BIN := controller-gen\nCONTROLLER_GEN := $(abspath $(TOOLS_BIN_DIR)/$(CONTROLLER_GEN_BIN)-$(CONTROLLER_GEN_VER))\nCONTROLLER_GEN_PKG := sigs.k8s.io/controller-tools/cmd/controller-gen\n\n$(CONTROLLER_GEN): # Build controller-gen from tools folder.\n\tGOBIN=$(TOOLS_BIN_DIR) $(GO_INSTALL) $(CONTROLLER_GEN_PKG) $(CONTROLLER_GEN_BIN) $(CONTROLLER_GEN_VER)\n\nGOLANGCI_LINT_BIN := golangci-lint\nGOLANGCI_LINT_VER := $(shell cat .github/workflows/golangci-lint.yml | grep [[:space:]]version: | sed 's/.*version: //')\nGOLANGCI_LINT := $(abspath $(TOOLS_BIN_DIR)/$(GOLANGCI_LINT_BIN)-$(GOLANGCI_LINT_VER))\nGOLANGCI_LINT_PKG := github.com/golangci/golangci-lint/cmd/golangci-lint\n\n$(GOLANGCI_LINT): # Build golangci-lint from tools folder.\n\tGOBIN=$(TOOLS_BIN_DIR) $(GO_INSTALL) $(GOLANGCI_LINT_PKG) $(GOLANGCI_LINT_BIN) $(GOLANGCI_LINT_VER)\n\nGO_MOD_CHECK_DIR := $(abspath ./hack/tools/cmd/gomodcheck)\nGO_MOD_CHECK := $(abspath $(TOOLS_BIN_DIR)/gomodcheck)\nGO_MOD_CHECK_IGNORE := $(abspath .gomodcheck.yaml)\n.PHONY: $(GO_MOD_CHECK)\n$(GO_MOD_CHECK): # Build gomodcheck\n\tgo build -C $(GO_MOD_CHECK_DIR) -o $(GO_MOD_CHECK)\n\n## --------------------------------------\n## Linting\n## --------------------------------------\n\n.PHONY: lint\nlint: $(GOLANGCI_LINT) ## Lint codebase\n\t$(GOLANGCI_LINT) run -v $(GOLANGCI_LINT_EXTRA_ARGS)\n\tcd tools/setup-envtest; $(GOLANGCI_LINT) run -v $(GOLANGCI_LINT_EXTRA_ARGS)\n\n.PHONY: lint-fix\nlint-fix: $(GOLANGCI_LINT) ## Lint the codebase and run auto-fixers if supported by the linter.\n\tGOLANGCI_LINT_EXTRA_ARGS=--fix $(MAKE) lint\n\n## --------------------------------------\n## Generate\n## --------------------------------------\n\n.PHONY: modules\nmodules: ## Runs go mod to ensure modules are up to date.\n\tgo mod tidy\n\tcd $(TOOLS_DIR); go mod tidy\n\tcd $(ENVTEST_DIR); go mod tidy\n\tcd $(SCRATCH_ENV_DIR); go mod tidy\n\n## --------------------------------------\n## Release\n## --------------------------------------\n\nRELEASE_DIR := tools/setup-envtest/out\n\n.PHONY: $(RELEASE_DIR)\n$(RELEASE_DIR):\n\tmkdir -p $(RELEASE_DIR)/\n\n.PHONY: release\nrelease: clean-release $(RELEASE_DIR) ## Build release.\n\t@if ! [ -z \"$$(git status --porcelain)\" ]; then echo \"Your local git repository contains uncommitted changes, use git clean before proceeding.\"; exit 1; fi\n\n\t# Build binaries first.\n\t$(MAKE) release-binaries\n\n.PHONY: release-binaries\nrelease-binaries: ## Build release binaries.\n\tRELEASE_BINARY=setup-envtest-linux-amd64       GOOS=linux   GOARCH=amd64   $(MAKE) release-binary\n\tRELEASE_BINARY=setup-envtest-linux-arm64       GOOS=linux   GOARCH=arm64   $(MAKE) release-binary\n\tRELEASE_BINARY=setup-envtest-linux-ppc64le     GOOS=linux   GOARCH=ppc64le $(MAKE) release-binary\n\tRELEASE_BINARY=setup-envtest-linux-s390x       GOOS=linux   GOARCH=s390x   $(MAKE) release-binary\n\tRELEASE_BINARY=setup-envtest-darwin-amd64      GOOS=darwin  GOARCH=amd64   $(MAKE) release-binary\n\tRELEASE_BINARY=setup-envtest-darwin-arm64      GOOS=darwin  GOARCH=arm64   $(MAKE) release-binary\n\tRELEASE_BINARY=setup-envtest-windows-amd64.exe GOOS=windows GOARCH=amd64   $(MAKE) release-binary\n\n.PHONY: release-binary\nrelease-binary: $(RELEASE_DIR)\n\tdocker run \\\n\t\t--rm \\\n\t\t-e CGO_ENABLED=0 \\\n\t\t-e GOOS=$(GOOS) \\\n\t\t-e GOARCH=$(GOARCH) \\\n\t\t-e GOCACHE=/tmp/ \\\n\t\t--user $$(id -u):$$(id -g) \\\n\t\t-v \"$$(pwd):/workspace$(DOCKER_VOL_OPTS)\" \\\n\t\t-w /workspace/tools/setup-envtest \\\n\t\tgolang:$(GO_VERSION) \\\n\t\tgo build -a -trimpath -ldflags \"-extldflags '-static'\" \\\n\t\t-o ./out/$(RELEASE_BINARY) ./\n\n## --------------------------------------\n## Cleanup / Verification\n## --------------------------------------\n\n.PHONY: clean\nclean: ## Cleanup.\n\t$(GOLANGCI_LINT) cache clean\n\t$(MAKE) clean-bin\n\n.PHONY: clean-bin\nclean-bin: ## Remove all generated binaries.\n\trm -rf hack/tools/bin\n\n.PHONY: clean-release\nclean-release: ## Remove the release folder\n\trm -rf $(RELEASE_DIR)\n\n.PHONY: verify-modules\nverify-modules: modules $(GO_MOD_CHECK) ## Verify go modules are up to date\n\t@if !(git diff --quiet HEAD -- go.sum go.mod $(TOOLS_DIR)/go.mod $(TOOLS_DIR)/go.sum $(ENVTEST_DIR)/go.mod $(ENVTEST_DIR)/go.sum $(SCRATCH_ENV_DIR)/go.sum); then \\\n\t\tgit diff; \\\n\t\techo \"go module files are out of date, please run 'make modules'\"; exit 1; \\\n\tfi\n\t$(GO_MOD_CHECK) $(GO_MOD_CHECK_IGNORE)\n\nAPIDIFF_OLD_COMMIT ?= $(shell git rev-parse origin/main)\n\n.PHONY: apidiff\nverify-apidiff: $(GO_APIDIFF) ## Check for API differences\n\t$(GO_APIDIFF) $(APIDIFF_OLD_COMMIT) --print-compatible\n\n## --------------------------------------\n## Helpers\n## --------------------------------------\n\n##@ helpers:\n\ngo-version: ## Print the go version we use to compile our binaries and images\n\t@echo $(GO_VERSION)\n"
        },
        {
          "name": "OWNERS",
          "type": "blob",
          "size": 0.3251953125,
          "content": "# See the OWNERS docs: https://git.k8s.io/community/contributors/guide/owners.md\n\napprovers:\n  - controller-runtime-admins\n  - controller-runtime-maintainers\n  - controller-runtime-approvers\nreviewers:\n  - controller-runtime-admins\n  - controller-runtime-maintainers\n  - controller-runtime-approvers\n  - controller-runtime-reviewers\n"
        },
        {
          "name": "OWNERS_ALIASES",
          "type": "blob",
          "size": 0.9423828125,
          "content": "# See the OWNERS docs: https://git.k8s.io/community/contributors/guide/owners.md\n\naliases:\n  # active folks who can be contacted to perform admin-related\n  # tasks on the repo, or otherwise approve any PRS.\n  controller-runtime-admins:\n  - vincepri\n  - joelanford\n\n  # non-admin folks who have write-access and can approve any PRs in the repo\n  controller-runtime-maintainers:\n  - alvaroaleman\n  - joelanford\n  - sbueringer\n  - vincepri\n\n  # non-admin folks who can approve any PRs in the repo\n  controller-runtime-approvers:\n  - fillzpp\n\n  # folks who can review and LGTM any PRs in the repo (doesn't\n  # include approvers & admins -- those count too via the OWNERS\n  # file)\n  controller-runtime-reviewers:\n  - varshaprasad96\n  - inteon\n\n  # folks who may have context on ancient history,\n  # but are no longer directly involved\n  controller-runtime-emeritus-maintainers:\n  - directxman12\n  controller-runtime-emeritus-admins:\n  - droot\n  - mengqiy\n  - pwittrock\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.5419921875,
          "content": "[![Go Report Card](https://goreportcard.com/badge/sigs.k8s.io/controller-runtime)](https://goreportcard.com/report/sigs.k8s.io/controller-runtime)\n[![godoc](https://pkg.go.dev/badge/sigs.k8s.io/controller-runtime)](https://pkg.go.dev/sigs.k8s.io/controller-runtime)\n\n# Kubernetes controller-runtime Project\n\nThe Kubernetes controller-runtime Project is a set of go libraries for building\nControllers. It is leveraged by [Kubebuilder](https://book.kubebuilder.io/) and\n[Operator SDK](https://github.com/operator-framework/operator-sdk). Both are\na great place to start for new projects. See\n[Kubebuilder's Quick Start](https://book.kubebuilder.io/quick-start.html) to\nsee how it can be used.\n\nDocumentation:\n\n- [Package overview](https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg)\n- [Basic controller using builder](https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg/builder#example-Builder)\n- [Creating a manager](https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg/manager#example-New)\n- [Creating a controller](https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg/controller#example-New)\n- [Examples](https://github.com/kubernetes-sigs/controller-runtime/blob/main/examples)\n- [Designs](https://github.com/kubernetes-sigs/controller-runtime/blob/main/designs)\n\n# Versioning, Maintenance, and Compatibility\n\nThe full documentation can be found at [VERSIONING.md](VERSIONING.md), but TL;DR:\n\nUsers:\n\n- We follow [Semantic Versioning (semver)](https://semver.org)\n- Use releases with your dependency management to ensure that you get compatible code\n- The main branch contains all the latest code, some of which may break compatibility (so \"normal\" `go get` is not recommended)\n\nContributors:\n\n- All code PR must be labeled with :bug: (patch fixes), :sparkles: (backwards-compatible features), or :warning: (breaking changes)\n- Breaking changes will find their way into the next major release, other changes will go into an semi-immediate patch or minor release\n- For a quick PR template suggesting the right information, use one of these PR templates:\n  * [Breaking Changes/Features](/.github/PULL_REQUEST_TEMPLATE/breaking_change.md)\n  * [Backwards-Compatible Features](/.github/PULL_REQUEST_TEMPLATE/compat_feature.md)\n  * [Bug fixes](/.github/PULL_REQUEST_TEMPLATE/bug_fix.md)\n  * [Documentation Changes](/.github/PULL_REQUEST_TEMPLATE/docs.md)\n  * [Test/Build/Other Changes](/.github/PULL_REQUEST_TEMPLATE/other.md)\n\n## Compatibility\n\nEvery minor version of controller-runtime has been tested with a specific minor version of client-go. A controller-runtime minor version *may* be compatible with\nother client-go minor versions, but this is by chance and neither supported nor tested. In general, we create one minor version of controller-runtime\nfor each minor version of client-go and other k8s.io/* dependencies.\n\nThe minimum Go version of controller-runtime is the highest minimum Go version of our Go dependencies. Usually, this will\nbe identical to the minimum Go version of the corresponding k8s.io/* dependencies.\n\nCompatible k8s.io/*, client-go and minimum Go versions can be looked up in our [go.mod](go.mod) file.\n\n|          | k8s.io/*, client-go | minimum Go version |\n|----------|:-------------------:|:------------------:|\n| CR v0.20 |        v0.32        |        1.23        |\n| CR v0.19 |        v0.31        |        1.22        |\n| CR v0.18 |        v0.30        |        1.22        |\n| CR v0.17 |        v0.29        |        1.21        |\n| CR v0.16 |        v0.28        |        1.20        |\n| CR v0.15 |        v0.27        |        1.20        |\n\n## FAQ\n\nSee [FAQ.md](FAQ.md)\n\n## Community, discussion, contribution, and support\n\nLearn how to engage with the Kubernetes community on the [community page](http://kubernetes.io/community/).\n\ncontroller-runtime is a subproject of the [kubebuilder](https://github.com/kubernetes-sigs/kubebuilder) project\nin sig apimachinery.\n\nYou can reach the maintainers of this project at:\n\n- Slack channel: [#controller-runtime](https://kubernetes.slack.com/archives/C02MRBMN00Z)\n- Google Group: [kubebuilder@googlegroups.com](https://groups.google.com/forum/#!forum/kubebuilder)\n\n## Contributing\n\nContributions are greatly appreciated. The maintainers actively manage the issues list, and try to highlight issues suitable for newcomers.\nThe project follows the typical GitHub pull request model. See [CONTRIBUTING.md](CONTRIBUTING.md) for more details.\nBefore starting any work, please either comment on an existing issue, or file a new one.\n\n## Code of conduct\n\nParticipation in the Kubernetes community is governed by the [Kubernetes Code of Conduct](code-of-conduct.md).\n"
        },
        {
          "name": "RELEASE.md",
          "type": "blob",
          "size": 2.5517578125,
          "content": "# Release Process\n\nThe Kubernetes controller-runtime Project is released on an as-needed basis. The process is as follows:\n\n**Note:** Releases are done from the `release-MAJOR.MINOR` branches. For PATCH releases is not required\nto create a new branch you will just need to ensure that all big fixes are cherry-picked into the respective\n`release-MAJOR.MINOR` branch. To know more about versioning check https://semver.org/.\n\n## How to do a release\n\n### Create the new branch and the release tag\n\n1. Create a new branch `git checkout -b release-<MAJOR.MINOR>` from main\n2. Push the new branch to the remote repository\n\n### Now, let's generate the changelog\n\n1. Create the changelog from the new branch `release-<MAJOR.MINOR>` (`git checkout release-<MAJOR.MINOR>`).\nYou will need to use the [kubebuilder-release-tools][kubebuilder-release-tools] to generate the notes. See [here][release-notes-generation]\n\n> **Note**\n> - You will need to have checkout locally from the remote repository the previous branch\n> - Also, ensure that you fetch all tags from the remote `git fetch --all --tags`\n\n### Draft a new release from GitHub\n\n1. Create a new tag with the correct version from the new `release-<MAJOR.MINOR>` branch\n2. Add the changelog on it and publish. Now, the code source is released !\n\n### Add a new Prow test the for the new branch release\n\n1. Create a new prow test under [github.com/kubernetes/test-infra/tree/master/config/jobs/kubernetes-sigs/controller-runtime](https://github.com/kubernetes/test-infra/tree/master/config/jobs/kubernetes-sigs/controller-runtime)\nfor the new `release-<MAJOR.MINOR>` branch. (i.e. for the `0.11.0` release see the PR: https://github.com/kubernetes/test-infra/pull/25205)\n2. Ping the infra PR in the controller-runtime slack channel for reviews.\n\n### Announce the new release:\n\n1. Publish on the Slack channel the new release, i.e:\n\n````\n:announce: Controller-Runtime v0.12.0 has been released!\nThis release includes a Kubernetes dependency bump to v1.24.\nFor more info, see the release page: https://github.com/kubernetes-sigs/controller-runtime/releases.\n :tada:  Thanks to all our contributors!\n````\n\n2. An announcement email is sent to `kubebuilder@googlegroups.com` with the subject `[ANNOUNCE] Controller-Runtime $VERSION is released`\n\n[kubebuilder-release-tools]: https://github.com/kubernetes-sigs/kubebuilder-release-tools\n[release-notes-generation]: https://github.com/kubernetes-sigs/kubebuilder-release-tools/blob/master/README.md#release-notes-generation\n[release-process]: https://github.com/kubernetes-sigs/kubebuilder/blob/master/VERSIONING.md#releasing\n"
        },
        {
          "name": "SECURITY_CONTACTS",
          "type": "blob",
          "size": 0.595703125,
          "content": "# Defined below are the security contacts for this repo.\n#\n# They are the contact point for the Product Security Team to reach out\n# to for triaging and handling of incoming issues.\n#\n# The below names agree to abide by the\n# [Embargo Policy](https://github.com/kubernetes/sig-release/blob/master/security-release-process-documentation/security-release-process.md#embargo-policy)\n# and will be removed and replaced if they violate that agreement.\n#\n# DO NOT REPORT SECURITY VULNERABILITIES DIRECTLY TO THESE NAMES, FOLLOW THE\n# INSTRUCTIONS AT https://kubernetes.io/security/\n\nalvaroaleman\nsbueringer\nvincepri\n"
        },
        {
          "name": "TMP-LOGGING.md",
          "type": "blob",
          "size": 6.341796875,
          "content": "Logging Guidelines\n==================\n\ncontroller-runtime uses a kind of logging called *structured logging*. If\nyou've used a library like Zap or logrus before, you'll be familiar with\nthe concepts we use.  If you've only used a logging library like the \"log\"\npackage (in the Go standard library) or \"glog\" (in Kubernetes), you'll\nneed to adjust how you think about logging a bit.\n\n### Getting Started With Structured Logging\n\nWith structured logging, we associate a *constant* log message with some\nvariable key-value pairs.  For instance, suppose we wanted to log that we\nwere starting reconciliation on a pod.  In the Go standard library logger,\nwe might write:\n\n```go\nlog.Printf(\"starting reconciliation for pod %s/%s\", podNamespace, podName)\n```\n\nIn controller-runtime, we'd instead write:\n\n```go\nlogger.Info(\"starting reconciliation\", \"pod\", req.NamespacedName)\n```\n\nor even write\n\n```go\nfunc (r *Reconciler) Reconcile(req reconcile.Request) (reconcile.Response, error) {\n    logger := logger.WithValues(\"pod\", req.NamespacedName)\n    // do some stuff\n    logger.Info(\"starting reconciliation\")\n}\n```\n\nNotice how we've broken out the information that we want to convey into\na constant message (`\"starting reconciliation\"`) and some key-value pairs\nthat convey variable information (`\"pod\", req.NamespacedName`).  We've\nthere-by added \"structure\" to our logs, which makes them easier to save\nand search later, as well as correlate with metrics and events.\n\nAll of controller-runtime's logging is done via\n[logr](https://github.com/go-logr/logr), a generic interface for\nstructured logging.  You can use whichever logging library you want to\nimplement the actual mechanics of the logging.  controller-runtime\nprovides some helpers to make it easy to use\n[Zap](https://go.uber.org/zap) as the implementation.\n\nYou can configure the logging implementation using\n`\"sigs.k8s.io/controller-runtime/pkg/log\".SetLogger`.  That\npackage also contains the convenience functions for setting up Zap.\n\nYou can get a handle to the \"root\" logger using\n`\"sigs.k8s.io/controller-runtime/pkg/log\".Log`, and can then call\n`WithName` to create individual named loggers.  You can call `WithName`\nrepeatedly to chain names together:\n\n```go\nlogger := log.Log.WithName(\"controller\").WithName(\"replicaset\")\n// in reconcile...\nlogger = logger.WithValues(\"replicaset\", req.NamespacedName)\n// later on in reconcile...\nlogger.Info(\"doing things with pods\", \"pod\", newPod)\n```\n\nAs seen above, you can also call `WithValue` to create a new sub-logger\nthat always attaches some key-value pairs to a logger.\n\nFinally, you can use `V(1)` to mark a particular log line as \"debug\" logs:\n\n```go\nlogger.V(1).Info(\"this is particularly verbose!\", \"state of the world\",\nallKubernetesObjectsEverywhere)\n```\n\nWhile it's possible to use higher log levels, it's recommended that you\nstick with `V(1)` or `V(0)` (which is equivalent to not specifying `V`),\nand then filter later based on key-value pairs or messages; different\nnumbers tend to lose meaning easily over time, and you'll be left\nwondering why particular logs lines are at `V(5)` instead of `V(7)`.\n\n## Logging errors\n\nErrors should *always* be logged with `log.Error`, which allows logr\nimplementations to provide special handling of errors (for instance,\nproviding stack traces in debug mode).\n\nIt's acceptable to log call `log.Error` with a nil error object.  This\nconveys that an error occurred in some capacity, but that no actual\n`error` object was involved.\n\nErrors returned by the `Reconcile` implementation of the `Reconciler` interface are commonly logged as a `Reconciler error`.\nIt's a developer choice to create an additional error log in the `Reconcile` implementation so a more specific file name and line for the error are returned. \n\n## Logging messages\n\n- Don't put variable content in your messages -- use key-value pairs for\n  that. Never use `fmt.Sprintf` in your message.\n\n- Try to match the terminology in your messages with your key-value pairs\n  -- for instance, if you have a key-value pairs `api version`, use the\n  term `APIVersion` instead of `GroupVersion` in your message.\n\n## Logging Kubernetes Objects\n\nKubernetes objects should be logged directly, like `log.Info(\"this is\na Kubernetes object\", \"pod\", somePod)`.  controller-runtime provides\na special encoder for Zap that will transform Kubernetes objects into\n`name, namespace, apiVersion, kind` objects, when available and not in\ndevelopment mode.  Other logr implementations should implement similar\nlogic.\n\n## Logging Structured Values (Key-Value pairs)\n\n- Use lower-case, space separated keys.  For example `object` for objects,\n  `api version` for `APIVersion`\n\n- Be consistent across your application, and with controller-runtime when\n  possible.\n\n- Try to be brief but descriptive.\n\n- Match terminology in keys with terminology in the message.\n\n- Be careful logging non-Kubernetes objects verbatim if they're very\n  large.\n\n### Groups, Versions, and Kinds\n\n- Kinds should not be logged alone (they're meaningless alone).  Use\n  a `GroupKind` object to log them instead, or a `GroupVersionKind` when\n  version is relevant.\n\n- If you need to log an API version string, use `api version` as the key\n  (formatted as with a `GroupVersion`, or as received directly from API\n  discovery).\n\n### Objects and Types\n\n- If code works with a generic Kubernetes `runtime.Object`, use the\n  `object` key.  For specific objects, prefer the resource name as the key\n  (e.g. `pod` for `v1.Pod` objects).\n\n- For non-Kubernetes objects, the `object` key may also be used, if you\n  accept a generic interface.\n\n- When logging a raw type, log it using the `type` key, with a value of\n  `fmt.Sprintf(\"%T\", typ)`\n\n- If there's specific context around a type, the key may be more specific,\n  but should end with `type` -- for instance, `OwnerType` should be logged\n  as `owner` in the context of `log.Error(err, \"Could not get ObjectKinds\n  for OwnerType\", `owner type`, fmt.Sprintf(\"%T\"))`.  When possible, favor\n  communicating kind instead.\n\n### Multiple things\n\n- When logging multiple things, simply pluralize the key.\n\n### controller-runtime Specifics\n\n- Reconcile requests should be logged as `request`, although normal code\n  should favor logging the key.\n\n- Reconcile keys should be logged as with the same key as if you were\n  logging the object directly (e.g. `log.Info(\"reconciling pod\", \"pod\",\n  req.NamespacedName)`).  This ends up having a similar effect to logging\n  the object directly.\n"
        },
        {
          "name": "VERSIONING.md",
          "type": "blob",
          "size": 1.2353515625,
          "content": "# Versioning and Branching in controller-runtime\n\nWe follow the [common KubeBuilder versioning guidelines][guidelines], and\nuse the corresponding tooling.\n\nFor the purposes of the aforementioned guidelines, controller-runtime\ncounts as a \"library project\", but otherwise follows the guidelines\nexactly.\n\n[guidelines]: https://sigs.k8s.io/kubebuilder-release-tools/VERSIONING.md\n\n## Compatibility and Release Support\n\nFor release branches, we generally tend to support backporting one (1)\nmajor release (`release-{X-1}` or `release-0.{Y-1}`), but may go back\nfurther if the need arises and is very pressing (e.g. security updates).\n\n### Dependency Support\n\nNote the [guidelines on dependency versions][dep-versions].  Particularly:\n\n- We **DO** guarantee Kubernetes REST API compatibility -- if a given\n  version of controller-runtime stops working with what should be\n  a supported version of Kubernetes, this is almost certainly a bug.\n\n- We **DO NOT** guarantee any particular compatibility matrix between\n  kubernetes library dependencies (client-go, apimachinery, etc); Such\n  compatibility is infeasible due to the way those libraries are versioned.\n\n[dep-versions]: https://sigs.k8s.io/kubebuilder-release-tools/VERSIONING.md#kubernetes-version-compatibility\n"
        },
        {
          "name": "alias.go",
          "type": "blob",
          "size": 6.5498046875,
          "content": "/*\nCopyright 2018 The Kubernetes Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage controllerruntime\n\nimport (\n\tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\t\"k8s.io/apimachinery/pkg/runtime/schema\"\n\t\"sigs.k8s.io/controller-runtime/pkg/builder\"\n\t\"sigs.k8s.io/controller-runtime/pkg/client/config\"\n\t\"sigs.k8s.io/controller-runtime/pkg/controller/controllerutil\"\n\t\"sigs.k8s.io/controller-runtime/pkg/log\"\n\t\"sigs.k8s.io/controller-runtime/pkg/manager\"\n\t\"sigs.k8s.io/controller-runtime/pkg/manager/signals\"\n\t\"sigs.k8s.io/controller-runtime/pkg/reconcile\"\n\t\"sigs.k8s.io/controller-runtime/pkg/scheme\"\n)\n\n// Builder builds an Application ControllerManagedBy (e.g. Operator) and returns a manager.Manager to start it.\ntype Builder = builder.Builder\n\n// Request contains the information necessary to reconcile a Kubernetes object.  This includes the\n// information to uniquely identify the object - its Name and Namespace.  It does NOT contain information about\n// any specific Event or the object contents itself.\ntype Request = reconcile.Request\n\n// Result contains the result of a Reconciler invocation.\ntype Result = reconcile.Result\n\n// Manager initializes shared dependencies such as Caches and Clients, and provides them to Runnables.\n// A Manager is required to create Controllers.\ntype Manager = manager.Manager\n\n// Options are the arguments for creating a new Manager.\ntype Options = manager.Options\n\n// SchemeBuilder builds a new Scheme for mapping go types to Kubernetes GroupVersionKinds.\ntype SchemeBuilder = scheme.Builder\n\n// GroupVersion contains the \"group\" and the \"version\", which uniquely identifies the API.\ntype GroupVersion = schema.GroupVersion\n\n// GroupResource specifies a Group and a Resource, but does not force a version.  This is useful for identifying\n// concepts during lookup stages without having partially valid types.\ntype GroupResource = schema.GroupResource\n\n// TypeMeta describes an individual object in an API response or request\n// with strings representing the type of the object and its API schema version.\n// Structures that are versioned or persisted should inline TypeMeta.\n//\n// +k8s:deepcopy-gen=false\ntype TypeMeta = metav1.TypeMeta\n\n// ObjectMeta is metadata that all persisted resources must have, which includes all objects\n// users must create.\ntype ObjectMeta = metav1.ObjectMeta\n\nvar (\n\t// RegisterFlags registers flag variables to the given FlagSet if not already registered.\n\t// It uses the default command line FlagSet, if none is provided. Currently, it only registers the kubeconfig flag.\n\tRegisterFlags = config.RegisterFlags\n\n\t// GetConfigOrDie creates a *rest.Config for talking to a Kubernetes apiserver.\n\t// If --kubeconfig is set, will use the kubeconfig file at that location.  Otherwise will assume running\n\t// in cluster and use the cluster provided kubeconfig.\n\t//\n\t// Will log an error and exit if there is an error creating the rest.Config.\n\tGetConfigOrDie = config.GetConfigOrDie\n\n\t// GetConfig creates a *rest.Config for talking to a Kubernetes apiserver.\n\t// If --kubeconfig is set, will use the kubeconfig file at that location.  Otherwise will assume running\n\t// in cluster and use the cluster provided kubeconfig.\n\t//\n\t// Config precedence\n\t//\n\t// * --kubeconfig flag pointing at a file\n\t//\n\t// * KUBECONFIG environment variable pointing at a file\n\t//\n\t// * In-cluster config if running in cluster\n\t//\n\t// * $HOME/.kube/config if exists.\n\tGetConfig = config.GetConfig\n\n\t// NewControllerManagedBy returns a new controller builder that will be started by the provided Manager.\n\tNewControllerManagedBy = builder.ControllerManagedBy\n\n\t// NewWebhookManagedBy returns a new webhook builder that will be started by the provided Manager.\n\tNewWebhookManagedBy = builder.WebhookManagedBy\n\n\t// NewManager returns a new Manager for creating Controllers.\n\t// Note that if ContentType in the given config is not set, \"application/vnd.kubernetes.protobuf\"\n\t// will be used for all built-in resources of Kubernetes, and \"application/json\" is for other types\n\t// including all CRD resources.\n\tNewManager = manager.New\n\n\t// CreateOrUpdate creates or updates the given object obj in the Kubernetes\n\t// cluster. The object's desired state should be reconciled with the existing\n\t// state using the passed in ReconcileFn. obj must be a struct pointer so that\n\t// obj can be updated with the content returned by the Server.\n\t//\n\t// It returns the executed operation and an error.\n\tCreateOrUpdate = controllerutil.CreateOrUpdate\n\n\t// SetControllerReference sets owner as a Controller OwnerReference on owned.\n\t// This is used for garbage collection of the owned object and for\n\t// reconciling the owner object on changes to owned (with a Watch + EnqueueRequestForOwner).\n\t// Since only one OwnerReference can be a controller, it returns an error if\n\t// there is another OwnerReference with Controller flag set.\n\tSetControllerReference = controllerutil.SetControllerReference\n\n\t// SetupSignalHandler registers for SIGTERM and SIGINT. A context is returned\n\t// which is canceled on one of these signals. If a second signal is caught, the program\n\t// is terminated with exit code 1.\n\tSetupSignalHandler = signals.SetupSignalHandler\n\n\t// Log is the base logger used by controller-runtime.  It delegates\n\t// to another logr.Logger.  You *must* call SetLogger to\n\t// get any actual logging.\n\tLog = log.Log\n\n\t// LoggerFrom returns a logger with predefined values from a context.Context.\n\t// The logger, when used with controllers, can be expected to contain basic information about the object\n\t// that's being reconciled like:\n\t// - `reconciler group` and `reconciler kind` coming from the For(...) object passed in when building a controller.\n\t// - `name` and `namespace` from the reconciliation request.\n\t//\n\t// This is meant to be used with the context supplied in a struct that satisfies the Reconciler interface.\n\tLoggerFrom = log.FromContext\n\n\t// LoggerInto takes a context and sets the logger as one of its keys.\n\t//\n\t// This is meant to be used in reconcilers to enrich the logger within a context with additional values.\n\tLoggerInto = log.IntoContext\n\n\t// SetLogger sets a concrete logging implementation for all deferred Loggers.\n\tSetLogger = log.SetLogger\n)\n"
        },
        {
          "name": "code-of-conduct.md",
          "type": "blob",
          "size": 0.14453125,
          "content": "# Kubernetes Community Code of Conduct\n\nPlease refer to our [Kubernetes Community Code of Conduct](https://git.k8s.io/community/code-of-conduct.md)\n"
        },
        {
          "name": "designs",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc.go",
          "type": "blob",
          "size": 5.7294921875,
          "content": "/*\nCopyright 2018 The Kubernetes Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n// Package controllerruntime provides tools to construct Kubernetes-style\n// controllers that manipulate both Kubernetes CRDs and aggregated/built-in\n// Kubernetes APIs.\n//\n// It defines easy helpers for the common use cases when building CRDs, built\n// on top of customizable layers of abstraction.  Common cases should be easy,\n// and uncommon cases should be possible.  In general, controller-runtime tries\n// to guide users towards Kubernetes controller best-practices.\n//\n// # Getting Started\n//\n// The main entrypoint for controller-runtime is this root package, which\n// contains all of the common types needed to get started building controllers:\n//\n//\timport (\n//\t\tctrl \"sigs.k8s.io/controller-runtime\"\n//\t)\n//\n// The examples in this package walk through a basic controller setup.  The\n// kubebuilder book (https://book.kubebuilder.io) has some more in-depth\n// walkthroughs.\n//\n// controller-runtime favors structs with sane defaults over constructors, so\n// it's fairly common to see structs being used directly in controller-runtime.\n//\n// # Organization\n//\n// A brief-ish walkthrough of the layout of this library can be found below. Each\n// package contains more information about how to use it.\n//\n// Frequently asked questions about using controller-runtime and designing\n// controllers can be found at\n// https://github.com/kubernetes-sigs/controller-runtime/blob/main/FAQ.md.\n//\n// # Managers\n//\n// Every controller and webhook is ultimately run by a Manager (pkg/manager). A\n// manager is responsible for running controllers and webhooks, and setting up\n// common dependencies, like shared caches and clients, as\n// well as managing leader election (pkg/leaderelection).  Managers are\n// generally configured to gracefully shut down controllers on pod termination\n// by wiring up a signal handler (pkg/manager/signals).\n//\n// # Controllers\n//\n// Controllers (pkg/controller) use events (pkg/event) to eventually trigger\n// reconcile requests.  They may be constructed manually, but are often\n// constructed with a Builder (pkg/builder), which eases the wiring of event\n// sources (pkg/source), like Kubernetes API object changes, to event handlers\n// (pkg/handler), like \"enqueue a reconcile request for the object owner\".\n// Predicates (pkg/predicate) can be used to filter which events actually\n// trigger reconciles.  There are pre-written utilities for the common cases, and\n// interfaces and helpers for advanced cases.\n//\n// # Reconcilers\n//\n// Controller logic is implemented in terms of Reconcilers (pkg/reconcile).  A\n// Reconciler implements a function which takes a reconcile Request containing\n// the name and namespace of the object to reconcile, reconciles the object,\n// and returns a Response or an error indicating whether to requeue for a\n// second round of processing.\n//\n// # Clients and Caches\n//\n// Reconcilers use Clients (pkg/client) to access API objects.  The default\n// client provided by the manager reads from a local shared cache (pkg/cache)\n// and writes directly to the API server, but clients can be constructed that\n// only talk to the API server, without a cache.  The Cache will auto-populate\n// with watched objects, as well as when other structured objects are\n// requested. The default split client does not promise to invalidate the cache\n// during writes (nor does it promise sequential create/get coherence), and code\n// should not assume a get immediately following a create/update will return\n// the updated resource. Caches may also have indexes, which can be created via\n// a FieldIndexer (pkg/client) obtained from the manager.  Indexes can used to\n// quickly and easily look up all objects with certain fields set.  Reconcilers\n// may retrieve event recorders (pkg/recorder) to emit events using the\n// manager.\n//\n// # Schemes\n//\n// Clients, Caches, and many other things in Kubernetes use Schemes\n// (pkg/scheme) to associate Go types to Kubernetes API Kinds\n// (Group-Version-Kinds, to be specific).\n//\n// # Webhooks\n//\n// Similarly, webhooks (pkg/webhook/admission) may be implemented directly, but\n// are often constructed using a builder (pkg/webhook/admission/builder).  They\n// are run via a server (pkg/webhook) which is managed by a Manager.\n//\n// # Logging and Metrics\n//\n// Logging (pkg/log) in controller-runtime is done via structured logs, using a\n// log set of interfaces called logr\n// (https://pkg.go.dev/github.com/go-logr/logr).  While controller-runtime\n// provides easy setup for using Zap (https://go.uber.org/zap, pkg/log/zap),\n// you can provide any implementation of logr as the base logger for\n// controller-runtime.\n//\n// Metrics (pkg/metrics) provided by controller-runtime are registered into a\n// controller-runtime-specific Prometheus metrics registry.  The manager can\n// serve these by an HTTP endpoint, and additional metrics may be registered to\n// this Registry as normal.\n//\n// # Testing\n//\n// You can easily build integration and unit tests for your controllers and\n// webhooks using the test Environment (pkg/envtest).  This will automatically\n// stand up a copy of etcd and kube-apiserver, and provide the correct options\n// to connect to the API server.  It's designed to work well with the Ginkgo\n// testing framework, but should work with any testing setup.\npackage controllerruntime\n"
        },
        {
          "name": "example_test.go",
          "type": "blob",
          "size": 7.6650390625,
          "content": "/*\nCopyright 2018 The Kubernetes Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage controllerruntime_test\n\nimport (\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"os\"\n\t\"time\"\n\n\tappsv1 \"k8s.io/api/apps/v1\"\n\tcorev1 \"k8s.io/api/core/v1\"\n\tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\t\"k8s.io/apimachinery/pkg/runtime\"\n\t\"k8s.io/apimachinery/pkg/types\"\n\n\tctrl \"sigs.k8s.io/controller-runtime\"\n\t\"sigs.k8s.io/controller-runtime/pkg/client\"\n\t\"sigs.k8s.io/controller-runtime/pkg/handler\"\n\t\"sigs.k8s.io/controller-runtime/pkg/reconcile\"\n\n\t// since we invoke tests with -ginkgo.junit-report we need to import ginkgo.\n\t_ \"github.com/onsi/ginkgo/v2\"\n)\n\n// This example creates a simple application Controller that is configured for ReplicaSets and Pods.\n//\n// * Create a new application for ReplicaSets that manages Pods owned by the ReplicaSet and calls into\n// ReplicaSetReconciler.\n//\n// * Start the application.\nfunc Example() {\n\tlog := ctrl.Log.WithName(\"builder-examples\")\n\n\tmanager, err := ctrl.NewManager(ctrl.GetConfigOrDie(), ctrl.Options{})\n\tif err != nil {\n\t\tlog.Error(err, \"could not create manager\")\n\t\tos.Exit(1)\n\t}\n\n\terr = ctrl.\n\t\tNewControllerManagedBy(manager). // Create the Controller\n\t\tFor(&appsv1.ReplicaSet{}).       // ReplicaSet is the Application API\n\t\tOwns(&corev1.Pod{}).             // ReplicaSet owns Pods created by it\n\t\tComplete(&ReplicaSetReconciler{Client: manager.GetClient()})\n\tif err != nil {\n\t\tlog.Error(err, \"could not create controller\")\n\t\tos.Exit(1)\n\t}\n\n\tif err := manager.Start(ctrl.SetupSignalHandler()); err != nil {\n\t\tlog.Error(err, \"could not start manager\")\n\t\tos.Exit(1)\n\t}\n}\n\ntype ExampleCRDWithConfigMapRef struct {\n\tmetav1.TypeMeta   `json:\",inline\"`\n\tmetav1.ObjectMeta `json:\"metadata,omitempty\"`\n\tConfigMapRef      corev1.LocalObjectReference `json:\"configMapRef\"`\n}\n\nfunc deepCopyObject(arg any) runtime.Object {\n\t// DO NOT use this code in production code, this is only for presentation purposes.\n\t// in real code you should generate DeepCopy methods by using controller-gen CLI tool.\n\targBytes, err := json.Marshal(arg)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tout := &ExampleCRDWithConfigMapRefList{}\n\tif err := json.Unmarshal(argBytes, out); err != nil {\n\t\tpanic(err)\n\t}\n\treturn out\n}\n\n// DeepCopyObject implements client.Object.\nfunc (in *ExampleCRDWithConfigMapRef) DeepCopyObject() runtime.Object {\n\treturn deepCopyObject(in)\n}\n\ntype ExampleCRDWithConfigMapRefList struct {\n\tmetav1.TypeMeta `json:\",inline\"`\n\tmetav1.ListMeta `json:\"metadata,omitempty\"`\n\tItems           []ExampleCRDWithConfigMapRef `json:\"items\"`\n}\n\n// DeepCopyObject implements client.ObjectList.\nfunc (in *ExampleCRDWithConfigMapRefList) DeepCopyObject() runtime.Object {\n\treturn deepCopyObject(in)\n}\n\n// This example creates a simple application Controller that is configured for ExampleCRDWithConfigMapRef CRD.\n// Any change in the configMap referenced in this Custom Resource will cause the re-reconcile of the parent ExampleCRDWithConfigMapRef\n// due to the implementation of the .Watches method of \"sigs.k8s.io/controller-runtime/pkg/builder\".Builder.\nfunc Example_customHandler() {\n\tlog := ctrl.Log.WithName(\"builder-examples\")\n\n\tmanager, err := ctrl.NewManager(ctrl.GetConfigOrDie(), ctrl.Options{})\n\tif err != nil {\n\t\tlog.Error(err, \"could not create manager\")\n\t\tos.Exit(1)\n\t}\n\n\terr = ctrl.\n\t\tNewControllerManagedBy(manager).\n\t\tFor(&ExampleCRDWithConfigMapRef{}).\n\t\tWatches(&corev1.ConfigMap{}, handler.EnqueueRequestsFromMapFunc(func(ctx context.Context, cm client.Object) []ctrl.Request {\n\t\t\t// map a change from referenced configMap to ExampleCRDWithConfigMapRef, which causes its re-reconcile\n\t\t\tcrList := &ExampleCRDWithConfigMapRefList{}\n\t\t\tif err := manager.GetClient().List(ctx, crList); err != nil {\n\t\t\t\tmanager.GetLogger().Error(err, \"while listing ExampleCRDWithConfigMapRefs\")\n\t\t\t\treturn nil\n\t\t\t}\n\n\t\t\treqs := make([]ctrl.Request, 0, len(crList.Items))\n\t\t\tfor _, item := range crList.Items {\n\t\t\t\tif item.ConfigMapRef.Name == cm.GetName() {\n\t\t\t\t\treqs = append(reqs, ctrl.Request{\n\t\t\t\t\t\tNamespacedName: types.NamespacedName{\n\t\t\t\t\t\t\tNamespace: item.GetNamespace(),\n\t\t\t\t\t\t\tName:      item.GetName(),\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn reqs\n\t\t})).\n\t\tComplete(reconcile.Func(func(ctx context.Context, r reconcile.Request) (reconcile.Result, error) {\n\t\t\t// Your business logic to implement the API by creating, updating, deleting objects goes here.\n\t\t\treturn reconcile.Result{}, nil\n\t\t}))\n\tif err != nil {\n\t\tlog.Error(err, \"could not create controller\")\n\t\tos.Exit(1)\n\t}\n\n\tif err := manager.Start(ctrl.SetupSignalHandler()); err != nil {\n\t\tlog.Error(err, \"could not start manager\")\n\t\tos.Exit(1)\n\t}\n}\n\n// This example creates a simple application Controller that is configured for ReplicaSets and Pods.\n// This application controller will be running leader election with the provided configuration in the manager options.\n// If leader election configuration is not provided, controller runs leader election with default values.\n// Default values taken from: https://github.com/kubernetes/component-base/blob/master/config/v1alpha1/defaults.go\n// * defaultLeaseDuration = 15 * time.Second\n// * defaultRenewDeadline = 10 * time.Second\n// * defaultRetryPeriod   = 2 * time.Second\n//\n// * Create a new application for ReplicaSets that manages Pods owned by the ReplicaSet and calls into\n// ReplicaSetReconciler.\n//\n// * Start the application.\nfunc Example_updateLeaderElectionDurations() {\n\tlog := ctrl.Log.WithName(\"builder-examples\")\n\tleaseDuration := 100 * time.Second\n\trenewDeadline := 80 * time.Second\n\tretryPeriod := 20 * time.Second\n\tmanager, err := ctrl.NewManager(\n\t\tctrl.GetConfigOrDie(),\n\t\tctrl.Options{\n\t\t\tLeaseDuration: &leaseDuration,\n\t\t\tRenewDeadline: &renewDeadline,\n\t\t\tRetryPeriod:   &retryPeriod,\n\t\t})\n\tif err != nil {\n\t\tlog.Error(err, \"could not create manager\")\n\t\tos.Exit(1)\n\t}\n\n\terr = ctrl.\n\t\tNewControllerManagedBy(manager). // Create the Controller\n\t\tFor(&appsv1.ReplicaSet{}).       // ReplicaSet is the Application API\n\t\tOwns(&corev1.Pod{}).             // ReplicaSet owns Pods created by it\n\t\tComplete(&ReplicaSetReconciler{Client: manager.GetClient()})\n\tif err != nil {\n\t\tlog.Error(err, \"could not create controller\")\n\t\tos.Exit(1)\n\t}\n\n\tif err := manager.Start(ctrl.SetupSignalHandler()); err != nil {\n\t\tlog.Error(err, \"could not start manager\")\n\t\tos.Exit(1)\n\t}\n}\n\n// ReplicaSetReconciler is a simple Controller example implementation.\ntype ReplicaSetReconciler struct {\n\tclient.Client\n}\n\n// Implement the business logic:\n// This function will be called when there is a change to a ReplicaSet or a Pod with an OwnerReference\n// to a ReplicaSet.\n//\n// * Read the ReplicaSet\n// * Read the Pods\n// * Set a Label on the ReplicaSet with the Pod count.\nfunc (a *ReplicaSetReconciler) Reconcile(ctx context.Context, req ctrl.Request) (ctrl.Result, error) {\n\t// Read the ReplicaSet\n\trs := &appsv1.ReplicaSet{}\n\terr := a.Get(ctx, req.NamespacedName, rs)\n\tif err != nil {\n\t\treturn ctrl.Result{}, err\n\t}\n\n\t// List the Pods matching the PodTemplate Labels\n\tpods := &corev1.PodList{}\n\terr = a.List(ctx, pods, client.InNamespace(req.Namespace), client.MatchingLabels(rs.Spec.Template.Labels))\n\tif err != nil {\n\t\treturn ctrl.Result{}, err\n\t}\n\n\t// Update the ReplicaSet\n\trs.Labels[\"pod-count\"] = fmt.Sprintf(\"%v\", len(pods.Items))\n\terr = a.Update(ctx, rs)\n\tif err != nil {\n\t\treturn ctrl.Result{}, err\n\t}\n\n\treturn ctrl.Result{}, nil\n}\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 4.2744140625,
          "content": "module sigs.k8s.io/controller-runtime\n\ngo 1.23.0\n\nrequire (\n\tgithub.com/evanphx/json-patch/v5 v5.9.0\n\tgithub.com/fsnotify/fsnotify v1.7.0\n\tgithub.com/go-logr/logr v1.4.2\n\tgithub.com/go-logr/zapr v1.3.0\n\tgithub.com/google/btree v1.1.3\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/google/gofuzz v1.2.0\n\tgithub.com/onsi/ginkgo/v2 v2.21.0\n\tgithub.com/onsi/gomega v1.35.1\n\tgithub.com/prometheus/client_golang v1.19.1\n\tgithub.com/prometheus/client_model v0.6.1\n\tgo.uber.org/goleak v1.3.0\n\tgo.uber.org/zap v1.27.0\n\tgolang.org/x/exp v0.0.0-20240719175910-8a7402abbf56 // indirect\n\tgolang.org/x/mod v0.21.0\n\tgolang.org/x/sync v0.8.0\n\tgolang.org/x/sys v0.26.0\n\tgomodules.xyz/jsonpatch/v2 v2.4.0\n\tgopkg.in/evanphx/json-patch.v4 v4.12.0 // Using v4 to match upstream\n\tk8s.io/api v0.32.0\n\tk8s.io/apiextensions-apiserver v0.32.0\n\tk8s.io/apimachinery v0.32.0\n\tk8s.io/apiserver v0.32.0\n\tk8s.io/client-go v0.32.0\n\tk8s.io/klog/v2 v2.130.1\n\tk8s.io/utils v0.0.0-20241104100929-3ea5e8cea738\n\tsigs.k8s.io/yaml v1.4.0\n)\n\nrequire (\n\tcel.dev/expr v0.18.0 // indirect\n\tgithub.com/antlr4-go/antlr/v4 v4.13.0 // indirect\n\tgithub.com/asaskevich/govalidator v0.0.0-20190424111038-f61b66f89f4a // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/blang/semver/v4 v4.0.0 // indirect\n\tgithub.com/cenkalti/backoff/v4 v4.3.0 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc // indirect\n\tgithub.com/emicklei/go-restful/v3 v3.11.0 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/fxamacker/cbor/v2 v2.7.0 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/go-openapi/jsonpointer v0.21.0 // indirect\n\tgithub.com/go-openapi/jsonreference v0.20.2 // indirect\n\tgithub.com/go-openapi/swag v0.23.0 // indirect\n\tgithub.com/go-task/slim-sprig/v3 v3.0.0 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang/protobuf v1.5.4 // indirect\n\tgithub.com/google/cel-go v0.22.0 // indirect\n\tgithub.com/google/gnostic-models v0.6.8 // indirect\n\tgithub.com/google/pprof v0.0.0-20241029153458-d1b30febd7db // indirect\n\tgithub.com/google/uuid v1.6.0 // indirect\n\tgithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/josharian/intern v1.0.0 // indirect\n\tgithub.com/json-iterator/go v1.1.12 // indirect\n\tgithub.com/mailru/easyjson v0.7.7 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/prometheus/common v0.55.0 // indirect\n\tgithub.com/prometheus/procfs v0.15.1 // indirect\n\tgithub.com/spf13/cobra v1.8.1 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgithub.com/stoewer/go-strcase v1.3.0 // indirect\n\tgithub.com/x448/float16 v0.8.4 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0 // indirect\n\tgo.opentelemetry.io/otel v1.28.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.27.0 // indirect\n\tgo.opentelemetry.io/otel/metric v1.28.0 // indirect\n\tgo.opentelemetry.io/otel/sdk v1.28.0 // indirect\n\tgo.opentelemetry.io/otel/trace v1.28.0 // indirect\n\tgo.opentelemetry.io/proto/otlp v1.3.1 // indirect\n\tgo.uber.org/multierr v1.11.0 // indirect\n\tgolang.org/x/net v0.30.0 // indirect\n\tgolang.org/x/oauth2 v0.23.0 // indirect\n\tgolang.org/x/term v0.25.0 // indirect\n\tgolang.org/x/text v0.19.0 // indirect\n\tgolang.org/x/time v0.7.0 // indirect\n\tgolang.org/x/tools v0.26.0 // indirect\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20240826202546-f6391c0de4c7 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240826202546-f6391c0de4c7 // indirect\n\tgoogle.golang.org/grpc v1.65.0 // indirect\n\tgoogle.golang.org/protobuf v1.35.1 // indirect\n\tgopkg.in/inf.v0 v0.9.1 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n\tk8s.io/component-base v0.32.0 // indirect\n\tk8s.io/kube-openapi v0.0.0-20241105132330-32ad38e42d3f // indirect\n\tsigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.31.0 // indirect\n\tsigs.k8s.io/json v0.0.0-20241010143419-9aa6b5e7a4b3 // indirect\n\tsigs.k8s.io/structured-merge-diff/v4 v4.4.2 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 22.01171875,
          "content": "cel.dev/expr v0.18.0 h1:CJ6drgk+Hf96lkLikr4rFf19WrU0BOWEihyZnI2TAzo=\ncel.dev/expr v0.18.0/go.mod h1:MrpN08Q+lEBs+bGYdLxxHkZoUSsCp0nSKTs0nTymJgw=\ngithub.com/antlr4-go/antlr/v4 v4.13.0 h1:lxCg3LAv+EUK6t1i0y1V6/SLeUi0eKEKdhQAlS8TVTI=\ngithub.com/antlr4-go/antlr/v4 v4.13.0/go.mod h1:pfChB/xh/Unjila75QW7+VU4TSnWnnk9UTnmpPaOR2g=\ngithub.com/asaskevich/govalidator v0.0.0-20190424111038-f61b66f89f4a h1:idn718Q4B6AGu/h5Sxe66HYVdqdGu2l9Iebqhi/AEoA=\ngithub.com/asaskevich/govalidator v0.0.0-20190424111038-f61b66f89f4a/go.mod h1:lB+ZfQJz7igIIfQNfa7Ml4HSf2uFQQRzpGGRXenZAgY=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/blang/semver/v4 v4.0.0 h1:1PFHFE6yCCTv8C1TeyNNarDzntLi7wMI5i/pzqYIsAM=\ngithub.com/blang/semver/v4 v4.0.0/go.mod h1:IbckMUScFkM3pff0VJDNKRiT6TG/YpiHIM2yvyW5YoQ=\ngithub.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=\ngithub.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/emicklei/go-restful/v3 v3.11.0 h1:rAQeMHw1c7zTmncogyy8VvRZwtkmkZ4FxERmMY4rD+g=\ngithub.com/emicklei/go-restful/v3 v3.11.0/go.mod h1:6n3XBCmQQb25CM2LCACGz8ukIrRry+4bhvbpWn3mrbc=\ngithub.com/evanphx/json-patch v0.5.2 h1:xVCHIVMUu1wtM/VkR9jVZ45N3FhZfYMMYGorLCR8P3k=\ngithub.com/evanphx/json-patch v0.5.2/go.mod h1:ZWS5hhDbVDyob71nXKNL0+PWn6ToqBHMikGIFbs31qQ=\ngithub.com/evanphx/json-patch/v5 v5.9.0 h1:kcBlZQbplgElYIlo/n1hJbls2z/1awpXxpRi0/FOJfg=\ngithub.com/evanphx/json-patch/v5 v5.9.0/go.mod h1:VNkHZ/282BpEyt/tObQO8s5CMPmYYq14uClGH4abBuQ=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=\ngithub.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=\ngithub.com/fxamacker/cbor/v2 v2.7.0 h1:iM5WgngdRBanHcxugY4JySA0nk1wZorNOpTgCMedv5E=\ngithub.com/fxamacker/cbor/v2 v2.7.0/go.mod h1:pxXPTn3joSm21Gbwsv0w9OSA2y1HFR9qXEeXQVeNoDQ=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-logr/zapr v1.3.0 h1:XGdV8XW8zdwFiwOA2Dryh1gj2KRQyOOoNmBy4EplIcQ=\ngithub.com/go-logr/zapr v1.3.0/go.mod h1:YKepepNBd1u/oyhd/yQmtjVXmm9uML4IXUgMOwR8/Gg=\ngithub.com/go-openapi/jsonpointer v0.19.6/go.mod h1:osyAmYz/mB/C3I+WsTTSgw1ONzaLJoLCyoi6/zppojs=\ngithub.com/go-openapi/jsonpointer v0.21.0 h1:YgdVicSA9vH5RiHs9TZW5oyafXZFc6+2Vc1rr/O9oNQ=\ngithub.com/go-openapi/jsonpointer v0.21.0/go.mod h1:IUyH9l/+uyhIYQ/PXVA41Rexl+kOkAPDdXEYns6fzUY=\ngithub.com/go-openapi/jsonreference v0.20.2 h1:3sVjiK66+uXK/6oQ8xgcRKcFgQ5KXa2KvnJRumpMGbE=\ngithub.com/go-openapi/jsonreference v0.20.2/go.mod h1:Bl1zwGIM8/wsvqjsOQLJ/SH+En5Ap4rVB5KVcIDZG2k=\ngithub.com/go-openapi/swag v0.22.3/go.mod h1:UzaqsxGiab7freDnrUUra0MwWfN/q7tE4j+VcZ0yl14=\ngithub.com/go-openapi/swag v0.23.0 h1:vsEVJDUo2hPJ2tu0/Xc+4noaxyEffXNIs3cOULZ+GrE=\ngithub.com/go-openapi/swag v0.23.0/go.mod h1:esZ8ITTYEsH1V2trKHjAN8Ai7xHb8RV+YSZ577vPjgQ=\ngithub.com/go-task/slim-sprig/v3 v3.0.0 h1:sUs3vkvUymDpBKi3qH1YSqBQk9+9D/8M2mN1vB6EwHI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0/go.mod h1:W848ghGpv3Qj3dhTPRyJypKRiqCdHZiAzKg9hl15HA8=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/btree v1.1.3 h1:CVpQJjYgC4VbzxeGVHfvZrv1ctoYCAI8vbl07Fcxlyg=\ngithub.com/google/btree v1.1.3/go.mod h1:qOPhT0dTNdNzV6Z/lhRX0YXUafgPLFUh+gZMl761Gm4=\ngithub.com/google/cel-go v0.22.0 h1:b3FJZxpiv1vTMo2/5RDUqAHPxkT8mmMfJIrq1llbf7g=\ngithub.com/google/cel-go v0.22.0/go.mod h1:BuznPXXfQDpXKWQ9sPW3TzlAJN5zzFe+i9tIs0yC4s8=\ngithub.com/google/gnostic-models v0.6.8 h1:yo/ABAfM5IMRsS1VnXjTBvUb61tFIHozhlYvRgGre9I=\ngithub.com/google/gnostic-models v0.6.8/go.mod h1:5n7qKqH0f5wFt+aWF8CW6pZLLNOfYuF5OpfBSENuI8U=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/gofuzz v1.2.0 h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=\ngithub.com/google/gofuzz v1.2.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/pprof v0.0.0-20241029153458-d1b30febd7db h1:097atOisP2aRj7vFgYQBbFN4U4JNXUNYpxael3UzMyo=\ngithub.com/google/pprof v0.0.0-20241029153458-d1b30febd7db/go.mod h1:vavhavw2zAxS5dIdcRluK6cSGGPlZynqzFM8NdvU144=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 h1:bkypFPDjIYGfCYD5mRBvpqxfYX1YCS1PXdKYWi8FsN0=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0/go.mod h1:P+Lt/0by1T8bfcF3z737NnSbmxQAppXMRziHUxPOC8k=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/josharian/intern v1.0.0 h1:vlS4z54oSdjm0bgjRigI+G1HpF+tI+9rE5LLzOg8HmY=\ngithub.com/josharian/intern v1.0.0/go.mod h1:5DoeVV0s6jJacbCEi61lwdGj/aVlrQvzHFFd8Hwg//Y=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=\ngithub.com/mailru/easyjson v0.7.7/go.mod h1:xzfreul335JAWq5oZzymOObrkdz5UnU4kGfJJLY9Nlc=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/onsi/ginkgo/v2 v2.21.0 h1:7rg/4f3rB88pb5obDgNZrNHrQ4e6WpjonchcpuBRnZM=\ngithub.com/onsi/ginkgo/v2 v2.21.0/go.mod h1:7Du3c42kxCUegi0IImZ1wUQzMBVecgIHjR1C+NkhLQo=\ngithub.com/onsi/gomega v1.35.1 h1:Cwbd75ZBPxFSuZ6T+rN/WCb/gOc6YgFBXLlZLhC7Ds4=\ngithub.com/onsi/gomega v1.35.1/go.mod h1:PvZbdDc8J6XJEpDK4HCuRBm8a6Fzp9/DmhC9C7yFlog=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_golang v1.19.1 h1:wZWJDwK+NameRJuPGDhlnFgx8e8HN3XHQeLaYJFJBOE=\ngithub.com/prometheus/client_golang v1.19.1/go.mod h1:mP78NwGzrVks5S2H6ab8+ZZGJLZUq1hoULYBAYBw1Ho=\ngithub.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=\ngithub.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=\ngithub.com/prometheus/common v0.55.0 h1:KEi6DK7lXW/m7Ig5i47x0vRzuBsHuvJdi5ee6Y3G1dc=\ngithub.com/prometheus/common v0.55.0/go.mod h1:2SECS4xJG1kd8XF9IcM1gMX6510RAEL65zxzNImwdc8=\ngithub.com/prometheus/procfs v0.15.1 h1:YagwOFzUgYfKKHX6Dr+sHT7km/hxC76UB0learggepc=\ngithub.com/prometheus/procfs v0.15.1/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stoewer/go-strcase v1.3.0 h1:g0eASXYtp+yvN9fK8sH94oCIk0fau9uV1/ZdJ0AVEzs=\ngithub.com/stoewer/go-strcase v1.3.0/go.mod h1:fAH5hQ5pehh+j3nZfvwdk2RgEgQjAoM8wodgtPmh1xo=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/x448/float16 v0.8.4 h1:qLwI1I70+NjRFUR3zs1JPUCgaCXSh3SW62uAKT1mSBM=\ngithub.com/x448/float16 v0.8.4/go.mod h1:14CWIYCyZA/cWjXOioeEpHeN/83MdbZDRQHoFcYsOfg=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0 h1:4K4tsIXefpVJtvA/8srF4V4y0akAoPHkIslgAkjixJA=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0/go.mod h1:jjdQuTGVsXV4vSs+CJ2qYDeDPf9yIJV23qlIzBm73Vg=\ngo.opentelemetry.io/otel v1.28.0 h1:/SqNcYk+idO0CxKEUOtKQClMK/MimZihKYMruSMViUo=\ngo.opentelemetry.io/otel v1.28.0/go.mod h1:q68ijF8Fc8CnMHKyzqL6akLO46ePnjkgfIMIjUIX9z4=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0 h1:3Q/xZUyC1BBkualc9ROb4G8qkH90LXEIICcs5zv1OYY=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0/go.mod h1:s75jGIWA9OfCMzF0xr+ZgfrB5FEbbV7UuYo32ahUiFI=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.27.0 h1:qFffATk0X+HD+f1Z8lswGiOQYKHRlzfmdJm0wEaVrFA=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.27.0/go.mod h1:MOiCmryaYtc+V0Ei+Tx9o5S1ZjA7kzLucuVuyzBZloQ=\ngo.opentelemetry.io/otel/metric v1.28.0 h1:f0HGvSl1KRAU1DLgLGFjrwVyismPlnuU6JD6bOeuA5Q=\ngo.opentelemetry.io/otel/metric v1.28.0/go.mod h1:Fb1eVBFZmLVTMb6PPohq3TO9IIhUisDsbJoL/+uQW4s=\ngo.opentelemetry.io/otel/sdk v1.28.0 h1:b9d7hIry8yZsgtbmM0DKyPWMMUMlK9NEKuIG4aBqWyE=\ngo.opentelemetry.io/otel/sdk v1.28.0/go.mod h1:oYj7ClPUA7Iw3m+r7GeEjz0qckQRJK2B8zjcZEfu7Pg=\ngo.opentelemetry.io/otel/trace v1.28.0 h1:GhQ9cUuQGmNDd5BTCP2dAvv75RdMxEfTmYejp+lkx9g=\ngo.opentelemetry.io/otel/trace v1.28.0/go.mod h1:jPyXzNPg6da9+38HEwElrQiHlVMTnVfM3/yv2OlIHaI=\ngo.opentelemetry.io/proto/otlp v1.3.1 h1:TrMUixzpM0yuc/znrFTP9MMRh8trP93mkCiDVeXrui0=\ngo.opentelemetry.io/proto/otlp v1.3.1/go.mod h1:0X1WI4de4ZsLrrJNLAQbFeLCm3T7yBkR0XqQ7niQU+8=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\ngo.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=\ngo.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=\ngo.uber.org/zap v1.27.0 h1:aJMhYGrd5QSmlpLMr2MftRKl7t8J8PTZPA732ud/XR8=\ngo.uber.org/zap v1.27.0/go.mod h1:GB2qFLM7cTU87MWRP2mPIjqfIDnGu+VIO4V/SdhGo2E=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/exp v0.0.0-20240719175910-8a7402abbf56 h1:2dVuKD2vS7b0QIHQbpyTISPd0LeHDbnYEryqj5Q1ug8=\ngolang.org/x/exp v0.0.0-20240719175910-8a7402abbf56/go.mod h1:M4RDyNAINzryxdtnbRXRL/OHtkFuWGRjvuhBJpk2IlY=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.21.0 h1:vvrHzRwRfVKSiLrG+d4FMl/Qi4ukBCE6kZlTUkDYRT0=\ngolang.org/x/mod v0.21.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.30.0 h1:AcW1SDZMkb8IpzCdQUaIq2sP4sZ4zw+55h6ynffypl4=\ngolang.org/x/net v0.30.0/go.mod h1:2wGyMJ5iFasEhkwi13ChkO/t1ECNC4X4eBKkVFyYFlU=\ngolang.org/x/oauth2 v0.23.0 h1:PbgcYx2W7i4LvjJWEbf0ngHV6qJYr86PkAV3bXdLEbs=\ngolang.org/x/oauth2 v0.23.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.8.0 h1:3NFvSEYkUoMifnESzZl15y791HH1qU2xm6eCJU5ZPXQ=\ngolang.org/x/sync v0.8.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.26.0 h1:KHjCJyddX0LoSTb3J+vWpupP9p0oznkqVk/IfjymZbo=\ngolang.org/x/sys v0.26.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.25.0 h1:WtHI/ltw4NvSUig5KARz9h521QvRC8RmF/cuYqifU24=\ngolang.org/x/term v0.25.0/go.mod h1:RPyXicDX+6vLxogjjRxjgD2TKtmAO6NZBsBRfrOLu7M=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.19.0 h1:kTxAhCbGbxhK0IwgSKiMO5awPoDQ0RpfiVYBfK860YM=\ngolang.org/x/text v0.19.0/go.mod h1:BuEKDfySbSR4drPmRPG/7iBdf8hvFMuRexcpahXilzY=\ngolang.org/x/time v0.7.0 h1:ntUhktv3OPE6TgYxXWv9vKvUSJyIFJlyohwbkEwPrKQ=\ngolang.org/x/time v0.7.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.26.0 h1:v/60pFQmzmT9ExmjDv2gGIfi3OqfKoEP6I5+umXlbnQ=\ngolang.org/x/tools v0.26.0/go.mod h1:TPVVj70c7JJ3WCazhD8OdXcZg/og+b9+tH/KxylGwH0=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngomodules.xyz/jsonpatch/v2 v2.4.0 h1:Ci3iUJyx9UeRx7CeFN8ARgGbkESwJK+KB9lLcWxY/Zw=\ngomodules.xyz/jsonpatch/v2 v2.4.0/go.mod h1:AH3dM2RI6uoBZxn3LVrfvJ3E0/9dG4cSrbuBJT4moAY=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240826202546-f6391c0de4c7 h1:YcyjlL1PRr2Q17/I0dPk2JmYS5CDXfcdb2Z3YRioEbw=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240826202546-f6391c0de4c7/go.mod h1:OCdP9MfskevB/rbYvHTsXTtKC+3bHWajPdoKgjcYkfo=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240826202546-f6391c0de4c7 h1:2035KHhUv+EpyB+hWgJnaWKJOdX1E95w2S8Rr4uWKTs=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240826202546-f6391c0de4c7/go.mod h1:UqMtugtsSgubUsoxbuAoiCXvqvErP7Gf0so0mK9tHxU=\ngoogle.golang.org/grpc v1.65.0 h1:bs/cUb4lp1G5iImFFd3u5ixQzweKizoZJAwBNLR42lc=\ngoogle.golang.org/grpc v1.65.0/go.mod h1:WgYC2ypjlB0EiQi6wdKixMqukr6lBc0Vo+oOgjrM5ZQ=\ngoogle.golang.org/protobuf v1.35.1 h1:m3LfL6/Ca+fqnjnlqQXNpFPABW1UD7mjh8KO2mKFytA=\ngoogle.golang.org/protobuf v1.35.1/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/evanphx/json-patch.v4 v4.12.0 h1:n6jtcsulIzXPJaxegRbvFNNrZDjbij7ny3gmSPG+6V4=\ngopkg.in/evanphx/json-patch.v4 v4.12.0/go.mod h1:p8EYWUEYMpynmqDbY58zCKCFZw8pRWMG4EsWvDvM72M=\ngopkg.in/inf.v0 v0.9.1 h1:73M5CoZyi3ZLMOyDlQh031Cx6N9NDJ2Vvfl76EDAgDc=\ngopkg.in/inf.v0 v0.9.1/go.mod h1:cWUDdTG/fYaXco+Dcufb5Vnc6Gp2YChqWtbxRZE0mXw=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nk8s.io/api v0.32.0 h1:OL9JpbvAU5ny9ga2fb24X8H6xQlVp+aJMFlgtQjR9CE=\nk8s.io/api v0.32.0/go.mod h1:4LEwHZEf6Q/cG96F3dqR965sYOfmPM7rq81BLgsE0p0=\nk8s.io/apiextensions-apiserver v0.32.0 h1:S0Xlqt51qzzqjKPxfgX1xh4HBZE+p8KKBq+k2SWNOE0=\nk8s.io/apiextensions-apiserver v0.32.0/go.mod h1:86hblMvN5yxMvZrZFX2OhIHAuFIMJIZ19bTvzkP+Fmw=\nk8s.io/apimachinery v0.32.0 h1:cFSE7N3rmEEtv4ei5X6DaJPHHX0C+upp+v5lVPiEwpg=\nk8s.io/apimachinery v0.32.0/go.mod h1:GpHVgxoKlTxClKcteaeuF1Ul/lDVb74KpZcxcmLDElE=\nk8s.io/apiserver v0.32.0 h1:VJ89ZvQZ8p1sLeiWdRJpRD6oLozNZD2+qVSLi+ft5Qs=\nk8s.io/apiserver v0.32.0/go.mod h1:HFh+dM1/BE/Hm4bS4nTXHVfN6Z6tFIZPi649n83b4Ag=\nk8s.io/client-go v0.32.0 h1:DimtMcnN/JIKZcrSrstiwvvZvLjG0aSxy8PxN8IChp8=\nk8s.io/client-go v0.32.0/go.mod h1:boDWvdM1Drk4NJj/VddSLnx59X3OPgwrOo0vGbtq9+8=\nk8s.io/component-base v0.32.0 h1:d6cWHZkCiiep41ObYQS6IcgzOUQUNpywm39KVYaUqzU=\nk8s.io/component-base v0.32.0/go.mod h1:JLG2W5TUxUu5uDyKiH2R/7NnxJo1HlPoRIIbVLkK5eM=\nk8s.io/klog/v2 v2.130.1 h1:n9Xl7H1Xvksem4KFG4PYbdQCQxqc/tTUyrgXaOhHSzk=\nk8s.io/klog/v2 v2.130.1/go.mod h1:3Jpz1GvMt720eyJH1ckRHK1EDfpxISzJ7I9OYgaDtPE=\nk8s.io/kube-openapi v0.0.0-20241105132330-32ad38e42d3f h1:GA7//TjRY9yWGy1poLzYYJJ4JRdzg3+O6e8I+e+8T5Y=\nk8s.io/kube-openapi v0.0.0-20241105132330-32ad38e42d3f/go.mod h1:R/HEjbvWI0qdfb8viZUeVZm0X6IZnxAydC7YU42CMw4=\nk8s.io/utils v0.0.0-20241104100929-3ea5e8cea738 h1:M3sRQVHv7vB20Xc2ybTt7ODCeFj6JSWYFzOFnYeS6Ro=\nk8s.io/utils v0.0.0-20241104100929-3ea5e8cea738/go.mod h1:OLgZIPagt7ERELqWJFomSt595RzquPNLL48iOWgYOg0=\nsigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.31.0 h1:CPT0ExVicCzcpeN4baWEV2ko2Z/AsiZgEdwgcfwLgMo=\nsigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.31.0/go.mod h1:Ve9uj1L+deCXFrPOk1LpFXqTg7LCFzFso6PA48q/XZw=\nsigs.k8s.io/json v0.0.0-20241010143419-9aa6b5e7a4b3 h1:/Rv+M11QRah1itp8VhT6HoVx1Ray9eB4DBr+K+/sCJ8=\nsigs.k8s.io/json v0.0.0-20241010143419-9aa6b5e7a4b3/go.mod h1:18nIHnGi6636UCz6m8i4DhaJ65T6EruyzmoQqI2BVDo=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.2 h1:MdmvkGuXi/8io6ixD5wud3vOLwc1rj0aNqRlpuvjmwA=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.2/go.mod h1:N8f93tFZh9U6vpxwRArLiikrE5/2tiu1w1AGfACIGE4=\nsigs.k8s.io/yaml v1.4.0 h1:Mk1wCc2gy/F0THH0TAp1QYyJNzRm2KCLy3o5ASXVI5E=\nsigs.k8s.io/yaml v1.4.0/go.mod h1:Ejl7/uTz7PSA4eKMyQCUTnhZYNmLIl+5c2lQPGR2BPY=\n"
        },
        {
          "name": "hack",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}