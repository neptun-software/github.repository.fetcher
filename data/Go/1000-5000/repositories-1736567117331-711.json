{
  "metadata": {
    "timestamp": 1736567117331,
    "page": 711,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kubernetes-retired/heapster",
      "stars": 2626,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1259765625,
          "content": "heapster\neventer\n.cover\n\n# Vim-related files\n[._]*.s[a-w][a-z]\n[._]s[a-w][a-z]\n*.un~\nSession.vim\n.netrwhist\n.idea\n*manifest-tool\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.8623046875,
          "content": "## How to contribute\n\nOpen an issue or a pull request, it's that easy!\n\n## Contributor License Agreements\n\nWe'd love to accept your pull requests! Before we can merge them, we have to jump a couple of legal hurdles.\n\nPlease fill out either the individual or corporate Contributor License Agreement (CLA).\n\n  * If you are an individual writing original source code and you're sure you own the intellectual property, then you'll need to sign an [individual CLA](https://identity.linuxfoundation.org/projects/cncf).\n  * If you work for a company that wants to allow you to contribute your work, then you'll need to sign a [corporate CLA](https://identity.linuxfoundation.org/node/285/organization-signup).\n\nFollow either of the two links above to access the appropriate CLA and instructions for how to sign and return it. Once we receive it, we'll be able to accept your pull requests.\n"
        },
        {
          "name": "Godeps",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.05859375,
          "content": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 4.2021484375,
          "content": "all: build\n\nPREFIX?=staging-k8s.gcr.io\nFLAGS=\nARCH?=amd64\nALL_ARCHITECTURES=amd64 arm arm64 ppc64le s390x\nML_PLATFORMS=linux/amd64,linux/arm,linux/arm64,linux/ppc64le,linux/s390x\nGOLANG_VERSION?=1.8\n\nifndef TEMP_DIR\nTEMP_DIR:=$(shell mktemp -d /tmp/heapster.XXXXXX)\nendif\n\nVERSION?=v1.6.0-beta.1\nGIT_COMMIT:=$(shell git rev-parse --short HEAD)\n\nTESTUSER=\nifdef REPO_DIR\nDOCKER_IN_DOCKER=1\nTESTUSER=jenkins\nelse\nREPO_DIR:=$(shell pwd)\nendif\n\n# You can set this variable for testing and the built image will also be tagged with this name\nOVERRIDE_IMAGE_NAME?=\n\n# If this session isn't interactive, then we don't want to allocate a\n# TTY, which would fail, but if it is interactive, we do want to attach\n# so that the user can send e.g. ^C through.\nINTERACTIVE := $(shell [ -t 0 ] && echo 1 || echo 0)\nTTY=\nifeq ($(INTERACTIVE), 1)\n\tTTY=-t\nendif\n\nSUPPORTED_KUBE_VERSIONS=1.9.3\nTEST_NAMESPACE=heapster-e2e-tests\n\nHEAPSTER_LDFLAGS=-w -X k8s.io/heapster/version.HeapsterVersion=$(VERSION) -X k8s.io/heapster/version.GitCommit=$(GIT_COMMIT)\n\nfmt:\n\tfind . -type f -name \"*.go\" | grep -v \"./vendor*\" | xargs gofmt -s -w\n\nbuild: clean fmt\n\tGOARCH=$(ARCH) CGO_ENABLED=0 go build -ldflags \"$(HEAPSTER_LDFLAGS)\" -o heapster k8s.io/heapster/metrics\n\tGOARCH=$(ARCH) CGO_ENABLED=0 go build -ldflags \"$(HEAPSTER_LDFLAGS)\" -o eventer k8s.io/heapster/events\n\nsanitize:\n\thooks/check_boilerplate.sh\n\t# hooks/check_gofmt.sh\n\thooks/run_vet.sh\n\ntest-unit: clean sanitize build\nifeq ($(ARCH),amd64)\n\tGOARCH=$(ARCH) go test --test.short -race ./... $(FLAGS)\nelse\n\tGOARCH=$(ARCH) go test --test.short ./... $(FLAGS)\nendif\n\ntest-unit-cov: clean sanitize build\n\thooks/coverage.sh\n\ntest-integration: clean build\n\tgo test -v --timeout=60m ./integration/... --vmodule=*=2 $(FLAGS) --namespace=$(TEST_NAMESPACE) --kube_versions=$(SUPPORTED_KUBE_VERSIONS) --test_user=$(TESTUSER) --logtostderr\n\ncontainer:\n\t# Run the build in a container in order to have reproducible builds\n\t# Also, fetch the latest ca certificates\n\tdocker run --rm -i $(TTY) -v $(TEMP_DIR):/build -v $(REPO_DIR):/go/src/k8s.io/heapster -w /go/src/k8s.io/heapster golang:$(GOLANG_VERSION) /bin/bash -c \"\\\n\t\tcp /etc/ssl/certs/ca-certificates.crt /build \\\n\t\t&& GOARCH=$(ARCH) CGO_ENABLED=0 go build -ldflags \\\"$(HEAPSTER_LDFLAGS)\\\" -o /build/heapster k8s.io/heapster/metrics \\\n\t\t&& GOARCH=$(ARCH) CGO_ENABLED=0 go build -ldflags \\\"$(HEAPSTER_LDFLAGS)\\\" -o /build/eventer k8s.io/heapster/events\"\n\n\tcp deploy/docker/Dockerfile $(TEMP_DIR)\n\tdocker build --pull -t $(PREFIX)/heapster-$(ARCH):$(VERSION) $(TEMP_DIR)\nifneq ($(OVERRIDE_IMAGE_NAME),)\n\tdocker tag $(PREFIX)/heapster-$(ARCH):$(VERSION) $(OVERRIDE_IMAGE_NAME)\nendif\n\nifndef DOCKER_IN_DOCKER\n\trm -rf $(TEMP_DIR)\nendif\n\ndo-push:\n\tdocker push $(PREFIX)/heapster-$(ARCH):$(VERSION)\nifeq ($(ARCH),amd64)\n# TODO: Remove this and push the manifest list as soon as it's working\n\tdocker tag $(PREFIX)/heapster-$(ARCH):$(VERSION) $(PREFIX)/heapster:$(VERSION)\n\tdocker push $(PREFIX)/heapster:$(VERSION)\nendif\n\n# Should depend on target: ./manifest-tool\npush: gcr-login $(addprefix sub-push-,$(ALL_ARCHITECTURES))\n#\t./manifest-tool push from-args --platforms $(ML_PLATFORMS) --template $(PREFIX)/heapster-ARCH:$(VERSION) --target $(PREFIX)/heapster:$(VERSION)\n\nsub-push-%:\n\t$(MAKE) ARCH=$* PREFIX=$(PREFIX) VERSION=$(VERSION) container\n\t$(MAKE) ARCH=$* PREFIX=$(PREFIX) VERSION=$(VERSION) do-push\n\ninfluxdb:\n\tARCH=$(ARCH) PREFIX=$(PREFIX) make -C influxdb build\n\ngrafana:\n\tARCH=$(ARCH) PREFIX=$(PREFIX) make -C grafana build\n\npush-influxdb:\n\tPREFIX=$(PREFIX) make -C influxdb push\n\npush-grafana:\n\tPREFIX=$(PREFIX) make -C grafana push\n\ngcr-login:\nifeq ($(findstring gcr.io,$(PREFIX)),gcr.io)\n\t@echo \"If you are pushing to a gcr.io registry, you have to be logged in via 'docker login'; 'gcloud docker push' can't push manifest lists yet.\"\n\t@echo \"This script is automatically logging you in now with 'gcloud docker -a'\"\n\tgcloud docker -a\nendif\n\n# TODO(luxas): As soon as it's working to push fat manifests to gcr.io, reenable this code\n#./manifest-tool:\n#\tcurl -sSL https://github.com/luxas/manifest-tool/releases/download/v0.3.0/manifest-tool > manifest-tool\n#\tchmod +x manifest-tool\n\nclean:\n\trm -f heapster\n\trm -f eventer\n\n.PHONY: all build sanitize test-unit test-unit-cov test-integration container grafana influxdb clean\n"
        },
        {
          "name": "OWNERS",
          "type": "blob",
          "size": 0.18359375,
          "content": "reviewers:\n- DirectXMan12\n- piosz\n- x13n\n- kawych\n- loburm\n- mwieglus\n- huangyuqi\n- andyxning\napprovers:\n- DirectXMan12\n- piosz\n- x13n\n- kawych\n- loburm\n- mwieglus\n- huangyuqi\n- andyxning\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.287109375,
          "content": "# Heapster\n\n***RETIRED***: Heapster is now retired.  See the [deprecation timeline](docs/deprecation.md)\nfor more information on support. We will not be making changes to Heapster.\n\nThe following are potential migration paths for Heapster functionality:\n\n- **For basic CPU/memory HPA metrics**: Use [metrics-server](https://github.com/kubernetes-incubator/metrics-server).\n\n- **For general monitoring**: Consider a third-party monitoring pipeline that can gather Prometheus-formatted metrics.\n  The kubelet exposes all the metrics exported by Heapster in Prometheus format.\n  One such monitoring pipeline can be set up using the [Prometheus Operator](https://github.com/coreos/prometheus-operator), which\n  deploys Prometheus itself for this purpose.\n\n- **For event transfer**: Several third-party tools exist to transfer/archive Kubernetes events, depending on your sink.\n  [heptiolabs/eventrouter](https://github.com/heptiolabs/eventrouter) has been suggested as a general alternative.\n\n[![GoDoc](https://godoc.org/k8s.io/heapster?status.svg)](https://godoc.org/k8s.io/heapster) [![Build Status](https://travis-ci.org/kubernetes/heapster.svg?branch=master)](https://travis-ci.org/kubernetes/heapster)  [![Go Report Card](https://goreportcard.com/badge/github.com/kubernetes/heapster)](https://goreportcard.com/report/github.com/kubernetes/heapster)\n\nHeapster enables Container Cluster Monitoring and Performance Analysis for [Kubernetes](https://github.com/kubernetes/kubernetes) (versions v1.0.6 and higher), and platforms which include it.\n\nHeapster collects and interprets various signals like compute resource usage, lifecycle events, etc.\nNote that the model API, formerly used provide REST access to its collected metrics, is now deprecated.\nPlease see [the model documentation](docs/model.md) for more details.\n\nHeapster supports multiple sources of data.\nMore information [here](docs/source-configuration.md).\n\nHeapster supports the pluggable storage backends described [here](docs/sink-owners.md).\nWe welcome patches that add additional storage backends.\nDocumentation on storage sinks [here](docs/sink-configuration.md).\nThe current version of Storage Schema is documented [here](docs/storage-schema.md).\n\n### Running Heapster on Kubernetes\n\nHeapster can run on a Kubernetes cluster using a number of backends.  Some common choices:\n- [InfluxDB](docs/influxdb.md)\n- [Stackdriver Monitoring and Logging](docs/google.md) for Google Cloud Platform\n- [Other backends](docs/)\n\n### Running Heapster on OpenShift\n\nUsing Heapster to monitor an OpenShift cluster requires some additional changes to the Kubernetes instructions to allow communication between the Heapster instance and OpenShift's secured endpoints. To run standalone Heapster or a combination of Heapster and Hawkular-Metrics in OpenShift, follow [this guide](https://github.com/openshift/origin-metrics).\n\n#### Troubleshooting guide [here](docs/debugging.md)\n\n\n## Community\n\nContributions, questions, and comments are all welcomed and encouraged! Developers hang out on [Slack](https://kubernetes.slack.com) in the #sig-instrumentation channel (get an invitation [here](http://slack.kubernetes.io/)). We also have the [kubernetes-dev Google Groups mailing list](https://groups.google.com/forum/#!forum/kubernetes-dev). If you are posting to the list please prefix your subject with \"heapster: \".\n"
        },
        {
          "name": "code-of-conduct.md",
          "type": "blob",
          "size": 0.14453125,
          "content": "# Kubernetes Community Code of Conduct\n\nPlease refer to our [Kubernetes Community Code of Conduct](https://git.k8s.io/community/code-of-conduct.md)\n"
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "deploy",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "events",
          "type": "tree",
          "content": null
        },
        {
          "name": "grafana",
          "type": "tree",
          "content": null
        },
        {
          "name": "hooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "influxdb",
          "type": "tree",
          "content": null
        },
        {
          "name": "integration",
          "type": "tree",
          "content": null
        },
        {
          "name": "metrics",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        },
        {
          "name": "version",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}