{
  "metadata": {
    "timestamp": 1736566841065,
    "page": 409,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "go-oauth2/oauth2",
      "stars": 3372,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.0244140625,
          "content": "[*.go]\nend_of_line = crlf"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3466796875,
          "content": "# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n_obj\n_test\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\n*.test\n*.prof\n\ncoverage.txt\n\n# OSX\n*.DS_Store\n*.db\n*.swp\n/example/client/client\n/example/server/server\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.228515625,
          "content": "language: go\nsudo: false\ngo_import_path: github.com/go-oauth2/oauth2/v4\ngo:\n  - 1.13\nbefore_install:\n  - go get -t -v ./...\n\nscript:\n  - chmod +x ./go.test.sh && ./go.test.sh\n\nafter_success:\n  - bash <(curl -s https://codecov.io/bash)"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.037109375,
          "content": "MIT License\n\nCopyright (c) 2016 Lyric\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.2421875,
          "content": "# Golang OAuth 2.0 Server\n\n> An open protocol to allow secure authorization in a simple and standard method from web, mobile and desktop applications.\n\n[![Build][build-status-image]][build-status-url] [![Codecov][codecov-image]][codecov-url] [![ReportCard][reportcard-image]][reportcard-url] [![GoDoc][godoc-image]][godoc-url] [![License][license-image]][license-url]\n\n## Protocol Flow\n\n```text\n     +--------+                               +---------------+\n     |        |--(A)- Authorization Request ->|   Resource    |\n     |        |                               |     Owner     |\n     |        |<-(B)-- Authorization Grant ---|               |\n     |        |                               +---------------+\n     |        |\n     |        |                               +---------------+\n     |        |--(C)-- Authorization Grant -->| Authorization |\n     | Client |                               |     Server    |\n     |        |<-(D)----- Access Token -------|               |\n     |        |                               +---------------+\n     |        |\n     |        |                               +---------------+\n     |        |--(E)----- Access Token ------>|    Resource   |\n     |        |                               |     Server    |\n     |        |<-(F)--- Protected Resource ---|               |\n     +--------+                               +---------------+\n```\n\n## Quick Start\n\n### Download and install\n\n```bash\ngo get -u -v github.com/go-oauth2/oauth2/v4/...\n```\n\n### Create file `server.go`\n\n```go\npackage main\n\nimport (\n\t\"log\"\n\t\"net/http\"\n\n\t\"github.com/go-oauth2/oauth2/v4/errors\"\n\t\"github.com/go-oauth2/oauth2/v4/manage\"\n\t\"github.com/go-oauth2/oauth2/v4/models\"\n\t\"github.com/go-oauth2/oauth2/v4/server\"\n\t\"github.com/go-oauth2/oauth2/v4/store\"\n)\n\nfunc main() {\n\tmanager := manage.NewDefaultManager()\n\t// token memory store\n\tmanager.MustTokenStorage(store.NewMemoryTokenStore())\n\n\t// client memory store\n\tclientStore := store.NewClientStore()\n\tclientStore.Set(\"000000\", &models.Client{\n\t\tID:     \"000000\",\n\t\tSecret: \"999999\",\n\t\tDomain: \"http://localhost\",\n\t})\n\tmanager.MapClientStorage(clientStore)\n\n\tsrv := server.NewDefaultServer(manager)\n\tsrv.SetAllowGetAccessRequest(true)\n\tsrv.SetClientInfoHandler(server.ClientFormHandler)\n\n\tsrv.UserAuthorizationHandler = func(w http.ResponseWriter, r *http.Request) (userID string, err error) {\n\t\treturn \"000000\", nil\n\t}\n\n\tsrv.SetInternalErrorHandler(func(err error) (re *errors.Response) {\n\t\tlog.Println(\"Internal Error:\", err.Error())\n\t\treturn\n\t})\n\n\tsrv.SetResponseErrorHandler(func(re *errors.Response) {\n\t\tlog.Println(\"Response Error:\", re.Error.Error())\n\t})\n\n\thttp.HandleFunc(\"/authorize\", func(w http.ResponseWriter, r *http.Request) {\n\t\terr := srv.HandleAuthorizeRequest(w, r)\n\t\tif err != nil {\n\t\t\thttp.Error(w, err.Error(), http.StatusBadRequest)\n\t\t}\n\t})\n\n\thttp.HandleFunc(\"/token\", func(w http.ResponseWriter, r *http.Request) {\n\t\tsrv.HandleTokenRequest(w, r)\n\t})\n\n\tlog.Fatal(http.ListenAndServe(\":9096\", nil))\n}\n\n```\n\n### Build and run\n\n```bash\ngo build server.go\n\n./server\n```\n\n### Open in your web browser\n**Authorization Request**:\n[http://localhost:9096/authorize?client_id=000000&response_type=code](http://localhost:9096/authorize?client_id=000000&response_type=code)\n\n**Grant Token Request**:\n[http://localhost:9096/token?grant_type=client_credentials&client_id=000000&client_secret=999999&scope=read](http://localhost:9096/token?grant_type=client_credentials&client_id=000000&client_secret=999999&scope=read)\n\n```json\n{\n  \"access_token\": \"J86XVRYSNFCFI233KXDL0Q\",\n  \"expires_in\": 7200,\n  \"scope\": \"read\",\n  \"token_type\": \"Bearer\"\n}\n```\n\n## Features\n\n- Easy to use\n- Based on the [RFC 6749](https://tools.ietf.org/html/rfc6749) implementation\n- Token storage support TTL\n- Support custom expiration time of the access token\n- Support custom extension field\n- Support custom scope\n- Support jwt to generate access tokens\n\n## Example\n\n> A complete example of simulation authorization code model\n\nSimulation examples of authorization code model, please check [example](/example)\n\n### Use jwt to generate access tokens\n\n```go\n\nimport (\n\t\"github.com/go-oauth2/oauth2/v4/generates\"\n\t\"github.com/dgrijalva/jwt-go\"\n)\n\n// ...\nmanager.MapAccessGenerate(generates.NewJWTAccessGenerate(\"\", []byte(\"00000000\"), jwt.SigningMethodHS512))\n\n// Parse and verify jwt access token\ntoken, err := jwt.ParseWithClaims(access, &generates.JWTAccessClaims{}, func(t *jwt.Token) (interface{}, error) {\n\tif _, ok := t.Method.(*jwt.SigningMethodHMAC); !ok {\n\t\treturn nil, fmt.Errorf(\"parse error\")\n\t}\n\treturn []byte(\"00000000\"), nil\n})\nif err != nil {\n\t// panic(err)\n}\n\nclaims, ok := token.Claims.(*generates.JWTAccessClaims)\nif !ok || !token.Valid {\n\t// panic(\"invalid token\")\n}\n```\n\n## Store Implements\n\n- [BuntDB](https://github.com/tidwall/buntdb)(default store)\n- [Redis](https://github.com/go-oauth2/redis)\n- [MongoDB](https://github.com/go-oauth2/mongo)\n- [MySQL](https://github.com/go-oauth2/mysql)\n- [MySQL (Provides both client and token store)](https://github.com/imrenagi/go-oauth2-mysql)\n- [PostgreSQL](https://github.com/vgarvardt/go-oauth2-pg)\n- [DynamoDB](https://github.com/contamobi/go-oauth2-dynamodb)\n- [XORM](https://github.com/techknowlogick/go-oauth2-xorm)\n- [XORM (MySQL, client and token store)](https://github.com/rainlay/go-oauth2-xorm)\n- [GORM](https://github.com/techknowlogick/go-oauth2-gorm)\n- [Firestore](https://github.com/tslamic/go-oauth2-firestore)\n- [Hazelcast](https://github.com/clowre/go-oauth2-hazelcast) (token only)\n\n## Handy Utilities\n\n- [OAuth2 Proxy Logger (Debug utility that proxies interfaces and logs)](https://github.com/aubelsb2/oauth2-logger-proxy)\n\n## MIT License\n\nCopyright (c) 2016 Lyric\n\n[build-status-url]: https://travis-ci.org/go-oauth2/oauth2\n[build-status-image]: https://travis-ci.org/go-oauth2/oauth2.svg?branch=master\n[codecov-url]: https://codecov.io/gh/go-oauth2/oauth2\n[codecov-image]: https://codecov.io/gh/go-oauth2/oauth2/branch/master/graph/badge.svg\n[reportcard-url]: https://goreportcard.com/report/github.com/go-oauth2/oauth2/v4\n[reportcard-image]: https://goreportcard.com/badge/github.com/go-oauth2/oauth2/v4\n[godoc-url]: https://godoc.org/github.com/go-oauth2/oauth2/v4\n[godoc-image]: https://godoc.org/github.com/go-oauth2/oauth2/v4?status.svg\n[license-url]: http://opensource.org/licenses/MIT\n[license-image]: https://img.shields.io/npm/l/express.svg\n"
        },
        {
          "name": "const.go",
          "type": "blob",
          "size": 1.5986328125,
          "content": "package oauth2\n\nimport (\n\t\"crypto/sha256\"\n\t\"encoding/base64\"\n\t\"strings\"\n)\n\n// ResponseType the type of authorization request\ntype ResponseType string\n\n// define the type of authorization request\nconst (\n\tCode  ResponseType = \"code\"\n\tToken ResponseType = \"token\"\n)\n\nfunc (rt ResponseType) String() string {\n\treturn string(rt)\n}\n\n// GrantType authorization model\ntype GrantType string\n\n// define authorization model\nconst (\n\tAuthorizationCode   GrantType = \"authorization_code\"\n\tPasswordCredentials GrantType = \"password\"\n\tClientCredentials   GrantType = \"client_credentials\"\n\tRefreshing          GrantType = \"refresh_token\"\n\tImplicit            GrantType = \"__implicit\"\n)\n\nfunc (gt GrantType) String() string {\n\tif gt == AuthorizationCode ||\n\t\tgt == PasswordCredentials ||\n\t\tgt == ClientCredentials ||\n\t\tgt == Refreshing {\n\t\treturn string(gt)\n\t}\n\treturn \"\"\n}\n\n// CodeChallengeMethod PCKE method\ntype CodeChallengeMethod string\n\nconst (\n\t// CodeChallengePlain PCKE Method\n\tCodeChallengePlain CodeChallengeMethod = \"plain\"\n\t// CodeChallengeS256 PCKE Method\n\tCodeChallengeS256 CodeChallengeMethod = \"S256\"\n)\n\nfunc (ccm CodeChallengeMethod) String() string {\n\tif ccm == CodeChallengePlain ||\n\t\tccm == CodeChallengeS256 {\n\t\treturn string(ccm)\n\t}\n\treturn \"\"\n}\n\n// Validate code challenge\nfunc (ccm CodeChallengeMethod) Validate(cc, ver string) bool {\n\tswitch ccm {\n\tcase CodeChallengePlain:\n\t\treturn cc == ver\n\tcase CodeChallengeS256:\n\t\ts256 := sha256.Sum256([]byte(ver))\n\t\t// trim padding\n\t\ta := strings.TrimRight(base64.URLEncoding.EncodeToString(s256[:]), \"=\")\n\t\tb := strings.TrimRight(cc, \"=\")\n\t\treturn a == b\n\tdefault:\n\t\treturn false\n\t}\n}\n"
        },
        {
          "name": "const_test.go",
          "type": "blob",
          "size": 0.57421875,
          "content": "package oauth2_test\n\nimport (\n\t\"testing\"\n\n\t\"github.com/go-oauth2/oauth2/v4\"\n)\n\nfunc TestValidatePlain(t *testing.T) {\n\tcc := oauth2.CodeChallengePlain\n\tif !cc.Validate(\"plaintest\", \"plaintest\") {\n\t\tt.Fatal(\"not valid\")\n\t}\n}\n\nfunc TestValidateS256(t *testing.T) {\n\tcc := oauth2.CodeChallengeS256\n\tif !cc.Validate(\"W6YWc_4yHwYN-cGDgGmOMHF3l7KDy7VcRjf7q2FVF-o=\", \"s256test\") {\n\t\tt.Fatal(\"not valid\")\n\t}\n}\n\nfunc TestValidateS256NoPadding(t *testing.T) {\n\tcc := oauth2.CodeChallengeS256\n\tif !cc.Validate(\"W6YWc_4yHwYN-cGDgGmOMHF3l7KDy7VcRjf7q2FVF-o\", \"s256test\") {\n\t\tt.Fatal(\"not valid\")\n\t}\n}\n"
        },
        {
          "name": "doc.go",
          "type": "blob",
          "size": 0.873046875,
          "content": "// OAuth 2.0 server library for the Go programming language\n//\n//     package main\n//     import (\n//         \"net/http\"\n//         \"github.com/go-oauth2/oauth2/v4/manage\"\n//         \"github.com/go-oauth2/oauth2/v4/server\"\n//         \"github.com/go-oauth2/oauth2/v4/store\"\n//     )\n//     func main() {\n//         manager := manage.NewDefaultManager()\n//         manager.MustTokenStorage(store.NewMemoryTokenStore())\n//         manager.MapClientStorage(store.NewTestClientStore())\n//         srv := server.NewDefaultServer(manager)\n//         http.HandleFunc(\"/authorize\", func(w http.ResponseWriter, r *http.Request) {\n//             srv.HandleAuthorizeRequest(w, r)\n//         })\n//         http.HandleFunc(\"/token\", func(w http.ResponseWriter, r *http.Request) {\n//             srv.HandleTokenRequest(w, r)\n//         })\n//         http.ListenAndServe(\":9096\", nil)\n//     }\n\npackage oauth2\n"
        },
        {
          "name": "errors",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "generate.go",
          "type": "blob",
          "size": 0.634765625,
          "content": "package oauth2\n\nimport (\n\t\"context\"\n\t\"net/http\"\n\t\"time\"\n)\n\ntype (\n\t// GenerateBasic provide the basis of the generated token data\n\tGenerateBasic struct {\n\t\tClient    ClientInfo\n\t\tUserID    string\n\t\tCreateAt  time.Time\n\t\tTokenInfo TokenInfo\n\t\tRequest   *http.Request\n\t}\n\n\t// AuthorizeGenerate generate the authorization code interface\n\tAuthorizeGenerate interface {\n\t\tToken(ctx context.Context, data *GenerateBasic) (code string, err error)\n\t}\n\n\t// AccessGenerate generate the access and refresh tokens interface\n\tAccessGenerate interface {\n\t\tToken(ctx context.Context, data *GenerateBasic, isGenRefresh bool) (access, refresh string, err error)\n\t}\n)\n"
        },
        {
          "name": "generates",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.4169921875,
          "content": "module github.com/go-oauth2/oauth2/v4\n\ngo 1.13\n\nrequire (\n\tgithub.com/ajg/form v1.5.1 // indirect\n\tgithub.com/fasthttp-contrib/websocket v0.0.0-20160511215533-1f3b11f56072 // indirect\n\tgithub.com/fatih/structs v1.1.0 // indirect\n\tgithub.com/gavv/httpexpect v2.0.0+incompatible\n\tgithub.com/go-session/session/v3 v3.2.1\n\tgithub.com/golang-jwt/jwt v3.2.2+incompatible\n\tgithub.com/google/go-querystring v1.0.0 // indirect\n\tgithub.com/google/uuid v1.1.1\n\tgithub.com/gorilla/websocket v1.4.2 // indirect\n\tgithub.com/imkira/go-interpol v1.1.0 // indirect\n\tgithub.com/k0kubun/colorstring v0.0.0-20150214042306-9440f1994b88 // indirect\n\tgithub.com/mattn/go-colorable v0.1.7 // indirect\n\tgithub.com/moul/http2curl v1.0.0 // indirect\n\tgithub.com/onsi/ginkgo v1.13.0 // indirect\n\tgithub.com/sergi/go-diff v1.1.0 // indirect\n\tgithub.com/smartystreets/goconvey v1.6.4\n\tgithub.com/tidwall/buntdb v1.1.2\n\tgithub.com/tidwall/gjson v1.12.1 // indirect\n\tgithub.com/valyala/fasthttp v1.34.0 // indirect\n\tgithub.com/xeipuuv/gojsonschema v1.2.0 // indirect\n\tgithub.com/yalp/jsonpath v0.0.0-20180802001716-5cc68e5049a0 // indirect\n\tgithub.com/yudai/gojsondiff v1.0.0 // indirect\n\tgithub.com/yudai/golcs v0.0.0-20170316035057-ecda9a501e82 // indirect\n\tgithub.com/yudai/pp v2.0.1+incompatible // indirect\n\tgolang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d\n\tgoogle.golang.org/appengine v1.6.6 // indirect\n\tgopkg.in/yaml.v3 v3.0.0-20200615113413-eeeca48fe776 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 18.158203125,
          "content": "cloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ngithub.com/ajg/form v1.5.1 h1:t9c7v8JUKu/XxOGBU0yjNpaMloxGEJhUkqFRq0ibGeU=\ngithub.com/ajg/form v1.5.1/go.mod h1:uL1WgH+h2mgNtvBq0339dVnzXdBETtL2LeUXaIv25UY=\ngithub.com/andybalholm/brotli v1.0.4 h1:V7DdXeJtZscaqfNuAdSRuRFzuiKlHSC/Zh3zl9qY3JY=\ngithub.com/andybalholm/brotli v1.0.4/go.mod h1:fO7iG3H7G2nSZ7m0zPUDn85XEX2GTukHGRSepvi9Eig=\ngithub.com/bytedance/gopkg v0.0.0-20221122125632-68358b8ecec6 h1:FCLDGi1EmB7JzjVVYNZiqc/zAJj2BQ5M0lfkVOxbfs8=\ngithub.com/bytedance/gopkg v0.0.0-20221122125632-68358b8ecec6/go.mod h1:5FoAH5xUHHCMDvQPy1rnj8moqLkLHFaDVBjHhcFwEi0=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/fasthttp-contrib/websocket v0.0.0-20160511215533-1f3b11f56072 h1:DddqAaWDpywytcG8w/qoQ5sAN8X12d3Z3koB0C3Rxsc=\ngithub.com/fasthttp-contrib/websocket v0.0.0-20160511215533-1f3b11f56072/go.mod h1:duJ4Jxv5lDcvg4QuQr0oowTf7dz4/CR8NtyCooz9HL8=\ngithub.com/fatih/structs v1.1.0 h1:Q7juDM0QtcnhCpeyLGQKyg4TOIghuNXrkL32pHAUMxo=\ngithub.com/fatih/structs v1.1.0/go.mod h1:9NiDSp5zOcgEDl+j00MP/WkGVPOlPRLejGD8Ga6PJ7M=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/fsnotify/fsnotify v1.4.9 h1:hsms1Qyu0jgnwNXIxa+/V/PDsU6CfLf6CNO8H7IWoS4=\ngithub.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4IgpuI1SZQ=\ngithub.com/gavv/httpexpect v2.0.0+incompatible h1:1X9kcRshkSKEjNJJxX9Y9mQ5BRfbxU5kORdjhlA1yX8=\ngithub.com/gavv/httpexpect v2.0.0+incompatible/go.mod h1:x+9tiU1YnrOvnB725RkpoLv1M62hOWzwo5OXotisrKc=\ngithub.com/go-session/session/v3 v3.2.1 h1:APQf5JFW84+bhbqRjEZO8J+IppSgT1jMQTFI/XVyIFY=\ngithub.com/go-session/session/v3 v3.2.1/go.mod h1:RftEBbyuzqkNCAxIrCLJe+rfBqB/4G11qxq9KYKrx4M=\ngithub.com/golang-jwt/jwt v3.2.2+incompatible h1:IfV12K8xAKAnZqdXVzCZ+TOjboZ2keLg81eXfW3O+oY=\ngithub.com/golang-jwt/jwt v3.2.2+incompatible/go.mod h1:8pz2t5EyA70fFQQSrl6XZXzqecmYZeUEB8OUGHkxJ+I=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.2 h1:+Z5KGCizgyZCbGh1KZqA0fcLLkwbsjIzS4aV2v7wJX0=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0 h1:xsAVV57WRhGj6kEIi8ReJzQlHHqcBYCElAvkovg3B/4=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-querystring v1.0.0 h1:Xkwi/a1rcvNg1PPYe5vI8GbeBY/jrVuDX5ASuANWTrk=\ngithub.com/google/go-querystring v1.0.0/go.mod h1:odCYkC5MyYFN7vkCjXpyrEuKhc/BUO6wN/zVPAxq5ck=\ngithub.com/google/uuid v1.1.1 h1:Gkbcsh/GbpXz7lPftLA3P6TYMwjCLYm83jiFQZF/3gY=\ngithub.com/google/uuid v1.1.1/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\ngithub.com/gopherjs/gopherjs v0.0.0-20200217142428-fce0ec30dd00 h1:l5lAOZEym3oK3SQ2HBHWsJUfbNBiTXJDeW2QDxw9AQ0=\ngithub.com/gopherjs/gopherjs v0.0.0-20200217142428-fce0ec30dd00/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\ngithub.com/gorilla/websocket v1.4.2 h1:+/TMaTYc4QFitKJxsQ7Yye35DkWvkdLcvGKqM+x0Ufc=\ngithub.com/gorilla/websocket v1.4.2/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\ngithub.com/imkira/go-interpol v1.1.0 h1:KIiKr0VSG2CUW1hl1jpiyuzuJeKUUpC8iM1AIE7N1Vk=\ngithub.com/imkira/go-interpol v1.1.0/go.mod h1:z0h2/2T3XF8kyEPpRgJ3kmNv+C43p+I/CoI+jC3w2iA=\ngithub.com/jtolds/gls v4.20.0+incompatible h1:xdiiI2gbIgH/gLH7ADydsJ1uDOEzR8yvV7C0MuV77Wo=\ngithub.com/jtolds/gls v4.20.0+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=\ngithub.com/k0kubun/colorstring v0.0.0-20150214042306-9440f1994b88 h1:uC1QfSlInpQF+M0ao65imhwqKnz3Q2z/d8PWZRMQvDM=\ngithub.com/k0kubun/colorstring v0.0.0-20150214042306-9440f1994b88/go.mod h1:3w7q1U84EfirKl04SVQ/s7nPm1ZPhiXd34z40TNz36k=\ngithub.com/klauspost/compress v1.15.0 h1:xqfchp4whNFxn5A4XFyyYtitiWI8Hy5EW59jEwcyL6U=\ngithub.com/klauspost/compress v1.15.0/go.mod h1:/3/Vjq9QcHkK5uEr5lBEmyoZ1iFhe47etQ6QUkpK6sk=\ngithub.com/kr/pretty v0.1.0 h1:L/CwN0zerZDmRFUapSPitk6f+Q3+0za1rQkzVuMiMFI=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/mattn/go-colorable v0.1.7 h1:bQGKb3vps/j0E9GfJQ03JyhRuxsvdAanXlT9BTw3mdw=\ngithub.com/mattn/go-colorable v0.1.7/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\ngithub.com/mattn/go-isatty v0.0.12 h1:wuysRhFDzyxgEmMf5xjvJ2M9dZoWAXNNr5LSBS7uHXY=\ngithub.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\ngithub.com/moul/http2curl v1.0.0 h1:dRMWoAtb+ePxMlLkrCbAqh4TlPHXvoGUSQ323/9Zahs=\ngithub.com/moul/http2curl v1.0.0/go.mod h1:8UbvGypXm98wA/IqH45anm5Y2Z6ep6O31QGOAZ3H0fQ=\ngithub.com/nxadm/tail v1.4.4 h1:DQuhQpB1tVlglWS2hLQ5OV6B5r8aGxSrPc5Qo6uTN78=\ngithub.com/nxadm/tail v1.4.4/go.mod h1:kenIhsEOeOJmVchQTgglprH7qJGnHDVpk1VPCcaMI8A=\ngithub.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.12.1/go.mod h1:zj2OWP4+oCPe1qIXoGWkgMRwljMUYCdkwsT2108oapk=\ngithub.com/onsi/ginkgo v1.13.0 h1:M76yO2HkZASFjXL0HSoZJ1AYEmQxNJmY41Jx1zNUq1Y=\ngithub.com/onsi/ginkgo v1.13.0/go.mod h1:+REjRxOmWfHCjfv9TTWB1jD1Frx4XydAD3zm1lskyM0=\ngithub.com/onsi/gomega v1.7.1/go.mod h1:XdKZgCCFLUoM/7CFJVPcG8C1xQ1AJ0vpAezJrB7JYyY=\ngithub.com/onsi/gomega v1.10.1 h1:o0+MgICZLuZ7xjH7Vx6zS/zcu93/BEp1VwkIW1mEXCE=\ngithub.com/onsi/gomega v1.10.1/go.mod h1:iN09h71vgCQne3DLsj+A5owkum+a2tYe+TOCB1ybHNo=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/sclevine/agouti v3.0.0+incompatible/go.mod h1:b4WX9W9L1sfQKXeJf1mUTLZKJ48R1S7H23Ji7oFO5Bw=\ngithub.com/sergi/go-diff v1.1.0 h1:we8PVUC3FE2uYfodKH/nBHMSetSfHDR6scGdBi+erh0=\ngithub.com/sergi/go-diff v1.1.0/go.mod h1:STckp+ISIX8hZLjrqAeVduY0gWCT9IjLuqbuNXdaHfM=\ngithub.com/smartystreets/assertions v0.0.0-20180927180507-b2de0cb4f26d/go.mod h1:OnSkiWE9lh6wB0YB77sQom3nweQdgAjqCqsofrRNTgc=\ngithub.com/smartystreets/assertions v1.1.0 h1:MkTeG1DMwsrdH7QtLXy5W+fUxWq+vmb6cLmyJ7aRtF0=\ngithub.com/smartystreets/assertions v1.1.0/go.mod h1:tcbTF8ujkAEcZ8TElKY+i30BzYlVhC/LOxJk7iOWnoo=\ngithub.com/smartystreets/goconvey v1.6.4 h1:fv0U8FUIMPNf1L9lnHLvLhgicrIVChEkdzIKYqbNC9s=\ngithub.com/smartystreets/goconvey v1.6.4/go.mod h1:syvi0/a8iFYH4r/RixwvyeAJjdLS9QV7WQ/tjFTllLA=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.7.0 h1:nwc3DEeHmmLAfoZucVR881uASk0Mfjw8xYJ99tb5CcY=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/tidwall/btree v0.0.0-20191029221954-400434d76274 h1:G6Z6HvJuPjG6XfNGi/feOATzeJrfgTNJY+rGrHbA04E=\ngithub.com/tidwall/btree v0.0.0-20191029221954-400434d76274/go.mod h1:huei1BkDWJ3/sLXmO+bsCNELL+Bp2Kks9OLyQFkzvA8=\ngithub.com/tidwall/buntdb v1.1.2 h1:noCrqQXL9EKMtcdwJcmuVKSEjqu1ua99RHHgbLTEHRo=\ngithub.com/tidwall/buntdb v1.1.2/go.mod h1:xAzi36Hir4FarpSHyfuZ6JzPJdjRZ8QlLZSntE2mqlI=\ngithub.com/tidwall/gjson v1.3.4/go.mod h1:P256ACg0Mn+j1RXIDXoss50DeIABTYK1PULOJHhxOls=\ngithub.com/tidwall/gjson v1.12.1 h1:ikuZsLdhr8Ws0IdROXUS1Gi4v9Z4pGqpX/CvJkxvfpo=\ngithub.com/tidwall/gjson v1.12.1/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=\ngithub.com/tidwall/grect v0.0.0-20161006141115-ba9a043346eb h1:5NSYaAdrnblKByzd7XByQEJVT8+9v0W/tIY0Oo4OwrE=\ngithub.com/tidwall/grect v0.0.0-20161006141115-ba9a043346eb/go.mod h1:lKYYLFIr9OIgdgrtgkZ9zgRxRdvPYsExnYBsEAd8W5M=\ngithub.com/tidwall/match v1.0.1/go.mod h1:LujAq0jyVjBy028G1WhWfIzbpQfMO8bBZ6Tyb0+pL9E=\ngithub.com/tidwall/match v1.1.1 h1:+Ho715JplO36QYgwN9PGYNhgZvoUSc9X2c80KVTi+GA=\ngithub.com/tidwall/match v1.1.1/go.mod h1:eRSPERbgtNPcGhD8UCthc6PmLEQXEWd3PRB5JTxsfmM=\ngithub.com/tidwall/pretty v1.0.0/go.mod h1:XNkn88O1ChpSDQmQeStsy+sBenx6DDtFZJxhVysOjyk=\ngithub.com/tidwall/pretty v1.2.0 h1:RWIZEg2iJ8/g6fDDYzMpobmaoGh5OLl4AXtGUGPcqCs=\ngithub.com/tidwall/pretty v1.2.0/go.mod h1:ITEVvHYasfjBbM0u2Pg8T2nJnzm8xPwvNhhsoaGGjNU=\ngithub.com/tidwall/rtree v0.0.0-20180113144539-6cd427091e0e h1:+NL1GDIUOKxVfbp2KoJQD9cTQ6dyP2co9q4yzmT9FZo=\ngithub.com/tidwall/rtree v0.0.0-20180113144539-6cd427091e0e/go.mod h1:/h+UnNGt0IhNNJLkGikcdcJqm66zGD/uJGMRxK/9+Ao=\ngithub.com/tidwall/tinyqueue v0.0.0-20180302190814-1e39f5511563 h1:Otn9S136ELckZ3KKDyCkxapfufrqDqwmGjcHfAyXRrE=\ngithub.com/tidwall/tinyqueue v0.0.0-20180302190814-1e39f5511563/go.mod h1:mLqSmt7Dv/CNneF2wfcChfN1rvapyQr01LGKnKex0DQ=\ngithub.com/valyala/bytebufferpool v1.0.0 h1:GqA5TC/0021Y/b9FG4Oi9Mr3q7XYx6KllzawFIhcdPw=\ngithub.com/valyala/bytebufferpool v1.0.0/go.mod h1:6bBcMArwyJ5K/AmCkWv1jt77kVWyCJ6HpOuEn7z0Csc=\ngithub.com/valyala/fasthttp v1.34.0 h1:d3AAQJ2DRcxJYHm7OXNXtXt2as1vMDfxeIcFvhmGGm4=\ngithub.com/valyala/fasthttp v1.34.0/go.mod h1:epZA5N+7pY6ZaEKRmstzOuYJx9HI8DI1oaCGZpdH4h0=\ngithub.com/valyala/tcplisten v1.0.0/go.mod h1:T0xQ8SeCZGxckz9qRXTfG43PvQ/mcWh7FwZEA7Ioqkc=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f h1:J9EGpcZtP0E/raorCMxlFGSTBrsSlaDGf3jU/qvAE2c=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=\ngithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415 h1:EzJWgHovont7NscjpAxXsDA8S8BMYve8Y5+7cuRE7R0=\ngithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415/go.mod h1:GwrjFmJcFw6At/Gs6z4yjiIwzuJ1/+UwLxMQDVQXShQ=\ngithub.com/xeipuuv/gojsonschema v1.2.0 h1:LhYJRs+L4fBtjZUfuSZIKGeVu0QRy8e5Xi7D17UxZ74=\ngithub.com/xeipuuv/gojsonschema v1.2.0/go.mod h1:anYRn/JVcOK2ZgGU+IjEV4nwlhoK5sQluxsYJ78Id3Y=\ngithub.com/yalp/jsonpath v0.0.0-20180802001716-5cc68e5049a0 h1:6fRhSjgLCkTD3JnJxvaJ4Sj+TYblw757bqYgZaOq5ZY=\ngithub.com/yalp/jsonpath v0.0.0-20180802001716-5cc68e5049a0/go.mod h1:/LWChgwKmvncFJFHJ7Gvn9wZArjbV5/FppcK2fKk/tI=\ngithub.com/yudai/gojsondiff v1.0.0 h1:27cbfqXLVEJ1o8I6v3y9lg8Ydm53EKqHXAOMxEGlCOA=\ngithub.com/yudai/gojsondiff v1.0.0/go.mod h1:AY32+k2cwILAkW1fbgxQ5mUmMiZFgLIV+FBNExI05xg=\ngithub.com/yudai/golcs v0.0.0-20170316035057-ecda9a501e82 h1:BHyfKlQyqbsFN5p3IfnEUduWvb9is428/nNb5L3U01M=\ngithub.com/yudai/golcs v0.0.0-20170316035057-ecda9a501e82/go.mod h1:lgjkn3NuSvDfVJdfcVVdX+jpBxNmX4rDAzaS45IcYoM=\ngithub.com/yudai/pp v2.0.1+incompatible h1:Q4//iY4pNF6yPLZIigmvcl7k/bPgrcTPIFIcmawg5bI=\ngithub.com/yudai/pp v2.0.1+incompatible/go.mod h1:PuxR/8QJ7cyCkFp/aUDS+JY727OFEZkTdatxwunjIkc=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20220214200702-86341886e292/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20200520004742-59133d7f0dd7/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20211112202133-69e39bad7dc2/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20220225172249-27dd8689420f h1:oA4XRj0qtSt8Yo1Zms0CUlsT3KG69V2UGQWPBxujDmc=\ngolang.org/x/net v0.0.0-20220225172249-27dd8689420f/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\ngolang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d h1:TzXSXBo42m9gQenoE3b9BGiEpg5IG2JkU5FkPIawgtw=\ngolang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190904154756-749cb33beabd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191005200804-aed5e4c7ecf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191120155948-bd437916bb0e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200519105757-fe76b779f299/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220227234510-4e6760a101f9/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20221010170243-090e33056c14 h1:k5II8e6QD8mITdi+okbbmR/cIyEbeXLBhy5Ha4nevyc=\ngolang.org/x/sys v0.0.0-20221010170243-090e33056c14/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7 h1:olpwvP2KacW1ZWvsR7uQhoyTYvKAupfQrRGBFM352Gk=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190328211700-ab21143f2384/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543 h1:E7g+9GITq07hpfrRu66IVDexMakfv52eLZ2CXBWiKr4=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.6.6 h1:lMO5rYAqUxkmaj76jAkRUvt5JZgFymx/+Q5Mzfivuhc=\ngoogle.golang.org/appengine v1.6.6/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.23.0 h1:4MY060fB1DLGMB/7MBTLnwQUY6+F09GEiz6SsrNqyzM=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15 h1:YR8cESwS4TdDjEe65xsg0ogRM/Nc3DYOhEAlW+xobZo=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0 h1:clyUAQHOM3G0M3f5vQj7LuJrETvjVot3Z5el9nffUtU=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20200615113413-eeeca48fe776 h1:tQIYjPdBoyREyB9XMu+nnTclpTYkz2zFM+lzLJFO4gQ=\ngopkg.in/yaml.v3 v3.0.0-20200615113413-eeeca48fe776/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "go.test.sh",
          "type": "blob",
          "size": 0.265625,
          "content": "#!/usr/bin/env bash\n\nset -e\necho \"\" > coverage.txt\n\nfor d in $(go list ./... | grep -v vendor); do\n    go test -race -coverprofile=profile.out -covermode=atomic \"$d\"\n    if [ -f profile.out ]; then\n        cat profile.out >> coverage.txt\n        rm profile.out\n    fi\ndone"
        },
        {
          "name": "manage.go",
          "type": "blob",
          "size": 1.6748046875,
          "content": "package oauth2\n\nimport (\n\t\"context\"\n\t\"net/http\"\n\t\"time\"\n)\n\n// TokenGenerateRequest provide to generate the token request parameters\ntype TokenGenerateRequest struct {\n\tClientID            string\n\tClientSecret        string\n\tUserID              string\n\tRedirectURI         string\n\tScope               string\n\tCode                string\n\tCodeChallenge       string\n\tCodeChallengeMethod CodeChallengeMethod\n\tRefresh             string\n\tCodeVerifier        string\n\tAccessTokenExp      time.Duration\n\tRequest             *http.Request\n}\n\n// Manager authorization management interface\ntype Manager interface {\n\t// get the client information\n\tGetClient(ctx context.Context, clientID string) (cli ClientInfo, err error)\n\n\t// generate the authorization token(code)\n\tGenerateAuthToken(ctx context.Context, rt ResponseType, tgr *TokenGenerateRequest) (authToken TokenInfo, err error)\n\n\t// generate the access token\n\tGenerateAccessToken(ctx context.Context, gt GrantType, tgr *TokenGenerateRequest) (accessToken TokenInfo, err error)\n\n\t// refreshing an access token\n\tRefreshAccessToken(ctx context.Context, tgr *TokenGenerateRequest) (accessToken TokenInfo, err error)\n\n\t// use the access token to delete the token information\n\tRemoveAccessToken(ctx context.Context, access string) (err error)\n\n\t// use the refresh token to delete the token information\n\tRemoveRefreshToken(ctx context.Context, refresh string) (err error)\n\n\t// according to the access token for corresponding token information\n\tLoadAccessToken(ctx context.Context, access string) (ti TokenInfo, err error)\n\n\t// according to the refresh token for corresponding token information\n\tLoadRefreshToken(ctx context.Context, refresh string) (ti TokenInfo, err error)\n}\n"
        },
        {
          "name": "manage",
          "type": "tree",
          "content": null
        },
        {
          "name": "model.go",
          "type": "blob",
          "size": 1.3837890625,
          "content": "package oauth2\n\nimport (\n\t\"net/url\"\n\t\"time\"\n)\n\ntype (\n\t// ClientInfo the client information model interface\n\tClientInfo interface {\n\t\tGetID() string\n\t\tGetSecret() string\n\t\tGetDomain() string\n\t\tIsPublic() bool\n\t\tGetUserID() string\n\t}\n\n\t// ClientPasswordVerifier the password handler interface\n\tClientPasswordVerifier interface {\n\t\tVerifyPassword(string) bool\n\t}\n\n\t// TokenInfo the token information model interface\n\tTokenInfo interface {\n\t\tNew() TokenInfo\n\n\t\tGetClientID() string\n\t\tSetClientID(string)\n\t\tGetUserID() string\n\t\tSetUserID(string)\n\t\tGetRedirectURI() string\n\t\tSetRedirectURI(string)\n\t\tGetScope() string\n\t\tSetScope(string)\n\n\t\tGetCode() string\n\t\tSetCode(string)\n\t\tGetCodeCreateAt() time.Time\n\t\tSetCodeCreateAt(time.Time)\n\t\tGetCodeExpiresIn() time.Duration\n\t\tSetCodeExpiresIn(time.Duration)\n\t\tGetCodeChallenge() string\n\t\tSetCodeChallenge(string)\n\t\tGetCodeChallengeMethod() CodeChallengeMethod\n\t\tSetCodeChallengeMethod(CodeChallengeMethod)\n\n\t\tGetAccess() string\n\t\tSetAccess(string)\n\t\tGetAccessCreateAt() time.Time\n\t\tSetAccessCreateAt(time.Time)\n\t\tGetAccessExpiresIn() time.Duration\n\t\tSetAccessExpiresIn(time.Duration)\n\n\t\tGetRefresh() string\n\t\tSetRefresh(string)\n\t\tGetRefreshCreateAt() time.Time\n\t\tSetRefreshCreateAt(time.Time)\n\t\tGetRefreshExpiresIn() time.Duration\n\t\tSetRefreshExpiresIn(time.Duration)\n\t}\n\n\tExtendableTokenInfo interface {\n\t\tTokenInfo\n\t\tGetExtension() url.Values\n\t\tSetExtension(url.Values)\n\t}\n)\n"
        },
        {
          "name": "models",
          "type": "tree",
          "content": null
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        },
        {
          "name": "store.go",
          "type": "blob",
          "size": 1.1025390625,
          "content": "package oauth2\n\nimport \"context\"\n\ntype (\n\t// ClientStore the client information storage interface\n\tClientStore interface {\n\t\t// according to the ID for the client information\n\t\tGetByID(ctx context.Context, id string) (ClientInfo, error)\n\t}\n\n\t// TokenStore the token information storage interface\n\tTokenStore interface {\n\t\t// create and store the new token information\n\t\tCreate(ctx context.Context, info TokenInfo) error\n\n\t\t// delete the authorization code\n\t\tRemoveByCode(ctx context.Context, code string) error\n\n\t\t// use the access token to delete the token information\n\t\tRemoveByAccess(ctx context.Context, access string) error\n\n\t\t// use the refresh token to delete the token information\n\t\tRemoveByRefresh(ctx context.Context, refresh string) error\n\n\t\t// use the authorization code for token information data\n\t\tGetByCode(ctx context.Context, code string) (TokenInfo, error)\n\n\t\t// use the access token for token information data\n\t\tGetByAccess(ctx context.Context, access string) (TokenInfo, error)\n\n\t\t// use the refresh token for token information data\n\t\tGetByRefresh(ctx context.Context, refresh string) (TokenInfo, error)\n\t}\n)\n"
        },
        {
          "name": "store",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}