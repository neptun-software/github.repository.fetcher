{
  "metadata": {
    "timestamp": 1736567041174,
    "page": 623,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dnote/dnote",
      "stars": 2814,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0478515625,
          "content": "/vendor\n/build\n.vagrant\n*.log\nnode_modules\n/test\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 6.107421875,
          "content": "# CHANAGELOG\n\nAll notable changes to the projects under this repository will be documented in this file.\n\n* [Server](#server)\n* [CLI](#cli)\n\n## Server\n\nThe following log documents the history of the server project.\n\n### Unreleased\n\nNone\n\n### 2.1.1 2023-03-04\n\n#### Fixed\n\n- Added the missing CSS and JS in the server release\n\n### 2.1.0 2023-03-04\n\n#### Changed\n\n- `OnPremise` environment variable is deprecated and is replaced with `OnPremises`\n- Upgrade Go from 1.17 to 1.20.\n\n### 2.0.0 2022-05-09\n\n#### Removed\n\n- The web interface for managing notes and books (#594)\n\n### 1.0.4 2020-05-23\n\n#### Removed\n\n- Simplify the bundle by removing unnecessary payment logic\n\n#### Fixed\n\n- Fix timestamp in the note content view\n- Invalidate existing sessions when password is changed\n\n### 1.0.3 2020-05-03\n\n#### Fixed\n\n- Fix timeline grouping notes by added time rather than updated time.\n\n#### Changed\n\n- Sort notes by last activity to make it easier to see the most recently accessed information.\n\n### 1.0.2 2020-05-03\n\n#### Changed\n\n* Support arm64.\n\n### 1.0.1 - 2020-03-29\n\n- Fix fresh install running migrations against tables that no longer exists.\n\n### 1.0.0 - 2020-03-22\n\n#### Fixed\n\n- Fix unsubscribe link from the inactive reminder (#433)\n\n#### Removed\n\n- Remove the deprecated features related to digests and repetition rules (#432)\n- Remove the migration for the deprecated, encrypted Dnote (#433)\n\n#### Changed\n\n- Please set `OnPremise` environment to `true` in order to automatically use the Pro version.\n\n### 0.5.0 - 2020-02-06\n\n#### Changed\n\n- **Deprecated** the digest and digest emails (#397)\n- **Deprecated** the repetition rules (#397)\n\n#### Fixed\n\n- Fix refocusing to the end of the textarea input (#405)\n\n### 0.4.0 - 2020-01-09\n\n#### Added\n\n- A web-based digest (#380)\n\n#### Fixed\n\n- Send inactive reminders with a correct email type (#385)\n- Wrap words in note content (#389)\n\n### 0.3.4 - 2019-12-24\n\n#### Added\n\n- Remind when the knowledge base stops growing (#375)\n- Alert when a password is changed (#375)\n\n#### Fixed\n\n- Implement syntax highlighting for code blocks ($377)\n\n### 0.3.3 - 2019-12-17\n\n#### Added\n\n- Send welcome email with login instructions upon reigstering (#352)\n- Add an option to disable registration (#365)\n\n#### Changed\n\n- Send emails from the domain that hosts the application for on premise installations (#355)\n- For on premise installations, automatically upgrade user accounts (#361)\n\n### 0.3.2 - 2019-11-20\n\n#### Fixed\n\n- Fix server crash upon landing on a note page (#324).\n- Allow to synchronize a large number of records (#321)\n\n### 0.3.1 - 2019-11-12\n\n#### Fixed\n\n- Fix static files not being embedded in the binary. (#309)\n- Fix mobile menu not covering the whole screen. (#308)\n\n### 0.3.0 - 2019-11-12\n\n#### Added\n\n- Share notes (#300)\n- Allow to recover from a missed repetition processing (#305)\n\n### 0.2.1 - 2019-11-04\n\n#### Upgrade Guide\n\n* Please define the follwoing new environment variables:\n\n  - `WebURL`: the URL to your Dnote server, without the trailing slash. (e.g. `https://my-server.com`) (Please see #290)\n  - `SmtpPort`: the SMTP port. (e.g. `465`) optional - required *if you want to configure email*\n\n#### Added\n\n- Display version number in the settings (#293)\n- Allow unsecure database connection in production (#276)\n\n#### Fixed\n\n- Allow to customize the app URL in the emails (#290)\n- Allow to customize the SMTP port (#292)\n\n### 0.2.0 - 2019-10-28\n\n#### Added\n\n- Specify spaced repetition rule (#280)\n\n#### Changed\n\n- Treat a linebreak as a new line in the preview (#261)\n- Allow to have multiple editor states for adding and editing notes (#260)\n\n#### Fixed\n\n- Fix jumping focus on editor (#265)\n\n### 0.1.1 - 2019-09-30\n\n#### Fixed\n\n- Fix asset loading (#257)\n\n\n### 0.1.0 - 2019-09-30\n\n#### Added\n\n- Full-text search (#254)\n- Password recovery (#254)\n- Embedded notes in the digest emails (#254)\n\n#### Removed\n\n- **Breaking Change**: End-to-end encryption was removed. Existing users need to go to `/classic` and follow the automated migration steps. (#254)\n- **Breaking Change**: `v1` and `v2` API endpoints were removed, and `v3` API was added as a replacement.\n\n#### Migration guide\n\n- In your application, navigate to `/classic` and follow the automated migration steps.\n\n\n## CLI\n\nThe following log documentes the history of the CLI project\n\n### Unreleased\n\nNone\n\n### 0.15.1 - 2024-02-03\n\n* Upgrade `color` dependency (#660).\n* Use Go 1.21 (#658).\n\n### 0.15.0 - 2023-05-27\n\n* Add `enableUpgradeCheck` configuration to allow to opt out of automatic update check.\n\n### 0.14.0 - 2023-03-10\n\n* Remove `autocomplete` subcommand that was accidentally added by a dependency (#637)\n\n### 0.13.0 - 2023-02-10\n\n* Allow to add note from stdin.\n\n```\necho \"test\" | dnote add mybook\n\ndnote add mybook << EOF\ntest line 1\ntest line 2\nEOF\n```\n\n### 0.12.0 - 2020-01-03\n\n#### Upgrade guide\n\n* **On Linux or macOS** Please move your Dnote files to new directories based on the XDG base directory specfication. **On Windows**, no action is required.\n\n```\n# Move the database file\nmv ~/.dnote/dnote.db ~/.local/share/dnote/dnote.db \n\n# Move the config file\nmv ~/.dnote/dnoterc ~/.config/dnote/dnoterc\n\n# Delete ~/.dnote. (it is safe to delete DNOTE_TMPCONTENT.md files, if they exist.)\nrm -rf ~/.dnote\n```\n\nIf `~/.dnote` directory exists, dnote will continue to use that directory for backward compatibility until the next major release.\n\n#### Added\n\n- Add `--content-only` flag to print the note content only (#528)\n\n#### Changed\n\n- Use XDG base directory on Linux and macOS (#527)\n\n### 0.11.1 - 2020-04-25\n\n#### Fixed\n\n- Fix upgrade URL (#453)\n\n#### Changed\n\n- Display hostname of the self-hosted instance while logging in (#454)\n- Display helpful error if endpoint is misconfigured (#455)\n\n### 0.11.0 - 2020-02-05\n\n#### Added\n\n- Allow to pass credentials through flags while logging in (#403)\n\n### 0.10.0 - 2019-09-30\n\n#### Removed\n\n- **Breaking Change**: End-to-end encryption was removed. Previous versions will no longer be able to interact with the web API, because `v1` and `v2` endpoints were replaced by a new `v3` endpoint to remove encryption.\n\n#### Migration guide\n\n- If you are using Dnote Pro, change the value of `apiEndpoint` in `~/.dnote/dnoterc` to `https://api.getdnote.com`.\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.3505859375,
          "content": "# Contributing to Dnote\n\nDnote is an open source project.\n\n* [Setting up](#setting-up)\n* [Server](#server)\n* [Command Line Interface](#command-line-interface)\n\n## Setting up\n\nDnote uses [Vagrant](https://github.com/hashicorp/vagrant) to provision a consistent development environment.\n\n*Prerequisites*\n\n* Vagrant ([Download](https://www.vagrantup.com/downloads.html))\n* VirtualBox ([Download](https://www.virtualbox.org/))\n\nRun the following command from the project root. It starts the virtual machine and bootstraps the project.\n\n```\nvagrant up\n```\n\n*Workflow*\n\n* You can make changes to the source code from the host machine.\n* Any commands need to be run inside the virtual machine. You can connect to it by running `vagrant ssh`.\n* If you want to run tests in a WATCH mode, please do so from the host machine. We cannot watch file changes due to the limitation of file system used in a virtual machine.\n\n## Server\n\nThe server consists of the frontend web application and a web server.\n\n### Development\n\n* Run `make dev-server` to start a local server.\n* You can access the server on `localhost:3000` on your machine.\n\n### Test\n\n```bash\n# Run tests for app\nmake test-api\n\n# Run in watch mode\nWATCH=true make test-api\n```\n\n\n## Command Line Interface\n\n### Build\n\nYou can build either a development version or a production version:\n\n```\n# Build a development version for your platform and place it in your `PATH`.\nmake debug=true build-cli\n\n# Build a production version for all platforms\nmake version=v0.1.0 build-cli\n\n# Build a production version for a specific platform\n# Note: You cannot cross-compile using this method because Dnote uses CGO\n# and requires the OS specific headers.\nGOOS=[insert OS] GOARCH=[insert arch] make version=v0.1.0 build-cli\n```\n\n### Test\n\n* Run all tests for the command line interface:\n\n```\nmake test-cli\n```\n\n### Debug\n\nRun Dnote with `DNOTE_DEBUG=1` to print debugging statements. For instance:\n\n```\nDNOTE_DEBUG=1 dnote sync\n```\n\n### Release\n\n* Run `make version=v0.1.0 release-cli` to achieve the following:\n  * Build for all target platforms, create a git tag, push all tags to the repository\n  * Create a release on GitHub and [Dnote Homebrew tap](https://github.com/dnote/homebrew-dnote).\n\n**Note**\n\n- If a release is not stable,\n  - disable the homebrew release by commenting out relevant code in the release script.\n  - mark release as pre-release on GitHub release\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.5361328125,
          "content": "Source code in this repository is variously licensed under the GNU Affero General Public\nLicense v3.0 (GNU AGPLv3), and GNU General Public License v3.0 (GNU GPLv3). A copy of each\nlicense can be found in the licenses directory. The Source code for the cli is licensed under\nGNU GPLv3. The source code for the server and the web is licensed under GNU AGPLv3. Unless\notherwise noted, source code in a given file is licensed under the GNU AGPLv3.\n\nUnless otherwise noted at the beginning of the file, the copyright belongs to\nMonomax Software Pty Ltd.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.1572265625,
          "content": "NPM := $(shell command -v npm 2> /dev/null)\nGH := $(shell command -v gh 2> /dev/null)\n\ncurrentDir = $(shell pwd)\nserverOutputDir = ${currentDir}/build/server\ncliOutputDir = ${currentDir}/build/cli\ncliHomebrewDir = ${currentDir}/../homebrew-dnote\n\n## installation\ninstall: install-go install-js\n.PHONY: install\n\ninstall-go:\n\t@echo \"==> installing go dependencies\"\n\t@go mod download\n.PHONY: install-go\n\ninstall-js:\nifndef NPM\n\t$(error npm is not installed)\nendif\n\n\t@echo \"==> installing js dependencies\"\n\nifeq ($(CI), true)\n\t@(cd ${currentDir}/pkg/server/assets && npm ci --cache $(NPM_CACHE_DIR) --prefer-offline --unsafe-perm=true)\nelse\n\t@(cd ${currentDir}/pkg/server/assets && npm install)\nendif\n.PHONY: install-js\n\n## test\ntest: test-cli test-api\n.PHONY: test\n\ntest-cli:\n\t@echo \"==> running CLI test\"\n\t@(${currentDir}/scripts/cli/test.sh)\n.PHONY: test-cli\n\ntest-api:\n\t@echo \"==> running API test\"\n\t@(${currentDir}/scripts/server/test-local.sh)\n.PHONY: test-api\n\ntest-selfhost:\n\t@echo \"==> running a smoke test for self-hosting\"\n\n\t@${currentDir}/host/smoketest/run_test.sh ${tarballPath}\n.PHONY: test-selfhost\n\n# development\ndev-server:\n\t@echo \"==> running dev environment\"\n\t@VERSION=master ${currentDir}/scripts/server/dev.sh\n.PHONY: dev-server\n\nbuild-server:\nifndef version\n\t$(error version is required. Usage: make version=0.1.0 build-server)\nendif\n\n\t@echo \"==> building server assets\"\n\t@(cd \"${currentDir}/pkg/server/assets/\" && ./styles/build.sh)\n\t@(cd \"${currentDir}/pkg/server/assets/\" && ./js/build.sh)\n\n\t@echo \"==> building server\"\n\t@${currentDir}/scripts/server/build.sh $(version)\n.PHONY: build-server\n\nbuild-cli:\nifeq ($(debug), true)\n\t@echo \"==> building cli in dev mode\"\n\t@${currentDir}/scripts/cli/dev.sh\nelse\n\nifndef version\n\t$(error version is required. Usage: make version=0.1.0 build-cli)\nendif\n\n\t@echo \"==> building cli\"\n\t@${currentDir}/scripts/cli/build.sh $(version)\nendif\n.PHONY: build-cli\n\n## release\nrelease-cli: clean build-cli\nifndef version\n\t$(error version is required. Usage: make version=0.1.0 release-cli)\nendif\nifndef GH\n\t$(error please install github-cli)\nendif\n\n\t@echo \"==> releasing cli\"\n\t@${currentDir}/scripts/release.sh cli $(version) ${cliOutputDir}\n.PHONY: release-cli\n\nrelease-cli-homebrew: clean build-cli\nifndef version\n\t$(error version is required. Usage: make version=0.1.0 release-cli)\nendif\n\n\t@echo \"==> releasing cli on Homebrew\"\n\t@${currentDir}/scripts/cli/release-homebrew.sh $(version) ${cliOutputDir}\n.PHONY: release-cli\n\nrelease-server:\nifndef version\n\t$(error version is required. Usage: make version=0.1.0 release-server)\nendif\nifndef GH\n\t$(error please install github-cli)\nendif\n\n\t@echo \"==> releasing server\"\n\t@${currentDir}/scripts/release.sh server $(version) ${serverOutputDir}\n\n\t@echo \"==> building and releasing docker image\"\n\t@(cd ${currentDir}/host/docker && ./build.sh $(version))\n\t@(cd ${currentDir}/host/docker && ./release.sh $(version))\n.PHONY: release-server\n\n# migrations\ncreate-migration:\nifndef filename\n\t$(error filename is required. Usage: make filename=your-filename create-migration)\nendif\n\n\t@(cd ${currentDir}/pkg/server/database && ./scripts/create-migration.sh $(filename))\n.PHONY: create-migration\n\nclean:\n\t@git clean -f\n\t@rm -rf build\n.PHONY: clean\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.40234375,
          "content": "![Dnote](assets/logo.png)\n=========================\n\n![Build Status](https://github.com/dnote/dnote/actions/workflows/ci.yml/badge.svg)\n\nDnote is a simple command line notebook for programmers.\n\nIt **keeps you focused** by providing a way of effortlessly capturing and retrieving information **without leaving your terminal**. It also offers a seamless **multi-device sync**.\n\n![A demo of Dnote command line interface](assets/cli.gif \"Dnote command line interface\")\n\n## Installation\n\nOn macOS, you can install using Homebrew:\n\n```sh\nbrew tap dnote/dnote\nbrew install dnote\n```\n\nOn Linux or macOS, you can use the installation script:\n\n    curl -s https://www.getdnote.com/install | sh\n\nOtherwise, you can download the binary for your platform manually from the [releases page](https://github.com/dnote/dnote/releases).\n\n## Server\n\nThe quickest way to experience the Dnote server is to use [Dnote Cloud](https://app.getdnote.com).\n\nOr you can install it on your server by [using Docker](https://github.com/dnote/dnote/blob/master/host/docker/README.md), or [using a binary](https://github.com/dnote/dnote/blob/master/SELF_HOSTING.md).\n\n## Documentation\n\nPlease see [Dnote wiki](https://github.com/dnote/dnote/wiki) for the documentation.\n\n## See Also\n\n- [Homepage](https://www.getdnote.com)\n- [I Wrote Down Everything I Learned While Programming for a Month](https://www.getdnote.com/blog/writing-everything-i-learn-coding-for-a-month/)\n"
        },
        {
          "name": "SELF_HOSTING.md",
          "type": "blob",
          "size": 5.048828125,
          "content": "# Installing Dnote Server\n\nThis guide documents the steps for installing the Dnote server on your own machine. If you prefer Docker, please see [the Docker guide](https://github.com/dnote/dnote/blob/master/host/docker/README.md).\n\n## Overview\n\nDnote server comes as a single binary file that you can simply download and run. It uses Postgres as the database.\n\n## Installation\n\n1. Install Postgres 11+.\n2. Create a `dnote` database by running `createdb dnote`\n3. Download the official Dnote server release from the [release page](https://github.com/dnote/dnote/releases).\n4. Extract the archive and move the `dnote-server` executable to `/usr/local/bin`.\n\n```bash\ntar -xzf dnote-server-$version-$os.tar.gz\nmv ./dnote-server /usr/local/bin\n```\n\n4. Run Dnote\n\n```bash\nGO_ENV=PRODUCTION \\\nOnPremises=true \\\nDBHost=localhost \\\nDBPort=5432 \\\nDBName=dnote \\\nDBUser=$user \\\nDBPassword=$password \\\nWebURL=$webURL \\\nSmtpHost=$SmtpHost \\\nSmtpPort=$SmtpPort \\\nSmtpUsername=$SmtpUsername \\\nSmtpPassword=$SmtpPassword \\\nDisableRegistration=false \\\n  dnote-server start\n```\n\nReplace `$user`, `$password` with the credentials of the Postgres user that owns the `dnote` database.\n\nReplace `$webURL` with the full URL to your server, without a trailing slash (e.g. `https://your.server`).\n\nReplace `$SmtpHost`, `SmtpPort`, `$SmtpUsername`, `$SmtpPassword` with actual values, if you would like to receive spaced repetition through email.\n\nReplace `DisableRegistration` to `true` if you would like to disable user registrations.\n\nBy default, dnote server will run on the port 3000.\n\n## Configuration\n\nBy now, Dnote is fully functional in your machine. The API, frontend app, and the background tasks are all in the single binary. Let's take a few more steps to configure Dnote.\n\n### Configure Nginx\n\nTo make it accessible from the Internet, you need to configure Nginx.\n\n1. Install nginx.\n2. Create a new file in `/etc/nginx/sites-enabled/dnote` with the following contents:\n\n```\nserver {\n\tserver_name my-dnote-server.com;\n\n\tlocation / {\n\t\tproxy_set_header X-Real-IP $remote_addr;\n\t\tproxy_set_header X-Forwarded-For $remote_addr;\n\t\tproxy_set_header Host $host;\n\t\tproxy_pass http://127.0.0.1:3000;\n\t}\n}\n```\n3. Replace `my-dnote-server.com` with the URL for your server.\n4. Reload the nginx configuration by running the following:\n\n```\nsudo service nginx reload\n```\n\n### Configure Apache2\n\n1. Install Apache2 and install/enable mod_proxy.\n2. Create a new file in `/etc/apache2/sites-available/dnote.conf` with the following contents:\n\n```\n<VirtualHost *:80>\n    ServerName notes.example.com\n\n    ProxyRequests Off\n    ProxyPreserveHost On\n    ProxyPass / http://127.0.0.1:3000/ keepalive=On\n    ProxyPassReverse / http://127.0.0.1:3000/\n    RequestHeader set X-Forwarded-HTTPS \"0\"\n</VirtualHost>\n```\n\n3. Enable the dnote site and restart the Apache2 service by running the following:\n\n```\na2ensite dnote\nsudo service apache2 restart\n```\n\nNow you can access the Dnote frontend application on `/`, and the API on `/api`.\n\n### Configure TLS by using LetsEncrypt\n\nIt is recommended to use HTTPS. Obtain a certificate using LetsEncrypt and configure TLS in Nginx.\n\nIn the future versions of the Dnote Server, HTTPS will be required at all times.\n\n### Run Dnote As a Daemon\n\nWe can use `systemd` to run Dnote in the background as a Daemon, and automatically start it on system reboot.\n\n1. Create a new file at `/etc/systemd/system/dnote.service` with the following content:\n\n```\n[Unit]\nDescription=Starts the dnote server\nRequires=network.target\nAfter=network.target\n\n[Service]\nType=simple\nUser=$user\nRestart=always\nRestartSec=3\nWorkingDirectory=/home/$user\nExecStart=/usr/local/bin/dnote-server start\nEnvironment=GO_ENV=PRODUCTION\nEnvironment=OnPremises=true\nEnvironment=DBHost=localhost\nEnvironment=DBPort=5432\nEnvironment=DBName=dnote\nEnvironment=DBUser=$DBUser\nEnvironment=DBPassword=$DBPassword\nEnvironment=DBSkipSSL=true\nEnvironment=WebURL=$WebURL\nEnvironment=SmtpHost=\nEnvironment=SmtpPort=\nEnvironment=SmtpUsername=\nEnvironment=SmtpPassword=\n\n[Install]\nWantedBy=multi-user.target\n```\n\nReplace `$user`, `$WebURL`, `$DBUser`, and `$DBPassword` with the actual values.\n\nOptionally, if you would like to send spaced repetitions throught email, populate `SmtpHost`, `SmtpPort`, `SmtpUsername`, and `SmtpPassword`.\n\n2. Reload the change by running `sudo systemctl daemon-reload`.\n3. Enable the Daemon  by running `sudo systemctl enable dnote`.`\n4. Start the Daemon by running `sudo systemctl start dnote`\n\n### Configure clients\n\nLet's configure Dnote clients to connect to the self-hosted web API endpoint.\n\n#### CLI\n\nWe need to modify the configuration file for the CLI. It should have been generated at `~/.config/dnote/dnoterc` upon running the CLI for the first time.\n\nThe following is an example configuration:\n\n```yaml\neditor: nvim\napiEndpoint: https://api.getdnote.com\n```\n\nSimply change the value for `apiEndpoint` to a full URL to the self-hosted instance, followed by '/api', and save the configuration file.\n\ne.g.\n\n```yaml\neditor: nvim\napiEndpoint: my-dnote-server.com/api\n```\n\n#### Browser extension\n\nNavigate into the 'Settings' tab and set the values for 'API URL', and 'Web URL'.\n"
        },
        {
          "name": "Vagrantfile",
          "type": "blob",
          "size": 0.8515625,
          "content": "# -*- mode: ruby -*-\n\nVagrant.configure(\"2\") do |config|\n  config.vm.box = \"ubuntu/bionic64\"\n  config.vm.synced_folder '.', '/go/src/github.com/dnote/dnote'\n  config.vm.network \"forwarded_port\", guest: 3000, host: 3000\n  config.vm.network \"forwarded_port\", guest: 8080, host: 8080\n  config.vm.network \"forwarded_port\", guest: 5432, host: 5433\n\n  config.vm.provision 'shell', path: './scripts/vagrant/install_utils.sh'\n  config.vm.provision 'shell', path: './scripts/vagrant/install_go.sh', privileged: false\n  config.vm.provision 'shell', path: './scripts/vagrant/install_node.sh', privileged: false\n  config.vm.provision 'shell', path: './scripts/vagrant/install_postgres.sh', privileged: false\n  config.vm.provision 'shell', path: './scripts/vagrant/bootstrap.sh', privileged: false\n\n  config.vm.provider \"virtualbox\" do |v|\n    v.memory = 4000\n    v.cpus = 2\n  end\nend\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.572265625,
          "content": "module github.com/dnote/dnote\n\ngo 1.21\n\ntoolchain go1.21.6\n\nrequire (\n\tgithub.com/aymerick/douceur v0.2.0\n\tgithub.com/dnote/actions v0.2.0\n\tgithub.com/fatih/color v1.15.0\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/google/go-github v17.0.0+incompatible\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/gorilla/csrf v1.7.2\n\tgithub.com/gorilla/mux v1.8.1\n\tgithub.com/gorilla/schema v1.2.1\n\tgithub.com/jinzhu/gorm v1.9.16\n\tgithub.com/joho/godotenv v1.5.1\n\tgithub.com/lib/pq v1.10.9\n\tgithub.com/mattn/go-sqlite3 v1.14.20\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/radovskyb/watcher v1.0.7\n\tgithub.com/robfig/cron v1.2.0\n\tgithub.com/rubenv/sql-migrate v1.6.1\n\tgithub.com/sergi/go-diff v1.3.1\n\tgithub.com/spf13/cobra v1.8.0\n\tgolang.org/x/crypto v0.21.0\n\tgolang.org/x/time v0.5.0\n\tgopkg.in/gomail.v2 v2.0.0-20160411212932-81ebce5c23df\n\tgopkg.in/yaml.v2 v2.4.0\n)\n\nrequire (\n\tgithub.com/PuerkitoBio/goquery v1.8.1 // indirect\n\tgithub.com/andybalholm/cascadia v1.3.2 // indirect\n\tgithub.com/go-gorp/gorp/v3 v3.1.0 // indirect\n\tgithub.com/google/go-querystring v1.1.0 // indirect\n\tgithub.com/gorilla/css v1.0.1 // indirect\n\tgithub.com/gorilla/securecookie v1.1.2 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/jinzhu/inflection v1.0.0 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgolang.org/x/net v0.23.0 // indirect\n\tgolang.org/x/sys v0.18.0 // indirect\n\tgolang.org/x/term v0.18.0 // indirect\n\tgopkg.in/alexcesaro/quotedprintable.v3 v3.0.0-20150716171945-2caba252f4dc // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 15.4619140625,
          "content": "github.com/PuerkitoBio/goquery v1.5.1/go.mod h1:GsLWisAFVj4WgDibEWF4pvYnkVQBpKBKeU+7zCJoLcc=\ngithub.com/PuerkitoBio/goquery v1.8.1 h1:uQxhNlArOIdbrH1tr0UXwdVFgDcZDrZVdcpygAcwmWM=\ngithub.com/PuerkitoBio/goquery v1.8.1/go.mod h1:Q8ICL1kNUJ2sXGoAhPGUdYDJvgQgHzJsnnd3H7Ho5jQ=\ngithub.com/andybalholm/cascadia v1.1.0/go.mod h1:GsXiBklL0woXo1j/WYWtSYYC4ouU9PqHO0sqidkEA4Y=\ngithub.com/andybalholm/cascadia v1.3.1/go.mod h1:R4bJ1UQfqADjvDa4P6HZHLh/3OxWWEqc0Sk8XGwHqvA=\ngithub.com/andybalholm/cascadia v1.3.2 h1:3Xi6Dw5lHF15JtdcmAHD3i1+T8plmv7BQ/nsViSLyss=\ngithub.com/andybalholm/cascadia v1.3.2/go.mod h1:7gtRlve5FxPPgIgX36uWBX58OdBsSS6lUvCFb+h7KvU=\ngithub.com/aymerick/douceur v0.2.0 h1:Mv+mAeH1Q+n9Fr+oyamOlAkUNPWPlA8PPGR0QAaYuPk=\ngithub.com/aymerick/douceur v0.2.0/go.mod h1:wlT5vV2O3h55X9m7iVYN0TBM0NH/MmbLnd30/FjWUq4=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.3/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/denisenkom/go-mssqldb v0.0.0-20191124224453-732737034ffd/go.mod h1:xbL0rPBG9cCiLr28tMa8zpbdarY27NDyej4t/EjAShU=\ngithub.com/denisenkom/go-mssqldb v0.9.0 h1:RSohk2RsiZqLZ0zCjtfn3S4Gp4exhpBWHyQ7D0yGjAk=\ngithub.com/denisenkom/go-mssqldb v0.9.0/go.mod h1:xbL0rPBG9cCiLr28tMa8zpbdarY27NDyej4t/EjAShU=\ngithub.com/dnote/actions v0.2.0 h1:P1ut2/QRKwfAzIIB374vN9A4IanU94C/payEocvngYo=\ngithub.com/dnote/actions v0.2.0/go.mod h1:bBIassLhppVQdbC3iaE92SHBpM1HOVe+xZoAlj9ROxw=\ngithub.com/erikstmartin/go-testdb v0.0.0-20160219214506-8d10e4a1bae5 h1:Yzb9+7DPaBjB8zlTR87/ElzFsnQfuHnVUVqpZZIcV5Y=\ngithub.com/erikstmartin/go-testdb v0.0.0-20160219214506-8d10e4a1bae5/go.mod h1:a2zkGnVExMxdzMo3M0Hi/3sEU+cWnZpSni0O6/Yb/P0=\ngithub.com/fatih/color v1.15.0 h1:kOqh6YHBtK8aywxGerMG2Eq3H6Qgoqeo13Bk2Mv/nBs=\ngithub.com/fatih/color v1.15.0/go.mod h1:0h5ZqXfHYED7Bhv2ZJamyIOUej9KtShiJESRwBDUSsw=\ngithub.com/go-gorp/gorp/v3 v3.1.0 h1:ItKF/Vbuj31dmV4jxA1qblpSwkl9g1typ24xoe70IGs=\ngithub.com/go-gorp/gorp/v3 v3.1.0/go.mod h1:dLEjIyyRNiXvNZ8PSmzpt1GsWAUK8kjVhEpjH8TixEw=\ngithub.com/go-sql-driver/mysql v1.5.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=\ngithub.com/go-sql-driver/mysql v1.6.0 h1:BCTh4TKNUYmOmMUcQ3IipzF5prigylS7XXjEkfCHuOE=\ngithub.com/go-sql-driver/mysql v1.6.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=\ngithub.com/golang-sql/civil v0.0.0-20190719163853-cb61b32ac6fe h1:lXe2qZdvpiX5WZkZR4hgp4KJVfY3nMkvmwbVkpv1rVY=\ngithub.com/golang-sql/civil v0.0.0-20190719163853-cb61b32ac6fe/go.mod h1:8vg3r2VgvsThLBIFL93Qb5yWzgyZWhEmBwUJWevAkK0=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-github v17.0.0+incompatible h1:N0LgJ1j65A7kfXrZnUDaYCs/Sf4rEjNlfyDHW9dolSY=\ngithub.com/google/go-github v17.0.0+incompatible/go.mod h1:zLgOLi98H3fifZn+44m+umXrS52loVEgC2AApnigrVQ=\ngithub.com/google/go-querystring v1.1.0 h1:AnCroh3fv4ZBgVIf1Iwtovgjaw/GiKJo8M8yD/fhyJ8=\ngithub.com/google/go-querystring v1.1.0/go.mod h1:Kcdr2DB4koayq7X8pmAG4sNG59So17icRSOU623lUBU=\ngithub.com/google/gofuzz v1.2.0 h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=\ngithub.com/google/gofuzz v1.2.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gorilla/csrf v1.7.2 h1:oTUjx0vyf2T+wkrx09Trsev1TE+/EbDAeHtSTbtC2eI=\ngithub.com/gorilla/csrf v1.7.2/go.mod h1:F1Fj3KG23WYHE6gozCmBAezKookxbIvUJT+121wTuLk=\ngithub.com/gorilla/css v1.0.1 h1:ntNaBIghp6JmvWnxbZKANoLyuXTPZ4cAMlo6RyhlbO8=\ngithub.com/gorilla/css v1.0.1/go.mod h1:BvnYkspnSzMmwRK+b8/xgNPLiIuNZr6vbZBTPQ2A3b0=\ngithub.com/gorilla/mux v1.8.1 h1:TuBL49tXwgrFYWhqrNgrUNEY92u81SPhu7sTdzQEiWY=\ngithub.com/gorilla/mux v1.8.1/go.mod h1:AKf9I4AEqPTmMytcMc0KkNouC66V3BtZ4qD5fmWSiMQ=\ngithub.com/gorilla/schema v1.2.1 h1:tjDxcmdb+siIqkTNoV+qRH2mjYdr2hHe5MKXbp61ziM=\ngithub.com/gorilla/schema v1.2.1/go.mod h1:Dg5SSm5PV60mhF2NFaTV1xuYYj8tV8NOPRo4FggUMnM=\ngithub.com/gorilla/securecookie v1.1.2 h1:YCIWL56dvtr73r6715mJs5ZvhtnY73hBvEF8kXD8ePA=\ngithub.com/gorilla/securecookie v1.1.2/go.mod h1:NfCASbcHqRSY+3a8tlWJwsQap2VX5pwzwo4h3eOamfo=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/jinzhu/gorm v1.9.16 h1:+IyIjPEABKRpsu/F8OvDPy9fyQlgsg2luMV2ZIH5i5o=\ngithub.com/jinzhu/gorm v1.9.16/go.mod h1:G3LB3wezTOWM2ITLzPxEXgSkOXAntiLHS7UdBefADcs=\ngithub.com/jinzhu/inflection v1.0.0 h1:K317FqzuhWc8YvSVlFMCCUb36O/S9MCKRDI7QkRKD/E=\ngithub.com/jinzhu/inflection v1.0.0/go.mod h1:h+uFLlag+Qp1Va5pdKtLDYj+kHp5pxUVkryuEj+Srlc=\ngithub.com/jinzhu/now v1.0.1 h1:HjfetcXq097iXP0uoPCdnM4Efp5/9MsM0/M+XOTeR3M=\ngithub.com/jinzhu/now v1.0.1/go.mod h1:d3SSVoowX0Lcu0IBviAWJpolVfI5UJVZZ7cO71lE/z8=\ngithub.com/joho/godotenv v1.5.1 h1:7eLL/+HRGLY0ldzfGMeQkb7vMd0as4CfYvUVzLqw0N0=\ngithub.com/joho/godotenv v1.5.1/go.mod h1:f4LDr5Voq0i2e/R5DDNOoa2zzDfwtkZa6DnEwAbqwq4=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/lib/pq v1.1.1/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/lib/pq v1.10.9 h1:YXG7RB+JIjhP29X+OtkiDnYaXQwpS4JEWq7dtCCRUEw=\ngithub.com/lib/pq v1.10.9/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-sqlite3 v1.14.0/go.mod h1:JIl7NbARA7phWnGvh0LKTyg7S9BA+6gx71ShQilpsus=\ngithub.com/mattn/go-sqlite3 v1.14.20 h1:BAZ50Ns0OFBNxdAqFhbZqdPcht1Xlb16pDCqkq1spr0=\ngithub.com/mattn/go-sqlite3 v1.14.20/go.mod h1:Uh1q+B4BYcTPb+yiD3kU8Ct7aC0hY9fxUwlHK0RXw+Y=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/poy/onpar v1.1.2 h1:QaNrNiZx0+Nar5dLgTVp5mXkyoVFIbepjyEoGSnhbAY=\ngithub.com/poy/onpar v1.1.2/go.mod h1:6X8FLNoxyr9kkmnlqpK6LSoiOtrO6MICtWwEuWkLjzg=\ngithub.com/radovskyb/watcher v1.0.7 h1:AYePLih6dpmS32vlHfhCeli8127LzkIgwJGcwwe8tUE=\ngithub.com/radovskyb/watcher v1.0.7/go.mod h1:78okwvY5wPdzcb1UYnip1pvrZNIVEIh/Cm+ZuvsUYIg=\ngithub.com/robfig/cron v1.2.0 h1:ZjScXvvxeQ63Dbyxy76Fj3AT3Ut0aKsyd2/tl3DTMuQ=\ngithub.com/robfig/cron v1.2.0/go.mod h1:JGuDeoQd7Z6yL4zQhZ3OPEVHB7fL6Ka6skscFHfmt2k=\ngithub.com/rogpeppe/go-internal v1.9.0 h1:73kH8U+JUqXU8lRuOHeVHaa/SZPifC7BkcraZVejAe8=\ngithub.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=\ngithub.com/rubenv/sql-migrate v1.6.1 h1:bo6/sjsan9HaXAsNxYP/jCEDUGibHp8JmOBw7NTGRos=\ngithub.com/rubenv/sql-migrate v1.6.1/go.mod h1:tPzespupJS0jacLfhbwto/UjSX+8h2FdWB7ar+QlHa0=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sergi/go-diff v1.3.1 h1:xkr+Oxo4BOQKmkn/B9eMK0g5Kg/983T9DqqPHwYqD+8=\ngithub.com/sergi/go-diff v1.3.1/go.mod h1:aMJSSKb2lpPvRNec0+w3fl7LP9IOFzdc9Pa4NFbPK1I=\ngithub.com/spf13/cobra v1.8.0 h1:7aJaZx1B85qltLMc546zn58BxxfZdR/W22ej9CFoEf0=\ngithub.com/spf13/cobra v1.8.0/go.mod h1:WXLWApfZ71AjXPya3WOlMsY9yMs7YeiHhFVlvLyhcho=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.8.0 h1:pSgiaMZlXftHpm5L7V1+rVB+AZJydKsMxsQBIJw4PKk=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190325154230-a5d413f7728c/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191205180655-e7c4368fe9dd/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.21.0 h1:X31++rzVUdKhX5sWmSOFZxx8UW/ldWx55cbf08iNAMA=\ngolang.org/x/crypto v0.21.0/go.mod h1:0BP7YvVV9gBbVKyeTG0Gyn+gZm94bibOW5BjDEYAOMs=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/net v0.0.0-20180218175443-cbe0f9307d01/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200324143707-d3edc9973b7e/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210916014120-12bc252f5db8/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.7.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.9.0/go.mod h1:d48xBJpPfHeWQsugry2m+kC02ZBRGRgulfHnEXEuWns=\ngolang.org/x/net v0.23.0 h1:7EYJ93RZ9vYSZAIb2x3lnuvqO5zneoD6IvWjuhfxjTs=\ngolang.org/x/net v0.23.0/go.mod h1:JKghWKKOSdJwpW2GEx0Ja7fmaKnMsbu+MWVZTokSYmg=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.7.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.18.0 h1:DBdB3niSjOA/O0blCZBqDefyWNYveAYMNF1Wum0DYQ4=\ngolang.org/x/sys v0.18.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.7.0/go.mod h1:P32HKFT3hSsZrRxla30E9HqToFYAQPCMs/zFMBUFqPY=\ngolang.org/x/term v0.18.0 h1:FcHjZXDMxI8mM3nwhX9HlKop4C0YQvCVCdwYl2wOtE8=\ngolang.org/x/term v0.18.0/go.mod h1:ILwASektA3OnRv7amZ1xhE/KTR+u50pbXfZ03+6Nx58=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/time v0.5.0 h1:o7cqy6amK/52YcAKIPlM3a+Fpj35zvRj2TP+e1xFSfk=\ngolang.org/x/time v0.5.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngopkg.in/alexcesaro/quotedprintable.v3 v3.0.0-20150716171945-2caba252f4dc h1:2gGKlE2+asNV9m7xrywl36YYNnBG5ZQ0r/BOOxqPpmk=\ngopkg.in/alexcesaro/quotedprintable.v3 v3.0.0-20150716171945-2caba252f4dc/go.mod h1:m7x9LTH6d71AHyAX77c9yqWCCa3UKHcVEj9y7hAtKDk=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/gomail.v2 v2.0.0-20160411212932-81ebce5c23df h1:n7WqCuqOuCbNr617RXOY0AWRXxgwEyPp2z+p0+hgMuE=\ngopkg.in/gomail.v2 v2.0.0-20160411212932-81ebce5c23df/go.mod h1:LRQQ+SO6ZHR7tOkpBDuZnXENFzX8qRjMDMyPD6BRkCw=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "host",
          "type": "tree",
          "content": null
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 4.75390625,
          "content": "#!/bin/sh\n#\n# This script installs Dnote into your PATH (/usr/bin/local)\n# Use it like this:\n# $ curl https://raw.githubusercontent.com/dnote/dnote/master/install.sh | sh\n#\n\nset -eu\n\nBLACK='\\033[30;1m'\nRED='\\033[91;1m'\nGREEN='\\033[32;1m'\nRESET='\\033[0m'\n\nprint_step() {\n  printf \"$BLACK%s$RESET\\n\" \"$1\"\n}\n\nprint_error() {\n  printf \"$RED%s$RESET\\n\" \"$1\"\n}\n\nprint_success() {\n  printf \"$GREEN%s$RESET\\n\" \"$1\"\n}\n\nis_command () {\n  command -v \"$1\" >/dev/null 2>&1;\n}\n\nhttp_get() {\n  url=$1\n\n  if is_command curl; then\n    cmd='curl --fail -sSL'\n  elif is_command wget; then\n    cmd='wget -qO -'\n  else\n    print_error \"unable to find wget or curl. please install and try again.\"\n    exit 1\n  fi\n\n  $cmd \"$url\"\n}\n\nhttp_download() {\n  dest=$1\n  srcURL=$2\n\n  if is_command curl; then\n    cmd='curl -L --progress-bar'\n    destflag='-o'\n  elif is_command wget; then\n    cmd='wget -q --show-progress'\n    destflag='-O'\n  else\n    print_error \"unable to find wget or curl. please install and try again.\"\n    exit 1\n  fi\n\n  $cmd $destflag \"$dest\" \"$srcURL\"\n}\n\nuname_os() {\n  os=$(uname -s | tr '[:upper:]' '[:lower:]')\n  echo \"$os\"\n}\n\nuname_arch() {\n  arch=$(uname -m)\n  case $arch in \n    x86_64) arch=\"amd64\" ;;\n    aarch64) arch=\"arm64\" ;;\n    x86) arch=\"386\" ;;\n    i686) arch=\"386\" ;;\n    i386) arch=\"386\" ;;\n  esac\n\n  echo \"$arch\"\n}\n\ncheck_platform() {\n  os=$1\n  arch=$2\n  platform=\"$os/$arch\"\n\n  found=1\n  case \"$platform\" in\n    darwin/amd64) found=0;;\n    linux/amd64) found=0 ;;\n    linux/arm64) found=0 ;;\n  esac\n\n  return $found\n}\n\nhash_sha256() {\n  TARGET=${1:-/dev/stdin}\n  if is_command gsha256sum; then\n    hash=$(gsha256sum \"$TARGET\")\n    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command sha256sum; then\n    hash=$(sha256sum \"$TARGET\")\n    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command shasum; then\n    hash=$(shasum -a 256 \"$TARGET\" 2>/dev/null)\n    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command openssl; then\n    hash=$(openssl -dst openssl dgst -sha256 \"$TARGET\")\n    echo \"$hash\" | cut -d ' ' -f a\n  else\n    print_error \"could not find a command to compute sha256 hash and verify checksum\"\n    exit 1\n  fi\n}\n\nverify_checksum() {\n  filepath=$1\n  checksums=$2\n\n  filename=$(basename \"$filepath\")\n\n  want=$(grep \"${filename}\" \"${checksums}\" 2>/dev/null | cut -d ' ' -f 1)\n  if [ -z \"$want\" ]; then\n    print_error \"unable to find checksum for '${filename}' in '${checksums}'\"\n    exit 1\n  fi\n  got=$(hash_sha256 \"$filepath\")\n  if [ \"$want\" != \"$got\" ]; then\n    print_error \"checksum for '$filepath' did not verify ${want} vs $got\"\n    exit 1\n  fi\n}\n\ninstall_dnote() {\n  sudo_cmd=\"\"\n\n  os=$(uname_os)\n  arch=$(uname_arch)\n\n  if ! check_platform \"$os\" \"$arch\"; then\n    print_error \"System not supported: $os/$arch\"\n    print_error \"Please compile manually from https://github.com/dnote/dnote\"\n    exit 1\n  fi\n\n  binary=dnote\n  owner=dnote\n  repo=cli\n  github_download=\"https://github.com/${owner}/${repo}/releases/download\"\n  tmpdir=\"$(mktemp -d)\"\n  bindir=${bindir:-/usr/local/bin}\n\n  if hash sudo 2>/dev/null; then\n    sudo_cmd=\"sudo\"\n    echo \"You need a root privilege to install Dnote binary to $bindir\"\n\n    if ! is_command \"$sudo_cmd\"; then\n      print_error \"command not found: sudo. You need a root privilege to continue the installation.\"\n      exit 1;\n    fi\n  fi\n\n  # create destination directory if not exists\n  $sudo_cmd mkdir -p \"$bindir\"\n\n  # get the latest version\n  resp=$(http_get \"https://api.github.com/repos/$owner/$repo/releases\")\n  version=$(echo \"$resp\" | tr ',' '\\n' | grep -m 1 \"\\\"tag_name\\\": \\\"cli\" | cut -f4 -d'\"')\n\n  if [ -z \"$version\" ]; then\n    print_error \"Error fetching latest version. Please try again.\"\n    exit 1\n  fi\n\n  # remove the preceding 'cli-v'\n  version=\"${version#cli-v}\"\n\n  checksum=${binary}_${version}_checksums.txt\n  filename=${binary}_${version}_${os}_${arch}\n  tarball=\"${filename}.tar.gz\"\n  binary_url=\"${github_download}/cli-v${version}/${tarball}\"\n  checksum_url=\"${github_download}/cli-v${version}/${checksum}\"\n\n  print_step \"Latest release version is v$version.\"\n\n  print_step \"Downloading $binary_url.\"\n  http_download \"$tmpdir/$tarball\" \"$binary_url\"\n\n  print_step \"Downloading the checksum file for v$version\"\n  http_download \"$tmpdir/$checksum\" \"$checksum_url\"\n\n  print_step \"Comparing checksums for binaries.\"\n  verify_checksum \"$tmpdir/$tarball\" \"$tmpdir/$checksum\"\n\n  # unzip tar\n  print_step \"Inflating the binary.\"\n  (cd \"${tmpdir}\" && tar -xzf \"${tarball}\")\n\n  $sudo_cmd install -d \"${bindir}\"\n  $sudo_cmd install \"${tmpdir}/${binary}\" \"${bindir}/\"\n\n  print_success \"dnote v${version} was successfully installed in $bindir.\"\n}\n\nexit_error() {\n  # shellcheck disable=SC2181\n  if [ \"$?\" -ne 0 ]; then\n    print_error \"A problem occurred while installing Dnote. Please report it on https://github.com/dnote/dnote/issues so that we can help you.\"\n  fi\n}\n\ntrap exit_error EXIT\ninstall_dnote\n"
        },
        {
          "name": "licenses",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}