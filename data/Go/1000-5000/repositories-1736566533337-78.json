{
  "metadata": {
    "timestamp": 1736566533337,
    "page": 78,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "go-mysql-org/go-mysql",
      "stars": 4648,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0126953125,
          "content": "var\nbin\n.idea"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 0.515625,
          "content": "linters:\n  disable-all: true\n  enable:\n    # All code is ready for:\n    - errcheck\n    - staticcheck\n    - typecheck\n    - unused\n    - misspell\n    - nolintlint\n    - goimports\n    - nakedret\n    - unconvert\n    - whitespace\n    - govet\n    - gosimple\n    - ineffassign\n    # ToDo:\n    #- gocritic\n    #- golint\nlinters-settings:\n  nolintlint:\n    allow-unused: false\n    allow-leading-space: false\n    require-specific: true\n\n  govet:\n    enable-all: true\n    disable:\n      - fieldalignment\n      - lostcancel\n      - shadow\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 29.4296875,
          "content": "## Tag v1.10.0 (2024-11-20)\n* replication,cmd: improve flavor handling [#946](https://github.com/go-mysql-org/go-mysql/pull/946) ([dveeden](https://github.com/dveeden))\n* Upgrade github.com/pingcap/tidb/pkg/parser. [#948](https://github.com/go-mysql-org/go-mysql/pull/948) ([Tang8330](https://github.com/Tang8330))\n* replication: Add GTID_TAGGED_LOG_EVENT [#947](https://github.com/go-mysql-org/go-mysql/pull/947) ([dveeden](https://github.com/dveeden))\n* canal: support ipv6 address [#943](https://github.com/go-mysql-org/go-mysql/pull/943) ([sinomoe](https://github.com/sinomoe))\n* Remove failover [#931](https://github.com/go-mysql-org/go-mysql/pull/931) ([dveeden](https://github.com/dveeden))\n* dump: use mariadb-dump when available [#942](https://github.com/go-mysql-org/go-mysql/pull/942) ([dveeden](https://github.com/dveeden))\n* go-mysqlbinlog: set to retry only 10 times [#945](https://github.com/go-mysql-org/go-mysql/pull/945) ([dveeden](https://github.com/dveeden))\n* go-mysqldump: Add option to skip binlog position [#941](https://github.com/go-mysql-org/go-mysql/pull/941) ([dveeden](https://github.com/dveeden))\n* server: Improve example [#936](https://github.com/go-mysql-org/go-mysql/pull/936) ([dveeden](https://github.com/dveeden))\n* dump: use --source-data based on version [#933](https://github.com/go-mysql-org/go-mysql/pull/933) ([dveeden](https://github.com/dveeden))\n* replication: Log info about server [#935](https://github.com/go-mysql-org/go-mysql/pull/935) ([dveeden](https://github.com/dveeden))\n* replication: fix uuid typo [#934](https://github.com/go-mysql-org/go-mysql/pull/934) ([dveeden](https://github.com/dveeden))\n* dump: Support newer mysqldump versions [#932](https://github.com/go-mysql-org/go-mysql/pull/932) ([dveeden](https://github.com/dveeden))\n* replication: Make ServerVersion a proper string [#930](https://github.com/go-mysql-org/go-mysql/pull/930) ([dveeden](https://github.com/dveeden))\n* Makefile: allow for gotip [#928](https://github.com/go-mysql-org/go-mysql/pull/928) ([dveeden](https://github.com/dveeden))\n* client: Fix timeout reset during TLS handshake [#925](https://github.com/go-mysql-org/go-mysql/pull/925) ([willdonnelly](https://github.com/willdonnelly))\n* Ensure ACKs are sent after backup [#921](https://github.com/go-mysql-org/go-mysql/pull/921) ([dt8269](https://github.com/dt8269))\n\n### Tag v1.9.1 (2024-09-12)\n* Fix can't connect to MySQL 8.0 with long password. [#914](https://github.com/go-mysql-org/go-mysql/pull/914) ([lance6716](https://github.com/lance6716))\n* Fix actual master and add -race in CI. [#907](https://github.com/go-mysql-org/go-mysql/pull/907) ([atercattus](https://github.com/atercattus))\n* export EventCacheCount on Canal Config. [#913](https://github.com/go-mysql-org/go-mysql/pull/913) ([tomwei7](https://github.com/tomwei7))\n* FIX:The problem of the ignoreTables parameter not taking effect in the go-mysqldump package. [#910](https://github.com/go-mysql-org/go-mysql/pull/910) ([liuhuanxg](https://github.com/liuhuanxg))\n* fixing golangci-lint@1.60.3 errors of current build [#912](https://github.com/go-mysql-org/go-mysql/pull/) ([dvilaverde](https://github.com/dvilaverde))\n* Handle null index column names in sql.DB loader [#904](https://github.com/go-mysql-org/go-mysql/pull/) ([shauns](https://github.com/shauns))\n* Add DisableFlushBinlogWhileWaiting config and almost every query event triggers OnPosSynced [#900](https://github.com/go-mysql-org/go-mysql/pull/) ([morgo](https://github.com/morgo))\n* allow disabling the default golang database/sql retry behavior [#899](https://github.com/go-mysql-org/go-mysql/pull/) ([dvilaverde](https://github.com/dvilaverde))\n* fix(canal): do not ignore events with LogPos=0, use timestamp to distinguish fake rotate events [#894](https://github.com/go-mysql-org/go-mysql/pull/) ([mefcorvi](https://github.com/mefcorvi))\n* allow packet.Conn buffer size to be adjustable [#892](https://github.com/go-mysql-org/go-mysql/pull/) ([dvilaverde](https://github.com/dvilaverde))\n* time column type string formatting and test coverage [#891](https://github.com/go-mysql-org/go-mysql/pull/) ([jnewmano](https://github.com/jnewmano))\n* Support DSN without 'user:password@' [#888](https://github.com/go-mysql-org/go-mysql/pull/) ([dvilaverde](https://github.com/dvilaverde))\n* add support for driver.NamedValueChecker on driver connection [#887](https://github.com/go-mysql-org/go-mysql/pull/) ([dvilaverde](https://github.com/dvilaverde))\n* Additional Driver args for compression and connection read/write timeouts [#885](https://github.com/go-mysql-org/go-mysql/pull/) ([dvilaverde](https://github.com/dvilaverde))\n* reduce memory allocations when zlib compression is enabled [#880](https://github.com/go-mysql-org/go-mysql/pull/) ([dvilaverde](https://github.com/dvilaverde))\n* Fix no table is replicated when excludeTableRegex is set while includeTableRegex is nil [#874](https://github.com/go-mysql-org/go-mysql/pull/) ([gaojijun](https://github.com/gaojijun))\n* Make protocol version check more strict [#878](https://github.com/go-mysql-org/go-mysql/pull/) ([dveeden](https://github.com/dveeden))\n\n### Tag v1.8.0 (2024-05-10)\n* Fix bug in handling sub events of replication.TransactionPayloadEvent. [#875](https://github.com/go-mysql-org/go-mysql/pull/875) ([froot](https://github.com/froot))\n* CI: Add tests for various MySQL versions. [#870](https://github.com/go-mysql-org/go-mysql/pull/870) ([dveeden](https://github.com/dveeden))\n* Fix 'invalid compressed sequence' error, issue #871. [#872](https://github.com/go-mysql-org/go-mysql/pull/872) ([dvilaverde](https://github.com/dvilaverde))\n* Fixing bad connection error when reading large compressed packets. [#863](https://github.com/go-mysql-org/go-mysql/pull/863) ([dvilaverde](https://github.com/dvilaverde))\n* Collation in auth handshake are 1-byte. [#865](https://github.com/go-mysql-org/go-mysql/pull/865) ([dvilaverde](https://github.com/dvilaverde))\n* Use new terms for replication on MySQL 8.4.0. [#867](https://github.com/go-mysql-org/go-mysql/pull/867) ([dveeden](https://github.com/dveeden))\n* CI: Fix warning about restore cache failure. [#869](https://github.com/go-mysql-org/go-mysql/pull/869) ([dveeden](https://github.com/dveeden))\n* CI: Update ci workflow. [#868](https://github.com/go-mysql-org/go-mysql/pull/868) ([dveeden](https://github.com/dveeden))\n* Set read deadline for new conection to fix handshake stuck. [#861](https://github.com/go-mysql-org/go-mysql/pull/861) ([tangenta](https://github.com/tangenta))\n* Allow setting the collation in auth handshake. [#860](https://github.com/go-mysql-org/go-mysql/pull/860) ([dvilaverde](https://github.com/dvilaverde))\n* Fix close canal client panic if use Execute after mysql host down. [#858](https://github.com/go-mysql-org/go-mysql/pull/858) ([tomwei7](https://github.com/tomwei7))\n* Fix: (*RowsEvent).handleUnsigned()  panic. [#856](https://github.com/go-mysql-org/go-mysql/pull/856) ([equnchen](https://github.com/equnchen))\n* Fix comparison bug in MariadbGTIDSet.Equal() function. [#853](https://github.com/go-mysql-org/go-mysql/pull/853) ([okJiang](https://github.com/okJiang))\n* Separate serverID of Mariadb GTID set. [#852](https://github.com/go-mysql-org/go-mysql/pull/852) ([okJiang](https://github.com/okJiang))\n* Tune slice append performance. [#850](https://github.com/go-mysql-org/go-mysql/pull/850) ([hjweddie](https://github.com/hjweddie))\n* Refactor StartBackup to Support Custom Backup Handlers. [#849](https://github.com/go-mysql-org/go-mysql/pull/849) ([doraemonkeys](https://github.com/doraemonkeys))\n* Update client pool logic. [#846](https://github.com/go-mysql-org/go-mysql/pull/846) ([atercattus](https://github.com/atercattus))\n* Change JSON library to improve performance. [#840](https://github.com/go-mysql-org/go-mysql/pull/840) ([hjweddie](https://github.com/hjweddie))\n* Add support for createIndexStmt and dropIndexStmt. [#844](https://github.com/go-mysql-org/go-mysql/pull/844) ([deadspacewii](https://github.com/deadspacewii))\n* Add OnRowsQueryEvent to EventHandler. [#841](https://github.com/go-mysql-org/go-mysql/pull/841) ([sudevva](https://github.com/sudevva))\n* Update pingcap/tidb parser to new location. [#836](https://github.com/go-mysql-org/go-mysql/pull/836) ([hawkingrei](https://github.com/hawkingrei))\n* Make SyncedTimestamp goroutine-safe. [#835](https://github.com/go-mysql-org/go-mysql/pull/835) ([tsukanov-as](https://github.com/tsukanov-as))\n* Add comment about golang type of RowsEvent.Rows. [#828](https://github.com/go-mysql-org/go-mysql/pull/828) ([lance6716](https://github.com/lance6716))\n* Update pingcap/tidb parser to new location. [#834](https://github.com/go-mysql-org/go-mysql/pull/834) ([morgo](https://github.com/morgo))\n* Add a optional function to decode optional meta of table map event. [#833](https://github.com/go-mysql-org/go-mysql/pull/833) ([zing22845](https://github.com/zing22845))\n* Skip decoding of excluded table rows. [#831](https://github.com/go-mysql-org/go-mysql/pull/831) ([mcuelenaere](https://github.com/mcuelenaere))\n* Add EventCacheCount as member of BinlogSyncerConfig to limit streamer's event channel size. [#830](https://github.com/go-mysql-org/go-mysql/pull/830) ([zing22845](https://github.com/zing22845))\n* Feat: handle subevents in transaction payload event. [#827](https://github.com/go-mysql-org/go-mysql/pull/827) ([hjweddie](https://github.com/hjweddie))\n* Feat:add code comments & refactor mysql config constant. [#826](https://github.com/go-mysql-org/go-mysql/pull/826) ([CocaineCong](https://github.com/CocaineCong))\n* Add String() for FieldValue. [#825](https://github.com/go-mysql-org/go-mysql/pull/825) ([lance6716](https://github.com/lance6716))\n* Fix typo: expectSequnceNumber -> expectSequenceNumber. [#824](https://github.com/go-mysql-org/go-mysql/pull/824) ([gaaf](https://github.com/gaaf))\n* Refactor: modify the form of variable declarations. [#822](https://github.com/go-mysql-org/go-mysql/pull/822) ([CocaineCong](https://github.com/CocaineCong))\n* Add GTIDEvent interface to get the SequenceNumber and LastCommitted. [#818](https://github.com/go-mysql-org/go-mysql/pull/818) ([cameron-p-m](https://github.com/cameron-p-m))\n* Add function to parse 'extradata’ in rows event. [#817](https://github.com/go-mysql-org/go-mysql/pull/817) ([chungeun-choi](https://github.com/chungeun-choi))\n* Fix: prevent panic on malformed handshake. [#819](https://github.com/go-mysql-org/go-mysql/pull/819) ([btoonk](https://github.com/btoonk))\n* Add VisibilityBitmap to TableMapEvent in replication. [#813](https://github.com/go-mysql-org/go-mysql/pull/813) ([dongwook-chan](https://github.com/dongwook-chan))\n* Tests: select testdb and use MySQL 8.0 by default. [#789](https://github.com/go-mysql-org/go-mysql/pull/789) ([dveeden](https://github.com/dveeden))\n* Fix: constant name mismatch. [#805](https://github.com/go-mysql-org/go-mysql/pull/805) ([lengdavid](https://github.com/lengdavid))\n* Change unit test framework to https://github.com/stretchr/testify. [#803](https://github.com/go-mysql-org/go-mysql/pull/803) ([lance6716](https://github.com/lance6716))\n* Client: add close method for client pool. [#797](https://github.com/go-mysql-org/go-mysql/pull/797) ([RainJoe](https://github.com/RainJoe))\n* Bump golang.org/x/text from 0.3.6 to 0.3.8. [#802](https://github.com/go-mysql-org/go-mysql/pull/802) ([dependabot[bot]](https://github.com/apps/dependabot))\n* Switch zstd library to allow build on arm64 and amd64. [#801](https://github.com/go-mysql-org/go-mysql/pull/801) ([dveeden](https://github.com/dveeden))\n* Support LOCAL INFILE request. [#798](https://github.com/go-mysql-org/go-mysql/pull/798) ([masahide](https://github.com/masahide))\n* Support MySQL Compressed Protocol. [#787](https://github.com/go-mysql-org/go-mysql/pull/787) ([dveeden](https://github.com/dveeden))\n* Add test for attributes. [#790](https://github.com/go-mysql-org/go-mysql/pull/790) ([dveeden](https://github.com/dveeden))\n* Set library specific connection attributes. [#788](https://github.com/go-mysql-org/go-mysql/pull/788) ([dveeden](https://github.com/dveeden))\n* Add support for MariaDB compressed binlog events. [#786](https://github.com/go-mysql-org/go-mysql/pull/786) ([monder](https://github.com/monder))\n* Fix: should use column index to set null bitmap when building binary resultset. [#780](https://github.com/go-mysql-org/go-mysql/pull/780) ([luyui](https://github.com/luyui))\n* Mysql8 auth compatibility. [#781](https://github.com/go-mysql-org/go-mysql/pull/781) ([atercattus](https://github.com/atercattus))\n* Fix: server/handshake_resp_test.go 's mysql doc link can't be opened. [#782](https://github.com/go-mysql-org/go-mysql/pull/782) ([zhiiw](https://github.com/zhiiw))\n* Support for PARTIAL_UPDATE_ROWS_EVENT binlog event and PARTIAL_JSON mode. [#774](https://github.com/go-mysql-org/go-mysql/pull/774) ([atercattus](https://github.com/atercattus))\n* Canal: use localhost option. [#777](https://github.com/go-mysql-org/go-mysql/pull/777) ([AleksandrShibanov](https://github.com/AleksandrShibanov))\n* Update CI Ubuntu image version and increase timeout. [#779](https://github.com/go-mysql-org/go-mysql/pull/779) ([lance6716](https://github.com/lance6716))\n* This fixes issue #34. Using the wrong hostname. [#36](https://github.com/go-mysql-org/go-mysql/pull/36) ([gdey](https://github.com/gdey))\n* Decoding of compressed binlog events. [#773](https://github.com/go-mysql-org/go-mysql/pull/773) ([dveeden](https://github.com/dveeden))\n* Update Terminology. [#772](https://github.com/go-mysql-org/go-mysql/pull/772) ([dveeden](https://github.com/dveeden))\n* Allow to run all tests with mysql:8. [#765](https://github.com/go-mysql-org/go-mysql/pull/765) ([atercattus](https://github.com/atercattus))\n\n### Tag v1.7.0 (2023-01-31)\n* Replication - just return an error not logging it. [#764](https://github.com/go-mysql-org/go-mysql/pull/764) ([atercattus](https://github.com/atercattus))\n* Binlogsyncer: Format config in logs. [#763](https://github.com/go-mysql-org/go-mysql/pull/763) ([dveeden](https://github.com/dveeden))\n* Allow to run tests in local environment + fix tests for it. [#762](https://github.com/go-mysql-org/go-mysql/pull/762) ([atercattus](https://github.com/atercattus))\n* Mariadb: fix nil currGset for mariadb. [#760](https://github.com/go-mysql-org/go-mysql/pull/760) ([GMHDBJD](https://github.com/GMHDBJD))\n* Adding replication protocol support to mysql server implementation. [#759](https://github.com/go-mysql-org/go-mysql/pull/759) ([Fizic](https://github.com/Fizic))\n* Upgrade  github.com/pingcap/parser to github.com/pingcap/tidb/parser. [#758](https://github.com/go-mysql-org/go-mysql/pull/758) ([axfor](https://github.com/axfor))\n* Support \"mysql_clear_password\" auth plugin. [#757](https://github.com/go-mysql-org/go-mysql/pull/757) ([tirsen](https://github.com/tirsen))\n* Handle fake rotate event as real if binlog filename changed. [#753](https://github.com/go-mysql-org/go-mysql/pull/753) ([gaojijun](https://github.com/gaojijun))\n* Binlog_syncer: reduce the times of Clone of MySQLGTIDSet to speed up. [#746](https://github.com/go-mysql-org/go-mysql/pull/746) ([GMHDBJD](https://github.com/GMHDBJD))\n* Support to check if a column is primary key. [#744](https://github.com/go-mysql-org/go-mysql/pull/744) ([fungaren](https://github.com/fungaren))\n* Fix panic when logger or dialer is not set in canal config. [#743](https://github.com/go-mysql-org/go-mysql/pull/743) ([fungaren](https://github.com/fungaren))\n* EventHandlerV2 support handle event with replication.EventHeader. [#740](https://github.com/go-mysql-org/go-mysql/pull/740) ([BLAZZ](https://github.com/BLAZZ))\n* Speed up gtid process for mysql. [#738](https://github.com/go-mysql-org/go-mysql/pull/738) ([GMHDBJD](https://github.com/GMHDBJD))\n* Parser: allow user-defined rows_event decode func. [#737](https://github.com/go-mysql-org/go-mysql/pull/737) ([GMHDBJD](https://github.com/GMHDBJD))\n* Code refractoring. [#736](https://github.com/go-mysql-org/go-mysql/pull/736) ([tech-sumit](https://github.com/tech-sumit))\n* Make logger require an interface instead of a concrete implementation. [#732](https://github.com/go-mysql-org/go-mysql/pull/732) ([mcuelenaere](https://github.com/mcuelenaere))\n* Packet: fix misusing of defer. [#729](https://github.com/go-mysql-org/go-mysql/pull/729) ([shizhx](https://github.com/shizhx))\n* Fix: fix client field list. [#726](https://github.com/go-mysql-org/go-mysql/pull/726) ([black-06](https://github.com/black-06))\n* Add go1.19 test matrix. [#725](https://github.com/go-mysql-org/go-mysql/pull/725) ([takumin](https://github.com/takumin))\n* Removed use of deprecated ioutil. [#724](https://github.com/go-mysql-org/go-mysql/pull/724) ([skoef](https://github.com/skoef))\n* Update testify dependency. [#722](https://github.com/go-mysql-org/go-mysql/pull/722) ([lance6716](https://github.com/lance6716))\n* Fix: return null values properly in proxy mode. [#721](https://github.com/go-mysql-org/go-mysql/pull/721) ([btoonk](https://github.com/btoonk))\n* Added SetTableCache method to set new schema for a table without load…. [#719](https://github.com/go-mysql-org/go-mysql/pull/719) ([sergan99](https://github.com/sergan99))\n* Use background context when KILL last connection. [#718](https://github.com/go-mysql-org/go-mysql/pull/718) ([D3Hunter](https://github.com/D3Hunter))\n* Fix typo. [#717](https://github.com/go-mysql-org/go-mysql/pull/717) ([psi59](https://github.com/psi59))\n* Fix readme example. [#716](https://github.com/go-mysql-org/go-mysql/pull/716) ([trim21](https://github.com/trim21))\n* Use net.JoinHostPort to join host and port. [#715](https://github.com/go-mysql-org/go-mysql/pull/715) ([GMHDBJD](https://github.com/GMHDBJD))\n* Optim: remove useless return value for mysql.util.RandomBuf. [#708](https://github.com/go-mysql-org/go-mysql/pull/708) ([LPX3F8](https://github.com/LPX3F8))\n* Add support for custom dialer in canal and binlog syncer. [#707](https://github.com/go-mysql-org/go-mysql/pull/707) ([viciious](https://github.com/viciious))\n* Fix initialization of TLS connections. [#706](https://github.com/go-mysql-org/go-mysql/pull/706) ([viciious](https://github.com/viciious))\n* Use existing function for comparing auth data. [#704](https://github.com/go-mysql-org/go-mysql/pull/704) ([skoef](https://github.com/skoef))\n\n### Tag v1.6.0 (2022-06-16)\n* Allow logger override. [#699](https://github.com/go-mysql-org/go-mysql/pull/699) ([cameron-p-m](https://github.com/cameron-p-m))\n* Improved the server example in README. [#696](https://github.com/go-mysql-org/go-mysql/pull/696) ([skoef](https://github.com/skoef))\n* Allow TLS connections in the driver. [#673](https://github.com/go-mysql-org/go-mysql/pull/673) ([atomicules](https://github.com/atomicules))\n\n### Tag v1.5.0 (2022-04-30)\n* Replacing github.com/satori/go.uuid with github.com/google/uuid. [#690](https://github.com/go-mysql-org/go-mysql/pull/690) ([martinhrvn](https://github.com/martinhrvn))\n* Fix dump gtid regexp. [#688](https://github.com/go-mysql-org/go-mysql/pull/688) ([yrbb](https://github.com/yrbb))\n* Utilise byteSlice as a part of struct to avoid allocations. [#686](https://github.com/go-mysql-org/go-mysql/pull/686) ([moredure](https://github.com/moredure))\n* Update bytes_buffer_pool.go. [#685](https://github.com/go-mysql-org/go-mysql/pull/685) ([moredure](https://github.com/moredure))\n* Add go1.18 to the test matrix. [#684](https://github.com/go-mysql-org/go-mysql/pull/684) ([moredure](https://github.com/moredure))\n* Add 1.17 version into the test matrix. [#683](https://github.com/go-mysql-org/go-mysql/pull/683) ([moredure](https://github.com/moredure))\n* Stop using channel for memory pooling. [#682](https://github.com/go-mysql-org/go-mysql/pull/682) ([moredure](https://github.com/moredure))\n* Fix TIME value near zero will become zero. [#678](https://github.com/go-mysql-org/go-mysql/pull/678) ([lance6716](https://github.com/lance6716))\n* Fixed reading connection attributes on server side. [#676](https://github.com/go-mysql-org/go-mysql/pull/676) ([skoef](https://github.com/skoef))\n* Support client connection attributes on the client side. [#675](https://github.com/go-mysql-org/go-mysql/pull/675) ([skoef](https://github.com/skoef))\n* Support client connection attributes on the server side. [#672](https://github.com/go-mysql-org/go-mysql/pull/672) ([skoef](https://github.com/skoef))\n* Added constants for COM_SET_OPTION. [#670](https://github.com/go-mysql-org/go-mysql/pull/670) ([skoef](https://github.com/skoef))\n* Implemented ExecuteMultiple. [#668](https://github.com/go-mysql-org/go-mysql/pull/668) ([skoef](https://github.com/skoef))\n* Add MysqlGTIDSet.Add() and Minus() methods. [#667](https://github.com/go-mysql-org/go-mysql/pull/667) ([ostinru](https://github.com/ostinru))\n* Enabled ineffassign in golangci. [#666](https://github.com/go-mysql-org/go-mysql/pull/666) ([skoef](https://github.com/skoef))\n* Enabled gosimple in golangci. [#665](https://github.com/go-mysql-org/go-mysql/pull/665) ([skoef](https://github.com/skoef))\n* Add MysqlGTIDSet.Add() and Minus() methods. [#662](https://github.com/go-mysql-org/go-mysql/pull/662) ([ostinru](https://github.com/ostinru))\n* Store json as string in rows events. [#658](https://github.com/go-mysql-org/go-mysql/pull/658) ([D3Hunter](https://github.com/D3Hunter))\n* Set slave_uuid and replica_uuid. [#656](https://github.com/go-mysql-org/go-mysql/pull/656) ([lance6716](https://github.com/lance6716))\n* Fix malformed packet and a panic. [#655](https://github.com/go-mysql-org/go-mysql/pull/655) ([lance6716](https://github.com/lance6716))\n* Fix fetchIndexesViaSqlDB/NewTableFromSqlDB for MySQL 8.0. [#527](https://github.com/go-mysql-org/go-mysql/pull/527) ([RobinGeuze](https://github.com/RobinGeuze))\n\n### Tag v1.4.0 (2021-12-15)\n* Fix that forget to readOK after writing. [#652](https://github.com/go-mysql-org/go-mysql/pull/652) ([lance6716](https://github.com/lance6716))\n* Packet: memory optimization for reading network packet. [#651](https://github.com/go-mysql-org/go-mysql/pull/651) ([zr-hebo](https://github.com/zr-hebo))\n* Add test for Conn.ExecuteSelectStreaming. [#649](https://github.com/go-mysql-org/go-mysql/pull/649) ([atercattus](https://github.com/atercattus))\n* Fix(server):java jdbc connect \"Access denied for user 'root'@'127.0.0.1:3306' (using password: Yes). [#646](https://github.com/go-mysql-org/go-mysql/pull/646) ([pretty66](https://github.com/pretty66))\n* Reuse BytesBuffer in BinlogParser. [#644](https://github.com/go-mysql-org/go-mysql/pull/644) ([D3Hunter](https://github.com/D3Hunter))\n* Add ConnectWithDialer. [#643](https://github.com/go-mysql-org/go-mysql/pull/643) ([bakins](https://github.com/bakins))\n* Read auth_data_len from InitialHandshake packet instead of hard code. [#640](https://github.com/go-mysql-org/go-mysql/pull/640) ([guoyuanchao1202](https://github.com/guoyuanchao1202))\n* Fix: return error if error in packet. [#637](https://github.com/go-mysql-org/go-mysql/pull/637) ([btoonk](https://github.com/btoonk))\n* Fix ast.TruncateTableStmt node name assignment. [#630](https://github.com/go-mysql-org/go-mysql/pull/630) ([daledude](https://github.com/daledude))\n* Support insert argument type json.RawMessage. [#627](https://github.com/go-mysql-org/go-mysql/pull/627) ([domyway](https://github.com/domyway))\n* Adds parsing of IntVarEvents. [#624](https://github.com/go-mysql-org/go-mysql/pull/624) ([IvoGoman](https://github.com/IvoGoman))\n* Allow to set certain client-side capabilities. [#616](https://github.com/go-mysql-org/go-mysql/pull/616) ([skoef](https://github.com/skoef))\n* Add GTID-based replication to example. [#615](https://github.com/go-mysql-org/go-mysql/pull/615) ([lance6716](https://github.com/lance6716))\n* Support MYSQL_TYPE_JSON. [#614](https://github.com/go-mysql-org/go-mysql/pull/614) ([domyway](https://github.com/domyway))\n* Adds documentation for row-based replication flags. [#611](https://github.com/go-mysql-org/go-mysql/pull/611) ([IvoGoman](https://github.com/IvoGoman))\n* Add scheme/Index NoneUnique. [#610](https://github.com/go-mysql-org/go-mysql/pull/610) ([afocus](https://github.com/afocus))\n* Hidden mysql password in log. [#608](https://github.com/go-mysql-org/go-mysql/pull/608) ([elonzh](https://github.com/elonzh))\n* Fix error when trying to check binlog settings. [#602](https://github.com/go-mysql-org/go-mysql/pull/602) ([cr1sp1n](https://github.com/cr1sp1n))\n* Use constant and add comment for magic number 9. [#599](https://github.com/go-mysql-org/go-mysql/pull/599) ([lance6716](https://github.com/lance6716))\n* Extended ExecuteSelectStreaming. [#596](https://github.com/go-mysql-org/go-mysql/pull/596) ([skoef](https://github.com/skoef))\n* Fixed access denied error messages. [#595](https://github.com/go-mysql-org/go-mysql/pull/595) ([skoef](https://github.com/skoef))\n* Replaced all %lu, %ld and %u to %d for correct formatting of errors. [#594](https://github.com/go-mysql-org/go-mysql/pull/594) ([skoef](https://github.com/skoef))\n* Connection status flag manipulation. [#593](https://github.com/go-mysql-org/go-mysql/pull/593) ([skoef](https://github.com/skoef))\n* Return EOF response on COM_SET_OPTION commands. [#590](https://github.com/go-mysql-org/go-mysql/pull/590) ([skoef](https://github.com/skoef))\n* Improved access denied error messages. [#589](https://github.com/go-mysql-org/go-mysql/pull/589) ([skoef](https://github.com/skoef))\n* Expose capability and charset of connections to server. [#588](https://github.com/go-mysql-org/go-mysql/pull/588) ([skoef](https://github.com/skoef))\n* Fix a bug that values of time(1),time(3),time(5) will generate 00:00:00. [#529](https://github.com/go-mysql-org/go-mysql/pull/529) ([hamburgerbox](https://github.com/hamburgerbox))\n\n### Tag v1.3.0 (2021.06.10)\n* Init Resultset in Result when handling ddl statement. [#578](https://github.com/go-mysql-org/go-mysql/pull/578) ([romberli](https://github.com/romberli))\n* Add pool for client connections. [#584](https://github.com/go-mysql-org/go-mysql/pull/584) ([atercattus](https://github.com/atercattus))\n\n### Tag v1.2.1 (2021.05.27)\n* Prevent panic on malformed auth data. [#557](https://github.com/go-mysql-org/go-mysql/pull/557) ([timvaillancourt](https://github.com/timvaillancourt))\n\n### Tag v1.2.0 (2021.05.16)\n* Fix a rare bug in Conn.readResultStreaming. [#573](https://github.com/go-mysql-org/go-mysql/pull/573) ([atercattus](https://github.com/atercattus))\n* Fix tag. [#575](https://github.com/go-mysql-org/go-mysql/pull/575) ([atercattus](https://github.com/atercattus))\n* Update dependency. [#576](https://github.com/go-mysql-org/go-mysql/pull/576) ([Ehco1996](https://github.com/Ehco1996))\n\n### Tag v1.1.2 (2021.04.20)\n* Fix canal test in readme. [#516](https://github.com/go-mysql-org/go-mysql/pull/516) ([gaojijun](https://github.com/gaojijun))\n* UUID clone. [#522](https://github.com/go-mysql-org/go-mysql/pull/522) ([lance6716](https://github.com/lance6716))\n* Sort mariadb gtid set. [#545](https://github.com/go-mysql-org/go-mysql/pull/545) ([zeminzhou](https://github.com/zeminzhou))\n* Mysql: use numeric comparison for binlog filename. [#547](https://github.com/go-mysql-org/go-mysql/pull/547) ([lance6716](https://github.com/lance6716))\n* Fix MySQL spell. [#549](https://github.com/go-mysql-org/go-mysql/pull/549) ([igoso](https://github.com/igoso))\n* Update README.md and CHANGELOG.md. [#564](https://github.com/go-mysql-org/go-mysql/pull/564) ([atercattus](https://github.com/atercattus))\n* Update method now may receive strings with GTID sets. [#569](https://github.com/go-mysql-org/go-mysql/pull/569) ([mialinx](https://github.com/mialinx))\n* Change module name from siddontang/go-mysql to go-mysql-org/go-mysql. [#571](https://github.com/go-mysql-org/go-mysql/pull/571) ([lance6716](https://github.com/lance6716))\n* Fix a bug that not cloned to original memory. [#572](https://github.com/go-mysql-org/go-mysql/pull/572) ([lance6716](https://github.com/lance6716))\n* Update README.md for a new tag. [#574](https://github.com/go-mysql-org/go-mysql/pull/574) ([atercattus](https://github.com/atercattus))\n\n### Tag v1.1.1 (2021.04.08)\n* Restructured dump/ tests. [#563](https://github.com/go-mysql-org/go-mysql/pull/563) ([atercattus](https://github.com/atercattus))\n* Replace magic numbers in canal/canal_test.go by constants. [#562](https://github.com/go-mysql-org/go-mysql/pull/562) ([atercattus](https://github.com/atercattus))\n* Fix parsing GTIDs from mysqlpdump. [#561](https://github.com/go-mysql-org/go-mysql/pull/561) ([dobegor](https://github.com/dobegor))\n* Streaming of SELECT responses. `client/Conn.ExecuteSelectStreaming()` added. [#560](https://github.com/go-mysql-org/go-mysql/pull/560) ([atercattus](https://github.com/atercattus))\n* Migation from travis.ci to github actions. [#559](https://github.com/go-mysql-org/go-mysql/pull/559) ([atercattus](https://github.com/atercattus))\n* Output sorted mysql gtid. [#500](https://github.com/go-mysql-org/go-mysql/pull/500) ([zr-hebo](https://github.com/zr-hebo))\n* Add skipped columns information. [#505](https://github.com/go-mysql-org/go-mysql/pull/505) ([laskoviymishka](https://github.com/laskoviymishka))\n* Feat: support disable retry sync for canal. [#507](https://github.com/go-mysql-org/go-mysql/pull/507) ([everpcpc](https://github.com/everpcpc))\n* Update README.md. [#511](https://github.com/go-mysql-org/go-mysql/pull/511) ([TennyZhuang](https://github.com/TennyZhuang))\n* Add function to extend replication options. [#508](https://github.com/go-mysql-org/go-mysql/pull/508) ([wefen](https://github.com/wefen))\n\n### Tag v1.1.0 (2020.07.17)\n* Update .travis.yml (go 1.14 and tip). [#510](https://github.com/go-mysql-org/go-mysql/pull/510) ([atercattus](https://github.com/atercattus))\n* Update README.md. [#509](https://github.com/go-mysql-org/go-mysql/pull/509) ([atercattus](https://github.com/atercattus))\n* A lot of memory allocation optimizations. Changed public API for `mysql/Resultset` type. [#466](https://github.com/go-mysql-org/go-mysql/pull/466) ([atercattus](https://github.com/atercattus))\n\n### Tag v1.0.0 (2020.07.17)\nAdd SemVer\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0517578125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014 siddontang\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.8251953125,
          "content": "all: build\n\nGO111MODULE=on\nMYSQL_VERSION ?= 8.0\nGO ?= go\n\nbuild:\n\t${GO} build -o bin/go-mysqlbinlog cmd/go-mysqlbinlog/main.go\n\t${GO} build -o bin/go-mysqldump cmd/go-mysqldump/main.go\n\t${GO} build -o bin/go-canal cmd/go-canal/main.go\n\t${GO} build -o bin/go-binlogparser cmd/go-binlogparser/main.go\n\t${GO} build -o bin/go-mysqlserver cmd/go-mysqlserver/main.go\n\ntest:\n\t${GO} test --race -timeout 2m ./...\n\ntest-local:\n\tdocker run --rm -d --network=host --name go-mysql-server \\\n\t\t-e MYSQL_ALLOW_EMPTY_PASSWORD=true \\\n\t\t-e MYSQL_DATABASE=test \\\n\t\t-v $${PWD}/docker/resources/replication.cnf:/etc/mysql/conf.d/replication.cnf \\\n\t\tmysql:$(MYSQL_VERSION)\n\tdocker/resources/waitfor.sh 127.0.0.1 3306 \\\n\t\t&& ${GO} test -race -v -timeout 2m ./...\n\tdocker stop go-mysql-server\n\nfmt:\n\tgolangci-lint run --fix\n\nclean:\n\t${GO} clean -i ./...\n\t@rm -rf ./bin\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.6513671875,
          "content": "# go-mysql\n\nA pure go library to handle MySQL network protocol and replication as used by MySQL and MariaDB.\n\n![semver](https://img.shields.io/github/v/tag/go-mysql-org/go-mysql)\n![example workflow](https://github.com/go-mysql-org/go-mysql/actions/workflows/ci.yml/badge.svg)\n![gomod version](https://img.shields.io/github/go-mod/go-version/go-mysql-org/go-mysql/master)\n[![Go Reference](https://pkg.go.dev/badge/github.com/go-mysql-org/go-mysql.svg)](https://pkg.go.dev/github.com/go-mysql-org/go-mysql)\n\n## Changelog\nThis repo uses [Changelog](CHANGELOG.md).\n\n---\n# Content\n* [Replication](#replication) - Process events from a binlog stream.\n* [Incremental dumping](#canal) - Sync from MySQL to Redis, Elasticsearch, etc.\n* [Client](#client) - Simple MySQL client.\n* [Fake server](#server) - server side of the MySQL protocol, as library.\n* [database/sql like driver](#driver) - An alternative `database/sql` driver for MySQL.\n* [Logging](#logging) - Custom logging options.\n* [Migration](#how-to-migrate-to-this-repo) - Information for how to migrate if you used the old location of this project.\n\n## Examples\n\nThe `cmd` directory contains example applications that can be build by running `make build` in the root of the project. The resulting binaries will be places in `bin/`.\n\n- `go-binlogparser`: parses a binlog file at a given offset\n- `go-canal`: streams binlog events from a server to canal\n- `go-mysqlbinlog`: streams binlog events\n- `go-mysqldump`: like `mysqldump`, but in Go\n- `go-mysqlserver`: fake MySQL server\n\n## Replication\n\nReplication package handles MySQL replication protocol like [python-mysql-replication](https://github.com/noplay/python-mysql-replication).\n\nYou can use it as a MySQL replica to sync binlog from master then do something, like updating cache, etc...\n\n### Example\n\n```go\nimport (\n\t\"github.com/go-mysql-org/go-mysql/replication\"\n\t\"os\"\n)\n// Create a binlog syncer with a unique server id, the server id must be different from other MySQL's. \n// flavor is mysql or mariadb\ncfg := replication.BinlogSyncerConfig {\n\tServerID: 100,\n\tFlavor:   \"mysql\",\n\tHost:     \"127.0.0.1\",\n\tPort:     3306,\n\tUser:     \"root\",\n\tPassword: \"\",\n}\nsyncer := replication.NewBinlogSyncer(cfg)\n\n// Start sync with specified binlog file and position\nstreamer, _ := syncer.StartSync(mysql.Position{binlogFile, binlogPos})\n\n// or you can start a gtid replication like\n// gtidSet, _ := mysql.ParseGTIDSet(mysql.MySQLFlavor, \"de278ad0-2106-11e4-9f8e-6edd0ca20947:1-2\")\n// streamer, _ := syncer.StartSyncGTID(gtidSet)\n// the mysql GTID set is like this \"de278ad0-2106-11e4-9f8e-6edd0ca20947:1-2\" and uses mysql.MySQLFlavor\n// the mariadb GTID set is like this \"0-1-100\" and uses mysql.MariaDBFlavor\n\nfor {\n\tev, _ := streamer.GetEvent(context.Background())\n\t// Dump event\n\tev.Dump(os.Stdout)\n}\n\n// or we can use a timeout context\nfor {\n\tctx, cancel := context.WithTimeout(context.Background(), 2*time.Second)\n\tev, err := streamer.GetEvent(ctx)\n\tcancel()\n\n\tif err == context.DeadlineExceeded {\n\t\t// meet timeout\n\t\tcontinue\n\t}\n\n\tev.Dump(os.Stdout)\n}\n```\n\nThe output looks:\n\n```\n=== RotateEvent ===\nDate: 1970-01-01 08:00:00\nLog position: 0\nEvent size: 43\nPosition: 4\nNext log name: mysql.000002\n\n=== FormatDescriptionEvent ===\nDate: 2014-12-18 16:36:09\nLog position: 120\nEvent size: 116\nVersion: 4\nServer version: 5.6.19-log\nCreate date: 2014-12-18 16:36:09\n\n=== QueryEvent ===\nDate: 2014-12-18 16:38:24\nLog position: 259\nEvent size: 139\nSalve proxy ID: 1\nExecution time: 0\nError code: 0\nSchema: test\nQuery: DROP TABLE IF EXISTS `test_replication` /* generated by server */\n```\n\n## Canal \n\nCanal is a package that can sync your MySQL into everywhere, like Redis, Elasticsearch.\n\nFirst, canal will dump your MySQL data then sync changed data using binlog incrementally. \n\nYou must use ROW format for binlog, full binlog row image is preferred, because we may meet some errors when primary key changed in update for minimal or noblob row image. \n\nA simple example:\n\n```go\npackage main\n\nimport (\n\t\"github.com/go-mysql-org/go-mysql/canal\"\n\t\"github.com/siddontang/go-log/log\"\n)\n\ntype MyEventHandler struct {\n\tcanal.DummyEventHandler\n}\n\nfunc (h *MyEventHandler) OnRow(e *canal.RowsEvent) error {\n\tlog.Infof(\"%s %v\\n\", e.Action, e.Rows)\n\treturn nil\n}\n\nfunc (h *MyEventHandler) String() string {\n\treturn \"MyEventHandler\"\n}\n\nfunc main() {\n\tcfg := canal.NewDefaultConfig()\n\tcfg.Addr = \"127.0.0.1:3306\"\n\tcfg.User = \"root\"\n\t// We only care table canal_test in test db\n\tcfg.Dump.TableDB = \"test\"\n\tcfg.Dump.Tables = []string{\"canal_test\"}\n\n\tc, err := canal.NewCanal(cfg)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\t// Register a handler to handle RowsEvent\n\tc.SetEventHandler(&MyEventHandler{})\n\n\t// Start canal\n\tc.Run()\n}\n```\n\nYou can see [go-mysql-elasticsearch](https://github.com/go-mysql-org/go-mysql-elasticsearch) for how to sync MySQL data into Elasticsearch.\n\n## Client\n\nClient package supports a simple MySQL connection driver which you can use it to communicate with MySQL server. \n\n### Example\n\n```go\nimport (\n\t\"github.com/go-mysql-org/go-mysql/client\"\n)\n\n// Connect MySQL at 127.0.0.1:3306, with user root, an empty password and database test\nconn, _ := client.Connect(\"127.0.0.1:3306\", \"root\", \"\", \"test\")\n\n// Or to use SSL/TLS connection if MySQL server supports TLS\n//conn, _ := client.Connect(\"127.0.0.1:3306\", \"root\", \"\", \"test\", func(c *Conn) {c.UseSSL(true)})\n\n// Or to set your own client-side certificates for identity verification for security\n//tlsConfig := NewClientTLSConfig(caPem, certPem, keyPem, false, \"your-server-name\")\n//conn, _ := client.Connect(\"127.0.0.1:3306\", \"root\", \"\", \"test\", func(c *Conn) {c.SetTLSConfig(tlsConfig)})\n\nconn.Ping()\n\n// Insert\nr, _ := conn.Execute(`insert into table (id, name) values (1, \"abc\")`)\n\n// Get last insert id\nprintln(r.InsertId)\n// Or affected rows count\nprintln(r.AffectedRows)\n\n// Select\nr, err := conn.Execute(`select id, name from table where id = 1`)\n\n// Close result for reuse memory (it's not necessary but very useful)\ndefer r.Close()\n\n// Handle resultset\nv, _ := r.GetInt(0, 0)\nv, _ = r.GetIntByName(0, \"id\")\n\n// Direct access to fields\nfor _, row := range r.Values {\n\tfor _, val := range row {\n\t\t_ = val.Value() // interface{}\n\t\t// or\n\t\tif val.Type == mysql.FieldValueTypeFloat {\n\t\t\t_ = val.AsFloat64() // float64\n\t\t}\n\t}   \n}\n```\n\nTested MySQL versions for the client include:\n- 5.5.x\n- 5.6.x\n- 5.7.x\n- 8.0.x\n\n### Example for SELECT streaming (v1.1.1)\nYou can use also streaming for large SELECT responses.\nThe callback function will be called for every result row without storing the whole resultset in memory.\n`result.Fields` will be filled before the first callback call.\n\n```go\n// ...\nvar result mysql.Result\nerr := conn.ExecuteSelectStreaming(`select id, name from table LIMIT 100500`, &result, func(row []mysql.FieldValue) error {\n    for idx, val := range row {\n    \tfield := result.Fields[idx]\n    \t// You must not save FieldValue.AsString() value after this callback is done.\n    \t// Copy it if you need.\n    \t// ...\n    }\n    return nil\n}, nil)\n\n// ...\n```\n\n### Example for connection pool (v1.3.0)\n\n```go\nimport (\n    \"github.com/go-mysql-org/go-mysql/client\"\n)\n\npool := client.NewPool(log.Debugf, 100, 400, 5, \"127.0.0.1:3306\", `root`, ``, `test`)\n// ...\nconn, _ := pool.GetConn(ctx)\ndefer pool.PutConn(conn)\n\nconn.Execute() / conn.Begin() / etc...\n```\n\n## Server\n\nServer package supplies a framework to implement a simple MySQL server which can handle the packets from the MySQL client. \nYou can use it to build your own MySQL proxy. The server connection is compatible with MySQL 5.5, 5.6, 5.7, and 8.0 versions,\nso that most MySQL clients should be able to connect to the Server without modifications.\n\n### Example\n\nMinimalistic MySQL server implementation:\n\n```go\npackage main\n\nimport (\n\t\"log\"\n\t\"net\"\n\n\t\"github.com/go-mysql-org/go-mysql/server\"\n)\n\nfunc main() {\n\t// Listen for connections on localhost port 4000\n\tl, err := net.Listen(\"tcp\", \"127.0.0.1:4000\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\t// Accept a new connection once\n\tc, err := l.Accept()\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\t// Create a connection with user root and an empty password.\n\t// You can use your own handler to handle command here.\n\tconn, err := server.NewConn(c, \"root\", \"\", server.EmptyHandler{})\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\t// as long as the client keeps sending commands, keep handling them\n\tfor {\n\t\tif err := conn.HandleCommand(); err != nil {\n\t\t\tlog.Fatal(err)\n\t\t}\n\t}\n}\n```\n\nAnother shell\n\n```\n$ mysql -h127.0.0.1 -P4000 -uroot\nYour MySQL connection id is 10001\nServer version: 5.7.0\n\nMySQL [(none)]>\n// Since EmptyHandler implements no commands, it will throw an error on any query that you will send\n```\n\n> ```NewConn()``` will use default server configurations:\n> 1. automatically generate default server certificates and enable TLS/SSL support.\n> 2. support three mainstream authentication methods **'mysql_native_password'**, **'caching_sha2_password'**, and **'sha256_password'**\n>    and use **'mysql_native_password'** as default.\n> 3. use an in-memory user credential provider to store user and password.\n>\n> To customize server configurations, use ```NewServer()``` and create connection via ```NewCustomizedConn()```.\n\n## Driver\n\nDriver is the package that you can use go-mysql with go database/sql like other drivers. A simple example:\n\n```go\npackage main\n\nimport (\n\t\"database/sql\"\n\n\t_ \"github.com/go-mysql-org/go-mysql/driver\"\n)\n\nfunc main() {\n\t// dsn format: \"user:password@addr?dbname\"\n\tdsn := \"root@127.0.0.1:3306?test\"\n\tdb, _ := sql.Open(\"mysql\", dsn)\n\tdb.Close()\n}\n```\n\n### Driver Options\n\nConfiguration options can be provided by the standard DSN (Data Source Name).\n\n```\n[user[:password]@]addr[/db[?param=X]]\n```\n\n#### `collation`\n\nSet a collation during the Auth handshake.\n\n| Type      | Default         | Example                                               |\n| --------- | --------------- | ----------------------------------------------------- |\n| string    | utf8_general_ci | user:pass@localhost/mydb?collation=latin1_general_ci  |\n\n#### `compress`\n\nEnable compression between the client and the server. Valid values are 'zstd','zlib','uncompressed'.\n\n| Type      | Default       | Example                                 |\n| --------- | ------------- | --------------------------------------- |\n| string    | uncompressed  | user:pass@localhost/mydb?compress=zlib  |\n\n#### `readTimeout`\n\nI/O read timeout. The time unit is specified in the argument value using\ngolang's [ParseDuration](https://pkg.go.dev/time#ParseDuration) format.\n\n0 means no timeout.\n\n| Type      | Default   | Example                                     |\n| --------- | --------- | ------------------------------------------- |\n| duration  | 0         | user:pass@localhost/mydb?readTimeout=10s    |\n\n#### `ssl`\n\nEnable TLS between client and server. Valid values are `true` or `custom`. When using `custom`,\nthe connection will use the TLS configuration set by SetCustomTLSConfig matching the host.\n\n| Type      | Default   | Example                                     |\n| --------- | --------- | ------------------------------------------- |\n| string    |           | user:pass@localhost/mydb?ssl=true           |\n\n#### `timeout`\n\nTimeout is the maximum amount of time a dial will wait for a connect to complete.\nThe time unit is specified in the argument value using golang's [ParseDuration](https://pkg.go.dev/time#ParseDuration) format.\n\n0 means no timeout.\n\n| Type      | Default   | Example                                     |\n| --------- | --------- | ------------------------------------------- |\n| duration  | 0         | user:pass@localhost/mydb?timeout=1m         |\n\n#### `writeTimeout`\n\nI/O write timeout. The time unit is specified in the argument value using\ngolang's [ParseDuration](https://pkg.go.dev/time#ParseDuration) format.\n\n0 means no timeout.\n\n| Type      | Default   | Example                                         |\n| --------- | --------- | ----------------------------------------------- |\n| duration  | 0         | user:pass@localhost/mydb?writeTimeout=1m30s     |\n\n#### `retries`\n\nAllows disabling the golang `database/sql` default behavior to retry errors\nwhen `ErrBadConn` is returned by the driver. When retries are disabled\nthis driver will not return `ErrBadConn` from the `database/sql` package.\n\nValid values are `on` (default) and `off`.\n\n| Type      | Default   | Example                                         |\n| --------- | --------- | ----------------------------------------------- |\n| string    | on        | user:pass@localhost/mydb?retries=off            |\n\n### Custom Driver Options\n\nThe driver package exposes the function `SetDSNOptions`, allowing for modification of the\nconnection by adding custom driver options.\nIt requires a full import of the driver (not by side-effects only).\n\nExample of defining a custom option:\n\n```golang\nimport (\n \"database/sql\"\n\n \"github.com/go-mysql-org/go-mysql/driver\"\n)\n\nfunc main() {\n driver.SetDSNOptions(map[string]DriverOption{\n  \"no_metadata\": func(c *client.Conn, value string) error {\n   c.SetCapability(mysql.CLIENT_OPTIONAL_RESULTSET_METADATA)\n   return nil\n  },\n })\n\n // dsn format: \"user:password@addr/dbname?\"\n dsn := \"root@127.0.0.1:3306/test?no_metadata=true\"\n db, _ := sql.Open(dsn)\n db.Close()\n}\n```\n\n### Custom Driver Name\n\nA custom driver name can be set via build options: `-ldflags '-X \"github.com/go-mysql-org/go-mysql/driver.driverName=gomysql\"'`.\n\nThis can be useful when using [GORM](https://gorm.io/docs/connecting_to_the_database.html#Customize-Driver):\n\n```go\nimport (\n  _ \"github.com/go-mysql-org/go-mysql/driver\"\n  \"gorm.io/driver/mysql\"\n  \"gorm.io/gorm\"\n)\n\ndb, err := gorm.Open(mysql.New(mysql.Config{\n  DriverName: \"gomysql\",\n  DSN: \"gorm:gorm@127.0.0.1:3306/test\",\n}))\n```\n\n### Custom NamedValueChecker\n\nGolang allows for custom handling of query arguments before they are passed to the driver\nwith the implementation of a [NamedValueChecker](https://pkg.go.dev/database/sql/driver#NamedValueChecker). By doing a full import of the driver (not by side-effects only),\na custom NamedValueChecker can be implemented.\n\n```golang\nimport (\n \"database/sql\"\n\n \"github.com/go-mysql-org/go-mysql/driver\"\n)\n\nfunc main() {\n driver.AddNamedValueChecker(func(nv *sqlDriver.NamedValue) error {\n  rv := reflect.ValueOf(nv.Value)\n  if rv.Kind() != reflect.Uint64 {\n   // fallback to the default value converter when the value is not a uint64\n   return sqlDriver.ErrSkip\n  }\n\n  return nil\n })\n\n conn, err := sql.Open(\"mysql\", \"root@127.0.0.1:3306/test\")\n defer conn.Close()\n\n stmt, err := conn.Prepare(\"select * from table where id = ?\")\n defer stmt.Close()\n var val uint64 = math.MaxUint64\n // without the NamedValueChecker this query would fail\n result, err := stmt.Query(val)\n}\n```\n\n\nWe pass all tests in https://github.com/bradfitz/go-sql-test using go-mysql driver. :-)\n\n## Logging\n\nLogging by default is send to stdout.\n\nTo disable logging completely:\n```go\nimport \"github.com/siddontang/go-log/log\"\n...\n        nullHandler, _ := log.NewNullHandler()\n        cfg.Logger = log.NewDefault(nullHandler)\n```\n\nTo write logging to any [`io.Writer`](https://pkg.go.dev/io#Writer):\n```go\nimport \"github.com/siddontang/go-log/log\"\n...\n        w := ...\n        streamHandler, _ := log.NewStreamHandler(w)\n        cfg.Logger = log.NewDefault(streamHandler)\n```\n\nOr you can implement your own [`log.Handler`](https://pkg.go.dev/github.com/siddontang/go-log/log#Handler).\n\n## How to migrate to this repo\nTo change the used package in your repo it's enough to add this `replace` directive to your `go.mod`:\n```\nreplace github.com/siddontang/go-mysql => github.com/go-mysql-org/go-mysql v1.10.0\n```\n\nThis can be done by running this command:\n```\ngo mod edit -replace=github.com/siddontang/go-mysql=github.com/go-mysql-org/go-mysql@v1.10.0\n```\n\nv1.10.0 - is the last tag in repo, feel free to choose what you want.\n\n## Credits\n\ngo-mysql was started by @siddontang and has many [contributors](https://github.com/go-mysql-org/go-mysql/graphs/contributors)\n"
        },
        {
          "name": "canal",
          "type": "tree",
          "content": null
        },
        {
          "name": "clear_vendor.sh",
          "type": "blob",
          "size": 0.4150390625,
          "content": "find vendor \\( -type f -or -type l \\)  -not -name \"*.go\" -not -name \"LICENSE\" -not -name \"*.s\" -not -name \"PATENTS\" -not -name \"*.h\" -not -name \"*.c\" | xargs -I {} rm {}\n# delete all test files\nfind vendor -type f -name \"*_generated.go\" | xargs -I {} rm {}\nfind vendor -type f -name \"*_test.go\" | xargs -I {} rm {}\nfind vendor -type d -name \"_vendor\" | xargs -I {} rm -rf {}\nfind vendor -type d -empty | xargs -I {} rm -rf {}"
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "compress",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "driver",
          "type": "tree",
          "content": null
        },
        {
          "name": "dump",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.22265625,
          "content": "module github.com/go-mysql-org/go-mysql\n\ngo 1.22\n\ntoolchain go1.23.1\n\nrequire (\n\tgithub.com/BurntSushi/toml v1.3.2\n\tgithub.com/Masterminds/semver v1.5.0\n\tgithub.com/go-sql-driver/mysql v1.7.1\n\tgithub.com/goccy/go-json v0.10.2\n\tgithub.com/google/uuid v1.3.0\n\tgithub.com/jmoiron/sqlx v1.3.3\n\tgithub.com/klauspost/compress v1.17.8\n\tgithub.com/pingcap/errors v0.11.5-0.20240311024730-e056997136bb\n\tgithub.com/pingcap/tidb/pkg/parser v0.0.0-20241118164214-4f047be191be\n\tgithub.com/shopspring/decimal v1.2.0\n\tgithub.com/siddontang/go-log v0.0.0-20180807004314-8d05993dda07\n\tgithub.com/stretchr/testify v1.8.4\n)\n\nrequire (\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/kr/pretty v0.3.1 // indirect\n\tgithub.com/pingcap/failpoint v0.0.0-20240528011301-b51a646c7c86 // indirect\n\tgithub.com/pingcap/log v1.1.1-0.20230317032135-a0d097d16e22 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/rogpeppe/go-internal v1.10.0 // indirect\n\tgithub.com/stretchr/objx v0.5.0 // indirect\n\tgo.uber.org/atomic v1.11.0 // indirect\n\tgo.uber.org/multierr v1.11.0 // indirect\n\tgo.uber.org/zap v1.27.0 // indirect\n\tgolang.org/x/text v0.20.0 // indirect\n\tgopkg.in/natefinch/lumberjack.v2 v2.2.1 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 9.1552734375,
          "content": "github.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/toml v1.3.2 h1:o7IhLm0Msx3BaB+n3Ag7L8EVlByGnpq14C4YWiu/gL8=\ngithub.com/BurntSushi/toml v1.3.2/go.mod h1:CxXYINrC8qIiEnFrOxCa7Jy5BFHlXnUU2pbicEuybxQ=\ngithub.com/Masterminds/semver v1.5.0 h1:H65muMkzWKEuNDnfl9d70GUjFniHKHRbFPGBuZ3QEww=\ngithub.com/Masterminds/semver v1.5.0/go.mod h1:MB6lktGJrhw8PrUyiEoblNEGEQ+RzHPF078ddwwvV3Y=\ngithub.com/benbjohnson/clock v1.1.0/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/go-sql-driver/mysql v1.5.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=\ngithub.com/go-sql-driver/mysql v1.7.1 h1:lUIinVbN1DY0xBg0eMOzmmtGoHwWBbvnWubQUrtU8EI=\ngithub.com/go-sql-driver/mysql v1.7.1/go.mod h1:OXbVy3sEdcQ2Doequ6Z5BW6fXNQTmx+9S1MCJN5yJMI=\ngithub.com/goccy/go-json v0.10.2 h1:CrxCmQqYDkv1z7lO7Wbh2HN93uovUHgrECaO5ZrCXAU=\ngithub.com/goccy/go-json v0.10.2/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=\ngithub.com/google/uuid v1.3.0 h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=\ngithub.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/jmoiron/sqlx v1.3.3 h1:j82X0bf7oQ27XeqxicSZsTU5suPwKElg3oyxNn43iTk=\ngithub.com/jmoiron/sqlx v1.3.3/go.mod h1:2BljVx/86SuTyjE+aPYlHCTNvZrnJXghYGpNiXLBMCQ=\ngithub.com/klauspost/compress v1.17.8 h1:YcnTYrq7MikUT7k0Yb5eceMmALQPYBW/Xltxn0NAMnU=\ngithub.com/klauspost/compress v1.17.8/go.mod h1:Di0epgTjJY877eYKx5yC51cX2A2Vl2ibi7bDH9ttBbw=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/lib/pq v1.2.0 h1:LXpIM/LZ5xGFhOpXAQUIMM1HdyqzVYM13zNdjCEEcA0=\ngithub.com/lib/pq v1.2.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/mattn/go-sqlite3 v1.14.6 h1:dNPt6NO46WmLVt2DLNpwczCmdV5boIZ6g/tlDrlRUbg=\ngithub.com/mattn/go-sqlite3 v1.14.6/go.mod h1:NyWgC/yNuGj7Q9rpYnZvas74GogHl5/Z4A/KQRfk6bU=\ngithub.com/pingcap/errors v0.11.0/go.mod h1:Oi8TUi2kEtXXLMJk9l1cGmz20kV3TaQ0usTwv5KuLY8=\ngithub.com/pingcap/errors v0.11.5-0.20240311024730-e056997136bb h1:3pSi4EDG6hg0orE1ndHkXvX6Qdq2cZn8gAPir8ymKZk=\ngithub.com/pingcap/errors v0.11.5-0.20240311024730-e056997136bb/go.mod h1:X2r9ueLEUZgtx2cIogM0v4Zj5uvvzhuuiu7Pn8HzMPg=\ngithub.com/pingcap/failpoint v0.0.0-20240528011301-b51a646c7c86 h1:tdMsjOqUR7YXHoBitzdebTvOjs/swniBTOLy5XiMtuE=\ngithub.com/pingcap/failpoint v0.0.0-20240528011301-b51a646c7c86/go.mod h1:exzhVYca3WRtd6gclGNErRWb1qEgff3LYta0LvRmON4=\ngithub.com/pingcap/log v1.1.1-0.20230317032135-a0d097d16e22 h1:2SOzvGvE8beiC1Y4g9Onkvu6UmuBBOeWRGQEjJaT/JY=\ngithub.com/pingcap/log v1.1.1-0.20230317032135-a0d097d16e22/go.mod h1:DWQW5jICDR7UJh4HtxXSM20Churx4CQL0fwL/SoOSA4=\ngithub.com/pingcap/tidb/pkg/parser v0.0.0-20241118164214-4f047be191be h1:t5EkCmZpxLCig5GQA0AZG47aqsuL5GTsJeeUD+Qfies=\ngithub.com/pingcap/tidb/pkg/parser v0.0.0-20241118164214-4f047be191be/go.mod h1:Hju1TEWZvrctQKbztTRwXH7rd41Yq0Pgmq4PrEKcq7o=\ngithub.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=\ngithub.com/rogpeppe/go-internal v1.10.0 h1:TMyTOH3F/DB16zRVcYyreMH6GnZZrwQVAoYjRBZyWFQ=\ngithub.com/rogpeppe/go-internal v1.10.0/go.mod h1:UQnix2H7Ngw/k4C5ijL5+65zddjncjaFoBhdsK/akog=\ngithub.com/shopspring/decimal v1.2.0 h1:abSATXmQEYyShuxI4/vyW3tV1MrKAJzCZ/0zLUXYbsQ=\ngithub.com/shopspring/decimal v1.2.0/go.mod h1:DKyhrW/HYNuLGql+MJL6WCR6knT2jwCFRcu2hWCYk4o=\ngithub.com/siddontang/go-log v0.0.0-20180807004314-8d05993dda07 h1:oI+RNwuC9jF2g2lP0u0cVEEZrc/AYBCuFdvwrLWM/6Q=\ngithub.com/siddontang/go-log v0.0.0-20180807004314-8d05993dda07/go.mod h1:yFdBgwXP24JziuRl2NMUahT7nGLNOKi1SIiFxMttVD4=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0 h1:1zr/of2m5FGMsad5YfcqgdqdWrIhu+EBEJRhR1U7z/c=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngo.uber.org/atomic v1.6.0/go.mod h1:sABNBOSYdrvTF6hTgEIbc7YasKWGhgEQZyfxyTvoXHQ=\ngo.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/atomic v1.9.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/atomic v1.11.0 h1:ZvwS0R+56ePWxUNi+Atn9dWONBPp/AUETXlHW0DxSjE=\ngo.uber.org/atomic v1.11.0/go.mod h1:LUxbIzbOniOlMKjJjyPfpl4v+PKK2cNJn91OQbhoJI0=\ngo.uber.org/goleak v1.1.10/go.mod h1:8a7PlsEVH3e/a/GLqe5IIrQx6GzcnRmZEufDUTk4A7A=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\ngo.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=\ngo.uber.org/multierr v1.7.0/go.mod h1:7EAYxJLBy9rStEaz58O2t4Uvip6FSURkq8/ppBp95ak=\ngo.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=\ngo.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=\ngo.uber.org/zap v1.19.0/go.mod h1:xg/QME4nWcxGxrpdeYfq7UvYrLh66cuVKdrbD1XF/NI=\ngo.uber.org/zap v1.27.0 h1:aJMhYGrd5QSmlpLMr2MftRKl7t8J8PTZPA732ud/XR8=\ngo.uber.org/zap v1.27.0/go.mod h1:GB2qFLM7cTU87MWRP2mPIjqfIDnGu+VIO4V/SdhGo2E=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.20.0 h1:gK/Kv2otX8gz+wn7Rmb3vT96ZwuoxnQlY+HlJVj7Qug=\ngolang.org/x/text v0.20.0/go.mod h1:D4IsuqiFMhST5bX19pQ9ikHC2GsaKyk/oF+pn3ducp4=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20191029041327-9cc4af7d6b2c/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191108193012-7d206e10da11/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127 h1:qIbj1fsPNlZgppZ+VLlY7N33q108Sa+fhmuc+sWQYwY=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/natefinch/lumberjack.v2 v2.0.0/go.mod h1:l0ndWWf7gzL7RNwBG7wST/UCcT4T24xpD6X8LsfU/+k=\ngopkg.in/natefinch/lumberjack.v2 v2.2.1 h1:bBRl1b0OH9s/DuPhuXpNl+VtCaJXFZ5/uEFST95x9zc=\ngopkg.in/natefinch/lumberjack.v2 v2.2.1/go.mod h1:YD8tP3GAjkrDg1eZH7EGmyESg/lsYskCTPBJVb9jqSc=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "mocks",
          "type": "tree",
          "content": null
        },
        {
          "name": "mysql",
          "type": "tree",
          "content": null
        },
        {
          "name": "notes",
          "type": "tree",
          "content": null
        },
        {
          "name": "packet",
          "type": "tree",
          "content": null
        },
        {
          "name": "replication",
          "type": "tree",
          "content": null
        },
        {
          "name": "schema",
          "type": "tree",
          "content": null
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_util",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "vitess_license",
          "type": "blob",
          "size": 1.4404296875,
          "content": "Copyright 2012, Google Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n    * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        }
      ]
    }
  ]
}