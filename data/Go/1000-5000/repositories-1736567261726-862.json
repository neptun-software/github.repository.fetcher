{
  "metadata": {
    "timestamp": 1736567261726,
    "page": 862,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "google/cel-go",
      "stars": 2351,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bazelversion",
          "type": "blob",
          "size": 0.005859375,
          "content": "7.0.1\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1435546875,
          "content": ".DS_Store\n.idea\n.vscode\nbazel-bin\nbazel-cel-go\nbazel-genfiles\nbazel-out\nbazel-testlogs\nproto/checked.pb.go\nproto/syntax.pb.go\n*~\nMODULE.bazel.lock\n"
        },
        {
          "name": "BUILD.bazel",
          "type": "blob",
          "size": 0.115234375,
          "content": "package(default_visibility = [\"//visibility:public\"])\n\nlicenses([\"notice\"])  # Apache 2.0\n\nexports_files([\"LICENSE\"])\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 1.171875,
          "content": "# Contributor Code of Conduct\n## Version 0.1.1 (adapted from 0.3b-angular)\n\nAs contributors and maintainers of the Common Expression Language\n(CEL) project, we pledge to respect everyone who contributes by\nposting issues, updating documentation, submitting pull requests,\nproviding feedback in comments, and any other activities.\n\nCommunication through any of CEL's channels (GitHub, Gitter, IRC,\nmailing lists, Google+, Twitter, etc.) must be constructive and never\nresort to personal attacks, trolling, public or private harassment,\ninsults, or other unprofessional conduct.\n\nWe promise to extend courtesy and respect to everyone involved in this\nproject regardless of gender, gender identity, sexual orientation,\ndisability, age, race, ethnicity, religion, or level of experience. We\nexpect anyone contributing to the project to do the same.\n\nIf any member of the community violates this code of conduct, the\nmaintainers of the CEL project may take action, removing issues,\ncomments, and PRs or blocking accounts as deemed appropriate.\n\nIf you are subject to or witness unacceptable behavior, or have any\nother concerns, please email us at\n[cel-conduct@google.com](mailto:cel-conduct@google.com).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.771484375,
          "content": "# Contributing\n\nThank you for your interest in contributing to the Go implementation of CEL!\n\n# Where to Start?\n\nCEL is a dynamic expression language that parses into a portable format,\nand lends itself well to evaluation across processes through its support\nof evaluation with partial state.\n\nWe currently welcome a wide variety of contributions:\n\n* Requests for bugs and features through issues.\n* Fixes of bugs and implementations of features.\n* Documentation and examples.\n\nThe general guideline is that contributions must improve the user experience\nwithout significantly altering its semantics or performance characteristics.\n\nLearn more about CEL semantics in the [CEL Spec][1] repo.\n\n# Contribution Process\n\nAll submissions require review. Small changes can be submitted directly via\n[Pull Request](./PULL_REQUEST_TEMPLATE.md) on GitHub. Use your judgement about\nwhat constitutes a small change, but if in doubt, follow this process for\nlarger changes:\n\n* Determine whether the changes has already been requested in Issues.\n* If so, please add a comment to indicate your interest as this helps\n  the CEL maintainers prioritize changes.\n* If not, file an [Issue](./ISSUE_TEMPLATE.md).\n\nIf you are still in doubt about whether to file an Issue or would like to\nconsult with the broader CEL Go community, feel free to send a message to\nthe [CEL Go Discuss][2] Google group.\n\n## Code Contributions\n\nSee [PULL_REQUEST_TEMPLATE.md](./PULL_REQUEST_TEMPLATE.md) for guidelines on\ncreating, reviewing, and merging code contributions.\n\n### Contributor License Agreement\n\nCode contributions must be accompanied by a Contributor License Agreement. You\n(or your employer) retain the copyright to your contribution, but the agreement\ngives us permission to use and redistribute your contributions as part of the\nproject. Visit <https://cla.developers.google.com/> to view priot agreements,\nor to sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted\none (even if it was for a different project), you probably don't need to do it\nagain.\n\n## Code Reviews\n\nAll code changes must be reviewed before merge. Expect maintainers to respond\nto new issues or pull requests within a week.\n\nIf approval is given to a code change, commits should be squashed on merge.\nThis makes it easier to triage issues related to a change, and makes the commit\ngraph human-readable.\n\nFor outstanding and ongoing issues and particularly for long-running pull\nrequests, expect the maintainers to review within a week of a contributor\nasking for a new review. There is no commitment to resolution -- merging\nor closing a pull request, or fixing or closing an issue -- because some\nissues will require more discussion than others.\n\n[1]:  https://github.com/google/cel-spec\n[2]:  https://groups.google.com/forum/#!forum/cel-go-discuss\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 12.7470703125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n===========================================================================\nThe common/types/pb/equal.go modification of proto.Equal logic\n===========================================================================\nCopyright (c) 2018 The Go Authors. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MODULE.bazel",
          "type": "blob",
          "size": 2.4169921875,
          "content": "module(\n    name = \"cel-go\",\n)\n\nbazel_dep(\n    name = \"bazel_skylib\",\n    version = \"1.7.1\",\n)\nbazel_dep(\n    name = \"gazelle\",\n    version = \"0.39.1\",\n    repo_name = \"bazel_gazelle\",\n)\nbazel_dep(\n    name = \"googleapis\",\n    version = \"0.0.0-20240819-fe8ba054a\",\n    repo_name = \"com_google_googleapis\",\n)\nbazel_dep(\n    name = \"protobuf\",\n    version = \"26.0\",\n    repo_name = \"com_google_protobuf\",\n)\nbazel_dep(\n    name = \"rules_go\",\n    version = \"0.50.1\",\n    repo_name = \"io_bazel_rules_go\",\n)\nbazel_dep(\n    name = \"rules_proto\",\n    version = \"6.0.0\",\n)\n\nswitched_rules = use_extension(\"@com_google_googleapis//:extensions.bzl\", \"switched_rules\")\nswitched_rules.use_languages(\n    go = True,\n)\nuse_repo(switched_rules, \"com_google_googleapis_imports\")\n\ngo_sdk = use_extension(\"@io_bazel_rules_go//go:extensions.bzl\", \"go_sdk\")\ngo_sdk.download(version = \"1.21.1\")\n\ngo_deps = use_extension(\"@bazel_gazelle//:extensions.bzl\", \"go_deps\")\ngo_deps.gazelle_default_attributes(\n    directives = [\n        \"gazelle:proto disable_global\",\n    ],\n)\ngo_deps.gazelle_override(\n    # Force Gazelle to wipe out the existing build files before regenerate them.\n    build_file_generation = \"on\",\n    directives = [\n        \"gazelle:go_generate_proto false\",\n        # Provide hints to gazelle about how includes and imports map to build targets\n        \"gazelle:resolve go cel.dev/expr @dev_cel_expr//:expr\",\n        \"gazelle:resolve proto go google/rpc/status.proto @org_golang_google_genproto_googleapis_rpc//status\",\n        \"gazelle:resolve proto proto google/rpc/status.proto @googleapis//google/rpc:status_proto\",\n    ],\n    path = \"cel.dev/expr\",\n)\ngo_deps.from_file(go_mod = \"//:go.mod\")\ngo_deps.module(\n    path = \"gopkg.in/yaml.v3\",\n    sum = \"h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\",\n    version = \"v3.0.1\",\n)\ngo_deps.module(\n    path = \"github.com/chzyer/readline\",\n    sum = \"h1:upd/6fQk4src78LMRzh5vItIt361/o4uq553V8B5sGI=\",\n    version = \"v1.5.1\",\n)\ngo_deps.module(\n    path = \"github.com/google/go-cmp\",\n    sum = \"h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=\",\n    version = \"v0.5.9\",\n)\nuse_repo(\n    go_deps,\n    \"com_github_antlr4_go_antlr_v4\",\n    \"com_github_chzyer_readline\",\n    \"com_github_google_go_cmp\",\n    \"com_github_stoewer_go_strcase\",\n    \"dev_cel_expr\",\n    \"in_gopkg_yaml_v3\",\n    \"org_golang_google_genproto_googleapis_api\",\n    \"org_golang_google_genproto_googleapis_rpc\",\n    \"org_golang_google_protobuf\",\n    \"org_golang_x_text\",\n)\n"
        },
        {
          "name": "PULL_REQUEST_TEMPLATE.md",
          "type": "blob",
          "size": 1.2275390625,
          "content": "# Pull Requests Guidelines\n\nSee [CONTRIBUTING.md](./CONTRIBUTING.md) for more details about when to create\na GitHub [Pull Request][1] and when other kinds of contributions or\nconsultation might be more desirable.\n\nWhen creating a new pull request, please fork the repo and work within a\ndevelopment branch.\n\n## Commit Messages\n\n* Most changes should be accompanied by tests.\n* Commit messages should explain _why_ the changes were made.\n```\nSummary of change in 50 characters or less\n\nBackground on why the change is being made with additional detail on\nconsequences of the changes elsewhere in the code or to the general\nfunctionality of the library. Multiple paragraphs may be used, but\nplease keep lines to 72 characters or less.\n```\n\n## Reviews\n\n* Perform a self-review.\n* Make sure the Travis CI build passes.\n* Assign a reviewer once both the above have been completed.\n\n## Merging\n\n* If a CEL maintaner approves the change, it may be merged by the author if\n  they have write access. Otherwise, the change will be merged by a maintainer.\n* Multiple commits should be squashed before merging.\n* Please append the line `closes #<issue-num>: description` in the merge message,\n  if applicable.\n\n[1]:  https://help.github.com/articles/about-pull-requests"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.34375,
          "content": "# Common Expression Language\n\n[![Go Report Card](https://goreportcard.com/badge/github.com/google/cel-go)](https://goreportcard.com/report/github.com/google/cel-go)\n[![GoDoc](https://godoc.org/github.com/google/cel-go?status.svg)][6]\n\nThe Common Expression Language (CEL) is a non-Turing complete language designed\nfor simplicity, speed, safety, and portability. CEL's C-like [syntax][1] looks\nnearly identical to equivalent expressions in C++, Go, Java, and TypeScript.\n\n```java\n// Check whether a resource name starts with a group name.\nresource.name.startsWith(\"/groups/\" + auth.claims.group)\n```\n\n```go\n// Determine whether the request is in the permitted time window.\nrequest.time - resource.age < duration(\"24h\")\n```\n\n```typescript\n// Check whether all resource names in a list match a given filter.\nauth.claims.email_verified && resources.all(r, r.startsWith(auth.claims.email))\n```\n\nA CEL \"program\" is a single expression. The examples have been tagged as\n`java`, `go`, and `typescript` within the markdown to showcase the commonality\nof the syntax.\n\nCEL is ideal for lightweight expression evaluation when a fully sandboxed\nscripting language is too resource intensive. To get started, try the\n[Codelab](https://codelabs.developers.google.com/codelabs/cel-go/index.html).\n\n---\n\n* [Overview](#overview)\n  * [Environment Setup](#environment-setup)\n  * [Parse and Check](#parse-and-check)\n  * [Macros](#macros)\n  * [Evaluate](#evaluate)\n  * [Errors](#Errors)\n* [Examples](examples/README.md)\n* [Install](#install)\n* [Common Questions](#common-questions)\n* [License](#license)\n\n---\n\n## Overview\n\nDetermine the variables and functions you want to provide to CEL. Parse and\ncheck an expression to make sure it's valid. Then evaluate the output AST\nagainst some input. Checking is optional, but strongly encouraged.\n\n### Environment Setup\n\nLet's expose `name` and  `group` variables to CEL using the `cel.Variable`\nenvironment option:\n\n```go\nimport \"github.com/google/cel-go/cel\"\n\nenv, err := cel.NewEnv(\n    cel.Variable(\"name\", cel.StringType),\n    cel.Variable(\"group\", cel.StringType),\n)\n```\n\nThat's it. The environment is ready to be used for parsing and type-checking.\nCEL supports all the usual primitive types in addition to lists, maps, as well\nas first-class support for JSON and Protocol Buffers.\n\n### Parse and Check\n\nThe parsing phase indicates whether the expression is syntactically valid and\nexpands any macros present within the environment. Parsing and checking are\nmore computationally expensive than evaluation, and it is recommended that\nexpressions be parsed and checked ahead of time.\n\nThe parse and check phases are combined for convenience into the `Compile`\nstep:\n\n```go\nast, issues := env.Compile(`name.startsWith(\"/groups/\" + group)`)\nif issues != nil && issues.Err() != nil {\n    log.Fatalf(\"type-check error: %s\", issues.Err())\n}\nprg, err := env.Program(ast)\nif err != nil {\n    log.Fatalf(\"program construction error: %s\", err)\n}\n```\n\nThe `cel.Program` generated at the end of parse and check is stateless,\nthread-safe, and cachable.\n\nType-checking is an optional, but strongly encouraged step that can reject some\nsemantically invalid expressions using static analysis. Additionally, the check\nproduces metadata which can improve function invocation performance and object\nfield selection at evaluation-time.\n\n#### Macros\n\nMacros are optional but enabled by default. Macros were introduced to\nsupport optional CEL features that might not be desired in all use cases\nwithout the syntactic burden and complexity such features might desire if\nthey were part of the core CEL syntax. Macros are expanded at parse time and\ntheir expansions are type-checked at check time.\n\nFor example, when macros are enabled it is possible to support bounded\niteration / fold operators. The macros `all`, `exists`, `exists_one`, `filter`,\nand `map` are particularly useful for evaluating a single predicate against\nlist and map values.\n\n```javascript\n// Ensure all tweets are less than 140 chars\ntweets.all(t, t.size() <= 140)\n```\n\nThe `has` macro is useful for unifying field presence testing logic across\nprotobuf types and dynamic (JSON-like) types.\n\n```javascript\n// Test whether the field is a non-default value if proto-based, or defined\n// in the JSON case.\nhas(message.field)\n```\n\nBoth cases traditionally require special syntax at the language level, but\nthese features are exposed via macros in CEL.\n\n### Evaluate\n\nNow, evaluate for fun and profit. The evaluation is thread-safe and side-effect\nfree. Many different inputs can be sent to the same `cel.Program` and if fields\nare present in the input, but not referenced in the expression, they are\nignored.\n\n```go\n// The `out` var contains the output of a successful evaluation.\n// The `details' var would contain intermediate evaluation state if enabled as\n// a cel.ProgramOption. This can be useful for visualizing how the `out` value\n// was arrive at.\nout, details, err := prg.Eval(map[string]interface{}{\n    \"name\": \"/groups/acme.co/documents/secret-stuff\",\n    \"group\": \"acme.co\"})\nfmt.Println(out) // 'true'\n```\n\n#### Partial State\n\nWhat if `name` hadn't been supplied? CEL is designed for this case. In\ndistributed apps it is not uncommon to have edge caches and central services.\nIf possible, evaluation should happen at the edge, but it isn't always possible\nto know the full state required for all values and functions present in the\nCEL expression.\n\nTo improve the odds of successful evaluation with partial state, CEL uses\ncommutative logical operators `&&`, `||`. If an error or unknown value (not the\nsame thing) is encountered on the left-hand side, the right hand side is\nevaluated also to determine the outcome. While it is possible to implement\nevaluation with partial state without this feature, this method was chosen\nbecause it aligns with the semantics of SQL evaluation and because it's more\nrobust to evaluation against dynamic data types such as JSON inputs.\n\nIn the following truth-table, the symbols `<x>` and `<y>` represent error or\nunknown values, with the `?` indicating that the branch is not taken due to\nshort-circuiting. When the result is `<x, y>` this means that the both args\nare possibly relevant to the result.\n\n| Expression          | Result   |\n|---------------------|----------|\n| `false && ?`        | `false`  |\n| `true && false`     | `false`  |\n| `<x> && false`      | `false`  |\n| `true && true`      | `true`   |\n| `true && <x>`       | `<x>`    |\n| `<x> && true`       | `<x>`    |\n| `<x> && <y>`        | `<x, y>` |\n| `true \\|\\| ?`       | `true`   |\n| `false \\|\\| true`   | `true`   |\n| `<x> \\|\\| true`     | `true`   |\n| `false \\|\\| false`  | `false`  |\n| `false \\|\\| <x>`    | `<x>`    |\n| `<x> \\|\\| false`    | `<x>`    |\n| `<x> \\|\\| <y>`      | `<x, y>` |\n\nIn the cases where unknowns are expected, `cel.EvalOptions(cel.OptTrackState)`\nshould be enabled. The `details` value returned by `Eval()` will contain the\nintermediate evaluation values and can be provided to the `interpreter.Prune`\nfunction to generate a residual expression. e.g.:\n\n```cpp\n// Residual when `name` omitted:\nname.startsWith(\"/groups/acme.co\")\n```\n\nThis technique can be useful when there are variables that are expensive to\ncompute unless they are absolutely needed. This functionality will be the\nfocus of many future improvements, so keep an eye out for more goodness here!\n\n### Errors\n\nParse and check errors have friendly error messages with pointers to where the\nissues occur in source:\n\n```sh\nERROR: <input>:1:40: undefined field 'undefined'\n    | TestAllTypes{single_int32: 1, undefined: 2}\n    | .......................................^`,\n```\n\nBoth the parsed and checked expressions contain source position information\nabout each node that appears in the output AST. This information can be used\nto determine error locations at evaluation time as well.\n\n## Install\n\nCEL-Go supports `modules` and uses semantic versioning. For more info\nsee the [Go Modules](https://github.com/golang/go/wiki/Modules) docs.\n\nAnd of course, there is always the option to build from source directly.\n\n## Common Questions\n\n### Why not JavaScript, Lua, or WASM?\n\nJavaScript and Lua are rich languages that require sandboxing to execute\nsafely. Sandboxing is costly and factors into the \"what will I let users\nevaluate?\" question heavily when the answer is anything more than O(n)\ncomplexity.\n\nCEL evaluates linearly with respect to the size of the expression and the input\nbeing evaluated when macros are disabled. The only functions beyond the\nbuilt-ins that may be invoked are provided by the host environment. While\nextension functions may be more complex, this is a choice by the application\nembedding CEL.\n\nBut, why not WASM? WASM is an excellent choice for certain applications and\nis far superior to embedded JavaScript and Lua, but it does not have support\nfor garbage collection and non-primitive object types require semi-expensive\ncalls across modules. In most cases CEL will be faster and just as portable\nfor its intended use case, though for node.js and web-based execution CEL\ntoo may offer a WASM evaluator with direct to WASM compilation.\n\n### Do I need to Parse _and_ Check?\n\nChecking is an optional, but strongly suggested step in CEL expression\nvalidation. It is sufficient in some cases to simply parse and rely on the\nruntime bindings and error handling to do the right thing.\n\n### Where can I learn more about the language?\n\n* See the [CEL Spec][1] for the specification and conformance test suite.\n* Ask for support on the [CEL Go Discuss][2] Google group.\n\n### Where can I learn more about the internals?\n\n* See [GoDoc][6] to learn how to integrate CEL into services written in Go.\n* See the [CEL C++][3] toolchain (under development) for information about how\n  to integrate CEL evaluation into other environments.\n\n### How can I contribute?\n\n* See [CONTRIBUTING.md](./CONTRIBUTING.md) to get started.\n* Use [GitHub Issues][4] to request features or report bugs.\n\n### Some tests don't work with `go test`?\n\nA handful of tests rely on [Bazel][5]. In particular dynamic proto support\nat check time and the conformance test driver require Bazel to coordinate\nthe test inputs:\n\n```sh\nbazel test ...\n```\n\n## License\n\nReleased under the [Apache License](LICENSE).\n\nDisclaimer: This is not an official Google product.\n\n[1]:  https://github.com/google/cel-spec\n[2]:  https://groups.google.com/forum/#!forum/cel-go-discuss\n[3]:  https://github.com/google/cel-cpp\n[4]:  https://github.com/google/cel-go/issues\n[5]:  https://bazel.build\n[6]:  https://godoc.org/github.com/google/cel-go\n"
        },
        {
          "name": "WORKSPACE",
          "type": "blob",
          "size": 5.2451171875,
          "content": "workspace(name = \"cel_go\")\n\nload(\"@bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"io_bazel_rules_go\",\n    sha256 = \"b2038e2de2cace18f032249cb4bb0048abf583a36369fa98f687af1b3f880b26\",\n    urls = [\n        \"https://mirror.bazel.build/github.com/bazelbuild/rules_go/releases/download/v0.48.1/rules_go-v0.48.1.zip\",\n        \"https://github.com/bazelbuild/rules_go/releases/download/v0.48.1/rules_go-v0.48.1.zip\",\n    ],\n)\n\nhttp_archive(\n    name = \"bazel_gazelle\",\n    sha256 = \"ecba0f04f96b4960a5b250c8e8eeec42281035970aa8852dda73098274d14a1d\",\n    urls = [\n        \"https://mirror.bazel.build/github.com/bazelbuild/bazel-gazelle/releases/download/v0.29.0/bazel-gazelle-v0.29.0.tar.gz\",\n        \"https://github.com/bazelbuild/bazel-gazelle/releases/download/v0.29.0/bazel-gazelle-v0.29.0.tar.gz\",\n    ],\n)\n\nhttp_archive(\n    name = \"rules_proto\",\n    sha256 = \"6fb6767d1bef535310547e03247f7518b03487740c11b6c6adb7952033fe1295\",\n    strip_prefix = \"rules_proto-6.0.2\",\n    url = \"https://github.com/bazelbuild/rules_proto/releases/download/6.0.2/rules_proto-6.0.2.tar.gz\",\n)\n\n# googleapis as of 08/31/2023\nhttp_archive(\n    name = \"com_google_googleapis\",\n    sha256 = \"5c56500adf7b1b7a3a2ee5ca5b77500617ad80afb808e3d3979f582e64c0523d\",\n    strip_prefix = \"googleapis-25f99371444ea7fd0dc1523ca6925e91cc48a664\",\n    urls = [\n        \"https://github.com/googleapis/googleapis/archive/25f99371444ea7fd0dc1523ca6925e91cc48a664.tar.gz\",\n    ],\n)\n\n# protobuf\nhttp_archive(\n    name = \"com_google_protobuf\",\n    sha256 = \"8242327e5df8c80ba49e4165250b8f79a76bd11765facefaaecfca7747dc8da2\",\n    strip_prefix = \"protobuf-3.21.5\",\n    urls = [\"https://github.com/protocolbuffers/protobuf/archive/v3.21.5.zip\"],\n)\n\nload(\"@io_bazel_rules_go//go:deps.bzl\", \"go_register_toolchains\", \"go_rules_dependencies\")\nload(\"@bazel_gazelle//:deps.bzl\", \"gazelle_dependencies\", \"go_repository\")\nload(\"@com_google_googleapis//:repository_rules.bzl\", \"switched_rules_by_language\")\nload(\"@com_google_protobuf//:protobuf_deps.bzl\", \"protobuf_deps\")\n\nswitched_rules_by_language(\n    name = \"com_google_googleapis_imports\",\n    go = True,\n)\n\n# Do *not* call *_dependencies(), etc, yet.  See comment at the end.\n\ngo_repository(\n    name = \"org_golang_google_protobuf\",\n    build_file_proto_mode = \"disable_global\",\n    importpath = \"google.golang.org/protobuf\",\n    tag = \"v1.34.2\",\n)\n\n# Generated Google APIs protos for Golang 08/24/2024\ngo_repository(\n    name = \"org_golang_google_genproto_googleapis_api\",\n    build_file_proto_mode = \"disable_global\",\n    importpath = \"google.golang.org/genproto/googleapis/api\",\n    sum = \"h1:YcyjlL1PRr2Q17/I0dPk2JmYS5CDXfcdb2Z3YRioEbw=\",\n    version = \"v0.0.0-20240826202546-f6391c0de4c7\",\n)\n\n# Generated Google APIs protos for Golang 08/24/2024\ngo_repository(\n    name = \"org_golang_google_genproto_googleapis_rpc\",\n    build_file_proto_mode = \"disable_global\",\n    importpath = \"google.golang.org/genproto/googleapis/rpc\",\n    sum = \"h1:Kqjm4WpoWvwhMPcrAczoTyMySQmYa9Wy2iL6Con4zn8=\",\n    version = \"v0.0.0-20240823204242-4ba0660f739c\",\n)\n\ngo_repository(\n    name = \"org_golang_x_text\",\n    importpath = \"golang.org/x/text\",\n    sum = \"h1:a94ExnEXNtEwYLGJSIUxnWoxoRz/ZcCsV63ROupILh4=\",\n    version = \"v0.16.0\",\n)\n\n# ANTLR v4.13.0\ngo_repository(\n    name = \"com_github_antlr4_go_antlr_v4\",\n    importpath = \"github.com/antlr4-go/antlr/v4\",\n    sum = \"h1:lxCg3LAv+EUK6t1i0y1V6/SLeUi0eKEKdhQAlS8TVTI=\",\n    version = \"v4.13.0\",\n)\n\n# CEL Spec deps\ngo_repository(\n    name = \"dev_cel_expr\",\n    importpath = \"cel.dev/expr\",\n    sum = \"h1:NciYrtDRIR0lNCnH1LFJegdjspNx9fI59O7TWcua/W4=\",\n    version = \"v0.19.1\",\n)\n\n# local_repository(\n#     name = \"dev_cel_expr\",\n#     path = \"</abs/path>/github.com/google/cel-spec\",\n# )\n\n# strcase deps\ngo_repository(\n    name = \"com_github_stoewer_go_strcase\",\n    importpath = \"github.com/stoewer/go-strcase\",\n    sum = \"h1:Z2iHWqGXH00XYgqDmNgQbIBxf3wrNq0F3feEy0ainaU=\",\n    version = \"v1.2.0\",\n)\n\n# Readline for repl\ngo_repository(\n    name = \"com_github_chzyer_readline\",\n    commit = \"62c6fe6193755f722b8b8788aa7357be55a50ff1\",  # v1.4\n    importpath = \"github.com/chzyer/readline\",\n)\n\n# gopkg.in/yaml.v3 for policy module\ngo_repository(\n    name = \"in_gopkg_yaml_v3\",\n    build_file_proto_mode = \"disable_global\",\n    importpath = \"gopkg.in/yaml.v3\",\n    sum = \"h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\",\n    version = \"v3.0.1\",\n)\n\n# golang.org/x/exp deps\ngo_repository(\n    name = \"org_golang_x_exp\",\n    importpath = \"golang.org/x/exp\",\n    sum = \"h1:mCRnTeVUjcrhlRmO0VK8a6k6Rrf6TF9htwo2pJVSjIU=\",\n    version = \"v0.0.0-20230515195305-f3d0a9c9a5cc\",\n)\n\ngo_repository(\n    name = \"com_github_google_go_cmp\",\n    importpath = \"github.com/google/go-cmp\",\n    sum = \"h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=\",\n    version = \"v0.5.9\",\n)\n\n# Run the dependencies at the end.  These will silently try to import some\n# of the above repositories but at different versions, so ours must come first.\ngo_rules_dependencies()\n\ngo_register_toolchains(version = \"1.21.1\")\n\ngazelle_dependencies()\n\nload(\"@rules_proto//proto:repositories.bzl\", \"rules_proto_dependencies\")\nrules_proto_dependencies()\n\nload(\"@rules_proto//proto:setup.bzl\", \"rules_proto_setup\")\nrules_proto_setup()\n\nload(\"@rules_proto//proto:toolchains.bzl\", \"rules_proto_toolchains\")\nrules_proto_toolchains()\n\nprotobuf_deps()\n"
        },
        {
          "name": "WORKSPACE.bzlmod",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "cel",
          "type": "tree",
          "content": null
        },
        {
          "name": "checker",
          "type": "tree",
          "content": null
        },
        {
          "name": "cloudbuild.yaml",
          "type": "blob",
          "size": 1.8447265625,
          "content": "# Used by Google Cloud Build to run cel-go conformance tests and generate necessary file structure for TestGrid dashboard in Google Cloud Storage\nsteps:\n        # - name: 'ubuntu'\n        #   # writes start time and #PR to started.json\n        #   args: ['bash', 'conformance/start.sh', '$COMMIT_SHA']\n        # # Because testgrid uses monotonically increasing, numerical ids as folder names and GCB generates random ids, the timestamp\n        # # at start is recorded and written to a file, then read at the end to ensure monotonically increasing numbers.\n        # - name: 'ubuntu'\n        #   # stores timestamp in _DATE to use as build id\n        #   args: ['bash', '-c', 'date +%Y%m%d%H%M%S > _DATE' ] # Will create folder of format YYYYMMDDHHMMSS\n        # - name: 'gcr.io/cloud-builders/gsutil'\n        #   # writes _DATE to GCS bucket so it can be used as GCS folder name\n        #   args: ['cp', '-r', '_DATE', 'gs://cel-conformance']\n        # - name: 'gcr.io/cloud-builders/bazel'\n        #   # run conformance tests with bazel\n        #   args: ['test', '--test_output=all', 'conformance/ct_dashboard']\n        # - name: 'ubuntu'\n        #   # creates necessary format and folder structure for TestGrid to parse\n        #   args: ['bash', 'conformance/zip.sh']\n        # - name: 'gcr.io/cloud-builders/gsutil'\n        #   entrypoint: sh\n        #   # deploys folder of test results (with build id as folder name) to GCS\n        #   args: ['-c', 'gsutil cp -r $(cat _DATE) gs://cel-conformance/test-logs/']\n        - name: 'golang:1.21.1'\n          # check the integrity of the vendor directory\n          args: ['scripts/verify-vendor.sh']\n        - name: 'gcr.io/cloud-builders/bazel'\n          entrypoint: bazel\n          args: ['test', '--test_output=errors', '...']\n          id: bazel-test\n          waitFor: ['-']\ntimeout: 10m\noptions:\n        machineType: 'N1_HIGHCPU_8'\n"
        },
        {
          "name": "codelab",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "conformance",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "ext",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.47265625,
          "content": "module github.com/google/cel-go\n\ngo 1.21.1\n\ntoolchain go1.23.0\n\nrequire (\n\tcel.dev/expr v0.19.1\n\tgithub.com/antlr4-go/antlr/v4 v4.13.0\n\tgithub.com/stoewer/go-strcase v1.2.0\n\tgolang.org/x/text v0.16.0\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20240826202546-f6391c0de4c7\n\tgoogle.golang.org/protobuf v1.34.2\n)\n\nrequire (\n\tgolang.org/x/exp v0.0.0-20230515195305-f3d0a9c9a5cc // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240826202546-f6391c0de4c7 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 2.806640625,
          "content": "cel.dev/expr v0.18.0 h1:CJ6drgk+Hf96lkLikr4rFf19WrU0BOWEihyZnI2TAzo=\ncel.dev/expr v0.18.0/go.mod h1:MrpN08Q+lEBs+bGYdLxxHkZoUSsCp0nSKTs0nTymJgw=\ncel.dev/expr v0.19.0 h1:lXuo+nDhpyJSpWxpPVi5cPUwzKb+dsdOiw6IreM5yt0=\ncel.dev/expr v0.19.0/go.mod h1:MrpN08Q+lEBs+bGYdLxxHkZoUSsCp0nSKTs0nTymJgw=\ncel.dev/expr v0.19.1 h1:NciYrtDRIR0lNCnH1LFJegdjspNx9fI59O7TWcua/W4=\ncel.dev/expr v0.19.1/go.mod h1:MrpN08Q+lEBs+bGYdLxxHkZoUSsCp0nSKTs0nTymJgw=\ngithub.com/antlr4-go/antlr/v4 v4.13.0 h1:lxCg3LAv+EUK6t1i0y1V6/SLeUi0eKEKdhQAlS8TVTI=\ngithub.com/antlr4-go/antlr/v4 v4.13.0/go.mod h1:pfChB/xh/Unjila75QW7+VU4TSnWnnk9UTnmpPaOR2g=\ngithub.com/davecgh/go-spew v1.1.0 h1:ZDRjVQ15GmhC3fiQ8ni8+OwkZQO4DARzQgrnXU1Liz8=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/stoewer/go-strcase v1.2.0 h1:Z2iHWqGXH00XYgqDmNgQbIBxf3wrNq0F3feEy0ainaU=\ngithub.com/stoewer/go-strcase v1.2.0/go.mod h1:IBiWB2sKIp3wVVQ3Y035++gc+knqhUQag1KpM8ahLw8=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.5.1 h1:nOGnQDM7FYENwehXlg/kFVnos3rEvtKTjRvOWSzb6H4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngolang.org/x/exp v0.0.0-20230515195305-f3d0a9c9a5cc h1:mCRnTeVUjcrhlRmO0VK8a6k6Rrf6TF9htwo2pJVSjIU=\ngolang.org/x/exp v0.0.0-20230515195305-f3d0a9c9a5cc/go.mod h1:V1LtkGg67GoY2N1AnLN78QLrzxkLyJw7RJb1gzOOz9w=\ngolang.org/x/text v0.16.0 h1:a94ExnEXNtEwYLGJSIUxnWoxoRz/ZcCsV63ROupILh4=\ngolang.org/x/text v0.16.0/go.mod h1:GhwF1Be+LQoKShO3cGOHzqOgRrGaYc9AvblQOmPVHnI=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240826202546-f6391c0de4c7 h1:YcyjlL1PRr2Q17/I0dPk2JmYS5CDXfcdb2Z3YRioEbw=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240826202546-f6391c0de4c7/go.mod h1:OCdP9MfskevB/rbYvHTsXTtKC+3bHWajPdoKgjcYkfo=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240826202546-f6391c0de4c7 h1:2035KHhUv+EpyB+hWgJnaWKJOdX1E95w2S8Rr4uWKTs=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240826202546-f6391c0de4c7/go.mod h1:UqMtugtsSgubUsoxbuAoiCXvqvErP7Gf0so0mK9tHxU=\ngoogle.golang.org/protobuf v1.34.2 h1:6xV6lTsCfpGD21XK49h7MhtcApnLqkfYgPcdHftf6hg=\ngoogle.golang.org/protobuf v1.34.2/go.mod h1:qYOHts0dSfpeUzUFpOMr/WGzszTmLH+DiWniOlNbLDw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v2 v2.2.2 h1:ZCJp+EgiOT7lHqUV2J862kp8Qj64Jo6az82+3Td9dZw=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\n"
        },
        {
          "name": "interpreter",
          "type": "tree",
          "content": null
        },
        {
          "name": "parser",
          "type": "tree",
          "content": null
        },
        {
          "name": "policy",
          "type": "tree",
          "content": null
        },
        {
          "name": "repl",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}