{
  "metadata": {
    "timestamp": 1736567096136,
    "page": 688,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nareix/joy4",
      "stars": 2686,
      "defaultBranch": "master",
      "files": [
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0322265625,
          "content": "MIT License\n\nCopyright (c) 2017 \n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.8115234375,
          "content": "# PLEASE USE joy5 INSTEAD\n\n[joy5](https://github.com/nareix/joy5)\n\n- High performance Copy-on-write gop cache [code](https://github.com/nareix/joy5/blob/master/cmd/avtool/pubsub.go)\n- Better av.Packet design [code](https://github.com/nareix/joy5/blob/master/av/av.go)\n\n# JOY4\n\n> Golang audio/video library and streaming server\n\nJOY4 is powerful library written in golang, well-designed interface makes a few lines of code can do a lot of things such as reading, writing, transcoding among variety media formats, or setting up high-performance live streaming server.\n\n# Features \n\nWell-designed and easy-to-use interfaces:\n\n- Muxer / Demuxer ([doc](https://godoc.org/github.com/nareix/joy4/av#Demuxer) [example](https://github.com/nareix/joy4/blob/master/examples/open_probe_file/main.go))\n- Audio Decoder ([doc](https://godoc.org/github.com/nareix/joy4/av#AudioDecoder) [example](https://github.com/nareix/joy4/blob/master/examples/audio_decode/main.go))\n- Transcoding ([doc](https://godoc.org/github.com/nareix/joy4/av/transcode) [example](https://github.com/nareix/joy4/blob/master/examples/transcode/main.go))\n- Streaming server ([example](https://github.com/nareix/joy4/blob/master/examples/http_flv_and_rtmp_server/main.go))\n\nSupport container formats:\n\n- MP4\n- MPEG-TS\n- FLV\n- AAC (ADTS)\n\nRTSP Client\n- High level camera bug tolerance\n- Support STAP-A\n\nRTMP Client\n- Support publishing to nginx-rtmp-server\n- Support playing\n\nRTMP / HTTP-FLV Server \n- Support publishing clients: OBS / ffmpeg / Flash Player (>8)\n- Support playing clients: Flash Player 11 / VLC / ffplay / mpv\n- High performance\n\n\nPublisher-subscriber packet buffer queue ([doc](https://godoc.org/github.com/nareix/joy4/av/pubsub))\n\n- Customize publisher buffer time and subscriber read position\n\n\n- Multiple channels live streaming ([example](https://github.com/nareix/joy4/blob/master/examples/rtmp_server_channels/main.go))\n\nPacket filters ([doc](https://godoc.org/github.com/nareix/joy4/av/pktque))\n\n- Wait first keyframe\n- Fix timestamp\n- Make A/V sync\n- Customize ([example](https://github.com/nareix/joy4/blob/master/examples/rtmp_server_channels/main.go#L19))\n\nFFMPEG Golang-style binding ([doc](https://godoc.org/github.com/nareix/joy4/cgo/ffmpeg))\n- Audio Encoder / Decoder\n- Video Decoder\n- Audio Resampler\n\nSupport codec and container parsers:\n\n- H264 SPS/PPS/AVCDecoderConfigure parser ([doc](https://godoc.org/github.com/nareix/joy4/codec/h264parser))\n- AAC ADTSHeader/MPEG4AudioConfig parser ([doc](https://godoc.org/github.com/nareix/joy4/codec/aacparser))\n- MP4 Atoms parser ([doc](https://godoc.org/github.com/nareix/joy4/format/mp4/mp4io))\n- FLV AMF0 object parser ([doc](https://godoc.org/github.com/nareix/joy4/format/flv/flvio))\n\n# Requirements\n\nGo version >= 1.6\n\nffmpeg version >= 3.0 (optional)\n\n# TODO\n\nHLS / MPEG-DASH Server\n\nffmpeg.VideoEncoder / ffmpeg.SWScale\n\n# License\n\nMIT\n"
        },
        {
          "name": "av",
          "type": "tree",
          "content": null
        },
        {
          "name": "cgo",
          "type": "tree",
          "content": null
        },
        {
          "name": "codec",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc.go",
          "type": "blob",
          "size": 0.3251953125,
          "content": "\n// Package joy4 is a Golang audio/video library and streaming server.\n// JOY4 is powerful library written in golang, well-designed interface makes a few lines \n// of code can do a lot of things such as reading, writing, transcoding among \n// variety media formats, or setting up high-performance live streaming server.\npackage joy4\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "format",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}