{
  "metadata": {
    "timestamp": 1736566495181,
    "page": 42,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "wxbool/video-srt-windows",
      "stars": 4784,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.041015625,
          "content": "tests\ndata/json*\ngo.sum\n*.zip\n*.exe\n.idea\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.201171875,
          "content": "# VideoSrt\r\n\r\n[![GitHub license](https://img.shields.io/github/license/wxbool/video-srt-windows?logo=Apache&style=flat-square)](https://github.com/wxbool/video-srt-windows/blob/master/LICENSE)\r\n[![GitHub stars](https://img.shields.io/github/stars/wxbool/video-srt-windows?style=flat-square)](https://github.com/wxbool/video-srt-windows/stargazers)\r\n[![GitHub forks](https://img.shields.io/github/forks/wxbool/video-srt-windows?logo=github&style=flat-square)](https://github.com/wxbool/video-srt-windows/network)\r\n![GitHub Action](https://github.com/wxbool/video-srt-windows/workflows/Go/badge.svg?branch=master)\r\n\r\n## 简介\r\n\r\n`VideoSrt` 是用 `Golang`语言，基于 [lxn/walk](https://github.com/lxn/walk) Windows-GUI 工具包开发。\r\n\r\n这是一个可以识别视频语音自动生成字幕SRT文件的开源软件工具。<br />适用于快速、批量的为媒体（视频/音频）生成中/英文字幕、文本文件的业务场景。\r\n\r\n0.3.5 版本将会使用以下接口：\r\n- 阿里云 [OSS对象存储](https://www.aliyun.com/product/oss?spm=5176.12825654.eofdhaal5.13.e9392c4aGfj5vj&aly_as=K11FcpO8)\r\n- 阿里云 [录音文件识别](https://ai.aliyun.com/nls/filetrans?spm=5176.12061031.1228726.1.47fe3cb43I34mn) \r\n- 百度翻译开放平台 [翻译API](http://api.fanyi.baidu.com/api/trans/product/index) \r\n- 腾讯云 [翻译API](https://cloud.tencent.com/product/tmt) \r\n\r\n软件帮助文档/使用教程看这个：[https://www.yuque.com/viggo-t7cdi/videosrt](https://www.yuque.com/viggo-t7cdi/videosrt)\r\n\r\nB站Up主自制教程：[https://search.bilibili.com/all?keyword=videosrt](https://search.bilibili.com/all?keyword=videosrt)\r\n\r\n##### Videosrt Pro 已发布，支持语音转字幕、字幕翻译、视频智能翻译配音、人声分离、视频字幕压制、字幕格式转换、字幕自动打轴、视频硬字幕提取，建议使用！软件下载/说明详见：https://www.yuque.com/viggo-t7cdi/videosrt-pro/cpwtwl\r\n\r\n线上“字幕生成/字幕翻译”解决方案：[字幕酱（付费）](https://www.zimujiang.com/aff?code=aannv4os)\r\n\r\n<a name=\"0b884e4f\"></a>\r\n## 界面预览\r\n\r\n![](https://pic.downk.cc/item/5f28c7ea14195aa594369a59.gif)\r\n\r\n## 应用场景\r\n\r\n- 识别**视频/音频**的语音生成字幕文件（支持中英互译，双语字幕）\r\n- 提取**视频/音频**的语音文本\r\n- 批量翻译、过滤处理/编码SRT字幕文件\r\n\r\n\r\n<a name=\"b89d37d3\"></a>\r\n## 软件优势\r\n\r\n- 使用阿里云语音识别接口，准确度高，标准普通话/英语识别率95%以上\r\n- 视频识别无需上传原视频，方便快速且节省时间\r\n- 支持多任务多文件批量处理\r\n- 支持视频、音频常见多种格式文件\r\n- 支持同时输出字幕SRT文件、LRC文件、普通文本3种类型\r\n- 支持语气词过滤、自定义文本过滤、正则过滤等，使软件生成的字幕更加精准\r\n- 支持字幕中英互译、双语字幕输出，及日语、韩语、法语、德语、西班牙语、俄语、意大利语、泰语等\r\n- 支持多翻译引擎（百度翻译、腾讯云翻译）\r\n- 支持批量翻译、编码SRT字幕文件\r\n\r\n<a name=\"Download\"></a>\r\n## Download\r\n\r\n<a name=\"e66a66f1\"></a>\r\n##### 下载地址:\r\n- (v0.3.5)（含ffmpeg依赖） [点我下载](http://file.viggo.site/video-srt/0.3.5/video-srt-gui-ffmpeg-0.3.5-x64.zip)\r\n- (v0.3.5)（不含ffmpeg依赖） [点我下载](http://file.viggo.site/video-srt/0.3.5/video-srt-gui-0.3.5-x64.zip)\r\n- (v0.2.6)（含ffmpeg依赖） [点我下载](http://file.viggo.site/video-srt/0.2.6/video-srt-gui-ffmpeg-0.2.6-x64.zip)\r\n- (v0.2.6)（不含ffmpeg依赖） [点我下载](http://file.viggo.site/video-srt/0.2.6/video-srt-gui-0.2.6-x64.zip)\r\n\r\n你也可以到 [release](https://github.com/wxbool/video-srt-windows/releases) 页面下载其他版本\r\n\r\n<a name=\"1bbbb204\"></a>\r\n## 注意事项\r\n\r\n- 软件目录下的 `data`目录为数据存储目录，请勿删除。否则可能会导致配置丢失\r\n- 项目使用了 [ffmpeg](http://ffmpeg.org/) 依赖，除非您的电脑已经安装了`ffmpeg`环境，否则请下载包含`ffmpeg`依赖的软件包\r\n\r\n<a name=\"9a751511\"></a>\r\n## 升级说明\r\n\r\n- 先下载最新版本的软件包\r\n- 然后用旧版本软件的 `data` 文件夹覆盖新版软件的 `data` 文件夹\r\n- 0.2.6 升级至 0.2.9 以上的版本时，由于翻译设置无法直接兼容低版本，可能需要重新在软件创建翻译引擎才能继续使用翻译功能\r\n\r\n## 其他\r\n今日，有小伙伴在淘宝、闲鱼上发现一些界面相似的盗版且额外收费的软件。由于`VideoSrt` 是开源软件，所以不排除个别不良用户通过微调软件源代码，然后进行二次售卖甚至传播病毒。 \r\n\r\n目前已知的有：`大象字幕`\r\n\r\n因此，软件的安装包不要在第三方平台渠道下载，尽量在 github/码云/帮助文档 等官方渠道的页面进行下载。\r\n\r\n小伙伴们要擦亮眼睛，打击盗版，望周知！\r\n\r\n\r\n## FAQ\r\n##### 1.为什么Linux和Mac不能用？\r\n因为`VideoSrt`的GUI是使用[lxn/walk](https://github.com/lxn/walk)开发的，仅支持Windows的GUI，如果您想在Linux上使用，可以体验[CLI版本](https://github.com/wxbool/video-srt)\r\n\r\n##### 2.使用此软件会产生费用吗？\r\n如果您适量使用本软件（各个API的免费使用额度可以自行查询），将不会产生费用。\r\n如果您大量使用，建议根据自己的情况购买各个平台的资源包，以满足需求。\r\n\r\n##### 3.难受，为什么我一直报错？\r\n报错的原因有很多，软件配置错误、阿里云、腾讯云等账户权限问题都可能会导致软件显示错误。如果您遇到麻烦，建议加入`QQ群`与我们交流。\r\n\r\n\r\n<a name=\"f3dc992e\"></a>\r\n## 交流&联系\r\n\r\n- 团队合作伙伴QQ：417504864\r\n- QQ交流群3：[742310571](https://jq.qq.com/?_wv=1027&k=OPKLP16H) \r\n- QQ交流群2：[1035527812](https://jq.qq.com/?_wv=1027&k=lzbkMgzJ) (已满)\r\n- QQ交流群1：[109695078](https://jq.qq.com/?_wv=1027&k=5Eco2hO) (已满)\r\n\r\n\r\n<a name=\"AyJ3E\"></a>\r\n## 捐赠&支持\r\n\r\n![](https://cdn.nlark.com/yuque/0/2021/png/695280/1633671491324-b3375ad6-027b-4297-bd7f-2f42784dccbf.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_23%2Ctext_VmlkZW9TcnQ%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10%2Fresize%2Cw_794%2Climit_0)"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.3037109375,
          "content": "module videosrt\n\ngo 1.12\n\nrequire (\n\tgithub.com/JamesHovious/w32 v1.1.0\n\tgithub.com/Onelio/winmm v0.0.0-20191219112928-4c30bd2f3ec1\n\tgithub.com/PuerkitoBio/goquery v1.5.0\n\tgithub.com/aliyun/alibaba-cloud-sdk-go v1.60.268\n\tgithub.com/aliyun/aliyun-oss-go-sdk v2.0.4+incompatible\n\tgithub.com/baiyubin/aliyun-sts-go-sdk v0.0.0-20180326062324-cfa1a18b161f // indirect\n\tgithub.com/buger/jsonparser v0.0.0-20191004114745-ee4c978eae7e\n\tgithub.com/dreamCodeMan/xfyun_go_sdk v0.0.0-20200227025001-249b66fa8600\n\tgithub.com/gen2brain/malgo v0.10.15 // indirect\n\tgithub.com/hajimehoshi/go-mp3 v0.3.0 // indirect\n\tgithub.com/lxn/walk v0.0.0-20191121152919-b7c43041fb1b\n\tgithub.com/lxn/win v0.0.0-20191106123917-121afc750dd3 // indirect\n\tgithub.com/mewkiz/flac v1.0.6\n\tgithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e // indirect\n\tgithub.com/satori/go.uuid v1.2.0 // indirect\n\tgithub.com/tencentcloud/tencentcloud-sdk-go v3.0.128+incompatible\n\tgithub.com/youpy/go-riff v0.0.0-20131220112943-557d78c11efb // indirect\n\tgithub.com/youpy/go-wav v0.0.0-20160223082350-b63a9887d320 // indirect\n\tgolang.org/x/sys v0.0.0-20191120155948-bd437916bb0e // indirect\n\tgolang.org/x/time v0.0.0-20191024005414-555d28b269f0 // indirect\n\tgopkg.in/Knetic/govaluate.v3 v3.0.0 // indirect\n\tgopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f // indirect\n)\n"
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 31.9208984375,
          "content": "package main\n\nimport (\n\t\"github.com/lxn/walk\"\n\t. \"github.com/lxn/walk/declarative\"\n\t\"log\"\n\t\"runtime\"\n\t\"strings\"\n\t\"time\"\n\t. \"videosrt/app\"\n\t\"videosrt/app/ffmpeg\"\n\t\"videosrt/app/tool\"\n)\n\n//应用版本号\nconst APP_VERSION = \"0.3.5\"\n\nvar AppRootDir string\nvar mw *MyMainWindow\n\nvar (\n\toutputSrtChecked *walk.CheckBox\n\toutputLrcChecked *walk.CheckBox\n\toutputTxtChecked *walk.CheckBox\n\n\tglobalFilterChecked *walk.CheckBox\n\tdefinedFilterChecked *walk.CheckBox\n)\n\n\nfunc init()  {\n\t//设置可同时执行的最大CPU数\n\truntime.GOMAXPROCS(runtime.NumCPU())\n\t//MY Window\n\tmw = new(MyMainWindow)\n\n\tAppRootDir = GetAppRootDir()\n\tif AppRootDir == \"\" {\n\t\tpanic(\"应用根目录获取失败\")\n\t}\n\n\t//校验ffmpeg环境\n\tif e := ffmpeg.VailFfmpegLibrary(); e != nil {\n\t\t//尝试自动引入 ffmpeg 环境\n\t\tffmpeg.VailTempFfmpegLibrary(AppRootDir)\n\t}\n}\n\n\nfunc main() {\n\tvar taskFiles = new(TaskHandleFile)\n\n\tvar logText *walk.TextEdit\n\n\tvar operateEngineDb *walk.DataBinder\n\tvar operateTranslateEngineDb *walk.DataBinder\n\tvar operateTranslateDb *walk.DataBinder\n\tvar operateDb *walk.DataBinder\n\tvar operateFilter *walk.DataBinder\n\n\tvar operateFrom = new(OperateFrom)\n\n\tvar startBtn *walk.PushButton //生成字幕Btn\n\tvar startTranslateBtn *walk.PushButton //字幕翻译Btn\n\tvar engineOptionsBox *walk.ComboBox\n\tvar translateEngineOptionsBox *walk.ComboBox\n\tvar dropFilesEdit *walk.TextEdit\n\n\tvar appSetings = Setings.GetCacheAppSetingsData()\n\tvar appFilter = Filter.GetCacheAppFilterData()\n\n\t//初始化展示配置\n\toperateFrom.Init(appSetings)\n\n\t//日志\n\tvar tasklog = NewTasklog(logText)\n\n\t//字幕生成应用\n\tvar videosrt = NewApp(AppRootDir)\n\t//注册日志事件\n\tvideosrt.SetLogHandler(func(s string, video string) {\n\t\tbaseName := tool.GetFileBaseName(video)\n\t\tstrs := strings.Join([]string{\"【\" , baseName , \"】\" , s} , \"\")\n\t\t//追加日志\n\t\ttasklog.AppendLogText(strs)\n\t})\n\t//字幕输出目录\n\tvideosrt.SetSrtDir(appSetings.SrtFileDir)\n\t//注册[字幕生成]多任务\n\tvar multitask = NewVideoMultitask(appSetings.MaxConcurrency)\n\n\n\t//字幕翻译应用\n\tvar srtTranslateApp = NewSrtTranslateApp(AppRootDir)\n\t//注册日志回调事件\n\tsrtTranslateApp.SetLogHandler(func(s string, file string) {\n\t\tbaseName := tool.GetFileBaseName(file)\n\t\tstrs := strings.Join([]string{\"【\" , baseName , \"】\" , s} , \"\")\n\t\t//追加日志\n\t\ttasklog.AppendLogText(strs)\n\t})\n\t//文件输出目录\n\tsrtTranslateApp.SetSrtDir(appSetings.SrtFileDir)\n\t//注册[字幕翻译]多任务\n\tvar srtTranslateMultitask = NewTranslateMultitask(appSetings.MaxConcurrency)\n\n\tif err := (MainWindow{\n\t\tAssignTo: &mw.MainWindow,\n\t\tIcon:\"./data/img/index.png\",\n\t\tTitle:    \"VideoSrt - 一键字幕生成、字幕翻译小工具\" + \" - \" + APP_VERSION,\n\t\tFont:Font{Family: \"微软雅黑\", PointSize: 9},\n\t\tToolBar: ToolBar{\n\t\t\tButtonStyle: ToolBarButtonImageBeforeText,\n\t\t\tItems: []MenuItem{\n\t\t\t\tMenu{\n\t\t\t\t\tText:\"打开\",\n\t\t\t\t\tImage: \"./data/img/open.png\",\n\t\t\t\t\tItems: []MenuItem{\n\t\t\t\t\t\tAction{\n\t\t\t\t\t\t\tImage:  \"./data/img/media.png\",\n\t\t\t\t\t\t\tText:   \"媒体文件\",\n\t\t\t\t\t\t\tOnTriggered: func() {\n\t\t\t\t\t\t\t\tdlg := new(walk.FileDialog)\n\t\t\t\t\t\t\t\t//选择待操作的文件列表\n\t\t\t\t\t\t\t\t//dlg.FilePath = mw.prevFilePath\n\t\t\t\t\t\t\t\tdlg.Filter = \"Media Files (*.mp4;*.mpeg;*.mkv;*.wmv;*.avi;*.m4v;*.mov;*.flv;*.rmvb;*.3gp;*.f4v;*.mp3;*.wav;*.aac;*.wma;*.flac;*.m4a;*.srt)|*.mp4;*.mpeg;*.mkv;*.wmv;*.avi;*.m4v;*.mov;*.flv;*.rmvb;*.3gp;*.f4v;*.mp3;*.wav;*.aac;*.wma;*.flac;*.m4a;*.srt\"\n\t\t\t\t\t\t\t\tdlg.Title = \"选择待操作的媒体文件\"\n\n\t\t\t\t\t\t\t\tok, err := dlg.ShowOpenMultiple(mw);\n\t\t\t\t\t\t\t\tif err != nil {\n\t\t\t\t\t\t\t\t\tmw.NewErrormationTips(\"错误\" , err.Error())\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ok == false {\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t//校验文件数量\n\t\t\t\t\t\t\t\tif len(dlg.FilePaths) == 0 {\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t//检测文件列表\n\t\t\t\t\t\t\t\tresult , err := VaildateHandleFiles(dlg.FilePaths , true , true)\n\t\t\t\t\t\t\t\tif err != nil {\n\t\t\t\t\t\t\t\t\tmw.NewErrormationTips(\"错误\" , err.Error())\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\ttaskFiles.Files = result\n\t\t\t\t\t\t\t\tdropFilesEdit.SetText(strings.Join(result, \"\\r\\n\"))\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tMenu{\n\t\t\t\t\tText:  \"新建\",\n\t\t\t\t\tImage: \"./data/img/new.png\",\n\t\t\t\t\tItems: []MenuItem{\n\t\t\t\t\t\tAction{\n\t\t\t\t\t\t\tImage:  \"./data/img/voice.png\",\n\t\t\t\t\t\t\tText:   \"语音引擎（阿里云）\",\n\t\t\t\t\t\t\tOnTriggered: func() {\n\t\t\t\t\t\t\t\tmw.RunSpeechEngineSetingDialog(mw , func() {\n\t\t\t\t\t\t\t\t\tthisData := Engine.GetEngineOptionsSelects()\n\n\t\t\t\t\t\t\t\t\t//校验选择的翻译引擎是否存在\n\t\t\t\t\t\t\t\t\t_ , ok := Engine.GetEngineById(appSetings.CurrentEngineId)\n\t\t\t\t\t\t\t\t\tif appSetings.CurrentEngineId == 0 || !ok {\n\t\t\t\t\t\t\t\t\t\tappSetings.CurrentEngineId = thisData[0].Id\n\n\t\t\t\t\t\t\t\t\t\t//更新缓存\n\t\t\t\t\t\t\t\t\t\tSetings.SetCacheAppSetingsData(appSetings)\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t//重新加载选项\n\t\t\t\t\t\t\t\t\t_ = engineOptionsBox.SetModel(thisData)\n\t\t\t\t\t\t\t\t\t//重置index\n\t\t\t\t\t\t\t\t\tengIndex := Engine.GetCurrentIndex(thisData , appSetings.CurrentEngineId)\n\t\t\t\t\t\t\t\t\tif engIndex != -1 {\n\t\t\t\t\t\t\t\t\t\t_ = engineOptionsBox.SetCurrentIndex(engIndex)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\toperateFrom.EngineId = appSetings.CurrentEngineId\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tAction{\n\t\t\t\t\t\t\tImage:  \"./data/img/translate.png\",\n\t\t\t\t\t\t\tText:   \"翻译引擎（百度翻译）\",\n\t\t\t\t\t\t\tOnTriggered: func() {\n\t\t\t\t\t\t\t\tmw.RunBaiduTranslateEngineSetingDialog(mw , func() {\n\t\t\t\t\t\t\t\t\tthisData := Translate.GetTranslateEngineOptionsSelects()\n\n\t\t\t\t\t\t\t\t\t//校验选择的翻译引擎是否存在\n\t\t\t\t\t\t\t\t\t_ , ok := Engine.GetEngineById(appSetings.CurrentEngineId)\n\t\t\t\t\t\t\t\t\tif appSetings.CurrentTranslateEngineId == 0 || !ok {\n\t\t\t\t\t\t\t\t\t\tappSetings.CurrentTranslateEngineId = thisData[0].Id\n\t\t\t\t\t\t\t\t\t\t//更新缓存\n\t\t\t\t\t\t\t\t\t\tSetings.SetCacheAppSetingsData(appSetings)\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t//重新加载选项\n\t\t\t\t\t\t\t\t\t_ = translateEngineOptionsBox.SetModel(thisData)\n\t\t\t\t\t\t\t\t\t//重置index\n\t\t\t\t\t\t\t\t\tengIndex := Translate.GetCurrentTranslateEngineIndex(thisData , appSetings.CurrentTranslateEngineId)\n\t\t\t\t\t\t\t\t\tif engIndex != -1 {\n\t\t\t\t\t\t\t\t\t\t_ = translateEngineOptionsBox.SetCurrentIndex(engIndex)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\toperateFrom.TranslateEngineId = appSetings.CurrentTranslateEngineId\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tAction{\n\t\t\t\t\t\t\tImage:  \"./data/img/translate.png\",\n\t\t\t\t\t\t\tText:   \"翻译引擎（腾讯云）\",\n\t\t\t\t\t\t\tOnTriggered: func() {\n\t\t\t\t\t\t\t\tmw.RunTengxunyunTranslateEngineSetingDialog(mw , func() {\n\t\t\t\t\t\t\t\t\tthisData := Translate.GetTranslateEngineOptionsSelects()\n\t\t\t\t\t\t\t\t\tif appSetings.CurrentTranslateEngineId == 0 {\n\t\t\t\t\t\t\t\t\t\tappSetings.CurrentTranslateEngineId = thisData[0].Id\n\t\t\t\t\t\t\t\t\t\t//更新缓存\n\t\t\t\t\t\t\t\t\t\tSetings.SetCacheAppSetingsData(appSetings)\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t//重新加载选项\n\t\t\t\t\t\t\t\t\t_ = translateEngineOptionsBox.SetModel(thisData)\n\t\t\t\t\t\t\t\t\t//重置index\n\t\t\t\t\t\t\t\t\tengIndex := Translate.GetCurrentTranslateEngineIndex(thisData , appSetings.CurrentTranslateEngineId)\n\t\t\t\t\t\t\t\t\tif engIndex != -1 {\n\t\t\t\t\t\t\t\t\t\t_ = translateEngineOptionsBox.SetCurrentIndex(engIndex)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\toperateFrom.TranslateEngineId = appSetings.CurrentTranslateEngineId\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tMenu{\n\t\t\t\t\tText:  \"设置\",\n\t\t\t\t\tImage: \"./data/img/setings.png\",\n\t\t\t\t\tItems: []MenuItem{\n\t\t\t\t\t\tAction{\n\t\t\t\t\t\t\tText:    \"OSS对象存储设置\",\n\t\t\t\t\t\t\tImage:   \"./data/img/oss.png\",\n\t\t\t\t\t\t\tOnTriggered: func() {\n\t\t\t\t\t\t\t\tmw.RunObjectStorageSetingDialog(mw)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tAction{\n\t\t\t\t\t\t\tText:    \"软件设置\",\n\t\t\t\t\t\t\tImage:   \"./data/img/app-setings.png\",\n\t\t\t\t\t\t\tOnTriggered: func() {\n\t\t\t\t\t\t\t\tmw.RunAppSetingDialog(mw , func(setings *AppSetings) {\n\t\t\t\t\t\t\t\t\t//更新配置\n\t\t\t\t\t\t\t\t\tappSetings.MaxConcurrency = setings.MaxConcurrency\n\t\t\t\t\t\t\t\t\tappSetings.SrtFileDir = setings.SrtFileDir\n\t\t\t\t\t\t\t\t\tappSetings.CloseNewVersionMessage = setings.CloseNewVersionMessage\n\t\t\t\t\t\t\t\t\tappSetings.CloseAutoDeleteOssTempFile = setings.CloseAutoDeleteOssTempFile\n\t\t\t\t\t\t\t\t\tappSetings.CloseIntelligentBlockSwitch = setings.CloseIntelligentBlockSwitch\n\n\t\t\t\t\t\t\t\t\tmultitask.SetMaxConcurrencyNumber( setings.MaxConcurrency )\n\t\t\t\t\t\t\t\t\tsrtTranslateMultitask.SetMaxConcurrencyNumber( setings.MaxConcurrency )\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tMenu{\n\t\t\t\t\tText:  \"帮助文档/支持\",\n\t\t\t\t\tImage: \"./data/img/about.png\",\n\t\t\t\t\tItems: []MenuItem{\n\t\t\t\t\t\tAction{\n\t\t\t\t\t\t\tText:        \"github\",\n\t\t\t\t\t\t\tImage:      \"./data/img/github.png\",\n\t\t\t\t\t\t\tOnTriggered: mw.OpenAboutGithub,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tAction{\n\t\t\t\t\t\t\tText:        \"gitee\",\n\t\t\t\t\t\t\tImage:      \"./data/img/gitee.png\",\n\t\t\t\t\t\t\tOnTriggered: mw.OpenAboutGitee,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tAction{\n\t\t\t\t\t\t\tText:        \"帮助文档\",\n\t\t\t\t\t\t\tImage:      \"./data/img/version.png\",\n\t\t\t\t\t\t\tOnTriggered: func() {\n\t\t\t\t\t\t\t\t_ = tool.OpenUrl(\"https://www.yuque.com/viggo-t7cdi/videosrt\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tAction{\n\t\t\t\t\t\t\tText:        \"赞助/打赏\",\n\t\t\t\t\t\t\tOnTriggered: func() {\n\t\t\t\t\t\t\t\t_ = tool.OpenUrl(\"https://gitee.com/641453620/video-srt-windows#%E6%8D%90%E8%B5%A0%E6%94%AF%E6%8C%81\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tAction{\n\t\t\t\t\t\t\tText:        \"QQ交流群\",\n\t\t\t\t\t\t\tChecked:false,\n\t\t\t\t\t\t\tVisible:false,\n\t\t\t\t\t\t\tCheckable:false,\n\t\t\t\t\t\t\tOnTriggered: func() {\n\t\t\t\t\t\t\t\t_ = tool.OpenUrl(\"https://gitee.com/641453620/video-srt-windows#%E4%BA%A4%E6%B5%81%E8%81%94%E7%B3%BB\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tMenu{\n\t\t\t\t\tText:  \"语音合成配音/文章转视频\",\n\t\t\t\t\tImage: \"./data/img/muyan.png\",\n\t\t\t\t\tOnTriggered: func() {\n\t\t\t\t\t\t_ = tool.OpenUrl(\"https://www.muyanpeiyin.com/\")\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tMenu{\n\t\t\t\t\tText:  \"Videosrt Pro 付费版\",\n\t\t\t\t\tOnTriggered: func() {\n\t\t\t\t\t\t_ = tool.OpenUrl(\"https://www.yuque.com/viggo-t7cdi/videosrt-pro/cpwtwl\")\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tSize: Size{800, 650},\n\t\tMinSize: Size{300, 650},\n\t\tLayout:  VBox{},\n\t\tChildren: []Widget{\n\t\t\tHSplitter{\n\t\t\t\tChildren: []Widget{\n\t\t\t\t\tComposite{\n\t\t\t\t\t\tMinSize:Size{Height:31,Width:400},\n\t\t\t\t\t\tDataBinder: DataBinder{\n\t\t\t\t\t\t\tAssignTo:    &operateEngineDb,\n\t\t\t\t\t\t\tDataSource:   operateFrom,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tLayout: Grid{Columns: 3},\n\t\t\t\t\t\tChildren: []Widget{\n\t\t\t\t\t\t\tLabel{\n\t\t\t\t\t\t\t\tText: \"语音引擎：\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tComboBox{\n\t\t\t\t\t\t\t\tAssignTo:&engineOptionsBox,\n\t\t\t\t\t\t\t\tValue: Bind(\"EngineId\", SelRequired{}),\n\t\t\t\t\t\t\t\tBindingMember: \"Id\",\n\t\t\t\t\t\t\t\tDisplayMember: \"Name\",\n\t\t\t\t\t\t\t\tModel:  Engine.GetEngineOptionsSelects(),\n\t\t\t\t\t\t\t\tOnCurrentIndexChanged: func() {\n\t\t\t\t\t\t\t\t\t_ = operateEngineDb.Submit()\n\n\t\t\t\t\t\t\t\t\tif operateFrom.EngineId == 0 {\n\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tappSetings.CurrentEngineId = operateFrom.EngineId\n\t\t\t\t\t\t\t\t\t//更新缓存\n\t\t\t\t\t\t\t\t\tSetings.SetCacheAppSetingsData(appSetings)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tPushButton{\n\t\t\t\t\t\t\t\tText: \"删除\",\n\t\t\t\t\t\t\t\tMaxSize:Size{50 , 55},\n\t\t\t\t\t\t\t\tOnClicked: func() {\n\t\t\t\t\t\t\t\t\tvar thisEngineOptions = make([]*EngineSelects , 0)\n\t\t\t\t\t\t\t\t\tthisEngineOptions = Engine.GetEngineOptionsSelects()\n\t\t\t\t\t\t\t\t\t//删除校验\n\t\t\t\t\t\t\t\t\tif appSetings.CurrentEngineId == 0 {\n\t\t\t\t\t\t\t\t\t\tmw.NewErrormationTips(\"错误\" , \"请选择要操作的语音引擎\")\n\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif len(thisEngineOptions) <= 1 {\n\t\t\t\t\t\t\t\t\t\tmw.NewErrormationTips(\"错误\" , \"不能删除全部语音引擎\")\n\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t//删除引擎\n\t\t\t\t\t\t\t\t\tif ok := Engine.RemoveCacheAliyunEngineData(appSetings.CurrentEngineId);ok == false {\n\t\t\t\t\t\t\t\t\t\t//删除失败\n\t\t\t\t\t\t\t\t\t\tmw.NewErrormationTips(\"错误\" , \"语音引擎删除失败\")\n\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tthisEngineOptions = Engine.GetEngineOptionsSelects()\n\n\t\t\t\t\t\t\t\t\t//重新加载列表\n\t\t\t\t\t\t\t\t\t_ = engineOptionsBox.SetModel(thisEngineOptions)\n\n\t\t\t\t\t\t\t\t\tappSetings.CurrentEngineId = thisEngineOptions[0].Id\n\t\t\t\t\t\t\t\t\toperateFrom.EngineId = appSetings.CurrentEngineId\n\t\t\t\t\t\t\t\t\t//更新缓存\n\t\t\t\t\t\t\t\t\tSetings.SetCacheAppSetingsData(appSetings)\n\t\t\t\t\t\t\t\t\t//更新下标\n\t\t\t\t\t\t\t\t\t_ = engineOptionsBox.SetCurrentIndex(0)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\tComposite{\n\t\t\t\t\t\tMinSize:Size{Height:31,Width:400},\n\t\t\t\t\t\tDataBinder: DataBinder{\n\t\t\t\t\t\t\tAssignTo:    &operateTranslateEngineDb,\n\t\t\t\t\t\t\tDataSource:   operateFrom,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tLayout: Grid{Columns: 3},\n\t\t\t\t\t\tChildren: []Widget{\n\t\t\t\t\t\t\tLabel{\n\t\t\t\t\t\t\t\tText: \"翻译引擎：\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tComboBox{\n\t\t\t\t\t\t\t\tAssignTo:&translateEngineOptionsBox,\n\t\t\t\t\t\t\t\tValue: Bind(\"TranslateEngineId\", SelRequired{}),\n\t\t\t\t\t\t\t\tBindingMember: \"Id\",\n\t\t\t\t\t\t\t\tDisplayMember: \"Name\",\n\t\t\t\t\t\t\t\tModel:  Translate.GetTranslateEngineOptionsSelects(),\n\t\t\t\t\t\t\t\tOnCurrentIndexChanged: func() {\n\t\t\t\t\t\t\t\t\t_ = operateTranslateEngineDb.Submit()\n\n\t\t\t\t\t\t\t\t\tif operateFrom.TranslateEngineId == 0 {\n\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tappSetings.CurrentTranslateEngineId = operateFrom.TranslateEngineId\n\t\t\t\t\t\t\t\t\t//更新缓存\n\t\t\t\t\t\t\t\t\tSetings.SetCacheAppSetingsData(appSetings)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tPushButton{\n\t\t\t\t\t\t\t\tText: \"删除\",\n\t\t\t\t\t\t\t\tMaxSize:Size{50 , 55},\n\t\t\t\t\t\t\t\tOnClicked: func() {\n\t\t\t\t\t\t\t\t\tvar thisEngineOptions = make([]*TranslateEngineSelects , 0)\n\t\t\t\t\t\t\t\t\tthisEngineOptions = Translate.GetTranslateEngineOptionsSelects()\n\t\t\t\t\t\t\t\t\t//删除校验\n\t\t\t\t\t\t\t\t\tif appSetings.CurrentTranslateEngineId == 0 {\n\t\t\t\t\t\t\t\t\t\tmw.NewErrormationTips(\"错误\" , \"请选择要删除的翻译引擎\")\n\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif len(thisEngineOptions) <= 1 {\n\t\t\t\t\t\t\t\t\t\tmw.NewErrormationTips(\"错误\" , \"不能删除全部翻译引擎\")\n\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t//删除引擎\n\t\t\t\t\t\t\t\t\tif ok := Translate.RemoveCacheTranslateEngineData(appSetings.CurrentTranslateEngineId);ok == false {\n\t\t\t\t\t\t\t\t\t\t//删除失败\n\t\t\t\t\t\t\t\t\t\tmw.NewErrormationTips(\"错误\" , \"翻译引擎删除失败\")\n\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tthisEngineOptions = Translate.GetTranslateEngineOptionsSelects()\n\n\t\t\t\t\t\t\t\t\t//重新加载列表\n\t\t\t\t\t\t\t\t\t_ = translateEngineOptionsBox.SetModel(thisEngineOptions)\n\n\t\t\t\t\t\t\t\t\tappSetings.CurrentTranslateEngineId = thisEngineOptions[0].Id\n\t\t\t\t\t\t\t\t\toperateFrom.TranslateEngineId = appSetings.CurrentTranslateEngineId\n\t\t\t\t\t\t\t\t\t//更新缓存\n\t\t\t\t\t\t\t\t\tSetings.SetCacheAppSetingsData(appSetings)\n\t\t\t\t\t\t\t\t\t//更新下标\n\t\t\t\t\t\t\t\t\t_ = translateEngineOptionsBox.SetCurrentIndex(0)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\n\t\t\t/*翻译设置*/\n\t\t\tHSplitter{\n\t\t\t\tChildren:[]Widget{\n\t\t\t\t\tComposite{\n\t\t\t\t\t\tDataBinder: DataBinder{\n\t\t\t\t\t\t\tAssignTo:    &operateTranslateDb,\n\t\t\t\t\t\t\tDataSource:   operateFrom,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tLayout: Grid{Columns: 4},\n\t\t\t\t\t\tChildren: []Widget{\n\t\t\t\t\t\t\tLabel{\n\t\t\t\t\t\t\t\tText: \"翻译设置：\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tCheckBox{\n\t\t\t\t\t\t\t\tText:\"开启翻译\",\n\t\t\t\t\t\t\t\tChecked: Bind(\"TranslateSwitch\"),\n\t\t\t\t\t\t\t\tOnClicked: func() {\n\t\t\t\t\t\t\t\t\t_ = operateTranslateDb.Submit()\n\n\t\t\t\t\t\t\t\t\tappSetings.TranslateSwitch = operateFrom.TranslateSwitch\n\t\t\t\t\t\t\t\t\t//更新缓存\n\t\t\t\t\t\t\t\t\tSetings.SetCacheAppSetingsData(appSetings)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tCheckBox{\n\t\t\t\t\t\t\t\tText:\"双语字幕\",\n\t\t\t\t\t\t\t\tChecked: Bind(\"BilingualSubtitleSwitch\"),\n\t\t\t\t\t\t\t\tOnClicked: func() {\n\t\t\t\t\t\t\t\t\t_ = operateTranslateDb.Submit()\n\n\t\t\t\t\t\t\t\t\tappSetings.BilingualSubtitleSwitch = operateFrom.BilingualSubtitleSwitch\n\t\t\t\t\t\t\t\t\t//更新缓存\n\t\t\t\t\t\t\t\t\tSetings.SetCacheAppSetingsData(appSetings)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tCheckBox{\n\t\t\t\t\t\t\t\tText:\"主字幕（输入语言）\",\n\t\t\t\t\t\t\t\tChecked: Bind(\"OutputMainSubtitleInputLanguage\"),\n\t\t\t\t\t\t\t\tOnClicked: func() {\n\t\t\t\t\t\t\t\t\t_ = operateTranslateDb.Submit()\n\n\t\t\t\t\t\t\t\t\tappSetings.OutputMainSubtitleInputLanguage = operateFrom.OutputMainSubtitleInputLanguage\n\t\t\t\t\t\t\t\t\t//更新缓存\n\t\t\t\t\t\t\t\t\tSetings.SetCacheAppSetingsData(appSetings)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t//输入语言\n\t\t\t\t\t\t\tLabel{\n\t\t\t\t\t\t\t\tText: \"输入语言：\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tComboBox{\n\t\t\t\t\t\t\t\tValue: Bind(\"InputLanguage\", SelRequired{}),\n\t\t\t\t\t\t\t\tBindingMember: \"Id\",\n\t\t\t\t\t\t\t\tDisplayMember: \"Name\",\n\t\t\t\t\t\t\t\tModel: GetTranslateInputLanguageOptionsSelects(),\n\t\t\t\t\t\t\t\tColumnSpan: 3,\n\t\t\t\t\t\t\t\tMaxSize:Size{Width:80},\n\t\t\t\t\t\t\t\tOnCurrentIndexChanged: func() {\n\t\t\t\t\t\t\t\t\t_ = operateTranslateDb.Submit()\n\t\t\t\t\t\t\t\t\tappSetings.InputLanguage = operateFrom.InputLanguage\n\t\t\t\t\t\t\t\t\t//更新缓存\n\t\t\t\t\t\t\t\t\tSetings.SetCacheAppSetingsData(appSetings)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t//输出语言\n\t\t\t\t\t\t\tLabel{\n\t\t\t\t\t\t\t\tText: \"输出语言：\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tComboBox{\n\t\t\t\t\t\t\t\tValue: Bind(\"OutputLanguage\", SelRequired{}),\n\t\t\t\t\t\t\t\tBindingMember: \"Id\",\n\t\t\t\t\t\t\t\tDisplayMember: \"Name\",\n\t\t\t\t\t\t\t\tModel: GetTranslateOutputLanguageOptionsSelects(),\n\t\t\t\t\t\t\t\tColumnSpan: 3,\n\t\t\t\t\t\t\t\tMaxSize:Size{Width:80},\n\t\t\t\t\t\t\t\tOnCurrentIndexChanged: func() {\n\t\t\t\t\t\t\t\t\t_ = operateTranslateDb.Submit()\n\t\t\t\t\t\t\t\t\tappSetings.OutputLanguage = operateFrom.OutputLanguage\n\t\t\t\t\t\t\t\t\t//更新缓存\n\t\t\t\t\t\t\t\t\tSetings.SetCacheAppSetingsData(appSetings)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\n\t\t\t/*过滤器设置*/\n\t\t\tHSplitter{\n\t\t\t\tChildren:[]Widget{\n\t\t\t\t\tComposite{\n\t\t\t\t\t\tDataBinder: DataBinder{\n\t\t\t\t\t\t\tAssignTo:    &operateFilter,\n\t\t\t\t\t\t\tDataSource:   appFilter,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tLayout: Grid{Columns: 5},\n\t\t\t\t\t\tChildren: []Widget{\n\t\t\t\t\t\t\tLabel{\n\t\t\t\t\t\t\t\tText: \"过滤设置：\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tCheckBox{\n\t\t\t\t\t\t\t\tAssignTo:&globalFilterChecked,\n\t\t\t\t\t\t\t\tText:\"语气词过滤 \",\n\t\t\t\t\t\t\t\tChecked: Bind(\"GlobalFilter.Switch\"),\n\t\t\t\t\t\t\t\tOnClicked: func() {\n\t\t\t\t\t\t\t\t\t_ = operateFilter.Submit()\n\t\t\t\t\t\t\t\t\t//更新缓存\n\t\t\t\t\t\t\t\t\tFilter.SetCacheAppFilterData(appFilter)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tCheckBox{\n\t\t\t\t\t\t\t\tAssignTo:&definedFilterChecked,\n\t\t\t\t\t\t\t\tText:\"自定义过滤  \",\n\t\t\t\t\t\t\t\tChecked: Bind(\"DefinedFilter.Switch\"),\n\t\t\t\t\t\t\t\tOnClicked: func() {\n\t\t\t\t\t\t\t\t\t_ = operateFilter.Submit()\n\t\t\t\t\t\t\t\t\t//更新缓存\n\t\t\t\t\t\t\t\t\tFilter.SetCacheAppFilterData(appFilter)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tPushButton{\n\t\t\t\t\t\t\t\tText: \"语气词过滤设置\",\n\t\t\t\t\t\t\t\tMaxSize:Size{95 , 55},\n\t\t\t\t\t\t\t\tOnClicked: func() {\n\t\t\t\t\t\t\t\t\tmw.RunGlobalFilterSetingDialog(mw , appFilter.GlobalFilter.Words , func(words string) {\n\t\t\t\t\t\t\t\t\t\tappFilter.GlobalFilter.Words = words\n\t\t\t\t\t\t\t\t\t\t//更新缓存\n\t\t\t\t\t\t\t\t\t\tFilter.SetCacheAppFilterData(appFilter)\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tPushButton{\n\t\t\t\t\t\t\t\tText: \"自定义过滤设置\",\n\t\t\t\t\t\t\t\tMaxSize:Size{95 , 55},\n\t\t\t\t\t\t\t\tOnClicked: func() {\n\t\t\t\t\t\t\t\t\tmw.RunDefinedFilterSetingDialog(mw , appFilter.DefinedFilter.Rule , func(rule []*AppDefinedFilterRule) {\n\t\t\t\t\t\t\t\t\t\tappFilter.DefinedFilter.Rule = rule\n\t\t\t\t\t\t\t\t\t\t//更新缓存\n\t\t\t\t\t\t\t\t\t\tFilter.SetCacheAppFilterData(appFilter)\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\n\t\t\t/*输出设置*/\n\t\t\tHSplitter{\n\t\t\t\tChildren:[]Widget{\n\t\t\t\t\tComposite{\n\t\t\t\t\t\tDataBinder: DataBinder{\n\t\t\t\t\t\t\tAssignTo:    &operateDb,\n\t\t\t\t\t\t\tDataSource:   operateFrom,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tLayout: Grid{Columns: 4},\n\t\t\t\t\t\tChildren: []Widget{\n\t\t\t\t\t\t\tLabel{\n\t\t\t\t\t\t\t\tText: \"输出文件：\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tCheckBox{\n\t\t\t\t\t\t\t\tAssignTo:&outputSrtChecked,\n\t\t\t\t\t\t\t\tText:\"SRT文件\",\n\t\t\t\t\t\t\t\tChecked: Bind(\"OutputSrt\"),\n\t\t\t\t\t\t\t\tOnClicked: func() {\n\t\t\t\t\t\t\t\t\t_ = operateDb.Submit()\n\n\t\t\t\t\t\t\t\t\toperateFrom.OutputType.SRT = operateFrom.OutputSrt\n\t\t\t\t\t\t\t\t\tappSetings.OutputType = operateFrom.OutputType\n\t\t\t\t\t\t\t\t\t//更新缓存\n\t\t\t\t\t\t\t\t\tSetings.SetCacheAppSetingsData(appSetings)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tCheckBox{\n\t\t\t\t\t\t\t\tAssignTo:&outputLrcChecked,\n\t\t\t\t\t\t\t\tText:\"LRC文件\",\n\t\t\t\t\t\t\t\tChecked: Bind(\"OutputLrc\"),\n\t\t\t\t\t\t\t\tOnClicked: func() {\n\t\t\t\t\t\t\t\t\t_ = operateDb.Submit()\n\n\t\t\t\t\t\t\t\t\toperateFrom.OutputType.LRC = operateFrom.OutputLrc\n\t\t\t\t\t\t\t\t\tappSetings.OutputType = operateFrom.OutputType\n\t\t\t\t\t\t\t\t\t//更新缓存\n\t\t\t\t\t\t\t\t\tSetings.SetCacheAppSetingsData(appSetings)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tCheckBox{\n\t\t\t\t\t\t\t\tAssignTo:&outputTxtChecked,\n\t\t\t\t\t\t\t\tText:\"普通文本\",\n\t\t\t\t\t\t\t\tChecked: Bind(\"OutputTxt\"),\n\t\t\t\t\t\t\t\tOnClicked: func() {\n\t\t\t\t\t\t\t\t\t_ = operateDb.Submit()\n\n\t\t\t\t\t\t\t\t\toperateFrom.OutputType.TXT = operateFrom.OutputTxt\n\t\t\t\t\t\t\t\t\tappSetings.OutputType = operateFrom.OutputType\n\t\t\t\t\t\t\t\t\t//更新缓存\n\t\t\t\t\t\t\t\t\tSetings.SetCacheAppSetingsData(appSetings)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t//输出文件编码\n\t\t\t\t\t\t\tLabel{\n\t\t\t\t\t\t\t\tText: \"输出编码：\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tComboBox{\n\t\t\t\t\t\t\t\tValue: Bind(\"OutputEncode\", SelRequired{}),\n\t\t\t\t\t\t\t\tBindingMember: \"Id\",\n\t\t\t\t\t\t\t\tDisplayMember: \"Name\",\n\t\t\t\t\t\t\t\tModel: GetOutputEncodeOptionsSelects(),\n\t\t\t\t\t\t\t\tColumnSpan: 3,\n\t\t\t\t\t\t\t\tMaxSize:Size{Width:80},\n\t\t\t\t\t\t\t\tOnCurrentIndexChanged: func() {\n\t\t\t\t\t\t\t\t\t_ = operateDb.Submit()\n\t\t\t\t\t\t\t\t\tappSetings.OutputEncode = operateFrom.OutputEncode\n\t\t\t\t\t\t\t\t\t//更新缓存\n\t\t\t\t\t\t\t\t\tSetings.SetCacheAppSetingsData(appSetings)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t//输出文件音轨\n\t\t\t\t\t\t\tLabel{\n\t\t\t\t\t\t\t\tText: \"输出音轨：\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tComboBox{\n\t\t\t\t\t\t\t\tValue: Bind(\"SoundTrack\", SelRequired{}),\n\t\t\t\t\t\t\t\tBindingMember: \"Id\",\n\t\t\t\t\t\t\t\tDisplayMember: \"Name\",\n\t\t\t\t\t\t\t\tModel: GetSoundTrackSelects(),\n\t\t\t\t\t\t\t\tColumnSpan: 3,\n\t\t\t\t\t\t\t\tMaxSize:Size{Width:60},\n\t\t\t\t\t\t\t\tOnCurrentIndexChanged: func() {\n\t\t\t\t\t\t\t\t\t_ = operateDb.Submit()\n\t\t\t\t\t\t\t\t\tappSetings.SoundTrack = operateFrom.SoundTrack\n\t\t\t\t\t\t\t\t\t//更新缓存\n\t\t\t\t\t\t\t\t\tSetings.SetCacheAppSetingsData(appSetings)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\t\t\tHSplitter{\n\t\t\t\tChildren: []Widget{\n\t\t\t\t\tTextEdit{\n\t\t\t\t\t\tAssignTo: &dropFilesEdit,\n\t\t\t\t\t\tReadOnly: true,\n\t\t\t\t\t\tText:     \"将需要处理的媒体文件，拖入放到这里\\r\\n\\r\\n支持的视频格式：.mp4 , .mpeg , .mkv , .wmv , .avi , .m4v , .mov , .flv , .rmvb , .3gp , .f4v\\r\\n支持的音频格式：.mp3 , .wav , .aac , .wma , .flac , .m4a\\r\\n支持的字幕格式：.srt\",\n\t\t\t\t\t\tTextColor:walk.RGB(136 , 136 , 136),\n\t\t\t\t\t\tVScroll:true,\n\t\t\t\t\t},\n\t\t\t\t\tTextEdit{\n\t\t\t\t\t\tAssignTo: &logText,\n\t\t\t\t\t\tReadOnly: true,\n\t\t\t\t\t\tText:\"这里是日志输出区\",\n\t\t\t\t\t\tTextColor:walk.RGB(136 , 136 , 136),\n\t\t\t\t\t\t//HScroll:true,\n\t\t\t\t\t\tVScroll:true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tHSplitter{\n\t\t\t\tChildren: []Widget{\n\t\t\t\t\tPushButton{\n\t\t\t\t\t\tAssignTo: &startBtn,\n\t\t\t\t\t\tText: \"生成识别字幕\",\n\t\t\t\t\t\tMinSize:Size{Height:50},\n\t\t\t\t\t\tOnClicked: func() {\n\n\t\t\t\t\t\t\ttlens := len(taskFiles.Files)\n\t\t\t\t\t\t\tif tlens == 0 {\n\t\t\t\t\t\t\t\t//兼容外部调用\n\t\t\t\t\t\t\t\ttempDropFilesEdit := dropFilesEdit.Text()\n\t\t\t\t\t\t\t\tif tempDropFilesEdit != \"\" {\n\t\t\t\t\t\t\t\t\ttempFileLists := strings.Split(tempDropFilesEdit , \"\\r\\n\")\n\t\t\t\t\t\t\t\t\t//检测文件列表\n\t\t\t\t\t\t\t\t\ttempResult , _ := VaildateHandleFiles(tempFileLists , true ,false)\n\t\t\t\t\t\t\t\t\tif len(tempResult) != 0 {\n\t\t\t\t\t\t\t\t\t\ttaskFiles.Files = tempResult\n\t\t\t\t\t\t\t\t\t\tdropFilesEdit.SetText(strings.Join(tempResult, \"\\r\\n\"))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif len(taskFiles.Files) == 0 {\n\t\t\t\t\t\t\t\t\tmw.NewErrormationTips(\"错误\" , \"请先拖入要处理的媒体文件\")\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//校验文件列表\n\t\t\t\t\t\t\tif _,e := VaildateHandleFiles(taskFiles.Files , true , false); e!=nil {\n\t\t\t\t\t\t\t\tmw.NewErrormationTips(\"错误\" , e.Error())\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//设置随机种子\n\t\t\t\t\t\t\ttool.SetRandomSeed()\n\n\t\t\t\t\t\t\t//查询应用配置\n\t\t\t\t\t\t\ttempAppSetting := Setings.GetCacheAppSetingsData()\n\n\t\t\t\t\t\t\t//参数校验\n\t\t\t\t\t\t\tif !operateFrom.OutputType.SRT && !operateFrom.OutputType.LRC && !operateFrom.OutputType.TXT {\n\t\t\t\t\t\t\t\tmw.NewErrormationTips(\"错误\" , \"至少选择一种输出文件\")\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tossData := Oss.GetCacheAliyunOssData()\n\t\t\t\t\t\t\tif ossData.Endpoint == \"\" {\n\t\t\t\t\t\t\t\tmw.NewErrormationTips(\"错误\" , \"请先设置Oss对象配置\")\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//查询选择的语音引擎\n\t\t\t\t\t\t\tif tempAppSetting.CurrentEngineId == 0 {\n\t\t\t\t\t\t\t\tmw.NewErrormationTips(\"错误\" , \"请先新建/选择语音引擎\")\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrentEngine , ok := Engine.GetEngineById(tempAppSetting.CurrentEngineId)\n\t\t\t\t\t\t\tif !ok {\n\t\t\t\t\t\t\t\tmw.NewErrormationTips(\"错误\" , \"你选择的语音引擎不存在\")\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//翻译配置\n\t\t\t\t\t\t\ttempTranslateCfg := new(VideoSrtTranslateStruct)\n\t\t\t\t\t\t\ttempTranslateCfg.TranslateSwitch = tempAppSetting.TranslateSwitch\n\t\t\t\t\t\t\ttempTranslateCfg.BilingualSubtitleSwitch = tempAppSetting.BilingualSubtitleSwitch\n\t\t\t\t\t\t\ttempTranslateCfg.InputLanguage = tempAppSetting.InputLanguage\n\t\t\t\t\t\t\ttempTranslateCfg.OutputLanguage = tempAppSetting.OutputLanguage\n\t\t\t\t\t\t\ttempTranslateCfg.OutputMainSubtitleInputLanguage = tempAppSetting.OutputMainSubtitleInputLanguage\n\n\t\t\t\t\t\t\tif tempTranslateCfg.TranslateSwitch {\n\t\t\t\t\t\t\t\t//校验选择的翻译引擎\n\t\t\t\t\t\t\t\tif tempAppSetting.CurrentTranslateEngineId == 0 {\n\t\t\t\t\t\t\t\t\tmw.NewErrormationTips(\"错误\" , \"你开启了翻译功能，请先新建/选择翻译引擎\")\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcurrentTranslateEngine , ok := Translate.GetTranslateEngineById(tempAppSetting.CurrentTranslateEngineId)\n\t\t\t\t\t\t\t\tif !ok {\n\t\t\t\t\t\t\t\t\tmw.NewErrormationTips(\"错误\" , \"你选择的翻译引擎不存在\")\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif currentTranslateEngine.Supplier == TRANSLATE_SUPPLIER_BAIDU {\n\t\t\t\t\t\t\t\t\ttempTranslateCfg.BaiduTranslate = currentTranslateEngine.BaiduEngine\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif currentTranslateEngine.Supplier == TRANSLATE_SUPPLIER_TENGXUNYUN {\n\t\t\t\t\t\t\t\t\ttempTranslateCfg.TengxunyunTranslate = currentTranslateEngine.TengxunyunEngine\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttempTranslateCfg.Supplier = currentTranslateEngine.Supplier //设置翻译供应商\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//加载配置\n\t\t\t\t\t\t\tvideosrt.InitAppConfig(ossData , currentEngine)\n\t\t\t\t\t\t\tvideosrt.InitTranslateConfig(tempTranslateCfg)\n\t\t\t\t\t\t\tvideosrt.InitFilterConfig(appFilter)\n\t\t\t\t\t\t\tvideosrt.SetSrtDir(appSetings.SrtFileDir)\n\t\t\t\t\t\t\tvideosrt.SetSoundTrack(appSetings.SoundTrack)\n\t\t\t\t\t\t\tvideosrt.SetMaxConcurrency(appSetings.MaxConcurrency)\n\t\t\t\t\t\t\tvideosrt.SetCloseAutoDeleteOssTempFile(appSetings.CloseAutoDeleteOssTempFile)\n\t\t\t\t\t\t\tvideosrt.SetCloseIntelligentBlockSwitch(appSetings.CloseIntelligentBlockSwitch)\n\n\t\t\t\t\t\t\t//设置输出文件\n\t\t\t\t\t\t\tvideosrt.SetOutputType(operateFrom.OutputType)\n\t\t\t\t\t\t\t//输出编码\n\t\t\t\t\t\t\tif appSetings.OutputEncode != 0 {\n\t\t\t\t\t\t\t\tvideosrt.SetOutputEncode(appSetings.OutputEncode)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmultitask.SetVideoSrt(videosrt)\n\t\t\t\t\t\t\t//设置队列\n\t\t\t\t\t\t\tmultitask.SetQueueFile(taskFiles.Files)\n\n\t\t\t\t\t\t\tvar finish = false\n\n\t\t\t\t\t\t\tstartBtn.SetEnabled(false)\n\t\t\t\t\t\t\tstartTranslateBtn.SetEnabled(false)\n\t\t\t\t\t\t\tstartBtn.SetText(\"任务运行中，请勿关闭软件窗口...\")\n\t\t\t\t\t\t\t//清除log\n\t\t\t\t\t\t\ttasklog.ClearLogText()\n\t\t\t\t\t\t\ttasklog.AppendLogText(\"任务开始... \\r\\n\")\n\n\t\t\t\t\t\t\t//运行\n\t\t\t\t\t\t\tmultitask.Run()\n\n\t\t\t\t\t\t\t//回调链式执行\n\t\t\t\t\t\t\tvideosrt.SetFailHandler(func(video string) {\n\t\t\t\t\t\t\t\t//运行下一任务\n\t\t\t\t\t\t\t\tmultitask.RunOver()\n\n\t\t\t\t\t\t\t\t//任务完成\n\t\t\t\t\t\t\t\tif ok := multitask.FinishTask(); ok && finish == false {\n\t\t\t\t\t\t\t\t\t//延迟结束\n\t\t\t\t\t\t\t\t\tgo func() {\n\t\t\t\t\t\t\t\t\t\ttime.Sleep(time.Second)\n\t\t\t\t\t\t\t\t\t\tfinish = true\n\t\t\t\t\t\t\t\t\t\tstartBtn.SetEnabled(true)\n\t\t\t\t\t\t\t\t\t\tstartTranslateBtn.SetEnabled(true)\n\t\t\t\t\t\t\t\t\t\tstartBtn.SetText(\"生成识别字幕\")\n\n\t\t\t\t\t\t\t\t\t\ttasklog.AppendLogText(\"\\r\\n\\r\\n任务完成！\")\n\n\t\t\t\t\t\t\t\t\t\t//清空临时目录\n\t\t\t\t\t\t\t\t\t\tvideosrt.ClearTempDir()\n\t\t\t\t\t\t\t\t\t}()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tvideosrt.SetSuccessHandler(func(video string) {\n\t\t\t\t\t\t\t\t//运行下一任务\n\t\t\t\t\t\t\t\tmultitask.RunOver()\n\n\t\t\t\t\t\t\t\t//任务完成\n\t\t\t\t\t\t\t\tif ok := multitask.FinishTask(); ok && finish == false {\n\t\t\t\t\t\t\t\t\t//延迟结束\n\t\t\t\t\t\t\t\t\tgo func() {\n\t\t\t\t\t\t\t\t\t\ttime.Sleep(time.Second)\n\t\t\t\t\t\t\t\t\t\tfinish = true\n\t\t\t\t\t\t\t\t\t\tstartBtn.SetEnabled(true)\n\t\t\t\t\t\t\t\t\t\tstartTranslateBtn.SetEnabled(true)\n\t\t\t\t\t\t\t\t\t\tstartBtn.SetText(\"生成识别字幕\")\n\n\t\t\t\t\t\t\t\t\t\ttasklog.AppendLogText(\"\\r\\n\\r\\n任务完成！\")\n\n\t\t\t\t\t\t\t\t\t\t//清空临时目录\n\t\t\t\t\t\t\t\t\t\tvideosrt.ClearTempDir()\n\t\t\t\t\t\t\t\t\t}()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\n\t\t\t\t\tPushButton{\n\t\t\t\t\t\tAssignTo: &startTranslateBtn,\n\t\t\t\t\t\tText: \"字幕翻译转换\",\n\t\t\t\t\t\tMinSize:Size{Height:50},\n\t\t\t\t\t\tOnClicked: func() {\n\t\t\t\t\t\t\t//待处理的文件\n\t\t\t\t\t\t\ttlens := len(taskFiles.Files)\n\t\t\t\t\t\t\tif tlens == 0 {\n\t\t\t\t\t\t\t\tmw.NewErrormationTips(\"错误\" , \"请先拖入需要处理的SRT字幕文件\")\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//校验文件列表\n\t\t\t\t\t\t\tif _,e := VaildateHandleFiles(taskFiles.Files , false , true); e!=nil {\n\t\t\t\t\t\t\t\tmw.NewErrormationTips(\"错误\" , e.Error())\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//设置随机种子\n\t\t\t\t\t\t\ttool.SetRandomSeed()\n\n\t\t\t\t\t\t\t//查询应用配置\n\t\t\t\t\t\t\ttempAppSetting := Setings.GetCacheAppSetingsData()\n\n\t\t\t\t\t\t\t//参数校验\n\t\t\t\t\t\t\tif !operateFrom.OutputType.SRT && !operateFrom.OutputType.LRC && !operateFrom.OutputType.TXT {\n\t\t\t\t\t\t\t\tmw.NewErrormationTips(\"错误\" , \"至少选择一种输出文件\")\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//翻译配置\n\t\t\t\t\t\t\ttempTranslateCfg := new(SrtTranslateStruct)\n\t\t\t\t\t\t\ttempTranslateCfg.TranslateSwitch = tempAppSetting.TranslateSwitch\n\t\t\t\t\t\t\ttempTranslateCfg.BilingualSubtitleSwitch = tempAppSetting.BilingualSubtitleSwitch\n\t\t\t\t\t\t\ttempTranslateCfg.InputLanguage = tempAppSetting.InputLanguage\n\t\t\t\t\t\t\ttempTranslateCfg.OutputLanguage = tempAppSetting.OutputLanguage\n\t\t\t\t\t\t\ttempTranslateCfg.OutputMainSubtitleInputLanguage = tempAppSetting.OutputMainSubtitleInputLanguage\n\n\t\t\t\t\t\t\tif tempTranslateCfg.TranslateSwitch {\n\t\t\t\t\t\t\t\t//校验选择的翻译引擎\n\t\t\t\t\t\t\t\tif tempAppSetting.CurrentTranslateEngineId == 0 {\n\t\t\t\t\t\t\t\t\tmw.NewErrormationTips(\"错误\" , \"你开启了翻译功能，请先新建/选择翻译引擎\")\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcurrentTranslateEngine , ok := Translate.GetTranslateEngineById(tempAppSetting.CurrentTranslateEngineId)\n\t\t\t\t\t\t\t\tif !ok {\n\t\t\t\t\t\t\t\t\tmw.NewErrormationTips(\"错误\" , \"你选择的翻译引擎不存在\")\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif currentTranslateEngine.Supplier == TRANSLATE_SUPPLIER_BAIDU {\n\t\t\t\t\t\t\t\t\ttempTranslateCfg.BaiduTranslate = currentTranslateEngine.BaiduEngine\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif currentTranslateEngine.Supplier == TRANSLATE_SUPPLIER_TENGXUNYUN {\n\t\t\t\t\t\t\t\t\ttempTranslateCfg.TengxunyunTranslate = currentTranslateEngine.TengxunyunEngine\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttempTranslateCfg.Supplier = currentTranslateEngine.Supplier //设置翻译供应商\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//加载配置\n\t\t\t\t\t\t\tsrtTranslateApp.InitTranslateConfig(tempTranslateCfg)\n\t\t\t\t\t\t\tsrtTranslateApp.InitFilterConfig(appFilter)\n\t\t\t\t\t\t\tsrtTranslateApp.SetSrtDir(appSetings.SrtFileDir)\n\t\t\t\t\t\t\tsrtTranslateApp.SetMaxConcurrency(appSetings.MaxConcurrency)\n\n\t\t\t\t\t\t\t//设置输出文件\n\t\t\t\t\t\t\tsrtTranslateApp.SetOutputType(operateFrom.OutputType)\n\t\t\t\t\t\t\t//输出编码\n\t\t\t\t\t\t\tif appSetings.OutputEncode != 0 {\n\t\t\t\t\t\t\t\tsrtTranslateApp.SetOutputEncode(appSetings.OutputEncode)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//队列设置\n\t\t\t\t\t\t\tsrtTranslateMultitask.SetSrtTranslateApp(srtTranslateApp)\n\t\t\t\t\t\t\tsrtTranslateMultitask.SetQueueFile(taskFiles.Files)\n\n\t\t\t\t\t\t\tvar finish = false\n\n\t\t\t\t\t\t\tstartBtn.SetEnabled(false)\n\t\t\t\t\t\t\tstartTranslateBtn.SetEnabled(false)\n\t\t\t\t\t\t\tstartTranslateBtn.SetText(\"任务运行中，请勿关闭软件窗口...\")\n\t\t\t\t\t\t\t//清除log\n\t\t\t\t\t\t\ttasklog.ClearLogText()\n\t\t\t\t\t\t\ttasklog.AppendLogText(\"任务开始... \\r\\n\")\n\n\t\t\t\t\t\t\t//运行\n\t\t\t\t\t\t\tsrtTranslateMultitask.Run()\n\n\t\t\t\t\t\t\t//注册回调链式执行\n\t\t\t\t\t\t\tsrtTranslateApp.SetFailHandler(func(file string) {\n\t\t\t\t\t\t\t\t//运行下一任务\n\t\t\t\t\t\t\t\tsrtTranslateMultitask.RunOver()\n\n\t\t\t\t\t\t\t\t//任务完成\n\t\t\t\t\t\t\t\tif ok := srtTranslateMultitask.FinishTask(); ok && finish == false {\n\t\t\t\t\t\t\t\t\t//延迟结束\n\t\t\t\t\t\t\t\t\tgo func() {\n\t\t\t\t\t\t\t\t\t\ttime.Sleep(time.Second)\n\t\t\t\t\t\t\t\t\t\tfinish = true\n\t\t\t\t\t\t\t\t\t\tstartBtn.SetEnabled(true)\n\t\t\t\t\t\t\t\t\t\tstartTranslateBtn.SetEnabled(true)\n\t\t\t\t\t\t\t\t\t\tstartTranslateBtn.SetText(\"字幕翻译转换\")\n\n\t\t\t\t\t\t\t\t\t\ttasklog.AppendLogText(\"\\r\\n\\r\\n任务完成！\")\n\t\t\t\t\t\t\t\t\t}()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tsrtTranslateApp.SetSuccessHandler(func(video string) {\n\t\t\t\t\t\t\t\t//运行下一任务\n\t\t\t\t\t\t\t\tsrtTranslateMultitask.RunOver()\n\n\t\t\t\t\t\t\t\t//任务完成\n\t\t\t\t\t\t\t\tif ok := srtTranslateMultitask.FinishTask(); ok && finish == false {\n\t\t\t\t\t\t\t\t\t//延迟结束\n\t\t\t\t\t\t\t\t\tgo func() {\n\t\t\t\t\t\t\t\t\t\ttime.Sleep(time.Second)\n\t\t\t\t\t\t\t\t\t\tfinish = true\n\t\t\t\t\t\t\t\t\t\tstartBtn.SetEnabled(true)\n\t\t\t\t\t\t\t\t\t\tstartTranslateBtn.SetEnabled(true)\n\t\t\t\t\t\t\t\t\t\tstartTranslateBtn.SetText(\"字幕翻译转换\")\n\n\t\t\t\t\t\t\t\t\t\ttasklog.AppendLogText(\"\\r\\n\\r\\n任务完成！\")\n\t\t\t\t\t\t\t\t\t}()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tOnDropFiles: func(files []string) {\n\t\t\t//检测文件列表\n\t\t\tresult , err := VaildateHandleFiles(files , true ,true)\n\t\t\tif err != nil {\n\t\t\t\tmw.NewErrormationTips(\"错误\" , err.Error())\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\ttaskFiles.Files = result\n\t\t\tdropFilesEdit.SetText(strings.Join(result, \"\\r\\n\"))\n\t\t},\n\t}.Create()); err != nil {\n\t\tlog.Fatal(err)\n\n\t\ttime.Sleep(1 * time.Second)\n\t}\n\n\t//更新\n\ttasklog.SetTextEdit(logText)\n\n\t//校验依赖库\n\tif e := ffmpeg.VailFfmpegLibrary(); e != nil {\n\t\tmw.NewErrormationTips(\"错误\" , \"请先下载并安装 ffmpeg 软件，才可以正常使用软件哦\")\n\t\ttool.OpenUrl(\"https://gitee.com/641453620/video-srt-windows\")\n\t\treturn\n\t}\n\n\t//尝试校验新版本\n\tif appSetings.CloseNewVersionMessage == false {\n\t\tgo func() {\n\t\t\tappV := new(AppVersion)\n\t\t\tif vtag, e := appV.GetVersion(); e == nil {\n\t\t\t\tif vtag != \"\" && tool.CompareVersion(vtag , APP_VERSION) == 1 {\n\t\t\t\t\t_ = appV.ShowVersionNotifyInfo(vtag , mw)\n\t\t\t\t}\n\t\t\t}\n\t\t}()\n\t}\n\n\tmw.Run()\n}\n"
        },
        {
          "name": "main.manifest",
          "type": "blob",
          "size": 0.8544921875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<assembly xmlns=\"urn:schemas-microsoft-com:asm.v1\" manifestVersion=\"1.0\">\n    <assemblyIdentity version=\"1.0.0.0\" processorArchitecture=\"*\" name=\"SomeFunkyNameHere\" type=\"win32\"/>\n    <dependency>\n        <dependentAssembly>\n            <assemblyIdentity type=\"win32\" name=\"Microsoft.Windows.Common-Controls\" version=\"6.0.0.0\" processorArchitecture=\"*\" publicKeyToken=\"6595b64144ccf1df\" language=\"*\"/>\n        </dependentAssembly>\n    </dependency>\n    <application xmlns=\"urn:schemas-microsoft-com:asm.v3\">\n        <windowsSettings>\n            <dpiAwareness xmlns=\"http://schemas.microsoft.com/SMI/2016/WindowsSettings\">PerMonitorV2, PerMonitor</dpiAwareness>\n            <dpiAware xmlns=\"http://schemas.microsoft.com/SMI/2005/WindowsSettings\">True</dpiAware>\n        </windowsSettings>\n    </application>\n</assembly>"
        },
        {
          "name": "rsrc.syso",
          "type": "blob",
          "size": 2.3251953125,
          "content": null
        }
      ]
    }
  ]
}