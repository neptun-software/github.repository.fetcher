{
  "metadata": {
    "timestamp": 1736566635474,
    "page": 192,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ledisdb/ledisdb",
      "stars": 4104,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0810546875,
          "content": "build\n*.pyc\n.DS_Store\nnohup.out\nbuild_config.mk\nvar*\n*.log\nbin\ncoverage.out\n.vscode"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.1162109375,
          "content": "language: go\ngo:\n  - 1.11.x\n  - 1.12.x\n\nscript:\n  - make vet\n  - make test\n  - bash <(curl -s https://codecov.io/bash)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.8359375,
          "content": "# Contribution Guidelines\n\n## Table of Contents\n\n- [Contribution Guidelines](#contribution-guidelines)\n  - [Introduction](#introduction)\n  - [Bug reports](#bug-reports)\n  - [Discuss your design](#discuss-your-design)\n  - [Testing redux](#testing-redux)\n  - [Vendoring](#vendoring)\n  - [Building Ledisdb](#building-ledisdb)\n  - [Code review](#code-review)\n  - [Developer Certificate of Origin (DCO)](#developer-certificate-of-origin-dco)\n  - [Copyright](#copyright)\n\n## Introduction\n\nThis document explains how to contribute changes to the Ledisdb project.\n\n## Bug reports\n\nPlease search the issues on the issue tracker with a variety of keywords\nto ensure your bug is not already reported.\n\nIf unique, [open an issue](https://github.com/ledisdb/ledisdb/issues/new)\nand answer the questions so we can understand and reproduce the\nproblematic behavior.\n\nTo show us that the issue you are having is in ledisdb itself, please\nwrite clear, concise instructions so we can reproduce the behavior—\neven if it seems obvious. The more detailed and specific you are,\nthe faster we can fix the issue. Check out [How to Report Bugs\nEffectively](http://www.chiark.greenend.org.uk/~sgtatham/bugs.html).\n\nPlease be kind, remember that Gitea comes at no cost to you, and you're\ngetting free help.\n\n## Discuss your design\n\nThe project welcomes submissions. If you want to change or add something,\nplease let everyone know what you're working on—[file an issue](https://github.com/go-gitea/gitea/issues/new)!\nSignificant changes must go through the change proposal process\nbefore they can be accepted. To create a proposal, file an issue with\nyour proposed changes documented, and make sure to note in the title\nof the issue that it is a proposal.\n\nThis process gives everyone a chance to validate the design, helps\nprevent duplication of effort, and ensures that the idea fits inside\nthe goals for the project and tools. It also checks that the design is\nsound before code is written; the code review tool is not the place for\nhigh-level discussions.\n\n## Testing redux\n\nBefore submitting a pull request, run all the tests for the whole tree\nto make sure your changes don't cause regression elsewhere.\n\nHere's how to run the test suite:\n\n- `make vet`\n- `make test`\n\n## Vendoring\n\nWe keep a cached copy of dependencies within the `vendor/` directory,\nmanaging updates via [Modules](https://golang.org/cmd/go/#hdr-Module_maintenance).\n\nPull requests should only include `vendor/` updates if they are part of\nthe same change, be it a bugfix or a feature addition.\n\nThe `vendor/` update needs to be justified as part of the PR description,\nand must be verified by the reviewers and/or merger to always reference\nan existing upstream commit.\n\nYou can find more information on how to get started with it on the [Modules Wiki](https://github.com/golang/go/wiki/Modules).\n\n## Building Ledisdb\n\n```\nmake build\n```\n\n## Code review\n\nChanges to Ledisdb must be reviewed before they are accepted—no matter who\nmakes the change, even if they are an owner or a maintainer. We use GitHub's\npull request workflow to do that.\n\nPlease try to make your pull request easy to review for us. And, please read\nthe *[How to get faster PR reviews](https://github.com/kubernetes/community/blob/261cb0fd089b64002c91e8eddceebf032462ccd6/contributors/guide/pull-requests.md#best-practices-for-faster-reviews)* guide;\nit has lots of useful tips for any project you may want to contribute.\nSome of the key points:\n\n* Make small pull requests. The smaller, the faster to review and the\n  more likely it will be merged soon.\n* Don't make changes unrelated to your PR. Maybe there are typos on\n  some comments, maybe refactoring would be welcome on a function... but\n  if that is not related to your PR, please make *another* PR for that.\n* Split big pull requests into multiple small ones. An incremental change\n  will be faster to review than a huge PR.\n\n## Developer Certificate of Origin (DCO)\n\nWe consider the act of contributing to the code by submitting a Pull\nRequest as the \"Sign off\" or agreement to the certifications and terms\nof the [DCO](DCO) and [MIT license](LICENSE). No further action is required.\nAdditionally you could add a line at the end of your commit message.\n\n```\nSigned-off-by: Joe Smith <joe.smith@email.com>\n```\n\nIf you set your `user.name` and `user.email` git configs, you can add the\nline to the end of your commit automatically with `git commit -s`.\n\nWe assume in good faith that the information you provide is legally binding.\n\n## Copyright\n\nCode that you contribute should use the standard copyright header:\n\n```\n// Copyright 2020 The Ledisdb Authors. All rights reserved.\n// Use of this source code is governed by a MIT-style\n// license that can be found in the LICENSE file.\n```\n\nFiles in the repository contain copyright from the year they are added\nto the year they are last changed. If the copyright author is changed,\njust paste the header below the old one.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 3.912109375,
          "content": "# use builder image to compile ledisdb (without GCO)\nFROM golang:1.9-stretch as builder\n\nENV LEDISDB_VERSION 0.6\n\nENV LEVELDB_VERSION 47cb9e2a211e1d7157078ba7bab536beb29e56dc\nENV ROCKSDB_VERSION 5.8.6\nENV GOSU_VERSION 1.10\n\n\n\nWORKDIR /build\n\nRUN apt-get update && \\\n    apt-get install -y \\\n    ca-certificates \\\n    wget \\\n    gcc-6 \\\n    g++-6 \\\n    build-essential \\\n    libsnappy1v5 \\\n    libsnappy-dev \\\n    libgflags-dev\n\n# get LedisDB\nRUN wget -O ledisdb-src.tar.gz \"https://github.com/ledisdb/ledisdb/archive/v$LEDISDB_VERSION.tar.gz\" && \\\n    tar -zxf ledisdb-src.tar.gz && \\\n    mkdir -p /go/src/github.com/ledisdb/ && \\\n    mv ledisdb-$LEDISDB_VERSION /go/src/github.com/ledisdb/ledisdb\n\n# build LevelDB\nRUN wget -O leveldb-src.tar.gz \"https://github.com/google/leveldb/archive/$LEVELDB_VERSION.tar.gz\" && \\\n    tar -zxf leveldb-src.tar.gz && \\\n    cd leveldb-$LEVELDB_VERSION && \\\n    patch -p0 < /go/src/github.com/ledisdb/ledisdb/tools/leveldb.patch && \\\n    mkdir -p out-shared/db && \\\n    make -j \"$(nproc)\" && \\\n    mkdir /build/lib && \\\n    mkdir -p /build/include/leveldb && \\\n    cp out-static/lib* /build/lib/ && \\\n    install include/leveldb/*.h /build/include/leveldb\n\n\n# build RocksDB\nRUN wget -O rocksdb-src.tar.gz \"https://github.com/facebook/rocksdb/archive/v$ROCKSDB_VERSION.tar.gz\" && \\\n    tar -zxf rocksdb-src.tar.gz && \\\n    cd rocksdb-$ROCKSDB_VERSION && \\\n    make static_lib -j \"$(nproc)\" && \\\n    mkdir -p /build/include/rocksdb && \\\n    cp librocksdb.a /build/lib/ && \\\n    install include/rocksdb/*.h /build/include/rocksdb\n\nENV CGO_CFLAGS \"-I/build/include\"\nENV CGO_CXXFLAGS \"-I/build/include\"\nENV CGO_LDFLAGS \"-L/build/lib -lsnappy\"\n\n#build LedisDB\nRUN export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/build/lib:/usr/lib && \\\n    export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:/build/lib:/usr/lib && \\\n    mkdir -p /build/bin && \\\n    rm -rf /build/bin/* && \\\n    cd /go/src/github.com/ledisdb/ledisdb && \\\n    GOGC=off go build -i -o /build/bin/ledis-server -tags \"snappy leveldb rocksdb\" cmd/ledis-server/* && \\\n    GOGC=off go build -i -o /build/bin/ledis-cli -tags \"snappy leveldb rocksdb\" cmd/ledis-cli/* && \\\n    GOGC=off go build -i -o /build/bin/ledis-benchmark -tags \"snappy leveldb rocksdb\" cmd/ledis-benchmark/* && \\\n    GOGC=off go build -i -o /build/bin/ledis-dump -tags \"snappy leveldb rocksdb\" cmd/ledis-dump/* && \\\n    GOGC=off go build -i -o /build/bin/ledis-load -tags \"snappy leveldb rocksdb\" cmd/ledis-load/* && \\\n    GOGC=off go build -i -o /build/bin/ledis-repair -tags \"snappy leveldb rocksdb\" cmd/ledis-repair/*\n\n# grab gosu for easy step-down from root\n# https://github.com/tianon/gosu/releases\nRUN set -ex; \\\n    dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \\\n    wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \\\n    wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \\\n    export GNUPGHOME=\"$(mktemp -d)\"; \\\n    gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \\\n    gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\n    chmod +x /usr/local/bin/gosu\n\n\n# done building - now create a tiny image with a statically linked Ledis\nFROM debian:stretch-slim\n\nCOPY --from=builder /build/lib/* /usr/lib/\nCOPY --from=builder /build/bin/ledis-* /bin/\nCOPY --from=builder /go/src/github.com/ledisdb/ledisdb/config/config-docker.toml /config.toml\nCOPY --from=builder /usr/local/bin/gosu /bin/\n\nRUN groupadd -r ledis && \\\n    useradd -r -g ledis ledis && \\\n    mkdir /datastore && \\\n    chown ledis:ledis /datastore && \\\n    chmod 444 /config.toml && \\\n    gosu nobody true\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends libsnappy1v5 && \\\n    rm -rf /var/lib/apt/lists/*\n\nVOLUME /datastore\n\nADD entrypoint.sh /bin/entrypoint.sh\n\nENTRYPOINT [\"entrypoint.sh\"]\n\nEXPOSE 6380 11181\n\nCMD [\"ledis-server\", \"--config=/config.toml\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05078125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014 siddontang\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.90625,
          "content": "INSTALL_PATH ?= $(CURDIR)\n\n$(shell ./tools/build_config.sh build_config.mk $INSTALL_PATH)\n\ninclude build_config.mk\n\nexport CGO_CFLAGS\nexport CGO_CXXFLAGS\nexport CGO_LDFLAGS\nexport LD_LIBRARY_PATH\nexport DYLD_LIBRARY_PATH\nexport GO_BUILD_TAGS\nexport GO111MODULE=on\n\nPACKAGES ?= $(shell GO111MODULE=on go list -mod=vendor ./... | grep -v /vendor/)\nDIST := bin\nVERSION ?= $(shell git describe --tags --always | sed 's/-/+/' | sed 's/^v//')\nLDFLAGS := $(LDFLAGS) -X \"main.version=$(VERSION)\" -X \"main.buildTags=$(GO_BUILD_TAGS)\"\n\nall: build\n\nbuild: build-ledis\n\nbuild-ledis:\n\tgo build -mod=vendor -o $(DIST)/ledis -tags '$(GO_BUILD_TAGS)' -ldflags '-s -w $(LDFLAGS)' cmd/ledis/*.go\n\nbuild-commands:\n\tgo build -mod=vendor -o $(DIST)/ledis-server -tags '$(GO_BUILD_TAGS)' -ldflags '-s -w $(LDFLAGS)' cmd/ledis-server/*.go\n\tgo build -mod=vendor -o $(DIST)/ledis-cli -tags '$(GO_BUILD_TAGS)' -ldflags '-s -w $(LDFLAGS)' cmd/ledis-cli/*.go\n\tgo build -mod=vendor -o $(DIST)/ledis-benchmark -tags '$(GO_BUILD_TAGS)' -ldflags '-s -w $(LDFLAGS)' cmd/ledis-benchmark/*.go\n\tgo build -mod=vendor -o $(DIST)/ledis-dump -tags '$(GO_BUILD_TAGS)' -ldflags '-s -w $(LDFLAGS)' cmd/ledis-dump/*.go\n\tgo build -mod=vendor -o $(DIST)/ledis-load -tags '$(GO_BUILD_TAGS)' -ldflags '-s -w $(LDFLAGS)' cmd/ledis-load/*.go\n\tgo build -mod=vendor -o $(DIST)/ledis-repair -tags '$(GO_BUILD_TAGS)' -ldflags '-s -w $(LDFLAGS)' cmd/ledis-repair/*.go\n\n.PHONY: lint\nlint:\n\t@hash golint > /dev/null 2>&1; if [ $$? -ne 0 ]; then \\\n\t\tcd /tmp && GO111MODULE=on go get -u -v golang.org/x/lint/golint; \\\n\tfi\n\tgolint $(PACKAGES)\n\nvet:\n\tgo vet -mod=vendor -tags '$(GO_BUILD_TAGS)' ./...\n\ntest:\n\tgo test -mod=vendor --race -tags '$(GO_BUILD_TAGS)' -cover -coverprofile coverage.out -timeout 10m $(PACKAGES)\n\nclean:\n\tgo clean -i $(PACKAGES)\n\nfmt:\n\tgofmt -w -s  . 2>&1 | grep -vE 'vendor' | awk '{print} END{if(NR>0) {exit 1}}'\n\nsync_vendor:\n\tgo mod tidy -v && go mod vendor\n\nupdate_vendor: sync_vendor"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.3828125,
          "content": "# LedisDB \n\n[![Build Status](https://travis-ci.org/ledisdb/ledisdb.svg?branch=develop)](https://travis-ci.org/ledisdb/ledisdb) [![codecov](https://codecov.io/gh/ledisdb/ledisdb/branch/master/graph/badge.svg)](https://codecov.io/gh/ledisdb/ledisdb) [![goreportcard](https://goreportcard.com/badge/github.com/ledisdb/ledisdb)](https://goreportcard.com/report/github.com/ledisdb/ledisdb)\n\nLedisdb is a high-performance NoSQL database library and server written in [Go](http://golang.org). It's similar to Redis but store data in disk. It supports many data structures including kv, list, hash, zset, set.\n\nLedisDB now supports multiple different databases as backends.\n\n## Features\n\n+ Rich data structure: KV, List, Hash, ZSet, Set.\n+ Data storage is not limited by RAM.\n+ Various backends supported: LevelDB, goleveldb, RocksDB, RAM.\n+ Supports Lua scripting.\n+ Supports expiration and TTL.\n+ Can be managed via redis-cli.\n+ Easy to embed in your own Go application. \n+ HTTP API support, JSON/BSON/msgpack output.\n+ Replication to guarantee data safety.\n+ Supplies tools to load, dump, and repair database. \n+ Supports cluster, use [xcodis](https://github.com/ledisdb/xcodis).\n+ Authentication (though, not via http).\n+ Repair integrated: You can use `ledis repair` to repair broken databases and `ledis repair-ttl` to repair a very serious bug for key expiration and TTL if you upgraded from v0.4.\n\n## Build from source\n\nCreate a workspace and checkout ledisdb source\n\n```shell\ngit clone git@github.com:ledisdb/ledisdb.git\ncd ledisdb\n\n#set build and run environment \nsource dev.sh\n\nmake\nmake test\n```\n\nThen you will find all the binary build on `./bin` directory.\n\n## LevelDB support\n\n+ Install leveldb and snappy.\n\n    LedisDB supplies a simple script to install leveldb and snappy: \n\n        sudo sh tools/build_leveldb.sh\n\n    It will install leveldb at /usr/local/leveldb and snappy at /usr/local/snappy by default.\n\n    LedisDB uses the modified LevelDB for better performance. [Details.](https://github.com/ledisdb/ledisdb/wiki/leveldb-source-modification)\n\n    You can easily use other LevelDB versions (like Hyper LevelDB or Basho LevelDB) instead, as long as the header files are in `include/leveldb`, not `include/hyperleveldb` or any other location.\n\n+ Set `LEVELDB_DIR` and `SNAPPY_DIR` to the actual install path in dev.sh.\n+ `make clean && make` \n\n## RocksDB support \n\n+ [Install rocksdb(5.1+)](https://github.com/facebook/rocksdb/blob/master/INSTALL.md)(`make shared_lib`) and snappy first.\n\n    LedisDB has not yet supplied a simple script to install.\n\n+ Set `ROCKSDB_DIR` and `SNAPPY_DIR` to the actual install path in `dev.sh`.\n+ `make clean && make` \n\n\nIf the RocksDB API changes, LedisDB may not build successfully. LedisDB currently supports RocksDB version 5.1 or later.\n\n## Choose store database\n\nLedisDB now supports goleveldb, leveldb, rocksdb, and RAM. It will use goleveldb by default. \n\nChoosing a store database to use is very simple.\n\n+ Set in server config file\n\n    db_name = \"leveldb\"\n\n+ Set in command flag\n\n    ledis -config=/etc/ledis.conf -db_name=leveldb\n\nFlag command set will overwrite config setting.\n\n## Lua support\n\nLua is supported using [gopher-lua](https://github.com/yuin/gopher-lua), a Lua VM, completely written in Go.\n\n## Configuration\n\nLedisDB uses [toml](https://github.com/toml-lang/toml) as the configuration format. The basic configuration ```./etc/ledis.conf``` in LedisDB source may help you.\n\nIf you don't use a configuration, LedisDB will use the default for you.\n\n## Server Example\n\n```shell\n//set run environment if not\nsource dev.sh\n\n./bin/ledis -config=/etc/ledis.conf\n\n//another shell\n./bin/ledis cli -p 6380\n\nledis 127.0.0.1:6380> set a 1\nOK\nledis 127.0.0.1:6380> get a\n\"1\"\n\n//use curl\ncurl http://127.0.0.1:11181/SET/hello/world\n→ {\"SET\":[true,\"OK\"]}\n\ncurl http://127.0.0.1:11181/0/GET/hello?type=json\n→ {\"GET\":\"world\"}\n```\n\n\n## Package Example\n\n```go\nimport (\n    lediscfg \"github.com/ledisdb/ledisdb/config\"\n    \"github.com/ledisdb/ledisdb/ledis\"\n)\n\n# Use Ledis's default config\ncfg := lediscfg.NewConfigDefault()\nl, _ := ledis.Open(cfg)\ndb, _ := l.Select(0)\n\ndb.Set(key, value)\n\ndb.Get(key)\n```\n\n## Replication Example\n\nSet slaveof in config or dynamiclly\n\n```shell\nledis cli -p 6381 \n\nledis 127.0.0.1:6381> slaveof 127.0.0.1 6380\nOK\n```\n\n## Cluster support\n\nLedisDB uses a proxy named [xcodis](https://github.com/ledisdb/xcodis) to support cluster.\n\n## CONTRIBUTING\n\nSee [CONTRIBUTING.md] .\n\n## Benchmark\n\nSee [benchmark](https://github.com/ledisdb/ledisdb/wiki/Benchmark) for more.\n\n## Todo\n\nSee [Issues todo](https://github.com/ledisdb/ledisdb/issues?labels=todo&page=1&state=open)\n\n## Client\n\nSee [Clients](https://github.com/ledisdb/ledisdb/wiki/Clients) to find or contribute LedisDB client.\n\n## Links\n\n+ [Official Website](https://ledisdb.io)\n+ [GoDoc](https://godoc.org/github.com/ledisdb/ledisdb)\n+ [Server Commands](https://github.com/ledisdb/ledisdb/wiki/Commands)\n\n## Caveat\n\n+ Changing the backend database at runtime is very dangerous. Data validation is not guaranteed if this is done.\n\n## Requirement\n\n+ Go version >= 1.11\n\n## Related Repos\n\n+ [pika](https://github.com/Qihoo360/pika)\n\n## Donate\n\nIf you like the project and want to buy me a cola, you can through: \n\n|PayPal|微信|\n|------|---|\n|[![](https://www.paypalobjects.com/webstatic/paypalme/images/pp_logo_small.png)](https://paypal.me/siddontang)|[![](https://github.com/siddontang/blog/blob/master/donate/weixin.png)|\n\n## Feedback\n\n+ Gmail: siddontang@gmail.com\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev.sh",
          "type": "blob",
          "size": 2.3515625,
          "content": "#!/bin/bash\n\nexport LEDISTOP=$(pwd)\nexport LEDISROOT=\"${LEDISROOT:-${LEDISTOP/\\/src\\/github.com\\/ledisdb\\/ledisdb/}}\"\n# LEDISTOP sanity check\nif [[ \"$LEDISTOP\" == \"${LEDISTOP/\\/src\\/github.com\\/ledisdb\\/ledisdb/}\" ]]; then\n    echo \"WARNING: LEDISTOP($LEDISTOP) does not contain src/github.com/ledisdb/ledisdb\"\n    false\nfi\n\n#default snappy and leveldb install path\n#you may change yourself\nHOMEBREW_PREFIX=$(type brew >/dev/null 2>&1 && brew --prefix 2>/dev/null)\nif [[ ! -z \"$HOMEBREW_PREFIX\" ]]; then\n  SNAPPY_DIR=$HOMEBREW_PREFIX/opt/snappy\n  LEVELDB_DIR=$HOMEBREW_PREFIX/opt/leveldb\n  ROCKSDB_DIR=$HOMEBREW_PREFIX/opt/rocksdb\nelse\n  SNAPPY_DIR=/usr/local/snappy\n  LEVELDB_DIR=/usr/local/leveldb\n  ROCKSDB_DIR=/usr/local/rocksdb\nfi\n\nfunction add_path()\n{\n  # $1 path variable\n  # $2 path to add\n  if [ -d \"$2\" ] && [[ \":$1:\" != *\":$2:\"* ]]; then\n    echo \"$1:$2\"\n  else\n    echo \"$1\"\n  fi\n}\n\nexport GOPATH=$(add_path $GOPATH $LEDISROOT)\n\nGO_BUILD_TAGS=\nCGO_CFLAGS=\nCGO_CXXFLAGS=\nCGO_LDFLAGS=\n\n# check dependent libray, now we only check simply, maybe later add proper checking way.\n\n# check snappy \nif [ -f $SNAPPY_DIR/include/snappy.h ]; then\n    CGO_CFLAGS=\"$CGO_CFLAGS -I$SNAPPY_DIR/include\"\n    CGO_CXXFLAGS=\"$CGO_CXXFLAGS -I$SNAPPY_DIR/include\"\n    CGO_LDFLAGS=\"$CGO_LDFLAGS -L$SNAPPY_DIR/lib -lsnappy\"\n    LD_LIBRARY_PATH=$(add_path $LD_LIBRARY_PATH $SNAPPY_DIR/lib)\n    DYLD_LIBRARY_PATH=$(add_path $DYLD_LIBRARY_PATH $SNAPPY_DIR/lib)\nfi\n\n# check leveldb\nif [ -f $LEVELDB_DIR/include/leveldb/c.h ]; then\n    CGO_CFLAGS=\"$CGO_CFLAGS -I$LEVELDB_DIR/include\"\n    CGO_CXXFLAGS=\"$CGO_CXXFLAGS -I$LEVELDB_DIR/include\"\n    CGO_LDFLAGS=\"$CGO_LDFLAGS -L$LEVELDB_DIR/lib -lleveldb\"\n    LD_LIBRARY_PATH=$(add_path $LD_LIBRARY_PATH $LEVELDB_DIR/lib)\n    DYLD_LIBRARY_PATH=$(add_path $DYLD_LIBRARY_PATH $LEVELDB_DIR/lib)\n    GO_BUILD_TAGS=\"$GO_BUILD_TAGS leveldb\"\nfi\n\n# check rocksdb\nif [ -f $ROCKSDB_DIR/include/rocksdb/c.h ]; then\n    CGO_CFLAGS=\"$CGO_CFLAGS -I$ROCKSDB_DIR/include\"\n    CGO_CXXFLAGS=\"$CGO_CXXFLAGS -I$ROCKSDB_DIR/include\"\n    CGO_LDFLAGS=\"$CGO_LDFLAGS -L$ROCKSDB_DIR/lib -lrocksdb\"\n    LD_LIBRARY_PATH=$(add_path $LD_LIBRARY_PATH $ROCKSDB_DIR/lib)\n    DYLD_LIBRARY_PATH=$(add_path $DYLD_LIBRARY_PATH $ROCKSDB_DIR/lib)\n    GO_BUILD_TAGS=\"$GO_BUILD_TAGS rocksdb\"\nfi\n\nexport CGO_CFLAGS\nexport CGO_CXXFLAGS\nexport CGO_LDFLAGS\nexport LD_LIBRARY_PATH\nexport DYLD_LIBRARY_PATH\nexport GO_BUILD_TAGS\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "entrypoint.sh",
          "type": "blob",
          "size": 0.3828125,
          "content": "#!/bin/sh\nset -e\n\n# first arg is `-f` or `--some-option`\n# or first arg is `something.toml`\nif [ \"${1#-}\" != \"$1\" ] || [ \"${1%.toml}\" != \"$1\" ]; then\n\tset -- /bin/ledis-server \"$@\"\nfi\n\n# allow the container to be started with `--user`\nif [ \"$1\" = 'ledis-server' -a \"$(id -u)\" = '0' ]; then\n\tchown -R ledis /datastore\n    chown ledis:ledis /bin/ledis-*\n\texec gosu ledis \"$0\" \"$@\"\nfi\n\nexec \"$@\""
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.40234375,
          "content": "module github.com/ledisdb/ledisdb\n\ngo 1.12\n\nrequire (\n\tgithub.com/BurntSushi/toml v0.3.1 // indirect\n\tgithub.com/alicebob/gopher-json v0.0.0-20180125190556-5a6b3ba71ee6 // indirect\n\tgithub.com/alicebob/miniredis v2.5.0+incompatible // indirect\n\tgithub.com/cupcake/rdb v0.0.0-20161107195141-43ba34106c76 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/edsrzf/mmap-go v0.0.0-20170320065105-0bce6a688712\n\tgithub.com/glendc/gopher-json v0.0.0-20170414221815-dc4743023d0c\n\tgithub.com/golang/snappy v0.0.0-20170215233205-553a64147049 // indirect\n\tgithub.com/gomodule/redigo v2.0.0+incompatible // indirect\n\tgithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e // indirect\n\tgithub.com/onsi/ginkgo v1.12.0 // indirect\n\tgithub.com/pelletier/go-toml v1.0.1\n\tgithub.com/peterh/liner v1.0.1-0.20171122030339-3681c2a91233\n\tgithub.com/siddontang/go v0.0.0-20170517070808-cb568a3e5cc0\n\tgithub.com/siddontang/goredis v0.0.0-20150324035039-760763f78400\n\tgithub.com/siddontang/rdb v0.0.0-20150307021120-fc89ed2e418d\n\tgithub.com/syndtr/goleveldb v0.0.0-20160425020131-cfa635847112\n\tgithub.com/ugorji/go v0.0.0-20171122102828-84cb69a8af83\n\tgithub.com/yuin/gopher-lua v0.0.0-20171031051903-609c9cd26973\n\tgolang.org/x/net v0.0.0-20180906233101-161cd47e91fd\n\tgopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f // indirect\n\tgopkg.in/mgo.v2 v2.0.0-20190816093944-a6b53ec6cb22 // indirect\n\tgopkg.in/yaml.v2 v2.2.8 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 6.853515625,
          "content": "github.com/BurntSushi/toml v0.3.1 h1:WXkYYl6Yr3qBf1K79EBnL4mak0OimBfB0XUf9Vl28OQ=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/alicebob/gopher-json v0.0.0-20180125190556-5a6b3ba71ee6 h1:45bxf7AZMwWcqkLzDAQugVEwedisr5nRJ1r+7LYnv0U=\ngithub.com/alicebob/gopher-json v0.0.0-20180125190556-5a6b3ba71ee6/go.mod h1:SGnFV6hVsYE877CKEZ6tDNTjaSXYUk6QqoIK6PrAtcc=\ngithub.com/alicebob/miniredis v2.5.0+incompatible h1:yBHoLpsyjupjz3NL3MhKMVkR41j82Yjf3KFv7ApYzUI=\ngithub.com/alicebob/miniredis v2.5.0+incompatible/go.mod h1:8HZjEj4yU0dwhYHky+DxYx+6BMjkBbe5ONFIF1MXffk=\ngithub.com/cupcake/rdb v0.0.0-20161107195141-43ba34106c76 h1:Lgdd/Qp96Qj8jqLpq2cI1I1X7BJnu06efS+XkhRoLUQ=\ngithub.com/cupcake/rdb v0.0.0-20161107195141-43ba34106c76/go.mod h1:vYwsqCOLxGiisLwp9rITslkFNpZD5rz43tf41QFkTWY=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/edsrzf/mmap-go v0.0.0-20170320065105-0bce6a688712 h1:aaQcKT9WumO6JEJcRyTqFVq4XUZiUcKR2/GI31TOcz8=\ngithub.com/edsrzf/mmap-go v0.0.0-20170320065105-0bce6a688712/go.mod h1:YO35OhQPt3KJa3ryjFM5Bs14WD66h8eGKpfaBNrHW5M=\ngithub.com/fsnotify/fsnotify v1.4.7 h1:IXs+QLmnXW2CcXuY+8Mzv/fWEsPGWxqefPtCP5CnV9I=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/glendc/gopher-json v0.0.0-20170414221815-dc4743023d0c h1:iRTj5SRYwbvsygdwVp+y9kZT145Y1s6xOPpeOEIeGc4=\ngithub.com/glendc/gopher-json v0.0.0-20170414221815-dc4743023d0c/go.mod h1:Gja1A+xZ9BoviGJNA2E9vFkPjjsl+CoJxSXiQM1UXtw=\ngithub.com/golang/protobuf v1.2.0 h1:P3YflyNX/ehuJFLhxviNdFxQPkGK5cDcApsge1SqnvM=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/snappy v0.0.0-20170215233205-553a64147049 h1:K9KHZbXKpGydfDN0aZrsoHpLJlZsBrGMFWbgLDGnPZk=\ngithub.com/golang/snappy v0.0.0-20170215233205-553a64147049/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/gomodule/redigo v2.0.0+incompatible h1:K/R+8tc58AaqLkqG2Ol3Qk+DR/TlNuhuh457pBFPtt0=\ngithub.com/gomodule/redigo v2.0.0+incompatible/go.mod h1:B4C85qUVwatsJoIUNIfCRsp7qO0iAmpGFZ4EELWSbC4=\ngithub.com/hpcloud/tail v1.0.0 h1:nfCOvKYfkgYP8hkirhJocXT2+zOD8yUNjXaWfTlyFKI=\ngithub.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e h1:fD57ERR4JtEqsWbfPhv4DMiApHyliiK5xCTNVSPiaAs=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=\ngithub.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.12.0 h1:Iw5WCbBcaAAd0fpRb1c9r5YCylv4XDoCSigm1zLevwU=\ngithub.com/onsi/ginkgo v1.12.0/go.mod h1:oUhWkIvk5aDxtKvDDuw8gItl8pKl42LzjC9KZE0HfGg=\ngithub.com/onsi/gomega v1.7.1 h1:K0jcRCwNQM3vFGh1ppMtDh/+7ApJrjldlX8fA0jDTLQ=\ngithub.com/onsi/gomega v1.7.1/go.mod h1:XdKZgCCFLUoM/7CFJVPcG8C1xQ1AJ0vpAezJrB7JYyY=\ngithub.com/pelletier/go-toml v1.0.1 h1:0nx4vKBl23+hEaCOV1mFhKS9vhhBtFYWC7rQY0vJAyE=\ngithub.com/pelletier/go-toml v1.0.1/go.mod h1:5z9KED0ma1S8pY6P1sdut58dfprrGBbd/94hg7ilaic=\ngithub.com/peterh/liner v1.0.1-0.20171122030339-3681c2a91233 h1:jmJndGFBPjNWW+MAYarU/Nl8QrQVzbw4B/AYE0LzETo=\ngithub.com/peterh/liner v1.0.1-0.20171122030339-3681c2a91233/go.mod h1:xIteQHvHuaLYG9IFj6mSxM0fCKrs34IrEQUhOYuGPHc=\ngithub.com/siddontang/go v0.0.0-20170517070808-cb568a3e5cc0 h1:QIF48X1cihydXibm+4wfAc0r/qyPyuFiPFRNphdMpEE=\ngithub.com/siddontang/go v0.0.0-20170517070808-cb568a3e5cc0/go.mod h1:3yhqj7WBBfRhbBlzyOC3gUxftwsU0u8gqevxwIHQpMw=\ngithub.com/siddontang/goredis v0.0.0-20150324035039-760763f78400 h1:091wFNQB3PXcL5+me0joH7EiyqQaI0wGMpEjVCkK04U=\ngithub.com/siddontang/goredis v0.0.0-20150324035039-760763f78400/go.mod h1:DDcKzU3qCuvj/tPnimWSsZZzvk9qvkvrIL5naVBPh5s=\ngithub.com/siddontang/rdb v0.0.0-20150307021120-fc89ed2e418d h1:NVwnfyR3rENtlz62bcrkXME3INVUa4lcdGt+opvxExs=\ngithub.com/siddontang/rdb v0.0.0-20150307021120-fc89ed2e418d/go.mod h1:AMEsy7v5z92TR1JKMkLLoaOQk++LVnOKL3ScbJ8GNGA=\ngithub.com/syndtr/goleveldb v0.0.0-20160425020131-cfa635847112 h1:NBrpnvz0pDPf3+HXZ1C9GcJd1DTpWDLcLWZhNq6uP7o=\ngithub.com/syndtr/goleveldb v0.0.0-20160425020131-cfa635847112/go.mod h1:Z4AUp2Km+PwemOoO/VB5AOx9XSsIItzFjoJlOSiYmn0=\ngithub.com/ugorji/go v0.0.0-20171122102828-84cb69a8af83 h1:9AUN7+NK4IV+A11igqjQM5i8obiOAQo4SXgjaxe+orI=\ngithub.com/ugorji/go v0.0.0-20171122102828-84cb69a8af83/go.mod h1:hnLbHMwcvSihnDhEfx2/BzKp2xb0Y+ErdfYcrs9tkJQ=\ngithub.com/yuin/gopher-lua v0.0.0-20171031051903-609c9cd26973 h1:iCnkJ/qjKZGdZnlcj1N55AxPDan814kpc3s1cDpQKd8=\ngithub.com/yuin/gopher-lua v0.0.0-20171031051903-609c9cd26973/go.mod h1:aEV29XrmTYFr3CiRxZeGHpkvbwq+prZduBqMaascyCU=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd h1:nTDtHvHSdCn1m6ITfMRqtOd/9+7a3s8RBNOZ3eYZzJA=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f h1:wMNYb4v58l5UBM7MYRLPG6ZhfOqbKu7X5eyFl8ZhKvA=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20191120155948-bd437916bb0e h1:N7DeIrjYszNmSW409R3frPPwglRwMkXSBzwVbkOjLLA=\ngolang.org/x/sys v0.0.0-20191120155948-bd437916bb0e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/text v0.3.0 h1:g61tztE5qeGQ89tm6NTjjM9VPIm088od1l6aSorWRWg=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f h1:BLraFXnmrev5lT+xlilqcH8XK9/i0At2xKjWk4p6zsU=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/fsnotify.v1 v1.4.7 h1:xOHLXZwVvI9hhs+cLKq5+I5onOuwQLhQwiu63xxlHs4=\ngopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=\ngopkg.in/mgo.v2 v2.0.0-20190816093944-a6b53ec6cb22 h1:VpOs+IwYnYBaFnrNAeB8UUWtL3vEUnzSCL1nVjPhqrw=\ngopkg.in/mgo.v2 v2.0.0-20190816093944-a6b53ec6cb22/go.mod h1:yeKp02qBN3iKW1OzL3MGk2IdtZzaj7SFntXj72NppTA=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8 h1:obN1ZagJSUGI0Ek/LBmuj4SNLPfIny3KsKFopxRdj10=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\n"
        },
        {
          "name": "ledis",
          "type": "tree",
          "content": null
        },
        {
          "name": "rpl",
          "type": "tree",
          "content": null
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        },
        {
          "name": "store",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}