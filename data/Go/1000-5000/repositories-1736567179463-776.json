{
  "metadata": {
    "timestamp": 1736567179463,
    "page": 776,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "minishift/minishift",
      "stars": 2489,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.2890625,
          "content": "comment:\n  layout: \"reach, diff, flags, files\"\n  behavior: new\n  require_changes: false  # if true: only post the comment if coverage changes\n  require_base: no        # [yes :: must have a base report to post]\n  require_head: no       # [yes :: must have a head report to post]\n  branches: null\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6201171875,
          "content": "# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n_obj\n_test\ndocs/?/\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.test\n*.prof\n\n/out\n/_gopath\n/release\n\n/minishift\n\n.DS_Store\n\n/.idea\n/.vscode\n*.iml\n/.vscode\n\n# Docs\n.ruby-gemset\n.ruby-version\ndocs/build\ndocs/source/_tmp/*.md\ndocs/source/command-ref/*.adoc\ndocs/source/**/variables.adoc\ndocs/source/using/images/minishift-architecture.png.cache\ndocs/source/using/images/minishift-architecture-template*\ndocs/.bundle/\ndocs/.sass-cache/\ndocs/.java\n"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 0.779296875,
          "content": "build:\n  image: registry.centos.org/minishift/minishift-build:latest\n  tags:\n    - docker\n  script:\n    - export CURRENT_BUILD_PATH=$PWD\n    - mkdir -p $HOME/gopath/bin\n    - curl -L https://github.com/golang/dep/releases/download/v0.4.1/dep-linux-amd64 -o $HOME/gopath/bin/dep\n    - chmod +x $HOME/gopath/bin/dep\n    - export GOPATH=$HOME/gopath\n    - export PATH=$PATH:$GOPATH/bin\n    - mkdir -p $HOME/gopath/src/github.com/minishift\n    - ln -s $CURRENT_BUILD_PATH $HOME/gopath/src/github.com/minishift/minishift\n    - cd $HOME/gopath/src/github.com/minishift/minishift/\n    - make prerelease\n    - rm -rf $HOME/gopath/src/github.com/minishift/minishift/out/bindata\n    - mv $HOME/gopath/src/github.com/minishift/minishift/out/ $CURRENT_BUILD_PATH/public\n  artifacts:\n    paths:\n      - public\n\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.6318359375,
          "content": "language: go\n\ngo:\n- 1.13.3\n\ninstall:\n- mkdir -p /home/travis/gopath/bin\n- mkdir -p /home/travis/gopath/pkg\n- cd $HOME/gopath/src/github.com\n- mv `ls` foo\n- mv foo minishift\n- cd minishift/minishift\n- GODEP_OS_ARCH=`go env GOHOSTOS`-`go env GOHOSTARCH`\n- GODEP_TAG=v0.4.1\n- GODEP_LATEST_RELEASE_URL=\"https://github.com/golang/dep/releases/download/${GODEP_TAG}/dep-${GODEP_OS_ARCH}\"\n- mkdir /tmp/godep\n- wget ${GODEP_LATEST_RELEASE_URL} -O /tmp/godep/dep\n- chmod +x /tmp/godep/dep\n- export PATH=$PATH:/tmp/godep/\n\nscript: |\n  make prerelease\n  make coverage\n\nnotifications:\n  webhooks: http://minibot.19cf262c.svc.dockerapp.io:9009/hubot/travis-ci\n"
        },
        {
          "name": "CONTRIBUTING.adoc",
          "type": "blob",
          "size": 1.537109375,
          "content": "[[contribution-guidelines]]\n= Contribution guidelines\n\n[[filing-issues]]\n== Filing issues\n\nFile issues using the standard\nhttps://github.com/minishift/minishift/issues[Github issue tracker] for the repository.\nBefore you submit a new issue, we recommend that you search the list of issues to see if anyone already submitted a similar issue.\n\n[[contributing-patches]]\n== Contributing patches\n\nThank you for your contributions! Please follow this process to submit a patch:\n\n. Create an issue describing your proposed change to the repository.\n. The repository owners will triage and respond to your issue promptly.\n. Fork the repository and create a topic branch.\n. Refer to the link:https://docs.okd.io/latest/minishift/contributing/developing.html[developer documentation] for guidelines and tips on how to build and test Minishift.\n. Submit a pull request with the proposed changes.\n.. The required format for the git commit message is 'Issue #<issue_no> message'.\n.. To make reviewing and integration as smooth as possible, please run the `make` targets link:https://docs.okd.io/latest/minishift/contributing/developing.html#unit-tests[`test`], https://docs.okd.io/latest/minishift/contributing/developing.html#format-source-code[`fmtcheck`] and https://docs.okd.io/latest/minishift/contributing/developing.html#commit-messages[`validate_commits`] prior to submitting the pull request.\n\n[[questions]]\n== Questions?\n\nIf you run into issues or have any questions about contributions, feel free to ping the Minishift developers on IRC at the #minishift channel on Freenode.\n"
        },
        {
          "name": "Gopkg.lock",
          "type": "blob",
          "size": 31.9755859375,
          "content": "# This file is autogenerated, do not edit; changes may be undone by the next 'dep ensure'.\n\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:81f8c061c3d18ed1710957910542bc17d2b789c6cd19e0f654c30b35fd255ca5\"\n  name = \"github.com/Azure/go-ansiterm\"\n  packages = [\n    \".\",\n    \"winterm\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"d6e3b3328b783f23731bc4d058875b0371ff8109\"\n\n[[projects]]\n  digest = \"1:167b6f65a6656de568092189ae791253939f076df60231fdd64588ac703892a1\"\n  name = \"github.com/BurntSushi/toml\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"b26d9c308763d68093482582cea63d69be07a0f0\"\n  version = \"v0.3.0\"\n\n[[projects]]\n  digest = \"1:d3c5e304a69e349d95d0904c5c3c169d182c63088b25059f47e7594b23849612\"\n  name = \"github.com/DATA-DOG/godog\"\n  packages = [\n    \".\",\n    \"colors\",\n    \"gherkin\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"75562b12d67aa758aba65b0072c763bccf7e9b00\"\n\n[[projects]]\n  digest = \"1:64ca58cb54870f9d4d59b726cdd04365c2ef31d71db04b71d275c32cd54ed3af\"\n  name = \"github.com/Microsoft/go-winio\"\n  packages = [\n    \".\",\n    \"archive/tar\",\n    \"backuptar\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"7da180ee92d8bd8bb8c37fc560e673e6557c392f\"\n  version = \"v0.4.7\"\n\n[[projects]]\n  digest = \"1:ebba70828d503daea109c8ff640d7d6a6af65cf6b1b0fe897bd5a6b4007d26db\"\n  name = \"github.com/Microsoft/hcsshim\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"45ef15484298b76abeb9513ea0ea0abd2b5b84b3\"\n  version = \"v0.6.8\"\n\n[[projects]]\n  digest = \"1:dab62c3861db5c130b9e9891f5bae684009ad9f728909809c2b576f3b10a957f\"\n  name = \"github.com/anjannath/systray\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"26ec25aa9aaa5a0142dfe61525a604914795e424\"\n\n[[projects]]\n  digest = \"1:0b36b922ba3d5cb59ed26b3783c2d6cebd9b7aecbeb1ea81f6290740f1176d4b\"\n  name = \"github.com/asaskevich/govalidator\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"7b3beb6df3c42abd3509abfc3bcacc0fbfb7c877\"\n  version = \"v5\"\n\n[[projects]]\n  digest = \"1:aba270497eb2d49f5cba6f4162d524b9a1195a24cbce8be20bf56a0051f47deb\"\n  name = \"github.com/blang/semver\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"b38d23b8782a487059e8fc8773e9a5b228a77cb6\"\n  version = \"v3.5.0\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:fc8dbcc2a5de7c093e167828ebbdf551641761d2ad75431d3a167d467a264115\"\n  name = \"github.com/containerd/continuity\"\n  packages = [\"pathdriver\"]\n  pruneopts = \"NUT\"\n  revision = \"246e49050efdf45e8f17fbbcf1547ee376f9939e\"\n\n[[projects]]\n  digest = \"1:26c2b231c2e4b2184711950fa47a23a9a63baeb8b1901dd023db0a5ac4b282de\"\n  name = \"github.com/containers/image\"\n  packages = [\n    \"copy\",\n    \"directory\",\n    \"directory/explicitfilepath\",\n    \"docker\",\n    \"docker/archive\",\n    \"docker/daemon\",\n    \"docker/policyconfiguration\",\n    \"docker/reference\",\n    \"docker/tarfile\",\n    \"image\",\n    \"internal/tmpdir\",\n    \"manifest\",\n    \"oci/archive\",\n    \"oci/internal\",\n    \"oci/layout\",\n    \"openshift\",\n    \"ostree\",\n    \"pkg/compression\",\n    \"pkg/docker/config\",\n    \"pkg/strslice\",\n    \"pkg/tlsclientconfig\",\n    \"signature\",\n    \"storage\",\n    \"tarball\",\n    \"transports\",\n    \"transports/alltransports\",\n    \"types\",\n    \"version\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"5cc7850824afe2b4fb016f8906666b358c50dc31\"\n\n[[projects]]\n  digest = \"1:42fd648d391b0e4859d0148ef6e9d5eee1399647e5d6192b5c1e4a82f0ddddb5\"\n  name = \"github.com/containers/storage\"\n  packages = [\n    \".\",\n    \"drivers\",\n    \"drivers/aufs\",\n    \"drivers/btrfs\",\n    \"drivers/devmapper\",\n    \"drivers/overlay\",\n    \"drivers/overlayutils\",\n    \"drivers/quota\",\n    \"drivers/register\",\n    \"drivers/vfs\",\n    \"drivers/windows\",\n    \"drivers/zfs\",\n    \"pkg/archive\",\n    \"pkg/chrootarchive\",\n    \"pkg/devicemapper\",\n    \"pkg/directory\",\n    \"pkg/dmesg\",\n    \"pkg/fileutils\",\n    \"pkg/fsutils\",\n    \"pkg/homedir\",\n    \"pkg/idtools\",\n    \"pkg/ioutils\",\n    \"pkg/locker\",\n    \"pkg/longpath\",\n    \"pkg/loopback\",\n    \"pkg/mount\",\n    \"pkg/ostree\",\n    \"pkg/parsers\",\n    \"pkg/parsers/kernel\",\n    \"pkg/pools\",\n    \"pkg/promise\",\n    \"pkg/reexec\",\n    \"pkg/stringid\",\n    \"pkg/stringutils\",\n    \"pkg/system\",\n    \"pkg/truncindex\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"68332c059156eae970a03245cfcd4d717fb66ecd\"\n\n[[projects]]\n  digest = \"1:7cb4fdca4c251b3ef8027c90ea35f70c7b661a593b9eeae34753c65499098bb1\"\n  name = \"github.com/cpuguy83/go-md2man\"\n  packages = [\"md2man\"]\n  pruneopts = \"NUT\"\n  revision = \"20f5889cbdc3c73dbd2862796665e7c465ade7d1\"\n  version = \"v1.0.8\"\n\n[[projects]]\n  digest = \"1:eac398d6bff1290677e66402e97a01c2f13cc963a6e4a77c17b52577732c5aef\"\n  name = \"github.com/danieljoos/wincred\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"412b574fb496839b312a75fba146bd32a89001cf\"\n  version = \"v1.0.1\"\n\n[[projects]]\n  digest = \"1:a2c1d0e43bd3baaa071d1b9ed72c27d78169b2b269f71c105ac4ba34b1be4a39\"\n  name = \"github.com/davecgh/go-spew\"\n  packages = [\"spew\"]\n  pruneopts = \"NUT\"\n  revision = \"346938d642f2ec3594ed81d874461961cd0faa76\"\n  version = \"v1.1.0\"\n\n[[projects]]\n  digest = \"1:1b189cf7530bdc203c21e172f621338ad87c9bc48f0e190088b7ec649740d8bb\"\n  name = \"github.com/docker/distribution\"\n  packages = [\n    \".\",\n    \"digestset\",\n    \"reference\",\n    \"registry/api/errcode\",\n    \"registry/api/v2\",\n    \"registry/client\",\n    \"registry/client/auth/challenge\",\n    \"registry/client/transport\",\n    \"registry/storage/cache\",\n    \"registry/storage/cache/memory\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"5f6282db7d65e6d72ad7c2cc66310724a57be716\"\n\n[[projects]]\n  digest = \"1:cfd736d41cedbae31255e982e3af6108176d499a2595b4a8aaf1cd17aa599eed\"\n  name = \"github.com/docker/docker\"\n  packages = [\n    \"api\",\n    \"api/types\",\n    \"api/types/blkiodev\",\n    \"api/types/container\",\n    \"api/types/events\",\n    \"api/types/filters\",\n    \"api/types/image\",\n    \"api/types/mount\",\n    \"api/types/network\",\n    \"api/types/registry\",\n    \"api/types/strslice\",\n    \"api/types/swarm\",\n    \"api/types/swarm/runtime\",\n    \"api/types/time\",\n    \"api/types/versions\",\n    \"api/types/volume\",\n    \"client\",\n    \"pkg/homedir\",\n    \"pkg/idtools\",\n    \"pkg/mount\",\n    \"pkg/system\",\n    \"pkg/term\",\n    \"pkg/term/windows\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"da99009bbb1165d1ac5688b5c81d2f589d418341\"\n\n[[projects]]\n  digest = \"1:8866486038791fe65ea1abf660041423954b1f3fb99ea6a0ad8424422e943458\"\n  name = \"github.com/docker/docker-credential-helpers\"\n  packages = [\n    \"client\",\n    \"credentials\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"d68f9aeca33f5fd3f08eeae5e9d175edf4e731d1\"\n  version = \"v0.6.0\"\n\n[[projects]]\n  digest = \"1:f133477f38c590bdcd6fc534617df17983f7a21e5b686d4a3495abeb21c631ec\"\n  name = \"github.com/docker/go-connections\"\n  packages = [\n    \"nat\",\n    \"sockets\",\n    \"tlsconfig\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"3ede32e2033de7505e6500d6c868c2b9ed9f169d\"\n  version = \"v0.3.0\"\n\n[[projects]]\n  digest = \"1:34a08c6023c552594b834d530b2d30473bf42bb33be5524d5ff66c657b9a9c25\"\n  name = \"github.com/docker/go-units\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"0bbddae09c5a5419a8c6dcdd7ff90da3d450393b\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:ce43438a8204a4259b4461153a392bc3e504bef7e4785a8192344f002c7bd935\"\n  name = \"github.com/docker/libtrust\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"aabc10ec26b754e797f9028f4589c5b7bd90dc20\"\n\n[[projects]]\n  digest = \"1:e766806b9bc8357663f7657214c2abe5780578148056b87370eda662dcdd13ed\"\n  name = \"github.com/docker/machine\"\n  packages = [\n    \"commands/mcndirs\",\n    \"drivers/errdriver\",\n    \"drivers/fakedriver\",\n    \"drivers/generic\",\n    \"drivers/hyperv\",\n    \"drivers/none\",\n    \"drivers/virtualbox\",\n    \"drivers/vmwarefusion\",\n    \"libmachine\",\n    \"libmachine/auth\",\n    \"libmachine/cert\",\n    \"libmachine/check\",\n    \"libmachine/drivers\",\n    \"libmachine/drivers/plugin\",\n    \"libmachine/drivers/plugin/localbinary\",\n    \"libmachine/drivers/rpc\",\n    \"libmachine/engine\",\n    \"libmachine/host\",\n    \"libmachine/log\",\n    \"libmachine/mcndockerclient\",\n    \"libmachine/mcnerror\",\n    \"libmachine/mcnflag\",\n    \"libmachine/mcnutils\",\n    \"libmachine/persist\",\n    \"libmachine/provision\",\n    \"libmachine/provision/pkgaction\",\n    \"libmachine/provision/provisiontest\",\n    \"libmachine/provision/serviceaction\",\n    \"libmachine/shell\",\n    \"libmachine/ssh\",\n    \"libmachine/state\",\n    \"libmachine/swarm\",\n    \"libmachine/version\",\n    \"libmachine/versioncmp\",\n    \"version\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"4f91040061541cf5c23489009e1c6d946cc21d42\"\n  source = \"github.com/machine-drivers/machine\"\n\n[[projects]]\n  digest = \"1:ff7d9e661dacac6448a8675b9928ea2fcede41d5a248d09dac652fffb7569b32\"\n  name = \"github.com/elazarl/goproxy\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"93c365f5468fdbc21f2d55a7e39cc4bced996971\"\n  source = \"github.com/gbraad/goproxy\"\n\n[[projects]]\n  digest = \"1:1b91ae0dc69a41d4c2ed23ea5cffb721ea63f5037ca4b81e6d6771fbb8f45129\"\n  name = \"github.com/fsnotify/fsnotify\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"c2828203cd70a50dcccfb2761f8b1f8ceef9a8e9\"\n\n[[projects]]\n  digest = \"1:e985357b252a3b4e50f6f1d967e8c13f6b2d02681cc627315e8d0c40f323f7c9\"\n  name = \"github.com/gbraad/go-hvkvp\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"a692e030379b6de28a10b7697decdf8109899f6e\"\n  version = \"0.3\"\n\n[[projects]]\n  digest = \"1:81466b4218bf6adddac2572a30ac733a9255919bc2f470b4827a317bd4ee1756\"\n  name = \"github.com/ghodss/yaml\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"0ca9ea5df5451ffdf184b4428c902747c2c11cd7\"\n  version = \"v1.0.0\"\n\n[[projects]]\n  digest = \"1:ca3369c0fc8d471d8698f85a37a4f8c98a847402681a31431fb87a84fa2e5373\"\n  name = \"github.com/godbus/dbus\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"a389bdde4dd695d414e47b755e95e72b7826432c\"\n  version = \"v4.1.0\"\n\n[[projects]]\n  digest = \"1:1b3dd24f14a5280710fc7a3aa2480b6e4d20fdfc905841de9a3aa2aa2f1d4ee9\"\n  name = \"github.com/gogo/protobuf\"\n  packages = [\n    \"proto\",\n    \"sortkeys\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"1adfc126b41513cc696b209667c8656ea7aac67c\"\n  version = \"v1.0.0\"\n\n[[projects]]\n  digest = \"1:f37a5bfb1a2260f1aa02b07d1eaba21ae032e77b1d673bcdba9620b484e94032\"\n  name = \"github.com/golang/glog\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"335da9dda11408a34b64344f82e9c03779b71673\"\n  source = \"https://github.com/openshift/glog.git\"\n\n[[projects]]\n  digest = \"1:9f35c1344b56e5868d511d231f215edd0650aa572664f856444affdd256e43e4\"\n  name = \"github.com/golang/protobuf\"\n  packages = [\"proto\"]\n  pruneopts = \"NUT\"\n  revision = \"925541529c1fa6821df4e44ce2723319eb2be768\"\n  version = \"v1.0.0\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:05f95ffdfcf651bdb0f05b40b69e7f5663047f8da75c72d58728acb59b5cc107\"\n  name = \"github.com/google/btree\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"4030bb1f1f0c35b30ca7009e9ebd06849dd45306\"\n\n[[projects]]\n  digest = \"1:51bee9f1987dcdb9f9a1b4c20745d78f6bf6f5f14ad4e64ca883eb64df4c0045\"\n  name = \"github.com/google/go-github\"\n  packages = [\"github\"]\n  pruneopts = \"NUT\"\n  revision = \"e48060a28fac52d0f1cb758bc8b87c07bac4a87d\"\n  version = \"v15.0.0\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:a63cff6b5d8b95638bfe300385d93b2a6d9d687734b863da8e09dc834510a690\"\n  name = \"github.com/google/go-querystring\"\n  packages = [\"query\"]\n  pruneopts = \"NUT\"\n  revision = \"53e6ce116135b80d037921a7fdd5138cf32d7a8a\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:52c5834e2bebac9030c97cc0798ac11c3aa8a39f098aeb419f142533da6cd3cc\"\n  name = \"github.com/google/gofuzz\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"24818f796faf91cd76ec7bddd72458fbced7a6c1\"\n\n[[projects]]\n  digest = \"1:dbd86d229eacaa86a98b10f8fb3e3fc69a1913e0f4e010e7cc1f92bf12edca92\"\n  name = \"github.com/gorilla/context\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"1ea25387ff6f684839d82767c1733ff4d4d15d0a\"\n  version = \"v1.1\"\n\n[[projects]]\n  digest = \"1:eced3d718020962f1cc6ac109b840ba17dc817a291062b5948ba7aecc8c6665d\"\n  name = \"github.com/gorilla/mux\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"53c1911da2b537f792e7cafcb446b05ffe33b996\"\n  version = \"v1.6.1\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:7fdf3223c7372d1ced0b98bf53457c5e89d89aecbad9a77ba9fcc6e01f9e5621\"\n  name = \"github.com/gregjones/httpcache\"\n  packages = [\n    \".\",\n    \"diskcache\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"9cad4c3443a7200dd6400aef47183728de563a38\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:e4b857b457eeb3e7fd4f996fc0058eb414a2f40fdba73b51365369b19e28b6a8\"\n  name = \"github.com/hashicorp/hcl\"\n  packages = [\n    \".\",\n    \"hcl/ast\",\n    \"hcl/parser\",\n    \"hcl/scanner\",\n    \"hcl/strconv\",\n    \"hcl/token\",\n    \"json/parser\",\n    \"json/scanner\",\n    \"json/token\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"23c074d0eceb2b8a5bfdbb271ab780cde70f05a8\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:372707045a3d3692e0b61edf50fa8d4c22f34d488815a2eba3aa957285166738\"\n  name = \"github.com/hectane/go-acl\"\n  packages = [\n    \".\",\n    \"api\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"da78bae5fc95895d8855ed8c5b1505b10e254450\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:b7f860847a1d71f925ba9385ed95f1ebc0abfeb418a78e219ab61f48fdfeffad\"\n  name = \"github.com/howeyc/gopass\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"bf9dde6d0d2c004a008c27aaee91170c786f6db8\"\n\n[[projects]]\n  digest = \"1:cf327083982a19eae01f70be6663a935a02bac3a2dc79efbc19668c8378bfbb3\"\n  name = \"github.com/imdario/mergo\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"163f41321a19dd09362d4c63cc2489db2015f1f4\"\n  version = \"0.3.2\"\n\n[[projects]]\n  digest = \"1:1b2690e5f479621777c05f3f85ff630d28115e5f1782a5335914ffe511c2a8e4\"\n  name = \"github.com/inconshreveable/go-update\"\n  packages = [\n    \".\",\n    \"internal/binarydist\",\n    \"internal/osext\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"8152e7eb6ccf8679a64582a66b78519688d156ad\"\n\n[[projects]]\n  digest = \"1:406338ad39ab2e37b7f4452906442a3dbf0eb3379dd1f06aafb5c07e769a5fbb\"\n  name = \"github.com/inconshreveable/mousetrap\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"76626ae9c91c4f2a10f34cad8ce83ea42c93bb75\"\n  version = \"v1.0\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:39867ef0616a6f5c53346fd3748878135c644f4a542fe5700070258eb577eee2\"\n  name = \"github.com/intel-go/cpuid\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"2aa72927c3e22cca9e2fc3b8f661086b9dc421f2\"\n\n[[projects]]\n  digest = \"1:8e36686e8b139f8fe240c1d5cf3a145bc675c22ff8e707857cdd3ae17b00d728\"\n  name = \"github.com/json-iterator/go\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"1624edc4454b8682399def8740d46db5e4362ba4\"\n  version = \"v1.1.5\"\n\n[[projects]]\n  digest = \"1:8b3234b10eacd5edea45bf0c13a585b608749da23f94aaf29b46d9ef8a8babf4\"\n  name = \"github.com/juju/ratelimit\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"59fac5042749a5afb9af70e813da1dd5474f0167\"\n  version = \"1.0.1\"\n\n[[projects]]\n  digest = \"1:263f9b0a0bcbfff9d5e7d9f2aa11f53995d98214fe0fb97e429e7a5f4534a0f9\"\n  name = \"github.com/kardianos/osext\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"ae77be60afb1dcacde03767a8c37337fad28ac14\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:47fa0ef6ae6b0387dacb77c7ab8827b4ef621650fd613e43ece61de4cb3f5019\"\n  name = \"github.com/kr/fs\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"2788f0dbd16903de03cb8186e5c7d97b69ad387b\"\n\n[[projects]]\n  digest = \"1:35e5598ba3bc950039e13d91958ce37f675264735907cada569d11b243e5cacb\"\n  name = \"github.com/magiconair/properties\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"c3beff4c2358b44d0493c7dda585e7db7ff28ae6\"\n  version = \"v1.7.6\"\n\n[[projects]]\n  digest = \"1:cb591533458f6eb6e2c1065ff3eac6b50263d7847deb23fc9f79b25bc608970e\"\n  name = \"github.com/mattn/go-runewidth\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"9e777a8366cce605130a531d2cd6363d07ad7317\"\n  version = \"v0.0.2\"\n\n[[projects]]\n  digest = \"1:d0164259ed17929689df11205194d80288e8ae25351778f7a3421a24774c36f8\"\n  name = \"github.com/mattn/go-shellwords\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"02e3cf038dcea8290e44424da473dd12be796a8a\"\n  version = \"v1.0.3\"\n\n[[projects]]\n  digest = \"1:7a1d6263dc82155642583b60ec7f7d8aba3bc65bc5c8aabc23b4efb6b4fcc4f0\"\n  name = \"github.com/mistifyio/go-zfs\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"cdc0f941c4d0e0e94d85348285568d921891e138\"\n  version = \"v2.1.1\"\n\n[[projects]]\n  digest = \"1:b62c4f18ad6eb454ac5253e7791ded3d7867330015ca4b37b6336e57f514585e\"\n  name = \"github.com/mitchellh/go-homedir\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"b8bc1bf767474819792c23f32d8286a45736f1c6\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:eeb1f466766c40a4656b090593e103d2ce327b914329232bc1d4632dae17fc4f\"\n  name = \"github.com/mitchellh/mapstructure\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"00c29f56e2386353d58c599509e8dc3801b0d716\"\n\n[[projects]]\n  digest = \"1:2f42fa12d6911c7b7659738758631bec870b7e9b4c6be5444f963cdcfccc191f\"\n  name = \"github.com/modern-go/concurrent\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"bacd9c7ef1dd9b15be4a9909b8ac7a4e313eec94\"\n  version = \"1.0.3\"\n\n[[projects]]\n  digest = \"1:c6aca19413b13dc59c220ad7430329e2ec454cc310bc6d8de2c7e2b93c18a0f6\"\n  name = \"github.com/modern-go/reflect2\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"4b7aa43c6742a2c18fdef89dd197aaae7dac7ccd\"\n  version = \"1.0.1\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:88a19b9585da51239884c1e556bfc9989dbd4361221a4a20497dedff9fce55c3\"\n  name = \"github.com/mtrmac/gpgme\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"b2432428689ca58c2b8e8dea9449d3295cf96fc9\"\n\n[[projects]]\n  digest = \"1:a58c82570aca43f583aa8f3fc66ebac94e9d25e3715341dd0e37a153d4585646\"\n  name = \"github.com/olekukonko/tablewriter\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"febf2d34b54a69ce7530036c7503b1c9fbfdf0bb\"\n\n[[projects]]\n  digest = \"1:e0cc8395ea893c898ff5eb0850f4d9851c1f57c78c232304a026379a47a552d0\"\n  name = \"github.com/opencontainers/go-digest\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"279bed98673dd5bef374d3b6e4b09e2af76183bf\"\n  version = \"v1.0.0-rc1\"\n\n[[projects]]\n  digest = \"1:11db38d694c130c800d0aefb502fb02519e514dc53d9804ce51d1ad25ec27db6\"\n  name = \"github.com/opencontainers/image-spec\"\n  packages = [\n    \"specs-go\",\n    \"specs-go/v1\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"d60099175f88c47cd379c4738d158884749ed235\"\n  version = \"v1.0.1\"\n\n[[projects]]\n  digest = \"1:ea8780346eba74e5eb3e8b6bded2ec46c1c81cd745bc00e9964b730955bf4252\"\n  name = \"github.com/opencontainers/runc\"\n  packages = [\n    \"libcontainer/system\",\n    \"libcontainer/user\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"baf6536d6259209c3edfa2b22237af82942d3dfa\"\n  version = \"v0.1.1\"\n\n[[projects]]\n  digest = \"1:5c65c485fa22fdfd6937db07aaf879904a4745770ee416d8d1f2a1434dc2d8ce\"\n  name = \"github.com/opencontainers/selinux\"\n  packages = [\n    \"go-selinux\",\n    \"go-selinux/label\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"ba1aefe8057f1d0cfb8e88d0ec1dc85925ef987d\"\n  version = \"v1.0.0-rc1\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:05741b1fcb33f16796f7d2c7914d2800a8686dfcba31f61f795e1f285afba87b\"\n  name = \"github.com/ostreedev/ostree-go\"\n  packages = [\n    \"pkg/glibobject\",\n    \"pkg/otbuiltin\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"cb6250d5a6a240b509609915842f763fd87b819d\"\n\n[[projects]]\n  digest = \"1:cce3a18fb0b96b5015cd8ca03a57d20a662679de03c4dc4b6ff5f17ea2050fa6\"\n  name = \"github.com/pborman/uuid\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"1b00554d822231195d1babd97ff4a781231955c9\"\n\n[[projects]]\n  digest = \"1:13b8f1a2ce177961dc9231606a52f709fab896c565f3988f60a7f6b4e543a902\"\n  name = \"github.com/pelletier/go-toml\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"acdc4509485b587f5e675510c4f2c63e90ff68a8\"\n  version = \"v1.1.0\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:3bf17a6e6eaa6ad24152148a631d18662f7212e21637c2699bff3369b7f00fa2\"\n  name = \"github.com/petar/GoLLRB\"\n  packages = [\"llrb\"]\n  pruneopts = \"NUT\"\n  revision = \"53be0d36a84c2a886ca057d34b6aa4468df9ccb4\"\n\n[[projects]]\n  digest = \"1:6c6d91dc326ed6778783cff869c49fb2f61303cdd2ebbcf90abe53505793f3b6\"\n  name = \"github.com/peterbourgon/diskv\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"5f041e8faa004a95c88a202771f4cc3e991971e6\"\n  version = \"v2.0.1\"\n\n[[projects]]\n  digest = \"1:fb519f672ebe265e5316551188145afd54dfb928452b125afe6dfaa26f800397\"\n  name = \"github.com/pkg/browser\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"c90ca0c84f15f81c982e32665bffd8d7aac8f097\"\n\n[[projects]]\n  digest = \"1:5cf3f025cbee5951a4ee961de067c8a89fc95a5adabead774f82822efabab121\"\n  name = \"github.com/pkg/errors\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"645ef00459ed84a119197bfb8d8205042c6df63d\"\n  version = \"v0.8.0\"\n\n[[projects]]\n  digest = \"1:71fe6597d90962946f946227a874724321e1fdfbb046d86c30f781fd9f08495c\"\n  name = \"github.com/pkg/sftp\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"0159c83e42a88e5c35180f73b84298a6bdde1ec1\"\n  version = \"1.4.0\"\n\n[[projects]]\n  digest = \"1:0028cb19b2e4c3112225cd871870f2d9cf49b9b4276531f03438a88e94be86fe\"\n  name = \"github.com/pmezard/go-difflib\"\n  packages = [\"difflib\"]\n  pruneopts = \"NUT\"\n  revision = \"792786c7400a136282c1664665ae0a8db921c6c2\"\n  version = \"v1.0.0\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:59ab824add87694b5153cf3446512c6731ad00f304d811f020abdd07cc14eaa8\"\n  name = \"github.com/pquerna/ffjson\"\n  packages = [\n    \"fflib/v1\",\n    \"fflib/v1/internal\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"d49c2bc1aa135aad0c6f4fc2056623ec78f5d5ac\"\n\n[[projects]]\n  digest = \"1:bcfa8e184764796499312e55cd8a5fff63896eca0d6faff6b6e43ac6a98a498a\"\n  name = \"github.com/russross/blackfriday\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"55d61fa8aa702f59229e6cff85793c22e580eaf5\"\n  version = \"v1.5.1\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:367696498a70b3be4277cceb05960787509ed5d7484f831eaa235e1c9f5f9f31\"\n  name = \"github.com/samalba/dockerclient\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"a3036261847103270e9f732509f43b5f98710ace\"\n\n[[projects]]\n  digest = \"1:6989062eb7ccf25cf38bf4fe3dba097ee209f896cda42cefdca3927047bef7b6\"\n  name = \"github.com/sirupsen/logrus\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"c155da19408a8799da419ed3eeb0cb5db0ad5dbc\"\n  version = \"v1.0.5\"\n\n[[projects]]\n  digest = \"1:39da3da7a735176ff518f7a6d8de9e4e03cb760dc7ef0b7b8dae6fc61406295c\"\n  name = \"github.com/spf13/afero\"\n  packages = [\n    \".\",\n    \"mem\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"bb8f1927f2a9d3ab41c9340aa034f6b803f4359c\"\n  version = \"v1.0.2\"\n\n[[projects]]\n  digest = \"1:3fa7947ca83b98ae553590d993886e845a4bff19b7b007e869c6e0dd3b9da9cd\"\n  name = \"github.com/spf13/cast\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"8965335b8c7107321228e3e3702cab9832751bac\"\n  version = \"v1.2.0\"\n\n[[projects]]\n  digest = \"1:0932c83811f0984a59dc97113c3abdda0307323ef131691ca0afcc7cf4eccc29\"\n  name = \"github.com/spf13/cobra\"\n  packages = [\n    \".\",\n    \"doc\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"e606913c4ee45fec232e67e70105fb6c866b95d9\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:f29f83301ed096daed24a90f4af591b7560cb14b9cc3e1827abbf04db7269ab5\"\n  name = \"github.com/spf13/jwalterweatherman\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"7c0cea34c8ece3fbeb2b27ab9b59511d360fb394\"\n\n[[projects]]\n  digest = \"1:3ab855aa584d08db6541ce99dad60c12bd6a328ecb8a7358363887f85c976347\"\n  name = \"github.com/spf13/pflag\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"e57e3eeb33f795204c1ca35f56c44f83227c6e66\"\n\n[[projects]]\n  digest = \"1:20f79fea8e91ae08e9d275ee01b26bf436a2a8eb7838051d47494c0c996d5d92\"\n  name = \"github.com/spf13/viper\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"382f87b929b84ce13e9c8a375a4b217f224e6c65\"\n\n[[projects]]\n  digest = \"1:59df7adabc6177f346fd94becaea0dc7a4c48adaa5fd1fa685703110f165edef\"\n  name = \"github.com/stretchr/testify\"\n  packages = [\"assert\"]\n  pruneopts = \"NUT\"\n  revision = \"b91bfb9ebec76498946beb6af7c0230c7cc7ba6c\"\n  version = \"v1.2.0\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:e14e467ed00ab98665623c5060fa17e3d7079be560ffc33cabafd05d35894f05\"\n  name = \"github.com/syndtr/gocapability\"\n  packages = [\"capability\"]\n  pruneopts = \"NUT\"\n  revision = \"d98352740cb2c55f81556b63d4a1ec64c5a319c2\"\n\n[[projects]]\n  digest = \"1:d9eb1d964a449cf51455fdac2ec3451c664af8e8b93c23d9c31d22b84ea82fde\"\n  name = \"github.com/tchap/go-patricia\"\n  packages = [\"patricia\"]\n  pruneopts = \"NUT\"\n  revision = \"666120de432aea38ab06bd5c818f04f4129882c9\"\n  version = \"v2.2.6\"\n\n[[projects]]\n  digest = \"1:07e8742c479bab0066149ad02a710024154e76874fd0a2dba002d87702725825\"\n  name = \"github.com/ulikunitz/xz\"\n  packages = [\n    \".\",\n    \"internal/hash\",\n    \"internal/xlog\",\n    \"lzma\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"0c6b41e72360850ca4f98dc341fd999726ea007f\"\n  version = \"v0.5.4\"\n\n[[projects]]\n  digest = \"1:c50d03312be5e5914ccb213c500c92d0231c6364bd5f968bc6b756ba7d99f1b0\"\n  name = \"github.com/vbatts/tar-split\"\n  packages = [\n    \"archive/tar\",\n    \"tar/asm\",\n    \"tar/storage\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"38ec4ddb06dedbea0a895c4848b248eb38af221b\"\n  version = \"v0.10.2\"\n\n[[projects]]\n  digest = \"1:190bb620545d7372b2ede5a3532285723153a2813e0fe995507bfa4d80b4daa1\"\n  name = \"github.com/zalando/go-keyring\"\n  packages = [\n    \".\",\n    \"secret_service\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"6d81c293b3fbc8a9b1bcf4bc9c167c2e1d1f52cf\"\n\n[[projects]]\n  digest = \"1:07c9c0fa314f5cce3014c50f1e175f84c797a259e2e2816dad10e7cd81e50798\"\n  name = \"golang.org/x/crypto\"\n  packages = [\n    \"cast5\",\n    \"curve25519\",\n    \"ed25519\",\n    \"ed25519/internal/edwards25519\",\n    \"openpgp\",\n    \"openpgp/armor\",\n    \"openpgp/elgamal\",\n    \"openpgp/errors\",\n    \"openpgp/packet\",\n    \"openpgp/s2k\",\n    \"ssh\",\n    \"ssh/terminal\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"b080dc9a8c480b08e698fb1219160d598526310f\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:d36a2e92abf0bcdee19e860de177a54071b9d04e5adfdceafedbcbbcbf309d2d\"\n  name = \"golang.org/x/net\"\n  packages = [\n    \"context\",\n    \"context/ctxhttp\",\n    \"http2\",\n    \"http2/hpack\",\n    \"idna\",\n    \"lex/httplex\",\n    \"proxy\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"e0c57d8f86c17f0724497efcb3bc617e82834821\"\n\n[[projects]]\n  digest = \"1:0362c58cc241b0b931516ce8203caa5ef4467a6ec1eda3134db8924e0a46d21e\"\n  name = \"golang.org/x/oauth2\"\n  packages = [\n    \".\",\n    \"internal\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"442624c9ec9243441e83b374a9e22ac549b5c51d\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:3b319de92203c21c48942e19624d4017f876fc4693c5b71f84383d08e6ce58ca\"\n  name = \"golang.org/x/sys\"\n  packages = [\n    \"unix\",\n    \"windows\",\n    \"windows/registry\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"af653ce8b74f808d092db8ca9741fbb63d2a469d\"\n\n[[projects]]\n  digest = \"1:e7071ed636b5422cc51c0e3a6cebc229d6c9fffc528814b519a980641422d619\"\n  name = \"golang.org/x/text\"\n  packages = [\n    \"collate\",\n    \"collate/build\",\n    \"internal/colltab\",\n    \"internal/gen\",\n    \"internal/tag\",\n    \"internal/triegen\",\n    \"internal/ucd\",\n    \"language\",\n    \"secure/bidirule\",\n    \"transform\",\n    \"unicode/bidi\",\n    \"unicode/cldr\",\n    \"unicode/norm\",\n    \"unicode/rangetable\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"f21a4dfb5e38f5895301dc265a8def02365cc3d0\"\n  version = \"v0.3.0\"\n\n[[projects]]\n  digest = \"1:f229c599a645bffd97518107ac89955adfa6d5e5e4efa3e8cadb29789219639f\"\n  name = \"google.golang.org/appengine\"\n  packages = [\n    \"internal\",\n    \"internal/base\",\n    \"internal/datastore\",\n    \"internal/log\",\n    \"internal/remote_api\",\n    \"internal/urlfetch\",\n    \"urlfetch\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"150dc57a1b433e64154302bdc40b6bb8aefa313a\"\n  version = \"v1.0.0\"\n\n[[projects]]\n  digest = \"1:bb5bffda1392336ac554638c9303a436a5d65b8edc29ef3a97c67ef7a2a02706\"\n  name = \"gopkg.in/cheggaaa/pb.v1\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"b6229822fa186496fcbf34111237e7a9693c6971\"\n  version = \"v1.0.13\"\n\n[[projects]]\n  digest = \"1:2d1fbdc6777e5408cabeb02bf336305e724b925ff4546ded0fa8715a7267922a\"\n  name = \"gopkg.in/inf.v0\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"d2d2541c53f18d2a059457998ce2876cc8e67cbf\"\n  version = \"v0.9.1\"\n\n[[projects]]\n  digest = \"1:6d313df39e01cf5a8a8b2ca2afedf140bd02cc5fcebf4d7f1364565f14ecbd49\"\n  name = \"gopkg.in/yaml.v2\"\n  packages = [\".\"]\n  pruneopts = \"NUT\"\n  revision = \"a3f3340b5840cee44f372bddb5880fcbc419b46a\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:d354e1c77f890b1748a7d7a7eee3672889ed01c01e8223e26364f25942f4a332\"\n  name = \"k8s.io/api\"\n  packages = [\"core/v1\"]\n  pruneopts = \"NUT\"\n  revision = \"a191abe0b71e00ce4cde58af8002aa4c1a8bb068\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:cfe2b6bb75773b815cb842b87a6c1057899bedbb67753be6d587815e0dd9203d\"\n  name = \"k8s.io/apimachinery\"\n  packages = [\n    \"pkg/api/errors\",\n    \"pkg/api/resource\",\n    \"pkg/apis/meta/v1\",\n    \"pkg/apis/meta/v1/unstructured\",\n    \"pkg/conversion\",\n    \"pkg/conversion/queryparams\",\n    \"pkg/fields\",\n    \"pkg/labels\",\n    \"pkg/runtime\",\n    \"pkg/runtime/schema\",\n    \"pkg/runtime/serializer/json\",\n    \"pkg/runtime/serializer/recognizer\",\n    \"pkg/runtime/serializer/streaming\",\n    \"pkg/runtime/serializer/versioning\",\n    \"pkg/selection\",\n    \"pkg/types\",\n    \"pkg/util/clock\",\n    \"pkg/util/errors\",\n    \"pkg/util/framer\",\n    \"pkg/util/intstr\",\n    \"pkg/util/json\",\n    \"pkg/util/naming\",\n    \"pkg/util/net\",\n    \"pkg/util/runtime\",\n    \"pkg/util/sets\",\n    \"pkg/util/validation\",\n    \"pkg/util/validation/field\",\n    \"pkg/util/yaml\",\n    \"pkg/version\",\n    \"pkg/watch\",\n    \"third_party/forked/golang/reflect\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"c6dd271be00615c6fa8c91fdf63381265a5f0e4e\"\n\n[[projects]]\n  digest = \"1:acd1d8a618897a36351fd77c5b2d100ceefc7ea5a7a35a4d6b8965c3414d9220\"\n  name = \"k8s.io/client-go\"\n  packages = [\n    \"pkg/version\",\n    \"rest\",\n    \"rest/watch\",\n    \"tools/auth\",\n    \"tools/clientcmd\",\n    \"tools/clientcmd/api\",\n    \"tools/clientcmd/api/latest\",\n    \"tools/clientcmd/api/v1\",\n    \"tools/metrics\",\n    \"transport\",\n    \"util/cert\",\n    \"util/flowcontrol\",\n    \"util/homedir\",\n    \"util/integer\",\n  ]\n  pruneopts = \"NUT\"\n  revision = \"78700dec6369ba22221b72770783300f143df150\"\n  version = \"v6.0.0\"\n\n[solve-meta]\n  analyzer-name = \"dep\"\n  analyzer-version = 1\n  input-imports = [\n    \"github.com/DATA-DOG/godog\",\n    \"github.com/DATA-DOG/godog/gherkin\",\n    \"github.com/anjannath/systray\",\n    \"github.com/asaskevich/govalidator\",\n    \"github.com/blang/semver\",\n    \"github.com/containers/image/copy\",\n    \"github.com/containers/image/docker/reference\",\n    \"github.com/containers/image/oci/layout\",\n    \"github.com/containers/image/signature\",\n    \"github.com/containers/image/transports/alltransports\",\n    \"github.com/containers/image/types\",\n    \"github.com/docker/go-units\",\n    \"github.com/docker/machine/drivers/fakedriver\",\n    \"github.com/docker/machine/drivers/generic\",\n    \"github.com/docker/machine/drivers/hyperv\",\n    \"github.com/docker/machine/drivers/virtualbox\",\n    \"github.com/docker/machine/drivers/vmwarefusion\",\n    \"github.com/docker/machine/libmachine\",\n    \"github.com/docker/machine/libmachine/auth\",\n    \"github.com/docker/machine/libmachine/drivers\",\n    \"github.com/docker/machine/libmachine/drivers/plugin\",\n    \"github.com/docker/machine/libmachine/drivers/plugin/localbinary\",\n    \"github.com/docker/machine/libmachine/engine\",\n    \"github.com/docker/machine/libmachine/host\",\n    \"github.com/docker/machine/libmachine/log\",\n    \"github.com/docker/machine/libmachine/mcnerror\",\n    \"github.com/docker/machine/libmachine/mcnflag\",\n    \"github.com/docker/machine/libmachine/mcnutils\",\n    \"github.com/docker/machine/libmachine/provision\",\n    \"github.com/docker/machine/libmachine/provision/pkgaction\",\n    \"github.com/docker/machine/libmachine/provision/provisiontest\",\n    \"github.com/docker/machine/libmachine/provision/serviceaction\",\n    \"github.com/docker/machine/libmachine/shell\",\n    \"github.com/docker/machine/libmachine/ssh\",\n    \"github.com/docker/machine/libmachine/state\",\n    \"github.com/docker/machine/libmachine/swarm\",\n    \"github.com/elazarl/goproxy\",\n    \"github.com/fsnotify/fsnotify\",\n    \"github.com/gbraad/go-hvkvp\",\n    \"github.com/golang/glog\",\n    \"github.com/google/go-github/github\",\n    \"github.com/inconshreveable/go-update\",\n    \"github.com/kardianos/osext\",\n    \"github.com/mitchellh/go-homedir\",\n    \"github.com/olekukonko/tablewriter\",\n    \"github.com/pborman/uuid\",\n    \"github.com/pkg/browser\",\n    \"github.com/pkg/errors\",\n    \"github.com/pkg/sftp\",\n    \"github.com/spf13/cobra\",\n    \"github.com/spf13/cobra/doc\",\n    \"github.com/spf13/pflag\",\n    \"github.com/spf13/viper\",\n    \"github.com/stretchr/testify/assert\",\n    \"github.com/zalando/go-keyring\",\n    \"golang.org/x/crypto/ssh\",\n    \"golang.org/x/crypto/ssh/terminal\",\n    \"golang.org/x/oauth2\",\n    \"golang.org/x/sys/windows/registry\",\n    \"gopkg.in/cheggaaa/pb.v1\",\n    \"gopkg.in/yaml.v2\",\n    \"k8s.io/client-go/tools/clientcmd\",\n    \"k8s.io/client-go/tools/clientcmd/api\",\n  ]\n  solver-name = \"gps-cdcl\"\n  solver-version = 1\n"
        },
        {
          "name": "Gopkg.toml",
          "type": "blob",
          "size": 5.1806640625,
          "content": "\n# Gopkg.toml example\n#\n# Refer to https://github.com/golang/dep/blob/master/docs/Gopkg.toml.md\n# for detailed Gopkg.toml documentation.\n#\n# required = [\"github.com/user/thing/cmd/thing\"]\n# ignored = [\"github.com/user/project/pkgX\", \"bitbucket.org/user/project/pkgA/pkgY\"]\n#\n# [[constraint]]\n#   name = \"github.com/user/project\"\n#   version = \"1.0.0\"\n#\n# [[constraint]]\n#   name = \"github.com/user/project2\"\n#   branch = \"dev\"\n#   source = \"github.com/myfork/project2\"\n#\n# [[override]]\n#  name = \"github.com/x/y\"\n#  version = \"2.4.0\"\n\n# We don't want to end up with an old logrus import, only github.com/sirupsen/logrus should be used\nignored = [\"github.com/Sirupsen/logrus\"]\n\n[[constraint]]\n  name = \"github.com/DATA-DOG/godog\"\n  revision = \"75562b12d67aa758aba65b0072c763bccf7e9b00\"\n\n[[constraint]]\n  name = \"github.com/asaskevich/govalidator\"\n  version = \"=5\"\n\n[[constraint]]\n  name = \"github.com/blang/semver\"\n  version = \"=3.5.0\"\n\n[[constraint]]\n  name = \"github.com/docker/go-units\"\n  revision = \"0bbddae09c5a5419a8c6dcdd7ff90da3d450393b\"\n\n[[constraint]]\n  name = \"github.com/docker/machine\"\n  revision = \"4f91040061541cf5c23489009e1c6d946cc21d42\"\n  source = \"github.com/machine-drivers/machine\"\n\n[[constraint]]\n  name = \"github.com/gbraad/go-hvkvp\"\n  version = \"=0.3.0\"\n\n[[constraint]]\n  name = \"github.com/golang/glog\"\n  revision = \"335da9dda11408a34b64344f82e9c03779b71673\"\n  source = \"https://github.com/openshift/glog.git\"\n\n[[constraint]]\n  name = \"github.com/google/go-github\"\n  version = \"=15.0.0\"\n\n[[constraint]]\n  name = \"github.com/inconshreveable/go-update\"\n  revision = \"8152e7eb6ccf8679a64582a66b78519688d156ad\"\n\n[[constraint]]\n  name = \"github.com/kardianos/osext\"\n  revision = \"ae77be60afb1dcacde03767a8c37337fad28ac14\"\n\n[[constraint]]\n  name = \"github.com/olekukonko/tablewriter\"\n  revision = \"febf2d34b54a69ce7530036c7503b1c9fbfdf0bb\"\n\n[[constraint]]\n  name = \"github.com/pkg/browser\"\n  revision = \"c90ca0c84f15f81c982e32665bffd8d7aac8f097\"\n\n[[constraint]]\n  name = \"github.com/pkg/errors\"\n  version = \"=0.8.0\"\n\n[[constraint]]\n  name = \"github.com/spf13/cobra\"\n  revision = \"e606913c4ee45fec232e67e70105fb6c866b95d9\"\n\n[[constraint]]\n  name = \"github.com/spf13/pflag\"\n  revision = \"e57e3eeb33f795204c1ca35f56c44f83227c6e66\"\n\n[[constraint]]\n  name = \"github.com/spf13/viper\"\n  revision = \"382f87b929b84ce13e9c8a375a4b217f224e6c65\"\n\n[[constraint]]\n  name = \"golang.org/x/oauth2\"\n  revision = \"442624c9ec9243441e83b374a9e22ac549b5c51d\"\n\n[[constraint]]\n  name = \"gopkg.in/cheggaaa/pb.v1\"\n  version = \"=1.0.13\"\n\n# Get all dependencies for containers/image which is used for OCI image chaching\n[[constraint]]\n  name = \"github.com/containers/image\"\n  revision = \"5cc7850824afe2b4fb016f8906666b358c50dc31\"\n\n[[constraint]]\n  name = \"github.com/opencontainers/runc\"\n  revision = \"6b1d0e76f239ffb435445e5ae316d2676c07c6e3\"\n\n[[constraint]]\n  name = \"github.com/docker/go-connections\"\n  revision = \"7beb39f0b969b075d1325fecb092faf27fd357b6\"\n\n[[override]]\n  name = \"github.com/containers/storage\"\n  revision = \"68332c059156eae970a03245cfcd4d717fb66ecd\"\n\n# Use override for docker/docker and docker/distribution to ensure we get the specfied version.\n# In particular we need a version which uses the altest logrus\n[[override]]\n  name = \"github.com/docker/docker\"\n  revision = \"da99009bbb1165d1ac5688b5c81d2f589d418341\"\n\n[[override]]\n  name = \"github.com/docker/distribution\"\n  revision = \"5f6282db7d65e6d72ad7c2cc66310724a57be716\"\n\n[[constraint]]\n  name = \"github.com/opencontainers/image-spec\"\n  version = \"=v1.0.1\"\n\n[[constraint]]\n  name = \"gopkg.in/yaml.v2\"\n  revision = \"a3f3340b5840cee44f372bddb5880fcbc419b46a\"\n\n[[constraint]]\n  name = \"github.com/pborman/uuid\"\n  revision = \"1b00554d822231195d1babd97ff4a781231955c9\"\n\n[[constraint]]\n  name = \"golang.org/x/crypto\"\n  revision = \"b080dc9a8c480b08e698fb1219160d598526310f\"\n\n[[constraint]]\n  name = \"github.com/sirupsen/logrus\"\n  version = \"=v1.0.0\"\n\n[[constraint]]\n  name = \"github.com/gorilla/mux\"\n  revision = \"94e7d24fd285520f3d12ae998f7fdd6b5393d453\"\n\n[[constraint]]\n  name = \"github.com/docker/libtrust\"\n  revision = \"aabc10ec26b754e797f9028f4589c5b7bd90dc20\"\n\n[[constraint]]\n  name = \"github.com/ghodss/yaml\"\n  revision = \"04f313413ffd65ce25f2541bfd2b2ceec5c0908c\"\n\n[[constraint]]\n  name = \"github.com/vbatts/tar-split\"\n  version = \"=v0.10.2\"\n\n[[constraint]]\n  name = \"golang.org/x/sys\"\n  branch = \"master\"\n\n[[constraint]]\n  name = \"github.com/opencontainers/go-digest\"\n  revision = \"aa2ec055abd10d26d539eb630a92241b781ce4bc\"\n\n[[constraint]]\n  name = \"github.com/stretchr/testify\"\n  version = \"=v1.2.0\"\n\n[[constraint]]\n  name = \"github.com/pkg/sftp\"\n  version = \"1.0.0\"\n\n[[constraint]]\n  name = \"github.com/mitchellh/go-homedir\"\n  revision = \"b8bc1bf767474819792c23f32d8286a45736f1c6\"\n\n[[constraint]]\n  name = \"github.com/elazarl/goproxy\"\n  revision = \"93c365f5468fdbc21f2d55a7e39cc4bced996971\"\n  source = \"github.com/gbraad/goproxy\"\n\n[[constraint]]\n  name = \"github.com/anjannath/systray\"\n  revision = \"26ec25aa9aaa5a0142dfe61525a604914795e424\"\n\n[[constraint]]\n  name = \"github.com/zalando/go-keyring\"\n  revision = \"6d81c293b3fbc8a9b1bcf4bc9c167c2e1d1f52cf\"\n[[constraint]]\n  name = \"github.com/fsnotify/fsnotify\"\n  revision = \"c2828203cd70a50dcccfb2761f8b1f8ceef9a8e9\"\n\n[prune]\n  go-tests = true\n  non-go = true\n  unused-packages = true\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.107421875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2016 The Kubernetes Authors All rights reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 16.1650390625,
          "content": "# Copyright 2016 The Kubernetes Authors All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Various versions - Minishift, default OpenShift, default CentOS ISO\nMINISHIFT_VERSION = 1.34.3\nOPENSHIFT_VERSION = v3.11.0\nCENTOS_ISO_VERSION = v1.17.0\nCOMMIT_SHA=$(shell git rev-parse --short HEAD)\n\n# Go and compilation related variables\nBUILD_DIR ?= out\nINTEGRATION_TEST_DIR = $(CURDIR)/$(BUILD_DIR)/test-run\n\nGOOS ?= $(shell go env GOOS)\nGOARCH ?= $(shell go env GOARCH)\nORG := github.com/minishift\nREPOPATH ?= $(ORG)/minishift\nifeq ($(GOOS),windows)\n\tIS_EXE := .exe\nendif\nMINISHIFT_BINARY ?= $(GOPATH)/bin/minishift$(IS_EXE)\nTIMEOUT ?= 10800s\nPACKAGES := go list ./... | grep -v /vendor | grep -v /out\nSOURCE_DIRS = cmd pkg test\n\n# defines non-default shell name to be used in godog steps which use instance of shell\nTEST_WITH_SPECIFIED_SHELL ?=\n\n# Linker flags\nVERSION_VARIABLES := -X $(REPOPATH)/pkg/version.minishiftVersion=$(MINISHIFT_VERSION) \\\n\t-X $(REPOPATH)/pkg/version.centOsIsoVersion=$(CENTOS_ISO_VERSION) \\\n\t-X $(REPOPATH)/pkg/version.openshiftVersion=$(OPENSHIFT_VERSION) \\\n\t-X $(REPOPATH)/pkg/version.commitSha=$(COMMIT_SHA)\nLDFLAGS_SYSTEMTRAY := $(VERSION_VARIABLES) -s -w\nLDFLAGS := $(LDFLAGS_SYSTEMTRAY) -extldflags='-static'\n# Build tags atm mainly required to compile containers/image from which we only need OCI and Docker daemon transport. See issue #952\nBUILD_TAGS=containers_image_openpgp containers_image_ostree_stub exclude_graphdriver_btrfs exclude_graphdriver_devicemapper exclude_graphdriver_overlay containers_image_storage_stub\n# Systemtray build tag used to exclude the tray source files from building\nBUILD_TAGS_SYSTEMTRAY=$(BUILD_TAGS) systemtray\n\n# Setup for go-bindata to include binary assets\nADDON_ASSETS = $(CURDIR)/addons\nADDON_BINDATA_DIR = $(CURDIR)/$(BUILD_DIR)/bindata\nADDON_ASSET_FILE = $(ADDON_BINDATA_DIR)/addon_assets.go\n\n# Setup for the docs tasks\nDOCS_BUILDER_IMAGE = minishift/minishift-docs-builder:1.0.1\nLOCAL_DOCS_DIR ?= $(CURDIR)/docs\nCONTAINER_DOCS_DIR = /minishift-docs\nDOCS_SYNOPISIS_DIR = docs/source/_tmp\nDOCS_UID ?= $(shell id -u)\nDOC_VARIABLES = -e OPENSHIFT_VERSION=$(OPENSHIFT_VERSION) -e MINISHIFT_VERSION=$(MINISHIFT_VERSION) -e CENTOS_ISO_VERSION=$(CENTOS_ISO_VERSION)\n\n# MISC\nSTART_COMMIT_MESSAGE_VALIDATION = 80f5d01133f4e662f0d84100836fad07d29ea329\n\n# Check that given variables are set and all have non-empty values,\n# die with an error otherwise.\n#\n# Params:\n#   1. Variable name(s) to test.\n#   2. (optional) Error message to print.\ncheck_defined = \\\n    $(strip $(foreach 1,$1, \\\n        $(call __check_defined,$1,$(strip $(value 2)))))\n__check_defined = \\\n    $(if $(value $1),, \\\n      $(error Undefined $1$(if $2, ($2))))\n\n# Start of the actual build targets\n\n.PHONY: $(GOPATH)/bin/minishift$(IS_EXE)\n$(GOPATH)/bin/minishift$(IS_EXE): $(ADDON_ASSET_FILE) ## Builds the binary into $GOPATH/bin\n\tgo install -tags \"$(BUILD_TAGS_SYSTEMTRAY)\" -pkgdir=$(ADDON_BINDATA_DIR) -ldflags=\"$(VERSION_VARIABLES)\" ./cmd/minishift\n\n.PHONY: vendor\nvendor:\n\tdep ensure -v\n\n$(ADDON_ASSET_FILE): $(GOPATH)/bin/go-bindata ## Compiles the built-in add-on into the binary using go-bindata\n\t@mkdir -p $(ADDON_BINDATA_DIR)\n\tgo-bindata $(GO_BINDATA_DEBUG) -prefix $(ADDON_ASSETS) -o $(ADDON_ASSET_FILE) -pkg bindata $(ADDON_ASSETS)/...\n\n$(BUILD_DIR)/$(GOOS)-$(GOARCH):\n\tmkdir -p $(BUILD_DIR)/$(GOOS)-$(GOARCH)\n\n$(BUILD_DIR)/$(GOOS)-$(GOARCH)/systemtray:\n\tmkdir -p $(BUILD_DIR)/$(GOOS)-$(GOARCH)/systemtray\n\n$(BUILD_DIR)/darwin-amd64/minishift: $(ADDON_ASSET_FILE) $(BUILD_DIR)/$(GOOS)-$(GOARCH) ## Cross compiles the darwin executable and places it in $(BUILD_DIR)/darwin-amd64/minishift\n\tCGO_ENABLED=0 GOARCH=amd64 GOOS=darwin go build -tags \"$(BUILD_TAGS_SYSTEMTRAY)\" -pkgdir=$(ADDON_BINDATA_DIR) --installsuffix cgo -ldflags=\"$(LDFLAGS)\" -o $(BUILD_DIR)/darwin-amd64/minishift ./cmd/minishift\n\n$(BUILD_DIR)/linux-amd64/minishift: $(ADDON_ASSET_FILE) $(BUILD_DIR)/$(GOOS)-$(GOARCH) ## Cross compiles the linux executable and places it in $(BUILD_DIR)/linux-amd64/minishift\n\tCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -tags \"$(BUILD_TAGS_SYSTEMTRAY)\" -pkgdir=$(ADDON_BINDATA_DIR) --installsuffix cgo -ldflags=\"$(LDFLAGS)\" -o $(BUILD_DIR)/linux-amd64/minishift ./cmd/minishift\n\n$(BUILD_DIR)/windows-amd64/minishift.exe: $(ADDON_ASSET_FILE) $(BUILD_DIR)/$(GOOS)-$(GOARCH) ## Cross compiles the windows executable and places it in $(BUILD_DIR)/windows-amd64/minishift\n\tCGO_ENABLED=0 GOARCH=amd64 GOOS=windows go build -tags \"$(BUILD_TAGS_SYSTEMTRAY)\" -pkgdir=$(ADDON_BINDATA_DIR) --installsuffix cgo -ldflags=\"$(LDFLAGS)\" -o $(BUILD_DIR)/windows-amd64/minishift.exe ./cmd/minishift\n\n$(BUILD_DIR)/darwin-amd64/systemtray/minishift: $(ADDON_ASSET_FILE) $(BUILD_DIR)/$(GOOS)-$(GOARCH)/systemtray ## Cross compiles the darwin executable with systemtray\n\tCGO_ENABLED=1 GOARCH=amd64 GOOS=darwin go build -tags \"$(BUILD_TAGS)\" -pkgdir=$(ADDON_BINDATA_DIR) --installsuffix cgo -ldflags=\"$(LDFLAGS_SYSTEMTRAY)\" -o $(BUILD_DIR)/darwin-amd64/systemtray/minishift ./cmd/minishift\n\n$(BUILD_DIR)/windows-amd64/systemtray/minishift.exe: $(ADDON_ASSET_FILE) $(BUILD_DIR)/$(GOOS)-$(GOARCH)/systemtray ## Cross compiles the windows executable with systemtray\n\tCGO_ENABLED=0 GOARCH=amd64 GOOS=windows go build -tags \"$(BUILD_TAGS)\" -pkgdir=$(ADDON_BINDATA_DIR) --installsuffix cgo -ldflags=\"$(LDFLAGS_SYSTEMTRAY)\" -o $(BUILD_DIR)/windows-amd64/systemtray/minishift.exe ./cmd/minishift\n\n$(GOPATH)/bin/gh-release:\n\tgo get -u github.com/progrium/gh-release/...\n\n$(GOPATH)/bin/github-release:\n\tgo get -u github.com/aktau/github-release/...\n\n$(GOPATH)/bin/go-bindata:\n\tgo get -u github.com/jteeuwen/go-bindata/...\n\n$(GOPATH)/bin/git-validation:\n\tgo get -u github.com/vbatts/git-validation/...\n\n.PHONY: build_docs_container\nbuild_docs_container: ## Builds the image for the documentation build\n\tcd docs && docker build -t $(DOCS_BUILDER_IMAGE) .\n\n.PHONY: push_docs_container\npush_docs_container: build_docs_container ## Pushes the documentation build image to Docker Hub\n\tcd docs && docker push $(DOCS_BUILDER_IMAGE)\n\n.PHONY: gen_adoc_tar\ngen_adoc_tar: clean_docs synopsis_docs ## Generates tarball of AsciiDoc sources for integration into docs.okd.io\n\tcd docs && docker run -u $(DOCS_UID) $(DOC_VARIABLES) -tiv $(LOCAL_DOCS_DIR):$(CONTAINER_DOCS_DIR):Z $(DOCS_BUILDER_IMAGE) adoc_tar\n\n.PHONY: gen_docs\ngen_docs: synopsis_docs ## Generates the documentation\n\tcd docs && docker run -u $(DOCS_UID) $(DOC_VARIABLES) -tiv $(LOCAL_DOCS_DIR):$(CONTAINER_DOCS_DIR):Z $(DOCS_BUILDER_IMAGE) gen\n\n.PHONY: clean_docs\nclean_docs:  ## Clean the documentation\n\tcd docs && docker run -u $(DOCS_UID) $(DOC_VARIABLES) -tiv $(LOCAL_DOCS_DIR):$(CONTAINER_DOCS_DIR):Z $(DOCS_BUILDER_IMAGE) clean\n\n.PHONY: serve_docs\nserve_docs: synopsis_docs ## Builds and serves the documentation using Middleman on port 4567\n\tcd docs && docker run -u $(DOCS_UID) $(DOC_VARIABLES) -p 35729:35729 -p 4567:4567 -tiv $(LOCAL_DOCS_DIR):$(CONTAINER_DOCS_DIR):Z $(DOCS_BUILDER_IMAGE) serve[--watcher-force-polling]\n\n.PHONY: link_check_docs\nlink_check_docs: gen_docs ## Checks the documentation for broken links\n\tcd docs && docker run -u $(DOCS_UID) $(DOC_VARIABLES) -tiv $(LOCAL_DOCS_DIR):$(CONTAINER_DOCS_DIR):Z $(DOCS_BUILDER_IMAGE) link_check\n\n$(DOCS_SYNOPISIS_DIR)/*.md: $(ADDON_ASSET_FILE)\n\t@# https://github.com/golang/go/issues/15038#issuecomment-207631885 ( CGO_ENABLED=0 )\n\tDOCS_SYNOPISIS_DIR=$(DOCS_SYNOPISIS_DIR) CGO_ENABLED=0 go run -tags \"$(BUILD_TAGS_SYSTEMTRAY) gendocs\" -ldflags=\"$(LDFLAGS)\" gen_help_text.go\n\n.PHONY: synopsis_docs\nsynopsis_docs: $(DOCS_SYNOPISIS_DIR)/*.md ## Builds the Markdown command synopsis\n\n.PHONY: prerelease\nprerelease: clean fmtcheck test cross ## Pre-release target to verify tests pass and style requirements are met\n\t$(eval files = $(shell ./scripts/boilerplate/boilerplate.py --rootdir . --boilerplate-dir ./scripts/boilerplate | grep -v vendor))\n\t@if test \"$(files)\" != \"\"; then \\\n\t\techo \"The following files don't pass the boilerplate checks:\"; \\\n\t\techo $(files); \\\n\t\texit 1; \\\n\tfi\n\n.PHONY: systemtray\nsystemtray: $(ADDON_ASSET_FILE)\n\tgo install -tags \"$(BUILD_TAGS)\" -pkgdir=$(ADDON_BINDATA_DIR) -ldflags=\"$(VERSION_VARIABLES)\" ./cmd/minishift\n\n.PHONY: cross_systemtray\ncross_systemtray: clean $(BUILD_DIR)/darwin-amd64/systemtray/minishift $(BUILD_DIR)/windows-amd64/systemtray/minishift.exe\n\n.PHONY: release\nrelease: clean $(GOPATH)/bin/gh-release cross ## Create release and upload to GitHub\n\tmkdir -p release\n\n\t@mkdir -p $(BUILD_DIR)/minishift-$(MINISHIFT_VERSION)-darwin-amd64\n\t@cp LICENSE README.adoc $(BUILD_DIR)/darwin-amd64/minishift $(BUILD_DIR)/minishift-$(MINISHIFT_VERSION)-darwin-amd64\n\ttar -zcf release/minishift-$(MINISHIFT_VERSION)-darwin-amd64.tgz -C $(BUILD_DIR) minishift-$(MINISHIFT_VERSION)-darwin-amd64/\n\n\t@mkdir -p $(BUILD_DIR)/minishift-$(MINISHIFT_VERSION)-linux-amd64\n\t@cp LICENSE README.adoc $(BUILD_DIR)/linux-amd64/minishift $(BUILD_DIR)/minishift-$(MINISHIFT_VERSION)-linux-amd64\n\ttar -zcf release/minishift-$(MINISHIFT_VERSION)-linux-amd64.tgz -C $(BUILD_DIR) minishift-$(MINISHIFT_VERSION)-linux-amd64/\n\n\t@mkdir -p $(BUILD_DIR)/minishift-$(MINISHIFT_VERSION)-windows-amd64\n\t@cp LICENSE README.adoc $(BUILD_DIR)/windows-amd64/minishift.exe $(BUILD_DIR)/minishift-$(MINISHIFT_VERSION)-windows-amd64\n\tcd $(BUILD_DIR) && zip -r $(CURDIR)/release/minishift-$(MINISHIFT_VERSION)-windows-amd64.zip minishift-$(MINISHIFT_VERSION)-windows-amd64\n\n\tgh-release checksums sha256\n\tgh-release create minishift/minishift $(MINISHIFT_VERSION) master v$(MINISHIFT_VERSION)\n\n.PHONY: release_systemtray## Works only in mac environment, export GITHUB_USER, GITHUB_TOKEN\nrelease_systemtray: clean $(GOPATH)/bin/github-release $(GOPATH)/bin/gh-release cross_systemtray ## Upload systemtray binaries to Github release\n\t$(call check_defined, GITHUB_USER, \"To upload systemtray bits to release you need to specify Github user.\")\n\t$(call check_defined, GITHUB_TOKEN, \"To upload systemtray bits you need to specify Github api token\")\n\tmkdir -p release\n\n\t@mkdir -p $(BUILD_DIR)/minishift-systemtray-$(MINISHIFT_VERSION)-darwin-amd64\n\t@cp LICENSE README.adoc $(BUILD_DIR)/darwin-amd64/systemtray/minishift $(BUILD_DIR)/minishift-systemtray-$(MINISHIFT_VERSION)-darwin-amd64\n\ttar -zcf release/minishift-systemtray-$(MINISHIFT_VERSION)-darwin-amd64.tgz -C $(BUILD_DIR) minishift-systemtray-$(MINISHIFT_VERSION)-darwin-amd64/\n\n\t@mkdir -p $(BUILD_DIR)/minishift-systemtray-$(MINISHIFT_VERSION)-windows-amd64\n\t@cp LICENSE README.adoc $(BUILD_DIR)/windows-amd64/systemtray/minishift.exe $(BUILD_DIR)/minishift-systemtray-$(MINISHIFT_VERSION)-windows-amd64\n\tcd $(BUILD_DIR) && zip -r $(CURDIR)/release/minishift-systemtray-$(MINISHIFT_VERSION)-windows-amd64.zip minishift-systemtray-$(MINISHIFT_VERSION)-windows-amd64\n\n\tgh-release checksums sha256\n\n\tgithub-release upload --repo minishift --tag v$(MINISHIFT_VERSION) --name minishift-systemtray-$(MINISHIFT_VERSION)-darwin-amd64.tgz \\\n\t\t--file release/minishift-systemtray-$(MINISHIFT_VERSION)-darwin-amd64.tgz\n\tgithub-release upload --repo minishift --tag v$(MINISHIFT_VERSION) --name minishift-systemtray-$(MINISHIFT_VERSION)-darwin-amd64.tgz.sha256 \\\n\t\t--file release/minishift-systemtray-$(MINISHIFT_VERSION)-darwin-amd64.tgz.sha256\n\n\tgithub-release upload --repo minishift --tag v$(MINISHIFT_VERSION) --name minishift-systemtray-$(MINISHIFT_VERSION)-windows-amd64.zip \\\n\t\t--file release/minishift-systemtray-$(MINISHIFT_VERSION)-windows-amd64.zip\n\tgithub-release upload --repo minishift --tag v$(MINISHIFT_VERSION) --name minishift-systemtray-$(MINISHIFT_VERSION)-windows-amd64.zip.sha256 \\\n\t\t--file release/minishift-systemtray-$(MINISHIFT_VERSION)-windows-amd64.zip.sha256\n\n.PHONY: ci_release\nci_release: ## Trigger a release via CentOS CI. Needs API_KEY and RELEASE_VERSION\n\t$(call check_defined, API_KEY, \"To trigger the CentOS CI release build you need to specify the CentOS CI API key.\")\n\t$(call check_defined, RELEASE_VERSION, \"You need to specify the version you want to release.\")\n\n\tcurl -s -H \"$(shell curl -s --user 'minishift:$(API_KEY)' 'https://ci.centos.org//crumbIssuer/api/xml?xpath=concat(//crumbRequestField,\":\",//crumb)')\" \\\n\t-X POST https://ci.centos.org/job/minishift-release/build --user 'minishift:$(API_KEY)' \\\n\t--data-urlencode json='{\"parameter\": [{\"name\":\"RELEASE_VERSION\", \"value\":'\"$(RELEASE_VERSION)\"'}, {\"name\":\"SKIP_INTEGRATION_TEST\", \"value\":\"false\"}]}'\n\n.PHONY: ci_release_systemtray\nci_release_systemtray: ## Trigger upload of systemtray binaries from circle CI. Needs CIRCLECI_API_KEY and RELEASE_VERSION\n\t$(call check_defined, CIRCLECI_API_KEY, \"To trigger the Circle CI release build you need to specify the Circle CI API key.\")\n\t$(call check_defined, RELEASE_VERSION, \"You need to specify the version you want to release.\")\n\t\n\tcurl -s -u '$(CIRCLECI_API_KEY):' -d 'build_parameters[CIRCLE_JOB]=release' -d 'build_parameters[RELEASE_VERSION]=$(RELEASE_VERSION)' \\\n\t\thttps:/circleci.com/api/v1.1/project/github/minishift/minishift/tree/master\n\n.PHONY: cross ## Cross compiles all binaries\ncross: $(BUILD_DIR)/darwin-amd64/minishift $(BUILD_DIR)/linux-amd64/minishift $(BUILD_DIR)/windows-amd64/minishift.exe\n\n.PHONY: clean ## Remove all build artifacts\nclean:\n\trm -rf $(GOPATH)/pkg/$(GOOS)_$(GOARCH)/$(ORG)\n\trm -rf $(BUILD_DIR)\n\trm -rf release\n\trm -f  $(DOCS_SYNOPISIS_DIR)/*.md\n\n.PHONY: clean_bindata ## Remove $(ADDON_BINDATA_DIR)\nclean_bindata:\n\trm -rf $(ADDON_BINDATA_DIR)\n\n.PHONY: test\ntest: $(ADDON_ASSET_FILE)  ## Run unit tests\n\t@go test -v -tags \"$(BUILD_TAGS_SYSTEMTRAY)\" -ldflags=\"$(VERSION_VARIABLES)\" $(shell $(PACKAGES))\n\n.PHONY: coverage\ncoverage: $(ADDON_ASSET_FILE)\n\trm -f out/coverage.txt\n\t@go test -v -tags \"$(BUILD_TAGS_SYSTEMTRAY)\" -ldflags=\"$(VERSION_VARIABLES)\" -coverprofile=out/coverage.txt -covermode=atomic $(shell $(PACKAGES))\n\n.PHONY: integration ## Run integration tests (quick and minimal)\nintegration: GODOG_OPTS = --tags=quick\\&\\&~disabled\nintegration: $(MINISHIFT_BINARY)\n\tmkdir -p $(INTEGRATION_TEST_DIR)\n\tgo test -timeout $(TIMEOUT) $(REPOPATH)/test/integration --tags=integration -v -args --test-dir $(INTEGRATION_TEST_DIR) --binary $(MINISHIFT_BINARY) \\\n\t--run-before-feature=\"$(RUN_BEFORE_FEATURE)\" --test-with-specified-shell=\"$(TEST_WITH_SPECIFIED_SHELL)\" --copy-oc-from=\"$(COPY_OC_FROM)\" $(GODOG_OPTS)\n\n.PHONY: integration_all ## Run all integration tests\nintegration_all: GODOG_OPTS = --tags=~disabled\nintegration_all: $(MINISHIFT_BINARY)\n\tmkdir -p $(INTEGRATION_TEST_DIR)\n\tgo test -timeout 25000s $(REPOPATH)/test/integration --tags=integration -v -args --test-dir $(INTEGRATION_TEST_DIR) --binary $(MINISHIFT_BINARY) \\\n\t--run-before-feature=\"$(RUN_BEFORE_FEATURE)\" --test-with-specified-shell=\"$(TEST_WITH_SPECIFIED_SHELL)\" --copy-oc-from=\"$(COPY_OC_FROM)\" $(GODOG_OPTS)\n\n.PHONY: integration_pr ## Run integration tests for pull request (skip more specialized tests)\nintegration_pr: GODOG_OPTS = --tags=core\\&\\&~disabled\nintegration_pr: $(MINISHIFT_BINARY)\n\tmkdir -p $(INTEGRATION_TEST_DIR)\n\tgo test -timeout $(TIMEOUT) $(REPOPATH)/test/integration --tags=integration -v -args --test-dir $(INTEGRATION_TEST_DIR) --binary $(MINISHIFT_BINARY) \\\n\t--run-before-feature=\"$(RUN_BEFORE_FEATURE)\" --test-with-specified-shell=\"$(TEST_WITH_SPECIFIED_SHELL)\" --copy-oc-from=\"$(COPY_OC_FROM)\" $(GODOG_OPTS)\n\n.PHONY: fmt\nfmt: ## Format source using gofmt\n\t@gofmt -l -s -w $(SOURCE_DIRS)\n\n.PHONY: fmtcheck\nfmtcheck: ## Checks for style violation using gofmt\n\t@gofmt -l -s $(SOURCE_DIRS) | grep \".*\\.go\"; if [ \"$$?\" = \"0\" ]; then exit 1; fi\n\n.PHONY: validate_commits\nvalidate_commits: $(GOPATH)/bin/git-validation ## Validates commit messages match pattern ^(Issue #[0-9]+ .*|cut v[0-9]+\\.[0-9]+\\.[0-9]+)\n\t@# Need to add $$ to avoid shell interpretation/evaluation\n\tgit-validation -q -run short-subject,message_regexp='^(Issue #[0-9]+[\\s]*.*|cut v[0-9]+\\.[0-9]+\\.[0-9]+)$$' -range $(START_COMMIT_MESSAGE_VALIDATION)...\n\n.PHONY: help\nhelp: ## Prints this help\n\t@grep -E '^[^.]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[36m%-40s\\033[0m %s\\n\", $$1, $$2}'\n"
        },
        {
          "name": "README.adoc",
          "type": "blob",
          "size": 3.42578125,
          "content": "[[minishift]]\n= Minishift\n:icons:\n:toc: macro\n:toc-title:\n:toclevels: 1\n\ntoc::[]\n\n[[welcome-to-minishift]]\n== Welcome to Minishift!\n\nMinishift is a tool that helps you run OpenShift locally by running a\nsingle-node OpenShift cluster inside a VM. You can try out OpenShift or\ndevelop with it, day-to-day, on your local host.\n\n[NOTE]\n====\nMinishift runs OpenShift 3.x clusters. Due to different installation methods, OpenShift 4.x clusters are not supported. To run OpenShift 4.x locally, use https://github.com/code-ready/crc[CodeReady Containers].\n====\n\nMinishift uses https://github.com/docker/machine/tree/master/libmachine[libmachine] for\nprovisioning VMs, and https://github.com/openshift/origin[OpenShift Origin] for running the cluster. The code base is forked from the https://github.com/kubernetes/minikube[Minikube] project.\n\nhttps://travis-ci.org/minishift/minishift[image:https://secure.travis-ci.org/minishift/minishift.png[Build Status]]\nhttps://ci.appveyor.com/project/minishift-bot/minishift/branch/master[image:https://ci.appveyor.com/api/projects/status/o0mha7mpanp7dpyo/branch/master?svg=true[Build status]]\nhttps://circleci.com/gh/minishift/minishift/tree/master[image:https://circleci.com/gh/minishift/minishift/tree/master.svg?style=svg[Build status]]\nhttps://ci.centos.org/job/minishift/[image:https://ci.centos.org/buildStatus/icon?job=minishift[Build Status]]\n\n'''''\n\n[[getting-started]]\n== Getting started\n\nTo download the latest binary and review release notes, see\nthe https://github.com/minishift/minishift/releases[Minishift releases] page.\n\nMinishift requires a hypervisor to start the virtual machine on which the OpenShift cluster\nis provisioned. Make sure that the hypervisor of your choice is installed and enabled on\nyour system before you start Minishift.\n\nFor detailed installation instructions for Minishift and the required dependencies, see\nthe https://docs.okd.io/latest/minishift/getting-started/index.html[Getting started] documentation.\n\n[[documentation]]\n== Documentation\n\nMinishift documentation is published as a part of the\nOpenShift Origin link:https://docs.okd.io/latest[documentation library].\nCheck out the latest official Minishift documentation for information about getting started,\nusing, and contributing to Minishift:\n\n- https://docs.okd.io/latest/minishift/getting-started/index.html[Getting started with Minishift]\n- https://docs.okd.io/latest/minishift/using/index.html[Using Minishift]\n- https://docs.okd.io/latest/minishift/contributing/index.html[Developing and contributing to Minishift]\n- https://docs.okd.io/latest/minishift/command-ref/minishift.html[Command Reference]\n\nIn addition, you can review the release notes and project roadmap here on GitHub:\n\n- https://github.com/minishift/minishift/releases[Release Notes]\n- link:./ROADMAP.adoc[Roadmap]\n\n[[community]]\n== Community\n\nContributions, questions, and comments are all welcomed and encouraged!\n\nYou can reach the Minishift community by:\n\n- Signing up to our https://lists.minishift.io/admin/lists/minishift.lists.minishift.io[mailing list]\n- Joining the #minishift channel on https://freenode.net/[Freenode IRC]\n\nFor information about contributing, building, and releasing Minishift, as well as guidelines for\nwriting documentation, see the https://docs.okd.io/latest/minishift/contributing/index.html[Contributing to Minishift] topics.\n\nIf you want to contribute, make sure to follow the link:CONTRIBUTING.adoc[contribution guidelines]\nwhen you open issues or submit pull requests.\n"
        },
        {
          "name": "ROADMAP.adoc",
          "type": "blob",
          "size": 4.783203125,
          "content": "[[minishift-roadmap]]\n= Minishift Roadmap\n:icons:\n:toc: macro\n:toc-title:\n:toclevels: 1\n\ntoc::[]\n\n[[vision]]\n== Vision\n\n*Run OpenShift locally.*\n\nMinishift's goal is to become the default choice for running a\nsingle-node OpenShift cluster on your local host. Either for evaluation\npurposes or for ongoing development.\n\nDue to the fact that Minishift builds on OpenShift\nhttps://github.com/openshift/origin/blob/release-3.11/docs/cluster_up_down.md[cluster up],\nMinishift's focus lies on providing more value to the basic\n_cluster up_ provisioning. This includes virtual machine creation and\nmanagement, making it easier to configure OpenShift in precisely the way\nyou want and providing useful shortcut commands for making your work\neasier.\n\n[[issue-tracking]]\n== Issue tracking\n\nThe Minishift team currently uses the GitHub\nhttps://github.com/minishift/minishift/issues[issue tracker] to plan its\nwork. Issues are generally categorized into __tasks__, _bugs_ and\n__features__. Looking at the latter,\n__https://github.com/minishift/minishift/issues?q=is%3Aissue+is%3Aopen+label%3Akind%2Ffeature[features]__,\nis probably the best way to get an overview where Minishift is heading.\n\n[[upcoming-versions]]\n== Upcoming versions\n\nThe following sections give a high level overview of the envisioned\nfeatures and how they fit into upcoming releases. Of course this is\nsubject to change and actual version names might change as well, because\nhttp://semver.org/[semantic versioning] is used to determine the final\nversion name of a given release.\n\n[[minishift-100]]\n=== Minishift 1.0.0\n\n- [x] Ability to select the OpenShift version of the cluster https://github.com/minishift/minishift/issues/316[#141]\n- [x] HTTP Proxy Support https://github.com/minishift/minishift/issues/90[#90]\n- [x] Exposure of the OpenShift registry https://github.com/minishift/minishift/issues/254[#254]\n- [x] Ability to configure/patch OpenShift's master and node configuration https://github.com/minishift/minishift/issues/276[#276]\n- [x] Ability to customize cluster (for example, adding templates and imagestreams) https://github.com/minishift/minishift/issues/177[#177]\n- [x] Add 'minishift' context https://github.com/minishift/minishift/issues/359[#359]\n- [x] Enable ability to use persistent volumes https://github.com/minishift/minishift/issues/389[#389]\n\n[[minishift-110]]\n=== Minishift 1.1.0\n\n- [x] Add update command  https://github.com/minishift/minishift/issues/72[#72]\n\n[[minishift-120]]\n=== Minishift 1.2.0\n\n- [x] Implement caching of OpenShift image https://github.com/minishift/minishift/issues/143[#143]\n\n[[minishift-130]]\n=== Minishift 1.3.0\n\n- [x] Incorporate NodePort into minishift openshift service https://github.com/minishift/minishift/issues/1106[#1106]\n\n[[minishift-140]]\n=== Minishift 1.4.0\n- [x] Improve feedback to the user during startup  https://github.com/minishift/minishift/issues/485[#485]\n\n[[minishift-160]]\n=== Minishift 1.6.0\n- [x] Ability to create and manage multiple clusters https://github.com/minishift/minishift/issues/126[#126]\n\n[[minishift-170]]\n=== Minishift 1.7.0\n- [x] Assign Static IP address for Hyper-V https://github.com/minishift/minishift/issues/1316[#1316]\n- [x] Add support for Minikube ISO https://github.com/minishift/minishift/issues/1058[#1058]\n\n[[minishift-180]]\n=== Minishift 1.8.0\n- [x] Add a minimum Openshift version for executing add-ons https://github.com/minishift/minishift/issues/1134[#1134]\n\n[[minishift-190]]\n=== Minishift 1.9.0\n- [x] Provide notation for default value for addon-envs https://github.com/minishift/minishift/issues/1135[#1135]\n- [ ] Ability to use your own certificates for the cluster https://github.com/minishift/minishift/issues/391[#391]\n- [ ] Global cache which can be shared among profiles https://github.com/minishift/minishift/issues/1408[#1408]\n\n[[minishift-1100]]\n=== Minishift 1.10.0\n- [ ] Provide caching of docker images https://github.com/minishift/minishift/issues/952[#952]\n- [ ] Implement host folder mounts using sshfs https://github.com/minishift/minishift/issues/317[#317]\n\n[[minishift-1110]]\n=== Minishift 1.11.0\n- [ ] Add profile clone/copy command to reuse configs from existing profiles https://github.com/minishift/minishift/issues/1649[#1649]\n\n[[future]]\n=== Beyond Minishift 1.11.0\n- [ ] Use Minikube as dependency https://github.com/minishift/minishift/issues/1063[#1063]\n- [ ] Ability to manage users https://github.com/minishift/minishift/issues/390[#390]\n- [ ] Ability on running on existing Docker daemon https://github.com/minishift/minishift/issues/392[#392]\n- [ ] Ability interactively select OpenShift version https://github.com/minishift/minishift/issues/197[#197]\n- [ ] Ability to provide and use custom a host- and domain-name https://github.com/minishift/minishift/issues/201[#201]\n- [ ] Ability to pack&go your current Minishift configuration https://github.com/minishift/minishift/issues/397[#397]\n"
        },
        {
          "name": "addons",
          "type": "tree",
          "content": null
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 1.1240234375,
          "content": "# AppVeyor CI configuration for Minishift\n---\nversion: \"{build}\"\n\nclone_folder: C:\\gopath\\src\\github.com\\minishift\\minishift\n\nenvironment:\n  GOPATH: C:\\gopath\n  GOVERSION: 1.13.3\n\nplatform:\n- x64\n\ninstall:\n# Install the specific Go version.\n- rmdir c:\\go /s /q\n- appveyor DownloadFile https://storage.googleapis.com/golang/go%GOVERSION%.windows-amd64.msi\n- msiexec /i go%GOVERSION%.windows-amd64.msi /q\n# Dump some info\n- go version\n- go env\n# Install Godep and create a specific tmp path to avoid error with too long dir names\n- ps: mkdir \"$env:GOPATH\\bin\"\n- ps: wget 'https://github.com/golang/dep/releases/download/v0.4.1/dep-windows-amd64.exe' -OutFile \"$env:GOPATH\\bin\\dep.exe\"\n- set PATH=%PATH%;%GOPATH%\\bin\n- mkdir c:\\tmp\n# Use Chocolatey to install make\n- choco install make\n\nbuild_script:\n- make prerelease\n\nartifacts:\n  - path: out\\linux-amd64\\minishift\n    name: Linux minishift binary\n  - path: out\\darwin-amd64\\minishift\n    name: OS-X minishift binary\n  - path: out\\windows-amd64\\minishift.exe\n    name: Windows minishift binary\n\nnotifications:\n  - provider: Webhook\n    url: http://minibot.19cf262c.svc.dockerapp.io:9009/hubot/appveyor\n"
        },
        {
          "name": "centos_ci.sh",
          "type": "blob",
          "size": 14.4375,
          "content": "#!/bin/bash\n\n# Copyright (C) 2016 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Output command before executing\nset -x\n\n# Exit on error\nset -e\n\n# GitHub user\nREPO_OWNER=\"minishift\"\nLATEST=\"latest\"\n\n# Source environment variables of the jenkins slave\n# that might interest this worker.\nfunction load_jenkins_vars() {\n  if [ -e \"jenkins-env\" ]; then\n    cat jenkins-env \\\n      | grep -E \"(JENKINS_URL|GIT_BRANCH|GIT_COMMIT|BUILD_NUMBER|ghprbSourceBranch|ghprbActualCommit|BUILD_URL|ghprbPullId|GH_TOKEN|CICO_API_KEY|API_TOKEN|JOB_NAME|RELEASE_VERSION|GITHUB_TOKEN|REPO|BRANCH|SKIP_INTEGRATION_TEST|RH_REGISTRY_USERNAME|RH_REGISTRY_PASSWORD)=\" \\\n      | sed 's/^/export /g' \\\n      > ~/.jenkins-env\n    source ~/.jenkins-env\n  fi\n\n  echo 'CICO: Jenkins ENVs loaded'\n}\n\nfunction install_core_deps() {\n  # Install EPEL repo\n  yum -y install epel-release\n  # Get all the deps in\n  # We are installing golang from offical repository to make sure our downstream builds works as expected.\n  # CDK side golang always comes from the offical RHEL repository.\n  yum -y install gcc \\\n                 make \\\n                 tar \\\n                 zip \\\n                 git \\\n                 curl \\\n                 jq\n\n  echo 'CICO: Core dependencies installed'\n}\n\nfunction install_golang() {\n  yum -y install golang\n\n  echo 'CICO: Golang installed'\n}\n\n\nfunction install_kvm_virt() {\n  sudo yum -y install kvm \\\n                      qemu-kvm \\\n                      libvirt\n  # Start Libvirt\n  sudo systemctl start libvirtd\n  echo 'CICO: KVM hypervisor installed and started'\n\n  # Add minishift_ci to libvirt group\n  gpasswd -a minishift_ci libvirt && systemctl restart libvirtd\n}\n\nfunction install_docker() {\n  yum install -y docker\n  systemctl start docker\n\n  docker version\n  echo 'CICO: Docker installed and started'\n\n  # Add minishift_ci to docker group\n  groupadd docker && gpasswd -a minishift_ci docker && systemctl restart docker\n}\n\n# Create a docs user which has NOPASSWD sudoer role\nfunction prepare_ci_user() {\n  # 1000 as id of user in docker image (https://github.com/minishift/minishift/blob/master/docs/Dockerfile#L25)\n  groupadd -g 1000 -r minishift_ci && useradd -g minishift_ci -u 1000 minishift_ci\n  chmod +w /etc/sudoers && echo \"minishift_ci ALL=(ALL)    NOPASSWD: ALL\" >> /etc/sudoers && chmod -w /etc/sudoers\n\n  # Copy centos_ci.sh to newly created user home dir\n  cp centos_ci.sh /home/minishift_ci/\n  mkdir /home/minishift_ci/payload\n  # Copy minishift repo content into minishift_ci user payload directory for later use\n  cp -R . /home/minishift_ci/payload\n  chown -R minishift_ci:minishift_ci /home/minishift_ci/payload\n\n  # Copy the jenkins-env into minishift_ci home dir\n  cp ~/.jenkins-env /home/minishift_ci/jenkins-env\n}\n\n####### Below functions are executed by minishift_ci user\nfunction setup_kvm_docker_machine_driver() {\n  curl -L https://github.com/dhiltgen/docker-machine-kvm/releases/download/v0.10.0/docker-machine-driver-kvm-centos7 > docker-machine-driver-kvm && \\\n  chmod +x docker-machine-driver-kvm && sudo mv docker-machine-driver-kvm /usr/local/bin/docker-machine-driver-kvm\n  echo 'CICO: Setup KVM docker-machine driver setup successfully'\n}\n\nfunction setup_golang() {\n  # Show which version of golang in the offical repo.\n  go version\n  # Setup GOPATH\n  mkdir $HOME/gopath $HOME/gopath/src $HOME/gopath/bin $HOME/gopath/pkg\n  export GOPATH=$HOME/gopath\n  export PATH=$GOROOT/bin:$GOPATH/bin:$PATH\n}\n\nfunction setup_repo() {\n  # Setup minishift repo\n  mkdir -p $GOPATH/src/github.com/minishift\n  cp -r /home/minishift_ci/payload $GOPATH/src/github.com/minishift/minishift\n}\n\nfunction setup_godep() {\n  GODEP_OS_ARCH=`go env GOHOSTOS`-`go env GOHOSTARCH`\n  GODEP_TAG=v0.4.1\n  GODEP_LATEST_RELEASE_URL=\"https://github.com/golang/dep/releases/download/${GODEP_TAG}/dep-${GODEP_OS_ARCH}\"\n  mkdir /tmp/godep\n  curl -L ${GODEP_LATEST_RELEASE_URL} -o /tmp/godep/dep\n  chmod +x /tmp/godep/dep\n  export PATH=$PATH:/tmp/godep/\n}\n\nfunction prepare_repo() {\n  setup_golang;\n  setup_repo;\n  setup_godep;\n  echo \"CICO: Preparation complete\"\n}\n\nfunction install_docs_prerequisite_packages() {\n  # https://devops.profitbricks.com/tutorials/install-ruby-214-with-rvm-on-centos/\n  # Prerequisite packages\n  set +e # Temporary fix for rvm installation https://github.com/rvm/rvm/issues/4465\n  sudo yum install -y libyaml-devel \\\n                     readline-devel \\\n                     zlib-devel \\\n                     libffi-devel \\\n                     openssl-devel \\\n                     sqlite-devel \\\n                     java-1.7.0-openjdk-devel\n\n  # Install RVM\n  gpg2 --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB\n  curl -L get.rvm.io | bash -s stable\n  source ~/.profile\n  # Install Ruby\n  rvm install ruby-2.2.5\n  echo \"CICO: RVM and Ruby Installed\"\n\n  gem install ascii_binder -v 0.1.13\n  echo \"CICO: Ascii Binder Installed\"\n}\n\n########################################################\n# Exit with message on failure of last executed command\n# Arguments:\n#   $1 - Exit code of last executed command\n#   $2 - Error message\n########################################################\nfunction exit_on_failure() {\n  if [[ \"$1\" != 0 ]]; then\n    echo \"$2\"\n    exit 1\n  fi\n}\n\nfunction build_openshift_origin_docs() {\n  git clone https://github.com/openshift/openshift-docs\n  cd openshift-docs\n  mkdir minishift\n  cd minishift\n  cp $1 .\n  tar -xvf minishift-adoc.tar --strip 1\n  cat _topic_map.yml >> ../_topic_map.yml\n  cd ..\n  rake build\n  cd ..\n}\n\nfunction perform_artifacts_upload() {\n  set +x\n  # For PR build, GIT_BRANCH is set to branch name other than origin/master\n  if [[ \"$GIT_BRANCH\" = \"origin/master\" ]]; then\n    mkdir -p minishift/master/$BUILD_NUMBER/ minishift/master/$LATEST\n    cp -r out/*-amd64 minishift/master/$BUILD_NUMBER/\n    cp -r out/*-amd64 minishift/master/$LATEST/\n    # http://stackoverflow.com/a/22908437/1120530; Using --relative as --rsync-path not working\n    RSYNC_PASSWORD=$1 rsync -av --relative minishift/master minishift@artifacts.ci.centos.org::minishift/\n    echo \"Find Artifacts here http://artifacts.ci.centos.org/minishift/minishift/master/$BUILD_NUMBER .\"\n  else\n    mkdir -p minishift/pr/$ghprbPullId/\n    cp -r out/*-amd64 minishift/pr/$ghprbPullId/\n    # http://stackoverflow.com/a/22908437/1120530; Using --relative as --rsync-path not working\n    RSYNC_PASSWORD=$1 rsync -av --delete --relative minishift/pr/$ghprbPullId/ minishift@artifacts.ci.centos.org::minishift/\n    echo \"Find Artifacts here http://artifacts.ci.centos.org/minishift/minishift/pr/$ghprbPullId .\"\n  fi\n}\n\nfunction docs_tar_upload() {\n  set +x\n\n  version=$(cat docs/source/variables.adoc | cut -d' ' -f2 | head -n1)\n  mkdir -p minishift/docs/$version minishift/docs/$LATEST\n  cp docs/build/minishift-adoc.tar minishift/docs/$version/\n  cp docs/build/minishift-adoc.tar minishift/docs/$LATEST/\n  # http://stackoverflow.com/a/22908437/1120530; Using --relative as --rsync-path not working\n  RSYNC_PASSWORD=$1 rsync -av --relative minishift/docs minishift@artifacts.ci.centos.org::minishift/\n  echo \"Find docs tar here http://artifacts.ci.centos.org/minishift/minishift/docs/$LATEST.\"\n}\n\nfunction create_release_commit() {\n  # Create master branch as git clone in CI doesn't create it\n  git checkout -b master\n  # Bump version and commit\n  sed -i \"s|MINISHIFT_VERSION = .*|MINISHIFT_VERSION = $RELEASE_VERSION|\" Makefile\n  git add Makefile\n  git commit -m \"cut v$RELEASE_VERSION\"\n  git push https://$REPO_OWNER:$GITHUB_TOKEN@github.com/$REPO_OWNER/minishift master\n}\n\nfunction add_release_notes() {\n  release_id=$(curl -s \"https://api.github.com/repos/${REPO_OWNER}/minishift/releases\" | jq --arg release \"v$RELEASE_VERSION\" -r ' .[] | if .name == $release then .id else empty end')\n\n  if [[ \"$release_id\" != \"\" ]]; then\n    MILESTONE_ID=`curl -s 'https://api.github.com/repos/minishift/minishift/milestones?state=all&page=1&per_page=100'  | jq --arg version \"v$RELEASE_VERSION\" -r ' .[] | if .title == $version then .number else empty end'`\n\n    if [[ \"$MILESTONE_ID\" != \"\" ]]; then\n      # Generate required json payload for release note\n      ./scripts/release/issue-list.sh -r minishift -m $MILESTONE_ID | jq -Rn 'inputs + \"\\n\"' | jq -s '{body:  add }' > json_payload.json\n      # Add release notes\n      curl -H \"Content-Type: application/json\" -H \"Authorization: token $GITHUB_TOKEN\" \\\n           --data @json_payload.json https://api.github.com/repos/${REPO_OWNER}/minishift/releases/$release_id\n\n      echo \"Release notes of Minishift v$RELEASE_VERSION has been successfully updated. Find the release notes here https://github.com/${REPO_OWNER}/minishift/releases/tag/v$RELEASE_VERSION.\"\n    else\n      echo \"Failed to get milestone ID for Minishift v$RELEASE_VERSION. Use manual approach to update the release notes here https://github.com/${REPO_OWNER}/minishift/releases/tag/v$RELEASE_VERSION.\"\n    fi\n  else\n    return 1\n  fi\n}\n\nfunction setup_build_environment() {\n  load_jenkins_vars;\n  prepare_ci_user;\n  install_core_deps;\n  install_kvm_virt;\n  install_docker;\n  install_golang;\n  prepare_for_proxy;\n  runuser -l minishift_ci -c \"/bin/bash centos_ci.sh\"\n}\n\n#######################################################################\n# Publish Minishift documentation after integrating it with\n# OpenShift documentation\n# Arguments:\n#   $1 - Repo Owner\n#   $2 - Branch name\n#   $3 - Location on the artifact server where documentation is hosted\n######################################################################\nfunction perform_docs_publish() {\n  REPO=\"https://github.com/$1/minishift\"\n\n  git remote add remote-repo $REPO\n  git fetch remote-repo\n  git checkout -b docs-branch --track remote-repo/$2\n  git log -n 1 # Display last commit in log as reference\n\n  install_docs_prerequisite_packages;\n  make gen_adoc_tar\n  build_openshift_origin_docs $(pwd)/docs/build/minishift-adoc.tar;\n\n  mkdir -p $3\n  cp -r openshift-docs/_preview/openshift-origin $3/ # Copy the openshift-origin\n  # http://stackoverflow.com/a/22908437/1120530; Using --relative as --rsync-path not working\n  RSYNC_PASSWORD=$RSYNC_PASSWORD rsync -av --delete --relative $3/ minishift@artifacts.ci.centos.org::minishift/\n  echo \"Minishift documentation is hosted at http://artifacts.ci.centos.org/minishift/$3/openshift-origin/latest/minishift/index.html\"\n}\n\nfunction prepare_for_proxy() {\n  export INTEGRATION_PROXY_CUSTOM_PORT=8181 # needs to be an unused port\n  export INTEGRATION_DEFAULT_SSHFS_PORT=2022\n  firewall-cmd --zone=public --add-port=$INTEGRATION_PROXY_CUSTOM_PORT/tcp;\n  firewall-cmd --zone=public --add-port=$INTEGRATION_DEFAULT_SSHFS_PORT/tcp;\n}\n\nfunction perform_release() {\n  # Test everything before bumping the version\n  make prerelease\n  exit_on_failure \"$?\" \"Pre-release tests failed.\"\n\n  if [ \"$SKIP_INTEGRATION_TEST\" = false ]; then\n    MINISHIFT_VM_DRIVER=kvm make integration_pr\n    exit_on_failure \"$?\" \"Integration tests failed.\"\n  fi\n\n  #make link_check_docs # Test docs builds and all links are valid\n  #exit_on_failure \"$?\" \"Documentation build failed.\"\n\n  create_release_commit\n  exit_on_failure \"$?\" \"Unable to create release commit.\"\n\n  make release\n  exit_on_failure \"$?\" \"Failed to release Minishift v$RELEASE_VERSION. Try to release manually.\"\n  echo \"Minishift v$RELEASE_VERSION has been successfully released. Find the latest release here https://github.com/$REPO_OWNER/minishift/releases/tag/v$RELEASE_VERSION.\"\n\n  add_release_notes;\n  exit_on_failure \"$?\" \"Failed to update release notes of Minishift v$RELEASE_VERSION. Try to manually update the release notes here - https://github.com/${REPO_OWNER}/minishift/releases/tag/v$RELEASE_VERSION.\"\n\n  #make gen_adoc_tar\n  #exit_on_failure \"$?\" \"Documentation tarball build failed.\"\n\n  #docs_tar_upload $1\n  #exit_on_failure \"$?\" \"Failed to upload tar bundle for doc.openshift.org.\"\n\n  # Notify Minibot\n  MESSAGE=\"Minishift v$RELEASE_VERSION successfully released by https://ci.centos.org/job/minishift-release/$BUILD_NUMBER.\"\n  URL=\"https://github.com/$REPO_OWNER/minishift/releases/tag/v$RELEASE_VERSION\"\n  # Do not abort build if minibot service is inaccessible\n  curl http://minibot.19cf262c.svc.dockerapp.io:9009/hubot/centosci -H \"Content-Type: application/json\" -d '{\"payload\":{\"status\":\"success\",\"message\":'\"\\\"$MESSAGE\\\"\"',\"url\":'\"\\\"$URL\\\"\"'}}' || true\n}\n\nfunction perform_pr() {\n  make prerelease synopsis_docs #link_check_docs\n  MINISHIFT_VM_DRIVER=kvm make integration_pr\n  perform_artifacts_upload $1;\n}\n\nfunction perform_master() {\n  make prerelease #synopsis_docs link_check_docs\n  #MINISHIFT_VM_DRIVER=kvm make integration_pr\n  perform_docs_publish \"minishift\" \"master\" \"minishift/docs/master\";\n  perform_artifacts_upload $1;\n}\n\nfunction perform_nightly() {\n  make prerelease synopsis_docs link_check_docs\n  MINISHIFT_ISO_URL=$1 MINISHIFT_VM_DRIVER=kvm make integration_all\n}\n\nif [[ \"$UID\" = 0 ]]; then\n  setup_build_environment;\nelse\n  source ~/jenkins-env # Source environment variables for minishift_ci user\n  RSYNC_PASSWORD=$(echo $CICO_API_KEY | cut -d'-' -f1-2)\n\n  # Set Terminal\n  export TERM=xterm-256color\n  # Add git a/c identity\n  git config --global user.email \"29732253+minishift-bot@users.noreply.github.com\"\n  git config --global user.name \"Minishift Bot\"\n  # Export GITHUB_ACCESS_TOKEN\n  export GITHUB_ACCESS_TOKEN=$GITHUB_TOKEN\n\n  prepare_repo;\n  setup_kvm_docker_machine_driver;\n  # Navigate to the repo\n  cd $GOPATH/src/github.com/minishift/minishift\n\n  if [[ \"$JOB_NAME\" = \"minishift-docs\" ]]; then\n    # REPO and BRANCH variables are populated via https://ci.centos.org/job/minishift-docs\n    REPO_OWNER=$(echo $REPO | cut -d\"/\" -f4)\n    perform_docs_publish \"$REPO_OWNER\" \"$BRANCH\" \"minishift/docs/ondemand/$REPO_OWNER-$BRANCH\";\n  elif [[ \"$JOB_NAME\" = \"minishift-release\" ]]; then\n    perform_release $RSYNC_PASSWORD;\n  elif [[ \"$JOB_NAME\" = \"minishift-nightly-b2d\" ]]; then\n    perform_nightly \"b2d\";\n  elif [[ \"$JOB_NAME\" = \"minishift-nightly-minikube\" ]]; then\n    perform_nightly \"minikube\";\n  elif [[ \"$JOB_NAME\" = \"minishift-nightly-centos\" ]]; then\n    perform_nightly \"centos\";\n  elif [[ \"$JOB_NAME\" = \"minishift\" ]]; then # Master job\n    perform_master $RSYNC_PASSWORD;\n  else # PR job\n    perform_pr $RSYNC_PASSWORD;\n  fi\nfi\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gen_help_text.go",
          "type": "blob",
          "size": 0.8076171875,
          "content": "/*\nCopyright 2016 The Kubernetes Authors All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage main\n\nimport (\n\t\"os\"\n\n\t\"github.com/minishift/minishift/cmd/minishift/cmd\"\n\t\"github.com/spf13/cobra/doc\"\n)\n\nfunc main() {\n\tcmd.RootCmd.DisableAutoGenTag = true\n\tdoc.GenMarkdownTree(cmd.RootCmd, os.Getenv(\"DOCS_SYNOPISIS_DIR\"))\n}\n"
        },
        {
          "name": "icons",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}