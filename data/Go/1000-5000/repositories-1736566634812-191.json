{
  "metadata": {
    "timestamp": 1736566634812,
    "page": 191,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "whalebrew/whalebrew",
      "stars": 4112,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".codeclimate.yml",
          "type": "blob",
          "size": 0.1025390625,
          "content": "engines:\n gofmt:\n   enabled: true\n golint:\n   enabled: true\n\nratings:\n paths:\n - \"**.go\"\n\nexclude_paths:\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0244140625,
          "content": "/build\n/.whalebrew-tests\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.751953125,
          "content": "# Change log\n\n## Unreleased\n\n### Fixed\n\n* Installation with homebrew (#299)\n\n### Breaking changes\n\n* Changed the default installation path on Darwin arm64 to /opt/whalebrew/bin (#252)\n\n### Added\n\n* Support for podman (#235)\n* Support for file-based configuration (#251)\n* Warn when the installed command is not available (pointing to another file or not in PATH) (#253)\n* Automatically try to create installation path if it does not exist (#254)\n\n### Updates\n\n* Increased traceability of the build version (#234)\n* Add dependabot for remaining dependencies (#236)  \n* Updated all build github actions (#237, #242, #241, #240, #239, #238, #246, #247)\n* Updated the CI workflow so we can better protect the master branch and add some automation (#244)\n* Add auto-approval for bumps and main contributor (#243)\n* Enable auto merge and merge groups (#245)\n* Bump dependencies (#256, #257, #258, #278, #284, #270, #269, #267, #285, #286)\n* Updated Docker Desktop namings and links in ReadMe (#281)\n* Improved error message when trying to install in a directory without permissions (#272)\n\n## 0.4.1 - 2023-09-20\n\n### Fixed\n\n* A breaking change on Docker Hub breaking whalebrew search\n\n### Updates\n\n* Updated all golang dependencies. remarkably:\n\n|Module|Previous version|New version|\n|-|-|\n|github.com/containerd/containerd|v1.6.6|v1.7.6|\n|github.com/docker/cli|v20.10.17+incompatible|v24.0.6+incompatible|\n|github.com/docker/docker|v1.4.2-0.20190924003213-a8608b5b67c7|v24.0.6+incompatible|\n\n## 0.4.0 - 2022-03-30\n\n### Fixed\n\n* Formatting and spelling in the README (#152)\n* The release script pushing binaries to the github release (#172)\n\n### Added\n\n* Whalebrew binay is now also delivered for macos arm64 architecture (#155)\n* `uninstall` now support detecting either a package (i.e. command) or image name (#164)\n* Support for automatic dependencies update with all dependencies updates\n\n## 0.3.1 - 2021-05-27\n\n### Fixed\n* Whalebrew search without pattern was wrongly claiming to list all available packages (#133)\n* Images were wrongly run with TTY in case commands were piped (#136)\n\n### Added\n* Add a linter to validate image labels (#126)\n\n## 0.3.0 - 2021-01-08\n\n### Fixed\n* Whalebrew search would panic when called without arguments (#120)\n* Whalebrew install was not finding labels for images built using buildkit (#121)\n\n### Added\n* Support for arm and arm64 on linux (#117)\n\n## 0.2.5 - 2020-11-04\n### Fixed\n* Environment variables in working directory not expanded (#113)\n\n### Added\n* Support for multiple search repositories (#108)\n* Allow images without entrypoint with -e (#112)\n* Support to search on any docker registry (#115)\n\n## 0.2.4 - 2020-10-16\n### Fixed\n* whalebrew search was returning no result (#89)\n* Fix package not installable when entrypoint is not the last step (#91)\n\n### Added\n* Ask if a different version of a pkg should be installed when theres an existing installation (#92)\n* Add an option to mount paths provided in flags (#84)\n* Add an option to hide headers in whalebrew list output (#99)\n* Add option to remove prompt when uninstalling a package (#107)\n\n## 0.2.3 - 2019-07-08\n### Fixed\n* Invalid version number\n\n## 0.2.2 - 2019-07-08\n### Fixed\n* Whalebrew releases should now be deployed by travis\n\n## 0.2.1 - 2019-07-08\n### Fixed\n* Whalebrew install not working when registry name was provided\n\n## 0.2.0 - 2019-06-10\n### Added\n* Use the --init docker flag when running the image, allowing signal management inside the image\n* Support for custom hooks for before and after installing or uninstalling a package\n* Freeze dependencies with go modules\n* Add support to override an image entrypoint\n* Add a filter to specify the version of whalebrew required in a package\n* Allow customizing the behaviour when volumes are missing\n\n### Fixed\n* Docker image build\n* Updated docker library using outdated features\n\n### Removed\n* internal `run` command is not exposed as a command any longer\n\n## 0.1.0 - 2017-03-23\n### Added\n* A label for setting the working directory inside the container.\n* The ability to put environment variables in `working_dir`, `volumes`, and `environment` labels that are resolved at runtime.\n* A `-y` flag to install to assume the answer \"yes\" to any questions asked.\n\n## 0.0.5 - 2017-03-04\n### Added\n* Ask permission before installing a package that needs to listen on ports, access environment variables, or access files/directories on the host.\n* A `-f` flag to `whalebrew install` to force install a package over an existing file.\n\n## 0.0.4 - 2017-02-07\n### Added\n* `whalebrew edit` command for editing packages\n\n### Fixed\n* Files being written as root\n\n## 0.0.3 - 2017-01-30\n### Fixed\n\n* Permission errors when running `whalebrew list`\n\n## 0.0.2 - 2017-01-28\n### Added\n\n* Support for mapping ports.\n\n### Fixed\n\n* `whalebrew list` when install path contains folders.\n\n## 0.0.1 - 2017-01-26\n\nInitial release.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.6259765625,
          "content": "ARG GO_VERSION=1.21\nARG DOCKER_VERSION=27.1\n\nFROM docker:${DOCKER_VERSION} as docker-cli\nFROM golang:${GO_VERSION}-alpine as go\nFROM go as build\n\nWORKDIR /src\n\n# build-base is required for tests\nRUN apk add --no-cache \\\n    build-base \\\n    git\n\nCOPY go.mod go.sum ./\nRUN go mod download\n\nCOPY . .\nRUN go install .\n\nFROM alpine\nENTRYPOINT [\"whalebrew\"]\nLABEL io.whalebrew.config.volumes '[\"/var/run/docker.sock:/var/run/docker.sock\", \"${WHALEBREW_INSTALL_PATH}:/usr/local/bin\"]'\nLABEL io.whalebrew.config.keep_container_user 'true'\n\nCOPY --from=docker-cli /usr/local/bin/docker /bin/docker\nCOPY --from=build /go/bin/whalebrew /bin/whalebrew\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.505859375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   Copyright 2017 Ben Firshman\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.35546875,
          "content": "# Whalebrew\n\nWhalebrew creates aliases for Docker images so you can run them as if they were native commands. It's like Homebrew, but with Docker images.\n\nDocker works well for packaging up development environments, but there are lots of tools that aren't tied to a particular project: `awscli` for managing your AWS account, `ffmpeg` for converting video, `wget` for downloading files, and so on. Whalebrew makes those things work with Docker, too.\n\n    $ whalebrew install whalebrew/whalesay\n    Unable to find image 'whalebrew/whalesay' locally\n    Using default tag: latest\n    latest: Pulling from whalebrew/whalesay\n    c60055a51d74: Pull complete\n    755da0cdb7d2: Pull complete\n    969d017f67e6: Pull complete\n    Digest: sha256:5f3a2782b400b2b23774709e0685d65b4493c6cbdb62fff6bbbd2a6bd393845b\n    Status: Downloaded newer image for whalebrew/whalesay:latest\n    🐳  Installed whalebrew/whalesay to /usr/local/bin/whalesay\n    $ whalesay cool\n     ______\n    < cool >\n     ------\n       \\\n        \\\n         \\\n                       ##        .\n                 ## ## ##       ==\n              ## ## ## ##      ===\n          /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"___/ ===\n     ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n          \\______ o          __/\n           \\    \\        __/\n             \\____\\______/\n\n\nWhalebrew can run almost any CLI tool, but it isn't for everything (e.g. where commands must start instantly). It works particularly well for:\n\n* **Complex dependencies.** For example, a Python app that requires C libraries, specific package versions, and other CLI tools that you don't want to clutter up your machine with.\n* **Cross-platform portability.** Package managers tend to be very closely tied to the system they are running on. Whalebrew packages work on any modern version of macOS, Linux, and Windows (coming soon).\n\n## Install\n\nFirst, [install Docker](https://docs.docker.com/engine/installation/). The easiest way to do this on macOS is by installing [Docker Desktop for Mac](https://docs.docker.com/docker-for-mac). You can install Docker Desktop for Mac via Homebrew:\n\n    brew install --cask docker\n\nNext, you can install whalebrew via Homebrew on macOS and Linux:\n\n    brew install whalebrew\n\nIf you're not using Homebrew, you can download a binary and use that:\n\n    curl -L \"https://github.com/whalebrew/whalebrew/releases/download/0.4.1/whalebrew-$(uname -s)-$(uname -m)\" -o /usr/local/bin/whalebrew; chmod +x /usr/local/bin/whalebrew\n\nWindows support is theoretically possible, but not implemented yet.\n\n## Usage\n\n### Install packages\n\n    $ whalebrew install whalebrew/wget\n\nThis will install the image `whalebrew/wget` as `/usr/local/bin/wget`.\n\nThe images in the `whalebrew` organization are a set of images that are known to work well with Whalebrew. You can also install any other images on Docker Hub too, but they may not work well:\n\n    $ whalebrew install bfirsh/ffmpeg\n\n### Find packages\n\n    $ whalebrew search\n    whalebrew/ack\n    whalebrew/awscli\n    whalebrew/docker-cloud\n    whalebrew/ffmpeg\n    whalebrew/gnupg\n    ...\n\n    $ whalebrew search wget\n    whalebrew/wget\n\n### List installed packages\n\n    $ whalebrew list\n    COMMAND     IMAGE\n    ffmpeg      bfirsh/ffmpeg\n    wget        whalebrew/wget\n    whalebrew   whalebrew/whalebrew\n    whalesay    whalebrew/whalesay\n\n### Uninstall packages\n\n    $ whalebrew uninstall wget\n\n### Upgrade packages\n\nTo upgrade a single package, just pull its image:\n\n    $ docker pull whalebrew/wget\n\n## Configuration\n\nWhalebrew reads configuration from either configuration files or environment variables.\n\nThe configuration file location can be specified using the `WHALEBREW_CONFIG_DIR` environment variable and defaults to `~/.whalebrew`.\nThe configuration file must be named `config.yaml`.\n\n|Description|Default (if not specified anywhere)|Format in config files|Format in environment variables|\n|-|-|-|-|\n|The folder containing `config.yaml`|`~/.whalebrew`|N/A|`WHALEBREW_CONFIG_DIR=$HOME/my-config`|\n|The directory to install packages in.|`/usr/local/bin`|`install_path: $HOME/.whalebrew/bin`|`WHALEBREW_INSTALL_PATH=$HOME/.whalebrew/bin`|\n\nOn a general basis, any configuration configured through environment variable will be prioritary compared to values from config files.\n\nFor example, if you have a whalebrew config of `install_path: $HOME/.whalebrew/bin` and an environment variable of `WHALEBREW_INSTALL_PATH=$HOME/.local/bin`, all whalebrew programs will be installed in `$HOME/.local/bin`.\n\n### Configuration path lookup\n\nEnvironment variables have precedence on any other value.\nAs soon as the `WHALEBREW_CONFIG_DIR` it defines the whalebrew installation directory.\nWhen not set, whalebrew considers the first existing file between `~/.whalebrew/config.yaml`, `$XDG_CONFIG_HOME/whalebrew/config.yaml`, and for each `path` in `$XDG_DATA_DIRS`, whether `$path/whalebrew/config.yaml` exists\n\n### Using custom registries\n\n:warning: This feature is currently under development. Any feedback or comments are welcome!\n\nWhalebrew now supports using several registries when searching for packages.\n\nEach repository will be searched sequentially and matches on whalebrew packages will be shown, one per line.\n\nTo enable this feature, ensure you have a configuration file configured as defined [above](#configuration).\n\nYou can make one by running:\n\n```\nmkdir -p ${WHALEBREW_CONFIG_DIR:-~/.whalebrew}\ncat > ${WHALEBREW_CONFIG_DIR:-~/.whalebrew}/config.yaml <<EOF\nregistries:\n- dockerHub:\n    owner: whalebrew\n- dockerHub:\n    owner: my-org\nEOF\n```\n\n:warning: _Note_ that if you provide a single docker hub owner, only this owner will be searched for registries, replacing the default `whalebrew` docker hub organisation.\n\n## How it works\n\nWhalebrew is simple, and leans as much as possible on native Docker features:\n\n* Packages are installed as files in `/usr/local/bin` (or a directory that you configure) with a [shebang](https://en.wikipedia.org/wiki/Shebang_(Unix)) to make them executable. The content of the file is YAML that describes the options to pass to `docker run`, similar to a Compose service. For example:\n\n        #!/usr/bin/env whalebrew\n        image: whalebrew/whalesay\n\n* When a package is executed, Whalebrew will run the specified image with Docker, mount the current working directory in `/workdir`, and pass through all of the arguments.\n\n  To understand what it is doing, you can imagine it as a shell script that looks something like this:\n\n      docker run -it -v \"$(pwd)\":/workdir -w /workdir $IMAGE \"$@\"\n\n## Creating packages\n\nPackages are Docker images published on Docker Hub. The requirements to make them work are:\n\n* They must have the command to be run set as the entrypoint.\n* They must only work with files in `/workdir`.\n\nThat's it. So long as your image is set up to work that way, it'll work with Whalebrew.\n\n### Configuration\n\nThere are some labels you can use to configure how Whalebrew installs your image:\n\n* `io.whalebrew.name`: The name to give the command. Defaults to the name of the image.\n* `io.whalebrew.config.environment`: A list of environment variables to pass into the image from the current environment when the command is run. For example, putting this in your `Dockerfile` will pass through the values of `TERM` and `FOOBAR_NAME` in your shell when the command is run:\n\n        LABEL io.whalebrew.config.environment '[\"TERM\", \"FOOBAR_NAME\"]'\n\n* `io.whalebrew.config.volumes`: A list of volumes to mount when the command is run. For example, putting this in your image's `Dockerfile` will mount `~/.docker` as `/root/.docker` in read-only mode:\n\n        LABEL io.whalebrew.config.volumes '[\"~/.docker:/root/.docker:ro\"]'\n\n* `io.whalebrew.config.ports`: A list of host port to container port mappings to create when the command is run. For example, putting this in your image's `Dockerfile` will map container port 8100 to host port 8000:\n\n        LABEL io.whalebrew.config.ports '[\"8100:8000\"]'\n\n* `io.whalebrew.config.networks`: A list of networks to connect the container to.\n\n        LABEL io.whalebrew.config.networks '[\"host\"]'\n\n* `io.whalebrew.config.working_dir`: The path the working directory should be bound to in the container. For example putting this in your image's `Dockerfile` will ensure the working directory is available in /working_directory in the container\n\n        LABEL io.whalebrew.config.working_dir '/working_directory'\n\n* `io.whalebrew.config.keep_container_user`: Set this variable to true to keep the default container user. When set to true, whalebrew will not run the command as the current user using the docker `-u` flag\n\n        LABEL io.whalebrew.config.keep_container_user 'true'\n\n* `io.whalebrew.config.missing_volumes`: The behaviour to handle missing files or volumes into the container.\n\n        LABEL io.whalebrew.config.missing_volumes 'skip'\n\n  Possible values are\n    * `error` to raise an error when trying to mount a non existing volume *this is the default behaviour*\n    * `skip` to prevent binding the volume\n    * `mount` to mount the volume anyway. This will result in docker [creating a host directory](https://docs.docker.com/engine/reference/commandline/run/#mount-volume--v---read-only)\n\n* `io.whalebrew.required_version`: Specifies the minimum whalebrew version that is required to run the package. Examples: `<1.0.0`, `>0.1.0`, `>0.1.0 <1.0.0`\n\n* `io.whalebrew.config.volumes_from_args`: A list of command line arguments of the program passed at runtime that must be considered and mounted as volumes:\n\n        LABEL io.whalebrew.config.volumes_from_args '[\"-C\", \"--exec-path\"]'\n\n#### Using user environment variables\n\nThe labels `io.whalebrew.config.working_dir`, `io.whalebrew.config.volumes` and `io.whalebrew.config.environment` are expanded with user environment variables when the container is launched.\n\nFor example, if your image has this line in your `Dockerfile`:\n\n        LABEL io.whalebrew.config.working_dir '$PWD'\n\nAt runtime, it will bind your working directory into the container at the same path and set it as the working directory.\n\n#### Using hooks\n\nIn some cases, you might want to execute custom actions, like checking the integrity of the image or adding the whalebrew scripts to your whalebrew repository.\nTo do so, whalebrew will call git-like hooks when handling installation/uninstallation of a package.\nThose hooks must be executable files located in `${WHALEBREW_CONFIG_DIR}/hooks`.\n\nWhalebrew supports the following hooks:\n\n|command & arguments|description|\n|-|-|\n|`pre-install ${DOCKER_IMAGE} ${EXECUTABLE_NAME}`|This hook is called before installing a package. If it fails, the whole installation process fails|\n|`post-install ${EXECUTABLE_NAME}`|This hook is called after a package is installed. If it fails, the installation process fails, but the package is not uninstalled|\n|`pre-uninstall ${EXECUTABLE_NAME}`|This hook is called before uninstalling a package. If it fails, the whole uninstallation process fails|\n|`post-uninstall ${EXECUTABLE_NAME}`|This hook is called after a package is uninstalled. If it fails, the uninstallation process fails, but the package is not uninstalled|\n\n### Whalebrew images\n\nWe maintain a set of packages which are known to follow these requirements under the `whalebrew` organization on [GitHub](https://github.com/whalebrew) and [Docker Hub](https://hub.docker.com/u/whalebrew/). If you want to add a package to this, open a pull request against [whalebrew-packages](https://github.com/whalebrew/whalebrew-packages).\n\n## Thanks\n\n* Justin Cormack for [the original idea](https://github.com/justincormack/dockercommand-cli) and generally just being very clever.\n"
        },
        {
          "name": "actions",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "dockerregistry",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 2.078125,
          "content": "module github.com/whalebrew/whalebrew\n\ngo 1.21\n\nrequire (\n\tgithub.com/Songmu/prompter v0.5.1\n\tgithub.com/blang/semver/v4 v4.0.0\n\tgithub.com/containerd/containerd v1.7.20\n\tgithub.com/docker/cli v27.1.1+incompatible\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/opencontainers/image-spec v1.1.0\n\tgithub.com/spf13/cobra v1.8.1\n\tgithub.com/spf13/pflag v1.0.5\n\tgithub.com/stretchr/testify v1.9.0\n\tgolang.org/x/crypto v0.27.0\n\tgopkg.in/yaml.v3 v3.0.1\n)\n\nrequire (\n\tgithub.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24 // indirect\n\tgithub.com/containerd/errdefs v0.1.0 // indirect\n\tgithub.com/containerd/log v0.1.0 // indirect\n\tgithub.com/containerd/platforms v0.2.1 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/docker/docker-credential-helpers v0.8.0 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.3 // indirect\n\tgithub.com/go-logr/logr v1.3.0 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/golang/protobuf v1.5.4 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/klauspost/compress v1.17.0 // indirect\n\tgithub.com/kr/text v0.2.0 // indirect\n\tgithub.com/mattn/go-isatty v0.0.19 // indirect\n\tgithub.com/moby/locker v1.0.1 // indirect\n\tgithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e // indirect\n\tgithub.com/opencontainers/go-digest v1.0.0 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/sirupsen/logrus v1.9.3 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.45.0 // indirect\n\tgo.opentelemetry.io/otel v1.21.0 // indirect\n\tgo.opentelemetry.io/otel/metric v1.21.0 // indirect\n\tgo.opentelemetry.io/otel/trace v1.21.0 // indirect\n\tgolang.org/x/sync v0.7.0 // indirect\n\tgolang.org/x/sys v0.25.0 // indirect\n\tgolang.org/x/term v0.24.0 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20231212172506-995d672761c0 // indirect\n\tgoogle.golang.org/grpc v1.59.0 // indirect\n\tgoogle.golang.org/protobuf v1.33.0 // indirect\n\tgopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f // indirect\n\tgotest.tools/v3 v3.5.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 10.3759765625,
          "content": "github.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24 h1:bvDV9vkmnHYOMsOr4WLk+Vo07yKIzd94sVoIqshQ4bU=\ngithub.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24/go.mod h1:8o94RPi1/7XTJvwPpRSzSUedZrtlirdB3r9Z20bi2f8=\ngithub.com/Microsoft/go-winio v0.6.2 h1:F2VQgta7ecxGYO8k3ZZz3RS8fVIXVxONVUPlNERoyfY=\ngithub.com/Microsoft/go-winio v0.6.2/go.mod h1:yd8OoFMLzJbo9gZq8j5qaps8bJ9aShtEA8Ipt1oGCvU=\ngithub.com/Microsoft/hcsshim v0.11.7 h1:vl/nj3Bar/CvJSYo7gIQPyRWc9f3c6IeSNavBTSZNZQ=\ngithub.com/Microsoft/hcsshim v0.11.7/go.mod h1:MV8xMfmECjl5HdO7U/3/hFVnkmSBjAjmA09d4bExKcU=\ngithub.com/Songmu/prompter v0.5.1 h1:IAsttKsOZWSDw7bV1mtGn9TAmLFAjXbp9I/eYmUUogo=\ngithub.com/Songmu/prompter v0.5.1/go.mod h1:CS3jEPD6h9IaLaG6afrl1orTgII9+uDWuw95dr6xHSw=\ngithub.com/blang/semver/v4 v4.0.0 h1:1PFHFE6yCCTv8C1TeyNNarDzntLi7wMI5i/pzqYIsAM=\ngithub.com/blang/semver/v4 v4.0.0/go.mod h1:IbckMUScFkM3pff0VJDNKRiT6TG/YpiHIM2yvyW5YoQ=\ngithub.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=\ngithub.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=\ngithub.com/containerd/containerd v1.7.20 h1:Sl6jQYk3TRavaU83h66QMbI2Nqg9Jm6qzwX57Vsn1SQ=\ngithub.com/containerd/containerd v1.7.20/go.mod h1:52GsS5CwquuqPuLncsXwG0t2CiUce+KsNHJZQJvAgR0=\ngithub.com/containerd/continuity v0.4.2 h1:v3y/4Yz5jwnvqPKJJ+7Wf93fyWoCB3F5EclWG023MDM=\ngithub.com/containerd/continuity v0.4.2/go.mod h1:F6PTNCKepoxEaXLQp3wDAjygEnImnZ/7o4JzpodfroQ=\ngithub.com/containerd/errdefs v0.1.0 h1:m0wCRBiu1WJT/Fr+iOoQHMQS/eP5myQ8lCv4Dz5ZURM=\ngithub.com/containerd/errdefs v0.1.0/go.mod h1:YgWiiHtLmSeBrvpw+UfPijzbLaB77mEG1WwJTDETIV0=\ngithub.com/containerd/log v0.1.0 h1:TCJt7ioM2cr/tfR8GPbGf9/VRAX8D2B4PjzCpfX540I=\ngithub.com/containerd/log v0.1.0/go.mod h1:VRRf09a7mHDIRezVKTRCrOq78v577GXq3bSa3EhrzVo=\ngithub.com/containerd/platforms v0.2.1 h1:zvwtM3rz2YHPQsF2CHYM8+KtB5dvhISiXh5ZpSBQv6A=\ngithub.com/containerd/platforms v0.2.1/go.mod h1:XHCb+2/hzowdiut9rkudds9bE5yJ7npe7dG/wG+uFPw=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/docker/cli v27.1.1+incompatible h1:goaZxOqs4QKxznZjjBWKONQci/MywhtRv2oNn0GkeZE=\ngithub.com/docker/cli v27.1.1+incompatible/go.mod h1:JLrzqnKDaYBop7H2jaqPtU4hHvMKP+vjCwu2uszcLI8=\ngithub.com/docker/docker-credential-helpers v0.8.0 h1:YQFtbBQb4VrpoPxhFuzEBPQ9E16qz5SpHLS+uswaCp8=\ngithub.com/docker/docker-credential-helpers v0.8.0/go.mod h1:UGFXcuoQ5TxPiB54nHOZ32AWRqQdECoh/Mg0AlEYb40=\ngithub.com/felixge/httpsnoop v1.0.3 h1:s/nj+GCswXYzN5v2DpNMuMQYe+0DDwt5WVCU6CWBdXk=\ngithub.com/felixge/httpsnoop v1.0.3/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.3.0 h1:2y3SDp0ZXuc6/cjLSZ+Q3ir+QB9T/iG5yYRXqsagWSY=\ngithub.com/go-logr/logr v1.3.0/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/klauspost/compress v1.17.0 h1:Rnbp4K9EjcDuVuHtd0dgA4qNuv9yKDYKK1ulpJwgrqM=\ngithub.com/klauspost/compress v1.17.0/go.mod h1:ntbaceVETuRiXiv4DpjP66DpAtAGkEQskQzEyD//IeE=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/mattn/go-isatty v0.0.19 h1:JITubQf0MOLdlGRuRq+jtsDlekdYPia9ZFsB8h/APPA=\ngithub.com/mattn/go-isatty v0.0.19/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/moby/locker v1.0.1 h1:fOXqR41zeveg4fFODix+1Ch4mj/gT0NE1XJbp/epuBg=\ngithub.com/moby/locker v1.0.1/go.mod h1:S7SDdo5zpBK84bzzVlKr2V0hz+7x9hWbYC/kq7oQppc=\ngithub.com/moby/sys/mountinfo v0.6.2 h1:BzJjoreD5BMFNmD9Rus6gdd1pLuecOFPt8wC+Vygl78=\ngithub.com/moby/sys/mountinfo v0.6.2/go.mod h1:IJb6JQeOklcdMU9F5xQ8ZALD+CUr5VlGpwtX+VE0rpI=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e h1:fD57ERR4JtEqsWbfPhv4DMiApHyliiK5xCTNVSPiaAs=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.1.0 h1:8SG7/vwALn54lVB/0yZ/MMwhFrPYtpEHQb2IpWsCzug=\ngithub.com/opencontainers/image-spec v1.1.0/go.mod h1:W4s4sFTMaBeK1BQLXbG4AdM2szdn85PY75RI83NrTrM=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.45.0 h1:x8Z78aZx8cOF0+Kkazoc7lwUNMGy0LrzEMxTm4BbTxg=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.45.0/go.mod h1:62CPTSry9QZtOaSsE3tOzhx6LzDhHnXJ6xHeMNNiM6Q=\ngo.opentelemetry.io/otel v1.21.0 h1:hzLeKBZEL7Okw2mGzZ0cc4k/A7Fta0uoPgaJCr8fsFc=\ngo.opentelemetry.io/otel v1.21.0/go.mod h1:QZzNPQPm1zLX4gZK4cMi+71eaorMSGT3A4znnUvNNEo=\ngo.opentelemetry.io/otel/metric v1.21.0 h1:tlYWfeo+Bocx5kLEloTjbcDwBuELRrIFxwdQ36PlJu4=\ngo.opentelemetry.io/otel/metric v1.21.0/go.mod h1:o1p3CA8nNHW8j5yuQLdc1eeqEaPfzug24uvsyIEJRWM=\ngo.opentelemetry.io/otel/trace v1.21.0 h1:WD9i5gzvoUPuXIXH24ZNBudiarZDKuekPqi/E8fpfLc=\ngo.opentelemetry.io/otel/trace v1.21.0/go.mod h1:LGbsEB0f9LGjN+OZaQQ26sohbOmiMR+BaslueVtS/qQ=\ngolang.org/x/crypto v0.27.0 h1:GXm2NjJrPaiv/h1tb2UH8QfgC/hOf/+z0p6PT8o1w7A=\ngolang.org/x/crypto v0.27.0/go.mod h1:1Xngt8kV6Dvbssa53Ziq6Eqn0HqbZi5Z6R0ZpwQzt70=\ngolang.org/x/net v0.23.0 h1:7EYJ93RZ9vYSZAIb2x3lnuvqO5zneoD6IvWjuhfxjTs=\ngolang.org/x/net v0.23.0/go.mod h1:JKghWKKOSdJwpW2GEx0Ja7fmaKnMsbu+MWVZTokSYmg=\ngolang.org/x/sync v0.7.0 h1:YsImfSBoP9QPYL0xyKJPq0gcaJdG3rInoqxTWbfQu9M=\ngolang.org/x/sync v0.7.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.25.0 h1:r+8e+loiHxRqhXVl6ML1nO3l1+oFoWbnlu2Ehimmi34=\ngolang.org/x/sys v0.25.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.24.0 h1:Mh5cbb+Zk2hqqXNO7S1iTjEphVL+jb8ZWaqh/g+JWkM=\ngolang.org/x/term v0.24.0/go.mod h1:lOBK/LVxemqiMij05LGJ0tzNr8xlmwBRJ81PX6wVLH8=\ngolang.org/x/text v0.18.0 h1:XvMDiNzPAl0jr17s6W9lcaIhGUfUORdGCNsuLmPG224=\ngolang.org/x/text v0.18.0/go.mod h1:BuEKDfySbSR4drPmRPG/7iBdf8hvFMuRexcpahXilzY=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20231212172506-995d672761c0 h1:/jFB8jK5R3Sq3i/lmeZO0cATSzFfZaJq1J2Euan3XKU=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20231212172506-995d672761c0/go.mod h1:FUoWkonphQm3RhTS+kOEhF8h0iDpm4tdXolVCeZ9KKA=\ngoogle.golang.org/grpc v1.59.0 h1:Z5Iec2pjwb+LEOqzpB2MR12/eKFhDPhuqW91O+4bwUk=\ngoogle.golang.org/grpc v1.59.0/go.mod h1:aUPDwccQo6OTjy7Hct4AfBPD1GptF4fyUjIkQ9YtF98=\ngoogle.golang.org/protobuf v1.33.0 h1:uNO2rsAINq/JlFpSdYEKIZ0uKD/R9cpdv0T+yoGwGmI=\ngoogle.golang.org/protobuf v1.33.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f h1:BLraFXnmrev5lT+xlilqcH8XK9/i0At2xKjWk4p6zsU=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngotest.tools/v3 v3.5.1 h1:EENdUnS3pdur5nybKYIh2Vfgc8IUNBjxDPSjtiJcOzU=\ngotest.tools/v3 v3.5.1/go.mod h1:isy3WKz7GK6uNw/sbHzfKBLvlvXwUyV06n6brMxxopU=\n"
        },
        {
          "name": "hooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 0.2646484375,
          "content": "package main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com/whalebrew/whalebrew/cmd\"\n)\n\nfunc main() {\n\tvar err error\n\tif cmd.IsShellbang(os.Args) {\n\t\terr = cmd.DockerCLIRun(os.Args)\n\t} else {\n\t\terr = cmd.RootCmd.Execute()\n\t}\n\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(-1)\n\t}\n}\n"
        },
        {
          "name": "main_test.go",
          "type": "blob",
          "size": 1.482421875,
          "content": "package main\n\nimport (\n\t\"bytes\"\n\t\"os\"\n\t\"os/exec\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/whalebrew/whalebrew/packages\"\n)\n\nfunc TestRun(t *testing.T) {\n\tdefer os.RemoveAll(\".whalebrew-tests\")\n\tos.Setenv(\"RUN_WHALEBREW\", \"true\")\n\tos.Setenv(\"WHALEBREW_INSTALL_PATH\", \".whalebrew-tests\")\n\tassert.NoError(t, os.MkdirAll(\".whalebrew-tests\", 0777))\n\tif err := exec.Command(\"docker\", \"pull\", \"alpine\").Run(); err != nil {\n\t\tt.Skipf(\"Unable to pull alpine image: %v, this test needs a running docker daemon\", err)\n\t\treturn\n\t}\n\tc := exec.Command(os.Args[0], \"install\", \"-y\", \"-f\", \"whalebrew/awscli\")\n\tc.Stdout = os.Stdout\n\tc.Stderr = os.Stderr\n\tassert.NoError(t, c.Run())\n\tassert.NoError(t, packages.NewPackageManager(\".whalebrew-tests\").ForceInstall(&packages.Package{\n\t\tImage:      \"alpine\",\n\t\tName:       \"alpine\",\n\t\tEntrypoint: []string{\"sh\", \"-c\"},\n\t}))\n\n\twd, err := os.Getwd()\n\tassert.NoError(t, err)\n\n\t// running in whalebrew performs an exec, we need to fork to be able\n\t// to execute the rest of the tests\n\tassert.NoError(t, exec.Command(\"docker\", \"pull\", \"alpine\").Run())\n\tc = exec.Command(os.Args[0], wd+\"/.whalebrew-tests/alpine\", \"pwd;ls -al .\")\n\tstdout := bytes.NewBuffer(nil)\n\tc.Stdout = stdout\n\tc.Stderr = os.Stderr\n\tassert.NoError(t, c.Run())\n\tassert.Contains(t, stdout.String(), \"main.go\")\n\tassert.True(t, strings.HasPrefix(stdout.String(), \"/workdir\"))\n}\n\nfunc TestMain(m *testing.M) {\n\tif os.Getenv(\"RUN_WHALEBREW\") == \"true\" {\n\t\tmain()\n\t\tos.Exit(0)\n\t}\n\tos.Exit(m.Run())\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "run",
          "type": "tree",
          "content": null
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        },
        {
          "name": "search",
          "type": "tree",
          "content": null
        },
        {
          "name": "version",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}