{
  "metadata": {
    "timestamp": 1736566696124,
    "page": 252,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "swaggo/gin-swagger",
      "stars": 3861,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2060546875,
          "content": "# Binaries for programs and plugins\n*.exe\n*.dll\n*.so\n*.dylib\n\n# Test binary, build with `go test -c`\n*.test\n\n# Output of the go coverage tool, specifically when used with LiteIDE\n*.out\ndist\n\n.idea\nvendor\n.envrc\n"
        },
        {
          "name": ".goreleaser.yml",
          "type": "blob",
          "size": 0.1455078125,
          "content": "builds:\n  - skip: true\nsnapshot:\n  name_template: \"{{ .Tag }}-next\"\nchangelog:\n  sort: asc\n  filters:\n    exclude:\n      - '^docs:'\n      - '^test:'\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0380859375,
          "content": "MIT License\n\nCopyright (c) 2017 Swaggo\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "PULL_REQUEST_TEMPLATE.md",
          "type": "blob",
          "size": 0.185546875,
          "content": "**Describe the PR**\ne.g. add cool parser.\n\n**Relation issue**\ne.g. https://github.com/swaggo/gin-swagger/pull/123/files\n\n**Additional context**\nAdd any other context about the problem here.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.8818359375,
          "content": "# gin-swagger\n\ngin middleware to automatically generate RESTful API documentation with Swagger 2.0.\n\n[![Build Status](https://github.com/swaggo/gin-swagger/actions/workflows/ci.yml/badge.svg?branch=master)](https://github.com/features/actions)\n[![Codecov branch](https://img.shields.io/codecov/c/github/swaggo/gin-swagger/master.svg)](https://codecov.io/gh/swaggo/gin-swagger)\n[![Go Report Card](https://goreportcard.com/badge/github.com/swaggo/gin-swagger)](https://goreportcard.com/report/github.com/swaggo/gin-swagger)\n[![GoDoc](https://godoc.org/github.com/swaggo/gin-swagger?status.svg)](https://godoc.org/github.com/swaggo/gin-swagger)\n[![Release](https://img.shields.io/github/release/swaggo/gin-swagger.svg?style=flat-square)](https://github.com/swaggo/gin-swagger/releases)\n\n## Usage\n\n### Start using it\n\n1. Add comments to your API source code, [See Declarative Comments Format](https://github.com/swaggo/swag/blob/master/README.md#declarative-comments-format).\n2. Download [Swag](https://github.com/swaggo/swag) for Go by using:\n\n```sh\ngo get -u github.com/swaggo/swag/cmd/swag\n```\n\nStarting in Go 1.17, installing executables with `go get` is deprecated. `go install` may be used instead:\n\n```sh\ngo install github.com/swaggo/swag/cmd/swag@latest\n```\n\n3. Run the [Swag](https://github.com/swaggo/swag) at your Go project root path(for instance `~/root/go-project-name`),\n   [Swag](https://github.com/swaggo/swag) will parse comments and generate required files(`docs` folder and `docs/doc.go`)\n   at `~/root/go-project-name/docs`.\n\n```sh\nswag init\n```\n\n4. Download [gin-swagger](https://github.com/swaggo/gin-swagger) by using:\n\n```sh\ngo get -u github.com/swaggo/gin-swagger\ngo get -u github.com/swaggo/files\n```\n\nImport following in your code:\n\n```go\nimport \"github.com/swaggo/gin-swagger\" // gin-swagger middleware\nimport \"github.com/swaggo/files\" // swagger embed files\n\n```\n\n### Canonical example:\n\nNow assume you have implemented a simple api as following:\n\n```go\n// A get function which returns a hello world string by json\nfunc Helloworld(g *gin.Context)  {\n\tg.JSON(http.StatusOK,\"helloworld\")\n}\n\n```\n\nSo how to use gin-swagger on api above? Just follow the following guide.\n\n1. Add Comments for apis and main function with gin-swagger rules like following:\n\n```go\n// @BasePath /api/v1\n\n// PingExample godoc\n// @Summary ping example\n// @Schemes\n// @Description do ping\n// @Tags example\n// @Accept json\n// @Produce json\n// @Success 200 {string} Helloworld\n// @Router /example/helloworld [get]\nfunc Helloworld(g *gin.Context)  {\n\tg.JSON(http.StatusOK,\"helloworld\")\n}\n```\n\n2. Use `swag init` command to generate a docs, docs generated will be stored at `docs/`.\n3. import the docs like this:\n   I assume your project named `github.com/go-project-name/docs`.\n\n```go\nimport (\n   docs \"github.com/go-project-name/docs\"\n)\n```\n\n4. build your application and after that, go to http://localhost:8080/swagger/index.html ,you to see your Swagger UI.\n\n5. The full code and folder relatives here:\n\n```go\npackage main\n\nimport (\n   \"github.com/gin-gonic/gin\"\n   docs \"github.com/go-project-name/docs\"\n   swaggerfiles \"github.com/swaggo/files\"\n   ginSwagger \"github.com/swaggo/gin-swagger\"\n   \"net/http\"\n)\n// @BasePath /api/v1\n\n// PingExample godoc\n// @Summary ping example\n// @Schemes\n// @Description do ping\n// @Tags example\n// @Accept json\n// @Produce json\n// @Success 200 {string} Helloworld\n// @Router /example/helloworld [get]\nfunc Helloworld(g *gin.Context)  {\n   g.JSON(http.StatusOK,\"helloworld\")\n}\n\nfunc main()  {\n   r := gin.Default()\n   docs.SwaggerInfo.BasePath = \"/api/v1\"\n   v1 := r.Group(\"/api/v1\")\n   {\n      eg := v1.Group(\"/example\")\n      {\n         eg.GET(\"/helloworld\",Helloworld)\n      }\n   }\n   r.GET(\"/swagger/*any\", ginSwagger.WrapHandler(swaggerfiles.Handler))\n   r.Run(\":8080\")\n\n}\n```\n\nDemo project tree, `swag init` is run at relative `.`\n\n```\n.\n├── docs\n│   ├── docs.go\n│   ├── swagger.json\n│   └── swagger.yaml\n├── go.mod\n├── go.sum\n└── main.go\n```\n## Project with Nested Directory\n```\n.\n├── cmd\n│   └── ginsimple\n│       └── main.go\n├── docs\n│   ├── docs.go\n│   ├── swagger.json\n│   └── swagger.yaml\n├── go.mod\n├── go.sum\n└── internal\n    ├── handlers\n    │   ├── helloWorld.go\n    │   └── userHandler.go\n    └── models\n        ├── profile.go\n        └── user.go\n```\nInorder generate swagger docs for projects with nested directories run the following command\n```bash\nswag init -g ./cmd/ginsimple/main.go -o cmd/docs\n```\n`-o` will set the auto generated file to the specified path\n\n\n## Multiple APIs\n\nThis feature was introduced in swag v1.7.9\n\n## Configuration\n\nYou can configure Swagger using different configuration options\n\n```go\nfunc main() {\n\tr := gin.New()\n\n\tginSwagger.WrapHandler(swaggerfiles.Handler,\n\t\tginSwagger.URL(\"http://localhost:8080/swagger/doc.json\"),\n\t\tginSwagger.DefaultModelsExpandDepth(-1))\n\n\tr.Run()\n}\n```\n\n| Option                   | Type   | Default    | Description                                                                                                                                                                                                                                               |\n| ------------------------ | ------ | ---------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| URL                      | string | \"doc.json\" | URL pointing to API definition                                                                                                                                                                                                                            |\n| DocExpansion             | string | \"list\"     | Controls the default expansion setting for the operations and tags. It can be 'list' (expands only the tags), 'full' (expands the tags and operations) or 'none' (expands nothing).                                                                       |\n| DeepLinking              | bool   | true       | If set to true, enables deep linking for tags and operations. See the Deep Linking documentation for more information.                                                                                                                                    |\n| DefaultModelsExpandDepth | int    | 1          | Default expansion depth for models (set to -1 completely hide the models).                                                                                                                                                                                |\n| InstanceName             | string | \"swagger\"  | The instance name of the swagger document. If multiple different swagger instances should be deployed on one gin router, ensure that each instance has a unique name (use the _--instanceName_ parameter to generate swagger documents with _swag init_). |\n| PersistAuthorization     | bool   | false      | If set to true, it persists authorization data and it would not be lost on browser close/refresh.                                                                                                                                                         |\n| Oauth2DefaultClientID    | string | \"\"         | If set, it's used to prepopulate the _client_id_ field of the OAuth2 Authorization dialog.                                                                                                                                                                |\n| Oauth2UsePkce            | bool   | false      | If set to true, it enables Proof Key for Code Exchange to enhance security for OAuth public clients.                                                                                                                                                      |"
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 2.0166015625,
          "content": "module github.com/swaggo/gin-swagger\n\ngo 1.17\n\nrequire (\n\tgithub.com/gin-contrib/gzip v0.0.6\n\tgithub.com/gin-gonic/gin v1.9.0\n\tgithub.com/stretchr/testify v1.8.1\n\tgithub.com/swaggo/files v1.0.1\n\tgithub.com/swaggo/swag v1.8.12\n\tgolang.org/x/net v0.8.0\n)\n\nrequire (\n\tgithub.com/KyleBanks/depth v1.2.1 // indirect\n\tgithub.com/PuerkitoBio/purell v1.1.1 // indirect\n\tgithub.com/PuerkitoBio/urlesc v0.0.0-20170810143723-de5bf2ad4578 // indirect\n\tgithub.com/bytedance/sonic v1.8.0 // indirect\n\tgithub.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/gin-contrib/sse v0.1.0 // indirect\n\tgithub.com/go-openapi/jsonpointer v0.19.5 // indirect\n\tgithub.com/go-openapi/jsonreference v0.19.6 // indirect\n\tgithub.com/go-openapi/spec v0.20.4 // indirect\n\tgithub.com/go-openapi/swag v0.19.15 // indirect\n\tgithub.com/go-playground/locales v0.14.1 // indirect\n\tgithub.com/go-playground/universal-translator v0.18.1 // indirect\n\tgithub.com/go-playground/validator/v10 v10.11.2 // indirect\n\tgithub.com/goccy/go-json v0.10.0 // indirect\n\tgithub.com/josharian/intern v1.0.0 // indirect\n\tgithub.com/json-iterator/go v1.1.12 // indirect\n\tgithub.com/klauspost/cpuid/v2 v2.0.9 // indirect\n\tgithub.com/leodido/go-urn v1.2.1 // indirect\n\tgithub.com/mailru/easyjson v0.7.6 // indirect\n\tgithub.com/mattn/go-isatty v0.0.17 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421 // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/pelletier/go-toml/v2 v2.0.6 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/twitchyliquid64/golang-asm v0.15.1 // indirect\n\tgithub.com/ugorji/go/codec v1.2.9 // indirect\n\tgolang.org/x/arch v0.0.0-20210923205945-b76863e36670 // indirect\n\tgolang.org/x/crypto v0.5.0 // indirect\n\tgolang.org/x/sys v0.6.0 // indirect\n\tgolang.org/x/text v0.8.0 // indirect\n\tgolang.org/x/tools v0.7.0 // indirect\n\tgoogle.golang.org/protobuf v1.28.1 // indirect\n\tgopkg.in/yaml.v2 v2.4.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 17.564453125,
          "content": "github.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/KyleBanks/depth v1.2.1 h1:5h8fQADFrWtarTdtDudMmGsC7GPbOAu6RVB3ffsVFHc=\ngithub.com/KyleBanks/depth v1.2.1/go.mod h1:jzSb9d0L43HxTQfT+oSA1EEp2q+ne2uh6XgeJcm8brE=\ngithub.com/PuerkitoBio/purell v1.1.1 h1:WEQqlqaGbrPkxLJWfBwQmfEAE1Z7ONdDLqrN38tNFfI=\ngithub.com/PuerkitoBio/purell v1.1.1/go.mod h1:c11w/QuzBsJSee3cPx9rAFu61PvFxuPbtSwDGJws/X0=\ngithub.com/PuerkitoBio/urlesc v0.0.0-20170810143723-de5bf2ad4578 h1:d+Bc7a5rLufV/sSk/8dngufqelfh6jnri85riMAaF/M=\ngithub.com/PuerkitoBio/urlesc v0.0.0-20170810143723-de5bf2ad4578/go.mod h1:uGdkoq3SwY9Y+13GIhn11/XLaGBb4BfwItxLd5jeuXE=\ngithub.com/bytedance/sonic v1.5.0/go.mod h1:ED5hyg4y6t3/9Ku1R6dU/4KyJ48DZ4jPhfY1O2AihPM=\ngithub.com/bytedance/sonic v1.8.0 h1:ea0Xadu+sHlu7x5O3gKhRpQ1IKiMrSiHttPF0ybECuA=\ngithub.com/bytedance/sonic v1.8.0/go.mod h1:i736AoUSYt75HyZLoJW9ERYxcy6eaN6h4BZXU064P/U=\ngithub.com/chenzhuoyu/base64x v0.0.0-20211019084208-fb5309c8db06/go.mod h1:DH46F32mSOjUmXrMHnKwZdA8wcEefY7UVqBKYGjpdQY=\ngithub.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311 h1:qSGYFH7+jGhDF8vLC+iwCD4WpbV1EBDSzWkJODFLams=\ngithub.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311/go.mod h1:b583jCggY9gE99b6G5LEC39OIiVsWj+R97kbl5odCEk=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.0-20190314233015-f79a8a8ca69d/go.mod h1:maD7wRr/U5Z6m/iR4s+kqSMx2CaBsrgA7czyZG/E6dU=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\ngithub.com/gin-contrib/gzip v0.0.6 h1:NjcunTcGAj5CO1gn4N8jHOSIeRFHIbn51z6K+xaN4d4=\ngithub.com/gin-contrib/gzip v0.0.6/go.mod h1:QOJlmV2xmayAjkNS2Y8NQsMneuRShOU/kjovCXNuzzk=\ngithub.com/gin-contrib/sse v0.1.0 h1:Y/yl/+YNO8GZSjAhjMsSuLt29uWRFHdHYUb5lYOV9qE=\ngithub.com/gin-contrib/sse v0.1.0/go.mod h1:RHrZQHXnP2xjPF+u1gW/2HnVO7nvIa9PG3Gm+fLHvGI=\ngithub.com/gin-gonic/gin v1.8.1/go.mod h1:ji8BvRH1azfM+SYow9zQ6SZMvR8qOMZHmsCuWR9tTTk=\ngithub.com/gin-gonic/gin v1.9.0 h1:OjyFBKICoexlu99ctXNR2gg+c5pKrKMuyjgARg9qeY8=\ngithub.com/gin-gonic/gin v1.9.0/go.mod h1:W1Me9+hsUSyj3CePGrd1/QrKJMSJ1Tu/0hFEH89961k=\ngithub.com/go-openapi/jsonpointer v0.19.3/go.mod h1:Pl9vOtqEWErmShwVjC8pYs9cog34VGT37dQOVbmoatg=\ngithub.com/go-openapi/jsonpointer v0.19.5 h1:gZr+CIYByUqjcgeLXnQu2gHYQC9o73G2XUeOFYEICuY=\ngithub.com/go-openapi/jsonpointer v0.19.5/go.mod h1:Pl9vOtqEWErmShwVjC8pYs9cog34VGT37dQOVbmoatg=\ngithub.com/go-openapi/jsonreference v0.19.6 h1:UBIxjkht+AWIgYzCDSv2GN+E/togfwXUJFRTWhl2Jjs=\ngithub.com/go-openapi/jsonreference v0.19.6/go.mod h1:diGHMEHg2IqXZGKxqyvWdfWU/aim5Dprw5bqpKkTvns=\ngithub.com/go-openapi/spec v0.20.4 h1:O8hJrt0UMnhHcluhIdUgCLRWyM2x7QkBXRvOs7m+O1M=\ngithub.com/go-openapi/spec v0.20.4/go.mod h1:faYFR1CvsJZ0mNsmsphTMSoRrNV3TEDoAM7FOEWeq8I=\ngithub.com/go-openapi/swag v0.19.5/go.mod h1:POnQmlKehdgb5mhVOsnJFsivZCEZ/vjK9gh66Z9tfKk=\ngithub.com/go-openapi/swag v0.19.15 h1:D2NRCBzS9/pEY3gP9Nl8aDqGUcPFrwG2p+CNFrLyrCM=\ngithub.com/go-openapi/swag v0.19.15/go.mod h1:QYRuS/SOXUCsnplDa677K7+DxSOj6IPNl/eQntq43wQ=\ngithub.com/go-playground/assert/v2 v2.0.1/go.mod h1:VDjEfimB/XKnb+ZQfWdccd7VUvScMdVu0Titje2rxJ4=\ngithub.com/go-playground/assert/v2 v2.2.0 h1:JvknZsQTYeFEAhQwI4qEt9cyV5ONwRHC+lYKSsYSR8s=\ngithub.com/go-playground/assert/v2 v2.2.0/go.mod h1:VDjEfimB/XKnb+ZQfWdccd7VUvScMdVu0Titje2rxJ4=\ngithub.com/go-playground/locales v0.14.0/go.mod h1:sawfccIbzZTqEDETgFXqTho0QybSa7l++s0DH+LDiLs=\ngithub.com/go-playground/locales v0.14.1 h1:EWaQ/wswjilfKLTECiXz7Rh+3BjFhfDFKv/oXslEjJA=\ngithub.com/go-playground/locales v0.14.1/go.mod h1:hxrqLVvrK65+Rwrd5Fc6F2O76J/NuW9t0sjnWqG1slY=\ngithub.com/go-playground/universal-translator v0.18.0/go.mod h1:UvRDBj+xPUEGrFYl+lu/H90nyDXpg0fqeB/AQUGNTVA=\ngithub.com/go-playground/universal-translator v0.18.1 h1:Bcnm0ZwsGyWbCzImXv+pAJnYK9S473LQFuzCbDbfSFY=\ngithub.com/go-playground/universal-translator v0.18.1/go.mod h1:xekY+UJKNuX9WP91TpwSH2VMlDf28Uj24BCp08ZFTUY=\ngithub.com/go-playground/validator/v10 v10.10.0/go.mod h1:74x4gJWsvQexRdW8Pn3dXSGrTK4nAUsbPlLADvpJkos=\ngithub.com/go-playground/validator/v10 v10.11.2 h1:q3SHpufmypg+erIExEKUmsgmhDTyhcJ38oeKGACXohU=\ngithub.com/go-playground/validator/v10 v10.11.2/go.mod h1:NieE624vt4SCTJtD87arVLvdmjPAeV8BQlHtMnw9D7s=\ngithub.com/goccy/go-json v0.9.7/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=\ngithub.com/goccy/go-json v0.10.0 h1:mXKd9Qw4NuzShiRlOXKews24ufknHO7gx30lsDyokKA=\ngithub.com/goccy/go-json v0.10.0/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/google/go-cmp v0.5.5 h1:Khx7svrCpmxxtHBq5j2mp/xVjsi8hQMfNLvJFAlrGgU=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/josharian/intern v1.0.0 h1:vlS4z54oSdjm0bgjRigI+G1HpF+tI+9rE5LLzOg8HmY=\ngithub.com/josharian/intern v1.0.0/go.mod h1:5DoeVV0s6jJacbCEi61lwdGj/aVlrQvzHFFd8Hwg//Y=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/klauspost/cpuid/v2 v2.0.9 h1:lgaqFMSdTdQYdZ04uHyN2d/eKdOMyi2YLSvlQIBFYa4=\ngithub.com/klauspost/cpuid/v2 v2.0.9/go.mod h1:FInQzS24/EEf25PyTYn52gqo7WaD8xa0213Md/qVLRg=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.3.0 h1:WgNl7dwNpEZ6jJ9k1snq4pZsg7DOEN8hP9Xw0Tsjwk0=\ngithub.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/leodido/go-urn v1.2.1 h1:BqpAaACuzVSgi/VLzGZIobT2z4v53pjosyNd9Yv6n/w=\ngithub.com/leodido/go-urn v1.2.1/go.mod h1:zt4jvISO2HfUBqxjfIshjdMTYS56ZS/qv49ictyFfxY=\ngithub.com/mailru/easyjson v0.0.0-20190614124828-94de47d64c63/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=\ngithub.com/mailru/easyjson v0.0.0-20190626092158-b2ccc519800e/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=\ngithub.com/mailru/easyjson v0.7.6 h1:8yTIVnZgCoiM1TgqoeTl+LfU5Jg6/xL3QhGQnimLYnA=\ngithub.com/mailru/easyjson v0.7.6/go.mod h1:xzfreul335JAWq5oZzymOObrkdz5UnU4kGfJJLY9Nlc=\ngithub.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=\ngithub.com/mattn/go-isatty v0.0.17 h1:BTarxUcIeDqL27Mc+vyvdWYSL28zpIhv3RoTdsLMPng=\ngithub.com/mattn/go-isatty v0.0.17/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421 h1:ZqeYNhU3OHLH3mGKHDcjJRFFRrJa6eAM5H+CtDdOsPc=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=\ngithub.com/pelletier/go-toml/v2 v2.0.1/go.mod h1:r9LEWfGN8R5k0VXJ+0BkIe7MYkRdwZOjgMj2KwnJFUo=\ngithub.com/pelletier/go-toml/v2 v2.0.6 h1:nrzqCb7j9cDFj2coyLNLaZuJTLjWjlaz6nvTvIwycIU=\ngithub.com/pelletier/go-toml/v2 v2.0.6/go.mod h1:eumQOmlWiOPt5WriQQqoM5y18pDHwha2N+QD+EUNTek=\ngithub.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=\ngithub.com/rogpeppe/go-internal v1.8.0 h1:FCbCCtXNOY3UtUuHUYaghJg4y7Fd14rXifAYUAtL9R8=\ngithub.com/rogpeppe/go-internal v1.8.0/go.mod h1:WmiCO8CzOY8rg0OYDC4/i/2WRWAB6poM+XZ2dLUbcbE=\ngithub.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1 h1:w7B6lhMri9wdJUVmEZPGGhZzrYTPvgJArz7wNPgYKsk=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/swaggo/files v1.0.1 h1:J1bVJ4XHZNq0I46UU90611i9/YzdrF7x92oX1ig5IdE=\ngithub.com/swaggo/files v1.0.1/go.mod h1:0qXmMNH6sXNf+73t65aKeB+ApmgxdnkQzVTAj2uaMUg=\ngithub.com/swaggo/swag v1.8.12 h1:pctzkNPu0AlQP2royqX3apjKCQonAnf7KGoxeO4y64w=\ngithub.com/swaggo/swag v1.8.12/go.mod h1:lNfm6Gg+oAq3zRJQNEMBE66LIJKM44mxFqhEEgy2its=\ngithub.com/twitchyliquid64/golang-asm v0.15.1 h1:SU5vSMR7hnwNxj24w34ZyCi/FmDZTkS4MhqMhdFk5YI=\ngithub.com/twitchyliquid64/golang-asm v0.15.1/go.mod h1:a1lVb/DtPvCB8fslRZhAngC2+aY1QWCk3Cedj/Gdt08=\ngithub.com/ugorji/go v1.2.7 h1:qYhyWUUd6WbiM+C6JZAUkIJt/1WrjzNHY9+KCIjVqTo=\ngithub.com/ugorji/go v1.2.7/go.mod h1:nF9osbDWLy6bDVv/Rtoh6QgnvNDpmCalQV5urGCCS6M=\ngithub.com/ugorji/go/codec v1.2.7/go.mod h1:WGN1fab3R1fzQlVQTkfxVtIBhWDRqOviHU95kRgeqEY=\ngithub.com/ugorji/go/codec v1.2.9 h1:rmenucSohSTiyL09Y+l2OCk+FrMxGMzho2+tjr5ticU=\ngithub.com/ugorji/go/codec v1.2.9/go.mod h1:UNopzCgEMSXjBc6AOMqYvWC1ktqTAfzJZUZgYf6w6lg=\ngithub.com/urfave/cli/v2 v2.3.0/go.mod h1:LJmUH05zAU44vOAcrfzZQKsZbVcdbOG8rtL3/XcUArI=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngolang.org/x/arch v0.0.0-20210923205945-b76863e36670 h1:18EFjUmQOcUvxNYSkA6jO9VAiXCnxFY6NyDX0bHDmkU=\ngolang.org/x/arch v0.0.0-20210923205945-b76863e36670/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.5.0 h1:U/0M97KRkSFvyD/3FSmdP5W5swImpNgle/EHFhOsQPE=\ngolang.org/x/crypto v0.5.0/go.mod h1:NK/OQwhpMQP3MwtdjgLlYHnH9ebylxKWv3e0fK+mkQU=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.9.0 h1:KENHtAZL2y3NLMYZeHY9DW8HW8V+kQyJsY/V9JlKvCs=\ngolang.org/x/mod v0.9.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210421230115-4e50805a0758/go.mod h1:72T/g9IO56b78aLF+1Kcs5dz7/ng1VjMUvfKvpfy+jM=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.5.0/go.mod h1:DivGGAXEgPSlEBzxGzZI+ZLohi+xUj054jfeKui00ws=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.7.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.8.0 h1:Zrh2ngAOFYneWTAIAPethzeaQLuHwhuBkuV6ZiRnUaQ=\ngolang.org/x/net v0.8.0/go.mod h1:QVkue5JL9kW//ek3r6jTKnTFis1tRmNAW2P1shuFdJc=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210420072515-93ed5bcd2bfe/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210806184541-e5e7981a1069/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.4.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0 h1:MVltZSvRTcU2ljQOhs94SXPftV6DCNnZViHeQps87pQ=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.4.0/go.mod h1:9P2UbLfCdcvo3p/nzKvsmas4TnlujnuoV9hGgYzW1lQ=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.6.0/go.mod h1:m6U89DPEgQRMq3DNkDClhWw02AUbt2daBVO4cn4Hv9U=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.3.8/go.mod h1:E6s5w1FMmriuDzIBO73fBruAKo1PCIq6d2Q6DHfQ8WQ=\ngolang.org/x/text v0.6.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.8.0 h1:57P1ETyNKtuIjB4SRd15iJxuhj8Gc416Y78H3qgMh68=\ngolang.org/x/text v0.8.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/tools v0.7.0 h1:W4OVu8VVOaIO0yzWMNdepAulS7YfoS3Zabrm8DOXXU4=\ngolang.org/x/tools v0.7.0/go.mod h1:4pg6aUX35JBAogB10C9AtvVL+qowtN4pT3CGSQex14s=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543 h1:E7g+9GITq07hpfrRu66IVDexMakfv52eLZ2CXBWiKr4=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.28.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=\ngoogle.golang.org/protobuf v1.28.1 h1:d0NfwRgPtno5B1Wa6L2DAG+KivqkdutMf1UhdNx175w=\ngoogle.golang.org/protobuf v1.28.1/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.3/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20200615113413-eeeca48fe776/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nrsc.io/pdf v0.1.1/go.mod h1:n8OzWcQ6Sp37PL01nO98y4iUCRdTGarVfzxY20ICaU4=\n"
        },
        {
          "name": "swagger.go",
          "type": "blob",
          "size": 10.7275390625,
          "content": "package ginSwagger\n\nimport (\n\thtmlTemplate \"html/template\"\n\t\"net/http\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"regexp\"\n\t\"sync\"\n\ttextTemplate \"text/template\"\n\n\t\"golang.org/x/net/webdav\"\n\n\t\"github.com/gin-gonic/gin\"\n\t\"github.com/swaggo/swag\"\n)\n\ntype swaggerConfig struct {\n\tURL                      string\n\tDocExpansion             string\n\tTitle                    string\n\tOauth2RedirectURL        htmlTemplate.JS\n\tDefaultModelsExpandDepth int\n\tDeepLinking              bool\n\tPersistAuthorization     bool\n\tOauth2DefaultClientID    string\n\tOauth2UsePkce            bool\n}\n\n// Config stores ginSwagger configuration variables.\ntype Config struct {\n\t// The url pointing to API definition (normally swagger.json or swagger.yaml). Default is `doc.json`.\n\tURL                      string\n\tDocExpansion             string\n\tInstanceName             string\n\tTitle                    string\n\tDefaultModelsExpandDepth int\n\tDeepLinking              bool\n\tPersistAuthorization     bool\n\tOauth2DefaultClientID    string\n\tOauth2UsePkce            bool\n}\n\nfunc (config Config) toSwaggerConfig() swaggerConfig {\n\treturn swaggerConfig{\n\t\tURL:                      config.URL,\n\t\tDeepLinking:              config.DeepLinking,\n\t\tDocExpansion:             config.DocExpansion,\n\t\tDefaultModelsExpandDepth: config.DefaultModelsExpandDepth,\n\t\tOauth2RedirectURL: \"`${window.location.protocol}//${window.location.host}$\" +\n\t\t\t\"{window.location.pathname.split('/').slice(0, window.location.pathname.split('/').length - 1).join('/')}\" +\n\t\t\t\"/oauth2-redirect.html`\",\n\t\tTitle:                 config.Title,\n\t\tPersistAuthorization:  config.PersistAuthorization,\n\t\tOauth2DefaultClientID: config.Oauth2DefaultClientID,\n\t\tOauth2UsePkce:         config.Oauth2UsePkce,\n\t}\n}\n\n// URL presents the url pointing to API definition (normally swagger.json or swagger.yaml).\nfunc URL(url string) func(*Config) {\n\treturn func(c *Config) {\n\t\tc.URL = url\n\t}\n}\n\n// DocExpansion list, full, none.\nfunc DocExpansion(docExpansion string) func(*Config) {\n\treturn func(c *Config) {\n\t\tc.DocExpansion = docExpansion\n\t}\n}\n\n// DeepLinking set the swagger deep linking configuration.\nfunc DeepLinking(deepLinking bool) func(*Config) {\n\treturn func(c *Config) {\n\t\tc.DeepLinking = deepLinking\n\t}\n}\n\n// DefaultModelsExpandDepth set the default expansion depth for models\n// (set to -1 completely hide the models).\nfunc DefaultModelsExpandDepth(depth int) func(*Config) {\n\treturn func(c *Config) {\n\t\tc.DefaultModelsExpandDepth = depth\n\t}\n}\n\n// InstanceName set the instance name that was used to generate the swagger documents\n// Defaults to swag.Name (\"swagger\").\nfunc InstanceName(name string) func(*Config) {\n\treturn func(c *Config) {\n\t\tc.InstanceName = name\n\t}\n}\n\n// PersistAuthorization Persist authorization information over browser close/refresh.\n// Defaults to false.\nfunc PersistAuthorization(persistAuthorization bool) func(*Config) {\n\treturn func(c *Config) {\n\t\tc.PersistAuthorization = persistAuthorization\n\t}\n}\n\n// Oauth2DefaultClientID set the default client ID used for OAuth2\nfunc Oauth2DefaultClientID(oauth2DefaultClientID string) func(*Config) {\n\treturn func(c *Config) {\n\t\tc.Oauth2DefaultClientID = oauth2DefaultClientID\n\t}\n}\n\n// Oauth2UsePkce enables Proof Key for Code Exchange.\n// Corresponds to the usePkceWithAuthorizationCodeGrant property of the Swagger UI\n// and applies only to accessCode (Authorization Code) flows.\nfunc Oauth2UsePkce(usePkce bool) func(*Config) {\n\treturn func(c *Config) {\n\t\tc.Oauth2UsePkce = usePkce\n\t}\n}\n\n// WrapHandler wraps `http.Handler` into `gin.HandlerFunc`.\nfunc WrapHandler(handler *webdav.Handler, options ...func(*Config)) gin.HandlerFunc {\n\tvar config = Config{\n\t\tURL:                      \"doc.json\",\n\t\tDocExpansion:             \"list\",\n\t\tInstanceName:             swag.Name,\n\t\tTitle:                    \"Swagger UI\",\n\t\tDefaultModelsExpandDepth: 1,\n\t\tDeepLinking:              true,\n\t\tPersistAuthorization:     false,\n\t\tOauth2DefaultClientID:    \"\",\n\t\tOauth2UsePkce:            false,\n\t}\n\n\tfor _, c := range options {\n\t\tc(&config)\n\t}\n\n\treturn CustomWrapHandler(&config, handler)\n}\n\n// CustomWrapHandler wraps `http.Handler` into `gin.HandlerFunc`.\nfunc CustomWrapHandler(config *Config, handler *webdav.Handler) gin.HandlerFunc {\n\tvar once sync.Once\n\n\tif config.InstanceName == \"\" {\n\t\tconfig.InstanceName = swag.Name\n\t}\n\n\tif config.Title == \"\" {\n\t\tconfig.Title = \"Swagger UI\"\n\t}\n\n\t// create a template with name\n\tindex, _ := htmlTemplate.New(\"swagger_index.html\").Parse(swaggerIndexTpl)\n\tjs, _ := textTemplate.New(\"swagger_index.js\").Parse(swaggerJSTpl)\n\tcss, _ := textTemplate.New(\"swagger_index.css\").Parse(swaggerStyleTpl)\n\n\tvar matcher = regexp.MustCompile(`(.*)(index\\.html|index\\.css|swagger-initializer\\.js|doc\\.json|favicon-16x16\\.png|favicon-32x32\\.png|/oauth2-redirect\\.html|swagger-ui\\.css|swagger-ui\\.css\\.map|swagger-ui\\.js|swagger-ui\\.js\\.map|swagger-ui-bundle\\.js|swagger-ui-bundle\\.js\\.map|swagger-ui-standalone-preset\\.js|swagger-ui-standalone-preset\\.js\\.map)[?|.]*`)\n\n\treturn func(ctx *gin.Context) {\n\t\tif ctx.Request.Method != http.MethodGet {\n\t\t\tctx.AbortWithStatus(http.StatusMethodNotAllowed)\n\n\t\t\treturn\n\t\t}\n\n\t\tmatches := matcher.FindStringSubmatch(ctx.Request.RequestURI)\n\n\t\tif len(matches) != 3 {\n\t\t\tctx.String(http.StatusNotFound, http.StatusText(http.StatusNotFound))\n\n\t\t\treturn\n\t\t}\n\n\t\tpath := matches[2]\n\t\tonce.Do(func() {\n\t\t\thandler.Prefix = matches[1]\n\t\t})\n\n\t\tswitch filepath.Ext(path) {\n\t\tcase \".html\":\n\t\t\tctx.Header(\"Content-Type\", \"text/html; charset=utf-8\")\n\t\tcase \".css\":\n\t\t\tctx.Header(\"Content-Type\", \"text/css; charset=utf-8\")\n\t\tcase \".js\":\n\t\t\tctx.Header(\"Content-Type\", \"application/javascript\")\n\t\tcase \".png\":\n\t\t\tctx.Header(\"Content-Type\", \"image/png\")\n\t\tcase \".json\":\n\t\t\tctx.Header(\"Content-Type\", \"application/json; charset=utf-8\")\n\t\t}\n\n\t\tswitch path {\n\t\tcase \"index.html\":\n\t\t\t_ = index.Execute(ctx.Writer, config.toSwaggerConfig())\n\t\tcase \"index.css\":\n\t\t\t_ = css.Execute(ctx.Writer, config.toSwaggerConfig())\n\t\tcase \"swagger-initializer.js\":\n\t\t\t_ = js.Execute(ctx.Writer, config.toSwaggerConfig())\n\t\tcase \"doc.json\":\n\t\t\tdoc, err := swag.ReadDoc(config.InstanceName)\n\t\t\tif err != nil {\n\t\t\t\tctx.AbortWithStatus(http.StatusInternalServerError)\n\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tctx.String(http.StatusOK, doc)\n\t\tdefault:\n\t\t\thandler.ServeHTTP(ctx.Writer, ctx.Request)\n\t\t}\n\t}\n}\n\n// DisablingWrapHandler turn handler off\n// if specified environment variable passed.\nfunc DisablingWrapHandler(handler *webdav.Handler, envName string) gin.HandlerFunc {\n\tif os.Getenv(envName) != \"\" {\n\t\treturn func(c *gin.Context) {\n\t\t\t// Simulate behavior when route unspecified and\n\t\t\t// return 404 HTTP code\n\t\t\tc.String(http.StatusNotFound, \"\")\n\t\t}\n\t}\n\n\treturn WrapHandler(handler)\n}\n\n// DisablingCustomWrapHandler turn handler off\n// if specified environment variable passed.\nfunc DisablingCustomWrapHandler(config *Config, handler *webdav.Handler, envName string) gin.HandlerFunc {\n\tif os.Getenv(envName) != \"\" {\n\t\treturn func(c *gin.Context) {\n\t\t\t// Simulate behavior when route unspecified and\n\t\t\t// return 404 HTTP code\n\t\t\tc.String(http.StatusNotFound, \"\")\n\t\t}\n\t}\n\n\treturn CustomWrapHandler(config, handler)\n}\n\nconst swaggerStyleTpl = `\nhtml\n{\n    box-sizing: border-box;\n    overflow: -moz-scrollbars-vertical;\n    overflow-y: scroll;\n}\n*,\n*:before,\n*:after\n{\n    box-sizing: inherit;\n}\n\nbody {\n  margin:0;\n  background: #fafafa;\n}\n`\n\nconst swaggerJSTpl = `\nwindow.onload = function() {\n  // Build a system\n  const ui = SwaggerUIBundle({\n    url: \"{{.URL}}\",\n    dom_id: '#swagger-ui',\n    validatorUrl: null,\n    oauth2RedirectUrl: {{.Oauth2RedirectURL}},\n    persistAuthorization: {{.PersistAuthorization}},\n    presets: [\n      SwaggerUIBundle.presets.apis,\n      SwaggerUIStandalonePreset\n    ],\n    plugins: [\n      SwaggerUIBundle.plugins.DownloadUrl\n    ],\n\tlayout: \"StandaloneLayout\",\n    docExpansion: \"{{.DocExpansion}}\",\n\tdeepLinking: {{.DeepLinking}},\n\tdefaultModelsExpandDepth: {{.DefaultModelsExpandDepth}}\n  })\n\n  const defaultClientId = \"{{.Oauth2DefaultClientID}}\";\n  if (defaultClientId) {\n    ui.initOAuth({\n      clientId: defaultClientId,\n      usePkceWithAuthorizationCodeGrant: {{.Oauth2UsePkce}}\n    })\n  }\n\n  window.ui = ui\n}\n`\n\nconst swaggerIndexTpl = `<!-- HTML for static distribution bundle build -->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>{{.Title}}</title>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"./swagger-ui.css\" >\n  <link rel=\"icon\" type=\"image/png\" href=\"./favicon-32x32.png\" sizes=\"32x32\" />\n  <link rel=\"icon\" type=\"image/png\" href=\"./favicon-16x16.png\" sizes=\"16x16\" />\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"index.css\" />\n</head>\n\n<body>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"position:absolute;width:0;height:0\">\n  <defs>\n    <symbol viewBox=\"0 0 20 20\" id=\"unlocked\">\n          <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z\"></path>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"locked\">\n      <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"close\">\n      <path d=\"M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow\">\n      <path d=\"M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 20 20\" id=\"large-arrow-down\">\n      <path d=\"M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z\"/>\n    </symbol>\n\n\n    <symbol viewBox=\"0 0 24 24\" id=\"jump-to\">\n      <path d=\"M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z\"/>\n    </symbol>\n\n    <symbol viewBox=\"0 0 24 24\" id=\"expand\">\n      <path d=\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"/>\n    </symbol>\n\n  </defs>\n</svg>\n\n<div id=\"swagger-ui\"></div>\n\n<script src=\"./swagger-ui-bundle.js\"> </script>\n<script src=\"./swagger-ui-standalone-preset.js\"> </script>\n<script src=\"./swagger-initializer.js\"> </script>\n</body>\n\n</html>\n`\n"
        },
        {
          "name": "swagger_test.go",
          "type": "blob",
          "size": 8.0498046875,
          "content": "package ginSwagger\n\nimport (\n\t\"io/ioutil\"\n\t\"net/http\"\n\t\"net/http/httptest\"\n\t\"os\"\n\t\"testing\"\n\n\t\"github.com/gin-contrib/gzip\"\n\t\"github.com/swaggo/swag\"\n\n\t\"github.com/gin-gonic/gin\"\n\t\"github.com/stretchr/testify/assert\"\n\tswaggerFiles \"github.com/swaggo/files\"\n)\n\ntype mockedSwag struct{}\n\nfunc (s *mockedSwag) ReadDoc() string {\n\treturn `{\n}`\n}\n\nfunc TestWrapHandler(t *testing.T) {\n\tgin.SetMode(gin.TestMode)\n\trouter := gin.New()\n\n\trouter.GET(\"/*any\", WrapHandler(swaggerFiles.Handler, URL(\"https://github.com/swaggo/gin-swagger\")))\n\n\tassert.Equal(t, http.StatusOK, performRequest(\"GET\", \"/index.html\", router).Code)\n}\n\nfunc TestWrapCustomHandler(t *testing.T) {\n\tgin.SetMode(gin.TestMode)\n\trouter := gin.New()\n\n\trouter.Any(\"/*any\", CustomWrapHandler(&Config{}, swaggerFiles.Handler))\n\n\tw1 := performRequest(http.MethodGet, \"/index.html\", router)\n\tassert.Equal(t, http.StatusOK, w1.Code)\n\tassert.Equal(t, w1.Header()[\"Content-Type\"][0], \"text/html; charset=utf-8\")\n\n\tassert.Equal(t, http.StatusInternalServerError, performRequest(http.MethodGet, \"/doc.json\", router).Code)\n\n\tdoc := &mockedSwag{}\n\tswag.Register(swag.Name, doc)\n\n\tw2 := performRequest(http.MethodGet, \"/doc.json\", router)\n\tassert.Equal(t, http.StatusOK, w2.Code)\n\tassert.Equal(t, w2.Header()[\"Content-Type\"][0], \"application/json; charset=utf-8\")\n\n\t// Perform body rendering validation\n\tw2Body, err := ioutil.ReadAll(w2.Body)\n\tassert.NoError(t, err)\n\tassert.Equal(t, doc.ReadDoc(), string(w2Body))\n\n\tw3 := performRequest(http.MethodGet, \"/favicon-16x16.png\", router)\n\tassert.Equal(t, http.StatusOK, w3.Code)\n\tassert.Equal(t, w3.Header()[\"Content-Type\"][0], \"image/png\")\n\n\tw4 := performRequest(http.MethodGet, \"/swagger-ui.css\", router)\n\tassert.Equal(t, http.StatusOK, w4.Code)\n\tassert.Equal(t, w4.Header()[\"Content-Type\"][0], \"text/css; charset=utf-8\")\n\n\tw5 := performRequest(http.MethodGet, \"/swagger-ui-bundle.js\", router)\n\tassert.Equal(t, http.StatusOK, w5.Code)\n\tassert.Equal(t, w5.Header()[\"Content-Type\"][0], \"application/javascript\")\n\n\tw6 := performRequest(http.MethodGet, \"/index.css\", router)\n\tassert.Equal(t, http.StatusOK, w6.Code)\n\tassert.Equal(t, w6.Header()[\"Content-Type\"][0], \"text/css; charset=utf-8\")\n\n\tw7 := performRequest(http.MethodGet, \"/swagger-initializer.js\", router)\n\tassert.Equal(t, http.StatusOK, w7.Code)\n\tassert.Equal(t, w7.Header()[\"Content-Type\"][0], \"application/javascript\")\n\n\tassert.Equal(t, http.StatusNotFound, performRequest(http.MethodGet, \"/notfound\", router).Code)\n\n\tassert.Equal(t, http.StatusMethodNotAllowed, performRequest(http.MethodPost, \"/index.html\", router).Code)\n\n\tassert.Equal(t, http.StatusMethodNotAllowed, performRequest(http.MethodPut, \"/index.html\", router).Code)\n}\n\nfunc TestDisablingWrapHandler(t *testing.T) {\n\tgin.SetMode(gin.TestMode)\n\n\trouter := gin.New()\n\tdisablingKey := \"SWAGGER_DISABLE\"\n\n\trouter.GET(\"/simple/*any\", DisablingWrapHandler(swaggerFiles.Handler, disablingKey))\n\n\tassert.Equal(t, http.StatusOK, performRequest(http.MethodGet, \"/simple/index.html\", router).Code)\n\tassert.Equal(t, http.StatusOK, performRequest(http.MethodGet, \"/simple/doc.json\", router).Code)\n\n\tassert.Equal(t, http.StatusOK, performRequest(http.MethodGet, \"/simple/favicon-16x16.png\", router).Code)\n\tassert.Equal(t, http.StatusNotFound, performRequest(http.MethodGet, \"/simple/notfound\", router).Code)\n\n\t_ = os.Setenv(disablingKey, \"true\")\n\n\trouter.GET(\"/disabling/*any\", DisablingWrapHandler(swaggerFiles.Handler, disablingKey))\n\n\tassert.Equal(t, http.StatusNotFound, performRequest(http.MethodGet, \"/disabling/index.html\", router).Code)\n\tassert.Equal(t, http.StatusNotFound, performRequest(http.MethodGet, \"/disabling/doc.json\", router).Code)\n\tassert.Equal(t, http.StatusNotFound, performRequest(http.MethodGet, \"/disabling/oauth2-redirect.html\", router).Code)\n\tassert.Equal(t, http.StatusNotFound, performRequest(http.MethodGet, \"/disabling/notfound\", router).Code)\n}\n\nfunc TestDisablingCustomWrapHandler(t *testing.T) {\n\tgin.SetMode(gin.TestMode)\n\n\trouter := gin.New()\n\tdisablingKey := \"SWAGGER_DISABLE2\"\n\n\trouter.GET(\"/simple/*any\", DisablingCustomWrapHandler(&Config{}, swaggerFiles.Handler, disablingKey))\n\n\tassert.Equal(t, http.StatusOK, performRequest(http.MethodGet, \"/simple/index.html\", router).Code)\n\n\t_ = os.Setenv(disablingKey, \"true\")\n\n\trouter.GET(\"/disabling/*any\", DisablingCustomWrapHandler(&Config{}, swaggerFiles.Handler, disablingKey))\n\n\tassert.Equal(t, http.StatusNotFound, performRequest(http.MethodGet, \"/disabling/index.html\", router).Code)\n}\n\nfunc TestWithGzipMiddleware(t *testing.T) {\n\tgin.SetMode(gin.TestMode)\n\trouter := gin.New()\n\n\trouter.Use(gzip.Gzip(gzip.BestSpeed))\n\n\trouter.GET(\"/*any\", WrapHandler(swaggerFiles.Handler))\n\n\tw1 := performRequest(http.MethodGet, \"/index.html\", router)\n\tassert.Equal(t, http.StatusOK, w1.Code)\n\tassert.Equal(t, w1.Header()[\"Content-Type\"][0], \"text/html; charset=utf-8\")\n\n\tw2 := performRequest(http.MethodGet, \"/swagger-ui.css\", router)\n\tassert.Equal(t, http.StatusOK, w2.Code)\n\tassert.Equal(t, w2.Header()[\"Content-Type\"][0], \"text/css; charset=utf-8\")\n\n\tw3 := performRequest(http.MethodGet, \"/swagger-ui-bundle.js\", router)\n\tassert.Equal(t, http.StatusOK, w3.Code)\n\tassert.Equal(t, w3.Header()[\"Content-Type\"][0], \"application/javascript\")\n\n\tw4 := performRequest(http.MethodGet, \"/doc.json\", router)\n\tassert.Equal(t, http.StatusOK, w4.Code)\n\tassert.Equal(t, w4.Header()[\"Content-Type\"][0], \"application/json; charset=utf-8\")\n}\n\nfunc performRequest(method, target string, router *gin.Engine) *httptest.ResponseRecorder {\n\tr := httptest.NewRequest(method, target, nil)\n\tw := httptest.NewRecorder()\n\trouter.ServeHTTP(w, r)\n\treturn w\n}\n\nfunc TestURL(t *testing.T) {\n\tcfg := Config{}\n\n\texpected := \"https://github.com/swaggo/http-swagger\"\n\tconfigFunc := URL(expected)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, expected, cfg.URL)\n}\n\nfunc TestDocExpansion(t *testing.T) {\n\tvar cfg Config\n\n\texpected := \"list\"\n\tconfigFunc := DocExpansion(expected)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, expected, cfg.DocExpansion)\n\n\texpected = \"full\"\n\tconfigFunc = DocExpansion(expected)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, expected, cfg.DocExpansion)\n\n\texpected = \"none\"\n\tconfigFunc = DocExpansion(expected)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, expected, cfg.DocExpansion)\n}\n\nfunc TestDeepLinking(t *testing.T) {\n\tvar cfg Config\n\tassert.Equal(t, false, cfg.DeepLinking)\n\n\tconfigFunc := DeepLinking(true)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, true, cfg.DeepLinking)\n\n\tconfigFunc = DeepLinking(false)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, false, cfg.DeepLinking)\n\n}\n\nfunc TestDefaultModelsExpandDepth(t *testing.T) {\n\tvar cfg Config\n\n\tassert.Equal(t, 0, cfg.DefaultModelsExpandDepth)\n\n\texpected := -1\n\tconfigFunc := DefaultModelsExpandDepth(expected)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, expected, cfg.DefaultModelsExpandDepth)\n\n\texpected = 1\n\tconfigFunc = DefaultModelsExpandDepth(expected)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, expected, cfg.DefaultModelsExpandDepth)\n}\n\nfunc TestInstanceName(t *testing.T) {\n\tvar cfg Config\n\n\tassert.Equal(t, \"\", cfg.InstanceName)\n\n\texpected := swag.Name\n\tconfigFunc := InstanceName(expected)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, expected, cfg.InstanceName)\n\n\texpected = \"custom_name\"\n\tconfigFunc = InstanceName(expected)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, expected, cfg.InstanceName)\n}\n\nfunc TestPersistAuthorization(t *testing.T) {\n\tvar cfg Config\n\tassert.Equal(t, false, cfg.PersistAuthorization)\n\n\tconfigFunc := PersistAuthorization(true)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, true, cfg.PersistAuthorization)\n\n\tconfigFunc = PersistAuthorization(false)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, false, cfg.PersistAuthorization)\n}\n\nfunc TestOauth2DefaultClientID(t *testing.T) {\n\tvar cfg Config\n\tassert.Equal(t, \"\", cfg.Oauth2DefaultClientID)\n\n\tconfigFunc := Oauth2DefaultClientID(\"default_client_id\")\n\tconfigFunc(&cfg)\n\tassert.Equal(t, \"default_client_id\", cfg.Oauth2DefaultClientID)\n\n\tconfigFunc = Oauth2DefaultClientID(\"\")\n\tconfigFunc(&cfg)\n\tassert.Equal(t, \"\", cfg.Oauth2DefaultClientID)\n}\n\nfunc TestOauth2UsePkce(t *testing.T) {\n\tvar cfg Config\n\tassert.Equal(t, false, cfg.Oauth2UsePkce)\n\n\tconfigFunc := Oauth2UsePkce(true)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, true, cfg.Oauth2UsePkce)\n\n\tconfigFunc = Oauth2UsePkce(false)\n\tconfigFunc(&cfg)\n\tassert.Equal(t, false, cfg.Oauth2UsePkce)\n}\n"
        }
      ]
    }
  ]
}