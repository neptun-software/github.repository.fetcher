{
  "metadata": {
    "timestamp": 1736568099183,
    "page": 238,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "maaslalani/slides",
      "stars": 10265,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.046875,
          "content": "/slides\n.idea\nslides_ed25519\nslides_ed25519.pub\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.0341796875,
          "content": "# Code of Conduct\n\nBe nice please!\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.0947265625,
          "content": "Take a look at the [Development Docs](./docs/development/README.md).\n\nPull requests are welcome!\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.04296875,
          "content": "MIT License\n\nCopyright (c) 2021 Maas Lalani\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.095703125,
          "content": "make:\n\tgo run main.go examples/slides.md\n\ntest:\n\tgo test ./... -short\n\nbuild:\n\tgo build -o slides\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.1806640625,
          "content": "# Slides\n\nSlides in your terminal.\n\n<p align=\"center\">\n  <img src=\"./assets/slides-1.gif?raw=true\" alt=\"Slides Presentation\" />\n</p>\n\n### Installation\n[![Homebrew](https://img.shields.io/badge/dynamic/json.svg?url=https://formulae.brew.sh/api/formula/slides.json&query=$.versions.stable&label=homebrew)](https://formulae.brew.sh/formula/slides)\n[![Snapcraft](https://snapcraft.io/slides/badge.svg)](https://snapcraft.io/slides)\n[![AUR](https://img.shields.io/aur/version/slides?label=AUR)](https://aur.archlinux.org/packages/slides)\n\n<details markdown=\"block\">\n<summary>Instructions</summary>\n\n#### MacOS\n```\nbrew install slides\n```\n#### Arch\n```\nyay -S slides\n```\n#### Nixpkgs (unstable)\n```\nnix-env -iA nixpkgs.slides\n```\n#### Any Linux Distro running `snapd`\n```\nsudo snap install slides\n```\n#### Go\n```\ngo install github.com/maaslalani/slides@latest\n```\nFrom source:\n```\ngit clone https://github.com/maaslalani/slides.git\ncd slides\ngo install\n```\n\nYou can also download a binary from the [releases](https://github.com/maaslalani/slides/releases) page.\n\n</details>\n\n\n### Usage\nCreate a simple markdown file that contains your slides:\n\n````markdown\n# Welcome to Slides\nA terminal based presentation tool\n\n---\n\n## Everything is markdown\nIn fact, this entire presentation is a markdown file.\n\n---\n\n## Everything happens in your terminal\nCreate slides and present them without ever leaving your terminal.\n\n---\n\n## Code execution\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n  fmt.Println(\"Execute code directly inside the slides\")\n}\n```\n\nYou can execute code inside your slides by pressing `<C-e>`,\nthe output of your command will be displayed at the end of the current slide.\n\n---\n\n## Pre-process slides\n\nYou can add a code block with three tildes (`~`) and write a command to run *before* displaying\nthe slides, the text inside the code block will be passed as `stdin` to the command\nand the code block will be replaced with the `stdout` of the command.\n\n```\n~~~graph-easy --as=boxart\n[ A ] - to -> [ B ]\n~~~\n```\n\nThe above will be pre-processed to look like:\n\n┌───┐  to   ┌───┐\n│ A │ ────> │ B │\n└───┘       └───┘\n\nFor security reasons, you must pass a file that has execution permissions\nfor the slides to be pre-processed. You can use `chmod` to add these permissions.\n\n```bash\nchmod +x file.md\n```\n\n````\n\nCheckout the [example slides](https://github.com/maaslalani/slides/tree/main/examples).\n\nThen, to present, run:\n```\nslides presentation.md\n```\n\nIf given a file name, `slides` will automatically look for changes in the file and update the presentation live.\n\n`slides` also accepts input through `stdin`:\n```\ncurl http://example.com/slides.md | slides\n```\n\nGo to the first slide with the following key sequence:\n* <kbd>g</kbd> <kbd>g</kbd>\n\nGo to the next slide with any of the following key sequences:\n* <kbd>space</kbd>\n* <kbd>right</kbd>\n* <kbd>down</kbd>\n* <kbd>enter</kbd>\n* <kbd>n</kbd>\n* <kbd>j</kbd>\n* <kbd>l</kbd>\n* <kbd>Page Down</kbd>\n* number + any of the above (go forward n slides)\n\nGo to the previous slide with any of the following key sequences:\n* <kbd>left</kbd>\n* <kbd>up</kbd>\n* <kbd>p</kbd>\n* <kbd>h</kbd>\n* <kbd>k</kbd>\n* <kbd>N</kbd>\n* <kbd>Page Up</kbd>\n* number + any of the above (go back n slides)\n\nGo to a specific slide with the following key sequence:\n\n* number + <kbd>G</kbd>\n\nGo to the last slide with the following key:\n\n* <kbd>G</kbd>\n\n### Search\n\nTo quickly jump to the right slide, you can use the search function.\n\nPress <kbd>/</kbd>, enter your search term and press <kbd>Enter</kbd>  \n(*The search term is interpreted as a regular expression. The `/i` flag causes case-insensitivity.*).\n\nPress <kbd>ctrl+n</kbd> after a search to go to the next search result.\n\n### Code Execution\n\nIf slides finds a code block on the current slides it can execute the code block and display the result as virtual text\non the screen.\n\nPress <kbd>ctrl+e</kbd> on a slide with a code block to execute it and display the result.\n\n### Pre-processing\n\nYou can add a code block with three tildes (`~`) and write a command to run\n*before* displaying the slides, the text inside the code block will be passed\nas `stdin` to the command and the code block will be replaced with the `stdout`\nof the command. Wrap the pre-processed block in three backticks to keep\nproper formatting and new lines.\n\n````\n```\n~~~graph-easy --as=boxart\n[ A ] - to -> [ B ]\n~~~\n```\n````\n\nThe above will be pre-processed to look like:\n\n```\n┌───┐  to   ┌───┐\n│ A │ ────> │ B │\n└───┘       └───┘\n```\n\nFor security reasons, you must pass a file that has execution permissions\nfor the slides to be pre-processed. You can use `chmod` to add these permissions.\n\n```bash\nchmod +x file.md\n```\n\n### Configuration\n\n`slides` allows you to customize your presentation's look and feel with metadata at the top of your `slides.md`.\n\n> This section is entirely optional, `slides` will use sensible defaults if this section or any field in the section is omitted.\n\n```yaml\n---\ntheme: ./path/to/theme.json\nauthor: Gopher\ndate: MMMM dd, YYYY\npaging: Slide %d / %d\n---\n```\n\n* `theme`: Path to `json` file containing a [glamour\n  theme](https://github.com/charmbracelet/glamour/tree/master/styles), can also\n  be a link to a remote `json` file which slides will fetch before presenting.\n* `author`: A `string` to display on the bottom-left corner of the presentation\n  view. Defaults to the OS current user's full name. Can be empty to hide the author.\n* `date`: A `string` that is used to format today's date in the `YYYY-MM-DD` format. If the date is not a valid\n  format, the string will be displayed. Defaults to `YYYY-MM-DD`.\n* `paging`: A `string` that contains 0 or more `%d` directives. The first `%d`\n  will be replaced with the current slide number and the second `%d` will be\n  replaced with the total slides count. Defaults to `Slide %d / %d`.\n  You will need to surround the paging value with quotes if it starts with `%`.\n\n#### Date format\n\nGiven the date _January 02, 2006_:\n\n| Value  | Translates to |\n|--------|---------------|\n| `YYYY` | 2006          |\n| `YY`   | 06            |\n| `MMMM` | January       |\n| `MMM`  | Jan           |\n| `MM`   | 01            |\n| `mm`   | 1             |\n| `DD`   | 02            |\n| `dd`   | 2             |\n\n### SSH\n\nSlides is accessible over `ssh` if hosted on a machine through the `slides\nserve [file]` command.\n\nOn a machine, run:\n\n```\nslides serve [file]\n```\n\nThen, on another machine (or same machine), `ssh` into the port specified by\nthe `slides serve [file]` command:\n```\nssh 127.0.0.1 -p 53531\n```\n\nYou will be able to access the presentation hosted over SSH! You can use this\nto present with `slides` from a computer that doesn't have `slides` installed,\nbut does have `ssh`. Or, let your viewers have access to the slides on their\nown computer without needing to download `slides` and the presentation file.\n\n### Alternatives\n\n**Credits**: This project was heavily inspired by [`lookatme`](https://github.com/d0c-s4vage/lookatme).\n\n* [`lookatme`](https://github.com/d0c-s4vage/lookatme)\n* [`sli.dev`](https://sli.dev/)\n* [`sent`](https://tools.suckless.org/sent/)\n* [`presenterm`](https://github.com/mfontanini/presenterm)\n\n### Development\nSee the [development documentation](./docs/development)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.0947265625,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nEmail [maas@lalani.dev](mailto:maas@lalani.dev)\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 2.365234375,
          "content": "module github.com/maaslalani/slides\n\ngo 1.22\n\nrequire (\n\tgithub.com/atotto/clipboard v0.1.4\n\tgithub.com/charmbracelet/bubbles v0.18.0\n\tgithub.com/charmbracelet/bubbletea v0.26.2\n\tgithub.com/charmbracelet/glamour v0.7.0\n\tgithub.com/charmbracelet/lipgloss v0.10.0\n\tgithub.com/charmbracelet/ssh v0.0.0-20240507011153-ec70bd03034c\n\tgithub.com/charmbracelet/wish v1.4.0\n\tgithub.com/muesli/coral v1.0.0\n\tgithub.com/muesli/termenv v0.15.2\n\tgithub.com/stretchr/testify v1.9.0\n\tgopkg.in/yaml.v2 v2.4.0\n)\n\nrequire (\n\tgithub.com/alecthomas/chroma/v2 v2.8.0 // indirect\n\tgithub.com/anmitsu/go-shlex v0.0.0-20200514113438-38f4b401e2be // indirect\n\tgithub.com/aymanbagabas/go-osc52/v2 v2.0.1 // indirect\n\tgithub.com/aymerick/douceur v0.2.0 // indirect\n\tgithub.com/charmbracelet/keygen v0.5.0 // indirect\n\tgithub.com/charmbracelet/log v0.4.0 // indirect\n\tgithub.com/charmbracelet/x/errors v0.0.0-20240117030013-d31dba354651 // indirect\n\tgithub.com/charmbracelet/x/exp/term v0.0.0-20240328150354-ab9afc214dfd // indirect\n\tgithub.com/creack/pty v1.1.21 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/dlclark/regexp2 v1.4.0 // indirect\n\tgithub.com/erikgeiser/coninput v0.0.0-20211004153227-1c3628e74d0f // indirect\n\tgithub.com/go-logfmt/logfmt v0.6.0 // indirect\n\tgithub.com/gorilla/css v1.0.0 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.0.0 // indirect\n\tgithub.com/lucasb-eyer/go-colorful v1.2.0 // indirect\n\tgithub.com/mattn/go-isatty v0.0.18 // indirect\n\tgithub.com/mattn/go-localereader v0.0.1 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.15 // indirect\n\tgithub.com/microcosm-cc/bluemonday v1.0.25 // indirect\n\tgithub.com/muesli/ansi v0.0.0-20230316100256-276c6243b2f6 // indirect\n\tgithub.com/muesli/cancelreader v0.2.2 // indirect\n\tgithub.com/muesli/reflow v0.3.0 // indirect\n\tgithub.com/olekukonko/tablewriter v0.0.5 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/rivo/uniseg v0.4.7 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgithub.com/yuin/goldmark v1.5.4 // indirect\n\tgithub.com/yuin/goldmark-emoji v1.0.2 // indirect\n\tgolang.org/x/crypto v0.21.0 // indirect\n\tgolang.org/x/exp v0.0.0-20231006140011-7918f672742d // indirect\n\tgolang.org/x/net v0.22.0 // indirect\n\tgolang.org/x/sync v0.7.0 // indirect\n\tgolang.org/x/sys v0.20.0 // indirect\n\tgolang.org/x/term v0.20.0 // indirect\n\tgolang.org/x/text v0.14.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 9.978515625,
          "content": "github.com/alecthomas/assert/v2 v2.2.1 h1:XivOgYcduV98QCahG8T5XTezV5bylXe+lBxLG2K2ink=\ngithub.com/alecthomas/assert/v2 v2.2.1/go.mod h1:pXcQ2Asjp247dahGEmsZ6ru0UVwnkhktn7S0bBDLxvQ=\ngithub.com/alecthomas/chroma/v2 v2.8.0 h1:w9WJUjFFmHHB2e8mRpL9jjy3alYDlU0QLDezj1xE264=\ngithub.com/alecthomas/chroma/v2 v2.8.0/go.mod h1:yrkMI9807G1ROx13fhe1v6PN2DDeaR73L3d+1nmYQtw=\ngithub.com/alecthomas/repr v0.2.0 h1:HAzS41CIzNW5syS8Mf9UwXhNH1J9aix/BvDRf1Ml2Yk=\ngithub.com/alecthomas/repr v0.2.0/go.mod h1:Fr0507jx4eOXV7AlPV6AVZLYrLIuIeSOWtW57eE/O/4=\ngithub.com/anmitsu/go-shlex v0.0.0-20200514113438-38f4b401e2be h1:9AeTilPcZAjCFIImctFaOjnTIavg87rW78vTPkQqLI8=\ngithub.com/anmitsu/go-shlex v0.0.0-20200514113438-38f4b401e2be/go.mod h1:ySMOLuWl6zY27l47sB3qLNK6tF2fkHG55UZxx8oIVo4=\ngithub.com/atotto/clipboard v0.1.4 h1:EH0zSVneZPSuFR11BlR9YppQTVDbh5+16AmcJi4g1z4=\ngithub.com/atotto/clipboard v0.1.4/go.mod h1:ZY9tmq7sm5xIbd9bOK4onWV4S6X0u6GY7Vn0Yu86PYI=\ngithub.com/aymanbagabas/go-osc52/v2 v2.0.1 h1:HwpRHbFMcZLEVr42D4p7XBqjyuxQH5SMiErDT4WkJ2k=\ngithub.com/aymanbagabas/go-osc52/v2 v2.0.1/go.mod h1:uYgXzlJ7ZpABp8OJ+exZzJJhRNQ2ASbcXHWsFqH8hp8=\ngithub.com/aymerick/douceur v0.2.0 h1:Mv+mAeH1Q+n9Fr+oyamOlAkUNPWPlA8PPGR0QAaYuPk=\ngithub.com/aymerick/douceur v0.2.0/go.mod h1:wlT5vV2O3h55X9m7iVYN0TBM0NH/MmbLnd30/FjWUq4=\ngithub.com/charmbracelet/bubbles v0.18.0 h1:PYv1A036luoBGroX6VWjQIE9Syf2Wby2oOl/39KLfy0=\ngithub.com/charmbracelet/bubbles v0.18.0/go.mod h1:08qhZhtIwzgrtBjAcJnij1t1H0ZRjwHyGsy6AL11PSw=\ngithub.com/charmbracelet/bubbletea v0.26.2 h1:Eeb+n75Om9gQ+I6YpbCXQRKHt5Pn4vMwusQpwLiEgJQ=\ngithub.com/charmbracelet/bubbletea v0.26.2/go.mod h1:6I0nZ3YHUrQj7YHIHlM8RySX4ZIthTliMY+W8X8b+Gs=\ngithub.com/charmbracelet/glamour v0.7.0 h1:2BtKGZ4iVJCDfMF229EzbeR1QRKLWztO9dMtjmqZSng=\ngithub.com/charmbracelet/glamour v0.7.0/go.mod h1:jUMh5MeihljJPQbJ/wf4ldw2+yBP59+ctV36jASy7ps=\ngithub.com/charmbracelet/keygen v0.5.0 h1:XY0fsoYiCSM9axkrU+2ziE6u6YjJulo/b9Dghnw6MZc=\ngithub.com/charmbracelet/keygen v0.5.0/go.mod h1:DfvCgLHxZ9rJxdK0DGw3C/LkV4SgdGbnliHcObV3L+8=\ngithub.com/charmbracelet/lipgloss v0.10.0 h1:KWeXFSexGcfahHX+54URiZGkBFazf70JNMtwg/AFW3s=\ngithub.com/charmbracelet/lipgloss v0.10.0/go.mod h1:Wig9DSfvANsxqkRsqj6x87irdy123SR4dOXlKa91ciE=\ngithub.com/charmbracelet/log v0.4.0 h1:G9bQAcx8rWA2T3pWvx7YtPTPwgqpk7D68BX21IRW8ZM=\ngithub.com/charmbracelet/log v0.4.0/go.mod h1:63bXt/djrizTec0l11H20t8FDSvA4CRZJ1KH22MdptM=\ngithub.com/charmbracelet/ssh v0.0.0-20240507011153-ec70bd03034c h1:nsxEhgGnHTGPh5qXr7EBHOKaaJ1nmQWIcI5TLRPYDqo=\ngithub.com/charmbracelet/ssh v0.0.0-20240507011153-ec70bd03034c/go.mod h1:8/Ve8iGRRIGFM1kepYfRF2pEOF5Y3TEZYoJaA54228U=\ngithub.com/charmbracelet/wish v1.4.0 h1:pL1uVP/YuYgJheHEj98teZ/n6pMYnmlZq/fcHvomrfc=\ngithub.com/charmbracelet/wish v1.4.0/go.mod h1:ew4/MjJVfW/akEO9KmrQHQv1F7bQRGscRMrA+KtovTk=\ngithub.com/charmbracelet/x/errors v0.0.0-20240117030013-d31dba354651 h1:3RXpZWGWTOeVXCTv0Dnzxdv/MhNUkBfEcbaTY0zrTQI=\ngithub.com/charmbracelet/x/errors v0.0.0-20240117030013-d31dba354651/go.mod h1:2P0UgXMEa6TsToMSuFqKFQR+fZTO9CNGUNokkPatT/0=\ngithub.com/charmbracelet/x/exp/term v0.0.0-20240328150354-ab9afc214dfd h1:HqBjkSFXXfW4IgX3TMKipWoPEN08T3Pi4SA/3DLss/U=\ngithub.com/charmbracelet/x/exp/term v0.0.0-20240328150354-ab9afc214dfd/go.mod h1:6GZ13FjIP6eOCqWU4lqgveGnYxQo9c3qBzHPeFu4HBE=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.1/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.21 h1:1/QdRyBaHHJP61QkWMXlOIBfsgdDeeKfK8SYVUWJKf0=\ngithub.com/creack/pty v1.1.21/go.mod h1:MOBLtS5ELjhRRrroQr9kyvTxUAFNvYEK993ew/Vr4O4=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dlclark/regexp2 v1.4.0 h1:F1rxgk7p4uKjwIQxBs9oAXe5CqrXlCduYEJvrF4u93E=\ngithub.com/dlclark/regexp2 v1.4.0/go.mod h1:2pZnwuY/m+8K6iRw6wQdMtk+rH5tNGR1i55kozfMjCc=\ngithub.com/erikgeiser/coninput v0.0.0-20211004153227-1c3628e74d0f h1:Y/CXytFA4m6baUTXGLOoWe4PQhGxaX0KpnayAqC48p4=\ngithub.com/erikgeiser/coninput v0.0.0-20211004153227-1c3628e74d0f/go.mod h1:vw97MGsxSvLiUE2X8qFplwetxpGLQrlU1Q9AUEIzCaM=\ngithub.com/go-logfmt/logfmt v0.6.0 h1:wGYYu3uicYdqXVgoYbvnkrPVXkuLM1p1ifugDMEdRi4=\ngithub.com/go-logfmt/logfmt v0.6.0/go.mod h1:WYhtIu8zTZfxdn5+rREduYbwxfcBr/Vr6KEVveWlfTs=\ngithub.com/gorilla/css v1.0.0 h1:BQqNyPTi50JCFMTw/b67hByjMVXZRwGha6wxVGkeihY=\ngithub.com/gorilla/css v1.0.0/go.mod h1:Dn721qIggHpt4+EFCcTLTU/vk5ySda2ReITrtgBl60c=\ngithub.com/hexops/gotextdiff v1.0.3 h1:gitA9+qJrrTCsiCl7+kh75nPqQt1cx4ZkudSTLoUqJM=\ngithub.com/hexops/gotextdiff v1.0.3/go.mod h1:pSWU5MAI3yDq+fZBTazCSJysOMbxWL1BSow5/V2vxeg=\ngithub.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NHg9XEKhtSvM=\ngithub.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\ngithub.com/lucasb-eyer/go-colorful v1.2.0 h1:1nnpGOrhyZZuNyfu1QjKiUICQ74+3FNCN69Aj6K7nkY=\ngithub.com/lucasb-eyer/go-colorful v1.2.0/go.mod h1:R4dSotOR9KMtayYi1e77YzuveK+i7ruzyGqttikkLy0=\ngithub.com/mattn/go-isatty v0.0.18 h1:DOKFKCQ7FNG2L1rbrmstDN4QVRdS89Nkh85u68Uwp98=\ngithub.com/mattn/go-isatty v0.0.18/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-localereader v0.0.1 h1:ygSAOl7ZXTx4RdPYinUpg6W99U8jWvWi9Ye2JC/oIi4=\ngithub.com/mattn/go-localereader v0.0.1/go.mod h1:8fBrzywKY7BI3czFoHkuzRoWE9C+EiG4R1k4Cjx5p88=\ngithub.com/mattn/go-runewidth v0.0.9/go.mod h1:H031xJmbD/WCDINGzjvQ9THkh0rPKHF+m2gUSrubnMI=\ngithub.com/mattn/go-runewidth v0.0.12/go.mod h1:RAqKPSqVFrSLVXbA8x7dzmKdmGzieGRCM46jaSJTDAk=\ngithub.com/mattn/go-runewidth v0.0.15 h1:UNAjwbU9l54TA3KzvqLGxwWjHmMgBUVhBiTjelZgg3U=\ngithub.com/mattn/go-runewidth v0.0.15/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\ngithub.com/microcosm-cc/bluemonday v1.0.25 h1:4NEwSfiJ+Wva0VxN5B8OwMicaJvD8r9tlJWm9rtloEg=\ngithub.com/microcosm-cc/bluemonday v1.0.25/go.mod h1:ZIOjCQp1OrzBBPIJmfX4qDYFuhU02nx4bn030ixfHLE=\ngithub.com/muesli/ansi v0.0.0-20230316100256-276c6243b2f6 h1:ZK8zHtRHOkbHy6Mmr5D264iyp3TiX5OmNcI5cIARiQI=\ngithub.com/muesli/ansi v0.0.0-20230316100256-276c6243b2f6/go.mod h1:CJlz5H+gyd6CUWT45Oy4q24RdLyn7Md9Vj2/ldJBSIo=\ngithub.com/muesli/cancelreader v0.2.2 h1:3I4Kt4BQjOR54NavqnDogx/MIoWBFa0StPA8ELUXHmA=\ngithub.com/muesli/cancelreader v0.2.2/go.mod h1:3XuTXfFS2VjM+HTLZY9Ak0l6eUKfijIfMUZ4EgX0QYo=\ngithub.com/muesli/coral v1.0.0 h1:odyqkoEg4aJAINOzvnjN4tUsdp+Zleccs7tRIAkkYzU=\ngithub.com/muesli/coral v1.0.0/go.mod h1:bf91M/dkp7iHQw73HOoR9PekdTJMTD6ihJgWoDitde8=\ngithub.com/muesli/reflow v0.3.0 h1:IFsN6K9NfGtjeggFP+68I4chLZV2yIKsXJFNZ+eWh6s=\ngithub.com/muesli/reflow v0.3.0/go.mod h1:pbwTDkVPibjO2kyvBQRBxTWEEGDGq0FlB1BIKtnHY/8=\ngithub.com/muesli/termenv v0.15.2 h1:GohcuySI0QmI3wN8Ok9PtKGkgkFIk7y6Vpb5PvrY+Wo=\ngithub.com/muesli/termenv v0.15.2/go.mod h1:Epx+iuz8sNs7mNKhxzH4fWXGNpZwUaJKRS1noLXviQ8=\ngithub.com/olekukonko/tablewriter v0.0.5 h1:P2Ga83D34wi1o9J6Wh1mRuqd4mF/x/lgBS7N7AbDhec=\ngithub.com/olekukonko/tablewriter v0.0.5/go.mod h1:hPp6KlRPjbx+hW8ykQs1w3UBbZlj6HuIJcUGPhkA7kY=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/rivo/uniseg v0.1.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rivo/uniseg v0.4.7 h1:WUdvkW8uEhrYfLC4ZzdpI2ztxP1I582+49Oc5Mq64VQ=\ngithub.com/rivo/uniseg v0.4.7/go.mod h1:FN3SvrM+Zdj16jyLfmOkMNblXMcoc8DfTHruCPUcx88=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/yuin/goldmark v1.3.7/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngithub.com/yuin/goldmark v1.5.4 h1:2uY/xC0roWy8IBEGLgB1ywIoEJFGmRrX21YQcvGZzjU=\ngithub.com/yuin/goldmark v1.5.4/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngithub.com/yuin/goldmark-emoji v1.0.2 h1:c/RgTShNgHTtc6xdz2KKI74jJr6rWi7FPgnP9GAsO5s=\ngithub.com/yuin/goldmark-emoji v1.0.2/go.mod h1:RhP/RWpexdp+KHs7ghKnifRoIs/Bq4nDS7tRbCkOwKY=\ngolang.org/x/crypto v0.21.0 h1:X31++rzVUdKhX5sWmSOFZxx8UW/ldWx55cbf08iNAMA=\ngolang.org/x/crypto v0.21.0/go.mod h1:0BP7YvVV9gBbVKyeTG0Gyn+gZm94bibOW5BjDEYAOMs=\ngolang.org/x/exp v0.0.0-20231006140011-7918f672742d h1:jtJma62tbqLibJ5sFQz8bKtEM8rJBtfilJ2qTU199MI=\ngolang.org/x/exp v0.0.0-20231006140011-7918f672742d/go.mod h1:ldy0pHrwJyGW56pPQzzkH36rKxoZW1tw7ZJpeKx+hdo=\ngolang.org/x/net v0.22.0 h1:9sGLhx7iRIHEiX0oAJ3MRZMUCElJgy7Br1nO+AMN3Tc=\ngolang.org/x/net v0.22.0/go.mod h1:JKghWKKOSdJwpW2GEx0Ja7fmaKnMsbu+MWVZTokSYmg=\ngolang.org/x/sync v0.7.0 h1:YsImfSBoP9QPYL0xyKJPq0gcaJdG3rInoqxTWbfQu9M=\ngolang.org/x/sync v0.7.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20210809222454-d867a43fc93e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.20.0 h1:Od9JTbYCk261bKm4M/mw7AklTlFYIa0bIp9BgSm1S8Y=\ngolang.org/x/sys v0.20.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.20.0 h1:VnkxpohqXaOBYJtBmEppKUG6mXpi+4O6purfc2+sMhw=\ngolang.org/x/term v0.20.0/go.mod h1:8UkIAJTvZgivsXaD6/pH6U9ecQzZ45awqEOzuCvwpFY=\ngolang.org/x/text v0.14.0 h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405 h1:yhCVgyC4o1eVCa2tZl7eS0r+SDo693bJlVdllGtEeKM=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 1.0439453125,
          "content": "package main\n\nimport (\n\t_ \"embed\"\n\t\"os\"\n\t\"time\"\n\n\ttea \"github.com/charmbracelet/bubbletea\"\n\t\"github.com/maaslalani/slides/internal/cmd\"\n\t\"github.com/maaslalani/slides/internal/model\"\n\t\"github.com/maaslalani/slides/internal/navigation\"\n\t\"github.com/muesli/coral\"\n)\n\nvar (\n\trootCmd = &coral.Command{\n\t\tUse:   \"slides <file.md>\",\n\t\tShort: \"Terminal based presentation tool\",\n\t\tArgs:  coral.ArbitraryArgs,\n\t\tRunE: func(cmd *coral.Command, args []string) error {\n\t\t\tvar err error\n\t\t\tvar fileName string\n\n\t\t\tif len(args) > 0 {\n\t\t\t\tfileName = args[0]\n\t\t\t}\n\n\t\t\tpresentation := model.Model{\n\t\t\t\tPage:     0,\n\t\t\t\tDate:     time.Now().Format(\"2006-01-02\"),\n\t\t\t\tFileName: fileName,\n\t\t\t\tSearch:   navigation.NewSearch(),\n\t\t\t}\n\t\t\terr = presentation.Load()\n\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\n\t\t\tp := tea.NewProgram(presentation, tea.WithAltScreen())\n\t\t\t_, err = p.Run()\n\t\t\treturn err\n\t\t},\n\t}\n)\n\nfunc init() {\n\trootCmd.AddCommand(\n\t\tcmd.ServeCmd,\n\t)\n\trootCmd.CompletionOptions.DisableDefaultCmd = true\n}\n\nfunc main() {\n\tif err := rootCmd.Execute(); err != nil {\n\t\tos.Exit(1)\n\t}\n}\n"
        },
        {
          "name": "snap",
          "type": "tree",
          "content": null
        },
        {
          "name": "styles",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}