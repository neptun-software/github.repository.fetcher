{
  "metadata": {
    "timestamp": 1736567929478,
    "page": 74,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "GoogleCloudPlatform/microservices-demo",
      "stars": 17287,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".deploystack",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3916015625,
          "content": "# The .editorconfig is used to maintain consistent code style.\n# The .editorconfig file is supported by most text editors.\n# See https://editorconfig.org\n\nroot = true\n\n[*]\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nindent_style = space\nindent_size = 2\n\n[*.cs]\nindent_size = 4\n\n[Dockerfile*]\nindent_size = 4\n\n[*.go]\nindent_style = tab\n\n[*.java]\nindent_size = 4\n\n[*.py]\nindent_size = 4\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1962890625,
          "content": "# This file configures the git settings for this repository.\n\n# Converts \"CR + LF\" to \"LF\", for all \"text\" files â€” for local files on all OSes and files pushed to the remote repo.\n* text=auto eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.302734375,
          "content": ".DS_Store\n.eclipse.buildship.core.prefs\n.gradle/\n.idea/\n.kubernetes-manifests-*/\n.project\n.skaffold-*.yaml\n.terraform.lock.hcl\n.terraform/*\n.venv/\n.vs/\n.vscode/\n*.iml\n*.ipr\n*.iws\n*.pyc\n*.swp\n*.tfstate*\n*.tfvars\n*~\nbin/\nbuild/\nDockerfile.pip\nnode_modules/\nobj/\npkg/\nrelease/wi-kubernetes-manifests.yaml\nvendor/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.53515625,
          "content": "<!-- <p align=\"center\">\n<img src=\"/src/frontend/static/icons/Hipster_HeroLogoMaroon.svg\" width=\"300\" alt=\"Online Boutique\" />\n</p> -->\n![Continuous Integration](https://github.com/GoogleCloudPlatform/microservices-demo/workflows/Continuous%20Integration%20-%20Main/Release/badge.svg)\n\n**Online Boutique** is a cloud-first microservices demo application.  The application is a\nweb-based e-commerce app where users can browse items, add them to the cart, and purchase them.\n\nGoogle uses this application to demonstrate how developers can modernize enterprise applications using Google Cloud products, including: [Google Kubernetes Engine (GKE)](https://cloud.google.com/kubernetes-engine), [Cloud Service Mesh (CSM)](https://cloud.google.com/service-mesh), [gRPC](https://grpc.io/), [Cloud Operations](https://cloud.google.com/products/operations), [Spanner](https://cloud.google.com/spanner), [Memorystore](https://cloud.google.com/memorystore), [AlloyDB](https://cloud.google.com/alloydb), and [Gemini](https://ai.google.dev/). This application works on any Kubernetes cluster.\n\nIf youâ€™re using this demo, please **â˜…Star** this repository to show your interest!\n\n**Note to Googlers:** Please fill out the form at [go/microservices-demo](http://go/microservices-demo).\n\n## Architecture\n\n**Online Boutique** is composed of 11 microservices written in different\nlanguages that talk to each other over gRPC.\n\n[![Architecture of\nmicroservices](/docs/img/architecture-diagram.png)](/docs/img/architecture-diagram.png)\n\nFind **Protocol Buffers Descriptions** at the [`./protos` directory](/protos).\n\n| Service                                              | Language      | Description                                                                                                                       |\n| ---------------------------------------------------- | ------------- | --------------------------------------------------------------------------------------------------------------------------------- |\n| [frontend](/src/frontend)                           | Go            | Exposes an HTTP server to serve the website. Does not require signup/login and generates session IDs for all users automatically. |\n| [cartservice](/src/cartservice)                     | C#            | Stores the items in the user's shopping cart in Redis and retrieves it.                                                           |\n| [productcatalogservice](/src/productcatalogservice) | Go            | Provides the list of products from a JSON file and ability to search products and get individual products.                        |\n| [currencyservice](/src/currencyservice)             | Node.js       | Converts one money amount to another currency. Uses real values fetched from European Central Bank. It's the highest QPS service. |\n| [paymentservice](/src/paymentservice)               | Node.js       | Charges the given credit card info (mock) with the given amount and returns a transaction ID.                                     |\n| [shippingservice](/src/shippingservice)             | Go            | Gives shipping cost estimates based on the shopping cart. Ships items to the given address (mock)                                 |\n| [emailservice](/src/emailservice)                   | Python        | Sends users an order confirmation email (mock).                                                                                   |\n| [checkoutservice](/src/checkoutservice)             | Go            | Retrieves user cart, prepares order and orchestrates the payment, shipping and the email notification.                            |\n| [recommendationservice](/src/recommendationservice) | Python        | Recommends other products based on what's given in the cart.                                                                      |\n| [adservice](/src/adservice)                         | Java          | Provides text ads based on given context words.                                                                                   |\n| [loadgenerator](/src/loadgenerator)                 | Python/Locust | Continuously sends requests imitating realistic user shopping flows to the frontend.                                              |\n\n## Screenshots\n\n| Home Page                                                                                                         | Checkout Screen                                                                                                    |\n| ----------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------ |\n| [![Screenshot of store homepage](/docs/img/online-boutique-frontend-1.png)](/docs/img/online-boutique-frontend-1.png) | [![Screenshot of checkout screen](/docs/img/online-boutique-frontend-2.png)](/docs/img/online-boutique-frontend-2.png) |\n\n## Quickstart (GKE)\n\n1. Ensure you have the following requirements:\n   - [Google Cloud project](https://cloud.google.com/resource-manager/docs/creating-managing-projects#creating_a_project).\n   - Shell environment with `gcloud`, `git`, and `kubectl`.\n\n2. Clone the latest major version.\n\n   ```sh\n   git clone --depth 1 --branch v0 https://github.com/GoogleCloudPlatform/microservices-demo.git\n   cd microservices-demo/\n   ```\n\n   The `--depth 1` argument skips downloading git history.\n\n3. Set the Google Cloud project and region and ensure the Google Kubernetes Engine API is enabled.\n\n   ```sh\n   export PROJECT_ID=<PROJECT_ID>\n   export REGION=us-central1\n   gcloud services enable container.googleapis.com \\\n     --project=${PROJECT_ID}\n   ```\n\n   Substitute `<PROJECT_ID>` with the ID of your Google Cloud project.\n\n4. Create a GKE cluster and get the credentials for it.\n\n   ```sh\n   gcloud container clusters create-auto online-boutique \\\n     --project=${PROJECT_ID} --region=${REGION}\n   ```\n\n   Creating the cluster may take a few minutes.\n\n5. Deploy Online Boutique to the cluster.\n\n   ```sh\n   kubectl apply -f ./release/kubernetes-manifests.yaml\n   ```\n\n6. Wait for the pods to be ready.\n\n   ```sh\n   kubectl get pods\n   ```\n\n   After a few minutes, you should see the Pods in a `Running` state:\n\n   ```\n   NAME                                     READY   STATUS    RESTARTS   AGE\n   adservice-76bdd69666-ckc5j               1/1     Running   0          2m58s\n   cartservice-66d497c6b7-dp5jr             1/1     Running   0          2m59s\n   checkoutservice-666c784bd6-4jd22         1/1     Running   0          3m1s\n   currencyservice-5d5d496984-4jmd7         1/1     Running   0          2m59s\n   emailservice-667457d9d6-75jcq            1/1     Running   0          3m2s\n   frontend-6b8d69b9fb-wjqdg                1/1     Running   0          3m1s\n   loadgenerator-665b5cd444-gwqdq           1/1     Running   0          3m\n   paymentservice-68596d6dd6-bf6bv          1/1     Running   0          3m\n   productcatalogservice-557d474574-888kr   1/1     Running   0          3m\n   recommendationservice-69c56b74d4-7z8r5   1/1     Running   0          3m1s\n   redis-cart-5f59546cdd-5jnqf              1/1     Running   0          2m58s\n   shippingservice-6ccc89f8fd-v686r         1/1     Running   0          2m58s\n   ```\n\n7. Access the web frontend in a browser using the frontend's external IP.\n\n   ```sh\n   kubectl get service frontend-external | awk '{print $4}'\n   ```\n\n   Visit `http://EXTERNAL_IP` in a web browser to access your instance of Online Boutique.\n\n8. Congrats! You've deployed the default Online Boutique. To deploy a different variation of Online Boutique (e.g., with Google Cloud Operations tracing, Istio, etc.), see [Deploy Online Boutique variations with Kustomize](#deploy-online-boutique-variations-with-kustomize).\n\n9. Once you are done with it, delete the GKE cluster.\n\n   ```sh\n   gcloud container clusters delete online-boutique \\\n     --project=${PROJECT_ID} --region=${REGION}\n   ```\n\n   Deleting the cluster may take a few minutes.\n\n## Additional deployment options\n\n- **Terraform**: [See these instructions](/terraform) to learn how to deploy Online Boutique using [Terraform](https://www.terraform.io/intro).\n- **Istio / Cloud Service Mesh**: [See these instructions](/kustomize/components/service-mesh-istio/README.md) to deploy Online Boutique alongside an Istio-backed service mesh.\n- **Non-GKE clusters (Minikube, Kind, etc)**: See the [Development guide](/docs/development-guide.md) to learn how you can deploy Online Boutique on non-GKE clusters.\n- **AI assistant using Gemini**: [See these instructions](/kustomize/components/shopping-assistant/README.md) to deploy a Gemini-powered AI assistant that suggests products to purchase based on an image.\n- **And more**: The [`/kustomize` directory](/kustomize) contains instructions for customizing the deployment of Online Boutique with other variations.\n\n## Documentation\n\n- [Development](/docs/development-guide.md) to learn how to run and develop this app locally.\n\n## Demos featuring Online Boutique\n\n- [Platform Engineering in action: Deploy the Online Boutique sample apps with Score and Humanitec](https://medium.com/p/d99101001e69)\n- [The new Kubernetes Gateway API with Istio and Anthos Service Mesh (ASM)](https://medium.com/p/9d64c7009cd)\n- [Use Azure Redis Cache with the Online Boutique sample on AKS](https://medium.com/p/981bd98b53f8)\n- [Sail Sharp, 8 tips to optimize and secure your .NET containers for Kubernetes](https://medium.com/p/c68ba253844a)\n- [Deploy multi-region application with Anthos and Google cloud Spanner](https://medium.com/google-cloud/a2ea3493ed0)\n- [Use Google Cloud Memorystore (Redis) with the Online Boutique sample on GKE](https://medium.com/p/82f7879a900d)\n- [Use Helm to simplify the deployment of Online Boutique, with a Service Mesh, GitOps, and more!](https://medium.com/p/246119e46d53)\n- [How to reduce microservices complexity with Apigee and Anthos Service Mesh](https://cloud.google.com/blog/products/application-modernization/api-management-and-service-mesh-go-together)\n- [gRPC health probes with Kubernetes 1.24+](https://medium.com/p/b5bd26253a4c)\n- [Use Google Cloud Spanner with the Online Boutique sample](https://medium.com/p/f7248e077339)\n- [Seamlessly encrypt traffic from any apps in your Mesh to Memorystore (redis)](https://medium.com/google-cloud/64b71969318d)\n- [Strengthen your app's security with Cloud Service Mesh and Anthos Config Management](https://cloud.google.com/service-mesh/docs/strengthen-app-security)\n- [From edge to mesh: Exposing service mesh applications through GKE Ingress](https://cloud.google.com/architecture/exposing-service-mesh-apps-through-gke-ingress)\n- [Take the first step toward SRE with Cloud Operations Sandbox](https://cloud.google.com/blog/products/operations/on-the-road-to-sre-with-cloud-operations-sandbox)\n- [Deploying the Online Boutique sample application on Cloud Service Mesh](https://cloud.google.com/service-mesh/docs/onlineboutique-install-kpt)\n- [Anthos Service Mesh Workshop: Lab Guide](https://codelabs.developers.google.com/codelabs/anthos-service-mesh-workshop)\n- [KubeCon EU 2019 - Reinventing Networking: A Deep Dive into Istio's Multicluster Gateways - Steve Dake, Independent](https://youtu.be/-t2BfT59zJA?t=982)\n- Google Cloud Next'18 SF\n  - [Day 1 Keynote](https://youtu.be/vJ9OaAqfxo4?t=2416) showing GKE On-Prem\n  - [Day 3 Keynote](https://youtu.be/JQPOPV_VH5w?t=815) showing Stackdriver\n    APM (Tracing, Code Search, Profiler, Google Cloud Build)\n  - [Introduction to Service Management with Istio](https://www.youtube.com/watch?v=wCJrdKdD6UM&feature=youtu.be&t=586)\n- [Google Cloud Next'18 London â€“ Keynote](https://youtu.be/nIq2pkNcfEI?t=3071)\n  showing Stackdriver Incident Response Management\n"
        },
        {
          "name": "cloudbuild.yaml",
          "type": "blob",
          "size": 1.455078125,
          "content": "# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# [START cloudbuild_microservice_demo_cloudbuild]\n\n# This configuration file is used to build and deploy the app into a\n# GKE cluster using Google Cloud Build.\n#\n# PREREQUISITES:\n# - Cloud Build service account must have role: \"Kubernetes Engine Developer\"\n\n# USAGE:\n# GCP zone and GKE target cluster must be specified as substitutions\n# Example invocation:\n# `gcloud builds submit --config=cloudbuild.yaml --substitutions=_ZONE=us-central1-b,_CLUSTER=demo-app-staging .`\n\nsteps:\n- id: 'Deploy application to cluster'\n  name: 'gcr.io/k8s-skaffold/skaffold:v2.13.2'\n  entrypoint: 'bash'\n  args:\n  - '-c'\n  - >\n    gcloud container clusters get-credentials --zone=$_ZONE $_CLUSTER;\n    skaffold run -f=skaffold.yaml --default-repo=gcr.io/$PROJECT_ID;\n\n# Add more power, and more time, for heavy Skaffold build\ntimeout: '3600s'\noptions:\n  machineType: 'N1_HIGHCPU_8'\n  \n# [END cloudbuild_microservice_demo_cloudbuild]"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "helm-chart",
          "type": "tree",
          "content": null
        },
        {
          "name": "istio-manifests",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-manifests",
          "type": "tree",
          "content": null
        },
        {
          "name": "kustomize",
          "type": "tree",
          "content": null
        },
        {
          "name": "protos",
          "type": "tree",
          "content": null
        },
        {
          "name": "release",
          "type": "tree",
          "content": null
        },
        {
          "name": "skaffold.yaml",
          "type": "blob",
          "size": 3.171875,
          "content": "# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\napiVersion: skaffold/v3\nkind: Config\nmetadata:\n  name: app\nbuild:\n  artifacts:\n  # image tags are relative; to specify an image repo (e.g. GCR), you\n  # must provide a \"default repo\" using one of the methods described\n  # here:\n  # https://skaffold.dev/docs/concepts/#image-repository-handling\n  - image: emailservice\n    context: src/emailservice\n  - image: productcatalogservice\n    context: src/productcatalogservice\n  - image: recommendationservice\n    context: src/recommendationservice\n  - image: shoppingassistantservice\n    context: src/shoppingassistantservice\n  - image: shippingservice\n    context: src/shippingservice\n  - image: checkoutservice\n    context: src/checkoutservice\n  - image: paymentservice\n    context: src/paymentservice\n  - image: currencyservice\n    context: src/currencyservice\n  - image: cartservice\n    context: src/cartservice/src\n    docker:\n      dockerfile: Dockerfile\n  - image: frontend\n    context: src/frontend\n  - image: adservice\n    context: src/adservice\n  tagPolicy:\n    gitCommit: {}\n  local:\n    useBuildkit: false\nmanifests:\n  kustomize:\n    paths:\n    - kubernetes-manifests\ndeploy:\n  kubectl: {}\n# \"gcb\" profile allows building and pushing the images\n# on Google Container Builder without requiring docker\n# installed on the developer machine. However, note that\n# since GCB does not cache the builds, each build will\n# start from scratch and therefore take a long time.\n#\n# This is not used by default. To use it, run:\n#     skaffold run -p gcb\nprofiles:\n- name: gcb\n  build:\n    googleCloudBuild:\n      diskSizeGb: 300\n      machineType: N1_HIGHCPU_32\n      timeout: 4000s\n# \"debug\" profile replaces the default Dockerfile in cartservice with Dockerfile.debug,\n# which enables debugging via skaffold.\n#\n# This profile is used by default when running skaffold debug.\n- name: debug\n  activation:\n  - command: debug\n  patches:\n  - op: replace\n    path: /build/artifacts/7/docker/dockerfile\n    value: Dockerfile.debug\n# The \"network-policies\" profile is not used by default.\n# You can use it in isolation or in combination with other profiles:\n#     skaffold run -p network-policies, debug\n- name: network-policies\n  patches:\n  - op: add\n    path: /manifests/kustomize/paths/1\n    value: kustomize/components/network-policies\n---\napiVersion: skaffold/v3\nkind: Config\nmetadata:\n  name: loadgenerator\nrequires:\n- configs:\n  - app\nbuild:\n  artifacts:\n  - image: loadgenerator\n    context: src/loadgenerator\nmanifests:\n  rawYaml:\n  - ./kubernetes-manifests/loadgenerator.yaml\ndeploy:\n  kubectl: {}\nprofiles:\n- name: gcb\n  build:\n    googleCloudBuild:\n      diskSizeGb: 300\n      machineType: N1_HIGHCPU_32\n      timeout: 4000s\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "terraform",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}