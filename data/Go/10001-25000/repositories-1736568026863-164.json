{
  "metadata": {
    "timestamp": 1736568026863,
    "page": 164,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mikefarah/yq",
      "stars": 12610,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.005859375,
          "content": "bin/*\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.556640625,
          "content": "# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n_obj\n_test\nbin\nbuild\nbuild-done\n.DS_Store\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\ncoverage.out\ncoverage.html\n*.exe\n*.test\n*.prof\nyaml\nvendor/\ntmp/\ncover/\nyq\n\n# snapcraft\nparts/\nprime/\n.snapcraft/\nyq*.snap\n\ntest.yml\ntest*.yml\ntest*.xml\ntest*.toml\ntest*.yaml\n0.yml\n1.yml\n2.yml\n\n\n# man page\nman.md\nyq.1\n\n# debian pkg\n_build\ndebian/files\n\n# intellij\n/.idea\n\n# vscode\n.vscode\n\nyq3\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 0.6708984375,
          "content": "run:\n  timeout: 5m\nlinters:\n  enable:\n    - asciicheck\n    - depguard\n    - errorlint\n    - gci\n    - gochecknoinits\n    - gofmt\n    - goimports\n    - gosec\n    - gosimple\n    - staticcheck\n    - unused\n    - misspell\n    - nakedret\n    - nolintlint\n    - predeclared\n    - revive\n    - unconvert\n    - unparam\nlinters-settings:\n  depguard:\n    rules:\n      prevent_unmaintained_packages:\n        list-mode: lax\n        files:\n          - $all\n          - \"!$test\"\n        deny:\n          - pkg: io/ioutil\n            desc: \"replaced by io and os packages since Go 1.16: https://tip.golang.org/doc/go1.16#ioutil\"\nissues:\n  exclude-rules:\n  - linters:\n    - revive\n    text: \"var-naming\"\n"
        },
        {
          "name": ".goreleaser.yaml",
          "type": "blob",
          "size": 0.7060546875,
          "content": "version: 2\n\ndist: build\n\nbuilds:\n  - id: yq\n\n    binary: yq_{{ .Os }}_{{ .Arch }}\n\n    ldflags:\n      - -s -w\n\n    env:\n      - CGO_ENABLED=0\n\n    targets:\n      - darwin_amd64\n      - darwin_arm64\n      - freebsd_386\n      - freebsd_amd64\n      - freebsd_arm\n      - linux_386\n      - linux_amd64\n      - linux_arm\n      - linux_arm64\n      - linux_mips\n      - linux_mips64\n      - linux_mips64le\n      - linux_mipsle\n      - linux_ppc64\n      - linux_ppc64le\n      - linux_riscv64\n      - linux_s390x\n      - netbsd_386\n      - netbsd_amd64\n      - netbsd_arm\n      - openbsd_386\n      - openbsd_amd64\n      - windows_386\n      - windows_amd64\n\n    no_unique_dist_dir: true\n\nrelease:\n  disable: true\n  skip_upload: true\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.2724609375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at mikefarah@gmail.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.5390625,
          "content": ".# Development\n\n1. Install (Golang)[https://golang.org/]\n1. Run  `scripts/devtools.sh` to install the required devtools\n2. Run `make [local] vendor` to install the vendor dependencies\n2. Run `make [local] test` to ensure you can run the existing tests\n3. Write unit tests - (see existing examples). Changes will not be accepted without corresponding unit tests.\n4. Make the code changes.\n5. `make [local] test` to lint code and run tests\n6. Profit! ok no profit, but raise a PR and get kudos :)\n\n\n# Documentation\n\nThe documentation is a bit of a mixed bag (sorry in advance, I do plan on simplifying it...) - with some parts automatically generated and stiched together and some statically defined.\n\nDocumentation is written in markdown, and is published in the 'gitbook' branch.\n\nThe various operator documentation (e.g. 'strings') are generated from the 'master' branch, and have a statically defined header (e.g. `pkg/yqlib/doc/operators/headers/add.md`) and the bulk of the docs are generated from the unit tests e.g. `pkg/yqlib/operator_add_test.go`.\n\nThe pipeline will run the tests and automatically concatenate the files together, and put them under \n`pkg/qylib/doc/add.md`. These files are checked in the master branch (and are copied to the gitbook branch as part of the release process).\n\n## How to contribute\n\nThe first step is to find if what you want is automatically generated or not - start by looking in the master branch. \n\nNote that PRs with small changes (e.g. minor typos) may not be merged (see https://joel.net/how-one-guy-ruined-hacktoberfest2020-drama).\n\n### Updating dynamic documentation from master\n- Search for the documentation you want to update. If you find matches in a `*_test.go` file - update that, as that will automatically update the matching `*.md` file \n- Assuming you are updating a `*_test.go` file, once updated, run the test to regenerated the docs. E.g. for the 'Add' test generated docs, from the pkg/yqlib folder run:\n`go test -run TestAddOperatorScenarios` which will run that test defined in the `operator_add_test.go` file.\n- Ensure the tests still pass, and check the generated documentation have your update.\n- Note: If the documentation is only in a `headers/*.md` file, then just update that directly\n- Raise a PR to merge the changes into master!\n\n### Updating static documentation from the gitbook branch\nIf you haven't found what you want to update in the master branch, then check the gitbook branch directly as there are a few pages in there that are not in master.\n\n- Update the `*.md` files\n- Raise a PR to merge the changes into gitbook."
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.6923828125,
          "content": "FROM golang:1.23.4 AS builder\r\n\r\nWORKDIR /go/src/mikefarah/yq\r\n\r\nCOPY . .\r\n\r\nRUN CGO_ENABLED=0 go build -ldflags \"-s -w\" .\r\n# RUN ./scripts/test.sh -- this too often times out in the github pipeline.\r\nRUN ./scripts/acceptance.sh\r\n\r\n# Choose alpine as a base image to make this useful for CI, as many\r\n# CI tools expect an interactive shell inside the container\r\nFROM alpine:3 AS production\r\nLABEL maintainer=\"Mike Farah <mikefarah@users.noreply.github.com>\"\r\n\r\nCOPY --from=builder /go/src/mikefarah/yq/yq /usr/bin/yq\r\n\r\nWORKDIR /workdir\r\n\r\nRUN set -eux; \\\r\n  addgroup -g 1000 yq; \\\r\n  adduser -u 1000 -G yq -s /bin/sh -h /home/yq -D yq\r\n\r\nRUN chown -R yq:yq /workdir\r\n\r\nUSER yq\r\n\r\nENTRYPOINT [\"/usr/bin/yq\"]\r\n"
        },
        {
          "name": "Dockerfile.dev",
          "type": "blob",
          "size": 0.2529296875,
          "content": "FROM golang:1.23.4\n\nRUN apt-get update && \\\n    apt-get install -y npm && \\\n    npm install -g npx cspell@latest\n\nCOPY scripts/devtools.sh /opt/devtools.sh\n\nRUN set -e -x && \\\n    /opt/devtools.sh\n\nENV PATH=/go/bin:$PATH\n\nENV CGO_ENABLED 0\nENV GOPATH /go:/yq\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0517578125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2017 Mike Farah\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.142578125,
          "content": "MAKEFLAGS += --warn-undefined-variables\nSHELL := /bin/bash\n.SHELLFLAGS := -o pipefail -euc\n.DEFAULT_GOAL := install\nENGINE := $(shell { (podman version > /dev/null 2>&1 && command -v podman) || command -v docker; } 2>/dev/null)\n\ninclude Makefile.variables\n\n.PHONY: help\nhelp:\n\t@echo 'Management commands for cicdtest:'\n\t@echo\n\t@echo 'Usage:'\n\t@echo '  ## Develop / Test Commands'\n\t@echo '    make build           Build yq binary.'\n\t@echo '    make install         Install yq.'\n\t@echo '    make xcompile        Build cross-compiled binaries of yq.'\n\t@echo '    make vendor          Install dependencies to vendor directory.'\n\t@echo '    make format          Run code formatter.'\n\t@echo '    make check           Run static code analysis (lint).'\n\t@echo '    make secure          Run gosec.'\n\t@echo '    make test            Run tests on project.'\n\t@echo '    make cover           Run tests and capture code coverage metrics on project.'\n\t@echo '    make clean           Clean the directory tree of produced artifacts.'\n\t@echo\n\t@echo '  ## Utility Commands'\n\t@echo '    make setup           Configures Minishfit/Docker directory mounts.'\n\t@echo\n\n\n.PHONY: clean\nclean:\n\t@rm -rf bin build cover *.out\n\n## prefix before other make targets to run in your local dev environment\nlocal: | quiet\n\t@$(eval ENGINERUN= )\n\t@mkdir -p tmp\n\t@touch tmp/dev_image_id\nquiet: # this is silly but shuts up 'Nothing to be done for `local`'\n\t@:\n\nprepare: tmp/dev_image_id\ntmp/dev_image_id: Dockerfile.dev scripts/devtools.sh\n\t@mkdir -p tmp\n\t@${ENGINE} rmi -f ${DEV_IMAGE} > /dev/null 2>&1 || true\n\t@${ENGINE} build -t ${DEV_IMAGE} -f Dockerfile.dev .\n\t@${ENGINE} inspect -f \"{{ .ID }}\" ${DEV_IMAGE} > tmp/dev_image_id\n\n# ----------------------------------------------\n# build\n.PHONY: build\nbuild: build/dev\n\n.PHONY: build/dev\nbuild/dev: test *.go\n\t@mkdir -p bin/\n\t${ENGINERUN} go build --ldflags \"$(LDFLAGS)\"\n\t${ENGINERUN} bash ./scripts/acceptance.sh\n\n## Compile the project for multiple OS and Architectures.\nxcompile: check\n\t@rm -rf build/\n\t@mkdir -p build\n\t${ENGINERUN} bash ./scripts/xcompile.sh\n\t@find build -type d -exec chmod 755 {} \\; || :\n\t@find build -type f -exec chmod 755 {} \\; || :\n\n.PHONY: install\ninstall: build\n\t${ENGINERUN} go install\n\n# Each of the fetch should be an entry within vendor.json; not currently included within project\n.PHONY: vendor\nvendor: tmp/dev_image_id\n\t@mkdir -p vendor\n\t${ENGINERUN} go mod vendor\n\n# ----------------------------------------------\n# develop and test\n\n.PHONY: format\nformat: vendor\n\t${ENGINERUN} bash ./scripts/format.sh\n\n\n.PHONY: spelling\nspelling: format\n\t${ENGINERUN} bash ./scripts/spelling.sh\n\n.PHONY: secure\nsecure: spelling\n\t${ENGINERUN} bash ./scripts/secure.sh\n\n.PHONY: check\ncheck: secure\n\t${ENGINERUN} bash ./scripts/check.sh\n\n\n\n.PHONY: test\ntest: check\n\t${ENGINERUN} bash ./scripts/test.sh\n\n.PHONY: cover\ncover: check\n\t@rm -rf cover/\n\t@mkdir -p cover\n\t${ENGINERUN} bash ./scripts/coverage.sh\n\t@find cover -type d -exec chmod 755 {} \\; || :\n\t@find cover -type f -exec chmod 644 {} \\; || :\n\n\n.PHONY: release\nrelease: xcompile\n\t${ENGINERUN} bash ./scripts/publish.sh\n\n# ----------------------------------------------\n# utilities\n\n.PHONY: setup\nsetup:\n\t@bash ./scripts/setup.sh\n"
        },
        {
          "name": "Makefile.variables",
          "type": "blob",
          "size": 1.1259765625,
          "content": "export PROJECT = yq\nIMPORT_PATH := github.com/mikefarah/${PROJECT}\n\nexport GIT_COMMIT = $(shell git rev-parse --short HEAD)\nexport GIT_DIRTY = $(shell test -n \"$$(git status --porcelain)\" && echo \"+CHANGES\" || true)\nexport GIT_DESCRIBE = $(shell git describe --tags --always)\nLDFLAGS :=\nLDFLAGS += -X main.GitCommit=${GIT_COMMIT}${GIT_DIRTY}\nLDFLAGS += -X main.GitDescribe=${GIT_DESCRIBE}\nLDFLAGS += -w -s\n\nGITHUB_TOKEN ?=\n\n# Windows environment?\nCYG_CHECK := $(shell hash cygpath 2>/dev/null && echo 1)\nifeq ($(CYG_CHECK),1)\n\tVBOX_CHECK := $(shell hash VBoxManage 2>/dev/null && echo 1)\n\n\t# Docker Toolbox (pre-Windows 10)\n\tifeq ($(VBOX_CHECK),1)\n\t\tROOT := /${PROJECT}\n\telse\n\t\t# Docker Windows\n\t\tROOT := $(shell cygpath -m -a \"$(shell pwd)\")\n\tendif\nelse\n\t# all non-windows environments\n\tROOT := $(shell pwd)\n\tSELINUX := $(shell which getenforce 2>&1 >/dev/null && echo :z)\nendif\n\nDEV_IMAGE := ${PROJECT}_dev\n\nENGINERUN := ${ENGINE} run --rm \\\n\t-e LDFLAGS=\"${LDFLAGS}\" \\\n\t-e GITHUB_TOKEN=\"${GITHUB_TOKEN}\" \\\n\t-v ${ROOT}/vendor:/go/src${SELINUX} \\\n\t-v ${ROOT}:/${PROJECT}/src/${IMPORT_PATH}${SELINUX} \\\n\t-w /${PROJECT}/src/${IMPORT_PATH} \\\n\t${DEV_IMAGE}\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.529296875,
          "content": "# yq\n\n![Build](https://github.com/mikefarah/yq/workflows/Build/badge.svg)  ![Docker Pulls](https://img.shields.io/docker/pulls/mikefarah/yq.svg) ![Github Releases (by Release)](https://img.shields.io/github/downloads/mikefarah/yq/total.svg) ![Go Report](https://goreportcard.com/badge/github.com/mikefarah/yq) ![CodeQL](https://github.com/mikefarah/yq/workflows/CodeQL/badge.svg)\n\n\na lightweight and portable command-line YAML, JSON and XML processor. `yq` uses [jq](https://github.com/stedolan/jq) like syntax but works with yaml files as well as json, xml, properties, csv and tsv. It doesn't yet support everything `jq` does - but it does support the most common operations and functions, and more is being added continuously.\n\nyq is written in go - so you can download a dependency free binary for your platform and you are good to go! If you prefer there are a variety of package managers that can be used as well as Docker and Podman, all listed below.\n\n## Quick Usage Guide\n\nRead a value:\n```bash\nyq '.a.b[0].c' file.yaml\n```\n\nPipe from STDIN:\n```bash\nyq '.a.b[0].c' < file.yaml\n```\n\nUpdate a yaml file, in place\n```bash\nyq -i '.a.b[0].c = \"cool\"' file.yaml\n```\n\nUpdate using environment variables\n```bash\nNAME=mike yq -i '.a.b[0].c = strenv(NAME)' file.yaml\n```\n\nMerge multiple files\n```bash\n# merge two files\nyq -n 'load(\"file1.yaml\") * load(\"file2.yaml\")'\n\n# merge using globs:\n# note the use of `ea` to evaluate all the files at once\n# instead of in sequence\nyq ea '. as $item ireduce ({}; . * $item )' path/to/*.yml\n```\n\nMultiple updates to a yaml file\n```bash\nyq -i '\n  .a.b[0].c = \"cool\" |\n  .x.y.z = \"foobar\" |\n  .person.name = strenv(NAME)\n' file.yaml\n```\n\nFind and update an item in an array:\n```bash\nyq '(.[] | select(.name == \"foo\") | .address) = \"12 cat st\"'\n```\n\nConvert JSON to YAML\n```bash\nyq -Poy sample.json\n```\n\nSee [recipes](https://mikefarah.gitbook.io/yq/recipes) for more examples and the [documentation](https://mikefarah.gitbook.io/yq/) for more information.\n\nTake a look at the discussions for [common questions](https://github.com/mikefarah/yq/discussions/categories/q-a), and [cool ideas](https://github.com/mikefarah/yq/discussions/categories/show-and-tell)\n\n## Install\n\n### [Download the latest binary](https://github.com/mikefarah/yq/releases/latest)\n\n### wget\nUse wget to download, gzipped pre-compiled binaries:\n\n\nFor instance, VERSION=v4.2.0 and BINARY=yq_linux_amd64\n\n#### Compressed via tar.gz\n```bash\nwget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY}.tar.gz -O - |\\\n  tar xz && mv ${BINARY} /usr/bin/yq\n```\n\n#### Plain binary\n\n```bash\nwget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY} -O /usr/bin/yq &&\\\n    chmod +x /usr/bin/yq\n```\n\n#### Latest version\n\n```bash\nwget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq &&\\\n    chmod +x /usr/bin/yq\n```\n\n### MacOS / Linux via Homebrew:\nUsing [Homebrew](https://brew.sh/)\n```\nbrew install yq\n```\n\n### Linux via snap:\n```\nsnap install yq\n```\n\n#### Snap notes\n`yq` installs with [_strict confinement_](https://docs.snapcraft.io/snap-confinement/6233) in snap, this means it doesn't have direct access to root files. To read root files you can:\n\n```\nsudo cat /etc/myfile | yq '.a.path'\n```\n\nAnd to write to a root file you can either use [sponge](https://linux.die.net/man/1/sponge):\n```\nsudo cat /etc/myfile | yq '.a.path = \"value\"' | sudo sponge /etc/myfile\n```\nor write to a temporary file:\n```\nsudo cat /etc/myfile | yq '.a.path = \"value\"' | sudo tee /etc/myfile.tmp\nsudo mv /etc/myfile.tmp /etc/myfile\nrm /etc/myfile.tmp\n```\n\n### Run with Docker or Podman\n#### Oneshot use:\n\n```bash\ndocker run --rm -v \"${PWD}\":/workdir mikefarah/yq [command] [flags] [expression ]FILE...\n```\n\nNote that you can run `yq` in docker without network access and other privileges if you desire,\nnamely `--security-opt=no-new-privileges --cap-drop all --network none`.\n\n```bash\npodman run --rm -v \"${PWD}\":/workdir mikefarah/yq [command] [flags] [expression ]FILE...\n```\n\n#### Pipe in via STDIN:\n\nYou'll need to pass the `-i\\--interactive` flag to docker:\n\n```bash\ndocker run -i --rm mikefarah/yq '.this.thing' < myfile.yml\n```\n\n```bash\npodman run -i --rm mikefarah/yq '.this.thing' < myfile.yml\n```\n\n#### Run commands interactively:\n\n```bash\ndocker run --rm -it -v \"${PWD}\":/workdir --entrypoint sh mikefarah/yq\n```\n\n```bash\npodman run --rm -it -v \"${PWD}\":/workdir --entrypoint sh mikefarah/yq\n```\n\nIt can be useful to have a bash function to avoid typing the whole docker command:\n\n```bash\nyq() {\n  docker run --rm -i -v \"${PWD}\":/workdir mikefarah/yq \"$@\"\n}\n```\n\n```bash\nyq() {\n  podman run --rm -i -v \"${PWD}\":/workdir mikefarah/yq \"$@\"\n}\n```\n#### Running as root:\n\n`yq`'s container image no longer runs under root (https://github.com/mikefarah/yq/pull/860). If you'd like to install more things in the container image, or you're having permissions issues when attempting to read/write files you'll need to either:\n\n\n```\ndocker run --user=\"root\" -it --entrypoint sh mikefarah/yq\n```\n\n```\npodman run --user=\"root\" -it --entrypoint sh mikefarah/yq\n```\n\nOr, in your Dockerfile:\n\n```\nFROM mikefarah/yq\n\nUSER root\nRUN apk add --no-cache bash\nUSER yq\n```\n\n#### Missing timezone data\nBy default, the alpine image yq uses does not include timezone data. If you'd like to use the `tz` operator, you'll need to include this data:\n\n```\nFROM mikefarah/yq\n\nUSER root\nRUN apk add --no-cache tzdata\nUSER yq\n```\n\n#### Podman with SELinux\n\nIf you are using podman with SELinux, you will need to set the shared volume flag `:z` on the volume mount:\n\n```\n-v \"${PWD}\":/workdir:z\n```\n\n### GitHub Action\n```\n  - name: Set foobar to cool\n    uses: mikefarah/yq@master\n    with:\n      cmd: yq -i '.foo.bar = \"cool\"' 'config.yml'\n  - name: Get an entry with a variable that might contain dots or spaces\n    id: get_username\n    uses: mikefarah/yq@master\n    with:\n      cmd: yq '.all.children.[\"${{ matrix.ip_address }}\"].username' ops/inventories/production.yml\n  - name: Reuse a variable obtained in another step\n    run: echo ${{ steps.get_username.outputs.result }}\n```\n\nSee https://mikefarah.gitbook.io/yq/usage/github-action for more.\n\n### Go Install:\n```\ngo install github.com/mikefarah/yq/v4@latest\n```\n\n## Community Supported Installation methods\nAs these are supported by the community :heart: - however, they may be out of date with the officially supported releases.\n\n_Please note that the Debian package (previously supported by @rmescandon) is no longer maintained. Please use an alternative installation method._\n\n\n### X-CMD\nCheckout `yq` on x-cmd: https://x-cmd.com/mod/yq\n\n- Instant Results: See the output of your yq filter in real-time.\n- Error Handling: Encounter a syntax error? It will display the error message and the results of the closest valid filter\n\nThanks @edwinjhlee!\n\n### Nix\n\n```\nnix profile install nixpkgs#yq-go\n```\n\nSee [here](https://search.nixos.org/packages?channel=unstable&show=yq-go&from=0&size=50&sort=relevance&type=packages&query=yq-go)\n\n\n### Webi\n\n```\nwebi yq\n```\n\nSee [webi](https://webinstall.dev/)\nSupported by @adithyasunil26 (https://github.com/webinstall/webi-installers/tree/master/yq)\n\n### Arch Linux\n\n```\npacman -S go-yq\n```\n\n### Windows:\n\nUsing [Chocolatey](https://chocolatey.org)\n\n[![Chocolatey](https://img.shields.io/chocolatey/v/yq.svg)](https://chocolatey.org/packages/yq)\n[![Chocolatey](https://img.shields.io/chocolatey/dt/yq.svg)](https://chocolatey.org/packages/yq)\n```\nchoco install yq\n```\nSupported by @chillum (https://chocolatey.org/packages/yq)\n\nUsing [scoop](https://scoop.sh/)\n```\nscoop install main/yq\n```\n\nUsing [winget](https://learn.microsoft.com/en-us/windows/package-manager/)\n```\nwinget install --id MikeFarah.yq\n```\n\n### Mac:\nUsing [MacPorts](https://www.macports.org/)\n```\nsudo port selfupdate\nsudo port install yq\n```\nSupported by @herbygillot (https://ports.macports.org/maintainer/github/herbygillot)\n\n### Alpine Linux\n\nAlpine Linux v3.20+ (and Edge):\n```\napk add yq-go\n```\n\nAlpine Linux up to v3.19:\n```\napk add yq\n```\n\nSupported by Tuan Hoang (https://pkgs.alpinelinux.org/packages?name=yq-go)\n\n### Flox:\n\nFlox can be used to install yq on Linux, MacOS, and Windows through WSL.\n\n```\nflox install yq\n```\n\n## Features\n- [Detailed documentation with many examples](https://mikefarah.gitbook.io/yq/)\n- Written in portable go, so you can download a lovely dependency free binary\n- Uses similar syntax as `jq` but works with YAML, [JSON](https://mikefarah.gitbook.io/yq/usage/convert) and [XML](https://mikefarah.gitbook.io/yq/usage/xml) files\n- Fully supports multi document yaml files\n- Supports yaml [front matter](https://mikefarah.gitbook.io/yq/usage/front-matter) blocks (e.g. jekyll/assemble)\n- Colorized yaml output\n- [Date/Time manipulation and formatting with TZ](https://mikefarah.gitbook.io/yq/operators/datetime)\n- [Deeply data structures](https://mikefarah.gitbook.io/yq/operators/traverse-read)\n- [Sort keys](https://mikefarah.gitbook.io/yq/operators/sort-keys)\n- Manipulate yaml [comments](https://mikefarah.gitbook.io/yq/operators/comment-operators), [styling](https://mikefarah.gitbook.io/yq/operators/style), [tags](https://mikefarah.gitbook.io/yq/operators/tag) and [anchors and aliases](https://mikefarah.gitbook.io/yq/operators/anchor-and-alias-operators).\n- [Update in place](https://mikefarah.gitbook.io/yq/v/v4.x/commands/evaluate#flags)\n- [Complex expressions to select and update](https://mikefarah.gitbook.io/yq/operators/select#select-and-update-matching-values-in-map)\n- Keeps yaml formatting and comments when updating (though there are issues with whitespace)\n- [Decode/Encode base64 data](https://mikefarah.gitbook.io/yq/operators/encode-decode)\n- [Load content from other files](https://mikefarah.gitbook.io/yq/operators/load)\n- [Convert to/from json/ndjson](https://mikefarah.gitbook.io/yq/v/v4.x/usage/convert)\n- [Convert to/from xml](https://mikefarah.gitbook.io/yq/v/v4.x/usage/xml)\n- [Convert to/from properties](https://mikefarah.gitbook.io/yq/v/v4.x/usage/properties)\n- [Convert to/from csv/tsv](https://mikefarah.gitbook.io/yq/usage/csv-tsv)\n- [General shell completion scripts (bash/zsh/fish/powershell)](https://mikefarah.gitbook.io/yq/v/v4.x/commands/shell-completion)\n- [Reduce](https://mikefarah.gitbook.io/yq/operators/reduce) to merge multiple files or sum an array or other fancy things.\n- [Github Action](https://mikefarah.gitbook.io/yq/usage/github-action) to use in your automated pipeline (thanks @devorbitus)\n\n## [Usage](https://mikefarah.gitbook.io/yq/)\n\nCheck out the [documentation](https://mikefarah.gitbook.io/yq/) for more detailed and advanced usage.\n\n```\nUsage:\n  yq [flags]\n  yq [command]\n\nExamples:\n\n# yq defaults to 'eval' command if no command is specified. See \"yq eval --help\" for more examples.\nyq '.stuff' < myfile.yml # outputs the data at the \"stuff\" node from \"myfile.yml\"\n\nyq -i '.stuff = \"foo\"' myfile.yml # update myfile.yml in place\n\n\nAvailable Commands:\n  completion       Generate the autocompletion script for the specified shell\n  eval             (default) Apply the expression to each document in each yaml file in sequence\n  eval-all         Loads _all_ yaml documents of _all_ yaml files and runs expression once\n  help             Help about any command\n\nFlags:\n  -C, --colors                        force print with colors\n  -e, --exit-status                   set exit status if there are no matches or null or false is returned\n  -f, --front-matter string           (extract|process) first input as yaml front-matter. Extract will pull out the yaml content, process will run the expression against the yaml content, leaving the remaining data intact\n      --header-preprocess             Slurp any header comments and separators before processing expression. (default true)\n  -h, --help                          help for yq\n  -I, --indent int                    sets indent level for output (default 2)\n  -i, --inplace                       update the file in place of first file given.\n  -p, --input-format string           [yaml|y|xml|x] parse format for input. Note that json is a subset of yaml. (default \"yaml\")\n  -M, --no-colors                     force print with no colors\n  -N, --no-doc                        Don't print document separators (---)\n  -n, --null-input                    Don't read input, simply evaluate the expression given. Useful for creating docs from scratch.\n  -o, --output-format string          [yaml|y|json|j|props|p|xml|x] output format type. (default \"yaml\")\n  -P, --prettyPrint                   pretty print, shorthand for '... style = \"\"'\n  -s, --split-exp string              print each result (or doc) into a file named (exp). [exp] argument must return a string. You can use $index in the expression as the result counter.\n      --unwrapScalar                  unwrap scalar, print the value with no quotes, colors or comments (default true)\n  -v, --verbose                       verbose mode\n  -V, --version                       Print version information and quit\n      --xml-attribute-prefix string   prefix for xml attributes (default \"+\")\n      --xml-content-name string       name for xml content (if no attribute name is present). (default \"+content\")\n\nUse \"yq [command] --help\" for more information about a command.\n```\n## Known Issues / Missing Features\n- `yq` attempts to preserve comment positions and whitespace as much as possible, but it does not handle all scenarios (see https://github.com/go-yaml/yaml/tree/v3 for details)\n- Powershell has its own...[opinions on quoting yq](https://mikefarah.gitbook.io/yq/usage/tips-and-tricks#quotes-in-windows-powershell)\n- \"yes\", \"no\" were dropped as boolean values in the yaml 1.2 standard - which is the standard yq assumes.\n\nSee [tips and tricks](https://mikefarah.gitbook.io/yq/usage/tips-and-tricks) for more common problems and solutions.\n"
        },
        {
          "name": "acceptance_tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "action.yml",
          "type": "blob",
          "size": 0.431640625,
          "content": "name: 'yq - portable yaml processor'\ndescription: 'create, read, update, delete, merge, validate and do more with yaml'\nbranding:\n  icon: command\n  color: gray-dark\ninputs:\n  cmd:\n    description: 'The Command which should be run'\n    required: true\noutputs:\n  result:\n    description: \"The complete result from the yq command being run\"\nruns:\n  using: 'docker'\n  image: 'docker://mikefarah/yq:4-githubaction'\n  args:\n    - ${{ inputs.cmd }}\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "cspell.config.yaml",
          "type": "blob",
          "size": 0.3115234375,
          "content": "---\n$schema: https://raw.githubusercontent.com/streetsidesoftware/cspell/main/cspell.schema.json\nversion: '0.2'\nlanguage: en-GB\ndictionaryDefinitions:\n  - name: project-words\n    path: './project-words.txt'\n    addWords: true\ndictionaries:\n  - project-words\nignorePaths:\n  - 'vendor'\n  - 'bin'\n  - '/project-words.txt'\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "github-action",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.9599609375,
          "content": "module github.com/mikefarah/yq/v4\n\nrequire (\n\tgithub.com/a8m/envsubst v1.4.2\n\tgithub.com/alecthomas/participle/v2 v2.1.1\n\tgithub.com/alecthomas/repr v0.4.0\n\tgithub.com/dimchansky/utfbom v1.1.1\n\tgithub.com/elliotchance/orderedmap v1.7.0\n\tgithub.com/fatih/color v1.18.0\n\tgithub.com/goccy/go-json v0.10.3\n\tgithub.com/goccy/go-yaml v1.13.0\n\tgithub.com/jinzhu/copier v0.4.0\n\tgithub.com/magiconair/properties v1.8.7\n\tgithub.com/pelletier/go-toml/v2 v2.2.3\n\tgithub.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e\n\tgithub.com/spf13/cobra v1.8.1\n\tgithub.com/spf13/pflag v1.0.5\n\tgithub.com/yuin/gopher-lua v1.1.1\n\tgolang.org/x/net v0.32.0\n\tgolang.org/x/text v0.21.0\n\tgopkg.in/op/go-logging.v1 v1.0.0-20160211212156-b2cb9fa56473\n\tgopkg.in/yaml.v3 v3.0.1\n)\n\nrequire (\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgolang.org/x/sys v0.28.0 // indirect\n)\n\ngo 1.21.0\n\ntoolchain go1.22.5\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 7.0458984375,
          "content": "github.com/a8m/envsubst v1.4.2 h1:4yWIHXOLEJHQEFd4UjrWDrYeYlV7ncFWJOCBRLOZHQg=\ngithub.com/a8m/envsubst v1.4.2/go.mod h1:MVUTQNGQ3tsjOOtKCNd+fl8RzhsXcDvvAEzkhGtlsbY=\ngithub.com/alecthomas/assert/v2 v2.3.0 h1:mAsH2wmvjsuvyBvAmCtm7zFsBlb8mIHx5ySLVdDZXL0=\ngithub.com/alecthomas/assert/v2 v2.3.0/go.mod h1:pXcQ2Asjp247dahGEmsZ6ru0UVwnkhktn7S0bBDLxvQ=\ngithub.com/alecthomas/participle/v2 v2.1.1 h1:hrjKESvSqGHzRb4yW1ciisFJ4p3MGYih6icjJvbsmV8=\ngithub.com/alecthomas/participle/v2 v2.1.1/go.mod h1:Y1+hAs8DHPmc3YUFzqllV+eSQ9ljPTk0ZkPMtEdAx2c=\ngithub.com/alecthomas/repr v0.4.0 h1:GhI2A8MACjfegCPVq9f1FLvIBS+DrQ2KQBFZP1iFzXc=\ngithub.com/alecthomas/repr v0.4.0/go.mod h1:Fr0507jx4eOXV7AlPV6AVZLYrLIuIeSOWtW57eE/O/4=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dimchansky/utfbom v1.1.1 h1:vV6w1AhK4VMnhBno/TPVCoK9U/LP0PkLCS9tbxHdi/U=\ngithub.com/dimchansky/utfbom v1.1.1/go.mod h1:SxdoEBH5qIqFocHMyGOXVAybYJdr71b1Q/j0mACtrfE=\ngithub.com/elliotchance/orderedmap v1.7.0 h1:FirjcM/NbcyudJhaIF9MG/RjIh5XHm2xb1SFquZ8k0g=\ngithub.com/elliotchance/orderedmap v1.7.0/go.mod h1:wsDwEaX5jEoyhbs7x93zk2H/qv0zwuhg4inXhDkYqys=\ngithub.com/fatih/color v1.18.0 h1:S8gINlzdQ840/4pfAwic/ZE0djQEH3wM94VfqLTZcOM=\ngithub.com/fatih/color v1.18.0/go.mod h1:4FelSpRwEGDpQ12mAdzqdOukCy4u8WUtOY6lkT/6HfU=\ngithub.com/gabriel-vasile/mimetype v1.4.3 h1:in2uUcidCuFcDKtdcBxlR0rJ1+fsokWf+uqxgUFjbI0=\ngithub.com/gabriel-vasile/mimetype v1.4.3/go.mod h1:d8uq/6HKRL6CGdk+aubisF/M5GcPfT7nKyLpA0lbSSk=\ngithub.com/go-playground/locales v0.14.1 h1:EWaQ/wswjilfKLTECiXz7Rh+3BjFhfDFKv/oXslEjJA=\ngithub.com/go-playground/locales v0.14.1/go.mod h1:hxrqLVvrK65+Rwrd5Fc6F2O76J/NuW9t0sjnWqG1slY=\ngithub.com/go-playground/universal-translator v0.18.1 h1:Bcnm0ZwsGyWbCzImXv+pAJnYK9S473LQFuzCbDbfSFY=\ngithub.com/go-playground/universal-translator v0.18.1/go.mod h1:xekY+UJKNuX9WP91TpwSH2VMlDf28Uj24BCp08ZFTUY=\ngithub.com/go-playground/validator/v10 v10.22.1 h1:40JcKH+bBNGFczGuoBYgX4I6m/i27HYW8P9FDk5PbgA=\ngithub.com/go-playground/validator/v10 v10.22.1/go.mod h1:dbuPbCMFw/DrkbEynArYaCwl3amGuJotoKCe95atGMM=\ngithub.com/goccy/go-json v0.10.3 h1:KZ5WoDbxAIgm2HNbYckL0se1fHD6rz5j4ywS6ebzDqA=\ngithub.com/goccy/go-json v0.10.3/go.mod h1:oq7eo15ShAhp70Anwd5lgX2pLfOS3QCiwU/PULtXL6M=\ngithub.com/goccy/go-yaml v1.13.0 h1:0Wtp0FZLd7Sm8gERmR9S6Iczzb3vItJj7NaHmFg8pTs=\ngithub.com/goccy/go-yaml v1.13.0/go.mod h1:IjYwxUiJDoqpx2RmbdjMUceGHZwYLon3sfOGl5Hi9lc=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/hexops/gotextdiff v1.0.3 h1:gitA9+qJrrTCsiCl7+kh75nPqQt1cx4ZkudSTLoUqJM=\ngithub.com/hexops/gotextdiff v1.0.3/go.mod h1:pSWU5MAI3yDq+fZBTazCSJysOMbxWL1BSow5/V2vxeg=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/jinzhu/copier v0.4.0 h1:w3ciUoD19shMCRargcpm0cm91ytaBhDvuRpz1ODO/U8=\ngithub.com/jinzhu/copier v0.4.0/go.mod h1:DfbEm0FYsaqBcKcFuvmOZb218JkPGtvSHsKg8S8hyyg=\ngithub.com/leodido/go-urn v1.4.0 h1:WT9HwE9SGECu3lg4d/dIA+jxlljEa1/ffXKmRjqdmIQ=\ngithub.com/leodido/go-urn v1.4.0/go.mod h1:bvxc+MVxLKB4z00jd1z+Dvzr47oO32F/QSNjSBOlFxI=\ngithub.com/magiconair/properties v1.8.7 h1:IeQXZAiQcpL9mgcAe1Nu6cX9LLw6ExEHKjN0VQdvPDY=\ngithub.com/magiconair/properties v1.8.7/go.mod h1:Dhd985XPs7jluiymwWYZ0G4Z61jb3vdS329zhj2hYo0=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/pelletier/go-toml/v2 v2.2.3 h1:YmeHyLY8mFWbdkNWwpr+qIL2bEqT0o95WSdkNHvL12M=\ngithub.com/pelletier/go-toml/v2 v2.2.3/go.mod h1:MfCQTFTvCcUyyvvwm1+G6H/jORL20Xlb6rzQu9GuUkc=\ngithub.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e h1:aoZm08cpOy4WuID//EZDgcC4zIxODThtZNPirFr42+A=\ngithub.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/yuin/gopher-lua v1.1.1 h1:kYKnWBjvbNP4XLT3+bPEwAXJx262OhaHDWDVOPjL46M=\ngithub.com/yuin/gopher-lua v1.1.1/go.mod h1:GBR0iDaNXjAgGg9zfCvksxSRnQx76gclCIb7kdAd1Pw=\ngolang.org/x/crypto v0.30.0 h1:RwoQn3GkWiMkzlX562cLB7OxWvjH1L8xutO2WoJcRoY=\ngolang.org/x/crypto v0.30.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/net v0.32.0 h1:ZqPmj8Kzc+Y6e0+skZsuACbx+wzMgo5MQsJh9Qd6aYI=\ngolang.org/x/net v0.32.0/go.mod h1:CwU0IoeOlnQQWJ6ioyFrfRuomB8GKF6KbYXZVyeXNfs=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405 h1:yhCVgyC4o1eVCa2tZl7eS0r+SDo693bJlVdllGtEeKM=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/op/go-logging.v1 v1.0.0-20160211212156-b2cb9fa56473 h1:6D+BvnJ/j6e222UW8s2qTSe3wGBtvo0MbVQG/c5k8RE=\ngopkg.in/op/go-logging.v1 v1.0.0-20160211212156-b2cb9fa56473/go.mod h1:N1eN2tsCx0Ydtgjl4cqmbRCsY4/+z4cYDeqwZTk6zog=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "how-it-works.md",
          "type": "blob",
          "size": 3.61328125,
          "content": "# How it works\n\nIn `yq` expressions are made up of operators and pipes. A context of nodes is passed through the expression and each operation takes the context as input and returns a new context as output. That output is piped in as input for the next operation in the expression. To begin with, the context is set to the first yaml document of the first yaml file (if processing in sequence using eval).\n\nLets look at a couple of examples.\n\n## Simple assignment example\n\nGiven a document like:\n\n```yaml\na: cat\nb: dog\n```\n\nwith an expression:\n\n```\n.a = .b\n```\n\nLike math expressions - operator precedence is important. \n\nThe `=` operator takes two arguments, a `lhs` expression, which in this case is `.a` and `rhs` expression which is `.b`. \n\nIt pipes the current, lets call it 'root' context through the `lhs` expression of `.a` to return the node \n\n```yaml\ncat\n```\n\nSide note: this node holds not only its value 'cat', but comments and metadata too, including path and parent information.\n\nThe `=` operator then pipes the 'root' context through the `rhs` expression of `.b` to return the node\n\n```yaml\ndog\n```\n\nBoth sides have now been evaluated, so now the operator copies across the value from the RHS (`.b`) to the LHS (`.a`), and it returns the now updated context:\n\n```yaml\na: dog\nb: dog\n```\n\n\n## Complex assignment, operator precedence rules\n\nJust like math expressions - `yq` expressions have an order of precedence. The pipe `|` operator has a low order of precedence, so operators with higher precedence will get evaluated first. \n\nMost of the time, this is intuitively what you'd want, for instance `.a = \"cat\" | .b = \"dog\"` is effectively: `(.a = \"cat\") | (.b = \"dog\")`.\n\nHowever, this is not always the case, particularly if you have a complex LHS or RHS expression, for instance if you want to select particular nodes to update. \n\nLets say you had:\n\n```yaml\n- name: bob\n  fruit: apple\n- name: sally\n  fruit: orange\n\n```\n\nLets say you wanted to update the `sally` entry to have fruit: 'mango'. The _incorrect_ way to do that is:\n`.[] | select(.name == \"sally\") | .fruit = \"mango\"`.\n\nBecause `|` has a low operator precedence, this will be evaluated (_incorrectly_) as : `(.[]) | (select(.name == \"sally\")) | (.fruit = \"mango\")`. What you'll see is only the updated segment returned:\n\n```yaml\nname: sally\nfruit: mango\n```\n\nTo properly update this yaml, you will need to use brackets (think BODMAS from maths) and wrap the entire LHS:\n`(.[] | select(.name == \"sally\") | .fruit) = \"mango\"`\n\n\nNow that entire LHS expression is passed to the 'assign' (`=`) operator, and the yaml is correctly updated and returned:\n\n\n```yaml\n- name: bob\n  fruit: apple\n- name: sally\n  fruit: mango\n\n```\n\n## Relative update (e.g. `|=`)\nThere is another form of the `=` operator which we call the relative form. It's very similar to `=` but with one key difference when evaluating the RHS expression.\n\nIn the plain form, we pass in the 'root' level context to the RHS expression. In relative form, we pass in _each result of the LHS_ to the RHS expression. Let's go through an example.\n\nGiven a document like:\n\n```yaml\na: 1\nb: thing\n```\n\nwith an expression:\n\n```\n.a |= . + 1\n```\n\nSimilar to the `=` operator, `|=` takes two operands, the LHS and RHS.\n\nIt pipes the current context (the whole document) through the LHS expression of `.a` to get the node value:\n\n```\n1\n```\n\nNow it pipes _that LHS context_ into the RHS expression `. + 1` (whereas in the `=` plain form it piped the original document context into the RHS) to yield:\n\n\n```\n2\n```\n\nThe assignment operator then copies across the value from the RHS to the value on the LHS, and it returns the now updated 'root' context:\n\n```yaml\na: 2\nb: thing\n```\n"
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 0.1318359375,
          "content": "docs_dir: mkdocs\nsite_dir: docs\nsite_name: Yq\ntheme: 'material'\nrepo_name: 'mikefarah/yq'\nrepo_url: 'https://github.com/mikefarah/yq'\n\n"
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "project-words.txt",
          "type": "blob",
          "size": 2.1025390625,
          "content": "abxbbxdbxebxczzx\nabxbbxdbxebxczzy\naccum\nAccum\nadithyasunil\nAEDT\nágua\nÁGUA\nalecthomas\nappleapple\nAstuff\nautocreating\nautoparse\nAWST\naxbxcxdxe\naxbxcxdxexxx\nbananabanana\nbarp\nnbaz\nbitnami\nblarp\nblddir\nBobo\nBODMAS\nbonapite\nBrien\nBstuff\nBUILDKIT\nbuildpackage\ncatmeow\nCATYPE\nCBVVE\nchardata\nchillum\nchoco\nchomper\ncleanup\ncmlu\ncolorise\ncolors\ncompinit\ncoolioo\ncoverprofile\ncreatemap\ncsvd\nCSVUTF\ncurrentlabel\ncygpath\nczvf\ndatestring\ndatetime\nDatetime\ndatetimes\nDEBEMAIL\ndebhelper\nDebugf\ndebuild\ndelish\ndelpaths\nDELPATHS\ndevorbitus\ndevscripts\ndimchansky\nDont\ndput\nelliotchance\nendhint\nendofname\nEntriesfrom\nenvsubst\nerrorlevel\nEscandón\nEvalall\nfakefilename\nfakeroot\nFarah\nfatih\nFifi\nfilebytes\nFileish\nfoobar\nfoobaz\nfoof\nfrood\nfullpath\ngitbook\ngithubactions\ngnupg\ngoccy\ngofmt\ngogo\ngolangci\ngoreleaser\nGORELEASER\nGOMODCACHE\nGOPATH\ngosec\ngota\ngoversion\nGOVERSION\nhaha\nhellno\nherbygillot\nhexdump\nHoang\nhostpath\nhotdog\nhowdy\nincase\ninlinetables\ninplace\nints\nireduce\niwatch\njinzhu\njq's\njsond\nkeygrip\nKeygrip\nKEYGRIP\nKEYID\nkeyvalue\nkwak\nlalilu\nldflags\nLDFLAGS\nlexer\nLexer\nlibdistro\nlindex\nlinecomment\nLVAs\nmagiconair\nmapvalues\nMier\nmikefarah\nminideb\nminishift\nmipsle\nmitchellh\nmktemp\nMult\nmultidoc\nmultimaint\nmyenv\nmyenvnonexisting\nmyfile\nmyformat\nndjson\nNDJSON\nNFKD\nnixpkgs\nnojson\nnonascii\nnonempty\nnoninteractive\nNonquoting\nnosec\nnotoml\nnoxml\nnolua\nnullinput\nonea\nOneshot\nopencollect\nopstack\norderedmap\nosarch\noverridign\npacman\nPadder\npandoc\nparsechangelog\npcsv\npelletier\npflag\nprechecking\nPrerelease\nproc\npropsd\nqylib\nreadline\nrealnames\nrealpath\nrepr\nrhash\nrindex\nrisentveber\nrmescandon\nRosey\nroundtrip\nRoundtrip\nroundtripping\nrunningvms\nsadface\nselfupdate\nsetpath\nsharedfolder\nSharedfolder\nshellvariables\nshellvars\nshortfunc\nshortpipe\nshunit\nsnapcraft\nsomevalue\nsplt\nsrcdir\nstackoverflow\nstiched\nStrc\nstrenv\nstrload\nstylig\nsubarray\nsubchild\nsubdescription\nsubmatch\nsubmatches\nSUBSTR\ntempfile\ntfstate\nTfstate\nthar\ntimezone\nTimezone\ntimezones\nTimezones\ntojson\nTokenvalue\ntsvd\nTuan\ntzdata\nUhoh\nupdateassign\nurid\nutfbom\nWarningf\nWazowski\nwebi\nWebi\nwherever\nwinget\nwithdots\nwizz\nwoop\nworkdir\nWritable\nxmld\nxyzzy\nyamld\nyqlib\nyuin\nzabbix\ntonumber\nnoyaml\nnolint\nshortfile"
        },
        {
          "name": "release_instructions.txt",
          "type": "blob",
          "size": 1.9267578125,
          "content": "- update release notes\n- make sure local build passes\n- run ./scripts/copy-docs.sh (and commit the changed in the yq-book branch)\n- run ./scripts/bump-version.sh\n- git push\n// to move the v4 branch\n- git push origin -d v4\n- git push --tags\n- use github actions to publish docker and make github release\n- check github updated yq action in marketplace\n\n\n- snapcraft\n  - update snapcraft version\n  - https://snapcraft.io/yq/builds\n  - will auto create a candidate, test it works then promote\n  - !! need to update v4/stable as well as latest\n  \n  sudo snap remove yq\n  sudo snap install --edge yq\n  \n  then use the UI (https://snapcraft.io/yq/release)\n\n- brew\n  - brew bump-formula-pr --url=https://github.com/mikefarah/yq/archive/2.2.0.tar.gz yq\n  - if that fails with random ruby errors try:\n    - clearing out the gems rm -rf .gem/ruby/2.3.0\n    - export HOMEBREW_FORCE_VENDOR_RUBY=1\n\n- docker\n  - build and push latest and new version tag\n  - docker build .  -t mikefarah/yq:latest -t mikefarah/yq:3 -t mikefarah/yq:3.X\n\n- debian package (with release script)\n  - execute the script `./scripts/release-deb.sh` *on the machine having the private\n      gpg key to sign the generated sources* providing the version to release, the\n      ppa where deploying the files and the passphrase of the private key if needed:\n      ```\n      ./scripts/release-deb.sh -o output -p -s --passphrase PASSPHRASE VERSION\n      ```\n\n- debian package (manually)\n  - ensure you get all vendor dependencies before packaging\n\t```go mod vendor```\n  - execute \n    ```dch -i```\n  - fill debian/changelog with changes from last version\n  - build the package sources \n    ```debuild -i -I -S -sa```\n    (signing with gpg key is required in order to put it to ppa)\n  - put to PPA\n    ```dput ppa:<REPOSITORY> ../yq_<VERSION>_source.changes```\n    (current distro repository is ppa:rmescandon/yq. In case that a new version\n    is released, please contact rmescandon@gmail.com to bump debian package)\n"
        },
        {
          "name": "release_notes.txt",
          "type": "blob",
          "size": 17.1513671875,
          "content": "4.44.6:\n  - Fixed deleting items in array bug #2027, #2172; Thanks @jandubois \n  - Docker image for armv7 / raspberry pi3, Thanks @brianegge\n  - Fixed no-colors regression #2218\n  - Fixed various panic scenarios #2211\n  - Bumped dependencies \n\n4.44.5:\n  - Fixing release pipeline\n\n4.44.4:\n- Format comments with a gray foreground (Thanks @gabe565)\n- Fixed handling of nulls with sort_by expressions #2164\n- Force no color output when NO_COLOR env presents (Thanks @narqo)\n- Fixed array subtraction update bug #2159\n- Fixed index out of range error\n- Can traverse straight from parent operator (parent.blah)\n- Bumped dependencies \n\n4.44.3:\n  - Fixed upper-case file extension detection, Thanks @ryenus (#2121)\n  - Log printing follow no-colors flag #2082\n  - Skip and warn when interpolating strings and theres a unclosed bracket #2083\n  - Fixed CSV content starting with # issue #2076\n  - Bumped dependencies \n\n4.44.2:\n  - Handle numbers with underscores #2039\n  - Unique now works on maps and arrays #2068\n  - Added support for short hand splat with env[] expression #2071,\n    as well as many other operators (split,select,eval,pick..)\n  - Bumped dependencies\n  \n4.44.1:\n  - Added min/max operators (#1992) Thanks @mbenson\n  - Added pivot oeprator (#1993) Thanks @mbenson\n  - Fix: shell-completion (#2006) Thanks @codekow\n  - Handle escaped backslashes (#1997) Thanks @mbenson\n  - Fix npe when given filename ending with \".\" (#1994)\n  - Fix: linux (w/ selinux) build (#2004) Thanks @codekow\n  - Bumped dependencies \n\n4.43.1:\n  - Added omit operator #1989 thanks @mbenson!\n  - Added tostring #72\n  - Added string interpolation #1149\n  - Can specify parent(n) levels #1970\n  - Can now multiply strings by numbers #1988  thanks @mbenson!\n  - Fixed CSV line break issue #1974\n  - Adding a EvaluateAll function to StringEvaluator #1966\n  - yqlib, default to colors off when using yaml library #1964\n  - Removed JSON output warning\n  - Bumped dependencies\n\n\n4.42.1:\n  - Can execute yq expression files directly with shebang #1851\n  - Added --csv-separator flag #1950\n  - Added --properties-separator option - thanks  @learnitall #1864\n  - Added --properties-array-brackets flag for properties encoder #1933\n  - Shell completion improvements - thanks @scop #1911\n  - Bumped dependencies\n\n\n4.41.1:\n  - Can now comment in yq expressions! #1919\n  - Fixed Toml decoding when table array defined before parent #1922\n  - Added new CSV option to turn off auto-parsing #1947\n  - Fixing with_entries context #1925\n  - Can now retrieve the alias names of merge anchors #1942\n\n\n4.40.7:\n  - Bumped dependencies\n\n4.40.6:\n  - Fix: empty TOML table #1924 - Thanks @elibroftw \n  - Fixed \"all\" error message #1845\n  - Fixed to_entries[]\n  - Bumped dependencies\n\n4.40.5:\n  - Fixing seg fault on bad XML #1888\n  - Fixed handling of --- #1890, #1896\n  - Bumped dependencies\n\n4.40.4:\n  - Fixed bug with creating maps with values based off keys #1886, #1889\n  - Bumped dependencies\n\n4.40.3: \n  - Fixed JSON output issue with empty arrays #1880\n\n4.40.2:\n  - Do not panic when StdIn is closed (#1867) Thanks @aleskandro!\n  - Fixed issue when update against self #1869\n  - Fixed multi doc anchor bug #1861\n  - Fixes doc line separator issue when reading expression file #1860\n  - Bumped dependencies\n\n4.40.1:\n  - Added tonumber support (#1664, #71)\n  - Added kind operator\n  - Lua output fixes (#1811) - Thanks @Zash!\n  - Add support for Lua input (#1810) - Thanks @Zash!\n  - Rewrote parsing engine - yq now has its own AST!\n  - Bumped dependencies\n\n4.35.2:\n  - Fix various typos #1798\n  - Fixed number parsing as float bug in JSON #1756\n  - Fixed string, null concatenation consistency #1712\n  - Fixed expression parsing issue #1711\n  - Bumped dependencies\n\n4.35.1:\n  - Added Lua output support (Thanks @Zash)!\n  - Added BSD checksum format (Thanks @viq)!\n  - Bumped dependencies\n\n4.34.2:\n  - Bumped dependencies\n\n\n4.34.1:\n  - Added shell output format thanks @giorgiga\n  - Fixed nil pointer dereference (#1649) thanks @ArthurFritz\n  - Bumped dependency versions\n\n4.33.3:\n  - Fixed bug when splatting empty array #1613\n  - Added scalar output for TOML (#1617)\n  - Fixed passing of readonly context in pipe (partial fix for #1631)\n  - Bumped dependency versions\n\n4.33.2:\n  - Add ``--nul-output|-0`` flag to separate element with NUL character (#1550) Thanks @vaab!\n  - Add removable-media interface plug declaration to the snap packaging(#1618) Thanks @brlin-tw!\n  - Scalar output now handled in csv, tsv and property files\n  - Bumped dependency versions\n\n4.33.1:\n  - Added read-only TOML support! #1364. Thanks @pelletier for making your API available in your toml lib :)\n  - Added warning when auto detect by file type is outputs JSON (#1608)\n\n4.32.2:\n  - Fixed behaviour for unknown file types (defaults to yaml) #1609\n\n4.32.1:\n  - Added divide and modulo operators (#1593) - thanks @teejaded!\n  - Add support for decoding base64 strings without padding (#1555) - thanks @teejaded!\n  - Add filter operation (#1588) - thanks @rbren!\n  - Detect input format based on file name extension (#1582) - thanks @ryenus!\n  - Auto output format when input format is automatically detected\n  - Fixed npe in log #1596\n  - Improved binary file size! \n  - Bumped dependency versions\n\n4.31.2:\n  - Fixed variable handling #1458, #1566\n  - Fixed merged anchor reference problem #1482\n  - Fixed xml encoding of ProcInst #1563, improved XML comment handling\n  - Allow build without json and xml support (#1556) Thanks @afbjorklund\n  - Bumped dependencies\n\n4.31.1:\n  - Added shuffle command #1503\n  - Added ability to sort by multiple fields #1541\n  - Added @sh encoder #1526\n  - Added @uri/@urid encoder/decoder #1529\n  - Fixed date comparison with string date #1537\n  - Added from_unix/to_unix Operators\n  - Bumped dependency versions\n\n4.30.8:\n - Log info message when unable to chown file in linux (e.g. snap confinement) #1521\n\n\n4.30.7:\n - Fixed bug in splice operator #1511\n - Fixed value operator bug  #1515\n - Fixed handling of merging null #1501\n - Ownership of file now maintained in linux (thanks @vaguecoder) #1473\n - Bumped dependency versions\n\n4.30.6:\n  - Fixed xml comment in array of scalars #1465\n  - Include blank newlines in leading header preprocessing #1462\n  - Added aarch64 build (#1261)\n  - Bumped dependency versions (#1453)\n\n4.30.5:\n  - XML Decoder: Comment parsing tweak \n  - XML Decoder: Fixed processing comments in empty XML #1446\n  - XML Decoder: Checking for invalid content outside of a root node #1448\n  - XML Decoder: Fixed issue where content surrounding tags are lost #1447\n  - XML Decoder: Fixed xml decode bug when there is content after a comment\n  - Fixed loading yaml with header issue #1445\n  - guessTagFromCustomType warning log is now a debug.\n  - Special thanks to @Kopfbremse for reporting XML issues!\n\n4.30.4:\n  - Fixed bug in automated versioning (snap/brew)\n\n4.30.3:\n  - Updated release process (automated versioning)\n  - Fixed handling of yaml directives (#1424)\n  - Fixed parsing of newline character in string expression #1430\n  - Fixed length compares to null instead of 0 issue #1427\n\n4.30.2:\n  - Actually updated the default xml prefix :facepalm:\n\n4.30.1:\n  - XML users note: the default attribute prefix has change to `+@` to avoid naming conflicts!\n  - Can use expressions in slice #1419\n  - Fixed unhandled exception when decoding CSV thanks @washanhanzi\n  - Added array_to_map operator for #1415\n  - Fixed sorting by date #1412\n  - Added check to ensure only maps can be encoded to XML #1408\n  - Check merge alias is a map #1425\n  - Explicitly setting unwrap flag works for json output #437, #1409\n  - Bumped go version\n\n\n\n4.29.2:\n  - Fixed null pointer exception when parsing CSV with empty field #1404\n\n4.29.1:\n  - Fixed Square brackets removing update #1342\n  - Added slice array operator (.[10:15]) #44\n  - XML decoder/encoder now parses directives and proc instructions (#1344). Please use the new skip flags [documented here](https://mikefarah.gitbook.io/yq/usage/xml) to ignore them.\n  - XML users note that the default attribute prefix will change to `+@` in the 4.30 release to avoid naming conflicts!\n  - Improved comment handling of decoders (breaking change for yqlib users sorry)\n  - Fixed load operator bug when loading yaml file with multiple documents\n  - Bumped Go compiler version\n  - Bumped dependencies\n\n4.28.2:\n  - Fixed Github Actions issues (thanks @mattphelps-8451)\n  - Fixed bug - can now delete documents #1377\n  - Fixed handling of UTF8 encoded CSVs #1373\n  - Detect and fail on missing closing brackets #1366\n  - yq Github actions now build docker image as part of release\n  - Bumped dependencies\n\n4.28.1:\n  - Added `setpath` and `delpaths` operators, like jq (#1374)\n  - Added `is_key` operator, to check if a match was a key when recursing\n  - Added validation when attempting to add sequences to maps (#1341)\n\n4.27.5:\n  - Fixed relative merge bug #1333\n\n4.27.4:\n  - Fixed bug in alternative (//) operator, RHS being evaluated when it didn't need to be\n  - Fixed footer comment issue #1231\n  - Github action now runs as root (as recommended by Github Actions doc)\n  - Updated dependencies\n\n4.27.3:\n  - Added new 'c' merge and assign flag that clobbers custom tags\n  - Bumped go dependency to fix CVE (#1316)\n  - Updated dependencies\n\n4.27.2:\n  - Fixed JSON decoder to maintain object key order.\n\n4.27.1:\n  - Added 'json' decoder for support for multiple JSON documents in a single file (e.g. NDJSON)\n  - Added 'csv' decoding, array of objects encoding, and round-triping\n  - New StringEvaluator when using yq as a lib (thanks @leviliangtw)\n  - Fixed XML decoding issue (#1284)\n\n4.26.1:\n  - Switched to new expression parser (#1264)\n  - Don't clobber anchor when adding nodes (#1269)\n  - New error operator for custom validation (#1259)\n  - Added support for --wrapScalar=false in properties encoder (#1241) Thanks @dcarbone\n  - Fix error on multiple assign (#1257) Thanks @care0717\n  - Bumped dependency versions\n\n4.25.4:\n  - Fixed panic when using multiply assign on multiple documents #1256 Thanks @care0717\n\n4.25.3:\n  - xml decoder now maintains namespaces by default. Use new flags to disable if required. Thanks @rndmit\n  - Length and other similar operators no longer return comments (#1231)\n  - When split expression includes an extension, dont add .yml automatically (#1165)\n  - Map -r to --unwrapScalar to be more a drop in replacement for jq (#1245) Thanks @SuperSandro2000\n  - Fixing usage of quoted numeric keys #1247\n  - Bumped dependency versions\n\n\n4.25.2:\n  - Fixed comments disappearing from end of file (#1217)\n  - Fixed empty base64 decoding error (#1209)\n  - JSON output now in colors (#1208)\n  - Added codeql and fixed minor issues\n  - Bumped go-yaml library\n  - Bumped go dependency\n\n4.25.1:\n- Can specify a split expression file #1194\n- Fixed append map bug when key matches value in existing map #1200\n- Nicer error message when trying to use merge anchor tags other than maps #1184\n- Fixed Don't automatically read stdin when the null input flag is used\n- Added type as an alias for tag #1195\n- Fixes bug when using write in-place with no expression and multiple files #1193\n\n4.24.5:\n  - Fixed scenarios that dropped the first line if it's a comment (#1181)\n  - Fixed updating existing empty map resulting in single line styling (#1176)\n  - Fixed `with` operation bug (#1174)\n  - Bumped go compiler\n\n4.24.4:\n  - Fixed docker release build\n\n\n4.24.3:\n  - Added from_props\n  - Re-releasing, 4.24.2 release failed to publish correctly.\n\n\n4.24.2:\n  - Fixing release pipeline for go1.18\n\n4.24.1:\n  - Added comparison operators! (#94)\n  - Bumped Golang to 1.18 (#1153)\n  - XML parser no longer runs in strict mode (added new flag to run in strict mode) (#1155)\n\n4.23.1:\n  - Can now supply the envsubst operator with parameters (nounset, noempty, failfast). See [envsubst](https://mikefarah.gitbook.io/yq/operators/env-variable-operators) for details (#1137)\n  - Bumped dependencies\n  - Fixed '+=' problem with multiple matches #1145\n  - Fixed bug with \"and\", \"or\" evaluating the RHS when not needed\n  - Fixed potential panic (thanks @mkatychev)\n  - Tweaked CLI help (thanks @justin-f-perez)\n\n4.22.1:\n  - Added [pick] (https://mikefarah.gitbook.io/yq/operators/pick) operator\n  - Can load expression from a file '--from-file' (#1120)\n  - Fixed property auto expansion (#1127)\n\n4.21.1:\n  - Added [reverse](https://mikefarah.gitbook.io/yq/operators/reverse) operator\n  - Added [string case](https://mikefarah.gitbook.io/yq/operators/string-operators) operators\n  - Added [base64 support](https://mikefarah.gitbook.io/yq/operators/encode-decode)\n  - Added [line](https://mikefarah.gitbook.io/yq/operators/line)  and [column](https://mikefarah.gitbook.io/yq/operators/column) operators\n  - Bumped dependency versions\n\n4.20.2:\n  - Fixed self assignment issue (#1107)\n  - Fixed bad capture groups with multiple matches (#1114)\n  - No longer auto-read from STDIN if there are files given (#1115)\n  - Added missing load_props operator\n\n4.20.1:\n  - New [Date Operators](https://mikefarah.gitbook.io/yq/operators/datetime) (now, tz, add and subtract durations from dates) \n  - Can now decode property files!\n  - New flag to manually set expression if required\n  - ZSH completion bug fix (#1108) thanks @whi-tw\n  - Fixed SEGV error (#1096)\n  - Fixed Github actions issues (it pipes in /dev/null) for XML\n  - Fixed bug - handle expressions that match a directory (e.g. \".\")\n\n4.19.1:\n  - New [eval](https://mikefarah.gitbook.io/yq/operators/eval) _operator_ that allows dynamic expression evaluation (e.g. from an env variable) (#1087)\n  - Adding new elements to array now automatically applies styling of existing elements (#722)\n\n4.18.1:\n  - `eval` is now the _default_ command, you can leave it out #113\n  - `-` no longer needs to be specified as STDIN, unless you are also working with multiple files. #113\n  - Adding to empty maps / arrays now uses idiomatic yaml styling by default\n  - Fixed seg fault on bad input #1086\n  - New `envsubst` operator! (thanks @sciyoshi)\n  - Added support for `*=`, relative multiply/merge\n  - Custom tag types now autocast to there actual types #933\n\n4.17.2:\n  - Fixed manpath issue (thanks @mr-pmillz)\n  \n4.17.1:\n  - Added XML support (#491)\n  - New merge flag (n) to only merge new fields (#1038)\n  - Fixed exit status bug for permission denied error (#1062)\n  - Fixed using multiple variables with union (,) operator (#1048)\n  - Bumped some versions of dependencies\n\n4.16.2:\n  - Bumped go-lang compiler to fix CVE-2021-44717 (#1037)\n  - Dependency version bumps via dependabot\n  - Added extract-checksum.sh to make it easier to validate checksums (#1011)\n  - Report filename on parsing error (#1030)\n\n4.16.1:\n  - Added csv, tsv output formats\n  - Added map, map_values operators\n  - Added sort, sort_by operators (#947, #1024)\n  - Fixed bug in collect\n  - Fixed permissions issue in Dockerfile (#1014)\n  - Fixed assignment operator to no longer overwrite anchor (#1029)\n\n4.15.1:\n  - Added 'load/strload' operators for dynamically loading content from files\n  - Added 'key' operator\n  - Added 'parent' operator\n  - Smarter MAN page installation script (thanks @coolaj86)\n  - Dockerfile improvements (thanks @actualben)\n  - Error handling improvements (thanks @mmorel-35)\n\n4.14.2:\n  - Fixed header preprocessing issue (#1000)\n  - Bumped version dependencies\n\n4.14.1:\n  - Added group_by operator\n  - Added encode/decode operators (toyaml, fromjson etc) (#974)\n  - Added flatten operator\n  - Added --split-exp, for splitting results into multiple files (#966)\n  - Fixed json null array bug (#985)\n\n4.13.5:\n  - Performance improvement for deepMatch (thanks @pmatseykanets)\n  - Added manpage, included in tar.gz downloads as well as a separate tar.gz (#961)\n  - Fixed expression parsing bug #970\n  - Rebuild fixes CVE (#964)\n  - Bumped docker alpine version\n\n\n4.13.4:\n  - Fixed select bug (#958)\n  - Improved performance of `explode` (this will also speed up json conversion)\n  - Improved performance of `merge` (significantly if your merging a small file into a big one)\n\n4.13.3:\n\n- Updated go compiler to 1.17 to fix CVE (#944)\n\n4.13.2:\n\n- Fixing Docker build timeout issues when attempting to release\n\n4.13.1:\n\n- Update to `with` operator, allow for no leading space on the `;`.\n\n4.13.0:\n\nBREAKING CHANGE - the `as` variable operator (e.g. `.a as $x`) now makes a _copy_ of the node(s) at the \npath rather than a reference. This is in order to make it work more like the `jq` equivalent. \n\nThis means any updates made to that variable do not update the original.\n\nThere's a new operator `ref` that will make a reference (and allow multiple updates to the original path by referencing the variable).\nSorry for any inconvenience caused!.\n\n\n- New `with` operator for making multiple changes to a given path\n- New `contains` operator, works like the `jq` equivalent\n- Subtract operator now supports subtracting elements from arrays!\n- Fixed Swapping values using variables #934\n- Github Action now properly supports multiline output #936, thanks @pjxiao\n- Fixed missing closing bracket validation #932\n\n4.12.2:\n- Fix processing of hex numbers #929\n- Fixed alternative and union operator issues #930\n\n4.12.1:\n - Merge comment fix #919\n\n4.12.0:\n- Can now convert yaml to properties properties format (`-o=props`), See [docs](https://mikefarah.gitbook.io/yq/v/v4.x/usage/properties) for more info.\n- Fixed document header/footer comment handling when merging (https://github.com/mikefarah/yq/issues/919)\n- pretty print yaml 1.1 compatibility  (https://github.com/mikefarah/yq/issues/914)\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "snap",
          "type": "tree",
          "content": null
        },
        {
          "name": "test.yq",
          "type": "blob",
          "size": 0.01171875,
          "content": "#!./yq\n.a.b\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "utf8.csv",
          "type": "blob",
          "size": 0.0419921875,
          "content": "﻿id,first,last\n1,john,smith\n1,jane,smith\n"
        },
        {
          "name": "yq.go",
          "type": "blob",
          "size": 0.3818359375,
          "content": "package main\n\nimport (\n\t\"os\"\n\n\tcommand \"github.com/mikefarah/yq/v4/cmd\"\n)\n\nfunc main() {\n\tcmd := command.New()\n\n\targs := os.Args[1:]\n\n\t_, _, err := cmd.Find(args)\n\tif err != nil && args[0] != \"__complete\" {\n\t\t// default command when nothing matches...\n\t\tnewArgs := []string{\"eval\"}\n\t\tcmd.SetArgs(append(newArgs, os.Args[1:]...))\n\n\t}\n\n\tif err := cmd.Execute(); err != nil {\n\t\tos.Exit(1)\n\t}\n}\n"
        }
      ]
    }
  ]
}