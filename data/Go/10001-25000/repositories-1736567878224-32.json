{
  "metadata": {
    "timestamp": 1736567878224,
    "page": 32,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "SagerNet/sing-box",
      "stars": 21348,
      "defaultBranch": "dev-next",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1455078125,
          "content": "/.idea/\n/vendor/\n/*.json\n/*.srs\n/*.db\n/site/\n/bin/\n/dist/\n/sing-box\n/sing-box.exe\n/build/\n/*.jar\n/*.aar\n/*.xcframework/\n.DS_Store\n/config.d/\n/venv/\n\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.216796875,
          "content": "[submodule \"clients/apple\"]\n\tpath = clients/apple\n\turl = https://github.com/SagerNet/sing-box-for-apple.git\n[submodule \"clients/android\"]\n\tpath = clients/android\n\turl = https://github.com/SagerNet/sing-box-for-android.git\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 0.5556640625,
          "content": "linters:\n  disable-all: true\n  enable:\n    - gofumpt\n    - govet\n    - gci\n    - staticcheck\n    - paralleltest\n    - ineffassign\n\nlinters-settings:\n  gci:\n    custom-order: true\n    sections:\n      - standard\n      - prefix(github.com/sagernet/)\n      - default\n  staticcheck:\n    checks:\n      - all\n      - -SA1003\n\nrun:\n  go: \"1.23\"\n  build-tags:\n    - with_gvisor\n    - with_quic\n    - with_dhcp\n    - with_wireguard\n    - with_ech\n    - with_utls\n    - with_reality_server\n    - with_acme\n    - with_clash_api\n\nissues:\n  exclude-dirs:\n    - transport/simple-obfs\n"
        },
        {
          "name": ".goreleaser.fury.yaml",
          "type": "blob",
          "size": 2.6669921875,
          "content": "project_name: sing-box\nbuilds:\n  - id: main\n    main: ./cmd/sing-box\n    flags:\n      - -v\n      - -trimpath\n    ldflags:\n      - -X github.com/sagernet/sing-box/constant.Version={{ .Version }} -s -w -buildid=\n    tags:\n      - with_gvisor\n      - with_quic\n      - with_dhcp\n      - with_wireguard\n      - with_ech\n      - with_utls\n      - with_reality_server\n      - with_acme\n      - with_clash_api\n    env:\n      - CGO_ENABLED=0\n    targets:\n      - linux_386\n      - linux_amd64_v1\n      - linux_arm64\n      - linux_arm_7\n      - linux_s390x\n      - linux_riscv64\n      - linux_mips64le\n    mod_timestamp: '{{ .CommitTimestamp }}'\nsnapshot:\n  name_template: \"{{ .Version }}.{{ .ShortCommit }}\"\nnfpms:\n  - &template\n    id: package\n    package_name: sing-box\n    file_name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 \"v1\") }}{{ .Amd64 }}{{ end }}'\n    builds:\n      - main\n    homepage: https://sing-box.sagernet.org/\n    maintainer: nekohasekai <contact-git@sekai.icu>\n    description: The universal proxy platform.\n    license: GPLv3 or later\n    formats:\n      - deb\n      - rpm\n    priority: extra\n    contents:\n      - src: release/config/config.json\n        dst: /etc/sing-box/config.json\n        type: config\n\n      - src: release/config/sing-box.service\n        dst: /usr/lib/systemd/system/sing-box.service\n      - src: release/config/sing-box@.service\n        dst: /usr/lib/systemd/system/sing-box@.service\n\n      - src: release/completions/sing-box.bash\n        dst: /usr/share/bash-completion/completions/sing-box.bash\n      - src: release/completions/sing-box.fish\n        dst: /usr/share/fish/vendor_completions.d/sing-box.fish\n      - src: release/completions/sing-box.zsh\n        dst: /usr/share/zsh/site-functions/_sing-box\n\n      - src: LICENSE\n        dst: /usr/share/licenses/sing-box/LICENSE\n    deb:\n      signature:\n        key_file: \"{{ .Env.NFPM_KEY_PATH }}\"\n      fields:\n        Bugs: https://github.com/SagerNet/sing-box/issues\n    rpm:\n      signature:\n        key_file: \"{{ .Env.NFPM_KEY_PATH }}\"\n    conflicts:\n      - sing-box-beta\n  - id: package_beta\n    <<: *template\n    package_name: sing-box-beta\n    file_name_template: '{{ .ProjectName }}-beta_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 \"v1\") }}{{ .Amd64 }}{{ end }}'\n    formats:\n      - deb\n      - rpm\n    conflicts:\n      - sing-box\nrelease:\n  disable: true\nfuries:\n  - account: sagernet\n    ids:\n      - package\n    disable: \"{{ not (not .Prerelease) }}\"\n  - account: sagernet\n    ids:\n      - package_beta\n    disable: \"{{ not .Prerelease }}\"\n"
        },
        {
          "name": ".goreleaser.yaml",
          "type": "blob",
          "size": 5.4267578125,
          "content": "version: 2\nproject_name: sing-box\nbuilds:\n  - &template\n    id: main\n    main: ./cmd/sing-box\n    flags:\n      - -v\n      - -trimpath\n    ldflags:\n      - -X github.com/sagernet/sing-box/constant.Version={{ .Version }}\n      - -s\n      - -buildid=\n    tags:\n      - with_gvisor\n      - with_quic\n      - with_dhcp\n      - with_wireguard\n      - with_ech\n      - with_utls\n      - with_reality_server\n      - with_acme\n      - with_clash_api\n    env:\n      - CGO_ENABLED=0\n    targets:\n      - linux_386\n      - linux_amd64_v1\n      - linux_arm64\n      - linux_arm_6\n      - linux_arm_7\n      - linux_s390x\n      - linux_riscv64\n      - linux_mips64le\n      - windows_amd64_v1\n      - windows_386\n      - windows_arm64\n      - darwin_amd64_v1\n      - darwin_arm64\n    mod_timestamp: '{{ .CommitTimestamp }}'\n  - id: legacy\n    <<: *template\n    tags:\n      - with_gvisor\n      - with_quic\n      - with_dhcp\n      - with_wireguard\n      - with_utls\n      - with_reality_server\n      - with_acme\n      - with_clash_api\n    env:\n      - CGO_ENABLED=0\n      - GOROOT={{ .Env.GOPATH }}/go1.20.14\n    gobinary: \"{{ .Env.GOPATH }}/go1.20.14/bin/go\"\n    targets:\n      - windows_amd64_v1\n      - windows_386\n      - darwin_amd64_v1\n  - id: android\n    <<: *template\n    env:\n      - CGO_ENABLED=1\n    overrides:\n      - goos: android\n        goarch: arm\n        goarm: 7\n        env:\n          - CC=armv7a-linux-androideabi21-clang\n          - CXX=armv7a-linux-androideabi21-clang++\n      - goos: android\n        goarch: arm64\n        env:\n          - CC=aarch64-linux-android21-clang\n          - CXX=aarch64-linux-android21-clang++\n      - goos: android\n        goarch: 386\n        env:\n          - CC=i686-linux-android21-clang\n          - CXX=i686-linux-android21-clang++\n      - goos: android\n        goarch: amd64\n        goamd64: v1\n        env:\n          - CC=x86_64-linux-android21-clang\n          - CXX=x86_64-linux-android21-clang++\n    targets:\n      - android_arm_7\n      - android_arm64\n      - android_386\n      - android_amd64\narchives:\n  - &template\n    id: archive\n    builds:\n      - main\n      - android\n    format: tar.gz\n    format_overrides:\n      - goos: windows\n        format: zip\n    wrap_in_directory: true\n    files:\n      - LICENSE\n    name_template: '{{ .ProjectName }}-{{ .Version }}-{{ .Os }}-{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ if and .Mips (not (eq .Mips \"hardfloat\")) }}_{{ .Mips }}{{ end }}{{ if not (eq .Amd64 \"v1\") }}{{ .Amd64 }}{{ end }}'\n  - id: archive-legacy\n    <<: *template\n    builds:\n      - legacy\n    name_template: '{{ .ProjectName }}-{{ .Version }}-{{ .Os }}-{{ .Arch }}-legacy'\nnfpms:\n  - id: package\n    package_name: sing-box\n    file_name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ if and .Mips (not (eq .Mips \"hardfloat\")) }}_{{ .Mips }}{{ end }}{{ if not (eq .Amd64 \"v1\") }}{{ .Amd64 }}{{ end }}'\n    builds:\n      - main\n    homepage: https://sing-box.sagernet.org/\n    maintainer: nekohasekai <contact-git@sekai.icu>\n    description: The universal proxy platform.\n    license: GPLv3 or later\n    formats:\n      - deb\n      - rpm\n      - archlinux\n#      - apk\n#      - ipk\n    priority: extra\n    contents:\n      - src: release/config/config.json\n        dst: /etc/sing-box/config.json\n        type: config\n\n      - src: release/config/sing-box.service\n        dst: /usr/lib/systemd/system/sing-box.service\n      - src: release/config/sing-box@.service\n        dst: /usr/lib/systemd/system/sing-box@.service\n\n      - src: release/completions/sing-box.bash\n        dst: /usr/share/bash-completion/completions/sing-box.bash\n      - src: release/completions/sing-box.fish\n        dst: /usr/share/fish/vendor_completions.d/sing-box.fish\n      - src: release/completions/sing-box.zsh\n        dst: /usr/share/zsh/site-functions/_sing-box\n\n      - src: LICENSE\n        dst: /usr/share/licenses/sing-box/LICENSE\n    deb:\n      signature:\n        key_file: \"{{ .Env.NFPM_KEY_PATH }}\"\n      fields:\n        Bugs: https://github.com/SagerNet/sing-box/issues\n    rpm:\n      signature:\n        key_file: \"{{ .Env.NFPM_KEY_PATH }}\"\n    overrides:\n      apk:\n        contents:\n          - src: release/config/config.json\n            dst: /etc/sing-box/config.json\n            type: config\n\n          - src: release/config/sing-box.initd\n            dst: /etc/init.d/sing-box\n\n          - src: release/completions/sing-box.bash\n            dst: /usr/share/bash-completion/completions/sing-box.bash\n          - src: release/completions/sing-box.fish\n            dst: /usr/share/fish/vendor_completions.d/sing-box.fish\n          - src: release/completions/sing-box.zsh\n            dst: /usr/share/zsh/site-functions/_sing-box\n\n          - src: LICENSE\n            dst: /usr/share/licenses/sing-box/LICENSE\n      ipk:\n        contents:\n          - src: release/config/config.json\n            dst: /etc/sing-box/config.json\n            type: config\n\n          - src: release/config/openwrt.init\n            dst: /etc/init.d/sing-box\n          - src: release/config/openwrt.conf\n            dst: /etc/config/sing-box\nsource:\n  enabled: false\n  name_template: '{{ .ProjectName }}-{{ .Version }}.source'\n  prefix_template: '{{ .ProjectName }}-{{ .Version }}/'\nchecksum:\n  disable: true\n  name_template: '{{ .ProjectName }}-{{ .Version }}.checksum'\nsigns:\n  - artifacts: checksum\nrelease:\n  github:\n    owner: SagerNet\n    name: sing-box\n  draft: true\n  prerelease: auto\n  mode: replace\n  ids:\n    - archive\n    - package\n  skip_upload: true\npartial:\n  by: target"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.0771484375,
          "content": "FROM --platform=$BUILDPLATFORM golang:1.23-alpine AS builder\nLABEL maintainer=\"nekohasekai <contact-git@sekai.icu>\"\nCOPY . /go/src/github.com/sagernet/sing-box\nWORKDIR /go/src/github.com/sagernet/sing-box\nARG TARGETOS TARGETARCH\nARG GOPROXY=\"\"\nENV GOPROXY ${GOPROXY}\nENV CGO_ENABLED=0\nENV GOOS=$TARGETOS\nENV GOARCH=$TARGETARCH\nRUN set -ex \\\n    && apk add git build-base \\\n    && export COMMIT=$(git rev-parse --short HEAD) \\\n    && export VERSION=$(go run ./cmd/internal/read_tag) \\\n    && go build -v -trimpath -tags \\\n        \"with_gvisor,with_quic,with_dhcp,with_wireguard,with_ech,with_utls,with_reality_server,with_acme,with_clash_api\" \\\n        -o /go/bin/sing-box \\\n        -ldflags \"-X \\\"github.com/sagernet/sing-box/constant.Version=$VERSION\\\" -s -w -buildid=\" \\\n        ./cmd/sing-box\nFROM --platform=$TARGETPLATFORM alpine AS dist\nLABEL maintainer=\"nekohasekai <contact-git@sekai.icu>\"\nRUN set -ex \\\n    && apk upgrade \\\n    && apk add bash tzdata ca-certificates nftables \\\n    && rm -rf /var/cache/apk/*\nCOPY --from=builder /go/bin/sing-box /usr/local/bin/sing-box\nENTRYPOINT [\"sing-box\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.7724609375,
          "content": "Copyright (C) 2022 by nekohasekai <contact-sagernet@sekai.icu>\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <http://www.gnu.org/licenses/>.\n\nIn addition, no derivative work may use the name or imply association\nwith this application without prior consent.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 7.7734375,
          "content": "NAME = sing-box\nCOMMIT = $(shell git rev-parse --short HEAD)\nTAGS_GO120 = with_gvisor,with_dhcp,with_wireguard,with_reality_server,with_clash_api,with_quic,with_utls\nTAGS_GO121 = with_ech\nTAGS ?= $(TAGS_GO118),$(TAGS_GO120),$(TAGS_GO121)\nTAGS_TEST ?= with_gvisor,with_quic,with_wireguard,with_grpc,with_ech,with_utls,with_reality_server\n\nGOHOSTOS = $(shell go env GOHOSTOS)\nGOHOSTARCH = $(shell go env GOHOSTARCH)\nVERSION=$(shell CGO_ENABLED=0 GOOS=$(GOHOSTOS) GOARCH=$(GOHOSTARCH) go run ./cmd/internal/read_tag)\n\nPARAMS = -v -trimpath -ldflags \"-X 'github.com/sagernet/sing-box/constant.Version=$(VERSION)' -s -w -buildid=\"\nMAIN_PARAMS = $(PARAMS) -tags $(TAGS)\nMAIN = ./cmd/sing-box\nPREFIX ?= $(shell go env GOPATH)\n\n.PHONY: test release docs build\n\nbuild:\n\tgo build $(MAIN_PARAMS) $(MAIN)\n\nci_build_go120:\n\tgo build $(PARAMS) $(MAIN)\n\tgo build $(PARAMS) -tags \"$(TAGS_GO120)\" $(MAIN)\n\nci_build:\n\tgo build $(PARAMS) $(MAIN)\n\tgo build $(MAIN_PARAMS) $(MAIN)\n\ngenerate_completions:\n\tgo run -v --tags $(TAGS),generate,generate_completions $(MAIN)\n\ninstall:\n\tgo build -o $(PREFIX)/bin/$(NAME) $(MAIN_PARAMS) $(MAIN)\n\nfmt:\n\t@gofumpt -l -w .\n\t@gofmt -s -w .\n\t@gci write --custom-order -s standard -s \"prefix(github.com/sagernet/)\" -s \"default\" .\n\nfmt_install:\n\tgo install -v mvdan.cc/gofumpt@latest\n\tgo install -v github.com/daixiang0/gci@latest\n\nlint:\n\tGOOS=linux golangci-lint run ./...\n\tGOOS=android golangci-lint run ./...\n\tGOOS=windows golangci-lint run ./...\n\tGOOS=darwin golangci-lint run ./...\n\tGOOS=freebsd golangci-lint run ./...\n\nlint_install:\n\tgo install -v github.com/golangci/golangci-lint/cmd/golangci-lint@latest\n\nproto:\n\t@go run ./cmd/internal/protogen\n\t@gofumpt -l -w .\n\t@gofumpt -l -w .\n\nproto_install:\n\tgo install -v google.golang.org/protobuf/cmd/protoc-gen-go@latest\n\tgo install -v google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest\n\nrelease:\n\tgo run ./cmd/internal/build goreleaser release --clean --skip publish\n\tmkdir dist/release\n\tmv dist/*.tar.gz \\\n\t\tdist/*.zip \\\n\t\tdist/*.deb \\\n\t\tdist/*.rpm \\\n\t\tdist/*_amd64.pkg.tar.zst \\\n\t\tdist/*_arm64.pkg.tar.zst \\\n\t\tdist/release\n\tghr --replace --draft --prerelease -p 5 \"v${VERSION}\" dist/release\n\trm -r dist/release\n\nrelease_repo:\n\tgo run ./cmd/internal/build goreleaser release -f .goreleaser.fury.yaml --clean\n\nrelease_install:\n\tgo install -v github.com/tcnksm/ghr@latest\n\nupdate_android_version:\n\tgo run ./cmd/internal/update_android_version\n\nbuild_android:\n\tcd ../sing-box-for-android && ./gradlew :app:clean :app:assemblePlayRelease :app:assembleOtherRelease && ./gradlew --stop\n\nupload_android:\n\tmkdir -p dist/release_android\n\tcp ../sing-box-for-android/app/build/outputs/apk/play/release/*.apk dist/release_android\n\tcp ../sing-box-for-android/app/build/outputs/apk/other/release/*-universal.apk dist/release_android\n\tghr --replace --draft --prerelease -p 5 \"v${VERSION}\" dist/release_android\n\trm -rf dist/release_android\n\nrelease_android: lib_android update_android_version build_android upload_android\n\npublish_android:\n\tcd ../sing-box-for-android && ./gradlew :app:publishPlayReleaseBundle && ./gradlew --stop\n\n# TODO: find why and remove `-destination 'generic/platform=iOS'`\n# TODO: remove xcode clean when fix control widget fixed\nbuild_ios:\n\tcd ../sing-box-for-apple && \\\n\trm -rf build/SFI.xcarchive && \\\n\txcodebuild clean -scheme SFI && \\\n\txcodebuild archive -scheme SFI -configuration Release -destination 'generic/platform=iOS' -archivePath build/SFI.xcarchive -allowProvisioningUpdates\n\nupload_ios_app_store:\n\tcd ../sing-box-for-apple && \\\n\txcodebuild -exportArchive -archivePath build/SFI.xcarchive -exportOptionsPlist SFI/Upload.plist -allowProvisioningUpdates\n\nrelease_ios: build_ios upload_ios_app_store\n\nbuild_macos:\n\tcd ../sing-box-for-apple && \\\n\trm -rf build/SFM.xcarchive && \\\n\txcodebuild archive -scheme SFM -configuration Release -archivePath build/SFM.xcarchive -allowProvisioningUpdates\n\nupload_macos_app_store:\n\tcd ../sing-box-for-apple && \\\n\txcodebuild -exportArchive -archivePath build/SFM.xcarchive -exportOptionsPlist SFI/Upload.plist -allowProvisioningUpdates\n\nrelease_macos: build_macos upload_macos_app_store\n\nbuild_macos_standalone:\n\tcd ../sing-box-for-apple && \\\n\trm -rf build/SFM.System.xcarchive && \\\n\txcodebuild archive -scheme SFM.System -configuration Release -archivePath build/SFM.System.xcarchive -allowProvisioningUpdates\n\nbuild_macos_dmg:\n\trm -rf dist/SFM\n\tmkdir -p dist/SFM\n\tcd ../sing-box-for-apple && \\\n\trm -rf build/SFM.System && \\\n\trm -rf build/SFM.dmg && \\\n\txcodebuild -exportArchive \\\n\t\t-archivePath \"build/SFM.System.xcarchive\" \\\n\t\t-exportOptionsPlist SFM.System/Export.plist -allowProvisioningUpdates \\\n\t\t-exportPath \"build/SFM.System\" && \\\n\tcreate-dmg \\\n\t\t--volname \"sing-box\" \\\n\t\t--volicon \"build/SFM.System/SFM.app/Contents/Resources/AppIcon.icns\" \\\n\t\t--icon \"SFM.app\" 0 0 \\\n \t\t--hide-extension \"SFM.app\" \\\n \t\t--app-drop-link 0 0 \\\n \t\t--skip-jenkins \\\n\t\t\"../sing-box/dist/SFM/SFM.dmg\" \"build/SFM.System/SFM.app\"\n\nnotarize_macos_dmg:\n\txcrun notarytool submit \"dist/SFM/SFM.dmg\" --wait \\\n\t  --keychain-profile \"notarytool-password\" \\\n  \t  --no-s3-acceleration\n\nupload_macos_dmg:\n\tcd dist/SFM && \\\n\tcp SFM.dmg \"SFM-${VERSION}-universal.dmg\" && \\\n\tghr --replace --draft --prerelease \"v${VERSION}\" \"SFM-${VERSION}-universal.dmg\"\n\nupload_macos_dsyms:\n\tpushd ../sing-box-for-apple/build/SFM.System.xcarchive && \\\n\tzip -r SFM.dSYMs.zip dSYMs && \\\n\tmv SFM.dSYMs.zip ../../../sing-box/dist/SFM && \\\n\tpopd && \\\n\tcd dist/SFM && \\\n\tcp SFM.dSYMs.zip \"SFM-${VERSION}-universal.dSYMs.zip\" && \\\n\tghr --replace --draft --prerelease \"v${VERSION}\" \"SFM-${VERSION}-universal.dSYMs.zip\"\n\nrelease_macos_standalone: build_macos_standalone build_macos_dmg notarize_macos_dmg upload_macos_dmg upload_macos_dsyms\n\nbuild_tvos:\n\tcd ../sing-box-for-apple && \\\n\trm -rf build/SFT.xcarchive && \\\n\txcodebuild archive -scheme SFT -configuration Release -archivePath build/SFT.xcarchive -allowProvisioningUpdates\n\nupload_tvos_app_store:\n\tcd ../sing-box-for-apple && \\\n\txcodebuild -exportArchive -archivePath \"build/SFT.xcarchive\" -exportOptionsPlist SFI/Upload.plist -allowProvisioningUpdates\n\nrelease_tvos: build_tvos upload_tvos_app_store\n\nupdate_apple_version:\n\tgo run ./cmd/internal/update_apple_version\n\nupdate_macos_version:\n\tMACOS_PROJECT_VERSION=$(shell go run -v ./cmd/internal/app_store_connect next_macos_project_version) go run ./cmd/internal/update_apple_version\n\nrelease_apple: lib_ios update_apple_version release_ios release_macos release_tvos release_macos_standalone\n\nrelease_apple_beta: update_apple_version release_ios release_macos release_tvos\n\npublish_testflight:\n\tgo run -v ./cmd/internal/app_store_connect publish_testflight\n\nprepare_app_store:\n\tgo run -v ./cmd/internal/app_store_connect prepare_app_store\n\npublish_app_store:\n\tgo run -v ./cmd/internal/app_store_connect publish_app_store\n\ntest:\n\t@go test -v ./... && \\\n\tcd test && \\\n\tgo mod tidy && \\\n\tgo test -v -tags \"$(TAGS_TEST)\" .\n\ntest_stdio:\n\t@go test -v ./... && \\\n\tcd test && \\\n\tgo mod tidy && \\\n\tgo test -v -tags \"$(TAGS_TEST),force_stdio\" .\n\nlib_android:\n\tgo run ./cmd/internal/build_libbox -target android\n\nlib_android_debug:\n\tgo run ./cmd/internal/build_libbox -target android -debug\n\nlib_apple:\n\tgo run ./cmd/internal/build_libbox -target apple\n\nlib_ios:\n\tgo run ./cmd/internal/build_libbox -target apple -platform ios -debug\n\nlib:\n\tgo run ./cmd/internal/build_libbox -target android\n\tgo run ./cmd/internal/build_libbox -target ios\n\nlib_install:\n\tgo install -v github.com/sagernet/gomobile/cmd/gomobile@v0.1.4\n\tgo install -v github.com/sagernet/gomobile/cmd/gobind@v0.1.4\n\ndocs:\n\tvenv/bin/mkdocs serve\n\npublish_docs:\n\tvenv/bin/mkdocs gh-deploy -m \"Update\" --force --ignore-version --no-history\n\ndocs_install:\n\tpython -m venv venv\n\tsource ./venv/bin/activate && pip install --force-reinstall mkdocs-material==\"9.*\" mkdocs-static-i18n==\"1.2.*\"\n\nclean:\n\trm -rf bin dist sing-box\n\trm -f $(shell go env GOPATH)/sing-box\n\nupdate:\n\tgit fetch\n\tgit reset FETCH_HEAD --hard\n\tgit clean -fdx"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.0078125,
          "content": "# sing-box\n\nThe universal proxy platform.\n\n[![Packaging status](https://repology.org/badge/vertical-allrepos/sing-box.svg)](https://repology.org/project/sing-box/versions)\n\n## Documentation\n\nhttps://sing-box.sagernet.org\n\n## License\n\n```\nCopyright (C) 2022 by nekohasekai <contact-sagernet@sekai.icu>\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <http://www.gnu.org/licenses/>.\n\nIn addition, no derivative work may use the name or imply association\nwith this application without prior consent.\n```"
        },
        {
          "name": "adapter",
          "type": "tree",
          "content": null
        },
        {
          "name": "box.go",
          "type": "blob",
          "size": 12.5693359375,
          "content": "package box\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n\t\"runtime/debug\"\n\t\"time\"\n\n\t\"github.com/sagernet/sing-box/adapter\"\n\t\"github.com/sagernet/sing-box/adapter/endpoint\"\n\t\"github.com/sagernet/sing-box/adapter/inbound\"\n\t\"github.com/sagernet/sing-box/adapter/outbound\"\n\t\"github.com/sagernet/sing-box/common/dialer\"\n\t\"github.com/sagernet/sing-box/common/taskmonitor\"\n\t\"github.com/sagernet/sing-box/common/tls\"\n\tC \"github.com/sagernet/sing-box/constant\"\n\t\"github.com/sagernet/sing-box/experimental\"\n\t\"github.com/sagernet/sing-box/experimental/cachefile\"\n\t\"github.com/sagernet/sing-box/experimental/libbox/platform\"\n\t\"github.com/sagernet/sing-box/log\"\n\t\"github.com/sagernet/sing-box/option\"\n\t\"github.com/sagernet/sing-box/protocol/direct\"\n\t\"github.com/sagernet/sing-box/route\"\n\t\"github.com/sagernet/sing/common\"\n\tE \"github.com/sagernet/sing/common/exceptions\"\n\tF \"github.com/sagernet/sing/common/format\"\n\t\"github.com/sagernet/sing/common/ntp\"\n\t\"github.com/sagernet/sing/service\"\n\t\"github.com/sagernet/sing/service/pause\"\n)\n\nvar _ adapter.Service = (*Box)(nil)\n\ntype Box struct {\n\tcreatedAt  time.Time\n\tlogFactory log.Factory\n\tlogger     log.ContextLogger\n\tnetwork    *route.NetworkManager\n\tendpoint   *endpoint.Manager\n\tinbound    *inbound.Manager\n\toutbound   *outbound.Manager\n\tconnection *route.ConnectionManager\n\trouter     *route.Router\n\tservices   []adapter.LifecycleService\n\tdone       chan struct{}\n}\n\ntype Options struct {\n\toption.Options\n\tContext           context.Context\n\tPlatformLogWriter log.PlatformWriter\n}\n\nfunc Context(\n\tctx context.Context,\n\tinboundRegistry adapter.InboundRegistry,\n\toutboundRegistry adapter.OutboundRegistry,\n\tendpointRegistry adapter.EndpointRegistry,\n) context.Context {\n\tif service.FromContext[option.InboundOptionsRegistry](ctx) == nil ||\n\t\tservice.FromContext[adapter.InboundRegistry](ctx) == nil {\n\t\tctx = service.ContextWith[option.InboundOptionsRegistry](ctx, inboundRegistry)\n\t\tctx = service.ContextWith[adapter.InboundRegistry](ctx, inboundRegistry)\n\t}\n\tif service.FromContext[option.OutboundOptionsRegistry](ctx) == nil ||\n\t\tservice.FromContext[adapter.OutboundRegistry](ctx) == nil {\n\t\tctx = service.ContextWith[option.OutboundOptionsRegistry](ctx, outboundRegistry)\n\t\tctx = service.ContextWith[adapter.OutboundRegistry](ctx, outboundRegistry)\n\t}\n\tif service.FromContext[option.EndpointOptionsRegistry](ctx) == nil ||\n\t\tservice.FromContext[adapter.EndpointRegistry](ctx) == nil {\n\t\tctx = service.ContextWith[option.EndpointOptionsRegistry](ctx, endpointRegistry)\n\t\tctx = service.ContextWith[adapter.EndpointRegistry](ctx, endpointRegistry)\n\t}\n\treturn ctx\n}\n\nfunc New(options Options) (*Box, error) {\n\tcreatedAt := time.Now()\n\tctx := options.Context\n\tif ctx == nil {\n\t\tctx = context.Background()\n\t}\n\tctx = service.ContextWithDefaultRegistry(ctx)\n\n\tendpointRegistry := service.FromContext[adapter.EndpointRegistry](ctx)\n\tinboundRegistry := service.FromContext[adapter.InboundRegistry](ctx)\n\toutboundRegistry := service.FromContext[adapter.OutboundRegistry](ctx)\n\n\tif endpointRegistry == nil {\n\t\treturn nil, E.New(\"missing endpoint registry in context\")\n\t}\n\tif inboundRegistry == nil {\n\t\treturn nil, E.New(\"missing inbound registry in context\")\n\t}\n\tif outboundRegistry == nil {\n\t\treturn nil, E.New(\"missing outbound registry in context\")\n\t}\n\n\tctx = pause.WithDefaultManager(ctx)\n\texperimentalOptions := common.PtrValueOrDefault(options.Experimental)\n\tapplyDebugOptions(common.PtrValueOrDefault(experimentalOptions.Debug))\n\tvar needCacheFile bool\n\tvar needClashAPI bool\n\tvar needV2RayAPI bool\n\tif experimentalOptions.CacheFile != nil && experimentalOptions.CacheFile.Enabled || options.PlatformLogWriter != nil {\n\t\tneedCacheFile = true\n\t}\n\tif experimentalOptions.ClashAPI != nil || options.PlatformLogWriter != nil {\n\t\tneedClashAPI = true\n\t}\n\tif experimentalOptions.V2RayAPI != nil && experimentalOptions.V2RayAPI.Listen != \"\" {\n\t\tneedV2RayAPI = true\n\t}\n\tplatformInterface := service.FromContext[platform.Interface](ctx)\n\tvar defaultLogWriter io.Writer\n\tif platformInterface != nil {\n\t\tdefaultLogWriter = io.Discard\n\t}\n\tlogFactory, err := log.New(log.Options{\n\t\tContext:        ctx,\n\t\tOptions:        common.PtrValueOrDefault(options.Log),\n\t\tObservable:     needClashAPI,\n\t\tDefaultWriter:  defaultLogWriter,\n\t\tBaseTime:       createdAt,\n\t\tPlatformWriter: options.PlatformLogWriter,\n\t})\n\tif err != nil {\n\t\treturn nil, E.Cause(err, \"create log factory\")\n\t}\n\n\trouteOptions := common.PtrValueOrDefault(options.Route)\n\tendpointManager := endpoint.NewManager(logFactory.NewLogger(\"endpoint\"), endpointRegistry)\n\tinboundManager := inbound.NewManager(logFactory.NewLogger(\"inbound\"), inboundRegistry, endpointManager)\n\toutboundManager := outbound.NewManager(logFactory.NewLogger(\"outbound\"), outboundRegistry, endpointManager, routeOptions.Final)\n\tservice.MustRegister[adapter.EndpointManager](ctx, endpointManager)\n\tservice.MustRegister[adapter.InboundManager](ctx, inboundManager)\n\tservice.MustRegister[adapter.OutboundManager](ctx, outboundManager)\n\n\tnetworkManager, err := route.NewNetworkManager(ctx, logFactory.NewLogger(\"network\"), routeOptions)\n\tif err != nil {\n\t\treturn nil, E.Cause(err, \"initialize network manager\")\n\t}\n\tservice.MustRegister[adapter.NetworkManager](ctx, networkManager)\n\tconnectionManager := route.NewConnectionManager(logFactory.NewLogger(\"connection\"))\n\tservice.MustRegister[adapter.ConnectionManager](ctx, connectionManager)\n\trouter, err := route.NewRouter(ctx, logFactory, routeOptions, common.PtrValueOrDefault(options.DNS))\n\tif err != nil {\n\t\treturn nil, E.Cause(err, \"initialize router\")\n\t}\n\n\tntpOptions := common.PtrValueOrDefault(options.NTP)\n\tvar timeService *tls.TimeServiceWrapper\n\tif ntpOptions.Enabled {\n\t\ttimeService = new(tls.TimeServiceWrapper)\n\t\tservice.MustRegister[ntp.TimeService](ctx, timeService)\n\t}\n\n\tfor i, endpointOptions := range options.Endpoints {\n\t\tvar tag string\n\t\tif endpointOptions.Tag != \"\" {\n\t\t\ttag = endpointOptions.Tag\n\t\t} else {\n\t\t\ttag = F.ToString(i)\n\t\t}\n\t\terr = endpointManager.Create(ctx,\n\t\t\trouter,\n\t\t\tlogFactory.NewLogger(F.ToString(\"endpoint/\", endpointOptions.Type, \"[\", tag, \"]\")),\n\t\t\ttag,\n\t\t\tendpointOptions.Type,\n\t\t\tendpointOptions.Options,\n\t\t)\n\t\tif err != nil {\n\t\t\treturn nil, E.Cause(err, \"initialize inbound[\", i, \"]\")\n\t\t}\n\t}\n\tfor i, inboundOptions := range options.Inbounds {\n\t\tvar tag string\n\t\tif inboundOptions.Tag != \"\" {\n\t\t\ttag = inboundOptions.Tag\n\t\t} else {\n\t\t\ttag = F.ToString(i)\n\t\t}\n\t\terr = inboundManager.Create(ctx,\n\t\t\trouter,\n\t\t\tlogFactory.NewLogger(F.ToString(\"inbound/\", inboundOptions.Type, \"[\", tag, \"]\")),\n\t\t\ttag,\n\t\t\tinboundOptions.Type,\n\t\t\tinboundOptions.Options,\n\t\t)\n\t\tif err != nil {\n\t\t\treturn nil, E.Cause(err, \"initialize inbound[\", i, \"]\")\n\t\t}\n\t}\n\tfor i, outboundOptions := range options.Outbounds {\n\t\tvar tag string\n\t\tif outboundOptions.Tag != \"\" {\n\t\t\ttag = outboundOptions.Tag\n\t\t} else {\n\t\t\ttag = F.ToString(i)\n\t\t}\n\t\toutboundCtx := ctx\n\t\tif tag != \"\" {\n\t\t\t// TODO: remove this\n\t\t\toutboundCtx = adapter.WithContext(outboundCtx, &adapter.InboundContext{\n\t\t\t\tOutbound: tag,\n\t\t\t})\n\t\t}\n\t\terr = outboundManager.Create(\n\t\t\toutboundCtx,\n\t\t\trouter,\n\t\t\tlogFactory.NewLogger(F.ToString(\"outbound/\", outboundOptions.Type, \"[\", tag, \"]\")),\n\t\t\ttag,\n\t\t\toutboundOptions.Type,\n\t\t\toutboundOptions.Options,\n\t\t)\n\t\tif err != nil {\n\t\t\treturn nil, E.Cause(err, \"initialize outbound[\", i, \"]\")\n\t\t}\n\t}\n\toutboundManager.Initialize(common.Must1(\n\t\tdirect.NewOutbound(\n\t\t\tctx,\n\t\t\trouter,\n\t\t\tlogFactory.NewLogger(\"outbound/direct\"),\n\t\t\t\"direct\",\n\t\t\toption.DirectOutboundOptions{},\n\t\t),\n\t))\n\tif platformInterface != nil {\n\t\terr = platformInterface.Initialize(networkManager)\n\t\tif err != nil {\n\t\t\treturn nil, E.Cause(err, \"initialize platform interface\")\n\t\t}\n\t}\n\tvar services []adapter.LifecycleService\n\tif needCacheFile {\n\t\tcacheFile := cachefile.New(ctx, common.PtrValueOrDefault(experimentalOptions.CacheFile))\n\t\tservice.MustRegister[adapter.CacheFile](ctx, cacheFile)\n\t\tservices = append(services, cacheFile)\n\t}\n\tif needClashAPI {\n\t\tclashAPIOptions := common.PtrValueOrDefault(experimentalOptions.ClashAPI)\n\t\tclashAPIOptions.ModeList = experimental.CalculateClashModeList(options.Options)\n\t\tclashServer, err := experimental.NewClashServer(ctx, logFactory.(log.ObservableFactory), clashAPIOptions)\n\t\tif err != nil {\n\t\t\treturn nil, E.Cause(err, \"create clash-server\")\n\t\t}\n\t\trouter.SetTracker(clashServer)\n\t\tservice.MustRegister[adapter.ClashServer](ctx, clashServer)\n\t\tservices = append(services, clashServer)\n\t}\n\tif needV2RayAPI {\n\t\tv2rayServer, err := experimental.NewV2RayServer(logFactory.NewLogger(\"v2ray-api\"), common.PtrValueOrDefault(experimentalOptions.V2RayAPI))\n\t\tif err != nil {\n\t\t\treturn nil, E.Cause(err, \"create v2ray-server\")\n\t\t}\n\t\tif v2rayServer.StatsService() != nil {\n\t\t\trouter.SetTracker(v2rayServer.StatsService())\n\t\t\tservices = append(services, v2rayServer)\n\t\t\tservice.MustRegister[adapter.V2RayServer](ctx, v2rayServer)\n\t\t}\n\t}\n\tif ntpOptions.Enabled {\n\t\tntpDialer, err := dialer.New(ctx, ntpOptions.DialerOptions)\n\t\tif err != nil {\n\t\t\treturn nil, E.Cause(err, \"create NTP service\")\n\t\t}\n\t\tntpService := ntp.NewService(ntp.Options{\n\t\t\tContext:       ctx,\n\t\t\tDialer:        ntpDialer,\n\t\t\tLogger:        logFactory.NewLogger(\"ntp\"),\n\t\t\tServer:        ntpOptions.ServerOptions.Build(),\n\t\t\tInterval:      time.Duration(ntpOptions.Interval),\n\t\t\tWriteToSystem: ntpOptions.WriteToSystem,\n\t\t})\n\t\ttimeService.TimeService = ntpService\n\t\tservices = append(services, adapter.NewLifecycleService(ntpService, \"ntp service\"))\n\t}\n\treturn &Box{\n\t\tnetwork:    networkManager,\n\t\tendpoint:   endpointManager,\n\t\tinbound:    inboundManager,\n\t\toutbound:   outboundManager,\n\t\tconnection: connectionManager,\n\t\trouter:     router,\n\t\tcreatedAt:  createdAt,\n\t\tlogFactory: logFactory,\n\t\tlogger:     logFactory.Logger(),\n\t\tservices:   services,\n\t\tdone:       make(chan struct{}),\n\t}, nil\n}\n\nfunc (s *Box) PreStart() error {\n\terr := s.preStart()\n\tif err != nil {\n\t\t// TODO: remove catch error\n\t\tdefer func() {\n\t\t\tv := recover()\n\t\t\tif v != nil {\n\t\t\t\tprintln(err.Error())\n\t\t\t\tdebug.PrintStack()\n\t\t\t\tpanic(\"panic on early close: \" + fmt.Sprint(v))\n\t\t\t}\n\t\t}()\n\t\ts.Close()\n\t\treturn err\n\t}\n\ts.logger.Info(\"sing-box pre-started (\", F.Seconds(time.Since(s.createdAt).Seconds()), \"s)\")\n\treturn nil\n}\n\nfunc (s *Box) Start() error {\n\terr := s.start()\n\tif err != nil {\n\t\t// TODO: remove catch error\n\t\tdefer func() {\n\t\t\tv := recover()\n\t\t\tif v != nil {\n\t\t\t\tprintln(err.Error())\n\t\t\t\tdebug.PrintStack()\n\t\t\t\tprintln(\"panic on early start: \" + fmt.Sprint(v))\n\t\t\t}\n\t\t}()\n\t\ts.Close()\n\t\treturn err\n\t}\n\ts.logger.Info(\"sing-box started (\", F.Seconds(time.Since(s.createdAt).Seconds()), \"s)\")\n\treturn nil\n}\n\nfunc (s *Box) preStart() error {\n\tmonitor := taskmonitor.New(s.logger, C.StartTimeout)\n\tmonitor.Start(\"start logger\")\n\terr := s.logFactory.Start()\n\tmonitor.Finish()\n\tif err != nil {\n\t\treturn E.Cause(err, \"start logger\")\n\t}\n\terr = adapter.StartNamed(adapter.StartStateInitialize, s.services) // cache-file clash-api v2ray-api\n\tif err != nil {\n\t\treturn err\n\t}\n\terr = adapter.Start(adapter.StartStateInitialize, s.network, s.connection, s.router, s.outbound, s.inbound, s.endpoint)\n\tif err != nil {\n\t\treturn err\n\t}\n\terr = adapter.Start(adapter.StartStateStart, s.outbound, s.network, s.connection, s.router)\n\tif err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n\nfunc (s *Box) start() error {\n\terr := s.preStart()\n\tif err != nil {\n\t\treturn err\n\t}\n\terr = adapter.StartNamed(adapter.StartStateStart, s.services)\n\tif err != nil {\n\t\treturn err\n\t}\n\terr = s.inbound.Start(adapter.StartStateStart)\n\tif err != nil {\n\t\treturn err\n\t}\n\terr = adapter.Start(adapter.StartStateStart, s.endpoint)\n\tif err != nil {\n\t\treturn err\n\t}\n\terr = adapter.Start(adapter.StartStatePostStart, s.outbound, s.network, s.connection, s.router, s.inbound, s.endpoint)\n\tif err != nil {\n\t\treturn err\n\t}\n\terr = adapter.StartNamed(adapter.StartStatePostStart, s.services)\n\tif err != nil {\n\t\treturn err\n\t}\n\terr = adapter.Start(adapter.StartStateStarted, s.network, s.connection, s.router, s.outbound, s.inbound, s.endpoint)\n\tif err != nil {\n\t\treturn err\n\t}\n\terr = adapter.StartNamed(adapter.StartStateStarted, s.services)\n\tif err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n\nfunc (s *Box) Close() error {\n\tselect {\n\tcase <-s.done:\n\t\treturn os.ErrClosed\n\tdefault:\n\t\tclose(s.done)\n\t}\n\terr := common.Close(\n\t\ts.inbound, s.outbound, s.router, s.connection, s.network,\n\t)\n\tfor _, lifecycleService := range s.services {\n\t\terr = E.Append(err, lifecycleService.Close(), func(err error) error {\n\t\t\treturn E.Cause(err, \"close \", lifecycleService.Name())\n\t\t})\n\t}\n\terr = E.Append(err, s.logFactory.Close(), func(err error) error {\n\t\treturn E.Cause(err, \"close logger\")\n\t})\n\treturn err\n}\n\nfunc (s *Box) Network() adapter.NetworkManager {\n\treturn s.network\n}\n\nfunc (s *Box) Router() adapter.Router {\n\treturn s.router\n}\n\nfunc (s *Box) Inbound() adapter.InboundManager {\n\treturn s.inbound\n}\n\nfunc (s *Box) Outbound() adapter.OutboundManager {\n\treturn s.outbound\n}\n"
        },
        {
          "name": "clients",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "constant",
          "type": "tree",
          "content": null
        },
        {
          "name": "debug.go",
          "type": "blob",
          "size": 0.8173828125,
          "content": "package box\n\nimport (\n\t\"runtime/debug\"\n\n\t\"github.com/sagernet/sing-box/common/conntrack\"\n\t\"github.com/sagernet/sing-box/option\"\n)\n\nfunc applyDebugOptions(options option.DebugOptions) {\n\tapplyDebugListenOption(options)\n\tif options.GCPercent != nil {\n\t\tdebug.SetGCPercent(*options.GCPercent)\n\t}\n\tif options.MaxStack != nil {\n\t\tdebug.SetMaxStack(*options.MaxStack)\n\t}\n\tif options.MaxThreads != nil {\n\t\tdebug.SetMaxThreads(*options.MaxThreads)\n\t}\n\tif options.PanicOnFault != nil {\n\t\tdebug.SetPanicOnFault(*options.PanicOnFault)\n\t}\n\tif options.TraceBack != \"\" {\n\t\tdebug.SetTraceback(options.TraceBack)\n\t}\n\tif options.MemoryLimit != 0 {\n\t\tdebug.SetMemoryLimit(int64(float64(options.MemoryLimit) / 1.5))\n\t\tconntrack.MemoryLimit = uint64(options.MemoryLimit)\n\t}\n\tif options.OOMKiller != nil {\n\t\tconntrack.KillerEnabled = *options.OOMKiller\n\t}\n}\n"
        },
        {
          "name": "debug_http.go",
          "type": "blob",
          "size": 2.1220703125,
          "content": "package box\n\nimport (\n\t\"net/http\"\n\t\"net/http/pprof\"\n\t\"runtime\"\n\t\"runtime/debug\"\n\t\"strings\"\n\n\t\"github.com/sagernet/sing-box/common/humanize\"\n\t\"github.com/sagernet/sing-box/log\"\n\t\"github.com/sagernet/sing-box/option\"\n\tE \"github.com/sagernet/sing/common/exceptions\"\n\t\"github.com/sagernet/sing/common/json\"\n\t\"github.com/sagernet/sing/common/json/badjson\"\n\n\t\"github.com/go-chi/chi/v5\"\n)\n\nvar debugHTTPServer *http.Server\n\nfunc applyDebugListenOption(options option.DebugOptions) {\n\tif debugHTTPServer != nil {\n\t\tdebugHTTPServer.Close()\n\t\tdebugHTTPServer = nil\n\t}\n\tif options.Listen == \"\" {\n\t\treturn\n\t}\n\tr := chi.NewMux()\n\tr.Route(\"/debug\", func(r chi.Router) {\n\t\tr.Get(\"/gc\", func(writer http.ResponseWriter, request *http.Request) {\n\t\t\twriter.WriteHeader(http.StatusNoContent)\n\t\t\tgo debug.FreeOSMemory()\n\t\t})\n\t\tr.Get(\"/memory\", func(writer http.ResponseWriter, request *http.Request) {\n\t\t\tvar memStats runtime.MemStats\n\t\t\truntime.ReadMemStats(&memStats)\n\n\t\t\tvar memObject badjson.JSONObject\n\t\t\tmemObject.Put(\"heap\", humanize.MemoryBytes(memStats.HeapInuse))\n\t\t\tmemObject.Put(\"stack\", humanize.MemoryBytes(memStats.StackInuse))\n\t\t\tmemObject.Put(\"idle\", humanize.MemoryBytes(memStats.HeapIdle-memStats.HeapReleased))\n\t\t\tmemObject.Put(\"goroutines\", runtime.NumGoroutine())\n\t\t\tmemObject.Put(\"rss\", rusageMaxRSS())\n\n\t\t\tencoder := json.NewEncoder(writer)\n\t\t\tencoder.SetIndent(\"\", \"  \")\n\t\t\tencoder.Encode(&memObject)\n\t\t})\n\t\tr.Route(\"/pprof\", func(r chi.Router) {\n\t\t\tr.HandleFunc(\"/\", func(writer http.ResponseWriter, request *http.Request) {\n\t\t\t\tif !strings.HasSuffix(request.URL.Path, \"/\") {\n\t\t\t\t\thttp.Redirect(writer, request, request.URL.Path+\"/\", http.StatusMovedPermanently)\n\t\t\t\t} else {\n\t\t\t\t\tpprof.Index(writer, request)\n\t\t\t\t}\n\t\t\t})\n\t\t\tr.HandleFunc(\"/*\", pprof.Index)\n\t\t\tr.HandleFunc(\"/cmdline\", pprof.Cmdline)\n\t\t\tr.HandleFunc(\"/profile\", pprof.Profile)\n\t\t\tr.HandleFunc(\"/symbol\", pprof.Symbol)\n\t\t\tr.HandleFunc(\"/trace\", pprof.Trace)\n\t\t})\n\t})\n\tdebugHTTPServer = &http.Server{\n\t\tAddr:    options.Listen,\n\t\tHandler: r,\n\t}\n\tgo func() {\n\t\terr := debugHTTPServer.ListenAndServe()\n\t\tif err != nil && !E.IsClosed(err) {\n\t\t\tlog.Error(E.Cause(err, \"serve debug HTTP server\"))\n\t\t}\n\t}()\n}\n"
        },
        {
          "name": "debug_stub.go",
          "type": "blob",
          "size": 0.0849609375,
          "content": "//go:build !(linux || darwin)\n\npackage box\n\nfunc rusageMaxRSS() float64 {\n\treturn -1\n}\n"
        },
        {
          "name": "debug_unix.go",
          "type": "blob",
          "size": 0.4384765625,
          "content": "//go:build linux || darwin\n\npackage box\n\nimport (\n\t\"runtime\"\n\t\"syscall\"\n)\n\nfunc rusageMaxRSS() float64 {\n\tru := syscall.Rusage{}\n\terr := syscall.Getrusage(syscall.RUSAGE_SELF, &ru)\n\tif err != nil {\n\t\treturn 0\n\t}\n\n\trss := float64(ru.Maxrss)\n\tif runtime.GOOS == \"darwin\" || runtime.GOOS == \"ios\" {\n\t\trss /= 1 << 20 // ru_maxrss is bytes on darwin\n\t} else {\n\t\t// ru_maxrss is kilobytes elsewhere (linux, openbsd, etc)\n\t\trss /= 1 << 10\n\t}\n\treturn rss\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "experimental",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 4.3994140625,
          "content": "module github.com/sagernet/sing-box\n\ngo 1.20\n\nrequire (\n\tgithub.com/caddyserver/certmagic v0.20.0\n\tgithub.com/cloudflare/circl v1.3.7\n\tgithub.com/cretz/bine v0.2.0\n\tgithub.com/go-chi/chi/v5 v5.1.0\n\tgithub.com/go-chi/render v1.0.3\n\tgithub.com/gofrs/uuid/v5 v5.3.0\n\tgithub.com/insomniacslk/dhcp v0.0.0-20231206064809-8c70d406f6d2\n\tgithub.com/libdns/alidns v1.0.3\n\tgithub.com/libdns/cloudflare v0.1.1\n\tgithub.com/logrusorgru/aurora v2.0.3+incompatible\n\tgithub.com/metacubex/tfo-go v0.0.0-20241006021335-daedaf0ca7aa\n\tgithub.com/mholt/acmez v1.2.0\n\tgithub.com/miekg/dns v1.1.62\n\tgithub.com/oschwald/maxminddb-golang v1.12.0\n\tgithub.com/sagernet/asc-go v0.0.0-20241217030726-d563060fe4e1\n\tgithub.com/sagernet/bbolt v0.0.0-20231014093535-ea5cb2fe9f0a\n\tgithub.com/sagernet/cloudflare-tls v0.0.0-20231208171750-a4483c1b7cd1\n\tgithub.com/sagernet/cors v1.2.1\n\tgithub.com/sagernet/fswatch v0.1.1\n\tgithub.com/sagernet/gomobile v0.1.4\n\tgithub.com/sagernet/gvisor v0.0.0-20241123041152-536d05261cff\n\tgithub.com/sagernet/quic-go v0.48.2-beta.1\n\tgithub.com/sagernet/reality v0.0.0-20230406110435-ee17307e7691\n\tgithub.com/sagernet/sing v0.6.0-beta.11\n\tgithub.com/sagernet/sing-dns v0.4.0-beta.2\n\tgithub.com/sagernet/sing-mux v0.3.0-alpha.1\n\tgithub.com/sagernet/sing-quic v0.4.0-beta.4\n\tgithub.com/sagernet/sing-shadowsocks v0.2.7\n\tgithub.com/sagernet/sing-shadowsocks2 v0.2.0\n\tgithub.com/sagernet/sing-shadowtls v0.2.0-alpha.2\n\tgithub.com/sagernet/sing-tun v0.6.0-beta.8\n\tgithub.com/sagernet/sing-vmess v0.2.0-beta.2\n\tgithub.com/sagernet/smux v0.0.0-20231208180855-7041f6ea79e7\n\tgithub.com/sagernet/utls v1.6.7\n\tgithub.com/sagernet/wireguard-go v0.0.1-beta.5\n\tgithub.com/sagernet/ws v0.0.0-20231204124109-acfe8907c854\n\tgithub.com/spf13/cobra v1.8.1\n\tgithub.com/stretchr/testify v1.9.0\n\tgo.uber.org/zap v1.27.0\n\tgo4.org/netipx v0.0.0-20231129151722-fdeea329fbba\n\tgolang.org/x/crypto v0.31.0\n\tgolang.org/x/exp v0.0.0-20240719175910-8a7402abbf56\n\tgolang.org/x/mod v0.20.0\n\tgolang.org/x/net v0.31.0\n\tgolang.org/x/sys v0.28.0\n\tgolang.zx2c4.com/wireguard/wgctrl v0.0.0-20230429144221-925a1e7659e6\n\tgoogle.golang.org/grpc v1.63.2\n\tgoogle.golang.org/protobuf v1.33.0\n\thowett.net/plist v1.0.1\n)\n\n//replace github.com/sagernet/sing => ../sing\n\nrequire (\n\tgithub.com/ajg/form v1.5.1 // indirect\n\tgithub.com/andybalholm/brotli v1.0.6 // indirect\n\tgithub.com/cenkalti/backoff/v4 v4.3.0 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/dgrijalva/jwt-go/v4 v4.0.0-preview1 // indirect\n\tgithub.com/fsnotify/fsnotify v1.7.0 // indirect\n\tgithub.com/go-ole/go-ole v1.3.0 // indirect\n\tgithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 // indirect\n\tgithub.com/gobwas/httphead v0.1.0 // indirect\n\tgithub.com/gobwas/pool v0.2.1 // indirect\n\tgithub.com/google/btree v1.1.3 // indirect\n\tgithub.com/google/go-cmp v0.6.0 // indirect\n\tgithub.com/google/go-querystring v1.1.0 // indirect\n\tgithub.com/google/pprof v0.0.0-20231101202521-4ca4178f5c7a // indirect\n\tgithub.com/hashicorp/yamux v0.1.2 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/josharian/native v1.1.0 // indirect\n\tgithub.com/klauspost/compress v1.17.4 // indirect\n\tgithub.com/klauspost/cpuid/v2 v2.2.5 // indirect\n\tgithub.com/libdns/libdns v0.2.2 // indirect\n\tgithub.com/mdlayher/netlink v1.7.2 // indirect\n\tgithub.com/mdlayher/socket v0.4.1 // indirect\n\tgithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e // indirect\n\tgithub.com/onsi/ginkgo/v2 v2.9.7 // indirect\n\tgithub.com/pierrec/lz4/v4 v4.1.14 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/quic-go/qpack v0.4.0 // indirect\n\tgithub.com/quic-go/qtls-go1-20 v0.4.1 // indirect\n\tgithub.com/sagernet/netlink v0.0.0-20240612041022-b9a21c07ac6a // indirect\n\tgithub.com/sagernet/nftables v0.3.0-beta.4 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgithub.com/u-root/uio v0.0.0-20230220225925-ffce2a382923 // indirect\n\tgithub.com/vishvananda/netns v0.0.4 // indirect\n\tgithub.com/zeebo/blake3 v0.2.3 // indirect\n\tgo.uber.org/multierr v1.11.0 // indirect\n\tgolang.org/x/sync v0.10.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgolang.org/x/time v0.7.0 // indirect\n\tgolang.org/x/tools v0.24.0 // indirect\n\tgolang.zx2c4.com/wintun v0.0.0-20230126152724-0fa3db229ce2 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240227224415-6ceb2ff114de // indirect\n\tgopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n\tlukechampine.com/blake3 v1.3.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 20.5546875,
          "content": "github.com/ajg/form v1.5.1 h1:t9c7v8JUKu/XxOGBU0yjNpaMloxGEJhUkqFRq0ibGeU=\ngithub.com/ajg/form v1.5.1/go.mod h1:uL1WgH+h2mgNtvBq0339dVnzXdBETtL2LeUXaIv25UY=\ngithub.com/andybalholm/brotli v1.0.6 h1:Yf9fFpf49Zrxb9NlQaluyE92/+X7UVHlhMNJN2sxfOI=\ngithub.com/andybalholm/brotli v1.0.6/go.mod h1:fO7iG3H7G2nSZ7m0zPUDn85XEX2GTukHGRSepvi9Eig=\ngithub.com/caddyserver/certmagic v0.20.0 h1:bTw7LcEZAh9ucYCRXyCpIrSAGplplI0vGYJ4BpCQ/Fc=\ngithub.com/caddyserver/certmagic v0.20.0/go.mod h1:N4sXgpICQUskEWpj7zVzvWD41p3NYacrNoZYiRM2jTg=\ngithub.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=\ngithub.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/cloudflare/circl v1.3.7 h1:qlCDlTPz2n9fu58M0Nh1J/JzcFpfgkFHHX3O35r5vcU=\ngithub.com/cloudflare/circl v1.3.7/go.mod h1:sRTcRWXGLrKw6yIGJ+l7amYJFfAXbZG0kBSc8r4zxgA=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/cretz/bine v0.2.0 h1:8GiDRGlTgz+o8H9DSnsl+5MeBK4HsExxgl6WgzOCuZo=\ngithub.com/cretz/bine v0.2.0/go.mod h1:WU4o9QR9wWp8AVKtTM1XD5vUHkEqnf2vVSo6dBqbetI=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dgrijalva/jwt-go/v4 v4.0.0-preview1 h1:CaO/zOnF8VvUfEbhRatPcwKVWamvbYd8tQGRWacE9kU=\ngithub.com/dgrijalva/jwt-go/v4 v4.0.0-preview1/go.mod h1:+hnT3ywWDTAFrW5aE+u2Sa/wT555ZqwoCS+pk3p6ry4=\ngithub.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=\ngithub.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=\ngithub.com/go-chi/chi/v5 v5.1.0 h1:acVI1TYaD+hhedDJ3r54HyA6sExp3HfXq7QWEEY/xMw=\ngithub.com/go-chi/chi/v5 v5.1.0/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\ngithub.com/go-chi/render v1.0.3 h1:AsXqd2a1/INaIfUSKq3G5uA8weYx20FOsM7uSoCyyt4=\ngithub.com/go-chi/render v1.0.3/go.mod h1:/gr3hVkmYR0YlEy3LxCuVRFzEu9Ruok+gFqbIofjao0=\ngithub.com/go-logr/logr v1.2.4 h1:g01GSCwiDw2xSZfjJ2/T9M+S6pFdcNtFYsp+Y43HYDQ=\ngithub.com/go-ole/go-ole v1.3.0 h1:Dt6ye7+vXGIKZ7Xtk4s6/xVdGDQynvom7xCFEdWr6uE=\ngithub.com/go-ole/go-ole v1.3.0/go.mod h1:5LS6F96DhAwUc7C+1HLexzMXY1xGRSryjyPPKW6zv78=\ngithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 h1:tfuBGBXKqDEevZMzYi5KSi8KkcZtzBcTgAUUtapy0OI=\ngithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572/go.mod h1:9Pwr4B2jHnOSGXyyzV8ROjYa2ojvAY6HCGYYfMoC3Ls=\ngithub.com/gobwas/httphead v0.1.0 h1:exrUm0f4YX0L7EBwZHuCF4GDp8aJfVeBrlLQrs6NqWU=\ngithub.com/gobwas/httphead v0.1.0/go.mod h1:O/RXo79gxV8G+RqlR/otEwx4Q36zl9rqC5u12GKvMCM=\ngithub.com/gobwas/pool v0.2.1 h1:xfeeEhW7pwmX8nuLVlqbzVc7udMDrwetjEv+TZIz1og=\ngithub.com/gobwas/pool v0.2.1/go.mod h1:q8bcK0KcYlCgd9e7WYLm9LpyS+YeLd8JVDW6WezmKEw=\ngithub.com/gofrs/uuid/v5 v5.3.0 h1:m0mUMr+oVYUdxpMLgSYCZiXe7PuVPnI94+OMeVBNedk=\ngithub.com/gofrs/uuid/v5 v5.3.0/go.mod h1:CDOjlDMVAtN56jqyRUZh58JT31Tiw7/oQyEXZV+9bD8=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/google/btree v1.1.3 h1:CVpQJjYgC4VbzxeGVHfvZrv1ctoYCAI8vbl07Fcxlyg=\ngithub.com/google/btree v1.1.3/go.mod h1:qOPhT0dTNdNzV6Z/lhRX0YXUafgPLFUh+gZMl761Gm4=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-querystring v1.1.0 h1:AnCroh3fv4ZBgVIf1Iwtovgjaw/GiKJo8M8yD/fhyJ8=\ngithub.com/google/go-querystring v1.1.0/go.mod h1:Kcdr2DB4koayq7X8pmAG4sNG59So17icRSOU623lUBU=\ngithub.com/google/pprof v0.0.0-20231101202521-4ca4178f5c7a h1:fEBsGL/sjAuJrgah5XqmmYsTLzJp/TO9Lhy39gkverk=\ngithub.com/google/pprof v0.0.0-20231101202521-4ca4178f5c7a/go.mod h1:czg5+yv1E0ZGTi6S6vVK1mke0fV+FaUhNGcd6VRS9Ik=\ngithub.com/hashicorp/yamux v0.1.2 h1:XtB8kyFOyHXYVFnwT5C3+Bdo8gArse7j2AQ0DA0Uey8=\ngithub.com/hashicorp/yamux v0.1.2/go.mod h1:C+zze2n6e/7wshOZep2A70/aQU6QBRWJO/G6FT1wIns=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/insomniacslk/dhcp v0.0.0-20231206064809-8c70d406f6d2 h1:9K06NfxkBh25x56yVhWWlKFE8YpicaSfHwoV8SFbueA=\ngithub.com/insomniacslk/dhcp v0.0.0-20231206064809-8c70d406f6d2/go.mod h1:3A9PQ1cunSDF/1rbTq99Ts4pVnycWg+vlPkfeD2NLFI=\ngithub.com/jessevdk/go-flags v1.4.0/go.mod h1:4FA24M0QyGHXBuZZK/XkWh8h0e1EYbRYJSGM75WSRxI=\ngithub.com/josharian/native v1.0.1-0.20221213033349-c1e37c09b531/go.mod h1:7X/raswPFr05uY3HiLlYeyQntB6OO7E/d2Cu7qoaN2w=\ngithub.com/josharian/native v1.1.0 h1:uuaP0hAbW7Y4l0ZRQ6C9zfb7Mg1mbFKry/xzDAfmtLA=\ngithub.com/josharian/native v1.1.0/go.mod h1:7X/raswPFr05uY3HiLlYeyQntB6OO7E/d2Cu7qoaN2w=\ngithub.com/klauspost/compress v1.17.4 h1:Ej5ixsIri7BrIjBkRZLTo6ghwrEtHFk7ijlczPW4fZ4=\ngithub.com/klauspost/compress v1.17.4/go.mod h1:/dCuZOvVtNoHsyb+cuJD3itjs3NbnF6KH9zAO4BDxPM=\ngithub.com/klauspost/cpuid/v2 v2.0.12/go.mod h1:g2LTdtYhdyuGPqyWyv7qRAmj1WBqxuObKfj5c0PQa7c=\ngithub.com/klauspost/cpuid/v2 v2.2.5 h1:0E5MSMDEoAulmXNFquVs//DdoomxaoTY1kUhbc/qbZg=\ngithub.com/klauspost/cpuid/v2 v2.2.5/go.mod h1:Lcz8mBdAVJIBVzewtcLocK12l3Y+JytZYpaMropDUws=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/libdns/alidns v1.0.3 h1:LFHuGnbseq5+HCeGa1aW8awyX/4M2psB9962fdD2+yQ=\ngithub.com/libdns/alidns v1.0.3/go.mod h1:e18uAG6GanfRhcJj6/tps2rCMzQJaYVcGKT+ELjdjGE=\ngithub.com/libdns/cloudflare v0.1.1 h1:FVPfWwP8zZCqj268LZjmkDleXlHPlFU9KC4OJ3yn054=\ngithub.com/libdns/cloudflare v0.1.1/go.mod h1:9VK91idpOjg6v7/WbjkEW49bSCxj00ALesIFDhJ8PBU=\ngithub.com/libdns/libdns v0.2.0/go.mod h1:yQCXzk1lEZmmCPa857bnk4TsOiqYasqpyOEeSObbb40=\ngithub.com/libdns/libdns v0.2.2 h1:O6ws7bAfRPaBsgAYt8MDe2HcNBGC29hkZ9MX2eUSX3s=\ngithub.com/libdns/libdns v0.2.2/go.mod h1:4Bj9+5CQiNMVGf87wjX4CY3HQJypUHRuLvlsfsZqLWQ=\ngithub.com/logrusorgru/aurora v2.0.3+incompatible h1:tOpm7WcpBTn4fjmVfgpQq0EfczGlG91VSDkswnjF5A8=\ngithub.com/logrusorgru/aurora v2.0.3+incompatible/go.mod h1:7rIyQOR62GCctdiQpZ/zOJlFyk6y+94wXzv6RNZgaR4=\ngithub.com/mdlayher/netlink v1.7.2 h1:/UtM3ofJap7Vl4QWCPDGXY8d3GIY2UGSDbK+QWmY8/g=\ngithub.com/mdlayher/netlink v1.7.2/go.mod h1:xraEF7uJbxLhc5fpHL4cPe221LI2bdttWlU+ZGLfQSw=\ngithub.com/mdlayher/socket v0.4.1 h1:eM9y2/jlbs1M615oshPQOHZzj6R6wMT7bX5NPiQvn2U=\ngithub.com/mdlayher/socket v0.4.1/go.mod h1:cAqeGjoufqdxWkD7DkpyS+wcefOtmu5OQ8KuoJGIReA=\ngithub.com/metacubex/tfo-go v0.0.0-20241006021335-daedaf0ca7aa h1:9mcjV+RGZVC3reJBNDjjNPyS8PmFG97zq56X7WNaFO4=\ngithub.com/metacubex/tfo-go v0.0.0-20241006021335-daedaf0ca7aa/go.mod h1:4tLB5c8U0CxpkFM+AJJB77jEaVDbLH5XQvy42vAGsWw=\ngithub.com/mholt/acmez v1.2.0 h1:1hhLxSgY5FvH5HCnGUuwbKY2VQVo8IU7rxXKSnZ7F30=\ngithub.com/mholt/acmez v1.2.0/go.mod h1:VT9YwH1xgNX1kmYY89gY8xPJC84BFAisjo8Egigt4kE=\ngithub.com/miekg/dns v1.1.62 h1:cN8OuEF1/x5Rq6Np+h1epln8OiyPWV+lROx9LxcGgIQ=\ngithub.com/miekg/dns v1.1.62/go.mod h1:mvDlcItzm+br7MToIKqkglaGhlFMHJ9DTNNWONWXbNQ=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e h1:fD57ERR4JtEqsWbfPhv4DMiApHyliiK5xCTNVSPiaAs=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=\ngithub.com/onsi/ginkgo/v2 v2.9.7 h1:06xGQy5www2oN160RtEZoTvnP2sPhEfePYmCDc2szss=\ngithub.com/onsi/ginkgo/v2 v2.9.7/go.mod h1:cxrmXWykAwTwhQsJOPfdIDiJ+l2RYq7U8hFU+M/1uw0=\ngithub.com/onsi/gomega v1.27.7 h1:fVih9JD6ogIiHUN6ePK7HJidyEDpWGVB5mzM7cWNXoU=\ngithub.com/oschwald/maxminddb-golang v1.12.0 h1:9FnTOD0YOhP7DGxGsq4glzpGy5+w7pq50AS6wALUMYs=\ngithub.com/oschwald/maxminddb-golang v1.12.0/go.mod h1:q0Nob5lTCqyQ8WT6FYgS1L7PXKVVbgiymefNwIjPzgY=\ngithub.com/pierrec/lz4/v4 v4.1.14 h1:+fL8AQEZtz/ijeNnpduH0bROTu0O3NZAlPjQxGn8LwE=\ngithub.com/pierrec/lz4/v4 v4.1.14/go.mod h1:gZWDp/Ze/IJXGXf23ltt2EXimqmTUXEy0GFuRQyBid4=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/quic-go/qpack v0.4.0 h1:Cr9BXA1sQS2SmDUWjSofMPNKmvF6IiIfDRmgU0w1ZCo=\ngithub.com/quic-go/qpack v0.4.0/go.mod h1:UZVnYIfi5GRk+zI9UMaCPsmZ2xKJP7XBUvVyT1Knj9A=\ngithub.com/quic-go/qtls-go1-20 v0.4.1 h1:D33340mCNDAIKBqXuAvexTNMUByrYmFYVfKfDN5nfFs=\ngithub.com/quic-go/qtls-go1-20 v0.4.1/go.mod h1:X9Nh97ZL80Z+bX/gUXMbipO6OxdiDi58b/fMC9mAL+k=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sagernet/asc-go v0.0.0-20241217030726-d563060fe4e1 h1:qi+ijeREa0yfAaO+NOcZ81gv4uzOfALUIdhkiIFvmG4=\ngithub.com/sagernet/asc-go v0.0.0-20241217030726-d563060fe4e1/go.mod h1:JULDuzTMn2gyZFcjpTVZP4/UuwAdbHJ0bum2RdjXojU=\ngithub.com/sagernet/bbolt v0.0.0-20231014093535-ea5cb2fe9f0a h1:+NkI2670SQpQWvkkD2QgdTuzQG263YZ+2emfpeyGqW0=\ngithub.com/sagernet/bbolt v0.0.0-20231014093535-ea5cb2fe9f0a/go.mod h1:63s7jpZqcDAIpj8oI/1v4Izok+npJOHACFCU6+huCkM=\ngithub.com/sagernet/cloudflare-tls v0.0.0-20231208171750-a4483c1b7cd1 h1:YbmpqPQEMdlk9oFSKYWRqVuu9qzNiOayIonKmv1gCXY=\ngithub.com/sagernet/cloudflare-tls v0.0.0-20231208171750-a4483c1b7cd1/go.mod h1:J2yAxTFPDjrDPhuAi9aWFz2L3ox9it4qAluBBbN0H5k=\ngithub.com/sagernet/cors v1.2.1 h1:Cv5Z8y9YSD6Gm+qSpNrL3LO4lD3eQVvbFYJSG7JCMHQ=\ngithub.com/sagernet/cors v1.2.1/go.mod h1:O64VyOjjhrkLmQIjF4KGRrJO/5dVXFdpEmCW/eISRAI=\ngithub.com/sagernet/fswatch v0.1.1 h1:YqID+93B7VRfqIH3PArW/XpJv5H4OLEVWDfProGoRQs=\ngithub.com/sagernet/fswatch v0.1.1/go.mod h1:nz85laH0mkQqJfaOrqPpkwtU1znMFNVTpT/5oRsVz/o=\ngithub.com/sagernet/gomobile v0.1.4 h1:WzX9ka+iHdupMgy2Vdich+OAt7TM8C2cZbIbzNjBrJY=\ngithub.com/sagernet/gomobile v0.1.4/go.mod h1:Pqq2+ZVvs10U7xK+UwJgwYWUykewi8H6vlslAO73n9E=\ngithub.com/sagernet/gvisor v0.0.0-20241123041152-536d05261cff h1:mlohw3360Wg1BNGook/UHnISXhUx4Gd/3tVLs5T0nSs=\ngithub.com/sagernet/gvisor v0.0.0-20241123041152-536d05261cff/go.mod h1:ehZwnT2UpmOWAHFL48XdBhnd4Qu4hN2O3Ji0us3ZHMw=\ngithub.com/sagernet/netlink v0.0.0-20240612041022-b9a21c07ac6a h1:ObwtHN2VpqE0ZNjr6sGeT00J8uU7JF4cNUdb44/Duis=\ngithub.com/sagernet/netlink v0.0.0-20240612041022-b9a21c07ac6a/go.mod h1:xLnfdiJbSp8rNqYEdIW/6eDO4mVoogml14Bh2hSiFpM=\ngithub.com/sagernet/nftables v0.3.0-beta.4 h1:kbULlAwAC3jvdGAC1P5Fa3GSxVwQJibNenDW2zaXr8I=\ngithub.com/sagernet/nftables v0.3.0-beta.4/go.mod h1:OQXAjvjNGGFxaTgVCSTRIhYB5/llyVDeapVoENYBDS8=\ngithub.com/sagernet/quic-go v0.48.2-beta.1 h1:W0plrLWa1XtOWDTdX3CJwxmQuxkya12nN5BRGZ87kEg=\ngithub.com/sagernet/quic-go v0.48.2-beta.1/go.mod h1:1WgdDIVD1Gybp40JTWketeSfKA/+or9YMLaG5VeTk4k=\ngithub.com/sagernet/reality v0.0.0-20230406110435-ee17307e7691 h1:5Th31OC6yj8byLGkEnIYp6grlXfo1QYUfiYFGjewIdc=\ngithub.com/sagernet/reality v0.0.0-20230406110435-ee17307e7691/go.mod h1:B8lp4WkQ1PwNnrVMM6KyuFR20pU8jYBD+A4EhJovEXU=\ngithub.com/sagernet/sing v0.2.18/go.mod h1:OL6k2F0vHmEzXz2KW19qQzu172FDgSbUSODylighuVo=\ngithub.com/sagernet/sing v0.6.0-beta.11 h1:jWCNlZI1Vdj8lQeBrjRZIQfNwlqMk0ZRqMJuPfTJupI=\ngithub.com/sagernet/sing v0.6.0-beta.11/go.mod h1:ARkL0gM13/Iv5VCZmci/NuoOlePoIsW0m7BWfln/Hak=\ngithub.com/sagernet/sing-dns v0.4.0-beta.2 h1:HW94bUEp7K/vf5DlYz646LTZevQtJ0250jZa/UZRlbY=\ngithub.com/sagernet/sing-dns v0.4.0-beta.2/go.mod h1:8wuFcoFkWM4vJuQyg8e97LyvDwe0/Vl7G839WLcKDs8=\ngithub.com/sagernet/sing-mux v0.3.0-alpha.1 h1:IgNX5bJBpL41gGbp05pdDOvh/b5eUQ6cv9240+Ngipg=\ngithub.com/sagernet/sing-mux v0.3.0-alpha.1/go.mod h1:FTcImmdfW38Lz7b+HQ+mxxOth1lz4ao8uEnz+MwIJQE=\ngithub.com/sagernet/sing-quic v0.4.0-beta.4 h1:kKiMLGaxvVLDCSvCMYo4PtWd1xU6FTL7xvUAQfXO09g=\ngithub.com/sagernet/sing-quic v0.4.0-beta.4/go.mod h1:1UNObFodd8CnS3aCT53x9cigjPSCl3P//8dfBMCwBDM=\ngithub.com/sagernet/sing-shadowsocks v0.2.7 h1:zaopR1tbHEw5Nk6FAkM05wCslV6ahVegEZaKMv9ipx8=\ngithub.com/sagernet/sing-shadowsocks v0.2.7/go.mod h1:0rIKJZBR65Qi0zwdKezt4s57y/Tl1ofkaq6NlkzVuyE=\ngithub.com/sagernet/sing-shadowsocks2 v0.2.0 h1:wpZNs6wKnR7mh1wV9OHwOyUr21VkS3wKFHi+8XwgADg=\ngithub.com/sagernet/sing-shadowsocks2 v0.2.0/go.mod h1:RnXS0lExcDAovvDeniJ4IKa2IuChrdipolPYWBv9hWQ=\ngithub.com/sagernet/sing-shadowtls v0.2.0-alpha.2 h1:RPrpgAdkP5td0vLfS5ldvYosFjSsZtRPxiyLV6jyKg0=\ngithub.com/sagernet/sing-shadowtls v0.2.0-alpha.2/go.mod h1:0j5XlzKxaWRIEjc1uiSKmVoWb0k+L9QgZVb876+thZA=\ngithub.com/sagernet/sing-tun v0.6.0-beta.8 h1:GFNt/w8r1v30zC/hfCytk8C9+N/f1DfvosFXJkyJlrw=\ngithub.com/sagernet/sing-tun v0.6.0-beta.8/go.mod h1:fisFCbC4Vfb6HqQNcwPJi2CDK2bf0Xapyz3j3t4cnHE=\ngithub.com/sagernet/sing-vmess v0.2.0-beta.2 h1:obAkAL35X7ql4RnGzDg4dBYIRpGXRKqcN4LyLZpZGSs=\ngithub.com/sagernet/sing-vmess v0.2.0-beta.2/go.mod h1:HGhf9XUdeE2iOWrX0hQNFgXPbKyGlzpeYFyX0c/pykk=\ngithub.com/sagernet/smux v0.0.0-20231208180855-7041f6ea79e7 h1:DImB4lELfQhplLTxeq2z31Fpv8CQqqrUwTbrIRumZqQ=\ngithub.com/sagernet/smux v0.0.0-20231208180855-7041f6ea79e7/go.mod h1:FP9X2xjT/Az1EsG/orYYoC+5MojWnuI7hrffz8fGwwo=\ngithub.com/sagernet/utls v1.6.7 h1:Ep3+aJ8FUGGta+II2IEVNUc3EDhaRCZINWkj/LloIA8=\ngithub.com/sagernet/utls v1.6.7/go.mod h1:Uua1TKO/FFuAhLr9rkaVnnrTmmiItzDjv1BUb2+ERwM=\ngithub.com/sagernet/wireguard-go v0.0.1-beta.5 h1:aBEsxJUMEONwOZqKPIkuAcv4zJV5p6XlzEN04CF0FXc=\ngithub.com/sagernet/wireguard-go v0.0.1-beta.5/go.mod h1:jGXij2Gn2wbrWuYNUmmNhf1dwcZtvyAvQoe8Xd8MbUo=\ngithub.com/sagernet/ws v0.0.0-20231204124109-acfe8907c854 h1:6uUiZcDRnZSAegryaUGwPC/Fj13JSHwiTftrXhMmYOc=\ngithub.com/sagernet/ws v0.0.0-20231204124109-acfe8907c854/go.mod h1:LtfoSK3+NG57tvnVEHgcuBW9ujgE8enPSgzgwStwCAA=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/u-root/uio v0.0.0-20230220225925-ffce2a382923 h1:tHNk7XK9GkmKUR6Gh8gVBKXc2MVSZ4G/NnWLtzw4gNA=\ngithub.com/u-root/uio v0.0.0-20230220225925-ffce2a382923/go.mod h1:eLL9Nub3yfAho7qB0MzZizFhTU2QkLeoVsWdHtDW264=\ngithub.com/vishvananda/netns v0.0.4 h1:Oeaw1EM2JMxD51g9uhtC0D7erkIjgmj8+JZc26m1YX8=\ngithub.com/vishvananda/netns v0.0.4/go.mod h1:SpkAiCQRtJ6TvvxPnOSyH3BMl6unz3xZlaprSwhNNJM=\ngithub.com/zeebo/assert v1.1.0 h1:hU1L1vLTHsnO8x8c9KAR5GmM5QscxHg5RNU5z5qbUWY=\ngithub.com/zeebo/assert v1.1.0/go.mod h1:Pq9JiuJQpG8JLJdtkwrJESF0Foym2/D9XMU5ciN/wJ0=\ngithub.com/zeebo/blake3 v0.2.3 h1:TFoLXsjeXqRNFxSbk35Dk4YtszE/MQQGK10BH4ptoTg=\ngithub.com/zeebo/blake3 v0.2.3/go.mod h1:mjJjZpnsyIVtVgTOSpJ9vmRE4wgDeyt2HU3qXvvKCaQ=\ngithub.com/zeebo/pcg v1.0.1 h1:lyqfGeWiv4ahac6ttHs+I5hwtH/+1mrhlCtVNQM2kHo=\ngithub.com/zeebo/pcg v1.0.1/go.mod h1:09F0S9iiKrwn9rlI5yjLkmrug154/YRW6KnnXVDM/l4=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=\ngo.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=\ngo.uber.org/zap v1.27.0 h1:aJMhYGrd5QSmlpLMr2MftRKl7t8J8PTZPA732ud/XR8=\ngo.uber.org/zap v1.27.0/go.mod h1:GB2qFLM7cTU87MWRP2mPIjqfIDnGu+VIO4V/SdhGo2E=\ngo4.org/netipx v0.0.0-20231129151722-fdeea329fbba h1:0b9z3AuHCjxk0x/opv64kcgZLBseWJUpBw5I82+2U4M=\ngo4.org/netipx v0.0.0-20231129151722-fdeea329fbba/go.mod h1:PLyyIXexvUFg3Owu6p/WfdlivPbZJsZdgWZlrGope/Y=\ngolang.org/x/crypto v0.0.0-20210513164829-c07d793c2f9a/go.mod h1:P+XmwS30IXTQdn5tA2iutPOUgjI07+tq3H3K9MVA1s8=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20240719175910-8a7402abbf56 h1:2dVuKD2vS7b0QIHQbpyTISPd0LeHDbnYEryqj5Q1ug8=\ngolang.org/x/exp v0.0.0-20240719175910-8a7402abbf56/go.mod h1:M4RDyNAINzryxdtnbRXRL/OHtkFuWGRjvuhBJpk2IlY=\ngolang.org/x/mod v0.20.0 h1:utOm6MM3R3dnawAiJgn0y+xvuYRsm1RKM/4giyfDgV0=\ngolang.org/x/mod v0.20.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210525063256-abc453219eb5/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.31.0 h1:68CPQngjLL0r2AlUKiSxtQFKvzRVbnzLwMUn5SzcLHo=\ngolang.org/x/net v0.31.0/go.mod h1:P4fl1q7dY2hnZFxEk4pPSkDHF+QqjitcnDjUQyMM+pM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20220622161953-175b2fd9d664/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.14.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.27.0 h1:WP60Sv1nlK1T6SupCHbXzSaN0b9wUmsPoRS9b61A23Q=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.7.0 h1:ntUhktv3OPE6TgYxXWv9vKvUSJyIFJlyohwbkEwPrKQ=\ngolang.org/x/time v0.7.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.24.0 h1:J1shsA93PJUEVaUSaay7UXAyE8aimq3GW0pjlolpa24=\ngolang.org/x/tools v0.24.0/go.mod h1:YhNqVBIfWHdzvTLs0d8LCuMhkKUgSUKldakyV7W/WDQ=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543 h1:E7g+9GITq07hpfrRu66IVDexMakfv52eLZ2CXBWiKr4=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.zx2c4.com/wintun v0.0.0-20230126152724-0fa3db229ce2 h1:B82qJJgjvYKsXS9jeunTOisW56dUokqW/FOteYJJ/yg=\ngolang.zx2c4.com/wintun v0.0.0-20230126152724-0fa3db229ce2/go.mod h1:deeaetjYA+DHMHg+sMSMI58GrEteJUUzzw7en6TJQcI=\ngolang.zx2c4.com/wireguard/wgctrl v0.0.0-20230429144221-925a1e7659e6 h1:CawjfCvYQH2OU3/TnxLx97WDSUDRABfT18pCOYwc2GE=\ngolang.zx2c4.com/wireguard/wgctrl v0.0.0-20230429144221-925a1e7659e6/go.mod h1:3rxYc4HtVcSG9gVaTs2GEBdehh+sYPOwKtyUWEOTb80=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240227224415-6ceb2ff114de h1:cZGRis4/ot9uVm639a+rHCUaG0JJHEsdyzSQTMX+suY=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240227224415-6ceb2ff114de/go.mod h1:H4O17MA/PE9BsGx3w+a+W2VOLLD1Qf7oJneAoU6WktY=\ngoogle.golang.org/grpc v1.63.2 h1:MUeiw1B2maTVZthpU5xvASfTh3LDbxHd6IJ6QQVU+xM=\ngoogle.golang.org/grpc v1.63.2/go.mod h1:WAX/8DgncnokcFUldAxq7GeB5DXHDbMF+lLvDomNkRA=\ngoogle.golang.org/protobuf v1.33.0 h1:uNO2rsAINq/JlFpSdYEKIZ0uKD/R9cpdv0T+yoGwGmI=\ngoogle.golang.org/protobuf v1.33.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f h1:BLraFXnmrev5lT+xlilqcH8XK9/i0At2xKjWk4p6zsU=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v1 v1.0.0-20140924161607-9f9df34309c0/go.mod h1:WDnlLJ4WF5VGsH/HVa3CI79GS0ol3YnhVnKP89i0kNg=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhowett.net/plist v1.0.1 h1:37GdZ8tP09Q35o9ych3ehygcsL+HqKSwzctveSlarvM=\nhowett.net/plist v1.0.1/go.mod h1:lqaXoTrLY4hg8tnEzNru53gicrbv7rrk+2xJA/7hw9g=\nlukechampine.com/blake3 v1.3.0 h1:sJ3XhFINmHSrYCgl958hscfIa3bw8x4DqMP3u1YvoYE=\nlukechampine.com/blake3 v1.3.0/go.mod h1:0OFRp7fBtAylGVCO40o87sbupkyIGgbpv1+M1k1LM6k=\n"
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "log",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 8.490234375,
          "content": "site_name: sing-box\nsite_author: nekohasekai\nrepo_url: https://github.com/SagerNet/sing-box\nrepo_name: SagerNet/sing-box\ncopyright: Copyright &copy; 2022 nekohasekai\nsite_description: The universal proxy platform.\nremote_branch: docs\nedit_uri: \"\"\ntheme:\n  name: material\n  logo: assets/icon.svg\n  favicon: assets/icon.svg\n  palette:\n    - media: \"(prefers-color-scheme)\"\n      toggle:\n        icon: material/link\n        name: Switch to light mode\n    - media: \"(prefers-color-scheme: light)\"\n      scheme: default\n      primary: white\n      toggle:\n        icon: material/toggle-switch\n        name: Switch to dark mode\n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: slate\n      primary: black\n      toggle:\n        icon: material/toggle-switch-off\n        name: Switch to system preference\n  features:\n    #    - navigation.instant\n    - navigation.tracking\n    - navigation.tabs\n    - navigation.indexes\n    - navigation.expand\n    - navigation.sections\n    - header.autohide\n    - content.code.copy\n    - content.code.select\n    - content.code.annotate\n  icon:\n    admonition:\n      question: material/new-box\nnav:\n  - Home:\n      - index.md\n      - Change Log: changelog.md\n      - Migration: migration.md\n      - Deprecated: deprecated.md\n      - Support: support.md\n      - Sponsors: sponsors.md\n  - Installation:\n      - Package Manager: installation/package-manager.md\n      - Docker: installation/docker.md\n      - Build from source: installation/build-from-source.md\n  - Graphical Clients:\n      - clients/index.md\n      - Android:\n          - clients/android/index.md\n          - Features: clients/android/features.md\n      - Apple platforms:\n          - clients/apple/index.md\n          - Features: clients/apple/features.md\n      - General: clients/general.md\n      - Privacy policy: clients/privacy.md\n  - Manual:\n      - Proxy:\n          - Server: manual/proxy/server.md\n          - Client: manual/proxy/client.md\n      #          - TUN: manual/proxy/tun.md\n      - Proxy Protocol:\n          - Shadowsocks: manual/proxy-protocol/shadowsocks.md\n          - Trojan: manual/proxy-protocol/trojan.md\n          - Hysteria 2: manual/proxy-protocol/hysteria2.md\n      - Misc:\n          - TunnelVision: manual/misc/tunnelvision.md\n  - Configuration:\n      - configuration/index.md\n      - Log:\n          - configuration/log/index.md\n      - DNS:\n          - configuration/dns/index.md\n          - DNS Server: configuration/dns/server.md\n          - DNS Rule: configuration/dns/rule.md\n          - DNS Rule Action: configuration/dns/rule_action.md\n          - FakeIP: configuration/dns/fakeip.md\n      - NTP:\n          - configuration/ntp/index.md\n      - Route:\n          - configuration/route/index.md\n          - GeoIP: configuration/route/geoip.md\n          - Geosite: configuration/route/geosite.md\n          - Route Rule: configuration/route/rule.md\n          - Rule Action: configuration/route/rule_action.md\n          - Protocol Sniff: configuration/route/sniff.md\n      - Rule Set:\n          - configuration/rule-set/index.md\n          - Source Format: configuration/rule-set/source-format.md\n          - Headless Rule: configuration/rule-set/headless-rule.md\n          - AdGuard DNS Filer: configuration/rule-set/adguard.md\n      - Experimental:\n          - configuration/experimental/index.md\n          - Cache File: configuration/experimental/cache-file.md\n          - Clash API: configuration/experimental/clash-api.md\n          - V2Ray API: configuration/experimental/v2ray-api.md\n      - Shared:\n          - Listen Fields: configuration/shared/listen.md\n          - Dial Fields: configuration/shared/dial.md\n          - TLS: configuration/shared/tls.md\n          - DNS01 Challenge Fields: configuration/shared/dns01_challenge.md\n          - Multiplex: configuration/shared/multiplex.md\n          - V2Ray Transport: configuration/shared/v2ray-transport.md\n          - UDP over TCP: configuration/shared/udp-over-tcp.md\n          - TCP Brutal: configuration/shared/tcp-brutal.md\n      - Endpoint:\n          - configuration/endpoint/index.md\n          - WireGuard: configuration/endpoint/wireguard.md\n      - Inbound:\n          - configuration/inbound/index.md\n          - Direct: configuration/inbound/direct.md\n          - Mixed: configuration/inbound/mixed.md\n          - SOCKS: configuration/inbound/socks.md\n          - HTTP: configuration/inbound/http.md\n          - Shadowsocks: configuration/inbound/shadowsocks.md\n          - VMess: configuration/inbound/vmess.md\n          - Trojan: configuration/inbound/trojan.md\n          - Naive: configuration/inbound/naive.md\n          - Hysteria: configuration/inbound/hysteria.md\n          - ShadowTLS: configuration/inbound/shadowtls.md\n          - VLESS: configuration/inbound/vless.md\n          - TUIC: configuration/inbound/tuic.md\n          - Hysteria2: configuration/inbound/hysteria2.md\n          - Tun: configuration/inbound/tun.md\n          - Redirect: configuration/inbound/redirect.md\n          - TProxy: configuration/inbound/tproxy.md\n      - Outbound:\n          - configuration/outbound/index.md\n          - Direct: configuration/outbound/direct.md\n          - Block: configuration/outbound/block.md\n          - SOCKS: configuration/outbound/socks.md\n          - HTTP: configuration/outbound/http.md\n          - Shadowsocks: configuration/outbound/shadowsocks.md\n          - VMess: configuration/outbound/vmess.md\n          - Trojan: configuration/outbound/trojan.md\n          - WireGuard: configuration/outbound/wireguard.md\n          - Hysteria: configuration/outbound/hysteria.md\n          - ShadowTLS: configuration/outbound/shadowtls.md\n          - VLESS: configuration/outbound/vless.md\n          - TUIC: configuration/outbound/tuic.md\n          - Hysteria2: configuration/outbound/hysteria2.md\n          - Tor: configuration/outbound/tor.md\n          - SSH: configuration/outbound/ssh.md\n          - DNS: configuration/outbound/dns.md\n          - Selector: configuration/outbound/selector.md\n          - URLTest: configuration/outbound/urltest.md\nmarkdown_extensions:\n  - pymdownx.inlinehilite\n  - pymdownx.snippets\n  - pymdownx.superfences\n  - pymdownx.details\n  - pymdownx.critic\n  - pymdownx.caret\n  - pymdownx.keys\n  - pymdownx.mark\n  - pymdownx.tilde\n  - pymdownx.magiclink\n  - admonition\n  - attr_list\n  - md_in_html\n  - footnotes\n  - def_list\n  - pymdownx.highlight:\n      anchor_linenums: true\n  - pymdownx.tabbed:\n      alternate_style: true\n  - pymdownx.tasklist:\n      custom_checkbox: true\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\nextra:\n  social:\n    - icon: fontawesome/brands/github\n      link: https://github.com/SagerNet/sing-box\n  generator: false\nplugins:\n  - search\n  - i18n:\n      docs_structure: suffix\n      fallback_to_default: true\n      languages:\n        - build: true\n          default: true\n          locale: en\n          name: English\n        - build: true\n          default: false\n          locale: zh\n          name: 简体中文\n          nav_translations:\n            Home: 开始\n            Change Log: 更新日志\n            Migration: 迁移指南\n            Deprecated: 废弃功能列表\n            Support: 支持\n\n            Installation: 安装\n            Package Manager: 包管理器\n            Build from source: 从源代码构建\n\n            Graphical Clients: 图形界面客户端\n            Features: 特性\n            Apple platforms: Apple 平台\n            General: 通用\n            Privacy policy: 隐私政策\n\n            Configuration: 配置\n            Log: 日志\n            DNS Server: DNS 服务器\n            DNS Rule: DNS 规则\n            DNS Rule Action: DNS 规则动作\n\n            Route: 路由\n            Route Rule: 路由规则\n            Rule Action: 规则动作\n            Protocol Sniff: 协议探测\n\n            Rule Set: 规则集\n            Source Format: 源文件格式\n            Headless Rule: 无头规则\n\n            Experimental: 实验性\n            Cache File: 缓存文件\n\n            Shared: 通用\n            Listen Fields: 监听字段\n            Dial Fields: 拨号字段\n            DNS01 Challenge Fields: DNS01 验证字段\n            Multiplex: 多路复用\n            V2Ray Transport: V2Ray 传输层\n\n            Endpoint: 端点\n            Inbound: 入站\n            Outbound: 出站\n\n            Manual: 手册\n      reconfigure_material: true\n      reconfigure_search: true\n"
        },
        {
          "name": "option",
          "type": "tree",
          "content": null
        },
        {
          "name": "protocol",
          "type": "tree",
          "content": null
        },
        {
          "name": "release",
          "type": "tree",
          "content": null
        },
        {
          "name": "route",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "transport",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}