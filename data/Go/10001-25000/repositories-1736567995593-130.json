{
  "metadata": {
    "timestamp": 1736567995593,
    "page": 130,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "xtaci/kcptun",
      "stars": 14012,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3046875,
          "content": "# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n_obj\n_test\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\n*.test\n*.prof\nclient/client\nserver/server\nbuild/*\n.DS_Store\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.5419921875,
          "content": "language: go\ngo:\n    - 1.13.x\nbefore_install:\n    - go get github.com/mattn/goveralls\n    - go get golang.org/x/tools/cmd/cover\ninstall:\n    - env GO111MODULE=on go get github.com/xtaci/kcptun/client\n    - env GO111MODULE=on go get github.com/xtaci/kcptun/server\nbefore_script:\nscript:\n    - cd $HOME/gopath/src/github.com/xtaci/kcptun/client\n    - env GO111MODULE=on $HOME/gopath/bin/goveralls -service=travis-ci\n    - cd $HOME/gopath/src/github.com/xtaci/kcptun/server\n    - env GO111MODULE=on $HOME/gopath/bin/goveralls -service=travis-ci\n    - exit 0\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.625,
          "content": "FROM golang:1.21.0-alpine3.18 as builder\nMAINTAINER xtaci <daniel820313@gmail.com>\nLABEL org.opencontainers.image.source=https://github.com/xtaci/kcptun\nENV GO111MODULE=on\nRUN apk add git\nRUN git clone https://github.com/xtaci/kcptun.git\nRUN cd kcptun && \\\n\tgo build -mod=vendor -ldflags \"-X main.VERSION=$(date -u +%Y%m%d) -s -w\" -o /client github.com/xtaci/kcptun/client && \\\n\tgo build -mod=vendor -ldflags \"-X main.VERSION=$(date -u +%Y%m%d) -s -w\" -o /server github.com/xtaci/kcptun/server\n\nFROM alpine:3.18\nRUN apk add --no-cache iptables\nCOPY --from=builder /client /bin\nCOPY --from=builder /server /bin\nEXPOSE 29900/udp\nEXPOSE 12948\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.046875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016 xtaci\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 26.0205078125,
          "content": "# <img src=\"assets/logo.png\" alt=\"kcptun\" height=\"54px\" /> \n\n[![Release][13]][14] [![Powered][17]][18] [![MIT licensed][11]][12] [![Build Status][3]][4] [![Go Report Card][5]][6] [![Downloads][15]][16] [![Docker][1]][2] \n\n[1]: https://img.shields.io/docker/pulls/xtaci/kcptun\n[2]: https://hub.docker.com/r/xtaci/kcptun\n[3]: https://img.shields.io/github/created-at/xtaci/kcptun\n[4]: https://img.shields.io/github/created-at/xtaci/kcptun\n[5]: https://goreportcard.com/badge/github.com/xtaci/kcptun\n[6]: https://goreportcard.com/report/github.com/xtaci/kcptun\n[11]: https://img.shields.io/github/license/xtaci/kcptun\n[12]: LICENSE.md\n[13]: https://img.shields.io/github/v/release/xtaci/kcptun?color=orange\n[14]: https://github.com/xtaci/kcptun/releases/latest\n[15]: https://img.shields.io/github/downloads/xtaci/kcptun/total.svg?maxAge=1800&color=orange\n[16]: https://github.com/xtaci/kcptun/releases\n[17]: https://img.shields.io/badge/KCP-Powered-blue.svg\n[18]: https://github.com/skywind3000/kcp\n\n<img src=\"assets/kcptun.png\" alt=\"kcptun\" height=\"300px\"/>\n\n> *Disclaimer: kcptun maintains a single website — [github.com/xtaci/kcptun](https://github.com/xtaci/kcptun). Any websites other than [github.com/xtaci/kcptun](https://github.com/xtaci/kcptun) are not endorsed by xtaci.*\n\n### Requirements\n\n| Target | Minimum | Recommended |\n| --- | --- | --- |\n| System | aix darwin dragonfly freebsd linux netbsd openbsd solaris windows | linux |\n| Memory | >20MB | >32MB |\n| CPU | ANY | amd64 with AES-NI & AVX2 |\n\n*NOTE: if you are using kvm, make sure the guest os can do AES instructions*\n<img src=\"https://github.com/xtaci/kcptun/assets/2346725/9358e8e5-2a4a-4be9-9859-62f1aaa553b0\" alt=\"cpuinfo\" height=\"400px\"/>\n\n### QuickStart\n\nDownload:\n\n`curl -L  https://raw.githubusercontent.com/xtaci/kcptun/master/download.sh | sh`\n\nIncrease the number of open files on your server, as:\n\n`ulimit -n 65535`, or write it in `~/.bashrc`.\n\nSuggested `sysctl.conf` parameters for better handling of UDP packets:\n\n```\nnet.core.rmem_max=26214400 // BDP - bandwidth delay product\nnet.core.rmem_default=26214400\nnet.core.wmem_max=26214400\nnet.core.wmem_default=26214400\nnet.core.netdev_max_backlog=2048 // proportional to -rcvwnd\n```\n\nYou can also increase the per-socket buffer by adding parameter(default 4MB):\n```\n-sockbuf 16777217\n```\nfor **slow processors**, increasing this buffer is **CRITICAL** to receive packets properly.\n\nDownload a corresponding one from precompiled [Releases](https://github.com/xtaci/kcptun/releases).\n\n```\nKCP Client: ./client_darwin_amd64 -r \"KCP_SERVER_IP:4000\" -l \":8388\" -mode fast3 -nocomp -autoexpire 900 -sockbuf 16777217 -dscp 46\nKCP Server: ./server_linux_amd64 -t \"TARGET_IP:8388\" -l \":4000\" -mode fast3 -nocomp -sockbuf 16777217 -dscp 46\n```\nThe above commands will establish port forwarding channel for 8388/tcp as:\n\n> Application -> **KCP Client(8388/tcp) -> KCP Server(4000/udp)** -> Target Server(8388/tcp) \n\nwhich tunnels the original connection:\n\n> Application -> Target Server(8388/tcp) \n\n### Build from source\n\n```\n$ git clone https://github.com/xtaci/kcptun.git\n$ cd kcptun\n$ ./build-release.sh\n$ cd build\n```\n\nAll precompiled releases are generated from `build-release.sh` script.\n\n### Performance\n\n<img src=\"assets/fast.png\" alt=\"fast.com\" height=\"256px\" />  \n\n![bandwidth](assets/bw.png)\n\n![flame](assets/flame.png)\n\n> Practical bandwidth graph with parameters:  -mode fast3 -ds 10 -ps 3\n\n\n\n### Basic Tuning Guide\n\n#### Improving Throughput\n\n> **Q: I have a high-speed network link. How can I maximize bandwidth?**\n\n> **A:** Increase `-rcvwnd` on the KCP Client and `-sndwnd` on the KCP Server **simultaneously and gradually**. The minimum of these values determines the maximum transfer rate of the link, as `wnd * mtu / rtt`. Then, try downloading something to see if it meets your requirements. (The MTU is adjustable with `-mtu`.)\n\n#### Improving Latency\n\n> **Q: I'm using kcptun for gaming and want to avoid any lag.**\n\n> **A:** Lag often indicates packet loss. You can reduce lag by changing the `-mode` parameter. \n\n> For example: `-mode fast3`\n\n> Aggressiveness/Responsiveness on retransmission for embedded modes:\n\n> *fast3 > fast2 > fast > normal > default*\n\n#### Head-of-Line Blocking (HOLB)\n\nSince streams are multiplexed into a single physical channel, head-of-line blocking may occur. Increasing `-smuxbuf` to a larger value (default is 4MB) may mitigate this problem, though it will use more memory.\n\nFor versions >= v20190924, you can switch to smux version 2. Smux v2 has options to limit per-stream memory usage. Set `-smuxver 2` to enable smux v2, and adjust `-streambuf` to limit per-stream memory usage. For example: `-streambuf 2097152` limits per-stream memory usage to 2MB. Limiting the stream buffer on the receiver side applies back-pressure to the sender, preventing the sender from overwhelming the buffer along the link. (The `-smuxver` setting **MUST** be **IDENTICAL** on both sides, the default is 1.)\n\n#### Slow Devices\n\nkcptun uses **Reed-Solomon Codes** to recover lost packets, which requires substantial computation. Low-end ARM devices may not perform well with kcptun. For optimal performance, a multi-core x86 home server CPU like AMD Opteron is recommended. If you must use ARM routers, it's best to disable `FEC` and use `salsa20` as the encryption method.\n\n### Expert Tuning Guide\n\n#### Overview\n\n<p align=\"left\"><img src=\"assets/layeredparams.png\" alt=\"params\" height=\"450px\"/></p>\n\n#### Usage\n\n```\n> ./client_freebsd_amd64 -h\nNAME:\n   kcptun - client(with SMUX)\n\nUSAGE:\n   client_freebsd_amd64 [global options] command [command options] [arguments...]\n\nVERSION:\n   20240729\n\nCOMMANDS:\n   help, h  Shows a list of commands or help for one command\n\nGLOBAL OPTIONS:\n   --localaddr value, -l value      local listen address (default: \":12948\")\n   --remoteaddr value, -r value     kcp server address, eg: \"IP:29900\" a for single port, \"IP:minport-maxport\" for port range (default: \"vps:29900\")\n   --key value                      pre-shared secret between client and server (default: \"it's a secrect\") [$KCPTUN_KEY]\n   --crypt value                    aes, aes-128, aes-192, salsa20, blowfish, twofish, cast5, 3des, tea, xtea, xor, sm4, none, null (default: \"aes\")\n   --mode value                     profiles: fast3, fast2, fast, normal, manual (default: \"fast\")\n   --QPP                            enable Quantum Permutation Pads(QPP)\n   --QPPCount value                 the prime number of pads to use for QPP: The more pads you use, the more secure the encryption. Each pad requires 256 bytes. (default: 61)\n   --conn value                     set num of UDP connections to server (default: 1)\n   --autoexpire value               set auto expiration time(in seconds) for a single UDP connection, 0 to disable (default: 0)\n   --scavengettl value              set how long an expired connection can live (in seconds) (default: 600)\n   --mtu value                      set maximum transmission unit for UDP packets (default: 1350)\n   --sndwnd value                   set send window size(num of packets) (default: 128)\n   --rcvwnd value                   set receive window size(num of packets) (default: 512)\n   --datashard value, --ds value    set reed-solomon erasure coding - datashard (default: 10)\n   --parityshard value, --ps value  set reed-solomon erasure coding - parityshard (default: 3)\n   --dscp value                     set DSCP(6bit) (default: 0)\n   --nocomp                         disable compression\n   --sockbuf value                  per-socket buffer in bytes (default: 4194304)\n   --smuxver value                  specify smux version, available 1,2 (default: 1)\n   --smuxbuf value                  the overall de-mux buffer in bytes (default: 4194304)\n   --streambuf value                per stream receive buffer in bytes, smux v2+ (default: 2097152)\n   --keepalive value                seconds between heartbeats (default: 10)\n   --snmplog value                  collect snmp to file, aware of timeformat in golang, like: ./snmp-20060102.log\n   --snmpperiod value               snmp collect period, in seconds (default: 60)\n   --log value                      specify a log file to output, default goes to stderr\n   --quiet                          to suppress the 'stream open/close' messages\n   --tcp                            to emulate a TCP connection(linux)\n   -c value                         config from json file, which will override the command from shell\n   --pprof                          start profiling server on :6060\n   --help, -h                       show help\n   --version, -v                    print the version\n   \n> ./server_freebsd_amd64 -h\nNAME:\n   kcptun - server(with SMUX)\n\nUSAGE:\n   server_freebsd_amd64 [global options] command [command options] [arguments...]\n\nVERSION:\n   20240729\n\nCOMMANDS:\n   help, h  Shows a list of commands or help for one command\n\nGLOBAL OPTIONS:\n   --listen value, -l value         kcp server listen address, eg: \"IP:29900\" for a single port, \"IP:minport-maxport\" for port range (default: \":29900\")\n   --target value, -t value         target server address, or path/to/unix_socket (default: \"127.0.0.1:12948\")\n   --key value                      pre-shared secret between client and server (default: \"it's a secrect\") [$KCPTUN_KEY]\n   --crypt value                    aes, aes-128, aes-192, salsa20, blowfish, twofish, cast5, 3des, tea, xtea, xor, sm4, none, null (default: \"aes\")\n   --QPP                            enable Quantum Permutation Pads(QPP)\n   --QPPCount value                 the prime number of pads to use for QPP: The more pads you use, the more secure the encryption. Each pad requires 256 bytes. (default: 61)\n   --mode value                     profiles: fast3, fast2, fast, normal, manual (default: \"fast\")\n   --mtu value                      set maximum transmission unit for UDP packets (default: 1350)\n   --sndwnd value                   set send window size(num of packets) (default: 1024)\n   --rcvwnd value                   set receive window size(num of packets) (default: 1024)\n   --datashard value, --ds value    set reed-solomon erasure coding - datashard (default: 10)\n   --parityshard value, --ps value  set reed-solomon erasure coding - parityshard (default: 3)\n   --dscp value                     set DSCP(6bit) (default: 0)\n   --nocomp                         disable compression\n   --sockbuf value                  per-socket buffer in bytes (default: 4194304)\n   --smuxver value                  specify smux version, available 1,2 (default: 1)\n   --smuxbuf value                  the overall de-mux buffer in bytes (default: 4194304)\n   --streambuf value                per stream receive buffer in bytes, smux v2+ (default: 2097152)\n   --keepalive value                seconds between heartbeats (default: 10)\n   --snmplog value                  collect snmp to file, aware of timeformat in golang, like: ./snmp-20060102.log\n   --snmpperiod value               snmp collect period, in seconds (default: 60)\n   --pprof                          start profiling server on :6060\n   --log value                      specify a log file to output, default goes to stderr\n   --quiet                          to suppress the 'stream open/close' messages\n   --tcp                            to emulate a TCP connection(linux)\n   -c value                         config from json file, which will override the command from shell\n   --help, -h                       show help\n   --version, -v                    print the version\n```\n\n#### Multiport Dialer\n\nkcptun supports multi-port dialer like below:\n\n```\nclient: --remoteaddr IP:minport-maxport\nserver: --listen IP:minport-maxport\n\neg:\nclient: --remoteaddr IP:3000-4000\nserver: --listen 0.0.0.0:3000-4000\n```\nby specifying port-range, kcptun will automatically switch to next random port within port-range when establishing each new connection.\n\n\n#### Forward Error Correction\n\nIn coding theory, the [Reed–Solomon code](https://en.wikipedia.org/wiki/Reed%E2%80%93Solomon_error_correction) belongs to the class of non-binary cyclic error-correcting codes. The Reed–Solomon code is based on univariate polynomials over finite fields.\n\nIt is able to detect and correct multiple symbol errors. By adding t check symbols to the data, a Reed–Solomon code can detect any combination of up to t erroneous symbols, or correct up to ⌊t/2⌋ symbols. As an erasure code, it can correct up to t known erasures, or it can detect and correct combinations of errors and erasures. Furthermore, Reed–Solomon codes are suitable as multiple-burst bit-error correcting codes, since a sequence of b + 1 consecutive bit errors can affect at most two symbols of size b. The choice of t is up to the designer of the code, and may be selected within wide limits.\n\n![FED](assets/FEC.png)\n\n#### DSCP\n\nDifferentiated services or DiffServ is a computer networking architecture that specifies a simple, scalable and coarse-grained mechanism for classifying and managing network traffic and providing quality of service (QoS) on modern IP networks. DiffServ can, for example, be used to provide low-latency to critical network traffic such as voice or streaming media while providing simple best-effort service to non-critical services such as web traffic or file transfers.\n\nDiffServ uses a 6-bit differentiated services code point (DSCP) in the 8-bit differentiated services field (DS field) in the IP header for packet classification purposes. The DS field and ECN field replace the outdated IPv4 TOS field.\n\nsetting each side with ```-dscp value```, Here are some [Commonly used DSCP values](https://en.wikipedia.org/wiki/Differentiated_services#Commonly_used_DSCP_values).\n\n#### Cryptoanalysis\n\nkcptun is shipped with builtin packet encryption powered by various block encryption algorithms and works in [Cipher Feedback Mode](https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Feedback_(CFB)), for each packet to be sent, the encryption process will start from encrypting a [nonce](https://en.wikipedia.org/wiki/Cryptographic_nonce) from the [system entropy](https://en.wikipedia.org/wiki//dev/random), so encryption to same plaintexts never leads to a same ciphertexts thereafter.\n\nThe contents of the packets are completely anonymous with encryption, including the headers(FEC,KCP), checksums and contents. Note that, no matter which encryption method you choose on you upper layer, if you disable encryption by specifying `-crypt none` to kcptun, the transmit will be insecure somehow, since the header is ***PLAINTEXT*** to everyone it would be susceptible to header tampering, such as jamming the *sliding window size*, *round-trip time*, *FEC property* and *checksums*. ```aes-128``` is suggested for minimal encryption since modern CPUs are shipped with [AES-NI](https://en.wikipedia.org/wiki/AES_instruction_set) instructions and performs even better than `salsa20`(check the table below).\n\nOther possible attacks to kcptun includes: a) [traffic analysis](https://en.wikipedia.org/wiki/Traffic_analysis), dataflow on specific websites may have pattern while interchanging data, but this type of eavesdropping has been mitigated by adapting [smux](https://github.com/xtaci/smux) to mix data streams so as to introduce noises, perfect solution to this has not appeared yet, theoretically by shuffling/mixing messages on larger scale network may mitigate this problem.  b) [replay attack](https://en.wikipedia.org/wiki/Replay_attack), since the asymmetrical encryption has not been introduced into kcptun for some reason, capturing the packets and replay them on a different machine is possible, (notice: hijacking the session and decrypting the contents is still *impossible*), so upper layers should contain a asymmetrical encryption system to guarantee the authenticity of each message(to process message exactly once), such as HTTPS/OpenSSL/LibreSSL, only by signing the requests with private keys can eliminate this type of attack. \n\nImportant: \n1. `-crypt` and `-key` must be the same on both KCP Client & KCP Server.\n2. `-crypt xor` is also insecure and vulnerable to [known-plaintext attack](https://en.wikipedia.org/wiki/Known-plaintext_attack), do not use this unless you know what you are doing. (*cryptanalysis note: any type of [counter mode](https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Counter_(CTR)) is insecure in packet encryption due to the shorten of counter period and leads to iv/nonce collision*)\n\nBenchmarks for crypto algorithms supported by kcptun:\n\n```\nBenchmarkSM4-4                 \t   50000\t     32087 ns/op\t  93.49 MB/s\t       0 B/op\t       0 allocs/op\nBenchmarkAES128-4              \t  500000\t      3274 ns/op\t 916.15 MB/s\t       0 B/op\t       0 allocs/op\nBenchmarkAES192-4              \t  500000\t      3587 ns/op\t 836.34 MB/s\t       0 B/op\t       0 allocs/op\nBenchmarkAES256-4              \t  300000\t      3828 ns/op\t 783.60 MB/s\t       0 B/op\t       0 allocs/op\nBenchmarkTEA-4                 \t  100000\t     15359 ns/op\t 195.32 MB/s\t       0 B/op\t       0 allocs/op\nBenchmarkXOR-4                 \t20000000\t        90.2 ns/op\t33249.02 MB/s\t       0 B/op\t       0 allocs/op\nBenchmarkBlowfish-4            \t   50000\t     26885 ns/op\t 111.58 MB/s\t       0 B/op\t       0 allocs/op\nBenchmarkNone-4                \t30000000\t        45.8 ns/op\t65557.11 MB/s\t       0 B/op\t       0 allocs/op\nBenchmarkCast5-4               \t   50000\t     34370 ns/op\t  87.29 MB/s\t       0 B/op\t       0 allocs/op\nBenchmark3DES-4                \t   10000\t    117893 ns/op\t  25.45 MB/s\t       0 B/op\t       0 allocs/op\nBenchmarkTwofish-4             \t   50000\t     33477 ns/op\t  89.61 MB/s\t       0 B/op\t       0 allocs/op\nBenchmarkXTEA-4                \t   30000\t     45825 ns/op\t  65.47 MB/s\t       0 B/op\t       0 allocs/op\nBenchmarkSalsa20-4             \t  500000\t      3282 ns/op\t 913.90 MB/s\t       0 B/op\t       0 allocs/op\n```\n\nBenchmark result from openssl\n\n```\n$ openssl speed -evp aes-128-cfb\nDoing aes-128-cfb for 3s on 16 size blocks: 157794127 aes-128-cfb's in 2.98s\nDoing aes-128-cfb for 3s on 64 size blocks: 39614018 aes-128-cfb's in 2.98s\nDoing aes-128-cfb for 3s on 256 size blocks: 9971090 aes-128-cfb's in 2.99s\nDoing aes-128-cfb for 3s on 1024 size blocks: 2510877 aes-128-cfb's in 2.99s\nDoing aes-128-cfb for 3s on 8192 size blocks: 310865 aes-128-cfb's in 2.98s\nOpenSSL 1.0.2p  14 Aug 2018\nbuilt on: reproducible build, date unspecified\noptions:bn(64,64) rc4(ptr,int) des(idx,cisc,16,int) aes(partial) idea(int) blowfish(idx)\ncompiler: clang -I. -I.. -I../include  -fPIC -fno-common -DOPENSSL_PIC -DOPENSSL_THREADS -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -arch x86_64 -O3 -DL_ENDIAN -Wall -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DAES_ASM -DVPAES_ASM -DBSAES_ASM -DWHIRLPOOL_ASM -DGHASH_ASM -DECP_NISTZ256_ASM\nThe 'numbers' are in 1000s of bytes per second processed.\ntype             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes\naes-128-cfb     847216.79k   850770.86k   853712.05k   859912.39k   854565.80k\n```\n\nThe encryption performance in kcptun is as fast as in openssl library(if not faster).\n\n#### Quantum Resistance\nQuantum Resistance, also known as quantum-secure, post-quantum, or quantum-safe cryptography, refers to cryptographic algorithms that can withstand potential code-breaking attempts by quantum computer.\nIn kcptun, after v20240701, it adapts [QPP](https://github.com/xtaci/qpp) based on [Kuang's Quantum Permutation Pad](https://epjquantumtechnology.springeropen.com/articles/10.1140/epjqt/s40507-022-00145-y) for quantum-resistent communication.\n![da824f7919f70dd1dfa3be9d2302e4e0](https://github.com/xtaci/kcptun/assets/2346725/7894f5e3-6134-4582-a9fe-e78494d2e417)\n\nTo enable QPP in kcptun, you need to set: \n```\n   --QPP                enable Quantum Permutation Pads(QPP)\n   --QPPCount value     the prime number of pads to use for QPP: The more pads you use, the more secure the encryption. Each pad requires 256 bytes. (default: 61)\n```\nYour could also specify\n```json\n     \"qpp\":true,\n     \"qpp-count\":61,\n```\nin your client and server side json file. These 2 parameters must be identical on both sides.\n\n1. To achieve **Effective Quantum-Resistance,**, specify at least **211** bytes in  the `-key` parameter and ensure `-QPPCount` is no less than **7**.\n2. Make sure `-QPPCount` is **COPRIME（互素）** to **8**(or simply set to a **PRIME** number) like: \n```101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199... ```\n\n#### Memory Control\n\nRouters, mobile devices are susceptible to memory consumption; by setting GOGC environment(eg: GOGC=20) will make the garbage collector to recycle faster.\nReference: https://blog.golang.org/go15gc\n\nPrimary memory allocation are done from a global buffer pool *xmit.Buf*, in kcp-go, when we need to allocate some bytes, we can get from that pool, and a *fixed-capacity* 1500 bytes(mtuLimit) will be returned, the *rx queue*, *tx queue* and *fec queue* all receive bytes from there, and they will return the bytes to the pool after using to prevent *unnecessary zer0ing* of bytes. \nThe pool mechanism maintained a *high watermark* for slice objects, these *in-flight* objects from the pool will survive from the periodical garbage collection, meanwhile the pool kept the ability to return the memory to runtime if in idle, `-sndwnd`,`-rcvwnd`,`-ds`, `-ps`, these parameters affect this *high watermark*, the larger the value, the bigger the memory consumption will be.\n\n`-smuxbuf` also affects the maximum memory consumption, this parameter maintains a subtle balance between *concurrency* and *resource*, you can increase this value(default 4MB) to boost concurrency if you have many clients to serve and you get a powerful server at the same time, and also you can decrease this value to serve only 1 or 2 clients and hope this program can run under some embedded SoC system with limited memory and only you can access. (Notice that the `-smuxbuf` value is not proportional to concurrency, you need to test.)\n\n\n#### Compression\n\nkcptun has builtin snappy algorithms for compressing streams:\n\n> Snappy is a compression/decompression library. It does not aim for maximum\n> compression, or compatibility with any other compression library; instead,\n> it aims for very high speeds and reasonable compression. For instance,\n> compared to the fastest mode of zlib, Snappy is an order of magnitude faster\n> for most inputs, but the resulting compressed files are anywhere from 20% to\n> 100% bigger.\n\n> Reference: http://google.github.io/snappy/\n\nCompression may save bandwidth for **PLAINTEXT** data, it's quite useful for specific scenarios as cross-datacenter replications, by compressing the redologs in dbms or kafka-like message queues and then transfer the data streams across the continent can be much faster.\n\nCompression is enabled by default, you can disable it by setting ```-nocomp``` on **BOTH** KCP Client & KCP Server **MUST** be **IDENTICAL**.\n\n#### SNMP\n\n```go\ntype Snmp struct {\n    BytesSent        uint64 // bytes sent from upper level\n    BytesReceived    uint64 // bytes received to upper level\n    MaxConn          uint64 // max number of connections ever reached\n    ActiveOpens      uint64 // accumulated active open connections\n    PassiveOpens     uint64 // accumulated passive open connections\n    CurrEstab        uint64 // current number of established connections\n    InErrs           uint64 // UDP read errors reported from net.PacketConn\n    InCsumErrors     uint64 // checksum errors from CRC32\n    KCPInErrors      uint64 // packet input errors reported from KCP\n    InPkts           uint64 // incoming packets count\n    OutPkts          uint64 // outgoing packets count\n    InSegs           uint64 // incoming KCP segments\n    OutSegs          uint64 // outgoing KCP segments\n    InBytes          uint64 // UDP bytes received\n    OutBytes         uint64 // UDP bytes sent\n    RetransSegs      uint64 // accumulated retransmitted segments\n    FastRetransSegs  uint64 // accumulated fast retransmitted segments\n    EarlyRetransSegs uint64 // accumulated early retransmitted segments\n    LostSegs         uint64 // number of segs inferred as lost\n    RepeatSegs       uint64 // number of segs duplicated\n    FECRecovered     uint64 // correct packets recovered from FEC\n    FECErrs          uint64 // incorrect packets recovered from FEC\n    FECParityShards  uint64 // FEC segments received\n    FECShortShards   uint64 // number of data shards that's not enough for recovery\n}\n```\n\nSending a `SIGUSR1` signal to KCP Client or KCP Server will dump SNMP information to console, just like `/proc/net/snmp`. You can use this information to do fine-grained tuning.\n\n### Manual Control\n\nhttps://github.com/skywind3000/kcp/blob/master/README.en.md#protocol-configuration\n\n`-mode manual -nodelay 1 -interval 20 -resend 2 -nc 1`\n\nLow-level KCP configuration can be altered by using manual mode like above, make sure you really **UNDERSTAND** what these means before doing **ANY** manual settings.\n\n\n### Identical parameters\n\nThese parameters **MUST** be **IDENTICAL** on **BOTH** side:\n\n1. -key\n1. -crypt\n1. -nocomp\n1. -smuxver\n\n### References\n\n1. https://github.com/skywind3000/kcp -- KCP - A Fast and Reliable ARQ Protocol.\n1. https://github.com/xtaci/kcp-go/ -- A Production-Grade Reliable-UDP Library for golang\n1. https://github.com/klauspost/reedsolomon -- Reed-Solomon Erasure Coding in Go.\n1. https://en.wikipedia.org/wiki/Differentiated_services -- DSCP.\n1. http://google.github.io/snappy/ -- A fast compressor/decompressor.\n1. https://www.backblaze.com/blog/reed-solomon/ -- Reed-Solomon Explained.\n1. http://www.qualcomm.cn/products/raptorq -- RaptorQ Forward Error Correction Scheme for Object Delivery.\n1. https://en.wikipedia.org/wiki/PBKDF2 -- Key stretching.\n1. http://blog.appcanary.com/2016/encrypt-or-compress.html -- Should you encrypt or compress first?\n1. https://github.com/hashicorp/yamux -- Connection multiplexing library.\n1. https://tools.ietf.org/html/rfc6937 -- Proportional Rate Reduction for TCP.\n1. https://tools.ietf.org/html/rfc5827 -- Early Retransmit for TCP and Stream Control Transmission Protocol (SCTP).\n1. http://http2.github.io/ -- What is HTTP/2?\n1. http://www.lartc.org/ -- Linux Advanced Routing & Traffic Control\n1. https://en.wikipedia.org/wiki/Noisy-channel_coding_theorem -- Noisy channel coding theorem\n1. https://zhuanlan.zhihu.com/p/53849089 -- kcptun开发小记\n\n\n（注意：我没有任何社交网站的账号，请小心骗子。）\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "build-release-cgo.sh",
          "type": "blob",
          "size": 7.974609375,
          "content": "#!/bin/bash\n\nBUILD_DIR=$(dirname \"$0\")/build\nmkdir -p $BUILD_DIR\ncd $BUILD_DIR\n\nsum=\"sha1sum\"\n\nif [ \"$GO111MODULE\" != \"on\" ]; then\n\techo \"GO111MODULE is off\"\nelse\n\techo \"GO111MODULE is on\"\nfi \n\necho \"Prerequisites for cross-compiling were written in build-release.sh\"\n\n# required library for cross-compiling\n# sudo apt-get install -y automake autogen build-essential ca-certificates   gcc-5-arm-linux-gnueabi g++-5-arm-linux-gnueabi libc6-dev-armel-cross   gcc-5-arm-linux-gnueabihf g++-5-arm-linux-gnueabihf libc6-dev-armhf-cross gcc-5-aarch64-linux-gnu g++-5-aarch64-linux-gnu libc6-dev-arm64-cross  gcc-5-mips-linux-gnu g++-5-mips-linux-gnu libc6-dev-mips-cross gcc-5-mipsel-linux-gnu g++-5-mipsel-linux-gnu libc6-dev-mipsel-cross  gcc-5-mips64-linux-gnuabi64 g++-5-mips64-linux-gnuabi64 libc6-dev-mips64-cross  gcc-5-mips64el-linux-gnuabi64 g++-5-mips64el-linux-gnuabi64 libc6-dev-mips64el-cross  gcc-5-multilib g++-5-multilib gcc-mingw-w64 g++-mingw-w64 clang llvm-dev   libtool libxml2-dev uuid-dev libssl-dev swig openjdk-8-jdk pkg-config patch  make xz-utils cpio wget zip unzip p7zip git mercurial bzr texinfo help2man --no-install-recommends\n\n# if error message:\n#     /usr/include/linux/errno.h:1:23: fatal error: asm/errno.h: No such file or directory\n# try:\n#    ln -s /usr/include/asm-generic /usr/include/asm\n\nif ! hash sha1sum 2>/dev/null; then\n\tif ! hash shasum 2>/dev/null; then\n\t\techo \"I can't see 'sha1sum' or 'shasum'\"\n\t\techo \"Please install one of them!\"\n\t\texit\n\tfi\n\tsum=\"shasum\"\nfi\n\nUPX=false\nif hash upx 2>/dev/null; then\n\tUPX=true\nfi\n\nVERSION=`date -u +%Y%m%d`\nLDFLAGS=\"-X main.VERSION=$VERSION -s -w\"\nLDFLAGS_LINUX='-X main.VERSION='$VERSION' -s -w -linkmode \"external\" -extldflags \"-static\"'\nLDFLAGS_LINUX32='-X main.VERSION='$VERSION' -s -w -linkmode \"external\" -extldflags \"-static -m32 -L/usr/lib32\"'\necho \"-ldflag for linux/amd64:\" $LDFLAGS_LINUX\necho \"-ldflag for linux/386:\" $LDFLAGS_LINUX32\necho \"-ldflag for other:\" $LDFLAGS\n\necho \"=== Building ===\"\n\n# 386\nOSES=(linux windows)\nfor os in ${OSES[@]}; do\n\tsuffix=\"\"\n\tif [ \"$os\" == \"windows\" ]\n\tthen\n\t\tsuffix=\".exe\"\n\tfi\n\n\tif [ \"$os\" == \"linux\" ];then\n\t\tCC=gcc-5 CGO_ENABLED=1 GOOS=$os GOARCH=386 CGO_CFLAGS=\"-m32 -L/usr/lib32\" CGO_CXXFLAGS=\"-m32 -L/usr/lib32\" go build -ldflags \"$LDFLAGS_LINUX32\" -o client_${os}_386${suffix} github.com/xtaci/kcptun/client\n\t\tCC=gcc-5 CGO_ENABLED=1 GOOS=$os GOARCH=386 CGO_CFLAGS=\"-m32 -L/usr/lib32\" CGO_CXXFLAGS=\"-m32 -L/usr/lib32\" go build -ldflags \"$LDFLAGS_LINUX32\" -o server_${os}_386${suffix} github.com/xtaci/kcptun/server\n\telse \n\t\tCGO_ENABLED=0 GOOS=$os GOARCH=386 go build -ldflags \"$LDFLAGS\" -o client_${os}_386${suffix} github.com/xtaci/kcptun/client\n\t\tCGO_ENABLED=0 GOOS=$os GOARCH=386 go build -ldflags \"$LDFLAGS\" -o server_${os}_386${suffix} github.com/xtaci/kcptun/server\n\tfi\n\n\tif $UPX; then upx -9 client_${os}_386${suffix} server_${os}_386${suffix};fi\n\ttar -zcf kcptun-${os}-386-$VERSION.tar.gz client_${os}_386${suffix} server_${os}_386${suffix}\n\t$sum kcptun-${os}-386-$VERSION.tar.gz\ndone\n\n# AMD64 \nOSES=(linux darwin windows freebsd)\nfor os in ${OSES[@]}; do\n\tsuffix=\"\"\n\tif [ \"$os\" == \"windows\" ]\n\tthen\n\t\tsuffix=\".exe\"\n\tfi\n\n\tif [ \"$os\" == \"linux\" ];then\n\t\tCC=gcc-5 CGO_ENABLED=1 GOOS=$os GOARCH=amd64 go build -ldflags \"$LDFLAGS_LINUX\" -o client_${os}_amd64${suffix} github.com/xtaci/kcptun/client\n\t\tCC=gcc-5 CGO_ENABLED=1 GOOS=$os GOARCH=amd64 go build -ldflags \"$LDFLAGS_LINUX\" -o server_${os}_amd64${suffix} github.com/xtaci/kcptun/server\n\telse \n\t\tCGO_ENABLED=0 GOOS=$os GOARCH=amd64 go build -ldflags \"$LDFLAGS\" -o client_${os}_amd64${suffix} github.com/xtaci/kcptun/client\n\t\tCGO_ENABLED=0 GOOS=$os GOARCH=amd64 go build -ldflags \"$LDFLAGS\" -o server_${os}_amd64${suffix} github.com/xtaci/kcptun/server\n\tfi\n\n\tif $UPX; then upx -9 client_${os}_amd64${suffix} server_${os}_amd64${suffix};fi\n\ttar -zcf kcptun-${os}-amd64-$VERSION.tar.gz client_${os}_amd64${suffix} server_${os}_amd64${suffix}\n\t$sum kcptun-${os}-amd64-$VERSION.tar.gz\ndone\n\n# ARM-5\n#CC=arm-linux-gnueabi-gcc-5 GOOS=linux GOARCH=arm GOARM=5 CGO_ENABLED=1 CGO_CFLAGS=\"-march=armv5\" CGO_CXXFLAGS=\"-march=armv5\" go install std\nCC=arm-linux-gnueabi-gcc-5 CXX=arm-linux-gnueabi-g++-5 GOOS=linux GOARCH=arm GOARM=5 CGO_ENABLED=1 CGO_CFLAGS=\"-march=armv5\" CGO_CXXFLAGS=\"-march=armv5\" go build -ldflags \"$LDFLAGS_LINUX\"  -o client_linux_arm5  github.com/xtaci/kcptun/client\nCC=arm-linux-gnueabi-gcc-5 CXX=arm-linux-gnueabi-g++-5 GOOS=linux GOARCH=arm GOARM=5 CGO_ENABLED=1 CGO_CFLAGS=\"-march=armv5\" CGO_CXXFLAGS=\"-march=armv5\" go build -ldflags \"$LDFLAGS_LINUX\"  -o server_linux_arm5  github.com/xtaci/kcptun/server\nif $UPX; then upx -9 client_linux_arm5 server_linux_arm5;fi\ntar -zcf kcptun-linux-arm5-$VERSION.tar.gz client_linux_arm5 server_linux_arm5\n$sum kcptun-linux-arm5-$VERSION.tar.gz\n\n# ARM-6\n#CC=arm-linux-gnueabi-gcc-5 GOOS=linux GOARCH=arm GOARM=6 CGO_ENABLED=1 CGO_CFLAGS=\"-march=armv6\" CGO_CXXFLAGS=\"-march=armv6\" go install std\nCC=arm-linux-gnueabi-gcc-5 CXX=arm-linux-gnueabi-g++-5 GOOS=linux GOARCH=arm GOARM=6 CGO_ENABLED=1 CGO_CFLAGS=\"-march=armv6\" CGO_CXXFLAGS=\"-march=armv6\" go build -ldflags \"$LDFLAGS_LINUX\"  -o client_linux_arm6 github.com/xtaci/kcptun/client\nCC=arm-linux-gnueabi-gcc-5 CXX=arm-linux-gnueabi-g++-5 GOOS=linux GOARCH=arm GOARM=6 CGO_ENABLED=1 CGO_CFLAGS=\"-march=armv6\" CGO_CXXFLAGS=\"-march=armv6\" go build -ldflags \"$LDFLAGS_LINUX\"  -o server_linux_arm6 github.com/xtaci/kcptun/server\nif $UPX; then upx -9 client_linux_arm6 server_linux_arm6;fi\ntar -zcf kcptun-linux-arm6-$VERSION.tar.gz client_linux_arm6 server_linux_arm6\n$sum kcptun-linux-arm6-$VERSION.tar.gz\n\n# ARM-7\nARMS=(7)\n#CC=arm-linux-gnueabihf-gcc-5 GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=1 CGO_CFLAGS=\"-march=armv7-a\" CGO_CXXFLAGS=\"-march=armv7-a\" go install std\nCC=arm-linux-gnueabihf-gcc-5 CXX=arm-linux-gnueabihf-g++-5 GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=1 CGO_CFLAGS=\"-march=armv7-a -fPIC\" CGO_CXXFLAGS=\"-march=armv7-a -fPIC\" go build -ldflags \"$LDFLAGS_LINUX\"  -o client_linux_arm7  github.com/xtaci/kcptun/client\nCC=arm-linux-gnueabihf-gcc-5 CXX=arm-linux-gnueabihf-g++-5 GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=1 CGO_CFLAGS=\"-march=armv7-a -fPIC\" CGO_CXXFLAGS=\"-march=armv7-a -fPIC\" go build -ldflags \"$LDFLAGS_LINUX\"  -o server_linux_arm7  github.com/xtaci/kcptun/server\nif $UPX; then upx -9 client_linux_arm7 server_linux_arm7;fi\ntar -zcf kcptun-linux-arm7-$VERSION.tar.gz client_linux_arm7 server_linux_arm7\n$sum kcptun-linux-arm7-$VERSION.tar.gz\n\n# ARM64\nCC=aarch64-linux-gnu-gcc-5 CXX=aarch64-linux-gnu-g++-5 GOOS=linux GOARCH=arm64 CGO_ENABLED=1 go build -ldflags \"$LDFLAGS_LINUX\"  -o client_linux_arm64  github.com/xtaci/kcptun/client\nCC=aarch64-linux-gnu-gcc-5 CXX=aarch64-linux-gnu-g++-5 GOOS=linux GOARCH=arm64 CGO_ENABLED=1 go build -ldflags \"$LDFLAGS_LINUX\"  -o server_linux_arm64  github.com/xtaci/kcptun/server\nif $UPX; then upx -9 client_linux_arm64 server_linux_arm64*;fi\ntar -zcf kcptun-linux-arm64-$VERSION.tar.gz client_linux_arm64 server_linux_arm64\n$sum kcptun-linux-arm64-$VERSION.tar.gz\n\n#MIPS32LE\nCC=mipsel-linux-gnu-gcc-5 CXX=mipsel-linux-gnu-g++-5 GOOS=linux GOARCH=mipsle CGO_ENABLED=1 GOMIPS=softfloat go build -ldflags \"$LDFLAGS_LINUX\"  -o client_linux_mipsle github.com/xtaci/kcptun/client\nCC=mipsel-linux-gnu-gcc-5 CXX=mipsel-linux-gnu-g++-5 GOOS=linux GOARCH=mipsle CGO_ENABLED=1 GOMIPS=softfloat go build -ldflags \"$LDFLAGS_LINUX\"  -o server_linux_mipsle github.com/xtaci/kcptun/server\n\n#MIPS32\nCC=mips-linux-gnu-gcc-5 CXX=mips-linux-gnu-g++-5 GOOS=linux GOARCH=mips CGO_ENABLED=1 GOMIPS=softfloat go build -ldflags \"$LDFLAGS_LINUX\"  -o client_linux_mips github.com/xtaci/kcptun/client\nCC=mips-linux-gnu-gcc-5 CXX=mips-linux-gnu-g++-5 GOOS=linux GOARCH=mips CGO_ENABLED=1 GOMIPS=softfloat go build -ldflags \"$LDFLAGS_LINUX\"  -o server_linux_mips github.com/xtaci/kcptun/server\n\nif $UPX; then upx -9 client_linux_mips* server_linux_mips*;fi\ntar -zcf kcptun-linux-mipsle-$VERSION.tar.gz client_linux_mipsle server_linux_mipsle\ntar -zcf kcptun-linux-mips-$VERSION.tar.gz client_linux_mips server_linux_mips\n$sum kcptun-linux-mipsle-$VERSION.tar.gz\n$sum kcptun-linux-mips-$VERSION.tar.gz\n\necho \"=== Building Completed ===\"\n"
        },
        {
          "name": "build-release.sh",
          "type": "blob",
          "size": 5.1396484375,
          "content": "#!/usr/bin/env bash\n \nBUILD_DIR=$(dirname \"$0\")/build\nmkdir -p $BUILD_DIR\ncd $BUILD_DIR\n\nsum=\"sha1sum\"\nCOMPRESS=\"gzip\"\nif hash pigz 2>/dev/null; then\n    COMPRESS=\"pigz\"\nfi\n\nexport GO111MODULE=on\necho \"Setting GO111MODULE to\" $GO111MODULE\n\nif ! hash sha1sum 2>/dev/null; then\n    if ! hash shasum 2>/dev/null; then\n        echo \"I can't see 'sha1sum' or 'shasum'\"\n        echo \"Please install one of them!\"\n        exit\n    fi\n    sum=\"shasum\"\nfi\n\nUPX=false\nif hash upx 2>/dev/null; then\n    UPX=true\nfi\n\nVERSION=`date -u +%Y%m%d`\nLDFLAGS=\"-X main.VERSION=$VERSION -s -w\"\nGCFLAGS=\"\"\n\n# LOONG64\nOSES=(linux)\nfor os in ${OSES[@]}; do\n    env CGO_ENABLED=0 GOOS=$os GOARCH=loong64 go build -mod=vendor -ldflags \"$LDFLAGS\" -gcflags \"$GCFLAGS\" -o client_${os}_loong64${suffix} github.com/xtaci/kcptun/client\n    env CGO_ENABLED=0 GOOS=$os GOARCH=loong64 go build -mod=vendor -ldflags \"$LDFLAGS\" -gcflags \"$GCFLAGS\" -o server_${os}_loong64${suffix} github.com/xtaci/kcptun/server\n    if $UPX; then upx -9 client_${os}_loong64${suffix} server_${os}_loong64${suffix};fi\n    tar -cf kcptun-${os}-loong64-$VERSION.tar client_${os}_loong64${suffix} server_${os}_loong64${suffix}\n    ${COMPRESS} -f kcptun-${os}-loong64-$VERSION.tar\n    $sum kcptun-${os}-loong64-$VERSION.tar.gz\ndone\n\n# AMD64 \nOSES=(linux darwin windows freebsd)\nfor os in ${OSES[@]}; do\n    suffix=\"\"\n    if [ \"$os\" == \"windows\" ]\n    then\n        suffix=\".exe\"\n    fi\n    env CGO_ENABLED=0 GOOS=$os GOARCH=amd64 go build -mod=vendor -ldflags \"$LDFLAGS\" -gcflags \"$GCFLAGS\" -o client_${os}_amd64${suffix} github.com/xtaci/kcptun/client\n    env CGO_ENABLED=0 GOOS=$os GOARCH=amd64 go build -mod=vendor -ldflags \"$LDFLAGS\" -gcflags \"$GCFLAGS\" -o server_${os}_amd64${suffix} github.com/xtaci/kcptun/server\n    if $UPX; then upx -9 client_${os}_amd64${suffix} server_${os}_amd64${suffix};fi\n    tar -cf kcptun-${os}-amd64-$VERSION.tar client_${os}_amd64${suffix} server_${os}_amd64${suffix}\n    ${COMPRESS} -f kcptun-${os}-amd64-$VERSION.tar\n    $sum kcptun-${os}-amd64-$VERSION.tar.gz\ndone\n\n# 386\nOSES=(linux windows)\nfor os in ${OSES[@]}; do\n    suffix=\"\"\n    if [ \"$os\" == \"windows\" ]\n    then\n        suffix=\".exe\"\n    fi\n    env CGO_ENABLED=0 GOOS=$os GOARCH=386 go build -mod=vendor -ldflags \"$LDFLAGS\" -gcflags \"$GCFLAGS\" -o client_${os}_386${suffix} github.com/xtaci/kcptun/client\n    env CGO_ENABLED=0 GOOS=$os GOARCH=386 go build -mod=vendor -ldflags \"$LDFLAGS\" -gcflags \"$GCFLAGS\" -o server_${os}_386${suffix} github.com/xtaci/kcptun/server\n    if $UPX; then upx -9 client_${os}_386${suffix} server_${os}_386${suffix};fi\n    tar -cf kcptun-${os}-386-$VERSION.tar client_${os}_386${suffix} server_${os}_386${suffix}\n    ${COMPRESS} -f kcptun-${os}-386-$VERSION.tar\n    $sum kcptun-${os}-386-$VERSION.tar.gz\ndone\n\n# ARM\nARMS=(5 6 7)\nfor v in ${ARMS[@]}; do\n    env CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=$v go build -mod=vendor -ldflags \"$LDFLAGS\" -gcflags \"$GCFLAGS\" -o client_linux_arm$v  github.com/xtaci/kcptun/client\n    env CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=$v go build -mod=vendor -ldflags \"$LDFLAGS\" -gcflags \"$GCFLAGS\" -o server_linux_arm$v  github.com/xtaci/kcptun/server\n\n    if $UPX; then upx -9 client_linux_arm$v server_linux_arm$v;fi\n    tar -cf kcptun-linux-arm$v-$VERSION.tar client_linux_arm$v server_linux_arm$v\n    ${COMPRESS} -f kcptun-linux-arm$v-$VERSION.tar\n    $sum kcptun-linux-arm$v-$VERSION.tar.gz\ndone\n\n# ARM64\nOSES=(linux darwin windows)\nfor os in ${OSES[@]}; do\n    suffix=\"\"\n    if [ \"$os\" == \"windows\" ]\n    then\n        suffix=\".exe\"\n    fi\n    env CGO_ENABLED=0 GOOS=$os GOARCH=arm64 go build -mod=vendor -ldflags \"$LDFLAGS\" -gcflags \"$GCFLAGS\" -o client_${os}_arm64${suffix} github.com/xtaci/kcptun/client\n    env CGO_ENABLED=0 GOOS=$os GOARCH=arm64 go build -mod=vendor -ldflags \"$LDFLAGS\" -gcflags \"$GCFLAGS\" -o server_${os}_arm64${suffix} github.com/xtaci/kcptun/server\n    if $UPX; then upx -9 client_${os}_arm64${suffix} server_${os}_arm64${suffix};fi\n    tar -cf kcptun-${os}-arm64-$VERSION.tar client_${os}_arm64${suffix} server_${os}_arm64${suffix}\n    ${COMPRESS} -f kcptun-${os}-arm64-$VERSION.tar\n    $sum kcptun-${os}-arm64-$VERSION.tar.gz\ndone\n\n#MIPS32LE\nenv CGO_ENABLED=0 GOOS=linux GOARCH=mipsle GOMIPS=softfloat go build -mod=vendor -ldflags \"$LDFLAGS\" -gcflags \"$GCFLAGS\" -o client_linux_mipsle github.com/xtaci/kcptun/client\nenv CGO_ENABLED=0 GOOS=linux GOARCH=mipsle GOMIPS=softfloat go build -mod=vendor -ldflags \"$LDFLAGS\" -gcflags \"$GCFLAGS\" -o server_linux_mipsle github.com/xtaci/kcptun/server\nenv CGO_ENABLED=0 GOOS=linux GOARCH=mips GOMIPS=softfloat go build -mod=vendor -ldflags \"$LDFLAGS\" -gcflags \"$GCFLAGS\" -o client_linux_mips github.com/xtaci/kcptun/client\nenv CGO_ENABLED=0 GOOS=linux GOARCH=mips GOMIPS=softfloat go build -mod=vendor -ldflags \"$LDFLAGS\" -gcflags \"$GCFLAGS\" -o server_linux_mips github.com/xtaci/kcptun/server\n\nif $UPX; then upx -9 client_linux_mips* server_linux_mips*;fi\ntar -cf kcptun-linux-mipsle-$VERSION.tar client_linux_mipsle server_linux_mipsle\n${COMPRESS} -f kcptun-linux-mipsle-$VERSION.tar\n$sum kcptun-linux-mipsle-$VERSION.tar.gz\n\ntar -zcf kcptun-linux-mips-$VERSION.tar client_linux_mips server_linux_mips\n${COMPRESS} -f kcptun-linux-mips-$VERSION.tar\n$sum kcptun-linux-mips-$VERSION.tar.gz\n"
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "download.sh",
          "type": "blob",
          "size": 1.6396484375,
          "content": "#!/usr/bin/env bash\n\n# Detect the operating system type and architecture\nOS=$(uname | tr '[:upper:]' '[:lower:]')\nARCH=$(uname -m)\n\n# Map architecture to the corresponding string used in the release names\ncase \"$ARCH\" in\n    x86_64 | amd64)\n        ARCH=\"amd64\"\n        ;;\n    i386 | i686)\n        ARCH=\"386\"\n        ;;\n    armv5*)\n        ARCH=\"arm5\"\n        ;;\n    armv6*)\n        ARCH=\"arm6\"\n        ;;\n    armv7*)\n        ARCH=\"arm7\"\n        ;;\n    aarch64 | arm64)\n        ARCH=\"arm64\"\n        ;;\n    mips)\n        ARCH=\"mips\"\n        ;;\n    mipsle)\n        ARCH=\"mipsle\"\n        ;;\n    *)\n        echo \"Unsupported architecture: $ARCH\"\n        exit 1\n        ;;\nesac\n\n# Determine the operating system\ncase \"$OS\" in\n    linux | darwin | freebsd | windows)\n        OS=\"$OS\"\n        ;;\n    *)\n        echo \"Unsupported OS: $OS\"\n        exit 1\n        ;;\nesac\n\n# Get the latest version number and remove the 'v' prefix\nLATEST_VERSION=$(curl -s https://api.github.com/repos/xtaci/kcptun/releases/latest | grep '\"tag_name\":' | sed -E 's/.*\"v([^\"]+)\".*/\\1/')\n\n# Construct the download URL\nDOWNLOAD_URL=\"https://github.com/xtaci/kcptun/releases/download/v$LATEST_VERSION/kcptun-$OS-$ARCH-$LATEST_VERSION.tar.gz\"\n\n# Display the download URL\necho \"Constructed download URL: $DOWNLOAD_URL\"\n\n# Download the file\necho \"Downloading kcptun $LATEST_VERSION for $OS/$ARCH...\"\ncurl -L -O $DOWNLOAD_URL\n\n# Extract the filename from the URL\nFILENAME=$(basename $DOWNLOAD_URL)\n\n# Check if the download was successful\nif [ $? -eq 0 ]; then\n    echo \"Download complete: $FILENAME\"\nelse\n    echo \"Download failed. Please check if the OS/ARCH combination is supported or if the URL is correct.\"\nfi\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.02734375,
          "content": "module github.com/xtaci/kcptun\n\nrequire (\n\tgithub.com/fatih/color v1.18.0\n\tgithub.com/golang/snappy v0.0.4\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/urfave/cli v1.22.16\n\tgithub.com/xtaci/kcp-go/v5 v5.6.18\n\tgithub.com/xtaci/qpp v1.1.18\n\tgithub.com/xtaci/smux v1.5.33\n\tgithub.com/xtaci/tcpraw v1.2.31\n\tgolang.org/x/crypto v0.31.0\n)\n\nrequire (\n\tgithub.com/coreos/go-iptables v0.7.0 // indirect\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.5 // indirect\n\tgithub.com/google/gopacket v1.1.19 // indirect\n\tgithub.com/klauspost/cpuid/v2 v2.2.8 // indirect\n\tgithub.com/klauspost/reedsolomon v1.12.4 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n\tgithub.com/templexxx/cpu v0.1.1 // indirect\n\tgithub.com/templexxx/xorsimd v0.4.3 // indirect\n\tgithub.com/tjfoc/gmsm v1.4.1 // indirect\n\tgolang.org/x/net v0.29.0 // indirect\n\tgolang.org/x/sys v0.28.0 // indirect\n)\n\n//replace github.com/xtaci/tcpraw => /home/xtaci/tcpraw\n\ngo 1.22.3\n\ntoolchain go1.23.0\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 13.61328125,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/toml v1.4.0/go.mod h1:ukJfTF/6rtPPRCnwkur4qwRxa8vTRFBF0uk2lLoLwho=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/coreos/go-iptables v0.7.0 h1:XWM3V+MPRr5/q51NuWSgU0fqMad64Zyxs8ZUoMsamr8=\ngithub.com/coreos/go-iptables v0.7.0/go.mod h1:Qe8Bv2Xik5FyTXwgIbLAnv2sWSBmvWdFETJConOQ//Q=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.5 h1:ZtcqGrnekaHpVLArFSe4HK5DoKx1T0rq2DwVB0alcyc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.5/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/fatih/color v1.18.0 h1:S8gINlzdQ840/4pfAwic/ZE0djQEH3wM94VfqLTZcOM=\ngithub.com/fatih/color v1.18.0/go.mod h1:4FelSpRwEGDpQ12mAdzqdOukCy4u8WUtOY6lkT/6HfU=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/snappy v0.0.4 h1:yAGX7huGHXlcLOEtBnF4w7FQwA26wojNCwOYAEhLjQM=\ngithub.com/golang/snappy v0.0.4/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/gopacket v1.1.19 h1:ves8RnFZPGiFnTS0uPQStjwru6uO6h+nlr9j6fL7kF8=\ngithub.com/google/gopacket v1.1.19/go.mod h1:iJ8V8n6KS+z2U1A8pUwu8bW5SyEMkXJB8Yo/Vo+TKTo=\ngithub.com/klauspost/cpuid/v2 v2.2.8 h1:+StwCXwm9PdpiEkPyzBXIy+M9KUb4ODm0Zarf1kS5BM=\ngithub.com/klauspost/cpuid/v2 v2.2.8/go.mod h1:Lcz8mBdAVJIBVzewtcLocK12l3Y+JytZYpaMropDUws=\ngithub.com/klauspost/reedsolomon v1.12.4 h1:5aDr3ZGoJbgu/8+j45KtUJxzYm8k08JGtB9Wx1VQ4OA=\ngithub.com/klauspost/reedsolomon v1.12.4/go.mod h1:d3CzOMOt0JXGIFZm1StgkyF14EYr3xneR2rNWo7NcMU=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/templexxx/cpu v0.1.1 h1:isxHaxBXpYFWnk2DReuKkigaZyrjs2+9ypIdGP4h+HI=\ngithub.com/templexxx/cpu v0.1.1/go.mod h1:w7Tb+7qgcAlIyX4NhLuDKt78AHA5SzPmq0Wj6HiEnnk=\ngithub.com/templexxx/xorsimd v0.4.3 h1:9AQTFHd7Bhk3dIT7Al2XeBX5DWOvsUPZCuhyAtNbHjU=\ngithub.com/templexxx/xorsimd v0.4.3/go.mod h1:oZQcD6RFDisW2Am58dSAGwwL6rHjbzrlu25VDqfWkQg=\ngithub.com/tjfoc/gmsm v1.4.1 h1:aMe1GlZb+0bLjn+cKTPEvvn9oUEBlJitaZiiBwsbgho=\ngithub.com/tjfoc/gmsm v1.4.1/go.mod h1:j4INPkHWMrhJb38G+J6W4Tw0AbuN8Thu3PbdVYhVcTE=\ngithub.com/urfave/cli v1.22.16 h1:MH0k6uJxdwdeWQTwhSO42Pwr4YLrNLwBtg1MRgTqPdQ=\ngithub.com/urfave/cli v1.22.16/go.mod h1:EeJR6BKodywf4zciqrdw6hpCPk68JO9z5LazXZMn5Po=\ngithub.com/xtaci/kcp-go/v5 v5.6.18 h1:7oV4mc272pcnn39/13BB11Bx7hJM4ogMIEokJYVWn4g=\ngithub.com/xtaci/kcp-go/v5 v5.6.18/go.mod h1:75S1AKYYzNUSXIv30h+jPKJYZUwqpfvLshu63nCNSOM=\ngithub.com/xtaci/lossyconn v0.0.0-20190602105132-8df528c0c9ae h1:J0GxkO96kL4WF+AIT3M4mfUVinOCPgf2uUWYFUzN0sM=\ngithub.com/xtaci/lossyconn v0.0.0-20190602105132-8df528c0c9ae/go.mod h1:gXtu8J62kEgmN++bm9BVICuT/e8yiLI2KFobd/TRFsE=\ngithub.com/xtaci/qpp v1.1.18 h1:FyULigD8/msXdxj9AjOFQg3/Z/tGz4574n21shZ6SZo=\ngithub.com/xtaci/qpp v1.1.18/go.mod h1:DI0dcoZ+qu4ze5C0hkt8grLfTVqBiZ3hXTimGyg5TTI=\ngithub.com/xtaci/smux v1.5.32 h1:IDdOaJDf8jk5NHKlTw05ge+0rdMjnXg3cwHkss5Pbcw=\ngithub.com/xtaci/smux v1.5.32/go.mod h1:OMlQbT5vcgl2gb49mFkYo6SMf+zP3rcjcwQz7ZU7IGY=\ngithub.com/xtaci/smux v1.5.33 h1:xosoZt0AUZdIXEB6z09kt1bge+l1L8wzMtJdPB6GAPI=\ngithub.com/xtaci/smux v1.5.33/go.mod h1:OMlQbT5vcgl2gb49mFkYo6SMf+zP3rcjcwQz7ZU7IGY=\ngithub.com/xtaci/tcpraw v1.2.31 h1:i9mXzejnGJdGi0DpVKUn19Hq202/sHOJt0kObEwuE/U=\ngithub.com/xtaci/tcpraw v1.2.31/go.mod h1:T1blYD2EDkLneb+HtxddnzX38SoC9BG537EhkXeaT2k=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20201012173705-84dcc777aaee/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20200302205851-738671d3881b/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201010224723-4f7140c49acb/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.29.0 h1:5ORfpBpCs4HzDYoodCDBbwHzdR5UrLBZ3sOnUJmFoHo=\ngolang.org/x/net v0.29.0/go.mod h1:gLkgy8jTGERgjzMic6DS9+SP0ajcu6Xu3Orq/SpETg0=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.31.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\n"
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        },
        {
          "name": "std",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}