{
  "metadata": {
    "timestamp": 1736568056181,
    "page": 193,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "earthly/earthly",
      "stars": 11562,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".buildkite",
          "type": "tree",
          "content": null
        },
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".earthly_version_flag_overrides",
          "type": "blob",
          "size": 0.24609375,
          "content": "referenced-save-only,use-copy-include-patterns,earthly-version-arg,use-cache-command,use-host-command,check-duplicate-images,use-copy-link,parallel-load,shell-out-anywhere,new-platform,no-tar-build-output,wait-block,use-visited-upfront-hash-collection\n"
        },
        {
          "name": ".earthlyignore",
          "type": "blob",
          "size": 0.0361328125,
          "content": "build\nearthfile2llb/parser/*.go\n.git\n"
        },
        {
          "name": ".gitbook.yaml",
          "type": "blob",
          "size": 4.767578125,
          "content": "root: ./docs/\n\nstructure:\n    readme: README.md\n    summary: SUMMARY.md\n\nredirects:\n    earthfile: earthfile/earthfile.md\n    the-earthly-command/earthly-command: earthly-command/earthly-command.md\n    guides: ./README.md\n    guides/advanced-local-caching: caching/caching-in-earthfiles.md\n    docs/guides/advanced-local-caching: caching/caching-in-earthfiles.md\n    guides/auth: guides/auth.md\n    guides/cache: caching/managing-cache.md\n    docs/guides/cache: caching/managing-cache.md\n    docs/guides/cloud-secrets: cloud/cloud-secrets.md\n    guides/cloud-secrets: cloud/cloud-secrets.md\n    guides/debugging: guides/debugging.md\n    guides/docker-in-earthly: guides/docker-in-earthly.md\n    guides/integration: guides/integration.md\n    guides/multi-platform: guides/multi-platform.md\n    guides/target-ref: guides/importing.md\n    docs/guides/target-ref: guides/importing.md\n    guides/udc: guides/functions.md\n    docs/guides/udc: guides/functions.md\n    earthly-config: earthly-config/earthly-config.md\n    ci-integration: ci-integration/overview.md\n    earth-command: earthly-command/earthly-command.md\n    earth-config: earthly-config/earthly-config.md\n    installation: ./README.md\n    guides/pushing-and-pulling-images-with-cloud-providers: guides/auth.md\n    guides/pushing-and-pulling-images-with-cloud-providers/pushing-images-to-ecr: guides/registries/aws-ecr.md\n    guides/pushing-and-pulling-images-with-cloud-providers/pushing-images-to-gcr: guides/registries/gcp-artifact-registry.md\n    guides/pushing-and-pulling-images-with-cloud-providers/pushing-images-to-acr: guides/registries/azure-acr.md\n    guides/configuring-registries/aws-ecr: guides/registries/aws-ecr.md\n    guides/configuring-registries/azure-acr: guides/registries/azure-acr.md\n    guides/configuring-registries/gcp-artifact-registry: guides/registries/gcp-artifact-registry.md\n    guides/configuring-registries/self-signed: guides/registries/self-signed.md\n    examples/gh-actions-integration: ci-integration/guides/gh-actions-integration.md\n    examples/circle-integration: ci-integration/guides/circle-integration.md\n    examples/codebuild-integration: ci-integration/guides/codebuild-integration.md\n    examples/kubernetes: ci-integration/guides/kubernetes.md\n    examples/jenkins: ci-integration/guides/jenkins.md\n    alt-installation: alt-installation/alt-installation.md\n    guides/basics: basics/basics.md\n    basics: basics/basics.md\n    best-practices: guides/best-practices.md\n    guides/ci-integration: ci-integration/overview.md\n    docs/ci-integration: ci-integration/overview.md\n    ci-examples/ci-examples: ci-integration/overview.md\n    examples/examples: examples/examples.md\n    examples/ci-examples: ci-integration/overview.md\n    examples/ci-examples/gh-actions-integration: ci-integration/guides/gh-actions-integration.md\n    examples/ci-examples/circle-integration: ci-integration/guides/circle-integration.md\n    examples/ci-examples/codebuild-integration: ci-integration/guides/codebuild-integration.md\n    ci-examples/gh-actions-integration: ci-integration/guides/gh-actions-integration.md\n    ci-examples/circle-integration: ci-integration/guides/circle-integration.md\n    ci-examples/codebuild-integration: ci-integration/guides/codebuild-integration.md\n    basics/part-2-executing-a-build: basics/part-2-running-the-build.md\n    basics/part-3-detailed-explanation: basics/part-1b-detailed-explanation.md\n    basics/part-4-adding-dependencies-in-the-mix: basics/part-3-adding-dependencies.md\n    basics/part-6-reduce-code-duplication: basics/part-5-reducing-code-duplication.md\n    basics/part-2-detailed-explanation: basics/part-1b-detailed-explanation.md\n    basics/part-3-adding-dependencies-in-the-mix: basics/part-3-adding-dependencies.md\n    basics/part-4-efficient-caching-of-dependencies: basics/part-4-caching-dependencies.md\n    basics/part-5-reduce-code-duplication: basics/part-5-reducing-code-duplication.md\n    examples/go: examples/examples.md\n    examples/other-earthfile-examples: examples/examples.md\n    examples/other-earthfile-examples/earthly: examples/examples.md\n    examples/other-earthfile-examples/monorepo: examples/examples.md\n    examples/other-earthfile-examples/multirepo: examples/examples.md\n    examples/per-language-earthfile-examples: examples/examples.md\n    examples/per-language-earthfile-examples/cpp: examples/examples.md\n    examples/per-language-earthfile-examples/go: examples/examples.md\n    examples/per-language-earthfile-examples/java: examples/examples.md\n    examples/per-language-earthfile-examples/js: examples/examples.md\n    examples/per-language-earthfile-examples/python: examples/examples.md\n    guides/configuring-registries: guides/auth.md\n    guides/shared-cache: ./caching/caching-via-registry.md\n    docs/remote-caching: ./caching/caching-via-registry.md\n    earthly-cloud/satellites: cloud/satellites.md\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.111328125,
          "content": "/build/\n/examples/go/build/\n*.tokens\n*.interp\n.antlr/\n.env\n.arg\n.secret\n.vscode\n.idea\n.tmp-earthly-out*\n.DS_Store\n"
        },
        {
          "name": ".golangci.yaml",
          "type": "blob",
          "size": 0.01953125,
          "content": "run:\n  timeout: 10m\n"
        },
        {
          "name": ".vale",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 143.82421875,
          "content": "# Earthly Changelog\n\nAll notable changes to [Earthly](https://github.com/earthly/earthly) will be documented in this file.\n\n## Unreleased\n\n## v0.8.15 - 2024-07-12\n\n### Added\n- Ability to automatically install BYOC from a Terraform deployment, or manually.\n\n### Fixed\n- Link-scoped devices will now properly autodetect MTU settings. \n- Better error reporting when cross-target copy references a file that does not exist. [#4221](https://github.com/earthly/earthly/issues/4221)\n- AWS credentials are propogated into `WITH DOCKER`. [#4241](https://github.com/earthly/earthly/issues/4241)\n\n### Changed\n- Allow using `localhost` as a remote address when using satellites.\n\n### Additional Info\n- This release has no changes to buildkit\n\n## v0.8.14 - 2024-06-10\n\n### Fixed\n- Autocompletion failed to expand ARG names when referencing a target containing a `~`.\n- Improved `--ticktock` performance of cache key computation and GC; the improvement is most noticeable with many small RUN commands.\n\n### Changed\n- Renamed experimental `github` command to `gha`, and introduced new `ls` and `remove` subcommands.\n\n### Removed\n- Removed `PIPELINE` & `TRIGGER` keywords and associated code relating to formerly deprecated Earthly CI.\n\n### Additional Info\n- This release includes changes to buildkit\n\n## v0.8.13 - 2024-05-28\n\n### Fixed\n- `RUN --no-cache` doesn't always work. [#2593](https://github.com/earthly/earthly/issues/2593)\n- ANSI escape codes are now removed from GitHub Action specific output. [#4131](https://github.com/earthly/earthly/issues/4131)\n- Specifying the `--ticktock` option will no longer show a buildkit version mismatch warning.\n- The `--ticktock` flag is now used when running the bootstrap command.\n- Caching issue when the experimental `--ticktock` buildkit scheduler is enabled.\n\n### Changed\n- Removed deprecated non-streaming log uploading mechanism; log sharing is now only supported by the streaming-upload mechanism. The hidden `--logstream` and `--logstream-upload` flags have been removed.\n\n### Additional Info\n- This release includes changes to buildkit\n\n## v0.8.12 - 2024-05-23\n\n### Added\n- An experimental modification of the buildkit scheduler, which attempts to solve the `inconsistent graph state` error, which can be enabled locally with `earthly --ticktock ...`.\n\n### Changed\n- The BYOC (bring your own cloud) commands have been updated to reflect server-side API changes.\n\n### Fixed\n- The `--buildkit-container-name` flag was incorrectly being ignored when `--no-buildkit-update` was set.\n\n### Additional Info\n- This release includes changes to buildkit\n\n## v0.8.11 - 2024-05-16\n\n### Added\n- Support for using HTTP(S) proxies when connecting to satellites.\n\n### Fixed\n- Backwards compatability issue where `WITH DOCKER` would fail with `EARTHLY_DOCKERD_CACHE_DATA: parameter not set` when using an older version of the earthly in combination with a satellite running v0.8.10.\n\n### Additional Info\n- This release includes changes to buildkit\n\n## v0.8.10 - 2024-05-14\n\n### Added\n- New Github Actions Workflow commands integration `--github-annotations` flag or GITHUB_ACTIONS=true env. [#2189](https://github.com/earthly/earthly/issues/2189)\n- Added a new `--oidc` flag to `RUN` command which allows authentication to AWS via OIDC. Enable with the `VERSION --run-with-aws-oidc` feature flag. [#3804](https://github.com/earthly/earthly/issues/3804)\n- Experimental `WITH DOCKER --cache-id=<key>` feature, which will cache the contents of the docker data root, resulting in faster `--load` and `--pull` execution. Enabled with the `VERSION --docker-cache` feature flag. [#3399](https://github.com/earthly/earthly/issues/3399)\n- New `SAVE IMAGE --without-earthly-labels` feature, which will prevent any `dev.earthly.*` labels from being saved to the image. Enable with the `VERSION --allow-without-earthly-labels` feature flag. Thanks to [@3manuek](https://github.com/3manuek) for the contribution!\n\n### Fixed\n- `WITH DOCKER` load time calculation. [#3485](https://github.com/earthly/earthly/issues/3485)\n- The earthly cli was not correctly setting the exit status on failures when executing a `RUN` on a satellite which reached the max execution time limit.\n- Self-hosted satellite connection issue.\n\n### Changed\n- Earthly will now use source link format when displaying errors, e.g. `<path>:<line>:<col>` rather than `<path> line <line>:<col>`.\n- Improved error messages for cases where a shell is required to run a command such as `IF`, `FOR`, etc.\n- Earthly will now show a warning when earthly anonymously connects to a registry (which increases the chance of being rate-limited).\n\n### Additional Info\n- This release includes changes to buildkit\n\n## v0.8.9 - 2024-04-24\n\n### Fixed\n\n- `BUILD --auto-skip` was recording failed steps as complete, which would lead to them being skipped on subsequent runs. [#4054](https://github.com/earthly/earthly/issues/4054)\n\n### Additional Info\n- This release has no changes to buildkit\n\n## v0.8.8 - 2024-04-17\n\n### Added\n\n- New experimental wildcard-based copy, e.g. `COPY ./services/*+artifact/* .` which would invoke `COPY` for `./services/foo+artifact`, and `./services/bar+artifact` (assuming two services foo and bar, both having a `artifact` target in their respective Earthfile). Enable with the `VERSION --wildcard-copy` feature flag. [#3966](https://github.com/earthly/earthly/issues/3966).\n- New built-in `ARG`s - `EARTHLY_GIT_AUTHOR_EMAIL` and `EARTHLY_GIT_AUTHOR_NAME` will contain the author email and author name respectively. Enable with the `VERSION --git-author-email-name-args` feature flag.\n- New `--raw-output` flag available on `RUN` that outputs line without target name. Enable with `VERSION --raw-output`. [#3713](https://github.com/earthly/earthly/issues/3713)\n\n### Changed\n\n- `EARTHLY_GIT_AUTHOR` built-in `ARG` will now contain both name and email, when enabled with the `VERSION --git-author-email-name-args` feature flag. Previously it only contained the email. [#3822](https://github.com/earthly/earthly/issues/3822)\n\n### Fixed\n\n- Make `LET`/`SET` commands block parallel commands such as `BUILD` until the former are processed, similar to the behavior of `ARG`. [#3997](https://github.com/earthly/earthly/issues/3997)\n- `LET`/`SET` commands were not properly handled with the use of Auto-skip. [#3996](https://github.com/earthly/earthly/issues/3996)\n\n### Additional Info\n- This release has no changes to buildkit\n\n## v0.8.7 - 2024-04-03\n\n### Added\n\n- Warning log when resolving remote references using a git image that doesn't match Buildkit's architecture.\n- New experimental `--exec-stats-summary=<path>` cli flag, which will display a summary of memory and cpu stats when earthly exits.\n- A notice is now displayed when unnecessary feature flags are set (but already enabled by default by the VERSION number). Thanks to [@danqixu](https://github.com/danqixu) for the contribution! [#3641](https://github.com/earthly/earthly/issues/3641)\n- A warning is displayed if the local buildkit image architecture does not match the host architecture. [#3937](https://github.com/earthly/earthly/issues/3937)\n\n### Fixed\n\n- Warning logs during HTTP retries are only displayed in `--debug` mode.\n- The HOST command will now expand variables. Thanks to [@pbecotte](https://github.com/pbecotte) for the contribution! [#1743](https://github.com/earthly/earthly/issues/1743)\n- runc has been updated to 1.1.12 in the buildkit fork\n\n### Additional Info\n- This release includes changes to buildkit\n\n## v0.8.6 - 2024-03-18\n\n### Added\n\n- Ability to set arbitrary attributes which certain registries require to support explicit remote caching (via the `earthly --remote-cache` flag). [#3714](https://github.com/earthly/earthly/issues/3714) and [#3868](https://github.com/earthly/earthly/issues/3868)\n\n### Fixed\n\n- Fixed an issue in Auto-skip where a `+base` target's ARGs were not accounted for when calculating the cache. [#3895](https://github.com/earthly/earthly/issues/3895)\n\n### Additional Info\n- This release has no changes to buildkit\n\n## v0.8.5 - 2024-03-11\n\n### Added\n\n- Added `--aws` flag to `RUN` command which makes AWS environment variables or ~/.aws available. Enable with the `VERSION --run-with-aws` feature flag. [#3803](https://github.com/earthly/earthly/issues/3803)\n- Added `--allow-privileged` flag to `FROM DOCKERFILE` command. Enable with the `VERSION --allow-privileged-from-dockerfile` feature flag. Thanks to [@dustyhorizon](https://github.com/dustyhorizon) for the contribution! [#3706](https://github.com/earthly/earthly/issues/3706)\n\n### Fixed\n\n- Fixes an issue where wildcard `BUILD`'s are invoked from a relative directory (e.g., an `Earthfile` containing `BUILD ./*+test` invoked with `earthly ./rel-dir+target`). [#3840](https://github.com/earthly/earthly/issues/3840)\n- `--pass-args` will no longer pass builtin args, which would result in `value cannot be specified for built-in build arge errors. [#3775](https://github.com/earthly/earthly/issues/3775)\n- Fixes a parsing issue with `BUILD` flag arguments and wildcard targets [#3862](https://github.com/earthly/earthly/issues/3862)\n- `BUILD --auto-skip` was silently ignored when the feature flag (`VERSION --build-auto-skip`) was missing [#3870](https://github.com/earthly/earthly/issues/3870)\n- Fix an issue where `COPY --if-exists` would fail if the non-existing directory includes a wildcard. [#3875](https://github.com/earthly/earthly/issues/3875)\n- Fixes an issue with passing the correct org value to Logstream which resulted in missing logs in the web builds view (https://cloud.earthly.dev/your-org/builds).\n- Rename `UDC` to `FUNCTION` in hint when a secret is not found.\n\n### Additional Info\n- This release includes changes to buildkit\n\n## v0.8.4 - 2024-02-21\n\n### Added\n\n- The internal `dockerd-wrapper.sh` script, which is used to implement `WITH DOCKER`, will execute `/usr/share/earthly/dockerd-wrapper-pre-script`, if present, prior to starting the\n  inner dockerd process. This can be used to configure options that depend on the host's kernel at run-time.\n- Auto-skip can now be used directly on `BUILD` commands with `BUILD --auto-skip`. [#3581](https://github.com/earthly/earthly/issues/3581)\n\n### Changed\n\n- Satellite `rm` requires a `--force` flag if it's running. This should help protect users from accidental deletes.\n\n### Fixed\n\n- Fixes an issue with the registry proxy (used for faster image & artifact exporting) on Docker Desktop for Windows/WSL. [#3769](https://github.com/earthly/earthly/issues/3769)\n- Fixes a problem with cache IDs not being expanded. For example: `CACHE --id $MY_ARG` was not using the assigned value of `$MY_ARG`.\n\n### Additional Info\n- This release includes changes to buildkit\n\n## v0.8.3 - 2024-01-31\n\n### Fixed\n\n- `EARTHLY_GIT_REFS` was incorrectly returning all references which contained the commit rather than pointed to the current commit. This also increases performance of looking up the branches. [#3752](https://github.com/earthly/earthly/issues/3752)\n- Fixes an issue where `earthly account login --token` was leading to partially created auth config files. [#3761](https://github.com/earthly/earthly/issues/3761)\n\n### Additional Info\n- This release includes changes to buildkit\n\n## v0.8.2 - 2024-01-25\n\n### Added\n\n- Added a `--force` flag to the `satellite update` command, which forces a satellite to sleep before starting the update process. This may forcibly kill ongoing builds currently running on the satellite.\n\n### Changed\n\n- Changed the default buildkit cache size to be adaptively set to 20GB, which is then clamped between the range of 10%-55% of the disk size.\n  This logic can expressed as `min(55%, max(10%, 20GB))`.\n- Satellites are now put to sleep before updating via `earthly sat update <satellite-name>`.\n\n### Fixed\n\n- Fixed an intermittent issue with the registry proxy support container failing immediately on Mac. [#3740](https://github.com/earthly/earthly/issues/3740)\n- Fixed a problem with parsing empty results when cleaning up old registry proxy support containers on Mac.\n- Fixed a case where a suggested command would incorrectly contain both `--interative` and `--ci`. [#3746](https://github.com/earthly/earthly/issues/3746)\n- Disabled the registry proxy server when Earthly is run from within a container. [#3736](https://github.com/earthly/earthly/issues/3736)\n\n### Additional Info\n- This release has no changes to buildkit\n\n## v0.8.1 - 2024-01-23\n\n### Added\n\n- Added a new `--disable-remote-registry-proxy` cli flag, which can be used to disable the remote registry proxy, which is used by earthly when performing a `SAVE IMAGE`\n  command with a satellite / remote buildkit instance. This will cause earthly to use the slower tar-based loading of docker images. [#3736](https://github.com/earthly/earthly/issues/3736)\n- A new warning if Earthly is configured with a cache size less than 10GB; running with a small cache size may lead to unexpected cache misses.\n\n### Additional Info\n- This release has no changes to buildkit\n\n## v0.8.0 - 2024-01-22\n\nThis version promotes a number of features that have been previously in Experimental and Beta status. To make use of\nthe features in this version you need to declare `VERSION 0.8` at the top of your Earthfile.\n\n**Migrating from 0.7**\n\nIf you are using Earthly 0.7, follow the following steps to migrate:\n\n1. If you are still using `VERSION 0.5`, upgrade those Earthfiles to `VERSION 0.6` or `VERSION 0.7`.\n2. Upgrade your Earthly binary to 0.8 in CI and across your team. The Earthly 0.8 binary can run both `VERSION 0.6` and `VERSION 0.7` Earthfiles (but `VERSION 0.5` support has been dropped).\n3. Once everyone is using the Earthly 0.8 binary, upgrade your Earthfiles one by one to `VERSION 0.8`. It is ok to have a mix of `VERSION 0.6`, `VERSION 0.7` and `VERSION 0.8` Earthfiles in the same project. Earthly handles that gracefully. See changes below for information on backwards incompatible changes when migrating from `VERSION 0.7` to `VERSION 0.8`.\n\nThis process helps manage the backward breaking changes with minimal disruption.\n\n**Summary**\n\nDeclaring `VERSION 0.8` is equivalent to\n\n```\nVERSION \\\n  --arg-scope-and-set \\\n  --cache-persist-option \\\n  --git-refs \\\n  --global-cache \\\n  --no-network \\\n  --pass-args \\\n  --use-docker-ignore \\\n  --use-function-keyword \\\n  --use-visited-upfront-hash-collection \\\n  0.7\n```\n\nFor more information on the individual Earthfile feature flags see the [Earthfile version-specific features page](https://docs.earthly.dev/docs/earthfile/features).\n\nIt should be noted that some of these features break backwards compatibility. See below.\n\n### Changed\n\n- Redeclaring an `ARG` in the same scope as a previous declaration is now an error.\n- `ARG`s inside of targets will no longer have their default value overridden by global `ARG`s.\n- Declaring a `CACHE ...` in a target will no longer be copied to children targets when referenced via a `FROM +...`; to persist the contents of the cache, it is now required to use the `CACHE --persist ...` flag.\n- The `COMMAND` keyword has been renamed to `FUNCTION`.\n\n### Added\n\n- `LET` - Allows declaring a local variable. This command works similarly to `ARG` except that it cannot be overridden from the CLI. `LET` variables are allowed to shadow `ARG` variables, which allows you to promote an `ARG` to a local variable so that it may be used with `SET`.\n- `SET` - a new command that allows changing the value of variables declared with `LET`.\n- Outputting images from a remote runner has improved performance as it no longer transfers layers that are already present locally.\n- [Auto-skip](https://docs.earthly.dev/v/earthly-0.8/docs/caching/caching-in-earthfiles#3.-auto-skip) has been promoted to *beta* status.\n- `RUN --network=none` allows running a command without network access.\n- `.dockerignore` files are now used in `FROM DOCKERFILE` targets.\n- `DO --pass-args`, `BUILD --pass-args` etc allow passing all build arguments to external Earthfiles.\n- `CACHE --id=...` and `RUN --mount type=cache,id=...` allows setting a custom cache mount ID, thus allowing sharing cache mounts globally across different targets.\n- New satellite sizes: 2xlarge, 3xlarge, 4xlarge\n- New experimental wildcard-based builds, e.g. `BUILD ./services/*+test` which would call `./services/foo+test`, and `./services/bar+test` (assuming two services foo and bar, both having a `test` target in their respective Earthfile) [#3582](https://github.com/earthly/earthly/issues/3582).\n\n### Removed\n\n- `VERSION 0.5` is now obsolete. Declaring `VERSION 0.5` is no longer supported, and will now raise an error.\n\n### Fixed\n\n- Parallelism is improved when running the same target with different arguments in certain cases (e.g. the target uses `WITH DOCKER`).\n- Fixed a log sharing upload-resumption bug\n- Fixed multiple issues with the lexer failing to parse certain characters in shell command substitution (`$()`) and single quoted strings.\n  - Some escaped characters, like `\\#`, were failing to parse when used inside shell expressions. Example: `$(echo \"a#b#c\" | cut -f2 -d\\#)` [#3475](https://github.com/earthly/earthly/issues/3475)\n  - Some characters, like `#`, were failing to parse when used inside single-quoted strings: Example: `'this is a # string'` [#1280](https://github.com/earthly/earthly/issues/1280)\n- Fixed an issue where some escaped `ARG` shell expressions were being incorrectly preprocessed. Example: `$(echo \"\\\"\")` became `$(echo \"\"\")` [#3131](https://github.com/earthly/earthly/issues/3131)\n- The `--pass-args` feature was not passing active arguments which were set via a default value.\n- `SAVE ARTIFACT --if-exists` was not saving files based on a wildcard glob pattern. [#1679](https://github.com/earthly/earthly/issues/1679)\n- `BUILD` was not expanding `--platform` argument values.\n\n### Additional Info\n- This release includes changes to buildkit\n\n## v0.8.0-rc2 - 2024-01-09\n\nThis version promotes a number of features that have been previously in Experimental and Beta status. To make use of\nthe features in this version you need to declare `VERSION 0.8` at the top of your Earthfile.\n\n**Migrating from 0.7**\n\nIf you are using Earthly 0.7, follow the following steps to migrate:\n\n1. If you are still using `VERSION 0.5`, upgrade those Earthfiles to `VERSION 0.6` or `VERSION 0.7`.\n2. Upgrade your Earthly binary to 0.8 in CI and across your team. The Earthly 0.8 binary can run both `VERSION 0.6` and `VERSION 0.7` Earthfiles (but `VERSION 0.5` support has been dropped).\n3. Once everyone is using the Earthly 0.8 binary, upgrade your Earthfiles one by one to `VERSION 0.8`. It is ok to have a mix of `VERSION 0.6`, `VERSION 0.7` and `VERSION 0.8` Earthfiles in the same project. Earthly handles that gracefully. See changes below for information on backwards incompatible changes when migrating from `VERSION 0.7` to `VERSION 0.8`.\n\nThis process helps manage the backward breaking changes with minimal disruption.\n\n**Summary**\n\nDeclaring `VERSION 0.8` is equivalent to\n\n```\nVERSION \\\n  --arg-scope-and-set \\\n  --cache-persist-option \\\n  --git-refs \\\n  --global-cache \\\n  --no-network \\\n  --pass-args \\\n  --use-docker-ignore \\\n  --use-function-keyword \\\n  --use-visited-upfront-hash-collection \\\n  0.7\n```\n\nFor more information on the individual Earthfile feature flags see the [Earthfile version-specific features page](https://docs.earthly.dev/docs/earthfile/features).\n\nIt should be noted that some of these features break backwards compatibility. See below.\n\n### Changed\n\n- Redeclaring an `ARG` in the same scope as a previous declaration is now an error.\n- `ARG`s inside of targets will no longer have their default value overridden by global `ARG`s.\n- It is no longer possible to override a global ARG when calling a target.\n- Declaring a `CACHE ...` in a target will no longer be copied to children targets when referenced via a `FROM +...`; to persist the contents of the cache, it is now required to use the `CACHE --persist ...` flag.\n- The `COMMAND` keyword has been renamed to `FUNCTION`.\n\n### Added\n\n- `LET` - Allows declaring a local variable. This command works similarly to `ARG` except that it cannot be overridden from the CLI. `LET` variables are allowed to shadow `ARG` variables, which allows you to promote an `ARG` to a local variable so that it may be used with `SET`.\n- `SET` - a new command that allows changing the value of variables declared with `LET`.\n- Outputting images from a remote runner has improved performance as it no longer transfers layers that are already present locally.\n- [Auto-skip](https://docs.earthly.dev/v/earthly-0.8/docs/caching/caching-in-earthfiles#3.-auto-skip) has been promoted to *beta* status.\n- `RUN --network=none` allows running a command without network access.\n- `.dockerignore` files are now used in `FROM DOCKERFILE` targets.\n- `DO --pass-args`, `BUILD --pass-args` etc allow passing all build arguments to external Earthfiles.\n- `CACHE --id=...` and `RUN --mount type=cache,id=...` allows setting a custom cache mount ID, thus allowing sharing cache mounts globally across different targets.\n- New satellite sizes: 2xlarge, 3xlarge, 4xlarge\n- New experimental wildcard-based builds, e.g. `BUILD ./services/*+test` which would call `./services/foo+test`, and `./services/bar+test` (assuming two services foo and bar, both having a `test` target in their respective Earthfile) [#3582](https://github.com/earthly/earthly/issues/3582).\n\n### Removed\n\n- `VERSION 0.5` is now obsolete. Declaring `VERSION 0.5` is no longer supported, and will now raise an error.\n\n### Fixed\n\n- Parallelism is improved when running the same target with different arguments in certain cases (e.g. the target uses `WITH DOCKER`).\n- Fixed a log sharing upload-resumption bug\n\n### Additional Info\n- This release includes changes to buildkit\n\n## v0.8.0-rc1 - 2024-01-03\n\nThis version promotes a number of features that have been previously in Experimental and Beta status. To make use of\nthe features in this version you need to declare `VERSION 0.8` at the top of your Earthfile.\n\n**Migrating from 0.7**\n\nIf you are using Earthly 0.7, follow the following steps to migrate:\n\n1. If you are still using `VERSION 0.5`, upgrade those Earthfiles to `VERSION 0.6` or `VERSION 0.7`.\n2. Upgrade your Earthly binary to 0.8 in CI and across your team. The Earthly 0.8 binary can run both `VERSION 0.6` and `VERSION 0.7` Earthfiles (but `VERSION 0.5` support has been dropped).\n3. Once everyone is using the Earthly 0.8 binary, upgrade your Earthfiles one by one to `VERSION 0.8`. It is ok to have a mix of `VERSION 0.6`, `VERSION 0.7` and `VERSION 0.8` Earthfiles in the same project. Earthly handles that gracefully. See changes below for information on backwards incompatible changes when migrating from `VERSION 0.7` to `VERSION 0.8`.\n\nThis process helps manage the backward breaking changes with minimal disruption.\n\n**Summary**\n\nDeclaring `VERSION 0.8` is equivalent to\n\n```\nVERSION \\\n  --arg-scope-and-set \\\n  --cache-persist-option \\\n  --git-refs \\\n  --global-cache \\\n  --no-network \\\n  --pass-args \\\n  --use-docker-ignore \\\n  --use-function-keyword \\\n  --use-visited-upfront-hash-collection \\\n  0.7\n```\n\nFor more information on the individual Earthfile feature flags see the [Earthfile version-specific features page](https://docs.earthly.dev/docs/earthfile/features).\n\nIt should be noted that some of these features break backwards compatibility. See below.\n\n### Changed\n\n- Redeclaring an `ARG` in the same scope as a previous declaration is now an error.\n- `ARG`s inside of targets will no longer have their default value overridden by global `ARG`s.\n- It is no longer possible to override a global ARG when calling a target.\n- Declaring a `CACHE ...` in a target will no longer be copied to children targets when referenced via a `FROM +...`; to persist the contents of the cache, it is now required to use the `CACHE --persist ...` flag.\n- The `COMMAND` keyword has been renamed to `FUNCTION`.\n\n### Added\n\n- `LET` - Allows declaring a local variable. This command works similarly to `ARG` except that it cannot be overridden from the CLI. `LET` variables are allowed to shadow `ARG` variables, which allows you to promote an `ARG` to a local variable so that it may be used with `SET`.\n- `SET` - a new command that allows changing the value of variables declared with `LET`.\n- Outputting images from a remote runner has improved performance as it no longer transfers layers that are already present locally.\n- [Auto-skip](https://docs.earthly.dev/v/earthly-0.8/docs/caching/caching-in-earthfiles#3.-auto-skip) has been promoted to *beta* status.\n- `RUN --network=none` allows running a command without network access.\n- `.dockerignore` files are now used in `FROM DOCKERFILE` targets.\n- `DO --pass-args`, `BUILD --pass-args` etc allow passing all build arguments to external Earthfiles.\n- `CACHE --id=...` and `RUN --mount type=cache,id=...` allows setting a custom cache mount ID, thus allowing sharing cache mounts globally across different targets.\n\n### Removed\n\n- `VERSION 0.5` is now obsolete. Declaring `VERSION 0.5` is no longer supported, and will now raise an error.\n\n### Fixed\n\n- Parallelism is improved when running the same target with different arguments in certain cases (e.g. the target uses `WITH DOCKER`).\n\n### Additional Info\n- This release includes changes to buildkit\n\n## v0.7.23 - 2023-12-18\n\n### Added\n- Auto-skip (*experimental*) - a feature that allows you to skip large parts of a build in certain situations, especially suited for monorepos. For more information see [the auto-skip section from Caching in Earthfiles](https://docs.earthly.dev/docs/caching/caching-in-earthfiles#auto-skip).\n- A warning when a `COPY` destination includes a tilde (~). Related to [#1789](https://github.com/earthly/earthly/issues/1789).\n- A hint message to suggest the usage of `-i` flag to debug the build when a RUN command fails.\n- `start-interval` flag to `HEALTHCHECK` command for dockerfile parity [#3409](https://github.com/earthly/earthly/issues/3409).\n- A verbose message indicating which authentication providers are used during a build.\n- `ssh_command` config option which can be used to override the ssh command that is used by `git` when connecting to an ssh-based repository. Thanks to [@weaversam8](https://github.com/weaversam8) for the contribution!\n\n### Fixed\n- Limit the number of deprecation warnings when using `COMMAND` instead of `FUNCTION` keyword.\n- Fixed an error which stated `VERSION 0.0` is a valid Earthfile version.\n\n### Changed\n- Changed the color used to print metadata values (such as ARGs values) in the build log to Faint Blue.\n- Updated default alpine/git image to v2.40.1.\n- When creating an auth token, an existing token will no longer be overwritten by default. To overwrite, the `--overwrite` flag should be used.\n\n### Additional Info\n- This release includes changes to buildkit\n\n## v0.7.22 - 2023-11-27\n\n### Added\n- A new experimental `earthly --exec-stats` flag, which displays per-target execution stats such as total CPU and memory usage.\n- A new experimental `earthly billing view` command to get information about the organization billing plan.\n- Messages informing used build minutes during a build.\n- Help message when a build fails due to a missing referenced cloud secret.\n\n### Fixed\n- Remove redundant verbose error messages that were not different from messages that were already being printed.\n- Fixed `failed to sign challenge` errors when attempting to login using an ed25519 key with the 1Password ssh-agent. [#3366](https://github.com/earthly/earthly/issues/3366)\n\n### Changed\n- Final error messages for executions without a known target will be displayed without `_unknown *failed* |` prefix. and instead use `Error: ` as prefix more consistently.\n- Failing `RUN` commands under `LOCALLY` will display the same format of error message for `RUN` without `LOCALLY` [#3356](https://github.com/earthly/earthly/issues/3356).\n- Log sharing link will be printed last, even in case of a build error.\n- Help message after a build error will be printed in color.\n- Use dedicated logstream failure category for param related error.\n- An authentication attempt with an expired auth token will result in a `auth token expired` error instead of `unauthorized`.\n- A successful authentication with an auth token will display a warning with time left before token expires if it's 14 days or under.\n- The command `earthly registry` will attempt to use the selected org if no org is specified.\n- Clarify error messages when failing to pass secrets to a build.\n- Provide information on how to get more build minutes when a build fails due to missing minutes.\n- Provide information on how to increase the max number of allowed satellites when failing to launch a satellite.\n- `CACHE` mounts will no longer depend on the contents of `ARG`s, and instead will be limited to the target name.\n- Child targets will no longer receive the contents of mounted `CACHE` volumes defined in the parent target; this change can be enabled with `VERSION --cache-persist-option`. [#3509](https://github.com/earthly/earthly/issues/3509)\n- Improved memory usage related to log messages by no longer pre-allocating log buffers; this is most noticeable for really large Earthfiles with lots of different targets.\n- Updated buildkit with upstream changes up to 3d50b97793391d81d7bc191d7c5dd5361d5dadca.\n- Improved speed of `SAVE IMAGE` exports when using a remote buildkit instance (e.g. satellite) from a MacOS host; this can be enabled with the `--use-remote-registry` option.\n\n### Additional Info\n- This release includes changes to buildkit\n\n## v0.7.21 - 2023-10-24\n\n### Added\n- The new ARG `EARTHLY_GIT_REFS` will contain the references to the current git commit, this ARG must be enabled with the `VERSION --git-refs` feature flag. [#2735](https://github.com/earthly/earthly/issues/2735)\n- A new `--force-certificate-generation` flag for bootstrapping, which will force the generation of self signed TLS certificates even when the `--no-buildkit` flag is set.\n\n### Fixed\n- Fixed reduced parallelism regression which occurred when the target is the same but has different args -- can be enabled with `VERSION --use-visited-upfront-hash-collection` [#2377](https://github.com/earthly/earthly/issues/2377)\n- `prune --age` did not support `d` (for days) suffix, even thought `earthly --help` said it did [#3401](https://github.com/earthly/earthly/issues/3401)\n- `buildkit scheduler error: return leaving incoming open` which occured during deduplication of opperations within buildkit; cherry-picked 100d3cb6b6903be50f7a3e5dba193515aa9530fa from upstream buildkit repo. [#2957](https://github.com/earthly/earthly/issues/2957)\n- Changed `WITH DOCKER` to pull images in parallel [#2351](https://github.com/earthly/earthly/issues/2351)\n\n### Changed\n- Registry proxy: Use lower-level TCP streaming [#2351](https://github.com/earthly/earthly/pull/3317)\n\n### Additional Info\n- This release includes changes to buildkit\n\n## v0.7.20 - 2023-10-03\n\n### Added\n- Support for `mode` in mount cache [#3278](https://github.com/earthly/earthly/issues/3278).\n- Support for `mode` in CACHE commands [#3290](https://github.com/earthly/earthly/pull/3290).\n- Experimental support for shared/global caches (cache `id` is no longer scoped per Earthfile) [#1129](https://github.com/earthly/earthly/issues/1129). Note that this is feature-flagged, and only changed when `VERSION --global-cache 0.7` is defined.\n\n### Fixed\n- A regression where URLs will not always get shorter when used as a prefix. Partially addresses [#3200](https://github.com/earthly/earthly/issues/3200).\n- If a build fails because of `qemu` missing, earthly will display a proper hint to install it [#3200](https://github.com/earthly/earthly/issues/3200).\n- Removed erroneous error-message which said error: 0 errors occured [#3306](https://github.com/earthly/earthly/pull/3306).\n- A race condition when exiting interactive debugger mode resulting in confusing errors [#3200](https://github.com/earthly/earthly/issues/3200).\n- Docker auto-install script failures related to attempts to read from tty, while verifying docker's pgp key [#3324](https://github.com/earthly/earthly/pull/3324).\n- Issue affecting pulling images in Podman [#2471](https://github.com/earthly/earthly/issues/2471).\n- A `panic: send on closed channel` error would sometimes occur during shutdown of the logstream [#3325](https://github.com/earthly/earthly/pull/3325).\n\n### Changed\n- Some error messages at the end of an execution will only be displayed in verbose mode (`earthly -V ...`), e.g. `Error: build target: build main: failed to solve:`... [#3200](https://github.com/earthly/earthly/issues/3200)\n- `GIT CLONE` URLs will only be printed once as part of a prefix, e.g. `+my-clone-target(https://g/e/earthly) | --> GIT CLONE (--branch ) https://github.com/earthly/earthly`\n- Clarify errors in interactive debugger so that they won't be confused with the build errors [#3200](https://github.com/earthly/earthly/issues/3200).\n- The `WITH DOCKER` auto-install script will now pass the `--no-tty` option to `gpg` [#3288](https://github.com/earthly/earthly/issues/3288).\n\n### Additional Info\n- This release includes changes to buildkit\n\n## v0.7.19 - 2023-09-20\n\n### Added\n- Added \"dev.earthly.*\" LABELS to saved images, for example `dev.earthly.version` will be set to `v0.7.19` (or whatever version of earthly is used) [#3247](https://github.com/earthly/earthly/issues/3247).\n- Added option to verbose print known_hosts to make it easier to debug git related commands [#3234](https://github.com/earthly/earthly/issues/3234).\n\n### Fixed\n- When a project based secret is not found, the name of the secret will now be displayed along with the \"not found\" error.\n\n### Changed\n- Log sharing will now stream logs as your build is running (rather than uploading logs when build execution completes).\n- Satellite reserve calls will now retry on error [#3255](https://github.com/earthly/earthly/issues/3255).\n- Display warning when TLS is disabled.\n\n### Additional Info\n- This release has no changes to buildkit\n\n## v0.7.18 - 2023-09-18 (aborted release/not recommended)\n<!--changelog-parser-ignore-start-->\nNote: This release was aborted due to a regression in the log sharing functionality\n<!--changelog-parser-ignore-end-->\n\n### Added\n- Added \"dev.earthly.*\" LABELS to saved images, for example `dev.earthly.version` will be set to `v0.7.18` (or whatever version of earthly is used) [#3247](https://github.com/earthly/earthly/issues/3247).\n- Added option to verbose print known_hosts to make it easier to debug git related commands [#3234](https://github.com/earthly/earthly/issues/3234).\n\n### Fixed\n- When a project based secret is not found, the name of the secret will now be displayed along with the \"not found\" error.\n\n### Changed\n- Refactor console output code (e.g. removed redundant output, prepared code for a future streaming log uploads... coming soon).\n- Display warning when TLS is disabled.\n\n## v0.7.17 - 2023-08-30\n\n### Added\n- Added a `--pass-arg` flag that can be used with `BUILD`, `FROM`, `COPY`, `WITH DOCKER --load`, or `DO`, which will pass all build arguments to external Earthfiles. [#1891](https://github.com/earthly/earthly/issues/1891)\n\n## v0.7.16 - 2023-08-28\n\n### Fixed\n- Fixed a cgroup v2 related bug that affected systemd-based images (such as kind) from being run via `WITH DOCKER`. [#3159](https://github.com/earthly/earthly/issues/3159)\n\n### Changed\n- Removed redundant output when parts of builds are re-used; the `--verbose` flag will still display the output.\n- Calling `earthly secret set <path>` (when run interactively) will now prompt for a single-line secret if no other flags are given.\n- fixed bug in `earthly registry setup` which was waiting for an end of file (eof) rather than newline, when prompting for a password.\n\n### Added\n- Added additional error message output when buildkit scheduller errors occur (in order to help debug the ongoing [2957](https://github.com/earthly/earthly/issues/2957) issue).\n\n## v0.7.15 - 2023-08-04\n\n### Fixed\n- Fixed a bug in `WITH DOCKER` which prevented the use of newer versions of docker. [#3164](https://github.com/earthly/earthly/issues/3164)\n\n## v0.7.14 - 2023-07-31\n\n### Changed\n- Update buildkit (contains upstream changes up to 687091bb6c8aaa0185cdc570c4db3db533f329d0).\n- Use `HTTPS_PROXY` env when connecting to earhly cloud API.\n\n## v0.7.13 - 2023-07-26\n\n### Added\n- `earthly account list-tokens` now shows the last time a token was used\n- Experimental command `earthly init` to initialize an Earthfile in a project (currently supporting only golang projects)\n\n### Fixed\n- Fixed a bug, where the command to create tokens with a set expiration failed.\n- Long pauses at the end of builds, which were characterized by apparent freezes or delays with the message `Waiting on Buildkit...`.\n- `earthly account create-token` no longer panics when parsing expiration date\n- `earthly account login` could change the active user when the JWT expired and an SSH key existed for a different user; now earthly will either refresh the JWT or error\n\n### Changed\n- Setting env vars like  `FORCE_COLOR`, or `EARTHLY_FULL_TARGET` to `0`, `false`, `FALSE`, or `` (an empty-string) will no longer force the color, use any other value like `1`, `true`, or `yesplease`.\n- `earthly org list` now shows the currently selected org\n\n## v0.7.12 - 2023-07-17\n\n### Added\n- warning if acquiring file-lock takes longer than 3 seconds.\n\n### Changed\n- improved error message when a 429 too many requests rate limit error occurs.\n- `earthly sat ls -a` shows last accessed time\n- improved output for listing auth tokens\n\n### Fixed\n- make use of org from earthly config when using satellite commands.\n\n## v0.7.12-rc1 - 2023-07-13\n\n### Added\n- warning if acquiring file-lock takes longer than 3 seconds.\n\n### Changed\n- improved error message when a 429 too many requests rate limit error occurs.\n- `earthly sat ls -a` shows last accessed time\n\n### Fixed\n- make use of org from earthly config when using satellite commands.\n\n## v0.7.11 - 2023-07-06\n\n### Added\n- `global.org` configuration value to set a default org for all `earthly` commands that require it.\n- `earthly org select` and `earthly org unselect` commands, as shortcuts to set a default organization in the `earthly` config file.\n\n### Changed\n- Removed the default size in satellite launch (the default size is now determined by the backend when not provided) [#3057](https://github.com/earthly/earthly/issues/3057)\n- Deprecated the satellite org configuration value. It uses the new global configuration value.\n\n## v0.7.10 - 2023-07-05\n\n### Changed\n- Removed the default size in satellite launch (the default size is now determined by the backend when not provided) [#3057](https://github.com/earthly/earthly/issues/3057)\n- Earthly cloud organization auto-detection has been deprecated and should now be explicitly set with the `--org` flag or with the `EARTHLY_ORG` environment variable.\n- Buildkit has been updated to include upstream changes up to cdf28d6fff9583a0b173c62ac9a28d1626599d3b.\n\n### Fixed\n- Updated the podman auth provider to better understand podman `auth.json` locations. [#3038](https://github.com/earthly/earthly/issues/3038)\n- Fixed our aggregated authprovider ignoring the cloud authprovider when a project is set after the first creds lookup [#3058](https://github.com/earthly/earthly/issues/3058)\n\n## v0.7.9 - 2023-06-22\n\n### Changed\n- The command `docker-build` now also supports passing multiple platforms using a comma (e.g `--platform linux/amd64,linux/arm64`)\n- Increased temporary lease duration of buildkit's history queue to prevent unknown history in blob errors under high cpu load. [#3000](https://github.com/earthly/earthly/issues/3000)\n- Performing an `earthly account logout` will keep you logged out -- earthly will no longer attempt an auto-login via ssh-agent (use `earthly account login` to log back in).\n\n### Fixed\n- Fixed a bug in satellite update command which was incorrectly changing satellites to medium size.\n- Fixed support for being authenticated with multiple registries when using the cloud-based `earthly registry` feature. [#3010](https://github.com/earthly/earthly/issues/3010)\n- Fixed `WITH DOCKER` auto install script when using latest (bookworm) version.\n\n### Added\n- Buildkit logs now include version and revision.\n- Satellite name autocompletion\n\n## v0.7.8 - 2023-06-07\n\n### Added\n- Add a new command `docker-build` to build a docker image using a Dockerfile without using an Earthfile, locally or on a satellite.\n\n### Changed\n- `FROM DOCKERFILE` will use a `.dockerignore` file when using a build context from the host system and both `.earthlyignore` and `.earthignore` do not exist. Enable with `VERSION --use-docker-ignore 0.7`.\n\n### Fixed\n- Fixed upstream race condition bug in buildkit, which resulted in `failed to solve: unknown blob sha256:<...> in history` errors. [#3000](https://github.com/earthly/earthly/issues/3000)\n\n## v0.7.7 - 2023-06-01\n\n### Added\n- The new ARG `EARTHLY_CI_RUNNER` indicates whether the current build is executed in Earthly CI. Enable with `VERSION --earthly-ci-runner-arg 0.7`.\n\n### Changed\n- Updated buildkit up to 60d134bf7 and fsutil up to 9e7a6df48576; this includes a buildkit fix for 401 Unauthorized errors. [#2973](https://github.com/earthly/earthly/issues/2973)\n- Enabled `GIT_LFS_SKIP_SMUDGE=1` when pulling git repos (to avoid pulling in large files initially).\n\n### Fixed\n- The earthly docker image incorrectly showed `dev-main` under the embedded buildkit version.\n\n## v0.7.6 - 2023-05-23\n\n### Added\n- Better error messages when git opperations fail.\n- Added a `runc-ps` script under the earthly-buildkitd container to make it easier to see what processes are running.\n\n### Fixed\n- The builtin 'docker compose' (rather than `docker-compose` script) is now used when using the `WITH DOCKER` command under alpine 3.18 or greater.\n- Fixed context timeout value overflow when connecting to a remote buildkit instance.\n\n## v0.7.5 - 2023-05-10\n\n### Changed\n- Remote BuildKit will use TLS by default.\n- Deprecation warning: Secret IDs naming scheme should follow the ARG naming scheme; i.e. a letter followed by alphanumeric characters or underscores. [#2883](https://github.com/earthly/earthly/issues/2883)\n- Secrets take precedence over ARGs of the same name. [#2931](https://github.com/earthly/earthly/issues/2931)\n\n### Added\n- Experimental support for performing a `git lfs pull --include=<path>` when referencing a remote target on the cli, when used with the new `--git-lfs-pull-include` flag. [#2992](https://github.com/earthly/earthly/pull/2922)\n\n### Fixed\n- `SAVE IMAGE <img>` was incorrectly pushed when earthly was run with the `--push` cli flag (this restores the requirement that images that are pushed must be defined with `SAVE IMAGE --push <img>`). [#2923](https://github.com/earthly/earthly/issues/2923)\n- Incorrect global ARG values when chaining multiple DO commands together. [#2920](https://github.com/earthly/earthly/issues/2920)\n- Build args autocompletion under artifact mode.\n\n## v0.7.4 - 2023-04-12\n\n### Changed\n- Updated the github ssh-rsa public key in the pre-populated buildkitd known_hosts entries.\n\n## v0.7.3 - 2023-04-12\n\n### Added\n- A host of changes to variables under the `--arg-scope-and-set` feature flag:\n  - Redeclaring an `ARG` in the same scope as a previous declaration is now an error.\n  - `ARG`s inside of targets will no longer have their default value overridden by global `ARG`s.\n  - A new command, `LET`, is available for declaring non-argument variables.\n    - `LET` takes precedence over `ARG`, just like `ARG` takes precedence over `ARG --global`.\n  - A new command, `SET`, is available for changing the value of variables declared with `LET`.\n- Introduced `--size` and `--age` flags to the prune command, to allow better control.\n\n### Changed\n\n- Updated buildkit with changes up to 3187d2d056de7e3f976ef62cd548499dc3472a7e.\n- The `VERSION --git-branch` feature flag has been removed (`EARTHLY_GIT_BRANCH` was always available in the previous version).\n- Improved earthly API connection timeout logic.\n- `earthly doc` now includes `ARG`s in both summary and detail output, and `ARTIFACT`s and `IMAGE`s in its detail output.\n\n### Fixed\n\n- Fixed `Could not detect digest for image` warnings for when using `WITH DOCKER --load` which referenced an earthly target that\n  included a `FROM` referencing an image following the `docker.io/<user>/<img>` naming scheme (rather than the `docker.io/library/<user>/<img>` scheme).\n- Fixed `COPY --if-exists` to work with earthly targets.  [#2541](https://github.com/earthly/earthly/issues/2541)\n- Intentional-indentation of comments is no longer removed by the doc command. [#2747](https://github.com/earthly/earthly/issues/2747)\n- `SAVE ARTIFACT ... AS LOCAL ...` could not write to non-current directories upon failure of a TRY/FINALLY block. [#2800](https://github.com/earthly/earthly/issues/2800)\n\n## v0.7.2 - 2023-03-14\n\n### Added\n\n- Support for [Rosetta](https://developer.apple.com/documentation/apple-silicon/about-the-rosetta-translation-environment) translation environment (emulator) in buildkit as an alternative to QEMU. To enable, go to Docker Desktop -> Settings -> Features in development -> Check `Use Rosetta for x86/amd64 emulation on Apple Silicon`.\n- New ARG `EARTHLY_GIT_BRANCH` will contain the branch of the current git commit, this ARG must be enabled with the `VERSION --git-branch` feature flag. [#2735](https://github.com/earthly/earthly/pull/2735)\n- Verbose logging when git configurations perform a regex substitution.\n\n### Fixed\n\n- SAVE IMAGE --push did not always work under `VERSION 0.7`, when image was refrenced by a `FROM` or `COPY`, followed by a `BUILD`. [#2762](https://github.com/earthly/earthly/issues/2762)\n\n### Changed\n\n- Simplified error message when a RUN command fails with an exit code. [#2742](https://github.com/earthly/earthly/issues/2742)\n- Improved warning messages when earthly cloud-based registry auth fails. [#2783](https://github.com/earthly/earthly/issues/2783)\n- Deleting a project will prompt for confirmation, unless --force is specified.\n- Updated buildkit with changes up to 4451e1be0e6889ffc56225e54f7e26bd6fdada54.\n\n## v0.7.1 - 2023-03-01\n\n### Added\n\n- Support for `RUN --network=none`, which prevents programs from using any network resources. [#834](https://github.com/earthly/earthly/issues/834)\n\n### Changed\n\n- The `unexpected env` warning can now be silenced by creating a `.arg` or `.secret` file. [#2696](https://github.com/earthly/earthly/issues/2696)\n\n### Fixed\n\n- Unindented comments in the middle of recipe blocks no longer cause parser errors. [#2697](https://github.com/earthly/earthly/issues/2697)\n\n## v0.7.0 - 2023-02-21\n\nThe documentation for this version is available at the [Earthly 0.7 documentation page](https://docs.earthly.dev/v/earthly-0.7/).\n\n**Earthly CI**\n\nEarthly 0.7 is the first version compatible with Earthly CI.\n\nEarthly 0.7 introduces the new keywords `PIPELINE` and `TRIGGER` to help define Earthly CI pipelines.\n\n```\nmy-pipeline:\n    PIPELINE --push\n    TRIGGER push main\n    TRIGGER pr main\n    BUILD +my-target\n```\n\nFor more information on how to use `PIPELINE` and `TRIGGER`, please see the [reference documentation](https://docs.earthly.dev/v/earthly-0.7/docs/earthfile#pipeline-beta).\n\n**Podman support**\n\nPodman support has now been promoted out of *beta* status and is generally available in 0.7. Earthly will automatically detect the container frontend, whether that's `docker` or `podman` and use it automatically for running Buildkit locally, or for outputting images locally resulting from the build.\n\nPlease note that rootful podman is required. Rootless podman is not supported.\n\n**VERSION is now mandatory**\n\nThe `VERSION` command\nis now required for all Earthfiles, and an error will occur if it is missing. If you are not ready to update your\nEarthfiles to use 0.7 (or 0.6), you can declare `VERSION 0.5` to continue to use your Earthfiles.\n\n**.env file is no longer used for `ARG` or secrets**\n\nThe `.env` file will only be used to automatically export environment variables, which can be used to configure earthly command line flags.\nAs a result, values will no longer be propagated to Earthfile `ARG`s or `RUN --secret=...` commands.\n\nInstead if you want build arguments or secrets automatically passed into earthly, they must be placed in `.arg` or `.secret` files respectively.\n\nNote that this is a **backwards incompatible** change and will apply to all Earthfiles (regardless of the defined `VERSION` value).\n\n**Pushing no longer requires everything else to succeed**\n\nThe behavior of the `--push` mode has changed in `VERSION 0.7` and is backwards incompatible with `VERSION 0.6`. Previously, `--push` commands would only execute if all other commands had succeeded. This precondition is no longer enforced, to allow for more flexible push ordering via the new `WAIT` clause. To achieve the behavior of the previous `--push` mode, you need to wrap any pre-required commands in a `WAIT` clause. For example, to push an image only if tests have passed, you would do the following:\n\n```Earthfile\ntest-and-push:\n  WAIT\n    BUILD +test\n  END\n  BUILD +my-image\nmy-image:\n  ...\n  SAVE IMAGE --push my-org/my-image:latest\n```\n\nThis type of behavior is useful in order to have better control over the order of push operations. For example, you may want to push an image to a registry, followed by a deployment that uses the newly pushed image. Here is how this might look like:\n\n```Earthfile\npush-and-deploy:\n  ...\n  WAIT\n    BUILD +my-image\n  END\n  RUN --push ./deploy.sh my-org/my-image:latest\nmy-image:\n  ...\n  SAVE IMAGE --push my-org/my-image:latest\n```\n\nWhere `./deploy.sh` is custom deployment script instructing a production environment to start using the image that was just pushed.\n\n**Promoting experimental features**\n\nThis version promotes a number of features that have been previously in Experimental and Beta status. To make use of\nthe features in this version you need to declare `VERSION 0.7` at the top of your Earthfile.\n\nDeclaring `VERSION 0.7` is equivalent to\n\n```\nVERSION \\\n  --check-duplicate-images \\\n  --earthly-git-author-args \\\n  --earthly-locally-arg \\\n  --earthly-version-arg \\\n  --explicit-global \\\n  --new-platform \\\n  --no-tar-build-output \\\n  --save-artifact-keep-own \\\n  --shell-out-anywhere \\\n  --use-cache-command \\\n  --use-chmod \\\n  --use-copy-link \\\n  --use-host-command \\\n  --use-no-manifest-list \\\n  --use-pipelines \\\n  --use-project-secrets \\\n  --wait-block \\\n  0.6\n```\n\nFor more information on the individual Earthfile feature flags see the [Earthfile version-specific features page](https://docs.earthly.dev/docs/earthfile/features).\n\n### Changed\n\n- The behavior of the `--push` mode has changed in a backwards incompatible manner. Previously, `--push` commands would only execute if all other commands had succeeded. This precondition is no longer enforced, allowing push commands to execute in the middle of the build now. Previously under `VERSION --wait-block 0.6`.\n- `ARG`s declared in the base target do not automatically become global unless explicitly declared as such via `ARG --global`. Previously under `VERSION --explicit-global 0.6`.\n- The Cloud-based secrets model is now project-based; it is not compatible with the older global secrets model. Earthfiles which are defined as `VERSION 0.5` or `VERSION 0.6` will continue to use the old global secrets namespace; however\n  the earthly command line no longer supports accessing or modifying the global secrets. A new `earthly secrets migrate` command has been added to help transition the global-based secrets to the new project-based secrets. If you need to manage secrets from Earthly 0.6 without migrating to the new 0.7 secrets, please use an older Earthly binary.\n- All `COPY` and `SAVE ARTIFACT` operations now use union filesystem merging for performing the `COPY`. This is similar to `COPY --link` in Dockerfiles, however in Earthly it is automatically enabled for all such operations. Previously under `VERSION --use-copy-link 0.6`.\n- The platform logic has been improved to allow overriding the platform in situations where previously it was not possible. Additionally, the default platform is now the native platform of the runner, and not of the host running Earthly. This makes platforms work better in remote runner settings. Previously under `VERSION --new-platform 0.6`.\n- Earthly will automatically shellout to determine the `$HOME` value when referenced [#2469](https://github.com/earthly/earthly/issues/2469)\n- Improved error message when invalid shell variable name is configured for a secret. [#2478](https://github.com/earthly/earthly/issues/2478)\n- The `--ci` flag no longer implies `--save-inline-cache` and `--use-inline-cache` since they were 100% CPU usage in some edge cases. These flags may still be explicitly enabled with `--ci`, but earthly will print a warning.\n- `earthly ls` has been promoted from *experimental* to *beta* status.\n- Setting a `VERSION` feature flag boolean to false (or any other value) will now raise an error; previously it was syntactically valid but had no effect.\n- `SAVE ARTIFACT <path> AS LOCAL ...` when used under a `TRY` / `FINALLY` can fail to be fully transferred to the host when the `TRY` command fails (resulting in an partially transferred file); an underflow can still occur, and is now detected and will not export the partial file. [2452](https://github.com/earthly/earthly/issues/2452)\n- The `--keep-own` flag for `SAVE ARTIFACT` is now applied by default; note that `COPY --keep-own` must still be used in order to keep ownership\n- Values from the `.env` file will no longer be propagated to Earthfile `ARG`s or `RUN --secret=...` commands; instead values must be placed in `.arg` or `.secret` files respectively. Note that this is a backwards incompatible change and will apply to all Earthfiles (regardless of the defined `VERSION` value). [#1736](https://github.com/earthly/earthly/issues/1736)\n- Some particularly obtuse syntax errors now have hints added to help clarify what the expected syntax might be. [#2656](https://github.com/earthly/earthly/issues/2656)\n- The default size when launching a new satellite is now medium instead of large.\n- Satellites can be launched with a weekend-only mode for receiving auto-updates.\n\n### Added\n\n- The commands `PIPELINE` and `TRIGGER` have been introduced for defining Earthly CI pipelines. Previously under `VERSION --use-pipelines 0.6`.\n- The clause `WAIT` is now generally available. The `WAIT` clause allows controlling of build order for operations that require it. This allows use-cases such as pushing images to a registry, followed by infrastructure changes that use the newly pushed images. Previously under `VERSION --wait-block 0.6`.\n- The command `CACHE` is now generally available. The `CACHE` command allows declaring a cache mount that can be used by any `RUN` command in the target, and also persists in the final image of the target (contents available when used via `FROM`). Previously under `VERSION --use-cache-command 0.6`.\n- The command `HOST` is now generally available. The `HOST` command allows declaring an `/etc/hosts` entry. Previously under `VERSION --use-host-command 0.6`.\n- New ARG `EARTHLY_GIT_COMMIT_AUTHOR_TIMESTAMP` will contain the author timestamp of the current git commit. [#2462](https://github.com/earthly/earthly/pull/2462)\n- New ARGs `EARTHLY_VERSION` and `EARTHLY_BUILD_SHA` contain the version of Earthly and the git sha of Earthly itself, respectively.\n- It is now possible to execute shell commands as part of any command that allows using variables. For example `VOLUME $(cat /volume-name.txt)`. Previously under `VERSION --shell-out-anywhere 0.6`.\n- Allow custom image to be used for git operations. [#2027](https://github.com/earthly/earthly/issues/2027)\n- Earthly now checks for duplicate image names when performing image outputs. Previously under `VERSION --check-duplicate-images 0.6`.\n- `SAVE IMAGE --no-manifest-list` allows outputting images of a different platform than the default one, but without the manifest list. This is useful for outputting images for platforms that do not support manifest lists, such as AWS Lambda. Previously under `VERSION --use-no-manifest-list 0.6`.\n- `COPY --chmod <mode>` allows setting the permissions of the copied files. Previously under `VERSION --use-chmod 0.6`.\n- The new ARG `EARTHLY_LOCALLY` indicates whether the current target is executed in a `LOCALLY` context. Previously under `VERSION --earthly-locally-arg 0.6`.\n- The new ARGs `EARTHLY_GIT_AUTHOR` and `EARTHLY_GIT_CO_AUTHORS` contain the author and co-authors of the current git commit, respectively. Previously under `VERSION --earthly-git-author-args 0.6`.\n- `earthly doc [projectRef[+targetRef]]` is a new subcommand in *beta* status.  It will parse and output documentation comments on targets.\n- Ability to store docker registry credentials in cloud secrets and corresponding `earthly registry setup|list|remove` commands; credentials can be associated with either your user or project.\n- New satellite commands for enabling auto-upgrades and forcing a manual upgrade.\n\n### Fixed\n\n- Support for saving files larger than 64kB on failure within a `TRY/FINALLY` block. [#2452](https://github.com/earthly/earthly/issues/2452)\n- Fixed race condition where `SAVE IMAGE` or `SAVE ARTIFACT AS LOCAL` commands were not always performed when contained in a target that was referenced by both a `FROM` (or `COPY`) and a `BUILD` command within the context of a `WAIT`/`END` block. [#2237](https://github.com/earthly/earthly/issues/2218)\n- `WORKDIR` is lost when `--use-copy-link` feature is enabled with `GIT CLONE` or `COPY --keep-own` commands. Note that `--use-copy-link` is enabled by default in `VERSION 0.7`. [#2544](https://github.com/earthly/earthly/issues/2544)\n- The `CACHE` command did not work when used inside a `WITH DOCKER` block. [#2549](https://github.com/earthly/earthly/issues/2549)\n- The `--platform` argument is no longer passed to docker or podman, which caused podman to always pull the buildkit image even when it already existed locally. [#2511](https://github.com/earthly/earthly/issues/2511), [#2566](https://github.com/earthly/earthly/issues/2566)\n- Fixed missing inline cache export; note that inline cache exports **do not** work when used within a `WAIT` / `END` block, this is a known current limitation. [#2178](https://github.com/earthly/earthly/issues/2178)\n- Indentation in the base Earthfile target would cause a panic (when no other targets existed); now a syntax error is returned. [#2603](https://github.com/earthly/earthly/issues/2603)\n- Added tighter registry read timeout, to prevent 15min stuck \"ongoing\" image manifest fetching.\n\n## v0.7.0-rc3 - 2023-02-15\n\nThe documentation for this version is available at the [Earthly 0.7 documentation page](https://docs.earthly.dev/v/earthly-0.7/).\n\n**Earthly CI**\n\nEarthly 0.7 is the first version compatible with Earthly CI.\n\nEarthly 0.7 introduces the new keywords `PIPELINE` and `TRIGGER` to help define Earthly CI pipelines.\n\n```\nmy-pipeline:\n    PIPELINE --push\n    TRIGGER push main\n    TRIGGER pr main\n    BUILD +my-target\n```\n\nFor more information on how to use `PIPELINE` and `TRIGGER`, please see the [reference documentation](https://docs.earthly.dev/v/earthly-0.7/docs/earthfile#pipeline-beta).\n\n**Podman support**\n\nPodman support has now been promoted out of *beta* status and is generally available in 0.7. Earthly will automatically detect the container frontend, whether that's `docker` or `podman` and use it automatically for running Buildkit locally, or for outputting images locally resulting from the build.\n\nPlease note that rootful podman is required. Rootless podman is not supported.\n\n**VERSION is now mandatory**\n\nThe `VERSION` command\nis now required for all Earthfiles, and an error will occur if it is missing. If you are not ready to update your\nEarthfiles to use 0.7 (or 0.6), you can declare `VERSION 0.5` to continue to use your Earthfiles.\n\n**.env file is no longer used for `ARG` or secrets**\n\nThe `.env` file will only be used to automatically export environment variables, which can be used to configure earthly command line flags.\nAs a result, values will no longer be propagated to Earthfile `ARG`s or `RUN --secret=...` commands.\n\nInstead if you want build arguments or secrets automatically passed into earthly, they must be placed in `.arg` or `.secret` files respectively.\n\nNote that this is a **backwards incompatible** change and will apply to all Earthfiles (regardless of the defined `VERSION` value).\n\n**Pushing no longer requires everything else to succeed**\n\nThe behavior of the `--push` mode has changed in `VERSION 0.7` and is backwards incompatible with `VERSION 0.6`. Previously, `--push` commands would only execute if all other commands had succeeded. This precondition is no longer enforced, to allow for more flexible push ordering via the new `WAIT` clause. To achieve the behavior of the previous `--push` mode, you need to wrap any pre-required commands in a `WAIT` clause. For example, to push an image only if tests have passed, you would do the following:\n\n```Earthfile\ntest-and-push:\n  WAIT\n    BUILD +test\n  END\n  BUILD +my-image\nmy-image:\n  ...\n  SAVE IMAGE --push my-org/my-image:latest\n```\n\nThis type of behavior is useful in order to have better control over the order of push operations. For example, you may want to push an image to a registry, followed by a deployment that uses the newly pushed image. Here is how this might look like:\n\n```Earthfile\npush-and-deploy:\n  ...\n  WAIT\n    BUILD +my-image\n  END\n  RUN --push ./deploy.sh my-org/my-image:latest\nmy-image:\n  ...\n  SAVE IMAGE --push my-org/my-image:latest\n```\n\nWhere `./deploy.sh` is custom deployment script instructing a production environment to start using the image that was just pushed.\n\n**Promoting experimental features**\n\nThis version promotes a number of features that have been previously in Experimental and Beta status. To make use of\nthe features in this version you need to declare `VERSION 0.7` at the top of your Earthfile.\n\nDeclaring `VERSION 0.7` is equivalent to\n\n```\nVERSION \\\n  --check-duplicate-images \\\n  --earthly-git-author-args \\\n  --earthly-locally-arg \\\n  --earthly-version-arg \\\n  --explicit-global \\\n  --new-platform \\\n  --no-tar-build-output \\\n  --save-artifact-keep-own \\\n  --shell-out-anywhere \\\n  --use-cache-command \\\n  --use-chmod \\\n  --use-copy-link \\\n  --use-host-command \\\n  --use-no-manifest-list \\\n  --use-pipelines \\\n  --use-project-secrets \\\n  --wait-block \\\n  0.6\n```\n\nFor more information on the individual Earthfile feature flags see the [Earthfile version-specific features page](https://docs.earthly.dev/docs/earthfile/features).\n\n### Changed\n\n- The behavior of the `--push` mode has changed in a backwards incompatible manner. Previously, `--push` commands would only execute if all other commands had succeeded. This precondition is no longer enforced, allowing push commands to execute in the middle of the build now. Previously under `VERSION --wait-block 0.6`.\n- `ARG`s declared in the base target do not automatically become global unless explicitly declared as such via `ARG --global`. Previously under `VERSION --explicit-global 0.6`.\n- The Cloud-based secrets model is now project-based; it is not compatible with the older global secrets model. Earthfiles which are defined as `VERSION 0.5` or `VERSION 0.6` will continue to use the old global secrets namespace; however\n  the earthly command line no longer supports accessing or modifying the global secrets. A new `earthly secrets migrate` command has been added to help transition the global-based secrets to the new project-based secrets. If you need to manage secrets from Earthly 0.6 without migrating to the new 0.7 secrets, please use an older Earthly binary.\n- All `COPY` and `SAVE ARTIFACT` operations now use union filesystem merging for performing the `COPY`. This is similar to `COPY --link` in Dockerfiles, however in Earthly it is automatically enabled for all such operations. Previously under `VERSION --use-copy-link 0.6`.\n- The platform logic has been improved to allow overriding the platform in situations where previously it was not possible. Additionally, the default platform is now the native platform of the runner, and not of the host running Earthly. This makes platforms work better in remote runner settings. Previously under `VERSION --new-platform 0.6`.\n- Earthly will automatically shellout to determine the `$HOME` value when referenced [#2469](https://github.com/earthly/earthly/issues/2469)\n- Improved error message when invalid shell variable name is configured for a secret. [#2478](https://github.com/earthly/earthly/issues/2478)\n- The `--ci` flag no longer implies `--save-inline-cache` and `--use-inline-cache` since they were 100% CPU usage in some edge cases. These flags may still be explicitly enabled with `--ci`, but earthly will print a warning.\n- `earthly ls` has been promoted from *experimental* to *beta* status.\n- Setting a `VERSION` feature flag boolean to false (or any other value) will now raise an error; previously it was syntactically valid but had no effect.\n- `SAVE ARTIFACT <path> AS LOCAL ...` when used under a `TRY` / `FINALLY` can fail to be fully transferred to the host when the `TRY` command fails (resulting in an partially transferred file); an underflow can still occur, and is now detected and will not export the partial file. [2452](https://github.com/earthly/earthly/issues/2452)\n- The `--keep-own` flag for `SAVE ARTIFACT` is now applied by default; note that `COPY --keep-own` must still be used in order to keep ownership\n- Values from the `.env` file will no longer be propagated to Earthfile `ARG`s or `RUN --secret=...` commands; instead values must be placed in `.arg` or `.secret` files respectively. Note that this is a backwards incompatible change and will apply to all Earthfiles (regardless of the defined `VERSION` value). [#1736](https://github.com/earthly/earthly/issues/1736)\n- Some particularly obtuse syntax errors now have hints added to help clarify what the expected syntax might be. [#2656](https://github.com/earthly/earthly/issues/2656)\n\n\n### Added\n\n- The commands `PIPELINE` and `TRIGGER` have been introduced for defining Earthly CI pipelines. Previously under `VERSION --use-pipelines 0.6`.\n- The clause `WAIT` is now generally available. The `WAIT` clause allows controlling of build order for operations that require it. This allows use-cases such as pushing images to a registry, followed by infrastructure changes that use the newly pushed images. Previously under `VERSION --wait-block 0.6`.\n- The command `CACHE` is now generally available. The `CACHE` command allows declaring a cache mount that can be used by any `RUN` command in the target, and also persists in the final image of the target (contents available when used via `FROM`). Previously under `VERSION --use-cache-command 0.6`.\n- The command `HOST` is now generally available. The `HOST` command allows declaring an `/etc/hosts` entry. Previously under `VERSION --use-host-command 0.6`.\n- New ARG `EARTHLY_GIT_COMMIT_AUTHOR_TIMESTAMP` will contain the author timestamp of the current git commit. [#2462](https://github.com/earthly/earthly/pull/2462)\n- New ARGs `EARTHLY_VERSION` and `EARTHLY_BUILD_SHA` contain the version of Earthly and the git sha of Earthly itself, respectively.\n- It is now possible to execute shell commands as part of any command that allows using variables. For example `VOLUME $(cat /volume-name.txt)`. Previously under `VERSION --shell-out-anywhere 0.6`.\n- Allow custom image to be used for git operations. [#2027](https://github.com/earthly/earthly/issues/2027)\n- Earthly now checks for duplicate image names when performing image outputs. Previously under `VERSION --check-duplicate-images 0.6`.\n- `SAVE IMAGE --no-manifest-list` allows outputting images of a different platform than the default one, but without the manifest list. This is useful for outputting images for platforms that do not support manifest lists, such as AWS Lambda. Previously under `VERSION --use-no-manifest-list 0.6`.\n- `COPY --chmod <mode>` allows setting the permissions of the copied files. Previously under `VERSION --use-chmod 0.6`.\n- The new ARG `EARTHLY_LOCALLY` indicates whether the current target is executed in a `LOCALLY` context. Previously under `VERSION --earthly-locally-arg 0.6`.\n- The new ARGs `EARTHLY_GIT_AUTHOR` and `EARTHLY_GIT_CO_AUTHORS` contain the author and co-authors of the current git commit, respectively. Previously under `VERSION --earthly-git-author-args 0.6`.\n- `earthly doc [projectRef[+targetRef]]` is a new subcommand in *beta* status.  It will parse and output documentation comments on targets.\n- Ability to store docker registry credentials in cloud secrets and corresponding `earthly registry setup|list|remove` commands; credentials can be associated with either your user or project.\n- New satellite commands for enabling auto-upgrades and forcing a manual upgrade.\n\n### Fixed\n\n- Support for saving files larger than 64kB on failure within a `TRY/FINALLY` block. [#2452](https://github.com/earthly/earthly/issues/2452)\n- Fixed race condition where `SAVE IMAGE` or `SAVE ARTIFACT AS LOCAL` commands were not always performed when contained in a target that was referenced by both a `FROM` (or `COPY`) and a `BUILD` command within the context of a `WAIT`/`END` block. [#2237](https://github.com/earthly/earthly/issues/2218)\n- `WORKDIR` is lost when `--use-copy-link` feature is enabled with `GIT CLONE` or `COPY --keep-own` commands. Note that `--use-copy-link` is enabled by default in `VERSION 0.7`. [#2544](https://github.com/earthly/earthly/issues/2544)\n- The `CACHE` command did not work when used inside a `WITH DOCKER` block. [#2549](https://github.com/earthly/earthly/issues/2549)\n- The `--platform` argument is no longer passed to docker or podman, which caused podman to always pull the buildkit image even when it already existed locally. [#2511](https://github.com/earthly/earthly/issues/2511), [#2566](https://github.com/earthly/earthly/issues/2566)\n- Fixed missing inline cache export; note that inline cache exports **do not** work when used within a `WAIT` / `END` block, this is a known current limitation. [#2178](https://github.com/earthly/earthly/issues/2178)\n- Indentation in the base Earthfile target would cause a panic (when no other targets existed); now a syntax error is returned. [#2603](https://github.com/earthly/earthly/issues/2603)\n\n## v0.7.0-rc2 - 2023-02-01\n\nThe documentation for this version is available at the [Earthly 0.7 documentation page](https://docs.earthly.dev/v/earthly-0.7/).\n\n**Earthly CI**\n\nEarthly 0.7 is the first version compatible with Earthly CI.\n\nEarthly 0.7 introduces the new keywords `PIPELINE` and `TRIGGER` to help define Earthly CI pipelines.\n\n```\nmy-pipeline:\n    PIPELINE --push\n    TRIGGER push main\n    TRIGGER pr main\n    BUILD +my-target\n```\n\nFor more information on how to use `PIPELINE` and `TRIGGER`, please see the [reference documentation](https://docs.earthly.dev/v/earthly-0.7/docs/earthfile#pipeline-beta).\n\n**Podman support**\n\nPodman support has now been promoted out of *beta* status and is generally available in 0.7. Earthly will automatically detect the container frontend, whether that's `docker` or `podman` and use it automatically for running Buildkit locally, or for outputting images locally resulting from the build.\n\nPlease note that rootful podman is required. Rootless podman is not supported.\n\n**VERSION is now mandatory**\n\nThe `VERSION` command\nis now required for all Earthfiles, and an error will occur if it is missing. If you are not ready to update your\nEarthfiles to use 0.7 (or 0.6), you can declare `VERSION 0.5` to continue to use your Earthfiles.\n\n**Pushing no longer requires everything else to succeed**\n\nThe behavior of the `--push` mode has changed in `VERSION 0.7` and is backwards incompatible with `VERSION 0.6`. Previously, `--push` commands would only execute if all other commands had succeeded. This precondition is no longer enforced, to allow for more flexible push ordering via the new `WAIT` clause. To achieve the behavior of the previous `--push` mode, you need to wrap any pre-required commands in a `WAIT` clause. For example, to push an image only if tests have passed, you would do the following:\n\n```Earthfile\ntest-and-push:\n  WAIT\n    BUILD +test\n  END\n  BUILD +my-image\nmy-image:\n  ...\n  SAVE IMAGE --push my-org/my-image:latest\n```\n\nThis type of behavior is useful in order to have better control over the order of push operations. For example, you may want to push an image to a registry, followed by a deployment that uses the newly pushed image. Here is how this might look like:\n\n```Earthfile\npush-and-deploy:\n  ...\n  WAIT\n    BUILD +my-image\n  END\n  RUN --push ./deploy.sh my-org/my-image:latest\nmy-image:\n  ...\n  SAVE IMAGE --push my-org/my-image:latest\n```\n\nWhere `./deploy.sh` is custom deployment script instructing a production environment to start using the image that was just pushed.\n\n**Promoting experimental features**\n\nThis version promotes a number of features that have been previously in Experimental and Beta status. To make use of\nthe features in this version you need to declare `VERSION 0.7` at the top of your Earthfile.\n\nDeclaring `VERSION 0.7` is equivalent to\n\n```\nVERSION \\\n  --check-duplicate-images \\\n  --earthly-git-author-args \\\n  --earthly-locally-arg \\\n  --earthly-version-arg \\\n  --explicit-global \\\n  --new-platform \\\n  --no-tar-build-output \\\n  --save-artifact-keep-own \\\n  --shell-out-anywhere \\\n  --use-cache-command \\\n  --use-chmod \\\n  --use-copy-link \\\n  --use-host-command \\\n  --use-no-manifest-list \\\n  --use-pipelines \\\n  --use-project-secrets \\\n  --wait-block \\\n  0.6\n```\n\nFor more information on the individual Earthfile feature flags see the [Earthfile version-specific features page](https://docs.earthly.dev/docs/earthfile/features).\n\n### Changed\n\n- The behavior of the `--push` mode has changed in a backwards incompatible manner. Previously, `--push` commands would only execute if all other commands had succeeded. This precondition is no longer enforced, allowing push commands to execute in the middle of the build now. Previously under `VERSION --wait-block 0.6`.\n- `ARG`s declared in the base target do not automatically become global unless explicitly declared as such via `ARG --global`. Previously under `VERSION --explicit-global 0.6`.\n- The Cloud-based secrets model is now project-based; it is not compatible with the older global secrets model. Earthfiles which are defined as `VERSION 0.5` or `VERSION 0.6` will continue to use the old global secrets namespace; however\n  the earthly command line no longer supports accessing or modifying the global secrets. A new `earthly secrets migrate` command has been added to help transition the global-based secrets to the new project-based secrets. If you need to manage secrets from Earthly 0.6 without migrating to the new 0.7 secrets, please use an older Earthly binary.\n- All `COPY` and `SAVE ARTIFACT` operations now use union filesystem merging for performing the `COPY`. This is similar to `COPY --link` in Dockerfiles, however in Earthly it is automatically enabled for all such operations. Previously under `VERSION --use-copy-link 0.6`.\n- The platform logic has been improved to allow overriding the platform in situations where previously it was not possible. Additionally, the default platform is now the native platform of the runner, and not of the host running Earthly. This makes platforms work better in remote runner settings. Previously under `VERSION --new-platform 0.6`.\n- Earthly will automatically shellout to determine the `$HOME` value when referenced [#2469](https://github.com/earthly/earthly/issues/2469)\n- Improved error message when invalid shell variable name is configured for a secret. [#2478](https://github.com/earthly/earthly/issues/2478)\n- The `--ci` flag no longer implies `--save-inline-cache` and `--use-inline-cache` since they were 100% CPU usage in some edge cases. These flags may still be explicitly enabled with `--ci`, but earthly will print a warning.\n- `earthly ls` has been promoted from *experimental* to *beta* status.\n- Setting a `VERSION` feature flag boolean to false (or any other value) will now raise an error; previously it was syntactically valid but had no effect.\n- `SAVE ARTIFACT <path> AS LOCAL ...` when used under a `TRY` / `FINALLY` can fail to be fully transferred to the host when the `TRY` command fails (resulting in an partially transferred file); an underflow can still occur, and is now detected and will not export the partial file. [2452](https://github.com/earthly/earthly/issues/2452)\n- The `--keep-own` flag for `SAVE ARTIFACT` is now applied by default; note that `COPY --keep-own` must still be used in order to keep ownership\n\n### Added\n\n- The commands `PIPELINE` and `TRIGGER` have been introduced for defining Earthly CI pipelines. Previously under `VERSION --use-pipelines 0.6`.\n- The clause `WAIT` is now generally available. The `WAIT` clause allows controlling of build order for operations that require it. This allows use-cases such as pushing images to a registry, followed by infrastructure changes that use the newly pushed images. Previously under `VERSION --wait-block 0.6`.\n- The command `CACHE` is now generally available. The `CACHE` command allows declaring a cache mount that can be used by any `RUN` command in the target, and also persists in the final image of the target (contents available when used via `FROM`). Previously under `VERSION --use-cache-command 0.6`.\n- The command `HOST` is now generally available. The `HOST` command allows declaring an `/etc/hosts` entry. Previously under `VERSION --use-host-command 0.6`.\n- New ARG `EARTHLY_GIT_COMMIT_AUTHOR_TIMESTAMP` will contain the author timestamp of the current git commit. [#2462](https://github.com/earthly/earthly/pull/2462)\n- New ARGs `EARTHLY_VERSION` and `EARTHLY_BUILD_SHA` contain the version of Earthly and the git sha of Earthly itself, respectively.\n- It is now possible to execute shell commands as part of any command that allows using variables. For example `VOLUME $(cat /volume-name.txt)`. Previously under `VERSION --shell-out-anywhere 0.6`.\n- Allow custom image to be used for git operations. [#2027](https://github.com/earthly/earthly/issues/2027)\n- Earthly now checks for duplicate image names when performing image outputs. Previously under `VERSION --check-duplicate-images 0.6`.\n- `SAVE IMAGE --no-manifest-list` allows outputting images of a different platform than the default one, but without the manifest list. This is useful for outputting images for platforms that do not support manifest lists, such as AWS Lambda. Previously under `VERSION --use-no-manifest-list 0.6`.\n- `COPY --chmod <mode>` allows setting the permissions of the copied files. Previously under `VERSION --use-chmod 0.6`.\n- The new ARG `EARTHLY_LOCALLY` indicates whether the current target is executed in a `LOCALLY` context. Previously under `VERSION --earthly-locally-arg 0.6`.\n- The new ARGs `EARTHLY_GIT_AUTHOR` and `EARTHLY_GIT_CO_AUTHORS` contain the author and co-authors of the current git commit, respectively. Previously under `VERSION --earthly-git-author-args 0.6`.\n- `earthly doc [projectRef[+targetRef]]` is a new subcommand in *beta* status.  It will parse and output documentation comments on targets.\n- Ability to store docker registry credentials in cloud secrets and corresponding `earthly registry login|list|logout` commands; credentials can be associated with either your user or project.\n- New satellite commands for enabling auto-upgrades and forcing a manual upgrade.\n\n### Fixed\n\n- Support for saving files larger than 64kB on failure within a `TRY/FINALLY` block. [#2452](https://github.com/earthly/earthly/issues/2452)\n- Fixed race condition where `SAVE IMAGE` or `SAVE ARTIFACT AS LOCAL` commands were not always performed when contained in a target that was referenced by both a `FROM` (or `COPY`) and a `BUILD` command within the context of a `WAIT`/`END` block. [#2237](https://github.com/earthly/earthly/issues/2218)\n- `WORKDIR` is lost when `--use-copy-link` feature is enabled with `GIT CLONE` or `COPY --keep-own` commands. Note that `--use-copy-link` is enabled by default in `VERSION 0.7`. [#2544](https://github.com/earthly/earthly/issues/2544)\n- The `CACHE` command did not work when used inside a `WITH DOCKER` block. [#2549](https://github.com/earthly/earthly/issues/2549)\n- The `--platform` argument is no longer passed to docker or podman, which caused podman to always pull the buildkit image even when it already existed locally. [#2511](https://github.com/earthly/earthly/issues/2511), [#2566](https://github.com/earthly/earthly/issues/2566)\n- Fixed missing inline cache export; note that inline cache exports **do not** work when used within a `WAIT` / `END` block, this is a known current limitation. [#2178](https://github.com/earthly/earthly/issues/2178)\n- Indentation in the base Earthfile target would cause a panic (when no other targets existed); now a syntax error is returned. [#2603](https://github.com/earthly/earthly/issues/2603)\n\n\n## v0.7.0-rc1 - 2023-01-18\n\nThis version promotes a number of features that have been previously in Experimental and Beta status. To make use of\nthe features in this version you need to declare `VERSION 0.7` at the top of your Earthfile. The `VERSION` command\nis now required for all Earthfiles, and an error will occur if it is missing. If you are not ready to update your\nEarthfiles to use 0.7 (or 0.6), you can declare `VERSION 0.5` to continue to use your Earthfiles.\n\nDeclaring `VERSION 0.7` is equivalent to\n\n```\nVERSION \\\n  --explicit-global \\\n  --check-duplicate-images \\\n  --earthly-version-arg \\\n  --use-cache-command \\\n  --use-host-command \\\n  --use-copy-link \\\n  --new-platform \\\n  --no-tar-build-output \\\n  --use-no-manifest-list \\\n  --use-chmod \\\n  --shell-out-anywhere \\\n  --earthly-locally-arg \\\n  --use-project-secrets \\\n  --use-pipelines \\\n  --earthly-git-author-args \\\n  0.6\n```\n\nFor more information on the individual Earthfile feature flags see the [Earthfile version-specific features page](https://docs.earthly.dev/docs/earthfile/features).\n\n### Changed\n\n- The Cloud-based secrets model is now project-based; it is not compatible with the older global secrets model. Earthfiles which are defined as `VERSION 0.5` or `VERSION 0.6` will continue to use the old global secrets namespace; however\n  the earthly command line no longer supports accessing or modifying the global secrets. A new `earthly secrets migrate` command has been added to help transition the global-based secrets to the new project-based secrets.\n- Earthly will automatically shellout to determine the `$HOME` value when referenced; this requires the `--shell-out-anywhere` feature flag. [#2469](https://github.com/earthly/earthly/issues/2469)\n- Improved error message when invalid shell variable name is configured for a secret. [#2478](https://github.com/earthly/earthly/issues/2478)\n- The `--ci` flag no longer implies `--save-inline-cache` and `--use-inline-cache` since they were 100% CPU usage in some edge cases. These flags may still be explicitly enabled with `--ci`, but earthly will print a warning.\n\n### Added\n\n- New ARG `EARTHLY_GIT_COMMIT_AUTHOR_TIMESTAMP` will contain the author timestamp of the current git commit, this ARG must be enabled with the `VERSION --git-commit-author-timestamp` feature flag. [#2462](https://github.com/earthly/earthly/pull/2462)\n- Allow custom image to be used for git opperations. [#2027](https://github.com/earthly/earthly/issues/2027)\n\n### Fixed\n\n- Support for saving files larger than 64kB on failure within a `TRY/FINALLY` block. [#2452](https://github.com/earthly/earthly/issues/2452)\n- Fixed race condition where `SAVE IMAGE` or `SAVE ARTIFACT AS LOCAL` commands were not always performed when contained in a target that was referenced by both a `FROM` (or `COPY`) and a `BUILD` command within the context of a `WAIT`/`END` block. [#2237](https://github.com/earthly/earthly/issues/2218)\n- `WORKDIR` is lost when `--use-copy-link` feature is enabled with `GIT CLONE` or `COPY --keep-own` commands. [#2544](https://github.com/earthly/earthly/issues/2544)\n- The `CACHE` command did not work when used inside a `WITH DOCKER` block. [#2549](https://github.com/earthly/earthly/issues/2549)\n- The `--platform` argument is no longer passed to docker or podman, which caused podman to always pull the buildkit image even when it already existed locally. [#2511](https://github.com/earthly/earthly/issues/2511), [#2566](https://github.com/earthly/earthly/issues/2566)\n\n## v0.6.30 - 2022-11-22\n\n### Added\n\n- Added support for a custom `.netrc` file path using the standard `NETRC` environmental variable. [#2426](https://github.com/earthly/earthly/pull/2426)\n- Ability to run multiple Earthly installations at a time via `EARTHLY_INSTALLATION_NAME` environment variable, or the `--installation-name` CLI flag. The installation name defaults to `earthly` if not specified. Different installations use different configurations, different buildkit Daemons, different cache volumes, and different ports.\n- New `EARTHLY_CI` builtin arg, which is set to `true` when earthly is run with the `--ci` flag, this ARG must be enabled with the `VERSION --ci-arg` feature flag. [#2398](https://github.com/earthly/earthly/pull/2398)\n\n### Changed\n\n- Updated buildkit to include changes up to [a5263dd0f990a3fe17b67e0002b76bfd1f5b433d](https://github.com/moby/buildkit/commit/a5263dd0f990a3fe17b67e0002b76bfd1f5b433d), which includes a change to speed-up buildkit startup time.\n- The Earthly Docker image works better for cases where a buildkit instance is not needed. The image now works without `--privileged` when using `NO_BUILDKIT=1`, and additionally, the image can also use `/var/run/docker.sock` or `DOCKER_HOST` for the buildkit daemon.\n\n### Fixed\n\n- Fixed Earthly on Mac would randomly hang on `1. Init` if Earthly was installed from Homebrew or the Earthly homebrew tap. [#2247](https://github.com/earthly/earthly/issues/2247)\n- Only referenced ARGs from .env are displayed on failures, this prevents secrets contained in .env from being displayed. [#1736](https://github.com/earthly/earthly/issues/1736)\n- Earthly now correctly detects if Podman is running but is under the disguise of the Docker CLI.\n- Improved performance when copying files. Fully-cached builds are now dramatically faster as a result. [#2049](https://github.com/earthly/earthly/issues/2049)\n- Fixed `--shell-out-anywhere` bug where inner quotes were incorrectly removed. [#2340](https://github.com/earthly/earthly/issues/2340)\n\n## v0.6.29 - 2022-11-07\n\n### Added\n\n- Cache mounts sharing mode can now be specified via `RUN --mount type=cache,sharing=shared` via `CACHE --sharing=shared`. Allowed values are `locked` (default - lock concurrent acccess to the cache), `shared` (allow concurrent access) and `private` (create a new empty cache on concurrent access).\n\n### Changed\n\n- Increases the cache limit for local and git sources from 10% to 50% to support copying large files (e.g. binary assets).\n- The default cache mount sharing mode is now `locked` instead of `shared`. This means that if you have multiple builds running concurrently, they will block on each other to gain access to the cache mount. If you want to share the cache as it was shared in previous version of Earthly, you can use `RUN --mount type=cache,sharing=shared` or `CACHE --sharing=shared`.\n\n### Fixed\n\n- `CACHE` command was not being correctly used in `IF`, `FOR`, `ARG` and other commands. [#2330](https://github.com/earthly/earthly/issues/2330)\n- Fixed buildkit gckeepstorage config value which was was set to 1000 times larger than the cache size, now it is set to the cache size.\n- Fixed Earthly not detecting the correct image digest for some images loaded in `WITH DOCKER --load` and causing cache not to be bust correctly. [#2337](https://github.com/earthly/earthly/issues/2337) and [#2288](https://github.com/earthly/earthly/issues/2288)\n\n## v0.6.28 - 2022-10-26\n\n### Added\n- A summary of context file transfers is now displayed every 15 seconds.\n- Satellite wake command, which can force a satellite to wake up (useful for calling inspect or other non-build related commands).\n\n### Changed\n- `WITH DOCKER` merging of user specific `/etc/docker/daemon.json` settings data now applies to arrays (previously only dictionaries were supported).\n- A final warning will be displayed if earthly is terminated due to a interrupt signal (ctrl-c).\n\n### Changed\n- Updated buildkit to include changes up to [c717d6aa7543d4b83395e0552ef2eb311f563aab](https://github.com/moby/buildkit/commit/c717d6aa7543d4b83395e0552ef2eb311f563aab)\n\n## v0.6.27 - 2022-10-17\n\n### Changed\n- Support for all ssh-based key types (e.g. ssh-ed25519), and not only ssh-rsa. [#1783](https://github.com/earthly/earthly/issues/1783)\n\n### Fixed\n- Unable to specify public key to add via the command-line, e.g. running `earthly account add-key <key>` ignored the key and fell back to an interactive prompt.\n- `GIT CLONE` command was ignoring the `WORK DIR` command when `--use-copy-link` feature was set.\n\n## v0.6.26 - 2022-10-13\n\n### Added\n\n- Build failures now show the file and line number of the failing command\n- Introduced `EARTHLY_GIT_AUTHOR` and `EARTHLY_GIT_CO_AUTHORS` ARGS\n\n### Fixed\n\n- Some network operations were being incorrectly executed with a timeout of 0.\n- Upon `earthly ls` failure it will display the failure reason\n\n### Changed\n\n- Loading Docker images as part of `WITH DOCKER` is now faster through the use of an embedded registry in Buildkit. This functionality was previously hidden (`VERSION --use-registry-for-with-docker`) and was only auto-enabled for Earthly Satellite users. It is now enabled by default for all builds. [#1268](https://github.com/earthly/earthly/issues/1268)\n\n### Changed\n\n- `VERSION` command is now required.\n\n## v0.6.25 - 2022-10-04\n\n### Fixed\n\n- Fixed outputting images with long names [#2053](https://github.com/earthly/earthly/issues/2053)\n- Fixed buildkit connection timing out occasionally [#2229](https://github.com/earthly/earthly/issues/2229)\n- Cache size was incorrectly displayed (magnitude of 1024 higher)\n\n## v0.6.24 - 2022-09-22\n\n### Added\n\n- The `earthly org invite` command now has the ability to invite multiple email addresses at once.\n- Experimental support for `TRY/FINALLY`, which allows saving artifacts upon failure. [#988](https://github.com/earthly/earthly/issues/988), [#587](https://github.com/earthly/earthly/issues/587).\n  Not that this is only a partial implementation, and only accepts a *single* RUN command in the `TRY`, and only `SAVE ARTIFACT` commands in the `FINALLY` block.\n- Ability to enable specific satellite features via cli flags, e.g. the new experimental sleep feature can be enabled with\n  `earthly satellite launch --feature-flags satellite-sleep my-satellite`.\n\n### Changed\n\n- Bootstrapping zsh autocompletion will first attempt to install under `/usr/local/share/zsh/site-functions`, and will now\n  fallback to `/usr/share/zsh/site-functions`.\n- The `earthly preview org` command has been promoted to GA, and is now available under `earthly org`.\n- `earthly sat select` with no arguments now prints the current satellite and the usage text.\n- The interactive debugger now connects over the buildkit session connection rather than an unencrypted tcp connection; this makes it possible\n  to use the interactive debugger with remote buildkit instances.\n\n### Fixed\n\n- Fixed Earthly failing when using a remote docker host from a machine with an incompatible architecture. [#1895](https://github.com/earthly/earthly/issues/1895)\n- Earthly will no longer race with itself when starting up buildkit. [#2194](https://github.com/earthly/earthly/issues/2194)\n- The error reported when failing to initiate a connection to buildkit has been reworded to account for the remote buildkit/satellite case too.\n- Errors related to parsing `VERSION` feature flags will no longer be displayed during auto-completion.\n\n## v0.6.23 - 2022-09-06\n\n### Fixed\n\n- Using `--remote-cache` on a target that contains only `BUILD` instructions caused a hang. [#1945](https://github.com/earthly/earthly/issues/1945)\n- Fixed WAIT/END related bug which prevent `WITH DOCKER --load` from building referenced target.\n- Images and artifacts which are output (or pushed), are now displayed in the final earthly output.\n- `ssh: parse error in message type 27` error when using OpenSSH 8.9; fixed by upstream in [golang/go#51689](https://github.com/golang/go/issues/51689).\n\n### Changed\n\n- Removed warning stating that `WAIT/END code is experimental and may be incomplete` -- it is still experimental; however, it now has a higher degree\n  of test-coverage. It can be enabled with `VERSION --wait-block 0.6`.\n- A warning is now displayed during exporting a multi-platform image to the local host if no platform is found that matches the host's platform type.\n- Reduced verbosity of `To enable pushing use earthly --push` message.\n\n## v0.6.22 - 2022-08-19\n\n### Added\n\n- `--cache-from` earthly flag, which allows defining multiple ordered caches. [#1693](https://github.com/earthly/earthly/issues/1693)\n- WAIT/END support for saving artifacts to local host.\n- WAIT/END support for `RUN --push` commands.\n\n### Fixed\n\n- Updated `EXPOSE` parsing to accept (and ignore) host IP prefix, as well as expose udp ports; this should be fully-compatible with dockerfile's format. [#1986](https://github.com/earthly/earthly/issues/1986)\n- The earthly-buildkit container is now only initialized when required.\n\n### Changed\n\n- The earthly-buildkit container is now only initialized when required.\n\n## v0.6.21 - 2022-08-04\n\n### Added\n\n- `EARTHLY_LOCALLY` builtin arg which is set to `true` or `false` when executing locally or within a container, respectively. This ARG must be enabled with\n  the `VERSION --earthly-locally-arg` feature flag.\n\n### Fixed\n\n- Fixed an incompatibility with older versions of remote BuildKits and Satellites, which was resulting in Earthly crashing.\n- Fixed `WITH DOCKER` not loading correctly when the image name contained a port number under `VERSION --use-registry-for-with-docker`. [#2071](https://github.com/earthly/earthly/issues/2071)\n- Race condition in WAIT / END block, which prevented waiting on some BUILD commands.\n\n### Changed\n\n- Added a deprecation warning for secrets using a `+secrets/` prefix. Support for this prefix will be removed in a future release.\n- per-file stat transfers are now logged when running under `--debug` mode.\n\n## v0.6.20 - 2022-07-18\n\n### Changed\n\n- Updated buildkit to include changes up to 12cfc87450c8d4fc31c8c0a09981e4c3fb3e4d9f\n\n### Added\n\n- Adding support for saving artifact from `--interactive-keep`. [#1980](https://github.com/earthly/earthly/issues/1980)\n- New `EARTHLY_PUSH` builtin arg, which is set to `true` when earthly is run with the `--push` flag, and the argument\n  is referenced under the direct target, or a target which is indirectly referenced via a `BUILD` command; otherwise\n  it will be set to `false`. The value mimics when a `RUN --push` command is executed. This feature must be enabled with\n  `VERSION --wait-block 0.6`.\n\n### Fixed\n\n- Fixed `context.Canceled` being reported as the error in some builds instead of the root cause. [#1991](https://github.com/earthly/earthly/issues/1991)\n- Improved cache use of `WITH DOCKER` command.\n- The `earthly/earthly` docker image is now also built for arm64 (in addition to amd64).\n\n## v0.6.19 - 2022-06-29\n\n### Fixed\n\n- Fixed retagging of images that are made available via the `WITH DOCKER` command when the `--use-registry-for-with-docker` feature is enabled.\n- Fixed a bug where `earthly --version` would display unknown on some versions of Windows.\n\n## v0.6.18 - 2022-06-27\n\n### Fixed\n\n- `sh: write error: Resource busy` error caused by running the earthly/earthly docker image on a cgroups2-enabled host. [#1934](https://github.com/earthly/earthly/issues/1934)\n\n## v0.6.17 - 2022-06-20\n\n### Added\n\n- Additional debug information for failure during dind cleanup.\n\n## v0.6.16 - 2022-06-17\n\n### Changed\n\n- Custom `secret_provider` is now called with user's env variables.\n- Additional args can be passed to `secret_provider`, e.g. `secret_provider: my-password-manager --db=$HOME/path/to/secrets.db`\n- Local registry is enabled by default in the earthly-buildkit container.\n\n## v0.6.15 - 2022-06-02\n\n### Changed\n\n- Switch to MPL-2.0 license. [Announcement](https://earthly.dev/blog/earthly-open-source)\n\n### Added\n\n- Experimental support for Docker registry based image creation and transfer `WITH DOCKER` loads and pulls. Enable with the `VERSION --use-registry-for-with-docker` flag.\n- Git config options for non-standard port and path prefix; these options are incompatible with a custom git substitution regex.\n- Experimental WAIT / END blocks, to allow for finer grain of control between pushing images and running commands.\n- Improved ARG error messages to include the ARG name associated with the error.\n\n### Fixed\n\n- Panic when running earthly --version under some versions of Windows\n- Removed duplicate git commit hash from earthly --version output string (when running dev versions of earthly)\n- Garbled auto-completion when using Earthfiles without a VERSION command (or with other warnings) [#1837](https://github.com/earthly/earthly/issues/1837).\n- Masking of cgroups for podman support.\n\n## v0.6.14 - 2022-04-11\n\n### Added\n\n- Experimental support for `SAVE IMAGE --no-manifest-list`. This option disables creating a multi-platform manifest list for the image, even if the image is created with a non-default platform. This allows the user to create non-native images (e.g. amd64 image on an M1 laptop) that are still compatible with AWS lambda. To enable this feature, please use `VERSION --use-no-manifest-list 0.6`. [#1802](https://github.com/earthly/earthly/pull/1802)\n- Introduced Experimental support for `--chmod` flag in `COPY`. To enable this feature, please use `VERSION --use-chmod 0.6`. [#1817](https://github.com/earthly/earthly/pull/1817)\n- Experimental `secret_provider` config option allows users to provide a script which returns secrets. [#1808](https://github.com/earthly/earthly/issues/1808)\n- `/etc/ssh/ssh_known_hosts` are now passed to buildkit. [#1769](https://github.com/earthly/earthly/issues/1769)\n\n### Fixed\n\n- Targets with the same `CACHE` commands incorrectly shared cached contents. [#1805](https://github.com/earthly/earthly/issues/1805)\n- Sometimes local outputs and pushes are skipped mistakenly when a target is referenced both via `FROM` and via `BUILD` [#1823](https://github.com/earthly/earthly/issues/1823)\n- `GIT CLONE` failure (`makeCloneURL does not support gitMatcher substitution`) when used with a self-hosted git repo that was configured under `~/.earthly/config.yml`  [#1757](https://github.com/earthly/earthly/issues/1757)\n\n## v0.6.13 - 2022-03-30\n\n### Added\n\n- Earthly now warns when encountering Earthfiles with no `VERSION` specified. In the future, the `VERSION` command will be mandatory. [#1775](https://github.com/earthly/earthly/pull/1775)\n\n### Changed\n\n- `WITH DOCKER` now merges changes into `/etc/docker/daemon.json` rather than overwriting the entire file; this change introduces `jq` as a dependency, which will\n  be auto-installed if missing.\n\n### Fixed\n\n- The `COPY` command, when used with `LOCALLY` was incorrectly ignoring the `WORKDIR` value. [#1792](https://github.com/earthly/earthly/issues/1792)\n- The `--shell-out-anywhere` feature introduced a bug which interfered with asynchronous builds. [#1785](https://github.com/earthly/earthly/issues/1785)\n- `EARTHLY_GIT_SHORT_HASH` was not set when building a remotely-referenced target. [#1787](https://github.com/earthly/earthly/issues/1787)\n\n## v0.6.12 - 2022-03-23\n\n### Changed\n\n- A more obvious error is printed if `WITH DOCKER` starts non-natively. This is not supported and it wasn't obvious before.\n- `WITH DOCKER` will keep any settings pre-applied in `/etc/docker/daemon.json` rather than overwriting them.\n\n### Added\n\n- The feature flag `--exec-after-build` has been enabled retroactively for `VERSION 0.5`. This speeds up large builds by 15-20%.\n- The feature flag `--parallel-load` has been enabled for every `VERSION`. This speeds up by parallelizing targets built for loading via `WITH DOCKER --load`.\n- `VERSION 0.0` is now permitted, however it is only meant for Earthly internal debugging purposes. `VERSION 0.0` disables all feature flags.\n- A new experimental mode in which `--platform` operates. To enable these features in your builds, set `VERSION --new-platform 0.6`:\n  - There is now a distinction between **user** platform and **native** platform. The user platform is the platform of the user running Earthly, while the native platform is the platform of the build worker (these can be different when using a remote buildkit)\n  - New platform shorthands are provided: `--platform=native`, `--platform=user`.\n  - New builtin args are available: `NATIVEPLATFORM`, `NATIVEOS`, `NATIVEARCH`, `NATIVEVARIANT` (these are the equivalent of the `USER*` and `TARGET*` platform args).\n  - When no platform is provided, earthly will default to the **native** platform\n  - Additionally, earthly now default to native platform for internal operations too (copy operations, git clones etc)\n  - Earthly now allows changing the platform in the middle of a target (`FROM --platform` is not a contradiction anymore). There is a distinction between the \"input\" platform of a target (the platform the caller passes in) vs the \"output\" platform (the platform that ends up being the final platform of the image). These can be different if the caller passes `BUILD --platform=something +target`, but the target starts with `FROM --platform=otherthing ...`.\n- Ability to shell-out in any Earthly command, (e.g. `SAVE IMAGE myimage:$(cat version)`), as well as in the middle of ARG strings. To enable this feature, use `VERSION --shell-out-anywhere 0.6`.\n\n### Fixed\n\n- An experimental fix for duplicate output when building images that are loaded via `WITH DOCKER --load`. This can be enabled via `VERSION --no-tar-build-output 0.6`.\n\n## v0.6.11 - 2022-03-17\n\n### Added\n\n- An experimental feature whereby `WITH DOCKER` parallelizes building of the\n  images to be loaded has been added. To enable this feature use\n  `VERSION --parallel-load 0.6`. [#1725](https://github.com/earthly/earthly/pull/1725)\n- Added `cache_size_pct` config option to allow specifying cache size as a percentage of disk space.\n\n### Fixed\n\n- Fixed a duplicate build issue when using `IF` together with `WITH DOCKER` [#1724](https://github.com/earthly/earthly/issues/1724)\n- Fixed a bug where `BUILD --platform=$ARG` did not expand correctly\n- Fixed issue preventing use of `WITH DOCKER` with docker systemd-based images such as `kind`, when used under hosts with cgroups v2.\n\n## v0.6.10 - 2022-03-03\n\n### Changed\n\n- reverted zeroing of mtime change that was introduced in v0.6.9; this restores the behavior of setting modification time to `2020-04-16T12:00`. [#1712](https://github.com/earthly/earthly/issues/1712)\n\n## v0.6.9 - 2022-03-02\n\n### Changed\n\n- Log sharing is enabled by default for logged in users, it can be disabled with `earthly config global.disable_log_sharing true`.\n- `SAVE ARTIFACT ... AS LOCAL` now sets mtime of output artifacts to the current time.\n\n### Added\n\n- Earthly is now 15-30% faster when executing large builds [#1589](https://github.com/earthly/earthly/issues/1589)\n- Experimental `HOST` command, which can be used like this: `HOST <domain> <ip>` to add additional hosts during the execution of your build. To enable this feature, use `VERSION --use-host-command 0.6`. [#1168](https://github.com/earthly/earthly/issues/1168)\n\n### Fixed\n\n- Errors when using inline caching indicating `invalid layer index` [#1635](https://github.com/earthly/earthly/issues/1635)\n- Podman can now use credentials from the default location [#1644](https://github.com/earthly/earthly/issues/1644)\n- Podman can now use the local registry cache without modifying `registries.conf` [#1675](https://github.com/earthly/earthly/pull/1675)\n- Podman can now use `WITH DOCKER --load` inside a target marked as `LOCALLY` [#1675](https://github.com/earthly/earthly/pull/1675)\n- Interactive sessions should now work with rootless configurations that have no apparent external IP address [#1573](https://github.com/earthly/earthly/issues/1573), [#1689](https://github.com/earthly/earthly/pull/1689)\n- On native Windows installations, Earthly properly detects the local git path when it's available [#1663](https://github.com/earthly/earthly/issues/1663)\n- On native Windows installations, Earthly will properly identify targets in Earthfiles outside of the current directory using the `\\` file separator  [#1663](https://github.com/earthly/earthly/issues/1663)\n- On native Windows installations, Earthly will save local artifacts to directories using the `\\` file separator [#1663](https://github.com/earthly/earthly/issues/1663)\n- A parsing error, when using `WITH DOCKER --load` in conjunction with new-style\n  build args. [#1696](https://github.com/earthly/earthly/issues/1696)\n- `ENTRYPOINT` and `CMD` were not properly expanding args when used in shell mode.\n- A race condition sometimes caused a `Canceled` error to be reported, instead of the real error that caused the build to fail\n\n## v0.6.8 - 2022-02-16\n\n### Fixed\n\n- `RUN --interactive` command exit codes were being ignored.\n- `RUN --ssh` command were failing to create `SSH_AUTH_SOCK` when run inside a `WITH DOCKER`. [#1672](https://github.com/earthly/earthly/issues/1672)\n\n### Changed\n\n- expanded help text for `earthly account register --help`.\n\n## v0.6.7 - 2022-02-09\n\nLog Sharing (experimental)\n\nThis version of Earthly includes an experimental log-sharing feature which will\nupload build-logs to the cloud when enabled.\n\nTo enable this experimental feature, you must first sign up for an earthly account\nby using the [`earthly account register`](https://docs.earthly.dev/docs/earthly-command#earthly-account-register)\ncommand, or by visiting [https://ci.earthly.dev/](https://ci.earthly.dev/)\n\nOnce logged in, you must explicitly enable log-sharing by running:\n\n    earthly config global.disable_log_sharing false\n\nIn a future version, log-sharing will be enabled by default for logged-in users; however, you will still be able to disable it, if needed.\n\nWhen log-sharing is enabled, you will see a message such as\n\n    Share your build log with this link: https://ci.earthly.dev/logs?logId=dc622821-9fe4-4a13-a1db-12680d73c442\n\nas the last line of `earthly` output.\n\n### Fixed\n\n- `GIT CLONE` now works with annotated git tags. [#1571](https://github.com/earthly/earthly/issues/1571)\n- `CACHE` command was not working for versions of earthly installed via homebrew.\n- Autocompletion bug when directory has both an Earthfile and subdir containing an earthfile.\n- Autocompletion bug when directory has two subdirectories where one is a prefix of the other.\n\n### Changed\n\n- `earthly account logout` raises an error when `EARTHLY_TOKEN` is set.\n\n## v0.6.6 - 2022-01-26\n\n### Added\n\n- Ability to change mounted secret file mode. fixes [#1434](https://github.com/earthly/earthly/issues/1434)\n\n### Changed\n\n- Permission errors related to reading `~/.earthly/config.yml` and `.env` files are now treated as errors rather than silently ignored (and assuming the file does not exist).\n- Speedup from pre-emptive execution of build steps prior to them being referenced in the build graph.\n\n### Fixed\n\n- earthly panic when running with `SUDO_USER` pointing to a user the current user did not have read/write permission; notably encountered when running under circleci.\n\n### Removed\n\n- Removed `--git-url-instead-of` flag, which has been replaced by `earthly config git ...`\n\n## v0.6.5 - 2022-01-24\n\n### Added\n\n- Ability to load a different `.env` file via the `--env-file` flag.\n- Added experimental feature than changes the ARGs defined in the `+base` target to be local, unless defined with a `--global` flag;\n  To enable this feature use `VERSION --explicit-global 0.6`.\n\n### Changed\n\n- Updated buildkit to include changes up to 17c237d69a46d61653746c03bcbe6953014b41a5\n\n### Fixed\n\n- `failed to solve: image  is defined multiple times for the same default platform` errors. [#1594](https://github.com/earthly/earthly/issues/1594), [#1582](https://github.com/earthly/earthly/issues/1582)\n- `failed to solve: image rmi after pull and retag: command failed: docker image rm ...: exit status 1: Error: No such image` errors. [#1590](https://github.com/earthly/earthly/issues/1590)\n\n## v0.6.4 - 2022-01-17\n\n### Fixed\n\n- Duplicate execution occurring when using ARGs. [#1572](https://github.com/earthly/earthly/issues/1572), [#1582](https://github.com/earthly/earthly/issues/1582)\n- Overriding builtin ARG value now displays an error (rather than silently ignoring it).\n\n## v0.6.3 - 2022-01-12\n\n### Changed\n\n- Updated buildkit to contain changes up to `15fb1145afa48bf81fbce41634bdd36c02454f99` from `moby/master`.\n\n### Added\n\n- Experimental `CACHE` command can be used in Earthfiles to optimize the cache in projects that perform better with incremental changes. For example, a Maven\n  project where `SNAPSHOT` dependencies are added frequently, an NPM project where `node_modules` change frequently, or programming languages using\n  incremental compilers. [#1399](https://github.com/earthly/earthly/issues/1399)\n- Config file entries can be deleted using a `--delete` flag (for example `earthly config global.conversion_parallelism --delete`). [#1449](https://github.com/earthly/earthly/issues/1449)\n- Earthly now provides the following [builtin ARGs](https://docs.earthly.dev/docs/earthfile/builtin-args): `EARTHLY_VERSION` and `EARTHLY_BUILD_SHA`. These\n  will be generally available in Earthly version 0.7+, however, they can be enabled earlier by using the `--earthly-version-arg`. [feature flag](https://docs.earthly.dev/docs/earthfile/features#feature-flags) [#1452](https://github.com/earthly/earthly/issues/1452)\n- Config option to disable `known_host` checking for specific git hosts by setting `strict_host_key_checking ` to `false` under the `git` section of `earthly/config.yml` (defaults to `true`).\n- Error check for using both `--interactive` and `--buildkit-host` (which are not currently supported together). [#1492](https://github.com/earthly/earthly/issues/1492)\n- `earthly ls [<project-ref>]` to list Earthfile targets.\n\n### Fixed\n\n- Gracefully handle empty string `\"\"` being provided as a value to `earthly config` commands. [#1449](https://github.com/earthly/earthly/issues/1449)\n- `known_host` entries were being ignored when custom `pattern` and `substituted` git config options were used (commonly used for [self-hosted git repos](https://docs.earthly.dev/docs/guides/auth#self-hosted-and-private-git-repositories))\n- Unable to connect to ssh server when `known_hosts` doesn't contain ssh-rsa host scan, but contains a different key-scan (e.g. `ecdsa-sha2-nistp256`, `ssh-ed25519`, etc).\n- When git auth is set to ssh but no user is given, default to current user (similar to calling `ssh example.com` vs `ssh user@example.com`).\n\n## v0.6.2 - 2021-12-01\n\n### Fixed\n\n- `unexpected non-relative path within git dir` bug when using case insensitive file systems [#1426](https://github.com/earthly/earthly/issues/1426)\n- Unable to access private GitHub repos [#1421](https://github.com/earthly/earthly/issues/1421)\n\n## v0.6.1 - 2021-11-29\n\n### Fixed\n\n- `BUILD` arguments containing a subshell (`$(...)`) were executed twice, and when `+base` target was empty would result errors such as `the first command has to be FROM, FROM DOCKERFILE, LOCALLY, ARG, BUILD or IMPORT` [#1448](https://github.com/earthly/earthly/issues/1448)\n- TLS error (`transport: authentication handshake failed: remote error: tls: no application protocol`) when enabling buildkit mTLS  [#1439](https://github.com/earthly/earthly/issues/1439)\n- Unable to save artifacts to local directory (`.`) [#1422](https://github.com/earthly/earthly/issues/1422)\n\n## v0.6.0 - 2021-11-24\n\nThis version promotes a number of features that have been previously in Experimental and Beta status. To make use of the features in this version you need to declare `VERSION 0.6` at the top of your Earthfile. If a version is not declared, then Earthly's interpreter will assume `VERSION 0.5`.\n\nIf you are not ready to update your scripts to take advantage of `VERSION 0.6`, then you may upgrade Earthly anyway and your scripts should continue to work as before, provided that they either declare `VERSION 0.5` or they don't declare a version at all.\n\nDeclaring `VERSION 0.6` is equivalent to\n\n```\nVERSION \\\n  --use-copy-include-patterns \\\n  --referenced-save-only \\\n  --for-in \\\n  --require-force-for-unsafe-saves \\\n  --no-implicit-ignore \\\n  0.5\n```\n\nIt is recommended to use `VERSION 0.6` instead as individual feature flags don't guarantee proper forwards-backwards compatibility. Note, however, that Earthly `0.5.*` is not able to run a `VERSION 0.6` Earthfile and will return an error.\n\nFor more information on the individual Earthfile feature flags see the [Earthfile version-specific features page](https://docs.earthly.dev/docs/earthfile/features).\n\n### Changed\n\n<!--changelog-parser-ignore-start-->\n- What Earthly outputs locally has changed in a way that is not backwards compatible. For an artifact or an image to be produced locally it needs to be part of a `BUILD` chain (or be part of the target being directly built). Artifacts and images introduced through `FROM` or `COPY` are no longer output locally.\n\n  To update existing scripts, you may issue a duplicate `BUILD` in addition to a `FROM` (or a `COPY`), should you wish for the referenced target to perform output.\n\n  For example, the following script\n\n  ```\n  FROM +some-target\n  COPY +another-target/my-artifact ./\n  ```\n\n  could become\n\n  ```\n  FROM +some-target\n  BUILD +some-target\n  COPY +another-target/my-artifact ./\n  BUILD +another-target\n  ```\n\n  in order to produce the same outputs.\n\n  For more details see [#896](https://github.com/earthly/earthly/issues/896).\n- The syntax for passing build args has been changed.\n\n  Earthly v0.5 (old way)\n\n  ```\n  FROM --build-arg NAME=john +some-target\n  COPY --build-arg NAME=john +something/my-artifact ./\n  WITH DOCKER --build-arg NAME=john --load +another-target\n    ...\n  END\n  ```\n\n  Earthly v0.6 (new way)\n\n  ```\n  FROM +some-target --NAME=john\n  COPY (+something/my-artifact --NAME=john) ./\n  WITH DOCKER --load (+another-target --NAME=john)\n    ...\n  END\n  ```\n\n  Passing build args on the command-line has also changed similarly:\n\n  Earthly v0.5 (old way)\n\n  ```\n  earthly --build-arg NAME=john +some-target\n  ```\n\n  Earthly v0.6 (new way)\n\n  ```\n  earthly +some-target --NAME=john\n  ```\n\n  This change is part of the [UDC proposal #581](https://github.com/earthly/earthly/issues/581). The old way of passing args is deprecated and will be removed in a future version (however, it still works in 0.6).\n<!--changelog-parser-ignore-end-->\n- If a `SAVE ARTIFACT` is unsafe (writing to a directory outside of the Earthfile directory), it'll require the `--force` flag.\n- `.earthlyignore` no longer includes any implicit entries like `Earthfile` or `.earthlyignore`. These will need to be specified explicitly. [#1294](https://github.com/earthly/earthly/issues/1294)\n- Buildkit was updated to `d429b0b32606b5ea52e6be4a99b69d67b7c722b2`. This includes a number of bug fixes, including eliminating crashes due to `panic failed to get edge`.\n\n### Added\n\n- Earthly now performs local image outputs to the local Docker daemon through a built-in registry. This speeds up the process drastically as common layers no longer need to be transferred over [#500](https://github.com/earthly/earthly/issues/500).\n- Earthly now enables additional parallelism to speed up certain operations that were previously serialized [#888](https://github.com/earthly/earthly/issues/888). Note that this setting was previously controlled by `--conversion-parallelism` flag or the `EARTHLY_CONVERSION_PARALLELISM` environment variable while in experimental stage. It has now been moved as part of the Earthly config and has been promoted to GA.\n- `COPY` transfers are sped up as only the necessary files are sent over to BuildKit [#1062](https://github.com/earthly/earthly/issues/1062).\n- [`WITH DOCKER`](https://docs.earthly.dev/docs/earthfile#with-docker) has been promoted to GA [#576](https://github.com/earthly/earthly/issues/576).\n- [`FROM DOCKERFILE`](https://docs.earthly.dev/docs/earthfile#from-dockerfile) has been promoted to GA.\n- [`LOCALLY`](https://docs.earthly.dev/docs/earthfile#locally) has been promoted to GA [#580](https://github.com/earthly/earthly/issues/580).\n- [`RUN --interactive` and `RUN --interactive-keep`](https://docs.earthly.dev/docs/earthfile#run) have been promoted to GA [#693](https://github.com/earthly/earthly/issues/693).\n- [`IF`](https://docs.earthly.dev/docs/earthfile#if) and [`FOR`](https://docs.earthly.dev/docs/earthfile#for) have been promoted to GA [#779](https://github.com/earthly/earthly/issues/779).\n- Support for Apple Silicon M1 has been promoted to GA [#722](https://github.com/earthly/earthly/issues/722).\n- [Multi-platform builds](https://docs.earthly.dev/docs/guides/multi-platform) have been promoted to GA [#536](https://github.com/earthly/earthly/issues/536).\n- Mounting secrets as files have been promoted as GA [#579](https://github.com/earthly/earthly/issues/579).\n- [`VERSION`](https://docs.earthly.dev/docs/earthfile#version) has been promoted to GA [#991](https://github.com/earthly/earthly/issues/991)\n- [User-defined commands (UDCs)](https://docs.earthly.dev/docs/guides/udc) have been promoted to GA [#581](https://github.com/earthly/earthly/issues/581).\n- Allow running `SAVE ARTIFACT` after `RUN --push` is now GA [#586](https://github.com/earthly/earthly/issues/586).\n- `SAVE ARTIFACT --if-exists` and `COPY --if-exists` have been promoted to GA [#588](https://github.com/earthly/earthly/issues/588).\n- [Shared cache](https://docs.earthly.dev/docs/guides/shared-cache) and `--ci` mode are now GA [#11](https://github.com/earthly/earthly/issues/11).\n- New builtin args `USERPLATFORM`, `USEROS`, `USERARCH`, and `USERVARIANT` which represent the platform, OS, architecture, and processor variant of the system Earthly is being called from [#1251](https://github.com/earthly/earthly/pull/1251). Thanks to @akrantz01 for the contribution!\n- Config option for buildkit's `max_parallelism` configuration. Use this to increase parallelism for faster builds or decrease parallelism when resources are constraint. The default is 20. [#1308](https://github.com/earthly/earthly/issues/1308)\n- Support for required ARGs (`ARG --required foo`) [#904](https://github.com/earthly/earthly/issues/904). Thanks to @camerondurham for the contribution!\n- Extended auto-completion to be build-arg aware. Typing `earthly +my-target --<tab><tab>` now prints possible build-args specific to `+my-target`. [#1330](https://github.com/earthly/earthly/pull/1330).\n- The console output now has an improved structure [#1226](https://github.com/earthly/earthly/pull/1226).\n\n### Fixed\n\n- Eliminated some spurious warnings (`ReadDataPacket failed`, `Failed to connect to terminal`, `failed to read from stdin` and others) [#1241](https://github.com/earthly/earthly/pull/1241).\n- Minor fixes related to the experimental Podman support [#1239](https://github.com/earthly/earthly/pull/1239).\n- Improved some error messages related to frontend detection [#1250](https://github.com/earthly/earthly/pull/1250).\n- Fixed Podman's ability to load OCI images [#1287](https://github.com/earthly/earthly/pull/1287).\n- Fixed homebrew installation on macOS 12. [#1370](https://github.com/earthly/earthly/pull/1370), [homebrew/earthly#13](https://github.com/earthly/homebrew-earthly/pull/13)\n- `failed due to failed to autodetect a supported frontend` errors will now include underlying reason for failure\n- Cache export was not honoring `EARTHLY_MAX_REMOTE_CACHE` setting.\n- Buildkit logs were not being sent to `earthly-buildkitd` container's output.\n- kind required permissions were not available in earthly-buildkitd.\n\n## v0.6.0-rc3 - 2021-11-15\n\n### Fixed\n\n- cache export was not honoring `EARTHLY_MAX_REMOTE_CACHE` setting\n- buildkit logs were not being sent to `earthly-buildkitd` container's output.\n- kind required permissions were not available in earthly-buildkitd.\n\n### Changed\n\n- docker and fsutils versions were set to match versions defined in earthly's buildkit fork.\n\n## v0.6.0-rc2 - 2021-11-01\n\n### Fixed\n\n- `failed due to failed to autodetect a supported frontend` errors will now include underlying reason for failure\n\n### Changed\n\n- Buildkit was updated to `d47b46cf2a16ca80a958384282e8028285b1866d`.\n\n## v0.6.0-rc1 - 2021-10-28\n\nThis version promotes a number of features that have been previously in Experimental and Beta status. To make use of the features in this version you need to declare `VERSION 0.6` at the top of your Earthfile. If a version is not declared, then Earthly's interpreter will assume `VERSION 0.5`.\n\nIf you are not ready to update your scripts to take advantage of `VERSION 0.6`, then you may upgrade Earthly anyway and your scripts should continue to work as before, provided that they either declare `VERSION 0.5` or they don't declare a version at all.\n\nDeclaring `VERSION 0.6` is equivalent to\n\n```\nVERSION \\\n  --use-copy-include-patterns \\\n  --referenced-save-only \\\n  --for-in \\\n  --require-force-for-unsafe-saves \\\n  --no-implicit-ignore \\\n  0.5\n```\n\nIt is recommended to use `VERSION 0.6` instead as individual feature flags don't guarantee proper forwards-backwards compatibility. Note, however, that Earthly `0.5.*` is not able to run a `VERSION 0.6` Earthfile and will return an error.\n\nFor more information on the individual Earthfile feature flags see the [Earthfile version-specific features page](https://docs.earthly.dev/docs/earthfile/features).\n\n### Added\n\n- Earthly now performs local image outputs to the local Docker daemon through a built-in registry. This speeds up the process drastically as common layers no longer need to be transferred over [#500](https://github.com/earthly/earthly/issues/500).\n- Earthly now enables additional parallelism to speed up certain operations that were previously serialized [#888](https://github.com/earthly/earthly/issues/888). Note that this setting was previously controlled by `--conversion-parallelism` flag or the `EARTHLY_CONVERSION_PARALLELISM` environment variable while in experimental stage. It has now been moved as part of the Earthly config and has been promoted to GA.\n- `COPY` transfers are sped up as only the necessary files are sent over to BuildKit [#1062](https://github.com/earthly/earthly/issues/1062).\n- [`WITH DOCKER`](https://docs.earthly.dev/docs/earthfile#with-docker) has been promoted to GA [#576](https://github.com/earthly/earthly/issues/576).\n- [`FROM DOCKERFILE`](https://docs.earthly.dev/docs/earthfile#from-dockerfile) has been promoted to GA.\n- Support for Apple Silicon M1 has been promoted to GA [#722](https://github.com/earthly/earthly/issues/722).\n- [Multi-platform builds](https://docs.earthly.dev/docs/guides/multi-platform) have been promoted to GA [#536](https://github.com/earthly/earthly/issues/536).\n- Mounting secrets as files have been promoted as GA [#579](https://github.com/earthly/earthly/issues/579).\n- [`VERSION`](https://docs.earthly.dev/docs/earthfile#version) has been promoted to GA [#991](https://github.com/earthly/earthly/issues/991)\n- [User-defined commands (UDCs)](https://docs.earthly.dev/docs/guides/udc) have been promoted to GA [#581](https://github.com/earthly/earthly/issues/581).\n- Allow running `SAVE ARTIFACT` after `RUN --push` is now GA [#586](https://github.com/earthly/earthly/issues/586).\n- `SAVE ARTIFACT --if-exists` and `COPY --if-exists` have been promoted to GA [#588](https://github.com/earthly/earthly/issues/588).\n- [Shared cache](https://docs.earthly.dev/docs/guides/shared-cache) and `--ci` mode are now GA [#11](https://github.com/earthly/earthly/issues/11).\n- [`LOCALLY`](https://docs.earthly.dev/docs/earthfile#locally) has been promoted to GA [#580](https://github.com/earthly/earthly/issues/580).\n- [`RUN --interactive` and `RUN --interactive-keep`](https://docs.earthly.dev/docs/earthfile#run) have been promoted to GA [#693](https://github.com/earthly/earthly/issues/693).\n- [`IF`](https://docs.earthly.dev/docs/earthfile#if) and [`FOR`](https://docs.earthly.dev/docs/earthfile#for) have been promoted to GA [#779](https://github.com/earthly/earthly/issues/779).\n- If a `SAVE ARTIFACT` is unsafe (writing to a directory outside of the Earthfile directory), it'll require the `--force` flag.\n- `.earthlyignore` no longer includes any implicit entries like `Earthfile` or `.earthlyignore`. These will need to be specified explicitly. [#1294](https://github.com/earthly/earthly/issues/1294)\n- The console output now has an improved structure [#1226](https://github.com/earthly/earthly/pull/1226).\n- Fixed homebrew installation on macOS 12. [#1370](https://github.com/earthly/earthly/pull/1370), [homebrew/earthly#13](https://github.com/earthly/homebrew-earthly/pull/13)\n### Changed\n\n<!--changelog-parser-ignore-start-->\n- What Earthly outputs locally has changed in a way that is not backwards compatible. For an artifact or an image to be produced locally it needs to be part of a `BUILD` chain (or be part of the target being directly built). Artifacts and images introduced through `FROM` or `COPY` are no longer output locally.\n\n  To update existing scripts, you may issue a duplicate `BUILD` in addition to a `FROM` (or a `COPY`), should you wish for the referenced target to perform output.\n\n  For example, the following script\n\n  ```\n  FROM +some-target\n  COPY +another-target/my-artifact ./\n  ```\n\n  could become\n\n  ```\n  FROM +some-target\n  BUILD +some-target\n  COPY +another-target/my-artifact ./\n  BUILD +another-target\n  ```\n\n  in order to produce the same outputs.\n\n  For more details see [#896](https://github.com/earthly/earthly/issues/896).\n- The syntax for passing build args has been changed.\n\n  Earthly v0.5 (old way)\n\n  ```\n  FROM --build-arg NAME=john +some-target\n  COPY --build-arg NAME=john +something/my-artifact ./\n  WITH DOCKER --build-arg NAME=john --load +another-target\n    ...\n  END\n  ```\n\n  Earthly v0.6 (new way)\n\n  ```\n  FROM +some-target --NAME=john\n  COPY (+something/my-artifact --NAME=john) ./\n  WITH DOCKER --load (+another-target --NAME=john)\n    ...\n  END\n  ```\n\n  Passing build args on the command-line has also changed similarly:\n\n  Earthly v0.5 (old way)\n\n  ```\n  earthly --build-arg NAME=john +some-target\n  ```\n\n  Earthly v0.6 (new way)\n\n  ```\n  earthly +some-target --NAME=john\n  ```\n\n  This change is part of the [UDC proposal #581](https://github.com/earthly/earthly/issues/581). The old way of passing args is deprecated and will be removed in a future version (however, it still works in 0.6).\n<!--changelog-parser-ignore-end-->\n- Add builtin args `USERPLATFORM`, `USEROS`, `USERARCH`, and `USERVARIANT` which represent the platform, OS, architecture, and processor variant of the system Earthly is being called from [#1251](https://github.com/earthly/earthly/pull/1251). Thanks to @akrantz01 for the contribution!\n- Support for required ARGs (`ARG --required foo`) [#904](https://github.com/earthly/earthly/issues/904). Thanks to @camerondurham for the contribution!\n- Add a config item for buildkit's `max_parallelism` configuration. Use this to increase parallelism for faster builds or decrease parallelism when resources are constraint. The default is 20. [#1308](https://github.com/earthly/earthly/issues/1308)\n- Extend auto-completion to be build-arg aware. Typing `earthly +my-target --<tab><tab>` now prints possible build-args specific to `+my-target`. [#1330](https://github.com/earthly/earthly/pull/1330).\n- Buildkit was updated to `d429b0b32606b5ea52e6be4a99b69d67b7c722b2`. This includes a number of bug fixes, including eliminating crashes due to `panic failed to get edge`.\n\n### Fixed\n\n- Eliminated some spurious warnings (`ReadDataPacket failed`, `Failed to connect to terminal`, `failed to read from stdin` and others) [#1241](https://github.com/earthly/earthly/pull/1241).\n- Minor fixes related to the experimental Podman support [#1239](https://github.com/earthly/earthly/pull/1239).\n- Improved some error messages related to frontend detection [#1250](https://github.com/earthly/earthly/pull/1250).\n- Fixed Podman's ability to load OCI images [#1287](https://github.com/earthly/earthly/pull/1287).\n\n## v0.5.24 - 2021-09-30\n\n### Added\n\n- New `--output` flag, which forces earthly to enable outputs, even when running under `--ci` mode [#1200](https://github.com/earthly/earthly/issues/1200).\n- Experimental support for Podman [#760](https://github.com/earthly/earthly/issues/760).\n- Automatically adds compatibility arguments for cases where docker is running under user namespaces.\n\n### Fixed\n\n- Removed spurious `BuildKit and Local Registry URLs are pointed at different hosts (earthly-buildkitd vs. 127.0.0.1)` warning.\n- Scrub git credentials when running under --debug mode.\n- \"FROM DOCKERFILE\" command was ignoring the path (when run on a remote target), which prevented including dockerfiles which were named something else.\n- Removed the creation of a temporary output directory when run in `--no-output` mode, or when building targets that don't output artifacts,\n  the temporary directory is now created just before it is needed.\n- Fixed race condition involving `WITH DOCKER` and `IF` statements, which resulted in `failed to solve: NotFound: no access allowed to dir` errors.\n\n## v0.5.23 - 2021-08-24\n\n- introduced `COPY --if-exists` which allows users to ignore errors which would have occurred [if the file did not exist](https://docs.earthly.dev/docs/earthfile#if-exists).\n- introduced new `ip_tables` config option for controlling which iptables binary is used; fixes #1160\n- introduced warning message when saving to paths above the current directory of the current Earthfile; these warnings will eventually become errors unless the `--force` [flag](https://docs.earthly.dev/docs/earthfile#force) is passed to `SAVE ARTIFACT`.\n- fixed remote BuildKit configuration options being ignored; fixes #1177\n- suppressed erroneous internal-term error messages which occurred when running under non-interactive ( e.g. `--ci` ) modes; fixes #1108\n- changed help text for `--artifact` mode\n- deb and yum packages no longer clear the earthly cache on upgrades\n\n\n## v0.5.22 - 2021-08-11\n\n- when running under `--ci` mode, earthly now raises an error if a user attempts to use the interactive debugger\n- updated underlying BuildKit version\n- print all request and responses to BuildKit when running under --debug mode\n- support for specifying files to ignore under `.earthlyignore` in addition to `.earthignore`; an error is raised if both exist\n- new ARG `EARTHLY_GIT_SHORT_HASH` will contain an 8 char representation of the current git commit hash\n- new ARG `EARTHLY_GIT_COMMIT_TIMESTAMP` will contain the timestamp of the current git commit\n- new ARG `EARTHLY_SOURCE_DATE_EPOCH` will contain the same value as `EARTHLY_GIT_COMMIT_TIMESTAMP` or 0 when the timestamp is not available\n- only directly referenced artifacts or images will be saved when the VERSION's --referenced-save-only feature flag is defined #896\n- experimental support for FOR statements, when the VERSION's --for-in feature flag is defined #1142\n- fixes bug where error was not being repeated as the final output\n- fixes bug where HTTPS-based git credentials were leaked to stdout\n\n## v0.5.20 - 2021-07-22\n\n- Support for passing true/false values to boolean flags #1109\n- fixes error that stated `http is insecure` when configuring a HTTPS git source. #1115\n\n## v0.5.19 - 2021-07-21\n\n- Improved selective file-transferring via BuildKit's include patterns; this feature is currently disabled by default, but can be enabled by including the `--use-copy-include-patterns` feature-flag in the `VERSION` definition (e.g. add `VERSION --use-copy-include-patterns 0.5` to the top of your Earthfiles). This will become enabled by default in a later version.\n- Support for host systems that have `nf_tables` rather than `ip_tables`.\n- Show hidden dev flags when `EARTHLY_AUTOCOMPLETE_HIDDEN=\"1\"` is set (or when running a custom-built version).\n- Improved crash logs.\n\n## v0.5.18 - 2021-07-08\n\n- Added a `--symlink-no-follow` flag to allow copying invalid symbolic links (https://github.com/earthly/earthly/issues/1067)\n- Updated BuildKit, which contains a fix for \"failed to get edge\" panic errors (https://github.com/earthly/earthly/issues/1016)\n- Fix bug that prevented using an absolute path to reference targets which contained relative imports\n- Added option to disable analytics data collection when environment variables `EARTHLY_DISABLE_ANALYTICS` or `DO_NOT_TRACK` are set.\n- Include version and help flags in autocompletion output.\n\n## v0.5.17 - 2021-06-15\n\n- Begin experimental official support for `earthly/earthly` and `earthly/buildkitd` images; including a new `entrypoint` for `earthly/earthly` (https://github.com/earthly/earthly/pull/1050)\n- When running in `verbose` mode, log all files sent to BuildKit (https://github.com/earthly/earthly/pull/1051, https://github.com/earthly/earthly/pull/1056)\n- Adjust `deb` and `rpm` packages to auto-install the shell completions though post-installation mechanisms (https://github.com/earthly/earthly/pull/1019, https://github.com/earthly/earthly/pull/1057)\n\n## v0.5.16 - 2021-06-03\n\n- fixes handling of `Error getting earthly dir` lookup failures which prevents earthly from running (https://github.com/earthly/earthly/issues/1026)\n- implements ability to perform local exports via buildkit-hosted local registry in order to speed up exports; the feature is currently disabled by default but can be enabled with `earthly config global.local_registry_host 'tcp://127.0.0.1:8371'` (https://github.com/earthly/earthly/issues/500)\n\n## v0.5.15 - 2021-05-27\n\n- `earthly config` is no longer experimental. (https://github.com/earthly/earthly/pull/979)\n- Running a target, will now `bootstrap` automatically, if it looks like `earthly bootstrap` has not been run yet. (https://github.com/earthly/earthly/pull/989)\n- `earthly bootstrap` ensures the permissions on the `.earthly` folder are correct (belonging to the user) ( https://github.com/earthly/earthly/pull/993)\n- Cache mount ID now depends on a target input hash which does not include inactive variables (https://github.com/earthly/earthly/pull/1000)\n- Added `EARTHLY_TARGET_PROJECT_NO_TAG` built-in argument (https://github.com/earthly/earthly/pull/1011)\n- When `~` is used as the path to a secret file, it now expands as expected. (https://github.com/earthly/earthly/pull/977)\n- Use the environment-specified `$HOME`, unless `$SUDO_USER` is set. If it is, use the users home directory. (https://github.com/earthly/earthly/pull/1015)\n\n\n## v0.5.14 - 2021-05-27\n\n- `earthly config` is no longer experimental. (https://github.com/earthly/earthly/pull/979)\n- Running a target, will now `bootstrap` automatically, if it looks like `earthly bootstrap` has not been run yet. (https://github.com/earthly/earthly/pull/989)\n- `earthly bootstrap` ensures the permissions on the `.earthly` folder are correct (belonging to the user) ( https://github.com/earthly/earthly/pull/993)\n- Cache mount ID now depends on a target input hash which does not include inactive variables (https://github.com/earthly/earthly/pull/1000)\n- Added `EARTHLY_TARGET_PROJECT_NO_TAG` built-in argument (https://github.com/earthly/earthly/pull/1011)\n- When `~` is used as the path to a secret file, it now expands as expected. (https://github.com/earthly/earthly/pull/977)\n\n\n## v0.5.13 - 2021-05-13\n\n- fixes panic on invalid (or incomplete) `~/.netrc` file (https://github.com/earthly/earthly/issues/980)\n\n## v0.5.12 - 2021-05-07\n\n- Adds a retry for remote BuildKit hosts when using the `EARTHLY_BUILDKIT_HOST` configuration option. (#952)\n- Re-fetch credentials when they expire (#957)\n- Make use of `~/.netrc` credentials when no config is set under `~/.earthly/config.yml` (#964)\n- Make use of auth credentials when performing a GIT CLONE command within an Earthfile. (#964)\n- Improved error output when desired secret does not exist, including the name of the missing secret. (#972)\n- Warn if `build-arg` appears after the target in CLI invocations.(#959)\n\n## v0.5.11 - 2021-04-27\n\n- Support for `FROM DOCKERFILE -f` (https://github.com/earthly/earthly/pull/950)\n- Fixes missing access to global arguments in user defined commands (https://github.com/earthly/earthly/pull/947)\n- Users's `~/.earthly` directory is now referenced when earthly is invoked with sudo\n\n\n## v0.5.10 - 2021-04-19\n\n- Added ability to run `WITH DOCKER` under `LOCALLY` (https://github.com/earthly/earthly/pull/840)\n- Fix `FROM DOCKERFILE` `--build-arg`s not being passed correctly (https://github.com/earthly/earthly/issues/932)\n- Docs: Add uninstall instructions\n- Docs: Improve onboarding tutorial based on user feedback\n\n\n## v0.5.9 - 2021-04-05\n\n- [**experimental**] Improved parallelization when using commands such as `IF`, `WITH DOCKER`, `FROM DOCKERFILE`, `ARG X=$(...)` and others. To enable this feature, pass `--conversion-parallelism=5` or set `EARTHLY_CONVERSION_PARALLELISM=5`. (https://github.com/earthly/earthly/issues/888)\n- Auto-detect MTU (https://github.com/earthly/earthly/issues/847)\n- MTU may set via config `earthly config global.cni_mtu 12345` (https://github.com/earthly/earthly/pull/906)\n- Hide `--debug` flag since it is only used for development on Earthly itself\n- Download and start buildkitd as part of the earthly bootstrap command\n- Improved buildkitd startup logic (https://github.com/earthly/earthly/pull/892)\n- Check for reserved target names and disallow them (e.g. `+base`) (https://github.com/earthly/earthly/pull/898)\n- Fix use of self-hosted repositories when a subdirectory is used (https://github.com/earthly/earthly/pull/897)\n\n\n## v0.5.8 - 2021-03-23\n\n- [**experimental**] Support for ARGs in user-defined commands (UDCs). UDCs are templates (much like functions in regular programming languages), which can be used to define a series of steps to be executed in sequence. In other words, it is a way to reuse common build steps in multiple contexts. This completes the implementation of UDCs and the feature is now in **experimental** phase (https://github.com/earthly/earthly/issues/581). For more information see the [UDC guide](https://docs.earthly.dev/guides/udc).\n- [**experimental**] New command: `IMPORT` (https://github.com/earthly/earthly/pull/868)\n  ```\n  IMPORT github.com/foo/bar:v1.2.3\n  IMPORT github.com/foo/buz:main AS zulu\n\n  ...\n\n  FROM bar+target\n  BUILD zulu+something\n  ```\n- Fix handling of some escaped quotes (https://github.com/earthly/earthly/issues/859)\n- Fix: empty targets are now valid (https://github.com/earthly/earthly/pull/872)\n- Fix some line continuation issues (https://github.com/earthly/earthly/pull/873 & https://github.com/earthly/earthly/pull/874)\n- Earthly now limits parallelism to `20`. This fixes some very large builds attempting to use resources all at the same time\n- Automatically retry TLS handshake timeout errors\n\n## v0.5.7 - 2021-03-13\n\n- raise error when duplicate target names exists in Earthfile\n- basic user defined commands (experimental)\n- cleans up console output for saving artifacts (#848)\n- implement support for WORKDIR under LOCALLY targets\n- fix zsh autocompletion issue for mac users\n  If the autocompletion bug persists for anyone (e.g. seeing an error like `command not found: __earthly__`), and the issues persists after upgrading to v0.5.7; it might be necessary to delete the _earthly autocompletion file before re-running earthly bootstrap (or alternatively manually replace `__earthly__` with the full path to the earthly binary).\n\n## v0.5.6 - 2021-03-09\n\n- This release removes the `ongoing` updates \"Provide intermittent updates on long-running targets (#844)\" from the previous release, as it has issues in the interactive mode.\n\n## v0.5.5 - 2021-03-08\n\n- Keep `.git` directory in build context. (#815 )\n- Wait extra time for buildkitd to start if the cache is larger than 30 GB  (#827)\n- *Experimental:* Allow RUN commands to open an interactive session (`RUN --interactive`), with the option to save the manual changes into the final image (`RUN --interactive-keep`) (#833)\n- Provide intermittent updates on long-running targets (#844)\n- Fix ZSH autocompletion in some instances (#838)\n\n## v0.5.4 - 2021-02-26\n\n- New experimental `--strict` flag, which doesn't allow the use of `LOCALLY`. `--strict` is now implied when using `--ci`. (https://github.com/earthly/earthly/pull/801)\n- Add help text when issuing `earthly config <item> --help`. Improved user experience. (https://github.com/earthly/earthly/pull/814)\n- Detect if the build doesn't start with a FROM-like command and return a meaningful error. Previously `FROM scratch` was assumed automatically. (https://github.com/earthly/earthly/issues/807)\n- Fix an issue where `.tmpXXXXX` directories were created in the current directory (https://github.com/earthly/earthly/pull/821)\n- Fix auto-complete in zsh (https://github.com/earthly/earthly/pull/811)\n- Improved startup logic for BuildKit daemon, which speeds up some rare edge cases (https://github.com/earthly/earthly/pull/808)\n- Print BuildKit logs if it crashes or times out on startup (https://github.com/earthly/earthly/pull/819)\n- Create config path if it's missing (https://github.com/earthly/earthly/pull/812)\n\n\n## v0.5.3 - 2021-02-24\n\n- Support for conditional logic using new `IF`, `ELSE IF`, and `ELSE` keywords (required for #779)\n- Support for copying artifacts to `LOCALLY` targets (required for #580)\n\n### Fixed\n- segfault when no output or error is displayed (fixes #798)\n- unable to run earthly in docker container with mounted host-docker socket (fixes #791)\n- `./.tmp-earthly-outXXXXXX` temp files are now stored under `./.tmp-earthly-out/tmpXXXXXX` and are correctly excluded from the build context\n\n\n## v0.5.2 - 2021-02-18\n\n- New experimental command for editing the Earthly config (https://github.com/earthly/earthly/issues/675)\n- `SAVE IMAGE --push` after a `RUN --push` now includes the effects of the `RUN --push` too (https://github.com/earthly/earthly/pull/754)\n- Improved syntax errors when parsing Earthfiles\n- Improved error message when QEMU is missing\n- Fix `earthly-linux-arm64` binary - was a Mac binary by mistake (https://github.com/earthly/earthly/issues/789)\n- Fix override of build arg not being detected properly (https://github.com/earthly/earthly/pull/790)\n- Fix image export error when it doesn't contain any `RUN` commands (https://github.com/earthly/earthly/issues/782)\n\n\n## v0.5.1 - 2021-02-08\n\n- Support for SAVE ARTIFACT under LOCALLY contexts; this allows one to run a command locally and save the output to a different container.\n- Support for build arg matrix; supplying multiple `--build-args` for the same value will cause the `BUILD` target to be built for each different build arg value.\n- Improvements for Apple M1 support\n- Improved errors when parsing invalid Earthfiles (to enable the new experimental code, set the `EARTHLY_ENABLE_AST` variable to `true`)\n\n## v0.5.0 - 2021-02-01\n\n- Switch to BSL license. For [more information about this decision, take a look at our blog post](https://blog.earthly.dev/every-open-core-company-should-be-a-source-available-company/).\n- `--platform` setting is now automatically propagated between Earthfiles. In addition, you can now specify the empty string `--platform=` to automatically detect your system's architecture.\n- `earthly/dind` images now available for `linux/arm/v7` and `linux/arm64`\n- Improved visibility of platform used for each build step, as well as for any build args that have been overridden.\n- Allow saving an artifact after a `RUN --push` (https://github.com/earthly/earthly/pull/735)\n- Allow specifying `--no-cache` for a single `RUN` command (https://github.com/earthly/earthly/issues/585)\n- There are now separate `SUCCESS` lines for each of the two possible phases of an earthly run: `main` and `push`.\n- [Support of popular cloud registries for the experimental shared cache feature is now properly documented](https://docs.earthly.dev/guides/shared-cache#compatibility-with-major-registry-providers)\n- Fix `SAVE IMAGE --cache-hint` not working correctly (https://github.com/earthly/earthly/issues/744)\n- Fix `i/o timeout` errors being cached and requiring BuildKit restart\n- Experimental support for running commands on the host system via `LOCALLY` (https://github.com/earthly/earthly/issues/580)\n- Bug fixes for Apple Silicon. `earthly-darwin-arm64` binary is now available. Please treat this version as highly experimental for now. (https://github.com/earthly/earthly/issues/722)\n\n## v0.5.0-rc2 - 2021-02-01\n\n- No details provided\n\n## v0.5.0-rc1 - 2021-02-01\n\n- No details provided\n\n## v0.4.6 - 2021-01-29\n\n- No details provided\n\n## v0.4.5 - 2021-01-13\n\n- Fix inconsistent `COPY --dir` behavior [#705](https://github.com/earthly/earthly/issues/705)\n- Fix `AS LOCAL` behavior with directories [#703](https://github.com/earthly/earthly/issues/703)\n\n## v0.4.4 - 2021-01-06\n\n- Improved experimental support for arm-based platforms, including Apple M1. Builds run natively on arm platforms now. (For Apple M1, you need to use darwin-amd64 download and have Rosetta 2 installed - the build steps themselves will run natively, however, via the BuildKit daemon).\n- Add `SAVE ARTIFACT --if-exists` (https://github.com/earthly/earthly/issues/588)\n- Fix an issue where comments at the end of the Earthfile were not allowed (https://github.com/earthly/earthly/issues/681)\n- Fix an issue where multiple `WITH DOCKER --load` with the same target, but different image tag were not working (https://github.com/earthly/earthly/issues/685)\n- Fix an issue where `SAVE ARTIFACT ./* AS LOCAL` was flattening subdirectories (https://github.com/earthly/earthly/issues/689)\n- Binaries for `arm5` and `arm6` are no longer supported\n\n## v0.4.3 - 2020-12-23\n\n- Fix regression for `WITH DOCKER --compose=... --load=...` (https://github.com/earthly/earthly/issues/676)\n- Improvements to the multiplatform experimental support. See the [multiplatform example](https://github.com/earthly/earthly/blob/main/examples/multiplatform/Earthfile).\n\n## v0.4.2 - 2020-12-22\n\n- fixed: `EARTHLY_GIT_PROJECT_NAME` contained the raw git URL when HTTPS-based auth was used (fixes #671)\n- feature: support for mounting secrets as files rather than environment variables\n- feature: experimental support for multi-platform builds\n- misc: sending anonymized usage metrics to earthly\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 12.3984375,
          "content": "# Contributing\n\n## Code of Conduct\n\nPlease refer to [code-of-conduct.md](./code-of-conduct.md) for details.\n\n## Using Earthly prerelease\n\nTo build Earthly from source, you need the same requirements as Earthly. We recommend that you use the prerelease version of Earthly for development purposes. To launch the prerelease Earthly, simply use the `./earthly` script provided in the root of the earthly repository. The prerelease Earthly tracks the version on main. You can use `./earthly --version` to identify which Git hash was used to build it.\n\n## Building from source\n\nTo build Earthly from source for your target system, use\n\n* Linux and WSL\n    ```bash\n    ./earthly +for-linux\n    ```\n* Mac\n    ```bash\n    ./earthly +for-darwin\n    ```\n* Mac with M1 chip\n    ```bash\n    ./earthly +for-darwin-m1\n    ```\n\nThis builds the earthly binary in `./build/*/*/earthly`, typically one of:\n\n* `./build/linux/amd64/earthly`\n* `./build/darwin/amd64/earthly`\n* `./build/darwin/arm64/earthly`\n\nIt also builds the buildkitd image.\n\nThe buildkitd image is tagged with your current branch name and also the built binary defaults to using that built image. The built binary will always check on startup whether it has the latest buildkitd running for its configured image name and will restart buildkitd automatically to update. If during your development you end up making changes to just the buildkitd image, the binary will pick up the change on its next run.\n\nFor development purposes, you may use the built `earthly` binary to rebuild itself. It's usually faster than switching between the built binary and the prerelease binary because it avoids constant buildkitd restarts. After the first initial build, you'll end up using:\n\n\n* Linux and WSL\n    ```bash\n    ./build/linux/amd64/earthly +for-linux\n    ```\n* Mac\n    ```bash\n    ./build/darwin/amd64/earthly +for-darwin\n    ```\n\n* Mac with M1 chip\n    ```bash\n    ./build/darwin/amd64/earthly +for-darwin-m1\n    ```\n\n## Delve\n\nTo use the [delve debugger](https://github.com/go-delve/delve) with the earthly binary, you need to disable optimizations in the 'go build' command. This is done using the -GO_GCFLAGS arg:\n\n```\n./earthly +for-own -GO_GCFLAGS='all=-N -l'\n```\n\nFrom there, you may use `dlv exec` against the binary, using `--` to separate dlv args from earthly args:\n\n```\ndlv exec ./build/own/earthly -- +base\nType 'help' for list of commands.\n\n(dlv) break /earthly/earthfile2llb/interpreter.go:670\nBreakpoint 1 set at 0x182866a for github.com/earthly/earthly/earthfile2llb.(*Interpreter).handleRun() /earthly/earthfile2llb/interpreter.go:670\n(dlv) continue\n Init 🚀\n————————————————————————————————————————————————————————————————————————————————\n\n           buildkitd | Found buildkit daemon as podman container (earthly-dev-buildkitd)\n\n Build 🔧\n————————————————————————————————————————————————————————————————————————————————\n\ngolang:1.20-alpine3.17 | --> Load metadata golang:1.20-alpine3.17 linux/amd64\n> github.com/earthly/earthly/earthfile2llb.(*Interpreter).handleRun() /earthly/earthfile2llb/interpreter.go:670 (hits goroutine(295):1 total:1) (PC: 0x182866a)\n(dlv)\n```\n\n## Running tests\n\nTo run most tests you can issue\n\n```bash\n./build/*/*/earthly -P \\\n  --secret DOCKERHUB_USER=<my-docker-username> \\\n  --secret DOCKERHUB_PASS=<my-docker-password-or-token> \\\n  +test --DOCKERHUB_AUTH=true\n```\n\nTo also build the examples, you can run\n\n```bash\n./build/*/*/earthly -P  \\\n  --secret DOCKERHUB_USER=<my-docker-username> \\\n  --secret DOCKERHUB_PASS=<my-docker-password-or-token> \\\n  +test-all --DOCKERHUB_AUTH=true\n```\n\nIt is also possible to run tests without credentials. But running all of them, or running too frequently may incur rate limits. You could run a single test, without credentials like this:\n\n```bash\n./build/*/*/earthly -P ./tests+env-test\n```\n\nIf you don't want to specify these directly on the CLI, or don't want to type these each time, it's possible to store them in [.arg and .secret files](https://docs.earthly.dev/docs/earthly-command#build-args) instead.\nHere is a template to get you started:\n\n```shell\n# .arg file\nDOCKERHUB_AUTH=true\n```\n\n```shell\n# .secret file\nDOCKERHUB_USER=<my-docker-username>\nDOCKERHUB_PASS=<my-docker-password-or-token>\n```\n\n### Running tests with an insecure pull through cache\n\nThe [Insecure Docker Hub Cache Example](https://docs.earthly.dev/ci-integration/pull-through-cache#insecure-docker-hub-cache-example), provides a guide on both\nrunning an insecure docker hub pull through cache as well as configuring Earthly to use that cache.\n\nSince Earthly uses itself for running the tests (Earthly-in-Earthly), simply configuring `~/.earthly/config.yml`[^dir] is insufficient -- one must also configure the\nembedded version of Earthly to use the cache via build-args:\n\n```bash\n./build/*/*/earthly -P ./tests+all --DOCKERHUB_MIRROR=<ip-address-or-hostname>:<port> --DOCKERHUB_MIRROR_INSECURE=true\n```\n\nor if you are using a plain http cache, use:\n\n```bash\n./build/*/*/earthly -P ./tests+all --DOCKERHUB_MIRROR=<ip-address-or-hostname>:<port> --DOCKERHUB_MIRROR_HTTP=true\n```\n\n### Running tests with a mirror that requires authentication\n\nTo use a mirror that requires authentication, you can run:\n\n```bash\n./build/*/*/earthly -P \\\n  --secret DOCKERHUB_MIRROR_USER=<my-mirror-username> \\\n  --secret DOCKERHUB_MIRROR_PASS=<my-mirror-password> \\\n  ./tests+all --DOCKERHUB_MIRROR=<ip-address-or-hostname>:<port> --DOCKERHUB_MIRROR_AUTH=true\n```\n\nYou can alternatively store these settings in the `.arg` and `.secret` files:\n\n```shell\n# .arg file\nDOCKERHUB_MIRROR=<ip-address-or-hostname>:<port>\nDOCKERHUB_MIRROR_AUTH=true\n```\n\n```shell\n# .secret file\nDOCKERHUB_MIRROR_USER=<my-mirror-username>\nDOCKERHUB_MIRROR_PASS=<my-mirror-password>\n```\n\n### Running tests using earthly's internal mirror (only for members of the earthly org)\n\nIf you have access to `earthly-technologies/core`, you can make use of the internal mirror by running:\n\n```bash\n./build/*/*/earthly -P \\\n  ./tests+all --DOCKERHUB_MIRROR_AUTH_FROM_CLOUD_SECRETS=true\n```\n\nwhich will use the credentials which are stored in earthly's [cloud-hosted secrets](https://docs.earthly.dev/earthly-cloud/cloud-secrets).\n\n\n## Updates to buildkit or fsutil\n\nEarthly is built against a fork of [buildkit](https://github.com/earthly/buildkit) and [fsutil](https://github.com/earthly/fsutil).\n\nTo work with changes to this fork, you can use `earthly +for-linux --BUILDKIT_PROJECT=../buildkit`. This will use the local directory `../buildkit` for the buildkit code, when using buildkit in both `go.mod` and when building the buildkitd image.\n\nFor contributions that require updates to these forks, a PR must be opened in the earthly-fork of the repository, and a corresponding PR should\nbe opened in the earthly repository -- please link the two PRs together, in order to show that earthly's tests will continue to pass with the changes to buildkit or fsutil.\n\nThe linked-PRs should be merged at the same time, in order to prevent earthly's main branch from pointing to a non-main branch of buildkit.\nThis is because the buildkit tests in the earthly fork of buildkit may not all pass -- this is a tech-debt trade-off -- instead of fixing (and extending these tests),\nwe instead rely on the earthly integration tests to pass before merging in changes to our fork.\n\nThe earthly-fork of the buildkit repository does not automatically squash commits; if you are submitting a PR for a new feature, it must be squashed manually.\nThe buildkit github repo is only setup to explicitly create a new merge commit for all merges -- this means you will have to go update your PR in earthly with a reference to\nthe new merge-commit (and wait for tests to run again); however, you may do a `git merge --ff-only <branch> && git push` using git on the command line, which will speed up the merge\nprocess, since you will not have to edit your linked earthly PR (since a fast-forward change will not create a new merge commit, therefore allowing you to keep the existing referenced git sha in the\nearthly PR).\n\nIf on the otherhand, you are pulling in upstream changes from moby, they should never be squashed.\n\nTo update earthly's reference to buildkit, you may run `earthly +update-buildkit --BUILDKIT_GIT_ORG=<git-user-or-org> --BUILDKIT_GIT_SHA=<40-char-git-reference-here>`.\n\nUpdates to fsutil must first be vendored into buildkit, then updated under `go.mod`; additional docs and scripts exist in the buildkit repo.\n\n\n## Running buildkit under debug mode\n\nBuildkit's scheduler has a debug mode, which can be enabled with the following `~/.earthly/config.yml`[^dir] config:\n\n```yml\nglobal:\n  buildkit_additional_args: [ '-e', 'BUILDKIT_SCHEDULER_DEBUG=1' ]\n```\n\nthen run `earthly --debug +target`.\n\nThis will produce scheduler debug messages such as\n\n```\ntime=\"2022-10-27T18:18:06Z\" level=debug msg=\"<< unpark [eyJzbCI6eyJmaWxlIjoiRWFydGhmaWxlIiwic3RhcnRMaW5lIjoyMSwic3RhcnRDb2x1bW4iOjQsImVuZExpbmUiOjIxLCJlbmRDb2x1bW4iOjI1fSwidGlkIjoiOTEyMWZkNzYtYjI5MS00YmQyLTg2MGUtNTZhYzJjZDVhMmY3IiwidG5tIjoiK3NsZWVwIiwicGx0IjoibGludXgvYW1kNjQifQ==] RUN --no-cache sleep 123\\n\"\ntime=\"2022-10-27T18:18:06Z\" level=debug msg=\"> creating jzaxegge8eh5hjqe33jybv2ml [/bin/sh -c EARTHLY_LOCALLY=false PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin /usr/bin/earth_debugger /bin/sh -c 'sleep 123']\" span=\"[eyJzbCI6eyJmaWxlIjoiRWFydGhmaWxlIiwic3RhcnRMaW5lIjoyMSwic3RhcnRDb2x1bW4iOjQsImVuZExpbmUiOjIxLCJlbmRDb2x1bW4iOjI1fSwidGlkIjoiOTEyMWZkNzYtYjI5MS00YmQyLTg2MGUtNTZhYzJjZDVhMmY3IiwidG5tIjoiK3NsZWVwIiwicGx0IjoibGludXgvYW1kNjQifQ==] RUN --no-cache sleep 123\"\n```\n\n## Gotchas\n\n### Auth\n\nIf you have issues with git-related features or with private docker registries, make sure you have configured auth correctly. See the [auth page](https://docs.earthly.dev/guides/auth) for more details.\n\nYou may need to adjust the docker login command in the `earthly-integration-test-base:` target by removing the Earthly repository and adjusting for your login credentials provider.\n\n### Documentation\n\nWe maintain three different branches for [0.6](https://github.com/earthly/earthly/tree/docs-0.6), [0.7](https://github.com/earthly/earthly/tree/docs-0.7) and [0.8](https://github.com/earthly/earthly/tree/docs-0.8) docs, which are automatically propagated to [docs.earthly.dev](https://docs.earthly.dev/) (which has a dropdown options to switch between versions).\n\nDocumentation related to new unreleased features should be submitted in a PR to `main`, which we will merge into the `docs-0.8` branch when we perform a release.\n\nTo contribute improvements to documentation related to currently released features, please open a PR against the `docs-0.8` branch; we will cherry-pick these changes to the older documentation branches if necessary.\n\n### Config\n\nStarting with [v0.6.30](CHANGELOG.md#v0630---2022-11-22), the default location of the built binary's config file has\nchanged to `~/.earthly-dev/config.yml`. The standard location is not used as a fallback; it is possible to `export EARTHLY_CONFIG=~/.earthly/config.yml`, or create a symlink if required.\n\n## Prereleases\n\nIn addition to the `./earthly` prerelease script, we maintain a repository dedicated to [prereleases versions](https://github.com/earthly/earthly-staging/releases) of earthly.\n\nThe prerelease versions follow a pseudo-semantic versioning scheme: `0.<epoch>.<decimal-git-sha>`; which is described in greater detail in the repository's [README](https://github.com/earthly/earthly-staging).\n\nAdditionally, prerelease docker images are pushed to [earthly/earthly-staging](https://hub.docker.com/r/earthly/earthly-staging/tags) and [earthly/buildkitd-staging](https://hub.docker.com/r/earthly/buildkitd-staging/tags).\n\n## CLA\n\n### Individual\n\nAll contributions must indicate agreement to the [Earthly Contributor License Agreement](https://gist.github.com/vladaionescu/ed990fa149a38a53ac74b64155bc6766) by logging into GitHub via the CLA assistant and signing the provided CLA. The CLA assistant will automatically notify the PRs that require CLA signing.\n\n### Entity\n\nIf you are an entity, please use the [Earthly Contributor License Agreement form](https://earthly.dev/cla-form) in addition to requiring your individual contributors to sign all contributions.\n\n[^dir]: Depending on the point in time earthly is being built the actual location [may be different](#config)\n"
        },
        {
          "name": "Earthfile",
          "type": "blob",
          "size": 41.357421875,
          "content": "VERSION 0.8\nPROJECT earthly-technologies/core\n\n# TODO update to 3.18; however currently \"podman login\" (used under not-a-unit-test.sh) will error with\n# \"Error: default OCI runtime \"crun\" not found: invalid argument\".\nFROM golang:1.21-alpine3.17\n\nRUN apk add --update --no-cache \\\n    bash \\\n    bash-completion \\\n    binutils \\\n    ca-certificates \\\n    coreutils \\\n    curl \\\n    findutils \\\n    g++ \\\n    git \\\n    grep \\\n    less \\\n    make \\\n    openssl \\\n    openssh \\\n    util-linux\n\nWORKDIR /earthly\n\n# deps downloads and caches all dependencies for earthly. When called directly,\n# go.mod and go.sum will be updated locally.\ndeps:\n    FROM +base\n    RUN curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.54.1\n    COPY go.mod go.sum ./\n    COPY ./ast/go.mod ./ast/go.sum ./ast\n    COPY ./util/deltautil/go.mod ./util/deltautil/go.sum ./util/deltautil\n    RUN go mod download\n    SAVE ARTIFACT go.mod AS LOCAL go.mod\n    SAVE ARTIFACT go.sum AS LOCAL go.sum\n\n# code downloads and caches all dependencies for earthly and then copies the go code\n# directories into the image.\n# If BUILDKIT_PROJECT or CLOUD_API environment variables are set it will also update the go mods\n# for the local versions\ncode:\n    FROM +deps\n    # Use BUILDKIT_PROJECT to point go.mod to a buildkit dir being actively developed. Examples:\n    #   --BUILDKIT_PROJECT=../buildkit\n    #   --BUILDKIT_PROJECT=github.com/earthly/buildkit:<git-ref>\n    ARG BUILDKIT_PROJECT\n    IF [ \"$BUILDKIT_PROJECT\" != \"\" ]\n        COPY --dir \"$BUILDKIT_PROJECT\"+code/buildkit /buildkit\n        RUN go mod edit -replace github.com/moby/buildkit=/buildkit\n        RUN go mod download\n    END\n    # Use CLOUD_API to point go.mod to a cloud API dir being actively developed. Examples:\n    #   --CLOUD_API=../cloud/api+proto/api/public/'*'\n    #   --CLOUD_API=github.com/earthly/cloud/api:<git-ref>+proto/api/public/'*'\n    #   --CLOUD_API=github.com/earthly/cloud-api:<git-ref>+code/'*'\n    ARG CLOUD_API\n    IF [ \"$CLOUD_API\" != \"\" ]\n        COPY --dir \"$CLOUD_API\" /cloud-api/\n        RUN go mod edit -replace github.com/earthly/cloud-api=/cloud-api\n        RUN go mod download\n    END\n    COPY ./ast/parser+parser/*.go ./ast/parser/\n    COPY --dir analytics autocomplete billing buildcontext builder logbus cleanup cloud cmd config conslogging debugger \\\n        dockertar docker2earthly domain features internal slog states util variables regproxy ./\n    COPY --dir buildkitd/buildkitd.go buildkitd/settings.go buildkitd/certificates.go buildkitd/\n    COPY --dir earthfile2llb/*.go earthfile2llb/\n    COPY --dir ast/antlrhandler ast/spec ast/hint ast/command ast/commandflag ast/*.go ast/\n    COPY --dir inputgraph/*.go inputgraph/testdata inputgraph/\n\n# update-buildkit updates earthly's buildkit dependency.\nupdate-buildkit:\n    FROM +code # if we use deps, go mod tidy will remove a bunch of requirements since it won't have access to our codebase.\n    ARG BUILDKIT_GIT_SHA\n    ARG BUILDKIT_GIT_BRANCH=earthly-main\n    ARG BUILDKIT_GIT_ORG=earthly\n    ARG BUILDKIT_GIT_REPO=buildkit\n    COPY (./buildkitd+buildkit-sha/buildkit_sha --BUILDKIT_GIT_ORG=\"$BUILDKIT_GIT_ORG\" --BUILDKIT_GIT_SHA=\"$BUILDKIT_GIT_SHA\" --BUILDKIT_GIT_BRANCH=\"$BUILDKIT_GIT_BRANCH\") buildkit_sha\n    BUILD  ./buildkitd+update-buildkit-earthfile --BUILDKIT_GIT_ORG=\"$BUILDKIT_GIT_ORG\" --BUILDKIT_GIT_SHA=\"$(cat buildkit_sha)\" --BUILDKIT_GIT_REPO=\"$BUILDKIT_GIT_REPO\"\n    RUN --no-cache go mod edit -replace \"github.com/moby/buildkit=github.com/$BUILDKIT_GIT_ORG/$BUILDKIT_GIT_REPO@$(cat buildkit_sha)\"\n    RUN --no-cache go mod tidy\n    SAVE ARTIFACT go.mod AS LOCAL go.mod\n    SAVE ARTIFACT go.sum AS LOCAL go.sum\n\nlint-scripts-base:\n    FROM alpine:3.18\n\n    ARG TARGETARCH\n\n    IF [ $TARGETARCH == \"arm64\" ]\n        RUN echo \"Downloading, and manually installing shellcheck for ARM\" && \\\n            wget https://github.com/koalaman/shellcheck/releases/download/stable/shellcheck-stable.linux.aarch64.tar.xz && \\\n            tar -xf shellcheck-stable.linux.aarch64.tar.xz && \\\n            mv shellcheck-stable/shellcheck /usr/bin/shellcheck\n    ELSE\n        RUN echo \"Installing shellcheck from Alpine repos\" && \\\n            apk add --update --no-cache shellcheck\n    END\n\n    WORKDIR /shell_scripts\n\nlint-scripts-misc:\n    FROM +lint-scripts-base\n    COPY ./earthly ./scripts/install-all-versions.sh ./buildkitd/entrypoint.sh ./earthly-entrypoint.sh \\\n        ./buildkitd/dockerd-wrapper.sh ./buildkitd/docker-auto-install.sh ./buildkitd/oom-adjust.sh.template \\\n        ./.buildkite/*.sh \\\n        ./scripts/tests/*.sh \\\n        ./scripts/tests/docker-build/*.sh \\\n        ./scripts/*.sh \\\n        ./shell_scripts/\n    # some scripts need to source /etc/os-release for operating system release information,\n    # so -x is needed to let shellcheck read that file.\n    RUN shellcheck -x shell_scripts/*\n\nlint-scripts-auth-test:\n    FROM +lint-scripts-base\n    COPY ./scripts/tests/auth/*.sh ./\n    # the auth test script make use of a common setup.sh which contain unused variables\n    # when run directly; so we must exclude checking this directly, and make use of the -x\n    # flag to source setup.sh during analysis.\n    RUN shellcheck -x test-*.sh\n\n# lint-scripts runs the shellcheck package to detect potential errors in shell scripts\nlint-scripts:\n    BUILD +lint-scripts-auth-test\n    BUILD +lint-scripts-misc\n\n# earthly-script-no-stdout validates the ./earthly script doesn't print anything to stdout (stderr only)\n# This is to ensure commands such as: MYSECRET=\"$(./earthly secrets get -n /user/my-secret)\" work\nearthly-script-no-stdout:\n    # This validates the ./earthly script doesn't print anything to stdout (it should print to stderr)\n    # This is to ensure commands such as: MYSECRET=\"$(./earthly secrets get -n /user/my-secret)\" work\n    FROM earthly/dind:alpine-3.19-docker-25.0.5-r0\n    RUN apk add --no-cache --update bash\n    COPY earthly .earthly_version_flag_overrides .\n\n    # This script performs an explicit \"docker pull earthlybinaries:prerelease\" which can cause rate-limiting\n    # to work-around this, we will copy an earthly binary in, and disable auto-updating (and therefore don't require a WITH DOCKER)\n    COPY +earthly/earthly /root/.earthly/earthly-prerelease\n    RUN EARTHLY_DISABLE_FRONTEND_DETECTION=true EARTHLY_DISABLE_AUTO_UPDATE=true ./earthly --version > earthly-version-output\n\n    RUN test \"$(cat earthly-version-output | wc -l)\" = \"1\"\n    RUN grep '^earthly version.*$' earthly-version-output # only --version info should go to stdout\n\n# lint runs basic go linters against the earthly project.\nlint:\n    FROM +code\n    COPY ./.golangci.yaml ./\n    RUN golangci-lint run\n\nlint-newline-ending:\n    FROM alpine:3.18\n    WORKDIR /everything\n    COPY . .\n    # test that line endings are unix-style\n    RUN set -e; \\\n        code=0; \\\n        for f in $(find . -not -path \"./.git/*\" -type f \\( -iname '*.go' -o -iname 'Earthfile' -o -iname '*.earth' -o -iname '*.md' -o -iname '*.json' \\) | grep -v \"ast/tests/empty-targets.earth\" ); do \\\n            if ! dos2unix < \"$f\" | cmp - \"$f\"; then \\\n                echo \"$f contains windows-style newlines and must be converted to unix-style (use dos2unix to fix)\"; \\\n                code=1; \\\n            fi; \\\n        done; \\\n        exit $code\n    # test file ends with a single newline\n    RUN set -e; \\\n        code=0; \\\n        for f in $(find . -not -path \"./.git/*\" -type f \\( -iname '*.yml' -o -iname '*.go' -o -iname '*.sh' -o -iname '*.template' -o -iname 'Earthfile' -o -iname '*.earth' -o -iname '*.md' -o -iname '*.json' \\) | grep -v \"ast/tests/empty-targets.earth\" | grep -v \"tests/version/version-only.earth\" | grep -v \"examples/mkdocs\" ); do \\\n            if [ \"$(tail -c 1 $f)\" != \"$(printf '\\n')\" ]; then \\\n                echo \"$f does not end with a newline\"; \\\n                code=1; \\\n            fi; \\\n        done; \\\n        exit $code\n    RUN export f=ast/tests/empty-targets.earth && \\\n    if [ \"$(tail -c 1 $f)\" = \"$(printf '\\n')\" ]; then \\\n            echo \"$f is a special-case test which must not end with a newline.\"; \\\n            exit 1; \\\n        fi\n    # check for files with trailing newlines\n    RUN set -e; \\\n        code=0; \\\n        for f in $(find . -not -path \"./.git/*\" -type f \\( -iname '*.go' -o -iname 'Earthfile' -o -iname '*.earth' -o -iname '*.md' -o -iname '*.json' \\) | grep -v \"ast/tests/empty-targets.earth\" | grep -v \"ast/parser/earth_parser.go\" | grep -v \"ast/parser/earth_lexer.go\" ); do \\\n            if [ \"$(tail -c 2 $f)\" == \"$(printf '\\n\\n')\" ]; then \\\n                echo \"$f has trailing newlines\"; \\\n                code=1; \\\n            fi; \\\n        done; \\\n        exit $code\n\nvale:\n    WORKDIR /\n    RUN curl -sfL https://install.goreleaser.com/github.com/ValeLint/vale.sh | sh -s v2.10.3\n    WORKDIR /etc/vale\n    COPY .vale/ .\n\n# markdown-spellcheck runs vale against md files\nmarkdown-spellcheck:\n    FROM --platform=linux/amd64 +vale\n    WORKDIR /everything\n    COPY . .\n    # TODO figure out a way to ignore this pattern in vale (doesn't seem to be working under spelling's filter option)\n    RUN find . -type f -iname '*.md' | xargs -n 1 sed -i 's/{[^}]*}//g'\n    # TODO remove the greps once the corresponding markdown files have spelling fixed (or techterms added to .vale/styles/HouseStyle/tech-terms/...\n    RUN find . -type f -iname '*.md' | xargs vale --config /etc/vale/vale.ini --output line --minAlertLevel error\n\n# mocks runs 'go generate' against this module and saves generated mock files\n# locally.\nmocks:\n    FROM +code\n    RUN go install git.sr.ht/~nelsam/hel@latest && go install golang.org/x/tools/cmd/goimports@latest\n    RUN go generate ./...\n    FOR mockfile IN $(find . -name 'helheim*_test.go')\n        SAVE ARTIFACT $mockfile AS LOCAL $mockfile\n    END\n\nunit-test-parser:\n    FROM +deps\n    COPY scripts/unit-test-parser/main.go .\n    RUN go build -o testparser main.go\n    SAVE ARTIFACT testparser\n\n# unit-test runs unit tests (and some integration tests).\nunit-test:\n    FROM +code\n    RUN apk add --no-cache --update podman fuse-overlayfs\n    COPY +unit-test-parser/testparser .\n    COPY not-a-unit-test.sh .\n\n    ARG testname # when specified, only run specific unit-test, otherwise run all.\n\n    # pkgname determines the package name (or names) that will be tested. The go\n    # submodules must be specified explicitly or they will not be run, as\n    # \"./...\" does not match submodules.\n    ARG pkgname = ./...\n\n    ARG DOCKERHUB_MIRROR\n    ARG DOCKERHUB_MIRROR_INSECURE=false\n    ARG DOCKERHUB_MIRROR_HTTP=false\n    ARG DOCKERHUB_MIRROR_AUTH=false\n    ARG DOCKERHUB_MIRROR_AUTH_FROM_CLOUD_SECRETS=false\n\n    IF [ -n \"$DOCKERHUB_MIRROR\" ]\n        RUN mkdir -p /etc/docker\n        RUN echo \"{\\\"registry-mirrors\\\": [\\\"http://$DOCKERHUB_MIRROR\\\"]\" > /etc/docker/daemon.json\n        IF [ \"$DOCKERHUB_MIRROR_INSECURE\" = \"true\" ] || [ \"$DOCKERHUB_MIRROR_HTTP\" = \"true\" ]\n          RUN echo \", \\\"insecure-registries\\\": [\\\"$DOCKERHUB_MIRROR\\\"]\" >> /etc/docker/daemon.json\n        END\n        RUN echo \"}\" >> /etc/docker/daemon.json\n    END\n    IF [ \"$DOCKERHUB_MIRROR_AUTH_FROM_CLOUD_SECRETS\" = \"true\" ]\n        RUN if [ \"$DOCKERHUB_MIRROR_AUTH\" = \"true\" ]; then echo \"ERROR: DOCKERHUB_MIRROR_AUTH_FROM_CLOUD_SECRETS and DOCKERHUB_MIRROR_AUTH are mutually exclusive\" && exit 1; fi\n        WITH DOCKER\n            RUN --secret DOCKERHUB_MIRROR_USER=dockerhub-mirror/user \\\n                --secret DOCKERHUB_MIRROR_PASS=dockerhub-mirror/pass \\\n                USE_EARTHLY_MIRROR=true ./not-a-unit-test.sh\n        END\n    ELSE IF [ \"$DOCKERHUB_MIRROR_AUTH\" = \"true\" ]\n        WITH DOCKER\n            RUN --secret DOCKERHUB_MIRROR_USER \\\n                --secret DOCKERHUB_MIRROR_PASS \\\n                ./not-a-unit-test.sh\n        END\n    ELSE\n        RUN ./not-a-unit-test.sh\n    END\n\n    # The following are separate go modules and need to be tested separately.\n    # The not-a-unit-test.sh script above actually DOES run unit-tests as well\n    BUILD ./ast+unit-test\n    BUILD ./util/deltautil+unit-test\n\n# offline-test runs offline tests with network set to none\noffline-test:\n    FROM +code\n    RUN --network=none (go test -run TestOffline ./cloud || kill $$) | tee test.log\n    RUN if grep 'no tests to run' test.log; then echo \"error: no test found\" && exit 1; fi\n\n# submodule-decouple-check checks that go submodules within earthly do not\n# depend on the core earthly project.\nsubmodule-decouple-check:\n    FROM +code\n    RUN for submodule in github.com/earthly/earthly/ast github.com/earthly/earthly/util/deltautil; \\\n    do \\\n        for dep in $(go list -f '{{range .Deps}}{{.}} {{end}}' $submodule/...); \\\n        do \\\n            if [ \"$(go list -f '{{if .Module}}{{.Module}}{{end}}' $dep)\" == \"github.com/earthly/earthly\" ]; \\\n            then \\\n               echo \"FAIL: submodule $submodule imports $dep, which is in the core 'github.com/earthly/earthly' module\"; \\\n               exit 1; \\\n            fi; \\\n        done; \\\n    done\n\n# changelog saves the CHANGELOG.md as an artifact\nchangelog:\n    FROM scratch\n    SAVE ARTIFACT CHANGELOG.md\n\nchangelog-parser:\n    FROM python:3\n    RUN pip install packaging\n    COPY release/changelogparser.py /usr/bin/changelogparser\n    WORKDIR /changelog\n    COPY CHANGELOG.md .\n\nlint-changelog:\n    FROM +changelog-parser\n    RUN changelogparser --changelog CHANGELOG.md\n\n# debugger builds the earthly debugger and saves the artifact in build/earth_debugger\ndebugger:\n    FROM +code\n    ENV CGO_ENABLED=0\n    ARG GOCACHE=/go-cache\n    ARG GO_EXTRA_LDFLAGS=\"-linkmode external -extldflags -static\"\n    ARG EARTHLY_TARGET_TAG\n    ARG VERSION=$EARTHLY_TARGET_TAG\n    ARG EARTHLY_GIT_HASH\n    RUN --mount=type=cache,target=$GOCACHE \\\n        go build \\\n            -ldflags \"-X main.Version=$VERSION -X main.GitSha=$EARTHLY_GIT_HASH $GO_EXTRA_LDFLAGS\" \\\n            -tags netgo -installsuffix netgo \\\n            -o build/earth_debugger \\\n            cmd/debugger/*.go\n    SAVE ARTIFACT build/earth_debugger\n\n# earthly builds the earthly CLI and docker image.\nearthly:\n    FROM +code\n    ENV CGO_ENABLED=0\n    ARG GOOS=linux\n    ARG TARGETARCH\n    ARG TARGETVARIANT\n    ARG GOARCH=$TARGETARCH\n    ARG VARIANT=$TARGETVARIANT\n    ARG GO_EXTRA_LDFLAGS=\"-linkmode external -extldflags -static\"\n    # GO_GCFLAGS may be used to set the -gcflags parameter to 'go build'. This\n    # is particularly useful for disabling optimizations to make the binary work\n    # with delve. To disable optimizations:\n    #\n    #     --GO_GCFLAGS='all=-N -l'\n    ARG GO_GCFLAGS\n    ARG EXECUTABLE_NAME=\"earthly\"\n    ARG DEFAULT_INSTALLATION_NAME=\"earthly-dev\"\n    RUN test -n \"$GOOS\" && test -n \"$GOARCH\"\n    RUN test \"$GOARCH\" != \"arm\" || test -n \"$VARIANT\"\n    ARG EARTHLY_TARGET_TAG_DOCKER\n    ARG VERSION=\"dev-$EARTHLY_TARGET_TAG_DOCKER\"\n    ARG EARTHLY_GIT_HASH\n    ARG DEFAULT_BUILDKITD_IMAGE=docker.io/earthly/buildkitd:$VERSION # The image needs to be fully qualified for alternative frontend support.\n    ARG BUILD_TAGS=dfrunmount dfrunsecurity dfsecrets dfssh dfrunnetwork dfheredoc forceposix\n    ARG GOCACHE=/go-cache\n    RUN mkdir -p build\n    RUN printf \"$BUILD_TAGS\" > ./build/tags && echo \"$(cat ./build/tags)\"\n    RUN printf '-X main.DefaultBuildkitdImage='\"$DEFAULT_BUILDKITD_IMAGE\" > ./build/ldflags && \\\n        printf ' -X main.Version='\"$VERSION\" >> ./build/ldflags && \\\n        printf ' -X main.GitSha='\"$EARTHLY_GIT_HASH\" >> ./build/ldflags && \\\n        printf ' -X main.DefaultInstallationName='\"$DEFAULT_INSTALLATION_NAME\" >> ./build/ldflags && \\\n        printf ' '\"$GO_EXTRA_LDFLAGS\" >> ./build/ldflags && \\\n        echo \"$(cat ./build/ldflags)\"\n    # Important! If you change the go build options, you may need to also change them\n    # in https://github.com/earthly/homebrew-earthly/blob/main/Formula/earthly.rb\n    # as well as https://github.com/Homebrew/homebrew-core/blob/master/Formula/earthly.rb\n    RUN --mount=type=cache,target=$GOCACHE \\\n        GOARM=${VARIANT#v} go build \\\n            -tags \"$(cat ./build/tags)\" \\\n            -ldflags \"$(cat ./build/ldflags)\" \\\n            -gcflags=\"${GO_GCFLAGS}\" \\\n            -o build/$EXECUTABLE_NAME \\\n            cmd/earthly/*.go\n    SAVE ARTIFACT ./build/tags\n    SAVE ARTIFACT ./build/ldflags\n    SAVE ARTIFACT build/$EXECUTABLE_NAME AS LOCAL \"build/$GOOS/$GOARCH$VARIANT/$EXECUTABLE_NAME\"\n    SAVE IMAGE --cache-from=earthly/earthly:main\n\n# earthly-linux-amd64 builds the earthly artifact  for linux amd64\nearthly-linux-amd64:\n    ARG GO_GCFLAGS\n    COPY --platform=linux/amd64 (+earthly/* \\\n        --GOARCH=amd64 \\\n        --VARIANT= \\\n        --GO_GCFLAGS=\"${GO_GCFLAGS}\" \\\n        ) ./\n    SAVE ARTIFACT ./*\n\n# earthly-linux-arm64 builds the earthly artifact  for linux arm64\nearthly-linux-arm64:\n    ARG GO_GCFLAGS\n    COPY (+earthly/* \\\n        --GOARCH=arm64 \\\n        --VARIANT= \\\n        --GO_EXTRA_LDFLAGS= \\\n        --GO_GCFLAGS=\"${GO_GCFLAGS}\" \\\n        ) ./\n    SAVE ARTIFACT ./*\n\n# earthly-darwin-amd64 builds the earthly artifact  for darwin amd64\nearthly-darwin-amd64:\n    ARG GO_GCFLAGS=\"\"\n    COPY --platform=linux/amd64 (+earthly/* \\\n        --GOOS=darwin \\\n        --GOARCH=amd64 \\\n        --VARIANT= \\\n        --GO_EXTRA_LDFLAGS= \\\n        --GO_GCFLAGS=\"${GO_GCFLAGS}\" \\\n        ) ./\n    SAVE ARTIFACT ./*\n\n# earthly-darwin-arm64 builds the earthly artifact for darwin arm64\nearthly-darwin-arm64:\n    ARG GO_GCFLAGS\n    COPY (+earthly/* \\\n        --GOOS=darwin \\\n        --GOARCH=arm64 \\\n        --VARIANT= \\\n        --GO_EXTRA_LDFLAGS= \\\n        --GO_GCFLAGS=\"${GO_GCFLAGS}\" \\\n        ) ./\n    SAVE ARTIFACT ./*\n\n# earthly-windows-arm64 builds the earthly artifact  for windows arm64\nearthly-windows-amd64:\n    ARG GO_GCFLAGS\n    COPY --platform=linux/amd64 (+earthly/* \\\n        --GOOS=windows \\\n        --GOARCH=amd64 \\\n        --VARIANT= \\\n        --GO_EXTRA_LDFLAGS= \\\n        --GO_GCFLAGS=\"${GO_GCFLAGS}\" \\\n        --EXECUTABLE_NAME=earthly.exe \\\n        ) ./\n    SAVE ARTIFACT ./*\n\n# earthly-all builds earthly for all supported environments\n# This includes:\n# linux amd64 and linux arm64\n# Darwin amd64 and arm64\n# Windows amd64\nearthly-all:\n    COPY +earthly-linux-amd64/earthly ./earthly-linux-amd64\n    COPY +earthly-linux-arm64/earthly ./earthly-linux-arm64\n    COPY +earthly-darwin-amd64/earthly ./earthly-darwin-amd64\n    COPY +earthly-darwin-arm64/earthly ./earthly-darwin-arm64\n    COPY +earthly-windows-amd64/earthly.exe ./earthly-windows-amd64.exe\n    SAVE ARTIFACT ./*\n\n# earthly-docker builds earthly as a docker image and pushes\nearthly-docker:\n    ARG EARTHLY_TARGET_TAG_DOCKER\n    ARG TAG=\"dev-$EARTHLY_TARGET_TAG_DOCKER\"\n    ARG BUILDKIT_PROJECT\n    ARG PUSH_LATEST_TAG=\"false\"\n    ARG PUSH_PRERELEASE_TAG=\"false\"\n    FROM ./buildkitd+buildkitd --BUILDKIT_PROJECT=\"$BUILDKIT_PROJECT\" --TAG=\"$TAG\"\n    RUN apk add --update --no-cache docker-cli libcap-ng-utils git\n    ENV EARTHLY_IMAGE=true\n    # When Earthly is run from a container, the registry proxy networking setup\n    # will fail as the registry is meant to be run on a dynamic localhost port\n    # (which won't be exposed by the container). Let's fall back to tar-based\n    # image transfer until this can be addressed further.\n    ENV EARTHLY_DISABLE_REMOTE_REGISTRY_PROXY=true\n    COPY earthly-entrypoint.sh /usr/bin/earthly-entrypoint.sh\n    ENTRYPOINT [\"/usr/bin/earthly-entrypoint.sh\"]\n    WORKDIR /workspace\n    COPY (+earthly/earthly --VERSION=$TAG --DEFAULT_INSTALLATION_NAME=\"earthly\") /usr/bin/earthly\n    ARG DOCKERHUB_USER=\"earthly\"\n    ARG DOCKERHUB_IMG=\"earthly\"\n    # Multiple SAVE IMAGE's lead to differing image digests, but multiple\n    # arguments to the save SAVE IMAGE do not. Using variables here doesn't work\n    # either, unfortunately, as the names are quoted and treated as a single arg.\n    IF [ \"$PUSH_LATEST_TAG\" == \"true\" ]\n       SAVE IMAGE --push --cache-from=earthly/earthly:main $DOCKERHUB_USER/$DOCKERHUB_IMG:$TAG $DOCKERHUB_USER/$DOCKERHUB_IMG:latest\n    ELSE IF [ \"$PUSH_PRERELEASE_TAG\" == \"true\" ]\n       SAVE IMAGE --push --cache-from=earthly/earthly:main $DOCKERHUB_USER/$DOCKERHUB_IMG:$TAG $DOCKERHUB_USER/$DOCKERHUB_IMG:prerelease\n    ELSE\n       SAVE IMAGE --push --cache-from=earthly/earthly:main $DOCKERHUB_USER/$DOCKERHUB_IMG:$TAG\n    END\n\n# earthly-integration-test-base builds earthly docker and then\n# if no dockerhub mirror is not set it will attempt to login to dockerhub using the provided docker hub username and token.\n# Otherwise, it will attempt to login to the docker hub mirror using the provided username and password\nearthly-integration-test-base:\n    FROM --pass-args +earthly-docker\n    RUN apk update && apk add pcre-tools curl python3 bash perl findutils expect yq && apk add --upgrade sed\n    COPY scripts/acbtest/acbtest scripts/acbtest/acbgrep /bin/\n    ENV NO_DOCKER=1\n    ENV NETWORK_MODE=host # Note that this breaks access to embedded registry in WITH DOCKER.\n    ENV EARTHLY_VERSION_FLAG_OVERRIDES=no-use-registry-for-with-docker # Use tar-based due to above.\n    WORKDIR /test\n\n    # The inner buildkit requires Docker hub creds to prevent rate-limiting issues.\n    ARG DOCKERHUB_MIRROR\n    ARG DOCKERHUB_MIRROR_INSECURE=false\n    ARG DOCKERHUB_MIRROR_HTTP=false\n    ARG DOCKERHUB_MIRROR_AUTH=false\n    ARG DOCKERHUB_MIRROR_AUTH_FROM_CLOUD_SECRETS=false\n\n    # DOCKERHUB_AUTH will login to docker hub (and pull from docker hub rather than a mirror)\n    ARG DOCKERHUB_AUTH=false\n\n    COPY setup-registry.sh .\n    IF [ \"$DOCKERHUB_MIRROR_AUTH_FROM_CLOUD_SECRETS\" = \"true\" ]\n        RUN if [ \"$DOCKERHUB_MIRROR_AUTH\" = \"true\" ]; then echo \"ERROR: DOCKERHUB_MIRROR_AUTH_FROM_CLOUD_SECRETS and DOCKERHUB_MIRROR_AUTH are mutually exclusive\" && exit 1; fi\n        RUN --secret DOCKERHUB_MIRROR_USER=dockerhub-mirror/user --secret DOCKERHUB_MIRROR_PASS=dockerhub-mirror/pass USE_EARTHLY_MIRROR=true ./setup-registry.sh\n    ELSE IF [ \"$DOCKERHUB_MIRROR_AUTH\" = \"true\" ]\n        RUN --secret DOCKERHUB_MIRROR_USER --secret DOCKERHUB_MIRROR_PASS ./setup-registry.sh\n    ELSE IF [ \"$DOCKERHUB_AUTH\" = \"true\" ]\n        RUN --secret DOCKERHUB_USER --secret DOCKERHUB_PASS ./setup-registry.sh\n    ELSE\n        RUN ./setup-registry.sh\n    END\n    RUN rm ./setup-registry.sh\n\n    # pull out buildkit_additional_config from the earthly config, for the special case of earthly-in-earthly testing\n    # which runs earthly-entrypoint.sh, which calls buildkitd/entrypoint, which requires EARTHLY_VERSION_FLAG_OVERRIDES to be set\n    # NOTE: yq will print out `null` if the key does not exist, this will cause a literal null to be inserted into /etc/buildkit.toml, which will\n    # cause buildkit to crash -- this is why we first assign it to a tmp variable, followed by an if.\n    ENV EARTHLY_ADDITIONAL_BUILDKIT_CONFIG=\"$(export tmp=$(cat /etc/.earthly/config.yml | yq .global.buildkit_additional_config); if [ \"$tmp\" != \"null\" ]; then echo \"$tmp\"; fi)\"\n\n# prerelease builds and pushes the prerelease version of earthly.\n# Tagged as prerelease\nprerelease:\n    FROM alpine:3.18\n    ARG BUILDKIT_PROJECT\n    BUILD \\\n        --platform=linux/amd64 \\\n        --platform=linux/arm64 \\\n        ./buildkitd+buildkitd --TAG=prerelease  --BUILDKIT_PROJECT=\"$BUILDKIT_PROJECT\"\n    COPY (+earthly-all/* --VERSION=prerelease --DEFAULT_INSTALLATION_NAME=earthly) ./\n    SAVE IMAGE --push earthly/earthlybinaries:prerelease\n\n# prerelease-script copies the earthly folder and saves it as an artifact\nprerelease-script:\n    FROM alpine:3.18\n    COPY ./earthly ./\n    # This script is useful in other repos too.\n    SAVE ARTIFACT ./earthly\n\n# ci-release builds earthly for linux/amd64 in a container and pushes wtth the tag\n# EARTHLY_GIT_HASH-TAG_SUFFIX Where TAG_SUFFIX must be provided\nci-release:\n    # TODO: this was multiplatform, but that skyrocketed our build times. #2979\n    # may help.\n    FROM alpine:3.18\n    ARG BUILDKIT_PROJECT\n    ARG EARTHLY_GIT_HASH\n    ARG --required TAG_SUFFIX\n    BUILD \\\n        --platform=linux/amd64 \\\n        ./buildkitd+buildkitd --TAG=${EARTHLY_GIT_HASH}-${TAG_SUFFIX} --BUILDKIT_PROJECT=\"$BUILDKIT_PROJECT\" --DOCKERHUB_BUILDKIT_IMG=\"buildkitd-staging\"\n    COPY (+earthly/earthly --DEFAULT_BUILDKITD_IMAGE=\"docker.io/earthly/buildkitd-staging:${EARTHLY_GIT_HASH}-${TAG_SUFFIX}\" --VERSION=${EARTHLY_GIT_HASH}-${TAG_SUFFIX} --DEFAULT_INSTALLATION_NAME=earthly) ./earthly-linux-amd64\n    SAVE IMAGE --push earthly/earthlybinaries:${EARTHLY_GIT_HASH}-${TAG_SUFFIX}\n\n# for-own builds earthly-buildkitd and the earthly CLI for the current system\n# and saves the final CLI binary locally at ./build/own/earthly\nfor-own:\n    ARG BUILDKIT_PROJECT\n    # GO_GCFLAGS may be used to set the -gcflags parameter to 'go build'. See\n    # the documentation on +earthly for extra detail about this option.\n    ARG GO_GCFLAGS\n    BUILD ./buildkitd+buildkitd --BUILDKIT_PROJECT=\"$BUILDKIT_PROJECT\"\n    BUILD +build-ticktock\n    COPY (+earthly/earthly --GO_GCFLAGS=\"${GO_GCFLAGS}\") ./\n    SAVE ARTIFACT ./earthly AS LOCAL ./build/own/earthly\n\n# build-ticktock is used for building the ticktock version of buildkit\n# it is only used when BUILDKIT_PROJECT is not overridden\nbuild-ticktock:\n    ARG BUILDKIT_PROJECT\n    IF [ -z \"$BUILDKIT_PROJECT\" ]\n        COPY earthly-next .\n        LET ticktock=\"$(cat earthly-next)\"\n        ARG EARTHLY_TARGET_TAG_DOCKER\n        LET BUILDKIT_TAG=\"dev-$EARTHLY_TARGET_TAG_DOCKER-ticktock\"\n        BUILD --platform=linux/amd64 ./buildkitd+buildkitd --BUILDKIT_PROJECT=\"github.com/earthly/buildkit:$ticktock\" --TAG=$BUILDKIT_TAG\n    END\n\n# for-linux builds earthly-buildkitd and the earthly CLI for the a linux amd64 system\n# and saves the final CLI binary locally in the ./build/linux folder.\nfor-linux:\n    ARG BUILDKIT_PROJECT\n    ARG GO_GCFLAGS\n    BUILD --platform=linux/amd64 ./buildkitd+buildkitd --BUILDKIT_PROJECT=\"$BUILDKIT_PROJECT\"\n    BUILD --platform=linux/amd64 +build-ticktock\n    BUILD ./ast/parser+parser\n    COPY (+earthly-linux-amd64/earthly --GO_GCFLAGS=\"${GO_GCFLAGS}\") ./\n    SAVE ARTIFACT ./earthly AS LOCAL ./build/linux/amd64/earthly\n\n# for-linux-arm64 builds earthly-buildkitd and the earthly CLI for the a linux arm64 system\n# and saves the final CLI binary locally in the ./build/linux folder.\nfor-linux-arm64:\n    ARG BUILDKIT_PROJECT\n    ARG GO_GCFLAGS\n    BUILD --platform=linux/arm64 ./buildkitd+buildkitd --BUILDKIT_PROJECT=\"$BUILDKIT_PROJECT\"\n    BUILD --platform=linux/arm64 +build-ticktock\n    BUILD ./ast/parser+parser\n    COPY (+earthly-linux-arm64/earthly --GO_GCFLAGS=\"${GO_GCFLAGS}\") ./\n    SAVE ARTIFACT ./earthly AS LOCAL ./build/linux/arm64/earthly\n\n# for-darwin builds earthly-buildkitd and the earthly CLI for the a darwin amd64 system\n# and saves the final CLI binary locally in the ./build/darwin folder.\n# For arm64 use +for-darwin-m1\nfor-darwin:\n    ARG BUILDKIT_PROJECT\n    ARG GO_GCFLAGS\n    BUILD --platform=linux/amd64 ./buildkitd+buildkitd --BUILDKIT_PROJECT=\"$BUILDKIT_PROJECT\"\n    BUILD --platform=linux/amd64 +build-ticktock\n    BUILD ./ast/parser+parser\n    COPY (+earthly-darwin-amd64/earthly --GO_GCFLAGS=\"${GO_GCFLAGS}\") ./\n    SAVE ARTIFACT ./earthly AS LOCAL ./build/darwin/amd64/earthly\n\n# for-darwin-m1 builds earthly-buildkitd and the earthly CLI for the a darwin m1 system\n# and saves the final CLI binary locally.\nfor-darwin-m1:\n    ARG BUILDKIT_PROJECT\n    ARG GO_GCFLAGS\n    BUILD --platform=linux/arm64 ./buildkitd+buildkitd --BUILDKIT_PROJECT=\"$BUILDKIT_PROJECT\"\n    BUILD --platform=linux/arm64 +build-ticktock\n    BUILD ./ast/parser+parser\n    COPY (+earthly-darwin-arm64/earthly --GO_GCFLAGS=\"${GO_GCFLAGS}\") ./\n    SAVE ARTIFACT ./earthly AS LOCAL ./build/darwin/arm64/earthly\n\n# for-windows builds earthly-buildkitd and the earthly CLI for the a windows system\n# and saves the final CLI binary locally in the ./build/windows folder.\nfor-windows:\n    ARG GO_GCFLAGS\n    # BUILD --platform=linux/amd64 ./buildkitd+buildkitd\n    BUILD ./ast/parser+parser\n    COPY (+earthly-windows-amd64/earthly.exe --GO_GCFLAGS=\"${GO_GCFLAGS}\") ./\n    SAVE ARTIFACT ./earthly.exe AS LOCAL ./build/windows/amd64/earthly.exe\n\n# all-buildkitd builds buildkitd for both linux amd64 and linux arm64\nall-buildkitd:\n    ARG BUILDKIT_PROJECT\n    BUILD \\\n        --platform=linux/amd64 \\\n        --platform=linux/arm64 \\\n        ./buildkitd+buildkitd --BUILDKIT_PROJECT=\"$BUILDKIT_PROJECT\"\n\n# all builds all of the following:\n# - Buildkitd for both linux amd64 and linux arm64\n# - Earthly for all supported environments linux amd64 and linux arm64, Darwin amd64 and arm64, and Windos amd64\n# - Earthly as a container image\n# - Prerelease version of earthly as a container image\nall:\n    BUILD +all-buildkitd\n    BUILD +earthly-all\n    BUILD +earthly-docker\n    BUILD +prerelease\n\n# lint-all runs all linting checks against the earthly project.\nlint-all:\n    BUILD +lint\n    BUILD +lint-scripts\n    BUILD +lint-docs\n    BUILD +submodule-decouple-check\n\n# lint-docs runs lint against changelog and checks that line endings are unix style and files end\n# with a single newline.\nlint-docs:\n    BUILD +lint-newline-ending\n    BUILD +lint-changelog\n\n# test-no-qemu runs tests without qemu virtualization by passing in dockerhub authentication and\n# using secure docker hub mirror configurations\ntest-no-qemu:\n    BUILD --pass-args +test-misc\n    BUILD --pass-args +test-no-qemu-group1\n    BUILD --pass-args +test-no-qemu-group2\n    BUILD --pass-args +test-no-qemu-group3\n    BUILD --pass-args +test-no-qemu-group4\n    BUILD --pass-args +test-no-qemu-group5\n    BUILD --pass-args +test-no-qemu-group6\n    BUILD --pass-args +test-no-qemu-group7\n    BUILD --pass-args +test-no-qemu-group8\n    BUILD --pass-args +test-no-qemu-group9\n    BUILD --pass-args +test-no-qemu-group10\n    BUILD --pass-args +test-no-qemu-group11\n    BUILD --pass-args +test-no-qemu-group12\n    BUILD --pass-args +test-no-qemu-slow\n\n# test-misc runs misc (non earthly-in-earthly) tests\ntest-misc:\n    BUILD +test-misc-group1\n    BUILD +test-misc-group2\n    BUILD +test-misc-group3\n    BUILD +test-ast\n\ntest-misc-group1:\n    BUILD +unit-test\n\ntest-misc-group2:\n    BUILD +offline-test\n\ntest-misc-group3:\n    BUILD +earthly-script-no-stdout\n\ntest-ast:\n    BUILD +test-ast-group1\n    BUILD +test-ast-group2\n    BUILD +test-ast-group3\n\ntest-ast-group1:\n    BUILD --pass-args ./ast/tests+group1\n\ntest-ast-group2:\n    BUILD --pass-args ./ast/tests+group2\n\ntest-ast-group3:\n    BUILD --pass-args ./ast/tests+group3\n\n# test-no-qemu-group1 runs the tests from ./tests+ga-no-qemu-group1\ntest-no-qemu-group1:\n    BUILD --pass-args ./tests+ga-no-qemu-group1 \\\n        --GLOBAL_WAIT_END=\"$GLOBAL_WAIT_END\"\n\n# test-no-qemu-group2 runs the tests from ./tests+ga-no-qemu-group2\ntest-no-qemu-group2:\n    BUILD --pass-args ./tests+ga-no-qemu-group2 \\\n        --GLOBAL_WAIT_END=\"$GLOBAL_WAIT_END\"\n\n# test-no-qemu-group3 runs the tests from ./tests+ga-no-qemu-group3\ntest-no-qemu-group3:\n    BUILD --pass-args ./tests+ga-no-qemu-group3 \\\n        --GLOBAL_WAIT_END=\"$GLOBAL_WAIT_END\"\n\n# test-no-qemu-group4 runs the tests from ./tests+ga-no-qemu-group4\ntest-no-qemu-group4:\n    BUILD --pass-args ./tests+ga-no-qemu-group4 \\\n        --GLOBAL_WAIT_END=\"$GLOBAL_WAIT_END\"\n\n# test-no-qemu-group5 runs the tests from ./tests+ga-no-qemu-group5\ntest-no-qemu-group5:\n    BUILD --pass-args ./tests+ga-no-qemu-group5 \\\n        --GLOBAL_WAIT_END=\"$GLOBAL_WAIT_END\"\n\n# test-no-qemu-group6 runs the tests from ./tests+ga-no-qemu-group6\ntest-no-qemu-group6:\n    BUILD --pass-args ./tests+ga-no-qemu-group6 \\\n        --GLOBAL_WAIT_END=\"$GLOBAL_WAIT_END\"\n\n# test-no-qemu-group7 runs the tests from ./tests+ga-no-qemu-group7\ntest-no-qemu-group7:\n    BUILD --pass-args ./tests+ga-no-qemu-group7 \\\n        --GLOBAL_WAIT_END=\"$GLOBAL_WAIT_END\"\n\n# test-no-qemu-group8 runs the tests from ./tests+ga-no-qemu-group8\ntest-no-qemu-group8:\n    BUILD --pass-args ./tests+ga-no-qemu-group8 \\\n        --GLOBAL_WAIT_END=\"$GLOBAL_WAIT_END\"\n\n# test-no-qemu-group9 runs the tests from ./tests+ga-no-qemu-group9\ntest-no-qemu-group9:\n    BUILD --pass-args ./tests+ga-no-qemu-group9 \\\n        --GLOBAL_WAIT_END=\"$GLOBAL_WAIT_END\"\n\n# test-no-qemu-group10 runs the tests from ./tests+ga-no-qemu-group10\ntest-no-qemu-group10:\n    BUILD --pass-args ./tests+ga-no-qemu-group10 \\\n        --GLOBAL_WAIT_END=\"$GLOBAL_WAIT_END\"\n\n# test-no-qemu-group11 runs the tests from ./tests+ga-no-qemu-group11\ntest-no-qemu-group11:\n    BUILD --pass-args ./tests+ga-no-qemu-group11 \\\n        --GLOBAL_WAIT_END=\"$GLOBAL_WAIT_END\"\n\n# test-no-qemu-group12 runs the tests from ./tests+ga-no-qemu-group12\ntest-no-qemu-group12:\n    BUILD --pass-args ./tests+ga-no-qemu-group12 \\\n        --GLOBAL_WAIT_END=\"$GLOBAL_WAIT_END\"\n\n# test-no-qemu-slow runs the tests from ./tests+ga-no-qemu-slow\ntest-no-qemu-slow:\n    BUILD --pass-args ./tests+ga-no-qemu-slow \\\n        --GLOBAL_WAIT_END=\"$GLOBAL_WAIT_END\"\n\n# test-no-qemu-kind runs the tests from ./tests+ga-no-qemu-kind\ntest-no-qemu-kind:\n    BUILD --pass-args ./tests+ga-no-qemu-kind \\\n        --GLOBAL_WAIT_END=\"$GLOBAL_WAIT_END\"\n\n# test-qemu runs the tests from ./tests+ga-qemu\ntest-qemu:\n    ARG GLOBAL_WAIT_END=\"false\"\n    BUILD --pass-args ./tests+ga-qemu \\\n        --GLOBAL_WAIT_END=\"$GLOBAL_WAIT_END\"\n\n# test runs both no-qemu tests and qemu tests\ntest:\n    BUILD --pass-args +test-no-qemu\n    BUILD --pass-args +test-qemu\n\n# smoke-test is used by circleci, and aims to be a medium-weight test which covers some WITH DOCKER and multi-platform tests\nsmoke-test:\n    BUILD ./tests/with-docker-kind+alpine-kind\n    BUILD ./tests/platform+test\n\n# test runs examples, no-qemu, qemu, and experimental tests\ntest-all:\n    BUILD +examples\n    BUILD --pass-args +test-no-qemu\n    BUILD --pass-args +test-qemu\n    BUILD --pass-args ./tests+experimental\n\nexamples:\n    BUILD +examples-1\n    BUILD +examples-2\n    BUILD +examples-3\n\nexamples-1:\n    ARG TARGETARCH\n    BUILD ./examples/c+docker\n    BUILD ./examples/cpp+docker\n    IF [ \"$TARGETARCH\" = \"amd64\" ]\n        # This only works on amd64 for now.\n        BUILD ./examples/dotnet+docker\n    END\n    BUILD ./examples/elixir+docker\n    BUILD ./examples/go+docker\n    BUILD ./examples/grpc+test\n    IF [ \"$TARGETARCH\" = \"amd64\" ]\n        # This only works on amd64 for now.\n        BUILD ./examples/integration-test+integration-test\n    END\n    BUILD ./examples/java+docker\n    BUILD ./examples/js+docker\n    BUILD ./examples/monorepo+all\n    BUILD ./examples/multirepo+docker\n    BUILD ./examples/python+docker\n    BUILD ./examples/react+docker\n    BUILD ./examples/cutoff-optimization+run\n    BUILD ./examples/import+build\n    BUILD ./examples/secrets+base\n    BUILD ./examples/cloud-secrets+base\n\nexamples-2:\n    BUILD ./examples/readme/go1+all\n    BUILD ./examples/readme/go2+build\n    BUILD ./examples/readme/proto+docker\n    # TODO: This example is flaky for some reason.\n    #BUILD ./examples/terraform+localstack\n    BUILD ./examples/ruby+docker\n    BUILD ./examples/ruby-on-rails+docker\n    IF [ \"$TARGETARCH\" = \"amd64\" ]\n        # This crashes randomly on arm.\n        BUILD ./examples/scala+docker\n    END\n    BUILD ./examples/clojure+docker\n    BUILD ./examples/cobol+docker\n    BUILD ./examples/rust+docker\n    BUILD ./examples/multiplatform+all\n    BUILD ./examples/multiplatform-cross-compile+build-all-platforms\n    BUILD github.com/earthly/hello-world:main+hello\n    BUILD ./examples/cache-command/npm+docker\n    BUILD ./examples/cache-command/mvn+docker\n\nexamples-3:\n    BUILD ./examples/typescript-node+docker\n    BUILD ./examples/bazel+run\n    BUILD ./examples/bazel+image\n    BUILD ./examples/aws-sso+base\n    BUILD ./examples/mkdocs+build\n    BUILD ./examples/zig+docker\n\n# license copies the license file and saves it as an artifact\nlicense:\n    COPY LICENSE ./\n    SAVE ARTIFACT LICENSE\n\n# npm-update-all helps keep all node package-lock.json files up to date.\nnpm-update-all:\n    FROM node:16.16.0-alpine3.15\n    COPY . /code\n    WORKDIR /code\n    FOR nodepath IN \\\n            examples/cache-command/npm \\\n            examples/js \\\n            examples/react \\\n            examples/ruby-on-rails \\\n            examples/tutorial/js/part3 \\\n            examples/tutorial/js/part4 \\\n            examples/tutorial/js/part5/services/service-one \\\n            examples/tutorial/js/part6/api \\\n            examples/tutorial/js/part6/app \\\n            tests/remote-cache/test2\n        RUN cd $nodepath && npm update\n        SAVE ARTIFACT --if-exists $nodepath/package-lock.json AS LOCAL $nodepath/package-lock.json\n    END\n\n# merge-main-to-docs merges the main branch into docs-0.8\nmerge-main-to-docs:\n    RUN git config --global user.name \"littleredcorvette\" && \\\n        git config --global user.email \"littleredcorvette@users.noreply.github.com\" && \\\n        git config --global url.\"git@github.com:\".insteadOf \"https://github.com/\"\n\n    ARG TARGETARCH\n    # renovate: datasource=github-releases depName=cli/cli\n    ARG gh_version=v2.49.2\n    RUN curl -Lo ghlinux.tar.gz \\\n      https://github.com/cli/cli/releases/download/$gh_version/gh_${gh_version#v}_linux_${TARGETARCH}.tar.gz \\\n      && tar --strip-components=1 -xf ghlinux.tar.gz \\\n      && rm ghlinux.tar.gz && mv ./bin/gh /usr/local/bin/gh\n\n    ARG git_repo=\"earthly/earthly\"\n    ARG git_url=\"git@github.com:$git_repo\"\n    ARG earthly_lib_version=3.0.1\n    ARG SECRET_PATH=littleredcorvette-id_rsa\n    DO --pass-args github.com/earthly/lib/utils/git:$earthly_lib_version+DEEP_CLONE \\\n        --GIT_URL=$git_url --SECRET_PATH=$SECRET_PATH\n\n    ARG to_branch=\"docs-0.8\"\n    ARG from_branch=\"main\"\n\n    LET temp_pr_branch=\"soon-to-be-$to_branch\"\n    RUN --push --secret GH_TOKEN=littleredcorvette-github-token --mount=type=secret,id=littleredcorvette-id_rsa,mode=0400,target=/root/.ssh/id_rsa \\\n        # 1. checkout the docs branch and merge changes from main\n         git checkout $to_branch && git pull origin $to_branch &&\\\n         git merge $from_branch && \\\n        # 2. create a new temp branch to for a PR (can't push directly to protected branch)\n        git checkout -b $temp_pr_branch && git push -f origin $temp_pr_branch && \\\n        # 3. create a new PR and wait till checks complete (if checks fail, close the PR)\n        gh pr create --title \"Temp PR to merge $from_branch to $to_branch\" --draft -B $to_branch \\\n        --body \"Opened by +merge-main-to-docs\" --repo $git_repo && \\\n        sleep 15 && \\\n        ( \\\n            timeout --signal=SIGINT 300 \\\n            gh run watch $(gh run list --commit $(git rev-parse HEAD) -w \"Check Docs for Broken Links\" --json \"databaseId\" --jq '.[]|.databaseId') --exit-status || \\\n            (gh pr close $temp_pr_branch --delete-branch && exit 1) \\\n        ) && \\\n        # 4. try to push the branch now that the PR checks have passed\n        git checkout $to_branch && (git push || (gh pr close $temp_pr_branch --delete-branch && exit 1))\n\n# check-broken-links checks for broken links in our docs website\ncheck-broken-links:\n    FROM node:20-alpine3.18\n    RUN npm install broken-link-checker -g\n    WORKDIR /report\n    ARG ADDRESS=https://docs.earthly.dev\n    ARG VERBOSE=false\n    LET REPORT_FILE_NAME=report.txt\n    LET BLC_COMMAND=\"blc $ADDRESS -rog --exclude https://twitter.com/EarthlyTech --exclude http://localhost:8080/\"\n    IF [ $VERBOSE = \"true\" ]\n        RUN --no-cache $BLC_COMMAND |tee $REPORT_FILE_NAME\n    ELSE\n        RUN --no-cache $BLC_COMMAND &> $REPORT_FILE_NAME || true\n    END\n    LET RESULT=$(grep -qE '^├─BROKEN─' $REPORT_FILE_NAME; echo $?)\n    LET NOCOLOR='\\033[0m'\n    LET RED='\\033[0;31m'\n    LET GREEN='\\033[0;32m'\n    IF [ $RESULT = \"0\" ]\n        RUN --no-cache echo -e \"${RED}Final Broken Links Report:${NOCOLOR}\"\n        RUN --no-cache grep --color=always -E '^(Getting links from|├─BROKEN─|Finished!|Elapsed)' $REPORT_FILE_NAME\n        RUN exit 1\n    ELSE\n        RUN --no-cache echo -e \"${GREEN}No Broken Links were found${NOCOLOR}\"\n    END\n\n# open-pr-for-fork creates a new PR based on the given pr_number\nopen-pr-for-fork:\n    RUN git config --global user.name \"littleredcorvette\" && \\\n        git config --global user.email \"littleredcorvette@users.noreply.github.com\" && \\\n        git config --global url.\"git@github.com:\".insteadOf \"https://github.com/\"\n\n    ARG TARGETARCH\n    # renovate: datasource=github-releases depName=cli/cli\n    ARG gh_version=v2.49.2\n    RUN curl -Lo ghlinux.tar.gz \\\n      https://github.com/cli/cli/releases/download/$gh_version/gh_${gh_version#v}_linux_${TARGETARCH}.tar.gz \\\n      && tar --strip-components=1 -xf ghlinux.tar.gz \\\n      && rm ghlinux.tar.gz && mv ./bin/gh /usr/local/bin/gh\n\n    ARG earthly_lib_version=3.0.1\n    ARG SECRET_PATH=littleredcorvette-id_rsa\n    ARG git_repo=\"earthly/earthly\"\n    LET git_url=\"git@github.com:$git_repo\"\n    DO --pass-args github.com/earthly/lib/utils/git:$earthly_lib_version+DEEP_CLONE \\\n        --GIT_URL=$git_url --SECRET_PATH=$SECRET_PATH\n\n    ARG --required pr_number\n    RUN --no-cache --mount=type=secret,id=$SECRET_PATH,mode=0400,target=/root/.ssh/id_rsa \\\n        --secret GH_TOKEN=littleredcorvette-github-token \\\n        gh pr checkout $pr_number --branch \"test-pr-$pr_number\" --repo $git_repo && \\\n        echo \"checked out $(git rev-parse HEAD)\" && \\\n        git merge origin/main && \\\n        git commit --allow-empty -m \"please run the test\" && \\\n        git push -f origin HEAD\n    RUN --no-cache --secret GH_TOKEN=littleredcorvette-github-token echo $(gh pr list -H test-pr-$pr_number -B main --json number --jq '.[]|.number'|| \"\") > /tmp/result\n    LET test_pr=$(cat /tmp/result)\n    IF [[ -z $test_pr ]]\n        RUN --no-cache --secret GH_TOKEN=littleredcorvette-github-token \\\n            gh pr create --title \"Run tests for PR $pr_number\" --draft \\\n            --body \"Running tests for https://github.com/$git_repo/pull/$pr_number\" --repo $git_repo\n    ELSE\n        RUN --no-cache echo A matching test PR for PR $pr_number already exists: https://github.com/$git_repo/pull/$test_pr\n    END\n\ncheck-broken-links-pr:\n    FROM alpine/git\n    WORKDIR /tmp\n    RUN apk add github-cli\n    ARG BRANCH\n    ARG EARTHLY_GIT_BRANCH\n    LET branch=$BRANCH\n    IF [ -z $branch ]\n        SET branch=$EARTHLY_GIT_BRANCH\n    END\n    RUN --secret GH_TOKEN=littleredcorvette-github-token gh pr checks $branch --repo earthly/earthly | grep GitBook|awk '{print $5}' > url\n    ARG VERBOSE\n    BUILD --pass-args +check-broken-links --ADDRESS=$(cat url)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 16.3330078125,
          "content": "Mozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.302734375,
          "content": "<h1>Earthly</h1>\n\n<div align=\"center\">\n  <a href=\"https://earthly.dev\"><img src=\"img/logo-banner-white-bg.png\" alt=\"Earthly\" width=\"700px\" /></a>\n  <br/>\n  <em>It’s like Docker for builds</em>\n</div>\n<br/>\n\n[![GitHub Actions CI](https://github.com/earthly/earthly/workflows/staging%20release/badge.svg)](https://github.com/earthly/earthly/actions?query=workflow%3A%22staging%20release%22+branch%3Amain)\n[![Join the chat on Slack](https://img.shields.io/badge/slack-join%20chat-red.svg)](https://earthly.dev/slack)\n[![Docs](https://img.shields.io/badge/docs-git%20book-blue)](https://docs.earthly.dev)\n[![Website](https://img.shields.io/badge/website-earthly.dev-blue)](https://earthly.dev)\n[![Install Earthly](https://img.shields.io/github/v/release/earthly/earthly.svg?label=install&color=1f626c)](https://earthly.dev/get-earthly)\n[![Docker Hub](https://img.shields.io/badge/docker%20hub-earthly-blue)](https://hub.docker.com/u/earthly)\n[![License MPL-2](https://img.shields.io/badge/license-MPL-blue.svg)](./LICENSE)\n\n[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://github.com/codespaces/new?hide_repo_select=true&ref=main&repo=246903803)\n\n**🔁 Repeatable Builds** - *Write builds once, and run them anywhere – on your laptop, remote, and in any CI.*\n\n**❤️ Super Simple** - *Instantly recognizable syntax – like Dockerfile and Makefile had a baby.*\n\n**🛠 Compatible with Every Language, Framework, and Build Tool** - *If it runs on Linux, it runs on Earthly.*\n\n**🏘 Great for Monorepos and Polyrepos** - *Organize your build logic however makes the most sense for your project.*\n\n**💨 Fast Builds** - *Build caching and parallel execution makes builds fast automatically.*\n\n**♻️ Reuse, Don't Repeat** - *Never write the same code in multiple builds again.*\n\n---------------------------------\n\n🌎 [Earthly](https://earthly.dev/) is a versatile, approachable CI/CD framework that runs every pipeline inside containers, giving you repeatable builds that you write once and run anywhere. It has a super simple, instantly recognizable syntax that is easy to write and understand – like Dockerfile and Makefile had a baby. And it leverages and augments popular build tools instead of replacing them, so you don’t have to rewrite all your builds no matter what languages you use.\n\n<br/>\n<div align=\"center\"><a href=\"https://earthly.dev/get-earthly\"><img src=\"docs/img/get-earthly-button.png\" alt=\"Get Earthly\" title=\"Get Earthly\" /></a></div>\n\n---------------------------------\n\n<h2 align=\"center\">Table of Contents</h2>\n\n* [Why use Earthly?](#why-use-earthly)\n* [Where Does Earthly Fit?](#where-does-earthly-fit)\n* [How Does It Work?](#how-does-it-work)\n* [Installation](#installation)\n* [Quick Start](#quick-start)\n* [Features](#features)\n* [FAQ](#faq)\n* [Contributing](#contributing)\n* [Licensing](#licensing)\n\n\n<h2 align=\"center\">Why Use Earthly?</h2>\n\n### 🔁 Repeatable Builds\n\nEarthly runs all builds in containers, making them self-contained, isolated, repeatable, and portable. This allows for faster iteration on build scripts and easier debugging when something goes wrong – no more `git commit -m \"try again\"`. When you write a build, you know it will execute correctly no matter where it runs – your laptop, a colleague’s laptop, or any CI. You don’t have to configure language-specific tooling, install additional dependencies, or complicate your build scripts to ensure they are compatible with different OSs. Earthly gives you consistent, repeatable builds regardless of where they run.\n\n\n### ❤️ Super Simple\n\nEarthly’s syntax is easy to write and understand. Most engineers can read an Earthfile instantly, without prior knowledge of Earthly. We combined some of the best ideas from Dockerfiles and Makefiles into one specification – like Dockerfile and Makefile had a baby.\n\n\n### 🛠 Compatible with Every Language, Framework, and Build Tool\n\nEarthly works with the compilers and build tools you use. If it runs on Linux, it runs on Earthly. And you don’t have to rewrite your existing builds or replace your `package.json`, `go.mod`, `build.gradle`, or `Cargo.toml` files. You can use Earthly as a wrapper around your existing tooling and still get Earthly’s repeatable builds, parallel execution, and build caching.\n\n\n### 🏘 Great for Monorepos and Polyrepos\n\nEarthly is great for both monorepos and polyrepos. You can split your build logic across multiple Earthfiles, placing some deeper inside the directory structure or even in other repositories. Referencing targets from other Earthfiles is easy regardless of where they are stored. So you can organize your build logic however makes the most sense for your project.\n\n\n### 💨 Fast Builds\n\nEarthly automatically executes build targets in parallel and makes maximum use of cache. This makes builds fast. Earthly also has powerful shared caching capabilities that speed up builds frequently run across a team or in sandboxed environments, such as Earthly Satellites, GitHub Actions, or your CI.\n\nIf your build has multiple steps, Earthly will:\n1. Build a directed acyclic graph (DAG).\n2. Isolate execution of each step.\n3. Run independent steps in parallel.\n4. Cache results for future use.\n\n\n### ♻️ Reuse, Don't Repeat\n\nNever have to write the same code in multiple builds again. With Earthly, you can reuse targets, artifacts, and images across multiple Earthfiles, even ones in other repositories, in a single line. Earthly is cache-aware, based on the individual hashes of each file, and has shared caching capabilities. So you can create a vast and efficient build hierarchy that only executes the minimum required steps.\n\n\n<h2 align=\"center\">Where Does Earthly Fit?</h2>\n\n<div align=\"center\"><img src=\"docs/img/integration-diagram-v2.png\" alt=\"Earthly fits between language-specific tooling and the CI\" width=\"700px\" /></div>\n\nEarthly is meant to be used both on your development machine and in CI. It runs on top of your CI/CD platform (such as [Jenkins](https://docs.earthly.dev/ci-integration/vendor-specific-guides/jenkins), [Circle CI](https://docs.earthly.dev/examples/circle-integration), [GitHub Actions](https://docs.earthly.dev/examples/gh-actions-integration), and [GitLab CI/CD](https://docs.earthly.dev/ci-integration/vendor-specific-guides/gitlab-integration)). Earthly provides the benefits of a modern build automation system wherever it runs – such as caching and parallelism. It is a glue layer between language-specific build tooling (like maven, gradle, npm, pip, go build) and CI, working like a wrapper around your build tooling and build logic that isolates build execution from the environments they run in.\n\n\n<h2 align=\"center\">How Does It Work?</h2>\n\nIn short: **containers**, **layer caching**, and **complex build graphs**!\n\nEarthly executes builds in containers, where execution is isolated. The dependencies of the build are explicitly specified in the build definition, thus making the build self-sufficient.\n\nWe use a target-based system to help users break up complex builds into reusable parts. Nothing is shared between targets other than clearly declared dependencies. Nothing shared means no unexpected race conditions. In fact, the build is executed in parallel whenever possible, without any need for the user to take care of any locking or unexpected environment interactions.\n\n> **ℹ️ Note**\n> Earthfiles might seem very similar to Dockerfile multi-stage builds. In fact, the [same technology](https://github.com/moby/buildkit) is used underneath. However, a key difference is that Earthly is designed to be a general-purpose build system, not just a Docker image specification. Read more about [how Earthly is different from Dockerfiles](#how-is-earthly-different-from-dockerfiles).\n\n\n<h2 align=\"center\">Installation</h2>\n\nSee [installation instructions](https://earthly.dev/get-earthly).\n\nTo build from source, check the [contributing page](./CONTRIBUTING.md).\n\n\n<h2 align=\"center\">Quick Start</h2>\n\nHere are some resources to get you started with Earthly\n\n* 🏁 [Getting started guide](https://docs.earthly.dev/basics)\n* 👀 [Examples](./examples)\n  * [Go](./examples/go)\n  * [JavaScript](./examples/js)\n  * [Python](./examples/python)\n  * [Java](./examples/java)\n  * [Rust](./examples/rust)\n  * [TypeScript (Node)](./examples/typescript-node)\n  * [C++](./examples/cpp)\n  * [C](./examples/c)\n  * [dotnet (C#)](./examples/dotnet)\n  * [Ruby](./examples/ruby)\n  * [Scala](./examples/scala)\n  * [Elixir](./examples/elixir)\n  * [COBOL](./examples/cobol)\n  * [Monorepo](./examples/monorepo)\n  * [Multirepo](./examples/multirepo)\n  * [Multiplatform Builds](./examples/multiplatform)\n  * [Integration Tests](./examples/integration-test)\n* 🔍 Explore [Earthly's own build](https://docs.earthly.dev/docs/examples#earthlys-own-build)\n* ✔️ [Best practices](https://docs.earthly.dev/best-practices)\n\nSee also the [full documentation](https://docs.earthly.dev).\n\nReference pages\n\n* 📑 [Earthfile reference](https://docs.earthly.dev/docs/earthfile)\n* #️⃣ [Earthly command reference](https://docs.earthly.dev/docs/earthly-command)\n* ⚙️ [Configuration reference](https://docs.earthly.dev/docs/earthly-config)\n\n### A simple example (for Go)\n\n```earthly\n# Earthfile\nVERSION 0.8\nFROM golang:1.15-alpine3.13\nRUN apk --update --no-cache add git\nWORKDIR /go-example\n\nall:\n  BUILD +lint\n  BUILD +docker\n\nbuild:\n  COPY main.go .\n  RUN go build -o build/go-example main.go\n  SAVE ARTIFACT build/go-example AS LOCAL build/go-example\n\nlint:\n  RUN go get golang.org/x/lint/golint\n  COPY main.go .\n  RUN golint -set_exit_status ./...\n\ndocker:\n  COPY +build/go-example .\n  ENTRYPOINT [\"/go-example/go-example\"]\n  SAVE IMAGE go-example:latest\n```\n\n```go\n// main.go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n  fmt.Println(\"hello world\")\n}\n```\n\nInvoke the build using `earthly +all`.\n\n<div align=\"center\"><a href=\"https://asciinema.org/a/351683?speed=2\"><img src=\"img/demo-351683.gif\" alt=\"Demonstration of a simple Earthly build\" title=\"View on asciinema.org\" width=\"600px\" /></a></div>\n\nExamples for other languages are available in the [examples dir](./examples).\n\n\n<h2 align=\"center\">Features</h2>\n\n### ⛓ Parallelization that just works\n\nWhenever possible, Earthly automatically executes targets in parallel.\n\n<div align=\"center\"><a href=\"https://asciinema.org/a/351678?speed=2\"><img src=\"img/demo-351678.gif\" alt=\"Demonstration of Earthly's parallelization\" title=\"View on asciinema.org\" width=\"600px\" /></a></div>\n\n### 💾 Caching that works the same as Docker builds\n\nCut down build times in CI through [shared remote caching](https://docs.earthly.dev/docs/remote-caching).\n\n<div align=\"center\"><a href=\"https://asciinema.org/a/351674?speed=2\"><img src=\"img/demo-351674.gif\" alt=\"Demonstration of Earthly's caching\" title=\"View on asciinema.org\" width=\"600px\" /></a></div>\n\n### 🛠 Multi-platform support\n\nBuild for multiple platforms in parallel.\n\n```earthly\nVERSION 0.8\nall:\n    BUILD \\\n        --platform=linux/amd64 \\\n        --platform=linux/arm64 \\\n        --platform=linux/arm/v7 \\\n        --platform=linux/arm/v6 \\\n        +build\n\nbuild:\n    FROM alpine:3.18\n    CMD [\"uname\", \"-m\"]\n    SAVE IMAGE multiplatform-image\n```\n\n### 🤲 Build tools that work everywhere\n\nNo need to ask your team to install `protoc`, a specific version of Python, Java 1.6, or the .NET Core ecosystem. Install once in your Earthfile, and it works for everyone. Or even better, you can just make use of the rich Docker Hub ecosystem.\n\n```earthly\nVERSION 0.8\nFROM golang:1.15-alpine3.13\nWORKDIR /proto-example\n\nproto:\n  FROM namely/protoc-all:1.29_4\n  COPY api.proto /defs\n  RUN --entrypoint -- -f api.proto -l go\n  SAVE ARTIFACT ./gen/pb-go /pb AS LOCAL pb\n\nbuild:\n  COPY go.mod go.sum .\n  RUN go mod download\n  COPY +proto/pb pb\n  COPY main.go ./\n  RUN go build -o build/proto-example main.go\n  SAVE ARTIFACT build/proto-example\n```\n\nSee full [example code](./examples/readme/proto).\n\n### 📦 Modern import system\n\nEarthly can be used to reference and build targets from other directories or even other repositories. For example, if we wanted to build [an example target from the `github.com/earthly/earthly` repository](./examples/go/Earthfile#L17-L20), we could issue\n\n```bash\n# Try it yourself! No need to clone.\nearthly github.com/earthly/earthly/examples/go:main+docker\n# Run the resulting image.\ndocker run --rm earthly/examples:go\n```\n\n### 🔨 Reference other targets using +\n\nUse `+` to reference other targets and create complex build inter-dependencies.\n\n<div align=\"center\"><a href=\"https://docs.earthly.dev/guides/target-ref\"><img src=\"docs/guides/img/ref-infographic-v2.png\" alt=\"Target and artifact reference syntax\" title=\"Reference targets using +\" width=\"600px\" /></a></div>\n\nExamples\n\n* Same directory (same Earthfile)\n\n  ```earthly\n  BUILD +some-target\n  FROM +some-target\n  COPY +some-target/my-artifact ./\n  ```\n\n* Other directories\n\n  ```earthly\n  BUILD ./some/local/path+some-target\n  FROM ./some/local/path+some-target\n  COPY ./some/local/path+some-target/my-artifact ./\n  ```\n\n* Other repositories\n\n  ```earthly\n  BUILD github.com/someone/someproject:v1.2.3+some-target\n  FROM github.com/someone/someproject:v1.2.3+some-target\n  COPY github.com/someone/someproject:v1.2.3+some-target/my-artifact ./\n  ```\n\n### 🔑 Cloud secrets support built-in\n\nSecrets are never stored within an image's layers and they are only available to the commands that need them.\n\n```bash\nearthly set /user/github/token 'shhh...'\n```\n\n```earthly\nrelease:\n  RUN --push --secret GITHUB_TOKEN=user/github/token github-release upload file.bin\n```\n\n\n<h2 align=\"center\">FAQ</h2>\n\n### How is Earthly different from Dockerfiles?\n\n[Dockerfiles](https://docs.docker.com/engine/reference/builder/) were designed for specifying the make-up of Docker images and that's where Dockerfiles stop. Earthly takes some key principles of Dockerfiles (like layer caching) but expands on the use cases. For example, Earthly can output regular artifacts, run unit and integration tests, and create several Docker images at a time - all outside the scope of Dockerfiles.\n\nIt is possible to use Dockerfiles in combination with other technologies (e.g., Makefiles or bash files) to solve such use cases. However, these combinations are difficult to parallelize, challenging to scale across repositories as they lack a robust import system, and often vary in style from one team to another. Earthly does not have these limitations as it was designed as a general-purpose build system.\n\nFor example, Earthly introduces a richer target, artifact, and image [referencing system](https://docs.earthly.dev/docs/guides/target-ref), allowing for better reuse in complex builds spanning a single large repository or multiple repositories. Because Dockerfiles are only meant to describe one image at a time, such features are outside the scope of applicability of Dockerfiles.\n\n### How do I know if a command is a classic Dockerfile command or an Earthly command?\n\nCheck out the [Earthfile reference doc page](https://docs.earthly.dev/docs/earthfile). It has all the commands there and specifies which commands are the same as Dockerfile commands and which are new.\n\n### Can Earthly build Dockerfiles?\n\nYes! You can use the command `FROM DOCKERFILE` to inherit the commands in an existing Dockerfile.\n\n```earthly\nbuild:\n  FROM DOCKERFILE .\n  SAVE IMAGE some-image:latest\n```\n\nYou may also optionally port your Dockerfiles to Earthly entirely. Translating Dockerfiles to Earthfiles is usually a matter of copy-pasting and making minor adjustments. See the [getting started page](https://docs.earthly.dev/basics) for some Earthfile examples.\n\n### How is Earthly different from Bazel?\n\n[Bazel](https://bazel.build) is a build tool developed by Google to optimize the speed, correctness, and reproducibility of their internal monorepo codebase. The main difference between Bazel and Earthly is that Bazel is a **build system**, whereas Earthly is a **general-purpose CI/CD framework**. For a more in-depth explanation see [our FAQ](https://earthly.dev/faq#bazel).\n\n\n<h2 align=\"center\">Contributing</h2>\n\n* Please report bugs as [GitHub issues](https://github.com/earthly/earthly/issues).\n* Join us on [Slack](https://earthly.dev/slack)!\n* Questions via GitHub issues are welcome!\n* PRs welcome! But please give a heads-up in a GitHub issue before starting work. If there is no GitHub issue for what you want to do, please create one.\n* To build from source, check the [contributing page](./CONTRIBUTING.md).\n\n\n<h2 align=\"center\">Licensing</h2>\n\nEarthly is licensed under the Mozilla Public License Version 2.0. See [LICENSE](./LICENSE).\n"
        },
        {
          "name": "analytics",
          "type": "tree",
          "content": null
        },
        {
          "name": "ast",
          "type": "tree",
          "content": null
        },
        {
          "name": "autocomplete",
          "type": "tree",
          "content": null
        },
        {
          "name": "billing",
          "type": "tree",
          "content": null
        },
        {
          "name": "buildcontext",
          "type": "tree",
          "content": null
        },
        {
          "name": "builder",
          "type": "tree",
          "content": null
        },
        {
          "name": "buildkitd",
          "type": "tree",
          "content": null
        },
        {
          "name": "cleanup",
          "type": "tree",
          "content": null
        },
        {
          "name": "cloud",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "code-of-conduct.md",
          "type": "blob",
          "size": 0.15625,
          "content": "# Earthly Community Code of Conduct\n\nPlease refer to the [CNCF Community Code of Conduct v1.0](https://github.com/cncf/foundation/blob/main/code-of-conduct.md)\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "conslogging",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "debugger",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker2earthly",
          "type": "tree",
          "content": null
        },
        {
          "name": "dockertar",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs-internals",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "domain",
          "type": "tree",
          "content": null
        },
        {
          "name": "earthfile2llb",
          "type": "tree",
          "content": null
        },
        {
          "name": "earthly",
          "type": "blob",
          "size": 5.736328125,
          "content": "#!/bin/bash\nset -e\n\nexport EARTHLY_GLOBAL_WAIT_END=true\nexport EARTHLY_USE_REMOTE_REGISTRY=true\n\nbindir=\"$HOME/.earthly\"\nif [ ! -d \"$bindir\" ]; then\n  mkdir -p \"$bindir\"\nfi\n\nbintag=${TAG:-prerelease}\nbuildkitd_img=${BUILDKITD_IMAGE:-docker.io/earthly/buildkitd}\n\n# get_realpath implements \"readlink -f\" for both Linux and MacOX (MacOS does not support readlink -f)\nfunction get_realpath() {\n    TARGET_FILE=\"$1\"\n    cd \"$(dirname \"$TARGET_FILE\")\"\n    TARGET_FILE=$(basename \"$TARGET_FILE\")\n    while [ -L \"$TARGET_FILE\" ]\n    do\n        TARGET_FILE=$(readlink \"$TARGET_FILE\")\n        cd \"$(dirname \"$TARGET_FILE\")\"\n        TARGET_FILE=$(basename \"$TARGET_FILE\")\n    done\n    PHYS_DIR=\"$(pwd -P)\"\n    RESULT=\"$PHYS_DIR/$TARGET_FILE\"\n    echo \"$RESULT\"\n}\n\nscriptname=$(basename \"$0\")\nscriptpath=$(get_realpath \"$0\")\nscript_dir=\"$( cd \"$( dirname \"$scriptpath\" )\" &> /dev/null && pwd )\"\n\nlast_check_state_path=\"/tmp/last-earthly-${bintag}-check\"\nlast_flag_hash_path=\"/tmp/last-earthly-${bintag}-flag-hash\"\n\nif ! which md5sum 2>/dev/null >&2; then\n  echo >&2 \"the md5sum command is required; please install it.\"\n  exit 1\nfi\n\ndetect_frontend() {\n  if which docker 2>/dev/null >&2 && docker info 2>/dev/null >&2; then\n    echo \"docker\"\n    return\n  elif which podman 2>/dev/null >&2 && podman info 2>/dev/null >&2; then\n    echo \"podman\"\n    return\n  fi\n\n  echo >&2 \"failed to detect docker/podman frontend\"\n  exit 1\n}\n\n# some tests run ./earthly when no front-end is present; when EARTHLY_DISABLE_FRONTEND_DETECTION=true, skip detection.\nif [ \"$EARTHLY_DISABLE_FRONTEND_DETECTION\" != \"true\" ]; then\n    frontend_bin=$(detect_frontend)\nfi\n\nget_latest_binary() {\n    \"$frontend_bin\" rm --force earthly_binary 2>/dev/null >&2 || true\n\n    \"$frontend_bin\" pull \"docker.io/earthly/earthlybinaries:${bintag}\" >&2\n    \"$frontend_bin\" create --name earthly_binary \"docker.io/earthly/earthlybinaries:${bintag}\" >&2\n\n    earth_bin_path=/earthly-linux-amd64\n    bk_platform=linux/amd64\n    if [ \"$(uname)\" == \"Darwin\" ]; then\n        if [ \"$(uname -m)\" == \"arm64\" ]; then\n            earth_bin_path=/earthly-darwin-arm64\n            bk_platform=linux/arm64\n        else\n            earth_bin_path=/earthly-darwin-amd64\n        fi\n    fi\n\n    dst=\"$bindir/earthly-${bintag}\"\n    \"$frontend_bin\" pull --platform=\"$bk_platform\" \"${buildkitd_img}:${bintag}\" >&2\n    \"$frontend_bin\" cp earthly_binary:\"$earth_bin_path\" \"$dst\" >&2\n    \"$frontend_bin\" rm earthly_binary >&2\n    echo \"extracted $earth_bin_path to $dst\" >&2\n}\n\ndo_reset() {\n    rm -f \"$last_check_state_path\"\n    \"$frontend_bin\" stop earthly-buildkitd || true\n    \"$frontend_bin\" rm -f earthly-buildkitd || true\n    rm -f \"$bindir/earthly-${bintag}\"\n    \"$frontend_bin\" rm --force earthly_binary 2>/dev/null || true\n    \"$frontend_bin\" rmi -f \"${buildkitd_img}:${bintag}\" || true\n    \"$frontend_bin\" rmi -f \"docker.io/earthly/earthlybinaries:${bintag}\" || true\n}\n\n\ndo_upgrade() {\n    do_reset\n    get_latest_binary\n}\n\ndo_help() {\n    if ! command -v \"$bindir/earthly-${bintag}\"; then\n        get_latest_binary\n    fi\n\n    echo \"------------------- earthly prerelease script help -------------------\"\n    echo \"NAME:\"\n    echo \"   $scriptname - A wrapper around the earthly binary that checks for updates once an hour\"\n    echo \"\"\n    echo \"COMMANDS:\"\n    echo \"   reset     Removes prerelease binary and associated docker containers\"\n    echo \"   upgrade   Forces a new check for the latest version\"\n    echo \"\"\n    echo \"VARIABLES:\"\n    echo \"   TAG       Sets the docker tag used to pull down binaries\"\n    echo \"\"\n    echo \"---------------------------- earthly help -----------------------------\"\n    exec -a \"$scriptname\" \"$bindir/earthly-${bintag}\" --help\n}\n\ncase \"$1\" in\n    reset)\n        do_reset\n        ;;\n\n    upgrade)\n        do_upgrade\n        ;;\n\n    -h)\n        do_help\n        ;; # using a ;& fallthrough won't work on macOS\n    --help)\n        do_help\n        ;;\n\n    *)\n        last=$(cat \"$last_check_state_path\" 2>/dev/null || echo 0)\n        now=$(date +%s)\n        since=$(( now - last ))\n\n        earthly_version_flag_overrides_path=\"$script_dir/.earthly_version_flag_overrides\"\n\n        last_flag_hash=$(cat \"$last_flag_hash_path\" 2>/dev/null || echo null)\n        flagoverride_hash=$(md5sum \"$earthly_version_flag_overrides_path\" | awk '{print $1}')\n        if [ -z \"$COMP_LINE\" ]; then\n            update=\"false\"\n            if [ ! -x \"$bindir/earthly-${bintag}\" ]; then\n                update=\"true\"\n            elif [ \"$last_flag_hash\" != \"$flagoverride_hash\" ]; then\n                echo \".earthly_version_flag_overrides has changed since last run, checking for ${bintag} binaries. \" \\\n                     \"If you see an \\\"unable to set <flag-name>: invalid flag\\\" error, you may have to wait for the\" \\\n                     \"${bintag} binary to be built by GHA before re-attempting a ./earthly upgrade\" | fold >&2\n                update=\"true\"\n            elif [ \"$since\" -ge 3600 ]; then\n                echo \"checking for latest earthly ${bintag} binaries\" >&2\n                update=\"true\"\n            fi\n\n            if [ \"$update\" = \"true\" ] && [ \"$EARTHLY_DISABLE_AUTO_UPDATE\" != \"true\" ]; then\n                get_latest_binary\n                echo \"Updated ${bintag} binary. Version:\" >&2\n                \"$bindir/earthly-${bintag}\" --version >&2\n                echo \"$now\" >\"$last_check_state_path\"\n                echo \"$flagoverride_hash\" >\"$last_flag_hash_path\"\n            fi\n        elif [ ! -x \"$bindir/earthly-${bintag}\" ]; then\n            # prerelease doesn't exist, exit silently to avoid displaying errors during tab-completion\n            exit 0\n        fi\n\n        EARTHLY_VERSION_FLAG_OVERRIDES=\"$(tr -d '\\n' < \"$earthly_version_flag_overrides_path\")\"\n        export EARTHLY_VERSION_FLAG_OVERRIDES\n        exec -a \"$scriptname\" \"$bindir/earthly-${bintag}\" \"$@\"\n        ;;\nesac\n"
        },
        {
          "name": "earthly-entrypoint.sh",
          "type": "blob",
          "size": 3.119140625,
          "content": "#!/bin/sh\nset -e\n\nEARTHLY_DEBUG=${EARTHLY_DEBUG:-false}\nif [ \"$EARTHLY_DEBUG\" = \"true\" ]; then\n    set -x\n    export EARTHLY_DEBUG\nfi\n\nearthly_config=\"/etc/.earthly/config.yml\"\nif [ ! -f \"$earthly_config\" ]; then\n  # Missing config, generate it and use the env vars\n  # Do not do both, since that would write to the mounted config\n  mkdir -p \"$(dirname $earthly_config)\" && touch \"$earthly_config\"\n\n  # Apply global configuration\n  if [ -n \"$GLOBAL_CONFIG\" ]; then\n    earthly --config \"$earthly_config\" config global \"$GLOBAL_CONFIG\"\n  fi\n\n  # Apply git configuration\n  if [ -n \"$GIT_CONFIG\" ]; then\n    earthly --config $earthly_config config git \"$GIT_CONFIG\"\n  fi\nfi\n\n# If no host specified, start an internal buildkit. If it is specified, rely on external setup\nif [ -z \"$NO_BUILDKIT\" ]; then\n  if [ -z \"$BUILDKIT_HOST\" ]; then\n    if ! captest --text | grep sys_admin > /dev/null; then\n      echo 1>&2 \"Container appears to be running unprivileged. Currently, privileged mode is required when buildkit runs inside the container.\"\n      echo 1>&2 \"To run this image without buildkit, set the environment variable NO_BUILDKIT=1\"\n      exit 1\n    fi\n\n    if [ -f \"/sys/fs/cgroup/cgroup.controllers\" ]; then\n        echo >&2 \"detected cgroups v2; earthly-entrypoint.sh running under pid=$$ with controllers \\\"$(cat /sys/fs/cgroup/cgroup.controllers)\\\" in group $(cat /proc/self/cgroup)\"\n        test \"$(cat /sys/fs/cgroup/cgroup.type)\" = \"domain\" || (echo >&2 \"WARNING: invalid root cgroup type: $(cat /sys/fs/cgroup/cgroup.type)\")\n    fi\n\n    # generate certificates\n    earthly --config \"$earthly_config\" --buildkit-host=tcp://127.0.0.1:8372 bootstrap --certs-hostname=\"$(hostname)\" --no-buildkit --force-certificate-generation\n\n    if [ ! -f /etc/ca.pem ]; then\n      ln -s /root/.earthly/certs/ca_cert.pem /etc/ca.pem\n    fi\n\n    if [ ! -f /etc/cert.pem ]; then\n      ln -s /root/.earthly/certs/buildkit_cert.pem /etc/cert.pem\n    fi\n\n    if [ ! -f /etc/key.pem ]; then\n      ln -s /root/.earthly/certs/buildkit_key.pem /etc/key.pem\n    fi\n\n\n    export BUILDKIT_TCP_TRANSPORT_ENABLED=true\n    export BUILDKIT_TLS_ENABLED=true\n\n    /usr/bin/entrypoint.sh \\\n      buildkitd \\\n        --config=/etc/buildkitd.toml \\\n        >/var/log/buildkitd.log 2>&1 \\\n        &\n\n    if [ \"$BUILDKIT_DEBUG\" = \"true\" ]; then\n        tail -f /var/log/buildkitd.log &\n    fi\n\n    EARTHLY_BUILDKIT_HOST=\"tcp://$(hostname):8372\" # hostname is not recognized as local for this reason\n    export EARTHLY_BUILDKIT_HOST\n  else\n    export EARTHLY_BUILDKIT_HOST=\"$BUILDKIT_HOST\"\n  fi\n  ! \"$EARTHLY_DEBUG\" || echo 1>&2 \"Using $EARTHLY_BUILDKIT_HOST as buildkit daemon\"\nfi\n\nif [ -n \"$SRC_DIR\" ]; then\n  echo 1>&2 'Please note that SRC_DIR is deprecated. This script will no longer automatically switch to it in the future.'\n  echo 1>&2 'Please change the container'\"'\"'s working directory instead (e.g. via docker run -w)'\n  cd \"$SRC_DIR\"\nfi\n\nif [ -n \"$EARTHLY_EXEC_CMD\" ]; then\n    export earthly_config\n    exec \"$EARTHLY_EXEC_CMD\"\n    exit 1 # this should never be reached\nfi\n\n# Run earthly with given args.\n# Exec so we don't have to trap and manage signal propagation\nexec earthly --config \"$earthly_config\" \"$@\"\n"
        },
        {
          "name": "earthly-next",
          "type": "blob",
          "size": 0.0400390625,
          "content": "88ecf5d6f17aa02643b80697f5251a2b2c1538e9\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "features",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 7.3544921875,
          "content": "module github.com/earthly/earthly\n\ngo 1.21.0\n\nrequire (\n\tgit.sr.ht/~nelsam/hel v0.6.2\n\tgithub.com/adrg/xdg v0.4.0\n\tgithub.com/alessio/shellescape v1.4.2\n\tgithub.com/alexcb/binarystream v0.0.0-20231130184431-f2f7a7543c6d\n\tgithub.com/aws/aws-sdk-go-v2 v1.26.1\n\tgithub.com/aws/aws-sdk-go-v2/config v1.18.16\n\tgithub.com/aws/aws-sdk-go-v2/service/cloudformation v1.50.0\n\tgithub.com/awslabs/amazon-ecr-credential-helper/ecr-login v0.0.0-20230227212328-9f4511cd144a\n\tgithub.com/containerd/containerd v1.7.8\n\tgithub.com/containerd/go-runc v1.1.0\n\tgithub.com/creack/pty v1.1.21\n\tgithub.com/docker/cli v24.0.5+incompatible\n\tgithub.com/docker/distribution v2.8.2+incompatible\n\tgithub.com/docker/go-connections v0.4.0\n\tgithub.com/docker/go-units v0.5.0\n\tgithub.com/dustin/go-humanize v1.0.1\n\tgithub.com/earthly/cloud-api v1.0.1-0.20240712142419-23b6f0913996\n\tgithub.com/earthly/earthly/ast v0.0.0-00010101000000-000000000000\n\tgithub.com/earthly/earthly/util/deltautil v0.0.0-20240507235053-335389ed3e2a\n\tgithub.com/elastic/go-sysinfo v1.9.0\n\tgithub.com/fatih/color v1.16.0\n\tgithub.com/gofrs/flock v0.8.1\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/grpc-ecosystem/go-grpc-middleware v1.4.0\n\tgithub.com/hako/durafmt v0.0.0-20210608085754-5c1018a4e16b\n\tgithub.com/hashicorp/go-multierror v1.1.1\n\tgithub.com/hashicorp/go-retryablehttp v0.7.5\n\tgithub.com/iancoleman/strcase v0.3.0\n\tgithub.com/jdxcode/netrc v1.0.0\n\tgithub.com/jessevdk/go-flags v1.5.0\n\tgithub.com/joho/godotenv v1.5.1\n\tgithub.com/kylelemons/godebug v1.1.0\n\tgithub.com/mattn/go-colorable v0.1.13\n\tgithub.com/mattn/go-isatty v0.0.20\n\tgithub.com/mitchellh/hashstructure/v2 v2.0.2\n\tgithub.com/mitchellh/mapstructure v1.5.0\n\tgithub.com/moby/buildkit v0.8.2-0.20210129065303-6b9ea0c202cf\n\tgithub.com/moby/patternmatcher v0.6.0\n\tgithub.com/opencontainers/go-digest v1.0.0\n\tgithub.com/opencontainers/image-spec v1.1.0-rc5\n\tgithub.com/otiai10/copy v1.14.0\n\tgithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/poy/onpar v0.3.2\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/stretchr/testify v1.9.0\n\tgithub.com/tonistiigi/fsutil v0.0.0-20230825212630-f09800878302\n\tgithub.com/urfave/cli/v2 v2.27.1\n\tgo.etcd.io/bbolt v1.3.7\n\tgolang.org/x/crypto v0.21.0\n\tgolang.org/x/exp v0.0.0-20240325151524-a685a6edb6d8\n\tgolang.org/x/oauth2 v0.18.0\n\tgolang.org/x/sync v0.6.0\n\tgolang.org/x/term v0.18.0\n\tgolang.org/x/text v0.14.0\n\tgoogle.golang.org/grpc v1.62.1\n\tgoogle.golang.org/protobuf v1.33.0\n\tgopkg.in/yaml.v3 v3.0.1\n)\n\nrequire (\n\tcloud.google.com/go/compute v1.23.3 // indirect\n\tcloud.google.com/go/compute/metadata v0.2.3 // indirect\n\tgithub.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24 // indirect\n\tgithub.com/Microsoft/go-winio v0.6.1 // indirect\n\tgithub.com/Microsoft/hcsshim v0.11.1 // indirect\n\tgithub.com/agext/levenshtein v1.2.3 // indirect\n\tgithub.com/antlr/antlr4/runtime/Go/antlr/v4 v4.0.0-20230219212500-1f9a474cc2dc // indirect\n\tgithub.com/aws/aws-sdk-go-v2/credentials v1.13.16 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.12.24 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.5 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.5 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/ini v1.3.31 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/ecr v1.24.3 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/ecrpublic v1.15.1 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.9.24 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sso v1.12.5 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.14.5 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sts v1.18.6 // indirect\n\tgithub.com/aws/smithy-go v1.20.2 // indirect\n\tgithub.com/containerd/console v1.0.3 // indirect\n\tgithub.com/containerd/continuity v0.4.2 // indirect\n\tgithub.com/containerd/log v0.1.0 // indirect\n\tgithub.com/containerd/ttrpc v1.2.2 // indirect\n\tgithub.com/containerd/typeurl/v2 v2.1.1 // indirect\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.2 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/distribution/reference v0.5.0 // indirect\n\tgithub.com/docker/docker v24.0.0-rc.2.0.20230905130451-032797ea4bcb+incompatible // indirect\n\tgithub.com/docker/docker-credential-helpers v0.7.0 // indirect\n\tgithub.com/elastic/go-windows v1.0.0 // indirect\n\tgithub.com/go-logr/logr v1.2.3 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/gogo/googleapis v1.4.1 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang/protobuf v1.5.4 // indirect\n\tgithub.com/google/go-cmp v0.6.0 // indirect\n\tgithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510 // indirect\n\tgithub.com/grpc-ecosystem/grpc-gateway/v2 v2.19.1 // indirect\n\tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n\tgithub.com/hashicorp/go-cleanhttp v0.5.2 // indirect\n\tgithub.com/in-toto/in-toto-golang v0.5.0 // indirect\n\tgithub.com/jmespath/go-jmespath v0.4.0 // indirect\n\tgithub.com/joeshaw/multierror v0.0.0-20140124173710-69b34d4ec901 // indirect\n\tgithub.com/klauspost/compress v1.17.2 // indirect\n\tgithub.com/kr/text v0.2.0 // indirect\n\tgithub.com/mitchellh/go-homedir v1.1.0 // indirect\n\tgithub.com/moby/locker v1.0.1 // indirect\n\tgithub.com/moby/sys/signal v0.7.0 // indirect\n\tgithub.com/morikuni/aec v1.0.0 // indirect\n\tgithub.com/opencontainers/runc v1.1.9 // indirect\n\tgithub.com/opencontainers/runtime-spec v1.1.0-rc.2 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/prometheus/procfs v0.9.0 // indirect\n\tgithub.com/rogpeppe/go-internal v1.12.0 // indirect\n\tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n\tgithub.com/secure-systems-lab/go-securesystemslib v0.4.0 // indirect\n\tgithub.com/shibumi/go-pathspec v1.3.0 // indirect\n\tgithub.com/tonistiigi/units v0.0.0-20180711220420-6950e57a87ea // indirect\n\tgithub.com/tonistiigi/vt100 v0.0.0-20230623042737-f9a4f7ef6531 // indirect\n\tgithub.com/vbatts/tar-split v0.11.3 // indirect\n\tgithub.com/xrash/smetrics v0.0.0-20201216005158-039620a65673 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.40.0 // indirect\n\tgo.opentelemetry.io/otel v1.14.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.14.0 // indirect\n\tgo.opentelemetry.io/otel/metric v0.37.0 // indirect\n\tgo.opentelemetry.io/otel/sdk v1.14.0 // indirect\n\tgo.opentelemetry.io/otel/trace v1.14.0 // indirect\n\tgo.opentelemetry.io/proto/otlp v0.19.0 // indirect\n\tgolang.org/x/mod v0.16.0 // indirect\n\tgolang.org/x/net v0.23.0 // indirect\n\tgolang.org/x/sys v0.18.0 // indirect\n\tgolang.org/x/time v0.3.0 // indirect\n\tgolang.org/x/tools v0.19.0 // indirect\n\tgoogle.golang.org/appengine v1.6.8 // indirect\n\tgoogle.golang.org/genproto v0.0.0-20240123012728-ef4313101c80 // indirect\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20240401170217-c3f982113cda // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240401170217-c3f982113cda // indirect\n\tgotest.tools/v3 v3.4.0 // indirect\n\thowett.net/plist v0.0.0-20181124034731-591f970eefbb // indirect\n)\n\nreplace (\n\tgithub.com/earthly/earthly/ast => ./ast\n\tgithub.com/earthly/earthly/util/deltautil => ./util/deltautil\n\tgithub.com/jdxcode/netrc => github.com/mikejholly/netrc v0.0.0-20221121193719-a154cb29ec2a\n\tgithub.com/jessevdk/go-flags => github.com/alexcb/go-flags v0.0.0-20210722203016-f11d7ecb5ee5\n\n\tgithub.com/moby/buildkit => github.com/earthly/buildkit v0.0.0-20240515200521-531b303aa8ec\n\tgithub.com/tonistiigi/fsutil => github.com/earthly/fsutil v0.0.0-20231030221755-644b08355b65\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 78.5029296875,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=\ncloud.google.com/go v0.44.1/go.mod h1:iSa0KzasP4Uvy3f1mN/7PiObzGgflwredwwASm/v6AU=\ncloud.google.com/go v0.44.2/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=\ncloud.google.com/go v0.45.1/go.mod h1:RpBamKRgapWJb87xiFSdk4g1CME7QZg3uwTez+TSTjc=\ncloud.google.com/go v0.46.3/go.mod h1:a6bKKbmY7er1mI7TEI4lsAkts/mkhTSZK8w33B4RAg0=\ncloud.google.com/go v0.50.0/go.mod h1:r9sluTvynVuxRIOHXQEHMFffphuXHOMZMycpNR5e6To=\ncloud.google.com/go v0.52.0/go.mod h1:pXajvRH/6o3+F9jDHZWQ5PbGhn+o8w9qiu/CffaVdO4=\ncloud.google.com/go v0.53.0/go.mod h1:fp/UouUEsRkN6ryDKNW/Upv/JBKnv6WDthjR6+vze6M=\ncloud.google.com/go v0.54.0/go.mod h1:1rq2OEkV3YMf6n/9ZvGWI3GWw0VoqH/1x2nd8Is/bPc=\ncloud.google.com/go v0.56.0/go.mod h1:jr7tqZxxKOVYizybht9+26Z/gUq7tiRzu+ACVAMbKVk=\ncloud.google.com/go v0.57.0/go.mod h1:oXiQ6Rzq3RAkkY7N6t3TcE6jE+CIBBbA36lwQ1JyzZs=\ncloud.google.com/go v0.62.0/go.mod h1:jmCYTdRCQuc1PHIIJ/maLInMho30T/Y0M4hTdTShOYc=\ncloud.google.com/go v0.65.0/go.mod h1:O5N8zS7uWy9vkA9vayVHs65eM1ubvY4h553ofrNHObY=\ncloud.google.com/go/bigquery v1.0.1/go.mod h1:i/xbL2UlR5RvWAURpBYZTtm/cXjCha9lbfbpx4poX+o=\ncloud.google.com/go/bigquery v1.3.0/go.mod h1:PjpwJnslEMmckchkHFfq+HTD2DmtT67aNFKH1/VBDHE=\ncloud.google.com/go/bigquery v1.4.0/go.mod h1:S8dzgnTigyfTmLBfrtrhyYhwRxG72rYxvftPBK2Dvzc=\ncloud.google.com/go/bigquery v1.5.0/go.mod h1:snEHRnqQbz117VIFhE8bmtwIDY80NLUZUMb4Nv6dBIg=\ncloud.google.com/go/bigquery v1.7.0/go.mod h1://okPTzCYNXSlb24MZs83e2Do+h+VXtc4gLoIoXIAPc=\ncloud.google.com/go/bigquery v1.8.0/go.mod h1:J5hqkt3O0uAFnINi6JXValWIb1v0goeZM77hZzJN/fQ=\ncloud.google.com/go/compute v1.23.3 h1:6sVlXXBmbd7jNX0Ipq0trII3e4n1/MsADLK6a+aiVlk=\ncloud.google.com/go/compute v1.23.3/go.mod h1:VCgBUoMnIVIR0CscqQiPJLAG25E3ZRZMzcFZeQ+h8CI=\ncloud.google.com/go/compute/metadata v0.2.3 h1:mg4jlk7mCAj6xXp9UJ4fjI9VUI5rubuGBW5aJ7UnBMY=\ncloud.google.com/go/compute/metadata v0.2.3/go.mod h1:VAV5nSsACxMJvgaAuX6Pk2AawlZn8kiOGuCv6gTkwuA=\ncloud.google.com/go/datastore v1.0.0/go.mod h1:LXYbyblFSglQ5pkeyhO+Qmw7ukd3C+pD7TKLgZqpHYE=\ncloud.google.com/go/datastore v1.1.0/go.mod h1:umbIZjpQpHh4hmRpGhH4tLFup+FVzqBi1b3c64qFpCk=\ncloud.google.com/go/pubsub v1.0.1/go.mod h1:R0Gpsv3s54REJCy4fxDixWD93lHJMoZTyQ2kNxGRt3I=\ncloud.google.com/go/pubsub v1.1.0/go.mod h1:EwwdRX2sKPjnvnqCa270oGRyludottCI76h+R3AArQw=\ncloud.google.com/go/pubsub v1.2.0/go.mod h1:jhfEVHT8odbXTkndysNHCcx0awwzvfOlguIAii9o8iA=\ncloud.google.com/go/pubsub v1.3.1/go.mod h1:i+ucay31+CNRpDW4Lu78I4xXG+O1r/MAHgjpRVR+TSU=\ncloud.google.com/go/storage v1.0.0/go.mod h1:IhtSnM/ZTZV8YYJWCY8RULGVqBDmpoyjwiyrjsg+URw=\ncloud.google.com/go/storage v1.5.0/go.mod h1:tpKbwo567HUNpVclU5sGELwQWBDZ8gh0ZeosJ0Rtdos=\ncloud.google.com/go/storage v1.6.0/go.mod h1:N7U0C8pVQ/+NIKOBQyamJIeKQKkZ+mxpohlUTyfDhBk=\ncloud.google.com/go/storage v1.8.0/go.mod h1:Wv1Oy7z6Yz3DshWRJFhqM/UCfaWIRTdp0RXyy7KQOVs=\ncloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9ullr3+Kg0=\ndmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\ngit.sr.ht/~nelsam/hel v0.6.2 h1:ClLTpYFlMoQbwE8fj6ssImVc58wYznP3vYlSY1Luxt4=\ngit.sr.ht/~nelsam/hel v0.6.2/go.mod h1:e4MpaLK/urZmA8xbasYZU+KSX4BRAxFNudDfFJ2qD7o=\ngithub.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24 h1:bvDV9vkmnHYOMsOr4WLk+Vo07yKIzd94sVoIqshQ4bU=\ngithub.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24/go.mod h1:8o94RPi1/7XTJvwPpRSzSUedZrtlirdB3r9Z20bi2f8=\ngithub.com/AdamKorcz/go-118-fuzz-build v0.0.0-20230306123547-8075edf89bb0 h1:59MxjQVfjXsBpLy+dbd2/ELV5ofnUkUZBvWSC85sheA=\ngithub.com/AdamKorcz/go-118-fuzz-build v0.0.0-20230306123547-8075edf89bb0/go.mod h1:OahwfttHWG6eJ0clwcfBAHoDI6X/LV/15hx/wlMZSrU=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/toml v1.2.1/go.mod h1:CxXYINrC8qIiEnFrOxCa7Jy5BFHlXnUU2pbicEuybxQ=\ngithub.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\ngithub.com/Masterminds/semver/v3 v3.1.0 h1:Y2lUDsFKVRSYGojLJ1yLxSXdMmMYTYls0rCvoqmMUQk=\ngithub.com/Masterminds/semver/v3 v3.1.0/go.mod h1:VPu/7SZ7ePZ3QOrcuXROw5FAcLl4a0cBrbBpGY/8hQs=\ngithub.com/Microsoft/go-winio v0.6.1 h1:9/kr64B9VUZrLm5YYwbGtUJnMgqWVOdUAXu6Migciow=\ngithub.com/Microsoft/go-winio v0.6.1/go.mod h1:LRdKpFKfdobln8UmuiYcKPot9D2v6svN5+sAH+4kjUM=\ngithub.com/Microsoft/hcsshim v0.11.1 h1:hJ3s7GbWlGK4YVV92sO88BQSyF4ZLVy7/awqOlPxFbA=\ngithub.com/Microsoft/hcsshim v0.11.1/go.mod h1:nFJmaO4Zr5Y7eADdFOpYswDDlNVbvcIJJNJLECr5JQg=\ngithub.com/OneOfOne/xxhash v1.2.2/go.mod h1:HSdplMjZKSmBqAxg5vPj2TmRDmfkzw+cTzAElWljhcU=\ngithub.com/adrg/xdg v0.4.0 h1:RzRqFcjH4nE5C6oTAxhBtoE2IRyjBSa62SCbyPidvls=\ngithub.com/adrg/xdg v0.4.0/go.mod h1:N6ag73EX4wyxeaoeHctc1mas01KZgsj5tYiAIwqJE/E=\ngithub.com/agext/levenshtein v1.2.3 h1:YB2fHEn0UJagG8T1rrWknE3ZQzWM06O8AMAatNn7lmo=\ngithub.com/agext/levenshtein v1.2.3/go.mod h1:JEDfjyjHDjOF/1e4FlBE/PkbqA9OfWu2ki2W0IB5558=\ngithub.com/alessio/shellescape v1.4.2 h1:MHPfaU+ddJ0/bYWpgIeUnQUqKrlJ1S7BfEYPM4uEoM0=\ngithub.com/alessio/shellescape v1.4.2/go.mod h1:PZAiSCk0LJaZkiCSkPv8qIobYglO3FPpyFjDCtHLS30=\ngithub.com/alexcb/binarystream v0.0.0-20231130184431-f2f7a7543c6d h1:ju0cQEdndxS7qyRPkwf0lkqD7fyVv6jHuwELISNZSwk=\ngithub.com/alexcb/binarystream v0.0.0-20231130184431-f2f7a7543c6d/go.mod h1:zKsqqCtJopbsBYivUZGuK3Tc6fFxvNUrjUJzGtxksq4=\ngithub.com/alexcb/go-flags v0.0.0-20210722203016-f11d7ecb5ee5 h1:im0niQRZXdxO8F1rw4zwb5rJmOJ9XnNtlnMFyfLenYE=\ngithub.com/alexcb/go-flags v0.0.0-20210722203016-f11d7ecb5ee5/go.mod h1:Fw0T6WPc1dYxT4mKEZRfG5kJhaTDP9pj1c2EWnYs/m4=\ngithub.com/anchore/go-struct-converter v0.0.0-20221118182256-c68fdcfa2092 h1:aM1rlcoLz8y5B2r4tTLMiVTrMtpfY0O8EScKJxaSaEc=\ngithub.com/anchore/go-struct-converter v0.0.0-20221118182256-c68fdcfa2092/go.mod h1:rYqSE9HbjzpHTI74vwPvae4ZVYZd1lue2ta6xHPdblA=\ngithub.com/antihax/optional v1.0.0/go.mod h1:uupD/76wgC+ih3iEmQUL+0Ugr19nfwCT1kdvxnR2qWY=\ngithub.com/antlr/antlr4/runtime/Go/antlr/v4 v4.0.0-20230219212500-1f9a474cc2dc h1:ikxgKfnYm4kXCOohe1uCkVFwZcABDZbVsqginko+GY8=\ngithub.com/antlr/antlr4/runtime/Go/antlr/v4 v4.0.0-20230219212500-1f9a474cc2dc/go.mod h1:pSwJ0fSY5KhvocuWSx4fz3BA8OrA1bQn+K1Eli3BRwM=\ngithub.com/aws/aws-sdk-go-v2 v1.17.4/go.mod h1:uzbQtefpm44goOPmdKyAlXSNcwlRgF3ePWVW6EtJvvw=\ngithub.com/aws/aws-sdk-go-v2 v1.17.5/go.mod h1:uzbQtefpm44goOPmdKyAlXSNcwlRgF3ePWVW6EtJvvw=\ngithub.com/aws/aws-sdk-go-v2 v1.17.6/go.mod h1:uzbQtefpm44goOPmdKyAlXSNcwlRgF3ePWVW6EtJvvw=\ngithub.com/aws/aws-sdk-go-v2 v1.26.1 h1:5554eUqIYVWpU0YmeeYZ0wU64H2VLBs8TlhRB2L+EkA=\ngithub.com/aws/aws-sdk-go-v2 v1.26.1/go.mod h1:ffIFB97e2yNsv4aTSGkqtHnppsIJzw7G7BReUZ3jCXM=\ngithub.com/aws/aws-sdk-go-v2/config v1.18.12/go.mod h1:J36fOhj1LQBr+O4hJCiT8FwVvieeoSGOtPuvhKlsNu8=\ngithub.com/aws/aws-sdk-go-v2/config v1.18.16 h1:4r7gsCu8Ekwl5iJGE/GmspA2UifqySCCkyyyPFeWs3w=\ngithub.com/aws/aws-sdk-go-v2/config v1.18.16/go.mod h1:XjM6lVbq7UgELp9NjXBrb1DQY/ownlWsvDhEQksemJc=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.13.12/go.mod h1:37HG2MBroXK3jXfxVGtbM2J48ra2+Ltu+tmwr/jO0KA=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.13.15/go.mod h1:vRMLMD3/rXU+o6j2MW5YefrGMBmdTvkLLGqFwMLBHQc=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.13.16 h1:GgToSxaENX/1zXIGNFfiVk4hxryYJ5Vt4Mh8XLAL7Lc=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.13.16/go.mod h1:KP7aFJhfwPFgx9aoVYL2nYHjya5WBD98CWaadpgmnpY=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.12.22/go.mod h1:YGSIJyQ6D6FjKMQh16hVFSIUD54L4F7zTGePqYMYYJU=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.12.23/go.mod h1:mOtmAg65GT1HIL/HT/PynwPbS+UG0BgCZ6vhkPqnxWo=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.12.24 h1:5qyqXASrX2zy5cTnoHHa4N2c3Lc94GH7gjnBP3GwKdU=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.12.24/go.mod h1:neYVaeKr5eT7BzwULuG2YbLhzWZ22lpjKdCybR7AXrQ=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.1.28/go.mod h1:3lwChorpIM/BhImY/hy+Z6jekmN92cXGPI1QJasVPYY=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.1.29/go.mod h1:Dip3sIGv485+xerzVv24emnjX5Sg88utCL8fwGmCeWg=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.1.30/go.mod h1:LUBAO3zNXQjoONBKn/kR1y0Q4cj/D02Ts0uHYjcCQLM=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.5 h1:aw39xVGeRWlWx9EzGVnhOR4yOjQDHPQ6o6NmBlscyQg=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.5/go.mod h1:FSaRudD0dXiMPK2UjknVwwTYyZMRsHv3TtkabsZih5I=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.4.22/go.mod h1:EqK7gVrIGAHyZItrD1D8B0ilgwMD1GiWAmbU4u/JHNk=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.4.23/go.mod h1:mr6c4cHC+S/MMkrjtSlG4QA36kOznDep+0fga5L/fGQ=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.4.24/go.mod h1:gAuCezX/gob6BSMbItsSlMb6WZGV7K2+fWOvk8xBSto=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.5 h1:PG1F3OD1szkuQPzDw3CIQsRIrtTlUC3lP84taWzHlq0=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.5/go.mod h1:jU1li6RFryMz+so64PpKtudI+QzbKoIEivqdf6LNpOc=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.3.29/go.mod h1:TwuqRBGzxjQJIwH16/fOZodwXt2Zxa9/cwJC5ke4j7s=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.3.31 h1:hf+Vhp5WtTdcSdE+yEcUz8L73sAzN0R+0jQv+Z51/mI=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.3.31/go.mod h1:5zUjguZfG5qjhG9/wqmuyHRyUftl2B5Cp6NNxNC6kRA=\ngithub.com/aws/aws-sdk-go-v2/service/cloudformation v1.50.0 h1:Ap5tOJfeAH1hO2UQc3X3uMlwP7uryFeZXMvZCXIlLSE=\ngithub.com/aws/aws-sdk-go-v2/service/cloudformation v1.50.0/go.mod h1:/v2KYdCW4BaHKayenaWEXOOdxItIwEA3oU0XzuQY3F0=\ngithub.com/aws/aws-sdk-go-v2/service/ecr v1.18.2/go.mod h1:53xgmccefO+AwKsxVKuTh2vo/IDOkeMWNpmDuhZH1Vc=\ngithub.com/aws/aws-sdk-go-v2/service/ecr v1.24.3 h1:+sbyLjtAq0Xg9ZOQ2mBibklsGUyX6I2OfRTDsha9uU4=\ngithub.com/aws/aws-sdk-go-v2/service/ecr v1.24.3/go.mod h1:/m9MiYl5Ds0cZqy/bbeSUWxKLwTarGugjXxSgiXNQFc=\ngithub.com/aws/aws-sdk-go-v2/service/ecrpublic v1.15.1 h1:Sl1Bvj/616Qx0FIzUqAihCUzf5P+IW3/PYUBBOMCPr0=\ngithub.com/aws/aws-sdk-go-v2/service/ecrpublic v1.15.1/go.mod h1:YkDjv16NP6uY5QGUGXGNHTSc+NWuhnJ9z8FIM+16zNk=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.9.22/go.mod h1:xt0Au8yPIwYXf/GYPy/vl4K3CgwhfQMYbrH7DlUUIws=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.9.23/go.mod h1:9uPh+Hrz2Vn6oMnQYiUi/zbh3ovbnQk19YKINkQny44=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.9.24 h1:c5qGfdbCHav6viBwiyDns3OXqhqAbGjfIB4uVu2ayhk=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.9.24/go.mod h1:HMA4FZG6fyib+NDo5bpIxX1EhYjrAOveZJY2YR0xrNE=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.12.1/go.mod h1:IgV8l3sj22nQDd5qcAGY0WenwCzCphqdbFOpfktZPrI=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.12.4/go.mod h1:jtLIhd+V+lft6ktxpItycqHqiVXrPIRjWIsFIlzMriw=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.12.5 h1:bdKIX6SVF3nc3xJFw6Nf0igzS6Ff/louGq8Z6VP/3Hs=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.12.5/go.mod h1:vuWiaDB30M/QTC+lI3Wj6S/zb7tpUK2MSYgy3Guh2L0=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.14.1/go.mod h1:O1YSOg3aekZibh2SngvCRRG+cRHKKlYgxf/JBF/Kr/k=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.14.4/go.mod h1:zVwRrfdSmbRZWkUkWjOItY7SOalnFnq/Yg2LVPqDjwc=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.14.5 h1:xLPZMyuZ4GuqRCIec/zWuIhRFPXh2UOJdLXBSi64ZWQ=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.14.5/go.mod h1:QjxpHmCwAg0ESGtPQnLIVp7SedTOBMYy+Slr3IfMKeI=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.18.3/go.mod h1:b+psTJn33Q4qGoDaM7ZiOVVG8uVjGI6HaZ8WBHdgDgU=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.18.5/go.mod h1:1mKZHLLpDMHTNSYPJ7qrcnCQdHCWsNQaT0xRvq2u80s=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.18.6 h1:rIFn5J3yDoeuKCE9sESXqM5POTAhOP1du3bv/qTL+tE=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.18.6/go.mod h1:48WJ9l3dwP0GSHWGc5sFGGlCkuA82Mc2xnw+T6Q8aDw=\ngithub.com/aws/smithy-go v1.13.5/go.mod h1:Tg+OJXh4MB2R/uN61Ko2f6hTZwB/ZYGOtib8J3gBHzA=\ngithub.com/aws/smithy-go v1.20.2 h1:tbp628ireGtzcHDDmLT/6ADHidqnwgF57XOXZe6tp4Q=\ngithub.com/aws/smithy-go v1.20.2/go.mod h1:krry+ya/rV9RDcV/Q16kpu6ypI4K2czasz0NC3qS14E=\ngithub.com/awslabs/amazon-ecr-credential-helper/ecr-login v0.0.0-20230227212328-9f4511cd144a h1:98IhppLbHij6fCOBs/u3OKihpAslwAwzybsxWo7J3ZM=\ngithub.com/awslabs/amazon-ecr-credential-helper/ecr-login v0.0.0-20230227212328-9f4511cd144a/go.mod h1:KhGA7lm/QNzcdQVG4wUm5Ncnpf5g7xKhnfrPLDpYo5A=\ngithub.com/benbjohnson/clock v1.1.0/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/cespare/xxhash v1.1.0/go.mod h1:XrSqR1VqqWfGrhpAt58auRo0WTKS1nRRg3ghfAqPWnc=\ngithub.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\ngithub.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\ngithub.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\ngithub.com/cncf/udpa/go v0.0.0-20210930031921-04548b0d99d4/go.mod h1:6pvJx4me5XPnfI9Z40ddWsdw2W/uZgQLFXToKeRcDiI=\ngithub.com/cncf/xds/go v0.0.0-20210312221358-fbca930ec8ed/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\ngithub.com/cncf/xds/go v0.0.0-20210805033703-aa0b78936158/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\ngithub.com/cncf/xds/go v0.0.0-20210922020428-25de7278fc84/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\ngithub.com/cncf/xds/go v0.0.0-20211011173535-cb28da3451f1/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\ngithub.com/cncf/xds/go v0.0.0-20231128003011-0fa0005c9caa h1:jQCWAUqqlij9Pgj2i/PB79y4KOPYVyFYdROxgaCwdTQ=\ngithub.com/cncf/xds/go v0.0.0-20231128003011-0fa0005c9caa/go.mod h1:x/1Gn8zydmfq8dk6e9PdstVsDgu9RuyIIJqAaF//0IM=\ngithub.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=\ngithub.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=\ngithub.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=\ngithub.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=\ngithub.com/containerd/console v1.0.3 h1:lIr7SlA5PxZyMV30bDW0MGbiOPXwc63yRuCP0ARubLw=\ngithub.com/containerd/console v1.0.3/go.mod h1:7LqA/THxQ86k76b8c/EMSiaJ3h1eZkMkXar0TQ1gf3U=\ngithub.com/containerd/containerd v1.7.8 h1:RkwgOW3AVUT3H/dyT0W03Dc8AzlpMG65lX48KftOFSM=\ngithub.com/containerd/containerd v1.7.8/go.mod h1:L/Hn9qylJtUFT7cPeM0Sr3fATj+WjHwRQ0lyrYk3OPY=\ngithub.com/containerd/continuity v0.4.2 h1:v3y/4Yz5jwnvqPKJJ+7Wf93fyWoCB3F5EclWG023MDM=\ngithub.com/containerd/continuity v0.4.2/go.mod h1:F6PTNCKepoxEaXLQp3wDAjygEnImnZ/7o4JzpodfroQ=\ngithub.com/containerd/fifo v1.1.0 h1:4I2mbh5stb1u6ycIABlBw9zgtlK8viPI9QkQNRQEEmY=\ngithub.com/containerd/fifo v1.1.0/go.mod h1:bmC4NWMbXlt2EZ0Hc7Fx7QzTFxgPID13eH0Qu+MAb2o=\ngithub.com/containerd/go-runc v1.1.0 h1:OX4f+/i2y5sUT7LhmcJH7GYrjjhHa1QI4e8yO0gGleA=\ngithub.com/containerd/go-runc v1.1.0/go.mod h1:xJv2hFF7GvHtTJd9JqTS2UVxMkULUYw4JN5XAUZqH5U=\ngithub.com/containerd/log v0.1.0 h1:TCJt7ioM2cr/tfR8GPbGf9/VRAX8D2B4PjzCpfX540I=\ngithub.com/containerd/log v0.1.0/go.mod h1:VRRf09a7mHDIRezVKTRCrOq78v577GXq3bSa3EhrzVo=\ngithub.com/containerd/nydus-snapshotter v0.13.1 h1:5XNkCZ9ivLXCcyx3Jbbfh/fntkcls69uBg0x9VE8zlk=\ngithub.com/containerd/nydus-snapshotter v0.13.1/go.mod h1:XWAz9ytsjBuKPVXDKP3xoMlcSKNsGnjXlEup6DuzUIo=\ngithub.com/containerd/stargz-snapshotter v0.14.3 h1:OTUVZoPSPs8mGgmQUE1dqw3WX/3nrsmsurW7UPLWl1U=\ngithub.com/containerd/stargz-snapshotter/estargz v0.14.3 h1:OqlDCK3ZVUO6C3B/5FSkDwbkEETK84kQgEeFwDC+62k=\ngithub.com/containerd/stargz-snapshotter/estargz v0.14.3/go.mod h1:KY//uOCIkSuNAHhJogcZtrNHdKrA99/FCCRjE3HD36o=\ngithub.com/containerd/ttrpc v1.2.2 h1:9vqZr0pxwOF5koz6N0N3kJ0zDHokrcPxIR/ZR2YFtOs=\ngithub.com/containerd/ttrpc v1.2.2/go.mod h1:sIT6l32Ph/H9cvnJsfXM5drIVzTr5A2flTf1G5tYZak=\ngithub.com/containerd/typeurl/v2 v2.1.1 h1:3Q4Pt7i8nYwy2KmQWIw2+1hTvwTE/6w9FqcttATPO/4=\ngithub.com/containerd/typeurl/v2 v2.1.1/go.mod h1:IDp2JFvbwZ31H8dQbEIY7sDl2L3o3HZj1hsSQlywkQ0=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2 h1:p1EgwI/C7NhT0JmVkwCD2ZBK8j4aeHQX2pMHHBfMQ6w=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/creack/pty v1.1.21 h1:1/QdRyBaHHJP61QkWMXlOIBfsgdDeeKfK8SYVUWJKf0=\ngithub.com/creack/pty v1.1.21/go.mod h1:MOBLtS5ELjhRRrroQr9kyvTxUAFNvYEK993ew/Vr4O4=\ngithub.com/danieljoos/wincred v1.1.2/go.mod h1:GijpziifJoIBfYh+S7BbkdUTU4LfM+QnGqR5Vl2tAx0=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/distribution/reference v0.5.0 h1:/FUIFXtfc/x2gpa5/VGfiGLuOIdYa1t65IKK2OFGvA0=\ngithub.com/distribution/reference v0.5.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=\ngithub.com/docker/cli v24.0.5+incompatible h1:WeBimjvS0eKdH4Ygx+ihVq1Q++xg36M/rMi4aXAvodc=\ngithub.com/docker/cli v24.0.5+incompatible/go.mod h1:JLrzqnKDaYBop7H2jaqPtU4hHvMKP+vjCwu2uszcLI8=\ngithub.com/docker/distribution v2.8.2+incompatible h1:T3de5rq0dB1j30rp0sA2rER+m322EBzniBPB6ZIzuh8=\ngithub.com/docker/distribution v2.8.2+incompatible/go.mod h1:J2gT2udsDAN96Uj4KfcMRqY0/ypR+oyYUYmja8H+y+w=\ngithub.com/docker/docker v24.0.0-rc.2.0.20230905130451-032797ea4bcb+incompatible h1:1UUPAB9PAPUbM10+qIKPL5tKZ+VAddWgbQUf+x1QBfI=\ngithub.com/docker/docker v24.0.0-rc.2.0.20230905130451-032797ea4bcb+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\ngithub.com/docker/docker-credential-helpers v0.7.0 h1:xtCHsjxogADNZcdv1pKUHXryefjlVRqWqIhk/uXJp0A=\ngithub.com/docker/docker-credential-helpers v0.7.0/go.mod h1:rETQfLdHNT3foU5kuNkFR1R1V12OJRRO5lzt2D1b5X0=\ngithub.com/docker/go-connections v0.4.0 h1:El9xVISelRB7BuFusrZozjnkIM5YnzCViNKohAFqRJQ=\ngithub.com/docker/go-connections v0.4.0/go.mod h1:Gbd7IOopHjR8Iph03tsViu4nIes5XhDvyHbTtUxmeec=\ngithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c h1:+pKlWGMw7gf6bQ+oDZB4KHQFypsfjYlq/C4rfL7D3g8=\ngithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c/go.mod h1:Uw6UezgYA44ePAFQYUehOuCzmy5zmg/+nl2ZfMWGkpA=\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=\ngithub.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=\ngithub.com/earthly/buildkit v0.0.0-20240515200521-531b303aa8ec h1:vf6x0fPOWKakjH3n2N1O9Tg5j1HDIJsC3Kkgmuko2U0=\ngithub.com/earthly/buildkit v0.0.0-20240515200521-531b303aa8ec/go.mod h1:1/yAC8A0Tu94Bdmv07gaG1pFBp+CetVwO7oB3qvZXUc=\ngithub.com/earthly/cloud-api v1.0.1-0.20240712142419-23b6f0913996 h1:UobaUMrXjUcVaHXAev9aOflHHRg9gO+uOwhCvWJ9+cw=\ngithub.com/earthly/cloud-api v1.0.1-0.20240712142419-23b6f0913996/go.mod h1:rU/tYJ7GFBjdKAITV2heDbez++glpGSbtJaZcp73rNI=\ngithub.com/earthly/fsutil v0.0.0-20231030221755-644b08355b65 h1:6oyWHoxHXwcTt4EqmMw6361scIV87uEAB1N42+VpIwk=\ngithub.com/earthly/fsutil v0.0.0-20231030221755-644b08355b65/go.mod h1:9kMVqMyQ/Sx2df5LtnGG+nbrmiZzCS7V6gjW3oGHsvI=\ngithub.com/elastic/go-sysinfo v1.9.0 h1:usICqY/Nw4Mpn9f4LdtpFrKxXroJDe81GaxxUlCckIo=\ngithub.com/elastic/go-sysinfo v1.9.0/go.mod h1:eBD1wEGVaRnRLGecc9iG1z8eOv5HnEdz9+nWd8UAxcE=\ngithub.com/elastic/go-windows v1.0.0 h1:qLURgZFkkrYyTTkvYpsZIgf83AUsdIHfvlJaqaZ7aSY=\ngithub.com/elastic/go-windows v1.0.0/go.mod h1:TsU0Nrp7/y3+VwE82FoZF8gC/XFg/Elz6CcloAxnPgU=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20201210154907-fd9021fe5dad/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20210512163311-63b5d3c536b0/go.mod h1:hliV/p42l8fGbc6Y9bQ70uLwIvmJyVE5k4iMKlh8wCQ=\ngithub.com/envoyproxy/go-control-plane v0.9.10-0.20210907150352-cf90f659a021/go.mod h1:AFq3mo9L8Lqqiid3OhADV3RfLJnjiw63cSpi+fDTRC0=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/envoyproxy/protoc-gen-validate v1.0.4 h1:gVPz/FMfvh57HdSJQyvBtF00j8JU4zdyUgIUNhlgg0A=\ngithub.com/envoyproxy/protoc-gen-validate v1.0.4/go.mod h1:qys6tmnRsYrQqIhm2bvKZH4Blx/1gTIZ2UKVY1M+Yew=\ngithub.com/fatih/color v1.16.0 h1:zmkK9Ngbjj+K0yRhTVONQh1p/HknKYSlNT+vZCzyokM=\ngithub.com/fatih/color v1.16.0/go.mod h1:fL2Sau1YI5c0pdGEVCbKQbLXB6edEj1ZgiY4NijnWvE=\ngithub.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\ngithub.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-kit/log v0.1.0/go.mod h1:zbhenjAZHb184qTLMA9ZjW7ThYL0H2mk7Q6pNt4vbaY=\ngithub.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.2.3 h1:2DntVwHkVopvECVRSlL5PSo9eG+cAkDCuckLubN+rq0=\ngithub.com/go-logr/logr v1.2.3/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/gofrs/flock v0.8.1 h1:+gYjHKf32LDeiEEFhQaotPbLuUXjY5ZqxKgXy7n59aw=\ngithub.com/gofrs/flock v0.8.1/go.mod h1:F1TvTiK9OcQqauNUHlbJvyl9Qa1QvF/gOUDKA14jxHU=\ngithub.com/gogo/googleapis v1.4.1 h1:1Yx4Myt7BxzvUr5ldGSbwYiZG6t9wGBZ+8/fX3Wvtq0=\ngithub.com/gogo/googleapis v1.4.1/go.mod h1:2lpHqI5OcWCtVElxXnPt+s8oJvMpySlOyM6xDCrzib4=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/glog v1.0.0/go.mod h1:EWib/APOK0SL3dFbYqvxE3UYd8E6s1ouQ7iEp/0LWV4=\ngithub.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.2.0/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.3.1/go.mod h1:sBzyDLLjw3U8JLTeZvSv8jJB+tU5PVekmnlKIyFUx0Y=\ngithub.com/golang/mock v1.4.0/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.1/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.3/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.4/go.mod h1:l3mdAwkq5BuhzHwde/uurv3sEJeZMXNpwsxVWU71h+4=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.4/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.5/go.mod h1:6O5/vntMXwX2lRkT1hjjk0nAC1IDOTvTlVgjlRvqsdk=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.4.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.6/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.8/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=\ngithub.com/google/martian/v3 v3.0.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\ngithub.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20190515194954-54271f7e092f/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20191218002539-d4f498aebedc/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200212024743-f11f1df84d12/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200229191704-1ebb73c60ed3/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200430221834-fc25d7d30c6d/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200708004538-1a94d8640e99/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\ngithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510 h1:El6M4kTTCOh6aBiKaUGG7oYTSPP8MxqL4YI3kZKwcP4=\ngithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510/go.mod h1:pupxD2MaaD3pAXIBCelhxNneeOaAeabZDe5s4K6zSpQ=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=\ngithub.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=\ngithub.com/grpc-ecosystem/go-grpc-middleware v1.4.0 h1:UH//fgunKIs4JdUbpDl1VZCDaL56wXCB/5+wF6uHfaI=\ngithub.com/grpc-ecosystem/go-grpc-middleware v1.4.0/go.mod h1:g5qyo/la0ALbONm6Vbp88Yd8NsDy6rZz+RcrMPxvld8=\ngithub.com/grpc-ecosystem/grpc-gateway v1.16.0/go.mod h1:BDjrQk3hbvj6Nolgz8mAMFbcEtjT1g+wF4CSlocrBnw=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.7.0/go.mod h1:hgWBS7lorOAVIJEQMi4ZsPv9hVvWI6+ch50m39Pf2Ks=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.19.1 h1:/c3QmbOGMGTOumP2iT/rCwB7b0QDGLKzqOmktBjT+Is=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.19.1/go.mod h1:5SN9VR2LTsRFsrEC6FHgRbTWrTHu6tqPeKxEQv15giM=\ngithub.com/hako/durafmt v0.0.0-20210608085754-5c1018a4e16b h1:wDUNC2eKiL35DbLvsDhiblTUXHxcOPwQSCzi7xpQUN4=\ngithub.com/hako/durafmt v0.0.0-20210608085754-5c1018a4e16b/go.mod h1:VzxiSdG6j1pi7rwGm/xYI5RbtpBgM8sARDXlvEvxlu0=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=\ngithub.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-cleanhttp v0.5.2 h1:035FKYIWjmULyFRBKPs8TBQoi0x6d9G4xc9neXJWAZQ=\ngithub.com/hashicorp/go-cleanhttp v0.5.2/go.mod h1:kO/YDlP8L1346E6Sodw+PrpBSV4/SoxCXGY6BqNFT48=\ngithub.com/hashicorp/go-hclog v0.9.2 h1:CG6TE5H9/JXsFWJCfoIVpKFIkFe6ysEuHirp4DxCsHI=\ngithub.com/hashicorp/go-hclog v0.9.2/go.mod h1:5CU+agLiy3J7N7QjHK5d05KxGsuXiQLrjA0H7acj2lQ=\ngithub.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\ngithub.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\ngithub.com/hashicorp/go-retryablehttp v0.7.5 h1:bJj+Pj19UZMIweq/iie+1u5YCdGrnxCT9yvm0e+Nd5M=\ngithub.com/hashicorp/go-retryablehttp v0.7.5/go.mod h1:Jy/gPYAdjqffZ/yFGCFV2doI5wjtH1ewM9u8iYVjtX8=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/iancoleman/strcase v0.3.0 h1:nTXanmYxhfFAMjZL34Ov6gkzEsSJZ5DbhxWjvSASxEI=\ngithub.com/iancoleman/strcase v0.3.0/go.mod h1:iwCmte+B7n89clKwxIoIXy/HfoL7AsD47ZCWhYzw7ho=\ngithub.com/ianlancetaylor/demangle v0.0.0-20181102032728-5e5cf60278f6/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/in-toto/in-toto-golang v0.5.0 h1:hb8bgwr0M2hGdDsLjkJ3ZqJ8JFLL/tgYdAxF/XEFBbY=\ngithub.com/in-toto/in-toto-golang v0.5.0/go.mod h1:/Rq0IZHLV7Ku5gielPT4wPHJfH1GdHMCq8+WPxw8/BE=\ngithub.com/jmespath/go-jmespath v0.4.0 h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=\ngithub.com/jmespath/go-jmespath v0.4.0/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1 h1:shLQSRRSCCPj3f2gpwzGwWFoC7ycTf1rcQZHOlsJ6N8=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1/go.mod h1:L3OGu8Wl2/fWfCI6z80xFu9LTZmf1ZRjMHUOPmWr69U=\ngithub.com/joeshaw/multierror v0.0.0-20140124173710-69b34d4ec901 h1:rp+c0RAYOWj8l6qbCUTSiRLG/iKnW3K3/QfPPuSsBt4=\ngithub.com/joeshaw/multierror v0.0.0-20140124173710-69b34d4ec901/go.mod h1:Z86h9688Y0wesXCyonoVr47MasHilkuLMqGhRZ4Hpak=\ngithub.com/joho/godotenv v1.5.1 h1:7eLL/+HRGLY0ldzfGMeQkb7vMd0as4CfYvUVzLqw0N0=\ngithub.com/joho/godotenv v1.5.1/go.mod h1:f4LDr5Voq0i2e/R5DDNOoa2zzDfwtkZa6DnEwAbqwq4=\ngithub.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=\ngithub.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/compress v1.17.2 h1:RlWWUY/Dr4fL8qk9YG7DTZ7PDgME2V4csBXA8L/ixi4=\ngithub.com/klauspost/compress v1.17.2/go.mod h1:ntbaceVETuRiXiv4DpjP66DpAtAGkEQskQzEyD//IeE=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mikejholly/netrc v0.0.0-20221121193719-a154cb29ec2a h1:1XyP7Y19inZMSHUVJv1GSWLGag2xz/MUPzS54rQs42Y=\ngithub.com/mikejholly/netrc v0.0.0-20221121193719-a154cb29ec2a/go.mod h1:Zi/ZFkEqFHTm7qkjyNJjaWH4LQA9LQhGJyF0lTYGpxw=\ngithub.com/mitchellh/go-homedir v1.1.0 h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=\ngithub.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/mitchellh/hashstructure/v2 v2.0.2 h1:vGKWl0YJqUNxE8d+h8f6NJLcCJrgbhC4NcD46KavDd4=\ngithub.com/mitchellh/hashstructure/v2 v2.0.2/go.mod h1:MG3aRVU/N29oo/V/IhBX8GR/zz4kQkprJgF2EVszyDE=\ngithub.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=\ngithub.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/moby/locker v1.0.1 h1:fOXqR41zeveg4fFODix+1Ch4mj/gT0NE1XJbp/epuBg=\ngithub.com/moby/locker v1.0.1/go.mod h1:S7SDdo5zpBK84bzzVlKr2V0hz+7x9hWbYC/kq7oQppc=\ngithub.com/moby/patternmatcher v0.6.0 h1:GmP9lR19aU5GqSSFko+5pRqHi+Ohk1O69aFiKkVGiPk=\ngithub.com/moby/patternmatcher v0.6.0/go.mod h1:hDPoyOpDY7OrrMDLaYoY3hf52gNCR/YOUYxkhApJIxc=\ngithub.com/moby/sys/mountinfo v0.6.2 h1:BzJjoreD5BMFNmD9Rus6gdd1pLuecOFPt8wC+Vygl78=\ngithub.com/moby/sys/mountinfo v0.6.2/go.mod h1:IJb6JQeOklcdMU9F5xQ8ZALD+CUr5VlGpwtX+VE0rpI=\ngithub.com/moby/sys/sequential v0.5.0 h1:OPvI35Lzn9K04PBbCLW0g4LcFAJgHsvXsRyewg5lXtc=\ngithub.com/moby/sys/sequential v0.5.0/go.mod h1:tH2cOOs5V9MlPiXcQzRC+eEyab644PWKGRYaaV5ZZlo=\ngithub.com/moby/sys/signal v0.7.0 h1:25RW3d5TnQEoKvRbEKUGay6DCQ46IxAVTT9CUMgmsSI=\ngithub.com/moby/sys/signal v0.7.0/go.mod h1:GQ6ObYZfqacOwTtlXvcmh9A26dVRul/hbOZn88Kg8Tg=\ngithub.com/morikuni/aec v1.0.0 h1:nP9CBfwrvYnBRgY6qfDQkygYDmYwOilePFkwzv4dU8A=\ngithub.com/morikuni/aec v1.0.0/go.mod h1:BbKIizmSmc5MMPqRYbxO4ZU0S0+P200+tUnFx7PXmsc=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.1.0-rc5 h1:Ygwkfw9bpDvs+c9E34SdgGOj41dX/cbdlwvlWt0pnFI=\ngithub.com/opencontainers/image-spec v1.1.0-rc5/go.mod h1:X4pATf0uXsnn3g5aiGIsVnJBR4mxhKzfwmvK/B2NTm8=\ngithub.com/opencontainers/runc v1.1.9 h1:XR0VIHTGce5eWPkaPesqTBrhW2yAcaraWfsEalNwQLM=\ngithub.com/opencontainers/runc v1.1.9/go.mod h1:CbUumNnWCuTGFukNXahoo/RFBZvDAgRh/smNYNOhA50=\ngithub.com/opencontainers/runtime-spec v1.1.0-rc.2 h1:ucBtEms2tamYYW/SvGpvq9yUN0NEVL6oyLEwDcTSrk8=\ngithub.com/opencontainers/runtime-spec v1.1.0-rc.2/go.mod h1:jwyrGlmzljRJv/Fgzds9SsS/C5hL+LL3ko9hs6T5lQ0=\ngithub.com/opencontainers/selinux v1.11.0 h1:+5Zbo97w3Lbmb3PeqQtpmTkMwsW5nRI3YaLpt7tQ7oU=\ngithub.com/opencontainers/selinux v1.11.0/go.mod h1:E5dMC3VPuVvVHDYmi78qvhJp8+M586T4DlDRYpFkyec=\ngithub.com/opentracing/opentracing-go v1.1.0/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=\ngithub.com/otiai10/copy v1.14.0 h1:dCI/t1iTdYGtkvCuBG2BgR6KZa83PTclw4U5n2wAllU=\ngithub.com/otiai10/copy v1.14.0/go.mod h1:ECfuL02W+/FkTWZWgQqXPWZgW9oeKCSQ5qVfSc4qc4w=\ngithub.com/otiai10/mint v1.5.1 h1:XaPLeE+9vGbuyEHem1JNk3bYc7KKqyI/na0/mLd/Kks=\ngithub.com/otiai10/mint v1.5.1/go.mod h1:MJm72SBthJjz8qhefc4z1PYEieWmy8Bku7CjcAqyUSM=\ngithub.com/pelletier/go-toml v1.9.5 h1:4yBQzkHv+7BHq2PQUZF3Mx0IYxG7LsP222s7Agd3ve8=\ngithub.com/pelletier/go-toml v1.9.5/go.mod h1:u1nR/EPcESfeI/szUZKdtJ0xRNbUoANCkoOuaOx1Y+c=\ngithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c h1:+mdjkGKdHQG3305AYmdv1U2eRNDiU2ErMBj1gwrq8eQ=\ngithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c/go.mod h1:7rwL4CYBLnjLxUqIJNnCWiEdr3bn6IUYi15bNlnbCCU=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/poy/onpar v0.3.2 h1:yo8ZRqU3C4RlvkXPWUWfonQiTodAgpKQZ1g8VTNU9xU=\ngithub.com/poy/onpar v0.3.2/go.mod h1:6XDWG8DJ1HsFX6/Btn0pHl3Jz5d1SEEGNZ5N1gtYo+I=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/procfs v0.6.0/go.mod h1:cz+aTbrPOrUb4q7XlbU9ygM+/jj0fzG6c1xBZuNvfVA=\ngithub.com/prometheus/procfs v0.9.0 h1:wzCHvIvM5SxWqYvwgVL7yJY8Lz3PKn49KQtpgMYJfhI=\ngithub.com/prometheus/procfs v0.9.0/go.mod h1:+pB4zwohETzFnmlpe6yd2lSc+0/46IYZRB/chUwxUZY=\ngithub.com/rogpeppe/fastuuid v1.2.0/go.mod h1:jVj6XXZzXRy/MSR5jhDC/2q6DgLz+nrA6LYCDYWNEvQ=\ngithub.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/secure-systems-lab/go-securesystemslib v0.4.0 h1:b23VGrQhTA8cN2CbBw7/FulN9fTtqYUdS5+Oxzt+DUE=\ngithub.com/secure-systems-lab/go-securesystemslib v0.4.0/go.mod h1:FGBZgq2tXWICsxWQW1msNf49F0Pf2Op5Htayx335Qbs=\ngithub.com/shibumi/go-pathspec v1.3.0 h1:QUyMZhFo0Md5B8zV8x2tesohbb5kfbpTi9rBnKh5dkI=\ngithub.com/shibumi/go-pathspec v1.3.0/go.mod h1:Xutfslp817l2I1cZvgcfeMQJG5QnU2lh5tVaaMCl3jE=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/sirupsen/logrus v1.8.1/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/sirupsen/logrus v1.9.0/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/spaolacci/murmur3 v0.0.0-20180118202830-f09979ecbc72/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=\ngithub.com/spdx/tools-golang v0.5.1 h1:fJg3SVOGG+eIva9ZUBm/hvyA7PIPVFjRxUKe6fdAgwE=\ngithub.com/spdx/tools-golang v0.5.1/go.mod h1:/DRDQuBfB37HctM29YtrX1v+bXiVmT2OpQDalRmX9aU=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/tonistiigi/units v0.0.0-20180711220420-6950e57a87ea h1:SXhTLE6pb6eld/v/cCndK0AMpt1wiVFb/YYmqB3/QG0=\ngithub.com/tonistiigi/units v0.0.0-20180711220420-6950e57a87ea/go.mod h1:WPnis/6cRcDZSUvVmezrxJPkiO87ThFYsoUiMwWNDJk=\ngithub.com/tonistiigi/vt100 v0.0.0-20230623042737-f9a4f7ef6531 h1:Y/M5lygoNPKwVNLMPXgVfsRT40CSFKXCxuU8LoHySjs=\ngithub.com/tonistiigi/vt100 v0.0.0-20230623042737-f9a4f7ef6531/go.mod h1:ulncasL3N9uLrVann0m+CDlJKWsIAP34MPcOJF6VRvc=\ngithub.com/urfave/cli v1.22.12/go.mod h1:sSBEIC79qR6OvcmsD4U3KABeOTxDqQtdDnaFuUN30b8=\ngithub.com/urfave/cli/v2 v2.27.1 h1:8xSQ6szndafKVRmfyeUMxkNUJQMjL1F2zmsZ+qHpfho=\ngithub.com/urfave/cli/v2 v2.27.1/go.mod h1:8qnjx1vcq5s2/wpsqoZFndg2CE5tNFyrTvS6SinrnYQ=\ngithub.com/vbatts/tar-split v0.11.3 h1:hLFqsOLQ1SsppQNTMpkpPXClLDfC2A3Zgy9OUU+RVck=\ngithub.com/vbatts/tar-split v0.11.3/go.mod h1:9QlHN18E+fEH7RdG+QAJJcuya3rqT7eXSTY7wGrAokY=\ngithub.com/xrash/smetrics v0.0.0-20201216005158-039620a65673 h1:bAn7/zixMGCfxrRTfdpNzjtPYqr8smhKouy9mxVdGPU=\ngithub.com/xrash/smetrics v0.0.0-20201216005158-039620a65673/go.mod h1:N3UwUGtsrSj3ccvlPHLoLsHnpR27oXr4ZE984MbSER8=\ngithub.com/yuin/goldmark v1.1.25/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.32/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngo.etcd.io/bbolt v1.3.7 h1:j+zJOnnEjF/kyHlDDgGnVL/AIqIJPq8UoB2GSNfkUfQ=\ngo.etcd.io/bbolt v1.3.7/go.mod h1:N9Mkw9X8x5fupy0IKsmuqVtoGDyxsaDlbk4Rd05IAQw=\ngo.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=\ngo.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=\ngo.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.3/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.4/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.40.0 h1:5jD3teb4Qh7mx/nfzq4jO2WFFpvXD0vYWFDrdvNWmXk=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.40.0/go.mod h1:UMklln0+MRhZC4e3PwmN3pCtq4DyIadWw4yikh6bNrw=\ngo.opentelemetry.io/otel v1.14.0 h1:/79Huy8wbf5DnIPhemGB+zEPVwnN6fuQybr/SRXa6hM=\ngo.opentelemetry.io/otel v1.14.0/go.mod h1:o4buv+dJzx8rohcUeRmWUZhqupFvzWis188WlggnNeU=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.14.0 h1:TKf2uAs2ueguzLaxOCBXNpHxfO/aC7PAdDsSH0IbeRQ=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.14.0/go.mod h1:HrbCVv40OOLTABmOn1ZWty6CHXkU8DK/Urc43tHug70=\ngo.opentelemetry.io/otel/metric v0.37.0 h1:pHDQuLQOZwYD+Km0eb657A25NaRzy0a+eLyKfDXedEs=\ngo.opentelemetry.io/otel/metric v0.37.0/go.mod h1:DmdaHfGt54iV6UKxsV9slj2bBRJcKC1B1uvDLIioc1s=\ngo.opentelemetry.io/otel/sdk v1.14.0 h1:PDCppFRDq8A1jL9v6KMI6dYesaq+DFcDZvjsoGvxGzY=\ngo.opentelemetry.io/otel/sdk v1.14.0/go.mod h1:bwIC5TjrNG6QDCHNWvW4HLHtUQ4I+VQDsnjhvyZCALM=\ngo.opentelemetry.io/otel/trace v1.14.0 h1:wp2Mmvj41tDsyAJXiWDWpfNsOiIyd38fy85pyKcFq/M=\ngo.opentelemetry.io/otel/trace v1.14.0/go.mod h1:8avnQLK+CG77yNLUae4ea2JDQ6iT+gozhnZjy/rw9G8=\ngo.opentelemetry.io/proto/otlp v0.7.0/go.mod h1:PqfVotwruBrMGOCsRd/89rSnXhoiJIqeYNgFYFoEGnI=\ngo.opentelemetry.io/proto/otlp v0.19.0 h1:IVN6GR+mhC4s5yfcTbmzHYODqvWAp3ZedA2SJPI1Nnw=\ngo.opentelemetry.io/proto/otlp v0.19.0/go.mod h1:H7XAot3MsfNsj7EXtrA2q5xSNQ10UqI405h3+duxN4U=\ngo.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/goleak v1.1.10/go.mod h1:8a7PlsEVH3e/a/GLqe5IIrQx6GzcnRmZEufDUTk4A7A=\ngo.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=\ngo.uber.org/zap v1.18.1/go.mod h1:xg/QME4nWcxGxrpdeYfq7UvYrLh66cuVKdrbD1XF/NI=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.21.0 h1:X31++rzVUdKhX5sWmSOFZxx8UW/ldWx55cbf08iNAMA=\ngolang.org/x/crypto v0.21.0/go.mod h1:0BP7YvVV9gBbVKyeTG0Gyn+gZm94bibOW5BjDEYAOMs=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=\ngolang.org/x/exp v0.0.0-20190829153037-c13cbed26979/go.mod h1:86+5VVa7VpoJ4kLfm080zCjGlMRFzhUhsZKEZO7MGek=\ngolang.org/x/exp v0.0.0-20191030013958-a1ab85dbe136/go.mod h1:JXzH8nQsPlswgeRAPE3MuO9GYsAcnJvJ4vnMwN/5qkY=\ngolang.org/x/exp v0.0.0-20191129062945-2f5052295587/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20191227195350-da58074b4299/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200119233911-0405dc783f0a/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200207192155-f17229e696bd/go.mod h1:J/WKrq2StrnmMY6+EHIKF9dgMWnmCNThgcyBT1FY9mM=\ngolang.org/x/exp v0.0.0-20200224162631-6cc2880d07d6/go.mod h1:3jZMyOhIsHpP37uCMkUooju7aAi5cS1Q23tOzKc+0MU=\ngolang.org/x/exp v0.0.0-20240325151524-a685a6edb6d8 h1:aAcj0Da7eBAtrTp03QXWvm88pSyOt+UgdZw2BFZ+lEw=\ngolang.org/x/exp v0.0.0-20240325151524-a685a6edb6d8/go.mod h1:CQ1k9gNrJ50XIzaKCRR2hssIjF07kZFEiieALBM/ARQ=\ngolang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\ngolang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190409202823-959b441ac422/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190909230951-414d861bb4ac/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20191125180803-fdd1cda4f05f/go.mod h1:5qLYkcX4OjUUV8bRuDixDT3tpyyb+LUpUlRWLxfhWrs=\ngolang.org/x/lint v0.0.0-20200130185559-910be7a94367/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20200302205851-738671d3881b/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=\ngolang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=\ngolang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=\ngolang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.1.1-0.20191107180719-034126e5016b/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.16.0 h1:QX4fJ0Rr5cPQCF7O9lh9Se4pmwfwskqZfq5moyldzic=\ngolang.org/x/mod v0.16.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190501004415-9ce7a6920f09/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190503192946-f4e77d36d62c/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190628185345-da137c7871d7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190724013045-ca1201d0de80/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20191209160850-c0dbc17a3553/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200114155413-6afb5195e5aa/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200222125558-5a598a2470a0/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200301022130-244492dfa37a/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200324143707-d3edc9973b7e/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200501053045-e0ff5e5a1de5/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200506145744-7e3656a0809f/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200513185701-a91f0712d120/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200520182314-0ba52f642ac2/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200625001655-4c5254603344/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200707034311-ab3426394381/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.23.0 h1:7EYJ93RZ9vYSZAIb2x3lnuvqO5zneoD6IvWjuhfxjTs=\ngolang.org/x/net v0.23.0/go.mod h1:JKghWKKOSdJwpW2GEx0Ja7fmaKnMsbu+MWVZTokSYmg=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20191202225959-858c2ad4c8b6/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20211104180415-d3ed0bb246c8/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.18.0 h1:09qnuIAgzdx1XplqJvW6CQqMCtGZykZWcXzPMPUusvI=\ngolang.org/x/oauth2 v0.18.0/go.mod h1:Wf7knwG0MPoWIMMBgFlEaSUDaKskp0dCfrlJRJXbBi8=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200317015054-43a5402ce75a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201207232520-09787c993a3a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.6.0 h1:5BMeUDZ7vkXGfEr1x9B4bRcTH4lpkTkpdh0T/J+qjbQ=\ngolang.org/x/sync v0.6.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190502145724-3ef323f4f1fd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190507160741-ecd444e8653b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190606165138-5da285871e9c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190624142023-c5567b49c5d0/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190726091711-fc99dfbffb4e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191001151750-bb3f8db39f24/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191228213918-04cbcbbfeed8/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200113162924-86b910548bc1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200212091648-12a6c2dcc1e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200302150141-5c8b2ff67527/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200331124033-c3d80250170d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200501052902-10377860bb8e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200511232937-7e40ca221e25/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200515095857-1151b9dac4a9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200523222454-059865788121/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200803210538-64077c9b5642/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210819135213-f52c844e1c1c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211025201205-69cdffdb9359/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220825204002-c680a09ffe64/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220906165534-d0df966e6959/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.18.0 h1:DBdB3niSjOA/O0blCZBqDefyWNYveAYMNF1Wum0DYQ4=\ngolang.org/x/sys v0.18.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.18.0 h1:FcHjZXDMxI8mM3nwhX9HlKop4C0YQvCVCdwYl2wOtE8=\ngolang.org/x/term v0.18.0/go.mod h1:ILwASektA3OnRv7amZ1xhE/KTR+u50pbXfZ03+6Nx58=\ngolang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.5/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.3.8/go.mod h1:E6s5w1FMmriuDzIBO73fBruAKo1PCIq6d2Q6DHfQ8WQ=\ngolang.org/x/text v0.14.0 h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.3.0 h1:rg5rLMjNzMS1RkNLzCG38eapWhnYLFYXDXj2gOlr8j4=\ngolang.org/x/time v0.3.0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190425150028-36563e24a262/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190506145303-2d16b83fe98c/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190606124116-d0a3d012864b/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190628153133-6cdbf07be9d0/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190816200558-6889da9d5479/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20190911174233-4f2ddba30aff/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191108193012-7d206e10da11/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191113191852-77e3bb0ad9e7/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191115202509-3a792d9c32b2/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191125144606-a911d9008d1f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191130070609-6e064ea0cf2d/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191216173652-a0e659d51361/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20191227053925-7b8e75db28f4/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200117161641-43d50277825c/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200122220014-bf1340f18c4a/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200204074204-1cc6d1ef6c74/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200207183749-b753a1ba74fa/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200212150539-ea181f53ac56/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200224181240-023911ca70b2/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200227222343-706bc42d1f0d/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200304193943-95d2e580d8eb/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200312045724-11d5b4c81c7d/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200331025713-a30bf2db82d4/go.mod h1:Sl4aGygMT6LrqrWclx+PTx3U+LnKx/seiNR+3G19Ar8=\ngolang.org/x/tools v0.0.0-20200501065659-ab2804fb9c9d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200512131952-2bc93b1c0c88/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200515010526-7d3b6ebf133d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200618134242-20370b0cb4b2/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200729194436-6467de6f59a7/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200804011535-6c149bb5ef0d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200825202427-b303f430e36d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.19.0 h1:tfGCXNR1OsFG+sVdLAitlpjAvD/I6dHDKnYrpEZUHkw=\ngolang.org/x/tools v0.19.0/go.mod h1:qoJWxmGSIBmAeriMx19ogtrEPrGtDbPK634QFIcLAhc=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=\ngoogle.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=\ngoogle.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.9.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.13.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.14.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.15.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.17.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.18.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.19.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.20.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.22.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.24.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.28.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.29.0/go.mod h1:Lcubydp8VUV7KeIHD9z2Bys/sm/vGKnG1UHuDBSrHWM=\ngoogle.golang.org/api v0.30.0/go.mod h1:QGmEvQ87FHZNiUVJkT14jQNYJ4ZJjdRF23ZXz5138Fc=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.6.1/go.mod h1:i06prIuMbXzDqacNJfV5OdTW448YApPu5ww/cMBSeb0=\ngoogle.golang.org/appengine v1.6.5/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.6/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.8 h1:IhEN5q69dyKagZPYMSdIjS2HqprW324FRQZJcGqPAsM=\ngoogle.golang.org/appengine v1.6.8/go.mod h1:1jJ3jBArFh5pcgW8gCtRJnepW8FzD1V44FJffLiz/Ds=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190801165951-fa694d86fc64/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190911173649-1774047e7e51/go.mod h1:IbNlFCBrqXvoKpeg0TB2l7cyZUmoaFKYIwrEpbDKLA8=\ngoogle.golang.org/genproto v0.0.0-20191108220845-16a3f7862a1a/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191115194625-c23dd37a84c9/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191216164720-4f79533eabd1/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191230161307-f3c370f40bfb/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200115191322-ca5a22157cba/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200122232147-0452cf42e150/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200204135345-fa8e72b47b90/go.mod h1:GmwEX6Z4W5gMy59cAlVYjN9JhxgbQH6Gn+gFDQe2lzA=\ngoogle.golang.org/genproto v0.0.0-20200212174721-66ed5ce911ce/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200224152610-e50cd9704f63/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200228133532-8c2c7df3a383/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200305110556-506484158171/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200312145019-da6875a35672/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200331122359-1ee6d9798940/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200423170343-7949de9c1215/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200430143042-b979b6f78d84/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200511104702-f5ebc3bea380/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200513103714-09dca8ec2884/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200515170657-fc4c6c6a6587/go.mod h1:YsZOwe1myG/8QRHRsmBRE1LrgQY60beZKjly0O1fX9U=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20200618031413-b414f8b61790/go.mod h1:jDfRM7FcilCzHH/e9qn6dsT145K34l5v+OpcnNgKAAA=\ngoogle.golang.org/genproto v0.0.0-20200729003335-053ba62fc06f/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200804131852-c06518451d9c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200825200019-8632dd797987/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20211118181313-81c1377c94b1/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\ngoogle.golang.org/genproto v0.0.0-20240123012728-ef4313101c80 h1:KAeGQVN3M9nD0/bQXnr/ClcEMJ968gUXJQ9pwfSynuQ=\ngoogle.golang.org/genproto v0.0.0-20240123012728-ef4313101c80/go.mod h1:cc8bqMqtv9gMOr0zHg2Vzff5ULhhL2IXP4sbcn32Dro=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240401170217-c3f982113cda h1:b6F6WIV4xHHD0FA4oIyzU6mHWg2WI2X1RBehwa5QN38=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240401170217-c3f982113cda/go.mod h1:AHcE/gZH76Bk/ROZhQphlRoWo5xKDEtz3eVEO1LfA8c=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240401170217-c3f982113cda h1:LI5DOvAxUPMv/50agcLLoo+AdWc1irS9Rzz4vPuD1V4=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240401170217-c3f982113cda/go.mod h1:WtryC6hu0hhx87FDGxWCDptyssuo68sk10vYjF+T9fY=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=\ngoogle.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.1/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.28.0/go.mod h1:rpkK4SK4GF4Ach/+MFLZUBavHOvF2JJB5uozKKal+60=\ngoogle.golang.org/grpc v1.29.1/go.mod h1:itym6AZVZYACWQqET3MqgPpjcuV5QH3BxFS3IjizoKk=\ngoogle.golang.org/grpc v1.30.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.31.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.33.1/go.mod h1:fr5YgcSWrqhRRxogOsw7RzIpsmvOZ6IcH4kBYTpR3n0=\ngoogle.golang.org/grpc v1.36.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.40.0/go.mod h1:ogyxbiOoUXAkP+4+xa6PZSE9DZgIHtSpzjDTB9KAK34=\ngoogle.golang.org/grpc v1.42.0/go.mod h1:k+4IHHFw41K8+bbowsex27ge2rCb65oeWqe4jJ590SU=\ngoogle.golang.org/grpc v1.62.1 h1:B4n+nfKzOICUXMgyrNd19h/I9oH0L1pizfk1d4zSgTk=\ngoogle.golang.org/grpc v1.62.1/go.mod h1:IWTG0VlJLCh1SkC58F7np9ka9mx/WNkjl4PGJaiq+QE=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.24.0/go.mod h1:r/3tXBNzIEhYS9I1OUVjXDlt8tc493IdKGjtUeSXeh4=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.27.1/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.33.0 h1:uNO2rsAINq/JlFpSdYEKIZ0uKD/R9cpdv0T+yoGwGmI=\ngoogle.golang.org/protobuf v1.33.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20200902074654-038fdea0a05b/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.3/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngotest.tools/v3 v3.4.0 h1:ZazjZUfuVeZGLAmlKKuyv3IKP5orXcwtOwDQH6YVr6o=\ngotest.tools/v3 v3.4.0/go.mod h1:CtbdzLSsqVhDgMtKsx03ird5YTGB3ar27v0u/yKBW5g=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190418001031-e561f6794a2a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=\nhonnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nhonnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nhowett.net/plist v0.0.0-20181124034731-591f970eefbb h1:jhnBjNi9UFpfpl8YZhA9CrOqpnJdvzuiHsl/dnxl11M=\nhowett.net/plist v0.0.0-20181124034731-591f970eefbb/go.mod h1:vMygbs4qMhSZSc4lCUl2OEE+rDiIIJAIdR4m7MiMcm0=\nrsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=\nrsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=\nrsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA=\n"
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "inputgraph",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "logbus",
          "type": "tree",
          "content": null
        },
        {
          "name": "not-a-unit-test.sh",
          "type": "blob",
          "size": 2.50390625,
          "content": "#!/bin/sh\nset -e # dont use -x, as it will leak credentials\n\n# This is not a unit test, as it requires access to docker hub, as well as docker/podman\n\nif [ \"$USE_EARTHLY_MIRROR\" = \"true\" ]; then\n  if [ -n \"$DOCKERHUB_MIRROR\" ]; then\n    echo >&2 \"error: DOCKERHUB_MIRROR should be empty when using the USE_EARTHLY_MIRROR option\"\n    exit 1\n  fi\n  DOCKERHUB_MIRROR=\"registry-1.docker.io.mirror.corp.earthly.dev\"\n  DOCKERHUB_MIRROR_AUTH=\"true\"\nfi\n\n# first setup podman\ncat > /etc/containers/containers.conf <<EOF\n[containers]\nnetns=\"host\"\nuserns=\"host\"\nipcns=\"host\"\nutsns=\"host\"\ncgroupns=\"host\"\ncgroups=\"disabled\"\nlog_driver = \"k8s-file\"\n[engine]\ncgroup_manager = \"cgroupfs\"\nevents_logger=\"file\"\nruntime=\"crun\"\nEOF\n\nchmod 644 /etc/containers/containers.conf\nsed -i -e 's|^#mount_program|mount_program|g' -e '/additionalimage.*/a \"/var/lib/shared\",' -e 's|^mountopt[[:space:]]*=.*$|mountopt = \"nodev,fsync=0\"|g' /etc/containers/storage.conf\n\nmkdir -p /var/lib/shared/overlay-images\ntouch /var/lib/shared/overlay-images/images.lock\n\nmkdir -p /var/lib/shared/overlay-layers\ntouch /var/lib/shared/overlay-layers/layers.lock\n\nmkdir -p /var/lib/shared/vfs-images\ntouch /var/lib/shared/vfs-images/images.lock\n\nmkdir -p /var/lib/shared/vfs-layers\ntouch /var/lib/shared/vfs-layers/layers.lock\n\nsed -i 's/\\/var\\/lib\\/containers\\/storage/$EARTHLY_DOCKERD_DATA_ROOT/g' /etc/containers/storage.conf\n\nif [ -n \"$DOCKERHUB_MIRROR\" ]; then\n    INSECURE=$(if [ \"$DOCKERHUB_MIRROR_HTTP\" = \"true\" ] || [ \"$DOCKERHUB_MIRROR_INSECURE\" = \"true\" ]; then echo 'true'; else echo 'false'; fi)\n    echo \"\n[[registry]]\nprefix=\\\"docker.io\\\"\ninsecure=$INSECURE\nlocation=\\\"$DOCKERHUB_MIRROR\\\"\n\" > /etc/containers/registries.conf\nfi\n\n# then do a docker login (if applicable)\nif [ \"$DOCKERHUB_MIRROR_AUTH\" = \"true\" ]\nthen\n  (test -n \"$DOCKERHUB_MIRROR_USER\" || (echo \"ERROR: DOCKERHUB_MIRROR_USER not set\"; exit 1))\n  (test -n \"$DOCKERHUB_MIRROR_PASS\" || (echo \"ERROR: DOCKERHUB_MIRROR_PASS not set\"; exit 1))\n  if [ -n \"$DOCKERHUB_MIRROR\" ]\n  then\n    docker login \"$DOCKERHUB_MIRROR\" --username=\"$DOCKERHUB_MIRROR_USER\" --password=\"$DOCKERHUB_MIRROR_PASS\"\n    podman login \"$DOCKERHUB_MIRROR\" --username=\"$DOCKERHUB_MIRROR_USER\" --password=\"$DOCKERHUB_MIRROR_PASS\"\n  else\n    docker login --username=\"$DOCKERHUB_MIRROR_USER\" --password=\"$DOCKERHUB_MIRROR_PASS\"\n    podman login --username=\"$DOCKERHUB_MIRROR_USER\" --password=\"$DOCKERHUB_MIRROR_PASS\"\n  fi\nfi\n\n# then run the test\nif [ -n \"$testname\" ]\nthen\n    testarg=\"-run $testname\"\nfi\ngo test -timeout 20m -json $testarg $pkgname | ./testparser\n"
        },
        {
          "name": "regproxy",
          "type": "tree",
          "content": null
        },
        {
          "name": "release",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup-registry.sh",
          "type": "blob",
          "size": 2.298828125,
          "content": "#!/bin/sh\nset -e\n\nconfigpath=\"/etc/.earthly/config.yml\"\n\nif [ -f \"$configpath\" ]; then\n  echo >&2 \"error: $configpath already exists, unable to setup registry\"\n  exit 1\nfi\n\nif [ \"$USE_EARTHLY_MIRROR\" = \"true\" ]; then\n  if [ -n \"$DOCKERHUB_MIRROR\" ]; then\n    echo >&2 \"error: DOCKERHUB_MIRROR should be empty when using the USE_EARTHLY_MIRROR option\"\n    exit 1\n  fi\n  DOCKERHUB_MIRROR=\"registry-1.docker.io.mirror.corp.earthly.dev\"\n  DOCKERHUB_MIRROR_AUTH=\"true\"\nfi\n\nmkdir -p \"$(dirname \"$configpath\")\"\ncat>\"$configpath\"<<EOF\nglobal:\n  disable_analytics: true\nEOF\n\nif [ -n \"$DOCKERHUB_MIRROR\" ]; then\n  # create a mirror entry for dockerhub (aka docker.io)\n  cat>>\"$configpath\"<<EOF\n  buildkit_additional_config: |\n    [registry.\"docker.io\"]\n      mirrors = [\"$DOCKERHUB_MIRROR\"]\nEOF\n  # create a second registry config for the mirror if either insecure or http flags must be set\n  if [ \"$DOCKERHUB_MIRROR_INSECURE\" = \"true\" ] || [ \"$DOCKERHUB_MIRROR_HTTP\" = \"true\" ]; then\n    cat>>\"$configpath\"<<EOF\n    [registry.\"$DOCKERHUB_MIRROR\"]\nEOF\n    if [ \"$DOCKERHUB_MIRROR_INSECURE\" = \"true\" ]; then\n    cat>>\"$configpath\"<<EOF\n      insecure = true\nEOF\n    fi\n    if [ \"$DOCKERHUB_MIRROR_HTTP\" = \"true\" ]; then\n    cat>>\"$configpath\"<<EOF\n      http = true\nEOF\n    fi\n  fi\n  if [ \"$DOCKERHUB_MIRROR_AUTH\" = \"true\" ]; then\n    if [ -z \"$DOCKERHUB_MIRROR\" ]; then\n      echo >&2 \"error: expected value for DOCKERHUB_MIRROR, but got none\"\n      exit 1\n    fi\n    if [ -z \"$DOCKERHUB_MIRROR_USER\" ]; then\n      echo >&2 \"error: expected value for DOCKERHUB_MIRROR_USER, but got none\"\n      exit 1\n    fi\n    if [ -z \"$DOCKERHUB_MIRROR_PASS\" ]; then\n      echo >&2 \"error: expected value for DOCKERHUB_MIRROR_PASS, but got none\"\n      exit 1\n    fi\n    docker login \"$DOCKERHUB_MIRROR\" --username=\"$DOCKERHUB_MIRROR_USER\" --password=\"$DOCKERHUB_MIRROR_PASS\"\n  fi\nelif [ \"$DOCKERHUB_AUTH\" = \"true\" ]; then\n  if [ -z \"$DOCKERHUB_USER\" ]; then\n    echo >&2 \"ERROR: DOCKERHUB_USER was not set (which is required when DOCKERHUB_AUTH=true)\"\n    exit 1\n  fi\n  if [ -z \"$DOCKERHUB_PASS\" ]; then\n    echo >&2 \"ERROR: DOCKERHUB_PASS was not set (which is required when DOCKERHUB_AUTH=true)\"\n    exit 1\n  fi\n  docker login --username=\"$DOCKERHUB_USER\" --password=\"$DOCKERHUB_PASS\"\nelse\n  echo >&2 \"WARNING: no dockerhub mirror has been setup; you may get rate limited\"\nfi\n"
        },
        {
          "name": "slog",
          "type": "tree",
          "content": null
        },
        {
          "name": "states",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        },
        {
          "name": "variables",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}