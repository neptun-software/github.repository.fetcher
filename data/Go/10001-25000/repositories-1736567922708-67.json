{
  "metadata": {
    "timestamp": 1736567922708,
    "page": 67,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "containerd/containerd",
      "stars": 17795,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.015625,
          "content": "*.go text eol=lf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.26953125,
          "content": "# If you want to ignore files created by your editor/tools, please consider a\n# [global .gitignore](https://help.github.com/articles/ignoring-files).\n\n/bin/\n/man/\ncoverage.txt\nprofile.out\ncontainerd.test\n_site/\nreleases/*.tar.gz\nreleases/*.tar.gz.sha256sum\n_output/\n.vagrant/\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 2.1455078125,
          "content": "linters:\n  enable:\n    - depguard # Checks for dependencies that should not be (re)introduced. See \"linter-settings\" for further details.\n    - copyloopvar # Checks for loop variable copies in Go 1.22+\n    - gofmt\n    - goimports\n    - gosec\n    - ineffassign\n    - misspell\n    - nolintlint\n    - revive\n    - staticcheck\n    - tenv # Detects using os.Setenv instead of t.Setenv since Go 1.17\n    - unconvert\n    - unused\n    - govet\n    - dupword # Checks for duplicate words in the source code\n  disable:\n    - errcheck\n\nissues:\n  include:\n    - EXC0002\n  max-issues-per-linter: 0\n  max-same-issues: 0\n\n  # Only using / doesn't work due to https://github.com/golangci/golangci-lint/issues/1398.\n  exclude-rules:\n    - path: 'cmd[\\\\/]containerd[\\\\/]builtins[\\\\/]'\n      text: \"blank-imports:\"\n    - path: 'contrib[\\\\/]fuzz[\\\\/]'\n      text: \"exported: func name will be used as fuzz.Fuzz\"\n    - path: 'archive[\\\\/]tarheader[\\\\/]'\n      # conversion is necessary on Linux, unnecessary on macOS\n      text: \"unnecessary conversion\"\n    - path: 'integration[\\\\/]client'\n      text: \"dot-imports:\"\n    - linters:\n        - revive\n      text: \"if-return\"\n    - linters:\n        - revive\n      text: \"empty-block\"\n    - linters:\n        - revive\n      text: \"superfluous-else\"\n    - linters:\n        - revive\n      text: \"unused-parameter\"\n    - linters:\n        - revive\n      text: \"unreachable-code\"\n    - linters:\n        - revive\n      text: \"redefines-builtin-id\"\n\nlinters-settings:\n  depguard:\n    rules:\n      main:\n        deny:\n          - pkg: github.com/opencontainers/runc\n            desc: We don't want to depend on runc (libcontainer), unless there is no other option; see https://github.com/opencontainers/runc/issues/3028.\n\n  gosec:\n    # The following issues surfaced when `gosec` linter\n    # was enabled. They are temporarily excluded to unblock\n    # the existing workflow, but still to be addressed by\n    # future works.\n    excludes:\n      - G204\n      - G305\n      - G306\n      - G402\n      - G404\n      - G115\n  nolintlint:\n    allow-unused: true\n\n  exclude-dirs:\n    - api\n    - cluster\n    - docs\n    - docs/man\n    - releases\n    - test # e2e scripts\n\nrun:\n  timeout: 8m\n"
        },
        {
          "name": ".lycheeignore",
          "type": "blob",
          "size": 0.326171875,
          "content": "# This file accompanies links verification nightly CI job. Add links to ignore here.\n\n# These fail often due its popularity\nhttps://packages.debian.org/buster-backports/libseccomp2\nhttps://packages.ubuntu.com/trusty-backports/libseccomp2\n\n# Fails often with 'Too Many Requests', easy to scare\nhttps://tanzu.vmware.com/kubernetes-grid\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 8.84375,
          "content": "Abhinandan Prativadi <abhi@docker.com>\nAbhinandan Prativadi <abhi@docker.com> <aprativadi@gmail.com>\nAce-Tang <aceapril@126.com>\nAdam Korcz <adam@adalogics.com> <Adam@adalogics.com>\nAditi Sharma <adi.sky17@gmail.com> <sharmaad@vmware.com>\nAkhil Mohan <akhilerm@gmail.com> <makhil@vmware.com>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp> <suda.akihiro@lab.ntt.co.jp>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp> <suda.kyoto@gmail.com>\nAllen Sun <shlallen1990@gmail.com> <allensun@AllenSundeMacBook-Pro.local>\nAlex Ellis <alexellis2@gmail.com>\nAlexander Morozov <lk4d4math@gmail.com> <lk4d4@docker.com>\nAntonio Ojea <antonio.ojea.garcia@gmail.com> <aojea@google.com>\nAntonio Ojea <antonio.ojea.garcia@gmail.com> <aojea@redhat.com>\nAmir M. Ghazanfari <a.m.ghazanfari76@gmail.com>\nAmit Krishnan <krish.amit@gmail.com> <amit.krishnan@oracle.com>\nAndrei Vagin <avagin@virtuozzo.com> <avagin@openvz.org>\nAndrey Kolomentsev <andrey.kolomentsev@gmail.com>\nArnaud Porterie <icecrime@gmail.com>\nArnaud Porterie <icecrime@gmail.com> <arnaud.porterie@docker.com>\nBob Mader <swapdisk@users.noreply.github.com>\nBoris Popovschi <zyqsempai@mail.ru>\nBowen Yan <loneybw@gmail.com>\nBrent Baude <bbaude@redhat.com>\nCao Zhihao <caozhihao@163.com>\nCao Zhihao <caozhihao@163.com> <caozhihao.xd@bytedance.com>\nCarlos Eduardo <me@carlosedp.com> <me@carlosedp.com>\nchenxiaoyu <weixian.cxy@alibaba-inc.com>\nCory Bennett <cbennett@netflix.com>\nCristian Staretu <cristian.staretu@gmail.com>\nCristian Staretu <cristian.staretu@gmail.com> <unclejack@users.noreply.github.com>\nDaniel Dao <dqminh89@gmail.com>\nDanny Canter <danny@dcantah.dev> <danny_canter@apple.com>\nDerek McGowan <derek@mcg.dev> <derek@mcgstyle.net>\nEdgar Lee <edgarl@netflix.com> <edgar.lee@docker.com>\nEnrico Weigelt <info@metux.net>\nEric Ernst <eric@amperecomputing.com> <eric.ernst@intel.com>\nEric Lin <linxiulei@gmail.com> <exlin@google.com>\nEric Ren <renzhen.rz@linux.alibaba.com> <renzhen@linux.alibaba.com>\nEric Ren <renzhen.rz@linux.alibaba.com> <renzhen.rz@alibaba-linux.com>\nEric Ren <renzhen.rz@linux.alibaba.com> <renzhen.rz@alibaba-inc.com>\nFabian Hoffmann <extern.fabian.hoffmann@cariad.technology>\nFabian Hoffmann <extern.fabian.hoffmann@cariad.technology> <35104465+FabHof@users.noreply.github.com>\nFabiano Fidêncio <fidencio@redhat.com> <fabiano.fidencio@intel.com>\nFahed Dorgaa <fahed.dorgaa@gmail.com>\nFrank Yang <yyb196@gmail.com>\nFupan Li <lifupan@gmail.com>\nFupan Li <lifupan@gmail.com> <fupan.lfp@antfin.com>\nFupan Li <lifupan@gmail.com> <fupan.lfp@antgroup.com>\nFurkan Türkal <furkan.turkal@trendyol.com>\nGeorgia Panoutsakopoulou <gpanoutsak@gmail.com>\nguodong <guodong9211@gmail.com>\nGuangming Wang <guangming.wang@daocloud.io>\nHaiyan Meng <haiyanmeng@google.com>\nhaoyun <yun.hao@daocloud.io>\nHarry Zhang <harryz@hyper.sh> <harryzhang@zju.edu.cn>\nHu Shuai <hus.fnst@cn.fujitsu.com>\nHu Shuai <hus.fnst@cn.fujitsu.com> <hushuaiia@qq.com>\nIceber Gu <caiwei95@hotmail.com>\nIceber Gu <caiwei95@hotmail.com> <wei.cai-nat@daocloud.io>\nJaana Burcu Dogan <burcujdogan@gmail.com> <jbd@golang.org>\nJess Valarezo <valarezo.jessica@gmail.com>\nJess Valarezo <valarezo.jessica@gmail.com> <jessica.valarezo@docker.com>\nJian Liao <jliao@alauda.io>\nJian Liao <jliao@alauda.io> <liaojian@Dabllo.local>\nJi'an Liu <anthonyliu@zju.edu.cn>\nJie Zhang <iamkadisi@163.com>\nJiongchi Yu <jiongchiyu@gmail.com>\nJohn Howard <github@lowenna.com>\nJohn Howard <github@lowenna.com> <john.howard@microsoft.com>\nJohn Howard <github@lowenna.com> <jhoward@microsoft.com>\nJohn Howard <github@lowenna.com> <jhowardmsft@users.noreply.github.com>\nJunyu Liu <ljyngup@gmail.com>\nLongtaoZhang <DragonBillow@outlook.com>\nLorenz Brun <lorenz@brun.one> <lorenz@nexantic.com>\nLuc Perkins <lucperkins@gmail.com>\nJames Sturtevant <jsturtevant@gmail.com> <jstur@microsoft.com>\nJiajun Jiang <levinxo@gmail.com>\nJin Dong <djdongjin95@gmail.com> <jin.dong@databricks.com>\nJulien Balestra <julien.balestra@datadoghq.com>\nJun Lin Chen <webmaster@mc256.com> <1913688+mc256@users.noreply.github.com>\nJustin Cormack <justin.cormack@docker.com> <justin@specialbusservice.com>\nJustin Terry <juterry@microsoft.com>\nJustin Terry <juterry@microsoft.com> <jterry75@users.noreply.github.com>\nKante <kerthcet@gmail.com>\nKazuyoshi Kato <kato.kazuyoshi@gmail.com>\nKazuyoshi Kato <kato.kazuyoshi@gmail.com> <kaz@fly.io>\nKazuyoshi Kato <kato.kazuyoshi@gmail.com> <katokazu@amazon.com>\nKenfe-Mickaël Laventure <mickael.laventure@gmail.com>\nKevin Kern <kaiwentan@harmonycloud.cn>\nKevin Parsons <kevpar@microsoft.com> <kevpar@users.noreply.github.com>\nKevin Xu <cming.xu@gmail.com>\nKirtana Ashok <kiashok@microsoft.com>\nKirtana Ashok <kiashok@microsoft.com> <Kirtana.Ashok@microsoft.com>\nKitt Hsu <kitt.hsu@gmail.com>\nKohei Tokunaga <ktokunaga.mail@gmail.com>\nKrasi Georgiev <krasi.root@gmail.com> <krasi@vip-consult.solutions>\nLantao Liu <lantaol@google.com>\nLantao Liu <lantaol@google.com> <taotaotheripper@gmail.com>\nlengrongfu <1275177125@qq.com>\nLi Yuxuan <liyuxuan04@baidu.com> <darfux@163.com>\nLifubang <lifubang@aliyun.com> <lifubang@acmcoder.com>\nLu Jingxiao <lujingxiao@huawei.com>\nLucas Rattz <lucasrattz999@gmail.com> <lucas.rattz@syself.com>\nMahamed Ali <cy@borg.dev>\nMaksym Pavlenko <pavlenko.maksym@gmail.com> <865334+mxpv@users.noreply.github.com>\nMaksym Pavlenko <pavlenko.maksym@gmail.com> <makpav@amazon.com>\nMaksym Pavlenko <pavlenko.maksym@gmail.com> <maksym.pavlenko@databricks.com>\nMaksym Pavlenko <pavlenko.maksym@gmail.com> <mxpv@apple.com>\nMario Hros <spam@k3a.me>\nMario Hros <spam@k3a.me> <root@k3a.me>\nMario Macias <mariomac@gmail.com> <mmacias@newrelic.com>\nMark Gordon <msg555@gmail.com>\nMarkus Lehtonen <markus.lehtonen@intel.com> <markus.lehtonen@linux.intel.com>\nMarvin Giessing <marvin.giessing@gmail.com>\nMathis Michel <mathis.michel@outlook.de>\nMichael Crosby <crosbymichael@gmail.com> <michael@thepasture.io>\nMichael Katsoulis <michaelkatsoulis88@gmail.com>\nMichael Zappa <michael.zappa@gmail.com> <michaelzappa@microsoft.com>\nMike Brown <brownwm@us.ibm.com> <mikebrow@users.noreply.github.com>\nMohammad Asif Siddiqui <mohammad.asif.siddiqui1@huawei.com>\nNabeel Rana <nabeelnrana@gmail.com>\nNg Yang <wssccc@qq.com>\nNing Li <ning.a.li@transwarp.io>\nningmingxiao <ning.mingxiao@zte.com.cn>\nNishchay Kumar <mrawesomenix@gmail.com>\nOliver Stenbom <oliver@stenbom.eu> <ostenbom@pivotal.io>\nPan Yibo <mstmdev@gmail.com>\nPhil Estes <estesp@gmail.com> <estesp@linux.vnet.ibm.com>\nPhil Estes <estesp@gmail.com> <estesp@amazon.com>\nQian Zhang <cosmoer@qq.com>\nReid Li <reid.li@utexas.edu>\nRobin Winkelewski <w9ncontact@gmail.com>\nroman-kiselenko <roman.kiselenko.dev@gmail.com> <shindu666@gmail.com>\nRoss Boucher <rboucher@gmail.com>\nRuediger Maass <ruediger.maass@de.ibm.com>\nRui Cao <ruicao@alauda.io> <ruicao@alauda.io>\nSakeven Jiang <jc5930@sina.cn>\nSamuel Karp <me@samuelkarp.com> <samuelkarp@google.com>\nSamuel Karp <me@samuelkarp.com> <skarp@amazon.com>\nSeth Pellegrino <spellegrino@newrelic.com> <30441101+sethp-nr@users.noreply.github.com>\nShaobao Feng <shaobao.feng@huawei.com>\nShengbo Song <thomassong@tencent.com>\nShengjing Zhu <i@zhsj.me> <zhsj@debian.org>\nSiddharth Yadav <sedflix@gmail.com>\nSiYu Zhao <d.chaser.zsy@gmail.com>\nStefan Berger <stefanb@us.ibm.com> <stefanb@linux.ibm.com>\nStefan Berger <stefanb@us.ibm.com> <stefanb@linux.vnet.ibm.com>\nStephen J Day <stevvooe@gmail.com> <stephen.day@getcruise.com>\nStephen J Day <stevvooe@gmail.com> <stevvooe@users.noreply.github.com>\nStephen J Day <stevvooe@gmail.com> <stephen.day@docker.com>\nSudeesh John <sudeesh@linux.vnet.ibm.com>\nSu Fei  <fesu@ebay.com> <fesu@ebay.com>\nSu Xiaolin <linxxnil@126.com>\nTakumasa Sakao <sakataku7@gmail.com> <tsakao@zlab.co.jp>\nTed Yu <yuzhihong@gmail.com>\nTõnis Tiigi <tonistiigi@gmail.com>\nTony Fang <nenghui.fang@gmail.com>\nTony Fang <nenghui.fang@gmail.com> <nhfang@amazon.com>\nWade Lee <weidonglee27@gmail.com>\nWade Lee <weidonglee27@gmail.com> <weidonglee29@gmail.com>\nWade Lee <weidonglee27@gmail.com> <21621232@zju.edu.cn>\nwanglei <wllenyj@linux.alibaba.com>\nwanglei <wllenyj@linux.alibaba.com> <wanglei01@alibaba-inc.com>\nwangzhan <wang.zhan@smartx.com>\nWei Fu <fuweid89@gmail.com>\nWei Fu <fuweid89@gmail.com> <fhfuwei@163.com>\nwen chen <wen.chen@daocloud.io>\nWilliam Chen <willchen.005@gmail.com> <root@DESKTOP-HIQTJ3R.localdomain>\nXiaodong Zhang <a4012017@sina.com>\nXuean Yan <yan.xuean@zte.com.cn>\nYang Yang <yang8518296@163.com>\nYue Zhang <zy675793960@yeah.net>\nYuxing Liu <starnop@163.com>\nZechun Chen <zechun.chen@daocloud.io>\nzhang he <zhanghe9702@163.com>\nZhang Wei <zhangwei555@huawei.com>\nzhangpeng <zhangpeng63@baidu.com>\nzhangyadong <zhangyadong.0808@bytedance.com>\nZhenguang Zhu <zhengguang.zhu@daocloud.io>\nZhiyu Li <payall4u@qq.com>\nZhiyu Li <payall4u@qq.com> <404977848@qq.com>\nZhongming Chang<zhongming.chang@daocloud.io>\nZhoulin Xie <zhoulin.xie@daocloud.io>\nZhoulin Xie <zhoulin.xie@daocloud.io> <42261994+JoeWrightss@users.noreply.github.com>\nzounengren <zouyee1989@gmail.com>\nzounengren <zouyee1989@gmail.com> <zounengren@cmss.chinamobile.com>\n张潇 <xiaozhang0210@hotmail.com>\n张钰 <zhang.yu58@zte.com.cn>\n"
        },
        {
          "name": "ADOPTERS.md",
          "type": "blob",
          "size": 7.9990234375,
          "content": "## containerd Adopters\n\nA non-exhaustive list of containerd adopters is provided below.\n\n**_Docker/Moby engine_** - Containerd began life prior to its CNCF adoption as a lower-layer\nruntime manager for `runc` processes below the Docker engine. Continuing today, containerd\nhas extremely broad production usage as a component of the [Docker engine](https://github.com/docker/docker-ce)\nstack. Note that this includes any use of the open source [Moby engine project](https://github.com/moby/moby);\nincluding the Balena project listed below.\n\n**[faasd by OpenFaaS](https://github.com/openfaas/faasd)** - faasd in an Open Source project for serverless functions. It takes the same OpenFaaS components that usually run on Kubernetes and instead launches containers directly on a single host using CNI for networking. It's ideal for edge and for deploying functions without having to think about managing and maintaining Kubernetes.\n\n**_[IBM Cloud Kubernetes Service (IKS)](https://www.ibm.com/cloud/container-service)_** - offers containerd as the CRI runtime for v1.11 and higher versions.\n\n**_[IBM Cloud Private (ICP)](https://www.ibm.com/cloud/private)_** - IBM's on-premises cloud offering has containerd as a \"tech preview\" CRI runtime for the Kubernetes offered within this product for the past two releases, and plans to fully migrate to containerd in a future release.\n\n**_[Google Container-Optimized OS (COS)](https://cloud.google.com/container-optimized-os/docs)_** - Container-Optimized OS is a Linux Operating System from Google that is optimized for running containers. COS has used containerd as container runtime when containerd was part of Docker's core container runtime.\n\n**_[Google Cloud Kubernetes Engine (GKE)](https://cloud.google.com/kubernetes-engine/)_** - containerd has been offered in GKE since version 1.14 and has been the default runtime since version 1.19. It is also the only supported runtime for GKE Autopilot from the launch. [More details](https://cloud.google.com/kubernetes-engine/docs/concepts/using-containerd)\n\n**_[AWS Fargate](https://aws.amazon.com/fargate)_** - uses containerd + Firecracker (noted below) as the runtime and isolation technology for containers run in the Fargate platform. Fargate is a serverless, container-native compute offering from Amazon Web Services.\n\n**_[Amazon Elastic Kubernetes Service (EKS)](https://aws.amazon.com/eks/)_** - EKS optionally offers containerd as a CRI runtime starting with Kubernetes version 1.21. In Kubernetes 1.22 the default CRI runtime will be containerd.\n\n**_[Bottlerocket](https://aws.amazon.com/bottlerocket/)_** - Bottlerocket is a Linux distribution from Amazon Web Services purpose-built for containers using containerd as the core system runtime.\n\n**_Cloud Foundry_** - The [Guardian container manager](https://github.com/cloudfoundry/guardian) for CF has been using OCI runC directly with additional code from CF managing the container image and filesystem interactions, but have recently migrated to use containerd as a replacement for the extra code they had written around runC.\n\n**_Alibaba's PouchContainer_** - The Alibaba [PouchContainer](https://github.com/alibaba/pouch) project uses containerd as its runtime for a cloud native offering that has unique isolation and image distribution capabilities.\n\n**_Rancher's k3s project_** - Rancher Labs [k3s](https://github.com/rancher/k3s) is a lightweight Kubernetes distribution; in their words: \"Easy to install, half the memory, all in a binary less than 40mb.\" k8s uses containerd as the embedded runtime for this popular lightweight Kubernetes variant.\n\n**_Rancher's Rio project_** - Rancher Labs [Rio](https://github.com/rancher/rio) project uses containerd as the runtime for a combined Kubernetes, Istio, and container \"Cloud Native Container Distribution\" platform.\n\n**_Balena_** - Resin's [Balena](https://github.com/resin-os/balena) container engine, based on moby/moby but for edge, embedded, and IoT use cases, uses the containerd and runc stack in the same way that the Docker engine uses containerd.\n\n**_LinuxKit_** - the Moby project's [LinuxKit](https://github.com/linuxkit/linuxkit) for building secure, minimal Linux OS images in a container-native model uses containerd as the core runtime for system and service containers.\n\n**_BuildKit_** - The Moby project's [BuildKit](https://github.com/moby/buildkit) can use either runC or containerd as build execution backends for building container images. BuildKit support has also been built into the Docker engine in recent releases, making BuildKit provide the backend to the `docker build` command.\n\n**_[Azure Kubernetes Service (AKS)](https://azure.microsoft.com/services/kubernetes-service)_** - Microsoft's managed Kubernetes offering uses containerd for Linux nodes running v1.19 and greater, and Windows nodes running 1.20 and greater. [More Details](https://docs.microsoft.com/azure/aks/cluster-configuration#container-runtime-configuration)\n\n**_Amazon Firecracker_** - The AWS [Firecracker VMM project](http://firecracker-microvm.io/) has extended containerd with a new snapshotter and v2 shim to allow containerd to drive virtualized container processes via their VMM implementation. More details on their containerd integration are available in [their GitHub project](https://github.com/firecracker-microvm/firecracker-containerd).\n\n**_Kata Containers_** - The [Kata containers](https://katacontainers.io/) lightweight-virtualized container runtime project integrates with containerd via a custom v2 shim implementation that drives the Kata container runtime.\n\n**_D2iQ Konvoy_** - D2iQ Inc [Konvoy](https://d2iq.com/products/konvoy) product uses containerd as the container runtime for its Kubernetes distribution.\n\n**_Inclavare Containers_** - [Inclavare Containers](https://github.com/alibaba/inclavare-containers) is an innovation of container runtime with the novel approach for launching protected containers in hardware-assisted Trusted Execution Environment (TEE) technology, aka Enclave, which can prevent the untrusted entity, such as Cloud Service Provider (CSP), from accessing the sensitive and confidential assets in use.\n\n**_VMware TKG_** - [Tanzu Kubernetes Grid](https://tanzu.vmware.com/kubernetes-grid) VMware's Multicloud Kubernetes offering uses containerd as the default CRI runtime.\n\n**_VMware TCE_** - [Tanzu Community Edition](https://github.com/vmware-tanzu/community-edition) VMware's fully-featured, easy to manage, Kubernetes platform for learners and users. It is a freely available, community supported, and open source distribution of VMware Tanzu. It uses containerd as the default CRI runtime.\n\n**_[Talos Linux](https://www.talos.dev/)_** - Talos Linux is Linux designed for Kubernetes – secure, immutable, and minimal. Talos Linux is using containerd as the core system runtime and CRI implementation.\n\n**_Deckhouse_** - [Deckhouse Kubernetes Platform](https://deckhouse.io/) from Flant allows you to manage Kubernetes clusters anywhere in a fully automatic and uniform fashion. It uses containerd as the default CRI runtime.\n\n**_[Actuated](https://actuated.dev)_** - Actuated is a platform for running self-hosted CI in securely-isolated Firecracker VMs. Actuated uses containerd's image pulling facility to distribute and update the root filesystem for VMs for CI agents.\n\n**_[Syself Autopilot](https://syself.com)** - Syself Autopilot is a simplified Kubernetes platform based on Cluster API that can run on various providers. Syself Autopilot uses containerd as the default CRI runtime.\n\n**_Other Projects_** - While the above list provides a cross-section of well known uses of containerd, the simplicity and clear API layer for containerd has inspired many smaller projects around providing simple container management platforms. Several examples of building higher layer functionality on top of the containerd base have come from various containerd community participants:\n - Michael Crosby's [boss](https://github.com/crosbymichael/boss) project,\n - Evan Hazlett's [stellar](https://github.com/ehazlett/stellar) project,\n - Paul Knopf's immutable Linux image builder project: [darch](https://github.com/godarch/darch).\n"
        },
        {
          "name": "BUILDING.md",
          "type": "blob",
          "size": 13.369140625,
          "content": "# Build containerd from source\n\nThis guide is useful if you intend to contribute on containerd. Thanks for your\neffort. Every contribution is very appreciated.\n\nThis doc includes:\n* [Getting started with GitHub Codespaces](#getting-started-with-gitHub-codespaces)\n* [Build requirements](#build-requirements)\n* [Build the development environment](#build-the-development-environment)\n* [Build containerd](#build-containerd)\n* [Via docker container](#via-docker-container)\n* [Testing](#testing-containerd)\n\n## Getting started with GitHub Codespaces\n\nTo get started, create a codespace for this repository by clicking this 👇\n\n[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://github.com/codespaces/new?hide_repo_select=true&ref=main&repo=46089560)\n\nA codespace will open in a web-based version of Visual Studio Code. The [dev container](.devcontainer/devcontainer.json) is fully configured with software needed for this project and the containerd built. If you use a codespace, then you can directly skip to the [testing](#testing-containerd) section of this document.\n\n**Note**: Dev containers is an open spec which is supported by [GitHub Codespaces](https://github.com/codespaces) and [other tools](https://containers.dev/supporting).\n\n## Build requirements\n\nTo build the `containerd` daemon, and the `ctr` simple test client, the following build system dependencies are required:\n\n* Go 1.22.x or above\n* Protoc 3.x compiler and headers (download at the [Google protobuf releases page](https://github.com/protocolbuffers/protobuf/releases))\n* Btrfs headers and libraries for your distribution. Note that building the btrfs driver can be disabled via the build tag `no_btrfs`, removing this dependency.\n\n> *Note*: On macOS, you need a third party runtime to run containers on containerd\n\n## Build the development environment\n\nFirst you need to setup your Go development environment. You can follow this\nguideline [How to write go code](https://golang.org/doc/code.html) and at the\nend you have `go` command in your `PATH`.\n\nYou need `git` to checkout the source code:\n\n```sh\ngit clone https://github.com/containerd/containerd\n```\n\nFor proper results, install the `protoc` release into `/usr/local` on your build system. When generating source code from `.proto` files, containerd may rely on some external protocol buffer files. These external dependencies should be added to the `/usr/local/include` directory. To install the appropriate version of `protoc` and download any necessary external protocol buffer files on a Linux host, run the install script located at `script/setup/install-protobuf`.\n\nTo enable optional [Btrfs](https://en.wikipedia.org/wiki/Btrfs) snapshotter, you should have the headers from the Linux kernel 4.12 or later.\nThe dependency on the kernel headers only affects users building containerd from source.\nUsers on older kernels may opt to not compile the btrfs support (see `BUILDTAGS=no_btrfs` below),\nor to provide headers from a newer kernel.\n\n> **Note**\n> The dependency on the Linux kernel headers 4.12 was introduced in containerd 1.7.0-beta.4.\n>\n> containerd 1.6 has different set of dependencies for enabling btrfs.\n> containerd 1.6 users should refer to https://github.com/containerd/containerd/blob/release/1.6/BUILDING.md#build-the-development-environment\n\nAt this point you are ready to build `containerd` yourself!\n\n## Runc\n\nRunc is the default container runtime used by `containerd` and is required to\nrun containerd. While it is okay to download a `runc` binary and install that on\nthe system, sometimes it is necessary to build runc directly when working with\ncontainer runtime development. Make sure to follow the guidelines for versioning\nin [RUNC.md](/docs/RUNC.md) for the best results.\n\n> *Note*: Runc only supports Linux\n\n## Build containerd\n\n`containerd` uses `make` to create a repeatable build flow. It means that you\ncan run:\n\n```sh\ncd containerd\nmake\n```\n\nThis is going to build all the project binaries in the `./bin/` directory.\n\nYou can move them in your global path, `/usr/local/bin` with:\n\n```sh\nsudo make install\n```\n\nThe install prefix can be changed by passing the `PREFIX` variable (defaults\nto `/usr/local`).\n\nNote: if you set one of these vars, set them to the same values on all make stages\n(build as well as install).\n\nIf you want to prepend an additional prefix on actual installation (eg. packaging or chroot install),\nyou can pass it via `DESTDIR` variable:\n\n```sh\nsudo make install DESTDIR=/tmp/install-x973234/\n```\n\nThe above command installs the `containerd` binary to `/tmp/install-x973234/usr/local/bin/containerd`\n\nThe current `DESTDIR` convention is supported since containerd v1.6.\nOlder releases was using `DESTDIR` for a different purpose that is similar to `PREFIX`.\n\n\nWhen making any changes to the gRPC API, you can use the installed `protoc`\ncompiler to regenerate the API generated code packages with:\n\n```sh\nmake generate\n```\n\n> *Note*: Several build tags are currently available:\n> * `no_cri`: A build tag disables building Kubernetes [CRI](http://blog.kubernetes.io/2016/12/container-runtime-interface-cri-in-kubernetes.html) support into containerd.\n> See [here](https://github.com/containerd/cri-containerd#build-tags) for build tags of CRI plugin.\n> * snapshotters (alphabetical order)\n>   * `no_aufs`: A build tag disables building the aufs snapshot driver. (Ignored since containerd v2.0, as the aufs snapshot driver is no longer supported)\n>   * `no_btrfs`: A build tag disables building the Btrfs snapshot driver.\n>   * `no_devmapper`: A build tag disables building the device mapper snapshot driver.\n>   * `no_zfs`: A build tag disables building the ZFS snapshot driver.\n> * platform\n>   * `no_systemd`: disables any systemd specific code\n>\n> For example, adding `BUILDTAGS=no_btrfs` to your environment before calling the **binaries**\n> Makefile target will disable the btrfs driver within the containerd Go build.\n\nVendoring of external imports uses the [Go Modules](https://golang.org/ref/mod#vendoring). You need\nto use `go mod` command to modify the dependencies. After modifition, you should run `go mod tidy`\nand `go mod vendor` to ensure the `go.mod`, `go.sum` files and `vendor` directory are up to date.\nChanges to these files should become a single commit for a PR which relies on vendored updates.\n\nPlease refer to [RUNC.md](/docs/RUNC.md) for the currently supported version of `runc` that is used by containerd.\n\n> *Note*: On macOS, the containerd daemon can be built and run natively. However, as stated above, runc only supports linux.\n\n### Static binaries\n\nYou can build static binaries by providing a few variables to `make`:\n\n```sh\nmake STATIC=1\n```\n\n> *Note*:\n> - static build is discouraged\n> - static containerd binary does not support loading shared object plugins (`*.so`)\n> - static build binaries are not position-independent\n\n# Via Docker container\n\n> [!NOTE]\n> The following instructions assume you are at the **parent** directory of containerd source directory.\n\n## Build containerd in a container\n\nYou can build `containerd` via a Linux-based Docker container using the [Docker official `golang` image](https://hub.docker.com/_/golang/)\n\nFrom the **parent** directory of `containerd`'s cloned repo you can run the following command:\n\n```sh\ndocker run -it \\\n    -v ${PWD}/containerd:/src/containerd \\\n    -w /src/containerd golang\n```\n\nThis mounts the `containerd` repository inside the image at `/src/containerd` and, by default, runs a shell at that directory.\n\nNow, you are now ready to follow the [build instructions](#build-containerd):\n\n## Build containerd and runc in a container\n\nTo have complete core container runtime, you will need both `containerd` and `runc`. It is possible to build both of these via Docker container.\n\nYou can clone `runc` in the same parent directory where you cloned `containerd` and you should clone [the latest stable version of `runc`](https://github.com/opencontainers/runc/releases), e.g. v1.1.13:\n\n```sh\ngit clone --branch <RELEASE_TAG> https://github.com/opencontainers/runc\n```\n\nIn our Docker container we will build `runc` build, which includes\n[seccomp](https://en.wikipedia.org/wiki/seccomp), [SELinux](https://en.wikipedia.org/wiki/Security-Enhanced_Linux),\nand [AppArmor](https://en.wikipedia.org/wiki/AppArmor) support. Seccomp support\nin runc requires `libseccomp-dev` as a dependency (AppArmor and SELinux support\ndo not require external libraries at build time). Refer to [RUNC.md](docs/RUNC.md)\nin the docs directory to for details about building runc, and to learn about\nsupported versions of `runc` as used by containerd.\n\nSince we need [`libseccomp-dev`](https://packages.debian.org/stable/libseccomp-dev) installed as a dependency, we will need a custom Docker image derived from the official `golang` image. You can use the following `Dockerfile` to build your custom image:\n\n```sh\nFROM golang\n\nRUN apt-get update && \\\n    apt-get install -y libseccomp-dev\n```\n\nLet's suppose you've built an image named `containerd/build` from the above `Dockerfile`.\n\nYou can run the following command:\n\n```sh\ndocker run -it \\\n    -v ${PWD}/containerd:/src/containerd \\\n    -v ${PWD}/runc:/src/runc \\\n    -w /src/containerd \\\n    containerd/build\n```\n\nThis mounts both `runc` and `containerd` repositories in our Docker container.\n\nFrom within the Docker container, let's build `containerd`:\n\n```sh\nmake && make install\n```\n\nYou can check the installed binaries with:\n\n```sh\n$ which containerd\n/usr/local/bin/containerd\n\n$ containerd --version\ncontainerd github.com/containerd/containerd/v2 v2.0.0-rc.3-195-gf5d5407c2 f5d5407c2ff12865653a9a132d5783196be82763\n```\n\nNext, let's build `runc`:\n\n```sh\ncd /src/runc\nmake && make install\n```\n\nYou can check the installed binaries with:\n\n```sh\n$ which runc\n/usr/local/sbin/runc\n\n$ runc --version\nrunc version 1.1.13\ncommit: v1.1.13-0-g58aa9203\nspec: 1.0.2-dev\ngo: go1.23.0\nlibseccomp: 2.5.4\n```\n\nFor further details about building runc, refer to [RUNC.md](docs/RUNC.md) in the\ndocs directory.\n\nWhen working with `ctr`, the simple test client we just built, don't forget to start the daemon!\n\n```sh\ncontainerd --config config.toml\n```\n\n# Testing containerd\n\nDuring the automated CI the unit tests and integration tests are run as part of the PR validation. As a developer you can run these tests locally by using any of the following `Makefile` targets:\n - `make test`: run all non-integration tests that do not require `root` privileges\n - `make root-test`: run all non-integration tests which require `root`\n - `make integration`: run all tests, including integration tests and those which require `root`. `TESTFLAGS_PARALLEL` can be used to control parallelism. For example, `TESTFLAGS_PARALLEL=1 make integration` will lead a non-parallel execution. The default value of `TESTFLAGS_PARALLEL` is **8**.\n - `make cri-integration`: [CRI Integration Tests](https://github.com/containerd/containerd/blob/main/docs/cri/testing.md#cri-integration-test) run cri integration tests\n\nTo execute a specific test or set of tests you can use the `go test` capabilities\nwithout using the `Makefile` targets. The following examples show how to specify a test\nname and also how to use the flag directly against `go test` to run root-requiring tests.\n\n```sh\n# run the test <TEST_NAME>:\ngo test\t-v -run \"<TEST_NAME>\" ./path/to/package\n# enable the root-requiring tests:\ngo test -v -run ./path/to/package -test.root\n```\n\nExample output from directly running `go test` to execute the `TestContainerList` test:\n\n```sh\nsudo go test -v -run \"TestContainerList\" ./integration/client -test.root\n=== RUN   TestContainerList\n--- PASS: TestContainerList (0.00s)\nPASS\n\nok      github.com/containerd/containerd/v2/integration/client  2.584s\n```\n\n> *Note*: in order to run `sudo go` you need to\n> - either keep user PATH environment variable. ex: `sudo \"PATH=$PATH\" env go test <args>`\n> - or use `go test -exec` ex: `go test -exec sudo -v -run \"TestTarWithXattr\" ./pkg/archive -test.root`\n\n## Additional tools\n\n### containerd-stress\nIn addition to `go test`-based testing executed via the `Makefile` targets, the `containerd-stress` tool is available and built with the `all` or `binaries` targets and installed during `make install`.\n\nWith this tool you can stress a running containerd daemon for a specified period of time, selecting a concurrency level to generate stress against the daemon. The following command is an example of having five workers running for two hours against a default containerd gRPC socket address:\n\n```sh\ncontainerd-stress -c 5 -d 120m\n```\n\nFor more information on this tool's options please run `containerd-stress --help`.\n\n### bucketbench\n[Bucketbench](https://github.com/estesp/bucketbench) is an external tool which can be used to drive load against a container runtime, specifying a particular set of lifecycle operations to run with a specified amount of concurrency. Bucketbench is more focused on generating performance details than simply inducing load against containerd.\n\nBucketbench differs from the `containerd-stress` tool in a few ways:\n - Bucketbench has support for testing the Docker engine, the `runc` binary, and containerd 0.2.x (via `ctr`) and 1.0 (via the client library) branches.\n - Bucketbench is driven via configuration file that allows specifying a list of lifecycle operations to execute. This can be used to generate detailed statistics per-command (e.g. start, stop, pause, delete).\n - Bucketbench generates detailed reports and timing data at the end of the configured test run.\n\nMore details on how to install and run `bucketbench` are available at the [GitHub project page](https://github.com/estesp/bucketbench).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.357421875,
          "content": "# Contributors' Guide\n\nThis guide will help familiarize contributors to the `containerd/containerd` repository.\n\n## Prerequisite\n\nFirst read the containerd project's [general guidelines around contribution](https://github.com/containerd/project/blob/main/CONTRIBUTING.md)\nwhich apply to all containerd projects.\n\n## Getting started\n\nSee [`BUILDING.md`](https://github.com/containerd/containerd/blob/main/BUILDING.md) for instructions for setting up a development environment.\n\nIf you are also a new user to containerd, you can first check out the [_Getting started with containerd_](https://github.com/containerd/containerd/blob/main/docs/getting-started.md) guide.\n\n## Setting up your local environment\n\nAt a minimum, the dev tools from `script/setup/install-dev-tools` should be installed.\nRun `make install-deps` to install dependencies used for running and developing the CRI plugin.\nOther install scripts under `script/setup` may need to be run depending on your environment and your preference for installing libraries and dependencies.\nThe versions used by `containerd/containerd` CI can be found in `script/setup` and referred to if installing manually.\n\n```\n$ script/setup/install-dev-tools\n$ make install-deps\n```\n\n## Code style\n\n- Go files adhere to standard Go formatting and styling\n- Protobuf files use tabs for indentation\n- Other files must not contain trailing whitespace and should end with a single new line character\n\nUse the `check` command in the makefile to verify your code matches the expected style.\n\n```\nmake check\n```\n\n## Updating protobuf files\n\nEnsure protoc and dev tools have been installed, then run `make protos`\n\n> **Note**\n> When running `make protos`, the current working directory should be found under the `GOPATH` environment\n> variable to ensure protoc can properly resolve the paths of protofiles in the project.\n\n## Naming packages\n\nPackage names should be short and simple. Avoid using `_` and repeating words from parent directories.\n\n### Where to put packages\n\nTry to put a new package under the appropriate root directories. The root directory is reserved for\nconfiguration and build files, no source files will be accepted in root since containerd v2.0.\n\n- `api` - All protobuf service definitions and types used by services\n- `bin` - Autogenerated during build, do not check in file here\n- `client` - All Go files for the containerd client (formerly in `containerd/containerd` root in 1.x)\n- `cmd` - All Go main packages and the packages used only for that main package\n- `contrib` - Files, configurations, and packages related to external tools or libraries\n- `core` - Core Go packages with interface definitions and built-in implementations\n- `docs` - All containerd technical documentation using markdown\n- `internal` - All utility packages used by containerd and not intended for direct import\n- `man`- All containerd reference manuals used for the `man` command\n- `pkg` - Non-core Go packages used by clients and other containerd packages\n- `plugins` - All included containerd plugins which are registered via init\n- `releases` - All release note files\n- `script` - All scripts used for testing, development, and CI\n- `test` - Test scripts used for external end to end testing of containerd, do not add new files here\n- `vendor` - Autogenerated vendor files from `make vendor` command, do not manually edit files here\n- `version` - Version package with the current containerd version\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.5126953125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        https://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   Copyright The containerd Authors\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       https://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 17.2490234375,
          "content": "#   Copyright The containerd Authors.\n\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n\n#       http://www.apache.org/licenses/LICENSE-2.0\n\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n\n\n# Go command to use for build\nGO ?= go\nINSTALL ?= install\n\n# Root directory of the project (absolute path).\nROOTDIR=$(dir $(abspath $(lastword $(MAKEFILE_LIST))))\n\n# Base path used to install.\n# The files will be installed under `$(DESTDIR)/$(PREFIX)`.\n# The convention of `DESTDIR` was changed in containerd v1.6.\nPREFIX        ?= /usr/local\nBINDIR        ?= $(PREFIX)/bin\nDATADIR       ?= $(PREFIX)/share\nDOCDIR        ?= $(DATADIR)/doc\nMANDIR        ?= $(DATADIR)/man\n\nTEST_IMAGE_LIST ?=\n\n# Used to populate variables in version package.\nVERSION ?= $(shell git describe --match 'v[0-9]*' --dirty='.m' --always)\nREVISION ?= $(shell git rev-parse HEAD)$(shell if ! git diff --no-ext-diff --quiet --exit-code; then echo .m; fi)\nPACKAGE=github.com/containerd/containerd/v2\nSHIM_CGO_ENABLED ?= 0\n\nifneq \"$(strip $(shell command -v $(GO) 2>/dev/null))\" \"\"\n\tGOOS ?= $(shell $(GO) env GOOS)\n\tGOARCH ?= $(shell $(GO) env GOARCH)\nelse\n\tifeq ($(GOOS),)\n\t\t# approximate GOOS for the platform if we don't have Go and GOOS isn't\n\t\t# set. We leave GOARCH unset, so that may need to be fixed.\n\t\tifeq ($(OS),Windows_NT)\n\t\t\tGOOS = windows\n\t\telse\n\t\t\tUNAME_S := $(shell uname -s)\n\t\t\tifeq ($(UNAME_S),Linux)\n\t\t\t\tGOOS = linux\n\t\t\tendif\n\t\t\tifeq ($(UNAME_S),Darwin)\n\t\t\t\tGOOS = darwin\n\t\t\tendif\n\t\t\tifeq ($(UNAME_S),FreeBSD)\n\t\t\t\tGOOS = freebsd\n\t\t\tendif\n\t\tendif\n\telse\n\t\tGOOS ?= $$GOOS\n\t\tGOARCH ?= $$GOARCH\n\tendif\nendif\n\nifndef GODEBUG\n\tEXTRA_LDFLAGS += -s -w\n\tDEBUG_GO_GCFLAGS :=\n\tDEBUG_TAGS :=\nelse\n\tDEBUG_GO_GCFLAGS := -gcflags=all=\"-N -l\"\n\tDEBUG_TAGS := static_build\nendif\n\nWHALE = \"🇩\"\nONI = \"👹\"\n\nRELEASE=containerd-$(VERSION:v%=%)-${GOOS}-${GOARCH}\nSTATICRELEASE=containerd-static-$(VERSION:v%=%)-${GOOS}-${GOARCH}\nCRIRELEASE=cri-containerd-$(VERSION:v%=%)-${GOOS}-${GOARCH}\nCRICNIRELEASE=cri-containerd-cni-$(VERSION:v%=%)-${GOOS}-${GOARCH}\n\nPKG=github.com/containerd/containerd/v2\n\n# Project binaries.\nCOMMANDS=ctr containerd containerd-stress\nMANPAGES=ctr.8 containerd.8 containerd-config.8 containerd-config.toml.5\n\nifdef BUILDTAGS\n    GO_BUILDTAGS = ${BUILDTAGS}\nendif\nGO_BUILDTAGS ?=\nGO_BUILDTAGS += urfave_cli_no_docs\nGO_BUILDTAGS += ${DEBUG_TAGS}\nifneq ($(STATIC),)\n\tGO_BUILDTAGS += osusergo netgo static_build\nendif\n\nSHIM_GO_BUILDTAGS := $(GO_BUILDTAGS) no_grpc\n\nGO_TAGS=$(if $(GO_BUILDTAGS),-tags \"$(strip $(GO_BUILDTAGS))\",)\nSHIM_GO_TAGS=$(if $(SHIM_GO_BUILDTAGS),-tags \"$(strip $(SHIM_GO_BUILDTAGS))\",)\n\nGO_LDFLAGS=-ldflags '-X $(PKG)/version.Version=$(VERSION) -X $(PKG)/version.Revision=$(REVISION) -X $(PKG)/version.Package=$(PACKAGE) $(EXTRA_LDFLAGS)\nifneq ($(STATIC),)\n\tGO_LDFLAGS += -extldflags \"-static\"\nendif\nGO_LDFLAGS+='\n\nSHIM_GO_LDFLAGS=-ldflags '-X $(PKG)/version.Version=$(VERSION) -X $(PKG)/version.Revision=$(REVISION) -X $(PKG)/version.Package=$(PACKAGE) -extldflags \"-static\" $(EXTRA_LDFLAGS)'\n\n# Project packages.\nPACKAGES=$(shell $(GO) list ${GO_TAGS} ./... | grep -v /vendor/ | grep -v /integration)\nAPI_PACKAGES=$(shell (cd api && $(GO) list ${GO_TAGS} ./... | grep -v /vendor/ | grep -v /integration))\nTEST_REQUIRES_ROOT_PACKAGES=$(filter \\\n    ${PACKAGES}, \\\n    $(shell \\\n\tfor f in $$(git grep -l testutil.RequiresRoot | grep -v Makefile); do \\\n\t\td=\"$$(dirname $$f)\"; \\\n\t\t[ \"$$d\" = \".\" ] && echo \"${PKG}\" && continue; \\\n\t\techo \"${PKG}/$$d\"; \\\n\tdone | sort -u) \\\n    )\n\nifdef SKIPTESTS\n    PACKAGES:=$(filter-out ${SKIPTESTS},${PACKAGES})\n    TEST_REQUIRES_ROOT_PACKAGES:=$(filter-out ${SKIPTESTS},${TEST_REQUIRES_ROOT_PACKAGES})\nendif\n\n#Replaces \":\" (*nix), \";\" (windows) with newline for easy parsing\nGOPATHS=$(shell $(GO) env GOPATH | tr \":\" \"\\n\" | tr \";\" \"\\n\")\n\nTESTFLAGS_RACE=\nGO_BUILD_FLAGS ?=\n# See Golang issue re: '-trimpath': https://github.com/golang/go/issues/13809\nGO_GCFLAGS=$(shell\t\t\t\t\\\n\tset -- ${GOPATHS};\t\t\t\\\n\techo \"-gcflags=-trimpath=$${1}/src\";\t\\\n\t)\n\nBINARIES=$(addprefix bin/,$(COMMANDS))\n\n#include platform specific makefile\n-include Makefile.$(GOOS)\n\n# Flags passed to `go test`\nTESTFLAGS ?= $(TESTFLAGS_RACE) $(EXTRA_TESTFLAGS)\nTESTFLAGS_PARALLEL ?= 8\n\n# Use this to replace `go test` with, for instance, `gotestsum`\nGOTEST ?= $(GO) test\n\nOUTPUTDIR = $(join $(ROOTDIR), _output)\nCRIDIR=$(OUTPUTDIR)/cri\n\n\n.PHONY: clean all AUTHORS build binaries test integration generate protos check-protos coverage ci check help install uninstall vendor release static-release mandir install-man install-doc genman install-cri-deps cri-release cri-cni-release cri-integration install-deps bin/cri-integration.test remove-replace clean-vendor\n.DEFAULT: default\n\n# Forcibly set the default goal to all, in case an include above brought in a rule definition.\n.DEFAULT_GOAL := all\n\nall: binaries\n\ncheck: proto-fmt ## run all linters\n\t@echo \"$(WHALE) $@\"\n\tGOGC=75 golangci-lint run\n\nci: check binaries check-protos coverage coverage-integration ## to be used by the CI\n\nAUTHORS: .mailmap .git/HEAD\n\tgit log --format='%aN <%aE>' | sort -fu > $@\n\ngenerate: protos\n\t@echo \"$(WHALE) $@\"\n\t@PATH=\"${ROOTDIR}/bin:${PATH}\" $(GO) generate -x ${PACKAGES}\n\nprotos: bin/protoc-gen-go-fieldpath bin/go-buildtag\n\t@echo \"$(WHALE) $@\"\n\t@find . -path ./vendor -prune -false -o -name '*.pb.go' | xargs rm\n\t$(eval TMPDIR := $(shell mktemp -d))\n\t@mv ${ROOTDIR}/vendor ${TMPDIR}\n\t@(cd ${ROOTDIR}/api && PATH=\"${ROOTDIR}/bin:${PATH}\" protobuild --quiet ${API_PACKAGES})\n\t@mv ${TMPDIR}/vendor ${ROOTDIR}\n\t@rm -rf ${TMPDIR} v2\n\tgo-fix-acronym -w -a '^Os' $(shell find api/ -name '*.pb.go')\n\tgo-fix-acronym -w -a '(Id|Io|Uuid|Os)$$' $(shell find api/ -name '*.pb.go')\n\tbin/go-buildtag -w --tags '!no_grpc' $(shell find api/ -name '*_grpc.pb.go')\n\t@test -z \"$$(git status --short | grep \"api/next.pb.txt\" | tee /dev/stderr)\" || \\\n\t\t$(GO) mod edit -replace=github.com/containerd/containerd/api=./api\n\ncheck-protos: protos ## check if protobufs needs to be generated again\n\t@echo \"$(WHALE) $@\"\n\t@test -z \"$$(git status --short | grep \".pb.go\" | tee /dev/stderr)\" || \\\n\t\t((git diff | cat) && \\\n\t\t(echo \"$(ONI) please run 'make protos' when making changes to proto files\" && false))\n\ncheck-api-descriptors: protos ## check that protobuf changes aren't present.\n\t@echo \"$(WHALE) $@\"\n\t@test -z \"$$(git status --short | grep \".pb.txt\" | tee /dev/stderr)\" || \\\n\t\t((git diff $$(find . -name '*.pb.txt') | cat) && \\\n\t\t(echo \"$(ONI) please run 'make protos' when making changes to proto files and check-in the generated descriptor file changes\" && false))\n\nproto-fmt: ## check format of proto files\n\t@echo \"$(WHALE) $@\"\n\t@test -z \"$$(find . -path ./vendor -prune -o -path ./protobuf/google/rpc -prune -o -name '*.proto' -type f -exec grep -Hn -e \"^ \" {} \\; | tee /dev/stderr)\" || \\\n\t\t(echo \"$(ONI) please indent proto files with tabs only\" && false)\n\nbuild: ## build the go packages\n\t@echo \"$(WHALE) $@\"\n\t@$(GO) build ${DEBUG_GO_GCFLAGS} ${GO_GCFLAGS} ${GO_BUILD_FLAGS} ${EXTRA_FLAGS} ${GO_LDFLAGS} ${PACKAGES}\n\ntest: ## run tests, except integration tests and tests that require root\n\t@echo \"$(WHALE) $@\"\n\t@$(GOTEST) ${TESTFLAGS} ${PACKAGES}\n\nroot-test: ## run tests, except integration tests\n\t@echo \"$(WHALE) $@\"\n\t@$(GOTEST) ${TESTFLAGS} ${TEST_REQUIRES_ROOT_PACKAGES} -test.root\n\nintegration: ## run integration tests\n\t@echo \"$(WHALE) $@\"\n\t@cd \"${ROOTDIR}/integration/client\" && $(GO) mod download && $(GOTEST) -v ${TESTFLAGS} -test.root -parallel ${TESTFLAGS_PARALLEL} .\n\n# TODO integrate cri integration bucket with coverage\nbin/cri-integration.test:\n\t@echo \"$(WHALE) $@\"\n\t@$(GO) test -c ./integration -o bin/cri-integration.test\n\ncri-integration: binaries bin/cri-integration.test ## run cri integration tests (example: FOCUS=TestContainerListStats make cri-integration)\n\t@echo \"$(WHALE) $@\"\n\t@bash ./script/test/cri-integration.sh\n\t@rm -rf bin/cri-integration.test\n\n# build runc shimv2 with failpoint control, only used by integration test\nbin/containerd-shim-runc-fp-v1: integration/failpoint/cmd/containerd-shim-runc-fp-v1 FORCE\n\t@echo \"$(WHALE) $@\"\n\t@CGO_ENABLED=${SHIM_CGO_ENABLED} $(GO) build ${GO_BUILD_FLAGS} -o $@ ${SHIM_GO_LDFLAGS} ${GO_TAGS} ${SHIM_GO_TAGS} ./integration/failpoint/cmd/containerd-shim-runc-fp-v1\n\n# build CNI bridge plugin wrapper with failpoint support, only used by integration test\nbin/cni-bridge-fp: integration/failpoint/cmd/cni-bridge-fp FORCE\n\t@echo \"$(WHALE) $@\"\n\t@$(GO) build ${GO_BUILD_FLAGS} -o $@ ./integration/failpoint/cmd/cni-bridge-fp\n\n# build runc-fp as runc wrapper to support failpoint, only used by integration test\nbin/runc-fp: integration/failpoint/cmd/runc-fp FORCE\n\t@echo \"$(WHALE) $@\"\n\t@$(GO) build ${GO_BUILD_FLAGS} -o $@ ./integration/failpoint/cmd/runc-fp\n\n# build loopback-v2 with failpoint support, only used by integration test\nbin/loopback-v2: integration/failpoint/cmd/loopback-v2 FORCE\n\t@echo \"$(WHALE) $@\"\n\t@CGO_ENABLED=${SHIM_CGO_ENABLED} $(GO) build ${GO_BUILD_FLAGS} -o $@ ./integration/failpoint/cmd/loopback-v2\n\nbenchmark: ## run benchmarks tests\n\t@echo \"$(WHALE) $@\"\n\t@$(GO) test ${TESTFLAGS} -bench . -run Benchmark -test.root\n\nFORCE:\n\ndefine BUILD_BINARY\n@echo \"$(WHALE) $@\"\n$(GO) build ${DEBUG_GO_GCFLAGS} ${GO_GCFLAGS} ${GO_BUILD_FLAGS} -o $@ ${GO_LDFLAGS} ${GO_TAGS}  ./$<\nendef\n\n# Build a binary from a cmd.\nbin/%: cmd/% FORCE\n\t$(call BUILD_BINARY)\n\n# gen-manpages must not have the urfave_cli_no_docs build-tag set\nbin/gen-manpages: cmd/gen-manpages FORCE\n\t@echo \"$(WHALE) $@\"\n\t$(GO) build ${DEBUG_GO_GCFLAGS} ${GO_GCFLAGS} ${GO_BUILD_FLAGS} -o $@ ${GO_LDFLAGS} $(subst urfave_cli_no_docs,,${GO_TAGS})  ./cmd/gen-manpages\n\nbin/containerd-shim-runc-v2: cmd/containerd-shim-runc-v2 FORCE # set !cgo and omit pie for a static shim build: https://github.com/golang/go/issues/17789#issuecomment-258542220\n\t@echo \"$(WHALE) $@\"\n\tCGO_ENABLED=${SHIM_CGO_ENABLED} $(GO) build ${GO_BUILD_FLAGS} -o $@ ${SHIM_GO_LDFLAGS} ${SHIM_GO_TAGS} ./cmd/containerd-shim-runc-v2\n\nbinaries: $(BINARIES) ## build binaries\n\t@echo \"$(WHALE) $@\"\n\nman: mandir $(addprefix man/,$(MANPAGES))\n\t@echo \"$(WHALE) $@\"\n\nmandir:\n\t@mkdir -p man\n\n# Kept for backwards compatibility\ngenman: man/containerd.8 man/ctr.8\n\nman/containerd.8: bin/gen-manpages FORCE\n\t@echo \"$(WHALE) $@\"\n\t$< $(@F) $(@D)\n\nman/ctr.8: bin/gen-manpages FORCE\n\t@echo \"$(WHALE) $@\"\n\t$< $(@F) $(@D)\n\nman/%: docs/man/%.md FORCE\n\t@echo \"$(WHALE) $@\"\n\tgo-md2man -in \"$<\" -out \"$@\"\n\ndefine installmanpage\n$(INSTALL) -d $(DESTDIR)$(MANDIR)/man$(2);\ngzip -c $(1) >$(DESTDIR)$(MANDIR)/man$(2)/$(3).gz;\nendef\n\ninstall-man: man\n\t@echo \"$(WHALE) $@\"\n\t$(foreach manpage,$(addprefix man/,$(MANPAGES)), $(call installmanpage,$(manpage),$(subst .,,$(suffix $(manpage))),$(notdir $(manpage))))\n\ninstall-doc:\n\t@echo \"$(WHALE) $@\"\n\t@mkdir -p $(DESTDIR)/$(DOCDIR)/containerd\n\t@cp -R docs/* $(DESTDIR)/$(DOCDIR)/containerd\n\ndefine pack_release\n\t@rm -rf releases/$(1) releases/$(1).tar.gz\n\t@$(INSTALL) -d releases/$(1)/bin\n\t@$(INSTALL) $(BINARIES) releases/$(1)/bin\n\t@tar -czf releases/$(1).tar.gz -C releases/$(1) bin\n\t@rm -rf releases/$(1)\nendef\n\n\nreleases/$(RELEASE).tar.gz: $(BINARIES)\n\t@echo \"$(WHALE) $@\"\n\t$(call pack_release,$(RELEASE))\n\nrelease: releases/$(RELEASE).tar.gz\n\t@echo \"$(WHALE) $@\"\n\t@cd releases && sha256sum $(RELEASE).tar.gz >$(RELEASE).tar.gz.sha256sum\n\nreleases/$(STATICRELEASE).tar.gz:\nifeq ($(GOOS),linux)\n\t@make STATIC=1 $(BINARIES)\n\t@echo \"$(WHALE) $@\"\n\t$(call pack_release,$(STATICRELEASE))\nelse\n\t@echo \"Skipping $(STATICRELEASE) for $(GOOS)\"\nendif\n\nstatic-release: releases/$(STATICRELEASE).tar.gz\nifeq ($(GOOS),linux)\n\t@echo \"$(WHALE) $@\"\n\t@cd releases && sha256sum $(STATICRELEASE).tar.gz >$(STATICRELEASE).tar.gz.sha256sum\nelse\n\t@echo \"Skipping releasing $(STATICRELEASE) for $(GOOS)\"\nendif\n\n# install of cri deps into release output directory\nifeq ($(GOOS),windows)\ninstall-cri-deps: $(BINARIES)\n\t$(INSTALL) -d $(CRIDIR)\n\tDESTDIR=$(CRIDIR) script/setup/install-cni-windows\n\tcp bin/* $(CRIDIR)\nelse\ninstall-cri-deps: $(BINARIES)\n\t@rm -rf ${CRIDIR}\n\t@$(INSTALL) -d ${CRIDIR}/usr/local/bin\n\t@$(INSTALL) -D -m 755 bin/* ${CRIDIR}/usr/local/bin\n\t@$(INSTALL) -d ${CRIDIR}/opt/containerd/cluster\n\t@cp -r contrib/gce ${CRIDIR}/opt/containerd/cluster/\n\t@$(INSTALL) -d ${CRIDIR}/etc/systemd/system\n\t@$(INSTALL) -m 644 containerd.service ${CRIDIR}/etc/systemd/system\n\techo \"CONTAINERD_VERSION: '$(VERSION:v%=%)'\" | tee ${CRIDIR}/opt/containerd/cluster/version\n\n\tDESTDIR=$(CRIDIR) script/setup/install-runc\n\tDESTDIR=$(CRIDIR) script/setup/install-cni\n\tDESTDIR=$(CRIDIR) script/setup/install-critools\n\tDESTDIR=$(CRIDIR) script/setup/install-imgcrypt\n\n\t@$(INSTALL) -d $(CRIDIR)/bin\n\t@$(INSTALL) $(BINARIES) $(CRIDIR)/bin\nendif\n\n$(CRIDIR)/cri-containerd.DEPRECATED.txt:\n\t@mkdir -p $(CRIDIR)\n\t@$(INSTALL) -m 644 releases/cri-containerd.DEPRECATED.txt $@\n\nifeq ($(GOOS),windows)\nreleases/$(CRIRELEASE).tar.gz: install-cri-deps $(CRIDIR)/cri-containerd.DEPRECATED.txt\n\t@echo \"$(WHALE) $@\"\n\t@cd $(CRIDIR) && tar -czf ../../releases/$(CRIRELEASE).tar.gz *\n\nreleases/$(CRICNIRELEASE).tar.gz: install-cri-deps $(CRIDIR)/cri-containerd.DEPRECATED.txt\n\t@echo \"$(WHALE) $@\"\n\t@cd $(CRIDIR) && tar -czf ../../releases/$(CRICNIRELEASE).tar.gz *\nelse\nreleases/$(CRIRELEASE).tar.gz: install-cri-deps $(CRIDIR)/cri-containerd.DEPRECATED.txt\n\t@echo \"$(WHALE) $@\"\n\t@tar -czf releases/$(CRIRELEASE).tar.gz -C $(CRIDIR) cri-containerd.DEPRECATED.txt etc/crictl.yaml etc/systemd usr opt/containerd\n\nreleases/$(CRICNIRELEASE).tar.gz: install-cri-deps $(CRIDIR)/cri-containerd.DEPRECATED.txt\n\t@echo \"$(WHALE) $@\"\n\t@tar -czf releases/$(CRICNIRELEASE).tar.gz -C $(CRIDIR) cri-containerd.DEPRECATED.txt etc usr opt\nendif\n\ncri-release: releases/$(CRIRELEASE).tar.gz ## Deprecated (only kept for external CI)\n\t@echo \"$(WHALE) $@\"\n\t@cd releases && sha256sum $(CRIRELEASE).tar.gz >$(CRIRELEASE).tar.gz.sha256sum && ln -sf $(CRIRELEASE).tar.gz cri-containerd.tar.gz\n\ncri-cni-release: releases/$(CRICNIRELEASE).tar.gz ## Deprecated (only kept for external CI)\n\t@echo \"$(WHALE) $@\"\n\t@cd releases && sha256sum $(CRICNIRELEASE).tar.gz >$(CRICNIRELEASE).tar.gz.sha256sum && ln -sf $(CRICNIRELEASE).tar.gz cri-cni-containerd.tar.gz\n\nclean: ## clean up binaries\n\t@echo \"$(WHALE) $@\"\n\t@rm -f $(BINARIES)\n\t@rm -f releases/*.tar.gz*\n\t@rm -rf $(OUTPUTDIR)\n\t@rm -rf bin/cri-integration.test\n\nclean-test: ## clean up debris from previously failed tests\n\t@echo \"$(WHALE) $@\"\n\t$(eval containers=$(shell find /run/containerd/runc -mindepth 2 -maxdepth 3  -type d -exec basename {} \\;))\n\t$(shell pidof containerd runc | xargs -r -n 1 kill -9)\n\t@( for container in $(containers); do \\\n\t    grep $$container /proc/self/mountinfo | while read -r mountpoint; do \\\n\t\tumount $$(echo $$mountpoint | awk '{print $$5}'); \\\n\t    done; \\\n\t    find /sys/fs/cgroup -name $$container -print0 | xargs -r -0 rmdir; \\\n\tdone )\n\t@rm -rf /run/containerd/runc/*\n\t@rm -rf /run/containerd/fifo/*\n\t@rm -rf /run/containerd-test/*\n\t@rm -rf bin/cri-integration.test\n\t@rm -rf bin/cni-bridge-fp\n\t@rm -rf bin/containerd-shim-runc-fp-v1\n\ninstall: ## install binaries\n\t@echo \"$(WHALE) $@ $(BINARIES)\"\n\t@$(INSTALL) -d $(DESTDIR)$(BINDIR)\n\t@$(INSTALL) $(BINARIES) $(DESTDIR)$(BINDIR)\n\nuninstall:\n\t@echo \"$(WHALE) $@\"\n\t@rm -f $(addprefix $(DESTDIR)$(BINDIR)/,$(notdir $(BINARIES)))\n\nifeq ($(GOOS),windows)\ninstall-deps:\n\tscript/setup/install-critools\n\tscript/setup/install-cni-windows\nelse\ninstall-deps: ## install cri dependencies\n\tscript/setup/install-seccomp\n\tscript/setup/install-runc\n\tscript/setup/install-critools\n\tscript/setup/install-cni\nendif\n\ncoverage: ## generate coverprofiles from the unit tests, except tests that require root\n\t@echo \"$(WHALE) $@\"\n\t@rm -f coverage.txt\n\t@$(GO) test -i ${TESTFLAGS} ${PACKAGES} 2> /dev/null\n\t@( for pkg in ${PACKAGES}; do \\\n\t\t$(GO) test ${TESTFLAGS} \\\n\t\t\t-cover \\\n\t\t\t-coverprofile=profile.out \\\n\t\t\t-covermode=atomic $$pkg || exit; \\\n\t\tif [ -f profile.out ]; then \\\n\t\t\tcat profile.out >> coverage.txt; \\\n\t\t\trm profile.out; \\\n\t\tfi; \\\n\tdone )\n\nroot-coverage: ## generate coverage profiles for unit tests that require root\n\t@echo \"$(WHALE) $@\"\n\t@$(GO) test -i ${TESTFLAGS} ${TEST_REQUIRES_ROOT_PACKAGES} 2> /dev/null\n\t@( for pkg in ${TEST_REQUIRES_ROOT_PACKAGES}; do \\\n\t\t$(GO) test ${TESTFLAGS} \\\n\t\t\t-cover \\\n\t\t\t-coverprofile=profile.out \\\n\t\t\t-covermode=atomic $$pkg -test.root || exit; \\\n\t\tif [ -f profile.out ]; then \\\n\t\t\tcat profile.out >> coverage.txt; \\\n\t\t\trm profile.out; \\\n\t\tfi; \\\n\tdone )\n\nremove-replace:\n\t@echo \"$(WHALE) $@\"\n\t@$(GO) mod edit -dropreplace=github.com/containerd/containerd/api\n\nvendor: ## ensure all the go.mod/go.sum files are up-to-date including vendor/ directory\n\t@echo \"$(WHALE) $@\"\n\t@$(GO) mod tidy\n\t@$(GO) mod vendor\n\t@$(GO) mod verify\n\t@(cd ${ROOTDIR}/api && ${GO} mod tidy)\n\nverify-vendor: ## verify if all the go.mod/go.sum files are up-to-date\n\t@echo \"$(WHALE) $@\"\n\t$(eval TMPDIR := $(shell mktemp -d))\n\t@cp -R ${ROOTDIR} ${TMPDIR}\n\t@(cd ${TMPDIR}/containerd && ${GO} mod tidy)\n\t@(cd ${TMPDIR}/containerd && ${GO} mod vendor)\n\t@(cd ${TMPDIR}/containerd && ${GO} mod verify)\n\t@(cd ${TMPDIR}/containerd/api && ${GO} mod tidy)\n\t@diff -r -u -q ${ROOTDIR} ${TMPDIR}/containerd\n\t@rm -rf ${TMPDIR}\n\nclean-vendor: remove-replace vendor\n\n\nhelp: ## this help\n\t@awk 'BEGIN {FS = \":.*?## \"} /^[a-zA-Z_-]+:.*?## / {printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$2}' $(MAKEFILE_LIST) | sort\n"
        },
        {
          "name": "Makefile.darwin",
          "type": "blob",
          "size": 0.66796875,
          "content": "#   Copyright The containerd Authors.\n\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n\n#       http://www.apache.org/licenses/LICENSE-2.0\n\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n\n\n# amd64 supports go test -race\nifeq ($(GOARCH),amd64)\n\tTESTFLAGS_RACE= -race\nendif\n"
        },
        {
          "name": "Makefile.freebsd",
          "type": "blob",
          "size": 0.6953125,
          "content": "#   Copyright The containerd Authors.\n\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n\n#       http://www.apache.org/licenses/LICENSE-2.0\n\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n\n\n#freebsd specific settings\n\n# amd64 supports go test -race\nifeq ($(GOARCH),amd64)\n\tTESTFLAGS_RACE= -race\nendif\n"
        },
        {
          "name": "Makefile.linux",
          "type": "blob",
          "size": 0.955078125,
          "content": "#   Copyright The containerd Authors.\n\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n\n#       http://www.apache.org/licenses/LICENSE-2.0\n\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n\n\n#linux specific settings\nWHALE=\"+\"\nONI=\"-\"\nCOMMANDS += containerd-shim-runc-v2\n\n# check GOOS for cross compile builds\nifeq ($(GOOS),linux)\n  ifneq ($(GOARCH),$(filter $(GOARCH),mips mipsle mips64 mips64le ppc64))\n    ifeq ($(STATIC),)\n\t    GO_GCFLAGS += -buildmode=pie\n    endif\n  endif\nendif\n\n# amd64 supports go test -race\nifeq ($(GOARCH),amd64)\n\tTESTFLAGS_RACE= -race\nendif\n"
        },
        {
          "name": "Makefile.windows",
          "type": "blob",
          "size": 0.943359375,
          "content": "#   Copyright The containerd Authors.\n\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n\n#       http://www.apache.org/licenses/LICENSE-2.0\n\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n\n\n#Windows specific settings.\nWHALE = \"+\"\nONI = \"-\"\n\n# amd64 supports go test -race\nifeq ($(GOARCH),amd64)\n\tTESTFLAGS_RACE= -race\nendif\n\nWINDOWS_SHIM=bin/containerd-shim-runhcs-v1.exe\nBINARIES := $(addsuffix .exe,$(BINARIES)) $(WINDOWS_SHIM)\n\n$(WINDOWS_SHIM): script/setup/install-runhcs-shim go.mod\n\tDESTDIR=$(CURDIR)/bin $<\n\nbin/%.exe: cmd/% FORCE\n\t$(BUILD_BINARY)\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.5068359375,
          "content": "Docker\nCopyright 2012-2015 Docker, Inc.\n\nThis product includes software developed at Docker, Inc. (https://www.docker.com).\n\nThe following is courtesy of our legal counsel:\n\n\nUse and transfer of Docker may be subject to certain restrictions by the\nUnited States and other governments.\nIt is your responsibility to ensure that your use and/or transfer does not\nviolate applicable laws.\n\nFor more information, please see https://www.bis.doc.gov\n\nSee also https://www.apache.org/dev/crypto.html and/or seek legal counsel.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.37109375,
          "content": "![containerd banner light mode](https://raw.githubusercontent.com/cncf/artwork/master/projects/containerd/horizontal/color/containerd-horizontal-color.png#gh-light-mode-only)\n![containerd banner dark mode](https://raw.githubusercontent.com/cncf/artwork/master/projects/containerd/horizontal/white/containerd-horizontal-white.png#gh-dark-mode-only)\n\n[![PkgGoDev](https://pkg.go.dev/badge/github.com/containerd/containerd/v2)](https://pkg.go.dev/github.com/containerd/containerd/v2)\n[![Build Status](https://github.com/containerd/containerd/actions/workflows/ci.yml/badge.svg?event=merge_group)](https://github.com/containerd/containerd/actions?query=workflow%3ACI+event%3Amerge_group)\n[![Nightlies](https://github.com/containerd/containerd/workflows/Nightly/badge.svg)](https://github.com/containerd/containerd/actions?query=workflow%3ANightly)\n[![Go Report Card](https://goreportcard.com/badge/github.com/containerd/containerd/v2)](https://goreportcard.com/report/github.com/containerd/containerd/v2)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/1271/badge)](https://bestpractices.coreinfrastructure.org/projects/1271)\n[![OpenSSF Scorecard](https://api.scorecard.dev/projects/github.com/containerd/containerd/badge)](https://scorecard.dev/viewer/?uri=github.com/containerd/containerd)\n[![Check Links](https://github.com/containerd/containerd/actions/workflows/links.yml/badge.svg)](https://github.com/containerd/containerd/actions/workflows/links.yml)\n\ncontainerd is an industry-standard container runtime with an emphasis on simplicity, robustness, and portability. It is available as a daemon for Linux and Windows, which can manage the complete container lifecycle of its host system: image transfer and storage, container execution and supervision, low-level storage and network attachments, etc.\n\ncontainerd is a member of CNCF with ['graduated'](https://landscape.cncf.io/?selected=containerd) status.\n\ncontainerd is designed to be embedded into a larger system, rather than being used directly by developers or end-users.\n\n![architecture](docs/historical/design/architecture.png)\n\n## Announcements\n\n### containerd v2.0 is now released!\nSee [`docs/containerd-2.0.md`](docs/containerd-2.0.md).\n\n### Now Recruiting\n\nWe are a large inclusive OSS project that is welcoming help of any kind shape or form:\n* Documentation help is needed to make the product easier to consume and extend.\n* We need OSS community outreach/organizing help to get the word out; manage\nand create messaging and educational content; and help with social media, community forums/groups, and google groups.\n* We are actively inviting new [security advisors](https://github.com/containerd/project/blob/main/GOVERNANCE.md#security-advisors) to join the team.\n* New subprojects are being created, core and non-core that could use additional development help.\n* Each of the [containerd projects](https://github.com/containerd) has a list of issues currently being worked on or that need help resolving.\n  - If the issue has not already been assigned to someone or has not made recent progress, and you are interested, please inquire.\n  - If you are interested in starting with a smaller/beginner-level issue, look for issues with an `exp/beginner` tag, for example [containerd/containerd beginner issues.](https://github.com/containerd/containerd/issues?q=is%3Aissue+is%3Aopen+label%3Aexp%2Fbeginner)\n\n## Getting Started\n\nSee our documentation on [containerd.io](https://containerd.io):\n* [for ops and admins](docs/ops.md)\n* [namespaces](docs/namespaces.md)\n* [client options](docs/client-opts.md)\n\nTo get started contributing to containerd, see [CONTRIBUTING](CONTRIBUTING.md).\n\nIf you are interested in trying out containerd see our example at [Getting Started](docs/getting-started.md).\n\n## Nightly builds\n\nThere are nightly builds available for download [here](https://github.com/containerd/containerd/actions?query=workflow%3ANightly).\nBinaries are generated from `main` branch every night for `Linux` and `Windows`.\n\nPlease be aware: nightly builds might have critical bugs, it's not recommended for use in production and no support provided.\n\n## Kubernetes (k8s) CI Dashboard Group\n\nThe [k8s CI dashboard group for containerd](https://testgrid.k8s.io/containerd) contains test results regarding\nthe health of kubernetes when run against main and a number of containerd release branches.\n\n- [containerd-periodics](https://testgrid.k8s.io/containerd-periodic)\n\n## Runtime Requirements\n\nRuntime requirements for containerd are very minimal. Most interactions with\nthe Linux and Windows container feature sets are handled via [runc](https://github.com/opencontainers/runc) and/or\nOS-specific libraries (e.g. [hcsshim](https://github.com/Microsoft/hcsshim) for Microsoft).\nThe current required version of `runc` is described in [RUNC.md](docs/RUNC.md).\n\nThere are specific features\nused by containerd core code and snapshotters that will require a minimum kernel\nversion on Linux. With the understood caveat of distro kernel versioning, a\nreasonable starting point for Linux is a minimum 4.x kernel version.\n\nThe overlay filesystem snapshotter, used by default, uses features that were\nfinalized in the 4.x kernel series. If you choose to use btrfs, there may\nbe more flexibility in kernel version (minimum recommended is 3.18), but will\nrequire the btrfs kernel module and btrfs tools to be installed on your Linux\ndistribution.\n\nTo use Linux checkpoint and restore features, you will need `criu` installed on\nyour system. See more details in [Checkpoint and Restore](#checkpoint-and-restore).\n\nBuild requirements for developers are listed in [BUILDING](BUILDING.md).\n\n\n## Supported Registries\n\nAny registry which is compliant with the [OCI Distribution Specification](https://github.com/opencontainers/distribution-spec)\nis supported by containerd.\n\nFor configuring registries, see [registry host configuration documentation](docs/hosts.md)\n\n## Features\n\nFor a detailed overview of containerd's core concepts and the features it supports,\nplease refer to the [FEATURES.MD](./docs/features.md) document.\n\n### Releases and API Stability\n\nPlease see [RELEASES.md](RELEASES.md) for details on versioning and stability\nof containerd components.\n\nDownloadable 64-bit Intel/AMD binaries of all official releases are available on\nour [releases page](https://github.com/containerd/containerd/releases).\n\nFor other architectures and distribution support, you will find that many\nLinux distributions package their own containerd and provide it across several\narchitectures, such as [Canonical's Ubuntu packaging](https://launchpad.net/ubuntu/bionic/+package/containerd).\n\n#### Enabling command auto-completion\n\nStarting with containerd 1.4, the urfave client feature for auto-creation of bash and zsh\nautocompletion data is enabled. To use the autocomplete feature in a bash shell for example, source\nthe autocomplete/ctr file in your `.bashrc`, or manually like:\n\n```\n$ source ./contrib/autocomplete/ctr\n```\n\n#### Distribution of `ctr` autocomplete for bash and zsh\n\nFor bash, copy the `contrib/autocomplete/ctr` script into\n`/etc/bash_completion.d/` and rename it to `ctr`. The `zsh_autocomplete`\nfile is also available and can be used similarly for zsh users.\n\nProvide documentation to users to `source` this file into their shell if\nyou don't place the autocomplete file in a location where it is automatically\nloaded for the user's shell environment.\n\n### CRI\n\n`cri` is a [containerd](https://containerd.io/) plugin implementation of the Kubernetes [container runtime interface (CRI)](https://github.com/kubernetes/cri-api/blob/master/pkg/apis/runtime/v1/api.proto). With it, you are able to use containerd as the container runtime for a Kubernetes cluster.\n\n![cri](./docs/cri/cri.png)\n\n#### CRI Status\n\n`cri` is a native plugin of containerd. Since containerd 1.1, the cri plugin is built into the release binaries and enabled by default.\n\nThe `cri` plugin has reached GA status, representing that it is:\n* Feature complete\n* Works with Kubernetes 1.10 and above\n* Passes all [CRI validation tests](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-node/cri-validation.md).\n* Passes all [node e2e tests](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-node/e2e-node-tests.md).\n* Passes all [e2e tests](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-testing/e2e-tests.md).\n\nSee results on the containerd k8s [test dashboard](https://testgrid.k8s.io/containerd)\n\n#### Validating Your `cri` Setup\nA Kubernetes incubator project, [cri-tools](https://github.com/kubernetes-sigs/cri-tools), includes programs for exercising CRI implementations. More importantly, cri-tools includes the program `critest` which is used for running [CRI Validation Testing](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-node/cri-validation.md).\n\n#### CRI Guides\n* [Installing with Ansible and Kubeadm](contrib/ansible/README.md)\n* [For Non-Ansible Users, Preforming a Custom Installation Using the Release Tarball and Kubeadm](docs/getting-started.md)\n* [CRI Plugin Testing Guide](./docs/cri/testing.md)\n* [Debugging Pods, Containers, and Images with `crictl`](./docs/cri/crictl.md)\n* [Configuring `cri` Plugins](./docs/cri/config.md)\n* [Configuring containerd](https://github.com/containerd/containerd/blob/main/docs/man/containerd-config.8.md)\n\n### Communication\n\nFor async communication and long-running discussions please use issues and pull requests on the GitHub repo.\nThis will be the best place to discuss design and implementation.\n\nFor sync communication catch us in the `#containerd` and `#containerd-dev` Slack channels on Cloud Native Computing Foundation's (CNCF) Slack - `cloud-native.slack.com`. Everyone is welcome to join and chat. [Get Invite to CNCF Slack.](https://slack.cncf.io)\n\nJoin our next community meeting hosted on Zoom. The schedule is posted on the [CNCF Calendar](https://www.cncf.io/calendar/) (search 'containerd' to filter).\n\n### Security audit\n\nSecurity audits for the containerd project are hosted on our website. Please see the [security page at containerd.io](https://containerd.io/security/) for more information.\n\n### Reporting security issues\n\nPlease follow the instructions at [containerd/project](https://github.com/containerd/project/blob/main/SECURITY.md#reporting-a-vulnerability)\n\n## Licenses\n\nThe containerd codebase is released under the [Apache 2.0 license](LICENSE).\nThe README.md file and files in the \"docs\" folder are licensed under the\nCreative Commons Attribution 4.0 International License. You may obtain a\ncopy of the license, titled CC-BY-4.0, at http://creativecommons.org/licenses/by/4.0/.\n\n## Project details\n\n**containerd** is the primary open source project within the broader containerd GitHub organization.\nHowever, all projects within the repo have common maintainership, governance, and contributing\nguidelines which are stored in a `project` repository commonly for all containerd projects.\n\nPlease find all these core project documents, including the:\n * [Project governance](https://github.com/containerd/project/blob/main/GOVERNANCE.md),\n * [Maintainers](https://github.com/containerd/project/blob/main/MAINTAINERS),\n * and [Contributing guidelines](https://github.com/containerd/project/blob/main/CONTRIBUTING.md)\n\ninformation in our [`containerd/project`](https://github.com/containerd/project) repository.\n\n## Adoption\n\nInterested to see who is using containerd? Are you using containerd in a project?\nPlease add yourself via pull request to our [ADOPTERS.md](./ADOPTERS.md) file.\n"
        },
        {
          "name": "RELEASES.md",
          "type": "blob",
          "size": 30.81640625,
          "content": "# Versioning and Release\n\nThis document details the versioning and release plan for containerd. Stability\nis a top goal for this project, and we hope that this document and the processes\nit entails will help to achieve that. It covers the release process, versioning\nnumbering, backporting, API stability and support horizons.\n\nIf you rely on containerd, it would be good to spend time understanding the\nareas of the API that are and are not supported and how they impact your\nproject in the future.\n\nThis document will be considered a living document. Supported timelines,\nbackport targets and API stability guarantees will be updated here as they\nchange.\n\nIf there is something that you require or this document leaves out, please\nreach out by [filing an issue](https://github.com/containerd/containerd/issues).\n\n## Releases\n\nReleases of containerd will be versioned using dotted triples, similar to\n[Semantic Version](http://semver.org/). For the purposes of this document, we\nwill refer to the respective components of this triple as\n`<major>.<minor>.<patch>`. The version number may have additional information,\nsuch as alpha, beta and release candidate qualifications. Such releases will be\nconsidered \"pre-releases\".\n\n### Major and Minor Releases\n\nMajor and minor releases of containerd will be made from main. Releases of\ncontainerd will be marked with GPG signed tags and announced at\nhttps://github.com/containerd/containerd/releases. The tag will be of the\nformat `v<major>.<minor>.<patch>` and should be made with the command `git tag\n-s v<major>.<minor>.<patch>`.\n\nAfter a minor release, a branch will be created, with the format\n`release/<major>.<minor>` from the minor tag. All further patch releases will\nbe done from that branch. For example, once we release `v1.0.0`, a branch\n`release/1.0` will be created from that tag. All future patch releases will be\ndone against that branch.\n\n### Pre-releases\n\nPre-releases, such as alphas, betas and release candidates will be conducted\nfrom their source branch. For major and minor releases, these releases will be\ndone from main. For patch releases, these pre-releases should be done within\nthe corresponding release branch.\n\nWhile pre-releases are done to assist in the stabilization process, no\nguarantees are provided.\n\n### Upgrade Path\n\nThe upgrade path for containerd is such that the 0.0.x patch releases are\nalways backward compatible with its major and minor version. Minor (0.x.0)\nversion will always be compatible with the previous minor release. i.e. 1.2.0\nis backwards compatible with 1.1.0 and 1.1.0 is compatible with 1.0.0. There is\nno compatibility guarantees for upgrades that span multiple, _minor_ releases.\nFor example, 1.0.0 to 1.2.0 is not supported. One should first upgrade to 1.1,\nthen 1.2.\n\nThere are no compatibility guarantees with upgrades to _major_ versions. For\nexample, upgrading from 1.0.0 to 2.0.0 may require resources to migrated or\nintegrations to change. Each major version will be supported for at least 1\nyear with bug fixes and security patches.\n\n### Next Release\n\nThe activity for the next release will be tracked in the\n[milestones](https://github.com/containerd/containerd/milestones). If your\nissue or PR is not present in a milestone, please reach out to the maintainers\nto create the milestone or add an issue or PR to an existing milestone.\n\n### Support Horizon\n\nSupport horizons will be defined corresponding to a release branch, identified\nby `<major>.<minor>`. Release branches will be in one of several states:\n\n- __*Next*__: The next planned release branch.\n- __*Active*__: The release is a stable branch which is currently supported and accepting patches.\n- __*Extended*__: The release branch is only accepting security patches.\n- __*LTS*__: The release is a long term stable branch which is currently supported and accepting patches.\n- __*End of Life*__: The release branch is no longer supported and no new patches will be accepted.\n\nReleases will be supported at least one year after a _minor_ release. This means that\nwe will accept bug reports and backports to release branches until the end of\nlife date. If no new _minor_ release has been made, that release will be\nconsidered supported until 6 months after the next _minor_ is released or one year,\nwhichever is longer. Additionally, releases may have an extended security support\nperiod after the end of the active period to accept security backports. This\ntimeframe will be decided by maintainers before the end of the active status.\n\nLong term stable (_LTS_) releases will be supported for at least three years after\ntheir initial _minor_ release. These branches will accept bug reports and\nbackports until the end of life date. They may also accept a wider range of\npatches than non-_LTS_ releases to support the longer term maintainability of the\nbranch, including library dependency, toolchain (including Go) and other version updates\nwhich are needed to ensure each release is built with fully supported dependencies and\nremains usable by containerd clients. _LTS_ releases can also accept feature backports\nto support new Kubernetes releases. The default action has to be reject it though,\nfor long-term stability. This is still negotiable when the feature is a hard dependency\nfor a new release of Kubernetes. There should be at least a 6-month overlap between\nthe end of life of an _LTS_ release and the initial release of a new _LTS_ release.\nUp to 6 months before the announced end of life of an _LTS_ branch, the branch may\nconvert to a regular _Active_ release with stricter backport criteria.\n\nThe current state is available in the following tables:\n\n| Release                                                              | Status        | Start              | End of Life                                             |\n| ---------                                                            | ------------- | ------------------ | -------------------                                     |\n| [0.0](https://github.com/containerd/containerd/releases/tag/0.0.5)   | End of Life   | Dec 4, 2015        | -                                                       |\n| [0.1](https://github.com/containerd/containerd/releases/tag/v0.1.0)  | End of Life   | Mar 21, 2016       | -                                                       |\n| [0.2](https://github.com/containerd/containerd/tree/v0.2.x)          | End of Life   | Apr 21, 2016       | December 5, 2017                                        |\n| [1.0](https://github.com/containerd/containerd/releases/tag/v1.0.3)  | End of Life   | December 5, 2017   | December 5, 2018                                        |\n| [1.1](https://github.com/containerd/containerd/releases/tag/v1.1.8)  | End of Life   | April 23, 2018     | October 23, 2019                                        |\n| [1.2](https://github.com/containerd/containerd/releases/tag/v1.2.13) | End of Life   | October 24, 2018   | October 15, 2020                                        |\n| [1.3](https://github.com/containerd/containerd/releases/tag/v1.3.10) | End of Life   | September 26, 2019 | March 4, 2021                                           |\n| [1.4](https://github.com/containerd/containerd/releases/tag/v1.4.13) | End of Life   | August 17, 2020    | March 3, 2022                                           |\n| [1.5](https://github.com/containerd/containerd/releases/tag/v1.5.18) | End of Life   | May 3, 2021        | February 28, 2023                                       |\n| [1.6](https://github.com/containerd/containerd/releases/tag/v1.6.36) | LTS           | February 15, 2022  | next LTS + 6 months                                     |\n| [1.7](https://github.com/containerd/containerd/releases/tag/v1.7.23) | Active        | March 10, 2023     | active(May 5, 2025), extended(EOL of 1.6)               |\n| [2.0](https://github.com/containerd/containerd/releases/tag/v2.0.0)  | Active        | November 5, 2024   | max(November 5, 2025 or release of 2.1 + 6 months)      |\n| [2.1](https://github.com/containerd/containerd/milestone/48)         | Next          | TBD                | TBD                                                     |\n\n> **_NOTE_** containerd v1.7 will end of life at the same time as v1.6 LTS. Due to\n> [Minimal Version Selection](https://go.dev/ref/mod#minimal-version-selection) used\n> by Go modules, 1.7 must be supported until EOL of all 1.x releases. Once 1.7 is in\n> extended support, it will continue to accept security patches in addition to client\n> changes relevant for package importers using the 1.6 LTS daemon.\n\n### Kubernetes Support\n\nThe Kubernetes version matrix represents the versions of containerd which are\nrecommended for a Kubernetes release. Any actively supported version of\ncontainerd may receive patches to fix bugs encountered in any version of\nKubernetes, however, our recommendation is based on which versions have been\nthe most thoroughly tested. See the [Kubernetes test grid](https://testgrid.k8s.io/sig-node-containerd)\nfor the list of actively tested versions. Kubernetes only supports n-3 minor\nrelease versions and containerd will ensure there is always a supported version\nof containerd for every supported version of Kubernetes.\n\n| Kubernetes Version | containerd Version            | CRI Version     |\n|--------------------|-------------------------------|-----------------|\n| 1.29               | 1.7.11+, 1.6.27+              | v1              |\n| 1.30               | 2.0.0+, 1.7.13+, 1.6.28+      | v1              |\n| 1.31               | 2.0.0+, 1.7.20+, 1.6.34+      | v1              |\n\nDeprecated containerd and kubernetes versions\n\n| Containerd Version       | Kubernetes Version | CRI Version                          |\n|--------------------------|--------------------|--------------------------------------|\n| v1.0 (w/ cri-containerd) | 1.7, 1.8, 1.9      | v1alpha1                             |\n| v1.1                     | 1.10+              | v1alpha2                             |\n| v1.2                     | 1.10+              | v1alpha2                             |\n| v1.3                     | 1.12+              | v1alpha2                             |\n| v1.4                     | 1.19+              | v1alpha2                             |\n| v1.5                     | 1.20+              | v1 (1.23+), v1alpha2 (until 1.25) ** |\n| v1.6.15+, v1.7.0+        | 1.26+              | v1                                   |\n\n** Note: containerd v1.6.*, and v1.7.* support CRI v1 and v1alpha2 through EOL as those releases continue to support older versions of k8s, cloud providers, and other clients using CRI v1alpha2. CRI v1alpha2 is deprecated in v1.7 and will be removed in containerd v2.0.\n\n### Backporting\n\nBackports in containerd are community driven. As maintainers, we'll try to\nensure that sensible bugfixes make it into _active_ release, but our main focus\nwill be features for the next _minor_ or _major_ release. For the most part,\nthis process is straightforward, and we are here to help make it as smooth as\npossible.\n\nIf there are important fixes that need to be backported, please let us know in\none of three ways:\n\n1. Open an issue.\n2. Open a PR with cherry-picked change from main.\n3. Open a PR with a ported fix.\n\n__If you are reporting a security issue:__\n\nPlease follow the instructions at [containerd/project](https://github.com/containerd/project/blob/main/SECURITY.md#reporting-a-vulnerability)\n\nRemember that backported PRs must follow the versioning guidelines from this document.\n\nAny release that is \"active\" can accept backports. Opening a backport PR is\nfairly straightforward. The steps differ depending on whether you are pulling\na fix from main or need to draft a new commit specific to a particular\nbranch.\n\nTo cherry-pick a straightforward commit from main, simply use the cherry-pick\nprocess:\n\n1. Pick the branch to which you want backported, usually in the format\n   `release/<major>.<minor>`. The following will create a branch you can\n   use to open a PR:\n\n\t```console\n\t$ git checkout -b my-backport-branch release/<major>.<minor>.\n\t```\n\n2. Find the commit you want backported.\n3. Apply it to the release branch:\n\n\t```console\n\t$ git cherry-pick -xsS <commit>\n\t```\n\n   If all of the work from a particular PR/set of PRs is wanted,\n   cherry-pick the individual commits instead of the merge commit.\n   Take #8624 for example, 82ec62b is favored over 9e834e7.\n\n   (Optional) If other commits exist in the main branch which are related\n   to the cherry-picked commit; eg: fixes to the main PR. It is recommended\n   to cherry-pick those commits also into this same `my-backport-branch`.\n4. Push the branch and open up a PR against the _release branch_:\n\n\t```\n\t$ git push -u stevvooe my-backport-branch\n\t```\n\n   Make sure to replace `stevvooe` with whatever fork you are using to open\n   the PR. When you open the PR, make sure to switch `main` with whatever\n   release branch you are targeting with the fix. Make sure the PR title has\n   `[<release branch>]` prefixed. e.g.:\n\n   ```\n   [release/1.4] Fix foo in bar\n   ```\n\nIf there is no existing fix in main, you should first fix the bug in main,\nor ask us a maintainer or contributor to do it via an issue. Once that PR is\ncompleted, open a PR using the process above.\n\nOnly when the bug is not seen in main and must be made for the specific\nrelease branch should you open a PR with new code.\n\n## Public API Stability\n\nThe following table provides an overview of the components covered by\ncontainerd versions:\n\n\n| Component        | Status   | Stabilized Version | Links         |\n|------------------|----------|--------------------|---------------|\n| GRPC API         | Stable   | 1.0                | [gRPC API](#grpc-api) |\n| Metrics API      | Stable   | 1.0                | - |\n| Runtime Shim API | Stable   | 1.2                | - |\n| Daemon Config    | Stable   | 1.0                | - |\n| CRI GRPC API     | Stable   | 1.6 (_CRI v1_)     | [cri-api](https://github.com/kubernetes/cri-api/tree/master/pkg/apis/runtime/v1) |\n| Go client API    | Stable   | 2.0                | [godoc](https://pkg.go.dev/github.com/containerd/containerd/v2/client) |\n| `ctr` tool       | Unstable | Out of scope       | - |\n\nFrom the version stated in the above table, that component must adhere to the\nstability constraints expected in release versions.\n\nUnless explicitly stated here, components that are called out as unstable or\nnot covered may change in a future minor version. Breaking changes to\n\"unstable\" components will be avoided in patch versions.\n\nGo client API stability includes the `client`, `defaults` and `version` package\nas well as all packages under `pkg`, `core`, `api` and `protobuf`.\nAll packages under `cmd`, `contrib`, `integration`, and `internal` are not\nconsidered part of the stable client API.\n\n### GRPC API\n\nThe primary product of containerd is the GRPC API. As of the 1.0.0 release, the\nGRPC API will not have any backwards incompatible changes without a _major_\nversion jump.\n\nTo ensure compatibility, we have collected the entire GRPC API symbol set into\na single file. At each _minor_ release of containerd, we will move the current\n`next.pb.txt` file to a file named for the minor version, such as `1.0.pb.txt`,\nenumerating the support services and messages.\n\nNote that new services may be added in _minor_ releases. New service methods\nand new fields on messages may be added if they are optional.\n\n`*.pb.txt` files are generated at each API release. They prevent unintentional changes\nto the API by having a diff that the CI can run. These files are not intended to be\nconsumed or used by clients.\n\nAs of containerd 2.0, the API version diverges from the main containerd version.\nWhile containerd 2.0 is a _major_ version jump for containerd, the API will remain\non 1.x to remain backwards compatible with prior releases and existing clients.\nThe 2.0 release adds the API to a separate Go module which can remain as the\n`github.com/containerd/containerd/api` Go package and imported separately from the\nrest of containerd.\n\nThe API minor version will continue to be incremented for each major and minor\nversion release of containerd. However, the API is tagged directly out of the\nmain branch with the minor version incrementing earlier in the next release cycle\nrather than at the end. This means that after the containerd 2.0 release, the next\nAPI change is tagged as `api/v1.9.0` prior to any containerd 2.1 release. The\nlatest API version should be backported to all supported versions and patch\nreleases for prior API versions should be avoided if possible.\n\n\n| Containerd Version | API Version at Release |\n|--------------------|------------------------|\n| v1.0               | 1.0                    |\n| v1.1               | 1.1                    |\n| v1.2               | 1.2                    |\n| v1.3               | 1.3                    |\n| v1.4               | 1.4                    |\n| v1.5               | 1.5                    |\n| v1.6               | 1.6                    |\n| v1.7               | 1.7                    |\n| v2.0               | 1.8                    |\n| next               | 1.9                    |\n\n\n### Metrics API\n\nThe metrics API that outputs prometheus style metrics will be versioned independently,\nprefixed with the API version. i.e. `/v1/metrics`, `/v2/metrics`.\n\nThe metrics API version will be incremented when breaking changes are made to the prometheus\noutput. New metrics can be added to the output in a backwards compatible manner without\nbumping the API version.\n\n### Plugins API\n\ncontainerd is based on a modular design where plugins are implemented to provide the core functionality.\nPlugins implemented in tree are supported by the containerd community unless explicitly specified as non-stable.\nOut of tree plugins are not supported by the containerd maintainers.\n\nCurrently, the Windows runtime and snapshot plugins are not stable and not supported.\nPlease refer to the GitHub milestones for Windows support in a future release.\n\n#### Error Codes\n\nError codes will not change in a patch release, unless a missing error code\ncauses a blocking bug. Error codes of type \"unknown\" may change to more\nspecific types in the future. Any error code that is not \"unknown\" that is\ncurrently returned by a service will not change without a _major_ release or a\nnew version of the service.\n\nIf you find that an error code that is required by your application is not\nwell-documented in the protobuf service description or tested explicitly,\nplease file an issue and we will clarify.\n\n#### Opaque Fields\n\nUnless explicitly stated, the formats of certain fields may not be covered by\nthis guarantee and should be treated opaquely. For example, don't rely on the\nformat details of a URL field unless we explicitly say that the field will\nfollow that format.\n\n### Go client API\n\nAs of containerd 2.0, the Go client API documented in\n[godoc](https://godoc.org/github.com/containerd/containerd/v2/client) is stable.\nNote that because the Go client interfaces with the GRPC API, clients building on top\nof the Go client should remain compatible with future server releases implementing the\nsame major GRPC API series. For backwards compatability and as a general rule of thumb,\nit is the client's responsibility to handle not implemented errors returned by the containerd daemon.\n\nAny changes to the Go client API should be detectable at compile time, so upgrading will\nbe a matter of fixing compilation errors and moving from there.\n\n### CRI GRPC API\n\nThe CRI (Container Runtime Interface) GRPC API is used by a Kubernetes kubelet\nto communicate with a container runtime. This interface is used to manage\ncontainer lifecycles and container images. Currently, this API is under\ndevelopment and unstable across Kubernetes releases. Each Kubernetes release\nonly supports a single version of CRI and the CRI plugin only implements a\nsingle version of CRI.\n\nEach _minor_ release will support one version of CRI and at least one version\nof Kubernetes. Once this API is stable, a _minor_ will be compatible with any\nversion of Kubernetes which supports that version of CRI.\n\n### `ctr` tool\n\nThe `ctr` tool provides the ability to introspect and understand the containerd\nAPI. It is not considered a primary offering of the project and is unsupported in\nthat sense. While we understand its value as a debug tool, it may be completely\nrefactored or have breaking changes in _minor_ releases.\n\nTargeting `ctr` for feature additions reflects a misunderstanding of the containerd\narchitecture. Feature addition should focus on the client Go API and additions to\n`ctr` may or may not be accepted at the discretion of the maintainers.\n\nWe will do our best to not break compatibility in the tool in _patch_ releases.\n\n### Daemon Configuration\n\nThe daemon's configuration file, commonly located in `/etc/containerd/config.toml`\nis versioned and backwards compatible.  The `version` field in the config\nfile specifies the config's version.  If no version number is specified inside\nthe config file then it is assumed to be a version `1` config and parsed as such.\nThe latest version is `version = 2`. The `main` branch is being prepared to support\nthe next config version `3`. The configuration is automatically migrated to the\nlatest version on each startup, leaving the configuration file unchanged. To avoid\nthe migration and optimize the daemon startup time, use `containerd config migrate`\nto output the configuration as the latest version. Version `1` is no longer deprecated\nand is supported by migration, however, it is recommended to use at least version `2`.\n\nMigrating a configuration to the latest version will limit the prior versions\nof containerd in which the configuration can be used. It is suggested not to\nmigrate your configuration file until you are confident you do not need to\nquickly rollback your containerd version. Use the table of configuration\nversions to containerd releases to know the minimum version of containerd for\neach configuration version.\n\n| Configuration Version | Minimum containerd version |\n|-----------------------|----------------------------|\n| 1                     | v1.0.0                     |\n| 2                     | v1.3.0                     |\n| 3                     | v2.0.0                     |\n\n### Not Covered\n\nAs a general rule, anything not mentioned in this document is not covered by\nthe stability guidelines and may change in any release. Explicitly, this\npertains to this non-exhaustive list of components:\n\n- File System layout\n- Storage formats\n- Snapshot formats\n\nBetween upgrades of subsequent, _minor_ versions, we may migrate these formats.\nAny outside processes relying on details of these file system layouts may break\nin that process. Container root file systems will be maintained on upgrade.\n\n### Exceptions\n\nWe may make exceptions in the interest of __security patches__. If a break is\nrequired, it will be communicated clearly and the solution will be considered\nagainst total impact.\n\n## Deprecated features\n\nThe deprecated features are shown in the following table:\n\n| Component                                                                        | Deprecation release | Target release for removal            | Recommendation                           |\n|----------------------------------------------------------------------------------|---------------------|---------------------------------------|------------------------------------------|\n| Runtime V1 API and implementation (`io.containerd.runtime.v1.linux`)             | containerd v1.4     | containerd v2.0 ✅                    | Use `io.containerd.runc.v2`              |\n| Runc V1 implementation of Runtime V2 (`io.containerd.runc.v1`)                   | containerd v1.4     | containerd v2.0 ✅                    | Use `io.containerd.runc.v2`              |\n| Built-in `aufs` snapshotter                                                      | containerd v1.5     | containerd v2.0 ✅                    | Use `overlayfs` snapshotter              |\n| Container label `containerd.io/restart.logpath`                                  | containerd v1.5     | containerd v2.0 ✅                    | Use `containerd.io/restart.loguri` label |\n| `cri-containerd-*.tar.gz` release bundles                                        | containerd v1.6     | containerd v2.0 ✅                    | Use `containerd-*.tar.gz` bundles        |\n| Pulling Schema 1 images (`application/vnd.docker.distribution.manifest.v1+prettyjws`) | containerd v1.7     | containerd v2.1 (Disabled in v2.0 ✅) | Use Schema 2 or OCI images               |\n| CRI `v1alpha2`                                                                   | containerd v1.7     | containerd v2.0 ✅                    | Use CRI `v1`                             |\n| Legacy CRI implementation of podsandbox support                                  | containerd v2.0     | containerd v2.0 ✅                    |                                          |\n| Go-Plugin library (`*.so`) as containerd runtime plugin                          | containerd v2.0     | containerd v2.1                       | Use external plugins (proxy or binary)   |\n\n- Pulling Schema 1 images has been disabled in containerd v2.0, but it still can be enabled by setting an environment variable `CONTAINERD_ENABLE_DEPRECATED_PULL_SCHEMA_1_IMAGE=1`\n  until containerd v2.1. `ctr` users have to specify `--local` too (e.g., `ctr images pull --local`). Users of CRI clients (such as Kubernetes and `crictl`) have to specify this environment variable on the containerd daemon (usually in the systemd unit).\n\n### Deprecated config properties\nThe deprecated properties in [`config.toml`](./docs/cri/config.md) are shown in the following table:\n\n| Property Group                                                       | Property                     | Deprecation release | Target release for removal | Recommendation                                  |\n|----------------------------------------------------------------------|------------------------------|---------------------|----------------------------|-------------------------------------------------|\n|`[plugins.\"io.containerd.grpc.v1.cri\"]`                               | `systemd_cgroup`             | containerd v1.3     | containerd v2.0 ✅         | Use `SystemdCgroup` in runc options (see below) |\n|`[plugins.\"io.containerd.grpc.v1.cri\".containerd]`                    | `untrusted_workload_runtime` | containerd v1.2     | containerd v2.0 ✅         | Create `untrusted` runtime in `runtimes`        |\n|`[plugins.\"io.containerd.grpc.v1.cri\".containerd]`                    | `default_runtime`            | containerd v1.3     | containerd v2.0 ✅         | Use `default_runtime_name`                      |\n|`[plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.*]`         | `runtime_engine`             | containerd v1.3     | containerd v2.0 ✅         | Use runtime v2                                  |\n|`[plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.*]`         | `runtime_root`               | containerd v1.3     | containerd v2.0 ✅         | Use `options.Root`                              |\n|`[plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.*]`         | `disable_cgroup`             | -                   | containerd v2.0 ✅         | Use [cgroup v2 delegation](https://rootlesscontaine.rs/getting-started/common/cgroup2/) |\n|`[plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.*.options]` | `CriuPath`                   | containerd v1.7     | containerd v2.0 ✅         | Set `$PATH` to the `criu` binary                |\n|`[plugins.\"io.containerd.grpc.v1.cri\".registry]`                      | `auths`                      | containerd v1.3     | containerd v2.1            | Use [`ImagePullSecrets`](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/). See also [#8228](https://github.com/containerd/containerd/issues/8228). |\n|`[plugins.\"io.containerd.grpc.v1.cri\".registry]`                      | `configs`                    | containerd v1.5     | containerd v2.1            | Use [`config_path`](./docs/hosts.md)            |\n|`[plugins.\"io.containerd.grpc.v1.cri\".registry]`                      | `mirrors`                    | containerd v1.5     | containerd v2.1            | Use [`config_path`](./docs/hosts.md)            |\n|`[plugins.\"io.containerd.tracing.processor.v1.otlp\"]`                 | `endpoint`, `protocol`, `insecure` | containerd v1.6.29 | containerd v2.0       | Use [OTLP environment variables](https://opentelemetry.io/docs/specs/otel/protocol/exporter/), e.g. OTEL_EXPORTER_OTLP_TRACES_ENDPOINT, OTEL_EXPORTER_OTLP_PROTOCOL, OTEL_SDK_DISABLED    |\n|`[plugins.\"io.containerd.internal.v1.tracing\"]`                       | `service_name`, `sampling_ratio`   | containerd v1.6.29 | containerd v2.0       | Instead use [OTel environment variables](https://opentelemetry.io/docs/specs/otel/configuration/sdk-environment-variables/), e.g. OTEL_SERVICE_NAME, OTEL_TRACES_SAMPLER*  |\n\n\n> **Note**\n>\n> CNI Config Template (`plugins.\"io.containerd.grpc.v1.cri\".cni.conf_template`) was once deprecated in v1.7.0,\n> but its deprecation was cancelled in v1.7.3.\n\n<details><summary>Example: runc option <code>SystemdCgroup</code></summary><p>\n\n```toml\nversion = 2\n\n# OLD\n# [plugins.\"io.containerd.grpc.v1.cri\"]\n#   systemd_cgroup = true\n\n# NEW\n[plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc.options]\n  SystemdCgroup = true\n```\n\n</p></details>\n\n<details><summary>Example: runc option <code>Root</code></summary><p>\n\n```toml\nversion = 2\n\n# OLD\n# [plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc]\n#   runtime_root = \"/path/to/runc/root\"\n\n# NEW\n[plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc.options]\n  Root = \"/path/to/runc/root\"\n```\n\n</p></details>\n\n## Experimental features\n\nExperimental features are new features added to containerd which do not have the\nsame stability guarantees as the rest of containerd. An effort is made to avoid\nbreaking interfaces between versions, but changes to experimental features before\nbeing fully supported is possible. Users can still expect experimental features\nto be high quality and are encouraged to use new features to help them stabilize\nmore quickly.\n\n| Component                                                                              | Initial Release | Target Supported Release |\n|----------------------------------------------------------------------------------------|-----------------|--------------------------|\n| [Sandbox Service](https://github.com/containerd/containerd/pull/6703)                  | containerd v1.7 | containerd v2.0          |\n| [Sandbox CRI Server](https://github.com/containerd/containerd/pull/7228)               | containerd v1.7 | containerd v2.0          |\n| [Transfer Service](https://github.com/containerd/containerd/pull/7320)                 | containerd v1.7 | containerd v2.0          |\n| [NRI in CRI Support](https://github.com/containerd/containerd/pull/6019)               | containerd v1.7 | containerd v2.0          |\n| [gRPC Shim](https://github.com/containerd/containerd/pull/8052)                        | containerd v1.7 | containerd v2.0          |\n| [CRI Runtime Specific Snapshotter](https://github.com/containerd/containerd/pull/6899) | containerd v1.7 | containerd v2.0          |\n| [CRI Support for User Namespaces](./docs/user-namespaces/README.md)                    | containerd v1.7 | containerd v2.0          |\n"
        },
        {
          "name": "ROADMAP.md",
          "type": "blob",
          "size": 1.3173828125,
          "content": "# containerd roadmap\n\ncontainerd uses the issues and milestones to define its roadmap.\n`ROADMAP.md` files are common in open source projects, but we find they quickly become out of date.\nWe opt for an issues and milestone approach that our maintainers and community can keep up-to-date as work is added and completed.\n\n## Issues\n\nIssues tagged with the `roadmap` label are high level roadmap items.\nThey are tasks and/or features that the containerd community wants completed.\n\nSmaller issues and pull requests can reference back to the main roadmap issue that is tagged to help detail progress towards the overall goal.\n\n## Milestones\n\nMilestones define when an issue, pull request, and/or roadmap item is to be completed.\nIssues are the what, milestones are the when.\nDevelopment is complex therefore roadmap items can move between milestones depending on the remaining development and testing required to release a change.\n\n## Searching\n\nTo find the roadmap items currently planned for containerd you can filter on the `roadmap` label.\n\n[Search Roadmap Items](https://github.com/containerd/containerd/issues?q=is%3Aopen+is%3Aissue+label%3Aroadmap)\n\nAfter searching for roadmap items you can view what milestone they are scheduled to be completed in along with the progress.\n\n[View Milestones](https://github.com/containerd/containerd/milestones)\n"
        },
        {
          "name": "SCOPE.md",
          "type": "blob",
          "size": 4.5126953125,
          "content": "# Scope and Principles\n\nHaving a clearly defined scope of a project is important for ensuring consistency and focus.\nThese following criteria will be used when reviewing pull requests, features, and changes for the project before being accepted.\n\n### Components\n\nComponents should not have tight dependencies on each other so that they are able to be used independently.\nThe APIs for images and containers should be designed in a way that when used together the components have a natural flow but still be useful independently.\n\nAn example for this design can be seen with the overlay filesystems and the container execution layer.\nThe execution layer and overlay filesystems can be used independently but if you were to use both, they share a common `Mount` struct that the filesystems produce and the execution layer consumes.\n\n### Primitives\n\ncontainerd should expose primitives to solve problems instead of building high level abstractions in the API.\nA common example of this is how build would be implemented.\nInstead of having a build API in containerd we should expose the lower level primitives that allow things required in build to work.\nBreaking up the filesystem APIs to allow snapshots, copy functionality, and mounts allow people implementing build at the higher levels with more flexibility.\n\n### Extensibility and Defaults\n\nFor the various components in containerd there should be defined extension points where implementations can be swapped for alternatives.\nThe best example of this is that containerd will use `runc` from OCI as the default runtime in the execution layer but other runtimes conforming to the OCI Runtime specification can be easily added to containerd.\n\ncontainerd will come with a default implementation for the various components.\nThese defaults will be chosen by the maintainers of the project and should not change unless better tech for that component comes out.\nAdditional implementations will not be accepted into the core repository and should be developed in a separate repository not maintained by the containerd maintainers.\n\n\n## Scope\n\nThe following table specifies the various components of containerd and general features of container runtimes.\nThe table specifies whether the feature/component is in or out of scope.\n\n| Name | Description | In/Out | Reason |\n|------------------------------|--------------------------------------------------------------------------------------------------------|--------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| execution | Provide an extensible execution layer for executing a container | in | Create,start, stop pause, resume exec, signal, delete |\n| cow filesystem | Built in functionality for overlay and other copy on write filesystems for containers | in |  |\n| distribution | Having the ability to push and pull images as well as operations on images as a first class API object | in | containerd will fully support the management and retrieval of images |\n| metrics | container-level metrics, cgroup stats, and OOM events | in |\n| networking | creation and management of network interfaces | out | Networking will be handled and provided to containerd via higher level systems. |\n| build | Building images as a first class API | out | Build is a higher level tooling feature and can be implemented in many different ways on top of containerd |\n| volumes | Volume management for external data | out | The API supports mounts, binds, etc where all volumes type systems can be built on top of containerd. |\n| logging | Persisting container logs | out | Logging can be build on top of containerd because the container’s STDIO will be provided to the clients and they can persist any way they see fit. There is no io copying of container STDIO in containerd. |\n\n\ncontainerd is scoped to a single host and makes assumptions based on that fact.\nIt can be used to build things like a node agent that launches containers but does not have any concepts of a distributed system.\n\ncontainerd is designed to be embedded into a larger system, hence it only includes a barebone CLI (`ctr`) specifically for development and debugging purpose, with no mandate to be human-friendly, and no guarantee of interface stability over time.\n\n### How is the scope changed?\n\nThe scope of this project is an allowed list.\nIf it's not mentioned as being in scope, it is out of scope.\nFor the scope of this project to change it requires a 100% vote from all maintainers of the project.\n"
        },
        {
          "name": "Vagrantfile",
          "type": "blob",
          "size": 12.0185546875,
          "content": "# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\n#   Copyright The containerd Authors.\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n\n#       http://www.apache.org/licenses/LICENSE-2.0\n\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n\n# Vagrantfile for Fedora and EL\nVagrant.configure(\"2\") do |config|\n  config.vm.box = ENV[\"BOX\"] ? ENV[\"BOX\"].split(\"@\")[0] : \"fedora/41-cloud-base\"\n  # BOX_VERSION is deprecated. Use \"BOX=<BOX>@<BOX_VERSION>\".\n  config.vm.box_version = ENV[\"BOX_VERSION\"] || (ENV[\"BOX\"].split(\"@\")[1] if ENV[\"BOX\"])\n\n  memory = 4096\n  cpus = 2\n  disk_size = 60\n  config.vm.provider :virtualbox do |v, o|\n    v.memory = memory\n    v.cpus = cpus\n    # Needs env var VAGRANT_EXPERIMENTAL=\"disks\"\n    o.vm.disk :disk, size: \"#{disk_size}GB\", primary: true\n    v.customize [\"modifyvm\", :id, \"--firmware\", \"efi\"]\n  end\n  config.vm.provider :libvirt do |v|\n    v.memory = memory\n    v.cpus = cpus\n    v.machine_virtual_size = disk_size\n    # https://github.com/vagrant-libvirt/vagrant-libvirt/issues/1725#issuecomment-1454058646\n    # Needs `sudo cp /usr/share/OVMF/OVMF_VARS_4M.fd /var/lib/libvirt/qemu/nvram/`\n    v.loader = '/usr/share/OVMF/OVMF_CODE_4M.fd'\n    v.nvram = '/var/lib/libvirt/qemu/nvram/OVMF_VARS_4M.fd'\n  end\n\n  config.vm.synced_folder \".\", \"/vagrant\", type: \"rsync\"\n\n  config.vm.provision 'shell', path: 'script/resize-vagrant-root.sh'\n\n  # Disabled by default. To run:\n  #   vagrant up --provision-with=upgrade-packages\n  # To upgrade only specific packages:\n  #   UPGRADE_PACKAGES=selinux vagrant up --provision-with=upgrade-packages\n  #\n  config.vm.provision \"upgrade-packages\", type: \"shell\", run: \"never\" do |sh|\n    sh.upload_path = \"/tmp/vagrant-upgrade-packages\"\n    sh.env = {\n        'UPGRADE_PACKAGES': ENV['UPGRADE_PACKAGES'],\n    }\n    sh.inline = <<~SHELL\n        #!/usr/bin/env bash\n        set -eux -o pipefail\n        dnf -y upgrade ${UPGRADE_PACKAGES}\n    SHELL\n  end\n\n  # To re-run, installing CNI from RPM:\n  #   INSTALL_PACKAGES=\"containernetworking-plugins\" vagrant up --provision-with=install-packages\n  #\n  config.vm.provision \"install-packages\", type: \"shell\", run: \"once\" do |sh|\n    sh.upload_path = \"/tmp/vagrant-install-packages\"\n    sh.env = {\n        'INSTALL_PACKAGES': ENV['INSTALL_PACKAGES'],\n    }\n    sh.inline = <<~SHELL\n        #!/usr/bin/env bash\n        set -eux -o pipefail\n        dnf -y install \\\n            container-selinux \\\n            curl \\\n            gcc \\\n            git \\\n            iptables \\\n            libseccomp-devel \\\n            libselinux-devel \\\n            lsof \\\n            make \\\n            strace \\\n            ${INSTALL_PACKAGES}\n    SHELL\n  end\n\n  # EL does not have /usr/local/{bin,sbin} in the PATH by default\n  config.vm.provision \"setup-etc-environment\", type: \"shell\", run: \"once\" do |sh|\n    sh.upload_path = \"/tmp/vagrant-setup-etc-environment\"\n    sh.inline = <<~SHELL\n        #!/usr/bin/env bash\n        set -eux -o pipefail\n        cat >> /etc/environment <<EOF\nPATH=/usr/local/go/bin:/usr/local/bin:/usr/local/sbin:$PATH\nEOF\n        source /etc/environment\n        SHELL\n  end\n\n  # To re-run this provisioner, installing a different version of go:\n  #   GO_VERSION=\"1.14.6\" vagrant up --provision-with=install-golang\n  #\n  config.vm.provision \"install-golang\", type: \"shell\", run: \"once\" do |sh|\n    sh.upload_path = \"/tmp/vagrant-install-golang\"\n    sh.env = {\n        'GO_VERSION': ENV['GO_VERSION'] || \"1.23.4\",\n    }\n    sh.inline = <<~SHELL\n        #!/usr/bin/env bash\n        set -eux -o pipefail\n        curl -fsSL \"https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz\" | tar Cxz /usr/local\n        cat >> /etc/profile.d/sh.local <<EOF\nGOPATH=\\\\$HOME/go\nPATH=\\\\$GOPATH/bin:\\\\$PATH\nexport GOPATH PATH\ngit config --global --add safe.directory /vagrant\nEOF\n    source /etc/profile.d/sh.local\n    SHELL\n  end\n\n  config.vm.provision \"setup-gopath\", type: \"shell\", run: \"once\" do |sh|\n    sh.upload_path = \"/tmp/vagrant-setup-gopath\"\n    sh.inline = <<~SHELL\n        #!/usr/bin/env bash\n        source /etc/environment\n        source /etc/profile.d/sh.local\n        set -eux -o pipefail\n        mkdir -p ${GOPATH}/src/github.com/containerd\n        ln -fnsv /vagrant ${GOPATH}/src/github.com/containerd/containerd\n    SHELL\n  end\n\n  config.vm.provision \"install-runc\", type: \"shell\", run: \"once\" do |sh|\n    sh.upload_path = \"/tmp/vagrant-install-runc\"\n    sh.env = {\n        'RUNC_FLAVOR': ENV['RUNC_FLAVOR'] || \"runc\",\n    }\n    sh.inline = <<~SHELL\n        #!/usr/bin/env bash\n        source /etc/environment\n        source /etc/profile.d/sh.local\n        set -eux -o pipefail\n        ${GOPATH}/src/github.com/containerd/containerd/script/setup/install-runc\n        type runc\n        runc --version\n        chcon -v -t container_runtime_exec_t $(type -ap runc)\n    SHELL\n  end\n\n  config.vm.provision \"install-cni\", type: \"shell\", run: \"once\" do |sh|\n    sh.upload_path = \"/tmp/vagrant-install-cni\"\n    sh.env = {\n        'CNI_BINARIES': 'bridge dhcp flannel host-device host-local ipvlan loopback macvlan portmap ptp tuning vlan',\n    }\n    sh.inline = <<~SHELL\n        #!/usr/bin/env bash\n        source /etc/environment\n        source /etc/profile.d/sh.local\n        set -eux -o pipefail\n        cd ${GOPATH}/src/github.com/containerd/containerd\n        script/setup/install-cni\n        PATH=/opt/cni/bin:$PATH type ${CNI_BINARIES} || true\n    SHELL\n  end\n\n  config.vm.provision \"install-cri-tools\", type: \"shell\", run: \"once\" do |sh|\n    sh.upload_path = \"/tmp/vagrant-install-cri-tools\"\n    sh.env = {\n        'CRI_TOOLS_VERSION': ENV['CRI_TOOLS_VERSION'] || '16911795a3c33833fa0ec83dac1ade3172f6989e',\n        'GOBIN': '/usr/local/bin',\n    }\n    sh.inline = <<~SHELL\n        #!/usr/bin/env bash\n        source /etc/environment\n        source /etc/profile.d/sh.local\n        set -eux -o pipefail\n        ${GOPATH}/src/github.com/containerd/containerd/script/setup/install-critools\n        type crictl critest\n        critest --version\n    SHELL\n  end\n\n  config.vm.provision \"install-containerd\", type: \"shell\", run: \"once\" do |sh|\n    sh.upload_path = \"/tmp/vagrant-install-containerd\"\n    sh.inline = <<~SHELL\n        #!/usr/bin/env bash\n        source /etc/environment\n        source /etc/profile.d/sh.local\n        set -eux -o pipefail\n        cd ${GOPATH}/src/github.com/containerd/containerd\n        make BUILDTAGS=\"seccomp selinux no_btrfs no_devmapper no_zfs\" binaries install\n        type containerd\n        containerd --version\n        chcon -v -t container_runtime_exec_t /usr/local/bin/{containerd,containerd-shim*}\n        ./script/setup/config-containerd\n    SHELL\n  end\n\n  config.vm.provision \"install-gotestsum\", type: \"shell\",  run: \"once\" do |sh|\n      sh.upload_path = \"/tmp/vagrant-install-gotestsum\"\n      sh.inline = <<~SHELL\n        #!/usr/bin/env bash\n        source /etc/environment\n        source /etc/profile.d/sh.local\n        set -eux -o pipefail\n        ${GOPATH}/src/github.com/containerd/containerd/script/setup/install-gotestsum\n        sudo cp ${GOPATH}/bin/gotestsum /usr/local/bin/\n      SHELL\n  end\n\n  config.vm.provision \"install-failpoint-binaries\", type: \"shell\",  run: \"once\" do |sh|\n      sh.upload_path = \"/tmp/vagrant-install-failpoint-binaries\"\n      sh.inline = <<~SHELL\n        #!/usr/bin/env bash\n        source /etc/environment\n        source /etc/profile.d/sh.local\n        set -eux -o pipefail\n        ${GOPATH}/src/github.com/containerd/containerd/script/setup/install-failpoint-binaries\n        chcon -v -t container_runtime_exec_t $(type -ap containerd-shim-runc-fp-v1)\n        containerd-shim-runc-fp-v1 -v\n      SHELL\n  end\n\n  # SELinux is Enforcing by default.\n  # To set SELinux as Disabled on a VM that has already been provisioned:\n  #   SELINUX=Disabled vagrant up --provision-with=selinux\n  # To set SELinux as Permissive on a VM that has already been provsioned\n  #   SELINUX=Permissive vagrant up --provision-with=selinux\n  config.vm.provision \"selinux\", type: \"shell\", run: \"never\" do |sh|\n    sh.upload_path = \"/tmp/vagrant-selinux\"\n    sh.env = {\n        'SELINUX': ENV['SELINUX'] || \"Enforcing\"\n    }\n    sh.inline = <<~SHELL\n        /vagrant/script/setup/config-selinux\n        /vagrant/script/setup/config-containerd\n    SHELL\n  end\n\n  # SELinux is Enforcing by default (via provisioning) in this VM. To re-run with SELinux disabled:\n  #   SELINUX=Disabled vagrant up --provision-with=selinux,test-integration\n  #\n  config.vm.provision \"test-integration\", type: \"shell\", run: \"never\" do |sh|\n    sh.upload_path = \"/tmp/test-integration\"\n    sh.env = {\n        'RUNC_FLAVOR': ENV['RUNC_FLAVOR'] || \"runc\",\n        'GOTEST': ENV['GOTEST'] || \"go test\",\n        'GOTESTSUM_JUNITFILE': ENV['GOTESTSUM_JUNITFILE'],\n        'GOTESTSUM_JSONFILE': ENV['GOTESTSUM_JSONFILE'],\n    }\n    sh.inline = <<~SHELL\n        #!/usr/bin/env bash\n        source /etc/environment\n        source /etc/profile.d/sh.local\n        set -eux -o pipefail\n        rm -rf /var/lib/containerd-test /run/containerd-test\n        cd ${GOPATH}/src/github.com/containerd/containerd\n        go test -v -count=1 -race ./core/metrics/cgroups\n        make integration EXTRA_TESTFLAGS=\"-timeout 15m -no-criu -test.v\" TEST_RUNTIME=io.containerd.runc.v2 RUNC_FLAVOR=$RUNC_FLAVOR\n    SHELL\n  end\n\n  # SELinux is Enforcing by default (via provisioning) in this VM. To re-run with SELinux disabled:\n  #   SELINUX=Disabled vagrant up --provision-with=selinux,test-cri-integration\n  #\n  config.vm.provision \"test-cri-integration\", type: \"shell\", run: \"never\" do |sh|\n    sh.upload_path = \"/tmp/test-cri-integration\"\n    sh.env = {\n        'GOTEST': ENV['GOTEST'] || \"go test\",\n        'GOTESTSUM_JUNITFILE': ENV['GOTESTSUM_JUNITFILE'],\n        'GOTESTSUM_JSONFILE': ENV['GOTESTSUM_JSONFILE'],\n        'GITHUB_WORKSPACE': '',\n        'CGROUP_DRIVER': ENV['CGROUP_DRIVER'],\n    }\n    sh.inline = <<~SHELL\n        #!/usr/bin/env bash\n        source /etc/environment\n        source /etc/profile.d/sh.local\n        set -eux -o pipefail\n        cleanup() {\n          rm -rf /var/lib/containerd* /run/containerd* /tmp/containerd* /tmp/test* /tmp/failpoint* /tmp/nri*\n        }\n        cleanup\n        cd ${GOPATH}/src/github.com/containerd/containerd\n        # cri-integration.sh executes containerd from ./bin, not from $PATH .\n        make BUILDTAGS=\"seccomp selinux no_btrfs no_devmapper no_zfs\" binaries bin/cri-integration.test\n        chcon -v -t container_runtime_exec_t ./bin/{containerd,containerd-shim*}\n        CONTAINERD_RUNTIME=io.containerd.runc.v2 ./script/test/cri-integration.sh\n        cleanup\n    SHELL\n  end\n\n  # SELinux is Enforcing by default (via provisioning) in this VM. To re-run with SELinux disabled:\n  #   SELINUX=Disabled vagrant up --provision-with=selinux,test-cri\n  #\n  config.vm.provision \"test-cri\", type: \"shell\", run: \"never\" do |sh|\n    sh.upload_path = \"/tmp/test-cri\"\n    sh.env = {\n        'GOTEST': ENV['GOTEST'] || \"go test\",\n        'REPORT_DIR': ENV['REPORT_DIR'],\n        'CGROUP_DRIVER': ENV['CGROUP_DRIVER'],\n    }\n    sh.inline = <<~SHELL\n        #!/usr/bin/env bash\n        source /etc/environment\n        source /etc/profile.d/sh.local\n        set -eux -o pipefail\n        systemctl disable --now containerd || true\n        rm -rf /var/lib/containerd /run/containerd\n        function cleanup()\n        {\n            journalctl -u containerd > /tmp/containerd.log\n            cat /tmp/containerd.log\n            systemctl stop containerd\n        }\n        selinux=$(getenforce)\n        if [[ $selinux == Enforcing ]]; then\n            setenforce 0\n        fi\n        systemctl enable --now ${GOPATH}/src/github.com/containerd/containerd/containerd.service\n        if [[ $selinux == Enforcing ]]; then\n            setenforce 1\n        fi\n        trap cleanup EXIT\n        ctr version\n        critest --parallel=$[$(nproc)+2] --ginkgo.skip='HostIpc is true' --report-dir=\"${REPORT_DIR}\"\n    SHELL\n  end\n\nend\n"
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "cluster",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "code-of-conduct.md",
          "type": "blob",
          "size": 0.1494140625,
          "content": "## containerd Community Code of Conduct\n\ncontainerd follows the [CNCF Code of Conduct](https://github.com/cncf/foundation/blob/main/code-of-conduct.md).\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.0146484375,
          "content": "comment: false\n"
        },
        {
          "name": "containerd.service",
          "type": "blob",
          "size": 1.234375,
          "content": "# Copyright The containerd Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n[Unit]\nDescription=containerd container runtime\nDocumentation=https://containerd.io\nAfter=network.target local-fs.target dbus.service\n\n[Service]\nExecStartPre=-/sbin/modprobe overlay\nExecStart=/usr/local/bin/containerd\n\nType=notify\nDelegate=yes\nKillMode=process\nRestart=always\nRestartSec=5\n\n# Having non-zero Limit*s causes performance problems due to accounting overhead\n# in the kernel. We recommend using cgroups to do container-local accounting.\nLimitNPROC=infinity\nLimitCORE=infinity\n\n# Comment TasksMax if your systemd version does not supports it.\n# Only systemd 226 and above support this version.\nTasksMax=infinity\nOOMScoreAdjust=-999\n\n[Install]\nWantedBy=multi-user.target\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "defaults",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 7.3681640625,
          "content": "module github.com/containerd/containerd/v2\n\ngo 1.22.0\n\nrequire (\n\tdario.cat/mergo v1.0.1\n\tgithub.com/AdaLogics/go-fuzz-headers v0.0.0-20240806141605-e8a1dd7889d6\n\tgithub.com/Microsoft/go-winio v0.6.2\n\tgithub.com/Microsoft/hcsshim v0.12.9\n\tgithub.com/checkpoint-restore/checkpointctl v1.3.0\n\tgithub.com/checkpoint-restore/go-criu/v7 v7.2.0\n\tgithub.com/containerd/btrfs/v2 v2.0.0\n\tgithub.com/containerd/cgroups/v3 v3.0.5\n\tgithub.com/containerd/console v1.0.4\n\tgithub.com/containerd/containerd/api v1.8.0\n\tgithub.com/containerd/continuity v0.4.5\n\tgithub.com/containerd/errdefs v1.0.0\n\tgithub.com/containerd/errdefs/pkg v0.3.0\n\tgithub.com/containerd/fifo v1.1.0\n\tgithub.com/containerd/go-cni v1.1.12\n\tgithub.com/containerd/go-runc v1.1.0\n\tgithub.com/containerd/imgcrypt/v2 v2.0.0\n\tgithub.com/containerd/log v0.1.0\n\tgithub.com/containerd/nri v0.8.0\n\tgithub.com/containerd/otelttrpc v0.1.0\n\tgithub.com/containerd/platforms v1.0.0-rc.0\n\tgithub.com/containerd/plugin v1.0.0\n\tgithub.com/containerd/ttrpc v1.2.7\n\tgithub.com/containerd/typeurl/v2 v2.2.3\n\tgithub.com/containerd/zfs/v2 v2.0.0-rc.0\n\tgithub.com/containernetworking/cni v1.2.3\n\tgithub.com/containernetworking/plugins v1.5.1\n\tgithub.com/coreos/go-systemd/v22 v22.5.0\n\tgithub.com/davecgh/go-spew v1.1.1\n\tgithub.com/distribution/reference v0.6.0\n\tgithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c\n\tgithub.com/docker/go-metrics v0.0.1\n\tgithub.com/docker/go-units v0.5.0\n\tgithub.com/fsnotify/fsnotify v1.8.0\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/grpc-ecosystem/go-grpc-middleware/providers/prometheus v1.0.1\n\tgithub.com/intel/goresctrl v0.8.0\n\tgithub.com/klauspost/compress v1.17.11\n\tgithub.com/mdlayher/vsock v1.2.1\n\tgithub.com/moby/locker v1.0.1\n\tgithub.com/moby/sys/mountinfo v0.7.2\n\tgithub.com/moby/sys/sequential v0.6.0\n\tgithub.com/moby/sys/signal v0.7.1\n\tgithub.com/moby/sys/symlink v0.3.0\n\tgithub.com/moby/sys/user v0.3.0\n\tgithub.com/moby/sys/userns v0.1.0\n\tgithub.com/opencontainers/go-digest v1.0.0\n\tgithub.com/opencontainers/image-spec v1.1.0\n\tgithub.com/opencontainers/runtime-spec v1.2.0\n\tgithub.com/opencontainers/runtime-tools v0.9.1-0.20221107090550-2e043c6bd626\n\tgithub.com/opencontainers/selinux v1.11.1\n\tgithub.com/pelletier/go-toml/v2 v2.2.3\n\tgithub.com/prometheus/client_golang v1.20.5\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/stretchr/testify v1.10.0\n\tgithub.com/tchap/go-patricia/v2 v2.3.1\n\tgithub.com/urfave/cli/v2 v2.27.5\n\tgithub.com/vishvananda/netlink v1.3.0\n\tgo.etcd.io/bbolt v1.3.11\n\tgo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.56.0\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.56.0\n\tgo.opentelemetry.io/otel v1.31.0\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.31.0\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.31.0\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.31.0\n\tgo.opentelemetry.io/otel/sdk v1.31.0\n\tgo.opentelemetry.io/otel/trace v1.31.0\n\tgolang.org/x/mod v0.22.0\n\tgolang.org/x/sync v0.10.0\n\tgolang.org/x/sys v0.29.0\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241021214115-324edc3d5d38\n\tgoogle.golang.org/grpc v1.69.2\n\tgoogle.golang.org/protobuf v1.36.1\n\tk8s.io/apimachinery v0.31.3\n\tk8s.io/client-go v0.31.3\n\tk8s.io/component-base v0.31.3\n\tk8s.io/cri-api v0.31.3\n\tk8s.io/klog/v2 v2.130.1\n\tk8s.io/kubelet v0.31.3\n\tk8s.io/utils v0.0.0-20240711033017-18e509b52bc8\n\ttags.cncf.io/container-device-interface v0.8.0\n)\n\nrequire (\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/cenkalti/backoff/v4 v4.3.0 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/cilium/ebpf v0.16.0 // indirect\n\tgithub.com/containers/ocicrypt v1.2.1 // indirect\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.5 // indirect\n\tgithub.com/emicklei/go-restful/v3 v3.11.0 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/fxamacker/cbor/v2 v2.7.0 // indirect\n\tgithub.com/go-jose/go-jose/v4 v4.0.4 // indirect\n\tgithub.com/go-logr/logr v1.4.2 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/godbus/dbus/v5 v5.1.0 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/golang/protobuf v1.5.4 // indirect\n\tgithub.com/google/gofuzz v1.2.0 // indirect\n\tgithub.com/gorilla/websocket v1.5.0 // indirect\n\tgithub.com/grpc-ecosystem/go-grpc-middleware/v2 v2.1.0 // indirect\n\tgithub.com/grpc-ecosystem/grpc-gateway/v2 v2.22.0 // indirect\n\tgithub.com/json-iterator/go v1.1.12 // indirect\n\tgithub.com/mdlayher/socket v0.4.1 // indirect\n\tgithub.com/miekg/pkcs11 v1.1.1 // indirect\n\tgithub.com/mistifyio/go-zfs/v3 v3.0.1 // indirect\n\tgithub.com/moby/spdystream v0.4.0 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/mxk/go-flowrate v0.0.0-20140419014527-cca7078d478f // indirect\n\tgithub.com/petermattis/goid v0.0.0-20240813172612-4fcff4a6cae7 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/prometheus/client_model v0.6.1 // indirect\n\tgithub.com/prometheus/common v0.55.0 // indirect\n\tgithub.com/prometheus/procfs v0.15.1 // indirect\n\tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n\tgithub.com/sasha-s/go-deadlock v0.3.5 // indirect\n\tgithub.com/smallstep/pkcs7 v0.1.1 // indirect\n\tgithub.com/stefanberger/go-pkcs11uri v0.0.0-20230803200340-78284954bff6 // indirect\n\tgithub.com/syndtr/gocapability v0.0.0-20200815063812-42c35b437635 // indirect\n\tgithub.com/vishvananda/netns v0.0.4 // indirect\n\tgithub.com/x448/float16 v0.8.4 // indirect\n\tgithub.com/xrash/smetrics v0.0.0-20240521201337-686a1a2994c1 // indirect\n\tgo.opencensus.io v0.24.0 // indirect\n\tgo.opentelemetry.io/otel/metric v1.31.0 // indirect\n\tgo.opentelemetry.io/proto/otlp v1.3.1 // indirect\n\tgolang.org/x/crypto v0.31.0 // indirect\n\tgolang.org/x/exp v0.0.0-20241108190413-2d47ceb2692f // indirect\n\tgolang.org/x/net v0.33.0 // indirect\n\tgolang.org/x/oauth2 v0.23.0 // indirect\n\tgolang.org/x/term v0.27.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgolang.org/x/time v0.3.0 // indirect\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20241015192408-796eee8c2d53 // indirect\n\tgopkg.in/inf.v0 v0.9.1 // indirect\n\tgopkg.in/yaml.v2 v2.4.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n\tk8s.io/api v0.31.3 // indirect\n\tk8s.io/apiserver v0.31.3 // indirect\n\tsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd // indirect\n\tsigs.k8s.io/structured-merge-diff/v4 v4.4.1 // indirect\n\tsigs.k8s.io/yaml v1.4.0 // indirect\n\ttags.cncf.io/container-device-interface/specs-go v0.8.0 // indirect\n)\n\nexclude (\n\t// These dependencies were updated to \"master\" in some modules we depend on,\n\t// but have no code-changes since their last release. Unfortunately, this also\n\t// causes a ripple effect, forcing all users of the containerd module to also\n\t// update these dependencies to an unrelease / un-tagged version.\n\t//\n\t// Both these dependencies will unlikely do a new release in the near future,\n\t// so exclude these versions so that we can downgrade to the current release.\n\t//\n\t// For additional details, see this PR and links mentioned in that PR:\n\t// https://github.com/kubernetes-sigs/kustomize/pull/5830#issuecomment-2569960859\n\tgithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc\n\tgithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 52.7197265625,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ndario.cat/mergo v1.0.1 h1:Ra4+bf83h2ztPIQYNP99R6m+Y7KfnARDfID+a+vLl4s=\ndario.cat/mergo v1.0.1/go.mod h1:uNxQE+84aUszobStD9th8a29P2fMDhsBdgRYvZOxGmk=\ngithub.com/AdaLogics/go-fuzz-headers v0.0.0-20240806141605-e8a1dd7889d6 h1:He8afgbRMd7mFxO99hRNu+6tazq8nFF9lIwo9JFroBk=\ngithub.com/AdaLogics/go-fuzz-headers v0.0.0-20240806141605-e8a1dd7889d6/go.mod h1:8o94RPi1/7XTJvwPpRSzSUedZrtlirdB3r9Z20bi2f8=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/Microsoft/go-winio v0.6.2 h1:F2VQgta7ecxGYO8k3ZZz3RS8fVIXVxONVUPlNERoyfY=\ngithub.com/Microsoft/go-winio v0.6.2/go.mod h1:yd8OoFMLzJbo9gZq8j5qaps8bJ9aShtEA8Ipt1oGCvU=\ngithub.com/Microsoft/hcsshim v0.12.9 h1:2zJy5KA+l0loz1HzEGqyNnjd3fyZA31ZBCGKacp6lLg=\ngithub.com/Microsoft/hcsshim v0.12.9/go.mod h1:fJ0gkFAna6ukt0bLdKB8djt4XIJhF/vEPuoIWYVvZ8Y=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5 h1:0CwZNZbxp69SHPdPJAN/hZIm0C4OItdklCFmMRWYpio=\ngithub.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5/go.mod h1:wHh0iHkYZB8zMSxRWpUBQtwG5a7fFgvEO+odwuTv2gs=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/blang/semver/v4 v4.0.0 h1:1PFHFE6yCCTv8C1TeyNNarDzntLi7wMI5i/pzqYIsAM=\ngithub.com/blang/semver/v4 v4.0.0/go.mod h1:IbckMUScFkM3pff0VJDNKRiT6TG/YpiHIM2yvyW5YoQ=\ngithub.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=\ngithub.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/checkpoint-restore/checkpointctl v1.3.0 h1:bNz5b6s+lxFdG5ZGDba3qSkBtXDDTCG2494dfAbQJ4E=\ngithub.com/checkpoint-restore/checkpointctl v1.3.0/go.mod h1:dqZH4wDvbjnsqFGK2LdUDk21yFQ1dCAtzgRMlG44KDM=\ngithub.com/checkpoint-restore/go-criu/v7 v7.2.0 h1:qGiWA4App1gGlEfIJ68WR9jbezV9J7yZdjzglezcqKo=\ngithub.com/checkpoint-restore/go-criu/v7 v7.2.0/go.mod h1:u0LCWLg0w4yqqu14aXhiB4YD3a1qd8EcCEg7vda5dwo=\ngithub.com/cilium/ebpf v0.16.0 h1:+BiEnHL6Z7lXnlGUsXQPPAE7+kenAd4ES8MQ5min0Ok=\ngithub.com/cilium/ebpf v0.16.0/go.mod h1:L7u2Blt2jMM/vLAVgjxluxtBKlz3/GWjB0dMOEngfwE=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/containerd/btrfs/v2 v2.0.0 h1:FN4wsx7KQrYoLXN7uLP0vBV4oVWHOIKDRQ1G2Z0oL5M=\ngithub.com/containerd/btrfs/v2 v2.0.0/go.mod h1:swkD/7j9HApWpzl8OHfrHNxppPd9l44DFZdF94BUj9k=\ngithub.com/containerd/cgroups/v3 v3.0.5 h1:44na7Ud+VwyE7LIoJ8JTNQOa549a8543BmzaJHo6Bzo=\ngithub.com/containerd/cgroups/v3 v3.0.5/go.mod h1:SA5DLYnXO8pTGYiAHXz94qvLQTKfVM5GEVisn4jpins=\ngithub.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=\ngithub.com/containerd/console v1.0.4/go.mod h1:YynlIjWYF8myEu6sdkwKIvGQq+cOckRm6So2avqoYAk=\ngithub.com/containerd/containerd/api v1.8.0 h1:hVTNJKR8fMc/2Tiw60ZRijntNMd1U+JVMyTRdsD2bS0=\ngithub.com/containerd/containerd/api v1.8.0/go.mod h1:dFv4lt6S20wTu/hMcP4350RL87qPWLVa/OHOwmmdnYc=\ngithub.com/containerd/continuity v0.4.5 h1:ZRoN1sXq9u7V6QoHMcVWGhOwDFqZ4B9i5H6un1Wh0x4=\ngithub.com/containerd/continuity v0.4.5/go.mod h1:/lNJvtJKUQStBzpVQ1+rasXO1LAWtUQssk28EZvJ3nE=\ngithub.com/containerd/errdefs v1.0.0 h1:tg5yIfIlQIrxYtu9ajqY42W3lpS19XqdxRQeEwYG8PI=\ngithub.com/containerd/errdefs v1.0.0/go.mod h1:+YBYIdtsnF4Iw6nWZhJcqGSg/dwvV7tyJ/kCkyJ2k+M=\ngithub.com/containerd/errdefs/pkg v0.3.0 h1:9IKJ06FvyNlexW690DXuQNx2KA2cUJXx151Xdx3ZPPE=\ngithub.com/containerd/errdefs/pkg v0.3.0/go.mod h1:NJw6s9HwNuRhnjJhM7pylWwMyAkmCQvQ4GpJHEqRLVk=\ngithub.com/containerd/fifo v1.1.0 h1:4I2mbh5stb1u6ycIABlBw9zgtlK8viPI9QkQNRQEEmY=\ngithub.com/containerd/fifo v1.1.0/go.mod h1:bmC4NWMbXlt2EZ0Hc7Fx7QzTFxgPID13eH0Qu+MAb2o=\ngithub.com/containerd/go-cni v1.1.12 h1:wm/5VD/i255hjM4uIZjBRiEQ7y98W9ACy/mHeLi4+94=\ngithub.com/containerd/go-cni v1.1.12/go.mod h1:+jaqRBdtW5faJxj2Qwg1Of7GsV66xcvnCx4mSJtUlxU=\ngithub.com/containerd/go-runc v1.1.0 h1:OX4f+/i2y5sUT7LhmcJH7GYrjjhHa1QI4e8yO0gGleA=\ngithub.com/containerd/go-runc v1.1.0/go.mod h1:xJv2hFF7GvHtTJd9JqTS2UVxMkULUYw4JN5XAUZqH5U=\ngithub.com/containerd/imgcrypt/v2 v2.0.0 h1:vd2ByN6cXeearzXCQljH1eYe77FgFO5/B9+dK14mng0=\ngithub.com/containerd/imgcrypt/v2 v2.0.0/go.mod h1:S4kOVvPZRerVueZULagcwkJK7sKc/wQI/ixcmyj26uY=\ngithub.com/containerd/log v0.1.0 h1:TCJt7ioM2cr/tfR8GPbGf9/VRAX8D2B4PjzCpfX540I=\ngithub.com/containerd/log v0.1.0/go.mod h1:VRRf09a7mHDIRezVKTRCrOq78v577GXq3bSa3EhrzVo=\ngithub.com/containerd/nri v0.8.0 h1:n1S753B9lX8RFrHYeSgwVvS1yaUcHjxbB+f+xzEncRI=\ngithub.com/containerd/nri v0.8.0/go.mod h1:uSkgBrCdEtAiEz4vnrq8gmAC4EnVAM5Klt0OuK5rZYQ=\ngithub.com/containerd/otelttrpc v0.1.0 h1:UOX68eVTE8H/T45JveIg+I22Ev2aFj4qPITCmXsskjw=\ngithub.com/containerd/otelttrpc v0.1.0/go.mod h1:XhoA2VvaGPW1clB2ULwrBZfXVuEWuyOd2NUD1IM0yTg=\ngithub.com/containerd/platforms v1.0.0-rc.0 h1:GuHWSKgVVO3POn6nRBB4sH63uPOLa87yuuhsGLWaXAA=\ngithub.com/containerd/platforms v1.0.0-rc.0/go.mod h1:T1XAzzOdYs3it7l073MNXyxRwQofJfqwi/8cRjufIk4=\ngithub.com/containerd/plugin v1.0.0 h1:c8Kf1TNl6+e2TtMHZt+39yAPDbouRH9WAToRjex483Y=\ngithub.com/containerd/plugin v1.0.0/go.mod h1:hQfJe5nmWfImiqT1q8Si3jLv3ynMUIBB47bQ+KexvO8=\ngithub.com/containerd/ttrpc v1.2.7 h1:qIrroQvuOL9HQ1X6KHe2ohc7p+HP/0VE6XPU7elJRqQ=\ngithub.com/containerd/ttrpc v1.2.7/go.mod h1:YCXHsb32f+Sq5/72xHubdiJRQY9inL4a4ZQrAbN1q9o=\ngithub.com/containerd/typeurl/v2 v2.2.3 h1:yNA/94zxWdvYACdYO8zofhrTVuQY73fFU1y++dYSw40=\ngithub.com/containerd/typeurl/v2 v2.2.3/go.mod h1:95ljDnPfD3bAbDJRugOiShd/DlAAsxGtUBhJxIn7SCk=\ngithub.com/containerd/zfs/v2 v2.0.0-rc.0 h1:0dRlgpoaepW7HuovtcvYQMF7NlpceQVdn7+3Udeth4M=\ngithub.com/containerd/zfs/v2 v2.0.0-rc.0/go.mod h1:g36g/XCEGDRxUXIFdM3oWAEvmTvhfz/eKWElqg4Secw=\ngithub.com/containernetworking/cni v1.2.3 h1:hhOcjNVUQTnzdRJ6alC5XF+wd9mfGIUaj8FuJbEslXM=\ngithub.com/containernetworking/cni v1.2.3/go.mod h1:DuLgF+aPd3DzcTQTtp/Nvl1Kim23oFKdm2okJzBQA5M=\ngithub.com/containernetworking/plugins v1.5.1 h1:T5ji+LPYjjgW0QM+KyrigZbLsZ8jaX+E5J/EcKOE4gQ=\ngithub.com/containernetworking/plugins v1.5.1/go.mod h1:MIQfgMayGuHYs0XdNudf31cLLAC+i242hNm6KuDGqCM=\ngithub.com/containers/ocicrypt v1.2.1 h1:0qIOTT9DoYwcKmxSt8QJt+VzMY18onl9jUXsxpVhSmM=\ngithub.com/containers/ocicrypt v1.2.1/go.mod h1:aD0AAqfMp0MtwqWgHM1bUwe1anx0VazI108CRrSKINQ=\ngithub.com/coreos/go-systemd/v22 v22.5.0 h1:RrqgGjYQKalulkV8NGVIfkXQf6YYmOyiJKk8iXXhfZs=\ngithub.com/coreos/go-systemd/v22 v22.5.0/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.5 h1:ZtcqGrnekaHpVLArFSe4HK5DoKx1T0rq2DwVB0alcyc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.5/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/distribution/reference v0.6.0 h1:0IXCQ5g4/QMHHkarYzh5l+u8T3t73zM5QvfrDyIgxBk=\ngithub.com/distribution/reference v0.6.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=\ngithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c h1:+pKlWGMw7gf6bQ+oDZB4KHQFypsfjYlq/C4rfL7D3g8=\ngithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c/go.mod h1:Uw6UezgYA44ePAFQYUehOuCzmy5zmg/+nl2ZfMWGkpA=\ngithub.com/docker/go-metrics v0.0.1 h1:AgB/0SvBxihN0X8OR4SjsblXkbMvalQ8cjmtKQ2rQV8=\ngithub.com/docker/go-metrics v0.0.1/go.mod h1:cG1hvH2utMXtqgqqYE9plW6lDxS3/5ayHzueweSI3Vw=\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/emicklei/go-restful/v3 v3.11.0 h1:rAQeMHw1c7zTmncogyy8VvRZwtkmkZ4FxERmMY4rD+g=\ngithub.com/emicklei/go-restful/v3 v3.11.0/go.mod h1:6n3XBCmQQb25CM2LCACGz8ukIrRry+4bhvbpWn3mrbc=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/fsnotify/fsnotify v1.8.0 h1:dAwr6QBTBZIkG8roQaJjGof0pp0EeF+tNV7YBP3F/8M=\ngithub.com/fsnotify/fsnotify v1.8.0/go.mod h1:8jBTzvmWwFyi3Pb8djgCCO5IBqzKJ/Jwo8TRcHyHii0=\ngithub.com/fxamacker/cbor/v2 v2.7.0 h1:iM5WgngdRBanHcxugY4JySA0nk1wZorNOpTgCMedv5E=\ngithub.com/fxamacker/cbor/v2 v2.7.0/go.mod h1:pxXPTn3joSm21Gbwsv0w9OSA2y1HFR9qXEeXQVeNoDQ=\ngithub.com/go-jose/go-jose/v4 v4.0.4 h1:VsjPI33J0SB9vQM6PLmNjoHqMQNGPiZ0rHL7Ni7Q6/E=\ngithub.com/go-jose/go-jose/v4 v4.0.4/go.mod h1:NKb5HO1EZccyMpiZNbdUw/14tiXNyUJh188dfnMCAfc=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-openapi/jsonpointer v0.19.6 h1:eCs3fxoIi3Wh6vtgmLTOjdhSpiqphQ+DaPn38N2ZdrE=\ngithub.com/go-openapi/jsonpointer v0.19.6/go.mod h1:osyAmYz/mB/C3I+WsTTSgw1ONzaLJoLCyoi6/zppojs=\ngithub.com/go-openapi/jsonreference v0.20.2 h1:3sVjiK66+uXK/6oQ8xgcRKcFgQ5KXa2KvnJRumpMGbE=\ngithub.com/go-openapi/jsonreference v0.20.2/go.mod h1:Bl1zwGIM8/wsvqjsOQLJ/SH+En5Ap4rVB5KVcIDZG2k=\ngithub.com/go-openapi/swag v0.22.4 h1:QLMzNJnMGPRNDCbySlcj1x01tzU8/9LTTL9hZZZogBU=\ngithub.com/go-openapi/swag v0.22.4/go.mod h1:UzaqsxGiab7freDnrUUra0MwWfN/q7tE4j+VcZ0yl14=\ngithub.com/go-quicktest/qt v1.101.0 h1:O1K29Txy5P2OK0dGo59b7b0LR6wKfIhttaAhHUyn7eI=\ngithub.com/go-quicktest/qt v1.101.0/go.mod h1:14Bz/f7NwaXPtdYEgzsx46kqSxVwTbzVZsDC26tQJow=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-task/slim-sprig/v3 v3.0.0 h1:sUs3vkvUymDpBKi3qH1YSqBQk9+9D/8M2mN1vB6EwHI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0/go.mod h1:W848ghGpv3Qj3dhTPRyJypKRiqCdHZiAzKg9hl15HA8=\ngithub.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/godbus/dbus/v5 v5.1.0 h1:4KLkAxT3aOY8Li4FRJe/KvhoNFFxo0m6fNuFUO8QJUk=\ngithub.com/godbus/dbus/v5 v5.1.0/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/gnostic-models v0.6.8 h1:yo/ABAfM5IMRsS1VnXjTBvUb61tFIHozhlYvRgGre9I=\ngithub.com/google/gnostic-models v0.6.8/go.mod h1:5n7qKqH0f5wFt+aWF8CW6pZLLNOfYuF5OpfBSENuI8U=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/gofuzz v1.2.0 h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=\ngithub.com/google/gofuzz v1.2.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/pprof v0.0.0-20240525223248-4bfdf5a9a2af h1:kmjWCqn2qkEml422C2Rrd27c3VGxi6a/6HNq8QmHRKM=\ngithub.com/google/pprof v0.0.0-20240525223248-4bfdf5a9a2af/go.mod h1:K1liHPHnj73Fdn/EKuT8nrFqBihUSKXoLYU0BuatOYo=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.2.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gorilla/websocket v1.5.0 h1:PPwGk2jz7EePpoHN/+ClbZu8SPxiqlu12wZP/3sWmnc=\ngithub.com/gorilla/websocket v1.5.0/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/grpc-ecosystem/go-grpc-middleware/providers/prometheus v1.0.1 h1:qnpSQwGEnkcRpTqNOIR6bJbR0gAorgP9CSALpRcKoAA=\ngithub.com/grpc-ecosystem/go-grpc-middleware/providers/prometheus v1.0.1/go.mod h1:lXGCsh6c22WGtjr+qGHj1otzZpV/1kwTMAqkwZsnWRU=\ngithub.com/grpc-ecosystem/go-grpc-middleware/v2 v2.1.0 h1:pRhl55Yx1eC7BZ1N+BBWwnKaMyD8uC+34TLdndZMAKk=\ngithub.com/grpc-ecosystem/go-grpc-middleware/v2 v2.1.0/go.mod h1:XKMd7iuf/RGPSMJ/U4HP0zS2Z9Fh8Ps9a+6X26m/tmI=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.22.0 h1:asbCHRVmodnJTuQ3qamDwqVOIjwqUPTYmYuemVOx+Ys=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.22.0/go.mod h1:ggCgvZ2r7uOoQjOyu2Y1NhHmEPPzzuhWgcza5M1Ji1I=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=\ngithub.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\ngithub.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\ngithub.com/intel/goresctrl v0.8.0 h1:N3shVbS3kA1Hk2AmcbHv8805Hjbv+zqsCIZCGktxx50=\ngithub.com/intel/goresctrl v0.8.0/go.mod h1:T3ZZnuHSNouwELB5wvOoUJaB7l/4Rm23rJy/wuWJlr0=\ngithub.com/josharian/intern v1.0.0 h1:vlS4z54oSdjm0bgjRigI+G1HpF+tI+9rE5LLzOg8HmY=\ngithub.com/josharian/intern v1.0.0/go.mod h1:5DoeVV0s6jJacbCEi61lwdGj/aVlrQvzHFFd8Hwg//Y=\ngithub.com/josharian/native v1.1.0 h1:uuaP0hAbW7Y4l0ZRQ6C9zfb7Mg1mbFKry/xzDAfmtLA=\ngithub.com/josharian/native v1.1.0/go.mod h1:7X/raswPFr05uY3HiLlYeyQntB6OO7E/d2Cu7qoaN2w=\ngithub.com/jsimonetti/rtnetlink/v2 v2.0.1 h1:xda7qaHDSVOsADNouv7ukSuicKZO7GgVUCXxpaIEIlM=\ngithub.com/jsimonetti/rtnetlink/v2 v2.0.1/go.mod h1:7MoNYNbb3UaDHtF8udiJo/RH6VsTKP1pqKLUTVCvToE=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.7/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/compress v1.17.11 h1:In6xLpyWOi1+C7tXUUWv2ot1QvBjxevKAaI6IXrJmUc=\ngithub.com/klauspost/compress v1.17.11/go.mod h1:pMDklpSncoRMuLFrf1W9Ss9KT+0rH90U12bZKk7uwG0=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=\ngithub.com/mailru/easyjson v0.7.7/go.mod h1:xzfreul335JAWq5oZzymOObrkdz5UnU4kGfJJLY9Nlc=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/mdlayher/netlink v1.7.2 h1:/UtM3ofJap7Vl4QWCPDGXY8d3GIY2UGSDbK+QWmY8/g=\ngithub.com/mdlayher/netlink v1.7.2/go.mod h1:xraEF7uJbxLhc5fpHL4cPe221LI2bdttWlU+ZGLfQSw=\ngithub.com/mdlayher/socket v0.4.1 h1:eM9y2/jlbs1M615oshPQOHZzj6R6wMT7bX5NPiQvn2U=\ngithub.com/mdlayher/socket v0.4.1/go.mod h1:cAqeGjoufqdxWkD7DkpyS+wcefOtmu5OQ8KuoJGIReA=\ngithub.com/mdlayher/vsock v1.2.1 h1:pC1mTJTvjo1r9n9fbm7S1j04rCgCzhCOS5DY0zqHlnQ=\ngithub.com/mdlayher/vsock v1.2.1/go.mod h1:NRfCibel++DgeMD8z/hP+PPTjlNJsdPOmxcnENvE+SE=\ngithub.com/miekg/pkcs11 v1.1.1 h1:Ugu9pdy6vAYku5DEpVWVFPYnzV+bxB+iRdbuFSu7TvU=\ngithub.com/miekg/pkcs11 v1.1.1/go.mod h1:XsNlhZGX73bx86s2hdc/FuaLm2CPZJemRLMA+WTFxgs=\ngithub.com/mistifyio/go-zfs/v3 v3.0.1 h1:YaoXgBePoMA12+S1u/ddkv+QqxcfiZK4prI6HPnkFiU=\ngithub.com/mistifyio/go-zfs/v3 v3.0.1/go.mod h1:CzVgeB0RvF2EGzQnytKVvVSDwmKJXxkOTUGbNrTja/k=\ngithub.com/mndrix/tap-go v0.0.0-20171203230836-629fa407e90b/go.mod h1:pzzDgJWZ34fGzaAZGFW22KVZDfyrYW+QABMrWnJBnSs=\ngithub.com/moby/locker v1.0.1 h1:fOXqR41zeveg4fFODix+1Ch4mj/gT0NE1XJbp/epuBg=\ngithub.com/moby/locker v1.0.1/go.mod h1:S7SDdo5zpBK84bzzVlKr2V0hz+7x9hWbYC/kq7oQppc=\ngithub.com/moby/spdystream v0.4.0 h1:Vy79D6mHeJJjiPdFEL2yku1kl0chZpJfZcPpb16BRl8=\ngithub.com/moby/spdystream v0.4.0/go.mod h1:xBAYlnt/ay+11ShkdFKNAG7LsyK/tmNBVvVOwrfMgdI=\ngithub.com/moby/sys/mountinfo v0.7.2 h1:1shs6aH5s4o5H2zQLn796ADW1wMrIwHsyJ2v9KouLrg=\ngithub.com/moby/sys/mountinfo v0.7.2/go.mod h1:1YOa8w8Ih7uW0wALDUgT1dTTSBrZ+HiBLGws92L2RU4=\ngithub.com/moby/sys/sequential v0.6.0 h1:qrx7XFUd/5DxtqcoH1h438hF5TmOvzC/lspjy7zgvCU=\ngithub.com/moby/sys/sequential v0.6.0/go.mod h1:uyv8EUTrca5PnDsdMGXhZe6CCe8U/UiTWd+lL+7b/Ko=\ngithub.com/moby/sys/signal v0.7.1 h1:PrQxdvxcGijdo6UXXo/lU/TvHUWyPhj7UOpSo8tuvk0=\ngithub.com/moby/sys/signal v0.7.1/go.mod h1:Se1VGehYokAkrSQwL4tDzHvETwUZlnY7S5XtQ50mQp8=\ngithub.com/moby/sys/symlink v0.3.0 h1:GZX89mEZ9u53f97npBy4Rc3vJKj7JBDj/PN2I22GrNU=\ngithub.com/moby/sys/symlink v0.3.0/go.mod h1:3eNdhduHmYPcgsJtZXW1W4XUJdZGBIkttZ8xKqPUJq0=\ngithub.com/moby/sys/user v0.3.0 h1:9ni5DlcW5an3SvRSx4MouotOygvzaXbaSrc/wGDFWPo=\ngithub.com/moby/sys/user v0.3.0/go.mod h1:bG+tYYYJgaMtRKgEmuueC0hJEAZWwtIbZTB+85uoHjs=\ngithub.com/moby/sys/userns v0.1.0 h1:tVLXkFOxVu9A64/yh59slHVv9ahO9UIev4JZusOLG/g=\ngithub.com/moby/sys/userns v0.1.0/go.mod h1:IHUYgu/kao6N8YZlp9Cf444ySSvCmDlmzUcYfDHOl28=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/mrunalp/fileutils v0.5.0/go.mod h1:M1WthSahJixYnrXQl/DFQuteStB1weuxD2QJNHXfbSQ=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/mxk/go-flowrate v0.0.0-20140419014527-cca7078d478f h1:y5//uYreIhSUg3J1GEMiLbxo1LJaP8RfCpH6pymGZus=\ngithub.com/mxk/go-flowrate v0.0.0-20140419014527-cca7078d478f/go.mod h1:ZdcZmHo+o7JKHSa8/e818NopupXU1YMK5fe1lsApnBw=\ngithub.com/onsi/ginkgo/v2 v2.19.1 h1:QXgq3Z8Crl5EL1WBAC98A5sEBHARrAJNzAmMxzLcRF0=\ngithub.com/onsi/ginkgo/v2 v2.19.1/go.mod h1:O3DtEWQkPa/F7fBMgmZQKKsluAy8pd3rEQdrjkPb9zA=\ngithub.com/onsi/gomega v1.34.0 h1:eSSPsPNp6ZpsG8X1OVmOTxig+CblTc4AxpPBykhe2Os=\ngithub.com/onsi/gomega v1.34.0/go.mod h1:MIKI8c+f+QLWk+hxbePD4i0LMJSExPaZOVfkoex4cAo=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.1.0 h1:8SG7/vwALn54lVB/0yZ/MMwhFrPYtpEHQb2IpWsCzug=\ngithub.com/opencontainers/image-spec v1.1.0/go.mod h1:W4s4sFTMaBeK1BQLXbG4AdM2szdn85PY75RI83NrTrM=\ngithub.com/opencontainers/runtime-spec v1.0.3-0.20220825212826-86290f6a00fb/go.mod h1:jwyrGlmzljRJv/Fgzds9SsS/C5hL+LL3ko9hs6T5lQ0=\ngithub.com/opencontainers/runtime-spec v1.2.0 h1:z97+pHb3uELt/yiAWD691HNHQIF07bE7dzrbT927iTk=\ngithub.com/opencontainers/runtime-spec v1.2.0/go.mod h1:jwyrGlmzljRJv/Fgzds9SsS/C5hL+LL3ko9hs6T5lQ0=\ngithub.com/opencontainers/runtime-tools v0.9.1-0.20221107090550-2e043c6bd626 h1:DmNGcqH3WDbV5k8OJ+esPWbqUOX5rMLR2PMvziDMJi0=\ngithub.com/opencontainers/runtime-tools v0.9.1-0.20221107090550-2e043c6bd626/go.mod h1:BRHJJd0E+cx42OybVYSgUvZmU0B8P9gZuRXlZUP7TKI=\ngithub.com/opencontainers/selinux v1.9.1/go.mod h1:2i0OySw99QjzBBQByd1Gr9gSjvuho1lHsJxIJ3gGbJI=\ngithub.com/opencontainers/selinux v1.11.1 h1:nHFvthhM0qY8/m+vfhJylliSshm8G1jJ2jDMcgULaH8=\ngithub.com/opencontainers/selinux v1.11.1/go.mod h1:E5dMC3VPuVvVHDYmi78qvhJp8+M586T4DlDRYpFkyec=\ngithub.com/pelletier/go-toml/v2 v2.2.3 h1:YmeHyLY8mFWbdkNWwpr+qIL2bEqT0o95WSdkNHvL12M=\ngithub.com/pelletier/go-toml/v2 v2.2.3/go.mod h1:MfCQTFTvCcUyyvvwm1+G6H/jORL20Xlb6rzQu9GuUkc=\ngithub.com/petermattis/goid v0.0.0-20240813172612-4fcff4a6cae7 h1:Dx7Ovyv/SFnMFw3fD4oEoeorXc6saIiQ23LrGLth0Gw=\ngithub.com/petermattis/goid v0.0.0-20240813172612-4fcff4a6cae7/go.mod h1:pxMtw7cyUw6B2bRH0ZBANSPg+AoSud1I1iyJHI69jH4=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=\ngithub.com/prometheus/client_golang v1.1.0/go.mod h1:I1FGZT9+L76gKKOs5djB6ezCbFQP1xR9D75/vuwEF3g=\ngithub.com/prometheus/client_golang v1.20.5 h1:cxppBPuYhUnsO6yo/aoRol4L7q7UFfdm+bR9r+8l63Y=\ngithub.com/prometheus/client_golang v1.20.5/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=\ngithub.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=\ngithub.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.6.0/go.mod h1:eBmuwkDJBwy6iBfxCBob6t6dR6ENT/y+J+Zk0j9GMYc=\ngithub.com/prometheus/common v0.55.0 h1:KEi6DK7lXW/m7Ig5i47x0vRzuBsHuvJdi5ee6Y3G1dc=\ngithub.com/prometheus/common v0.55.0/go.mod h1:2SECS4xJG1kd8XF9IcM1gMX6510RAEL65zxzNImwdc8=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.0.3/go.mod h1:4A/X28fw3Fc593LaREMrKMqOKvUAntwMDaekg4FpcdQ=\ngithub.com/prometheus/procfs v0.15.1 h1:YagwOFzUgYfKKHX6Dr+sHT7km/hxC76UB0learggepc=\ngithub.com/prometheus/procfs v0.15.1/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=\ngithub.com/rogpeppe/go-internal v1.13.1 h1:KvO1DLK/DRN07sQ1LQKScxyZJuNnedQ5/wKSR38lUII=\ngithub.com/rogpeppe/go-internal v1.13.1/go.mod h1:uMEvuHeurkdAXX61udpOXGD/AzZDWNMNyH2VO9fmH0o=\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sasha-s/go-deadlock v0.3.5 h1:tNCOEEDG6tBqrNDOX35j/7hL5FcFViG6awUGROb2NsU=\ngithub.com/sasha-s/go-deadlock v0.3.5/go.mod h1:bugP6EGbdGYObIlx7pUZtWqlvo8k9H6vCBBsiChJQ5U=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.8.1/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/smallstep/pkcs7 v0.1.1 h1:x+rPdt2W088V9Vkjho4KtoggyktZJlMduZAtRHm68LU=\ngithub.com/smallstep/pkcs7 v0.1.1/go.mod h1:dL6j5AIz9GHjVEBTXtW+QliALcgM19RtXaTeyxI+AfA=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stefanberger/go-pkcs11uri v0.0.0-20230803200340-78284954bff6 h1:pnnLyeX7o/5aX8qUQ69P/mLojDqwda8hFOCBTmP/6hw=\ngithub.com/stefanberger/go-pkcs11uri v0.0.0-20230803200340-78284954bff6/go.mod h1:39R/xuhNgVhi+K0/zst4TLrJrVmbm6LVgl4A0+ZFS5M=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2 h1:xuMeJ0Sdp5ZMRXx/aWO6RZxdr3beISkG5/G/aIRr3pY=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/syndtr/gocapability v0.0.0-20200815063812-42c35b437635 h1:kdXcSzyDtseVEc4yCz2qF8ZrQvIDBJLl4S1c3GCXmoI=\ngithub.com/syndtr/gocapability v0.0.0-20200815063812-42c35b437635/go.mod h1:hkRG7XYTFWNJGYcbNJQlaLq0fg1yr4J4t/NcTQtrfww=\ngithub.com/tchap/go-patricia/v2 v2.3.1 h1:6rQp39lgIYZ+MHmdEq4xzuk1t7OdC35z/xm0BGhTkes=\ngithub.com/tchap/go-patricia/v2 v2.3.1/go.mod h1:VZRHKAb53DLaG+nA9EaYYiaEx6YztwDlLElMsnSHD4k=\ngithub.com/urfave/cli v1.19.1/go.mod h1:70zkFmudgCuE/ngEzBv17Jvp/497gISqfk5gWijbERA=\ngithub.com/urfave/cli/v2 v2.27.5 h1:WoHEJLdsXr6dDWoJgMq/CboDmyY/8HMMH1fTECbih+w=\ngithub.com/urfave/cli/v2 v2.27.5/go.mod h1:3Sevf16NykTbInEnD0yKkjDAeZDS0A6bzhBH5hrMvTQ=\ngithub.com/vishvananda/netlink v1.3.0 h1:X7l42GfcV4S6E4vHTsw48qbrV+9PVojNfIhZcwQdrZk=\ngithub.com/vishvananda/netlink v1.3.0/go.mod h1:i6NetklAujEcC6fK0JPjT8qSwWyO0HLn4UKG+hGqeJs=\ngithub.com/vishvananda/netns v0.0.4 h1:Oeaw1EM2JMxD51g9uhtC0D7erkIjgmj8+JZc26m1YX8=\ngithub.com/vishvananda/netns v0.0.4/go.mod h1:SpkAiCQRtJ6TvvxPnOSyH3BMl6unz3xZlaprSwhNNJM=\ngithub.com/x448/float16 v0.8.4 h1:qLwI1I70+NjRFUR3zs1JPUCgaCXSh3SW62uAKT1mSBM=\ngithub.com/x448/float16 v0.8.4/go.mod h1:14CWIYCyZA/cWjXOioeEpHeN/83MdbZDRQHoFcYsOfg=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb h1:zGWFAtiMcyryUHoUjUJX0/lt1H2+i2Ka2n+D3DImSNo=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=\ngithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415 h1:EzJWgHovont7NscjpAxXsDA8S8BMYve8Y5+7cuRE7R0=\ngithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415/go.mod h1:GwrjFmJcFw6At/Gs6z4yjiIwzuJ1/+UwLxMQDVQXShQ=\ngithub.com/xeipuuv/gojsonschema v1.2.0 h1:LhYJRs+L4fBtjZUfuSZIKGeVu0QRy8e5Xi7D17UxZ74=\ngithub.com/xeipuuv/gojsonschema v1.2.0/go.mod h1:anYRn/JVcOK2ZgGU+IjEV4nwlhoK5sQluxsYJ78Id3Y=\ngithub.com/xrash/smetrics v0.0.0-20240521201337-686a1a2994c1 h1:gEOO8jv9F4OT7lGCjxCBTO/36wtF6j2nSip77qHd4x4=\ngithub.com/xrash/smetrics v0.0.0-20240521201337-686a1a2994c1/go.mod h1:Ohn+xnUBiLI6FVj/9LpzZWtj1/D6lUovWYBkxHVV3aM=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngo.etcd.io/bbolt v1.3.11 h1:yGEzV1wPz2yVCLsD8ZAiGHhHVlczyC9d1rP43/VCRJ0=\ngo.etcd.io/bbolt v1.3.11/go.mod h1:dksAq7YMXoljX0xu6VF5DMZGbhYYoLUalEiSySYAS4I=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.56.0 h1:yMkBS9yViCc7U7yeLzJPM2XizlfdVvBRSmsQDWu6qc0=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.56.0/go.mod h1:n8MR6/liuGB5EmTETUBeU5ZgqMOlqKRxUaqPQBOANZ8=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.56.0 h1:UP6IpuHFkUgOQL9FFQFrZ+5LiwhhYRbi7VZSIx6Nj5s=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.56.0/go.mod h1:qxuZLtbq5QDtdeSHsS7bcf6EH6uO6jUAgk764zd3rhM=\ngo.opentelemetry.io/otel v1.31.0 h1:NsJcKPIW0D0H3NgzPDHmo0WW6SptzPdqg/L1zsIm2hY=\ngo.opentelemetry.io/otel v1.31.0/go.mod h1:O0C14Yl9FgkjqcCZAsE053C13OaddMYr/hz6clDkEJE=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.31.0 h1:K0XaT3DwHAcV4nKLzcQvwAgSyisUghWoY20I7huthMk=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.31.0/go.mod h1:B5Ki776z/MBnVha1Nzwp5arlzBbE3+1jk+pGmaP5HME=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.31.0 h1:FFeLy03iVTXP6ffeN2iXrxfGsZGCjVx0/4KlizjyBwU=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.31.0/go.mod h1:TMu73/k1CP8nBUpDLc71Wj/Kf7ZS9FK5b53VapRsP9o=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.31.0 h1:lUsI2TYsQw2r1IASwoROaCnjdj2cvC2+Jbxvk6nHnWU=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.31.0/go.mod h1:2HpZxxQurfGxJlJDblybejHB6RX6pmExPNe517hREw4=\ngo.opentelemetry.io/otel/metric v1.31.0 h1:FSErL0ATQAmYHUIzSezZibnyVlft1ybhy4ozRPcF2fE=\ngo.opentelemetry.io/otel/metric v1.31.0/go.mod h1:C3dEloVbLuYoX41KpmAhOqNriGbA+qqH6PQ5E5mUfnY=\ngo.opentelemetry.io/otel/sdk v1.31.0 h1:xLY3abVHYZ5HSfOg3l2E5LUj2Cwva5Y7yGxnSW9H5Gk=\ngo.opentelemetry.io/otel/sdk v1.31.0/go.mod h1:TfRbMdhvxIIr/B2N2LQW2S5v9m3gOQ/08KsbbO5BPT0=\ngo.opentelemetry.io/otel/sdk/metric v1.31.0 h1:i9hxxLJF/9kkvfHppyLL55aW7iIJz4JjxTeYusH7zMc=\ngo.opentelemetry.io/otel/sdk/metric v1.31.0/go.mod h1:CRInTMVvNhUKgSAMbKyTMxqOBC0zgyxzW55lZzX43Y8=\ngo.opentelemetry.io/otel/trace v1.31.0 h1:ffjsj1aRouKewfr85U2aGagJ46+MvodynlQ1HYdmJys=\ngo.opentelemetry.io/otel/trace v1.31.0/go.mod h1:TXZkRk7SM2ZQLtR6eoAWQFIHPvzQ06FJAsO1tJg480A=\ngo.opentelemetry.io/proto/otlp v1.3.1 h1:TrMUixzpM0yuc/znrFTP9MMRh8trP93mkCiDVeXrui0=\ngo.opentelemetry.io/proto/otlp v1.3.1/go.mod h1:0X1WI4de4ZsLrrJNLAQbFeLCm3T7yBkR0XqQ7niQU+8=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.13.0/go.mod h1:y6Z2r+Rw4iayiXXAIxJIDAJ1zMW4yaTpebo8fPOliYc=\ngolang.org/x/crypto v0.19.0/go.mod h1:Iy9bg/ha4yyC70EfRS8jz+B6ybOBKMaSxLj6P6oBDfU=\ngolang.org/x/crypto v0.23.0/go.mod h1:CKFgDieR+mRhux2Lsu27y0fO304Db0wZe70UKqHu0v8=\ngolang.org/x/crypto v0.30.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20241108190413-2d47ceb2692f h1:XdNn9LlyWAhLVp6P/i8QYBW+hlyhrhei9uErw2B5GJo=\ngolang.org/x/exp v0.0.0-20241108190413-2d47ceb2692f/go.mod h1:D5SMRVC3C2/4+F/DB1wZsLRnSNimn2Sp/NPsCrsv8ak=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.12.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.15.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/mod v0.17.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/mod v0.22.0 h1:D4nJWe9zXqHOmWqj4VMOJhvzj7bEZg4wEYa759z1pH4=\ngolang.org/x/mod v0.22.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=\ngolang.org/x/net v0.15.0/go.mod h1:idbUs1IY1+zTqbi8yxTbhexhEEk5ur9LInksu6HrEpk=\ngolang.org/x/net v0.21.0/go.mod h1:bIjVDfnllIU7BJ2DNgfnXvpSvtn8VRwhlsaeUTyUS44=\ngolang.org/x/net v0.25.0/go.mod h1:JkAGAh7GEvH74S6FOH42FLoXpXbE/aqXSrIQjXgsiwM=\ngolang.org/x/net v0.33.0 h1:74SYHlV8BIgHIFC/LrYkOGIwL19eTYXQ5wc6TBuO36I=\ngolang.org/x/net v0.33.0/go.mod h1:HXLR5J+9DxmrqMwG9qjGCxZ+zKXxBru04zlTvWlWuN4=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.23.0 h1:PbgcYx2W7i4LvjJWEbf0ngHV6qJYr86PkAV3bXdLEbs=\ngolang.org/x/oauth2 v0.23.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.3.0/go.mod h1:FU7BRWz2tNW+3quACPkgCx/L+uEAv1htQ0V83Z9Rj+Y=\ngolang.org/x/sync v0.6.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sync v0.7.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190801041406-cbf593c0f2f3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191115151921-52ab43148777/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.2.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.10.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.12.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.20.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.29.0 h1:TPYlXGxvx1MGTn2GiZDhnjPA9wZzZeGKHHmKhHYvgaU=\ngolang.org/x/sys v0.29.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/telemetry v0.0.0-20240228155512-f48c80bd79b2/go.mod h1:TeRTkGYfJXctD9OcfyVLyj2J3IxLnKwHJR8f4D8a3YE=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=\ngolang.org/x/term v0.12.0/go.mod h1:owVbMEjm3cBLCHdkQu9b1opXd4ETQWc3BhuQGKgXgvU=\ngolang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=\ngolang.org/x/term v0.20.0/go.mod h1:8UkIAJTvZgivsXaD6/pH6U9ecQzZ45awqEOzuCvwpFY=\ngolang.org/x/term v0.27.0 h1:WP60Sv1nlK1T6SupCHbXzSaN0b9wUmsPoRS9b61A23Q=\ngolang.org/x/term v0.27.0/go.mod h1:iMsnZpn0cago0GOrHO2+Y7u7JPn5AylBrcoWkElMTSM=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.13.0/go.mod h1:TvPlkZtksWOMsz7fbANvkp4WM8x/WCo/om8BMLbz+aE=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/text v0.15.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.3.0 h1:rg5rLMjNzMS1RkNLzCG38eapWhnYLFYXDXj2gOlr8j4=\ngolang.org/x/time v0.3.0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/tools v0.13.0/go.mod h1:HvlwmtVNQAhOuCjW7xxvovg8wbNq7LwfXh/k7wXUl58=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d/go.mod h1:aiJjzUbINMkxbQROHiO6hDPo2LHcIPhhQsa9DLh0yGk=\ngolang.org/x/tools v0.27.0 h1:qEKojBykQkQ4EynWy4S8Weg69NumxKdn40Fce3uc/8o=\ngolang.org/x/tools v0.27.0/go.mod h1:sUi0ZgbwW9ZPAq26Ekut+weQPR5eIM6GQLQ1Yjm1H0Q=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241015192408-796eee8c2d53 h1:fVoAXEKA4+yufmbdVYv+SE73+cPZbbbe8paLsHfkK+U=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241015192408-796eee8c2d53/go.mod h1:riSXTwQ4+nqmPGtobMFyW5FqVAmIs0St6VPp4Ug7CE4=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241021214115-324edc3d5d38 h1:zciRKQ4kBpFgpfC5QQCVtnnNAcLIqweL7plyZRQHVpI=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241021214115-324edc3d5d38/go.mod h1:GX3210XPVPUjJbTUbvwI8f2IpZDMZuPJWDzDuebbviI=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.69.2 h1:U3S9QEtbXC0bYNvRtcoklF3xGtLViumSYxWykJS+7AU=\ngoogle.golang.org/grpc v1.69.2/go.mod h1:vyjdE6jLBI76dgpDojsFGNaHlxdjXN9ghpnd2o7JGZ4=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.36.1 h1:yBPeRvTftaleIgM3PZ/WBIZ7XM/eEYAaEyCwvyjq/gk=\ngoogle.golang.org/protobuf v1.36.1/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/inf.v0 v0.9.1 h1:73M5CoZyi3ZLMOyDlQh031Cx6N9NDJ2Vvfl76EDAgDc=\ngopkg.in/inf.v0 v0.9.1/go.mod h1:cWUDdTG/fYaXco+Dcufb5Vnc6Gp2YChqWtbxRZE0mXw=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nk8s.io/api v0.31.3 h1:umzm5o8lFbdN/hIXbrK9oRpOproJO62CV1zqxXrLgk8=\nk8s.io/api v0.31.3/go.mod h1:UJrkIp9pnMOI9K2nlL6vwpxRzzEX5sWgn8kGQe92kCE=\nk8s.io/apimachinery v0.31.3 h1:6l0WhcYgasZ/wk9ktLq5vLaoXJJr5ts6lkaQzgeYPq4=\nk8s.io/apimachinery v0.31.3/go.mod h1:rsPdaZJfTfLsNJSQzNHQvYoTmxhoOEofxtOsF3rtsMo=\nk8s.io/apiserver v0.31.3 h1:+1oHTtCB+OheqFEz375D0IlzHZ5VeQKX1KGXnx+TTuY=\nk8s.io/apiserver v0.31.3/go.mod h1:PrxVbebxrxQPFhJk4powDISIROkNMKHibTg9lTRQ0Qg=\nk8s.io/client-go v0.31.3 h1:CAlZuM+PH2cm+86LOBemaJI/lQ5linJ6UFxKX/SoG+4=\nk8s.io/client-go v0.31.3/go.mod h1:2CgjPUTpv3fE5dNygAr2NcM8nhHzXvxB8KL5gYc3kJs=\nk8s.io/component-base v0.31.3 h1:DMCXXVx546Rfvhj+3cOm2EUxhS+EyztH423j+8sOwhQ=\nk8s.io/component-base v0.31.3/go.mod h1:xME6BHfUOafRgT0rGVBGl7TuSg8Z9/deT7qq6w7qjIU=\nk8s.io/cri-api v0.31.3 h1:dsZXzrGrCEwHjsTDlAV7rutEplpMLY8bfNRMIqrtXjo=\nk8s.io/cri-api v0.31.3/go.mod h1:Po3TMAYH/+KrZabi7QiwQI4a692oZcUOUThd/rqwxrI=\nk8s.io/klog/v2 v2.130.1 h1:n9Xl7H1Xvksem4KFG4PYbdQCQxqc/tTUyrgXaOhHSzk=\nk8s.io/klog/v2 v2.130.1/go.mod h1:3Jpz1GvMt720eyJH1ckRHK1EDfpxISzJ7I9OYgaDtPE=\nk8s.io/kube-openapi v0.0.0-20240228011516-70dd3763d340 h1:BZqlfIlq5YbRMFko6/PM7FjZpUb45WallggurYhKGag=\nk8s.io/kube-openapi v0.0.0-20240228011516-70dd3763d340/go.mod h1:yD4MZYeKMBwQKVht279WycxKyM84kkAx2DPrTXaeb98=\nk8s.io/kubelet v0.31.3 h1:DIXRAmvVGp42mV2vpA1GCLU6oO8who0/vp3Oq6kSpbI=\nk8s.io/kubelet v0.31.3/go.mod h1:KSdbEfNy5VzqUlAHlytA/fH12s+sE1u8fb/8JY9sL/8=\nk8s.io/utils v0.0.0-20240711033017-18e509b52bc8 h1:pUdcCO1Lk/tbT5ztQWOBi5HBgbBP1J8+AsQnQCKsi8A=\nk8s.io/utils v0.0.0-20240711033017-18e509b52bc8/go.mod h1:OLgZIPagt7ERELqWJFomSt595RzquPNLL48iOWgYOg0=\nsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd h1:EDPBXCAspyGV4jQlpZSudPeMmr1bNJefnuqLsRAsHZo=\nsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd/go.mod h1:B8JuhiUyNFVKdsE8h686QcCxMaH6HrOAZj4vswFpcB0=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.1 h1:150L+0vs/8DA78h1u02ooW1/fFq/Lwr+sGiqlzvrtq4=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.1/go.mod h1:N8hJocpFajUSSeSJ9bOZ77VzejKZaXsTtZo4/u7Io08=\nsigs.k8s.io/yaml v1.4.0 h1:Mk1wCc2gy/F0THH0TAp1QYyJNzRm2KCLy3o5ASXVI5E=\nsigs.k8s.io/yaml v1.4.0/go.mod h1:Ejl7/uTz7PSA4eKMyQCUTnhZYNmLIl+5c2lQPGR2BPY=\ntags.cncf.io/container-device-interface v0.8.0 h1:8bCFo/g9WODjWx3m6EYl3GfUG31eKJbaggyBDxEldRc=\ntags.cncf.io/container-device-interface v0.8.0/go.mod h1:Apb7N4VdILW0EVdEMRYXIDVRZfNJZ+kmEUss2kRRQ6Y=\ntags.cncf.io/container-device-interface/specs-go v0.8.0 h1:QYGFzGxvYK/ZLMrjhvY0RjpUavIn4KcmRmVP/JjdBTA=\ntags.cncf.io/container-device-interface/specs-go v0.8.0/go.mod h1:BhJIkjjPh4qpys+qm4DAYtUyryaTDg9zris+AczXyws=\n"
        },
        {
          "name": "integration",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "releases",
          "type": "tree",
          "content": null
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        },
        {
          "name": "version",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}