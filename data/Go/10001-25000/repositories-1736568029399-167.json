{
  "metadata": {
    "timestamp": 1736568029399,
    "page": 167,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cheat/cheat",
      "stars": 12546,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.009765625,
          "content": "dist\ntags\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.8759765625,
          "content": "CONTRIBUTING\n============\nDo you want to contribute to `cheat`? There are a few ways to help:\n\n#### Submit a cheatsheet ####\nDo you have a witty bash one-liner to share? [Open a pull-request][pr] against\nthe [cheatsheets][] repository. (The `cheat` executable source code lives in\n[cheat/cheat][cheat]. Cheatsheet content lives in\n[cheat/cheatsheets][cheatsheets].)\n\n#### Report a bug ####\nDid you find a bug? Report it in the [issue tracker][issues]. (But before you\ndo, please look through the open issues to make sure that it hasn't already\n been reported.)\n\n#### Add a feature ####\nDo you have a feature that you'd like to contribute? Propose it in the [issue\ntracker][issues] to discuss with the maintainer whether it would be considered\nfor merging.\n\n`cheat` is mostly mature and feature-complete, but may still have some room for\nnew features. See [HACKING.md][hacking] for a quick-start guide to `cheat`\ndevelopment.\n\n#### Add documentation ####\nDid you encounter features, bugs, edge-cases, use-cases, or environment\nconsiderations that were undocumented or under-documented? Add them to the\n[wiki][]. (You may also open a pull-request against the `README`, if\nappropriate.)\n\nDo you enjoy technical writing or proofreading? Help keep the documentation\nerror-free and well-organized.\n\n#### Spread the word ####\nAre you unable to do the above, but still want to contribute? You can help\n`cheat` simply by telling others about it. Share it with friends and coworkers\nthat might benefit from using it.\n\n#### Pull Requests ####\nPlease open all pull-requests against the `develop` branch.\n\n\n[cheat]: https://github.com/cheat/cheat\n[cheatsheets]: https://github.com/cheat/cheatsheets\n[hacking]: HACKING.md\n[issues]: https://github.com/cheat/cheat/issues \n[pr]: https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request-from-a-fork\n[wiki]: https://github.com/cheat/cheat/wiki\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.23046875,
          "content": "# NB: this image isn't used anywhere in the build pipeline. It exists to\n# conveniently facilitate ad-hoc experimentation in a sandboxed environment\n# during development.\nFROM golang:1.15-alpine\n\nRUN apk add git less make\n\nWORKDIR /app\n"
        },
        {
          "name": "HACKING.md",
          "type": "blob",
          "size": 1.6376953125,
          "content": "Hacking\n=======\nThe following is a quickstart guide for developing `cheat`.\n\n## 1. Install system dependencies\nBefore you begin, you must install a handful of system dependencies. The\nfollowing are required, and must be available on your `PATH`:\n\n- `git`\n- `go` (>= 1.17 is recommended)\n- `make`\n\nThe following dependencies are optional:\n- `docker`\n- `pandoc` (necessary to generate a `man` page)\n\n## 2. Install utility applications\nRun `make setup` to install `scc` and `revive`, which are used by various\n`make` targets.\n\n## 3. Development workflow\nAfter your environment has been configured, your development workflow will\nresemble the following:\n\n1. Make changes to the `cheat` source code.\n2. Run `make test` to run unit-tests.\n3. Fix compiler errors and failing tests as necessary.\n4. Run `make`. A `cheat` executable will be written to the `dist` directory.\n5. Use the new executable by running `dist/cheat <command>`.\n6. Run `make install` to install `cheat` to your `PATH`.\n7. Run `make build-release` to build cross-platform binaries in `dist`.\n8. Run `make clean` to clean the `dist` directory when desired.\n\nYou may run `make help` to see a list of available `make` commands.\n\n### Developing with docker\nIt may be useful to test your changes within a pristine environment. An\nAlpine-based docker container has been provided for that purpose.\n\nIf you would like to build the docker container, run:\n```sh\nmake docker-setup\n```\n\nTo shell into the container, run:\n```sh\nmake docker-sh\n```\n\nThe `cheat` source code will be mounted at `/app` within the container.\n\nIf you would like to destroy this container, you may run:\n```sh\nmake distclean\n```\n\n[go]: https://go.dev/\n"
        },
        {
          "name": "INSTALLING.md",
          "type": "blob",
          "size": 2.9091796875,
          "content": "Installing\n==========\n`cheat` has no runtime dependencies. As such, installing it is generally\nstraightforward. There are a few methods available:\n\n### Install manually\n#### Unix-like\nOn Unix-like systems, you may simply paste the following snippet into your terminal:\n\n```sh\ncd /tmp \\\n  && wget https://github.com/cheat/cheat/releases/download/4.4.2/cheat-linux-amd64.gz \\\n  && gunzip cheat-linux-amd64.gz \\\n  && chmod +x cheat-linux-amd64 \\\n  && sudo mv cheat-linux-amd64 /usr/local/bin/cheat\n```\n\nYou may need to need to change the version number (`4.4.2`) and the archive\n(`cheat-linux-amd64.gz`) depending on your platform.\n\nSee the [releases page][releases] for a list of supported platforms.\n\n#### Windows\nTODO: community support is requested here. Please open a PR if you'd like to\ncontribute installation instructions for Windows.\n\n### Install via `go install`\nIf you have `go` version `>=1.17` available on your `PATH`, you can install\n`cheat` via `go install`:\n\n```sh\ngo install github.com/cheat/cheat/cmd/cheat@latest\n```\n\n### Install via package manager\nSeveral community-maintained packages are also available:\n\nPackage manager  | Package(s)\n---------------- | -----------\naur              | [cheat][pkg-aur-cheat], [cheat-bin][pkg-aur-cheat-bin]\nbrew             | [cheat][pkg-brew]\ndocker           | [docker-cheat][pkg-docker]\nnix              | [nixos.cheat][pkg-nix]\nsnap             | [cheat][pkg-snap]\n\n<!--[pacman][]       |-->\n\n## Configuring\nThree things must be done before you can use `cheat`:\n1. A config file must be generated\n2. [`cheatpaths`][cheatpaths] must be configured\n3. [Community cheatsheets][community] must be downloaded\n\nOn first run, `cheat` will run an installer that will do all of the above\nautomatically. After the installer is complete, it is strongly advised that you\nview the configuration file that was generated, as you may want to change some\nof its default values (to enable colorization, change the paginator, etc).\n\n### conf.yml ###\n`cheat` is configured by a YAML file that will be auto-generated on first run.\n\nBy default, the config file is assumed to exist on an XDG-compliant\nconfiguration path like `~/.config/cheat/conf.yml`. If you would like to store\nit elsewhere, you may export a `CHEAT_CONFIG_PATH` environment variable that\nspecifies its path:\n\n```sh\nexport CHEAT_CONFIG_PATH=\"~/.dotfiles/cheat/conf.yml\"\n```\n\n[cheatpaths]:        README.md#cheatpaths\n[community]:         https://github.com/cheat/cheatsheets/\n[pkg-aur-cheat-bin]: https://aur.archlinux.org/packages/cheat-bin\n[pkg-aur-cheat]:     https://aur.archlinux.org/packages/cheat\n[pkg-brew]:          https://formulae.brew.sh/formula/cheat \n[pkg-docker]:        https://github.com/bannmann/docker-cheat\n[pkg-nix]:           https://search.nixos.org/packages?channel=unstable&show=cheat&from=0&size=50&sort=relevance&type=packages&query=cheat \n[pkg-snap]:          https://snapcraft.io/cheat\n[releases]:          https://github.com/cheat/cheat/releases\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.037109375,
          "content": "Copyright 2013 Christopher Allen Lane\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 5.4931640625,
          "content": "# paths\nmakefile := $(realpath $(lastword $(MAKEFILE_LIST)))\ncmd_dir  := ./cmd/cheat\ndist_dir := ./dist\n\n# executables\nCAT    := cat\nCOLUMN := column\nCTAGS  := ctags\nDOCKER := docker\nGO     := go\nGREP   := grep\nGZIP   := gzip --best\nLINT   := revive\nMAN    := man\nMKDIR  := mkdir -p\nPANDOC := pandoc\nRM     := rm\nSCC    := scc\nSED    := sed\nSORT   := sort\nZIP    := zip -m\n\ndocker_image := cheat-devel:latest\n\n# build flags\nBUILD_FLAGS  := -ldflags=\"-s -w\" -mod vendor -trimpath\nGOBIN        :=\nTMPDIR       := /tmp\n\n# release binaries\nreleases :=                        \\\n\t$(dist_dir)/cheat-darwin-amd64 \\\n\t$(dist_dir)/cheat-linux-386    \\\n\t$(dist_dir)/cheat-linux-amd64  \\\n\t$(dist_dir)/cheat-linux-arm5   \\\n\t$(dist_dir)/cheat-linux-arm6   \\\n\t$(dist_dir)/cheat-linux-arm64  \\\n\t$(dist_dir)/cheat-linux-arm7   \\\n\t$(dist_dir)/cheat-netbsd-amd64  \\\n\t$(dist_dir)/cheat-openbsd-amd64  \\\n\t$(dist_dir)/cheat-solaris-amd64  \\\n\t$(dist_dir)/cheat-windows-amd64.exe\n\n## build: build an executable for your architecture\n.PHONY: build\nbuild: | clean $(dist_dir) generate fmt lint vet vendor man\n\t$(GO) build $(BUILD_FLAGS) -o $(dist_dir)/cheat $(cmd_dir)\n\n## build-release: build release executables\n.PHONY: build-release\nbuild-release: $(releases)\n\n# cheat-darwin-amd64\n$(dist_dir)/cheat-darwin-amd64: prepare\n\tGOARCH=amd64 GOOS=darwin \\\n\t$(GO) build $(BUILD_FLAGS) -o $@ $(cmd_dir) && $(GZIP) $@ && chmod -x $@.gz\n\n# cheat-linux-386\n$(dist_dir)/cheat-linux-386: prepare\n\tGOARCH=386 GOOS=linux \\\n\t$(GO) build $(BUILD_FLAGS) -o $@ $(cmd_dir) && $(GZIP) $@ && chmod -x $@.gz\n\n# cheat-linux-amd64\n$(dist_dir)/cheat-linux-amd64: prepare\n\tGOARCH=amd64 GOOS=linux \\\n\t$(GO) build $(BUILD_FLAGS) -o $@ $(cmd_dir) && $(GZIP) $@ && chmod -x $@.gz\n\n# cheat-linux-arm5\n$(dist_dir)/cheat-linux-arm5: prepare\n\tGOARCH=arm GOOS=linux GOARM=5 \\\n\t$(GO) build $(BUILD_FLAGS) -o $@ $(cmd_dir) && $(GZIP) $@ && chmod -x $@.gz\n\n# cheat-linux-arm6\n$(dist_dir)/cheat-linux-arm6: prepare\n\tGOARCH=arm GOOS=linux GOARM=6 \\\n\t$(GO) build $(BUILD_FLAGS) -o $@ $(cmd_dir) && $(GZIP) $@ && chmod -x $@.gz\n\n# cheat-linux-arm7\n$(dist_dir)/cheat-linux-arm7: prepare\n\tGOARCH=arm GOOS=linux GOARM=7 \\\n\t$(GO) build $(BUILD_FLAGS) -o $@ $(cmd_dir) && $(GZIP) $@ && chmod -x $@.gz\n\t\n# cheat-linux-arm64\n$(dist_dir)/cheat-linux-arm64: prepare\n\tGOARCH=arm64 GOOS=linux \\\n\t$(GO) build $(BUILD_FLAGS) -o $@ $(cmd_dir) && $(GZIP) $@ && chmod -x $@.gz\n\n# cheat-netbsd-amd64\n$(dist_dir)/cheat-netbsd-amd64: prepare\n\tGOARCH=amd64 GOOS=netbsd \\\n\t$(GO) build $(BUILD_FLAGS) -o $@ $(cmd_dir) && $(GZIP) $@ && chmod -x $@.gz\n\n# cheat-openbsd-amd64\n$(dist_dir)/cheat-openbsd-amd64: prepare\n\tGOARCH=amd64 GOOS=openbsd \\\n\t$(GO) build $(BUILD_FLAGS) -o $@ $(cmd_dir) && $(GZIP) $@ && chmod -x $@.gz\n\n# cheat-plan9-amd64\n$(dist_dir)/cheat-plan9-amd64: prepare\n\tGOARCH=amd64 GOOS=plan9 \\\n\t$(GO) build $(BUILD_FLAGS) -o $@ $(cmd_dir) && $(GZIP) $@ && chmod -x $@.gz\n\n# cheat-solaris-amd64\n$(dist_dir)/cheat-solaris-amd64: prepare\n\tGOARCH=amd64 GOOS=solaris \\\n\t$(GO) build $(BUILD_FLAGS) -o $@ $(cmd_dir) && $(GZIP) $@ && chmod -x $@.gz\n\n# cheat-windows-amd64\n$(dist_dir)/cheat-windows-amd64.exe: prepare\n\tGOARCH=amd64 GOOS=windows \\\n\t$(GO) build $(BUILD_FLAGS) -o $@ $(cmd_dir) && $(ZIP) $@.zip $@ -j\n\n# ./dist\n$(dist_dir):\n\t$(MKDIR) $(dist_dir)\n\n.PHONY: generate\ngenerate:\n\t$(GO) generate $(cmd_dir)\n\n## install: build and install cheat on your PATH\n.PHONY: install\ninstall: build\n\t$(GO) install $(BUILD_FLAGS) $(GOBIN) $(cmd_dir) \n\n## clean: remove compiled executables\n.PHONY: clean\nclean:\n\t$(RM) -f $(dist_dir)/* $(cmd_dir)/str_config.go $(cmd_dir)/str_usage.go\n\n## distclean: remove the tags file\n.PHONY: distclean\ndistclean:\n\t$(RM) -f tags\n\t@$(DOCKER) image rm -f $(docker_image)\n\n## setup: install revive (linter) and scc (sloc tool)\n.PHONY: setup\nsetup:\n\tGO111MODULE=off $(GO) get -u github.com/boyter/scc github.com/mgechev/revive\n\n## sloc: count \"semantic lines of code\"\n.PHONY: sloc\nsloc:\n\t$(SCC) --exclude-dir=vendor\n\n## tags: build a tags file\n.PHONY: tags\ntags:\n\t$(CTAGS) -R --exclude=vendor --languages=go\n\n## man: build a man page\n# NB: pandoc may not be installed, so we're ignoring this error on failure\n.PHONY: man\nman:\n\t-$(PANDOC) -s -t man doc/cheat.1.md -o doc/cheat.1\n\n## vendor: download, tidy, and verify dependencies\n.PHONY: vendor\nvendor:\n\t$(GO) mod vendor && $(GO) mod tidy && $(GO) mod verify\n\n## vendor-update: update vendored dependencies\nvendor-update:\n\t$(GO) get -t -u ./... && $(GO) mod vendor && $(GO) mod tidy && $(GO) mod verify\n\n## fmt: run go fmt\n.PHONY: fmt\nfmt:\n\t$(GO) fmt ./...\n\n## lint: lint go source files\n.PHONY: lint\nlint: vendor\n\t$(LINT) -exclude vendor/... ./...\n\n## vet: vet go source files\n.PHONY: vet\nvet:\n\t$(GO) vet ./...\n\n## test: run unit-tests\n.PHONY: test\ntest: \n\t$(GO) test ./...\n\n## coverage: generate a test coverage report\n.PHONY: coverage\ncoverage:\n\t$(GO) test ./... -coverprofile=$(TMPDIR)/cheat-coverage.out && \\\n\t$(GO) tool cover -html=$(TMPDIR)/cheat-coverage.out\n\n## check: format, lint, vet, vendor, and run unit-tests\n.PHONY: check\ncheck: | vendor fmt lint vet test\n\n.PHONY: prepare\nprepare: | clean $(dist_dir) generate vendor fmt lint vet test\n\n## docker-setup: create a docker image for use during development\n.PHONY: docker-setup\ndocker-setup:\n\t$(DOCKER) build  -t $(docker_image) -f Dockerfile .\n\n## docker-sh: shell into the docker development container\n.PHONY: docker-sh\ndocker-sh:\n\t$(DOCKER) run -v $(shell pwd):/app -ti $(docker_image) /bin/ash\n\n## help: display this help text\n.PHONY: help\nhelp:\n\t@$(CAT) $(makefile) | \\\n\t$(SORT)             | \\\n\t$(GREP) \"^##\"       | \\\n\t$(SED) 's/## //g'   | \\\n\t$(COLUMN) -t -s ':'\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.1083984375,
          "content": "![Workflow status](https://github.com/cheat/cheat/actions/workflows/build.yml/badge.svg)\n\n\ncheat\n=====\n\n`cheat` allows you to create and view interactive cheatsheets on the\ncommand-line. It was designed to help remind \\*nix system administrators of\noptions for commands that they use frequently, but not frequently enough to\nremember.\n\n![The obligatory xkcd](http://imgs.xkcd.com/comics/tar.png 'The obligatory xkcd')\n\nUse `cheat` with [cheatsheets][].\n\n\nExample\n-------\nThe next time you're forced to disarm a nuclear weapon without consulting\nGoogle, you may run:\n\n```sh\ncheat tar\n```\n\nYou will be presented with a cheatsheet resembling the following:\n\n```sh\n# To extract an uncompressed archive:\ntar -xvf '/path/to/foo.tar'\n\n# To extract a .gz archive:\ntar -xzvf '/path/to/foo.tgz'\n\n# To create a .gz archive:\ntar -czvf '/path/to/foo.tgz' '/path/to/foo/'\n\n# To extract a .bz2 archive:\ntar -xjvf '/path/to/foo.tgz'\n\n# To create a .bz2 archive:\ntar -cjvf '/path/to/foo.tgz' '/path/to/foo/'\n```\n\nUsage\n-----\nTo view a cheatsheet:\n\n```sh\ncheat tar      # a \"top-level\" cheatsheet\ncheat foo/bar  # a \"nested\" cheatsheet\n```\n\nTo edit a cheatsheet:\n\n```sh\ncheat -e tar     # opens the \"tar\" cheatsheet for editing, or creates it if it does not exist\ncheat -e foo/bar # nested cheatsheets are accessed like this\n```\n\nTo view the configured cheatpaths:\n\n```sh\ncheat -d\n```\n\nTo list all available cheatsheets:\n\n```sh\ncheat -l\n```\n\nTo list all cheatsheets that are tagged with \"networking\":\n\n```sh\ncheat -l -t networking\n```\n\nTo list all cheatsheets on the \"personal\" path:\n\n```sh\ncheat -l -p personal\n```\n\nTo search for the phrase \"ssh\" among cheatsheets:\n\n```sh\ncheat -s ssh\n```\n\nTo search (by regex) for cheatsheets that contain an IP address:\n\n```sh\ncheat -r -s '(?:[0-9]{1,3}\\.){3}[0-9]{1,3}'\n```\n\nFlags may be combined in intuitive ways. Example: to search sheets on the\n\"personal\" cheatpath that are tagged with \"networking\" and match a regex:\n\n```sh\ncheat -p personal -t networking --regex -s '(?:[0-9]{1,3}\\.){3}[0-9]{1,3}'\n```\n\n\n\nInstalling\n----------\nFor installation and configuration instructions, see [INSTALLING.md][].\n\nCheatsheets\n-----------\nCheatsheets are plain-text files with no file extension, and are named\naccording to the command used to view them:\n\n```sh\ncheat tar     # file is named \"tar\"\ncheat foo/bar # file is named \"bar\", in a \"foo\" subdirectory\n```\n\nCheatsheet text may optionally be preceeded by a YAML frontmatter header that\nassigns tags and specifies syntax:\n\n```\n---\nsyntax: javascript\ntags: [ array, map ]\n---\n// To map over an array:\nconst squares = [1, 2, 3, 4].map(x => x * x);\n```\n\nThe `cheat` executable includes no cheatsheets, but [community-sourced\ncheatsheets are available][cheatsheets]. You will be asked if you would like to\ninstall the community-sourced cheatsheets the first time you run `cheat`.\n\nCheatpaths\n----------\nCheatsheets are stored on \"cheatpaths\", which are directories that contain\ncheatsheets. Cheatpaths are specified in the `conf.yml` file.\n\nIt can be useful to configure `cheat` against multiple cheatpaths. A common\npattern is to store cheatsheets from multiple repositories on individual\ncheatpaths:\n\n```yaml\n# conf.yml:\n# ...\ncheatpaths:\n  - name: community                   # a name for the cheatpath\n    path: ~/documents/cheat/community # the path's location on the filesystem\n    tags: [ community ]               # these tags will be applied to all sheets on the path\n    readonly: true                    # if true, `cheat` will not create new cheatsheets here\n\n  - name: personal\n    path: ~/documents/cheat/personal  # this is a separate directory and repository than above\n    tags: [ personal ]\n    readonly: false                   # new sheets may be written here\n# ...\n```\n\nThe `readonly` option instructs `cheat` not to edit (or create) any cheatsheets\non the path. This is useful to prevent merge-conflicts from arising on upstream\ncheatsheet repositories.\n\nIf a user attempts to edit a cheatsheet on a read-only cheatpath, `cheat` will\ntransparently copy that sheet to a writeable directory before opening it for\nediting.\n\n### Directory-scoped Cheatpaths ###\nAt times, it can be useful to closely associate cheatsheets with a directory on\nyour filesystem. `cheat` facilitates this by searching for a `.cheat` folder in\nthe current working directory. If found, the `.cheat` directory will\n(temporarily) be added to the cheatpaths.\n\nAutocompletion\n--------------\nShell autocompletion is currently available for `bash`, `fish`, and `zsh`. Copy\nthe relevant [completion script][completions] into the appropriate directory on\nyour filesystem to enable autocompletion. (This directory will vary depending\non operating system and shell specifics.)\n\nAdditionally, `cheat` supports enhanced autocompletion via integration with\n[fzf][]. To enable `fzf` integration:\n\n1. Ensure that `fzf` is available on your `$PATH`\n2. Set an envvar: `export CHEAT_USE_FZF=true`\n\n[INSTALLING.md]: INSTALLING.md\n[Releases]:      https://github.com/cheat/cheat/releases\n[cheatsheets]:   https://github.com/cheat/cheatsheets\n[completions]:   https://github.com/cheat/cheat/tree/master/scripts\n[fzf]:           https://github.com/junegunn/fzf\n[go]:            https://golang.org\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "configs",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.4267578125,
          "content": "module github.com/cheat/cheat\n\ngo 1.19\n\nrequire (\n\tgithub.com/alecthomas/chroma/v2 v2.12.0\n\tgithub.com/davecgh/go-spew v1.1.1\n\tgithub.com/docopt/docopt-go v0.0.0-20180111231733-ee0de3bc6815\n\tgithub.com/go-git/go-git/v5 v5.11.0\n\tgithub.com/mattn/go-isatty v0.0.20\n\tgithub.com/mitchellh/go-homedir v1.1.0\n\tgopkg.in/yaml.v3 v3.0.1\n)\n\nrequire (\n\tdario.cat/mergo v1.0.0 // indirect\n\tgithub.com/Microsoft/go-winio v0.6.1 // indirect\n\tgithub.com/ProtonMail/go-crypto v0.0.0-20230923063757-afb1ddc0824c // indirect\n\tgithub.com/cloudflare/circl v1.3.7 // indirect\n\tgithub.com/cyphar/filepath-securejoin v0.2.4 // indirect\n\tgithub.com/dlclark/regexp2 v1.10.0 // indirect\n\tgithub.com/emirpasic/gods v1.18.1 // indirect\n\tgithub.com/go-git/gcfg v1.5.1-0.20230307220236-3a3c6141e376 // indirect\n\tgithub.com/go-git/go-billy/v5 v5.5.0 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/jbenet/go-context v0.0.0-20150711004518-d14ea06fba99 // indirect\n\tgithub.com/kevinburke/ssh_config v1.2.0 // indirect\n\tgithub.com/pjbgf/sha1cd v0.3.0 // indirect\n\tgithub.com/sergi/go-diff v1.3.1 // indirect\n\tgithub.com/skeema/knownhosts v1.2.1 // indirect\n\tgithub.com/xanzy/ssh-agent v0.3.3 // indirect\n\tgolang.org/x/crypto v0.17.0 // indirect\n\tgolang.org/x/mod v0.14.0 // indirect\n\tgolang.org/x/net v0.19.0 // indirect\n\tgolang.org/x/sys v0.15.0 // indirect\n\tgolang.org/x/tools v0.16.1 // indirect\n\tgopkg.in/warnings.v0 v0.1.2 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 12.7080078125,
          "content": "dario.cat/mergo v1.0.0 h1:AGCNq9Evsj31mOgNPcLyXc+4PNABt905YmuqPYYpBWk=\ndario.cat/mergo v1.0.0/go.mod h1:uNxQE+84aUszobStD9th8a29P2fMDhsBdgRYvZOxGmk=\ngithub.com/Microsoft/go-winio v0.5.2/go.mod h1:WpS1mjBmmwHBEWmogvA2mj8546UReBk4v8QkMxJ6pZY=\ngithub.com/Microsoft/go-winio v0.6.1 h1:9/kr64B9VUZrLm5YYwbGtUJnMgqWVOdUAXu6Migciow=\ngithub.com/Microsoft/go-winio v0.6.1/go.mod h1:LRdKpFKfdobln8UmuiYcKPot9D2v6svN5+sAH+4kjUM=\ngithub.com/ProtonMail/go-crypto v0.0.0-20230923063757-afb1ddc0824c h1:kMFnB0vCcX7IL/m9Y5LO+KQYv+t1CQOiFe6+SV2J7bE=\ngithub.com/ProtonMail/go-crypto v0.0.0-20230923063757-afb1ddc0824c/go.mod h1:EjAoLdwvbIOoOQr3ihjnSoLZRtE8azugULFRteWMNc0=\ngithub.com/alecthomas/assert/v2 v2.2.1 h1:XivOgYcduV98QCahG8T5XTezV5bylXe+lBxLG2K2ink=\ngithub.com/alecthomas/chroma/v2 v2.12.0 h1:Wh8qLEgMMsN7mgyG8/qIpegky2Hvzr4By6gEF7cmWgw=\ngithub.com/alecthomas/chroma/v2 v2.12.0/go.mod h1:4TQu7gdfuPjSh76j78ietmqh9LiurGF0EpseFXdKMBw=\ngithub.com/alecthomas/repr v0.2.0 h1:HAzS41CIzNW5syS8Mf9UwXhNH1J9aix/BvDRf1Ml2Yk=\ngithub.com/anmitsu/go-shlex v0.0.0-20200514113438-38f4b401e2be h1:9AeTilPcZAjCFIImctFaOjnTIavg87rW78vTPkQqLI8=\ngithub.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5 h1:0CwZNZbxp69SHPdPJAN/hZIm0C4OItdklCFmMRWYpio=\ngithub.com/bwesterb/go-ristretto v1.2.3/go.mod h1:fUIoIZaG73pV5biE2Blr2xEzDoMj7NFEuV9ekS419A0=\ngithub.com/cloudflare/circl v1.3.3/go.mod h1:5XYMA4rFBvNIrhs50XuiBJ15vF2pZn4nnUKZrLbUZFA=\ngithub.com/cloudflare/circl v1.3.7 h1:qlCDlTPz2n9fu58M0Nh1J/JzcFpfgkFHHX3O35r5vcU=\ngithub.com/cloudflare/circl v1.3.7/go.mod h1:sRTcRWXGLrKw6yIGJ+l7amYJFfAXbZG0kBSc8r4zxgA=\ngithub.com/cyphar/filepath-securejoin v0.2.4 h1:Ugdm7cg7i6ZK6x3xDF1oEu1nfkyfH53EtKeQYTC3kyg=\ngithub.com/cyphar/filepath-securejoin v0.2.4/go.mod h1:aPGpWjXOXUn2NCNjFvBE6aRxGGx79pTxQpKOJNYHHl4=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dlclark/regexp2 v1.10.0 h1:+/GIL799phkJqYW+3YbOd8LCcbHzT0Pbo8zl70MHsq0=\ngithub.com/dlclark/regexp2 v1.10.0/go.mod h1:DHkYz0B9wPfa6wondMfaivmHpzrQ3v9q8cnmRbL6yW8=\ngithub.com/docopt/docopt-go v0.0.0-20180111231733-ee0de3bc6815 h1:bWDMxwH3px2JBh6AyO7hdCn/PkvCZXii8TGj7sbtEbQ=\ngithub.com/docopt/docopt-go v0.0.0-20180111231733-ee0de3bc6815/go.mod h1:WwZ+bS3ebgob9U8Nd0kOddGdZWjyMGR8Wziv+TBNwSE=\ngithub.com/elazarl/goproxy v0.0.0-20230808193330-2592e75ae04a h1:mATvB/9r/3gvcejNsXKSkQ6lcIaNec2nyfOdlTBR2lU=\ngithub.com/emirpasic/gods v1.18.1 h1:FXtiHYKDGKCW2KzwZKx0iC0PQmdlorYgdFG9jPXJ1Bc=\ngithub.com/emirpasic/gods v1.18.1/go.mod h1:8tpGGwCnJ5H4r6BWwaV6OrWmMoPhUl5jm/FMNAnJvWQ=\ngithub.com/gliderlabs/ssh v0.3.5 h1:OcaySEmAQJgyYcArR+gGGTHCyE7nvhEMTlYY+Dp8CpY=\ngithub.com/go-git/gcfg v1.5.1-0.20230307220236-3a3c6141e376 h1:+zs/tPmkDkHx3U66DAb0lQFJrpS6731Oaa12ikc+DiI=\ngithub.com/go-git/gcfg v1.5.1-0.20230307220236-3a3c6141e376/go.mod h1:an3vInlBmSxCcxctByoQdvwPiA7DTK7jaaFDBTtu0ic=\ngithub.com/go-git/go-billy/v5 v5.5.0 h1:yEY4yhzCDuMGSv83oGxiBotRzhwhNr8VZyphhiu+mTU=\ngithub.com/go-git/go-billy/v5 v5.5.0/go.mod h1:hmexnoNsr2SJU1Ju67OaNz5ASJY3+sHgFRpCtpDCKow=\ngithub.com/go-git/go-git-fixtures/v4 v4.3.2-0.20231010084843-55a94097c399 h1:eMje31YglSBqCdIqdhKBW8lokaMrL3uTkpGYlE2OOT4=\ngithub.com/go-git/go-git/v5 v5.11.0 h1:XIZc1p+8YzypNr34itUfSvYJcv+eYdTnTvOZ2vD3cA4=\ngithub.com/go-git/go-git/v5 v5.11.0/go.mod h1:6GFcX2P3NM7FPBfpePbpLd21XxsgdAt+lKqXmCUiUCY=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/hexops/gotextdiff v1.0.3 h1:gitA9+qJrrTCsiCl7+kh75nPqQt1cx4ZkudSTLoUqJM=\ngithub.com/jbenet/go-context v0.0.0-20150711004518-d14ea06fba99 h1:BQSFePA1RWJOlocH6Fxy8MmwDt+yVQYULKfN0RoTN8A=\ngithub.com/jbenet/go-context v0.0.0-20150711004518-d14ea06fba99/go.mod h1:1lJo3i6rXxKeerYnT8Nvf0QmHCRC1n8sfWVwXF2Frvo=\ngithub.com/kevinburke/ssh_config v1.2.0 h1:x584FjTGwHzMwvHx18PXxbBVzfnxogHaAReU4gf13a4=\ngithub.com/kevinburke/ssh_config v1.2.0/go.mod h1:CT57kijsi8u/K/BOFA39wgDQJ9CxiF4nAY/ojJ6r6mM=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mitchellh/go-homedir v1.1.0 h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=\ngithub.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/onsi/gomega v1.27.10 h1:naR28SdDFlqrG6kScpT8VWpu1xWY5nJRCF3XaYyBjhI=\ngithub.com/pjbgf/sha1cd v0.3.0 h1:4D5XXmUUBUl/xQ6IjCkEAbqXskkq/4O7LmGn0AqMDs4=\ngithub.com/pjbgf/sha1cd v0.3.0/go.mod h1:nZ1rrWOcGJ5uZgEEVL1VUM9iRQiZvWdbZjkKyFzPPsI=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/rogpeppe/go-internal v1.11.0 h1:cWPaGQEPrBb5/AsnsZesgZZ9yb1OQ+GOISoDNXVBh4M=\ngithub.com/sergi/go-diff v1.3.1 h1:xkr+Oxo4BOQKmkn/B9eMK0g5Kg/983T9DqqPHwYqD+8=\ngithub.com/sergi/go-diff v1.3.1/go.mod h1:aMJSSKb2lpPvRNec0+w3fl7LP9IOFzdc9Pa4NFbPK1I=\ngithub.com/sirupsen/logrus v1.7.0/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/skeema/knownhosts v1.2.1 h1:SHWdIUa82uGZz+F+47k8SY4QhhI291cXCpopT1lK2AQ=\ngithub.com/skeema/knownhosts v1.2.1/go.mod h1:xYbVRSPxqBZFrdmDyMmsOs+uX1UZC3nTN3ThzgDxUwo=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=\ngithub.com/xanzy/ssh-agent v0.3.3 h1:+/15pJfg/RsTxqYcX6fHqOXZwwMP+2VyYWJeWM2qQFM=\ngithub.com/xanzy/ssh-agent v0.3.3/go.mod h1:6dzNDKs0J9rVPHPhaGCukekBHKqfl+L3KghI1Bc68Uw=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.0.0-20220622213112-05595931fe9d/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\ngolang.org/x/crypto v0.3.1-0.20221117191849-2c476679df9a/go.mod h1:hebNnKkNXi2UzZN1eVRvBB7co0a+JxK6XbPiWVs/3J4=\ngolang.org/x/crypto v0.7.0/go.mod h1:pYwdfH91IfpZVANVyUOhSIPZaFoJGxTFbZhFTx+dXZU=\ngolang.org/x/crypto v0.17.0 h1:r8bRNjWL3GshPW3gkd+RpvzWrZAwPS49OmTGZ/uhM4k=\ngolang.org/x/crypto v0.17.0/go.mod h1:gCAAfMLgwOJRpTjQ2zCCt2OcSfYMTeZVSRtQlPC7Nq4=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.14.0 h1:dGoOF9QVLYng8IHTm7BAyWqCqSheQ5pYWGhzW00YJr0=\ngolang.org/x/mod v0.14.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20211112202133-69e39bad7dc2/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.2.0/go.mod h1:KqCZLdyyvdV855qA2rE3GC2aiw5xGR5TEjj8smXukLY=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.8.0/go.mod h1:QVkue5JL9kW//ek3r6jTKnTFis1tRmNAW2P1shuFdJc=\ngolang.org/x/net v0.19.0 h1:zTwKpTd2XuCqf8huc7Fo2iSy+4RHPd10s4KzeTnVr1c=\ngolang.org/x/net v0.19.0/go.mod h1:CfAk/cbD4CthTvqiEl8NpboMuiuOYsAr/7NOjZJtv1U=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.5.0 h1:60k92dhOjHxJkrqnwsfl8KuaHbn/5dl0lUPUklKo3qE=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.2.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.3.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.15.0 h1:h48lPFYpsTvQJZF4EKyI4aLHaev3CxivZmv7yZig9pc=\ngolang.org/x/sys v0.15.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.2.0/go.mod h1:TVmDHMZPmdnySmBfhjOoOdhjzdE1h4u1VwSiw2l1Nuc=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.6.0/go.mod h1:m6U89DPEgQRMq3DNkDClhWw02AUbt2daBVO4cn4Hv9U=\ngolang.org/x/term v0.15.0 h1:y/Oo/a/q3IXu26lQgl04j/gjuBDOBlx7X6Om1j2CPW4=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.4.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.8.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.14.0 h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/tools v0.16.1 h1:TLyB3WofjdOEepBHAU20JdNC1Zbg87elYofWYAY5oZA=\ngolang.org/x/tools v0.16.1/go.mod h1:kYVVN6I1mBNoB1OX+noeBjbRk4IUEPa7JJ+TJMEooJ0=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/warnings.v0 v0.1.2 h1:wFXVbFY8DY5/xOe1ECiWdKCzZlxgshcYVNkBHstARME=\ngopkg.in/warnings.v0 v0.1.2/go.mod h1:jksf8JmL6Qr/oQM2OXTHunEvvTAsrWBLb6OOjuVWRNI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "mocks",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}