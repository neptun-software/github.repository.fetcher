{
  "metadata": {
    "timestamp": 1736567964282,
    "page": 106,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dutchcoders/transfer.sh",
      "stars": 15364,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".bowerrc",
          "type": "blob",
          "size": 0.0537109375,
          "content": "{\n    \"directory\": \"transfersh-web/bower_components\"\n}\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.15234375,
          "content": "build\npkg\ndist\nsrc\nbin\n*.pyc\n*.egg-info\n.vagrant\n.git\n.tmp\nbower_components\nnode_modules\nextras\nbuild\ntransfersh-server/run.sh\n.elasticbeanstalk\nDockerfile\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2646484375,
          "content": "build/\npkg/\ndist/\nsrc/\nbin/\n*.pyc\n*.egg-info/\n.idea/\n\n.tmp\n.vagrant\n\nbower_components/\nnode_modules/\n\ntransfersh-server/run.sh\n.elasticbeanstalk/\n\n# Elastic Beanstalk Files\n.elasticbeanstalk/*\n!.elasticbeanstalk/*.cfg.yml\n!.elasticbeanstalk/*.global.yml\n\n!.github/build/\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 0.2900390625,
          "content": "run:\n  deadline: 10m\n  issues-exit-code: 1\n  tests: true\n\noutput:\n  format: colored-line-number\n  print-issued-lines: true\n  print-linter-name: true\n\nlinters:\n  disable:\n    - deadcode\n    - unused\n\nissues:\n  max-issues-per-linter: 0\n  max-same-issues: 0\n  new: false\n  exclude-use-default: false\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.419921875,
          "content": "{\n    \"node\": true,\n    \"browser\": true,\n    \"esnext\": true,\n    \"bitwise\": true,\n    \"camelcase\": true,\n    \"curly\": true,\n    \"eqeqeq\": true,\n    \"immed\": true,\n    \"indent\": 2,\n    \"latedef\": true,\n    \"newcap\": true,\n    \"noarg\": true,\n    \"quotmark\": \"single\",\n    \"regexp\": true,\n    \"undef\": true,\n    \"unused\": true,\n    \"strict\": true,\n    \"trailing\": true,\n    \"smarttabs\": true,\n    \"jquery\": true,\n    \"white\": true\n}\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 1.939453125,
          "content": "\n# Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and welcoming community, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit permission\n* Other unethical or unprofessional conduct\n* Use of harsh language\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By adopting this Code of Conduct, project maintainers commit themselves to fairly and consistently applying these principles to every aspect of managing this project. Project maintainers who do not follow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces when an individual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by opening an issue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the [Contributor Covenant](https://www.contributor-covenant.org), version 1.2.0, available at https://www.contributor-covenant.org/version/1/2/0/code-of-conduct.html\n\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.333984375,
          "content": "# Default to Go 1.20\nARG GO_VERSION=1.20\nFROM golang:${GO_VERSION}-alpine as build\n\n# Necessary to run 'go get' and to compile the linked binary\nRUN apk add git musl-dev mailcap\n\nWORKDIR /go/src/github.com/dutchcoders/transfer.sh\n\nCOPY go.mod go.sum ./\n\nRUN go mod download\n\nCOPY . .\n\n# build & install server\nRUN CGO_ENABLED=0 go build -tags netgo -ldflags \"-X github.com/dutchcoders/transfer.sh/cmd.Version=$(git describe --tags) -a -s -w -extldflags '-static'\" -o /go/bin/transfersh\n\nARG PUID=5000 \\\n    PGID=5000 \\\n    RUNAS\n\nRUN mkdir -p /tmp/useradd /tmp/empty && \\\n    if [ ! -z \"$RUNAS\" ]; then \\\n    echo \"${RUNAS}:x:${PUID}:${PGID}::/nonexistent:/sbin/nologin\" >> /tmp/useradd/passwd && \\\n    echo \"${RUNAS}:!:::::::\" >> /tmp/useradd/shadow && \\\n    echo \"${RUNAS}:x:${PGID}:\" >> /tmp/useradd/group && \\\n    echo \"${RUNAS}:!::\" >> /tmp/useradd/groupshadow; else touch /tmp/useradd/unused; fi\n\nFROM scratch AS final\nLABEL maintainer=\"Andrea Spacca <andrea.spacca@gmail.com>\"\nARG RUNAS\n\nCOPY --from=build /etc/mime.types /etc/mime.types\nCOPY --from=build /tmp/empty /tmp\nCOPY --from=build /tmp/useradd/* /etc/\nCOPY --from=build --chown=${RUNAS}  /go/bin/transfersh /go/bin/transfersh\nCOPY --from=build /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt\n\nUSER ${RUNAS}\n\nENTRYPOINT [\"/go/bin/transfersh\", \"--listener\", \":8080\"]\n\nEXPOSE 8080\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.1806640625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014-2018 DutchCoders [https://github.com/dutchcoders/]\nCopyright (c) 2018-2020 Andrea Spacca.\nCopyright (c) 2020- Andrea Spacca and Stefan Benten.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.08984375,
          "content": ".PHONY: lint\n\nlint:\n\tgolangci-lint run --out-format=github-actions --config .golangci.yml \n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 22.4189453125,
          "content": "# transfer.sh [![Go Report Card](https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh)](https://goreportcard.com/report/github.com/dutchcoders/transfer.sh) [![Docker pulls](https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg)](https://hub.docker.com/r/dutchcoders/transfer.sh/) [![Build Status](https://github.com/dutchcoders/transfer.sh/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/dutchcoders/transfer.sh/actions/workflows/test.yml?query=branch%3Amain)\n\nEasy and fast file sharing from the command-line. This code contains the server with everything you need to create your own instance.\n\nTransfer.sh currently supports the s3 (Amazon S3), gdrive (Google Drive), storj (Storj) providers, and local file system (local).\n\n## Disclaimer\n\n@stefanbenten happens to be a maintainer of this repository _and_ the person who host a well known public installation of the software in the repo.\n\nThe two are anyway unrelated, and the repo is not the place to direct requests and issues for any of the pubblic installation.\n\nNo third-party public installation of the software in the repo will be advertised or mentioned in the repo itself, for security reasons.\n\nThe official position of me, @aspacca, as maintainer of the repo, is that if you want to use the software you should host your own installation.\n\n## Usage\n\n### Upload:\n```bash\n$ curl -v --upload-file ./hello.txt https://transfer.sh/hello.txt\n```\n\n### Encrypt & Upload:\n```bash\n$ gpg --armor --symmetric --output - /tmp/hello.txt | curl --upload-file - https://transfer.sh/test.txt\n````\n\n### Download & Decrypt:\n```bash\n$ curl https://transfer.sh/1lDau/test.txt | gpg --decrypt --output /tmp/hello.txt\n```\n\n### Upload to Virustotal:\n```bash\n$ curl -X PUT --upload-file nhgbhhj https://transfer.sh/test.txt/virustotal\n```\n\n### Deleting\n```bash\n$ curl -X DELETE <X-Url-Delete Response Header URL>\n```\n\n## Request Headers\n\n### Max-Downloads\n```bash\n$ curl --upload-file ./hello.txt https://transfer.sh/hello.txt -H \"Max-Downloads: 1\" # Limit the number of downloads\n```\n\n### Max-Days\n```bash\n$ curl --upload-file ./hello.txt https://transfer.sh/hello.txt -H \"Max-Days: 1\" # Set the number of days before deletion\n```\n\n### X-Encrypt-Password\n#### Beware, use this feature only on your self-hosted server: trusting a third-party service for server side encryption is at your own risk\n```bash\n$ curl --upload-file ./hello.txt https://your-transfersh-instance.tld/hello.txt -H \"X-Encrypt-Password: test\" # Encrypt the content sever side with AES265 using \"test\" as password\n```\n\n### X-Decrypt-Password\n#### Beware, use this feature only on your self-hosted server: trusting a third-party service for server side encryption is at your own risk\n```bash\n$ curl https://your-transfersh-instance.tld/BAYh0/hello.txt -H \"X-Decrypt-Password: test\" # Decrypt the content sever side with AES265 using \"test\" as password\n```\n\n## Response Headers\n\n### X-Url-Delete\n\nThe URL used to request the deletion of a file and returned as a response header.\n```bash\ncurl -sD - --upload-file ./hello.txt https://transfer.sh/hello.txt | grep -i -E 'transfer\\.sh|x-url-delete'\nx-url-delete: https://transfer.sh/hello.txt/BAYh0/hello.txt/PDw0NHPcqU\nhttps://transfer.sh/hello.txt/BAYh0/hello.txt\n```\n\n## Examples\n\nSee good usage examples on [examples.md](examples.md)\n\n## Link aliases\n\nCreate direct download link:\n\nhttps://transfer.sh/1lDau/test.txt --> https://transfer.sh/get/1lDau/test.txt\n\nInline file:\n\nhttps://transfer.sh/1lDau/test.txt --> https://transfer.sh/inline/1lDau/test.txt\n\n## Usage\n\nParameter | Description                                                                                 | Value                        | Env                         \n--- |---------------------------------------------------------------------------------------------|------------------------------|-----------------------------\nlistener | port to use for http (:80)                                                                  |                              | LISTENER                    |\nprofile-listener | port to use for profiler (:6060)                                                            |                              | PROFILE_LISTENER            |\nforce-https | redirect to https                                                                           | false                        | FORCE_HTTPS                 \ntls-listener | port to use for https (:443)                                                                |                              | TLS_LISTENER                |\ntls-listener-only | flag to enable tls listener only                                                            |                              | TLS_LISTENER_ONLY           |\ntls-cert-file | path to tls certificate                                                                     |                              | TLS_CERT_FILE               |\ntls-private-key | path to tls private key                                                                     |                              | TLS_PRIVATE_KEY             |\nhttp-auth-user | user for basic http auth on upload                                                          |                              | HTTP_AUTH_USER              |\nhttp-auth-pass | pass for basic http auth on upload                                                          |                              | HTTP_AUTH_PASS              |\nhttp-auth-htpasswd | htpasswd file path for basic http auth on upload                                            |                              | HTTP_AUTH_HTPASSWD          |\nhttp-auth-ip-whitelist | comma separated list of ips allowed to upload without being challenged an http auth        |                              | HTTP_AUTH_IP_WHITELIST      |\nip-whitelist | comma separated list of ips allowed to connect to the service                               |                              | IP_WHITELIST                |\nip-blacklist | comma separated list of ips not allowed to connect to the service                           |                              | IP_BLACKLIST                |\ntemp-path | path to temp folder                                                                         | system temp                  | TEMP_PATH                   |\nweb-path | path to static web files (for development or custom front end)                              |                              | WEB_PATH                    |\nproxy-path | path prefix when service is run behind a proxy                                              |                              | PROXY_PATH                  |\nproxy-port | port of the proxy when the service is run behind a proxy                                    |                              | PROXY_PORT                  |\nemail-contact | email contact for the front end                                                             |                              | EMAIL_CONTACT               |\nga-key | google analytics key for the front end                                                      |                              | GA_KEY                      |\nprovider | which storage provider to use                                                               | (s3, storj, gdrive or local) |\nuservoice-key | user voice key for the front end                                                            |                              | USERVOICE_KEY               |\naws-access-key | aws access key                                                                              |                              | AWS_ACCESS_KEY              |\naws-secret-key | aws access key                                                                              |                              | AWS_SECRET_KEY              |\nbucket | aws bucket                                                                                  |                              | BUCKET                      |\ns3-endpoint | Custom S3 endpoint.                                                                         |                              | S3_ENDPOINT                 |\ns3-region | region of the s3 bucket                                                                     | eu-west-1                    | S3_REGION                   |\ns3-no-multipart | disables s3 multipart upload                                                                | false                        | S3_NO_MULTIPART             |\ns3-path-style | Forces path style URLs, required for Minio.                                                 | false                        | S3_PATH_STYLE               |\nstorj-access | Access for the project                                                                      |                              | STORJ_ACCESS                |\nstorj-bucket | Bucket to use within the project                                                            |                              | STORJ_BUCKET                |\nbasedir | path storage for local/gdrive provider                                                      |                              | BASEDIR                     |\ngdrive-client-json-filepath | path to oauth client json config for gdrive provider                                        |                              | GDRIVE_CLIENT_JSON_FILEPATH |\ngdrive-local-config-path | path to store local transfer.sh config cache for gdrive provider                            |                              | GDRIVE_LOCAL_CONFIG_PATH    |\ngdrive-chunk-size | chunk size for gdrive upload in megabytes, must be lower than available memory (8 MB)       |                              | GDRIVE_CHUNK_SIZE           |\nlets-encrypt-hosts | hosts to use for lets encrypt certificates (comma seperated)                                |                              | HOSTS                       |\nlog | path to log file                                                                            |                              | LOG                         |\ncors-domains | comma separated list of domains for CORS, setting it enable CORS                            |                              | CORS_DOMAINS                |\nclamav-host | host for clamav feature                                                                     |                              | CLAMAV_HOST                 |\nperform-clamav-prescan | prescan every upload through clamav feature (clamav-host must be a local clamd unix socket) |                              | PERFORM_CLAMAV_PRESCAN      |\nrate-limit | request per minute                                                                          |                              | RATE_LIMIT                  |\nmax-upload-size | max upload size in kilobytes                                                                |                              | MAX_UPLOAD_SIZE             |\npurge-days | number of days after the uploads are purged automatically                                   |                              | PURGE_DAYS                  |   \npurge-interval | interval in hours to run the automatic purge for (not applicable to S3 and Storj)           |                              | PURGE_INTERVAL              |   \nrandom-token-length | length of the random token for the upload path (double the size for delete path)            | 6                            | RANDOM_TOKEN_LENGTH         |   \n\nIf you want to use TLS using lets encrypt certificates, set lets-encrypt-hosts to your domain, set tls-listener to :443 and enable force-https.\n\nIf you want to use TLS using your own certificates, set tls-listener to :443, force-https, tls-cert-file and tls-private-key.\n\n## Development\n\nSwitched to GO111MODULE\n\n```bash\ngo run main.go --provider=local --listener :8080 --temp-path=/tmp/ --basedir=/tmp/\n```\n\n## Build\n\n```bash\n$ git clone git@github.com:dutchcoders/transfer.sh.git\n$ cd transfer.sh\n$ go build -o transfersh main.go\n```\n\n## Docker\n\nFor easy deployment, we've created an official Docker container. There are two variants, differing only by which user runs the process.\n\nThe default one will run as `root`:\n\n```bash\ndocker run --publish 8080:8080 dutchcoders/transfer.sh:latest --provider local --basedir /tmp/\n```\n\nThe one tagged with the suffix `-noroot` will use `5000` as both UID and GID:\n```bash\ndocker run --publish 8080:8080 dutchcoders/transfer.sh:latest-noroot --provider local --basedir /tmp/\n```\n\n### Building the Container\nYou can also build the container yourself. This allows you to choose which UID/GID will be used, e.g. when using NFS mounts:\n```bash\n# Build arguments:\n# * RUNAS: If empty, the container will run as root.\n#          Set this to anything to enable UID/GID selection.\n# * PUID:  UID of the process. Needs RUNAS != \"\". Defaults to 5000.\n# * PGID:  GID of the process. Needs RUNAS != \"\". Defaults to 5000.\n\ndocker build -t transfer.sh-noroot --build-arg RUNAS=doesntmatter --build-arg PUID=1337 --build-arg PGID=1338 .\n```\n\n## S3 Usage\n\nFor the usage with a AWS S3 Bucket, you just need to specify the following options:\n- provider `--provider s3`\n- aws-access-key _(either via flag or environment variable `AWS_ACCESS_KEY`)_\n- aws-secret-key _(either via flag or environment variable `AWS_SECRET_KEY`)_\n- bucket _(either via flag or environment variable `BUCKET`)_\n- s3-region _(either via flag or environment variable `S3_REGION`)_\n\nIf you specify the s3-region, you don't need to set the endpoint URL since the correct endpoint will used automatically.\n\n### Custom S3 providers\n\nTo use a custom non-AWS S3 provider, you need to specify the endpoint as defined from your cloud provider.\n\n## Storj Network Provider\n\nTo use the Storj Network as a storage provider you need to specify the following flags:\n- provider `--provider storj`\n- storj-access _(either via flag or environment variable STORJ_ACCESS)_\n- storj-bucket _(either via flag or environment variable STORJ_BUCKET)_\n\n### Creating Bucket and Scope\n\nYou need to create an access grant (or copy it from the uplink configuration) and a bucket in preparation.\n\nTo get started, log in to your account and go to the Access Grant Menu and start the Wizard on the upper right.\n\nEnter your access grant name of choice, hit *Next* and restrict it as necessary/preferred.\nAfterwards continue either in CLI or within the Browser. Next, you'll be asked for a Passphrase used as Encryption Key.\n**Make sure to save it in a safe place. Without it, you will lose the ability to decrypt your files!**\n\nAfterwards, you can copy the access grant and then start the startup of the transfer.sh endpoint. \nIt is recommended to provide both the access grant and the bucket name as ENV Variables for enhanced security.\n\nExample:\n```\nexport STORJ_BUCKET=<BUCKET NAME>\nexport STORJ_ACCESS=<ACCESS GRANT>\ntransfer.sh --provider storj\n```\n\n## Google Drive Usage\n\nFor the usage with Google drive, you need to specify the following options:\n- provider\n- gdrive-client-json-filepath\n- gdrive-local-config-path\n- basedir\n\n### Creating Gdrive Client Json\n\nYou need to create an OAuth Client id from console.cloud.google.com, download the file, and place it into a safe directory.\n\n### Usage example\n\n```go run main.go --provider gdrive --basedir /tmp/ --gdrive-client-json-filepath /[credential_dir] --gdrive-local-config-path [directory_to_save_config] ```\n\n## Shell functions\n\n### Bash, ash and zsh (multiple files uploaded as zip archive)\n##### Add this to .bashrc or .zshrc or its equivalent\n```bash\ntransfer() (if [ $# -eq 0 ]; then printf \"No arguments specified.\\nUsage:\\n transfer <file|directory>\\n ... | transfer <file_name>\\n\">&2; return 1; fi; file_name=$(basename \"$1\"); if [ -t 0 ]; then file=\"$1\"; if [ ! -e \"$file\" ]; then echo \"$file: No such file or directory\">&2; return 1; fi; if [ -d \"$file\" ]; then cd \"$file\" || return 1; file_name=\"$file_name.zip\"; set -- zip -r -q - .; else set -- cat \"$file\"; fi; else set -- cat; fi; url=$(\"$@\" | curl --silent --show-error --progress-bar --upload-file \"-\" \"https://transfer.sh/$file_name\"); echo \"$url\"; )\n```\n\n#### Now you can use transfer function\n```\n$ transfer hello.txt\n```\n\n\n### Bash and zsh (with delete url, delete token output and prompt before uploading)\n##### Add this to .bashrc or .zshrc or its equivalent\n\n<details><summary>Expand</summary><p>\n\n```bash\ntransfer()\n{\n    local file\n    declare -a file_array\n    file_array=(\"${@}\")\n\n    if [[ \"${file_array[@]}\" == \"\" || \"${1}\" == \"--help\" || \"${1}\" == \"-h\" ]]\n    then\n        echo \"${0} - Upload arbitrary files to \\\"transfer.sh\\\".\"\n        echo \"\"\n        echo \"Usage: ${0} [options] [<file>]...\"\n        echo \"\"\n        echo \"OPTIONS:\"\n        echo \"  -h, --help\"\n        echo \"      show this message\"\n        echo \"\"\n        echo \"EXAMPLES:\"\n        echo \"  Upload a single file from the current working directory:\"\n        echo \"      ${0} \\\"image.img\\\"\"\n        echo \"\"\n        echo \"  Upload multiple files from the current working directory:\"\n        echo \"      ${0} \\\"image.img\\\" \\\"image2.img\\\"\"\n        echo \"\"\n        echo \"  Upload a file from a different directory:\"\n        echo \"      ${0} \\\"/tmp/some_file\\\"\"\n        echo \"\"\n        echo \"  Upload all files from the current working directory. Be aware of the webserver's rate limiting!:\"\n        echo \"      ${0} *\"\n        echo \"\"\n        echo \"  Upload a single file from the current working directory and filter out the delete token and download link:\"\n        echo \"      ${0} \\\"image.img\\\" | awk --field-separator=\\\": \\\" '/Delete token:/ { print \\$2 } /Download link:/ { print \\$2 }'\"\n        echo \"\"\n        echo \"  Show help text from \\\"transfer.sh\\\":\"\n        echo \"      curl --request GET \\\"https://transfer.sh\\\"\"\n        return 0\n    else\n        for file in \"${file_array[@]}\"\n        do\n            if [[ ! -f \"${file}\" ]]\n            then\n                echo -e \"\\e[01;31m'${file}' could not be found or is not a file.\\e[0m\" >&2\n                return 1\n            fi\n        done\n        unset file\n    fi\n\n    local upload_files\n    local curl_output\n    local awk_output\n\n    du -c -k -L \"${file_array[@]}\" >&2\n    # be compatible with \"bash\"\n    if [[ \"${ZSH_NAME}\" == \"zsh\" ]]\n    then\n        read $'upload_files?\\e[01;31mDo you really want to upload the above files ('\"${#file_array[@]}\"$') to \"transfer.sh\"? (Y/n): \\e[0m'\n    elif [[ \"${BASH}\" == *\"bash\"* ]]\n    then\n        read -p $'\\e[01;31mDo you really want to upload the above files ('\"${#file_array[@]}\"$') to \"transfer.sh\"? (Y/n): \\e[0m' upload_files\n    fi\n\n    case \"${upload_files:-y}\" in\n        \"y\"|\"Y\")\n            # for the sake of the progress bar, execute \"curl\" for each file.\n            # the parameters \"--include\" and \"--form\" will suppress the progress bar.\n            for file in \"${file_array[@]}\"\n            do\n                # show delete link and filter out the delete token from the response header after upload.\n                # it is important to save \"curl's\" \"stdout\" via a subshell to a variable or redirect it to another command,\n                # which just redirects to \"stdout\" in order to have a sane output afterwards.\n                # the progress bar is redirected to \"stderr\" and is only displayed,\n                # if \"stdout\" is redirected to something; e.g. \">/dev/null\", \"tee /dev/null\" or \"| <some_command>\".\n                # the response header is redirected to \"stdout\", so redirecting \"stdout\" to \"/dev/null\" does not make any sense.\n                # redirecting \"curl's\" \"stderr\" to \"stdout\" (\"2>&1\") will suppress the progress bar.\n                curl_output=$(curl --request PUT --progress-bar --dump-header - --upload-file \"${file}\" \"https://transfer.sh/\")\n                awk_output=$(awk \\\n                    'gsub(\"\\r\", \"\", $0) && tolower($1) ~ /x-url-delete/ \\\n                    {\n                        delete_link=$2;\n                        print \"Delete command: curl --request DELETE \" \"\\\"\"delete_link\"\\\"\";\n\n                        gsub(\".*/\", \"\", delete_link);\n                        delete_token=delete_link;\n                        print \"Delete token: \" delete_token;\n                    }\n\n                    END{\n                        print \"Download link: \" $0;\n                    }' <<< \"${curl_output}\")\n\n                # return the results via \"stdout\", \"awk\" does not do this for some reason.\n                echo -e \"${awk_output}\\n\"\n\n                # avoid rate limiting as much as possible; nginx: too many requests.\n                if (( ${#file_array[@]} > 4 ))\n                then\n                    sleep 5\n                fi\n            done\n            ;;\n\n        \"n\"|\"N\")\n            return 1\n            ;;\n\n        *)\n            echo -e \"\\e[01;31mWrong input: '${upload_files}'.\\e[0m\" >&2\n            return 1\n    esac\n}\n```\n\n</p></details>\n\n#### Sample output\n```bash\n$ ls -lh\ntotal 20M\n-rw-r--r-- 1 <some_username> <some_username> 10M Apr  4 21:08 image.img\n-rw-r--r-- 1 <some_username> <some_username> 10M Apr  4 21:08 image2.img\n$ transfer image*\n10240K  image2.img\n10240K  image.img\n20480K  total\nDo you really want to upload the above files (2) to \"transfer.sh\"? (Y/n):\n######################################################################################################################################################################################################################################## 100.0%\nDelete command: curl --request DELETE \"https://transfer.sh/wJw9pz/image2.img/mSctGx7pYCId\"\nDelete token: mSctGx7pYCId\nDownload link: https://transfer.sh/wJw9pz/image2.img\n\n######################################################################################################################################################################################################################################## 100.0%\nDelete command: curl --request DELETE \"https://transfer.sh/ljJc5I/image.img/nw7qaoiKUwCU\"\nDelete token: nw7qaoiKUwCU\nDownload link: https://transfer.sh/ljJc5I/image.img\n\n$ transfer \"image.img\" | awk --field-separator=\": \" '/Delete token:/ { print $2 } /Download link:/ { print $2 }'\n10240K  image.img\n10240K  total\nDo you really want to upload the above files (1) to \"transfer.sh\"? (Y/n):\n######################################################################################################################################################################################################################################## 100.0%\ntauN5dE3fWJe\nhttps://transfer.sh/MYkuqn/image.img\n```\n\n## Contributions\n\nContributions are welcome.\n\n## Creators\n\n**Remco Verhoef**\n- <https://twitter.com/remco_verhoef>\n- <https://twitter.com/dutchcoders>\n\n**Uvis Grinfelds**\n\n## Maintainer\n\n**Andrea Spacca**\n\n**Stefan Benten**\n\n## Copyright and License\n\nCode and documentation copyright 2011-2018 Remco Verhoef.\nCode and documentation copyright 2018-2020 Andrea Spacca.\nCode and documentation copyright 2020- Andrea Spacca and Stefan Benten.\n\nCode released under [the MIT license](LICENSE).\n"
        },
        {
          "name": "Vagrantfile",
          "type": "blob",
          "size": 0.3955078125,
          "content": "# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\n# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!\nVAGRANTFILE_API_VERSION = \"2\"\n\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n    # Every Vagrant virtual environment requires a box to build off of.\n    config.vm.box = \"puphpet/ubuntu1404-x64\"\n    config.vm.provider \"vmware_fusion\" do |v|\n        v.gui = true\n    end\nend\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples.md",
          "type": "blob",
          "size": 10.2578125,
          "content": "# Table of Contents\n\n* [Aliases](#aliases)\n* [Uploading and downloading](#uploading-and-downloading)\n* [Archiving and backups](#archiving-and-backups)\n* [Encrypting and decrypting](#encrypting-and-decrypting)\n* [Scanning for viruses](#scanning-for-viruses)\n* [Uploading and copy download command](#uploading-and-copy-download-command)\n* [Uploading and displaying URL and deletion token](#uploading-and-displaying-url-and-deletion-token)\n\n## Aliases\n<a name=\"aliases\"/>\n\n## Add alias to .bashrc or .zshrc\n\n### Using curl\n```bash\ntransfer() {\n    curl --progress-bar --upload-file \"$1\" https://transfer.sh/$(basename \"$1\") | tee /dev/null;\n    echo\n}\n\nalias transfer=transfer\n```\n\n### Using wget\n```bash\ntransfer() {\n    wget -t 1 -qO - --method=PUT --body-file=\"$1\" --header=\"Content-Type: $(file -b --mime-type \"$1\")\" https://transfer.sh/$(basename \"$1\");\n    echo\n}\n\nalias transfer=transfer\n```\n\n## Add alias for fish-shell\n\n### Using curl\n```fish\nfunction transfer --description 'Upload a file to transfer.sh'\n    if [ $argv[1] ]\n        # write to output to tmpfile because of progress bar\n        set -l tmpfile ( mktemp -t transferXXXXXX )\n        curl --progress-bar --upload-file \"$argv[1]\" https://transfer.sh/(basename $argv[1]) >> $tmpfile\n        cat $tmpfile\n        command rm -f $tmpfile\n    else\n        echo 'usage: transfer FILE_TO_TRANSFER'\n    end\nend\n\nfuncsave transfer\n```\n\n### Using wget\n```fish\nfunction transfer --description 'Upload a file to transfer.sh'\n    if [ $argv[1] ]\n        wget -t 1 -qO - --method=PUT --body-file=\"$argv[1]\" --header=\"Content-Type: (file -b --mime-type $argv[1])\" https://transfer.sh/(basename $argv[1])\n    else\n        echo 'usage: transfer FILE_TO_TRANSFER'\n    end\nend\n\nfuncsave transfer\n```\n\nNow run it like this:\n```bash\n$ transfer test.txt\n```\n\n## Add alias on Windows\n\nPut a file called `transfer.cmd` somewhere in your PATH with this inside it:\n```cmd\n@echo off\nsetlocal\n:: use env vars to pass names to PS, to avoid escaping issues\nset FN=%~nx1\nset FULL=%1\npowershell -noprofile -command \"$(Invoke-Webrequest -Method put -Infile $Env:FULL https://transfer.sh/$Env:FN).Content\"\n```\n\n## Uploading and Downloading\n<a name=\"uploading-and-downloading\"/>\n\n### Uploading with wget\n```bash\n$ wget --method PUT --body-file=/tmp/file.tar https://transfer.sh/file.tar -O - -nv \n```\n\n### Uploading with PowerShell\n```posh\nPS H:\\> invoke-webrequest -method put -infile .\\file.txt https://transfer.sh/file.txt \n```\n\n### Upload using HTTPie\n```bash\n$ http https://transfer.sh/ -vv < /tmp/test.log \n```\n\n### Uploading a filtered text file\n```bash\n$ grep 'pound' /var/log/syslog | curl --upload-file - https://transfer.sh/pound.log \n```\n\n### Downloading with curl\n```bash\n$ curl https://transfer.sh/1lDau/test.txt -o test.txt\n```\n\n### Downloading with wget\n```bash\n$ wget https://transfer.sh/1lDau/test.txt\n```\n\n## Archiving and backups\n<a name=\"archiving-and-backups\"/>\n\n### Backup, encrypt and transfer a MySQL dump\n```bash\n$ mysqldump --all-databases | gzip | gpg -ac -o- | curl -X PUT --upload-file \"-\" https://transfer.sh/test.txt\n```\n\n### Archive and upload directory\n```bash\n$ tar -czf - /var/log/journal | curl --upload-file - https://transfer.sh/journal.tar.gz\n```\n\n### Uploading multiple files at once\n```bash\n$ curl -i -F filedata=@/tmp/hello.txt -F filedata=@/tmp/hello2.txt https://transfer.sh/\n```\n\n### Combining downloads as zip or tar.gz archive\n```bash\n$ curl https://transfer.sh/(15HKz/hello.txt,15HKz/hello.txt).tar.gz\n$ curl https://transfer.sh/(15HKz/hello.txt,15HKz/hello.txt).zip \n```\n\n### Transfer and send email with link (using an alias)\n```bash\n$ transfer /tmp/hello.txt | mail -s \"Hello World\" user@yourmaildomain.com \n```\n## Encrypting and decrypting\n<a name=\"encrypting-and-decrypting\"/>\n\n### Encrypting files with password using gpg\n```bash\n$ gpg --armor --symmetric --output - /tmp/hello.txt | curl --upload-file - https://transfer.sh/test.txt\n```\n\n### Downloading and decrypting\n```bash\n$ curl https://transfer.sh/1lDau/test.txt | gpg --decrypt --output /tmp/hello.txt\n```\n\n### Import keys from [keybase](https://keybase.io/)\n```bash\n$ keybase track [them] # Encrypt for recipient(s)\n$ cat somebackupfile.tar.gz | keybase encrypt [them] | curl --upload-file '-' https://transfer.sh/test.txt # Decrypt\n$ curl https://transfer.sh/sqUFi/test.md | keybase decrypt\n```\n\n## Scanning for viruses\n<a name=\"scanning-for-viruses\"/>\n\n### Scan for malware or viruses using Clamav\n```bash\n$ wget http://www.eicar.org/download/eicar.com\n$ curl -X PUT --upload-file ./eicar.com https://transfer.sh/eicar.com/scan\n```\n\n### Upload malware to VirusTotal, get a permalink in return\n```bash\n$ curl -X PUT --upload-file nhgbhhj https://transfer.sh/test.txt/virustotal \n```\n\n### Upload encrypted password protected files\n\nBy default files upload for only 1 download, you can specify download limit using -D flag like `transfer-encrypted -D 50 %file/folder%`\n\n#### One line for bashrc\n```bash\ntransfer-encrypted() { if [ $# -eq 0 ]; then echo \"No arguments specified.\\nUsage:\\n transfer <file|directory>\\n ... | transfer <file_name>\" >&2; return 1; fi; while getopts \":D:\" opt; do case $opt in D) max_downloads=$OPTARG;; \\?) echo \"Invalid option: -$OPTARG\" >&2;; esac; done; shift \"$((OPTIND - 1))\"; file=\"$1\"; file_name=$(basename \"$file\"); if [ ! -e \"$file\" ]; then echo \"$file: No such file or directory\" >&2; return 1; fi; if [ -d \"$file\" ]; then file_name=\"$file_name.zip\"; (cd \"$file\" && zip -r -q - .) | openssl aes-256-cbc -pbkdf2 -e > \"tmp-$file_name\" && cat \"tmp-$file_name\" | curl -H \"Max-Downloads: $max_downloads\" -w '\\n' --upload-file \"tmp-$file_name\" \"https://transfer.sh/$file_name\" | tee /dev/null; rm \"tmp-$file_name\"; else cat \"$file\" | openssl aes-256-cbc -pbkdf2 -e > \"tmp-$file\" && cat \"tmp-$file\" | curl -H \"Max-Downloads: $max_downloads\" -w '\\n' --upload-file - \"https://transfer.sh/$file_name\" | tee /dev/null; rm \"tmp-$file\"; fi; }\n```\n#### Human readable code \n```bash\ntransfer-encrypted() {\n    if [ $# -eq 0 ]; then\n        echo \"No arguments specified.\\nUsage:\\n transfer <file|directory>\\n ... | transfer <file_name>\" >&2\n        return 1\n    fi\n\n    while getopts \":D:\" opt; do\n        case $opt in\n            D)\n                max_downloads=$OPTARG\n                ;;\n            \\?)\n                echo \"Invalid option: -$OPTARG\" >&2\n                ;;\n        esac\n    done\n\n    shift \"$((OPTIND - 1))\"\n    file=\"$1\"\n    file_name=$(basename \"$file\")\n\n    if [ ! -e \"$file\" ]; then\n        echo \"$file: No such file or directory\" >&2\n        return 1\n    fi\n\n    if [ -d \"$file\" ]; then\n        file_name=\"$file_name.zip\"\n        (cd \"$file\" && zip -r -q - .) | openssl aes-256-cbc -pbkdf2 -e > \"tmp-$file_name\" && cat \"tmp-$file_name\" | curl -H \"Max-Downloads: $max_downloads\" -w '\\n' --upload-file \"tmp-$file_name\" \"https://transfer.sh/$file_name\" | tee /dev/null\n        rm \"tmp-$file_name\"\n    else\n        cat \"$file\" | openssl aes-256-cbc -pbkdf2 -e > \"tmp-$file\" && cat \"tmp-$file\" | curl -H \"Max-Downloads: $max_downloads\" -w '\\n' --upload-file - \"https://transfer.sh/$file_name\" | tee /dev/null\n        rm \"tmp-$file\"\n    fi\n}\n```\n#### Decrypt using\n```bash\ncurl -s https://transfer.sh/some/file | openssl aes-256-cbc -pbkdf2 -d > output_filename\n```\n\n## Uploading and copy download command\n\nDownload commands can be automatically copied to the clipboard after files are uploaded using transfer.sh.\n\nIt was designed for Linux or macOS.\n\n### 1. Install xclip or xsel for Linux, macOS skips this step\n\n- install xclip see https://command-not-found.com/xclip\n\n- install xsel  see https://command-not-found.com/xsel\n\nInstall later, add pbcopy and pbpaste to .bashrc or .zshrc or its equivalent.\n\n- If use xclip, paste the following lines:\n\n```sh\nalias pbcopy='xclip -selection clipboard'\nalias pbpaste='xclip -selection clipboard -o'\n```\n\n- If use xsel, paste the following lines:\n\n```sh\nalias pbcopy='xsel --clipboard --input'\nalias pbpaste='xsel --clipboard --output'\n```\n\n### 2. Add Uploading and copy download command shell function\n\n1. Open .bashrc or .zshrc  or its equivalent.\n\n2. Add the following shell script:\n\n   ```sh\n   transfer() {\n     curl --progress-bar --upload-file \"$1\" https://transfer.sh/$(basename \"$1\") | pbcopy;\n     echo \"1) Download link:\"\n     echo \"$(pbpaste)\"\n   \n     echo \"\\n2) Linux or macOS download command:\"\n     linux_macos_download_command=\"wget $(pbpaste)\"\n     echo $linux_macos_download_command\n   \n     echo \"\\n3) Windows download command:\"\n     windows_download_command=\"Invoke-WebRequest -Uri \"$(pbpaste)\" -OutFile $(basename $1)\"\n     echo $windows_download_command\n   \n     case $2 in\n       l|m)  echo $linux_macos_download_command | pbcopy\n       ;;\n       w)  echo $windows_download_command | pbcopy\n       ;;\n     esac\n   }\n   ```\n\n\n### 3. Test\n\nThe transfer command has two parameters:\n\n1. The first parameter is the path to upload the file.\n\n2. The second parameter indicates which system's download command is copied. optional:\n\n   - This parameter is empty to copy the download link.\n\n   - `l` or `m` copy the Linux or macOS command that downloaded the file.\n\n   -  `w` copy the Windows command that downloaded the file.\n\nFor example, The command to download the file on Windows will be copied:\n\n```sh\n$ transfer ~/temp/a.log w\n######################################################################## 100.0%\n1) Download link:\nhttps://transfer.sh/y0qr2c/a.log\n\n2) Linux or macOS download command:\nwget https://transfer.sh/y0qr2c/a.log\n\n3) Windows download command:\nInvoke-WebRequest -Uri https://transfer.sh/y0qr2c/a.log -OutFile a.log\n```\n## Uploading and displaying URL and deletion token\n```bash\n# tempfile\nURLFILE=$HOME/temp/transfersh.url\n# insert number of downloads and days saved\nif [ -f $1 ]; then\nread -p \"Allowed number of downloads: \" num_down\nread -p \"Number of days on server: \" num_save\n# transfer\ncurl -sD - -H \"Max-Downloads: $num_down\" -H \"Max-Days: $num_save\"--progress-bar --upload-file $1 https://transfer.sh/$(basename $1) | grep -i -E 'transfer\\.sh|x-url-delete' &> $URLFILE\n# display URL and deletion token\nif [ -f $URLFILE ]; then\nURL=$(tail -n1 $URLFILE)\nTOKEN=$(grep delete $URLFILE | awk -F \"/\" '{print $NF}')\necho \"*********************************\"\necho \"Data is saved in $URLFILE\"\necho \"**********************************\"\necho \"URL is: $URL\"\necho \"Deletion Token is: $TOKEN\"\necho \"**********************************\"\nelse\necho \"NO URL-File found !!\"\nfi\nelse\necho \"!!!!!!\"\necho \"\\\"$1\\\" not found !!\"\necho \"!!!!!!\"\nfi\n```\n"
        },
        {
          "name": "extras",
          "type": "tree",
          "content": null
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 0.943359375,
          "content": "{\n  \"nodes\": {\n    \"flake-utils\": {\n      \"locked\": {\n        \"lastModified\": 1631561581,\n        \"narHash\": \"sha256-3VQMV5zvxaVLvqqUrNz3iJelLw30mIVSfZmAaauM3dA=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"rev\": \"7e5bf3925f6fbdfaf50a2a7ca0be2879c4261d19\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1632470817,\n        \"narHash\": \"sha256-tGyOesdpqQEVqlmVeElsC98OJ2GDy+LNaCThSby/GQM=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"39e8ec2db68b863543bd377e44fbe02f8d05864e\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"id\": \"nixpkgs\",\n        \"type\": \"indirect\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"flake-utils\": \"flake-utils\",\n        \"nixpkgs\": \"nixpkgs\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 11.919921875,
          "content": "{\n  description = \"Transfer.sh\";\n\n  inputs.flake-utils.url = \"github:numtide/flake-utils\";\n\n  outputs = { self, nixpkgs, flake-utils }:\n    let\n      transfer-sh = pkgs: pkgs.buildGoModule {\n        src = self;\n        name = \"transfer.sh\";\n        vendorSha256 = \"sha256-bgQUMiC33yVorcKOWhegT1/YU+fvxsz2pkeRvjf3R7g=\";\n      };\n    in\n\n      flake-utils.lib.eachDefaultSystem (\n        system:\n          let\n            pkgs = nixpkgs.legacyPackages.${system};\n          in\n            rec {\n              packages = flake-utils.lib.flattenTree {\n                transfer-sh = transfer-sh pkgs;\n              };\n              defaultPackage = packages.transfer-sh;\n              apps.transfer-sh = flake-utils.lib.mkApp { drv = packages.transfer-sh; };\n              defaultApp = apps.transfer-sh;\n            }\n      ) // rec {\n\n        nixosModules = {\n          transfer-sh = { config, lib, pkgs, ... }: with lib; let\n            RUNTIME_DIR = \"/var/lib/transfer.sh\";\n            cfg = config.services.transfer-sh;\n\n            general_options = {\n\n              enable = mkEnableOption \"Transfer.sh service\";\n              listener = mkOption { default = 80; type = types.int; description = \"port to use for http (:80)\"; };\n              profile-listener = mkOption { default = 6060; type = types.int; description = \"port to use for profiler (:6060)\"; };\n              force-https = mkOption { type = types.nullOr types.bool; description = \"redirect to https\"; };\n              tls-listener = mkOption { default = 443; type = types.int; description = \"port to use for https (:443)\"; };\n              tls-listener-only = mkOption { type = types.nullOr types.bool; description = \"flag to enable tls listener only\"; };\n              tls-cert-file = mkOption { type = types.nullOr types.str; description = \"path to tls certificate\"; };\n              tls-private-key = mkOption { type = types.nullOr types.str; description = \"path to tls private key \"; };\n              http-auth-user = mkOption { type = types.nullOr types.str; description = \"user for basic http auth on upload\"; };\n              http-auth-pass = mkOption { type = types.nullOr types.str; description = \"pass for basic http auth on upload\"; };\n              http-auth-htpasswd = mkOption { type = types.nullOr types.str; description = \"htpasswd file path for basic http auth on upload\"; };\n              http-auth-ip-whitelist = mkOption { type = types.nullOr types.str; description = \"comma separated list of ips allowed to upload without being challenged an http auth\"; };\n              ip-whitelist = mkOption { type = types.nullOr types.str; description = \"comma separated list of ips allowed to connect to the service\"; };\n              ip-blacklist = mkOption { type = types.nullOr types.str; description = \"comma separated list of ips not allowed to connect to the service\"; };\n              temp-path = mkOption { type = types.nullOr types.str; description = \"path to temp folder\"; };\n              web-path = mkOption { type = types.nullOr types.str; description = \"path to static web files (for development or custom front end)\"; };\n              proxy-path = mkOption { type = types.nullOr types.str; description = \"path prefix when service is run behind a proxy\"; };\n              proxy-port = mkOption { type = types.nullOr types.str; description = \"port of the proxy when the service is run behind a proxy\"; };\n              ga-key = mkOption { type = types.nullOr types.str; description = \"google analytics key for the front end\"; };\n              email-contact = mkOption { type = types.nullOr types.str; description = \"email contact for the front end\"; };\n              uservoice-key = mkOption { type = types.nullOr types.str; description = \"user voice key for the front end\"; };\n              lets-encrypt-hosts = mkOption { type = types.nullOr (types.listOf types.str); description = \"hosts to use for lets encrypt certificates\"; };\n              log = mkOption { type = types.nullOr types.str; description = \"path to log file\"; };\n              cors-domains = mkOption { type = types.nullOr (types.listOf types.str); description = \"comma separated list of domains for CORS, setting it enable CORS \"; };\n              clamav-host = mkOption { type = types.nullOr types.str; description = \"host for clamav feature\"; };\n              rate-limit = mkOption { type = types.nullOr types.int; description = \"request per minute\"; };\n              max-upload-size = mkOption { type = types.nullOr types.int; description = \"max upload size in kilobytes  \"; };\n              purge-days = mkOption { type = types.nullOr types.int; description = \"number of days after the uploads are purged automatically \"; };\n              random-token-length = mkOption { type = types.nullOr types.int; description = \"length of the random token for the upload path (double the size for delete path)\"; };\n\n            };\n\n            provider_options = {\n\n                aws = {\n                  enable = mkEnableOption \"Enable AWS backend\";\n                  aws-access-key = mkOption { type = types.str; description = \"aws access key\"; };\n                  aws-secret-key = mkOption { type = types.str; description = \"aws secret key\"; };\n                  bucket = mkOption { type = types.str; description = \"aws bucket \"; };\n                  s3-endpoint = mkOption {\n                    type = types.nullOr types.str;\n                    description = ''\n                      Custom S3 endpoint. \n                      If you specify the s3-region, you don't need to set the endpoint URL since the correct endpoint will used automatically.\n                    '';\n                  };\n                  s3-region = mkOption { type = types.str; description = \"region of the s3 bucket eu-west-\"; };\n                  s3-no-multipart = mkOption { type = types.nullOr types.bool; description = \"disables s3 multipart upload \"; };\n                  s3-path-style = mkOption { type = types.nullOr types.str; description = \"Forces path style URLs, required for Minio. \"; };\n                };\n\n                storj = {\n                  enable = mkEnableOption \"Enable storj backend\";\n                  storj-access = mkOption { type = types.str; description = \"Access for the project\"; };\n                  storj-bucket = mkOption { type = types.str; description = \"Bucket to use within the project\"; };\n                };\n\n                gdrive = {\n                  enable = mkEnableOption \"Enable gdrive backend\";\n                  gdrive-client-json = mkOption { type = types.str; description = \"oauth client json config for gdrive provider\"; };\n                  gdrive-chunk-size = mkOption { default = 8; type = types.nullOr types.int; description = \"chunk size for gdrive upload in megabytes, must be lower than available memory (8 MB)\"; };\n                  basedir = mkOption { type = types.str; description = \"path storage for gdrive provider\"; default = \"${cfg.stateDir}/store\"; };\n                  purge-interval = mkOption { type = types.nullOr types.int; description = \"interval in hours to run the automatic purge for (not applicable to S3 and Storj)\"; };\n\n                };\n\n                local = {\n                  enable = mkEnableOption \"Enable local backend\";\n                  basedir = mkOption { type = types.str; description = \"path storage for local provider\"; default = \"${cfg.stateDir}/store\"; };\n                  purge-interval = mkOption { type = types.nullOr types.int; description = \"interval in hours to run the automatic purge for (not applicable to S3 and Storj)\"; };\n                };\n\n              };\n          in\n            {\n              options.services.transfer-sh = fold recursiveUpdate {} [\n                general_options\n                {\n                  provider = provider_options;\n                  user = mkOption {\n                    type = types.str;\n                    description = \"User to run the service under\";\n                    default = \"transfer.sh\";\n                  };\n                  group = mkOption {\n                    type = types.str;\n                    description = \"Group to run the service under\";\n                    default = \"transfer.sh\";\n                  };\n                  stateDir = mkOption {\n                    type = types.path;\n                    description = \"Variable state directory\";\n                    default = RUNTIME_DIR;\n                  };\n                }\n              ];\n\n              config = let\n\n                mkFlags = cfg: options:\n                  let\n                    mkBoolFlag = option: if cfg.${option} then [ \"--${option}\" ] else [];\n                    mkFlag = option:\n                      if isBool cfg.${option}\n                      then mkBoolFlag option\n                      else [ \"--${option}\" \"${cfg.${option}}\" ];\n\n                  in\n                    lists.flatten (map (mkFlag) (filter (option: cfg.${option} != null && option != \"enable\") options));\n\n                aws-config = (mkFlags cfg.provider.aws (attrNames provider_options)) ++ [ \"--provider\" \"aws\" ];\n                gdrive-config = mkFlags cfg.provider.gdrive (attrNames provider_options.gdrive) ++ [ \"--provider\" \"gdrive\" ];\n                storj-config = mkFlags cfg.provider.storj (attrNames provider_options.storj) ++ [ \"--provider\" \"storj\" ];\n                local-config = mkFlags cfg.provider.local (attrNames provider_options.local) ++ [ \"--provider\" \"local\" ];\n\n                general-config = concatStringsSep \" \" (mkFlags cfg (attrNames general_options));\n                provider-config = concatStringsSep \" \" (\n                  if cfg.provider.aws.enable && !cfg.provider.storj.enable && !cfg.provider.gdrive.enable && !cfg.provider.local.enable then aws-config\n                  else if !cfg.provider.aws.enable && cfg.provider.storj.enable && !cfg.provider.gdrive.enable && !cfg.provider.local.enable then storj-config\n                  else if !cfg.provider.aws.enable && !cfg.provider.storj.enable && cfg.provider.gdrive.enable && !cfg.provider.local.enable then gdrive-config\n                  else if !cfg.provider.aws.enable && !cfg.provider.storj.enable && !cfg.provider.gdrive.enable && cfg.provider.local.enable then local-config\n                  else throw \"transfer.sh requires exactly one provider (aws, storj, gdrive, local)\"\n                );\n\n              in\n                lib.mkIf cfg.enable\n                  {\n                    systemd.tmpfiles.rules = [\n                      \"d ${cfg.stateDir} 0750 ${cfg.user} ${cfg.group} - -\"\n                    ] ++ optional cfg.provider.gdrive.enable cfg.provider.gdrive.basedir\n                    ++ optional cfg.provider.local.enable cfg.provider.local.basedir;\n\n                    systemd.services.transfer-sh = {\n                      wantedBy = [ \"multi-user.target\" ];\n                      after = [ \"network.target\" ];\n                      serviceConfig = {\n                        User = cfg.user;\n                        Group = cfg.group;\n                        ExecStart = \"${transfer-sh pkgs}/bin/transfer.sh ${general-config} ${provider-config} \";\n                      };\n                    };\n\n                    networking.firewall.allowedTCPPorts = [ cfg.listener cfg.profile-listener cfg.tls-listener ];\n                  };\n            };\n\n          default = { self, pkgs, ... }: {\n            imports = [ nixosModules.transfer-sh ];\n            # Network configuration.\n\n            # useDHCP is generally considered to better be turned off in favor\n            # of <adapter>.useDHCP\n            networking.useDHCP = false;\n            networking.firewall.allowedTCPPorts = [];\n\n            # Enable the inventaire server.\n            services.transfer-sh = {\n              enable = true;\n              provider.local = {\n                enable = true;\n              };\n            };\n\n            nixpkgs.config.allowUnfree = true;\n          };\n        };\n\n\n        nixosConfigurations.\"container\" = nixpkgs.lib.nixosSystem {\n          system = \"x86_64-linux\";\n          modules = [\n            nixosModules.default\n            ({ ... }: { boot.isContainer = true; })\n          ];\n        };\n\n      };\n}\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 4.6630859375,
          "content": "module github.com/dutchcoders/transfer.sh\n\ngo 1.18\n\nrequire (\n\tgithub.com/ProtonMail/go-crypto v0.0.0-20230217124315-7d5c6f04bbb8\n\tgithub.com/ProtonMail/gopenpgp/v2 v2.5.2\n\tgithub.com/PuerkitoBio/ghost v0.0.0-20160324114900-206e6e460e14\n\tgithub.com/VojtechVitek/ratelimit v0.0.0-20160722140851-dc172bc0f6d2\n\tgithub.com/aws/aws-sdk-go-v2 v1.18.0\n\tgithub.com/aws/aws-sdk-go-v2/config v1.18.25\n\tgithub.com/aws/aws-sdk-go-v2/credentials v1.13.24\n\tgithub.com/aws/aws-sdk-go-v2/feature/s3/manager v1.11.67\n\tgithub.com/aws/aws-sdk-go-v2/service/s3 v1.33.1\n\tgithub.com/dutchcoders/go-clamd v0.0.0-20170520113014-b970184f4d9e\n\tgithub.com/dutchcoders/go-virustotal v0.0.0-20140923143438-24cc8e6fa329\n\tgithub.com/dutchcoders/transfer.sh-web v0.0.0-20221119114740-ca3a2621d2a6\n\tgithub.com/elazarl/go-bindata-assetfs v1.0.1\n\tgithub.com/fatih/color v1.14.1\n\tgithub.com/golang/gddo v0.0.0-20210115222349-20d68f94ee1f\n\tgithub.com/gorilla/handlers v1.5.1\n\tgithub.com/gorilla/mux v1.8.0\n\tgithub.com/microcosm-cc/bluemonday v1.0.23\n\tgithub.com/russross/blackfriday/v2 v2.1.0\n\tgithub.com/skip2/go-qrcode v0.0.0-20200617195104-da1b6568686e\n\tgithub.com/tg123/go-htpasswd v1.2.1\n\tgithub.com/tomasen/realip v0.0.0-20180522021738-f0c99a92ddce\n\tgithub.com/urfave/cli/v2 v2.25.3\n\tgolang.org/x/crypto v0.21.0\n\tgolang.org/x/net v0.23.0\n\tgolang.org/x/oauth2 v0.7.0\n\tgolang.org/x/text v0.14.0\n\tgoogle.golang.org/api v0.114.0\n\tgopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c\n\tstorj.io/common v0.0.0-20230301105927-7f966760c100\n\tstorj.io/uplink v1.10.0\n)\n\nrequire (\n\tcloud.google.com/go/compute v1.19.1 // indirect\n\tcloud.google.com/go/compute/metadata v0.2.3 // indirect\n\tgithub.com/GehirnInc/crypt v0.0.0-20200316065508-bb7000b8a962 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.4.10 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.13.3 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/configsources v1.1.33 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.4.27 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/ini v1.3.34 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/v4a v1.0.25 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.9.11 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/checksum v1.1.28 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.9.27 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.14.2 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sso v1.12.10 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.14.10 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sts v1.19.0 // indirect\n\tgithub.com/aws/smithy-go v1.13.5 // indirect\n\tgithub.com/aymerick/douceur v0.2.0 // indirect\n\tgithub.com/calebcase/tmpfile v1.0.3 // indirect\n\tgithub.com/cloudflare/circl v1.3.7 // indirect\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.2 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.3 // indirect\n\tgithub.com/flynn/noise v1.0.0 // indirect\n\tgithub.com/garyburd/redigo v1.6.4 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/golang/protobuf v1.5.3 // indirect\n\tgithub.com/google/uuid v1.3.0 // indirect\n\tgithub.com/googleapis/enterprise-certificate-proxy v0.2.3 // indirect\n\tgithub.com/googleapis/gax-go/v2 v2.7.1 // indirect\n\tgithub.com/gorilla/css v1.0.0 // indirect\n\tgithub.com/gorilla/securecookie v1.1.1 // indirect\n\tgithub.com/jmespath/go-jmespath v0.4.0 // indirect\n\tgithub.com/jtolio/eventkit v0.0.0-20230301123942-0cee1388f16f // indirect\n\tgithub.com/jtolio/noiseconn v0.0.0-20230227223919-bddcd1327059 // indirect\n\tgithub.com/klauspost/cpuid/v2 v2.2.4 // indirect\n\tgithub.com/kr/pretty v0.3.1 // indirect\n\tgithub.com/kr/text v0.2.0 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.17 // indirect\n\tgithub.com/nu7hatch/gouuid v0.0.0-20131221200532-179d4d0c4d8d // indirect\n\tgithub.com/rogpeppe/go-internal v1.9.0 // indirect\n\tgithub.com/spacemonkeygo/monkit/v3 v3.0.19 // indirect\n\tgithub.com/vivint/infectious v0.0.0-20200605153912-25a574ae18a3 // indirect\n\tgithub.com/xrash/smetrics v0.0.0-20201216005158-039620a65673 // indirect\n\tgithub.com/zeebo/blake3 v0.2.3 // indirect\n\tgithub.com/zeebo/errs v1.3.0 // indirect\n\tgo.opencensus.io v0.24.0 // indirect\n\tgolang.org/x/sync v0.1.0 // indirect\n\tgolang.org/x/sys v0.18.0 // indirect\n\tgoogle.golang.org/appengine v1.6.7 // indirect\n\tgoogle.golang.org/genproto v0.0.0-20230410155749-daa745c078e1 // indirect\n\tgoogle.golang.org/grpc v1.56.3 // indirect\n\tgoogle.golang.org/protobuf v1.33.0 // indirect\n\tgopkg.in/yaml.v2 v2.4.0 // indirect\n\tstorj.io/drpc v0.0.33-0.20230204035225-c9649dee8f2a // indirect\n\tstorj.io/picobuf v0.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 37.2236328125,
          "content": "cloud.google.com/go v0.16.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.110.0 h1:Zc8gqp3+a9/Eyph2KDmcGaPtbKRIoqq4YTlL4NMD0Ys=\ncloud.google.com/go/compute v1.19.1 h1:am86mquDUgjGNWxiGn+5PGLbmgiWXlE/yNWpIpNvuXY=\ncloud.google.com/go/compute v1.19.1/go.mod h1:6ylj3a05WF8leseCdIf77NK0g1ey+nj5IKd5/kvShxE=\ncloud.google.com/go/compute/metadata v0.2.3 h1:mg4jlk7mCAj6xXp9UJ4fjI9VUI5rubuGBW5aJ7UnBMY=\ncloud.google.com/go/compute/metadata v0.2.3/go.mod h1:VAV5nSsACxMJvgaAuX6Pk2AawlZn8kiOGuCv6gTkwuA=\ncloud.google.com/go/longrunning v0.4.1 h1:v+yFJOfKC3yZdY6ZUI933pIYdhyhV8S3NpWrXWmg7jM=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\ngithub.com/GehirnInc/crypt v0.0.0-20200316065508-bb7000b8a962 h1:KeNholpO2xKjgaaSyd+DyQRrsQjhbSeS7qe4nEw8aQw=\ngithub.com/GehirnInc/crypt v0.0.0-20200316065508-bb7000b8a962/go.mod h1:kC29dT1vFpj7py2OvG1khBdQpo3kInWP+6QipLbdngo=\ngithub.com/ProtonMail/go-crypto v0.0.0-20230124153114-0acdc8ae009b/go.mod h1:I0gYDMZ6Z5GRU7l58bNFSkPTFN6Yl12dsUlAZ8xy98g=\ngithub.com/ProtonMail/go-crypto v0.0.0-20230217124315-7d5c6f04bbb8 h1:wPbRQzjjwFc0ih8puEVAOFGELsn1zoIIYdxvML7mDxA=\ngithub.com/ProtonMail/go-crypto v0.0.0-20230217124315-7d5c6f04bbb8/go.mod h1:I0gYDMZ6Z5GRU7l58bNFSkPTFN6Yl12dsUlAZ8xy98g=\ngithub.com/ProtonMail/go-mime v0.0.0-20221031134845-8fd9bc37cf08/go.mod h1:qRZgbeASl2a9OwmsV85aWwRqic0NHPh+9ewGAzb4cgM=\ngithub.com/ProtonMail/gopenpgp/v2 v2.5.2 h1:97SjlWNAxXl9P22lgwgrZRshQdiEfAht0g3ZoiA1GCw=\ngithub.com/ProtonMail/gopenpgp/v2 v2.5.2/go.mod h1:52qDaCnto6r+CoWbuU50T77XQt99lIs46HtHtvgFO3o=\ngithub.com/PuerkitoBio/ghost v0.0.0-20160324114900-206e6e460e14 h1:3zOOc7WdrATDXof+h/rBgMsg0sAmZIEVHft1UbWHh94=\ngithub.com/PuerkitoBio/ghost v0.0.0-20160324114900-206e6e460e14/go.mod h1:+VFiaivV54Sa94ijzA/ZHQLoHuoUIS9hIqCK6f/76Zw=\ngithub.com/VojtechVitek/ratelimit v0.0.0-20160722140851-dc172bc0f6d2 h1:sIvihcW4qpN5qGSjmrsDDAbLpEq5tuHjJJfWY0Hud5Y=\ngithub.com/VojtechVitek/ratelimit v0.0.0-20160722140851-dc172bc0f6d2/go.mod h1:3YwJE8rEisS9eraee0hygGG4G3gqX8H8Nyu+nPTUnGU=\ngithub.com/aws/aws-sdk-go-v2 v1.18.0 h1:882kkTpSFhdgYRKVZ/VCgf7sd0ru57p2JCxz4/oN5RY=\ngithub.com/aws/aws-sdk-go-v2 v1.18.0/go.mod h1:uzbQtefpm44goOPmdKyAlXSNcwlRgF3ePWVW6EtJvvw=\ngithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.4.10 h1:dK82zF6kkPeCo8J1e+tGx4JdvDIQzj7ygIoLg8WMuGs=\ngithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.4.10/go.mod h1:VeTZetY5KRJLuD/7fkQXMU6Mw7H5m/KP2J5Iy9osMno=\ngithub.com/aws/aws-sdk-go-v2/config v1.18.25 h1:JuYyZcnMPBiFqn87L2cRppo+rNwgah6YwD3VuyvaW6Q=\ngithub.com/aws/aws-sdk-go-v2/config v1.18.25/go.mod h1:dZnYpD5wTW/dQF0rRNLVypB396zWCcPiBIvdvSWHEg4=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.13.24 h1:PjiYyls3QdCrzqUN35jMWtUK1vqVZ+zLfdOa/UPFDp0=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.13.24/go.mod h1:jYPYi99wUOPIFi0rhiOvXeSEReVOzBqFNOX5bXYoG2o=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.13.3 h1:jJPgroehGvjrde3XufFIJUZVK5A2L9a3KwSFgKy9n8w=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.13.3/go.mod h1:4Q0UFP0YJf0NrsEuEYHpM9fTSEVnD16Z3uyEF7J9JGM=\ngithub.com/aws/aws-sdk-go-v2/feature/s3/manager v1.11.67 h1:fI9/5BDEaAv/pv1VO1X1n3jfP9it+IGqWsCuuBQI8wM=\ngithub.com/aws/aws-sdk-go-v2/feature/s3/manager v1.11.67/go.mod h1:zQClPRIwQZfJlZq6WZve+s4Tb4JW+3V6eS+4+KrYeP8=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.1.33 h1:kG5eQilShqmJbv11XL1VpyDbaEJzWxd4zRiCG30GSn4=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.1.33/go.mod h1:7i0PF1ME/2eUPFcjkVIwq+DOygHEoK92t5cDqNgYbIw=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.4.27 h1:vFQlirhuM8lLlpI7imKOMsjdQLuN9CPi+k44F/OFVsk=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.4.27/go.mod h1:UrHnn3QV/d0pBZ6QBAEQcqFLf8FAzLmoUfPVIueOvoM=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.3.34 h1:gGLG7yKaXG02/jBlg210R7VgQIotiQntNhsCFejawx8=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.3.34/go.mod h1:Etz2dj6UHYuw+Xw830KfzCfWGMzqvUTCjUj5b76GVDc=\ngithub.com/aws/aws-sdk-go-v2/internal/v4a v1.0.25 h1:AzwRi5OKKwo4QNqPf7TjeO+tK8AyOK3GVSwmRPo7/Cs=\ngithub.com/aws/aws-sdk-go-v2/internal/v4a v1.0.25/go.mod h1:SUbB4wcbSEyCvqBxv/O/IBf93RbEze7U7OnoTlpPB+g=\ngithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.9.11 h1:y2+VQzC6Zh2ojtV2LoC0MNwHWc6qXv/j2vrQtlftkdA=\ngithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.9.11/go.mod h1:iV4q2hsqtNECrfmlXyord9u4zyuFEJX9eLgLpSPzWA8=\ngithub.com/aws/aws-sdk-go-v2/service/internal/checksum v1.1.28 h1:vGWm5vTpMr39tEZfQeDiDAMgk+5qsnvRny3FjLpnH5w=\ngithub.com/aws/aws-sdk-go-v2/service/internal/checksum v1.1.28/go.mod h1:spfrICMD6wCAhjhzHuy6DOZZ+LAIY10UxhUmLzpJTTs=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.9.27 h1:0iKliEXAcCa2qVtRs7Ot5hItA2MsufrphbRFlz1Owxo=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.9.27/go.mod h1:EOwBD4J4S5qYszS5/3DpkejfuK+Z5/1uzICfPaZLtqw=\ngithub.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.14.2 h1:NbWkRxEEIRSCqxhsHQuMiTH7yo+JZW1gp8v3elSVMTQ=\ngithub.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.14.2/go.mod h1:4tfW5l4IAB32VWCDEBxCRtR9T4BWy4I4kr1spr8NgZM=\ngithub.com/aws/aws-sdk-go-v2/service/s3 v1.33.1 h1:O+9nAy9Bb6bJFTpeNFtd9UfHbgxO1o4ZDAM9rQp5NsY=\ngithub.com/aws/aws-sdk-go-v2/service/s3 v1.33.1/go.mod h1:J9kLNzEiHSeGMyN7238EjJmBpCniVzFda75Gxl/NqB8=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.12.10 h1:UBQjaMTCKwyUYwiVnUt6toEJwGXsLBI6al083tpjJzY=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.12.10/go.mod h1:ouy2P4z6sJN70fR3ka3wD3Ro3KezSxU6eKGQI2+2fjI=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.14.10 h1:PkHIIJs8qvq0e5QybnZoG1K/9QTrLr9OsqCIo59jOBA=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.14.10/go.mod h1:AFvkxc8xfBe8XA+5St5XIHHrQQtkxqrRincx4hmMHOk=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.19.0 h1:2DQLAKDteoEDI8zpCzqBMaZlJuoE9iTYD0gFmXVax9E=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.19.0/go.mod h1:BgQOMsg8av8jset59jelyPW7NoZcZXLVpDsXunGDrk8=\ngithub.com/aws/smithy-go v1.13.5 h1:hgz0X/DX0dGqTYpGALqXJoRKRj5oQ7150i5FdTePzO8=\ngithub.com/aws/smithy-go v1.13.5/go.mod h1:Tg+OJXh4MB2R/uN61Ko2f6hTZwB/ZYGOtib8J3gBHzA=\ngithub.com/aymerick/douceur v0.2.0 h1:Mv+mAeH1Q+n9Fr+oyamOlAkUNPWPlA8PPGR0QAaYuPk=\ngithub.com/aymerick/douceur v0.2.0/go.mod h1:wlT5vV2O3h55X9m7iVYN0TBM0NH/MmbLnd30/FjWUq4=\ngithub.com/bradfitz/gomemcache v0.0.0-20170208213004-1952afaa557d/go.mod h1:PmM6Mmwb0LSuEubjR8N7PtNe1KxZLtOUHtbeikc5h60=\ngithub.com/bwesterb/go-ristretto v1.2.0/go.mod h1:fUIoIZaG73pV5biE2Blr2xEzDoMj7NFEuV9ekS419A0=\ngithub.com/calebcase/tmpfile v1.0.3 h1:BZrOWZ79gJqQ3XbAQlihYZf/YCV0H4KPIdM5K5oMpJo=\ngithub.com/calebcase/tmpfile v1.0.3/go.mod h1:UAUc01aHeC+pudPagY/lWvt2qS9ZO5Zzof6/tIUzqeI=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cloudflare/circl v1.1.0/go.mod h1:prBCrKB9DV4poKZY1l9zBXg2QJY7mvgRvtMxxK7fi4I=\ngithub.com/cloudflare/circl v1.3.7 h1:qlCDlTPz2n9fu58M0Nh1J/JzcFpfgkFHHX3O35r5vcU=\ngithub.com/cloudflare/circl v1.3.7/go.mod h1:sRTcRWXGLrKw6yIGJ+l7amYJFfAXbZG0kBSc8r4zxgA=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2 h1:p1EgwI/C7NhT0JmVkwCD2ZBK8j4aeHQX2pMHHBfMQ6w=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dsnet/try v0.0.3 h1:ptR59SsrcFUYbT/FhAbKTV6iLkeD6O18qfIWRml2fqI=\ngithub.com/dutchcoders/go-clamd v0.0.0-20170520113014-b970184f4d9e h1:rcHHSQqzCgvlwP0I/fQ8rQMn/MpHE5gWSLdtpxtP6KQ=\ngithub.com/dutchcoders/go-clamd v0.0.0-20170520113014-b970184f4d9e/go.mod h1:Byz7q8MSzSPkouskHJhX0er2mZY/m0Vj5bMeMCkkyY4=\ngithub.com/dutchcoders/go-virustotal v0.0.0-20140923143438-24cc8e6fa329 h1:ERqCkG/uSyT74P1m/j9yR+so+7ynY4fbTvLY/Mr1ZMg=\ngithub.com/dutchcoders/go-virustotal v0.0.0-20140923143438-24cc8e6fa329/go.mod h1:G5qOfE5bQZ5scycLpB7fYWgN4y3xdfXo+pYWM8z2epY=\ngithub.com/dutchcoders/transfer.sh-web v0.0.0-20221119114740-ca3a2621d2a6 h1:7uTRy44YpQi6/mtDq0N9zeQRCGEh93o7gKq/usGgpF8=\ngithub.com/dutchcoders/transfer.sh-web v0.0.0-20221119114740-ca3a2621d2a6/go.mod h1:F6Q37CxDh2MHr5KXkcZmNB3tdkK7v+bgE+OpBY+9ilI=\ngithub.com/elazarl/go-bindata-assetfs v1.0.1 h1:m0kkaHRKEu7tUIUFVwhGGGYClXvyl4RE03qmvRTNfbw=\ngithub.com/elazarl/go-bindata-assetfs v1.0.1/go.mod h1:v+YaWX3bdea5J/mo8dSETolEo7R71Vk1u8bnjau5yw4=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/fatih/color v1.14.1 h1:qfhVLaG5s+nCROl1zJsZRxFeYrHLqWroPOQ8BWiNb4w=\ngithub.com/fatih/color v1.14.1/go.mod h1:2oHN61fhTpgcxD3TSWCgKDiH1+x4OiDVVGH8WlgGZGg=\ngithub.com/felixge/httpsnoop v1.0.1/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/felixge/httpsnoop v1.0.3 h1:s/nj+GCswXYzN5v2DpNMuMQYe+0DDwt5WVCU6CWBdXk=\ngithub.com/felixge/httpsnoop v1.0.3/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/flynn/noise v1.0.0 h1:DlTHqmzmvcEiKj+4RYo/imoswx/4r6iBlCMfVtrMXpQ=\ngithub.com/flynn/noise v1.0.0/go.mod h1:xbMo+0i6+IGbYdJhF31t2eR1BIU0CYc12+BNAKwUTag=\ngithub.com/fsnotify/fsnotify v1.4.3-0.20170329110642-4da3e2cfbabc/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/garyburd/redigo v1.1.1-0.20170914051019-70e1b1943d4f/go.mod h1:NR3MbYisc3/PwhQ00EMzDiPmrwpPxAn5GI05/YaO1SY=\ngithub.com/garyburd/redigo v1.6.4 h1:LFu2R3+ZOPgSMWMOL+saa/zXRjw0ID2G8FepO53BGlg=\ngithub.com/garyburd/redigo v1.6.4/go.mod h1:rTb6epsqigu3kYKBnaF028A7Tf/Aw5s0cqA47doKKqw=\ngithub.com/go-stack/stack v1.6.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/gddo v0.0.0-20210115222349-20d68f94ee1f h1:16RtHeWGkJMc80Etb8RPCcKevXGldr57+LOyZt8zOlg=\ngithub.com/golang/gddo v0.0.0-20210115222349-20d68f94ee1f/go.mod h1:ijRvpgDJDI262hYq/IQVYgf8hd8IHUs93Ol0kvMBAx4=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/lint v0.0.0-20170918230701-e5d664eb928e/go.mod h1:tluoj9z5200jBnyusfRPU2LqT6J+DAorxEvtC7LHB+E=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.3 h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg=\ngithub.com/golang/protobuf v1.5.3/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/golang/snappy v0.0.0-20170215233205-553a64147049/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/google/go-cmp v0.1.1-0.20171103154506-982329095285/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.8/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.5.9 h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=\ngithub.com/google/pprof v0.0.0-20211108044417-e9b028704de0 h1:rsq1yB2xiFLDYYaYdlGBsSkwVzsCo500wMhxvW5A/bk=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.3.0 h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=\ngithub.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/enterprise-certificate-proxy v0.2.3 h1:yk9/cqRKtT9wXZSsRH9aurXEpJX+U6FLtpYTdC3R06k=\ngithub.com/googleapis/enterprise-certificate-proxy v0.2.3/go.mod h1:AwSRAtLfXpU5Nm3pW+v7rGDHp09LsPtGY9MduiEsR9k=\ngithub.com/googleapis/gax-go v2.0.0+incompatible/go.mod h1:SFVmujtThgffbyetf+mdk2eWhX2bMyUtNHzFKcPA9HY=\ngithub.com/googleapis/gax-go/v2 v2.7.1 h1:gF4c0zjUP2H/s/hEGyLA3I0fA2ZWjzYiONAD6cvPr8A=\ngithub.com/googleapis/gax-go/v2 v2.7.1/go.mod h1:4orTrqY6hXxxaUL4LHIPl6lGo8vAE38/qKbhSAKP6QI=\ngithub.com/gorilla/css v1.0.0 h1:BQqNyPTi50JCFMTw/b67hByjMVXZRwGha6wxVGkeihY=\ngithub.com/gorilla/css v1.0.0/go.mod h1:Dn721qIggHpt4+EFCcTLTU/vk5ySda2ReITrtgBl60c=\ngithub.com/gorilla/handlers v1.5.1 h1:9lRY6j8DEeeBT10CvO9hGW0gmky0BprnvDI5vfhUHH4=\ngithub.com/gorilla/handlers v1.5.1/go.mod h1:t8XrUpc4KVXb7HGyJ4/cEnwQiaxrX/hz1Zv/4g96P1Q=\ngithub.com/gorilla/mux v1.8.0 h1:i40aqfkR1h2SlN9hojwV5ZA91wcXFOvkdNIeFDP5koI=\ngithub.com/gorilla/mux v1.8.0/go.mod h1:DVbg23sWSpFRCP0SfiEN6jmj59UnW/n46BH5rLB71So=\ngithub.com/gorilla/securecookie v1.1.1 h1:miw7JPhV+b/lAHSXz4qd/nN9jRiAFV5FwjeKyCS8BvQ=\ngithub.com/gorilla/securecookie v1.1.1/go.mod h1:ra0sb63/xPlUeL+yeDciTfxMRAA+MP+HVt/4epWDjd4=\ngithub.com/gregjones/httpcache v0.0.0-20170920190843-316c5e0ff04e/go.mod h1:FecbI9+v66THATjSRHfNgh1IVFe/9kFxbXtjV0ctIMA=\ngithub.com/hashicorp/hcl v0.0.0-20170914154624-68e816d1c783/go.mod h1:oZtUIOe8dh44I2q6ScRibXws4Ajl+d+nod3AaR9vL5w=\ngithub.com/inconshreveable/log15 v0.0.0-20170622235902-74a0988b5f80/go.mod h1:cOaXtrgN4ScfRrD9Bre7U1thNq5RtJ8ZoP4iXVGRj6o=\ngithub.com/jmespath/go-jmespath v0.4.0 h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=\ngithub.com/jmespath/go-jmespath v0.4.0/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1 h1:shLQSRRSCCPj3f2gpwzGwWFoC7ycTf1rcQZHOlsJ6N8=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1/go.mod h1:L3OGu8Wl2/fWfCI6z80xFu9LTZmf1ZRjMHUOPmWr69U=\ngithub.com/jtolio/eventkit v0.0.0-20230301123942-0cee1388f16f h1:HM2D/tnqbzNoN5DGIeB8ibM1BMYCkRWOqyWWcNAWw8o=\ngithub.com/jtolio/eventkit v0.0.0-20230301123942-0cee1388f16f/go.mod h1:PXFUrknJu7TkBNyL8t7XWDPtDFFLFrNQQAdsXv9YfJE=\ngithub.com/jtolio/noiseconn v0.0.0-20230227223919-bddcd1327059 h1:4xdaxDg3xe+DKZC8NjbH/gvTs4iNYUnzOAiD5QL5NrM=\ngithub.com/jtolio/noiseconn v0.0.0-20230227223919-bddcd1327059/go.mod h1:f0ijQHcvHYAuxX6JA/JUr/Z0FVn12D9REaT/HAWVgP4=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/cpuid/v2 v2.0.12/go.mod h1:g2LTdtYhdyuGPqyWyv7qRAmj1WBqxuObKfj5c0PQa7c=\ngithub.com/klauspost/cpuid/v2 v2.2.4 h1:acbojRNwl3o09bUq+yDCtZFc1aiwaAAxtcn8YkZXnvk=\ngithub.com/klauspost/cpuid/v2 v2.2.4/go.mod h1:RVVoqg1df56z8g3pUjL/3lE5UfnlrJX8tyFgg4nqhuY=\ngithub.com/kr/pretty v0.2.0/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/magiconair/properties v1.7.4-0.20170902060319-8d7837e64d3c/go.mod h1:PppfXfuXeibc/6YijjN8zIbojt8czPbwD3XqdrwzmxQ=\ngithub.com/mattn/go-colorable v0.0.10-0.20170816031813-ad5389df28cd/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.2/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.17 h1:BTarxUcIeDqL27Mc+vyvdWYSL28zpIhv3RoTdsLMPng=\ngithub.com/mattn/go-isatty v0.0.17/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/microcosm-cc/bluemonday v1.0.23 h1:SMZe2IGa0NuHvnVNAZ+6B38gsTbi5e4sViiWJyDDqFY=\ngithub.com/microcosm-cc/bluemonday v1.0.23/go.mod h1:mN70sk7UkkF8TUr2IGBpNN0jAgStuPzlK76QuruE/z4=\ngithub.com/mitchellh/mapstructure v0.0.0-20170523030023-d0303fe80992/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/nu7hatch/gouuid v0.0.0-20131221200532-179d4d0c4d8d h1:VhgPp6v9qf9Agr/56bj7Y/xa04UccTW04VP0Qed4vnQ=\ngithub.com/nu7hatch/gouuid v0.0.0-20131221200532-179d4d0c4d8d/go.mod h1:YUTz3bUH2ZwIWBy3CJBeOBEugqcmXREj14T+iG/4k4U=\ngithub.com/pelletier/go-toml v1.0.1-0.20170904195809-1d6b12b7cb29/go.mod h1:5z9KED0ma1S8pY6P1sdut58dfprrGBbd/94hg7ilaic=\ngithub.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/rogpeppe/go-internal v1.9.0 h1:73kH8U+JUqXU8lRuOHeVHaa/SZPifC7BkcraZVejAe8=\ngithub.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/shuLhan/go-bindata v4.0.0+incompatible/go.mod h1:pkcPAATLBDD2+SpAPnX5vEM90F7fcwHCvvLCMXcmw3g=\ngithub.com/skip2/go-qrcode v0.0.0-20200617195104-da1b6568686e h1:MRM5ITcdelLK2j1vwZ3Je0FKVCfqOLp5zO6trqMLYs0=\ngithub.com/skip2/go-qrcode v0.0.0-20200617195104-da1b6568686e/go.mod h1:XV66xRDqSt+GTGFMVlhk3ULuV0y9ZmzeVGR4mloJI3M=\ngithub.com/spacemonkeygo/monkit/v3 v3.0.19 h1:wqBb9bpD7jXkVi4XwIp8jn1fektaVBQ+cp9SHRXgAdo=\ngithub.com/spacemonkeygo/monkit/v3 v3.0.19/go.mod h1:kj1ViJhlyADa7DiA4xVnTuPA46lFKbM7mxQTrXCuJP4=\ngithub.com/spf13/afero v0.0.0-20170901052352-ee1bd8ee15a1/go.mod h1:j4pytiNVoe2o6bmDsKpLACNPDBIoEAkihy7loJ1B0CQ=\ngithub.com/spf13/cast v1.1.0/go.mod h1:r2rcYCSwa1IExKTDiTfzaxqT2FNHs8hODu4LnUfgKEg=\ngithub.com/spf13/jwalterweatherman v0.0.0-20170901151539-12bd96e66386/go.mod h1:cQK4TGJAtQXfYWX+Ddv3mKDzgVb68N+wFjFa4jdeBTo=\ngithub.com/spf13/pflag v1.0.1-0.20170901120850-7aff26db30c1/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=\ngithub.com/spf13/viper v1.0.0/go.mod h1:A8kyI5cUJhb8N+3pkfONlcEcZbueH6nhAm0Fq7SrnBM=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1 h1:w7B6lhMri9wdJUVmEZPGGhZzrYTPvgJArz7wNPgYKsk=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/tg123/go-htpasswd v1.2.1 h1:i4wfsX1KvvkyoMiHZzjS0VzbAPWfxzI8INcZAKtutoU=\ngithub.com/tg123/go-htpasswd v1.2.1/go.mod h1:erHp1B86KXdwQf1X5ZrLb7erXZnWueEQezb2dql4q58=\ngithub.com/tomasen/realip v0.0.0-20180522021738-f0c99a92ddce h1:fb190+cK2Xz/dvi9Hv8eCYJYvIGUTN2/KLq1pT6CjEc=\ngithub.com/tomasen/realip v0.0.0-20180522021738-f0c99a92ddce/go.mod h1:o8v6yHRoik09Xen7gje4m9ERNah1d1PPsVq1VEx9vE4=\ngithub.com/urfave/cli/v2 v2.25.3 h1:VJkt6wvEBOoSjPFQvOkv6iWIrsJyCrKGtCtxXWwmGeY=\ngithub.com/urfave/cli/v2 v2.25.3/go.mod h1:GHupkWPMM0M/sj1a2b4wUrWBPzazNrIjouW6fmdJLxc=\ngithub.com/vivint/infectious v0.0.0-20200605153912-25a574ae18a3 h1:zMsHhfK9+Wdl1F7sIKLyx3wrOFofpb3rWFbA4HgcK5k=\ngithub.com/vivint/infectious v0.0.0-20200605153912-25a574ae18a3/go.mod h1:R0Gbuw7ElaGSLOZUSwBm/GgVwMd30jWxBDdAyMOeTuc=\ngithub.com/xrash/smetrics v0.0.0-20201216005158-039620a65673 h1:bAn7/zixMGCfxrRTfdpNzjtPYqr8smhKouy9mxVdGPU=\ngithub.com/xrash/smetrics v0.0.0-20201216005158-039620a65673/go.mod h1:N3UwUGtsrSj3ccvlPHLoLsHnpR27oXr4ZE984MbSER8=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngithub.com/zeebo/assert v1.1.0/go.mod h1:Pq9JiuJQpG8JLJdtkwrJESF0Foym2/D9XMU5ciN/wJ0=\ngithub.com/zeebo/assert v1.3.1 h1:vukIABvugfNMZMQO1ABsyQDJDTVQbn+LWSMy1ol1h6A=\ngithub.com/zeebo/blake3 v0.2.3 h1:TFoLXsjeXqRNFxSbk35Dk4YtszE/MQQGK10BH4ptoTg=\ngithub.com/zeebo/blake3 v0.2.3/go.mod h1:mjJjZpnsyIVtVgTOSpJ9vmRE4wgDeyt2HU3qXvvKCaQ=\ngithub.com/zeebo/errs v1.3.0 h1:hmiaKqgYZzcVgRL1Vkc1Mn2914BbzB0IBxs+ebeutGs=\ngithub.com/zeebo/errs v1.3.0/go.mod h1:sgbWHsvVuTPHcqJJGQ1WhI5KbWlHYz+2+2C/LSEtCw4=\ngithub.com/zeebo/pcg v1.0.1 h1:lyqfGeWiv4ahac6ttHs+I5hwtH/+1mrhlCtVNQM2kHo=\ngithub.com/zeebo/pcg v1.0.1/go.mod h1:09F0S9iiKrwn9rlI5yjLkmrug154/YRW6KnnXVDM/l4=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210322153248-0c34fe9e7dc2/go.mod h1:T9bdIzuCu7OtxOm1hfPfRQxPLYneinmdGuTeoZ9dtd4=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.21.0 h1:X31++rzVUdKhX5sWmSOFZxx8UW/ldWx55cbf08iNAMA=\ngolang.org/x/crypto v0.21.0/go.mod h1:0BP7YvVV9gBbVKyeTG0Gyn+gZm94bibOW5BjDEYAOMs=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190731235908-ec7cb31e5a56/go.mod h1:JhuoJpWY28nO4Vef9tZUw9qufEGTyX1+7lmHxV5q5G4=\ngolang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\ngolang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=\ngolang.org/x/mobile v0.0.0-20221110043201-43a038452099/go.mod h1:aAjjkJNdrh3PMckS4B10TGS2nag27cbKR1y2BpUxsiY=\ngolang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190923162816-aa69164e4478/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.23.0 h1:7EYJ93RZ9vYSZAIb2x3lnuvqO5zneoD6IvWjuhfxjTs=\ngolang.org/x/net v0.23.0/go.mod h1:JKghWKKOSdJwpW2GEx0Ja7fmaKnMsbu+MWVZTokSYmg=\ngolang.org/x/oauth2 v0.0.0-20170912212905-13449ad91cb2/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.7.0 h1:qe6s0zUXlPX80/dITx3440hWZ7GwMwgDDyrSGTPJG/g=\ngolang.org/x/oauth2 v0.7.0/go.mod h1:hPLQkd9LyjfXTiRohC/41GhcFqxisoUQ99sCUOHO9x4=\ngolang.org/x/sync v0.0.0-20170517211232-f52d1811a629/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220819030929-7fc1605a5dde/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0 h1:wsuoTGHzEhffawBOhz5CYhcrV4IdKZbEyZjBMuTp12o=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210514084401-e8d321eab015/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211007075335-d3039528d8ac/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220704084225-05e143d24a9e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.18.0 h1:DBdB3niSjOA/O0blCZBqDefyWNYveAYMNF1Wum0DYQ4=\ngolang.org/x/sys v0.18.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.14.0 h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/time v0.0.0-20170424234030-8be79e1e0910/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/api v0.0.0-20170921000349-586095a6e407/go.mod h1:4mhQ8q/RsB7i+udVvVy5NUi08OU8ZlA0gRVgrF7VFY0=\ngoogle.golang.org/api v0.114.0 h1:1xQPji6cO2E2vLiI+C/XiFAnsn1WV3mjaEwGLhi3grE=\ngoogle.golang.org/api v0.114.0/go.mod h1:ifYI2ZsFK6/uGddGfAD5BMxlnkBqCmqHSDUVi45N5Yg=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.6.5/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.7 h1:FZR1q0exgwxzPzp/aF+VccGrSfxfPpkBqjIIEq3ru6c=\ngoogle.golang.org/appengine v1.6.7/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/genproto v0.0.0-20170918111702-1e559d0a00ee/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20230410155749-daa745c078e1 h1:KpwkzHKEF7B9Zxg18WzOa7djJ+Ha5DzthMyZYQfEn2A=\ngoogle.golang.org/genproto v0.0.0-20230410155749-daa745c078e1/go.mod h1:nKE/iIaLqn2bQwXBg8f1g2Ylh6r5MN5CmZvuzZCgsCU=\ngoogle.golang.org/grpc v1.2.1-0.20170921194603-d4b75ebd4f9f/go.mod h1:yo6s7OP7yaDglbqo1J04qKzAhqBH6lvTonzMVmEdcZw=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.56.3 h1:8I4C0Yq1EjstUzUJzpcRVbuYA2mODtEmpWiQoN/b2nc=\ngoogle.golang.org/grpc v1.56.3/go.mod h1:I9bI3vqKfayGqPUAwGdOSu7kt6oIJLixfffKrpXqQ9s=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.33.0 h1:uNO2rsAINq/JlFpSdYEKIZ0uKD/R9cpdv0T+yoGwGmI=\ngoogle.golang.org/protobuf v1.33.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nstorj.io/common v0.0.0-20230301105927-7f966760c100 h1:0Rc6boo10ZgiHdadHi1o2OUv25YvTn8fSc/VyRz2Tyk=\nstorj.io/common v0.0.0-20230301105927-7f966760c100/go.mod h1:tDgoLthBVcrTPEokBgPdjrn39p/gyNx06j6ehhTSiUg=\nstorj.io/drpc v0.0.33-0.20230204035225-c9649dee8f2a h1:FBaOc8c5efmW3tmPsiGy07USMkOSu/tyYCZpu2ro0y8=\nstorj.io/drpc v0.0.33-0.20230204035225-c9649dee8f2a/go.mod h1:6rcOyR/QQkSTX/9L5ZGtlZaE2PtXTTZl8d+ulSeeYEg=\nstorj.io/picobuf v0.0.1 h1:ekEvxSQCbEjTVIi/qxj2za13SJyfRE37yE30IBkZeT0=\nstorj.io/picobuf v0.0.1/go.mod h1:7ZTAMs6VesgTHbbhFU79oQ9hDaJ+MD4uoFQZ1P4SEz0=\nstorj.io/uplink v1.10.0 h1:3hS0hszupHSxEoC4DsMpljaRy0uNoijEPVF6siIE28Q=\nstorj.io/uplink v1.10.0/go.mod h1:gJIQumB8T3tBHPRive51AVpbc+v2xe+P/goFNMSRLG4=\n"
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 0.173828125,
          "content": "package main\n\nimport (\n\t\"log\"\n\t\"os\"\n\n\t\"github.com/dutchcoders/transfer.sh/cmd\"\n)\n\nfunc main() {\n\tapp := cmd.New()\n\terr := app.Run(os.Args)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n}\n"
        },
        {
          "name": "manifest.json",
          "type": "blob",
          "size": 0.1220703125,
          "content": "{\n    \"dependencies\": {\n        \"github.com/dutchcoders/transfer.sh-web\": {\n            \"branch\": \"master\"\n        }\n    }\n}\n"
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}