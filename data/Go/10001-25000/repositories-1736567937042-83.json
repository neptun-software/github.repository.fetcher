{
  "metadata": {
    "timestamp": 1736567937042,
    "page": 83,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nats-io/nats-server",
      "stars": 16300,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".coveralls.yml",
          "type": "blob",
          "size": 0.0244140625,
          "content": "service_name: travis-pro\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.478515625,
          "content": "# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n_obj\n_test\ndist\n\n# Configuration Files\n*.conf\n*.cfg\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\n\n# Eclipse\n.project\n\n# IntelliJ\n.idea/\n\n# Emacs\n*~\n\\#*\\#\n.\\#*\n\n# Visual Studio Code\n.vscode\n\n# Mac\n.DS_Store\n\n# bin\nnats-server\ngnatsd\ncheck\n\n# coverage\ncoverage.out\n\n# Cross compiled binaries\npkg\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 1.4912109375,
          "content": "# Config file for golangci-lint\nrun:\n  concurrency: 4\n  issues-exit-code: 1\n  tests: true\n  modules-download-mode: readonly\n\noutput:\n  formats:\n    - format: colored-line-number\n      path: stdout\n  print-issued-lines: true\n  print-linter-name: true\n\nlinters:\n  disable-all: true\n  enable:\n    # - errcheck\n    - forbidigo\n    - goimports\n    - gosimple\n    - govet\n    - ineffassign\n    # - maligned\n    - misspell\n    # - prealloc\n    - staticcheck\n    # - unparam\n    - unused\n\nlinters-settings:\n  errcheck:\n    check-type-assertions: false\n    check-blank: false\n  forbidigo:\n    forbid:\n      - ^fmt\\.Print(f|ln)?$\n  govet:\n    settings:\n      printf:\n        funcs:\n          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof\n          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf\n          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf\n          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf\n  misspell:\n    locale: US\n  unparam:\n    check-exported: false\n  prealloc:\n    simple: true\n    range-loops: true\n    for-loops: true\n\nissues:\n  exclude-dirs:\n    - .github\n    - doc\n    - docker\n    - logos\n    - scripts\n    - util\n  exclude-rules:\n    - path: \"main.go\" # Excludes main usage\n      linters: [forbidigo]\n    - source: \"nats-server: v%s\" # Excludes PrintServerAndExit\n      linters: [forbidigo]\n    - path: \"server/opts.go\" # Excludes TLS usage options\n      linters: [forbidigo]\n    - path: \"_test.go\" # Excludes unit tests\n      linters: [forbidigo]\n"
        },
        {
          "name": ".goreleaser-nightly.yml",
          "type": "blob",
          "size": 1.22265625,
          "content": "project_name: nats-server\nversion: 2\n\nbuilds:\n  - main: .\n    id: nats-server\n    binary: nats-server\n    ldflags:\n      - -w -X github.com/nats-io/nats-server/v2/server.gitCommit={{.ShortCommit}}\n    env:\n      - GO111MODULE=on\n      - CGO_ENABLED=0\n    goos:\n      - linux\n    goarch:\n      - amd64\n    mod_timestamp: \"{{ .CommitTimestamp }}\"\n\ndockers:\n  - goos: linux\n    goarch: amd64\n    skip_push: true\n    dockerfile: docker/Dockerfile.nightly\n    build_flag_templates:\n      - '--build-arg=VERSION={{ if index .Env \"IMAGE_NAME\"  }}{{ .Env.IMAGE_NAME }}{{ else if not (eq .Branch \"main\" \"dev\" \"\") }}{{ replace .Branch \"/\" \"-\" }}{{ else }}nightly{{ end }}-{{ time \"20060102\" }}'\n    image_templates:\n      - synadia/nats-server:{{.Version}}\n      - synadia/nats-server:{{ if index .Env \"IMAGE_NAME\"  }}{{ .Env.IMAGE_NAME }}{{ else if not (eq .Branch \"main\" \"dev\" \"\") }}{{ replace .Branch \"/\" \"-\" }}{{ else }}nightly{{ end }}\n    extra_files:\n      - docker/nats-server.conf\n\nchecksum:\n  name_template: \"SHA256SUMS\"\n  algorithm: sha256\n\nsnapshot:\n  version_template: '{{ if index .Env \"IMAGE_NAME\"  }}{{ .Env.IMAGE_NAME }}{{ else if not (eq .Branch \"main\" \"dev\" \"\") }}{{ replace .Branch \"/\" \"-\" }}{{ else }}nightly{{ end }}-{{ time \"20060102\" }}'\n"
        },
        {
          "name": ".goreleaser.yml",
          "type": "blob",
          "size": 1.935546875,
          "content": "project_name: nats-server\nversion: 2\n\nrelease:\n  github:\n    owner: nats-io\n    name: nats-server\n  name_template: \"Release {{.Tag}}\"\n  draft: true\n\nchangelog:\n  disable: true\n\nbuilds:\n  - main: .\n    binary: nats-server\n    flags:\n      - -trimpath\n    ldflags:\n      - -w -X 'github.com/nats-io/nats-server/v2/server.gitCommit={{.ShortCommit}}' -X 'github.com/nats-io/nats-server/v2/server.serverVersion={{.Tag}}'\n    env:\n      - GO111MODULE=on\n      - CGO_ENABLED=0\n    goos:\n      - darwin\n      - linux\n      - windows\n      - freebsd\n    goarch:\n      - amd64\n      - arm\n      - arm64\n      - 386\n      - mips64le\n      - s390x\n      - ppc64le\n    goarm:\n      - 6\n      - 7\n    ignore:\n      - goos: darwin\n        goarch: 386\n      - goos: freebsd\n        goarch: arm\n      - goos: freebsd\n        goarch: arm64\n      - goos: freebsd\n        goarch: 386\n    mod_timestamp: \"{{ .CommitTimestamp }}\"\n\nnfpms:\n  - file_name_template: \"{{.ProjectName}}-{{.Tag}}-{{.Arch}}{{if .Arm}}{{.Arm}}{{end}}\"\n    homepage: https://nats.io\n    description: High-Performance server for NATS, the cloud native messaging system.\n    maintainer: Ivan Kozlovic <ivan@synadia.com>\n    license: Apache 2.0\n    vendor: Synadia Inc.\n    formats:\n      - deb\n      - rpm\n    contents:\n      - src: /usr/bin/nats-server\n        dst: /usr/local/bin/nats-server\n        type: \"symlink\"\n\narchives:\n  - name_template: \"{{.ProjectName}}-{{.Tag}}-{{.Os}}-{{.Arch}}{{if .Arm}}{{.Arm}}{{end}}\"\n    wrap_in_directory: true\n    format: zip\n    files:\n      - README.md\n      - LICENSE\n  - name_template: \"{{.ProjectName}}-{{.Tag}}-{{.Os}}-{{.Arch}}{{if .Arm}}{{.Arm}}{{end}}\"\n    id: targz-archives\n    wrap_in_directory: true\n    format: tar.gz\n    files:\n      - README.md\n      - LICENSE\n\nchecksum:\n  name_template: \"SHA256SUMS\"\n  algorithm: sha256\n\nsboms:\n  - artifacts: binary\n    documents:\n      [\n        \"{{.ProjectName}}-{{.Tag}}-{{.Os}}-{{.Arch}}{{if .Arm}}{{.Arm}}{{end}}.sbom.spdx.json\",\n      ]\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 2.251953125,
          "content": "os: linux\ndist: focal\n\nvm:\n  size: x-large\n\nlanguage: go\ngo:\n  # This should be quoted or use .x, but should not be unquoted.\n  # Remember that a YAML bare float drops trailing zeroes.\n  - \"1.23.4\"\n  - \"1.22.10\"\n\ngo_import_path: github.com/nats-io/nats-server\n\naddons:\n  apt:\n    packages:\n      - rpm\n\njobs:\n  include:\n    - name: \"Compile and various other checks\"\n      env: TEST_SUITE=compile\n    - name: \"Run TestNoRace tests\"\n      env: TEST_SUITE=no_race_tests\n    - name: \"Run Store tests\"\n      env: TEST_SUITE=store_tests\n    - name: \"Run JetStream tests\"\n      env: TEST_SUITE=js_tests\n    - name: \"Run JetStream cluster tests (1)\"\n      env: TEST_SUITE=js_cluster_tests_1\n    - name: \"Run JetStream cluster tests (2)\"\n      env: TEST_SUITE=js_cluster_tests_2\n    - name: \"Run JetStream cluster tests (3)\"\n      env: TEST_SUITE=js_cluster_tests_3\n    - name: \"Run JetStream cluster tests (4)\"\n      env: TEST_SUITE=js_cluster_tests_4\n    - name: \"Run JetStream super cluster tests\"\n      env: TEST_SUITE=js_super_cluster_tests\n    - name: \"Run MQTT tests\"\n      env: TEST_SUITE=mqtt_tests\n    - name: \"Run Message Tracing tests\"\n      env: TEST_SUITE=msgtrace_tests\n    - name: \"Run all other tests from the server package\"\n      env: TEST_SUITE=srv_pkg_non_js_tests\n    - name: \"Run all tests from all other packages\"\n      env: TEST_SUITE=non_srv_pkg_tests\n    - name: \"Compile with older Go release\"\n      go: \"1.22.x\"\n      env: TEST_SUITE=build_only\n\nscript: ./scripts/runTestsOnTravis.sh $TEST_SUITE\n\n# Install Syft which is used by GoReleaser in the deploy step.\n# Cosign is an optional dependency to verify the Syft binary.\nbefore_deploy:\n  - curl -o /usr/local/bin/cosign -L https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64 && chmod +x /usr/local/bin/cosign\n  - curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | COSIGN_BINARY=/usr/local/bin/cosign sh -s -- -v -b /usr/local/bin v1.18.1\n\ndeploy:\n  provider: script\n  cleanup: true\n  script: curl -o /tmp/goreleaser.tar.gz -sLf https://github.com/goreleaser/goreleaser/releases/download/v2.5.0/goreleaser_Linux_x86_64.tar.gz && tar -xvf /tmp/goreleaser.tar.gz -C /tmp/ && /tmp/goreleaser\n  on:\n    tags: true\n    condition: ($TRAVIS_GO_VERSION =~ 1.23) && ($TEST_SUITE = \"compile\")\n"
        },
        {
          "name": "AMBASSADORS.md",
          "type": "blob",
          "size": 0.3134765625,
          "content": "# Ambassadors\n\nThe NATS ambassador program recognizes community members that go above and beyond in their contributions to the community and the ecosystem. Learn more [here](https://nats.io/community#nats-ambassador-program).\n\n- [Maurice van Veen](https://nats.io/community#maurice-van-veen) <contact@mauricevanveen.com>\n"
        },
        {
          "name": "CODE-OF-CONDUCT.md",
          "type": "blob",
          "size": 0.134765625,
          "content": "## Community Code of Conduct\n\nNATS follows the [CNCF Code of Conduct](https://github.com/cncf/foundation/blob/master/code-of-conduct.md).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.421875,
          "content": "# Contributing\n\nThanks for your interest in contributing! This document contains `nats-io/nats-server` specific contributing details. If you are a first-time contributor, please refer to the general [NATS Contributor Guide](https://nats.io/contributing/) to get a comprehensive overview of contributing to the NATS project.\n\n## Getting started\n\nThere are there general ways you can contribute to this repo:\n\n- Proposing an enhancement or new feature\n- Reporting a bug or regression\n- Contributing changes to the source code\n\nFor the first two, refer to the [GitHub Issues](https://github.com/nats-io/nats-server/issues/new/choose) which guides you through the available options along with the needed information to collect.\n\n## Contributing changes\n\n_Prior to opening a pull request, it is recommended to open an issue first to ensure the maintainers can review intended changes. Exceptions to this rule include fixing non-functional source such as code comments, documentation or other supporting files._\n\nProposing source code changes is done through GitHub's standard pull request workflow.\n\nIf your branch is a work-in-progress then please start by creating your pull requests as draft, by clicking the down-arrow next to the `Create pull request` button and instead selecting `Create draft pull request`.\n\nThis will defer the automatic process of requesting a review from the NATS team and significantly reduces noise until you are ready. Once you are happy, you can click the `Ready for review` button.\n\n### Guidelines\n\nA good pull request includes:\n\n- A high-level description of the changes, including links to any issues that are related by adding comments like `Resolves #NNN` to your description. See [Linking a Pull Request to an Issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue) for more information.\n- An up-to-date parent commit. Please make sure you are pulling in the latest `main` branch and rebasing your work on top of it, i.e. `git rebase main`.\n- Unit tests where appropriate. Bug fixes will benefit from the addition of regression tests. New features will not be accepted without suitable test coverage!\n- No more commits than necessary. Sometimes having multiple commits is useful for telling a story or isolating changes from one another, but please squash down any unnecessary commits that may just be for clean-up, comments or small changes.\n- No additional external dependencies that aren't absolutely essential. Please do everything you can to avoid pulling in additional libraries/dependencies into `go.mod` as we will be very critical of these.\n\n### Sign-off\n\nIn order to accept a contribution, you will first need to certify that the contribution is your original work and that you license the work to the project under the [Apache-2.0 license](https://github.com/nats-io/nats-server/blob/main/LICENSE).\n\nThis is done by using `Signed-off-by` statements, which should appear in **both** your commit messages and your PR description. Please note that we can only accept sign-offs under a legal name. Nicknames and aliases are not permitted.\n\nTo perform a sign-off with `git`, use `git commit -s` (or `--signoff`).\n\n## Get help\n\nIf you have questions about the contribution process, please start a [GitHub discussion](https://github.com/nats-io/nats-server/discussions), join the [NATS Slack](https://slack.nats.io/), or send your question to the [NATS Google Group](https://groups.google.com/forum/#!forum/natsio).\n"
        },
        {
          "name": "DEPENDENCIES.md",
          "type": "blob",
          "size": 0.822265625,
          "content": "# External Dependencies\n\nThis file lists the dependencies used in this repository.\n\n| Dependency | License |\n|-|-|\n| Go | BSD 3-Clause \"New\" or \"Revised\" License |\n| github.com/nats-io/nats-server/v2 | Apache License 2.0 |\n| github.com/google/go-tpm | Apache License 2.0 |\n| github.com/klauspost/compress | BSD 3-Clause \"New\" or \"Revised\" License |\n| github.com/minio/highwayhash | Apache License 2.0 |\n| github.com/nats-io/jwt/v2 | Apache License 2.0 |\n| github.com/nats-io/nats.go | Apache License 2.0 |\n| github.com/nats-io/nkeys | Apache License 2.0 |\n| github.com/nats-io/nuid  | Apache License 2.0 |\n| go.uber.org/automaxprocs | MIT License |\n| golang.org/x/crypto | BSD 3-Clause \"New\" or \"Revised\" License |\n| golang.org/x/sys | BSD 3-Clause \"New\" or \"Revised\" License |\n| golang.org/x/time | BSD 3-Clause \"New\" or \"Revised\" License |\n"
        },
        {
          "name": "GOVERNANCE.md",
          "type": "blob",
          "size": 0.16796875,
          "content": "# NATS Server Governance\n\nNATS Server is part of the NATS project and is subject to the [NATS Governance](https://github.com/nats-io/nats-general/blob/main/GOVERNANCE.md).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS.md",
          "type": "blob",
          "size": 0.5625,
          "content": "# Maintainers\n\nMaintainership is on a per project basis. Reference [NATS Governance Model](https://github.com/nats-io/nats-general/blob/main/GOVERNANCE.md).\n\n### Maintainers\n  - Derek Collison <derek@nats.io> [@derekcollison](https://github.com/derekcollison)\n  - Ivan Kozlovic <ivan@nats.io> [@kozlovic](https://github.com/kozlovic)\n  - Waldemar Quevedo <wally@nats.io> [@wallyqs](https://github.com/wallyqs)\n  - Oleg Shaldybin <olegsh@google.com> [@olegshaldybin](https://github.com/olegshaldybin)\n  - R.I. Pienaar <rip@devco.net> [@ripienaar](https://github.com/ripienaar)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.0498046875,
          "content": "<p align=\"center\">\n  <img src=\"logos/nats-horizontal-color.png\" width=\"300\" alt=\"NATS Logo\">\n</p>\n\n[NATS](https://nats.io) is a simple, secure and performant communications system for digital systems, services and devices. NATS is part of the Cloud Native Computing Foundation ([CNCF](https://cncf.io)). NATS has over [40 client language implementations](https://nats.io/download/), and its server can run on-premise, in the cloud, at the edge, and even on a Raspberry Pi. NATS can secure and simplify design and operation of modern distributed systems.\n\n[![License][License-Image]][License-Url] [![Build][Build-Status-Image]][Build-Status-Url] [![Release][Release-Image]][Release-Url] [![Slack][Slack-Image]][Slack-Url] [![Coverage][Coverage-Image]][Coverage-Url] [![Docker Downloads][Docker-Image]][Docker-Url] [![CII Best Practices][CIIBestPractices-Image]][CIIBestPractices-Url] [![Artifact Hub][ArtifactHub-Image]][ArtifactHub-Url]\n\n## Documentation\n\n- [Official Website](https://nats.io)\n- [Official Documentation](https://docs.nats.io)\n- [FAQ](https://docs.nats.io/reference/faq)\n- Watch [a video overview](https://rethink.synadia.com/episodes/1/) of NATS.\n- Watch [this video from SCALE 13x](https://www.youtube.com/watch?v=sm63oAVPqAM) to learn more about its origin story and design philosophy.\n\n## Contact\n\n- [Twitter](https://twitter.com/nats_io): Follow us on Twitter!\n- [Google Groups](https://groups.google.com/forum/#!forum/natsio): Where you can ask questions\n- [Slack](https://natsio.slack.com): Click [here](https://slack.nats.io) to join. You can ask question to our maintainers and to the rich and active community.\n\n## Contributing\n\nIf you are interested in contributing to NATS, read about our...\n\n- [Contributing guide](./CONTRIBUTING.md)\n- [Report issues or propose Pull Requests](https://github.com/nats-io)\n\n[License-Url]: https://www.apache.org/licenses/LICENSE-2.0\n[License-Image]: https://img.shields.io/badge/License-Apache2-blue.svg\n[Docker-Image]: https://img.shields.io/docker/pulls/_/nats.svg\n[Docker-Url]: https://hub.docker.com/_/nats\n[Slack-Image]: https://img.shields.io/badge/chat-on%20slack-green\n[Slack-Url]: https://slack.nats.io\n[Fossa-Url]: https://app.fossa.io/projects/git%2Bgithub.com%2Fnats-io%2Fnats-server?ref=badge_shield\n[Fossa-Image]: https://app.fossa.io/api/projects/git%2Bgithub.com%2Fnats-io%2Fnats-server.svg?type=shield\n[Build-Status-Url]: https://travis-ci.com/github/nats-io/nats-server\n[Build-Status-Image]: https://travis-ci.org/nats-io/nats-server.svg?branch=main\n[Release-Url]: https://github.com/nats-io/nats-server/releases/latest\n[Release-image]: https://img.shields.io/github/v/release/nats-io/nats-server\n[Coverage-Url]: https://coveralls.io/r/nats-io/nats-server?branch=main\n[Coverage-image]: https://coveralls.io/repos/github/nats-io/nats-server/badge.svg?branch=main\n[ReportCard-Url]: https://goreportcard.com/report/nats-io/nats-server\n[ReportCard-Image]: https://goreportcard.com/badge/github.com/nats-io/nats-server\n[CIIBestPractices-Url]: https://bestpractices.coreinfrastructure.org/projects/1895\n[CIIBestPractices-Image]: https://bestpractices.coreinfrastructure.org/projects/1895/badge\n[ArtifactHub-Url]: https://artifacthub.io/packages/helm/nats/nats\n[ArtifactHub-Image]: https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/nats\n[github-release]: https://github.com/nats-io/nats-server/releases/\n\n## Roadmap\n\nThe NATS product roadmap can be found [here](https://nats.io/about/#roadmap).\n\n## Adopters\n\nWho uses NATS? See our [list of users](https://nats.io/#who-uses-nats) on [https://nats.io](https://nats.io).\n\n## Security\n\n### Security Audit\n\nA third party security audit was performed by Cure53, you can see the full report [here](https://github.com/nats-io/nats-general/blob/main/reports/Cure53_NATS_Audit.pdf).\n\n### Reporting Security Vulnerabilities\n\nIf you've found a vulnerability or a potential vulnerability in the NATS server, please let us know at\n[nats-security](mailto:security@nats.io).\n\n## License\n\nUnless otherwise noted, the NATS source files are distributed\nunder the Apache Version 2.0 license found in the LICENSE file.\n"
        },
        {
          "name": "TODO.md",
          "type": "blob",
          "size": 2.201171875,
          "content": "\n# General\n\n- [ ] Auth for queue groups?\n- [ ] Blacklist or ERR escalation to close connection for auth/permissions\n- [ ] Protocol updates, MAP, MPUB, etc\n- [ ] Multiple listen endpoints\n- [ ] Websocket / HTTP2 strategy\n- [ ] T series reservations\n- [ ] _SYS. server events?\n- [ ] No downtime restart\n- [ ] Signal based reload of configuration\n- [ ] brew, apt-get, rpm, chocately (windows)\n- [ ] IOVec pools and writev for high fanout?\n- [ ] Modify cluster support for single message across routes between pub/sub and d-queue\n- [ ] Memory limits/warnings?\n- [ ] Limit number of subscriptions a client can have, total memory usage etc.\n- [ ] Multi-tenant accounts with isolation of subject space\n- [ ] Pedantic state\n- [X] _SYS.> reserved for server events?\n- [X] Listen configure key vs addr and port\n- [X] Add ENV and variable support to dconf? ucl?\n- [X] Buffer pools/sync pools?\n- [X] Multiple Authorization / Access\n- [X] Write dynamic socket buffer sizes\n- [X] Read dynamic socket buffer sizes\n- [X] Info updates contain other implicit route servers\n- [X] Sublist better at high concurrency, cache uses writelock always currently\n- [X] Switch to 1.4/1.5 and use maps vs hashmaps in sublist\n- [X] NewSource on Rand to lower lock contention on QueueSubs, or redesign!\n- [X] Default sort by cid on connz\n- [X] Track last activity time per connection?\n- [X] Add total connections to varz so we won't miss spikes, etc.\n- [X] Add starttime and uptime to connz list.\n- [X] Gossip Protocol for discovery for clustering\n- [X] Add in HTTP requests to varz?\n- [X] Add favico and help link for monitoring?\n- [X] Better user/pass support using bcrypt etc.\n- [X] SSL/TLS support\n- [X] Add support for / to point to varz, connz, etc..\n- [X] Support sort options for /connz via nats-top\n- [X] Dropped message statistics (slow consumers)\n- [X] Add current time to each monitoring endpoint\n- [X] varz uptime do days and only integer secs\n- [X] Place version in varz (same info sent to clients)\n- [X] Place server ID/UUID in varz\n- [X] nats-top equivalent, utils\n- [X] Connz report routes (/routez)\n- [X] Docker\n- [X] Remove reliance on `ps`\n- [X] Syslog support\n- [X] Client support for language and version\n- [X] Fix benchmarks on linux\n- [X] Daemon mode? Won't fix\n"
        },
        {
          "name": "conf",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.494140625,
          "content": "module github.com/nats-io/nats-server/v2\n\ngo 1.22\n\ntoolchain go1.22.8\n\nrequire (\n\tgithub.com/antithesishq/antithesis-sdk-go v0.4.3-default-no-op\n\tgithub.com/google/go-tpm v0.9.3\n\tgithub.com/klauspost/compress v1.17.11\n\tgithub.com/minio/highwayhash v1.0.3\n\tgithub.com/nats-io/jwt/v2 v2.7.3\n\tgithub.com/nats-io/nats.go v1.36.0\n\tgithub.com/nats-io/nkeys v0.4.9\n\tgithub.com/nats-io/nuid v1.0.1\n\tgo.uber.org/automaxprocs v1.6.0\n\tgolang.org/x/crypto v0.31.0\n\tgolang.org/x/sys v0.29.0\n\tgolang.org/x/time v0.9.0\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 2.9130859375,
          "content": "github.com/antithesishq/antithesis-sdk-go v0.4.3-default-no-op h1:+OSa/t11TFhqfrX0EOSqQBDJ0YlpmK0rDSiB19dg9M0=\ngithub.com/antithesishq/antithesis-sdk-go v0.4.3-default-no-op/go.mod h1:IUpT2DPAKh6i/YhSbt6Gl3v2yvUZjmKncl7U91fup7E=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/google/go-tpm v0.9.3 h1:+yx0/anQuGzi+ssRqeD6WpXjW2L/V0dItUayO0i9sRc=\ngithub.com/google/go-tpm v0.9.3/go.mod h1:h9jEsEECg7gtLis0upRBQU+GhYVH6jMjrFxI8u6bVUY=\ngithub.com/klauspost/compress v1.17.11 h1:In6xLpyWOi1+C7tXUUWv2ot1QvBjxevKAaI6IXrJmUc=\ngithub.com/klauspost/compress v1.17.11/go.mod h1:pMDklpSncoRMuLFrf1W9Ss9KT+0rH90U12bZKk7uwG0=\ngithub.com/minio/highwayhash v1.0.3 h1:kbnuUMoHYyVl7szWjSxJnxw11k2U709jqFPPmIUyD6Q=\ngithub.com/minio/highwayhash v1.0.3/go.mod h1:GGYsuwP/fPD6Y9hMiXuapVvlIUEhFhMTh0rxU3ik1LQ=\ngithub.com/nats-io/jwt/v2 v2.7.3 h1:6bNPK+FXgBeAqdj4cYQ0F8ViHRbi7woQLq4W29nUAzE=\ngithub.com/nats-io/jwt/v2 v2.7.3/go.mod h1:GvkcbHhKquj3pkioy5put1wvPxs78UlZ7D/pY+BgZk4=\ngithub.com/nats-io/nats.go v1.36.0 h1:suEUPuWzTSse/XhESwqLxXGuj8vGRuPRoG7MoRN/qyU=\ngithub.com/nats-io/nats.go v1.36.0/go.mod h1:Ubdu4Nh9exXdSz0RVWRFBbRfrbSxOYd26oF0wkWclB8=\ngithub.com/nats-io/nkeys v0.4.9 h1:qe9Faq2Gxwi6RZnZMXfmGMZkg3afLLOtrU+gDZJ35b0=\ngithub.com/nats-io/nkeys v0.4.9/go.mod h1:jcMqs+FLG+W5YO36OX6wFIFcmpdAns+w1Wm6D3I/evE=\ngithub.com/nats-io/nuid v1.0.1 h1:5iA8DT8V7q8WK2EScv2padNa/rTESc1KdnPw4TC2paw=\ngithub.com/nats-io/nuid v1.0.1/go.mod h1:19wcPz3Ph3q0Jbyiqsd0kePYG7A95tJPxeL+1OSON2c=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prashantv/gostub v1.1.0 h1:BTyx3RfQjRHnUWaGF9oQos79AlQ5k8WNktv7VGvVH4g=\ngithub.com/prashantv/gostub v1.1.0/go.mod h1:A5zLQHz7ieHGG7is6LLXLz7I8+3LZzsrV0P1IAHhP5U=\ngithub.com/stretchr/testify v1.7.1 h1:5TQK59W5E3v0r2duFAb7P95B6hEeOyEnHRa8MjYSMTY=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngo.uber.org/automaxprocs v1.6.0 h1:O3y2/QNTOdbF+e/dpXNNW7Rx2hZ4sTIPyybbxyNqTUs=\ngo.uber.org/automaxprocs v1.6.0/go.mod h1:ifeIMSnPZuznNm6jmdzmU3/bfk01Fe2fotchwEFJ8r8=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/sys v0.21.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.29.0 h1:TPYlXGxvx1MGTn2GiZDhnjPA9wZzZeGKHHmKhHYvgaU=\ngolang.org/x/sys v0.29.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/time v0.9.0 h1:EsRrnYcQiGH+5FfbgvV4AP7qEZstoyrHB0DzarOQ4ZY=\ngolang.org/x/time v0.9.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "locksordering.txt",
          "type": "blob",
          "size": 1.2412109375,
          "content": "Here is the list of some established lock ordering.\n\nIn this list, A -> B means that you can have A.Lock() then B.Lock(), not the opposite.\n\njetStream -> jsAccount -> Server -> client -> Account\n\njetStream -> jsAccount -> stream -> consumer\n\nA lock to protect jetstream account's usage has been introduced: jsAccount.usageMu.\nThis lock is independent and can be invoked under any other lock: jsAccount -> jsa.usageMu, stream -> jsa.usageMu, etc...\n\nA lock to protect the account's leafnodes list was also introduced to\nallow that lock to be held and the acquire a client lock which is not\npossible with the normal account lock.\n\naccountLeafList -> client\n\nAccountResolver interface has various implementations, but assume: AccountResolver -> Server\n\nA reloadMu lock was added to prevent newly connecting clients racing with the configuration reload.\nThis must be taken out as soon as a reload is about to happen before any other locks:\n\n    reloadMu -> Server\n    reloadMu -> optsMu\n\nThe \"jscmMu\" lock in the Account is used to serialise calls to checkJetStreamMigrate and\nclearObserverState so that they cannot interleave which would leave Raft nodes in\ninconsistent observer states.\n\n    jscmMu -> Account -> jsAccount\n    jscmMu -> stream.clsMu \n    jscmMu -> RaftNode"
        },
        {
          "name": "logger",
          "type": "tree",
          "content": null
        },
        {
          "name": "logos",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 5.373046875,
          "content": "// Copyright 2012-2022 The NATS Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage main\n\n//go:generate go run server/errors_gen.go\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com/nats-io/nats-server/v2/server\"\n\t\"go.uber.org/automaxprocs/maxprocs\"\n)\n\nvar usageStr = `\nUsage: nats-server [options]\n\nServer Options:\n    -a, --addr, --net <host>         Bind to host address (default: 0.0.0.0)\n    -p, --port <port>                Use port for clients (default: 4222)\n    -n, --name\n        --server_name <server_name>  Server name (default: auto)\n    -P, --pid <file>                 File to store PID\n    -m, --http_port <port>           Use port for http monitoring\n    -ms,--https_port <port>          Use port for https monitoring\n    -c, --config <file>              Configuration file\n    -t                               Test configuration and exit\n    -sl,--signal <signal>[=<pid>]    Send signal to nats-server process (ldm, stop, quit, term, reopen, reload)\n                                     <pid> can be either a PID (e.g. 1) or the path to a PID file (e.g. /var/run/nats-server.pid)\n        --client_advertise <string>  Client URL to advertise to other servers\n        --ports_file_dir <dir>       Creates a ports file in the specified directory (<executable_name>_<pid>.ports).\n\nLogging Options:\n    -l, --log <file>                 File to redirect log output\n    -T, --logtime                    Timestamp log entries (default: true)\n    -s, --syslog                     Log to syslog or windows event log\n    -r, --remote_syslog <addr>       Syslog server addr (udp://localhost:514)\n    -D, --debug                      Enable debugging output\n    -V, --trace                      Trace the raw protocol\n    -VV                              Verbose trace (traces system account as well)\n    -DV                              Debug and trace\n    -DVV                             Debug and verbose trace (traces system account as well)\n        --log_size_limit <limit>     Logfile size limit (default: auto)\n        --max_traced_msg_len <len>   Maximum printable length for traced messages (default: unlimited)\n\nJetStream Options:\n    -js, --jetstream                 Enable JetStream functionality\n    -sd, --store_dir <dir>           Set the storage directory\n\nAuthorization Options:\n        --user <user>                User required for connections\n        --pass <password>            Password required for connections\n        --auth <token>               Authorization token required for connections\n\nTLS Options:\n        --tls                        Enable TLS, do not verify clients (default: false)\n        --tlscert <file>             Server certificate file\n        --tlskey <file>              Private key for server certificate\n        --tlsverify                  Enable TLS, verify client certificates\n        --tlscacert <file>           Client certificate CA for verification\n\nCluster Options:\n        --routes <rurl-1, rurl-2>    Routes to solicit and connect\n        --cluster <cluster-url>      Cluster URL for solicited routes\n        --cluster_name <string>      Cluster Name, if not set one will be dynamically generated\n        --no_advertise <bool>        Do not advertise known cluster information to clients\n        --cluster_advertise <string> Cluster URL to advertise to other servers\n        --connect_retries <number>   For implicit routes, number of connect retries\n        --cluster_listen <url>       Cluster url from which members can solicit routes\n\nProfiling Options:\n        --profile <port>             Profiling HTTP port\n\nCommon Options:\n    -h, --help                       Show this message\n    -v, --version                    Show version\n        --help_tls                   TLS help\n`\n\n// usage will print out the flag options for the server.\nfunc usage() {\n\tfmt.Printf(\"%s\\n\", usageStr)\n\tos.Exit(0)\n}\n\nfunc main() {\n\texe := \"nats-server\"\n\n\t// Create a FlagSet and sets the usage\n\tfs := flag.NewFlagSet(exe, flag.ExitOnError)\n\tfs.Usage = usage\n\n\t// Configure the options from the flags/config file\n\topts, err := server.ConfigureOptions(fs, os.Args[1:],\n\t\tserver.PrintServerAndExit,\n\t\tfs.Usage,\n\t\tserver.PrintTLSHelpAndDie)\n\tif err != nil {\n\t\tserver.PrintAndDie(fmt.Sprintf(\"%s: %s\", exe, err))\n\t} else if opts.CheckConfig {\n\t\tfmt.Fprintf(os.Stderr, \"%s: configuration file %s is valid (%s)\\n\", exe, opts.ConfigFile, opts.ConfigDigest())\n\t\tos.Exit(0)\n\t}\n\n\t// Create the server with appropriate options.\n\ts, err := server.NewServer(opts)\n\tif err != nil {\n\t\tserver.PrintAndDie(fmt.Sprintf(\"%s: %s\", exe, err))\n\t}\n\n\t// Configure the logger based on the flags.\n\ts.ConfigureLogger()\n\n\t// Start things up. Block here until done.\n\tif err := server.Run(s); err != nil {\n\t\tserver.PrintAndDie(err.Error())\n\t}\n\n\t// Adjust MAXPROCS if running under linux/cgroups quotas.\n\tundo, err := maxprocs.Set(maxprocs.Logger(s.Debugf))\n\tif err != nil {\n\t\ts.Warnf(\"Failed to set GOMAXPROCS: %v\", err)\n\t} else {\n\t\tdefer undo()\n\t}\n\n\ts.WaitForShutdown()\n}\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}