{
  "metadata": {
    "timestamp": 1736568081258,
    "page": 220,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "shirou/gopsutil",
      "stars": 10779,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.029296875,
          "content": "*~\n#*\n_obj\n*.tmp\n.idea\nvendor\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 1.3798828125,
          "content": "issues:\n  max-same-issues: 0\n  exclude-rules:\n    - linters:\n        - gosec\n      text: G115\n    - linters:\n        - revive\n      text: var-naming\n    - linters:\n        - revive\n      text: exported\n    - linters:\n        - revive\n      text: empty-block\n    - linters:\n        - revive\n      text: unused-parameter\nlinters:\n  enable:\n    - asciicheck\n    - contextcheck\n    - durationcheck\n    - errorlint\n    - gci\n    - gofmt\n    - gofumpt\n    - goimports\n    - gomodguard\n    - gosec\n    - gosimple\n    - importas\n    - misspell\n    - nakedret\n    - nolintlint\n    - perfsprint\n    - predeclared\n    - revive\n    - testifylint\n    - typecheck\n    - unparam\n  disable:\n    - errcheck\n    - govet\n    - ineffassign\n    - staticcheck\n    - unused\nlinters-settings:\n  gci:\n    sections:\n      - standard\n      - default\n      - prefix(github.com/shirou)\n  gomodguard:\n    blocked:\n      modules:\n        - io/ioutil:\n            recommandations:\n              - io\n              - os\n  perfsprint:\n    # Optimizes even if it requires an int or uint type cast.\n    int-conversion: true\n    # Optimizes into `err.Error()` even if it is only equivalent for non-nil errors.\n    err-error: true\n    # Optimizes `fmt.Errorf`.\n    errorf: true\n    # Optimizes `fmt.Sprintf` with only one argument.\n    sprintf1: true\n    # Optimizes into strings concatenation.\n    strconcat: true\n  testifylint:\n    enable-all: true\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 3.0732421875,
          "content": "gopsutil is distributed under BSD license reproduced below.\n\nCopyright (c) 2014, WAKAYAMA Shirou\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n * Neither the name of the gopsutil authors nor the names of its contributors\n   may be used to endorse or promote products derived from this software without\n   specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n-------\ninternal/common/binary.go in the gopsutil is copied and modified from golang/encoding/binary.go.\n\n\n\nCopyright (c) 2009 The Go Authors. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.287109375,
          "content": ".PHONY: help check\n.DEFAULT_GOAL := help\n\nSUBPKGS=cpu disk docker host internal load mem net process\n\nhelp:  ## Show help\n\t@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$2}'\n\ncheck:  ## Check\n\terrcheck -ignore=\"Close|Run|Write\" ./...\n\tgolint ./... | egrep -v 'underscores|HttpOnly|should have comment|comment on exported|CamelCase|VM|UID' && exit 1 || exit 0\n\nBUILD_FAIL_PATTERN=grep -v \"exec format error\" | grep \"build failed\" && exit 1 || exit 0\nbuild_test:  ## test only buildable\n\t# Supported operating systems\n\tGOOS=linux GOARCH=amd64 go test ./... | $(BUILD_FAIL_PATTERN)\n\tGOOS=linux GOARCH=386 go test ./... | $(BUILD_FAIL_PATTERN)\n\tGOOS=linux GOARCH=arm go test ./... | $(BUILD_FAIL_PATTERN)\n\tGOOS=linux GOARCH=arm64 go test ./... | $(BUILD_FAIL_PATTERN)\n\tGOOS=linux GOARCH=loong64 go test ./... | $(BUILD_FAIL_PATTERN)\n\tGOOS=linux GOARCH=riscv64 go test ./... | $(BUILD_FAIL_PATTERN)\n\tGOOS=linux GOARCH=s390x go test ./... | $(BUILD_FAIL_PATTERN)\n\tGOOS=linux GOARCH=mips go test ./... | $(BUILD_FAIL_PATTERN)\n\tGOOS=freebsd GOARCH=amd64 go test ./... | $(BUILD_FAIL_PATTERN)\n\tGOOS=freebsd GOARCH=386 go test ./... | $(BUILD_FAIL_PATTERN)\n\tGOOS=freebsd GOARCH=arm go test ./... | $(BUILD_FAIL_PATTERN)\n\tGOOS=freebsd GOARCH=arm64 go test ./... | $(BUILD_FAIL_PATTERN)\n\tCGO_ENABLED=0 GOOS=darwin go test ./... | $(BUILD_FAIL_PATTERN)\n\tGOOS=windows go test ./... | $(BUILD_FAIL_PATTERN)\n\t# The following operating systems are tested only for successful builds.\n\t# Value testing is not performed.\n\tGOOS=solaris go test ./... | $(BUILD_FAIL_PATTERN)\n\tGOOS=dragonfly go test ./... | $(BUILD_FAIL_PATTERN)\n\tGOOS=netbsd go test ./... | $(BUILD_FAIL_PATTERN)\n\tGOOS=openbsd go test ./... | $(BUILD_FAIL_PATTERN)\n\tGOOS=plan9 go test ./... | $(BUILD_FAIL_PATTERN)\n\nifeq ($(shell uname -s), Darwin)\n\tCGO_ENABLED=1 GOOS=darwin go test ./... | $(BUILD_FAIL_PATTERN)\nendif\n\t@echo 'Successfully built on all known operating systems'\n\nvet:\n\tGOOS=darwin GOARCH=amd64 go vet ./...\n\tGOOS=darwin GOARCH=arm64 go vet ./...\n\n\tGOOS=dragonfly GOARCH=amd64 go vet ./...\n\n\tGOOS=freebsd GOARCH=amd64 go vet ./...\n\tGOOS=freebsd GOARCH=386 go vet ./...\n\tGOOS=freebsd GOARCH=arm go vet ./...\n\n\tGOOS=linux GOARCH=386 go vet ./...\n\tGOOS=linux GOARCH=amd64 go vet ./...\n\tGOOS=linux GOARCH=arm64 go vet ./...\n\tGOOS=linux GOARCH=arm go vet ./...\n\tGOOS=linux GOARCH=loong64 go vet ./...\n\tGOOS=linux GOARCH=mips64 go vet ./...\n\tGOOS=linux GOARCH=mips64le go vet ./...\n\tGOOS=linux GOARCH=mips go vet ./...\n\tGOOS=linux GOARCH=mipsle go vet ./...\n\tGOOS=linux GOARCH=ppc64le go vet ./...\n\tGOOS=linux GOARCH=ppc64 go vet ./...\n\tGOOS=linux GOARCH=riscv64 go vet ./...\n\tGOOS=linux GOARCH=s390x go vet ./...\n\n\tGOOS=netbsd GOARCH=amd64 go vet ./...\n\n\tGOOS=openbsd GOARCH=386 go vet ./...\n\tGOOS=openbsd GOARCH=amd64 go vet ./...\n\n\tGOOS=solaris GOARCH=amd64 go vet ./...\n\n\tGOOS=windows GOARCH=amd64 go vet ./...\n\tGOOS=windows GOARCH=386 go vet ./...\n\n\tGOOS=plan9 GOARCH=amd64 go vet ./...\n\tGOOS=plan9 GOARCH=386 go vet ./...\n\nmacos_test:\n\tCGO_ENABLED=0 GOOS=darwin go test ./... | $(BUILD_FAIL_PATTERN)\n\tCGO_ENABLED=1 GOOS=darwin go test ./... | $(BUILD_FAIL_PATTERN)\n\ninit_tools:\n\tgo get github.com/golang/dep/cmd/dep\n\nTAG=$(shell date +'v4.%y.%-m' --date='last Month')\n\nrelease:\n\tgit tag $(TAG)\n\tgit push origin $(TAG)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.103515625,
          "content": "# gopsutil: psutil for golang\n\n[![Test](https://github.com/shirou/gopsutil/actions/workflows/test.yml/badge.svg)](https://github.com/shirou/gopsutil/actions/workflows/test.yml) [![Go Reference](https://pkg.go.dev/badge/github.com/shirou/gopsutil/v4.svg)](https://pkg.go.dev/github.com/shirou/gopsutil/v4) [![Calendar Versioning](https://img.shields.io/badge/calver-vMAJOR.YY.MM-22bfda.svg)](https://calver.org/)\n\nThis is a port of psutil (https://github.com/giampaolo/psutil). The\nchallenge is porting all psutil functions on some architectures.\n\n## migration\n\n### v4 migration\n\nThere are some breaking changes. Please see [v4 release note](https://github.com/shirou/gopsutil/releases/tag/v4.24.5).\n\n## Tag semantics\n\ngopsutil tag policy is almost same as Semantic Versioning, but\nautomatically increases like [Ubuntu versioning](https://calver.org/).\n\nFor example, v4.24.04 means\n\n- v4: major version\n- 24: release year, 2024\n- 04: release month\n\ngopsutil aims to keep backwards compatibility until major version change.\n\nTagged at every end of month, but if there are only a few commits, it\ncan be skipped.\n\n## Available Architectures\n\n- FreeBSD i386/amd64/arm\n- Linux i386/amd64/arm(raspberry pi)\n- Windows i386/amd64/arm/arm64\n- Darwin amd64/arm64\n- OpenBSD i386/amd64/armv7/arm64/riscv64 (Thank you @mpfz0r!)\n- Solaris amd64 (developed and tested on SmartOS/Illumos, Thank you @jen20!)\n\nThese have partial support:\n\n- CPU on DragonFly BSD (#893, Thank you @gballet!)\n- host on Linux RISC-V (#896, Thank you @tklauser!)\n\nAll works are implemented without cgo by porting C structs to golang structs.\n\n## Usage\n\n```go\npackage main\n\nimport (\n    \"fmt\"\n\n    \"github.com/shirou/gopsutil/v4/mem\"\n)\n\nfunc main() {\n    v, _ := mem.VirtualMemory()\n\n    // almost every return value is a struct\n    fmt.Printf(\"Total: %v, Free:%v, UsedPercent:%f%%\\n\", v.Total, v.Free, v.UsedPercent)\n\n    // convert to JSON. String() is also implemented\n    fmt.Println(v)\n}\n```\n\nThe output is below.\n\n    Total: 3179569152, Free:284233728, UsedPercent:84.508194%\n    {\"total\":3179569152,\"available\":492572672,\"used\":2895335424,\"usedPercent\":84.50819439828305, (snip...)}\n\nYou can set alternative locations for various system directories by using the following environment variables:\n\n- /proc: `HOST_PROC`\n- /sys: `HOST_SYS`\n- /etc: `HOST_ETC`\n- /var: `HOST_VAR`\n- /run: `HOST_RUN`\n- /dev: `HOST_DEV`\n- /: `HOST_ROOT`\n- /proc/N/mountinfo: `HOST_PROC_MOUNTINFO`\n\n### Adding settings using `context` (from v3.23.6)\n\nAs of v3.23.6, it is now possible to pass a path location using `context`: import `\"github.com/shirou/gopsutil/v3/common\"` and pass a context with `common.EnvMap` set to `common.EnvKey`, and the location will be used within each function.\n\n```\n\tctx := context.WithValue(context.Background(), \n\t\tcommon.EnvKey, common.EnvMap{common.HostProcEnvKey: \"/myproc\"},\n\t)\n\tv, err := mem.VirtualMemoryWithContext(ctx)\n```\n\nFirst priority is given to the value set in `context`, then the value from the environment variable, and finally the default location.\n\n### Caching\n\nAs of v3.24.1, it is now possible to cached some values. These values default to false, not cached. \n\nBe very careful that enabling the cache may cause inconsistencies. For example, if you enable caching of boottime on Linux, be aware that unintended values may be returned if [the boottime is changed by NTP after booted](https://github.com/shirou/gopsutil/issues/1070#issuecomment-842512782).\n\n- `host`\n  - EnableBootTimeCache\n- `process`\n  - EnableBootTimeCache\n\n### `Ex` struct (from v4.24.5)\n\ngopsutil is designed to work across multiple platforms. However, there are differences in the information available on different platforms, such as memory information that exists on Linux but not on Windows.\n\nAs of v4.24.5, to access this platform-specific information, gopsutil provides functions named `Ex` within the package. Currently, these functions are available in the mem and sensor packages.\n\nThe Ex structs are specific to each platform. For example, on Linux, there is an `ExLinux` struct, which can be obtained using the `mem.NewExLinux()` function. On Windows, it's `mem.ExWindows()`. These Ex structs provide platform-specific information.\n\n```\nex := NewExWindows()\nv, err := ex.VirtualMemory()\nif err != nil {\n    panic(err)\n}\n\nfmt.Println(v.VirtualAvail)\nfmt.Println(v.VirtualTotal)\n\n// Output:\n// 140731958648832\n// 140737488224256\n```\n\ngopsutil aims to minimize platform differences by offering common functions. However, there are many requests to obtain unique information for each platform. The Ex structs are designed to meet those requests. Additional functionalities might be added in the future. The use of these structures makes it clear that the information they provide is specific to each platform, which is why they have been designed in this way.\n\n## Documentation\n\nSee https://pkg.go.dev/github.com/shirou/gopsutil/v4 or https://godocs.io/github.com/shirou/gopsutil/v4\n\n## Requirements\n\n- go1.18 or above is required.\n\n## More Info\n\nSeveral methods have been added which are not present in psutil, but\nwill provide useful information.\n\n- host/HostInfo() (linux)\n  - Hostname\n  - Uptime\n  - Procs\n  - OS (ex: \"linux\")\n  - Platform (ex: \"ubuntu\", \"arch\")\n  - PlatformFamily (ex: \"debian\")\n  - PlatformVersion (ex: \"Ubuntu 13.10\")\n  - VirtualizationSystem (ex: \"LXC\")\n  - VirtualizationRole (ex: \"guest\"/\"host\")\n- IOCounters\n  - Label (linux only) The registered [device mapper\n    name](https://www.kernel.org/doc/Documentation/ABI/testing/sysfs-block-dm)\n- cpu/CPUInfo() (linux, freebsd)\n  - CPU (ex: 0, 1, ...)\n  - VendorID (ex: \"GenuineIntel\")\n  - Family\n  - Model\n  - Stepping\n  - PhysicalID\n  - CoreID\n  - Cores (ex: 2)\n  - ModelName (ex: \"Intel(R) Core(TM) i7-2640M CPU @ 2.80GHz\")\n  - Mhz\n  - CacheSize\n  - Flags (ex: \"fpu vme de pse tsc msr pae mce cx8 ...\")\n  - Microcode\n- load/Avg() (linux, freebsd, solaris)\n  - Load1\n  - Load5\n  - Load15\n- docker/GetDockerIDList() (linux only)\n  - container id list ([]string)\n- docker/CgroupCPU() (linux only)\n  - user\n  - system\n- docker/CgroupMem() (linux only)\n  - various status\n- net_protocols (linux only)\n  - system wide stats on network protocols (i.e IP, TCP, UDP, etc.)\n  - sourced from /proc/net/snmp\n- iptables nf_conntrack (linux only)\n  - system wide stats on netfilter conntrack module\n  - sourced from /proc/sys/net/netfilter/nf_conntrack_count\n\nSome code is ported from Ohai. Many thanks.\n\n## Current Status\n\n- x: works\n- b: almost works, but something is broken\n\n|name                  |Linux  |FreeBSD  |OpenBSD  |macOS   |Windows  |Solaris  |Plan 9   |AIX      |\n|----------------------|-------|---------|---------|--------|---------|---------|---------|---------|\n|cpu\\_times            |x      |x        |x        |x       |x        |         |b        |x        |\n|cpu\\_count            |x      |x        |x        |x       |x        |         |x        |x        |\n|cpu\\_percent          |x      |x        |x        |x       |x        |         |         |x        |\n|cpu\\_times\\_percent   |x      |x        |x        |x       |x        |         |         |x        |\n|virtual\\_memory       |x      |x        |x        |x       |x        |b        |x        |x        |\n|swap\\_memory          |x      |x        |x        |x       |         |         |x        |X        |\n|disk\\_partitions      |x      |x        |x        |x       |x        |         |         |x        |\n|disk\\_io\\_counters    |x      |x        |x        |x       |x        |         |         |         |\n|disk\\_usage           |x      |x        |x        |x       |x        |         |         |x        |\n|net\\_io\\_counters     |x      |x        |x        |b       |x        |x        |         |         |\n|boot\\_time            |x      |x        |x        |x       |x        |         |         |X        |\n|users                 |x      |x        |x        |x       |x        |         |         |x        |\n|pids                  |x      |x        |x        |x       |x        |         |         |         |\n|pid\\_exists           |x      |x        |x        |x       |x        |         |         |         |\n|net\\_connections      |x      |x        |x        |x       |         |         |         |x        |\n|net\\_protocols        |x      |         |         |        |         |         |         |x        |\n|net\\_if\\_addrs        |       |         |         |        |         |         |         |x        |\n|net\\_if\\_stats        |       |         |         |        |         |         |         |x        |\n|netfilter\\_conntrack  |x      |         |         |        |         |         |         |         |\n|sensors_temperature   |x      |         |         |x       |x        |x        |         |         |\n\n\n### Process class\n\n|name                |Linux  |FreeBSD  |OpenBSD  |macOS  |Windows  |\n|--------------------|-------|---------|---------|-------|---------|\n|pid                 |x      |x        |x        |x      |x        |\n|ppid                |x      |x        |x        |x      |x        |\n|name                |x      |x        |x        |x      |x        |\n|cmdline             |x      |x        |x        |x      |x        |\n|create\\_time        |x      |         |         |x      |x        |\n|status              |x      |x        |x        |x      |         |\n|cwd                 |x      |x        |x        |x      |x        |\n|exe                 |x      |x        |x        |       |x        |\n|uids                |x      |x        |x        |x      |         |\n|gids                |x      |x        |x        |x      |         |\n|terminal            |x      |x        |x        |       |         |\n|io\\_counters        |x      |x        |x        |       |x        |\n|nice                |x      |x        |x        |x      |x        |\n|num\\_fds            |x      |         |         |       |x        |\n|num\\_ctx\\_switches  |x      |         |         |       |         |\n|num\\_threads        |x      |x        |x        |x      |x        |\n|cpu\\_times          |x      |         |         |       |x        |\n|memory\\_info        |x      |x        |x        |x      |x        |\n|memory\\_maps        |x      |         |         |       |         |\n|open\\_files         |x      |         |         |       |x        |\n|send\\_signal        |x      |x        |x        |x      |         |\n|suspend             |x      |x        |x        |x      |x        |\n|resume              |x      |x        |x        |x      |x        |\n|terminate           |x      |x        |x        |x      |x        |\n|kill                |x      |x        |x        |x      |         |\n|username            |x      |x        |x        |x      |x        |\n|ionice              |       |         |         |       |         |\n|rlimit              |x      |         |         |       |         |\n|num\\_handlers       |       |         |         |       |         |\n|threads             |x      |         |         |       |         |\n|cpu\\_percent        |x      |         |x        |x      |x        |\n|cpu\\_affinity       |       |         |         |       |         |\n|memory\\_percent     |x      |         |         |       |x        |\n|parent              |x      |         |x        |x      |x        |\n|children            |x      |x        |x        |x      |x        |\n|connections         |x      |         |x        |x      |         |\n|is\\_running         |       |         |         |       |         |\n|page\\_faults        |x      |         |         |       |         |\n\n### gopsutil Original Metrics\n\n|item                    |Linux  |FreeBSD  |OpenBSD  |macOS   |Windows |Solaris  |AIX      |\n|------------------------|-------|---------|---------|--------|--------|---------|---------|\n|**HostInfo**            |       |         |         |        |        |         |         |\n|hostname                |x      |x        |x        |x       |x       |x        |X        |\n|uptime                  |x      |x        |x        |x       |        |x        |x        |\n|process                 |x      |x        |x        |        |        |x        |         |\n|os                      |x      |x        |x        |x       |x       |x        |x        |\n|platform                |x      |x        |x        |x       |        |x        |x        |\n|platformfamily          |x      |x        |x        |x       |        |x        |x        |\n|virtualization          |x      |         |         |        |        |         |         |\n|**CPU**                 |       |         |         |        |        |         |         |\n|VendorID                |x      |x        |x        |x       |x       |x        |x        |\n|Family                  |x      |x        |x        |x       |x       |x        |x        |\n|Model                   |x      |x        |x        |x       |x       |x        |x        |\n|Stepping                |x      |x        |x        |x       |x       |x        |         |\n|PhysicalID              |x      |         |         |        |        |x        |         |\n|CoreID                  |x      |         |         |        |        |x        |         |\n|Cores                   |x      |         |         |x       |x       |x        |x        |\n|ModelName               |x      |x        |x        |x       |x       |x        |x        |\n|Microcode               |x      |         |         |        |        |x        |         |\n|**LoadAvg**             |       |         |         |        |        |         |         |\n|Load1                   |x      |x        |x        |x       |x       |x        |x        |\n|Load5                   |x      |x        |x        |x       |x       |x        |x        |\n|Load15                  |x      |x        |x        |x       |x       |x        |x        |\n|**Docker GetDockerID**  |       |         |         |        |        |         |         |\n|container id            |x      |no       |no       |no      |no      |no       |no       |\n|**Docker CgroupsCPU**   |       |         |         |        |        |         |         |\n|user                    |x      |no       |no       |no      |no      |no       |no       |\n|system                  |x      |no       |no       |no      |no      |no       |no       |\n|**Docker CgroupsMem**   |       |         |         |        |        |         |         |\n|various                 |x      |no       |no       |no      |no      |no       |no       |\n\n- future work\n  - process_iter\n  - wait_procs\n  - Process class\n    - as_dict\n    - wait\n  - AIX processes\n\n## License\n\nNew BSD License (same as psutil)\n\n## Related Works\n\nI have been influenced by the following great works:\n\n- psutil: https://github.com/giampaolo/psutil\n- dstat: https://github.com/dagwieers/dstat\n- gosigar: https://github.com/cloudfoundry/gosigar/\n- goprocinfo: https://github.com/c9s/goprocinfo\n- go-ps: https://github.com/mitchellh/go-ps\n- ohai: https://github.com/opscode/ohai/\n- bosun:\n  https://github.com/bosun-monitor/bosun/tree/master/cmd/scollector/collectors\n- mackerel:\n  https://github.com/mackerelio/mackerel-agent/tree/master/metrics\n\n## How to Contribute\n\n1.  Fork it\n2.  Create your feature branch (git checkout -b my-new-feature)\n3.  Commit your changes (git commit -am 'Add some feature')\n4.  Push to the branch (git push origin my-new-feature)\n5.  Create new Pull Request\n\nEnglish is not my native language, so PRs correcting grammar or spelling are welcome and appreciated.\n"
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "cpu",
          "type": "tree",
          "content": null
        },
        {
          "name": "disk",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc.go",
          "type": "blob",
          "size": 0.056640625,
          "content": "// SPDX-License-Identifier: BSD-3-Clause\npackage gopsutil\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.6259765625,
          "content": "module github.com/shirou/gopsutil/v4\n\ngo 1.18\n\nrequire (\n\tgithub.com/ebitengine/purego v0.8.1\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/lufia/plan9stats v0.0.0-20211012122336-39d0f177ccd0\n\tgithub.com/power-devops/perfstat v0.0.0-20210106213030-5aafc221ea8c\n\tgithub.com/stretchr/testify v1.10.0\n\tgithub.com/tklauser/go-sysconf v0.3.12\n\tgithub.com/yusufpapurcu/wmi v1.2.4\n\tgolang.org/x/sys v0.28.0\n)\n\nrequire (\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/go-ole/go-ole v1.2.6 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/tklauser/numcpus v0.6.1 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 3.0380859375,
          "content": "github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/ebitengine/purego v0.8.1 h1:sdRKd6plj7KYW33EH5As6YKfe8m9zbN9JMrOjNVF/BE=\ngithub.com/ebitengine/purego v0.8.1/go.mod h1:iIjxzd6CiRiOG0UyXP+V1+jWqUXVjPKLAI0mRfJZTmQ=\ngithub.com/go-ole/go-ole v1.2.6 h1:/Fpf6oFPoeFik9ty7siob0G6Ke8QvQEuVcuChpwXzpY=\ngithub.com/go-ole/go-ole v1.2.6/go.mod h1:pprOEPIfldk/42T2oK7lQ4v4JSDwmV0As9GaiUsvbm0=\ngithub.com/google/go-cmp v0.5.6/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/lufia/plan9stats v0.0.0-20211012122336-39d0f177ccd0 h1:6E+4a0GO5zZEnZ81pIr0yLvtUWk2if982qA3F3QD6H4=\ngithub.com/lufia/plan9stats v0.0.0-20211012122336-39d0f177ccd0/go.mod h1:zJYVVT2jmtg6P3p1VtQj7WsuWi/y4VnjVBn7F8KPB3I=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/power-devops/perfstat v0.0.0-20210106213030-5aafc221ea8c h1:ncq/mPwQF4JjgDlrVEn3C11VoGHZN7m8qihwgMEtzYw=\ngithub.com/power-devops/perfstat v0.0.0-20210106213030-5aafc221ea8c/go.mod h1:OmDBASR4679mdNQnz2pUhc2G8CO2JrUAVFDRBDP/hJE=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/tklauser/go-sysconf v0.3.12 h1:0QaGUFOdQaIVdPgfITYzaTegZvdCjmYO52cSFAEVmqU=\ngithub.com/tklauser/go-sysconf v0.3.12/go.mod h1:Ho14jnntGE1fpdOqQEEaiKRpvIavV0hSfmBq8nJbHYI=\ngithub.com/tklauser/numcpus v0.6.1 h1:ng9scYS7az0Bk4OZLvrNXNSAO2Pxr1XXRAPyjhIx+Fk=\ngithub.com/tklauser/numcpus v0.6.1/go.mod h1:1XfjsgE2zo8GVw7POkMbHENHzVg3GzmoZ9fESEdAacY=\ngithub.com/yusufpapurcu/wmi v1.2.4 h1:zFUKzehAFReQwLys1b/iSMl+JQGSCSjtVqQn9bBrPo0=\ngithub.com/yusufpapurcu/wmi v1.2.4/go.mod h1:SBZ9tNy3G9/m5Oi98Zks0QjeHVDvuK0qfxQmPyzfmi0=\ngolang.org/x/sys v0.0.0-20190916202348-b4ddaad3f8a3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201204225414-ed752295db88/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.11.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405 h1:yhCVgyC4o1eVCa2tZl7eS0r+SDo693bJlVdllGtEeKM=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "host",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "load",
          "type": "tree",
          "content": null
        },
        {
          "name": "mem",
          "type": "tree",
          "content": null
        },
        {
          "name": "mktypes.sh",
          "type": "blob",
          "size": 0.3935546875,
          "content": "#!/bin/sh\n\nPKGS=\"cpu disk docker host load mem net process sensors winservices\"\n\nGOOS=$(go env GOOS)\nGOARCH=$(go env GOARCH)\n\nfor PKG in $PKGS\ndo\n        if [ -e \"${PKG}/types_${GOOS}.go\" ]; then\n                (echo \"// +build $GOOS\"\n                echo \"// +build $GOARCH\"\n                go tool cgo -godefs \"${PKG}/types_${GOOS}.go\") | gofmt > \"${PKG}/${PKG}_${GOOS}_${GOARCH}.go\"\n        fi\ndone\n"
        },
        {
          "name": "net",
          "type": "tree",
          "content": null
        },
        {
          "name": "process",
          "type": "tree",
          "content": null
        },
        {
          "name": "sensors",
          "type": "tree",
          "content": null
        },
        {
          "name": "windows_memo.rst",
          "type": "blob",
          "size": 0.630859375,
          "content": "Windows memo\n=====================\n\nSize\n----------\n\nDWORD\n  32-bit unsigned integer\nDWORDLONG\n  64-bit unsigned integer\nDWORD_PTR\n  unsigned long type for pointer precision\nDWORD32\n  32-bit unsigned integer\nDWORD64\n  64-bit unsigned integer\nHALF_PTR\n  _WIN64 = int, else short\nINT\n  32-bit signed integer\nINT_PTR\n  _WIN64 = __int64 else int\nLONG\n  32-bit signed integer\nLONGLONG\n  64-bit signed integer\nLONG_PTR\n  _WIN64 = __int64 else long\nSHORT\n  16-bit integer\nSIZE_T\n  maximum number of bytes to which a pointer can point. typedef ULONG_PTR SIZE_T;\nSSIZE_T\n  signed version of SIZE_T. typedef LONG_PTR SSIZE_T;\nWORD\n  16-bit unsigned integer"
        },
        {
          "name": "winservices",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}