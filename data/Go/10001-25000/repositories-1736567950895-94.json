{
  "metadata": {
    "timestamp": 1736567950895,
    "page": 94,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "golang-migrate/migrate",
      "stars": 15863,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1201171875,
          "content": "# Project\nFAQ.md\nREADME.md\nLICENSE\n.gitignore\n.travis.yml\nCONTRIBUTING.md\nMIGRATIONS.md\ndocker-deploy.sh\n\n# Golang\ntesting\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.087890625,
          "content": ".DS_Store\ncli/build\ncli/cli\ncli/migrate\n.coverage\n.godoc.pid\nvendor/\n.vscode/\n.idea\ndist/\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 0.431640625,
          "content": "run:\n  # timeout for analysis, e.g. 30s, 5m, default is 1m\n  timeout: 5m\nlinters:\n  enable:\n    #- golint\n    #- interfacer\n    - unconvert\n    #- dupl\n    - goconst\n    - gofmt\n    - misspell\n    - unparam\n    - nakedret\n    - prealloc\n    #- gosec\nlinters-settings:\n  misspell:\n    locale: US\nissues:\n  max-same-issues: 0\n  max-issues-per-linter: 0\n  exclude-use-default: false\n  exclude:\n    # gosec: Duplicated errcheck checks\n    - G104\n"
        },
        {
          "name": ".goreleaser.yml",
          "type": "blob",
          "size": 2.7509765625,
          "content": "project_name: migrate\nbefore:\n  hooks:\n    - go mod tidy\nbuilds:\n  - env:\n      - CGO_ENABLED=0\n    goos:\n      - linux\n      - windows\n      - darwin\n    goarch:\n      - amd64\n      - arm\n      - arm64\n      - 386\n    goarm:\n      - 7\n    main: ./cmd/migrate\n    ldflags:\n      - '-w -s -X main.Version={{ .Version }} -extldflags \"static\"'\n    flags:\n      - \"-tags={{ .Env.DATABASE }} {{ .Env.SOURCE }}\"\n      - \"-trimpath\"\nnfpms:\n  - homepage: \"https://github.com/golang-migrate/migrate\"\n    maintainer: \"dhui@users.noreply.github.com\"\n    license: MIT\n    description: \"Database migrations\"\n    formats:\n      - deb\n    file_name_template: \"{{ .ProjectName }}.{{ .Os }}-{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\"\ndockers:\n  - goos: linux\n    goarch: amd64\n    dockerfile: Dockerfile.github-actions\n    use: buildx\n    ids:\n      - migrate\n    image_templates:\n      - 'migrate/migrate:{{ .Tag }}-amd64'\n    build_flag_templates:\n      - '--label=org.opencontainers.image.created={{ .Date }}'\n      - '--label=org.opencontainers.image.title={{ .ProjectName }}'\n      - '--label=org.opencontainers.image.revision={{ .FullCommit }}'\n      - '--label=org.opencontainers.image.version={{ .Version }}'\n      - \"--label=org.opencontainers.image.source={{ .GitURL }}\"\n      - \"--platform=linux/amd64\"\n  - goos: linux\n    goarch: arm64\n    dockerfile: Dockerfile.github-actions\n    use: buildx\n    ids:\n      - migrate\n    image_templates:\n      - 'migrate/migrate:{{ .Tag }}-arm64'\n    build_flag_templates:\n      - '--label=org.opencontainers.image.created={{ .Date }}'\n      - '--label=org.opencontainers.image.title={{ .ProjectName }}'\n      - '--label=org.opencontainers.image.revision={{ .FullCommit }}'\n      - '--label=org.opencontainers.image.version={{ .Version }}'\n      - \"--label=org.opencontainers.image.source={{ .GitURL }}\"\n      - \"--platform=linux/arm64\"\n\ndocker_manifests:\n- name_template: 'migrate/migrate:{{ .Tag }}'\n  image_templates:\n  - 'migrate/migrate:{{ .Tag }}-amd64'\n  - 'migrate/migrate:{{ .Tag }}-arm64'\n- name_template: 'migrate/migrate:{{ .Major }}'\n  image_templates:\n  - 'migrate/migrate:{{ .Tag }}-amd64'\n  - 'migrate/migrate:{{ .Tag }}-arm64'\n- name_template: 'migrate/migrate:latest'\n  image_templates:\n  - 'migrate/migrate:{{ .Tag }}-amd64'\n  - 'migrate/migrate:{{ .Tag }}-arm64'\narchives:\n  - name_template: \"{{ .ProjectName }}.{{ .Os }}-{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\"\n    format_overrides:\n      - goos: windows\n        format: zip\nchecksum:\n  name_template: 'sha256sum.txt'\nrelease:\n  draft: true\n  prerelease: auto\nsource:\n  enabled: true\n  format: zip\nchangelog:\n  skip: false\n  sort: asc\n  filters:\n    exclude:\n      - '^docs:'\n      - '^test:'\n      - Merge pull request\n      - Merge branch\n      - go mod tidy\nsnapshot:\n  name_template: \"{{ .Tag }}-next\"\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 8.3291015625,
          "content": "language: go\nsudo: required\n\nmatrix:\n  allow_failures:\n    - go: master\n  include:\n    # Supported versions of Go: https://golang.org/dl/\n    - go: \"1.14.x\"\n    - go: \"1.15.x\"\n    - go: master\n\ngo_import_path: github.com/golang-migrate/migrate\n\nenv:\n  global:\n    - GO111MODULE=on\n    - MIGRATE_TEST_CONTAINER_BOOT_TIMEOUT=60\n    - DOCKER_USERNAME=golangmigrate\n    -   secure: \"oSOznzUrgr5h45qW4PONkREpisPAt40tnM+KFWtS/Ggu5UI2Ie0CmyYXWuBjbt7B97a4yN9Qzmn8FxJHJ7kk+ABOi3muhkxeIhr6esXbzHhX/Jhv0mj1xkzX7KoVN9oHBz3cOI/QeRyEAO68xjDHNE2kby4RTT9VBt6TQUakKVkqI5qkqLBTADepCjVC+9XhxVxUNyeWKU8ormaUfJBjoNVoDlwXekUPnJenfmfZqXxUInvBCfUyp7Pq+kurBORmg4yc6qOlRYuK67Xw+i5xpjbZouNlXPk0rq7pPy5zjhmZQ3kImoFPvNMeKViDcI6kSIJKtjdhms9/g/6MgXS9HlL5kFy8tYKbsyiHnHB1BsvaLAKXctbUZFDPstgMPADfnad2kZXPrNqIhfWKZrGRWidawCYJ1sKKwYxLMKrtA0umqgMoL90MmBOELhuGmvMV0cFJB+zo+K2YWjEiMGd8xRb5mC5aAy0ZcCehO46jGtpr217EJmMF8Ywr7cFqM2Shg5U2jev9qUpYiXwmPnJKDuoT2ZHuHmPgFIkYiWC5yeJnnmG5bed1sKBp93AFrJX+1Rx5oC4BpNegewmBZKpOSwls/D1uMAeQK3dPmQHLsT6o2VBLfeDGr+zY0R85ywwPZCv00vGol02zYoTqN7eFqr6Qhjr/qx5K1nnxJdFK3Ts=\"\n\nservices:\n  - docker\n\ncache:\n  directories:\n    - $GOPATH/pkg\n\n\nbefore_install:\n  # Update docker to latest version: https://docs.travis-ci.com/user/docker/#installing-a-newer-docker-version\n  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n  - sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n  - sudo apt-get update\n  - sudo apt-get -y -o Dpkg::Options::=\"--force-confnew\" install docker-ce\n  # Install golangci-lint\n  - curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.30.0\n  - echo \"TRAVIS_GO_VERSION=${TRAVIS_GO_VERSION}\"\n\ninstall:\n  - go get github.com/mattn/goveralls\n\nscript:\n  - golangci-lint run\n  - make test COVERAGE_DIR=/tmp/coverage\n\nafter_success:\n  - goveralls -service=travis-ci -coverprofile /tmp/coverage/combined.txt\n  - make list-external-deps > dependency_tree.txt && cat dependency_tree.txt\n  - make build-cli\n  - gem install --no-document fpm\n  - fpm -s dir -t deb -n migrate -v \"$(git describe --tags 2>/dev/null | cut -c 2-)\" --license MIT -m dhui@users.noreply.github.com --url https://github.com/golang-migrate/migrate --description='Database migrations' -a amd64 -p migrate.$(git describe --tags 2>/dev/null | cut -c 2-).deb --deb-no-default-config-files -f -C cli/build migrate.linux-amd64=/usr/local/bin/migrate\n\ndeploy:\n  - provider: releases\n    api_key:\n      secure: hWH1HLPpzpfA8pXQ93T1qKQVFSpQp0as/JLQ7D91jHuJ8p+RxVeqblDrR6HQY/95R/nyiE9GJmvUolSuw5h449LSrGxPtVWhdh6EnkxlQHlen5XeMhVjRjFV0sE9qGe8v7uAkiTfRO61ktTWHrEAvw5qpyqnNISodmZS78XIasPODQbNlzwINhWhDTHIjXGb4FpizYaL3OGCanrxfR9fQyCaqKGGBjRq3Mfq8U6Yd4mApmsE+uJxgaZV8K5zBqpkSzQRWhcVGNL5DuLsU3gfSJOo7kZeA2G71SHffH577dBoqtCZ4VFv169CoUZehLWCb+7XKJZmHXVujCURATSySLGUOPc6EoLFAn3YtsCA04mS4bZVo5FZPWVwfhjmkhtDR4f6wscKp7r1HsFHSOgm59QfETQdrn4MnZ44H2Jd39axqndn5DvK9EcZVjPHynOPnueXP2u6mTuUgh2VyyWBCDO3CNo0fGlo7VJI69IkIWNSD87K9cHZWYMClyKZkUzS+PmRAhHRYbVd+9ZjKOmnU36kUHNDG/ft1D4ogsY+rhVtXB4lgWDM5adri+EIScYdYnB1/pQexLBigcJY9uE7nQTR0U6QgVNYvun7uRNs40E0c4voSfmPdFO0FlOD2y1oQhnaXfWLbu9nMcTcs4RFGrcC7NzkUN4/WjG8s285V6w=\n    skip_cleanup: true\n    on:\n      go: \"1.15.x\"\n      repo: golang-migrate/migrate\n      tags: true\n    file:\n      - cli/build/migrate.linux-amd64.tar.gz\n      - cli/build/migrate.linux-armv7.tar.gz\n      - cli/build/migrate.linux-arm64.tar.gz\n      - cli/build/migrate.darwin-amd64.tar.gz\n      - cli/build/migrate.windows-amd64.exe.tar.gz\n      - cli/build/migrate.windows-386.exe.tar.gz\n      - cli/build/sha256sum.txt\n      - dependency_tree.txt\n  - provider: packagecloud\n    repository: migrate\n    username: golang-migrate\n    token:\n      secure: aICwu3gJ1sJ1QVCD3elpg+Jxzt4P+Zj1uoh5f0sOwnjDNIZ4FwUT1cMrWloP8P2KD0iyCOawuZER27o/kQ21oX2OxHvQbYPReA2znLm7lHzCmypAAOHPxpgnQ4rMGHHJXd+OsxtdclGs67c+EbdBfoRRbK400Qz/vjPJEDeH4mh02ZHC2nw4Nk/wV4jjBIkIt9dGEx6NgOA17FCMa3MaPHlHeFIzU7IfTlDHbS0mCCYbg/wafWBWcbGqtZLWAYtJDmfjrAStmDLdAX5J5PsB7taGSGPZHmPmpGoVgrKt/tb9Xz1rFBGslTpGROOiO4CiMAvkEKFn8mxrBGjfSBqp7Dp3eeSalKXB1DJAbEXx2sEbMcvmnoR9o43meaAn+ZRts8lRL8S/skBloe6Nk8bx3NlJCGB9WPK1G56b7c/fZnJxQbrCw6hxDfbZwm8S2YPviFTo/z1BfZDhRsL74reKsN2kgnGo2W/k38vvzIpsssQ9DHN1b0TLCxolCNPtQ7oHcQ1ohcjP2UgYXk0FhqDoL+9LQva/DU4N9sKH0UbAaqsMVSErLeG8A4aauuFcVrWRBaDYyTag4dQqzTulEy7iru2kDDIBgSQ1gMW/yoBOIPK4oi6MtbTf1X39fzXFLS1cDd3LW61yAu3YrbjAetpfx2frIvrRAiL9TxWA1gnrs5o=\n    dist: ubuntu/xenial\n    package_glob: '*.deb'\n    skip_cleanup: true\n    on:\n      go: \"1.15.x\"\n      repo: golang-migrate/migrate\n      tags: true\n  - provider: packagecloud\n    repository: migrate\n    username: golang-migrate\n    token:\n      secure: aICwu3gJ1sJ1QVCD3elpg+Jxzt4P+Zj1uoh5f0sOwnjDNIZ4FwUT1cMrWloP8P2KD0iyCOawuZER27o/kQ21oX2OxHvQbYPReA2znLm7lHzCmypAAOHPxpgnQ4rMGHHJXd+OsxtdclGs67c+EbdBfoRRbK400Qz/vjPJEDeH4mh02ZHC2nw4Nk/wV4jjBIkIt9dGEx6NgOA17FCMa3MaPHlHeFIzU7IfTlDHbS0mCCYbg/wafWBWcbGqtZLWAYtJDmfjrAStmDLdAX5J5PsB7taGSGPZHmPmpGoVgrKt/tb9Xz1rFBGslTpGROOiO4CiMAvkEKFn8mxrBGjfSBqp7Dp3eeSalKXB1DJAbEXx2sEbMcvmnoR9o43meaAn+ZRts8lRL8S/skBloe6Nk8bx3NlJCGB9WPK1G56b7c/fZnJxQbrCw6hxDfbZwm8S2YPviFTo/z1BfZDhRsL74reKsN2kgnGo2W/k38vvzIpsssQ9DHN1b0TLCxolCNPtQ7oHcQ1ohcjP2UgYXk0FhqDoL+9LQva/DU4N9sKH0UbAaqsMVSErLeG8A4aauuFcVrWRBaDYyTag4dQqzTulEy7iru2kDDIBgSQ1gMW/yoBOIPK4oi6MtbTf1X39fzXFLS1cDd3LW61yAu3YrbjAetpfx2frIvrRAiL9TxWA1gnrs5o=\n    dist: ubuntu/bionic\n    package_glob: '*.deb'\n    skip_cleanup: true\n    on:\n      go: \"1.15.x\"\n      repo: golang-migrate/migrate\n      tags: true\n  - provider: packagecloud\n    repository: migrate\n    username: golang-migrate\n    token:\n      secure: aICwu3gJ1sJ1QVCD3elpg+Jxzt4P+Zj1uoh5f0sOwnjDNIZ4FwUT1cMrWloP8P2KD0iyCOawuZER27o/kQ21oX2OxHvQbYPReA2znLm7lHzCmypAAOHPxpgnQ4rMGHHJXd+OsxtdclGs67c+EbdBfoRRbK400Qz/vjPJEDeH4mh02ZHC2nw4Nk/wV4jjBIkIt9dGEx6NgOA17FCMa3MaPHlHeFIzU7IfTlDHbS0mCCYbg/wafWBWcbGqtZLWAYtJDmfjrAStmDLdAX5J5PsB7taGSGPZHmPmpGoVgrKt/tb9Xz1rFBGslTpGROOiO4CiMAvkEKFn8mxrBGjfSBqp7Dp3eeSalKXB1DJAbEXx2sEbMcvmnoR9o43meaAn+ZRts8lRL8S/skBloe6Nk8bx3NlJCGB9WPK1G56b7c/fZnJxQbrCw6hxDfbZwm8S2YPviFTo/z1BfZDhRsL74reKsN2kgnGo2W/k38vvzIpsssQ9DHN1b0TLCxolCNPtQ7oHcQ1ohcjP2UgYXk0FhqDoL+9LQva/DU4N9sKH0UbAaqsMVSErLeG8A4aauuFcVrWRBaDYyTag4dQqzTulEy7iru2kDDIBgSQ1gMW/yoBOIPK4oi6MtbTf1X39fzXFLS1cDd3LW61yAu3YrbjAetpfx2frIvrRAiL9TxWA1gnrs5o=\n    dist: ubuntu/focal\n    package_glob: '*.deb'\n    skip_cleanup: true\n    on:\n      go: \"1.15.x\"\n      repo: golang-migrate/migrate\n      tags: true\n  - provider: packagecloud\n    repository: migrate\n    username: golang-migrate\n    token:\n      secure: aICwu3gJ1sJ1QVCD3elpg+Jxzt4P+Zj1uoh5f0sOwnjDNIZ4FwUT1cMrWloP8P2KD0iyCOawuZER27o/kQ21oX2OxHvQbYPReA2znLm7lHzCmypAAOHPxpgnQ4rMGHHJXd+OsxtdclGs67c+EbdBfoRRbK400Qz/vjPJEDeH4mh02ZHC2nw4Nk/wV4jjBIkIt9dGEx6NgOA17FCMa3MaPHlHeFIzU7IfTlDHbS0mCCYbg/wafWBWcbGqtZLWAYtJDmfjrAStmDLdAX5J5PsB7taGSGPZHmPmpGoVgrKt/tb9Xz1rFBGslTpGROOiO4CiMAvkEKFn8mxrBGjfSBqp7Dp3eeSalKXB1DJAbEXx2sEbMcvmnoR9o43meaAn+ZRts8lRL8S/skBloe6Nk8bx3NlJCGB9WPK1G56b7c/fZnJxQbrCw6hxDfbZwm8S2YPviFTo/z1BfZDhRsL74reKsN2kgnGo2W/k38vvzIpsssQ9DHN1b0TLCxolCNPtQ7oHcQ1ohcjP2UgYXk0FhqDoL+9LQva/DU4N9sKH0UbAaqsMVSErLeG8A4aauuFcVrWRBaDYyTag4dQqzTulEy7iru2kDDIBgSQ1gMW/yoBOIPK4oi6MtbTf1X39fzXFLS1cDd3LW61yAu3YrbjAetpfx2frIvrRAiL9TxWA1gnrs5o=\n    dist: debian/stretch\n    package_glob: '*.deb'\n    skip_cleanup: true\n    on:\n      go: \"1.15.x\"\n      repo: golang-migrate/migrate\n      tags: true\n  - provider: packagecloud\n    repository: migrate\n    username: golang-migrate\n    token:\n      secure: aICwu3gJ1sJ1QVCD3elpg+Jxzt4P+Zj1uoh5f0sOwnjDNIZ4FwUT1cMrWloP8P2KD0iyCOawuZER27o/kQ21oX2OxHvQbYPReA2znLm7lHzCmypAAOHPxpgnQ4rMGHHJXd+OsxtdclGs67c+EbdBfoRRbK400Qz/vjPJEDeH4mh02ZHC2nw4Nk/wV4jjBIkIt9dGEx6NgOA17FCMa3MaPHlHeFIzU7IfTlDHbS0mCCYbg/wafWBWcbGqtZLWAYtJDmfjrAStmDLdAX5J5PsB7taGSGPZHmPmpGoVgrKt/tb9Xz1rFBGslTpGROOiO4CiMAvkEKFn8mxrBGjfSBqp7Dp3eeSalKXB1DJAbEXx2sEbMcvmnoR9o43meaAn+ZRts8lRL8S/skBloe6Nk8bx3NlJCGB9WPK1G56b7c/fZnJxQbrCw6hxDfbZwm8S2YPviFTo/z1BfZDhRsL74reKsN2kgnGo2W/k38vvzIpsssQ9DHN1b0TLCxolCNPtQ7oHcQ1ohcjP2UgYXk0FhqDoL+9LQva/DU4N9sKH0UbAaqsMVSErLeG8A4aauuFcVrWRBaDYyTag4dQqzTulEy7iru2kDDIBgSQ1gMW/yoBOIPK4oi6MtbTf1X39fzXFLS1cDd3LW61yAu3YrbjAetpfx2frIvrRAiL9TxWA1gnrs5o=\n    dist: debian/buster\n    package_glob: '*.deb'\n    skip_cleanup: true\n    on:\n      go: \"1.15.x\"\n      repo: golang-migrate/migrate\n      tags: true\n  - provider: script\n    script: ./docker-deploy.sh\n    skip_cleanup: true\n    on:\n      go: \"1.15.x\"\n      repo: golang-migrate/migrate\n      tags: true\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.5517578125,
          "content": "# Development, Testing and Contributing\n\n  1. Make sure you have a running Docker daemon\n     (Install for [MacOS](https://docs.docker.com/docker-for-mac/))\n  1. Use a version of Go that supports [modules](https://golang.org/cmd/go/#hdr-Modules__module_versions__and_more) (e.g. Go 1.11+)\n  1. Fork this repo and `git clone` somewhere to `$GOPATH/src/github.com/golang-migrate/migrate`\n      * Ensure that [Go modules are enabled](https://golang.org/cmd/go/#hdr-Preliminary_module_support) (e.g. your repo path or the `GO111MODULE` environment variable are set correctly)\n  1. Install [golangci-lint](https://github.com/golangci/golangci-lint#install)\n  1. Run the linter: `golangci-lint run`\n  1. Confirm tests are working: `make test-short`\n  1. Write awesome code ...\n  1. `make test` to run all tests against all database versions\n  1. Push code and open Pull Request\n \nSome more helpful commands:\n\n  * You can specify which database/ source tests to run:\n    `make test-short SOURCE='file go_bindata' DATABASE='postgres cassandra'`\n  * After `make test`, run `make html-coverage` which opens a shiny test coverage overview.\n  * `make build-cli` builds the CLI in directory `cli/build/`.\n  * `make list-external-deps` lists all external dependencies for each package\n  * `make docs && make open-docs` opens godoc in your browser, `make kill-docs` kills the godoc server.\n    Repeatedly call `make docs` to refresh the server.\n  * Set the `DOCKER_API_VERSION` environment variable to the latest supported version if you get errors regarding the docker client API version being too new.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.4833984375,
          "content": "FROM golang:1.23-alpine3.20 AS builder\nARG VERSION\n\nRUN apk add --no-cache git gcc musl-dev make\n\nWORKDIR /go/src/github.com/golang-migrate/migrate\n\nENV GO111MODULE=on\n\nCOPY go.mod go.sum ./\n\nRUN go mod download\n\nCOPY . ./\n\nRUN make build-docker\n\nFROM alpine:3.20\n\nRUN apk add --no-cache ca-certificates\n\nCOPY --from=builder /go/src/github.com/golang-migrate/migrate/build/migrate.linux-386 /usr/local/bin/migrate\nRUN ln -s /usr/local/bin/migrate /migrate\n\nENTRYPOINT [\"migrate\"]\nCMD [\"--help\"]\n"
        },
        {
          "name": "Dockerfile.circleci",
          "type": "blob",
          "size": 0.2548828125,
          "content": "ARG DOCKER_IMAGE\nFROM $DOCKER_IMAGE\n\nRUN apk add --no-cache git gcc musl-dev make\n\nWORKDIR /go/src/github.com/golang-migrate/migrate\n\nENV GO111MODULE=on\nENV COVERAGE_DIR=/tmp/coverage\n\nCOPY go.mod go.sum ./\n\nRUN go mod download\n\nCOPY . ./\n\nCMD [\"make\", \"test\"]\n"
        },
        {
          "name": "Dockerfile.github-actions",
          "type": "blob",
          "size": 0.220703125,
          "content": "FROM alpine:3.19\n\nRUN apk add --no-cache ca-certificates\n\nCOPY migrate /usr/local/bin/migrate\n\nRUN ln -s /usr/local/bin/migrate /usr/bin/migrate\nRUN ln -s /usr/local/bin/migrate /migrate\n\nENTRYPOINT [\"migrate\"]\nCMD [\"--help\"]\n"
        },
        {
          "name": "FAQ.md",
          "type": "blob",
          "size": 4.337890625,
          "content": "# FAQ\n\n#### How is the code base structured?\n  ```\n  /          package migrate (the heart of everything)\n  /cli       the CLI wrapper\n  /database  database driver and sub directories have the actual driver implementations\n  /source    source driver and sub directories have the actual driver implementations\n  ```\n\n#### Why is there no `source/driver.go:Last()`?\n  It's not needed. And unless the source has a \"native\" way to read a directory in reversed order,\n  it might be expensive to do a full directory scan in order to get the last element.\n\n#### What is a NilMigration? NilVersion?\n  NilMigration defines a migration without a body. NilVersion is defined as const -1.\n\n#### What is the difference between uint(version) and int(targetVersion)?\n  version refers to an existing migration version coming from a source and therefore can never be negative.\n  targetVersion can either be a version OR represent a NilVersion, which equals -1.\n\n#### What's the difference between Next/Previous and Up/Down?\n  ```\n  1_first_migration.up.extension           next ->  2_second_migration.up.extension      ...\n  1_first_migration.down.extension  <- previous     2_second_migration.down.extension    ...\n  ```\n\n#### Why two separate files (up and down) for a migration?\n  It makes all of our lives easier. No new markup/syntax to learn for users\n  and existing database utility tools continue to work as expected.\n\n#### How many migrations can migrate handle?\n  Whatever the maximum positive signed integer value is for your platform.\n  For 32bit it would be 2,147,483,647 migrations. Migrate only keeps references to\n  the currently run and pre-fetched migrations in memory. Please note that some\n  source drivers need to do build a full \"directory\" tree first, which puts some\n  heat on the memory consumption.\n\n#### Are the table tests in migrate_test.go bloated?\n  Yes and no. There are duplicate test cases for sure but they don't hurt here. In fact\n  the tests are very visual now and might help new users understand expected behaviors quickly.\n  Migrate from version x to y and y is the last migration? Just check out the test for\n  that particular case and know what's going on instantly.\n\n#### What is Docker being used for?\n  Only for testing. See [testing/docker.go](testing/docker.go)\n\n#### Why not just use docker-compose?\n  It doesn't give us enough runtime control for testing. We want to be able to bring up containers fast\n  and whenever we want, not just once at the beginning of all tests.\n\n#### Can I maintain my driver in my own repository?\n  Yes, technically thats possible. We want to encourage you to contribute your driver to this repository though.\n  The driver's functionality is dictated by migrate's interfaces. That means there should really\n  just be one driver for a database/ source. We want to prevent a future where several drivers doing the exact same thing,\n  just implemented a bit differently, co-exist somewhere on GitHub. If users have to do research first to find the\n  \"best\" available driver for a database in order to get started, we would have failed as an open source community.\n\n#### Can I mix multiple sources during a batch of migrations?\n  No.\n\n#### What does \"dirty\" database mean?\n  Before a migration runs, each database sets a dirty flag. Execution stops if a migration fails and the dirty state persists,\n  which prevents attempts to run more migrations on top of a failed migration. You need to manually fix the error\n  and then \"force\" the expected version.\n\n#### What happens if two programs try and update the database at the same time?\nDatabase-specific locking features are used by *some* database drivers to prevent multiple instances of migrate from running migrations at the same time\n  the same database at the same time. For example, the MySQL driver uses the `GET_LOCK` function, while the Postgres driver uses\n  the `pg_advisory_lock` function.\n\n#### Do I need to create a table for tracking migration version used?\nNo, it is done automatically.\n\n#### Can I use migrate with a non-Go project?\nYes, you can use the migrate CLI in a non-Go project, but there are probably other libraries/frameworks available that offer better test and deploy integrations in that language/framework.\n\n#### I have got an error `Dirty database version 1. Fix and force version`. What should I do?\nKeep calm and refer to [the getting started docs](GETTING_STARTED.md#forcing-your-database-version).\n"
        },
        {
          "name": "GETTING_STARTED.md",
          "type": "blob",
          "size": 3.6787109375,
          "content": "# Getting started\nBefore you start, you should understand the concept of forward/up and reverse/down database migrations.\n\nConfigure a database for your application. Make sure that your database driver is supported [here](README.md#databases).\n\n## Create migrations\nCreate some migrations using migrate CLI. Here is an example:\n```\nmigrate create -ext sql -dir db/migrations -seq create_users_table\n```\nOnce you create your files, you should fill them.\n\n**IMPORTANT:** In a project developed by more than one person there is a chance of migrations inconsistency - e.g. two developers can create conflicting migrations, and the developer that created their migration later gets it merged to the repository first.\nDevelopers and Teams should keep an eye on such cases (especially during code review).\n[Here](https://github.com/golang-migrate/migrate/issues/179#issuecomment-475821264) is the issue summary if you would like to read more.\n\nConsider making your migrations idempotent - we can run the same sql code twice in a row with the same result. This makes our migrations more robust. On the other hand, it causes slightly less control over database schema - e.g. let's say you forgot to drop the table in down migration. You run down migration - the table is still there. When you run up migration again - `CREATE TABLE` would return an error, helping you find an issue in down migration, while `CREATE TABLE IF NOT EXISTS` would not. Use those conditions wisely.\n\nIn case you would like to run several commands/queries in one migration, you should wrap them in a transaction (if your database supports it).\nThis way if one of commands fails, our database will remain unchanged.\n\n## Run migrations\nRun your migrations through the CLI or your app and check if they applied expected changes.\nJust to give you an idea:\n```\nmigrate -database YOUR_DATABASE_URL -path PATH_TO_YOUR_MIGRATIONS up\n```\n\nJust add the code to your app and you're ready to go!\n\nBefore committing your migrations you should run your migrations up, down, and then up again to see if migrations are working properly both ways.\n(e.g. if you created a table in a migration but reverse migration did not delete it, you will encounter an error when running the forward migration again)\nIt's also worth checking your migrations in a separate, containerized environment. You can find some tools at the [end of this document](#further-reading).\n\n**IMPORTANT:** If you would like to run multiple instances of your app on different machines be sure to use a database that supports locking when running migrations. Otherwise you may encounter issues.\n\n## Forcing your database version\nIn case you run a migration that contained an error, migrate will not let you run other migrations on the same database. You will see an error like `Dirty database version 1. Fix and force version`, even when you fix the erred migration. This means your database was marked as 'dirty'.\nYou need to investigate the migration error - was your migration applied partially, or was it not applied at all? Once you know, you should force your database to a version reflecting it's real state. You can do so with `force` command:\n```\nmigrate -path PATH_TO_YOUR_MIGRATIONS -database YOUR_DATABASE_URL force VERSION\n```\nOnce you force the version and your migration was fixed, your database is 'clean' again and you can proceed with your migrations.\n\nFor details and example of usage see [this comment](https://github.com/golang-migrate/migrate/issues/282#issuecomment-530743258).\n\n## Further reading:\n- [PostgreSQL tutorial](database/postgres/TUTORIAL.md)\n- [Best practices](MIGRATIONS.md)\n- [FAQ](FAQ.md)\n- Tools for testing your migrations in a container:\n\t- https://github.com/dhui/dktest\n\t- https://github.com/ory/dockertest\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.1904296875,
          "content": "The MIT License (MIT)\n\nOriginal Work\nCopyright (c) 2016 Matthias Kadenbach\nhttps://github.com/mattes/migrate\n\nModified Work\nCopyright (c) 2018 Dale Hui\nhttps://github.com/golang-migrate/migrate\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "MIGRATIONS.md",
          "type": "blob",
          "size": 3.8818359375,
          "content": "# Migrations\n\n## Migration Filename Format\n\nA single logical migration is represented as two separate migration files, one\nto migrate \"up\" to the specified version from the previous version, and a second\nto migrate back \"down\" to the previous version.  These migrations can be provided\nby any one of the supported [migration sources](./README.md#migration-sources).\n\nThe ordering and direction of the migration files is determined by the filenames\nused for them.  `migrate` expects the filenames of migrations to have the format:\n\n    {version}_{title}.up.{extension}\n    {version}_{title}.down.{extension}\n\nThe `title` of each migration is unused, and is only for readability.  Similarly,\nthe `extension` of the migration files is not checked by the library, and should\nbe an appropriate format for the database in use (`.sql` for SQL variants, for\ninstance).\n\nVersions of migrations may be represented as any 64 bit unsigned integer.\nAll migrations are applied upward in order of increasing version number, and\ndownward by decreasing version number.\n\nCommon versioning schemes include incrementing integers:\n\n    1_initialize_schema.down.sql\n    1_initialize_schema.up.sql\n    2_add_table.down.sql\n    2_add_table.up.sql\n    ...\n\nOr timestamps at an appropriate resolution:\n\n    1500360784_initialize_schema.down.sql\n    1500360784_initialize_schema.up.sql\n    1500445949_add_table.down.sql\n    1500445949_add_table.up.sql\n    ...\n\nBut any scheme resulting in distinct, incrementing integers as versions is valid.\n\nIt is suggested that the version number of corresponding `up` and `down` migration\nfiles be equivalent for clarity, but they are allowed to differ so long as the\nrelative ordering of the migrations is preserved.\n\nThe migration files are permitted to be \"empty\", in the event that a migration\nis a no-op or is irreversible. It is recommended to still include both migration\nfiles by making the whole migration file consist of a comment.\nIf your database does not support comments, then deleting the migration file will also work.\nNote, an actual empty file (e.g. a 0 byte file) may cause issues with your database since migrate\nwill attempt to run an empty query. In this case, deleting the migration file will also work.\nFor the rational of this behavior see:\n[#244 (comment)](https://github.com/golang-migrate/migrate/issues/244#issuecomment-510758270)\n\n## Migration Content Format\n\nThe format of the migration files themselves varies between database systems.\nDifferent databases have different semantics around schema changes and when and\nhow they are allowed to occur\n(for instance, [if schema changes can occur within a transaction](https://wiki.postgresql.org/wiki/Transactional_DDL_in_PostgreSQL:_A_Competitive_Analysis)).\n\nAs such, the `migrate` library has little to no checking around the format of\nmigration sources.  The migration files are generally processed directly by the\ndrivers as raw operations.\n\n## Reversibility of Migrations\n\nBest practice for writing schema migration is that all migrations should be\nreversible.  It should in theory be possible for run migrations down and back up\nthrough any and all versions with the state being fully cleaned and recreated\nby doing so.\n\nBy adhering to this recommended practice, development and deployment of new code\nis cleaner and easier (cleaning database state for a new feature should be as\neasy as migrating down to a prior version, and back up to the latest).\n\nAs opposed to some other migration libraries, `migrate` represents up and down\nmigrations as separate files.  This prevents any non-standard file syntax from\nbeing introduced which may result in unintended behavior or errors, depending\non what database is processing the file.\n\nWhile it is technically possible for an up or down migration to exist on its own\nwithout an equivalently versioned counterpart, it is strongly recommended to\nalways include a down migration which cleans up the state of the corresponding\nup migration.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 4.439453125,
          "content": "SOURCE ?= file go_bindata github github_ee bitbucket aws_s3 google_cloud_storage godoc_vfs gitlab\nDATABASE ?= postgres mysql redshift cassandra spanner cockroachdb yugabytedb clickhouse mongodb sqlserver firebird neo4j pgx pgx5 rqlite\nDATABASE_TEST ?= $(DATABASE) sqlite sqlite3 sqlcipher\nVERSION ?= $(shell git describe --tags 2>/dev/null | cut -c 2-)\nTEST_FLAGS ?=\nREPO_OWNER ?= $(shell cd .. && basename \"$$(pwd)\")\nCOVERAGE_DIR ?= .coverage\n\nbuild:\n\tCGO_ENABLED=0 go build -ldflags='-X main.Version=$(VERSION)' -tags '$(DATABASE) $(SOURCE)' ./cmd/migrate\n\nbuild-docker:\n\tCGO_ENABLED=0 go build -a -o build/migrate.linux-386 -ldflags=\"-s -w -X main.Version=${VERSION}\" -tags \"$(DATABASE) $(SOURCE)\" ./cmd/migrate\n\nbuild-cli: clean\n\t-mkdir ./cli/build\n\tcd ./cmd/migrate && CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -o ../../cli/build/migrate.linux-amd64 -ldflags='-X main.Version=$(VERSION) -extldflags \"-static\"' -tags '$(DATABASE) $(SOURCE)' .\n\tcd ./cmd/migrate && CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=7 go build -a -o ../../cli/build/migrate.linux-armv7 -ldflags='-X main.Version=$(VERSION) -extldflags \"-static\"' -tags '$(DATABASE) $(SOURCE)' .\n\tcd ./cmd/migrate && CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -a -o ../../cli/build/migrate.linux-arm64 -ldflags='-X main.Version=$(VERSION) -extldflags \"-static\"' -tags '$(DATABASE) $(SOURCE)' .\n\tcd ./cmd/migrate && CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -a -o ../../cli/build/migrate.darwin-amd64 -ldflags='-X main.Version=$(VERSION) -extldflags \"-static\"' -tags '$(DATABASE) $(SOURCE)' .\n\tcd ./cmd/migrate && CGO_ENABLED=0 GOOS=windows GOARCH=386 go build -a -o ../../cli/build/migrate.windows-386.exe -ldflags='-X main.Version=$(VERSION) -extldflags \"-static\"' -tags '$(DATABASE) $(SOURCE)' .\n\tcd ./cmd/migrate && CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -a -o ../../cli/build/migrate.windows-amd64.exe -ldflags='-X main.Version=$(VERSION) -extldflags \"-static\"' -tags '$(DATABASE) $(SOURCE)' .\n\tcd ./cli/build && find . -name 'migrate*' | xargs -I{} tar czf {}.tar.gz {}\n\tcd ./cli/build && shasum -a 256 * > sha256sum.txt\n\tcat ./cli/build/sha256sum.txt\n\n\nclean:\n\t-rm -r ./cli/build\n\n\ntest-short:\n\tmake test-with-flags --ignore-errors TEST_FLAGS='-short'\n\n\ntest:\n\t@-rm -r $(COVERAGE_DIR)\n\t@mkdir $(COVERAGE_DIR)\n\tmake test-with-flags TEST_FLAGS='-v -race -covermode atomic -coverprofile $$(COVERAGE_DIR)/combined.txt -bench=. -benchmem -timeout 20m'\n\n\ntest-with-flags:\n\t@echo SOURCE: $(SOURCE)\n\t@echo DATABASE_TEST: $(DATABASE_TEST)\n\n\t@go test $(TEST_FLAGS) ./...\n\n\nkill-orphaned-docker-containers:\n\tdocker rm -f $(shell docker ps -aq --filter label=migrate_test)\n\n\nhtml-coverage:\n\tgo tool cover -html=$(COVERAGE_DIR)/combined.txt\n\n\nlist-external-deps:\n\t$(call external_deps,'.')\n\t$(call external_deps,'./cli/...')\n\t$(call external_deps,'./testing/...')\n\n\t$(foreach v, $(SOURCE), $(call external_deps,'./source/$(v)/...'))\n\t$(call external_deps,'./source/testing/...')\n\t$(call external_deps,'./source/stub/...')\n\n\t$(foreach v, $(DATABASE), $(call external_deps,'./database/$(v)/...'))\n\t$(call external_deps,'./database/testing/...')\n\t$(call external_deps,'./database/stub/...')\n\n\nrestore-import-paths:\n\tfind . -name '*.go' -type f -execdir sed -i '' s%\\\"github.com/$(REPO_OWNER)/migrate%\\\"github.com/mattes/migrate%g '{}' \\;\n\n\nrewrite-import-paths:\n\tfind . -name '*.go' -type f -execdir sed -i '' s%\\\"github.com/mattes/migrate%\\\"github.com/$(REPO_OWNER)/migrate%g '{}' \\;\n\n\n# example: fswatch -0 --exclude .godoc.pid --event Updated . | xargs -0 -n1 -I{} make docs\ndocs:\n\t-make kill-docs\n\tnohup godoc -play -http=127.0.0.1:6064 </dev/null >/dev/null 2>&1 & echo $$! > .godoc.pid\n\tcat .godoc.pid\n\n\nkill-docs:\n\t@cat .godoc.pid\n\tkill -9 $$(cat .godoc.pid)\n\trm .godoc.pid\n\n\nopen-docs:\n\topen http://localhost:6064/pkg/github.com/$(REPO_OWNER)/migrate\n\n\n# example: make release V=0.0.0\nrelease:\n\tgit tag v$(V)\n\t@read -p \"Press enter to confirm and push to origin ...\" && git push origin v$(V)\n\necho-source:\n\t@echo \"$(SOURCE)\"\n\necho-database:\n\t@echo \"$(DATABASE)\"\n\n\ndefine external_deps\n\t@echo '-- $(1)';  go list -f '{{join .Deps \"\\n\"}}' $(1) | grep -v github.com/$(REPO_OWNER)/migrate | xargs go list -f '{{if not .Standard}}{{.ImportPath}}{{end}}'\n\nendef\n\n\n.PHONY: build build-docker build-cli clean test-short test test-with-flags html-coverage \\\n        restore-import-paths rewrite-import-paths list-external-deps release \\\n\t\tdocs kill-docs open-docs kill-orphaned-docker-containers echo-source echo-database\n\nSHELL = /bin/sh\nRAND = $(shell echo $$RANDOM)\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.107421875,
          "content": "[![GitHub Workflow Status (branch)](https://img.shields.io/github/actions/workflow/status/golang-migrate/migrate/ci.yaml?branch=master)](https://github.com/golang-migrate/migrate/actions/workflows/ci.yaml?query=branch%3Amaster)\n[![GoDoc](https://pkg.go.dev/badge/github.com/golang-migrate/migrate)](https://pkg.go.dev/github.com/golang-migrate/migrate/v4)\n[![Coverage Status](https://img.shields.io/coveralls/github/golang-migrate/migrate/master.svg)](https://coveralls.io/github/golang-migrate/migrate?branch=master)\n[![packagecloud.io](https://img.shields.io/badge/deb-packagecloud.io-844fec.svg)](https://packagecloud.io/golang-migrate/migrate?filter=debs)\n[![Docker Pulls](https://img.shields.io/docker/pulls/migrate/migrate.svg)](https://hub.docker.com/r/migrate/migrate/)\n![Supported Go Versions](https://img.shields.io/badge/Go-1.22%2C%201.23-lightgrey.svg)\n[![GitHub Release](https://img.shields.io/github/release/golang-migrate/migrate.svg)](https://github.com/golang-migrate/migrate/releases)\n[![Go Report Card](https://goreportcard.com/badge/github.com/golang-migrate/migrate/v4)](https://goreportcard.com/report/github.com/golang-migrate/migrate/v4)\n\n# migrate\n\n__Database migrations written in Go. Use as [CLI](#cli-usage) or import as [library](#use-in-your-go-project).__\n\n* Migrate reads migrations from [sources](#migration-sources)\n   and applies them in correct order to a [database](#databases).\n* Drivers are \"dumb\", migrate glues everything together and makes sure the logic is bulletproof.\n   (Keeps the drivers lightweight, too.)\n* Database drivers don't assume things or try to correct user input. When in doubt, fail.\n\nForked from [mattes/migrate](https://github.com/mattes/migrate)\n\n## Databases\n\nDatabase drivers run migrations. [Add a new database?](database/driver.go)\n\n* [PostgreSQL](database/postgres)\n* [PGX v4](database/pgx)\n* [PGX v5](database/pgx/v5)\n* [Redshift](database/redshift)\n* [Ql](database/ql)\n* [Cassandra / ScyllaDB](database/cassandra)\n* [SQLite](database/sqlite)\n* [SQLite3](database/sqlite3) ([todo #165](https://github.com/mattes/migrate/issues/165))\n* [SQLCipher](database/sqlcipher)\n* [MySQL / MariaDB](database/mysql)\n* [Neo4j](database/neo4j)\n* [MongoDB](database/mongodb)\n* [CrateDB](database/crate) ([todo #170](https://github.com/mattes/migrate/issues/170))\n* [Shell](database/shell) ([todo #171](https://github.com/mattes/migrate/issues/171))\n* [Google Cloud Spanner](database/spanner)\n* [CockroachDB](database/cockroachdb)\n* [YugabyteDB](database/yugabytedb)\n* [ClickHouse](database/clickhouse)\n* [Firebird](database/firebird)\n* [MS SQL Server](database/sqlserver)\n* [rqlite](database/rqlite)\n\n### Database URLs\n\nDatabase connection strings are specified via URLs. The URL format is driver dependent but generally has the form: `dbdriver://username:password@host:port/dbname?param1=true&param2=false`\n\nAny [reserved URL characters](https://en.wikipedia.org/wiki/Percent-encoding#Percent-encoding_reserved_characters) need to be escaped. Note, the `%` character also [needs to be escaped](https://en.wikipedia.org/wiki/Percent-encoding#Percent-encoding_the_percent_character)\n\nExplicitly, the following characters need to be escaped:\n`!`, `#`, `$`, `%`, `&`, `'`, `(`, `)`, `*`, `+`, `,`, `/`, `:`, `;`, `=`, `?`, `@`, `[`, `]`\n\nIt's easiest to always run the URL parts of your DB connection URL (e.g. username, password, etc) through an URL encoder. See the example Python snippets below:\n\n```bash\n$ python3 -c 'import urllib.parse; print(urllib.parse.quote(input(\"String to encode: \"), \"\"))'\nString to encode: FAKEpassword!#$%&'()*+,/:;=?@[]\nFAKEpassword%21%23%24%25%26%27%28%29%2A%2B%2C%2F%3A%3B%3D%3F%40%5B%5D\n$ python2 -c 'import urllib; print urllib.quote(raw_input(\"String to encode: \"), \"\")'\nString to encode: FAKEpassword!#$%&'()*+,/:;=?@[]\nFAKEpassword%21%23%24%25%26%27%28%29%2A%2B%2C%2F%3A%3B%3D%3F%40%5B%5D\n$\n```\n\n## Migration Sources\n\nSource drivers read migrations from local or remote sources. [Add a new source?](source/driver.go)\n\n* [Filesystem](source/file) - read from filesystem\n* [io/fs](source/iofs) - read from a Go [io/fs](https://pkg.go.dev/io/fs#FS)\n* [Go-Bindata](source/go_bindata) - read from embedded binary data ([jteeuwen/go-bindata](https://github.com/jteeuwen/go-bindata))\n* [pkger](source/pkger) - read from embedded binary data ([markbates/pkger](https://github.com/markbates/pkger))\n* [GitHub](source/github) - read from remote GitHub repositories\n* [GitHub Enterprise](source/github_ee) - read from remote GitHub Enterprise repositories\n* [Bitbucket](source/bitbucket) - read from remote Bitbucket repositories\n* [Gitlab](source/gitlab) - read from remote Gitlab repositories\n* [AWS S3](source/aws_s3) - read from Amazon Web Services S3\n* [Google Cloud Storage](source/google_cloud_storage) - read from Google Cloud Platform Storage\n\n## CLI usage\n\n* Simple wrapper around this library.\n* Handles ctrl+c (SIGINT) gracefully.\n* No config search paths, no config files, no magic ENV var injections.\n\n__[CLI Documentation](cmd/migrate)__\n\n### Basic usage\n\n```bash\n$ migrate -source file://path/to/migrations -database postgres://localhost:5432/database up 2\n```\n\n### Docker usage\n\n```bash\n$ docker run -v {{ migration dir }}:/migrations --network host migrate/migrate\n    -path=/migrations/ -database postgres://localhost:5432/database up 2\n```\n\n## Use in your Go project\n\n* API is stable and frozen for this release (v3 & v4).\n* Uses [Go modules](https://golang.org/cmd/go/#hdr-Modules__module_versions__and_more) to manage dependencies.\n* To help prevent database corruptions, it supports graceful stops via `GracefulStop chan bool`.\n* Bring your own logger.\n* Uses `io.Reader` streams internally for low memory overhead.\n* Thread-safe and no goroutine leaks.\n\n__[Go Documentation](https://pkg.go.dev/github.com/golang-migrate/migrate/v4)__\n\n```go\nimport (\n    \"github.com/golang-migrate/migrate/v4\"\n    _ \"github.com/golang-migrate/migrate/v4/database/postgres\"\n    _ \"github.com/golang-migrate/migrate/v4/source/github\"\n)\n\nfunc main() {\n    m, err := migrate.New(\n        \"github://mattes:personal-access-token@mattes/migrate_test\",\n        \"postgres://localhost:5432/database?sslmode=enable\")\n    m.Steps(2)\n}\n```\n\nWant to use an existing database client?\n\n```go\nimport (\n    \"database/sql\"\n    _ \"github.com/lib/pq\"\n    \"github.com/golang-migrate/migrate/v4\"\n    \"github.com/golang-migrate/migrate/v4/database/postgres\"\n    _ \"github.com/golang-migrate/migrate/v4/source/file\"\n)\n\nfunc main() {\n    db, err := sql.Open(\"postgres\", \"postgres://localhost:5432/database?sslmode=enable\")\n    driver, err := postgres.WithInstance(db, &postgres.Config{})\n    m, err := migrate.NewWithDatabaseInstance(\n        \"file:///migrations\",\n        \"postgres\", driver)\n    m.Up() // or m.Steps(2) if you want to explicitly set the number of migrations to run\n}\n```\n\n## Getting started\n\nGo to [getting started](GETTING_STARTED.md)\n\n## Tutorials\n\n* [CockroachDB](database/cockroachdb/TUTORIAL.md)\n* [PostgreSQL](database/postgres/TUTORIAL.md)\n\n(more tutorials to come)\n\n## Migration files\n\nEach migration has an up and down migration. [Why?](FAQ.md#why-two-separate-files-up-and-down-for-a-migration)\n\n```bash\n1481574547_create_users_table.up.sql\n1481574547_create_users_table.down.sql\n```\n\n[Best practices: How to write migrations.](MIGRATIONS.md)\n\n## Coming from another db migration tool?\n\nCheck out [migradaptor](https://github.com/musinit/migradaptor/).\n*Note: migradaptor is not affiliated or supported by this project*\n\n## Versions\n\nVersion | Supported? | Import | Notes\n--------|------------|--------|------\n**master** | :white_check_mark: | `import \"github.com/golang-migrate/migrate/v4\"` | New features and bug fixes arrive here first |\n**v4** | :white_check_mark: | `import \"github.com/golang-migrate/migrate/v4\"` | Used for stable releases |\n**v3** | :x: | `import \"github.com/golang-migrate/migrate\"` (with package manager) or `import \"gopkg.in/golang-migrate/migrate.v3\"` (not recommended) | **DO NOT USE** - No longer supported |\n\n## Development and Contributing\n\nYes, please! [`Makefile`](Makefile) is your friend,\nread the [development guide](CONTRIBUTING.md).\n\nAlso have a look at the [FAQ](FAQ.md).\n\n---\n\nLooking for alternatives? [https://awesome-go.com/#database](https://awesome-go.com/#database).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.642578125,
          "content": "# Security Policy\n\n## Supported Versions\n\n| Version | Supported          |\n| ------- | ------------------ |\n| master  | :white_check_mark: |\n| 4.x     | :white_check_mark: |\n| 3.x     | :x:                |\n| < 3.0   | :x:                |\n\n## Reporting a Vulnerability\n\nWe prefer [coordinated disclosures](https://en.wikipedia.org/wiki/Coordinated_vulnerability_disclosure). To start one, create a GitHub security advisory following [these instructions](https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability)\n\nPlease suggest potential impact and urgency in your reports.\n"
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "database",
          "type": "tree",
          "content": null
        },
        {
          "name": "dktesting",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-deploy.sh",
          "type": "blob",
          "size": 0.2685546875,
          "content": "#!/bin/bash\n\necho \"$DOCKER_PASSWORD\" | docker login -u \"$DOCKER_USERNAME\" --password-stdin && \\\ndocker build --build-arg VERSION=\"$TRAVIS_TAG\" . -t migrate/migrate -t migrate/migrate:\"$TRAVIS_TAG\" && \\\ndocker push migrate/migrate:\"$TRAVIS_TAG\" && docker push migrate/migrate\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 10.28515625,
          "content": "module github.com/golang-migrate/migrate/v4\n\ngo 1.22.0\n\ntoolchain go1.23.1\n\nrequire (\n\tcloud.google.com/go/spanner v1.56.0\n\tcloud.google.com/go/storage v1.38.0\n\tgithub.com/Azure/go-autorest/autorest/adal v0.9.16\n\tgithub.com/ClickHouse/clickhouse-go v1.4.3\n\tgithub.com/aws/aws-sdk-go v1.49.6\n\tgithub.com/cenkalti/backoff/v4 v4.1.2\n\tgithub.com/cockroachdb/cockroach-go/v2 v2.1.1\n\tgithub.com/dhui/dktest v0.4.3\n\tgithub.com/docker/docker v27.2.0+incompatible\n\tgithub.com/docker/go-connections v0.5.0\n\tgithub.com/fsouza/fake-gcs-server v1.17.0\n\tgithub.com/go-sql-driver/mysql v1.5.0\n\tgithub.com/gobuffalo/here v0.6.0\n\tgithub.com/gocql/gocql v0.0.0-20210515062232-b7ef815b4556\n\tgithub.com/google/go-github/v39 v39.2.0\n\tgithub.com/hashicorp/go-multierror v1.1.1\n\tgithub.com/jackc/pgconn v1.14.3\n\tgithub.com/jackc/pgerrcode v0.0.0-20220416144525-469b46aa5efa\n\tgithub.com/jackc/pgx/v4 v4.18.2\n\tgithub.com/jackc/pgx/v5 v5.5.4\n\tgithub.com/ktrysmt/go-bitbucket v0.6.4\n\tgithub.com/lib/pq v1.10.9\n\tgithub.com/markbates/pkger v0.15.1\n\tgithub.com/mattn/go-sqlite3 v1.14.22\n\tgithub.com/microsoft/go-mssqldb v1.0.0\n\tgithub.com/mutecomm/go-sqlcipher/v4 v4.4.0\n\tgithub.com/nakagami/firebirdsql v0.0.0-20190310045651-3c02a58cfed8\n\tgithub.com/neo4j/neo4j-go-driver v1.8.1-0.20200803113522-b626aa943eba\n\tgithub.com/snowflakedb/gosnowflake v1.6.19\n\tgithub.com/stretchr/testify v1.9.0\n\tgithub.com/xanzy/go-gitlab v0.15.0\n\tgo.mongodb.org/mongo-driver v1.7.5\n\tgo.uber.org/atomic v1.7.0\n\tgolang.org/x/oauth2 v0.18.0\n\tgolang.org/x/tools v0.24.0\n\tgoogle.golang.org/api v0.169.0\n\tmodernc.org/ql v1.0.0\n\tmodernc.org/sqlite v1.18.1\n)\n\nrequire (\n\tgithub.com/distribution/reference v0.6.0 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/go-logr/logr v1.4.2 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/jackc/puddle/v2 v2.2.1 // indirect\n\tgithub.com/json-iterator/go v1.1.12 // indirect\n\tgithub.com/kr/text v0.2.0 // indirect\n\tgithub.com/moby/docker-image-spec v1.3.1 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421 // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/rogpeppe/go-internal v1.12.0 // indirect\n\tgithub.com/stretchr/objx v0.5.2 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.49.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0 // indirect\n\tgo.opentelemetry.io/otel v1.29.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.29.0 // indirect\n\tgo.opentelemetry.io/otel/metric v1.29.0 // indirect\n\tgo.opentelemetry.io/otel/sdk v1.29.0 // indirect\n\tgo.opentelemetry.io/otel/trace v1.29.0 // indirect\n\tgo.opentelemetry.io/proto/otlp v1.3.1 // indirect\n)\n\nrequire (\n\tcloud.google.com/go v0.112.1 // indirect\n\tcloud.google.com/go/compute v1.25.1 // indirect\n\tcloud.google.com/go/compute/metadata v0.2.3 // indirect\n\tcloud.google.com/go/iam v1.1.6 // indirect\n\tcloud.google.com/go/longrunning v0.5.5 // indirect\n\tgithub.com/99designs/go-keychain v0.0.0-20191008050251-8e49817e8af4 // indirect\n\tgithub.com/99designs/keyring v1.2.1 // indirect\n\tgithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.4.0 // indirect\n\tgithub.com/Azure/azure-sdk-for-go/sdk/internal v1.1.2 // indirect\n\tgithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob v1.0.0 // indirect\n\tgithub.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161 // indirect\n\tgithub.com/Azure/go-autorest v14.2.0+incompatible // indirect\n\tgithub.com/Azure/go-autorest/autorest/date v0.3.0 // indirect\n\tgithub.com/Azure/go-autorest/logger v0.2.1 // indirect\n\tgithub.com/Azure/go-autorest/tracing v0.6.0 // indirect\n\tgithub.com/Microsoft/go-winio v0.6.2 // indirect\n\tgithub.com/andybalholm/brotli v1.0.4 // indirect\n\tgithub.com/apache/arrow/go/v10 v10.0.1 // indirect\n\tgithub.com/apache/thrift v0.16.0 // indirect\n\tgithub.com/aws/aws-sdk-go-v2 v1.16.16 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.4.8 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/credentials v1.12.20 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/feature/s3/manager v1.11.33 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/configsources v1.1.23 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.4.17 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/v4a v1.0.14 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.9.9 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/checksum v1.1.18 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.9.17 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.13.17 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/s3 v1.27.11 // indirect\n\tgithub.com/aws/smithy-go v1.13.3 // indirect\n\tgithub.com/census-instrumentation/opencensus-proto v0.4.1 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.2.0 // indirect\n\tgithub.com/cloudflare/golz4 v0.0.0-20150217214814-ef862a3cdc58 // indirect\n\tgithub.com/cncf/xds/go v0.0.0-20240318125728-8a4994d93e50 // indirect\n\tgithub.com/cznic/mathutil v0.0.0-20180504122225-ca4c9f2c1369 // indirect\n\tgithub.com/danieljoos/wincred v1.1.2 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/docker/go-units v0.5.0 // indirect\n\tgithub.com/dvsekhvalnov/jose2go v1.6.0 // indirect\n\tgithub.com/edsrzf/mmap-go v0.0.0-20170320065105-0bce6a688712 // indirect\n\tgithub.com/envoyproxy/go-control-plane v0.12.0 // indirect\n\tgithub.com/envoyproxy/protoc-gen-validate v1.0.4 // indirect\n\tgithub.com/form3tech-oss/jwt-go v3.2.5+incompatible // indirect\n\tgithub.com/gabriel-vasile/mimetype v1.4.1 // indirect\n\tgithub.com/go-stack/stack v1.8.0 // indirect\n\tgithub.com/goccy/go-json v0.9.11 // indirect\n\tgithub.com/godbus/dbus v0.0.0-20190726142602-4481cbc300e2 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang-jwt/jwt/v4 v4.4.2 // indirect\n\tgithub.com/golang-sql/civil v0.0.0-20190719163853-cb61b32ac6fe // indirect\n\tgithub.com/golang-sql/sqlexp v0.1.0 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/golang/protobuf v1.5.4 // indirect\n\tgithub.com/golang/snappy v0.0.4 // indirect\n\tgithub.com/google/flatbuffers v2.0.8+incompatible // indirect\n\tgithub.com/google/go-querystring v1.1.0 // indirect\n\tgithub.com/google/s2a-go v0.1.7 // indirect\n\tgithub.com/google/uuid v1.6.0 // indirect\n\tgithub.com/googleapis/enterprise-certificate-proxy v0.3.2 // indirect\n\tgithub.com/googleapis/gax-go/v2 v2.12.2 // indirect\n\tgithub.com/gorilla/handlers v1.4.2 // indirect\n\tgithub.com/gorilla/mux v1.7.4 // indirect\n\tgithub.com/gsterjov/go-libsecret v0.0.0-20161001094733-a6f4afe4910c // indirect\n\tgithub.com/hailocab/go-hostpool v0.0.0-20160125115350-e80d13ce29ed // indirect\n\tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n\tgithub.com/jackc/chunkreader/v2 v2.0.1 // indirect\n\tgithub.com/jackc/pgio v1.0.0 // indirect\n\tgithub.com/jackc/pgpassfile v1.0.0 // indirect\n\tgithub.com/jackc/pgproto3/v2 v2.3.3 // indirect\n\tgithub.com/jackc/pgservicefile v0.0.0-20221227161230-091c0ba34f0a // indirect\n\tgithub.com/jackc/pgtype v1.14.0 // indirect\n\tgithub.com/jmespath/go-jmespath v0.4.0 // indirect\n\tgithub.com/k0kubun/pp v2.3.0+incompatible // indirect\n\tgithub.com/kardianos/osext v0.0.0-20190222173326-2bc1f35cddc0 // indirect\n\tgithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51 // indirect\n\tgithub.com/klauspost/asmfmt v1.3.2 // indirect\n\tgithub.com/klauspost/compress v1.15.11 // indirect\n\tgithub.com/klauspost/cpuid/v2 v2.0.9 // indirect\n\tgithub.com/mattn/go-colorable v0.1.6 // indirect\n\tgithub.com/mattn/go-isatty v0.0.16 // indirect\n\tgithub.com/minio/asm2plan9s v0.0.0-20200509001527-cdd76441f9d8 // indirect\n\tgithub.com/minio/c2goasm v0.0.0-20190812172519-36a3d3bbc4f3 // indirect\n\tgithub.com/mitchellh/mapstructure v1.1.2 // indirect\n\tgithub.com/moby/term v0.5.0 // indirect\n\tgithub.com/morikuni/aec v1.0.0 // indirect\n\tgithub.com/mtibben/percent v0.2.1 // indirect\n\tgithub.com/onsi/ginkgo v1.16.4 // indirect\n\tgithub.com/onsi/gomega v1.15.0 // indirect\n\tgithub.com/opencontainers/go-digest v1.0.0 // indirect\n\tgithub.com/opencontainers/image-spec v1.1.0 // indirect\n\tgithub.com/pierrec/lz4/v4 v4.1.16 // indirect\n\tgithub.com/pkg/browser v0.0.0-20210911075715-681adbf594b8 // indirect\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/remyoudompheng/bigfft v0.0.0-20200410134404-eec4a21b6bb0 // indirect\n\tgithub.com/rqlite/gorqlite v0.0.0-20230708021416-2acd02b70b79\n\tgithub.com/shopspring/decimal v1.2.0 // indirect\n\tgithub.com/sirupsen/logrus v1.9.3 // indirect\n\tgithub.com/xdg-go/pbkdf2 v1.0.0 // indirect\n\tgithub.com/xdg-go/scram v1.1.1 // indirect\n\tgithub.com/xdg-go/stringprep v1.0.3 // indirect\n\tgithub.com/youmark/pkcs8 v0.0.0-20181117223130-1be2e3e5546d // indirect\n\tgithub.com/zeebo/xxh3 v1.0.2 // indirect\n\tgitlab.com/nyarla/go-crypt v0.0.0-20160106005555-d9a5dc2b789b // indirect\n\tgo.opencensus.io v0.24.0 // indirect\n\tgolang.org/x/crypto v0.27.0 // indirect\n\tgolang.org/x/exp v0.0.0-20230315142452-642cacee5cc0 // indirect\n\tgolang.org/x/mod v0.21.0 // indirect\n\tgolang.org/x/net v0.29.0 // indirect\n\tgolang.org/x/sync v0.8.0 // indirect\n\tgolang.org/x/sys v0.25.0 // indirect\n\tgolang.org/x/term v0.24.0 // indirect\n\tgolang.org/x/text v0.18.0 // indirect\n\tgolang.org/x/time v0.5.0 // indirect\n\tgolang.org/x/xerrors v0.0.0-20231012003039-104605ab7028 // indirect\n\tgoogle.golang.org/appengine v1.6.8 // indirect\n\tgoogle.golang.org/genproto v0.0.0-20240213162025-012b6fc9bca9 // indirect\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20240513163218-0867130af1f8 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240513163218-0867130af1f8 // indirect\n\tgoogle.golang.org/grpc v1.64.1 // indirect\n\tgoogle.golang.org/protobuf v1.34.2 // indirect\n\tgopkg.in/inf.v0 v0.9.1 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n\tlukechampine.com/uint128 v1.2.0 // indirect\n\tmodernc.org/b v1.0.0 // indirect\n\tmodernc.org/cc/v3 v3.36.3 // indirect\n\tmodernc.org/ccgo/v3 v3.16.9 // indirect\n\tmodernc.org/db v1.0.0 // indirect\n\tmodernc.org/file v1.0.0 // indirect\n\tmodernc.org/fileutil v1.0.0 // indirect\n\tmodernc.org/golex v1.0.0 // indirect\n\tmodernc.org/internal v1.0.0 // indirect\n\tmodernc.org/libc v1.17.1 // indirect\n\tmodernc.org/lldb v1.0.0 // indirect\n\tmodernc.org/mathutil v1.5.0 // indirect\n\tmodernc.org/memory v1.2.1 // indirect\n\tmodernc.org/opt v0.1.3 // indirect\n\tmodernc.org/sortutil v1.1.0 // indirect\n\tmodernc.org/strutil v1.1.3 // indirect\n\tmodernc.org/token v1.0.0 // indirect\n\tmodernc.org/zappy v1.0.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 93.478515625,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=\ncloud.google.com/go v0.44.1/go.mod h1:iSa0KzasP4Uvy3f1mN/7PiObzGgflwredwwASm/v6AU=\ncloud.google.com/go v0.44.2/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=\ncloud.google.com/go v0.45.1/go.mod h1:RpBamKRgapWJb87xiFSdk4g1CME7QZg3uwTez+TSTjc=\ncloud.google.com/go v0.46.3/go.mod h1:a6bKKbmY7er1mI7TEI4lsAkts/mkhTSZK8w33B4RAg0=\ncloud.google.com/go v0.50.0/go.mod h1:r9sluTvynVuxRIOHXQEHMFffphuXHOMZMycpNR5e6To=\ncloud.google.com/go v0.112.1 h1:uJSeirPke5UNZHIb4SxfZklVSiWWVqW4oXlETwZziwM=\ncloud.google.com/go v0.112.1/go.mod h1:+Vbu+Y1UU+I1rjmzeMOb/8RfkKJK2Gyxi1X6jJCZLo4=\ncloud.google.com/go/bigquery v1.0.1/go.mod h1:i/xbL2UlR5RvWAURpBYZTtm/cXjCha9lbfbpx4poX+o=\ncloud.google.com/go/bigquery v1.3.0/go.mod h1:PjpwJnslEMmckchkHFfq+HTD2DmtT67aNFKH1/VBDHE=\ncloud.google.com/go/compute v1.25.1 h1:ZRpHJedLtTpKgr3RV1Fx23NuaAEN1Zfx9hw1u4aJdjU=\ncloud.google.com/go/compute v1.25.1/go.mod h1:oopOIR53ly6viBYxaDhBfJwzUAxf1zE//uf3IB011ls=\ncloud.google.com/go/compute/metadata v0.2.3 h1:mg4jlk7mCAj6xXp9UJ4fjI9VUI5rubuGBW5aJ7UnBMY=\ncloud.google.com/go/compute/metadata v0.2.3/go.mod h1:VAV5nSsACxMJvgaAuX6Pk2AawlZn8kiOGuCv6gTkwuA=\ncloud.google.com/go/datastore v1.0.0/go.mod h1:LXYbyblFSglQ5pkeyhO+Qmw7ukd3C+pD7TKLgZqpHYE=\ncloud.google.com/go/iam v1.1.6 h1:bEa06k05IO4f4uJonbB5iAgKTPpABy1ayxaIZV/GHVc=\ncloud.google.com/go/iam v1.1.6/go.mod h1:O0zxdPeGBoFdWW3HWmBxJsk0pfvNM/p/qa82rWOGTwI=\ncloud.google.com/go/longrunning v0.5.5 h1:GOE6pZFdSrTb4KAiKnXsJBtlE6mEyaW44oKyMILWnOg=\ncloud.google.com/go/longrunning v0.5.5/go.mod h1:WV2LAxD8/rg5Z1cNW6FJ/ZpX4E4VnDnoTk0yawPBB7s=\ncloud.google.com/go/pubsub v1.0.1/go.mod h1:R0Gpsv3s54REJCy4fxDixWD93lHJMoZTyQ2kNxGRt3I=\ncloud.google.com/go/pubsub v1.1.0/go.mod h1:EwwdRX2sKPjnvnqCa270oGRyludottCI76h+R3AArQw=\ncloud.google.com/go/spanner v1.56.0 h1:o/Cv7/zZ1WgRXVCd5g3Nc23ZI39p/1pWFqFwvg6Wcu8=\ncloud.google.com/go/spanner v1.56.0/go.mod h1:DndqtUKQAt3VLuV2Le+9Y3WTnq5cNKrnLb/Piqcj+h0=\ncloud.google.com/go/storage v1.0.0/go.mod h1:IhtSnM/ZTZV8YYJWCY8RULGVqBDmpoyjwiyrjsg+URw=\ncloud.google.com/go/storage v1.5.0/go.mod h1:tpKbwo567HUNpVclU5sGELwQWBDZ8gh0ZeosJ0Rtdos=\ncloud.google.com/go/storage v1.38.0 h1:Az68ZRGlnNTpIBbLjSMIV2BDcwwXYlRlQzis0llkpJg=\ncloud.google.com/go/storage v1.38.0/go.mod h1:tlUADB0mAb9BgYls9lq+8MGkfzOXuLrnHXlpHmvFJoY=\ndmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\ngithub.com/99designs/go-keychain v0.0.0-20191008050251-8e49817e8af4 h1:/vQbFIOMbk2FiG/kXiLl8BRyzTWDw7gX/Hz7Dd5eDMs=\ngithub.com/99designs/go-keychain v0.0.0-20191008050251-8e49817e8af4/go.mod h1:hN7oaIRCjzsZ2dE+yG5k+rsdt3qcwykqK6HVGcKwsw4=\ngithub.com/99designs/keyring v1.2.1 h1:tYLp1ULvO7i3fI5vE21ReQuj99QFSs7lGm0xWyJo87o=\ngithub.com/99designs/keyring v1.2.1/go.mod h1:fc+wB5KTk9wQ9sDx0kFXB3A0MaeGHM9AwRStKOQ5vOA=\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.0.0/go.mod h1:uGG2W01BaETf0Ozp+QxxKJdMBNRWPdstHG0Fmdwn1/U=\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.1.2/go.mod h1:uGG2W01BaETf0Ozp+QxxKJdMBNRWPdstHG0Fmdwn1/U=\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.4.0 h1:rTnT/Jrcm+figWlYz4Ixzt0SJVR2cMC8lvZcimipiEY=\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.4.0/go.mod h1:ON4tFdPTwRcgWEaVDrN3584Ef+b7GgSJaXxe5fW9t4M=\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity v1.2.1 h1:T8quHYlUGyb/oqtSTwqlCr1ilJHrDv+ZtpSfo+hm1BU=\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity v1.2.1/go.mod h1:gLa1CL2RNE4s7M3yopJ/p0iq5DdY6Yv5ZUt9MTRZOQM=\ngithub.com/Azure/azure-sdk-for-go/sdk/internal v1.0.0/go.mod h1:eWRD7oawr1Mu1sLCawqVc0CUiF43ia3qQMxLscsKQ9w=\ngithub.com/Azure/azure-sdk-for-go/sdk/internal v1.1.2 h1:+5VZ72z0Qan5Bog5C+ZkgSqUbeVUd9wgtHOrIKuc5b8=\ngithub.com/Azure/azure-sdk-for-go/sdk/internal v1.1.2/go.mod h1:eWRD7oawr1Mu1sLCawqVc0CUiF43ia3qQMxLscsKQ9w=\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob v1.0.0 h1:u/LLAOFgsMv7HmNL4Qufg58y+qElGOt5qv0z1mURkRY=\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob v1.0.0/go.mod h1:2e8rMJtl2+2j+HXbTBwnyGpm5Nou7KhvSfxOq8JpTag=\ngithub.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161 h1:L/gRVlceqvL25UVaW/CKtUDjefjrs0SPonmDGUVOYP0=\ngithub.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=\ngithub.com/Azure/go-autorest v14.2.0+incompatible h1:V5VMDjClD3GiElqLWO7mz2MxNAK/vTfRHdAubSIPRgs=\ngithub.com/Azure/go-autorest v14.2.0+incompatible/go.mod h1:r+4oMnoxhatjLLJ6zxSWATqVooLgysK6ZNox3g/xq24=\ngithub.com/Azure/go-autorest/autorest/adal v0.9.16 h1:P8An8Z9rH1ldbOLdFpxYorgOt2sywL9V24dAwWHPuGc=\ngithub.com/Azure/go-autorest/autorest/adal v0.9.16/go.mod h1:tGMin8I49Yij6AQ+rvV+Xa/zwxYQB5hmsd6DkfAx2+A=\ngithub.com/Azure/go-autorest/autorest/date v0.3.0 h1:7gUk1U5M/CQbp9WoqinNzJar+8KY+LPI6wiWrP/myHw=\ngithub.com/Azure/go-autorest/autorest/date v0.3.0/go.mod h1:BI0uouVdmngYNUzGWeSYnokU+TrmwEsOqdt8Y6sso74=\ngithub.com/Azure/go-autorest/autorest/mocks v0.4.1 h1:K0laFcLE6VLTOwNgSxaGbUcLPuGXlNkbVvq4cW4nIHk=\ngithub.com/Azure/go-autorest/autorest/mocks v0.4.1/go.mod h1:LTp+uSrOhSkaKrUy935gNZuuIPPVsHlr9DSOxSayd+k=\ngithub.com/Azure/go-autorest/logger v0.2.1 h1:IG7i4p/mDa2Ce4TRyAO8IHnVhAVF3RFU+ZtXWSmf4Tg=\ngithub.com/Azure/go-autorest/logger v0.2.1/go.mod h1:T9E3cAhj2VqvPOtCYAvby9aBXkZmbF5NWuPV8+WeEW8=\ngithub.com/Azure/go-autorest/tracing v0.6.0 h1:TYi4+3m5t6K48TGI9AUdb+IzbnSxvnvUMfuitfgcfuo=\ngithub.com/Azure/go-autorest/tracing v0.6.0/go.mod h1:+vhtPC754Xsa23ID7GlGsrdKBpUA79WCAKPPZVC2DeU=\ngithub.com/AzureAD/microsoft-authentication-library-for-go v0.8.1 h1:oPdPEZFSbl7oSPEAIPMPBMUmiL+mqgzBJwM/9qYcwNg=\ngithub.com/AzureAD/microsoft-authentication-library-for-go v0.8.1/go.mod h1:4qFor3D/HDsvBME35Xy9rwW9DecL+M2sNw1ybjPtwA0=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\ngithub.com/ClickHouse/clickhouse-go v1.4.3 h1:iAFMa2UrQdR5bHJ2/yaSLffZkxpcOYQMCUuKeNXGdqc=\ngithub.com/ClickHouse/clickhouse-go v1.4.3/go.mod h1:EaI/sW7Azgz9UATzd5ZdZHRUhHgv5+JMS9NSr2smCJI=\ngithub.com/JohnCGriffin/overflow v0.0.0-20211019200055-46fa312c352c h1:RGWPOewvKIROun94nF7v2cua9qP+thov/7M50KEoeSU=\ngithub.com/JohnCGriffin/overflow v0.0.0-20211019200055-46fa312c352c/go.mod h1:X0CRv0ky0k6m906ixxpzmDRLvX58TFUKS2eePweuyxk=\ngithub.com/Masterminds/semver/v3 v3.1.1 h1:hLg3sBzpNErnxhQtUy/mmLR2I9foDujNK030IGemrRc=\ngithub.com/Masterminds/semver/v3 v3.1.1/go.mod h1:VPu/7SZ7ePZ3QOrcuXROw5FAcLl4a0cBrbBpGY/8hQs=\ngithub.com/Microsoft/go-winio v0.6.2 h1:F2VQgta7ecxGYO8k3ZZz3RS8fVIXVxONVUPlNERoyfY=\ngithub.com/Microsoft/go-winio v0.6.2/go.mod h1:yd8OoFMLzJbo9gZq8j5qaps8bJ9aShtEA8Ipt1oGCvU=\ngithub.com/andybalholm/brotli v1.0.4 h1:V7DdXeJtZscaqfNuAdSRuRFzuiKlHSC/Zh3zl9qY3JY=\ngithub.com/andybalholm/brotli v1.0.4/go.mod h1:fO7iG3H7G2nSZ7m0zPUDn85XEX2GTukHGRSepvi9Eig=\ngithub.com/apache/arrow/go/v10 v10.0.1 h1:n9dERvixoC/1JjDmBcs9FPaEryoANa2sCgVFo6ez9cI=\ngithub.com/apache/arrow/go/v10 v10.0.1/go.mod h1:YvhnlEePVnBS4+0z3fhPfUy7W1Ikj0Ih0vcRo/gZ1M0=\ngithub.com/apache/thrift v0.16.0 h1:qEy6UW60iVOlUy+b9ZR0d5WzUWYGOo4HfopoyBaNmoY=\ngithub.com/apache/thrift v0.16.0/go.mod h1:PHK3hniurgQaNMZYaCLEqXKsYK8upmhPbmdP2FXSqgU=\ngithub.com/aws/aws-sdk-go v1.49.6 h1:yNldzF5kzLBRvKlKz1S0bkvc2+04R1kt13KfBWQBfFA=\ngithub.com/aws/aws-sdk-go v1.49.6/go.mod h1:LF8svs817+Nz+DmiMQKTO3ubZ/6IaTpq3TjupRn3Eqk=\ngithub.com/aws/aws-sdk-go-v2 v1.16.16 h1:M1fj4FE2lB4NzRb9Y0xdWsn2P0+2UHVxwKyOa4YJNjk=\ngithub.com/aws/aws-sdk-go-v2 v1.16.16/go.mod h1:SwiyXi/1zTUZ6KIAmLK5V5ll8SiURNUYOqTerZPaF9k=\ngithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.4.8 h1:tcFliCWne+zOuUfKNRn8JdFBuWPDuISDH08wD2ULkhk=\ngithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.4.8/go.mod h1:JTnlBSot91steJeti4ryyu/tLd4Sk84O5W22L7O2EQU=\ngithub.com/aws/aws-sdk-go-v2/config v1.17.7 h1:odVM52tFHhpqZBKNjVW5h+Zt1tKHbhdTQRb+0WHrNtw=\ngithub.com/aws/aws-sdk-go-v2/config v1.17.7/go.mod h1:dN2gja/QXxFF15hQreyrqYhLBaQo1d9ZKe/v/uplQoI=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.12.20 h1:9+ZhlDY7N9dPnUmf7CDfW9In4sW5Ff3bh7oy4DzS1IE=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.12.20/go.mod h1:UKY5HyIux08bbNA7Blv4PcXQ8cTkGh7ghHMFklaviR4=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.12.17 h1:r08j4sbZu/RVi+BNxkBJwPMUYY3P8mgSDuKkZ/ZN1lE=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.12.17/go.mod h1:yIkQcCDYNsZfXpd5UX2Cy+sWA1jPgIhGTw9cOBzfVnQ=\ngithub.com/aws/aws-sdk-go-v2/feature/s3/manager v1.11.33 h1:fAoVmNGhir6BR+RU0/EI+6+D7abM+MCwWf8v4ip5jNI=\ngithub.com/aws/aws-sdk-go-v2/feature/s3/manager v1.11.33/go.mod h1:84XgODVR8uRhmOnUkKGUZKqIMxmjmLOR8Uyp7G/TPwc=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.1.23 h1:s4g/wnzMf+qepSNgTvaQQHNxyMLKSawNhKCPNy++2xY=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.1.23/go.mod h1:2DFxAQ9pfIRy0imBCJv+vZ2X6RKxves6fbnEuSry6b4=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.4.17 h1:/K482T5A3623WJgWT8w1yRAFK4RzGzEl7y39yhtn9eA=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.4.17/go.mod h1:pRwaTYCJemADaqCbUAxltMoHKata7hmB5PjEXeu0kfg=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.3.24 h1:wj5Rwc05hvUSvKuOF29IYb9QrCLjU+rHAy/x/o0DK2c=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.3.24/go.mod h1:jULHjqqjDlbyTa7pfM7WICATnOv+iOhjletM3N0Xbu8=\ngithub.com/aws/aws-sdk-go-v2/internal/v4a v1.0.14 h1:ZSIPAkAsCCjYrhqfw2+lNzWDzxzHXEckFkTePL5RSWQ=\ngithub.com/aws/aws-sdk-go-v2/internal/v4a v1.0.14/go.mod h1:AyGgqiKv9ECM6IZeNQtdT8NnMvUb3/2wokeq2Fgryto=\ngithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.9.9 h1:Lh1AShsuIJTwMkoxVCAYPJgNG5H+eN6SmoUn8nOZ5wE=\ngithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.9.9/go.mod h1:a9j48l6yL5XINLHLcOKInjdvknN+vWqPBxqeIDw7ktw=\ngithub.com/aws/aws-sdk-go-v2/service/internal/checksum v1.1.18 h1:BBYoNQt2kUZUUK4bIPsKrCcjVPUMNsgQpNAwhznK/zo=\ngithub.com/aws/aws-sdk-go-v2/service/internal/checksum v1.1.18/go.mod h1:NS55eQ4YixUJPTC+INxi2/jCqe1y2Uw3rnh9wEOVJxY=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.9.17 h1:Jrd/oMh0PKQc6+BowB+pLEwLIgaQF29eYbe7E1Av9Ug=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.9.17/go.mod h1:4nYOrY41Lrbk2170/BGkcJKBhws9Pfn8MG3aGqjjeFI=\ngithub.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.13.17 h1:HfVVR1vItaG6le+Bpw6P4midjBDMKnjMyZnw9MXYUcE=\ngithub.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.13.17/go.mod h1:YqMdV+gEKCQ59NrB7rzrJdALeBIsYiVi8Inj3+KcqHI=\ngithub.com/aws/aws-sdk-go-v2/service/s3 v1.27.11 h1:3/gm/JTX9bX8CpzTgIlrtYpB3EVBDxyg/GY/QdcIEZw=\ngithub.com/aws/aws-sdk-go-v2/service/s3 v1.27.11/go.mod h1:fmgDANqTUCxciViKl9hb/zD5LFbvPINFRgWhDbR+vZo=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.11.23 h1:pwvCchFUEnlceKIgPUouBJwK81aCkQ8UDMORfeFtW10=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.11.23/go.mod h1:/w0eg9IhFGjGyyncHIQrXtU8wvNsTJOP0R6PPj0wf80=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.13.5 h1:GUnZ62TevLqIoDyHeiWj2P7EqaosgakBKVvWriIdLQY=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.13.5/go.mod h1:csZuQY65DAdFBt1oIjO5hhBR49kQqop4+lcuCjf2arA=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.16.19 h1:9pPi0PsFNAGILFfPCk8Y0iyEBGc6lu6OQ97U7hmdesg=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.16.19/go.mod h1:h4J3oPZQbxLhzGnk+j9dfYHi5qIOVJ5kczZd658/ydM=\ngithub.com/aws/smithy-go v1.13.3 h1:l7LYxGuzK6/K+NzJ2mC+VvLUbae0sL3bXU//04MkmnA=\ngithub.com/aws/smithy-go v1.13.3/go.mod h1:Tg+OJXh4MB2R/uN61Ko2f6hTZwB/ZYGOtib8J3gBHzA=\ngithub.com/bitly/go-hostpool v0.0.0-20171023180738-a3a6125de932 h1:mXoPYz/Ul5HYEDvkta6I8/rnYM5gSdSV2tJ6XbZuEtY=\ngithub.com/bitly/go-hostpool v0.0.0-20171023180738-a3a6125de932/go.mod h1:NOuUCSz6Q9T7+igc/hlvDOUdtWKryOrtFyIVABv/p7k=\ngithub.com/bkaradzic/go-lz4 v1.0.0 h1:RXc4wYsyz985CkXXeX04y4VnZFGG8Rd43pRaHsOXAKk=\ngithub.com/bkaradzic/go-lz4 v1.0.0/go.mod h1:0YdlkowM3VswSROI7qDxhRvJ3sLhlFrRRwjwegp5jy4=\ngithub.com/bmizerany/assert v0.0.0-20160611221934-b7ed37b82869 h1:DDGfHa7BWjL4YnC6+E63dPcxHo2sUxDIu8g3QgEJdRY=\ngithub.com/bmizerany/assert v0.0.0-20160611221934-b7ed37b82869/go.mod h1:Ekp36dRnpXw/yCqJaO+ZrUyxD+3VXMFFr56k5XYrpB4=\ngithub.com/cenkalti/backoff/v4 v4.1.2 h1:6Yo7N8UP2K6LWZnW94DLVSSrbobcWdVzAYOisuDPIFo=\ngithub.com/cenkalti/backoff/v4 v4.1.2/go.mod h1:scbssz8iZGpm3xbr14ovlUdkxfGXNInqkPWOWmG2CLw=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/census-instrumentation/opencensus-proto v0.4.1 h1:iKLQ0xPNFxR/2hzXZMrBo8f1j86j5WHzznCCQxV/b8g=\ngithub.com/census-instrumentation/opencensus-proto v0.4.1/go.mod h1:4T9NM4+4Vw91VeyqjLS6ao50K5bOcLKN6Q42XnYaRYw=\ngithub.com/cespare/xxhash/v2 v2.2.0 h1:DC2CZ1Ep5Y4k3ZQ899DldepgrayRUGE6BBZ/cd9Cj44=\ngithub.com/cespare/xxhash/v2 v2.2.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cloudflare/golz4 v0.0.0-20150217214814-ef862a3cdc58 h1:F1EaeKL/ta07PY/k9Os/UFtwERei2/XzGemhpGnBKNg=\ngithub.com/cloudflare/golz4 v0.0.0-20150217214814-ef862a3cdc58/go.mod h1:EOBUe0h4xcZ5GoxqC5SDxFQ8gwyZPKQoEzownBlhI80=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cncf/xds/go v0.0.0-20240318125728-8a4994d93e50 h1:DBmgJDC9dTfkVyGgipamEh2BpGYxScCH1TOF1LL1cXc=\ngithub.com/cncf/xds/go v0.0.0-20240318125728-8a4994d93e50/go.mod h1:5e1+Vvlzido69INQaVO6d87Qn543Xr6nooe9Kz7oBFM=\ngithub.com/cockroachdb/apd v1.1.0 h1:3LFP3629v+1aKXU5Q37mxmRxX/pIu1nijXydLShEq5I=\ngithub.com/cockroachdb/apd v1.1.0/go.mod h1:8Sl8LxpKi29FqWXR16WEFZRNSz3SoPzUzeMeY4+DwBQ=\ngithub.com/cockroachdb/cockroach-go/v2 v2.1.1 h1:3XzfSMuUT0wBe1a3o5C0eOTcArhmmFAg2Jzh/7hhKqo=\ngithub.com/cockroachdb/cockroach-go/v2 v2.1.1/go.mod h1:7NtUnP6eK+l6k483WSYNrq3Kb23bWV10IRV1TyeSpwM=\ngithub.com/containerd/log v0.1.0 h1:TCJt7ioM2cr/tfR8GPbGf9/VRAX8D2B4PjzCpfX540I=\ngithub.com/containerd/log v0.1.0/go.mod h1:VRRf09a7mHDIRezVKTRCrOq78v577GXq3bSa3EhrzVo=\ngithub.com/coreos/go-systemd v0.0.0-20190321100706-95778dfbb74e/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=\ngithub.com/coreos/go-systemd v0.0.0-20190719114852-fd7a80b32e1f/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=\ngithub.com/creack/pty v1.1.7/go.mod h1:lj5s0c3V2DBrqTV7llrYr5NG6My20zk30Fl46Y7DoTY=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/creack/pty v1.1.18 h1:n56/Zwd5o6whRC5PMGretI4IdRLlmBXYNjScPaBgsbY=\ngithub.com/creack/pty v1.1.18/go.mod h1:MOBLtS5ELjhRRrroQr9kyvTxUAFNvYEK993ew/Vr4O4=\ngithub.com/cznic/mathutil v0.0.0-20180504122225-ca4c9f2c1369 h1:XNT/Zf5l++1Pyg08/HV04ppB0gKxAqtZQBRYiYrUuYk=\ngithub.com/cznic/mathutil v0.0.0-20180504122225-ca4c9f2c1369/go.mod h1:e6NPNENfs9mPDVNRekM7lKScauxd5kXTr1Mfyig6TDM=\ngithub.com/danieljoos/wincred v1.1.2 h1:QLdCxFs1/Yl4zduvBdcHB8goaYk9RARS2SgLLRuAyr0=\ngithub.com/danieljoos/wincred v1.1.2/go.mod h1:GijpziifJoIBfYh+S7BbkdUTU4LfM+QnGqR5Vl2tAx0=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dhui/dktest v0.4.3 h1:wquqUxAFdcUgabAVLvSCOKOlag5cIZuaOjYIBOWdsR0=\ngithub.com/dhui/dktest v0.4.3/go.mod h1:zNK8IwktWzQRm6I/l2Wjp7MakiyaFWv4G1hjmodmMTs=\ngithub.com/distribution/reference v0.6.0 h1:0IXCQ5g4/QMHHkarYzh5l+u8T3t73zM5QvfrDyIgxBk=\ngithub.com/distribution/reference v0.6.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=\ngithub.com/dnaeon/go-vcr v1.1.0/go.mod h1:M7tiix8f0r6mKKJ3Yq/kqU1OYf3MnfmBWVbPx/yU9ko=\ngithub.com/dnaeon/go-vcr v1.2.0 h1:zHCHvJYTMh1N7xnV7zf1m1GPBF9Ad0Jk/whtQ1663qI=\ngithub.com/dnaeon/go-vcr v1.2.0/go.mod h1:R4UdLID7HZT3taECzJs4YgbbH6PIGXB6W/sc5OLb6RQ=\ngithub.com/docker/docker v27.2.0+incompatible h1:Rk9nIVdfH3+Vz4cyI/uhbINhEZ/oLmc+CBXmH6fbNk4=\ngithub.com/docker/docker v27.2.0+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\ngithub.com/docker/go-connections v0.5.0 h1:USnMq7hx7gwdVZq1L49hLXaFtUdTADjXGp+uj1Br63c=\ngithub.com/docker/go-connections v0.5.0/go.mod h1:ov60Kzw0kKElRwhNs9UlUHAE/F9Fe6GLaXnqyDdmEXc=\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/dustin/go-humanize v1.0.0 h1:VSnTsYCnlFHaM2/igO1h6X3HA71jcobQuxemgkq4zYo=\ngithub.com/dustin/go-humanize v1.0.0/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=\ngithub.com/dvsekhvalnov/jose2go v1.6.0 h1:Y9gnSnP4qEI0+/uQkHvFXeD2PLPJeXEL+ySMEA2EjTY=\ngithub.com/dvsekhvalnov/jose2go v1.6.0/go.mod h1:QsHjhyTlD/lAVqn/NSbVZmSCGeDehTB/mPZadG+mhXU=\ngithub.com/edsrzf/mmap-go v0.0.0-20170320065105-0bce6a688712 h1:aaQcKT9WumO6JEJcRyTqFVq4XUZiUcKR2/GI31TOcz8=\ngithub.com/edsrzf/mmap-go v0.0.0-20170320065105-0bce6a688712/go.mod h1:YO35OhQPt3KJa3ryjFM5Bs14WD66h8eGKpfaBNrHW5M=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/go-control-plane v0.12.0 h1:4X+VP1GHd1Mhj6IB5mMeGbLCleqxjletLK6K0rbxyZI=\ngithub.com/envoyproxy/go-control-plane v0.12.0/go.mod h1:ZBTaoJ23lqITozF0M6G4/IragXCQKCnYbmlmtHvwRG0=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/envoyproxy/protoc-gen-validate v1.0.4 h1:gVPz/FMfvh57HdSJQyvBtF00j8JU4zdyUgIUNhlgg0A=\ngithub.com/envoyproxy/protoc-gen-validate v1.0.4/go.mod h1:qys6tmnRsYrQqIhm2bvKZH4Blx/1gTIZ2UKVY1M+Yew=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/form3tech-oss/jwt-go v3.2.5+incompatible h1:/l4kBbb4/vGSsdtB5nUe8L7B9mImVMaBPw9L/0TBHU8=\ngithub.com/form3tech-oss/jwt-go v3.2.5+incompatible/go.mod h1:pbq4aXjuKjdthFRnoDwaVPLA+WlJuPGy+QneDUgJi2k=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/fsnotify/fsnotify v1.4.9 h1:hsms1Qyu0jgnwNXIxa+/V/PDsU6CfLf6CNO8H7IWoS4=\ngithub.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4IgpuI1SZQ=\ngithub.com/fsouza/fake-gcs-server v1.17.0 h1:OeH75kBZcZa3ZE+zz/mFdJ2btt9FgqfjI7gIh9+5fvk=\ngithub.com/fsouza/fake-gcs-server v1.17.0/go.mod h1:D1rTE4YCyHFNa99oyJJ5HyclvN/0uQR+pM/VdlL83bw=\ngithub.com/gabriel-vasile/mimetype v1.4.1 h1:TRWk7se+TOjCYgRth7+1/OYLNiRNIotknkFtf/dnN7Q=\ngithub.com/gabriel-vasile/mimetype v1.4.1/go.mod h1:05Vi0w3Y9c/lNvJOdmIwvrrAhX3rYhfQQCaf9VJcv7M=\ngithub.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-kit/log v0.1.0/go.mod h1:zbhenjAZHb184qTLMA9ZjW7ThYL0H2mk7Q6pNt4vbaY=\ngithub.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-sql-driver/mysql v1.4.0/go.mod h1:zAC/RDZ24gD3HViQzih4MyKcchzm+sOG5ZlKdlhCg5w=\ngithub.com/go-sql-driver/mysql v1.5.0 h1:ozyZYNQW3x3HtqT1jira07DN2PArx2v7/mN66gGcHOs=\ngithub.com/go-sql-driver/mysql v1.5.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=\ngithub.com/go-stack/stack v1.8.0 h1:5SgMzNM5HxrEjV0ww2lTmX6E2Izsfxas4+YHWRs3Lsk=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-task/slim-sprig v0.0.0-20210107165309-348f09dbbbc0/go.mod h1:fyg7847qk6SyHyPtNmDHnmrv/HOrqktSC+C9fM+CJOE=\ngithub.com/gobuffalo/here v0.6.0 h1:hYrd0a6gDmWxBM4TnrGw8mQg24iSVoIkHEk7FodQcBI=\ngithub.com/gobuffalo/here v0.6.0/go.mod h1:wAG085dHOYqUpf+Ap+WOdrPTp5IYcDAs/x7PLa8Y5fM=\ngithub.com/goccy/go-json v0.9.11 h1:/pAaQDLHEoCq/5FFmSKBswWmK6H0e8g4159Kc/X/nqk=\ngithub.com/goccy/go-json v0.9.11/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=\ngithub.com/gocql/gocql v0.0.0-20210515062232-b7ef815b4556 h1:N/MD/sr6o61X+iZBAT2qEUF023s4KbA8RWfKzl0L6MQ=\ngithub.com/gocql/gocql v0.0.0-20210515062232-b7ef815b4556/go.mod h1:DL0ekTmBSTdlNF25Orwt/JMzqIq3EJ4MVa/J/uK64OY=\ngithub.com/godbus/dbus v0.0.0-20190726142602-4481cbc300e2 h1:ZpnhV/YsD2/4cESfV5+Hoeu/iUR3ruzNvZ+yQfO03a0=\ngithub.com/godbus/dbus v0.0.0-20190726142602-4481cbc300e2/go.mod h1:bBOAhwG1umN6/6ZUMtDFBMQR8jRg9O75tm9K00oMsK4=\ngithub.com/gofrs/uuid v3.2.0+incompatible/go.mod h1:b2aQJv3Z4Fp6yNu3cdSllBxTCLRxnplIgP/c0N/04lM=\ngithub.com/gofrs/uuid v4.0.0+incompatible h1:1SD/1F5pU8p29ybwgQSwpQk+mwdRrXCYuPhW6m+TnJw=\ngithub.com/gofrs/uuid v4.0.0+incompatible/go.mod h1:b2aQJv3Z4Fp6yNu3cdSllBxTCLRxnplIgP/c0N/04lM=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang-jwt/jwt/v4 v4.0.0/go.mod h1:/xlHOz8bRuivTWchD4jCa+NbatV+wEUSzwAxVc6locg=\ngithub.com/golang-jwt/jwt/v4 v4.4.2 h1:rcc4lwaZgFMCZ5jxF9ABolDcIHdBytAFgqFPbSJQAYs=\ngithub.com/golang-jwt/jwt/v4 v4.4.2/go.mod h1:m21LjoU+eqJr34lmDMbreY2eSTRJ1cv77w39/MY0Ch0=\ngithub.com/golang-sql/civil v0.0.0-20190719163853-cb61b32ac6fe h1:lXe2qZdvpiX5WZkZR4hgp4KJVfY3nMkvmwbVkpv1rVY=\ngithub.com/golang-sql/civil v0.0.0-20190719163853-cb61b32ac6fe/go.mod h1:8vg3r2VgvsThLBIFL93Qb5yWzgyZWhEmBwUJWevAkK0=\ngithub.com/golang-sql/sqlexp v0.1.0 h1:ZCD6MBpcuOVfGVqsEmY5/4FtYiKz6tSyUv9LPEDei6A=\ngithub.com/golang-sql/sqlexp v0.1.0/go.mod h1:J4ad9Vo8ZCWQ2GMrC4UCQy1JpCbwU9m3EOqtpKwwwHI=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.2.0/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.3.1/go.mod h1:sBzyDLLjw3U8JLTeZvSv8jJB+tU5PVekmnlKIyFUx0Y=\ngithub.com/golang/mock v1.4.3/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.5.0/go.mod h1:CWnOUgYIOo4TcNZ0wHX3YZCqsaM1I1Jvs6v3mP3KVu8=\ngithub.com/golang/protobuf v1.0.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/golang/snappy v0.0.0-20170215233205-553a64147049/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/golang/snappy v0.0.1/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/golang/snappy v0.0.4 h1:yAGX7huGHXlcLOEtBnF4w7FQwA26wojNCwOYAEhLjQM=\ngithub.com/golang/snappy v0.0.4/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/flatbuffers v2.0.8+incompatible h1:ivUb1cGomAB101ZM1T0nOiWz9pSrTMoa9+EiY7igmkM=\ngithub.com/google/flatbuffers v2.0.8+incompatible/go.mod h1:1AeVuKshWv4vARoZatz6mlQ0JxURH0Kv5+zNeJKJCa8=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.6/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.8/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-github/v39 v39.2.0 h1:rNNM311XtPOz5rDdsJXAp2o8F67X9FnROXTvto3aSnQ=\ngithub.com/google/go-github/v39 v39.2.0/go.mod h1:C1s8C5aCC9L+JXIYpJM5GYytdX52vC1bLvHEF1IhBrE=\ngithub.com/google/go-querystring v1.0.0/go.mod h1:odCYkC5MyYFN7vkCjXpyrEuKhc/BUO6wN/zVPAxq5ck=\ngithub.com/google/go-querystring v1.1.0 h1:AnCroh3fv4ZBgVIf1Iwtovgjaw/GiKJo8M8yD/fhyJ8=\ngithub.com/google/go-querystring v1.1.0/go.mod h1:Kcdr2DB4koayq7X8pmAG4sNG59So17icRSOU623lUBU=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/martian v2.1.0+incompatible h1:/CP5g8u/VJHijgedC/Legn3BAbAaWPgecwXBIDzw5no=\ngithub.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=\ngithub.com/google/martian/v3 v3.3.2 h1:IqNFLAmvJOgVlpdEBiQbDc2EwKW77amAycfTuWKdfvw=\ngithub.com/google/martian/v3 v3.3.2/go.mod h1:oBOf6HBosgwRXnUGWUB05QECsc6uvmMiJ3+6W4l/CUk=\ngithub.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20190515194954-54271f7e092f/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\ngithub.com/google/s2a-go v0.1.7 h1:60BLSyTrOV4/haCDW4zb1guZItoSq8foHCXrAnjBo/o=\ngithub.com/google/s2a-go v0.1.7/go.mod h1:50CgR4k1jNlWBu4UfS4AcfhVe1r6pdZPygJ3R8F0Qdw=\ngithub.com/google/uuid v1.1.1/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.2 h1:Vie5ybvEvT75RniqhfFxPRy3Bf7vr3h0cechB90XaQs=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.2/go.mod h1:VLSiSSBs/ksPL8kq3OBOQ6WRI2QnaFynd1DCjZ62+V0=\ngithub.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=\ngithub.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=\ngithub.com/googleapis/gax-go/v2 v2.12.2 h1:mhN09QQW1jEWeMF74zGR81R30z4VJzjZsfkUhuHF+DA=\ngithub.com/googleapis/gax-go/v2 v2.12.2/go.mod h1:61M8vcyyXR2kqKFxKrfA22jaA8JGF7Dc8App1U3H6jc=\ngithub.com/gorilla/handlers v1.4.2 h1:0QniY0USkHQ1RGCLfKxeNHK9bkDHGRYGNDFBCS+YARg=\ngithub.com/gorilla/handlers v1.4.2/go.mod h1:Qkdc/uu4tH4g6mTK6auzZ766c4CA0Ng8+o/OAirnOIQ=\ngithub.com/gorilla/mux v1.7.3/go.mod h1:1lud6UwP+6orDFRuTfBEV8e9/aOM/c4fVVCaMa2zaAs=\ngithub.com/gorilla/mux v1.7.4 h1:VuZ8uybHlWmqV03+zRzdwKL4tUnIp1MAQtp1mIFE1bc=\ngithub.com/gorilla/mux v1.7.4/go.mod h1:DVbg23sWSpFRCP0SfiEN6jmj59UnW/n46BH5rLB71So=\ngithub.com/gorilla/securecookie v1.1.1/go.mod h1:ra0sb63/xPlUeL+yeDciTfxMRAA+MP+HVt/4epWDjd4=\ngithub.com/gorilla/sessions v1.2.1/go.mod h1:dk2InVEVJ0sfLlnXv9EAgkf6ecYs/i80K/zI+bUmuGM=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 h1:bkypFPDjIYGfCYD5mRBvpqxfYX1YCS1PXdKYWi8FsN0=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0/go.mod h1:P+Lt/0by1T8bfcF3z737NnSbmxQAppXMRziHUxPOC8k=\ngithub.com/gsterjov/go-libsecret v0.0.0-20161001094733-a6f4afe4910c h1:6rhixN/i8ZofjG1Y75iExal34USq5p+wiN1tpie8IrU=\ngithub.com/gsterjov/go-libsecret v0.0.0-20161001094733-a6f4afe4910c/go.mod h1:NMPJylDgVpX0MLRlPy15sqSwOFv/U1GZ2m21JhFfek0=\ngithub.com/hailocab/go-hostpool v0.0.0-20160125115350-e80d13ce29ed h1:5upAirOpQc1Q53c0bnx2ufif5kANL7bfZWcc6VJWJd8=\ngithub.com/hailocab/go-hostpool v0.0.0-20160125115350-e80d13ce29ed/go.mod h1:tMWxXQ9wFIaZeTI9F+hmhFiGpFmhOHzyShyFUhRm0H4=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=\ngithub.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\ngithub.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\ngithub.com/hashicorp/go-uuid v1.0.2/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\ngithub.com/jackc/chunkreader v1.0.0/go.mod h1:RT6O25fNZIuasFJRyZ4R/Y2BbhasbmZXF9QQ7T3kePo=\ngithub.com/jackc/chunkreader/v2 v2.0.0/go.mod h1:odVSm741yZoC3dpHEUXIqA9tQRhFrgOHwnPIn9lDKlk=\ngithub.com/jackc/chunkreader/v2 v2.0.1 h1:i+RDz65UE+mmpjTfyz0MoVTnzeYxroil2G82ki7MGG8=\ngithub.com/jackc/chunkreader/v2 v2.0.1/go.mod h1:odVSm741yZoC3dpHEUXIqA9tQRhFrgOHwnPIn9lDKlk=\ngithub.com/jackc/pgconn v0.0.0-20190420214824-7e0022ef6ba3/go.mod h1:jkELnwuX+w9qN5YIfX0fl88Ehu4XC3keFuOJJk9pcnA=\ngithub.com/jackc/pgconn v0.0.0-20190824142844-760dd75542eb/go.mod h1:lLjNuW/+OfW9/pnVKPazfWOgNfH2aPem8YQ7ilXGvJE=\ngithub.com/jackc/pgconn v0.0.0-20190831204454-2fabfa3c18b7/go.mod h1:ZJKsE/KZfsUgOEh9hBm+xYTstcNHg7UPMVJqRfQxq4s=\ngithub.com/jackc/pgconn v1.4.0/go.mod h1:Y2O3ZDF0q4mMacyWV3AstPJpeHXWGEetiFttmq5lahk=\ngithub.com/jackc/pgconn v1.5.0/go.mod h1:QeD3lBfpTFe8WUnPZWN5KY/mB8FGMIYRdd8P8Jr0fAI=\ngithub.com/jackc/pgconn v1.5.1-0.20200601181101-fa742c524853/go.mod h1:QeD3lBfpTFe8WUnPZWN5KY/mB8FGMIYRdd8P8Jr0fAI=\ngithub.com/jackc/pgconn v1.8.0/go.mod h1:1C2Pb36bGIP9QHGBYCjnyhqu7Rv3sGshaQUvmfGIB/o=\ngithub.com/jackc/pgconn v1.9.0/go.mod h1:YctiPyvzfU11JFxoXokUOOKQXQmDMoJL9vJzHH8/2JY=\ngithub.com/jackc/pgconn v1.9.1-0.20210724152538-d89c8390a530/go.mod h1:4z2w8XhRbP1hYxkpTuBjTS3ne3J48K83+u0zoyvg2pI=\ngithub.com/jackc/pgconn v1.14.3 h1:bVoTr12EGANZz66nZPkMInAV/KHD2TxH9npjXXgiB3w=\ngithub.com/jackc/pgconn v1.14.3/go.mod h1:RZbme4uasqzybK2RK5c65VsHxoyaml09lx3tXOcO/VM=\ngithub.com/jackc/pgerrcode v0.0.0-20220416144525-469b46aa5efa h1:s+4MhCQ6YrzisK6hFJUX53drDT4UsSW3DEhKn0ifuHw=\ngithub.com/jackc/pgerrcode v0.0.0-20220416144525-469b46aa5efa/go.mod h1:a/s9Lp5W7n/DD0VrVoyJ00FbP2ytTPDVOivvn2bMlds=\ngithub.com/jackc/pgio v1.0.0 h1:g12B9UwVnzGhueNavwioyEEpAmqMe1E/BN9ES+8ovkE=\ngithub.com/jackc/pgio v1.0.0/go.mod h1:oP+2QK2wFfUWgr+gxjoBH9KGBb31Eio69xUb0w5bYf8=\ngithub.com/jackc/pgmock v0.0.0-20190831213851-13a1b77aafa2/go.mod h1:fGZlG77KXmcq05nJLRkk0+p82V8B8Dw8KN2/V9c/OAE=\ngithub.com/jackc/pgmock v0.0.0-20201204152224-4fe30f7445fd/go.mod h1:hrBW0Enj2AZTNpt/7Y5rr2xe/9Mn757Wtb2xeBzPv2c=\ngithub.com/jackc/pgmock v0.0.0-20210724152146-4ad1a8207f65 h1:DadwsjnMwFjfWc9y5Wi/+Zz7xoE5ALHsRQlOctkOiHc=\ngithub.com/jackc/pgmock v0.0.0-20210724152146-4ad1a8207f65/go.mod h1:5R2h2EEX+qri8jOWMbJCtaPWkrrNc7OHwsp2TCqp7ak=\ngithub.com/jackc/pgpassfile v1.0.0 h1:/6Hmqy13Ss2zCq62VdNG8tM1wchn8zjSGOBJ6icpsIM=\ngithub.com/jackc/pgpassfile v1.0.0/go.mod h1:CEx0iS5ambNFdcRtxPj5JhEz+xB6uRky5eyVu/W2HEg=\ngithub.com/jackc/pgproto3 v1.1.0/go.mod h1:eR5FA3leWg7p9aeAqi37XOTgTIbkABlvcPB3E5rlc78=\ngithub.com/jackc/pgproto3/v2 v2.0.0-alpha1.0.20190420180111-c116219b62db/go.mod h1:bhq50y+xrl9n5mRYyCBFKkpRVTLYJVWeCc+mEAI3yXA=\ngithub.com/jackc/pgproto3/v2 v2.0.0-alpha1.0.20190609003834-432c2951c711/go.mod h1:uH0AWtUmuShn0bcesswc4aBTWGvw0cAxIJp+6OB//Wg=\ngithub.com/jackc/pgproto3/v2 v2.0.0-rc3/go.mod h1:ryONWYqW6dqSg1Lw6vXNMXoBJhpzvWKnT95C46ckYeM=\ngithub.com/jackc/pgproto3/v2 v2.0.0-rc3.0.20190831210041-4c03ce451f29/go.mod h1:ryONWYqW6dqSg1Lw6vXNMXoBJhpzvWKnT95C46ckYeM=\ngithub.com/jackc/pgproto3/v2 v2.0.1/go.mod h1:WfJCnwN3HIg9Ish/j3sgWXnAfK8A9Y0bwXYU5xKaEdA=\ngithub.com/jackc/pgproto3/v2 v2.0.6/go.mod h1:WfJCnwN3HIg9Ish/j3sgWXnAfK8A9Y0bwXYU5xKaEdA=\ngithub.com/jackc/pgproto3/v2 v2.1.1/go.mod h1:WfJCnwN3HIg9Ish/j3sgWXnAfK8A9Y0bwXYU5xKaEdA=\ngithub.com/jackc/pgproto3/v2 v2.3.3 h1:1HLSx5H+tXR9pW3in3zaztoEwQYRC9SQaYUHjTSUOag=\ngithub.com/jackc/pgproto3/v2 v2.3.3/go.mod h1:WfJCnwN3HIg9Ish/j3sgWXnAfK8A9Y0bwXYU5xKaEdA=\ngithub.com/jackc/pgservicefile v0.0.0-20200307190119-3430c5407db8/go.mod h1:vsD4gTJCa9TptPL8sPkXrLZ+hDuNrZCnj29CQpr4X1E=\ngithub.com/jackc/pgservicefile v0.0.0-20200714003250-2b9c44734f2b/go.mod h1:vsD4gTJCa9TptPL8sPkXrLZ+hDuNrZCnj29CQpr4X1E=\ngithub.com/jackc/pgservicefile v0.0.0-20221227161230-091c0ba34f0a h1:bbPeKD0xmW/Y25WS6cokEszi5g+S0QxI/d45PkRi7Nk=\ngithub.com/jackc/pgservicefile v0.0.0-20221227161230-091c0ba34f0a/go.mod h1:5TJZWKEWniPve33vlWYSoGYefn3gLQRzjfDlhSJ9ZKM=\ngithub.com/jackc/pgtype v0.0.0-20190421001408-4ed0de4755e0/go.mod h1:hdSHsc1V01CGwFsrv11mJRHWJ6aifDLfdV3aVjFF0zg=\ngithub.com/jackc/pgtype v0.0.0-20190824184912-ab885b375b90/go.mod h1:KcahbBH1nCMSo2DXpzsoWOAfFkdEtEJpPbVLq8eE+mc=\ngithub.com/jackc/pgtype v0.0.0-20190828014616-a8802b16cc59/go.mod h1:MWlu30kVJrUS8lot6TQqcg7mtthZ9T0EoIBFiJcmcyw=\ngithub.com/jackc/pgtype v1.2.0/go.mod h1:5m2OfMh1wTK7x+Fk952IDmI4nw3nPrvtQdM0ZT4WpC0=\ngithub.com/jackc/pgtype v1.3.1-0.20200510190516-8cd94a14c75a/go.mod h1:vaogEUkALtxZMCH411K+tKzNpwzCKU+AnPzBKZ+I+Po=\ngithub.com/jackc/pgtype v1.3.1-0.20200606141011-f6355165a91c/go.mod h1:cvk9Bgu/VzJ9/lxTO5R5sf80p0DiucVtN7ZxvaC4GmQ=\ngithub.com/jackc/pgtype v1.6.2/go.mod h1:JCULISAZBFGrHaOXIIFiyfzW5VY0GRitRr8NeJsrdig=\ngithub.com/jackc/pgtype v1.8.1-0.20210724151600-32e20a603178/go.mod h1:C516IlIV9NKqfsMCXTdChteoXmwgUceqaLfjg2e3NlM=\ngithub.com/jackc/pgtype v1.14.0 h1:y+xUdabmyMkJLyApYuPj38mW+aAIqCe5uuBB51rH3Vw=\ngithub.com/jackc/pgtype v1.14.0/go.mod h1:LUMuVrfsFfdKGLw+AFFVv6KtHOFMwRgDDzBt76IqCA4=\ngithub.com/jackc/pgx/v4 v4.0.0-20190420224344-cc3461e65d96/go.mod h1:mdxmSJJuR08CZQyj1PVQBHy9XOp5p8/SHH6a0psbY9Y=\ngithub.com/jackc/pgx/v4 v4.0.0-20190421002000-1b8f0016e912/go.mod h1:no/Y67Jkk/9WuGR0JG/JseM9irFbnEPbuWV2EELPNuM=\ngithub.com/jackc/pgx/v4 v4.0.0-pre1.0.20190824185557-6972a5742186/go.mod h1:X+GQnOEnf1dqHGpw7JmHqHc1NxDoalibchSk9/RWuDc=\ngithub.com/jackc/pgx/v4 v4.5.0/go.mod h1:EpAKPLdnTorwmPUUsqrPxy5fphV18j9q3wrfRXgo+kA=\ngithub.com/jackc/pgx/v4 v4.6.1-0.20200510190926-94ba730bb1e9/go.mod h1:t3/cdRQl6fOLDxqtlyhe9UWgfIi9R8+8v8GKV5TRA/o=\ngithub.com/jackc/pgx/v4 v4.6.1-0.20200606145419-4e5062306904/go.mod h1:ZDaNWkt9sW1JMiNn0kdYBaLelIhw7Pg4qd+Vk6tw7Hg=\ngithub.com/jackc/pgx/v4 v4.10.1/go.mod h1:QlrWebbs3kqEZPHCTGyxecvzG6tvIsYu+A5b1raylkA=\ngithub.com/jackc/pgx/v4 v4.12.1-0.20210724153913-640aa07df17c/go.mod h1:1QD0+tgSXP7iUjYm9C1NxKhny7lq6ee99u/z+IHFcgs=\ngithub.com/jackc/pgx/v4 v4.18.2 h1:xVpYkNR5pk5bMCZGfClbO962UIqVABcAGt7ha1s/FeU=\ngithub.com/jackc/pgx/v4 v4.18.2/go.mod h1:Ey4Oru5tH5sB6tV7hDmfWFahwF15Eb7DNXlRKx2CkVw=\ngithub.com/jackc/pgx/v5 v5.5.4 h1:Xp2aQS8uXButQdnCMWNmvx6UysWQQC+u1EoizjguY+8=\ngithub.com/jackc/pgx/v5 v5.5.4/go.mod h1:ez9gk+OAat140fv9ErkZDYFWmXLfV+++K0uAOiwgm1A=\ngithub.com/jackc/puddle v0.0.0-20190413234325-e4ced69a3a2b/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=\ngithub.com/jackc/puddle v0.0.0-20190608224051-11cab39313c9/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=\ngithub.com/jackc/puddle v1.1.0/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=\ngithub.com/jackc/puddle v1.1.1/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=\ngithub.com/jackc/puddle v1.1.3/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=\ngithub.com/jackc/puddle/v2 v2.2.1 h1:RhxXJtFG022u4ibrCSMSiu5aOq1i77R3OHKNJj77OAk=\ngithub.com/jackc/puddle/v2 v2.2.1/go.mod h1:vriiEXHvEE654aYKXXjOvZM39qJ0q+azkZFrfEOc3H4=\ngithub.com/jcmturner/aescts/v2 v2.0.0/go.mod h1:AiaICIRyfYg35RUkr8yESTqvSy7csK90qZ5xfvvsoNs=\ngithub.com/jcmturner/dnsutils/v2 v2.0.0/go.mod h1:b0TnjGOvI/n42bZa+hmXL+kFJZsFT7G4t3HTlQ184QM=\ngithub.com/jcmturner/gofork v1.0.0/go.mod h1:MK8+TM0La+2rjBD4jE12Kj1pCCxK7d2LK/UM3ncEo0o=\ngithub.com/jcmturner/goidentity/v6 v6.0.1/go.mod h1:X1YW3bgtvwAXju7V3LCIMpY0Gbxyjn/mY9zx4tFonSg=\ngithub.com/jcmturner/gokrb5/v8 v8.4.2/go.mod h1:sb+Xq/fTY5yktf/VxLsE3wlfPqQjp0aWNYyvBVK62bc=\ngithub.com/jcmturner/rpc/v2 v2.0.3/go.mod h1:VUJYCIDm3PVOEHw8sgt091/20OJjskO/YJki3ELg/Hc=\ngithub.com/jinzhu/inflection v1.0.0/go.mod h1:h+uFLlag+Qp1Va5pdKtLDYj+kHp5pxUVkryuEj+Srlc=\ngithub.com/jinzhu/now v1.1.1/go.mod h1:d3SSVoowX0Lcu0IBviAWJpolVfI5UJVZZ7cO71lE/z8=\ngithub.com/jmespath/go-jmespath v0.4.0 h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=\ngithub.com/jmespath/go-jmespath v0.4.0/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1 h1:shLQSRRSCCPj3f2gpwzGwWFoC7ycTf1rcQZHOlsJ6N8=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1/go.mod h1:L3OGu8Wl2/fWfCI6z80xFu9LTZmf1ZRjMHUOPmWr69U=\ngithub.com/jmoiron/sqlx v1.2.0/go.mod h1:1FEQNm3xlJgrMD+FBdI9+xvCksHtbpVBBw5dYhBSsks=\ngithub.com/jmoiron/sqlx v1.3.1/go.mod h1:2BljVx/86SuTyjE+aPYlHCTNvZrnJXghYGpNiXLBMCQ=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=\ngithub.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=\ngithub.com/k0kubun/colorstring v0.0.0-20150214042306-9440f1994b88 h1:uC1QfSlInpQF+M0ao65imhwqKnz3Q2z/d8PWZRMQvDM=\ngithub.com/k0kubun/colorstring v0.0.0-20150214042306-9440f1994b88/go.mod h1:3w7q1U84EfirKl04SVQ/s7nPm1ZPhiXd34z40TNz36k=\ngithub.com/k0kubun/pp v2.3.0+incompatible h1:EKhKbi34VQDWJtq+zpsKSEhkHHs9w2P8Izbq8IhLVSo=\ngithub.com/k0kubun/pp v2.3.0+incompatible/go.mod h1:GWse8YhT0p8pT4ir3ZgBbfZild3tgzSScAn6HmfYukg=\ngithub.com/kardianos/osext v0.0.0-20190222173326-2bc1f35cddc0 h1:iQTw/8FWTuc7uiaSepXwyf3o52HaUYcV+Tu66S3F5GA=\ngithub.com/kardianos/osext v0.0.0-20190222173326-2bc1f35cddc0/go.mod h1:1NbS8ALrpOvjt0rHPNLyCIeMtbizbir8U//inJ+zuB8=\ngithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51 h1:Z9n2FFNUXsshfwJMBgNA0RU6/i7WVaAegv3PtuIHPMs=\ngithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51/go.mod h1:CzGEWj7cYgsdH8dAjBGEr58BoE7ScuLd+fwFZ44+/x8=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/asmfmt v1.3.2 h1:4Ri7ox3EwapiOjCki+hw14RyKk201CN4rzyCJRFLpK4=\ngithub.com/klauspost/asmfmt v1.3.2/go.mod h1:AG8TuvYojzulgDAMCnYn50l/5QV3Bs/tp6j0HLHbNSE=\ngithub.com/klauspost/compress v1.13.6/go.mod h1:/3/Vjq9QcHkK5uEr5lBEmyoZ1iFhe47etQ6QUkpK6sk=\ngithub.com/klauspost/compress v1.15.11 h1:Lcadnb3RKGin4FYM/orgq0qde+nc15E5Cbqg4B9Sx9c=\ngithub.com/klauspost/compress v1.15.11/go.mod h1:QPwzmACJjUTFsnSHH934V6woptycfrDDJnH7hvFVbGM=\ngithub.com/klauspost/cpuid/v2 v2.0.9 h1:lgaqFMSdTdQYdZ04uHyN2d/eKdOMyi2YLSvlQIBFYa4=\ngithub.com/klauspost/cpuid/v2 v2.0.9/go.mod h1:FInQzS24/EEf25PyTYn52gqo7WaD8xa0213Md/qVLRg=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.2/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/pty v1.1.8/go.mod h1:O1sed60cT9XZ5uDucP5qwvh+TE3NnUj51EiZO/lmSfw=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/ktrysmt/go-bitbucket v0.6.4 h1:C8dUGp0qkwncKtAnozHCbbqhptefzEd1I0sfnuy9rYQ=\ngithub.com/ktrysmt/go-bitbucket v0.6.4/go.mod h1:9u0v3hsd2rqCHRIpbir1oP7F58uo5dq19sBYvuMoyQ4=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/lib/pq v1.0.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/lib/pq v1.1.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/lib/pq v1.2.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/lib/pq v1.3.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/lib/pq v1.10.0/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/lib/pq v1.10.2/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/lib/pq v1.10.9 h1:YXG7RB+JIjhP29X+OtkiDnYaXQwpS4JEWq7dtCCRUEw=\ngithub.com/lib/pq v1.10.9/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/markbates/pkger v0.15.1 h1:3MPelV53RnGSW07izx5xGxl4e/sdRD6zqseIk0rMASY=\ngithub.com/markbates/pkger v0.15.1/go.mod h1:0JoVlrol20BSywW79rN3kdFFsE5xYM+rSCQDXbLhiuI=\ngithub.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=\ngithub.com/mattn/go-colorable v0.1.1/go.mod h1:FuOcm+DKB9mbwrcAfNl7/TZVBZ6rcnceauSikq3lYCQ=\ngithub.com/mattn/go-colorable v0.1.2/go.mod h1:U0ppj6V5qS13XJ6of8GYAs25YV2eR4EVcfRqFIhoBtE=\ngithub.com/mattn/go-colorable v0.1.6 h1:6Su7aK7lXmJ/U79bYtBjLNaha4Fs1Rg9plHpcH+vvnE=\ngithub.com/mattn/go-colorable v0.1.6/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\ngithub.com/mattn/go-isatty v0.0.3/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=\ngithub.com/mattn/go-isatty v0.0.5/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\ngithub.com/mattn/go-isatty v0.0.7/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\ngithub.com/mattn/go-isatty v0.0.8/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\ngithub.com/mattn/go-isatty v0.0.9/go.mod h1:YNRxwqDuOph6SZLI9vUUz6OYw3QyUt7WiY2yME+cCiQ=\ngithub.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\ngithub.com/mattn/go-isatty v0.0.16 h1:bq3VjFmv/sOjHtdEhmkEV4x1AJtvUvOJ2PFAZ5+peKQ=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-sqlite3 v1.9.0/go.mod h1:FPy6KqzDD04eiIsT53CuJW3U88zkxoIYsOqkbpncsNc=\ngithub.com/mattn/go-sqlite3 v1.14.6/go.mod h1:NyWgC/yNuGj7Q9rpYnZvas74GogHl5/Z4A/KQRfk6bU=\ngithub.com/mattn/go-sqlite3 v1.14.22 h1:2gZY6PC6kBnID23Tichd1K+Z0oS6nE/XwU+Vz/5o4kU=\ngithub.com/mattn/go-sqlite3 v1.14.22/go.mod h1:Uh1q+B4BYcTPb+yiD3kU8Ct7aC0hY9fxUwlHK0RXw+Y=\ngithub.com/microsoft/go-mssqldb v1.0.0 h1:k2p2uuG8T5T/7Hp7/e3vMGTnnR0sU4h8d1CcC71iLHU=\ngithub.com/microsoft/go-mssqldb v1.0.0/go.mod h1:+4wZTUnz/SV6nffv+RRRB/ss8jPng5Sho2SmM1l2ts4=\ngithub.com/minio/asm2plan9s v0.0.0-20200509001527-cdd76441f9d8 h1:AMFGa4R4MiIpspGNG7Z948v4n35fFGB3RR3G/ry4FWs=\ngithub.com/minio/asm2plan9s v0.0.0-20200509001527-cdd76441f9d8/go.mod h1:mC1jAcsrzbxHt8iiaC+zU4b1ylILSosueou12R++wfY=\ngithub.com/minio/c2goasm v0.0.0-20190812172519-36a3d3bbc4f3 h1:+n/aFZefKZp7spd8DFdX7uMikMLXX4oubIzJF4kv/wI=\ngithub.com/minio/c2goasm v0.0.0-20190812172519-36a3d3bbc4f3/go.mod h1:RagcQ7I8IeTMnF8JTXieKnO4Z6JCsikNEzj0DwauVzE=\ngithub.com/mitchellh/mapstructure v0.0.0-20180220230111-00c29f56e238/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/mapstructure v1.1.2 h1:fmNYVwqnSfB9mZU6OS2O6GsXM+wcskZDuKQzvN1EDeE=\ngithub.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/moby/docker-image-spec v1.3.1 h1:jMKff3w6PgbfSa69GfNg+zN/XLhfXJGnEx3Nl2EsFP0=\ngithub.com/moby/docker-image-spec v1.3.1/go.mod h1:eKmb5VW8vQEh/BAr2yvVNvuiJuY6UIocYsFu/DxxRpo=\ngithub.com/moby/term v0.5.0 h1:xt8Q1nalod/v7BqbG21f8mQPqH+xAaC9C3N3wfWbVP0=\ngithub.com/moby/term v0.5.0/go.mod h1:8FzsFHVUBGZdbDsJw/ot+X+d5HLUbvklYLJ9uGfcI3Y=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421 h1:ZqeYNhU3OHLH3mGKHDcjJRFFRrJa6eAM5H+CtDdOsPc=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/modocache/gover v0.0.0-20171022184752-b58185e213c5/go.mod h1:caMODM3PzxT8aQXRPkAt8xlV/e7d7w8GM5g0fa5F0D8=\ngithub.com/montanaflynn/stats v0.0.0-20171201202039-1bf9dbcd8cbe/go.mod h1:wL8QJuTMNUDYhXwkmfOly8iTdp5TEcJFWZD2D7SIkUc=\ngithub.com/montanaflynn/stats v0.6.6/go.mod h1:etXPPgVO6n31NxCd9KQUMvCM+ve0ruNzt6R8Bnaayow=\ngithub.com/morikuni/aec v1.0.0 h1:nP9CBfwrvYnBRgY6qfDQkygYDmYwOilePFkwzv4dU8A=\ngithub.com/morikuni/aec v1.0.0/go.mod h1:BbKIizmSmc5MMPqRYbxO4ZU0S0+P200+tUnFx7PXmsc=\ngithub.com/mtibben/percent v0.2.1 h1:5gssi8Nqo8QU/r2pynCm+hBQHpkB/uNK7BJCFogWdzs=\ngithub.com/mtibben/percent v0.2.1/go.mod h1:KG9uO+SZkUp+VkRHsCdYQV3XSZrrSpR3O9ibNBTZrns=\ngithub.com/mutecomm/go-sqlcipher/v4 v4.4.0 h1:sV1tWCWGAVlPhNGT95Q+z/txFxuhAYWwHD1afF5bMZg=\ngithub.com/mutecomm/go-sqlcipher/v4 v4.4.0/go.mod h1:PyN04SaWalavxRGH9E8ZftG6Ju7rsPrGmQRjrEaVpiY=\ngithub.com/nakagami/firebirdsql v0.0.0-20190310045651-3c02a58cfed8 h1:P48LjvUQpTReR3TQRbxSeSBsMXzfK0uol7eRcr7VBYQ=\ngithub.com/nakagami/firebirdsql v0.0.0-20190310045651-3c02a58cfed8/go.mod h1:86wM1zFnC6/uDBfZGNwB65O+pR2OFi5q/YQaEUid1qA=\ngithub.com/neo4j/neo4j-go-driver v1.8.1-0.20200803113522-b626aa943eba h1:fhFP5RliM2HW/8XdcO5QngSfFli9GcRIpMXvypTQt6E=\ngithub.com/neo4j/neo4j-go-driver v1.8.1-0.20200803113522-b626aa943eba/go.mod h1:ncO5VaFWh0Nrt+4KT4mOZboaczBZcLuHrG+/sUeP8gI=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=\ngithub.com/nxadm/tail v1.4.4/go.mod h1:kenIhsEOeOJmVchQTgglprH7qJGnHDVpk1VPCcaMI8A=\ngithub.com/nxadm/tail v1.4.8 h1:nPr65rt6Y5JFSKQO7qToXr7pePgD6Gwiw05lkbyAQTE=\ngithub.com/nxadm/tail v1.4.8/go.mod h1:+ncqLTQzXmGhMZNUePPaPqPvBxHAIsmXswZKocGu+AU=\ngithub.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.12.0/go.mod h1:oUhWkIvk5aDxtKvDDuw8gItl8pKl42LzjC9KZE0HfGg=\ngithub.com/onsi/ginkgo v1.12.1/go.mod h1:zj2OWP4+oCPe1qIXoGWkgMRwljMUYCdkwsT2108oapk=\ngithub.com/onsi/ginkgo v1.16.4 h1:29JGrr5oVBm5ulCWet69zQkzWipVXIol6ygQUe/EzNc=\ngithub.com/onsi/ginkgo v1.16.4/go.mod h1:dX+/inL/fNMqNlz0e9LfyB9TswhZpCVdJM/Z6Vvnwo0=\ngithub.com/onsi/gomega v1.7.1/go.mod h1:XdKZgCCFLUoM/7CFJVPcG8C1xQ1AJ0vpAezJrB7JYyY=\ngithub.com/onsi/gomega v1.9.0/go.mod h1:Ho0h+IUsWyvy1OpqCwxlQ/21gkhVunqlU8fDGcoTdcA=\ngithub.com/onsi/gomega v1.10.1/go.mod h1:iN09h71vgCQne3DLsj+A5owkum+a2tYe+TOCB1ybHNo=\ngithub.com/onsi/gomega v1.15.0 h1:WjP/FQ/sk43MRmnEcT+MlDw2TFvkrXlprrPST/IudjU=\ngithub.com/onsi/gomega v1.15.0/go.mod h1:cIuvLEne0aoVhAgh/O6ac0Op8WWw9H6eYCriF+tEHG0=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.1.0 h1:8SG7/vwALn54lVB/0yZ/MMwhFrPYtpEHQb2IpWsCzug=\ngithub.com/opencontainers/image-spec v1.1.0/go.mod h1:W4s4sFTMaBeK1BQLXbG4AdM2szdn85PY75RI83NrTrM=\ngithub.com/pierrec/lz4 v2.0.5+incompatible h1:2xWsjqPFWcplujydGg4WmhC/6fZqK42wMM8aXeqhl0I=\ngithub.com/pierrec/lz4 v2.0.5+incompatible/go.mod h1:pdkljMzZIN41W+lC3N2tnIh5sFi+IEE17M5jbnwPHcY=\ngithub.com/pierrec/lz4/v4 v4.1.16 h1:kQPfno+wyx6C5572ABwV+Uo3pDFzQ7yhyGchSyRda0c=\ngithub.com/pierrec/lz4/v4 v4.1.16/go.mod h1:gZWDp/Ze/IJXGXf23ltt2EXimqmTUXEy0GFuRQyBid4=\ngithub.com/pkg/browser v0.0.0-20210115035449-ce105d075bb4/go.mod h1:N6UoU20jOqggOuDwUaBQpluzLNDqif3kq9z2wpdYEfQ=\ngithub.com/pkg/browser v0.0.0-20210911075715-681adbf594b8 h1:KoWmjvw+nsYOo29YJK9vDA65RGE3NrOnUtO7a+RF9HU=\ngithub.com/pkg/browser v0.0.0-20210911075715-681adbf594b8/go.mod h1:HKlIX3XHQyzLZPlr7++PzdhaXEj94dEiJgZDTsxEqUI=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/remyoudompheng/bigfft v0.0.0-20190728182440-6a916e37a237/go.mod h1:qqbHyh8v60DhA7CoWK5oRCqLrMHRGoxYCSS9EjAz6Eo=\ngithub.com/remyoudompheng/bigfft v0.0.0-20200410134404-eec4a21b6bb0 h1:OdAsTTz6OkFY5QxjkYwrChwuRruF69c169dPK26NUlk=\ngithub.com/remyoudompheng/bigfft v0.0.0-20200410134404-eec4a21b6bb0/go.mod h1:qqbHyh8v60DhA7CoWK5oRCqLrMHRGoxYCSS9EjAz6Eo=\ngithub.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/rqlite/gorqlite v0.0.0-20230708021416-2acd02b70b79 h1:V7x0hCAgL8lNGezuex1RW1sh7VXXCqfw8nXZti66iFg=\ngithub.com/rqlite/gorqlite v0.0.0-20230708021416-2acd02b70b79/go.mod h1:xF/KoXmrRyahPfo5L7Szb5cAAUl53dMWBh9cMruGEZg=\ngithub.com/rs/xid v1.2.1/go.mod h1:+uKXf+4Djp6Md1KODXJxgGQPKngRmWyn10oCKFzNHOQ=\ngithub.com/rs/zerolog v1.13.0/go.mod h1:YbFCdg8HfsridGWAh22vktObvhZbQsZXe4/zB0OKkWU=\ngithub.com/rs/zerolog v1.15.0/go.mod h1:xYTKnLHcpfU2225ny5qZjxnj9NvkumZYjJHlAThCjNc=\ngithub.com/satori/go.uuid v1.2.0/go.mod h1:dA0hQrYB0VpLJoorglMZABFdXlWrHn1NEOzdhQKdks0=\ngithub.com/shopspring/decimal v0.0.0-20180709203117-cd690d0c9e24/go.mod h1:M+9NzErvs504Cn4c5DxATwIqPbtswREoFCre64PpcG4=\ngithub.com/shopspring/decimal v0.0.0-20200227202807-02e2044944cc/go.mod h1:DKyhrW/HYNuLGql+MJL6WCR6knT2jwCFRcu2hWCYk4o=\ngithub.com/shopspring/decimal v1.2.0 h1:abSATXmQEYyShuxI4/vyW3tV1MrKAJzCZ/0zLUXYbsQ=\ngithub.com/shopspring/decimal v1.2.0/go.mod h1:DKyhrW/HYNuLGql+MJL6WCR6knT2jwCFRcu2hWCYk4o=\ngithub.com/sirupsen/logrus v1.4.1/go.mod h1:ni0Sbl8bgC9z8RoU9G6nDWqqs/fq4eDPysMBDgk/93Q=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/snowflakedb/gosnowflake v1.6.19 h1:KSHXrQ5o7uso25hNIzi/RObXtnSGkFgie91X82KcvMY=\ngithub.com/snowflakedb/gosnowflake v1.6.19/go.mod h1:FM1+PWUdwB9udFDsXdfD58NONC0m+MlOSmQRvimobSM=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.2.0/go.mod h1:qt09Ya8vawLte6SNmTgCsAVtYtaKzEcn8ATUoHMkEqE=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2 h1:xuMeJ0Sdp5ZMRXx/aWO6RZxdr3beISkG5/G/aIRr3pY=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/tidwall/pretty v1.0.0 h1:HsD+QiTn7sK6flMKIvNmpqz1qrpP3Ps6jOKIKMooyg4=\ngithub.com/tidwall/pretty v1.0.0/go.mod h1:XNkn88O1ChpSDQmQeStsy+sBenx6DDtFZJxhVysOjyk=\ngithub.com/xanzy/go-gitlab v0.15.0 h1:rWtwKTgEnXyNUGrOArN7yyc3THRkpYcKXIXia9abywQ=\ngithub.com/xanzy/go-gitlab v0.15.0/go.mod h1:8zdQa/ri1dfn8eS3Ir1SyfvOKlw7WBJ8DVThkpGiXrs=\ngithub.com/xdg-go/pbkdf2 v1.0.0 h1:Su7DPu48wXMwC3bs7MCNG+z4FhcyEuz5dlvchbq0B0c=\ngithub.com/xdg-go/pbkdf2 v1.0.0/go.mod h1:jrpuAogTd400dnrH08LKmI/xc1MbPOebTwRqcT5RDeI=\ngithub.com/xdg-go/scram v1.0.2/go.mod h1:1WAq6h33pAW+iRreB34OORO2Nf7qel3VV3fjBj+hCSs=\ngithub.com/xdg-go/scram v1.1.1 h1:VOMT+81stJgXW3CpHyqHN3AXDYIMsx56mEFrB37Mb/E=\ngithub.com/xdg-go/scram v1.1.1/go.mod h1:RaEWvsqvNKKvBPvcKeFjrG2cJqOkHTiyTpzz23ni57g=\ngithub.com/xdg-go/stringprep v1.0.2/go.mod h1:8F9zXuvzgwmyT5DUm4GUfZGDdT3W+LCvS6+da4O5kxM=\ngithub.com/xdg-go/stringprep v1.0.3 h1:kdwGpVNwPFtjs98xCGkHjQtGKh86rDcRZN17QEMCOIs=\ngithub.com/xdg-go/stringprep v1.0.3/go.mod h1:W3f5j4i+9rC0kuIEJL0ky1VpHXQU3ocBgklLGvcBnW8=\ngithub.com/youmark/pkcs8 v0.0.0-20181117223130-1be2e3e5546d h1:splanxYIlg+5LfHAM6xpdFEAYOk8iySO56hMFq6uLyA=\ngithub.com/youmark/pkcs8 v0.0.0-20181117223130-1be2e3e5546d/go.mod h1:rHwXgn7JulP+udvsHwJoVG1YGAP6VLg4y9I5dyZdqmA=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngithub.com/zeebo/assert v1.3.0 h1:g7C04CbJuIDKNPFHmsk4hwZDO5O+kntRxzaUoNXj+IQ=\ngithub.com/zeebo/assert v1.3.0/go.mod h1:Pq9JiuJQpG8JLJdtkwrJESF0Foym2/D9XMU5ciN/wJ0=\ngithub.com/zeebo/xxh3 v1.0.2 h1:xZmwmqxHZA8AI603jOQ0tMqmBr9lPeFwGg6d+xy9DC0=\ngithub.com/zeebo/xxh3 v1.0.2/go.mod h1:5NWz9Sef7zIDm2JHfFlcQvNekmcEl9ekUZQQKCYaDcA=\ngithub.com/zenazn/goji v0.9.0/go.mod h1:7S9M489iMyHBNxwZnk9/EHS098H4/F6TATF2mIxtB1Q=\ngitlab.com/nyarla/go-crypt v0.0.0-20160106005555-d9a5dc2b789b h1:7gd+rd8P3bqcn/96gOZa3F5dpJr/vEiDQYlNb/y2uNs=\ngitlab.com/nyarla/go-crypt v0.0.0-20160106005555-d9a5dc2b789b/go.mod h1:T3BPAOm2cqquPa0MKWeNkmOM5RQsRhkrwMWonFMN7fE=\ngo.mongodb.org/mongo-driver v1.7.5 h1:ny3p0reEpgsR2cfA5cjgwFZg3Cv/ofFh/8jbhGtz9VI=\ngo.mongodb.org/mongo-driver v1.7.5/go.mod h1:VXEWRZ6URJIkUq2SCAyapmhH0ZLRBP+FT4xhp5Zvxng=\ngo.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=\ngo.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=\ngo.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.49.0 h1:4Pp6oUg3+e/6M4C0A/3kJ2VYa++dsWVTtGgLVj5xtHg=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.49.0/go.mod h1:Mjt1i1INqiaoZOMGR1RIUJN+i3ChKoFRqzrRQhlkbs0=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0 h1:TT4fX+nBOA/+LUkobKGW1ydGcn+G3vRw9+g5HwCphpk=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0/go.mod h1:L7UH0GbB0p47T4Rri3uHjbpCFYrVrwc1I25QhNPiGK8=\ngo.opentelemetry.io/otel v1.29.0 h1:PdomN/Al4q/lN6iBJEN3AwPvUiHPMlt93c8bqTG5Llw=\ngo.opentelemetry.io/otel v1.29.0/go.mod h1:N/WtXPs1CNCUEx+Agz5uouwCba+i+bJGFicT8SR4NP8=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.29.0 h1:dIIDULZJpgdiHz5tXrTgKIMLkus6jEFa7x5SOKcyR7E=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.29.0/go.mod h1:jlRVBe7+Z1wyxFSUs48L6OBQZ5JwH2Hg/Vbl+t9rAgI=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.27.0 h1:QY7/0NeRPKlzusf40ZE4t1VlMKbqSNT7cJRYzWuja0s=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.27.0/go.mod h1:HVkSiDhTM9BoUJU8qE6j2eSWLLXvi1USXjyd2BXT8PY=\ngo.opentelemetry.io/otel/metric v1.29.0 h1:vPf/HFWTNkPu1aYeIsc98l4ktOQaL6LeSoeV2g+8YLc=\ngo.opentelemetry.io/otel/metric v1.29.0/go.mod h1:auu/QWieFVWx+DmQOUMgj0F8LHWdgalxXqvp7BII/W8=\ngo.opentelemetry.io/otel/sdk v1.29.0 h1:vkqKjk7gwhS8VaWb0POZKmIEDimRCMsopNYnriHyryo=\ngo.opentelemetry.io/otel/sdk v1.29.0/go.mod h1:pM8Dx5WKnvxLCb+8lG1PRNIDxu9g9b9g59Qr7hfAAok=\ngo.opentelemetry.io/otel/trace v1.29.0 h1:J/8ZNK4XgR7a21DZUAsbF8pZ5Jcw1VhACmnYt39JTi4=\ngo.opentelemetry.io/otel/trace v1.29.0/go.mod h1:eHl3w0sp3paPkYstJOmAimxhiFXPg+MMTlEh3nsQgWQ=\ngo.opentelemetry.io/proto/otlp v1.3.1 h1:TrMUixzpM0yuc/znrFTP9MMRh8trP93mkCiDVeXrui0=\ngo.opentelemetry.io/proto/otlp v1.3.1/go.mod h1:0X1WI4de4ZsLrrJNLAQbFeLCm3T7yBkR0XqQ7niQU+8=\ngo.uber.org/atomic v1.3.2/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=\ngo.uber.org/atomic v1.4.0/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=\ngo.uber.org/atomic v1.5.0/go.mod h1:sABNBOSYdrvTF6hTgEIbc7YasKWGhgEQZyfxyTvoXHQ=\ngo.uber.org/atomic v1.6.0/go.mod h1:sABNBOSYdrvTF6hTgEIbc7YasKWGhgEQZyfxyTvoXHQ=\ngo.uber.org/atomic v1.7.0 h1:ADUqmZGgLDDfbSL9ZmPxKTybcoEYHgpYfELNoN+7hsw=\ngo.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/multierr v1.1.0/go.mod h1:wR5kodmAFQ0UK8QlbwjlSNy0Z68gJhDJUG5sjR94q/0=\ngo.uber.org/multierr v1.3.0/go.mod h1:VgVr7evmIr6uPjLBxg28wmKNXyqE9akIJ5XnfpiKl+4=\ngo.uber.org/multierr v1.5.0/go.mod h1:FeouvMocqHpRaaGuG9EjoKcStLC43Zu/fmqdUMPcKYU=\ngo.uber.org/tools v0.0.0-20190618225709-2cfd321de3ee/go.mod h1:vJERXedbb3MVM5f9Ejo0C68/HhF8uaILCdgjnY+goOA=\ngo.uber.org/zap v1.9.1/go.mod h1:vwi/ZaCAaUcBkycHslxD9B2zi4UTXhF60s6SWpuDF0Q=\ngo.uber.org/zap v1.10.0/go.mod h1:vwi/ZaCAaUcBkycHslxD9B2zi4UTXhF60s6SWpuDF0Q=\ngo.uber.org/zap v1.13.0/go.mod h1:zwrFLgMcdUuIBviXEYEH1YKNaOBnKXsx2IPda5bBwHM=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190411191339-88737f569e3a/go.mod h1:WFFai1msRO1wXaEeE5yQxYXgSfI8pQAWXbQop6sCtWE=\ngolang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190820162420-60c769a6c586/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190911031432-227b76d455e7/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200302210943-78000ba7a073/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20200323165209-0ec3e9974c59/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20201002170205-7f63de1d35b0/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20201112155050-0c6587e931a9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20201203163018-be400aefbc4c/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=\ngolang.org/x/crypto v0.0.0-20210322153248-0c34fe9e7dc2/go.mod h1:T9bdIzuCu7OtxOm1hfPfRQxPLYneinmdGuTeoZ9dtd4=\ngolang.org/x/crypto v0.0.0-20210616213533-5ff15b29337e/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.0.0-20210817164053-32db794688a5/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.0.0-20220511200225-c6db032c6c88/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\ngolang.org/x/crypto v0.0.0-20220622213112-05595931fe9d/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\ngolang.org/x/crypto v0.27.0 h1:GXm2NjJrPaiv/h1tb2UH8QfgC/hOf/+z0p6PT8o1w7A=\ngolang.org/x/crypto v0.27.0/go.mod h1:1Xngt8kV6Dvbssa53Ziq6Eqn0HqbZi5Z6R0ZpwQzt70=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=\ngolang.org/x/exp v0.0.0-20190829153037-c13cbed26979/go.mod h1:86+5VVa7VpoJ4kLfm080zCjGlMRFzhUhsZKEZO7MGek=\ngolang.org/x/exp v0.0.0-20191030013958-a1ab85dbe136/go.mod h1:JXzH8nQsPlswgeRAPE3MuO9GYsAcnJvJ4vnMwN/5qkY=\ngolang.org/x/exp v0.0.0-20191129062945-2f5052295587/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20191227195350-da58074b4299/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20230315142452-642cacee5cc0 h1:pVgRXcIictcr+lBQIFeiwuwtDIs4eL21OuM9nyAADmo=\ngolang.org/x/exp v0.0.0-20230315142452-642cacee5cc0/go.mod h1:CxIveKay+FTh1D0yPZemJVgC/95VzuuOLq5Qi4xnoYc=\ngolang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\ngolang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190409202823-959b441ac422/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190909230951-414d861bb4ac/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20191125180803-fdd1cda4f05f/go.mod h1:5qLYkcX4OjUUV8bRuDixDT3tpyyb+LUpUlRWLxfhWrs=\ngolang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=\ngolang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=\ngolang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=\ngolang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.21.0 h1:vvrHzRwRfVKSiLrG+d4FMl/Qi4ukBCE6kZlTUkDYRT0=\ngolang.org/x/mod v0.21.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.0.0-20180218175443-cbe0f9307d01/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181108082009-03003ca0c849/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190225153610-fe579d43d832/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190501004415-9ce7a6920f09/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190503192946-f4e77d36d62c/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190724013045-ca1201d0de80/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190813141303-74dc4d7220e7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20191209160850-c0dbc17a3553/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200114155413-6afb5195e5aa/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200520004742-59133d7f0dd7/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20201010224723-4f7140c49acb/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210428140749-89ef3d95e781/go.mod h1:OJAsFXCWl8Ukc7SiCT/9KSuxbyM7479/AVlXFRxuMCk=\ngolang.org/x/net v0.0.0-20211112202133-69e39bad7dc2/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20220425223048-2871e0cb64e4/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\ngolang.org/x/net v0.0.0-20220624214902-1bab6f366d9e/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.29.0 h1:5ORfpBpCs4HzDYoodCDBbwHzdR5UrLBZ3sOnUJmFoHo=\ngolang.org/x/net v0.29.0/go.mod h1:gLkgy8jTGERgjzMic6DS9+SP0ajcu6Xu3Orq/SpETg0=\ngolang.org/x/oauth2 v0.0.0-20180227000427-d7d64896b5ff/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20181106182150-f42d05182288/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20191202225959-858c2ad4c8b6/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.18.0 h1:09qnuIAgzdx1XplqJvW6CQqMCtGZykZWcXzPMPUusvI=\ngolang.org/x/oauth2 v0.18.0/go.mod h1:Wf7knwG0MPoWIMMBgFlEaSUDaKskp0dCfrlJRJXbBi8=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.8.0 h1:3NFvSEYkUoMifnESzZl15y791HH1qU2xm6eCJU5ZPXQ=\ngolang.org/x/sync v0.8.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180224232135-f6cff0780e54/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190403152447-81d4e9dc473e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190502145724-3ef323f4f1fd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190507160741-ecd444e8653b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190606165138-5da285871e9c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190624142023-c5567b49c5d0/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190726091711-fc99dfbffb4e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190813064441-fde4db37ae7a/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190826190057-c7b8b68b1456/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190904154756-749cb33beabd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191005200804-aed5e4c7ecf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191120155948-bd437916bb0e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191228213918-04cbcbbfeed8/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210112080510-489259a85091/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210616045830-e2b7044e8c71/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210616094352-59db8d763f22/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210819135213-f52c844e1c1c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211007075335-d3039528d8ac/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220224120231-95c6836cb0e7/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.25.0 h1:r+8e+loiHxRqhXVl6ML1nO3l1+oFoWbnlu2Ehimmi34=\ngolang.org/x/sys v0.25.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201117132131-f5c789dd3221/go.mod h1:Nr5EML6q2oocZ2LXRh80K7BxOlk5/8JxuGnuhpl+muw=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.24.0 h1:Mh5cbb+Zk2hqqXNO7S1iTjEphVL+jb8ZWaqh/g+JWkM=\ngolang.org/x/term v0.24.0/go.mod h1:lOBK/LVxemqiMij05LGJ0tzNr8xlmwBRJ81PX6wVLH8=\ngolang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.5/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.3.8/go.mod h1:E6s5w1FMmriuDzIBO73fBruAKo1PCIq6d2Q6DHfQ8WQ=\ngolang.org/x/text v0.18.0 h1:XvMDiNzPAl0jr17s6W9lcaIhGUfUORdGCNsuLmPG224=\ngolang.org/x/text v0.18.0/go.mod h1:BuEKDfySbSR4drPmRPG/7iBdf8hvFMuRexcpahXilzY=\ngolang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.5.0 h1:o7cqy6amK/52YcAKIPlM3a+Fpj35zvRj2TP+e1xFSfk=\ngolang.org/x/time v0.5.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190425150028-36563e24a262/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190425163242-31fd60d6bfdc/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190506145303-2d16b83fe98c/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190531172133-b3315ee88b7d/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190606124116-d0a3d012864b/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190628153133-6cdbf07be9d0/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190816200558-6889da9d5479/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20190823170909-c4a336ef6a2f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20190911174233-4f2ddba30aff/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191029041327-9cc4af7d6b2c/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191029190741-b9c20aec41a5/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191113191852-77e3bb0ad9e7/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191115202509-3a792d9c32b2/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191125144606-a911d9008d1f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191216173652-a0e659d51361/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20191227053925-7b8e75db28f4/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200103221440-774c71fcf114/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20201124115921-2c860bdd6e78/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201224043029-2b0845dc783e/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.24.0 h1:J1shsA93PJUEVaUSaay7UXAyE8aimq3GW0pjlolpa24=\ngolang.org/x/tools v0.24.0/go.mod h1:YhNqVBIfWHdzvTLs0d8LCuMhkKUgSUKldakyV7W/WDQ=\ngolang.org/x/xerrors v0.0.0-20190410155217-1f06c39b4373/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20190513163551-3ee3066db522/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20231012003039-104605ab7028 h1:+cNy6SZtPcJQH3LJVLOSmiC7MMxXNOb3PU/VUEz+EhU=\ngolang.org/x/xerrors v0.0.0-20231012003039-104605ab7028/go.mod h1:NDW/Ps6MPRej6fsCIbMTohpP40sJ/P/vI1MoTEGwX90=\ngonum.org/v1/gonum v0.11.0 h1:f1IJhK4Km5tBJmaiJXtk/PkL4cdVX6J+tGiM187uT5E=\ngonum.org/v1/gonum v0.11.0/go.mod h1:fSG4YDCxxUZQJ7rKsQrj0gMOg00Il0Z96/qMA4bVQhA=\ngoogle.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=\ngoogle.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=\ngoogle.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.9.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.13.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.14.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.15.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.169.0 h1:QwWPy71FgMWqJN/l6jVlFHUa29a7dcUy02I8o799nPY=\ngoogle.golang.org/api v0.169.0/go.mod h1:gpNOiMA2tZ4mf5R9Iwf4rK/Dcz0fbdIgWYWVoxmsyLg=\ngoogle.golang.org/appengine v1.0.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.3.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.6.1/go.mod h1:i06prIuMbXzDqacNJfV5OdTW448YApPu5ww/cMBSeb0=\ngoogle.golang.org/appengine v1.6.5/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.7/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.8 h1:IhEN5q69dyKagZPYMSdIjS2HqprW324FRQZJcGqPAsM=\ngoogle.golang.org/appengine v1.6.8/go.mod h1:1jJ3jBArFh5pcgW8gCtRJnepW8FzD1V44FJffLiz/Ds=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190801165951-fa694d86fc64/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190911173649-1774047e7e51/go.mod h1:IbNlFCBrqXvoKpeg0TB2l7cyZUmoaFKYIwrEpbDKLA8=\ngoogle.golang.org/genproto v0.0.0-20191108220845-16a3f7862a1a/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191115194625-c23dd37a84c9/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191216164720-4f79533eabd1/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191230161307-f3c370f40bfb/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20240213162025-012b6fc9bca9 h1:9+tzLLstTlPTRyJTh+ah5wIMsBW5c4tQwGTN3thOW9Y=\ngoogle.golang.org/genproto v0.0.0-20240213162025-012b6fc9bca9/go.mod h1:mqHbVIp48Muh7Ywss/AD6I5kNVKZMmAa/QEW58Gxp2s=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240513163218-0867130af1f8 h1:W5Xj/70xIA4x60O/IFyXivR5MGqblAb8R3w26pnD6No=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240513163218-0867130af1f8/go.mod h1:vPrPUTsDCYxXWjP7clS81mZ6/803D8K4iM9Ma27VKas=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240513163218-0867130af1f8 h1:mxSlqyb8ZAHsYDCfiXN1EDdNTdvjUJSLY+OnAUtYNYA=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240513163218-0867130af1f8/go.mod h1:I7Y+G38R2bu5j1aLzfFmQfTcU/WnFuqDwLZAbvKTKpM=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=\ngoogle.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.64.1 h1:LKtvyfbX3UGVPFcGqJ9ItpVWW6oN/2XqTxfAnwRRXiA=\ngoogle.golang.org/grpc v1.64.1/go.mod h1:hiQF4LFZelK2WKaP6W0L92zGHtiQdZxk8CrSdvyjeP0=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.34.2 h1:6xV6lTsCfpGD21XK49h7MhtcApnLqkfYgPcdHftf6hg=\ngoogle.golang.org/protobuf v1.34.2/go.mod h1:qYOHts0dSfpeUzUFpOMr/WGzszTmLH+DiWniOlNbLDw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20200902074654-038fdea0a05b/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=\ngopkg.in/inconshreveable/log15.v2 v2.0.0-20180818164646-67afb5ed74ec/go.mod h1:aPpfJ7XW+gOuirDoZ8gHhLh3kZ1B08FtV2bbmy7Jv3s=\ngopkg.in/inf.v0 v0.9.1 h1:73M5CoZyi3ZLMOyDlQh031Cx6N9NDJ2Vvfl76EDAgDc=\ngopkg.in/inf.v0 v0.9.1/go.mod h1:cWUDdTG/fYaXco+Dcufb5Vnc6Gp2YChqWtbxRZE0mXw=\ngopkg.in/natefinch/npipe.v2 v2.0.0-20160621034901-c1b8fa8bdcce h1:+JknDZhAj8YMt7GC73Ei8pv4MzjDUNPHgQWJdtMAaDU=\ngopkg.in/natefinch/npipe.v2 v2.0.0-20160621034901-c1b8fa8bdcce/go.mod h1:5AcXVHNjg+BDxry382+8OKon8SEWiKktQR07RKPsv1c=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.7/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngorm.io/driver/postgres v1.0.8/go.mod h1:4eOzrI1MUfm6ObJU/UcmbXyiHSs8jSwH95G5P5dxcAg=\ngorm.io/gorm v1.20.12/go.mod h1:0HFTzE/SqkGTzK6TlDPPQbAYCluiVvhzoA1+aVyzenw=\ngorm.io/gorm v1.21.4/go.mod h1:0HFTzE/SqkGTzK6TlDPPQbAYCluiVvhzoA1+aVyzenw=\ngotest.tools/v3 v3.1.0 h1:rVV8Tcg/8jHUkPUorwjaMTtemIMVXfIPKiOqnhEhakk=\ngotest.tools/v3 v3.1.0/go.mod h1:fHy7eyTmJFO5bQbUsEGQ1v4m2J3Jz9eWL54TP2/ZuYQ=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190418001031-e561f6794a2a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=\nlukechampine.com/uint128 v1.1.1/go.mod h1:c4eWIwlEGaxC/+H1VguhU4PHXNWDCDMUlWdIWl2j1gk=\nlukechampine.com/uint128 v1.2.0 h1:mBi/5l91vocEN8otkC5bDLhi2KdCticRiwbdB0O+rjI=\nlukechampine.com/uint128 v1.2.0/go.mod h1:c4eWIwlEGaxC/+H1VguhU4PHXNWDCDMUlWdIWl2j1gk=\nmodernc.org/b v1.0.0 h1:vpvqeyp17ddcQWF29Czawql4lDdABCDRbXRAS4+aF2o=\nmodernc.org/b v1.0.0/go.mod h1:uZWcZfRj1BpYzfN9JTerzlNUnnPsV9O2ZA8JsRcubNg=\nmodernc.org/cc/v3 v3.36.2/go.mod h1:NFUHyPn4ekoC/JHeZFfZurN6ixxawE1BnVonP/oahEI=\nmodernc.org/cc/v3 v3.36.3 h1:uISP3F66UlixxWEcKuIWERa4TwrZENHSL8tWxZz8bHg=\nmodernc.org/cc/v3 v3.36.3/go.mod h1:NFUHyPn4ekoC/JHeZFfZurN6ixxawE1BnVonP/oahEI=\nmodernc.org/ccgo/v3 v3.16.9 h1:AXquSwg7GuMk11pIdw7fmO1Y/ybgazVkMhsZWCV0mHM=\nmodernc.org/ccgo/v3 v3.16.9/go.mod h1:zNMzC9A9xeNUepy6KuZBbugn3c0Mc9TeiJO4lgvkJDo=\nmodernc.org/ccorpus v1.11.6 h1:J16RXiiqiCgua6+ZvQot4yUuUy8zxgqbqEEUuGPlISk=\nmodernc.org/ccorpus v1.11.6/go.mod h1:2gEUTrWqdpH2pXsmTM1ZkjeSrUWDpjMu2T6m29L/ErQ=\nmodernc.org/db v1.0.0 h1:2c6NdCfaLnshSvY7OU09cyAY0gYXUZj4lmg5ItHyucg=\nmodernc.org/db v1.0.0/go.mod h1:kYD/cO29L/29RM0hXYl4i3+Q5VojL31kTUVpVJDw0s8=\nmodernc.org/file v1.0.0 h1:9/PdvjVxd5+LcWUQIfapAWRGOkDLK90rloa8s/au06A=\nmodernc.org/file v1.0.0/go.mod h1:uqEokAEn1u6e+J45e54dsEA/pw4o7zLrA2GwyntZzjw=\nmodernc.org/fileutil v1.0.0 h1:Z1AFLZwl6BO8A5NldQg/xTSjGLetp+1Ubvl4alfGx8w=\nmodernc.org/fileutil v1.0.0/go.mod h1:JHsWpkrk/CnVV1H/eGlFf85BEpfkrp56ro8nojIq9Q8=\nmodernc.org/golex v1.0.0 h1:wWpDlbK8ejRfSyi0frMyhilD3JBvtcx2AdGDnU+JtsE=\nmodernc.org/golex v1.0.0/go.mod h1:b/QX9oBD/LhixY6NDh+IdGv17hgB+51fET1i2kPSmvk=\nmodernc.org/httpfs v1.0.6 h1:AAgIpFZRXuYnkjftxTAZwMIiwEqAfk8aVB2/oA6nAeM=\nmodernc.org/httpfs v1.0.6/go.mod h1:7dosgurJGp0sPaRanU53W4xZYKh14wfzX420oZADeHM=\nmodernc.org/internal v1.0.0 h1:XMDsFDcBDsibbBnHB2xzljZ+B1yrOVLEFkKL2u15Glw=\nmodernc.org/internal v1.0.0/go.mod h1:VUD/+JAkhCpvkUitlEOnhpVxCgsBI90oTzSCRcqQVSM=\nmodernc.org/libc v1.17.0/go.mod h1:XsgLldpP4aWlPlsjqKRdHPqCxCjISdHfM/yeWC5GyW0=\nmodernc.org/libc v1.17.1 h1:Q8/Cpi36V/QBfuQaFVeisEBs3WqoGAJprZzmf7TfEYI=\nmodernc.org/libc v1.17.1/go.mod h1:FZ23b+8LjxZs7XtFMbSzL/EhPxNbfZbErxEHc7cbD9s=\nmodernc.org/lldb v1.0.0 h1:6vjDJxQEfhlOLwl4bhpwIz00uyFK4EmSYcbwqwbynsc=\nmodernc.org/lldb v1.0.0/go.mod h1:jcRvJGWfCGodDZz8BPwiKMJxGJngQ/5DrRapkQnLob8=\nmodernc.org/mathutil v1.0.0/go.mod h1:wU0vUrJsVWBZ4P6e7xtFJEhFSNsfRLJ8H458uRjg03k=\nmodernc.org/mathutil v1.2.2/go.mod h1:mZW8CKdRPY1v87qxC/wUdX5O1qDzXMP5TH3wjfpga6E=\nmodernc.org/mathutil v1.4.1/go.mod h1:mZW8CKdRPY1v87qxC/wUdX5O1qDzXMP5TH3wjfpga6E=\nmodernc.org/mathutil v1.5.0 h1:rV0Ko/6SfM+8G+yKiyI830l3Wuz1zRutdslNoQ0kfiQ=\nmodernc.org/mathutil v1.5.0/go.mod h1:mZW8CKdRPY1v87qxC/wUdX5O1qDzXMP5TH3wjfpga6E=\nmodernc.org/memory v1.2.0/go.mod h1:/0wo5ibyrQiaoUoH7f9D8dnglAmILJ5/cxZlRECf+Nw=\nmodernc.org/memory v1.2.1 h1:dkRh86wgmq/bJu2cAS2oqBCz/KsMZU7TUM4CibQ7eBs=\nmodernc.org/memory v1.2.1/go.mod h1:PkUhL0Mugw21sHPeskwZW4D6VscE/GQJOnIpCnW6pSU=\nmodernc.org/opt v0.1.1/go.mod h1:WdSiB5evDcignE70guQKxYUl14mgWtbClRi5wmkkTX0=\nmodernc.org/opt v0.1.3 h1:3XOZf2yznlhC+ibLltsDGzABUGVx8J6pnFMS3E4dcq4=\nmodernc.org/opt v0.1.3/go.mod h1:WdSiB5evDcignE70guQKxYUl14mgWtbClRi5wmkkTX0=\nmodernc.org/ql v1.0.0 h1:bIQ/trWNVjQPlinI6jdOQsi195SIturGo3mp5hsDqVU=\nmodernc.org/ql v1.0.0/go.mod h1:xGVyrLIatPcO2C1JvI/Co8c0sr6y91HKFNy4pt9JXEY=\nmodernc.org/sortutil v1.1.0 h1:oP3U4uM+NT/qBQcbg/K2iqAX0Nx7B1b6YZtq3Gk/PjM=\nmodernc.org/sortutil v1.1.0/go.mod h1:ZyL98OQHJgH9IEfN71VsamvJgrtRX9Dj2gX+vH86L1k=\nmodernc.org/sqlite v1.18.1 h1:ko32eKt3jf7eqIkCgPAeHMBXw3riNSLhl2f3loEF7o8=\nmodernc.org/sqlite v1.18.1/go.mod h1:6ho+Gow7oX5V+OiOQ6Tr4xeqbx13UZ6t+Fw9IRUG4d4=\nmodernc.org/strutil v1.1.1/go.mod h1:DE+MQQ/hjKBZS2zNInV5hhcipt5rLPWkmpbGeW5mmdw=\nmodernc.org/strutil v1.1.3 h1:fNMm+oJklMGYfU9Ylcywl0CO5O6nTfaowNsh2wpPjzY=\nmodernc.org/strutil v1.1.3/go.mod h1:MEHNA7PdEnEwLvspRMtWTNnp2nnyvMfkimT1NKNAGbw=\nmodernc.org/tcl v1.13.1 h1:npxzTwFTZYM8ghWicVIX1cRWzj7Nd8i6AqqX2p+IYao=\nmodernc.org/tcl v1.13.1/go.mod h1:XOLfOwzhkljL4itZkK6T72ckMgvj0BDsnKNdZVUOecw=\nmodernc.org/token v1.0.0 h1:a0jaWiNMDhDUtqOj09wvjWWAqd3q7WpBulmL9H2egsk=\nmodernc.org/token v1.0.0/go.mod h1:UGzOrNV1mAFSEB63lOFHIpNRUVMvYTc6yu1SMY/XTDM=\nmodernc.org/z v1.5.1 h1:RTNHdsrOpeoSeOF4FbzTo8gBYByaJ5xT7NgZ9ZqRiJM=\nmodernc.org/z v1.5.1/go.mod h1:eWFB510QWW5Th9YGZT81s+LwvaAs3Q2yr4sP0rmLkv8=\nmodernc.org/zappy v1.0.0 h1:dPVaP+3ueIUv4guk8PuZ2wiUGcJ1WUVvIheeSSTD0yk=\nmodernc.org/zappy v1.0.0/go.mod h1:hHe+oGahLVII/aTTyWK/b53VDHMAGCBYYeZ9sn83HC4=\nrsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=\nrsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=\nrsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA=\n"
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "log.go",
          "type": "blob",
          "size": 0.275390625,
          "content": "package migrate\n\n// Logger is an interface so you can pass in your own\n// logging implementation.\ntype Logger interface {\n\n\t// Printf is like fmt.Printf\n\tPrintf(format string, v ...interface{})\n\n\t// Verbose should return true when verbose logging output is wanted\n\tVerbose() bool\n}\n"
        },
        {
          "name": "migrate.go",
          "type": "blob",
          "size": 22.302734375,
          "content": "// Package migrate reads migrations from sources and runs them against databases.\n// Sources are defined by the `source.Driver` and databases by the `database.Driver`\n// interface. The driver interfaces are kept \"dumb\", all migration logic is kept\n// in this package.\npackage migrate\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n\t\"os\"\n\t\"sync\"\n\t\"time\"\n\n\t\"github.com/hashicorp/go-multierror\"\n\n\t\"github.com/golang-migrate/migrate/v4/database\"\n\tiurl \"github.com/golang-migrate/migrate/v4/internal/url\"\n\t\"github.com/golang-migrate/migrate/v4/source\"\n)\n\n// DefaultPrefetchMigrations sets the number of migrations to pre-read\n// from the source. This is helpful if the source is remote, but has little\n// effect for a local source (i.e. file system).\n// Please note that this setting has a major impact on the memory usage,\n// since each pre-read migration is buffered in memory. See DefaultBufferSize.\nvar DefaultPrefetchMigrations = uint(10)\n\n// DefaultLockTimeout sets the max time a database driver has to acquire a lock.\nvar DefaultLockTimeout = 15 * time.Second\n\nvar (\n\tErrNoChange       = errors.New(\"no change\")\n\tErrNilVersion     = errors.New(\"no migration\")\n\tErrInvalidVersion = errors.New(\"version must be >= -1\")\n\tErrLocked         = errors.New(\"database locked\")\n\tErrLockTimeout    = errors.New(\"timeout: can't acquire database lock\")\n)\n\n// ErrShortLimit is an error returned when not enough migrations\n// can be returned by a source for a given limit.\ntype ErrShortLimit struct {\n\tShort uint\n}\n\n// Error implements the error interface.\nfunc (e ErrShortLimit) Error() string {\n\treturn fmt.Sprintf(\"limit %v short\", e.Short)\n}\n\ntype ErrDirty struct {\n\tVersion int\n}\n\nfunc (e ErrDirty) Error() string {\n\treturn fmt.Sprintf(\"Dirty database version %v. Fix and force version.\", e.Version)\n}\n\ntype Migrate struct {\n\tsourceName   string\n\tsourceDrv    source.Driver\n\tdatabaseName string\n\tdatabaseDrv  database.Driver\n\n\t// Log accepts a Logger interface\n\tLog Logger\n\n\t// GracefulStop accepts `true` and will stop executing migrations\n\t// as soon as possible at a safe break point, so that the database\n\t// is not corrupted.\n\tGracefulStop chan bool\n\tisLockedMu   *sync.Mutex\n\n\tisGracefulStop bool\n\tisLocked       bool\n\n\t// PrefetchMigrations defaults to DefaultPrefetchMigrations,\n\t// but can be set per Migrate instance.\n\tPrefetchMigrations uint\n\n\t// LockTimeout defaults to DefaultLockTimeout,\n\t// but can be set per Migrate instance.\n\tLockTimeout time.Duration\n}\n\n// New returns a new Migrate instance from a source URL and a database URL.\n// The URL scheme is defined by each driver.\nfunc New(sourceURL, databaseURL string) (*Migrate, error) {\n\tm := newCommon()\n\n\tsourceName, err := iurl.SchemeFromURL(sourceURL)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to parse scheme from source URL: %w\", err)\n\t}\n\tm.sourceName = sourceName\n\n\tdatabaseName, err := iurl.SchemeFromURL(databaseURL)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to parse scheme from database URL: %w\", err)\n\t}\n\tm.databaseName = databaseName\n\n\tsourceDrv, err := source.Open(sourceURL)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to open source, %q: %w\", sourceURL, err)\n\t}\n\tm.sourceDrv = sourceDrv\n\n\tdatabaseDrv, err := database.Open(databaseURL)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to open database: %w\", err)\n\t}\n\tm.databaseDrv = databaseDrv\n\n\treturn m, nil\n}\n\n// NewWithDatabaseInstance returns a new Migrate instance from a source URL\n// and an existing database instance. The source URL scheme is defined by each driver.\n// Use any string that can serve as an identifier during logging as databaseName.\n// You are responsible for closing the underlying database client if necessary.\nfunc NewWithDatabaseInstance(sourceURL string, databaseName string, databaseInstance database.Driver) (*Migrate, error) {\n\tm := newCommon()\n\n\tsourceName, err := iurl.SchemeFromURL(sourceURL)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tm.sourceName = sourceName\n\n\tm.databaseName = databaseName\n\n\tsourceDrv, err := source.Open(sourceURL)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to open source, %q: %w\", sourceURL, err)\n\t}\n\tm.sourceDrv = sourceDrv\n\n\tm.databaseDrv = databaseInstance\n\n\treturn m, nil\n}\n\n// NewWithSourceInstance returns a new Migrate instance from an existing source instance\n// and a database URL. The database URL scheme is defined by each driver.\n// Use any string that can serve as an identifier during logging as sourceName.\n// You are responsible for closing the underlying source client if necessary.\nfunc NewWithSourceInstance(sourceName string, sourceInstance source.Driver, databaseURL string) (*Migrate, error) {\n\tm := newCommon()\n\n\tdatabaseName, err := iurl.SchemeFromURL(databaseURL)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to parse scheme from database URL: %w\", err)\n\t}\n\tm.databaseName = databaseName\n\n\tm.sourceName = sourceName\n\n\tdatabaseDrv, err := database.Open(databaseURL)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to open database: %w\", err)\n\t}\n\tm.databaseDrv = databaseDrv\n\n\tm.sourceDrv = sourceInstance\n\n\treturn m, nil\n}\n\n// NewWithInstance returns a new Migrate instance from an existing source and\n// database instance. Use any string that can serve as an identifier during logging\n// as sourceName and databaseName. You are responsible for closing down\n// the underlying source and database client if necessary.\nfunc NewWithInstance(sourceName string, sourceInstance source.Driver, databaseName string, databaseInstance database.Driver) (*Migrate, error) {\n\tm := newCommon()\n\n\tm.sourceName = sourceName\n\tm.databaseName = databaseName\n\n\tm.sourceDrv = sourceInstance\n\tm.databaseDrv = databaseInstance\n\n\treturn m, nil\n}\n\nfunc newCommon() *Migrate {\n\treturn &Migrate{\n\t\tGracefulStop:       make(chan bool, 1),\n\t\tPrefetchMigrations: DefaultPrefetchMigrations,\n\t\tLockTimeout:        DefaultLockTimeout,\n\t\tisLockedMu:         &sync.Mutex{},\n\t}\n}\n\n// Close closes the source and the database.\nfunc (m *Migrate) Close() (source error, database error) {\n\tdatabaseSrvClose := make(chan error)\n\tsourceSrvClose := make(chan error)\n\n\tm.logVerbosePrintf(\"Closing source and database\\n\")\n\n\tgo func() {\n\t\tdatabaseSrvClose <- m.databaseDrv.Close()\n\t}()\n\n\tgo func() {\n\t\tsourceSrvClose <- m.sourceDrv.Close()\n\t}()\n\n\treturn <-sourceSrvClose, <-databaseSrvClose\n}\n\n// Migrate looks at the currently active migration version,\n// then migrates either up or down to the specified version.\nfunc (m *Migrate) Migrate(version uint) error {\n\tif err := m.lock(); err != nil {\n\t\treturn err\n\t}\n\n\tcurVersion, dirty, err := m.databaseDrv.Version()\n\tif err != nil {\n\t\treturn m.unlockErr(err)\n\t}\n\n\tif dirty {\n\t\treturn m.unlockErr(ErrDirty{curVersion})\n\t}\n\n\tret := make(chan interface{}, m.PrefetchMigrations)\n\tgo m.read(curVersion, int(version), ret)\n\n\treturn m.unlockErr(m.runMigrations(ret))\n}\n\n// Steps looks at the currently active migration version.\n// It will migrate up if n > 0, and down if n < 0.\nfunc (m *Migrate) Steps(n int) error {\n\tif n == 0 {\n\t\treturn ErrNoChange\n\t}\n\n\tif err := m.lock(); err != nil {\n\t\treturn err\n\t}\n\n\tcurVersion, dirty, err := m.databaseDrv.Version()\n\tif err != nil {\n\t\treturn m.unlockErr(err)\n\t}\n\n\tif dirty {\n\t\treturn m.unlockErr(ErrDirty{curVersion})\n\t}\n\n\tret := make(chan interface{}, m.PrefetchMigrations)\n\n\tif n > 0 {\n\t\tgo m.readUp(curVersion, n, ret)\n\t} else {\n\t\tgo m.readDown(curVersion, -n, ret)\n\t}\n\n\treturn m.unlockErr(m.runMigrations(ret))\n}\n\n// Up looks at the currently active migration version\n// and will migrate all the way up (applying all up migrations).\nfunc (m *Migrate) Up() error {\n\tif err := m.lock(); err != nil {\n\t\treturn err\n\t}\n\n\tcurVersion, dirty, err := m.databaseDrv.Version()\n\tif err != nil {\n\t\treturn m.unlockErr(err)\n\t}\n\n\tif dirty {\n\t\treturn m.unlockErr(ErrDirty{curVersion})\n\t}\n\n\tret := make(chan interface{}, m.PrefetchMigrations)\n\n\tgo m.readUp(curVersion, -1, ret)\n\treturn m.unlockErr(m.runMigrations(ret))\n}\n\n// Down looks at the currently active migration version\n// and will migrate all the way down (applying all down migrations).\nfunc (m *Migrate) Down() error {\n\tif err := m.lock(); err != nil {\n\t\treturn err\n\t}\n\n\tcurVersion, dirty, err := m.databaseDrv.Version()\n\tif err != nil {\n\t\treturn m.unlockErr(err)\n\t}\n\n\tif dirty {\n\t\treturn m.unlockErr(ErrDirty{curVersion})\n\t}\n\n\tret := make(chan interface{}, m.PrefetchMigrations)\n\tgo m.readDown(curVersion, -1, ret)\n\treturn m.unlockErr(m.runMigrations(ret))\n}\n\n// Drop deletes everything in the database.\nfunc (m *Migrate) Drop() error {\n\tif err := m.lock(); err != nil {\n\t\treturn err\n\t}\n\tif err := m.databaseDrv.Drop(); err != nil {\n\t\treturn m.unlockErr(err)\n\t}\n\treturn m.unlock()\n}\n\n// Run runs any migration provided by you against the database.\n// It does not check any currently active version in database.\n// Usually you don't need this function at all. Use Migrate,\n// Steps, Up or Down instead.\nfunc (m *Migrate) Run(migration ...*Migration) error {\n\tif len(migration) == 0 {\n\t\treturn ErrNoChange\n\t}\n\n\tif err := m.lock(); err != nil {\n\t\treturn err\n\t}\n\n\tcurVersion, dirty, err := m.databaseDrv.Version()\n\tif err != nil {\n\t\treturn m.unlockErr(err)\n\t}\n\n\tif dirty {\n\t\treturn m.unlockErr(ErrDirty{curVersion})\n\t}\n\n\tret := make(chan interface{}, m.PrefetchMigrations)\n\n\tgo func() {\n\t\tdefer close(ret)\n\t\tfor _, migr := range migration {\n\t\t\tif m.PrefetchMigrations > 0 && migr.Body != nil {\n\t\t\t\tm.logVerbosePrintf(\"Start buffering %v\\n\", migr.LogString())\n\t\t\t} else {\n\t\t\t\tm.logVerbosePrintf(\"Scheduled %v\\n\", migr.LogString())\n\t\t\t}\n\n\t\t\tret <- migr\n\t\t\tgo func(migr *Migration) {\n\t\t\t\tif err := migr.Buffer(); err != nil {\n\t\t\t\t\tm.logErr(err)\n\t\t\t\t}\n\t\t\t}(migr)\n\t\t}\n\t}()\n\n\treturn m.unlockErr(m.runMigrations(ret))\n}\n\n// Force sets a migration version.\n// It does not check any currently active version in database.\n// It resets the dirty state to false.\nfunc (m *Migrate) Force(version int) error {\n\tif version < -1 {\n\t\treturn ErrInvalidVersion\n\t}\n\n\tif err := m.lock(); err != nil {\n\t\treturn err\n\t}\n\n\tif err := m.databaseDrv.SetVersion(version, false); err != nil {\n\t\treturn m.unlockErr(err)\n\t}\n\n\treturn m.unlock()\n}\n\n// Version returns the currently active migration version.\n// If no migration has been applied, yet, it will return ErrNilVersion.\nfunc (m *Migrate) Version() (version uint, dirty bool, err error) {\n\tv, d, err := m.databaseDrv.Version()\n\tif err != nil {\n\t\treturn 0, false, err\n\t}\n\n\tif v == database.NilVersion {\n\t\treturn 0, false, ErrNilVersion\n\t}\n\n\treturn suint(v), d, nil\n}\n\n// read reads either up or down migrations from source `from` to `to`.\n// Each migration is then written to the ret channel.\n// If an error occurs during reading, that error is written to the ret channel, too.\n// Once read is done reading it will close the ret channel.\nfunc (m *Migrate) read(from int, to int, ret chan<- interface{}) {\n\tdefer close(ret)\n\n\t// check if from version exists\n\tif from >= 0 {\n\t\tif err := m.versionExists(suint(from)); err != nil {\n\t\t\tret <- err\n\t\t\treturn\n\t\t}\n\t}\n\n\t// check if to version exists\n\tif to >= 0 {\n\t\tif err := m.versionExists(suint(to)); err != nil {\n\t\t\tret <- err\n\t\t\treturn\n\t\t}\n\t}\n\n\t// no change?\n\tif from == to {\n\t\tret <- ErrNoChange\n\t\treturn\n\t}\n\n\tif from < to {\n\t\t// it's going up\n\t\t// apply first migration if from is nil version\n\t\tif from == -1 {\n\t\t\tfirstVersion, err := m.sourceDrv.First()\n\t\t\tif err != nil {\n\t\t\t\tret <- err\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tmigr, err := m.newMigration(firstVersion, int(firstVersion))\n\t\t\tif err != nil {\n\t\t\t\tret <- err\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tret <- migr\n\t\t\tgo func() {\n\t\t\t\tif err := migr.Buffer(); err != nil {\n\t\t\t\t\tm.logErr(err)\n\t\t\t\t}\n\t\t\t}()\n\n\t\t\tfrom = int(firstVersion)\n\t\t}\n\n\t\t// run until we reach target ...\n\t\tfor from < to {\n\t\t\tif m.stop() {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tnext, err := m.sourceDrv.Next(suint(from))\n\t\t\tif err != nil {\n\t\t\t\tret <- err\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tmigr, err := m.newMigration(next, int(next))\n\t\t\tif err != nil {\n\t\t\t\tret <- err\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tret <- migr\n\t\t\tgo func() {\n\t\t\t\tif err := migr.Buffer(); err != nil {\n\t\t\t\t\tm.logErr(err)\n\t\t\t\t}\n\t\t\t}()\n\n\t\t\tfrom = int(next)\n\t\t}\n\n\t} else {\n\t\t// it's going down\n\t\t// run until we reach target ...\n\t\tfor from > to && from >= 0 {\n\t\t\tif m.stop() {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tprev, err := m.sourceDrv.Prev(suint(from))\n\t\t\tif errors.Is(err, os.ErrNotExist) && to == -1 {\n\t\t\t\t// apply nil migration\n\t\t\t\tmigr, err := m.newMigration(suint(from), -1)\n\t\t\t\tif err != nil {\n\t\t\t\t\tret <- err\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tret <- migr\n\t\t\t\tgo func() {\n\t\t\t\t\tif err := migr.Buffer(); err != nil {\n\t\t\t\t\t\tm.logErr(err)\n\t\t\t\t\t}\n\t\t\t\t}()\n\n\t\t\t\treturn\n\n\t\t\t} else if err != nil {\n\t\t\t\tret <- err\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tmigr, err := m.newMigration(suint(from), int(prev))\n\t\t\tif err != nil {\n\t\t\t\tret <- err\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tret <- migr\n\t\t\tgo func() {\n\t\t\t\tif err := migr.Buffer(); err != nil {\n\t\t\t\t\tm.logErr(err)\n\t\t\t\t}\n\t\t\t}()\n\n\t\t\tfrom = int(prev)\n\t\t}\n\t}\n}\n\n// readUp reads up migrations from `from` limitted by `limit`.\n// limit can be -1, implying no limit and reading until there are no more migrations.\n// Each migration is then written to the ret channel.\n// If an error occurs during reading, that error is written to the ret channel, too.\n// Once readUp is done reading it will close the ret channel.\nfunc (m *Migrate) readUp(from int, limit int, ret chan<- interface{}) {\n\tdefer close(ret)\n\n\t// check if from version exists\n\tif from >= 0 {\n\t\tif err := m.versionExists(suint(from)); err != nil {\n\t\t\tret <- err\n\t\t\treturn\n\t\t}\n\t}\n\n\tif limit == 0 {\n\t\tret <- ErrNoChange\n\t\treturn\n\t}\n\n\tcount := 0\n\tfor count < limit || limit == -1 {\n\t\tif m.stop() {\n\t\t\treturn\n\t\t}\n\n\t\t// apply first migration if from is nil version\n\t\tif from == -1 {\n\t\t\tfirstVersion, err := m.sourceDrv.First()\n\t\t\tif err != nil {\n\t\t\t\tret <- err\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tmigr, err := m.newMigration(firstVersion, int(firstVersion))\n\t\t\tif err != nil {\n\t\t\t\tret <- err\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tret <- migr\n\t\t\tgo func() {\n\t\t\t\tif err := migr.Buffer(); err != nil {\n\t\t\t\t\tm.logErr(err)\n\t\t\t\t}\n\t\t\t}()\n\t\t\tfrom = int(firstVersion)\n\t\t\tcount++\n\t\t\tcontinue\n\t\t}\n\n\t\t// apply next migration\n\t\tnext, err := m.sourceDrv.Next(suint(from))\n\t\tif errors.Is(err, os.ErrNotExist) {\n\t\t\t// no limit, but no migrations applied?\n\t\t\tif limit == -1 && count == 0 {\n\t\t\t\tret <- ErrNoChange\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// no limit, reached end\n\t\t\tif limit == -1 {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// reached end, and didn't apply any migrations\n\t\t\tif limit > 0 && count == 0 {\n\t\t\t\tret <- os.ErrNotExist\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// applied less migrations than limit?\n\t\t\tif count < limit {\n\t\t\t\tret <- ErrShortLimit{suint(limit - count)}\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t\tif err != nil {\n\t\t\tret <- err\n\t\t\treturn\n\t\t}\n\n\t\tmigr, err := m.newMigration(next, int(next))\n\t\tif err != nil {\n\t\t\tret <- err\n\t\t\treturn\n\t\t}\n\n\t\tret <- migr\n\t\tgo func() {\n\t\t\tif err := migr.Buffer(); err != nil {\n\t\t\t\tm.logErr(err)\n\t\t\t}\n\t\t}()\n\t\tfrom = int(next)\n\t\tcount++\n\t}\n}\n\n// readDown reads down migrations from `from` limitted by `limit`.\n// limit can be -1, implying no limit and reading until there are no more migrations.\n// Each migration is then written to the ret channel.\n// If an error occurs during reading, that error is written to the ret channel, too.\n// Once readDown is done reading it will close the ret channel.\nfunc (m *Migrate) readDown(from int, limit int, ret chan<- interface{}) {\n\tdefer close(ret)\n\n\t// check if from version exists\n\tif from >= 0 {\n\t\tif err := m.versionExists(suint(from)); err != nil {\n\t\t\tret <- err\n\t\t\treturn\n\t\t}\n\t}\n\n\tif limit == 0 {\n\t\tret <- ErrNoChange\n\t\treturn\n\t}\n\n\t// no change if already at nil version\n\tif from == -1 && limit == -1 {\n\t\tret <- ErrNoChange\n\t\treturn\n\t}\n\n\t// can't go over limit if already at nil version\n\tif from == -1 && limit > 0 {\n\t\tret <- os.ErrNotExist\n\t\treturn\n\t}\n\n\tcount := 0\n\tfor count < limit || limit == -1 {\n\t\tif m.stop() {\n\t\t\treturn\n\t\t}\n\n\t\tprev, err := m.sourceDrv.Prev(suint(from))\n\t\tif errors.Is(err, os.ErrNotExist) {\n\t\t\t// no limit or haven't reached limit, apply \"first\" migration\n\t\t\tif limit == -1 || limit-count > 0 {\n\t\t\t\tfirstVersion, err := m.sourceDrv.First()\n\t\t\t\tif err != nil {\n\t\t\t\t\tret <- err\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tmigr, err := m.newMigration(firstVersion, -1)\n\t\t\t\tif err != nil {\n\t\t\t\t\tret <- err\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tret <- migr\n\t\t\t\tgo func() {\n\t\t\t\t\tif err := migr.Buffer(); err != nil {\n\t\t\t\t\t\tm.logErr(err)\n\t\t\t\t\t}\n\t\t\t\t}()\n\t\t\t\tcount++\n\t\t\t}\n\n\t\t\tif count < limit {\n\t\t\t\tret <- ErrShortLimit{suint(limit - count)}\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t\tif err != nil {\n\t\t\tret <- err\n\t\t\treturn\n\t\t}\n\n\t\tmigr, err := m.newMigration(suint(from), int(prev))\n\t\tif err != nil {\n\t\t\tret <- err\n\t\t\treturn\n\t\t}\n\n\t\tret <- migr\n\t\tgo func() {\n\t\t\tif err := migr.Buffer(); err != nil {\n\t\t\t\tm.logErr(err)\n\t\t\t}\n\t\t}()\n\t\tfrom = int(prev)\n\t\tcount++\n\t}\n}\n\n// runMigrations reads *Migration and error from a channel. Any other type\n// sent on this channel will result in a panic. Each migration is then\n// proxied to the database driver and run against the database.\n// Before running a newly received migration it will check if it's supposed\n// to stop execution because it might have received a stop signal on the\n// GracefulStop channel.\nfunc (m *Migrate) runMigrations(ret <-chan interface{}) error {\n\tfor r := range ret {\n\n\t\tif m.stop() {\n\t\t\treturn nil\n\t\t}\n\n\t\tswitch r := r.(type) {\n\t\tcase error:\n\t\t\treturn r\n\n\t\tcase *Migration:\n\t\t\tmigr := r\n\n\t\t\t// set version with dirty state\n\t\t\tif err := m.databaseDrv.SetVersion(migr.TargetVersion, true); err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\n\t\t\tif migr.Body != nil {\n\t\t\t\tm.logVerbosePrintf(\"Read and execute %v\\n\", migr.LogString())\n\t\t\t\tif err := m.databaseDrv.Run(migr.BufferedBody); err != nil {\n\t\t\t\t\treturn err\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// set clean state\n\t\t\tif err := m.databaseDrv.SetVersion(migr.TargetVersion, false); err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\n\t\t\tendTime := time.Now()\n\t\t\treadTime := migr.FinishedReading.Sub(migr.StartedBuffering)\n\t\t\trunTime := endTime.Sub(migr.FinishedReading)\n\n\t\t\t// log either verbose or normal\n\t\t\tif m.Log != nil {\n\t\t\t\tif m.Log.Verbose() {\n\t\t\t\t\tm.logPrintf(\"Finished %v (read %v, ran %v)\\n\", migr.LogString(), readTime, runTime)\n\t\t\t\t} else {\n\t\t\t\t\tm.logPrintf(\"%v (%v)\\n\", migr.LogString(), readTime+runTime)\n\t\t\t\t}\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn fmt.Errorf(\"unknown type: %T with value: %+v\", r, r)\n\t\t}\n\t}\n\treturn nil\n}\n\n// versionExists checks the source if either the up or down migration for\n// the specified migration version exists.\nfunc (m *Migrate) versionExists(version uint) (result error) {\n\t// try up migration first\n\tup, _, err := m.sourceDrv.ReadUp(version)\n\tif err == nil {\n\t\tdefer func() {\n\t\t\tif errClose := up.Close(); errClose != nil {\n\t\t\t\tresult = multierror.Append(result, errClose)\n\t\t\t}\n\t\t}()\n\t}\n\tif errors.Is(err, os.ErrExist) {\n\t\treturn nil\n\t} else if !errors.Is(err, os.ErrNotExist) {\n\t\treturn err\n\t}\n\n\t// then try down migration\n\tdown, _, err := m.sourceDrv.ReadDown(version)\n\tif err == nil {\n\t\tdefer func() {\n\t\t\tif errClose := down.Close(); errClose != nil {\n\t\t\t\tresult = multierror.Append(result, errClose)\n\t\t\t}\n\t\t}()\n\t}\n\tif errors.Is(err, os.ErrExist) {\n\t\treturn nil\n\t} else if !errors.Is(err, os.ErrNotExist) {\n\t\treturn err\n\t}\n\n\terr = fmt.Errorf(\"no migration found for version %d: %w\", version, err)\n\tm.logErr(err)\n\treturn err\n}\n\n// stop returns true if no more migrations should be run against the database\n// because a stop signal was received on the GracefulStop channel.\n// Calls are cheap and this function is not blocking.\nfunc (m *Migrate) stop() bool {\n\tif m.isGracefulStop {\n\t\treturn true\n\t}\n\n\tselect {\n\tcase <-m.GracefulStop:\n\t\tm.isGracefulStop = true\n\t\treturn true\n\n\tdefault:\n\t\treturn false\n\t}\n}\n\n// newMigration is a helper func that returns a *Migration for the\n// specified version and targetVersion.\nfunc (m *Migrate) newMigration(version uint, targetVersion int) (*Migration, error) {\n\tvar migr *Migration\n\n\tif targetVersion >= int(version) {\n\t\tr, identifier, err := m.sourceDrv.ReadUp(version)\n\t\tif errors.Is(err, os.ErrNotExist) {\n\t\t\t// create \"empty\" migration\n\t\t\tmigr, err = NewMigration(nil, \"\", version, targetVersion)\n\t\t\tif err != nil {\n\t\t\t\treturn nil, err\n\t\t\t}\n\n\t\t} else if err != nil {\n\t\t\treturn nil, err\n\n\t\t} else {\n\t\t\t// create migration from up source\n\t\t\tmigr, err = NewMigration(r, identifier, version, targetVersion)\n\t\t\tif err != nil {\n\t\t\t\treturn nil, err\n\t\t\t}\n\t\t}\n\n\t} else {\n\t\tr, identifier, err := m.sourceDrv.ReadDown(version)\n\t\tif errors.Is(err, os.ErrNotExist) {\n\t\t\t// create \"empty\" migration\n\t\t\tmigr, err = NewMigration(nil, \"\", version, targetVersion)\n\t\t\tif err != nil {\n\t\t\t\treturn nil, err\n\t\t\t}\n\n\t\t} else if err != nil {\n\t\t\treturn nil, err\n\n\t\t} else {\n\t\t\t// create migration from down source\n\t\t\tmigr, err = NewMigration(r, identifier, version, targetVersion)\n\t\t\tif err != nil {\n\t\t\t\treturn nil, err\n\t\t\t}\n\t\t}\n\t}\n\n\tif m.PrefetchMigrations > 0 && migr.Body != nil {\n\t\tm.logVerbosePrintf(\"Start buffering %v\\n\", migr.LogString())\n\t} else {\n\t\tm.logVerbosePrintf(\"Scheduled %v\\n\", migr.LogString())\n\t}\n\n\treturn migr, nil\n}\n\n// lock is a thread safe helper function to lock the database.\n// It should be called as late as possible when running migrations.\nfunc (m *Migrate) lock() error {\n\tm.isLockedMu.Lock()\n\tdefer m.isLockedMu.Unlock()\n\n\tif m.isLocked {\n\t\treturn ErrLocked\n\t}\n\n\t// create done channel, used in the timeout goroutine\n\tdone := make(chan bool, 1)\n\tdefer func() {\n\t\tdone <- true\n\t}()\n\n\t// use errchan to signal error back to this context\n\terrchan := make(chan error, 2)\n\n\t// start timeout goroutine\n\ttimeout := time.After(m.LockTimeout)\n\tgo func() {\n\t\tfor {\n\t\t\tselect {\n\t\t\tcase <-done:\n\t\t\t\treturn\n\t\t\tcase <-timeout:\n\t\t\t\terrchan <- ErrLockTimeout\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}()\n\n\t// now try to acquire the lock\n\tgo func() {\n\t\tif err := m.databaseDrv.Lock(); err != nil {\n\t\t\terrchan <- err\n\t\t} else {\n\t\t\terrchan <- nil\n\t\t}\n\t}()\n\n\t// wait until we either receive ErrLockTimeout or error from Lock operation\n\terr := <-errchan\n\tif err == nil {\n\t\tm.isLocked = true\n\t}\n\treturn err\n}\n\n// unlock is a thread safe helper function to unlock the database.\n// It should be called as early as possible when no more migrations are\n// expected to be executed.\nfunc (m *Migrate) unlock() error {\n\tm.isLockedMu.Lock()\n\tdefer m.isLockedMu.Unlock()\n\n\tif err := m.databaseDrv.Unlock(); err != nil {\n\t\t// BUG: Can potentially create a deadlock. Add a timeout.\n\t\treturn err\n\t}\n\n\tm.isLocked = false\n\treturn nil\n}\n\n// unlockErr calls unlock and returns a combined error\n// if a prevErr is not nil.\nfunc (m *Migrate) unlockErr(prevErr error) error {\n\tif err := m.unlock(); err != nil {\n\t\treturn multierror.Append(prevErr, err)\n\t}\n\treturn prevErr\n}\n\n// logPrintf writes to m.Log if not nil\nfunc (m *Migrate) logPrintf(format string, v ...interface{}) {\n\tif m.Log != nil {\n\t\tm.Log.Printf(format, v...)\n\t}\n}\n\n// logVerbosePrintf writes to m.Log if not nil. Use for verbose logging output.\nfunc (m *Migrate) logVerbosePrintf(format string, v ...interface{}) {\n\tif m.Log != nil && m.Log.Verbose() {\n\t\tm.Log.Printf(format, v...)\n\t}\n}\n\n// logErr writes error to m.Log if not nil\nfunc (m *Migrate) logErr(err error) {\n\tif m.Log != nil {\n\t\tm.Log.Printf(\"error: %v\", err)\n\t}\n}\n"
        },
        {
          "name": "migrate_test.go",
          "type": "blob",
          "size": 36.0703125,
          "content": "package migrate\n\nimport (\n\t\"bytes\"\n\t\"database/sql\"\n\t\"errors\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n\t\"strings\"\n\t\"testing\"\n\n\tdStub \"github.com/golang-migrate/migrate/v4/database/stub\"\n\t\"github.com/golang-migrate/migrate/v4/source\"\n\tsStub \"github.com/golang-migrate/migrate/v4/source/stub\"\n)\n\n// sourceStubMigrations hold the following migrations:\n// u = up migration, d = down migration, n = version\n//\n//\t|  1  |  -  |  3  |  4  |  5  |  -  |  7  |\n//\t| u d |  -  | u   | u d |   d |  -  | u d |\nvar sourceStubMigrations *source.Migrations\n\nconst (\n\tsrcDrvNameStub = \"stub\"\n\tdbDrvNameStub  = \"stub\"\n)\n\nfunc init() {\n\tsourceStubMigrations = source.NewMigrations()\n\tsourceStubMigrations.Append(&source.Migration{Version: 1, Direction: source.Up, Identifier: \"CREATE 1\"})\n\tsourceStubMigrations.Append(&source.Migration{Version: 1, Direction: source.Down, Identifier: \"DROP 1\"})\n\tsourceStubMigrations.Append(&source.Migration{Version: 3, Direction: source.Up, Identifier: \"CREATE 3\"})\n\tsourceStubMigrations.Append(&source.Migration{Version: 4, Direction: source.Up, Identifier: \"CREATE 4\"})\n\tsourceStubMigrations.Append(&source.Migration{Version: 4, Direction: source.Down, Identifier: \"DROP 4\"})\n\tsourceStubMigrations.Append(&source.Migration{Version: 5, Direction: source.Down, Identifier: \"DROP 5\"})\n\tsourceStubMigrations.Append(&source.Migration{Version: 7, Direction: source.Up, Identifier: \"CREATE 7\"})\n\tsourceStubMigrations.Append(&source.Migration{Version: 7, Direction: source.Down, Identifier: \"DROP 7\"})\n}\n\ntype DummyInstance struct{ Name string }\n\nfunc TestNew(t *testing.T) {\n\tm, err := New(\"stub://\", \"stub://\")\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tif m.sourceName != srcDrvNameStub {\n\t\tt.Errorf(\"expected stub, got %v\", m.sourceName)\n\t}\n\tif m.sourceDrv == nil {\n\t\tt.Error(\"expected sourceDrv not to be nil\")\n\t}\n\n\tif m.databaseName != dbDrvNameStub {\n\t\tt.Errorf(\"expected stub, got %v\", m.databaseName)\n\t}\n\tif m.databaseDrv == nil {\n\t\tt.Error(\"expected databaseDrv not to be nil\")\n\t}\n}\n\nfunc ExampleNew() {\n\t// Read migrations from /home/mattes/migrations and connect to a local postgres database.\n\tm, err := New(\"file:///home/mattes/migrations\", \"postgres://mattes:secret@localhost:5432/database?sslmode=disable\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\t// Migrate all the way up ...\n\tif err := m.Up(); err != nil && err != ErrNoChange {\n\t\tlog.Fatal(err)\n\t}\n}\n\nfunc TestNewWithDatabaseInstance(t *testing.T) {\n\tdummyDb := &DummyInstance{\"database\"}\n\tdbInst, err := dStub.WithInstance(dummyDb, &dStub.Config{})\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tm, err := NewWithDatabaseInstance(\"stub://\", dbDrvNameStub, dbInst)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tif m.sourceName != srcDrvNameStub {\n\t\tt.Errorf(\"expected stub, got %v\", m.sourceName)\n\t}\n\tif m.sourceDrv == nil {\n\t\tt.Error(\"expected sourceDrv not to be nil\")\n\t}\n\n\tif m.databaseName != dbDrvNameStub {\n\t\tt.Errorf(\"expected stub, got %v\", m.databaseName)\n\t}\n\tif m.databaseDrv == nil {\n\t\tt.Error(\"expected databaseDrv not to be nil\")\n\t}\n}\n\nfunc ExampleNewWithDatabaseInstance() {\n\t// Create and use an existing database instance.\n\tdb, err := sql.Open(\"postgres\", \"postgres://mattes:secret@localhost:5432/database?sslmode=disable\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tdefer func() {\n\t\tif err := db.Close(); err != nil {\n\t\t\tlog.Fatal(err)\n\t\t}\n\t}()\n\n\t// Create driver instance from db.\n\t// Check each driver if it supports the WithInstance function.\n\t// `import \"github.com/golang-migrate/migrate/v4/database/postgres\"`\n\tinstance, err := dStub.WithInstance(db, &dStub.Config{})\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\t// Read migrations from /home/mattes/migrations and connect to a local postgres database.\n\tm, err := NewWithDatabaseInstance(\"file:///home/mattes/migrations\", \"postgres\", instance)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\t// Migrate all the way up ...\n\tif err := m.Up(); err != nil {\n\t\tlog.Fatal(err)\n\t}\n}\n\nfunc TestNewWithSourceInstance(t *testing.T) {\n\tdummySource := &DummyInstance{\"source\"}\n\tsInst, err := sStub.WithInstance(dummySource, &sStub.Config{})\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tm, err := NewWithSourceInstance(srcDrvNameStub, sInst, \"stub://\")\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tif m.sourceName != srcDrvNameStub {\n\t\tt.Errorf(\"expected stub, got %v\", m.sourceName)\n\t}\n\tif m.sourceDrv == nil {\n\t\tt.Error(\"expected sourceDrv not to be nil\")\n\t}\n\n\tif m.databaseName != dbDrvNameStub {\n\t\tt.Errorf(\"expected stub, got %v\", m.databaseName)\n\t}\n\tif m.databaseDrv == nil {\n\t\tt.Error(\"expected databaseDrv not to be nil\")\n\t}\n}\n\nfunc ExampleNewWithSourceInstance() {\n\tdi := &DummyInstance{\"think any client required for a source here\"}\n\n\t// Create driver instance from DummyInstance di.\n\t// Check each driver if it support the WithInstance function.\n\t// `import \"github.com/golang-migrate/migrate/v4/source/stub\"`\n\tinstance, err := sStub.WithInstance(di, &sStub.Config{})\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\t// Read migrations from Stub and connect to a local postgres database.\n\tm, err := NewWithSourceInstance(srcDrvNameStub, instance, \"postgres://mattes:secret@localhost:5432/database?sslmode=disable\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\t// Migrate all the way up ...\n\tif err := m.Up(); err != nil {\n\t\tlog.Fatal(err)\n\t}\n}\n\nfunc TestNewWithInstance(t *testing.T) {\n\tdummyDb := &DummyInstance{\"database\"}\n\tdbInst, err := dStub.WithInstance(dummyDb, &dStub.Config{})\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tdummySource := &DummyInstance{\"source\"}\n\tsInst, err := sStub.WithInstance(dummySource, &sStub.Config{})\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tm, err := NewWithInstance(srcDrvNameStub, sInst, dbDrvNameStub, dbInst)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tif m.sourceName != srcDrvNameStub {\n\t\tt.Errorf(\"expected stub, got %v\", m.sourceName)\n\t}\n\tif m.sourceDrv == nil {\n\t\tt.Error(\"expected sourceDrv not to be nil\")\n\t}\n\n\tif m.databaseName != dbDrvNameStub {\n\t\tt.Errorf(\"expected stub, got %v\", m.databaseName)\n\t}\n\tif m.databaseDrv == nil {\n\t\tt.Error(\"expected databaseDrv not to be nil\")\n\t}\n}\n\nfunc ExampleNewWithInstance() {\n\t// See NewWithDatabaseInstance and NewWithSourceInstance for an example.\n}\n\nfunc TestClose(t *testing.T) {\n\tm, _ := New(\"stub://\", \"stub://\")\n\tsourceErr, databaseErr := m.Close()\n\tif sourceErr != nil {\n\t\tt.Error(sourceErr)\n\t}\n\tif databaseErr != nil {\n\t\tt.Error(databaseErr)\n\t}\n}\n\nfunc TestMigrate(t *testing.T) {\n\tm, _ := New(\"stub://\", \"stub://\")\n\tm.sourceDrv.(*sStub.Stub).Migrations = sourceStubMigrations\n\tdbDrv := m.databaseDrv.(*dStub.Stub)\n\n\ttt := []struct {\n\t\tversion       uint\n\t\texpectErr     error\n\t\texpectVersion uint\n\t\texpectSeq     migrationSequence\n\t}{\n\t\t// migrate all the way Up in single steps\n\t\t{\n\t\t\tversion:   0,\n\t\t\texpectErr: os.ErrNotExist,\n\t\t},\n\t\t{\n\t\t\tversion:       1,\n\t\t\texpectVersion: 1,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tversion:   2,\n\t\t\texpectErr: os.ErrNotExist,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tversion:       3,\n\t\t\texpectVersion: 3,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tversion:       4,\n\t\t\texpectVersion: 4,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tversion:       5,\n\t\t\texpectVersion: 5,\n\t\t\texpectSeq: migrationSequence{ // 5 has no up migration\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tversion:   6,\n\t\t\texpectErr: os.ErrNotExist,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tversion:       7,\n\t\t\texpectVersion: 7,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tversion:   8,\n\t\t\texpectErr: os.ErrNotExist,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t},\n\t\t},\n\n\t\t// migrate all the way Down in single steps\n\t\t{\n\t\t\tversion:   6,\n\t\t\texpectErr: os.ErrNotExist,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tversion:       5,\n\t\t\texpectVersion: 5,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tversion:       4,\n\t\t\texpectVersion: 4,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t\tmr(\"DROP 5\"),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tversion:       3,\n\t\t\texpectVersion: 3,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t\tmr(\"DROP 5\"),\n\t\t\t\tmr(\"DROP 4\"),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tversion:   2,\n\t\t\texpectErr: os.ErrNotExist,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t\tmr(\"DROP 5\"),\n\t\t\t\tmr(\"DROP 4\"),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tversion:       1,\n\t\t\texpectVersion: 1,\n\t\t\texpectSeq: migrationSequence{ // 3 has no down migration\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t\tmr(\"DROP 5\"),\n\t\t\t\tmr(\"DROP 4\"),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tversion:   0,\n\t\t\texpectErr: os.ErrNotExist,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t\tmr(\"DROP 5\"),\n\t\t\t\tmr(\"DROP 4\"),\n\t\t\t},\n\t\t},\n\n\t\t// migrate all the way Up in one step\n\t\t{\n\t\t\tversion:       7,\n\t\t\texpectVersion: 7,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t\tmr(\"DROP 5\"),\n\t\t\t\tmr(\"DROP 4\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t},\n\t\t},\n\n\t\t// migrate all the way Down in one step\n\t\t{\n\t\t\tversion:       1,\n\t\t\texpectVersion: 1,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t\tmr(\"DROP 5\"),\n\t\t\t\tmr(\"DROP 4\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t\tmr(\"DROP 5\"),\n\t\t\t\tmr(\"DROP 4\"),\n\t\t\t},\n\t\t},\n\n\t\t// can't migrate the same version twice\n\t\t{\n\t\t\tversion:   1,\n\t\t\texpectErr: ErrNoChange,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t\tmr(\"DROP 5\"),\n\t\t\t\tmr(\"DROP 4\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t\tmr(\"DROP 5\"),\n\t\t\t\tmr(\"DROP 4\"),\n\t\t\t},\n\t\t},\n\t}\n\n\tfor i, v := range tt {\n\t\terr := m.Migrate(v.version)\n\t\tif (v.expectErr == os.ErrNotExist && !errors.Is(err, os.ErrNotExist)) ||\n\t\t\t(v.expectErr != os.ErrNotExist && err != v.expectErr) {\n\t\t\tt.Errorf(\"expected err %v, got %v, in %v\", v.expectErr, err, i)\n\n\t\t} else if err == nil {\n\t\t\tversion, _, err := m.Version()\n\t\t\tif err != nil {\n\t\t\t\tt.Error(err)\n\t\t\t}\n\t\t\tif version != v.expectVersion {\n\t\t\t\tt.Errorf(\"expected version %v, got %v, in %v\", v.expectVersion, version, i)\n\t\t\t}\n\t\t}\n\t\tequalDbSeq(t, i, v.expectSeq, dbDrv)\n\t}\n}\n\nfunc TestMigrateDirty(t *testing.T) {\n\tm, _ := New(\"stub://\", \"stub://\")\n\tdbDrv := m.databaseDrv.(*dStub.Stub)\n\tif err := dbDrv.SetVersion(0, true); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\terr := m.Migrate(1)\n\tif _, ok := err.(ErrDirty); !ok {\n\t\tt.Fatalf(\"expected ErrDirty, got %v\", err)\n\t}\n}\n\nfunc TestSteps(t *testing.T) {\n\tm, _ := New(\"stub://\", \"stub://\")\n\tm.sourceDrv.(*sStub.Stub).Migrations = sourceStubMigrations\n\tdbDrv := m.databaseDrv.(*dStub.Stub)\n\n\ttt := []struct {\n\t\tsteps         int\n\t\texpectErr     error\n\t\texpectVersion int\n\t\texpectSeq     migrationSequence\n\t}{\n\t\t// step must be != 0\n\t\t{\n\t\t\tsteps:     0,\n\t\t\texpectErr: ErrNoChange,\n\t\t},\n\n\t\t// can't go Down if ErrNilVersion\n\t\t{\n\t\t\tsteps:     -1,\n\t\t\texpectErr: os.ErrNotExist,\n\t\t},\n\n\t\t// migrate all the way Up\n\t\t{\n\t\t\tsteps:         1,\n\t\t\texpectVersion: 1,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\")},\n\t\t},\n\t\t{\n\t\t\tsteps:         1,\n\t\t\texpectVersion: 3,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tsteps:         1,\n\t\t\texpectVersion: 4,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tsteps:         1,\n\t\t\texpectVersion: 5,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tsteps:         1,\n\t\t\texpectVersion: 7,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tsteps:     1,\n\t\t\texpectErr: os.ErrNotExist,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t},\n\t\t},\n\n\t\t// migrate all the way Down\n\t\t{\n\t\t\tsteps:         -1,\n\t\t\texpectVersion: 5,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tsteps:         -1,\n\t\t\texpectVersion: 4,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t\tmr(\"DROP 5\"),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tsteps:         -1,\n\t\t\texpectVersion: 3,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t\tmr(\"DROP 5\"),\n\t\t\t\tmr(\"DROP 4\"),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tsteps:         -1,\n\t\t\texpectVersion: 1,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t\tmr(\"DROP 5\"),\n\t\t\t\tmr(\"DROP 4\"),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tsteps:         -1,\n\t\t\texpectVersion: -1,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t\tmr(\"DROP 5\"),\n\t\t\t\tmr(\"DROP 4\"),\n\t\t\t\tmr(\"DROP 1\"),\n\t\t\t},\n\t\t},\n\n\t\t// migrate Up in bigger step\n\t\t{\n\t\t\tsteps:         4,\n\t\t\texpectVersion: 5,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t\tmr(\"DROP 5\"),\n\t\t\t\tmr(\"DROP 4\"),\n\t\t\t\tmr(\"DROP 1\"),\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t},\n\t\t},\n\n\t\t// apply one migration, then reaches out of boundary\n\t\t{\n\t\t\tsteps:         2,\n\t\t\texpectErr:     ErrShortLimit{1},\n\t\t\texpectVersion: 7,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t\tmr(\"DROP 5\"),\n\t\t\t\tmr(\"DROP 4\"),\n\t\t\t\tmr(\"DROP 1\"),\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t},\n\t\t},\n\n\t\t// migrate Down in bigger step\n\t\t{\n\t\t\tsteps:         -4,\n\t\t\texpectVersion: 1,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t\tmr(\"DROP 5\"),\n\t\t\t\tmr(\"DROP 4\"),\n\t\t\t\tmr(\"DROP 1\"),\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t\tmr(\"DROP 5\"),\n\t\t\t\tmr(\"DROP 4\"),\n\t\t\t},\n\t\t},\n\n\t\t// apply one migration, then reaches out of boundary\n\t\t{\n\t\t\tsteps:         -2,\n\t\t\texpectErr:     ErrShortLimit{1},\n\t\t\texpectVersion: -1,\n\t\t\texpectSeq: migrationSequence{\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t\tmr(\"DROP 5\"),\n\t\t\t\tmr(\"DROP 4\"),\n\t\t\t\tmr(\"DROP 1\"),\n\t\t\t\tmr(\"CREATE 1\"),\n\t\t\t\tmr(\"CREATE 3\"),\n\t\t\t\tmr(\"CREATE 4\"),\n\t\t\t\tmr(\"CREATE 7\"),\n\t\t\t\tmr(\"DROP 7\"),\n\t\t\t\tmr(\"DROP 5\"),\n\t\t\t\tmr(\"DROP 4\"),\n\t\t\t\tmr(\"DROP 1\"),\n\t\t\t},\n\t\t},\n\t}\n\n\tfor i, v := range tt {\n\t\terr := m.Steps(v.steps)\n\t\tif (v.expectErr == os.ErrNotExist && !errors.Is(err, os.ErrNotExist)) ||\n\t\t\t(v.expectErr != os.ErrNotExist && err != v.expectErr) {\n\t\t\tt.Errorf(\"expected err %v, got %v, in %v\", v.expectErr, err, i)\n\n\t\t} else if err == nil {\n\t\t\tversion, _, err := m.Version()\n\t\t\tif err != ErrNilVersion && err != nil {\n\t\t\t\tt.Error(err)\n\t\t\t}\n\t\t\tif v.expectVersion == -1 && err != ErrNilVersion {\n\t\t\t\tt.Errorf(\"expected ErrNilVersion, got %v, in %v\", version, i)\n\n\t\t\t} else if v.expectVersion >= 0 && version != uint(v.expectVersion) {\n\t\t\t\tt.Errorf(\"expected version %v, got %v, in %v\", v.expectVersion, version, i)\n\t\t\t}\n\t\t}\n\t\tequalDbSeq(t, i, v.expectSeq, dbDrv)\n\t}\n}\n\nfunc TestStepsDirty(t *testing.T) {\n\tm, _ := New(\"stub://\", \"stub://\")\n\tdbDrv := m.databaseDrv.(*dStub.Stub)\n\tif err := dbDrv.SetVersion(0, true); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\terr := m.Steps(1)\n\tif _, ok := err.(ErrDirty); !ok {\n\t\tt.Fatalf(\"expected ErrDirty, got %v\", err)\n\t}\n}\n\nfunc TestUpAndDown(t *testing.T) {\n\tm, _ := New(\"stub://\", \"stub://\")\n\tm.sourceDrv.(*sStub.Stub).Migrations = sourceStubMigrations\n\tdbDrv := m.databaseDrv.(*dStub.Stub)\n\n\t// go Up first\n\tif err := m.Up(); err != nil {\n\t\tt.Fatal(err)\n\t}\n\texpectedSequence := migrationSequence{\n\t\tmr(\"CREATE 1\"),\n\t\tmr(\"CREATE 3\"),\n\t\tmr(\"CREATE 4\"),\n\t\tmr(\"CREATE 7\"),\n\t}\n\tequalDbSeq(t, 0, expectedSequence, dbDrv)\n\n\t// go Down\n\tif err := m.Down(); err != nil {\n\t\tt.Fatal(err)\n\t}\n\texpectedSequence = migrationSequence{\n\t\tmr(\"CREATE 1\"),\n\t\tmr(\"CREATE 3\"),\n\t\tmr(\"CREATE 4\"),\n\t\tmr(\"CREATE 7\"),\n\t\tmr(\"DROP 7\"),\n\t\tmr(\"DROP 5\"),\n\t\tmr(\"DROP 4\"),\n\t\tmr(\"DROP 1\"),\n\t}\n\tequalDbSeq(t, 1, expectedSequence, dbDrv)\n\n\t// go 1 Up and then all the way Up\n\tif err := m.Steps(1); err != nil {\n\t\tt.Fatal(err)\n\t}\n\texpectedSequence = migrationSequence{\n\t\tmr(\"CREATE 1\"),\n\t\tmr(\"CREATE 3\"),\n\t\tmr(\"CREATE 4\"),\n\t\tmr(\"CREATE 7\"),\n\t\tmr(\"DROP 7\"),\n\t\tmr(\"DROP 5\"),\n\t\tmr(\"DROP 4\"),\n\t\tmr(\"DROP 1\"),\n\t\tmr(\"CREATE 1\"),\n\t}\n\tequalDbSeq(t, 2, expectedSequence, dbDrv)\n\n\tif err := m.Up(); err != nil {\n\t\tt.Fatal(err)\n\t}\n\texpectedSequence = migrationSequence{\n\t\tmr(\"CREATE 1\"),\n\t\tmr(\"CREATE 3\"),\n\t\tmr(\"CREATE 4\"),\n\t\tmr(\"CREATE 7\"),\n\t\tmr(\"DROP 7\"),\n\t\tmr(\"DROP 5\"),\n\t\tmr(\"DROP 4\"),\n\t\tmr(\"DROP 1\"),\n\t\tmr(\"CREATE 1\"),\n\t\tmr(\"CREATE 3\"),\n\t\tmr(\"CREATE 4\"),\n\t\tmr(\"CREATE 7\"),\n\t}\n\tequalDbSeq(t, 3, expectedSequence, dbDrv)\n\n\t// go 1 Down and then all the way Down\n\tif err := m.Steps(-1); err != nil {\n\t\tt.Fatal(err)\n\t}\n\texpectedSequence = migrationSequence{\n\t\tmr(\"CREATE 1\"),\n\t\tmr(\"CREATE 3\"),\n\t\tmr(\"CREATE 4\"),\n\t\tmr(\"CREATE 7\"),\n\t\tmr(\"DROP 7\"),\n\t\tmr(\"DROP 5\"),\n\t\tmr(\"DROP 4\"),\n\t\tmr(\"DROP 1\"),\n\t\tmr(\"CREATE 1\"),\n\t\tmr(\"CREATE 3\"),\n\t\tmr(\"CREATE 4\"),\n\t\tmr(\"CREATE 7\"),\n\t\tmr(\"DROP 7\"),\n\t}\n\tequalDbSeq(t, 1, expectedSequence, dbDrv)\n\n\tif err := m.Down(); err != nil {\n\t\tt.Fatal(err)\n\t}\n\texpectedSequence = migrationSequence{\n\t\tmr(\"CREATE 1\"),\n\t\tmr(\"CREATE 3\"),\n\t\tmr(\"CREATE 4\"),\n\t\tmr(\"CREATE 7\"),\n\t\tmr(\"DROP 7\"),\n\t\tmr(\"DROP 5\"),\n\t\tmr(\"DROP 4\"),\n\t\tmr(\"DROP 1\"),\n\t\tmr(\"CREATE 1\"),\n\t\tmr(\"CREATE 3\"),\n\t\tmr(\"CREATE 4\"),\n\t\tmr(\"CREATE 7\"),\n\t\tmr(\"DROP 7\"),\n\t\tmr(\"DROP 5\"),\n\t\tmr(\"DROP 4\"),\n\t\tmr(\"DROP 1\"),\n\t}\n\tequalDbSeq(t, 1, expectedSequence, dbDrv)\n}\n\nfunc TestUpDirty(t *testing.T) {\n\tm, _ := New(\"stub://\", \"stub://\")\n\tdbDrv := m.databaseDrv.(*dStub.Stub)\n\tif err := dbDrv.SetVersion(0, true); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\terr := m.Up()\n\tif _, ok := err.(ErrDirty); !ok {\n\t\tt.Fatalf(\"expected ErrDirty, got %v\", err)\n\t}\n}\n\nfunc TestDownDirty(t *testing.T) {\n\tm, _ := New(\"stub://\", \"stub://\")\n\tdbDrv := m.databaseDrv.(*dStub.Stub)\n\tif err := dbDrv.SetVersion(0, true); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\terr := m.Down()\n\tif _, ok := err.(ErrDirty); !ok {\n\t\tt.Fatalf(\"expected ErrDirty, got %v\", err)\n\t}\n}\n\nfunc TestDrop(t *testing.T) {\n\tm, _ := New(\"stub://\", \"stub://\")\n\tm.sourceDrv.(*sStub.Stub).Migrations = sourceStubMigrations\n\tdbDrv := m.databaseDrv.(*dStub.Stub)\n\n\tif err := m.Drop(); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tif dbDrv.MigrationSequence[len(dbDrv.MigrationSequence)-1] != dStub.DROP {\n\t\tt.Fatalf(\"expected database to DROP, got sequence %v\", dbDrv.MigrationSequence)\n\t}\n}\n\nfunc TestVersion(t *testing.T) {\n\tm, _ := New(\"stub://\", \"stub://\")\n\tdbDrv := m.databaseDrv.(*dStub.Stub)\n\n\t_, _, err := m.Version()\n\tif err != ErrNilVersion {\n\t\tt.Fatalf(\"expected ErrNilVersion, got %v\", err)\n\t}\n\n\tif err := dbDrv.Run(bytes.NewBufferString(\"1_up\")); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tif err := dbDrv.SetVersion(1, false); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tv, _, err := m.Version()\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tif v != 1 {\n\t\tt.Fatalf(\"expected version 1, got %v\", v)\n\t}\n}\n\nfunc TestRun(t *testing.T) {\n\tm, _ := New(\"stub://\", \"stub://\")\n\n\tmx, err := NewMigration(nil, \"\", 1, 2)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tif err := m.Run(mx); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tv, _, err := m.Version()\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tif v != 2 {\n\t\tt.Errorf(\"expected version 2, got %v\", v)\n\t}\n}\n\nfunc TestRunDirty(t *testing.T) {\n\tm, _ := New(\"stub://\", \"stub://\")\n\tdbDrv := m.databaseDrv.(*dStub.Stub)\n\tif err := dbDrv.SetVersion(0, true); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tmigr, err := NewMigration(nil, \"\", 1, 2)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\terr = m.Run(migr)\n\tif _, ok := err.(ErrDirty); !ok {\n\t\tt.Fatalf(\"expected ErrDirty, got %v\", err)\n\t}\n}\n\nfunc TestForce(t *testing.T) {\n\tm, _ := New(\"stub://\", \"stub://\")\n\tm.sourceDrv.(*sStub.Stub).Migrations = sourceStubMigrations\n\n\tif err := m.Force(7); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tv, dirty, err := m.Version()\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\tif dirty {\n\t\tt.Errorf(\"expected dirty to be false\")\n\t}\n\tif v != 7 {\n\t\tt.Errorf(\"expected version to be 7\")\n\t}\n}\n\nfunc TestForceDirty(t *testing.T) {\n\tm, _ := New(\"stub://\", \"stub://\")\n\tdbDrv := m.databaseDrv.(*dStub.Stub)\n\tif err := dbDrv.SetVersion(0, true); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tif err := m.Force(1); err != nil {\n\t\tt.Fatal(err)\n\t}\n}\n\nfunc TestRead(t *testing.T) {\n\tm, _ := New(\"stub://\", \"stub://\")\n\tm.sourceDrv.(*sStub.Stub).Migrations = sourceStubMigrations\n\n\ttt := []struct {\n\t\tfrom             int\n\t\tto               int\n\t\texpectErr        error\n\t\texpectMigrations migrationSequence\n\t}{\n\t\t{from: -1, to: -1, expectErr: ErrNoChange},\n\t\t{from: -1, to: 0, expectErr: os.ErrNotExist},\n\t\t{from: -1, to: 1, expectErr: nil, expectMigrations: newMigSeq(M(1))},\n\t\t{from: -1, to: 2, expectErr: os.ErrNotExist},\n\t\t{from: -1, to: 3, expectErr: nil, expectMigrations: newMigSeq(M(1), M(3))},\n\t\t{from: -1, to: 4, expectErr: nil, expectMigrations: newMigSeq(M(1), M(3), M(4))},\n\t\t{from: -1, to: 5, expectErr: nil, expectMigrations: newMigSeq(M(1), M(3), M(4), M(5))},\n\t\t{from: -1, to: 6, expectErr: os.ErrNotExist},\n\t\t{from: -1, to: 7, expectErr: nil, expectMigrations: newMigSeq(M(1), M(3), M(4), M(5), M(7))},\n\t\t{from: -1, to: 8, expectErr: os.ErrNotExist},\n\n\t\t{from: 0, to: -1, expectErr: os.ErrNotExist},\n\t\t{from: 0, to: 0, expectErr: os.ErrNotExist},\n\t\t{from: 0, to: 1, expectErr: os.ErrNotExist},\n\t\t{from: 0, to: 2, expectErr: os.ErrNotExist},\n\t\t{from: 0, to: 3, expectErr: os.ErrNotExist},\n\t\t{from: 0, to: 4, expectErr: os.ErrNotExist},\n\t\t{from: 0, to: 5, expectErr: os.ErrNotExist},\n\t\t{from: 0, to: 6, expectErr: os.ErrNotExist},\n\t\t{from: 0, to: 7, expectErr: os.ErrNotExist},\n\t\t{from: 0, to: 8, expectErr: os.ErrNotExist},\n\n\t\t{from: 1, to: -1, expectErr: nil, expectMigrations: newMigSeq(M(1, -1))},\n\t\t{from: 1, to: 0, expectErr: os.ErrNotExist},\n\t\t{from: 1, to: 1, expectErr: ErrNoChange},\n\t\t{from: 1, to: 2, expectErr: os.ErrNotExist},\n\t\t{from: 1, to: 3, expectErr: nil, expectMigrations: newMigSeq(M(3))},\n\t\t{from: 1, to: 4, expectErr: nil, expectMigrations: newMigSeq(M(3), M(4))},\n\t\t{from: 1, to: 5, expectErr: nil, expectMigrations: newMigSeq(M(3), M(4), M(5))},\n\t\t{from: 1, to: 6, expectErr: os.ErrNotExist},\n\t\t{from: 1, to: 7, expectErr: nil, expectMigrations: newMigSeq(M(3), M(4), M(5), M(7))},\n\t\t{from: 1, to: 8, expectErr: os.ErrNotExist},\n\n\t\t{from: 2, to: -1, expectErr: os.ErrNotExist},\n\t\t{from: 2, to: 0, expectErr: os.ErrNotExist},\n\t\t{from: 2, to: 1, expectErr: os.ErrNotExist},\n\t\t{from: 2, to: 2, expectErr: os.ErrNotExist},\n\t\t{from: 2, to: 3, expectErr: os.ErrNotExist},\n\t\t{from: 2, to: 4, expectErr: os.ErrNotExist},\n\t\t{from: 2, to: 5, expectErr: os.ErrNotExist},\n\t\t{from: 2, to: 6, expectErr: os.ErrNotExist},\n\t\t{from: 2, to: 7, expectErr: os.ErrNotExist},\n\t\t{from: 2, to: 8, expectErr: os.ErrNotExist},\n\n\t\t{from: 3, to: -1, expectErr: nil, expectMigrations: newMigSeq(M(3, 1), M(1, -1))},\n\t\t{from: 3, to: 0, expectErr: os.ErrNotExist},\n\t\t{from: 3, to: 1, expectErr: nil, expectMigrations: newMigSeq(M(3, 1))},\n\t\t{from: 3, to: 2, expectErr: os.ErrNotExist},\n\t\t{from: 3, to: 3, expectErr: ErrNoChange},\n\t\t{from: 3, to: 4, expectErr: nil, expectMigrations: newMigSeq(M(4))},\n\t\t{from: 3, to: 5, expectErr: nil, expectMigrations: newMigSeq(M(4), M(5))},\n\t\t{from: 3, to: 6, expectErr: os.ErrNotExist},\n\t\t{from: 3, to: 7, expectErr: nil, expectMigrations: newMigSeq(M(4), M(5), M(7))},\n\t\t{from: 3, to: 8, expectErr: os.ErrNotExist},\n\n\t\t{from: 4, to: -1, expectErr: nil, expectMigrations: newMigSeq(M(4, 3), M(3, 1), M(1, -1))},\n\t\t{from: 4, to: 0, expectErr: os.ErrNotExist},\n\t\t{from: 4, to: 1, expectErr: nil, expectMigrations: newMigSeq(M(4, 3), M(3, 1))},\n\t\t{from: 4, to: 2, expectErr: os.ErrNotExist},\n\t\t{from: 4, to: 3, expectErr: nil, expectMigrations: newMigSeq(M(4, 3))},\n\t\t{from: 4, to: 4, expectErr: ErrNoChange},\n\t\t{from: 4, to: 5, expectErr: nil, expectMigrations: newMigSeq(M(5))},\n\t\t{from: 4, to: 6, expectErr: os.ErrNotExist},\n\t\t{from: 4, to: 7, expectErr: nil, expectMigrations: newMigSeq(M(5), M(7))},\n\t\t{from: 4, to: 8, expectErr: os.ErrNotExist},\n\n\t\t{from: 5, to: -1, expectErr: nil, expectMigrations: newMigSeq(M(5, 4), M(4, 3), M(3, 1), M(1, -1))},\n\t\t{from: 5, to: 0, expectErr: os.ErrNotExist},\n\t\t{from: 5, to: 1, expectErr: nil, expectMigrations: newMigSeq(M(5, 4), M(4, 3), M(3, 1))},\n\t\t{from: 5, to: 2, expectErr: os.ErrNotExist},\n\t\t{from: 5, to: 3, expectErr: nil, expectMigrations: newMigSeq(M(5, 4), M(4, 3))},\n\t\t{from: 5, to: 4, expectErr: nil, expectMigrations: newMigSeq(M(5, 4))},\n\t\t{from: 5, to: 5, expectErr: ErrNoChange},\n\t\t{from: 5, to: 6, expectErr: os.ErrNotExist},\n\t\t{from: 5, to: 7, expectErr: nil, expectMigrations: newMigSeq(M(7))},\n\t\t{from: 5, to: 8, expectErr: os.ErrNotExist},\n\n\t\t{from: 6, to: -1, expectErr: os.ErrNotExist},\n\t\t{from: 6, to: 0, expectErr: os.ErrNotExist},\n\t\t{from: 6, to: 1, expectErr: os.ErrNotExist},\n\t\t{from: 6, to: 2, expectErr: os.ErrNotExist},\n\t\t{from: 6, to: 3, expectErr: os.ErrNotExist},\n\t\t{from: 6, to: 4, expectErr: os.ErrNotExist},\n\t\t{from: 6, to: 5, expectErr: os.ErrNotExist},\n\t\t{from: 6, to: 6, expectErr: os.ErrNotExist},\n\t\t{from: 6, to: 7, expectErr: os.ErrNotExist},\n\t\t{from: 6, to: 8, expectErr: os.ErrNotExist},\n\n\t\t{from: 7, to: -1, expectErr: nil, expectMigrations: newMigSeq(M(7, 5), M(5, 4), M(4, 3), M(3, 1), M(1, -1))},\n\t\t{from: 7, to: 0, expectErr: os.ErrNotExist},\n\t\t{from: 7, to: 1, expectErr: nil, expectMigrations: newMigSeq(M(7, 5), M(5, 4), M(4, 3), M(3, 1))},\n\t\t{from: 7, to: 2, expectErr: os.ErrNotExist},\n\t\t{from: 7, to: 3, expectErr: nil, expectMigrations: newMigSeq(M(7, 5), M(5, 4), M(4, 3))},\n\t\t{from: 7, to: 4, expectErr: nil, expectMigrations: newMigSeq(M(7, 5), M(5, 4))},\n\t\t{from: 7, to: 5, expectErr: nil, expectMigrations: newMigSeq(M(7, 5))},\n\t\t{from: 7, to: 6, expectErr: os.ErrNotExist},\n\t\t{from: 7, to: 7, expectErr: ErrNoChange},\n\t\t{from: 7, to: 8, expectErr: os.ErrNotExist},\n\n\t\t{from: 8, to: -1, expectErr: os.ErrNotExist},\n\t\t{from: 8, to: 0, expectErr: os.ErrNotExist},\n\t\t{from: 8, to: 1, expectErr: os.ErrNotExist},\n\t\t{from: 8, to: 2, expectErr: os.ErrNotExist},\n\t\t{from: 8, to: 3, expectErr: os.ErrNotExist},\n\t\t{from: 8, to: 4, expectErr: os.ErrNotExist},\n\t\t{from: 8, to: 5, expectErr: os.ErrNotExist},\n\t\t{from: 8, to: 6, expectErr: os.ErrNotExist},\n\t\t{from: 8, to: 7, expectErr: os.ErrNotExist},\n\t\t{from: 8, to: 8, expectErr: os.ErrNotExist},\n\t}\n\n\tfor i, v := range tt {\n\t\tret := make(chan interface{})\n\t\tgo m.read(v.from, v.to, ret)\n\t\tmigrations, err := migrationsFromChannel(ret)\n\n\t\tif (v.expectErr == os.ErrNotExist && !errors.Is(err, os.ErrNotExist)) ||\n\t\t\t(v.expectErr != os.ErrNotExist && v.expectErr != err) {\n\t\t\tt.Errorf(\"expected %v, got %v, in %v\", v.expectErr, err, i)\n\t\t\tt.Logf(\"%v, in %v\", migrations, i)\n\t\t}\n\t\tif len(v.expectMigrations) > 0 {\n\t\t\tequalMigSeq(t, i, v.expectMigrations, migrations)\n\t\t}\n\t}\n}\n\nfunc TestReadUp(t *testing.T) {\n\tm, _ := New(\"stub://\", \"stub://\")\n\tm.sourceDrv.(*sStub.Stub).Migrations = sourceStubMigrations\n\n\ttt := []struct {\n\t\tfrom             int\n\t\tlimit            int // -1 means no limit\n\t\texpectErr        error\n\t\texpectMigrations migrationSequence\n\t}{\n\t\t{from: -1, limit: -1, expectErr: nil, expectMigrations: newMigSeq(M(1), M(3), M(4), M(5), M(7))},\n\t\t{from: -1, limit: 0, expectErr: ErrNoChange},\n\t\t{from: -1, limit: 1, expectErr: nil, expectMigrations: newMigSeq(M(1))},\n\t\t{from: -1, limit: 2, expectErr: nil, expectMigrations: newMigSeq(M(1), M(3))},\n\n\t\t{from: 0, limit: -1, expectErr: os.ErrNotExist},\n\t\t{from: 0, limit: 0, expectErr: os.ErrNotExist},\n\t\t{from: 0, limit: 1, expectErr: os.ErrNotExist},\n\t\t{from: 0, limit: 2, expectErr: os.ErrNotExist},\n\n\t\t{from: 1, limit: -1, expectErr: nil, expectMigrations: newMigSeq(M(3), M(4), M(5), M(7))},\n\t\t{from: 1, limit: 0, expectErr: ErrNoChange},\n\t\t{from: 1, limit: 1, expectErr: nil, expectMigrations: newMigSeq(M(3))},\n\t\t{from: 1, limit: 2, expectErr: nil, expectMigrations: newMigSeq(M(3), M(4))},\n\n\t\t{from: 2, limit: -1, expectErr: os.ErrNotExist},\n\t\t{from: 2, limit: 0, expectErr: os.ErrNotExist},\n\t\t{from: 2, limit: 1, expectErr: os.ErrNotExist},\n\t\t{from: 2, limit: 2, expectErr: os.ErrNotExist},\n\n\t\t{from: 3, limit: -1, expectErr: nil, expectMigrations: newMigSeq(M(4), M(5), M(7))},\n\t\t{from: 3, limit: 0, expectErr: ErrNoChange},\n\t\t{from: 3, limit: 1, expectErr: nil, expectMigrations: newMigSeq(M(4))},\n\t\t{from: 3, limit: 2, expectErr: nil, expectMigrations: newMigSeq(M(4), M(5))},\n\n\t\t{from: 4, limit: -1, expectErr: nil, expectMigrations: newMigSeq(M(5), M(7))},\n\t\t{from: 4, limit: 0, expectErr: ErrNoChange},\n\t\t{from: 4, limit: 1, expectErr: nil, expectMigrations: newMigSeq(M(5))},\n\t\t{from: 4, limit: 2, expectErr: nil, expectMigrations: newMigSeq(M(5), M(7))},\n\n\t\t{from: 5, limit: -1, expectErr: nil, expectMigrations: newMigSeq(M(7))},\n\t\t{from: 5, limit: 0, expectErr: ErrNoChange},\n\t\t{from: 5, limit: 1, expectErr: nil, expectMigrations: newMigSeq(M(7))},\n\t\t{from: 5, limit: 2, expectErr: ErrShortLimit{1}, expectMigrations: newMigSeq(M(7))},\n\n\t\t{from: 6, limit: -1, expectErr: os.ErrNotExist},\n\t\t{from: 6, limit: 0, expectErr: os.ErrNotExist},\n\t\t{from: 6, limit: 1, expectErr: os.ErrNotExist},\n\t\t{from: 6, limit: 2, expectErr: os.ErrNotExist},\n\n\t\t{from: 7, limit: -1, expectErr: ErrNoChange},\n\t\t{from: 7, limit: 0, expectErr: ErrNoChange},\n\t\t{from: 7, limit: 1, expectErr: os.ErrNotExist},\n\t\t{from: 7, limit: 2, expectErr: os.ErrNotExist},\n\n\t\t{from: 8, limit: -1, expectErr: os.ErrNotExist},\n\t\t{from: 8, limit: 0, expectErr: os.ErrNotExist},\n\t\t{from: 8, limit: 1, expectErr: os.ErrNotExist},\n\t\t{from: 8, limit: 2, expectErr: os.ErrNotExist},\n\t}\n\n\tfor i, v := range tt {\n\t\tret := make(chan interface{})\n\t\tgo m.readUp(v.from, v.limit, ret)\n\t\tmigrations, err := migrationsFromChannel(ret)\n\n\t\tif (v.expectErr == os.ErrNotExist && !errors.Is(err, os.ErrNotExist)) ||\n\t\t\t(v.expectErr != os.ErrNotExist && v.expectErr != err) {\n\t\t\tt.Errorf(\"expected %v, got %v, in %v\", v.expectErr, err, i)\n\t\t\tt.Logf(\"%v, in %v\", migrations, i)\n\t\t}\n\t\tif len(v.expectMigrations) > 0 {\n\t\t\tequalMigSeq(t, i, v.expectMigrations, migrations)\n\t\t}\n\t}\n}\n\nfunc TestReadDown(t *testing.T) {\n\tm, _ := New(\"stub://\", \"stub://\")\n\tm.sourceDrv.(*sStub.Stub).Migrations = sourceStubMigrations\n\n\ttt := []struct {\n\t\tfrom             int\n\t\tlimit            int // -1 means no limit\n\t\texpectErr        error\n\t\texpectMigrations migrationSequence\n\t}{\n\t\t{from: -1, limit: -1, expectErr: ErrNoChange},\n\t\t{from: -1, limit: 0, expectErr: ErrNoChange},\n\t\t{from: -1, limit: 1, expectErr: os.ErrNotExist},\n\t\t{from: -1, limit: 2, expectErr: os.ErrNotExist},\n\n\t\t{from: 0, limit: -1, expectErr: os.ErrNotExist},\n\t\t{from: 0, limit: 0, expectErr: os.ErrNotExist},\n\t\t{from: 0, limit: 1, expectErr: os.ErrNotExist},\n\t\t{from: 0, limit: 2, expectErr: os.ErrNotExist},\n\n\t\t{from: 1, limit: -1, expectErr: nil, expectMigrations: newMigSeq(M(1, -1))},\n\t\t{from: 1, limit: 0, expectErr: ErrNoChange},\n\t\t{from: 1, limit: 1, expectErr: nil, expectMigrations: newMigSeq(M(1, -1))},\n\t\t{from: 1, limit: 2, expectErr: ErrShortLimit{1}, expectMigrations: newMigSeq(M(1, -1))},\n\n\t\t{from: 2, limit: -1, expectErr: os.ErrNotExist},\n\t\t{from: 2, limit: 0, expectErr: os.ErrNotExist},\n\t\t{from: 2, limit: 1, expectErr: os.ErrNotExist},\n\t\t{from: 2, limit: 2, expectErr: os.ErrNotExist},\n\n\t\t{from: 3, limit: -1, expectErr: nil, expectMigrations: newMigSeq(M(3, 1), M(1, -1))},\n\t\t{from: 3, limit: 0, expectErr: ErrNoChange},\n\t\t{from: 3, limit: 1, expectErr: nil, expectMigrations: newMigSeq(M(3, 1))},\n\t\t{from: 3, limit: 2, expectErr: nil, expectMigrations: newMigSeq(M(3, 1), M(1, -1))},\n\n\t\t{from: 4, limit: -1, expectErr: nil, expectMigrations: newMigSeq(M(4, 3), M(3, 1), M(1, -1))},\n\t\t{from: 4, limit: 0, expectErr: ErrNoChange},\n\t\t{from: 4, limit: 1, expectErr: nil, expectMigrations: newMigSeq(M(4, 3))},\n\t\t{from: 4, limit: 2, expectErr: nil, expectMigrations: newMigSeq(M(4, 3), M(3, 1))},\n\n\t\t{from: 5, limit: -1, expectErr: nil, expectMigrations: newMigSeq(M(5, 4), M(4, 3), M(3, 1), M(1, -1))},\n\t\t{from: 5, limit: 0, expectErr: ErrNoChange},\n\t\t{from: 5, limit: 1, expectErr: nil, expectMigrations: newMigSeq(M(5, 4))},\n\t\t{from: 5, limit: 2, expectErr: nil, expectMigrations: newMigSeq(M(5, 4), M(4, 3))},\n\n\t\t{from: 6, limit: -1, expectErr: os.ErrNotExist},\n\t\t{from: 6, limit: 0, expectErr: os.ErrNotExist},\n\t\t{from: 6, limit: 1, expectErr: os.ErrNotExist},\n\t\t{from: 6, limit: 2, expectErr: os.ErrNotExist},\n\n\t\t{from: 7, limit: -1, expectErr: nil, expectMigrations: newMigSeq(M(7, 5), M(5, 4), M(4, 3), M(3, 1), M(1, -1))},\n\t\t{from: 7, limit: 0, expectErr: ErrNoChange},\n\t\t{from: 7, limit: 1, expectErr: nil, expectMigrations: newMigSeq(M(7, 5))},\n\t\t{from: 7, limit: 2, expectErr: nil, expectMigrations: newMigSeq(M(7, 5), M(5, 4))},\n\n\t\t{from: 8, limit: -1, expectErr: os.ErrNotExist},\n\t\t{from: 8, limit: 0, expectErr: os.ErrNotExist},\n\t\t{from: 8, limit: 1, expectErr: os.ErrNotExist},\n\t\t{from: 8, limit: 2, expectErr: os.ErrNotExist},\n\t}\n\n\tfor i, v := range tt {\n\t\tret := make(chan interface{})\n\t\tgo m.readDown(v.from, v.limit, ret)\n\t\tmigrations, err := migrationsFromChannel(ret)\n\n\t\tif (v.expectErr == os.ErrNotExist && !errors.Is(err, os.ErrNotExist)) ||\n\t\t\t(v.expectErr != os.ErrNotExist && v.expectErr != err) {\n\t\t\tt.Errorf(\"expected %v, got %v, in %v\", v.expectErr, err, i)\n\t\t\tt.Logf(\"%v, in %v\", migrations, i)\n\t\t}\n\t\tif len(v.expectMigrations) > 0 {\n\t\t\tequalMigSeq(t, i, v.expectMigrations, migrations)\n\t\t}\n\t}\n}\n\nfunc TestLock(t *testing.T) {\n\tm, _ := New(\"stub://\", \"stub://\")\n\tif err := m.lock(); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tif err := m.lock(); err == nil {\n\t\tt.Fatal(\"should be locked already\")\n\t}\n}\n\nfunc migrationsFromChannel(ret chan interface{}) ([]*Migration, error) {\n\tslice := make([]*Migration, 0)\n\tfor r := range ret {\n\t\tswitch t := r.(type) {\n\t\tcase error:\n\t\t\treturn slice, t\n\n\t\tcase *Migration:\n\t\t\tslice = append(slice, t)\n\t\t}\n\t}\n\treturn slice, nil\n}\n\ntype migrationSequence []*Migration\n\nfunc newMigSeq(migr ...*Migration) migrationSequence {\n\treturn migr\n}\n\nfunc (m *migrationSequence) add(migr ...*Migration) migrationSequence { // nolint:unused\n\t*m = append(*m, migr...)\n\treturn *m\n}\n\nfunc (m *migrationSequence) bodySequence() []string {\n\tr := make([]string, 0)\n\tfor _, v := range *m {\n\t\tif v.Body != nil {\n\t\t\tbody, err := io.ReadAll(v.Body)\n\t\t\tif err != nil {\n\t\t\t\tpanic(err) // that should never happen\n\t\t\t}\n\n\t\t\t// reset body reader\n\t\t\t// TODO: is there a better/nicer way?\n\t\t\tv.Body = io.NopCloser(bytes.NewReader(body))\n\n\t\t\tr = append(r, string(body[:]))\n\t\t} else {\n\t\t\tr = append(r, \"<empty>\")\n\t\t}\n\t}\n\treturn r\n}\n\n// M is a convenience func to create a new *Migration\nfunc M(version uint, targetVersion ...int) *Migration {\n\tif len(targetVersion) > 1 {\n\t\tpanic(\"only one targetVersion allowed\")\n\t}\n\tts := int(version)\n\tif len(targetVersion) == 1 {\n\t\tts = targetVersion[0]\n\t}\n\n\tm, _ := New(\"stub://\", \"stub://\")\n\tm.sourceDrv.(*sStub.Stub).Migrations = sourceStubMigrations\n\tmigr, err := m.newMigration(version, ts)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn migr\n}\n\n// mr is a convenience func to create a new *Migration from the raw database query\nfunc mr(value string) *Migration {\n\treturn &Migration{\n\t\tBody: io.NopCloser(strings.NewReader(value)),\n\t}\n}\n\nfunc equalMigSeq(t *testing.T, i int, expected, got migrationSequence) {\n\tif len(expected) != len(got) {\n\t\tt.Errorf(\"expected migrations %v, got %v, in %v\", expected, got, i)\n\n\t} else {\n\t\tfor ii := 0; ii < len(expected); ii++ {\n\t\t\tif expected[ii].Version != got[ii].Version {\n\t\t\t\tt.Errorf(\"expected version %v, got %v, in %v\", expected[ii].Version, got[ii].Version, i)\n\t\t\t}\n\n\t\t\tif expected[ii].TargetVersion != got[ii].TargetVersion {\n\t\t\t\tt.Errorf(\"expected targetVersion %v, got %v, in %v\", expected[ii].TargetVersion, got[ii].TargetVersion, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunc equalDbSeq(t *testing.T, i int, expected migrationSequence, got *dStub.Stub) {\n\tbs := expected.bodySequence()\n\tif !got.EqualSequence(bs) {\n\t\tt.Fatalf(\"\\nexpected sequence %v,\\ngot               %v, in %v\", bs, got.MigrationSequence, i)\n\t}\n}\n"
        },
        {
          "name": "migration.go",
          "type": "blob",
          "size": 4.5498046875,
          "content": "package migrate\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"io\"\n\t\"time\"\n)\n\n// DefaultBufferSize sets the in memory buffer size (in Bytes) for every\n// pre-read migration (see DefaultPrefetchMigrations).\nvar DefaultBufferSize = uint(100000)\n\n// Migration holds information about a migration.\n// It is initially created from data coming from the source and then\n// used when run against the database.\ntype Migration struct {\n\t// Identifier can be any string to help identifying\n\t// the migration in the source.\n\tIdentifier string\n\n\t// Version is the version of this migration.\n\tVersion uint\n\n\t// TargetVersion is the migration version after this migration\n\t// has been applied to the database.\n\t// Can be -1, implying that this is a NilVersion.\n\tTargetVersion int\n\n\t// Body holds an io.ReadCloser to the source.\n\tBody io.ReadCloser\n\n\t// BufferedBody holds an buffered io.Reader to the underlying Body.\n\tBufferedBody io.Reader\n\n\t// BufferSize defaults to DefaultBufferSize\n\tBufferSize uint\n\n\t// bufferWriter holds an io.WriteCloser and pipes to BufferBody.\n\t// It's an *Closer for flow control.\n\tbufferWriter io.WriteCloser\n\n\t// Scheduled is the time when the migration was scheduled/ queued.\n\tScheduled time.Time\n\n\t// StartedBuffering is the time when buffering of the migration source started.\n\tStartedBuffering time.Time\n\n\t// FinishedBuffering is the time when buffering of the migration source finished.\n\tFinishedBuffering time.Time\n\n\t// FinishedReading is the time when the migration source is fully read.\n\tFinishedReading time.Time\n\n\t// BytesRead holds the number of Bytes read from the migration source.\n\tBytesRead int64\n}\n\n// NewMigration returns a new Migration and sets the body, identifier,\n// version and targetVersion. Body can be nil, which turns this migration\n// into a \"NilMigration\". If no identifier is provided, it will default to \"<empty>\".\n// targetVersion can be -1, implying it is a NilVersion.\n//\n// What is a NilMigration?\n// Usually each migration version coming from source is expected to have an\n// Up and Down migration. This is not a hard requirement though, leading to\n// a situation where only the Up or Down migration is present. So let's say\n// the user wants to migrate up to a version that doesn't have the actual Up\n// migration, in that case we still want to apply the version, but with an empty\n// body. We are calling that a NilMigration, a migration with an empty body.\n//\n// What is a NilVersion?\n// NilVersion is a const(-1). When running down migrations and we are at the\n// last down migration, there is no next down migration, the targetVersion should\n// be nil. Nil in this case is represented by -1 (because type int).\nfunc NewMigration(body io.ReadCloser, identifier string,\n\tversion uint, targetVersion int) (*Migration, error) {\n\ttnow := time.Now()\n\tm := &Migration{\n\t\tIdentifier:    identifier,\n\t\tVersion:       version,\n\t\tTargetVersion: targetVersion,\n\t\tScheduled:     tnow,\n\t}\n\n\tif body == nil {\n\t\tif len(identifier) == 0 {\n\t\t\tm.Identifier = \"<empty>\"\n\t\t}\n\n\t\tm.StartedBuffering = tnow\n\t\tm.FinishedBuffering = tnow\n\t\tm.FinishedReading = tnow\n\t\treturn m, nil\n\t}\n\n\tbr, bw := io.Pipe()\n\tm.Body = body // want to simulate low latency? newSlowReader(body)\n\tm.BufferSize = DefaultBufferSize\n\tm.BufferedBody = br\n\tm.bufferWriter = bw\n\treturn m, nil\n}\n\n// String implements string.Stringer and is used in tests.\nfunc (m *Migration) String() string {\n\treturn fmt.Sprintf(\"%v [%v=>%v]\", m.Identifier, m.Version, m.TargetVersion)\n}\n\n// LogString returns a string describing this migration to humans.\nfunc (m *Migration) LogString() string {\n\tdirectionStr := \"u\"\n\tif m.TargetVersion < int(m.Version) {\n\t\tdirectionStr = \"d\"\n\t}\n\treturn fmt.Sprintf(\"%v/%v %v\", m.Version, directionStr, m.Identifier)\n}\n\n// Buffer buffers Body up to BufferSize.\n// Calling this function blocks. Call with goroutine.\nfunc (m *Migration) Buffer() error {\n\tif m.Body == nil {\n\t\treturn nil\n\t}\n\n\tm.StartedBuffering = time.Now()\n\n\tb := bufio.NewReaderSize(m.Body, int(m.BufferSize))\n\n\t// start reading from body, peek won't move the read pointer though\n\t// poor man's solution?\n\tif _, err := b.Peek(int(m.BufferSize)); err != nil && err != io.EOF {\n\t\treturn err\n\t}\n\n\tm.FinishedBuffering = time.Now()\n\n\t// write to bufferWriter, this will block until\n\t// something starts reading from m.Buffer\n\tn, err := b.WriteTo(m.bufferWriter)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tm.FinishedReading = time.Now()\n\tm.BytesRead = n\n\n\t// close bufferWriter so Buffer knows that there is no\n\t// more data coming\n\tif err := m.bufferWriter.Close(); err != nil {\n\t\treturn err\n\t}\n\n\t// it's safe to close the Body too\n\tif err := m.Body.Close(); err != nil {\n\t\treturn err\n\t}\n\n\treturn nil\n}\n"
        },
        {
          "name": "migration_test.go",
          "type": "blob",
          "size": 1.53515625,
          "content": "package migrate\n\nimport (\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"strings\"\n)\n\nfunc ExampleNewMigration() {\n\t// Create a dummy migration body, this is coming from the source usually.\n\tbody := io.NopCloser(strings.NewReader(\"dumy migration that creates users table\"))\n\n\t// Create a new Migration that represents version 1486686016.\n\t// Once this migration has been applied to the database, the new\n\t// migration version will be 1486689359.\n\tmigr, err := NewMigration(body, \"create_users_table\", 1486686016, 1486689359)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tfmt.Print(migr.LogString())\n\t// Output:\n\t// 1486686016/u create_users_table\n}\n\nfunc ExampleNewMigration_nilMigration() {\n\t// Create a new Migration that represents a NilMigration.\n\t// Once this migration has been applied to the database, the new\n\t// migration version will be 1486689359.\n\tmigr, err := NewMigration(nil, \"\", 1486686016, 1486689359)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tfmt.Print(migr.LogString())\n\t// Output:\n\t// 1486686016/u <empty>\n}\n\nfunc ExampleNewMigration_nilVersion() {\n\t// Create a dummy migration body, this is coming from the source usually.\n\tbody := io.NopCloser(strings.NewReader(\"dumy migration that deletes users table\"))\n\n\t// Create a new Migration that represents version 1486686016.\n\t// This is the last available down migration, so the migration version\n\t// will be -1, meaning NilVersion once this migration ran.\n\tmigr, err := NewMigration(body, \"drop_users_table\", 1486686016, -1)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tfmt.Print(migr.LogString())\n\t// Output:\n\t// 1486686016/d drop_users_table\n}\n"
        },
        {
          "name": "source",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing",
          "type": "tree",
          "content": null
        },
        {
          "name": "util.go",
          "type": "blob",
          "size": 1.271484375,
          "content": "package migrate\n\nimport (\n\t\"fmt\"\n\tnurl \"net/url\"\n\t\"strings\"\n)\n\n// MultiError holds multiple errors.\n//\n// Deprecated: Use github.com/hashicorp/go-multierror instead\ntype MultiError struct {\n\tErrs []error\n}\n\n// NewMultiError returns an error type holding multiple errors.\n//\n// Deprecated: Use github.com/hashicorp/go-multierror instead\nfunc NewMultiError(errs ...error) MultiError {\n\tcompactErrs := make([]error, 0)\n\tfor _, e := range errs {\n\t\tif e != nil {\n\t\t\tcompactErrs = append(compactErrs, e)\n\t\t}\n\t}\n\treturn MultiError{compactErrs}\n}\n\n// Error implements error. Multiple errors are concatenated with 'and's.\nfunc (m MultiError) Error() string {\n\tvar strs = make([]string, 0)\n\tfor _, e := range m.Errs {\n\t\tif len(e.Error()) > 0 {\n\t\t\tstrs = append(strs, e.Error())\n\t\t}\n\t}\n\treturn strings.Join(strs, \" and \")\n}\n\n// suint safely converts int to uint\n// see https://goo.gl/wEcqof\n// see https://goo.gl/pai7Dr\nfunc suint(n int) uint {\n\tif n < 0 {\n\t\tpanic(fmt.Sprintf(\"suint(%v) expects input >= 0\", n))\n\t}\n\treturn uint(n)\n}\n\n// FilterCustomQuery filters all query values starting with `x-`\nfunc FilterCustomQuery(u *nurl.URL) *nurl.URL {\n\tux := *u\n\tvx := make(nurl.Values)\n\tfor k, v := range ux.Query() {\n\t\tif len(k) <= 1 || k[0:2] != \"x-\" {\n\t\t\tvx[k] = v\n\t\t}\n\t}\n\tux.RawQuery = vx.Encode()\n\treturn &ux\n}\n"
        },
        {
          "name": "util_test.go",
          "type": "blob",
          "size": 0.6396484375,
          "content": "package migrate\n\nimport (\n\tnurl \"net/url\"\n\t\"testing\"\n)\n\nfunc TestSuintPanicsWithNegativeInput(t *testing.T) {\n\tdefer func() {\n\t\tif r := recover(); r == nil {\n\t\t\tt.Fatal(\"expected suint to panic for -1\")\n\t\t}\n\t}()\n\tsuint(-1)\n}\n\nfunc TestSuint(t *testing.T) {\n\tif u := suint(0); u != 0 {\n\t\tt.Fatalf(\"expected 0, got %v\", u)\n\t}\n}\n\nfunc TestFilterCustomQuery(t *testing.T) {\n\tn, err := nurl.Parse(\"foo://host?a=b&x-custom=foo&c=d&ok=y\")\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\tnx := FilterCustomQuery(n).Query()\n\tif nx.Get(\"x-custom\") != \"\" {\n\t\tt.Fatalf(\"didn't expect x-custom\")\n\t}\n\tif nx.Get(\"ok\") != \"y\" {\n\t\tt.Fatalf(\"expected ok=y, got %v\", nx.Get(\"ok\"))\n\t}\n}\n"
        }
      ]
    }
  ]
}