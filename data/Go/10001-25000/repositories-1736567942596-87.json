{
  "metadata": {
    "timestamp": 1736567942596,
    "page": 87,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "golangci/golangci-lint",
      "stars": 16011,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".custom-gcl.reference.yml",
          "type": "blob",
          "size": 1.0478515625,
          "content": "# The golangci-lint version used to build the custom binary.\n# Require.\nversion: v1.56.2\n\n# The name of the custom binary.\n# Optional.\n# Default: custom-gcl\nname: custom-golangci-lint\n\n# The directory path used to store the custom binary.\n# Optional.\n# Default: .\ndestination: ./my/path/\n\n# The list of the plugins to integrate inside the custom binary.\nplugins:\n  # a plugin from a Go proxy\n  - module: 'github.com/example/plugin3'\n    version: v1.2.3\n\n  # a plugin from a Go proxy (with a specific import path)\n  - module: 'github.com/example/plugin4'\n    import: 'github.com/example/plugin4/foo'\n    version: v1.0.0\n\n  # a plugin from local source (with absolute path)\n  - module: 'github.com/example/plugin2'\n    path: /my/local/path/plugin2\n\n  # a plugin from local source (with relative path)\n  - module: 'github.com/example/plugin1'\n    path: ./my/local/path/plugin1\n\n  # a plugin from local source (with absolute path and a specific import path)\n  - module: 'github.com/example/plugin2'\n    import: 'github.com/example/plugin4/foo'\n    path: /my/local/path/plugin2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0712890625,
          "content": "go.sum linguist-generated\n*       text=auto eol=lf\n*.ps1   text eol=crlf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3291015625,
          "content": "*.test\n.DS_Store\n/*.pdf\n/*.pprof\n/*.txt\n/test.lock\n/.idea/\n/.vscode/\n/dist/\n/golangci-lint\n/golangci-lint.exe\n/test/path\n/tools/Dracula.itermcolors\n/tools/dist/\n/tools/godownloader\n/tools/goreleaser\n/tools/node_modules\n/tools/svg-term\n/vendor/\ncoverage.out\ncoverage.xml\n/custom-golangci-lint\n/custom-gcl\n.custom-gcl.yml\n.custom-gcl.yaml\n"
        },
        {
          "name": ".golangci.next.reference.yml",
          "type": "blob",
          "size": 147.73828125,
          "content": "# This file contains all available configuration options\n# with their default values (in comments).\n#\n# This file is not a configuration example,\n# it contains the exhaustive configuration with explanations of the options.\n\nlinters:\n  # Disable all linters.\n  # Default: false\n  disable-all: true\n  # Enable specific linter\n  # https://golangci-lint.run/usage/linters/#enabled-by-default\n  enable:\n    - asasalint\n    - asciicheck\n    - bidichk\n    - bodyclose\n    - canonicalheader\n    - containedctx\n    - contextcheck\n    - copyloopvar\n    - cyclop\n    - decorder\n    - depguard\n    - dogsled\n    - dupl\n    - dupword\n    - durationcheck\n    - err113\n    - errcheck\n    - errchkjson\n    - errname\n    - errorlint\n    - execinquery\n    - exhaustive\n    - exhaustruct\n    - exportloopref\n    - exptostd\n    - fatcontext\n    - forbidigo\n    - forcetypeassert\n    - funlen\n    - gci\n    - ginkgolinter\n    - gocheckcompilerdirectives\n    - gochecknoglobals\n    - gochecknoinits\n    - gochecksumtype\n    - gocognit\n    - goconst\n    - gocritic\n    - gocyclo\n    - godot\n    - godox\n    - gofmt\n    - gofumpt\n    - goheader\n    - goimports\n    - gomoddirectives\n    - gomodguard\n    - goprintffuncname\n    - gosec\n    - gosimple\n    - gosmopolitan\n    - govet\n    - grouper\n    - iface\n    - importas\n    - inamedparam\n    - ineffassign\n    - interfacebloat\n    - intrange\n    - ireturn\n    - lll\n    - loggercheck\n    - maintidx\n    - makezero\n    - mirror\n    - misspell\n    - mnd\n    - musttag\n    - nakedret\n    - nestif\n    - nilerr\n    - nilnesserr\n    - nilnil\n    - nlreturn\n    - noctx\n    - nolintlint\n    - nonamedreturns\n    - nosprintfhostport\n    - paralleltest\n    - perfsprint\n    - prealloc\n    - predeclared\n    - promlinter\n    - protogetter\n    - reassign\n    - recvcheck\n    - revive\n    - rowserrcheck\n    - sloglint\n    - spancheck\n    - sqlclosecheck\n    - staticcheck\n    - stylecheck\n    - tagalign\n    - tagliatelle\n    - tenv\n    - testableexamples\n    - testifylint\n    - testpackage\n    - thelper\n    - tparallel\n    - unconvert\n    - unparam\n    - unused\n    - usestdlibvars\n    - usetesting\n    - varnamelen\n    - wastedassign\n    - whitespace\n    - wrapcheck\n    - wsl\n    - zerologlint\n\n  # Enable all available linters.\n  # Default: false\n  enable-all: true\n  # Disable specific linter\n  # https://golangci-lint.run/usage/linters/#disabled-by-default\n  disable:\n    - asasalint\n    - asciicheck\n    - bidichk\n    - bodyclose\n    - canonicalheader\n    - containedctx\n    - contextcheck\n    - copyloopvar\n    - cyclop\n    - decorder\n    - depguard\n    - dogsled\n    - dupl\n    - dupword\n    - durationcheck\n    - err113\n    - errcheck\n    - errchkjson\n    - errname\n    - errorlint\n    - execinquery\n    - exhaustive\n    - exhaustruct\n    - exportloopref\n    - exptostd\n    - fatcontext\n    - forbidigo\n    - forcetypeassert\n    - funlen\n    - gci\n    - ginkgolinter\n    - gocheckcompilerdirectives\n    - gochecknoglobals\n    - gochecknoinits\n    - gochecksumtype\n    - gocognit\n    - goconst\n    - gocritic\n    - gocyclo\n    - godot\n    - godox\n    - gofmt\n    - gofumpt\n    - goheader\n    - goimports\n    - gomoddirectives\n    - gomodguard\n    - goprintffuncname\n    - gosec\n    - gosimple\n    - gosmopolitan\n    - govet\n    - grouper\n    - iface\n    - importas\n    - inamedparam\n    - ineffassign\n    - interfacebloat\n    - intrange\n    - ireturn\n    - lll\n    - loggercheck\n    - maintidx\n    - makezero\n    - mirror\n    - misspell\n    - mnd\n    - musttag\n    - nakedret\n    - nestif\n    - nilerr\n    - nilnesserr\n    - nilnil\n    - nlreturn\n    - noctx\n    - nolintlint\n    - nonamedreturns\n    - nosprintfhostport\n    - paralleltest\n    - perfsprint\n    - prealloc\n    - predeclared\n    - promlinter\n    - protogetter\n    - reassign\n    - recvcheck\n    - revive\n    - rowserrcheck\n    - sloglint\n    - spancheck\n    - sqlclosecheck\n    - staticcheck\n    - stylecheck\n    - tagalign\n    - tagliatelle\n    - tenv\n    - testableexamples\n    - testifylint\n    - testpackage\n    - thelper\n    - tparallel\n    - unconvert\n    - unparam\n    - unused\n    - usestdlibvars\n    - usetesting\n    - varnamelen\n    - wastedassign\n    - whitespace\n    - wrapcheck\n    - wsl\n    - zerologlint\n    - deadcode # Deprecated\n    - exhaustivestruct # Deprecated\n    - golint # Deprecated\n    - ifshort # Deprecated\n    - interfacer # Deprecated\n    - maligned # Deprecated\n    - gomnd # Deprecated\n    - nosnakecase # Deprecated\n    - scopelint # Deprecated\n    - structcheck # Deprecated\n    - varcheck # Deprecated\n\n  # Enable presets.\n  # https://golangci-lint.run/usage/linters\n  # Default: []\n  presets:\n    - bugs\n    - comment\n    - complexity\n    - error\n    - format\n    - import\n    - metalinter\n    - module\n    - performance\n    - sql\n    - style\n    - test\n    - unused\n\n  # Enable only fast linters from enabled linters set (first run won't be fast)\n  # Default: false\n  fast: true\n\n\n# All available settings of specific linters.\nlinters-settings:\n  asasalint:\n    # To specify a set of function names to exclude.\n    # The values are merged with the builtin exclusions.\n    # The builtin exclusions can be disabled by setting `use-builtin-exclusions` to `false`.\n    # Default: [\"^(fmt|log|logger|t|)\\.(Print|Fprint|Sprint|Fatal|Panic|Error|Warn|Warning|Info|Debug|Log)(|f|ln)$\"]\n    exclude:\n      - Append\n      - \\.Wrapf\n    # To enable/disable the asasalint builtin exclusions of function names.\n    # See the default value of `exclude` to get the builtin exclusions.\n    # Default: true\n    use-builtin-exclusions: false\n    # Ignore *_test.go files.\n    # Default: false\n    ignore-test: true\n\n  bidichk:\n    # The following configurations check for all mentioned invisible Unicode runes.\n    # All runes are enabled by default.\n    left-to-right-embedding: false\n    right-to-left-embedding: false\n    pop-directional-formatting: false\n    left-to-right-override: false\n    right-to-left-override: false\n    left-to-right-isolate: false\n    right-to-left-isolate: false\n    first-strong-isolate: false\n    pop-directional-isolate: false\n\n  copyloopvar:\n    # Check all assigning the loop variable to another variable.\n    # Default: false\n    check-alias: true\n\n  cyclop:\n    # The maximal code complexity to report.\n    # Default: 10\n    max-complexity: 10\n    # The maximal average package complexity.\n    # If it's higher than 0.0 (float) the check is enabled\n    # Default: 0.0\n    package-average: 0.5\n    # Should ignore tests.\n    # Default: false\n    skip-tests: true\n\n  decorder:\n    # Required order of `type`, `const`, `var` and `func` declarations inside a file.\n    # Default: types before constants before variables before functions.\n    dec-order:\n      - type\n      - const\n      - var\n      - func\n\n    # If true, underscore vars (vars with \"_\" as the name) will be ignored at all checks\n    # Default: false (underscore vars are not ignored)\n    ignore-underscore-vars: false\n\n    # If true, order of declarations is not checked at all.\n    # Default: true (disabled)\n    disable-dec-order-check: false\n\n    # If true, `init` func can be anywhere in file (does not have to be declared before all other functions).\n    # Default: true (disabled)\n    disable-init-func-first-check: false\n\n    # If true, multiple global `type`, `const` and `var` declarations are allowed.\n    # Default: true (disabled)\n    disable-dec-num-check: false\n\n    # If true, type declarations will be ignored for dec num check\n    # Default: false (type statements are not ignored)\n    disable-type-dec-num-check: false\n\n    # If true, const declarations will be ignored for dec num check\n    # Default: false (const statements are not ignored)\n    disable-const-dec-num-check: false\n\n    # If true, var declarations will be ignored for dec num check\n    # Default: false (var statements are not ignored)\n    disable-var-dec-num-check: false\n\n  depguard:\n    # Rules to apply.\n    #\n    # Variables:\n    # - File Variables\n    #   you can still use and exclamation mark ! in front of a variable to say not to use it.\n    #   Example !$test will match any file that is not a go test file.\n    #\n    #   `$all` - matches all go files\n    #   `$test` - matches all go test files\n    #\n    # - Package Variables\n    #\n    #  `$gostd` - matches all of go's standard library (Pulled from `GOROOT`)\n    #\n    # Default: Only allow $gostd in all files.\n    rules:\n      # Name of a rule.\n      main:\n        # Used to determine the package matching priority.\n        # There are three different modes: `original`, `strict`, and `lax`.\n        # Default: \"original\"\n        list-mode: lax\n        # List of file globs that will match this list of settings to compare against.\n        # Default: $all\n        files:\n          - \"!**/*_a _file.go\"\n        # List of allowed packages.\n        allow:\n          - $gostd\n          - github.com/OpenPeeDeeP\n        # Packages that are not allowed where the value is a suggestion.\n        deny:\n          - pkg: \"github.com/sirupsen/logrus\"\n            desc: not allowed\n          - pkg: \"github.com/pkg/errors\"\n            desc: Should be replaced by standard lib errors package\n\n  dogsled:\n    # Checks assignments with too many blank identifiers.\n    # Default: 2\n    max-blank-identifiers: 3\n\n  dupl:\n    # Tokens count to trigger issue.\n    # Default: 150\n    threshold: 100\n\n  dupword:\n    # Keywords for detecting duplicate words.\n    # If this list is not empty, only the words defined in this list will be detected.\n    # Default: []\n    keywords:\n      - \"the\"\n      - \"and\"\n      - \"a\"\n    # Keywords used to ignore detection.\n    # Default: []\n    ignore:\n      - \"0C0C\"\n\n  errcheck:\n    # Report about not checking of errors in type assertions: `a := b.(MyStruct)`.\n    # Such cases aren't reported by default.\n    # Default: false\n    check-type-assertions: true\n\n    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`.\n    # Such cases aren't reported by default.\n    # Default: false\n    check-blank: true\n\n    # To disable the errcheck built-in exclude list.\n    # See `-excludeonly` option in https://github.com/kisielk/errcheck#excluding-functions for details.\n    # Default: false\n    disable-default-exclusions: true\n\n    # List of functions to exclude from checking, where each entry is a single function to exclude.\n    # See https://github.com/kisielk/errcheck#excluding-functions for details.\n    exclude-functions:\n      - io/ioutil.ReadFile\n      - io.Copy(*bytes.Buffer)\n      - io.Copy(os.Stdout)\n\n  errchkjson:\n    # With check-error-free-encoding set to true, errchkjson does warn about errors\n    # from json encoding functions that are safe to be ignored,\n    # because they are not possible to happen.\n    #\n    # if check-error-free-encoding is set to true and errcheck linter is enabled,\n    # it is recommended to add the following exceptions to prevent from false positives:\n    #\n    #     linters-settings:\n    #       errcheck:\n    #         exclude-functions:\n    #           - encoding/json.Marshal\n    #           - encoding/json.MarshalIndent\n    #\n    # Default: false\n    check-error-free-encoding: true\n\n    # Issue on struct encoding that doesn't have exported fields.\n    # Default: false\n    report-no-exported: false\n\n  errorlint:\n    # Check whether fmt.Errorf uses the %w verb for formatting errors.\n    # See the https://github.com/polyfloyd/go-errorlint for caveats.\n    # Default: true\n    errorf: false\n    # Permit more than 1 %w verb, valid per Go 1.20 (Requires errorf:true)\n    # Default: true\n    errorf-multi: false\n    # Check for plain type assertions and type switches.\n    # Default: true\n    asserts: false\n    # Check for plain error comparisons.\n    # Default: true\n    comparison: false\n    # Allowed errors.\n    # Default: []\n    allowed-errors:\n      - err: \"io.EOF\"\n        fun: \"example.com/pkg.Read\"\n    # Allowed error \"wildcards\".\n    # Default: []\n    allowed-errors-wildcard:\n      - err: \"example.com/pkg.ErrMagic\"\n        fun: \"example.com/pkg.Magic\"\n\n  exhaustive:\n    # Program elements to check for exhaustiveness.\n    # Default: [ switch ]\n    check:\n      - switch\n      - map\n    # Check switch statements in generated files also.\n    # Default: false\n    check-generated: true\n    # Presence of \"default\" case in switch statements satisfies exhaustiveness,\n    # even if all enum members are not listed.\n    # Default: false\n    default-signifies-exhaustive: true\n    # Enum members matching the supplied regex do not have to be listed in\n    # switch statements to satisfy exhaustiveness.\n    # Default: \"\"\n    ignore-enum-members: \"Example.+\"\n    # Enum types matching the supplied regex do not have to be listed in\n    # switch statements to satisfy exhaustiveness.\n    # Default: \"\"\n    ignore-enum-types: \"Example.+\"\n    # Consider enums only in package scopes, not in inner scopes.\n    # Default: false\n    package-scope-only: true\n    # Only run exhaustive check on switches with \"//exhaustive:enforce\" comment.\n    # Default: false\n    explicit-exhaustive-switch: true\n    # Only run exhaustive check on map literals with \"//exhaustive:enforce\" comment.\n    # Default: false\n    explicit-exhaustive-map: true\n    # Switch statement requires default case even if exhaustive.\n    # Default: false\n    default-case-required: true\n\n  exhaustruct:\n    # List of regular expressions to match struct packages and their names.\n    # Regular expressions must match complete canonical struct package/name/structname.\n    # If this list is empty, all structs are tested.\n    # Default: []\n    include:\n      - '.+\\.Test'\n      - 'example\\.com/package\\.ExampleStruct[\\d]{1,2}'\n    # List of regular expressions to exclude struct packages and their names from checks.\n    # Regular expressions must match complete canonical struct package/name/structname.\n    # Default: []\n    exclude:\n      - '.+/cobra\\.Command$'\n\n  forbidigo:\n    # Forbid the following identifiers (list of regexp).\n    # Default: [\"^(fmt\\\\.Print(|f|ln)|print|println)$\"]\n    forbid:\n      # Built-in bootstrapping functions.\n      - ^print(ln)?$\n      # Optional message that gets included in error reports.\n      - p: ^fmt\\.Print.*$\n        msg: Do not commit print statements.\n      # Alternatively, put messages at the end of the regex, surrounded by `(# )?`\n      # Escape any special characters. Those messages get included in error reports.\n      - 'fmt\\.Print.*(# Do not commit print statements\\.)?'\n      # Forbid spew Dump, whether it is called as function or method.\n      # Depends on analyze-types below.\n      - ^spew\\.(ConfigState\\.)?Dump$\n      # The package name might be ambiguous.\n      # The full import path can be used as additional criteria.\n      # Depends on analyze-types below.\n      - p: ^v1.Dump$\n        pkg: ^example.com/pkg/api/v1$\n    # Exclude godoc examples from forbidigo checks.\n    # Default: true\n    exclude-godoc-examples: false\n    # Instead of matching the literal source code,\n    # use type information to replace expressions with strings that contain the package name\n    # and (for methods and fields) the type name.\n    # This makes it possible to handle import renaming and forbid struct fields and methods.\n    # Default: false\n    analyze-types: true\n\n  funlen:\n    # Checks the number of lines in a function.\n    # If lower than 0, disable the check.\n    # Default: 60\n    lines: -1\n    # Checks the number of statements in a function.\n    # If lower than 0, disable the check.\n    # Default: 40\n    statements: -1\n    # Ignore comments when counting lines.\n    # Default false\n    ignore-comments: true\n\n  gci:\n    # Section configuration to compare against.\n    # Section names are case-insensitive and may contain parameters in ().\n    # The default order of sections is `standard > default > custom > blank > dot > alias > localmodule`,\n    # If `custom-order` is `true`, it follows the order of `sections` option.\n    # Default: [\"standard\", \"default\"]\n    sections:\n      - standard                       # Standard section: captures all standard packages.\n      - default                        # Default section: contains all imports that could not be matched to another section type.\n      - prefix(github.com/org/project) # Custom section: groups all imports with the specified Prefix.\n      - blank                          # Blank section: contains all blank imports. This section is not present unless explicitly enabled.\n      - dot                            # Dot section: contains all dot imports. This section is not present unless explicitly enabled.\n      - alias                          # Alias section: contains all alias imports. This section is not present unless explicitly enabled.\n      - localmodule                    # Local module section: contains all local packages. This section is not present unless explicitly enabled.\n\n    # Checks that no inline Comments are present.\n    # Default: false\n    no-inline-comments: true\n\n    # Checks that no prefix Comments(comment lines above an import) are present.\n    # Default: false\n    no-prefix-comments: true\n\n    # Skip generated files.\n    # Default: true\n    skip-generated: false\n\n    # Enable custom order of sections.\n    # If `true`, make the section order the same as the order of `sections`.\n    # Default: false\n    custom-order: true\n\n    # Drops lexical ordering for custom sections.\n    # Default: false\n    no-lex-order: true\n\n  ginkgolinter:\n    # Suppress the wrong length assertion warning.\n    # Default: false\n    suppress-len-assertion: true\n\n    # Suppress the wrong nil assertion warning.\n    # Default: false\n    suppress-nil-assertion: true\n\n    # Suppress the wrong error assertion warning.\n    # Default: false\n    suppress-err-assertion: true\n\n    # Suppress the wrong comparison assertion warning.\n    # Default: false\n    suppress-compare-assertion: true\n\n    # Suppress the function all in async assertion warning.\n    # Default: false\n    suppress-async-assertion: true\n\n    # Suppress warning for comparing values from different types, like `int32` and `uint32`\n    # Default: false\n    suppress-type-compare-assertion: true\n\n    # Trigger warning for ginkgo focus containers like `FDescribe`, `FContext`, `FWhen` or `FIt`\n    # Default: false\n    forbid-focus-container: true\n\n    # Don't trigger warnings for HaveLen(0)\n    # Default: false\n    allow-havelen-zero: true\n\n    # Force using `Expect` with `To`, `ToNot` or `NotTo`.\n    # Reject using `Expect` with `Should` or `ShouldNot`.\n    # Default: false\n    force-expect-to: true\n\n    # Best effort validation of async intervals (timeout and polling).\n    # Ignored the suppress-async-assertion is true.\n    # Default: false\n    validate-async-intervals: true\n\n    # Trigger a warning for variable assignments in ginkgo containers like `Describe`, `Context` and `When`, instead of in `BeforeEach()`.\n    # Default: false\n    forbid-spec-pollution: true\n\n    # Force using the Succeed matcher for error functions, and the HaveOccurred matcher for non-function error values.\n    # Default: false\n    force-succeed: true\n\n  gochecksumtype:\n    # Presence of `default` case in switch statements satisfies exhaustiveness, if all members are not listed.\n    # Default: true\n    default-signifies-exhaustive: false\n    # Include shared interfaces in the exhaustiviness check.\n    # Default: false\n    include-shared-interfaces: true\n\n  gocognit:\n    # Minimal code complexity to report.\n    # Default: 30 (but we recommend 10-20)\n    min-complexity: 10\n\n  goconst:\n    # Minimal length of string constant.\n    # Default: 3\n    min-len: 2\n    # Minimum occurrences of constant string count to trigger issue.\n    # Default: 3\n    min-occurrences: 2\n    # Ignore test files.\n    # Default: false\n    ignore-tests: true\n    # Look for existing constants matching the values.\n    # Default: true\n    match-constant: false\n    # Search also for duplicated numbers.\n    # Default: false\n    numbers: true\n    # Minimum value, only works with goconst.numbers\n    # Default: 3\n    min: 2\n    # Maximum value, only works with goconst.numbers\n    # Default: 3\n    max: 2\n    # Ignore when constant is not used as function argument.\n    # Default: true\n    ignore-calls: false\n    # Exclude strings matching the given regular expression.\n    # Default: \"\"\n    ignore-strings: 'foo.+'\n\n  gocritic:\n    # Disable all checks.\n    # Default: false\n    disable-all: true\n    # Which checks should be enabled in addition to default checks; can't be combined with 'disabled-checks'.\n    # By default, list of stable checks is used (https://go-critic.com/overview#checks-overview):\n    #   appendAssign, argOrder, assignOp, badCall, badCond, captLocal, caseOrder, codegenComment, commentFormatting,\n    #   defaultCaseOrder, deprecatedComment, dupArg, dupBranchBody, dupCase, dupSubExpr, elseif, exitAfterDefer,\n    #   flagDeref, flagName, ifElseChain, mapKey, newDeref, offBy1, regexpMust, singleCaseSwitch, sloppyLen,\n    #   sloppyTypeAssert, switchTrue, typeSwitchVar, underef, unlambda, unslice, valSwap, wrapperFunc\n    # To see which checks are enabled run `GL_DEBUG=gocritic golangci-lint run --enable=gocritic`.\n    enabled-checks:\n      # Detects suspicious append result assignments.\n      # https://go-critic.com/overview.html#appendassign\n      - appendAssign\n      # Detects `append` chains to the same slice that can be done in a single `append` call.\n      # https://go-critic.com/overview.html#appendcombine\n      - appendCombine\n      # Detects suspicious arguments order.\n      # https://go-critic.com/overview.html#argorder\n      - argOrder\n      # Detects assignments that can be simplified by using assignment operators.\n      # https://go-critic.com/overview.html#assignop\n      - assignOp\n      # Detects suspicious function calls.\n      # https://go-critic.com/overview.html#badcall\n      - badCall\n      # Detects suspicious condition expressions.\n      # https://go-critic.com/overview.html#badcond\n      - badCond\n      # Detects suspicious mutex lock/unlock operations.\n      # https://go-critic.com/overview.html#badlock\n      - badLock\n      # Detects suspicious regexp patterns.\n      # https://go-critic.com/overview.html#badregexp\n      - badRegexp\n      # Detects bad usage of sort package.\n      # https://go-critic.com/overview.html#badsorting\n      - badSorting\n      # Detects bad usage of sync.OnceFunc.\n      # https://go-critic.com/overview.html#badsynconcefunc\n      - badSyncOnceFunc\n      # Detects bool expressions that can be simplified.\n      # https://go-critic.com/overview.html#boolexprsimplify\n      - boolExprSimplify\n      # Detects when predeclared identifiers are shadowed in assignments.\n      # https://go-critic.com/overview.html#builtinshadow\n      - builtinShadow\n      # Detects top-level declarations that shadow the predeclared identifiers.\n      # https://go-critic.com/overview.html#builtinshadowdecl\n      - builtinShadowDecl\n      # Detects capitalized names for local variables.\n      # https://go-critic.com/overview.html#captlocal\n      - captLocal\n      # Detects erroneous case order inside switch statements.\n      # https://go-critic.com/overview.html#caseorder\n      - caseOrder\n      # Detects malformed 'code generated' file comments.\n      # https://go-critic.com/overview.html#codegencomment\n      - codegenComment\n      # Detects comments with non-idiomatic formatting.\n      # https://go-critic.com/overview.html#commentformatting\n      - commentFormatting\n      # Detects commented-out code inside function bodies.\n      # https://go-critic.com/overview.html#commentedoutcode\n      - commentedOutCode\n      # Detects commented-out imports.\n      # https://go-critic.com/overview.html#commentedoutimport\n      - commentedOutImport\n      # Detects when default case in switch isn't on 1st or last position.\n      # https://go-critic.com/overview.html#defaultcaseorder\n      - defaultCaseOrder\n      # Detects loops inside functions that use defer.\n      # https://go-critic.com/overview.html#deferinloop\n      - deferInLoop\n      # Detects deferred function literals that can be simplified.\n      # https://go-critic.com/overview.html#deferunlambda\n      - deferUnlambda\n      # Detects malformed 'deprecated' doc-comments.\n      # https://go-critic.com/overview.html#deprecatedcomment\n      - deprecatedComment\n      # Detects comments that silence go lint complaints about doc-comment.\n      # https://go-critic.com/overview.html#docstub\n      - docStub\n      # Detects suspicious duplicated arguments.\n      # https://go-critic.com/overview.html#duparg\n      - dupArg\n      # Detects duplicated branch bodies inside conditional statements.\n      # https://go-critic.com/overview.html#dupbranchbody\n      - dupBranchBody\n      # Detects duplicated case clauses inside switch or select statements.\n      # https://go-critic.com/overview.html#dupcase\n      - dupCase\n      # Detects multiple imports of the same package under different aliases.\n      # https://go-critic.com/overview.html#dupimport\n      - dupImport\n      # Detects suspicious duplicated sub-expressions.\n      # https://go-critic.com/overview.html#dupsubexpr\n      - dupSubExpr\n      # Detects suspicious formatting strings usage.\n      # https://go-critic.com/overview.html#dynamicfmtstring\n      - dynamicFmtString\n      # Detects else with nested if statement that can be replaced with else-if.\n      # https://go-critic.com/overview.html#elseif\n      - elseif\n      # Detects suspicious empty declarations blocks.\n      # https://go-critic.com/overview.html#emptydecl\n      - emptyDecl\n      # Detects fallthrough that can be avoided by using multi case values.\n      # https://go-critic.com/overview.html#emptyfallthrough\n      - emptyFallthrough\n      # Detects empty string checks that can be written more idiomatically.\n      # https://go-critic.com/overview.html#emptystringtest\n      - emptyStringTest\n      # Detects unoptimal strings/bytes case-insensitive comparison.\n      # https://go-critic.com/overview.html#equalfold\n      - equalFold\n      # Detects unwanted dependencies on the evaluation order.\n      # https://go-critic.com/overview.html#evalorder\n      - evalOrder\n      # Detects calls to exit/fatal inside functions that use defer.\n      # https://go-critic.com/overview.html#exitafterdefer\n      - exitAfterDefer\n      # Detects exposed methods from sync.Mutex and sync.RWMutex.\n      # https://go-critic.com/overview.html#exposedsyncmutex\n      - exposedSyncMutex\n      # Detects suspicious reassignment of error from another package.\n      # https://go-critic.com/overview.html#externalerrorreassign\n      - externalErrorReassign\n      # Detects problems in filepath.Join() function calls.\n      # https://go-critic.com/overview.html#filepathjoin\n      - filepathJoin\n      # Detects immediate dereferencing of `flag` package pointers.\n      # https://go-critic.com/overview.html#flagderef\n      - flagDeref\n      # Detects suspicious flag names.\n      # https://go-critic.com/overview.html#flagname\n      - flagName\n      # Detects hex literals that have mixed case letter digits.\n      # https://go-critic.com/overview.html#hexliteral\n      - hexLiteral\n      # Detects nil usages in http.NewRequest calls, suggesting http.NoBody as an alternative.\n      # https://go-critic.com/overview.html#httpnobody\n      - httpNoBody\n      # Detects params that incur excessive amount of copying.\n      # https://go-critic.com/overview.html#hugeparam\n      - hugeParam\n      # Detects repeated if-else statements and suggests to replace them with switch statement.\n      # https://go-critic.com/overview.html#ifelsechain\n      - ifElseChain\n      # Detects when imported package names shadowed in the assignments.\n      # https://go-critic.com/overview.html#importshadow\n      - importShadow\n      # Detects strings.Index calls that may cause unwanted allocs.\n      # https://go-critic.com/overview.html#indexalloc\n      - indexAlloc\n      # Detects non-assignment statements inside if/switch init clause.\n      # https://go-critic.com/overview.html#initclause\n      - initClause\n      # Detects suspicious map literal keys.\n      # https://go-critic.com/overview.html#mapkey\n      - mapKey\n      # Detects method expression call that can be replaced with a method call.\n      # https://go-critic.com/overview.html#methodexprcall\n      - methodExprCall\n      # Finds where nesting level could be reduced.\n      # https://go-critic.com/overview.html#nestingreduce\n      - nestingReduce\n      # Detects immediate dereferencing of `new` expressions.\n      # https://go-critic.com/overview.html#newderef\n      - newDeref\n      # Detects return statements those results evaluate to nil.\n      # https://go-critic.com/overview.html#nilvalreturn\n      - nilValReturn\n      # Detects old-style octal literals.\n      # https://go-critic.com/overview.html#octalliteral\n      - octalLiteral\n      # Detects various off-by-one kind of errors.\n      # https://go-critic.com/overview.html#offby1\n      - offBy1\n      # Detects if function parameters could be combined by type and suggest the way to do it.\n      # https://go-critic.com/overview.html#paramtypecombine\n      - paramTypeCombine\n      # Detects expressions like []rune(s)[0] that may cause unwanted rune slice allocation.\n      # https://go-critic.com/overview.html#preferdecoderune\n      - preferDecodeRune\n      # Detects concatenation with os.PathSeparator which can be replaced with filepath.Join.\n      # https://go-critic.com/overview.html#preferfilepathjoin\n      - preferFilepathJoin\n      # Detects fmt.Sprint(f/ln) calls which can be replaced with fmt.Fprint(f/ln).\n      # https://go-critic.com/overview.html#preferfprint\n      - preferFprint\n      # Detects w.Write or io.WriteString calls which can be replaced with w.WriteString.\n      # https://go-critic.com/overview.html#preferstringwriter\n      - preferStringWriter\n      # Detects WriteRune calls with rune literal argument that is single byte and reports to use WriteByte instead.\n      # https://go-critic.com/overview.html#preferwritebyte\n      - preferWriteByte\n      # Detects input and output parameters that have a type of pointer to referential type.\n      # https://go-critic.com/overview.html#ptrtorefparam\n      - ptrToRefParam\n      # Detects append all its data while range it.\n      # https://go-critic.com/overview.html#rangeappendall\n      - rangeAppendAll\n      # Detects expensive copies of `for` loop range expressions.\n      # https://go-critic.com/overview.html#rangeexprcopy\n      - rangeExprCopy\n      # Detects loops that copy big objects during each iteration.\n      # https://go-critic.com/overview.html#rangevalcopy\n      - rangeValCopy\n      # Detects redundant fmt.Sprint calls.\n      # https://go-critic.com/overview.html#redundantsprint\n      - redundantSprint\n      # Detects `regexp.Compile*` that can be replaced with `regexp.MustCompile*`.\n      # https://go-critic.com/overview.html#regexpmust\n      - regexpMust\n      # Detects suspicious regexp patterns.\n      # https://go-critic.com/overview.html#regexppattern\n      - regexpPattern\n      # Detects regexp patterns that can be simplified.\n      # https://go-critic.com/overview.html#regexpsimplify\n      - regexpSimplify\n      # Detects suspicious http.Error call without following return.\n      # https://go-critic.com/overview.html#returnafterhttperror\n      - returnAfterHttpError\n      # Runs user-defined rules using ruleguard linter.\n      # https://go-critic.com/overview.html#ruleguard\n      - ruleguard\n      # Detects switch statements that could be better written as if statement.\n      # https://go-critic.com/overview.html#singlecaseswitch\n      - singleCaseSwitch\n      # Detects slice clear loops, suggests an idiom that is recognized by the Go compiler.\n      # https://go-critic.com/overview.html#sliceclear\n      - sliceClear\n      # Detects usage of `len` when result is obvious or doesn't make sense.\n      # https://go-critic.com/overview.html#sloppylen\n      - sloppyLen\n      # Detects suspicious/confusing re-assignments.\n      # https://go-critic.com/overview.html#sloppyreassign\n      - sloppyReassign\n      # Detects redundant type assertions.\n      # https://go-critic.com/overview.html#sloppytypeassert\n      - sloppyTypeAssert\n      # Detects suspicious sort.Slice calls.\n      # https://go-critic.com/overview.html#sortslice\n      - sortSlice\n      # Detects \"%s\" formatting directives that can be replaced with %q.\n      # https://go-critic.com/overview.html#sprintfquotedstring\n      - sprintfQuotedString\n      # Detects issue in Query() and Exec() calls.\n      # https://go-critic.com/overview.html#sqlquery\n      - sqlQuery\n      # Detects string concat operations that can be simplified.\n      # https://go-critic.com/overview.html#stringconcatsimplify\n      - stringConcatSimplify\n      # Detects redundant conversions between string and []byte.\n      # https://go-critic.com/overview.html#stringxbytes\n      - stringXbytes\n      # Detects strings.Compare usage.\n      # https://go-critic.com/overview.html#stringscompare\n      - stringsCompare\n      # Detects switch-over-bool statements that use explicit `true` tag value.\n      # https://go-critic.com/overview.html#switchtrue\n      - switchTrue\n      # Detects sync.Map load+delete operations that can be replaced with LoadAndDelete.\n      # https://go-critic.com/overview.html#syncmaploadanddelete\n      - syncMapLoadAndDelete\n      # Detects manual conversion to milli- or microseconds.\n      # https://go-critic.com/overview.html#timeexprsimplify\n      - timeExprSimplify\n      # Detects TODO comments without detail/assignee.\n      # https://go-critic.com/overview.html#todocommentwithoutdetail\n      - todoCommentWithoutDetail\n      # Detects function with too many results.\n      # https://go-critic.com/overview.html#toomanyresultschecker\n      - tooManyResultsChecker\n      # Detects potential truncation issues when comparing ints of different sizes.\n      # https://go-critic.com/overview.html#truncatecmp\n      - truncateCmp\n      # Detects repeated type assertions and suggests to replace them with type switch statement.\n      # https://go-critic.com/overview.html#typeassertchain\n      - typeAssertChain\n      # Detects method declarations preceding the type definition itself.\n      # https://go-critic.com/overview.html#typedeffirst\n      - typeDefFirst\n      # Detects type switches that can benefit from type guard clause with variable.\n      # https://go-critic.com/overview.html#typeswitchvar\n      - typeSwitchVar\n      # Detects unneeded parenthesis inside type expressions and suggests to remove them.\n      # https://go-critic.com/overview.html#typeunparen\n      - typeUnparen\n      # Detects unchecked errors in if statements.\n      # https://go-critic.com/overview.html#uncheckedinlineerr\n      - uncheckedInlineErr\n      # Detects dereference expressions that can be omitted.\n      # https://go-critic.com/overview.html#underef\n      - underef\n      # Detects redundant statement labels.\n      # https://go-critic.com/overview.html#unlabelstmt\n      - unlabelStmt\n      # Detects function literals that can be simplified.\n      # https://go-critic.com/overview.html#unlambda\n      - unlambda\n      # Detects unnamed results that may benefit from names.\n      # https://go-critic.com/overview.html#unnamedresult\n      - unnamedResult\n      # Detects unnecessary braced statement blocks.\n      # https://go-critic.com/overview.html#unnecessaryblock\n      - unnecessaryBlock\n      # Detects redundantly deferred calls.\n      # https://go-critic.com/overview.html#unnecessarydefer\n      - unnecessaryDefer\n      # Detects slice expressions that can be simplified to sliced expression itself.\n      # https://go-critic.com/overview.html#unslice\n      - unslice\n      # Detects value swapping code that are not using parallel assignment.\n      # https://go-critic.com/overview.html#valswap\n      - valSwap\n      # Detects conditions that are unsafe due to not being exhaustive.\n      # https://go-critic.com/overview.html#weakcond\n      - weakCond\n      # Ensures that `//nolint` comments include an explanation.\n      # https://go-critic.com/overview.html#whynolint\n      - whyNoLint\n      # Detects function calls that can be replaced with convenience wrappers.\n      # https://go-critic.com/overview.html#wrapperfunc\n      - wrapperFunc\n      # Detects Yoda style expressions and suggests to replace them.\n      # https://go-critic.com/overview.html#yodastyleexpr\n      - yodaStyleExpr\n\n    # Enable all checks.\n    # Default: false\n    enable-all: true\n    # Which checks should be disabled; can't be combined with 'enabled-checks'.\n    # Default: []\n    disabled-checks:\n      - appendAssign\n      - appendCombine\n      - argOrder\n      - assignOp\n      - badCall\n      - badCond\n      - badLock\n      - badRegexp\n      - badSorting\n      - badSyncOnceFunc\n      - boolExprSimplify\n      - builtinShadow\n      - builtinShadowDecl\n      - captLocal\n      - caseOrder\n      - codegenComment\n      - commentFormatting\n      - commentedOutCode\n      - commentedOutImport\n      - defaultCaseOrder\n      - deferInLoop\n      - deferUnlambda\n      - deprecatedComment\n      - docStub\n      - dupArg\n      - dupBranchBody\n      - dupCase\n      - dupImport\n      - dupSubExpr\n      - dynamicFmtString\n      - elseif\n      - emptyDecl\n      - emptyFallthrough\n      - emptyStringTest\n      - equalFold\n      - evalOrder\n      - exitAfterDefer\n      - exposedSyncMutex\n      - externalErrorReassign\n      - filepathJoin\n      - flagDeref\n      - flagName\n      - hexLiteral\n      - httpNoBody\n      - hugeParam\n      - ifElseChain\n      - importShadow\n      - indexAlloc\n      - initClause\n      - mapKey\n      - methodExprCall\n      - nestingReduce\n      - newDeref\n      - nilValReturn\n      - octalLiteral\n      - offBy1\n      - paramTypeCombine\n      - preferDecodeRune\n      - preferFilepathJoin\n      - preferFprint\n      - preferStringWriter\n      - preferWriteByte\n      - ptrToRefParam\n      - rangeAppendAll\n      - rangeExprCopy\n      - rangeValCopy\n      - redundantSprint\n      - regexpMust\n      - regexpPattern\n      - regexpSimplify\n      - returnAfterHttpError\n      - ruleguard\n      - singleCaseSwitch\n      - sliceClear\n      - sloppyLen\n      - sloppyReassign\n      - sloppyTypeAssert\n      - sortSlice\n      - sprintfQuotedString\n      - sqlQuery\n      - stringConcatSimplify\n      - stringXbytes\n      - stringsCompare\n      - switchTrue\n      - syncMapLoadAndDelete\n      - timeExprSimplify\n      - todoCommentWithoutDetail\n      - tooManyResultsChecker\n      - truncateCmp\n      - typeAssertChain\n      - typeDefFirst\n      - typeSwitchVar\n      - typeUnparen\n      - uncheckedInlineErr\n      - underef\n      - unlabelStmt\n      - unlambda\n      - unnamedResult\n      - unnecessaryBlock\n      - unnecessaryDefer\n      - unslice\n      - valSwap\n      - weakCond\n      - whyNoLint\n      - wrapperFunc\n      - yodaStyleExpr\n\n    # Enable multiple checks by tags in addition to default checks.\n    # Run `GL_DEBUG=gocritic golangci-lint run --enable=gocritic` to see all tags and checks.\n    # See https://github.com/go-critic/go-critic#usage -> section \"Tags\".\n    # Default: []\n    enabled-tags:\n      - diagnostic\n      - style\n      - performance\n      - experimental\n      - opinionated\n    disabled-tags:\n      - diagnostic\n      - style\n      - performance\n      - experimental\n      - opinionated\n\n    # Settings passed to gocritic.\n    # The settings key is the name of a supported gocritic checker.\n    # The list of supported checkers can be find in https://go-critic.com/overview.\n    settings:\n      # Must be valid enabled check name.\n      captLocal:\n        # Whether to restrict checker to params only.\n        # Default: true\n        paramsOnly: false\n      commentedOutCode:\n        # Min length of the comment that triggers a warning.\n        # Default: 15\n        minLength: 50\n      elseif:\n        # Whether to skip balanced if-else pairs.\n        # Default: true\n        skipBalanced: false\n      hugeParam:\n        # Size in bytes that makes the warning trigger.\n        # Default: 80\n        sizeThreshold: 70\n      ifElseChain:\n        # Min number of if-else blocks that makes the warning trigger.\n        # Default: 2\n        minThreshold: 4\n      nestingReduce:\n        # Min number of statements inside a branch to trigger a warning.\n        # Default: 5\n        bodyWidth: 4\n      rangeExprCopy:\n        # Size in bytes that makes the warning trigger.\n        # Default: 512\n        sizeThreshold: 516\n        # Whether to check test functions\n        # Default: true\n        skipTestFuncs: false\n      rangeValCopy:\n        # Size in bytes that makes the warning trigger.\n        # Default: 128\n        sizeThreshold: 32\n        # Whether to check test functions.\n        # Default: true\n        skipTestFuncs: false\n      ruleguard:\n        # Enable debug to identify which 'Where' condition was rejected.\n        # The value of the parameter is the name of a function in a ruleguard file.\n        #\n        # When a rule is evaluated:\n        # If:\n        #   The Match() clause is accepted; and\n        #   One of the conditions in the Where() clause is rejected,\n        # Then:\n        #   ruleguard prints the specific Where() condition that was rejected.\n        #\n        # The option is passed to the ruleguard 'debug-group' argument.\n        # Default: \"\"\n        debug: 'emptyDecl'\n        # Determines the behavior when an error occurs while parsing ruleguard files.\n        # If flag is not set, log error and skip rule files that contain an error.\n        # If flag is set, the value must be a comma-separated list of error conditions.\n        # - 'all':    fail on all errors.\n        # - 'import': ruleguard rule imports a package that cannot be found.\n        # - 'dsl':    gorule file does not comply with the ruleguard DSL.\n        # Default: \"\"\n        failOn: dsl,import\n        # Comma-separated list of file paths containing ruleguard rules.\n        # If a path is relative, it is relative to the directory where the golangci-lint command is executed.\n        # The special '${configDir}' variable is substituted with the absolute directory containing the golangci config file.\n        # Glob patterns such as 'rules-*.go' may be specified.\n        # Default: \"\"\n        rules: '${configDir}/ruleguard/rules-*.go,${configDir}/myrule1.go'\n        # Comma-separated list of enabled groups or skip empty to enable everything.\n        # Tags can be defined with # character prefix.\n        # Default: \"<all>\"\n        enable: \"myGroupName,#myTagName\"\n        # Comma-separated list of disabled groups or skip empty to enable everything.\n        # Tags can be defined with # character prefix.\n        # Default: \"\"\n        disable: \"myGroupName,#myTagName\"\n      tooManyResultsChecker:\n        # Maximum number of results.\n        # Default: 5\n        maxResults: 10\n      truncateCmp:\n        # Whether to skip int/uint/uintptr types.\n        # Default: true\n        skipArchDependent: false\n      underef:\n        # Whether to skip (*x).method() calls where x is a pointer receiver.\n        # Default: true\n        skipRecvDeref: false\n      unnamedResult:\n        # Whether to check exported functions.\n        # Default: false\n        checkExported: true\n\n  gocyclo:\n    # Minimal code complexity to report.\n    # Default: 30 (but we recommend 10-20)\n    min-complexity: 10\n\n  godot:\n    # Comments to be checked: `declarations`, `toplevel`, or `all`.\n    # Default: declarations\n    scope: toplevel\n    # List of regexps for excluding particular comment lines from check.\n    # Default: []\n    exclude:\n      # Exclude todo and fixme comments.\n      - \"^fixme:\"\n      - \"^todo:\"\n    # Check that each sentence ends with a period.\n    # Default: true\n    period: false\n    # Check that each sentence starts with a capital letter.\n    # Default: false\n    capital: true\n\n  godox:\n    # Report any comments starting with keywords, this is useful for TODO or FIXME comments that\n    # might be left in the code accidentally and should be resolved before merging.\n    # Default: [\"TODO\", \"BUG\", \"FIXME\"]\n    keywords:\n      - NOTE\n      - OPTIMIZE # marks code that should be optimized before merging\n      - HACK # marks hack-around that should be removed before merging\n\n  gofmt:\n    # Simplify code: gofmt with `-s` option.\n    # Default: true\n    simplify: false\n    # Apply the rewrite rules to the source before reformatting.\n    # https://pkg.go.dev/cmd/gofmt\n    # Default: []\n    rewrite-rules:\n      - pattern: 'interface{}'\n        replacement: 'any'\n      - pattern: 'a[b:len(a)]'\n        replacement: 'a[b:]'\n\n  gofumpt:\n    # Module path which contains the source code being formatted.\n    # Default: \"\"\n    module-path: github.com/org/project\n\n    # Choose whether to use the extra rules.\n    # Default: false\n    extra-rules: true\n\n  goheader:\n    # Supports two types 'const` and `regexp`.\n    # Values can be used recursively.\n    # Default: {}\n    values:\n      const:\n        # Define here const type values in format k:v.\n        # For example:\n        COMPANY: MY COMPANY\n      regexp:\n        # Define here regexp type values.\n        # for example:\n        AUTHOR: .*@mycompany\\.com\n    # The template use for checking.\n    # Default: \"\"\n    template: |-\n      # Put here copyright header template for source code files\n      # For example:\n      # Note: {{ YEAR }} is a builtin value that returns the year relative to the current machine time.\n      #\n      # {{ AUTHOR }} {{ COMPANY }} {{ YEAR }}\n      # SPDX-License-Identifier: Apache-2.0\n\n      # Licensed under the Apache License, Version 2.0 (the \"License\");\n      # you may not use this file except in compliance with the License.\n      # You may obtain a copy of the License at:\n\n      #   http://www.apache.org/licenses/LICENSE-2.0\n\n      # Unless required by applicable law or agreed to in writing, software\n      # distributed under the License is distributed on an \"AS IS\" BASIS,\n      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      # See the License for the specific language governing permissions and\n      # limitations under the License.\n    # As alternative of directive 'template', you may put the path to file with the template source.\n    # Useful if you need to load the template from a specific file.\n    # Default: \"\"\n    template-path: /path/to/my/template.tmpl\n\n  goimports:\n    # A comma-separated list of prefixes, which, if set, checks import paths\n    # with the given prefixes are grouped after 3rd-party packages.\n    # Default: \"\"\n    local-prefixes: github.com/org/project\n\n  gomoddirectives:\n    # Allow local `replace` directives.\n    # Default: false\n    replace-local: true\n    # List of allowed `replace` directives.\n    # Default: []\n    replace-allow-list:\n      - launchpad.net/gocheck\n    # Allow to not explain why the version has been retracted in the `retract` directives.\n    # Default: false\n    retract-allow-no-explanation: true\n    # Forbid the use of the `exclude` directives.\n    # Default: false\n    exclude-forbidden: true\n    # Forbid the use of the `toolchain` directive.\n    # Default: false\n    toolchain-forbidden: true\n    # Defines a pattern to validate `toolchain` directive.\n    # Default: '' (no match)\n    toolchain-pattern: 'go1\\.23\\.\\d+$'\n    # Forbid the use of the `tool` directives.\n    # Default: false\n    tool-forbidden: true\n    # Forbid the use of the `godebug` directive.\n    # Default: false\n    go-debug-forbidden: true\n    # Defines a pattern to validate `go` minimum version directive.\n    # Default: '' (no match)\n    go-version-pattern: '\\d\\.\\d+(\\.0)?'\n\n  gomodguard:\n    allowed:\n      # List of allowed modules.\n      # Default: []\n      modules:\n        - gopkg.in/yaml.v2\n      # List of allowed module domains.\n      # Default: []\n      domains:\n        - golang.org\n    blocked:\n      # List of blocked modules.\n      # Default: []\n      modules:\n        # Blocked module.\n        - github.com/uudashr/go-module:\n            # Recommended modules that should be used instead. (Optional)\n            recommendations:\n              - golang.org/x/mod\n            # Reason why the recommended module should be used. (Optional)\n            reason: \"`mod` is the official go.mod parser library.\"\n      # List of blocked module version constraints.\n      # Default: []\n      versions:\n        # Blocked module with version constraint.\n        - github.com/mitchellh/go-homedir:\n            # Version constraint, see https://github.com/Masterminds/semver#basic-comparisons.\n            version: \"< 1.1.0\"\n            # Reason why the version constraint exists. (Optional)\n            reason: \"testing if blocked version constraint works.\"\n      # Set to true to raise lint issues for packages that are loaded from a local path via replace directive.\n      # Default: false\n      local_replace_directives: false\n\n  gosimple:\n    # Sxxxx checks in https://staticcheck.dev/docs/configuration/options/#checks\n    # Default: [\"*\"]\n    checks:\n      # Use plain channel send or receive instead of single-case select.\n      # https://staticcheck.dev/docs/checks/#S1000\n      - S1000\n      # Replace for loop with call to copy.\n      # https://staticcheck.dev/docs/checks/#S1001\n      - S1001\n      # Omit comparison with boolean constant.\n      # https://staticcheck.dev/docs/checks/#S1002\n      - S1002\n      # Replace call to 'strings.Index' with 'strings.Contains'.\n      # https://staticcheck.dev/docs/checks/#S1003\n      - S1003\n      # Replace call to 'bytes.Compare' with 'bytes.Equal'.\n      # https://staticcheck.dev/docs/checks/#S1004\n      - S1004\n      # Drop unnecessary use of the blank identifier.\n      # https://staticcheck.dev/docs/checks/#S1005\n      - S1005\n      # Use \"for { ... }\" for infinite loops.\n      # https://staticcheck.dev/docs/checks/#S1006\n      - S1006\n      # Simplify regular expression by using raw string literal.\n      # https://staticcheck.dev/docs/checks/#S1007\n      - S1007\n      # Simplify returning boolean expression.\n      # https://staticcheck.dev/docs/checks/#S1008\n      - S1008\n      # Omit redundant nil check on slices, maps, and channels.\n      # https://staticcheck.dev/docs/checks/#S1009\n      - S1009\n      # Omit default slice index.\n      # https://staticcheck.dev/docs/checks/#S1010\n      - S1010\n      # Use a single 'append' to concatenate two slices.\n      # https://staticcheck.dev/docs/checks/#S1011\n      - S1011\n      # Replace 'time.Now().Sub(x)' with 'time.Since(x)'.\n      # https://staticcheck.dev/docs/checks/#S1012\n      - S1012\n      # Use a type conversion instead of manually copying struct fields.\n      # https://staticcheck.dev/docs/checks/#S1016\n      - S1016\n      # Replace manual trimming with 'strings.TrimPrefix'.\n      # https://staticcheck.dev/docs/checks/#S1017\n      - S1017\n      # Use \"copy\" for sliding elements.\n      # https://staticcheck.dev/docs/checks/#S1018\n      - S1018\n      # Simplify \"make\" call by omitting redundant arguments.\n      # https://staticcheck.dev/docs/checks/#S1019\n      - S1019\n      # Omit redundant nil check in type assertion.\n      # https://staticcheck.dev/docs/checks/#S1020\n      - S1020\n      # Merge variable declaration and assignment.\n      # https://staticcheck.dev/docs/checks/#S1021\n      - S1021\n      # Omit redundant control flow.\n      # https://staticcheck.dev/docs/checks/#S1023\n      - S1023\n      # Replace 'x.Sub(time.Now())' with 'time.Until(x)'.\n      # https://staticcheck.dev/docs/checks/#S1024\n      - S1024\n      # Don't use 'fmt.Sprintf(\"%s\", x)' unnecessarily.\n      # https://staticcheck.dev/docs/checks/#S1025\n      - S1025\n      # Simplify error construction with 'fmt.Errorf'.\n      # https://staticcheck.dev/docs/checks/#S1028\n      - S1028\n      # Range over the string directly.\n      # https://staticcheck.dev/docs/checks/#S1029\n      - S1029\n      # Use 'bytes.Buffer.String' or 'bytes.Buffer.Bytes'.\n      # https://staticcheck.dev/docs/checks/#S1030\n      - S1030\n      # Omit redundant nil check around loop.\n      # https://staticcheck.dev/docs/checks/#S1031\n      - S1031\n      # Use 'sort.Ints(x)', 'sort.Float64s(x)', and 'sort.Strings(x)'.\n      # https://staticcheck.dev/docs/checks/#S1032\n      - S1032\n      # Unnecessary guard around call to \"delete\".\n      # https://staticcheck.dev/docs/checks/#S1033\n      - S1033\n      # Use result of type assertion to simplify cases.\n      # https://staticcheck.dev/docs/checks/#S1034\n      - S1034\n      # Redundant call to 'net/http.CanonicalHeaderKey' in method call on 'net/http.Header'.\n      # https://staticcheck.dev/docs/checks/#S1035\n      - S1035\n      # Unnecessary guard around map access.\n      # https://staticcheck.dev/docs/checks/#S1036\n      - S1036\n      # Elaborate way of sleeping.\n      # https://staticcheck.dev/docs/checks/#S1037\n      - S1037\n      # Unnecessarily complex way of printing formatted string.\n      # https://staticcheck.dev/docs/checks/#S1038\n      - S1038\n      # Unnecessary use of 'fmt.Sprint'.\n      # https://staticcheck.dev/docs/checks/#S1039\n      - S1039\n      # Type assertion to current type.\n      # https://staticcheck.dev/docs/checks/#S1040\n      - S1040\n\n  gosec:\n    # To select a subset of rules to run.\n    # Available rules: https://github.com/securego/gosec#available-rules\n    # Default: [] - means include all rules\n    includes:\n      - G101 # Look for hard coded credentials\n      - G102 # Bind to all interfaces\n      - G103 # Audit the use of unsafe block\n      - G104 # Audit errors not checked\n      - G106 # Audit the use of ssh.InsecureIgnoreHostKey\n      - G107 # Url provided to HTTP request as taint input\n      - G108 # Profiling endpoint automatically exposed on /debug/pprof\n      - G109 # Potential Integer overflow made by strconv.Atoi result conversion to int16/32\n      - G110 # Potential DoS vulnerability via decompression bomb\n      - G111 # Potential directory traversal\n      - G112 # Potential slowloris attack\n      - G113 # Usage of Rat.SetString in math/big with an overflow (CVE-2022-23772)\n      - G114 # Use of net/http serve function that has no support for setting timeouts\n      - G115 # Potential integer overflow when converting between integer types\n      - G201 # SQL query construction using format string\n      - G202 # SQL query construction using string concatenation\n      - G203 # Use of unescaped data in HTML templates\n      - G204 # Audit use of command execution\n      - G301 # Poor file permissions used when creating a directory\n      - G302 # Poor file permissions used with chmod\n      - G303 # Creating tempfile using a predictable path\n      - G304 # File path provided as taint input\n      - G305 # File traversal when extracting zip/tar archive\n      - G306 # Poor file permissions used when writing to a new file\n      - G307 # Poor file permissions used when creating a file with os.Create\n      - G401 # Detect the usage of MD5 or SHA1\n      - G402 # Look for bad TLS connection settings\n      - G403 # Ensure minimum RSA key length of 2048 bits\n      - G404 # Insecure random number source (rand)\n      - G405 # Detect the usage of DES or RC4\n      - G406 # Detect the usage of MD4 or RIPEMD160\n      - G501 # Import blocklist: crypto/md5\n      - G502 # Import blocklist: crypto/des\n      - G503 # Import blocklist: crypto/rc4\n      - G504 # Import blocklist: net/http/cgi\n      - G505 # Import blocklist: crypto/sha1\n      - G506 # Import blocklist: golang.org/x/crypto/md4\n      - G507 #Import blocklist: golang.org/x/crypto/ripemd160\n      - G601 # Implicit memory aliasing of items from a range statement\n      - G602 # Slice access out of bounds\n\n    # To specify a set of rules to explicitly exclude.\n    # Available rules: https://github.com/securego/gosec#available-rules\n    # Default: []\n    excludes:\n      - G101 # Look for hard coded credentials\n      - G102 # Bind to all interfaces\n      - G103 # Audit the use of unsafe block\n      - G104 # Audit errors not checked\n      - G106 # Audit the use of ssh.InsecureIgnoreHostKey\n      - G107 # Url provided to HTTP request as taint input\n      - G108 # Profiling endpoint automatically exposed on /debug/pprof\n      - G109 # Potential Integer overflow made by strconv.Atoi result conversion to int16/32\n      - G110 # Potential DoS vulnerability via decompression bomb\n      - G111 # Potential directory traversal\n      - G112 # Potential slowloris attack\n      - G113 # Usage of Rat.SetString in math/big with an overflow (CVE-2022-23772)\n      - G114 # Use of net/http serve function that has no support for setting timeouts\n      - G115 # Potential integer overflow when converting between integer types\n      - G201 # SQL query construction using format string\n      - G202 # SQL query construction using string concatenation\n      - G203 # Use of unescaped data in HTML templates\n      - G204 # Audit use of command execution\n      - G301 # Poor file permissions used when creating a directory\n      - G302 # Poor file permissions used with chmod\n      - G303 # Creating tempfile using a predictable path\n      - G304 # File path provided as taint input\n      - G305 # File traversal when extracting zip/tar archive\n      - G306 # Poor file permissions used when writing to a new file\n      - G307 # Poor file permissions used when creating a file with os.Create\n      - G401 # Detect the usage of MD5 or SHA1\n      - G402 # Look for bad TLS connection settings\n      - G403 # Ensure minimum RSA key length of 2048 bits\n      - G404 # Insecure random number source (rand)\n      - G405 # Detect the usage of DES or RC4\n      - G406 # Detect the usage of MD4 or RIPEMD160\n      - G501 # Import blocklist: crypto/md5\n      - G502 # Import blocklist: crypto/des\n      - G503 # Import blocklist: crypto/rc4\n      - G504 # Import blocklist: net/http/cgi\n      - G505 # Import blocklist: crypto/sha1\n      - G506 # Import blocklist: golang.org/x/crypto/md4\n      - G507 #Import blocklist: golang.org/x/crypto/ripemd160\n      - G601 # Implicit memory aliasing of items from a range statement\n      - G602 # Slice access out of bounds\n\n    # Exclude generated files\n    # Default: false\n    exclude-generated: true\n\n    # Filter out the issues with a lower severity than the given value.\n    # Valid options are: low, medium, high.\n    # Default: low\n    severity: medium\n\n    # Filter out the issues with a lower confidence than the given value.\n    # Valid options are: low, medium, high.\n    # Default: low\n    confidence: medium\n\n    # Concurrency value.\n    # Default: the number of logical CPUs usable by the current process.\n    concurrency: 12\n\n    # To specify the configuration of rules.\n    config:\n      # Globals are applicable to all rules.\n      global:\n        # If true, ignore #nosec in comments (and an alternative as well).\n        # Default: false\n        nosec: true\n        # Add an alternative comment prefix to #nosec (both will work at the same time).\n        # Default: \"\"\n        \"#nosec\": \"#my-custom-nosec\"\n        # Define whether nosec issues are counted as finding or not.\n        # Default: false\n        show-ignored: true\n        # Audit mode enables addition checks that for normal code analysis might be too nosy.\n        # Default: false\n        audit: true\n      G101:\n        # Regexp pattern for variables and constants to find.\n        # Default: \"(?i)passwd|pass|password|pwd|secret|token|pw|apiKey|bearer|cred\"\n        pattern: \"(?i)example\"\n        # If true, complain about all cases (even with low entropy).\n        # Default: false\n        ignore_entropy: false\n        # Maximum allowed entropy of the string.\n        # Default: \"80.0\"\n        entropy_threshold: \"80.0\"\n        # Maximum allowed value of entropy/string length.\n        # Is taken into account if entropy >= entropy_threshold/2.\n        # Default: \"3.0\"\n        per_char_threshold: \"3.0\"\n        # Calculate entropy for first N chars of the string.\n        # Default: \"16\"\n        truncate: \"32\"\n      # Additional functions to ignore while checking unhandled errors.\n      # Following functions always ignored:\n      #   bytes.Buffer:\n      #     - Write\n      #     - WriteByte\n      #     - WriteRune\n      #     - WriteString\n      #   fmt:\n      #     - Print\n      #     - Printf\n      #     - Println\n      #     - Fprint\n      #     - Fprintf\n      #     - Fprintln\n      #   strings.Builder:\n      #     - Write\n      #     - WriteByte\n      #     - WriteRune\n      #     - WriteString\n      #   io.PipeWriter:\n      #     - CloseWithError\n      #   hash.Hash:\n      #     - Write\n      #   os:\n      #     - Unsetenv\n      # Default: {}\n      G104:\n        fmt:\n          - Fscanf\n      G111:\n        # Regexp pattern to find potential directory traversal.\n        # Default: \"http\\\\.Dir\\\\(\\\"\\\\/\\\"\\\\)|http\\\\.Dir\\\\('\\\\/'\\\\)\"\n        pattern: \"custom\\\\.Dir\\\\(\\\\)\"\n      # Maximum allowed permissions mode for os.Mkdir and os.MkdirAll\n      # Default: \"0750\"\n      G301: \"0750\"\n      # Maximum allowed permissions mode for os.OpenFile and os.Chmod\n      # Default: \"0600\"\n      G302: \"0600\"\n      # Maximum allowed permissions mode for os.WriteFile and ioutil.WriteFile\n      # Default: \"0600\"\n      G306: \"0600\"\n\n  gosmopolitan:\n    # Allow and ignore `time.Local` usages.\n    #\n    # Default: false\n    allow-time-local: true\n    # List of fully qualified names in the `full/pkg/path.name` form, to act as \"i18n escape hatches\".\n    # String literals inside call-like expressions to, or struct literals of those names,\n    # are exempt from the writing system check.\n    #\n    # Default: []\n    escape-hatches:\n      - 'github.com/nicksnyder/go-i18n/v2/i18n.Message'\n      - 'example.com/your/project/i18n/markers.Raw'\n      - 'example.com/your/project/i18n/markers.OK'\n      - 'example.com/your/project/i18n/markers.TODO'\n      - 'command-line-arguments.Simple'\n    # Ignore test files.\n    #\n    # Default: true\n    ignore-tests: false\n    # List of Unicode scripts to watch for any usage in string literals.\n    # https://pkg.go.dev/unicode#pkg-variables\n    #\n    # Default: [\"Han\"]\n    watch-for-scripts:\n      - Devanagari\n      - Han\n      - Hangul\n      - Hiragana\n      - Katakana\n\n  govet:\n    # Disable all analyzers.\n    # Default: false\n    disable-all: true\n    # Enable analyzers by name.\n    # (in addition to default:\n    #   appends, asmdecl, assign, atomic, bools, buildtag, cgocall, composites, copylocks, defers, directive, errorsas,\n    #   framepointer, httpresponse, ifaceassert, loopclosure, lostcancel, nilfunc, printf, shift, sigchanyzer, slog,\n    #   stdmethods, stringintconv, structtag, testinggoroutine, tests, timeformat, unmarshal, unreachable, unsafeptr,\n    #   unusedresult\n    # ).\n    # Run `GL_DEBUG=govet golangci-lint run --enable=govet` to see default, all available analyzers, and enabled analyzers.\n    # Default: []\n    enable:\n      # Check for missing values after append.\n      - appends\n      # Report mismatches between assembly files and Go declarations.\n      - asmdecl\n      # Check for useless assignments.\n      - assign\n      # Check for common mistakes using the sync/atomic package.\n      - atomic\n      # Check for non-64-bits-aligned arguments to sync/atomic functions.\n      - atomicalign\n      # Check for common mistakes involving boolean operators.\n      - bools\n      # Check //go:build and // +build directives.\n      - buildtag\n      # Detect some violations of the cgo pointer passing rules.\n      - cgocall\n      # Check for unkeyed composite literals.\n      - composites\n      # Check for locks erroneously passed by value.\n      - copylocks\n      # Check for calls of reflect.DeepEqual on error values.\n      - deepequalerrors\n      # Report common mistakes in defer statements.\n      - defers\n      # Check Go toolchain directives such as //go:debug.\n      - directive\n      # Report passing non-pointer or non-error values to errors.As.\n      - errorsas\n      # Find structs that would use less memory if their fields were sorted.\n      - fieldalignment\n      # Find calls to a particular function.\n      - findcall\n      # Report assembly that clobbers the frame pointer before saving it.\n      - framepointer\n      # Check for mistakes using HTTP responses.\n      - httpresponse\n      # Detect impossible interface-to-interface type assertions.\n      - ifaceassert\n      # Check references to loop variables from within nested functions.\n      - loopclosure\n      # Check cancel func returned by context.WithCancel is called.\n      - lostcancel\n      # Check for useless comparisons between functions and nil.\n      - nilfunc\n      # Check for redundant or impossible nil comparisons.\n      - nilness\n      # Check consistency of Printf format strings and arguments.\n      - printf\n      # Check for comparing reflect.Value values with == or reflect.DeepEqual.\n      - reflectvaluecompare\n      # Check for possible unintended shadowing of variables.\n      - shadow\n      # Check for shifts that equal or exceed the width of the integer.\n      - shift\n      # Check for unbuffered channel of os.Signal.\n      - sigchanyzer\n      # Check for invalid structured logging calls.\n      - slog\n      # Check the argument type of sort.Slice.\n      - sortslice\n      # Check signature of methods of well-known interfaces.\n      - stdmethods\n      # Check for uses of too-new standard library symbols.\n      - stdversion\n      # Check for string(int) conversions.\n      - stringintconv\n      # Check that struct field tags conform to reflect.StructTag.Get.\n      - structtag\n      # Report calls to (*testing.T).Fatal from goroutines started by a test.\n      - testinggoroutine\n      # Check for common mistaken usages of tests and examples.\n      - tests\n      # Check for calls of (time.Time).Format or time.Parse with 2006-02-01.\n      - timeformat\n      # Report passing non-pointer or non-interface values to unmarshal.\n      - unmarshal\n      # Check for unreachable code.\n      - unreachable\n      # Check for invalid conversions of uintptr to unsafe.Pointer.\n      - unsafeptr\n      # Check for unused results of calls to some functions.\n      - unusedresult\n      # Checks for unused writes.\n      - unusedwrite\n      # Checks for misuses of sync.WaitGroup.\n      - waitgroup\n\n    # Enable all analyzers.\n    # Default: false\n    enable-all: true\n    # Disable analyzers by name.\n    # (in addition to default\n    #   atomicalign, deepequalerrors, fieldalignment, findcall, nilness, reflectvaluecompare, shadow, sortslice,\n    #   timeformat, unusedwrite\n    # ).\n    # Run `GL_DEBUG=govet golangci-lint run --enable=govet` to see default, all available analyzers, and enabled analyzers.\n    # Default: []\n    disable:\n      - appends\n      - asmdecl\n      - assign\n      - atomic\n      - atomicalign\n      - bools\n      - buildtag\n      - cgocall\n      - composites\n      - copylocks\n      - deepequalerrors\n      - defers\n      - directive\n      - errorsas\n      - fieldalignment\n      - findcall\n      - framepointer\n      - httpresponse\n      - ifaceassert\n      - loopclosure\n      - lostcancel\n      - nilfunc\n      - nilness\n      - printf\n      - reflectvaluecompare\n      - shadow\n      - shift\n      - sigchanyzer\n      - slog\n      - sortslice\n      - stdmethods\n      - stringintconv\n      - structtag\n      - testinggoroutine\n      - tests\n      - timeformat\n      - unmarshal\n      - unreachable\n      - unsafeptr\n      - unusedresult\n      - unusedwrite\n\n    # Settings per analyzer.\n    settings:\n      # Analyzer name, run `go tool vet help` to see all analyzers.\n      printf:\n        # Comma-separated list of print function names to check (in addition to default, see `go tool vet help printf`).\n        # Default: []\n        funcs:\n          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof\n          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf\n          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf\n          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf\n      shadow:\n        # Whether to be strict about shadowing; can be noisy.\n        # Default: false\n        strict: true\n      unusedresult:\n        # Comma-separated list of functions whose results must be used\n        # (in addition to default:\n        #   context.WithCancel, context.WithDeadline, context.WithTimeout, context.WithValue, errors.New, fmt.Errorf,\n        #   fmt.Sprint, fmt.Sprintf, sort.Reverse\n        # ).\n        # Default: []\n        funcs:\n          - pkg.MyFunc\n        # Comma-separated list of names of methods of type func() string whose results must be used\n        # (in addition to default Error,String)\n        # Default: []\n        stringmethods:\n          - MyMethod\n\n  grouper:\n    # Require the use of a single global 'const' declaration only.\n    # Default: false\n    const-require-single-const: true\n    # Require the use of grouped global 'const' declarations.\n    # Default: false\n    const-require-grouping: true\n\n    # Require the use of a single 'import' declaration only.\n    # Default: false\n    import-require-single-import: true\n    # Require the use of grouped 'import' declarations.\n    # Default: false\n    import-require-grouping: true\n\n    # Require the use of a single global 'type' declaration only.\n    # Default: false\n    type-require-single-type: true\n    # Require the use of grouped global 'type' declarations.\n    # Default: false\n    type-require-grouping: true\n\n    # Require the use of a single global 'var' declaration only.\n    # Default: false\n    var-require-single-var: true\n    # Require the use of grouped global 'var' declarations.\n    # Default: false\n    var-require-grouping: true\n\n  iface:\n    # List of analyzers.\n    # Default: [\"identical\"]\n    enable:\n      - identical # Identifies interfaces in the same package that have identical method sets.\n      - unused # Identifies interfaces that are not used anywhere in the same package where the interface is defined.\n      - opaque # Identifies functions that return interfaces, but the actual returned value is always a single concrete implementation.\n    settings:\n      unused:\n        # List of packages path to exclude from the check.\n        # Default: []\n        exclude:\n          - github.com/example/log\n\n  importas:\n    # Do not allow unaliased imports of aliased packages.\n    # Default: false\n    no-unaliased: true\n    # Do not allow non-required aliases.\n    # Default: false\n    no-extra-aliases: true\n    # List of aliases\n    # Default: []\n    alias:\n      # Using `servingv1` alias for `knative.dev/serving/pkg/apis/serving/v1` package.\n      - pkg: knative.dev/serving/pkg/apis/serving/v1\n        alias: servingv1\n      # Using `autoscalingv1alpha1` alias for `knative.dev/serving/pkg/apis/autoscaling/v1alpha1` package.\n      - pkg: knative.dev/serving/pkg/apis/autoscaling/v1alpha1\n        alias: autoscalingv1alpha1\n      # You can specify the package path by regular expression,\n      # and alias by regular expression expansion syntax like below.\n      # see https://github.com/julz/importas#use-regular-expression for details\n      - pkg: knative.dev/serving/pkg/apis/(\\w+)/(v[\\w\\d]+)\n        alias: $1$2\n      # An explicit empty alias can be used to ensure no aliases are used for a package.\n      # This can be useful if `no-extra-aliases: true` doesn't fit your need.\n      # Multiple packages can use an empty alias.\n      - pkg: errors\n        alias: \"\"\n\n  inamedparam:\n    # Skips check for interface methods with only a single parameter.\n    # Default: false\n    skip-single-param: true\n\n  interfacebloat:\n    # The maximum number of methods allowed for an interface.\n    # Default: 10\n    max: 5\n\n  ireturn:\n    # List of interfaces to allow.\n    # Lists of the keywords and regular expressions matched to interface or package names can be used.\n    # `allow` and `reject` settings cannot be used at the same time.\n    #\n    # Keywords:\n    # - `empty` for `interface{}`\n    # - `error` for errors\n    # - `stdlib` for standard library\n    # - `anon` for anonymous interfaces\n    # - `generic` for generic interfaces added in go 1.18\n    #\n    # Default: [anon, error, empty, stdlib]\n    allow:\n      - anon\n      # You can specify idiomatic endings for interface\n      - (or|er)$\n\n    # List of interfaces to reject.\n    # Lists of the keywords and regular expressions matched to interface or package names can be used.\n    # `allow` and `reject` settings cannot be used at the same time.\n    #\n    # Keywords:\n    # - `empty` for `interface{}`\n    # - `error` for errors\n    # - `stdlib` for standard library\n    # - `anon` for anonymous interfaces\n    # - `generic` for generic interfaces added in go 1.18\n    #\n    # Default: []\n    reject:\n      - github.com\\/user\\/package\\/v4\\.Type\n\n  lll:\n    # Max line length, lines longer will be reported.\n    # '\\t' is counted as 1 character by default, and can be changed with the tab-width option.\n    # Default: 120.\n    line-length: 120\n    # Tab width in spaces.\n    # Default: 1\n    tab-width: 1\n\n  loggercheck:\n    # Allow check for the github.com/go-kit/log library.\n    # Default: true\n    kitlog: false\n    # Allow check for the k8s.io/klog/v2 library.\n    # Default: true\n    klog: false\n    # Allow check for the github.com/go-logr/logr library.\n    # Default: true\n    logr: false\n    # Allow check for the log/slog library.\n    # Default: true\n    slog: false\n    # Allow check for the \"sugar logger\" from go.uber.org/zap library.\n    # Default: true\n    zap: false\n    # Require all logging keys to be inlined constant strings.\n    # Default: false\n    require-string-key: true\n    # Require printf-like format specifier (%s, %d for example) not present.\n    # Default: false\n    no-printf-like: true\n    # List of custom rules to check against, where each rule is a single logger pattern, useful for wrapped loggers.\n    # For example: https://github.com/timonwong/loggercheck/blob/7395ab86595781e33f7afba27ad7b55e6956ebcd/testdata/custom-rules.txt\n    # Default: empty\n    rules:\n      - k8s.io/klog/v2.InfoS   # package level exported functions\n      - (github.com/go-logr/logr.Logger).Error  # \"Methods\"\n      - (*go.uber.org/zap.SugaredLogger).With  # Also \"Methods\", but with a pointer receiver\n\n  maintidx:\n    # Show functions with maintainability index lower than N.\n    # A high index indicates better maintainability (it's kind of the opposite of complexity).\n    # Default: 20\n    under: 100\n\n  makezero:\n    # Allow only slices initialized with a length of zero.\n    # Default: false\n    always: true\n\n  misspell:\n    # Correct spellings using locale preferences for US or UK.\n    # Setting locale to US will correct the British spelling of 'colour' to 'color'.\n    # Default is to use a neutral variety of English.\n    locale: US\n    # Typos to ignore.\n    # Should be in lower case.\n    # Default: []\n    ignore-words:\n      - someword\n    # Extra word corrections.\n    # `typo` and `correction` should only contain letters.\n    # The words are case-insensitive.\n    # Default: []\n    extra-words:\n      - typo: \"iff\"\n        correction: \"if\"\n      - typo: \"cancelation\"\n        correction: \"cancellation\"\n    # Mode of the analysis:\n    # - default: checks all the file content.\n    # - restricted: checks only comments.\n    # Default: \"\"\n    mode: restricted\n\n  mnd:\n    # List of enabled checks, see https://github.com/tommy-muehle/go-mnd/#checks for description.\n    # Default: [\"argument\", \"case\", \"condition\", \"operation\", \"return\", \"assign\"]\n    checks:\n      - argument\n      - case\n      - condition\n      - operation\n      - return\n      - assign\n    # List of numbers to exclude from analysis.\n    # The numbers should be written as string.\n    # Values always ignored: \"1\", \"1.0\", \"0\" and \"0.0\"\n    # Default: []\n    ignored-numbers:\n      - '0666'\n      - '0755'\n      - '42'\n    # List of file patterns to exclude from analysis.\n    # Values always ignored: `.+_test.go`\n    # Default: []\n    ignored-files:\n      - 'magic1_.+\\.go$'\n    # List of function patterns to exclude from analysis.\n    # Following functions are always ignored: `time.Date`,\n    # `strconv.FormatInt`, `strconv.FormatUint`, `strconv.FormatFloat`,\n    # `strconv.ParseInt`, `strconv.ParseUint`, `strconv.ParseFloat`.\n    # Default: []\n    ignored-functions:\n      - '^math\\.'\n      - '^http\\.StatusText$'\n\n  musttag:\n    # A set of custom functions to check in addition to the builtin ones.\n    # Default: json, xml, gopkg.in/yaml.v3, BurntSushi/toml, mitchellh/mapstructure, jmoiron/sqlx\n    functions:\n      # The full name of the function, including the package.\n      - name: github.com/hashicorp/hcl/v2/hclsimple.DecodeFile\n        # The struct tag whose presence should be ensured.\n        tag: hcl\n        # The position of the argument to check.\n        arg-pos: 2\n\n  nakedret:\n    # Make an issue if func has more lines of code than this setting, and it has naked returns.\n    # Default: 30\n    max-func-lines: 31\n\n  nestif:\n    # Minimal complexity of if statements to report.\n    # Default: 5\n    min-complexity: 4\n\n  nilnil:\n    # In addition, detect opposite situation (simultaneous return of non-nil error and valid value).\n    # Default: false\n    detect-opposite: true\n    # List of return types to check.\n    # Default: [\"chan\", \"func\", \"iface\", \"map\", \"ptr\", \"uintptr\", \"unsafeptr\"]\n    checked-types:\n      - chan\n      - func\n      - iface\n      - map\n      - ptr\n      - uintptr\n      - unsafeptr\n\n  nlreturn:\n    # Size of the block (including return statement that is still \"OK\")\n    # so no return split required.\n    # Default: 1\n    block-size: 2\n\n  nolintlint:\n    # Disable to ensure that all nolint directives actually have an effect.\n    # Default: false\n    allow-unused: true\n    # Exclude following linters from requiring an explanation.\n    # Default: []\n    allow-no-explanation: [ ]\n    # Enable to require an explanation of nonzero length after each nolint directive.\n    # Default: false\n    require-explanation: true\n    # Enable to require nolint directives to mention the specific linter being suppressed.\n    # Default: false\n    require-specific: true\n\n  nonamedreturns:\n    # Report named error if it is assigned inside defer.\n    # Default: false\n    report-error-in-defer: true\n\n  paralleltest:\n    # Ignore missing calls to `t.Parallel()` and only report incorrect uses of it.\n    # Default: false\n    ignore-missing: true\n    # Ignore missing calls to `t.Parallel()` in subtests. Top-level tests are\n    # still required to have `t.Parallel`, but subtests are allowed to skip it.\n    # Default: false\n    ignore-missing-subtests: true\n\n  perfsprint:\n    # Optimizes even if it requires an int or uint type cast.\n    # Default: true\n    int-conversion: false\n    # Optimizes into `err.Error()` even if it is only equivalent for non-nil errors.\n    # Default: false\n    err-error: true\n    # Optimizes `fmt.Errorf`.\n    # Default: true\n    errorf: false\n    # Optimizes `fmt.Sprintf` with only one argument.\n    # Default: true\n    sprintf1: false\n    # Optimizes into strings concatenation.\n    # Default: true\n    strconcat: false\n\n  prealloc:\n    # IMPORTANT: we don't recommend using this linter before doing performance profiling.\n    # For most programs usage of prealloc will be a premature optimization.\n\n    # Report pre-allocation suggestions only on simple loops that have no returns/breaks/continues/gotos in them.\n    # Default: true\n    simple: false\n    # Report pre-allocation suggestions on range loops.\n    # Default: true\n    range-loops: false\n    # Report pre-allocation suggestions on for loops.\n    # Default: false\n    for-loops: true\n\n  predeclared:\n    # Comma-separated list of predeclared identifiers to not report on.\n    # Default: \"\"\n    ignore: \"new,int\"\n    # Include method names and field names (i.e., qualified names) in checks.\n    # Default: false\n    q: true\n\n  promlinter:\n    # Promlinter cannot infer all metrics name in static analysis.\n    # Enable strict mode will also include the errors caused by failing to parse the args.\n    # Default: false\n    strict: true\n    # Please refer to https://github.com/yeya24/promlinter#usage for detailed usage.\n    # Default: []\n    disabled-linters:\n      # Help detects issues related to the help text for a metric.\n      - Help\n      # MetricUnits detects issues with metric unit names.\n      - MetricUnits\n      # Counter detects issues specific to counters, as well as patterns that should only be used with counters.\n      - Counter\n      # HistogramSummaryReserved detects when other types of metrics use names or labels reserved for use by histograms and/or summaries.\n      - HistogramSummaryReserved\n      # MetricTypeInName detects when metric types are included in the metric name.\n      - MetricTypeInName\n      # ReservedChars detects colons in metric names.\n      - ReservedChars\n      # CamelCase detects metric names and label names written in camelCase.\n      - CamelCase\n      # UnitAbbreviations detects abbreviated units in the metric name.\n      - UnitAbbreviations\n\n\n  protogetter:\n    # Skip files generated by specified generators from the checking.\n    # Checks only the file's initial comment, which must follow the format: \"// Code generated by <generator-name>\".\n    # Files generated by protoc-gen-go, protoc-gen-go-grpc, and protoc-gen-grpc-gateway are always excluded automatically.\n    # Default: []\n    skip-generated-by: [\"protoc-gen-go-my-own-generator\"]\n    # Skip files matching the specified glob pattern from the checking.\n    # Default: []\n    skip-files:\n      - \"*.pb.go\"\n      - \"*/vendor/*\"\n      - \"/full/path/to/file.go\"\n    # Skip any generated files from the checking.\n    # Default: false\n    skip-any-generated: true\n    # Skip first argument of append function.\n    # Default: false\n    replace-first-arg-in-append: true\n\n  reassign:\n    # Patterns for global variable names that are checked for reassignment.\n    # See https://github.com/curioswitch/go-reassign#usage\n    # Default: [\"EOF\", \"Err.*\"]\n    patterns:\n      - \".*\"\n\n  recvcheck:\n    # Disables the built-in method exclusions:\n    # - `MarshalText`\n    # - `MarshalJSON`\n    # - `MarshalYAML`\n    # - `MarshalXML`\n    # - `MarshalBinary`\n    # - `GobEncode`\n    # Default: false\n    disable-builtin: true\n    # User-defined method exclusions.\n    # The format is `struct_name.method_name` (ex: `Foo.MethodName`).\n    # A wildcard `*` can use as a struct name (ex: `*.MethodName`).\n    # Default: []\n    exclusions:\n      - \"*.Value\"\n\n  revive:\n    # Maximum number of open files at the same time.\n    # See https://github.com/mgechev/revive#command-line-flags\n    # Defaults to unlimited.\n    max-open-files: 2048\n\n    # When set to false, ignores files with \"GENERATED\" header, similar to golint.\n    # See https://github.com/mgechev/revive#configuration for details.\n    # Default: false\n    ignore-generated-header: true\n\n    # Sets the default severity.\n    # See https://github.com/mgechev/revive#configuration\n    # Default: warning\n    severity: error\n\n    # Enable all available rules.\n    # Default: false\n    enable-all-rules: true\n\n    # Sets the default failure confidence.\n    # This means that linting errors with less than 0.8 confidence will be ignored.\n    # Default: 0.8\n    confidence: 0.1\n\n    rules:\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#add-constant\n      - name: add-constant\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - maxLitCount: \"3\"\n            allowStrs: '\"\"'\n            allowInts: \"0,1,2\"\n            allowFloats: \"0.0,0.,1.0,1.,2.0,2.\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#argument-limit\n      - name: argument-limit\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ 4 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#atomic\n      - name: atomic\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#banned-characters\n      - name: banned-characters\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ \"Ω\",\"Σ\",\"σ\", \"7\" ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#bare-return\n      - name: bare-return\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#blank-imports\n      - name: blank-imports\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#bool-literal-in-expr\n      - name: bool-literal-in-expr\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#call-to-gc\n      - name: call-to-gc\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#cognitive-complexity\n      - name: cognitive-complexity\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ 7 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#comment-spacings\n      - name: comment-spacings\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - mypragma\n          - otherpragma\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#comments-density\n      - name: comments-density\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ 15 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#confusing-naming\n      - name: confusing-naming\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#confusing-results\n      - name: confusing-results\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#constant-logical-expr\n      - name: constant-logical-expr\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#context-as-argument\n      - name: context-as-argument\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - allowTypesBefore: \"*testing.T,*github.com/user/repo/testing.Harness\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#context-keys-type\n      - name: context-keys-type\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#cyclomatic\n      - name: cyclomatic\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ 3 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#datarace\n      - name: datarace\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#deep-exit\n      - name: deep-exit\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#defer\n      - name: defer\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - [ \"call-chain\", \"loop\" ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#dot-imports\n      - name: dot-imports\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#duplicated-imports\n      - name: duplicated-imports\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#early-return\n      - name: early-return\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"preserveScope\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#empty-block\n      - name: empty-block\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#empty-lines\n      - name: empty-lines\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#enforce-map-style\n      - name: enforce-map-style\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"make\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#enforce-repeated-arg-type-style\n      - name: enforce-repeated-arg-type-style\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"short\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#enforce-slice-style\n      - name: enforce-slice-style\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"make\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#error-naming\n      - name: error-naming\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#error-return\n      - name: error-return\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#error-strings\n      - name: error-strings\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#errorf\n      - name: errorf\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#exported\n      - name: exported\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"checkPrivateReceivers\"\n          - \"disableStutteringCheck\"\n          - \"checkPublicInterface\"\n          - \"disableChecksOnFunctions\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#file-header\n      - name: file-header\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - This is the text that must appear at the top of source files.\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#file-length-limit\n      - name: file-length-limit\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - max: 100\n            skipComments: true\n            skipBlankLines: true\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#filename-format\n      - name: filename-format\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"^[_a-z][_a-z0-9]*.go$\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#flag-parameter\n      - name: flag-parameter\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#function-length\n      - name: function-length\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ 10, 0 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#function-result-limit\n      - name: function-result-limit\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ 3 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#get-return\n      - name: get-return\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#identical-branches\n      - name: identical-branches\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#if-return\n      - name: if-return\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#import-alias-naming\n      - name: import-alias-naming\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"^[a-z][a-z0-9]{0,}$\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#import-shadowing\n      - name: import-shadowing\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#imports-blocklist\n      - name: imports-blocklist\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"crypto/md5\"\n          - \"crypto/sha1\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#increment-decrement\n      - name: increment-decrement\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#indent-error-flow\n      - name: indent-error-flow\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"preserveScope\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#line-length-limit\n      - name: line-length-limit\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ 80 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#max-control-nesting\n      - name: max-control-nesting\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ 3 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#max-public-structs\n      - name: max-public-structs\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ 3 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#modifies-parameter\n      - name: modifies-parameter\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#modifies-value-receiver\n      - name: modifies-value-receiver\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#nested-structs\n      - name: nested-structs\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#optimize-operands-order\n      - name: optimize-operands-order\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#package-comments\n      - name: package-comments\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#range\n      - name: range\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#range-val-address\n      - name: range-val-address\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#range-val-in-closure\n      - name: range-val-in-closure\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#receiver-naming\n      - name: receiver-naming\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - maxLength: 2\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#redefines-builtin-id\n      - name: redefines-builtin-id\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#redundant-import-alias\n      - name: redundant-import-alias\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#string-format\n      - name: string-format\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - - 'core.WriteError[1].Message'\n            - '/^([^A-Z]|$)/'\n            - must not start with a capital letter\n          - - 'fmt.Errorf[0]'\n            - '/(^|[^\\.!?])$/'\n            - must not end in punctuation\n          - - panic\n            - '/^[^\\n]*$/'\n            - must not contain line breaks\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#string-of-int\n      - name: string-of-int\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#struct-tag\n      - name: struct-tag\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"json,inline\"\n          - \"bson,outline,gnu\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#superfluous-else\n      - name: superfluous-else\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"preserveScope\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#time-equal\n      - name: time-equal\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#time-naming\n      - name: time-naming\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unchecked-type-assertion\n      - name: unchecked-type-assertion\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - acceptIgnoredAssertionResult: true\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unconditional-recursion\n      - name: unconditional-recursion\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unexported-naming\n      - name: unexported-naming\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unexported-return\n      - name: unexported-return\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unhandled-error\n      - name: unhandled-error\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"fmt.Printf\"\n          - \"myFunction\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unnecessary-stmt\n      - name: unnecessary-stmt\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unreachable-code\n      - name: unreachable-code\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unused-parameter\n      - name: unused-parameter\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - allowRegex: \"^_\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unused-receiver\n      - name: unused-receiver\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - allowRegex: \"^_\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#use-any\n      - name: use-any\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#useless-break\n      - name: useless-break\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#var-declaration\n      - name: var-declaration\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#var-naming\n      - name: var-naming\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - [ \"ID\" ] # AllowList\n          - [ \"VM\" ] # DenyList\n          - - upperCaseConst: true # Extra parameter (upperCaseConst|skipPackageNameChecks)\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#waitgroup-by-value\n      - name: waitgroup-by-value\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n\n  rowserrcheck:\n    # database/sql is always checked\n    # Default: []\n    packages:\n      - github.com/jmoiron/sqlx\n\n  sloglint:\n    # Enforce not mixing key-value pairs and attributes.\n    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#no-mixed-arguments\n    # Default: true\n    no-mixed-args: false\n    # Enforce using key-value pairs only (overrides no-mixed-args, incompatible with attr-only).\n    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#key-value-pairs-only\n    # Default: false\n    kv-only: true\n    # Enforce using attributes only (overrides no-mixed-args, incompatible with kv-only).\n    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#attributes-only\n    # Default: false\n    attr-only: true\n    # Enforce not using global loggers.\n    # Values:\n    # - \"\": disabled\n    # - \"all\": report all global loggers\n    # - \"default\": report only the default slog logger\n    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#no-global\n    # Default: \"\"\n    no-global: \"all\"\n    # Enforce using methods that accept a context.\n    # Values:\n    # - \"\": disabled\n    # - \"all\": report all contextless calls\n    # - \"scope\": report only if a context exists in the scope of the outermost function\n    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#context-only\n    # Default: \"\"\n    context: \"all\"\n    # Enforce using static values for log messages.\n    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#static-messages\n    # Default: false\n    static-msg: true\n    # Enforce using constants instead of raw keys.\n    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#no-raw-keys\n    # Default: false\n    no-raw-keys: true\n    # Enforce a single key naming convention.\n    # Values: snake, kebab, camel, pascal\n    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#key-naming-convention\n    # Default: \"\"\n    key-naming-case: snake\n    # Enforce not using specific keys.\n    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#forbidden-keys\n    # Default: []\n    forbidden-keys:\n      - time\n      - level\n      - msg\n      - source\n      - foo\n    # Enforce putting arguments on separate lines.\n    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#arguments-on-separate-lines\n    # Default: false\n    args-on-sep-lines: true\n\n  spancheck:\n    # Checks to enable.\n    # Options include:\n    # - `end`: check that `span.End()` is called\n    # - `record-error`: check that `span.RecordError(err)` is called when an error is returned\n    # - `set-status`: check that `span.SetStatus(codes.Error, msg)` is called when an error is returned\n    # Default: [\"end\"]\n    checks:\n      - end\n      - record-error\n      - set-status\n    # A list of regexes for function signatures that silence `record-error` and `set-status` reports\n    # if found in the call path to a returned error.\n    # https://github.com/jjti/go-spancheck#ignore-check-signatures\n    # Default: []\n    ignore-check-signatures:\n      - \"telemetry.RecordError\"\n    # A list of regexes for additional function signatures that create spans.\n    # This is useful if you have a utility method to create spans.\n    # Each entry should be of the form `<regex>:<telemetry-type>`, where `telemetry-type` can be `opentelemetry` or `opencensus`.\n    # https://github.com/jjti/go-spancheck#extra-start-span-signatures\n    # Default: []\n    extra-start-span-signatures:\n      - \"github.com/user/repo/telemetry/trace.Start:opentelemetry\"\n  staticcheck:\n    # SAxxxx checks in https://staticcheck.dev/docs/configuration/options/#checks\n    # Example (to disable some checks): [ \"all\", \"-SA1000\", \"-SA1001\"]\n    # Default: [\"*\"]\n    checks:\n      # Invalid regular expression.\n      # https://staticcheck.dev/docs/checks/#SA1000\n      - SA1000\n      # Invalid template.\n      # https://staticcheck.dev/docs/checks/#SA1001\n      - SA1001\n      # Invalid format in 'time.Parse'.\n      # https://staticcheck.dev/docs/checks/#SA1002\n      - SA1002\n      # Unsupported argument to functions in 'encoding/binary'.\n      # https://staticcheck.dev/docs/checks/#SA1003\n      - SA1003\n      # Suspiciously small untyped constant in 'time.Sleep'.\n      # https://staticcheck.dev/docs/checks/#SA1004\n      - SA1004\n      # Invalid first argument to 'exec.Command'.\n      # https://staticcheck.dev/docs/checks/#SA1005\n      - SA1005\n      # 'Printf' with dynamic first argument and no further arguments.\n      # https://staticcheck.dev/docs/checks/#SA1006\n      - SA1006\n      # Invalid URL in 'net/url.Parse'.\n      # https://staticcheck.dev/docs/checks/#SA1007\n      - SA1007\n      # Non-canonical key in 'http.Header' map.\n      # https://staticcheck.dev/docs/checks/#SA1008\n      - SA1008\n      # '(*regexp.Regexp).FindAll' called with 'n == 0', which will always return zero results.\n      # https://staticcheck.dev/docs/checks/#SA1010\n      - SA1010\n      # Various methods in the \"strings\" package expect valid UTF-8, but invalid input is provided.\n      # https://staticcheck.dev/docs/checks/#SA1011\n      - SA1011\n      # A nil 'context.Context' is being passed to a function, consider using 'context.TODO' instead.\n      # https://staticcheck.dev/docs/checks/#SA1012\n      - SA1012\n      # 'io.Seeker.Seek' is being called with the whence constant as the first argument, but it should be the second.\n      # https://staticcheck.dev/docs/checks/#SA1013\n      - SA1013\n      # Non-pointer value passed to 'Unmarshal' or 'Decode'.\n      # https://staticcheck.dev/docs/checks/#SA1014\n      - SA1014\n      # Using 'time.Tick' in a way that will leak. Consider using 'time.NewTicker', and only use 'time.Tick' in tests, commands and endless functions.\n      # https://staticcheck.dev/docs/checks/#SA1015\n      - SA1015\n      # Trapping a signal that cannot be trapped.\n      # https://staticcheck.dev/docs/checks/#SA1016\n      - SA1016\n      # Channels used with 'os/signal.Notify' should be buffered.\n      # https://staticcheck.dev/docs/checks/#SA1017\n      - SA1017\n      # 'strings.Replace' called with 'n == 0', which does nothing.\n      # https://staticcheck.dev/docs/checks/#SA1018\n      - SA1018\n      # Using a deprecated function, variable, constant or field.\n      # https://staticcheck.dev/docs/checks/#SA1019\n      - SA1019\n      # Using an invalid host:port pair with a 'net.Listen'-related function.\n      # https://staticcheck.dev/docs/checks/#SA1020\n      - SA1020\n      # Using 'bytes.Equal' to compare two 'net.IP'.\n      # https://staticcheck.dev/docs/checks/#SA1021\n      - SA1021\n      # Modifying the buffer in an 'io.Writer' implementation.\n      # https://staticcheck.dev/docs/checks/#SA1023\n      - SA1023\n      # A string cutset contains duplicate characters.\n      # https://staticcheck.dev/docs/checks/#SA1024\n      - SA1024\n      # It is not possible to use '(*time.Timer).Reset''s return value correctly.\n      # https://staticcheck.dev/docs/checks/#SA1025\n      - SA1025\n      # Cannot marshal channels or functions.\n      # https://staticcheck.dev/docs/checks/#SA1026\n      - SA1026\n      # Atomic access to 64-bit variable must be 64-bit aligned.\n      # https://staticcheck.dev/docs/checks/#SA1027\n      - SA1027\n      # 'sort.Slice' can only be used on slices.\n      # https://staticcheck.dev/docs/checks/#SA1028\n      - SA1028\n      # Inappropriate key in call to 'context.WithValue'.\n      # https://staticcheck.dev/docs/checks/#SA1029\n      - SA1029\n      # Invalid argument in call to a 'strconv' function.\n      # https://staticcheck.dev/docs/checks/#SA1030\n      - SA1030\n      # Overlapping byte slices passed to an encoder.\n      # https://staticcheck.dev/docs/checks/#SA1031\n      - SA1031\n      # Wrong order of arguments to 'errors.Is'.\n      # https://staticcheck.dev/docs/checks/#SA1032\n      - SA1032\n      # 'sync.WaitGroup.Add' called inside the goroutine, leading to a race condition.\n      # https://staticcheck.dev/docs/checks/#SA2000\n      - SA2000\n      # Empty critical section, did you mean to defer the unlock?.\n      # https://staticcheck.dev/docs/checks/#SA2001\n      - SA2001\n      # Called 'testing.T.FailNow' or 'SkipNow' in a goroutine, which isn't allowed.\n      # https://staticcheck.dev/docs/checks/#SA2002\n      - SA2002\n      # Deferred 'Lock' right after locking, likely meant to defer 'Unlock' instead.\n      # https://staticcheck.dev/docs/checks/#SA2003\n      - SA2003\n      # 'TestMain' doesn't call 'os.Exit', hiding test failures.\n      # https://staticcheck.dev/docs/checks/#SA3000\n      - SA3000\n      # Assigning to 'b.N' in benchmarks distorts the results.\n      # https://staticcheck.dev/docs/checks/#SA3001\n      - SA3001\n      # Binary operator has identical expressions on both sides.\n      # https://staticcheck.dev/docs/checks/#SA4000\n      - SA4000\n      # '&*x' gets simplified to 'x', it does not copy 'x'.\n      # https://staticcheck.dev/docs/checks/#SA4001\n      - SA4001\n      # Comparing unsigned values against negative values is pointless.\n      # https://staticcheck.dev/docs/checks/#SA4003\n      - SA4003\n      # The loop exits unconditionally after one iteration.\n      # https://staticcheck.dev/docs/checks/#SA4004\n      - SA4004\n      # Field assignment that will never be observed. Did you mean to use a pointer receiver?.\n      # https://staticcheck.dev/docs/checks/#SA4005\n      - SA4005\n      # A value assigned to a variable is never read before being overwritten. Forgotten error check or dead code?.\n      # https://staticcheck.dev/docs/checks/#SA4006\n      - SA4006\n      # The variable in the loop condition never changes, are you incrementing the wrong variable?.\n      # https://staticcheck.dev/docs/checks/#SA4008\n      - SA4008\n      # A function argument is overwritten before its first use.\n      # https://staticcheck.dev/docs/checks/#SA4009\n      - SA4009\n      # The result of 'append' will never be observed anywhere.\n      # https://staticcheck.dev/docs/checks/#SA4010\n      - SA4010\n      # Break statement with no effect. Did you mean to break out of an outer loop?.\n      # https://staticcheck.dev/docs/checks/#SA4011\n      - SA4011\n      # Comparing a value against NaN even though no value is equal to NaN.\n      # https://staticcheck.dev/docs/checks/#SA4012\n      - SA4012\n      # Negating a boolean twice ('!!b') is the same as writing 'b'. This is either redundant, or a typo.\n      # https://staticcheck.dev/docs/checks/#SA4013\n      - SA4013\n      # An if/else if chain has repeated conditions and no side-effects; if the condition didn't match the first time, it won't match the second time, either.\n      # https://staticcheck.dev/docs/checks/#SA4014\n      - SA4014\n      # Calling functions like 'math.Ceil' on floats converted from integers doesn't do anything useful.\n      # https://staticcheck.dev/docs/checks/#SA4015\n      - SA4015\n      # Certain bitwise operations, such as 'x ^ 0', do not do anything useful.\n      # https://staticcheck.dev/docs/checks/#SA4016\n      - SA4016\n      # Discarding the return values of a function without side effects, making the call pointless.\n      # https://staticcheck.dev/docs/checks/#SA4017\n      - SA4017\n      # Self-assignment of variables.\n      # https://staticcheck.dev/docs/checks/#SA4018\n      - SA4018\n      # Multiple, identical build constraints in the same file.\n      # https://staticcheck.dev/docs/checks/#SA4019\n      - SA4019\n      # Unreachable case clause in a type switch.\n      # https://staticcheck.dev/docs/checks/#SA4020\n      - SA4020\n      # \"x = append(y)\" is equivalent to \"x = y\".\n      # https://staticcheck.dev/docs/checks/#SA4021\n      - SA4021\n      # Comparing the address of a variable against nil.\n      # https://staticcheck.dev/docs/checks/#SA4022\n      - SA4022\n      # Impossible comparison of interface value with untyped nil.\n      # https://staticcheck.dev/docs/checks/#SA4023\n      - SA4023\n      # Checking for impossible return value from a builtin function.\n      # https://staticcheck.dev/docs/checks/#SA4024\n      - SA4024\n      # Integer division of literals that results in zero.\n      # https://staticcheck.dev/docs/checks/#SA4025\n      - SA4025\n      # Go constants cannot express negative zero.\n      # https://staticcheck.dev/docs/checks/#SA4026\n      - SA4026\n      # '(*net/url.URL).Query' returns a copy, modifying it doesn't change the URL.\n      # https://staticcheck.dev/docs/checks/#SA4027\n      - SA4027\n      # 'x % 1' is always zero.\n      # https://staticcheck.dev/docs/checks/#SA4028\n      - SA4028\n      # Ineffective attempt at sorting slice.\n      # https://staticcheck.dev/docs/checks/#SA4029\n      - SA4029\n      # Ineffective attempt at generating random number.\n      # https://staticcheck.dev/docs/checks/#SA4030\n      - SA4030\n      # Checking never-nil value against nil.\n      # https://staticcheck.dev/docs/checks/#SA4031\n      - SA4031\n      # Comparing 'runtime.GOOS' or 'runtime.GOARCH' against impossible value.\n      # https://staticcheck.dev/docs/checks/#SA4032\n      - SA4032\n      # Assignment to nil map.\n      # https://staticcheck.dev/docs/checks/#SA5000\n      - SA5000\n      # Deferring 'Close' before checking for a possible error.\n      # https://staticcheck.dev/docs/checks/#SA5001\n      - SA5001\n      # The empty for loop (\"for {}\") spins and can block the scheduler.\n      # https://staticcheck.dev/docs/checks/#SA5002\n      - SA5002\n      # Defers in infinite loops will never execute.\n      # https://staticcheck.dev/docs/checks/#SA5003\n      - SA5003\n      # \"for { select { ...\" with an empty default branch spins.\n      # https://staticcheck.dev/docs/checks/#SA5004\n      - SA5004\n      # The finalizer references the finalized object, preventing garbage collection.\n      # https://staticcheck.dev/docs/checks/#SA5005\n      - SA5005\n      # Infinite recursive call.\n      # https://staticcheck.dev/docs/checks/#SA5007\n      - SA5007\n      # Invalid struct tag.\n      # https://staticcheck.dev/docs/checks/#SA5008\n      - SA5008\n      # Invalid Printf call.\n      # https://staticcheck.dev/docs/checks/#SA5009\n      - SA5009\n      # Impossible type assertion.\n      # https://staticcheck.dev/docs/checks/#SA5010\n      - SA5010\n      # Possible nil pointer dereference.\n      # https://staticcheck.dev/docs/checks/#SA5011\n      - SA5011\n      # Passing odd-sized slice to function expecting even size.\n      # https://staticcheck.dev/docs/checks/#SA5012\n      - SA5012\n      # Using 'regexp.Match' or related in a loop, should use 'regexp.Compile'.\n      # https://staticcheck.dev/docs/checks/#SA6000\n      - SA6000\n      # Missing an optimization opportunity when indexing maps by byte slices.\n      # https://staticcheck.dev/docs/checks/#SA6001\n      - SA6001\n      # Storing non-pointer values in 'sync.Pool' allocates memory.\n      # https://staticcheck.dev/docs/checks/#SA6002\n      - SA6002\n      # Converting a string to a slice of runes before ranging over it.\n      # https://staticcheck.dev/docs/checks/#SA6003\n      - SA6003\n      # Inefficient string comparison with 'strings.ToLower' or 'strings.ToUpper'.\n      # https://staticcheck.dev/docs/checks/#SA6005\n      - SA6005\n      # Using io.WriteString to write '[]byte'.\n      # https://staticcheck.dev/docs/checks/#SA6006\n      - SA6006\n      # Defers in range loops may not run when you expect them to.\n      # https://staticcheck.dev/docs/checks/#SA9001\n      - SA9001\n      # Using a non-octal 'os.FileMode' that looks like it was meant to be in octal.\n      # https://staticcheck.dev/docs/checks/#SA9002\n      - SA9002\n      # Empty body in an if or else branch.\n      # https://staticcheck.dev/docs/checks/#SA9003\n      - SA9003\n      # Only the first constant has an explicit type.\n      # https://staticcheck.dev/docs/checks/#SA9004\n      - SA9004\n      # Trying to marshal a struct with no public fields nor custom marshaling.\n      # https://staticcheck.dev/docs/checks/#SA9005\n      - SA9005\n      # Dubious bit shifting of a fixed size integer value.\n      # https://staticcheck.dev/docs/checks/#SA9006\n      - SA9006\n      # Deleting a directory that shouldn't be deleted.\n      # https://staticcheck.dev/docs/checks/#SA9007\n      - SA9007\n      # 'else' branch of a type assertion is probably not reading the right value.\n      # https://staticcheck.dev/docs/checks/#SA9008\n      - SA9008\n      # Ineffectual Go compiler directive.\n      # https://staticcheck.dev/docs/checks/#SA9009\n      - SA9009\n\n  stylecheck:\n    # https://staticcheck.dev/docs/configuration/options/#dot_import_whitelist\n    # Default: [\"github.com/mmcloughlin/avo/build\", \"github.com/mmcloughlin/avo/operand\", \"github.com/mmcloughlin/avo/reg\"]\n    dot-import-whitelist:\n      - fmt\n    # https://staticcheck.dev/docs/configuration/options/#initialisms\n    # Default: [\"ACL\", \"API\", \"ASCII\", \"CPU\", \"CSS\", \"DNS\", \"EOF\", \"GUID\", \"HTML\", \"HTTP\", \"HTTPS\", \"ID\", \"IP\", \"JSON\", \"QPS\", \"RAM\", \"RPC\", \"SLA\", \"SMTP\", \"SQL\", \"SSH\", \"TCP\", \"TLS\", \"TTL\", \"UDP\", \"UI\", \"GID\", \"UID\", \"UUID\", \"URI\", \"URL\", \"UTF8\", \"VM\", \"XML\", \"XMPP\", \"XSRF\", \"XSS\", \"SIP\", \"RTP\", \"AMQP\", \"DB\", \"TS\"]\n    initialisms: [ \"ACL\", \"API\", \"ASCII\", \"CPU\", \"CSS\", \"DNS\", \"EOF\", \"GUID\", \"HTML\", \"HTTP\", \"HTTPS\", \"ID\", \"IP\", \"JSON\", \"QPS\", \"RAM\", \"RPC\", \"SLA\", \"SMTP\", \"SQL\", \"SSH\", \"TCP\", \"TLS\", \"TTL\", \"UDP\", \"UI\", \"GID\", \"UID\", \"UUID\", \"URI\", \"URL\", \"UTF8\", \"VM\", \"XML\", \"XMPP\", \"XSRF\", \"XSS\", \"SIP\", \"RTP\", \"AMQP\", \"DB\", \"TS\" ]\n    # https://staticcheck.dev/docs/configuration/options/#http_status_code_whitelist\n    # Default: [\"200\", \"400\", \"404\", \"500\"]\n    http-status-code-whitelist: [ \"200\", \"400\", \"404\", \"500\" ]\n    # STxxxx checks in https://staticcheck.dev/docs/configuration/options/#checks\n    # Example (to disable some checks): [ \"all\", \"-ST1000\", \"-ST1003\", \"-ST1016\", \"-ST1020\", \"-ST1021\", \"-ST1022\" ]\n    # Default: [\"*\"]\n    checks:\n      # Incorrect or missing package comment.\n      # https://staticcheck.dev/docs/checks/#ST1000\n      - ST1000\n      # Dot imports are discouraged.\n      # https://staticcheck.dev/docs/checks/#ST1001\n      - ST1001\n      # Poorly chosen identifier.\n      # https://staticcheck.dev/docs/checks/#ST1003\n      - ST1003\n      # Incorrectly formatted error string.\n      # https://staticcheck.dev/docs/checks/#ST1005\n      - ST1005\n      # Poorly chosen receiver name.\n      # https://staticcheck.dev/docs/checks/#ST1006\n      - ST1006\n      # A function's error value should be its last return value.\n      # https://staticcheck.dev/docs/checks/#ST1008\n      - ST1008\n      # Poorly chosen name for variable of type 'time.Duration'.\n      # https://staticcheck.dev/docs/checks/#ST1011\n      - ST1011\n      # Poorly chosen name for error variable.\n      # https://staticcheck.dev/docs/checks/#ST1012\n      - ST1012\n      # Should use constants for HTTP error codes, not magic numbers.\n      # https://staticcheck.dev/docs/checks/#ST1013\n      - ST1013\n      # A switch's default case should be the first or last case.\n      # https://staticcheck.dev/docs/checks/#ST1015\n      - ST1015\n      # Use consistent method receiver names.\n      # https://staticcheck.dev/docs/checks/#ST1016\n      - ST1016\n      # Don't use Yoda conditions.\n      # https://staticcheck.dev/docs/checks/#ST1017\n      - ST1017\n      # Avoid zero-width and control characters in string literals.\n      # https://staticcheck.dev/docs/checks/#ST1018\n      - ST1018\n      # Importing the same package multiple times.\n      # https://staticcheck.dev/docs/checks/#ST1019\n      - ST1019\n      # The documentation of an exported function should start with the function's name.\n      # https://staticcheck.dev/docs/checks/#ST1020\n      - ST1020\n      # The documentation of an exported type should start with type's name.\n      # https://staticcheck.dev/docs/checks/#ST1021\n      - ST1021\n      # The documentation of an exported variable or constant should start with variable's name.\n      # https://staticcheck.dev/docs/checks/#ST1022\n      - ST1022\n      # Redundant type in variable declaration.\n      # https://staticcheck.dev/docs/checks/#ST1023\n      - ST1023\n\n  tagalign:\n    # Align and sort can be used together or separately.\n    #\n    # Whether enable align. If true, the struct tags will be aligned.\n    # e.g.:\n    # type FooBar struct {\n    #     Bar    string `json:\"bar\" validate:\"required\"`\n    #     FooFoo int8   `json:\"foo_foo\" validate:\"required\"`\n    # }\n    # will be formatted to:\n    # type FooBar struct {\n    #     Bar    string `json:\"bar\"     validate:\"required\"`\n    #     FooFoo int8   `json:\"foo_foo\" validate:\"required\"`\n    # }\n    # Default: true.\n    align: false\n    # Whether enable tags sort.\n    # If true, the tags will be sorted by name in ascending order.\n    # e.g.: `xml:\"bar\" json:\"bar\" validate:\"required\"` -> `json:\"bar\" validate:\"required\" xml:\"bar\"`\n    # Default: true\n    sort: false\n    # Specify the order of tags, the other tags will be sorted by name.\n    # This option will be ignored if `sort` is false.\n    # Default: []\n    order:\n      - json\n      - yaml\n      - yml\n      - toml\n      - mapstructure\n      - binding\n      - validate\n    # Whether enable strict style.\n    # In this style, the tags will be sorted and aligned in the dictionary order,\n    # and the tags with the same name will be aligned together.\n    # Note: This option will be ignored if 'align' or 'sort' is false.\n    # Default: false\n    strict: true\n\n  tagliatelle:\n    # Checks the struct tag name case.\n    case:\n      # Defines the association between tag name and case.\n      # Any struct tag name can be used.\n      # Supported string cases:\n      # - `camel`\n      # - `pascal`\n      # - `kebab`\n      # - `snake`\n      # - `upperSnake`\n      # - `goCamel`\n      # - `goPascal`\n      # - `goKebab`\n      # - `goSnake`\n      # - `upper`\n      # - `lower`\n      # - `header`\n      rules:\n        json: camel\n        yaml: camel\n        xml: camel\n        toml: camel\n        bson: camel\n        avro: snake\n        mapstructure: kebab\n        env: upperSnake\n        envconfig: upperSnake\n        whatever: snake\n      # Defines the association between tag name and case.\n      # Important: the `extended-rules` overrides `rules`.\n      # Default: empty\n      extended-rules:\n        json:\n          # Supported string cases:\n          # - `camel`\n          # - `pascal`\n          # - `kebab`\n          # - `snake`\n          # - `upperSnake`\n          # - `goCamel`\n          # - `goPascal`\n          # - `goKebab`\n          # - `goSnake`\n          # - `header`\n          # - `lower`\n          # - `header`\n          #\n          # Required\n          case: camel\n          # Adds 'AMQP', 'DB', 'GID', 'RTP', 'SIP', 'TS' to initialisms,\n          # and removes 'LHS', 'RHS' from initialisms.\n          # Default: false\n          extra-initialisms: true\n          # Defines initialism additions and overrides.\n          # Default: empty\n          initialism-overrides:\n            DB: true # add a new initialism\n            LHS: false # disable a default initialism.\n            # ...\n      # Uses the struct field name to check the name of the struct tag.\n      # Default: false\n      use-field-name: true\n      # The field names to ignore.\n      # Default: []\n      ignored-fields:\n        - Bar\n        - Foo\n      # Overrides the default/root configuration.\n      # Default: []\n      overrides:\n        -\n          # The package path (uses `/` only as a separator).\n          # Required\n          pkg: foo/bar\n          # Default: empty or the same as the default/root configuration.\n          rules:\n            json: snake\n            xml: pascal\n          # Default: empty or the same as the default/root configuration.\n          extended-rules:\n            # Same options as the base `extended-rules`.\n          # Default: false (WARNING: it doesn't follow the default/root configuration)\n          use-field-name: true\n          # The field names to ignore.\n          # Default: [] or the same as the default/root configuration.\n          ignored-fields:\n            - Bar\n            - Foo\n          # Ignore the package (takes precedence over all other configurations).\n          # Default: false\n          ignore: true\n\n  tenv:\n    # The option `all` will run against whole test files (`_test.go`) regardless of method/function signatures.\n    # Otherwise, only methods that take `*testing.T`, `*testing.B`, and `testing.TB` as arguments are checked.\n    # Default: false\n    all: false\n\n  testifylint:\n    # Enable all checkers (https://github.com/Antonboom/testifylint#checkers).\n    # Default: false\n    enable-all: true\n    # Disable checkers by name\n    # (in addition to default\n    #   suite-thelper\n    # ).\n    disable:\n      - blank-import\n      - bool-compare\n      - compares\n      - contains\n      - empty\n      - encoded-compare\n      - error-is-as\n      - error-nil\n      - expected-actual\n      - float-compare\n      - formatter\n      - go-require\n      - len\n      - negative-positive\n      - nil-compare\n      - regexp\n      - require-error\n      - suite-broken-parallel\n      - suite-dont-use-pkg\n      - suite-extra-assert-call\n      - suite-subtest-run\n      - suite-thelper\n      - useless-assert\n\n    # Disable all checkers (https://github.com/Antonboom/testifylint#checkers).\n    # Default: false\n    disable-all: true\n    # Enable checkers by name\n    # (in addition to default\n    #   blank-import, bool-compare, compares, contains, empty, encoded-compare, error-is-as, error-nil, expected-actual,\n    #   go-require, float-compare, formatter, len, negative-positive, nil-compare, regexp, require-error,\n    #   suite-broken-parallel, suite-dont-use-pkg, suite-extra-assert-call, suite-subtest-run, useless-assert\n    # ).\n    enable:\n      - blank-import\n      - bool-compare\n      - compares\n      - contains\n      - empty\n      - encoded-compare\n      - error-is-as\n      - error-nil\n      - expected-actual\n      - float-compare\n      - formatter\n      - go-require\n      - len\n      - negative-positive\n      - nil-compare\n      - regexp\n      - require-error\n      - suite-broken-parallel\n      - suite-dont-use-pkg\n      - suite-extra-assert-call\n      - suite-subtest-run\n      - suite-thelper\n      - useless-assert\n\n    bool-compare:\n      # To ignore user defined types (over builtin bool).\n      # Default: false\n      ignore-custom-types: true\n    expected-actual:\n      # Regexp for expected variable name.\n      # Default: (^(exp(ected)?|want(ed)?)([A-Z]\\w*)?$)|(^(\\w*[a-z])?(Exp(ected)?|Want(ed)?)$)\n      pattern: ^expected\n    formatter:\n      # To enable go vet's printf checks.\n      # Default: true\n      check-format-string: false\n      # To require f-assertions (e.g. `assert.Equalf`) if format string is used, even if there are no variable-length\n      # variables, i.e. it requires `require.NoErrorf` for both these cases:\n      # - require.NoErrorf(t, err, \"unexpected error\")\n      # - require.NoErrorf(t, err, \"unexpected error for sid: %v\", sid)\n      # To understand this behavior, please read the\n      # https://github.com/Antonboom/testifylint?tab=readme-ov-file#historical-reference-of-formatter.\n      # Default: false\n      require-f-funcs: true\n    go-require:\n      # To ignore HTTP handlers (like http.HandlerFunc).\n      # Default: false\n      ignore-http-handlers: true\n    require-error:\n      # Regexp for assertions to analyze. If defined, then only matched error assertions will be reported.\n      # Default: \"\"\n      fn-pattern: ^(Errorf?|NoErrorf?)$\n    suite-extra-assert-call:\n      # To require or remove extra Assert() call?\n      # Default: remove\n      mode: require\n\n  testpackage:\n    # Regexp pattern to skip files.\n    # Default: \"(export|internal)_test\\\\.go\"\n    skip-regexp: (export|internal)_test\\.go\n    # List of packages that don't end with _test that tests are allowed to be in.\n    # Default: \"main\"\n    allow-packages:\n      - example\n      - main\n\n  thelper:\n    test:\n      # Check *testing.T is first param (or after context.Context) of helper function.\n      # Default: true\n      first: false\n      # Check *testing.T param has name t.\n      # Default: true\n      name: false\n      # Check t.Helper() begins helper function.\n      # Default: true\n      begin: false\n    benchmark:\n      # Check *testing.B is first param (or after context.Context) of helper function.\n      # Default: true\n      first: false\n      # Check *testing.B param has name b.\n      # Default: true\n      name: false\n      # Check b.Helper() begins helper function.\n      # Default: true\n      begin: false\n    tb:\n      # Check *testing.TB is first param (or after context.Context) of helper function.\n      # Default: true\n      first: false\n      # Check *testing.TB param has name tb.\n      # Default: true\n      name: false\n      # Check tb.Helper() begins helper function.\n      # Default: true\n      begin: false\n    fuzz:\n      # Check *testing.F is first param (or after context.Context) of helper function.\n      # Default: true\n      first: false\n      # Check *testing.F param has name f.\n      # Default: true\n      name: false\n      # Check f.Helper() begins helper function.\n      # Default: true\n      begin: false\n\n  usestdlibvars:\n    # Suggest the use of http.MethodXX.\n    # Default: true\n    http-method: false\n    # Suggest the use of http.StatusXX.\n    # Default: true\n    http-status-code: false\n    # Suggest the use of time.Weekday.String().\n    # Default: true\n    time-weekday: true\n    # Suggest the use of time.Month.String().\n    # Default: false\n    time-month: true\n    # Suggest the use of time.Layout.\n    # Default: false\n    time-layout: true\n    # Suggest the use of crypto.Hash.String().\n    # Default: false\n    crypto-hash: true\n    # Suggest the use of rpc.DefaultXXPath.\n    # Default: false\n    default-rpc-path: true\n    # Suggest the use of sql.LevelXX.String().\n    # Default: false\n    sql-isolation-level: true\n    # Suggest the use of tls.SignatureScheme.String().\n    # Default: false\n    tls-signature-scheme: true\n    # Suggest the use of constant.Kind.String().\n    # Default: false\n    constant-kind: true\n\n  usetesting:\n    # Enable/disable `os.CreateTemp(\"\", ...)` detections.\n    # Default: true\n    os-create-temp: false\n\n    # Enable/disable `os.MkdirTemp()` detections.\n    # Default: true\n    os-mkdir-temp: false\n\n    # Enable/disable `os.Setenv()` detections.\n    # Default: false\n    os-setenv: true\n\n    # Enable/disable `os.TempDir()` detections.\n    # Default: false\n    os-temp-dir: true\n\n    # Enable/disable `os.Chdir()` detections.\n    # Disabled if Go < 1.24.\n    # Default: true\n    os-chdir: false\n\n    # Enable/disable `context.Background()` detections.\n    # Disabled if Go < 1.24.\n    # Default: true\n    context-background: false\n\n    # Enable/disable `context.TODO()` detections.\n    # Disabled if Go < 1.24.\n    # Default: true\n    context-todo: false\n\n  unconvert:\n    # Remove conversions that force intermediate rounding.\n    # Default: false\n    fast-math: true\n    # Be more conservative (experimental).\n    # Default: false\n    safe: true\n\n  unparam:\n    # Inspect exported functions.\n    #\n    # Set to true if no external program/library imports your code.\n    # XXX: if you enable this setting, unparam will report a lot of false-positives in text editors:\n    # if it's called for subdir of a project it can't find external interfaces. All text editor integrations\n    # with golangci-lint call it on a directory with the changed file.\n    #\n    # Default: false\n    check-exported: true\n\n  unused:\n    # Mark all struct fields that have been written to as used.\n    # Default: true\n    field-writes-are-uses: false\n    # Treat IncDec statement (e.g. `i++` or `i--`) as both read and write operation instead of just write.\n    # Default: false\n    post-statements-are-reads: true\n    # Mark all exported fields as used.\n    # default: true\n    exported-fields-are-used: false\n    # Mark all function parameters as used.\n    # default: true\n    parameters-are-used: false\n    # Mark all local variables as used.\n    # default: true\n    local-variables-are-used: false\n    # Mark all identifiers inside generated files as used.\n    # Default: true\n    generated-is-used: false\n\n  varnamelen:\n    # The longest distance, in source lines, that is being considered a \"small scope\".\n    # Variables used in at most this many lines will be ignored.\n    # Default: 5\n    max-distance: 6\n    # The minimum length of a variable's name that is considered \"long\".\n    # Variable names that are at least this long will be ignored.\n    # Default: 3\n    min-name-length: 2\n    # Check method receivers.\n    # Default: false\n    check-receiver: true\n    # Check named return values.\n    # Default: false\n    check-return: true\n    # Check type parameters.\n    # Default: false\n    check-type-param: true\n    # Ignore \"ok\" variables that hold the bool return value of a type assertion.\n    # Default: false\n    ignore-type-assert-ok: true\n    # Ignore \"ok\" variables that hold the bool return value of a map index.\n    # Default: false\n    ignore-map-index-ok: true\n    # Ignore \"ok\" variables that hold the bool return value of a channel receive.\n    # Default: false\n    ignore-chan-recv-ok: true\n    # Optional list of variable names that should be ignored completely.\n    # Default: []\n    ignore-names:\n      - err\n    # Optional list of variable declarations that should be ignored completely.\n    # Entries must be in one of the following forms (see below for examples):\n    # - for variables, parameters, named return values, method receivers, or type parameters:\n    #   <name> <type>  (<type> can also be a pointer/slice/map/chan/...)\n    # - for constants: const <name>\n    #\n    # Default: []\n    ignore-decls:\n      - c echo.Context\n      - t testing.T\n      - f *foo.Bar\n      - e error\n      - i int\n      - const C\n      - T any\n      - m map[string]int\n\n  whitespace:\n    # Enforces newlines (or comments) after every multi-line if statement.\n    # Default: false\n    multi-if: true\n    # Enforces newlines (or comments) after every multi-line function signature.\n    # Default: false\n    multi-func: true\n\n  wrapcheck:\n    # An array of strings specifying additional substrings of signatures to ignore.\n    # Unlike 'ignoreSigs', this option extends the default set (or the set specified in 'ignoreSigs') without replacing it entirely.\n    # This allows you to add specific signatures to the ignore list\n    # while retaining the defaults or any items in 'ignoreSigs'.\n    # Default: []\n    extra-ignore-sigs:\n      - .CustomError(\n      - .SpecificWrap(\n\n    # An array of strings that specify substrings of signatures to ignore.\n    # If this set, it will override the default set of ignored signatures.\n    # See https://github.com/tomarrell/wrapcheck#configuration for more information.\n    # Default: [\".Errorf(\", \"errors.New(\", \"errors.Unwrap(\", \"errors.Join(\", \".Wrap(\", \".Wrapf(\", \".WithMessage(\", \".WithMessagef(\", \".WithStack(\"]\n    ignoreSigs:\n      - .Errorf(\n      - errors.New(\n      - errors.Unwrap(\n      - errors.Join(\n      - .Wrap(\n      - .Wrapf(\n      - .WithMessage(\n      - .WithMessagef(\n      - .WithStack(\n    # An array of strings that specify regular expressions of signatures to ignore.\n    # Default: []\n    ignoreSigRegexps:\n      - \\.New.*Error\\(\n    # An array of strings that specify globs of packages to ignore.\n    # Default: []\n    ignorePackageGlobs:\n      - encoding/*\n      - github.com/pkg/*\n    # An array of strings that specify regular expressions of interfaces to ignore.\n    # Default: []\n    ignoreInterfaceRegexps:\n      - ^(?i)c(?-i)ach(ing|e)\n\n  wsl:\n    # Do strict checking when assigning from append (x = append(x, y)).\n    # If this is set to true - the append call must append either a variable\n    # assigned, called or used on the line above.\n    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#strict-append\n    # Default: true\n    strict-append: false\n\n    # Allows assignments to be cuddled with variables used in calls on\n    # line above and calls to be cuddled with assignments of variables\n    # used in call on line above.\n    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#allow-assign-and-call\n    # Default: true\n    allow-assign-and-call: false\n\n    # Allows assignments to be cuddled with anything.\n    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#allow-assign-and-anything\n    # Default: false\n    allow-assign-and-anything: true\n\n    # Allows cuddling to assignments even if they span over multiple lines.\n    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#allow-multiline-assign\n    # Default: true\n    allow-multiline-assign: false\n\n    # If the number of lines in a case block is equal to or lager than this number,\n    # the case *must* end white a newline.\n    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#force-case-trailing-whitespace\n    # Default: 0\n    force-case-trailing-whitespace: 1\n\n    # Allow blocks to end with comments.\n    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#allow-trailing-comment\n    # Default: false\n    allow-trailing-comment: true\n\n    # Allow multiple comments in the beginning of a block separated with newline.\n    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#allow-separated-leading-comment\n    # Default: false\n    allow-separated-leading-comment: true\n\n    # Allow multiple var/declaration statements to be cuddled.\n    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#allow-cuddle-declarations\n    # Default: false\n    allow-cuddle-declarations: true\n\n    # A list of call idents that everything can be cuddled with.\n    # Defaults: [ \"Lock\", \"RLock\" ]\n    allow-cuddle-with-calls: [ \"Foo\", \"Bar\" ]\n\n    # AllowCuddleWithRHS is a list of right hand side variables that is allowed\n    # to be cuddled with anything.\n    # Defaults: [ \"Unlock\", \"RUnlock\" ]\n    allow-cuddle-with-rhs: [ \"Foo\", \"Bar\" ]\n\n    # Causes an error when an If statement that checks an error variable doesn't\n    # cuddle with the assignment of that variable.\n    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#force-err-cuddling\n    # Default: false\n    force-err-cuddling: true\n\n    # When force-err-cuddling is enabled this is a list of names\n    # used for error variables to check for in the conditional.\n    # Default: [ \"err\" ]\n    error-variable-names: [ \"foo\" ]\n\n    # Causes an error if a short declaration (:=) cuddles with anything other than\n    # another short declaration.\n    # This logic overrides force-err-cuddling among others.\n    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#force-short-decl-cuddling\n    # Default: false\n    force-short-decl-cuddling: true\n\n  # The custom section can be used to define linter plugins to be loaded at runtime.\n  # See README documentation for more info.\n  custom:\n    # Each custom linter should have a unique name.\n    example:\n      # The plugin type.\n      # It can be `goplugin` or `module`.\n      # Default: goplugin\n      type: module\n      # The path to the plugin *.so. Can be absolute or local.\n      # Required for each custom linter.\n      path: /path/to/example.so\n      # The description of the linter.\n      # Optional.\n      description: This is an example usage of a plugin linter.\n      # Intended to point to the repo location of the linter.\n      # Optional.\n      original-url: github.com/golangci/example-linter\n      # Plugins settings/configuration.\n      # Only work with plugin based on `linterdb.PluginConstructor`.\n      # Optional.\n      settings:\n        foo: bar\n\n\nissues:\n  # List of regexps of issue texts to exclude.\n  #\n  # But independently of this option we use default exclude patterns,\n  # it can be disabled by `exclude-use-default: false`.\n  # To list all excluded by default patterns execute `golangci-lint run --help`\n  #\n  # Default: https://golangci-lint.run/usage/false-positives/#default-exclusions\n  exclude:\n    - abcdef\n\n  # Excluding configuration per-path, per-linter, per-text and per-source\n  exclude-rules:\n    # Exclude some linters from running on tests files.\n    - path: _test\\.go\n      linters:\n        - gocyclo\n        - errcheck\n        - dupl\n        - gosec\n\n    # Run some linter only for test files by excluding its issues for everything else.\n    - path-except: _test\\.go\n      linters:\n        - forbidigo\n\n    # Exclude known linters from partially hard-vendored code,\n    # which is impossible to exclude via `nolint` comments.\n    # `/` will be replaced by current OS file path separator to properly work on Windows.\n    - path: internal/hmac/\n      text: \"weak cryptographic primitive\"\n      linters:\n        - gosec\n\n    # Exclude some `staticcheck` messages.\n    - linters:\n        - staticcheck\n      text: \"SA9003:\"\n\n    # Exclude `lll` issues for long lines with `go:generate`.\n    - linters:\n        - lll\n      source: \"^//go:generate \"\n\n  # Independently of option `exclude` we use default exclude patterns,\n  # it can be disabled by this option.\n  # To list all excluded by default patterns execute `golangci-lint run --help`.\n  # Default: true\n  exclude-use-default: false\n\n  # If set to true, `exclude` and `exclude-rules` regular expressions become case-sensitive.\n  # Default: false\n  exclude-case-sensitive: false\n\n  # Which dirs to exclude: issues from them won't be reported.\n  # Can use regexp here: `generated.*`, regexp is applied on full path,\n  # including the path prefix if one is set.\n  # Default dirs are skipped independently of this option's value (see exclude-dirs-use-default).\n  # \"/\" will be replaced by current OS file path separator to properly work on Windows.\n  # Default: []\n  exclude-dirs:\n    - src/external_libs\n    - autogenerated_by_my_lib\n\n  # Enables exclude of directories:\n  # - vendor$, third_party$, testdata$, examples$, Godeps$, builtin$\n  # Default: true\n  exclude-dirs-use-default: false\n\n  # Which files to exclude: they will be analyzed, but issues from them won't be reported.\n  # There is no need to include all autogenerated files,\n  # we confidently recognize autogenerated files.\n  # If it's not, please let us know.\n  # \"/\" will be replaced by current OS file path separator to properly work on Windows.\n  # Default: []\n  exclude-files:\n    - \".*\\\\.my\\\\.go$\"\n    - lib/bad.go\n\n  # Mode of the generated files analysis.\n  #\n  # - `strict`: sources are excluded by following strictly the Go generated file convention.\n  #    Source files that have lines matching only the following regular expression will be excluded: `^// Code generated .* DO NOT EDIT\\.$`\n  #    This line must appear before the first non-comment, non-blank text in the file.\n  #    https://go.dev/s/generatedcode\n  # - `lax`: sources are excluded if they contain lines `autogenerated file`, `code generated`, `do not edit`, etc.\n  # - `disable`: disable the generated files exclusion.\n  #\n  # Default: lax\n  exclude-generated: strict\n\n  # The list of ids of default excludes to include or disable.\n  # https://golangci-lint.run/usage/false-positives/#default-exclusions\n  # Default: []\n  include:\n    - EXC0001\n    - EXC0002\n    - EXC0003\n    - EXC0004\n    - EXC0005\n    - EXC0006\n    - EXC0007\n    - EXC0008\n    - EXC0009\n    - EXC0010\n    - EXC0011\n    - EXC0012\n    - EXC0013\n    - EXC0014\n    - EXC0015\n\n  # Maximum issues count per one linter.\n  # Set to 0 to disable.\n  # Default: 50\n  max-issues-per-linter: 0\n\n  # Maximum count of issues with the same text.\n  # Set to 0 to disable.\n  # Default: 3\n  max-same-issues: 0\n\n  # Make issues output unique by line.\n  # Default: true\n  uniq-by-line: false\n\n  # Show only new issues: if there are unstaged changes or untracked files,\n  # only those changes are analyzed, else only changes in HEAD~ are analyzed.\n  # It's a super-useful option for integration of golangci-lint into existing large codebase.\n  # It's not practical to fix all existing issues at the moment of integration:\n  # much better don't allow issues in new code.\n  #\n  # Default: false\n  new: true\n\n  # Show only new issues created after git revision `REV`.\n  # Default: \"\"\n  new-from-rev: HEAD\n\n  # Show only new issues created in git patch with set file path.\n  # Default: \"\"\n  new-from-patch: path/to/patch/file\n\n  # Show issues in any part of update files (requires new-from-rev or new-from-patch).\n  # Default: false\n  whole-files: true\n\n  # Fix found issues (if it's supported by the linter).\n  # Default: false\n  fix: true\n\n\n# output configuration options\noutput:\n  # The formats used to render issues.\n  # Formats:\n  # - `colored-line-number`\n  # - `line-number`\n  # - `json`\n  # - `colored-tab`\n  # - `tab`\n  # - `html`\n  # - `checkstyle`\n  # - `code-climate`\n  # - `junit-xml`\n  # - `junit-xml-extended`\n  # - `github-actions`\n  # - `teamcity`\n  # - `sarif`\n  # Output path can be either `stdout`, `stderr` or path to the file to write to.\n  #\n  # For the CLI flag (`--out-format`), multiple formats can be specified by separating them by comma.\n  # The output can be specified for each of them by separating format name and path by colon symbol.\n  # Example: \"--out-format=checkstyle:report.xml,json:stdout,colored-line-number\"\n  # The CLI flag (`--out-format`) override the configuration file.\n  #\n  # Default:\n  #   formats:\n  #     - format: colored-line-number\n  #       path: stdout\n  formats:\n    - format: json\n      path: stderr\n    - format: checkstyle\n      path: report.xml\n    - format: colored-line-number\n\n  # Print lines of code with issue.\n  # Default: true\n  print-issued-lines: false\n\n  # Print linter name in the end of issue text.\n  # Default: true\n  print-linter-name: false\n\n  # Add a prefix to the output file references.\n  # Default: \"\"\n  path-prefix: \"\"\n\n  # Sort results by the order defined in `sort-order`.\n  # Default: false\n  sort-results: true\n\n  # Order to use when sorting results.\n  # Require `sort-results` to `true`.\n  # Possible values: `file`, `linter`, and `severity`.\n  #\n  # If the severity values are inside the following list, they are ordered in this order:\n  #   1. error\n  #   2. warning\n  #   3. high\n  #   4. medium\n  #   5. low\n  # Either they are sorted alphabetically.\n  #\n  # Default: [\"file\"]\n  sort-order:\n    - linter\n    - severity\n    - file # filepath, line, and column.\n\n  # Show statistics per linter.\n  # Default: false\n  show-stats: true\n\n\n# Options for analysis running.\nrun:\n  # Timeout for analysis, e.g. 30s, 5m.\n  # If the value is lower or equal to 0, the timeout is disabled.\n  # Default: 1m\n  timeout: 5m\n\n  # Exit code when at least one issue was found.\n  # Default: 1\n  issues-exit-code: 2\n\n  # Include test files or not.\n  # Default: true\n  tests: false\n\n  # List of build tags, all linters use it.\n  # Default: []\n  build-tags:\n    - mytag\n\n  # If set, we pass it to \"go list -mod={option}\". From \"go help modules\":\n  # If invoked with -mod=readonly, the go command is disallowed from the implicit\n  # automatic updating of go.mod described above. Instead, it fails when any changes\n  # to go.mod are needed. This setting is most useful to check that go.mod does\n  # not need updates, such as in a continuous integration and testing system.\n  # If invoked with -mod=vendor, the go command assumes that the vendor\n  # directory holds the correct copies of dependencies and ignores\n  # the dependency descriptions in go.mod.\n  #\n  # Allowed values: readonly|vendor|mod\n  # Default: \"\"\n  modules-download-mode: readonly\n\n  # Allow multiple parallel golangci-lint instances running.\n  # If false, golangci-lint acquires file lock on start.\n  # Default: false\n  allow-parallel-runners: true\n\n  # Allow multiple golangci-lint instances running, but serialize them around a lock.\n  # If false, golangci-lint exits with an error if it fails to acquire file lock on start.\n  # Default: false\n  allow-serial-runners: true\n\n  # Define the Go version limit.\n  # Mainly related to generics support since go1.18.\n  # Default: use Go version from the go.mod file, fallback on the env var `GOVERSION`, fallback on 1.17\n  go: '1.19'\n\n  # Number of operating system threads (`GOMAXPROCS`) that can execute golangci-lint simultaneously.\n  # If it is explicitly set to 0 (i.e. not the default) then golangci-lint will automatically set the value to match Linux container CPU quota.\n  # Default: the number of logical CPUs in the machine\n  concurrency: 4\n\n\nseverity:\n  # Set the default severity for issues.\n  #\n  # If severity rules are defined and the issues do not match or no severity is provided to the rule\n  # this will be the default severity applied.\n  # Severities should match the supported severity names of the selected out format.\n  # - Code climate: https://docs.codeclimate.com/docs/issues#issue-severity\n  # - Checkstyle: https://checkstyle.sourceforge.io/property_types.html#SeverityLevel\n  # - GitHub: https://help.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-error-message\n  # - TeamCity: https://www.jetbrains.com/help/teamcity/service-messages.html#Inspection+Instance\n  #\n  # `@linter` can be used as severity value to keep the severity from linters (e.g. revive, gosec, ...)\n  #\n  # Default: \"\"\n  default-severity: error\n\n  # If set to true `severity-rules` regular expressions become case-sensitive.\n  # Default: false\n  case-sensitive: true\n\n  # When a list of severity rules are provided, severity information will be added to lint issues.\n  # Severity rules have the same filtering capability as exclude rules\n  # except you are allowed to specify one matcher per severity rule.\n  #\n  # `@linter` can be used as severity value to keep the severity from linters (e.g. revive, gosec, ...)\n  #\n  # Only affects out formats that support setting severity information.\n  #\n  # Default: []\n  rules:\n    - linters:\n        - dupl\n      severity: info\n"
        },
        {
          "name": ".golangci.reference.yml",
          "type": "blob",
          "size": 147.73828125,
          "content": "# This file contains all available configuration options\n# with their default values (in comments).\n#\n# This file is not a configuration example,\n# it contains the exhaustive configuration with explanations of the options.\n\nlinters:\n  # Disable all linters.\n  # Default: false\n  disable-all: true\n  # Enable specific linter\n  # https://golangci-lint.run/usage/linters/#enabled-by-default\n  enable:\n    - asasalint\n    - asciicheck\n    - bidichk\n    - bodyclose\n    - canonicalheader\n    - containedctx\n    - contextcheck\n    - copyloopvar\n    - cyclop\n    - decorder\n    - depguard\n    - dogsled\n    - dupl\n    - dupword\n    - durationcheck\n    - err113\n    - errcheck\n    - errchkjson\n    - errname\n    - errorlint\n    - execinquery\n    - exhaustive\n    - exhaustruct\n    - exportloopref\n    - exptostd\n    - fatcontext\n    - forbidigo\n    - forcetypeassert\n    - funlen\n    - gci\n    - ginkgolinter\n    - gocheckcompilerdirectives\n    - gochecknoglobals\n    - gochecknoinits\n    - gochecksumtype\n    - gocognit\n    - goconst\n    - gocritic\n    - gocyclo\n    - godot\n    - godox\n    - gofmt\n    - gofumpt\n    - goheader\n    - goimports\n    - gomoddirectives\n    - gomodguard\n    - goprintffuncname\n    - gosec\n    - gosimple\n    - gosmopolitan\n    - govet\n    - grouper\n    - iface\n    - importas\n    - inamedparam\n    - ineffassign\n    - interfacebloat\n    - intrange\n    - ireturn\n    - lll\n    - loggercheck\n    - maintidx\n    - makezero\n    - mirror\n    - misspell\n    - mnd\n    - musttag\n    - nakedret\n    - nestif\n    - nilerr\n    - nilnesserr\n    - nilnil\n    - nlreturn\n    - noctx\n    - nolintlint\n    - nonamedreturns\n    - nosprintfhostport\n    - paralleltest\n    - perfsprint\n    - prealloc\n    - predeclared\n    - promlinter\n    - protogetter\n    - reassign\n    - recvcheck\n    - revive\n    - rowserrcheck\n    - sloglint\n    - spancheck\n    - sqlclosecheck\n    - staticcheck\n    - stylecheck\n    - tagalign\n    - tagliatelle\n    - tenv\n    - testableexamples\n    - testifylint\n    - testpackage\n    - thelper\n    - tparallel\n    - unconvert\n    - unparam\n    - unused\n    - usestdlibvars\n    - usetesting\n    - varnamelen\n    - wastedassign\n    - whitespace\n    - wrapcheck\n    - wsl\n    - zerologlint\n\n  # Enable all available linters.\n  # Default: false\n  enable-all: true\n  # Disable specific linter\n  # https://golangci-lint.run/usage/linters/#disabled-by-default\n  disable:\n    - asasalint\n    - asciicheck\n    - bidichk\n    - bodyclose\n    - canonicalheader\n    - containedctx\n    - contextcheck\n    - copyloopvar\n    - cyclop\n    - decorder\n    - depguard\n    - dogsled\n    - dupl\n    - dupword\n    - durationcheck\n    - err113\n    - errcheck\n    - errchkjson\n    - errname\n    - errorlint\n    - execinquery\n    - exhaustive\n    - exhaustruct\n    - exportloopref\n    - exptostd\n    - fatcontext\n    - forbidigo\n    - forcetypeassert\n    - funlen\n    - gci\n    - ginkgolinter\n    - gocheckcompilerdirectives\n    - gochecknoglobals\n    - gochecknoinits\n    - gochecksumtype\n    - gocognit\n    - goconst\n    - gocritic\n    - gocyclo\n    - godot\n    - godox\n    - gofmt\n    - gofumpt\n    - goheader\n    - goimports\n    - gomoddirectives\n    - gomodguard\n    - goprintffuncname\n    - gosec\n    - gosimple\n    - gosmopolitan\n    - govet\n    - grouper\n    - iface\n    - importas\n    - inamedparam\n    - ineffassign\n    - interfacebloat\n    - intrange\n    - ireturn\n    - lll\n    - loggercheck\n    - maintidx\n    - makezero\n    - mirror\n    - misspell\n    - mnd\n    - musttag\n    - nakedret\n    - nestif\n    - nilerr\n    - nilnesserr\n    - nilnil\n    - nlreturn\n    - noctx\n    - nolintlint\n    - nonamedreturns\n    - nosprintfhostport\n    - paralleltest\n    - perfsprint\n    - prealloc\n    - predeclared\n    - promlinter\n    - protogetter\n    - reassign\n    - recvcheck\n    - revive\n    - rowserrcheck\n    - sloglint\n    - spancheck\n    - sqlclosecheck\n    - staticcheck\n    - stylecheck\n    - tagalign\n    - tagliatelle\n    - tenv\n    - testableexamples\n    - testifylint\n    - testpackage\n    - thelper\n    - tparallel\n    - unconvert\n    - unparam\n    - unused\n    - usestdlibvars\n    - usetesting\n    - varnamelen\n    - wastedassign\n    - whitespace\n    - wrapcheck\n    - wsl\n    - zerologlint\n    - deadcode # Deprecated\n    - exhaustivestruct # Deprecated\n    - golint # Deprecated\n    - ifshort # Deprecated\n    - interfacer # Deprecated\n    - maligned # Deprecated\n    - gomnd # Deprecated\n    - nosnakecase # Deprecated\n    - scopelint # Deprecated\n    - structcheck # Deprecated\n    - varcheck # Deprecated\n\n  # Enable presets.\n  # https://golangci-lint.run/usage/linters\n  # Default: []\n  presets:\n    - bugs\n    - comment\n    - complexity\n    - error\n    - format\n    - import\n    - metalinter\n    - module\n    - performance\n    - sql\n    - style\n    - test\n    - unused\n\n  # Enable only fast linters from enabled linters set (first run won't be fast)\n  # Default: false\n  fast: true\n\n\n# All available settings of specific linters.\nlinters-settings:\n  asasalint:\n    # To specify a set of function names to exclude.\n    # The values are merged with the builtin exclusions.\n    # The builtin exclusions can be disabled by setting `use-builtin-exclusions` to `false`.\n    # Default: [\"^(fmt|log|logger|t|)\\.(Print|Fprint|Sprint|Fatal|Panic|Error|Warn|Warning|Info|Debug|Log)(|f|ln)$\"]\n    exclude:\n      - Append\n      - \\.Wrapf\n    # To enable/disable the asasalint builtin exclusions of function names.\n    # See the default value of `exclude` to get the builtin exclusions.\n    # Default: true\n    use-builtin-exclusions: false\n    # Ignore *_test.go files.\n    # Default: false\n    ignore-test: true\n\n  bidichk:\n    # The following configurations check for all mentioned invisible Unicode runes.\n    # All runes are enabled by default.\n    left-to-right-embedding: false\n    right-to-left-embedding: false\n    pop-directional-formatting: false\n    left-to-right-override: false\n    right-to-left-override: false\n    left-to-right-isolate: false\n    right-to-left-isolate: false\n    first-strong-isolate: false\n    pop-directional-isolate: false\n\n  copyloopvar:\n    # Check all assigning the loop variable to another variable.\n    # Default: false\n    check-alias: true\n\n  cyclop:\n    # The maximal code complexity to report.\n    # Default: 10\n    max-complexity: 10\n    # The maximal average package complexity.\n    # If it's higher than 0.0 (float) the check is enabled\n    # Default: 0.0\n    package-average: 0.5\n    # Should ignore tests.\n    # Default: false\n    skip-tests: true\n\n  decorder:\n    # Required order of `type`, `const`, `var` and `func` declarations inside a file.\n    # Default: types before constants before variables before functions.\n    dec-order:\n      - type\n      - const\n      - var\n      - func\n\n    # If true, underscore vars (vars with \"_\" as the name) will be ignored at all checks\n    # Default: false (underscore vars are not ignored)\n    ignore-underscore-vars: false\n\n    # If true, order of declarations is not checked at all.\n    # Default: true (disabled)\n    disable-dec-order-check: false\n\n    # If true, `init` func can be anywhere in file (does not have to be declared before all other functions).\n    # Default: true (disabled)\n    disable-init-func-first-check: false\n\n    # If true, multiple global `type`, `const` and `var` declarations are allowed.\n    # Default: true (disabled)\n    disable-dec-num-check: false\n\n    # If true, type declarations will be ignored for dec num check\n    # Default: false (type statements are not ignored)\n    disable-type-dec-num-check: false\n\n    # If true, const declarations will be ignored for dec num check\n    # Default: false (const statements are not ignored)\n    disable-const-dec-num-check: false\n\n    # If true, var declarations will be ignored for dec num check\n    # Default: false (var statements are not ignored)\n    disable-var-dec-num-check: false\n\n  depguard:\n    # Rules to apply.\n    #\n    # Variables:\n    # - File Variables\n    #   you can still use and exclamation mark ! in front of a variable to say not to use it.\n    #   Example !$test will match any file that is not a go test file.\n    #\n    #   `$all` - matches all go files\n    #   `$test` - matches all go test files\n    #\n    # - Package Variables\n    #\n    #  `$gostd` - matches all of go's standard library (Pulled from `GOROOT`)\n    #\n    # Default: Only allow $gostd in all files.\n    rules:\n      # Name of a rule.\n      main:\n        # Used to determine the package matching priority.\n        # There are three different modes: `original`, `strict`, and `lax`.\n        # Default: \"original\"\n        list-mode: lax\n        # List of file globs that will match this list of settings to compare against.\n        # Default: $all\n        files:\n          - \"!**/*_a _file.go\"\n        # List of allowed packages.\n        allow:\n          - $gostd\n          - github.com/OpenPeeDeeP\n        # Packages that are not allowed where the value is a suggestion.\n        deny:\n          - pkg: \"github.com/sirupsen/logrus\"\n            desc: not allowed\n          - pkg: \"github.com/pkg/errors\"\n            desc: Should be replaced by standard lib errors package\n\n  dogsled:\n    # Checks assignments with too many blank identifiers.\n    # Default: 2\n    max-blank-identifiers: 3\n\n  dupl:\n    # Tokens count to trigger issue.\n    # Default: 150\n    threshold: 100\n\n  dupword:\n    # Keywords for detecting duplicate words.\n    # If this list is not empty, only the words defined in this list will be detected.\n    # Default: []\n    keywords:\n      - \"the\"\n      - \"and\"\n      - \"a\"\n    # Keywords used to ignore detection.\n    # Default: []\n    ignore:\n      - \"0C0C\"\n\n  errcheck:\n    # Report about not checking of errors in type assertions: `a := b.(MyStruct)`.\n    # Such cases aren't reported by default.\n    # Default: false\n    check-type-assertions: true\n\n    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`.\n    # Such cases aren't reported by default.\n    # Default: false\n    check-blank: true\n\n    # To disable the errcheck built-in exclude list.\n    # See `-excludeonly` option in https://github.com/kisielk/errcheck#excluding-functions for details.\n    # Default: false\n    disable-default-exclusions: true\n\n    # List of functions to exclude from checking, where each entry is a single function to exclude.\n    # See https://github.com/kisielk/errcheck#excluding-functions for details.\n    exclude-functions:\n      - io/ioutil.ReadFile\n      - io.Copy(*bytes.Buffer)\n      - io.Copy(os.Stdout)\n\n  errchkjson:\n    # With check-error-free-encoding set to true, errchkjson does warn about errors\n    # from json encoding functions that are safe to be ignored,\n    # because they are not possible to happen.\n    #\n    # if check-error-free-encoding is set to true and errcheck linter is enabled,\n    # it is recommended to add the following exceptions to prevent from false positives:\n    #\n    #     linters-settings:\n    #       errcheck:\n    #         exclude-functions:\n    #           - encoding/json.Marshal\n    #           - encoding/json.MarshalIndent\n    #\n    # Default: false\n    check-error-free-encoding: true\n\n    # Issue on struct encoding that doesn't have exported fields.\n    # Default: false\n    report-no-exported: false\n\n  errorlint:\n    # Check whether fmt.Errorf uses the %w verb for formatting errors.\n    # See the https://github.com/polyfloyd/go-errorlint for caveats.\n    # Default: true\n    errorf: false\n    # Permit more than 1 %w verb, valid per Go 1.20 (Requires errorf:true)\n    # Default: true\n    errorf-multi: false\n    # Check for plain type assertions and type switches.\n    # Default: true\n    asserts: false\n    # Check for plain error comparisons.\n    # Default: true\n    comparison: false\n    # Allowed errors.\n    # Default: []\n    allowed-errors:\n      - err: \"io.EOF\"\n        fun: \"example.com/pkg.Read\"\n    # Allowed error \"wildcards\".\n    # Default: []\n    allowed-errors-wildcard:\n      - err: \"example.com/pkg.ErrMagic\"\n        fun: \"example.com/pkg.Magic\"\n\n  exhaustive:\n    # Program elements to check for exhaustiveness.\n    # Default: [ switch ]\n    check:\n      - switch\n      - map\n    # Check switch statements in generated files also.\n    # Default: false\n    check-generated: true\n    # Presence of \"default\" case in switch statements satisfies exhaustiveness,\n    # even if all enum members are not listed.\n    # Default: false\n    default-signifies-exhaustive: true\n    # Enum members matching the supplied regex do not have to be listed in\n    # switch statements to satisfy exhaustiveness.\n    # Default: \"\"\n    ignore-enum-members: \"Example.+\"\n    # Enum types matching the supplied regex do not have to be listed in\n    # switch statements to satisfy exhaustiveness.\n    # Default: \"\"\n    ignore-enum-types: \"Example.+\"\n    # Consider enums only in package scopes, not in inner scopes.\n    # Default: false\n    package-scope-only: true\n    # Only run exhaustive check on switches with \"//exhaustive:enforce\" comment.\n    # Default: false\n    explicit-exhaustive-switch: true\n    # Only run exhaustive check on map literals with \"//exhaustive:enforce\" comment.\n    # Default: false\n    explicit-exhaustive-map: true\n    # Switch statement requires default case even if exhaustive.\n    # Default: false\n    default-case-required: true\n\n  exhaustruct:\n    # List of regular expressions to match struct packages and their names.\n    # Regular expressions must match complete canonical struct package/name/structname.\n    # If this list is empty, all structs are tested.\n    # Default: []\n    include:\n      - '.+\\.Test'\n      - 'example\\.com/package\\.ExampleStruct[\\d]{1,2}'\n    # List of regular expressions to exclude struct packages and their names from checks.\n    # Regular expressions must match complete canonical struct package/name/structname.\n    # Default: []\n    exclude:\n      - '.+/cobra\\.Command$'\n\n  forbidigo:\n    # Forbid the following identifiers (list of regexp).\n    # Default: [\"^(fmt\\\\.Print(|f|ln)|print|println)$\"]\n    forbid:\n      # Built-in bootstrapping functions.\n      - ^print(ln)?$\n      # Optional message that gets included in error reports.\n      - p: ^fmt\\.Print.*$\n        msg: Do not commit print statements.\n      # Alternatively, put messages at the end of the regex, surrounded by `(# )?`\n      # Escape any special characters. Those messages get included in error reports.\n      - 'fmt\\.Print.*(# Do not commit print statements\\.)?'\n      # Forbid spew Dump, whether it is called as function or method.\n      # Depends on analyze-types below.\n      - ^spew\\.(ConfigState\\.)?Dump$\n      # The package name might be ambiguous.\n      # The full import path can be used as additional criteria.\n      # Depends on analyze-types below.\n      - p: ^v1.Dump$\n        pkg: ^example.com/pkg/api/v1$\n    # Exclude godoc examples from forbidigo checks.\n    # Default: true\n    exclude-godoc-examples: false\n    # Instead of matching the literal source code,\n    # use type information to replace expressions with strings that contain the package name\n    # and (for methods and fields) the type name.\n    # This makes it possible to handle import renaming and forbid struct fields and methods.\n    # Default: false\n    analyze-types: true\n\n  funlen:\n    # Checks the number of lines in a function.\n    # If lower than 0, disable the check.\n    # Default: 60\n    lines: -1\n    # Checks the number of statements in a function.\n    # If lower than 0, disable the check.\n    # Default: 40\n    statements: -1\n    # Ignore comments when counting lines.\n    # Default false\n    ignore-comments: true\n\n  gci:\n    # Section configuration to compare against.\n    # Section names are case-insensitive and may contain parameters in ().\n    # The default order of sections is `standard > default > custom > blank > dot > alias > localmodule`,\n    # If `custom-order` is `true`, it follows the order of `sections` option.\n    # Default: [\"standard\", \"default\"]\n    sections:\n      - standard                       # Standard section: captures all standard packages.\n      - default                        # Default section: contains all imports that could not be matched to another section type.\n      - prefix(github.com/org/project) # Custom section: groups all imports with the specified Prefix.\n      - blank                          # Blank section: contains all blank imports. This section is not present unless explicitly enabled.\n      - dot                            # Dot section: contains all dot imports. This section is not present unless explicitly enabled.\n      - alias                          # Alias section: contains all alias imports. This section is not present unless explicitly enabled.\n      - localmodule                    # Local module section: contains all local packages. This section is not present unless explicitly enabled.\n\n    # Checks that no inline Comments are present.\n    # Default: false\n    no-inline-comments: true\n\n    # Checks that no prefix Comments(comment lines above an import) are present.\n    # Default: false\n    no-prefix-comments: true\n\n    # Skip generated files.\n    # Default: true\n    skip-generated: false\n\n    # Enable custom order of sections.\n    # If `true`, make the section order the same as the order of `sections`.\n    # Default: false\n    custom-order: true\n\n    # Drops lexical ordering for custom sections.\n    # Default: false\n    no-lex-order: true\n\n  ginkgolinter:\n    # Suppress the wrong length assertion warning.\n    # Default: false\n    suppress-len-assertion: true\n\n    # Suppress the wrong nil assertion warning.\n    # Default: false\n    suppress-nil-assertion: true\n\n    # Suppress the wrong error assertion warning.\n    # Default: false\n    suppress-err-assertion: true\n\n    # Suppress the wrong comparison assertion warning.\n    # Default: false\n    suppress-compare-assertion: true\n\n    # Suppress the function all in async assertion warning.\n    # Default: false\n    suppress-async-assertion: true\n\n    # Suppress warning for comparing values from different types, like `int32` and `uint32`\n    # Default: false\n    suppress-type-compare-assertion: true\n\n    # Trigger warning for ginkgo focus containers like `FDescribe`, `FContext`, `FWhen` or `FIt`\n    # Default: false\n    forbid-focus-container: true\n\n    # Don't trigger warnings for HaveLen(0)\n    # Default: false\n    allow-havelen-zero: true\n\n    # Force using `Expect` with `To`, `ToNot` or `NotTo`.\n    # Reject using `Expect` with `Should` or `ShouldNot`.\n    # Default: false\n    force-expect-to: true\n\n    # Best effort validation of async intervals (timeout and polling).\n    # Ignored the suppress-async-assertion is true.\n    # Default: false\n    validate-async-intervals: true\n\n    # Trigger a warning for variable assignments in ginkgo containers like `Describe`, `Context` and `When`, instead of in `BeforeEach()`.\n    # Default: false\n    forbid-spec-pollution: true\n\n    # Force using the Succeed matcher for error functions, and the HaveOccurred matcher for non-function error values.\n    # Default: false\n    force-succeed: true\n\n  gochecksumtype:\n    # Presence of `default` case in switch statements satisfies exhaustiveness, if all members are not listed.\n    # Default: true\n    default-signifies-exhaustive: false\n    # Include shared interfaces in the exhaustiviness check.\n    # Default: false\n    include-shared-interfaces: true\n\n  gocognit:\n    # Minimal code complexity to report.\n    # Default: 30 (but we recommend 10-20)\n    min-complexity: 10\n\n  goconst:\n    # Minimal length of string constant.\n    # Default: 3\n    min-len: 2\n    # Minimum occurrences of constant string count to trigger issue.\n    # Default: 3\n    min-occurrences: 2\n    # Ignore test files.\n    # Default: false\n    ignore-tests: true\n    # Look for existing constants matching the values.\n    # Default: true\n    match-constant: false\n    # Search also for duplicated numbers.\n    # Default: false\n    numbers: true\n    # Minimum value, only works with goconst.numbers\n    # Default: 3\n    min: 2\n    # Maximum value, only works with goconst.numbers\n    # Default: 3\n    max: 2\n    # Ignore when constant is not used as function argument.\n    # Default: true\n    ignore-calls: false\n    # Exclude strings matching the given regular expression.\n    # Default: \"\"\n    ignore-strings: 'foo.+'\n\n  gocritic:\n    # Disable all checks.\n    # Default: false\n    disable-all: true\n    # Which checks should be enabled in addition to default checks; can't be combined with 'disabled-checks'.\n    # By default, list of stable checks is used (https://go-critic.com/overview#checks-overview):\n    #   appendAssign, argOrder, assignOp, badCall, badCond, captLocal, caseOrder, codegenComment, commentFormatting,\n    #   defaultCaseOrder, deprecatedComment, dupArg, dupBranchBody, dupCase, dupSubExpr, elseif, exitAfterDefer,\n    #   flagDeref, flagName, ifElseChain, mapKey, newDeref, offBy1, regexpMust, singleCaseSwitch, sloppyLen,\n    #   sloppyTypeAssert, switchTrue, typeSwitchVar, underef, unlambda, unslice, valSwap, wrapperFunc\n    # To see which checks are enabled run `GL_DEBUG=gocritic golangci-lint run --enable=gocritic`.\n    enabled-checks:\n      # Detects suspicious append result assignments.\n      # https://go-critic.com/overview.html#appendassign\n      - appendAssign\n      # Detects `append` chains to the same slice that can be done in a single `append` call.\n      # https://go-critic.com/overview.html#appendcombine\n      - appendCombine\n      # Detects suspicious arguments order.\n      # https://go-critic.com/overview.html#argorder\n      - argOrder\n      # Detects assignments that can be simplified by using assignment operators.\n      # https://go-critic.com/overview.html#assignop\n      - assignOp\n      # Detects suspicious function calls.\n      # https://go-critic.com/overview.html#badcall\n      - badCall\n      # Detects suspicious condition expressions.\n      # https://go-critic.com/overview.html#badcond\n      - badCond\n      # Detects suspicious mutex lock/unlock operations.\n      # https://go-critic.com/overview.html#badlock\n      - badLock\n      # Detects suspicious regexp patterns.\n      # https://go-critic.com/overview.html#badregexp\n      - badRegexp\n      # Detects bad usage of sort package.\n      # https://go-critic.com/overview.html#badsorting\n      - badSorting\n      # Detects bad usage of sync.OnceFunc.\n      # https://go-critic.com/overview.html#badsynconcefunc\n      - badSyncOnceFunc\n      # Detects bool expressions that can be simplified.\n      # https://go-critic.com/overview.html#boolexprsimplify\n      - boolExprSimplify\n      # Detects when predeclared identifiers are shadowed in assignments.\n      # https://go-critic.com/overview.html#builtinshadow\n      - builtinShadow\n      # Detects top-level declarations that shadow the predeclared identifiers.\n      # https://go-critic.com/overview.html#builtinshadowdecl\n      - builtinShadowDecl\n      # Detects capitalized names for local variables.\n      # https://go-critic.com/overview.html#captlocal\n      - captLocal\n      # Detects erroneous case order inside switch statements.\n      # https://go-critic.com/overview.html#caseorder\n      - caseOrder\n      # Detects malformed 'code generated' file comments.\n      # https://go-critic.com/overview.html#codegencomment\n      - codegenComment\n      # Detects comments with non-idiomatic formatting.\n      # https://go-critic.com/overview.html#commentformatting\n      - commentFormatting\n      # Detects commented-out code inside function bodies.\n      # https://go-critic.com/overview.html#commentedoutcode\n      - commentedOutCode\n      # Detects commented-out imports.\n      # https://go-critic.com/overview.html#commentedoutimport\n      - commentedOutImport\n      # Detects when default case in switch isn't on 1st or last position.\n      # https://go-critic.com/overview.html#defaultcaseorder\n      - defaultCaseOrder\n      # Detects loops inside functions that use defer.\n      # https://go-critic.com/overview.html#deferinloop\n      - deferInLoop\n      # Detects deferred function literals that can be simplified.\n      # https://go-critic.com/overview.html#deferunlambda\n      - deferUnlambda\n      # Detects malformed 'deprecated' doc-comments.\n      # https://go-critic.com/overview.html#deprecatedcomment\n      - deprecatedComment\n      # Detects comments that silence go lint complaints about doc-comment.\n      # https://go-critic.com/overview.html#docstub\n      - docStub\n      # Detects suspicious duplicated arguments.\n      # https://go-critic.com/overview.html#duparg\n      - dupArg\n      # Detects duplicated branch bodies inside conditional statements.\n      # https://go-critic.com/overview.html#dupbranchbody\n      - dupBranchBody\n      # Detects duplicated case clauses inside switch or select statements.\n      # https://go-critic.com/overview.html#dupcase\n      - dupCase\n      # Detects multiple imports of the same package under different aliases.\n      # https://go-critic.com/overview.html#dupimport\n      - dupImport\n      # Detects suspicious duplicated sub-expressions.\n      # https://go-critic.com/overview.html#dupsubexpr\n      - dupSubExpr\n      # Detects suspicious formatting strings usage.\n      # https://go-critic.com/overview.html#dynamicfmtstring\n      - dynamicFmtString\n      # Detects else with nested if statement that can be replaced with else-if.\n      # https://go-critic.com/overview.html#elseif\n      - elseif\n      # Detects suspicious empty declarations blocks.\n      # https://go-critic.com/overview.html#emptydecl\n      - emptyDecl\n      # Detects fallthrough that can be avoided by using multi case values.\n      # https://go-critic.com/overview.html#emptyfallthrough\n      - emptyFallthrough\n      # Detects empty string checks that can be written more idiomatically.\n      # https://go-critic.com/overview.html#emptystringtest\n      - emptyStringTest\n      # Detects unoptimal strings/bytes case-insensitive comparison.\n      # https://go-critic.com/overview.html#equalfold\n      - equalFold\n      # Detects unwanted dependencies on the evaluation order.\n      # https://go-critic.com/overview.html#evalorder\n      - evalOrder\n      # Detects calls to exit/fatal inside functions that use defer.\n      # https://go-critic.com/overview.html#exitafterdefer\n      - exitAfterDefer\n      # Detects exposed methods from sync.Mutex and sync.RWMutex.\n      # https://go-critic.com/overview.html#exposedsyncmutex\n      - exposedSyncMutex\n      # Detects suspicious reassignment of error from another package.\n      # https://go-critic.com/overview.html#externalerrorreassign\n      - externalErrorReassign\n      # Detects problems in filepath.Join() function calls.\n      # https://go-critic.com/overview.html#filepathjoin\n      - filepathJoin\n      # Detects immediate dereferencing of `flag` package pointers.\n      # https://go-critic.com/overview.html#flagderef\n      - flagDeref\n      # Detects suspicious flag names.\n      # https://go-critic.com/overview.html#flagname\n      - flagName\n      # Detects hex literals that have mixed case letter digits.\n      # https://go-critic.com/overview.html#hexliteral\n      - hexLiteral\n      # Detects nil usages in http.NewRequest calls, suggesting http.NoBody as an alternative.\n      # https://go-critic.com/overview.html#httpnobody\n      - httpNoBody\n      # Detects params that incur excessive amount of copying.\n      # https://go-critic.com/overview.html#hugeparam\n      - hugeParam\n      # Detects repeated if-else statements and suggests to replace them with switch statement.\n      # https://go-critic.com/overview.html#ifelsechain\n      - ifElseChain\n      # Detects when imported package names shadowed in the assignments.\n      # https://go-critic.com/overview.html#importshadow\n      - importShadow\n      # Detects strings.Index calls that may cause unwanted allocs.\n      # https://go-critic.com/overview.html#indexalloc\n      - indexAlloc\n      # Detects non-assignment statements inside if/switch init clause.\n      # https://go-critic.com/overview.html#initclause\n      - initClause\n      # Detects suspicious map literal keys.\n      # https://go-critic.com/overview.html#mapkey\n      - mapKey\n      # Detects method expression call that can be replaced with a method call.\n      # https://go-critic.com/overview.html#methodexprcall\n      - methodExprCall\n      # Finds where nesting level could be reduced.\n      # https://go-critic.com/overview.html#nestingreduce\n      - nestingReduce\n      # Detects immediate dereferencing of `new` expressions.\n      # https://go-critic.com/overview.html#newderef\n      - newDeref\n      # Detects return statements those results evaluate to nil.\n      # https://go-critic.com/overview.html#nilvalreturn\n      - nilValReturn\n      # Detects old-style octal literals.\n      # https://go-critic.com/overview.html#octalliteral\n      - octalLiteral\n      # Detects various off-by-one kind of errors.\n      # https://go-critic.com/overview.html#offby1\n      - offBy1\n      # Detects if function parameters could be combined by type and suggest the way to do it.\n      # https://go-critic.com/overview.html#paramtypecombine\n      - paramTypeCombine\n      # Detects expressions like []rune(s)[0] that may cause unwanted rune slice allocation.\n      # https://go-critic.com/overview.html#preferdecoderune\n      - preferDecodeRune\n      # Detects concatenation with os.PathSeparator which can be replaced with filepath.Join.\n      # https://go-critic.com/overview.html#preferfilepathjoin\n      - preferFilepathJoin\n      # Detects fmt.Sprint(f/ln) calls which can be replaced with fmt.Fprint(f/ln).\n      # https://go-critic.com/overview.html#preferfprint\n      - preferFprint\n      # Detects w.Write or io.WriteString calls which can be replaced with w.WriteString.\n      # https://go-critic.com/overview.html#preferstringwriter\n      - preferStringWriter\n      # Detects WriteRune calls with rune literal argument that is single byte and reports to use WriteByte instead.\n      # https://go-critic.com/overview.html#preferwritebyte\n      - preferWriteByte\n      # Detects input and output parameters that have a type of pointer to referential type.\n      # https://go-critic.com/overview.html#ptrtorefparam\n      - ptrToRefParam\n      # Detects append all its data while range it.\n      # https://go-critic.com/overview.html#rangeappendall\n      - rangeAppendAll\n      # Detects expensive copies of `for` loop range expressions.\n      # https://go-critic.com/overview.html#rangeexprcopy\n      - rangeExprCopy\n      # Detects loops that copy big objects during each iteration.\n      # https://go-critic.com/overview.html#rangevalcopy\n      - rangeValCopy\n      # Detects redundant fmt.Sprint calls.\n      # https://go-critic.com/overview.html#redundantsprint\n      - redundantSprint\n      # Detects `regexp.Compile*` that can be replaced with `regexp.MustCompile*`.\n      # https://go-critic.com/overview.html#regexpmust\n      - regexpMust\n      # Detects suspicious regexp patterns.\n      # https://go-critic.com/overview.html#regexppattern\n      - regexpPattern\n      # Detects regexp patterns that can be simplified.\n      # https://go-critic.com/overview.html#regexpsimplify\n      - regexpSimplify\n      # Detects suspicious http.Error call without following return.\n      # https://go-critic.com/overview.html#returnafterhttperror\n      - returnAfterHttpError\n      # Runs user-defined rules using ruleguard linter.\n      # https://go-critic.com/overview.html#ruleguard\n      - ruleguard\n      # Detects switch statements that could be better written as if statement.\n      # https://go-critic.com/overview.html#singlecaseswitch\n      - singleCaseSwitch\n      # Detects slice clear loops, suggests an idiom that is recognized by the Go compiler.\n      # https://go-critic.com/overview.html#sliceclear\n      - sliceClear\n      # Detects usage of `len` when result is obvious or doesn't make sense.\n      # https://go-critic.com/overview.html#sloppylen\n      - sloppyLen\n      # Detects suspicious/confusing re-assignments.\n      # https://go-critic.com/overview.html#sloppyreassign\n      - sloppyReassign\n      # Detects redundant type assertions.\n      # https://go-critic.com/overview.html#sloppytypeassert\n      - sloppyTypeAssert\n      # Detects suspicious sort.Slice calls.\n      # https://go-critic.com/overview.html#sortslice\n      - sortSlice\n      # Detects \"%s\" formatting directives that can be replaced with %q.\n      # https://go-critic.com/overview.html#sprintfquotedstring\n      - sprintfQuotedString\n      # Detects issue in Query() and Exec() calls.\n      # https://go-critic.com/overview.html#sqlquery\n      - sqlQuery\n      # Detects string concat operations that can be simplified.\n      # https://go-critic.com/overview.html#stringconcatsimplify\n      - stringConcatSimplify\n      # Detects redundant conversions between string and []byte.\n      # https://go-critic.com/overview.html#stringxbytes\n      - stringXbytes\n      # Detects strings.Compare usage.\n      # https://go-critic.com/overview.html#stringscompare\n      - stringsCompare\n      # Detects switch-over-bool statements that use explicit `true` tag value.\n      # https://go-critic.com/overview.html#switchtrue\n      - switchTrue\n      # Detects sync.Map load+delete operations that can be replaced with LoadAndDelete.\n      # https://go-critic.com/overview.html#syncmaploadanddelete\n      - syncMapLoadAndDelete\n      # Detects manual conversion to milli- or microseconds.\n      # https://go-critic.com/overview.html#timeexprsimplify\n      - timeExprSimplify\n      # Detects TODO comments without detail/assignee.\n      # https://go-critic.com/overview.html#todocommentwithoutdetail\n      - todoCommentWithoutDetail\n      # Detects function with too many results.\n      # https://go-critic.com/overview.html#toomanyresultschecker\n      - tooManyResultsChecker\n      # Detects potential truncation issues when comparing ints of different sizes.\n      # https://go-critic.com/overview.html#truncatecmp\n      - truncateCmp\n      # Detects repeated type assertions and suggests to replace them with type switch statement.\n      # https://go-critic.com/overview.html#typeassertchain\n      - typeAssertChain\n      # Detects method declarations preceding the type definition itself.\n      # https://go-critic.com/overview.html#typedeffirst\n      - typeDefFirst\n      # Detects type switches that can benefit from type guard clause with variable.\n      # https://go-critic.com/overview.html#typeswitchvar\n      - typeSwitchVar\n      # Detects unneeded parenthesis inside type expressions and suggests to remove them.\n      # https://go-critic.com/overview.html#typeunparen\n      - typeUnparen\n      # Detects unchecked errors in if statements.\n      # https://go-critic.com/overview.html#uncheckedinlineerr\n      - uncheckedInlineErr\n      # Detects dereference expressions that can be omitted.\n      # https://go-critic.com/overview.html#underef\n      - underef\n      # Detects redundant statement labels.\n      # https://go-critic.com/overview.html#unlabelstmt\n      - unlabelStmt\n      # Detects function literals that can be simplified.\n      # https://go-critic.com/overview.html#unlambda\n      - unlambda\n      # Detects unnamed results that may benefit from names.\n      # https://go-critic.com/overview.html#unnamedresult\n      - unnamedResult\n      # Detects unnecessary braced statement blocks.\n      # https://go-critic.com/overview.html#unnecessaryblock\n      - unnecessaryBlock\n      # Detects redundantly deferred calls.\n      # https://go-critic.com/overview.html#unnecessarydefer\n      - unnecessaryDefer\n      # Detects slice expressions that can be simplified to sliced expression itself.\n      # https://go-critic.com/overview.html#unslice\n      - unslice\n      # Detects value swapping code that are not using parallel assignment.\n      # https://go-critic.com/overview.html#valswap\n      - valSwap\n      # Detects conditions that are unsafe due to not being exhaustive.\n      # https://go-critic.com/overview.html#weakcond\n      - weakCond\n      # Ensures that `//nolint` comments include an explanation.\n      # https://go-critic.com/overview.html#whynolint\n      - whyNoLint\n      # Detects function calls that can be replaced with convenience wrappers.\n      # https://go-critic.com/overview.html#wrapperfunc\n      - wrapperFunc\n      # Detects Yoda style expressions and suggests to replace them.\n      # https://go-critic.com/overview.html#yodastyleexpr\n      - yodaStyleExpr\n\n    # Enable all checks.\n    # Default: false\n    enable-all: true\n    # Which checks should be disabled; can't be combined with 'enabled-checks'.\n    # Default: []\n    disabled-checks:\n      - appendAssign\n      - appendCombine\n      - argOrder\n      - assignOp\n      - badCall\n      - badCond\n      - badLock\n      - badRegexp\n      - badSorting\n      - badSyncOnceFunc\n      - boolExprSimplify\n      - builtinShadow\n      - builtinShadowDecl\n      - captLocal\n      - caseOrder\n      - codegenComment\n      - commentFormatting\n      - commentedOutCode\n      - commentedOutImport\n      - defaultCaseOrder\n      - deferInLoop\n      - deferUnlambda\n      - deprecatedComment\n      - docStub\n      - dupArg\n      - dupBranchBody\n      - dupCase\n      - dupImport\n      - dupSubExpr\n      - dynamicFmtString\n      - elseif\n      - emptyDecl\n      - emptyFallthrough\n      - emptyStringTest\n      - equalFold\n      - evalOrder\n      - exitAfterDefer\n      - exposedSyncMutex\n      - externalErrorReassign\n      - filepathJoin\n      - flagDeref\n      - flagName\n      - hexLiteral\n      - httpNoBody\n      - hugeParam\n      - ifElseChain\n      - importShadow\n      - indexAlloc\n      - initClause\n      - mapKey\n      - methodExprCall\n      - nestingReduce\n      - newDeref\n      - nilValReturn\n      - octalLiteral\n      - offBy1\n      - paramTypeCombine\n      - preferDecodeRune\n      - preferFilepathJoin\n      - preferFprint\n      - preferStringWriter\n      - preferWriteByte\n      - ptrToRefParam\n      - rangeAppendAll\n      - rangeExprCopy\n      - rangeValCopy\n      - redundantSprint\n      - regexpMust\n      - regexpPattern\n      - regexpSimplify\n      - returnAfterHttpError\n      - ruleguard\n      - singleCaseSwitch\n      - sliceClear\n      - sloppyLen\n      - sloppyReassign\n      - sloppyTypeAssert\n      - sortSlice\n      - sprintfQuotedString\n      - sqlQuery\n      - stringConcatSimplify\n      - stringXbytes\n      - stringsCompare\n      - switchTrue\n      - syncMapLoadAndDelete\n      - timeExprSimplify\n      - todoCommentWithoutDetail\n      - tooManyResultsChecker\n      - truncateCmp\n      - typeAssertChain\n      - typeDefFirst\n      - typeSwitchVar\n      - typeUnparen\n      - uncheckedInlineErr\n      - underef\n      - unlabelStmt\n      - unlambda\n      - unnamedResult\n      - unnecessaryBlock\n      - unnecessaryDefer\n      - unslice\n      - valSwap\n      - weakCond\n      - whyNoLint\n      - wrapperFunc\n      - yodaStyleExpr\n\n    # Enable multiple checks by tags in addition to default checks.\n    # Run `GL_DEBUG=gocritic golangci-lint run --enable=gocritic` to see all tags and checks.\n    # See https://github.com/go-critic/go-critic#usage -> section \"Tags\".\n    # Default: []\n    enabled-tags:\n      - diagnostic\n      - style\n      - performance\n      - experimental\n      - opinionated\n    disabled-tags:\n      - diagnostic\n      - style\n      - performance\n      - experimental\n      - opinionated\n\n    # Settings passed to gocritic.\n    # The settings key is the name of a supported gocritic checker.\n    # The list of supported checkers can be find in https://go-critic.com/overview.\n    settings:\n      # Must be valid enabled check name.\n      captLocal:\n        # Whether to restrict checker to params only.\n        # Default: true\n        paramsOnly: false\n      commentedOutCode:\n        # Min length of the comment that triggers a warning.\n        # Default: 15\n        minLength: 50\n      elseif:\n        # Whether to skip balanced if-else pairs.\n        # Default: true\n        skipBalanced: false\n      hugeParam:\n        # Size in bytes that makes the warning trigger.\n        # Default: 80\n        sizeThreshold: 70\n      ifElseChain:\n        # Min number of if-else blocks that makes the warning trigger.\n        # Default: 2\n        minThreshold: 4\n      nestingReduce:\n        # Min number of statements inside a branch to trigger a warning.\n        # Default: 5\n        bodyWidth: 4\n      rangeExprCopy:\n        # Size in bytes that makes the warning trigger.\n        # Default: 512\n        sizeThreshold: 516\n        # Whether to check test functions\n        # Default: true\n        skipTestFuncs: false\n      rangeValCopy:\n        # Size in bytes that makes the warning trigger.\n        # Default: 128\n        sizeThreshold: 32\n        # Whether to check test functions.\n        # Default: true\n        skipTestFuncs: false\n      ruleguard:\n        # Enable debug to identify which 'Where' condition was rejected.\n        # The value of the parameter is the name of a function in a ruleguard file.\n        #\n        # When a rule is evaluated:\n        # If:\n        #   The Match() clause is accepted; and\n        #   One of the conditions in the Where() clause is rejected,\n        # Then:\n        #   ruleguard prints the specific Where() condition that was rejected.\n        #\n        # The option is passed to the ruleguard 'debug-group' argument.\n        # Default: \"\"\n        debug: 'emptyDecl'\n        # Determines the behavior when an error occurs while parsing ruleguard files.\n        # If flag is not set, log error and skip rule files that contain an error.\n        # If flag is set, the value must be a comma-separated list of error conditions.\n        # - 'all':    fail on all errors.\n        # - 'import': ruleguard rule imports a package that cannot be found.\n        # - 'dsl':    gorule file does not comply with the ruleguard DSL.\n        # Default: \"\"\n        failOn: dsl,import\n        # Comma-separated list of file paths containing ruleguard rules.\n        # If a path is relative, it is relative to the directory where the golangci-lint command is executed.\n        # The special '${configDir}' variable is substituted with the absolute directory containing the golangci config file.\n        # Glob patterns such as 'rules-*.go' may be specified.\n        # Default: \"\"\n        rules: '${configDir}/ruleguard/rules-*.go,${configDir}/myrule1.go'\n        # Comma-separated list of enabled groups or skip empty to enable everything.\n        # Tags can be defined with # character prefix.\n        # Default: \"<all>\"\n        enable: \"myGroupName,#myTagName\"\n        # Comma-separated list of disabled groups or skip empty to enable everything.\n        # Tags can be defined with # character prefix.\n        # Default: \"\"\n        disable: \"myGroupName,#myTagName\"\n      tooManyResultsChecker:\n        # Maximum number of results.\n        # Default: 5\n        maxResults: 10\n      truncateCmp:\n        # Whether to skip int/uint/uintptr types.\n        # Default: true\n        skipArchDependent: false\n      underef:\n        # Whether to skip (*x).method() calls where x is a pointer receiver.\n        # Default: true\n        skipRecvDeref: false\n      unnamedResult:\n        # Whether to check exported functions.\n        # Default: false\n        checkExported: true\n\n  gocyclo:\n    # Minimal code complexity to report.\n    # Default: 30 (but we recommend 10-20)\n    min-complexity: 10\n\n  godot:\n    # Comments to be checked: `declarations`, `toplevel`, or `all`.\n    # Default: declarations\n    scope: toplevel\n    # List of regexps for excluding particular comment lines from check.\n    # Default: []\n    exclude:\n      # Exclude todo and fixme comments.\n      - \"^fixme:\"\n      - \"^todo:\"\n    # Check that each sentence ends with a period.\n    # Default: true\n    period: false\n    # Check that each sentence starts with a capital letter.\n    # Default: false\n    capital: true\n\n  godox:\n    # Report any comments starting with keywords, this is useful for TODO or FIXME comments that\n    # might be left in the code accidentally and should be resolved before merging.\n    # Default: [\"TODO\", \"BUG\", \"FIXME\"]\n    keywords:\n      - NOTE\n      - OPTIMIZE # marks code that should be optimized before merging\n      - HACK # marks hack-around that should be removed before merging\n\n  gofmt:\n    # Simplify code: gofmt with `-s` option.\n    # Default: true\n    simplify: false\n    # Apply the rewrite rules to the source before reformatting.\n    # https://pkg.go.dev/cmd/gofmt\n    # Default: []\n    rewrite-rules:\n      - pattern: 'interface{}'\n        replacement: 'any'\n      - pattern: 'a[b:len(a)]'\n        replacement: 'a[b:]'\n\n  gofumpt:\n    # Module path which contains the source code being formatted.\n    # Default: \"\"\n    module-path: github.com/org/project\n\n    # Choose whether to use the extra rules.\n    # Default: false\n    extra-rules: true\n\n  goheader:\n    # Supports two types 'const` and `regexp`.\n    # Values can be used recursively.\n    # Default: {}\n    values:\n      const:\n        # Define here const type values in format k:v.\n        # For example:\n        COMPANY: MY COMPANY\n      regexp:\n        # Define here regexp type values.\n        # for example:\n        AUTHOR: .*@mycompany\\.com\n    # The template use for checking.\n    # Default: \"\"\n    template: |-\n      # Put here copyright header template for source code files\n      # For example:\n      # Note: {{ YEAR }} is a builtin value that returns the year relative to the current machine time.\n      #\n      # {{ AUTHOR }} {{ COMPANY }} {{ YEAR }}\n      # SPDX-License-Identifier: Apache-2.0\n\n      # Licensed under the Apache License, Version 2.0 (the \"License\");\n      # you may not use this file except in compliance with the License.\n      # You may obtain a copy of the License at:\n\n      #   http://www.apache.org/licenses/LICENSE-2.0\n\n      # Unless required by applicable law or agreed to in writing, software\n      # distributed under the License is distributed on an \"AS IS\" BASIS,\n      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      # See the License for the specific language governing permissions and\n      # limitations under the License.\n    # As alternative of directive 'template', you may put the path to file with the template source.\n    # Useful if you need to load the template from a specific file.\n    # Default: \"\"\n    template-path: /path/to/my/template.tmpl\n\n  goimports:\n    # A comma-separated list of prefixes, which, if set, checks import paths\n    # with the given prefixes are grouped after 3rd-party packages.\n    # Default: \"\"\n    local-prefixes: github.com/org/project\n\n  gomoddirectives:\n    # Allow local `replace` directives.\n    # Default: false\n    replace-local: true\n    # List of allowed `replace` directives.\n    # Default: []\n    replace-allow-list:\n      - launchpad.net/gocheck\n    # Allow to not explain why the version has been retracted in the `retract` directives.\n    # Default: false\n    retract-allow-no-explanation: true\n    # Forbid the use of the `exclude` directives.\n    # Default: false\n    exclude-forbidden: true\n    # Forbid the use of the `toolchain` directive.\n    # Default: false\n    toolchain-forbidden: true\n    # Defines a pattern to validate `toolchain` directive.\n    # Default: '' (no match)\n    toolchain-pattern: 'go1\\.23\\.\\d+$'\n    # Forbid the use of the `tool` directives.\n    # Default: false\n    tool-forbidden: true\n    # Forbid the use of the `godebug` directive.\n    # Default: false\n    go-debug-forbidden: true\n    # Defines a pattern to validate `go` minimum version directive.\n    # Default: '' (no match)\n    go-version-pattern: '\\d\\.\\d+(\\.0)?'\n\n  gomodguard:\n    allowed:\n      # List of allowed modules.\n      # Default: []\n      modules:\n        - gopkg.in/yaml.v2\n      # List of allowed module domains.\n      # Default: []\n      domains:\n        - golang.org\n    blocked:\n      # List of blocked modules.\n      # Default: []\n      modules:\n        # Blocked module.\n        - github.com/uudashr/go-module:\n            # Recommended modules that should be used instead. (Optional)\n            recommendations:\n              - golang.org/x/mod\n            # Reason why the recommended module should be used. (Optional)\n            reason: \"`mod` is the official go.mod parser library.\"\n      # List of blocked module version constraints.\n      # Default: []\n      versions:\n        # Blocked module with version constraint.\n        - github.com/mitchellh/go-homedir:\n            # Version constraint, see https://github.com/Masterminds/semver#basic-comparisons.\n            version: \"< 1.1.0\"\n            # Reason why the version constraint exists. (Optional)\n            reason: \"testing if blocked version constraint works.\"\n      # Set to true to raise lint issues for packages that are loaded from a local path via replace directive.\n      # Default: false\n      local_replace_directives: false\n\n  gosimple:\n    # Sxxxx checks in https://staticcheck.dev/docs/configuration/options/#checks\n    # Default: [\"*\"]\n    checks:\n      # Use plain channel send or receive instead of single-case select.\n      # https://staticcheck.dev/docs/checks/#S1000\n      - S1000\n      # Replace for loop with call to copy.\n      # https://staticcheck.dev/docs/checks/#S1001\n      - S1001\n      # Omit comparison with boolean constant.\n      # https://staticcheck.dev/docs/checks/#S1002\n      - S1002\n      # Replace call to 'strings.Index' with 'strings.Contains'.\n      # https://staticcheck.dev/docs/checks/#S1003\n      - S1003\n      # Replace call to 'bytes.Compare' with 'bytes.Equal'.\n      # https://staticcheck.dev/docs/checks/#S1004\n      - S1004\n      # Drop unnecessary use of the blank identifier.\n      # https://staticcheck.dev/docs/checks/#S1005\n      - S1005\n      # Use \"for { ... }\" for infinite loops.\n      # https://staticcheck.dev/docs/checks/#S1006\n      - S1006\n      # Simplify regular expression by using raw string literal.\n      # https://staticcheck.dev/docs/checks/#S1007\n      - S1007\n      # Simplify returning boolean expression.\n      # https://staticcheck.dev/docs/checks/#S1008\n      - S1008\n      # Omit redundant nil check on slices, maps, and channels.\n      # https://staticcheck.dev/docs/checks/#S1009\n      - S1009\n      # Omit default slice index.\n      # https://staticcheck.dev/docs/checks/#S1010\n      - S1010\n      # Use a single 'append' to concatenate two slices.\n      # https://staticcheck.dev/docs/checks/#S1011\n      - S1011\n      # Replace 'time.Now().Sub(x)' with 'time.Since(x)'.\n      # https://staticcheck.dev/docs/checks/#S1012\n      - S1012\n      # Use a type conversion instead of manually copying struct fields.\n      # https://staticcheck.dev/docs/checks/#S1016\n      - S1016\n      # Replace manual trimming with 'strings.TrimPrefix'.\n      # https://staticcheck.dev/docs/checks/#S1017\n      - S1017\n      # Use \"copy\" for sliding elements.\n      # https://staticcheck.dev/docs/checks/#S1018\n      - S1018\n      # Simplify \"make\" call by omitting redundant arguments.\n      # https://staticcheck.dev/docs/checks/#S1019\n      - S1019\n      # Omit redundant nil check in type assertion.\n      # https://staticcheck.dev/docs/checks/#S1020\n      - S1020\n      # Merge variable declaration and assignment.\n      # https://staticcheck.dev/docs/checks/#S1021\n      - S1021\n      # Omit redundant control flow.\n      # https://staticcheck.dev/docs/checks/#S1023\n      - S1023\n      # Replace 'x.Sub(time.Now())' with 'time.Until(x)'.\n      # https://staticcheck.dev/docs/checks/#S1024\n      - S1024\n      # Don't use 'fmt.Sprintf(\"%s\", x)' unnecessarily.\n      # https://staticcheck.dev/docs/checks/#S1025\n      - S1025\n      # Simplify error construction with 'fmt.Errorf'.\n      # https://staticcheck.dev/docs/checks/#S1028\n      - S1028\n      # Range over the string directly.\n      # https://staticcheck.dev/docs/checks/#S1029\n      - S1029\n      # Use 'bytes.Buffer.String' or 'bytes.Buffer.Bytes'.\n      # https://staticcheck.dev/docs/checks/#S1030\n      - S1030\n      # Omit redundant nil check around loop.\n      # https://staticcheck.dev/docs/checks/#S1031\n      - S1031\n      # Use 'sort.Ints(x)', 'sort.Float64s(x)', and 'sort.Strings(x)'.\n      # https://staticcheck.dev/docs/checks/#S1032\n      - S1032\n      # Unnecessary guard around call to \"delete\".\n      # https://staticcheck.dev/docs/checks/#S1033\n      - S1033\n      # Use result of type assertion to simplify cases.\n      # https://staticcheck.dev/docs/checks/#S1034\n      - S1034\n      # Redundant call to 'net/http.CanonicalHeaderKey' in method call on 'net/http.Header'.\n      # https://staticcheck.dev/docs/checks/#S1035\n      - S1035\n      # Unnecessary guard around map access.\n      # https://staticcheck.dev/docs/checks/#S1036\n      - S1036\n      # Elaborate way of sleeping.\n      # https://staticcheck.dev/docs/checks/#S1037\n      - S1037\n      # Unnecessarily complex way of printing formatted string.\n      # https://staticcheck.dev/docs/checks/#S1038\n      - S1038\n      # Unnecessary use of 'fmt.Sprint'.\n      # https://staticcheck.dev/docs/checks/#S1039\n      - S1039\n      # Type assertion to current type.\n      # https://staticcheck.dev/docs/checks/#S1040\n      - S1040\n\n  gosec:\n    # To select a subset of rules to run.\n    # Available rules: https://github.com/securego/gosec#available-rules\n    # Default: [] - means include all rules\n    includes:\n      - G101 # Look for hard coded credentials\n      - G102 # Bind to all interfaces\n      - G103 # Audit the use of unsafe block\n      - G104 # Audit errors not checked\n      - G106 # Audit the use of ssh.InsecureIgnoreHostKey\n      - G107 # Url provided to HTTP request as taint input\n      - G108 # Profiling endpoint automatically exposed on /debug/pprof\n      - G109 # Potential Integer overflow made by strconv.Atoi result conversion to int16/32\n      - G110 # Potential DoS vulnerability via decompression bomb\n      - G111 # Potential directory traversal\n      - G112 # Potential slowloris attack\n      - G113 # Usage of Rat.SetString in math/big with an overflow (CVE-2022-23772)\n      - G114 # Use of net/http serve function that has no support for setting timeouts\n      - G115 # Potential integer overflow when converting between integer types\n      - G201 # SQL query construction using format string\n      - G202 # SQL query construction using string concatenation\n      - G203 # Use of unescaped data in HTML templates\n      - G204 # Audit use of command execution\n      - G301 # Poor file permissions used when creating a directory\n      - G302 # Poor file permissions used with chmod\n      - G303 # Creating tempfile using a predictable path\n      - G304 # File path provided as taint input\n      - G305 # File traversal when extracting zip/tar archive\n      - G306 # Poor file permissions used when writing to a new file\n      - G307 # Poor file permissions used when creating a file with os.Create\n      - G401 # Detect the usage of MD5 or SHA1\n      - G402 # Look for bad TLS connection settings\n      - G403 # Ensure minimum RSA key length of 2048 bits\n      - G404 # Insecure random number source (rand)\n      - G405 # Detect the usage of DES or RC4\n      - G406 # Detect the usage of MD4 or RIPEMD160\n      - G501 # Import blocklist: crypto/md5\n      - G502 # Import blocklist: crypto/des\n      - G503 # Import blocklist: crypto/rc4\n      - G504 # Import blocklist: net/http/cgi\n      - G505 # Import blocklist: crypto/sha1\n      - G506 # Import blocklist: golang.org/x/crypto/md4\n      - G507 #Import blocklist: golang.org/x/crypto/ripemd160\n      - G601 # Implicit memory aliasing of items from a range statement\n      - G602 # Slice access out of bounds\n\n    # To specify a set of rules to explicitly exclude.\n    # Available rules: https://github.com/securego/gosec#available-rules\n    # Default: []\n    excludes:\n      - G101 # Look for hard coded credentials\n      - G102 # Bind to all interfaces\n      - G103 # Audit the use of unsafe block\n      - G104 # Audit errors not checked\n      - G106 # Audit the use of ssh.InsecureIgnoreHostKey\n      - G107 # Url provided to HTTP request as taint input\n      - G108 # Profiling endpoint automatically exposed on /debug/pprof\n      - G109 # Potential Integer overflow made by strconv.Atoi result conversion to int16/32\n      - G110 # Potential DoS vulnerability via decompression bomb\n      - G111 # Potential directory traversal\n      - G112 # Potential slowloris attack\n      - G113 # Usage of Rat.SetString in math/big with an overflow (CVE-2022-23772)\n      - G114 # Use of net/http serve function that has no support for setting timeouts\n      - G115 # Potential integer overflow when converting between integer types\n      - G201 # SQL query construction using format string\n      - G202 # SQL query construction using string concatenation\n      - G203 # Use of unescaped data in HTML templates\n      - G204 # Audit use of command execution\n      - G301 # Poor file permissions used when creating a directory\n      - G302 # Poor file permissions used with chmod\n      - G303 # Creating tempfile using a predictable path\n      - G304 # File path provided as taint input\n      - G305 # File traversal when extracting zip/tar archive\n      - G306 # Poor file permissions used when writing to a new file\n      - G307 # Poor file permissions used when creating a file with os.Create\n      - G401 # Detect the usage of MD5 or SHA1\n      - G402 # Look for bad TLS connection settings\n      - G403 # Ensure minimum RSA key length of 2048 bits\n      - G404 # Insecure random number source (rand)\n      - G405 # Detect the usage of DES or RC4\n      - G406 # Detect the usage of MD4 or RIPEMD160\n      - G501 # Import blocklist: crypto/md5\n      - G502 # Import blocklist: crypto/des\n      - G503 # Import blocklist: crypto/rc4\n      - G504 # Import blocklist: net/http/cgi\n      - G505 # Import blocklist: crypto/sha1\n      - G506 # Import blocklist: golang.org/x/crypto/md4\n      - G507 #Import blocklist: golang.org/x/crypto/ripemd160\n      - G601 # Implicit memory aliasing of items from a range statement\n      - G602 # Slice access out of bounds\n\n    # Exclude generated files\n    # Default: false\n    exclude-generated: true\n\n    # Filter out the issues with a lower severity than the given value.\n    # Valid options are: low, medium, high.\n    # Default: low\n    severity: medium\n\n    # Filter out the issues with a lower confidence than the given value.\n    # Valid options are: low, medium, high.\n    # Default: low\n    confidence: medium\n\n    # Concurrency value.\n    # Default: the number of logical CPUs usable by the current process.\n    concurrency: 12\n\n    # To specify the configuration of rules.\n    config:\n      # Globals are applicable to all rules.\n      global:\n        # If true, ignore #nosec in comments (and an alternative as well).\n        # Default: false\n        nosec: true\n        # Add an alternative comment prefix to #nosec (both will work at the same time).\n        # Default: \"\"\n        \"#nosec\": \"#my-custom-nosec\"\n        # Define whether nosec issues are counted as finding or not.\n        # Default: false\n        show-ignored: true\n        # Audit mode enables addition checks that for normal code analysis might be too nosy.\n        # Default: false\n        audit: true\n      G101:\n        # Regexp pattern for variables and constants to find.\n        # Default: \"(?i)passwd|pass|password|pwd|secret|token|pw|apiKey|bearer|cred\"\n        pattern: \"(?i)example\"\n        # If true, complain about all cases (even with low entropy).\n        # Default: false\n        ignore_entropy: false\n        # Maximum allowed entropy of the string.\n        # Default: \"80.0\"\n        entropy_threshold: \"80.0\"\n        # Maximum allowed value of entropy/string length.\n        # Is taken into account if entropy >= entropy_threshold/2.\n        # Default: \"3.0\"\n        per_char_threshold: \"3.0\"\n        # Calculate entropy for first N chars of the string.\n        # Default: \"16\"\n        truncate: \"32\"\n      # Additional functions to ignore while checking unhandled errors.\n      # Following functions always ignored:\n      #   bytes.Buffer:\n      #     - Write\n      #     - WriteByte\n      #     - WriteRune\n      #     - WriteString\n      #   fmt:\n      #     - Print\n      #     - Printf\n      #     - Println\n      #     - Fprint\n      #     - Fprintf\n      #     - Fprintln\n      #   strings.Builder:\n      #     - Write\n      #     - WriteByte\n      #     - WriteRune\n      #     - WriteString\n      #   io.PipeWriter:\n      #     - CloseWithError\n      #   hash.Hash:\n      #     - Write\n      #   os:\n      #     - Unsetenv\n      # Default: {}\n      G104:\n        fmt:\n          - Fscanf\n      G111:\n        # Regexp pattern to find potential directory traversal.\n        # Default: \"http\\\\.Dir\\\\(\\\"\\\\/\\\"\\\\)|http\\\\.Dir\\\\('\\\\/'\\\\)\"\n        pattern: \"custom\\\\.Dir\\\\(\\\\)\"\n      # Maximum allowed permissions mode for os.Mkdir and os.MkdirAll\n      # Default: \"0750\"\n      G301: \"0750\"\n      # Maximum allowed permissions mode for os.OpenFile and os.Chmod\n      # Default: \"0600\"\n      G302: \"0600\"\n      # Maximum allowed permissions mode for os.WriteFile and ioutil.WriteFile\n      # Default: \"0600\"\n      G306: \"0600\"\n\n  gosmopolitan:\n    # Allow and ignore `time.Local` usages.\n    #\n    # Default: false\n    allow-time-local: true\n    # List of fully qualified names in the `full/pkg/path.name` form, to act as \"i18n escape hatches\".\n    # String literals inside call-like expressions to, or struct literals of those names,\n    # are exempt from the writing system check.\n    #\n    # Default: []\n    escape-hatches:\n      - 'github.com/nicksnyder/go-i18n/v2/i18n.Message'\n      - 'example.com/your/project/i18n/markers.Raw'\n      - 'example.com/your/project/i18n/markers.OK'\n      - 'example.com/your/project/i18n/markers.TODO'\n      - 'command-line-arguments.Simple'\n    # Ignore test files.\n    #\n    # Default: true\n    ignore-tests: false\n    # List of Unicode scripts to watch for any usage in string literals.\n    # https://pkg.go.dev/unicode#pkg-variables\n    #\n    # Default: [\"Han\"]\n    watch-for-scripts:\n      - Devanagari\n      - Han\n      - Hangul\n      - Hiragana\n      - Katakana\n\n  govet:\n    # Disable all analyzers.\n    # Default: false\n    disable-all: true\n    # Enable analyzers by name.\n    # (in addition to default:\n    #   appends, asmdecl, assign, atomic, bools, buildtag, cgocall, composites, copylocks, defers, directive, errorsas,\n    #   framepointer, httpresponse, ifaceassert, loopclosure, lostcancel, nilfunc, printf, shift, sigchanyzer, slog,\n    #   stdmethods, stringintconv, structtag, testinggoroutine, tests, timeformat, unmarshal, unreachable, unsafeptr,\n    #   unusedresult\n    # ).\n    # Run `GL_DEBUG=govet golangci-lint run --enable=govet` to see default, all available analyzers, and enabled analyzers.\n    # Default: []\n    enable:\n      # Check for missing values after append.\n      - appends\n      # Report mismatches between assembly files and Go declarations.\n      - asmdecl\n      # Check for useless assignments.\n      - assign\n      # Check for common mistakes using the sync/atomic package.\n      - atomic\n      # Check for non-64-bits-aligned arguments to sync/atomic functions.\n      - atomicalign\n      # Check for common mistakes involving boolean operators.\n      - bools\n      # Check //go:build and // +build directives.\n      - buildtag\n      # Detect some violations of the cgo pointer passing rules.\n      - cgocall\n      # Check for unkeyed composite literals.\n      - composites\n      # Check for locks erroneously passed by value.\n      - copylocks\n      # Check for calls of reflect.DeepEqual on error values.\n      - deepequalerrors\n      # Report common mistakes in defer statements.\n      - defers\n      # Check Go toolchain directives such as //go:debug.\n      - directive\n      # Report passing non-pointer or non-error values to errors.As.\n      - errorsas\n      # Find structs that would use less memory if their fields were sorted.\n      - fieldalignment\n      # Find calls to a particular function.\n      - findcall\n      # Report assembly that clobbers the frame pointer before saving it.\n      - framepointer\n      # Check for mistakes using HTTP responses.\n      - httpresponse\n      # Detect impossible interface-to-interface type assertions.\n      - ifaceassert\n      # Check references to loop variables from within nested functions.\n      - loopclosure\n      # Check cancel func returned by context.WithCancel is called.\n      - lostcancel\n      # Check for useless comparisons between functions and nil.\n      - nilfunc\n      # Check for redundant or impossible nil comparisons.\n      - nilness\n      # Check consistency of Printf format strings and arguments.\n      - printf\n      # Check for comparing reflect.Value values with == or reflect.DeepEqual.\n      - reflectvaluecompare\n      # Check for possible unintended shadowing of variables.\n      - shadow\n      # Check for shifts that equal or exceed the width of the integer.\n      - shift\n      # Check for unbuffered channel of os.Signal.\n      - sigchanyzer\n      # Check for invalid structured logging calls.\n      - slog\n      # Check the argument type of sort.Slice.\n      - sortslice\n      # Check signature of methods of well-known interfaces.\n      - stdmethods\n      # Check for uses of too-new standard library symbols.\n      - stdversion\n      # Check for string(int) conversions.\n      - stringintconv\n      # Check that struct field tags conform to reflect.StructTag.Get.\n      - structtag\n      # Report calls to (*testing.T).Fatal from goroutines started by a test.\n      - testinggoroutine\n      # Check for common mistaken usages of tests and examples.\n      - tests\n      # Check for calls of (time.Time).Format or time.Parse with 2006-02-01.\n      - timeformat\n      # Report passing non-pointer or non-interface values to unmarshal.\n      - unmarshal\n      # Check for unreachable code.\n      - unreachable\n      # Check for invalid conversions of uintptr to unsafe.Pointer.\n      - unsafeptr\n      # Check for unused results of calls to some functions.\n      - unusedresult\n      # Checks for unused writes.\n      - unusedwrite\n      # Checks for misuses of sync.WaitGroup.\n      - waitgroup\n\n    # Enable all analyzers.\n    # Default: false\n    enable-all: true\n    # Disable analyzers by name.\n    # (in addition to default\n    #   atomicalign, deepequalerrors, fieldalignment, findcall, nilness, reflectvaluecompare, shadow, sortslice,\n    #   timeformat, unusedwrite\n    # ).\n    # Run `GL_DEBUG=govet golangci-lint run --enable=govet` to see default, all available analyzers, and enabled analyzers.\n    # Default: []\n    disable:\n      - appends\n      - asmdecl\n      - assign\n      - atomic\n      - atomicalign\n      - bools\n      - buildtag\n      - cgocall\n      - composites\n      - copylocks\n      - deepequalerrors\n      - defers\n      - directive\n      - errorsas\n      - fieldalignment\n      - findcall\n      - framepointer\n      - httpresponse\n      - ifaceassert\n      - loopclosure\n      - lostcancel\n      - nilfunc\n      - nilness\n      - printf\n      - reflectvaluecompare\n      - shadow\n      - shift\n      - sigchanyzer\n      - slog\n      - sortslice\n      - stdmethods\n      - stringintconv\n      - structtag\n      - testinggoroutine\n      - tests\n      - timeformat\n      - unmarshal\n      - unreachable\n      - unsafeptr\n      - unusedresult\n      - unusedwrite\n\n    # Settings per analyzer.\n    settings:\n      # Analyzer name, run `go tool vet help` to see all analyzers.\n      printf:\n        # Comma-separated list of print function names to check (in addition to default, see `go tool vet help printf`).\n        # Default: []\n        funcs:\n          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof\n          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf\n          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf\n          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf\n      shadow:\n        # Whether to be strict about shadowing; can be noisy.\n        # Default: false\n        strict: true\n      unusedresult:\n        # Comma-separated list of functions whose results must be used\n        # (in addition to default:\n        #   context.WithCancel, context.WithDeadline, context.WithTimeout, context.WithValue, errors.New, fmt.Errorf,\n        #   fmt.Sprint, fmt.Sprintf, sort.Reverse\n        # ).\n        # Default: []\n        funcs:\n          - pkg.MyFunc\n        # Comma-separated list of names of methods of type func() string whose results must be used\n        # (in addition to default Error,String)\n        # Default: []\n        stringmethods:\n          - MyMethod\n\n  grouper:\n    # Require the use of a single global 'const' declaration only.\n    # Default: false\n    const-require-single-const: true\n    # Require the use of grouped global 'const' declarations.\n    # Default: false\n    const-require-grouping: true\n\n    # Require the use of a single 'import' declaration only.\n    # Default: false\n    import-require-single-import: true\n    # Require the use of grouped 'import' declarations.\n    # Default: false\n    import-require-grouping: true\n\n    # Require the use of a single global 'type' declaration only.\n    # Default: false\n    type-require-single-type: true\n    # Require the use of grouped global 'type' declarations.\n    # Default: false\n    type-require-grouping: true\n\n    # Require the use of a single global 'var' declaration only.\n    # Default: false\n    var-require-single-var: true\n    # Require the use of grouped global 'var' declarations.\n    # Default: false\n    var-require-grouping: true\n\n  iface:\n    # List of analyzers.\n    # Default: [\"identical\"]\n    enable:\n      - identical # Identifies interfaces in the same package that have identical method sets.\n      - unused # Identifies interfaces that are not used anywhere in the same package where the interface is defined.\n      - opaque # Identifies functions that return interfaces, but the actual returned value is always a single concrete implementation.\n    settings:\n      unused:\n        # List of packages path to exclude from the check.\n        # Default: []\n        exclude:\n          - github.com/example/log\n\n  importas:\n    # Do not allow unaliased imports of aliased packages.\n    # Default: false\n    no-unaliased: true\n    # Do not allow non-required aliases.\n    # Default: false\n    no-extra-aliases: true\n    # List of aliases\n    # Default: []\n    alias:\n      # Using `servingv1` alias for `knative.dev/serving/pkg/apis/serving/v1` package.\n      - pkg: knative.dev/serving/pkg/apis/serving/v1\n        alias: servingv1\n      # Using `autoscalingv1alpha1` alias for `knative.dev/serving/pkg/apis/autoscaling/v1alpha1` package.\n      - pkg: knative.dev/serving/pkg/apis/autoscaling/v1alpha1\n        alias: autoscalingv1alpha1\n      # You can specify the package path by regular expression,\n      # and alias by regular expression expansion syntax like below.\n      # see https://github.com/julz/importas#use-regular-expression for details\n      - pkg: knative.dev/serving/pkg/apis/(\\w+)/(v[\\w\\d]+)\n        alias: $1$2\n      # An explicit empty alias can be used to ensure no aliases are used for a package.\n      # This can be useful if `no-extra-aliases: true` doesn't fit your need.\n      # Multiple packages can use an empty alias.\n      - pkg: errors\n        alias: \"\"\n\n  inamedparam:\n    # Skips check for interface methods with only a single parameter.\n    # Default: false\n    skip-single-param: true\n\n  interfacebloat:\n    # The maximum number of methods allowed for an interface.\n    # Default: 10\n    max: 5\n\n  ireturn:\n    # List of interfaces to allow.\n    # Lists of the keywords and regular expressions matched to interface or package names can be used.\n    # `allow` and `reject` settings cannot be used at the same time.\n    #\n    # Keywords:\n    # - `empty` for `interface{}`\n    # - `error` for errors\n    # - `stdlib` for standard library\n    # - `anon` for anonymous interfaces\n    # - `generic` for generic interfaces added in go 1.18\n    #\n    # Default: [anon, error, empty, stdlib]\n    allow:\n      - anon\n      # You can specify idiomatic endings for interface\n      - (or|er)$\n\n    # List of interfaces to reject.\n    # Lists of the keywords and regular expressions matched to interface or package names can be used.\n    # `allow` and `reject` settings cannot be used at the same time.\n    #\n    # Keywords:\n    # - `empty` for `interface{}`\n    # - `error` for errors\n    # - `stdlib` for standard library\n    # - `anon` for anonymous interfaces\n    # - `generic` for generic interfaces added in go 1.18\n    #\n    # Default: []\n    reject:\n      - github.com\\/user\\/package\\/v4\\.Type\n\n  lll:\n    # Max line length, lines longer will be reported.\n    # '\\t' is counted as 1 character by default, and can be changed with the tab-width option.\n    # Default: 120.\n    line-length: 120\n    # Tab width in spaces.\n    # Default: 1\n    tab-width: 1\n\n  loggercheck:\n    # Allow check for the github.com/go-kit/log library.\n    # Default: true\n    kitlog: false\n    # Allow check for the k8s.io/klog/v2 library.\n    # Default: true\n    klog: false\n    # Allow check for the github.com/go-logr/logr library.\n    # Default: true\n    logr: false\n    # Allow check for the log/slog library.\n    # Default: true\n    slog: false\n    # Allow check for the \"sugar logger\" from go.uber.org/zap library.\n    # Default: true\n    zap: false\n    # Require all logging keys to be inlined constant strings.\n    # Default: false\n    require-string-key: true\n    # Require printf-like format specifier (%s, %d for example) not present.\n    # Default: false\n    no-printf-like: true\n    # List of custom rules to check against, where each rule is a single logger pattern, useful for wrapped loggers.\n    # For example: https://github.com/timonwong/loggercheck/blob/7395ab86595781e33f7afba27ad7b55e6956ebcd/testdata/custom-rules.txt\n    # Default: empty\n    rules:\n      - k8s.io/klog/v2.InfoS   # package level exported functions\n      - (github.com/go-logr/logr.Logger).Error  # \"Methods\"\n      - (*go.uber.org/zap.SugaredLogger).With  # Also \"Methods\", but with a pointer receiver\n\n  maintidx:\n    # Show functions with maintainability index lower than N.\n    # A high index indicates better maintainability (it's kind of the opposite of complexity).\n    # Default: 20\n    under: 100\n\n  makezero:\n    # Allow only slices initialized with a length of zero.\n    # Default: false\n    always: true\n\n  misspell:\n    # Correct spellings using locale preferences for US or UK.\n    # Setting locale to US will correct the British spelling of 'colour' to 'color'.\n    # Default is to use a neutral variety of English.\n    locale: US\n    # Typos to ignore.\n    # Should be in lower case.\n    # Default: []\n    ignore-words:\n      - someword\n    # Extra word corrections.\n    # `typo` and `correction` should only contain letters.\n    # The words are case-insensitive.\n    # Default: []\n    extra-words:\n      - typo: \"iff\"\n        correction: \"if\"\n      - typo: \"cancelation\"\n        correction: \"cancellation\"\n    # Mode of the analysis:\n    # - default: checks all the file content.\n    # - restricted: checks only comments.\n    # Default: \"\"\n    mode: restricted\n\n  mnd:\n    # List of enabled checks, see https://github.com/tommy-muehle/go-mnd/#checks for description.\n    # Default: [\"argument\", \"case\", \"condition\", \"operation\", \"return\", \"assign\"]\n    checks:\n      - argument\n      - case\n      - condition\n      - operation\n      - return\n      - assign\n    # List of numbers to exclude from analysis.\n    # The numbers should be written as string.\n    # Values always ignored: \"1\", \"1.0\", \"0\" and \"0.0\"\n    # Default: []\n    ignored-numbers:\n      - '0666'\n      - '0755'\n      - '42'\n    # List of file patterns to exclude from analysis.\n    # Values always ignored: `.+_test.go`\n    # Default: []\n    ignored-files:\n      - 'magic1_.+\\.go$'\n    # List of function patterns to exclude from analysis.\n    # Following functions are always ignored: `time.Date`,\n    # `strconv.FormatInt`, `strconv.FormatUint`, `strconv.FormatFloat`,\n    # `strconv.ParseInt`, `strconv.ParseUint`, `strconv.ParseFloat`.\n    # Default: []\n    ignored-functions:\n      - '^math\\.'\n      - '^http\\.StatusText$'\n\n  musttag:\n    # A set of custom functions to check in addition to the builtin ones.\n    # Default: json, xml, gopkg.in/yaml.v3, BurntSushi/toml, mitchellh/mapstructure, jmoiron/sqlx\n    functions:\n      # The full name of the function, including the package.\n      - name: github.com/hashicorp/hcl/v2/hclsimple.DecodeFile\n        # The struct tag whose presence should be ensured.\n        tag: hcl\n        # The position of the argument to check.\n        arg-pos: 2\n\n  nakedret:\n    # Make an issue if func has more lines of code than this setting, and it has naked returns.\n    # Default: 30\n    max-func-lines: 31\n\n  nestif:\n    # Minimal complexity of if statements to report.\n    # Default: 5\n    min-complexity: 4\n\n  nilnil:\n    # In addition, detect opposite situation (simultaneous return of non-nil error and valid value).\n    # Default: false\n    detect-opposite: true\n    # List of return types to check.\n    # Default: [\"chan\", \"func\", \"iface\", \"map\", \"ptr\", \"uintptr\", \"unsafeptr\"]\n    checked-types:\n      - chan\n      - func\n      - iface\n      - map\n      - ptr\n      - uintptr\n      - unsafeptr\n\n  nlreturn:\n    # Size of the block (including return statement that is still \"OK\")\n    # so no return split required.\n    # Default: 1\n    block-size: 2\n\n  nolintlint:\n    # Disable to ensure that all nolint directives actually have an effect.\n    # Default: false\n    allow-unused: true\n    # Exclude following linters from requiring an explanation.\n    # Default: []\n    allow-no-explanation: [ ]\n    # Enable to require an explanation of nonzero length after each nolint directive.\n    # Default: false\n    require-explanation: true\n    # Enable to require nolint directives to mention the specific linter being suppressed.\n    # Default: false\n    require-specific: true\n\n  nonamedreturns:\n    # Report named error if it is assigned inside defer.\n    # Default: false\n    report-error-in-defer: true\n\n  paralleltest:\n    # Ignore missing calls to `t.Parallel()` and only report incorrect uses of it.\n    # Default: false\n    ignore-missing: true\n    # Ignore missing calls to `t.Parallel()` in subtests. Top-level tests are\n    # still required to have `t.Parallel`, but subtests are allowed to skip it.\n    # Default: false\n    ignore-missing-subtests: true\n\n  perfsprint:\n    # Optimizes even if it requires an int or uint type cast.\n    # Default: true\n    int-conversion: false\n    # Optimizes into `err.Error()` even if it is only equivalent for non-nil errors.\n    # Default: false\n    err-error: true\n    # Optimizes `fmt.Errorf`.\n    # Default: true\n    errorf: false\n    # Optimizes `fmt.Sprintf` with only one argument.\n    # Default: true\n    sprintf1: false\n    # Optimizes into strings concatenation.\n    # Default: true\n    strconcat: false\n\n  prealloc:\n    # IMPORTANT: we don't recommend using this linter before doing performance profiling.\n    # For most programs usage of prealloc will be a premature optimization.\n\n    # Report pre-allocation suggestions only on simple loops that have no returns/breaks/continues/gotos in them.\n    # Default: true\n    simple: false\n    # Report pre-allocation suggestions on range loops.\n    # Default: true\n    range-loops: false\n    # Report pre-allocation suggestions on for loops.\n    # Default: false\n    for-loops: true\n\n  predeclared:\n    # Comma-separated list of predeclared identifiers to not report on.\n    # Default: \"\"\n    ignore: \"new,int\"\n    # Include method names and field names (i.e., qualified names) in checks.\n    # Default: false\n    q: true\n\n  promlinter:\n    # Promlinter cannot infer all metrics name in static analysis.\n    # Enable strict mode will also include the errors caused by failing to parse the args.\n    # Default: false\n    strict: true\n    # Please refer to https://github.com/yeya24/promlinter#usage for detailed usage.\n    # Default: []\n    disabled-linters:\n      # Help detects issues related to the help text for a metric.\n      - Help\n      # MetricUnits detects issues with metric unit names.\n      - MetricUnits\n      # Counter detects issues specific to counters, as well as patterns that should only be used with counters.\n      - Counter\n      # HistogramSummaryReserved detects when other types of metrics use names or labels reserved for use by histograms and/or summaries.\n      - HistogramSummaryReserved\n      # MetricTypeInName detects when metric types are included in the metric name.\n      - MetricTypeInName\n      # ReservedChars detects colons in metric names.\n      - ReservedChars\n      # CamelCase detects metric names and label names written in camelCase.\n      - CamelCase\n      # UnitAbbreviations detects abbreviated units in the metric name.\n      - UnitAbbreviations\n\n\n  protogetter:\n    # Skip files generated by specified generators from the checking.\n    # Checks only the file's initial comment, which must follow the format: \"// Code generated by <generator-name>\".\n    # Files generated by protoc-gen-go, protoc-gen-go-grpc, and protoc-gen-grpc-gateway are always excluded automatically.\n    # Default: []\n    skip-generated-by: [\"protoc-gen-go-my-own-generator\"]\n    # Skip files matching the specified glob pattern from the checking.\n    # Default: []\n    skip-files:\n      - \"*.pb.go\"\n      - \"*/vendor/*\"\n      - \"/full/path/to/file.go\"\n    # Skip any generated files from the checking.\n    # Default: false\n    skip-any-generated: true\n    # Skip first argument of append function.\n    # Default: false\n    replace-first-arg-in-append: true\n\n  reassign:\n    # Patterns for global variable names that are checked for reassignment.\n    # See https://github.com/curioswitch/go-reassign#usage\n    # Default: [\"EOF\", \"Err.*\"]\n    patterns:\n      - \".*\"\n\n  recvcheck:\n    # Disables the built-in method exclusions:\n    # - `MarshalText`\n    # - `MarshalJSON`\n    # - `MarshalYAML`\n    # - `MarshalXML`\n    # - `MarshalBinary`\n    # - `GobEncode`\n    # Default: false\n    disable-builtin: true\n    # User-defined method exclusions.\n    # The format is `struct_name.method_name` (ex: `Foo.MethodName`).\n    # A wildcard `*` can use as a struct name (ex: `*.MethodName`).\n    # Default: []\n    exclusions:\n      - \"*.Value\"\n\n  revive:\n    # Maximum number of open files at the same time.\n    # See https://github.com/mgechev/revive#command-line-flags\n    # Defaults to unlimited.\n    max-open-files: 2048\n\n    # When set to false, ignores files with \"GENERATED\" header, similar to golint.\n    # See https://github.com/mgechev/revive#configuration for details.\n    # Default: false\n    ignore-generated-header: true\n\n    # Sets the default severity.\n    # See https://github.com/mgechev/revive#configuration\n    # Default: warning\n    severity: error\n\n    # Enable all available rules.\n    # Default: false\n    enable-all-rules: true\n\n    # Sets the default failure confidence.\n    # This means that linting errors with less than 0.8 confidence will be ignored.\n    # Default: 0.8\n    confidence: 0.1\n\n    rules:\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#add-constant\n      - name: add-constant\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - maxLitCount: \"3\"\n            allowStrs: '\"\"'\n            allowInts: \"0,1,2\"\n            allowFloats: \"0.0,0.,1.0,1.,2.0,2.\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#argument-limit\n      - name: argument-limit\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ 4 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#atomic\n      - name: atomic\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#banned-characters\n      - name: banned-characters\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ \"Ω\",\"Σ\",\"σ\", \"7\" ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#bare-return\n      - name: bare-return\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#blank-imports\n      - name: blank-imports\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#bool-literal-in-expr\n      - name: bool-literal-in-expr\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#call-to-gc\n      - name: call-to-gc\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#cognitive-complexity\n      - name: cognitive-complexity\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ 7 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#comment-spacings\n      - name: comment-spacings\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - mypragma\n          - otherpragma\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#comments-density\n      - name: comments-density\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ 15 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#confusing-naming\n      - name: confusing-naming\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#confusing-results\n      - name: confusing-results\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#constant-logical-expr\n      - name: constant-logical-expr\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#context-as-argument\n      - name: context-as-argument\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - allowTypesBefore: \"*testing.T,*github.com/user/repo/testing.Harness\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#context-keys-type\n      - name: context-keys-type\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#cyclomatic\n      - name: cyclomatic\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ 3 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#datarace\n      - name: datarace\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#deep-exit\n      - name: deep-exit\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#defer\n      - name: defer\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - [ \"call-chain\", \"loop\" ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#dot-imports\n      - name: dot-imports\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#duplicated-imports\n      - name: duplicated-imports\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#early-return\n      - name: early-return\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"preserveScope\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#empty-block\n      - name: empty-block\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#empty-lines\n      - name: empty-lines\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#enforce-map-style\n      - name: enforce-map-style\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"make\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#enforce-repeated-arg-type-style\n      - name: enforce-repeated-arg-type-style\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"short\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#enforce-slice-style\n      - name: enforce-slice-style\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"make\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#error-naming\n      - name: error-naming\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#error-return\n      - name: error-return\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#error-strings\n      - name: error-strings\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#errorf\n      - name: errorf\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#exported\n      - name: exported\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"checkPrivateReceivers\"\n          - \"disableStutteringCheck\"\n          - \"checkPublicInterface\"\n          - \"disableChecksOnFunctions\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#file-header\n      - name: file-header\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - This is the text that must appear at the top of source files.\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#file-length-limit\n      - name: file-length-limit\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - max: 100\n            skipComments: true\n            skipBlankLines: true\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#filename-format\n      - name: filename-format\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"^[_a-z][_a-z0-9]*.go$\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#flag-parameter\n      - name: flag-parameter\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#function-length\n      - name: function-length\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ 10, 0 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#function-result-limit\n      - name: function-result-limit\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ 3 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#get-return\n      - name: get-return\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#identical-branches\n      - name: identical-branches\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#if-return\n      - name: if-return\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#import-alias-naming\n      - name: import-alias-naming\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"^[a-z][a-z0-9]{0,}$\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#import-shadowing\n      - name: import-shadowing\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#imports-blocklist\n      - name: imports-blocklist\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"crypto/md5\"\n          - \"crypto/sha1\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#increment-decrement\n      - name: increment-decrement\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#indent-error-flow\n      - name: indent-error-flow\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"preserveScope\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#line-length-limit\n      - name: line-length-limit\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ 80 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#max-control-nesting\n      - name: max-control-nesting\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ 3 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#max-public-structs\n      - name: max-public-structs\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments: [ 3 ]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#modifies-parameter\n      - name: modifies-parameter\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#modifies-value-receiver\n      - name: modifies-value-receiver\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#nested-structs\n      - name: nested-structs\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#optimize-operands-order\n      - name: optimize-operands-order\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#package-comments\n      - name: package-comments\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#range\n      - name: range\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#range-val-address\n      - name: range-val-address\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#range-val-in-closure\n      - name: range-val-in-closure\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#receiver-naming\n      - name: receiver-naming\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - maxLength: 2\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#redefines-builtin-id\n      - name: redefines-builtin-id\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#redundant-import-alias\n      - name: redundant-import-alias\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#string-format\n      - name: string-format\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - - 'core.WriteError[1].Message'\n            - '/^([^A-Z]|$)/'\n            - must not start with a capital letter\n          - - 'fmt.Errorf[0]'\n            - '/(^|[^\\.!?])$/'\n            - must not end in punctuation\n          - - panic\n            - '/^[^\\n]*$/'\n            - must not contain line breaks\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#string-of-int\n      - name: string-of-int\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#struct-tag\n      - name: struct-tag\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"json,inline\"\n          - \"bson,outline,gnu\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#superfluous-else\n      - name: superfluous-else\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"preserveScope\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#time-equal\n      - name: time-equal\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#time-naming\n      - name: time-naming\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unchecked-type-assertion\n      - name: unchecked-type-assertion\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - acceptIgnoredAssertionResult: true\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unconditional-recursion\n      - name: unconditional-recursion\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unexported-naming\n      - name: unexported-naming\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unexported-return\n      - name: unexported-return\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unhandled-error\n      - name: unhandled-error\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - \"fmt.Printf\"\n          - \"myFunction\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unnecessary-stmt\n      - name: unnecessary-stmt\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unreachable-code\n      - name: unreachable-code\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unused-parameter\n      - name: unused-parameter\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - allowRegex: \"^_\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unused-receiver\n      - name: unused-receiver\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - allowRegex: \"^_\"\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#use-any\n      - name: use-any\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#useless-break\n      - name: useless-break\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#var-declaration\n      - name: var-declaration\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#var-naming\n      - name: var-naming\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n        arguments:\n          - [ \"ID\" ] # AllowList\n          - [ \"VM\" ] # DenyList\n          - - upperCaseConst: true # Extra parameter (upperCaseConst|skipPackageNameChecks)\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#waitgroup-by-value\n      - name: waitgroup-by-value\n        severity: warning\n        disabled: false\n        exclude: [\"\"]\n\n  rowserrcheck:\n    # database/sql is always checked\n    # Default: []\n    packages:\n      - github.com/jmoiron/sqlx\n\n  sloglint:\n    # Enforce not mixing key-value pairs and attributes.\n    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#no-mixed-arguments\n    # Default: true\n    no-mixed-args: false\n    # Enforce using key-value pairs only (overrides no-mixed-args, incompatible with attr-only).\n    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#key-value-pairs-only\n    # Default: false\n    kv-only: true\n    # Enforce using attributes only (overrides no-mixed-args, incompatible with kv-only).\n    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#attributes-only\n    # Default: false\n    attr-only: true\n    # Enforce not using global loggers.\n    # Values:\n    # - \"\": disabled\n    # - \"all\": report all global loggers\n    # - \"default\": report only the default slog logger\n    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#no-global\n    # Default: \"\"\n    no-global: \"all\"\n    # Enforce using methods that accept a context.\n    # Values:\n    # - \"\": disabled\n    # - \"all\": report all contextless calls\n    # - \"scope\": report only if a context exists in the scope of the outermost function\n    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#context-only\n    # Default: \"\"\n    context: \"all\"\n    # Enforce using static values for log messages.\n    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#static-messages\n    # Default: false\n    static-msg: true\n    # Enforce using constants instead of raw keys.\n    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#no-raw-keys\n    # Default: false\n    no-raw-keys: true\n    # Enforce a single key naming convention.\n    # Values: snake, kebab, camel, pascal\n    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#key-naming-convention\n    # Default: \"\"\n    key-naming-case: snake\n    # Enforce not using specific keys.\n    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#forbidden-keys\n    # Default: []\n    forbidden-keys:\n      - time\n      - level\n      - msg\n      - source\n      - foo\n    # Enforce putting arguments on separate lines.\n    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#arguments-on-separate-lines\n    # Default: false\n    args-on-sep-lines: true\n\n  spancheck:\n    # Checks to enable.\n    # Options include:\n    # - `end`: check that `span.End()` is called\n    # - `record-error`: check that `span.RecordError(err)` is called when an error is returned\n    # - `set-status`: check that `span.SetStatus(codes.Error, msg)` is called when an error is returned\n    # Default: [\"end\"]\n    checks:\n      - end\n      - record-error\n      - set-status\n    # A list of regexes for function signatures that silence `record-error` and `set-status` reports\n    # if found in the call path to a returned error.\n    # https://github.com/jjti/go-spancheck#ignore-check-signatures\n    # Default: []\n    ignore-check-signatures:\n      - \"telemetry.RecordError\"\n    # A list of regexes for additional function signatures that create spans.\n    # This is useful if you have a utility method to create spans.\n    # Each entry should be of the form `<regex>:<telemetry-type>`, where `telemetry-type` can be `opentelemetry` or `opencensus`.\n    # https://github.com/jjti/go-spancheck#extra-start-span-signatures\n    # Default: []\n    extra-start-span-signatures:\n      - \"github.com/user/repo/telemetry/trace.Start:opentelemetry\"\n  staticcheck:\n    # SAxxxx checks in https://staticcheck.dev/docs/configuration/options/#checks\n    # Example (to disable some checks): [ \"all\", \"-SA1000\", \"-SA1001\"]\n    # Default: [\"*\"]\n    checks:\n      # Invalid regular expression.\n      # https://staticcheck.dev/docs/checks/#SA1000\n      - SA1000\n      # Invalid template.\n      # https://staticcheck.dev/docs/checks/#SA1001\n      - SA1001\n      # Invalid format in 'time.Parse'.\n      # https://staticcheck.dev/docs/checks/#SA1002\n      - SA1002\n      # Unsupported argument to functions in 'encoding/binary'.\n      # https://staticcheck.dev/docs/checks/#SA1003\n      - SA1003\n      # Suspiciously small untyped constant in 'time.Sleep'.\n      # https://staticcheck.dev/docs/checks/#SA1004\n      - SA1004\n      # Invalid first argument to 'exec.Command'.\n      # https://staticcheck.dev/docs/checks/#SA1005\n      - SA1005\n      # 'Printf' with dynamic first argument and no further arguments.\n      # https://staticcheck.dev/docs/checks/#SA1006\n      - SA1006\n      # Invalid URL in 'net/url.Parse'.\n      # https://staticcheck.dev/docs/checks/#SA1007\n      - SA1007\n      # Non-canonical key in 'http.Header' map.\n      # https://staticcheck.dev/docs/checks/#SA1008\n      - SA1008\n      # '(*regexp.Regexp).FindAll' called with 'n == 0', which will always return zero results.\n      # https://staticcheck.dev/docs/checks/#SA1010\n      - SA1010\n      # Various methods in the \"strings\" package expect valid UTF-8, but invalid input is provided.\n      # https://staticcheck.dev/docs/checks/#SA1011\n      - SA1011\n      # A nil 'context.Context' is being passed to a function, consider using 'context.TODO' instead.\n      # https://staticcheck.dev/docs/checks/#SA1012\n      - SA1012\n      # 'io.Seeker.Seek' is being called with the whence constant as the first argument, but it should be the second.\n      # https://staticcheck.dev/docs/checks/#SA1013\n      - SA1013\n      # Non-pointer value passed to 'Unmarshal' or 'Decode'.\n      # https://staticcheck.dev/docs/checks/#SA1014\n      - SA1014\n      # Using 'time.Tick' in a way that will leak. Consider using 'time.NewTicker', and only use 'time.Tick' in tests, commands and endless functions.\n      # https://staticcheck.dev/docs/checks/#SA1015\n      - SA1015\n      # Trapping a signal that cannot be trapped.\n      # https://staticcheck.dev/docs/checks/#SA1016\n      - SA1016\n      # Channels used with 'os/signal.Notify' should be buffered.\n      # https://staticcheck.dev/docs/checks/#SA1017\n      - SA1017\n      # 'strings.Replace' called with 'n == 0', which does nothing.\n      # https://staticcheck.dev/docs/checks/#SA1018\n      - SA1018\n      # Using a deprecated function, variable, constant or field.\n      # https://staticcheck.dev/docs/checks/#SA1019\n      - SA1019\n      # Using an invalid host:port pair with a 'net.Listen'-related function.\n      # https://staticcheck.dev/docs/checks/#SA1020\n      - SA1020\n      # Using 'bytes.Equal' to compare two 'net.IP'.\n      # https://staticcheck.dev/docs/checks/#SA1021\n      - SA1021\n      # Modifying the buffer in an 'io.Writer' implementation.\n      # https://staticcheck.dev/docs/checks/#SA1023\n      - SA1023\n      # A string cutset contains duplicate characters.\n      # https://staticcheck.dev/docs/checks/#SA1024\n      - SA1024\n      # It is not possible to use '(*time.Timer).Reset''s return value correctly.\n      # https://staticcheck.dev/docs/checks/#SA1025\n      - SA1025\n      # Cannot marshal channels or functions.\n      # https://staticcheck.dev/docs/checks/#SA1026\n      - SA1026\n      # Atomic access to 64-bit variable must be 64-bit aligned.\n      # https://staticcheck.dev/docs/checks/#SA1027\n      - SA1027\n      # 'sort.Slice' can only be used on slices.\n      # https://staticcheck.dev/docs/checks/#SA1028\n      - SA1028\n      # Inappropriate key in call to 'context.WithValue'.\n      # https://staticcheck.dev/docs/checks/#SA1029\n      - SA1029\n      # Invalid argument in call to a 'strconv' function.\n      # https://staticcheck.dev/docs/checks/#SA1030\n      - SA1030\n      # Overlapping byte slices passed to an encoder.\n      # https://staticcheck.dev/docs/checks/#SA1031\n      - SA1031\n      # Wrong order of arguments to 'errors.Is'.\n      # https://staticcheck.dev/docs/checks/#SA1032\n      - SA1032\n      # 'sync.WaitGroup.Add' called inside the goroutine, leading to a race condition.\n      # https://staticcheck.dev/docs/checks/#SA2000\n      - SA2000\n      # Empty critical section, did you mean to defer the unlock?.\n      # https://staticcheck.dev/docs/checks/#SA2001\n      - SA2001\n      # Called 'testing.T.FailNow' or 'SkipNow' in a goroutine, which isn't allowed.\n      # https://staticcheck.dev/docs/checks/#SA2002\n      - SA2002\n      # Deferred 'Lock' right after locking, likely meant to defer 'Unlock' instead.\n      # https://staticcheck.dev/docs/checks/#SA2003\n      - SA2003\n      # 'TestMain' doesn't call 'os.Exit', hiding test failures.\n      # https://staticcheck.dev/docs/checks/#SA3000\n      - SA3000\n      # Assigning to 'b.N' in benchmarks distorts the results.\n      # https://staticcheck.dev/docs/checks/#SA3001\n      - SA3001\n      # Binary operator has identical expressions on both sides.\n      # https://staticcheck.dev/docs/checks/#SA4000\n      - SA4000\n      # '&*x' gets simplified to 'x', it does not copy 'x'.\n      # https://staticcheck.dev/docs/checks/#SA4001\n      - SA4001\n      # Comparing unsigned values against negative values is pointless.\n      # https://staticcheck.dev/docs/checks/#SA4003\n      - SA4003\n      # The loop exits unconditionally after one iteration.\n      # https://staticcheck.dev/docs/checks/#SA4004\n      - SA4004\n      # Field assignment that will never be observed. Did you mean to use a pointer receiver?.\n      # https://staticcheck.dev/docs/checks/#SA4005\n      - SA4005\n      # A value assigned to a variable is never read before being overwritten. Forgotten error check or dead code?.\n      # https://staticcheck.dev/docs/checks/#SA4006\n      - SA4006\n      # The variable in the loop condition never changes, are you incrementing the wrong variable?.\n      # https://staticcheck.dev/docs/checks/#SA4008\n      - SA4008\n      # A function argument is overwritten before its first use.\n      # https://staticcheck.dev/docs/checks/#SA4009\n      - SA4009\n      # The result of 'append' will never be observed anywhere.\n      # https://staticcheck.dev/docs/checks/#SA4010\n      - SA4010\n      # Break statement with no effect. Did you mean to break out of an outer loop?.\n      # https://staticcheck.dev/docs/checks/#SA4011\n      - SA4011\n      # Comparing a value against NaN even though no value is equal to NaN.\n      # https://staticcheck.dev/docs/checks/#SA4012\n      - SA4012\n      # Negating a boolean twice ('!!b') is the same as writing 'b'. This is either redundant, or a typo.\n      # https://staticcheck.dev/docs/checks/#SA4013\n      - SA4013\n      # An if/else if chain has repeated conditions and no side-effects; if the condition didn't match the first time, it won't match the second time, either.\n      # https://staticcheck.dev/docs/checks/#SA4014\n      - SA4014\n      # Calling functions like 'math.Ceil' on floats converted from integers doesn't do anything useful.\n      # https://staticcheck.dev/docs/checks/#SA4015\n      - SA4015\n      # Certain bitwise operations, such as 'x ^ 0', do not do anything useful.\n      # https://staticcheck.dev/docs/checks/#SA4016\n      - SA4016\n      # Discarding the return values of a function without side effects, making the call pointless.\n      # https://staticcheck.dev/docs/checks/#SA4017\n      - SA4017\n      # Self-assignment of variables.\n      # https://staticcheck.dev/docs/checks/#SA4018\n      - SA4018\n      # Multiple, identical build constraints in the same file.\n      # https://staticcheck.dev/docs/checks/#SA4019\n      - SA4019\n      # Unreachable case clause in a type switch.\n      # https://staticcheck.dev/docs/checks/#SA4020\n      - SA4020\n      # \"x = append(y)\" is equivalent to \"x = y\".\n      # https://staticcheck.dev/docs/checks/#SA4021\n      - SA4021\n      # Comparing the address of a variable against nil.\n      # https://staticcheck.dev/docs/checks/#SA4022\n      - SA4022\n      # Impossible comparison of interface value with untyped nil.\n      # https://staticcheck.dev/docs/checks/#SA4023\n      - SA4023\n      # Checking for impossible return value from a builtin function.\n      # https://staticcheck.dev/docs/checks/#SA4024\n      - SA4024\n      # Integer division of literals that results in zero.\n      # https://staticcheck.dev/docs/checks/#SA4025\n      - SA4025\n      # Go constants cannot express negative zero.\n      # https://staticcheck.dev/docs/checks/#SA4026\n      - SA4026\n      # '(*net/url.URL).Query' returns a copy, modifying it doesn't change the URL.\n      # https://staticcheck.dev/docs/checks/#SA4027\n      - SA4027\n      # 'x % 1' is always zero.\n      # https://staticcheck.dev/docs/checks/#SA4028\n      - SA4028\n      # Ineffective attempt at sorting slice.\n      # https://staticcheck.dev/docs/checks/#SA4029\n      - SA4029\n      # Ineffective attempt at generating random number.\n      # https://staticcheck.dev/docs/checks/#SA4030\n      - SA4030\n      # Checking never-nil value against nil.\n      # https://staticcheck.dev/docs/checks/#SA4031\n      - SA4031\n      # Comparing 'runtime.GOOS' or 'runtime.GOARCH' against impossible value.\n      # https://staticcheck.dev/docs/checks/#SA4032\n      - SA4032\n      # Assignment to nil map.\n      # https://staticcheck.dev/docs/checks/#SA5000\n      - SA5000\n      # Deferring 'Close' before checking for a possible error.\n      # https://staticcheck.dev/docs/checks/#SA5001\n      - SA5001\n      # The empty for loop (\"for {}\") spins and can block the scheduler.\n      # https://staticcheck.dev/docs/checks/#SA5002\n      - SA5002\n      # Defers in infinite loops will never execute.\n      # https://staticcheck.dev/docs/checks/#SA5003\n      - SA5003\n      # \"for { select { ...\" with an empty default branch spins.\n      # https://staticcheck.dev/docs/checks/#SA5004\n      - SA5004\n      # The finalizer references the finalized object, preventing garbage collection.\n      # https://staticcheck.dev/docs/checks/#SA5005\n      - SA5005\n      # Infinite recursive call.\n      # https://staticcheck.dev/docs/checks/#SA5007\n      - SA5007\n      # Invalid struct tag.\n      # https://staticcheck.dev/docs/checks/#SA5008\n      - SA5008\n      # Invalid Printf call.\n      # https://staticcheck.dev/docs/checks/#SA5009\n      - SA5009\n      # Impossible type assertion.\n      # https://staticcheck.dev/docs/checks/#SA5010\n      - SA5010\n      # Possible nil pointer dereference.\n      # https://staticcheck.dev/docs/checks/#SA5011\n      - SA5011\n      # Passing odd-sized slice to function expecting even size.\n      # https://staticcheck.dev/docs/checks/#SA5012\n      - SA5012\n      # Using 'regexp.Match' or related in a loop, should use 'regexp.Compile'.\n      # https://staticcheck.dev/docs/checks/#SA6000\n      - SA6000\n      # Missing an optimization opportunity when indexing maps by byte slices.\n      # https://staticcheck.dev/docs/checks/#SA6001\n      - SA6001\n      # Storing non-pointer values in 'sync.Pool' allocates memory.\n      # https://staticcheck.dev/docs/checks/#SA6002\n      - SA6002\n      # Converting a string to a slice of runes before ranging over it.\n      # https://staticcheck.dev/docs/checks/#SA6003\n      - SA6003\n      # Inefficient string comparison with 'strings.ToLower' or 'strings.ToUpper'.\n      # https://staticcheck.dev/docs/checks/#SA6005\n      - SA6005\n      # Using io.WriteString to write '[]byte'.\n      # https://staticcheck.dev/docs/checks/#SA6006\n      - SA6006\n      # Defers in range loops may not run when you expect them to.\n      # https://staticcheck.dev/docs/checks/#SA9001\n      - SA9001\n      # Using a non-octal 'os.FileMode' that looks like it was meant to be in octal.\n      # https://staticcheck.dev/docs/checks/#SA9002\n      - SA9002\n      # Empty body in an if or else branch.\n      # https://staticcheck.dev/docs/checks/#SA9003\n      - SA9003\n      # Only the first constant has an explicit type.\n      # https://staticcheck.dev/docs/checks/#SA9004\n      - SA9004\n      # Trying to marshal a struct with no public fields nor custom marshaling.\n      # https://staticcheck.dev/docs/checks/#SA9005\n      - SA9005\n      # Dubious bit shifting of a fixed size integer value.\n      # https://staticcheck.dev/docs/checks/#SA9006\n      - SA9006\n      # Deleting a directory that shouldn't be deleted.\n      # https://staticcheck.dev/docs/checks/#SA9007\n      - SA9007\n      # 'else' branch of a type assertion is probably not reading the right value.\n      # https://staticcheck.dev/docs/checks/#SA9008\n      - SA9008\n      # Ineffectual Go compiler directive.\n      # https://staticcheck.dev/docs/checks/#SA9009\n      - SA9009\n\n  stylecheck:\n    # https://staticcheck.dev/docs/configuration/options/#dot_import_whitelist\n    # Default: [\"github.com/mmcloughlin/avo/build\", \"github.com/mmcloughlin/avo/operand\", \"github.com/mmcloughlin/avo/reg\"]\n    dot-import-whitelist:\n      - fmt\n    # https://staticcheck.dev/docs/configuration/options/#initialisms\n    # Default: [\"ACL\", \"API\", \"ASCII\", \"CPU\", \"CSS\", \"DNS\", \"EOF\", \"GUID\", \"HTML\", \"HTTP\", \"HTTPS\", \"ID\", \"IP\", \"JSON\", \"QPS\", \"RAM\", \"RPC\", \"SLA\", \"SMTP\", \"SQL\", \"SSH\", \"TCP\", \"TLS\", \"TTL\", \"UDP\", \"UI\", \"GID\", \"UID\", \"UUID\", \"URI\", \"URL\", \"UTF8\", \"VM\", \"XML\", \"XMPP\", \"XSRF\", \"XSS\", \"SIP\", \"RTP\", \"AMQP\", \"DB\", \"TS\"]\n    initialisms: [ \"ACL\", \"API\", \"ASCII\", \"CPU\", \"CSS\", \"DNS\", \"EOF\", \"GUID\", \"HTML\", \"HTTP\", \"HTTPS\", \"ID\", \"IP\", \"JSON\", \"QPS\", \"RAM\", \"RPC\", \"SLA\", \"SMTP\", \"SQL\", \"SSH\", \"TCP\", \"TLS\", \"TTL\", \"UDP\", \"UI\", \"GID\", \"UID\", \"UUID\", \"URI\", \"URL\", \"UTF8\", \"VM\", \"XML\", \"XMPP\", \"XSRF\", \"XSS\", \"SIP\", \"RTP\", \"AMQP\", \"DB\", \"TS\" ]\n    # https://staticcheck.dev/docs/configuration/options/#http_status_code_whitelist\n    # Default: [\"200\", \"400\", \"404\", \"500\"]\n    http-status-code-whitelist: [ \"200\", \"400\", \"404\", \"500\" ]\n    # STxxxx checks in https://staticcheck.dev/docs/configuration/options/#checks\n    # Example (to disable some checks): [ \"all\", \"-ST1000\", \"-ST1003\", \"-ST1016\", \"-ST1020\", \"-ST1021\", \"-ST1022\" ]\n    # Default: [\"*\"]\n    checks:\n      # Incorrect or missing package comment.\n      # https://staticcheck.dev/docs/checks/#ST1000\n      - ST1000\n      # Dot imports are discouraged.\n      # https://staticcheck.dev/docs/checks/#ST1001\n      - ST1001\n      # Poorly chosen identifier.\n      # https://staticcheck.dev/docs/checks/#ST1003\n      - ST1003\n      # Incorrectly formatted error string.\n      # https://staticcheck.dev/docs/checks/#ST1005\n      - ST1005\n      # Poorly chosen receiver name.\n      # https://staticcheck.dev/docs/checks/#ST1006\n      - ST1006\n      # A function's error value should be its last return value.\n      # https://staticcheck.dev/docs/checks/#ST1008\n      - ST1008\n      # Poorly chosen name for variable of type 'time.Duration'.\n      # https://staticcheck.dev/docs/checks/#ST1011\n      - ST1011\n      # Poorly chosen name for error variable.\n      # https://staticcheck.dev/docs/checks/#ST1012\n      - ST1012\n      # Should use constants for HTTP error codes, not magic numbers.\n      # https://staticcheck.dev/docs/checks/#ST1013\n      - ST1013\n      # A switch's default case should be the first or last case.\n      # https://staticcheck.dev/docs/checks/#ST1015\n      - ST1015\n      # Use consistent method receiver names.\n      # https://staticcheck.dev/docs/checks/#ST1016\n      - ST1016\n      # Don't use Yoda conditions.\n      # https://staticcheck.dev/docs/checks/#ST1017\n      - ST1017\n      # Avoid zero-width and control characters in string literals.\n      # https://staticcheck.dev/docs/checks/#ST1018\n      - ST1018\n      # Importing the same package multiple times.\n      # https://staticcheck.dev/docs/checks/#ST1019\n      - ST1019\n      # The documentation of an exported function should start with the function's name.\n      # https://staticcheck.dev/docs/checks/#ST1020\n      - ST1020\n      # The documentation of an exported type should start with type's name.\n      # https://staticcheck.dev/docs/checks/#ST1021\n      - ST1021\n      # The documentation of an exported variable or constant should start with variable's name.\n      # https://staticcheck.dev/docs/checks/#ST1022\n      - ST1022\n      # Redundant type in variable declaration.\n      # https://staticcheck.dev/docs/checks/#ST1023\n      - ST1023\n\n  tagalign:\n    # Align and sort can be used together or separately.\n    #\n    # Whether enable align. If true, the struct tags will be aligned.\n    # e.g.:\n    # type FooBar struct {\n    #     Bar    string `json:\"bar\" validate:\"required\"`\n    #     FooFoo int8   `json:\"foo_foo\" validate:\"required\"`\n    # }\n    # will be formatted to:\n    # type FooBar struct {\n    #     Bar    string `json:\"bar\"     validate:\"required\"`\n    #     FooFoo int8   `json:\"foo_foo\" validate:\"required\"`\n    # }\n    # Default: true.\n    align: false\n    # Whether enable tags sort.\n    # If true, the tags will be sorted by name in ascending order.\n    # e.g.: `xml:\"bar\" json:\"bar\" validate:\"required\"` -> `json:\"bar\" validate:\"required\" xml:\"bar\"`\n    # Default: true\n    sort: false\n    # Specify the order of tags, the other tags will be sorted by name.\n    # This option will be ignored if `sort` is false.\n    # Default: []\n    order:\n      - json\n      - yaml\n      - yml\n      - toml\n      - mapstructure\n      - binding\n      - validate\n    # Whether enable strict style.\n    # In this style, the tags will be sorted and aligned in the dictionary order,\n    # and the tags with the same name will be aligned together.\n    # Note: This option will be ignored if 'align' or 'sort' is false.\n    # Default: false\n    strict: true\n\n  tagliatelle:\n    # Checks the struct tag name case.\n    case:\n      # Defines the association between tag name and case.\n      # Any struct tag name can be used.\n      # Supported string cases:\n      # - `camel`\n      # - `pascal`\n      # - `kebab`\n      # - `snake`\n      # - `upperSnake`\n      # - `goCamel`\n      # - `goPascal`\n      # - `goKebab`\n      # - `goSnake`\n      # - `upper`\n      # - `lower`\n      # - `header`\n      rules:\n        json: camel\n        yaml: camel\n        xml: camel\n        toml: camel\n        bson: camel\n        avro: snake\n        mapstructure: kebab\n        env: upperSnake\n        envconfig: upperSnake\n        whatever: snake\n      # Defines the association between tag name and case.\n      # Important: the `extended-rules` overrides `rules`.\n      # Default: empty\n      extended-rules:\n        json:\n          # Supported string cases:\n          # - `camel`\n          # - `pascal`\n          # - `kebab`\n          # - `snake`\n          # - `upperSnake`\n          # - `goCamel`\n          # - `goPascal`\n          # - `goKebab`\n          # - `goSnake`\n          # - `header`\n          # - `lower`\n          # - `header`\n          #\n          # Required\n          case: camel\n          # Adds 'AMQP', 'DB', 'GID', 'RTP', 'SIP', 'TS' to initialisms,\n          # and removes 'LHS', 'RHS' from initialisms.\n          # Default: false\n          extra-initialisms: true\n          # Defines initialism additions and overrides.\n          # Default: empty\n          initialism-overrides:\n            DB: true # add a new initialism\n            LHS: false # disable a default initialism.\n            # ...\n      # Uses the struct field name to check the name of the struct tag.\n      # Default: false\n      use-field-name: true\n      # The field names to ignore.\n      # Default: []\n      ignored-fields:\n        - Bar\n        - Foo\n      # Overrides the default/root configuration.\n      # Default: []\n      overrides:\n        -\n          # The package path (uses `/` only as a separator).\n          # Required\n          pkg: foo/bar\n          # Default: empty or the same as the default/root configuration.\n          rules:\n            json: snake\n            xml: pascal\n          # Default: empty or the same as the default/root configuration.\n          extended-rules:\n            # Same options as the base `extended-rules`.\n          # Default: false (WARNING: it doesn't follow the default/root configuration)\n          use-field-name: true\n          # The field names to ignore.\n          # Default: [] or the same as the default/root configuration.\n          ignored-fields:\n            - Bar\n            - Foo\n          # Ignore the package (takes precedence over all other configurations).\n          # Default: false\n          ignore: true\n\n  tenv:\n    # The option `all` will run against whole test files (`_test.go`) regardless of method/function signatures.\n    # Otherwise, only methods that take `*testing.T`, `*testing.B`, and `testing.TB` as arguments are checked.\n    # Default: false\n    all: false\n\n  testifylint:\n    # Enable all checkers (https://github.com/Antonboom/testifylint#checkers).\n    # Default: false\n    enable-all: true\n    # Disable checkers by name\n    # (in addition to default\n    #   suite-thelper\n    # ).\n    disable:\n      - blank-import\n      - bool-compare\n      - compares\n      - contains\n      - empty\n      - encoded-compare\n      - error-is-as\n      - error-nil\n      - expected-actual\n      - float-compare\n      - formatter\n      - go-require\n      - len\n      - negative-positive\n      - nil-compare\n      - regexp\n      - require-error\n      - suite-broken-parallel\n      - suite-dont-use-pkg\n      - suite-extra-assert-call\n      - suite-subtest-run\n      - suite-thelper\n      - useless-assert\n\n    # Disable all checkers (https://github.com/Antonboom/testifylint#checkers).\n    # Default: false\n    disable-all: true\n    # Enable checkers by name\n    # (in addition to default\n    #   blank-import, bool-compare, compares, contains, empty, encoded-compare, error-is-as, error-nil, expected-actual,\n    #   go-require, float-compare, formatter, len, negative-positive, nil-compare, regexp, require-error,\n    #   suite-broken-parallel, suite-dont-use-pkg, suite-extra-assert-call, suite-subtest-run, useless-assert\n    # ).\n    enable:\n      - blank-import\n      - bool-compare\n      - compares\n      - contains\n      - empty\n      - encoded-compare\n      - error-is-as\n      - error-nil\n      - expected-actual\n      - float-compare\n      - formatter\n      - go-require\n      - len\n      - negative-positive\n      - nil-compare\n      - regexp\n      - require-error\n      - suite-broken-parallel\n      - suite-dont-use-pkg\n      - suite-extra-assert-call\n      - suite-subtest-run\n      - suite-thelper\n      - useless-assert\n\n    bool-compare:\n      # To ignore user defined types (over builtin bool).\n      # Default: false\n      ignore-custom-types: true\n    expected-actual:\n      # Regexp for expected variable name.\n      # Default: (^(exp(ected)?|want(ed)?)([A-Z]\\w*)?$)|(^(\\w*[a-z])?(Exp(ected)?|Want(ed)?)$)\n      pattern: ^expected\n    formatter:\n      # To enable go vet's printf checks.\n      # Default: true\n      check-format-string: false\n      # To require f-assertions (e.g. `assert.Equalf`) if format string is used, even if there are no variable-length\n      # variables, i.e. it requires `require.NoErrorf` for both these cases:\n      # - require.NoErrorf(t, err, \"unexpected error\")\n      # - require.NoErrorf(t, err, \"unexpected error for sid: %v\", sid)\n      # To understand this behavior, please read the\n      # https://github.com/Antonboom/testifylint?tab=readme-ov-file#historical-reference-of-formatter.\n      # Default: false\n      require-f-funcs: true\n    go-require:\n      # To ignore HTTP handlers (like http.HandlerFunc).\n      # Default: false\n      ignore-http-handlers: true\n    require-error:\n      # Regexp for assertions to analyze. If defined, then only matched error assertions will be reported.\n      # Default: \"\"\n      fn-pattern: ^(Errorf?|NoErrorf?)$\n    suite-extra-assert-call:\n      # To require or remove extra Assert() call?\n      # Default: remove\n      mode: require\n\n  testpackage:\n    # Regexp pattern to skip files.\n    # Default: \"(export|internal)_test\\\\.go\"\n    skip-regexp: (export|internal)_test\\.go\n    # List of packages that don't end with _test that tests are allowed to be in.\n    # Default: \"main\"\n    allow-packages:\n      - example\n      - main\n\n  thelper:\n    test:\n      # Check *testing.T is first param (or after context.Context) of helper function.\n      # Default: true\n      first: false\n      # Check *testing.T param has name t.\n      # Default: true\n      name: false\n      # Check t.Helper() begins helper function.\n      # Default: true\n      begin: false\n    benchmark:\n      # Check *testing.B is first param (or after context.Context) of helper function.\n      # Default: true\n      first: false\n      # Check *testing.B param has name b.\n      # Default: true\n      name: false\n      # Check b.Helper() begins helper function.\n      # Default: true\n      begin: false\n    tb:\n      # Check *testing.TB is first param (or after context.Context) of helper function.\n      # Default: true\n      first: false\n      # Check *testing.TB param has name tb.\n      # Default: true\n      name: false\n      # Check tb.Helper() begins helper function.\n      # Default: true\n      begin: false\n    fuzz:\n      # Check *testing.F is first param (or after context.Context) of helper function.\n      # Default: true\n      first: false\n      # Check *testing.F param has name f.\n      # Default: true\n      name: false\n      # Check f.Helper() begins helper function.\n      # Default: true\n      begin: false\n\n  usestdlibvars:\n    # Suggest the use of http.MethodXX.\n    # Default: true\n    http-method: false\n    # Suggest the use of http.StatusXX.\n    # Default: true\n    http-status-code: false\n    # Suggest the use of time.Weekday.String().\n    # Default: true\n    time-weekday: true\n    # Suggest the use of time.Month.String().\n    # Default: false\n    time-month: true\n    # Suggest the use of time.Layout.\n    # Default: false\n    time-layout: true\n    # Suggest the use of crypto.Hash.String().\n    # Default: false\n    crypto-hash: true\n    # Suggest the use of rpc.DefaultXXPath.\n    # Default: false\n    default-rpc-path: true\n    # Suggest the use of sql.LevelXX.String().\n    # Default: false\n    sql-isolation-level: true\n    # Suggest the use of tls.SignatureScheme.String().\n    # Default: false\n    tls-signature-scheme: true\n    # Suggest the use of constant.Kind.String().\n    # Default: false\n    constant-kind: true\n\n  usetesting:\n    # Enable/disable `os.CreateTemp(\"\", ...)` detections.\n    # Default: true\n    os-create-temp: false\n\n    # Enable/disable `os.MkdirTemp()` detections.\n    # Default: true\n    os-mkdir-temp: false\n\n    # Enable/disable `os.Setenv()` detections.\n    # Default: false\n    os-setenv: true\n\n    # Enable/disable `os.TempDir()` detections.\n    # Default: false\n    os-temp-dir: true\n\n    # Enable/disable `os.Chdir()` detections.\n    # Disabled if Go < 1.24.\n    # Default: true\n    os-chdir: false\n\n    # Enable/disable `context.Background()` detections.\n    # Disabled if Go < 1.24.\n    # Default: true\n    context-background: false\n\n    # Enable/disable `context.TODO()` detections.\n    # Disabled if Go < 1.24.\n    # Default: true\n    context-todo: false\n\n  unconvert:\n    # Remove conversions that force intermediate rounding.\n    # Default: false\n    fast-math: true\n    # Be more conservative (experimental).\n    # Default: false\n    safe: true\n\n  unparam:\n    # Inspect exported functions.\n    #\n    # Set to true if no external program/library imports your code.\n    # XXX: if you enable this setting, unparam will report a lot of false-positives in text editors:\n    # if it's called for subdir of a project it can't find external interfaces. All text editor integrations\n    # with golangci-lint call it on a directory with the changed file.\n    #\n    # Default: false\n    check-exported: true\n\n  unused:\n    # Mark all struct fields that have been written to as used.\n    # Default: true\n    field-writes-are-uses: false\n    # Treat IncDec statement (e.g. `i++` or `i--`) as both read and write operation instead of just write.\n    # Default: false\n    post-statements-are-reads: true\n    # Mark all exported fields as used.\n    # default: true\n    exported-fields-are-used: false\n    # Mark all function parameters as used.\n    # default: true\n    parameters-are-used: false\n    # Mark all local variables as used.\n    # default: true\n    local-variables-are-used: false\n    # Mark all identifiers inside generated files as used.\n    # Default: true\n    generated-is-used: false\n\n  varnamelen:\n    # The longest distance, in source lines, that is being considered a \"small scope\".\n    # Variables used in at most this many lines will be ignored.\n    # Default: 5\n    max-distance: 6\n    # The minimum length of a variable's name that is considered \"long\".\n    # Variable names that are at least this long will be ignored.\n    # Default: 3\n    min-name-length: 2\n    # Check method receivers.\n    # Default: false\n    check-receiver: true\n    # Check named return values.\n    # Default: false\n    check-return: true\n    # Check type parameters.\n    # Default: false\n    check-type-param: true\n    # Ignore \"ok\" variables that hold the bool return value of a type assertion.\n    # Default: false\n    ignore-type-assert-ok: true\n    # Ignore \"ok\" variables that hold the bool return value of a map index.\n    # Default: false\n    ignore-map-index-ok: true\n    # Ignore \"ok\" variables that hold the bool return value of a channel receive.\n    # Default: false\n    ignore-chan-recv-ok: true\n    # Optional list of variable names that should be ignored completely.\n    # Default: []\n    ignore-names:\n      - err\n    # Optional list of variable declarations that should be ignored completely.\n    # Entries must be in one of the following forms (see below for examples):\n    # - for variables, parameters, named return values, method receivers, or type parameters:\n    #   <name> <type>  (<type> can also be a pointer/slice/map/chan/...)\n    # - for constants: const <name>\n    #\n    # Default: []\n    ignore-decls:\n      - c echo.Context\n      - t testing.T\n      - f *foo.Bar\n      - e error\n      - i int\n      - const C\n      - T any\n      - m map[string]int\n\n  whitespace:\n    # Enforces newlines (or comments) after every multi-line if statement.\n    # Default: false\n    multi-if: true\n    # Enforces newlines (or comments) after every multi-line function signature.\n    # Default: false\n    multi-func: true\n\n  wrapcheck:\n    # An array of strings specifying additional substrings of signatures to ignore.\n    # Unlike 'ignoreSigs', this option extends the default set (or the set specified in 'ignoreSigs') without replacing it entirely.\n    # This allows you to add specific signatures to the ignore list\n    # while retaining the defaults or any items in 'ignoreSigs'.\n    # Default: []\n    extra-ignore-sigs:\n      - .CustomError(\n      - .SpecificWrap(\n\n    # An array of strings that specify substrings of signatures to ignore.\n    # If this set, it will override the default set of ignored signatures.\n    # See https://github.com/tomarrell/wrapcheck#configuration for more information.\n    # Default: [\".Errorf(\", \"errors.New(\", \"errors.Unwrap(\", \"errors.Join(\", \".Wrap(\", \".Wrapf(\", \".WithMessage(\", \".WithMessagef(\", \".WithStack(\"]\n    ignoreSigs:\n      - .Errorf(\n      - errors.New(\n      - errors.Unwrap(\n      - errors.Join(\n      - .Wrap(\n      - .Wrapf(\n      - .WithMessage(\n      - .WithMessagef(\n      - .WithStack(\n    # An array of strings that specify regular expressions of signatures to ignore.\n    # Default: []\n    ignoreSigRegexps:\n      - \\.New.*Error\\(\n    # An array of strings that specify globs of packages to ignore.\n    # Default: []\n    ignorePackageGlobs:\n      - encoding/*\n      - github.com/pkg/*\n    # An array of strings that specify regular expressions of interfaces to ignore.\n    # Default: []\n    ignoreInterfaceRegexps:\n      - ^(?i)c(?-i)ach(ing|e)\n\n  wsl:\n    # Do strict checking when assigning from append (x = append(x, y)).\n    # If this is set to true - the append call must append either a variable\n    # assigned, called or used on the line above.\n    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#strict-append\n    # Default: true\n    strict-append: false\n\n    # Allows assignments to be cuddled with variables used in calls on\n    # line above and calls to be cuddled with assignments of variables\n    # used in call on line above.\n    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#allow-assign-and-call\n    # Default: true\n    allow-assign-and-call: false\n\n    # Allows assignments to be cuddled with anything.\n    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#allow-assign-and-anything\n    # Default: false\n    allow-assign-and-anything: true\n\n    # Allows cuddling to assignments even if they span over multiple lines.\n    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#allow-multiline-assign\n    # Default: true\n    allow-multiline-assign: false\n\n    # If the number of lines in a case block is equal to or lager than this number,\n    # the case *must* end white a newline.\n    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#force-case-trailing-whitespace\n    # Default: 0\n    force-case-trailing-whitespace: 1\n\n    # Allow blocks to end with comments.\n    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#allow-trailing-comment\n    # Default: false\n    allow-trailing-comment: true\n\n    # Allow multiple comments in the beginning of a block separated with newline.\n    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#allow-separated-leading-comment\n    # Default: false\n    allow-separated-leading-comment: true\n\n    # Allow multiple var/declaration statements to be cuddled.\n    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#allow-cuddle-declarations\n    # Default: false\n    allow-cuddle-declarations: true\n\n    # A list of call idents that everything can be cuddled with.\n    # Defaults: [ \"Lock\", \"RLock\" ]\n    allow-cuddle-with-calls: [ \"Foo\", \"Bar\" ]\n\n    # AllowCuddleWithRHS is a list of right hand side variables that is allowed\n    # to be cuddled with anything.\n    # Defaults: [ \"Unlock\", \"RUnlock\" ]\n    allow-cuddle-with-rhs: [ \"Foo\", \"Bar\" ]\n\n    # Causes an error when an If statement that checks an error variable doesn't\n    # cuddle with the assignment of that variable.\n    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#force-err-cuddling\n    # Default: false\n    force-err-cuddling: true\n\n    # When force-err-cuddling is enabled this is a list of names\n    # used for error variables to check for in the conditional.\n    # Default: [ \"err\" ]\n    error-variable-names: [ \"foo\" ]\n\n    # Causes an error if a short declaration (:=) cuddles with anything other than\n    # another short declaration.\n    # This logic overrides force-err-cuddling among others.\n    # https://github.com/bombsimon/wsl/blob/master/doc/configuration.md#force-short-decl-cuddling\n    # Default: false\n    force-short-decl-cuddling: true\n\n  # The custom section can be used to define linter plugins to be loaded at runtime.\n  # See README documentation for more info.\n  custom:\n    # Each custom linter should have a unique name.\n    example:\n      # The plugin type.\n      # It can be `goplugin` or `module`.\n      # Default: goplugin\n      type: module\n      # The path to the plugin *.so. Can be absolute or local.\n      # Required for each custom linter.\n      path: /path/to/example.so\n      # The description of the linter.\n      # Optional.\n      description: This is an example usage of a plugin linter.\n      # Intended to point to the repo location of the linter.\n      # Optional.\n      original-url: github.com/golangci/example-linter\n      # Plugins settings/configuration.\n      # Only work with plugin based on `linterdb.PluginConstructor`.\n      # Optional.\n      settings:\n        foo: bar\n\n\nissues:\n  # List of regexps of issue texts to exclude.\n  #\n  # But independently of this option we use default exclude patterns,\n  # it can be disabled by `exclude-use-default: false`.\n  # To list all excluded by default patterns execute `golangci-lint run --help`\n  #\n  # Default: https://golangci-lint.run/usage/false-positives/#default-exclusions\n  exclude:\n    - abcdef\n\n  # Excluding configuration per-path, per-linter, per-text and per-source\n  exclude-rules:\n    # Exclude some linters from running on tests files.\n    - path: _test\\.go\n      linters:\n        - gocyclo\n        - errcheck\n        - dupl\n        - gosec\n\n    # Run some linter only for test files by excluding its issues for everything else.\n    - path-except: _test\\.go\n      linters:\n        - forbidigo\n\n    # Exclude known linters from partially hard-vendored code,\n    # which is impossible to exclude via `nolint` comments.\n    # `/` will be replaced by current OS file path separator to properly work on Windows.\n    - path: internal/hmac/\n      text: \"weak cryptographic primitive\"\n      linters:\n        - gosec\n\n    # Exclude some `staticcheck` messages.\n    - linters:\n        - staticcheck\n      text: \"SA9003:\"\n\n    # Exclude `lll` issues for long lines with `go:generate`.\n    - linters:\n        - lll\n      source: \"^//go:generate \"\n\n  # Independently of option `exclude` we use default exclude patterns,\n  # it can be disabled by this option.\n  # To list all excluded by default patterns execute `golangci-lint run --help`.\n  # Default: true\n  exclude-use-default: false\n\n  # If set to true, `exclude` and `exclude-rules` regular expressions become case-sensitive.\n  # Default: false\n  exclude-case-sensitive: false\n\n  # Which dirs to exclude: issues from them won't be reported.\n  # Can use regexp here: `generated.*`, regexp is applied on full path,\n  # including the path prefix if one is set.\n  # Default dirs are skipped independently of this option's value (see exclude-dirs-use-default).\n  # \"/\" will be replaced by current OS file path separator to properly work on Windows.\n  # Default: []\n  exclude-dirs:\n    - src/external_libs\n    - autogenerated_by_my_lib\n\n  # Enables exclude of directories:\n  # - vendor$, third_party$, testdata$, examples$, Godeps$, builtin$\n  # Default: true\n  exclude-dirs-use-default: false\n\n  # Which files to exclude: they will be analyzed, but issues from them won't be reported.\n  # There is no need to include all autogenerated files,\n  # we confidently recognize autogenerated files.\n  # If it's not, please let us know.\n  # \"/\" will be replaced by current OS file path separator to properly work on Windows.\n  # Default: []\n  exclude-files:\n    - \".*\\\\.my\\\\.go$\"\n    - lib/bad.go\n\n  # Mode of the generated files analysis.\n  #\n  # - `strict`: sources are excluded by following strictly the Go generated file convention.\n  #    Source files that have lines matching only the following regular expression will be excluded: `^// Code generated .* DO NOT EDIT\\.$`\n  #    This line must appear before the first non-comment, non-blank text in the file.\n  #    https://go.dev/s/generatedcode\n  # - `lax`: sources are excluded if they contain lines `autogenerated file`, `code generated`, `do not edit`, etc.\n  # - `disable`: disable the generated files exclusion.\n  #\n  # Default: lax\n  exclude-generated: strict\n\n  # The list of ids of default excludes to include or disable.\n  # https://golangci-lint.run/usage/false-positives/#default-exclusions\n  # Default: []\n  include:\n    - EXC0001\n    - EXC0002\n    - EXC0003\n    - EXC0004\n    - EXC0005\n    - EXC0006\n    - EXC0007\n    - EXC0008\n    - EXC0009\n    - EXC0010\n    - EXC0011\n    - EXC0012\n    - EXC0013\n    - EXC0014\n    - EXC0015\n\n  # Maximum issues count per one linter.\n  # Set to 0 to disable.\n  # Default: 50\n  max-issues-per-linter: 0\n\n  # Maximum count of issues with the same text.\n  # Set to 0 to disable.\n  # Default: 3\n  max-same-issues: 0\n\n  # Make issues output unique by line.\n  # Default: true\n  uniq-by-line: false\n\n  # Show only new issues: if there are unstaged changes or untracked files,\n  # only those changes are analyzed, else only changes in HEAD~ are analyzed.\n  # It's a super-useful option for integration of golangci-lint into existing large codebase.\n  # It's not practical to fix all existing issues at the moment of integration:\n  # much better don't allow issues in new code.\n  #\n  # Default: false\n  new: true\n\n  # Show only new issues created after git revision `REV`.\n  # Default: \"\"\n  new-from-rev: HEAD\n\n  # Show only new issues created in git patch with set file path.\n  # Default: \"\"\n  new-from-patch: path/to/patch/file\n\n  # Show issues in any part of update files (requires new-from-rev or new-from-patch).\n  # Default: false\n  whole-files: true\n\n  # Fix found issues (if it's supported by the linter).\n  # Default: false\n  fix: true\n\n\n# output configuration options\noutput:\n  # The formats used to render issues.\n  # Formats:\n  # - `colored-line-number`\n  # - `line-number`\n  # - `json`\n  # - `colored-tab`\n  # - `tab`\n  # - `html`\n  # - `checkstyle`\n  # - `code-climate`\n  # - `junit-xml`\n  # - `junit-xml-extended`\n  # - `github-actions`\n  # - `teamcity`\n  # - `sarif`\n  # Output path can be either `stdout`, `stderr` or path to the file to write to.\n  #\n  # For the CLI flag (`--out-format`), multiple formats can be specified by separating them by comma.\n  # The output can be specified for each of them by separating format name and path by colon symbol.\n  # Example: \"--out-format=checkstyle:report.xml,json:stdout,colored-line-number\"\n  # The CLI flag (`--out-format`) override the configuration file.\n  #\n  # Default:\n  #   formats:\n  #     - format: colored-line-number\n  #       path: stdout\n  formats:\n    - format: json\n      path: stderr\n    - format: checkstyle\n      path: report.xml\n    - format: colored-line-number\n\n  # Print lines of code with issue.\n  # Default: true\n  print-issued-lines: false\n\n  # Print linter name in the end of issue text.\n  # Default: true\n  print-linter-name: false\n\n  # Add a prefix to the output file references.\n  # Default: \"\"\n  path-prefix: \"\"\n\n  # Sort results by the order defined in `sort-order`.\n  # Default: false\n  sort-results: true\n\n  # Order to use when sorting results.\n  # Require `sort-results` to `true`.\n  # Possible values: `file`, `linter`, and `severity`.\n  #\n  # If the severity values are inside the following list, they are ordered in this order:\n  #   1. error\n  #   2. warning\n  #   3. high\n  #   4. medium\n  #   5. low\n  # Either they are sorted alphabetically.\n  #\n  # Default: [\"file\"]\n  sort-order:\n    - linter\n    - severity\n    - file # filepath, line, and column.\n\n  # Show statistics per linter.\n  # Default: false\n  show-stats: true\n\n\n# Options for analysis running.\nrun:\n  # Timeout for analysis, e.g. 30s, 5m.\n  # If the value is lower or equal to 0, the timeout is disabled.\n  # Default: 1m\n  timeout: 5m\n\n  # Exit code when at least one issue was found.\n  # Default: 1\n  issues-exit-code: 2\n\n  # Include test files or not.\n  # Default: true\n  tests: false\n\n  # List of build tags, all linters use it.\n  # Default: []\n  build-tags:\n    - mytag\n\n  # If set, we pass it to \"go list -mod={option}\". From \"go help modules\":\n  # If invoked with -mod=readonly, the go command is disallowed from the implicit\n  # automatic updating of go.mod described above. Instead, it fails when any changes\n  # to go.mod are needed. This setting is most useful to check that go.mod does\n  # not need updates, such as in a continuous integration and testing system.\n  # If invoked with -mod=vendor, the go command assumes that the vendor\n  # directory holds the correct copies of dependencies and ignores\n  # the dependency descriptions in go.mod.\n  #\n  # Allowed values: readonly|vendor|mod\n  # Default: \"\"\n  modules-download-mode: readonly\n\n  # Allow multiple parallel golangci-lint instances running.\n  # If false, golangci-lint acquires file lock on start.\n  # Default: false\n  allow-parallel-runners: true\n\n  # Allow multiple golangci-lint instances running, but serialize them around a lock.\n  # If false, golangci-lint exits with an error if it fails to acquire file lock on start.\n  # Default: false\n  allow-serial-runners: true\n\n  # Define the Go version limit.\n  # Mainly related to generics support since go1.18.\n  # Default: use Go version from the go.mod file, fallback on the env var `GOVERSION`, fallback on 1.17\n  go: '1.19'\n\n  # Number of operating system threads (`GOMAXPROCS`) that can execute golangci-lint simultaneously.\n  # If it is explicitly set to 0 (i.e. not the default) then golangci-lint will automatically set the value to match Linux container CPU quota.\n  # Default: the number of logical CPUs in the machine\n  concurrency: 4\n\n\nseverity:\n  # Set the default severity for issues.\n  #\n  # If severity rules are defined and the issues do not match or no severity is provided to the rule\n  # this will be the default severity applied.\n  # Severities should match the supported severity names of the selected out format.\n  # - Code climate: https://docs.codeclimate.com/docs/issues#issue-severity\n  # - Checkstyle: https://checkstyle.sourceforge.io/property_types.html#SeverityLevel\n  # - GitHub: https://help.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-error-message\n  # - TeamCity: https://www.jetbrains.com/help/teamcity/service-messages.html#Inspection+Instance\n  #\n  # `@linter` can be used as severity value to keep the severity from linters (e.g. revive, gosec, ...)\n  #\n  # Default: \"\"\n  default-severity: error\n\n  # If set to true `severity-rules` regular expressions become case-sensitive.\n  # Default: false\n  case-sensitive: true\n\n  # When a list of severity rules are provided, severity information will be added to lint issues.\n  # Severity rules have the same filtering capability as exclude rules\n  # except you are allowed to specify one matcher per severity rule.\n  #\n  # `@linter` can be used as severity value to keep the severity from linters (e.g. revive, gosec, ...)\n  #\n  # Only affects out formats that support setting severity information.\n  #\n  # Default: []\n  rules:\n    - linters:\n        - dupl\n      severity: info\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 6.8701171875,
          "content": "# This configuration file is not a recommendation.\n#\n# We intentionally use a limited set of linters.\n# This configuration file is used with different version of golangci-lint to avoid regressions:\n# the linters can change between version,\n# their configuration may be not compatible or their reports can be different,\n# and this can break some of our tests.\n# Also, some linters are not relevant for the project (e.g. linters related to SQL).\n#\n# We have specific constraints, so we use a specific configuration.\n#\n# See the file `.golangci.reference.yml` to have a list of all available configuration options.\n\nlinters:\n  disable-all: true\n  # This list of linters is not a recommendation (same thing for all this configuration file).\n  # We intentionally use a limited set of linters.\n  # See the comment on top of this file.\n  enable:\n    - bodyclose\n    - copyloopvar\n    - depguard\n    - dogsled\n    - dupl\n    - errcheck\n    - errorlint\n    - funlen\n    - gocheckcompilerdirectives\n    - gochecknoinits\n    - gochecknoinits\n    - goconst\n    - gocritic\n    - gocyclo\n    - godox\n    - gofmt\n    - goimports\n    - mnd\n    - goprintffuncname\n    - gosec\n    - gosimple\n    - govet\n    - intrange\n    - ineffassign\n    - lll\n    - misspell\n    - nakedret\n    - noctx\n    - nolintlint\n    - revive\n    - staticcheck\n    - stylecheck\n    - testifylint\n    - unconvert\n    - unparam\n    - unused\n    - whitespace\n\n\nlinters-settings:\n  depguard:\n    rules:\n      logger:\n        deny:\n          # logging is allowed only by logutils.Log,\n          - pkg: \"github.com/sirupsen/logrus\"\n            desc: logging is allowed only by logutils.Log.\n          - pkg: \"github.com/pkg/errors\"\n            desc: Should be replaced by standard lib errors package.\n          - pkg: \"github.com/instana/testify\"\n            desc: It's a fork of github.com/stretchr/testify.\n        files:\n          # logrus is allowed to use only in logutils package.\n          - \"!**/pkg/logutils/**.go\"\n  dupl:\n    threshold: 100\n  funlen:\n    lines: -1 # the number of lines (code + empty lines) is not a right metric and leads to code without empty line or one-liner.\n    statements: 50\n  goconst:\n    min-len: 2\n    min-occurrences: 3\n  gocritic:\n    enabled-tags:\n      - diagnostic\n      - experimental\n      - opinionated\n      - performance\n      - style\n    disabled-checks:\n      - dupImport # https://github.com/go-critic/go-critic/issues/845\n      - ifElseChain\n      - octalLiteral\n      - whyNoLint\n  gocyclo:\n    min-complexity: 15\n  godox:\n    keywords:\n      - FIXME\n  gofmt:\n    rewrite-rules:\n      - pattern: 'interface{}'\n        replacement: 'any'\n  goimports:\n    local-prefixes: github.com/golangci/golangci-lint\n  mnd:\n    # don't include the \"operation\" and \"assign\"\n    checks:\n      - argument\n      - case\n      - condition\n      - return\n    ignored-numbers:\n      - '0'\n      - '1'\n      - '2'\n      - '3'\n    ignored-functions:\n      - strings.SplitN\n  govet:\n    settings:\n      printf:\n        funcs:\n          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof\n          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf\n          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf\n          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf\n    enable:\n      - nilness\n      - shadow\n  errorlint:\n    asserts: false\n  lll:\n    line-length: 140\n  misspell:\n    locale: US\n    ignore-words:\n      - \"importas\" # linter name\n  nolintlint:\n    allow-unused: false # report any unused nolint directives\n    require-explanation: true # require an explanation for nolint directives\n    require-specific: true # require nolint directives to be specific about which linter is being skipped\n  revive:\n    rules:\n      - name: indent-error-flow\n      - name: unexported-return\n        disabled: true\n      - name: unused-parameter\n      - name: unused-receiver\n\nissues:\n  exclude-rules:\n    - path: (.+)_test\\.go\n      linters:\n        - dupl\n        - mnd\n        - lll\n\n    # The logic of creating a linter is similar between linters, it's not duplication.\n    - path: pkg/golinters\n      linters:\n        - dupl\n\n    # Deprecated configuration options.\n    - path: pkg/commands/run.go\n      linters: [staticcheck]\n      text: \"SA1019: c.cfg.Run.ShowStats is deprecated: use Output.ShowStats instead.\"\n\n    # Deprecated linter options.\n    - path: pkg/golinters/errcheck/errcheck.go\n      linters: [staticcheck]\n      text: \"SA1019: errCfg.Exclude is deprecated: use ExcludeFunctions instead\"\n    - path: pkg/golinters/errcheck/errcheck.go\n      linters: [staticcheck]\n      text: \"SA1019: errCfg.Ignore is deprecated: use ExcludeFunctions instead\"\n    - path: pkg/golinters/govet/govet.go\n      linters: [staticcheck]\n      text: \"SA1019: cfg.CheckShadowing is deprecated: the linter should be enabled inside Enable.\"\n    - path: pkg/golinters/godot/godot.go\n      linters: [staticcheck]\n      text: \"SA1019: settings.CheckAll is deprecated: use Scope instead\"\n    - path: pkg/goformatters/gci/gci.go\n      linters: [staticcheck]\n      text: \"SA1019: settings.LocalPrefixes is deprecated: use Sections instead.\"\n    - path: pkg/golinters/mnd/mnd.go\n      linters: [staticcheck]\n      text: \"SA1019: settings.Settings is deprecated: use root level settings instead.\"\n    - path: pkg/golinters/mnd/mnd.go\n      linters: [staticcheck]\n      text: \"SA1019: config.GoMndSettings is deprecated: use MndSettings.\"\n\n    # Related to `run.go`, it cannot be removed.\n    - path: pkg/golinters/gofumpt/gofumpt.go\n      linters: [staticcheck]\n      text: \"SA1019: settings.LangVersion is deprecated: use the global `run.go` instead.\"\n    - path: pkg/golinters/internal/staticcheck_common.go\n      linters: [staticcheck]\n      text: \"SA1019: settings.GoVersion is deprecated: use the global `run.go` instead.\"\n    - path: pkg/lint/lintersdb/manager.go\n      linters: [staticcheck]\n      text: \"SA1019: (.+).(GoVersion|LangVersion) is deprecated: use the global `run.go` instead.\"\n\n    # Based on existing code, the modifications should be limited to make maintenance easier.\n    - path: pkg/golinters/unused/unused.go\n      linters: [gocritic]\n      text: \"rangeValCopy: each iteration copies 160 bytes \\\\(consider pointers or indexing\\\\)\"\n\n    # Related to file sizes.\n    - path: pkg/goanalysis/runner_loadingpackage.go\n      linters: [gosec]\n      text: \"G115: integer overflow conversion uintptr -> int\"\n\n    # Related to PID.\n    - path: test/bench/bench_test.go\n      linters: [gosec]\n      text: \"G115: integer overflow conversion int -> int32\"\n\n    # Related to the result of computation but divided multiple times by 1024.\n    - path: test/bench/bench_test.go\n      linters: [gosec]\n      text: \"G115: integer overflow conversion uint64 -> int\"\n\n  exclude-dirs:\n    - test/testdata_etc # test files\n    - internal/go # extracted from Go code\n    - internal/x # extracted from x/tools code\n  exclude-files:\n    - pkg/goanalysis/runner_checker.go # extracted from x/tools code\n\nrun:\n  timeout: 5m\n"
        },
        {
          "name": ".goreleaser.yml",
          "type": "blob",
          "size": 13.5947265625,
          "content": "version: 2\n\nproject_name: golangci-lint\n\nbuilds:\n  - binary: golangci-lint\n    main: ./cmd/golangci-lint/\n    flags:\n      - -trimpath\n    ldflags: -s -w -X main.version={{.Version}} -X main.commit={{.ShortCommit}} -X main.date={{.Date}}\n    env:\n      - CGO_ENABLED=0\n    goos:\n      - darwin\n      - windows\n      - linux\n      - freebsd\n      - netbsd\n      - illumos\n    goarch:\n      - amd64\n      - arm64\n      - arm\n      - 386\n      - ppc64le\n      - s390x\n      - mips64\n      - mips64le\n      - riscv64\n      - loong64\n    goarm:\n      - 6\n      - 7\n    gomips:\n      - hardfloat\n    ignore:\n      - goos: darwin\n        goarch: 386\n      - goos: freebsd\n        goarch: arm64\n\narchives:\n  - format: tar.gz\n    wrap_in_directory: true\n    format_overrides:\n      - goos: windows\n        format: zip\n    name_template: '{{ .ProjectName }}-{{ .Version }}-{{ .Os }}-{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}'\n    files:\n      - LICENSE\n      - README.md\n\nsnapshot:\n  version_template: SNAPSHOT-{{ .Commit }}\n\nchecksum:\n  disable: false\n  name_template: '{{ .ProjectName }}-{{ .Version }}-checksums.txt'\n\nchangelog:\n  sort: asc\n  filters:\n    exclude:\n      - '(?i)^docs?:'\n      - '(?i)^docs\\([^:]+\\):'\n      - '(?i)^docs\\[[^:]+\\]:'\n      - '^tests?:'\n      - '(?i)^dev:'\n      - '(?i)^chore:'\n      - '^build\\(deps\\): bump .* in /docs \\(#\\d+\\)'\n      - '^build\\(deps\\): bump .* in /\\.github/peril \\(#\\d+\\)'\n      - '^build\\(deps\\): bump .* in /scripts/gen_github_action_config \\(#\\d+\\)'\n      - Merge pull request\n      - Merge branch\n\nrelease:\n  skip_upload: false\n  github:\n    owner: golangci\n    name: golangci-lint\n  header: |\n    `golangci-lint` is a free and open-source project built by volunteers.\n\n    If you value it, consider supporting us, the [maintainers](https://opencollective.com/golangci-lint) and [linter authors](https://golangci-lint.run/product/thanks/).\n\n    We appreciate it! :heart:\n\n    For key updates, see the [changelog](https://golangci-lint.run/product/changelog/#{{ .Major }}{{ .Minor }}{{ .Patch }}).\n\nsource:\n  enabled: true\n  name_template: '{{ .ProjectName }}-{{ .Version }}-source'\n\nbrews:\n  - description: Fast linters runner for Go.\n    homepage: https://golangci.com\n    skip_upload: false\n    repository:\n      owner: golangci\n      name: homebrew-tap\n    commit_author:\n      name: golangci-releaser\n      email: 65486276+golangci-releaser@users.noreply.github.com\n    directory: Formula\n    install: |\n      bin.install \"golangci-lint\"\n      output = Utils.popen_read(\"#{bin}/golangci-lint completion bash\")\n      (bash_completion/\"golangci-lint\").write output\n      output = Utils.popen_read(\"#{bin}/golangci-lint completion zsh\")\n      (zsh_completion/\"_golangci-lint\").write output\n      output = Utils.popen_read(\"#{bin}/golangci-lint completion fish\")\n      (fish_completion/\"golangci-lint.fish\").write output\n      prefix.install_metafiles\n    test: |\n      system \"#{bin}/golangci-lint --version\"\n\nchocolateys:\n  - summary: Fast linters Runner for Go\n    description: |\n      {{ .ProjectName }} installer package.\n      Fast linters Runner for Go.\n    project_url: https://golangci-lint.run\n    skip_publish: false\n    name: golangci-lint\n    title: Golangci-lint\n    owners: golangci\n    authors: golangci\n    copyright: 2024 GolangCI\n    url_template: \"https://github.com/golangci/golangci-lint/releases/download/{{ .Tag }}/{{ .ArtifactName }}\"\n    icon_url: \"https://cdn.rawgit.com/golangci/golangci-lint/master/assets/go.png\"\n    license_url: https://github.com/golangci/golangci-lint/blob/master/LICENSE\n    require_license_acceptance: false\n    project_source_url: https://github.com/golangci/golangci-lint\n    package_source_url: https://github.com/golangci/golangci-lint\n    docs_url: https://golangci-lint.run\n    bug_tracker_url: https://github.com/golangci/golangci-lint/issues\n    tags: \"go golang lint linter\"\n    release_notes: \"https://github.com/golangci/golangci-lint/releases/tag/v{{ .Version }}\"\n    api_key: \"{{ .Env.CHOCOLATEY_API_KEY }}\"\n    source_repo: \"https://push.chocolatey.org/\"\n    goamd64: v1\n\naurs:\n  - description: Fast linters runner for Go.\n    skip_upload: false\n    homepage: https://golangci.com\n    provides:\n      - \"golangci-lint-bin\"\n    maintainers:\n      - \"Fernandez Ludovic <lfernandez dot dev at gmail dot com>\"\n    license: GPL-3.0\n    private_key: \"{{ .Env.AUR_KEY }}\"\n    git_url: \"ssh://aur@aur.archlinux.org/golangci-lint-bin.git\"\n    commit_author:\n      name: golangci-releaser\n      email: 65486276+golangci-releaser@users.noreply.github.com\n    package: |-\n      local x86_64=amd64 i686=386 aarch64=arm64 armv6h=armv6 armv7h=armv7\n      cd \"golangci-lint-${pkgver}-linux-${!CARCH}\"\n      \n      # bin\n      install -Dm755 \"./golangci-lint\" \"${pkgdir}/usr/bin/golangci-lint\"\n\n      # license\n      install -Dm644 \"./LICENSE\" \"${pkgdir}/usr/share/licenses/golangci-lint/LICENSE\"\n\n      # completions\n      mkdir -p \"${pkgdir}/usr/share/bash-completion/completions/\"\n      mkdir -p \"${pkgdir}/usr/share/zsh/site-functions/\"\n      mkdir -p \"${pkgdir}/usr/share/fish/vendor_completions.d/\"\n      ./golangci-lint completion bash | install -Dm644 /dev/stdin \"${pkgdir}/usr/share/bash-completion/completions/golangci-lint\"\n      ./golangci-lint completion zsh | install -Dm644 /dev/stdin \"${pkgdir}/usr/share/zsh/site-functions/_golangci-lint\"\n      ./golangci-lint completion fish | install -Dm644 /dev/stdin \"${pkgdir}/usr/share/fish/vendor_completions.d/golangci-lint.fish\"\n\naur_sources:\n  - description: Fast linters runner for Go.\n    skip_upload: false\n    homepage: https://golangci.com\n    provides:\n      - \"golangci-lint\"\n    maintainers:\n      - \"Fernandez Ludovic <lfernandez dot dev at gmail dot com>\"\n    license: GPL-3.0\n    private_key: \"{{ .Env.AUR_KEY }}\"\n    git_url: \"ssh://aur@aur.archlinux.org/golangci-lint.git\"\n    commit_author:\n      name: golangci-releaser\n      email: 65486276+golangci-releaser@users.noreply.github.com\n    build: |-\n      local _commit _flags\n      _commit=$(bsdcat \"${pkgname}_${pkgver}.tar.gz\" | git get-tar-commit-id)\n      _flags=(\n        -X=main.version=\"$pkgver\"\n        -X=main.commit=\"${_commit::7}\"\n        -X=main.date=\"$(date -u -d \"@${SOURCE_DATE_EPOCH}\" +'%FT%TZ')\"\n        -linkmode=external\n      )\n      export CGO_ENABLED=1\n      export CGO_CFLAGS=\"${CFLAGS}\"\n      export CGO_CPPFLAGS=\"$CPPFLAGS\"\n      export CGO_CXXFLAGS=\"$CXXFLAGS\"\n      export CGO_LDFLAGS=\"${LDFLAGS}\"\n      export GOFLAGS='-buildmode=pie -trimpath -modcacherw'\n            \n      go build -o \"$pkgname\" -ldflags=\"${_flags[*]}\" ./cmd/\"$pkgname\"\n      ./\"$pkgname\" completion bash > completion.bash\n      ./\"$pkgname\" completion zsh > completion.zsh\n      ./\"$pkgname\" completion fish > completion.fish\n    package: |-\n      install -Dm755 \"$pkgname\" -t \"$pkgdir\"/usr/bin\n      install -Dm644 completion.bash \"$pkgdir\"/usr/share/bash-completion/completions/\"$pkgname\"\n      install -Dm644 completion.zsh \"$pkgdir\"/usr/share/zsh/site-functions/_\"$pkgname\"\n      install -Dm644 completion.fish \"$pkgdir\"/usr/share/fish/vendor_completions.d/\"$pkgname\".fish\n\nsnapcrafts:\n  - summary: Fast linters runner for Go.\n    description: |\n      It runs linters in parallel, uses caching, supports YAML configuration, integrates with all major IDEs, and includes over a hundred linters.\n    disable: false\n    publish: true\n    name_template: \"{{ .ProjectName }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\"\n    grade: stable\n    confinement: classic\n    license: GPL-3.0\n    base: core22\n\nnfpms:\n  - description: Fast linters Runner for Go\n    homepage: https://golangci-lint.run/\n    id: golangci-lint-nfpms\n    package_name: golangci-lint\n    file_name_template: \"{{ .ProjectName }}-{{ .Version }}-{{ .Os }}-{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}\"\n    maintainer: \"Golangci-lint Maintainers <65486276+golangci-releaser@users.noreply.github.com>\"\n    license: GPLv3\n    vendor: golangci\n    section: golang\n    formats:\n      - deb\n      - rpm\n    umask: 0o022\n    overrides:\n      deb:\n        contents:\n          - src: LICENSE\n            dst: /usr/share/doc/golangci-lint/copyright\n          - src: README.md\n            dst: /usr/share/doc/golangci-lint/README.md\n        recommends:\n          - golang-go\n      rpm:\n        contents:\n          - src: LICENSE\n            dst: /usr/share/doc/golangci-lint/LICENSE\n            type: license\n          - src: README.md\n            dst: /usr/share/doc/golangci-lint/README.md\n            type: readme\n        recommends:\n          - /usr/bin/go\n    rpm:\n      group: Development/Tools\n\ndocker_manifests:\n  # basic\n  - name_template: 'golangci/golangci-lint:latest'\n    image_templates:\n      - 'golangci/golangci-lint:{{ .Tag }}-amd64'\n      - 'golangci/golangci-lint:{{ .Tag }}-arm64'\n\n  - name_template: 'golangci/golangci-lint:v{{ .Major }}.{{ .Minor }}'\n    image_templates:\n      - 'golangci/golangci-lint:v{{ .Major }}.{{ .Minor }}-amd64'\n      - 'golangci/golangci-lint:v{{ .Major }}.{{ .Minor }}-arm64'\n\n  - name_template: 'golangci/golangci-lint:{{ .Tag }}'\n    image_templates:\n      - 'golangci/golangci-lint:{{ .Tag }}-amd64'\n      - 'golangci/golangci-lint:{{ .Tag }}-arm64'\n\n  # alpine\n  - name_template: 'golangci/golangci-lint:latest-alpine'\n    image_templates:\n      - 'golangci/golangci-lint:{{ .Tag }}-alpine-amd64'\n      - 'golangci/golangci-lint:{{ .Tag }}-alpine-arm64'\n\n  - name_template: 'golangci/golangci-lint:v{{ .Major }}.{{ .Minor }}-alpine'\n    image_templates:\n      - 'golangci/golangci-lint:v{{ .Major }}.{{ .Minor }}-alpine-amd64'\n      - 'golangci/golangci-lint:v{{ .Major }}.{{ .Minor }}-alpine-arm64'\n\n  - name_template: 'golangci/golangci-lint:{{ .Tag }}-alpine'\n    image_templates:\n      - 'golangci/golangci-lint:{{ .Tag }}-alpine-amd64'\n      - 'golangci/golangci-lint:{{ .Tag }}-alpine-arm64'\n\ndockers:\n  - use: buildx\n    skip_push: false\n    goos: linux\n    goarch: amd64\n    dockerfile: build/buildx.Dockerfile\n    image_templates:\n      - 'golangci/golangci-lint:latest-amd64'\n      - 'golangci/golangci-lint:{{ .Tag }}-amd64'\n      - 'golangci/golangci-lint:v{{ .Major }}.{{ .Minor }}-amd64'\n    build_flag_templates:\n      - '--pull'\n      # https://github.com/opencontainers/image-spec/blob/main/annotations.md#pre-defined-annotation-keys\n      - '--label=org.opencontainers.image.title={{.ProjectName}}'\n      - '--label=org.opencontainers.image.description=Fast linters Runner for Go'\n      - '--label=org.opencontainers.image.source={{.GitURL}}'\n      - '--label=org.opencontainers.image.url={{.GitURL}}'\n      - '--label=org.opencontainers.image.documentation=https://golangci-lint.run'\n      - '--label=org.opencontainers.image.created={{.Date}}'\n      - '--label=org.opencontainers.image.revision={{.FullCommit}}'\n      - '--label=org.opencontainers.image.version={{.Version}}'\n      - '--platform=linux/amd64'\n\n  - use: buildx\n    goos: linux\n    goarch: arm64\n    dockerfile: build/buildx.Dockerfile\n    image_templates:\n      - 'golangci/golangci-lint:latest-arm64'\n      - 'golangci/golangci-lint:{{ .Tag }}-arm64'\n      - 'golangci/golangci-lint:v{{ .Major }}.{{ .Minor }}-arm64'\n    build_flag_templates:\n      - '--pull'\n      # https://github.com/opencontainers/image-spec/blob/main/annotations.md#pre-defined-annotation-keys\n      - '--label=org.opencontainers.image.title={{.ProjectName}}'\n      - '--label=org.opencontainers.image.description=Fast linters Runner for Go'\n      - '--label=org.opencontainers.image.source={{.GitURL}}'\n      - '--label=org.opencontainers.image.url={{.GitURL}}'\n      - '--label=org.opencontainers.image.documentation=https://golangci-lint.run'\n      - '--label=org.opencontainers.image.created={{.Date}}'\n      - '--label=org.opencontainers.image.revision={{.FullCommit}}'\n      - '--label=org.opencontainers.image.version={{.Version}}'\n      - '--platform=linux/arm64'\n\n  - use: buildx\n    goos: linux\n    goarch: amd64\n    dockerfile: build/buildx-alpine.Dockerfile\n    image_templates:\n      - 'golangci/golangci-lint:latest-alpine-amd64'\n      - 'golangci/golangci-lint:{{ .Tag }}-alpine-amd64'\n      - 'golangci/golangci-lint:v{{ .Major }}.{{ .Minor }}-alpine-amd64'\n    build_flag_templates:\n      - '--pull'\n      # https://github.com/opencontainers/image-spec/blob/main/annotations.md#pre-defined-annotation-keys\n      - '--label=org.opencontainers.image.title={{.ProjectName}}'\n      - '--label=org.opencontainers.image.description=Fast linters Runner for Go'\n      - '--label=org.opencontainers.image.source={{.GitURL}}'\n      - '--label=org.opencontainers.image.url={{.GitURL}}'\n      - '--label=org.opencontainers.image.documentation=https://golangci-lint.run'\n      - '--label=org.opencontainers.image.created={{.Date}}'\n      - '--label=org.opencontainers.image.revision={{.FullCommit}}'\n      - '--label=org.opencontainers.image.version={{.Version}}'\n      - '--platform=linux/amd64'\n\n  - use: buildx\n    goos: linux\n    goarch: arm64\n    dockerfile: build/buildx-alpine.Dockerfile\n    image_templates:\n      - 'golangci/golangci-lint:latest-alpine-arm64'\n      - 'golangci/golangci-lint:{{ .Tag }}-alpine-arm64'\n      - 'golangci/golangci-lint:v{{ .Major }}.{{ .Minor }}-alpine-arm64'\n    build_flag_templates:\n      - '--pull'\n      # https://github.com/opencontainers/image-spec/blob/main/annotations.md#pre-defined-annotation-keys\n      - '--label=org.opencontainers.image.title={{.ProjectName}}'\n      - '--label=org.opencontainers.image.description=Fast linters Runner for Go'\n      - '--label=org.opencontainers.image.source={{.GitURL}}'\n      - '--label=org.opencontainers.image.url={{.GitURL}}'\n      - '--label=org.opencontainers.image.documentation=https://golangci-lint.run'\n      - '--label=org.opencontainers.image.created={{.Date}}'\n      - '--label=org.opencontainers.image.revision={{.FullCommit}}'\n      - '--label=org.opencontainers.image.version={{.Version}}'\n      - '--platform=linux/arm64'\n"
        },
        {
          "name": ".pre-commit-hooks.yaml",
          "type": "blob",
          "size": 0.841796875,
          "content": "- id: golangci-lint\n  name: golangci-lint\n  description: Fast linters runner for Go. Note that only modified files are linted, so linters like 'unused' that need to scan all files won't work as expected.\n  entry: golangci-lint run --new-from-rev HEAD --fix\n  types: [go]\n  language: golang\n  require_serial: true\n  pass_filenames: false\n- id: golangci-lint-full\n  name: golangci-lint-full\n  description: Fast linters runner for Go. Runs on all files in the repo. Use this hook if you use pre-commit in CI.\n  entry: golangci-lint run --fix\n  types: [go]\n  language: golang\n  require_serial: true\n  pass_filenames: false\n- id: golangci-lint-config-verify\n  name: golangci-lint-config-verify\n  description: Verifies the configuration file\n  entry: golangci-lint config verify\n  files: '\\.golangci\\.(?:yml|yaml|toml|json)'\n  language: golang\n  pass_filenames: false\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 59.9931640625,
          "content": "Follow the news and releases on [Mastodon](https://fosstodon.org/@golangcilint) and on [Bluesky](https://bsky.app/profile/golangci-lint.run).\n\n`golangci-lint` is a free and open-source project built by volunteers.\n\nIf you value it, consider supporting us, we appreciate it! ❤️\n\n[![Open Collective backers and sponsors](https://img.shields.io/badge/OpenCollective-Donate-blue?logo=opencollective&style=for-the-badge)](https://opencollective.com/golangci-lint)\n[![GitHub Sponsors](https://img.shields.io/badge/GitHub-Donate-blue?logo=github&style=for-the-badge)](https://github.com/sponsors/golangci)\n\n### v1.63.4\n\n1. Linters bug fixes\n   * `dupl`, `gomodguard`, `revive`: keep only Go-files.\n\n### v1.63.3\n\n1. Linters bug fixes\n   * `gofmt`, `gofumpt`, `goimports`, `gci`: panic with several trailing EOL\n   * `goheader`: skip issues with invalid positions\n\n### v1.63.2\n\n1. Linters bug fixes\n   * `gofmt`, `gofumpt`, `goimports`, `gci`: panic with missing trailing EOL\n\n### v1.63.1\n\n1. Linters bug fixes\n   * `cgi`: invalid reports with cgo\n   * `gofumpt`: panic with autofix and cgo\n\n### v1.63.0\n\n1. Enhancements\n   * Add support for SuggestedFixes 🎉 (35 linters can \"autofix\" reports).\n   * Formatters (`gofmt`, `goimports`, `gofumpt`, `gci`) are applied after the suggested fixes.\n2. New linters\n   * Add `exptostd` linter https://github.com/ldez/exptostd\n   * Add `nilnesserr` linter https://github.com/alingse/nilnesserr\n   * Add `usetesting` linter https://github.com/ldez/usetesting\n3. Linters new features\n   * `gci`: new options: `no-inline-comments`, `no-prefix-comments`\n   * `gomoddirectives`: from 0.2.4 to 0.6.0 (new options: `go-version-pattern`, `toolchain-pattern`,`toolchain-forbidden`, `tool-forbidden`, `go-debug-forbidden`)\n   * `govet`: new `stdversion`, `waitgroup` analyzers\n   * `importas`: allow multiple empty aliases\n   * `loggercheck`: new `slog` option\n   * `recvcheck`: from 0.1.2 to 0.2.0 (new options: `disable-builtin`, `exclusions`)\n   * `tagliatelle`: from 0.5.0 to 0.7.1 (new options: `ignored-fields`, `extended-rules`,`overrides`, `pkg`, `ignore`)\n   * `usestdlibvars`: from 1.27.0 to 1.28.0 (autofix)\n   * `wrapcheck`: from 2.9.0 to 2.10.0 (new option: `extra-ignore-sigs`)\n4. Linters bug fixes\n   * `asciicheck`: from 0.2.0 to 0.3.0\n   * `bodyclose`: from 574207250966 to ed6a65f985e\n   * `funlen`: from 0.1.0 to 0.2.0\n   * `ginkgolinter`: from 0.18.3 to 0.18.4\n   * `gochecksumtype`: from 0.2.0 to 0.3.1\n   * `gocognit`: from 1.1.3 to 1.2.0\n   * `godot`: from 1.4.18 to 1.4.20\n   * `goheader`: report position improvement\n   * `gosec`: handling of global nosec option when it is false\n   * `iface`: from 1.2.1 to 1.3.0\n   * `importas`: from 0.1.0 to 0.2.0\n   * `intrange`: from 0.2.1 to 0.3.0\n   * `makezero`: from 1.1.1 to 1.2.0\n   * `mirror`: from 1.2.0 to 1.3.0\n   * `nilnil`: from 1.0.0 to 1.0.1\n   * `nosprintfhostport`: from 0.1.1 to 0.2.0\n   * `reassign`: from 0.2.0 to 0.3.0\n   * `spancheck`: from 0.6.2 to 0.6.4\n   * `tagalign`: from 1.3.4 to 1.4.1\n   * `wastedassign`: from 2.0.7 to 2.1.0\n   * `whitespace`: from 0.1.1 to 0.2.0\n   * `wsl`: from 4.4.1 to 4.5.0\n5. Deprecations\n   * ⚠️ `output.uniq-by-line` is deprecated and replaced by `issues.uniq-by-line`.\n6. Misc.\n   * Improvements of the help command (color and JSON support).\n   * Removes `decoder`, `sloglint`, `tagalin` from `format` preset.\n   * Enables paths with junction inside Windows.\n   * The timeout is disabled if `run.timeout` <= 0.\n\n### v1.62.2\n\n1. Linters bug fixes\n   * `fatcontext`: from 0.5.2 to 0.5.3\n   * `ginkgolinter`: from 0.18.0 to 0.18.3\n   * `errorlint`: from 1.6.0 to 1.7.0\n   * `iface`: from 1.2.0 to 1.2.1\n   * `revive`: from 1.5.0 to 1.5.1\n   * `testifylint`: from 1.5.0 to 1.5.2\n2. Misc.\n   * fix: ignore cache error when file not found\n\n### v1.62.1\n\nCancelled due to CI failure.\n\n### v1.62.0\n\n1. New linters\n   * Add `recvcheck` linter https://github.com/raeperd/recvcheck\n   * Add `iface` linter https://github.com/uudashr/iface\n2. Linters new features\n   * `ginkgolinter`: from 0.17.0 to 0.18.0 (new option: `force-succeed`)\n   * `gochecksumtype`: from 0.1.4 to 0.2.0 (new option: `default-signifies-exhaustive`)\n   * `loggercheck`: from 0.9.4 to 0.10.1 (`log/slog` support)\n   * `nilnil`: from 0.1.9 to 1.0.0 (new option: `detect-opposite`)\n   * `revive`: from 1.3.9 to 1.5.0 (new rules: `filename-format`, and `file-length-limit`)\n   * `tenv`: from 1.10.0 to 1.12.1 (handle dot import)\n   * `testifylint`: from 1.4.3 to 1.5.0 (new checkers: `contains`, `encoded-compare`, `regexp`)\n3. Linters bug fixes\n   * `bidichk`: from 0.2.7 to 0.3.2 (important performance improvement)\n   * `canonicalheader`: from 1.1.1 to 1.1.2\n   * `cyclop`: from 1.2.1 to 1.2.3\n   * `dupword`: from 0.1.1 to 0.1.3\n   * `errcheck`: from 1.7.0 to 1.8.0\n   * `errchkjson`: from 0.3.6 to 0.4.0\n   * `errname`: from 0.1.13 to 1.0.0\n   * `gocritic`: from 0.11.4 to 0.11.5\n   * `goprintffuncname`: from 7558a9eaa5af to v0.1.0\n   * `godot`: from 1.4.17 to 1.4.18\n   * `gosec`: from 2.21.2 to 2.21.4\n   * `intrange`: from 0.2.0 to 0.2.1\n   * `musttag`: from 0.12.2 to 0.13.0\n   * `nakedret`: from 2.0.4 to 2.0.5\n   * `noctx`: from 0.0.2 to 0.1.0\n   * `protogetter`: from 0.3.6 to 0.3.8\n4. Deprecations\n   * ⚠️ `execinquery`: deprecation step 2\n   * ⚠️ `gomnd`: deprecation step 2 (replaced by `mnd`)\n5. Misc.\n   * Type sizing when cross-compiling (32-bit).\n   * code-climate: add check_name field\n   * Improve Go version detection\n   * Fix Go version propagation\n6. Documentation\n   * Adds a section about `exclude-dirs-use-default`\n   * Improve 'install from sources' section\n   * Improve FAQ about Go versions\n   * Improve linter/rule/check docs\n   * Improve new linter section\n   * Improve `forbidigo` pattern examples for built-in functions\n\n### v1.61.0\n\n1. Enhancements\n   * Add `junit-xml-extended` format\n   * Exclude Swagger Codegen files by default\n2. Linters new features\n   * `gci`: from 0.13.4 to 0.13.5 (new option `no-lex-order`)\n   * `nolintlint`: remove the empty line in the directive replacement\n3. Linters bug fixes\n   * `dupword`: from 0.0.14 to 0.1.1\n   * `fatcontext`: from 0.4.0 to 0.5.2\n   * `go-ruleguard`: from 0.4.2 to 0fe6f58b47b1 (fix panic with custom linters)\n   * `godot`: from 1.4.16 to 1.4.17\n   * `gomodguard`: from 1.3.3 to 1.3.5\n   * `gosec`: disable temporarily `G407`\n   * `gosec`: from ab3f6c1c83a0 to 2.21.2 (partially fix `G115`)\n   * `intrange`: from 0.1.2 to 0.2.0\n4. Misc.\n    * Improve runtime version parsing\n5. Documentation\n    * Add additional info about `typecheck`\n\n### v1.60.3\n\n1. Updated linters\n   * `gosec`: from 81cda2f91fbe to ab3f6c1c83a0 (fix `G115` false positives)\n2. Misc.\n   * Check that the Go version use to build is greater or equals to the Go version of the project\n\n### v1.60.2\n\n1. Linters new features\n   * `gosec`: from 5f0084eb01a9 to 81cda2f91fbe (adds `G115`, `G405`, `G406`, `G506`, `G507`)\n2. Linters bug fixes\n   * `gofmt`: update to HEAD (go1.22)\n   * `gofumpt`: from 0.6.0 to 0.7.0\n   * `gosec`: fix G602 analyzer\n   * `staticcheck`: from 0.5.0 to 0.5.1\n   * `staticcheck`: propagate Go version\n   * `wrapcheck`: from 2.8.3 to 2.9.0\n3. Deprecations\n   * ⚠️ `exportloopref`: deprecation\n\n### v1.60.1\n\n1. Misc.\n   * 🎉 go1.23 support\n2. Linters new features\n   * `exhaustruct`: from 3.2.0 to 3.3.0 (recognize custom error values in return)\n   * `govet` (`printf`): report non-constant format, no args\n   * `lll`: advertise max line length instead of just reporting failure\n   * `revive`: from 1.3.7 to 1.3.9 (new rule: `comments-density`)\n   * `staticcheck`: from 0.4.7 to 0.5.0\n   * `testifylint`: from 1.3.1 to 1.4.3 (new options: `formatter`, `suite-broken-parallel`, `suite-subtest-run`)\n3. Linters bug fixes\n   * `errorlint`: from 1.5.2 to 1.6.0\n   * `fatcontext`: from 0.2.2 to 0.4.0 (fix false positives for context stored in structs)\n   * `gocognit`: from 1.1.2 to 1.1.3\n   * `gomodguard`: from 1.3.2 to 1.3.3\n   * `sloglint`: from 0.7.1 to 0.7.2\n   * `spancheck`: from 0.6.1 to 0.6.2\n   * `tenv`: from 1.7.1 to 1.10.0 (remove reports on fuzzing)\n   * `tparallel`: from 0.3.1 to 0.3.2\n   * `usestdlibvars`: from 1.26.0 to 1.27.0 (fix false-positive with number used inside a mathematical operations)\n   * `wsl`: from 4.2.1 to 4.4.1\n4. Deprecations\n   * ️⚠️ `unused`: remove `exported-is-used` option\n5. Fixes\n   * SARIF: sanitize level property\n   * ️⚠️ `typecheck` issues should never be ignored\n6. Documentation\n   * Add link on linter without configuration\n   * Remove 'trusted by' page\n   * `wsl` update documentation of the configuration\n\n### v1.60.0\n\nCancelled due to a CI problem.\n\n### v1.59.1\n\n1. Updated linters\n   * `errorlint`: from 1.5.1 to 1.5.2\n   * `gomnd`: deprecated configuration compatibility\n   * `intrange`: add `style` preset\n   * `misspell`: from 0.5.1 to 0.6.0\n   * `sloglint`: from 0.7.0 to 0.7.1\n   * `testifylint`: from 1.3.0 to 1.3.1\n   * `unparam`: bump to HEAD\n   * `usestdlibvars`: from 1.25.0 to 1.26.0\n2. Fixes\n   * SARIF: init empty result slice\n   * SARIF: issue column >= 1\n3. Documentation\n   * `revive`: update documentation of the configuration\n\n### v1.59.0\n\n1. Enhancements\n   * Add SARIF output format\n   * Allow the analysis of generated files (`issues.exclude-generated: disable`)\n2. Updated linters\n   * `errcheck`: fix deprecation warning\n   * `gocritic`: from 0.11.3 to 0.11.4\n   * `gosec`: from 2.20.0 to 5f0084eb01a9 (fix G601 and G113 performance issues)\n   * `sloglint`: from 0.6.0 to 0.7.0 (new option `forbidden-keys`)\n   * `testifylint`: from 1.2.0 to 1.3.0 (new checker `negative-positive` and new option `go-require.ignore-http-handlers`)\n3. Misc.\n   * ️️⚠️ Deprecate `github-action` output format\n   * ️️⚠️ Deprecate `issues.exclude-generated-strict` option (replaced by `issues.exclude-generated: strict`)\n   * ️️⚠️ Add warning about disabled and deprecated linters (level 2)\n\n### v1.58.2\n\n1. Updated linters\n   * `canonicalheader`: from 1.0.6 to 1.1.1\n   * `gosec`: from 2.19.0 to 2.20.0\n   * `musttag`: from 0.12.1 to 0.12.2\n   * `nilnil`: from 0.1.8 to 0.1.9\n2. Documentation\n   * Improve integrations and install pages\n\n### v1.58.1\n\n1. Updated linters\n   * `tagalign`: from 1.3.3 to 1.3.4\n   * `protogetter`: from 0.3.5 to 0.3.6\n   * `gochecknoinits`: fix analyzer name\n2. Fixes\n   * Restores previous `gihub-actions` output format (removes GitHub Action problem matchers)\n\n### v1.58.0\n\n1. New linters\n   * `fatcontext`: https://github.com/Crocmagnon/fatcontext\n   * `canonicalheader`: https://github.com/lasiar/canonicalheader\n2. Updated linters\n   * `copyloopvar`: from 1.0.10 to 1.1.0 (`ignore-alias` is replaced by `check-alias` with the opposite behavior)\n   * `decorder`: from 0.4.1 to 0.4.2\n   * `errname`: from 0.1.12 to 0.1.13\n   * `errorlint`: from 1.4.8 to 1.5.1 (new options `allowed-errors` and `allowed-errors-wildcard`)\n   * `execinquery`: deprecate linter ⚠️\n   * `gci`: from 0.12.3 to 0.13.4 (new section `localModule`)\n   * `gocritic`: from 0.11.2 to 0.11.3\n   * `spancheck`: from 0.5.3 to 0.6.1\n   * `goerr113` is replaced by `err113` ⚠️\n   * `gomnd` is replaced by `mnd` ⚠️\n   * `gomodguard`: from 1.3.1 to 1.3.2\n   * `grouper`: from 1.1.1 to 1.1.2\n   * `intrange`: from 0.1.1 to 0.1.2\n   * `mirror`: from 1.1.0 to 1.2.0\n   * `misspell`: from 0.4.1 to 0.5.1\n   * `musttag`: from 0.9.0 to 0.12.1\n   * `nilnil`: from 0.1.7 to 0.1.8\n   * `nonamedreturns`: from 1.0.4 to 1.0.5\n   * `promlinter`: from 0.2.0 to 0.3.0\n   * `sloglint`: from 0.5.0 to 0.6.0\n   * `unparam`: bump to HEAD (063aff900ca150b80930c8de76f11d7e6488222f)\n   * `whitespace`: from 0.1.0 to 0.1.1\n3. Enhancements\n   * Speed up \"fast\" linters when only \"fast\" linters are run: between 40% and 80% faster at first run (i.e. without cache)\n4. Fixes\n   * Use version with module plugins\n   * Skip `go.mod` report inside autogenerated processor\n   * Keep only `typecheck` issues when needed\n   * Don't hide `typecheck` errors inside diff processor\n5. Misc.\n   * ⚠️ log an error when using previously deprecated linters ([Linter Deprecation Cycle](https://golangci-lint.run/product/roadmap/#linter-deprecation-cycle))\n      * [`deadcode`](https://github.com/remyoudompheng/go-misc/tree/master/deadcode): deprecated since v1.49.0 (2022-08-23).\n      * [`exhaustivestruct`](https://github.com/mbilski/exhaustivestruct): deprecated since v1.46.0 (2022-05-08).\n      * [`golint`](https://github.com/golang/lint): deprecated since v1.41.0 (2021-06-15).\n      * [`ifshort`](https://github.com/esimonov/ifshort): deprecated since v1.48.0 (2022-08-04).\n      * [`interfacer`](https://github.com/mvdan/interfacer): deprecated since v1.38.0 (2021-03-03).\n      * [`maligned`](https://github.com/mdempsky/maligned): deprecated since v1.38.0 (2021-03-03).\n      * [`nosnakecase`](https://github.com/sivchari/nosnakecase): deprecated since v1.48.0 (2022-08-04).\n      * [`scopelint`](https://github.com/kyoh86/scopelint): deprecated since v1.39.0 (2021-03-25).\n      * [`structcheck`](https://github.com/opennota/check): deprecated since v1.49.0 (2022-08-23).\n      * [`varcheck`](https://github.com/opennota/check): deprecated since v1.49.0 (2022-08-23).\n   * ⚠️ Deprecate usage of linter alternative names\n   * Remove help display on errors with `config verify` command\n   * Add `pre-commit` hook to run `config verify`\n   * Improve `github-action` output\n6. Documentation\n   * Remove deprecated Atom from Editor Integrations\n\nGitHub Action (v5.1.0) for golangci-lint:\n- supports for `pull`, `pull_request_target`, and `merge_group` events with the option `only-new-issues`.\n- ️️⚠️ `skip-pkg-cache` and `skip-build-cache` have been removed because the cache related to Go itself is already handled by `actions/setup-go`.\n- with golangci-lint v1.58, the file information (path and position) will be displayed on the log.\n\n### v1.57.2\n\n1. Updated linters\n   * `contextcheck`: from 1.1.4 to 1.1.5\n   * `copyloopvar`: from 1.0.8 to 1.0.10\n   * `ginkgolinter`: from 0.16.1 to 0.16.2\n   * `goconst`: from 1.7.0 to 1.7.1\n   * `gomoddirectives`: from 0.2.3 to 0.2.4\n   * `intrange`: from 0.1.0 to 0.1.1\n2. Misc.\n   * Display warnings on deprecated linter options\n   * Fix missing `colored-tab` output format\n   * Fix TeamCity `inspectionType` service message\n3. Documentation\n   * Remove invalid example about mixing files and directory\n   * Improve linters page\n\n### v1.57.1\n\n1. Fixes\n   * Ignore issues with invalid position (e.g. `contextcheck`).\n\n### v1.57.0\n\n1. New linters\n   * `copyloopvar`: https://github.com/karamaru-alpha/copyloopvar\n   * `intrange`: https://github.com/ckaznocha/intrange\n2. Updated linters\n   * `dupword`: from 0.0.13 to 0.0.14\n   * `gci`: from 0.12.1 to 0.12.3\n   * `ginkgolinter`: from 0.15.2 to 0.16.1 (new option `force-expect-to`, `validate-async-intervals`, and `forbid-spec-pollution`)\n   * `go-critic`: from 0.11.1 to 0.11.2\n   * `go-critic`: support of `enable-all` and `disable-all` options\n   * `go-spancheck`: from 0.5.2 to 0.5.3\n   * `gomodguard`: from 1.3.0 to 1.3.1\n   * `govet`: deprecation of `check-shadowing` ⚠️ \n   * `govet`: disable temporarily `httpresponse` because of a bug https://github.com/golang/go/issues/66259\n   * `misspell`: add `extra-words`\n   * `musttag`: from 0.8.0 to 0.9.0\n   * `nakedret`: from 2.0.2 to 2.0.4\n   * `paralleltest`: from 1.0.9 to 1.0.10\n   * `perfsprint`: from 0.6.0 to 0.7.1 (new option `strconcat`)\n   * `protogetter`: from 0.3.4 to 0.3.5\n   * `revive`: add `exclude` option\n   * `sloglint`: from 0.4.0 to 0.5.0 (new option `no-global`)\n   * `staticcheck`: from 0.4.6 to 0.4.7\n   * `testifylint`: from 1.1.2 to 1.2.0 (new option `bool-compare`)\n   * `unconvert`: to HEAD (new options `fast-math` and `safe`)\n   * `wrapcheck`: from 2.8.1 to 2.8.3\n   * Disable `copyloopvar` and `intrange` on Go < 1.22\n3. Enhancements\n   * 🧩New custom linters system https://golangci-lint.run/plugins/module-plugins/\n   * Allow running only a specific linter without modifying the file configuration (`--enable-only`)\n   * Allow custom sort order for the reports (`output.sort-order`)\n   * Automatically adjust the maximum concurrency to the container CPU quota if `run.concurrency=0`\n   * Add `config verify` command to check the configuration against the JSON Schema\n   * Option to strictly follow Go generated file convention (`issues.exclude-generated-strict`)\n   * Syntax to not override `severity` from linters (`@linter`)\n   * Use severities from `gosec`\n   * Create automatically directory related to `output.formats.path`\n   * Use the first issue without inline on `mergeLineIssues` on multiple issues\n4. Misc.\n   * ⚠️ Inactivate deprecated linters (`deadcode`, `exhaustivestruct`, `golint`, `ifshort`, `interfacer`, `maligned`, `nosnakecase`, `scopelint`, `structcheck`, `varcheck`)\n   * ⚠️ Deprecated CLI flags have been removed (deprecated since 2018)\n   * ⚠️ Move `show-stats` option from `run` to `output` configuration section\n   * ⚠️ Replace `run.skip-xxx` options by `issues.exclude-xxx` options\n   * ⚠️ Replace `output.format` by `output.formats` with a new file configuration syntax\n   * Internal rewrite of the CLI\n   * Improve 'no go files to analyze' message\n   * Use `GOTOOLCHAIN=auto` inside the Docker images\n5. Documentation\n   * ⚠️ Define the linter deprecation cycle https://golangci-lint.run/product/roadmap/#linter-deprecation-cycle\n   * 🎉Use information from the previous release to create linter pages\n   * Publish JSON schema on https://golangci-lint.run/jsonschema/golangci.jsonschema.json\n   * Reorganize documentation pages\n   * Add an explanation about the configuration file inside golangci-lint repository\n\n**⚠️ Important ⚠️**\n\n1. Deprecated linters are inactivated, you still need to disable them if you are using `enable-all`.\n2. Deprecated CLI flags (about linter settings and `deadline`) have been removed.\n\n### v1.56.2\n\n1. updated linters\n   * `go-critic`: from 0.11.0 to 0.11.1\n   * `gosec`: from 2.18.2 to 2.19.0\n   * `testifylint`: from 1.1.1 to 1.1.2\n   * `usestdlibvars`: from 1.24.0 to 1.25.0\n   * `wsl`: from 4.2.0 to 4.2.1\n2. misc.\n   * Fix missing version in Docker image\n3. Documentation\n   * Explain the limitation of `new-from-rev` and `new-from-patch`\n\n### v1.56.1\n\n1. updated linters\n   * `errcheck`: from 1.6.3 to 1.7.0\n   * `govet`: disable `loopclosure` with go1.22\n   * `revive`: from 1.3.6 to 1.3.7\n   * `testifylint`: from 1.1.0 to 1.1.1\n\n### v1.56.0\n\n1. new linters\n   * `spancheck`: https://github.com/jjti/go-spancheck\n2. updated linters\n   * `depguard`: from 2.1.0 to 2.2.0\n   * `exhaustive`: from 0.11.0 to 0.12.0\n   * `exhaustruct`: from 3.1.0 to 3.2.0\n   * `gci`: from 0.11.2 to 0.12.1\n   * `ginkgolinter`: from 0.14.1 to 0.15.2\n   * `go-check-sumtype`: from 0.1.3 to 0.1.4\n   * `go-critic`: from 0.9.0 to 0.11.0\n   * `go-errorlint`: from 1.4.5 to 1.4.8\n   * `go-spancheck`: from 0.4.2 to 0.5.2\n   * `goconst`: from 1.6.0 to 1.7.0\n   * `godot`: from 1.4.15 to 1.4.16\n   * `gofumpt`: from 0.5.0 to 0.6.0\n   * `inamedparam`: from 0.1.2 to 0.1.3\n   * `ineffassign`: from 0.0.0-20230610083614-0e73809eb601 to 0.1.0\n   * `ireturn`: from 0.2.2 to 0.3.0\n   * `misspell`: add mode option\n   * `musttag`: from v0.7.2 to v0.8.0\n   * `paralleltest`: from 1.0.8 to 1.0.9\n   * `perfsprint`: from 0.2.0 to 0.6.0\n   * `protogetter`: from 0.2.3 to 0.3.4\n   * `revive`: from 1.3.4 to 1.3.6\n   * `sloglint`: add static-msg option\n   * `sloglint`: from 0.1.2 to 0.4.0\n   * `testifylint`: from 0.2.3 to 1.1.0\n   * `unparam`: from 20221223090309-7455f1af531d to 20240104100049-c549a3470d14\n   * `whitespace`: update after moving to the `analysis` package\n   * `wsl`: from 3.4.0 to 4.2.0\n   * `zerologlint`: from 0.1.3 to 0.1.5\n3. misc.\n   * 🎉 go1.22 support\n   * Implement stats per linter with a flag\n   * Make versioning inside Docker image consistent with binaries\n   * Parse Go RC version\n4. Documentation\n   * Fix `noctx` description\n   * Add missing fields to `.golangci.reference.yml`\n   * Improve `.golangci.reference.yml` defaults\n   * `typecheck`: improve FAQ\n   * `exhaustruct`: note that struct regular expressions are expected to match the entire `package/name/structname`\n   * `wrapcheck`: adjust `ignoreSigs` to new defaults\n\n**Important**\n\n`testifylint` has [breaking changes](https://github.com/Antonboom/testifylint/releases/tag/v1.0.0) about enabling/disabling checks:\n\n- If you were using the option `enable` with a filtered list of checks, you should either add `disable-all: true` (1) or use `disable` field (2).\n\n    ```yml\n      # Example (1)\n      testifylint:\n        disable-all: true\n        enable:\n          - bool-compare\n          - compares\n          - empty\n          - error-is-as\n          - error-nil\n          - expected-actual\n          - go-require\n          - float-compare\n          - len\n          - nil-compare\n          - require-error\n          # - suite-dont-use-pkg\n          - suite-extra-assert-call\n          - suite-thelper\n    ```\n\n    ```yml\n      # Example (2)\n      testifylint:\n        disable:\n          - suite-dont-use-pkg\n    ```\n\n### v1.55.2\n\n1. updated linters\n   * `ireturn`: from 0.2.1 to 0.2.2\n   * `ginkgolinter`: from 0.14.0 to 0.14.1\n\n### v1.55.1\n\n1. updated linters\n   * `gosec`: from 2.18.1 to 2.18.2\n2. misc.\n   * `revgrep`: from v0.5.0 to v0.5.2 (support git < 2.41.0)\n   * output: convert backslashes to forward slashes for GitHub Action annotations printer\n\n### v1.55.0\n\n1. new linters\n   * `gochecksumtype`: https://github.com/alecthomas/go-check-sumtype\n   * `inamedparam`: https://github.com/macabu/inamedparam\n   * `perfsprint`: https://github.com/catenacyber/perfsprint\n   * `protogetter`: https://github.com/ghostiam/protogetter\n   * `sloglint`: https://github.com/go-simpler/sloglint\n   * `testifylint`: https://github.com/Antonboom/testifylint\n2. updated linters\n   * `bidichk`: from 0.2.4 to 0.2.7\n   * `decorder`: from 0.4.0 to 0.4.1\n   * `dupword`: from 0.0.12 to 0.0.13\n   * `errchkjson`: from 0.3.1 to 0.3.6\n   * `gci`: from 0.11.0 to 0.11.2\n   * `ginkgolinter`: from 0.13.5 to 0.14.0\n   * `go-errorlint`: from 1.4.4 to 1.4.5\n   * `gocognit`: from 1.0.7 to 1.1.0\n   * `goconst`: from 1.5.1 to 1.6.0\n   * `godot`: from 1.4.14 to 1.4.15\n   * `gofmt`: update to HEAD\n   * `goimports`: update to HEAD\n   * `gosec`: from 2.17.0 to 2.18.1\n   * `gosmopolitan`: from 1.2.1 to 1.2.2\n   * `govet`: add `appends` analyzer\n   * `ireturn`: from 0.2.0 to 0.2.1\n   * `protogetter`: from 0.2.2 to 0.2.3\n   * `revgrep`: from 745bb2f7c2e6 to v0.5.0\n   * `revive`: from 1.3.2 to 1.3.4\n   * `sqlclosecheck`: from 0.4.0 to 0.5.1\n   * `staticcheck`: from 0.4.5 to 0.4.6\n   * `tagalign`: from 1.3.2 to 1.3.3\n   * `unused`: support passing in options\n3. misc.\n   * Add a pre-commit hook to check all files\n4. Documentation\n   * add source options to exclude-rules docs\n   * `gosec`: add G602 to includes/excludes inside .golangci.reference.yml\n\n### v1.54.2\n\n1. updated linters:\n   * `errname`: from 0.1.10 to 0.1.12\n   * `ginkgolinter`: from 0.13.3 to 0.13.5\n   * `go-errorlint`: from 1.4.3 to 1.4.4\n   * `godot`: from 1.4.11 to 1.4.14\n   * `gosec`: from 2.16.0 to 2.17.0\n   * `musttag`: from 0.7.1 to 0.7.2\n   * `nilnil`: from 0.1.5 to 0.1.7\n   * `staticcheck`: from 0.4.3 to 0.4.5\n   * `usestdlibvars`: from 1.23.0 to 1.24.0\n   * `govet`: add missing `directive` and `slog` passes\n\n### v1.54.1\n\n1. updated linters:\n   * `go-critic`:  from 0.8.2 to 0.9.0\n2. misc.\n   * plugin: temporarily hide warning about using plugins using the old API\n\n### v1.54.0\n\n1. updated linters:\n   * `decorder`: from 0.2.3 to 0.4.0\n   * `dupword`: from 0.0.11 to 0.0.12\n   * `errorlint`: from 1.4.2 to 1.4.3\n   * `exhaustruct`: from 2.3.0 to 3.1.0\n   * `forbidigo`: from 1.5.3 to 1.6.0\n   * `funlen`: from 0.0.3 to 0.1.0\n   * `gci`: from 0.10.1 to 0.11.0\n   * `ginkgolinter`: from 0.12.1 to 0.13.3\n   * `go-critic`: from 0.8.1 to 0.8.2\n   * `go-errorlint`: from 1.4.2 to 1.4.3\n   * `go-exhaustruct`: from 2.3.0 to 3.1.0\n   * `gocognit`: from 1.0.6 to 1.0.7\n   * `gocritic`: from 0.8.1 to 0.8.2\n   * `gofmt`: autofix missing newline at EOF\n   * `misspell`: 0.4.0 to 0.4.1\n   * `musttag`: from 0.7.0 to 0.7.1\n   * `paralleltest`: from 1.0.7 to 1.0.8\n   * `tagalign`: from 1.2.2 to 1.3.2\n   * `typecheck`: explain it and remove it from the linter list\n   * `zerologlint`: from 0.1.2 to 0.1.3\n2. misc.\n   * 🎉 go1.21 support\n   * plugin: include custom linters in `enable-all`\n   * plugin: allow to use settings for plugins\n3. Documentation\n   * Add linter descriptions.\n\n**Important**\n\n`ruleguard` (a \"rule\" inside `gocritic`) was disabled in this release (v1.54.0) and was enabled again in the next release (v1.54.1).\n\n`exhaustruct` has breaking changes with regular expressions, more details [here](https://github.com/GaijinEntertainment/go-exhaustruct/releases/tag/v3.0.0).\n\n### v1.53.3\n\n1. updated linters:\n   * `cyclop`: from 1.2.0 to 1.2.1\n   * `exhaustive`: from 0.10.0 to 0.11.0\n   * `forbidigo`: from 1.5.1 to 1.5.3\n   * `ginkgolinter`: from 0.12.2 to 0.12.1\n   * `ineffassign`: bump to HEAD\n   * `nakedret`: from 2.0.1 to 2.0.2\n   * `zerologlint`: from 0.1.1 to 0.1.2\n2. misc.\n   * codeclimate: reduce memory allocation\n   * support illumos/amd64\n\n### v1.53.2\n\n1. updated linters\n   * `depguard`: from v2.0.1 to 2.1.0\n2. misc.\n   * `depguard`: throw error only when the linter is called\n\n### v1.53.1\n\n1. misc.\n   * `depguard`: fix GOROOT detection\n   * `importas`: fix duplication detection when aliases use regular expression replacement pattern\n\n### v1.53.0\n\n1. new linters\n   * `gosmopolitan`: https://github.com/xen0n/gosmopolitan\n   * `mirror`: https://github.com/butuzov/mirror\n   * `tagalign`: https://github.com/4meepo/tagalign\n   * `zerologlint`: https://github.com/ykadowak/zerologlint\n2. updated linters\n   * `bodyclose`: bump to HEAD\n   * `containedctx`: from 1.0.2 to 1.0.3\n   * `depguard`: migrate to v2\n   * `errname`: from 0.1.9 to 0.1.10\n   * `exhaustive`: from 0.9.5 to 0.10.0\n   * `forbidigo`: better support for configuring complex rules\n   * `gci`: improve error message\n   * `ginkgolinter`: add suppress-async-assertion option\n   * `ginkgolinter`: from 0.9.0 to 0.12.0\n   * `go-critic`: from 0.7.0 to 0.8.1\n   * `go-errorlint`: from 1.4.0 to 1.4.2\n   * `gofumpt`: from 0.4.0 to 0.5.0\n   * `gosec`: convert global settings as map with proper key type\n   * `gosec`: from 2.15.0 to 2.16.0\n   * `importas`: detect duplicate alias or package in the configuration\n   * `importas`: fix typo in logs\n   * `ireturn`: from 0.1.1 to 0.2.0\n   * `musttag`: from 0.5.0 to 0.7.0\n   * `nakedret`: to 2.0.1\n   * `nilnil`: from 0.1.3 to 0.1.5\n   * `paralleltest`: from 1.0.6 to 1.0.7\n   * `revive`: from 1.3.1 to 1.3.2\n   * `tagliatelle`: from 0.4.0 to 0.5.0\n   * `usestdlibvars`: fix configuration\n3. misc.\n   * `golang.org/x/tools`: from 0.7.0 to 0.9.2\n   * add loongarch64 to the install script\n   * output: add colored-tab\n   * remove warning when the config file is explicitly stdin\n   * rules: support inverted path match\n4. Documentation\n   * `mnd`: clarify ignore usage examples to be regexps\n   * `tagliatelle`: update documentation\n   * improve features section\n   * update supported Go versions FAQ\n\n### v1.52.2\n\n1. updated linters\n   * `tparallel`: from 0.3.0 to 0.3.1\n2. misc.\n   * fix: pre-commit `require_serial` and `pass_filenames`\n\n### v1.52.1\n\n1. misc.\n   * fix: improve panic management\n   * fix: the combination of --fix and --path-prefix\n\n### v1.52.0\n\n1. updated linters\n   * `asciicheck`: from 0.1.1 to 0.2.0\n   * `bidichk`: from 0.2.3 to 0.2.4\n   * `contextcheck`: from 1.1.3 to 1.1.4\n   * `dupword`: from 0.0.9 to 0.0.11\n   * `durationcheck`: from 0.0.9 to 0.0.10\n   * `errchkjson`: from 0.3.0 to 0.3.1\n   * `errname`: from 0.1.7 to 0.1.9\n   * `forbidigo`: from 1.4.0 to 1.5.1\n   * `gci`: from 0.9.1 to 0.10.1\n   * `ginkgolinter`: from 0.8.1 to 0.9.0\n   * `go-critic`: from 0.6.7 to 0.7.0\n   * `go-errorlint`: from 1.1.0  to 1.4.0\n   * `godox`: bump to HEAD\n   * `lll`: skip go command\n   * `loggercheck`: from 0.9.3 to 0.9.4\n   * `musttag`: from 0.4.5 to 0.5.0\n   * `nilnil`: from 0.1.1 to 0.1.3\n   * `noctx`: from 0.0.1 to 0.0.2\n   * `revive`: from 1.2.5 to 1.3.1\n   * `rowserrcheck`: remove limitation related to generics support\n   * `staticcheck`: from 0.4.2 to 0.4.3\n   * `testpackage`: from 1.1.0 to 1.1.1\n   * `tparallel`: from 0.2.1 to 0.3.0\n   * `wastedassign`: remove limitation related to generics support\n   * `wrapcheck`: from 2.8.0 to 2.8.1\n2. misc.\n   * Add TeamCity output format\n   * Consider path prefix when matching path patterns\n   * Add Go version to version information\n3. Documentation\n   * Add Tekton in Trusted By page\n   * Clarify that custom linters are not enabled by default\n   * Remove description for deprecated \"go\" option\n\n### v1.51.2\n\n1. updated linters\n   * `forbidigo`: from 1.3.0 to 1.4.0\n   * `gci`: from 0.9.0 to 0.9.1\n   * `go-critic`: from 0.6.5 to 0.6.7\n   * `go-errorlint`: from 1.0.6 to 1.1.0\n   * `gosec`: from 2.14.0 to 2.15.0\n   * `musttag`: from 0.4.4 to 0.4.5\n   * `staticcheck`: from 0.4.0 to 0.4.2\n   * `tools`: from 0.5.0 to 0.6.0\n   * `usestdlibvars`: from 1.21.1 to 1.23.0\n   * `wsl`: from 3.3.0 to 3.4.0\n   * `govet`: enable `timeformat` by default\n2. misc.\n   * fix: cache status size calculation\n   * add new source archive\n3. Documentation\n   * Improve installation section\n   * Replace links to godoc.org with pkg.go.dev\n\n### v1.51.1\n\n1. updated linters\n   * `ginkgolinter`: from 0.7.1 to 0.8.1\n   * `ineffassign`: bump to HEAD\n   * `musttag`: from 0.4.3 to 0.4.4\n   * `sqlclosecheck`: from 0.3.0 to 0.4.0\n   * `staticcheck`: bump to v0.4.0\n   * `wastedassign`: from 2.0.6 to 2.0.7\n   * `wrapcheck`: from 2.7.0 to 2.8.0\n\n### v1.51.0\n\n1. new linters\n   * `ginkgolinter`: https://github.com/nunnatsa/ginkgolinter\n   * `musttag`: https://github.com/tmzane/musttag\n   * `gocheckcompilerdirectives`: https://github.com/leighmcculloch/gocheckcompilerdirectives\n2. updated linters\n   * `bodyclose`: to HEAD\n   * `dupword`: from 0.0.7 to 0.0.9\n   * `errcheck`: from 1.6.2 to 1.6.3\n   * `exhaustive`: from 0.8.3 to 0.9.5\n   * `exportloopref`: from 0.1.8 to 0.1.11\n   * `gci`: from 0.8.1 to 0.9.0\n   * `ginkgolinter`: from 0.6.0 to 0.7.1\n   * `go-errorlint`: from 1.0.5 to 1.0.6\n   * `go-ruleguard`: from 0.3.21 to 0.3.22\n   * `gocheckcompilerdirectives`: from 1.1.0 to 1.2.1\n   * `gochecknoglobals`: from 0.1.0 to 0.2.1\n   * `gomodguard`: from 1.2.4 to 1.3.0\n   * `gosec`: from 2.13.1 to 2.14.0\n   * `govet`: Add `timeformat` to analysers\n   * `grouper`: from 1.1.0 to 1.1.1\n   * `musttag`: from 0.4.1 to 0.4.3\n   * `revive`: from 1.2.4 to 1.2.5\n   * `tagliatelle`: from 0.3.1 to 0.4.0\n   * `tenv`: from 1.7.0 to 1.7.1\n   * `unparam`: bump to HEAD\n   * `usestdlibvars`: from 1.20.0 to 1.21.1\n   * `wsl`: fix `force-err-cuddling` flag\n3. misc.\n   * go1.20 support\n   * remove deprecated linters from presets\n   * Build NetBSD binaries\n   * Build loong64 binaries\n4. Documentation\n   * `goimport`: improve documentation for local-prefixes\n   * `gomnd`: add missing always ignored functions\n   * `nolint`: fix typo\n   * `tagliatelle` usage typo\n   * add note about binary requirement for plugin\n   * cache preserving and colored output on docker runs\n   * improve documentation about debugging.\n   * improve Editor Integration section\n   * More specific default cache directory\n   * update output example to use valid checkstyle example; add json example\n\n### v1.50.1\n\n1. updated linters\n   * `contextcheck`: from 1.1.2 to 1.1.3\n   * `go-mnd`: from 2.5.0 to 2.5.1\n   * `wrapcheck`: from 2.6.2 to 2.7.0\n   * `revive`: fix configuration parsing\n   * `lll`: skip imports\n2. misc.\n   * windows: remove redundant character escape '\\/'\n   * code-climate: add default severity\n\n### v1.50.0\n\n1. new linters\n   * `dupword`: https://github.com/Abirdcfly/dupword\n   * `testableexamples`: https://github.com/maratori/testableexamples\n2. updated linters\n   * `contextcheck`: change owner\n   * `contextcheck`: from 1.0.6 to 1.1.2\n   * `depguard`: from 1.1.0 to 1.1.1\n   * `exhaustive`: add missing config\n   * `exhaustive`: from 0.8.1 to 0.8.3\n   * `gci`: from 0.6.3 to 0.8.0\n   * `go-critic`: from 0.6.4 to 0.6.5\n   * `go-errorlint`: from 1.0.2 to 1.0.5\n   * `go-reassign`: v0.1.2 to v0.2.0\n   * `gofmt`: add option `rewrite-rules`\n   * `gofumpt` from 0.3.1 to 0.4.0\n   * `goimports`: update to HEAD\n   * `interfacebloat`: fix configuration loading\n   * `logrlint`: rename `logrlint` to `loggercheck`\n   * `paralleltest`: add tests of the ignore-missing option\n   * `revive`: from 1.2.3 to 1.2.4\n   * `usestdlibvars`: from 1.13.0 to 1.20.0\n   * `wsl`: support all configs and update docs\n3. misc.\n   * Normalize `exclude-rules` paths for Windows\n   * add riscv64 to the install script\n4. Documentation\n   * cli: remove reference to old service\n\n### v1.49.0\n\nIMPORTANT: `varcheck` and `deadcode` has been removed of default linters.\n\n1. new linters\n   * `interfacebloat`: https://github.com/sashamelentyev/interfacebloat\n   * `logrlint`: https://github.com/timonwong/logrlint\n   * `reassign`: https://github.com/curioswitch/go-reassign\n2. updated linters\n   * `go-colorable`: from 0.1.12 to 0.1.13\n   * `go-critic`: from 0.6.3 to 0.6.4\n   * `go-errorlint`: from 1.0.0 to 1.0.2\n   * `go-exhaustruct`: from 2.2.2 to 2.3.0\n   * `gopsutil`: from 3.22.6 to 3.22.7\n   * `gosec`: from 2.12.0 to 2.13.1\n   * `revive`: from 1.2.1 to 1.2.3\n   * `usestdlibvars`: from 1.8.0 to 1.13.0\n   * `contextcheck`: from v1.0.4 to v1.0.6 && re-enable\n   * `nosnakecase`: This linter is deprecated.\n   * `varcheck`: This linter is deprecated use `unused` instead.\n   * `deadcode`: This linter is deprecated use `unused` instead.\n   * `structcheck`: This linter is deprecated use `unused` instead.\n3. documentation\n   * `revive`: fix wrong URL\n   * Add a section about default exclusions\n   * `usestdlibvars`: fix typo in documentation\n   * `nolintlint`: remove allow-leading-space option\n   * Update documentation and assets\n4. misc.\n   * dev: rewrite the internal tests framework\n   * fix: exit early on run --version\n   * fix: set an explicit `GOROOT` in the Docker image for `go-critic`\n\n### v1.48.0\n\n1. new linters\n   * `usestdlibvars`:https://github.com/sashamelentyev/usestdlibvars\n2. updated linters\n   * `contextcheck`: disable linter\n   * `errcheck`: from 1.6.1 to 1.6.2\n   * `gci`: add missing `custom-order` setting\n   * `gci`: from 0.5.0 to 0.6.0\n   * `ifshort`: deprecate linter\n   * `nolint`: drop allow-leading-space option and add \"nolint:all\"\n   * `revgrep`: bump to HEAD\n3. documentation\n   * remove outdated info on source install\n4. misc\n   * go1.19 support\n\n### v1.47.3\n\n1. updated linters:\n   * remove some go1.18 limitations\n   * `asasalint`: from 0.0.10 to 0.0.11\n   * `decorder`: from 0.2.2 to v0.2.3\n   * `gci`: fix panic with invalid configuration option\n   * `gci`: from 0.4.3 to v0.5.0\n   * `go-exhaustruct`: from 2.2.0 to 2.2.2\n   * `gomodguard`: from 1.2.3 to 1.2.4\n   * `nosnakecase`: from 1.5.0 to 1.7.0\n   * `honnef.co/go/tools`: from 0.3.2 to v0.3.3\n2. misc\n   * cgo: fix linters ignoring CGo files\n\n### v1.47.2\n\n1. updated linters:\n   * `revive`: ignore slow rules\n\n### v1.47.1\n\n1. updated linters:\n   * `gci`: from 0.4.2 to 0.4.3\n   * `gci`: remove the use of stdin\n   * `gci`: fix options display\n   * `tenv`: from 1.6.0 to 1.7.0\n   * `unparam`: bump to HEAD\n\n### v1.47.0\n\n1. new linters:\n   * `asasalint`: https://github.com/alingse/asasalint\n   * `nosnakecase`: https://github.com/sivchari/nosnakecase\n2. updated linters:\n   * `decorder`: from 0.2.1 to 0.2.2\n   * `errcheck`: from 1.6.0 to 1.6.1\n   * `errname`: from 0.1.6 to 0.1.7\n   * `exhaustive`: from 0.7.11 to 0.8.1\n   * `gci`: fix issues and re-enable autofix\n   * `gci`: from 0.3.4 to 0.4.2\n   * `go-exhaustruct`: from 2.1.0 to 2.2.0\n   * `go-ruleguard`: from 0.3.19 to 0.3.21\n   * `gocognit`: from 1.0.5 to 1.0.6\n   * `gocyclo`: from 0.5.1 to 0.6.0\n   * `golang.org/x/tools`: bump to HEAD\n   * `gosec`: allow `global` config\n   * `gosec`: from 2.11.0 to 2.12.0\n   * `nonamedreturns`: from 1.0.1 to 1.0.4\n   * `paralleltest`: from 1.0.3 to 1.0.6\n   * `staticcheck`: fix generics\n   * `staticcheck`: from 0.3.1 to 0.3.2\n   * `tenv`: from 1.5.0 to 1.6.0\n   * `testpackage`: from 1.0.1 to 1.1.0\n   * `thelper`: from 0.6.2 to 0.6.3\n   * `wrapcheck`: from 2.6.1 to 2.6.2\n3. documentation:\n   * add thanks page\n   * add a clear explanation about the `staticcheck` integration.\n   * `depguard`: add `ignore-file-rules`\n   * `depguard`: adjust phrasing\n   * `gocritic`: add `enable` and `disable` ruleguard settings\n   * `gomnd`: fix typo\n   * `gosec`: add configs for all existing rules\n   * `govet`: add settings for `shadow` and `unusedresult`\n   * `thelper`: add `fuzz` config and description\n   * linters: add defaults\n\n### v1.46.2\n\n1. updated linters:\n   * `execinquery`: bump from v1.2.0 to v1.2.1\n   * `errorlint`: bump to v1.0.0\n   * `thelper`: allow to disable one option\n2. documentation:\n   * rename `.golangci.example.yml` to `.golangci.reference.yml`\n   * add `containedctx` linter to the list of available linters\n\n### v1.46.1\n\n1. updated linters:\n   * `execinquery`: bump from v0.6.0 to v0.6.1\n2. documentation:\n   * add missing linters\n\n### v1.46.0\n\n1. new linters:\n   * `execinquery`: https://github.com/lufeee/execinquery\n   * `nonamedreturns`: https://github.com/firefart/nonamedreturns\n   * `nosprintfhostport`: https://github.com/stbenjam/no-sprintf-host-port\n   * `exhaustruct`: https://github.com/GaijinEntertainment/go-exhaustruct\n2. updated linters:\n   * `bidichk`: from 0.2.2 to 0.2.3\n   * `deadcode`: bump to HEAD\n   * `errchkjson`: from 0.2.3 to 0.3.0\n   * `errname`: from 0.1.5 to 0.1.6\n   * `go-critic`: from 0.6.2 to 0.6.3\n   * `gocyclo`: from 0.4.0 to 0.5.1\n   * `gofumpt` from 0.3.0 to 0.3.1\n   * `gomoddirectives`: from 0.2.2 to 0.2.3\n   * `gosec`: from 2.10.0 to 2.11.0\n   * `honnef.co/go/tools`: from 0.2.2to 0.3.1 (go1.18 support)\n   * `nilnil`: from 0.1.0 to 0.1.1\n   * `nonamedreturns`: bump from 1.0.0 to 1.0.1\n   * `predeclared`: from 0.2.1 to 0.2.2\n   * `promlinter`: bump to v0.2.0\n   * `revive`: from 1.1.4 to 1.2.1\n   * `tenv`: from 1.4.7 to 1.5.0\n   * `thelper`: from 0.5.1 to 0.6.2\n   * `unused`: fix false-positive\n   * `varnamelen`: bump to v0.8.0\n   * `wrapcheck`: from 2.5.0 to 2.6.1\n   * `exhaustivestruct`: This linter is deprecated use `exhaustruct` instead.\n3. documentation:\n   * Update \"Shell Completion\" instruction on Linux\n   * Update FAQ page\n4. misc:\n   * log: enable override coloring based on `CLICOLOR` and `CLICOLOR_FORCE`\n\n### v1.45.2\n\n1. misc:\n   * fix: help command\n\n### v1.45.1\n\n1. updated linters:\n   * `interfacer`: inactivate with go1.18\n   * `govet`: inactivate unsupported analyzers (go1.18)\n   * `depguard`: reduce requirements\n   * `structcheck`: inactivate with go1.18\n   * `varnamelen`: bump from v0.6.0 to v0.6.1\n2. misc:\n   * Automatic Go version detection 🎉 (go1.18)\n   * docker: update base images (go1.18)\n\n### v1.45.0\n\n1. updated linters:\n   * `cobra`: from 1.3.0 to 1.4.0\n   * `containedctx`: from 1.0.1 to 1.0.2\n   * `errcheck`: add an option to remove default exclusions\n   * `gci`: from 0.3.1 to 0.3.2\n   * `go-header`: from 0.4.2 to 0.4.3\n   * `gofumpt`: add module-path setting\n   * `gofumpt`: from 0.2.1 to 0.3.0\n   * `gopsutil`: from 3.22.1 to 3.22.2\n   * `gosec`: from 2.9.6 to 2.10.0\n   * `makezero`: from 1.1.0 to 1.1.1\n   * `revive`: fix default values\n   * `wrapcheck`: from 2.4.0 to 2.5.0\n2. documentation:\n   * docs: add \"back to the top\" button\n   * docs: add `forbidigo` example that uses comments\n   * docs: improve linters page\n3. misc:\n   * go1.18 support 🎉\n   * Add an option to manage the targeted version of Go\n   * Default to YAML when config file has no extension\n\n### v1.44.2\n\n1. updated linters:\n   * `gci`: bump to HEAD\n   * `gci`: restore defaults for sections\n   * `whitespace`: from 0.0.4 to 0.0.5\n2. documentation:\n   * add link to configuration in the linters list\n\n### v1.44.1\n\n1. updated linters:\n   * `bidichk`: from 0.2.1 to 0.2.2\n   * `errchkjson`: from 0.2.1 to 0.2.3\n   * `thelper`: from 0.5.0 to 0.5.1\n   * `tagliatelle`: from 0.3.0 to 0.3.1\n   * `gopsutil`: from 3.21.12 to 3.22.1\n   * `gci`: from 0.2.9 to 0.3.0\n   * `revive`: from v1.1.3 to v1.1.4\n   * `varnamelen`: from v0.5.0 to v0.6.0\n2. documentation:\n   * linters: improve configuration pages\n   * `decorder`: fix `disable-init-func-first-check: false` elaboration\n3. misc:\n   * fix debug output\n\n### v1.44.0\n\n1. new linters:\n   * `containedctx`: https://github.com/sivchari/containedctx\n   * `decorder`: https://gitlab.com/bosi/decorder\n   * `errchkjson`: https://github.com/breml/errchkjson\n   * `maintidx`: https://github.com/yagipy/maintidx\n   * `grouper`: https://github.com/leonklingele/grouper\n2. updated linters:\n   * `asciicheck`: bump to v0.1.1\n   * `bidichk`: from 0.1.1 to 0.2.1\n   * `bodyclose`: bump to HEAD\n   * `decorder`: from 0.2.0 to 0.2.1\n   * `depguard`: from 1.0.1 to 1.1.0\n   * `errchkjson`: from 0.2.0 to 0.2.1\n   * `errorlint`: bump to HEAD\n   * `exhaustive`: drop deprecated/unused settings\n   * `exhaustive`: from v0.2.3 to 0.7.11\n   * `forbidigo`: from 1.2.0 to 1.3.0\n   * `forcetypeassert`: bump to v0.1.0\n   * `gocritic`: from 0.6.1 to 0.6.2\n   * `gocritic`: support autofix\n   * `gocyclo`: from 0.3.1 to 0.4.0\n   * `godot`: add period option\n   * `gofumpt`: from 0.1.1 to 0.2.1\n   * `gomnd`: from 2.4.0 to 2.5.0\n   * `gomnd`: new configuration\n   * `gosec`: from 2.9.1 to 2.9.6\n   * `ifshort`: from 1.0.3 to 1.0.4\n   * `ineffassign`: bump to HEAD\n   * `makezero`: to v1.1.0\n   * `promlinter`: from v0.1.0 to HEAD\n   * `revive`: fix `enableAllRules`\n   * `revive`: from 1.1.2 to 1.1.3\n   * `staticcheck`: from 0.2.1 to 0.2.2\n   * `tagliatelle`: from 0.2.0 to 0.3.0\n   * `thelper`: from 0.4.0 to 0.5.0\n   * `unparam`: bump to HEAD\n   * `varnamelen`: bump to v0.5.0\n   * `wrapcheck`: update configuration to include `ignoreSignRegexps`\n3. documentation:\n   * linters: improve pages about configuration\n   * improve page about false-positive\n   * `nolintlint`: fix wrong default value in comment\n   * `revive`: add a more detailed configuration\n4. misc:\n   * outputs: Add support for multiple outputs\n   * outputs: Print error text in `<failure>` tag content for more readable JUnit output\n   * outputs: ensure that the Issues key in JSON format is a list\n   * Return error if any linter fails to run\n   * cli: Show deprecated mark in the CLI linters help\n\n### November 2021\n\n1. new linters:\n   * `bidichk`: https://github.com/breml/bidichk\n2. update linters:\n   * `nestif`: from 0.3.0 to 0.3.1\n   * `rowserrcheck`: from 1.1.0 to 1.1.1\n   * `gopsutil`: from 3.21.9 to 3.21.10\n   * `wrapcheck`: from 2.3.1 to 2.4.0\n   * `gocritic`: add support for variable substitution in `ruleguard` path settings\n3. documentation:\n   * improve `go-critic` documentation\n   * improve `nolintlint` documentation\n4. Misc:\n   * cli: don't hide `enable-all` option\n\n### october 2021\n\n1. new linters:\n   * `contextcheck`: https://github.com/kkHAIKE/contextcheck\n   * `varnamelen`: https://github.com/blizzy78/varnamelen\n2. update linters:\n   * `gochecknoglobals`: to v0.1.0\n   * `gosec`: filter issues according to the severity and confidence\n   * `errcheck`: empty selector name.\n   * `ifshort`: from 1.0.2 to 1.0.3\n   * `go-critic`: from 0.5.6 to 0.6.0\n   * `gosec`: from 2.8.1 to 2.9.1\n   * `durationcheck`: from 0.0.8 to 0.0.9\n   * `wrapcheck`: from 2.3.0 to 2.3.1\n   * `revive`: from 1.1.1 to 1.1.2\n\n### September 2021\n\n1. new linters:\n   * `ireturn`: https://github.com/butuzov/ireturn\n   * `nilnil`: https://github.com/Antonboom/nilnil\n   * `tenv`: https://github.com/sivchari/tenv\n2. update linters:\n   * `errcheck`: update to HEAD\n   * `errname`: from 0.1.4 to 0.1.5\n   * `gci`: Parse the settings more similarly to the CLI\n   * `godot`: from 1.4.9  to 1.4.11\n   * `ireturn`: from 0.1.0 to 0.1.1\n   * `nlreturn`: add block-size option\n   * `paralleltest`: from 1.0.2 to 1.0.3\n3. Misc:\n   * new-from-rev: add support for finding issues in entire files in a diff\n\n### August 2021\n\n1. new linters:\n   * `errname`: https://github.com/Antonboom/errname\n2. update linters:\n   * `errname`: from 0.1.3 to 0.1.4\n   * `go-critic`: fix invalid type conversions.\n   * `godot`: from 1.4.8 to 1.4.9\n   * `gomodguard`: from 1.2.2 to 1.2.3\n   * `revive`: from 1.0.9 to 1.1.1\n   * `staticcheck`: bump to 2021.1.1 (v0.2.1)\n   * `wrapcheck`: bump to v2.3.0\n3. Misc:\n   * build binaries and Docker images with go1.17\n\n### July 2021\n\n1. update linters:\n   * `errcheck`: allow exclude config without extra file\n   * `exhaustive`: from 0.1.0 to 0.2.3\n   * `gocognit`: from 1.0.1 to 1.0.5\n   * `godot`: from 1.4.7 to 1.4.8\n   * `gomoddirectives`: from 0.2.1 to 0.2.2\n   * `revive`: from 1.0.8 to 1.0.9\n2. documentation:\n   * improve `goconst` documentation\n   * improve `goimports` description\n\n### June 2021\n\n1. update linters:\n   * `durationcheck`: from 0.0.7 to 0.0.8\n   * `gci`: from 0.2.8 to 0.2.9\n   * `goconst`: from 0.5.6 to 0.5.7\n   * `gofumpt`: Add lang-version option\n   * `gomodguard`: from 1.2.1 to 1.2.2\n   * `gosec`: from 2.8.0 to 2.8.1\n   * `revive`: add enable-all-rules.\n   * `revive`: allow to disable rule\n   * `revive`: fix exclude comment rule for const block\n   * `revive`: from 1.0.7 to 1.0.8\n   * `wrapcheck`: from 2.1.0 to 2.2.0\n2. documentation:\n   * add all integrations to docs introduction page\n3. Misc:\n   * 🎉 Un-deprecate enable-all option\n   * output: generate HTML report\n   * Support RISV64\n\n### May 2021\n\n1. new linters:\n   * `tagliatelle`: https://github.com/ldez/tagliatelle\n   * `promlinter`: https://github.com/yeya24/promlinter\n2. update linters:\n   * `durationcheck`: from 0.0.6 to 0.0.7\n   * `errorlint`: bump to HEAD\n   * `forbidigo`: from 1.1.0 to 1.2.0\n   * `go-critic`: from 0.5.5 to 0.5.6\n   * `godot`: from 1.4.6 to 1.4.7\n   * ⚠ `golint`: deprecated\n   * `gomnd`: from 2.3.2 to 2.4.0\n   * `gomodguard`: fix problem where duplicate issues were reported\n   * `gosec`: from 2.7.0 to 2.8.0\n   * `govet`: fix `sigchanyzer`\n   * `govet`: Update vet passes\n   * `importas`: allow repeated aliases\n   * `importas`: bump to HEAD\n   * `makezero`: bump to HEAD\n   * `nolintlint`: fix false positive\n   * `revive`: convert hard coded excludes into default exclude patterns\n   * `revive`: fix add-constant rule support\n   * `revive`: fix excludes\n   * `revive`: from 1.0.6 to 1.0.7\n   * `revive`: improve 'exported' rule output\n   * `rowserrcheck`: bump to v1.1.0\n   * `staticcheck`: configuration for `staticcheck`, `gosimple`, `stylecheck`\n   * `staticcheck`: from 0.1.3 to 0.1.4\n   * `staticcheck`: from v0.1.4 to v0.2.0\n   * `wastedassign`: from 0.2.0 to 1.0.0\n   * `wastedassign`: from 1.0.0 to v2.0.6\n   * `wrapcheck`: from 1.2.0 to 2.1.0\n3. documentation:\n   * improve linters page\n   * `exhaustivestruct` example explanation\n   * fix pattern of `forbidigo` in example config yaml\n   * bump documentation dependencies\n   * fix typos\n4. Misc:\n   * set the minimum Go version to go1.15\n   * non-zero exit code when a linter produces a panic\n\n### April 2021\n\n1. new linters:\n   * `tagliatelle`: https://github.com/ldez/tagliatelle\n   * `promlinter`: https://github.com/yeya24/promlinter\n2. update linters:\n   * `godot`: from 1.4.4 to 1.4.6\n   * `wrapcheck`: from 1.0.0 to 1.2.0\n   * `go-mnd`: from 2.3.1 to 2.3.2\n   * `wsl`: from 3.2.0 to 3.3.0\n   * `revive`: from 1.0.5 to 1.0.6\n   * `importas`: bump to HEAD\n   * `staticcheck`: configurable Go version\n   * `gosec`: add configuration\n   * `typecheck`: improve error stack parsing\n3. documentation:\n   * bump documentation dependencies\n   * fix typos\n4. Misc:\n   * fix: comma in exclude pattern leads to unexpected results\n\n### March 2021\n\n1. new linters:\n   * `gomoddirectives`: https://github.com/ldez/gomoddirectives\n2. update linters:\n   * `go-critic`: from 0.5.4 to 0.5.5\n   * `gofumpt`: from v0.1.0 to v0.1.1\n   * `gosec`: from 2.6.1 to 2.7.0\n   * `ifshort`: bump to v1.0.2\n   * `importas`: bump to HEAD\n   * `makezero`: bump to HEAD\n   * `nolintlint`: allow to fix //nolint lines\n   * `revive`: from 1.0.3 to 1.0.5\n   * `revive`: the default configuration is only applied when no dedicated configuration\n   * `rowserrcheck`: bump to HEAD\n   * ⚠ `scopelint`: deprecated\n   * `staticcheck`: from v0.1.2 (2020.2.2) to v0.1.3 (2020.2.3)\n   * 🎉 `typecheck`: display compilation errors as report instead of error\n   * `wastedassign`: bump to v0.2.0\n   * `wrapcheck`: bump to v1.0.0\n3. documentation:\n   * improve [linters page](https://golangci-lint.run/usage/linters/) (versions, deprecation, and presets)\n   * add [cache directory](https://golangci-lint.run/usage/configuration/#cache) information\n   * adding missing format options\n   * fix typos\n4. Misc:\n   * Set `version` command output to Stdout\n   * fix linters load mode\n   * Restore fast linters meaning\n\n### February 2021\n\n1. new linters:\n   * `durationcheck`: https://github.com/charithe/durationcheck\n   * `revive`: https://github.com/mgechev/revive\n   * `cyclop`: https://github.com/bkielbasa/cyclop\n   * `wastedassign`: https://github.com/sanposhiho/wastedassign\n   * `importas`: https://github.com/julz/importas\n   * `nilerr`: https://github.com/gostaticanalysis/nilerr\n   * `forcetypeassert`: https://github.com/gostaticanalysis/forcetypeassert\n   * `govet`: add `stringintconv` and `ifaceassert`\n2. update linters:\n   * `prealloc`: Use upstream version\n   * `errcheck`: Use upstream version\n   * `ineffassign`: Use upstream version\n   * `gocyclo`: Use upstream version\n   * `godot` from 1.3.2 to 1.4.3\n   * `exhaustivestruct` from 1.1.0 to 1.2.0\n   * `forbidigo` from 1.0.0 to 1.1.0\n   * `thelper` from 0.2.1 to 0.3.1\n   * `ruleguard`: print error message and exit with non-zero status when parsing error occurs\n   * fix wrong load mode for `asciicheck`, `exhaustivestruct`, `exportloopref`, and `makezero`\n   * `wsl`: bump to v3.2.0\n   * `durationcheck`: from 0.0.4 to 0.0.6\n   * `staticcheck`: from 2020.1.6 to v0.1.2 (2020.2.2)\n   * `thelper` from 0.3.1 to 0.4.0\n   * `bodyclose`: bump to HEAD\n   * `go-err113`: bump to HEAD\n   * ⚠ `interfacer`: deprecated\n   * ⚠ `maligned`: deprecated (govet `fieldalignment` as replacement)\n   * `govet`: use same default linter as go vet\n   * `go-printf-func-name`: to `v0.0.0-20200119135958-7558a9eaa5af`\n   * `godox`: to `v0.0.0-20210227103229-6504466cf951`\n   * `asciicheck`: to `v0.0.0-20200416200610-e657995f937b`\n   * `wrapcheck`: to `v0.0.0-20201130113247-1683564d9756`\n   * `unparam`: to `v0.0.0-20210104141923-aac4ce9116a7`\n3. CLI: truncate multiline descriptions\n4. fix: new-from-rev for a large repository\n5. Support RelatedInformation for analysis Diagnostic\n6. use go1.16 to create binaries \n7. fix: MIPS release\n8. documentation:\n   * bump documentation dependencies\n   * fix `go-header` usage\n   * improve `gocritic` description\n   * update deprecated hyperlink for Sublime Text plugin\n   * add docs on using homebrew tap\n\n### January 2021\n\n1. new linters:\n   * `predeclared`: https://github.com/nishanths/predeclared\n   * `ifshort`: https://github.com/esimonov/ifshort\n2. update linters:\n   * `go-critic` from 0.5.2 to 0.5.3\n   * `thelper` from 0.1.0 to 0.2.1\n   * Validate `go-critic` settings\n   * `gofumpt` to v0.1.0\n   * `gci` to v0.2.8\n   * `go-mnd` to v2.3.1\n   * `gosec` from 2.5.0 to 2.6.1\n   * `godot` from 1.3.2 to 1.4.3\n   * `ifshort` to v1.0.1\n   * `rowserrcheck`: fix reports false positive\n3. fix: modules-download-mode support\n4. documentation:\n   * bump documentation dependencies\n\n### December 2020\n\n1. new linters:\n   * `forbidigo`: https://github.com/ashanbrown/forbidigo\n   * `makezero`: https://github.com/ashanbrown/makezero\n   * `thelper`: https://github.com/kulti/thelper\n2. update linters:\n   * `go-header` from v0.3.1 to v0.4.2\n   * `go-mnd` from v2.0.0 to v2.2.0\n   * `godot` from v1.3.0 to v1.3.2\n   * `gci` from v0.2.4 to v0.2.7\n   * `gomodguard` from v1.1.0 to v1.2.0\n   * `go-errorlint` from v0.0.0-20201006195004-351e25ade6e3 to v0.0.0-20201127212506-19bd8db6546f\n   * `gofumpt` from v0.0.0-20200802201014-ab5a8192947d to v0.0.0-20201129102820-5c11c50e9475\n   * `nolintlint` fix comment analysis. (#1571)\n3. result/processors: treat all non-Go source as special autogenerated files\n4. throw an error on panic. (#1540)\n5. resolve custom linters' path relative to config file directory (#1572)\n6. treat all non-Go source as special autogenerated files\n7. documentation:\n   * add settings examples for `gocritic` (#1562)\n   * removing reference to no-longer-existing linter-in-the-cloud (#1553)\n8. others:\n   * bump `gopkg.in/yaml.v2` from 2.3.0 to 2.4.0 (#1528)\n   * bump `gatsby-remark-responsive-iframe` in /docs (#1533)\n   * bump `gatsby-remark-images` from 3.3.29 to 3.6.0 in /docs (#1531)\n   * bump `ini` from 1.3.5 to 1.3.8 in /tools (#1560)\n   * bump `react-headroom` from 3.0.0 to 3.0.1 in /docs (#1532)\n   * bump `react-live` from 2.2.2 to 2.2.3 in /docs (#1534)\n   * bump `react` from 16.13.1 to 16.14.0 in /docs (#1481)\n   * Fix `forbidigo` linter name in reports (#1590)\n\n### November 2020\n\n1. new linters:\n   * `paralleltest`: https://github.com/kunwardeep/paralleltest\n2. update linters:\n   * `godot` from v0.4.9 to v1.3.0\n   * `exportloopref` from v0.1.7 to v0.1.8\n   * `gosec` from 2.4.0 to 2.5.0\n   * `goconst` using upstream https://github.com/jgautheron/goconst\n3. `DefaultExcludePatterns` should only be used for specified linter (#1494)\n4. unknown linter breaks //nolint (#1497)\n5. report all unknown linters at once (#1477)\n6. CI:\n   * fix Docker tag for Alpine build\n7. documentation:\n   * missing sort-results in the docs (#1514)\n   * add description of Homebrew's official formula (#1421)\n8. others:\n   * bump `golang.org/x/text` to v0.3.4 (#1293)\n   * bump `github.com/fatih/color` to from 1.9.0 to 1.10.0 (#1485)\n   * bump `lodash` from 4.17.15 to 4.17.19 in /.github/peril (#1252)\n   * bump `polished` from 3.6.6 to 4.0.3 in /docs (#1482)\n   * bump `gatsby-alias-imports` from 1.0.4 to 1.0.6 in /docs (#1479)\n   * bump `puppeteer` from 5.3.1 to 5.4.1 in /docs (#1480)\n   * bump `gatsby-remark-embedder` from 3.0.0 to 4.0.0 in /docs (#1478)\n\n### October 2020\n\n1. new linters:\n   * `exhaustivestruct`: https://github.com/mbilski/exhaustivestruct\n   * `go-errorlint`: https://github.com/polyfloyd/go-errorlint\n   * `tparallel`: https://github.com/moricho/tparallel\n   * `wrapcheck`: https://github.com/tomarrell/wrapcheck\n2. update linters:\n   * `honnef.co/go/tools` from 2020.1.5 to 2020.1.6\n   * `exhaustivestruct` from v1.0.1 to v1.1.0\n   * `exhaustive` to v0.1.0\n   * `gochecknoglobals`: use https://github.com/leighmcculloch/gochecknoglobals\n3. add support for powershell completion (#1408)\n4. add `.golangci.yaml` to list of configuration files searched on startup (#1364)\n5. support for only specifying default severity (#1396)\n6. documentation:\n   * mention macports installation procedure on macOS (#1352)\n   * sort linters (#1451)\n7. CI:\n   * add codeQL scanning (#1405)\n   * fix version details in Docker image (#1471)\n   * releasing docker image for arm64 (#1383)\n   * change interval for npm to monthly (#1424)\n8. others:\n   * use tag version for cobra (#1458)\n   * bump `nancy` to 1.0.1 (#1410)\n   * bump `gatsby-plugin-catch-links` in /docs (#1415)\n   * bump `gatsby-plugin-mdx` from 1.2.40 to 1.2.43 in /docs (#1419)\n   * bump `gatsby-plugin-sharp` from 2.6.31 to 2.6.40 in /docs (#1423)\n   * bump `gatsby-plugin-sitemap` from 2.4.12 to 2.4.14 in /docs (#1417)\n   * bump `github.com/mattn/go-colorable` from 0.1.7 to 0.1.8 (#1413)\n   * bump `github.com/sirupsen/logrus` from 1.6.0 to 1.7.0 (#1412)\n   * bump `github.com/sourcegraph/go-diff` from 0.6.0 to 0.6.1 (#1414)\n   * bump `golangci/golangci-lint-action` from v2 to v2.3.0  (#1447) (#1469)\n   * bump `puppeteer` from 3.3.0 to 5.3.1 in /docs (#1418)\n\n### September 2020\n\n1. update linters:\n   * `godot` from 0.4.8 to 0.4.9\n   * `exhaustive` from v0.0.0-20200708172631-8866003e3856 to v0.0.0-20200811152831-6cf413ae40e0\n   * `gofumpt` from v0.0.0-20200709182408-4fd085cb6d5f to v0.0.0-20200802201014-ab5a8192947d\n2. add support for fish completion (#1201)\n3. documentation:\n   * fix typo in performance docs (#1350)\n4. CI:\n   * prevent macos to be marked as passing upon failure (#1381)\n   * check only for go.mod file (#1397)\n   * check if go.mod and go.sum are up to dated (#1377)\n   * trigger Netlify (#1358)\n5. others:\n   * bump `github.com/sourcegraph/go-diff` from 0.5.3 to 0.6.0 (#1353)\n   * bump `github.com/valyala/quicktemplate` from 1.6.2 to 1.6.3 (#1385)\n   * ignore known dependency failure in nancy (#1378)\n   * bump `@mdx-js/mdx` from 1.6.16 to 1.6.18 in /docs (#1401)\n   * bump `gatsby` from 2.24.52 to 2.24.65 in /docs (#1400)\n   * bump `gatsby-plugin-canonical-urls` in /docs (#1390)\n   * bump `gatsby-plugin-google-analytics` in /docs (#1388)\n   * bump `gatsby-plugin-manifest` from 2.4.23 to 2.4.27 in /docs (#1355)\n   * bump `gatsby-plugin-mdx` from 1.2.35 to 1.2.40 in /docs (#1386)\n   * bump `gatsby-plugin-offline` from 3.2.23 to 3.2.27 in /docs (#1368)\n   * bump `gatsby-plugin-sharp` from 2.6.25 to 2.6.31 in /docs (#1354)\n   * bump `gatsby-plugin-sitemap` from 2.4.11 to 2.4.12 in /docs (#1344)\n   * bump `gatsby-remark-autolink-headers` in /docs (#1387)\n   * bump `gatsby-remark-images` from 3.3.25 to 3.3.28 in /docs (#1345)\n   * bump `gatsby-remark-images` from 3.3.28 to 3.3.29 in /docs (#1365)\n   * bump `gatsby-remark-mermaid` from 2.0.0 to 2.1.0 in /docs (#1369)\n   * bump `gatsby-source-filesystem` in /docs (#1366)\n   * bump `gatsby-source-filesystem` in /docs (#1389)\n   * bump `gatsby-transformer-sharp` in /docs (#1402)\n   * bump `gatsby-transformer-yaml` from 2.4.10 to 2.4.11 in /docs (#1367)\n   * bump `node-fetch` in /.github/contributors (#1363)\n   * bump `polished` from 3.6.5 to 3.6.6 in /docs (#1347)\n\n### August 2020\n\n1. new `nlreturn` linter: https://github.com/ssgreg/nlreturn\n2. new `gci` linter: https://github.com/daixiang0/gci\n3. support `latest` version of golangci-lint in golangci-lint-action\n4. update `gosec` linter from 2.3.0 to 2.4.0\n5. update `godot` linter from 0.4.2 to 0.4.8\n6. update `go-critic` from 0.5.0 to 0.5.2 (#1307)\n7. update `nlreturn` from 2.0.1 to 2.0.2 (#1287), 2.0.2 to 2.1.0 (#1327)\n8. update `gci` to v0.2.1 (#1292), to v0.2.2 (#1305), to v0.2.4 (#1337),\n9. update `funlen` from 0.0.2 to 0.0.3 (#1341)\n10. upgrade to golang 1.15 for smaller binary (#1303)\n11. support short and json formats for version cmd (#1315)\n12. add home directory to config file search paths (#1325)\n13. allow for serializing multiple golangci-lint invocations (#1302)\n\n### July 2020\n\n1. `gofumpt` linter:\n    * update linter\n    * add `extra-rules` option\n    * support auto-fixing\n2. upgrade `exhaustive` linter\n3. upgrade `exportloopref` linter\n4. improve 'no such linter' error message\n5. sorting result.Issues implementation\n6. enhancements in CI:\n    * Run `nancy` validation for all dependencies\n    * Move dependabot config to `.github` folder\n7. other\n    * bump `lodash` from 4.17.15 to 4.17.19 in /tools\n    * bump `golangci/golangci-lint-action` from v1.2.2 to v2\n    * bump `github.com/valyala/quicktemplate` from 1.5.0 to 1.5.1\n\n\n### June 2020\n\n1. Add new linters: `gofumpt`\n\n### May 2020\n\n1. Add new linters: `nolintlint`, `goerr113`\n2. Updated linters: `godot`, `staticcheck`\n3. Launch a [website](https://golangci-lint.run)\n\n### April 2020\n\n1. Add new linters: `testpackage`, `nestif`, `godot`, `gomodguard`, `asciicheck`\n2. Add GitHub Actions output format\n3. Update linters: `wsl`, `gomodguard`, `gosec`\n4. Support `disabled-tags` setting for `gocritic`\n5. Mitigate OOM and \"failed prerequisites\"\n6. Self-isolate due to unexpected pandemics\n7. Support case-sensitive excludes\n8. Allow granular re-enabling excludes by ID, e.g. `EXC0002`\n\n### September 2019\n\n1. Support go1.13\n2. Add new linters: `funlen`, `whitespace` (with auto-fix) and `godox`\n3. Update linters: `gochecknoglobals`, `scopelint`, `gosec`\n4. Provide pre-built binary for ARM and FreeBSD\n5. Fix false-positives in `unused`\n6. Support `--skip-dirs-use-default`\n7. Add support for bash completions\n\n### July 2019\n\n1. Fix parallel writes race condition\n2. Update bodyclose with fixed panic\n\n### June 2019\n\n1. Treat Go source files as a plain text by `misspell`: it allows detecting issues in strings, variable names, etc.\n2. Implement richer and more stable auto-fix of `misspell` issues.\n\n### May 2019\n\n1. Add [bodyclose](https://github.com/timakin/bodyclose) linter.\n2. Support junit-xml output.\n\n### April 2019\n\n1. Update go-critic, new checkers were added: badCall, dupImports, evalOrder, newDeref\n2. Fix staticcheck panic on packages that do not compile\n3. Make install script work on Windows\n4. Fix compatibility with the latest x/tools version and update golang.org/x/tools\n5. Correct import path of module sourcegraph/go-diff\n6. Fix `max-issues-per-linter` name\n7. Fix linting of preprocessed files (e.g. `*.qtpl.go`, goyacc)\n8. Enable auto-fixing when running via pre-commit\n\n### March 2019\n\n1. Support the newest `go vet` (with `go/analysis`)\n2. Support configuration of `go vet`: e.g. you can set print functions by `linters-settings.govet.settings.printf.funcs`\n3. Update megacheck (staticcheck) to 2019.1.1\n4. Add [information](https://github.com/golangci/golangci-lint#memory-usage-of-golangci-lint) about controlling space-time trade-off into README\n5. Exclude issues by source code line regexp by `issues.exclude-rules[i].source`\n6. Build and test on go 1.12\n7. Support `--color` option\n8. Update x/tools to fix c++ issues\n9. Include support for log level\n10. Sort linters list in help commands\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.32421875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>."
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.2109375,
          "content": ".DEFAULT_GOAL = test\n.PHONY: FORCE\n\n# enable consistent Go 1.12/1.13 GOPROXY behavior.\nexport GOPROXY = https://proxy.golang.org\n\nBINARY = golangci-lint\nifeq ($(OS),Windows_NT)\n\tBINARY := $(BINARY).exe\nendif\n\n# Build\n\nbuild: $(BINARY)\n.PHONY: build\n\nbuild_race:\n\tgo build -race -o $(BINARY) ./cmd/golangci-lint\n.PHONY: build_race\n\nclean:\n\trm -f $(BINARY)\n\trm -f test/path\n\trm -f tools/Dracula.itermcolors\n\trm -f tools/svg-term\n\trm -rf tools/node_modules\n.PHONY: clean\n\n# Test\ntest: export GOLANGCI_LINT_INSTALLED = true\ntest: CGO_ENABLED=1\ntest: build\n\tGL_TEST_RUN=1 ./$(BINARY) run -v\n\tGL_TEST_RUN=1 go test -v -parallel 2 ./...\n.PHONY: test\n\ntest_race: build_race\n\tGL_TEST_RUN=1 ./$(BINARY) run -v --timeout=5m\n.PHONY: test_race\n\n# ex: T=output.go make test_integration\n# the value of `T` is the name of a file from `test/testdata`\ntest_integration:\n\tGL_TEST_RUN=1 go test -v ./test -count 1 -run TestSourcesFromTestdata/$T\n.PHONY: test_integration\n\n# ex: T=multiple-issues-fix.go make test_integration_fix\n# the value of `T` is the name of a file from `test/testdata/fix`\ntest_integration_fix: build\n\tGL_TEST_RUN=1 go test -v ./test -count 1 -run TestFix/$T\n.PHONY: test_integration_fix\n\n# Maintenance\n\nfast_generate: assets/github-action-config.json\n.PHONY: fast_generate\n\nfast_check_generated:\n\t$(MAKE) --always-make fast_generate\n\tgit checkout -- go.mod go.sum # can differ between go1.16 and go1.17\n\tgit diff --exit-code # check no changes\n\n# Benchmark\n\n# Benchmark with a local version\n# LINTER=gosec VERSION=v1.59.0 make bench_local\nbench_local: hyperfine\n\t@:$(call check_defined, LINTER VERSION, 'missing parameter(s)')\n\t@./scripts/bench/bench_local.sh $(LINTER) $(VERSION)\n.PHONY: bench_local\n\n# Benchmark between 2 existing versions\n# make bench_version LINTER=gosec VERSION_OLD=v1.58.2 VERSION_NEW=v1.59.0\nbench_version: hyperfine\n\t@:$(call check_defined, LINTER VERSION_OLD VERSION_NEW, 'missing parameter(s)')\n\t@./scripts/bench/bench_version.sh $(LINTER) $(VERSION_OLD) $(VERSION_NEW)\n.PHONY: bench_version\n\nhyperfine:\n\t@which hyperfine > /dev/null || (echo \"Please install hyperfine https://github.com/sharkdp/hyperfine#installation\" && exit 1)\n.PHONY: hyperfine\n\n# Non-PHONY targets (real files)\n\n$(BINARY): FORCE\n\tgo build -o $@ ./cmd/golangci-lint\n\ndocs/static/demo.gif: FORCE\n\tvhs docs/golangci-lint.tape\n\nassets/github-action-config.json: FORCE $(BINARY)\n\t# go run ./scripts/gen_github_action_config/main.go $@\n\tcd ./scripts/gen_github_action_config/; go run ./main.go ../../$@\n\ngo.mod: FORCE\n\tgo mod tidy\n\tgo mod verify\ngo.sum: go.mod\n\nwebsite_copy_jsonschema:\n\t go run ./scripts/website/copy_jsonschema/\n.PHONY: website_copy_jsonschema\n\nwebsite_expand_templates:\n\tgo run ./scripts/website/expand_templates/\n.PHONY: website_expand_templates\n\nwebsite_dump_info:\n\tgo run ./scripts/website/dump_info/\n.PHONY: website_dump_info\n\n# Functions\n\n# Check that given variables are set and all have non-empty values,\n# die with an error otherwise.\n#\n# Params:\n#   1. Variable name(s) to test.\n#   2. (optional) Error message to print.\n#\n# https://stackoverflow.com/a/10858332/8228109\ncheck_defined = \\\n    $(strip $(foreach 1,$1, \\\n        $(call __check_defined,$1,$(strip $(value 2)))))\n__check_defined = \\\n    $(if $(value $1),, \\\n      $(error Undefined $1$(if $2, ($2))))\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.9873046875,
          "content": "<p align=\"center\">\n  <img alt=\"golangci-lint logo\" src=\"assets/go.png\" height=\"150\" />\n  <h3 align=\"center\">golangci-lint</h3>\n  <p align=\"center\">Fast linters runner for Go</p>\n</p>\n\n---\n\n`golangci-lint` is a fast Go linters runner.\n\nIt runs linters in parallel, uses caching, supports YAML configuration,\nintegrates with all major IDEs, and includes over a hundred linters.\n\n## Install `golangci-lint`\n\n- [On my machine](https://golangci-lint.run/welcome/install/#local-installation);\n- [On CI/CD systems](https://golangci-lint.run/welcome/install/#ci-installation).\n\n## Documentation\n\nDocumentation is hosted at https://golangci-lint.run.\n\n## Social Networks\n\n[![Join Slack](https://img.shields.io/badge/Slack-4285F4?logo=slack&logoColor=white)](https://gophers.slack.com/archives/CS0TBRKPC)\n[![Follow on Mastodon](https://img.shields.io/badge/Mastodon-6364FF?logo=mastodon&logoColor=white)](https://fosstodon.org/@golangcilint)\n[![Follow on Bluesky](https://img.shields.io/badge/Bluesky-0a7aff?logo=bluesky&logoColor=white)](https://bsky.app/profile/golangci-lint.run)\n[![Follow on Twitter](https://img.shields.io/badge/Twitter-1DA1F2?logo=x&logoColor=white)](https://twitter.com/golangci)\n\n## Supporting Us\n\n[![Open Collective backers and sponsors](https://img.shields.io/badge/OpenCollective-Donate-blue?logo=opencollective&style=for-the-badge)](https://opencollective.com/golangci-lint)\n[![GitHub Sponsors](https://img.shields.io/badge/GitHub-Donate-blue?logo=github&style=for-the-badge)](https://github.com/sponsors/golangci)\n[![Linter Authors](https://img.shields.io/badge/Linter_Authors-Donate-blue?style=for-the-badge)](https://golangci-lint.run/product/thanks/)\n\n`golangci-lint` is a free and open-source project built by volunteers.\n\nIf you value it, consider supporting us, we appreciate it! :heart:\n\n## Badges\n\n![Build Status](https://github.com/golangci/golangci-lint/workflows/CI/badge.svg)\n[![License](https://img.shields.io/github/license/golangci/golangci-lint)](/LICENSE)\n[![Release](https://img.shields.io/github/release/golangci/golangci-lint.svg)](https://github.com/golangci/golangci-lint/releases/latest)\n[![Docker](https://img.shields.io/docker/pulls/golangci/golangci-lint)](https://hub.docker.com/r/golangci/golangci-lint)\n[![GitHub Releases Stats of golangci-lint](https://img.shields.io/github/downloads/golangci/golangci-lint/total.svg?logo=github)](https://somsubhra.github.io/github-release-stats/?username=golangci&repository=golangci-lint)\n\n## Contributors\n\nThis project exists thanks to all the people who contribute. [How to contribute](https://golangci-lint.run/contributing/quick-start/).\n\n<a href=\"https://github.com/golangci/golangci-lint/graphs/contributors\">\n  <img src=\"https://opencollective.com/golangci-lint/contributors.svg?width=890&button=false&skip=golangcidev,CLAassistant,renovate,fossabot,golangcibot,kortschak,golangci-releaser,dependabot%5Bbot%5D\" />\n</a>\n\n## Stargazers over time\n\n[![Stargazers over time](https://starchart.cc/golangci/golangci-lint.svg)](https://starchart.cc/golangci/golangci-lint)\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 8.4892578125,
          "content": "module github.com/golangci/golangci-lint\n\ngo 1.22.1\n\nrequire (\n\t4d63.com/gocheckcompilerdirectives v1.2.1\n\t4d63.com/gochecknoglobals v0.2.1\n\tgithub.com/4meepo/tagalign v1.4.1\n\tgithub.com/Abirdcfly/dupword v0.1.3\n\tgithub.com/Antonboom/errname v1.0.0\n\tgithub.com/Antonboom/nilnil v1.0.1\n\tgithub.com/Antonboom/testifylint v1.5.2\n\tgithub.com/BurntSushi/toml v1.4.1-0.20240526193622-a339e1f7089c\n\tgithub.com/Crocmagnon/fatcontext v0.5.3\n\tgithub.com/Djarvur/go-err113 v0.0.0-20210108212216-aea10b59be24\n\tgithub.com/GaijinEntertainment/go-exhaustruct/v3 v3.3.0\n\tgithub.com/OpenPeeDeeP/depguard/v2 v2.2.0\n\tgithub.com/alecthomas/go-check-sumtype v0.3.1\n\tgithub.com/alexkohler/nakedret/v2 v2.0.5\n\tgithub.com/alexkohler/prealloc v1.0.0\n\tgithub.com/alingse/asasalint v0.0.11\n\tgithub.com/alingse/nilnesserr v0.1.2\n\tgithub.com/ashanbrown/forbidigo v1.6.0\n\tgithub.com/ashanbrown/makezero v1.2.0\n\tgithub.com/bkielbasa/cyclop v1.2.3\n\tgithub.com/blizzy78/varnamelen v0.8.0\n\tgithub.com/bombsimon/wsl/v4 v4.5.0\n\tgithub.com/breml/bidichk v0.3.2\n\tgithub.com/breml/errchkjson v0.4.0\n\tgithub.com/butuzov/ireturn v0.3.1\n\tgithub.com/butuzov/mirror v1.3.0\n\tgithub.com/catenacyber/perfsprint v0.7.1\n\tgithub.com/charithe/durationcheck v0.0.10\n\tgithub.com/ckaznocha/intrange v0.3.0\n\tgithub.com/curioswitch/go-reassign v0.3.0\n\tgithub.com/daixiang0/gci v0.13.5\n\tgithub.com/denis-tingaikin/go-header v0.5.0\n\tgithub.com/fatih/color v1.18.0\n\tgithub.com/firefart/nonamedreturns v1.0.5\n\tgithub.com/fzipp/gocyclo v0.6.0\n\tgithub.com/ghostiam/protogetter v0.3.9\n\tgithub.com/go-critic/go-critic v0.11.5\n\tgithub.com/go-viper/mapstructure/v2 v2.2.1\n\tgithub.com/go-xmlfmt/xmlfmt v1.1.3\n\tgithub.com/gofrs/flock v0.12.1\n\tgithub.com/golangci/dupl v0.0.0-20180902072040-3e9179ac440a\n\tgithub.com/golangci/go-printf-func-name v0.1.0\n\tgithub.com/golangci/gofmt v0.0.0-20250106114630-d62b90e6713d\n\tgithub.com/golangci/misspell v0.6.0\n\tgithub.com/golangci/plugin-module-register v0.1.1\n\tgithub.com/golangci/revgrep v0.5.3\n\tgithub.com/golangci/unconvert v0.0.0-20240309020433-c5143eacb3ed\n\tgithub.com/gordonklaus/ineffassign v0.1.0\n\tgithub.com/gostaticanalysis/forcetypeassert v0.1.0\n\tgithub.com/gostaticanalysis/nilerr v0.1.1\n\tgithub.com/hashicorp/go-version v1.7.0\n\tgithub.com/jgautheron/goconst v1.7.1\n\tgithub.com/jingyugao/rowserrcheck v1.1.1\n\tgithub.com/jjti/go-spancheck v0.6.4\n\tgithub.com/julz/importas v0.2.0\n\tgithub.com/karamaru-alpha/copyloopvar v1.1.0\n\tgithub.com/kisielk/errcheck v1.8.0\n\tgithub.com/kkHAIKE/contextcheck v1.1.5\n\tgithub.com/kulti/thelper v0.6.3\n\tgithub.com/kunwardeep/paralleltest v1.0.10\n\tgithub.com/kyoh86/exportloopref v0.1.11\n\tgithub.com/lasiar/canonicalheader v1.1.2\n\tgithub.com/ldez/exptostd v0.3.1\n\tgithub.com/ldez/gomoddirectives v0.6.0\n\tgithub.com/ldez/grignotin v0.8.0\n\tgithub.com/ldez/tagliatelle v0.7.1\n\tgithub.com/ldez/usetesting v0.4.2\n\tgithub.com/leonklingele/grouper v1.1.2\n\tgithub.com/macabu/inamedparam v0.1.3\n\tgithub.com/maratori/testableexamples v1.0.0\n\tgithub.com/maratori/testpackage v1.1.1\n\tgithub.com/matoous/godox v0.0.0-20230222163458-006bad1f9d26\n\tgithub.com/mattn/go-colorable v0.1.13\n\tgithub.com/mgechev/revive v1.5.1\n\tgithub.com/mitchellh/go-homedir v1.1.0\n\tgithub.com/moricho/tparallel v0.3.2\n\tgithub.com/nakabonne/nestif v0.3.1\n\tgithub.com/nishanths/exhaustive v0.12.0\n\tgithub.com/nishanths/predeclared v0.2.2\n\tgithub.com/nunnatsa/ginkgolinter v0.18.4\n\tgithub.com/pelletier/go-toml/v2 v2.2.3\n\tgithub.com/polyfloyd/go-errorlint v1.7.0\n\tgithub.com/quasilyte/go-ruleguard/dsl v0.3.22\n\tgithub.com/raeperd/recvcheck v0.2.0\n\tgithub.com/rogpeppe/go-internal v1.13.1\n\tgithub.com/ryancurrah/gomodguard v1.3.5\n\tgithub.com/ryanrolds/sqlclosecheck v0.5.1\n\tgithub.com/sanposhiho/wastedassign/v2 v2.1.0\n\tgithub.com/santhosh-tekuri/jsonschema/v6 v6.0.1\n\tgithub.com/sashamelentyev/interfacebloat v1.1.0\n\tgithub.com/sashamelentyev/usestdlibvars v1.28.0\n\tgithub.com/securego/gosec/v2 v2.21.4\n\tgithub.com/shirou/gopsutil/v4 v4.24.12\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/sivchari/containedctx v1.0.3\n\tgithub.com/sivchari/tenv v1.12.1\n\tgithub.com/sonatard/noctx v0.1.0\n\tgithub.com/sourcegraph/go-diff v0.7.0\n\tgithub.com/spf13/cobra v1.8.1\n\tgithub.com/spf13/pflag v1.0.5\n\tgithub.com/spf13/viper v1.12.0\n\tgithub.com/ssgreg/nlreturn/v2 v2.2.1\n\tgithub.com/stbenjam/no-sprintf-host-port v0.2.0\n\tgithub.com/stretchr/testify v1.10.0\n\tgithub.com/tdakkota/asciicheck v0.3.0\n\tgithub.com/tetafro/godot v1.4.20\n\tgithub.com/timakin/bodyclose v0.0.0-20241017074812-ed6a65f985e3\n\tgithub.com/timonwong/loggercheck v0.10.1\n\tgithub.com/tomarrell/wrapcheck/v2 v2.10.0\n\tgithub.com/tommy-muehle/go-mnd/v2 v2.5.1\n\tgithub.com/ultraware/funlen v0.2.0\n\tgithub.com/ultraware/whitespace v0.2.0\n\tgithub.com/uudashr/gocognit v1.2.0\n\tgithub.com/uudashr/iface v1.3.1\n\tgithub.com/valyala/quicktemplate v1.8.0\n\tgithub.com/xen0n/gosmopolitan v1.2.2\n\tgithub.com/yagipy/maintidx v1.0.0\n\tgithub.com/yeya24/promlinter v0.3.0\n\tgithub.com/ykadowak/zerologlint v0.1.5\n\tgitlab.com/bosi/decorder v0.4.2\n\tgo-simpler.org/musttag v0.13.0\n\tgo-simpler.org/sloglint v0.7.2\n\tgo.uber.org/automaxprocs v1.6.0\n\tgolang.org/x/exp v0.0.0-20240909161429-701f63a606c0\n\tgolang.org/x/mod v0.22.0\n\tgolang.org/x/sys v0.29.0\n\tgolang.org/x/tools v0.29.0\n\tgopkg.in/yaml.v3 v3.0.1\n\thonnef.co/go/tools v0.5.1\n\tmvdan.cc/gofumpt v0.7.0\n\tmvdan.cc/unparam v0.0.0-20240528143540-8a5130ca722f\n)\n\nrequire (\n\tgithub.com/Masterminds/semver/v3 v3.3.0 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/ccojocar/zxcvbn-go v1.0.2 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.1.2 // indirect\n\tgithub.com/chavacava/garif v0.1.0 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/ebitengine/purego v0.8.1 // indirect\n\tgithub.com/ettle/strcase v0.2.0 // indirect\n\tgithub.com/fatih/structtag v1.2.0 // indirect\n\tgithub.com/fsnotify/fsnotify v1.5.4 // indirect\n\tgithub.com/go-ole/go-ole v1.2.6 // indirect\n\tgithub.com/go-toolsmith/astcast v1.1.0 // indirect\n\tgithub.com/go-toolsmith/astcopy v1.1.0 // indirect\n\tgithub.com/go-toolsmith/astequal v1.2.0 // indirect\n\tgithub.com/go-toolsmith/astfmt v1.1.0 // indirect\n\tgithub.com/go-toolsmith/astp v1.1.0 // indirect\n\tgithub.com/go-toolsmith/strparse v1.1.0 // indirect\n\tgithub.com/go-toolsmith/typep v1.1.0 // indirect\n\tgithub.com/gobwas/glob v0.2.3 // indirect\n\tgithub.com/golang/protobuf v1.5.3 // indirect\n\tgithub.com/google/go-cmp v0.6.0 // indirect\n\tgithub.com/gostaticanalysis/analysisutil v0.7.1 // indirect\n\tgithub.com/gostaticanalysis/comment v1.4.2 // indirect\n\tgithub.com/hashicorp/go-immutable-radix/v2 v2.1.0 // indirect\n\tgithub.com/hashicorp/golang-lru/v2 v2.0.7 // indirect\n\tgithub.com/hashicorp/hcl v1.0.0 // indirect\n\tgithub.com/hexops/gotextdiff v1.0.3 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/lufia/plan9stats v0.0.0-20211012122336-39d0f177ccd0 // indirect\n\tgithub.com/magiconair/properties v1.8.6 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.16 // indirect\n\tgithub.com/matttproud/golang_protobuf_extensions v1.0.1 // indirect\n\tgithub.com/mitchellh/mapstructure v1.5.0 // indirect\n\tgithub.com/olekukonko/tablewriter v0.0.5 // indirect\n\tgithub.com/pelletier/go-toml v1.9.5 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/power-devops/perfstat v0.0.0-20210106213030-5aafc221ea8c // indirect\n\tgithub.com/prometheus/client_golang v1.12.1 // indirect\n\tgithub.com/prometheus/client_model v0.2.0 // indirect\n\tgithub.com/prometheus/common v0.32.1 // indirect\n\tgithub.com/prometheus/procfs v0.7.3 // indirect\n\tgithub.com/quasilyte/go-ruleguard v0.4.3-0.20240823090925-0fe6f58b47b1 // indirect\n\tgithub.com/quasilyte/gogrep v0.5.0 // indirect\n\tgithub.com/quasilyte/regex/syntax v0.0.0-20210819130434-b3f0c404a727 // indirect\n\tgithub.com/quasilyte/stdinfo v0.0.0-20220114132959-f7386bf02567 // indirect\n\tgithub.com/rivo/uniseg v0.4.7 // indirect\n\tgithub.com/spf13/afero v1.11.0 // indirect\n\tgithub.com/spf13/cast v1.5.0 // indirect\n\tgithub.com/spf13/jwalterweatherman v1.1.0 // indirect\n\tgithub.com/stretchr/objx v0.5.2 // indirect\n\tgithub.com/subosito/gotenv v1.4.1 // indirect\n\tgithub.com/tklauser/go-sysconf v0.3.12 // indirect\n\tgithub.com/tklauser/numcpus v0.6.1 // indirect\n\tgithub.com/valyala/bytebufferpool v1.0.0 // indirect\n\tgithub.com/yusufpapurcu/wmi v1.2.4 // indirect\n\tgo.uber.org/atomic v1.7.0 // indirect\n\tgo.uber.org/multierr v1.6.0 // indirect\n\tgo.uber.org/zap v1.24.0 // indirect\n\tgolang.org/x/exp/typeparams v0.0.0-20241108190413-2d47ceb2692f // indirect\n\tgolang.org/x/sync v0.10.0 // indirect\n\tgolang.org/x/text v0.20.0 // indirect\n\tgoogle.golang.org/protobuf v1.34.2 // indirect\n\tgopkg.in/ini.v1 v1.67.0 // indirect\n\tgopkg.in/yaml.v2 v2.4.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 93.2880859375,
          "content": "4d63.com/gocheckcompilerdirectives v1.2.1 h1:AHcMYuw56NPjq/2y615IGg2kYkBdTvOaojYCBcRE7MA=\n4d63.com/gocheckcompilerdirectives v1.2.1/go.mod h1:yjDJSxmDTtIHHCqX0ufRYZDL6vQtMG7tJdKVeWwsqvs=\n4d63.com/gochecknoglobals v0.2.1 h1:1eiorGsgHOFOuoOiJDy2psSrQbRdIHrlge0IJIkUgDc=\n4d63.com/gochecknoglobals v0.2.1/go.mod h1:KRE8wtJB3CXCsb1xy421JfTHIIbmT3U5ruxw2Qu8fSU=\ncloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=\ncloud.google.com/go v0.44.1/go.mod h1:iSa0KzasP4Uvy3f1mN/7PiObzGgflwredwwASm/v6AU=\ncloud.google.com/go v0.44.2/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=\ncloud.google.com/go v0.45.1/go.mod h1:RpBamKRgapWJb87xiFSdk4g1CME7QZg3uwTez+TSTjc=\ncloud.google.com/go v0.46.3/go.mod h1:a6bKKbmY7er1mI7TEI4lsAkts/mkhTSZK8w33B4RAg0=\ncloud.google.com/go v0.50.0/go.mod h1:r9sluTvynVuxRIOHXQEHMFffphuXHOMZMycpNR5e6To=\ncloud.google.com/go v0.52.0/go.mod h1:pXajvRH/6o3+F9jDHZWQ5PbGhn+o8w9qiu/CffaVdO4=\ncloud.google.com/go v0.53.0/go.mod h1:fp/UouUEsRkN6ryDKNW/Upv/JBKnv6WDthjR6+vze6M=\ncloud.google.com/go v0.54.0/go.mod h1:1rq2OEkV3YMf6n/9ZvGWI3GWw0VoqH/1x2nd8Is/bPc=\ncloud.google.com/go v0.56.0/go.mod h1:jr7tqZxxKOVYizybht9+26Z/gUq7tiRzu+ACVAMbKVk=\ncloud.google.com/go v0.57.0/go.mod h1:oXiQ6Rzq3RAkkY7N6t3TcE6jE+CIBBbA36lwQ1JyzZs=\ncloud.google.com/go v0.62.0/go.mod h1:jmCYTdRCQuc1PHIIJ/maLInMho30T/Y0M4hTdTShOYc=\ncloud.google.com/go v0.65.0/go.mod h1:O5N8zS7uWy9vkA9vayVHs65eM1ubvY4h553ofrNHObY=\ncloud.google.com/go/bigquery v1.0.1/go.mod h1:i/xbL2UlR5RvWAURpBYZTtm/cXjCha9lbfbpx4poX+o=\ncloud.google.com/go/bigquery v1.3.0/go.mod h1:PjpwJnslEMmckchkHFfq+HTD2DmtT67aNFKH1/VBDHE=\ncloud.google.com/go/bigquery v1.4.0/go.mod h1:S8dzgnTigyfTmLBfrtrhyYhwRxG72rYxvftPBK2Dvzc=\ncloud.google.com/go/bigquery v1.5.0/go.mod h1:snEHRnqQbz117VIFhE8bmtwIDY80NLUZUMb4Nv6dBIg=\ncloud.google.com/go/bigquery v1.7.0/go.mod h1://okPTzCYNXSlb24MZs83e2Do+h+VXtc4gLoIoXIAPc=\ncloud.google.com/go/bigquery v1.8.0/go.mod h1:J5hqkt3O0uAFnINi6JXValWIb1v0goeZM77hZzJN/fQ=\ncloud.google.com/go/datastore v1.0.0/go.mod h1:LXYbyblFSglQ5pkeyhO+Qmw7ukd3C+pD7TKLgZqpHYE=\ncloud.google.com/go/datastore v1.1.0/go.mod h1:umbIZjpQpHh4hmRpGhH4tLFup+FVzqBi1b3c64qFpCk=\ncloud.google.com/go/pubsub v1.0.1/go.mod h1:R0Gpsv3s54REJCy4fxDixWD93lHJMoZTyQ2kNxGRt3I=\ncloud.google.com/go/pubsub v1.1.0/go.mod h1:EwwdRX2sKPjnvnqCa270oGRyludottCI76h+R3AArQw=\ncloud.google.com/go/pubsub v1.2.0/go.mod h1:jhfEVHT8odbXTkndysNHCcx0awwzvfOlguIAii9o8iA=\ncloud.google.com/go/pubsub v1.3.1/go.mod h1:i+ucay31+CNRpDW4Lu78I4xXG+O1r/MAHgjpRVR+TSU=\ncloud.google.com/go/storage v1.0.0/go.mod h1:IhtSnM/ZTZV8YYJWCY8RULGVqBDmpoyjwiyrjsg+URw=\ncloud.google.com/go/storage v1.5.0/go.mod h1:tpKbwo567HUNpVclU5sGELwQWBDZ8gh0ZeosJ0Rtdos=\ncloud.google.com/go/storage v1.6.0/go.mod h1:N7U0C8pVQ/+NIKOBQyamJIeKQKkZ+mxpohlUTyfDhBk=\ncloud.google.com/go/storage v1.8.0/go.mod h1:Wv1Oy7z6Yz3DshWRJFhqM/UCfaWIRTdp0RXyy7KQOVs=\ncloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9ullr3+Kg0=\ndmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\ngithub.com/4meepo/tagalign v1.4.1 h1:GYTu2FaPGOGb/xJalcqHeD4il5BiCywyEYZOA55P6J4=\ngithub.com/4meepo/tagalign v1.4.1/go.mod h1:2H9Yu6sZ67hmuraFgfZkNcg5Py9Ch/Om9l2K/2W1qS4=\ngithub.com/Abirdcfly/dupword v0.1.3 h1:9Pa1NuAsZvpFPi9Pqkd93I7LIYRURj+A//dFd5tgBeE=\ngithub.com/Abirdcfly/dupword v0.1.3/go.mod h1:8VbB2t7e10KRNdwTVoxdBaxla6avbhGzb8sCTygUMhw=\ngithub.com/Antonboom/errname v1.0.0 h1:oJOOWR07vS1kRusl6YRSlat7HFnb3mSfMl6sDMRoTBA=\ngithub.com/Antonboom/errname v1.0.0/go.mod h1:gMOBFzK/vrTiXN9Oh+HFs+e6Ndl0eTFbtsRTSRdXyGI=\ngithub.com/Antonboom/nilnil v1.0.1 h1:C3Tkm0KUxgfO4Duk3PM+ztPncTFlOf0b2qadmS0s4xs=\ngithub.com/Antonboom/nilnil v1.0.1/go.mod h1:CH7pW2JsRNFgEh8B2UaPZTEPhCMuFowP/e8Udp9Nnb0=\ngithub.com/Antonboom/testifylint v1.5.2 h1:4s3Xhuv5AvdIgbd8wOOEeo0uZG7PbDKQyKY5lGoQazk=\ngithub.com/Antonboom/testifylint v1.5.2/go.mod h1:vxy8VJ0bc6NavlYqjZfmp6EfqXMtBgQ4+mhCojwC1P8=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/toml v1.4.1-0.20240526193622-a339e1f7089c h1:pxW6RcqyfI9/kWtOwnv/G+AzdKuy2ZrqINhenH4HyNs=\ngithub.com/BurntSushi/toml v1.4.1-0.20240526193622-a339e1f7089c/go.mod h1:ukJfTF/6rtPPRCnwkur4qwRxa8vTRFBF0uk2lLoLwho=\ngithub.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\ngithub.com/Crocmagnon/fatcontext v0.5.3 h1:zCh/wjc9oyeF+Gmp+V60wetm8ph2tlsxocgg/J0hOps=\ngithub.com/Crocmagnon/fatcontext v0.5.3/go.mod h1:XoCQYY1J+XTfyv74qLXvNw4xFunr3L1wkopIIKG7wGM=\ngithub.com/Djarvur/go-err113 v0.0.0-20210108212216-aea10b59be24 h1:sHglBQTwgx+rWPdisA5ynNEsoARbiCBOyGcJM4/OzsM=\ngithub.com/Djarvur/go-err113 v0.0.0-20210108212216-aea10b59be24/go.mod h1:4UJr5HIiMZrwgkSPdsjy2uOQExX/WEILpIrO9UPGuXs=\ngithub.com/GaijinEntertainment/go-exhaustruct/v3 v3.3.0 h1:/fTUt5vmbkAcMBt4YQiuC23cV0kEsN1MVMNqeOW43cU=\ngithub.com/GaijinEntertainment/go-exhaustruct/v3 v3.3.0/go.mod h1:ONJg5sxcbsdQQ4pOW8TGdTidT2TMAUy/2Xhr8mrYaao=\ngithub.com/Masterminds/semver/v3 v3.3.0 h1:B8LGeaivUe71a5qox1ICM/JLl0NqZSW5CHyL+hmvYS0=\ngithub.com/Masterminds/semver/v3 v3.3.0/go.mod h1:4V+yj/TJE1HU9XfppCwVMZq3I84lprf4nC11bSS5beM=\ngithub.com/OpenPeeDeeP/depguard/v2 v2.2.0 h1:vDfG60vDtIuf0MEOhmLlLLSzqaRM8EMcgJPdp74zmpA=\ngithub.com/OpenPeeDeeP/depguard/v2 v2.2.0/go.mod h1:CIzddKRvLBC4Au5aYP/i3nyaWQ+ClszLIuVocRiCYFQ=\ngithub.com/alecthomas/assert/v2 v2.11.0 h1:2Q9r3ki8+JYXvGsDyBXwH3LcJ+WK5D0gc5E8vS6K3D0=\ngithub.com/alecthomas/assert/v2 v2.11.0/go.mod h1:Bze95FyfUr7x34QZrjL+XP+0qgp/zg8yS+TtBj1WA3k=\ngithub.com/alecthomas/go-check-sumtype v0.3.1 h1:u9aUvbGINJxLVXiFvHUlPEaD7VDULsrxJb4Aq31NLkU=\ngithub.com/alecthomas/go-check-sumtype v0.3.1/go.mod h1:A8TSiN3UPRw3laIgWEUOHHLPa6/r9MtoigdlP5h3K/E=\ngithub.com/alecthomas/repr v0.4.0 h1:GhI2A8MACjfegCPVq9f1FLvIBS+DrQ2KQBFZP1iFzXc=\ngithub.com/alecthomas/repr v0.4.0/go.mod h1:Fr0507jx4eOXV7AlPV6AVZLYrLIuIeSOWtW57eE/O/4=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alecthomas/units v0.0.0-20190717042225-c3de453c63f4/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alecthomas/units v0.0.0-20190924025748-f65c72e2690d/go.mod h1:rBZYJk541a8SKzHPHnH3zbiI+7dagKZ0cgpgrD7Fyho=\ngithub.com/alexkohler/nakedret/v2 v2.0.5 h1:fP5qLgtwbx9EJE8dGEERT02YwS8En4r9nnZ71RK+EVU=\ngithub.com/alexkohler/nakedret/v2 v2.0.5/go.mod h1:bF5i0zF2Wo2o4X4USt9ntUWve6JbFv02Ff4vlkmS/VU=\ngithub.com/alexkohler/prealloc v1.0.0 h1:Hbq0/3fJPQhNkN0dR95AVrr6R7tou91y0uHG5pOcUuw=\ngithub.com/alexkohler/prealloc v1.0.0/go.mod h1:VetnK3dIgFBBKmg0YnD9F9x6Icjd+9cvfHR56wJVlKE=\ngithub.com/alingse/asasalint v0.0.11 h1:SFwnQXJ49Kx/1GghOFz1XGqHYKp21Kq1nHad/0WQRnw=\ngithub.com/alingse/asasalint v0.0.11/go.mod h1:nCaoMhw7a9kSJObvQyVzNTPBDbNpdocqrSP7t/cW5+I=\ngithub.com/alingse/nilnesserr v0.1.2 h1:Yf8Iwm3z2hUUrP4muWfW83DF4nE3r1xZ26fGWUKCZlo=\ngithub.com/alingse/nilnesserr v0.1.2/go.mod h1:1xJPrXonEtX7wyTq8Dytns5P2hNzoWymVUIaKm4HNFg=\ngithub.com/ashanbrown/forbidigo v1.6.0 h1:D3aewfM37Yb3pxHujIPSpTf6oQk9sc9WZi8gerOIVIY=\ngithub.com/ashanbrown/forbidigo v1.6.0/go.mod h1:Y8j9jy9ZYAEHXdu723cUlraTqbzjKF1MUyfOKL+AjcU=\ngithub.com/ashanbrown/makezero v1.2.0 h1:/2Lp1bypdmK9wDIq7uWBlDF1iMUpIIS4A+pF6C9IEUU=\ngithub.com/ashanbrown/makezero v1.2.0/go.mod h1:dxlPhHbDMC6N6xICzFBSK+4njQDdK8euNO0qjQMtGY4=\ngithub.com/benbjohnson/clock v1.1.0 h1:Q92kusRqC1XV2MjkWETPvjJVqKetz1OzxZB7mHJLju8=\ngithub.com/benbjohnson/clock v1.1.0/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/bkielbasa/cyclop v1.2.3 h1:faIVMIGDIANuGPWH031CZJTi2ymOQBULs9H21HSMa5w=\ngithub.com/bkielbasa/cyclop v1.2.3/go.mod h1:kHTwA9Q0uZqOADdupvcFJQtp/ksSnytRMe8ztxG8Fuo=\ngithub.com/blizzy78/varnamelen v0.8.0 h1:oqSblyuQvFsW1hbBHh1zfwrKe3kcSj0rnXkKzsQ089M=\ngithub.com/blizzy78/varnamelen v0.8.0/go.mod h1:V9TzQZ4fLJ1DSrjVDfl89H7aMnTvKkApdHeyESmyR7k=\ngithub.com/bombsimon/wsl/v4 v4.5.0 h1:iZRsEvDdyhd2La0FVi5k6tYehpOR/R7qIUjmKk7N74A=\ngithub.com/bombsimon/wsl/v4 v4.5.0/go.mod h1:NOQ3aLF4nD7N5YPXMruR6ZXDOAqLoM0GEpLwTdvmOSc=\ngithub.com/breml/bidichk v0.3.2 h1:xV4flJ9V5xWTqxL+/PMFF6dtJPvZLPsyixAoPe8BGJs=\ngithub.com/breml/bidichk v0.3.2/go.mod h1:VzFLBxuYtT23z5+iVkamXO386OB+/sVwZOpIj6zXGos=\ngithub.com/breml/errchkjson v0.4.0 h1:gftf6uWZMtIa/Is3XJgibewBm2ksAQSY/kABDNFTAdk=\ngithub.com/breml/errchkjson v0.4.0/go.mod h1:AuBOSTHyLSaaAFlWsRSuRBIroCh3eh7ZHh5YeelDIk8=\ngithub.com/butuzov/ireturn v0.3.1 h1:mFgbEI6m+9W8oP/oDdfA34dLisRFCj2G6o/yiI1yZrY=\ngithub.com/butuzov/ireturn v0.3.1/go.mod h1:ZfRp+E7eJLC0NQmk1Nrm1LOrn/gQlOykv+cVPdiXH5M=\ngithub.com/butuzov/mirror v1.3.0 h1:HdWCXzmwlQHdVhwvsfBb2Au0r3HyINry3bDWLYXiKoc=\ngithub.com/butuzov/mirror v1.3.0/go.mod h1:AEij0Z8YMALaq4yQj9CPPVYOyJQyiexpQEQgihajRfI=\ngithub.com/catenacyber/perfsprint v0.7.1 h1:PGW5G/Kxn+YrN04cRAZKC+ZuvlVwolYMrIyyTJ/rMmc=\ngithub.com/catenacyber/perfsprint v0.7.1/go.mod h1:/wclWYompEyjUD2FuIIDVKNkqz7IgBIWXIH3V0Zol50=\ngithub.com/ccojocar/zxcvbn-go v1.0.2 h1:na/czXU8RrhXO4EZme6eQJLR4PzcGsahsBOAwU6I3Vg=\ngithub.com/ccojocar/zxcvbn-go v1.0.2/go.mod h1:g1qkXtUSvHP8lhHp5GrSmTz6uWALGRMQdw6Qnz/hi60=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cespare/xxhash/v2 v2.1.2 h1:YRXhKfTDauu4ajMg1TPgFO5jnlC2HCbmLXMcTG5cbYE=\ngithub.com/cespare/xxhash/v2 v2.1.2/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/charithe/durationcheck v0.0.10 h1:wgw73BiocdBDQPik+zcEoBG/ob8uyBHf2iyoHGPf5w4=\ngithub.com/charithe/durationcheck v0.0.10/go.mod h1:bCWXb7gYRysD1CU3C+u4ceO49LoGOY1C1L6uouGNreQ=\ngithub.com/chavacava/garif v0.1.0 h1:2JHa3hbYf5D9dsgseMKAmc/MZ109otzgNFk5s87H9Pc=\ngithub.com/chavacava/garif v0.1.0/go.mod h1:XMyYCkEL58DF0oyW4qDjjnPWONs2HBqYKI+UIPD+Gww=\ngithub.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\ngithub.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\ngithub.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\ngithub.com/ckaznocha/intrange v0.3.0 h1:VqnxtK32pxgkhJgYQEeOArVidIPg+ahLP7WBOXZd5ZY=\ngithub.com/ckaznocha/intrange v0.3.0/go.mod h1:+I/o2d2A1FBHgGELbGxzIcyd3/9l9DuwjM8FsbSS3Lo=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/curioswitch/go-reassign v0.3.0 h1:dh3kpQHuADL3cobV/sSGETA8DOv457dwl+fbBAhrQPs=\ngithub.com/curioswitch/go-reassign v0.3.0/go.mod h1:nApPCCTtqLJN/s8HfItCcKV0jIPwluBOvZP+dsJGA88=\ngithub.com/daixiang0/gci v0.13.5 h1:kThgmH1yBmZSBCh1EJVxQ7JsHpm5Oms0AMed/0LaH4c=\ngithub.com/daixiang0/gci v0.13.5/go.mod h1:12etP2OniiIdP4q+kjUGrC/rUagga7ODbqsom5Eo5Yk=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/denis-tingaikin/go-header v0.5.0 h1:SRdnP5ZKvcO9KKRP1KJrhFR3RrlGuD+42t4429eC9k8=\ngithub.com/denis-tingaikin/go-header v0.5.0/go.mod h1:mMenU5bWrok6Wl2UsZjy+1okegmwQ3UgWl4V1D8gjlY=\ngithub.com/dlclark/regexp2 v1.11.0 h1:G/nrcoOa7ZXlpoa/91N3X7mM3r8eIlMBBJZvsz/mxKI=\ngithub.com/dlclark/regexp2 v1.11.0/go.mod h1:DHkYz0B9wPfa6wondMfaivmHpzrQ3v9q8cnmRbL6yW8=\ngithub.com/ebitengine/purego v0.8.1 h1:sdRKd6plj7KYW33EH5As6YKfe8m9zbN9JMrOjNVF/BE=\ngithub.com/ebitengine/purego v0.8.1/go.mod h1:iIjxzd6CiRiOG0UyXP+V1+jWqUXVjPKLAI0mRfJZTmQ=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/ettle/strcase v0.2.0 h1:fGNiVF21fHXpX1niBgk0aROov1LagYsOwV/xqKDKR/Q=\ngithub.com/ettle/strcase v0.2.0/go.mod h1:DajmHElDSaX76ITe3/VHVyMin4LWSJN5Z909Wp+ED1A=\ngithub.com/fatih/color v1.18.0 h1:S8gINlzdQ840/4pfAwic/ZE0djQEH3wM94VfqLTZcOM=\ngithub.com/fatih/color v1.18.0/go.mod h1:4FelSpRwEGDpQ12mAdzqdOukCy4u8WUtOY6lkT/6HfU=\ngithub.com/fatih/structtag v1.2.0 h1:/OdNE99OxoI/PqaW/SuSK9uxxT3f/tcSZgon/ssNSx4=\ngithub.com/fatih/structtag v1.2.0/go.mod h1:mBJUNpUnHmRKrKlQQlmCrh5PuhftFbNv8Ys4/aAZl94=\ngithub.com/firefart/nonamedreturns v1.0.5 h1:tM+Me2ZaXs8tfdDw3X6DOX++wMCOqzYUho6tUTYIdRA=\ngithub.com/firefart/nonamedreturns v1.0.5/go.mod h1:gHJjDqhGM4WyPt639SOZs+G89Ko7QKH5R5BhnO6xJhw=\ngithub.com/frankban/quicktest v1.14.3 h1:FJKSZTDHjyhriyC81FLQ0LY93eSai0ZyR/ZIkd3ZUKE=\ngithub.com/frankban/quicktest v1.14.3/go.mod h1:mgiwOwqx65TmIk1wJ6Q7wvnVMocbUorkibMOrVTHZps=\ngithub.com/fsnotify/fsnotify v1.5.4 h1:jRbGcIw6P2Meqdwuo0H1p6JVLbL5DHKAKlYndzMwVZI=\ngithub.com/fsnotify/fsnotify v1.5.4/go.mod h1:OVB6XrOHzAwXMpEM7uPOzcehqUV2UqJxmVXmkdnm1bU=\ngithub.com/fzipp/gocyclo v0.6.0 h1:lsblElZG7d3ALtGMx9fmxeTKZaLLpU8mET09yN4BBLo=\ngithub.com/fzipp/gocyclo v0.6.0/go.mod h1:rXPyn8fnlpa0R2csP/31uerbiVBugk5whMdlyaLkLoA=\ngithub.com/ghostiam/protogetter v0.3.9 h1:j+zlLLWzqLay22Cz/aYwTHKQ88GE2DQ6GkWSYFOI4lQ=\ngithub.com/ghostiam/protogetter v0.3.9/go.mod h1:WZ0nw9pfzsgxuRsPOFQomgDVSWtDLJRfQJEhsGbmQMA=\ngithub.com/go-critic/go-critic v0.11.5 h1:TkDTOn5v7EEngMxu8KbuFqFR43USaaH8XRJLz1jhVYA=\ngithub.com/go-critic/go-critic v0.11.5/go.mod h1:wu6U7ny9PiaHaZHcvMDmdysMqvDem162Rh3zWTrqk8M=\ngithub.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/kit v0.9.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/log v0.1.0/go.mod h1:zbhenjAZHb184qTLMA9ZjW7ThYL0H2mk7Q6pNt4vbaY=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=\ngithub.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-ole/go-ole v1.2.6 h1:/Fpf6oFPoeFik9ty7siob0G6Ke8QvQEuVcuChpwXzpY=\ngithub.com/go-ole/go-ole v1.2.6/go.mod h1:pprOEPIfldk/42T2oK7lQ4v4JSDwmV0As9GaiUsvbm0=\ngithub.com/go-quicktest/qt v1.101.0 h1:O1K29Txy5P2OK0dGo59b7b0LR6wKfIhttaAhHUyn7eI=\ngithub.com/go-quicktest/qt v1.101.0/go.mod h1:14Bz/f7NwaXPtdYEgzsx46kqSxVwTbzVZsDC26tQJow=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-task/slim-sprig/v3 v3.0.0 h1:sUs3vkvUymDpBKi3qH1YSqBQk9+9D/8M2mN1vB6EwHI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0/go.mod h1:W848ghGpv3Qj3dhTPRyJypKRiqCdHZiAzKg9hl15HA8=\ngithub.com/go-toolsmith/astcast v1.1.0 h1:+JN9xZV1A+Re+95pgnMgDboWNVnIMMQXwfBwLRPgSC8=\ngithub.com/go-toolsmith/astcast v1.1.0/go.mod h1:qdcuFWeGGS2xX5bLM/c3U9lewg7+Zu4mr+xPwZIB4ZU=\ngithub.com/go-toolsmith/astcopy v1.1.0 h1:YGwBN0WM+ekI/6SS6+52zLDEf8Yvp3n2seZITCUBt5s=\ngithub.com/go-toolsmith/astcopy v1.1.0/go.mod h1:hXM6gan18VA1T/daUEHCFcYiW8Ai1tIwIzHY6srfEAw=\ngithub.com/go-toolsmith/astequal v1.0.3/go.mod h1:9Ai4UglvtR+4up+bAD4+hCj7iTo4m/OXVTSLnCyTAx4=\ngithub.com/go-toolsmith/astequal v1.1.0/go.mod h1:sedf7VIdCL22LD8qIvv7Nn9MuWJruQA/ysswh64lffQ=\ngithub.com/go-toolsmith/astequal v1.2.0 h1:3Fs3CYZ1k9Vo4FzFhwwewC3CHISHDnVUPC4x0bI2+Cw=\ngithub.com/go-toolsmith/astequal v1.2.0/go.mod h1:c8NZ3+kSFtFY/8lPso4v8LuJjdJiUFVnSuU3s0qrrDY=\ngithub.com/go-toolsmith/astfmt v1.1.0 h1:iJVPDPp6/7AaeLJEruMsBUlOYCmvg0MoCfJprsOmcco=\ngithub.com/go-toolsmith/astfmt v1.1.0/go.mod h1:OrcLlRwu0CuiIBp/8b5PYF9ktGVZUjlNMV634mhwuQ4=\ngithub.com/go-toolsmith/astp v1.1.0 h1:dXPuCl6u2llURjdPLLDxJeZInAeZ0/eZwFJmqZMnpQA=\ngithub.com/go-toolsmith/astp v1.1.0/go.mod h1:0T1xFGz9hicKs8Z5MfAqSUitoUYS30pDMsRVIDHs8CA=\ngithub.com/go-toolsmith/pkgload v1.2.2 h1:0CtmHq/02QhxcF7E9N5LIFcYFsMR5rdovfqTtRKkgIk=\ngithub.com/go-toolsmith/pkgload v1.2.2/go.mod h1:R2hxLNRKuAsiXCo2i5J6ZQPhnPMOVtU+f0arbFPWCus=\ngithub.com/go-toolsmith/strparse v1.0.0/go.mod h1:YI2nUKP9YGZnL/L1/DLFBfixrcjslWct4wyljWhSRy8=\ngithub.com/go-toolsmith/strparse v1.1.0 h1:GAioeZUK9TGxnLS+qfdqNbA4z0SSm5zVNtCQiyP2Bvw=\ngithub.com/go-toolsmith/strparse v1.1.0/go.mod h1:7ksGy58fsaQkGQlY8WVoBFNyEPMGuJin1rfoPS4lBSQ=\ngithub.com/go-toolsmith/typep v1.1.0 h1:fIRYDyF+JywLfqzyhdiHzRop/GQDxxNhLGQ6gFUNHus=\ngithub.com/go-toolsmith/typep v1.1.0/go.mod h1:fVIw+7zjdsMxDA3ITWnH1yOiw1rnTQKCsF/sk2H/qig=\ngithub.com/go-viper/mapstructure/v2 v2.2.1 h1:ZAaOCxANMuZx5RCeg0mBdEZk7DZasvvZIxtHqx8aGss=\ngithub.com/go-viper/mapstructure/v2 v2.2.1/go.mod h1:oJDH3BJKyqBA2TXFhDsKDGDTlndYOZ6rGS0BRZIxGhM=\ngithub.com/go-xmlfmt/xmlfmt v1.1.3 h1:t8Ey3Uy7jDSEisW2K3somuMKIpzktkWptA0iFCnRUWY=\ngithub.com/go-xmlfmt/xmlfmt v1.1.3/go.mod h1:aUCEOzzezBEjDBbFBoSiya/gduyIiWYRP6CnSFIV8AM=\ngithub.com/gobwas/glob v0.2.3 h1:A4xDbljILXROh+kObIiy5kIaPYD8e96x1tgBhUI5J+Y=\ngithub.com/gobwas/glob v0.2.3/go.mod h1:d3Ez4x06l9bZtSvzIay5+Yzi0fmZzPgnTbPcKjJAkT8=\ngithub.com/gofrs/flock v0.12.1 h1:MTLVXXHf8ekldpJk3AKicLij9MdwOWkZ+a/jHHZby9E=\ngithub.com/gofrs/flock v0.12.1/go.mod h1:9zxTsyu5xtJ9DK+1tFZyibEV7y3uwDxPPfbxeeHCoD0=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.2.0/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.3.1/go.mod h1:sBzyDLLjw3U8JLTeZvSv8jJB+tU5PVekmnlKIyFUx0Y=\ngithub.com/golang/mock v1.4.0/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.1/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.3/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.4/go.mod h1:l3mdAwkq5BuhzHwde/uurv3sEJeZMXNpwsxVWU71h+4=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.4/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.5/go.mod h1:6O5/vntMXwX2lRkT1hjjk0nAC1IDOTvTlVgjlRvqsdk=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/golang/protobuf v1.5.3 h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg=\ngithub.com/golang/protobuf v1.5.3/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/golangci/dupl v0.0.0-20180902072040-3e9179ac440a h1:w8hkcTqaFpzKqonE9uMCefW1WDie15eSP/4MssdenaM=\ngithub.com/golangci/dupl v0.0.0-20180902072040-3e9179ac440a/go.mod h1:ryS0uhF+x9jgbj/N71xsEqODy9BN81/GonCZiOzirOk=\ngithub.com/golangci/go-printf-func-name v0.1.0 h1:dVokQP+NMTO7jwO4bwsRwLWeudOVUPPyAKJuzv8pEJU=\ngithub.com/golangci/go-printf-func-name v0.1.0/go.mod h1:wqhWFH5mUdJQhweRnldEywnR5021wTdZSNgwYceV14s=\ngithub.com/golangci/gofmt v0.0.0-20250106114630-d62b90e6713d h1:viFft9sS/dxoYY0aiOTsLKO2aZQAPT4nlQCsimGcSGE=\ngithub.com/golangci/gofmt v0.0.0-20250106114630-d62b90e6713d/go.mod h1:ivJ9QDg0XucIkmwhzCDsqcnxxlDStoTl89jDMIoNxKY=\ngithub.com/golangci/misspell v0.6.0 h1:JCle2HUTNWirNlDIAUO44hUsKhOFqGPoC4LZxlaSXDs=\ngithub.com/golangci/misspell v0.6.0/go.mod h1:keMNyY6R9isGaSAu+4Q8NMBwMPkh15Gtc8UCVoDtAWo=\ngithub.com/golangci/plugin-module-register v0.1.1 h1:TCmesur25LnyJkpsVrupv1Cdzo+2f7zX0H6Jkw1Ol6c=\ngithub.com/golangci/plugin-module-register v0.1.1/go.mod h1:TTpqoB6KkwOJMV8u7+NyXMrkwwESJLOkfl9TxR1DGFc=\ngithub.com/golangci/revgrep v0.5.3 h1:3tL7c1XBMtWHHqVpS5ChmiAAoe4PF/d5+ULzV9sLAzs=\ngithub.com/golangci/revgrep v0.5.3/go.mod h1:U4R/s9dlXZsg8uJmaR1GrloUr14D7qDl8gi2iPXJH8k=\ngithub.com/golangci/unconvert v0.0.0-20240309020433-c5143eacb3ed h1:IURFTjxeTfNFP0hTEi1YKjB/ub8zkpaOqFFMApi2EAs=\ngithub.com/golangci/unconvert v0.0.0-20240309020433-c5143eacb3ed/go.mod h1:XLXN8bNw4CGRPaqgl3bv/lhz7bsGPh4/xSaMTbo2vkQ=\ngithub.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.4.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.6/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.8/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=\ngithub.com/google/martian/v3 v3.0.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\ngithub.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20190515194954-54271f7e092f/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20191218002539-d4f498aebedc/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200212024743-f11f1df84d12/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200229191704-1ebb73c60ed3/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200430221834-fc25d7d30c6d/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200708004538-1a94d8640e99/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20240827171923-fa2c70bbbfe5 h1:5iH8iuqE5apketRbSFBy+X1V0o+l+8NF1avt4HWl7cA=\ngithub.com/google/pprof v0.0.0-20240827171923-fa2c70bbbfe5/go.mod h1:vavhavw2zAxS5dIdcRluK6cSGGPlZynqzFM8NdvU144=\ngithub.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\ngithub.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=\ngithub.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=\ngithub.com/gordonklaus/ineffassign v0.1.0 h1:y2Gd/9I7MdY1oEIt+n+rowjBNDcLQq3RsH5hwJd0f9s=\ngithub.com/gordonklaus/ineffassign v0.1.0/go.mod h1:Qcp2HIAYhR7mNUVSIxZww3Guk4it82ghYcEXIAk+QT0=\ngithub.com/gostaticanalysis/analysisutil v0.7.1 h1:ZMCjoue3DtDWQ5WyU16YbjbQEQ3VuzwxALrpYd+HeKk=\ngithub.com/gostaticanalysis/analysisutil v0.7.1/go.mod h1:v21E3hY37WKMGSnbsw2S/ojApNWb6C1//mXO48CXbVc=\ngithub.com/gostaticanalysis/comment v1.4.1/go.mod h1:ih6ZxzTHLdadaiSnF5WY3dxUoXfXAlTaRzuaNDlSado=\ngithub.com/gostaticanalysis/comment v1.4.2 h1:hlnx5+S2fY9Zo9ePo4AhgYsYHbM2+eAv8m/s1JiCd6Q=\ngithub.com/gostaticanalysis/comment v1.4.2/go.mod h1:KLUTGDv6HOCotCH8h2erHKmpci2ZoR8VPu34YA2uzdM=\ngithub.com/gostaticanalysis/forcetypeassert v0.1.0 h1:6eUflI3DiGusXGK6X7cCcIgVCpZ2CiZ1Q7jl6ZxNV70=\ngithub.com/gostaticanalysis/forcetypeassert v0.1.0/go.mod h1:qZEedyP/sY1lTGV1uJ3VhWZ2mqag3IkWsDHVbplHXak=\ngithub.com/gostaticanalysis/nilerr v0.1.1 h1:ThE+hJP0fEp4zWLkWHWcRyI2Od0p7DlgYG3Uqrmrcpk=\ngithub.com/gostaticanalysis/nilerr v0.1.1/go.mod h1:wZYb6YI5YAxxq0i1+VJbY0s2YONW0HU0GPE3+5PWN4A=\ngithub.com/gostaticanalysis/testutil v0.3.1-0.20210208050101-bfb5c8eec0e4/go.mod h1:D+FIZ+7OahH3ePw/izIEeH5I06eKs1IKI4Xr64/Am3M=\ngithub.com/gostaticanalysis/testutil v0.5.0 h1:Dq4wT1DdTwTGCQQv3rl3IvD5Ld0E6HiY+3Zh0sUGqw8=\ngithub.com/gostaticanalysis/testutil v0.5.0/go.mod h1:OLQSbuM6zw2EvCcXTz1lVq5unyoNft372msDY0nY5Hs=\ngithub.com/hashicorp/go-immutable-radix/v2 v2.1.0 h1:CUW5RYIcysz+D3B+l1mDeXrQ7fUvGGCwJfdASSzbrfo=\ngithub.com/hashicorp/go-immutable-radix/v2 v2.1.0/go.mod h1:hgdqLXA4f6NIjRVisM1TJ9aOJVNRqKZj+xDGF6m7PBw=\ngithub.com/hashicorp/go-uuid v1.0.3 h1:2gKiV6YVmrJ1i2CKKa9obLvRieoRGviZFL26PcT/Co8=\ngithub.com/hashicorp/go-uuid v1.0.3/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-version v1.2.1/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=\ngithub.com/hashicorp/go-version v1.7.0 h1:5tqGy27NaOTB8yJKUZELlFAS/LTKJkrmONwQKeRZfjY=\ngithub.com/hashicorp/go-version v1.7.0/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7 h1:a+bsQ5rvGLjzHuww6tVxozPZFVghXaHOwFs4luLUK2k=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7/go.mod h1:QeFd9opnmA6QUJc5vARoKUSoFhyfM2/ZepoAG6RGpeM=\ngithub.com/hashicorp/hcl v1.0.0 h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=\ngithub.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=\ngithub.com/hexops/gotextdiff v1.0.3 h1:gitA9+qJrrTCsiCl7+kh75nPqQt1cx4ZkudSTLoUqJM=\ngithub.com/hexops/gotextdiff v1.0.3/go.mod h1:pSWU5MAI3yDq+fZBTazCSJysOMbxWL1BSow5/V2vxeg=\ngithub.com/ianlancetaylor/demangle v0.0.0-20181102032728-5e5cf60278f6/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/jgautheron/goconst v1.7.1 h1:VpdAG7Ca7yvvJk5n8dMwQhfEZJh95kl/Hl9S1OI5Jkk=\ngithub.com/jgautheron/goconst v1.7.1/go.mod h1:aAosetZ5zaeC/2EfMeRswtxUFBpe2Hr7HzkgX4fanO4=\ngithub.com/jingyugao/rowserrcheck v1.1.1 h1:zibz55j/MJtLsjP1OF4bSdgXxwL1b+Vn7Tjzq7gFzUs=\ngithub.com/jingyugao/rowserrcheck v1.1.1/go.mod h1:4yvlZSDb3IyDTUZJUmpZfm2Hwok+Dtp+nu2qOq+er9c=\ngithub.com/jjti/go-spancheck v0.6.4 h1:Tl7gQpYf4/TMU7AT84MN83/6PutY21Nb9fuQjFTpRRc=\ngithub.com/jjti/go-spancheck v0.6.4/go.mod h1:yAEYdKJ2lRkDA8g7X+oKUHXOWVAXSBJRv04OhF+QUjk=\ngithub.com/jpillora/backoff v1.0.0/go.mod h1:J/6gKK9jxlEcS3zixgDgUAsiuZ7yrSoa/FX5e0EB2j4=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.10/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.11/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=\ngithub.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/julienschmidt/httprouter v1.3.0/go.mod h1:JR6WtHb+2LUe8TCKY3cZOxFyyO8IZAc4RVcycCCAKdM=\ngithub.com/julz/importas v0.2.0 h1:y+MJN/UdL63QbFJHws9BVC5RpA2iq0kpjrFajTGivjQ=\ngithub.com/julz/importas v0.2.0/go.mod h1:pThlt589EnCYtMnmhmRYY/qn9lCf/frPOK+WMx3xiJY=\ngithub.com/karamaru-alpha/copyloopvar v1.1.0 h1:x7gNyKcC2vRBO1H2Mks5u1VxQtYvFiym7fCjIP8RPos=\ngithub.com/karamaru-alpha/copyloopvar v1.1.0/go.mod h1:u7CIfztblY0jZLOQZgH3oYsJzpC2A7S6u/lfgSXHy0k=\ngithub.com/kisielk/errcheck v1.8.0 h1:ZX/URYa7ilESY19ik/vBmCn6zdGQLxACwjAcWbHlYlg=\ngithub.com/kisielk/errcheck v1.8.0/go.mod h1:1kLL+jV4e+CFfueBmI1dSK2ADDyQnlrnrY/FqKluHJQ=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/kkHAIKE/contextcheck v1.1.5 h1:CdnJh63tcDe53vG+RebdpdXJTc9atMgGqdx8LXxiilg=\ngithub.com/kkHAIKE/contextcheck v1.1.5/go.mod h1:O930cpht4xb1YQpK+1+AgoM3mFsvxr7uyFptcnWTYUA=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.3/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kulti/thelper v0.6.3 h1:ElhKf+AlItIu+xGnI990no4cE2+XaSu1ULymV2Yulxs=\ngithub.com/kulti/thelper v0.6.3/go.mod h1:DsqKShOvP40epevkFrvIwkCMNYxMeTNjdWL4dqWHZ6I=\ngithub.com/kunwardeep/paralleltest v1.0.10 h1:wrodoaKYzS2mdNVnc4/w31YaXFtsc21PCTdvWJ/lDDs=\ngithub.com/kunwardeep/paralleltest v1.0.10/go.mod h1:2C7s65hONVqY7Q5Efj5aLzRCNLjw2h4eMc9EcypGjcY=\ngithub.com/kyoh86/exportloopref v0.1.11 h1:1Z0bcmTypkL3Q4k+IDHMWTcnCliEZcaPiIe0/ymEyhQ=\ngithub.com/kyoh86/exportloopref v0.1.11/go.mod h1:qkV4UF1zGl6EkF1ox8L5t9SwyeBAZ3qLMd6up458uqA=\ngithub.com/lasiar/canonicalheader v1.1.2 h1:vZ5uqwvDbyJCnMhmFYimgMZnJMjwljN5VGY0VKbMXb4=\ngithub.com/lasiar/canonicalheader v1.1.2/go.mod h1:qJCeLFS0G/QlLQ506T+Fk/fWMa2VmBUiEI2cuMK4djI=\ngithub.com/ldez/exptostd v0.3.1 h1:90yWWoAKMFHeovTK8uzBms9Ppp8Du/xQ20DRO26Ymrw=\ngithub.com/ldez/exptostd v0.3.1/go.mod h1:iZBRYaUmcW5jwCR3KROEZ1KivQQp6PHXbDPk9hqJKCQ=\ngithub.com/ldez/gomoddirectives v0.6.0 h1:Jyf1ZdTeiIB4dd+2n4qw+g4aI9IJ6JyfOZ8BityWvnA=\ngithub.com/ldez/gomoddirectives v0.6.0/go.mod h1:TuwOGYoPAoENDWQpe8DMqEm5nIfjrxZXmxX/CExWyZ4=\ngithub.com/ldez/grignotin v0.8.0 h1:M9QeBN2qyPrqwqx+RhG7W2xKjyV7dRWKjNghbz7fkM0=\ngithub.com/ldez/grignotin v0.8.0/go.mod h1:uaVTr0SoZ1KBii33c47O1M8Jp3OP3YDwhZCmzT9GHEk=\ngithub.com/ldez/tagliatelle v0.7.1 h1:bTgKjjc2sQcsgPiT902+aadvMjCeMHrY7ly2XKFORIk=\ngithub.com/ldez/tagliatelle v0.7.1/go.mod h1:3zjxUpsNB2aEZScWiZTHrAXOl1x25t3cRmzfK1mlo2I=\ngithub.com/ldez/usetesting v0.4.2 h1:J2WwbrFGk3wx4cZwSMiCQQ00kjGR0+tuuyW0Lqm4lwA=\ngithub.com/ldez/usetesting v0.4.2/go.mod h1:eEs46T3PpQ+9RgN9VjpY6qWdiw2/QmfiDeWmdZdrjIQ=\ngithub.com/leonklingele/grouper v1.1.2 h1:o1ARBDLOmmasUaNDesWqWCIFH3u7hoFlM84YrjT3mIY=\ngithub.com/leonklingele/grouper v1.1.2/go.mod h1:6D0M/HVkhs2yRKRFZUoGjeDy7EZTfFBE9gl4kjmIGkA=\ngithub.com/lufia/plan9stats v0.0.0-20211012122336-39d0f177ccd0 h1:6E+4a0GO5zZEnZ81pIr0yLvtUWk2if982qA3F3QD6H4=\ngithub.com/lufia/plan9stats v0.0.0-20211012122336-39d0f177ccd0/go.mod h1:zJYVVT2jmtg6P3p1VtQj7WsuWi/y4VnjVBn7F8KPB3I=\ngithub.com/macabu/inamedparam v0.1.3 h1:2tk/phHkMlEL/1GNe/Yf6kkR/hkcUdAEY3L0hjYV1Mk=\ngithub.com/macabu/inamedparam v0.1.3/go.mod h1:93FLICAIk/quk7eaPPQvbzihUdn/QkGDwIZEoLtpH6I=\ngithub.com/magiconair/properties v1.8.6 h1:5ibWZ6iY0NctNGWo87LalDlEZ6R41TqbbDamhfG/Qzo=\ngithub.com/magiconair/properties v1.8.6/go.mod h1:y3VJvCyxH9uVvJTWEGAELF3aiYNyPKd5NZ3oSwXrF60=\ngithub.com/maratori/testableexamples v1.0.0 h1:dU5alXRrD8WKSjOUnmJZuzdxWOEQ57+7s93SLMxb2vI=\ngithub.com/maratori/testableexamples v1.0.0/go.mod h1:4rhjL1n20TUTT4vdh3RDqSizKLyXp7K2u6HgraZCGzE=\ngithub.com/maratori/testpackage v1.1.1 h1:S58XVV5AD7HADMmD0fNnziNHqKvSdDuEKdPD1rNTU04=\ngithub.com/maratori/testpackage v1.1.1/go.mod h1:s4gRK/ym6AMrqpOa/kEbQTV4Q4jb7WeLZzVhVVVOQMc=\ngithub.com/matoous/godox v0.0.0-20230222163458-006bad1f9d26 h1:gWg6ZQ4JhDfJPqlo2srm/LN17lpybq15AryXIRcWYLE=\ngithub.com/matoous/godox v0.0.0-20230222163458-006bad1f9d26/go.mod h1:1BELzlh859Sh1c6+90blK8lbYy0kwQf1bYlBhBysy1s=\ngithub.com/matryer/is v1.4.0 h1:sosSmIWwkYITGrxZ25ULNDeKiMNzFSr4V/eqBQP0PeE=\ngithub.com/matryer/is v1.4.0/go.mod h1:8I/i5uYgLzgsgEloJE1U6xx5HkBQpAZvepWuujKwMRU=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-runewidth v0.0.9/go.mod h1:H031xJmbD/WCDINGzjvQ9THkh0rPKHF+m2gUSrubnMI=\ngithub.com/mattn/go-runewidth v0.0.16 h1:E5ScNMtiwvlvB5paMFdw9p4kSQzbXFikJ5SQO6TULQc=\ngithub.com/mattn/go-runewidth v0.0.16/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1 h1:4hp9jkHxhMHkqkrB3Ix0jegS5sx/RkqARlsWZ6pIwiU=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/mgechev/revive v1.5.1 h1:hE+QPeq0/wIzJwOphdVyUJ82njdd8Khp4fUIHGZHW3M=\ngithub.com/mgechev/revive v1.5.1/go.mod h1:lC9AhkJIBs5zwx8wkudyHrU+IJkrEKmpCmGMnIJPk4o=\ngithub.com/mitchellh/go-homedir v1.1.0 h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=\ngithub.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=\ngithub.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/moricho/tparallel v0.3.2 h1:odr8aZVFA3NZrNybggMkYO3rgPRcqjeQUlBBFVxKHTI=\ngithub.com/moricho/tparallel v0.3.2/go.mod h1:OQ+K3b4Ln3l2TZveGCywybl68glfLEwFGqvnjok8b+U=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/nakabonne/nestif v0.3.1 h1:wm28nZjhQY5HyYPx+weN3Q65k6ilSBxDb8v5S81B81U=\ngithub.com/nakabonne/nestif v0.3.1/go.mod h1:9EtoZochLn5iUprVDmDjqGKPofoUEBL8U4Ngq6aY7OE=\ngithub.com/nishanths/exhaustive v0.12.0 h1:vIY9sALmw6T/yxiASewa4TQcFsVYZQQRUQJhKRf3Swg=\ngithub.com/nishanths/exhaustive v0.12.0/go.mod h1:mEZ95wPIZW+x8kC4TgC+9YCUgiST7ecevsVDTgc2obs=\ngithub.com/nishanths/predeclared v0.2.2 h1:V2EPdZPliZymNAn79T8RkNApBjMmVKh5XRpLm/w98Vk=\ngithub.com/nishanths/predeclared v0.2.2/go.mod h1:RROzoN6TnGQupbC+lqggsOlcgysk3LMK/HI84Mp280c=\ngithub.com/nunnatsa/ginkgolinter v0.18.4 h1:zmX4KUR+6fk/vhUFt8DOP6KwznekhkmVSzzVJve2vyM=\ngithub.com/nunnatsa/ginkgolinter v0.18.4/go.mod h1:AMEane4QQ6JwFz5GgjI5xLUM9S/CylO+UyM97fN2iBI=\ngithub.com/olekukonko/tablewriter v0.0.5 h1:P2Ga83D34wi1o9J6Wh1mRuqd4mF/x/lgBS7N7AbDhec=\ngithub.com/olekukonko/tablewriter v0.0.5/go.mod h1:hPp6KlRPjbx+hW8ykQs1w3UBbZlj6HuIJcUGPhkA7kY=\ngithub.com/onsi/ginkgo/v2 v2.20.2 h1:7NVCeyIWROIAheY21RLS+3j2bb52W0W82tkberYytp4=\ngithub.com/onsi/ginkgo/v2 v2.20.2/go.mod h1:K9gyxPIlb+aIvnZ8bd9Ak+YP18w3APlR+5coaZoE2ag=\ngithub.com/onsi/gomega v1.34.2 h1:pNCwDkzrsv7MS9kpaQvVb1aVLahQXyJ/Tv5oAZMI3i8=\ngithub.com/onsi/gomega v1.34.2/go.mod h1:v1xfxRgk0KIsG+QOdm7p8UosrOzPYRo60fd3B/1Dukc=\ngithub.com/otiai10/copy v1.2.0/go.mod h1:rrF5dJ5F0t/EWSYODDu4j9/vEeYHMkc8jt0zJChqQWw=\ngithub.com/otiai10/copy v1.14.0 h1:dCI/t1iTdYGtkvCuBG2BgR6KZa83PTclw4U5n2wAllU=\ngithub.com/otiai10/copy v1.14.0/go.mod h1:ECfuL02W+/FkTWZWgQqXPWZgW9oeKCSQ5qVfSc4qc4w=\ngithub.com/otiai10/curr v0.0.0-20150429015615-9b4961190c95/go.mod h1:9qAhocn7zKJG+0mI8eUu6xqkFDYS2kb2saOteoSB3cE=\ngithub.com/otiai10/curr v1.0.0/go.mod h1:LskTG5wDwr8Rs+nNQ+1LlxRjAtTZZjtJW4rMXl6j4vs=\ngithub.com/otiai10/mint v1.3.0/go.mod h1:F5AjcsTsWUqX+Na9fpHb52P8pcRX2CI6A3ctIT91xUo=\ngithub.com/otiai10/mint v1.3.1/go.mod h1:/yxELlJQ0ufhjUwhshSj+wFjZ78CnZ48/1wtmBH1OTc=\ngithub.com/pelletier/go-toml v1.9.5 h1:4yBQzkHv+7BHq2PQUZF3Mx0IYxG7LsP222s7Agd3ve8=\ngithub.com/pelletier/go-toml v1.9.5/go.mod h1:u1nR/EPcESfeI/szUZKdtJ0xRNbUoANCkoOuaOx1Y+c=\ngithub.com/pelletier/go-toml/v2 v2.2.3 h1:YmeHyLY8mFWbdkNWwpr+qIL2bEqT0o95WSdkNHvL12M=\ngithub.com/pelletier/go-toml/v2 v2.2.3/go.mod h1:MfCQTFTvCcUyyvvwm1+G6H/jORL20Xlb6rzQu9GuUkc=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/polyfloyd/go-errorlint v1.7.0 h1:Zp6lzCK4hpBDj8y8a237YK4EPrMXQWvOe3nGoH4pFrU=\ngithub.com/polyfloyd/go-errorlint v1.7.0/go.mod h1:dGWKu85mGHnegQ2SWpEybFityCg3j7ZbwsVUxAOk9gY=\ngithub.com/power-devops/perfstat v0.0.0-20210106213030-5aafc221ea8c h1:ncq/mPwQF4JjgDlrVEn3C11VoGHZN7m8qihwgMEtzYw=\ngithub.com/power-devops/perfstat v0.0.0-20210106213030-5aafc221ea8c/go.mod h1:OmDBASR4679mdNQnz2pUhc2G8CO2JrUAVFDRBDP/hJE=\ngithub.com/prashantv/gostub v1.1.0 h1:BTyx3RfQjRHnUWaGF9oQos79AlQ5k8WNktv7VGvVH4g=\ngithub.com/prashantv/gostub v1.1.0/go.mod h1:A5zLQHz7ieHGG7is6LLXLz7I8+3LZzsrV0P1IAHhP5U=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=\ngithub.com/prometheus/client_golang v1.7.1/go.mod h1:PY5Wy2awLA44sXw4AOSfFBetzPP4j5+D6mVACh+pe2M=\ngithub.com/prometheus/client_golang v1.11.0/go.mod h1:Z6t4BnS23TR94PD6BsDNk8yVqroYurpAkEiz0P2BEV0=\ngithub.com/prometheus/client_golang v1.12.1 h1:ZiaPsmm9uiBeaSMRznKsCDNtPCS0T3JVDGF+06gjBzk=\ngithub.com/prometheus/client_golang v1.12.1/go.mod h1:3Z9XVyYiZYEO+YQWt3RD2R3jrbd179Rt297l4aS6nDY=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.2.0 h1:uq5h0d+GuxiXLJLNABMgp2qUWDPiLvgCzz2dUR+/W/M=\ngithub.com/prometheus/client_model v0.2.0/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.10.0/go.mod h1:Tlit/dnDKsSWFlCLTWaA1cyBgKHSMdTB80sz/V91rCo=\ngithub.com/prometheus/common v0.26.0/go.mod h1:M7rCNAaPfAosfx8veZJCuw84e35h3Cfd9VFqTh1DIvc=\ngithub.com/prometheus/common v0.32.1 h1:hWIdL3N2HoUx3B8j3YN9mWor0qhY/NlEKZEaXxuIRh4=\ngithub.com/prometheus/common v0.32.1/go.mod h1:vu+V0TpY+O6vW9J44gczi3Ap/oXXR10b+M/gUGO4Hls=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.1.3/go.mod h1:lV6e/gmhEcM9IjHGsFOCxxuZ+z1YqCvr4OA4YeYWdaU=\ngithub.com/prometheus/procfs v0.6.0/go.mod h1:cz+aTbrPOrUb4q7XlbU9ygM+/jj0fzG6c1xBZuNvfVA=\ngithub.com/prometheus/procfs v0.7.3 h1:4jVXhlkAyzOScmCkXBTOLRLTz8EeU+eyjrwB/EPq0VU=\ngithub.com/prometheus/procfs v0.7.3/go.mod h1:cz+aTbrPOrUb4q7XlbU9ygM+/jj0fzG6c1xBZuNvfVA=\ngithub.com/quasilyte/go-ruleguard v0.4.3-0.20240823090925-0fe6f58b47b1 h1:+Wl/0aFp0hpuHM3H//KMft64WQ1yX9LdJY64Qm/gFCo=\ngithub.com/quasilyte/go-ruleguard v0.4.3-0.20240823090925-0fe6f58b47b1/go.mod h1:GJLgqsLeo4qgavUoL8JeGFNS7qcisx3awV/w9eWTmNI=\ngithub.com/quasilyte/go-ruleguard/dsl v0.3.22 h1:wd8zkOhSNr+I+8Qeciml08ivDt1pSXe60+5DqOpCjPE=\ngithub.com/quasilyte/go-ruleguard/dsl v0.3.22/go.mod h1:KeCP03KrjuSO0H1kTuZQCWlQPulDV6YMIXmpQss17rU=\ngithub.com/quasilyte/gogrep v0.5.0 h1:eTKODPXbI8ffJMN+W2aE0+oL0z/nh8/5eNdiO34SOAo=\ngithub.com/quasilyte/gogrep v0.5.0/go.mod h1:Cm9lpz9NZjEoL1tgZ2OgeUKPIxL1meE7eo60Z6Sk+Ng=\ngithub.com/quasilyte/regex/syntax v0.0.0-20210819130434-b3f0c404a727 h1:TCg2WBOl980XxGFEZSS6KlBGIV0diGdySzxATTWoqaU=\ngithub.com/quasilyte/regex/syntax v0.0.0-20210819130434-b3f0c404a727/go.mod h1:rlzQ04UMyJXu/aOvhd8qT+hvDrFpiwqp8MRXDY9szc0=\ngithub.com/quasilyte/stdinfo v0.0.0-20220114132959-f7386bf02567 h1:M8mH9eK4OUR4lu7Gd+PU1fV2/qnDNfzT635KRSObncs=\ngithub.com/quasilyte/stdinfo v0.0.0-20220114132959-f7386bf02567/go.mod h1:DWNGW8A4Y+GyBgPuaQJuWiy0XYftx4Xm/y5Jqk9I6VQ=\ngithub.com/raeperd/recvcheck v0.2.0 h1:GnU+NsbiCqdC2XX5+vMZzP+jAJC5fht7rcVTAhX74UI=\ngithub.com/raeperd/recvcheck v0.2.0/go.mod h1:n04eYkwIR0JbgD73wT8wL4JjPC3wm0nFtzBnWNocnYU=\ngithub.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rivo/uniseg v0.4.7 h1:WUdvkW8uEhrYfLC4ZzdpI2ztxP1I582+49Oc5Mq64VQ=\ngithub.com/rivo/uniseg v0.4.7/go.mod h1:FN3SvrM+Zdj16jyLfmOkMNblXMcoc8DfTHruCPUcx88=\ngithub.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\ngithub.com/rogpeppe/go-internal v1.13.1 h1:KvO1DLK/DRN07sQ1LQKScxyZJuNnedQ5/wKSR38lUII=\ngithub.com/rogpeppe/go-internal v1.13.1/go.mod h1:uMEvuHeurkdAXX61udpOXGD/AzZDWNMNyH2VO9fmH0o=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/ryancurrah/gomodguard v1.3.5 h1:cShyguSwUEeC0jS7ylOiG/idnd1TpJ1LfHGpV3oJmPU=\ngithub.com/ryancurrah/gomodguard v1.3.5/go.mod h1:MXlEPQRxgfPQa62O8wzK3Ozbkv9Rkqr+wKjSxTdsNJE=\ngithub.com/ryanrolds/sqlclosecheck v0.5.1 h1:dibWW826u0P8jNLsLN+En7+RqWWTYrjCB9fJfSfdyCU=\ngithub.com/ryanrolds/sqlclosecheck v0.5.1/go.mod h1:2g3dUjoS6AL4huFdv6wn55WpLIDjY7ZgUR4J8HOO/XQ=\ngithub.com/sanposhiho/wastedassign/v2 v2.1.0 h1:crurBF7fJKIORrV85u9UUpePDYGWnwvv3+A96WvwXT0=\ngithub.com/sanposhiho/wastedassign/v2 v2.1.0/go.mod h1:+oSmSC+9bQ+VUAxA66nBb0Z7N8CK7mscKTDYC6aIek4=\ngithub.com/santhosh-tekuri/jsonschema/v6 v6.0.1 h1:PKK9DyHxif4LZo+uQSgXNqs0jj5+xZwwfKHgph2lxBw=\ngithub.com/santhosh-tekuri/jsonschema/v6 v6.0.1/go.mod h1:JXeL+ps8p7/KNMjDQk3TCwPpBy0wYklyWTfbkIzdIFU=\ngithub.com/sashamelentyev/interfacebloat v1.1.0 h1:xdRdJp0irL086OyW1H/RTZTr1h/tMEOsumirXcOJqAw=\ngithub.com/sashamelentyev/interfacebloat v1.1.0/go.mod h1:+Y9yU5YdTkrNvoX0xHc84dxiN1iBi9+G8zZIhPVoNjQ=\ngithub.com/sashamelentyev/usestdlibvars v1.28.0 h1:jZnudE2zKCtYlGzLVreNp5pmCdOxXUzwsMDBkR21cyQ=\ngithub.com/sashamelentyev/usestdlibvars v1.28.0/go.mod h1:9nl0jgOfHKWNFS43Ojw0i7aRoS4j6EBye3YBhmAIRF8=\ngithub.com/securego/gosec/v2 v2.21.4 h1:Le8MSj0PDmOnHJgUATjD96PaXRvCpKC+DGJvwyy0Mlk=\ngithub.com/securego/gosec/v2 v2.21.4/go.mod h1:Jtb/MwRQfRxCXyCm1rfM1BEiiiTfUOdyzzAhlr6lUTA=\ngithub.com/shirou/gopsutil/v4 v4.24.12 h1:qvePBOk20e0IKA1QXrIIU+jmk+zEiYVVx06WjBRlZo4=\ngithub.com/shirou/gopsutil/v4 v4.24.12/go.mod h1:DCtMPAad2XceTeIAbGyVfycbYQNBGk2P8cvDi7/VN9o=\ngithub.com/shurcooL/go v0.0.0-20180423040247-9e1955d9fb6e/go.mod h1:TDJrrUr11Vxrven61rcy3hJMUqaf/CLWYhHNPmT14Lk=\ngithub.com/shurcooL/go-goon v0.0.0-20170922171312-37c2f522c041/go.mod h1:N5mDOmsrJOB+vfqUK+7DmDyjhSLIIBnXo9lvZJj3MWQ=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/sirupsen/logrus v1.6.0/go.mod h1:7uNnSEd1DgxDLC74fIahvMZmmYsHGZGEOFrfsX/uA88=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/sivchari/containedctx v1.0.3 h1:x+etemjbsh2fB5ewm5FeLNi5bUjK0V8n0RB+Wwfd0XE=\ngithub.com/sivchari/containedctx v1.0.3/go.mod h1:c1RDvCbnJLtH4lLcYD/GqwiBSSf4F5Qk0xld2rBqzJ4=\ngithub.com/sivchari/tenv v1.12.1 h1:+E0QzjktdnExv/wwsnnyk4oqZBUfuh89YMQT1cyuvSY=\ngithub.com/sivchari/tenv v1.12.1/go.mod h1:1LjSOUCc25snIr5n3DtGGrENhX3LuWefcplwVGC24mw=\ngithub.com/sonatard/noctx v0.1.0 h1:JjqOc2WN16ISWAjAk8M5ej0RfExEXtkEyExl2hLW+OM=\ngithub.com/sonatard/noctx v0.1.0/go.mod h1:0RvBxqY8D4j9cTTTWE8ylt2vqj2EPI8fHmrxHdsaZ2c=\ngithub.com/sourcegraph/go-diff v0.7.0 h1:9uLlrd5T46OXs5qpp8L/MTltk0zikUGi0sNNyCpA8G0=\ngithub.com/sourcegraph/go-diff v0.7.0/go.mod h1:iBszgVvyxdc8SFZ7gm69go2KDdt3ag071iBaWPF6cjs=\ngithub.com/spf13/afero v1.11.0 h1:WJQKhtpdm3v2IzqG8VMqrr6Rf3UYpEF239Jy9wNepM8=\ngithub.com/spf13/afero v1.11.0/go.mod h1:GH9Y3pIexgf1MTIWtNGyogA5MwRIDXGUr+hbWNoBjkY=\ngithub.com/spf13/cast v1.5.0 h1:rj3WzYc11XZaIZMPKmwP96zkFEnnAmV8s6XbB2aY32w=\ngithub.com/spf13/cast v1.5.0/go.mod h1:SpXXQ5YoyJw6s3/6cMTQuxvgRl3PCJiyaX9p6b155UU=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/jwalterweatherman v1.1.0 h1:ue6voC5bR5F8YxI5S67j9i582FU4Qvo2bmqnqMYADFk=\ngithub.com/spf13/jwalterweatherman v1.1.0/go.mod h1:aNWZUN0dPAAO/Ljvb5BEdw96iTZ0EXowPYD95IqWIGo=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/spf13/viper v1.12.0 h1:CZ7eSOd3kZoaYDLbXnmzgQI5RlciuXBMA+18HwHRfZQ=\ngithub.com/spf13/viper v1.12.0/go.mod h1:b6COn30jlNxbm/V2IqWiNWkJ+vZNiMNksliPCiuKtSI=\ngithub.com/ssgreg/nlreturn/v2 v2.2.1 h1:X4XDI7jstt3ySqGU86YGAURbxw3oTDPK9sPEi6YEwQ0=\ngithub.com/ssgreg/nlreturn/v2 v2.2.1/go.mod h1:E/iiPB78hV7Szg2YfRgyIrk1AD6JVMTRkkxBiELzh2I=\ngithub.com/stbenjam/no-sprintf-host-port v0.2.0 h1:i8pxvGrt1+4G0czLr/WnmyH7zbZ8Bg8etvARQ1rpyl4=\ngithub.com/stbenjam/no-sprintf-host-port v0.2.0/go.mod h1:eL0bQ9PasS0hsyTyfTjjG+E80QIyPnBVQbYZyv20Jfk=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2 h1:xuMeJ0Sdp5ZMRXx/aWO6RZxdr3beISkG5/G/aIRr3pY=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/subosito/gotenv v1.4.1 h1:jyEFiXpy21Wm81FBN71l9VoMMV8H8jG+qIK3GCpY6Qs=\ngithub.com/subosito/gotenv v1.4.1/go.mod h1:ayKnFf/c6rvx/2iiLrJUk1e6plDbT3edrFNGqEflhK0=\ngithub.com/tdakkota/asciicheck v0.3.0 h1:LqDGgZdholxZMaJgpM6b0U9CFIjDCbFdUF00bDnBKOQ=\ngithub.com/tdakkota/asciicheck v0.3.0/go.mod h1:KoJKXuX/Z/lt6XzLo8WMBfQGzak0SrAKZlvRr4tg8Ac=\ngithub.com/tenntenn/modver v1.0.1 h1:2klLppGhDgzJrScMpkj9Ujy3rXPUspSjAcev9tSEBgA=\ngithub.com/tenntenn/modver v1.0.1/go.mod h1:bePIyQPb7UeioSRkw3Q0XeMhYZSMx9B8ePqg6SAMGH0=\ngithub.com/tenntenn/text/transform v0.0.0-20200319021203-7eef512accb3 h1:f+jULpRQGxTSkNYKJ51yaw6ChIqO+Je8UqsTKN/cDag=\ngithub.com/tenntenn/text/transform v0.0.0-20200319021203-7eef512accb3/go.mod h1:ON8b8w4BN/kE1EOhwT0o+d62W65a6aPw1nouo9LMgyY=\ngithub.com/tetafro/godot v1.4.20 h1:z/p8Ek55UdNvzt4TFn2zx2KscpW4rWqcnUrdmvWJj7E=\ngithub.com/tetafro/godot v1.4.20/go.mod h1:2oVxTBSftRTh4+MVfUaUXR6bn2GDXCaMcOG4Dk3rfio=\ngithub.com/timakin/bodyclose v0.0.0-20241017074812-ed6a65f985e3 h1:y4mJRFlM6fUyPhoXuFg/Yu02fg/nIPFMOY8tOqppoFg=\ngithub.com/timakin/bodyclose v0.0.0-20241017074812-ed6a65f985e3/go.mod h1:mkjARE7Yr8qU23YcGMSALbIxTQ9r9QBVahQOBRfU460=\ngithub.com/timonwong/loggercheck v0.10.1 h1:uVZYClxQFpw55eh+PIoqM7uAOHMrhVcDoWDery9R8Lg=\ngithub.com/timonwong/loggercheck v0.10.1/go.mod h1:HEAWU8djynujaAVX7QI65Myb8qgfcZ1uKbdpg3ZzKl8=\ngithub.com/tklauser/go-sysconf v0.3.12 h1:0QaGUFOdQaIVdPgfITYzaTegZvdCjmYO52cSFAEVmqU=\ngithub.com/tklauser/go-sysconf v0.3.12/go.mod h1:Ho14jnntGE1fpdOqQEEaiKRpvIavV0hSfmBq8nJbHYI=\ngithub.com/tklauser/numcpus v0.6.1 h1:ng9scYS7az0Bk4OZLvrNXNSAO2Pxr1XXRAPyjhIx+Fk=\ngithub.com/tklauser/numcpus v0.6.1/go.mod h1:1XfjsgE2zo8GVw7POkMbHENHzVg3GzmoZ9fESEdAacY=\ngithub.com/tomarrell/wrapcheck/v2 v2.10.0 h1:SzRCryzy4IrAH7bVGG4cK40tNUhmVmMDuJujy4XwYDg=\ngithub.com/tomarrell/wrapcheck/v2 v2.10.0/go.mod h1:g9vNIyhb5/9TQgumxQyOEqDHsmGYcGsVMOx/xGkqdMo=\ngithub.com/tommy-muehle/go-mnd/v2 v2.5.1 h1:NowYhSdyE/1zwK9QCLeRb6USWdoif80Ie+v+yU8u1Zw=\ngithub.com/tommy-muehle/go-mnd/v2 v2.5.1/go.mod h1:WsUAkMJMYww6l/ufffCD3m+P7LEvr8TnZn9lwVDlgzw=\ngithub.com/ultraware/funlen v0.2.0 h1:gCHmCn+d2/1SemTdYMiKLAHFYxTYz7z9VIDRaTGyLkI=\ngithub.com/ultraware/funlen v0.2.0/go.mod h1:ZE0q4TsJ8T1SQcjmkhN/w+MceuatI6pBFSxxyteHIJA=\ngithub.com/ultraware/whitespace v0.2.0 h1:TYowo2m9Nfj1baEQBjuHzvMRbp19i+RCcRYrSWoFa+g=\ngithub.com/ultraware/whitespace v0.2.0/go.mod h1:XcP1RLD81eV4BW8UhQlpaR+SDc2givTvyI8a586WjW8=\ngithub.com/uudashr/gocognit v1.2.0 h1:3BU9aMr1xbhPlvJLSydKwdLN3tEUUrzPSSM8S4hDYRA=\ngithub.com/uudashr/gocognit v1.2.0/go.mod h1:k/DdKPI6XBZO1q7HgoV2juESI2/Ofj9AcHPZhBBdrTU=\ngithub.com/uudashr/iface v1.3.1 h1:bA51vmVx1UIhiIsQFSNq6GZ6VPTk3WNMZgRiCe9R29U=\ngithub.com/uudashr/iface v1.3.1/go.mod h1:4QvspiRd3JLPAEXBQ9AiZpLbJlrWWgRChOKDJEuQTdg=\ngithub.com/valyala/bytebufferpool v1.0.0 h1:GqA5TC/0021Y/b9FG4Oi9Mr3q7XYx6KllzawFIhcdPw=\ngithub.com/valyala/bytebufferpool v1.0.0/go.mod h1:6bBcMArwyJ5K/AmCkWv1jt77kVWyCJ6HpOuEn7z0Csc=\ngithub.com/valyala/quicktemplate v1.8.0 h1:zU0tjbIqTRgKQzFY1L42zq0qR3eh4WoQQdIdqCysW5k=\ngithub.com/valyala/quicktemplate v1.8.0/go.mod h1:qIqW8/igXt8fdrUln5kOSb+KWMaJ4Y8QUsfd1k6L2jM=\ngithub.com/xen0n/gosmopolitan v1.2.2 h1:/p2KTnMzwRexIW8GlKawsTWOxn7UHA+jCMF/V8HHtvU=\ngithub.com/xen0n/gosmopolitan v1.2.2/go.mod h1:7XX7Mj61uLYrj0qmeN0zi7XDon9JRAEhYQqAPLVNTeg=\ngithub.com/yagipy/maintidx v1.0.0 h1:h5NvIsCz+nRDapQ0exNv4aJ0yXSI0420omVANTv3GJM=\ngithub.com/yagipy/maintidx v1.0.0/go.mod h1:0qNf/I/CCZXSMhsRsrEPDZ+DkekpKLXAJfsTACwgXLk=\ngithub.com/yeya24/promlinter v0.3.0 h1:JVDbMp08lVCP7Y6NP3qHroGAO6z2yGKQtS5JsjqtoFs=\ngithub.com/yeya24/promlinter v0.3.0/go.mod h1:cDfJQQYv9uYciW60QT0eeHlFodotkYZlL+YcPQN+mW4=\ngithub.com/ykadowak/zerologlint v0.1.5 h1:Gy/fMz1dFQN9JZTPjv1hxEk+sRWm05row04Yoolgdiw=\ngithub.com/ykadowak/zerologlint v0.1.5/go.mod h1:KaUskqF3e/v59oPmdq1U1DnKcuHokl2/K1U4pmIELKg=\ngithub.com/yuin/goldmark v1.1.25/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.32/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngithub.com/yuin/goldmark v1.4.1/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngithub.com/yusufpapurcu/wmi v1.2.4 h1:zFUKzehAFReQwLys1b/iSMl+JQGSCSjtVqQn9bBrPo0=\ngithub.com/yusufpapurcu/wmi v1.2.4/go.mod h1:SBZ9tNy3G9/m5Oi98Zks0QjeHVDvuK0qfxQmPyzfmi0=\ngitlab.com/bosi/decorder v0.4.2 h1:qbQaV3zgwnBZ4zPMhGLW4KZe7A7NwxEhJx39R3shffo=\ngitlab.com/bosi/decorder v0.4.2/go.mod h1:muuhHoaJkA9QLcYHq4Mj8FJUwDZ+EirSHRiaTcTf6T8=\ngo-simpler.org/assert v0.9.0 h1:PfpmcSvL7yAnWyChSjOz6Sp6m9j5lyK8Ok9pEL31YkQ=\ngo-simpler.org/assert v0.9.0/go.mod h1:74Eqh5eI6vCK6Y5l3PI8ZYFXG4Sa+tkr70OIPJAUr28=\ngo-simpler.org/musttag v0.13.0 h1:Q/YAW0AHvaoaIbsPj3bvEI5/QFP7w696IMUpnKXQfCE=\ngo-simpler.org/musttag v0.13.0/go.mod h1:FTzIGeK6OkKlUDVpj0iQUXZLUO1Js9+mvykDQy9C5yM=\ngo-simpler.org/sloglint v0.7.2 h1:Wc9Em/Zeuu7JYpl+oKoYOsQSy2X560aVueCW/m6IijY=\ngo-simpler.org/sloglint v0.7.2/go.mod h1:US+9C80ppl7VsThQclkM7BkCHQAzuz8kHLsW3ppuluo=\ngo.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=\ngo.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=\ngo.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.3/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.4/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.uber.org/atomic v1.7.0 h1:ADUqmZGgLDDfbSL9ZmPxKTybcoEYHgpYfELNoN+7hsw=\ngo.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/automaxprocs v1.6.0 h1:O3y2/QNTOdbF+e/dpXNNW7Rx2hZ4sTIPyybbxyNqTUs=\ngo.uber.org/automaxprocs v1.6.0/go.mod h1:ifeIMSnPZuznNm6jmdzmU3/bfk01Fe2fotchwEFJ8r8=\ngo.uber.org/goleak v1.1.11 h1:wy28qYRKZgnJTxGxvye5/wgWr1EKjmUDGYox5mGlRlI=\ngo.uber.org/goleak v1.1.11/go.mod h1:cwTWslyiVhfpKIDGSZEM2HlOvcqm+tG4zioyIeLoqMQ=\ngo.uber.org/multierr v1.6.0 h1:y6IPFStTAIT5Ytl7/XYmHvzXQ7S3g/IeZW9hyZ5thw4=\ngo.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=\ngo.uber.org/zap v1.24.0 h1:FiJd5l1UOLj0wCgbSE0rwwXHzEdAZS6hiiSnxJN/D60=\ngo.uber.org/zap v1.24.0/go.mod h1:2kMP+WWQ8aoFoedH3T2sq6iJ2yDWpHbP0f6MQbS9Gkg=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.13.0/go.mod h1:y6Z2r+Rw4iayiXXAIxJIDAJ1zMW4yaTpebo8fPOliYc=\ngolang.org/x/crypto v0.14.0/go.mod h1:MVFd36DqK4CsrnJYDkBA3VC4m2GkXAM0PvzMCn4JQf4=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=\ngolang.org/x/exp v0.0.0-20190829153037-c13cbed26979/go.mod h1:86+5VVa7VpoJ4kLfm080zCjGlMRFzhUhsZKEZO7MGek=\ngolang.org/x/exp v0.0.0-20191030013958-a1ab85dbe136/go.mod h1:JXzH8nQsPlswgeRAPE3MuO9GYsAcnJvJ4vnMwN/5qkY=\ngolang.org/x/exp v0.0.0-20191129062945-2f5052295587/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20191227195350-da58074b4299/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200119233911-0405dc783f0a/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200207192155-f17229e696bd/go.mod h1:J/WKrq2StrnmMY6+EHIKF9dgMWnmCNThgcyBT1FY9mM=\ngolang.org/x/exp v0.0.0-20200224162631-6cc2880d07d6/go.mod h1:3jZMyOhIsHpP37uCMkUooju7aAi5cS1Q23tOzKc+0MU=\ngolang.org/x/exp v0.0.0-20240909161429-701f63a606c0 h1:e66Fs6Z+fZTbFBAxKfP3PALWBtpfqks2bwGcexMxgtk=\ngolang.org/x/exp v0.0.0-20240909161429-701f63a606c0/go.mod h1:2TbTHSBQa924w8M6Xs1QcRcFwyucIwBGpK1p2f1YFFY=\ngolang.org/x/exp/typeparams v0.0.0-20220428152302-39d4317da171/go.mod h1:AbB0pIl9nAr9wVwH+Z2ZpaocVmF5I4GyWCDIsVjR0bk=\ngolang.org/x/exp/typeparams v0.0.0-20230203172020-98cc5a0785f9/go.mod h1:AbB0pIl9nAr9wVwH+Z2ZpaocVmF5I4GyWCDIsVjR0bk=\ngolang.org/x/exp/typeparams v0.0.0-20241108190413-2d47ceb2692f h1:WTyX8eCCyfdqiPYkRGm0MqElSfYFH3yR1+rl/mct9sA=\ngolang.org/x/exp/typeparams v0.0.0-20241108190413-2d47ceb2692f/go.mod h1:AbB0pIl9nAr9wVwH+Z2ZpaocVmF5I4GyWCDIsVjR0bk=\ngolang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\ngolang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190409202823-959b441ac422/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190909230951-414d861bb4ac/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20191125180803-fdd1cda4f05f/go.mod h1:5qLYkcX4OjUUV8bRuDixDT3tpyyb+LUpUlRWLxfhWrs=\ngolang.org/x/lint v0.0.0-20200130185559-910be7a94367/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20200302205851-738671d3881b/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=\ngolang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=\ngolang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=\ngolang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.1.1-0.20191107180719-034126e5016b/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.1/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220106191415-9b9b3d81d5e3/go.mod h1:3p9vT2HGsQu2K1YbXdKPJLVgG5VJdoTa1poYQBtP1AY=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.7.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.9.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.12.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.13.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/mod v0.22.0 h1:D4nJWe9zXqHOmWqj4VMOJhvzj7bEZg4wEYa759z1pH4=\ngolang.org/x/mod v0.22.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190501004415-9ce7a6920f09/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190503192946-f4e77d36d62c/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190628185345-da137c7871d7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190724013045-ca1201d0de80/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20191209160850-c0dbc17a3553/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200114155413-6afb5195e5aa/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200222125558-5a598a2470a0/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200301022130-244492dfa37a/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200324143707-d3edc9973b7e/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200501053045-e0ff5e5a1de5/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200506145744-7e3656a0809f/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200513185701-a91f0712d120/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200520182314-0ba52f642ac2/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200625001655-4c5254603344/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200707034311-ab3426394381/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=\ngolang.org/x/net v0.0.0-20210525063256-abc453219eb5/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20211015210444-4f30a5c0130f/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.2.0/go.mod h1:KqCZLdyyvdV855qA2rE3GC2aiw5xGR5TEjj8smXukLY=\ngolang.org/x/net v0.5.0/go.mod h1:DivGGAXEgPSlEBzxGzZI+ZLohi+xUj054jfeKui00ws=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.8.0/go.mod h1:QVkue5JL9kW//ek3r6jTKnTFis1tRmNAW2P1shuFdJc=\ngolang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=\ngolang.org/x/net v0.15.0/go.mod h1:idbUs1IY1+zTqbi8yxTbhexhEEk5ur9LInksu6HrEpk=\ngolang.org/x/net v0.16.0/go.mod h1:NxSsAGuq816PNPmqtQdLE42eU2Fs7NoRIZrHJAlaCOE=\ngolang.org/x/net v0.34.0 h1:Mb7Mrk043xzHgnRM88suvJFwzVrRfHEHJEl5/71CKw0=\ngolang.org/x/net v0.34.0/go.mod h1:di0qlW3YNM5oh6GqDGQr92MyTozJPmybPK4Ev/Gm31k=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20191202225959-858c2ad4c8b6/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20210514164344-f6687ab2804c/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200317015054-43a5402ce75a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201207232520-09787c993a3a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.3.0/go.mod h1:FU7BRWz2tNW+3quACPkgCx/L+uEAv1htQ0V83Z9Rj+Y=\ngolang.org/x/sync v0.4.0/go.mod h1:FU7BRWz2tNW+3quACPkgCx/L+uEAv1htQ0V83Z9Rj+Y=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190502145724-3ef323f4f1fd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190507160741-ecd444e8653b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190606165138-5da285871e9c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190624142023-c5567b49c5d0/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190726091711-fc99dfbffb4e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190916202348-b4ddaad3f8a3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191001151750-bb3f8db39f24/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191228213918-04cbcbbfeed8/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200106162015-b016eb3dc98e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200113162924-86b910548bc1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200212091648-12a6c2dcc1e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200302150141-5c8b2ff67527/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200331124033-c3d80250170d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200501052902-10377860bb8e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200511232937-7e40ca221e25/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200515095857-1151b9dac4a9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200523222454-059865788121/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200615200032-f1bc736245b1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200625212154-ddb9806d33ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200803210538-64077c9b5642/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201204225414-ed752295db88/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210603081109-ebe580a85c40/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211019181941-9d821ace8654/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211105183446-c75c47738b0c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220114195835-da31bd327af9/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220412211240-33da011f77ad/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.2.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.4.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.11.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.12.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.13.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.29.0 h1:TPYlXGxvx1MGTn2GiZDhnjPA9wZzZeGKHHmKhHYvgaU=\ngolang.org/x/sys v0.29.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.2.0/go.mod h1:TVmDHMZPmdnySmBfhjOoOdhjzdE1h4u1VwSiw2l1Nuc=\ngolang.org/x/term v0.4.0/go.mod h1:9P2UbLfCdcvo3p/nzKvsmas4TnlujnuoV9hGgYzW1lQ=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.6.0/go.mod h1:m6U89DPEgQRMq3DNkDClhWw02AUbt2daBVO4cn4Hv9U=\ngolang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=\ngolang.org/x/term v0.12.0/go.mod h1:owVbMEjm3cBLCHdkQu9b1opXd4ETQWc3BhuQGKgXgvU=\ngolang.org/x/term v0.13.0/go.mod h1:LTmsnFJwVN6bCy1rVCoS+qHT1HhALEFxKncY3WNNh4U=\ngolang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.4.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.6.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.8.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.13.0/go.mod h1:TvPlkZtksWOMsz7fbANvkp4WM8x/WCo/om8BMLbz+aE=\ngolang.org/x/text v0.20.0 h1:gK/Kv2otX8gz+wn7Rmb3vT96ZwuoxnQlY+HlJVj7Qug=\ngolang.org/x/text v0.20.0/go.mod h1:D4IsuqiFMhST5bX19pQ9ikHC2GsaKyk/oF+pn3ducp4=\ngolang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190321232350-e250d351ecad/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190425150028-36563e24a262/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190506145303-2d16b83fe98c/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190606124116-d0a3d012864b/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190628153133-6cdbf07be9d0/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190816200558-6889da9d5479/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20190910044552-dd2b5c81c578/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20190911174233-4f2ddba30aff/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191113191852-77e3bb0ad9e7/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191115202509-3a792d9c32b2/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191125144606-a911d9008d1f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191130070609-6e064ea0cf2d/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191216173652-a0e659d51361/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20191227053925-7b8e75db28f4/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200117161641-43d50277825c/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200122220014-bf1340f18c4a/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200204074204-1cc6d1ef6c74/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200207183749-b753a1ba74fa/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200212150539-ea181f53ac56/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200224181240-023911ca70b2/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200227222343-706bc42d1f0d/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200304193943-95d2e580d8eb/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200312045724-11d5b4c81c7d/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200324003944-a576cf524670/go.mod h1:Sl4aGygMT6LrqrWclx+PTx3U+LnKx/seiNR+3G19Ar8=\ngolang.org/x/tools v0.0.0-20200329025819-fd4102a86c65/go.mod h1:Sl4aGygMT6LrqrWclx+PTx3U+LnKx/seiNR+3G19Ar8=\ngolang.org/x/tools v0.0.0-20200331025713-a30bf2db82d4/go.mod h1:Sl4aGygMT6LrqrWclx+PTx3U+LnKx/seiNR+3G19Ar8=\ngolang.org/x/tools v0.0.0-20200501065659-ab2804fb9c9d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200512131952-2bc93b1c0c88/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200515010526-7d3b6ebf133d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200618134242-20370b0cb4b2/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200724022722-7017fd6b1305/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200729194436-6467de6f59a7/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200804011535-6c149bb5ef0d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200820010801-b793a1359eac/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200825202427-b303f430e36d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20201023174141-c8cfbd0f21e6/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.1-0.20210205202024-ef80cdb6ec6d/go.mod h1:9bzcO0MWcOuT0tm1iBGzDVPshzfwoVvREIui8C+MHqU=\ngolang.org/x/tools v0.1.1-0.20210302220138-2ac05c832e1a/go.mod h1:9bzcO0MWcOuT0tm1iBGzDVPshzfwoVvREIui8C+MHqU=\ngolang.org/x/tools v0.1.1/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.1.5/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.1.10/go.mod h1:Uh6Zz+xoGYZom868N8YTex3t7RhtHDBrE8Gzo9bV56E=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.3.0/go.mod h1:/rWhSS2+zyEVwoJf8YAX6L2f0ntZ7Kn/mGgAWcipA5k=\ngolang.org/x/tools v0.5.0/go.mod h1:N+Kgy78s5I24c24dU8OfWNEotWjutIs8SnJvn5IDq+k=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/tools v0.7.0/go.mod h1:4pg6aUX35JBAogB10C9AtvVL+qowtN4pT3CGSQex14s=\ngolang.org/x/tools v0.13.0/go.mod h1:HvlwmtVNQAhOuCjW7xxvovg8wbNq7LwfXh/k7wXUl58=\ngolang.org/x/tools v0.14.0/go.mod h1:uYBEerGOWcJyEORxN+Ek8+TT266gXkNlHdJBwexUsBg=\ngolang.org/x/tools v0.29.0 h1:Xx0h3TtM9rzQpQuR4dKLrdglAmCEN5Oi+P74JdhdzXE=\ngolang.org/x/tools v0.29.0/go.mod h1:KMQVMRsVxU6nHCFXrBPhDB8XncLNLM0lIy/F14RP588=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=\ngoogle.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=\ngoogle.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.9.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.13.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.14.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.15.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.17.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.18.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.19.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.20.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.22.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.24.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.28.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.29.0/go.mod h1:Lcubydp8VUV7KeIHD9z2Bys/sm/vGKnG1UHuDBSrHWM=\ngoogle.golang.org/api v0.30.0/go.mod h1:QGmEvQ87FHZNiUVJkT14jQNYJ4ZJjdRF23ZXz5138Fc=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.6.1/go.mod h1:i06prIuMbXzDqacNJfV5OdTW448YApPu5ww/cMBSeb0=\ngoogle.golang.org/appengine v1.6.5/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.6/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190801165951-fa694d86fc64/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190911173649-1774047e7e51/go.mod h1:IbNlFCBrqXvoKpeg0TB2l7cyZUmoaFKYIwrEpbDKLA8=\ngoogle.golang.org/genproto v0.0.0-20191108220845-16a3f7862a1a/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191115194625-c23dd37a84c9/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191216164720-4f79533eabd1/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191230161307-f3c370f40bfb/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200115191322-ca5a22157cba/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200122232147-0452cf42e150/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200204135345-fa8e72b47b90/go.mod h1:GmwEX6Z4W5gMy59cAlVYjN9JhxgbQH6Gn+gFDQe2lzA=\ngoogle.golang.org/genproto v0.0.0-20200212174721-66ed5ce911ce/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200224152610-e50cd9704f63/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200228133532-8c2c7df3a383/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200305110556-506484158171/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200312145019-da6875a35672/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200331122359-1ee6d9798940/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200430143042-b979b6f78d84/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200511104702-f5ebc3bea380/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200515170657-fc4c6c6a6587/go.mod h1:YsZOwe1myG/8QRHRsmBRE1LrgQY60beZKjly0O1fX9U=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20200618031413-b414f8b61790/go.mod h1:jDfRM7FcilCzHH/e9qn6dsT145K34l5v+OpcnNgKAAA=\ngoogle.golang.org/genproto v0.0.0-20200729003335-053ba62fc06f/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200804131852-c06518451d9c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200825200019-8632dd797987/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=\ngoogle.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.1/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.28.0/go.mod h1:rpkK4SK4GF4Ach/+MFLZUBavHOvF2JJB5uozKKal+60=\ngoogle.golang.org/grpc v1.29.1/go.mod h1:itym6AZVZYACWQqET3MqgPpjcuV5QH3BxFS3IjizoKk=\ngoogle.golang.org/grpc v1.30.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.31.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.24.0/go.mod h1:r/3tXBNzIEhYS9I1OUVjXDlt8tc493IdKGjtUeSXeh4=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.34.2 h1:6xV6lTsCfpGD21XK49h7MhtcApnLqkfYgPcdHftf6hg=\ngoogle.golang.org/protobuf v1.34.2/go.mod h1:qYOHts0dSfpeUzUFpOMr/WGzszTmLH+DiWniOlNbLDw=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/ini.v1 v1.67.0 h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=\ngopkg.in/ini.v1 v1.67.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.5/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190418001031-e561f6794a2a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=\nhonnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nhonnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nhonnef.co/go/tools v0.5.1 h1:4bH5o3b5ZULQ4UrBmP+63W9r7qIkqJClEA9ko5YKx+I=\nhonnef.co/go/tools v0.5.1/go.mod h1:e9irvo83WDG9/irijV44wr3tbhcFeRnfpVlRqVwpzMs=\nmvdan.cc/gofumpt v0.7.0 h1:bg91ttqXmi9y2xawvkuMXyvAA/1ZGJqYAEGjXuP0JXU=\nmvdan.cc/gofumpt v0.7.0/go.mod h1:txVFJy/Sc/mvaycET54pV8SW8gWxTlUuGHVEcncmNUo=\nmvdan.cc/unparam v0.0.0-20240528143540-8a5130ca722f h1:lMpcwN6GxNbWtbpI1+xzFLSW8XzX0u72NttUGVFjO3U=\nmvdan.cc/unparam v0.0.0-20240528143540-8a5130ca722f/go.mod h1:RSLa7mKKCNeTTMHBw5Hsy2rfJmd6O2ivt9Dw9ZqCQpQ=\nrsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=\nrsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=\nrsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA=\n"
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 11.3193359375,
          "content": "#!/bin/sh\nset -e\n\nusage() {\n  this=$1\n  cat <<EOF\n$this: download go binaries for golangci/golangci-lint\n\nUsage: $this [-b <bindir>] [-d] [<tag>]\n  -b sets bindir or installation directory, Defaults to ./bin\n  -d turns on debug logging\n   <tag> is a tag from\n   https://github.com/golangci/golangci-lint/releases\n   If tag is missing, then the latest will be used.\n\nEOF\n  exit 2\n}\n\nparse_args() {\n  # BINDIR is ./bin unless set be ENV\n  # overridden by flag below\n\n  BINDIR=${BINDIR:-./bin}\n  while getopts \"b:dh?x\" arg; do\n    case \"$arg\" in\n      b) BINDIR=\"$OPTARG\" ;;\n      d) log_set_priority 10 ;;\n      h | \\?) usage \"$0\" ;;\n      x) set -x ;;\n    esac\n  done\n  shift $((OPTIND - 1))\n  TAG=$1\n}\n# this function wraps all the destructive operations\n# if a curl|bash cuts off the end of the script due to\n# network, either nothing will happen or will syntax error\n# out preventing half-done work\nexecute() {\n  tmpdir=$(mktemp -d)\n  log_debug \"downloading files into ${tmpdir}\"\n  http_download \"${tmpdir}/${TARBALL}\" \"${TARBALL_URL}\"\n  http_download \"${tmpdir}/${CHECKSUM}\" \"${CHECKSUM_URL}\"\n  hash_sha256_verify \"${tmpdir}/${TARBALL}\" \"${tmpdir}/${CHECKSUM}\"\n  srcdir=\"${tmpdir}/${NAME}\"\n  rm -rf \"${srcdir}\"\n  (cd \"${tmpdir}\" && untar \"${TARBALL}\")\n  test ! -d \"${BINDIR}\" && install -d \"${BINDIR}\"\n  for binexe in $BINARIES; do\n    if [ \"$OS\" = \"windows\" ]; then\n      binexe=\"${binexe}.exe\"\n    fi\n    install \"${srcdir}/${binexe}\" \"${BINDIR}/\"\n    log_info \"installed ${BINDIR}/${binexe}\"\n  done\n  rm -rf \"${tmpdir}\"\n}\nget_binaries() {\n  case \"$PLATFORM\" in\n    darwin/amd64) BINARIES=\"golangci-lint\" ;;\n    darwin/arm64) BINARIES=\"golangci-lint\" ;;\n    darwin/armv6) BINARIES=\"golangci-lint\" ;;\n    darwin/armv7) BINARIES=\"golangci-lint\" ;;\n    darwin/mips64) BINARIES=\"golangci-lint\" ;;\n    darwin/mips64le) BINARIES=\"golangci-lint\" ;;\n    darwin/ppc64le) BINARIES=\"golangci-lint\" ;;\n    darwin/s390x) BINARIES=\"golangci-lint\" ;;\n    freebsd/386) BINARIES=\"golangci-lint\" ;;\n    freebsd/amd64) BINARIES=\"golangci-lint\" ;;\n    freebsd/armv6) BINARIES=\"golangci-lint\" ;;\n    freebsd/armv7) BINARIES=\"golangci-lint\" ;;\n    freebsd/mips64) BINARIES=\"golangci-lint\" ;;\n    freebsd/mips64le) BINARIES=\"golangci-lint\" ;;\n    freebsd/ppc64le) BINARIES=\"golangci-lint\" ;;\n    freebsd/s390x) BINARIES=\"golangci-lint\" ;;\n    illumos/amd64) BINARIES=\"golangci-lint\" ;;\n    linux/386) BINARIES=\"golangci-lint\" ;;\n    linux/amd64) BINARIES=\"golangci-lint\" ;;\n    linux/arm64) BINARIES=\"golangci-lint\" ;;\n    linux/armv6) BINARIES=\"golangci-lint\" ;;\n    linux/armv7) BINARIES=\"golangci-lint\" ;;\n    linux/mips64) BINARIES=\"golangci-lint\" ;;\n    linux/mips64le) BINARIES=\"golangci-lint\" ;;\n    linux/ppc64le) BINARIES=\"golangci-lint\" ;;\n    linux/s390x) BINARIES=\"golangci-lint\" ;;\n    linux/riscv64) BINARIES=\"golangci-lint\" ;;\n    linux/loong64) BINARIES=\"golangci-lint\" ;;\n    netbsd/386) BINARIES=\"golangci-lint\" ;;\n    netbsd/amd64) BINARIES=\"golangci-lint\" ;;\n    netbsd/armv6) BINARIES=\"golangci-lint\" ;;\n    netbsd/armv7) BINARIES=\"golangci-lint\" ;;\n    windows/386) BINARIES=\"golangci-lint\" ;;\n    windows/amd64) BINARIES=\"golangci-lint\" ;;\n    windows/arm64) BINARIES=\"golangci-lint\" ;;\n    windows/armv6) BINARIES=\"golangci-lint\" ;;\n    windows/armv7) BINARIES=\"golangci-lint\" ;;\n    windows/mips64) BINARIES=\"golangci-lint\" ;;\n    windows/mips64le) BINARIES=\"golangci-lint\" ;;\n    windows/ppc64le) BINARIES=\"golangci-lint\" ;;\n    windows/s390x) BINARIES=\"golangci-lint\" ;;\n    *)\n      log_crit \"platform $PLATFORM is not supported.  Make sure this script is up-to-date and file request at https://github.com/${PREFIX}/issues/new\"\n      exit 1\n      ;;\n  esac\n}\ntag_to_version() {\n  if [ -z \"${TAG}\" ]; then\n    log_info \"checking GitHub for latest tag\"\n  else\n    log_info \"checking GitHub for tag '${TAG}'\"\n  fi\n  REALTAG=$(github_release \"$OWNER/$REPO\" \"${TAG}\") && true\n  if test -z \"$REALTAG\"; then\n    log_crit \"unable to find '${TAG}' - use 'latest' or see https://github.com/${PREFIX}/releases for details\"\n    exit 1\n  fi\n  # if version starts with 'v', remove it\n  TAG=\"$REALTAG\"\n  VERSION=${TAG#v}\n}\nadjust_format() {\n  # change format (tar.gz or zip) based on OS\n  case ${OS} in\n    windows) FORMAT=zip ;;\n  esac\n  true\n}\nadjust_os() {\n  # adjust archive name based on OS\n  true\n}\nadjust_arch() {\n  # adjust archive name based on ARCH\n  true\n}\n\ncat /dev/null <<EOF\n------------------------------------------------------------------------\nhttps://github.com/client9/shlib - portable posix shell functions\nPublic domain - http://unlicense.org\nhttps://github.com/client9/shlib/blob/master/LICENSE.md\nbut credit (and pull requests) appreciated.\n------------------------------------------------------------------------\nEOF\nis_command() {\n  command -v \"$1\" >/dev/null\n}\nechoerr() {\n  echo \"$@\" 1>&2\n}\n_logp=6\nlog_set_priority() {\n  _logp=\"$1\"\n}\nlog_priority() {\n  if test -z \"$1\"; then\n    echo \"$_logp\"\n    return\n  fi\n  [ \"$1\" -le \"$_logp\" ]\n}\nlog_tag() {\n  case $1 in\n    0) echo \"emerg\" ;;\n    1) echo \"alert\" ;;\n    2) echo \"crit\" ;;\n    3) echo \"err\" ;;\n    4) echo \"warning\" ;;\n    5) echo \"notice\" ;;\n    6) echo \"info\" ;;\n    7) echo \"debug\" ;;\n    *) echo \"$1\" ;;\n  esac\n}\nlog_debug() {\n  log_priority 7 || return 0\n  echoerr \"$(log_prefix)\" \"$(log_tag 7)\" \"$@\"\n}\nlog_info() {\n  log_priority 6 || return 0\n  echoerr \"$(log_prefix)\" \"$(log_tag 6)\" \"$@\"\n}\nlog_err() {\n  log_priority 3 || return 0\n  echoerr \"$(log_prefix)\" \"$(log_tag 3)\" \"$@\"\n}\nlog_crit() {\n  log_priority 2 || return 0\n  echoerr \"$(log_prefix)\" \"$(log_tag 2)\" \"$@\"\n}\nuname_os() {\n  os=$(uname -s | tr '[:upper:]' '[:lower:]')\n  case \"$os\" in\n    msys*) os=\"windows\" ;;\n    mingw*) os=\"windows\" ;;\n    cygwin*) os=\"windows\" ;;\n    win*) os=\"windows\" ;;\n    sunos) [ \"$(uname -o)\" = \"illumos\" ] && os=illumos ;;\n  esac\n  echo \"$os\"\n}\nuname_arch() {\n  arch=$(uname -m)\n  case $arch in\n    x86_64) arch=\"amd64\" ;;\n    x86) arch=\"386\" ;;\n    i686) arch=\"386\" ;;\n    i386) arch=\"386\" ;;\n    i86pc) arch=\"amd64\" ;;\n    aarch64) arch=\"arm64\" ;;\n    armv5*) arch=\"armv5\" ;;\n    armv6*) arch=\"armv6\" ;;\n    armv7*) arch=\"armv7\" ;;\n    loongarch64) arch=\"loong64\" ;;\n  esac\n  echo \"${arch}\"\n}\nuname_os_check() {\n  os=$(uname_os)\n  case \"$os\" in\n    darwin) return 0 ;;\n    dragonfly) return 0 ;;\n    freebsd) return 0 ;;\n    illumos) return 0;;\n    linux) return 0 ;;\n    android) return 0 ;;\n    nacl) return 0 ;;\n    netbsd) return 0 ;;\n    openbsd) return 0 ;;\n    plan9) return 0 ;;\n    solaris) return 0 ;;\n    windows) return 0 ;;\n  esac\n  log_crit \"uname_os_check '$(uname -s)' got converted to '$os' which is not a GOOS value.\"\n  return 1\n}\nuname_arch_check() {\n  arch=$(uname_arch)\n  case \"$arch\" in\n    386) return 0 ;;\n    amd64) return 0 ;;\n    arm64) return 0 ;;\n    armv5) return 0 ;;\n    armv6) return 0 ;;\n    armv7) return 0 ;;\n    ppc64) return 0 ;;\n    ppc64le) return 0 ;;\n    mips) return 0 ;;\n    mipsle) return 0 ;;\n    mips64) return 0 ;;\n    mips64le) return 0 ;;\n    s390x) return 0 ;;\n    riscv64) return 0 ;;\n    amd64p32) return 0 ;;\n    loong64) return 0 ;;\n  esac\n  log_crit \"uname_arch_check '$(uname -m)' got converted to '$arch' which is not a GOARCH value.\"\n  return 1\n}\nuntar() {\n  tarball=$1\n  case \"${tarball}\" in\n    *.tar.gz | *.tgz) tar --no-same-owner -xzf \"${tarball}\" ;;\n    *.tar) tar --no-same-owner -xf \"${tarball}\" ;;\n    *.zip) unzip \"${tarball}\" ;;\n    *)\n      log_err \"untar unknown archive format for ${tarball}\"\n      return 1\n      ;;\n  esac\n}\nhttp_download_curl() {\n  local_file=$1\n  source_url=$2\n  header=$3\n\n  # workaround https://github.com/curl/curl/issues/13845\n  curl_version=$(curl --version | head -n 1 | awk '{ print $2 }')\n  if [ \"$curl_version\" = \"8.8.0\" ]; then\n    log_debug \"http_download_curl curl $curl_version detected\"\n    if [ -z \"$header\" ]; then\n      curl -sL -o \"$local_file\" \"$source_url\"\n    else\n      curl -sL -H \"$header\" -o \"$local_file\" \"$source_url\"\n\n      nf=$(cat \"$local_file\" | jq -r '.error // \"\"')\n      if  [ ! -z \"$nf\" ]; then\n        log_debug \"http_download_curl received an error: $nf\"\n        return 1\n      fi\n    fi\n\n    return 0\n  fi\n\n  if [ -z \"$header\" ]; then\n    code=$(curl -w '%{http_code}' -sL -o \"$local_file\" \"$source_url\")\n  else\n    code=$(curl -w '%{http_code}' -sL -H \"$header\" -o \"$local_file\" \"$source_url\")\n  fi\n  if [ \"$code\" != \"200\" ]; then\n    log_debug \"http_download_curl received HTTP status $code\"\n    return 1\n  fi\n  return 0\n}\nhttp_download_wget() {\n  local_file=$1\n  source_url=$2\n  header=$3\n  if [ -z \"$header\" ]; then\n    wget -q -O \"$local_file\" \"$source_url\"\n  else\n    wget -q --header \"$header\" -O \"$local_file\" \"$source_url\"\n  fi\n}\nhttp_download() {\n  log_debug \"http_download $2\"\n  if is_command curl; then\n    http_download_curl \"$@\"\n    return\n  elif is_command wget; then\n    http_download_wget \"$@\"\n    return\n  fi\n  log_crit \"http_download unable to find wget or curl\"\n  return 1\n}\nhttp_copy() {\n  tmp=$(mktemp)\n  http_download \"${tmp}\" \"$1\" \"$2\" || return 1\n  body=$(cat \"$tmp\")\n  rm -f \"${tmp}\"\n  echo \"$body\"\n}\ngithub_release() {\n  owner_repo=$1\n  version=$2\n  test -z \"$version\" && version=\"latest\"\n  giturl=\"https://github.com/${owner_repo}/releases/${version}\"\n  json=$(http_copy \"$giturl\" \"Accept:application/json\")\n  test -z \"$json\" && return 1\n  version=$(echo \"$json\" | tr -s '\\n' ' ' | sed 's/.*\"tag_name\":\"//' | sed 's/\".*//')\n  test -z \"$version\" && return 1\n  echo \"$version\"\n}\nhash_sha256() {\n  TARGET=${1:-/dev/stdin}\n  if is_command gsha256sum; then\n    hash=$(gsha256sum \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command sha256sum; then\n    hash=$(sha256sum \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command shasum; then\n    hash=$(shasum -a 256 \"$TARGET\" 2>/dev/null) || return 1\n    echo \"$hash\" | cut -d ' ' -f 1\n  elif is_command openssl; then\n    hash=$(openssl -dst openssl dgst -sha256 \"$TARGET\") || return 1\n    echo \"$hash\" | cut -d ' ' -f a\n  else\n    log_crit \"hash_sha256 unable to find command to compute sha-256 hash\"\n    return 1\n  fi\n}\nhash_sha256_verify() {\n  TARGET=$1\n  checksums=$2\n  if [ -z \"$checksums\" ]; then\n    log_err \"hash_sha256_verify checksum file not specified in arg2\"\n    return 1\n  fi\n  BASENAME=${TARGET##*/}\n  want=$(grep \"${BASENAME}\" \"${checksums}\" 2>/dev/null | tr '\\t' ' ' | cut -d ' ' -f 1)\n  if [ -z \"$want\" ]; then\n    log_err \"hash_sha256_verify unable to find checksum for '${TARGET}' in '${checksums}'\"\n    return 1\n  fi\n  got=$(hash_sha256 \"$TARGET\")\n  if [ \"$want\" != \"$got\" ]; then\n    log_err \"hash_sha256_verify checksum for '$TARGET' did not verify ${want} vs $got\"\n    return 1\n  fi\n}\ncat /dev/null <<EOF\n------------------------------------------------------------------------\nEnd of functions from https://github.com/client9/shlib\n------------------------------------------------------------------------\nEOF\n\nPROJECT_NAME=\"golangci-lint\"\nOWNER=golangci\nREPO=\"golangci-lint\"\nBINARY=golangci-lint\nFORMAT=tar.gz\nOS=$(uname_os)\nARCH=$(uname_arch)\nPREFIX=\"$OWNER/$REPO\"\n\n# use in logging routines\nlog_prefix() {\n\techo \"$PREFIX\"\n}\nPLATFORM=\"${OS}/${ARCH}\"\nGITHUB_DOWNLOAD=https://github.com/${OWNER}/${REPO}/releases/download\n\nuname_os_check \"$OS\"\nuname_arch_check \"$ARCH\"\n\nparse_args \"$@\"\n\nget_binaries\n\ntag_to_version\n\nadjust_format\n\nadjust_os\n\nadjust_arch\n\nlog_info \"found version: ${VERSION} for ${TAG}/${OS}/${ARCH}\"\n\nNAME=${BINARY}-${VERSION}-${OS}-${ARCH}\nTARBALL=${NAME}.${FORMAT}\nTARBALL_URL=${GITHUB_DOWNLOAD}/${TAG}/${TARBALL}\nCHECKSUM=${PROJECT_NAME}-${VERSION}-checksums.txt\nCHECKSUM_URL=${GITHUB_DOWNLOAD}/${TAG}/${CHECKSUM}\n\n\nexecute\n"
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "jsonschema",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}