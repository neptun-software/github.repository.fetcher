{
  "metadata": {
    "timestamp": 1736568056902,
    "page": 194,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "prometheus/node_exporter",
      "stars": 11512,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.119140625,
          "content": ".build/\n.tarballs/\n\n!.build/linux-amd64\n!.build/linux-armv7\n!.build/linux-arm64\n!.build/linux-ppc64le\n!.build/linux-s390x\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4296875,
          "content": "# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n_obj\n_test\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\ndependencies-stamp\n/node_exporter\n/.build\n/.deps\n/.release\n/.tarballs\n\n# Intellij\n\n/.idea\n*.iml\n\n# Test files extracted from ttar\ncollector/fixtures/sys/\ncollector/fixtures/udev/\n\n/vendor\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 0.7060546875,
          "content": "linters:\n  enable:\n    - depguard\n    - goimports\n    - misspell\n    - revive\n\nissues:\n  exclude-rules:\n    - path: _test.go\n      linters:\n        - errcheck\n\nlinters-settings:\n  depguard:\n    rules:\n      no_exec_policy:\n        files:\n          - \"!$test\"\n        deny:\n          - pkg: \"os/exec\"\n            desc: \"Using os/exec to run sub processes it not allowed by policy\"\n  errcheck:\n    exclude-functions:\n      # Used in HTTP handlers, any error is handled by the server itself.\n      - (net/http.ResponseWriter).Write\n  revive:\n    rules:\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unused-parameter\n      - name: unused-parameter\n        severity: warning\n        disabled: true\n"
        },
        {
          "name": ".promu-cgo.yml",
          "type": "blob",
          "size": 0.7939453125,
          "content": "go:\n    # Whenever the Go version is updated here, .circle/config.yml and\n    # .promu.yml should also be updated.\n    version: 1.23\n    cgo: true\nrepository:\n    path: github.com/prometheus/node_exporter\nbuild:\n    binaries:\n        - name: node_exporter\n    ldflags: |\n        -X github.com/prometheus/common/version.Version={{.Version}}\n        -X github.com/prometheus/common/version.Revision={{.Revision}}\n        -X github.com/prometheus/common/version.Branch={{.Branch}}\n        -X github.com/prometheus/common/version.BuildUser={{user}}@{{host}}\n        -X github.com/prometheus/common/version.BuildDate={{date \"20060102-15:04:05\"}}\ntarball:\n    files:\n        - LICENSE\n        - NOTICE\ncrossbuild:\n    platforms:\n        - darwin/amd64\n        - darwin/arm64\n        - netbsd/amd64\n        - netbsd/386\n"
        },
        {
          "name": ".promu.yml",
          "type": "blob",
          "size": 0.7353515625,
          "content": "go:\n    # Whenever the Go version is updated here, .circle/config.yml and\n    # .promu-cgo.yml should also be updated.\n    version: 1.23\nrepository:\n    path: github.com/prometheus/node_exporter\nbuild:\n    binaries:\n        - name: node_exporter\n    ldflags: |\n        -X github.com/prometheus/common/version.Version={{.Version}}\n        -X github.com/prometheus/common/version.Revision={{.Revision}}\n        -X github.com/prometheus/common/version.Branch={{.Branch}}\n        -X github.com/prometheus/common/version.BuildUser={{user}}@{{host}}\n        -X github.com/prometheus/common/version.BuildDate={{date \"20060102-15:04:05\"}}\ntarball:\n    files:\n        - LICENSE\n        - NOTICE\ncrossbuild:\n    platforms:\n        - linux\n        - openbsd/amd64\n"
        },
        {
          "name": ".yamllint",
          "type": "blob",
          "size": 0.4521484375,
          "content": "---\nextends: default\nignore: |\n  **/node_modules\n\nrules:\n  braces:\n    max-spaces-inside: 1\n    level: error\n  brackets:\n    max-spaces-inside: 1\n    level: error\n  commas: disable\n  comments: disable\n  comments-indentation: disable\n  document-start: disable\n  indentation:\n    spaces: consistent\n    indent-sequences: consistent\n  key-duplicates:\n    ignore: |\n      config/testdata/section_key_dup.bad.yml\n  line-length: disable\n  truthy:\n    check-keys: false\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 35.0498046875,
          "content": "## master / unreleased\n\n* [CHANGE]\n* [FEATURE]\n* [ENHANCEMENT]\n* [BUGFIX]\n\n## 1.8.1 / 2024-05-16\n\n* [BUGFIX] Fix CPU seconds on Solaris #2963\n* [BUGFIX] Sign Darwin/MacOS binaries #3008\n* [BUGFIX] Fix pressure collector nil reference #3016\n\n## 1.8.0 / 2024-04-24\n\n* [CHANGE] exec_bsd: Fix labels for `vm.stats.sys.v_syscall` sysctl #2895\n* [CHANGE] diskstats: Ignore zram devices on linux systems #2898\n* [CHANGE] textfile: Avoid inconsistent help-texts  #2962\n* [CHANGE] os: Removed caching of modtime/filename of os-release file #2987\n* [FEATURE] xfrm: Add new collector #2866\n* [FEATURE] watchdog: Add new collector #2880\n* [ENHANCEMENT] cpu_vulnerabilities: Add mitigation information label #2806\n* [ENHANCEMENT] nfsd: Handle new `wdeleg_getattr` attribute #2810\n* [ENHANCEMENT] netstat: Add TCPOFOQueue to default netstat metrics #2867\n* [ENHANCEMENT] filesystem: surface device errors #2923\n* [ENHANCEMENT] os: Add support end parsing #2982\n* [ENHANCEMENT] zfs: Log mib when sysctl read fails on FreeBSD #2975\n* [ENHANCEMENT] fibre_channel: update procfs to take into account optional attributes #2933\n* [BUGFIX] cpu: Fix debug log in cpu collector #2857\n* [BUGFIX] hwmon: Fix hwmon nil ptr #2873\n* [BUGFIX] hwmon: Fix hwmon error capture #2915\n* [BUGFIX] zfs: Revert \"Add ZFS freebsd per dataset stats #2925\n* [BUGFIX] ethtool: Sanitize ethtool metric name keys #2940\n* [BUGFIX] fix: data race of NetClassCollector metrics initialization #2995\n\n## 1.7.0 / 2023-11-11\n\n* [FEATURE] Add ZFS freebsd per dataset stats #2753\n* [FEATURE] Add cpu vulnerabilities reporting from sysfs #2721\n* [ENHANCEMENT] Parallelize stat calls in Linux filesystem collector #1772\n* [ENHANCEMENT] Add missing linkspeeds to ethtool collector 2711\n* [ENHANCEMENT] Add CPU MHz as the value for `node_cpu_info` metric #2778\n* [ENHANCEMENT] Improve qdisc collector performance #2779\n* [ENHANCEMENT] Add include and exclude filter for hwmon collector #2699\n* [ENHANCEMENT] Optionally fetch ARP stats via rtnetlink instead of procfs #2777\n* [BUFFIX] Fix ZFS arcstats on FreeBSD 14.0+ 2754\n* [BUGFIX] Fallback to 32-bit stats in netdev #2757\n* [BUGFIX] Close btrfs.FS handle after use #2780\n* [BUGFIX] Move RO status before error return #2807\n* [BUFFIX] Fix `promhttp_metric_handler_errors_total` being always active #2808\n* [BUGFIX] Fix nfsd v4 index miss #2824\n\n## 1.6.1 / 2023-06-17\n\nRebuild with latest Go compiler bugfix release.\n\n## 1.6.0 / 2023-05-27\n\n* [CHANGE] Fix cpustat when some cpus are offline #2318\n* [CHANGE] Remove metrics of offline CPUs in CPU collector #2605\n* [CHANGE] Deprecate ntp collector #2603\n* [CHANGE] Remove bcache `cache_readaheads_totals` metrics #2583\n* [CHANGE] Deprecate supervisord collector #2685\n* [FEATURE] Enable uname collector on NetBSD #2559\n* [FEATURE] NetBSD support for the meminfo collector #2570\n* [FEATURE] NetBSD support for CPU collector #2626\n* [FEATURE] Add FreeBSD collector for netisr subsystem #2668\n* [FEATURE] Add softirqs collector #2669\n* [ENHANCEMENT] Add suspended as a `node_zfs_zpool_state` #2449\n* [ENHANCEMENT] Add administrative state of Linux network interfaces #2515\n* [ENHANCEMENT] Log current value of GOMAXPROCS #2537\n* [ENHANCEMENT] Add profiler options for perf collector #2542\n* [ENHANCEMENT] Allow root path as metrics path #2590\n* [ENHANCEMENT] Add cpu frequency governor metrics #2569\n* [ENHANCEMENT] Add new landing page #2622\n* [ENHANCEMENT] Reduce privileges needed for btrfs device stats #2634\n* [ENHANCEMENT] Add ZFS `memory_available_bytes` #2687\n* [ENHANCEMENT] Use `SCSI_IDENT_SERIAL` as serial in diskstats #2612\n* [ENHANCEMENT] Read missing from netlink netclass attributes from sysfs #2669\n* [BUGFIX] perf: fixes for automatically detecting the correct tracefs mountpoints #2553\n* [BUGFIX] Fix `thermal_zone` collector noise #2554\n* [BUGFIX] Fix a problem fetching the user wire count on FreeBSD #2584\n* [BUGFIX] interrupts: Fix fields on linux aarch64 #2631\n* [BUGFIX] Remove metrics of offline CPUs in CPU collector #2605\n* [BUGFIX] Fix OpenBSD filesystem collector string parsing #2637\n* [BUGFIX] Fix bad reporting of `node_cpu_seconds_total` in OpenBSD #2663\n\n## 1.5.0 / 2022-11-29\n\nNOTE: This changes the Go runtime \"GOMAXPROCS\" to 1. This is done to limit the\n  concurrency of the exporter to 1 CPU thread at a time in order to avoid a\n  race condition problem in the Linux kernel (#2500) and parallel IO issues\n  on nodes with high numbers of CPUs/CPU threads (#1880).\n\nNOTE: A command line arg has been changed from `--web.config` to `--web.config.file`.\n\n* [CHANGE] Default GOMAXPROCS to 1 #2530\n* [FEATURE] Add multiple listeners and systemd socket listener activation #2393\n* [ENHANCEMENT] Add RTNL version of netclass collector #2492, #2528\n* [BUGFIX] Fix diskstats exclude flags #2487\n* [BUGFIX] Bump go/x/crypt and go/x/net #2488\n* [BUGFIX] Fix hwmon label sanitizer #2504\n* [BUGFIX] Use native endianness when encoding InetDiagMsg #2508\n* [BUGFIX] Fix btrfs device stats always being zero #2516\n* [BUGFIX] Security: Update exporter-toolkit (CVE-2022-46146) #2531\n\n## 1.4.1 / 2022-11-29\n\n* [BUGFIX] Fix diskstats exclude flags #2487\n* [BUGFIX] Security: Update go/x/crypto and go/x/net (CVE-2022-27191 CVE-2022-27664) #2488\n* [BUGFIX] Security: Update exporter-toolkit (CVE-2022-46146) #2531\n\n## 1.4.0 / 2022-09-24\n\n* [CHANGE] Merge metrics descriptions in textfile collector #2475\n* [FEATURE] [node-mixin] Add darwin dashboard to mixin #2351\n* [FEATURE] Add \"isolated\" metric on cpu collector on linux #2251\n* [FEATURE] Add cgroup summary collector #2408\n* [FEATURE] Add selinux collector #2205\n* [FEATURE] Add slab info collector #2376\n* [FEATURE] Add sysctl collector #2425\n* [FEATURE] Also track the CPU Spin time for OpenBSD systems #1971\n* [FEATURE] Add support for MacOS version #2471\n* [ENHANCEMENT] [node-mixin] Add missing selectors #2426\n* [ENHANCEMENT] [node-mixin] Change current datasource to grafana's default #2281\n* [ENHANCEMENT] [node-mixin] Change disk graph to disk table #2364\n* [ENHANCEMENT] [node-mixin] Change io time units to %util #2375\n* [ENHANCEMENT] Ad user_wired_bytes and laundry_bytes on *bsd #2266\n* [ENHANCEMENT] Add additional vm_stat memory metrics for darwin #2240\n* [ENHANCEMENT] Add device filter flags to arp collector #2254\n* [ENHANCEMENT] Add diskstats include and exclude device flags #2417\n* [ENHANCEMENT] Add node_softirqs_total metric #2221\n* [ENHANCEMENT] Add rapl zone name label option #2401\n* [ENHANCEMENT] Add slabinfo collector #1799\n* [ENHANCEMENT] Allow user to select port on NTP server to query #2270\n* [ENHANCEMENT] collector/diskstats: Add labels and metrics from udev #2404\n* [ENHANCEMENT] Enable builds against older macOS SDK #2327\n* [ENHANCEMENT] qdisk-linux: Add exclude and include flags for interface name #2432\n* [ENHANCEMENT] systemd: Expose systemd minor version #2282\n* [ENHANCEMENT] Use netlink for tcpstat collector #2322\n* [ENHANCEMENT] Use netlink to get netdev stats #2074\n* [ENHANCEMENT] Add additional perf counters for stalled frontend/backend cycles #2191\n* [ENHANCEMENT] Add btrfs device error stats #2193\n* [BUGFIX] [node-mixin] Fix fsSpaceAvailableCriticalThreshold and fsSpaceAvailableWarning #2352\n* [BUGFIX] Fix concurrency issue in ethtool collector #2289\n* [BUGFIX] Fix concurrency issue in netdev collector #2267\n* [BUGFIX] Fix diskstat reads and write metrics for disks with different sector sizes #2311\n* [BUGFIX] Fix iostat on macos broken by deprecation warning #2292\n* [BUGFIX] Fix NodeFileDescriptorLimit alerts #2340\n* [BUGFIX] Sanitize rapl zone names #2299\n* [BUGFIX] Add file descriptor close safely in test #2447\n* [BUGFIX] Fix race condition in os_release.go #2454\n* [BUGFIX] Skip ZFS IO metrics if their paths are missing #2451\n\n## 1.3.1 / 2021-12-01\n\n* [BUGFIX] Handle nil CPU thermal power status on M1 #2218\n* [BUGFIX] bsd: Ignore filesystems flagged as MNT_IGNORE. #2227\n* [BUGFIX] Sanitize UTF-8 in dmi collector #2229\n\n## 1.3.0 / 2021-10-20\n\nNOTE: In order to support globs in the textfile collector path, filenames exposed by\n      `node_textfile_mtime_seconds` now contain the full path name.\n\n* [CHANGE] Add path label to rapl collector #2146\n* [CHANGE] Exclude filesystems under /run/credentials #2157\n* [CHANGE] Add TCPTimeouts to netstat default filter #2189\n* [FEATURE] Add lnstat collector for metrics from /proc/net/stat/ #1771\n* [FEATURE] Add darwin powersupply collector #1777\n* [FEATURE] Add support for monitoring GPUs on Linux #1998\n* [FEATURE] Add Darwin thermal collector #2032\n* [FEATURE] Add os release collector #2094\n* [FEATURE] Add netdev.address-info collector #2105\n* [FEATURE] Add clocksource metrics to time collector #2197\n* [ENHANCEMENT] Support glob textfile collector directories #1985\n* [ENHANCEMENT] ethtool: Expose node_ethtool_info metric #2080\n* [ENHANCEMENT] Use include/exclude flags for ethtool filtering #2165\n* [ENHANCEMENT] Add flag to disable guest CPU metrics #2123\n* [ENHANCEMENT] Add DMI collector #2131\n* [ENHANCEMENT] Add threads metrics to processes collector #2164\n* [ENHANCEMENT] Reduce timer GC delays in the Linux filesystem collector #2169\n* [ENHANCEMENT] Add TCPTimeouts to netstat default filter #2189\n* [ENHANCEMENT] Use SysctlTimeval for boottime collector on BSD #2208\n* [BUGFIX] ethtool: Sanitize metric names #2093\n* [BUGFIX] Fix ethtool collector for multiple interfaces #2126\n* [BUGFIX] Fix possible panic on macOS #2133\n* [BUGFIX] Collect flag_info and bug_info only for one core #2156\n* [BUGFIX] Prevent duplicate ethtool metric names #2187\n\n## 1.2.2 / 2021-08-06\n\n* [BUGFIX] Fix processes collector long int parsing #2112\n\n## 1.2.1 / 2021-07-23\n\n* [BUGFIX] Fix zoneinfo parsing prometheus/procfs#386\n* [BUGFIX] Fix nvme collector log noise #2091\n* [BUGFIX] Fix rapl collector log noise #2092\n\n## 1.2.0 / 2021-07-15\n\nNOTE: Ignoring invalid network speed will be the default in 2.x\nNOTE: Filesystem collector flags have been renamed. `--collector.filesystem.ignored-mount-points` is now `--collector.filesystem.mount-points-exclude` and `--collector.filesystem.ignored-fs-types` is now `--collector.filesystem.fs-types-exclude`. The old flags will be removed in 2.x.\n\n* [CHANGE] Rename filesystem collector flags to match other collectors #2012\n* [CHANGE] Make node_exporter print usage to STDOUT #2039\n* [FEATURE] Add conntrack statistics metrics #1155\n* [FEATURE] Add ethtool stats collector #1832\n* [FEATURE] Add flag to ignore network speed if it is unknown #1989\n* [FEATURE] Add tapestats collector for Linux #2044\n* [FEATURE] Add nvme collector #2062\n* [ENHANCEMENT] Add ErrorLog plumbing to promhttp #1887\n* [ENHANCEMENT] Add more Infiniband counters #2019\n* [ENHANCEMENT] netclass: retrieve interface names and filter before parsing #2033\n* [ENHANCEMENT] Add time zone offset metric #2060\n* [BUGFIX] Handle errors from disabled PSI subsystem #1983\n* [BUGFIX] Fix panic when using backwards compatible flags #2000\n* [BUGFIX] Fix wrong value for OpenBSD memory buffer cache #2015\n* [BUGFIX] Only initiate collectors once #2048\n* [BUGFIX] Handle small backwards jumps in CPU idle #2067\n\n## 1.1.2 / 2021-03-05\n\n* [BUGFIX] Handle errors from disabled PSI subsystem #1983\n* [BUGFIX] Sanitize strings from /sys/class/power_supply #1984\n* [BUGFIX] Silence missing netclass errors #1986\n\n## 1.1.1 / 2021-02-12\n\n* [BUGFIX] Fix ineffassign issue #1957\n* [BUGFIX] Fix some noisy log lines #1962\n\n## 1.1.0 / 2021-02-05\n\nNOTE: We have improved some of the flag naming conventions (PR #1743). The old names are\n      deprecated and will be removed in 2.0. They will continue to work for backwards\n      compatibility.\n\n* [CHANGE] Improve filter flag names #1743\n* [CHANGE] Add btrfs and powersupplyclass to list of exporters enabled by default #1897\n* [FEATURE] Add fibre channel collector #1786\n* [FEATURE] Expose cpu bugs and flags as info metrics. #1788\n* [FEATURE] Add network_route collector #1811\n* [FEATURE] Add zoneinfo collector #1922\n* [ENHANCEMENT] Add more InfiniBand counters #1694\n* [ENHANCEMENT] Add flag to aggr ipvs metrics to avoid high cardinality metrics #1709\n* [ENHANCEMENT] Adding backlog/current queue length to qdisc collector #1732\n* [ENHANCEMENT] Include TCP OutRsts in netstat metrics #1733\n* [ENHANCEMENT] Add pool size to entropy collector #1753\n* [ENHANCEMENT] Remove CGO dependencies for OpenBSD amd64 #1774\n* [ENHANCEMENT] bcache: add writeback_rate_debug stats #1658\n* [ENHANCEMENT] Add check state for mdadm arrays via node_md_state metric #1810\n* [ENHANCEMENT] Expose XFS inode statistics #1870\n* [ENHANCEMENT] Expose zfs zpool state #1878\n* [ENHANCEMENT] Added an ability to pass collector.supervisord.url via SUPERVISORD_URL environment variable #1947\n* [BUGFIX] filesystem_freebsd: Fix label values #1728\n* [BUGFIX] Fix various procfs parsing errors #1735\n* [BUGFIX] Handle no data from powersupplyclass #1747\n* [BUGFIX] udp_queues_linux.go: change upd to udp in two error strings #1769\n* [BUGFIX] Fix node_scrape_collector_success behaviour #1816\n* [BUGFIX] Fix NodeRAIDDegraded to not use a string rule expressions #1827\n* [BUGFIX] Fix node_md_disks state label from fail to failed #1862\n* [BUGFIX] Handle EPERM for syscall in timex collector #1938\n* [BUGFIX] bcache: fix typo in a metric name #1943\n* [BUGFIX] Fix XFS read/write stats (https://github.com/prometheus/procfs/pull/343)\n\n## 1.0.1 / 2020-06-15\n\n* [BUGFIX] filesystem_freebsd: Fix label values #1728\n* [BUGFIX] Update prometheus/procfs to fix log noise #1735\n* [BUGFIX] Fix build tags for collectors #1745\n* [BUGFIX] Handle no data from powersupplyclass #1747, #1749\n\n## 1.0.0 / 2020-05-25\n\n### **Breaking changes**\n\n* The netdev collector CLI argument `--collector.netdev.ignored-devices` was renamed to `--collector.netdev.device-blacklist` in order to conform with the systemd collector. #1279\n* The label named `state` on `node_systemd_service_restart_total` metrics was changed to `name` to better describe the metric. #1393\n* Refactoring of the mdadm collector changes several metrics\n    - `node_md_disks_active` is removed\n    - `node_md_disks` now has a `state` label for \"failed\", \"spare\", \"active\" disks.\n    - `node_md_is_active` is replaced by `node_md_state` with a state set of \"active\", \"inactive\", \"recovering\", \"resync\".\n* Additional label `mountaddr` added to NFS device metrics to distinguish mounts from the same URL, but different IP addresses. #1417\n* Metrics node_cpu_scaling_frequency_min_hrts and node_cpu_scaling_frequency_max_hrts of the cpufreq collector were renamed to node_cpu_scaling_frequency_min_hertz and node_cpu_scaling_frequency_max_hertz. #1510\n* Collectors that are enabled, but are unable to find data to collect, now return 0 for `node_scrape_collector_success`.\n\n### Changes\n\n* [CHANGE] Add `--collector.netdev.device-whitelist`. #1279\n* [CHANGE] Ignore iso9600 filesystem on Linux #1355\n* [CHANGE] Refactor mdadm collector #1403\n* [CHANGE] Add `mountaddr` label to NFS metrics. #1417\n* [CHANGE] Don't count empty collectors as success. #1613\n* [FEATURE] New flag to disable default collectors #1276\n* [FEATURE] Add experimental TLS support #1277, #1687, #1695\n* [FEATURE] Add collector for Power Supply Class #1280\n* [FEATURE] Add new schedstat collector #1389\n* [FEATURE] Add FreeBSD zfs support #1394\n* [FEATURE] Add uname support for Darwin and OpenBSD #1433\n* [FEATURE] Add new metric node_cpu_info #1489\n* [FEATURE] Add new thermal_zone collector #1425\n* [FEATURE] Add new cooling_device metrics to thermal zone collector #1445\n* [FEATURE] Add swap usage on darwin #1508\n* [FEATURE] Add Btrfs collector #1512\n* [FEATURE] Add RAPL collector #1523\n* [FEATURE] Add new softnet collector #1576\n* [FEATURE] Add new udp_queues collector #1503\n* [FEATURE] Add basic authentication #1673\n* [ENHANCEMENT] Log pid when there is a problem reading the process stats #1341\n* [ENHANCEMENT] Collect InfiniBand port state and physical state #1357\n* [ENHANCEMENT] Include additional XFS runtime statistics. #1423\n* [ENHANCEMENT] Report non-fatal collection errors in the exporter metric. #1439\n* [ENHANCEMENT] Expose IPVS firewall mark as a label #1455\n* [ENHANCEMENT] Add check for systemd version before attempting to query certain metrics. #1413\n* [ENHANCEMENT] Add a flag to adjust mount timeout #1486\n* [ENHANCEMENT] Add new counters for flush requests in Linux 5.5 #1548\n* [ENHANCEMENT] Add metrics and tests for UDP receive and send buffer errors #1534\n* [ENHANCEMENT] The sockstat collector now exposes IPv6 statistics in addition to the existing IPv4 support. #1552\n* [ENHANCEMENT] Add infiniband info metric #1563\n* [ENHANCEMENT] Add unix socket support for supervisord collector #1592\n* [ENHANCEMENT] Implement loadavg on all BSDs without cgo #1584\n* [ENHANCEMENT] Add model_name and stepping to node_cpu_info metric #1617\n* [ENHANCEMENT] Add `--collector.perf.cpus` to allow setting the CPU list for perf stats. #1561\n* [ENHANCEMENT] Add metrics for IO errors and retires on Darwin. #1636\n* [ENHANCEMENT] Add perf tracepoint collection flag #1664\n* [ENHANCEMENT] ZFS: read contents of objset file #1632\n* [ENHANCEMENT] Linux CPU: Cache CPU metrics to make them monotonically increasing #1711\n* [BUGFIX] Read /proc/net files with a single read syscall #1380\n* [BUGFIX] Renamed label `state` to `name` on `node_systemd_service_restart_total`. #1393\n* [BUGFIX] Fix netdev nil reference on Darwin #1414\n* [BUGFIX] Strip path.rootfs from mountpoint labels #1421\n* [BUGFIX] Fix seconds reported by schedstat #1426\n* [BUGFIX] Fix empty string in path.rootfs #1464\n* [BUGFIX] Fix typo in cpufreq metric names #1510\n* [BUGFIX] Read /proc/stat in one syscall #1538\n* [BUGFIX] Fix OpenBSD cache memory information #1542\n* [BUGFIX] Refactor textfile collector to avoid looping defer #1549\n* [BUGFIX] Fix network speed math #1580\n* [BUGFIX] collector/systemd: use regexp to extract systemd version #1647\n* [BUGFIX] Fix initialization in perf collector when using multiple CPUs #1665\n* [BUGFIX] Fix accidentally empty lines in meminfo_linux #1671\n\n## 0.18.1 / 2019-06-04\n\n### Changes\n* [BUGFIX] Fix incorrect sysctl call in BSD meminfo collector, resulting in broken swap metrics on FreeBSD #1345\n* [BUGFIX] Fix rollover bug in mountstats collector #1364\n\n## 0.18.0 / 2019-05-09\n\n### **Breaking changes**\n\n* Renamed `interface` label to `device` in netclass collector for consistency with\n  other network metrics #1224\n* The cpufreq metrics now separate the `cpufreq` and `scaling` data based on what the driver provides. #1248\n* The labels for the network_up metric have changed, see issue #1236\n* Bonding collector now uses `mii_status` instead of `operstatus` #1124\n* Several systemd metrics have been turned off by default to improve performance #1254\n  These include unit_tasks_current, unit_tasks_max, service_restart_total, and unit_start_time_seconds\n* The systemd collector blacklist now includes automount, device, mount, and slice units by default. #1255\n\n### Changes\n\n* [CHANGE] Bonding state uses mii_status #1124\n* [CHANGE] Add a limit to the number of in-flight requests #1166\n* [CHANGE] Renamed `interface` label to `device` in netclass collector #1224\n* [CHANGE] Add separate cpufreq and scaling metrics #1248\n* [CHANGE] Several systemd metrics have been turned off by default to improve performance #1254\n* [CHANGE] Expand systemd collector blacklist #1255\n* [CHANGE] Split cpufreq metrics into a separate collector #1253\n* [FEATURE] Add a flag to disable exporter metrics #1148\n* [FEATURE] Add kstat-based Solaris metrics for boottime, cpu and zfs collectors #1197\n* [FEATURE] Add uname collector for FreeBSD #1239\n* [FEATURE] Add diskstats collector for OpenBSD #1250\n* [FEATURE] Add pressure collector exposing pressure stall information for Linux #1174\n* [FEATURE] Add perf exporter for Linux #1274\n* [ENHANCEMENT] Add Infiniband counters #1120\n* [ENHANCEMENT] Add TCPSynRetrans to netstat default filter #1143\n* [ENHANCEMENT] Move network_up labels into new metric network_info #1236\n* [ENHANCEMENT] Use 64-bit counters for Darwin netstat\n* [BUGFIX] Add fallback for missing /proc/1/mounts #1172\n* [BUGFIX] Fix node_textfile_mtime_seconds to work properly on symlinks #1326\n\n## 0.17.0 / 2018-11-30\n\nBuild note: Linux builds can now be built without CGO.\n\n### **Breaking changes**\n\nsupvervisord collector reports `start_time_seconds` rather than `uptime` #952\n\nThe wifi collector is disabled by default due to suspected caching issues and goroutine leaks.\n* https://github.com/prometheus/node_exporter/issues/870\n* https://github.com/prometheus/node_exporter/issues/1008\n\nDarwin meminfo metrics have been renamed to match Prometheus conventions. #1060\n\n### Changes\n\n* [CHANGE] Use /proc/mounts instead of statfs(2) for ro state #1002\n* [CHANGE] Exclude only subdirectories of /var/lib/docker #1003\n* [CHANGE] Filter out non-installed units when collecting all systemd units #1011\n* [CHANGE] `service_restart_total` and `socket_refused_connections_total` will not be reported if you're running an older version of systemd\n* [CHANGE] collector/timex: remove cgo dependency #1079\n* [CHANGE] filesystem: Ignore Docker netns mounts #1047\n* [CHANGE] Ignore additional virtual filesystems #1104\n* [FEATURE] Add netclass collector #851\n* [FEATURE] Add processes collector #950\n* [FEATURE] Collect start time for systemd units #952\n* [FEATURE] Add socket unit stats to systemd collector #968\n* [FEATURE] Collect NRestarts property for systemd service units #992\n* [FEATURE] Collect NRefused property for systemd socket units (available as of systemd v239) #995\n* [FEATURE] Allow removal of rootfs prefix for run in docker #1058\n* [ENHANCEMENT] Support for octal characters in mountpoints #954\n* [ENHANCEMENT] Update wifi stats to support multiple stations #980\n* [ENHANCEMENT] Add transmit/receive bytes total for wifi stations #1150\n* [ENHANCEMENT] Handle stuck NFS mounts #997\n* [ENHANCEMENT] infiniband: Handle iWARP RDMA modules N/A #974\n* [ENHANCEMENT] Update diskstats for linux kernel 4.19 #1109\n* [ENHANCEMENT] Collect TasksCurrent, TasksMax per systemd unit #1098\n\n* [BUGFIX] Fix FreeBSD CPU temp #965\n* [BUGFIX] Fix goroutine leak in supervisord collector #978\n* [BUGFIX] Fix mdadm collector issues #985\n* [BUGFIX] Fix ntp collector thread safety #1014\n* [BUGFIX] Systemd units will not be ignored if you're running older versions of systemd #1039\n* [BUGFIX] Handle vanishing PIDs #1043\n* [BUGFIX] Correctly cast Darwin memory info #1060\n* [BUGFIX] Filter systemd units in Go for compatibility with older versions #1083\n* [BUGFIX] Update cpu collector for OpenBSD 6.4 #1094\n* [BUGFIX] Fix typo on HELP of `read_time_seconds_total` #1057\n* [BUGFIX] collector/diskstats: don't fail if there are extra stats #1125\n* [BUGFIX] collector/hwmon\\_linux: handle temperature sensor file #1123\n* [BUGFIX] collector/filesystem: add bounds check #1133\n* [BUGFIX] Fix dragonfly's CPU counting frequency #1140\n* [BUGFIX] Add fallback for missing /proc/1/mounts #1172\n\n## 0.16.0 / 2018-05-15\n\n**Breaking changes**\n\nThis release contains major breaking changes to metric names.  Many metrics have new names, labels, and label values in order to conform to current naming conventions.\n* Linux node_cpu metrics now break out `guest` values into separate metrics.  See Issue #737\n* Many counter metrics have been renamed to include `_total`.\n* Many metrics have been renamed/modified to include base units, for example `node_cpu` is now `node_cpu_seconds_total`.\n\nIn order to help with the transition we have an [upgrade guide](docs/V0_16_UPGRADE_GUIDE.md).\n\nOther breaking changes:\n* The megacli collector has been removed, is now replaced by the storcli.py textfile helper.\n* The gmond collector has been removed.\n* The textfile collector will now treat timestamps as errors.\n\n* [CHANGE] Split out guest cpu metrics on Linux. #744\n* [CHANGE] Exclude Linux proc from filesystem type regexp #774\n* [CHANGE] Ignore more virtual filesystems #775\n* [CHANGE] Remove obsolete megacli collector. #798\n* [CHANGE] Ignore /var/lib/docker by default. #814\n* [CHANGE] Cleanup NFS metrics #834\n* [CHANGE] Only report core throttles per core, not per cpu #836\n* [CHANGE] Treat custom textfile metric timestamps as errors #769\n* [CHANGE] Use lowercase cpu label name in interrupts #849\n* [CHANGE] Enable bonding collector by default. #872\n* [CHANGE] Greatly reduce the metrics vmstat returns by default. #874\n* [CHANGE] Greatly trim what netstat collector exposes by default #876\n* [CHANGE] Drop `exec_` prefix and move `node_boot_time_seconds` from `exec` to new `boottime` collector and enable for Darwin/Dragonfly/FreeBSD/NetBSD/OpenBSD. #839, #901\n* [CHANGE] Remove deprecated gmond collector #852\n* [CHANGE] align Darwin disk stat names with Linux #930\n* [FEATURE] Add `collect[]` parameter #699\n* [FEATURE] Add text collector conversion for ipmitool output. #746\n* [FEATURE] Add openbsd meminfo #724\n* [FEATURE] Add systemd summary metrics #765\n* [FEATURE] Add OpenBSD CPU collector #805\n* [FEATURE] Add NFS Server metrics collector. #803\n* [FEATURE] add sample directory size exporter #789\n* [ENHANCEMENT] added Wear_Leveling_Count attribute to smartmon.sh script #707\n* [ENHANCEMENT] Simplify Utsname string conversion #716\n* [ENHANCEMENT] apt.sh: handle multiple origins in apt-get output #757\n* [ENHANCEMENT] Export systemd timers last trigger seconds. #807\n* [ENHANCEMENT] updates for zfsonlinux 0.7.5 #779\n* [BUGFIX] Fix smartmon.sh textfile script #700\n* [BUGFIX] netdev: Change valueType to CounterValue #749\n* [BUGFIX] textfile: fix duplicate metrics error #738\n* [BUGFIX] Fix panic by updating github.com/ema/qdisc dependency #778\n* [BUGFIX] Use uint64 in the ZFS collector #714\n* [BUGFIX] multiply page size after float64 coercion to avoid signed integer overflow #780\n* [BUGFIX] smartmon: Escape double quotes in device model family #772\n* [BUGFIX] Fix log level regression in #533 #815\n* [BUGFIX] Correct the ClocksPerSec scaling factor on Darwin #846\n* [BUGFIX] Count core throttles per core and per package #871\n* [BUGFIX] Fix netdev collector for linux #890 #910\n* [BUGFIX] Fix memory corruption when number of filesystems > 16 on FreeBSD #900\n* [BUGFIX] Fix parsing of interface aliases in netdev linux #904\n\n## 0.15.2 / 2017-12-06\n\n* [BUGFIX]  cpu: Support processor-less (memory-only) NUMA nodes #734\n\n## 0.15.1 / 2017-11-07\n\n* [BUGFIX] xfs: expose correct fields, fix metric names #708\n* [BUGFIX] Correct buffer_bytes > INT_MAX on BSD/amd64. #712\n* [BUGFIX] netstat: return nothing when /proc/net/snmp6 not found #718\n* [BUGFIX] Fix off by one in Linux interrupts collector #721\n* [BUGFIX] Add and use sysReadFile in hwmon collector #728\n\n## 0.15.0 / 2017-10-06\n\n**Breaking changes**\n\nThis release contains major breaking changes to flag handling.\n* The flag library has been changed, all flags now require double-dashes. (`-foo` becomes `--foo`).\n* The collector selection flag has been replaced by individual boolean flags.\n* The `-collector.procfs` and `-collector.sysfs` flags have been renamed to `--path.procfs` and `--path.sysfs` respectively.\n\nThe `ntp` collector has been replaced with a new NTP-based check that is designed to expose the state of a localhost NTP server rather than provide the offset of the node to a remote NTP server.  By default the `ntp` collector is now locked to localhost.  This is to avoid accidental spamming of public internet NTP pools.\n\nWindows support is now removed, the [wmi_exporter](https://github.com/martinlindhe/wmi_exporter) is recommended as a replacement.\n\n* [CHANGE] `node_cpu` metrics moved from `stats` to `cpu` collector on linux (enabled by default). #548\n* [CHANGE] Blacklist systemd scope units #534\n* [CHANGE] Remove netbsd/arm #551\n* [CHANGE] Remove Windows support #549\n* [CHANGE] Enable IPVS collector by default #623\n* [CHANGE] Switch to kingpin flags #639\n* [CHANGE] Replace --collectors.enabled with per-collector flags #640\n* [FEATURE] Add ARP collector for Linux #540\n* [FEATURE] Add XFS collector for Linux #568, #575\n* [FEATURE] Add qdisc collector for Linux #580\n* [FEATURE] Add cpufreq stats for Linux #548\n* [FEATURE] Add diskstats for Darwin #593\n* [FEATURE] Add bcache collector for Linux #597\n* [FEATURE] Add parsing /proc/net/snmp6 file for Linux #615\n* [FEATURE] Add timex collector for Linux #664\n* [ENHANCEMENT] Include overall health status in smartmon.sh example script #546\n* [ENHANCEMENT] Include `guest_nice` in CPU collector #554\n* [ENHANCEMENT] Add exec_boot_time for freebsd, dragonfly #550\n* [ENHANCEMENT] Get full resolution for node_time #555\n* [ENHANCEMENT] infiniband: Multiply port data XMIT/RCV metrics by 4 #579\n* [ENHANCEMENT] cpu: Metric 'package_throttles_total' is per package. #657\n* [BUGFIX] Fix stale device error metrics #533\n* [BUGFIX] edac: Fix typo in node_edac_csrow_uncorrectable_errors_total #564\n* [BUGFIX] Use int64 throughout the ZFS collector #653\n* [BUGFIX] Silently ignore nonexisting bonding_masters file #569\n* [BUGFIX] Change raid0 status line regexp for mdadm collector (bug #618) #619\n* [BUGFIX] Ignore wifi collector permission errors #646\n* [BUGFIX] Always try to return smartmon_device_info metric #663\n\n## 0.14.0 / 2017-03-21\n\nNOTE: We are deprecating several collectors in this release.\n    * `gmond` - Out of scope.\n    * `megacli` - Requires forking, to be moved to textfile collection.\n    * `ntp` - Out of scope.\n\nBreaking changes:\n    * Collector errors are now a separate metric, `node_scrape_collector_success`, not a label on `node_exporter_scrape_duration_seconds` (#516)\n\n* [CHANGE] Report collector success/failure as a bool metric, not a label. #516\n* [FEATURE] Add loadavg collector for Solaris #311\n* [FEATURE] Add StorCli text collector example script #320\n* [FEATURE] Add collector for Linux EDAC #324\n* [FEATURE] Add text file utility for SMART metrics #354\n* [FEATURE] Add a collector for NFS client statistics. #360\n* [FEATURE] Add mountstats collector for detailed NFS statistics #367\n* [FEATURE] Add a collector for DRBD #365\n* [FEATURE] Add cpu collector for darwin #391\n* [FEATURE] Add netdev collector for darwin #393\n* [FEATURE] Collect CPU temperatures on FreeBSD #397\n* [FEATURE] Add ZFS collector #410\n* [FEATURE] Add initial wifi collector #413\n* [FEATURE] Add NFS event metrics to mountstats collector #415\n* [FEATURE] Add an example rules file #422\n* [FEATURE] infiniband: Add new collector for InfiniBand statistics #450\n* [FEATURE] buddyinfo: Add support for /proc/buddyinfo for linux free memory fragmentation. #454\n* [IMPROVEMENT] hwmon: Provide annotation metric to link chip sysfs paths to human-readable chip types #359\n* [IMPROVEMENT] Add node_filesystem_device_errors_total metric #374\n* [IMPROVEMENT] Add runit service dir flag #375\n* [IMPROVEMENT] Improve Docker documentation #376\n* [IMPROVEMENT] Ignore autofs filesystems on linux #384\n* [IMPROVEMENT] Replace some FreeBSD collectors with pure Go versions #385\n* [IMPROVEMENT] Use filename as label, move 'label' to own metric #411 (hwmon)\n* [BUGFIX] mips64 build fix #361\n* [BUGFIX] Update vendoring #372 (to fix #242)\n* [BUGFIX] Convert remaining collectors to use ConstMetrics #389\n* [BUGFIX] Check for errors in netdev scanner #398\n* [BUGFIX] Don't leak or race in FreeBSD devstat collector #396\n* [BUGFIX] Allow graceful failure in hwmon collector #427\n* [BUGFIX] Fix the reporting of active+total disk metrics for inactive raids. #522\n\n## 0.13.0 / 2016-11-26\n\nNOTE: We have disabled builds of linux/ppc64 and linux/ppc64le due to build bugs.\n\n* [FEATURE] Add flag to ignore certain filesystem types (Copy of #217) #241\n* [FEATURE] Add NTP stratum to NTP collector. #247\n* [FEATURE] Add ignored-units flag for systemd collector #286\n* [FEATURE] Compile netdev on dragonfly #314\n* [FEATURE] Compile meminfo for dfly #315\n* [FEATURE] Add hwmon /sensors support #278\n* [FEATURE] Add Linux NUMA \"numastat\" metrics #249\n* [FEATURE] export DragonFlyBSD CPU time #310\n* [FEATURE] Dragonfly devstat #323\n* [IMPROVEMENT] Use the offset calculation that includes round trip time in the ntp collector #250\n* [IMPROVEMENT] Enable `*bsd` collector on darwin #265\n* [IMPROVEMENT] Use meminfo_freebsd on darwin as well #266\n* [IMPROVEMENT] sockstat: add support for RHE4 #267\n* [IMPROVEMENT] Compile fs stats for dfly #302\n* [BUGFIX] Add support for raid0 devices in mdadm_linux collector. #253\n* [BUGFIX] Close file handler in textfile #263\n* [BUGFIX] Ignore partitions on NVME devices by default #268\n* [BUGFIX] Fix mdstat tabs parsing #275\n* [BUGFIX] Fix mdadm collector for resync=PENDING. #309\n* [BUGFIX] mdstat: Fix parsing of RAID0 lines that contain additional attributes. #341\n* [BUGFIX] Fix additional mdadm parsing cases #346\n\n## 0.12.0 / 2016-05-05\n\n* [CHANGE] Remove lastlogin collector.\n* [CHANGE] Remove -debug.memprofile-file flag.\n* [CHANGE] Sync BSD filesystem collector labels with Linux.\n* [CHANGE] Remove HTTP Basic Auth support.\n* [FEATURE] Add -version flag.\n* [FEATURE] Add Linux logind collector.\n* [FEATURE] Add Linux ksmd collector.\n* [FEATURE] Add Linux memory NUMA collector.\n* [FEATURE] Add Linux entropy collector.\n* [FEATURE] Add Linux vmstat collector.\n* [FEATURE] Add Linux conntrack collector.\n* [FEATURE] Add systemd collector.\n* [FEATURE] Add OpenBSD support for filesystem, interrupt and netdev collectors.\n* [FEATURE] Add supervisord collector.\n* [FEATURE] Add Linux /proc/mdstat collector.\n* [FEATURE] Add Linux uname collector.\n* [FEATURE] Add Linux /proc/sys/fs/file-nr collector.\n* [FEATURE] Add Linux /proc/net/sockstat collector.\n* [IMPROVEMENT] Provide statically linked Linux binaries.\n* [IMPROVEMENT] Remove root requirement for FreeBSD CPU metrics.\n* [IMPROVEMENT] Add node_exporter build info metric.\n* [IMPROVEMENT] Add disk bytes read/written metrics on Linux.\n* [IMPROVEMENT] Add filesystem read-only metric.\n* [IMPROVEMENT] Use common Prometheus log formatting.\n* [IMPROVEMENT] Add option to specify NTP protocol version.\n* [IMPROVEMENT] Handle statfs errors gracefully for individual filesystems.\n* [IMPROVEMENT] Add load5 and load15 metrics to loadavg collector.\n* [IMPROVEMENT] Add end-to-end tests.\n* [IMPROVEMENT] Export FreeBSD CPU metrics to seconds.\n* [IMPROVEMENT] Add flag to configure sysfs mountpoint.\n* [IMPROVEMENT] Add flag to configure procfs mountpoint.\n* [IMPROVEMENT] Add metric for last service state change to runit collector.\n* [BUGFIX] Fix FreeBSD netdev metrics on 64 bit systems.\n* [BUGFIX] Fix mdstat for devices in delayed resync state.\n* [BUGFIX] Fix Linux stat metrics on parallel scrapes.\n* [BUGFIX] Remove unavailable collectors from defaults.\n* [BUGFIX] Fix build errors on FreeBSD, OpenBSD, Darwin and Windows.\n* [BUGFIX] Fix build errors on 386, arm, arm64, ppc64 and ppc64le architectures.\n* [BUGFIX] Fix export of stale metrics for removed filesystem and network devices.\n* [BUGFIX] textfile: Fix mtime reporting.\n* [BUGFIX] megacli: prevent crash when drive temperature is N/A\n\n## 0.11.0 / 2015-07-27\n\n* [FEATURE] Add stats from /proc/net/snmp.\n* [FEATURE] Add support for FreeBSD.\n* [FEATURE] Allow netdev devices to be ignored.\n* [MAINTENANCE] New Dockerfile for unified way to dockerize Prometheus exporters.\n* [FEATURE] Add device,fstype collection to the filesystem exporter.\n* [IMPROVEMENT] Make logging of collector executions less verbose.\n\n## 0.10.0 / 2015-06-10\n\n* [CHANGE] Change logging output format and flags.\n\n## 0.9.0 / 2015-05-26\n\n* [BUGFIX] Fix `/proc/net/dev` parsing.\n* [CLEANUP] Remove the `attributes` collector, use `textfile` instead.\n* [CLEANUP] Replace last uses of the configuration file with flags.\n* [IMPROVEMENT] Remove cgo dependency.\n* [IMPROVEMENT] Sort collector names when printing.\n* [FEATURE] IPVS stats collector.\n\n## 0.8.1 / 2015-05-17\n\n* [MAINTENANCE] Use the common Prometheus build infrastructure.\n* [MAINTENANCE] Update former Google Code imports.\n* [IMPROVEMENT] Log the version at startup.\n* [FEATURE] TCP stats collector\n\n## 0.8.0 / 2015-03-09\n* [CLEANUP] Introduced semantic versioning and changelog. From now on,\n  changes will be reported in this file.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.1484375,
          "content": "# Prometheus Community Code of Conduct\n\nPrometheus follows the [CNCF Code of Conduct](https://github.com/cncf/foundation/blob/main/code-of-conduct.md).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.302734375,
          "content": "# Contributing\n\nPrometheus uses GitHub to manage reviews of pull requests.\n\n* If you have a trivial fix or improvement, go ahead and create a pull request,\n  addressing (with `@...`) the maintainer of this repository (see\n  [MAINTAINERS.md](MAINTAINERS.md)) in the description of the pull request.\n\n* If you plan to do something more involved, first discuss your ideas\n  on our [mailing list](https://groups.google.com/forum/?fromgroups#!forum/prometheus-developers).\n  This will avoid unnecessary work and surely give you and us a good deal\n  of inspiration.\n\n* Relevant coding style guidelines are the [Go Code Review\n  Comments](https://code.google.com/p/go-wiki/wiki/CodeReviewComments)\n  and the _Formatting and style_ section of Peter Bourgon's [Go: Best\n  Practices for Production\n  Environments](http://peter.bourgon.org/go-in-production/#formatting-and-style).\n\n* Sign your work to certify that your changes were created by yourself or you\n  have the right to submit it under our license. Read\n  https://developercertificate.org/ for all details and append your sign-off to\n  every commit message like this:\n\n        Signed-off-by: Random J Developer <example@example.com>\n\n\n## Collector Implementation Guidelines\n\nThe Node Exporter is not a general monitoring agent. Its sole purpose is to\nexpose machine metrics, as oppose to service metrics, with the only exception\nbeing the textfile collector.\n\nThe metrics should not get transformed in a way that is hardware specific and\nwould require maintaining any form of vendor based mappings or conditions. If\nfor example a proc file contains the magic number 42 as some identifier, the\nNode Exporter should expose it as it is and not keep a mapping in code to make\nthis human readable. Instead, the textfile collector can be used to add a static\nmetric which can be joined with the metrics exposed by the exporter to get human\nreadable identifier.\n\nA Collector may only read `/proc` or `/sys` files, use system calls or local\nsockets to retrieve metrics. It may not require root privileges. Running\nexternal commands is not allowed for performance and reliability reasons. Use a\ndedicated exporter instead or gather the metrics via the textfile collector.\n\nThe Node Exporter tries to support the most common machine metrics. For more\nexotic metrics, use the textfile collector or a dedicated Exporter.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.326171875,
          "content": "ARG ARCH=\"amd64\"\nARG OS=\"linux\"\nFROM quay.io/prometheus/busybox-${OS}-${ARCH}:latest\nLABEL maintainer=\"The Prometheus Authors <prometheus-developers@googlegroups.com>\"\n\nARG ARCH=\"amd64\"\nARG OS=\"linux\"\nCOPY .build/${OS}-${ARCH}/node_exporter /bin/node_exporter\n\nEXPOSE      9100\nUSER        nobody\nENTRYPOINT  [ \"/bin/node_exporter\" ]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS.md",
          "type": "blob",
          "size": 0.1015625,
          "content": "* Ben Kochie <superq@gmail.com> @SuperQ\n* Johannes 'fish' Ziemke <github@freigeist.org> @discordianfish\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 4.359375,
          "content": "# Copyright 2015 The Prometheus Authors\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Ensure that 'all' is the default target otherwise it will be the first target from Makefile.common.\nall::\n\n# Needs to be defined before including Makefile.common to auto-generate targets\nDOCKER_ARCHS ?= amd64 armv7 arm64 ppc64le s390x\n\ninclude Makefile.common\n\nPROMTOOL_VERSION ?= 2.30.0\nPROMTOOL_URL     ?= https://github.com/prometheus/prometheus/releases/download/v$(PROMTOOL_VERSION)/prometheus-$(PROMTOOL_VERSION).$(GO_BUILD_PLATFORM).tar.gz\nPROMTOOL         ?= $(FIRST_GOPATH)/bin/promtool\n\nDOCKER_IMAGE_NAME       ?= node-exporter\nMACH                    ?= $(shell uname -m)\n\nSTATICCHECK_IGNORE =\n\nifeq ($(GOHOSTOS), linux)\n\ttest-e2e := test-e2e\nelse\n\ttest-e2e := skip-test-e2e\nendif\n\n# Use CGO for non-Linux builds.\nifeq ($(GOOS), linux)\n\tPROMU_CONF ?= .promu.yml\nelse\n\tifndef GOOS\n\t\tifeq ($(GOHOSTOS), linux)\n\t\t\tPROMU_CONF ?= .promu.yml\n\t\telse\n\t\t\tPROMU_CONF ?= .promu-cgo.yml\n\t\tendif\n\telse\n\t\t# Do not use CGO for openbsd/amd64 builds\n\t\tifeq ($(GOOS), openbsd)\n\t\t\tifeq ($(GOARCH), amd64)\n\t\t\t\tPROMU_CONF ?= .promu.yml\n\t\t\telse\n\t\t\t\tPROMU_CONF ?= .promu-cgo.yml\n\t\t\tendif\n\t\telse\n\t\t\tPROMU_CONF ?= .promu-cgo.yml\n\t\tendif\n\tendif\nendif\n\nPROMU := $(FIRST_GOPATH)/bin/promu --config $(PROMU_CONF)\n\ne2e-out-64k-page = collector/fixtures/e2e-64k-page-output.txt\ne2e-out = collector/fixtures/e2e-output.txt\nifeq ($(MACH), ppc64le)\n\te2e-out = $(e2e-out-64k-page)\nendif\nifeq ($(MACH), aarch64)\n\te2e-out = $(e2e-out-64k-page)\nendif\n\n# 64bit -> 32bit mapping for cross-checking. At least for amd64/386, the 64bit CPU can execute 32bit code but not the other way around, so we don't support cross-testing upwards.\ncross-test = skip-test-32bit\ndefine goarch_pair\n\tifeq ($$(GOHOSTOS),linux)\n\t\tifeq ($$(GOHOSTARCH),$1)\n\t\t\tGOARCH_CROSS = $2\n\t\t\tcross-test = test-32bit\n\t\tendif\n\tendif\nendef\n\n# By default, \"cross\" test with ourselves to cover unknown pairings.\n$(eval $(call goarch_pair,amd64,386))\n$(eval $(call goarch_pair,mips64,mips))\n$(eval $(call goarch_pair,mips64el,mipsel))\n\nall:: vet checkmetrics checkrules common-all $(cross-test) $(test-e2e)\n\n.PHONY: test\ntest: collector/fixtures/sys/.unpacked collector/fixtures/udev/.unpacked\n\t@echo \">> running tests\"\n\t$(GO) test -short $(test-flags) $(pkgs)\n\n.PHONY: test-32bit\ntest-32bit: collector/fixtures/sys/.unpacked collector/fixtures/udev/.unpacked\n\t@echo \">> running tests in 32-bit mode\"\n\t@env GOARCH=$(GOARCH_CROSS) $(GO) test $(pkgs)\n\n.PHONY: skip-test-32bit\nskip-test-32bit:\n\t@echo \">> SKIP running tests in 32-bit mode: not supported on $(GOHOSTOS)/$(GOHOSTARCH)\"\n\n%/.unpacked: %.ttar\n\t@echo \">> extracting fixtures\"\n\tif [ -d $(dir $@) ] ; then rm -rf $(dir $@) ; fi\n\t./ttar -C $(dir $*) -x -f $*.ttar\n\ttouch $@\n\nupdate_fixtures:\n\trm -vf collector/fixtures/sys/.unpacked\n\t./ttar -C collector/fixtures -c -f collector/fixtures/sys.ttar sys\n\trm -vf collector/fixtures/udev/.unpacked\n\t./ttar -C collector/fixtures -c -f collector/fixtures/udev.ttar udev\n\n\n.PHONY: test-e2e\ntest-e2e: build collector/fixtures/sys/.unpacked collector/fixtures/udev/.unpacked\n\t@echo \">> running end-to-end tests\"\n\t./end-to-end-test.sh\n\n.PHONY: skip-test-e2e\nskip-test-e2e:\n\t@echo \">> SKIP running end-to-end tests on $(GOHOSTOS)\"\n\n.PHONY: checkmetrics\ncheckmetrics: $(PROMTOOL)\n\t@echo \">> checking metrics for correctness\"\n\t./checkmetrics.sh $(PROMTOOL) $(e2e-out)\n\t./checkmetrics.sh $(PROMTOOL) $(e2e-out-64k-page)\n\n.PHONY: checkrules\ncheckrules: $(PROMTOOL)\n\t@echo \">> checking rules for correctness\"\n\tfind . -name \"*rules*.yml\" | xargs -I {} $(PROMTOOL) check rules {}\n\n.PHONY: test-docker\ntest-docker:\n\t@echo \">> testing docker image\"\n\t./test_image.sh \"$(DOCKER_REPO)/$(DOCKER_IMAGE_NAME)-linux-amd64:$(DOCKER_IMAGE_TAG)\" 9100\n\n.PHONY: promtool\npromtool: $(PROMTOOL)\n\n$(PROMTOOL):\n\tmkdir -p $(FIRST_GOPATH)/bin\n\tcurl -fsS -L $(PROMTOOL_URL) | tar -xvzf - -C $(FIRST_GOPATH)/bin --strip 1 \"prometheus-$(PROMTOOL_VERSION).$(GO_BUILD_PLATFORM)/promtool\"\n"
        },
        {
          "name": "Makefile.common",
          "type": "blob",
          "size": 9.1123046875,
          "content": "# Copyright 2018 The Prometheus Authors\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# A common Makefile that includes rules to be reused in different prometheus projects.\n# !!! Open PRs only against the prometheus/prometheus/Makefile.common repository!\n\n# Example usage :\n# Create the main Makefile in the root project directory.\n# include Makefile.common\n# customTarget:\n# \t@echo \">> Running customTarget\"\n#\n\n# Ensure GOBIN is not set during build so that promu is installed to the correct path\nunexport GOBIN\n\nGO           ?= go\nGOFMT        ?= $(GO)fmt\nFIRST_GOPATH := $(firstword $(subst :, ,$(shell $(GO) env GOPATH)))\nGOOPTS       ?=\nGOHOSTOS     ?= $(shell $(GO) env GOHOSTOS)\nGOHOSTARCH   ?= $(shell $(GO) env GOHOSTARCH)\n\nGO_VERSION        ?= $(shell $(GO) version)\nGO_VERSION_NUMBER ?= $(word 3, $(GO_VERSION))\nPRE_GO_111        ?= $(shell echo $(GO_VERSION_NUMBER) | grep -E 'go1\\.(10|[0-9])\\.')\n\nPROMU        := $(FIRST_GOPATH)/bin/promu\npkgs          = ./...\n\nifeq (arm, $(GOHOSTARCH))\n\tGOHOSTARM ?= $(shell GOARM= $(GO) env GOARM)\n\tGO_BUILD_PLATFORM ?= $(GOHOSTOS)-$(GOHOSTARCH)v$(GOHOSTARM)\nelse\n\tGO_BUILD_PLATFORM ?= $(GOHOSTOS)-$(GOHOSTARCH)\nendif\n\nGOTEST := $(GO) test\nGOTEST_DIR :=\nifneq ($(CIRCLE_JOB),)\nifneq ($(shell command -v gotestsum 2> /dev/null),)\n\tGOTEST_DIR := test-results\n\tGOTEST := gotestsum --junitfile $(GOTEST_DIR)/unit-tests.xml --\nendif\nendif\n\nPROMU_VERSION ?= 0.17.0\nPROMU_URL     := https://github.com/prometheus/promu/releases/download/v$(PROMU_VERSION)/promu-$(PROMU_VERSION).$(GO_BUILD_PLATFORM).tar.gz\n\nSKIP_GOLANGCI_LINT :=\nGOLANGCI_LINT :=\nGOLANGCI_LINT_OPTS ?=\nGOLANGCI_LINT_VERSION ?= v1.62.0\n# golangci-lint only supports linux, darwin and windows platforms on i386/amd64/arm64.\n# windows isn't included here because of the path separator being different.\nifeq ($(GOHOSTOS),$(filter $(GOHOSTOS),linux darwin))\n\tifeq ($(GOHOSTARCH),$(filter $(GOHOSTARCH),amd64 i386 arm64))\n\t\t# If we're in CI and there is an Actions file, that means the linter\n\t\t# is being run in Actions, so we don't need to run it here.\n\t\tifneq (,$(SKIP_GOLANGCI_LINT))\n\t\t\tGOLANGCI_LINT :=\n\t\telse ifeq (,$(CIRCLE_JOB))\n\t\t\tGOLANGCI_LINT := $(FIRST_GOPATH)/bin/golangci-lint\n\t\telse ifeq (,$(wildcard .github/workflows/golangci-lint.yml))\n\t\t\tGOLANGCI_LINT := $(FIRST_GOPATH)/bin/golangci-lint\n\t\tendif\n\tendif\nendif\n\nPREFIX                  ?= $(shell pwd)\nBIN_DIR                 ?= $(shell pwd)\nDOCKER_IMAGE_TAG        ?= $(subst /,-,$(shell git rev-parse --abbrev-ref HEAD))\nDOCKERFILE_PATH         ?= ./Dockerfile\nDOCKERBUILD_CONTEXT     ?= ./\nDOCKER_REPO             ?= prom\n\nDOCKER_ARCHS            ?= amd64\n\nBUILD_DOCKER_ARCHS = $(addprefix common-docker-,$(DOCKER_ARCHS))\nPUBLISH_DOCKER_ARCHS = $(addprefix common-docker-publish-,$(DOCKER_ARCHS))\nTAG_DOCKER_ARCHS = $(addprefix common-docker-tag-latest-,$(DOCKER_ARCHS))\n\nSANITIZED_DOCKER_IMAGE_TAG := $(subst +,-,$(DOCKER_IMAGE_TAG))\n\nifeq ($(GOHOSTARCH),amd64)\n        ifeq ($(GOHOSTOS),$(filter $(GOHOSTOS),linux freebsd darwin windows))\n                # Only supported on amd64\n                test-flags := -race\n        endif\nendif\n\n# This rule is used to forward a target like \"build\" to \"common-build\".  This\n# allows a new \"build\" target to be defined in a Makefile which includes this\n# one and override \"common-build\" without override warnings.\n%: common-% ;\n\n.PHONY: common-all\ncommon-all: precheck style check_license lint yamllint unused build test\n\n.PHONY: common-style\ncommon-style:\n\t@echo \">> checking code style\"\n\t@fmtRes=$$($(GOFMT) -d $$(find . -path ./vendor -prune -o -name '*.go' -print)); \\\n\tif [ -n \"$${fmtRes}\" ]; then \\\n\t\techo \"gofmt checking failed!\"; echo \"$${fmtRes}\"; echo; \\\n\t\techo \"Please ensure you are using $$($(GO) version) for formatting code.\"; \\\n\t\texit 1; \\\n\tfi\n\n.PHONY: common-check_license\ncommon-check_license:\n\t@echo \">> checking license header\"\n\t@licRes=$$(for file in $$(find . -type f -iname '*.go' ! -path './vendor/*') ; do \\\n               awk 'NR<=3' $$file | grep -Eq \"(Copyright|generated|GENERATED)\" || echo $$file; \\\n       done); \\\n       if [ -n \"$${licRes}\" ]; then \\\n               echo \"license header checking failed:\"; echo \"$${licRes}\"; \\\n               exit 1; \\\n       fi\n\n.PHONY: common-deps\ncommon-deps:\n\t@echo \">> getting dependencies\"\n\t$(GO) mod download\n\n.PHONY: update-go-deps\nupdate-go-deps:\n\t@echo \">> updating Go dependencies\"\n\t@for m in $$($(GO) list -mod=readonly -m -f '{{ if and (not .Indirect) (not .Main)}}{{.Path}}{{end}}' all); do \\\n\t\t$(GO) get -d $$m; \\\n\tdone\n\t$(GO) mod tidy\n\n.PHONY: common-test-short\ncommon-test-short: $(GOTEST_DIR)\n\t@echo \">> running short tests\"\n\t$(GOTEST) -short $(GOOPTS) $(pkgs)\n\n.PHONY: common-test\ncommon-test: $(GOTEST_DIR)\n\t@echo \">> running all tests\"\n\t$(GOTEST) $(test-flags) $(GOOPTS) $(pkgs)\n\n$(GOTEST_DIR):\n\t@mkdir -p $@\n\n.PHONY: common-format\ncommon-format:\n\t@echo \">> formatting code\"\n\t$(GO) fmt $(pkgs)\n\n.PHONY: common-vet\ncommon-vet:\n\t@echo \">> vetting code\"\n\t$(GO) vet $(GOOPTS) $(pkgs)\n\n.PHONY: common-lint\ncommon-lint: $(GOLANGCI_LINT)\nifdef GOLANGCI_LINT\n\t@echo \">> running golangci-lint\"\n\t$(GOLANGCI_LINT) run $(GOLANGCI_LINT_OPTS) $(pkgs)\nendif\n\n.PHONY: common-lint-fix\ncommon-lint-fix: $(GOLANGCI_LINT)\nifdef GOLANGCI_LINT\n\t@echo \">> running golangci-lint fix\"\n\t$(GOLANGCI_LINT) run --fix $(GOLANGCI_LINT_OPTS) $(pkgs)\nendif\n\n.PHONY: common-yamllint\ncommon-yamllint:\n\t@echo \">> running yamllint on all YAML files in the repository\"\nifeq (, $(shell command -v yamllint 2> /dev/null))\n\t@echo \"yamllint not installed so skipping\"\nelse\n\tyamllint .\nendif\n\n# For backward-compatibility.\n.PHONY: common-staticcheck\ncommon-staticcheck: lint\n\n.PHONY: common-unused\ncommon-unused:\n\t@echo \">> running check for unused/missing packages in go.mod\"\n\t$(GO) mod tidy\n\t@git diff --exit-code -- go.sum go.mod\n\n.PHONY: common-build\ncommon-build: promu\n\t@echo \">> building binaries\"\n\t$(PROMU) build --prefix $(PREFIX) $(PROMU_BINARIES)\n\n.PHONY: common-tarball\ncommon-tarball: promu\n\t@echo \">> building release tarball\"\n\t$(PROMU) tarball --prefix $(PREFIX) $(BIN_DIR)\n\n.PHONY: common-docker-repo-name\ncommon-docker-repo-name:\n\t@echo \"$(DOCKER_REPO)/$(DOCKER_IMAGE_NAME)\"\n\n.PHONY: common-docker $(BUILD_DOCKER_ARCHS)\ncommon-docker: $(BUILD_DOCKER_ARCHS)\n$(BUILD_DOCKER_ARCHS): common-docker-%:\n\tdocker build -t \"$(DOCKER_REPO)/$(DOCKER_IMAGE_NAME)-linux-$*:$(SANITIZED_DOCKER_IMAGE_TAG)\" \\\n\t\t-f $(DOCKERFILE_PATH) \\\n\t\t--build-arg ARCH=\"$*\" \\\n\t\t--build-arg OS=\"linux\" \\\n\t\t$(DOCKERBUILD_CONTEXT)\n\n.PHONY: common-docker-publish $(PUBLISH_DOCKER_ARCHS)\ncommon-docker-publish: $(PUBLISH_DOCKER_ARCHS)\n$(PUBLISH_DOCKER_ARCHS): common-docker-publish-%:\n\tdocker push \"$(DOCKER_REPO)/$(DOCKER_IMAGE_NAME)-linux-$*:$(SANITIZED_DOCKER_IMAGE_TAG)\"\n\nDOCKER_MAJOR_VERSION_TAG = $(firstword $(subst ., ,$(shell cat VERSION)))\n.PHONY: common-docker-tag-latest $(TAG_DOCKER_ARCHS)\ncommon-docker-tag-latest: $(TAG_DOCKER_ARCHS)\n$(TAG_DOCKER_ARCHS): common-docker-tag-latest-%:\n\tdocker tag \"$(DOCKER_REPO)/$(DOCKER_IMAGE_NAME)-linux-$*:$(SANITIZED_DOCKER_IMAGE_TAG)\" \"$(DOCKER_REPO)/$(DOCKER_IMAGE_NAME)-linux-$*:latest\"\n\tdocker tag \"$(DOCKER_REPO)/$(DOCKER_IMAGE_NAME)-linux-$*:$(SANITIZED_DOCKER_IMAGE_TAG)\" \"$(DOCKER_REPO)/$(DOCKER_IMAGE_NAME)-linux-$*:v$(DOCKER_MAJOR_VERSION_TAG)\"\n\n.PHONY: common-docker-manifest\ncommon-docker-manifest:\n\tDOCKER_CLI_EXPERIMENTAL=enabled docker manifest create -a \"$(DOCKER_REPO)/$(DOCKER_IMAGE_NAME):$(SANITIZED_DOCKER_IMAGE_TAG)\" $(foreach ARCH,$(DOCKER_ARCHS),$(DOCKER_REPO)/$(DOCKER_IMAGE_NAME)-linux-$(ARCH):$(SANITIZED_DOCKER_IMAGE_TAG))\n\tDOCKER_CLI_EXPERIMENTAL=enabled docker manifest push \"$(DOCKER_REPO)/$(DOCKER_IMAGE_NAME):$(SANITIZED_DOCKER_IMAGE_TAG)\"\n\n.PHONY: promu\npromu: $(PROMU)\n\n$(PROMU):\n\t$(eval PROMU_TMP := $(shell mktemp -d))\n\tcurl -s -L $(PROMU_URL) | tar -xvzf - -C $(PROMU_TMP)\n\tmkdir -p $(FIRST_GOPATH)/bin\n\tcp $(PROMU_TMP)/promu-$(PROMU_VERSION).$(GO_BUILD_PLATFORM)/promu $(FIRST_GOPATH)/bin/promu\n\trm -r $(PROMU_TMP)\n\n.PHONY: proto\nproto:\n\t@echo \">> generating code from proto files\"\n\t@./scripts/genproto.sh\n\nifdef GOLANGCI_LINT\n$(GOLANGCI_LINT):\n\tmkdir -p $(FIRST_GOPATH)/bin\n\tcurl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/$(GOLANGCI_LINT_VERSION)/install.sh \\\n\t\t| sed -e '/install -d/d' \\\n\t\t| sh -s -- -b $(FIRST_GOPATH)/bin $(GOLANGCI_LINT_VERSION)\nendif\n\n.PHONY: precheck\nprecheck::\n\ndefine PRECHECK_COMMAND_template =\nprecheck:: $(1)_precheck\n\nPRECHECK_COMMAND_$(1) ?= $(1) $$(strip $$(PRECHECK_OPTIONS_$(1)))\n.PHONY: $(1)_precheck\n$(1)_precheck:\n\t@if ! $$(PRECHECK_COMMAND_$(1)) 1>/dev/null 2>&1; then \\\n\t\techo \"Execution of '$$(PRECHECK_COMMAND_$(1))' command failed. Is $(1) installed?\"; \\\n\t\texit 1; \\\n\tfi\nendef\n\ngovulncheck: install-govulncheck\n\tgovulncheck ./...\n\ninstall-govulncheck:\n\tcommand -v govulncheck > /dev/null || go install golang.org/x/vuln/cmd/govulncheck@latest\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.4521484375,
          "content": "Configurable modular Prometheus exporter for various node metrics.\nCopyright 2013-2015 The Prometheus Authors\n\nThis product includes software developed at\nSoundCloud Ltd. (http://soundcloud.com/).\n\nThe following components are included in this product:\n\nwifi\nhttps://github.com/mdlayher/wifi\nCopyright 2016-2017 Matt Layher\nLicensed under the MIT License\n\nnetlink\nhttps://github.com/mdlayher/netlink\nCopyright 2016-2017 Matt Layher\nLicensed under the MIT License\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 19.4306640625,
          "content": "# Node exporter\n\n[![CircleCI](https://circleci.com/gh/prometheus/node_exporter/tree/master.svg?style=shield)][circleci]\n[![Buildkite status](https://badge.buildkite.com/94a0c1fb00b1f46883219c256efe9ce01d63b6505f3a942f9b.svg)](https://buildkite.com/prometheus/node-exporter)\n[![Docker Repository on Quay](https://quay.io/repository/prometheus/node-exporter/status)][quay]\n[![Docker Pulls](https://img.shields.io/docker/pulls/prom/node-exporter.svg?maxAge=604800)][hub]\n[![Go Report Card](https://goreportcard.com/badge/github.com/prometheus/node_exporter)][goreportcard]\n\nPrometheus exporter for hardware and OS metrics exposed by \\*NIX kernels, written\nin Go with pluggable metric collectors.\n\nThe [Windows exporter](https://github.com/prometheus-community/windows_exporter) is recommended for Windows users.\nTo expose NVIDIA GPU metrics, [prometheus-dcgm\n](https://github.com/NVIDIA/dcgm-exporter)\ncan be used.\n\n## Installation and Usage\n\nIf you are new to Prometheus and `node_exporter` there is a [simple step-by-step guide](https://prometheus.io/docs/guides/node-exporter/).\n\nThe `node_exporter` listens on HTTP port 9100 by default. See the `--help` output for more options.\n\n### Ansible\n\nFor automated installs with [Ansible](https://www.ansible.com/), there is the [Prometheus Community role](https://github.com/prometheus-community/ansible).\n\n### Docker\n\nThe `node_exporter` is designed to monitor the host system. Deploying in containers requires\nextra care in order to avoid monitoring the container itself.\n\nFor situations where containerized deployment is needed, some extra flags must be used to allow\nthe `node_exporter` access to the host namespaces.\n\nBe aware that any non-root mount points you want to monitor will need to be bind-mounted\ninto the container.\n\nIf you start container for host monitoring, specify `path.rootfs` argument.\nThis argument must match path in bind-mount of host root. The node\\_exporter will use\n`path.rootfs` as prefix to access host filesystem.\n\n```bash\ndocker run -d \\\n  --net=\"host\" \\\n  --pid=\"host\" \\\n  -v \"/:/host:ro,rslave\" \\\n  quay.io/prometheus/node-exporter:latest \\\n  --path.rootfs=/host\n```\n\nFor Docker compose, similar flag changes are needed.\n\n```yaml\n---\nversion: '3.8'\n\nservices:\n  node_exporter:\n    image: quay.io/prometheus/node-exporter:latest\n    container_name: node_exporter\n    command:\n      - '--path.rootfs=/host'\n    network_mode: host\n    pid: host\n    restart: unless-stopped\n    volumes:\n      - '/:/host:ro,rslave'\n```\n\nOn some systems, the `timex` collector requires an additional Docker flag,\n`--cap-add=SYS_TIME`, in order to access the required syscalls.\n\n## Collectors\n\nThere is varying support for collectors on each operating system. The tables\nbelow list all existing collectors and the supported systems.\n\nCollectors are enabled by providing a `--collector.<name>` flag.\nCollectors that are enabled by default can be disabled by providing a `--no-collector.<name>` flag.\nTo enable only some specific collector(s), use `--collector.disable-defaults --collector.<name> ...`.\n\n### Include & Exclude flags\n\nA few collectors can be configured to include or exclude certain patterns using dedicated flags. The exclude flags are used to indicate \"all except\", while the include flags are used to say \"none except\". Note that these flags are mutually exclusive on collectors that support both.\n\nExample:\n\n```txt\n--collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)\n```\n\nList:\n\nCollector | Scope | Include Flag | Exclude Flag\n--- | --- | --- | ---\narp | device | --collector.arp.device-include | --collector.arp.device-exclude\ncpu | bugs | --collector.cpu.info.bugs-include | N/A\ncpu | flags | --collector.cpu.info.flags-include | N/A\ndiskstats | device | --collector.diskstats.device-include | --collector.diskstats.device-exclude\nethtool | device | --collector.ethtool.device-include | --collector.ethtool.device-exclude\nethtool | metrics | --collector.ethtool.metrics-include | N/A\nfilesystem | fs-types | --collector.filesystem.fs-types-include | --collector.filesystem.fs-types-exclude\nfilesystem | mount-points | --collector.filesystem.mount-points-include | --collector.filesystem.mount-points-exclude\nhwmon | chip | --collector.hwmon.chip-include | --collector.hwmon.chip-exclude\nhwmon | sensor | --collector.hwmon.sensor-include | --collector.hwmon.sensor-exclude\ninterrupts | name | --collector.interrupts.name-include | --collector.interrupts.name-exclude\nnetdev | device | --collector.netdev.device-include | --collector.netdev.device-exclude\nqdisk | device | --collector.qdisk.device-include | --collector.qdisk.device-exclude\nslabinfo | slab-names | --collector.slabinfo.slabs-include | --collector.slabinfo.slabs-exclude\nsysctl | all | --collector.sysctl.include | N/A\nsystemd | unit | --collector.systemd.unit-include | --collector.systemd.unit-exclude\n\n### Enabled by default\n\nName     | Description | OS\n---------|-------------|----\narp | Exposes ARP statistics from `/proc/net/arp`. | Linux\nbcache | Exposes bcache statistics from `/sys/fs/bcache/`. | Linux\nbonding | Exposes the number of configured and active slaves of Linux bonding interfaces. | Linux\nbtrfs | Exposes btrfs statistics | Linux\nboottime | Exposes system boot time derived from the `kern.boottime` sysctl. | Darwin, Dragonfly, FreeBSD, NetBSD, OpenBSD, Solaris\nconntrack | Shows conntrack statistics (does nothing if no `/proc/sys/net/netfilter/` present). | Linux\ncpu | Exposes CPU statistics | Darwin, Dragonfly, FreeBSD, Linux, Solaris, OpenBSD\ncpufreq | Exposes CPU frequency statistics | Linux, Solaris\ndiskstats | Exposes disk I/O statistics. | Darwin, Linux, OpenBSD\ndmi | Expose Desktop Management Interface (DMI) info from `/sys/class/dmi/id/` | Linux\nedac | Exposes error detection and correction statistics. | Linux\nentropy | Exposes available entropy. | Linux\nexec | Exposes execution statistics. | Dragonfly, FreeBSD\nfibrechannel | Exposes fibre channel information and statistics from `/sys/class/fc_host/`. | Linux\nfilefd | Exposes file descriptor statistics from `/proc/sys/fs/file-nr`. | Linux\nfilesystem | Exposes filesystem statistics, such as disk space used. | Darwin, Dragonfly, FreeBSD, Linux, OpenBSD\nhwmon | Expose hardware monitoring and sensor data from `/sys/class/hwmon/`. | Linux\ninfiniband | Exposes network statistics specific to InfiniBand and Intel OmniPath configurations. | Linux\nipvs | Exposes IPVS status from `/proc/net/ip_vs` and stats from `/proc/net/ip_vs_stats`. | Linux\nloadavg | Exposes load average. | Darwin, Dragonfly, FreeBSD, Linux, NetBSD, OpenBSD, Solaris\nmdadm | Exposes statistics about devices in `/proc/mdstat` (does nothing if no `/proc/mdstat` present). | Linux\nmeminfo | Exposes memory statistics. | Darwin, Dragonfly, FreeBSD, Linux, OpenBSD\nnetclass | Exposes network interface info from `/sys/class/net/` | Linux\nnetdev | Exposes network interface statistics such as bytes transferred. | Darwin, Dragonfly, FreeBSD, Linux, OpenBSD\nnetisr | Exposes netisr statistics | FreeBSD\nnetstat | Exposes network statistics from `/proc/net/netstat`. This is the same information as `netstat -s`. | Linux\nnfs | Exposes NFS client statistics from `/proc/net/rpc/nfs`. This is the same information as `nfsstat -c`. | Linux\nnfsd | Exposes NFS kernel server statistics from `/proc/net/rpc/nfsd`. This is the same information as `nfsstat -s`. | Linux\nnvme | Exposes NVMe info from `/sys/class/nvme/` | Linux\nos | Expose OS release info from `/etc/os-release` or `/usr/lib/os-release` | _any_\npowersupplyclass | Exposes Power Supply statistics from `/sys/class/power_supply` | Linux\npressure | Exposes pressure stall statistics from `/proc/pressure/`. | Linux (kernel 4.20+ and/or [CONFIG\\_PSI](https://www.kernel.org/doc/html/latest/accounting/psi.html))\nrapl | Exposes various statistics from `/sys/class/powercap`. | Linux\nschedstat | Exposes task scheduler statistics from `/proc/schedstat`. | Linux\nselinux | Exposes SELinux statistics. | Linux\nsockstat | Exposes various statistics from `/proc/net/sockstat`. | Linux\nsoftnet | Exposes statistics from `/proc/net/softnet_stat`. | Linux\nstat | Exposes various statistics from `/proc/stat`. This includes boot time, forks and interrupts. | Linux\ntapestats | Exposes statistics from `/sys/class/scsi_tape`. | Linux\ntextfile | Exposes statistics read from local disk. The `--collector.textfile.directory` flag must be set. | _any_\nthermal | Exposes thermal statistics like `pmset -g therm`. | Darwin\nthermal\\_zone | Exposes thermal zone & cooling device statistics from `/sys/class/thermal`. | Linux\ntime | Exposes the current system time. | _any_\ntimex | Exposes selected adjtimex(2) system call stats. | Linux\nudp_queues | Exposes UDP total lengths of the rx_queue and tx_queue from `/proc/net/udp` and `/proc/net/udp6`. | Linux\nuname | Exposes system information as provided by the uname system call. | Darwin, FreeBSD, Linux, OpenBSD\nvmstat | Exposes statistics from `/proc/vmstat`. | Linux\nwatchdog | Exposes statistics from `/sys/class/watchdog` | Linux\nxfs | Exposes XFS runtime statistics. | Linux (kernel 4.4+)\nzfs | Exposes [ZFS](http://open-zfs.org/) performance statistics. | FreeBSD, [Linux](http://zfsonlinux.org/), Solaris\n\n### Disabled by default\n\n`node_exporter` also implements a number of collectors that are disabled by default.  Reasons for this vary by\ncollector, and may include:\n* High cardinality\n* Prolonged runtime that exceeds the Prometheus `scrape_interval` or `scrape_timeout`\n* Significant resource demands on the host\n\nYou can enable additional collectors as desired by adding them to your\ninit system's or service supervisor's startup configuration for\n`node_exporter` but caution is advised.  Enable at most one at a time,\ntesting first on a non-production system, then by hand on a single\nproduction node.  When enabling additional collectors, you should\ncarefully monitor the change by observing the `\nscrape_duration_seconds` metric to ensure that collection completes\nand does not time out.  In addition, monitor the\n`scrape_samples_post_metric_relabeling` metric to see the changes in\ncardinality.\n\nName     | Description | OS\n---------|-------------|----\nbuddyinfo | Exposes statistics of memory fragments as reported by /proc/buddyinfo. | Linux\ncgroups | A summary of the number of active and enabled cgroups | Linux\ncpu\\_vulnerabilities | Exposes CPU vulnerability information from sysfs. | Linux\ndevstat | Exposes device statistics | Dragonfly, FreeBSD\ndrm | Expose GPU metrics using sysfs / DRM, `amdgpu` is the only driver which exposes this information through DRM | Linux\ndrbd | Exposes Distributed Replicated Block Device statistics (to version 8.4) | Linux\nethtool | Exposes network interface information and network driver statistics equivalent to `ethtool`, `ethtool -S`, and `ethtool -i`. | Linux\ninterrupts | Exposes detailed interrupts statistics. | Linux, OpenBSD\nksmd | Exposes kernel and system statistics from `/sys/kernel/mm/ksm`. | Linux\nlnstat | Exposes stats from `/proc/net/stat/`. | Linux\nlogind | Exposes session counts from [logind](http://www.freedesktop.org/wiki/Software/systemd/logind/). | Linux\nmeminfo\\_numa | Exposes memory statistics from `/sys/devices/system/node/node[0-9]*/meminfo`, `/sys/devices/system/node/node[0-9]*/numastat`. | Linux\nmountstats | Exposes filesystem statistics from `/proc/self/mountstats`. Exposes detailed NFS client statistics. | Linux\nnetwork_route | Exposes the routing table as metrics | Linux\nperf | Exposes perf based metrics (Warning: Metrics are dependent on kernel configuration and settings). | Linux\nprocesses | Exposes aggregate process statistics from `/proc`. | Linux\nqdisc | Exposes [queuing discipline](https://en.wikipedia.org/wiki/Network_scheduler#Linux_kernel) statistics | Linux\nslabinfo | Exposes slab statistics from `/proc/slabinfo`. Note that permission of `/proc/slabinfo` is usually 0400, so set it appropriately. | Linux\nsoftirqs | Exposes detailed softirq statistics from `/proc/softirqs`. | Linux\nsysctl | Expose sysctl values from `/proc/sys`. Use `--collector.sysctl.include(-info)` to configure. | Linux\nsystemd | Exposes service and system status from [systemd](http://www.freedesktop.org/wiki/Software/systemd/). | Linux\ntcpstat | Exposes TCP connection status information from `/proc/net/tcp` and `/proc/net/tcp6`. (Warning: the current version has potential performance issues in high load situations.) | Linux\nwifi | Exposes WiFi device and station statistics. | Linux\nxfrm | Exposes statistics from `/proc/net/xfrm_stat` | Linux\nzoneinfo | Exposes NUMA memory zone metrics. | Linux\n\n### Deprecated\n\nThese collectors are deprecated and will be removed in the next major release.\n\nName     | Description | OS\n---------|-------------|----\nntp | Exposes local NTP daemon health to check [time](./docs/TIME.md) | _any_\nrunit | Exposes service status from [runit](http://smarden.org/runit/). | _any_\nsupervisord | Exposes service status from [supervisord](http://supervisord.org/). | _any_\n\n### Perf Collector\n\nThe `perf` collector may not work out of the box on some Linux systems due to kernel\nconfiguration and security settings. To allow access, set the following `sysctl`\nparameter:\n\n```\nsysctl -w kernel.perf_event_paranoid=X\n```\n\n- 2 allow only user-space measurements (default since Linux 4.6).\n- 1 allow both kernel and user measurements (default before Linux 4.6).\n- 0 allow access to CPU-specific data but not raw tracepoint samples.\n- -1 no restrictions.\n\nDepending on the configured value different metrics will be available, for most\ncases `0` will provide the most complete set. For more information see [`man 2\nperf_event_open`](http://man7.org/linux/man-pages/man2/perf_event_open.2.html).\n\nBy default, the `perf` collector will only collect metrics of the CPUs that\n`node_exporter` is running on (ie\n[`runtime.NumCPU`](https://golang.org/pkg/runtime/#NumCPU). If this is\ninsufficient (e.g. if you run `node_exporter` with its CPU affinity set to\nspecific CPUs), you can specify a list of alternate CPUs by using the\n`--collector.perf.cpus` flag. For example, to collect metrics on CPUs 2-6, you\nwould specify: `--collector.perf --collector.perf.cpus=2-6`. The CPU\nconfiguration is zero indexed and can also take a stride value; e.g.\n`--collector.perf --collector.perf.cpus=1-10:5` would collect on CPUs\n1, 5, and 10.\n\nThe `perf` collector is also able to collect\n[tracepoint](https://www.kernel.org/doc/html/latest/core-api/tracepoint.html)\ncounts when using the `--collector.perf.tracepoint` flag. Tracepoints can be\nfound using [`perf list`](http://man7.org/linux/man-pages/man1/perf.1.html) or\nfrom debugfs. And example usage of this would be\n`--collector.perf.tracepoint=\"sched:sched_process_exec\"`.\n\n### Sysctl Collector\n\nThe `sysctl` collector can be enabled with `--collector.sysctl`. It supports exposing numeric sysctl values\nas metrics using the `--collector.sysctl.include` flag and string values as info metrics by using the\n`--collector.sysctl.include-info` flag. The flags can be repeated. For sysctl with multiple numeric values,\nan optional mapping can be given to expose each value as its own metric. Otherwise an `index` label is used\nto identify the different fields.\n\n#### Examples\n##### Numeric values\n###### Single values\nUsing `--collector.sysctl.include=vm.user_reserve_kbytes`:\n`vm.user_reserve_kbytes = 131072` -> `node_sysctl_vm_user_reserve_kbytes 131072`\n\n###### Multiple values\nA sysctl can contain multiple values, for example:\n```\nnet.ipv4.tcp_rmem = 4096\t131072\t6291456\n```\nUsing `--collector.sysctl.include=net.ipv4.tcp_rmem` the collector will expose:\n```\nnode_sysctl_net_ipv4_tcp_rmem{index=\"0\"} 4096\nnode_sysctl_net_ipv4_tcp_rmem{index=\"1\"} 131072\nnode_sysctl_net_ipv4_tcp_rmem{index=\"2\"} 6291456\n```\nIf the indexes have defined meaning like in this case, the values can be mapped to multiple metrics by appending the mapping to the --collector.sysctl.include flag:\nUsing `--collector.sysctl.include=net.ipv4.tcp_rmem:min,default,max` the collector will expose:\n```\nnode_sysctl_net_ipv4_tcp_rmem_min 4096\nnode_sysctl_net_ipv4_tcp_rmem_default 131072\nnode_sysctl_net_ipv4_tcp_rmem_max 6291456\n```\n\n##### String values\nString values need to be exposed as info metric. The user selects them by using the `--collector.sysctl.include-info` flag.\n\n###### Single values\n`kernel.core_pattern = core` -> `node_sysctl_info{key=\"kernel.core_pattern_info\", value=\"core\"} 1`\n\n###### Multiple values\nGiven the following sysctl:\n```\nkernel.seccomp.actions_avail = kill_process kill_thread trap errno trace log allow\n```\nSetting `--collector.sysctl.include-info=kernel.seccomp.actions_avail` will yield:\n```\nnode_sysctl_info{key=\"kernel.seccomp.actions_avail\", index=\"0\", value=\"kill_process\"} 1\nnode_sysctl_info{key=\"kernel.seccomp.actions_avail\", index=\"1\", value=\"kill_thread\"} 1\n...\n```\n\n### Textfile Collector\n\nThe `textfile` collector is similar to the [Pushgateway](https://github.com/prometheus/pushgateway),\nin that it allows exporting of statistics from batch jobs. It can also be used\nto export static metrics, such as what role a machine has. The Pushgateway\nshould be used for service-level metrics. The `textfile` module is for metrics\nthat are tied to a machine.\n\nTo use it, set the `--collector.textfile.directory` flag on the `node_exporter` commandline. The\ncollector will parse all files in that directory matching the glob `*.prom`\nusing the [text\nformat](http://prometheus.io/docs/instrumenting/exposition_formats/). **Note:** Timestamps are not supported.\n\nTo atomically push completion time for a cron job:\n```\necho my_batch_job_completion_time $(date +%s) > /path/to/directory/my_batch_job.prom.$$\nmv /path/to/directory/my_batch_job.prom.$$ /path/to/directory/my_batch_job.prom\n```\n\nTo statically set roles for a machine using labels:\n```\necho 'role{role=\"application_server\"} 1' > /path/to/directory/role.prom.$$\nmv /path/to/directory/role.prom.$$ /path/to/directory/role.prom\n```\n\n### Filtering enabled collectors\n\nThe `node_exporter` will expose all metrics from enabled collectors by default.  This is the recommended way to collect metrics to avoid errors when comparing metrics of different families.\n\nFor advanced use the `node_exporter` can be passed an optional list of collectors to filter metrics. The parameters `collect[]` and `exclude[]` can be used multiple times (but cannot be combined).  In Prometheus configuration you can use this syntax under the [scrape config](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#<scrape_config>).\n\nCollect only `cpu` and `meminfo` collector metrics:\n```\n  params:\n    collect[]:\n      - cpu\n      - meminfo\n```\n\nCollect all enabled collector metrics but exclude `netdev`:\n```\n  params:\n    exclude[]:\n      - netdev\n```\n\nThis can be useful for having different Prometheus servers collect specific metrics from nodes.\n\n## Development building and running\n\nPrerequisites:\n\n* [Go compiler](https://golang.org/dl/)\n* RHEL/CentOS: `glibc-static` package.\n\nBuilding:\n\n    git clone https://github.com/prometheus/node_exporter.git\n    cd node_exporter\n    make build\n    ./node_exporter <flags>\n\nTo see all available configuration flags:\n\n    ./node_exporter -h\n\n## Running tests\n\n    make test\n\n## TLS endpoint\n\n**EXPERIMENTAL**\n\nThe exporter supports TLS via a new web configuration file.\n\n```console\n./node_exporter --web.config.file=web-config.yml\n```\n\nSee the [exporter-toolkit web-configuration](https://github.com/prometheus/exporter-toolkit/blob/master/docs/web-configuration.md) for more details.\n\n[travis]: https://travis-ci.org/prometheus/node_exporter\n[hub]: https://hub.docker.com/r/prom/node-exporter/\n[circleci]: https://circleci.com/gh/prometheus/node_exporter\n[quay]: https://quay.io/repository/prometheus/node-exporter\n[goreportcard]: https://goreportcard.com/report/github.com/prometheus/node_exporter\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.16796875,
          "content": "# Reporting a security issue\n\nThe Prometheus security policy, including how to report vulnerabilities, can be\nfound here:\n\n<https://prometheus.io/docs/operating/security/>\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.005859375,
          "content": "1.8.1\n"
        },
        {
          "name": "checkmetrics.sh",
          "type": "blob",
          "size": 0.43359375,
          "content": "#!/usr/bin/env bash\n\nif [[ ( -z \"$1\" ) || ( -z \"$2\" ) ]]; then\n    echo \"usage: ./checkmetrics.sh /usr/bin/promtool e2e-output.txt\"\n    exit 1\nfi\n\n# Ignore known issues in auto-generated and network specific collectors.\nlint=$($1 check metrics < \"$2\" 2>&1 | grep -v -E \"^node_(entropy|memory|netstat|wifi_station)_\")\n\nif [[ -n $lint ]]; then\n    echo -e \"Some Prometheus metrics do not follow best practices:\\n\"\n    echo \"$lint\"\n\n    exit 1\nfi\n"
        },
        {
          "name": "collector",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "end-to-end-test.sh",
          "type": "blob",
          "size": 4.2568359375,
          "content": "#!/usr/bin/env bash\n\nset -euf -o pipefail\n\nenabled_collectors=$(cat << COLLECTORS\n  arp\n  bcache\n  bonding\n  btrfs\n  buddyinfo\n  cgroups\n  conntrack\n  cpu\n  cpufreq\n  cpu_vulnerabilities\n  diskstats\n  dmi\n  drbd\n  edac\n  entropy\n  fibrechannel\n  filefd\n  hwmon\n  infiniband\n  interrupts\n  ipvs\n  ksmd\n  lnstat\n  loadavg\n  mdadm\n  meminfo\n  meminfo_numa\n  mountstats\n  netdev\n  netstat\n  nfs\n  nfsd\n  pressure\n  processes\n  qdisc\n  rapl\n  schedstat\n  slabinfo\n  sockstat\n  softirqs\n  stat\n  sysctl\n  textfile\n  thermal_zone\n  udp_queues\n  vmstat\n  watchdog\n  wifi\n  xfrm\n  xfs\n  zfs\n  zoneinfo\nCOLLECTORS\n)\ndisabled_collectors=$(cat << COLLECTORS\n  selinux\n  filesystem\n  timex\n  uname\nCOLLECTORS\n)\ncd \"$(dirname $0)\"\n\nport=\"$((10000 + (RANDOM % 10000)))\"\ntmpdir=$(mktemp -d /tmp/node_exporter_e2e_test.XXXXXX)\n\nskip_re=\"^(go_|node_exporter_build_info|node_scrape_collector_duration_seconds|process_|node_textfile_mtime_seconds|node_time_(zone|seconds)|node_network_(receive|transmit)_(bytes|packets)_total)\"\n\narch=\"$(uname -m)\"\n\ncase \"${arch}\" in\n  aarch64|ppc64le) fixture='collector/fixtures/e2e-64k-page-output.txt' ;;\n  *) fixture='collector/fixtures/e2e-output.txt' ;;\nesac\n\n# Only test CPU info collection on x86_64.\ncase \"${arch}\" in\n  x86_64)\n    cpu_info_collector='--collector.cpu.info'\n    cpu_info_bugs='^(cpu_meltdown|spectre_.*|mds)$'\n    cpu_info_flags='^(aes|avx.?|constant_tsc)$'\n    ;;\n  *)\n    cpu_info_collector='--no-collector.cpu.info'\n    cpu_info_bugs=''\n    cpu_info_flags=''\n    ;;\nesac\n\nkeep=0; update=0; verbose=0\nwhile getopts 'hkuv' opt\ndo\n  case \"$opt\" in\n    k)\n      keep=1\n      ;;\n    u)\n      update=1\n      ;;\n    v)\n      verbose=1\n      set -x\n      ;;\n    *)\n      echo \"Usage: $0 [-k] [-u] [-v]\"\n      echo \"  -k: keep temporary files and leave node_exporter running\"\n      echo \"  -u: update fixture\"\n      echo \"  -v: verbose output\"\n      exit 1\n      ;;\n  esac\ndone\n\nif [ ! -x ./node_exporter ]\nthen\n    echo './node_exporter not found. Consider running `go build` first.' >&2\n    exit 1\nfi\n\n./node_exporter \\\n  --path.rootfs=\"collector/fixtures\" \\\n  --path.procfs=\"collector/fixtures/proc\" \\\n  --path.sysfs=\"collector/fixtures/sys\" \\\n  --path.udev.data=\"collector/fixtures/udev/data\" \\\n  $(for c in ${enabled_collectors}; do echo --collector.${c}  ; done) \\\n  $(for c in ${disabled_collectors}; do echo --no-collector.${c}  ; done) \\\n  --collector.textfile.directory=\"collector/fixtures/textfile/two_metric_files/\" \\\n  --collector.wifi.fixtures=\"collector/fixtures/wifi\" \\\n  --collector.qdisc.fixtures=\"collector/fixtures/qdisc/\" \\\n  --collector.qdisc.device-include=\"(wlan0|eth0)\" \\\n  --collector.arp.device-exclude=\"nope\" \\\n  --no-collector.arp.netlink \\\n  --collector.hwmon.chip-include=\"(applesmc|coretemp|hwmon4|nct6779)\" \\\n  --collector.netclass.ignored-devices=\"(dmz|int)\" \\\n  --collector.netclass.ignore-invalid-speed \\\n  --collector.netdev.device-include=\"lo\" \\\n  --collector.bcache.priorityStats \\\n  \"${cpu_info_collector}\" \\\n  --collector.cpu.info.bugs-include=\"${cpu_info_bugs}\" \\\n  --collector.cpu.info.flags-include=\"${cpu_info_flags}\" \\\n  --collector.stat.softirq \\\n  --collector.sysctl.include=\"kernel.threads-max\" \\\n  --collector.sysctl.include=\"fs.file-nr\" \\\n  --collector.sysctl.include=\"fs.file-nr:total,current,max\" \\\n  --collector.sysctl.include-info=\"kernel.seccomp.actions_avail\" \\\n  --web.listen-address \"127.0.0.1:${port}\" \\\n  --log.level=\"debug\" > \"${tmpdir}/node_exporter.log\" 2>&1 &\n\necho $! > \"${tmpdir}/node_exporter.pid\"\n\nfinish() {\n  if [ $? -ne 0 -o ${verbose} -ne 0 ]\n  then\n    cat << EOF >&2\nLOG =====================\n$(cat \"${tmpdir}/node_exporter.log\")\n=========================\nEOF\n  fi\n\n  if [ ${update} -ne 0 ]\n  then\n    cp \"${tmpdir}/e2e-output.txt\" \"${fixture}\"\n  fi\n\n  if [ ${keep} -eq 0 ]\n  then\n    kill -9 \"$(cat ${tmpdir}/node_exporter.pid)\"\n    # This silences the \"Killed\" message\n    set +e\n    wait \"$(cat ${tmpdir}/node_exporter.pid)\" > /dev/null 2>&1\n    rm -rf \"${tmpdir}\"\n  fi\n}\n\ntrap finish EXIT\n\nget() {\n  if command -v curl > /dev/null 2>&1\n  then\n    curl -s -f \"$@\"\n  elif command -v wget > /dev/null 2>&1\n  then\n    wget -O - \"$@\"\n  else\n    echo \"Neither curl nor wget found\"\n    exit 1\n  fi\n}\n\nsleep 1\n\nget \"127.0.0.1:${port}/metrics\" | grep -E -v \"${skip_re}\" > \"${tmpdir}/e2e-output.txt\"\n\ndiff -u \\\n  \"${fixture}\" \\\n  \"${tmpdir}/e2e-output.txt\"\n"
        },
        {
          "name": "example-rules.yml",
          "type": "blob",
          "size": 0.7548828125,
          "content": "groups:\n  - name: example-node-exporter-rules\n    rules:\n      # The count of CPUs per node, useful for getting CPU time as a percent of total.\n      - record: instance:node_cpus:count\n        expr: count(node_cpu_seconds_total{mode=\"idle\"}) without (cpu,mode)\n\n      # CPU in use by CPU.\n      - record: instance_cpu:node_cpu_seconds_not_idle:rate5m\n        expr: sum(rate(node_cpu_seconds_total{mode!=\"idle\"}[5m])) without (mode)\n\n      # CPU in use by mode.\n      - record: instance_mode:node_cpu_seconds:rate5m\n        expr: sum(rate(node_cpu_seconds_total[5m])) without (cpu)\n\n      # CPU in use ratio.\n      - record: instance:node_cpu_utilization:ratio\n        expr: sum(instance_mode:node_cpu_seconds:rate5m{mode!=\"idle\"}) without (mode) / instance:node_cpus:count\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 2.4990234375,
          "content": "module github.com/prometheus/node_exporter\n\ngo 1.22.0\n\nrequire (\n\tgithub.com/alecthomas/kingpin/v2 v2.4.0\n\tgithub.com/beevik/ntp v1.4.3\n\tgithub.com/coreos/go-systemd/v22 v22.5.0\n\tgithub.com/dennwc/btrfs v0.0.0-20240418142341-0167142bde7a\n\tgithub.com/ema/qdisc v1.0.0\n\tgithub.com/godbus/dbus/v5 v5.1.0\n\tgithub.com/hashicorp/go-envparse v0.1.0\n\tgithub.com/hodgesds/perf-utils v0.7.0\n\tgithub.com/illumos/go-kstat v0.0.0-20210513183136-173c9b0a9973\n\tgithub.com/josharian/native v1.1.0\n\tgithub.com/jsimonetti/rtnetlink/v2 v2.0.2\n\tgithub.com/lufia/iostat v1.2.1\n\tgithub.com/mattn/go-xmlrpc v0.0.3\n\tgithub.com/mdlayher/ethtool v0.2.0\n\tgithub.com/mdlayher/netlink v1.7.2\n\tgithub.com/mdlayher/wifi v0.3.1\n\tgithub.com/opencontainers/selinux v1.11.1\n\tgithub.com/power-devops/perfstat v0.0.0-20240221224432-82ca36839d55\n\tgithub.com/prometheus-community/go-runit v0.1.0\n\tgithub.com/prometheus/client_golang v1.20.5\n\tgithub.com/prometheus/client_model v0.6.1\n\tgithub.com/prometheus/common v0.61.0\n\tgithub.com/prometheus/exporter-toolkit v0.13.2\n\tgithub.com/prometheus/procfs v0.15.2-0.20240603130017-1754b780536b // == v0.15.1 + https://github.com/prometheus/procfs/commit/1754b780536bb81082baa913e04cc4fff4d2baea\n\tgithub.com/safchain/ethtool v0.5.9\n\tgolang.org/x/exp v0.0.0-20240909161429-701f63a606c0\n\tgolang.org/x/sys v0.28.0\n\thowett.net/plist v1.0.1\n)\n\nrequire (\n\tgithub.com/alecthomas/units v0.0.0-20211218093645-b94a6e3cc137 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/dennwc/ioctl v1.0.0 // indirect\n\tgithub.com/google/go-cmp v0.6.0 // indirect\n\tgithub.com/jpillora/backoff v1.0.0 // indirect\n\tgithub.com/klauspost/compress v1.17.9 // indirect\n\tgithub.com/kylelemons/godebug v1.1.0 // indirect\n\tgithub.com/mdlayher/genetlink v1.3.2 // indirect\n\tgithub.com/mdlayher/socket v0.4.1 // indirect\n\tgithub.com/mdlayher/vsock v1.2.1 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f // indirect\n\tgithub.com/siebenmann/go-kstat v0.0.0-20210513183136-173c9b0a9973 // indirect\n\tgithub.com/xhit/go-str2duration/v2 v2.1.0 // indirect\n\tgo.uber.org/atomic v1.7.0 // indirect\n\tgo.uber.org/multierr v1.6.0 // indirect\n\tgolang.org/x/crypto v0.31.0 // indirect\n\tgolang.org/x/net v0.32.0 // indirect\n\tgolang.org/x/oauth2 v0.24.0 // indirect\n\tgolang.org/x/sync v0.10.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgoogle.golang.org/protobuf v1.35.2 // indirect\n\tgopkg.in/yaml.v2 v2.4.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 11.81640625,
          "content": "github.com/alecthomas/kingpin/v2 v2.4.0 h1:f48lwail6p8zpO1bC4TxtqACaGqHYA22qkHjHpqDjYY=\ngithub.com/alecthomas/kingpin/v2 v2.4.0/go.mod h1:0gyi0zQnjuFk8xrkNKamJoyUo382HRL7ATRpFZCw6tE=\ngithub.com/alecthomas/units v0.0.0-20211218093645-b94a6e3cc137 h1:s6gZFSlWYmbqAuRjVTiNNhvNRfY2Wxp9nhfyel4rklc=\ngithub.com/alecthomas/units v0.0.0-20211218093645-b94a6e3cc137/go.mod h1:OMCwj8VM1Kc9e19TLln2VL61YJF0x1XFtfdL4JdbSyE=\ngithub.com/beevik/ntp v1.4.3 h1:PlbTvE5NNy4QHmA4Mg57n7mcFTmr1W1j3gcK7L1lqho=\ngithub.com/beevik/ntp v1.4.3/go.mod h1:Unr8Zg+2dRn7d8bHFuehIMSvvUYssHMxW3Q5Nx4RW5Q=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cilium/ebpf v0.12.3 h1:8ht6F9MquybnY97at+VDZb3eQQr8ev79RueWeVaEcG4=\ngithub.com/cilium/ebpf v0.12.3/go.mod h1:TctK1ivibvI3znr66ljgi4hqOT8EYQjz1KWBfb1UVgM=\ngithub.com/coreos/go-systemd/v22 v22.5.0 h1:RrqgGjYQKalulkV8NGVIfkXQf6YYmOyiJKk8iXXhfZs=\ngithub.com/coreos/go-systemd/v22 v22.5.0/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dennwc/btrfs v0.0.0-20240418142341-0167142bde7a h1:KfFsGLJFVdCXlySUkV2FmxNtmiztpJb6tV+XYBmmv8E=\ngithub.com/dennwc/btrfs v0.0.0-20240418142341-0167142bde7a/go.mod h1:MYsOV9Dgsec3FFSOjywi0QK5r6TeBbdWxdrMGtiYXHA=\ngithub.com/dennwc/ioctl v1.0.0 h1:DsWAAjIxRqNcLn9x6mwfuf2pet3iB7aK90K4tF16rLg=\ngithub.com/dennwc/ioctl v1.0.0/go.mod h1:ellh2YB5ldny99SBU/VX7Nq0xiZbHphf1DrtHxxjMk0=\ngithub.com/ema/qdisc v1.0.0 h1:EHLG08FVRbWLg8uRICa3xzC9Zm0m7HyMHfXobWFnXYg=\ngithub.com/ema/qdisc v1.0.0/go.mod h1:FhIc0fLYi7f+lK5maMsesDqwYojIOh3VfRs8EVd5YJQ=\ngithub.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/godbus/dbus/v5 v5.1.0 h1:4KLkAxT3aOY8Li4FRJe/KvhoNFFxo0m6fNuFUO8QJUk=\ngithub.com/godbus/dbus/v5 v5.1.0/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/hashicorp/go-envparse v0.1.0 h1:bE++6bhIsNCPLvgDZkYqo3nA+/PFI51pkrHdmPSDFPY=\ngithub.com/hashicorp/go-envparse v0.1.0/go.mod h1:OHheN1GoygLlAkTlXLXvAdnXdZxy8JUweQ1rAXx1xnc=\ngithub.com/hodgesds/perf-utils v0.7.0 h1:7KlHGMuig4FRH5fNw68PV6xLmgTe7jKs9hgAcEAbioU=\ngithub.com/hodgesds/perf-utils v0.7.0/go.mod h1:LAklqfDadNKpkxoAJNHpD5tkY0rkZEVdnCEWN5k4QJY=\ngithub.com/illumos/go-kstat v0.0.0-20210513183136-173c9b0a9973 h1:hk4LPqXIY/c9XzRbe7dA6qQxaT6Axcbny0L/G5a4owQ=\ngithub.com/illumos/go-kstat v0.0.0-20210513183136-173c9b0a9973/go.mod h1:PoK3ejP3LJkGTzKqRlpvCIFas3ncU02v8zzWDW+g0FY=\ngithub.com/jessevdk/go-flags v1.4.0/go.mod h1:4FA24M0QyGHXBuZZK/XkWh8h0e1EYbRYJSGM75WSRxI=\ngithub.com/josharian/native v1.1.0 h1:uuaP0hAbW7Y4l0ZRQ6C9zfb7Mg1mbFKry/xzDAfmtLA=\ngithub.com/josharian/native v1.1.0/go.mod h1:7X/raswPFr05uY3HiLlYeyQntB6OO7E/d2Cu7qoaN2w=\ngithub.com/jpillora/backoff v1.0.0 h1:uvFg412JmmHBHw7iwprIxkPMI+sGQ4kzOWsMeHnm2EA=\ngithub.com/jpillora/backoff v1.0.0/go.mod h1:J/6gKK9jxlEcS3zixgDgUAsiuZ7yrSoa/FX5e0EB2j4=\ngithub.com/jsimonetti/rtnetlink/v2 v2.0.2 h1:ZKlbCujrIpp4/u3V2Ka0oxlf4BCkt6ojkvpy3nZoCBY=\ngithub.com/jsimonetti/rtnetlink/v2 v2.0.2/go.mod h1:7MoNYNbb3UaDHtF8udiJo/RH6VsTKP1pqKLUTVCvToE=\ngithub.com/klauspost/compress v1.17.9 h1:6KIumPrER1LHsvBVuDa0r5xaG0Es51mhhB9BQB2qeMA=\ngithub.com/klauspost/compress v1.17.9/go.mod h1:Di0epgTjJY877eYKx5yC51cX2A2Vl2ibi7bDH9ttBbw=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/lufia/iostat v1.2.1 h1:tnCdZBIglgxD47RyD55kfWQcJMGzO+1QBziSQfesf2k=\ngithub.com/lufia/iostat v1.2.1/go.mod h1:rEPNA0xXgjHQjuI5Cy05sLlS2oRcSlWHRLrvh/AQ+Pg=\ngithub.com/mattn/go-xmlrpc v0.0.3 h1:Y6WEMLEsqs3RviBrAa1/7qmbGB7DVD3brZIbqMbQdGY=\ngithub.com/mattn/go-xmlrpc v0.0.3/go.mod h1:mqc2dz7tP5x5BKlCahN/n+hs7OSZKJkS9JsHNBRlrxA=\ngithub.com/mdlayher/ethtool v0.2.0 h1:akcA4WZVWozzirPASeMq8qgLkxpF3ykftVXwnrMKrhY=\ngithub.com/mdlayher/ethtool v0.2.0/go.mod h1:W0pIBrNPK1TslIN4Z9wt1EVbay66Kbvek2z2f29VBfw=\ngithub.com/mdlayher/genetlink v1.3.2 h1:KdrNKe+CTu+IbZnm/GVUMXSqBBLqcGpRDa0xkQy56gw=\ngithub.com/mdlayher/genetlink v1.3.2/go.mod h1:tcC3pkCrPUGIKKsCsp0B3AdaaKuHtaxoJRz3cc+528o=\ngithub.com/mdlayher/netlink v1.7.2 h1:/UtM3ofJap7Vl4QWCPDGXY8d3GIY2UGSDbK+QWmY8/g=\ngithub.com/mdlayher/netlink v1.7.2/go.mod h1:xraEF7uJbxLhc5fpHL4cPe221LI2bdttWlU+ZGLfQSw=\ngithub.com/mdlayher/socket v0.4.1 h1:eM9y2/jlbs1M615oshPQOHZzj6R6wMT7bX5NPiQvn2U=\ngithub.com/mdlayher/socket v0.4.1/go.mod h1:cAqeGjoufqdxWkD7DkpyS+wcefOtmu5OQ8KuoJGIReA=\ngithub.com/mdlayher/vsock v1.2.1 h1:pC1mTJTvjo1r9n9fbm7S1j04rCgCzhCOS5DY0zqHlnQ=\ngithub.com/mdlayher/vsock v1.2.1/go.mod h1:NRfCibel++DgeMD8z/hP+PPTjlNJsdPOmxcnENvE+SE=\ngithub.com/mdlayher/wifi v0.3.1 h1:bZDuMI1f7z5BtUUO3NgHRdR/R88YtywIe6dsEFI0Txs=\ngithub.com/mdlayher/wifi v0.3.1/go.mod h1:ODQaObvsglghTuNhezD9grkTB4shVNc28aJfTXmvSi8=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f h1:KUppIJq7/+SVif2QVs3tOP0zanoHgBEVAwHxUSIzRqU=\ngithub.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/opencontainers/selinux v1.11.1 h1:nHFvthhM0qY8/m+vfhJylliSshm8G1jJ2jDMcgULaH8=\ngithub.com/opencontainers/selinux v1.11.1/go.mod h1:E5dMC3VPuVvVHDYmi78qvhJp8+M586T4DlDRYpFkyec=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/power-devops/perfstat v0.0.0-20240221224432-82ca36839d55 h1:o4JXh1EVt9k/+g42oCprj/FisM4qX9L3sZB3upGN2ZU=\ngithub.com/power-devops/perfstat v0.0.0-20240221224432-82ca36839d55/go.mod h1:OmDBASR4679mdNQnz2pUhc2G8CO2JrUAVFDRBDP/hJE=\ngithub.com/prometheus-community/go-runit v0.1.0 h1:uTWEj/Fn2RoLdfg/etSqwzgYNOYPrARx1BHUN052tGA=\ngithub.com/prometheus-community/go-runit v0.1.0/go.mod h1:AvJ9Jo3gAFu2lbM4+qfjdpq30FfiLDJZKbQ015u08IQ=\ngithub.com/prometheus/client_golang v1.20.5 h1:cxppBPuYhUnsO6yo/aoRol4L7q7UFfdm+bR9r+8l63Y=\ngithub.com/prometheus/client_golang v1.20.5/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=\ngithub.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=\ngithub.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=\ngithub.com/prometheus/common v0.61.0 h1:3gv/GThfX0cV2lpO7gkTUwZru38mxevy90Bj8YFSRQQ=\ngithub.com/prometheus/common v0.61.0/go.mod h1:zr29OCN/2BsJRaFwG8QOBr41D6kkchKbpeNH7pAjb/s=\ngithub.com/prometheus/exporter-toolkit v0.13.2 h1:Z02fYtbqTMy2i/f+xZ+UK5jy/bl1Ex3ndzh06T/Q9DQ=\ngithub.com/prometheus/exporter-toolkit v0.13.2/go.mod h1:tCqnfx21q6qN1KA4U3Bfb8uWzXfijIrJz3/kTIqMV7g=\ngithub.com/prometheus/procfs v0.15.2-0.20240603130017-1754b780536b h1:4EJkx3vycI+n5JY5ht+bnSUGamkmmXkpcNeO/OBT/0A=\ngithub.com/prometheus/procfs v0.15.2-0.20240603130017-1754b780536b/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=\ngithub.com/rogpeppe/go-internal v1.10.0 h1:TMyTOH3F/DB16zRVcYyreMH6GnZZrwQVAoYjRBZyWFQ=\ngithub.com/rogpeppe/go-internal v1.10.0/go.mod h1:UQnix2H7Ngw/k4C5ijL5+65zddjncjaFoBhdsK/akog=\ngithub.com/safchain/ethtool v0.5.9 h1://6RvaOKFf3nQ0rl5+8zBbE4/72455VC9Jq61pfq67E=\ngithub.com/safchain/ethtool v0.5.9/go.mod h1:w8oSsZeowyRaM7xJJBAbubzzrOkwO8TBgPSEqPP/5mg=\ngithub.com/siebenmann/go-kstat v0.0.0-20210513183136-173c9b0a9973 h1:GfSdC6wKfTGcgCS7BtzF5694Amne1pGCSTY252WhlEY=\ngithub.com/siebenmann/go-kstat v0.0.0-20210513183136-173c9b0a9973/go.mod h1:G81aIFAMS9ECrwBYR9YxhlPjWgrItd+Kje78O6+uqm8=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/xhit/go-str2duration/v2 v2.1.0 h1:lxklc02Drh6ynqX+DdPyp5pCKLUQpRT8bp8Ydu2Bstc=\ngithub.com/xhit/go-str2duration/v2 v2.1.0/go.mod h1:ohY8p+0f07DiV6Em5LKB0s2YpLtXVyJfNt1+BlmyAsU=\ngo.uber.org/atomic v1.7.0 h1:ADUqmZGgLDDfbSL9ZmPxKTybcoEYHgpYfELNoN+7hsw=\ngo.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/multierr v1.6.0 h1:y6IPFStTAIT5Ytl7/XYmHvzXQ7S3g/IeZW9hyZ5thw4=\ngo.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20240909161429-701f63a606c0 h1:e66Fs6Z+fZTbFBAxKfP3PALWBtpfqks2bwGcexMxgtk=\ngolang.org/x/exp v0.0.0-20240909161429-701f63a606c0/go.mod h1:2TbTHSBQa924w8M6Xs1QcRcFwyucIwBGpK1p2f1YFFY=\ngolang.org/x/net v0.32.0 h1:ZqPmj8Kzc+Y6e0+skZsuACbx+wzMgo5MQsJh9Qd6aYI=\ngolang.org/x/net v0.32.0/go.mod h1:CwU0IoeOlnQQWJ6ioyFrfRuomB8GKF6KbYXZVyeXNfs=\ngolang.org/x/oauth2 v0.24.0 h1:KTBBxWqUa0ykRPLtV69rRto9TLXcqYkeswu48x/gvNE=\ngolang.org/x/oauth2 v0.24.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20201204225414-ed752295db88/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20211031064116-611d5d643895/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.27.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngoogle.golang.org/protobuf v1.35.2 h1:8Ar7bF+apOIoThw1EdZl0p1oWvMqTHmpA2fRTyZO8io=\ngoogle.golang.org/protobuf v1.35.2/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/yaml.v1 v1.0.0-20140924161607-9f9df34309c0/go.mod h1:WDnlLJ4WF5VGsH/HVa3CI79GS0ol3YnhVnKP89i0kNg=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhowett.net/plist v1.0.1 h1:37GdZ8tP09Q35o9ych3ehygcsL+HqKSwzctveSlarvM=\nhowett.net/plist v1.0.1/go.mod h1:lqaXoTrLY4hg8tnEzNru53gicrbv7rrk+2xJA/7hw9g=\n"
        },
        {
          "name": "node_exporter.go",
          "type": "blob",
          "size": 7.962890625,
          "content": "// Copyright 2015 The Prometheus Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log/slog\"\n\t\"net/http\"\n\t_ \"net/http/pprof\"\n\t\"os\"\n\t\"os/user\"\n\t\"runtime\"\n\t\"slices\"\n\t\"sort\"\n\n\t\"github.com/prometheus/common/promslog\"\n\t\"github.com/prometheus/common/promslog/flag\"\n\n\t\"github.com/alecthomas/kingpin/v2\"\n\t\"github.com/prometheus/client_golang/prometheus\"\n\tpromcollectors \"github.com/prometheus/client_golang/prometheus/collectors\"\n\tversioncollector \"github.com/prometheus/client_golang/prometheus/collectors/version\"\n\t\"github.com/prometheus/client_golang/prometheus/promhttp\"\n\t\"github.com/prometheus/common/version\"\n\t\"github.com/prometheus/exporter-toolkit/web\"\n\t\"github.com/prometheus/exporter-toolkit/web/kingpinflag\"\n\t\"github.com/prometheus/node_exporter/collector\"\n)\n\n// handler wraps an unfiltered http.Handler but uses a filtered handler,\n// created on the fly, if filtering is requested. Create instances with\n// newHandler.\ntype handler struct {\n\tunfilteredHandler http.Handler\n\t// enabledCollectors list is used for logging and filtering\n\tenabledCollectors []string\n\t// exporterMetricsRegistry is a separate registry for the metrics about\n\t// the exporter itself.\n\texporterMetricsRegistry *prometheus.Registry\n\tincludeExporterMetrics  bool\n\tmaxRequests             int\n\tlogger                  *slog.Logger\n}\n\nfunc newHandler(includeExporterMetrics bool, maxRequests int, logger *slog.Logger) *handler {\n\th := &handler{\n\t\texporterMetricsRegistry: prometheus.NewRegistry(),\n\t\tincludeExporterMetrics:  includeExporterMetrics,\n\t\tmaxRequests:             maxRequests,\n\t\tlogger:                  logger,\n\t}\n\tif h.includeExporterMetrics {\n\t\th.exporterMetricsRegistry.MustRegister(\n\t\t\tpromcollectors.NewProcessCollector(promcollectors.ProcessCollectorOpts{}),\n\t\t\tpromcollectors.NewGoCollector(),\n\t\t)\n\t}\n\tif innerHandler, err := h.innerHandler(); err != nil {\n\t\tpanic(fmt.Sprintf(\"Couldn't create metrics handler: %s\", err))\n\t} else {\n\t\th.unfilteredHandler = innerHandler\n\t}\n\treturn h\n}\n\n// ServeHTTP implements http.Handler.\nfunc (h *handler) ServeHTTP(w http.ResponseWriter, r *http.Request) {\n\tcollects := r.URL.Query()[\"collect[]\"]\n\th.logger.Debug(\"collect query:\", \"collects\", collects)\n\n\texcludes := r.URL.Query()[\"exclude[]\"]\n\th.logger.Debug(\"exclude query:\", \"excludes\", excludes)\n\n\tif len(collects) == 0 && len(excludes) == 0 {\n\t\t// No filters, use the prepared unfiltered handler.\n\t\th.unfilteredHandler.ServeHTTP(w, r)\n\t\treturn\n\t}\n\n\tif len(collects) > 0 && len(excludes) > 0 {\n\t\th.logger.Debug(\"rejecting combined collect and exclude queries\")\n\t\tw.WriteHeader(http.StatusBadRequest)\n\t\tw.Write([]byte(\"Combined collect and exclude queries are not allowed.\"))\n\t\treturn\n\t}\n\n\tfilters := &collects\n\tif len(excludes) > 0 {\n\t\t// In exclude mode, filtered collectors = enabled - excludeed.\n\t\tf := []string{}\n\t\tfor _, c := range h.enabledCollectors {\n\t\t\tif (slices.Index(excludes, c)) == -1 {\n\t\t\t\tf = append(f, c)\n\t\t\t}\n\t\t}\n\t\tfilters = &f\n\t}\n\n\t// To serve filtered metrics, we create a filtering handler on the fly.\n\tfilteredHandler, err := h.innerHandler(*filters...)\n\tif err != nil {\n\t\th.logger.Warn(\"Couldn't create filtered metrics handler:\", \"err\", err)\n\t\tw.WriteHeader(http.StatusBadRequest)\n\t\tw.Write([]byte(fmt.Sprintf(\"Couldn't create filtered metrics handler: %s\", err)))\n\t\treturn\n\t}\n\tfilteredHandler.ServeHTTP(w, r)\n}\n\n// innerHandler is used to create both the one unfiltered http.Handler to be\n// wrapped by the outer handler and also the filtered handlers created on the\n// fly. The former is accomplished by calling innerHandler without any arguments\n// (in which case it will log all the collectors enabled via command-line\n// flags).\nfunc (h *handler) innerHandler(filters ...string) (http.Handler, error) {\n\tnc, err := collector.NewNodeCollector(h.logger, filters...)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"couldn't create collector: %s\", err)\n\t}\n\n\t// Only log the creation of an unfiltered handler, which should happen\n\t// only once upon startup.\n\tif len(filters) == 0 {\n\t\th.logger.Info(\"Enabled collectors\")\n\t\tfor n := range nc.Collectors {\n\t\t\th.enabledCollectors = append(h.enabledCollectors, n)\n\t\t}\n\t\tsort.Strings(h.enabledCollectors)\n\t\tfor _, c := range h.enabledCollectors {\n\t\t\th.logger.Info(c)\n\t\t}\n\t}\n\n\tr := prometheus.NewRegistry()\n\tr.MustRegister(versioncollector.NewCollector(\"node_exporter\"))\n\tif err := r.Register(nc); err != nil {\n\t\treturn nil, fmt.Errorf(\"couldn't register node collector: %s\", err)\n\t}\n\n\tvar handler http.Handler\n\tif h.includeExporterMetrics {\n\t\thandler = promhttp.HandlerFor(\n\t\t\tprometheus.Gatherers{h.exporterMetricsRegistry, r},\n\t\t\tpromhttp.HandlerOpts{\n\t\t\t\tErrorLog:            slog.NewLogLogger(h.logger.Handler(), slog.LevelError),\n\t\t\t\tErrorHandling:       promhttp.ContinueOnError,\n\t\t\t\tMaxRequestsInFlight: h.maxRequests,\n\t\t\t\tRegistry:            h.exporterMetricsRegistry,\n\t\t\t},\n\t\t)\n\t\t// Note that we have to use h.exporterMetricsRegistry here to\n\t\t// use the same promhttp metrics for all expositions.\n\t\thandler = promhttp.InstrumentMetricHandler(\n\t\t\th.exporterMetricsRegistry, handler,\n\t\t)\n\t} else {\n\t\thandler = promhttp.HandlerFor(\n\t\t\tr,\n\t\t\tpromhttp.HandlerOpts{\n\t\t\t\tErrorLog:            slog.NewLogLogger(h.logger.Handler(), slog.LevelError),\n\t\t\t\tErrorHandling:       promhttp.ContinueOnError,\n\t\t\t\tMaxRequestsInFlight: h.maxRequests,\n\t\t\t},\n\t\t)\n\t}\n\n\treturn handler, nil\n}\n\nfunc main() {\n\tvar (\n\t\tmetricsPath = kingpin.Flag(\n\t\t\t\"web.telemetry-path\",\n\t\t\t\"Path under which to expose metrics.\",\n\t\t).Default(\"/metrics\").String()\n\t\tdisableExporterMetrics = kingpin.Flag(\n\t\t\t\"web.disable-exporter-metrics\",\n\t\t\t\"Exclude metrics about the exporter itself (promhttp_*, process_*, go_*).\",\n\t\t).Bool()\n\t\tmaxRequests = kingpin.Flag(\n\t\t\t\"web.max-requests\",\n\t\t\t\"Maximum number of parallel scrape requests. Use 0 to disable.\",\n\t\t).Default(\"40\").Int()\n\t\tdisableDefaultCollectors = kingpin.Flag(\n\t\t\t\"collector.disable-defaults\",\n\t\t\t\"Set all collectors to disabled by default.\",\n\t\t).Default(\"false\").Bool()\n\t\tmaxProcs = kingpin.Flag(\n\t\t\t\"runtime.gomaxprocs\", \"The target number of CPUs Go will run on (GOMAXPROCS)\",\n\t\t).Envar(\"GOMAXPROCS\").Default(\"1\").Int()\n\t\ttoolkitFlags = kingpinflag.AddFlags(kingpin.CommandLine, \":9100\")\n\t)\n\n\tpromslogConfig := &promslog.Config{}\n\tflag.AddFlags(kingpin.CommandLine, promslogConfig)\n\tkingpin.Version(version.Print(\"node_exporter\"))\n\tkingpin.CommandLine.UsageWriter(os.Stdout)\n\tkingpin.HelpFlag.Short('h')\n\tkingpin.Parse()\n\tlogger := promslog.New(promslogConfig)\n\n\tif *disableDefaultCollectors {\n\t\tcollector.DisableDefaultCollectors()\n\t}\n\tlogger.Info(\"Starting node_exporter\", \"version\", version.Info())\n\tlogger.Info(\"Build context\", \"build_context\", version.BuildContext())\n\tif user, err := user.Current(); err == nil && user.Uid == \"0\" {\n\t\tlogger.Warn(\"Node Exporter is running as root user. This exporter is designed to run as unprivileged user, root is not required.\")\n\t}\n\truntime.GOMAXPROCS(*maxProcs)\n\tlogger.Debug(\"Go MAXPROCS\", \"procs\", runtime.GOMAXPROCS(0))\n\n\thttp.Handle(*metricsPath, newHandler(!*disableExporterMetrics, *maxRequests, logger))\n\tif *metricsPath != \"/\" {\n\t\tlandingConfig := web.LandingConfig{\n\t\t\tName:        \"Node Exporter\",\n\t\t\tDescription: \"Prometheus Node Exporter\",\n\t\t\tVersion:     version.Info(),\n\t\t\tLinks: []web.LandingLinks{\n\t\t\t\t{\n\t\t\t\t\tAddress: *metricsPath,\n\t\t\t\t\tText:    \"Metrics\",\n\t\t\t\t},\n\t\t\t},\n\t\t}\n\t\tlandingPage, err := web.NewLandingPage(landingConfig)\n\t\tif err != nil {\n\t\t\tlogger.Error(err.Error())\n\t\t\tos.Exit(1)\n\t\t}\n\t\thttp.Handle(\"/\", landingPage)\n\t}\n\n\tserver := &http.Server{}\n\tif err := web.ListenAndServe(server, toolkitFlags, logger); err != nil {\n\t\tlogger.Error(err.Error())\n\t\tos.Exit(1)\n\t}\n}\n"
        },
        {
          "name": "node_exporter_test.go",
          "type": "blob",
          "size": 3.7978515625,
          "content": "// Copyright 2017 The Prometheus Authors\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io\"\n\t\"net/http\"\n\t\"os\"\n\t\"os/exec\"\n\t\"path/filepath\"\n\t\"testing\"\n\t\"time\"\n\n\t\"github.com/prometheus/procfs\"\n)\n\nvar (\n\tbinary = filepath.Join(os.Getenv(\"GOPATH\"), \"bin/node_exporter\")\n)\n\nconst (\n\taddress = \"localhost:19100\"\n)\n\nfunc TestFileDescriptorLeak(t *testing.T) {\n\tif _, err := os.Stat(binary); err != nil {\n\t\tt.Skipf(\"node_exporter binary not available, try to run `make build` first: %s\", err)\n\t}\n\tfs, err := procfs.NewDefaultFS()\n\tif err != nil {\n\t\tt.Skipf(\"proc filesystem is not available, but currently required to read number of open file descriptors: %s\", err)\n\t}\n\tif _, err := fs.Stat(); err != nil {\n\t\tt.Errorf(\"unable to read process stats: %s\", err)\n\t}\n\n\texporter := exec.Command(binary, \"--web.listen-address\", address)\n\ttest := func(pid int) error {\n\t\tif err := queryExporter(address); err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproc, err := procfs.NewProc(pid)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfdsBefore, err := proc.FileDescriptors()\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfor i := 0; i < 5; i++ {\n\t\t\tif err := queryExporter(address); err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t}\n\t\tfdsAfter, err := proc.FileDescriptors()\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tif want, have := len(fdsBefore), len(fdsAfter); want != have {\n\t\t\treturn fmt.Errorf(\"want %d open file descriptors after metrics scrape, have %d\", want, have)\n\t\t}\n\t\treturn nil\n\t}\n\n\tif err := runCommandAndTests(exporter, address, test); err != nil {\n\t\tt.Error(err)\n\t}\n}\n\nfunc TestHandlingOfDuplicatedMetrics(t *testing.T) {\n\tif _, err := os.Stat(binary); err != nil {\n\t\tt.Skipf(\"node_exporter binary not available, try to run `make build` first: %s\", err)\n\t}\n\n\tdir, err := os.MkdirTemp(\"\", \"node-exporter\")\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\tdefer os.RemoveAll(dir)\n\n\tcontent := []byte(\"dummy_metric 1\\n\")\n\tif err := os.WriteFile(filepath.Join(dir, \"a.prom\"), content, 0600); err != nil {\n\t\tt.Fatal(err)\n\t}\n\tif err := os.WriteFile(filepath.Join(dir, \"b.prom\"), content, 0600); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\texporter := exec.Command(binary, \"--web.listen-address\", address, \"--collector.textfile.directory\", dir)\n\ttest := func(_ int) error {\n\t\treturn queryExporter(address)\n\t}\n\n\tif err := runCommandAndTests(exporter, address, test); err != nil {\n\t\tt.Error(err)\n\t}\n}\n\nfunc queryExporter(address string) error {\n\tresp, err := http.Get(fmt.Sprintf(\"http://%s/metrics\", address))\n\tif err != nil {\n\t\treturn err\n\t}\n\tb, err := io.ReadAll(resp.Body)\n\tif err != nil {\n\t\treturn err\n\t}\n\tif err := resp.Body.Close(); err != nil {\n\t\treturn err\n\t}\n\tif want, have := http.StatusOK, resp.StatusCode; want != have {\n\t\treturn fmt.Errorf(\"want /metrics status code %d, have %d. Body:\\n%s\", want, have, b)\n\t}\n\treturn nil\n}\n\nfunc runCommandAndTests(cmd *exec.Cmd, address string, fn func(pid int) error) error {\n\tif err := cmd.Start(); err != nil {\n\t\treturn fmt.Errorf(\"failed to start command: %s\", err)\n\t}\n\ttime.Sleep(50 * time.Millisecond)\n\tfor i := 0; i < 10; i++ {\n\t\tif err := queryExporter(address); err == nil {\n\t\t\tbreak\n\t\t}\n\t\ttime.Sleep(500 * time.Millisecond)\n\t\tif cmd.Process == nil || i == 9 {\n\t\t\treturn fmt.Errorf(\"can't start command\")\n\t\t}\n\t}\n\n\terrc := make(chan error)\n\tgo func(pid int) {\n\t\terrc <- fn(pid)\n\t}(cmd.Process.Pid)\n\n\terr := <-errc\n\tif cmd.Process != nil {\n\t\tcmd.Process.Kill()\n\t}\n\treturn err\n}\n"
        },
        {
          "name": "staticcheck.conf",
          "type": "blob",
          "size": 0.0263671875,
          "content": "checks = [\"all\", \"ST1003\"]\n"
        },
        {
          "name": "test_image.sh",
          "type": "blob",
          "size": 0.591796875,
          "content": "#!/bin/bash\nset -exo pipefail\n\ndocker_image=$1\nport=$2\n\ncontainer_id=''\n\nwait_start() {\n    for in in {1..10}; do\n        if  /usr/bin/curl -s -m 5 -f \"http://localhost:${port}/metrics\" > /dev/null; then\n            docker_cleanup\n            exit 0\n        else\n            sleep 1\n        fi\n    done\n\n    exit 1\n}\n\ndocker_start() {\n    container_id=$(docker run -d -p \"${port}\":\"${port}\" \"${docker_image}\")\n}\n\ndocker_cleanup() {\n    docker kill \"${container_id}\"\n}\n\nif [[ \"$#\" -ne 2 ]] ; then\n    echo \"Usage: $0 quay.io/prometheus/node-exporter:v0.13.0 9100\" >&2\n    exit 1\nfi\n\ndocker_start\nwait_start\n"
        },
        {
          "name": "text_collector_examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "tls_config_noAuth.bad.yml",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "ttar",
          "type": "blob",
          "size": 10.79296875,
          "content": "#!/usr/bin/env bash\n\n# Purpose: plain text tar format\n# Limitations: - only suitable for text files, directories, and symlinks\n#              - stores only filename, content, and mode\n#              - not designed for untrusted input\n#\n# Note: must work with bash version 3.2 (macOS)\n\n# Copyright 2017 Roger Luethi\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nset -o errexit -o nounset\n\n# Sanitize environment (for instance, standard sorting of glob matches)\nexport LC_ALL=C\n\npath=\"\"\nCMD=\"\"\nARG_STRING=\"$*\"\n\n#------------------------------------------------------------------------------\n# Not all sed implementations can work on null bytes. In order to make ttar\n# work out of the box on macOS, use Python as a stream editor.\n\nUSE_PYTHON=0\n\nPYTHON_CREATE_FILTER=$(cat << 'PCF'\n#!/usr/bin/env python\n\nimport re\nimport sys\n\nfor line in sys.stdin:\n    line = re.sub(r'EOF', r'\\EOF', line)\n    line = re.sub(r'NULLBYTE', r'\\NULLBYTE', line)\n    line = re.sub('\\x00', r'NULLBYTE', line)\n    sys.stdout.write(line)\nPCF\n)\n\nPYTHON_EXTRACT_FILTER=$(cat << 'PEF'\n#!/usr/bin/env python\n\nimport re\nimport sys\n\nfor line in sys.stdin:\n    line = re.sub(r'(?<!\\\\)NULLBYTE', '\\x00', line)\n    line = re.sub(r'\\\\NULLBYTE', 'NULLBYTE', line)\n    line = re.sub(r'([^\\\\])EOF', r'\\1', line)\n    line = re.sub(r'\\\\EOF', 'EOF', line)\n    sys.stdout.write(line)\nPEF\n)\n\nfunction test_environment {\n    if [[ \"$(echo \"a\" | sed 's/a/\\x0/' | wc -c)\" -ne 2 ]]; then\n        echo \"WARNING sed unable to handle null bytes, using Python (slow).\"\n        if ! which python >/dev/null; then\n            echo \"ERROR Python not found. Aborting.\"\n            exit 2\n        fi\n        USE_PYTHON=1\n    fi\n}\n\n#------------------------------------------------------------------------------\n\nfunction usage {\n    bname=$(basename \"$0\")\n    cat << USAGE\nUsage:   $bname [-C <DIR>] -c -f <ARCHIVE> <FILE...> (create archive)\n         $bname            -t -f <ARCHIVE>           (list archive contents)\n         $bname [-C <DIR>] -x -f <ARCHIVE>           (extract archive)\n\nOptions:\n         -C <DIR>                                    (change directory)\n         -v                                          (verbose)\n\nExample: Change to sysfs directory, create ttar file from fixtures directory\n         $bname -C sysfs -c -f sysfs/fixtures.ttar fixtures/\nUSAGE\nexit \"$1\"\n}\n\nfunction vecho {\n    if [ \"${VERBOSE:-}\" == \"yes\" ]; then\n        echo >&7 \"$@\"\n    fi\n}\n\nfunction set_cmd {\n    if [ -n \"$CMD\" ]; then\n        echo \"ERROR: more than one command given\"\n        echo\n        usage 2\n    fi\n    CMD=$1\n}\n\nunset VERBOSE\n\nwhile getopts :cf:htxvC: opt; do\n    case $opt in\n        c)\n            set_cmd \"create\"\n            ;;\n        f)\n            ARCHIVE=$OPTARG\n            ;;\n        h)\n            usage 0\n            ;;\n        t)\n            set_cmd \"list\"\n            ;;\n        x)\n            set_cmd \"extract\"\n            ;;\n        v)\n            VERBOSE=yes\n            exec 7>&1\n            ;;\n        C)\n            CDIR=$OPTARG\n            ;;\n        *)\n            echo >&2 \"ERROR: invalid option -$OPTARG\"\n            echo\n            usage 1\n            ;;\n    esac\ndone\n\n# Remove processed options from arguments\nshift $(( OPTIND - 1 ));\n\nif [ \"${CMD:-}\" == \"\" ]; then\n    echo >&2 \"ERROR: no command given\"\n    echo\n    usage 1\nelif [ \"${ARCHIVE:-}\" == \"\" ]; then\n    echo >&2 \"ERROR: no archive name given\"\n    echo\n    usage 1\nfi\n\nfunction list {\n    local path=\"\"\n    local size=0\n    local line_no=0\n    local ttar_file=$1\n    if [ -n \"${2:-}\" ]; then\n        echo >&2 \"ERROR: too many arguments.\"\n        echo\n        usage 1\n    fi\n    if [ ! -e \"$ttar_file\" ]; then\n        echo >&2 \"ERROR: file not found ($ttar_file)\"\n        echo\n        usage 1\n    fi\n    while read -r line; do\n        line_no=$(( line_no + 1 ))\n        if [ $size -gt 0 ]; then\n            size=$(( size - 1 ))\n            continue\n        fi\n        if [[ $line =~ ^Path:\\ (.*)$ ]]; then\n            path=${BASH_REMATCH[1]}\n        elif [[ $line =~ ^Lines:\\ (.*)$ ]]; then\n            size=${BASH_REMATCH[1]}\n            echo \"$path\"\n        elif [[ $line =~ ^Directory:\\ (.*)$ ]]; then\n            path=${BASH_REMATCH[1]}\n            echo \"$path/\"\n        elif [[ $line =~ ^SymlinkTo:\\ (.*)$ ]]; then\n            echo  \"$path -> ${BASH_REMATCH[1]}\"\n        fi\n    done < \"$ttar_file\"\n}\n\nfunction extract {\n    local path=\"\"\n    local size=0\n    local line_no=0\n    local ttar_file=$1\n    if [ -n \"${2:-}\" ]; then\n        echo >&2 \"ERROR: too many arguments.\"\n        echo\n        usage 1\n    fi\n    if [ ! -e \"$ttar_file\" ]; then\n        echo >&2 \"ERROR: file not found ($ttar_file)\"\n        echo\n        usage 1\n    fi\n    while IFS= read -r line; do\n        line_no=$(( line_no + 1 ))\n        local eof_without_newline\n        if [ \"$size\" -gt 0 ]; then\n            if [[ \"$line\" =~ [^\\\\]EOF ]]; then\n                # An EOF not preceded by a backslash indicates that the line\n                # does not end with a newline\n                eof_without_newline=1\n            else\n                eof_without_newline=0\n            fi\n            # Replace NULLBYTE with null byte if at beginning of line\n            # Replace NULLBYTE with null byte unless preceded by backslash\n            # Remove one backslash in front of NULLBYTE (if any)\n            # Remove EOF unless preceded by backslash\n            # Remove one backslash in front of EOF\n            if [ $USE_PYTHON -eq 1 ]; then\n                echo -n \"$line\" | python -c \"$PYTHON_EXTRACT_FILTER\" >> \"$path\"\n            else\n                # The repeated pattern makes up for sed's lack of negative\n                # lookbehind assertions (for consecutive null bytes).\n                echo -n \"$line\" | \\\n                    sed -e 's/^NULLBYTE/\\x0/g;\n                            s/\\([^\\\\]\\)NULLBYTE/\\1\\x0/g;\n                            s/\\([^\\\\]\\)NULLBYTE/\\1\\x0/g;\n                            s/\\\\NULLBYTE/NULLBYTE/g;\n                            s/\\([^\\\\]\\)EOF/\\1/g;\n                            s/\\\\EOF/EOF/g;\n                    ' >> \"$path\"\n            fi\n            if [[ \"$eof_without_newline\" -eq 0 ]]; then\n                echo >> \"$path\"\n            fi\n            size=$(( size - 1 ))\n            continue\n        fi\n        if [[ $line =~ ^Path:\\ (.*)$ ]]; then\n            path=${BASH_REMATCH[1]}\n            if [ -e \"$path\" ] || [ -L \"$path\" ]; then\n                rm \"$path\"\n            fi\n        elif [[ $line =~ ^Lines:\\ (.*)$ ]]; then\n            size=${BASH_REMATCH[1]}\n            # Create file even if it is zero-length.\n            touch \"$path\"\n            vecho \"    $path\"\n        elif [[ $line =~ ^Mode:\\ (.*)$ ]]; then\n            mode=${BASH_REMATCH[1]}\n            chmod \"$mode\" \"$path\"\n            vecho \"$mode\"\n        elif [[ $line =~ ^Directory:\\ (.*)$ ]]; then\n            path=${BASH_REMATCH[1]}\n            mkdir -p \"$path\"\n            vecho \"    $path/\"\n        elif [[ $line =~ ^SymlinkTo:\\ (.*)$ ]]; then\n            ln -s \"${BASH_REMATCH[1]}\" \"$path\"\n            vecho \"    $path -> ${BASH_REMATCH[1]}\"\n        elif [[ $line =~ ^# ]]; then\n            # Ignore comments between files\n            continue\n        else\n            echo >&2 \"ERROR: Unknown keyword on line $line_no: $line\"\n            exit 1\n        fi\n    done < \"$ttar_file\"\n}\n\nfunction div {\n    echo \"# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\" \\\n         \"- - - - - -\"\n}\n\nfunction get_mode {\n    local mfile=$1\n    if [ -z \"${STAT_OPTION:-}\" ]; then\n        if stat -c '%a' \"$mfile\" >/dev/null 2>&1; then\n            # GNU stat\n            STAT_OPTION='-c'\n            STAT_FORMAT='%a'\n        else\n            # BSD stat\n            STAT_OPTION='-f'\n            # Octal output, user/group/other (omit file type, sticky bit)\n            STAT_FORMAT='%OLp'\n        fi\n    fi\n    stat \"${STAT_OPTION}\" \"${STAT_FORMAT}\" \"$mfile\"\n}\n\nfunction _create {\n    shopt -s nullglob\n    local mode\n    local eof_without_newline\n    while (( \"$#\" )); do\n        file=$1\n        if [ -L \"$file\" ]; then\n            echo \"Path: $file\"\n            symlinkTo=$(readlink \"$file\")\n            echo \"SymlinkTo: $symlinkTo\"\n            vecho \"    $file -> $symlinkTo\"\n            div\n        elif [ -d \"$file\" ]; then\n            # Strip trailing slash (if there is one)\n            file=${file%/}\n            echo \"Directory: $file\"\n            mode=$(get_mode \"$file\")\n            echo \"Mode: $mode\"\n            vecho \"$mode $file/\"\n            div\n            # Find all files and dirs, including hidden/dot files\n            for x in \"$file/\"{*,.[^.]*}; do\n                _create \"$x\"\n            done\n        elif [ -f \"$file\" ]; then\n            echo \"Path: $file\"\n            lines=$(wc -l \"$file\"|awk '{print $1}')\n            eof_without_newline=0\n            if [[ \"$(wc -c \"$file\"|awk '{print $1}')\" -gt 0 ]] && \\\n                    [[ \"$(tail -c 1 \"$file\" | wc -l)\" -eq 0 ]]; then\n                eof_without_newline=1\n                lines=$((lines+1))\n            fi\n            echo \"Lines: $lines\"\n            # Add backslash in front of EOF\n            # Add backslash in front of NULLBYTE\n            # Replace null byte with NULLBYTE\n            if [ $USE_PYTHON -eq 1 ]; then\n                < \"$file\" python -c \"$PYTHON_CREATE_FILTER\"\n            else\n                < \"$file\" \\\n                    sed 's/EOF/\\\\EOF/g;\n                         s/NULLBYTE/\\\\NULLBYTE/g;\n                         s/\\x0/NULLBYTE/g;\n                    '\n            fi\n            if [[ \"$eof_without_newline\" -eq 1 ]]; then\n                # Finish line with EOF to indicate that the original line did\n                # not end with a linefeed\n                echo \"EOF\"\n            fi\n            mode=$(get_mode \"$file\")\n            echo \"Mode: $mode\"\n            vecho \"$mode $file\"\n            div\n        else\n            echo >&2 \"ERROR: file not found ($file in $(pwd))\"\n            exit 2\n        fi\n        shift\n    done\n}\n\nfunction create {\n    ttar_file=$1\n    shift\n    if [ -z \"${1:-}\" ]; then\n        echo >&2 \"ERROR: missing arguments.\"\n        echo\n        usage 1\n    fi\n    if [ -e \"$ttar_file\" ]; then\n        rm \"$ttar_file\"\n    fi\n    exec > \"$ttar_file\"\n    echo \"# Archive created by ttar $ARG_STRING\"\n    _create \"$@\"\n}\n\ntest_environment\n\nif [ -n \"${CDIR:-}\" ]; then\n    if [[ \"$ARCHIVE\" != /* ]]; then\n        # Relative path: preserve the archive's location before changing\n        # directory\n        ARCHIVE=\"$(pwd)/$ARCHIVE\"\n    fi\n    cd \"$CDIR\"\nfi\n\n\"$CMD\" \"$ARCHIVE\" \"$@\"\n"
        }
      ]
    }
  ]
}