{
  "metadata": {
    "timestamp": 1736567887252,
    "page": 39,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "hypermodeinc/dgraph",
      "stars": 20572,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.029296875,
          "content": "/contrib\n/wiki\n/.git\n/.github\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.7255859375,
          "content": "/build\n/installs\n/coverage.out\n/dgraph-bulk-loader\n/osx-docker-gopath\n\n# goland project folder\n.idea\ndgraph.iml\n\n# Binaries for programs and plugins\n*.exe\n*.exe~\n*.dll\n*.so\n*.dylib\n\n# Test binary, build with `go test -c`\n*.test\n\n# Output of the go coverage tool\n*.out\n\n#darwin\n.DS_Store\n\nvendor\n.minio.sys\n\n# Local test files\ncontrib/local-test/dql-data.json\ncontrib/local-test/dql-data.rdf\ncontrib/local-test/gql-data.json\ncontrib/local-test/query.dql\ncontrib/local-test/query.gql\ncontrib/local-test/schema.dql\ncontrib/local-test/schema.graphql\ncontrib/local-test/variables.json\n\n\n# Dgraph\nsystest/bulk_live/bulk/**/*.txt\nsystest/bulk_live/bulk/**/*.rdf\n\nsystest/bulk_live/live/**/*.rdf\nsystest/bulk_live/live/**/*.txt\nx/log_test/*.enc\n*.buf\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 0.59765625,
          "content": "run:\n  skip-dirs:\n  skip-files:\n\nlinters-settings:\n  lll:\n    line-length: 120\n  staticcheck:\n    checks:\n      - all\n      - '-SA1019' # it is okay to use math/rand at times.\n  gosec:\n    excludes: # these are not relevant for us right now\n      - G101\n      - G107\n      - G108\n      - G110\n      - G112\n      - G114\n      - G201\n      - G204\n      - G306\n      - G402\n      - G404\n\nlinters:\n  disable-all: true\n  enable:\n    - errcheck\n    - gofmt\n    - goimports\n    - gosec\n    - gosimple\n    - govet\n    - ineffassign\n    - lll\n    - staticcheck\n    - unconvert\n    - unused\n    - intrange\n    - bodyclose\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 235.87890625,
          "content": "# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project will adhere to [Semantic Versioning](https://semver.org) starting `v22.0.0`.\n\n## [v24.0.5] - 2024-11-05\n[v24.0.5]: https://github.com/hypermodeinc/dgraph/compare/v24.0.4...v24.0.5\n\n### Fixed\n\n- **Core**\n  - fix(core): fix duplicate mutation entries for count index (#9208)\n\n- **Chore**\n  - Update cd-dgraph.yml to create unique artifacts (#9194)\n\n## [v24.0.4] - 2024-10-08\n[v24.0.4]: https://github.com/hypermodeinc/dgraph/compare/v24.0.2...v24.0.4\n\n### Fixed\n\n- **Vector**\n\n  - fix(vector): fixed euclidean spelling and a bug in parameters (#9165)\n  - fix(vector): fix index rebuild when options change (#9149)\n\n- **Core**\n\n  - fix(core): update latest badger (#9169)\n  - fix(core): Update error msg for txn too old to give more context(#9170)\n  - fix(core): fix sampling rate of jaeger #9147 (#9147)\n  - fix(core): add the posting list risteretto cache back (#9181)\n  - fix(multi-tenancy): upsert groot for namespace after drop data (#9159)\n  - feat(core): use /v24 in the import (#9131)\n  - fix(DQL): unsupported ordering should raise an error (#9173)\n  - fix(tests): add explicit permissions for Trivy scan(#9130)\n  - feat(core): Expose APIs that can be used outside Dgraph (#9176)\n\n- **GraphQL**\n\n  - feat(graphql): adds @default directive to graphql (#8017)(#8837)\n\n- **Chore**\n  - upgrade dgo to v240.0.0 (#9154)\n  - chore(): add Dependabot version bumps (#9132)\n  - chore(deps): bump actions/labeler from 4 to 5 (#9134)\n  - chore(deps): bump golangci/golangci-lint-action from 4 to 6 (#9133)\n  - chore(deps): bump docker/login-action from 2 to 3 (#9135)\n  - chore(deps): bump actions/upload-artifact from 3 to 4 (#9136)\n  - chore(deps): bump github.com/spf13/cobra from 1.7.0 to 1.8.1 (#9139)\n  - chore(deps): bump github.com/bits-and-blooms/bitset from 1.13.0 to 1.14.2 (#9140)\n  - chore(deps): bump github.com/prometheus/client_golang from 1.20.1 to 1.20.2 (#9142)\n  - chore(deps): bump golang.org/x/mod from 0.20.0 to 0.21.0 (#9157)\n  - chore(deps): bump golang.org/x/text from 0.17.0 to 0.18.0 (#9156)\n  - chore(deps): bump github.com/dgraph-io/dgo/v240 from 240.0.0-rc1 to 240.0.0 (#9155)\n  - chore: Upgrade go.mod dependencies, fix jose v2 vulnerability, upgrade jemalloc (#9158)\n  - chore(deps): bump google.golang.org/grpc from 1.66.0 to 1.66.1 (#9163)\n  - chore(deps): bump google.golang.org/grpc from 1.65.0 to 1.66.0 (#9152)\n  - chore(deps): bump github.com/Masterminds/semver/v3 from 3.2.1 to 3.3.0 (#9151)\n  - chore(deps): bump github.com/docker/docker from 27.1.2+incompatible to 27.2.0+incompatible (#9150)\n  - chore(deps): bump the minor-and-patch group across 1 directory with 2 updates (#9174)\n  - chore(deps): bump github.com/docker/docker from 24.0.5+incompatible to 25.0.6+incompatible (#9123)\n  - chore(deps): bump the minor-and-patch group with 2 updates (#9178)\n  - chore(deps): bump google.golang.org/grpc from 1.67.0 to 1.67.1 in the minor-and-patch group (#9178)\n\n## [v24.0.2] - 2024-08-16\n[v24.0.1]: https://github.com/hypermodeinc/dgraph/compare/v24.0.1...v24.0.2\n\n\n\n- **Fixed**\n  \n\t- fix(core): Fix namespace used by unique query https://github.com/hypermodeinc/dgraph/pull/9119 \n\t- fix(core): Fix regression in computing cond variables  https://github.com/hypermodeinc/dgraph/pull/9126\n  \t- fix(live): Fix derigster while retrying  https://github.com/hypermodeinc/dgraph/pull/9121\n   \n\n- **Chore**\n\t- chore(deps): bump certifi from 2023.7.22 to 2024.7.4 in /contrib/config/marketplace/aws/tests https://github.com/hypermodeinc/dgraph/pull/9110\n\t- chore(deps): bump idna from 2.9 to 3.7 in /contrib/config/marketplace/aws/tests  https://github.com/hypermodeinc/dgraph/pull/9072\n\n\n- **Perf**\n\t- perf(query): Read just the latest value for scalar types https://github.com/hypermodeinc/dgraph/pull/8966\n  - perf(vector): Add heap to neighbour edges https://github.com/hypermodeinc/dgraph/pull/9122\n\n## [v24.0.1] - 2024-07-30\n[v24.0.1]: https://github.com/hypermodeinc/dgraph/compare/v24.0.0...v24.0.1\n\n> **Warning**\n> After upgrading to v24.0.1, vector index needs to be rebuilt as underlying data has changed.\n\n- **Fixed**\n  \n\t- fix(core): Fix regression in parsing json empty string #9108\n\t- fix(upgrade): fix failing upgrade tests #9042\n\t- fix(ci): fixing health endpoint issue #9116\n\t- Fix(graphql): issue with local variable squashing intended JWK index by @matthewmcneely in #9114\n\n- **Chore**\n\t- chore(deps): bump urllib3 from 1.26.18 to 1.26.19 /contrib/config/marketplace/aws/tests #9103\n\t- chore(deps): bump requests from 2.31.0 to 2.32.0 /contrib/config/marketplace/aws/tests #9090\n\n\n- **Perf**\n\t- perf(vector): updated marshalling of vector #9109\n\n\n## [v24.0.0] - 2024-06-06\n[v24.0.0]: https://github.com/hypermodeinc/dgraph/compare/v24.0.0...v23.1.0\n\n> **Warning**\n> This will be a breaking change for anyone moving from to `v.24.0.0`.\n> If you have any duplicate users or groups in Dgraph ACL, they would not be accessible from now on. Please delete any \n> duplicate users and groups before you upgrade. File format is the same, so binary can be directly replaced after.\n> deleting duplicate users and groups.\n\n### Added\n\n- **Vector**\n\t- feat(graphql): Add vector support to graphql (#9074)\n\t- feat(vector): add vector to schema in #9060\n\t- feat(vector): Added similar_to in vector in #9062\n\t- feat(vector): Add vector type to Dgraph in #9050\n\t- feat(vector): fix live loader and add tests for dropall, drop namespace, live load in #9063\n\t- fix(vector): show error is invalid input is provided to vector predicate in #9064\n\t- fix(vector):fix similar_to() error return when data is not present in #9084\n\t- fix(vector): Update query_rewriter to fix dotproduct and cosine query conversion in #9083\n\n- **Core**\n\t- feat(core): Add cache to dgraph.type predicate in #9068\n\t- [BREAKING]feat(core): add unique constraint support in schema for new predicates in #8827\n\t- feat(debug): add parse_key to debug tool in #7640\n\t- feat(acl): support more JWT algorithms for ACL by in #8912\n\t- feat(restore): add support for namespace aware restore by in #8968\n\n- **GraphQL**\n\t- feat(vector): Added lang support by in #8924\n\t- feat(graphql): allow updatable and nullable id fields. (#7736) in #9020\n### Fixed\n\n- **Core**\n\t- Fix(debug): Close file correctly before exiting on error in #9076\n\t- fix(restore): fix incr restore and normal restore for vector predicates in #9078\n\t- Fix(core): Fix deadlock in runMutation and error handling in #9085\n\t- fix(core): Fixed deadlock that happens due to timeout in #9007\n\t- fix(core): limit #edges using LimitMutationsNquad config and add logs in #9010\n\t- fix(core): Update math parsing function by in #9053\n\t- fix(restore): use different map directory for each group (#8047) in #8972\n\t- fix(export): Support for any s3 endpoint by in #8978\n\t- fix(restore): use custom type for sensitive fields by in #8969\n\t- fix(export): Escape MySQL column names in #8961\n\t- fix(debug): fix debug tool for schema keys in #7939\n\t- fix(restore): allow incrementalFrom to be 1 in restore API by in #8988\n\t- fix(raft):alpha leader fails to stream snapshot to new alpha nodes in #9022\n\t- fix(query): fix has function in filter in #9043\n\t- fix(core):Reduce x.ParsedKey memory allocation from 72 to 56 bytes by optimizing struct memory alignment in #9047\n\t- fix(restore): do not retry restore proposal (#8058) in #9017\n\n- **Perf**\n\t- perf(core): Fix performance issue in type filter (#9065) in #9089\n\t- perf(core): Update postinglistCountAndLength function to improve performance in #9088\n\t- perf(query): use quickselect instead of sorting while pagination by in #8995\n\t- perf(query): Update CompressedBin IntersectionAlgo by in #9000\n\n- **Chore**\n\t- chore(upgrade): run tests from v23.1.0 -> main in #9097\n\t- chore(deps): upgrade etcd/raft to v3 by in #7688\n\t- chore(restore): add more logs for restore request (#8050) in #8975\n\t- upgrade(go): update go version to 1.22 in #9058\n\t- chore(deps): bump github.com/apache/thrift from 0.12.0 to 0.13.0 by in #8982\n\t- chore(deps): bump golang.org/x/net from 0.14.0 to 0.17.0 in #9015\n\t- chore(deps): use bleve 2.3.10 for more languages in full text search in #9030\n\t- chore(deps): bump golang.org/x/crypto from 0.12.0 to 0.17.0 in #9032\n\t- chore(deps): bump urllib3 from 1.26.5 to 1.26.18 in /contrib/config/marketplace/aws/tests in #9018\n\t- chore(deps): bump google.golang.org/grpc from 1.56.2 to 1.56.3 in #9024\n\t- chore(deps): bump google.golang.org/protobuf from 1.31.0 to 1.33.0in #9051[\n\n## [23.1.1] - 2024-04-26\n[v23.1.1]: https://github.com/hypermodeinc/dgraph/compare/v23.1.0...v23.1.1\n\n### Fixed\n\n- **Core Dgraph**\n    - perf(core): Fix performance issue in type filter (#9065)\n\n\n- **CI & Testing**\n    - ci/cd optimizations (#9069)\n\n## [v23.1.0] - 2023-08-17\n[v23.1.0]: https://github.com/hypermodeinc/dgraph/compare/v23.0.1...v23.1.0\n\n### Added\n\n- **Core Dgraph**\n    - perf(query): Improve IntersectCompressedWithBin for UID Pack (#8941)\n    - feat(query): add feature flag normalize-compatibility-mode (#8845) (#8929)\n    - feat(alpha): support RDF response via http query request (#8004)  (#8639)\n    - perf(query): speed up parsing of a huge query (#8942)\n    - fix(live): replace panic in live loader with errors (#7798) (#8944)\n\n- **GraphQL**\n    - feat(graphql): This PR allows @id field in interface to be unique across all implementing types (#8876)\n\n### Fixed\n\n- **Core Dgraph**\n    - docs(zero): add comments in zero and clarify naming (#8945)\n    - fix(cdc): skip bad events in CDC (#8076)\n    - fix(bulk): enable running bulk loader with only gql schema (#8903)\n    - chore(badger): upgrade badger to v4.2.0 (#8932) (#8925)\n    - doc(restore): add docs for mutations in between incremental restores (#8908)\n    - chore: fix compilation on 32bit (#8895)\n    - chore(raft): add debug logs to print all transactions (#8890)\n    - chore(alpha): add logs for processing entries in applyCh (#8930)\n    - fix(acl): allow data deletion for non-reserved predicates (#8937)\n    - fix(alpha): convert numbers correctly in superflags (#7712) (#8943)\n    - chore(raft): better logging message for cleaning banned ns pred (#7886)\n\n- **Security**\n    - sec(acl): convert x.Sensitive to string type for auth hash (#8931)\n    - chore(deps): bump google.golang.org/grpc from 1.52.0 to 1.53.0 (#8900)\n    - chore(deps): bump certifi from 2022.12.7 to 2023.7.22 in /contrib/config/marketplace/aws/tests (#8920)\n    - chore(deps): bump certifi from 2022.12.7 to 2023.7.22 in /contrib/embargo (#8921)\n    - chore(deps): bump pygments from 2.7.4 to 2.15.0 in /contrib/embargo (#8913)\n    - chore: upgrade bleve to v2.3.9 (#8948)\n\n- **CI & Testing**\n    - chore: update cron job frequency to reset github notifications (#8956)\n    - test(upgrade): add v20.11 upgrade tests in query package (#8954)\n    - chore(contrib) - fixes for Vault  (#7739)\n    - chore(build): make build codename configurable (#8951)\n    - fix(upgrade): look for version string in logs bottom up (#8926)\n    - fix(upgrade): check commit SHA to find running dgraph version (#8923)\n    - chore(upgrade): run upgrade tests for v23.0.1 (#8918)\n    - chore(upgrade): ensure we run right version of Dgraph (#8910)\n    - chore(upgrade): add workaround for multiple groot issue in export-import (#8897)\n    - test(upgrade): add upgrade tests for systest/license package (#8902)\n    - chore(upgrade): increase the upgrade job duration limit to 12h (#8907)\n    - chore(upgrade): increase the duration of the CI workflow (#8906)\n    - ci(upgrade): break down upgrade tests CI workflow (#8904)\n    - test(acl): add upgrade tests for ee/acl package (#8792)\n    - chore: update pull request template (#8899)\n\n## [v23.0.1] - 2023-07-09\n[v23.0.1]: https://github.com/hypermodeinc/dgraph/compare/v23.0.0...v23.0.1\n\n### Fixed\n\n- **Core Dgraph**\n  - chore(restore): add log message when restore fails (#8893)\n  - fix(zero): fix zero's health endpoint to return json response (#8858)\n  - chore(zero): improve error message while unmarshalling WAL (#8882)\n  - fix(multi-tenancy): check existence before banning namespace (#7887)\n  - fix(bulk): removed buffer max size (#8841)\n  - chore: fix failing oss build (#8832) Fixes #8831\n  - upgrade dgo to v230.0.1 (#8785)\n\n- **CI**\n  - ci(dql): add workflow for fuzz testing (#8874)\n  - chore(ci): add workflow for OSS build + unit tests (#8834)\n\n- **Security**\n  - chore(deps): bump requests from 2.23.0 to 2.31.0 in /contrib/config/marketplace/aws/tests (#8836)\n  - chore(deps): bump requests from 2.23.0 to 2.31.0 in /contrib/embargo (#8835)\n  - chore(deps): bump github.com/docker/distribution from 2.8.0+incompatible to 2.8.2+incompatible (#8821)\n  - chore(deps): bump github.com/cloudflare/circl from 1.1.0 to 1.3.3 (#8822)\n\n## [v23.0.0] - 2023-05-08\n[v23.0.0]: https://github.com/hypermodeinc/dgraph/compare/v22.0.2...v23.0.0\n\n### Added\n\n- **GraphQL**\n    - fix(GraphQL): pass on HTTP request headers for subscriptions (https://github.com/hypermodeinc/dgraph/pull/8574)\n\n- **Core Dgraph**\n    - feat(metrics): add badger metrics (#8034) (https://github.com/hypermodeinc/dgraph/pull/8737)\n    - feat(restore): introduce incremental restore (#7942) (https://github.com/hypermodeinc/dgraph/pull/8624)\n    - chore(debug): add `only-summary` flag in `dgraph debug` to show LSM tree and namespace size (https://github.com/hypermodeinc/dgraph/pull/8516)\n    - feat(cloud): add `shared-instance` flag in limit superflag in alpha (https://github.com/hypermodeinc/dgraph/pull/8625)\n    - chore(deps): update prometheus dependency, adds new metrics (https://github.com/hypermodeinc/dgraph/pull/8655)\n    - feat(cdc): add superflag `tls` to enable TLS without CA or certs (https://github.com/hypermodeinc/dgraph/pull/8564)\n    - feat(multitenancy): namespace aware drop data (https://github.com/hypermodeinc/dgraph/pull/8511)\n\n### Fixed\n\n- **GraphQL**\n    - fix(GraphQL): nested Auth Rules not working properly (https://github.com/hypermodeinc/dgraph/pull/8571)\n\n- **Core Dgraph**\n    - Fix wal replay issue during rollup (https://github.com/hypermodeinc/dgraph/pull/8774)\n    - security(logging): fix aes implementation in audit logging (https://github.com/hypermodeinc/dgraph/pull/8323)\n    - chore(worker): unify mapper receiver names (https://github.com/hypermodeinc/dgraph/pull/8740)\n    - fix(dql): fix panic in parsing of regexp (https://github.com/hypermodeinc/dgraph/pull/8739)\n    - fix(Query): Do an error check before bubbling up nil error (https://github.com/hypermodeinc/dgraph/pull/8769)\n    - chore: replace global index with local one & fix typos (https://github.com/hypermodeinc/dgraph/pull/8719)\n    - chore(logs): add logs to track dropped proposals (https://github.com/hypermodeinc/dgraph/pull/8568)\n    - fix(debug): check length of wal entry before parsing (https://github.com/hypermodeinc/dgraph/pull/8560)\n    - opt(schema): optimize populateSchema() (https://github.com/hypermodeinc/dgraph/pull/8565)\n    - fix(zero): fix update membership to make bulk tablet proposal instead of multiple small (https://github.com/hypermodeinc/dgraph/pull/8573)\n    - fix(groot): do not upsert groot for all namespaces on restart (https://github.com/hypermodeinc/dgraph/pull/8561)\n    - fix(restore): set kv version to restoreTs for all keys (https://github.com/hypermodeinc/dgraph/pull/8563)\n    - fix(probe): do not contend for lock in lazy load (https://github.com/hypermodeinc/dgraph/pull/8566)\n    - fix(core): fixed infinite loop in CommitToDisk (https://github.com/hypermodeinc/dgraph/pull/8614)\n    - fix(proposals): incremental proposal key for zero proposals (https://github.com/hypermodeinc/dgraph/pull/8567)\n    - fix(zero): fix waiting for random time while rate limiting (https://github.com/hypermodeinc/dgraph/pull/8656)\n    - chore(deps): upgrade badger (https://github.com/hypermodeinc/dgraph/pull/8654, https://github.com/hypermodeinc/dgraph/pull/8658)\n    - opt(schema): load schema and types using Stream framework  (https://github.com/hypermodeinc/dgraph/pull/8562)\n    - fix(backup): use StreamWriter instead of KVLoader during backup restore (https://github.com/hypermodeinc/dgraph/pull/8510)\n    - fix(audit): fixing audit logs for websocket connections (https://github.com/hypermodeinc/dgraph/pull/8627)\n    - fix(restore): consider the banned namespaces while bumping (https://github.com/hypermodeinc/dgraph/pull/8559)\n    - fix(backup): create directory before writing backup (https://github.com/hypermodeinc/dgraph/pull/8638)\n\n- **Test**\n    - chore(tests): add upgrade tests in query package (https://github.com/hypermodeinc/dgraph/pull/8750)\n    - simplify test setup in query package (https://github.com/hypermodeinc/dgraph/pull/8782)\n    - add a test for incremental restore (https://github.com/hypermodeinc/dgraph/pull/8754)\n    - chore(tests): run tests in query package against dgraph cloud (https://github.com/hypermodeinc/dgraph/pull/8726)\n    - fix the backup test cluster compose file (https://github.com/hypermodeinc/dgraph/pull/8775)\n    - cleanup tests to reduce the scope of err var (https://github.com/hypermodeinc/dgraph/pull/8771)\n    - use t.TempDir() for using a temp dir in tests (https://github.com/hypermodeinc/dgraph/pull/8772)\n    - fix(test): clan cruft from test run (https://github.com/hypermodeinc/dgraph/pull/8348)\n    - chore(tests): avoid calling os.Exit in TestMain (https://github.com/hypermodeinc/dgraph/pull/8765)\n    - chore: fix linter issue on main (https://github.com/hypermodeinc/dgraph/pull/8749)\n    - recreate the context variable for parallel test (https://github.com/hypermodeinc/dgraph/pull/8748)\n    - fix(tests): wait for license to be applied before trying to login (https://github.com/hypermodeinc/dgraph/pull/8744)\n    - fix(tests): sleep longer so that ACLs are updated (https://github.com/hypermodeinc/dgraph/pull/8745)\n    - chore(test): use pointer receiver for LocalCluster methods (https://github.com/hypermodeinc/dgraph/pull/8734)\n    - chore(linter): fix unconvert linter issues on linux (https://github.com/hypermodeinc/dgraph/pull/8718)\n    - chore(linter): add unconvert linter and address related issues (https://github.com/hypermodeinc/dgraph/pull/8685)\n    - chore(ci): resolve community PR goveralls failure (https://github.com/hypermodeinc/dgraph/pull/8716)\n    - chore(test): increased iterations of the health check (https://github.com/hypermodeinc/dgraph/pull/8711)\n    - fix(test): avoid host volume mount in minio container (https://github.com/hypermodeinc/dgraph/pull/8569)\n    - chore(test): add tests for lex/iri.go,chunker/chunk.go (https://github.com/hypermodeinc/dgraph/pull/8515)\n    - chore(test): add Backup/Restore test for NFS (https://github.com/hypermodeinc/dgraph/pull/8551)\n    - chore(test): add test that after snapshot is applied, GraphQL schema is refreshed (https://github.com/hypermodeinc/dgraph/pull/8619)\n    - chore(test): upgrade graphql tests to use go 1.19 (https://github.com/hypermodeinc/dgraph/pull/8662)\n    - chore(test): add automated test to test multitenant --limit flag (https://github.com/hypermodeinc/dgraph/pull/8646)\n    - chore(test): add restore test for more than 127 namespaces (https://github.com/hypermodeinc/dgraph/pull/8643)\n    - fix(test): fix the corner case for raft entries test (https://github.com/hypermodeinc/dgraph/pull/8617)\n\n- **CD**\n    - fix(build): update dockerfile to use cache busting and reduce image size (https://github.com/hypermodeinc/dgraph/pull/8652)\n    - chore(deps): update min go build version (https://github.com/hypermodeinc/dgraph/pull/8423)\n    - chore(cd): add badger binary to dgraph docker image (https://github.com/hypermodeinc/dgraph/pull/8790)\n\n- **Security**\n    - chore(deps): bump certifi from 2020.4.5.1 to 2022.12.7 in /contrib/config/marketplace/aws/tests (https://github.com/hypermodeinc/dgraph/pull/8496)\n    - chore(deps): bump github.com/docker/distribution from 2.7.1+incompatible to 2.8.0+incompatible (https://github.com/hypermodeinc/dgraph/pull/8575)\n    - chore(deps): bump werkzeug from 0.16.1 to 2.2.3 in /contrib/embargo (https://github.com/hypermodeinc/dgraph/pull/8676)\n    - fix(sec): upgrade networkx to  (https://github.com/hypermodeinc/dgraph/pull/8613)\n    - fix(sec): CVE-2022-41721 (https://github.com/hypermodeinc/dgraph/pull/8633)\n    - fix(sec): CVE & OS Patching (https://github.com/hypermodeinc/dgraph/pull/8634)\n\n   - <details>\n      <summary>CVE Fixes (31 total)</summary>\n\n        - CVE-2013-4235\n        - CVE-2016-20013\n        - CVE-2016-2781\n        - CVE-2017-11164\n        - CVE-2021-36222\n        - CVE-2021-37750\n        - CVE-2021-39537\n        - CVE-2021-44758\n        - CVE-2022-28321\n        - CVE-2022-29458\n        - CVE-2022-3219\n        - CVE-2022-3437\n        - CVE-2022-3821\n        - CVE-2022-41717\n        - CVE-2022-41721\n        - CVE-2022-41723\n        - CVE-2022-42898\n        - CVE-2022-4304\n        - CVE-2022-43552\n        - CVE-2022-4415\n        - CVE-2022-4450\n        - CVE-2022-44640\n        - CVE-2022-48303\n        - CVE-2023-0215\n        - CVE-2023-0286\n        - CVE-2023-0361\n        - CVE-2023-0464\n        - CVE-2023-0465\n        - CVE-2023-0466\n        - CVE-2023-23916\n        - CVE-2023-26604\n        </details>\n\n### Changed\n\n- **Core Dgraph**\n    - upgrade badger to v4.1.0 (https://github.com/hypermodeinc/dgraph/pull/8783) (https://github.com/hypermodeinc/dgraph/pull/8709)\n    - fix(multitenancy) store namespace in predicate as a hex separated by a hyphen to prevent json marshal issues (https://github.com/hypermodeinc/dgraph/pull/8601)\n    - fix(query): handle bad timezone correctly (https://github.com/hypermodeinc/dgraph/pull/8657)\n    - chore(ludicroud): remove ludicrous mode from the code (https://github.com/hypermodeinc/dgraph/pull/8612)\n    - fix(backup): make the /admin/backup and /admin/export API asynchronous (https://github.com/hypermodeinc/dgraph/pull/8554)\n    - fix(mutation): validate mutation before applying it (https://github.com/hypermodeinc/dgraph/pull/8623)\n\n- **CI Enhancements**\n    - fix(ci): unpin curl (https://github.com/hypermodeinc/dgraph/pull/8577)\n    - fix(ci): adjust cron schedules (https://github.com/hypermodeinc/dgraph/pull/8592)\n    - chore(ci): Capture coverage from bulk load and LDBC tests (https://github.com/hypermodeinc/dgraph/pull/8478)\n    - chore(linter): enable gosec linter (https://github.com/hypermodeinc/dgraph/pull/8678)\n    - chore: apply go vet improvements (https://github.com/hypermodeinc/dgraph/pull/8620)\n    - chore(linter): fix some of the warnings from gas linter (https://github.com/hypermodeinc/dgraph/pull/8664)\n    - chore(linter): fix golangci config and some issues in tests (https://github.com/hypermodeinc/dgraph/pull/8669)\n    - fix(linter): address gosimple linter reports & errors (https://github.com/hypermodeinc/dgraph/pull/8628)\n\n## [v23.0.0-rc1] - 2023-04-11\n[v23.0.0-rc1]: https://github.com/hypermodeinc/dgraph/compare/v22.0.2...v23.0.0-rc1\n\n### Added\n\n- **GraphQL**\n    - fix(GraphQL): pass on HTTP request headers for subscriptions (https://github.com/hypermodeinc/dgraph/pull/8574)\n\n- **Core Dgraph**\n    - feat(metrics): add badger metrics (#8034) (https://github.com/hypermodeinc/dgraph/pull/8737)\n    - feat(restore): introduce incremental restore (#7942) (https://github.com/hypermodeinc/dgraph/pull/8624)\n    - chore(debug): add `only-summary` flag in `dgraph debug` to show LSM tree and namespace size (https://github.com/hypermodeinc/dgraph/pull/8516)\n    - feat(cloud): add `shared-instance` flag in limit superflag in alpha (https://github.com/hypermodeinc/dgraph/pull/8625)\n    - chore(deps): update prometheus dependency, adds new metrics (https://github.com/hypermodeinc/dgraph/pull/8655)\n    - feat(cdc): add superflag `tls` to enable TLS without CA or certs (https://github.com/hypermodeinc/dgraph/pull/8564)\n    - feat(multitenancy): namespace aware drop data (https://github.com/hypermodeinc/dgraph/pull/8511)\n\n### Fixed\n\n- **GragphQL**\n    - fix(GraphQL): nested Auth Rules not working properly (https://github.com/hypermodeinc/dgraph/pull/8571)\n\n- **Core Dgraph**\n    - Fix wal replay issue during rollup (https://github.com/hypermodeinc/dgraph/pull/8774)\n    - security(logging): fix aes implementation in audit logging (https://github.com/hypermodeinc/dgraph/pull/8323)\n    - chore(worker): unify mapper receiver names (https://github.com/hypermodeinc/dgraph/pull/8740)\n    - fix(dql): fix panic in parsing of regexp (https://github.com/hypermodeinc/dgraph/pull/8739)\n    - fix(Query): Do an error check before bubbling up nil error (https://github.com/hypermodeinc/dgraph/pull/8769)\n    - chore: replace global index with local one & fix typos (https://github.com/hypermodeinc/dgraph/pull/8719)\n    - chore(logs): add logs to track dropped proposals (https://github.com/hypermodeinc/dgraph/pull/8568)\n    - fix(debug): check length of wal entry before parsing (https://github.com/hypermodeinc/dgraph/pull/8560)\n    - opt(schema): optimize populateSchema() (https://github.com/hypermodeinc/dgraph/pull/8565)\n    - fix(zero): fix update membership to make bulk tablet proposal instead of multiple small (https://github.com/hypermodeinc/dgraph/pull/8573)\n    - fix(groot): do not upsert groot for all namespaces on restart (https://github.com/hypermodeinc/dgraph/pull/8561)\n    - fix(restore): set kv version to restoreTs for all keys (https://github.com/hypermodeinc/dgraph/pull/8563)\n    - fix(probe): do not contend for lock in lazy load (https://github.com/hypermodeinc/dgraph/pull/8566)\n    - fix(core): fixed infinite loop in CommitToDisk (https://github.com/hypermodeinc/dgraph/pull/8614)\n    - fix(proposals): incremental proposal key for zero proposals (https://github.com/hypermodeinc/dgraph/pull/8567)\n    - fix(zero): fix waiting for random time while rate limiting (https://github.com/hypermodeinc/dgraph/pull/8656)\n    - chore(deps): upgrade badger (https://github.com/hypermodeinc/dgraph/pull/8654, https://github.com/hypermodeinc/dgraph/pull/8658)\n    - opt(schema): load schema and types using Stream framework  (https://github.com/hypermodeinc/dgraph/pull/8562)\n    - fix(backup): use StreamWriter instead of KVLoader during backup restore (https://github.com/hypermodeinc/dgraph/pull/8510)\n    - fix(audit): fixing audit logs for websocket connections (https://github.com/hypermodeinc/dgraph/pull/8627)\n    - fix(restore): consider the banned namespaces while bumping (https://github.com/hypermodeinc/dgraph/pull/8559)\n    - fix(backup): create directory before writing backup (https://github.com/hypermodeinc/dgraph/pull/8638)\n\n- **Test**\n    - chore(tests): add upgrade tests in query package (https://github.com/hypermodeinc/dgraph/pull/8750)\n    - simplify test setup in query package (https://github.com/hypermodeinc/dgraph/pull/8782)\n    - add a test for incremental restore (https://github.com/hypermodeinc/dgraph/pull/8754)\n    - chore(tests): run tests in query package against dgraph cloud (https://github.com/hypermodeinc/dgraph/pull/8726)\n    - fix the backup test cluster compose file (https://github.com/hypermodeinc/dgraph/pull/8775)\n    - cleanup tests to reduce the scope of err var (https://github.com/hypermodeinc/dgraph/pull/8771)\n    - use t.TempDir() for using a temp dir in tests (https://github.com/hypermodeinc/dgraph/pull/8772)\n    - fix(test): clan cruft from test run (https://github.com/hypermodeinc/dgraph/pull/8348)\n    - chore(tests): avoid calling os.Exit in TestMain (https://github.com/hypermodeinc/dgraph/pull/8765)\n    - chore: fix linter issue on main (https://github.com/hypermodeinc/dgraph/pull/8749)\n    - recreate the context variable for parallel test (https://github.com/hypermodeinc/dgraph/pull/8748)\n    - fix(tests): wait for license to be applied before trying to login (https://github.com/hypermodeinc/dgraph/pull/8744)\n    - fix(tests): sleep longer so that ACLs are updated (https://github.com/hypermodeinc/dgraph/pull/8745)\n    - chore(test): use pointer receiver for LocalCluster methods (https://github.com/hypermodeinc/dgraph/pull/8734)\n    - chore(linter): fix unconvert linter issues on linux (https://github.com/hypermodeinc/dgraph/pull/8718)\n    - chore(linter): add unconvert linter and address related issues (https://github.com/hypermodeinc/dgraph/pull/8685)\n    - chore(ci): resolve community PR goveralls failure (https://github.com/hypermodeinc/dgraph/pull/8716)\n    - chore(test): increased iterations of the health check (https://github.com/hypermodeinc/dgraph/pull/8711)\n    - fix(test): avoid host volume mount in minio container (https://github.com/hypermodeinc/dgraph/pull/8569)\n    - chore(test): add tests for lex/iri.go,chunker/chunk.go (https://github.com/hypermodeinc/dgraph/pull/8515)\n    - chore(test): add Backup/Restore test for NFS (https://github.com/hypermodeinc/dgraph/pull/8551)\n    - chore(test): add test that after snapshot is applied, GraphQL schema is refreshed (https://github.com/hypermodeinc/dgraph/pull/8619)\n    - chore(test): upgrade graphql tests to use go 1.19 (https://github.com/hypermodeinc/dgraph/pull/8662)\n    - chore(test): add automated test to test multitenant --limit flag (https://github.com/hypermodeinc/dgraph/pull/8646)\n    - chore(test): add restore test for more than 127 namespaces (https://github.com/hypermodeinc/dgraph/pull/8643)\n    - fix(test): fix the corner case for raft entries test (https://github.com/hypermodeinc/dgraph/pull/8617)\n\n- **CD**\n    - fix(build): update dockerfile to use cache busting and reduce image size (https://github.com/hypermodeinc/dgraph/pull/8652)\n    - chore(deps): update min go build version (https://github.com/hypermodeinc/dgraph/pull/8423)\n    - chore(cd): add badger binary to dgraph docker image (https://github.com/hypermodeinc/dgraph/pull/8790)\n\n- **Security**\n    - chore(deps): bump certifi from 2020.4.5.1 to 2022.12.7 in /contrib/config/marketplace/aws/tests (https://github.com/hypermodeinc/dgraph/pull/8496)\n    - chore(deps): bump github.com/docker/distribution from 2.7.1+incompatible to 2.8.0+incompatible (https://github.com/hypermodeinc/dgraph/pull/8575)\n    - chore(deps): bump werkzeug from 0.16.1 to 2.2.3 in /contrib/embargo (https://github.com/hypermodeinc/dgraph/pull/8676)\n    - fix(sec): upgrade networkx to  (https://github.com/hypermodeinc/dgraph/pull/8613)\n    - fix(sec): CVE-2022-41721 (https://github.com/hypermodeinc/dgraph/pull/8633)\n    - fix(sec): CVE & OS Patching (https://github.com/hypermodeinc/dgraph/pull/8634)\n\n### Changed\n\n- **Core Dgraph**\n    - upgrade badger to v4.1.0 (https://github.com/hypermodeinc/dgraph/pull/8783) (https://github.com/hypermodeinc/dgraph/pull/8709)\n    - fix(multitenancy) store namespace in predicate as a hex separated by a hyphen to prevent json marshal issues (https://github.com/hypermodeinc/dgraph/pull/8601)\n    - fix(query): handle bad timezone correctly (https://github.com/hypermodeinc/dgraph/pull/8657)\n    - chore(ludicroud): remove ludicrous mode from the code (https://github.com/hypermodeinc/dgraph/pull/8612)\n    - fix(backup): make the /admin/backup and /admin/export API asynchronous (https://github.com/hypermodeinc/dgraph/pull/8554)\n    - fix(mutation): validate mutation before applying it (https://github.com/hypermodeinc/dgraph/pull/8623)\n\n- **CI Enhancements**\n    - fix(ci): unpin curl (https://github.com/hypermodeinc/dgraph/pull/8577)\n    - fix(ci): adjust cron schedules (https://github.com/hypermodeinc/dgraph/pull/8592)\n    - chore(ci): Capture coverage from bulk load and LDBC tests (https://github.com/hypermodeinc/dgraph/pull/8478)\n    - chore(linter): enable gosec linter (https://github.com/hypermodeinc/dgraph/pull/8678)\n    - chore: apply go vet improvements (https://github.com/hypermodeinc/dgraph/pull/8620)\n    - chore(linter): fix some of the warnings from gas linter (https://github.com/hypermodeinc/dgraph/pull/8664)\n    - chore(linter): fix golangci config and some issues in tests (https://github.com/hypermodeinc/dgraph/pull/8669)\n    - fix(linter): address gosimple linter reports & errors (https://github.com/hypermodeinc/dgraph/pull/8628)\n\n\n## [v23.0.0-beta1] - 2023-03-01\n[v23.0.0-beta1]: https://github.com/hypermodeinc/dgraph/compare/v22.0.2...v23.0.0-beta1\n\n### Added\n\n- **GraphQL**\n  - fix(GraphQL): pass on HTTP request headers for subscriptions (https://github.com/hypermodeinc/dgraph/pull/8574)\n\n- **Core Dgraph**\n  - chore(debug): add `only-summary` flag in `dgraph debug` to show LSM tree and namespace size (https://github.com/hypermodeinc/dgraph/pull/8516)\n  - feat(cloud): add `shared-instance` flag in limit superflag in alpha (https://github.com/hypermodeinc/dgraph/pull/8625)\n  - chore(deps): update prometheus dependency, adds new metrics (https://github.com/hypermodeinc/dgraph/pull/8655)\n  - feat(cdc): add superflag `tls` to enable TLS without CA or certs (https://github.com/hypermodeinc/dgraph/pull/8564)\n  - chore(deps): bump badger up to v4 (https://github.com/hypermodeinc/dgraph/pull/8709)\n  - feat(multitenancy): namespace aware drop data (https://github.com/hypermodeinc/dgraph/pull/8511)\n\n### Fixed\n\n- **GragphQL**\n  - fix(GraphQL): nested Auth Rules not working properly (https://github.com/hypermodeinc/dgraph/pull/8571)\n\n- **Core Dgraph**\n  - chore(logs): add logs to track dropped proposals (https://github.com/hypermodeinc/dgraph/pull/8568)\n  - fix(debug): check length of wal entry before parsing (https://github.com/hypermodeinc/dgraph/pull/8560)\n  - opt(schema): optimize populateSchema() (https://github.com/hypermodeinc/dgraph/pull/8565)\n  - fix(zero): fix update membership to make bulk tablet proposal instead of multiple small (https://github.com/hypermodeinc/dgraph/pull/8573)\n  - fix(groot): do not upsert groot for all namespaces on restart (https://github.com/hypermodeinc/dgraph/pull/8561)\n  - fix(restore): set kv version to restoreTs for all keys (https://github.com/hypermodeinc/dgraph/pull/8563)\n  - fix(probe): do not contend for lock in lazy load (https://github.com/hypermodeinc/dgraph/pull/8566)\n  - fix(core): fixed infinite loop in CommitToDisk (https://github.com/hypermodeinc/dgraph/pull/8614)\n  - fix(proposals): incremental proposal key for zero proposals (https://github.com/hypermodeinc/dgraph/pull/8567)\n  - fix(zero): fix waiting for random time while rate limiting (https://github.com/hypermodeinc/dgraph/pull/8656)\n  - chore(deps): upgrade badger (https://github.com/hypermodeinc/dgraph/pull/8654, https://github.com/hypermodeinc/dgraph/pull/8658)\n  - opt(schema): load schema and types using Stream framework  (https://github.com/hypermodeinc/dgraph/pull/8562)\n  - fix(backup): use StreamWriter instead of KVLoader during backup restore (https://github.com/hypermodeinc/dgraph/pull/8510)\n  - fix(audit): fixing audit logs for websocket connections (https://github.com/hypermodeinc/dgraph/pull/8627)\n  - fix(restore): consider the banned namespaces while bumping (https://github.com/hypermodeinc/dgraph/pull/8559)\n  - fix(backup): create directory before writing backup (https://github.com/hypermodeinc/dgraph/pull/8638)\n\n- **Test**\n  - fix(test): avoid host volume mount in minio container (https://github.com/hypermodeinc/dgraph/pull/8569)\n  - chore(test): add tests for lex/iri.go,chunker/chunk.go (https://github.com/hypermodeinc/dgraph/pull/8515)\n  - chore(test): add Backup/Restore test for NFS (https://github.com/hypermodeinc/dgraph/pull/8551)\n  - chore(test): add test that after snapshot is applied, GraphQL schema is refreshed (https://github.com/hypermodeinc/dgraph/pull/8619)\n  - chore(test): upgrade graphql tests to use go 1.19 (https://github.com/hypermodeinc/dgraph/pull/8662)\n  - chore(test): add automated test to test multitenant --limit flag (https://github.com/hypermodeinc/dgraph/pull/8646)\n  - chore(test): add restore test for more than 127 namespaces (https://github.com/hypermodeinc/dgraph/pull/8643)\n  - fix(test): fix the corner case for raft entries test (https://github.com/hypermodeinc/dgraph/pull/8617)\n\n- **CD**\n  - fix(build): update dockerfile to use cache busting and reduce image size (https://github.com/hypermodeinc/dgraph/pull/8652)\n  - chore(deps): update min go build version (https://github.com/hypermodeinc/dgraph/pull/8423)\n\n- **Security**\n  - chore(deps): bump certifi from 2020.4.5.1 to 2022.12.7 in /contrib/config/marketplace/aws/tests (https://github.com/hypermodeinc/dgraph/pull/8496)\n  - chore(deps): bump github.com/docker/distribution from 2.7.1+incompatible to 2.8.0+incompatible (https://github.com/hypermodeinc/dgraph/pull/8575)\n  - chore(deps): bump werkzeug from 0.16.1 to 2.2.3 in /contrib/embargo (https://github.com/hypermodeinc/dgraph/pull/8676)\n  - fix(sec): upgrade networkx to  (https://github.com/hypermodeinc/dgraph/pull/8613)\n  - fix(sec): CVE-2022-41721 (https://github.com/hypermodeinc/dgraph/pull/8633)\n  - fix(sec): CVE & OS Patching (https://github.com/hypermodeinc/dgraph/pull/8634)\n\n### Changed\n\n- **Core Dgraph**\n  - fix(multitenancy) store namespace in predicate as a hex separated by a hyphen to prevent json marshal issues (https://github.com/hypermodeinc/dgraph/pull/8601)\n  - fix(query): handle bad timezone correctly (https://github.com/hypermodeinc/dgraph/pull/8657)\n  - chore(ludicroud): remove ludicrous mode from the code (https://github.com/hypermodeinc/dgraph/pull/8612)\n  - fix(backup): make the /admin/backup and /admin/export API asynchronous (https://github.com/hypermodeinc/dgraph/pull/8554)\n  - fix(mutation): validate mutation before applying it (https://github.com/hypermodeinc/dgraph/pull/8623)\n\n- **CI Enhancements**\n    - fix(ci): unpin curl (https://github.com/hypermodeinc/dgraph/pull/8577)\n    - fix(ci): adjust cron schedules (https://github.com/hypermodeinc/dgraph/pull/8592)\n    - chore(ci): Capture coverage from bulk load and LDBC tests (https://github.com/hypermodeinc/dgraph/pull/8478)\n    - chore(linter): enable gosec linter (https://github.com/hypermodeinc/dgraph/pull/8678)\n    - chore: apply go vet improvements (https://github.com/hypermodeinc/dgraph/pull/8620)\n    - chore(linter): fix some of the warnings from gas linter (https://github.com/hypermodeinc/dgraph/pull/8664)\n    - chore(linter): fix golangci config and some issues in tests (https://github.com/hypermodeinc/dgraph/pull/8669)\n    - fix(linter): address gosimple linter reports & errors (https://github.com/hypermodeinc/dgraph/pull/8628)\n\n## [v22.0.2] - 2022-12-16\n[v22.0.2]: https://github.com/hypermodeinc/dgraph/compare/v22.0.1...v22.0.2\n\n### Added\n\n- **ARM Support** -  Dgraph now supports ARM64 Architecture for development (https://github.com/hypermodeinc/dgraph/pull/8543 https://github.com/hypermodeinc/dgraph/pull/8520 https://github.com/hypermodeinc/dgraph/pull/8503 https://github.com/hypermodeinc/dgraph/pull/8436 https://github.com/hypermodeinc/dgraph/pull/8405 https://github.com/hypermodeinc/dgraph/pull/8395)\n- Additional logging and trace tags for debugging (https://github.com/hypermodeinc/dgraph/pull/8490)\n\n### Fixed\n\n- **EDgraph**\n  - fix(ACL): Prevents permissions overrride and merges acl cache to persist permissions across different namespaces (https://github.com/hypermodeinc/dgraph/pull/8506)\n\n- **Core Dgraph**\n  - Fix(badger): Upgrade badger version to fix  manifest corruption (https://github.com/hypermodeinc/dgraph/pull/8365)\n  - fix(pagination): Fix after for regexp, match functions (https://github.com/hypermodeinc/dgraph/pull/8471)\n  - fix(query): Do not execute filters if there are no source uids(https://github.com/hypermodeinc/dgraph/pull/8452)\n  - fix(admin): make config changes to pass through gog middlewares (https://github.com/hypermodeinc/dgraph/pull/8442)\n  - fix(sort): Only filter out nodes with positive offsets (https://github.com/hypermodeinc/dgraph/pull/8441)\n  - fix(fragment): merge the nested fragments fields (https://github.com/hypermodeinc/dgraph/pull/8435)\n  - Fix(lsbackup): Fix profiler in lsBackup (https://github.com/hypermodeinc/dgraph/pull/8432)\n  - fix(DQL): optimize query for has function with offset (https://github.com/hypermodeinc/dgraph/pull/8431)\n\n- **GraphQL**\n  - Fix(GraphQL): Make mutation rewriting tests more robust (https://github.com/hypermodeinc/dgraph/pull/8449)\n\n- **Security**\n   - <details>\n      <summary>CVE Fixes (35 total)</summary>\n\n      #### CVE Fixes (35 total)\n      - CVE-2013-4235\n      - CVE-2016-20013\n      - CVE-2016-2781\n      - CVE-2017-11164\n      - CVE-2018-16886\n      - CVE-2019-0205\n      - CVE-2019-0210\n      - CVE-2019-11254\n      - CVE-2019-16167\n      - CVE-2020-29652\n      - CVE-2021-31525\n      - CVE-2021-33194\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-38561\n      - CVE-2021-39537\n      - CVE-2021-43565\n      - CVE-2021-44716\n      - CVE-2021-44758\n      - CVE-2022-21698\n      - CVE-2022-27191\n      - CVE-2022-27664\n      - CVE-2022-29458\n      - CVE-2022-29526\n      - CVE-2022-3219\n      - CVE-2022-32221\n      - CVE-2022-3437\n      - CVE-2022-35737\n      - CVE-2022-3715\n      - CVE-2022-3821\n      - CVE-2022-39377\n      - CVE-2022-41916\n      - CVE-2022-42800\n      - CVE-2022-42898\n      - CVE-2022-44640\n   - <details>\n      <summary>GHSA Fixes (2 total)</summary>\n\n      #### GHSE Fixes (2 total)\n      - GHSA-69ch-w2m2-3vjp\n      - GHSA-m332-53r6-2w93\n\n### Changed\n\n- **CI Enhancements**\n    - Added more unit tests (https://github.com/hypermodeinc/dgraph/pull/8470 https://github.com/hypermodeinc/dgraph/pull/8489 https://github.com/hypermodeinc/dgraph/pull/8479 https://github.com/hypermodeinc/dgraph/pull/8488 https://github.com/hypermodeinc/dgraph/pull/8433)\n    - [Coveralls](https://coveralls.io/github/dgraph-io/dgraph?branch=main) on CI is enhanced to measure code coverage for integration tests (https://github.com/hypermodeinc/dgraph/pull/8494)\n    - [**LDBC Benchmarking**](https://ldbcouncil.org) in enabled on [CI](https://github.com/hypermodeinc/dgraph/actions/workflows/ci-dgraph-ldbc-tests.yml)\n\n- **CD Enhancements**\n    - Enhanced our [CD Pipeline](https://github.com/hypermodeinc/dgraph/actions/workflows/cd-dgraph.yml) to support ARM64 binaries and docker-images (https://github.com/hypermodeinc/dgraph/pull/8520)\n    - Enhanced [dgraph-lambda](https://github.com/hypermodeinc/dgraph-lambda) to support arm64 (https://github.com/hypermodeinc/dgraph-lambda/pull/39 https://github.com/hypermodeinc/dgraph-lambda/pull/38 https://github.com/hypermodeinc/dgraph-lambda/pull/37)\n    - Enhanced [badger](https://github.com/dgraph-io/badger) to support arm64 (https://github.com/dgraph-io/badger/pull/1838)\n\n\n## [v22.0.1] - 2022-11-10\n[v22.0.1]: https://github.com/hypermodeinc/dgraph/compare/v22.0.0...v22.0.1\n\n### Fixed\n- **CD Release Pipeline**\n  - Badger Binary fetch steps added to the release CD pipeline (https://github.com/hypermodeinc/dgraph/pull/8425)\n  - Corresponding Badger artifacts will be fetched & uploaded from v22.0.1 onwards\n\n## [v22.0.0] - 2022-10-21\n[v22.0.0]: https://github.com/hypermodeinc/dgraph/compare/v21.03.2...v22.0.0\n\n> **Note**\n> `v22.0.0` release is based of `v21.03.2` release.\n> https://discuss.dgraph.io/t/dgraph-v22-0-0-rc1-20221003-release-candidate/17839\n\n> **Warning**\n> We are discontinuing support for `v21.12.0`.\n> This will be a breaking change for anyone moving from `v21.12.0` to `v.22.0.0`.\n\n### Fixed\n- **GraphQL**\n  - fix(GraphQL): optimize eq filter queries (https://github.com/hypermodeinc/dgraph/pull/7895)\n  - fix(GraphQL): add validation of null values with correct order of graphql rule validation (https://github.com/hypermodeinc/dgraph/pull/8333)\n  - fix(GraphQL) fix auth query rewriting with ID filter (https://github.com/hypermodeinc/dgraph/pull/8157)\n- **EDgraph**\n  - fix(query): Prevent multiple entries for same predicate in mutations (https://github.com/hypermodeinc/dgraph/pull/8332)\n- **Posting**\n  - fix(rollups): Fix splits in roll-up (https://github.com/hypermodeinc/dgraph/pull/8297)\n- **Security**\n    - <details>\n      <summary>CVE Fixes (417 total)</summary>\n\n      #### CVE Fixes (417 total)\n      - CVE-2019-0210\n      - CVE-2019-0205\n      - CVE-2021-43565\n      - CVE-2022-27664\n      - CVE-2021-38561\n      - CVE-2021-44716\n      - CVE-2021-33194\n      - CVE-2022-27191\n      - CVE-2020-29652\n      - CVE-2018-16886\n      - CVE-2022-21698\n      - CVE-2022-37434\n      - CVE-2020-16156\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2022-37434\n      - CVE-2020-16156\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2022-37434\n      - CVE-2020-16156\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2022-3116\n      - CVE-2022-37434\n      - CVE-2020-16156\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2022-37434\n      - CVE-2020-16156\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2022-37434\n      - CVE-2020-16156\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2022-37434\n      - CVE-2020-16156\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2022-37434\n      - CVE-2020-16156\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2022-37434\n      - CVE-2020-16156\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2022-37434\n      - CVE-2020-16156\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2022-37434\n      - CVE-2020-16156\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2022-37434\n      - CVE-2020-16156\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2021-37750\n      - CVE-2021-36222\n      - CVE-2020-35525\n      - CVE-2020-35527\n      - CVE-2021-20223\n      - CVE-2020-9794\n      - CVE-2022-29526\n      - CVE-2021-31525\n      - CVE-2019-11254\n      - CVE-2022-3219\n      - CVE-2019-16167\n      - CVE-2013-4235\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2013-4235\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2017-11164\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2021-43618\n      - CVE-2016-20013\n      - CVE-2016-2781\n      - CVE-2022-1587\n      - CVE-2022-1586\n      - CVE-2019-16167\n      - CVE-2013-4235\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2013-4235\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2017-11164\n      - CVE-2022-1587\n      - CVE-2022-1586\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2021-43618\n      - CVE-2016-20013\n      - CVE-2022-3219\n      - CVE-2016-2781\n      - CVE-2022-1587\n      - CVE-2022-1586\n      - CVE-2019-16167\n      - CVE-2013-4235\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2013-4235\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2017-11164\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2021-43618\n      - CVE-2016-20013\n      - CVE-2022-3219\n      - CVE-2016-2781\n      - CVE-2021-3671\n      - CVE-2022-3219\n      - CVE-2019-16167\n      - CVE-2013-4235\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2013-4235\n      - CVE-2021-3671\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2021-3671\n      - CVE-2017-11164\n      - CVE-2022-1587\n      - CVE-2022-1586\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2021-3671\n      - CVE-2021-43618\n      - CVE-2016-20013\n      - CVE-2021-3671\n      - CVE-2016-2781\n      - CVE-2021-3671\n      - CVE-2022-3219\n      - CVE-2019-16167\n      - CVE-2013-4235\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2013-4235\n      - CVE-2021-3671\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2021-3671\n      - CVE-2017-11164\n      - CVE-2022-1587\n      - CVE-2022-1586\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2021-3671\n      - CVE-2021-43618\n      - CVE-2016-20013\n      - CVE-2021-3671\n      - CVE-2016-2781\n      - CVE-2019-16167\n      - CVE-2013-4235\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2013-4235\n      - CVE-2021-3671\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2021-3671\n      - CVE-2017-11164\n      - CVE-2022-1587\n      - CVE-2022-1586\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2021-3671\n      - CVE-2021-43618\n      - CVE-2016-20013\n      - CVE-2021-3671\n      - CVE-2022-3219\n      - CVE-2016-2781\n      - CVE-2019-16167\n      - CVE-2013-4235\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2013-4235\n      - CVE-2021-3671\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2021-3671\n      - CVE-2017-11164\n      - CVE-2022-1587\n      - CVE-2022-1586\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2021-3671\n      - CVE-2021-43618\n      - CVE-2016-20013\n      - CVE-2021-3671\n      - CVE-2016-2781\n      - CVE-2019-16167\n      - CVE-2013-4235\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2013-4235\n      - CVE-2021-3671\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2021-3671\n      - CVE-2017-11164\n      - CVE-2022-1587\n      - CVE-2022-1586\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2021-3671\n      - CVE-2021-43618\n      - CVE-2016-20013\n      - CVE-2021-3671\n      - CVE-2016-2781\n      - CVE-2019-16167\n      - CVE-2013-4235\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2013-4235\n      - CVE-2021-3671\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2021-3671\n      - CVE-2017-11164\n      - CVE-2022-1587\n      - CVE-2022-1586\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2021-3671\n      - CVE-2021-43618\n      - CVE-2016-20013\n      - CVE-2021-3671\n      - CVE-2016-2781\n      - CVE-2019-16167\n      - CVE-2013-4235\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2013-4235\n      - CVE-2021-3671\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2021-3671\n      - CVE-2017-11164\n      - CVE-2022-1587\n      - CVE-2022-1586\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2021-3671\n      - CVE-2021-43618\n      - CVE-2016-20013\n      - CVE-2021-3671\n      - CVE-2016-2781\n      - CVE-2019-16167\n      - CVE-2013-4235\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2013-4235\n      - CVE-2021-3671\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2021-3671\n      - CVE-2017-11164\n      - CVE-2022-1587\n      - CVE-2022-1586\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2021-3671\n      - CVE-2021-43618\n      - CVE-2016-20013\n      - CVE-2021-3671\n      - CVE-2016-2781\n      - CVE-2019-16167\n      - CVE-2013-4235\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2013-4235\n      - CVE-2021-3671\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2021-3671\n      - CVE-2017-11164\n      - CVE-2022-1587\n      - CVE-2022-1586\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2022-29458\n      - CVE-2021-39537\n      - CVE-2021-3671\n      - CVE-2021-43618\n      - CVE-2016-20013\n      - CVE-2021-3671\n      - CVE-2016-2781\n      - CVE-2021-3671\n      - CVE-2022-1587\n      - CVE-2022-1586\n      - CVE-2021-3671\n      - CVE-2020-9991\n      - CVE-2020-9849\n      </details>\n    - <details>\n      <summary>GHSA Fixes (5 total)</summary>\n\n      #### GHSA Fixes (5 total)\n      - GHSA-jq7p-26h5-w78r\n      - GHSA-8c26-wmh5-6g9v\n      - GHSA-h6xx-pmxh-3wgp\n      - GHSA-cg3q-j54f-5p7p\n      - GHSA-wxc4-f4m6-wwqv\n      </details>\n    - fix(sec): fixing HIGH CVEs (https://github.com/hypermodeinc/dgraph/pull/8289)\n    - fix(sec): CVE High Vulnerability (https://github.com/hypermodeinc/dgraph/pull/8277)\n    - fix(sec): Fixing CVE-2021-31525 (https://github.com/hypermodeinc/dgraph/pull/8274)\n    - fix(sec): CVE-2019-11254 (https://github.com/hypermodeinc/dgraph/pull/8270)\n\n### Changed\n- **CI Test Infrastructure**\n  - Configured to run with [Github Actions](https://github.com/hypermodeinc/dgraph/tree/main/.github/workflows)\n  - Stability Improvements to test harness\n  - Enabled [Unit/Integration Tests](https://github.com/hypermodeinc/dgraph/actions/workflows/ci-dgraph-tests.yml)\n  - Enabled [Load Tests](https://github.com/hypermodeinc/dgraph/actions/workflows/ci-dgraph-load-tests.yml)\n  - Enabled [Linters](https://github.com/hypermodeinc/dgraph/actions/workflows/ci-golang-lint.yml)\n  - Enabled [Code Coverage](https://coveralls.io/github/dgraph-io/dgraph?branch=main)\n- **CI Security**\n  - Configured to run with [Github Actions](https://github.com/hypermodeinc/dgraph/blob/main/.github/workflows/ci-aqua-security-trivy-tests.yml)\n  - Enabled [Trivy Scans](https://github.com/hypermodeinc/dgraph/actions/workflows/ci-aqua-security-trivy-tests.yml)\n  - Enabled dependabot scans\n  - Configured to run with [Github Actions](https://github.com/hypermodeinc/dgraph/blob/main/.github/workflows/ci-aqua-security-trivy-tests.yml)\n- **CD Release Pipeline**\n  - Automated [Release Pipeline](https://github.com/hypermodeinc/dgraph/blob/main/.github/workflows/cd-dgraph.yml) to facilitate building of dgraph-binary & corresponding docker-images. The built artifacts are published to repositories through the same pipeline.\n- [**Github Issues Enabled**](https://github.com/hypermodeinc/dgraph/issues/new/choose)\n\n\n## [21.03.2] - 2021-08-26\n[21.03.2]: https://github.com/hypermodeinc/dgraph/compare/v21.03.1...v21.03.2\n\n### Fixed\n\n- GraphQL\n  - Handle extend keyword for Queries and Mutations ([#7923][])\n\n- Core Dgraph\n  - fix(Raft): Detect network partition when streaming ([#7908][])\n  - fix(Raft): Reconnect via a redial in case of disconnection. ([#7921][])\n  - fix(conn): JoinCluster loop should use latest conn ([#7952][])\n  - fix(pool): use write lock when getting health info ([#7967][])\n  - fix(acl): The Acl cache should be updated on restart and restore. ([#7964][])\n  - fix(acl): filter out the results based on type ([#7981][])\n  - fix(backup): Fix full backup request ([#7934][])\n  - fix(live): quote the xid when doing upsert ([#7999][])\n  - fix(export): Write temporary files for export to the t directory. ([#7998][])\n\n### Changed\n\n- protobuf: upgrade golang/protobuf library v1.4.1 -> v1.5.2 ([#7949][])\n- chore(raft): Log packets message less frequently. ([#7913][])\n\n### Added\n\n- feat(acl): allow access to all the predicates using wildcard. ([#7993][])\n- feat(Multi-tenancy): Add namespaces field to state. ([#7936][])\n\n[#7923]: https://github.com/hypermodeinc/dgraph/issues/7923\n[#7908]: https://github.com/hypermodeinc/dgraph/issues/7908\n[#7921]: https://github.com/hypermodeinc/dgraph/issues/7921\n[#7952]: https://github.com/hypermodeinc/dgraph/issues/7952\n[#7967]: https://github.com/hypermodeinc/dgraph/issues/7967\n[#7964]: https://github.com/hypermodeinc/dgraph/issues/7964\n[#7981]: https://github.com/hypermodeinc/dgraph/issues/7981\n[#7934]: https://github.com/hypermodeinc/dgraph/issues/7934\n[#7999]: https://github.com/hypermodeinc/dgraph/issues/7999\n[#7998]: https://github.com/hypermodeinc/dgraph/issues/7998\n[#7949]: https://github.com/hypermodeinc/dgraph/issues/7949\n[#7913]: https://github.com/hypermodeinc/dgraph/issues/7913\n[#7993]: https://github.com/hypermodeinc/dgraph/issues/7993\n[#7936]: https://github.com/hypermodeinc/dgraph/issues/7936\n\n## [21.03.1] - 2021-06-16\n[21.03.1]: https://github.com/hypermodeinc/dgraph/compare/v21.03.0...v21.03.1\n\n### Fixed\n- GraphQL\n  - fix(GraphQL): fix @cascade with Pagination for @auth queries ([#7695][])\n  - Fix(GraphQL): Fix GraphQL encoding in case of empty list ([#7726][]) ([#7730][])\n  - Fix(GraphQL): Add filter in DQL query in case of reverse predicate ([#7728][]) ([#7733][])\n  - Fix(graphql): Fix error message of lambdaOnMutate directive  ([#7751][]) ([#7754][])\n\n- Core Dgraph\n  - fix(vault): Hide ACL flags when not required ([#7701][])\n  - fix(Chunker): don't delete node with empty facet in mutation ([#7737][]) ([#7745][])\n  - fix(bulk): throw the error instead of crashing ([#7722][]) ([#7749][])\n  - fix(raftwal): take snapshot after restore ([#7719][]) ([#7750][])\n  - fix(bulk): upsert guardian/groot for all existing namespaces ([#7759][]) ([#7769][])\n  - fix(txn): ensure that txn hash is set ([#7782][]) ([#7784][])\n  - bug fix to permit audit streaming to stdout writer([#7803][]) ([#7804][])\n  - fix(drop): attach galaxy namespace to drop attr done on 20.11 backup ([#7827][])\n  - fix: Prevent proposal from being dropped accidentally ([#7741][]) ([#7811][])\n  - fix(schema-update): Start opIndexing only when index creation is required. ([#7845][]) ([#7847][])\n  - fix(export): Fix facet export of reference type postings to JSON format ([#7744][]) ([#7756][])\n  - fix(lease): don't do rate limiting when not limit is not specified ([#7787][])\n  - fix(lease): prevent ID lease overflow ([#7802][])\n  - fix(auth): preserve the status code while returning error ([#7832][]) ([#7834][])\n  - fix(ee): GetKeys should return an error ([#7713][]) ([#7797][])\n  - fix(admin): remove exportedFiles field ([#7835][]) ([#7836][])\n  - fix(restore): append galaxy namespace to type name ([#7881][])\n  - fix(DQL): revert changes related to cascade pagination with sort ([#7885][]) ([#7888][])\n  - fix(metrics): Expose dgraph_num_backups_failed_total metric view. ([#7900][]) ([#7904][])\n\n### Changed\n  - opt(GraphQL): filter existence queries on GraphQL side instead of using @filter(type) ([#7757][]) ([#7760][])\n\n### Added\n  - feat(cdc): Add support for SCRAM SASL mechanism ([#7765][]) ([#7767][])\n  - Add asynchronous task API ([#7781][])\n  - make exports synchronous again ([#7877][])\n  - feat(schema): do schema versioning and make backup non-blocking for i… ([#7856][]) ([#7873][])\n\n[#7701]: https://github.com/hypermodeinc/dgraph/issues/7701\n[#7737]: https://github.com/hypermodeinc/dgraph/issues/7737\n[#7745]: https://github.com/hypermodeinc/dgraph/issues/7745\n[#7722]: https://github.com/hypermodeinc/dgraph/issues/7722\n[#7749]: https://github.com/hypermodeinc/dgraph/issues/7749\n[#7719]: https://github.com/hypermodeinc/dgraph/issues/7719\n[#7750]: https://github.com/hypermodeinc/dgraph/issues/7750\n[#7765]: https://github.com/hypermodeinc/dgraph/issues/7765\n[#7767]: https://github.com/hypermodeinc/dgraph/issues/7767\n[#7759]: https://github.com/hypermodeinc/dgraph/issues/7759\n[#7769]: https://github.com/hypermodeinc/dgraph/issues/7769\n[#7782]: https://github.com/hypermodeinc/dgraph/issues/7782\n[#7784]: https://github.com/hypermodeinc/dgraph/issues/7784\n[#7803]: https://github.com/hypermodeinc/dgraph/issues/7803\n[#7804]: https://github.com/hypermodeinc/dgraph/issues/7804\n[#7827]: https://github.com/hypermodeinc/dgraph/issues/7827\n[#7741]: https://github.com/hypermodeinc/dgraph/issues/7741\n[#7811]: https://github.com/hypermodeinc/dgraph/issues/7811\n[#7845]: https://github.com/hypermodeinc/dgraph/issues/7845\n[#7847]: https://github.com/hypermodeinc/dgraph/issues/7847\n[#7744]: https://github.com/hypermodeinc/dgraph/issues/7744\n[#7756]: https://github.com/hypermodeinc/dgraph/issues/7756\n[#7787]: https://github.com/hypermodeinc/dgraph/issues/7787\n[#7802]: https://github.com/hypermodeinc/dgraph/issues/7802\n[#7832]: https://github.com/hypermodeinc/dgraph/issues/7832\n[#7834]: https://github.com/hypermodeinc/dgraph/issues/7834\n[#7796]: https://github.com/hypermodeinc/dgraph/issues/7796\n[#7781]: https://github.com/hypermodeinc/dgraph/issues/7781\n[#7713]: https://github.com/hypermodeinc/dgraph/issues/7713\n[#7797]: https://github.com/hypermodeinc/dgraph/issues/7797\n[#7835]: https://github.com/hypermodeinc/dgraph/issues/7835\n[#7836]: https://github.com/hypermodeinc/dgraph/issues/7836\n[#7856]: https://github.com/hypermodeinc/dgraph/issues/7856\n[#7873]: https://github.com/hypermodeinc/dgraph/issues/7873\n[#7881]: https://github.com/hypermodeinc/dgraph/issues/7881\n[#7885]: https://github.com/hypermodeinc/dgraph/issues/7885\n[#7888]: https://github.com/hypermodeinc/dgraph/issues/7888\n[#7877]: https://github.com/hypermodeinc/dgraph/issues/7877\n[#7695]: https://github.com/hypermodeinc/dgraph/issues/7695\n[#7726]: https://github.com/hypermodeinc/dgraph/issues/7726\n[#7730]: https://github.com/hypermodeinc/dgraph/issues/7730\n[#7728]: https://github.com/hypermodeinc/dgraph/issues/7728\n[#7733]: https://github.com/hypermodeinc/dgraph/issues/7733\n[#7751]: https://github.com/hypermodeinc/dgraph/issues/7751\n[#7754]: https://github.com/hypermodeinc/dgraph/issues/7754\n[#7757]: https://github.com/hypermodeinc/dgraph/issues/7757\n[#7760]: https://github.com/hypermodeinc/dgraph/issues/7760\n[#7900]: https://github.com/hypermodeinc/dgraph/issues/7900\n[#7904]: https://github.com/hypermodeinc/dgraph/issues/7904\n\n\n## [21.03.0] - 2021-04-07\n[21.03.0]: https://github.com/hypermodeinc/dgraph/compare/v20.11.0...v21.03.0\n\n### Changed\n\n- [BREAKING] Feat(flags): expand badger to accept all valid options ([#7677][])\n- [BREAKING] Feat(Dgraph): Read-Only replicas ([#7272][])\n- [BREAKING] Consolidate multiple flags into a few SuPerflags ([#7436][]) ([#7337][]) ([#7560][]) ([#7652][]) ([#7675][])\n- [BREAKING] Feat(zero): Make zero lease out namespace IDs ([#7341][])\n- [BREAKING] Fix(commit): make txn context more robust ([#7659][])\n- [BREAKING] Fix(Query): Return error for illegal math operations. ([#7631][])\n- [BREAKING] Rename Badger metrics. ([#7507][])\n- [BREAKING] Fix(Backups): new badger Superflag, NumGoroutines option solves OOM crashes ([#7387][])\n- [BREAKING] Remove restore tracker as its not necessary ([#7148][])\n- [BREAKING] Chore(GraphQL): Remove `dgraph.graphql.p_sha256hash` predicate and merge it into `dgraph.graphql.p_query` ([#7451][])\n- [BREAKING] Introducing Multi-Tenancy in dgraph ([#7293][]) ([#7400][]) ([#7397][]) ([#7399][]) ([#7377][]) ([#7414][]) ([#7418][])\n\n### Added\n\n- GraphQL\n  - Feat(GraphQL): Zero HTTP endpoints are now available at GraphQL admin (GraphQL-1118) ([#6649][]) ([#7670][])\n  - Feat(GraphQL): Webhooks on add/update/delete mutations (GraphQL-1045) ([#7494][]) ([#7616][])\n  - Feat(GraphQL): Allow Multiple JWKUrls for auth. ([#7528][]) ([#7581][])\n  - Feat(GraphQL): allow string --> Int64 hardcoded coercing ([#7584][])\n  - Feat(Apollo): Add support for `@provides` and `@requires` directive.  ([#7503][])\n  - Feat(GraphQL): Handle upsert with multiple XIDs in case one of the XIDs does not exist ([#7472][])\n  - Feat(GraphQL): Delete redundant reference to inverse object ([#7469][])\n  - Feat(GraphQL): upgarde GraphQL-transport-ws module ([#7441][])\n  - Feat(GraphQL): This PR allow multiple `@id` fields in a type. ([#7235][])\n  - Feat(GraphQL): Add support for GraphQL Upsert Mutations ([#7433][])\n  - Feat(GraphQL): This PR adds subscriptions to custom DQL.  ([#7385][])\n  - Feat(GraphQL): Make XID node referencing invariant of order in which XIDs are referenced in Mutation Rewriting ([#7448][])\n  - Feat(GraphQL): Dgraph.Authorization should with irrespective of number of spaces after # ([#7410][])\n  - Feat(GraphQL):  adding auth token support for regexp, in and arrays ([#7039][])\n  - Feat(GraphQL): Extend Support of IN filter to all the scalar data types ([#7340][])\n  - Feat(GraphQL): Add `@include` and `@skip` to the Directives ([#7314][])\n  - Feat(GraphQL): add support for has filter with list of arguments. ([#7406][])\n  - Feat(GraphQL): Add support for has filter on list of fields. ([#7363][])\n  - Feat(GraphQL): Allow standard claims into auth variables ([#7381][])\n  - Perf(GraphQL): Generate GraphQL query response by optimized JSON encoding (GraphQL-730) ([#7371][])\n  - Feat(GraphQL): Extend Support For Apollo Federation ([#7275][])\n  - Feat(GraphQL): Support using custom DQL with `@groupby` ([#7476][])\n  - Feat(GraphQL): Add support for passing OAuth Bearer token as authorization JWT ([#7490][])\n\n- Core Dgraph\n  - Feat(query): Add mechanism to have a limit on number of pending queries ([#7603][])\n  - Perf(bulk): Reuse allocator ([#7360][])\n  - Perf(compression): Use gzip with BestSpeed in export and backup ([#7643][]) ([#7683][])\n  - Feat(flags): Add query timeout as a limit config ([#7599][])\n  - Opt(reindex): do not try building indices when inserting a new predicate ([#7109][])\n  - Perf(txn): de-duplicate the context keys and predicates ([#7478][])\n  - Feat(flags): use Vault for ACL secrets ([#7492][])\n  - Feat(bulk): Add /jemalloc HTTP endpoint. ([#7165][])\n  - Feat(metrics): Add Dgraph txn metrics (commits and discards). ([#7339][])\n  - Feat(Bulk Loader + Live Loader): Supporting Loading files via s3/minio ([#7359][])\n  - Feat(metrics): Add Raft leadership metrics. ([#7338][])\n  - Use Badger's value log threshold of 1MB ([#7415][])\n  - Feat(Monitoring): Adding Monitoring for Disk Space and Number of Backups ([#7404][])\n  - Perf: simple simdjson solution with 30% speed increase ([#7316][])\n\n- Enterprise Features\n  - Perf(Backup): Improve backup Performance ([#7601][])\n  - Make backup API asynchronous\n  - Perf(backups): Reduce latency of list backups ([#7435][])\n  - Feat(acl): allow setting a password at the time of creation of namespace ([#7446][])\n  - Feat(enterprise): audit logs for alpha and zero ([#7295][])\n  - Feat(enterpise): Change data capture (CDC) integration with kafka ([#7395][])\n  - Perf(dgraph) - Use badger sinceTs in backups ([#7392][])\n  - Perf(backup): Reorganize the output of lsbackup command ([#7354][])\n\n### Fixed\n- GraphQL\n  - Fix(GraphQL): Fix Execution Trace for Add and Update Mutations ([#7656][])\n  - Fix(GraphQL): Add error handling for unrecognized args to generate directive. ([#7612][])\n  - Fix(GraphQL): Fix panic when no schema exists for a new namespace ([#7630][])\n  - Fix(GraphQL): Fixed output coercing for admin fields. ([#7617][])\n  - Fix(GraphQL): Fix lambda querying a lambda field in case of no data. ([#7610][])\n  - Fix(GraphQL): Undo the breaking change and tag it as deprecated. ([#7602][])\n  - Fix(GraphQL): Add extra checks for deleting UpdateTypeInput ([#7595][])\n  - Fix(persistent): make persistent query namespace aware ([#7570][])\n  - Fix(GraphQL): remove support of `@id` directive on Float ([#7583][])\n  - Fix(GraphQL): Fix mutation with Int Xid variables. ([#7565][]) ([#7588][])\n  - Fix(GraphQL): Fix error message when dgraph and GraphQL schema differ.\n  - Fix(GraphQL): Fix custom(dql: ...) with `__typename` (GraphQL-1098) ([#7569][])\n  - Fix(GraphQL): Change variable name generation for interface auth rules ([#7559][])\n  - Fix(GraphQL): Apollo federation now works with lambda (GraphQL-1084) ([#7558][])\n  - Fix(GraphQL): Fix empty remove in update mutation patch, that remove all the data for nodes in filter. ([#7563][])\n  - Fix(GraphQL): Fix order of entities query result  ([#7542][])\n  - Fix(GraphQL): Change variable name generation from `Type<Num>` to `Type_<Num>` ([#7556][])\n  - Fix(GraphQL): Fix duplicate xid error for multiple xid fields. ([#7546][])\n  - Fix(GraphQL): Fix query rewriting for multiple order on nested field. ([#7523][])\n  - Fix(GraphQL) Fix empty `type Query` with single extended type definition in the schema. ([#7517][])\n  - Fix(GraphQL): Added support for parameterized cascade with variables. ([#7477][])\n  - Fix(GraphQL): Fix fragment expansion in auth queries (GraphQL-1030) ([#7467][])\n  - Fix(GraphQL): Refactor Mutation Rewriter for Add and Update Mutations ([#7409][])\n  - Fix(GraphQL):  Fix `@auth` rules evaluation in case of null variables in custom claims.  ([#7380][])\n  - Fix(GraphQL): Fix interface query with auth rules. ([#7401][])\n  - Fix(GraphQL): Added error for case when multiple filter functions are used in filter. ([#7368][])\n  - Fix(subscriptions): Fix subscription to use the kv with the max version ([#7349][])\n  - Fix(GraphQL):This PR Fix a panic when we pass a single ID as a integer and expected type is `[ID]`.We now coerce that to type array of string.  ([#7325][])\n  - Fix(GraphQL): This PR Fix multi cors and multi schema nodes issue by selecting one of the latest added nodes, and add dgraph type to cors. ([#7270][])\n  - Fix(GraphQL): This PR allow to use `__typename` in mutation. ([#7285][])\n  - Fix(GraphQL): Fix auth-token propagation for HTTP endpoints resolved through GraphQL (GraphQL-946) ([#7245][])\n  - Fix(GraphQL): This PR addd input coercion from single object to list and Fix panic when we pass single ID in filter as a string.  ([#7133][])\n  - Fix(GraphQL): adding support for `@id` with type other than strings ([#7019][])\n  - Fix(GraphQL): Fix panic caused by incorrect input coercion of scalar to list ([#7405][])\n\n- Core Dgraph\n  - Fix(flag): Fix bulk loader flag and remove flag parsing from critical path ([#7679][])\n  - Fix(query): Fix pagination with match functions ([#7668][])\n  - Fix(postingList): Acquire lock before reading the cached posting list ([#7632][])\n  - Fix(zero): add a ratelimiter to limit the uid lease per namespace ([#7568][])\n  - Fixing type inversion in ludicrous mode ([#7614][])\n  - Fix(/commit): protect the commit endpoint via acl ([#7608][])\n  - Fix(login): Fix login based on refresh token logic ([#7637][])\n  - Fix(Query): Fix cascade pagination with 0 offset. ([#7636][])\n  - Fix(telemetry): Track enterprise Feature usage ([#7495][])\n  - Fix(dql): Fix error message in case of wrong argument to val() ([#7543][])\n  - Fix(export): Fix namespace parameter in export ([#7524][])\n  - Fix(live): Fix usage of force-namespace parameter in export ([#7526][])\n  - Fix(Configs): Allow hierarchical notation in JSON/YAML configs ([#7498][])\n  - Fix upsert mutations ([#7515][])\n  - Fix(admin-endpoints): Error out if the request is rejected by the server ([#7511][])\n  - Fix(Dgraph): Throttle number of files to open while schema update ([#7480][])\n  - Fix(metrics): Expose Badger LSM and vlog size bytes. ([#7488][])\n  - Fix(schema): log error instead of panic if schema not found for predicate ([#7502][])\n  - Fix(moveTablet): make move tablet namespace aware ([#7468][])\n  - Fix(dgraph): Do not return reverse edges from expandEdges ([#7461][])\n  - Fix(Query): Fix cascade with pagination ([#7440][])\n  - Fix(Mutation): Deeply-nested uid facets ([#7455][])\n  - Fix(live): Fix live loader to load with force namespace ([#7445][])\n  - Fix(sort): Fix multi-sort with nils ([#7432][])\n  - Fix(GC): Reduce DiscardRatio from 0.9 to 0.7 ([#7412][])\n  - Fix(jsonpb): use gogo/jsonpb for unmarshalling string ([#7382][])\n  - Fix: Calling Discard only adds to `txn_discards` metric, not `txn_aborts`. ([#7365][])\n  - Fix(Dgraph): check for deleteBelowTs in pIterator.valid ([#7288][])\n  - Fix(dgraph): Add X-Dgraph-AuthToken to list of access control allowed headers\n  - Fix(sort): Make sort consistent for indexed and without indexed predicates ([#7241][])\n  - Fix(ludicrous): Fix logical race in concurrent execution of mutations ([#7269][])\n  - Fix(restore): Handle MaxUid=0 appropriately ([#7258][])\n  - Fix(indexing): use encrypted tmpDBs for index building if encryption is enabled ([#6828][])\n  - Fix(bulk): save schemaMap after map phase ([#7188][])\n  - Fix(DQL): Fix Aggregate Functions on empty data ([#7176][])\n  - Fixing unique proposal key error ([#7218][])\n  - Fix(Chunker): JSON parsing Performance ([#7171][])\n  - Fix(bulk): Fix memory held by b+ tree in reduce phase ([#7161][])\n  - Fix(bulk): Fixing bulk loader when encryption + mtls is enabled ([#7154][])\n\n- Enterprise Features\n  - Fix(restore): append the object path preFix while reading backup ([#7686][])\n  - Fix restoring from old version for type ([#7456][])\n  - Fix(backup): Fix Perf issues with full backups ([#7434][])\n  - Fix(export-backup): Fix memory leak in backup export ([#7452][])\n  - Fix(ACL): use acl for export, add GoG admin resolvers ([#7420][])\n  - Fix(restore): reset acl accounts once restore is done if necessary ([#7202][])\n  - Fix(restore): multiple restore requests should be rejected and proposals should not be submitted ([#7118][])\n\n[#7677]: https://github.com/hypermodeinc/dgraph/issues/7677\n[#7272]: https://github.com/hypermodeinc/dgraph/issues/7272\n[#7436]: https://github.com/hypermodeinc/dgraph/issues/7436\n[#7337]: https://github.com/hypermodeinc/dgraph/issues/7337\n[#7560]: https://github.com/hypermodeinc/dgraph/issues/7560\n[#7652]: https://github.com/hypermodeinc/dgraph/issues/7652\n[#7675]: https://github.com/hypermodeinc/dgraph/issues/7675\n[#7341]: https://github.com/hypermodeinc/dgraph/issues/7341\n[#7659]: https://github.com/hypermodeinc/dgraph/issues/7659\n[#7631]: https://github.com/hypermodeinc/dgraph/issues/7631\n[#7507]: https://github.com/hypermodeinc/dgraph/issues/7507\n[#7387]: https://github.com/hypermodeinc/dgraph/issues/7387\n[#7148]: https://github.com/hypermodeinc/dgraph/issues/7148\n[#7143]: https://github.com/hypermodeinc/dgraph/issues/7143\n[#7451]: https://github.com/hypermodeinc/dgraph/issues/7451\n[#6649]: https://github.com/hypermodeinc/dgraph/issues/6649\n[#7670]: https://github.com/hypermodeinc/dgraph/issues/7670\n[#7494]: https://github.com/hypermodeinc/dgraph/issues/7494\n[#7616]: https://github.com/hypermodeinc/dgraph/issues/7616\n[#7528]: https://github.com/hypermodeinc/dgraph/issues/7528\n[#7581]: https://github.com/hypermodeinc/dgraph/issues/7581\n[#7584]: https://github.com/hypermodeinc/dgraph/issues/7584\n[#7503]: https://github.com/hypermodeinc/dgraph/issues/7503\n[#7472]: https://github.com/hypermodeinc/dgraph/issues/7472\n[#7469]: https://github.com/hypermodeinc/dgraph/issues/7469\n[#7441]: https://github.com/hypermodeinc/dgraph/issues/7441\n[#7235]: https://github.com/hypermodeinc/dgraph/issues/7235\n[#7433]: https://github.com/hypermodeinc/dgraph/issues/7433\n[#7385]: https://github.com/hypermodeinc/dgraph/issues/7385\n[#7448]: https://github.com/hypermodeinc/dgraph/issues/7448\n[#7410]: https://github.com/hypermodeinc/dgraph/issues/7410\n[#7039]: https://github.com/hypermodeinc/dgraph/issues/7039\n[#7340]: https://github.com/hypermodeinc/dgraph/issues/7340\n[#7314]: https://github.com/hypermodeinc/dgraph/issues/7314\n[#7406]: https://github.com/hypermodeinc/dgraph/issues/7406\n[#7363]: https://github.com/hypermodeinc/dgraph/issues/7363\n[#7381]: https://github.com/hypermodeinc/dgraph/issues/7381\n[#7371]: https://github.com/hypermodeinc/dgraph/issues/7371\n[#7275]: https://github.com/hypermodeinc/dgraph/issues/7275\n[#7476]: https://github.com/hypermodeinc/dgraph/issues/7476\n[#7490]: https://github.com/hypermodeinc/dgraph/issues/7490\n[#7603]: https://github.com/hypermodeinc/dgraph/issues/7603\n[#7360]: https://github.com/hypermodeinc/dgraph/issues/7360\n[#7643]: https://github.com/hypermodeinc/dgraph/issues/7643\n[#7683]: https://github.com/hypermodeinc/dgraph/issues/7683\n[#7599]: https://github.com/hypermodeinc/dgraph/issues/7599\n[#7109]: https://github.com/hypermodeinc/dgraph/issues/7109\n[#7478]: https://github.com/hypermodeinc/dgraph/issues/7478\n[#7492]: https://github.com/hypermodeinc/dgraph/issues/7492\n[#7165]: https://github.com/hypermodeinc/dgraph/issues/7165\n[#7339]: https://github.com/hypermodeinc/dgraph/issues/7339\n[#7359]: https://github.com/hypermodeinc/dgraph/issues/7359\n[#7338]: https://github.com/hypermodeinc/dgraph/issues/7338\n[#7415]: https://github.com/hypermodeinc/dgraph/issues/7415\n[#7404]: https://github.com/hypermodeinc/dgraph/issues/7404\n[#7316]: https://github.com/hypermodeinc/dgraph/issues/7316\n[#7601]: https://github.com/hypermodeinc/dgraph/issues/7601\n[#7435]: https://github.com/hypermodeinc/dgraph/issues/7435\n[#7446]: https://github.com/hypermodeinc/dgraph/issues/7446\n[#7293]: https://github.com/hypermodeinc/dgraph/issues/7293\n[#7400]: https://github.com/hypermodeinc/dgraph/issues/7400\n[#7397]: https://github.com/hypermodeinc/dgraph/issues/7397\n[#7399]: https://github.com/hypermodeinc/dgraph/issues/7399\n[#7377]: https://github.com/hypermodeinc/dgraph/issues/7377\n[#7414]: https://github.com/hypermodeinc/dgraph/issues/7414\n[#7418]: https://github.com/hypermodeinc/dgraph/issues/7418\n[#7295]: https://github.com/hypermodeinc/dgraph/issues/7295\n[#7395]: https://github.com/hypermodeinc/dgraph/issues/7395\n[#7392]: https://github.com/hypermodeinc/dgraph/issues/7392\n[#7354]: https://github.com/hypermodeinc/dgraph/issues/7354\n[#7656]: https://github.com/hypermodeinc/dgraph/issues/7656\n[#7612]: https://github.com/hypermodeinc/dgraph/issues/7612\n[#7630]: https://github.com/hypermodeinc/dgraph/issues/7630\n[#7617]: https://github.com/hypermodeinc/dgraph/issues/7617\n[#7610]: https://github.com/hypermodeinc/dgraph/issues/7610\n[#7602]: https://github.com/hypermodeinc/dgraph/issues/7602\n[#7595]: https://github.com/hypermodeinc/dgraph/issues/7595\n[#7570]: https://github.com/hypermodeinc/dgraph/issues/7570\n[#7583]: https://github.com/hypermodeinc/dgraph/issues/7583\n[#7565]: https://github.com/hypermodeinc/dgraph/issues/7565\n[#7588]: https://github.com/hypermodeinc/dgraph/issues/7588\n[#7569]: https://github.com/hypermodeinc/dgraph/issues/7569\n[#7559]: https://github.com/hypermodeinc/dgraph/issues/7559\n[#7558]: https://github.com/hypermodeinc/dgraph/issues/7558\n[#7563]: https://github.com/hypermodeinc/dgraph/issues/7563\n[#7542]: https://github.com/hypermodeinc/dgraph/issues/7542\n[#7556]: https://github.com/hypermodeinc/dgraph/issues/7556\n[#7546]: https://github.com/hypermodeinc/dgraph/issues/7546\n[#7523]: https://github.com/hypermodeinc/dgraph/issues/7523\n[#7517]: https://github.com/hypermodeinc/dgraph/issues/7517\n[#7477]: https://github.com/hypermodeinc/dgraph/issues/7477\n[#7467]: https://github.com/hypermodeinc/dgraph/issues/7467\n[#7409]: https://github.com/hypermodeinc/dgraph/issues/7409\n[#7380]: https://github.com/hypermodeinc/dgraph/issues/7380\n[#7401]: https://github.com/hypermodeinc/dgraph/issues/7401\n[#7368]: https://github.com/hypermodeinc/dgraph/issues/7368\n[#7349]: https://github.com/hypermodeinc/dgraph/issues/7349\n[#7325]: https://github.com/hypermodeinc/dgraph/issues/7325\n[#7270]: https://github.com/hypermodeinc/dgraph/issues/7270\n[#7285]: https://github.com/hypermodeinc/dgraph/issues/7285\n[#7245]: https://github.com/hypermodeinc/dgraph/issues/7245\n[#7133]: https://github.com/hypermodeinc/dgraph/issues/7133\n[#7019]: https://github.com/hypermodeinc/dgraph/issues/7019\n[#7405]: https://github.com/hypermodeinc/dgraph/issues/7405\n[#7679]: https://github.com/hypermodeinc/dgraph/issues/7679\n[#7668]: https://github.com/hypermodeinc/dgraph/issues/7668\n[#7632]: https://github.com/hypermodeinc/dgraph/issues/7632\n[#7568]: https://github.com/hypermodeinc/dgraph/issues/7568\n[#7614]: https://github.com/hypermodeinc/dgraph/issues/7614\n[#7608]: https://github.com/hypermodeinc/dgraph/issues/7608\n[#7637]: https://github.com/hypermodeinc/dgraph/issues/7637\n[#7636]: https://github.com/hypermodeinc/dgraph/issues/7636\n[#7495]: https://github.com/hypermodeinc/dgraph/issues/7495\n[#7543]: https://github.com/hypermodeinc/dgraph/issues/7543\n[#7524]: https://github.com/hypermodeinc/dgraph/issues/7524\n[#7526]: https://github.com/hypermodeinc/dgraph/issues/7526\n[#7498]: https://github.com/hypermodeinc/dgraph/issues/7498\n[#7515]: https://github.com/hypermodeinc/dgraph/issues/7515\n[#7511]: https://github.com/hypermodeinc/dgraph/issues/7511\n[#7480]: https://github.com/hypermodeinc/dgraph/issues/7480\n[#7488]: https://github.com/hypermodeinc/dgraph/issues/7488\n[#7502]: https://github.com/hypermodeinc/dgraph/issues/7502\n[#7468]: https://github.com/hypermodeinc/dgraph/issues/7468\n[#7461]: https://github.com/hypermodeinc/dgraph/issues/7461\n[#7440]: https://github.com/hypermodeinc/dgraph/issues/7440\n[#7455]: https://github.com/hypermodeinc/dgraph/issues/7455\n[#7445]: https://github.com/hypermodeinc/dgraph/issues/7445\n[#7432]: https://github.com/hypermodeinc/dgraph/issues/7432\n[#7412]: https://github.com/hypermodeinc/dgraph/issues/7412\n[#7382]: https://github.com/hypermodeinc/dgraph/issues/7382\n[#7365]: https://github.com/hypermodeinc/dgraph/issues/7365\n[#7288]: https://github.com/hypermodeinc/dgraph/issues/7288\n[#7241]: https://github.com/hypermodeinc/dgraph/issues/7241\n[#7269]: https://github.com/hypermodeinc/dgraph/issues/7269\n[#7258]: https://github.com/hypermodeinc/dgraph/issues/7258\n[#6828]: https://github.com/hypermodeinc/dgraph/issues/6828\n[#7188]: https://github.com/hypermodeinc/dgraph/issues/7188\n[#7176]: https://github.com/hypermodeinc/dgraph/issues/7176\n[#7218]: https://github.com/hypermodeinc/dgraph/issues/7218\n[#7171]: https://github.com/hypermodeinc/dgraph/issues/7171\n[#7161]: https://github.com/hypermodeinc/dgraph/issues/7161\n[#7154]: https://github.com/hypermodeinc/dgraph/issues/7154\n[#7686]: https://github.com/hypermodeinc/dgraph/issues/7686\n[#7456]: https://github.com/hypermodeinc/dgraph/issues/7456\n[#7434]: https://github.com/hypermodeinc/dgraph/issues/7434\n[#7452]: https://github.com/hypermodeinc/dgraph/issues/7452\n[#7420]: https://github.com/hypermodeinc/dgraph/issues/7420\n[#7202]: https://github.com/hypermodeinc/dgraph/issues/7202\n[#7118]: https://github.com/hypermodeinc/dgraph/issues/7118\n\n## [20.07.1] - 2020-09-17\n[20.07.1]: https://github.com/hypermodeinc/dgraph/compare/v20.07.0...v20.07.1\n\n### Changed\n\n- GraphQL\n  - Remove github issues link from the error messages. ([#6183][])\n  - Allow case insensitive auth header for graphql subscriptions. ([#6179][])\n- Add retry for schema update ([#6098][])\n- Queue keys for rollup during mutation. ([#6151][])\n\n### Added\n\n- GraphQL\n  - Adds auth for subscriptions. ([#6165][])\n- Add --cache_mb and --cache_percentage flags. ([#6286][])\n- Add flags to set table and vlog loading mode for zero. ([#6342][])\n- Add flag to set up compression in zero. ([#6355][])\n\n### Fixed\n\n- GraphQL\n  - Multiple queries in a single request should not share the same variables. ([#6158][])\n  - Fixes panic in update mutation without set & remove. ([#6160][])\n  - Fixes wrong query parameter value for custom field URL. ([#6161][])\n  - Fix auth rewriting for nested queries when RBAC rule is true. ([#6167][])\n  - Disallow Subscription typename. ([#6173][])\n  - Panic fix when subscription expiry is not present in jwt. ([#6175][])\n  - Fix getType queries when id was used as a name for types other than ID. ([#6180][])\n  - Don't reserve certain queries/mutations/inputs when a type is remote. ([#6201][])\n  - Linking of xids for deep mutations. ([#6203][])\n  - Prevent empty values in fields having `id` directive. ([#6196][])\n  - Fixes unexpected fragment behaviour. ([#6274][])\n  - Incorrect generatedSchema in update GQLSchema. ([#6354][])\n- Fix out of order issues with split keys in bulk loader. ([#6124][])\n- Rollup a batch if more than 2 seconds elapsed since last batch. ([#6137][])\n- Refactor: Simplify how list splits are tracked. ([#6070][])\n- Fix: Don't allow idx flag to be set to 0 on dgraph zero. ([#6192][])\n- Fix error message for idx = 0 for dgraph zero. ([#6199][])\n- Stop forcing RAM mode for the write-ahead log. ([#6259][])\n- Fix panicwrap parent check. ([#6299][])\n- Sort manifests by BackupNum in file handler. ([#6279][])\n- Fixes queries which use variable at the top level. ([#6290][])\n- Return error on closed DB. ([#6320][])\n- Optimize splits by doing binary search.  Clear the pack from the main list. ([#6332][])\n- Proto fix needed for PR [#6331][]. ([#6346][])\n- Sentry nil pointer check. ([#6374][])\n- Don't store start_ts in postings. ([#6213][])\n- Use z.Closer instead of y.Closer. ([#6399][])\n- Make Alpha Shutdown Again. ([#6402][])\n- Force exit if CTRL-C is caught before initialization. ([#6407][])\n- Update advanced-queries.md.\n- Batch list in bulk loader to avoid panic. ([#6446][])\n- Enterprise features\n  - Make backups cancel other tasks. ([#6243][])\n  - Online Restore honors credentials passed in. ([#6302][])\n  - Add a lock to backups to process one request at a time. ([#6339][])\n  - Fix Star_All delete query when used with ACL enabled. ([#6336][])\n\n[#6407]: https://github.com/hypermodeinc/dgraph/issues/6407\n[#6336]: https://github.com/hypermodeinc/dgraph/issues/6336\n[#6446]: https://github.com/hypermodeinc/dgraph/issues/6446\n[#6402]: https://github.com/hypermodeinc/dgraph/issues/6402\n[#6399]: https://github.com/hypermodeinc/dgraph/issues/6399\n[#6346]: https://github.com/hypermodeinc/dgraph/issues/6346\n[#6332]: https://github.com/hypermodeinc/dgraph/issues/6332\n[#6243]: https://github.com/hypermodeinc/dgraph/issues/6243\n[#6302]: https://github.com/hypermodeinc/dgraph/issues/6302\n[#6339]: https://github.com/hypermodeinc/dgraph/issues/6339\n[#6355]: https://github.com/hypermodeinc/dgraph/issues/6355\n[#6342]: https://github.com/hypermodeinc/dgraph/issues/6342\n[#6286]: https://github.com/hypermodeinc/dgraph/issues/6286\n[#6201]: https://github.com/hypermodeinc/dgraph/issues/6201\n[#6203]: https://github.com/hypermodeinc/dgraph/issues/6203\n[#6196]: https://github.com/hypermodeinc/dgraph/issues/6196\n[#6124]: https://github.com/hypermodeinc/dgraph/issues/6124\n[#6137]: https://github.com/hypermodeinc/dgraph/issues/6137\n[#6070]: https://github.com/hypermodeinc/dgraph/issues/6070\n[#6192]: https://github.com/hypermodeinc/dgraph/issues/6192\n[#6199]: https://github.com/hypermodeinc/dgraph/issues/6199\n[#6158]: https://github.com/hypermodeinc/dgraph/issues/6158\n[#6160]: https://github.com/hypermodeinc/dgraph/issues/6160\n[#6161]: https://github.com/hypermodeinc/dgraph/issues/6161\n[#6167]: https://github.com/hypermodeinc/dgraph/issues/6167\n[#6173]: https://github.com/hypermodeinc/dgraph/issues/6173\n[#6175]: https://github.com/hypermodeinc/dgraph/issues/6175\n[#6180]: https://github.com/hypermodeinc/dgraph/issues/6180\n[#6183]: https://github.com/hypermodeinc/dgraph/issues/6183\n[#6179]: https://github.com/hypermodeinc/dgraph/issues/6179\n[#6009]: https://github.com/hypermodeinc/dgraph/issues/6009\n[#6095]: https://github.com/hypermodeinc/dgraph/issues/6095\n[#6098]: https://github.com/hypermodeinc/dgraph/issues/6098\n[#6151]: https://github.com/hypermodeinc/dgraph/issues/6151\n[#6165]: https://github.com/hypermodeinc/dgraph/issues/6165\n[#6259]: https://github.com/hypermodeinc/dgraph/issues/6259\n[#6299]: https://github.com/hypermodeinc/dgraph/issues/6299\n[#6279]: https://github.com/hypermodeinc/dgraph/issues/6279\n[#6290]: https://github.com/hypermodeinc/dgraph/issues/6290\n[#6274]: https://github.com/hypermodeinc/dgraph/issues/6274\n[#6320]: https://github.com/hypermodeinc/dgraph/issues/6320\n[#6331]: https://github.com/hypermodeinc/dgraph/issues/6331\n[#6354]: https://github.com/hypermodeinc/dgraph/issues/6354\n[#6374]: https://github.com/hypermodeinc/dgraph/issues/6374\n[#6213]: https://github.com/hypermodeinc/dgraph/issues/6213\n\n## [20.03.5] - 2020-09-17\n[20.03.5]: https://github.com/hypermodeinc/dgraph/compare/v20.03.4...v20.03.5\n\n### Changed\n\n- Add retry for schema update. ([#6097][])\n- Queue keys for rollup during mutation. ([#6150][])\n\n### Added\n\n- Add --cache_mb and --cache_percentage flags. ([#6287][])\n- Add flag to set up compression in zero. ([#6356][])\n- Add flags to set table and vlog loading mode for zero. ([#6343][])\n\n### Fixed\n\n- GraphQL\n  - Prevent empty values in fields having `id` directive. ([#6197][])\n- Fix out of order issues with split keys in bulk loader. ([#6125][])\n- Rollup a batch if more than 2 seconds elapsed since last batch. ([#6138][])\n- Simplify how list splits are tracked. ([#6071][])\n- Perform rollups more aggresively. ([#6147][])\n- Don't allow idx flag to be set to 0 on dgraph zero. ([#6156][])\n- Stop forcing RAM mode for the write-ahead log. ([#6260][])\n- Fix panicwrap parent check.  ([#6300][])\n- Sort manifests by backup number. ([#6280][])\n- Don't store start_ts in postings. ([#6214][])\n- Update reverse index when updating single UID predicates. ([#6006][])\n- Return error on closed DB.  ([#6321][])\n- Optimize splits by doing binary search.  Clear the pack from the main list. ([#6333][])\n- Sentry nil pointer check. ([#6375][])\n- Use z.Closer instead of y.Closer. ([#6398][])\n- Make Alpha Shutdown Again. ([#6403][])\n- Force exit if CTRL-C is caught before initialization. ([#6409][])\n- Batch list in bulk loader to avoid panic. ([#6445][])\n- Enterprise features\n  -  Make backups cancel other tasks. ([#6244][])\n  - Add a lock to backups to process one request at a time. ([#6340][])\n\n[#6409]: https://github.com/hypermodeinc/dgraph/issues/6409\n[#6445]: https://github.com/hypermodeinc/dgraph/issues/6445\n[#6398]: https://github.com/hypermodeinc/dgraph/issues/6398\n[#6403]: https://github.com/hypermodeinc/dgraph/issues/6403\n[#6260]: https://github.com/hypermodeinc/dgraph/issues/6260\n[#6300]: https://github.com/hypermodeinc/dgraph/issues/6300\n[#6280]: https://github.com/hypermodeinc/dgraph/issues/6280\n[#6214]: https://github.com/hypermodeinc/dgraph/issues/6214\n[#6006]: https://github.com/hypermodeinc/dgraph/issues/6006\n[#6321]: https://github.com/hypermodeinc/dgraph/issues/6321\n[#6244]: https://github.com/hypermodeinc/dgraph/issues/6244\n[#6333]: https://github.com/hypermodeinc/dgraph/issues/6333\n[#6340]: https://github.com/hypermodeinc/dgraph/issues/6340\n[#6343]: https://github.com/hypermodeinc/dgraph/issues/6343\n[#6197]: https://github.com/hypermodeinc/dgraph/issues/6197\n[#6375]: https://github.com/hypermodeinc/dgraph/issues/6375\n[#6287]: https://github.com/hypermodeinc/dgraph/issues/6287\n[#6356]: https://github.com/hypermodeinc/dgraph/issues/6356\n[#5988]: https://github.com/hypermodeinc/dgraph/issues/5988\n[#6097]: https://github.com/hypermodeinc/dgraph/issues/6097\n[#6094]: https://github.com/hypermodeinc/dgraph/issues/6094\n[#6150]: https://github.com/hypermodeinc/dgraph/issues/6150\n[#6125]: https://github.com/hypermodeinc/dgraph/issues/6125\n[#6138]: https://github.com/hypermodeinc/dgraph/issues/6138\n[#6071]: https://github.com/hypermodeinc/dgraph/issues/6071\n[#6156]: https://github.com/hypermodeinc/dgraph/issues/6156\n[#6147]: https://github.com/hypermodeinc/dgraph/issues/6147\n\n## [1.2.7] - 2020-09-21\n[1.2.7]: https://github.com/hypermodeinc/dgraph/compare/v1.2.6...v1.2.7\n\n### Added\n\n- Add --cache_mb and --cache_percentage flags. ([#6288][])\n- Add flag to set up compression in zero. ([#6357][])\n- Add flags to set table and vlog loading mode for zero. ([#6344][])\n\n### Fixed\n\n- Don't allow idx flag to be set to 0 on dgraph zero. ([#6193][])\n- Stop forcing RAM mode for the write-ahead log. ([#6261][])\n- Return error on closed DB. ([#6319][])\n- Don't store start_ts in postings. ([#6212][])\n- Optimize splits by doing binary search.  Clear the pack from the main list. ([#6334][])\n- Add a lock to backups to process one request at a time. ([#6341][])\n- Use z.Closer instead of y.Closer' ([#6396][])\n- Force exit if CTRL-C is caught before initialization. ([#6408][])\n- Fix(Alpha): MASA: Make Alpha Shutdown Again. ([#6406][])\n- Enterprise features\n  - Sort manifests by backup number. ([#6281][])\n  - Skip backing up nil lists. ([#6314][])\n\n[#6408]: https://github.com/hypermodeinc/dgraph/issues/6408\n[#6406]: https://github.com/hypermodeinc/dgraph/issues/6406\n[#6396]: https://github.com/hypermodeinc/dgraph/issues/6396\n[#6261]: https://github.com/hypermodeinc/dgraph/issues/6261\n[#6319]: https://github.com/hypermodeinc/dgraph/issues/6319\n[#6212]: https://github.com/hypermodeinc/dgraph/issues/6212\n[#6334]: https://github.com/hypermodeinc/dgraph/issues/6334\n[#6341]: https://github.com/hypermodeinc/dgraph/issues/6341\n[#6281]: https://github.com/hypermodeinc/dgraph/issues/6281\n[#6314]: https://github.com/hypermodeinc/dgraph/issues/6314\n[#6288]: https://github.com/hypermodeinc/dgraph/issues/6288\n[#6357]: https://github.com/hypermodeinc/dgraph/issues/6357\n[#6344]: https://github.com/hypermodeinc/dgraph/issues/6344\n[#5987]: https://github.com/hypermodeinc/dgraph/issues/5987\n[#6193]: https://github.com/hypermodeinc/dgraph/issues/6193\n\n## [20.07.0] - 2020-07-28\n[20.07.0]: https://github.com/hypermodeinc/dgraph/compare/v20.03.4...v20.07.0\n\n### Changed\n\n- GraphQL\n  - Make updateGQLSchema always return the new schema. ([#5540][])\n  - Allow user to define and pass arguments to fields. ([#5562][])\n  - Move alias to end of graphql pipeline. ([#5369][])\n- Return error list while validating GraphQL schema. ([#5576][])\n- Send CID for sentry events. ([#5625][])\n- Alpha: Enable bloom filter caching ([#5552][])\n- Add support for multiple uids in uid_in function ([#5292][])\n- Tag sentry events with additional version details. ([#5726][])\n- Sentry opt out banner. ([#5727][])\n- Replace shutdownCh and wait groups to a y.Closer for shutting down Alpha. ([#5560][])\n- Update badger to commit [e7b6e76f96e8][]. ([#5537][])\n- Update Badger ([#5661][], [#6034][])\n  - Fix assert in background compression and encryption. ([dgraph-io/badger#1366][])\n  - GC: Consider size of value while rewriting ([dgraph-io/badger#1357][])\n  - Restore: Account for value size as well ([dgraph-io/badger#1358][])\n  - Tests: Do not leave behind state goroutines ([dgraph-io/badger#1349][])\n  - Support disabling conflict detection ([dgraph-io/badger#1344][])\n  - Compaction: Expired keys and delete markers are never purged ([dgraph-io/badger#1354][])\n  - Fix build on golang tip ([dgraph-io/badger#1355][])\n  - StreamWriter: Close head writer ([dgraph-io/badger#1347][])\n  - Iterator: Always add key to txn.reads ([dgraph-io/badger#1328][])\n  - Add immudb to the project list ([dgraph-io/badger#1341][])\n  - DefaultOptions: Set KeepL0InMemory to false ([dgraph-io/badger#1345][])\n- Enterprise features\n  - /health endpoint now shows Enterprise Features available. Fixes [#5234][]. ([#5293][])\n  - GraphQL Changes for /health endpoint's Enterprise features info. Fixes [#5234][]. ([#5308][])\n  - Use encryption in temp badger, fix compilation on 32-bit. ([#4963][])\n  - Only process restore request in the current alpha if it's the leader. ([#5657][])\n  - Vault: Support kv v1 and decode base64 key. ([#5725][])\n  - **Breaking changes**\n    - [BREAKING] GraphQL: Add camelCase for add/update mutation. Fixes [#5380][]. ([#5547][])\n\n### Added\n\n- GraphQL\n  - Add Graphql-TouchedUids header in HTTP response. ([#5572][])\n  - Introduce `@cascade` in GraphQL. Fixes [#4789][]. ([#5511][])\n  - Add authentication feature and http admin endpoints. Fixes [#4758][]. ([#5162][])\n  - Support existing gqlschema nodes without xid. ([#5457][])\n  - Add custom logic feature. ([#5004][])\n  - Add extensions to query response. ([#5157][])\n  - Allow query of deleted nodes. ([#5949][])\n  - Allow more control over custom logic header names. ([#5809][])\n  - Adds Apollo tracing to GraphQL extensions. ([#5855][])\n  - Turn on subscriptions and adds directive to control subscription generation. ([#5856][])\n  - Add introspection headers to custom logic. ([#5858][])\n  - GraphQL health now reported by /probe/graphql. ([#5875][])\n  - Validate audience in authorization JWT and change `Dgraph.Authorization` format. ([#5980][])\n- Upgrade tool for 20.07. ([#5830][])\n- Async restore operations. ([#5704][])\n- Add LogRequest variable to GraphQL config input. ([#5197][])\n- Allow backup ID to be passed to restore endpoint. ([#5208][])\n- Added support for application/graphQL to graphQL endpoints. ([#5125][])\n- Add support for xidmap in bulkloader. Fixes [#4917][]. ([#5090][])\n- Add GraphQL admin endpoint to list backups. ([#5307][])\n- Enterprise features\n  - GraphQL schema get/update, Dgraph schema query/alter and /login are now admin operations. ([#5833][])\n  - Backup can take S3 credentials from IAM. ([#5387][])\n  - Online restore. ([#5095][])\n  - Retry restore proposals. ([#5765][])\n  - Add support for encrypted backups in online restores. ([#5226][])\n  - **Breaking changes**\n    - [BREAKING] Vault Integration. ([#5402][])\n\n### Fixed\n\n- GraphQL\n  - Validate JWT Claims and test JWT expiry. ([#6050][])\n  - Validate subscriptions in Operation function. ([#5983][])\n  - Nested auth queries no longer search through all possible records. ([#5950][])\n  - Apply auth rules on type having @dgraph directive. ([#5863][])\n  - Custom Claim will be parsed as JSON if it is encoded as a string. ([#5862][])\n  - Dgraph directive with reverse edge should work smoothly with interfaces. Fixed [#5744][]. ([#5982][])\n  - Fix case where Dgraph type was not generated for GraphQL interface. Fixes [#5311][]. ([#5828][])\n  - Fix panic error when there is no @withSubscription directive on any type. ([#5921][])\n  - Fix OOM issue in graphql mutation rewriting. ([#5854][])\n  - Preserve GraphQL schema after drop_data. ([#5840][])\n  - Maintain Master's backward compatibility for `Dgraph.Authorization` in schema. ([#6014][])\n  - Remote schema introspection for single remote endpoint. ([#5824][])\n  - Requesting only \\_\\-typename now returns results. ([#5823][])\n  - Typename for types should be filled in query for schema introspection queries. Fixes [#5792][]. ([#5891][])\n  - Update GraphQL schema only on Group-1 leader. ([#5829][])\n  - Add more validations for coercion of object/scalar and vice versa. ([#5534][])\n  - Apply type filter for get query at root level. ([#5497][])\n  - Fix mutation on predicate with special characters having dgraph directive. Fixes [#5296][]. ([#5526][])\n  - Return better error message if a type only contains ID field. ([#5531][])\n  - Coerce value for scalar types correctly. ([#5487][])\n  - Minor delete mutation msg fix. ([#5316][])\n  - Report all errors during schema update. ([#5425][])\n  - Do graphql query/mutation validation in the mock server. ([#5362][])\n  - Remove custom directive from internal schema. ([#5354][])\n  - Recover from panic within goroutines used for resolving custom fields. ([#5329][])\n  - Start collecting and returning errors from remote remote GraphQL endpoints. ([#5328][])\n  - Fix response for partial admin queries. ([#5317][])\n- Avoid assigning duplicate RAFT IDs to new nodes. Fixes [#5436][]. ([#5571][])\n- Alpha: Gracefully shutdown ludicrous mode. ([#5561][])\n- Use rampMeter for Executor. ([#5503][])\n- Dont set n.ops map entries to nil. Instead just delete them. ([#5551][])\n- Add check on rebalance interval. ([#5544][])\n- Queries or mutations shouldn't be part of generated Dgraph schema. ([#5524][])\n- Sent restore proposals to all groups asyncronouosly. ([#5467][])\n- Fix long lines in export.go. ([#5498][])\n- Fix warnings about unkeyed literals. ([#5492][])\n- Remove redundant conversions between string and []byte. ([#5478][])\n- Propogate request context while handling queries. ([#5418][])\n- K-Shortest path query fix. Fixes [#5426][]. ([#5410][])\n- Worker: Return nil on error. ([#5414][])\n- Fix warning about issues with the cancel function. ([#5397][]).\n- Replace TxnWriter with WriteBatch. ([#5007][])\n- Add a check to throw an error is a nil pointer is passed to unmarshalOrCopy. ([#5334][])\n- Remove noisy logs in tablet move. ([#5333][])\n- Support bulk loader use-case to import unencrypted export and encrypt the result.  ([#5209][])\n- Handle Dgraph shutdown gracefully. Fixes [#3873][]. ([#5137][], [#5138][])\n- If we don't have any schema updates, avoid running the indexing sequence. ([#5126][])\n- Pass read timestamp to getNew. ([#5085][])\n- Indicate dev environment in Sentry events. ([#5051][])\n- Replaced s2 contains point methods with go-geom. ([#5023][]\n- Change tablet size calculation to not depend on the right key. Fixes [#5408][]. ([#5684][])\n- Fix alpha start in ludicrous mode. Fixes [#5601][]. ([#5912][])\n- Handle schema updates correctly in ludicrous mode. ([#5970][])\n- Fix Panic because of nil map in groups.go. ([#6008][])\n- update reverse index when updating single UID predicates. Fixes [#5732][]. ([#6005][]), ([#6015][])\n- Fix expand(\\_all\\_) queries in ACL. Fixes [#5687][]. ([#5993][])\n- Fix val queries when ACL is enabled. Fixes [#5687][]. ([#5995][])\n- Return error if server is not ready. ([#6020][])\n- Reduce memory consumption of the map. ([#5957][])\n- Cancel the context when opening connection to leader for streaming snapshot. ([#6045][])\n- **Breaking changes**\n  - [BREAKING] Namespace dgraph internal types/predicates with `dgraph.` Fixes [#4878][]. ([#5185][])\n  - [BREAKING] Remove shorthand for store_xids in bulk loader.  ([#5148][])\n  - [BREAKING] Introduce new facets format. Fixes [#4798][], [#4581][], [#4907][]. ([#5424][])\n- Enterprise:\n  - Backup: Change groupId from int to uint32. ([#5605][])\n  - Backup: Use a sync.Pool to allocate KVs during backup. ([#5579][])\n  - Backup: Fix segmentation fault when calling the /admin/backup edpoint. ([#6043][])\n  - Restore: Make backupId optional in restore GraphQL interface. ([#5685][])\n  - Restore: Move tablets to right group when restoring a backup. ([#5682][])\n  - Restore: Only processes backups for the alpha's group. ([#5588][])\n  - vault_format support for online restore and gql ([#5758][])\n\n[#5661]: https://github.com/hypermodeinc/dgraph/issues/5661\n[dgraph-io/badger#1366]: https://github.com/dgraph-io/badger/issues/1366\n[dgraph-io/badger#1357]: https://github.com/dgraph-io/badger/issues/1357\n[dgraph-io/badger#1358]: https://github.com/dgraph-io/badger/issues/1358\n[dgraph-io/badger#1349]: https://github.com/dgraph-io/badger/issues/1349\n[dgraph-io/badger#1344]: https://github.com/dgraph-io/badger/issues/1344\n[dgraph-io/badger#1354]: https://github.com/dgraph-io/badger/issues/1354\n[dgraph-io/badger#1355]: https://github.com/dgraph-io/badger/issues/1355\n[dgraph-io/badger#1347]: https://github.com/dgraph-io/badger/issues/1347\n[dgraph-io/badger#1328]: https://github.com/dgraph-io/badger/issues/1328\n[dgraph-io/badger#1341]: https://github.com/dgraph-io/badger/issues/1341\n[dgraph-io/badger#1345]: https://github.com/dgraph-io/badger/issues/1345\n[#6050]: https://github.com/hypermodeinc/dgraph/issues/6050\n[#6045]: https://github.com/hypermodeinc/dgraph/issues/6045\n[#5725]: https://github.com/hypermodeinc/dgraph/issues/5725\n[#5579]: https://github.com/hypermodeinc/dgraph/issues/5579\n[#5685]: https://github.com/hypermodeinc/dgraph/issues/5685\n[#5682]: https://github.com/hypermodeinc/dgraph/issues/5682\n[#5572]: https://github.com/hypermodeinc/dgraph/issues/5572\n[#4789]: https://github.com/hypermodeinc/dgraph/issues/4789\n[#5511]: https://github.com/hypermodeinc/dgraph/issues/5511\n[#4758]: https://github.com/hypermodeinc/dgraph/issues/4758\n[#5162]: https://github.com/hypermodeinc/dgraph/issues/5162\n[#5457]: https://github.com/hypermodeinc/dgraph/issues/5457\n[#5004]: https://github.com/hypermodeinc/dgraph/issues/5004\n[#5134]: https://github.com/hypermodeinc/dgraph/issues/5134\n[#5157]: https://github.com/hypermodeinc/dgraph/issues/5157\n[#5197]: https://github.com/hypermodeinc/dgraph/issues/5197\n[#5387]: https://github.com/hypermodeinc/dgraph/issues/5387\n[#5226]: https://github.com/hypermodeinc/dgraph/issues/5226\n[#5208]: https://github.com/hypermodeinc/dgraph/issues/5208\n[#5125]: https://github.com/hypermodeinc/dgraph/issues/5125\n[#5095]: https://github.com/hypermodeinc/dgraph/issues/5095\n[#4917]: https://github.com/hypermodeinc/dgraph/issues/4917\n[#5090]: https://github.com/hypermodeinc/dgraph/issues/5090\n[#5307]: https://github.com/hypermodeinc/dgraph/issues/5307\n[#5402]: https://github.com/hypermodeinc/dgraph/issues/5402\n[#5540]: https://github.com/hypermodeinc/dgraph/issues/5540\n[#5576]: https://github.com/hypermodeinc/dgraph/issues/5576\n[#5625]: https://github.com/hypermodeinc/dgraph/issues/5625\n[#5562]: https://github.com/hypermodeinc/dgraph/issues/5562\n[#5552]: https://github.com/hypermodeinc/dgraph/issues/5552\n[#5369]: https://github.com/hypermodeinc/dgraph/issues/5369\n[#5292]: https://github.com/hypermodeinc/dgraph/issues/5292\n[#5234]: https://github.com/hypermodeinc/dgraph/issues/5234\n[#5293]: https://github.com/hypermodeinc/dgraph/issues/5293\n[#5234]: https://github.com/hypermodeinc/dgraph/issues/5234\n[#5308]: https://github.com/hypermodeinc/dgraph/issues/5308\n[#4963]: https://github.com/hypermodeinc/dgraph/issues/4963\n[#5380]: https://github.com/hypermodeinc/dgraph/issues/5380\n[#5547]: https://github.com/hypermodeinc/dgraph/issues/5547\n[#5534]: https://github.com/hypermodeinc/dgraph/issues/5534\n[#5497]: https://github.com/hypermodeinc/dgraph/issues/5497\n[#5296]: https://github.com/hypermodeinc/dgraph/issues/5296\n[#5526]: https://github.com/hypermodeinc/dgraph/issues/5526\n[#5531]: https://github.com/hypermodeinc/dgraph/issues/5531\n[#5487]: https://github.com/hypermodeinc/dgraph/issues/5487\n[#5316]: https://github.com/hypermodeinc/dgraph/issues/5316\n[#5425]: https://github.com/hypermodeinc/dgraph/issues/5425\n[#5362]: https://github.com/hypermodeinc/dgraph/issues/5362\n[#5354]: https://github.com/hypermodeinc/dgraph/issues/5354\n[#5329]: https://github.com/hypermodeinc/dgraph/issues/5329\n[#5328]: https://github.com/hypermodeinc/dgraph/issues/5328\n[#5317]: https://github.com/hypermodeinc/dgraph/issues/5317\n[#5588]: https://github.com/hypermodeinc/dgraph/issues/5588\n[#5605]: https://github.com/hypermodeinc/dgraph/issues/5605\n[#5571]: https://github.com/hypermodeinc/dgraph/issues/5571\n[#5561]: https://github.com/hypermodeinc/dgraph/issues/5561\n[#5503]: https://github.com/hypermodeinc/dgraph/issues/5503\n[#5551]: https://github.com/hypermodeinc/dgraph/issues/5551\n[#5544]: https://github.com/hypermodeinc/dgraph/issues/5544\n[#5524]: https://github.com/hypermodeinc/dgraph/issues/5524\n[#5467]: https://github.com/hypermodeinc/dgraph/issues/5467\n[#5498]: https://github.com/hypermodeinc/dgraph/issues/5498\n[#5492]: https://github.com/hypermodeinc/dgraph/issues/5492\n[#5478]: https://github.com/hypermodeinc/dgraph/issues/5478\n[#5418]: https://github.com/hypermodeinc/dgraph/issues/5418\n[#5426]: https://github.com/hypermodeinc/dgraph/issues/5426\n[#5410]: https://github.com/hypermodeinc/dgraph/issues/5410\n[#5414]: https://github.com/hypermodeinc/dgraph/issues/5414\n[#5397]: https://github.com/hypermodeinc/dgraph/issues/5397\n[#5007]: https://github.com/hypermodeinc/dgraph/issues/5007\n[#5334]: https://github.com/hypermodeinc/dgraph/issues/5334\n[#5333]: https://github.com/hypermodeinc/dgraph/issues/5333\n[#5209]: https://github.com/hypermodeinc/dgraph/issues/5209\n[#3873]: https://github.com/hypermodeinc/dgraph/issues/3873\n[#5138]: https://github.com/hypermodeinc/dgraph/issues/5138\n[#3873]: https://github.com/hypermodeinc/dgraph/issues/3873\n[#5137]: https://github.com/hypermodeinc/dgraph/issues/5137\n[#5126]: https://github.com/hypermodeinc/dgraph/issues/5126\n[#5085]: https://github.com/hypermodeinc/dgraph/issues/5085\n[#5051]: https://github.com/hypermodeinc/dgraph/issues/5051\n[#5023]: https://github.com/hypermodeinc/dgraph/issues/5023\n[#4878]: https://github.com/hypermodeinc/dgraph/issues/4878\n[#5185]: https://github.com/hypermodeinc/dgraph/issues/5185\n[#5148]: https://github.com/hypermodeinc/dgraph/issues/5148\n[#4798]: https://github.com/hypermodeinc/dgraph/issues/4798\n[#4581]: https://github.com/hypermodeinc/dgraph/issues/4581\n[#4907]: https://github.com/hypermodeinc/dgraph/issues/4907\n[#5424]: https://github.com/hypermodeinc/dgraph/issues/5424\n[#5436]: https://github.com/hypermodeinc/dgraph/issues/5436\n[#5537]: https://github.com/hypermodeinc/dgraph/issues/5537\n[#5657]: https://github.com/hypermodeinc/dgraph/issues/5657\n[#5726]: https://github.com/hypermodeinc/dgraph/issues/5726\n[#5727]: https://github.com/hypermodeinc/dgraph/issues/5727\n[#5408]: https://github.com/hypermodeinc/dgraph/issues/5408\n[#5684]: https://github.com/hypermodeinc/dgraph/issues/5684\n[e7b6e76f96e8]: https://github.com/dgraph-io/badger/commit/e7b6e76f96e8\n[#5949]: https://github.com/hypermodeinc/dgraph/issues/5949\n[#5704]: https://github.com/hypermodeinc/dgraph/issues/5704\n[#5765]: https://github.com/hypermodeinc/dgraph/issues/5765\n[#5809]: https://github.com/hypermodeinc/dgraph/issues/5809\n[#5830]: https://github.com/hypermodeinc/dgraph/issues/5830\n[#5855]: https://github.com/hypermodeinc/dgraph/issues/5855\n[#5856]: https://github.com/hypermodeinc/dgraph/issues/5856\n[#5858]: https://github.com/hypermodeinc/dgraph/issues/5858\n[#5833]: https://github.com/hypermodeinc/dgraph/issues/5833\n[#5875]: https://github.com/hypermodeinc/dgraph/issues/5875\n[#5980]: https://github.com/hypermodeinc/dgraph/issues/5980\n[#5560]: https://github.com/hypermodeinc/dgraph/issues/5560\n[#5912]: https://github.com/hypermodeinc/dgraph/issues/5912\n[#5601]: https://github.com/hypermodeinc/dgraph/issues/5601\n[#5970]: https://github.com/hypermodeinc/dgraph/issues/5970\n[#6008]: https://github.com/hypermodeinc/dgraph/issues/6008\n[#6005]: https://github.com/hypermodeinc/dgraph/issues/6005\n[#6015]: https://github.com/hypermodeinc/dgraph/issues/6015\n[#5732]: https://github.com/hypermodeinc/dgraph/issues/5732\n[#5863]: https://github.com/hypermodeinc/dgraph/issues/5863\n[#5862]: https://github.com/hypermodeinc/dgraph/issues/5862\n[#5982]: https://github.com/hypermodeinc/dgraph/issues/5982\n[#5744]: https://github.com/hypermodeinc/dgraph/issues/5744\n[#5828]: https://github.com/hypermodeinc/dgraph/issues/5828\n[#5311]: https://github.com/hypermodeinc/dgraph/issues/5311\n[#5921]: https://github.com/hypermodeinc/dgraph/issues/5921\n[#5854]: https://github.com/hypermodeinc/dgraph/issues/5854\n[#5840]: https://github.com/hypermodeinc/dgraph/issues/5840\n[#5758]: https://github.com/hypermodeinc/dgraph/issues/5758\n[#5983]: https://github.com/hypermodeinc/dgraph/issues/5983\n[#5957]: https://github.com/hypermodeinc/dgraph/issues/5957\n[#6014]: https://github.com/hypermodeinc/dgraph/issues/6014\n[#5824]: https://github.com/hypermodeinc/dgraph/issues/5824\n[#5823]: https://github.com/hypermodeinc/dgraph/issues/5823\n[#5891]: https://github.com/hypermodeinc/dgraph/issues/5891\n[#5792]: https://github.com/hypermodeinc/dgraph/issues/5792\n[#5829]: https://github.com/hypermodeinc/dgraph/issues/5829\n[#5993]: https://github.com/hypermodeinc/dgraph/issues/5993\n[#5687]: https://github.com/hypermodeinc/dgraph/issues/5687\n[#5995]: https://github.com/hypermodeinc/dgraph/issues/5995\n[#5687]: https://github.com/hypermodeinc/dgraph/issues/5687\n[#6020]: https://github.com/hypermodeinc/dgraph/issues/6020\n[#5950]: https://github.com/hypermodeinc/dgraph/issues/5950\n[#5809]: https://github.com/hypermodeinc/dgraph/issues/5809\n[#6034]: https://github.com/hypermodeinc/dgraph/issues/6034\n[#6043]: https://github.com/hypermodeinc/dgraph/issues/6043\n\n## [20.03.4] - 2020-07-23\n[20.03.4]: https://github.com/hypermodeinc/dgraph/compare/v20.03.3...v20.03.4\n\n### Changed\n- Update Badger 07/13/2020. ([#5941][], [#5616][])\n\n### Added\n- Sentry opt out banner. ([#5729][])\n- Tag sentry events with additional version details. ([#5728][])\n\n### Fixed\n- GraphQL\n  - Minor delete mutation msg fix. ([#5564][])\n  - Make updateGQLSchema always return the new schema. ([#5582][])\n  - Fix mutation on predicate with special characters in the `@dgraph` directive. ([#5577][])\n  - Updated mutation rewriting to fix OOM issue. ([#5536][])\n  - Fix case where Dgraph type was not generated for GraphQL interface. Fixes [#5311][]. ([#5844][])\n  - Fix interface conversion panic in v20.03 ([#5857][]) .\n- Dont set n.ops map entries to nil. Instead just delete them. ([#5557][])\n- Alpha: Enable bloom filter caching. ([#5555][])\n- Alpha: Gracefully shutdown ludicrous mode. ([#5584][])\n- Alpha Close: Wait for indexing to complete. Fixes [#3873][]. ([#5597][])\n- K shortest paths queries fix. ([#5548][])\n- Add check on rebalance interval. ([#5594][])\n- Remove noisy logs in tablet move. ([#5591][])\n- Avoid assigning duplicate RAFT IDs to new nodes. Fixes [#4536][]. ([#5604][])\n- Send CID for sentry events. ([#5633][])\n- Use rampMeter for Executor. ([#5503][])\n- Fix snapshot calculation in ludicrous mode. ([#5636][])\n- Update badger: Avoid panic in fillTables(). Fix assert in background compression and encryption. ([#5680][])\n- Avoid panic in handleValuePostings. ([#5678][])\n- Fix facets response with normalize. Fixes [#5241][]. ([#5691][])\n- Badger iterator key copy in count index query. ([#5916][])\n- Ludicrous mode mutation error. ([#5914][])\n- Return error instead of panic. ([#5907][])\n- Fix segmentation fault in draft.go. ([#5860][])\n- Optimize count index. ([#5971][])\n- Handle schema updates correctly in ludicrous mode. ([#5969][])\n- Fix Panic because of nil map in groups.go. ([#6007][])\n- Return error if server is not ready. ([#6021][])\n- Enterprise features\n  - Backup: Change groupId from int to uint32. ([#5614][])\n  - Backup: Use a sync.Pool to allocate KVs. ([#5579][])\n\n[#5241]: https://github.com/hypermodeinc/dgraph/issues/5241\n[#5691]: https://github.com/hypermodeinc/dgraph/issues/5691\n[#5916]: https://github.com/hypermodeinc/dgraph/issues/5916\n[#5914]: https://github.com/hypermodeinc/dgraph/issues/5914\n[#5907]: https://github.com/hypermodeinc/dgraph/issues/5907\n[#5860]: https://github.com/hypermodeinc/dgraph/issues/5860\n[#5971]: https://github.com/hypermodeinc/dgraph/issues/5971\n[#5311]: https://github.com/hypermodeinc/dgraph/issues/5311\n[#5844]: https://github.com/hypermodeinc/dgraph/issues/5844\n[#5857]: https://github.com/hypermodeinc/dgraph/issues/5857\n[#5941]: https://github.com/hypermodeinc/dgraph/issues/5941\n[#5729]: https://github.com/hypermodeinc/dgraph/issues/5729\n[#5728]: https://github.com/hypermodeinc/dgraph/issues/5728\n[#5616]: https://github.com/hypermodeinc/dgraph/issues/5616\n[#5564]: https://github.com/hypermodeinc/dgraph/issues/5564\n[#5582]: https://github.com/hypermodeinc/dgraph/issues/5582\n[#5577]: https://github.com/hypermodeinc/dgraph/issues/5577\n[#5536]: https://github.com/hypermodeinc/dgraph/issues/5536\n[#5557]: https://github.com/hypermodeinc/dgraph/issues/5557\n[#5555]: https://github.com/hypermodeinc/dgraph/issues/5555\n[#5584]: https://github.com/hypermodeinc/dgraph/issues/5584\n[#3873]: https://github.com/hypermodeinc/dgraph/issues/3873\n[#5597]: https://github.com/hypermodeinc/dgraph/issues/5597\n[#5548]: https://github.com/hypermodeinc/dgraph/issues/5548\n[#5594]: https://github.com/hypermodeinc/dgraph/issues/5594\n[#5591]: https://github.com/hypermodeinc/dgraph/issues/5591\n[#4536]: https://github.com/hypermodeinc/dgraph/issues/4536\n[#5604]: https://github.com/hypermodeinc/dgraph/issues/5604\n[#5633]: https://github.com/hypermodeinc/dgraph/issues/5633\n[#5503]: https://github.com/hypermodeinc/dgraph/issues/5503\n[#5636]: https://github.com/hypermodeinc/dgraph/issues/5636\n[#5680]: https://github.com/hypermodeinc/dgraph/issues/5680\n[#5614]: https://github.com/hypermodeinc/dgraph/issues/5614\n[#5579]: https://github.com/hypermodeinc/dgraph/issues/5579\n[#5678]: https://github.com/hypermodeinc/dgraph/issues/5678\n[#5969]: https://github.com/hypermodeinc/dgraph/issues/5969\n[#6007]: https://github.com/hypermodeinc/dgraph/issues/6007\n[#6021]: https://github.com/hypermodeinc/dgraph/issues/6021\n\n## [1.2.6] - 2020-07-31\n[1.2.6]: https://github.com/hypermodeinc/dgraph/compare/v1.2.5...v1.2.6\n\n### Changed\n\n- Update Badger. ([#5940][], [#5990][])\n  - Fix assert in background compression and encryption. (dgraph-io/badger#1366)\n  - Avoid panic in filltables() (dgraph-io/badger#1365)\n  - Force KeepL0InMemory to be true when InMemory is true (dgraph-io/badger#1375)\n  - Tests: Use t.Parallel in TestIteratePrefix tests (dgraph-io/badger#1377)\n  - Remove second initialization of writech in Open (dgraph-io/badger#1382)\n  - Increase default valueThreshold from 32B to 1KB (dgraph-io/badger#1346)\n  - Pre allocate cache key for the block cache and the bloom filter cache (dgraph-io/badger#1371)\n  - Rework DB.DropPrefix (dgraph-io/badger#1381)\n  - Update head while replaying value log (dgraph-io/badger#1372)\n  - Update ristretto to commit f66de99 (dgraph-io/badger#1391)\n  - Enable cross-compiled 32bit tests on TravisCI (dgraph-io/badger#1392)\n  - Avoid panic on multiple closer.Signal calls (dgraph-io/badger#1401)\n  - Add a contribution guide (dgraph-io/badger#1379)\n  - Add assert to check integer overflow for table size (dgraph-io/badger#1402)\n  - Return error if the vlog writes exceeds more that 4GB. (dgraph-io/badger#1400)\n  - Revert \"add assert to check integer overflow for table size (dgraph-io/badger#1402)\" (dgraph-io/badger#1406)\n  - Revert \"fix: Fix race condition in block.incRef (dgraph-io/badger#1337)\" (dgraph-io/badger#1407)\n  - Revert \"Buffer pool for decompression (dgraph-io/badger#1308)\" (dgraph-io/badger#1408)\n  - Revert \"Compress/Encrypt Blocks in the background (dgraph-io/badger#1227)\" (dgraph-io/badger#1409)\n  - Add missing changelog for v2.0.3 (dgraph-io/badger#1410)\n  - Changelog for v20.07.0 (dgraph-io/badger#1411)\n\n### Fixed\n\n- Alpha: Enable bloom filter caching. ([#5554][])\n- K shortest paths queries fix. ([#5596][])\n- Add check on rebalance interval. ([#5595][])\n- Change error message in case of successful license application. ([#5593][])\n- Remove noisy logs in tablet move. ([#5592][])\n- Avoid assigning duplicate RAFT IDs to new nodes. Fixes [#5436][]. ([#5603][])\n- Update badger: Set KeepL0InMemory to false (badger default), and Set DetectConflicts to false. ([#5615][])\n- Use /tmp dir to store temporary index. Fixes [#4600][]. ([#5730][])\n- Split posting lists recursively. ([#4867][])\n- Set version when rollup is called with no splits. ([#4945][])\n- Return error instead of panic (readPostingList). Fixes [#5749][]. ([#5908][])\n- ServeTask: Return error if server is not ready. ([#6022][])\n- Enterprise features\n  - Backup: Change groupId from int to uint32. ([#5613][])\n  - Backup: During backup, collapse split posting lists into a single list. ([#4682][])\n  - Backup: Use a sync.Pool to allocate KVs during backup. ([#5579][])\n\n[#5730]: https://github.com/hypermodeinc/dgraph/issues/5730\n[#4600]: https://github.com/hypermodeinc/dgraph/issues/4600\n[#4682]: https://github.com/hypermodeinc/dgraph/issues/4682\n[#4867]: https://github.com/hypermodeinc/dgraph/issues/4867\n[#5579]: https://github.com/hypermodeinc/dgraph/issues/5579\n[#4945]: https://github.com/hypermodeinc/dgraph/issues/4945\n[#5908]: https://github.com/hypermodeinc/dgraph/issues/5908\n[#5749]: https://github.com/hypermodeinc/dgraph/issues/5749\n[#6022]: https://github.com/hypermodeinc/dgraph/issues/6022\n[#5554]: https://github.com/hypermodeinc/dgraph/issues/5554\n[#5596]: https://github.com/hypermodeinc/dgraph/issues/5596\n[#5595]: https://github.com/hypermodeinc/dgraph/issues/5595\n[#5593]: https://github.com/hypermodeinc/dgraph/issues/5593\n[#5592]: https://github.com/hypermodeinc/dgraph/issues/5592\n[#5436]: https://github.com/hypermodeinc/dgraph/issues/5436\n[#5603]: https://github.com/hypermodeinc/dgraph/issues/5603\n[#5615]: https://github.com/hypermodeinc/dgraph/issues/5615\n[#5613]: https://github.com/hypermodeinc/dgraph/issues/5613\n[#5940]: https://github.com/hypermodeinc/dgraph/issues/5940\n[#5990]: https://github.com/hypermodeinc/dgraph/issues/5613\n\n## [20.03.3] - 2020-06-02\n[20.03.3]: https://github.com/hypermodeinc/dgraph/compare/v20.03.1...v20.03.3\n\n### Changed\n\n- Sentry Improvements: Segregate dev and prod events into their own Sentry projects. Remove Panic back-traces, Set the type of exception to the panic message. ([#5305][])\n- /health endpoint now shows EE Features available and GraphQL changes. ([#5304][])\n- Return error response if encoded response is > 4GB in size. Replace idMap with idSlice in encoder. ([#5359][])\n- Initialize sentry at the beginning of alpha.Run(). ([#5429][])\n\n### Added\n- Adds ludicrous mode to live loader. ([#5419][])\n- GraphQL: adds transactions to graphql mutations ([#5485][])\n\n### Fixed\n\n- Export: Ignore deleted predicates from schema. Fixes [#5053][]. ([#5326][])\n- GraphQL: ensure upserts don't have accidental edge removal. Fixes [#5355][]. ([#5356][])\n- Fix segmentation fault in query.go. ([#5377][])\n- Fix empty string checks. ([#5390][])\n- Update group checksums when combining multiple deltas. Fixes [#5368][]. ([#5394][])\n- Change the default ratio of traces from 1 to 0.01. ([#5405][])\n- Fix protobuf headers check. ([#5381][])\n- Stream the full set of predicates and types during a snapshot. ([#5444][])\n- Support passing GraphQL schema to bulk loader. Fixes [#5235][]. ([#5521][])\n- Export GraphQL schema to separate file. Fixes [#5235][]. ([#5528][])\n- Fix memory leak in live loader. ([#5473][])\n- Replace strings.Trim with strings.TrimFunc in ParseRDF. ([#5494][])\n- Return nil instead of emptyTablet in groupi.Tablet(). ([#5469][])\n- Use pre-allocated protobufs during backups. ([#5404][])\n- During shutdown, generate snapshot before closing raft node. ([#5476][])\n- Get lists of predicates and types before sending the snapshot. ([#5488][])\n- Fix panic for sending on a closed channel. ([#5479][])\n- Fix inconsistent bulk loader failures. Fixes [#5361][]. ([#5537][])\n- GraphQL: fix password rewriting. ([#5483][])\n- GraphQL: Fix non-unique schema issue. ([#5481][])\n- Enterprise features\n  - Print error when applying enterprise license fails. ([#5342][])\n  - Apply the option enterprise_license only after the node's Raft is initialized and it is the leader. Don't apply the     trial license if a license already exists. Disallow the enterprise_license option for OSS build and bail out. Apply the option even if there is a license from a previous life of the Zero. ([#5384][])\n\n### Security\n\n- Use SensitiveByteSlice type for hmac secret. ([#5450][])\n\n\n[#5444]: https://github.com/hypermodeinc/dgraph/issues/5444\n[#5305]: https://github.com/hypermodeinc/dgraph/issues/5305\n[#5304]: https://github.com/hypermodeinc/dgraph/issues/5304\n[#5359]: https://github.com/hypermodeinc/dgraph/issues/5359\n[#5429]: https://github.com/hypermodeinc/dgraph/issues/5429\n[#5342]: https://github.com/hypermodeinc/dgraph/issues/5342\n[#5326]: https://github.com/hypermodeinc/dgraph/issues/5326\n[#5356]: https://github.com/hypermodeinc/dgraph/issues/5356\n[#5377]: https://github.com/hypermodeinc/dgraph/issues/5377\n[#5384]: https://github.com/hypermodeinc/dgraph/issues/5384\n[#5390]: https://github.com/hypermodeinc/dgraph/issues/5390\n[#5394]: https://github.com/hypermodeinc/dgraph/issues/5394\n[#5405]: https://github.com/hypermodeinc/dgraph/issues/5405\n[#5053]: https://github.com/hypermodeinc/dgraph/issues/5053\n[#5355]: https://github.com/hypermodeinc/dgraph/issues/5355\n[#5368]: https://github.com/hypermodeinc/dgraph/issues/5368\n[#5450]: https://github.com/hypermodeinc/dgraph/issues/5450\n[#5381]: https://github.com/hypermodeinc/dgraph/issues/5381\n[#5528]: https://github.com/hypermodeinc/dgraph/issues/5528\n[#5473]: https://github.com/hypermodeinc/dgraph/issues/5473\n[#5494]: https://github.com/hypermodeinc/dgraph/issues/5494\n[#5469]: https://github.com/hypermodeinc/dgraph/issues/5469\n[#5404]: https://github.com/hypermodeinc/dgraph/issues/5404\n[#5476]: https://github.com/hypermodeinc/dgraph/issues/5476\n[#5488]: https://github.com/hypermodeinc/dgraph/issues/5488\n[#5483]: https://github.com/hypermodeinc/dgraph/issues/5483\n[#5481]: https://github.com/hypermodeinc/dgraph/issues/5481\n[#5481]: https://github.com/hypermodeinc/dgraph/issues/5481\n[#5235]: https://github.com/hypermodeinc/dgraph/issues/5235\n[#5419]: https://github.com/hypermodeinc/dgraph/issues/5419\n[#5485]: https://github.com/hypermodeinc/dgraph/issues/5485\n[#5479]: https://github.com/hypermodeinc/dgraph/issues/5479\n[#5361]: https://github.com/hypermodeinc/dgraph/issues/5361\n[#5537]: https://github.com/hypermodeinc/dgraph/issues/5537\n\n## [1.2.5] - 2020-06-02\n[1.2.5]: https://github.com/hypermodeinc/dgraph/compare/v1.2.3...v1.2.5\n\n### Changed\n\n- Return error response if encoded response is > 4GB in size. Replace idMap with idSlice in encoder. ([#5359][])\n- Change the default ratio of traces from 1 to 0.01. ([#5405][])\n\n### Fixed\n\n- Export: Ignore deleted predicates from schema. Fixes [#5053][]. ([#5327][])\n- Fix segmentation fault in query.go. ([#5377][])\n- Update group checksums when combining multiple deltas. Fixes [#5368][]. ([#5394][])\n- Fix empty string checks. ([#5396][])\n- Fix protobuf headers check. ([#5381][])\n- Stream the full set of predicates and types during a snapshot. ([#5444][])\n- Use pre-allocated protobufs during backups. ([#5508][])\n- Replace strings.Trim with strings.TrimFunc in ParseRDF. ([#5494][])\n- Return nil instead of emptyTablet in groupi.Tablet(). ([#5469][])\n- During shutdown, generate snapshot before closing raft node. ([#5476][])\n- Get lists of predicates and types before sending the snapshot. ([#5488][])\n- Move runVlogGC to x and use it in zero as well. ([#5468][])\n- Fix inconsistent bulk loader failures. Fixes [#5361][]. ([#5537][])\n\n### Security\n\n- Use SensitiveByteSlice type for hmac secret. ([#5451][])\n\n[#5444]: https://github.com/hypermodeinc/dgraph/issues/5444\n[#5359]: https://github.com/hypermodeinc/dgraph/issues/5359\n[#5405]: https://github.com/hypermodeinc/dgraph/issues/5405\n[#5327]: https://github.com/hypermodeinc/dgraph/issues/5327\n[#5377]: https://github.com/hypermodeinc/dgraph/issues/5377\n[#5394]: https://github.com/hypermodeinc/dgraph/issues/5394\n[#5396]: https://github.com/hypermodeinc/dgraph/issues/5396\n[#5053]: https://github.com/hypermodeinc/dgraph/issues/5053\n[#5368]: https://github.com/hypermodeinc/dgraph/issues/5368\n[#5451]: https://github.com/hypermodeinc/dgraph/issues/5451\n[#5381]: https://github.com/hypermodeinc/dgraph/issues/5381\n[#5327]: https://github.com/hypermodeinc/dgraph/issues/5327\n[#5377]: https://github.com/hypermodeinc/dgraph/issues/5377\n[#5508]: https://github.com/hypermodeinc/dgraph/issues/5508\n[#5494]: https://github.com/hypermodeinc/dgraph/issues/5494\n[#5469]: https://github.com/hypermodeinc/dgraph/issues/5469\n[#5476]: https://github.com/hypermodeinc/dgraph/issues/5476\n[#5488]: https://github.com/hypermodeinc/dgraph/issues/5488\n[#5468]: https://github.com/hypermodeinc/dgraph/issues/5468\n[#5361]: https://github.com/hypermodeinc/dgraph/issues/5361\n[#5537]: https://github.com/hypermodeinc/dgraph/issues/5537\n\n## [20.03.2] - 2020-05-15\nThis release was removed\n\n## [1.2.4] - 2020-05-15\nThis release was removed\n\n## [20.03.1] - 2020-04-24\n[20.03.1]: https://github.com/hypermodeinc/dgraph/compare/v20.03.0...v20.03.1\n\n### Changed\n\n- Support comma separated list of zero addresses in alpha. ([#5258][])\n- Optimization: Optimize snapshot creation ([#4901][])\n- Optimization: Remove isChild from fastJsonNode. ([#5184][])\n- Optimization: Memory improvements in fastJsonNode. ([#5088][])\n- Update badger to commit cddf7c03451c. ([#5272][])\n  - Compression/encryption runs in the background (which means faster writes)\n  - Separate cache for bloom filters which limits the amount of memory used by bloom filters\n- Avoid crashing live loader in case the network is interrupted. ([#5268][])\n- Enterprise features\n  - Backup/restore: Force users to explicitly tell restore command to run without zero. ([#5206][])\n  - Alpha: Expose compression_level option. ([#5280][])\n\n### Fixed\n\n- Implement json.Marshal just for strings. ([#4979][])\n- Change error message in case of successful license application. Fixes [#4965][]. ([#5230][])\n- Add OPTIONS support for /ui/keywords. Fixes [#4946][]. ([#4992][])\n- Check uid list is empty when filling shortest path vars. ([#5152][])\n- Return error for invalid UID 0x0. Fixes [#5238][]. ([#5252][])\n- Skipping floats that cannot be marshalled (+Inf, -Inf, NaN). ([#5199][], [#5163][])\n- Fix panic in Task FrameWork. Fixes [#5034][]. ([#5081][])\n- graphql: @dgraph(pred: \"...\") with @search. ([#5019][])\n- graphql: ensure @id uniqueness within a mutation. ([#4959][])\n- Set correct posting list type while creating it in live loader. ([#5012][])\n- Add support for tinyint in migrate tool. Fixes [#4674][]. ([#4842][])\n- Fix bug, aggregate value var works with blank node in upsert. Fixes [#4712][]. ([#4767][])\n- Always set BlockSize in encoder. Fixes [#5102][]. ([#5255][])\n- Optimize uid allocation in live loader. ([#5132][])\n- Shutdown executor goroutines. ([#5150][])\n- Update RAFT checkpoint when doing a clean shutdown. ([#5097][])\n- Enterprise features\n  - Backup schema keys in incremental backups. Before, the schema was only stored in the full backup. ([#5158][])\n\n### Added\n\n- Return list of ongoing tasks in /health endpoint. ([#4961][])\n- Propose snapshot once indexing is complete. ([#5005][])\n- Add query/mutation logging in glog V=3. ([#5024][])\n- Include the total number of touched nodes in the query metrics. ([#5073][])\n- Flag to turn on/off sending Sentry events, default is on. ([#5169][])\n- Concurrent Mutations. ([#4892][])\n- Enterprise features\n  - Support bulk loader use-case to import unencrypted export and encrypt. ([#5213][])\n  - Create encrypted restore directory from encrypted backups. ([#5144][])\n  - Add option \"--encryption_key_file\"/\"-k\" to debug tool for encryption support. ([#5146][])\n  - Support for encrypted backups/restore. **Note**: Older backups without encryption will be incompatible with this Dgraph version. Solution is to force a full backup before creating further incremental backups. ([#5103][])\n  - Add encryption support for export and import (via bulk, live loaders). ([#5155][])\n  - Add Badger expvar metrics to Prometheus metrics. Fixes [#4772][]. ([#5094][])\n  - Add option to apply enterprise license at zero's startup. ([#5170][])\n\n[#4979]: https://github.com/hypermodeinc/dgraph/issues/4979\n[#5230]: https://github.com/hypermodeinc/dgraph/issues/5230\n[#4965]: https://github.com/hypermodeinc/dgraph/issues/4965\n[#4992]: https://github.com/hypermodeinc/dgraph/issues/4992\n[#4946]: https://github.com/hypermodeinc/dgraph/issues/4946\n[#4961]: https://github.com/hypermodeinc/dgraph/issues/4961\n[#5005]: https://github.com/hypermodeinc/dgraph/issues/5005\n[#5024]: https://github.com/hypermodeinc/dgraph/issues/5024\n[#5073]: https://github.com/hypermodeinc/dgraph/issues/5073\n[#5280]: https://github.com/hypermodeinc/dgraph/issues/5280\n[#5097]: https://github.com/hypermodeinc/dgraph/issues/5097\n[#5150]: https://github.com/hypermodeinc/dgraph/issues/5150\n[#5132]: https://github.com/hypermodeinc/dgraph/issues/5132\n[#4959]: https://github.com/hypermodeinc/dgraph/issues/4959\n[#5019]: https://github.com/hypermodeinc/dgraph/issues/5019\n[#5081]: https://github.com/hypermodeinc/dgraph/issues/5081\n[#5034]: https://github.com/hypermodeinc/dgraph/issues/5034\n[#5169]: https://github.com/hypermodeinc/dgraph/issues/5169\n[#5170]: https://github.com/hypermodeinc/dgraph/issues/5170\n[#4892]: https://github.com/hypermodeinc/dgraph/issues/4892\n[#5146]: https://github.com/hypermodeinc/dgraph/issues/5146\n[#5206]: https://github.com/hypermodeinc/dgraph/issues/5206\n[#5152]: https://github.com/hypermodeinc/dgraph/issues/5152\n[#5252]: https://github.com/hypermodeinc/dgraph/issues/5252\n[#5199]: https://github.com/hypermodeinc/dgraph/issues/5199\n[#5158]: https://github.com/hypermodeinc/dgraph/issues/5158\n[#5213]: https://github.com/hypermodeinc/dgraph/issues/5213\n[#5144]: https://github.com/hypermodeinc/dgraph/issues/5144\n[#5146]: https://github.com/hypermodeinc/dgraph/issues/5146\n[#5103]: https://github.com/hypermodeinc/dgraph/issues/5103\n[#5155]: https://github.com/hypermodeinc/dgraph/issues/5155\n[#5238]: https://github.com/hypermodeinc/dgraph/issues/5238\n[#5272]: https://github.com/hypermodeinc/dgraph/issues/5272\n\n## [1.2.3] - 2020-04-24\n[1.2.3]: https://github.com/hypermodeinc/dgraph/compare/v1.2.2...v1.2.3\n\n### Changed\n\n- Support comma separated list of zero addresses in alpha. ([#5258][])\n- Optimization: Optimize snapshot creation. ([#4901][])\n- Optimization: Remove isChild from fastJsonNode. ([#5184][])\n- Optimization: Memory improvements in fastJsonNode. ([#5088][])\n- Update Badger to commit cddf7c03451c33. ([#5273][])\n  - Compression/encryption runs in the background (which means faster writes)\n  - Separate cache for bloom filters which limits the amount of memory used by bloom filters\n- Avoid crashing live loader in case the network is interrupted. ([#5268][])\n- Enterprise features\n  - Backup/restore: Force users to explicitly tell restore command to run without zero. ([#5206][])\n\n### Fixed\n\n- Check uid list is empty when filling shortest path vars. ([#5152][])\n- Return error for invalid UID 0x0. Fixes [#5238][]. ([#5252][])\n- Skipping floats that cannot be marshalled (+Inf, -Inf, NaN). ([#5199][], [#5163][])\n- Set correct posting list type while creating it in live loader. ([#5012][])\n- Add support for tinyint in migrate tool. Fixes [#4674][]. ([#4842][])\n- Fix bug, aggregate value var works with blank node in upsert. Fixes [#4712][]. ([#4767][])\n- Always set BlockSize in encoder. Fixes [#5102][]. ([#5255][])\n- Enterprise features\n  - Backup schema keys in incremental backups. Before, the schema was only stored in the full backup. ([#5158][])\n\n### Added\n\n- Add Badger expvar metrics to Prometheus metrics. Fixes [#4772][]. ([#5094][])\n- Enterprise features\n    - Support bulk loader use-case to import unencrypted export and encrypt. ([#5213][])\n  - Create encrypted restore directory from encrypted backups. ([#5144][])\n  - Add option \"--encryption_key_file\"/\"-k\" to debug tool for encryption support. ([#5146][])\n  - Support for encrypted backups/restore. **Note**: Older backups without encryption will be incompatible with this Dgraph version. Solution is to force a full backup before creating further incremental backups. ([#5103][])\n  - Add encryption support for export and import (via bulk, live loaders). ([#5155][])\n\n[#5146]: https://github.com/hypermodeinc/dgraph/issues/5146\n[#5206]: https://github.com/hypermodeinc/dgraph/issues/5206\n[#5152]: https://github.com/hypermodeinc/dgraph/issues/5152\n[#5252]: https://github.com/hypermodeinc/dgraph/issues/5252\n[#5199]: https://github.com/hypermodeinc/dgraph/issues/5199\n[#5163]: https://github.com/hypermodeinc/dgraph/issues/5163\n[#5158]: https://github.com/hypermodeinc/dgraph/issues/5158\n[#5213]: https://github.com/hypermodeinc/dgraph/issues/5213\n[#5144]: https://github.com/hypermodeinc/dgraph/issues/5144\n[#5146]: https://github.com/hypermodeinc/dgraph/issues/5146\n[#5103]: https://github.com/hypermodeinc/dgraph/issues/5103\n[#5155]: https://github.com/hypermodeinc/dgraph/issues/5155\n[#5238]: https://github.com/hypermodeinc/dgraph/issues/5238\n[#5012]: https://github.com/hypermodeinc/dgraph/issues/5012\n[#4674]: https://github.com/hypermodeinc/dgraph/issues/4674\n[#4842]: https://github.com/hypermodeinc/dgraph/issues/4842\n[#5116]: https://github.com/hypermodeinc/dgraph/issues/5116\n[#5258]: https://github.com/hypermodeinc/dgraph/issues/5258\n[#4901]: https://github.com/hypermodeinc/dgraph/issues/4901\n[#5184]: https://github.com/hypermodeinc/dgraph/issues/5184\n[#5088]: https://github.com/hypermodeinc/dgraph/issues/5088\n[#5273]: https://github.com/hypermodeinc/dgraph/issues/5273\n[#5216]: https://github.com/hypermodeinc/dgraph/issues/5216\n[#5268]: https://github.com/hypermodeinc/dgraph/issues/5268\n[#5102]: https://github.com/hypermodeinc/dgraph/issues/5102\n[#5255]: https://github.com/hypermodeinc/dgraph/issues/5255\n[#4772]: https://github.com/hypermodeinc/dgraph/issues/4772\n[#5094]: https://github.com/hypermodeinc/dgraph/issues/5094\n\n## [20.03.0] - 2020-03-30\n[20.03.0]: https://github.com/hypermodeinc/dgraph/compare/v1.2.2...v20.03.0\n** Note: This release requires you to export and re-import data prior to upgrading or rolling back. The underlying data format has been changed. **\n\n### Changed\n\n- Report GraphQL stats from alpha. ([#4607][])\n- During backup, collapse split posting lists into a single list. ([#4682][])\n- Optimize computing reverse reindexing. ([#4755][])\n- Add partition key based iterator to the bulk loader. ([#4841][])\n- Invert s2 loop instead of rebuilding. ([#4782][])\n- Update Badger Version. ([#4935][])\n- Incremental Rollup and Tablet Size Calculation. ([#4972][])\n- Track internal operations and cancel when needed. ([#4916][])\n- Set version when rollup is called with no splits. ([#4945][])\n- Use a different stream writer id for split keys. ([#4875][])\n- Split posting lists recursively. ([#4867][])\n- Add support for tinyint in migrate tool. Fixes [#4674][]. ([#4842][])\n- Enterprise features\n  - **Breaking changes**\n    - [BREAKING] Underlying schema for ACL has changed. Use the upgrade tool to migrate to the new data format. ([#4725][])\n\n### Added\n\n- Add GraphQL API for Dgraph accessible via the `/graphql` and `/admin` HTTP endpoints on Dgraph Alpha. ([#933][])\n- Add support for sorting on multiple facets. Fixes [#3638][]. ([#4579][])\n- Expose Badger Compression Level option in Bulk Loader. ([#4669][])\n- GraphQL Admin API: Support Backup operation. ([#4706][])\n- GraphQL Admin API: Support export, draining, shutdown and setting lrumb operations. ([#4739][])\n- GraphQL Admin API: duplicate `/health` in GraphQL `/admin` ([#4768][])\n- GraphQL Admin API: Add `/admin/schema` endpoint ([#4777][])\n- Perform indexing in background. ([#4819][])\n- Basic Sentry Integration - Capture manual panics with Sentry exception and runtime panics with a wrapper on panic. ([#4756][])\n- Ludicrous Mode. ([#4872][])\n- Enterprise features\n  - ACL: Allow users to query data for their groups, username, and permissions. ([#4774][])\n  - ACL: Support ACL operations using the admin GraphQL API. ([#4760][])\n  - ACL: Add tool to upgrade ACLs. ([#5016][])\n\n### Fixed\n\n- Avoid running GC frequently. Only run for every 2GB of increase. Small optimizations in Bulk.reduce.\n- Check response status when posting telemetry data. ([#4726][])\n- Add support for $ in quoted string. Fixes [#4695][]. ([#4702][])\n- Do not include empty nodes in the export output. Fixes [#3610][]. ([#4773][])\n- Fix Nquad value conversion in live loader. Fixes [#4468][]. ([#4793][])\n- Use `/tmp` dir to store temporary index. Fixes [#4600][]. ([#4766][])\n- Properly initialize posting package in debug tool. ([#4893][])\n- Fix bug, aggregate value var works with blank node in upsert. Fixes [#4712][]. ([#4767][])\n- Fix count with facets filter. Fixes [#4659][]. ([#4751][])\n- Change split keys to have a different prefix. Fixes [#4905][]. ([#4908][])\n- Various optimizations for facets filter queries. ([#4923][])\n- Throw errors returned by retrieveValuesAndFacets. Fixes [#4958][]. ([#4970][])\n- Add \"runInBackground\" option to Alter to run indexing in background. When set to `true`, then the Alter call returns immediately. When set to `false`, the call blocks until indexing is complete. This is set to `false` by default. ([#4981][])\n- Set correct posting list type while creating it in the live loader. Fixes [#4889][]. ([#5012][])\n- **Breaking changes**\n  - [BREAKING] Language sorting on Indexed data. Fixes [#4005][]. ([#4316][])\n\n[#5016]: https://github.com/hypermodeinc/dgraph/issues/5016\n[#5012]: https://github.com/hypermodeinc/dgraph/issues/5012\n[#4889]: https://github.com/hypermodeinc/dgraph/issues/4889\n[#4958]: https://github.com/hypermodeinc/dgraph/issues/4958\n[#4905]: https://github.com/hypermodeinc/dgraph/issues/4905\n[#4659]: https://github.com/hypermodeinc/dgraph/issues/4659\n[#4712]: https://github.com/hypermodeinc/dgraph/issues/4712\n[#4893]: https://github.com/hypermodeinc/dgraph/issues/4893\n[#4767]: https://github.com/hypermodeinc/dgraph/issues/4767\n[#4751]: https://github.com/hypermodeinc/dgraph/issues/4751\n[#4908]: https://github.com/hypermodeinc/dgraph/issues/4908\n[#4923]: https://github.com/hypermodeinc/dgraph/issues/4923\n[#4970]: https://github.com/hypermodeinc/dgraph/issues/4970\n[#4981]: https://github.com/hypermodeinc/dgraph/issues/4981\n[#4841]: https://github.com/hypermodeinc/dgraph/issues/4841\n[#4782]: https://github.com/hypermodeinc/dgraph/issues/4782\n[#4935]: https://github.com/hypermodeinc/dgraph/issues/4935\n[#4972]: https://github.com/hypermodeinc/dgraph/issues/4972\n[#4916]: https://github.com/hypermodeinc/dgraph/issues/4916\n[#4945]: https://github.com/hypermodeinc/dgraph/issues/4945\n[#4875]: https://github.com/hypermodeinc/dgraph/issues/4875\n[#4867]: https://github.com/hypermodeinc/dgraph/issues/4867\n[#4872]: https://github.com/hypermodeinc/dgraph/issues/4872\n[#4756]: https://github.com/hypermodeinc/dgraph/issues/4756\n[#4819]: https://github.com/hypermodeinc/dgraph/issues/4819\n[#4755]: https://github.com/hypermodeinc/dgraph/issues/4755\n[#4600]: https://github.com/hypermodeinc/dgraph/issues/4600\n[#4766]: https://github.com/hypermodeinc/dgraph/issues/4766\n[#4468]: https://github.com/hypermodeinc/dgraph/issues/4468\n[#4793]: https://github.com/hypermodeinc/dgraph/issues/4793\n[#4777]: https://github.com/hypermodeinc/dgraph/issues/4777\n[#4768]: https://github.com/hypermodeinc/dgraph/issues/4768\n[#4760]: https://github.com/hypermodeinc/dgraph/issues/4760\n[#4739]: https://github.com/hypermodeinc/dgraph/issues/4739\n[#4706]: https://github.com/hypermodeinc/dgraph/issues/4706\n[#4607]: https://github.com/hypermodeinc/dgraph/issues/4607\n[#933]: https://github.com/hypermodeinc/dgraph/issues/933\n[#3638]: https://github.com/hypermodeinc/dgraph/issues/3638\n[#4579]: https://github.com/hypermodeinc/dgraph/issues/4579\n[#4682]: https://github.com/hypermodeinc/dgraph/issues/4682\n[#4725]: https://github.com/hypermodeinc/dgraph/issues/4725\n[#4669]: https://github.com/hypermodeinc/dgraph/issues/4669\n[#4774]: https://github.com/hypermodeinc/dgraph/issues/4774\n[#4726]: https://github.com/hypermodeinc/dgraph/issues/4726\n[#4695]: https://github.com/hypermodeinc/dgraph/issues/4695\n[#4702]: https://github.com/hypermodeinc/dgraph/issues/4702\n[#3610]: https://github.com/hypermodeinc/dgraph/issues/3610\n[#4773]: https://github.com/hypermodeinc/dgraph/issues/4773\n[#4005]: https://github.com/hypermodeinc/dgraph/issues/4005\n[#4316]: https://github.com/hypermodeinc/dgraph/issues/4316\n\n## [1.2.2] - 2020-03-19\n[1.2.2]: https://github.com/hypermodeinc/dgraph/compare/v1.2.1...v1.2.2\n\n### Changed\n\n- Wrap errors thrown in posting/list.go for easier debugging. ([#4880][])\n- Print keys using hex encoding in error messages in list.go. ([#4891][])\n\n### Fixed\n\n- Do not include empty nodes in the export output. ([#4896][])\n- Fix error when lexing language list. ([#4784][])\n- Properly initialize posting package in debug tool. ([#4893][])\n- Handle special characters in schema and type queries. Fixes [#4933][]. ([#4937][])\n- Overwrite values for uid predicates.  Fixes [#4879][]. ([#4883][])\n- Disable @* language queries when the predicate does not support langs. ([#4881][])\n- Fix bug in exporting types with reverse predicates. Fixes [#4856][]. ([#4857][])\n- Do not skip over split keys. (Trying to skip over the split keys sometimes skips over keys belonging to a different split   key. This is a fix just for this release as the actual fix requires changes to the data format.) ([#4951][])\n- Fix point-in-time Prometheus metrics. Fixes [#4532][]. ([#4948][])\n- Split lists in the bulk loader. ([#4967][])\n- Allow remote MySQL server with dgraph migrate tool. Fixes [#4707][]. ([#4860][])\n- Enterprise features\n  - ACL: Allow uid access. ([#4922][])\n  - Backups: Assign maxLeaseId during restore. Fixes [#4816][]. ([#4877][])\n  - Backups: Verify host when default and custom credentials are used. Fixes [#4855][]. ([#4858][])\n  - Backups: Split lists when restoring from backup. ([#4912][])\n\n\n[#4967]: https://github.com/hypermodeinc/dgraph/issues/4967\n[#4951]: https://github.com/hypermodeinc/dgraph/issues/4951\n[#4532]: https://github.com/hypermodeinc/dgraph/issues/4532\n[#4948]: https://github.com/hypermodeinc/dgraph/issues/4948\n[#4893]: https://github.com/hypermodeinc/dgraph/issues/4893\n[#4784]: https://github.com/hypermodeinc/dgraph/issues/4784\n[#4896]: https://github.com/hypermodeinc/dgraph/issues/4896\n[#4856]: https://github.com/hypermodeinc/dgraph/issues/4856\n[#4857]: https://github.com/hypermodeinc/dgraph/issues/4857\n[#4881]: https://github.com/hypermodeinc/dgraph/issues/4881\n[#4912]: https://github.com/hypermodeinc/dgraph/issues/4912\n[#4855]: https://github.com/hypermodeinc/dgraph/issues/4855\n[#4858]: https://github.com/hypermodeinc/dgraph/issues/4858\n[#4879]: https://github.com/hypermodeinc/dgraph/issues/4879\n[#4883]: https://github.com/hypermodeinc/dgraph/issues/4883\n[#4933]: https://github.com/hypermodeinc/dgraph/issues/4933\n[#4937]: https://github.com/hypermodeinc/dgraph/issues/4937\n[#4891]: https://github.com/hypermodeinc/dgraph/issues/4891\n[#4880]: https://github.com/hypermodeinc/dgraph/issues/4880\n[#4816]: https://github.com/hypermodeinc/dgraph/issues/4816\n[#4877]: https://github.com/hypermodeinc/dgraph/issues/4877\n[#4922]: https://github.com/hypermodeinc/dgraph/issues/4922\n[#4707]: https://github.com/hypermodeinc/dgraph/issues/4707\n[#4860]: https://github.com/hypermodeinc/dgraph/issues/4860\n\n\n## [1.2.1] - 2020-02-06\n[1.2.1]: https://github.com/hypermodeinc/dgraph/compare/v1.2.0...v1.2.1\n\n### Fixed\n\n- Fix bug related to posting list split, and re-enable posting list splits. Fixes [#4733][]. ([#4742][])\n\n[#4733]: https://github.com/hypermodeinc/dgraph/issues/4733\n[#4742]: https://github.com/hypermodeinc/dgraph/issues/4742\n\n## [1.2.0] - 2020-01-27\n[1.2.0]: https://github.com/hypermodeinc/dgraph/compare/v1.1.1...v1.2.0\n\n### Changed\n\n- Allow overwriting values of predicates of type uid. Fixes [#4136][]. ([#4411][])\n- Algorithms to handle UidPack. ([#4321][])\n- Improved latency in live loader using conflict resolution at client level. ([#4362][])\n- Set ZSTD CompressionLevel to 1. ([#4572][])\n- Splits are now disabled. ([#4672][])\n- Disk based re-indexing: while re-indexing a predicate, the temp data is now written on disk\n  instead of keeping it in memory. This improves index rebuild for large datasets. ([#4440][])\n- Enterprise features\n  - **Breaking changes**\n    - Change default behavior to block operations with ACLs enabled. ([#4390][])\n  - Remove unauthorized predicates from query instead of rejecting the query entirely. ([#4479][])\n\n### Added\n\n- Add `debuginfo` subcommand to dgraph. ([#4464][])\n- Support filtering on non-indexed predicate. Fixes [#4305][]. ([#4531][])\n- Add support for variables in recurse. Fixes [#3301][]. ([#4385][]).\n- Adds `@noconflict` schema directive to prevent conflict detection. This is an experimental feature. This is not a recommended directive, but exists to help avoid conflicts for predicates which don't have high correctness requirements. Fixes [#4079][]. ([#4454][])\n- Implement the state HTTP endpoint on Alpha. Login is required if ACL is enabled. ([#4435][]).\n- Implement `/health?all` endpoint on Alpha nodes. ([#4535][])\n- Add `/health` endpoint to Zero. ([#4405][])\n- **Breaking changes**\n  - Support for fetching facets from value edge list. The query response format is backwards-incompatible. Fixes [#4081][]. ([#4267][])\n- Enterprise features\n  - Add guardians group with full authorization. ([#4447][])\n\n ### Fixed\n\n- Infer type of schema from JSON and RDF mutations.\tFixes [#3788][]. ([#4328][])\n- Fix retrieval of facets with cascade. Fixes\t[#4310][]. ([#4530][])\n- Do not use type keys during tablet size calculation.\tFixes [#4473][]. ([#4517][])\n- Fix Levenshtein distance calculation with match function.\tFixes [#4494][]. ([#4545][])\n- Add `<xs:integer>` RDF type for int schema type. Fixes [#4460][]. ([#4465][])\n- Allow `@filter` directive with expand queries. Fixes [#3904][]. ([#4404][]).\n- A multi-part posting list should only be accessed via the main key. Accessing the posting list via one of the other keys was causing issues during rollup and adding spurious keys to the database. Now fixed. ([#4574][])\n- Enterprise features\n  - Backup types. Fixes [#4507][]. ([#4514][])\n\n[#4440]: https://github.com/hypermodeinc/dgraph/pull/4440\n[#4574]: https://github.com/hypermodeinc/dgraph/pull/4574\n[#4672]: https://github.com/hypermodeinc/dgraph/pull/4672\n[#4530]: https://github.com/hypermodeinc/dgraph/issues/4530\n[#4310]: https://github.com/hypermodeinc/dgraph/issues/4310\n[#4517]: https://github.com/hypermodeinc/dgraph/issues/4517\n[#4473]: https://github.com/hypermodeinc/dgraph/issues/4473\n[#4545]: https://github.com/hypermodeinc/dgraph/issues/4545\n[#4494]: https://github.com/hypermodeinc/dgraph/issues/4494\n[#4460]: https://github.com/hypermodeinc/dgraph/issues/4460\n[#4465]: https://github.com/hypermodeinc/dgraph/issues/4465\n[#4404]: https://github.com/hypermodeinc/dgraph/issues/4404\n[#3904]: https://github.com/hypermodeinc/dgraph/issues/3904\n[#4514]: https://github.com/hypermodeinc/dgraph/issues/4514\n[#4507]: https://github.com/hypermodeinc/dgraph/issues/4507\n[#4328]: https://github.com/hypermodeinc/dgraph/issues/4328\n[#3788]: https://github.com/hypermodeinc/dgraph/issues/3788\n[#4447]: https://github.com/hypermodeinc/dgraph/issues/4447\n[#4411]: https://github.com/hypermodeinc/dgraph/issues/4411\n[#4321]: https://github.com/hypermodeinc/dgraph/issues/4321\n[#4362]: https://github.com/hypermodeinc/dgraph/issues/4362\n[#4572]: https://github.com/hypermodeinc/dgraph/issues/4572\n[#4390]: https://github.com/hypermodeinc/dgraph/issues/4390\n[#4479]: https://github.com/hypermodeinc/dgraph/issues/4479\n[#4136]: https://github.com/hypermodeinc/dgraph/issues/4136\n[#4411]: https://github.com/hypermodeinc/dgraph/issues/4411\n[#4464]: https://github.com/hypermodeinc/dgraph/issues/4464\n[#4531]: https://github.com/hypermodeinc/dgraph/issues/4531\n[#4305]: https://github.com/hypermodeinc/dgraph/issues/4305\n[#4454]: https://github.com/hypermodeinc/dgraph/issues/4454\n[#4079]: https://github.com/hypermodeinc/dgraph/issues/4079\n[#4405]: https://github.com/hypermodeinc/dgraph/issues/4405\n[#4267]: https://github.com/hypermodeinc/dgraph/issues/4267\n[#4081]: https://github.com/hypermodeinc/dgraph/issues/4081\n[#4447]: https://github.com/hypermodeinc/dgraph/issues/4447\n[#4535]: https://github.com/hypermodeinc/dgraph/issues/4535\n[#4385]: https://github.com/hypermodeinc/dgraph/issues/4385\n[#3301]: https://github.com/hypermodeinc/dgraph/issues/3301\n[#4435]: https://github.com/hypermodeinc/dgraph/issues/4435\n\n## [1.1.1] - 2019-12-16\n[1.1.1]: https://github.com/hypermodeinc/dgraph/compare/v1.1.0...v1.1.1\n\n### Changed\n\n- **Breaking changes for expand() queries**\n  - Remove `expand(_forward_)` and `expand(_reverse_)`. ([#4119][])\n  - Change `expand(_all_)` functionality to only include the predicates in the type. ([#4171][])\n- Add support for Go Modules. ([#4146][])\n- Simplify type definitions: type definitions no longer require the type (string, int, etc.) per field name. ([#4017][])\n- Adding log lines to help troubleshoot snapshot and rollup. ([#3889][])\n- Add `--http` flag to configure pprof endpoint for live loader. ([#3846][])\n- Use snappy compression for internal gRPC communication. ([#3368][])\n- Periodically run GC in all dgraph commands. ([#4032][], [#4075][])\n- Exit early if data files given to bulk loader are empty. ([#4253][])\n- Add support for first and offset directive in has function. ([#3970][])\n- Pad encData to 17 bytes before decoding. ([#4066][])\n- Remove usage of deprecated methods. ([#4076][])\n- Show line and column numbers for errors in HTTP API responses. ([#4012][])\n- Do not store non-pointer values in sync.Pool. ([#4089][])\n- Verify that all the fields in a type exist in the schema. ([#4114][])\n- Update badger to version v2.0.0. ([#4200][])\n- Introduce StreamDone in bulk loader. ([#4297][])\n\nEnterprise features:\n\n- ACL: Disallow schema queries when an user has not logged in. ([#4107][])\n- Block delete if predicate permission is zero. Fixes [#4265][]. ([#4349][])\n\n### Added\n\n- Support `@cascade` directive at subqueries. ([#4006][])\n- Support `@normalize` directive for subqueries. ([#4042][])\n- Support `val()` function inside upsert mutations (both RDF and JSON). ([#3877][], [#3947][])\n- Support GraphQL Variables for facet values in `@facets` filters. ([#4061][])\n- Support filtering by facets on values. ([#4217][])\n- Add ability to query `expand(TypeName)` only on certain types. ([#3920][])\n- Expose numUids metrics per query to estimate query cost. ([#4033][])\n- Upsert queries now return query results in the upsert response. ([#4269][], [#4375][])\n- Add support for multiple mutations blocks in upsert blocks. ([#4210][])\n- Add total time taken to process a query in result under `\"total_ns\"` field. ([#4312][])\n\nEnterprise features:\n\n- Add encryption-at-rest. ([#4351][])\n\n### Removed\n\n- **Breaking change**: Remove `@type` directive from query language. To filter\n  an edge by a type, use `@filter(type(TypeName))` instead of `@type(TypeName)`.\n  ([#4016][])\n\nEnterprise features:\n\n- Remove regexp ACL rules. ([#4360][])\n\n### Fixed\n\n- Avoid changing order if multiple versions of the same edge is found.\n- Consider reverse count index keys for conflict detection in transactions. Fixes [#3893][]. ([#3932][])\n- Clear the unused variable tlsCfg. ([#3937][])\n- Do not require the last type declaration to have a new line. ([#3926][])\n- Verify type definitions do not have duplicate fields. Fixes [#3924][]. ([#3925][])\n- Fix bug in bulk loader when store_xids is true. Fixes [#3922][]. ([#3950][])\n- Call cancel function only if err is not nil. Fixes [#3966][]. ([#3990][])\n- Change the mapper output directory from $TMP/shards to $TMP/map_output. Fixes [#3959][]. ([#3960][])\n- Return error if keywords used as alias in groupby. ([#3725][])\n- Fix bug where language strings are not filtered when using custom tokenizer. Fixes [#3991][]. ([#3992][])\n- Support named queries without query variables. Fixes [#3994][]. ([#4028][])\n- Correctly set up client connection in x package. ([#4036][])\n- Fix data race in regular expression processing. Fixes [#4030][]. ([#4065][])\n- Check for n.Raft() to be nil, Fixes [#4053][]. ([#4084][])\n- Fix file and directory permissions for bulk loader. ([#4088][])\n- Ensure that clients can send OpenCensus spans over to the server. ([#4144][])\n- Change lexer to allow unicode escape sequences. Fixes [#4157][].([#4175][])\n- Handle the count(uid) subgraph correctly. Fixes [#4038][]. ([#4122][])\n- Don't traverse immutable layer while calling iterate if deleteBelowTs > 0. Fixes [#4182][]. ([#4204][])\n- Bulk loader allocates reserved predicates in first reduce shard. Fixes [#3968][]. ([#4202][])\n- Only allow one alias per predicate. ([#4236][])\n- Change member removal logic to remove members only once. ([#4254][])\n- Disallow uid as a predicate name. ([#4219][])\n- Drain apply channel when a snapshot is received. ([#4273][])\n- Added RegExp filter to func name. Fixes [#3268][]. ([#4230][])\n- Acquire read lock instead of exclusive lock for langBaseCache. ([#4279][])\n- Added proper handling of int and float for math op. [#4132][]. ([#4257][])\n- Don't delete group if there is no member in the group. ([#4274][])\n- Sort alphabets of languages for non indexed fields. Fixes [#4005][]. ([#4260][])\n- Copy xid string to reduce memory usage in bulk loader. ([#4287][])\n- Adding more details for mutation error messages with scalar/uid type mismatch. ([#4317][])\n- Limit UIDs per variable in upsert. Fixes [#4021][]. ([#4268][])\n- Return error instead of panic when geo data is corrupted. Fixes [#3740][]. ([#4318][])\n- Use txn writer to write schema postings. ([#4296][])\n- Fix connection log message in dgraph alpha from \"CONNECTED\" to \"CONNECTING\" when establishing a connection to a peer. Fixes [#4298][]. ([#4303][])\n- Fix segmentation fault in backup. ([#4314][])\n- Close store after stoping worker. ([#4356][])\n- Don't pre allocate mutation map. ([#4343][])\n- Cmd: fix config file from env variable issue in subcommands. Fixes [#4311][]. ([#4344][])\n- Fix segmentation fault in Alpha. Fixes [#4288][]. ([#4394][])\n- Fix handling of depth parameter for shortest path query for numpaths=1 case. Fixes [#4169][]. ([#4347][])\n- Do not return dgo.ErrAborted when client calls txn.Discard(). ([#4389][])\n- Fix `has` pagination when predicate is queried with `@lang`. Fixes [#4282][]. ([#4331][])\n- Make uid function work with value variables in upsert blocks. Fixes [#4424][]. ([#4425][])\n\nEnterprise features:\n\n- Fix bug when overriding credentials in backup request. Fixes [#4044][]. ([#4047][])\n- Create restore directory when running \"dgraph restore\". Fixes [#4315][]. ([#4352][])\n- Write group_id files to postings directories during restore. ([#4365][])\n\n[#4119]: https://github.com/hypermodeinc/dgraph/issues/4119\n[#4171]: https://github.com/hypermodeinc/dgraph/issues/4171\n[#4146]: https://github.com/hypermodeinc/dgraph/issues/4146\n[#4017]: https://github.com/hypermodeinc/dgraph/issues/4017\n[#3889]: https://github.com/hypermodeinc/dgraph/issues/3889\n[#3846]: https://github.com/hypermodeinc/dgraph/issues/3846\n[#3368]: https://github.com/hypermodeinc/dgraph/issues/3368\n[#4032]: https://github.com/hypermodeinc/dgraph/issues/4032\n[#4075]: https://github.com/hypermodeinc/dgraph/issues/4075\n[#4253]: https://github.com/hypermodeinc/dgraph/issues/4253\n[#3970]: https://github.com/hypermodeinc/dgraph/issues/3970\n[#4066]: https://github.com/hypermodeinc/dgraph/issues/4066\n[#4076]: https://github.com/hypermodeinc/dgraph/issues/4076\n[#4012]: https://github.com/hypermodeinc/dgraph/issues/4012\n[#4030]: https://github.com/hypermodeinc/dgraph/issues/4030\n[#4065]: https://github.com/hypermodeinc/dgraph/issues/4065\n[#4089]: https://github.com/hypermodeinc/dgraph/issues/4089\n[#4114]: https://github.com/hypermodeinc/dgraph/issues/4114\n[#4107]: https://github.com/hypermodeinc/dgraph/issues/4107\n[#4006]: https://github.com/hypermodeinc/dgraph/issues/4006\n[#4042]: https://github.com/hypermodeinc/dgraph/issues/4042\n[#3877]: https://github.com/hypermodeinc/dgraph/issues/3877\n[#3947]: https://github.com/hypermodeinc/dgraph/issues/3947\n[#4061]: https://github.com/hypermodeinc/dgraph/issues/4061\n[#4217]: https://github.com/hypermodeinc/dgraph/issues/4217\n[#3920]: https://github.com/hypermodeinc/dgraph/issues/3920\n[#4033]: https://github.com/hypermodeinc/dgraph/issues/4033\n[#4016]: https://github.com/hypermodeinc/dgraph/issues/4016\n[#3893]: https://github.com/hypermodeinc/dgraph/issues/3893\n[#3932]: https://github.com/hypermodeinc/dgraph/issues/3932\n[#3937]: https://github.com/hypermodeinc/dgraph/issues/3937\n[#3926]: https://github.com/hypermodeinc/dgraph/issues/3926\n[#3924]: https://github.com/hypermodeinc/dgraph/issues/3924\n[#3925]: https://github.com/hypermodeinc/dgraph/issues/3925\n[#3922]: https://github.com/hypermodeinc/dgraph/issues/3922\n[#3950]: https://github.com/hypermodeinc/dgraph/issues/3950\n[#3966]: https://github.com/hypermodeinc/dgraph/issues/3966\n[#3990]: https://github.com/hypermodeinc/dgraph/issues/3990\n[#3959]: https://github.com/hypermodeinc/dgraph/issues/3959\n[#3960]: https://github.com/hypermodeinc/dgraph/issues/3960\n[#3725]: https://github.com/hypermodeinc/dgraph/issues/3725\n[#3991]: https://github.com/hypermodeinc/dgraph/issues/3991\n[#3992]: https://github.com/hypermodeinc/dgraph/issues/3992\n[#3994]: https://github.com/hypermodeinc/dgraph/issues/3994\n[#4028]: https://github.com/hypermodeinc/dgraph/issues/4028\n[#4036]: https://github.com/hypermodeinc/dgraph/issues/4036\n[#4053]: https://github.com/hypermodeinc/dgraph/issues/4053\n[#4084]: https://github.com/hypermodeinc/dgraph/issues/4084\n[#4088]: https://github.com/hypermodeinc/dgraph/issues/4088\n[#4144]: https://github.com/hypermodeinc/dgraph/issues/4144\n[#4157]: https://github.com/hypermodeinc/dgraph/issues/4157\n[#4175]: https://github.com/hypermodeinc/dgraph/issues/4175\n[#4038]: https://github.com/hypermodeinc/dgraph/issues/4038\n[#4122]: https://github.com/hypermodeinc/dgraph/issues/4122\n[#4182]: https://github.com/hypermodeinc/dgraph/issues/4182\n[#4204]: https://github.com/hypermodeinc/dgraph/issues/4204\n[#3968]: https://github.com/hypermodeinc/dgraph/issues/3968\n[#4202]: https://github.com/hypermodeinc/dgraph/issues/4202\n[#4236]: https://github.com/hypermodeinc/dgraph/issues/4236\n[#4254]: https://github.com/hypermodeinc/dgraph/issues/4254\n[#4219]: https://github.com/hypermodeinc/dgraph/issues/4219\n[#4044]: https://github.com/hypermodeinc/dgraph/issues/4044\n[#4047]: https://github.com/hypermodeinc/dgraph/issues/4047\n[#4273]: https://github.com/hypermodeinc/dgraph/issues/4273\n[#4230]: https://github.com/hypermodeinc/dgraph/issues/4230\n[#4279]: https://github.com/hypermodeinc/dgraph/issues/4279\n[#4257]: https://github.com/hypermodeinc/dgraph/issues/4257\n[#4274]: https://github.com/hypermodeinc/dgraph/issues/4274\n[#4200]: https://github.com/hypermodeinc/dgraph/issues/4200\n[#4260]: https://github.com/hypermodeinc/dgraph/issues/4260\n[#4269]: https://github.com/hypermodeinc/dgraph/issues/4269\n[#4287]: https://github.com/hypermodeinc/dgraph/issues/4287\n[#4303]: https://github.com/hypermodeinc/dgraph/issues/4303\n[#4317]: https://github.com/hypermodeinc/dgraph/issues/4317\n[#4210]: https://github.com/hypermodeinc/dgraph/issues/4210\n[#4312]: https://github.com/hypermodeinc/dgraph/issues/4312\n[#4268]: https://github.com/hypermodeinc/dgraph/issues/4268\n[#4318]: https://github.com/hypermodeinc/dgraph/issues/4318\n[#4297]: https://github.com/hypermodeinc/dgraph/issues/4297\n[#4296]: https://github.com/hypermodeinc/dgraph/issues/4296\n[#4314]: https://github.com/hypermodeinc/dgraph/issues/4314\n[#4356]: https://github.com/hypermodeinc/dgraph/issues/4356\n[#4343]: https://github.com/hypermodeinc/dgraph/issues/4343\n[#4344]: https://github.com/hypermodeinc/dgraph/issues/4344\n[#4351]: https://github.com/hypermodeinc/dgraph/issues/4351\n[#3268]: https://github.com/hypermodeinc/dgraph/issues/3268\n[#4132]: https://github.com/hypermodeinc/dgraph/issues/4132\n[#4005]: https://github.com/hypermodeinc/dgraph/issues/4005\n[#4298]: https://github.com/hypermodeinc/dgraph/issues/4298\n[#4021]: https://github.com/hypermodeinc/dgraph/issues/4021\n[#3740]: https://github.com/hypermodeinc/dgraph/issues/3740\n[#4311]: https://github.com/hypermodeinc/dgraph/issues/4311\n[#4047]: https://github.com/hypermodeinc/dgraph/issues/4047\n[#4375]: https://github.com/hypermodeinc/dgraph/issues/4375\n[#4394]: https://github.com/hypermodeinc/dgraph/issues/4394\n[#4288]: https://github.com/hypermodeinc/dgraph/issues/4288\n[#4360]: https://github.com/hypermodeinc/dgraph/issues/4360\n[#4265]: https://github.com/hypermodeinc/dgraph/issues/4265\n[#4349]: https://github.com/hypermodeinc/dgraph/issues/4349\n[#4169]: https://github.com/hypermodeinc/dgraph/issues/4169\n[#4347]: https://github.com/hypermodeinc/dgraph/issues/4347\n[#4389]: https://github.com/hypermodeinc/dgraph/issues/4389\n[#4352]: https://github.com/hypermodeinc/dgraph/issues/4352\n[#4315]: https://github.com/hypermodeinc/dgraph/issues/4315\n[#4365]: https://github.com/hypermodeinc/dgraph/issues/4365\n[#4282]: https://github.com/hypermodeinc/dgraph/issues/4282\n[#4331]: https://github.com/hypermodeinc/dgraph/issues/4331\n[#4424]: https://github.com/hypermodeinc/dgraph/issues/4424\n[#4425]: https://github.com/hypermodeinc/dgraph/issues/4425\n\n## [1.1.0] - 2019-09-03\n[1.1.0]: https://github.com/hypermodeinc/dgraph/compare/v1.0.17...v1.1.0\n\n### Changed\n\n- **Breaking changes**\n\n  - **uid schema type**: The `uid` schema type now means a one-to-one relation,\n    **not** a one-to-many relation as in Dgraph v1.1. To specify a one-to-many\n    relation in Dgraph v1.0, use the `[uid]` schema type. ([#2895][], [#3173][], [#2921][])\n\n  - **\\_predicate\\_** is removed from the query language.\n\n  - **expand(\\_all\\_)** only works for nodes with attached type information via\n    the type system. The type system is used to determine the predicates to expand\n    out from a node. ([#3262][])\n\n  - **S \\* \\* deletion** only works for nodes with attached type information via\n    the type system. The type system is used to determine the predicates to\n    delete from a node. For `S * *` deletions, only the predicates specified by\n    the type are deleted.\n\n  - **HTTP API**: The HTTP API has been updated to replace the custom HTTP headers\n    with standard headers.\n    - Change `/commit` endpoint to accept a list of preds for conflict detection. ([#3020][])\n    - Remove custom HTTP Headers, cleanup API. ([#3365][])\n      - The startTs path parameter is now a query parameter `startTs` for the\n        `/query`, `/mutate`, and `/commit` endpoints.\n      - Dgraph custom HTTP Headers `X-Dgraph-CommitNow`,\n        `X-Dgraph-MutationType`, and `X-Dgraph-Vars` are now ignored.\n    - Update HTTP API Content-Type headers. ([#3550][]) ([#3532][])\n      - Queries over HTTP must have the Content-Type header `application/graphql+-` or `application/json`.\n      - Queries over HTTP with GraphQL Variables (e.g., `query queryName($a: string) { ... }`) must use the query format via `application/json` to pass query variables.\n      - Mutations over HTTP must have the Content-Type header set to `application/rdf` for RDF format or `application/json` for JSON format.\n      - Commits over HTTP must have the `startTs` query parameter along with the JSON map of conflict keys and predicates.\n\n  - **Datetime index**: Use UTC Hour, Day, Month, Year for datetime\n    comparison. This is a bug fix that may result in different query results for\n    existing queries involving the datetime index. ([#3251][])\n\n  - **Blank node name generation for JSON mutations.** For JSON mutations that\n    do not explicitly set the `\"uid\"` field, the blank name format has changed\n    to contain randomly generated identifiers. This fixes a bug where two JSON\n    objects within a single mutation are assigned the same blank node.\n    ([#3795][])\n\n- Improve hash index. ([#2887][])\n- Use a stream connection for internal connection health checking. ([#2956][])\n- Use defer statements to release locks. ([#2962][])\n- VerifyUid should wait for membership information. ([#2974][])\n- Switching to perfect use case of sync.Map and remove the locks. ([#2976][])\n- Tablet move and group removal. ([#2880][])\n- Delete tablets which don't belong after tablet move. ([#3051][])\n- Alphas inform Zero about tablets in its postings directory when Alpha starts. ([3271f64e0][])\n- Prevent alphas from asking zero to serve tablets during queries. ([#3091][])\n- Put data before extensions in JSON response. ([#3194][])\n- Always parse language tag. ([#3243][])\n- Populate the StartTs for the commit gRPC call so that clients can double check the startTs still matches. ([#3228][])\n- Replace MD5 with SHA-256 in `dgraph cert ls`. ([#3254][])\n- Fix use of deprecated function `grpc.WithTimeout()`. ([#3253][])\n- Introduce multi-part posting lists. ([#3105][])\n- Fix format of the keys to support startUid for multi-part posting lists. ([#3310][])\n- Access groupi.gid atomically. ([#3402][])\n- Move Raft checkpoint key to w directory. ([#3444][])\n- Remove list.SetForDeletion method, remnant of the global LRU cache. ([#3481][])\n- Whitelist by hostname. ([#2953][])\n- Use CIDR format for whitelists instead of the previous range format.\n- Introduce Badger's DropPrefix API into Dgraph to simplify how predicate deletions and drop all work internally. ([#3060][])\n- Replace integer compression in UID Pack with groupvarint algorithm. ([#3527][], [#3650][])\n- Rebuild reverse index before count reverse. ([#3688][])\n- **Breaking change**: Use one atomic variable to generate blank node ids for\n  json objects. This changes the format of automatically generated blank node\n  names in JSON mutations. ([#3795][])\n- Print commit SHA256 when invoking \"make install\". ([#3786][])\n- Print SHA-256 checksum of Dgraph binary in the version section logs. ([#3828][])\n- Change anonynmous telemetry endpoint. ([#3872][])\n- Add support for API required for multiple mutations within a single call. ([#3839][])\n- Make `lru_mb` optional. ([#3898][])\n- Allow glog flags to be set via config file. ([#3062][], [#3077][])\n\n- Logging\n  - Suppress logging before `flag.Parse` from glog. ([#2970][])\n  - Move glog of missing value warning to verbosity level 3. ([#3092][])\n  - Change time threshold for Raft.Ready warning logs. ([#3901][])\n  - Add log prefix to stream used to rebuild indices. ([#3696][])\n  - Add additional logs to show progress of reindexing operation. ([#3746][])\n\n- Error messages\n  - Output the line and column number in schema parsing error messages. ([#2986][])\n  - Improve error of empty block queries. ([#3015][])\n  - Update flag description and error messaging related to `--query_edge_limit` flag. ([#2979][])\n  - Reports line-column numbers for lexer/parser errors. ([#2914][])\n  - Replace fmt.Errorf with errors.Errorf ([#3627][])\n  - Return GraphQL compliant `\"errors\"` field for HTTP requests. ([#3728][])\n\n- Optimizations\n  - Don't read posting lists from disk when mutating indices. ([#3695][], [#3713][])\n  - Avoid preallocating uid slice. It was slowing down unpackBlock.\n  - Reduce memory consumption in bulk loader. ([#3724][])\n  - Reduce memory consumptino by reusing lexer for parsing RDF. ([#3762][])\n  - Use the stream framework to rebuild indices. ([#3686][])\n  - Use Stream Writer for full snapshot transfer. ([#3442][])\n  - Reuse postings and avoid fmt.Sprintf to reduce mem allocations ([#3767][])\n  - Speed up JSON chunker. ([#3825][])\n  - Various optimizations for Geo queries. ([#3805][])\n\n- Update various govendor dependencies\n  - Add OpenCensus deps to vendor using govendor. ([#2989][])\n  - Govendor in latest dgo. ([#3078][])\n  - Vendor in the Jaeger and prometheus exporters from their own repos ([#3322][])\n  - Vendor in Shopify/sarama to use its Kafka clients. ([#3523][])\n  - Update dgo dependency in vendor. ([#3412][])\n  - Update vendored dependencies. ([#3357][])\n  - Bring in latest changes from badger and fix broken API calls. ([#3502][])\n  - Vendor badger with the latest changes. ([#3606][])\n  - Vendor in badger, dgo and regenerate protobufs. ([#3747][])\n  - Vendor latest badger. ([#3784][])\n  - **Breaking change**: Vendor in latest Badger with data-format changes. ([#3906][])\n\nDgraph Debug Tool\n\n- When looking up a key, print if it's a multi-part list and its splits. ([#3311][])\n- Diagnose Raft WAL via debug tool. ([#3319][])\n- Allow truncating Raft logs via debug tool. ([#3345][])\n- Allow modifying Raft snapshot and hardstate in debug tool. ([#3364][])\n\nDgraph Live Loader / Dgraph Bulk Loader\n\n- Add `--format` flag to Dgraph Live Loader and Dgraph Bulk Loader to specify input data format type. ([#2991][])\n- Update live loader flag help text. ([#3278][])\n- Improve reporting of aborts and retries during live load. ([#3313][])\n- Remove xidmap storage on disk from bulk loader.\n- Optimize XidtoUID map used by live and bulk loader. ([#2998][])\n- Export data contains UID literals instead of blank nodes. Using Live Loader or Bulk Loader to load exported data will result in the same UIDs as the original database. ([#3004][], [#3045][]) To preserve the previous behavior, set the `--new_uids` flag in the live or bulk loader. ([18277872f][])\n- Use StreamWriter in bulk loader. ([#3542][], [#3635][], [#3649][])\n- Add timestamps during bulk/live load. ([#3287][])\n- Use initial schema during bulk load. ([#3333][])\n- Adding the verbose flag to suppress excessive logging in live loader. ([#3560][])\n- Fix user meta of schema and type entries in bulk loader. ([#3628][])\n- Check that all data files passed to bulk loader exist. ([#3681][])\n- Handle non-list UIDs predicates in bulk loader. [#3659][]\n- Use sync.Pool for MapEntries in bulk loader. ([#3763][], [802ec4c39][])\n\nDgraph Increment Tool\n\n- Add server-side and client-side latency numbers to increment tool. ([#3422][])\n- Add `--retries` flag to specify number of retry requests to set up a gRPC connection. ([#3584][])\n- Add TLS support to `dgraph increment` command. ([#3257][])\n\n### Added\n\n- Add bash and zsh shell completion. See `dgraph completion bash --help` or `dgraph completion zsh --help` for usage instructions. ([#3084][])\n- Add support for ECDSA in dgraph cert. ([#3269][])\n- Add support for JSON export via `/admin/export?format=json`. ([#3309][])\n- Add the SQL-to-Dgraph migration tool `dgraph migrate`. ([#3295][])\n- Add `assign_timestamp_ns` latency field to fix encoding_ns calculation. Fixes [#3668][]. ([#3692][], [#3711][])\n- Adding draining mode to Alpha. ([#3880][])\n\n\n- Enterprise features\n  - Support applying a license using /enterpriseLicense endpoint in Zero. ([#3824][])\n  - Don't apply license state for oss builds. ([#3847][])\n\nQuery\n\n- Type system\n  - Add `type` function to query types. ([#2933][])\n  - Parser for type declaration. ([#2950][])\n  - Add `@type` directive to enforce type constraints. ([#3003][])\n  - Store and query types. ([#3018][])\n  - Rename type predicate to dgraph.type ([#3204][])\n  - Change definition of dgraph.type pred to [string]. ([#3235][])\n  - Use type when available to resolve expand predicates. ([#3214][])\n  - Include types in results of export operation. ([#3493][])\n  - Support types in the bulk loader. ([#3506][])\n\n- Add the `upsert` block to send \"query-mutate-commit\" updates as a single\n  call to Dgraph. This is especially helpful to do upserts with the `@upsert`\n  schema directive. Addresses [#3059][]. ([#3412][])\n  - Add support for conditional mutation in Upsert Block. ([#3612][])\n\n- Allow querying all lang values of a predicate. ([#2910][])\n- Allow `regexp()` in `@filter` even for predicates without the trigram index. ([#2913][])\n- Add `minweight` and `maxweight` arguments to k-shortest path algorithm. ([#2915][])\n- Allow variable assignment of `count(uid)`. ([#2947][])\n- Reserved predicates\n  - During startup, don't upsert initial schema if it already exists. ([#3374][])\n  - Use all reserved predicates in IsReservedPredicateChanged. ([#3531][])\n- Fuzzy match support via the `match()` function using the trigram index. ([#2916][])\n- Support for GraphQL variables in arrays. ([#2981][])\n- Show total weight of path in shortest path algorithm. ([#2954][])\n- Rename dgraph `--dgraph` option to `--alpha`. ([#3273][])\n- Support uid variables in `from` and `to` arguments for shortest path query. Fixes [#1243][]. ([#3710][])\n\n- Add support for `len()` function in query language. The `len()` function is\n  only used in the `@if` directive for upsert blocks. `len(v)` It returns the\n  length of a variable `v`. ([#3756][], [#3769][])\n\nMutation\n\n- Add ability to delete triples of scalar non-list predicates. ([#2899][], [#3843][])\n- Allow deletion of specific language. ([#3242][])\n\nAlter\n\n- Add DropData operation to delete data without deleting schema. ([#3271][])\n\nSchema\n\n- **Breaking change**: Add ability to set schema to a single UID schema. Fixes [#2511][]. ([#2895][], [#3173][], [#2921][])\n  - If you wish to create one-to-one edges, use the schema type `uid`. The `uid` schema type in v1.0.x must be changed to `[uid]` to denote a one-to-many uid edge.\n- Prevent dropping or altering reserved predicates. ([#2967][]) ([#2997][])\n  - Reserved predicate names start with `dgraph.` .\n- Support comments in schema. ([#3133][])\n- Reserved predicates\n  - Reserved predicates are prefixed with \"dgraph.\", e.g., `dgraph.type`.\n  - Ensure reserved predicates cannot be moved. ([#3137][])\n  - Allow schema updates to reserved preds if the update is the same. ([#3143][])\n\nEnterprise feature: Access Control Lists (ACLs)\n\nEnterprise ACLs provide read/write/admin permissions to defined users and groups\nat the predicate-level.\n\n- Enforcing ACLs for query, mutation and alter requests. ([#2862][])\n- Don't create ACL predicates when the ACL feature is not turned on. ([#2924][])\n- Add HTTP API for ACL commands, pinning ACL predicates to group 1. ([#2951][])\n- ACL: Using type to distinguish user and group. ([#3124][])\n- Reduce the value of ACL TTLs to reduce the test running time. ([#3164][])\n  - Adds `--acl_cache_ttl` flag.\n- Fix panic when deleting a user or group that does not exist. ([#3218][])\n- ACL over TLS. ([#3207][])\n- Using read-only queries for ACL refreshes. ([#3256][])\n- When HttpLogin response context error, unmarshal and return the response context. ([#3275][])\n- Refactor: avoid double parsing of mutation string in ACL. ([#3494][])\n- Security fix: prevent the HmacSecret from being logged. ([#3734][])\n\nEnterprise feature: Backups\n\nEnterprise backups are Dgraph backups in a binary format designed to be restored\nto a cluster of the same version and configuration. Backups can be stored on\nlocal disk or stored directly to the cloud via AWS S3 or any Minio-compatible\nbackend.\n\n- Fixed bug with backup fan-out code. ([#2973][])\n- Incremental backups / partial restore. ([#2963][])\n- Turn obsolete error into warning. ([#3172][])\n- Add `dgraph lsbackup` command to list backups. ([#3219][])\n- Add option to override credentials and use public buckets. ([#3227][])\n- Add field to backup requests to force a full backup. ([#3387][])\n- More refactoring of backup code. ([#3515][])\n- Use gzip compression in backups. ([#3536][])\n- Allow partial restores and restoring different backup series. ([#3547][])\n- Store group to predicate mapping as part of the backup manifest. ([#3570][])\n- Only backup the predicates belonging to a group. ([#3621][])\n- Introduce backup data formats for cross-version compatibility. ([#3575][])\n-  Add series and backup number information to manifest. ([#3559][])\n- Use backwards-compatible formats during backup ([#3629][])\n- Use manifest to only restore preds assigned to each group. ([#3648][])\n- Fixes the toBackupList function by removing the loop. ([#3869][])\n- Add field to backup requests to force a full backup. ([#3387][])\n\nDgraph Zero\n\n- Zero server shutdown endpoint `/shutdown` at Zero's HTTP port. ([#2928][])\n\nDgraph Live Loader\n\n- Support live loading JSON files or stdin streams. ([#2961][]) ([#3106][])\n- Support live loading N-Quads from stdin streams. ([#3266][])\n\nDgraph Bulk Loader\n\n- Add `--replace_out` option to bulk command. ([#3089][])\n\nTracing\n\n- Support exporting tracing data to oc_agent, then to datadog agent. ([#3398][])\n- Measure latency of Alpha's Raft loop. (63f545568)\n\n### Removed\n\n- **Breaking change**: Remove `_predicate_` predicate within queries. ([#3262][])\n- Remove `--debug_mode` option. ([#3441][])\n\n- Remove deprecated and unused IgnoreIndexConflict field in mutations. This functionality is superceded by the `@upsert` schema directive since v1.0.4. ([#3854][])\n\n- Enterprise features\n  - Remove `--enterprise_feature` flag. Enterprise license can be applied via /enterpriseLicense endpoint in Zero. ([#3824][])\n\n### Fixed\n\n- Fix `anyofterms()` query for facets from mutations in JSON format. Fixes [#2867][]. ([#2885][])\n- Fixes error found by gofuzz. ([#2914][])\n- Fix int/float conversion to bool. ([#2893][])\n- Handling of empty string to datetime conversion. ([#2891][])\n- Fix schema export with special chars. Fixes [#2925][]. ([#2929][])\n\n- Default value should not be nil. ([#2995][])\n- Sanity check for empty variables. ([#3021][])\n- Panic due to nil maps. ([#3042][])\n- ValidateAddress should return true if IPv6 is valid. ([#3027][])\n- Throw error when @recurse queries contain nested fields. ([#3182][])\n- Fix panic in fillVars. ([#3505][])\n\n- Fix race condition in numShutDownSig in Alpha. ([#3402][])\n- Fix race condition in oracle.go. ([#3417][])\n- Fix tautological condition in zero.go. ([#3516][])\n- Correctness fix: Block before proposing mutations and improve conflict key generation. Fixes [#3528][]. ([#3565][])\n\n- Reject requests with predicates larger than the max size allowed (longer than 65,535 characters). ([#3052][])\n- Upgrade raft lib and fix group checksum. ([#3085][])\n- Check that uid is not used as function attribute. ([#3112][])\n- Do not retrieve facets when max recurse depth has been reached. ([#3190][])\n- Remove obsolete error message. ([#3172][])\n- Remove an unnecessary warning log. ([#3216][])\n- Fix bug triggered by nested expand predicates. ([#3205][])\n- Empty datetime will fail when returning results. ([#3169][])\n- Fix bug with pagination using `after`. ([#3149][])\n- Fix tablet error handling. ([#3323][])\n\n- Fix crash when trying to use shortest path with a password predicate. Fixes [#3657][]. ([#3662][])\n- Fix crash for `@groupby` queries. Fixes [#3642][]. ([#3670][])\n- Fix crash when calling drop all during a query. Fixes [#3645][]. ([#3664][])\n- Fix data races in queries. Fixes [#3685][]. ([#3749][])\n- Bulk Loader: Fix memory usage by JSON parser. ([#3794][])\n- Fixing issues in export. Fixes #3610. ([#3682][])\n\n- Bug Fix: Use txn.Get in addReverseMutation if needed for count index ([#3874][])\n- Bug Fix: Remove Check2 at writeResponse. ([#3900][])\n- Bug Fix: Do not call posting.List.release.\n\n[#3251]: https://github.com/hypermodeinc/dgraph/issues/3251\n[#3020]: https://github.com/hypermodeinc/dgraph/issues/3020\n[#3365]: https://github.com/hypermodeinc/dgraph/issues/3365\n[#3550]: https://github.com/hypermodeinc/dgraph/issues/3550\n[#3532]: https://github.com/hypermodeinc/dgraph/issues/3532\n[#3526]: https://github.com/hypermodeinc/dgraph/issues/3526\n[#3528]: https://github.com/hypermodeinc/dgraph/issues/3528\n[#3565]: https://github.com/hypermodeinc/dgraph/issues/3565\n[#2914]: https://github.com/hypermodeinc/dgraph/issues/2914\n[#2887]: https://github.com/hypermodeinc/dgraph/issues/2887\n[#2956]: https://github.com/hypermodeinc/dgraph/issues/2956\n[#2962]: https://github.com/hypermodeinc/dgraph/issues/2962\n[#2970]: https://github.com/hypermodeinc/dgraph/issues/2970\n[#2974]: https://github.com/hypermodeinc/dgraph/issues/2974\n[#2976]: https://github.com/hypermodeinc/dgraph/issues/2976\n[#2989]: https://github.com/hypermodeinc/dgraph/issues/2989\n[#3078]: https://github.com/hypermodeinc/dgraph/issues/3078\n[#3322]: https://github.com/hypermodeinc/dgraph/issues/3322\n[#3523]: https://github.com/hypermodeinc/dgraph/issues/3523\n[#3412]: https://github.com/hypermodeinc/dgraph/issues/3412\n[#3357]: https://github.com/hypermodeinc/dgraph/issues/3357\n[#3502]: https://github.com/hypermodeinc/dgraph/issues/3502\n[#3606]: https://github.com/hypermodeinc/dgraph/issues/3606\n[#3784]: https://github.com/hypermodeinc/dgraph/issues/3784\n[#3906]: https://github.com/hypermodeinc/dgraph/issues/3906\n[#2986]: https://github.com/hypermodeinc/dgraph/issues/2986\n[#3015]: https://github.com/hypermodeinc/dgraph/issues/3015\n[#2979]: https://github.com/hypermodeinc/dgraph/issues/2979\n[#2880]: https://github.com/hypermodeinc/dgraph/issues/2880\n[#3051]: https://github.com/hypermodeinc/dgraph/issues/3051\n[#3092]: https://github.com/hypermodeinc/dgraph/issues/3092\n[#3091]: https://github.com/hypermodeinc/dgraph/issues/3091\n[#3194]: https://github.com/hypermodeinc/dgraph/issues/3194\n[#3243]: https://github.com/hypermodeinc/dgraph/issues/3243\n[#3228]: https://github.com/hypermodeinc/dgraph/issues/3228\n[#3254]: https://github.com/hypermodeinc/dgraph/issues/3254\n[#3274]: https://github.com/hypermodeinc/dgraph/issues/3274\n[#3253]: https://github.com/hypermodeinc/dgraph/issues/3253\n[#3105]: https://github.com/hypermodeinc/dgraph/issues/3105\n[#3310]: https://github.com/hypermodeinc/dgraph/issues/3310\n[#3402]: https://github.com/hypermodeinc/dgraph/issues/3402\n[#3442]: https://github.com/hypermodeinc/dgraph/issues/3442\n[#3387]: https://github.com/hypermodeinc/dgraph/issues/3387\n[#3444]: https://github.com/hypermodeinc/dgraph/issues/3444\n[#3481]: https://github.com/hypermodeinc/dgraph/issues/3481\n[#2953]: https://github.com/hypermodeinc/dgraph/issues/2953\n[#3060]: https://github.com/hypermodeinc/dgraph/issues/3060\n[#3527]: https://github.com/hypermodeinc/dgraph/issues/3527\n[#3650]: https://github.com/hypermodeinc/dgraph/issues/3650\n[#3627]: https://github.com/hypermodeinc/dgraph/issues/3627\n[#3686]: https://github.com/hypermodeinc/dgraph/issues/3686\n[#3688]: https://github.com/hypermodeinc/dgraph/issues/3688\n[#3696]: https://github.com/hypermodeinc/dgraph/issues/3696\n[#3682]: https://github.com/hypermodeinc/dgraph/issues/3682\n[#3695]: https://github.com/hypermodeinc/dgraph/issues/3695\n[#3713]: https://github.com/hypermodeinc/dgraph/issues/3713\n[#3724]: https://github.com/hypermodeinc/dgraph/issues/3724\n[#3747]: https://github.com/hypermodeinc/dgraph/issues/3747\n[#3762]: https://github.com/hypermodeinc/dgraph/issues/3762\n[#3767]: https://github.com/hypermodeinc/dgraph/issues/3767\n[#3805]: https://github.com/hypermodeinc/dgraph/issues/3805\n[#3795]: https://github.com/hypermodeinc/dgraph/issues/3795\n[#3825]: https://github.com/hypermodeinc/dgraph/issues/3825\n[#3746]: https://github.com/hypermodeinc/dgraph/issues/3746\n[#3786]: https://github.com/hypermodeinc/dgraph/issues/3786\n[#3828]: https://github.com/hypermodeinc/dgraph/issues/3828\n[#3872]: https://github.com/hypermodeinc/dgraph/issues/3872\n[#3839]: https://github.com/hypermodeinc/dgraph/issues/3839\n[#3898]: https://github.com/hypermodeinc/dgraph/issues/3898\n[#3901]: https://github.com/hypermodeinc/dgraph/issues/3901\n[#3311]: https://github.com/hypermodeinc/dgraph/issues/3311\n[#3319]: https://github.com/hypermodeinc/dgraph/issues/3319\n[#3345]: https://github.com/hypermodeinc/dgraph/issues/3345\n[#3364]: https://github.com/hypermodeinc/dgraph/issues/3364\n[#2991]: https://github.com/hypermodeinc/dgraph/issues/2991\n[#3278]: https://github.com/hypermodeinc/dgraph/issues/3278\n[#3313]: https://github.com/hypermodeinc/dgraph/issues/3313\n[#2998]: https://github.com/hypermodeinc/dgraph/issues/2998\n[#3004]: https://github.com/hypermodeinc/dgraph/issues/3004\n[#3045]: https://github.com/hypermodeinc/dgraph/issues/3045\n[#3542]: https://github.com/hypermodeinc/dgraph/issues/3542\n[#3635]: https://github.com/hypermodeinc/dgraph/issues/3635\n[#3649]: https://github.com/hypermodeinc/dgraph/issues/3649\n[#3287]: https://github.com/hypermodeinc/dgraph/issues/3287\n[#3333]: https://github.com/hypermodeinc/dgraph/issues/3333\n[#3560]: https://github.com/hypermodeinc/dgraph/issues/3560\n[#3613]: https://github.com/hypermodeinc/dgraph/issues/3613\n[#3560]: https://github.com/hypermodeinc/dgraph/issues/3560\n[#3628]: https://github.com/hypermodeinc/dgraph/issues/3628\n[#3681]: https://github.com/hypermodeinc/dgraph/issues/3681\n[#3659]: https://github.com/hypermodeinc/dgraph/issues/3659\n[#3763]: https://github.com/hypermodeinc/dgraph/issues/3763\n[#3728]: https://github.com/hypermodeinc/dgraph/issues/3728\n[#3422]: https://github.com/hypermodeinc/dgraph/issues/3422\n[#3584]: https://github.com/hypermodeinc/dgraph/issues/3584\n[#3084]: https://github.com/hypermodeinc/dgraph/issues/3084\n[#3257]: https://github.com/hypermodeinc/dgraph/issues/3257\n[#3269]: https://github.com/hypermodeinc/dgraph/issues/3269\n[#3309]: https://github.com/hypermodeinc/dgraph/issues/3309\n[#3295]: https://github.com/hypermodeinc/dgraph/issues/3295\n[#3398]: https://github.com/hypermodeinc/dgraph/issues/3398\n[#3824]: https://github.com/hypermodeinc/dgraph/issues/3824\n[#3847]: https://github.com/hypermodeinc/dgraph/issues/3847\n[#3880]: https://github.com/hypermodeinc/dgraph/issues/3880\n[#2933]: https://github.com/hypermodeinc/dgraph/issues/2933\n[#2950]: https://github.com/hypermodeinc/dgraph/issues/2950\n[#3003]: https://github.com/hypermodeinc/dgraph/issues/3003\n[#3018]: https://github.com/hypermodeinc/dgraph/issues/3018\n[#3204]: https://github.com/hypermodeinc/dgraph/issues/3204\n[#3235]: https://github.com/hypermodeinc/dgraph/issues/3235\n[#3214]: https://github.com/hypermodeinc/dgraph/issues/3214\n[#3493]: https://github.com/hypermodeinc/dgraph/issues/3493\n[#3506]: https://github.com/hypermodeinc/dgraph/issues/3506\n[#3059]: https://github.com/hypermodeinc/dgraph/issues/3059\n[#3412]: https://github.com/hypermodeinc/dgraph/issues/3412\n[#3612]: https://github.com/hypermodeinc/dgraph/issues/3612\n[#2910]: https://github.com/hypermodeinc/dgraph/issues/2910\n[#2913]: https://github.com/hypermodeinc/dgraph/issues/2913\n[#2915]: https://github.com/hypermodeinc/dgraph/issues/2915\n[#2947]: https://github.com/hypermodeinc/dgraph/issues/2947\n[#3374]: https://github.com/hypermodeinc/dgraph/issues/3374\n[#3531]: https://github.com/hypermodeinc/dgraph/issues/3531\n[#2916]: https://github.com/hypermodeinc/dgraph/issues/2916\n[#2981]: https://github.com/hypermodeinc/dgraph/issues/2981\n[#2954]: https://github.com/hypermodeinc/dgraph/issues/2954\n[#3273]: https://github.com/hypermodeinc/dgraph/issues/3273\n[#1243]: https://github.com/hypermodeinc/dgraph/issues/1243\n[#3710]: https://github.com/hypermodeinc/dgraph/issues/3710\n[#3756]: https://github.com/hypermodeinc/dgraph/issues/3756\n[#3769]: https://github.com/hypermodeinc/dgraph/issues/3769\n[#2899]: https://github.com/hypermodeinc/dgraph/issues/2899\n[#3843]: https://github.com/hypermodeinc/dgraph/issues/3843\n[#3242]: https://github.com/hypermodeinc/dgraph/issues/3242\n[#3271]: https://github.com/hypermodeinc/dgraph/issues/3271\n[#2511]: https://github.com/hypermodeinc/dgraph/issues/2511\n[#2895]: https://github.com/hypermodeinc/dgraph/issues/2895\n[#3173]: https://github.com/hypermodeinc/dgraph/issues/3173\n[#2921]: https://github.com/hypermodeinc/dgraph/issues/2921\n[#2967]: https://github.com/hypermodeinc/dgraph/issues/2967\n[#2997]: https://github.com/hypermodeinc/dgraph/issues/2997\n[#3133]: https://github.com/hypermodeinc/dgraph/issues/3133\n[#2862]: https://github.com/hypermodeinc/dgraph/issues/2862\n[#2924]: https://github.com/hypermodeinc/dgraph/issues/2924\n[#2951]: https://github.com/hypermodeinc/dgraph/issues/2951\n[#3124]: https://github.com/hypermodeinc/dgraph/issues/3124\n[#3141]: https://github.com/hypermodeinc/dgraph/issues/3141\n[#3164]: https://github.com/hypermodeinc/dgraph/issues/3164\n[#3218]: https://github.com/hypermodeinc/dgraph/issues/3218\n[#3207]: https://github.com/hypermodeinc/dgraph/issues/3207\n[#3256]: https://github.com/hypermodeinc/dgraph/issues/3256\n[#3275]: https://github.com/hypermodeinc/dgraph/issues/3275\n[#3494]: https://github.com/hypermodeinc/dgraph/issues/3494\n[#3734]: https://github.com/hypermodeinc/dgraph/issues/3734\n[#2973]: https://github.com/hypermodeinc/dgraph/issues/2973\n[#2963]: https://github.com/hypermodeinc/dgraph/issues/2963\n[#3172]: https://github.com/hypermodeinc/dgraph/issues/3172\n[#3219]: https://github.com/hypermodeinc/dgraph/issues/3219\n[#3227]: https://github.com/hypermodeinc/dgraph/issues/3227\n[#3387]: https://github.com/hypermodeinc/dgraph/issues/3387\n[#3515]: https://github.com/hypermodeinc/dgraph/issues/3515\n[#3536]: https://github.com/hypermodeinc/dgraph/issues/3536\n[#3547]: https://github.com/hypermodeinc/dgraph/issues/3547\n[#3570]: https://github.com/hypermodeinc/dgraph/issues/3570\n[#3621]: https://github.com/hypermodeinc/dgraph/issues/3621\n[#3575]: https://github.com/hypermodeinc/dgraph/issues/3575\n[#3559]: https://github.com/hypermodeinc/dgraph/issues/3559\n[#3629]: https://github.com/hypermodeinc/dgraph/issues/3629\n[#3648]: https://github.com/hypermodeinc/dgraph/issues/3648\n[#3869]: https://github.com/hypermodeinc/dgraph/issues/3869\n[#2928]: https://github.com/hypermodeinc/dgraph/issues/2928\n[#2961]: https://github.com/hypermodeinc/dgraph/issues/2961\n[#3106]: https://github.com/hypermodeinc/dgraph/issues/3106\n[#3266]: https://github.com/hypermodeinc/dgraph/issues/3266\n[#3089]: https://github.com/hypermodeinc/dgraph/issues/3089\n[#3262]: https://github.com/hypermodeinc/dgraph/issues/3262\n[#3441]: https://github.com/hypermodeinc/dgraph/issues/3441\n[#3854]: https://github.com/hypermodeinc/dgraph/issues/3854\n[#3824]: https://github.com/hypermodeinc/dgraph/issues/3824\n[#2867]: https://github.com/hypermodeinc/dgraph/issues/2867\n[#2885]: https://github.com/hypermodeinc/dgraph/issues/2885\n[#2914]: https://github.com/hypermodeinc/dgraph/issues/2914\n[#2893]: https://github.com/hypermodeinc/dgraph/issues/2893\n[#2891]: https://github.com/hypermodeinc/dgraph/issues/2891\n[#2925]: https://github.com/hypermodeinc/dgraph/issues/2925\n[#2929]: https://github.com/hypermodeinc/dgraph/issues/2929\n[#2995]: https://github.com/hypermodeinc/dgraph/issues/2995\n[#3021]: https://github.com/hypermodeinc/dgraph/issues/3021\n[#3042]: https://github.com/hypermodeinc/dgraph/issues/3042\n[#3027]: https://github.com/hypermodeinc/dgraph/issues/3027\n[#3182]: https://github.com/hypermodeinc/dgraph/issues/3182\n[#3505]: https://github.com/hypermodeinc/dgraph/issues/3505\n[#3402]: https://github.com/hypermodeinc/dgraph/issues/3402\n[#3417]: https://github.com/hypermodeinc/dgraph/issues/3417\n[#3516]: https://github.com/hypermodeinc/dgraph/issues/3516\n[#3052]: https://github.com/hypermodeinc/dgraph/issues/3052\n[#3062]: https://github.com/hypermodeinc/dgraph/issues/3062\n[#3077]: https://github.com/hypermodeinc/dgraph/issues/3077\n[#3085]: https://github.com/hypermodeinc/dgraph/issues/3085\n[#3112]: https://github.com/hypermodeinc/dgraph/issues/3112\n[#3190]: https://github.com/hypermodeinc/dgraph/issues/3190\n[#3172]: https://github.com/hypermodeinc/dgraph/issues/3172\n[#3216]: https://github.com/hypermodeinc/dgraph/issues/3216\n[#3205]: https://github.com/hypermodeinc/dgraph/issues/3205\n[#3169]: https://github.com/hypermodeinc/dgraph/issues/3169\n[#3149]: https://github.com/hypermodeinc/dgraph/issues/3149\n[#3323]: https://github.com/hypermodeinc/dgraph/issues/3323\n[#3137]: https://github.com/hypermodeinc/dgraph/issues/3137\n[#3143]: https://github.com/hypermodeinc/dgraph/issues/3143\n[#3657]: https://github.com/hypermodeinc/dgraph/issues/3657\n[#3662]: https://github.com/hypermodeinc/dgraph/issues/3662\n[#3642]: https://github.com/hypermodeinc/dgraph/issues/3642\n[#3670]: https://github.com/hypermodeinc/dgraph/issues/3670\n[#3645]: https://github.com/hypermodeinc/dgraph/issues/3645\n[#3664]: https://github.com/hypermodeinc/dgraph/issues/3664\n[#3668]: https://github.com/hypermodeinc/dgraph/issues/3668\n[#3692]: https://github.com/hypermodeinc/dgraph/issues/3692\n[#3711]: https://github.com/hypermodeinc/dgraph/issues/3711\n[#3685]: https://github.com/hypermodeinc/dgraph/issues/3685\n[#3749]: https://github.com/hypermodeinc/dgraph/issues/3749\n[#3794]: https://github.com/hypermodeinc/dgraph/issues/3794\n[#3874]: https://github.com/hypermodeinc/dgraph/issues/3874\n[#3900]: https://github.com/hypermodeinc/dgraph/issues/3900\n[3271f64e0]: https://github.com/hypermodeinc/dgraph/commit/3271f64e0\n[63f545568]: https://github.com/hypermodeinc/dgraph/commit/63f545568\n[18277872f]: https://github.com/hypermodeinc/dgraph/commit/18277872f\n[802ec4c39]: https://github.com/hypermodeinc/dgraph/commit/802ec4c39\n\n## [1.0.18] - 2019-12-16\n[1.0.18]: https://github.com/hypermodeinc/dgraph/compare/v1.0.17...v1.0.18\n\n### Fixed\n\n- Preserve the order of entries in a mutation if multiple versions of the same\n  edge are found. This addresses the mutation re-ordering change ([#2987][]) from v1.0.15.\n- Fixing the zero client in live loader to avoid using TLS. Fixes [#3919][]. ([#3936][])\n- Remove query cache which is causing contention. ([#4071][]).\n- Fix bug when querying with nested levels of `expand(_all_)`. Fixes [#3807][]. ([#4143][]).\n- Vendor in Badger to fix a vlog bug \"Unable to find log file\". ([#4212][])\n- Change lexer to allow unicode escape sequences. Fixes [#4157][]. ([#4252][])\n\n[#3919]: https://github.com/hypermodeinc/dgraph/issues/3919\n[#3936]: https://github.com/hypermodeinc/dgraph/issues/3936\n[#4071]: https://github.com/hypermodeinc/dgraph/issues/4071\n[#3807]: https://github.com/hypermodeinc/dgraph/issues/3807\n[#4143]: https://github.com/hypermodeinc/dgraph/issues/4143\n[#4212]: https://github.com/hypermodeinc/dgraph/issues/4212\n[#4157]: https://github.com/hypermodeinc/dgraph/issues/4157\n[#4252]: https://github.com/hypermodeinc/dgraph/issues/4252\n\n## [1.0.17] - 2019-08-30\n[1.0.17]: https://github.com/hypermodeinc/dgraph/compare/v1.0.16...v1.0.17\n\n### Changed\n\n- Increase max trace logs per span in Alpha. ([#3886][])\n- Include line and column numbers in lexer errors. Fixes [#2900][]. ([#3772][])\n- Release binaries built with Go 1.12.7.\n\n### Fixed\n\n- Decrease rate of Raft heartbeat messages. ([#3708][], [#3753][])\n- Fix bug when exporting a predicate name to the schema. Fixes [#3699][]. ([#3701][])\n- Return error instead of asserting in handleCompareFunction. ([#3665][])\n- Fix bug where aliases in a query incorrectly alias the response depending on alias order. Fixes [#3814][]. ([#3837][])\n- Fix for panic in fillGroupedVars. Fixes [#3768][]. ([#3781][])\n\n[#3886]: https://github.com/hypermodeinc/dgraph/issues/3886\n[#2900]: https://github.com/hypermodeinc/dgraph/issues/2900\n[#3772]: https://github.com/hypermodeinc/dgraph/issues/3772\n[#3708]: https://github.com/hypermodeinc/dgraph/issues/3708\n[#3753]: https://github.com/hypermodeinc/dgraph/issues/3753\n[#3699]: https://github.com/hypermodeinc/dgraph/issues/3699\n[#3701]: https://github.com/hypermodeinc/dgraph/issues/3701\n[#3665]: https://github.com/hypermodeinc/dgraph/issues/3665\n[#3814]: https://github.com/hypermodeinc/dgraph/issues/3814\n[#3837]: https://github.com/hypermodeinc/dgraph/issues/3837\n[#3768]: https://github.com/hypermodeinc/dgraph/issues/3768\n[#3781]: https://github.com/hypermodeinc/dgraph/issues/3781\n\n## [1.0.16] - 2019-07-11\n[1.0.16]: https://github.com/hypermodeinc/dgraph/compare/v1.0.15...v1.0.16\n\n### Changed\n\n- Vendor in prometheus/client_golang/prometheus v0.9.4. ([#3653][])\n\n### Fixed\n\n- Fix panic with value variables in queries. Fixes [#3470][]. ([#3554][])\n- Remove unused reserved predicates in the schema. Fixes [#3535][]. ([#3557][])\n- Vendor in Badger v1.6.0 for StreamWriter bug fixes. ([#3631][])\n\n[#3470]: https://github.com/hypermodeinc/dgraph/issue/3470\n[#3535]: https://github.com/hypermodeinc/dgraph/issue/3535\n[#3554]: https://github.com/hypermodeinc/dgraph/issue/3554\n[#3557]: https://github.com/hypermodeinc/dgraph/issue/3557\n[#3631]: https://github.com/hypermodeinc/dgraph/issue/3631\n[#3653]: https://github.com/hypermodeinc/dgraph/issue/3653\n\n## [1.0.15] - 2019-05-30\n[1.0.15]: https://github.com/hypermodeinc/dgraph/compare/v1.0.14...v1.0.15\n\n### Fixed\n\n- Fix bug that can cause a Dgraph cluster to get stuck in infinite leader election. ([#3391][])\n- Fix bug in bulk loader that prevented loading data from JSON files. ([#3464][])\n- Fix bug with a potential deadlock by breaking circular lock acquisition. ([#3393][])\n- Properly escape strings containing Unicode control characters for data exports. Fixes [#3383]. ([#3429][])\n- Initialize tablets map when creating a group. ([#3360][])\n- Fix queries with `offset` not working with multiple `orderasc` or `orderdesc` statements. Fixes [#3366][]. ([#3455][])\n- Vendor in bug fixes from badger. ([#3348][], [#3371][], [#3460][])\n\n### Changed\n\n- Use Go v1.12.5 to build Dgraph release binaries.\n- Truncate Raft logs even when no txn commits are happening. ([3be380b8a][])\n- Reduce memory usage by setting a limit on the size of committed entries that can be served per Ready. ([#3308][])\n- Reduce memory usage of pending txns by only keeping deltas in memory. ([#3349][])\n- Reduce memory usage by limiting the number of pending proposals in apply channel. ([#3340][])\n- Reduce memory usage when calculating snapshots by retrieving entries in batches. ([#3409][])\n- Allow snapshot calculations during snapshot streaming. ([ecb454754][])\n- Allow quick recovery from partitions by shortening the deadline of sending Raft messages to 10s. ([77b52aca1][])\n- Take snapshots less frequently so straggling Alpha followers can catch up to the leader. Snapshot frequency is configurable via a flag (see Added section). ([#3367][])\n- Allow partial snapshot streams to reduce the amount of data needed to be transferred between Alphas. ([#3454][])\n- Use Badger's StreamWriter to improve write speeds during snapshot streaming. ([#3457][]) ([#3442][])\n- Call file sync explicitly at the end of TxnWriter to improve performance. ([#3418][])\n- Optimize mutation and delta application. **Breaking: With these changes, the mutations within a single call are rearranged. So, no assumptions must be made about the order in which they get executed.**\n ([#2987][])\n- Add logs to show Dgraph config options. ([#3337][])\n- Add `-v=3` logs for reporting Raft communication for debugging. These logs start with `RaftComm:`. ([9cd628f6f][])\n\n### Added\n\n- Add Alpha flag `--snapshot_after` (default: 10000) to configure the number of Raft entries to keep before taking a snapshot. ([#3367][])\n- Add Alpha flag `--abort_older_than` (default: 5m) to configure the amount of time since a pending txn's last mutation until it is aborted. ([#3367][])\n- Add Alpha flag `--normalize_node_limit` (default: 10000) to configure the limit for the maximum number of nodes that can be returned in a query that uses the `@normalize` directive. Fixes [#3335][]. ([#3467][])\n- Add Prometheus metrics for latest Raft applied index (`dgraph_raft_applied_index`) and the max assigned txn timestamp (`dgraph_max_assigned_ts`). These are useful to track cluster progress. ([#3338][])\n- Add Raft checkpoint index to WAL for quicker recovery after restart. ([#3444][])\n\n### Removed\n\n- Remove size calculation in posting list. ([0716dc4e1][])\n- Remove a `-v=2` log which can be too noisy during Raft replay. ([2377d9f56][]).\n- Remove `dgraph_conf` from /debug/vars. Dgraph config options are available via logs. ([#3337][])\n\n[#3337]: https://github.com/hypermodeinc/dgraph/pull/3337\n[#3391]: https://github.com/hypermodeinc/dgraph/pull/3391\n[#3400]: https://github.com/hypermodeinc/dgraph/pull/3400\n[#3464]: https://github.com/hypermodeinc/dgraph/pull/3464\n[#2987]: https://github.com/hypermodeinc/dgraph/pull/2987\n[#3349]: https://github.com/hypermodeinc/dgraph/pull/3349\n[#3393]: https://github.com/hypermodeinc/dgraph/pull/3393\n[#3429]: https://github.com/hypermodeinc/dgraph/pull/3429\n[#3383]: https://github.com/hypermodeinc/dgraph/pull/3383\n[#3455]: https://github.com/hypermodeinc/dgraph/pull/3455\n[#3366]: https://github.com/hypermodeinc/dgraph/pull/3366\n[#3308]: https://github.com/hypermodeinc/dgraph/pull/3308\n[#3340]: https://github.com/hypermodeinc/dgraph/pull/3340\n[#3348]: https://github.com/hypermodeinc/dgraph/pull/3348\n[#3371]: https://github.com/hypermodeinc/dgraph/pull/3371\n[#3460]: https://github.com/hypermodeinc/dgraph/pull/3460\n[#3360]: https://github.com/hypermodeinc/dgraph/pull/3360\n[#3335]: https://github.com/hypermodeinc/dgraph/pull/3335\n[#3367]: https://github.com/hypermodeinc/dgraph/pull/3367\n[#3409]: https://github.com/hypermodeinc/dgraph/pull/3409\n[#3418]: https://github.com/hypermodeinc/dgraph/pull/3418\n[#3454]: https://github.com/hypermodeinc/dgraph/pull/3454\n[#3457]: https://github.com/hypermodeinc/dgraph/pull/3457\n[#3442]: https://github.com/hypermodeinc/dgraph/pull/3442\n[#3467]: https://github.com/hypermodeinc/dgraph/pull/3467\n[#3338]: https://github.com/hypermodeinc/dgraph/pull/3338\n[#3444]: https://github.com/hypermodeinc/dgraph/pull/3444\n[3be380b8a]: https://github.com/hypermodeinc/dgraph/commit/3be380b8a\n[ecb454754]: https://github.com/hypermodeinc/dgraph/commit/ecb454754\n[77b52aca1]: https://github.com/hypermodeinc/dgraph/commit/77b52aca1\n[9cd628f6f]: https://github.com/hypermodeinc/dgraph/commit/9cd628f6f\n[0716dc4e1]: https://github.com/hypermodeinc/dgraph/commit/0716dc4e1\n[2377d9f56]: https://github.com/hypermodeinc/dgraph/commit/2377d9f56\n\n## [1.0.14] - 2019-04-12\n[1.0.14]: https://github.com/hypermodeinc/dgraph/compare/v1.0.13...v1.0.14\n\n### Fixed\n\n- Fix bugs related to best-effort queries. ([#3125][])\n- Stream Raft Messages and Fix Check Quorum. ([#3138][])\n- Fix lin reads timeouts and AssignUid recursion in Zero. ([#3203][])\n- Fix panic when running `@groupby(uid)` which is not allowed and other logic fixes. ([#3232][])\n- Fix a StartTs Mismatch bug which happens when running multiple best effort queries using the same txn. Reuse the same timestamp instead of allocating a new one. ([#3187][]) ([#3246][])\n- Shutdown extra connections. ([#3280][])\n- Fix bug for queries with `@recurse` and `expand(_all_)`. ([#3179][])\n- Fix assorted cases of goroutine leaks. ([#3074][])\n- Increment tool: Fix best-effort flag name so best-effort queries run as intended from the tool. ([d386fa5][])\n\n[#3125]: https://github.com/hypermodeinc/dgraph/pull/3125\n[#3138]: https://github.com/hypermodeinc/dgraph/pull/3138\n[#3203]: https://github.com/hypermodeinc/dgraph/pull/3203\n[#3232]: https://github.com/hypermodeinc/dgraph/pull/3232\n[#3187]: https://github.com/hypermodeinc/dgraph/pull/3187\n[#3246]: https://github.com/hypermodeinc/dgraph/pull/3246\n[#3280]: https://github.com/hypermodeinc/dgraph/pull/3280\n[#3179]: https://github.com/hypermodeinc/dgraph/pull/3179\n[#3074]: https://github.com/hypermodeinc/dgraph/pull/3074\n[d386fa5]: https://github.com/hypermodeinc/dgraph/commit/d386fa5\n\n### Added\n\n- Add timeout option while running queries over HTTP. Setting the `timeout` query parameter `/query?timeout=60s` will timeout queries after 1 minute. ([#3238][])\n- Add `badger` tool to release binaries and Docker image.\n\n[#3238]: https://github.com/hypermodeinc/dgraph/pull/3238\n\n## [1.0.13] - 2019-03-10\n[1.0.13]: https://github.com/hypermodeinc/dgraph/compare/v1.0.12...v1.0.13\n\n**Note: This release supersedes v1.0.12 with bug fixes. If you're running v1.0.12, please upgrade to v1.0.13. It is safe to upgrade in-place without a data export and import.**\n\n### Fixed\n\n- Fix Raft panic. ([8cb69ea](https://github.com/hypermodeinc/dgraph/commit/8cb69ea))\n- Log an error instead of an assertion check for SrcUIDs being nil. ([691b3b3](https://github.com/hypermodeinc/dgraph/commit/691b3b3))\n\n## [1.0.12] - 2019-03-05\n[1.0.12]: https://github.com/hypermodeinc/dgraph/compare/v1.0.11...v1.0.12\n\n**Note: This release requires you to export and re-import data prior to\nupgrading or rolling back. The underlying data format has been changed.**\n\n### Added\n\n- Support gzip compression for gRPC and HTTP requests.\n  ([#2843](https://github.com/hypermodeinc/dgraph/issues/2843))\n- Restore is available from a full binary backup. This is an enterprise\n  feature licensed under the Dgraph Community License.\n- Strict schema mode via `--mutations` flag. By default `--mutations=allow` is\n  set to allow all mutations; `--mutations=disallow` disables all mutations;\n  `--mutations=strict` allows mutations only for predicates which are defined in\n  the schema. Fixes [#2277](https://github.com/hypermodeinc/dgraph/issues/2277).\n- Add `dgraph increment` tool for debugging and testing. The increment tool\n  queries for the specified predicate (default: `counter.val`), increments its\n  integer counter value, and mutates the result back to Dgraph. Useful for\n  testing end-to-end txns to verify cluster health.\n  ([#2955](https://github.com/hypermodeinc/dgraph/issues/2955))\n- Support best-effort queries. This would relax the requirement of linearizible\n  reads. For best-effort queries, Alpha would request timestamps from memory\n  instead of making an outbound request to Zero.\n  ([#3071](https://github.com/hypermodeinc/dgraph/issues/3071))\n\n### Changed\n\n- Use the new Stream API from Badger instead of Dgraph's Stream framework. ([#2852](https://github.com/hypermodeinc/dgraph/issues/2852))\n- Discard earlier versions of posting lists. ([#2859](https://github.com/hypermodeinc/dgraph/issues/2859))\n- Make HTTP JSON response encoding more efficient by operating on a bytes buffer\n  directly. ([ae1d9f3](https://github.com/hypermodeinc/dgraph/commit/ae1d9f3))\n- Optimize and refactor facet filtering. ([#2829](https://github.com/hypermodeinc/dgraph/issues/2829))\n- Show badger.Item meta information in `dgraph debug` output.\n- Add new option to `dgraph debug` tool to get a histogram of key and value sizes. ([#2844](https://github.com/hypermodeinc/dgraph/issues/2844))\n- Add new option to `dgraph debug` tool to get info from a particular read timestamp.\n- Refactor rebuild index logic. ([#2851](https://github.com/hypermodeinc/dgraph/issues/2851), [#2866](https://github.com/hypermodeinc/dgraph/issues/2866))\n- For gRPC clients, schema queries are returned in the Json field. The Schema proto field is deprecated.\n- Simplify design and make tablet moves robust. ([#2800](https://github.com/hypermodeinc/dgraph/issues/2800))\n- Switch all node IDs to hex in logs (e.g., ID 0xa instead of ID 10), so they are consistent with Raft logs.\n- Refactor reindexing code to only reindex specific tokenizers. ([#2948](https://github.com/hypermodeinc/dgraph/issues/2948))\n- Introduce group checksums. ([#2964](https://github.com/hypermodeinc/dgraph/issues/2964), [#3085](https://github.com/hypermodeinc/dgraph/issues/3085))\n- Return aborted error if commit ts is 0.\n- Reduce number of \"ClusterInfoOnly\" requests to Zero by making VerifyUid wait for membership information. ([#2974](https://github.com/hypermodeinc/dgraph/issues/2974))\n- Simplify Raft WAL storage caching. ([#3102](https://github.com/hypermodeinc/dgraph/issues/3102))\n- Build release binary with Go version 1.11.5.\n\n### Removed\n\n- **Remove LRU cache from Alpha for big wins in query latency reduction (5-10x)\n  and mutation throughput (live loading 1.7x faster).** Setting `--lru_mb` is\n  still required but will not have any effect since the cache is removed. The\n  flag will be used later version when LRU cache is introduced within Badger and\n  configurable from Dgraph.\n- Remove `--nomutations` flag. Its functionality has moved into strict schema\n  mode with the `--mutations` flag (see Added section).\n\n### Fixed\n\n- Use json.Marshal for strings and blobs. Fixes [#2662](https://github.com/hypermodeinc/dgraph/issues/2662).\n- Let eq use string \"uid\" as value. Fixes [#2827](https://github.com/hypermodeinc/dgraph/issues/2827).\n- Skip empty posting lists in `has` function.\n- Fix Rollup to pick max update commit ts.\n- Fix a race condition when processing concurrent queries. Fixes [#2849](https://github.com/hypermodeinc/dgraph/issues/2849).\n- Show an error when running multiple mutation blocks. Fixes [#2815](https://github.com/hypermodeinc/dgraph/issues/2815).\n- Bring in optimizations and bug fixes over from Badger.\n- Bulk Loader for multi-group (sharded data) clusters writes out per-group\n  schema with only the predicates owned by the group instead of all predicates\n  in the cluster. This fixes an issue where queries made to one group may not\n  return data served by other groups.\n  ([#3065](https://github.com/hypermodeinc/dgraph/issues/3065))\n- Remove the assert failure in raftwal/storage.go.\n\n## [1.0.11] - 2018-12-17\n[1.0.11]: https://github.com/hypermodeinc/dgraph/compare/v1.0.10...v1.0.11\n\n### Added\n\n- Integrate OpenCensus in Dgraph. ([#2739](https://github.com/hypermodeinc/dgraph/issues/2739))\n- Add Dgraph Community License for proprietary features.\n- Feature: Full binary backups. This is an enterprise feature licensed under the Dgraph Community License. ([#2710](https://github.com/hypermodeinc/dgraph/issues/2710))\n- Add `--enterprise_features` flag to enable enterprise features. By enabling enterprise features, you accept the terms of the Dgraph Community License.\n- Add minio dep and its deps in govendor. ([94daeaf7](https://github.com/hypermodeinc/dgraph/commit/94daeaf7), [35a73e81](https://github.com/hypermodeinc/dgraph/commit/35a73e81))\n- Add network partitioning tests with blockade tool. ([./contrib/blockade](https://github.com/hypermodeinc/dgraph/tree/v1.0.11/contrib/blockade))\n- Add Zero endpoints `/assign?what=uids&num=10` and `/assign?what=timestamps&num=10` to assign UIDs or transaction timestamp leases.\n- Adding the acl subcommand to support acl features (still work-in-progress). ([#2795](https://github.com/hypermodeinc/dgraph/issues/2795))\n- Support custom tokenizer in bulk loader ([#2820](https://github.com/hypermodeinc/dgraph/issues/2820))\n- Support JSON data with Dgraph Bulk Loader. ([#2799](https://github.com/hypermodeinc/dgraph/issues/2799))\n\n### Changed\n\n- Make posting list memory rollup happen right after disk. ([#2731](https://github.com/hypermodeinc/dgraph/issues/2731))\n- Do not retry proposal if already found in CommittedEntries. ([#2740](https://github.com/hypermodeinc/dgraph/issues/2740))\n- Remove ExportPayload from protos. Export returns Status and ExportRequest. ([#2741](https://github.com/hypermodeinc/dgraph/issues/2741))\n- Allow more escape runes to be skipped over when parsing string literal. ([#2734](https://github.com/hypermodeinc/dgraph/issues/2734))\n- Clarify message of overloaded pending proposals for live loader. ([#2732](https://github.com/hypermodeinc/dgraph/issues/2732))\n- Posting List Evictions. (e2bcfdad)\n- Log when removing a tablet. ([#2746](https://github.com/hypermodeinc/dgraph/issues/2746))\n- Deal better with network partitions in leaders. ([#2749](https://github.com/hypermodeinc/dgraph/issues/2749))\n- Keep maxDelay during timestamp req to 1s.\n- Updates to the version output info.\n  - Print the go version used to build Dgraph when running `dgraph version` and in the logs when Dgraph runs. ([#2768](https://github.com/hypermodeinc/dgraph/issues/2768))\n  - Print the Dgraph version when running live or bulk loader. ([#2736](https://github.com/hypermodeinc/dgraph/issues/2736))\n- Checking nil values in the equal function ([#2769](https://github.com/hypermodeinc/dgraph/issues/2769))\n- Optimize query: UID expansion. ([#2772](https://github.com/hypermodeinc/dgraph/issues/2772))\n- Split membership sync endpoints and remove PurgeTs endpoint. ([#2773](https://github.com/hypermodeinc/dgraph/issues/2773))\n- Set the Prefix option during iteration. ([#2780](https://github.com/hypermodeinc/dgraph/issues/2780))\n- Replace Zero's `/assignIds?num=10` endpoint with `/assign?what=uids&num=10` (see Added section).\n\n### Removed\n\n- Remove type hinting for JSON and RDF schema-less types. ([#2742](https://github.com/hypermodeinc/dgraph/issues/2742))\n- Remove deprecated logic that was found using vet. ([#2758](https://github.com/hypermodeinc/dgraph/issues/2758))\n- Remove assert for zero-length posting lists. ([#2763](https://github.com/hypermodeinc/dgraph/issues/2763))\n\n### Fixed\n\n- Restore schema states on error. ([#2730](https://github.com/hypermodeinc/dgraph/issues/2730))\n- Refactor bleve tokenizer usage ([#2738](https://github.com/hypermodeinc/dgraph/issues/2738)). Fixes [#2622](https://github.com/hypermodeinc/dgraph/issues/2622) and [#2601](https://github.com/hypermodeinc/dgraph/issues/2601).\n- Switch to Badger's Watermark library, which has a memory leak fix. (0cd9d82e)\n- Fix tiny typo. ([#2761](https://github.com/hypermodeinc/dgraph/issues/2761))\n- Fix Test: TestMillion.\n- Fix Jepsen bank test. ([#2764](https://github.com/hypermodeinc/dgraph/issues/2764))\n- Fix link to help_wanted. ([#2774](https://github.com/hypermodeinc/dgraph/issues/2774))\n- Fix invalid division by zero error. Fixes [#2733](https://github.com/hypermodeinc/dgraph/issues/2733).\n- Fix missing predicates after export and bulk load. Fixes [#2616](https://github.com/hypermodeinc/dgraph/issues/2616).\n- Handle various edge cases around cluster memberships. ([#2791](https://github.com/hypermodeinc/dgraph/issues/2791))\n- Change Encrypt to not re-encrypt password values. Fixes [#2765](https://github.com/hypermodeinc/dgraph/issues/2765).\n- Correctly parse facet types for both JSON and RDF formats. Previously the\n  parsing was handled differently depending on the input format. ([#2797](https://github.com/hypermodeinc/dgraph/issues/2797))\n\n## [1.0.10] - 2018-11-05\n[1.0.10]: https://github.com/hypermodeinc/dgraph/compare/v1.0.9...v1.0.10\n\n**Note: This release requires you to export and re-import data. We have changed the underlying storage format.**\n\n### Added\n\n- The Alter endpoint can be protected by an auth token that is set on the Dgraph Alphas via the `--auth_token` option. This can help prevent accidental schema updates and drop all operations. ([#2692](https://github.com/hypermodeinc/dgraph/issues/2692))\n- Optimize has function ([#2724](https://github.com/hypermodeinc/dgraph/issues/2724))\n- Expose the health check API via gRPC. ([#2721](https://github.com/hypermodeinc/dgraph/issues/2721))\n\n### Changed\n\n- Dgraph is relicensed to Apache 2.0. ([#2652](https://github.com/hypermodeinc/dgraph/issues/2652))\n- **Breaking change**. Rename Dgraph Server to Dgraph Alpha to clarify discussions of the Dgraph cluster. The top-level command `dgraph server` is now `dgraph alpha`. ([#2667](https://github.com/hypermodeinc/dgraph/issues/2667))\n- Prometheus metrics have been renamed for consistency for alpha, memory, and lru cache metrics. ([#2636](https://github.com/hypermodeinc/dgraph/issues/2636), [#2670](https://github.com/hypermodeinc/dgraph/issues/2670), [#2714](https://github.com/hypermodeinc/dgraph/issues/2714))\n- The `dgraph-converter` command is available as the subcommand `dgraph conv`. ([#2635](https://github.com/hypermodeinc/dgraph/issues/2635))\n- Updating protobuf version. ([#2639](https://github.com/hypermodeinc/dgraph/issues/2639))\n- Allow checkpwd to be aliased ([#2641](https://github.com/hypermodeinc/dgraph/issues/2641))\n- Better control excessive traffic to Dgraph ([#2678](https://github.com/hypermodeinc/dgraph/issues/2678))\n- Export format now exports on the Alpha receiving the export request. The naming scheme of the export files has been simplified.\n- Improvements to the `dgraph debug` tool that can be used to inspect the contents of the posting lists directory.\n- Bring in Badger updates ([#2697](https://github.com/hypermodeinc/dgraph/issues/2697))\n\n### Fixed\n\n- Make raft leader resume probing after snapshot crash ([#2707](https://github.com/hypermodeinc/dgraph/issues/2707))\n- **Breaking change:** Create a lot simpler sorted uint64 codec ([#2716](https://github.com/hypermodeinc/dgraph/issues/2716))\n- Increase the size of applyCh, to give Raft some breathing space. Otherwise, it fails to maintain quorum health.\n- Zero should stream last commit update\n- Send commit timestamps in order ([#2687](https://github.com/hypermodeinc/dgraph/issues/2687))\n- Query blocks with the same name are no longer allowed.\n- Fix out-of-range values in query parser. ([#2690](https://github.com/hypermodeinc/dgraph/issues/2690))\n\n## [1.0.9] - 2018-10-02\n[1.0.9]: https://github.com/hypermodeinc/dgraph/compare/v1.0.8...v1.0.9\n\n### Added\n\n- This version switches Badger Options to reasonable settings for p and w directories. This removes the need to expose `--badger.options` option and removes the `none` option from `--badger.vlog`. ([#2605](https://github.com/hypermodeinc/dgraph/issues/2605))\n- Add support for ignoring parse errors in bulk loader with the option `--ignore_error`. ([#2599](https://github.com/hypermodeinc/dgraph/issues/2599))\n- Introduction of new command `dgraph cert` to simplify initial TLS setup. See [TLS configuration docs](https://dgraph.io/docs/deploy/#tls-configuration) for more info.\n- Add `expand(_forward_)` and `expand(_reverse_)` to GraphQL+- query language. If `_forward_` is passed as an argument to `expand()`, all predicates at that level (minus any reverse predicates) are retrieved.\nIf `_reverse_` is passed as an argument to `expand()`, only the reverse predicates are retrieved.\n\n### Changed\n\n- Rename intern pkg to pb ([#2608](https://github.com/hypermodeinc/dgraph/issues/2608))\n\n### Fixed\n\n- Remove LinRead map logic from Dgraph ([#2570](https://github.com/hypermodeinc/dgraph/issues/2570))\n- Sanity length check for facets mostly.\n- Make has function correct w.r.t. transactions ([#2585](https://github.com/hypermodeinc/dgraph/issues/2585))\n- Increase the snapshot calculation interval, while decreasing the min number of entries required; so we take snapshots even when there's little activity.\n- Convert an assert during DropAll to inf retry. ([#2578](https://github.com/hypermodeinc/dgraph/issues/2578))\n- Fix a bug which caused all transactions to abort if `--expand_edge` was set to false. Fixes [#2547](https://github.com/hypermodeinc/dgraph/issues/2547).\n- Set the Applied index in Raft directly, so it does not pick up an index older than the snapshot. Ensure that it is in sync with the Applied watermark. Fixes [#2581](https://github.com/hypermodeinc/dgraph/issues/2581).\n- Pull in Badger updates. This also fixes the Unable to find log file, retry error.\n- Improve efficiency of readonly transactions by reusing the same read ts ([#2604](https://github.com/hypermodeinc/dgraph/issues/2604))\n- Fix a bug in Raft.Run loop. ([#2606](https://github.com/hypermodeinc/dgraph/issues/2606))\n- Fix a few issues regarding snapshot.Index for raft.Cfg.Applied. Do not overwrite any existing data when apply txn commits. Do not let CreateSnapshot fail.\n- Consider all future versions of the key as well, when deciding whether to write a key or not during txn commits. Otherwise, we'll end up in an endless loop of trying to write a stale key but failing to do so.\n- When testing inequality value vars with non-matching values, the response was sent as an error although it should return empty result if the query has correct syntax. ([#2611](https://github.com/hypermodeinc/dgraph/issues/2611))\n- Switch traces to glogs in worker/export.go ([#2614](https://github.com/hypermodeinc/dgraph/issues/2614))\n- Improve error handling for `dgraph live` for errors when processing RDF and schema files. ([#2596](https://github.com/hypermodeinc/dgraph/issues/2596))\n- Fix task conversion from bool to int that used uint32 ([#2621](https://github.com/hypermodeinc/dgraph/issues/2621))\n- Fix `expand(_all_)` in recurse queries ([#2600](https://github.com/hypermodeinc/dgraph/issues/2600)).\n- Add language aliases for broader support for full text indices. ([#2602](https://github.com/hypermodeinc/dgraph/issues/2602))\n\n## [1.0.8] - 2018-08-29\n[1.0.8]: https://github.com/hypermodeinc/dgraph/compare/v1.0.7...v1.0.8\n\n### Added\n\n- Introduce a new /assignIds HTTP endpoint in Zero, so users can allocate UIDs to nodes externally.\n- Add a new tool which retrieves and increments a counter by 1 transactionally. This can be used to test the sanity of Dgraph cluster.\n\n### Changed\n\n- This version introduces tracking of a few anonymous metrics to measure Dgraph adoption ([#2554](https://github.com/hypermodeinc/dgraph/issues/2554)). These metrics do not contain any specifically identifying information about the user, so most users can leave it on. This can be turned off by setting `--telemetry=false` flag if needed in Dgraph Zero.\n\n### Fixed\n\n- Correctly handle a list of type geo in json ([#2482](https://github.com/hypermodeinc/dgraph/issues/2482), [#2485](https://github.com/hypermodeinc/dgraph/issues/2485)).\n- Fix the graceful shutdown of Dgraph server, so a single Ctrl+C would now suffice to stop it.\n- Fix various deadlocks in Dgraph and set ConfState in Raft correctly ([#2548](https://github.com/hypermodeinc/dgraph/issues/2548)).\n- Significantly decrease the number of transaction aborts by using SPO as key for entity to entity connections. ([#2556](https://github.com/hypermodeinc/dgraph/issues/2556)).\n- Do not print error while sending Raft message by default. No action needs to be taken by the user, so it is set to V(3) level.\n\n## [1.0.7] - 2018-08-10\n[1.0.7]: https://github.com/hypermodeinc/dgraph/compare/v1.0.6...v1.0.7\n\n### Changed\n\n- Set the `--conc` flag in live loader default to 1, as a temporary fix to avoid tons of aborts.\n\n### Fixed\n\n- All Oracle delta streams are applied via Raft proposals. This deals better with network partition like edge-cases. [#2463](https://github.com/hypermodeinc/dgraph/issues/2463)\n- Fix deadlock in 10-node cluster convergence. Fixes [#2286](https://github.com/hypermodeinc/dgraph/issues/2286).\n- Make ReadIndex work safely. [#2469](https://github.com/hypermodeinc/dgraph/issues/2469)\n- Simplify snapshots, leader now calculates and proposes snapshots to the group. [#2475](https://github.com/hypermodeinc/dgraph/issues/2475).\n- Make snapshot streaming more robust. [#2487](https://github.com/hypermodeinc/dgraph/issues/2487)\n- Consolidate all txn tracking logic into Oracle, remove inSnapshot logic. [#2480](https://github.com/hypermodeinc/dgraph/issues/2480).\n- Bug fix in Badger, to stop panics when exporting.\n- Use PreVote to avoid leader change on a node join.\n- Fix a long-standing bug where `raft.Step` was being called via goroutines. It is now called serially.\n- Fix context deadline issues with proposals. [#2501](https://github.com/hypermodeinc/dgraph/issues/2501).\n\n## [1.0.6] - 2018-06-20\n[1.0.6]: https://github.com/hypermodeinc/dgraph/compare/v1.0.5...v1.0.6\n\n### Added\n\n* Support GraphQL vars as args for Regexp function. [#2353](https://github.com/hypermodeinc/dgraph/issues/2353)\n* Support GraphQL vars with filters. [#2359](https://github.com/hypermodeinc/dgraph/issues/2359)\n* Add JSON mutations to raw HTTP. [#2396](https://github.com/hypermodeinc/dgraph/issues/2396)\n\n### Fixed\n\n* Fix math >= evaluation. [#2365](https://github.com/hypermodeinc/dgraph/issues/2365)\n* Avoid race condition between mutation commit and predicate move. [#2392](https://github.com/hypermodeinc/dgraph/issues/2392)\n* Ability to correctly distinguish float from int in JSON. [#2398](https://github.com/hypermodeinc/dgraph/issues/2398)\n* Remove _dummy_ data key. [#2401](https://github.com/hypermodeinc/dgraph/issues/2401)\n* Serialize applying of Raft proposals. Concurrent application was complex and\n    cause of multiple bugs. [#2428](https://github.com/hypermodeinc/dgraph/issues/2428).\n* Improve Zero connections.\n* Fix bugs in snapshot move, refactor code and improve performance significantly. [#2440](https://github.com/hypermodeinc/dgraph/issues/2440), [#2442](https://github.com/hypermodeinc/dgraph/issues/2442)\n* Add error handling to GetNoStore. Fixes [#2373](https://github.com/hypermodeinc/dgraph/issues/2373).\n* Fix bugs in Bulk loader. [#2449](https://github.com/hypermodeinc/dgraph/issues/2449)\n* Posting List and Raft bug fixes. [#2457](https://github.com/hypermodeinc/dgraph/issues/2457)\n\n### Changed\n\n* Pull in Badger v1.5.2.\n* Raft storage is now done entirely via Badger. This reduces RAM\n    consumption by previously used MemoryStorage. [#2433](https://github.com/hypermodeinc/dgraph/issues/2433)\n* Trace how node.Run loop performs.\n* Allow tweaking Badger options.\n\n**Note:** This change modifies some flag names. In particular, Badger options\nare now exposed via flags named with `--badger.` prefix.\n\n## [1.0.5] - 2018-04-20\n[1.0.5]: https://github.com/hypermodeinc/dgraph/compare/v1.0.4...v1.0.5\n\n### Added\n\n* Option to have server side sequencing.\n* Ability to specify whitelisted IP addresses for admin actions.\n\n\n### Fixed\n\n* Fix bug where predicate with string type sometimes appeared as `_:uidffffffffffffffff` in exports.\n* Validate facet value should be according to the facet type supplied when mutating using N-Quads ([#2074](https://github.com/hypermodeinc/dgraph/issues/2074)).\n* Use `time.Equal` function for comparing predicates with `datetime`([#2219](https://github.com/hypermodeinc/dgraph/issues/2219)).\n* Skip `BitEmptyPosting` for `has` queries.\n* Return error from query if we don't serve the group for the attribute instead of crashing ([#2227](https://github.com/hypermodeinc/dgraph/issues/2227)).\n* Send `maxpending` in connection state to server ([#2236](https://github.com/hypermodeinc/dgraph/issues/2236)).\n* Fix bug in SP* transactions ([#2148](https://github.com/hypermodeinc/dgraph/issues/2148)).\n* Batch and send during snapshot to make snapshots faster.\n* Don't skip schema keys while calculating tablets served.\n* Fix the issue which could lead to snapshot getting blocked for a cluster with replicas ([#2266](https://github.com/hypermodeinc/dgraph/issues/2266)).\n* Dgraph server retries indefinitely to connect to Zero.\n* Allow filtering and regex queries for list types with lossy tokenizers.\n* Dgraph server segfault in worker package ([#2322](https://github.com/hypermodeinc/dgraph/issues/2322)).\n* Node crashes can lead to the loss of inserted triples ([#2290](https://github.com/hypermodeinc/dgraph/issues/2290)).\n\n\n### Changed\n\n* Cancel pending transactions for a predicate when predicate move is initiated.\n* Move Go client to its own repo at `dgraph-io/dgo`.\n* Make `expand(_all_)` return value and uid facets.\n* Add an option to specify a `@lang` directive in schema for predicates with lang tags.\n* Flag `memory_mb` has been changed to `lru_mb`. The default recommended value for `lru_mb` is\n  one-third of the total RAM available on the server.\n\n## [1.0.4] - 2018-03-09\n[1.0.4]: https://github.com/hypermodeinc/dgraph/compare/v1.0.3...v1.0.4\n\n### Added\n\n* Support for empty strings in query attributes.\n* Support GraphQL vars in first, offset and after at root.\n* Add support for query_edge_limit flag which can be used to limit number of results for shortest\n  path, recurse queries.\n* Make rebalance interval a flag in Zero.\n* Return latency information for mutation operations.\n* Support @upsert directive in schema.\n\n### Fixed\n\n* Issues with predicate deletion in a cluster.\n* Handle errors from posting.Get.\n* Correctly update commitTs while committing and startTs == deleteTs.\n* Error handling in abort http handler.\n* Get latest membership state from Zero if uid in mutation > maxLeaseId.\n* Fix bug in Mutate where mutated keys were not filled.\n* Update membership state if we can't find a leader while doing snapshot retrieval.\n* Make snapshotting more frequent, also try aborting long pending transactions.\n* Trim null character from end of strings before exporting.\n* Sort facets after parsing RDF's using bulk loader.\n* Fig bug in SyncIfDirty.\n* Fix fatal error due to TxnTooBig error.\n* Fix bug in dgraph live where some batches could be skipped on conflict error.\n* Fix a bug related to expand(_all_) queries.\n* Run cleanPredicate and proposeKeyValues sequentially.\n* Serialize connect requests in Zero.\n\n### Changed\n\n* Retry snapshot retrieval and join cluster indefinitely.\n* Make client directory optional in dgraph live.\n* Do snapshot in Zero in a goroutine so that Run loop isn't blocked.\n\n\n## [1.0.3] - 2018-02-08\n[1.0.3]: https://github.com/hypermodeinc/dgraph/compare/v1.0.2...v1.0.3\n\n### Added\n\n* Support for specifying blank nodes as part of JSON mutation.\n* `dgraph version` command to check current version.\n* `curl` to Docker image.\n* `moveTablet` endpoint to Zero to allow initiating a predicate move.\n\n### Fixed\n\n* Out of range error while doing `eq` query.\n* Reduce `maxBackOffDelay` to 10 sec so that leader election is faster after restart.\n* Fix bugs with predicate move where some data was not sent and schema not loaded properly on\n  replicas.\n* Fix the total number of RDF's processed when live loader ends.\n* Reindex data when schema is changed to list type to fix adding and deleting new data.\n* Correctly upate uidMatrix when facetOrder is supplied.\n* Inequality operator(`gt` and `lt`) result for non lossy tokenizers.\n\n### Changed\n\n* `--zero_addr` flag changed to `--zero` for `dgraph bulk` command.\n* Default ports for Zero have been changed `7080` => `5080`(grpc) and `8080` => `6080`(http).\n* Update badger version and how purging is done to fix CPU spiking when Dgraph is idle.\n* Print predicate name as part of the warning about long term for exact index.\n\n## [1.0.2] - 2018-01-17\n[1.0.2]: https://github.com/hypermodeinc/dgraph/compare/v1.0.1...v1.0.2\n\n### Fixed\n\n* Always return predicates of list type in an array.\n* Edges without facet values are also returned when performing sort on facet.\n* Don't derive schema while deleting edges.\n* Better error checking when accessing posting lists. Fixes bug where parts of\n  queries are sometimes omitted when system is under heavy load.\n* Fix missing error check in mutation handling when using CommitNow (gave incorrect error).\n* Fix bug where eq didn't work correctly for the fulltext index.\n* Fix race because of which `replicas` flag was not respected.\n* Fix bug with key copy during predicate move.\n* Fix race in merging keys keys from btree and badger iterator.\n* Fix snapshot retrieval for new nodes by retrieving it before joining the cluster.\n* Write schema at timestamp 1 in bulk loader.\n* Fix unexpected meta fatal error.\n* Fix groupby result incase the child being grouped open has multiple parents.\n\n### Changed\n\n* Remove StartTs field from `api.Operation`.\n* Print error message in live loader if its not ErrAborted. Also, stop using membership state and\ninstead use the address given by user.\n* Only send keys corresponding to data that was mutated.\n\n## [1.0.1] - 2017-12-20\n[1.0.1]: https://github.com/hypermodeinc/dgraph/compare/v1.0.0...v1.0.1\n\n### Fixed\n\n* Wait for background goroutines to finish in posting package on shutdown.\n* Return error if we cant parse the uid given in json input for mutations.\n* Don't remove `_predicate_` schema from disk during drop all.\n* Fix panic in expand(_all_)\n\n### Changed\n\n* Make sure at least one field is set while doing Alter.\n\n## [1.0.0] - 2017-12-18\n[1.0.0]: https://github.com/hypermodeinc/dgraph/compare/v0.9.3...v1.0.0\n\n### Added\n\n* Allow doing Mutate and Alter Operations using dgraph UI.\n* Provide option to user to ignore conflicts on index keys.\n\n### Fixed\n\n* Language tag parsing in queries now accepts digits (in line with RDF parsing).\n* Ensure that GraphQL variables are declared before use.\n* Export now uses correct blank node syntax.\n* Membership stream doesn't get stuck if node steps down as leader.\n* Fix issue where sets were not being returned after doing a S P * deletion when part of same\n  transaction.\n* Empty string values are stored as it is and no strings have special meaning now.\n* Correctly update order of facetMatrix when orderdesc/orderasc is applied.\n* Allow live and bulk loaders to work with multiple zeros.\n* Fix sorting with for predicates with multiple language tags.\n* Fix alias edge cases in normalize directive.\n* Allow reading new index key mutated as part of same transaction.\n* Fix bug in value log GC in badger.\n* SIGINT now forces a shutdown after 5 seconds when there are pending RPCs.\n\n### Changed\n\n* `DropAttr` now also removes the schema for the attribute (previously it just removed the edges).\n*  Tablet metadata is removed from zero after deletion of predicate.\n*  LRU size is changed dynamically now based on `max_memory_mb`\n*  Call RunValueLogGC for every GB increase in size of value logs. Upgrade vendored version of\n   Badger.\n*  Prohibit string to password schema change.\n*  Make purging less aggressive.\n*  Check if GraphQL Variable is defined before using.\n\n## [0.9.3] - 2017-12-01\n[0.9.3]: https://github.com/hypermodeinc/dgraph/compare/v0.9.2...v0.9.3\n\n### Added\n\n* Support for alias while asking for facets.\n* Support for general configuration via environment variables and configuration files.\n* `IgnoreIndexConflict` field in Txn which allows ignoring conflicts on index keys.\n\n### Fixed\n\n* `expand(_all_)` now correctly gives all language variants of a string.\n* Indexes now correctly maintained when deleting via `S * *` and `S P *`.\n* `expand(_all_)` now follows reverse edges.\n* Don't return uid for nodes without any children when requested through debug flag.\n* GraphQL variables for HTTP endpoints. Variable map can be set as a JSON\n  object using the `X-Dgraph-Vars` header.\n* Abort if CommitNow flag is set and the mutation fails.\n* Live loader treats subjects/predicates that look like UIDs as existing nodes\n  rather than new nodes.\n* Fix bug in `@groupby` queries where predicate was converted to lower case in queries.\n- Fix race condition in IsPeer. (#3432)\n\n### Changed\n\n* When showing a predicate with list type, only values without a language tag are shown. To get the values of the predicate that are tagged with a language, query the predicate with that language explicitly.\n* Validate the address advertised by dgraph nodes.\n* Store/Restore peer map on snapshot.\n* Fix rdfs per second reporting in live loader.\n* Fix bug in lru eviction.\n* Proto definitions are split into intern and api.\n\n## [0.9.2] - 2017-11-20\n[0.9.2]: https://github.com/hypermodeinc/dgraph/compare/v0.9.1...v0.9.2\n\n### Added\n\n* Support for removing dead node from quorum.\n* Support for alias in groupby queries.\n* Add DeleteEdges helper function for Go client.\n\n### Changed\n\n* Dgraph tries to abort long running/abandoned transactions.\n* Fix TLS flag parsing for Dgraph server and live loader.\n* Reduce dependencies for Go client.\n* `depth` and `loop` arguments should be inside @recurse().\n* Base36 encode keys that are part of TxnContext and are sent to the client.\n* Fix race condition in expand(_all_) queries.\n* Fix (--ui) flag not being parsed properly.\n\n## [0.9.1] - 2017-11-15\n[0.9.1]: https://github.com/hypermodeinc/dgraph/compare/v0.9.0...v0.9.1\n\n### Changed\n\n* Transaction HTTP API has been modified slightly. `start_ts` is now a path parameter instead of a header.\nFor `/commit` API, keys are passed in the body.\n\n## [0.9.0] - 2017-11-14\n[0.9.0]: https://github.com/hypermodeinc/dgraph/compare/v0.8.3...v0.9.0\n\n**The latest release has a lot of breaking changes but also brings powerful features like Transactions, support for CJK and custom tokenization.**\n\n### Added\n\n* Dgraph adds support for distributed ACID transactions (a blog post is in works). Transactions can be done via the Go, Java or HTTP clients (JS client coming). See [docs here](https://dgraph.io/docs/clients/).\n* Support for Indexing via [Custom tokenizers](https://dgraph.io/docs/query-language/#indexing-with-custom-tokenizers).\n* Support for CJK languages in the full-text index.\n\n### Changed\n\n#### Running Dgraph\n\n* We have consolidated all the `server`, `zero`, `live/bulk-loader` binaries into a single `dgraph` binary for convenience. Instructions for running Dgraph can be found in the [docs](https://dgraph.io/docs/get-started/).\n* For Dgraph server, Raft ids can be assigned automatically. A user can optionally still specify an ID, via `--idx` flag.\n* `--peer` flag which was used to specify another Zero instance’s IP address is being replaced by `--zero` flag to indicate the address corresponds to Dgraph zero.\n* `port`, `grpc_port` and `worker_port` flags have been removed from Dgraph server and Zero. The ports are:\n\n- Internal Grpc: 7080\n- HTTP: 8080\n- External Grpc: 9080 (Dgraph server only)\n\nUsers can set `port_offset` flag, to modify these fixed ports.\n\n#### Queries\n\n* Queries, mutations and schema updates are done through separate endpoints. **Queries can no longer have a mutation block.**\n* Queries can be done via `Query` Grpc endpoint (it was called `Run` before) or the `/query` HTTP handler.\n* `_uid_` is renamed to `uid`. So queries now need to request for `uid`. Example\n```\n{\n  bladerunner(func: eq(name@en, \"Blade Runner\")) {\n    uid\n    name@en\n  }\n}\n```\n* Facets response structure has been modified and is a lot flatter. Facet key is now `predicate|facet_name`.\nExamples for [Go client](https://godoc.org/github.com/dgraph-io/dgraph/client#example-Txn-Mutate-Facets) and [HTTP](https://dgraph.io/docs/query-language/#facets-edge-attributes).\n* Query latency is now returned as numeric (ns) instead of string.\n* [`Recurse`](https://dgraph.io/docs/query-language/#recurse-query) is now a directive. So queries with `recurse` keyword at root won't work anymore.\n* Syntax for [`count` at root](https://dgraph.io/docs/query-language/#count) has changed. You need to ask for `count(uid)`, instead of `count()`.\n\n#### Mutations\n\n* Mutations can only be done via `Mutate` Grpc endpoint or via [`/mutate` HTTP handler](https://dgraph.io/docs/clients/#transactions).\n* `Mutate` Grpc endpoint can be used to set/ delete JSON, or set/ delete a list of N-Quads and set/ delete raw RDF strings.\n* Mutation blocks don't require the mutation keyword anymore. Here is an example of the new syntax.\n```\n{\n  set {\n    <name> <is> <something> .\n    <hometown> <is> \"San Francisco\" .\n  }\n}\n```\n* [`Upsert`](https://dgraph.io/docs/v0.8.3/query-language/#upsert) directive and [mutation variables](https://dgraph.io/docs/v0.8.3/query-language/#variables-in-mutations) go away. Both these functionalities can now easily be achieved via transactions.\n\n#### Schema\n\n* `<*> <pred> <*>` operations, that is deleting a predicate can't be done via mutations anymore. They need to be done via `Alter` Grpc endpoint or via the `/alter` HTTP handler.\n* Drop all is now done via `Alter`.\n* Schema updates are now done via `Alter` Grpc endpoint or via `/alter` HTTP handler.\n\n#### Go client\n\n* `Query` Grpc endpoint returns response in JSON under `Json` field instead of protocol buffer. `client.Unmarshal` method also goes away from the Go client. Users can use `json.Unmarshal` for unmarshalling the response.\n* Response for predicate of type `geo` can be unmarshalled into a struct. Example [here](https://godoc.org/github.com/dgraph-io/dgraph/client#example-package--SetObject).\n* `Node` and `Edge` structs go away along with the `SetValue...` methods. We recommend using [`SetJson`](https://godoc.org/github.com/dgraph-io/dgraph/client#example-package--SetObject) and `DeleteJson` fields to do mutations.\n* Examples of how to use transactions using the client can be found at https://dgraph.io/docs/clients/#go.\n\n### Removed\n- Embedded dgraph goes away. We haven’t seen much usage of this feature. And it adds unnecessary maintenance overhead to the code.\n- Dgraph live no longer stores external ids. And hence the `xid` flag is gone.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.091796875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our community a\nharassment-free experience for everyone, regardless of age, body size, visible or invisible\ndisability, ethnicity, sex characteristics, gender identity and expression, level of experience,\neducation, socio-economic status, nationality, personal appearance, race, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and\nhealthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our community include:\n\n- Demonstrating empathy and kindness toward other people\n- Being respectful of differing opinions, viewpoints, and experiences\n- Giving and gracefully accepting constructive feedback\n- Accepting responsibility and apologizing to those affected by our mistakes, and learning from the\n  experience\n- Focusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\n- The use of sexualized language or imagery, and sexual attention or advances of any kind\n- Trolling, insulting or derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or email address, without their\n  explicit permission\n- Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of acceptable behavior\nand will take appropriate and fair corrective action in response to any behavior that they deem\ninappropriate, threatening, offensive, or harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits,\ncode, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and\nwill communicate reasons for moderation decisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when an individual is\nofficially representing the community in public spaces. Examples of representing our community\ninclude using an official e-mail address, posting via an official social media account, or acting as\nan appointed representative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community\nleaders responsible for enforcement at hello@hypermode.com. All complaints will be reviewed and\ninvestigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the reporter of any\nincident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining the consequences for\nany action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed unprofessional or\nunwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing clarity around the\nnature of the violation and an explanation of why the behavior was inappropriate. A public apology\nmay be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of actions.\n\n**Consequence**: A warning with consequences for continued behavior. No interaction with the people\ninvolved, including unsolicited interaction with those enforcing the Code of Conduct, for a\nspecified period of time. This includes avoiding interactions in community spaces as well as\nexternal channels like social media. Violating these terms may lead to a temporary or permanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including sustained inappropriate\nbehavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public communication with the\ncommunity for a specified period of time. No public or private interaction with the people involved,\nincluding unsolicited interaction with those enforcing the Code of Conduct, is allowed during this\nperiod. Violating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community standards, including\nsustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement\nof classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 9.8076171875,
          "content": "# Contributing to Dgraph\n\n* [Getting Started](#getting-started)\n* [Setting Up the Development Environment](#setting-up-the-development-environment)\n   * [Prerequisites](#prerequisites)\n   * [Setup Dgraph from source repo](#setup-dgraph-from-source-repo)\n   * [Setup Badger from source repo](#setup-badger-from-source-repo)\n   * [Protocol buffers](#protocol-buffers)\n   * [Build Dgraph](#build-dgraph)\n   * [Build Docker Image](#build-docker-image)\n   * [Testing](#testing)\n* [Doing a release](#doing-a-release)\n* [Contributing](#contributing)\n   * [Guidelines](#guidelines)\n   * [Code style](#code-style)\n   * [License Header](#license-header)\n   * [Signed Commits](#signed-commits)\n\n## Getting Started\n\n- Read the [Getting Started Guide](https://dgraph.io/docs/get-started/)\n- [Take the Dgraph tour](https://dgraph.io/tour/)\n\n## Setting Up the Development Environment\n\n### Prerequisites\n\n- Install [Git](https://git-scm.com/) (may be already installed on your system, or available through your OS package manager)\n- Install [Make](https://www.gnu.org/software/make/) (may be already installed on your system, or available through your OS package manager)\n- Install [Docker](https://docs.docker.com/install/) and [Docker Compose](https://docs.docker.com/compose/install/).\n- [Install Go 1.13 or above](https://golang.org/doc/install).\n\n### Setup Dgraph from source repo\n\nIt's best to put the Dgraph repo somewhere in `$GOPATH`.\n\n    $ mkdir -p \"$(go env GOPATH)/src/github.com/dgraph-io\"\n    $ cd \"$(go env GOPATH)/src/github.com/dgraph-io\"\n    $ git clone https://github.com/hypermodeinc/dgraph.git\n    $ cd ./dgraph\n    $ make install\n\nThis will put the source code in a Git repo under `$GOPATH/src/github.com/dgraph-io/dgraph` and compile the binaries to `$GOPATH/bin`.\n\n### Setup Badger from source repo\n\nDgraph source repo vendors its own version of Badger. If you are just working on Dgraph, you do not necessarily need to check out Badger from its own repo. However, if you want to contribute to Badger as well, you will need to check it out from its own repo.\n\n\n    $ go get -t -v github.com/dgraph-io/badger\n\nThis will put the source code in a Git repo under `$GOPATH/src/github.com/dgraph-io/badger`.\n\n### Protocol buffers\n\nWe use [protocol buffers](https://developers.google.com/protocol-buffers/) to serialize data between our server and the Go client and also for inter-worker communication. If you make any changes to the `.proto` files, you would have to recompile them. \n\nInstall the `protoc` compiler which is required for compiling proto files used for gRPC communication. Get `protoc` version 3.0.0 or above from [GitHub releases page](https://github.com/google/protobuf/releases/latest) (look for the binary releases at the bottom, or compile from sources [following the instructions](https://github.com/google/protobuf/tree/main/src)).\n\nWe use [gogo protobuf](https://github.com/gogo/protobuf) in Dgraph. To get the protocol buffer compiler plugin from gogo run\n\n\n    $ go get -u github.com/gogo/protobuf/protoc-gen-gofast\n\nTo compile the proto file using the `protoc` plugin and the gogo compiler plugin run the command `make regenerate` from within the directory containing the `.proto` files.\n\n\n    $ cd protos\n    $ make regenerate\n\nThis should generate the required `.pb.go` file.\n\n### Build Dgraph\n\nYou can build Dgraph using `make dgraph` or `make install`\nwhich add the version information to the binary.\n\n- `make dgraph`: Creates a `dgraph` binary at `./dgraph/dgraph`\n- `make install`: Creates a `dgraph` binary at `$GOPATH/bin/dgraph`. You can add\n  `$GOPATH/bin` to your `$PATH`.\n\n```text\n$ make install\n$ dgraph version\n[Decoder]: Using assembly version of decoder\n\nDgraph version   : v1.1.1\nDgraph SHA-256   : 97326c9328aff93851290b12d846da81a7da5b843e97d7c63f5d79091b9063c1\nCommit SHA-1     : 8994a57\nCommit timestamp : 2019-12-16 18:24:50 -0800\nBranch           : HEAD\nGo version       : go1.13.5\n\nFor Dgraph official documentation, visit https://dgraph.io/docs/.\nFor discussions about Dgraph     , visit https://discuss.dgraph.io.\n\nLicensed variously under the Apache Public License 2.0 and Dgraph Community License.\nCopyright 2015-2025 Hypermode Inc.\n```\n\n### Build Docker Image\n\n```sh\nmake image\n```\n\nTo build a test Docker image from source, use `make image`. This builds a Dgraph\nbinary using `make dgraph` and creates a Docker image named `dgraph/dgraph`\ntagged as the current branch name. The image only contains the `dgraph` binary.\n\nExample:\n```\n$ git rev-parse --abbrev-ref HEAD # current branch\nmain\n$ make image\nSuccessfully built c74d564d911f\nSuccessfully tagged dgraph/dgraph:main\n$ $ docker run --rm -it dgraph/dgraph:main dgraph version\n[Decoder]: Using assembly version of decoder\n\nDgraph version   : v1.1.1-1-g5fa139a0e\nDgraph SHA-256   : 31f8c9324eb90a6f4659066937fcebc67bbca251c20b9da0461c2fd148187689\nCommit SHA-1     : 5fa139a0e\nCommit timestamp : 2019-12-16 20:52:06 -0800\nBranch           : main\nGo version       : go1.13.5\n\nFor Dgraph official documentation, visit https://dgraph.io/docs/.\nFor discussions about Dgraph     , visit https://discuss.dgraph.io.\n\nLicensed variously under the Apache Public License 2.0 and Dgraph Community License.\nCopyright 2015-2025 Hypermode Inc.\n```\n\nFor release images, follow [Doing a release](#doing-a-release). It creates\nDocker images that contains `dgraph` and `badger` commands.\n\n### Testing\n\n#### Dgraph\n1. Change directory to t directory. \n2. If all packages need to be tested, run\n      make test\n   If only a specific package needs to be tested, run\n      make test args=\"--pkg=desired_package_name\"\n\n      example 1: make test args=\"--pkg=tok\" \n      example 2: make test args=\"--pkg=tlstest/acl\"\n      \n      The first example will run all the tests in the 'tok' directory (if there are any)\n      The second one will run all the test in the acl subfolder of the tlstest directory.\n      Note: running make test args=\"--pkg=tlstest\" will return an error saying no packages \n      found because all the tests in the tlstest package are in subdirectories of the package. \n      So the subdirectories must be specified as shown in example 2.\n\nTests should be written in Go and use the Dgraph cluster set up in `dgraph/docker-compose.yml`\nwhenever possible. If the functionality being tested requires a different cluster setup (e.g.\ndifferent commandline options), the `*_test.go` files should be put in a separate directory that\nalso contains a `docker-compose.yml` to set up the cluster as needed.\n\n **IMPORTANT:** All containers should be labeled with `cluster: test` so they may be correctly\n restarted and cleaned up by the test script.\n\n#### Badger\nRun `go test` in the root folder.\n\n\n    $ go test ./...\n    ok      github.com/dgraph-io/badger     24.853s\n    ok      github.com/dgraph-io/badger/skl 0.027s\n    ok      github.com/dgraph-io/badger/table       0.478s\n    ok      github.com/dgraph-io/badger/y   0.004s\n\n## Contributing\n\n### Guidelines\n\nOver years of writing big scalable systems, we are convinced that striving for simplicity wherever possible is the only way to build robust systems. This simplicity could be in design, could be in coding, or could be achieved by rewriting an entire module, that you may have painstakingly finished yesterday.\n\n- **Pull requests are welcome**, as long as you're willing to put in the effort to meet the guidelines. After you fork dgraph, create your pull request against our `main` branch\n- Contributors are required to execute our [Individual Contributor License Agreement](https://cla-assistant.io/dgraph-io/dgraph)\n- Aim for clear, well written, maintainable code\n- Simple and minimal approach to features, like Go\n- New features must include passing unit tests, and integration tests when appropriate\n- Refactoring existing code now for better performance, better readability or better testability wins over adding a new feature\n- Don't add a function to a module that you don't use right now, or doesn't clearly enable a planned functionality\n- Don't ship a half done feature, which would require significant alterations to work fully\n- Avoid [Technical debt](https://en.wikipedia.org/wiki/Technical_debt) like cancer\n- Leave the code cleaner than when you began\n\n### Code style\n- We're following [Go Code Review](https://github.com/golang/go/wiki/CodeReviewComments)\n- Use `go fmt` to format your code before committing\n- If you see *any code* which clearly violates the style guide, please fix it and send a pull request. No need to ask for permission\n- Avoid unnecessary vertical spaces. Use your judgment or follow the code review comments\n- Wrap your code and comments to 120 characters, unless doing so makes the code less legible\n\n### License Header\n\nEvery new source file must begin with a license header.\n\nMost of Dgraph, Badger, and the Dgraph clients (dgo, dgraph-js, pydgraph and dgraph4j) are licensed under the Apache 2.0 license:\n\n    /*\n     * Copyright 2016-2025 Hypermode Inc. and Contributors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *    http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n\n### Signed Commits\n\nSigned commits help in verifying the authenticity of the contributor. We use signed commits in Dgraph, and we prefer it, though it's not compulsory to have signed commits. This is a recommended step for people who intend to contribute to Dgraph on a regular basis.\n\nFollow instructions to generate and setup GPG keys for signing code commits on this [Github Help page](https://help.github.com/articles/signing-commits-with-gpg/).\n\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 0.62890625,
          "content": "## Dgraph Licensing\n\nCopyright 2016-2025 Hypermode Inc.\n\nSource code in this repository is variously licensed under the Apache Public\nLicense 2.0 (APL) and the Dgraph Community License (DCL). A copy of each license\ncan be found in the [licenses](./licenses/) directory.\n\nUnless required by applicable law or agreed to in writing, software distributed\nunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\nCONDITIONS OF ANY KIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations under the License.\n\n## Trademark\n\nDgraph is a registered trademark of Hypermode Inc.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.5947265625,
          "content": "#\n# Copyright 2025 Hypermode Inc. and Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nBUILD          ?= $(shell git rev-parse --short HEAD)\nBUILD_CODENAME ?= dgraph\nBUILD_DATE     ?= $(shell git log -1 --format=%ci)\nBUILD_BRANCH   ?= $(shell git rev-parse --abbrev-ref HEAD)\nBUILD_VERSION  ?= $(shell git describe --always --tags)\n\nGOPATH         ?= $(shell go env GOPATH)\n\n######################\n# Build & Release Parameters\n# DGRAPH_VERSION flag facilitates setting the dgraph version\n# DGRAPH_VERSION flag is used for our release pipelines, where it is set to our release version number automatically\n# DGRAPH_VERSION defaults to local, if not specified, for development purposes\n######################\nDGRAPH_VERSION ?= local\n\n.PHONY: all\nall: dgraph\n\n.PHONY: dgraph\ndgraph:\n\t$(MAKE) -w -C $@ all\n\n.PHONY: dgraph-coverage\ndgraph-coverage:\n\t$(MAKE) -w -C dgraph test-coverage-binary\n\n.PHONY: oss\noss:\n\t$(MAKE) BUILD_TAGS=oss\n\n.PHONY: version\nversion:\n\t@echo Dgraph: ${BUILD_VERSION}\n\t@echo Build: ${BUILD}\n\t@echo Codename: ${BUILD_CODENAME}\n\t@echo Build date: ${BUILD_DATE}\n\t@echo Branch: ${BUILD_BRANCH}\n\t@echo Go version: $(shell go version)\n\n.PHONY: install\ninstall:\n\t@echo \"Installing Dgraph...\"; \\\n\t\t$(MAKE) -C dgraph install; \\\n\n.PHONY: install_oss oss_install\ninstall_oss oss_install:\n\t$(MAKE) BUILD_TAGS=oss,jemalloc install\n\n.PHONY: uninstall\nuninstall:\n\t@echo \"Uninstalling Dgraph ...\"; \\\n\t\t$(MAKE) -C dgraph uninstall; \\\n\n.PHONY: test\ntest: docker-image\n\t@mv dgraph/dgraph ${GOPATH}/bin/dgraph\n\t@$(MAKE) -C t test\n\n.PHONY: image-local local-image\nimage-local local-image:\n\t@GOOS=linux GOARCH=amd64 $(MAKE) dgraph\n\t@mkdir -p linux\n\t@mv ./dgraph/dgraph ./linux/dgraph\n\t@docker build -f contrib/Dockerfile -t dgraph/dgraph:local .\n\t@rm -r linux\n\n.PHONY: docker-image\ndocker-image: dgraph\n\t@mkdir -p linux\n\t@cp ./dgraph/dgraph ./linux/dgraph\n\tdocker build -f contrib/Dockerfile -t dgraph/dgraph:$(DGRAPH_VERSION) .\n\n.PHONY: docker-image-standalone\ndocker-image-standalone: dgraph docker-image\n\t@mkdir -p linux\n\t@cp ./dgraph/dgraph ./linux/dgraph\n\t$(MAKE) -w -C contrib/standalone all DOCKER_TAG=$(DGRAPH_VERSION) DGRAPH_VERSION=$(DGRAPH_VERSION)\n\n.PHONY: coverage-docker-image\ncoverage-docker-image: dgraph-coverage\n\t@mkdir -p linux\n\t@cp ./dgraph/dgraph ./linux/dgraph\n\tdocker build -f contrib/Dockerfile -t dgraph/dgraph:$(DGRAPH_VERSION) .\n\n# build and run dependencies for ubuntu linux\n.PHONY: linux-dependency\nlinux-dependency:\n\tsudo apt-get update\n\tsudo apt-get -y upgrade\n\tsudo apt-get -y install ca-certificates\n\tsudo apt-get -y install curl\n\tsudo apt-get -y\tinstall gnupg\n\tsudo apt-get -y install lsb-release\n\tsudo apt-get -y install build-essential\n\tsudo apt-get -y install protobuf-compiler\n\n.PHONY: help\nhelp:\n\t@echo\n\t@echo Build commands:\n\t@echo \"  make [all]     - Build all targets [EE]\"\n\t@echo \"  make oss       - Build all targets [OSS]\"\n\t@echo \"  make dgraph    - Build dgraph binary\"\n\t@echo \"  make install   - Install all targets\"\n\t@echo \"  make uninstall - Uninstall known targets\"\n\t@echo \"  make version   - Show current build info\"\n\t@echo \"  make help      - This help\"\n\t@echo \"  make test      - Make local image and run t.go\"\n\t@echo\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.326171875,
          "content": "<picture>\n      <source \n        srcset=\"/logo-dark.png\"\n        media=\"(prefers-color-scheme: dark)\"\n      />\n      <source\n        srcset=\"/logo.png\"\n        media=\"(prefers-color-scheme: light), (prefers-color-scheme: no-preference)\"\n      />\n      <img alt=\"Dgraph Logo\" src=\"/logo.png\">\n</picture>\n\n**The Only Native GraphQL Database With A Graph Backend.**\n\n[![Wiki](https://img.shields.io/badge/res-wiki-blue.svg)](https://dgraph.io/docs/)\n[![ci-dgraph-tests](https://github.com/hypermodeinc/dgraph/actions/workflows/ci-dgraph-tests.yml/badge.svg)](https://github.com/hypermodeinc/dgraph/actions/workflows/ci-dgraph-tests.yml)\n[![ci-dgraph-load-tests](https://github.com/hypermodeinc/dgraph/actions/workflows/ci-dgraph-load-tests.yml/badge.svg)](https://github.com/hypermodeinc/dgraph/actions/workflows/ci-dgraph-load-tests.yml)\n[![ci-golang-lint](https://github.com/hypermodeinc/dgraph/actions/workflows/ci-golang-lint.yml/badge.svg)](https://github.com/hypermodeinc/dgraph/actions/workflows/ci-golang-lint.yml)\n[![ci-aqua-security-trivy-tests](https://github.com/hypermodeinc/dgraph/actions/workflows/ci-aqua-security-trivy-tests.yml/badge.svg)](https://github.com/hypermodeinc/dgraph/actions/workflows/ci-aqua-security-trivy-tests.yml)\n[![Coverage Status](https://coveralls.io/repos/github/hypermodeinc/dgraph/badge.svg?branch=main)](https://coveralls.io/github/hypermodeinc/dgraph?branch=main)\n[![Go Report Card](https://goreportcard.com/badge/github.com/hypermodeinc/dgraph)](https://goreportcard.com/report/github.com/hypermodeinc/dgraph)\n[![TODOs](https://badgen.net/https/api.tickgit.com/badgen/github.com/hypermodeinc/dgraph/main)](https://www.tickgit.com/browse?repo=github.com/hypermodeinc/dgraph&branch=main)\n\nDgraph is a horizontally scalable and distributed GraphQL database with a graph backend. It provides ACID transactions, consistent replication, and linearizable reads. It's built from the ground up to perform \na rich set of queries. Being a native GraphQL database, it tightly controls how the\ndata is arranged on disk to optimize for query performance and throughput,\nreducing disk seeks and network calls in a cluster.\n\n\nDgraph's goal is to provide Google production-level scale and throughput,\nwith low enough latency to serve real-time user queries over terabytes of structured data.\nDgraph supports [GraphQL query syntax](https://dgraph.io/docs/main/query-language/), and responds in [JSON](http://www.json.org/) and [Protocol Buffers](https://developers.google.com/protocol-buffers/) over [GRPC](http://www.grpc.io/) and HTTP. Dgraph is written using the Go Programming Language.\n\n## Status\n\nDgraph is at [version v24.0.5][rel] and is production-ready. Apart from the vast open source community, it is being used in\nproduction at multiple Fortune 500 companies, and by\n[Intuit Katlas](https://github.com/intuit/katlas) and [VMware Purser](https://github.com/vmware/purser). A hosted version of Dgraph is available at [https://cloud.dgraph.io](https://cloud.dgraph.io).\n\n[rel]: https://github.com/hypermodeinc/dgraph/releases/tag/v24.0.5\n\n## Supported Platforms\n\nDgraph officially supports the Linux/amd64 architecture. Support for Linux/arm64 is in development. In order to take advantage of memory performance gains and other architecture-specific advancements in Linux, we dropped official support Mac and Windows in 2021, see [this blog post](https://discuss.dgraph.io/t/dropping-support-for-windows-and-mac/12913) for more information. You can still build and use Dgraph on other platforms (for live or bulk loading for instance), but support for platforms other than Linux/amd64 is not available.\n\nRunning Dgraph in a Docker environment is the recommended testing and deployment method.\n\n## Install with Docker\n\nIf you're using Docker, you can use the [official Dgraph image](https://hub.docker.com/r/dgraph/dgraph/).\n\n```bash\ndocker pull dgraph/dgraph:latest\n```\n\nFor more information on a variety Docker deployment methods including Docker Compose and Kubernetes, see the [docs](https://dgraph.io/docs/installation/single-host-setup/#docker).\n\n## Run a Quick Standalone Cluster\n\n```\ndocker run -it -p 8080:8080 -p 9080:9080 -v ~/dgraph:/dgraph dgraph/standalone:latest\n```\n\n## Install from Source\n\nIf you want to install from source, install Go 1.19+ or later and the following dependencies:\n\n#### Ubuntu\n\n```bash\nsudo apt-get update\nsudo apt-get install build-essential\n```\n\n### Build and Install\n\nThen clone the Dgraph repository and use `make install` to install the Dgraph binary in the directory named by the GOBIN environment variable, which defaults to $GOPATH/bin or $HOME/go/bin if the GOPATH environment variable is not set. \n\n```bash\ngit clone https://github.com/hypermodeinc/dgraph.git\ncd dgraph\nmake install\n```\n\n## Get Started\n**To get started with Dgraph, follow:**\n\n- Installation to queries in 3 steps via [dgraph.io/docs/](https://dgraph.io/docs/get-started/).\n- A longer interactive tutorial via [dgraph.io/tour/](https://dgraph.io/tour/).\n- Tutorial and\npresentation videos on [YouTube channel](https://www.youtube.com/channel/UCghE41LR8nkKFlR3IFTRO4w/featured).\n\n## Is Dgraph the right choice for me?\n\n- Do you have more than 10 SQL tables connected via foreign keys?\n- Do you have sparse data, which doesn't elegantly fit into SQL tables?\n- Do you want a simple and flexible schema, which is readable and maintainable\n  over time?\n- Do you care about speed and performance at scale?\n\nIf the answers to the above are YES, then Dgraph would be a great fit for your\napplication. Dgraph provides NoSQL like scalability while providing SQL like\ntransactions and the ability to select, filter, and aggregate data points. It\ncombines that with distributed joins, traversals, and graph operations, which\nmakes it easy to build applications with it.\n\n## Dgraph compared to other graph DBs\n\n| Features | Dgraph | Neo4j | Janus Graph |\n| -------- | ------ | ----- | ----------- |\n| Architecture | Sharded and Distributed | Single server (+ replicas in enterprise) | Layer on top of other distributed DBs |\n| Replication | Consistent | None in community edition (only available in enterprise) | Via underlying DB |\n| Data movement for shard rebalancing | Automatic | Not applicable (all data lies on each server) | Via underlying DB |\n| Language | GraphQL inspired | Cypher, Gremlin | Gremlin |\n| Protocols | Grpc / HTTP + JSON / RDF | Bolt + Cypher | Websocket / HTTP |\n| Transactions | Distributed ACID transactions | Single server ACID transactions | Not typically ACID\n| Full-Text Search | Native support | Native support | Via External Indexing System |\n| Regular Expressions | Native support | Native support | Via External Indexing System |\n| Geo Search | Native support | External support only | Via External Indexing System |\n| License | Apache 2.0 | GPL v3 | Apache 2.0 |\n\n## Users\n- **Dgraph official documentation is present at [dgraph.io/docs/](https://dgraph.io/docs/).**\n- For feature requests or questions, visit\n  [https://discuss.dgraph.io](https://discuss.dgraph.io).\n- Check out [the demo at dgraph.io](http://dgraph.io) and [the visualization at\n  play.dgraph.io](http://play.dgraph.io/).\n- Please see [releases tab](https://github.com/hypermodeinc/dgraph/releases) to\n  find the latest release and corresponding release notes.\n- [See the Roadmap](https://discuss.dgraph.io/t/product-roadmap-2020/8479) for a list of\n  working and planned features.\n- Read about the latest updates from the Dgraph team [on our\n  blog](https://open.dgraph.io/).\n- Watch tech talks on our [YouTube\n  channel](https://www.youtube.com/channel/UCghE41LR8nkKFlR3IFTRO4w/featured).\n\n## Developers\n- See a list of issues [that we need help with](https://github.com/hypermodeinc/dgraph/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22).\n- Please see [Contributing to Dgraph](https://github.com/hypermodeinc/dgraph/blob/main/CONTRIBUTING.md) for guidelines on contributions.\n\n## Client Libraries\nThe Dgraph team maintains several [officially supported client libraries](https://dgraph.io/docs/clients/). There are also libraries contributed by the community [unofficial client libraries](https://dgraph.io/docs/clients#unofficial-dgraph-clients).\n\n##\n\n## Contact\n- Please use [discuss.dgraph.io](https://discuss.dgraph.io) for documentation, questions, feature requests and discussions.\n- Please use [discuss.dgraph.io](https://discuss.dgraph.io/c/issues/dgraph/38) for filing bugs or feature requests.\n- Follow us on Twitter [@dgraphlabs](https://twitter.com/dgraphlabs).\n"
        },
        {
          "name": "algo",
          "type": "tree",
          "content": null
        },
        {
          "name": "check_upgrade",
          "type": "tree",
          "content": null
        },
        {
          "name": "chunker",
          "type": "tree",
          "content": null
        },
        {
          "name": "codec",
          "type": "tree",
          "content": null
        },
        {
          "name": "compose",
          "type": "tree",
          "content": null
        },
        {
          "name": "conn",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "dgraph",
          "type": "tree",
          "content": null
        },
        {
          "name": "dgraphapi",
          "type": "tree",
          "content": null
        },
        {
          "name": "dgraphtest",
          "type": "tree",
          "content": null
        },
        {
          "name": "dql",
          "type": "tree",
          "content": null
        },
        {
          "name": "edgraph",
          "type": "tree",
          "content": null
        },
        {
          "name": "ee",
          "type": "tree",
          "content": null
        },
        {
          "name": "filestore",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 7.4267578125,
          "content": "module github.com/hypermodeinc/dgraph/v24\n\ngo 1.22.7\n\nrequire (\n\tcontrib.go.opencensus.io/exporter/jaeger v0.2.1\n\tcontrib.go.opencensus.io/exporter/prometheus v0.4.2\n\tgithub.com/DataDog/opencensus-go-exporter-datadog v0.0.0-20220622145613-731d59e8b567\n\tgithub.com/HdrHistogram/hdrhistogram-go v1.1.2\n\tgithub.com/IBM/sarama v1.44.0\n\tgithub.com/Masterminds/semver/v3 v3.3.1\n\tgithub.com/blevesearch/bleve/v2 v2.4.4\n\tgithub.com/dgraph-io/badger/v4 v4.5.0\n\tgithub.com/dgraph-io/dgo/v240 v240.1.0\n\tgithub.com/dgraph-io/gqlgen v0.13.2\n\tgithub.com/dgraph-io/gqlparser/v2 v2.2.2\n\tgithub.com/dgraph-io/graphql-transport-ws v0.0.0-20210511143556-2cef522f1f15\n\tgithub.com/dgraph-io/ristretto/v2 v2.0.1\n\tgithub.com/dgraph-io/simdjson-go v0.3.0\n\tgithub.com/dgryski/go-farm v0.0.0-20240924180020-3414d57e47da\n\tgithub.com/dgryski/go-groupvarint v0.0.0-20230630160417-2bfb7969fb3c\n\tgithub.com/docker/docker v27.4.1+incompatible\n\tgithub.com/docker/go-connections v0.5.0\n\tgithub.com/dustin/go-humanize v1.0.1\n\tgithub.com/getsentry/sentry-go v0.30.0\n\tgithub.com/go-jose/go-jose/v4 v4.0.4\n\tgithub.com/go-sql-driver/mysql v1.8.1\n\tgithub.com/golang-jwt/jwt/v5 v5.2.1\n\tgithub.com/golang/geo v0.0.0-20230421003525-6adc56603217\n\tgithub.com/golang/glog v1.2.3\n\tgithub.com/golang/snappy v0.0.4\n\tgithub.com/google/codesearch v1.2.0\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/gorilla/websocket v1.5.3\n\tgithub.com/graph-gophers/graphql-go v1.5.0\n\tgithub.com/hashicorp/vault/api v1.15.0\n\tgithub.com/minio/minio-go/v6 v6.0.57\n\tgithub.com/mitchellh/panicwrap v1.0.0\n\tgithub.com/paulmach/go.geojson v1.5.0\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/pkg/profile v1.7.0\n\tgithub.com/prometheus/client_golang v1.20.5\n\tgithub.com/soheilhy/cmux v0.1.5\n\tgithub.com/spf13/cast v1.3.1\n\tgithub.com/spf13/cobra v1.8.1\n\tgithub.com/spf13/pflag v1.0.5\n\tgithub.com/spf13/viper v1.7.1\n\tgithub.com/stretchr/testify v1.10.0\n\tgithub.com/twpayne/go-geom v1.5.7\n\tgithub.com/viterin/vek v0.4.2\n\tgithub.com/xdg/scram v1.0.5\n\tgo.etcd.io/etcd/raft/v3 v3.5.17\n\tgo.opencensus.io v0.24.0\n\tgo.uber.org/zap v1.27.0\n\tgolang.org/x/crypto v0.31.0\n\tgolang.org/x/exp v0.0.0-20240909161429-701f63a606c0\n\tgolang.org/x/mod v0.22.0\n\tgolang.org/x/net v0.33.0\n\tgolang.org/x/sync v0.10.0\n\tgolang.org/x/sys v0.28.0\n\tgolang.org/x/term v0.27.0\n\tgolang.org/x/text v0.21.0\n\tgolang.org/x/tools v0.28.0\n\tgoogle.golang.org/grpc v1.69.2\n\tgoogle.golang.org/protobuf v1.36.1\n\tgopkg.in/yaml.v2 v2.4.0\n)\n\nrequire (\n\tfilippo.io/edwards25519 v1.1.0 // indirect\n\tgithub.com/DataDog/datadog-go v3.5.0+incompatible // indirect\n\tgithub.com/Microsoft/go-winio v0.6.1 // indirect\n\tgithub.com/agnivade/levenshtein v1.0.3 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/bits-and-blooms/bitset v1.17.0 // indirect\n\tgithub.com/blevesearch/bleve_index_api v1.1.12 // indirect\n\tgithub.com/blevesearch/geo v0.1.20 // indirect\n\tgithub.com/blevesearch/go-porterstemmer v1.0.3 // indirect\n\tgithub.com/blevesearch/segment v0.9.1 // indirect\n\tgithub.com/blevesearch/snowballstem v0.9.0 // indirect\n\tgithub.com/blevesearch/upsidedown_store_api v1.0.2 // indirect\n\tgithub.com/cenkalti/backoff/v4 v4.3.0 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/chewxy/math32 v1.10.1 // indirect\n\tgithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc // indirect\n\tgithub.com/distribution/reference v0.5.0 // indirect\n\tgithub.com/docker/go-units v0.5.0 // indirect\n\tgithub.com/eapache/go-resiliency v1.7.0 // indirect\n\tgithub.com/eapache/go-xerial-snappy v0.0.0-20230731223053-c322873962e3 // indirect\n\tgithub.com/eapache/queue v1.1.0 // indirect\n\tgithub.com/felixge/fgprof v0.9.3 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/fsnotify/fsnotify v1.7.0 // indirect\n\tgithub.com/go-kit/log v0.2.1 // indirect\n\tgithub.com/go-logfmt/logfmt v0.5.1 // indirect\n\tgithub.com/go-logr/logr v1.4.2 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/golang/protobuf v1.5.4 // indirect\n\tgithub.com/google/flatbuffers v24.3.25+incompatible // indirect\n\tgithub.com/google/pprof v0.0.0-20211214055906-6f57359322fd // indirect\n\tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n\tgithub.com/hashicorp/go-cleanhttp v0.5.2 // indirect\n\tgithub.com/hashicorp/go-multierror v1.1.1 // indirect\n\tgithub.com/hashicorp/go-retryablehttp v0.7.7 // indirect\n\tgithub.com/hashicorp/go-rootcerts v1.0.2 // indirect\n\tgithub.com/hashicorp/go-secure-stdlib/parseutil v0.1.6 // indirect\n\tgithub.com/hashicorp/go-secure-stdlib/strutil v0.1.2 // indirect\n\tgithub.com/hashicorp/go-sockaddr v1.0.2 // indirect\n\tgithub.com/hashicorp/go-uuid v1.0.3 // indirect\n\tgithub.com/hashicorp/hcl v1.0.0 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/jcmturner/aescts/v2 v2.0.0 // indirect\n\tgithub.com/jcmturner/dnsutils/v2 v2.0.0 // indirect\n\tgithub.com/jcmturner/gofork v1.7.6 // indirect\n\tgithub.com/jcmturner/gokrb5/v8 v8.4.4 // indirect\n\tgithub.com/jcmturner/rpc/v2 v2.0.3 // indirect\n\tgithub.com/json-iterator/go v1.1.12 // indirect\n\tgithub.com/klauspost/compress v1.17.11 // indirect\n\tgithub.com/klauspost/cpuid v1.2.3 // indirect\n\tgithub.com/klauspost/cpuid/v2 v2.2.8 // indirect\n\tgithub.com/magiconair/properties v1.8.7 // indirect\n\tgithub.com/minio/md5-simd v1.1.0 // indirect\n\tgithub.com/minio/sha256-simd v0.1.1 // indirect\n\tgithub.com/mitchellh/go-homedir v1.1.0 // indirect\n\tgithub.com/mitchellh/mapstructure v1.5.0 // indirect\n\tgithub.com/moby/docker-image-spec v1.3.1 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/opencontainers/go-digest v1.0.0 // indirect\n\tgithub.com/opencontainers/image-spec v1.1.0 // indirect\n\tgithub.com/pelletier/go-toml v1.2.0 // indirect\n\tgithub.com/philhofer/fwd v1.0.0 // indirect\n\tgithub.com/pierrec/lz4/v4 v4.1.22 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 // indirect\n\tgithub.com/prometheus/client_model v0.6.1 // indirect\n\tgithub.com/prometheus/common v0.55.0 // indirect\n\tgithub.com/prometheus/procfs v0.15.1 // indirect\n\tgithub.com/prometheus/statsd_exporter v0.22.7 // indirect\n\tgithub.com/rcrowley/go-metrics v0.0.0-20201227073835-cf1acfcdf475 // indirect\n\tgithub.com/ryanuber/go-glob v1.0.0 // indirect\n\tgithub.com/spf13/afero v1.11.0 // indirect\n\tgithub.com/spf13/jwalterweatherman v1.0.0 // indirect\n\tgithub.com/subosito/gotenv v1.6.0 // indirect\n\tgithub.com/tinylib/msgp v1.1.2 // indirect\n\tgithub.com/uber/jaeger-client-go v2.25.0+incompatible // indirect\n\tgithub.com/viterin/partial v1.1.0 // indirect\n\tgithub.com/xdg/stringprep v1.0.3 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0 // indirect\n\tgo.opentelemetry.io/otel v1.31.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.29.0 // indirect\n\tgo.opentelemetry.io/otel/metric v1.31.0 // indirect\n\tgo.opentelemetry.io/otel/trace v1.31.0 // indirect\n\tgo.uber.org/multierr v1.11.0 // indirect\n\tgolang.org/x/time v0.6.0 // indirect\n\tgoogle.golang.org/api v0.196.0 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241015192408-796eee8c2d53 // indirect\n\tgopkg.in/DataDog/dd-trace-go.v1 v1.22.0 // indirect\n\tgopkg.in/ini.v1 v1.67.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n\tgotest.tools/v3 v3.5.1 // indirect\n)\n\nretract v24.0.3 // should have been a minor release instead of a patch\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 101.3046875,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=\ncloud.google.com/go v0.44.1/go.mod h1:iSa0KzasP4Uvy3f1mN/7PiObzGgflwredwwASm/v6AU=\ncloud.google.com/go v0.44.2/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=\ncloud.google.com/go v0.45.1/go.mod h1:RpBamKRgapWJb87xiFSdk4g1CME7QZg3uwTez+TSTjc=\ncloud.google.com/go v0.46.3/go.mod h1:a6bKKbmY7er1mI7TEI4lsAkts/mkhTSZK8w33B4RAg0=\ncloud.google.com/go v0.50.0/go.mod h1:r9sluTvynVuxRIOHXQEHMFffphuXHOMZMycpNR5e6To=\ncloud.google.com/go v0.52.0/go.mod h1:pXajvRH/6o3+F9jDHZWQ5PbGhn+o8w9qiu/CffaVdO4=\ncloud.google.com/go v0.53.0/go.mod h1:fp/UouUEsRkN6ryDKNW/Upv/JBKnv6WDthjR6+vze6M=\ncloud.google.com/go v0.54.0/go.mod h1:1rq2OEkV3YMf6n/9ZvGWI3GWw0VoqH/1x2nd8Is/bPc=\ncloud.google.com/go v0.56.0/go.mod h1:jr7tqZxxKOVYizybht9+26Z/gUq7tiRzu+ACVAMbKVk=\ncloud.google.com/go v0.57.0/go.mod h1:oXiQ6Rzq3RAkkY7N6t3TcE6jE+CIBBbA36lwQ1JyzZs=\ncloud.google.com/go v0.62.0/go.mod h1:jmCYTdRCQuc1PHIIJ/maLInMho30T/Y0M4hTdTShOYc=\ncloud.google.com/go v0.65.0/go.mod h1:O5N8zS7uWy9vkA9vayVHs65eM1ubvY4h553ofrNHObY=\ncloud.google.com/go/bigquery v1.0.1/go.mod h1:i/xbL2UlR5RvWAURpBYZTtm/cXjCha9lbfbpx4poX+o=\ncloud.google.com/go/bigquery v1.3.0/go.mod h1:PjpwJnslEMmckchkHFfq+HTD2DmtT67aNFKH1/VBDHE=\ncloud.google.com/go/bigquery v1.4.0/go.mod h1:S8dzgnTigyfTmLBfrtrhyYhwRxG72rYxvftPBK2Dvzc=\ncloud.google.com/go/bigquery v1.5.0/go.mod h1:snEHRnqQbz117VIFhE8bmtwIDY80NLUZUMb4Nv6dBIg=\ncloud.google.com/go/bigquery v1.7.0/go.mod h1://okPTzCYNXSlb24MZs83e2Do+h+VXtc4gLoIoXIAPc=\ncloud.google.com/go/bigquery v1.8.0/go.mod h1:J5hqkt3O0uAFnINi6JXValWIb1v0goeZM77hZzJN/fQ=\ncloud.google.com/go/datastore v1.0.0/go.mod h1:LXYbyblFSglQ5pkeyhO+Qmw7ukd3C+pD7TKLgZqpHYE=\ncloud.google.com/go/datastore v1.1.0/go.mod h1:umbIZjpQpHh4hmRpGhH4tLFup+FVzqBi1b3c64qFpCk=\ncloud.google.com/go/firestore v1.1.0/go.mod h1:ulACoGHTpvq5r8rxGJ4ddJZBZqakUQqClKRT5SZwBmk=\ncloud.google.com/go/pubsub v1.0.1/go.mod h1:R0Gpsv3s54REJCy4fxDixWD93lHJMoZTyQ2kNxGRt3I=\ncloud.google.com/go/pubsub v1.1.0/go.mod h1:EwwdRX2sKPjnvnqCa270oGRyludottCI76h+R3AArQw=\ncloud.google.com/go/pubsub v1.2.0/go.mod h1:jhfEVHT8odbXTkndysNHCcx0awwzvfOlguIAii9o8iA=\ncloud.google.com/go/pubsub v1.3.1/go.mod h1:i+ucay31+CNRpDW4Lu78I4xXG+O1r/MAHgjpRVR+TSU=\ncloud.google.com/go/storage v1.0.0/go.mod h1:IhtSnM/ZTZV8YYJWCY8RULGVqBDmpoyjwiyrjsg+URw=\ncloud.google.com/go/storage v1.5.0/go.mod h1:tpKbwo567HUNpVclU5sGELwQWBDZ8gh0ZeosJ0Rtdos=\ncloud.google.com/go/storage v1.6.0/go.mod h1:N7U0C8pVQ/+NIKOBQyamJIeKQKkZ+mxpohlUTyfDhBk=\ncloud.google.com/go/storage v1.8.0/go.mod h1:Wv1Oy7z6Yz3DshWRJFhqM/UCfaWIRTdp0RXyy7KQOVs=\ncloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9ullr3+Kg0=\ncontrib.go.opencensus.io/exporter/jaeger v0.2.1 h1:yGBYzYMewVL0yO9qqJv3Z5+IRhPdU7e9o/2oKpX4YvI=\ncontrib.go.opencensus.io/exporter/jaeger v0.2.1/go.mod h1:Y8IsLgdxqh1QxYxPC5IgXVmBaeLUeQFfBeBi9PbeZd0=\ncontrib.go.opencensus.io/exporter/prometheus v0.4.2 h1:sqfsYl5GIY/L570iT+l93ehxaWJs2/OwXtiWwew3oAg=\ncontrib.go.opencensus.io/exporter/prometheus v0.4.2/go.mod h1:dvEHbiKmgvbr5pjaF9fpw1KeYcjrnC1J8B+JKjsZyRQ=\ndmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\nfilippo.io/edwards25519 v1.1.0 h1:FNf4tywRC1HmFuKW5xopWpigGjJKiJSV0Cqo0cJWDaA=\nfilippo.io/edwards25519 v1.1.0/go.mod h1:BxyFTGdWcka3PhytdK4V28tE5sGfRvvvRV7EaN4VDT4=\ngithub.com/99designs/gqlgen v0.13.0/go.mod h1:NV130r6f4tpRWuAI+zsrSdooO/eWUv+Gyyoi3rEfXIk=\ngithub.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161 h1:L/gRVlceqvL25UVaW/CKtUDjefjrs0SPonmDGUVOYP0=\ngithub.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/toml v1.2.1 h1:9F2/+DoOYIOksmaJFPw1tGFy1eDnIJXg+UHjuD8lTak=\ngithub.com/BurntSushi/toml v1.2.1/go.mod h1:CxXYINrC8qIiEnFrOxCa7Jy5BFHlXnUU2pbicEuybxQ=\ngithub.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\ngithub.com/DATA-DOG/go-sqlmock v1.5.2 h1:OcvFkGmslmlZibjAjaHm3L//6LiuBgolP7OputlJIzU=\ngithub.com/DATA-DOG/go-sqlmock v1.5.2/go.mod h1:88MAG/4G7SMwSE3CeA0ZKzrT5CiOU3OJ+JlNzwDqpNU=\ngithub.com/DataDog/datadog-go v3.5.0+incompatible h1:AShr9cqkF+taHjyQgcBcQUt/ZNK+iPq4ROaZwSX5c/U=\ngithub.com/DataDog/datadog-go v3.5.0+incompatible/go.mod h1:LButxg5PwREeZtORoXG3tL4fMGNddJ+vMq1mwgfaqoQ=\ngithub.com/DataDog/opencensus-go-exporter-datadog v0.0.0-20220622145613-731d59e8b567 h1:Z7zdcyzme2egv0lC43X1Q/+DxHjZflQCnJXX0mDp7+I=\ngithub.com/DataDog/opencensus-go-exporter-datadog v0.0.0-20220622145613-731d59e8b567/go.mod h1:/VV3EFO/hTNQZHAqaj+CPGy2+ioFrP4EX3iRwozubhQ=\ngithub.com/HdrHistogram/hdrhistogram-go v1.1.2 h1:5IcZpTvzydCQeHzK4Ef/D5rrSqwxob0t8PQPMybUNFM=\ngithub.com/HdrHistogram/hdrhistogram-go v1.1.2/go.mod h1:yDgFjdqOqDEKOvasDdhWNXYg9BVp4O+o5f6V/ehm6Oo=\ngithub.com/IBM/sarama v1.44.0 h1:puNKqcScjSAgVLramjsuovZrS0nJZFVsrvuUymkWqhE=\ngithub.com/IBM/sarama v1.44.0/go.mod h1:MxQ9SvGfvKIorbk077Ff6DUnBlGpidiQOtU2vuBaxVw=\ngithub.com/Masterminds/semver/v3 v3.3.1 h1:QtNSWtVZ3nBfk8mAOu/B6v7FMJ+NHTIgUPi7rj+4nv4=\ngithub.com/Masterminds/semver/v3 v3.3.1/go.mod h1:4V+yj/TJE1HU9XfppCwVMZq3I84lprf4nC11bSS5beM=\ngithub.com/Microsoft/go-winio v0.6.1 h1:9/kr64B9VUZrLm5YYwbGtUJnMgqWVOdUAXu6Migciow=\ngithub.com/Microsoft/go-winio v0.6.1/go.mod h1:LRdKpFKfdobln8UmuiYcKPot9D2v6svN5+sAH+4kjUM=\ngithub.com/OneOfOne/xxhash v1.2.2/go.mod h1:HSdplMjZKSmBqAxg5vPj2TmRDmfkzw+cTzAElWljhcU=\ngithub.com/agnivade/levenshtein v1.0.1/go.mod h1:CURSv5d9Uaml+FovSIICkLbAUZ9S4RqaHDIsdSBg7lM=\ngithub.com/agnivade/levenshtein v1.0.3 h1:M5ZnqLOoZR8ygVq0FfkXsNOKzMCk0xRiow0R5+5VkQ0=\ngithub.com/agnivade/levenshtein v1.0.3/go.mod h1:4SFRZbbXWLF4MU1T9Qg0pGgH3Pjs+t6ie5efyrwRJXs=\ngithub.com/ajstarks/svgo v0.0.0-20180226025133-644b8db467af/go.mod h1:K08gAheRH3/J6wwsYMMT4xOr94bZjxIelGM0+d/wbFw=\ngithub.com/alecthomas/assert/v2 v2.10.0 h1:jjRCHsj6hBJhkmhznrCzoNpbA3zqy0fYiUcYZP/GkPY=\ngithub.com/alecthomas/assert/v2 v2.10.0/go.mod h1:Bze95FyfUr7x34QZrjL+XP+0qgp/zg8yS+TtBj1WA3k=\ngithub.com/alecthomas/repr v0.4.0 h1:GhI2A8MACjfegCPVq9f1FLvIBS+DrQ2KQBFZP1iFzXc=\ngithub.com/alecthomas/repr v0.4.0/go.mod h1:Fr0507jx4eOXV7AlPV6AVZLYrLIuIeSOWtW57eE/O/4=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alecthomas/units v0.0.0-20190717042225-c3de453c63f4/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alecthomas/units v0.0.0-20190924025748-f65c72e2690d/go.mod h1:rBZYJk541a8SKzHPHnH3zbiI+7dagKZ0cgpgrD7Fyho=\ngithub.com/alecthomas/units v0.0.0-20211218093645-b94a6e3cc137/go.mod h1:OMCwj8VM1Kc9e19TLln2VL61YJF0x1XFtfdL4JdbSyE=\ngithub.com/andreyvit/diff v0.0.0-20170406064948-c7f18ee00883 h1:bvNMNQO63//z+xNgfBlViaCIJKLlCJ6/fmUseuG0wVQ=\ngithub.com/andreyvit/diff v0.0.0-20170406064948-c7f18ee00883/go.mod h1:rCTlJbsFo29Kk6CurOXKm700vrz8f0KW0JNfpkRJY/8=\ngithub.com/arbovm/levenshtein v0.0.0-20160628152529-48b4e1c0c4d0 h1:jfIu9sQUG6Ig+0+Ap1h4unLjW6YQJpKZVmUzxsD4E/Q=\ngithub.com/arbovm/levenshtein v0.0.0-20160628152529-48b4e1c0c4d0/go.mod h1:t2tdKJDJF9BV14lnkjHmOQgcvEKgtqs5a1N3LNdJhGE=\ngithub.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e/go.mod h1:3U/XgcO3hCbHZ8TKRvWD2dDTCfh9M9ya+I9JpbB7O8o=\ngithub.com/armon/go-metrics v0.0.0-20180917152333-f0300d1749da/go.mod h1:Q73ZrmVTwzkszR9V5SSuryQ31EELlFMUz1kKyl939pY=\ngithub.com/armon/go-radix v0.0.0-20180808171621-7fddfc383310/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/bgentry/speakeasy v0.1.0/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=\ngithub.com/bits-and-blooms/bitset v1.17.0 h1:1X2TS7aHz1ELcC0yU1y2stUs/0ig5oMU6STFZGrhvHI=\ngithub.com/bits-and-blooms/bitset v1.17.0/go.mod h1:7hO7Gc7Pp1vODcmWvKMRA9BNmbv6a/7QIWpPxHddWR8=\ngithub.com/bketelsen/crypt v0.0.3-0.20200106085610-5cbc8cc4026c/go.mod h1:MKsuJmJgSg28kpZDP6UIiPt0e0Oz0kqKNGyRaWEPv84=\ngithub.com/blevesearch/bleve/v2 v2.4.4 h1:RwwLGjUm54SwyyykbrZs4vc1qjzYic4ZnAnY9TwNl60=\ngithub.com/blevesearch/bleve/v2 v2.4.4/go.mod h1:fa2Eo6DP7JR+dMFpQe+WiZXINKSunh7WBtlDGbolKXk=\ngithub.com/blevesearch/bleve_index_api v1.1.12 h1:P4bw9/G/5rulOF7SJ9l4FsDoo7UFJ+5kexNy1RXfegY=\ngithub.com/blevesearch/bleve_index_api v1.1.12/go.mod h1:PbcwjIcRmjhGbkS/lJCpfgVSMROV6TRubGGAODaK1W8=\ngithub.com/blevesearch/geo v0.1.20 h1:paaSpu2Ewh/tn5DKn/FB5SzvH0EWupxHEIwbCk/QPqM=\ngithub.com/blevesearch/geo v0.1.20/go.mod h1:DVG2QjwHNMFmjo+ZgzrIq2sfCh6rIHzy9d9d0B59I6w=\ngithub.com/blevesearch/go-porterstemmer v1.0.3 h1:GtmsqID0aZdCSNiY8SkuPJ12pD4jI+DdXTAn4YRcHCo=\ngithub.com/blevesearch/go-porterstemmer v1.0.3/go.mod h1:angGc5Ht+k2xhJdZi511LtmxuEf0OVpvUUNrwmM1P7M=\ngithub.com/blevesearch/segment v0.9.1 h1:+dThDy+Lvgj5JMxhmOVlgFfkUtZV2kw49xax4+jTfSU=\ngithub.com/blevesearch/segment v0.9.1/go.mod h1:zN21iLm7+GnBHWTao9I+Au/7MBiL8pPFtJBJTsk6kQw=\ngithub.com/blevesearch/snowballstem v0.9.0 h1:lMQ189YspGP6sXvZQ4WZ+MLawfV8wOmPoD/iWeNXm8s=\ngithub.com/blevesearch/snowballstem v0.9.0/go.mod h1:PivSj3JMc8WuaFkTSRDW2SlrulNWPl4ABg1tC/hlgLs=\ngithub.com/blevesearch/upsidedown_store_api v1.0.2 h1:U53Q6YoWEARVLd1OYNc9kvhBMGZzVrdmaozG2MfoB+A=\ngithub.com/blevesearch/upsidedown_store_api v1.0.2/go.mod h1:M01mh3Gpfy56Ps/UXHjEO/knbqyQ1Oamg8If49gRwrQ=\ngithub.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=\ngithub.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/cespare/xxhash v1.1.0/go.mod h1:XrSqR1VqqWfGrhpAt58auRo0WTKS1nRRg3ghfAqPWnc=\ngithub.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cespare/xxhash/v2 v2.1.2/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/chewxy/math32 v1.10.1 h1:LFpeY0SLJXeaiej/eIp2L40VYfscTvKh/FSEZ68uMkU=\ngithub.com/chewxy/math32 v1.10.1/go.mod h1:dOB2rcuFrCn6UHrze36WSLVPKtzPMRAQvBvUwkSsLqs=\ngithub.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\ngithub.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\ngithub.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cockroachdb/datadriven v1.0.2 h1:H9MtNqVoVhvd9nCBwOyDjUEdZCREqbIdCJD93PBm/jA=\ngithub.com/cockroachdb/datadriven v1.0.2/go.mod h1:a9RdTaap04u637JoCzcUoIcDmvwSUtcUFtT/C3kJlTU=\ngithub.com/containerd/log v0.1.0 h1:TCJt7ioM2cr/tfR8GPbGf9/VRAX8D2B4PjzCpfX540I=\ngithub.com/containerd/log v0.1.0/go.mod h1:VRRf09a7mHDIRezVKTRCrOq78v577GXq3bSa3EhrzVo=\ngithub.com/coreos/bbolt v1.3.2/go.mod h1:iRUV2dpdMOn7Bo10OQBFzIJO9kkE559Wcmn+qkEiiKk=\ngithub.com/coreos/etcd v3.3.13+incompatible/go.mod h1:uF7uidLiAD3TWHmW31ZFd/JWoc32PjwdhPthX9715RE=\ngithub.com/coreos/go-semver v0.3.0/go.mod h1:nnelYz7RCh+5ahJtPPxZlU+153eP4D4r3EedlOD2RNk=\ngithub.com/coreos/go-systemd v0.0.0-20190321100706-95778dfbb74e/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=\ngithub.com/coreos/pkg v0.0.0-20180928190104-399ea9e2e55f/go.mod h1:E3G3o1h8I7cfcXa63jLwjI0eiQQMgzzUDFVpN/nH/eA=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.0-20190314233015-f79a8a8ca69d/go.mod h1:maD7wRr/U5Z6m/iR4s+kqSMx2CaBsrgA7czyZG/E6dU=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dgraph-io/badger/v4 v4.5.0 h1:TeJE3I1pIWLBjYhIYCA1+uxrjWEoJXImFBMEBVSm16g=\ngithub.com/dgraph-io/badger/v4 v4.5.0/go.mod h1:ysgYmIeG8dS/E8kwxT7xHyc7MkmwNYLRoYnFbr7387A=\ngithub.com/dgraph-io/dgo/v240 v240.1.0 h1:xd8z9kEXDWOAblaLJ2HLg2tXD6ngMQwq3ehLUS7GKNg=\ngithub.com/dgraph-io/dgo/v240 v240.1.0/go.mod h1:r8WASETKfodzKqThSAhhTNIzcEMychArKKlZXQufWuA=\ngithub.com/dgraph-io/gqlgen v0.13.2 h1:TNhndk+eHKj5qE7BenKKSYdSIdOGhLqxR1rCiMso9KM=\ngithub.com/dgraph-io/gqlgen v0.13.2/go.mod h1:iCOrOv9lngN7KAo+jMgvUPVDlYHdf7qDwsTkQby2Sis=\ngithub.com/dgraph-io/gqlparser/v2 v2.1.1/go.mod h1:MYS4jppjyx8b9tuUtjV7jU1UFZK6P9fvO8TsIsQtRKU=\ngithub.com/dgraph-io/gqlparser/v2 v2.2.2 h1:CnxXOKL4EPguKqcGV/z4u4VoW5izUkOTIsNM6xF+0f4=\ngithub.com/dgraph-io/gqlparser/v2 v2.2.2/go.mod h1:MYS4jppjyx8b9tuUtjV7jU1UFZK6P9fvO8TsIsQtRKU=\ngithub.com/dgraph-io/graphql-transport-ws v0.0.0-20210511143556-2cef522f1f15 h1:X2NRsgAtVUAp2nmTPCq+x+wTcRRrj74CEpy7E0Unsl4=\ngithub.com/dgraph-io/graphql-transport-ws v0.0.0-20210511143556-2cef522f1f15/go.mod h1:7z3c/5w0sMYYZF5bHsrh8IH4fKwG5O5Y70cPH1ZLLRQ=\ngithub.com/dgraph-io/ristretto/v2 v2.0.1 h1:7W0LfEP+USCmtrUjJsk+Jv2jbhJmb72N4yRI7GrLdMI=\ngithub.com/dgraph-io/ristretto/v2 v2.0.1/go.mod h1:K7caLeufSdxm+ITp1n/73U+VbFVAHrexfLbz4n14hpo=\ngithub.com/dgraph-io/simdjson-go v0.3.0 h1:h71LO7vR4LHMPUhuoGN8bqGm1VNfGOlAG8BI6iDUKw0=\ngithub.com/dgraph-io/simdjson-go v0.3.0/go.mod h1:Otpysdjaxj9OGaJusn4pgQV7OFh2bELuHANq0I78uvY=\ngithub.com/dgrijalva/jwt-go v3.2.0+incompatible/go.mod h1:E3ru+11k8xSBh+hMPgOLZmtrrCbhqsmaPHjLKYnJCaQ=\ngithub.com/dgryski/go-farm v0.0.0-20240924180020-3414d57e47da h1:aIftn67I1fkbMa512G+w+Pxci9hJPB8oMnkcP3iZF38=\ngithub.com/dgryski/go-farm v0.0.0-20240924180020-3414d57e47da/go.mod h1:SqUrOPUnsFjfmXRMNPybcSiG0BgUW2AuFH8PAnS2iTw=\ngithub.com/dgryski/go-groupvarint v0.0.0-20230630160417-2bfb7969fb3c h1:cHaw4wmusVzAZLEPWOCCGCfu6UvFXx9UboCHQCnjvxY=\ngithub.com/dgryski/go-groupvarint v0.0.0-20230630160417-2bfb7969fb3c/go.mod h1:MlkUQveSLEDbIgq2r1e++tSf0zfzU9mQpa9Qkczl+9Y=\ngithub.com/dgryski/go-sip13 v0.0.0-20181026042036-e10d5fee7954/go.mod h1:vAd38F8PWV+bWy6jNmig1y/TA+kYO4g3RSRF0IAv0no=\ngithub.com/dgryski/trifles v0.0.0-20190318185328-a8d75aae118c h1:TUuUh0Xgj97tLMNtWtNvI9mIV6isjEb9lBMNv+77IGM=\ngithub.com/dgryski/trifles v0.0.0-20190318185328-a8d75aae118c/go.mod h1:if7Fbed8SFyPtHLHbg49SI7NAdJiC5WIA09pe59rfAA=\ngithub.com/distribution/reference v0.5.0 h1:/FUIFXtfc/x2gpa5/VGfiGLuOIdYa1t65IKK2OFGvA0=\ngithub.com/distribution/reference v0.5.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=\ngithub.com/docker/docker v27.4.1+incompatible h1:ZJvcY7gfwHn1JF48PfbyXg7Jyt9ZCWDW+GGXOIxEwp4=\ngithub.com/docker/docker v27.4.1+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\ngithub.com/docker/go-connections v0.5.0 h1:USnMq7hx7gwdVZq1L49hLXaFtUdTADjXGp+uj1Br63c=\ngithub.com/docker/go-connections v0.5.0/go.mod h1:ov60Kzw0kKElRwhNs9UlUHAE/F9Fe6GLaXnqyDdmEXc=\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/dustin/go-humanize v1.0.0/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=\ngithub.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=\ngithub.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=\ngithub.com/eapache/go-resiliency v1.7.0 h1:n3NRTnBn5N0Cbi/IeOHuQn9s2UwVUH7Ga0ZWcP+9JTA=\ngithub.com/eapache/go-resiliency v1.7.0/go.mod h1:5yPzW0MIvSe0JDsv0v+DvcjEv2FyD6iZYSs1ZI+iQho=\ngithub.com/eapache/go-xerial-snappy v0.0.0-20230731223053-c322873962e3 h1:Oy0F4ALJ04o5Qqpdz8XLIpNA3WM/iSIXqxtqo7UGVws=\ngithub.com/eapache/go-xerial-snappy v0.0.0-20230731223053-c322873962e3/go.mod h1:YvSRo5mw33fLEx1+DlK6L2VV43tJt5Eyel9n9XBcR+0=\ngithub.com/eapache/queue v1.1.0 h1:YOEu7KNc61ntiQlcEeUIoDTJ2o8mQznoNvUhiigpIqc=\ngithub.com/eapache/queue v1.1.0/go.mod h1:6eCeP0CKFpHLu8blIFXhExK/dRa7WDZfr6jVFPTqq+I=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/fatih/color v1.7.0/go.mod h1:Zm6kSWBoL9eyXnKyktHP6abPY2pDugNf5KwzbycvMj4=\ngithub.com/fatih/color v1.16.0 h1:zmkK9Ngbjj+K0yRhTVONQh1p/HknKYSlNT+vZCzyokM=\ngithub.com/fatih/color v1.16.0/go.mod h1:fL2Sau1YI5c0pdGEVCbKQbLXB6edEj1ZgiY4NijnWvE=\ngithub.com/felixge/fgprof v0.9.3 h1:VvyZxILNuCiUCSXtPtYmmtGvb65nqXh2QFWc0Wpf2/g=\ngithub.com/felixge/fgprof v0.9.3/go.mod h1:RdbpDgzqYVh/T9fPELJyV7EYJuHB55UTEULNun8eiPw=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/fogleman/gg v1.2.1-0.20190220221249-0403632d5b90/go.mod h1:R/bRT+9gY/C5z7JzPU0zXsXHKM4/ayA+zqcVNZzPa1k=\ngithub.com/fortytw2/leaktest v1.3.0 h1:u8491cBMTQ8ft8aeV+adlcytMZylmA5nnwwkRZjI8vw=\ngithub.com/fortytw2/leaktest v1.3.0/go.mod h1:jDsjWgpAGjm2CA7WthBh/CdZYEPF31XHquHwclZch5g=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=\ngithub.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=\ngithub.com/getsentry/sentry-go v0.30.0 h1:lWUwDnY7sKHaVIoZ9wYqRHJ5iEmoc0pqcRqFkosKzBo=\ngithub.com/getsentry/sentry-go v0.30.0/go.mod h1:WU9B9/1/sHDqeV8T+3VwwbjeR5MSXs/6aqG3mqZrezA=\ngithub.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\ngithub.com/go-chi/chi v3.3.2+incompatible/go.mod h1:eB3wogJHnLi3x/kFX2A+IbTBlXxmMeXJVKy9tTv1XzQ=\ngithub.com/go-errors/errors v1.4.2 h1:J6MZopCL4uSllY1OfXM374weqZFFItUbrImctkmUxIA=\ngithub.com/go-errors/errors v1.4.2/go.mod h1:sIVyrIiJhuEF+Pj9Ebtd6P/rEYROXFi3BopGUQ5a5Og=\ngithub.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-jose/go-jose/v4 v4.0.4 h1:VsjPI33J0SB9vQM6PLmNjoHqMQNGPiZ0rHL7Ni7Q6/E=\ngithub.com/go-jose/go-jose/v4 v4.0.4/go.mod h1:NKb5HO1EZccyMpiZNbdUw/14tiXNyUJh188dfnMCAfc=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/kit v0.9.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/log v0.1.0/go.mod h1:zbhenjAZHb184qTLMA9ZjW7ThYL0H2mk7Q6pNt4vbaY=\ngithub.com/go-kit/log v0.2.0/go.mod h1:NwTd00d/i8cPZ3xOwwiv2PO5MOcx78fFErGNcVmBjv0=\ngithub.com/go-kit/log v0.2.1 h1:MRVx0/zhvdseW+Gza6N9rVzU/IVzaeE1SFI4raAhmBU=\ngithub.com/go-kit/log v0.2.1/go.mod h1:NwTd00d/i8cPZ3xOwwiv2PO5MOcx78fFErGNcVmBjv0=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=\ngithub.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=\ngithub.com/go-logfmt/logfmt v0.5.1 h1:otpy5pqBCBZ1ng9RQ0dPu4PN7ba75Y/aA+UpowDyNVA=\ngithub.com/go-logfmt/logfmt v0.5.1/go.mod h1:WYhtIu8zTZfxdn5+rREduYbwxfcBr/Vr6KEVveWlfTs=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.2.3/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-sql-driver/mysql v1.8.1 h1:LedoTUt/eveggdHS9qUFC1EFSa8bU2+1pZjSRpvNJ1Y=\ngithub.com/go-sql-driver/mysql v1.8.1/go.mod h1:wEBSXgmK//2ZFJyE+qWnIsVGmvmEKlqwuVSjsCm7DZg=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-test/deep v1.0.2 h1:onZX1rnHT3Wv6cqNgYyFOOlgVKJrksuCMCRvJStbMYw=\ngithub.com/go-test/deep v1.0.2/go.mod h1:wGDj63lr65AM2AQyKZd/NYHGb0R+1RLqB8NKt3aSFNA=\ngithub.com/gogo/protobuf v1.0.0/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/gogo/protobuf v1.2.1/go.mod h1:hp+jE20tsWTFYpLwKvXlhS1hjn+gTNwPg2I6zVXpSg4=\ngithub.com/gogo/protobuf v1.3.1/go.mod h1:SlYgWuQ5SjCEi6WLHjHCa1yvBfUnHcTbrrZtXPKa29o=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang-jwt/jwt/v5 v5.2.1 h1:OuVbFODueb089Lh128TAcimifWaLhJwVflnrgM17wHk=\ngithub.com/golang-jwt/jwt/v5 v5.2.1/go.mod h1:pqrtFR0X4osieyHYxtmOUWsAWrfe1Q5UVIyoH402zdk=\ngithub.com/golang/freetype v0.0.0-20170609003504-e2365dfdc4a0/go.mod h1:E/TSTwGwJL78qG/PmXZO1EjYhfJinVAhrmmHX6Z8B9k=\ngithub.com/golang/geo v0.0.0-20230421003525-6adc56603217 h1:HKlyj6in2JV6wVkmQ4XmG/EIm+SCYlPZ+V4GWit7Z+I=\ngithub.com/golang/geo v0.0.0-20230421003525-6adc56603217/go.mod h1:8wI0hitZ3a1IxZfeH3/5I97CI8i5cLGsYe7xNhQGs9U=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/glog v1.2.3 h1:oDTdz9f5VGVVNGu/Q7UXKWYsD0873HXLHdJUNBsSEKM=\ngithub.com/golang/glog v1.2.3/go.mod h1:6AhwSGph0fcJtXVM/PEHPqZlFeoLxhs7/t5UDAwmO+w=\ngithub.com/golang/groupcache v0.0.0-20190129154638-5b532d6fd5ef/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.2.0/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.3.1/go.mod h1:sBzyDLLjw3U8JLTeZvSv8jJB+tU5PVekmnlKIyFUx0Y=\ngithub.com/golang/mock v1.4.0/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.1/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.3/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.4/go.mod h1:l3mdAwkq5BuhzHwde/uurv3sEJeZMXNpwsxVWU71h+4=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.4/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.5/go.mod h1:6O5/vntMXwX2lRkT1hjjk0nAC1IDOTvTlVgjlRvqsdk=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/golang/snappy v0.0.4 h1:yAGX7huGHXlcLOEtBnF4w7FQwA26wojNCwOYAEhLjQM=\ngithub.com/golang/snappy v0.0.4/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/codesearch v1.2.0 h1:VlyAH+AntnIbGGArOUs6sEBdPVwYvf1e8Uw3/TC77cA=\ngithub.com/google/codesearch v1.2.0/go.mod h1:9wQjQDVAP7Mvt96tw1KqVeXncdBLOWUYdxRiHlsG6Xc=\ngithub.com/google/flatbuffers v24.3.25+incompatible h1:CX395cjN9Kke9mmalRoL3d81AtFUxJM+yDthflgJGkI=\ngithub.com/google/flatbuffers v24.3.25+incompatible/go.mod h1:1AeVuKshWv4vARoZatz6mlQ0JxURH0Kv5+zNeJKJCa8=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.4.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.7/go.mod h1:n+brtR0CgQNWTVd5ZUFpTBC8YFBDLK/h/bpaJ8/DtOE=\ngithub.com/google/go-cmp v0.5.8/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=\ngithub.com/google/martian/v3 v3.0.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\ngithub.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20190515194954-54271f7e092f/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20191218002539-d4f498aebedc/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200212024743-f11f1df84d12/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200229191704-1ebb73c60ed3/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200430221834-fc25d7d30c6d/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200708004538-1a94d8640e99/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20211214055906-6f57359322fd h1:1FjCyPC+syAzJ5/2S8fqdZK1R22vvA0J7JZKcuOIQ7Y=\ngithub.com/google/pprof v0.0.0-20211214055906-6f57359322fd/go.mod h1:KgnwoLYCZ8IQu3XUZ8Nc/bM9CCZFOyjUNOSygVozoDg=\ngithub.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=\ngithub.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=\ngithub.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\ngithub.com/gorilla/context v0.0.0-20160226214623-1ea25387ff6f/go.mod h1:kBGZzfjB9CEq2AlWe17Uuf7NDRt0dE0s8S51q0aT7Yg=\ngithub.com/gorilla/mux v1.6.1/go.mod h1:1lud6UwP+6orDFRuTfBEV8e9/aOM/c4fVVCaMa2zaAs=\ngithub.com/gorilla/mux v1.8.0/go.mod h1:DVbg23sWSpFRCP0SfiEN6jmj59UnW/n46BH5rLB71So=\ngithub.com/gorilla/securecookie v1.1.1/go.mod h1:ra0sb63/xPlUeL+yeDciTfxMRAA+MP+HVt/4epWDjd4=\ngithub.com/gorilla/sessions v1.2.1/go.mod h1:dk2InVEVJ0sfLlnXv9EAgkf6ecYs/i80K/zI+bUmuGM=\ngithub.com/gorilla/websocket v1.4.2/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/gorilla/websocket v1.5.3 h1:saDtZ6Pbx/0u+bgYQ3q96pZgCzfhKXGPqt7kZ72aNNg=\ngithub.com/gorilla/websocket v1.5.3/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/graph-gophers/graphql-go v1.5.0 h1:fDqblo50TEpD0LY7RXk/LFVYEVqo3+tXMNMPSVXA1yc=\ngithub.com/graph-gophers/graphql-go v1.5.0/go.mod h1:YtmJZDLbF1YYNrlNAuiO5zAStUWc3XZT07iGsVqe1Os=\ngithub.com/grpc-ecosystem/go-grpc-middleware v1.0.0/go.mod h1:FiyG127CGDf3tlThmgyCl78X/SZQqEOJBCDaAfeWzPs=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0/go.mod h1:8NvIoxWQoOIhqOTXgfV/d3M/q6VIi02HzZEHgUlZvzk=\ngithub.com/grpc-ecosystem/grpc-gateway v1.9.0 h1:bM6ZAFZmc/wPFaRDi0d5L7hGEZEx/2u+Tmr2evNHDiI=\ngithub.com/grpc-ecosystem/grpc-gateway v1.9.0/go.mod h1:vNeuVxBJEsws4ogUvrchl83t/GYV9WGTSLVdBhOQFDY=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.22.0 h1:asbCHRVmodnJTuQ3qamDwqVOIjwqUPTYmYuemVOx+Ys=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.22.0/go.mod h1:ggCgvZ2r7uOoQjOyu2Y1NhHmEPPzzuhWgcza5M1Ji1I=\ngithub.com/hashicorp/consul/api v1.1.0/go.mod h1:VmuI/Lkw1nC05EYQWNKwWGbkg+FbDBtguAZLlVdkD9Q=\ngithub.com/hashicorp/consul/sdk v0.1.1/go.mod h1:VKf9jXwCTEY1QZP2MOLRhb5i/I/ssyNV1vwHyQBF0x8=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=\ngithub.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-cleanhttp v0.5.1/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=\ngithub.com/hashicorp/go-cleanhttp v0.5.2 h1:035FKYIWjmULyFRBKPs8TBQoi0x6d9G4xc9neXJWAZQ=\ngithub.com/hashicorp/go-cleanhttp v0.5.2/go.mod h1:kO/YDlP8L1346E6Sodw+PrpBSV4/SoxCXGY6BqNFT48=\ngithub.com/hashicorp/go-hclog v1.6.3 h1:Qr2kF+eVWjTiYmU7Y31tYlP1h0q/X3Nl3tPGdaB11/k=\ngithub.com/hashicorp/go-hclog v1.6.3/go.mod h1:W4Qnvbt70Wk/zYJryRzDRU/4r0kIg0PVHBcfoyhpF5M=\ngithub.com/hashicorp/go-immutable-radix v1.0.0/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-msgpack v0.5.3/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=\ngithub.com/hashicorp/go-multierror v1.0.0/go.mod h1:dHtQlpGsu+cZNNAkkCN/P3hoUDHhCYQXV3UM06sGGrk=\ngithub.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\ngithub.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\ngithub.com/hashicorp/go-retryablehttp v0.7.7 h1:C8hUCYzor8PIfXHa4UrZkU4VvK8o9ISHxT2Q8+VepXU=\ngithub.com/hashicorp/go-retryablehttp v0.7.7/go.mod h1:pkQpWZeYWskR+D1tR2O5OcBFOxfA7DoAO6xtkuQnHTk=\ngithub.com/hashicorp/go-rootcerts v1.0.0/go.mod h1:K6zTfqpRlCUIjkwsN4Z+hiSfzSTQa6eBIzfwKfwNnHU=\ngithub.com/hashicorp/go-rootcerts v1.0.2 h1:jzhAVGtqPKbwpyCPELlgNWhE1znq+qwJtW5Oi2viEzc=\ngithub.com/hashicorp/go-rootcerts v1.0.2/go.mod h1:pqUvnprVnM5bf7AOirdbb01K4ccR319Vf4pU3K5EGc8=\ngithub.com/hashicorp/go-secure-stdlib/parseutil v0.1.6 h1:om4Al8Oy7kCm/B86rLCLah4Dt5Aa0Fr5rYBG60OzwHQ=\ngithub.com/hashicorp/go-secure-stdlib/parseutil v0.1.6/go.mod h1:QmrqtbKuxxSWTN3ETMPuB+VtEiBJ/A9XhoYGv8E1uD8=\ngithub.com/hashicorp/go-secure-stdlib/strutil v0.1.1/go.mod h1:gKOamz3EwoIoJq7mlMIRBpVTAUn8qPCrEclOKKWhD3U=\ngithub.com/hashicorp/go-secure-stdlib/strutil v0.1.2 h1:kes8mmyCpxJsI7FTwtzRqEy9CdjCtrXrXGuOpxEA7Ts=\ngithub.com/hashicorp/go-secure-stdlib/strutil v0.1.2/go.mod h1:Gou2R9+il93BqX25LAKCLuM+y9U2T4hlwvT1yprcna4=\ngithub.com/hashicorp/go-sockaddr v1.0.0/go.mod h1:7Xibr9yA9JjQq1JpNB2Vw7kxv8xerXegt+ozgdvDeDU=\ngithub.com/hashicorp/go-sockaddr v1.0.2 h1:ztczhD1jLxIRjVejw8gFomI1BQZOe2WoVOu0SyteCQc=\ngithub.com/hashicorp/go-sockaddr v1.0.2/go.mod h1:rB4wwRAUzs07qva3c5SdrY/NEtAUjGlgmH/UkBUC97A=\ngithub.com/hashicorp/go-syslog v1.0.0/go.mod h1:qPfqrKkXGihmCqbJM2mZgkZGvKG1dFdvsLplgctolz4=\ngithub.com/hashicorp/go-uuid v1.0.0/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.1/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.2/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.3 h1:2gKiV6YVmrJ1i2CKKa9obLvRieoRGviZFL26PcT/Co8=\ngithub.com/hashicorp/go-uuid v1.0.3/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go.net v0.0.1/go.mod h1:hjKkEWcCURg++eb33jQU7oqQcI9XDCnUzHA0oac0k90=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/hcl v1.0.0 h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=\ngithub.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=\ngithub.com/hashicorp/logutils v1.0.0/go.mod h1:QIAnNjmIWmVIIkWDTG1z5v++HQmx9WQRO+LraFDTW64=\ngithub.com/hashicorp/mdns v1.0.0/go.mod h1:tL+uN++7HEJ6SQLQ2/p+z2pH24WQKWjBPkE0mNTz8vQ=\ngithub.com/hashicorp/memberlist v0.1.3/go.mod h1:ajVTdAv/9Im8oMAAj5G31PhhMCZJV2pPBoIllUwCN7I=\ngithub.com/hashicorp/serf v0.8.2/go.mod h1:6hOLApaqBFA1NXqRQAsxw9QxuDEvNxSQRwA/JwenrHc=\ngithub.com/hashicorp/vault/api v1.15.0 h1:O24FYQCWwhwKnF7CuSqP30S51rTV7vz1iACXE/pj5DA=\ngithub.com/hashicorp/vault/api v1.15.0/go.mod h1:+5YTO09JGn0u+b6ySD/LLVf8WkJCPLAL2Vkmrn2+CM8=\ngithub.com/hexops/gotextdiff v1.0.3 h1:gitA9+qJrrTCsiCl7+kh75nPqQt1cx4ZkudSTLoUqJM=\ngithub.com/hexops/gotextdiff v1.0.3/go.mod h1:pSWU5MAI3yDq+fZBTazCSJysOMbxWL1BSow5/V2vxeg=\ngithub.com/ianlancetaylor/demangle v0.0.0-20181102032728-5e5cf60278f6/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/ianlancetaylor/demangle v0.0.0-20210905161508-09a460cdf81d/go.mod h1:aYm2/VgdVmcIU8iMfdMvDMsRAQjcfZSKFby6HOFvi/w=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/jcmturner/aescts/v2 v2.0.0 h1:9YKLH6ey7H4eDBXW8khjYslgyqG2xZikXP0EQFKrle8=\ngithub.com/jcmturner/aescts/v2 v2.0.0/go.mod h1:AiaICIRyfYg35RUkr8yESTqvSy7csK90qZ5xfvvsoNs=\ngithub.com/jcmturner/dnsutils/v2 v2.0.0 h1:lltnkeZGL0wILNvrNiVCR6Ro5PGU/SeBvVO/8c/iPbo=\ngithub.com/jcmturner/dnsutils/v2 v2.0.0/go.mod h1:b0TnjGOvI/n42bZa+hmXL+kFJZsFT7G4t3HTlQ184QM=\ngithub.com/jcmturner/gofork v1.7.6 h1:QH0l3hzAU1tfT3rZCnW5zXl+orbkNMMRGJfdJjHVETg=\ngithub.com/jcmturner/gofork v1.7.6/go.mod h1:1622LH6i/EZqLloHfE7IeZ0uEJwMSUyQ/nDd82IeqRo=\ngithub.com/jcmturner/goidentity/v6 v6.0.1 h1:VKnZd2oEIMorCTsFBnJWbExfNN7yZr3EhJAxwOkZg6o=\ngithub.com/jcmturner/goidentity/v6 v6.0.1/go.mod h1:X1YW3bgtvwAXju7V3LCIMpY0Gbxyjn/mY9zx4tFonSg=\ngithub.com/jcmturner/gokrb5/v8 v8.4.4 h1:x1Sv4HaTpepFkXbt2IkL29DXRf8sOfZXo8eRKh687T8=\ngithub.com/jcmturner/gokrb5/v8 v8.4.4/go.mod h1:1btQEpgT6k+unzCwX1KdWMEwPPkkgBtP+F6aCACiMrs=\ngithub.com/jcmturner/rpc/v2 v2.0.3 h1:7FXXj8Ti1IaVFpSAziCZWNzbNuZmnvw/i6CqLNdWfZY=\ngithub.com/jcmturner/rpc/v2 v2.0.3/go.mod h1:VUJYCIDm3PVOEHw8sgt091/20OJjskO/YJki3ELg/Hc=\ngithub.com/jonboulle/clockwork v0.1.0/go.mod h1:Ii8DK3G1RaLaWxj9trq07+26W01tbo22gdxWY5EU2bo=\ngithub.com/jpillora/backoff v1.0.0/go.mod h1:J/6gKK9jxlEcS3zixgDgUAsiuZ7yrSoa/FX5e0EB2j4=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.9/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.10/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.11/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=\ngithub.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=\ngithub.com/jtolds/gls v4.20.0+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/julienschmidt/httprouter v1.3.0/go.mod h1:JR6WtHb+2LUe8TCKY3cZOxFyyO8IZAc4RVcycCCAKdM=\ngithub.com/jung-kurt/gofpdf v1.0.3-0.20190309125859-24315acbbda5/go.mod h1:7Id9E/uU8ce6rXgefFLlgrJj/GYY22cpxn+r32jIOes=\ngithub.com/kisielk/errcheck v1.1.0/go.mod h1:EZBBE59ingxPouuu3KfxchcWSUPOHkagtvWXihfKN4Q=\ngithub.com/kisielk/errcheck v1.2.0/go.mod h1:/BMXB+zMLi60iA8Vv6Ksmxu/1UDYcXs4uQLJ+jE2L00=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/compress v1.11.7/go.mod h1:aoV0uJVorq1K+umq18yTdKaF57EivdYsUV+/s2qKfXs=\ngithub.com/klauspost/compress v1.17.11 h1:In6xLpyWOi1+C7tXUUWv2ot1QvBjxevKAaI6IXrJmUc=\ngithub.com/klauspost/compress v1.17.11/go.mod h1:pMDklpSncoRMuLFrf1W9Ss9KT+0rH90U12bZKk7uwG0=\ngithub.com/klauspost/cpuid v1.2.3 h1:CCtW0xUnWGVINKvE/WWOYKdsPV6mawAtvQuSl8guwQs=\ngithub.com/klauspost/cpuid v1.2.3/go.mod h1:Pj4uuM528wm8OyEC2QMXAi2YiTZ96dNQPGgoMS4s3ek=\ngithub.com/klauspost/cpuid/v2 v2.0.3/go.mod h1:FInQzS24/EEf25PyTYn52gqo7WaD8xa0213Md/qVLRg=\ngithub.com/klauspost/cpuid/v2 v2.2.8 h1:+StwCXwm9PdpiEkPyzBXIy+M9KUb4ODm0Zarf1kS5BM=\ngithub.com/klauspost/cpuid/v2 v2.2.8/go.mod h1:Lcz8mBdAVJIBVzewtcLocK12l3Y+JytZYpaMropDUws=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.3/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/logrusorgru/aurora v0.0.0-20200102142835-e9ef32dff381/go.mod h1:7rIyQOR62GCctdiQpZ/zOJlFyk6y+94wXzv6RNZgaR4=\ngithub.com/magiconair/properties v1.8.1/go.mod h1:PppfXfuXeibc/6YijjN8zIbojt8czPbwD3XqdrwzmxQ=\ngithub.com/magiconair/properties v1.8.7 h1:IeQXZAiQcpL9mgcAe1Nu6cX9LLw6ExEHKjN0VQdvPDY=\ngithub.com/magiconair/properties v1.8.7/go.mod h1:Dhd985XPs7jluiymwWYZ0G4Z61jb3vdS329zhj2hYo0=\ngithub.com/matryer/moq v0.0.0-20200106131100-75d0ddfc0007/go.mod h1:9ELz6aaclSIGnZBoaSLZ3NAl1VTufbOrXBPvtcy6WiQ=\ngithub.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=\ngithub.com/mattn/go-colorable v0.1.4/go.mod h1:U0ppj6V5qS13XJ6of8GYAs25YV2eR4EVcfRqFIhoBtE=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.3/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=\ngithub.com/mattn/go-isatty v0.0.8/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\ngithub.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/miekg/dns v1.0.14/go.mod h1:W1PPwlIAgtquWBMBEV9nkV9Cazfe8ScdGz/Lj7v3Nrg=\ngithub.com/minio/md5-simd v1.1.0 h1:QPfiOqlZH+Cj9teu0t9b1nTBfPbyTl16Of5MeuShdK4=\ngithub.com/minio/md5-simd v1.1.0/go.mod h1:XpBqgZULrMYD3R+M28PcmP0CkI7PEMzB3U77ZrKZ0Gw=\ngithub.com/minio/minio-go/v6 v6.0.57 h1:ixPkbKkyD7IhnluRgQpGSpHdpvNVaW6OD5R9IAO/9Tw=\ngithub.com/minio/minio-go/v6 v6.0.57/go.mod h1:5+R/nM9Pwrh0vqF+HbYYDQ84wdUFPyXHkrdT4AIkifM=\ngithub.com/minio/sha256-simd v0.1.1 h1:5QHSlgo3nt5yKOJrC7W8w7X+NFl8cMPZm96iu8kKUJU=\ngithub.com/minio/sha256-simd v0.1.1/go.mod h1:B5e1o+1/KgNmWrSQK08Y6Z1Vb5pwIktudl0J58iy0KM=\ngithub.com/mitchellh/cli v1.0.0/go.mod h1:hNIlj7HEI86fIcpObd7a0FcrxTWetlwJDGcceTlRvqc=\ngithub.com/mitchellh/go-homedir v1.0.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/mitchellh/go-homedir v1.1.0 h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=\ngithub.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/mitchellh/go-testing-interface v1.0.0/go.mod h1:kRemZodwjscx+RGhAo8eIhFbs2+BFgRtFPeD/KE+zxI=\ngithub.com/mitchellh/go-wordwrap v1.0.0/go.mod h1:ZXFpozHsX6DPmq2I0TCekCxypsnAUbP2oI0UX1GXzOo=\ngithub.com/mitchellh/gox v0.4.0/go.mod h1:Sd9lOJ0+aimLBi73mGofS1ycjY8lL3uZM3JPS42BGNg=\ngithub.com/mitchellh/iochan v1.0.0/go.mod h1:JwYml1nuB7xOzsp52dPpHFffvOCDupsG0QubkSMEySY=\ngithub.com/mitchellh/mapstructure v0.0.0-20160808181253-ca63d7c062ee/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/mapstructure v0.0.0-20180203102830-a4e142e9c047/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/mapstructure v1.4.1/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=\ngithub.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/mitchellh/panicwrap v1.0.0 h1:67zIyVakCIvcs69A0FGfZjBdPleaonSgGlXRSRlb6fE=\ngithub.com/mitchellh/panicwrap v1.0.0/go.mod h1:pKvZHwWrZowLUzftuFq7coarnxbBXU4aQh3N0BJOeeA=\ngithub.com/moby/docker-image-spec v1.3.1 h1:jMKff3w6PgbfSa69GfNg+zN/XLhfXJGnEx3Nl2EsFP0=\ngithub.com/moby/docker-image-spec v1.3.1/go.mod h1:eKmb5VW8vQEh/BAr2yvVNvuiJuY6UIocYsFu/DxxRpo=\ngithub.com/moby/term v0.5.0 h1:xt8Q1nalod/v7BqbG21f8mQPqH+xAaC9C3N3wfWbVP0=\ngithub.com/moby/term v0.5.0/go.mod h1:8FzsFHVUBGZdbDsJw/ot+X+d5HLUbvklYLJ9uGfcI3Y=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/morikuni/aec v1.0.0 h1:nP9CBfwrvYnBRgY6qfDQkygYDmYwOilePFkwzv4dU8A=\ngithub.com/morikuni/aec v1.0.0/go.mod h1:BbKIizmSmc5MMPqRYbxO4ZU0S0+P200+tUnFx7PXmsc=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=\ngithub.com/oklog/ulid v1.3.1/go.mod h1:CirwcVhetQ6Lv90oh/F+FBtV6XMibvdAFo93nm5qn4U=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.1.0 h1:8SG7/vwALn54lVB/0yZ/MMwhFrPYtpEHQb2IpWsCzug=\ngithub.com/opencontainers/image-spec v1.1.0/go.mod h1:W4s4sFTMaBeK1BQLXbG4AdM2szdn85PY75RI83NrTrM=\ngithub.com/opentracing/basictracer-go v1.0.0/go.mod h1:QfBfYuafItcjQuMwinw9GhYKwFXS9KnPs5lxoYwgW74=\ngithub.com/opentracing/basictracer-go v1.1.0/go.mod h1:V2HZueSJEp879yv285Aap1BS69fQMD+MNP1mRs6mBQc=\ngithub.com/opentracing/opentracing-go v1.0.2/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=\ngithub.com/opentracing/opentracing-go v1.1.0/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=\ngithub.com/opentracing/opentracing-go v1.2.0/go.mod h1:GxEUsuufX4nBwe+T+Wl9TAgYrxe9dPLANfrWvHYVTgc=\ngithub.com/pascaldekloe/goe v0.0.0-20180627143212-57f6aae5913c/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=\ngithub.com/paulmach/go.geojson v1.5.0 h1:7mhpMK89SQdHFcEGomT7/LuJhwhEgfmpWYVlVmLEdQw=\ngithub.com/paulmach/go.geojson v1.5.0/go.mod h1:DgdUy2rRVDDVgKqrjMe2vZAHMfhDTrjVKt3LmHIXGbU=\ngithub.com/pelletier/go-toml v1.2.0 h1:T5zMGML61Wp+FlcbWjRDT7yAxhJNAiPPLOFECq181zc=\ngithub.com/pelletier/go-toml v1.2.0/go.mod h1:5z9KED0ma1S8pY6P1sdut58dfprrGBbd/94hg7ilaic=\ngithub.com/philhofer/fwd v1.0.0 h1:UbZqGr5Y38ApvM/V/jEljVxwocdweyH+vmYvRPBnbqQ=\ngithub.com/philhofer/fwd v1.0.0/go.mod h1:gk3iGcWd9+svBvR0sR+KPcfE+RNWozjowpeBVG3ZVNU=\ngithub.com/pierrec/lz4/v4 v4.1.22 h1:cKFw6uJDK+/gfw5BcDL0JL5aBsAFdsIT18eRtLj7VIU=\ngithub.com/pierrec/lz4/v4 v4.1.22/go.mod h1:gZWDp/Ze/IJXGXf23ltt2EXimqmTUXEy0GFuRQyBid4=\ngithub.com/pingcap/errors v0.11.4 h1:lFuQV/oaUMGcD2tqt+01ROSmJs75VG1ToEOkZIZ4nE4=\ngithub.com/pingcap/errors v0.11.4/go.mod h1:Oi8TUi2kEtXXLMJk9l1cGmz20kV3TaQ0usTwv5KuLY8=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/profile v1.7.0 h1:hnbDkaNWPCLMO9wGLdBFTIZvzDrDfBM2072E1S9gJkA=\ngithub.com/pkg/profile v1.7.0/go.mod h1:8Uer0jas47ZQMJ7VD+OHknK4YDY07LPUC6dEvqDjvNo=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/posener/complete v1.1.1/go.mod h1:em0nMJCgc9GFtwrmVmEMR/ZL6WyhyjMBndrE9hABlRI=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v0.9.3/go.mod h1:/TN21ttK/J9q6uSwhBd54HahCDft0ttaMvbicHlPoso=\ngithub.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=\ngithub.com/prometheus/client_golang v1.7.1/go.mod h1:PY5Wy2awLA44sXw4AOSfFBetzPP4j5+D6mVACh+pe2M=\ngithub.com/prometheus/client_golang v1.11.0/go.mod h1:Z6t4BnS23TR94PD6BsDNk8yVqroYurpAkEiz0P2BEV0=\ngithub.com/prometheus/client_golang v1.12.1/go.mod h1:3Z9XVyYiZYEO+YQWt3RD2R3jrbd179Rt297l4aS6nDY=\ngithub.com/prometheus/client_golang v1.12.2/go.mod h1:3Z9XVyYiZYEO+YQWt3RD2R3jrbd179Rt297l4aS6nDY=\ngithub.com/prometheus/client_golang v1.13.0/go.mod h1:vTeo+zgvILHsnnj/39Ou/1fPN5nJFOEMgftOUOmlvYQ=\ngithub.com/prometheus/client_golang v1.20.5 h1:cxppBPuYhUnsO6yo/aoRol4L7q7UFfdm+bR9r+8l63Y=\ngithub.com/prometheus/client_golang v1.20.5/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.2.0/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=\ngithub.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=\ngithub.com/prometheus/common v0.0.0-20181113130724-41aa239b4cce/go.mod h1:daVV7qP5qjZbuso7PdcryaAu0sAZbrN9i7WWcTMWvro=\ngithub.com/prometheus/common v0.4.0/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.10.0/go.mod h1:Tlit/dnDKsSWFlCLTWaA1cyBgKHSMdTB80sz/V91rCo=\ngithub.com/prometheus/common v0.26.0/go.mod h1:M7rCNAaPfAosfx8veZJCuw84e35h3Cfd9VFqTh1DIvc=\ngithub.com/prometheus/common v0.32.1/go.mod h1:vu+V0TpY+O6vW9J44gczi3Ap/oXXR10b+M/gUGO4Hls=\ngithub.com/prometheus/common v0.35.0/go.mod h1:phzohg0JFMnBEFGxTDbfu3QyL5GI8gTQJFhYO5B3mfA=\ngithub.com/prometheus/common v0.37.0/go.mod h1:phzohg0JFMnBEFGxTDbfu3QyL5GI8gTQJFhYO5B3mfA=\ngithub.com/prometheus/common v0.55.0 h1:KEi6DK7lXW/m7Ig5i47x0vRzuBsHuvJdi5ee6Y3G1dc=\ngithub.com/prometheus/common v0.55.0/go.mod h1:2SECS4xJG1kd8XF9IcM1gMX6510RAEL65zxzNImwdc8=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.0-20190507164030-5867b95ac084/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.1.3/go.mod h1:lV6e/gmhEcM9IjHGsFOCxxuZ+z1YqCvr4OA4YeYWdaU=\ngithub.com/prometheus/procfs v0.6.0/go.mod h1:cz+aTbrPOrUb4q7XlbU9ygM+/jj0fzG6c1xBZuNvfVA=\ngithub.com/prometheus/procfs v0.7.3/go.mod h1:cz+aTbrPOrUb4q7XlbU9ygM+/jj0fzG6c1xBZuNvfVA=\ngithub.com/prometheus/procfs v0.8.0/go.mod h1:z7EfXMXOkbkqb9IINtpCn86r/to3BnA0uaxHdg830/4=\ngithub.com/prometheus/procfs v0.15.1 h1:YagwOFzUgYfKKHX6Dr+sHT7km/hxC76UB0learggepc=\ngithub.com/prometheus/procfs v0.15.1/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=\ngithub.com/prometheus/statsd_exporter v0.22.7 h1:7Pji/i2GuhK6Lu7DHrtTkFmNBCudCPT1pX2CziuyQR0=\ngithub.com/prometheus/statsd_exporter v0.22.7/go.mod h1:N/TevpjkIh9ccs6nuzY3jQn9dFqnUakOjnEuMPJJJnI=\ngithub.com/prometheus/tsdb v0.7.1/go.mod h1:qhTCs0VvXwvX/y3TZrWD7rabWM+ijKTux40TwIPHuXU=\ngithub.com/rcrowley/go-metrics v0.0.0-20201227073835-cf1acfcdf475 h1:N/ElC8H3+5XpJzTSTfLsJV/mx9Q9g7kxmchpfZyxgzM=\ngithub.com/rcrowley/go-metrics v0.0.0-20201227073835-cf1acfcdf475/go.mod h1:bCqnVzQkZxMG4s8nGwiZ5l3QUCyqpo9Y+/ZMZ9VjZe4=\ngithub.com/rogpeppe/fastuuid v0.0.0-20150106093220-6724a57986af/go.mod h1:XWv6SoW27p1b0cqNHllgS5HIMJraePCO15w5zCzIWYg=\ngithub.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\ngithub.com/rogpeppe/go-internal v1.10.0 h1:TMyTOH3F/DB16zRVcYyreMH6GnZZrwQVAoYjRBZyWFQ=\ngithub.com/rogpeppe/go-internal v1.10.0/go.mod h1:UQnix2H7Ngw/k4C5ijL5+65zddjncjaFoBhdsK/akog=\ngithub.com/rs/cors v1.6.0/go.mod h1:gFx+x8UowdsKA9AchylcLynDq+nNFfI8FkUZdN/jGCU=\ngithub.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=\ngithub.com/ryanuber/columnize v2.1.0+incompatible/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=\ngithub.com/ryanuber/go-glob v1.0.0 h1:iQh3xXAumdQ+4Ufa5b25cRpC5TYKlno6hsv6Cb3pkBk=\ngithub.com/ryanuber/go-glob v1.0.0/go.mod h1:807d1WSdnB0XRJzKNil9Om6lcp/3a0v4qIHxIXzX/Yc=\ngithub.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529/go.mod h1:DxrIzT+xaE7yg65j358z/aeFdxmN0P9QXhEzd20vsDc=\ngithub.com/sergi/go-diff v1.1.0 h1:we8PVUC3FE2uYfodKH/nBHMSetSfHDR6scGdBi+erh0=\ngithub.com/sergi/go-diff v1.1.0/go.mod h1:STckp+ISIX8hZLjrqAeVduY0gWCT9IjLuqbuNXdaHfM=\ngithub.com/shurcooL/httpfs v0.0.0-20171119174359-809beceb2371/go.mod h1:ZY1cvUeJuFPAdZ/B6v7RHavJWZn2YPVFQ1OSXhCGOkg=\ngithub.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=\ngithub.com/shurcooL/vfsgen v0.0.0-20180121065927-ffb13db8def0/go.mod h1:TrYk7fJVaAttu97ZZKrO9UbRa8izdowaMIZcxYMbVaw=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/sirupsen/logrus v1.5.0/go.mod h1:+F7Ogzej0PZc/94MaYx/nvG9jOFMD2osvC3s+Squfpo=\ngithub.com/sirupsen/logrus v1.6.0/go.mod h1:7uNnSEd1DgxDLC74fIahvMZmmYsHGZGEOFrfsX/uA88=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/smartystreets/assertions v0.0.0-20180927180507-b2de0cb4f26d/go.mod h1:OnSkiWE9lh6wB0YB77sQom3nweQdgAjqCqsofrRNTgc=\ngithub.com/smartystreets/goconvey v0.0.0-20190330032615-68dc04aab96a/go.mod h1:syvi0/a8iFYH4r/RixwvyeAJjdLS9QV7WQ/tjFTllLA=\ngithub.com/smartystreets/goconvey v1.6.4/go.mod h1:syvi0/a8iFYH4r/RixwvyeAJjdLS9QV7WQ/tjFTllLA=\ngithub.com/soheilhy/cmux v0.1.4/go.mod h1:IM3LyeVVIOuxMH7sFAkER9+bJ4dT7Ms6E4xg4kGIyLM=\ngithub.com/soheilhy/cmux v0.1.5 h1:jjzc5WVemNEDTLwv9tlmemhC73tI08BNOIGwBOo10Js=\ngithub.com/soheilhy/cmux v0.1.5/go.mod h1:T7TcVDs9LWfQgPlPsdngu6I6QIoyIFZDDC6sNE1GqG0=\ngithub.com/spaolacci/murmur3 v0.0.0-20180118202830-f09979ecbc72/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=\ngithub.com/spf13/afero v1.1.2/go.mod h1:j4pytiNVoe2o6bmDsKpLACNPDBIoEAkihy7loJ1B0CQ=\ngithub.com/spf13/afero v1.11.0 h1:WJQKhtpdm3v2IzqG8VMqrr6Rf3UYpEF239Jy9wNepM8=\ngithub.com/spf13/afero v1.11.0/go.mod h1:GH9Y3pIexgf1MTIWtNGyogA5MwRIDXGUr+hbWNoBjkY=\ngithub.com/spf13/cast v1.3.0/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=\ngithub.com/spf13/cast v1.3.1 h1:nFm6S0SMdyzrzcmThSipiEubIDy8WEXKNZ0UOgiRpng=\ngithub.com/spf13/cast v1.3.1/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/jwalterweatherman v1.0.0 h1:XHEdyB+EcvlqZamSM4ZOMGlc93t6AcsBEu9Gc1vn7yk=\ngithub.com/spf13/jwalterweatherman v1.0.0/go.mod h1:cQK4TGJAtQXfYWX+Ddv3mKDzgVb68N+wFjFa4jdeBTo=\ngithub.com/spf13/pflag v1.0.3/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/spf13/viper v1.7.1 h1:pM5oEahlgWv/WnHXpgbKz7iLIxRf65tye2Ci+XFK5sk=\ngithub.com/spf13/viper v1.7.1/go.mod h1:8WkrPz2fc9jxqZNCJI/76HCieCp4Q8HaLFoCha5qpdg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2 h1:xuMeJ0Sdp5ZMRXx/aWO6RZxdr3beISkG5/G/aIRr3pY=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.2.1/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/stvp/go-udp-testing v0.0.0-20201019212854-469649b16807/go.mod h1:7jxmlfBCDBXRzr0eAQJ48XC1hBu1np4CS5+cHEYfwpc=\ngithub.com/subosito/gotenv v1.2.0/go.mod h1:N0PQaV/YGNqwC0u51sEeR/aUtSLEXKX9iv69rRypqCw=\ngithub.com/subosito/gotenv v1.6.0 h1:9NlTDc1FTs4qu0DDq7AEtTPNw6SVm7uBMsUCUjABIf8=\ngithub.com/subosito/gotenv v1.6.0/go.mod h1:Dk4QP5c2W3ibzajGcXpNraDfq2IrhjMIvMSWPKKo0FU=\ngithub.com/tinylib/msgp v1.1.2 h1:gWmO7n0Ys2RBEb7GPYB9Ujq8Mk5p2U08lRnmMcGy6BQ=\ngithub.com/tinylib/msgp v1.1.2/go.mod h1:+d+yLhGm8mzTaHzB+wgMYrodPfmZrzkirds8fDWklFE=\ngithub.com/tmc/grpc-websocket-proxy v0.0.0-20190109142713-0ad062ec5ee5/go.mod h1:ncp9v5uamzpCO7NfCPTXjqaC+bZgJeR0sMTm6dMHP7U=\ngithub.com/twpayne/go-geom v1.5.7 h1:7fdceDUr03/MP7rAKOaTV6x9njMiQdxB/D0PDzMTCDc=\ngithub.com/twpayne/go-geom v1.5.7/go.mod h1:y4fTAQtLedXW8eG2Yo4tYrIGN1yIwwKkmA+K3iSHKBA=\ngithub.com/uber/jaeger-client-go v2.25.0+incompatible h1:IxcNZ7WRY1Y3G4poYlx24szfsn/3LvK9QHCq9oQw8+U=\ngithub.com/uber/jaeger-client-go v2.25.0+incompatible/go.mod h1:WVhlPFC8FDjOFMMWRy2pZqQJSXxYSwNYOkTr/Z6d3Kk=\ngithub.com/urfave/cli/v2 v2.1.1/go.mod h1:SE9GqnLQmjVa0iPEY0f1w3ygNIYcIJ0OKPMoW2caLfQ=\ngithub.com/vektah/dataloaden v0.2.1-0.20190515034641-a19b9a6e7c9e/go.mod h1:/HUdMve7rvxZma+2ZELQeNh88+003LL7Pf/CZ089j8U=\ngithub.com/vektah/gqlparser/v2 v2.1.0/go.mod h1:SyUiHgLATUR8BiYURfTirrTcGpcE+4XkV2se04Px1Ms=\ngithub.com/viterin/partial v1.1.0 h1:iH1l1xqBlapXsYzADS1dcbizg3iQUKTU1rbwkHv/80E=\ngithub.com/viterin/partial v1.1.0/go.mod h1:oKGAo7/wylWkJTLrWX8n+f4aDPtQMQ6VG4dd2qur5QA=\ngithub.com/viterin/vek v0.4.2 h1:Vyv04UjQT6gcjEFX82AS9ocgNbAJqsHviheIBdPlv5U=\ngithub.com/viterin/vek v0.4.2/go.mod h1:A4JRAe8OvbhdzBL5ofzjBS0J29FyUrf95tQogvtHHUc=\ngithub.com/xdg/scram v1.0.5 h1:TuS0RFmt5Is5qm9Tm2SoD89OPqe4IRiFtyFY4iwWXsw=\ngithub.com/xdg/scram v1.0.5/go.mod h1:lB8K/P019DLNhemzwFU4jHLhdvlE6uDZjXFejJXr49I=\ngithub.com/xdg/stringprep v1.0.3 h1:cmL5Enob4W83ti/ZHuZLuKD/xqJfus4fVPwE+/BDm+4=\ngithub.com/xdg/stringprep v1.0.3/go.mod h1:Jhud4/sHMO4oL310DaZAKk9ZaJ08SJfe+sJh0HrGL1Y=\ngithub.com/xiang90/probing v0.0.0-20190116061207-43a291ad63a2/go.mod h1:UETIi67q53MR2AWcXfiuqkDkRtnGDLqkBTpCHuJHxtU=\ngithub.com/yuin/goldmark v1.1.25/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.32/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngo.etcd.io/bbolt v1.3.2/go.mod h1:IbVyRI1SCnLcuJnV2u8VeU0CEYM7e686BmAb1XKL+uU=\ngo.etcd.io/etcd/client/pkg/v3 v3.5.17 h1:XxnDXAWq2pnxqx76ljWwiQ9jylbpC4rvkAeRVOUKKVw=\ngo.etcd.io/etcd/client/pkg/v3 v3.5.17/go.mod h1:4DqK1TKacp/86nJk4FLQqo6Mn2vvQFBmruW3pP14H/w=\ngo.etcd.io/etcd/raft/v3 v3.5.17 h1:wHPW/b1oFBw/+HjDAQ9vfr17OIInejTIsmwMZpK1dNo=\ngo.etcd.io/etcd/raft/v3 v3.5.17/go.mod h1:uapEfOMPaJ45CqBYIraLO5+fqyIY2d57nFfxzFwy4D4=\ngo.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=\ngo.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=\ngo.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.3/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.4/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.23.0/go.mod h1:XItmlyltB5F7CS4xOC1DcqMoFqwtC6OG2xF7mCv7P7E=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0 h1:TT4fX+nBOA/+LUkobKGW1ydGcn+G3vRw9+g5HwCphpk=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0/go.mod h1:L7UH0GbB0p47T4Rri3uHjbpCFYrVrwc1I25QhNPiGK8=\ngo.opentelemetry.io/otel v1.6.3/go.mod h1:7BgNga5fNlF/iZjG06hM3yofffp0ofKCDwSXx1GC4dI=\ngo.opentelemetry.io/otel v1.31.0 h1:NsJcKPIW0D0H3NgzPDHmo0WW6SptzPdqg/L1zsIm2hY=\ngo.opentelemetry.io/otel v1.31.0/go.mod h1:O0C14Yl9FgkjqcCZAsE053C13OaddMYr/hz6clDkEJE=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.29.0 h1:dIIDULZJpgdiHz5tXrTgKIMLkus6jEFa7x5SOKcyR7E=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.29.0/go.mod h1:jlRVBe7+Z1wyxFSUs48L6OBQZ5JwH2Hg/Vbl+t9rAgI=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.29.0 h1:JAv0Jwtl01UFiyWZEMiJZBiTlv5A50zNs8lsthXqIio=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.29.0/go.mod h1:QNKLmUEAq2QUbPQUfvw4fmv0bgbK7UlOSFCnXyfvSNc=\ngo.opentelemetry.io/otel/metric v1.31.0 h1:FSErL0ATQAmYHUIzSezZibnyVlft1ybhy4ozRPcF2fE=\ngo.opentelemetry.io/otel/metric v1.31.0/go.mod h1:C3dEloVbLuYoX41KpmAhOqNriGbA+qqH6PQ5E5mUfnY=\ngo.opentelemetry.io/otel/sdk v1.31.0 h1:xLY3abVHYZ5HSfOg3l2E5LUj2Cwva5Y7yGxnSW9H5Gk=\ngo.opentelemetry.io/otel/sdk v1.31.0/go.mod h1:TfRbMdhvxIIr/B2N2LQW2S5v9m3gOQ/08KsbbO5BPT0=\ngo.opentelemetry.io/otel/sdk/metric v1.31.0 h1:i9hxxLJF/9kkvfHppyLL55aW7iIJz4JjxTeYusH7zMc=\ngo.opentelemetry.io/otel/sdk/metric v1.31.0/go.mod h1:CRInTMVvNhUKgSAMbKyTMxqOBC0zgyxzW55lZzX43Y8=\ngo.opentelemetry.io/otel/trace v1.6.3/go.mod h1:GNJQusJlUgZl9/TQBPKU/Y/ty+0iVB5fjhKeJGZPGFs=\ngo.opentelemetry.io/otel/trace v1.31.0 h1:ffjsj1aRouKewfr85U2aGagJ46+MvodynlQ1HYdmJys=\ngo.opentelemetry.io/otel/trace v1.31.0/go.mod h1:TXZkRk7SM2ZQLtR6eoAWQFIHPvzQ06FJAsO1tJg480A=\ngo.opentelemetry.io/proto/otlp v1.3.1 h1:TrMUixzpM0yuc/znrFTP9MMRh8trP93mkCiDVeXrui0=\ngo.opentelemetry.io/proto/otlp v1.3.1/go.mod h1:0X1WI4de4ZsLrrJNLAQbFeLCm3T7yBkR0XqQ7niQU+8=\ngo.uber.org/atomic v1.4.0/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\ngo.uber.org/multierr v1.1.0/go.mod h1:wR5kodmAFQ0UK8QlbwjlSNy0Z68gJhDJUG5sjR94q/0=\ngo.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=\ngo.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=\ngo.uber.org/zap v1.10.0/go.mod h1:vwi/ZaCAaUcBkycHslxD9B2zi4UTXhF60s6SWpuDF0Q=\ngo.uber.org/zap v1.27.0 h1:aJMhYGrd5QSmlpLMr2MftRKl7t8J8PTZPA732ud/XR8=\ngo.uber.org/zap v1.27.0/go.mod h1:GB2qFLM7cTU87MWRP2mPIjqfIDnGu+VIO4V/SdhGo2E=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20181029021203-45a5f77698d3/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190513172903-22d7a77e9e5f/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.6.0/go.mod h1:OFC/31mSvZgRz0V1QTNCzfAI1aIRzbiufJtkMIlEp58=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20180321215751-8460e604b9de/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20180807140117-3d87b88a115f/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190125153040-c74c464bbbf2/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=\ngolang.org/x/exp v0.0.0-20190829153037-c13cbed26979/go.mod h1:86+5VVa7VpoJ4kLfm080zCjGlMRFzhUhsZKEZO7MGek=\ngolang.org/x/exp v0.0.0-20191030013958-a1ab85dbe136/go.mod h1:JXzH8nQsPlswgeRAPE3MuO9GYsAcnJvJ4vnMwN/5qkY=\ngolang.org/x/exp v0.0.0-20191129062945-2f5052295587/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20191227195350-da58074b4299/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200119233911-0405dc783f0a/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200207192155-f17229e696bd/go.mod h1:J/WKrq2StrnmMY6+EHIKF9dgMWnmCNThgcyBT1FY9mM=\ngolang.org/x/exp v0.0.0-20200224162631-6cc2880d07d6/go.mod h1:3jZMyOhIsHpP37uCMkUooju7aAi5cS1Q23tOzKc+0MU=\ngolang.org/x/exp v0.0.0-20240909161429-701f63a606c0 h1:e66Fs6Z+fZTbFBAxKfP3PALWBtpfqks2bwGcexMxgtk=\ngolang.org/x/exp v0.0.0-20240909161429-701f63a606c0/go.mod h1:2TbTHSBQa924w8M6Xs1QcRcFwyucIwBGpK1p2f1YFFY=\ngolang.org/x/image v0.0.0-20180708004352-c73c2afc3b81/go.mod h1:ux5Hcp/YLpHSI86hEcLt0YII63i6oz57MZXIpbrjZUs=\ngolang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\ngolang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190409202823-959b441ac422/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190909230951-414d861bb4ac/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20191125180803-fdd1cda4f05f/go.mod h1:5qLYkcX4OjUUV8bRuDixDT3tpyyb+LUpUlRWLxfhWrs=\ngolang.org/x/lint v0.0.0-20200130185559-910be7a94367/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20200302205851-738671d3881b/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=\ngolang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=\ngolang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=\ngolang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.1.1-0.20191107180719-034126e5016b/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.22.0 h1:D4nJWe9zXqHOmWqj4VMOJhvzj7bEZg4wEYa759z1pH4=\ngolang.org/x/mod v0.22.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181023162649-9b4f9f5ad519/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181201002055-351d144fa1fc/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181220203305-927f97764cc3/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190501004415-9ce7a6920f09/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190503192946-f4e77d36d62c/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190522155817-f3200d17e092/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190628185345-da137c7871d7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190724013045-ca1201d0de80/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20191209160850-c0dbc17a3553/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200114155413-6afb5195e5aa/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200222125558-5a598a2470a0/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200301022130-244492dfa37a/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200324143707-d3edc9973b7e/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200421231249-e086a090c8fd/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200501053045-e0ff5e5a1de5/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200506145744-7e3656a0809f/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200513185701-a91f0712d120/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200520182314-0ba52f642ac2/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200625001655-4c5254603344/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200707034311-ab3426394381/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201202161906-c7110b5ffcbb/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210525063256-abc453219eb5/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20220127200216-cd36cc0744dd/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\ngolang.org/x/net v0.0.0-20220225172249-27dd8689420f/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.7.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.33.0 h1:74SYHlV8BIgHIFC/LrYkOGIwL19eTYXQ5wc6TBuO36I=\ngolang.org/x/net v0.33.0/go.mod h1:HXLR5J+9DxmrqMwG9qjGCxZ+zKXxBru04zlTvWlWuN4=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20191202225959-858c2ad4c8b6/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20210514164344-f6687ab2804c/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20220223155221-ee480838109b/go.mod h1:DAh4E804XQdzx2j+YRIaUnCqCV2RuMz24cGBJ5QYIrc=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200317015054-43a5402ce75a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201207232520-09787c993a3a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220601150217-0de741cfad7f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180823144017-11551d06cbcc/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181026203630-95b1ffbd15a5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181107165924-66b7b1311ac8/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190502145724-3ef323f4f1fd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190507160741-ecd444e8653b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190606165138-5da285871e9c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190624142023-c5567b49c5d0/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190726091711-fc99dfbffb4e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191001151750-bb3f8db39f24/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191228213918-04cbcbbfeed8/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200106162015-b016eb3dc98e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200113162924-86b910548bc1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200212091648-12a6c2dcc1e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200302150141-5c8b2ff67527/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200331124033-c3d80250170d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200501052902-10377860bb8e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200511232937-7e40ca221e25/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200515095857-1151b9dac4a9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200523222454-059865788121/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200615200032-f1bc736245b1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200625212154-ddb9806d33ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200803210538-64077c9b5642/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210603081109-ebe580a85c40/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211007075335-d3039528d8ac/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220114195835-da31bd327af9/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220708085239-5a0f0661e09d/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.27.0 h1:WP60Sv1nlK1T6SupCHbXzSaN0b9wUmsPoRS9b61A23Q=\ngolang.org/x/term v0.27.0/go.mod h1:iMsnZpn0cago0GOrHO2+Y7u7JPn5AylBrcoWkElMTSM=\ngolang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.6.0 h1:eTDhh4ZXt5Qf0augr54TN6suAUudPcawVZeIAPU7D4U=\ngolang.org/x/time v0.6.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180221164845-07fd8470d635/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20180525024113-a5b4c53f6e8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20181030221726-6c7e314b6563/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190125232054-d66bd3c5d5a6/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190206041539-40960b6deb8e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190328211700-ab21143f2384/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190425150028-36563e24a262/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190506145303-2d16b83fe98c/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190515012406-7d7faa4812bd/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190606124116-d0a3d012864b/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190628153133-6cdbf07be9d0/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190816200558-6889da9d5479/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20190911174233-4f2ddba30aff/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191112195655-aa38f8e97acc/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191113191852-77e3bb0ad9e7/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191115202509-3a792d9c32b2/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191125144606-a911d9008d1f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191130070609-6e064ea0cf2d/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191216173652-a0e659d51361/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20191227053925-7b8e75db28f4/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200114235610-7ae403b6b589/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200117161641-43d50277825c/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200122220014-bf1340f18c4a/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200204074204-1cc6d1ef6c74/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200207183749-b753a1ba74fa/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200212150539-ea181f53ac56/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200224181240-023911ca70b2/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200227222343-706bc42d1f0d/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200304193943-95d2e580d8eb/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200312045724-11d5b4c81c7d/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200331025713-a30bf2db82d4/go.mod h1:Sl4aGygMT6LrqrWclx+PTx3U+LnKx/seiNR+3G19Ar8=\ngolang.org/x/tools v0.0.0-20200501065659-ab2804fb9c9d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200512131952-2bc93b1c0c88/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200515010526-7d3b6ebf133d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200618134242-20370b0cb4b2/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200729194436-6467de6f59a7/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200804011535-6c149bb5ef0d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200825202427-b303f430e36d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.28.0 h1:WuB6qZ4RPCQo5aP3WdKZS7i595EdWqWR8vqJTlwTVK8=\ngolang.org/x/tools v0.28.0/go.mod h1:dcIOrVd3mfQKTgrDVQHqCPMWy6lnhfhtX3hLXYVLfRw=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngonum.org/v1/gonum v0.0.0-20180816165407-929014505bf4/go.mod h1:Y+Yx5eoAFn32cQvJDxZx5Dpnq+c3wtXuadVZAcxbbBo=\ngonum.org/v1/gonum v0.8.2 h1:CCXrcPKiGGotvnN6jfUsKk4rRqm7q09/YbKb5xCEvtM=\ngonum.org/v1/gonum v0.8.2/go.mod h1:oe/vMfY3deqTw+1EZJhuvEW2iwGF1bW9wwu7XCu0+v0=\ngonum.org/v1/netlib v0.0.0-20190313105609-8cb42192e0e0/go.mod h1:wa6Ws7BG/ESfp6dHfk7C6KdzKA7wR7u/rKwOGE66zvw=\ngonum.org/v1/plot v0.0.0-20190515093506-e2840ee46a6b/go.mod h1:Wt8AAjI+ypCyYX3nZBvf6cAIx93T+c/OS2HFAYskSZc=\ngoogle.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=\ngoogle.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=\ngoogle.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.9.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.13.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.14.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.15.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.17.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.18.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.19.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.20.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.22.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.24.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.28.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.29.0/go.mod h1:Lcubydp8VUV7KeIHD9z2Bys/sm/vGKnG1UHuDBSrHWM=\ngoogle.golang.org/api v0.30.0/go.mod h1:QGmEvQ87FHZNiUVJkT14jQNYJ4ZJjdRF23ZXz5138Fc=\ngoogle.golang.org/api v0.196.0 h1:k/RafYqebaIJBO3+SMnfEGtFVlvp5vSgqTUF54UN/zg=\ngoogle.golang.org/api v0.196.0/go.mod h1:g9IL21uGkYgvQ5BZg6BAtoGJQIm8r6EgaAbpNey5wBE=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.6.1/go.mod h1:i06prIuMbXzDqacNJfV5OdTW448YApPu5ww/cMBSeb0=\ngoogle.golang.org/appengine v1.6.5/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.6/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190801165951-fa694d86fc64/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190911173649-1774047e7e51/go.mod h1:IbNlFCBrqXvoKpeg0TB2l7cyZUmoaFKYIwrEpbDKLA8=\ngoogle.golang.org/genproto v0.0.0-20191108220845-16a3f7862a1a/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191115194625-c23dd37a84c9/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191216164720-4f79533eabd1/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191230161307-f3c370f40bfb/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200115191322-ca5a22157cba/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200122232147-0452cf42e150/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200204135345-fa8e72b47b90/go.mod h1:GmwEX6Z4W5gMy59cAlVYjN9JhxgbQH6Gn+gFDQe2lzA=\ngoogle.golang.org/genproto v0.0.0-20200212174721-66ed5ce911ce/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200224152610-e50cd9704f63/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200228133532-8c2c7df3a383/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200305110556-506484158171/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200312145019-da6875a35672/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200331122359-1ee6d9798940/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200430143042-b979b6f78d84/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200511104702-f5ebc3bea380/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200515170657-fc4c6c6a6587/go.mod h1:YsZOwe1myG/8QRHRsmBRE1LrgQY60beZKjly0O1fX9U=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20200618031413-b414f8b61790/go.mod h1:jDfRM7FcilCzHH/e9qn6dsT145K34l5v+OpcnNgKAAA=\ngoogle.golang.org/genproto v0.0.0-20200729003335-053ba62fc06f/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200804131852-c06518451d9c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200825200019-8632dd797987/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20240903143218-8af14fe29dc1 h1:BulPr26Jqjnd4eYDVe+YvyR7Yc2vJGkO5/0UxD0/jZU=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241015192408-796eee8c2d53 h1:fVoAXEKA4+yufmbdVYv+SE73+cPZbbbe8paLsHfkK+U=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241015192408-796eee8c2d53/go.mod h1:riSXTwQ4+nqmPGtobMFyW5FqVAmIs0St6VPp4Ug7CE4=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241015192408-796eee8c2d53 h1:X58yt85/IXCx0Y3ZwN6sEIKZzQtDEYaBWrDvErdXrRE=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241015192408-796eee8c2d53/go.mod h1:GX3210XPVPUjJbTUbvwI8f2IpZDMZuPJWDzDuebbviI=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=\ngoogle.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.1/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.28.0/go.mod h1:rpkK4SK4GF4Ach/+MFLZUBavHOvF2JJB5uozKKal+60=\ngoogle.golang.org/grpc v1.29.1/go.mod h1:itym6AZVZYACWQqET3MqgPpjcuV5QH3BxFS3IjizoKk=\ngoogle.golang.org/grpc v1.30.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.31.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.69.2 h1:U3S9QEtbXC0bYNvRtcoklF3xGtLViumSYxWykJS+7AU=\ngoogle.golang.org/grpc v1.69.2/go.mod h1:vyjdE6jLBI76dgpDojsFGNaHlxdjXN9ghpnd2o7JGZ4=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.24.0/go.mod h1:r/3tXBNzIEhYS9I1OUVjXDlt8tc493IdKGjtUeSXeh4=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.28.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=\ngoogle.golang.org/protobuf v1.28.1/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=\ngoogle.golang.org/protobuf v1.36.1 h1:yBPeRvTftaleIgM3PZ/WBIZ7XM/eEYAaEyCwvyjq/gk=\ngoogle.golang.org/protobuf v1.36.1/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/DataDog/dd-trace-go.v1 v1.22.0 h1:gpWsqqkwUldNZXGJqT69NU9MdEDhLboK1C4nMgR0MWw=\ngopkg.in/DataDog/dd-trace-go.v1 v1.22.0/go.mod h1:DVp8HmDh8PuTu2Z0fVVlBsyWaC++fzwVCaGWylTe3tg=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/ini.v1 v1.42.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/ini.v1 v1.51.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/ini.v1 v1.67.0 h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=\ngopkg.in/ini.v1 v1.67.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/resty.v1 v1.12.0/go.mod h1:mDo4pnntr5jdWRML875a/NmxYqAlA73dVijT2AXvQQo=\ngopkg.in/yaml.v2 v2.0.0-20170812160011-eb3733d160e7/go.mod h1:JAlM8MvJe8wmxCU4Bli9HhUf9+ttbYbLASfIpnQbh74=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.5/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngotest.tools/v3 v3.5.1 h1:EENdUnS3pdur5nybKYIh2Vfgc8IUNBjxDPSjtiJcOzU=\ngotest.tools/v3 v3.5.1/go.mod h1:isy3WKz7GK6uNw/sbHzfKBLvlvXwUyV06n6brMxxopU=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190418001031-e561f6794a2a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=\nhonnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nhonnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nrsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=\nrsc.io/pdf v0.1.1/go.mod h1:n8OzWcQ6Sp37PL01nO98y4iUCRdTGarVfzxY20ICaU4=\nrsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=\nrsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA=\nsourcegraph.com/sourcegraph/appdash v0.0.0-20180110180208-2cc67fd64755/go.mod h1:hI742Nqp5OhwiqlzhgfbWU4mW4yO10fP+LoT9WOswdU=\nsourcegraph.com/sourcegraph/appdash-data v0.0.0-20151005221446-73f23eafcf67/go.mod h1:L5q+DGLGOQFpo1snNEkLOJT2d1YTW66rWNzatr3He1k=\n"
        },
        {
          "name": "graphql",
          "type": "tree",
          "content": null
        },
        {
          "name": "lex",
          "type": "tree",
          "content": null
        },
        {
          "name": "licenses",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo-dark.png",
          "type": "blob",
          "size": 13.1650390625,
          "content": null
        },
        {
          "name": "logo.png",
          "type": "blob",
          "size": 7.064453125,
          "content": null
        },
        {
          "name": "ocagent",
          "type": "tree",
          "content": null
        },
        {
          "name": "paper",
          "type": "tree",
          "content": null
        },
        {
          "name": "posting",
          "type": "tree",
          "content": null
        },
        {
          "name": "protos",
          "type": "tree",
          "content": null
        },
        {
          "name": "query",
          "type": "tree",
          "content": null
        },
        {
          "name": "raftwal",
          "type": "tree",
          "content": null
        },
        {
          "name": "schema",
          "type": "tree",
          "content": null
        },
        {
          "name": "systest",
          "type": "tree",
          "content": null
        },
        {
          "name": "t",
          "type": "tree",
          "content": null
        },
        {
          "name": "task",
          "type": "tree",
          "content": null
        },
        {
          "name": "telemetry",
          "type": "tree",
          "content": null
        },
        {
          "name": "test.sh",
          "type": "blob",
          "size": 8.203125,
          "content": "#!/usr/bin/env bash\n#\n# usage: test.sh [[pkg_regex] test_regex]\n\n# Notes for testing under macOS (Sierra and up)\n# Required Homebrew (https://brew.sh/) packages:\n#   - bash\n#   - curl\n#   - coreutils\n#   - gnu-getopt\n#   - findutils\n#\n# Your $PATH must have all required packages in .bashrc:\n#   PATH=\"/usr/local/opt/gnu-getopt/bin:$PATH\"\n#   PATH=\"/usr/local/opt/curl/bin:$PATH\"\n#   PATH=\"/usr/local/opt/coreutils/libexec/gnubin:$PATH\"\n#   PATH=\"/usr/local/opt/findutils/libexec/gnubin:$PATH\"\n#   export PATH\n#\n# After brew packages and PATHs are set, run tests with:\n#   /usr/local/bin/bash test.sh\n#\n# Keep in mind that the test build will overwrite the \"dgraph\"\n# binary in your $GOPATH/bin with the Linux-ELF binary for Docker.\n\nset -e\nreadonly ME=${0##*/}\nreadonly DGRAPH_ROOT=$(dirname $0)\n\nsource $DGRAPH_ROOT/contrib/scripts/functions.sh\n\nPATH+=:$DGRAPH_ROOT/contrib/scripts/\nGO_TEST_OPTS=( )\nTEST_FAILED=0\nTEST_SET=\"unit\"\nBUILD_TAGS=\n\n#\n# Functions\n#\n\nfunction Usage {\n    echo \"usage: $ME [opts] [[pkg_regex] test_regex]\n\noptions:\n\n    -h --help         output this help message\n    -u --unit         run unit tests only\n    -c --cluster      run unit tests and custom cluster test\n    -C --cluster-only run custom cluster tests only\n    -f --full         run all tests (unit, custom cluster, and systest tests)\n    -F --systest-only run systest tests only\n       --oss          run tests with 'oss' tagging\n    -v --verbose      run tests in verbose mode\n    -n --no-cache     re-run test even if previous result is in cache\n       --short        run tests with -short=true\n\nnotes:\n\n    Specifying pkg_regex implies -c.\"\n}\n\nfunction Info {\n    echo -e \"\\e[1;36mINFO: $*\\e[0m\"\n}\n\nfunction FmtTime {\n    local secs=$(($1 % 60)) min=$(($1 / 60 % 60)) hrs=$(($1 / 60 / 60))\n\n    [[ $hrs -gt 0 ]]               && printf \"%dh \" $hrs\n    [[ $hrs -gt 0 || $min -gt 0 ]] && printf \"%dm \" $min\n                                      printf \"%ds\" $secs\n}\n\nfunction IsCi {\n    [[ ! -z \"$TEAMCITY_VERSION\" ]]\n}\n\nfunction TestFailed {\n    TEST_FAILED=1\n    [[ $CURRENT_TEST ]] && echo $CURRENT_TEST >> $FAILED_TESTS\n}\n\nfunction ListFailedTests {\n    echo -en \"\\e[1;31m\"\n    sed 's/^/  /' $FAILED_TESTS\n    echo -en \"\\e[0m\"\n}\n\nfunction FindCustomClusterTests {\n    # look for directories containing a docker compose and *_test.go files\n    touch $CUSTOM_CLUSTER_TESTS\n    for FILE in $(find -type f -name docker-compose.yml); do\n        DIR=$(dirname $FILE)\n        if grep -q $DIR $MATCHING_TESTS && ls $DIR | grep -q \"_test.go$\"; then\n            echo \"${DIR:1}\\$\" >> $CUSTOM_CLUSTER_TESTS\n        fi\n    done\n}\n\nfunction FindDefaultClusterTests {\n    touch $DEFAULT_CLUSTER_TESTS\n    for PKG in $(grep -v -f $CUSTOM_CLUSTER_TESTS $MATCHING_TESTS); do\n        echo $PKG >> $DEFAULT_CLUSTER_TESTS\n    done\n}\n\nfunction Run {\n    set -o pipefail\n    echo -en \"...\\r\"\n    if IsCi; then\n        go test -json -v ${GO_TEST_OPTS[*]} $@\n        return\n    fi\n    go test ${GO_TEST_OPTS[*]} $@ \\\n    | GREP_COLORS='ne:mt=01;32' egrep --line-buffered --color=always '^ok\\ .*|$' \\\n    | GREP_COLORS='ne:mt=00;38;5;226' egrep --line-buffered --color=always '^\\?\\ .*|$' \\\n    | GREP_COLORS='ne:mt=01;31' egrep --line-buffered --color=always '.*FAIL.*|$'\n}\n\nfunction RunCmd {\n    CURRENT_TEST=$1\n    IsCi && echo \"##teamcity[testStarted name='$1' captureStandardOutput='true']\"\n    if eval \"$@\"; then\n        echo -e \"\\e[1;32mok $1\\e[0m\"\n        IsCi && echo \"##teamcity[testFinished name='$1']\"\n        return 0\n    else\n        echo -e \"\\e[1;31mfail $1\\e[0m\"\n        IsCi && echo \"##teamcity[testFailed name='$1']\"\n        return 1\n    fi\n}\n\nfunction RunDefaultClusterTests {\n    while read -r PKG; do\n        Info \"Running test for $PKG\"\n        CURRENT_TEST=$PKG\n        Run $PKG || TestFailed\n    done < $DEFAULT_CLUSTER_TESTS\n    CURRENT_TEST=\n    return $TEST_FAILED\n}\n\nfunction RunCustomClusterTests {\n    while read -r LINE; do\n        DIR=\"${LINE:1:-1}\"\n        CFG=\"$DIR/docker-compose.yml\"\n        Info \"Running tests in directory $DIR\"\n        restartCluster $DIR/docker-compose.yml\n        pushd $DIR >/dev/null\n        CURRENT_TEST=$DIR\n        Run || TestFailed\n        popd >/dev/null\n    done < $CUSTOM_CLUSTER_TESTS\n    CURRENT_TEST=\n    return $TEST_FAILED\n}\n\n#\n# MAIN\n#\n\necho \"test.sh is DEPRECATED. Please use the Go script in t directory instead.\"\n\nARGS=$(getopt -n$ME -o\"hucCfFvn\" \\\n              -l\"help,unit,cluster,cluster-only,full,systest-only,oss,verbose,no-cache,short,timeout:\" -- \"$@\") \\\n    || exit 1\neval set -- \"$ARGS\"\nwhile true; do\n    case \"$1\" in\n        -h|--help)         Usage; exit 0                   ;;\n        -u|--unit)         TEST_SET=\"unit\"                 ;;\n        -c|--cluster)      TEST_SET=\"unit:cluster\"         ;;\n        -C|--cluster-only) TEST_SET=\"cluster\"              ;;\n        -f|--full)         TEST_SET=\"unit:cluster:systest\" ;;\n        -F|--systest-only) TEST_SET=\"systest\"              ;;\n        -v|--verbose)      GO_TEST_OPTS+=( \"-v\" )          ;;\n        -n|--no-cache)     GO_TEST_OPTS+=( \"-count=1\" )    ;;\n           --oss)          GO_TEST_OPTS+=( \"-tags=oss\" )   ;;\n           --short)        GO_TEST_OPTS+=( \"-short=true\" ) ;;\n        -t|--timeout)      GO_TEST_OPTS+=( \"-timeout=$2\" ) ;;\n        --)                shift; break                    ;;\n    esac\n    shift\ndone\n\ncd $DGRAPH_ROOT\n\n# tests should put temp files under this directory for easier cleanup\nexport TMPDIR=$(mktemp --tmpdir --directory $ME.tmp-XXXXXX)\ntrap \"rm -rf $TMPDIR\" EXIT\n\n# docker-compose files may use this to run as user instead of as root\nexport UID\n\nMATCHING_TESTS=$TMPDIR/tests\nCUSTOM_CLUSTER_TESTS=$TMPDIR/custom\nDEFAULT_CLUSTER_TESTS=$TMPDIR/default\nFAILED_TESTS=$TMPDIR/failures\n\nif [[ $# -eq 0 ]]; then\n    go list ./... > $MATCHING_TESTS\n    if [[ $TEST_SET == unit ]]; then\n        Info \"Running only unit tests\"\n    fi\nelif [[ $# -eq 1 || $# -eq 2 ]]; then\n    # Remove the trailing slash from pkg_regex.\n    # This is helpful when autocomplete returns something like `dirname/`.\n    REGEX=${1%/}\n    go list ./... | grep $REGEX > $MATCHING_TESTS\n    Info \"Running only tests matching '$REGEX'\"\n    RUN_ALL=\n\n    if [ $# -eq 2 ]; then\n        GO_TEST_OPTS+=( \"-v\" \"-run=$2\" )\n    fi\nelse\n    echo >&2 \"usage: $ME [pkg_regex [test_regex]]\"\n    exit 1\nfi\n\n# assemble list of tests before executing any\nFindCustomClusterTests\nFindDefaultClusterTests\n\n# abort all tests on Ctrl-C, not just the current one\ntrap \"echo >&2 SIGINT ; exit 2\" SIGINT\n\nSTART_TIME=$(date +%s)\n\nif [[ :${TEST_SET}: == *:unit:* ]]; then\n    if [[ -s $DEFAULT_CLUSTER_TESTS ]]; then\n        Info \"Running tests using the default cluster\"\n        restartCluster\n        RunDefaultClusterTests || TestFailed\n    else\n        Info \"Skipping default cluster tests because none match\"\n    fi\nfi\n\nif [[ :${TEST_SET}: == *:cluster:* ]]; then\n    if [[ -s $CUSTOM_CLUSTER_TESTS ]]; then\n        Info \"Running tests using custom clusters\"\n        RunCustomClusterTests || TestFailed\n    else\n        Info \"Skipping custom cluster tests because none match\"\n    fi\nfi\n\nif [[ :${TEST_SET}: == *:systest:* ]]; then\n    # TODO: Fix this test. The fix consists of updating the test script to\n    # download a p directory that's compatible with the badger WAL changes.\n    # This test is not that useful so it's ok to temporarily disable it.\n    # Info \"Running posting size calculation\"\n    # cd posting\n    # RunCmd ./size_test.sh || TestFailed\n    # cd ..\n\n    Info \"Running small load test\"\n    RunCmd ./contrib/scripts/load-test.sh || TestFailed\n\n    Info \"Running custom test scripts\"\n    RunCmd ./dgraph/cmd/bulk/systest/test-bulk-schema.sh || TestFailed\n\n    Info \"Running large bulk load test\"\n    RunCmd ./systest/21million/test-21million.sh || TestFailed\n\n    # Info \"Running large live load test\"\n    # RunCmd ./systest/21million/test-21million.sh --loader live || TestFailed\n\n    Info \"Running rebuilding index test\"\n    RunCmd ./systest/1million/test-reindex.sh || TestFailed\n\n    Info \"Running background index test\"\n    RunCmd ./systest/bgindex/test-bgindex.sh || TestFailed\nfi\n\nInfo \"Stopping cluster\"\nstopCluster\n\nEND_TIME=$(date +%s)\nInfo \"Tests completed in\" $( FmtTime $((END_TIME - START_TIME)) )\n\nif [[ $TEST_FAILED -eq 0 ]]; then\n    Info \"\\e[1;32mAll tests passed!\"\nelse\n    Info \"\\e[1;31m*** One or more tests failed! ***\"\n    ListFailedTests\nfi\n\nexit $TEST_FAILED\n"
        },
        {
          "name": "testutil",
          "type": "tree",
          "content": null
        },
        {
          "name": "tlstest",
          "type": "tree",
          "content": null
        },
        {
          "name": "tok",
          "type": "tree",
          "content": null
        },
        {
          "name": "types",
          "type": "tree",
          "content": null
        },
        {
          "name": "upgrade",
          "type": "tree",
          "content": null
        },
        {
          "name": "worker",
          "type": "tree",
          "content": null
        },
        {
          "name": "x",
          "type": "tree",
          "content": null
        },
        {
          "name": "xidmap",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}