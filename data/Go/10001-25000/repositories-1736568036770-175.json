{
  "metadata": {
    "timestamp": 1736568036770,
    "page": 175,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "peterq/pan-light",
      "stars": 12113,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1123046875,
          "content": "*.pro.user\n.idea\npc/vendor\npc/gui/comp/moc*\n*.autosave\npc/gui/qml/rcc*\nqml.rcc\ngui-plugin.so\n.env\n*.pb.go\npc/deploy"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 7.4716796875,
          "content": "                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.880859375,
          "content": "# pan-light\n\n```\n                     _ _       _     _   \n                    | (_)     | |   | |  \n _ __   __ _ _ __   | |_  __ _| |__ | |_ \n| '_ \\ / _` | '_ \\  | | |/ _` | '_ \\| __|\n| |_) | (_| | | | | | | | (_| | | | | |_ \n| .__/ \\__,_|_| |_| |_|_|\\__, |_| |_|\\__|\n| |                       __/ |          \n|_|                      |___/       \n                             \n```\n# pan-light\n\n>　pan-light 是一款不限速的百度网盘客户端, 基于 golang + Qt5 开发.\n本项意义在于探究 golang 在图形界面客户端; web 服务端; 事件调度, websocket, p2p 长连接 等方面的应用和实践.\n欢迎广大 golang 开发者参与本项目. \n\n[软件官网](https://pan-light.peterq.cn) | [在线体验](https://pan-light.peterq.cn/demo) | [技术文档](https://pan-light.peterq.cn/doc) | [技术交流群: 438604465](https://jq.qq.com/?_wv=1027&k=52HpwTS) | 用户交流群: 222718962\n\n## 特性\n\n- 利用golang轻量级协程, 高并发分段下载, 可通过调节并发数达到最佳下载速度; 下载进度状态数据持久化到磁盘, 实现软件重启后可断点续传;\n- 客户端本地实现简单代理, 突破百度防盗链, 将网盘视频喂给qt视频播放组件, 从而在线播放视频\n- 在线体验: 用户无需下载, 通过网页即可在线体验本软件部分功能; 该系统可应用于其他客户端产品的在线体验; \n- 在线体验原理: 闲置的个人pc, 通过 docker 开启若干个'虚拟机', 虚拟机内安装好了本软件以及vnc服务.\n 用户打开网页, 在服务端的调度下, 网页通过 web rtc 和闲置pc建立p2p连接.\n 闲置pc将会打通一条用户网页到docker内部'隧道'. 网页连接虚拟机vnc服务进行远程控制\n\n## 关于\n本项目是作者第一个完整的go语言实战项目. 希望对于一些找不到好的实战项目的go语言初学者能起到一点帮助, \n欢迎你们阅读项目技术文档, 源码, 并参与到项目开发. 但也正由于作者也是初学者且项目工作量挺大,个人精力有限等一些原因, 在代码严谨方面还有待后续跟进.\n比如,你会看到为了网络数据的传递方便, 项目用了大量的`map[string]interface{}`类型, 并且没有做严格类型判断; 有些低频竞争数据的锁也省掉了, 等等; 欢迎大家一起来完善.\n\n## 软件截图\n![截图1](https://qiniu-cdn.peterq.cn/pan-light/img/shot_1.png)\n   \n![截图2](https://qiniu-cdn.peterq.cn/pan-light/img/shot_2.png)\n   \n![截图3](https://qiniu-cdn.peterq.cn/pan-light/img/shot_3.png)\n\n![截图4](https://qiniu-cdn.peterq.cn/pan-light/img/shot_4.png)\n\n## 其他\n\n- 本项目花费了作者大量的时间和精力, 如果你觉得本项目对你有帮助, 帮忙点个star.\n\n- 最近突然多了很多非技术用户. 所以有必要做一下说明:\n  1. 这个项目还是一个开发中的项目, 发布预览版是因为完成了主要功能, 尚缺少很多客户端需要的人性化功能, 也有很多bug. \n   所以非技术最好选择其他更成熟的替代产品\n  2. 有用户抱怨, vip通道用不了: 因为这2天突然多了很多普通用户，服务端只配了一个vip账号，操作频率太高，已被百度被封号。\n  这个项目我只是想做一波技术上的实验, 是作为学习golang语言的练手项目. 没想拿来运营, 可惜了我上个月才续交的超级会员年费.\n  这个项目所有的源码都是开源的, 如果你想自己用可以自己部署. 但你的所有所作所为均与作者无关, 作者不分享你的盈利, 也不承担责任.\n  但项目是我写的, 我还是有义务奉劝一句: 做一个遵纪守法的良民, 共建社会主义和谐社会.\n  3. 对于坚持想使用本项目的普通用户, 你可以在设置里把并发数调到256也能达到6-8M的下载速度, 但是更建议支持正版, 开通会员.\n  \n- 有很多fork, 但是还没有pr, 欢迎pr!!! 作者最近很忙, 需要借助社区的力量推动本项目.\n  \n    \n"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.04296875,
          "content": "module github.com/peterq/pan-light\n\ngo 1.13\n"
        },
        {
          "name": "pan-light.go",
          "type": "blob",
          "size": 5.974609375,
          "content": "package main\n\n// 这个是为了方便开发写的脚本, 代码写的很糙, 见笑\n\nimport (\n\t\"encoding/json\"\n\t\"flag\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"net/http\"\n\t\"os\"\n\t\"os/exec\"\n\t\"path/filepath\"\n\t\"regexp\"\n\t\"runtime\"\n\t\"strconv\"\n\t\"strings\"\n)\n\nfunc main() {\n\tflag.Usage = func() {\n\t\tprintln(\"用法: pan-light [cmd] [sub cmd]\\n\")\n\n\t\tprintln(\"参数:\\n\")\n\t\tflag.PrintDefaults()\n\t\tprintln()\n\n\t\tprintln(\"命令:\\n\")\n\t\tfor _, m := range []struct{ name, desc string }{\n\t\t\t{\"pc dev\", \"启动pc客户端, 开发模式, 用plugin加速编译, 不支持windows\"},\n\t\t\t{\"pc start\", \"启动pc客户端\"},\n\t\t\t{\"pc moc\", \"生成moc\"},\n\t\t\t{\"server start\", \"启动server\"},\n\t\t} {\n\t\t\tfmt.Printf(\"  %v%v%v\\n\", m.name, strings.Repeat(\" \", 12-len(m.name)), m.desc)\n\t\t}\n\t\tprintln()\n\n\t\tos.Exit(0)\n\t}\n\tflag.Parse()\n\n\tos.Setenv(\"GOPROXY\", \"https://goproxy.io\")\n\n\tcmd := \"pc\"\n\n\tcmd = flag.Arg(0)\n\n\tswitch cmd {\n\tcase \"pc\":\n\t\tpcCmd()\n\tcase \"demo\":\n\t\tdemoCmd()\n\tcase \"server\":\n\t\tserverCmd()\n\tdefault:\n\t\tflag.Usage()\n\t}\n}\n\nfunc serverCmd() {\n\tcmd := flag.Arg(1)\n\tswitch cmd {\n\tcase \"start\":\n\t\tserverStart()\n\tdefault:\n\t\tflag.Usage()\n\t}\n}\n\nfunc serverStart() {\n\tos.Setenv(\"pan_light_server_conf\", \"pan-light-server.yaml\")\n\trunCmd(\"./server\", \"go\", \"run\", \"pan-light-server.go\")\n}\n\nfunc demoCmd() {\n\tcmd := flag.Arg(1)\n\tswitch cmd {\n\tcase \"host\":\n\t\tdemoHost()\n\tcase \"build.docker.slave\":\n\t\tbuildDockerSlave()\n\tcase \"avatar\":\n\t\tdemoAvatar()\n\tdefault:\n\t\tflag.Usage()\n\t}\n}\n\nfunc demoAvatar() {\n\trunCmd(\"./server/cmd\", \"go\", \"run\", \"main.go\", \"avatar\")\n}\n\nfunc buildDockerSlave() {\n\trunCmd(\"demo\", \"go\", \"build\", \"-o\", \"./slave/ubuntu16.04/root.pan-light/demo_instance_manager\", \"slave.go\")\n\t//runCmd(\"demo\", \"docker\", \"build\", \"-t\", \"pan-light-slave\", \"./slave/ubuntu16.04\")\n}\n\nfunc demoHost() {\n\tcmd(qtBin(\"rcc\"), \"-binary\", \"pc/gui/qml/qml.qrc\", \"-o\", \"demo/slave/ubuntu16.04/root.pan-light/lib/qml.rcc\").Run()\n\trunCmd(\"./demo\", \"go\", \"build\", \"-o\", \"./slave/ubuntu16.04/root.pan-light/demo_instance_manager\", \"slave.go\")\n\trunCmd(\"./demo\", \"go\", \"run\", \"host.go\")\n}\n\nfunc pcCmd() {\n\tcmd := flag.Arg(1)\n\tswitch cmd {\n\tcase \"start\":\n\t\tpcStart()\n\tcase \"moc\":\n\t\tpcMoc()\n\tcase \"dev\":\n\t\tpcDev()\n\tcase \"build\":\n\t\tpcBuild()\n\tcase \"download-icon\":\n\t\tdownloadIcon()\n\tdefault:\n\t\tflag.Usage()\n\t}\n}\n\nfunc pcDev() {\n\tvar rebuildPlugin bool\n\tflag.BoolVar(&rebuildPlugin, \"rebuild\", false, \"重新编译plugin插件\")\n\tflag.Parse()\n\tpluginPath := \"./pc/gui/gui-plugin.so\"\n\t_, err := os.Stat(pluginPath)\n\tif os.IsNotExist(err) || rebuildPlugin {\n\t\tlog.Println(\"编译gui插件...\")\n\t\trunCmd(\"./pc\", \"go\", \"build\", \"-p\", strconv.Itoa(runtime.NumCPU()-1), \"-v\", \"-tags=plugin\", \"--buildmode=plugin\", \"-o\", \"gui/gui-plugin.so\", \"gui/gui-plugin.go\")\n\t}\n\tlog.Println(\"打包qml...\")\n\tcmd(qtBin(\"rcc\"), \"-binary\", \"pc/gui/qml/qml.qrc\", \"-o\", \"pc/gui/qml/qml.rcc\").Run()\n\tlog.Println(\"启动客户端...\")\n\trunCmd(\"./pc\", \"go\", \"run\", \"-tags=plugin\", \"pan-light-pc-dev.go\")\n}\n\nfunc pcBuild() {\n\trunCmd(\"./pc\", \"go\", \"run\", \"../qt/cmd/qtdeploy/main.go\", \"-fast\", \"build\", \"desktop\")\n\t// 正式包编译步骤\n\t// cd pc\n\t// go run ../qt/cmd/qtrcc/main.go desktop gui/qml\n\t// go build -p 8 -v -ldflags=all=\"-s\" -o deploy/linux/pc -tags=\"production\"\n\n}\n\nfunc qtBin(name string) string {\n\tv, ok1 := os.LookupEnv(\"QT_VERSION\")\n\td, ok2 := os.LookupEnv(\"QT_DIR\")\n\tif !ok1 || !ok2 {\n\t\tpanic(\"请先配置qt环境变量\")\n\t}\n\treturn d + \"/\" + v + \"/gcc_64/bin/\" + name\n}\n\nfunc pcStart() {\n\t// 打包qml\n\tlog.Println(\"打包qml...\")\n\tc := cmd(\"go\", \"run\", \"../qt/cmd/qtrcc/main.go\", \"desktop\", \"gui/qml\")\n\tc.Dir, _ = filepath.Abs(\"./pc\")\n\tc.Run()\n\n\t// 启动\n\tlog.Println(\"启动pc客户端\")\n\tc = cmd(\"go\", \"run\", \"pan-light-pc.go\")\n\tc.Dir = \"./pc\"\n\tc.Run()\n}\n\n// 清除svg的style font节点, 减小尺寸\nfunc iconSimplify() {\n\tdir := \"./pc/gui/qml/assets/images/icons\"\n\tls, err := ioutil.ReadDir(dir)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treg := regexp.MustCompile(`\\<defs\\>(.|\\n)*\\</defs\\>`)\n\tfor _, f := range ls {\n\t\tif strings.Index(f.Name(), \".svg\") == len(f.Name())-4 {\n\t\t\tfilename := dir + \"/\" + f.Name()\n\t\t\tbin, err := ioutil.ReadFile(filename)\n\t\t\tif err != nil {\n\t\t\t\tpanic(err)\n\t\t\t}\n\t\t\tcontent := string(bin)\n\t\t\ttarget := reg.ReplaceAllString(content, \"\")\n\t\t\tif target != content {\n\t\t\t\terr = ioutil.WriteFile(filename, []byte(target), os.ModePerm)\n\t\t\t\tif err != nil {\n\t\t\t\t\tpanic(err)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunc pcMoc() {\n\tlog.Println(\"moc...\")\n\tc := cmd(\"go\", \"run\", \"../qt/cmd/qtmoc/main.go\", \"desktop\", \"gui/comp\")\n\tc.Dir, _ = filepath.Abs(\"./pc\")\n\te := c.Run()\n\tif e != nil {\n\t\tlog.Println(e)\n\t}\n}\n\nfunc cmd(name string, arg ...string) *exec.Cmd {\n\tcmd := exec.Command(name, arg...)\n\n\tcmd.Stdout = os.Stdout\n\tcmd.Stderr = os.Stderr\n\tcmd.Stdin = os.Stdin\n\n\treturn cmd\n}\n\nfunc runCmd(path, name string, arg ...string) {\n\tc := cmd(name, arg...)\n\tc.Dir, _ = filepath.Abs(path)\n\tc.Env = append(os.Environ(), envFile(c.Dir)...)\n\tc.Run()\n}\n\nfunc envFile(path string) (env []string) {\n\tbin, err := ioutil.ReadFile(path + \"/.env\")\n\tif err != nil {\n\t\treturn\n\t}\n\tstr := string(bin)\n\tfor _, ln := range strings.Split(str, \"\\n\") {\n\t\tln = strings.Trim(ln, \"\\n\")\n\t\tif ln == \"\" {\n\t\t\tcontinue\n\t\t}\n\t\tif ln[0] == '#' {\n\t\t\tcontinue\n\t\t}\n\t\tenv = append(env, ln)\n\t}\n\treturn\n}\n\ntype gson = map[string]interface{}\ntype binary = []byte\n\nfunc downloadIcon() {\n\tu := \"https://www.iconfont.cn/api/collection/detail.json?id=2271\"\n\tr, e := http.Get(u)\n\tpanicIf(e)\n\tbin, e := ioutil.ReadAll(r.Body)\n\tpanicIf(e)\n\tvar j gson\n\tpanicIf(json.Unmarshal(bin, &j))\n\treg := regexp.MustCompile(\"[a-z0-9]+$\")\n\tvar imgs []string\n\tfor _, icon := range j[\"data\"].(gson)[\"icons\"].([]interface{}) {\n\t\ts := icon.(gson)[\"show_svg\"].(string)\n\t\tname := icon.(gson)[\"name\"].(string)\n\t\tname = string(reg.Find(binary(name)))\n\t\tif name == \"\" {\n\t\t\tname = icon.(gson)[\"name\"].(string)\n\t\t\tif strings.Contains(name, \"未知\") {\n\t\t\t\tname = \"unknown\"\n\t\t\t} else {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t}\n\t\timgs = append(imgs, name)\n\t\te = ioutil.WriteFile(\"pc/gui/qml/assets/images/icons/file/\"+name+\".svg\", binary(s), os.ModePerm)\n\t\tpanicIf(e)\n\t}\n\tbin, _ = json.Marshal(imgs)\n\tlog.Println(string(bin))\n}\n\nfunc panicIf(e error) {\n\tif e != nil {\n\t\tpanic(e)\n\t}\n\n}\n"
        },
        {
          "name": "pan-light.pro",
          "type": "blob",
          "size": 1.048828125,
          "content": "QT += quick\nCONFIG += c++11\n\n# The following define makes your compiler emit warnings if you use\n# any Qt feature that has been marked deprecated (the exact warnings\n# depend on your compiler). Refer to the documentation for the\n# deprecated API to know how to port your code away from it.\nDEFINES += QT_DEPRECATED_WARNINGS\n\n# You can also make your code fail to compile if it uses deprecated APIs.\n# In order to do so, uncomment the following line.\n# You can also select to disable deprecated APIs only up to a certain version of Qt.\n#DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0x060000    # disables all the APIs deprecated before Qt 6.0.0\n\nSOURCES +=\n\nRESOURCES += pc/gui/qml/qml.qrc\n\n# Additional import path used to resolve QML modules in Qt Creator's code model\nQML_IMPORT_PATH =\n\n# Additional import path used to resolve QML modules just for Qt Quick Designer\nQML_DESIGNER_IMPORT_PATH =\n\n# Default rules for deployment.\nqnx: target.path = /tmp/$${TARGET}/bin\nelse: unix:!android: target.path = /opt/$${TARGET}/bin\n!isEmpty(target.path): INSTALLS += target\n\nHEADERS +=\n\n\n"
        },
        {
          "name": "pc",
          "type": "tree",
          "content": null
        },
        {
          "name": "qt",
          "type": "tree",
          "content": null
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}