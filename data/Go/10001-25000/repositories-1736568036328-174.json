{
  "metadata": {
    "timestamp": 1736568036328,
    "page": 174,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "micro/micro",
      "stars": 12178,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.443359375,
          "content": "# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n_obj\n_test\n_build\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\n*.test\n*.prof\n\n# ignore go build and test outputs\ncoverage.txt\ncoverage.out\n\n# ignore locally built binaries\nmicro.exe\nmicro\n!micro/\ndist/\n\n*.bak\n\ntest/services\n\n.air.toml\n.DS_Store\n.release-env\n"
        },
        {
          "name": ".goreleaser.yml",
          "type": "blob",
          "size": 3.1904296875,
          "content": "project_name: micro\nrelease:\n  github:\n    owner: micro\n    name: micro\n  name_template: 'Release {{ .Tag }}'\nenv:\n  - CGO_ENABLED=1\nbuilds:\n  - id: micro-darwin-amd64\n    binary: micro\n    main: ./cmd/micro\n    goarch:\n      - amd64\n    goos:\n      - darwin\n    env:\n      - CC=o64-clang\n      - CXX=o64-clang++\n    flags:\n      - -trimpath\n\n  - id: micro-darwin-arm64\n    binary: micro\n    main: ./cmd/micro\n    goarch:\n      - arm64\n    goos:\n      - darwin\n    env:\n      - CC=oa64-clang\n      - CXX=oa64-clang++\n    flags:\n      - -trimpath\n\n  - id: micro-linux-amd64\n    binary: micro\n    main: ./cmd/micro\n    goarch:\n      - amd64\n    goos:\n      - linux\n    env:\n      - CC=x86_64-linux-gnu-gcc\n      - CXX=x86_64-linux-gnu-g++\n    flags:\n      - -trimpath\n    ldflags:\n      - -s -w\n      - -X micro.dev/v4/cmd.GitCommit={{ .ShortCommit }}\n      - -X micro.dev/v4/cmd.GitTag={{ .Tag }}\n      - -X micro.dev/v4/cmd.BuildDate={{ .Timestamp }}\n\n  - id: micro-linux-arm64\n    binary: micro\n    main: ./cmd/micro\n    goarch:\n      - arm64\n    goos:\n      - linux\n    env:\n      - CC=aarch64-linux-gnu-gcc\n      - CXX=aarch64-linux-gnu-g++\n    flags:\n      - -trimpath\n    ldflags:\n      - -s -w\n      - -X micro.dev/v4/cmd.GitCommit={{ .ShortCommit }}\n      - -X micro.dev/v4/cmd.GitTag={{ .Tag }}\n      - -X micro.dev/v4/cmd.BuildDate={{ .Timestamp }}\n\n  - id: micro-linux-armhf\n    binary: micro\n    main: ./cmd/micro\n    goarch:\n      - arm\n    goarm:\n      - 7\n    goos:\n      - linux\n    env:\n      - CC=arm-linux-gnueabihf-gcc\n      - CXX=arm-linux-gnueabihf-g++\n    flags:\n      - -trimpath\n    ldflags:\n      - -s -w\n      - -X micro.dev/v4/cmd.GitCommit={{ .ShortCommit }}\n      - -X micro.dev/v4/cmd.GitTag={{ .Tag }}\n      - -X micro.dev/v4/cmd.BuildDate={{ .Timestamp }}\n\n  - id: micro-windows-amd64\n    binary: micro\n    main: ./cmd/micro\n    goarch:\n      - amd64\n    goos:\n      - windows\n    env:\n      - CC=x86_64-w64-mingw32-gcc\n      - CXX=x86_64-w64-mingw32-g++\n    flags:\n      - -trimpath\n      - -buildmode=exe\n\n  - id: micro-windows-386\n    binary: micro\n    main: ./cmd/micro\n    goarch:\n      - 386\n    goos:\n      - windows\n    env:\n      - CC=/llvm-mingw/bin/i686-w64-mingw32-gcc\n      - CXX=/llvm-mingw/bin/i686-w64-mingw32-g++\n    flags:\n      - -trimpath\n      - -buildmode=exe\n\n\n  - id: micro-windows-arm64\n    binary: micro\n    main: ./cmd/micro\n    goarch:\n      - arm64\n    goos:\n      - windows\n    env:\n      - CC=/llvm-mingw/bin/aarch64-w64-mingw32-gcc\n      - CXX=/llvm-mingw/bin/aarch64-w64-mingw32-g++\n    flags:\n      - -trimpath\n      - -buildmode=exe\n\narchives:\n  - id: release/version\n    builds:\n      - micro-darwin-amd64\n      - micro-darwin-arm64\n      - micro-linux-amd64\n      - micro-linux-arm64\n      - micro-linux-armhf\n      - micro-windows-amd64\n      - micro-windows-386\n      - micro-windows-arm64\n    name_template: '{{ .ProjectName }}-{{ .Tag }}-{{ .Os }}-{{ .Arch }}{{ .Arm }}'\n    wrap_in_directory: false\n    format: tar.gz\n    format_overrides:\n    - goos: windows\n      format: zip\n    files:\n      - LICENSE\n      - README.md\nchecksum:\n  name_template: 'checksums.txt'\n  algorithm: sha256\nsnapshot:\n  name_template: \"{{ .Tag }}-next\"\nchangelog:\n  sort: asc\n  filters:\n    exclude:\n    - '^test:'\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.5712890625,
          "content": "FROM alpine:3.18 as builder\n\nCOPY --from=golang:1.20.4-alpine3.18 /usr/local/go/ /usr/local/go/\nENV PATH=\"/usr/local/go/bin:${PATH}\"\nRUN apk --no-cache add make git gcc libtool musl-dev\n\nCOPY go.mod .\nCOPY go.sum .\nRUN go mod download\nCOPY . /\nRUN make ; rm -rf $GOPATH/pkg/mod\n\nFROM alpine:3.18\nCOPY --from=golang:1.20.4-alpine3.18 /usr/local/go/ /usr/local/go/\nENV PATH=\"/usr/local/go/bin:${PATH}\"\n\nRUN apk --no-cache add make git gcc libtool musl-dev\nRUN apk --no-cache add ca-certificates && rm -rf /var/cache/apk/* /tmp/* \n\nCOPY --from=builder /micro /micro\nENTRYPOINT [\"/micro\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.3828125,
          "content": "NAME = micro\nGIT_COMMIT = $(shell git rev-parse --short HEAD)\nGIT_TAG = $(shell git describe --abbrev=0 --tags --always --match \"v*\")\nGIT_IMPORT = micro.dev/v4/cmd\nBUILD_DATE = $(shell date +%s)\nLDFLAGS = -X $(GIT_IMPORT).BuildDate=$(BUILD_DATE) -X $(GIT_IMPORT).GitCommit=$(GIT_COMMIT) -X $(GIT_IMPORT).GitTag=$(GIT_TAG)\n\nDOCKER_BUILD = docker buildx build\nDOCKER_BUILD_ARGS = --platform linux/amd64 --platform linux/arm64\nDOCKER_IMAGE_NAME = micro/$(NAME)\nDOCKER_IMAGE_TAG = --tag $(DOCKER_IMAGE_NAME):$(GIT_TAG)-$(GIT_COMMIT) --tag $(DOCKER_IMAGE_NAME):latest\n\nPROTO_FILES = $(wildcard proto/**/*.proto)\nPROTO_GO_MICRO = $(PROTO_FILES:.proto=.pb.go) $(PROTO_FILES:.proto=.pb.micro.go)\n\n\n.DEFAULT_GOAL := $(NAME)\n\n.PHONY: tidy\ntidy:\n\tgo mod tidy\n\n$(NAME):\n\tCGO_ENABLED=0 go build -ldflags \"-s -w ${LDFLAGS}\" -o $(NAME) cmd/micro/main.go\n\n.PHONY: docker\ndocker:\n\t$(DOCKER_BUILD) $(DOCKER_BUILD_ARGS) $(DOCKER_IMAGE_TAGS) --push .\n\n.PHONY: proto\nproto: $(PROTO_GO_MICRO)\n\n%.pb.micro.go %.pb.go: %.proto clean\n\tprotoc --proto_path=. --micro_out=. --go_out=. $<\n\n.PHONY: test\nvet:\n\tgo vet ./...\n\n.PHONY: vet\ntest: vet\n\tgo test -v -race ./...\n\n.PHONY: clean\nclean:\n\trm -f $(NAME) $(PROTO_GO_MICRO)\n\n.PHONY: gorelease-dry-run\ngorelease-dry-run:\n\tdocker run \\\n\t\t--rm \\\n\t\t-e CGO_ENABLED=1 \\\n\t\t-v $(CURDIR):/$(NAME) \\\n\t\t-w /$(NAME) \\\n\t\tghcr.io/goreleaser/goreleaser-cross:v1.20.6 \\\n\t\t--clean --skip-validate --skip-publish\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.8212890625,
          "content": "# Micro\n\n<p>\n    <a href=\"https://goreportcard.com/report/github.com/micro/micro\">\n    <img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/micro/micro\">\n    </a>\n\t<a href=\"https://pkg.go.dev/micro.dev/v4?tab=doc\"><img\n    alt=\"Go.Dev reference\"\n    src=\"https://img.shields.io/badge/go.dev-reference-007d9c?logo=go&logoColor=white\"></a>\n    <a href=\"https://opensource.org/licenses/Apache-2.0\"><img\n    alt=\"Apache License\"\n    src=\"https://img.shields.io/badge/license-apache-blue.svg\"></a>        \n</p>\n\n[Micro](https://micro.dev/) is an API first development platform. It addresses the core requirements for building services in the cloud by providing a set of APIs which act as the building blocks of any platform. Micro deals with the complexity of distributed systems and provides simpler programmable abstractions to build on. \n\n## Features\n\n- **Microkernel Architecture**: Built as separate services combined into a single logical server\n- **HTTP and gRPC APIs**: Facilitate easy service requests and interactions\n- **Go SDK and CLI**: Streamlined service creation and management\n- **Environment Support**: Seamless transitions between local and cloud setups\n\n## Quick Start\n\n```bash\n# Install Micro CLI\ngo install micro.dev/v4/cmd/micro@master\n\n# Start the server\nmicro server\n\n# In a new tab set env to local\nmicro env set local\n\n# Login with username/password: `admin/micro`\nmicro login\nEnter username: admin\nEnter password:\nSuccessfully logged in.\n\n# List services\nmicro services\nauth\nbroker\nconfig\nevents\nnetwork\nregistry\nruntime\nstore\n```\n\n## Architecture\n\n<img src=\"https://micro.dev/images/micro.png?v=1\" />\n\nBelow are the core components that make up Micro\n\n### Server\n\nMicro is built as a microkernel architecture. It abstracts away the complexity of the underlying infrastructure by providing\na set of building block services composed as a single logical server for the end user to consume via an api, cli or sdks.\n\n### API\n\nThe server embeds a HTTP API (on port 8080) which can be used to make requests as simple JSON. \nThe API automatically maps HTTP Paths and POST requests to internal RPC service names and endpoints.\n\n### Proxy\n\nAdditionally there's a gRPC proxy (on port 8081) which used to make requests via the CLI or externally. \nThe proxy is identity aware which means it can be used to gatekeep remote access to Micro running anywhere.\n\n### Go SDK\n\nMicro comes with a built in Go framework for service based development. \nThe framework lets you write services without piecing together endless lines of boilerplate code. \nConfigured and initialised by default, import it and get started.\n\n### CLI\n\nThe command line interface includes dynamic command mapping for all services running on the platform. It turns any service instantly into a CLI command along with flag parsing \nfor inputs. Includes support for environments, namespaces, creating and running services, status info and logs.\n\n### Environments\n\nMicro bakes in the concept of `Environments`. Run your server locally for development and in the cloud for production, \nseamlessly switch between them using the CLI command `micro env set [environment]`.\n\n## Install\n\n### From Source\n\n```\nmake build\n```\n\n### Prebuilt Binaries\n\n#### Windows\n\n```sh\npowershell -Command \"iwr -useb https://raw.githubusercontent.com/micro/micro/master/scripts/install.ps1 | iex\"\n\n```\n#### Linux\n\n```sh\nwget -q  https://raw.githubusercontent.com/micro/micro/master/scripts/install.sh -O - | /bin/bash\n```\n\n#### MacOS\n\n```sh\ncurl -fsSL https://raw.githubusercontent.com/micro/micro/master/scripts/install.sh | /bin/bash\n```\n\n### Run the server \n\nThe server starts with a single command ready to use\n\n```sh\nmicro server\n```\n\nNow go to [localhost:8080](http://localhost:8080) and make sure the output is something like `{\"version\": \"v3.10.1\"}`.\n\n## Usage\n\nSet the environment e.g local\n\n```\nmicro env set local\n```\n\n### Login to Micro\n\nDefault username/password: `admin/micro`\n\n```sh\n$ micro login\nEnter username: admin\nEnter password:\nSuccessfully logged in.\n```\n\nSee what's running:\n\n```sh\n$ micro services\nauth\nbroker\nconfig\nevents\nnetwork\nregistry\nruntime\nstore\n```\n\n### Create a Service\n\nGenerate a service using the template\n\n```\nmicro new helloworld\n```\n\nOutput\n\n```\nCreating service helloworld\n\n.\n├── main.go\n├── handler\n│   └── helloworld.go\n├── proto\n│   └── helloworld.proto\n├── Makefile\n├── README.md\n├── .gitignore\n└── go.mod\n\n\ndownload protoc zip packages (protoc-$VERSION-$PLATFORM.zip) and install:\n\nvisit https://github.com/protocolbuffers/protobuf/releases\n\ncompile the proto file helloworld.proto:\n\ncd helloworld\nmake init\ngo mod vendor\nmake proto\n```\n\n### Edit the code\n\nEdit the protobuf definition in `proto/helloworld.proto` and run `make proto` to recompile\n\nGo to `handler/helloworld.go` to make changes to the response handler\n\n```go\ntype Helloworld struct{}\n\nfunc New() *Helloworld {\n        return &Helloworld{}\n}\n\nfunc (h *Helloworld) Call(ctx context.Context, req *pb.Request, rsp *pb.Response) error {\n        rsp.Msg = \"Hello \" + req.Name\n        return nil\n}\n```\n\n### Run the service\n\nRun from local dir\n\n```\nmicro run .\n```\n\nOr from a git url\n\n```sh\nmicro run github.com/micro/services/helloworld\n```\n\n### Check service status\n\n```sh\n$ micro status\nNAME\t\tVERSION\tSOURCE\t\t\t\t\tSTATUS\tBUILD\tUPDATED\tMETADATA\nhelloworld\tlatest\tgithub.com/micro/services/helloworld\trunning\tn/a\t4s ago\towner=admin, group=micro\n```\n\n### View service logs\n\n```sh\n$ micro logs helloworld\n2020-10-06 17:52:21  file=service/service.go:195 level=info Starting [service] helloworld\n2020-10-06 17:52:21  file=grpc/grpc.go:902 level=info Server [grpc] Listening on [::]:33975\n2020-10-06 17:52:21  file=grpc/grpc.go:732 level=info Registry [service] Registering node: helloworld-67627b23-3336-4b92-a032-09d8d13ecf95\n```\n\n### Call via CLI\n\n```sh\n$ micro helloworld call --name=Jane\n{\n\t\"msg\": \"Hello Jane\"\n}\n```\n\n### Call via API\n\n```\ncurl \"http://localhost:8080/helloworld/Call?name=John\"\n```\n\n### Call via SDK\n\nA proto SDK client is used within a service and must be run by micro\n\n```go\npackage main\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"time\"\n\n\t\"micro.dev/v4/service\"\n\tpb \"github.com/micro/services/helloworld/proto\"\n)\n\nfunc callService(hw pb.HelloworldService) {\n\tfor {\n\t\t// call an endpoint on the service\n\t\trsp, err := hw.Call(context.Background(), &pb.CallRequest{\n\t\t\tName: \"John\",\n\t\t})\n\t\tif err != nil {\n\t\t\tfmt.Println(\"Error calling helloworld: \", err)\n\t\t\treturn\n\t\t}\n\n\t\t// print the response\n\t\tfmt.Println(\"Response: \", rsp.Message)\n\n\t\ttime.Sleep(time.Second)\n\t}\n}\n\nfunc main() {\n\t// create and initialise a new service\n\tsrv := service.New(\n\t\tservice.Name(\"caller\"),\n\t)\n\n\t// new helloworld client\n\thw := pb.NewHelloworldService(\"helloworld\", srv.Client())\n\t\n\t// run the client caller\n\tgo callService(hw)\n\t\n\t// run the service\n\tservice.Run()\n}\n```\n\nRun it\n\n```\nmicro run .\n```\n\n### Call via Go\n\nGet your user token\n\n```\nexport TOKEN=`micro user token`\n```\n\nCall helloworld\n\n```go\npackage main\n\nimport (\n    \"fmt\"\n    \"os\"\n\n    \"github.com/micro/micro-go\"\n)\n\ntype Request struct {\n\tName string `json:\"name\"`\n}\n\ntype Response struct {\n\tMsg string `json:\"msg\"`\n}\n\nfunc main() {\n\ttoken := os.Getenv(\"TOKEN\")\n\tc := micro.NewClient(nil)\n\n\t// set your api token\n\tc.SetToken(token)\n\n   \treq := &Request{\n\t\tName: \"John\",\n\t}\n\t\n\tvar rsp Response\n\n\tif err := c.Call(\"helloworld\", \"Call\", req, &rsp); err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t}\n\t\n\tfmt.Println(rsp)\n}\n```\n\nRun it\n\n```\ngo run main.go\n```\n\n### Call via JavaScript \n\n```js\nconst micro = require('micro-js-client');\n\nnew micro.Client({ token: process.env.TOKEN })\n  .call('helloworld', 'Call', {\"name\": \"Alice\"})\n  .then((response) => {\n    console.log(response);\n  });\n```\n\n## Learn More\n\nSee the [getting started](https://micro.dev/getting-started) guide to learn more.\n\n## Cloud Environment \n\n[1 click deploy](https://marketplace.digitalocean.com/apps/micro?refcode=1eb1b2aca272&action=deploy) Micro on DigitalOcean\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 2.443359375,
          "content": "module micro.dev/v4\n\ngo 1.20\n\nrequire (\n\tgithub.com/bitly/go-simplejson v0.5.1\n\tgithub.com/davecgh/go-spew v1.1.1\n\tgithub.com/dustin/go-humanize v1.0.1\n\tgithub.com/evanphx/json-patch/v5 v5.9.0\n\tgithub.com/fsnotify/fsnotify v1.7.0\n\tgithub.com/golang-jwt/jwt v3.2.2+incompatible\n\tgithub.com/golang/protobuf v1.5.4\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/gorilla/handlers v1.5.2\n\tgithub.com/gorilla/mux v1.8.1\n\tgithub.com/gorilla/websocket v1.5.1\n\tgithub.com/hpcloud/tail v1.0.0\n\tgithub.com/kr/pretty v0.3.0\n\tgithub.com/nightlyone/lockfile v1.0.0\n\tgithub.com/onsi/gomega v1.10.0\n\tgithub.com/oxtoacart/bpool v0.0.0-20190530202638-03653db5a59c\n\tgithub.com/patrickmn/go-cache v2.1.0+incompatible\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/serenize/snaker v0.0.0-20201027110005-a7ad2135616e\n\tgithub.com/stretchr/objx v0.5.2\n\tgithub.com/stretchr/testify v1.9.0\n\tgithub.com/teris-io/shortid v0.0.0-20220617161101-71ec9f2aa569\n\tgithub.com/urfave/cli/v2 v2.27.1\n\tgithub.com/xlab/treeprint v1.2.0\n\tgo.etcd.io/bbolt v1.3.9\n\tgolang.org/x/crypto v0.31.0\n\tgolang.org/x/net v0.24.0\n\tgoogle.golang.org/grpc v1.63.2\n\tgoogle.golang.org/protobuf v1.33.0\n\tgorm.io/driver/postgres v1.5.7\n\tgorm.io/driver/sqlite v1.5.5\n\tgorm.io/gorm v1.25.9\n)\n\nrequire (\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.4 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/jackc/pgpassfile v1.0.0 // indirect\n\tgithub.com/jackc/pgservicefile v0.0.0-20231201235250-de7065d80cb9 // indirect\n\tgithub.com/jackc/pgx/v5 v5.5.5 // indirect\n\tgithub.com/jackc/puddle/v2 v2.2.1 // indirect\n\tgithub.com/jinzhu/inflection v1.0.0 // indirect\n\tgithub.com/jinzhu/now v1.1.5 // indirect\n\tgithub.com/kr/text v0.2.0 // indirect\n\tgithub.com/mattn/go-sqlite3 v1.14.22 // indirect\n\tgithub.com/onsi/ginkgo v1.7.0 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/rogpeppe/go-internal v1.6.1 // indirect\n\tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n\tgithub.com/xrash/smetrics v0.0.0-20240312152122-5f08fbb34913 // indirect\n\tgolang.org/x/sync v0.10.0 // indirect\n\tgolang.org/x/sys v0.28.0 // indirect\n\tgolang.org/x/term v0.27.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240415180920-8c6c420018be // indirect\n\tgopkg.in/fsnotify.v1 v1.4.7 // indirect\n\tgopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 // indirect\n\tgopkg.in/yaml.v2 v2.2.8 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 11.890625,
          "content": "github.com/bitly/go-simplejson v0.5.1 h1:xgwPbetQScXt1gh9BmoJ6j9JMr3TElvuIyjR8pgdoow=\ngithub.com/bitly/go-simplejson v0.5.1/go.mod h1:YOPVLzCfwK14b4Sff3oP1AmGhI9T9Vsg84etUnlyp+Q=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4 h1:wfIWP927BUkWJb2NmU/kNDYIBTh/ziUX91+lVfRxZq4=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=\ngithub.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=\ngithub.com/evanphx/json-patch/v5 v5.9.0 h1:kcBlZQbplgElYIlo/n1hJbls2z/1awpXxpRi0/FOJfg=\ngithub.com/evanphx/json-patch/v5 v5.9.0/go.mod h1:VNkHZ/282BpEyt/tObQO8s5CMPmYYq14uClGH4abBuQ=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=\ngithub.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=\ngithub.com/golang-jwt/jwt v3.2.2+incompatible h1:IfV12K8xAKAnZqdXVzCZ+TOjboZ2keLg81eXfW3O+oY=\ngithub.com/golang-jwt/jwt v3.2.2+incompatible/go.mod h1:8pz2t5EyA70fFQQSrl6XZXzqecmYZeUEB8OUGHkxJ+I=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gorilla/handlers v1.5.2 h1:cLTUSsNkgcwhgRqvCNmdbRWG0A3N4F+M2nWKdScwyEE=\ngithub.com/gorilla/handlers v1.5.2/go.mod h1:dX+xVpaxdSw+q0Qek8SSsl3dfMk3jNddUkMzo0GtH0w=\ngithub.com/gorilla/mux v1.8.1 h1:TuBL49tXwgrFYWhqrNgrUNEY92u81SPhu7sTdzQEiWY=\ngithub.com/gorilla/mux v1.8.1/go.mod h1:AKf9I4AEqPTmMytcMc0KkNouC66V3BtZ4qD5fmWSiMQ=\ngithub.com/gorilla/websocket v1.5.1 h1:gmztn0JnHVt9JZquRuzLw3g4wouNVzKL15iLr/zn/QY=\ngithub.com/gorilla/websocket v1.5.1/go.mod h1:x3kM2JMyaluk02fnUJpQuwD2dCS5NDG2ZHL0uE0tcaY=\ngithub.com/hpcloud/tail v1.0.0 h1:nfCOvKYfkgYP8hkirhJocXT2+zOD8yUNjXaWfTlyFKI=\ngithub.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\ngithub.com/jackc/pgpassfile v1.0.0 h1:/6Hmqy13Ss2zCq62VdNG8tM1wchn8zjSGOBJ6icpsIM=\ngithub.com/jackc/pgpassfile v1.0.0/go.mod h1:CEx0iS5ambNFdcRtxPj5JhEz+xB6uRky5eyVu/W2HEg=\ngithub.com/jackc/pgservicefile v0.0.0-20231201235250-de7065d80cb9 h1:L0QtFUgDarD7Fpv9jeVMgy/+Ec0mtnmYuImjTz6dtDA=\ngithub.com/jackc/pgservicefile v0.0.0-20231201235250-de7065d80cb9/go.mod h1:5TJZWKEWniPve33vlWYSoGYefn3gLQRzjfDlhSJ9ZKM=\ngithub.com/jackc/pgx/v5 v5.5.5 h1:amBjrZVmksIdNjxGW/IiIMzxMKZFelXbUoPNb+8sjQw=\ngithub.com/jackc/pgx/v5 v5.5.5/go.mod h1:ez9gk+OAat140fv9ErkZDYFWmXLfV+++K0uAOiwgm1A=\ngithub.com/jackc/puddle/v2 v2.2.1 h1:RhxXJtFG022u4ibrCSMSiu5aOq1i77R3OHKNJj77OAk=\ngithub.com/jackc/puddle/v2 v2.2.1/go.mod h1:vriiEXHvEE654aYKXXjOvZM39qJ0q+azkZFrfEOc3H4=\ngithub.com/jinzhu/inflection v1.0.0 h1:K317FqzuhWc8YvSVlFMCCUb36O/S9MCKRDI7QkRKD/E=\ngithub.com/jinzhu/inflection v1.0.0/go.mod h1:h+uFLlag+Qp1Va5pdKtLDYj+kHp5pxUVkryuEj+Srlc=\ngithub.com/jinzhu/now v1.1.5 h1:/o9tlHleP7gOFmsnYNz3RGnqzefHA47wQpKrrdTIwXQ=\ngithub.com/jinzhu/now v1.1.5/go.mod h1:d3SSVoowX0Lcu0IBviAWJpolVfI5UJVZZ7cO71lE/z8=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.0 h1:WgNl7dwNpEZ6jJ9k1snq4pZsg7DOEN8hP9Xw0Tsjwk0=\ngithub.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/mattn/go-sqlite3 v1.14.22 h1:2gZY6PC6kBnID23Tichd1K+Z0oS6nE/XwU+Vz/5o4kU=\ngithub.com/mattn/go-sqlite3 v1.14.22/go.mod h1:Uh1q+B4BYcTPb+yiD3kU8Ct7aC0hY9fxUwlHK0RXw+Y=\ngithub.com/nightlyone/lockfile v1.0.0 h1:RHep2cFKK4PonZJDdEl4GmkabuhbsRMgk/k3uAmxBiA=\ngithub.com/nightlyone/lockfile v1.0.0/go.mod h1:rywoIealpdNse2r832aiD9jRk8ErCatROs6LzC841CI=\ngithub.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.7.0 h1:WSHQ+IS43OoUrWtD1/bbclrwK8TTH5hzp+umCiuxHgs=\ngithub.com/onsi/ginkgo v1.7.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/gomega v1.10.0 h1:Gwkk+PTu/nfOwNMtUB/mRUv0X7ewW5dO4AERT1ThVKo=\ngithub.com/onsi/gomega v1.10.0/go.mod h1:Ho0h+IUsWyvy1OpqCwxlQ/21gkhVunqlU8fDGcoTdcA=\ngithub.com/oxtoacart/bpool v0.0.0-20190530202638-03653db5a59c h1:rp5dCmg/yLR3mgFuSOe4oEnDDmGLROTvMragMUXpTQw=\ngithub.com/oxtoacart/bpool v0.0.0-20190530202638-03653db5a59c/go.mod h1:X07ZCGwUbLaax7L0S3Tw4hpejzu63ZrrQiUe6W0hcy0=\ngithub.com/patrickmn/go-cache v2.1.0+incompatible h1:HRMgzkcYKYpi3C8ajMPV8OFXaaRUnok+kx1WdO15EQc=\ngithub.com/patrickmn/go-cache v2.1.0+incompatible/go.mod h1:3Qf8kWWT7OJRJbdiICTKqZju1ZixQ/KpMGzzAfe6+WQ=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/rogpeppe/go-internal v1.6.1 h1:/FiVV8dS/e+YqF2JvO3yXRFbBLTIuSDkuC7aBOAvL+k=\ngithub.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/serenize/snaker v0.0.0-20201027110005-a7ad2135616e h1:zWKUYT07mGmVBH+9UgnHXd/ekCK99C8EbDSAt5qsjXE=\ngithub.com/serenize/snaker v0.0.0-20201027110005-a7ad2135616e/go.mod h1:Yow6lPLSAXx2ifx470yD/nUe22Dv5vBvxK/UK9UUTVs=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.5.2 h1:xuMeJ0Sdp5ZMRXx/aWO6RZxdr3beISkG5/G/aIRr3pY=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/teris-io/shortid v0.0.0-20220617161101-71ec9f2aa569 h1:xzABM9let0HLLqFypcxvLmlvEciCHL7+Lv+4vwZqecI=\ngithub.com/teris-io/shortid v0.0.0-20220617161101-71ec9f2aa569/go.mod h1:2Ly+NIftZN4de9zRmENdYbvPQeaVIYKWpLFStLFEBgI=\ngithub.com/urfave/cli/v2 v2.27.1 h1:8xSQ6szndafKVRmfyeUMxkNUJQMjL1F2zmsZ+qHpfho=\ngithub.com/urfave/cli/v2 v2.27.1/go.mod h1:8qnjx1vcq5s2/wpsqoZFndg2CE5tNFyrTvS6SinrnYQ=\ngithub.com/xlab/treeprint v1.2.0 h1:HzHnuAF1plUN2zGlAFHbSQP2qJ0ZAD3XF5XD7OesXRQ=\ngithub.com/xlab/treeprint v1.2.0/go.mod h1:gj5Gd3gPdKtR1ikdDK6fnFLdmIS0X30kTTuNd/WEJu0=\ngithub.com/xrash/smetrics v0.0.0-20240312152122-5f08fbb34913 h1:+qGGcbkzsfDQNPPe9UDgpxAWQrhbbBXOYJFQDq/dtJw=\ngithub.com/xrash/smetrics v0.0.0-20240312152122-5f08fbb34913/go.mod h1:4aEEwZQutDLsQv2Deui4iYQ6DWTxR14g6m8Wv88+Xqk=\ngo.etcd.io/bbolt v1.3.9 h1:8x7aARPEXiXbHmtUwAIv7eV2fQFHrLLavdiJ3uzJXoI=\ngo.etcd.io/bbolt v1.3.9/go.mod h1:zaO32+Ti0PK1ivdPtgMESzuzL2VPoIG1PCQNvOdo/dE=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.24.0 h1:1PcaxkF854Fu3+lvBIx5SYn9wRlBzzcnHZSiaFFAb0w=\ngolang.org/x/net v0.24.0/go.mod h1:2Q7sJY5mzlzWjKtYUEXSlBWCdyaioyXzRB2RtU8KVE8=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.27.0 h1:WP60Sv1nlK1T6SupCHbXzSaN0b9wUmsPoRS9b61A23Q=\ngolang.org/x/term v0.27.0/go.mod h1:iMsnZpn0cago0GOrHO2+Y7u7JPn5AylBrcoWkElMTSM=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1 h1:go1bK/D/BFZV2I8cIQd1NKEZ+0owSTG1fDTci4IqFcE=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240415180920-8c6c420018be h1:LG9vZxsWGOmUKieR8wPAUR3u3MpnYFQZROPIMaXh7/A=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240415180920-8c6c420018be/go.mod h1:WtryC6hu0hhx87FDGxWCDptyssuo68sk10vYjF+T9fY=\ngoogle.golang.org/grpc v1.63.2 h1:MUeiw1B2maTVZthpU5xvASfTh3LDbxHd6IJ6QQVU+xM=\ngoogle.golang.org/grpc v1.63.2/go.mod h1:WAX/8DgncnokcFUldAxq7GeB5DXHDbMF+lLvDomNkRA=\ngoogle.golang.org/protobuf v1.33.0 h1:uNO2rsAINq/JlFpSdYEKIZ0uKD/R9cpdv0T+yoGwGmI=\ngoogle.golang.org/protobuf v1.33.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/fsnotify.v1 v1.4.7 h1:xOHLXZwVvI9hhs+cLKq5+I5onOuwQLhQwiu63xxlHs4=\ngopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8 h1:obN1ZagJSUGI0Ek/LBmuj4SNLPfIny3KsKFopxRdj10=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngorm.io/driver/postgres v1.5.7 h1:8ptbNJTDbEmhdr62uReG5BGkdQyeasu/FZHxI0IMGnM=\ngorm.io/driver/postgres v1.5.7/go.mod h1:3e019WlBaYI5o5LIdNV+LyxCMNtLOQETBXL2h4chKpA=\ngorm.io/driver/sqlite v1.5.5 h1:7MDMtUZhV065SilG62E0MquljeArQZNfJnjd9i9gx3E=\ngorm.io/driver/sqlite v1.5.5/go.mod h1:6NgQ7sQWAIFsPrJJl1lSNSu2TABh0ZZ/zm5fosATavE=\ngorm.io/gorm v1.25.9 h1:wct0gxZIELDk8+ZqF/MVnHLkA1rvYlBWUMv2EdsK1g8=\ngorm.io/gorm v1.25.9/go.mod h1:hbnx/Oo0ChWMn1BIhpy1oYozzpM15i4YPuHDmfYtwg8=\n"
        },
        {
          "name": "proto",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "service",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}