{
  "metadata": {
    "timestamp": 1736567884787,
    "page": 37,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cilium/cilium",
      "stars": 20661,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".authors.aux",
          "type": "blob",
          "size": 0.40625,
          "content": "\nThe following additional people are mentioned in commit logs as having provided\nhelpful bug reports, suggestions or have otherwise provided value to the\nproject:\n\nBrenden Blanco                          bblanco@plumgrid.com\nJakub Kicinski                          jakub.kicinski@netronome.com\nSalvatore Orlando                       salv.orlando@gmail.com\nTomÃ¡s Senart                            tsenart@gmail.com\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 7.5888671875,
          "content": "# Configuration file for clang-format.\n# Intended for clang-format >= 15.\n#\n# The list and meaning of the options is available at:\n#\n#   https://clang.llvm.org/docs/ClangFormatStyleOptions.html\n---\n# BasedOnStyle                              # No base style in use\n# AccessModifierOffset                      # We don't use access modifiers\nAlignAfterOpenBracket: Align\nAlignArrayOfStructures: Left\nAlignConsecutiveAssignments: false\nAlignConsecutiveBitFields:\n  Enabled: true\n  AcrossEmptyLines: true\n  AcrossComments: true\nAlignConsecutiveDeclarations: false\nAlignConsecutiveMacros:\n  Enabled: true\n  AcrossEmptyLines: true\n  AcrossComments: true\nAlignEscapedNewlines: Left\nAlignOperands: true\nAlignTrailingComments: true\nAllowAllArgumentsOnNextLine: false\n# AllowAllConstructorInitializersOnNextLine # Deprecated\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: Never\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortEnumsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: None\nAllowShortIfStatementsOnASingleLine: Never\n# AllowShortLambdasOnASingleLine            # We don't use lambdas\nAllowShortLoopsOnASingleLine: false\n# AlwaysBreakAfterDefinitionReturnType      # Deprecated\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\n# AlwaysBreakTemplateDeclarations           # We don't use templates\n# AttributeMacros                           # Unused at this time\nBinPackArguments: true\nBinPackParameters: true\nBitFieldColonSpacing: None\nBraceWrapping:\n  AfterCaseLabel: true\n  # AfterClass                              # We don't use classes\n  AfterControlStatement: Never\n  AfterEnum: false\n  AfterFunction: true\n  # AfterNamespace                          # We don't use namespaces\n  # AfterObjCDeclaration                    # We don't use ObjC\n  AfterStruct: false\n  AfterUnion: false\n  AfterExternBlock: false\n  # BeforeCatch                             # We don't use try/catch\n  BeforeElse: false\n  # BeforeLambdaBody                        # We don't use lambdas\n  BeforeWhile: false\n  IndentBraces: false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  # SplitEmptyNamespace                     # We don't use namespaces\n# BreakAfterJavaFieldAnnotations            # We don't use Java\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Custom\n# BreakBeforeConceptDeclarations            # We don't use concepts\nBreakBeforeTernaryOperators: false\n# BreakConstructorInitializers              # We don't use constructors\n# BreakInheritanceList                      # We don't use inheritance\nBreakStringLiterals: false\nColumnLimit: 80\n# CommentPragmas                            # Unused at this time\n# CompactNamespaces                         # We don't use namespaces\n# ConstructorInitializerAllOnOneLineOrOnePerLine # Deprecated\n# ConstructorInitializerIndentWidth         # We don't use constructors\nContinuationIndentWidth: 8\nCpp11BracedListStyle: false\n# DeriveLineEnding                          # Deprecated\nDerivePointerAlignment: false\nDisableFormat: false\n# EmptyLineAfterAccessModifier              # We don't use access modifiers\n# EmptyLineBeforeAccessModifier             # We don't use access modifiers\n# ExperimentalAutoDetectBinPacking          # Experimental, \"Use at your own risk\"\n# FixNamespaceComments                      # We don't use namespaces\n# ForEachMacros                             # Unused at this time\n# IfMacros                                  # Unused at this time\nIncludeBlocks: Preserve\n# IncludeCategories                         # Unused at this time\n# IncludeIsMainRegex                        # Unused at this time\n# IncludeIsMainSourceRegex                  # Unused at this time\n# IndentAccessModifiers                     # We don't use access modifiers\nIndentCaseBlocks: false\nIndentCaseLabels: false\n# IndentExternBlock                         # We don't use extern blocks\nIndentGotoLabels: false\nIndentPPDirectives: AfterHash\n# IndentRequiresClause                      # We don't use equire clauses\nIndentWidth: 8\nIndentWrappedFunctionNames: false\nInsertBraces: false\n# InsertTrailingCommas                      # We don't use JavaScript\n# JavaImportGroups                          # We don't use Java\n# JavaScriptQuotes                          # We don't use JavaScript\n# JavaScriptWrapImports                     # We don't use JavaScript\nKeepEmptyLinesAtTheStartOfBlocks: false\n# LambdaBodyIndentation                     # We don't use lambdas\nLanguage: Cpp\n# MacroBlockBegin                           # Unused at this time\n# MacroBlockEnd                             # Unused at this time\nMaxEmptyLinesToKeep: 1\n# NamespaceIndentation                      # We don't use namespaces\n# NamespaceMacros                           # We don't use namespaces\n# ObjCBinPackProtocolList                   # We don't use ObjC\n# ObjCBlockIndentWidth                      # We don't use ObjC\n# ObjCBreakBeforeNestedBlockParam           # We don't use ObjC\n# ObjCSpaceAfterProperty                    # We don't use ObjC\n# ObjCSpaceBeforeProtocolList               # We don't use ObjC\nPPIndentWidth: 1\n# PackConstructorInitializers               # We don't use constructors\n\n# Penalties decide in what order (weighting) things should be done if a line is\n# too long: 100 = try everything else before this.\n# See https://stackoverflow.com/a/46749925\nPenaltyBreakAssignment: 10\nPenaltyBreakBeforeFirstCallParameter: 0\nPenaltyBreakComment: 0\nPenaltyBreakFirstLessLess: 0\nPenaltyBreakOpenParenthesis: 100\nPenaltyBreakString: 10\n# PenaltyBreakTemplateDeclaration           # We don't use templates\nPenaltyExcessCharacter: 100\nPenaltyIndentedWhitespace: 100\nPenaltyReturnTypeOnItsOwnLine: 100\n\nPointerAlignment: Right\nQualifierAlignment: Leave\n# QualifierOrder                            # Unused at this time\n# RawStringFormats                          # Unused at this time\n# ReferenceAlignment                        # We don't use references\nReflowComments: false\nRemoveBracesLLVM: false\n# RequiresClausePosition                    # We don't use require clauses\nSeparateDefinitionBlocks: Leave\n# ShortNamespaceLines                       # We don't use namespaces\nSortIncludes: Never\n# SortJavaStaticImport                      # We don't use Java\n# SortUsingDeclarations                     # We don't use using declarations\nSpaceAfterCStyleCast: false\nSpaceAfterLogicalNot: false\n# SpaceAfterTemplateKeyword                 # We don't use templates\nSpaceAroundPointerQualifiers: Default\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCaseColon: false\n# SpaceBeforeCpp11BracedList                # We don't use C++11 braced lists to initialize objects\n# SpaceBeforeCtorInitializerColon           # We don't use constructors\n# SpaceBeforeInheritanceColon               # We don't use inheritance\nSpaceBeforeParens: ControlStatements\n# SpaceBeforeParensOptions                  # No need for custom SpaceBeforeParens options\n# SpaceBeforeRangeBasedForLoopColon         # We don't use range-based for loops\nSpaceBeforeSquareBrackets: false\nSpaceInEmptyBlock: false\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\n# SpacesInAngles                            # We don't use templates\nSpacesInCStyleCastParentheses: false\nSpacesInConditionalStatement: false\nSpacesInContainerLiterals: false\nSpacesInLineCommentPrefix:\n  Minimum: 1\n  Maximum: 1\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard: C++03\n# StatementAttributeLikeMacros              # Unused at this time\n# StatementMacros                           # Unused at this time\nTabWidth: 8\n# TypenameMacros                            # Unused at this time\n# UseCRLF # Deprecated\nUseTab: Always\n# WhitespaceSensitiveMacros                 # Unused at this time\n...\n"
        },
        {
          "name": ".clomonitor.yml",
          "type": "blob",
          "size": 0.9609375,
          "content": "# CLOMonitor metadata file\n\nexemptions:\n  - check: slack_presence\n    reason: \"The Cilium slack community can be found at https://slack.cilium.io\" # Justification of this exemption\n\n  - check: dangerous_workflow\n    reason: >\n      \"It is safe to run code checkout '${{ github.event.pull_request.head.sha }}' \n      and 'github.event.pull_request.head.ref' in .github/workflows/build-images-base.yaml \n      as this workflow is only permitted to be executed after an explicit approval of a \n      subset of committers.\"\n\n  - check: signed_releases\n    reason: >\n      \"All Cilium release images are cryptographically signed during build by cosign. \n      Images are hosted in Quay. OpenSSF Scorecard check is currently limited to repositories \n      hosted on GitHub, and does not support other source hosting repositories.\"\n\n  - check: token_permissions\n    reason: >\n      \"Reason to use every non-read-only token in GitHub workflows is commented in the respective workflow files.\"\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.8525390625,
          "content": "/install/kubernetes/cilium/values.yaml.tmpl linguist-language=yml\n/install/kubernetes/cilium/values.yaml linguist-generated\n/install/kubernetes/cilium/README.md linguist-generated\ngo.sum linguist-generated\nexamples/kubernetes/connectivity-check/connectivity-*.yaml linguist-generated\npkg/k8s/apis/cilium.io/v2/client/crds/*.yaml linguist-generated\ntest/controlplane/**/v1.[0-9][0-9]/*.yaml linguist-generated\ntest/controlplane/services/graceful-termination/*.yaml linguist-generated\nDocumentation/cmdref/** linguist-generated\nDocumentation/crdlist.rst linguist-generated\nDocumentation/helm-values.rst linguist-generated\nDocumentation/codeowners.rst linguist-generated\nDocumentation/_static/* -diff\n*svg -diff\npkg/k8s/client/clientset/** linguist-generated\npkg/k8s/client/informers/** linguist-generated\npkg/k8s/client/listers/** linguist-generated\n*.bt linguist-language=D\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.8818359375,
          "content": "# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n*.so.*\n*.d\n\n# LLVM IR files\n*.ll\n*.ll-*\n\n# Folders\n_obj\n_test\n_build/\n\n# Architecture specific extensions/prefixes\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\n*.test\n*.prof\n\n*.swn\n*.swp\n.vagrant\nvagrant.kubeconfig\ncoverage.out\ncoverage-all.out\ncoverage-all.html\ncoverage-all-tmp.out\nbpf-coverage.html\nbpf-coverage.cover\n\n.DS_Store\n.idea/\n.vscode/*\n!.vscode/launch.json\n!.vscode/extensions.json\n*.plist\n\n*_bash_completion\n*.swo\noutgoing\n\n*cscope.files\n*cscope.out\n*cscope.in.out\n*cscope.po.out\n*tags\n.gdb_history\ncompile_commands.json\n\nman/\n\ntest/envoy/cilium-files\ntest/test_results*\ntest/.vagrant\ntest/tmp.yaml\ntest/*_manifest.yaml\ntest/*.xml\ntest/*.json\ntest/*.log\ntest/bpf/_results\ntest/cilium-[0-9a-f]*.yaml\ntest/*tmp\ntest/cilium-istioctl\n\n# Testdata, includes generated .o\n!**/testdata/*\n\n# Updates E2E Test\nold-charts/\n\n# generated test files\ntest/k8s/manifests/cnp-second-namespaces.yaml\ntest/cilium.conf.ginkgo\nexternal-workload-ca.crt\nexternal-workload-tls.crt\nexternal-workload-tls.key\n\n# GKE temporary files\ntest/gke/cluster-name\ntest/gke/cluster-uri\ntest/gke/cluster-version\ntest/gke/gke-kubeconfig\ntest/gke/resize-kubeconfig\ntest/gke/registry-adder.yaml\n\n# Emacs backup files\n*~\n\n# generated from make targets\n*.ok\n*.build_all\nLICENSE.all\n\n# Temporary files that allow build containers/VMs work without git\n# Not to be ignored by docker.\nGIT_VERSION\n\n# The following files get created during image builds\n.buildx\n.buildx_builder\n\n# Local developer config to be executed in the dev VM and CI VMs started locally\n.devvmrc\n\n# Generated dockerignore files\nimages/*/Dockerfile.dockerignore\n\n# Local Emacs files\n.dir-locals.el\n\n# Clangd cache for indexed bpf code\nbpf/.cache\n.cache\n\n# Include dummy bpf object necessary for XDP_TX\n!test/l4lb/bpf_xdp_veth_host.o\n\n# Files used for direnv\n.direnv\n.envrc\n"
        },
        {
          "name": ".golangci.yaml",
          "type": "blob",
          "size": 5.41796875,
          "content": "# options for analysis running\nrun:\n  # default concurrency is a available CPU number\n  concurrency: 4\n\n  # timeout for analysis, e.g. 30s, 5m, default is 1m\n  timeout: 20m\n\n  # exit code when at least one issue was found, default is 1\n  issues-exit-code: 1\n\n  # include test files or not, default is true\n  tests: true\n\n  # which dirs to skip: they won't be analyzed;\n  # can use regexp here: generated.*, regexp is applied on full path;\n  # default value is empty list, but next dirs are always skipped independently\n  # from this option's value:\n  #   \tvendor$, third_party$, testdata$, examples$, Godeps$, builtin$\n  #  skip-dirs:\n  #    - ^test.*\n\n  # by default isn't set. If set we pass it to \"go list -mod={option}\". From \"go help modules\":\n  # If invoked with -mod=readonly, the go command is disallowed from the implicit\n  # automatic updating of go.mod described above. Instead, it fails when any changes\n  # to go.mod are needed. This setting is most useful to check that go.mod does\n  # not need updates, such as in a continuous integration and testing system.\n  # If invoked with -mod=vendor, the go command assumes that the vendor\n  # directory holds the correct copies of dependencies and ignores\n  # the dependency descriptions in go.mod.\n  modules-download-mode: readonly\n\n# all available settings of specific linters\nlinters-settings:\n  depguard:\n    rules:\n      main:\n        deny:\n          - pkg: \"math/rand$\"\n            desc: \"Use math/rand/v2 instead\"\n  exhaustruct:\n    # Ensure that command-line flags are explicitly default-initialized.\n    include:\n      - '.+\\.[Cc]onfig'\n      - '.+[Cc]fg'\n    exclude:\n      - '.+cache\\.Config' # k8s\n      - '.+fqdn\\.Config' # internal API\n      - '.+tls\\.Config' # Go TLS\n      - '.+v3\\.Config' # etcd\n      - '.+translation\\.Config' # internal gateway-api config\n  govet:\n    enable:\n      - nilness\n  goimports:\n    local-prefixes: github.com/cilium/cilium/\n  goheader:\n    values:\n      regexp:\n        PROJECT: 'Cilium|Hubble'\n    template: |-\n      SPDX-License-Identifier: Apache-2.0\n      Copyright Authors of {{ PROJECT }}\n  gosec:\n    includes:\n      - G402\n  gomodguard:\n    blocked:\n      modules:\n        - github.com/miekg/dns:\n            recommendations:\n              - github.com/cilium/dns\n            reason: \"use the cilium fork directly to avoid replace directives in go.mod, see https://github.com/cilium/cilium/pull/27582\"\n        - gopkg.in/check.v1:\n            recommendations:\n              - testing\n              - github.com/stretchr/testify/assert\n            reason: \"gocheck has been deprecated, see https://github.com/cilium/cilium/issues/28596\"\n        - github.com/cilium/checkmate:\n            recommendations:\n              - github.com/stretchr/testify/assert\n              - github.com/stretchr/testify/require\n            reason: \"cilium/checkmate has been deprecated, see https://github.com/cilium/cilium/issues/28596\"\n        - go.uber.org/multierr:\n            recommendations:\n              - errors\n            reason: \"Go 1.20+ has support for combining multiple errors, see https://go.dev/doc/go1.20#errors\"\n        - golang.org/x/exp/maps:\n            recommendations:\n              - maps\n              - slices\n            reason: \"Go 1.23+ has support for maps and slices, see https://go.dev/doc/go1.23#iterators\"\n        - golang.org/x/exp/constraints:\n            recommendations:\n              - cmp\n            reason: \"Go 1.21+ has support for Ordered constraint, see https://go.dev/doc/go1.21#cmp\"\n        - golang.org/x/exp/slices:\n            recommendations:\n              - slices\n            reason: \"Go 1.21+ provides many common operations for slices using generic functions, see https://go.dev/doc/go1.21#slices\"\n\n  stylecheck:\n    checks: [\"ST1019\"]\n\n  testifylint:\n    enable-all: true\n    disable:  # TODO: remove each disabled rule and fix it\n      - float-compare\n      - go-require\n      - require-error\n\nissues:\n  exclude-dirs-use-default: true\n\n  # Excluding configuration per-path, per-linter, per-text and per-source\n  exclude-rules:\n    - linters: [staticcheck]\n      text: \"SA1019\"                  # this is rule for deprecated method\n    - linters: [staticcheck]\n      text: \"SA9003: empty branch\"\n    - linters: [staticcheck]\n      text: \"SA2001: empty critical section\"\n    - linters: [err113]\n      text: \"do not define dynamic errors, use wrapped static errors instead\" # This rule to avoid opinionated check fmt.Errorf(\"text\")\n    # Skip goimports check on generated files\n    - path: \\\\.(generated\\\\.deepcopy|pb)\\\\.go$\n      linters:\n        - goimports\n    # Skip goheader check in the example files as these are included in the\n    # documentation.\n    - path: \"contrib/examples/.+\\\\.go\"\n      linters:\n        - goheader\n    # Skip goheader check on files imported and modified from upstream k8s\n    - path: \"pkg/ipam/(cidrset|service)/.+\\\\.go\"\n      linters:\n        - goheader\n    - path: \"pkg/hubble/dropeventemitter/fake_recorder.go\"\n      linters:\n        - goheader\n\nlinters:\n  disable-all: true\n  enable:\n    - depguard\n    - errorlint\n    - err113\n    - exhaustruct\n    - gofmt\n    - goimports\n    - govet\n    - ineffassign\n    - misspell\n    - staticcheck\n    - stylecheck\n    - testifylint\n    - unused\n    - goheader\n    - gosec\n    - gomodguard\n    - gosimple\n\n# To enable later if makes sense\n#    - deadcode\n#    - errcheck\n#    - gocyclo\n#    - golint\n#    - gosec\n#    - gosimple\n#    - lll\n#    - maligned\n#    - misspell\n#    - prealloc\n#    - structcheck\n#    - typecheck\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 7.421875,
          "content": "ÃbÃ©jÃ­dÃ© ÃyodÃ©lÃ© <abejideayodele@gmail.com>\nAdam Korcz <adam@adalogics.com>\nAdam Bocim <adam.bocim@seznam.cz>\nAlexei Starovoitov <alexei.starovoitov@gmail.com>\nAlex Waring <alex.waring@starlingbank.com> <ajmwaring@gmail.com>\nAlkama Hasan <gl3118@myamu.ac.in>\nAndrÃ© Martins <andre@cilium.io>\nAndrew Sy Kim <kim.andrewsy@gmail.com>\nAndrew Li <hui0787411@163.com>\nAnthony Rabbito <hello@anthonyrabbito.com>\nArika Chen <eaglesora@gmail.com>\nArthur Chiao <arthurchiao@hotmail.com> <ArthurChiao@users.noreply.github.com>\nArthur Evstifeev <aevstifeev@gitlab.com>\nArthur Evstifeev <mail@ap4y.me>\nArvind Soni <arvind@covalent.io>\nAshwin Paranjpe <ashwin@covalent.io>\nAshwin Paranjpe <ashwinp.work@gmail.com>\nAugustas Berneckas <a.berneckas@gmail.com>\nBarun Acharya <barun1024@gmail.com> <barun.acharya@accuknox.com>\nBarun Acharya <barun1024@gmail.com>\nBingshen Wang <bingshen.wbs@alibaba-inc.com>\nBingwu Yang <detailyang@gmail.com>\nBob Bouteillier <bob.bouteillier@datadoghq.com>\nBruno Miguel CustÃ³dio <brunomcustodio@gmail.com>\nCarlos AndrÃ©s Rocha <rchalumeau@magicleap.com>\nChangyu Wang <changyuwang@tencent.com>\nCharles-Henri GuÃ©rin <charles-henri.guerin@zenika.com>\nchenyahui <chenyahui9@jd.com>\nChen Kang <kongchen28@gmail.com>\nChen Yaqi <chenyaqi01@baidu.com> <chendotjs@gmail.com>\nChen Yaqi <chenyaqi01@baidu.com>\nChristine Chen <christine.chen@datadoghq.com>\nChristopher Biscardi <chris@christopherbiscardi.com>\nClaudia J. Kang <claudiajkang@gmail.com>\nCraig Box <craig.box@gmail.com>\nDan Wendlandt <dan@isovalent.com>\nDaniel Qian <qsj.daniel@gmail.com>\nDario Mader <9934402+darox@users.noreply.github.com>\nDario Mader <maderdario@gmail.com>\nDarren Mackintosh <unixdaddy@gmail.com>\nDarshan Chaudhary <deathbullet@gmail.com>\nDavid Chen <davidchen94@outlook.com> <yudechen@google.com>\nDavid Cheng <david.cheng@shopline.com>\nDavid Chosrova <dchosrova@gmail.com> David CHOSROVA <dchosrova@gmail.com>\nDawn <lx1960753013@gmail.com>\nDevarshi Sathiya <devarshisathiya5@gmail.com>\nDivine Odazie <dodazie@gmail.com>\nDivya Mohan <divya.mohan0209@gmail.com>\nDmitriy Zinin <admin@kami-no.ru>\nEl-Fadel Bonfoh <elfadel@accuknox.com> <bonfohelfadel@gmail.com>\nEmin Aktas <eminaktas34@gmail.com>\nFankaixi Li <fankaixi.li@bytedance.com>\nFelix FÃ¤rjsjÃ¶ <felix.farjsjo@gmail.com>\nfengshunli <1171313930@qq.com>\nFernand Galiana <fernand.galiana@gmail.com>\nFlorian Koch <f0@users.noreply.github.com>\nFranÃ§ois Joulaud <francois.joulaud@radiofrance.com> <48206448+joulaud@users.noreply.github.com>\nGaurav Genani <h3llix.pvt@gmail.com>\nGaurav Yadav <gaurav.dev.iiitm@gmail.com>\nGeorge Kontridze <gkontridze@plaid.com>\nGray Liang <gray.liang@isovalent.com> <greyschwinger@gmail.com>\nGowtham Sundara <gowtham.sundara@rapyuta-robotics.com>\nhuangxuesen <huangxuesen@kuaishou.com>\nHaoTian Qi <t117503445@gmail.com>\nHart Hoover <hart.hoover@gmail.com>\nHui Kong <hui.kong@qunar.com> <konghui@live.cn>\nIan Vernon <ian@cilium.io> <vagrant@k8s1>\nIfeanyi Ubah <ify1992@yahoo.com>\nIvan Makarychev <i.makarychev@tinkoff.ru>\nJarno Rajahalme <jarno@isovalent.com>\nJarno Rajahalme <jarno@covalent.io>\nJames Bodkin <james.bodkin@amphora.net>\nJames McShane <james.mcshane@superorbital.io>\nJed Salazar <jed@isovalent.com>\nJerry J. Muzsik <jerrymuzsik@icloud.com>\nJim Ntosas <ntosas@gmail.com>\nJomen Xiao <jomenxiao@gmail.com>\nJonathan Davies <jpds@protonmail.com>\nJones Shi <shilei@hotstone.com.cn>\nJoshua Roppo <joshroppo@gmail.com>\nJun Chen <answer1991.chen@gmail.com>\nJunli Ou <oujunli306@gmail.com>\nKamil Lach <kamil.lach.rs@gmail.com> <kamil@thor.asgard.local>\nKaito Ii <kaitoii1111@gmail.com>\nKarl Heins <karlheins@northwesternmutual.com>\nKevin Holditch <82885135+kevholditch-f3@users.noreply.github.com>\nBokang Li <libokang.dev@gmail.com>\nLi Cheng <rapid.li@huolala.cn>\nLior Rozen <liorr@tailorbrands.com> <liorrozen@users.noreply.github.com>\nLiu Qun <qunliu@zyhx-group.com>\nLivingstone S E <livingstone.s.e@gmail.com>\nLongHui Li <longhui.li@woqutech.com> <llhwonderoflighthbc@gamil.com>\nLongHui Li <longhui.li@woqutech.com>\nLouis DeLosSantos <louis.delos@gmail.com> <louis@isovalent.com> <louis.delos@isovalent.com>\nMadhu Challa <challa@gmail.com>\nMahadev Panchal <mahadev.panchal@accuknox.com>\nMandar U Jog <mjog@google.com> <mandarjog@gmail.com>\nMarc Stulz <m@footek.ch>\nMarcel ZiÄba <marcel.zieba@isovalent.com> Marcel Zieba <marseel@gmail.com>\nMarcel ZiÄba <marcel.zieba@isovalent.com> Marcel Zieba <marcel.zieba@isovalent.com>\nMatthew Gumport <me@gum.pt>\nMaxime Visonneau <maxime.visonneau@gmail.com>\nMichael Kashin <mmkashin@gmail.com>\nMichael Vorburger <vorburger@redhat.com>\nNeela Jacques <neela@isovalent.com> <68304471+Neelajacques@users.noreply.github.com>\nOksana Baranova <oksana.baranova@intel.com>\nOliver Hofmann <91730056+olinux-dev@users.noreply.github.com>\nOndrej Blazek <ondrej.blazek@firma.seznam.cz>\nParth Patel <parth.psu@gmail.com>\nPeiqi Shi <uestc.shi@gmail.com>\nPengfei Song <pengfei.song@daocloud.io>\nPhilippe LafoucriÃ¨re <philippe.lafoucriere@gmail.com>\nPierre-Yves Aillet <pyaillet@gmail.com> <pyaillet@users.noreply.github.com>\nPratyush Singhal <psinghal20@gmail.com>\nQifeng Guo <qifeng.guo@daocloud.io>\nQuentin Monnet <qmo@qmon.net> <quentin@isovalent.com>\nRaam <ram29@bskyb.com>\nRaphael Campos <raphael@accuknox.com>\nRei Shimizu <Shikugawa@gmail.com>\nrenovate[bot] <bot@renovateapp.com> <29139614+renovate[bot]@users.noreply.github.com>\nRoman Ptitcyn <romanspb@yahoo.com>\nSachin Maurya <sachin.maurya7666@gmail.com>\nSadik Kuzu <sadikkuzu@hotmail.com>\nSalvatore Mazzarino <salvatore@accuknox.com> <dev@mazzarino.cz>\nSami Yessou <fnzv@users.noreply.github.com>\nSander Timmerman <stimmerman@schubergphilis.com>\nSarah Corleissen <sarah.corleissen@isovalent.com>\nSean Winn <sean@isovalent.com> <seanmwinn@hotmail.com>\nSebastien Thomas <prune@lecentre.net>\nSergey Generalov <sergey@isovalent.com> <sergey@genbit.ru>\nSimon Felding <45149055+simonfelding@users.noreply.github.com>\nSteven Shuang <stevenshuang521@gmail.com>\nTam Mach <sayboras@yahoo.com>\nThomas Graf <thomas@cilium.io>\nTobias Mose <tobias.mose@xentom.com>\nTobias Mose <mosetobias@gmail.com>\nTom Hadlaw <tom.hadlaw@isovalent.com>\nTomoki Sugiura <cheztomo513@gmail.com> <tomoki.sugiura@mail.shanpu.info>\nTomoki Sugiura <cheztomo513@gmail.com>\nTony Lu <tonylu@linux.alibaba.com>\nTrevor Tao <trevor.tao@arm.com>\nVance Li <vanceli@tencent.com> <liyannois@gmail.com>\nVance Li <vanceli@tencent.com> vanceli <vanceli@tencent.com>\nViktor Kurchenko <viktor.kurchenko@isovalent.com> viktor-kurchenko <viktor.kurchenko@isovalent.com>\nViktor Kurchenko <viktor.kurchenko@isovalent.com> viktor-kurchenko <69600804+viktor-kurchenko@users.noreply.github.com>\nVille Ojamo <bluikko@users.noreply.github.com> <14869000+bluikko@users.noreply.github.com>\nVlad Ungureanu <vladu@palantir.com> <ungureanuvladvictor@gmail.com>\nVipul Singh <vipul21sept@gmail.com>\nVipul Singh <singhvipul@microsoft.com>\nWang Dong <xdragon007@gmail.com>>\nWayne Haber <whaber@gitlab.com> <41373231+whaber@users.noreply.github.com>\nWei Yang <wei.yang@daocloud.io> <31728060+yulng@users.noreply.github.com>\nWeilong Cui <cuiwl@google.com>\nWeizhou Lan <weizhou.lan@daocloud.io>\nWenhu Wang <wang15691700816@gmail.com>\nWongyu Lee <kyu21@outlook.com>\nWill Stewart <will@northflank.com>\nYiannis Yiakoumis <yiannis@selfienetworks.com>\nYoussef Azrak <yazrak.tech@gmail.com>\nYoyo Wu <yoyo19980720@126.com>\nYugo Kobayashi <kobdotsh@gmail.com>\nYurii Dzobak <yurii.dzobak@lotusflare.com>\nYurii Komar <Subreptivus@gmail.com>\nYves Blusseau <yves.blusseau@acoss.fr>\nXiaoqing <xiaoqingnb@gmail.com>\nXiaoyang Zhu <zhuxiaoyang1996@gmail.com>\nXin Li <xin.li@daocloud.io>\nZhu Yan <hackzhuyan@gmail.com>\n"
        },
        {
          "name": ".nvim",
          "type": "tree",
          "content": null
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 61.302734375,
          "content": "The following people, in alphabetical order, have either authored or signed\noff on commits in the Cilium repository:\n\na5r0n                                   a5r0n@users.noreply.github.com\nAaron Ecay                              aaron.ecay@sky.uk\nÃbÃ©jÃ­dÃ© ÃyodÃ©lÃ©                         abejideayodele@gmail.com\nAbirdcfly                               fp544037857@gmail.com\nAdam Bocim                              adam.bocim@seznam.cz\nAdam Korcz                              adam@adalogics.com\nAdam Wolfe Gordon                       awg@digitalocean.com\nadamzhoul                               adamzhoul186@gmail.com\nAditi Ghag                              aditi@cilium.io\nAditya Kumar                            aditya.kumar60@infosys.com\nAditya Purandare                        aditya.p1993@hotmail.com\nAditya Sharma                           aditya.sharma@shopify.com\nAdrian Berger                           adrian.berger@bedag.ch\nAdrien Trouillaud                       adrienjt@users.noreply.github.com\nAhmed Bebars                            1381372+abebars@users.noreply.github.com\nAkhil Velagapudi                        4@4khil.com\nAkshat Agarwal                          humancalico@disroot.org\nAlan Kutniewski                         kutniewski@google.com\nAlban Crequy                            alban@kinvolk.io\nAleksander Mistewicz                    amistewicz@google.com\nAleksei Zakharov                        zakharov.a.g@yandex.ru\nAlexander Alemayhu                      alexander@alemayhu.com\nAlexander Berger                        alex-berger@gmx.ch\nAlexander Block                         ablock84@gmail.com\nAlexander Demichev                      demichev.alexander@gmail.com\nAlexandre Barone                        abalexandrebarone@gmail.com\nAlexandre Perrin                        alex@isovalent.com\nAlexei Starovoitov                      alexei.starovoitov@gmail.com\nAlexey Grevtsev                         alexey.grevtcev@gmail.com\nAlex Katsman                            alexkats@google.com\nAlex Romanov                            alex@romanov.ws\nAlex Szakaly                            alex.szakaly@gmail.com\nAlex Waring                             alex.waring@starlingbank.com\nalisdairbr                              alisdairbr@users.noreply.github.com\nAlkama Hasan                            gl3118@myamu.ac.in\nAlois Petutschnig                       alois@petutschnig.net\nAlvaro MuÃ±oz                            pwntester@github.com\nAlvaro Uria                             alvaro.uria@isovalent.com\nAmey Bhide                              amey@covalent.io\nAmir Kheirkhahan                        amir.kheirkhahan@dbschenker.com\namitmavgupta                            115551423+amitmavgupta@users.noreply.github.com\nAmol Ambekar                            ambekara@google.com\nAmre Shakimov                           amre@covalent.io\nAnderson, David L                       david.l.anderson@intel.com\nAndor Nemeth                            andor_nemeth@swissre.com\nAndreas MÃ¥rtensson                      andreas@addem.se\nAndrÃ© Costa                             ancosta@gmail.com\nAndree Klattenhoff                      mail@andr.ee\nAndrei Kvapil                           kvapss@gmail.com\nAndrÃ© Martins                           andre@cilium.io\nAndrew Bulford                          andrew.bulford@form3.tech\nAndrew Holt                             andrew.holt@utmost.co\nAndrew Li                               hui0787411@163.com\nAndrew Sauber                           2046750+asauber@users.noreply.github.com\nAndrew Sy Kim                           kim.andrewsy@gmail.com\nAndrew Titmuss                          iandrewt@icloud.com\nAndrey Devyatkin                        andrey.devyatkin@fivexl.io\nAndrey Klimentyev                       andrey.klimentyev@flant.com\nAndrey Maltsev                          maltsev.andrey@gmail.com\nAndrey Voronkov                         voronkovaa@gmail.com\nAndrii Iuspin                           andrii.iuspin@isovalent.com\nAndrzej Mamak                           nqaegg@gmail.com\nAndy Allred                             andy@punasusi.com\nandychuang                              andy.chuang@shoplineapp.com\nAngelo Poerio                           apoerio@cuebiq.com\nAngelos Kolaitis                        neoaggelos@gmail.com\nAnimesh Pathak                          53110238+Sonichigo@users.noreply.github.com\nAniruddha Amit Dutta                    duttaaniruddha31@gmail.com\nAnish Shah                              anishshah@google.com\nAnit Gandhi                             anitgandhi@gmail.com\nAnkur Kothiwal                          ankur.kothiwal@accuknox.com\nAnna Kapuscinska                        anna@isovalent.com\nAnthony Rabbito                         hello@anthonyrabbito.com\nAntoine Coetsier                        acr@exoscale.ch\nAntoine Legrand                         2t.antoine@gmail.com\nAntonio Ojea                            aojea@google.com\nAnton Ippolitov                         anton.ippolitov@datadoghq.com\nAntoni Zawodny                          zawodny@google.com\nAnton Protopopov                        aspsk@isovalent.com\nAnton Tykhyy                            atykhyy@gmail.com\nAntony Reynaud                          antony.reynaud@isovalent.com\nAnubhab Majumdar                        anmajumdar@microsoft.com\nAnurag Aggarwal                         anurag.aggarwal@flipkart.com\nArchana Shinde                          archana.m.shinde@intel.com\nArcher Wu                               archerwu9425@icloud.com\nArdika Bagus                            me@ardikabs.com\nArika Chen                              eaglesora@gmail.com\nArkadiusz Kaliwoda (akaliwod)           akaliwod@cisco.com\nArnaud Meukam                           ameukam@gmail.com\nArseniy Belorukov                       a.belorukov@team.bumble.com\nArtem Tokarev                           enjoy1288@gmail.com\nArthur Chiao                            arthurchiao@hotmail.com\nArthurChiao                             arthurchiao@hotmail.com\nArthur Evstifeev                        mail@ap4y.me\nArthur Outhenin-Chalandre               arthur@cri.epita.fr\nArvind Soni                             arvind@covalent.io\nAshley Reese                            ashley.reese@firma.seznam.cz\nAshray Jain                             ashrayj@palantir.com\nAshwin Paranjpe                         ashwin@covalent.io\nAssiya Khuzyakhmetova                   assiya.khuzyakhmetova@nu.edu.kz\nAtkins Chang                            atkinschang@gmail.com\nAugustas Berneckas                      a.berneckas@gmail.com\nAurelien Benoist                        aurelien.benoist@sony.com\nAustin Cawley-Edwards                   austin.cawley@gmail.com\nAwesomePatrol                           AwesomePatrol@users.noreply.github.com\nayesha khaliq                           ayeshakhaliqrana@gmail.com\nAyush Dwivedi                           ayush.dwivedi@accuknox.com\nbakito                                  github@bakito.ch\nBarÄ±Å Ekin YÄ±ldÄ±rÄ±m                     101638632+beyildirim@users.noreply.github.com\nBarun Acharya                           barun1024@gmail.com\nBasit Mustafa                           basit.mustafa@gmail.com\nBeatriz MartÃ­nez                        beatriz@isovalent.com\nBenjamin Gentil                         benjamin.gentil@infomaniak.com\nBenjamin Leggett                        benjamin.leggett@solo.io\nBenjamin Pineau                         benjamin.pineau@datadoghq.com\nBenoÃ®t Knecht                           bknecht@protonmail.ch\nBenoÃ®t SauvÃ¨re                          benoit.sauvere@backmarket.com\nBernard Halas                           bernard.halas@berops.com\nBill Mulligan                           billmulligan516@gmail.com\nBingshen Wang                           bingshen.wbs@alibaba-inc.com\nBingwu Yang                             detailyang@gmail.com\nBirol Bilgin                            birol@cilium.io\nBob Bouteillier                         bob.bouteillier@datadoghq.com\nBokang Li                               libokang.dev@gmail.com\nBolun Zhao                              blzhao@google.com\nBoran Car                               boran.car@gmail.com\nBoris Petrovic                          boris.petrovic@united.cloud\nBowei Du                                bowei@google.com\nBrad Whitfield                          bradswhitfield@gmail.com\nBrandon Ewing                           brandon.ewing@imc.com\nBrandon McNama                          brandonmcnama@outlook.com\nBrian Payne                             payne.in.the.brian@gmail.com\nBrian Topping                           brian@coglative.com\nBruno Miguel CustÃ³dio                   brunomcustodio@gmail.com\nBryan Stenson                           bryan.stenson@okta.com\nbzsuni                                  bingzhe.sun@daocloud.io\nCalum MacRae                            hi@cmacr.ae\nCameron McAvoy                          cmcavoy@indeed.com\nCamilo Schoeningh                       camilo.schoeningh@dunnhumby.com\nCanh Ngo                                canhnt@gmail.com\nCarlos AndrÃ©s Rocha                     rchalumeau@magicleap.com\nCarlos Castro                           carlos.castro@jumo.world\nCarlos RodrÃ­guez HernÃ¡ndez              carlosrh@vmware.com\nCarson Anderson                         carson.anderson@goteleport.com\nCarson Yang                             yangchuansheng33@gmail.com\nCasey Callendrello                      cdc@isovalent.com\ncdtzabra                                22188574+cdtzabra@users.noreply.github.com\nCezary Zawadka                          czawadka@google.com\nChance Zibolski                         chance.zibolski@gmail.com\nChangyu Wang                            changyuwang@tencent.com\nCharles-Edouard BrÃ©tÃ©chÃ©                charled.breteche@gmail.com\nCharles-Henri GuÃ©rin                    charles-henri.guerin@zenika.com\nCharles Uneze                           charlesniklaus@gmail.com\nchaunceyjiang                           chaunceyjiang@gmail.com\nChen Kang                               kongchen28@gmail.com\nchentanjun                              tanjunchen20@gmail.com\nchenyahui                               chenyahui9@jd.com\nChen Yaqi                               chenyaqi01@baidu.com\nchenyuezhou                             zcy.chenyue.zhou@gmail.com\nchez-shanpu                             tomoki-sugiura@cybozu.co.jp\nChris Bannister                         c.bannister@gmail.com\nChris Tarazi                            chris@isovalent.com\nChristian HÃ¶rtnagl                      christian2@univie.ac.at\nChristian HÃ¼ning                        christian.huening@finleap.com\nChristine Chen                          christine.chen@datadoghq.com\nChristine Kim                           xtineskim@gmail.com\nChristophe Jauffret                     christophe.jauffret@nutanix.com\nChristopher Biscardi                    chris@christopherbiscardi.com\nChristopher Schmidt                     fakod666@gmail.com\nChristoph Puhl                          cpu@isovalent.com\nChris Werner Rau                        cwrau@cwrau.info\nChrsMark                                chrismarkou92@gmail.com\nCilium Imagebot                         noreply@cilium.io\nCilium Release Bot                      noreply@cilium.io\nCintia Sanchez Garcia                   cynthiasg@icloud.com\nCJ Virtucio                             cjv287@gmail.com\nClaudia J. Kang                         claudiajkang@gmail.com\nClÃ©ment Delzotti                        elk1ns@outlook.fr\ncleverhu                                shouping.hu@daocloud.io\ncndoit18                                cndoit18@outlook.com\nConnor Jones                            cj@cjmakes.com\nCookie Wang                             luckymrwang@163.com\ncornfeedhobo                            cornfeedhobo@fuzzlabs.org\nCory Snyder                             csnyder@1111systems.com\nCraig Box                               craig.box@gmail.com\ncrashiura                               crashiura@gmail.com\ncui fliter                              imcusg@gmail.com\ncx                                      1249843194@qq.com\nCynthia Thomas                          cynthia@covalent.io\nCyril Corbon                            corboncyril@gmail.com\nCyril Scetbon                           cscetbon@gmail.com\nczybjtu                                 smartczy@outlook.com\nDale Ragan                              dale.ragan@sap.com\nDalton Hubble                           dghubble@gmail.com\nDamian Sawicki                          dsawicki@google.com\nDan Everton                             deverton@godaddy.com\nDaneyon Hansen                          daneyon.hansen@solo.io\nÄáº·ng Minh DÅ©ng                          dungdm93@live.com\nDaniel Bodky                            daniel.bodky@netways.de\nDaniel Borkmann                         daniel@iogearbox.net\nDaniel Dao                              dqminh89@gmail.com\nDaniel Finneran                         dan@thebsdbox.co.uk\nDaniel Hawton                           daniel.hawton@solo.io\nDaniel Qian                             qsj.daniel@gmail.com\nDaniel T. Lee                           danieltimlee@gmail.com\nDaniel Vos                              danielvos@outlook.com\nDanni Skov HÃ¸glund                      skuffe@pwnz.dk\nDan Sexton                              dan.b.sexton@gmail.com\nDan Wendlandt                           dan@covalent.io\nDario Mader                             maderdario@gmail.com\nDarren Foo                              darren.foo@shopify.com\nDarren Mackintosh                       unixdaddy@gmail.com\nDarshan Chaudhary                       deathbullet@gmail.com\nDaShaun                                 826271+dashaun@users.noreply.github.com\nDavid Bimmler                           david.bimmler@isovalent.com\nDavid Birks                             davidebirks@gmail.com\nDavid Boslee                            david@goteleport.com\nDavid Bouchare                          david.bouchare@datadoghq.com\nDavid Calvert                           david@0xdc.me\nDavid Cheng                             david.cheng@shopline.com\nDavid Chosrova                          dchosrova@gmail.com\nDavid Donchez                           donch@dailymotion.com\nDavid Korczynski                        david@adalogics.com\nDavid Leadbeater                        dgl@dgl.cx\nDavid Schlosnagle                       davids@palantir.com\nDavid Swafford                          dswafford@coreweave.com\nDavid Wolffberg                         1350533+wolffberg@users.noreply.github.com\nDawn                                    lx1960753013@gmail.com\ndddddai                                 dddwq@foxmail.com\nDean                                    22192242+saintdle@users.noreply.github.com\nDeepesha Burse                          deepesha.3007@gmail.com\nDeepesh Pathak                          deepshpathak@gmail.com\nDenis GERMAIN                           dgermain@deezer.com\nDenis Khachyan                          khachyanda.gmail.com\nDerek Chen                              derek_chen@live.com\nDerek Gaffney                           17263955+gaffneyd4@users.noreply.github.com\nDeshi Xiao                              xiaods@gmail.com\ndeterclosed                             fliter@outlook.com\nDevarshi Sathiya                        devarshisathiya5@gmail.com\ndhamick                                 dharmicksaik@gmail.com\nDharma Bellamkonda                      dharma.bellamkonda@gmail.com\nDidier Durand                           durand.didier@gmail.com\nDiego Casati                            diego.casati@gmail.com\nDima Pugachev                           krabradosty@gmail.com\nDipankar Das                            dipankardas0115@gmail.com\nDivine Odazie                           dodazie@gmail.com\nDivya Mohan                             divya.mohan0209@gmail.com\nDivyansh Kamboj                         divyansh.kamboj@accuknox.com\nDivya Rani                              ranidivya063@gmail.com\nDjalal Harouni                          tixxdz@gmail.com\nDmitriy Zinin                           admin@kami-no.ru\nDmitry Ilyevsky                         dilyevsky@mux.com\nDmitry Kharitonov                       geakstr@me.com\nDmitry Savintsev                        dmitris@users.noreply.github.com\nDmitry Shurupov                         dmitry.shurupov@palark.com\nDom Del Nano                            ddelnano@gmail.com\nDom Goodwin                             dom.goodwin@capgemini.com\nDonia Chaiehloudj                       donia.cld@isovalent.com\nDonnie McMahan                          jmcmaha1@gmail.com\nDorde Lapcevic                          dordel@google.com\nDuffie Cooley                           dcooley@isovalent.com\ndwalker-sabiogroup                      100362969+dwalker-sabiogroup@users.noreply.github.com\nDylan Reimerink                         dylan.reimerink@isovalent.com\negoust                                  ustinov16@gmail.com\nEkene Nwobodo                           nwobodoe71@gmail.com\nElectron                                alokaks601@gmail.com\nEl-Fadel Bonfoh                         elfadel@accuknox.com\nElias Hernandez                         elirayhernandez@gmail.com\neliranw                                 39266788+eliranw@users.noreply.github.com\nEllie Springsteen                       ellie.springsteen@appian.com\nEloy Coto                               eloy.coto@acalustra.com\nEmin Aktas                              eminaktas34@gmail.com\nEmmanuel T Odeke                        emmanuel@orijtech.com\nEmre SavcÄ±                              emre.savci@trendyol.com\nEng Zer Jun                             engzerjun@gmail.com\nEohyung Lee                             liquidnuker@gmail.com\nEric Bailey                             e.bailey@sportradar.com\nEric Ferreira                           ericarlos23@gmail.com\nEric Hausig                             16280871+ehausig@users.noreply.github.com\nEric Mountain                           eric.mountain@datadoghq.com\nEric M. Yanulis                         eric@eyanulis.net\nEric Ripa                               eric@ripa.io\nErik Chang                              erik.chang@nordstrom.com\nEugene Starchenko                       17835122+eugenestarchenko@users.noreply.github.com\nEwout Prangsma                          ewout@prangsma.net\nFabian Fischer                          fabian.fischer@isovalent.com\nFabio Falzoi                            fabio.falzoi@isovalent.com\nFaiyaz Ahmed                            faiyaza@gmail.com\nFankaixi Li                             fankaixi.li@bytedance.com\nFederico Hernandez                      f@ederi.co\nfeifeifei                               wangyufeimoon@gamil.com\nFelix FÃ¤rjsjÃ¶                           felix.farjsjo@gmail.com\nfengshunli                              1171313930@qq.com\nferenets                                ferenets@nebius.com\nFernand Galiana                         fernand.galiana@gmail.com\nFeroz Salam                             feroz.salam@isovalent.com\nFeynmanZhou                             pengfeizhou@yunify.com\nFilip Nikolic                           oss.filipn@gmail.com\nFish-pro                                zechun.chen@daocloud.io\nFlorian Koch                            f0@users.noreply.github.com\nFlorian Lehner                          dev@der-flo.net\nFoyer Unix                              foyerunix@foyer.lu\nFrancois Allard                         francois@breathelife.com\nFranÃ§ois Joulaud                        francois.joulaud@radiofrance.com\nFrank Villaro-Dixon                     frank.villaro@infomaniak.com\nFrederic Branczyk                       fbranczyk@gmail.com\nFrederic Giloux                         frederic.giloux@isovalent.com\nFred Heinecke                           fred.heinecke@yahoo.com\nFred Hsu                                fredlhsu@gmail.com\nFredrik LÃ¶nnegren                       fredrik.lonnegren@gmail.com\nFulvio Risso                            fulvio.risso@polito.it\nGabe Conradi                            gconradi@seatgeek.com\ngailsuccess                             157372272+gailsuccess@users.noreply.github.com\nGaurav Genani                           h3llix.pvt@gmail.com\nGaurav Yadav                            gaurav.dev.iiitm@gmail.com\nGavin McNair                            gavin.mcnair@kaluza.com\nGeorge GaÃ¡l                             gb12335@gmail.com\nGeorge Kontridze                        gkontridze@plaid.com\nGerald Pape                             gerald@giantswarm.io\nGeyslan G. Bem                          geyslan@gmail.com\nGH action                               ghabot@does.not.exist.cilium.org\nGianluca Arbezzano                      gianarb92@gmail.com\nGilberto Bertin                         jibi@cilium.io\ngjmzj                                   jmgaozz@hotmail.com\nGlen Yu                                 glen.yu@gmail.com\nGlib Smaga                              code@gsmaga.com\nGobinath Krishnamoorthy                 gobinathk@google.com\nGoGstickGo                              janilution@gmail.com\nGowtham Sundara                         gowtham.sundara@rapyuta-robotics.com\nGray Liang                              gray.liang@isovalent.com\nguangwu                                 guoguangwug@gmail.com\nGuilherme Oki                           guilherme.oki@wildlifestudios.com\nGuilherme Souza                         101073+guilhermef@users.noreply.github.com\nGunju Kim                               gjkim042@gmail.com\nhacktivist123                           akintayoshedrack@gmail.com\nHadrien Patte                           hadrien.patte@datadoghq.com\nHaitao Li                               lihaitao@gmail.com\nHaiyue Wang                             haiyue.wang@intel.com\nHang Yan                                hang.yan@hotmail.com\nHan Zhou                                hzhou8@ebay.com\nHaoTian Qi                              t117503445@gmail.com\nHao Zhang                               hao.zhang.am.i@gmail.com\nHarsh Modi                              harshmodi@google.com\nharsimran pabla                         hpabla@isovalent.com\nHart Hoover                             hart.hoover@gmail.com\nHector Monsalve                         hmonsalv@gmail.com\nHeiko Rothe                             me@heikorothe.com\nHemanth Malla                           hemanth.malla@datadoghq.com\nHemslo Wang                             hemslo.wang@gmail.com\nHongbo Miao                             3375461+hongbo-miao@users.noreply.github.com\nHong Chen                               hong.chen.7219@gmail.com\nHrittik                                 hrittikcom@gmail.com\nHuagong Wang                            wanghuagong@kylinos.cn\nhuangxuesen                             huangxuesen@kuaishou.com\nHui Kong                                hui.kong@qunar.com\nHunter Gregory                          42728408+huntergregory@users.noreply.github.com\nHunter Massey                           hmassey@tradestation.com\nHusni Alhamdani                         dhanielluis@gmail.com\nHuweicai                                i@huweicai.com\nhxysayhi                                51870525+hxysayhi@users.noreply.github.com\nIan Vernon                              ian@cilium.io\nIfeanyi Ubah                            ify1992@yahoo.com\nIgor Klemenski                          igor.klemenski@microsoft.com\nii2day                                  ii2day.zoro@gmail.com\nIiqbal2000                              iqbalhafizh2000@gmail.com\nIlia Chernov                            cherno8.ilya@gmail.com\nIlya Dmitrichenko                       errordeveloper@gmail.com\nIlya Shaisultanov                       ilya.shaisultanov@gmail.com\nIoannis Androulidakis                   androulidakis.ioannis@gmail.com\nIsala Piyarisi                          mail@isala.me\nishuar                                  ishansharma887@gmail.com\nIvan Makarychev                         i.makarychev@tinkoff.ru\nIvar Lazzaro                            ivarlazzaro@gmail.com\nJabJ                                    sajjadjafaribojd@gmail.com\nJack-R-lantern                          tjdfkr2421@gmail.com\nJacob Henner                            henner@arcesium.com\nJacopo Nardiello                        jnardiello@users.noreply.github.com\nJaff Cheng                              jaff.cheng.sh@gmail.com\nJaime CaamaÃ±o Ruiz                      jcaamano@suse.com\nJames Bodkin                            james.bodkin@amphora.net\nJames Brookes                           jbrookes@confluent.io\nJames Harr                              james.harr@gmail.com\nJames Laverack                          james@isovalent.com\nJames McShane                           james.mcshane@superorbital.io\nJames Strong                            strong.james.e@gmail.com\nJan-Erik Rediger                        janerik@fnordig.de\nJan Jansen                              jan.jansen@gdata.de\nJan Mraz                                strudelpi@pm.me\nJan Unger                               jan-emanuel.unger@gmx.de\njanvi01                                 janvibajo1@gmail.com\nJared Ledvina                           jared.ledvina@datadoghq.com\nJarno Rajahalme                         jarno@isovalent.com\nJason Aliyetti                          jaliyetti@gmail.com\nJavier Vela                             fjvela@gmail.com\nJayesh Kumar                            57744184+k8s-dev@users.noreply.github.com\nJean-Benoit Paux                        9682558+jbpaux@users.noreply.github.com\nJean Raby                               jean@raby.sh\nJed Salazar                             jedsalazar@gmail.com\nJef Spaleta                             jspaleta@gmail.com\nJerry J. Muzsik                         jerrymuzsik@icloud.com\nJesse Haka                              haka.jesse@gmail.com\nJess Frazelle                           acidburn@microsoft.com\nJiang Wang                              jiang.wang@bytedance.com\nJianlin Lv                              Jianlin.Lv@arm.com\nJian Zeng                               anonymousknight96@gmail.com\nJieJhih Jhang                           jiejhihjhang@gmail.com\njignyasamishra                          iamjignyasa@gmail.com\nJim Angel                               jimangel@google.com.com\nJimmy Song                              rootsongjc@gmail.com\nJim Ntosas                              ntosas@gmail.com\nJingyuan Liang                          jingyuanliang@google.com\njinjiadu                                jinjiadu@aliyun.com\nJinLin Fu                               withlin@apache.org\nJiong Wang                              jiong.wang@netronome.com\njiuker                                  2818723467@qq.com\nJoao Ubaldo                             me@joaoubaldo.com\nJoao Victorino                          joao@accuknox.com\nJoe Farrell                             joe2farrell@gmail.com\nJoe Stevens                             joe@ascend.io\nJoe Stringer                            joe@cilium.io\nJoe Talerico                            rook@isovalent.com\nJoey Espinosa                           jlouis.espinosa@gmail.com\nJohannes Liebermann                     johanan.liebermann@gmail.com\nJohn Fastabend                          john.fastabend@gmail.com\nJohn Gardiner Myers                     jgmyers@proofpoint.com\nJohn Howard                             howardjohn@google.com\nJohn Karoyannis                         karoyannis@yahoo.com\njohn-r-swyftx                           john.roche@swyftx.com.au\nJohn Watson                             johnw@planetscale.com\nJohn Zheng                              johnzhengaz@gmail.com\nJomen Xiao                              jomenxiao@gmail.com\nJonas BadstÃ¼bner                        jonas@jb.software\nJonas KrÃ¼ger Svensson                   jonas.svensson@intility.no\nJonathan Davies                         jpds@protonmail.com\nJonathan Grahl                          jonathan@keyholders.io\nJonathan Siegel                         248302+usiegj00@users.noreply.github.com\nJones Shi                               shilei@hotstone.com.cn\nJonny                                   jonny@linkpool.io\nJooho Lee                               jhlee@si-analytics.ai\nJordan Rife                             jrife@google.com\nJorik Jonker                            jorik.jonker@eu.equinix.com\nJoseph-Irving                           joseph.irving500@gmail.com\nJoseph Ligier                           joseph.ligier@accenture.com\nJoseph Sheng                            jiajun.sheng@microfocus.com\nJoseph Stevens                          thejosephstevens@gmail.com\nJosh Soref                              2119212+jsoref@users.noreply.github.com\njoshua                                  54235339+sujoshua@users.noreply.github.com\nJoshua Roppo                            joshroppo@gmail.com\njshr-w                                  shjayaraman@microsoft.com\nJuan Jimenez-Anca                       cortopy@users.noreply.github.com\nJuha TiensyrjÃ¤                          juha.tiensyrja@ouraring.com\nJulian Wiedmann                         jwi@isovalent.com\nJulien Balestra                         julien.balestra@datadoghq.com\nJulien D                                barajus@users.noreply.github.com\nJulien Kassar                           github@kassisol.com\nJulius Hinze                            jhinze@cisco.com\nJun Chen                                answer1991.chen@gmail.com\nJunli Ou                                oujunli306@gmail.com\nJussi Maki                              jussi@isovalent.com\nkachi-bits                              76791974+kachi-bits@users.noreply.github.com\nKaczyniec                               kaczynska@google.com\nkahirokunn                              okinakahiro@gmail.com\nKaito Ii                                kaitoii1111@gmail.com\nKaloyan Yordanov                        Kaloyan.Yordanov@starlizard.com\nKamil Lach                              kamil.lach.rs@gmail.com\nKarim Naufal                            rimkashox@gmail.com\nKarl Heins                              karlheins@northwesternmutual.com\nKarsten Nielsen                         karsten.nielsen@ingka.ikea.com\nKatarzyna Borkmann                      kasia@iogearbox.net\nKatarzyna Lach                          katarzynalach@google.com\nKatie Struthers                         99215338+katiestruthers@users.noreply.github.com\nKazuki Suda                             kazuki.suda@gmail.com\nKeisuke Kondo                           k.gryphus@gmail.com\nKenshin Chen                            smwyzi@qq.com\nkerthcet                                kerthcet@gmail.com\nKevin Burke                             kevin@burke.dev\nKevin Holditch                          82885135+kevholditch-f3@users.noreply.github.com\nKevin Reeuwijk                          kevin.reeuwijk@spectrocloud.com\nKiran Bondalapati                       kiran@bondalapati.com\nKir Kolyshkin                           kolyshkin@gmail.com\nKoichiro Den                            den@klaipeden.com\nKonstantin Aksenov                      konstantin.aksenov@flant.com\nKornilios Kourtis                       kornilios@isovalent.com\nkwakubiney                              kebiney@hotmail.com\nLaurent Bernaille                       laurent.bernaille@datadoghq.com\nLawrence Gadban                         lawrence.gadban@solo.io\nldelossa                                louis.delos@gmail.com\nLehner Florian                          dev@der-flo.net\nLeiw                                    steven.l.wang@linux.intel.com\nLeonard Cohnen                          lc@edgeless.systems\nleonliao                                xiaobo.liao@gmail.com\nLiam Parker                             liamchat500@gmail.com\nLiang Zhou                              zhoul110@chinatelecom.cn\nLi Chengyuan                            chengyuanli@hotmail.com\nLi Chun                                 lichun823@gmail.com\nLiHui                                   andrewli@yunify.com\nLin Dong                                lindongld@google.com\nLin Sun                                 lin.sun@solo.io\nLior Lieberman                          liorlieberman@google.com\nLior Rozen                              liorr@tailorbrands.com\nLiu Qun                                 qunliu@zyhx-group.com\nliuxu                                   liuxu623@gmail.com\nLivingstone S E                         livingstone.s.e@gmail.com\nLi Yiheng                               lyhutopi@gmail.com\nLiyi Huang                              pdshly@gmail.com\nLiz Rice                                liz@lizrice.com\nlog1cb0mb                               nabeelnrana@gmail.com\nLoÃ¯c Blot                               nerzhul@users.noreply.github.com\nLongHui Li                              longhui.li@woqutech.com\nloomkoom                                29258685+loomkoom@users.noreply.github.com\nLorenz Bauer                            lmb@isovalent.com\nLorenzo FundarÃ³                         lorenzofundaro@gmail.com\nLouis DeLosSantos                       louis.delos@isovalent.com\nlou-lan                                 loulan@loulan.me\nLucas Fernando Cardoso Nunes            lucasfc.nunes@gmail.com\nLucas Leblow                            lucasleblow@mailbox.org\nLucas Rattz                             lucas.rattz@syself.com\nlucming                                 2876757716@qq.com\nLudovic Ortega                          ludovic.ortega@adminafk.fr\nLukas Stehlik                           stehlik.lukas@gmail.com\nLuke Livingstone                        luke.livingstone@imaginecurve.com\nMaartje Eyskens                         maartje.eyskens@isovalent.com\nMaciej Fijalkowski                      maciej.fijalkowski@intel.com\nMaciej Kwiek                            maciej@isovalent.com\nMaciej Skrocki                          maciejskrocki@google.com\nMadhu Challa                            madhu@cilium.io\nMadhusudan.C.S                          madhusudancs@gmail.com\nMahadev Panchal                         mahadev.panchal@benisontech.com\nMaiReo                                  sawako.saki@gmail.com\nMais                                    mai.saleh@siemens.com\nMaksym Lushpenko                        iviakciivi@gmail.com\nManali Bhutiyani                        manali@covalent.io\nMandar U Jog                            mjog@google.com\nManuel Buil                             mbuil@suse.com\nManuel RÃ¼ger                            manuel@rueg.eu\nManuel StÃ¶Ãel                           manuel.stoessel@t-systems.com\nMarc Barry                              4965634+marc-barry@users.noreply.github.com\nMarcelo Moreira de Mello                tchello.mello@gmail.com\nMarcel ZiÄba                            marcel.zieba@isovalent.com\nMarcin Skarbek                          git@skarbek.name\nMarcin Swiderski                        forgems@gmail.com\nMarco Aurelio Caldas Miranda            17923899+macmiranda@users.noreply.github.com\nMarco Hofstetter                        marco.hofstetter@isovalent.com\nMarco Iorio                             marco.iorio@isovalent.com\nMarco Kilchhofer                        mkilchhofer@users.noreply.github.com\nMarc 'risson' Schmitt                   marc.schmitt@risson.space\nMarc Stulz                              m@footek.ch\nMarc SuÃ±Ã©                               marc.sune@isovalent.com\nMarek Chodor                            mchodor@google.com\nMarga Manterola                         marga@isovalent.com\nMarino Wijay                            45947861+distributethe6ix@users.noreply.github.com\nMario Constanti                         mario@constanti.de\nMarius Gerling                          marius.gerling@uniberg.com\nMark deVilliers                         markdevilliers@gmail.com\nMark Pashmfouroush                      mark@isovalent.com\nMark St John                            markstjohn@google.com\nMarkus Blaschke                         mblaschke82@gmail.com\nMarkus Nilsson                          markus.nilsson@yubico.com\nMartin Charles                          martincharles07@gmail.com\nMartin Koppehel                         martin.koppehel@st.ovgu.de\nMartin Odstrcilik                       martin.odstrcilik@gmail.com\nMartynas Pumputis                       m@lambda.lt\nMarvin Gaube                            dev@marvingaube.de\nMarwin Baumann                          56264798+marwinbaumannsbp@users.noreply.github.com\nMatej Gera                              matejgera@gmail.com\nMathias Herzog                          mathu@gmx.ch\nMathieu Parent                          mathieu.parent@insee.fr\nMathieu Tortuyaux                       mtortuyaux@microsoft.com\nMathis Joffre                           51022808+Joffref@users.noreply.github.com\nMatt Anderson                           matanderson@equinix.com\nMatthew Fenwick                         mfenwick100@gmail.com\nMatthew Gumport                         me@gum.pt\nMatthew Hembree                         47449406+matthewhembree@users.noreply.github.com\nMatthias Baur                           m.baur@syseleven.de\nMatthieu Antoine                        matthieu.antoine@jumo.world\nMatthieu MOREL                          matthieu.morel35@gmail.com\nMatt Layher                             mdlayher@gmail.com\nMatt Oswalt                             matt@oswalt.dev\nMatyÃ¡Å¡ Kroupa                           kroupa.matyas@gmail.com\nMauricio VÃ¡squez                        mauricio@kinvolk.io\nMaxime Brunet                           max@brnt.mx\nMaxime Visonneau                        maxime.visonneau@gmail.com\nMaximilian Bischoff                     maximilian.bischoff@inovex.de\nMaximilian Mack                         max@mack.io\nMaxim Krasilnikov                       m.krasilnikov@space307.com\nMaxim Mikityanskiy                      maxim@isovalent.com\nMax KÃ¶rbÃ¤cher                           16919345+mkorbi@users.noreply.github.com\nMeherRushi                              sudharushi0@gmail.com\nMelissa Peiffer                         mbp83@nau.edu\nMengxin Liu                             mengxin@alauda.io\nMichael Aspinwall                       maspinwall@google.com\nMichael Fischer                         fiscmi@amazon.com\nMichael Fornaro                         20387402+xUnholy@users.noreply.github.com\nMichael Francis                         michael@melenion.com\nMichael Kashin                          mmkashin@gmail.com\nMichael Mykhaylov                       32168861+mikemykhaylov@users.noreply.github.com\nMichael Petrov                          michael@openai.com\nMichael Ryan Dempsey                    bluestealth@bluestealth.pw\nmichaelsaah                             michael.saah@segment.com\nMichael Saah                            msaah@twilio.com\nMichael Schubert                        michael@kinvolk.io\nMichael Vorburger                       vorburger@redhat.com\nMichal Rostecki                         vadorovsky@gmail.com\nMichal Siwinski                         siwy@google.com\nMichi Mutsuzaki                         michi@isovalent.com\nMikael Johansson                        mik.json@gmail.com\nMike Fedosin                            mfedosin@gmail.com\nMikeLing                                sabergeass@gmail.com\nMike Mwanje                             mwanjemike767@gmail.com\nMisha Bragin                            bangvalo@gmail.com\nMitch Hulscher                          mitch.hulscher@lib.io\nMoh Ahmed                               moh.ahmed@cengn.ca\nMohammad Yosefpor                       47300215+m-yosefpor@users.noreply.github.com\nMohit Marathe                           mohitmarathe23@gmail.com\nMoritz Eckert                           m1gh7ym0@gmail.com\nMoritz Johner                           beller.moritz@googlemail.com\nMoshe Immerman                          moshe.immerman@vitalitygroup.com\nmrproliu                                741550557@qq.com\nmvtab                                   mvtabilitas@protonmail.com\nNatalia Reka Ivanko                     natalia@isovalent.com\nNate Sweet                              nathanjsweet@pm.me\nNate Taylor                             ntaylor1781@gmail.com\nNathan Bird                             njbird@infiniteenergy.com\nnathannaveen                            42319948+nathannaveen@users.noreply.github.com\nNathan Perkins                          nperkins487@gmail.com\nNathan Taylor                           ntaylor1781@gmail.com\nNavin Kukreja                           navin.kukreja@isovalent.com\nNebula                                  40148908+nebula-it@users.noreply.github.com\nnecatican                               necaticanyildirim@gmail.com\nNeela Jacques                           neela@isovalent.com\nNeil Seward                             neil.seward@elasticpath.com\nNeil Wilson                             neil@aldur.co.uk\nNeutrollized                            glen.yu@gmail.com\nNicholas Lane                           nicklaneovi@gmail.com\nNick M                                  4718+rkage@users.noreply.github.com\nNick Young                              nick@isovalent.com\nNiclas Mietz                            solidnerd@users.noreply.github.com\nNico Berlee                             nico.berlee@on2it.net\nNicolas Busseneau                       nicolas@isovalent.com\nNicolÃ² Ciraci                           ciraci.nicolo@gmail.com\nNico Vibert                             nvibert@cisco.com\nNikhil Jha                              nikhiljha@users.noreply.github.com\nNikhil Sharma                           nikhilsharma230303@gmail.com\nNikolay Aleksandrov                     nikolay@isovalent.com\nNikolay Nikolaev                        nicknickolaev@gmail.com\nNimisha Mehta                           nimishamehta5@gmail.com\nNirmoy Das                              ndas@suse.de\nNishant Burte                           nburte@google.com\nNitish Malhotra                         nitishm@microsoft.com\nNitish Tiwari                           nitish@parseable.io\nNoel Georgi                             git@frezbo.dev\nnrnrk                                   noriki6t@gmail.com\nnuwa                                    nuwa@yannis.codes\nnxyt                                    lolnoxy@gmail.com\nOdin Ugedal                             ougedal@palantir.com\nOilbeater                               mengxin@alauda.io\nOksana Baranova                         oksana.baranova@intel.com\nOlaf Klischat                           olaf.klischat@gmail.com\nOle Markus With                         o.with@sportradar.com\nOlga Mirensky                           5200844+olga-mir@users.noreply.github.com\nOliver Hofmann                          91730056+olinux-dev@users.noreply.github.com\nOliver Ni                               oliver.ni@gmail.com\nOliver Wang                             a0924100192@gmail.com\nOmar Aloraini                           ooraini.dev@gmail.com\nOndrej Blazek                           ondrej.blazek@firma.seznam.cz\nOndrej Sika                             ondrej@ondrejsika.com\noneumyvakin                             oneumyvaking@mail.ru\nOshan Galwaduge                         oshan304@gmail.com\nOsthues                                 osthues.matthias@gmail.com\nOvidiu Tirla                            otirla@google.com\nPablo Ruiz                              pablo.ruiz@gmail.com\nPaco Xu                                 paco.xu@daocloud.io\nParth Patel                             parth.psu@gmail.com\nPatrice Chalin                          chalin@cncf.io\nPatrice Peterson                        patrice.peterson@mailbox.org\nPatrick Mahoney                         pmahoney@greenkeytech.com\nPatrick OâBrien                         patrick.obrien@thetradedesk.com\nPatrick Pichler                         git@patrickpichler.dev\nPatrick Reich                           patrick@neodyme.io\nPat Riehecky                            riehecky@fnal.gov\nPatrik Cyvoct                           patrik@ptrk.io\nPaul Arah                               paularah.self@gmail.com\nPaul Bailey                             spacepants@users.noreply.github.com\nPaul Chaignon                           paul.chaignon@gmail.com\nPaulo Castello da Costa                 pcastello@google.com\nPaulo Gomes                             pjbgf@linux.com\nPavel Pavlov                            40396270+PavelPavlov46@users.noreply.github.com\nPavel Tishkov                           pavel.tishkov@flant.com\nPaweÅ PraÅ¼ak                            pawelprazak@users.noreply.github.com\nPedro Ignacio                           pedroig100.pi@gmail.com\nPeiqi Shi                               uestc.shi@gmail.com\nPelle van Gils                          pelle@vangils.dev\npengbinbin1                             pengbiny@163.com\nPengfei Song                            pengfei.song@daocloud.io\nPeter Jausovec                          peter.jausovec@solo.io\nPeter Matulis                           pmatulis@gmail.com\nPeter Slovak                            slovak.peto@gmail.com\nPetr Baloun                             petr.baloun@firma.seznam.cz\nPhilippe LafoucriÃ¨re                    philippe.lafoucriere@gmail.com\nPhilipp Gniewosz                        philipp.gniewosz@daimlertruck.com\nPhilip Schmid                           phisch@cisco.com\nPierre-Yves Aillet                      pyaillet@gmail.com\nPieter van der Giessen                  pieter@pionative.com\nPooja Trivedi                           poojatrivedi@gmail.com\nPrabhakhar Kaliyamurthy (PK)            prabhakhar@gmail.com\nPranavi Roy                             pranvyr@gmail.com\nPrashanth.B                             beeps@google.com\nPratyay Banerjee                        putubanerjee23@gmail.com\nPratyush Singhal                        psinghal20@gmail.com\nPraveen Krishna                         pkrishn@google.com\nPriya Sharma                            Priya.Sharma6693@gmail.com\nQasim Sarfraz                           qasim.sarfraz@esailors.de\nQifeng Guo                              qifeng.guo@daocloud.io\nQingchuan Hao                           qinhao@microsoft.com\nQuang Nguyen                            nguyenquang@microsoft.com\nQuan Wei                                quanwei.153@bytedance.com\nQuentin Monnet                          qmo@qmon.net\nRaam                                    ram29@bskyb.com\nRachid Zarouali                         rachid.zarouali@sevensphere.io\nRafael da Fonseca                       rafael.fonseca@wildlifestudios.com\nRaffael Sahli                           raffael.sahli@doodle.com\nRaghu Gyambavantha                      raghug@bld-ml-loan4.olympus.f5net.com\nRahul Jadhav                            nyrahul@gmail.com\nRahul Joshi                             rkjoshi@google.com\nrahulk789                               rahul.u.india@gmail.com\nRajat Jindal                            rajatjindal83@gmail.com\nRalph Bankston                          ralph@isovalent.com\nRamses Rodriguez Martinez               ramses@nextdigital.es\nRaphael Campos                          raphael@accuknox.com\nRaphaÃ«l Pinson                          raphael@isovalent.com\nRastislav Szabo                         rastislav.szabo@isovalent.com\nRauan Mayemir                           rauan@mayemir.io\nrawmind0                                rawmind@gmail.com\nRay Bejjani                             ray.bejjani@gmail.com\nRaymond de Jong                         raymond.dejong@isovalent.com\nReilly Brogan                           reilly@reillybrogan.com\nRei Shimizu                             Shikugawa@gmail.com\nRemi Gelinas                            mail@remigelin.as\nRÃ©my LÃ©one                              rleone@scaleway.com\nRenat Tuktarov                          yandzeek@gmail.com\nRenaud Gaubert                          renaud@openai.com\nRene Luria                              rene@luria.ch\nReneÌ Veenhuis                           re.veenhuis@gmail.com\nRene Zbinden                            rene.zbinden@postfinance.ch\nrenyunkang                              rykren1998@gmail.com\nRichard Lavoie                          richard.lavoie@logmein.com\nRichard Tweed                           RichardoC@users.noreply.github.com\nRicky Ho                                horicky78@gmail.com\nRio Kierkels                            riokierkels@gmail.com\nRobin Elfrink                           robin@15augustus.nl\nRobin GÃ¶gge                             r.goegge@isovalent.com\nRobin Hahling                           robin.hahling@gw-computing.net\nRob Scott                               robertjscott@google.com\nRocky Chen                              40374064+rockc2020@users.noreply.github.com\nRodrigo Chacon                          rochacon@gmail.com\nRohan George                            83759161+rohan-changejar@users.noreply.github.com\nRomain Lenglet                          rlenglet@google.com\nRoman Ptitcyn                           romanspb@yahoo.com\nRomuald Zdebskiy                        zdebskiy@hotmail.com\nRonald van Zantvoort                    the.loeki@gmail.com\nRoss Guarino                            rssguar@gmail.com\nroykharman                              roykharman@gmail.com\nRudrakh Panigrahi                       rudrakh97@gmail.com\nRui Chen                                rui@chenrui.dev\nRui Gu                                  rui@covalent.io\nRushikesh Butley                        rushikeshbutley@gmail.com\nRussell Bryant                          russell@russellbryant.net\nrusttech                                gopher@before.tech\nRyan Drew                               ryan.drew@isovalent.com\nRyan McNamara                           rmcnamara@palantir.com\nryebridge                               88094554+ryebridge@users.noreply.github.com\nSachin Maurya                           sachin.maurya7666@gmail.com\nSadik Kuzu                              sadikkuzu@hotmail.com\nSahid Orentino Ferdjaoui                sahid.ferdjaoui@industrialdiscipline.com\nsaiaunghlyanhtet                        saiaunghlyanhtet2003@gmail.com\nSaikrishna Edupuganti                   saikrishna.edupuganti@intel.com\nSaim Safdar                             59512053+Saim-Safdar@users.noreply.github.com\nSaiyam Pathak                           saiyam@civo.com\nSalvatore Mazzarino                     salvatore@accuknox.com\nSam Day                                 me@samcday.com\nSami Yessou                             fnzv@users.noreply.github.com\nSamuel Lang                             gh@lang-sam.de\nSamuel Torres                           samuelpirestorres@gmail.com\nSander Timmerman                        stimmerman@schubergphilis.com\nSandipan Panda                          samparksandipan@gmail.com\nSarah Corleissen                        sarah.corleissen@isovalent.com\nSarvesh Rangnekar                       sarveshr@google.com\nSascha Grunert                          sgrunert@redhat.com\nSatish Matti                            smatti@google.com\nScott Albertson                         ascottalbertson@gmail.com\nSean Winn                               sean@isovalent.com\nSebastian Gaiser                        sebastiangaiser@users.noreply.github.com\nSebastian Nickel                        nick@nine.ch\nSebastian Rojo                          arpagon@gmail.com\nSebastian Wicki                         sebastian@isovalent.com\nSebastien Lafond                        sebastien.lafond@cdiscount.com\nSebastien Thomas                        prune@lecentre.net\nSergey Generalov                        sergey@isovalent.com\nSergey Monakhov                         monakhov@puzl.ee\nSergey Shevchenko                       sergeyshevchdevelop@gmail.com\nSergio Ballesteros                      snaker@locolandia.net\nsh2                                     shawnhxh@outlook.com\nShane Utt                               shaneutt@linux.com\nshankeerthan-kasilingam                 shankeerthan1995@gmail.com\nShantanu Deshpande                      shantanud106@gmail.com\nShardul Srivastava                      shardul.srivastava007@gmail.com\nShunpoco                                tkngsnsk313320@gmail.com\nSigurd Spieckermann                     sigurd.spieckermann@gmail.com\nSimone Magnani                          simone.magnani@isovalent.com\nSimone Sciarrati                        s.sciarrati@gmail.com\nSimon Felding                           45149055+simonfelding@users.noreply.github.com\nSimon Gerber                            simon.gerber@vshn.ch\nSimon Lackerbauer                       mail@ciil.io\nSimon Pasquier                          spasquier@mirantis.com\nSjouke de Vries                         info@sdvservices.nl\nSkalaNetworks                           contact@skala.network\nsknop                                   118932232+sknop-cgn@users.noreply.github.com\nSmaine Kahlouch                         smainklh@gmail.com\nsoggiest                                nicholas@isovalent.com\nSong                                    1120344670@qq.com\nspacewander                             spacewanderlzx@gmail.com\nSridhar K N Rao                         sridharkn@u.nus.edu\nssttehrani                              ssttehrani@gmail.com\nStacy Kim                               stacy.kim@ucla.edu\nStefan Zwanenburg                       stefan@zwanenburg.info\nStephen Martin                          lockwood@opperline.com\nSteve Gargan                            sgargan@qualtrics.com\nSteven Armstrong                        steven.armstrong@id.ethz.ch\nSteven Ceuppens                         steven.ceuppens@icloud.com\nSteven Dake                             steven.dake@gmail.com\nSteven Johnson                          sjdot@protonmail.com\nSteven Kreitzer                         skre@skre.me\nSteven Normore                          snormore@digitalocean.com\nSteven Shuang                           stevenshuang521@gmail.com\nStevo SlaviÄ                            sslavic@gmail.com\nStijn Smits                             stijn@stijn98s.nl\nStrukov Anton                           anstrukov@luxoft.com\nStuart Preston                          mail@stuartpreston.net\nSu Fei                                  sofat1989@126.com\nSugang Li                               sugangli@google.com\nSven Haardiek                           sven.haardiek@uni-muenster.de\nSwaminathan Vasudevan                   svasudevan@suse.com\nTaeung Song                             treeze.taeung@gmail.com\nTaizeng Wu                              wutaizeng@gmail.com\nTakayoshi Nishida                       takayoshi.nishida@gmail.com\nTamilmani                               tamanoha@microsoft.com\nTam Mach                                tam.mach@cilium.io\nTasdik Rahman                           prodicus@outlook.com\nTaylor                                  tskinn12@gmail.com\nTe-Yu Chang                             dale.teyuchang@gmail.com\nThales Paiva                            thales@accuknox.com\nTheAifam5                               theaifam5@gmail.com\nThearas                                 thearas850@gmail.com\nThiago Navarro                          navarro@accuknox.com\nThi Van Le                              vannnyle@gmail.com\nThomas Bachman                          tbachman@yahoo.com\nThomas Balthazar                        thomas@balthazar.info\nthomas.chen                             thomas.chen@trustasia.com\nThomas Gosteli                          thomas.gosteli@protonmail.com\nThomas Graf                             thomas@cilium.io\nThorben von Hacht                       tvonhacht@apple.com\nThorsten Pfister                        thorsten.pfister@form3.tech\ntigerK                                  yanru.lv@daocloud.io\nTilusch                                 til.heini@swisscom.com\nTim Horner                              timothy.horner@isovalent.com\nTimo Beckers                            timo@isovalent.com\nTimo Reimann                            ttr314@googlemail.com\nTimur Solodovnikov                      timur.solodovnikov@clickhouse.com\ntkna                                    naoki-take@cybozu.co.jp\nTobias Brunner                          tobias.brunner@vshn.ch\nTobias Klauser                          tobias@cilium.io\nTobias Kohlbau                          tobias@kohlbau.de\nTobias Mose                             mosetobias@gmail.com\nTomas Leypold                           tomas@leypold.cz\nTom Hadlaw                              tom.hadlaw@isovalent.com\nTommo Cowling                           952241+tlcowling@users.noreply.github.com\nTomoki Sugiura                          tomoki-sugiura@cybozu.co.jp\nTomoya Fujita                           Tomoya.Fujita@sony.com\nTom Payne                               tom@isovalent.com\nToni Tauro                              toni.tauro@adfinis.com\nTony Lambiris                           tony@criticalstack.com\nTony Lu                                 tonylu@linux.alibaba.com\nTony Norlin                             tony.norlin@localdomain.se\nTorben Tretau                           torben@tretau.net\nTore S. Loenoey                         tore.lonoy@gmail.com\nToroNZ                                  tomas-github@maggio.nz\ntoVersus                                toversus2357@gmail.com\nTravis Glenn Hansen                     travisghansen@yahoo.com\nTrevor Roberts Jr                       Trevor.Roberts.Jr@gmail.com\nTrevor Tao                              trevor.tao@arm.com\nTyler Auerbeck                          tylerauerbeck@users.noreply.github.com\nu5surf                                  u5.horie@gmail.com\nUbuntu                                  ubuntu@ip-172-31-10-3.eu-west-3.compute.internal\nUmesh Keerthy B S                       umesh.freelance@gmail.com\nUmesh Keerthy                           umesh.freelance@gmail.com\nusiegl00                                50933431+usiegl00@users.noreply.github.com\nVadim Ponomarev                         velizarx@gmail.com\nvakr                                    vakr@microsoft.com\nValas Valancius                         valas@google.com\nVance Li                                vanceli@tencent.com\nVanilla                                 osu_Vanilla@126.com\nVasu Dasari                             vasudasari@google.com\nVigneshwaren Sunder                     vickymailed@gmail.com\nViktor Kurchenko                        viktor.kurchenko@isovalent.com\nViktor Kuzmin                           kvaster@gmail.com\nViktor Oreshkin                         imselfish@stek29.rocks\nVille Ojamo                             bluikko@users.noreply.github.com\nVincent Li                              vincent.mc.li@gmail.com\nVipul Singh                             singhvipul@microsoft.com\nVishal Choudhary                        sendtovishalchoudhary@gmail.com\nVishnu Soman K                          vishnusomank05@gmail.com\nVlad Artamonov                          742047+vladdy@users.noreply.github.com\nVlad Gorodetsky                         v@gor.io\nVladimir Nachev                         vladimir.penkov.nachev@gmail.com\nVladimir Pouzanov                       farcaller@gmail.com\nVlad Ungureanu                          vladu@palantir.com\nWang Dong                               xdragon007@gmail.com\nWang Li                                 wangli09@kuaishou.com\nWang Zhen                               lazybetrayer@gmail.com\nWanlin Du                               wanlindu@google.com\nWayne Haber                             whaber@gitlab.com\nWazir Ahmed                             wazir@accuknox.com\nWeilong Cui                             cuiwl@google.com\nWei Yang                                wei.yang@daocloud.io\nWeizhou Lan                             weizhou.lan@daocloud.io\nWenhu Wang                              wang15691700816@gmail.com\nwenlxie                                 xwlpt@126.com\nWenxian Li                              wofanli@gmail.com\nWill Daly                               widaly@microsoft.com\nWill Deuschle                           wdeuschle@palantir.com\nWilli Eggeling                          willi.eggeling@cloutomate.de\nWill Stewart                            will@northflank.com\nWojtek Czekalski                        me@wczekalski.com\nWongyu Lee                              kyu21@outlook.com\nXiang Liu                               lx1036@126.com\nXiaoqing                                xiaoqingnb@gmail.com\nXiaoyang Zhu                            zhuxiaoyang1996@gmail.com\nXiaozhiD-web                            chuanzhi.dai@daocloud.io\nXin Li                                  xin.li@daocloud.io\nxinwenqiang                             xinwenqiang@bytedance.com\nXinyuan Zhang                           zhangxinyuan@google.com\nyanggang                                gang.yang@daocloud.io\nyanhongchang                            yanhongchang@100tal.com\nYann ILAS                               yann.ilas@gmail.com\nYash Shetty                             yashshetty@google.com\nYe Sijun                                junnplus@gmail.com\nYiannis Yiakoumis                       yiannis@selfienetworks.com\nYingnan Zhang                           342144303@qq.com\nyogesh1801                              yogeshsingla481@gmail.com\nYongkun Gui                             ygui@google.com\nYosh de Vos                             yosh@elzorro.nl\nyouhonglian                             honglian.you@daocloud.io\nYoussef Azrak                           yazrak.tech@gmail.com\nYoyo Wu                                 yoyo19980720@126.com\nYuan Liu                                liuyuan@google.com\nYugo Kobayashi                          kobdotsh@gmail.com\nyulng                                   wei.yang@daocloud.io\nYurii Dzobak                            yurii.dzobak@lotusflare.com\nYurii Komar                             Subreptivus@gmail.com\nYusho Yamaguchi                         yusho.yamaguchi@sony.com\nYusuke Suzuki                           yusuke.suzuki@isovalent.com\nYutaro Hayakawa                         yutaro.hayakawa@isovalent.com\nYves Blusseau                           yves.blusseau@acoss.fr\nyylt                                    yang8518296@163.com\nZang Li                                 zangli@google.com\nzhanghe9702                             zhanghe9702@163.com\nZhang Qiang                             qiangzhang@qiyi.com\nzhaojizhuang                            571130360@qq.com\nzhikuodu                                duzhk@qq.com\nZhiyuan Hou                             zhiyuan2048@linux.alibaba.com\nzhouhaibing089                          zhouhaibing089@gmail.com\nZhu Yan                                 hackzhuyan@gmail.com\nZijian Zhang                            zz2795@columbia.edu\nZisis Lianas                            zl@consol.de\nzufardhiyaulhaq                         zufardhiyaulhaq@gmail.com\nå°¤çè¡¡ (Li-Heng Yu)                     007seadog@gmail.com\n\nThe following additional people are mentioned in commit logs as having provided\nhelpful bug reports, suggestions or have otherwise provided value to the\nproject:\n\nBrenden Blanco                          bblanco@plumgrid.com\nJakub Kicinski                          jakub.kicinski@netronome.com\nSalvatore Orlando                       salv.orlando@gmail.com\nTomÃ¡s Senart                            tsenart@gmail.com\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 32.2626953125,
          "content": "# Code owners are used by the Cilium community to consolidate common knowledge\n# into teams that can provide consistent and actionable feedback to\n# contributors. This section will describe groups of teams and suggestions\n# about the focus areas for review.\n#\n# The primary motivation for these teams is to provide structure around review\n# processes to ensure that contributors know how to reach out to community\n# members to conduct discussions, ensure contributions meet the expectations of\n# the community, and align on the direction of proposed changes. Furthermore,\n# while these teams are primarily drawn upon to provide review on specific pull\n# requests, they are also encouraged to self-organize around how to make\n# improvements to their areas of the Cilium project over time.\n#\n# Any committer may self-nominate to code owner teams. Reach out to the core\n# team on the #committers channel in Slack to coordinate. Committers do not\n# require expert knowledge in an area in order to join a code owner team,\n# only a willingness to engage in discussions and learn about the area.\n#\n# Project-wide\n# ++++++++++++\n#\n# These code owners may provide feedback for Pull Requests submitted to any\n# repository in the Cilium project:\n#\n# - @cilium/api:\n#   Ensure the backwards-compatibility of Cilium REST and gRPC APIs, excluding\n#   Hubble which is owned by @cilium/sig-hubble-api.\n# - @cilium/build:\n#   Provide feedback on languages and scripting used for build and packaging\n#   system: Make, Shell, Docker.\n# - @cilium/cli:\n#   Provide user experience feedback on changes to Command-Line Interfaces.\n#   These owners are a stand-in for the user community to bring a user\n#   perspective to the review process. Consider how information is presented,\n#   consistency of flags and options.\n# - @cilium/ci-structure:\n#   Provide guidance around the best use of Cilium project continuous\n#   integration and testing infrastructure, including GitHub actions, VM\n#   helpers, testing frameworks, etc.\n# - @cilium/community:\n#   Maintain files that refer to Cilium community users such as USERS.md.\n# - @cilium/contributing:\n#   Encourage practices that ensure an inclusive contributor community. Review\n#   tooling and scripts used by contributors.\n# - @cilium/docs-structure:\n#   Ensure the consistency and layout of documentation. General feedback on the\n#   use of Sphinx, how to communicate content clearly to the community. This\n#   code owner is not expected to validate the technical correctness of\n#   submissions. Correctness is typically handled by another code owner group\n#   which is also assigned to any given piece of documentation.\n# - @cilium/sig-foundations:\n#   Review changes to the core libraries and provide guidance to overall\n#   software architecture.\n# - @cilium/github-sec:\n#   Responsible for maintaining the security of repositories in the Cilium\n#   project by maintaining best practices for workflow usage, for instance\n#   preventing malicious use of GitHub actions.\n# - @cilium/helm:\n#   Provide input on the way that Helm can be used to configure features. These\n#   owners are a stand-in for the user community to bring a user perspective to\n#   the review process. Ensure that Helm changes are defined in manners that\n#   will be forward-compatible for upgrade and follow best practices for\n#   deployment (for example, being GitOps-friendly).\n# - @cilium/sig-hubble-api:\n#   Review Hubble API changes related to gRPC endpoints.\n#   The team ensures that API changes are backward\n#   compatible or that a new API version is created for backward incompatible\n#   changes.\n# - @cilium/metrics:\n#   Provide recommendations about the types, names and labels for metrics to\n#   follow best practices. This includes considering the cardinality impact of\n#   metrics being added or extended.\n# - @cilium/release-managers:\n#   Review files related to releases like AUTHORS and VERSION.\n# - @cilium/security:\n#   Provide feedback on changes that could have security implications for Cilium,\n#   and maintain security-related documentation.\n# - @cilium/vendor:\n#   Review vendor updates for software dependencies to check for any potential\n#   upstream breakages / incompatibilities. Discourage the use of unofficial\n#   forks of upstream libraries if they are actively maintained.\n#\n# Repository Owners\n# +++++++++++++++++\n#\n# The following code owners are responsible for a range of general feedback for\n# contributions to specific repositories:\n#\n# - @cilium/sig-hubble:\n#   Review all Cilium and Hubble code related to observing system events,\n#   exporting those via gRPC protocols outside the node and outside the\n#   cluster. those event channels, for example via TLS.\n# - @cilium/hubble-metrics:\n#   Review code related to Hubble metrics, ensure changes in exposed metrics are\n#   consistent and not breaking without careful consideration.\n# - @cilium/hubble-ui:\n#   Maintain the Hubble UI graphical interface.\n# - @cilium/tetragon:\n#   Review of all Tetragon code, both for Go and C (for eBPF).\n#\n# The teams above are responsible for reviewing the majority of contributions\n# to the corresponding repositories. Additionally, there are \"maintainer\" teams\n# listed below which may not be responsible for overall code review for a\n# repository, but they have administrator access to the repositories and so\n# they can assist with configuring GitHub repository settings, secrets, and\n# related processes. For the full codeowners for individual repositories, see\n# the CODEOWNERS file in the corresponding repository.\n#\n# - @cilium/cilium-cli-maintainers\n# - @cilium/cilium-maintainers\n# - @cilium/cilium-packer-ci-build-maintainers\n# - @cilium/ebpf-lib-maintainers\n# - @cilium/hubble-maintainers\n# - @cilium/image-tools-maintainers\n# - @cilium/metallb-maintainers\n# - @cilium/openshift-terraform-maintainers\n# - @cilium/proxy-maintainers\n# - @cilium/tetragon-maintainers\n#\n# Cloud Integrations\n# ++++++++++++++++++\n#\n# The following codeowner groups provide insight into the integrations with\n# specific cloud providers:\n#\n# - @cilium/alibabacloud\n# - @cilium/aws\n# - @cilium/azure\n#\n# Cilium Internals\n# ++++++++++++++++\n#\n# The following codeowner groups cover more specific knowledge about Cilium\n# Agent internals or the way that particular Cilium features interact with\n# external software and protocols:\n#\n# - @cilium/docker:\n#   Maintain the deprecated docker-plugin.\n# - @cilium/endpoint:\n#   Provide background on how the Cilium Endpoint package fits into the overall\n#   agent architecture, relationship with generation of policy / datapath\n#   constructs, serialization and restore from disk.\n# - @cilium/envoy:\n#   Maintain the L7 proxy integration with Envoy. This includes the\n#   configurations for Envoy via xDS protocols as well as the extensible\n#   proxylib framework for Go-based layer 7 filters.\n# - @cilium/egress-gateway:\n#   Maintain the egress gateway control plane and datapath logic.\n# - @cilium/fqdn:\n#   Maintain the L7 DNS proxy integration.\n# - @cilium/ipcache:\n#   Provide background on how the userspace IPCache structure fits into the\n#   overall agent architecture, ordering constraints with respect to network\n#   policies and encryption. Handle the relationship between Kubernetes state\n#   and datapath state as it pertains to remote peers.\n# - @cilium/ipsec:\n#   Maintain the kernel IPsec configuration and related eBPF logic to ensure\n#   traffic is correctly encrypted.\n# - @cilium/kvstore:\n#   Review Cilium interactions with key-value stores, particularly etcd.\n#   Understand the client libraries used by Cilium for sharing state between\n#   nodes and clusters.\n# - @cilium/loader:\n#   Maintain the tooling that allows eBPF programs to be loaded into the\n#   kernel: LLVM, bpftool, use of cilium/ebpf for loading programs in the\n#   agent, ELF templating, etc.\n# - @cilium/operator:\n#   Review operations that occur once per cluster via the Cilium Operator\n#   component. Take care of the corresponding garbage collection and leader\n#   election logic.\n# - @cilium/proxy:\n#   Review low-level implementations used to redirect L7 traffic to the actual\n#   proxy implementations (FQDN, Envoy, ...).\n# - @cilium/sig-agent:\n#   Provide Cilium (agent) general Go review. Internal architecture, core data\n#   structures and daemon startup.\n# - @cilium/sig-bgp:\n#   Review changes to our BGP integration.\n# - @cilium/sig-clustermesh:\n#   Ensure the reliability of state sharing between clusters to ensure that\n#   each cluster maintains a separate fault domain.\n# - @cilium/sig-datapath:\n#   Provide feedback on all eBPF code changes, use of the kernel APIs for\n#   configuring the networking and socket layers. Coordination of kernel\n#   subsystems such as xfrm (IPsec), iptables / nftables, tc. Maintain the\n#   control plane layers that populate most eBPF maps; account for endianness\n#   and system architecture impacts on the datapath code.\n# - @cilium/sig-encryption\n#   Review control and data plane logic related with encryption (IPSec and\n#   WireGuard).\n# - @cilium/sig-hubble:\n#   Review all Cilium and Hubble code related to observing system events,\n#   exporting those via gRPC protocols outside the node and outside the\n#   cluster. Ensure the security of those event channels, for example via TLS.\n# - @cilium/sig-ipam:\n#   Coordinate the implementation between all of the IP Address Management\n#   modes, provide awareness/insight into IP resource exhaustion and garbage\n#   collection concerns.\n# - @cilium/sig-k8s:\n#   Provide input on all interactions with Kubernetes, both for standard\n#   resources and CRDs. Ensure best practices are followed for the coordination\n#   of clusterwide state in order to minimize memory usage.\n# - @cilium/sig-lb:\n#   Maintain the layers necessary to coordinate all load balancing\n#   configurations within the agent control plane, including Services,\n#   ClusterIP, NodePorts, Maglev, local redirect policies, and\n#   NAT46/NAT64.\n# - @cilium/sig-policy:\n#   Ensure consistency of semantics for all network policy representations.\n#   Responsible for all policy logic from Kubernetes down to eBPF policymap\n#   entries, including all intermediate layers such as the Policy Repository,\n#   SelectorCache, PolicyCache, CachedSelectorPolicy, EndpointPolicy, etc.\n# - @cilium/sig-scalability:\n#   Maintain scalability and performance tests. Provide input on scalability\n#   and performance related changes.\n# - @cilium/sig-servicemesh:\n#   Provide input on the way that Service Mesh constructs such as Gateway API\n#   are converted into lower-level constructs backed by eBPF or Envoy\n#   configurations. Maintain the CRDs necessary for Service Mesh functionality.\n# - @cilium/wireguard:\n#   Maintain the kernel WireGuard configuration and datapath impacts related to\n#   ensuring traffic is encrypted correctly when WireGuard mode is enabled.\n#\n# END_CODEOWNERS_DOCS\n#\n# The following filepaths should be sorted so that more specific paths occur\n# after the less specific paths, otherwise the ownership for the specific paths\n# is not properly picked up in Github.\n/AUTHORS @cilium/release-managers\n/CODE_OF_CONDUCT.md @cilium/contributing\n/CODEOWNERS @cilium/contributing\n/CONTRIBUTING.md @cilium/contributing\n/.authors.aux @cilium/contributing\n/.clomonitor.yml @cilium/contributing\n/.devcontainer @cilium/ci-structure\n/.gitattributes @cilium/contributing\n/.github/ @cilium/contributing\n/.github/ariane-config.yaml @cilium/github-sec @cilium/ci-structure\n/.github/renovate.json5 @cilium/github-sec @cilium/ci-structure\n/.github/actions/ @cilium/github-sec @cilium/ci-structure\n/.github/actions/ipsec/ @cilium/ipsec @cilium/github-sec @cilium/ci-structure\n/.github/actions/kvstore/ @cilium/sig-clustermesh @cilium/kvstore @cilium/github-sec @cilium/ci-structure\n/.github/workflows/ @cilium/github-sec @cilium/ci-structure\n/.github/workflows/auto-approve.yaml @cilium/cilium-maintainers\n/.github/workflows/*cilium-cli*.yaml @cilium/cli @cilium/github-sec @cilium/ci-structure\n/.github/workflows/*clustermesh*.yaml @cilium/sig-clustermesh @cilium/github-sec @cilium/ci-structure\n/.github/workflows/*datapath*.yaml @cilium/sig-datapath @cilium/github-sec @cilium/ci-structure\n/.github/workflows/*gateway-api*.yaml @cilium/sig-servicemesh @cilium/github-sec @cilium/ci-structure\n/.github/workflows/*externalworkloads*.yaml @cilium/sig-clustermesh @cilium/github-sec @cilium/ci-structure\n/.github/workflows/*hubble*.yaml @cilium/sig-hubble @cilium/github-sec @cilium/ci-structure\n/.github/workflows/*ipsec*.yaml @cilium/ipsec @cilium/github-sec @cilium/ci-structure\n/.github/workflows/*ingress*.yaml @cilium/sig-servicemesh @cilium/github-sec @cilium/ci-structure\n/.github/actions/cl2-modules/ @cilium/sig-scalability\n/.github/workflows/*scale*.yaml @cilium/sig-scalability @cilium/github-sec @cilium/ci-structure\n/.github/workflows/*perf*.yaml @cilium/sig-scalability @cilium/github-sec @cilium/ci-structure\n/.github/workflows/tests-ces-migrate.yaml @cilium/sig-scalability @cilium/github-sec @cilium/ci-structure\n/.gitignore @cilium/contributing\n/.golangci.yaml @cilium/ci-structure\n/.mailmap @cilium/release-managers\n/.nvim @cilium/contributing\n/.vscode @cilium/contributing\n/api/ @cilium/api\n/api/v1/Makefile @cilium/sig-hubble-api\n/api/v1/Makefile.protoc @cilium/sig-hubble-api\n/api/v1/flow/ @cilium/sig-hubble-api\n/api/v1/health/ @cilium/api @cilium/sig-agent\n/api/v1/observer/ @cilium/sig-hubble-api\n/api/v1/operator/ @cilium/api @cilium/operator\n/api/v1/peer/ @cilium/sig-hubble-api\n/api/v1/recorder/ @cilium/sig-hubble-api\n/api/v1/relay/ @cilium/sig-hubble-api\n/bpf/ @cilium/sig-datapath\n/bpf/lib/egress_gateway.h @cilium/egress-gateway\nMakefile* @cilium/build\n/bpf/Makefile* @cilium/loader\n/bpf/custom/Makefile* @cilium/build @cilium/loader\n/bpf/lib/auth.h @cilium/sig-datapath @cilium/sig-servicemesh\n/bpf/lib/encrypt.h @cilium/ipsec\n/bpf/lib/policy.h @cilium/sig-datapath @cilium/sig-policy\n/bpf/lib/wireguard.h @cilium/wireguard @cilium/sig-datapath\n/bpf/bpf_wireguard.c @cilium/wireguard @cilium/sig-datapath\n/bpf/lib/ids.h @cilium/loader\n/bpf/lib/proxy.h @cilium/proxy @cilium/sig-datapath\n/bpf/include/bpf/tailcall.h @cilium/loader\n/bugtool/ @cilium/cli\n/cilium-dbg/ @cilium/cli\n/cilium-dbg/cmd/encrypt* @cilium/ipsec @cilium/cli\n/cilium-dbg/cmd/preflight_k8s_valid_cnp.go @cilium/sig-k8s\n/cilium-cli/ @cilium/cli\n/cilium-cli/bgp/ @cilium/sig-bgp\n/cilium-cli/cmd/ @cilium/cli\n/cilium-cli/clustermesh/ @cilium/sig-clustermesh\n/cilium-cli/connectivity/ @cilium/ci-structure\n/cilium-cli/connectivity/check/frr.go @cilium/sig-bgp\n/cilium-cli/connectivity/check/ipcache.go @cilium/ipcache\n/cilium-cli/connectivity/check/metrics*.go @cilium/metrics\n/cilium-cli/connectivity/check/policy.go @cilium/sig-policy\n/cilium-cli/connectivity/builder/** @cilium/ci-structure\n/cilium-cli/connectivity/builder/all_ingress_deny_from_outside.go @cilium/sig-encryption\n/cilium-cli/connectivity/builder/bgp_control_plane.go @cilium/sig-bgp\n/cilium-cli/connectivity/builder/cluster_entity_multi_cluster.go @cilium/sig-clustermesh\n/cilium-cli/connectivity/builder/dns_only.go @cilium/fqdn\n/cilium-cli/connectivity/builder/echo_ingress.go @cilium/sig-servicemesh\n/cilium-cli/connectivity/builder/echo_ingress_auth_always_fail.go @cilium/sig-servicemesh\n/cilium-cli/connectivity/builder/echo_ingress_from_other_client_deny.go @cilium/sig-servicemesh\n/cilium-cli/connectivity/builder/echo_ingress_from_outside.go @cilium/sig-servicemesh\n/cilium-cli/connectivity/builder/echo_ingress_knp.go @cilium/sig-servicemesh\n/cilium-cli/connectivity/builder/echo_ingress_l7.go @cilium/sig-servicemesh\n/cilium-cli/connectivity/builder/echo_ingress_l7_named_port.go @cilium/sig-servicemesh\n/cilium-cli/connectivity/builder/echo_ingress_mutual_auth_spiffe.go @cilium/sig-servicemesh\n/cilium-cli/connectivity/builder/egress_gateway.go @cilium/egress-gateway\n/cilium-cli/connectivity/builder/egress_gateway_excluded_cidrs.go @cilium/egress-gateway\n/cilium-cli/connectivity/builder/egress_gateway_with_l7_policy.go @cilium/egress-gateway\n/cilium-cli/connectivity/builder/no_ipsec_xfrm_errors.go @cilium/sig-encryption\n/cilium-cli/connectivity/builder/node_to_node_encryption.go @cilium/sig-encryption\n/cilium-cli/connectivity/builder/pod_to_pod_encryption.go @cilium/sig-encryption\n/cilium-cli/connectivity/perf/** @cilium/sig-scalability\n/cilium-cli/connectivity/tests/bgp.go @cilium/sig-bgp\n/cilium-cli/connectivity/tests/clustermesh-endpointslice-sync.go @cilium/sig-clustermesh\n/cilium-cli/connectivity/tests/egressgateway.go @cilium/egress-gateway\n/cilium-cli/connectivity/tests/encryption.go @cilium/sig-encryption\n/cilium-cli/connectivity/tests/errors.go @cilium/sig-agent @cilium/sig-datapath\n/cilium-cli/connectivity/tests/externalworkload.go @cilium/sig-clustermesh\n/cilium-cli/connectivity/tests/from-cidr.go @cilium/sig-policy\n/cilium-cli/connectivity/tests/health.go @cilium/sig-agent\n/cilium-cli/connectivity/tests/host.go @cilium/sig-agent\n/cilium-cli/connectivity/tests/ipsec_xfrm.go @cilium/ipsec\n/cilium-cli/connectivity/tests/pod.go @cilium/sig-agent\n/cilium-cli/connectivity/tests/service.go @cilium/sig-lb\n/cilium-cli/connectivity/tests/to-cidr.go @cilium/sig-policy\n/cilium-cli/connectivity/tests/upgrade.go @cilium/sig-datapath\n/cilium-cli/connectivity/tests/world.go @cilium/proxy\n/cilium-cli/encrypt/ @cilium/sig-encryption\n/cilium-cli/hubble/ @cilium/sig-hubble\n/cilium-cli/install/ @cilium/cli @cilium/helm\n/cilium-cli/install/azure.go @cilium/azure\n/cilium-cli/k8s/ @cilium/sig-k8s\n/cilium-health/ @cilium/sig-agent\n/cilium-health/cmd/ @cilium/sig-agent @cilium/cli\n/clustermesh-apiserver @cilium/sig-clustermesh\n/contrib/ @cilium/contributing\n/contrib/containerlab/ @cilium/sig-bgp\n/contrib/coccinelle/ @cilium/sig-datapath\n/daemon/ @cilium/sig-agent\n/daemon/cmd/datapath.go @cilium/sig-datapath\n/daemon/cmd/endpoint* @cilium/endpoint\n/daemon/cmd/fqdn* @cilium/fqdn\n/daemon/cmd/health* @cilium/sig-agent\n/daemon/cmd/ipcache* @cilium/ipcache\n/daemon/cmd/kube_proxy* @cilium/sig-datapath\n/daemon/cmd/bootstrap_statistics.go @cilium/metrics\n/daemon/cmd/policy* @cilium/sig-policy\n/daemon/cmd/state.go @cilium/endpoint\n/daemon/cmd/cells*.go @cilium/sig-foundations\n/Documentation/ @cilium/docs-structure\n/Documentation/_static/ @cilium/docs-structure\n/Documentation/api.rst @cilium/sig-agent @cilium/docs-structure\n/Documentation/beta.rst @cilium/docs-structure\n/Documentation/reference-guides/bpf/ @cilium/sig-datapath @cilium/docs-structure\n/Documentation/reference-guides/xfrm/ @cilium/ipsec @cilium/docs-structure\n/Documentation/check-build.sh @cilium/docs-structure\n/Documentation/check-cmdref.sh @cilium/docs-structure\n/Documentation/check-crd-compat-table.sh @cilium/docs-structure\n/Documentation/check-examples.sh @cilium/docs-structure\n/Documentation/check-helmvalues.sh @cilium/docs-structure\n/Documentation/cmdref/\n/Documentation/community/community.rst @cilium/contributing\n/Documentation/community/governance.rst @cilium/contributing\n/Documentation/community/roadmap.rst @cilium/contributing @cilium/docs-structure\n/Documentation/contributing/ @cilium/contributing @cilium/docs-structure\n/Documentation/conf.py @cilium/docs-structure\n/Documentation/configuration/index.rst @cilium/docs-structure\n/Documentation/contributing/ @cilium/contributing @cilium/docs-structure\n/Documentation/contributing/development/reviewers_committers/review_vendor.rst @cilium/vendor\n/Documentation/crdlist.rst\n/Documentation/Dockerfile @cilium/docs-structure\n/Documentation/gettingstarted/demo.rst @cilium/docs-structure\n/Documentation/gettingstarted/gettinghelp.rst @cilium/contributing @cilium/docs-structure\n/Documentation/glossary.rst @cilium/docs-structure\n/Documentation/helm-values.rst\n/Documentation/images/re-request-review.png @cilium/contributing @cilium/docs-structure\n/Documentation/index.rst @cilium/docs-structure\n/Documentation/installation/alibabacloud* @cilium/alibabacloud @cilium/docs-structure\n/Documentation/installation/aws* @cilium/aws @cilium/docs-structure\n/Documentation/installation/cni-chaining-aws-cni.rst @cilium/aws @cilium/docs-structure\n/Documentation/installation/cni-chaining-azure-cni.rst @cilium/azure @cilium/docs-structure\n/Documentation/installation/kind-configure.rst @cilium/docs-structure\n/Documentation/internals/index.rst @cilium/docs-structure\n/Documentation/internals/cilium_operator.rst @cilium/operator @cilium/docs-structure\n/Documentation/internals/hubble.rst @cilium/sig-hubble @cilium/docs-structure\n/Documentation/images/bpf* @cilium/sig-datapath @cilium/docs-structure\n/Documentation/images/hubble_getflows.png @cilium/sig-hubble @cilium/docs-structure\n/Documentation/Makefile @cilium/docs-structure\n/Documentation/network/bgp* @cilium/sig-bgp @cilium/docs-structure\n/Documentation/network/clustermesh/ @cilium/sig-clustermesh @cilium/docs-structure\n/Documentation/network/concepts/ipam/ @cilium/sig-ipam @cilium/docs-structure\n/Documentation/network/concepts/ipam/azure* @cilium/sig-ipam @cilium/azure @cilium/docs-structure\n/Documentation/network/concepts/ipam/eni* @cilium/sig-ipam @cilium/aws @cilium/docs-structure\n/Documentation/network/concepts/masquerading.rst @cilium/sig-datapath @cilium/docs-structure\n/Documentation/network/ebpf/ @cilium/sig-datapath @cilium/docs-structure\n/Documentation/network/egress-gateway-toc.rst @cilium/egress-gateway @cilium/docs-structure\n/Documentation/network/egress-gateway/ @cilium/egress-gateway @cilium/docs-structure\n/Documentation/network/kubernetes/ @cilium/sig-k8s @cilium/docs-structure\n/Documentation/network/kubernetes/bandwidth-manager.rst @cilium/sig-datapath @cilium/docs-structure\n/Documentation/network/kubernetes/ipam* @cilium/sig-ipam @cilium/docs-structure\n/Documentation/network/kubernetes/kubeproxy-free.rst @cilium/sig-lb @cilium/docs-structure\n/Documentation/network/kubernetes/local-redirect-policy.rst @cilium/sig-lb @cilium/docs-structure\n/Documentation/network/lb-ipam.rst @cilium/sig-lb @cilium/docs-structure\n/Documentation/network/multicast.rst @cilium/sig-datapath @cilium/docs-structure\n/Documentation/network/servicemesh/ @cilium/sig-servicemesh @cilium/docs-structure\n/Documentation/observability/ @cilium/sig-policy @cilium/docs-structure\n/Documentation/observability/hubble* @cilium/sig-hubble @cilium/docs-structure\n/Documentation/operations/performance/ @cilium/sig-datapath @cilium/docs-structure\n/Documentation/operations/system_requirements.rst @cilium/sig-datapath @cilium/docs-structure\n/Documentation/operations/troubleshooting_clustermesh.rst @cilium/sig-clustermesh @cilium/docs-structure\n/Documentation/overview/component-overview.rst @cilium/docs-structure\n/Documentation/overview/intro.rst @cilium/docs-structure\n/Documentation/requirements.txt @cilium/docs-structure\n/Documentation/security/http.rst @cilium/sig-policy @cilium/docs-structure\n/Documentation/security/images/cilium_threat_model* @cilium/security @cilium/docs-structure\n/Documentation/security/network/encryption-ipsec.rst @cilium/ipsec @cilium/docs-structure\n/Documentation/security/network/encryption-wireguard.rst @cilium/wireguard @cilium/docs-structure\n/Documentation/security/network/proxy/ @cilium/proxy @cilium/docs-structure\n/Documentation/security/policy-creation.rst @cilium/sig-policy @cilium/docs-structure\n/Documentation/security/policy/ @cilium/sig-policy @cilium/docs-structure\n/Documentation/security/threat-model.rst @cilium/security @cilium/docs-structure\n/Documentation/spelling_wordlist.txt @cilium/docs-structure\n/Documentation/update-cmdref.sh @cilium/docs-structure\n/Documentation/update-spelling_wordlist.sh @cilium/docs-structure\n/Documentation/yaml.config @cilium/docs-structure\n/examples/ @cilium/docs-structure\n/examples/hubble/ @cilium/sig-hubble\n/examples/kubernetes/ @cilium/sig-k8s\n/examples/kubernetes/clustermesh/ @cilium/sig-clustermesh\n/examples/minikube/ @cilium/sig-k8s\n/examples/policies/kubernetes/clustermesh/ @cilium/sig-clustermesh\n/FURTHER_READINGS.rst @cilium/docs-structure\n/hack/ @cilium/contributing\n/hubble/ @cilium/sig-hubble\n/hubble-relay/ @cilium/sig-hubble\n/images @cilium/build\n/images/builder/install-protoc.sh @cilium/sig-hubble-api\n/images/builder/install-protoplugins.sh @cilium/sig-hubble-api\n/images/builder/update-cilium-builder-image.sh @cilium/github-sec\n/images/hubble-relay @cilium/sig-hubble\n/images/runtime/update-cilium-runtime-image.sh @cilium/github-sec\n/install/kubernetes/ @cilium/sig-k8s @cilium/helm\n/install/kubernetes/cilium/**/cilium-envoy @cilium/sig-k8s @cilium/helm @cilium/envoy @cilium/sig-servicemesh\n/install/kubernetes/cilium/**/spire @cilium/sig-k8s @cilium/helm @cilium/sig-servicemesh\n/install/kubernetes/cilium/templates/clustermesh* @cilium/sig-k8s @cilium/helm @cilium/sig-clustermesh\n/install/kubernetes/cilium/templates/hubble* @cilium/sig-k8s @cilium/helm @cilium/sig-hubble\n/LICENSE @cilium/contributing\n/MAINTAINERS.md @cilium/contributing\n/netlify.toml @cilium/ci-structure\n/operator/ @cilium/operator\n/operator/pkg/bgpv2 @cilium/sig-bgp\n/operator/pkg/ciliumendpointslice @cilium/sig-scalability\n/operator/pkg/ciliumenvoyconfig @cilium/sig-servicemesh\n/operator/pkg/controller-runtime @cilium/envoy @cilium/sig-servicemesh\n/operator/pkg/gateway-api @cilium/sig-servicemesh\n/operator/pkg/ingress @cilium/sig-servicemesh\n/operator/pkg/lbipam @cilium/sig-lb\n/operator/pkg/model @cilium/sig-servicemesh\n/operator/pkg/networkpolicy @cilium/sig-policy\n/operator/pkg/secretsync @cilium/envoy @cilium/sig-servicemesh\n/pkg/act/ @cilium/sig-datapath @cilium/metrics\n/pkg/annotation @cilium/sig-k8s\n/pkg/alibabacloud/ @cilium/alibabacloud\n/pkg/alignchecker/ @cilium/sig-datapath @cilium/loader\n/pkg/allocator/ @cilium/kvstore\n/pkg/api/ @cilium/api\n/pkg/auth/ @cilium/sig-servicemesh\n/pkg/aws/ @cilium/aws\n/pkg/azure/ @cilium/azure\n/pkg/backoff/ @cilium/sig-agent\n/pkg/bufuuid/ @cilium/sig-scalability\n/pkg/datapath/linux/bandwidth/ @cilium/sig-datapath\n/pkg/bgpv1/ @cilium/sig-bgp\n/pkg/bpf/ @cilium/loader\n/pkg/byteorder/ @cilium/sig-datapath @cilium/api\n/pkg/cgroups/ @cilium/sig-datapath\n/pkg/cidr/ @cilium/sig-agent\n/pkg/ciliumenvoyconfig/ @cilium/envoy @cilium/sig-servicemesh\n/pkg/cleanup/ @cilium/sig-agent\n/pkg/client @cilium/api\n/pkg/clustermesh @cilium/sig-clustermesh\n/pkg/command/ @cilium/cli\n/pkg/common/ @cilium/sig-agent\n/pkg/common/ipsec/ @cilium/ipsec\n/pkg/comparator/ @cilium/sig-agent\n/pkg/completion/ @cilium/proxy\n/pkg/components/ @cilium/sig-agent\n/pkg/container/ @cilium/sig-foundations\n/pkg/container/bitlpm/ @cilium/ipcache @cilium/sig-policy\n/pkg/container/set/ @cilium/sig-policy\n/pkg/controller @cilium/sig-agent\n/pkg/counter @cilium/sig-datapath\n/pkg/crypto/ @cilium/sig-hubble @cilium/sig-policy\n/pkg/datapath/ @cilium/sig-datapath\n/pkg/datapath/fake/ipsec.go @cilium/ipsec\n/pkg/datapath/linux/config/ @cilium/loader\n/pkg/datapath/linux/ipsec/ @cilium/ipsec\n/pkg/datapath/linux/ipsec/xfrm_collector* @cilium/ipsec @cilium/metrics\n/pkg/datapath/linux/ipsec.go @cilium/ipsec\n/pkg/datapath/linux/node.go @cilium/sig-datapath\n/pkg/datapath/linux/probes/ @cilium/loader\n/pkg/datapath/linux/requirements.go @cilium/loader\n/pkg/datapath/linux/sysctl/ @cilium/sig-datapath\n/pkg/datapath/types/ipsec.go @cilium/ipsec\n/pkg/datapath/types/loader.go @cilium/loader\n/pkg/datapath/loader/ @cilium/loader\n/pkg/datapath/ipcache/ @cilium/ipcache\n/pkg/defaults @cilium/sig-agent\n/pkg/debug @cilium/sig-agent\n/pkg/dial @cilium/sig-agent\n/pkg/driftchecker @cilium/sig-foundations\n/pkg/dynamicconfig @cilium/sig-foundations\n/pkg/ebpf @cilium/sig-datapath\n/pkg/egressgateway/ @cilium/egress-gateway\n/pkg/endpoint/ @cilium/endpoint\n/pkg/endpointcleanup/ @cilium/endpoint\n/pkg/endpointmanager/ @cilium/endpoint\n/pkg/endpointstate/ @cilium/endpoint\n/pkg/envoy/ @cilium/envoy\n/pkg/eventqueue/ @cilium/sig-agent\n/pkg/dynamiclifecycle/ @cilium/sig-foundations\n/pkg/flowdebug/ @cilium/proxy\n/pkg/fqdn/ @cilium/fqdn\n/pkg/fswatcher/ @cilium/sig-datapath @cilium/sig-hubble\n/pkg/gops/ @cilium/sig-agent\n/pkg/health/ @cilium/sig-agent\n/pkg/hive/ @cilium/sig-foundations\n/pkg/hubble/ @cilium/sig-hubble\n/pkg/hubble/metrics @cilium/hubble-metrics\n/pkg/iana/ @cilium/sig-agent\n/pkg/identity @cilium/sig-policy\n/pkg/idpool/ @cilium/kvstore\n/pkg/ip/ @cilium/sig-agent\n/pkg/ipalloc/ @cilium/sig-ipam\n/pkg/ipam/ @cilium/sig-ipam\n/pkg/ipam/allocator/alibabacloud/ @cilium/sig-ipam @cilium/alibabacloud\n/pkg/ipam/allocator/aws/ @cilium/sig-ipam @cilium/aws\n/pkg/ipam/allocator/azure/ @cilium/sig-ipam @cilium/azure\n/pkg/ipam/allocator/clusterpool/ @cilium/sig-ipam @cilium/operator\n/pkg/ipcache/ @cilium/ipcache\n/pkg/ipmasq @cilium/sig-agent\n/pkg/k8s/ @cilium/sig-k8s\n/pkg/k8s/apis/cilium.io/client/crds/v2/ @cilium/sig-k8s\n/pkg/k8s/apis/cilium.io/client/crds/v2/ciliumegressgatewaypolicies.yaml @cilium/egress-gateway\n/pkg/k8s/apis/cilium.io/v2/cegp_types.go @cilium/egress-gateway\n/pkg/k8s/apis/cilium.io/v2/ @cilium/api @cilium/sig-k8s\n/pkg/kvstore/ @cilium/kvstore\n/pkg/kvstore/etcdinit @cilium/sig-clustermesh @cilium/kvstore\n/pkg/l2announcer/ @cilium/sig-agent\n/pkg/labels @cilium/sig-policy @cilium/api\n/pkg/labelsfilter @cilium/sig-policy\n/pkg/launcher @cilium/sig-agent\n/pkg/loadbalancer @cilium/sig-lb\n/pkg/loadinfo/ @cilium/sig-agent\n/pkg/lock @cilium/sig-agent\n/pkg/logging/ @cilium/cli\n/pkg/mac @cilium/sig-datapath\n/pkg/maglev @cilium/sig-lb\n/pkg/maps/ @cilium/sig-datapath\n/pkg/maps/egressmap @cilium/egress-gateway\n/pkg/math/ @cilium/sig-agent\n/pkg/mcastmanager @cilium/sig-datapath\n/pkg/metrics @cilium/metrics\n/pkg/monitor @cilium/sig-datapath\n/pkg/monitor/api @cilium/api @cilium/sig-datapath\n/pkg/monitor/datapath_trace.go @cilium/sig-datapath @cilium/sig-hubble\n/pkg/monitor/format @cilium/cli @cilium/sig-datapath\n/pkg/monitor/payload @cilium/api @cilium/sig-datapath\n/pkg/mountinfo @cilium/sig-datapath\n/pkg/mtu @cilium/sig-datapath\n/pkg/multicast @cilium/sig-datapath\n/pkg/murmur3/ @cilium/sig-datapath\n/pkg/netns/ @cilium/sig-datapath @cilium/sig-k8s\n/pkg/node @cilium/sig-agent\n/pkg/nodediscovery/ @cilium/sig-agent\n/pkg/option @cilium/sig-agent @cilium/cli\n/pkg/pidfile @cilium/sig-agent\n/pkg/policy @cilium/sig-policy\n/pkg/policy/api/ @cilium/api\n/pkg/policy/groups/aws/ @cilium/sig-policy @cilium/aws\n/pkg/policy/k8s @cilium/sig-policy\n/pkg/pprof @cilium/sig-foundations\n/pkg/promise @cilium/sig-foundations\n/pkg/proxy/ @cilium/proxy\n/pkg/proxy/accesslog @cilium/proxy @cilium/api\n/pkg/proxy/dns.go @cilium/proxy @cilium/fqdn\n/pkg/proxy/envoyproxy.go @cilium/proxy @cilium/envoy\n/pkg/rate/ @cilium/sig-agent\n/pkg/rate/metrics @cilium/metrics\n/pkg/recorder @cilium/sig-datapath\n/pkg/redirectpolicy @cilium/sig-lb\n/pkg/resiliency @cilium/sig-agent\n/pkg/revert/ @cilium/sig-agent\n/pkg/safeio @cilium/sig-agent\n/pkg/safetime/ @cilium/sig-agent\n/pkg/service @cilium/sig-lb\n/pkg/shortener @cilium/sig-foundations @cilium/sig-k8s\n/pkg/signal @cilium/sig-datapath\n/pkg/slices @cilium/sig-foundations\n/pkg/socketlb @cilium/loader\n/pkg/source @cilium/ipcache\n/pkg/spanstat/ @cilium/sig-agent\n/pkg/status/ @cilium/sig-agent\n/pkg/testutils/ @cilium/ci-structure\n/pkg/time @cilium/sig-agent\n/pkg/trigger/ @cilium/sig-agent\n/pkg/tuple @cilium/sig-datapath\n/pkg/types/ @cilium/sig-datapath\n/pkg/u8proto/ @cilium/sig-agent\n/pkg/wireguard @cilium/wireguard\n/pkg/version/ @cilium/sig-agent\n/pkg/versioncheck/ @cilium/sig-agent\n/plugins/cilium-cni/ @cilium/sig-k8s\n/plugins/cilium-docker/ @cilium/docker\n/README.rst @cilium/docs-structure\n/SECURITY.md @cilium/contributing\n/SECURITY-INSIGHTS.yml @cilium/security\n/stable.txt @cilium/release-managers\n/test/ @cilium/ci-structure\n/test/Makefile* @cilium/ci-structure @cilium/build\n# Service handling tests\n/test/k8s/services.go @cilium/sig-lb @cilium/ci-structure\n# Datapath tests\n/test/bpf/ @cilium/sig-datapath\n/bpf/tests/bpftest/ @cilium/sig-datapath\n/test/k8s/bandwidth.go @cilium/sig-datapath @cilium/ci-structure\n/test/k8s/chaos.go @cilium/sig-datapath @cilium/ci-structure\n/test/k8s/datapath_configuration.go @cilium/sig-datapath @cilium/ci-structure\n/test/runtime/connectivity.go @cilium/sig-datapath @cilium/ci-structure\n/test/verifier @cilium/loader @cilium/ci-structure\n# Policy tests\n/test/k8s/net_policies.go @cilium/sig-policy @cilium/ci-structure\n/test/runtime/net_policies.go @cilium/sig-policy @cilium/ci-structure\n# Hubble/monitoring tests\n/test/k8s/hubble.go @cilium/sig-hubble @cilium/ci-structure\n/test/runtime/monitor.go @cilium/sig-hubble @cilium/ci-structure\n# L7 proxy tests\n/test/k8s/fqdn.go @cilium/fqdn @cilium/ci-structure\n/test/k8s/kafka_policies.go @cilium/envoy @cilium/ci-structure\n/test/runtime/fqdn.go @cilium/fqdn @cilium/ci-structure\n# Standalone L4LB tests\n/test/l4lb @cilium/sig-lb @cilium/ci-structure\n/test/nat46x64 @cilium/sig-lb @cilium/ci-structure\n/test/bigtcp @cilium/sig-datapath @cilium/ci-structure\n# Misc. tests\n/test/runtime/kvstore.go @cilium/kvstore @cilium/ci-structure\n/test/runtime/chaos_agent.go @cilium/sig-agent @cilium/ci-structure\n/tools/ @cilium/contributing\n/USERS.md @cilium/community\n/go.sum @cilium/vendor\n/go.mod @cilium/vendor\n/vendor/ @cilium/vendor\n/VERSION @cilium/release-managers\n/.clang-format @cilium/contributing\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 2.212890625,
          "content": "## Community Code of Conduct v1.0\n\nThis is Code of Conduct is based on the [CNCF Code of\nConduct](https://github.com/cncf/foundation/blob/main/code-of-conduct.md).\nSee the referred document for translated versions into different languages. The\ntext below is modified with Cilium community specific contact details.\n\n### Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering\nan open and welcoming community, we pledge to respect all people who contribute\nthrough reporting issues, posting feature requests, updating documentation,\nsubmitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free experience for\neveryone, regardless of level of experience, gender, gender identity and expression,\nsexual orientation, disability, personal appearance, body size, race, ethnicity, age,\nreligion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing others' private information, such as physical or electronic addresses,\n without explicit permission\n* Other unethical or unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are not\naligned to this Code of Conduct. By adopting this Code of Conduct, project maintainers\ncommit themselves to fairly and consistently applying these principles to every aspect\nof managing this project. Project maintainers who do not follow or enforce the Code of\nConduct may be permanently removed from the project team.\n\nThis code of conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the code of conduct team via \n[conduct@cilium.io](mailto:conduct@cilium.io).\n\nThis Code of Conduct is adapted from the Contributor Covenant\n(http://contributor-covenant.org), version 1.2.0, available at\nhttp://contributor-covenant.org/version/1/2/0/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.6748046875,
          "content": "# How to Contribute\n\n## To Cilium/Hubble\n\nSee the [Developer / Contributor\nGuide](https://docs.cilium.io/en/stable/contributing/development/contributing_guide/) for detailed information on\nhow to contribute, get started and find good first issues.\n\n## To the cilium.io website\n\nPlease see the [cilium.io website contributing guide](https://github.com/cilium/cilium.io/blob/main/CONTRIBUTING.md) for detailed\ninformation on how to add blogs, trainings, and other resources.\n\n## To the Cilium documentation\n\nPlease see the [Cilium documentation contributing guide](https://docs.cilium.io/en/stable/contributing/docs/) for detailed\ninformation on how to contribute to the Cilium documentation.\n"
        },
        {
          "name": "Documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "FURTHER_READINGS.rst",
          "type": "blob",
          "size": 6.35546875,
          "content": "Further Reading\n===============\n\n.. further-reading-begin\n\nRelated Material\n----------------\n\n* `BPF for securityâand chaosâin Kubernetes <https://lwn.net/Articles/790684/>`_\n* `k8s-snowflake: Configs and scripts for bootstrapping an opinionated\n  Kubernetes cluster anywhere using Cilium plugin\n  <https://github.com/jessfraz/k8s-snowflake>`_\n* `Using Cilium for NetworkPolicy: Kubernetes documentation on how to use Cilium\n  to implement NetworkPolicy\n  <https://kubernetes.io/docs/tasks/administer-cluster/cilium-network-policy/>`_\n\nPresentations\n-------------\n\n* Kubernetes on Edge Day, Europe 2022 - Connecting Klusters on the Edge with Deep Dive into Cilium Cluster Mesh:\n  `Video <https://www.youtube.com/watch?v=UcsEVnFtrLY>`__\n* Cloud Native Telco Day, Europe 2022 - Leveraging Cilium and SRv6 for Telco Networking:\n  `Video <https://www.youtube.com/watch?v=vJaOKGWiyvU>`__\n* KubeCon, Europe 2022 - A Guided Tour of Cilium Service Mesh:\n  `Video <https://www.youtube.com/watch?v=e10kDBEsZw4>`__\n* eBPF Day, Europe, 2022 - IKEA Private Cloud, eBPF Based Networking, Load Balancing, and Observability with Cilium:\n  `Video <https://www.youtube.com/watch?v=sg-F_R-ZVNc>`__\n* KubeCon, North America 2021 - Beyond printf & tcpdump: Debugging Kubernetes Networking with eBPF:\n  `Video <https://www.youtube.com/watch?v=vqx-hLYfCYE>`__\n* eBPF Summit, Virtual 2020 - Our eBPF Journey at Datadog:\n  `Video <https://www.youtube.com/watch?v=6mTVuZUHLBg>`__\n* eBPF Summit, Virtual 2020 - Building a Secure and Maintainable PaaS Leveraging Cilium:\n  `Video <https://www.youtube.com/watch?v=hwOpCKBaJ-w>`__\n* eBPF Summit, Virtual 2020 - The Past, Present and Future of Cilium and Hubble at Palantir:\n  `Video <https://www.youtube.com/watch?v=3K5WJ_h5PhI>`__\n* KubeCon, Europe 2020 - Hubble - eBPF Based Observability for Kubernetes:\n  `Video <https://www.youtube.com/watch?v=8WCbGSCyDSo>`__\n* Fosdem, Brussels, 2020 - BPF as a revolutionary technology for the container landscape:\n  `Slides <https://docs.google.com/presentation/d/1VOUcoIxgM_c6M_zAV1dLlRCjyYCMdR3tJv6CEdfLMh8/edit#slide=id.g7055f48ba8_0_0>`__, `Video <https://fosdem.org/2020/schedule/event/containers_bpf/>`__\n* KubeCon, North America 2019 - Understanding and Troubleshooting the eBPF Datapath in Cilium:\n  `Video <https://www.youtube.com/watch?v=Kmm8Hl57WDU>`__\n* KubeCon, North America 2019 - Liberating Kubernetes from kube-proxy and iptables:\n  `Slides <https://docs.google.com/presentation/d/1cZJ-pcwB9WG88wzhDm2jxQY4Sh8adYg0-N3qWQ8593I/edit#slide=id.g7055f48ba8_0_0>`__, `Video <https://www.youtube.com/watch?v=bIRwSIwNHC0>`__\n* KubeCon, Europe 2019 - Using eBPF to Bring Kubernetes-Aware Security to the Linux Kernel:\n  `Video <https://www.youtube.com/watch?v=7PXQB-1U380>`__\n* KubeCon, Europe 2019 - Transparent Chaos Testing with Envoy , Cilium and BPF:\n  `Slides <https://static.sched.com/hosted_files/kccnceu19/54/Chaos%20Testing%20with%20Envoy%2C%20Cilium%20and%20eBPF.pdf>`__, `Video <https://www.youtube.com/watch?v=gPvl2NDIWzY>`__\n* All Systems Go!, Berlin, Sept 2018 - Cilium - Bringing the BPF Revolution to Kubernetes Networking and Security\n  `Slides <https://www.slideshare.net/ThomasGraf5/cilium-bringing-the-bpf-revolution-to-kubernetes-networking-and-security>`__, `Video <https://www.youtube.com/watch?v=QmmId1QEE5k>`__\n* QCon, San Francisco 2018 - How to Make Linux Microservice-Aware with Cilium and eBPF:\n  `Slides <https://www.slideshare.net/InfoQ/how-to-make-linux-microserviceaware-with-cilium-and-ebpf>`__, `Video <https://www.youtube.com/watch?v=_Iq1xxNZOAo>`__  \n* KubeCon, North America 2018 - Connecting Kubernetes Clusters Across Cloud Providers:\n  `Slides <https://static.sched.com/hosted_files/kccna18/68/Connecting%20Multiple%20Kubernetes%20Clusters%20Across%20Cloud%20Providers.pdf>`__, `Video <https://www.youtube.com/watch?v=U34lQ8KbQow>`__\n* KubeCon, North America 2018 - Implementing Least Privilege Security and Networking with BPF on Kubernetes:\n  `Slides <https://www.slideshare.net/ThomasGraf5/accelerating-envoy-and-istio-with-cilium-and-the-linux-kernel>`__, `Video <https://www.youtube.com/watch?v=3F_XNbhjgxY>`__\n* KubeCon, Europe 2018 - Accelerating Envoy with the Linux Kernel:\n  `Video <https://www.youtube.com/watch?v=ER9eIXL2_14>`__\n* Open Source Summit, North America - Cilium: Networking and security for containers with BPF and XDP:\n  `Video <https://www.youtube.com/watch?v=CcGtDMm1SJA>`__\n* DockerCon, Austin TX, Apr 2017 - Cilium - Network and Application Security with BPF and XDP: `Slides\n  <https://www.slideshare.net/ThomasGraf5/dockercon-2017-cilium-network-and-application-security-with-bpf-and-xdp>`__, `Video <https://www.youtube.com/watch?v=ilKlmTDdFgk>`__\n* CNCF/KubeCon Meetup, Berlin, Mar 2017 - Linux Native, HTTP Aware Network Security:\n  `Slides <https://www.slideshare.net/ThomasGraf5/linux-native-http-aware-network-security>`__, `Video <https://www.youtube.com/watch?v=Yf_INdTWIHI>`__\n* Docker Distributed Systems Summit, Berlin, Oct 2016:\n  `Slides <http://www.slideshare.net/Docker/cilium-bpf-xdp-for-containers-66969823>`__, `Video <https://www.youtube.com/watch?v=TnJF7ht3ZYc&list=PLkA60AVN3hh8oPas3cq2VA9xB7WazcIgs&index=7>`__\n* NetDev1.2, Tokyo, Sep 2016 - cls_bpf/eBPF updates since netdev 1.1:\n  `Slides <http://borkmann.ch/talks/2016_tcws.pdf>`__, `Video <https://youtu.be/gwzaKXWIelc?t=12m55s>`__\n* NetDev1.2, Tokyo, Sep 2016 - Advanced programmability and recent updates with tcâs cls_bpf:\n  `Slides <http://borkmann.ch/talks/2016_netdev2.pdf>`__, `Video <https://www.youtube.com/watch?v=GwT9hRiqdUo>`__\n* ContainerCon NA, Toronto, Aug 2016 - Fast IPv6 container networking with BPF & XDP:\n  `Slides <http://www.slideshare.net/ThomasGraf5/cilium-fast-ipv6-container-networking-with-bpf-and-xdp>`__\n\nPodcasts\n--------\n\n* Software Gone Wild by Ivan Pepelnjak, Oct 2016: `Blog <http://blog.ipspace.net/2016/10/fast-linux-packet-forwarding-with.html>`__, `MP3 <http://media.blubrry.com/ipspace/stream.ipspace.net/nuggets/podcast/Show_64-Cilium_with_Thomas_Graf.mp3>`__\n* OVS Orbit by Ben Pfaff, May 2016: `Blog <https://ovsorbit.benpfaff.org/#e4>`__, `MP3 <https://ovsorbit.benpfaff.org/episode-4.mp3>`__\n\nCommunity blog posts\n--------------------\n\n* `Cilium for Network and Application Security with BPF and XDP, Apr 2017\n  <https://blog.scottlowe.org/2017/04/18/black-belt-cilium/>`_\n* `Cilium, BPF and XDP, Google Open Source Blog, Nov 2016\n  <https://opensource.googleblog.com/2016/11/cilium-networking-and-security.html>`_\n\n.. further-reading-end\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.083984375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} Authors of Cilium\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "MAINTAINERS.md",
          "type": "blob",
          "size": 4.6953125,
          "content": "# Maintainers\n\nSee [Governance](https://github.com/cilium/community/blob/main/GOVERNANCE.md) for\ngovernance, commit, and vote guidelines as well as committer responsibilities.\nEverybody listed is a committer as per governance definition. See the \n[Contributor Ladder](https://github.com/cilium/community/blob/main/CONTRIBUTOR-LADDER.md)\nto learn how to level up through the project.\n\n## Cilium Committers\n\n * [Aditi Ghag] (Isovalent)\n * [Alexandre Perrin] (Isovalent)\n * [AndrÃ© Martins] (Isovalent)\n * [Beatriz MartÃ­nez] (Isovalent)\n * [Bill Mulligan] (Isovalent)\n * [Bruno M. CustÃ³dio] (Isovalent)\n * [Casey Callendrello] (Isovalent)\n * [Chance Zibolski] (Isovalent)\n * [Chris Tarazi] (Isovalent)\n * [Daniel Borkmann] (Isovalent)\n * [Dan Wendlandt] (Isovalent)\n * [Deepesh Pathak]\n * [Dorde Lapcevic] (Google)\n * [Dylan Reimerink] (Isovalent)\n * [Gilberto Bertin] (Isovalent)\n * [Glib Smaga] (Isovalent)\n * [Hemanth Malla] (Datadog)\n * [Ian Vernon]\n * [Jarno Rajahalme] (Isovalent)\n * [Joe Stringer] (Isovalent)\n * [John Fastabend] (Isovalent)\n * [Julian Wiedmann] (Isovalent)\n * [Jussi MÃ¤ki] (Isovalent)\n * [Kornilios Kourtis] (Isovalent)\n * [Laurent Bernaille] (Datadog)\n * [Liz Rice] (Isovalent)\n * [Lorenz Bauer] (Isovalent)\n * [Louis DeLosSantos] (Isovalent)\n * [Maciej Kwiek] (Isovalent)\n * [Martynas Pumputis] (Isovalent)\n * [Michal Rostecki] (Deepfence)\n * [Michi Mutsuzaki] (Isovalent)\n * [NatÃ¡lia RÃ©ka IvÃ¡nkÃ³] (Isovalent)\n * [Nathan Sweet] (Isovalent)\n * [Nick Young] (Isovalent)\n * [Nicolas Busseneau] (Isovalent)\n * [Nirmoy Das] (AMD)\n * [Paul Chaignon] (Isovalent)\n * [Quentin Monnet] (Hedgehog)\n * [Robin Hahling] (Isovalent)\n * [Sebastian Wicki] (Isovalent)\n * [Tam Mach] (Isovalent)\n * [Thomas Graf] (Isovalent)\n * [Timo Beckers] (Isovalent)\n * [Tobias Klauser] (Isovalent)\n * [Tom Hadlaw] (Isovalent)\n * [Vlad Ungureanu] (Palantir)\n * [Yutaro Hayakawa] (Isovalent)\n\n## Cilium & Hubble Emeritus Committers\n\nWe would like to acknowledge previous committers and their huge contributions to our collective success:\n\n * [Eloy Coto] (Red Hat)\n * [Ilya Dmitrichenko] (Docker)\n * [Ray Bejjani]\n * [Tom Payne]\n * [Weilong Cui] (Google)\n * [Yongkun Gui] (Google)\n * [Zang Li] (Google)\n\n\nPlease see the AUTHORS file for the full list of contributors to the Cilium\nproject.\n\n[Aditi Ghag]: https://github.com/aditighag\n[Alexandre Perrin]: https://github.com/kaworu\n[AndrÃ© Martins]: https://github.com/aanm\n[Beatriz MartÃ­nez]: https://github.com/b3a-dev\n[Bill Mulligan]: https://github.com/xmulligan\n[Bruno M. CustÃ³dio]: https://github.com/bmcustodio\n[Casey Callendrello]: https://github.com/squeed\n[Chance Zibolski]: https://github.com/chancez\n[Chris Tarazi]: https://github.com/christarazi\n[Daniel Borkmann]: https://github.com/borkmann\n[Dan Wendlandt]: https://github.com/danwent\n[Deepesh Pathak]: https://github.com/fristonio\n[Dorde Lapcevic]: https://github.com/dlapcevic\n[Dylan Reimerink]: https://github.com/dylandreimerink\n[Eloy Coto]: https://github.com/eloycoto\n[Gilberto Bertin]: https://github.com/jibi\n[Glib Smaga]: https://github.com/glibsm\n[Hemanth Malla]: https://github.com/hemanthmalla\n[Ian Vernon]: https://github.com/ianvernon\n[Ilya Dmitrichenko]: https://github.com/errordeveloper\n[Jarno Rajahalme]: https://github.com/jrajahalme\n[Joe Stringer]: https://github.com/joestringer\n[John Fastabend]: https://github.com/jrfastab\n[Julian Wiedmann]: https://github.com/julianwiedmann\n[Jussi MÃ¤ki]: https://github.com/joamaki\n[Kornilios Kourtis]: https://github.com/kkourt\n[Laurent Bernaille]: https://github.com/lbernail\n[Liz Rice]: https://github.com/lizrice\n[Lorenz Bauer]: https://github.com/lmb\n[Louis DeLosSantos]: https://github.com/ldelossa\n[Maciej Kwiek]: https://github.com/nebril\n[Martynas Pumputis]: https://github.com/brb\n[Michal Rostecki]: https://github.com/vadorovsky\n[Michi Mutsuzaki]: https://github.com/michi-covalent\n[NatÃ¡lia RÃ©ka IvÃ¡nkÃ³]: https://github.com/sharlns\n[Nathan Sweet]: https://github.com/nathanjsweet\n[Nick Young]: https://github.com/youngnick\n[Nicolas Busseneau]: https://github.com/nbusseneau\n[Nirmoy Das]: https://github.com/nirmoy\n[Paul Chaignon]: https://github.com/pchaigno\n[Quentin Monnet]: https://github.com/qmonnet\n[Ray Bejjani]: https://github.com/raybejjani\n[Robin Hahling]: https://github.com/rolinh\n[Sebastian Wicki]: https://github.com/gandro\n[Tam Mach]: https://github.com/sayboras\n[Thomas Graf]: https://github.com/tgraf\n[Timo Beckers]: https://github.com/ti-mo\n[Tobias Klauser]: https://github.com/tklauser\n[Tom Hadlaw]: https://github.com/tommyp1ckles\n[Tom Payne]: https://github.com/twpayne\n[Vlad Ungureanu]: https://github.com/ungureanuvladvictor\n[Weilong Cui]: https://github.com/Weil0ng\n[Yongkun Gui]: https://github.com/anfernee\n[Yutaro Hayakawa]: https://github.com/YutaroHayakawa\n[Zang Li]: https://github.com/lzang\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 23.673828125,
          "content": "# Copyright Authors of Cilium\n# SPDX-License-Identifier: Apache-2.0\n\n##@ Default\nall: precheck build postcheck ## Default make target that perform precheck -> build -> postcheck\n\t@echo \"Build finished.\"\n\n##@ Build, Install and Test\ndebug: export NOOPT=1 ## Builds Cilium by disabling inlining, compiler optimizations and without stripping debug symbols, useful for debugging.\ndebug: export NOSTRIP=1\ndebug: all\n\ninclude Makefile.defs\n\nSUBDIRS_CILIUM_CONTAINER := cilium-dbg daemon cilium-health bugtool tools/mount tools/sysctlfix plugins/cilium-cni\nSUBDIR_OPERATOR_CONTAINER := operator\nSUBDIR_RELAY_CONTAINER := hubble-relay\n\nifdef LIBNETWORK_PLUGIN\nSUBDIRS_CILIUM_CONTAINER += plugins/cilium-docker\nendif\n\n# Add the ability to override variables\n-include Makefile.override\n\n# List of subdirectories used for global \"make build\", \"make clean\", etc\nSUBDIRS := $(SUBDIRS_CILIUM_CONTAINER) $(SUBDIR_OPERATOR_CONTAINER) plugins tools $(SUBDIR_RELAY_CONTAINER) bpf clustermesh-apiserver\n\n# Filter out any directories where the parent directory is also present, to avoid\n# building or cleaning a subdirectory twice.\n# For example: The directory \"tools\" is transformed into a match pattern \"tools/%\",\n# which is then used to filter out items such as \"tools/mount\" and \"tools/sysctlfx\"\nSUBDIRS := $(filter-out $(foreach dir,$(SUBDIRS),$(dir)/%),$(SUBDIRS))\n\n# Space-separated list of Go packages to test, equivalent to 'go test' package patterns.\n# Because is treated as a Go package pattern, the special '...' sequence is supported,\n# meaning 'all subpackages of the given package'.\nTESTPKGS ?= ./...\nUNPARALLELTESTPKGS ?= ./pkg/datapath/linux/ipsec/...\n\nGOTEST_BASE := -timeout 600s\nGOTEST_COVER_OPTS += -coverprofile=coverage.out\nBENCH_EVAL := \".\"\nBENCH ?= $(BENCH_EVAL)\nBENCHFLAGS_EVAL := -bench=$(BENCH) -run=^$$ -benchtime=10s\nBENCHFLAGS ?= $(BENCHFLAGS_EVAL)\nSKIP_KVSTORES ?= \"false\"\nSKIP_K8S_CODE_GEN_CHECK ?= \"true\"\nSKIP_CUSTOMVET_CHECK ?= \"false\"\n\nJOB_BASE_NAME ?= cilium_test\n\nTEST_LDFLAGS=-ldflags \"-X github.com/cilium/cilium/pkg/kvstore.etcdDummyAddress=http://etcd:4002\"\n\nTEST_UNITTEST_LDFLAGS=\n\nbuild: $(SUBDIRS) ## Builds all the components for Cilium by executing make in the respective sub directories.\n\nbuild-container: ## Builds components required for cilium-agent container.\n\tfor i in $(SUBDIRS_CILIUM_CONTAINER); do $(MAKE) $(SUBMAKEOPTS) -C $$i all; done\n\nbuild-container-operator: ## Builds components required for cilium-operator container.\n\t$(MAKE) $(SUBMAKEOPTS) -C $(SUBDIR_OPERATOR_CONTAINER) all\n\nbuild-container-operator-generic: ## Builds components required for a cilium-operator generic variant container.\n\t$(MAKE) $(SUBMAKEOPTS) -C $(SUBDIR_OPERATOR_CONTAINER) cilium-operator-generic\n\nbuild-container-operator-aws: ## Builds components required for a cilium-operator aws variant container.\n\t$(MAKE) $(SUBMAKEOPTS) -C $(SUBDIR_OPERATOR_CONTAINER) cilium-operator-aws\n\nbuild-container-operator-azure: ## Builds components required for a cilium-operator azure variant container.\n\t$(MAKE) $(SUBMAKEOPTS) -C $(SUBDIR_OPERATOR_CONTAINER) cilium-operator-azure\n\nbuild-container-operator-alibabacloud: ## Builds components required for a cilium-operator alibabacloud variant container.\n\t$(MAKE) $(SUBMAKEOPTS) -C $(SUBDIR_OPERATOR_CONTAINER) cilium-operator-alibabacloud\n\nbuild-container-hubble-relay:\n\t$(MAKE) $(SUBMAKEOPTS) -C $(SUBDIR_RELAY_CONTAINER) all\n\n$(SUBDIRS): force ## Execute default make target(make all) for the provided subdirectory.\n\t@ $(MAKE) $(SUBMAKEOPTS) -C $@ all\n\ntests-privileged: ## Run Go tests including ones that require elevated privileges.\n\t@$(ECHO_CHECK) running privileged tests...\n\t## We split tests into two parts: one that can be run in parallel\n\t## and tests that cannot be run in parallel with other packages\n\t## One drawback of this approach is that\n\t## if first set of tests fails, second one is not run\n\t{ PRIVILEGED_TESTS=true PATH=$(PATH):$(ROOT_DIR)/bpf $(GO_TEST) $(TEST_LDFLAGS) \\\n\t\t$(TESTPKGS) $(GOTEST_BASE) $(GOTEST_COVER_OPTS) \\\n\t&& PRIVILEGED_TESTS=true PATH=$(PATH):$(ROOT_DIR)/bpf $(GO_TEST) $(TEST_LDFLAGS) \\\n\t\t$(UNPARALLELTESTPKGS) $(GOTEST_BASE) -json -covermode=count -coverprofile=coverage2.out -p 1 --tags=unparallel; } | $(GOTEST_FORMATTER)\n\ttail -n+2 coverage2.out >> coverage.out\n\trm coverage2.out\n\t$(MAKE) generate-cov\n\nstart-kvstores: ## Start running kvstores (etcd container) for integration tests.\nifeq ($(SKIP_KVSTORES),\"false\")\n\t@echo Starting key-value store container...\n\t-$(QUIET)$(CONTAINER_ENGINE) rm -f \"cilium-etcd-test-container\" 2> /dev/null\n\t$(QUIET)$(CONTAINER_ENGINE) run -d \\\n\t\t-e ETCD_UNSUPPORTED_ARCH=$(GOARCH) \\\n\t\t--name \"cilium-etcd-test-container\" \\\n\t\t-p 4002:4001 \\\n\t\t$(ETCD_IMAGE) \\\n\t\tetcd -name etcd0 \\\n\t\t-advertise-client-urls http://0.0.0.0:4001 \\\n\t\t-listen-client-urls http://0.0.0.0:4001 \\\n\t\t-listen-peer-urls http://0.0.0.0:2380 \\\n\t\t-initial-cluster-token etcd-cluster-1 \\\n\t\t-initial-cluster-state new\nendif\n\nstop-kvstores: ## Forcefully removes running kvstore components (etcd container) for integration tests.\nifeq ($(SKIP_KVSTORES),\"false\")\n\t$(QUIET)$(CONTAINER_ENGINE) rm -f \"cilium-etcd-test-container\"\nendif\n\ngenerate-cov: ## Generate HTML coverage report at coverage-all.html.\n\t-@# Remove generated code from coverage\nifneq ($(SKIP_COVERAGE),)\n\t@echo \"Skipping generate-cov because SKIP_COVERAGE is set.\"\nelse\n\t$(QUIET) grep -Ev '(^github.com/cilium/cilium/api/v1)|(generated.deepcopy.go)|(^github.com/cilium/cilium/pkg/k8s/client/)' \\\n\t\tcoverage.out > coverage.out.tmp\n\t$(QUIET)$(GO) tool cover -html=coverage.out.tmp -o=coverage-all.html\n\t$(QUIET) rm coverage.out.tmp\nendif\n\t@rmdir ./daemon/1 ./daemon/1_backup 2> /dev/null || true\n\nintegration-tests: start-kvstores ## Run Go tests including ones that are marked as integration tests.\n\t$(QUIET) $(MAKE) $(SUBMAKEOPTS) -C test/bpf/\n\t@$(ECHO_CHECK) running integration tests...\n\tINTEGRATION_TESTS=true $(GO_TEST) $(TEST_UNITTEST_LDFLAGS) $(TESTPKGS) $(GOTEST_BASE) $(GOTEST_COVER_OPTS) | $(GOTEST_FORMATTER)\n\t$(MAKE) generate-cov\n\t$(MAKE) stop-kvstores\n\nbench: start-kvstores ## Run benchmarks for Cilium integration-tests in the repository.\n\t$(GO_TEST) $(TEST_UNITTEST_LDFLAGS) $(GOTEST_BASE) $(BENCHFLAGS) $(TESTPKGS)\n\t$(MAKE) stop-kvstores\n\nbench-privileged: ## Run benchmarks for privileged tests.\n\tPRIVILEGED_TESTS=true $(GO_TEST) $(TEST_UNITTEST_LDFLAGS) $(GOTEST_BASE) $(BENCHFLAGS) $(TESTPKGS)\n\nclean-tags: ## Remove all the tags files from the repository.\n\t@$(ECHO_CLEAN) tags\n\t@-rm -f cscope.out cscope.in.out cscope.po.out cscope.files tags\n\n.PHONY: cscope.files\ncscope.files: ## Generate cscope.files with the list of all files to generate ctags for.\n\t@# Argument to -f must be double-quoted since shell removes backslashes that appear\n\t@# before newlines. Otherwise, backslashes will appear in the output file.\n\t@go list -f \"{{ \\$$p := .ImportPath }} \\\n\t\t{{- range .GoFiles }}{{ printf \\\"%s/%s\\n\\\" \\$$p . }}{{ end }} \\\n\t\t{{- range .TestGoFiles }}{{ printf \\\"%s/%s\\n\\\" \\$$p . }}{{ end }}\" ./... \\\n\t\t| sed 's#github.com/cilium/cilium/##g' | sort | uniq > cscope.files\n\n\t@echo \"$(BPF_SRCFILES)\" | sed 's/ /\\n/g' | sort >> cscope.files\n\ntags: cscope.files ## Generate tags for Go and BPF source files.\n\t@ctags -L cscope.files\n\tcscope -R -b -q\n\nclean-container: ## Perform `make clean` for each component required in cilium-agent container.\n\t-$(QUIET) for i in $(SUBDIRS_CILIUM_CONTAINER); do $(MAKE) $(SUBMAKEOPTS) -C $$i clean; done\n\nclean: ## Perform overall cleanup for Cilium.\n\t-$(QUIET) for i in $(SUBDIRS); do $(MAKE) $(SUBMAKEOPTS) -C $$i clean; done\n\nveryclean: ## Perform complete cleanup for container engine images(including build cache).\n\t-$(QUIET) $(CONTAINER_ENGINE) image prune -af\n\t-$(QUIET) $(CONTAINER_ENGINE) builder prune -af\n\ninstall-bpf: ## Copies over the BPF source files from bpf/ to /var/lib/cilium/bpf/\n\t$(QUIET)$(INSTALL) -m 0750 -d $(DESTDIR)$(LOCALSTATEDIR)/lib/cilium\n\t-rm -rf $(DESTDIR)$(LOCALSTATEDIR)/lib/cilium/bpf/*\n\t$(foreach bpfsrc,$(BPF_SRCFILES), $(INSTALL) -D -m 0644 $(bpfsrc) $(DESTDIR)$(LOCALSTATEDIR)/lib/cilium/$(bpfsrc);)\n\ninstall: install-bpf ## Performs install for all the Cilium sub components (daemon, operator, relay etc.)\n\t$(QUIET)$(INSTALL) -m 0755 -d $(DESTDIR)$(BINDIR)\n\tfor i in $(SUBDIRS); do $(MAKE) $(SUBMAKEOPTS) -C $$i install; done\n\ninstall-container: install-bpf ## Performs install for all components required for cilium-agent container.\n\t$(QUIET)$(INSTALL) -m 0755 -d $(DESTDIR)$(BINDIR)\n\tfor i in $(SUBDIRS_CILIUM_CONTAINER); do $(MAKE) $(SUBMAKEOPTS) -C $$i install; done\n\ninstall-container-binary: install-bpf ## Install binaries for all components required for cilium-agent container.\n\t$(QUIET)$(INSTALL) -m 0755 -d $(DESTDIR)$(BINDIR)\n\tfor i in $(SUBDIRS_CILIUM_CONTAINER); do $(MAKE) $(SUBMAKEOPTS) -C $$i install-binary; done\n\ninstall-bash-completion: ## Install bash completion for all components required for cilium-agent container.\n\t$(QUIET)$(INSTALL) -m 0755 -d $(DESTDIR)$(BINDIR)\n\tfor i in $(SUBDIRS_CILIUM_CONTAINER); do $(MAKE) $(SUBMAKEOPTS) -C $$i install-bash-completion; done\n\ninstall-container-binary-operator: ## Install binaries for all components required for cilium-operator container.\n\t$(QUIET)$(INSTALL) -m 0755 -d $(DESTDIR)$(BINDIR)\n\t$(MAKE) $(SUBMAKEOPTS) -C $(SUBDIR_OPERATOR_CONTAINER) install\n\ninstall-container-binary-operator-generic: ## Install binaries for all components required for cilium-operator generic variant container.\n\t$(QUIET)$(INSTALL) -m 0755 -d $(DESTDIR)$(BINDIR)\n\t$(MAKE) $(SUBMAKEOPTS) -C $(SUBDIR_OPERATOR_CONTAINER) install-generic\n\ninstall-container-binary-operator-aws: ## Install binaries for all components required for cilium-operator aws variant container.\n\t$(QUIET)$(INSTALL) -m 0755 -d $(DESTDIR)$(BINDIR)\n\t$(MAKE) $(SUBMAKEOPTS) -C $(SUBDIR_OPERATOR_CONTAINER) install-aws\n\ninstall-container-binary-operator-azure: ## Install binaries for all components required for cilium-operator azure variant container.\n\t$(QUIET)$(INSTALL) -m 0755 -d $(DESTDIR)$(BINDIR)\n\t$(MAKE) $(SUBMAKEOPTS) -C $(SUBDIR_OPERATOR_CONTAINER) install-azure\n\ninstall-container-binary-operator-alibabacloud: ## Install binaries for all components required for cilium-operator alibabacloud variant container.\n\t$(QUIET)$(INSTALL) -m 0755 -d $(DESTDIR)$(BINDIR)\n\t$(MAKE) $(SUBMAKEOPTS) -C $(SUBDIR_OPERATOR_CONTAINER) install-alibabacloud\n\ninstall-container-binary-hubble-relay:\n\t$(QUIET)$(INSTALL) -m 0755 -d $(DESTDIR)$(BINDIR)\n\t$(MAKE) $(SUBMAKEOPTS) -C $(SUBDIR_RELAY_CONTAINER) install-binary\n\n# Workaround for not having git in the build environment\n# Touch the file only if needed\nGIT_VERSION: force\n\t@if [ \"$(GIT_VERSION)\" != \"`cat 2>/dev/null GIT_VERSION`\" ] ; then echo \"$(GIT_VERSION)\" >GIT_VERSION; fi\n\ncheck_deps:\n\t@$(CILIUM_CLI) --help > /dev/null 2>&1 || ( echo \"ERROR: '$(CILIUM_CLI)' not found. Please install it.\" && exit 1)\n\ninclude Makefile.kind\n\n-include Makefile.docker\n\nmanifests: ## Generate K8s manifests e.g. CRD, RBAC etc.\n\tcontrib/scripts/k8s-manifests-gen.sh\n\n.PHONY: generate-apis\ngenerate-apis: generate-api generate-health-api generate-hubble-api generate-operator-api generate-kvstoremesh-api\n\ngenerate-api: api/v1/openapi.yaml ## Generate cilium-agent client, model and server code from openapi spec.\n\t@$(ECHO_GEN)api/v1/openapi.yaml\n\t-$(QUIET)$(SWAGGER) generate server -s server -a restapi \\\n\t\t-t api/v1 \\\n\t\t-f api/v1/openapi.yaml \\\n\t\t--default-scheme=unix \\\n\t\t-C api/v1/cilium-server.yml \\\n\t\t-r hack/spdx-copyright-header.txt\n\t-$(QUIET)$(SWAGGER) generate client -a restapi \\\n\t\t-t api/v1 \\\n\t\t-f api/v1/openapi.yaml \\\n\t\t-r hack/spdx-copyright-header.txt\n\t@# sort goimports automatically\n\t-$(QUIET)$(GO) run golang.org/x/tools/cmd/goimports -w ./api/v1/client ./api/v1/models ./api/v1/server\n\ngenerate-health-api: api/v1/health/openapi.yaml ## Generate cilium-health client, model and server code from openapi spec.\n\t@$(ECHO_GEN)api/v1/health/openapi.yaml\n\t-$(QUIET)$(SWAGGER) generate server -s server -a restapi \\\n\t\t-t api/v1 \\\n\t\t-t api/v1/health/ \\\n\t\t-f api/v1/health/openapi.yaml \\\n\t\t--default-scheme=unix \\\n\t\t-C api/v1/cilium-server.yml \\\n\t\t-r hack/spdx-copyright-header.txt\n\t-$(QUIET)$(SWAGGER) generate client -a restapi \\\n\t\t-t api/v1 \\\n\t\t-t api/v1/health/ \\\n\t\t-f api/v1/health/openapi.yaml \\\n\t\t-r hack/spdx-copyright-header.txt\n\t@# sort goimports automatically\n\t-$(QUIET)$(GO) run golang.org/x/tools/cmd/goimports -w ./api/v1/health\n\ngenerate-operator-api: api/v1/operator/openapi.yaml ## Generate cilium-operator client, model and server code from openapi spec.\n\t@$(ECHO_GEN)api/v1/operator/openapi.yaml\n\t-$(QUIET)$(SWAGGER) generate server -s server -a restapi \\\n\t\t-t api/v1 \\\n\t\t-t api/v1/operator/ \\\n\t\t-f api/v1/operator/openapi.yaml \\\n\t\t--default-scheme=http \\\n\t\t-C api/v1/cilium-server.yml \\\n\t\t-r hack/spdx-copyright-header.txt\n\t-$(QUIET)$(SWAGGER) generate client -a restapi \\\n\t\t-t api/v1 \\\n\t\t-t api/v1/operator/ \\\n\t\t-f api/v1/operator/openapi.yaml \\\n\t\t-r hack/spdx-copyright-header.txt\n\t@# sort goimports automatically\n\t-$(QUIET)$(GO) run golang.org/x/tools/cmd/goimports -w ./api/v1/operator\n\ngenerate-kvstoremesh-api: api/v1/kvstoremesh/openapi.yaml ## Generate kvstoremesh client, model and server code from openapi spec.\n\t@$(ECHO_GEN)api/v1/kvstoremesh/openapi.yaml\n\t-$(QUIET)$(SWAGGER) generate server -s server -a restapi \\\n\t\t-t api/v1 \\\n\t\t-t api/v1/kvstoremesh/ \\\n\t\t-f api/v1/kvstoremesh/openapi.yaml \\\n\t\t--default-scheme=http \\\n\t\t-C api/v1/cilium-server.yml \\\n\t\t-r hack/spdx-copyright-header.txt\n\t-$(QUIET)$(SWAGGER) generate client -a restapi \\\n\t\t-t api/v1 \\\n\t\t-t api/v1/kvstoremesh/ \\\n\t\t-f api/v1/kvstoremesh/openapi.yaml \\\n\t\t-r hack/spdx-copyright-header.txt\n\t@# sort goimports automatically\n\t-$(QUIET)$(GO) run golang.org/x/tools/cmd/goimports -w ./api/v1/kvstoremesh\n\ngenerate-hubble-api: api/v1/flow/flow.proto api/v1/peer/peer.proto api/v1/observer/observer.proto api/v1/relay/relay.proto ## Generate hubble proto Go sources.\n\t$(QUIET) $(MAKE) $(SUBMAKEOPTS) -C api/v1\n\ndefine generate_k8s_protobuf\n\t$(GO) install k8s.io/code-generator/cmd/go-to-protobuf/protoc-gen-gogo && \\\n\t$(GO) install golang.org/x/tools/cmd/goimports && \\\n\t$(GO) run k8s.io/code-generator/cmd/go-to-protobuf \\\n\t\t--apimachinery-packages='-k8s.io/apimachinery/pkg/util/intstr,$\\\n                                -k8s.io/apimachinery/pkg/api/resource,$\\\n                                -k8s.io/apimachinery/pkg/runtime/schema,$\\\n                                -k8s.io/apimachinery/pkg/runtime,$\\\n                                -k8s.io/apimachinery/pkg/apis/meta/v1,$\\\n                                -k8s.io/apimachinery/pkg/apis/meta/v1beta1'\\\n\t\t--drop-embedded-fields=\"github.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1.TypeMeta\" \\\n\t\t--proto-import=\"$$PWD\" \\\n\t\t--proto-import=\"$$PWD/vendor\" \\\n\t\t--proto-import=\"$$PWD/tools/protobuf\" \\\n\t\t--packages=$(subst $(newline),$(comma),$(1)) \\\n\t\t--go-header-file \"$$PWD/hack/custom-boilerplate.go.txt\" \\\n\t\t--output-dir=$$GOPATH/src\nendef\n\ndefine K8S_PROTO_PACKAGES\ngithub.com/cilium/cilium/pkg/k8s/slim/k8s/api/core/v1\ngithub.com/cilium/cilium/pkg/k8s/slim/k8s/api/discovery/v1\ngithub.com/cilium/cilium/pkg/k8s/slim/k8s/api/discovery/v1beta1\ngithub.com/cilium/cilium/pkg/k8s/slim/k8s/api/networking/v1\ngithub.com/cilium/cilium/pkg/k8s/slim/k8s/apis/apiextensions/v1\ngithub.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1\ngithub.com/cilium/cilium/pkg/k8s/slim/k8s/apis/meta/v1beta1\ngithub.com/cilium/cilium/pkg/k8s/slim/k8s/apis/util/intstr\nendef\n\n.PHONY: generate-k8s-api-local\ngenerate-k8s-api-local:\n\t$(ASSERT_CILIUM_MODULE)\n\n\t$(eval TMPDIR := $(shell mktemp -d -t cilium.tmpXXXXXXXX))\n\n\t$(QUIET) $(call generate_k8s_protobuf,${K8S_PROTO_PACKAGES},\"$(TMPDIR)\")\n\t$(QUIET) contrib/scripts/k8s-code-gen.sh \"$(TMPDIR)\"\n\n\t$(QUIET) rm -rf \"$(TMPDIR)\"\n\n.PHONY: generate-k8s-api\ngenerate-k8s-api: ## Generate Cilium k8s API client, deepcopy and deepequal Go sources.\n\tRUN_AS_NONROOT=1 contrib/scripts/builder.sh \\\n\t\t$(MAKE) -C /go/src/github.com/cilium/cilium/ generate-k8s-api-local\n\ncheck-k8s-clusterrole: ## Ensures there is no diff between preflight's clusterrole and runtime's clusterrole.\n\t./contrib/scripts/check-preflight-clusterrole.sh\n\n##@ Development\nvps: ## List all the running vagrant VMs.\n\tVBoxManage list runningvms\n\nreload: ## Reload cilium-agent and cilium-docker systemd service after installing built binaries.\n\tsudo systemctl stop cilium cilium-docker\n\tsudo $(MAKE) install\n\tsudo systemctl start cilium cilium-docker\n\tsleep 6\n\tcilium status\n\nrelease: ## Perform a Git release for Cilium.\n\t@echo \"Visit https://github.com/cilium/release/issues/new/choose to initiate the release process.\"\n\ngofmt: ## Run gofmt on Go source files in the repository.\n\t$(QUIET)$(GO) fmt ./...\n\ngovet: ## Run govet on Go source files in the repository.\n\t@$(ECHO_CHECK) vetting all packages...\n\t$(QUIET) $(GO_VET) ./...\n\ngolangci-lint: ## Run golangci-lint\nifneq (,$(findstring $(GOLANGCILINT_WANT_VERSION:v%=%),$(GOLANGCILINT_VERSION)))\n\t@$(ECHO_CHECK) golangci-lint $(GOLANGCI_LINT_ARGS)\n\t$(QUIET) golangci-lint run $(GOLANGCI_LINT_ARGS)\nelse\n\t$(QUIET) $(CONTAINER_ENGINE) run --rm -v `pwd`:/app -w /app docker.io/golangci/golangci-lint:$(GOLANGCILINT_WANT_VERSION)@$(GOLANGCILINT_IMAGE_SHA) golangci-lint run $(GOLANGCI_LINT_ARGS)\nendif\n\ngolangci-lint-fix: ## Run golangci-lint to automatically fix warnings\n\t$(QUIET)$(MAKE) golangci-lint GOLANGCI_LINT_ARGS=\"--fix\"\n\nlint: golangci-lint\n\nlint-fix: golangci-lint-fix\n\nlogging-subsys-field: ## Validate logrus subsystem field for logs in Go source code.\n\t@$(ECHO_CHECK) contrib/scripts/check-logging-subsys-field.sh\n\t$(QUIET) contrib/scripts/check-logging-subsys-field.sh\n\ncheck-microk8s: ## Validate if microk8s is ready to install cilium.\n\t@$(ECHO_CHECK) microk8s is ready...\n\t$(QUIET)microk8s.status >/dev/null \\\n\t\t|| (echo \"Error: Microk8s is not running\" && exit 1)\n\nLOCAL_IMAGE_TAG=local\nmicrok8s: export DOCKER_REGISTRY=localhost:32000\nmicrok8s: export LOCAL_AGENT_IMAGE=$(DOCKER_REGISTRY)/$(DOCKER_DEV_ACCOUNT)/cilium-dev:$(LOCAL_IMAGE_TAG)\nmicrok8s: export LOCAL_OPERATOR_IMAGE=$(DOCKER_REGISTRY)/$(DOCKER_DEV_ACCOUNT)/operator:$(LOCAL_IMAGE_TAG)\nmicrok8s: check-microk8s ## Build cilium-dev docker image and import to microk8s\n\t$(QUIET)$(MAKE) dev-docker-image DOCKER_IMAGE_TAG=$(LOCAL_IMAGE_TAG)\n\t@echo \"  DEPLOY image to microk8s ($(LOCAL_AGENT_IMAGE))\"\n\t$(QUIET)./contrib/scripts/microk8s-import.sh $(LOCAL_AGENT_IMAGE)\n\t$(QUIET)$(MAKE) dev-docker-operator-image DOCKER_IMAGE_TAG=$(LOCAL_IMAGE_TAG)\n\t@echo \"  DEPLOY image to microk8s ($(LOCAL_OPERATOR_IMAGE))\"\n\t$(QUIET)./contrib/scripts/microk8s-import.sh $(LOCAL_OPERATOR_IMAGE)\n\nprecheck: logging-subsys-field ## Peform build precheck for the source code.\nifeq ($(SKIP_K8S_CODE_GEN_CHECK),\"false\")\n\t@$(ECHO_CHECK) contrib/scripts/check-k8s-code-gen.sh\n\t$(QUIET) contrib/scripts/check-k8s-code-gen.sh\nendif\n\t@$(ECHO_CHECK) contrib/scripts/check-fmt.sh\n\t$(QUIET) contrib/scripts/check-fmt.sh\n\t@$(ECHO_CHECK) contrib/scripts/check-log-newlines.sh\n\t$(QUIET) contrib/scripts/check-log-newlines.sh\n\t@$(ECHO_CHECK) contrib/scripts/check-test-tags.sh\n\t$(QUIET) contrib/scripts/check-test-tags.sh\n\t@$(ECHO_CHECK) contrib/scripts/lock-check.sh\n\t$(QUIET) contrib/scripts/lock-check.sh\n\t@$(ECHO_CHECK) contrib/scripts/check-viper.sh\n\t$(QUIET) contrib/scripts/check-viper.sh\nifeq ($(SKIP_CUSTOMVET_CHECK),\"false\")\n\t@$(ECHO_CHECK) contrib/scripts/custom-vet-check.sh\n\t$(QUIET) contrib/scripts/custom-vet-check.sh\nendif\n\t@$(ECHO_CHECK) contrib/scripts/check-time.sh\n\t$(QUIET) contrib/scripts/check-time.sh\n\t@$(ECHO_CHECK) contrib/scripts/check-go-testdata.sh\n\t$(QUIET) contrib/scripts/check-go-testdata.sh\n\t@$(ECHO_CHECK) contrib/scripts/check-source-info.sh\n\t$(QUIET) contrib/scripts/check-source-info.sh\n\t@$(ECHO_CHECK) contrib/scripts/check-xfrmstate.sh\n\t$(QUIET) contrib/scripts/check-xfrmstate.sh\n\t@$(ECHO_CHECK) contrib/scripts/check-legacy-header-guard.sh\n\t$(QUIET) contrib/scripts/check-legacy-header-guard.sh\n\t@$(ECHO_CHECK) contrib/scripts/check-logrus.sh\n\t$(QUIET) contrib/scripts/check-logrus.sh\n\t@$(ECHO_CHECK) contrib/scripts/check-safenetlink.sh\n\t$(QUIET) contrib/scripts/check-safenetlink.sh\n\npprof-heap: ## Get Go pprof heap profile.\n\t$(QUIET)$(GO) tool pprof http://localhost:6060/debug/pprof/heap\n\npprof-profile: ## Get Go pprof profile.\n\t$(QUIET)$(GO) tool pprof http://localhost:6060/debug/pprof/profile\n\npprof-block: ## Get Go pprof block profile.\n\t$(QUIET)$(GO) tool pprof http://localhost:6060/debug/pprof/block\n\npprof-trace-5s: ## Get Go pprof trace for a duration of 5 seconds.\n\tcurl http://localhost:6060/debug/pprof/trace?seconds=5\n\npprof-mutex: ## Get Go pprof mutex profile.\n\t$(QUIET)$(GO) tool pprof http://localhost:6060/debug/pprof/mutex\n\nupdate-authors: ## Update AUTHORS file for Cilium repository.\n\t@echo \"Updating AUTHORS file...\"\n\t@echo \"The following people, in alphabetical order, have either authored or signed\" > AUTHORS\n\t@echo \"off on commits in the Cilium repository:\" >> AUTHORS\n\t@echo \"\" >> AUTHORS\n\t@contrib/scripts/extract_authors.sh >> AUTHORS\n\t@cat .authors.aux >> AUTHORS\n\ngenerate-crd-docs: ## Generate CRD List for documentation\n\t$(QUIET)$(GO) run ./tools/crdlistgen\n\ntest-docs: ## Build HTML documentation.\n\t$(MAKE) -C Documentation html\n\nrender-docs: ## Run server with live preview to render documentation.\n\t$(MAKE) -C Documentation live-preview\n\nmanpages: ## Generate manpage for Cilium CLI.\n\t-rm -r man\n\tmkdir -p man\n\tcilium cmdman -d man\n\ninstall-manpages: ## Install manpages the Cilium CLI.\n\tcp man/* /usr/local/share/man/man1/\n\tmandb\n\npostcheck: build ## Run Cilium build postcheck (update-cmdref, build documentation etc.).\n\t$(QUIET) SKIP_BUILD=true $(MAKE) $(SUBMAKEOPTS) -C Documentation check\n\nlicenses-all: ## Generate file with all the License from dependencies.\n\t@$(GO) run ./tools/licensegen > LICENSE.all || ( rm -f LICENSE.all ; false )\n\ndev-doctor: ## Run Cilium dev-doctor to validate local development environment.\n\t$(QUIET)$(GO) version 2>/dev/null || ( echo \"go not found, see https://golang.org/doc/install\" ; false )\n\t$(QUIET)$(GO) run ./tools/dev-doctor\n\nhelp: ## Display help for the Makefile, from https://www.thapaliya.com/en/writings/well-documented-makefiles/.\n\t$(call print_help_from_makefile)\n\t@# There is also a list of target we have to manually put the information about.\n\t@# These are templated targets.\n\t$(call print_help_line,\"docker-cilium-image\",\"Build cilium-agent docker image\")\n\t$(call print_help_line,\"dev-docker-image\",\"Build cilium-agent development docker image\")\n\t$(call print_help_line,\"dev-docker-image-debug\",\"Build cilium-agent development docker debug image\")\n\t$(call print_help_line,\"docker-plugin-image\",\"Build cilium-docker plugin image\")\n\t$(call print_help_line,\"docker-hubble-relay-image\",\"Build hubble-relay docker image\")\n\t$(call print_help_line,\"docker-clustermesh-apiserver-image\",\"Build docker image for Cilium clustermesh APIServer\")\n\t$(call print_help_line,\"docker-operator-image\",\"Build cilium-operator docker image\")\n\t$(call print_help_line,\"docker-operator-*-image\",\"Build platform specific cilium-operator images(alibabacloud, aws, azure, generic)\")\n\t$(call print_help_line,\"docker-operator-*-image-debug\",\"Build platform specific cilium-operator debug images(alibabacloud, aws, azure, generic)\")\n\t$(call print_help_line,\"docker-*-image-unstripped\",\"Build unstripped version of above docker images(cilium, hubble-relay, operator etc.)\")\n\n.PHONY: help clean clean-container dev-doctor force generate-api generate-health-api generate-operator-api generate-kvstoremesh-api generate-hubble-api install licenses-all veryclean run_bpf_tests run-builder\nforce :;\n\nBPF_TEST_FILE ?= \"\"\n\nrun_bpf_tests: ## Build and run the BPF unit tests using the cilium-builder container image.\n\tDOCKER_ARGS=--privileged contrib/scripts/builder.sh \\\n\t\t\"make\" \"-j$(shell nproc)\" \"-C\" \"bpf/tests/\" \"run\" \"BPF_TEST_FILE=$(BPF_TEST_FILE)\"\n\nrun-builder: ## Drop into a shell inside a container running the cilium-builder image.\n\tDOCKER_ARGS=-it contrib/scripts/builder.sh bash\n\n.PHONY: renovate-local\nrenovate-local: ## Run a local linter for the renovate configuration\n\t$(CONTAINER_ENGINE) run --rm -ti \\\n\t\t-e LOG_LEVEL=debug \\\n\t\t-e GITHUB_COM_TOKEN=\"$(gh auth token)\" \\\n\t\t-v /tmp:/tmp \\\n\t\t-v $(ROOT_DIR):/usr/src/app \\\n\t\tdocker.io/renovate/renovate:slim \\\n\t\t\trenovate --platform=local\n"
        },
        {
          "name": "Makefile.defs",
          "type": "blob",
          "size": 7.70703125,
          "content": "# Copyright Authors of Cilium\n# SPDX-License-Identifier: Apache-2.0\n\nSHELL := /usr/bin/env bash\n.SHELLFLAGS := -eu -o pipefail -c\n\n# define a function replacing spaces with commas in a list\nempty :=\nspace := $(empty) $(empty)\ncomma := ,\njoin-with-comma = $(subst $(space),$(comma),$(strip $1))\n\ndefine newline\n\n\nendef\n\nROOT_DIR := $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))\nRELATIVE_DIR := $(shell echo $(realpath .) | sed \"s;$(ROOT_DIR)[/]*;;\")\ninclude $(ROOT_DIR)/Makefile.quiet\n\nPREFIX?=/usr\nBINDIR?=$(PREFIX)/bin\nCNIBINDIR?=/opt/cni/bin\nCNICONFDIR?=/etc/cni/net.d\nLIBDIR?=$(PREFIX)/lib\nLOCALSTATEDIR?=/var\nRUNDIR?=/var/run\nCONFDIR?=/etc\n\nexport GO ?= go\nNATIVE_ARCH = $(shell GOARCH= $(GO) env GOARCH)\nexport GOARCH ?= $(NATIVE_ARCH)\n\nINSTALL = install\n\nCONTAINER_ENGINE?=docker\nDOCKER_FLAGS?=\nDOCKER_BUILD_FLAGS?=\n\n# use gsed if available, otherwise use sed.\n# gsed is needed for MacOS to make in-place replacement work correctly.\nSED ?= $(if $(shell command -v gsed),gsed,sed)\n\n# Set DOCKER_DEV_ACCOUNT with \"cilium\" by default\nifeq ($(DOCKER_DEV_ACCOUNT),)\n    DOCKER_DEV_ACCOUNT=cilium\nendif\n\nifneq ($(CI_BUILD),)\n    DOCKER_IMAGE_SUFFIX=-ci\n    DOCKER_IMAGE_TAG=$(shell git rev-parse HEAD)\nendif\n\n# Set DOCKER_IMAGE_TAG with \"latest\" by default\nifeq ($(DOCKER_IMAGE_TAG),)\n    DOCKER_IMAGE_TAG=latest\nendif\n\n# renovate: datasource=docker depName=gcr.io/etcd-development/etcd\nETCD_IMAGE_VERSION = v3.5.17\nETCD_IMAGE_SHA = sha256:15b1882f07aeaf357a48fbbcf35a566ae3ea110395704711488ea263fa86838d\nETCD_IMAGE=gcr.io/etcd-development/etcd:$(ETCD_IMAGE_VERSION)@$(ETCD_IMAGE_SHA)\n\nCILIUM_BUILDER_IMAGE=$(shell cat $(ROOT_DIR)/images/cilium/Dockerfile | grep \"ARG CILIUM_BUILDER_IMAGE=\" | cut -d\"=\" -f2)\n\nexport CILIUM_CLI ?= cilium\nexport KUBECTL ?= kubectl\n\n# Till the self-hosted renovate PR #30185 is merged, we might need to run the below\n# command locally for any version update.\n# make generate-api generate-health-api generate-hubble-api generate-operator-api generate-kvstoremesh-api\n# renovate: datasource=docker depName=quay.io/goswagger/swagger\nSWAGGER_VERSION = 0.31.0\nSWAGGER_IMAGE_SHA = sha256:5f36c14131ea569ad687ac546d6cdd2ccf0feff662eae5f5bf37d9d8a0b51cbc\nSWAGGER := $(CONTAINER_ENGINE) run -u $(shell id -u):$(shell id -g) --rm -v $(ROOT_DIR):$(ROOT_DIR) -w $(ROOT_DIR) --entrypoint swagger quay.io/goswagger/swagger:$(SWAGGER_VERSION)@$(SWAGGER_IMAGE_SHA)\n\n# go build/test/clean flags\n# these are declared here so they are treated explicitly\n# as non-immediate variables\nGO_BUILD_FLAGS ?=\nGO_TEST_FLAGS ?=\nGO_CLEAN_FLAGS ?=\nGO_BUILD_LDFLAGS ?=\n# go build/test -tags values\nGO_TAGS_FLAGS += osusergo\n\n# This is declared here as it is needed to change the covermode depending on if\n# RACE is specified.\nGOTEST_COVER_OPTS =\n\n# By default, just print go test output immediately to the terminal. If tparse\n# is installed, use it to format the output. Use -progress instead of -follow,\n# as the latter is too verbose for most of the test suite.\nGOTEST_FORMATTER ?= cat\nifneq ($(shell command -v tparse),)\n\tGOTEST_COVER_OPTS += -json\n\tGOTEST_FORMATTER = tparse\nifneq ($(V),0)\n\tGOTEST_FORMATTER += -follow\nendif\nendif\n\n# renovate: datasource=docker depName=golangci/golangci-lint\nGOLANGCILINT_WANT_VERSION = v1.62.2\nGOLANGCILINT_IMAGE_SHA = sha256:4e53bfe25ef2f1e14a95da42d694211080f40d118730541ce1513a83cf7587ec\nGOLANGCILINT_VERSION = $(shell golangci-lint version --format short 2>/dev/null)\n\nVERSION = $(shell cat $(dir $(lastword $(MAKEFILE_LIST)))/VERSION)\nVERSION_MAJOR = $(shell cat $(dir $(lastword $(MAKEFILE_LIST)))/VERSION | cut -d. -f1)\n# Use git only if in a Git repo\nifneq ($(wildcard $(dir $(lastword $(MAKEFILE_LIST)))/.git/HEAD),)\n    GIT_VERSION = $(shell git show -s --format='format:%h %aI')\nelse\n    GIT_VERSION = $(shell cat 2>/dev/null $(ROOT_DIR)/GIT_VERSION)\nendif\nFULL_BUILD_VERSION = $(VERSION) $(GIT_VERSION)\nGO_BUILD_LDFLAGS += -X \"github.com/cilium/cilium/pkg/version.ciliumVersion=$(FULL_BUILD_VERSION)\"\n\nifeq ($(NOSTRIP),)\n    # Note: these options will not remove annotations needed for stack\n    # traces, so panic backtraces will still be readable.\n    #\n    # -w: Omit the DWARF symbol table.\n    # -s: Omit the symbol table and debug information.\n    GO_BUILD_LDFLAGS += -s -w\nendif\n\nifneq ($(wildcard $(dir $(lastword $(MAKEFILE_LIST)))/images/cilium/Dockerfile),)\n    CILIUM_ENVOY_REF=$(shell sed -E -e 's/^ARG CILIUM_ENVOY_IMAGE=([^ ]*)/\\1/p;d' < $(ROOT_DIR)/images/cilium/Dockerfile)\n    CILIUM_ENVOY_SHA=$(shell echo $(CILIUM_ENVOY_REF) | sed -E -e 's/[^/]*\\/[^:]*:(.*-)?([^:@]*).*/\\2/p;d')\n    GO_BUILD_LDFLAGS += -X \"github.com/cilium/cilium/pkg/envoy.requiredEnvoyVersionSHA=$(CILIUM_ENVOY_SHA)\"\nendif\n\n# Use git only if in a Git repo, otherwise find the files from the file system\nBPF_SRCFILES_IGNORE = bpf/.gitignore\nifneq ($(wildcard $(dir $(lastword $(MAKEFILE_LIST)))/.git/HEAD),)\n    BPF_SRCFILES := $(shell git ls-files $(ROOT_DIR)/bpf/ | LC_ALL=C sort | tr \"\\n\" ' ')\nelse\n    # this line has to be in-sync with bpf/.gitignore, please note usage of make patterns like `%.i`\n    BPF_SRCFILES_IGNORE += bpf/%.i bpf/%.s bpf/.rebuild_all\n    BPF_SRCFILES := $(shell find $(ROOT_DIR)/bpf/ -type f | LC_ALL=C sort | tr \"\\n\" ' ')\nendif\n\n# ROOT_DIR can be either `../` or absolute path, each of these need to be stripped\nBPF_SRCFILES := $(filter-out $(BPF_SRCFILES_IGNORE),$(subst ../,,$(subst $(ROOT_DIR)/,,$(BPF_SRCFILES))))\n\nGO_BUILD_FLAGS += -mod=vendor\nGO_TEST_FLAGS += -mod=vendor -vet=all\nGO_CLEAN_FLAGS += -mod=vendor\n\nGO_BUILD = CGO_ENABLED=0 $(GO) build\n\n# Support CGO cross-compiling for amd64 and arm64 targets\nCGO_CC =\nCROSS_ARCH =\nifneq ($(GOARCH),$(NATIVE_ARCH))\n    CROSS_ARCH = $(GOARCH)\nendif\nifeq ($(CROSS_ARCH),arm64)\n    CGO_CC = CC=aarch64-linux-gnu-gcc\nelse ifeq ($(CROSS_ARCH),amd64)\n    CGO_CC = CC=x86_64-linux-gnu-gcc\nendif\nGO_BUILD_WITH_CGO = CGO_ENABLED=1 $(CGO_CC) $(GO) build\n\nifneq ($(RACE),)\n    GO_BUILD_FLAGS += -race\n    GO_TEST_FLAGS += -race\n    GOTEST_COVER_OPTS += -covermode=atomic\n\n    # GO_BUILD becomes GO_BUILD_WITH_CGO as `-race` requires CGO\n    GO_BUILD = $(GO_BUILD_WITH_CGO)\n    ifeq ($(LOCKDEBUG),)\n        LOCKDEBUG=1\n    endif\nelse\n    GOTEST_COVER_OPTS += -covermode=count\nendif\n\nifneq ($(LOCKDEBUG),)\n    GO_TAGS_FLAGS += lockdebug\nendif\n\nGO_BUILD_FLAGS += -ldflags '$(GO_BUILD_LDFLAGS) $(EXTRA_GO_BUILD_LDFLAGS)' -tags=$(call join-with-comma,$(GO_TAGS_FLAGS)) $(EXTRA_GO_BUILD_FLAGS)\nGO_TEST_FLAGS += -tags=$(call join-with-comma,$(GO_TAGS_FLAGS))\n\nifeq ($(NOOPT),1)\n    GO_BUILD_FLAGS += -gcflags=\"all=-N -l\"\nendif\n\nGO_BUILD += $(GO_BUILD_FLAGS)\nGO_BUILD_WITH_CGO += $(GO_BUILD_FLAGS)\n\nGO_TEST = CGO_ENABLED=0 $(GO) test $(GO_TEST_FLAGS)\nGO_CLEAN = $(GO) clean $(GO_CLEAN_FLAGS)\n\nGO_VET = $(GO) vet\nGO_LIST = $(GO) list\n\nHELM_TOOLBOX_VERSION ?= \"v1.1.0\"\nHELM_TOOLBOX_SHA ?= \"961693f182b9b456ed90e5274ac5df81e4af4343104e252666959cdf9570ce9e\"\nHELM_TOOLBOX_IMAGE ?= \"quay.io/cilium/helm-toolbox:$(HELM_TOOLBOX_VERSION)@sha256:$(HELM_TOOLBOX_SHA)\"\n\nYQ_VERSION ?= \"4.40.5\"\nYQ_SHA ?= \"32be61dc94d0acc44f513ba69d0fc05f1f92c2e760491f2a27e11fc13cde6327\"\nYQ_IMAGE ?= \"mikefarah/yq:$(YQ_VERSION)@sha256:$(YQ_SHA)\"\n\ndefine print_help_line\n  @printf \"  \\033[36m%-29s\\033[0m %s.\\n\" $(1) $(2)\nendef\n\ndefine print_help_from_makefile\n  @awk 'BEGIN {FS = \":.*##\"; printf \"\\nUsage:\\n  make \\033[36m<target>\\033[0m\\n\"} /^[a-zA-Z0-9][a-zA-Z0-9 _-]*:.*?##/ { split($$1, targets, \" \"); for (i in targets) { printf \"  \\033[36m%-28s\\033[0m %s\\n\", targets[i], $$2 } } /^##@/ { printf \"\\n\\033[1m%s\\033[0m\\n\", substr($$0, 5) } ' $(MAKEFILE_LIST)\nendef\n\n# Use to ensure the CWD, or any child of it, belongs to Cilium's go module.\nCILIUM_GO_MODULE = github.com/cilium/cilium\nCURRENT_GO_MODULE = $(shell go list -m)\ndefine ASSERT_CILIUM_MODULE\n\t$(if $(filter $(CILIUM_GO_MODULE), $(CURRENT_GO_MODULE)) ,, $(error \"Could not locate Cilium's go.mod file, are you in Cilium's repository?\"))\nendef\n"
        },
        {
          "name": "Makefile.docker",
          "type": "blob",
          "size": 7.166015625,
          "content": "# Copyright Authors of Cilium\n# SPDX-License-Identifier: Apache-2.0\n\nDOCKER_BUILDER := default\n\n# Export with value expected by docker\nexport DOCKER_BUILDKIT=1\n\n# Docker Buildx support. If ARCH is defined, a builder instance 'cross'\n# on the local node is configured for amd64 and arm64 platform targets.\n# Otherwise build on the current (typically default) builder for the host\n# platform only.\nifdef ARCH\n  # Default to multi-arch builds, always create the builder for all the platforms we support\n  DOCKER_PLATFORMS := linux/arm64,linux/amd64\n  DOCKER_BUILDER := $(shell docker buildx ls | grep -E -e \"[a-zA-Z0-9-]+ \\*\" | cut -d ' ' -f1)\n  ifneq (,$(filter $(DOCKER_BUILDER),default desktop-linux))\n    DOCKER_BUILDKIT_DRIVER :=\n    ifdef DOCKER_BUILDKIT_IMAGE\n      DOCKER_BUILDKIT_DRIVER := --driver docker-container --driver-opt image=$(DOCKER_BUILDKIT_IMAGE)\n    endif\n    BUILDER_SETUP := $(shell docker buildx create --platform $(DOCKER_PLATFORMS) $(DOCKER_BUILDKIT_DRIVER) --use)\n  endif\n  # Override default for a single platform\n  ifneq ($(ARCH),multi)\n    DOCKER_PLATFORMS := linux/$(ARCH)\n  endif\n  DOCKER_FLAGS += --push --platform $(DOCKER_PLATFORMS)\nelse\n  ifeq ($(findstring --output,$(DOCKER_FLAGS)),)\n    ifeq ($(findstring --push,$(DOCKER_FLAGS)),)\n      # ARCH, --output, and --push are not specified, build for the host platform without pushing, mimicking regular docker build\n      DOCKER_FLAGS += --load\n    endif\n  endif\nendif\nDOCKER_EXISTS := $(shell command -v docker 2>/dev/null)\nifdef DOCKER_EXISTS\nDOCKER_BUILDER := $(shell docker buildx ls | grep -E -e \"[a-zA-Z0-9-]+ \\*\" | cut -d ' ' -f1)\nendif\n\n##@ Docker Images\n.PHONY: builder-info\nbuilder-info: ## Print information about the docker builder that will be used for building images.\n\t@echo \"Using Docker Buildx builder \\\"$(DOCKER_BUILDER)\\\" with build flags \\\"$(DOCKER_FLAGS)\\\".\"\n\n# Generic rule for augmented .dockerignore files.\nGIT_IGNORE_FILES := $(shell find . -not -path \"./vendor*\" -name .gitignore -print)\n.PRECIOUS: %.dockerignore\n%.dockerignore: $(GIT_IGNORE_FILES) Makefile.docker\n\t@-mkdir -p $(dir $@)\n\t@echo \"/hack\" > $@\n\t@echo \".git\" >> $@\n\t@echo \"/Makefile.docker\" >> $@\n\t@echo $(dir $(GIT_IGNORE_FILES)) | tr ' ' '\\n' | xargs -P1 -I {DIR} -n1 sed \\\n\t\t-e '# Remove lines with white space, comments and files that must be passed to docker, \"$$\" due to make. #' \\\n\t\t\t-e '/^[[:space:]]*$$/d' -e '/^#/d' -e '/GIT_VERSION/d' \\\n\t\t-e '# Apply pattern in all directories if it contains no \"/\", keep \"!\" up front. #' \\\n\t\t\t-e '/^[^!/][^/]*$$/s<^<**/<' -e '/^![^/]*$$/s<^!<!**/<' \\\n\t\t-e '# Prepend with the directory name, keep \"!\" up front. #' \\\n\t\t\t-e '/^[^!]/s<^<{DIR}<' -e '/^!/s<^!<!{DIR}<'\\\n\t\t-e '# Remove leading \"./\", keep \"!\" up front. #' \\\n\t\t\t-e 's<^\\./<<' -e 's<^!\\./<!<' \\\n\t\t-e '# Append newline to the last line if missing. GNU sed does not do this automatically. #' \\\n\t\t\t-e '$$a\\' \\\n\t\t{DIR}.gitignore >> $@\n\nDOCKER_REGISTRY ?= quay.io\nifeq ($(findstring /,$(DOCKER_DEV_ACCOUNT)),/)\n    # DOCKER_DEV_ACCOUNT already contains '/', assume it specifies a registry\n    IMAGE_REPOSITORY := $(DOCKER_DEV_ACCOUNT)\nelse\n    IMAGE_REPOSITORY := $(DOCKER_REGISTRY)/$(DOCKER_DEV_ACCOUNT)\nendif\n\n#\n# Template for Docker images. Paramaters are:\n# $(1) image target name\n# $(2) Dockerfile path\n# $(3) image name stem (e.g., cilium, cilium-operator, etc)\n# $(4) image tag\n# $(5) target\n#\ndefine DOCKER_IMAGE_TEMPLATE\n.PHONY: $(1)\n$(1): GIT_VERSION $(2) $(2).dockerignore GIT_VERSION builder-info\n\t$(ECHO_DOCKER)$(2) $(IMAGE_REPOSITORY)/$(IMAGE_NAME)$${UNSTRIPPED}:$(4)\n\t$(eval IMAGE_NAME := $(subst %,$$$$*,$(3)))\nifeq ($(5),debug)\n\t@export NOSTRIP=1\nendif\n\t$(QUIET) $(CONTAINER_ENGINE) buildx build -f $(subst %,$$*,$(2)) \\\n\t\t$(DOCKER_BUILD_FLAGS) $(DOCKER_FLAGS) \\\n\t\t$(if $(BASE_IMAGE),--build-arg BASE_IMAGE=$(BASE_IMAGE),) \\\n\t\t--build-arg MODIFIERS=\"NOSTRIP=$${NOSTRIP} NOOPT=${NOOPT} LOCKDEBUG=${LOCKDEBUG} RACE=${RACE} V=${V} LIBNETWORK_PLUGIN=${LIBNETWORK_PLUGIN} ${ADDITIONAL_MODIFIERS}\" \\\n\t\t--build-arg CILIUM_SHA=$(firstword $(GIT_VERSION)) \\\n\t\t--build-arg OPERATOR_VARIANT=$(IMAGE_NAME) \\\n\t\t--build-arg DEBUG_HOLD=$(DEBUG_HOLD) \\\n\t\t--target $(5) \\\n\t\t-t $(IMAGE_REPOSITORY)/$(IMAGE_NAME)$${UNSTRIPPED}$(DOCKER_IMAGE_SUFFIX):$(4) .\nifneq ($(KIND_LOAD),)\n\tsleep 1\n\tkind load docker-image $(IMAGE_REPOSITORY)/$(IMAGE_NAME)$${UNSTRIPPED}$(DOCKER_IMAGE_SUFFIX):$(4)\nelse\n    ifeq ($(findstring --push,$(DOCKER_FLAGS)),)\n\t@echo 'Define \"DOCKER_FLAGS=--push\" to push the build results.'\n    else\n\t$(CONTAINER_ENGINE) buildx imagetools inspect $(IMAGE_REPOSITORY)/$(IMAGE_NAME)$${UNSTRIPPED}$(DOCKER_IMAGE_SUFFIX):$(4)\n\t@echo '^^^ Images pushed, multi-arch manifest should be above. ^^^'\n    endif\nendif\n\n$(1)-unstripped: NOSTRIP=1\n$(1)-unstripped: UNSTRIPPED=-unstripped\n$(1)-unstripped: $(1)\n\t@echo\nendef\n\n# docker-cilium-image\n$(eval $(call DOCKER_IMAGE_TEMPLATE,docker-cilium-image,images/cilium/Dockerfile,cilium,$(DOCKER_IMAGE_TAG),release))\n\n# dev-docker-image\n$(eval $(call DOCKER_IMAGE_TEMPLATE,dev-docker-image,images/cilium/Dockerfile,cilium-dev,$(DOCKER_IMAGE_TAG),release))\n\n# dev-docker-image-debug\n$(eval $(call DOCKER_IMAGE_TEMPLATE,dev-docker-image-debug,images/cilium/Dockerfile,cilium-dev,$(DOCKER_IMAGE_TAG),debug))\n\n# docker-plugin-image\n$(eval $(call DOCKER_IMAGE_TEMPLATE,docker-plugin-image,images/cilium-docker-plugin/Dockerfile,docker-plugin,$(DOCKER_IMAGE_TAG),release))\n\n# docker-hubble-relay-image\n$(eval $(call DOCKER_IMAGE_TEMPLATE,docker-hubble-relay-image,images/hubble-relay/Dockerfile,hubble-relay,$(DOCKER_IMAGE_TAG),release))\n\n# docker-clustermesh-apiserver-image\n$(eval $(call DOCKER_IMAGE_TEMPLATE,docker-clustermesh-apiserver-image,images/clustermesh-apiserver/Dockerfile,clustermesh-apiserver,$(DOCKER_IMAGE_TAG),release))\n\n# docker-operator-images.\n# We eat the ending of \"operator\" in to the stem ('%') to allow this pattern\n# to build also 'docker-operator-image', where the stem would be empty otherwise.\n$(eval $(call DOCKER_IMAGE_TEMPLATE,docker-opera%-image,images/operator/Dockerfile,opera%,$(DOCKER_IMAGE_TAG),release))\n$(eval $(call DOCKER_IMAGE_TEMPLATE,dev-docker-opera%-image,images/operator/Dockerfile,opera%,$(DOCKER_IMAGE_TAG),release))\n$(eval $(call DOCKER_IMAGE_TEMPLATE,dev-docker-opera%-image-debug,images/operator/Dockerfile,opera%,$(DOCKER_IMAGE_TAG),debug))\n\n#\n# docker-*-all targets are mainly used from the CI\n#\ndocker-images-all: docker-cilium-image docker-plugin-image docker-hubble-relay-image docker-clustermesh-apiserver-image docker-operator-images-all ## Build all Cilium related docker images.\n\ndocker-images-all-unstripped: docker-cilium-image-unstripped docker-plugin-image-unstripped docker-hubble-relay-image-unstripped docker-clustermesh-apiserver-image-unstripped docker-operator-images-all-unstripped ## Build all Cilium related unstripped docker images.\n\ndocker-operator-images-all: docker-operator-image docker-operator-aws-image docker-operator-azure-image docker-operator-alibabacloud-image docker-operator-generic-image ## Build all variants of cilium-operator images.\n\ndocker-operator-images-all-unstripped: docker-operator-image-unstripped docker-operator-aws-image-unstripped docker-operator-azure-image-unstripped docker-operator-alibabacloud-image-unstripped docker-operator-generic-image-unstripped ## Build all variants of unstripped cilium-operator images.\n"
        },
        {
          "name": "Makefile.kind",
          "type": "blob",
          "size": 23.4951171875,
          "content": "# Copyright Authors of Cilium\n# SPDX-License-Identifier: Apache-2.0\n\n##@ Development (Kind)\n\n.PHONY: kind\nkind: ## Create a kind cluster for Cilium development.\n\t$(QUIET)SED=$(SED) ./contrib/scripts/kind.sh\n\n.PHONY: kind-egressgw\nkind-egressgw: ## Create a kind cluster for egress gateway Cilium development.\n\t$(QUIET)SED=$(SED) WORKERS=3 ./contrib/scripts/kind.sh\n\tkubectl patch node kind-worker3 --type=json -p='[{\"op\":\"add\",\"path\":\"/metadata/labels/cilium.io~1no-schedule\",\"value\":\"true\"}]'\n\n.PHONY: kind-down\nkind-down: ## Destroy a kind cluster for Cilium development.\n\t$(QUIET)./contrib/scripts/kind-down.sh\n\n.PHONY: kind-clustermesh\nkind-clustermesh: ## Create two kind clusters for clustermesh development.\n\t@echo \" If you have problems with too many open file, check https://kind.sigs.k8s.io/docs/user/known-issues/#pod-errors-due-to-too-many-open-files\"\n\t$(QUIET) CLUSTER_NAME=clustermesh1 IPFAMILY=dual PODSUBNET=10.1.0.0/16,fd00:10:1::/48 SERVICESUBNET=172.20.1.0/24,fd00:10:f1::/112 ./contrib/scripts/kind.sh\n\t$(QUIET) CLUSTER_NAME=clustermesh2 AGENTPORTPREFIX=236 OPERATORPORTPREFIX=237 IPFAMILY=dual PODSUBNET=10.2.0.0/16,fd00:10:2::/48 SERVICESUBNET=172.20.2.0/24,fd00:10:f2::/112 ./contrib/scripts/kind.sh\n\n.PHONY: kind-clustermesh-down\nkind-clustermesh-down: ## Destroy kind clusters for clustermesh development.\n\t$(QUIET)./contrib/scripts/kind-down.sh clustermesh1 clustermesh2\n\n.PHONY: kind-clustermesh-ready\nkind-clustermesh-ready: ## Check if both kind clustermesh clusters exist\n\t@$(ECHO_CHECK) clustermesh kind is ready...\n\t@kind get clusters 2>&1 | grep \"clustermesh1\" \\\n\t\t&& exit 0 || exit 1\n\t@kind get clusters 2>&1 | grep \"clustermesh2\" \\\n\t\t&& exit 0 || exit 1\n\n.PHONY: kind-bgp-v4\nkind-bgp-v4:\n\t$(QUIET) $(MAKE) -C contrib/containerlab/bgp-cplane-dev-v4 deploy\n\n.PHONY: kind-bgp-v4-down\nkind-bgp-v4-down:\n\t$(QUIET) $(MAKE) -C contrib/containerlab/bgp-cplane-dev-v4 destroy\n\n.PHONY: kind-bgp-v4-apply-policy\nkind-bgp-v4-apply-policy:\n\t$(QUIET) $(MAKE) -C contrib/containerlab/bgp-cplane-dev-v4 apply-policy\n\n.PHONY: kind-bgp-v6\nkind-bgp-v6:\n\t$(QUIET) $(MAKE) -C contrib/containerlab/bgp-cplane-dev-v6 deploy\n\n.PHONY: kind-bgp-v6-down\nkind-bgp-v6-down:\n\t$(QUIET) $(MAKE) -C contrib/containerlab/bgp-cplane-dev-v6 destroy\n\n.PHONY: kind-bgp-v6-apply-policy\nkind-bgp-v6-apply-policy:\n\t$(QUIET) $(MAKE) -C contrib/containerlab/bgp-cplane-dev-v6 apply-policy\n\n.PHONY: kind-bgp-dual\nkind-bgp-dual:\n\t$(QUIET) $(MAKE) -C contrib/containerlab/bgp-cplane-dev-dual deploy\n\n.PHONY: kind-bgp-dual-down\nkind-bgp-dual-down:\n\t$(QUIET) $(MAKE) -C contrib/containerlab/bgp-cplane-dev-dual destroy\n\n.PHONY: kind-bgp-dual-apply-policy\nkind-bgp-dual-apply-policy:\n\t$(QUIET) $(MAKE) -C contrib/containerlab/bgp-cplane-dev-dual apply-policy\n\n# Template for kind environment for a target. Parameters are:\n# $(1) Makefile target name\ndefine KIND_ENV\n.PHONY: $(1)\n$(1): export DOCKER_REGISTRY=localhost:5000\n$(1): export LOCAL_AGENT_IMAGE=$$(DOCKER_REGISTRY)/$$(DOCKER_DEV_ACCOUNT)/cilium-dev:$$(LOCAL_IMAGE_TAG)\n$(1): export LOCAL_OPERATOR_IMAGE=$$(DOCKER_REGISTRY)/$$(DOCKER_DEV_ACCOUNT)/operator-generic:$$(LOCAL_IMAGE_TAG)\n$(1): export LOCAL_CLUSTERMESH_IMAGE=$$(DOCKER_REGISTRY)/$$(DOCKER_DEV_ACCOUNT)/clustermesh-apiserver:$$(LOCAL_IMAGE_TAG)\nendef\n\n$(eval $(call KIND_ENV,kind-clustermesh-images))\nkind-clustermesh-images: kind-clustermesh-ready kind-build-clustermesh-apiserver kind-build-image-agent kind-build-image-operator ## Builds images and imports them into clustermesh clusters\n\t$(QUIET)kind load docker-image $(LOCAL_CLUSTERMESH_IMAGE) --name clustermesh1\n\t$(QUIET)kind load docker-image $(LOCAL_CLUSTERMESH_IMAGE) --name clustermesh2\n\t$(QUIET)kind load docker-image $(LOCAL_AGENT_IMAGE) --name clustermesh1\n\t$(QUIET)kind load docker-image $(LOCAL_AGENT_IMAGE) --name clustermesh2\n\t$(QUIET)kind load docker-image $(LOCAL_OPERATOR_IMAGE) --name clustermesh1\n\t$(QUIET)kind load docker-image $(LOCAL_OPERATOR_IMAGE) --name clustermesh2\n\n.PHONY: kind-connect-clustermesh ## Connect the ClusterMesh clusters.\nkind-connect-clustermesh: check_deps kind-clustermesh-ready\n\t@echo \"  CONNECT the two clusters\"\n\t$(CILIUM_CLI) clustermesh connect --context kind-clustermesh1 --destination-context kind-clustermesh2\n\t$(CILIUM_CLI) clustermesh status --context kind-clustermesh1 --wait\n\t$(CILIUM_CLI) clustermesh status --context kind-clustermesh2 --wait\n\nENABLE_KVSTOREMESH ?= true\n$(eval $(call KIND_ENV,kind-install-cilium-clustermesh))\nkind-install-cilium-clustermesh: check_deps kind-clustermesh-ready ## Install a local Cilium version into the clustermesh clusters and enable clustermesh.\n\t@echo \"  INSTALL cilium on clustermesh1 cluster\"\n\t-$(CILIUM_CLI) --context=kind-clustermesh1 uninstall >/dev/null\n\t$(CILIUM_CLI) --context=kind-clustermesh1 install \\\n\t\t--chart-directory=$(ROOT_DIR)/install/kubernetes/cilium \\\n\t\t--values=$(ROOT_DIR)/contrib/testing/kind-clustermesh1.yaml \\\n\t\t--set=image.override=$(LOCAL_AGENT_IMAGE) \\\n\t\t--set=operator.image.override=$(LOCAL_OPERATOR_IMAGE) \\\n\t\t--set=clustermesh.apiserver.image.override=$(LOCAL_CLUSTERMESH_IMAGE) \\\n\t\t--set=clustermesh.apiserver.kvstoremesh.enabled=$(ENABLE_KVSTOREMESH)\n\n\t@echo \"  INSTALL cilium on clustermesh2 cluster\"\n\t-$(CILIUM_CLI) --context=kind-clustermesh2 uninstall >/dev/null\n\t$(KUBECTL) --context=kind-clustermesh1 get secret -n kube-system cilium-ca -o yaml | \\\n\t\t$(KUBECTL) --context=kind-clustermesh2 replace --force -f -\n\t$(CILIUM_CLI) --context=kind-clustermesh2 install \\\n\t\t--chart-directory=$(ROOT_DIR)/install/kubernetes/cilium \\\n\t\t--values=$(ROOT_DIR)/contrib/testing/kind-clustermesh2.yaml \\\n\t\t--set=image.override=$(LOCAL_AGENT_IMAGE) \\\n\t\t--set=operator.image.override=$(LOCAL_OPERATOR_IMAGE) \\\n\t\t--set=clustermesh.apiserver.image.override=$(LOCAL_CLUSTERMESH_IMAGE) \\\n\t\t--set=clustermesh.apiserver.kvstoremesh.enabled=$(ENABLE_KVSTOREMESH)\n\n\t$(MAKE) kind-connect-clustermesh\n\n.PHONY: kind-install-cilium-clustermesh-fast\nkind-install-cilium-clustermesh-fast: check_deps kind-clustermesh-ready ## \"Fast\" Install a local Cilium version using volume-mounted binaries into the ClusterMesh clusters and enable ClusterMesh.\n\t@echo \"  INSTALL cilium on clustermesh1 cluster\"\n\tdocker pull quay.io/cilium/cilium-ci:latest\n\tkind load docker-image --name clustermesh1 quay.io/cilium/cilium-ci:latest\n\t-$(CILIUM_CLI) --context=kind-clustermesh1 uninstall >/dev/null\n\t$(CILIUM_CLI) --context=kind-clustermesh1 install \\\n\t\t--chart-directory=$(ROOT_DIR)/install/kubernetes/cilium \\\n\t\t--values=$(ROOT_DIR)/contrib/testing/kind-clustermesh1.yaml \\\n\t\t--values=$(ROOT_DIR)/contrib/testing/kind-fast.yaml \\\n\t\t--set=clustermesh.apiserver.kvstoremesh.enabled=$(ENABLE_KVSTOREMESH)\n\n\t@echo \"  INSTALL cilium on clustermesh2 cluster\"\n\tkind load docker-image --name clustermesh2 quay.io/cilium/cilium-ci:latest\n\t-$(CILIUM_CLI) --context=kind-clustermesh2 uninstall >/dev/null\n\t$(KUBECTL) --context=kind-clustermesh1 get secret -n kube-system cilium-ca -o yaml | \\\n\t\t$(KUBECTL) --context=kind-clustermesh2 replace --force -f -\n\t$(CILIUM_CLI) --context=kind-clustermesh2 install \\\n\t\t--chart-directory=$(ROOT_DIR)/install/kubernetes/cilium \\\n\t\t--values=$(ROOT_DIR)/contrib/testing/kind-clustermesh2.yaml \\\n\t\t--values=$(ROOT_DIR)/contrib/testing/kind-fast.yaml \\\n\t\t--set=clustermesh.apiserver.kvstoremesh.enabled=$(ENABLE_KVSTOREMESH)\n\n\t$(MAKE) kind-image-fast\n\t$(MAKE) kind-connect-clustermesh\n\nKIND_CLUSTER_NAME ?= $(shell kind get clusters -q | head -n1)\n\n.PHONY: kind-ready\nkind-ready:\n\t@$(ECHO_CHECK) kind-ready\n\t@if [ -n \"$(shell kind get clusters -q)\" ]; then echo \"kind is ready\"; else echo \"kind not ready\"; exit 1; fi\n\n$(eval $(call KIND_ENV,kind-build-image-agent))\nkind-build-image-agent: ## Build cilium-dev docker image\n\t$(QUIET)$(MAKE) dev-docker-image$(DEBUGGER_SUFFIX) DOCKER_IMAGE_TAG=$(LOCAL_IMAGE_TAG)\n\n$(eval $(call KIND_ENV,kind-image-agent))\nkind-image-agent: .SHELLFLAGS=-c\nkind-image-agent: kind-ready kind-build-image-agent ## Build cilium-dev docker image and import it into kind.\n\t$(QUIET)kind load docker-image $(LOCAL_AGENT_IMAGE) -n $(KIND_CLUSTER_NAME); \\\n\t[ $$? -eq 0 ] || $(QUIET)kind load docker-image $(LOCAL_AGENT_IMAGE) -n $(KIND_CLUSTER_NAME)\n\n$(eval $(call KIND_ENV,kind-build-image-operator))\nkind-build-image-operator: ## Build cilium-operator-dev docker image\n\t$(QUIET)$(MAKE) dev-docker-operator-generic-image$(DEBUGGER_SUFFIX) DOCKER_IMAGE_TAG=$(LOCAL_IMAGE_TAG)\n\n$(eval $(call KIND_ENV,kind-image-operator))\nkind-image-operator: .SHELLFLAGS=-c\nkind-image-operator: kind-ready kind-build-image-operator ## Build cilium-operator-dev docker image and import it into kind.\n\t$(QUIET)kind load docker-image $(LOCAL_OPERATOR_IMAGE) -n $(KIND_CLUSTER_NAME); \\\n\t[ $$? -eq 0 ] || $(QUIET)kind load docker-image $(LOCAL_OPERATOR_IMAGE) -n $(KIND_CLUSTER_NAME)\n\n$(eval $(call KIND_ENV,kind-build-clustermesh-apiserver))\nkind-build-clustermesh-apiserver: ## Build cilium-clustermesh-apiserver docker image\n\t$(QUIET)$(MAKE) docker-clustermesh-apiserver-image DOCKER_IMAGE_TAG=$(LOCAL_IMAGE_TAG)\n\n.PHONY: kind-image\nkind-image: ## Build cilium and operator images and import them into kind.\n\t$(MAKE) kind-image-agent\n\t$(MAKE) kind-image-operator\n\ndefine KIND_VALUES_FAST_FILES\n--helm-values=$(ROOT_DIR)/contrib/testing/kind-common.yaml \\\n--helm-values=$(ROOT_DIR)/contrib/testing/kind-fast.yaml\nendef\n\nifneq (\"$(wildcard $(ROOT_DIR)/contrib/testing/kind-custom.yaml)\",\"\")\n\tKIND_VALUES_FAST_FILES := $(KIND_VALUES_FAST_FILES) --helm-values=$(ROOT_DIR)/contrib/testing/kind-custom.yaml\nendif\n\nifdef ADDITIONAL_KIND_VALUES_FILE\n\tKIND_VALUES_FAST_FILES := $(KIND_VALUES_FAST_FILES) --helm-values=$(ROOT_DIR)/$(ADDITIONAL_KIND_VALUES_FILE)\nendif\n\n.PHONY: kind-install-cilium-fast\nkind-install-cilium-fast: .SHELLFLAGS=-c\nkind-install-cilium-fast: check_deps kind-ready ## \"Fast\" Install a local Cilium version using volume-mounted binaries into all clusters.\n\t@echo \"  INSTALL cilium\"\n\tdocker pull quay.io/cilium/cilium-ci:latest\n\tfor cluster_name in $${KIND_CLUSTERS:-$(shell kind get clusters)}; do \\\n\t\tkind load docker-image --name $$cluster_name quay.io/cilium/cilium-ci:latest; \\\n\t\t[ $$? -eq 0 ] || kind load docker-image --name $$cluster_name quay.io/cilium/cilium-ci:latest; \\\n\t\t$(CILIUM_CLI) --context=kind-$$cluster_name uninstall >/dev/null 2>&1 || true; \\\n\t\t$(CILIUM_CLI) install --context=kind-$$cluster_name \\\n\t\t\t--chart-directory=$(ROOT_DIR)/install/kubernetes/cilium \\\n\t\t\t$(KIND_VALUES_FAST_FILES) \\\n\t\t\t--version= >/dev/null 2>&1 & \\\n\tdone\n\n.PHONY: build-cli\nbuild-cli: ## Build cilium cli binary\n\t$(QUIET)$(MAKE) -C cilium-dbg GOOS=linux\n\n.PHONY: build-agent\nbuild-agent: ## Build cilium daemon binary\n\t$(QUIET)$(MAKE) -C daemon GOOS=linux\n\n.PHONY: build-operator\nbuild-operator: ## Build cilium operator binary\n\t$(QUIET)$(MAKE) -C operator cilium-operator-generic GOOS=linux\n\n.PHONY: build-clustermesh-apiserver\nbuild-clustermesh-apiserver: ## Build cilium clustermesh-apiserver binary\n\t$(QUIET)$(MAKE) -C clustermesh-apiserver  GOOS=linux\n\n.PHONY: build-hubble-cli\nbuild-hubble-cli: ## Build hubble cli binary\n\t$(QUIET)$(MAKE) -C hubble GOOS=linux\n\n.PHONY: build-bugtool\nbuild-bugtool: ## Build bugtool binary\n\t$(QUIET)$(MAKE) -C bugtool GOOS=linux\n\n.PHONY: kind-image-fast-agent\nkind-image-fast-agent: kind-ready build-cli build-agent build-hubble-cli build-bugtool ## Build cilium cli, daemon binaries, and hubble cli. Copy the bins and bpf files to kind nodes.\n\t$(eval dst:=/cilium-binaries)\n\tfor cluster_name in $${KIND_CLUSTERS:-$(shell kind get clusters)}; do \\\n\t\tfor node_name in $$(kind get nodes -n \"$$cluster_name\"); do \\\n\t\t\tdocker exec $${node_name} mkdir -p \"${dst}\"; \\\n\t\t\t\\\n\t\t\tdocker exec $${node_name} rm -rf \"${dst}/var/lib/cilium\"; \\\n\t\t\tdocker exec $${node_name} mkdir -p \"${dst}/var/lib/cilium\"; \\\n\t\t\tdocker cp \"./bpf/\" $${node_name}:\"${dst}/var/lib/cilium/bpf\"; \\\n\t\t\tdocker exec $${node_name} find \"${dst}/var/lib/cilium/bpf\" -type f -exec chmod 0644 {} + ;\\\n\t\t\t\\\n\t\t\tdocker exec $${node_name} rm -f \"${dst}/cilium-dbg\"; \\\n\t\t\tdocker cp \"./cilium-dbg/cilium-dbg\" $${node_name}:\"${dst}\"; \\\n\t\t\tdocker exec $${node_name} chmod +x \"${dst}/cilium-dbg\"; \\\n\t\t\t\\\n\t\t\tdocker exec $${node_name} rm -f \"${dst}/cilium-agent\"; \\\n\t\t\tdocker cp \"./daemon/cilium-agent\" $${node_name}:\"${dst}\"; \\\n\t\t\tdocker exec $${node_name} chmod +x \"${dst}/cilium-agent\"; \\\n\t\t\t\\\n\t\t\tdocker exec $${node_name} rm -f \"${dst}/hubble\"; \\\n\t\t\tdocker cp \"./hubble/hubble\" $${node_name}:\"${dst}\"; \\\n\t\t\tdocker exec $${node_name} chmod +x \"${dst}/hubble\"; \\\n\t\t\t\\\n\t\t\tdocker exec $${node_name} rm -f \"${dst}/cilium-bugtool\"; \\\n\t\t\tdocker cp \"./bugtool/cilium-bugtool\" $${node_name}:\"${dst}\"; \\\n\t\t\tdocker exec $${node_name} chmod +x \"${dst}/cilium-bugtool\"; \\\n\t\tdone; \\\n\t\tkubectl --context=kind-$${cluster_name} delete pods -n kube-system -l k8s-app=cilium --force; \\\n\tdone\n\n.PHONY: kind-image-fast-operator\nkind-image-fast-operator: kind-ready build-operator ## Build cilium operator binary and copy it to all kind nodes.\n\t$(eval dst:=/cilium-binaries)\n\tfor cluster_name in $${KIND_CLUSTERS:-$(shell kind get clusters)}; do \\\n\t\tfor node_name in $$(kind get nodes -n \"$$cluster_name\"); do \\\n\t\t\tdocker exec $${node_name} mkdir -p \"${dst}\"; \\\n\t\t\t\\\n\t\t\tdocker exec $${node_name} rm -f \"${dst}/cilium-operator-generic\"; \\\n\t\t\tdocker cp \"./operator/cilium-operator-generic\" $${node_name}:\"${dst}\"; \\\n\t\t\tdocker exec $${node_name} chmod +x \"${dst}/cilium-operator-generic\"; \\\n\t\tdone; \\\n\tkubectl --context=kind-$${cluster_name} delete pods -n kube-system -l name=cilium-operator --force; \\\n\tdone\n\n.PHONY: kind-image-fast-clustermesh-apiserver\nkind-image-fast-clustermesh-apiserver: kind-ready build-clustermesh-apiserver ## Build clustermesh-apiserver binary and copy it to all kind nodes.\n\t$(eval dst:=/cilium-binaries)\n\tfor cluster_name in $${KIND_CLUSTERS:-$(shell kind get clusters)}; do \\\n\t\tfor node_name in $$(kind get nodes -n \"$$cluster_name\"); do \\\n\t\t\tdocker exec $${node_name} mkdir -p \"${dst}\"; \\\n\t\t\t\\\n\t\t\tdocker exec $${node_name} rm -f \"${dst}/clustermesh-apiserver\"; \\\n\t\t\tdocker cp \"./clustermesh-apiserver/clustermesh-apiserver\" $${node_name}:\"${dst}\"; \\\n\t\t\tdocker exec $${node_name} chmod +x \"${dst}/clustermesh-apiserver\"; \\\n\t\tdone; \\\n\tkubectl --context=kind-$${cluster_name} delete pods -n kube-system -l k8s-app=clustermesh-apiserver --force; \\\n\tdone\n\n.PHONY: kind-image-fast\nkind-image-fast: kind-image-fast-agent kind-image-fast-operator kind-image-fast-clustermesh-apiserver ## Build all binaries and copy them to kind nodes.\n\ndefine KIND_VALUES_FILES\n--helm-values=$(ROOT_DIR)/contrib/testing/kind-common.yaml \\\n--helm-values=$(ROOT_DIR)/contrib/testing/kind-values.yaml\nendef\n\nifdef ADDITIONAL_KIND_VALUES_FILE\n\tKIND_VALUES_FILES := $(KIND_VALUES_FILES) --helm-values=$(ROOT_DIR)/$(ADDITIONAL_KIND_VALUES_FILE)\nendif\n\nifneq (\"$(wildcard $(ROOT_DIR)/contrib/testing/kind-custom.yaml)\",\"\")\n\tKIND_VALUES_FILES := $(KIND_VALUES_FILES) --helm-values=$(ROOT_DIR)/contrib/testing/kind-custom.yaml\nendif\n\n.PHONY: kind-install-cilium\nkind-install-cilium: check_deps kind-ready ## Install a local Cilium version into the cluster.\n\t@echo \"  INSTALL cilium\"\n\t# cilium-cli doesn't support idempotent installs, so we uninstall and\n\t# reinstall here. https://github.com/cilium/cilium-cli/issues/205\n\t-@$(CILIUM_CLI) uninstall >/dev/null 2>&1 || true\n\n\t# cilium-cli's --wait flag doesn't work, so we just force it to run\n\t# in the background instead and wait for the resources to be available.\n\t# https://github.com/cilium/cilium-cli/issues/1070\n\t$(CILIUM_CLI) install \\\n\t\t--chart-directory=$(ROOT_DIR)/install/kubernetes/cilium \\\n\t\t$(KIND_VALUES_FILES) \\\n\t\t--version= \\\n\t\t>/dev/null 2>&1 &\n\nGW_VERSION ?= $(shell grep \"sigs.k8s.io/gateway-api\" go.mod | awk '{print $$2}' | awk -F'-' '{print (NF>2)?$$NF:$$0}')\n# Set this to \"standard\" to use the standard CRDs instead\nGW_CHANNEL ?= \"experimental\"\nKIND_NET_CIDR ?= $(shell docker network inspect kind-cilium -f '{{json .IPAM.Config}}' | jq -r '.[] | select(.Subnet | test(\"^[0-9]+\\\\.[0-9]+\\\\.[0-9]+\\\\.[0-9]+\")) | .Subnet')\nLB_CIDR ?= $(shell echo $(KIND_NET_CIDR) | sed \"s@0.0/16@255.200\\/28@\" | sed -e 's/[\\/&]/\\\\&/g')\n\n.PHONY: kind-servicemesh-install-cilium\nkind-servicemesh-install-cilium: check_deps kind-ready ## Install a local Cilium version into the cluster.\n\t@echo \"  INSTALL cilium\"\n\t# cilium-cli doesn't support idempotent installs, so we uninstall and\n\t# reinstall here. https://github.com/cilium/cilium-cli/issues/205\n\t-@$(CILIUM_CLI) uninstall >/dev/null 2>&1 || true\n\n\tkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/$(GW_VERSION)/config/crd/$(GW_CHANNEL)/gateway.networking.k8s.io_gatewayclasses.yaml\n\tkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/$(GW_VERSION)/config/crd/$(GW_CHANNEL)/gateway.networking.k8s.io_gateways.yaml\n\tkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/$(GW_VERSION)/config/crd/$(GW_CHANNEL)/gateway.networking.k8s.io_httproutes.yaml\n\tkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/$(GW_VERSION)/config/crd/$(GW_CHANNEL)/gateway.networking.k8s.io_referencegrants.yaml\n\tkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/$(GW_VERSION)/config/crd/$(GW_CHANNEL)/gateway.networking.k8s.io_grpcroutes.yaml\n\tkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/$(GW_VERSION)/config/crd/experimental/gateway.networking.k8s.io_tlsroutes.yaml\n\n\t$(CILIUM_CLI) install \\\n\t\t--chart-directory=$(ROOT_DIR)/install/kubernetes/cilium \\\n\t\t$(KIND_VALUES_FILES) \\\n\t\t--helm-values=$(ROOT_DIR)/contrib/testing/kind-servicemesh.yaml \\\n\t\t--version= \\\n\t\t>/dev/null 2>&1 &\n\n\t$(CILIUM_CLI) status --wait --wait-duration 30s\n\n\t@echo \"KIND_NET_CIDR: $(KIND_NET_CIDR)\"\n\t@echo \"LB_CIDR: $(LB_CIDR)\"\n\n\t@echo \"Deploying LB-IPAM Pool...\"\n\tsed -e \"s/LB_CIDR/$(LB_CIDR)/g\" $(ROOT_DIR)/contrib/testing/servicemesh/ippool.yaml | kubectl apply -f -\n\n\t@echo \"Deploying L2-Announcement Policy...\"\n\tkubectl apply -f $(ROOT_DIR)/contrib/testing/servicemesh/l2policy.yaml\n\n.PHONY: kind-servicemesh-prereqs\nkind-servicemesh-prereqs: check_deps kind-ready\n\t@echo \"  SETUP Servicemesh\"\n\tkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/$(GW_VERSION)/config/crd/$(GW_CHANNEL)/gateway.networking.k8s.io_gatewayclasses.yaml\n\tkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/$(GW_VERSION)/config/crd/$(GW_CHANNEL)/gateway.networking.k8s.io_gateways.yaml\n\tkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/$(GW_VERSION)/config/crd/$(GW_CHANNEL)/gateway.networking.k8s.io_httproutes.yaml\n\tkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/$(GW_VERSION)/config/crd/$(GW_CHANNEL)/gateway.networking.k8s.io_referencegrants.yaml\n\tkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/$(GW_VERSION)/config/crd/$(GW_CHANNEL)/gateway.networking.k8s.io_grpcroutes.yaml\n\tkubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/$(GW_VERSION)/config/crd/experimental/gateway.networking.k8s.io_tlsroutes.yaml\n\n\t$(eval KIND_VALUES_FAST_FILES += --helm-values=$(ROOT_DIR)/contrib/testing/kind-servicemesh.yaml)\n\n\t@echo \"KIND_VALUES_FILES $(KIND_VALUES_FAST_FILES)\"\n\n.PHONY: kind-servicemesh-install-cilium-fast\nkind-servicemesh-install-cilium-fast: | kind-servicemesh-prereqs kind-image-fast kind-install-cilium-fast\n\t$(CILIUM_CLI) status --wait --wait-duration 30s\n\n\t@echo \"KIND_NET_CIDR: $(KIND_NET_CIDR)\"\n\t@echo \"LB_CIDR: $(LB_CIDR)\"\n\n\t@echo \"Deploying LB-IPAM Pool...\"\n\tsed -e \"s/LB_CIDR/$(LB_CIDR)/g\" $(ROOT_DIR)/contrib/testing/servicemesh/ippool.yaml | kubectl apply -f -\n\n\t@echo \"Deploying L2-Announcement Policy...\"\n\tkubectl apply -f $(ROOT_DIR)/contrib/testing/servicemesh/l2policy.yaml\n\n.PHONY: kind-egressgw-install-cilium\nkind-egressgw-install-cilium: check_deps kind-ready ## Install a local Cilium version into the cluster.\n\t@echo \"  INSTALL cilium\"\n\t# cilium-cli doesn't support idempotent installs, so we uninstall and\n\t# reinstall here. https://github.com/cilium/cilium-cli/issues/205\n\t-@$(CILIUM_CLI) uninstall >/dev/null 2>&1 || true\n\n\t# cilium-cli's --wait flag doesn't work, so we just force it to run\n\t# in the background instead and wait for the resources to be available.\n\t# https://github.com/cilium/cilium-cli/issues/1070\n\t$(CILIUM_CLI) install \\\n\t\t--chart-directory=$(ROOT_DIR)/install/kubernetes/cilium \\\n\t\t$(KIND_VALUES_FILES) \\\n\t\t--helm-values=$(ROOT_DIR)/contrib/testing/kind-egressgw-values.yaml \\\n\t\t--nodes-without-cilium \\\n\t\t--version= \\\n\t\t>/dev/null 2>&1 &\n\nKVSTORE_POD_NAME ?= \"kvstore\"\nKVSTORE_POD_PORT ?= \"2378\"\n\n.PHONY: kind-kvstore-install-cilium\nkind-kvstore-install-cilium: check_deps kind-ready kind-kvstore-start ## Install a local Cilium version into the cluster, configured in kvstore mode.\n\t$(MAKE) kind-install-cilium KIND_VALUES_FILES=\"\\\n\t\t$(KIND_VALUES_FILES) \\\n\t\t--set etcd.enabled=true \\\n\t\t--set etcd.endpoints[0]=http://$(shell kubectl --namespace kube-system get pod $(KVSTORE_POD_NAME) -o jsonpath='{.status.hostIP}'):$(KVSTORE_POD_PORT) \\\n\t\t--set identityAllocationMode=kvstore \\\n\t\"\n\n.PHONY: kind-kvstore-start\nkind-kvstore-start: ## Start an etcd pod serving as Cilium's kvstore\n\tkubectl --namespace kube-system get pod $(KVSTORE_POD_NAME) >/dev/null 2>/dev/null || \\\n\t\tkubectl --namespace kube-system run $(KVSTORE_POD_NAME) --image $(ETCD_IMAGE) \\\n\t\t\t--overrides='{ \"apiVersion\": \"v1\", \"spec\": { \"hostNetwork\": true, \"nodeSelector\": {\"node-role.kubernetes.io/control-plane\": \"\"},  \"tolerations\": [{ \"operator\": \"Exists\" }] }}' \\\n\t\t\t-- etcd --listen-client-urls=http://0.0.0.0:$(KVSTORE_POD_PORT) --advertise-client-urls=http://0.0.0.0:$(KVSTORE_POD_PORT)\n\n\tkubectl --namespace kube-system wait --for=condition=Ready pod/$(KVSTORE_POD_NAME)\n\n.PHONY: kind-kvstore-stop\nkind-kvstore-stop: ## Stop the etcd pod serving as Cilium's kvstore\n\tkubectl --namespace kube-system delete pod $(KVSTORE_POD_NAME) --ignore-not-found\n\tkubectl --namespace kube-system wait --for=delete pod/$(KVSTORE_POD_NAME)\n\n.PHONY: kind-uninstall-cilium\nkind-uninstall-cilium: check_deps ## Uninstall Cilium from the cluster.\n\t@echo \"  UNINSTALL cilium\"\n\t-$(CILIUM_CLI) uninstall\n\n.PHONY: kind-check-cilium\nkind-check-cilium: check_deps\n\t@echo \"  CHECK  cilium is ready...\"\n\t$(CILIUM_CLI) status --wait --wait-duration 1s >/dev/null 2>/dev/null\n\n# Template for kind debug targets. Parameters are:\n# $(1) agent target\ndefine DEBUG_KIND_TEMPLATE\n.PHONY: kind-image$(1)-debug\nkind-image$(1)-debug: export DEBUGGER_SUFFIX=-debug\nkind-image$(1)-debug: export NOSTRIP=1\nkind-image$(1)-debug: export NOOPT=1\nkind-image$(1)-debug: ## Build cilium$(1) docker image with a dlv debugger wrapper and import it into kind.\n\t$(MAKE) kind-image$(1)\nendef\n\n# kind-image-agent-debug\n$(eval $(call DEBUG_KIND_TEMPLATE,-agent))\n\n# kind-image-operator-debug\n$(eval $(call DEBUG_KIND_TEMPLATE,-operator))\n\n$(eval $(call KIND_ENV,kind-debug-agent))\nkind-debug-agent: ## Create a local kind development environment with cilium-agent attached to a debugger.\n\t$(QUIET)$(MAKE) kind-ready 2>/dev/null \\\n\t\t|| $(MAKE) kind\n\t$(MAKE) kind-image-agent-debug\n\t# Not debugging cilium-operator here; any image is good enough.\n\tkind load docker-image $(LOCAL_OPERATOR_IMAGE) \\\n\t\t|| $(MAKE) kind-image-operator\n\t$(MAKE) kind-check-cilium 2>/dev/null \\\n\t\t|| $(MAKE) kind-install-cilium\n\t@echo \"Attach delve to localhost on these ports to continue:\"\n\t@echo \" - 23401: cilium-agent (kind-control-plane)\"\n\t@echo \" - 23411: cilium-agent (kind-worker)\"\n\n$(eval $(call KIND_ENV,kind-debug))\nkind-debug: ## Create a local kind development environment with cilium-agent & cilium-operator attached to a debugger.\n\t$(QUIET)$(MAKE) kind-ready 2>/dev/null \\\n\t\t|| $(MAKE) kind\n\t$(MAKE) kind-image-agent-debug\n\t$(MAKE) kind-image-operator-debug\n\t$(MAKE) kind-check-cilium 2>/dev/null \\\n\t\t|| $(MAKE) kind-install-cilium\n\t@echo \"Attach delve to localhost on these ports to continue:\"\n\t@echo \" - 23401: cilium-agent    (kind-control-plane)\"\n\t@echo \" - 23411: cilium-agent    (kind-worker)\"\n\t@echo \" - 23511: cilium-operator (kind-worker)\"\n"
        },
        {
          "name": "Makefile.quiet",
          "type": "blob",
          "size": 0.798828125,
          "content": "# Copyright Authors of Cilium\n# SPDX-License-Identifier: Apache-2.0\n\nifeq ($(ROOT_DIR),)\n\tROOT_DIR ?= $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))\n\tRELATIVE_DIR ?= $(shell echo $(realpath .) | sed \"s;$(ROOT_DIR)[/]*;;\")\nendif\nifeq ($(V),0)\n\tQUIET=@\n\tECHO_CC=echo \"  CC     $(RELATIVE_DIR)/$@\"\n\tECHO_CHECK=echo \"  CHECK  $(RELATIVE_DIR)\"\n\tECHO_CLEAN=echo \"  CLEAN  $(RELATIVE_DIR)\"\n\tECHO_DOCKER=echo \"  DOCKER $(RELATIVE_DIR) $@\"\n\tECHO_GEN=echo \"  GEN    $(RELATIVE_DIR)/\"\n\tECHO_GINKGO=echo \"  GINKGO $(RELATIVE_DIR)\"\n\tECHO_GO=echo \"  GO     $(RELATIVE_DIR)/$@\"\n\tECHO_TEST=echo \"  TEST \"\n\tSUBMAKEOPTS=\"-s\"\nelse\n\t# The whitespace at below EOLs is required for verbose case!\n\tECHO_CC=: \n\tECHO_CHECK=: \n\tECHO_CLEAN=: \n\tECHO_DOCKER=: \n\tECHO_GEN=: \n\tECHO_GINKGO=: \n\tECHO_GO=: \n\tECHO_TEST=: \n\tSUBMAKEOPTS=\nendif\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 20.4892578125,
          "content": ".. raw:: html\n\n   <picture>\n      <source media=\"(prefers-color-scheme: light)\" srcset=\"https://cdn.jsdelivr.net/gh/cilium/cilium@main/Documentation/images/logo.png\" width=\"350\" alt=\"Cilium Logo\">\n      <img src=\"https://cdn.jsdelivr.net/gh/cilium/cilium@main/Documentation/images/logo-dark.png\" width=\"350\" alt=\"Cilium Logo\">\n   </picture>\n\n|cii| |go-report| |clomonitor| |artifacthub| |slack| |go-doc| |rtd| |apache| |bsd| |gpl| |fossa| |gateway-api| |codespaces|\n\nCilium is a networking, observability, and security solution with an eBPF-based\ndataplane. It provides a simple flat Layer 3 network with the ability to span\nmultiple clusters in either a native routing or overlay mode. It is L7-protocol\naware and can enforce network policies on L3-L7 using an identity based security\nmodel that is decoupled from network addressing.\n\nCilium implements distributed load balancing for traffic between pods and to\nexternal services, and is able to fully replace kube-proxy, using efficient\nhash tables in eBPF allowing for almost unlimited scale. It also supports\nadvanced functionality like integrated ingress and egress gateway, bandwidth\nmanagement and service mesh, and provides deep network and security visibility and monitoring.\n\nA new Linux kernel technology called eBPF_ is at the foundation of Cilium. It\nsupports dynamic insertion of eBPF bytecode into the Linux kernel at various\nintegration points such as: network IO, application sockets, and tracepoints to\nimplement security, networking and visibility logic. eBPF is highly efficient\nand flexible. To learn more about eBPF, visit `eBPF.io`_.\n\n.. image:: Documentation/images/cilium-overview.png\n   :alt: Overview of Cilium features for networking, observability, service mesh, and runtime security\n\n.. raw:: html\n\n   <a href=\"https://cncf.io/\">\n      <picture>\n         <source media=\"(prefers-color-scheme: light)\" srcset=\"https://github.com/cncf/artwork/blob/main/other/cncf-member/graduated/color/cncf-graduated-color.svg\" />\n         <img src=\"https://github.com/cncf/artwork/blob/main/other/cncf-member/graduated/white/cncf-graduated-white.svg\" alt=\"CNCF Graduated Project\" height=\"80\" />\n      </picture>\n   </a>\n   <a href=\"https://ebpf.io/\">\n      <picture>\n         <source media=\"(prefers-color-scheme: light)\" srcset=\".github/assets/powered-by-ebpf.svg\" />\n         <img src=\".github/assets/powered-by-ebpf_white.svg\" alt=\"Powered by eBPF\" height=\"80\" align=\"right\" />\n      </picture>\n   </a>\n\nStable Releases\n===============\n\nThe Cilium community maintains minor stable releases for the last three minor\nCilium versions. Older Cilium stable versions from minor releases prior to that\nare considered EOL.\n\nFor upgrades to new minor releases please consult the `Cilium Upgrade Guide`_.\n\nListed below are the actively maintained release branches along with their latest\npatch release, corresponding image pull tags and their release notes:\n\n+---------------------------------------------------------+------------+------------------------------------+----------------------------------------------------------------------------+\n| `v1.16 <https://github.com/cilium/cilium/tree/v1.16>`__ | 2024-12-12 | ``quay.io/cilium/cilium:v1.16.5``  | `Release Notes <https://github.com/cilium/cilium/releases/tag/v1.16.5>`__  |\n+---------------------------------------------------------+------------+------------------------------------+----------------------------------------------------------------------------+\n| `v1.15 <https://github.com/cilium/cilium/tree/v1.15>`__ | 2024-12-13 | ``quay.io/cilium/cilium:v1.15.12`` | `Release Notes <https://github.com/cilium/cilium/releases/tag/v1.15.12>`__ |\n+---------------------------------------------------------+------------+------------------------------------+----------------------------------------------------------------------------+\n| `v1.14 <https://github.com/cilium/cilium/tree/v1.14>`__ | 2024-12-12 | ``quay.io/cilium/cilium:v1.14.18`` | `Release Notes <https://github.com/cilium/cilium/releases/tag/v1.14.18>`__ |\n+---------------------------------------------------------+------------+------------------------------------+----------------------------------------------------------------------------+\n\nArchitectures\n-------------\n\nCilium images are distributed for AMD64 and AArch64 architectures.\n\nSoftware Bill of Materials\n--------------------------\n\nStarting with Cilium version 1.13.0, all images include a Software Bill of\nMaterials (SBOM). The SBOM is generated in `SPDX`_ format. More information\non this is available on `Cilium SBOM`_.\n\n.. _`SPDX`: https://spdx.dev/\n.. _`Cilium SBOM`: https://docs.cilium.io/en/latest/configuration/sbom/\n\nDevelopment\n===========\n\nFor development and testing purpose, the Cilium community publishes snapshots,\nearly release candidates (RC) and CI container images build from the `main\nbranch <https://github.com/cilium/cilium/commits/main>`_. These images are\nnot for use in production.\n\nFor testing upgrades to new development releases please consult the latest\ndevelopment build of the `Cilium Upgrade Guide`_.\n\nListed below are branches for testing along with their snapshots or RC releases,\ncorresponding image pull tags and their release notes where applicable:\n\n+----------------------------------------------------------------------------+------------+-----------------------------------------+------------------------------------------------------------------------------------------------+\n| `main <https://github.com/cilium/cilium/commits/main>`__                   | daily      | ``quay.io/cilium/cilium-ci:latest``     | N/A                                                                                            |\n+----------------------------------------------------------------------------+------------+-----------------------------------------+------------------------------------------------------------------------------------------------+\n| `v1.17.0-rc.1 <https://github.com/cilium/cilium/commits/v1.17.0-rc.1>`__   | 2025-01-10 | ``quay.io/cilium/cilium:v1.17.0-rc.1``  | `Pre Release Candidate Notes <https://github.com/cilium/cilium/releases/tag/v1.17.0-rc.1>`__   |\n+----------------------------------------------------------------------------+------------+-----------------------------------------+------------------------------------------------------------------------------------------------+\n\nFunctionality Overview\n======================\n\n.. begin-functionality-overview\n\nProtect and secure APIs transparently\n-------------------------------------\n\nAbility to secure modern application protocols such as REST/HTTP, gRPC and\nKafka. Traditional firewalls operate at Layer 3 and 4. A protocol running on a\nparticular port is either completely trusted or blocked entirely. Cilium\nprovides the ability to filter on individual application protocol requests such\nas:\n\n- Allow all HTTP requests with method ``GET`` and path ``/public/.*``. Deny all\n  other requests.\n- Allow ``service1`` to produce on Kafka topic ``topic1`` and ``service2`` to\n  consume on ``topic1``. Reject all other Kafka messages.\n- Require the HTTP header ``X-Token: [0-9]+`` to be present in all REST calls.\n\nSee the section `Layer 7 Policy`_ in our documentation for the latest list of\nsupported protocols and examples on how to use it.\n\nSecure service to service communication based on identities\n-----------------------------------------------------------\n\nModern distributed applications rely on technologies such as application\ncontainers to facilitate agility in deployment and scale out on demand. This\nresults in a large number of application containers being started in a short\nperiod of time. Typical container firewalls secure workloads by filtering on\nsource IP addresses and destination ports. This concept requires the firewalls\non all servers to be manipulated whenever a container is started anywhere in\nthe cluster.\n\nIn order to avoid this situation which limits scale, Cilium assigns a security\nidentity to groups of application containers which share identical security\npolicies. The identity is then associated with all network packets emitted by\nthe application containers, allowing to validate the identity at the receiving\nnode. Security identity management is performed using a key-value store.\n\nSecure access to and from external services\n-------------------------------------------\n\nLabel based security is the tool of choice for cluster internal access control.\nIn order to secure access to and from external services, traditional CIDR based\nsecurity policies for both ingress and egress are supported. This allows to\nlimit access to and from application containers to particular IP ranges.\n\nSimple Networking\n-----------------\n\nA simple flat Layer 3 network with the ability to span multiple clusters\nconnects all application containers. IP allocation is kept simple by using host\nscope allocators. This means that each host can allocate IPs without any\ncoordination between hosts.\n\nThe following multi node networking models are supported:\n\n* **Overlay:** Encapsulation-based virtual network spanning all hosts.\n  Currently, VXLAN and Geneve are baked in but all encapsulation formats\n  supported by Linux can be enabled.\n\n  When to use this mode: This mode has minimal infrastructure and integration\n  requirements. It works on almost any network infrastructure as the only\n  requirement is IP connectivity between hosts which is typically already\n  given.\n\n* **Native Routing:** Use of the regular routing table of the Linux host.\n  The network is required to be capable to route the IP addresses of the\n  application containers.\n\n  When to use this mode: This mode is for advanced users and requires some\n  awareness of the underlying networking infrastructure. This mode works well\n  with:\n\n  - Native IPv6 networks\n  - In conjunction with cloud network routers\n  - If you are already running routing daemons\n\nLoad Balancing\n--------------\n\nCilium implements distributed load balancing for traffic between application\ncontainers and to external services and is able to fully replace components\nsuch as kube-proxy. The load balancing is implemented in eBPF using efficient\nhashtables allowing for almost unlimited scale.\n\nFor north-south type load balancing, Cilium's eBPF implementation is optimized\nfor maximum performance, can be attached to XDP (eXpress Data Path), and supports\ndirect server return (DSR) as well as Maglev consistent hashing if the load\nbalancing operation is not performed on the source host.\n\nFor east-west type load balancing, Cilium performs efficient service-to-backend\ntranslation right in the Linux kernel's socket layer (e.g. at TCP connect time)\nsuch that per-packet NAT operations overhead can be avoided in lower layers.\n\nBandwidth Management\n--------------------\n\nCilium implements bandwidth management through efficient EDT-based (Earliest Departure\nTime) rate-limiting with eBPF for container traffic that is egressing a node. This\nallows to significantly reduce transmission tail latencies for applications and to\navoid locking under multi-queue NICs compared to traditional approaches such as HTB\n(Hierarchy Token Bucket) or TBF (Token Bucket Filter) as used in the bandwidth CNI\nplugin, for example.\n\nMonitoring and Troubleshooting\n------------------------------\n\nThe ability to gain visibility and troubleshoot issues is fundamental to the\noperation of any distributed system. While we learned to love tools like\n``tcpdump`` and ``ping`` and while they will always find a special place in our\nhearts, we strive to provide better tooling for troubleshooting. This includes\ntooling to provide:\n\n- Event monitoring with metadata: When a packet is dropped, the tool doesn't\n  just report the source and destination IP of the packet, the tool provides\n  the full label information of both the sender and receiver among a lot of\n  other information.\n\n- Metrics export via Prometheus: Key metrics are exported via Prometheus for\n  integration with your existing dashboards.\n\n- Hubble_: An observability platform specifically written for Cilium. It\n  provides service dependency maps, operational monitoring and alerting,\n  and application and security visibility based on flow logs.\n\n.. _Hubble: https://github.com/cilium/hubble/\n.. _`Layer 7 Policy`: https://docs.cilium.io/en/stable/security/policy/language/#layer-7-examples\n\n.. end-functionality-overview\n\nGetting Started\n===============\n\n* `Why Cilium?`_\n* `Getting Started`_\n* `Architecture and Concepts`_\n* `Installing Cilium`_\n* `Frequently Asked Questions`_\n* Contributing_\n\nWhat is eBPF and XDP?\n=====================\n\nBerkeley Packet Filter (BPF) is a Linux kernel bytecode interpreter originally\nintroduced to filter network packets, e.g. for tcpdump and socket filters. The\nBPF instruction set and surrounding architecture have recently been\nsignificantly reworked with additional data structures such as hash tables and\narrays for keeping state as well as additional actions to support packet\nmangling, forwarding, encapsulation, etc. Furthermore, a compiler back end for\nLLVM allows for programs to be written in C and compiled into BPF instructions.\nAn in-kernel verifier ensures that BPF programs are safe to run and a JIT\ncompiler converts the BPF bytecode to CPU architecture-specific instructions\nfor native execution efficiency. BPF programs can be run at various hooking\npoints in the kernel such as for incoming packets, outgoing packets, system\ncalls, kprobes, uprobes, tracepoints, etc.\n\nBPF continues to evolve and gain additional capabilities with each new Linux\nrelease. Cilium leverages BPF to perform core data path filtering, mangling,\nmonitoring and redirection, and requires BPF capabilities that are in any Linux\nkernel version 4.8.0 or newer (the latest current stable Linux kernel is\n4.14.x).\n\nMany Linux distributions including CoreOS, Debian, Docker's LinuxKit, Fedora,\nopenSUSE and Ubuntu already ship kernel versions >= 4.8.x. You can check your Linux\nkernel version by running ``uname -a``. If you are not yet running a recent\nenough kernel, check the Documentation of your Linux distribution on how to run\nLinux kernel 4.9.x or later.\n\nTo read up on the necessary kernel versions to run the BPF runtime, see the\nsection Prerequisites_.\n\n.. image:: https://cdn.jsdelivr.net/gh/cilium/cilium@main/Documentation/images/bpf-overview.png\n    :align: center\n\nXDP is a further step in evolution and enables running a specific flavor of BPF\nprograms from the network driver with direct access to the packet's DMA buffer.\nThis is, by definition, the earliest possible point in the software stack,\nwhere programs can be attached to in order to allow for a programmable, high\nperformance packet processor in the Linux kernel networking data path.\n\nFurther information about BPF and XDP targeted for developers can be found in\nthe `BPF and XDP Reference Guide`_.\n\nTo know more about Cilium, its extensions and use cases around Cilium and BPF\ntake a look at `Further Readings <FURTHER_READINGS.rst>`_ section.\n\nCommunity\n=========\n\nSlack\n-----\n\nJoin the Cilium `Slack channel <https://slack.cilium.io>`_ to chat with\nCilium developers and other Cilium users. This is a good place to learn about\nCilium, ask questions, and share your experiences.\n\nSpecial Interest Groups (SIG)\n-----------------------------\n\nSee `Special Interest groups\n<https://docs.cilium.io/en/stable/community/community/#special-interest-groups>`_ for a list of all SIGs and their meeting times.\n\nDeveloper meetings\n------------------\nThe Cilium developer community hangs out on Zoom to chat. Everybody is welcome.\n\n* Weekly, Wednesday,\n  5:00 pm `Europe/Zurich time <https://time.is/Canton_of_Zurich>`__ (CET/CEST),\n  usually equivalent to 8:00 am PT, or 11:00 am ET. `Meeting Notes and Zoom Info`_\n* Third Wednesday of each month, 9:00 am `Japan time <https://time.is/Tokyo>`__ (JST). `APAC Meeting Notes and Zoom Info`_\n\neBPF & Cilium Office Hours livestream\n-------------------------------------\nWe host a weekly community `YouTube livestream called eCHO <https://www.youtube.com/channel/UCJFUxkVQTBJh3LD1wYBWvuQ>`_ which (very loosely!) stands for eBPF & Cilium Office Hours. Join us live, catch up with past episodes, or head over to the `eCHO repo <https://github.com/isovalent/eCHO>`_ and let us know your ideas for topics we should cover.\n\nGovernance\n----------\nThe Cilium project is governed by a group of `Maintainers and Committers <https://raw.githubusercontent.com/cilium/cilium/main/MAINTAINERS.md>`__.\nHow they are selected and govern is outlined in our `governance document <https://github.com/cilium/community/blob/main/GOVERNANCE.md>`__.\n\nAdopters\n--------\nA list of adopters of the Cilium project who are deploying it in production, and of their use cases,\ncan be found in file `USERS.md <https://github.com/cilium/cilium/blob/main/USERS.md>`__.\n\nRoadmap\n-------\nCilium maintains a `public roadmap <https://docs.cilium.io/en/latest/community/roadmap/>`__. It gives a high-level view of the main priorities for the project, the maturity of different features and projects, and how to influence the project direction.\n\nLicense\n=======\n\n.. _apache-license: LICENSE\n.. _bsd-license: bpf/LICENSE.BSD-2-Clause\n.. _gpl-license: bpf/LICENSE.GPL-2.0\n\nThe Cilium user space components are licensed under the\n`Apache License, Version 2.0 <apache-license_>`__.\nThe BPF code templates are dual-licensed under the\n`General Public License, Version 2.0 (only) <gpl-license_>`__\nand the `2-Clause BSD License <bsd-license_>`__\n(you can use the terms of either license, at your option).\n\n.. _`Cilium Upgrade Guide`: https://docs.cilium.io/en/stable/operations/upgrade/\n.. _`Why Cilium?`: https://docs.cilium.io/en/stable/overview/intro\n.. _`Getting Started`: https://docs.cilium.io/en/stable/#getting-started\n.. _`Architecture and Concepts`: https://docs.cilium.io/en/stable/overview/component-overview/\n.. _`Installing Cilium`: https://docs.cilium.io/en/stable/gettingstarted/k8s-install-default/\n.. _`Frequently Asked Questions`: https://github.com/cilium/cilium/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3Akind%2Fquestion+\n.. _Contributing: https://docs.cilium.io/en/stable/contributing/development/\n.. _Prerequisites: https://docs.cilium.io/en/stable/operations/system_requirements/\n.. _`BPF and XDP Reference Guide`: https://docs.cilium.io/en/stable/bpf/\n.. _`eBPF`: https://ebpf.io\n.. _`eBPF.io`: https://ebpf.io\n.. _`Meeting Notes and Zoom Info`: https://docs.google.com/document/d/1Y_4chDk4rznD6UgXPlPvn3Dc7l-ZutGajUv1eF0VDwQ/edit#\n.. _`APAC Meeting Notes and Zoom Info`: https://docs.google.com/document/d/1egv4qLydr0geP-GjQexYKm4tz3_tHy-LCBjVQcXcT5M/edit#\n\n.. |go-report| image:: https://goreportcard.com/badge/github.com/cilium/cilium\n    :alt: Go Report Card\n    :target: https://goreportcard.com/report/github.com/cilium/cilium\n\n.. |go-doc| image:: https://godoc.org/github.com/cilium/cilium?status.svg\n    :alt: GoDoc\n    :target: https://godoc.org/github.com/cilium/cilium\n\n.. |rtd| image:: https://readthedocs.org/projects/docs/badge/?version=latest\n    :alt: Read the Docs\n    :target: https://docs.cilium.io/\n\n.. |apache| image:: https://img.shields.io/badge/license-Apache-blue.svg\n    :alt: Apache licensed\n    :target: apache-license_\n\n.. |bsd| image:: https://img.shields.io/badge/license-BSD-blue.svg\n    :alt: BSD licensed\n    :target: bsd-license_\n\n.. |gpl| image:: https://img.shields.io/badge/license-GPL-blue.svg\n    :alt: GPL licensed\n    :target: gpl-license_\n\n.. |slack| image:: https://img.shields.io/badge/slack-cilium-brightgreen.svg?logo=slack\n    :alt: Join the Cilium slack channel\n    :target: https://slack.cilium.io\n\n.. |cii| image:: https://bestpractices.coreinfrastructure.org/projects/1269/badge\n    :alt: CII Best Practices\n    :target: https://bestpractices.coreinfrastructure.org/projects/1269\n\n.. |clomonitor| image:: https://img.shields.io/endpoint?url=https://clomonitor.io/api/projects/cncf/cilium/badge\n    :alt: CLOMonitor\n    :target: https://clomonitor.io/projects/cncf/cilium\n\n.. |artifacthub| image:: https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/cilium\n    :alt: Artifact Hub\n    :target: https://artifacthub.io/packages/helm/cilium/cilium\n\n.. |fossa| image:: https://app.fossa.com/api/projects/custom%2B162%2Fgit%40github.com%3Acilium%2Fcilium.git.svg?type=shield\n    :alt: FOSSA Status\n    :target: https://app.fossa.com/projects/custom%2B162%2Fgit%40github.com%3Acilium%2Fcilium.git?ref=badge_shield\n\n.. |gateway-api| image:: https://img.shields.io/badge/Gateway%20API%20Conformance%20v1.2.0-Cilium-green\n    :alt: Gateway API Status\n    :target: https://github.com/kubernetes-sigs/gateway-api/tree/main/conformance/reports/v1.2.0/cilium-cilium\n\n.. |codespaces| image:: https://img.shields.io/badge/Open_in_GitHub_Codespaces-gray?logo=github\n    :alt: Github Codespaces\n    :target: https://github.com/codespaces/new?hide_repo_select=true&ref=master&repo=48109239&machine=standardLinux32gb&location=WestEurope\n"
        },
        {
          "name": "SECURITY-INSIGHTS.yml",
          "type": "blob",
          "size": 2.072265625,
          "content": "header:\n  schema-version: '1.0.0'\n  expiration-date: '2025-01-26T01:00:00.000Z'\n  last-updated: '2024-01-26'\n  last-reviewed: '2024-01-26'\n  project-url: https://github.com/cilium/cilium\n  license: https://github.com/cilium/cilium/blob/main/LICENSE\nproject-lifecycle:\n  status: active\n  bug-fixes-only: false\n  core-maintainers:\n    - https://github.com/cilium/cilium/blob/main/MAINTAINERS.md\n  roadmap: https://docs.cilium.io/en/stable/community/roadmap\ncontribution-policy:\n  accepts-pull-requests: true\n  accepts-automated-pull-requests: true\ndependencies:\n  third-party-packages: true\n  dependencies-lists:\n    - https://github.com/cilium/cilium/blob/main/go.mod\n  sbom:\n    - sbom-format: SPDX\n      sbom-url: https://docs.cilium.io/en/stable/configuration/sbom\ndistribution-points:\n  - https://github.com/cilium/cilium\n  - https://hub.docker.com/u/cilium\n  - https://quay.io/organization/cilium\ndocumentation:\n  - https://docs.cilium.io/en/stable/\nsecurity-assessments:\n  - auditor-name: ADA Logics\n    auditor-url: https://adalogics.com\n    auditor-report: https://github.com/cilium/cilium.io/blob/main/Security-Reports/CiliumSecurityAudit2022.pdf\n    report-year: 2022\n  - auditor-name: ADA Logics\n    auditor-url: https://adalogics.com\n    auditor-report: https://github.com/cilium/cilium.io/blob/main/Security-Reports/CiliumFuzzingAudit2022.pdf\n    report-year: 2022\nsecurity-contacts:\n  - type: email\n    value: security@cilium.io\nsecurity-testing:\n- tool-type: sca\n  tool-name: Mend Renovate\n  tool-url: https://www.mend.io/renovate\n  tool-version: latest\n  integration:\n    ad-hoc: false\n    ci: true\n    before-release: true\n- tool-type: fuzzer\n  tool-name: OSS-Fuzz\n  tool-url: https://github.com/google/oss-fuzz\n  tool-version: latest\n  integration:\n    ad-hoc: false\n    ci: true\n    before-release: true\n- tool-type: sast\n  tool-name: Grype\n  tool-url: https://github.com/anchore/grype\n  tool-version: latest\n  integration:\n    ad-hoc: false\n    ci: true\n    before-release: true\nvulnerability-reporting:\n  accepts-vulnerability-reports: true\n  security-policy: https://github.com/cilium/cilium/security\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.041015625,
          "content": "# Security Policy\n\n## Supported Versions\n\n| Version  | Supported          |\n|----------| ------------------ |\n| main     | :white_check_mark: |\n| 1.16.x   | :white_check_mark: |\n| 1.15.x   | :white_check_mark: |\n| 1.14.x   | :white_check_mark: |\n| < 1.14.0 | :x:                |\n\n## Reporting a Vulnerability\n\nWe strongly encourage you to report security vulnerabilities to\nour private security mailing list: security@cilium.io - first, before\ndisclosing them in any public forums.\n\nA threat model for Cilium and recommendations for running Cilium in production\nenvironments can be found [here][threat-model]. Please ensure that you have\ntaken this threat model into consideration before making a report, including\nconsidering the feasibility of an attack against a correctly secured\nenvironment.\n\nThis is a private mailing list where members of Cilium's\n[Security Team](https://github.com/cilium/community/blob/main/roles/Security-Team.md)\nare subscribed to, and is treated as top priority.\n\n[threat-model]: https://docs.cilium.io/en/latest/security/threat-model/\n"
        },
        {
          "name": "USERS.md",
          "type": "blob",
          "size": 40.81640625,
          "content": "Who is using Cilium?\n====================\n\nSharing experiences and learning from other users is essential. We are\nfrequently asked who is using a particular feature of Cilium so people can get in\ncontact with other users to share experiences and best practices. People\nalso often want to know if product/platform X has integrated Cilium.\nWhile the [Cilium Slack community](https://slack.cilium.io) allows\nusers to get in touch, it can be challenging to find this information quickly.\n\nThe following is a directory of adopters to help identify users of individual\nfeatures. The users themselves directly maintain the list.\n\nAdding yourself as a user\n-------------------------\n\nIf you are using Cilium or it is integrated into your product, service, or\nplatform, please consider adding yourself as a user with a quick\ndescription of your use case by opening a pull request to this file and adding\na section describing your usage of Cilium. If you are open to others contacting\nyou about your use of Cilium on Slack, add your Slack nickname as well.\n\n    N: Name of user (company)\n    D: Description\n    U: Usage of features\n    L: Link with further information (optional)\n    Q: Contacts available for questions (optional)\n\nExample entry:\n\n    * N: Cilium Example User Inc.\n      D: Cilium Example User Inc. is using Cilium for scientific purposes\n      U: ENI networking, DNS policies, ClusterMesh\n      Q: @slacknick1, @slacknick2\n\nRequirements to be listed\n-------------------------\n\n * You must represent the user listed. Do *NOT* add entries on behalf of\n   other users.\n * There is no minimum deployment size but we request to list permanent\n   production deployments only, i.e., no demo or trial deployments. Commercial\n   use is not required. A well-done home lab setup can be equally\n   interesting as a large-scale commercial deployment.\n\nUsers (Alphabetically)\n----------------------\n\n    * N: Ãnix\n      D: Ãnix uses Cilium in free PaaS platform [Cozystack](https://cozystack.io) for running containers, virtual machines and Kubernetes-as-a-Service.\n      U: Networking, NetworkPolicy, kube-proxy replacement, CNI-Chaining (with kube-ovn)\n      L: https://cozystack.io/\n      Q: @kvaps\n\n    * N: AccuKnox\n      D: AccuKnox uses Cilium for network visibility and network policy enforcement.\n      U: L3/L4/L7 policy enforcement using Identity, External/VM Workloads, Network Visibility using Hubble\n      L: https://www.accuknox.com/spifee-identity-for-cilium-presentation-at-kubecon-2021, https://www.accuknox.com/cilium\n      Q: @nyrahul\n\n    * N: Acoss\n      D: Acoss is using cilium as their main CNI plugin (self hosted k8s, On-premises)\n      U: CiliumNetworkPolicy, Hubble, BPF NodePort, Direct routing\n      L: @JrCs\n\n    * N: Adobe, Inc.\n      D: Adobe's Project Ethos uses Cilium for multi-tenant, multi-cloud clusters\n      U: L3/L4/L7 policies\n      L: https://youtu.be/39FLsSc2P-Y\n\n    * N: AirQo\n      D: AirQo uses Cilium as the CNI plugin\n      U: CNI, Networking, NetworkPolicy, Cluster Mesh, Hubble, Kubernetes services\n      L: @airqo-platform\n      \n    * N: Alauda\n      D: Alauda uses Cilium in the Alauda Container Platform product to provide high performance network,observability and security.\n      U: Networking, NetworkPolicy, Services, Observability\n      Qï¼@oilbeater\n      \n    * N: Alibaba Cloud\n      D: Alibaba Cloud is using Cilium together with Terway CNI as the high-performance ENI dataplane\n      U: Networking, NetworkPolicy, Services, IPVLAN\n      L: https://www.alibabacloud.com/blog/how-does-alibaba-cloud-build-high-performance-cloud-native-pod-networks-in-production-environments_596590\n\n    * N: Amazon Web Services (AWS)\n      D: AWS uses Cilium as the default CNI for EKS Anywhere\n      U: Networking, NetworkPolicy, Services\n      L: https://isovalent.com/blog/post/2021-09-aws-eks-anywhere-chooses-cilium\n\n    * N: APPUiO by VSHN\n      D: VSHN uses Cilium for multi-tenant networking on APPUiO Cloud and as an add-on to APPUiO Managed, both on Red Hat OpenShift and Cloud Kubernetes.\n      U: CNI, Networking, NetworkPolicy, Hubble, IPAM, Kubernetes services\n      L: https://products.docs.vshn.ch/products/appuio/managed/addon_cilium.html and https://www.appuio.cloud\n\n    * N: ArangoDB Oasis\n      D: ArangoDB Oasis is using Cilium in to separate database deployments in our multi-tenant cloud environment\n      U: Networking, CiliumNetworkPolicy(cluster & local), Hubble, IPAM\n      L: https://cloud.arangodb.com\n      Q: @ewoutp @Robert-Stam\n\n    * N: Archer Aviation\n      D: Archer Aviation uses Cilium as part of the foundation of the Kubernetes cluster.\n      U: Networking, Observability, Security\n      L: https://www.archer.com\n      Q: @Hongbo Miao\n\n    * N: Ascend.io\n      D: Ascend.io is using Cilium as a consistent CNI for our Data Automation Platform on GKE, EKS, and AKS.\n      U: Transparent Encryption, Overlay Networking, Cluster Mesh, Egress Gateway, Network Policy, Hubble\n      L: https://www.ascend.io/\n      Q: @Joe Stevens\n\n    * N: Ayedo\n      D: Ayedo builds and operates cloud-native container platforms based on Kubernetes\n      U: Hubble for Visibility, Cilium as Mesh between Services\n      L: https://www.ayedo.de/\n\n    * N: Back Market\n      D: Back Market is using Cilium as CNI in all their clusters and environments (kOps + EKS in AWS)\n      U: CNI, Network Policies, Transparent Encryption (WG), Hubble\n      Q: @nitrikx\n      L: https://www.backmarket.com/\n\n    * N: Berops\n      D: Cilium is used as a CNI plug-in in our open-source multi-cloud and hybrid-cloud Kubernetes platform - Claudie\n      U: CNI, Network Policies, Hubble\n      Q: @Bernard Halas\n      L: https://github.com/berops/claudie\n\n    * N: Bitnami\n      D: Cilium is part of the largest open-source application catalog.\n      U: CNI, Hubble, BGP, eBPF, CiliumNetworkPolicy, CiliumClusterwideNetworkPolicy\n      L: https://bitnami.com/stack/cilium\n      Q: @carrodher\n\n    * N: BMC Software\n      D: Cilium can be optionally used in BMC Helix Innovaton Suite and BMC IT Operations Management On Premise\n      U: CNI, Hubble\n      L: https://www.bmc.com\n      Q: @ryebridge\n      \n    * N: ByteDance\n      D: ByteDance is using Cilium as CNI plug-in for self-hosted Kubernetes.\n      U: CNI, Networking\n      L: @Jiang Wang\n\n    * N: Canonical\n      D: Canonical's Kubernetes distribution microk8s uses Cilium as CNI plugin\n      U: Networking, NetworkPolicy, and Kubernetes services\n      L: https://microk8s.io/\n\n    * N: Capital One\n      D: Capital One uses Cilium as its standard CNI for all Kubernetes environments\n      U: CNI, CiliumClusterWideNetworkpolicy, CiliumNetworkPolicy, Hubble, network visibility\n      L: https://www.youtube.com/watch?v=hwOpCKBaJ-w\n\n    * N: CENGN - Centre of Excellence in Next Generation Networks\n      D: CENGN is using Cilium in multiple clusters including production and development clusters (self-hosted k8s, On-premises)\n      U: L3/L4/L7 network policies, Monitoring via Prometheus metrics & Hubble\n      L: https://www.youtube.com/watch?v=yXm7yZE2rk4\n      Q: @rmaika @mohahmed13\n\n    * N: Cistec\n      D: Cistec is a clinical information system provider and uses Cilium as the CNI plugin.\n      U: Networking and network policy\n      L: https://www.cistec.com/\n\n    * N: Civo\n      D: Civo is offering Cilium as the CNI option for Civo users to choose it for their Civo Kubernetes clusters.\n      U: Networking and network policy\n      L: https://www.civo.com/kubernetes\n\n    * N: ClickHouse\n      D: ClickHouse uses Cilium as CNI for AWS Kubernetes environments\n      U: CiliumNetworkPolicy, Hubble, ClusterMesh\n      L: https://clickhouse.com\n\n    * N: Cloutomate\n      D: Cloutomate uses Cilium as CNI for itself and customer installations\n      U: Networking Observability and Security, Service Mesh, Cluster Mesh\n      L: https://cloutomate.de\n\n    * N: Cognite\n      D: Cognite is an industrial DataOps provider and uses Cilium as the CNI plugin\n      Q: @Robert Collins\n\n    * N: CONNY\n      D: CONNY is legaltech platform to improve access to justice for individuals\n      U: Networking, NetworkPolicy, Services\n      Q: @ant31\n      L: https://conny.de\n\n    * N: Cosmonic\n      D: Cilium is the CNI for Cosmonic's Nomad based PaaS\n      U: Networking, NetworkPolicy, Transparent Encryption\n      L: https://cilium.io/blog/2023/01/18/cosmonic-user-story/\n\n    * N: Crane\n      D: Crane uses Cilium as the default CNI\n      U: Networking, NetworkPolicy, Services\n      L: https://github.com/slzcc/crane\n      Q: @slzcc\n\n    * N: Cybozu\n      D: Cybozu deploys Cilium to on-prem Kubernetes Cluster and uses it with Coil by CNI chaining.\n      U: CNI Chaining, L4 LoadBalancer, NetworkPolicy, Hubble\n      L: https://cybozu-global.com/\n\n    * N: Daimler Truck AG\n      D: The CSG RuntimeDepartment of DaimlerTruck is maintaining an AKS k8s cluster as a shared resource for DevOps crews and is using Cilium as the default CNI (BYOCNI).\n      U: Networking, NetworkPolicy and Monitoring\n      L: https://daimlertruck.com\n      Q: @brandshaide\n\n    * N: DaoCloud - spiderpool & merbridge\n      D: spiderpool is using Cilium as their main CNI plugin for overlay and merbridge is using  Cilium eBPF library to speed up your Service Mesh\n      U: CNI, Service load-balancing, cluster mesh\n      L: https://github.com/spidernet-io/spiderpool, https://github.com/merbridge/merbridge\n      Q: @weizhoublue, @kebe7jun\n\n    * N: Datadog\n      D: Datadog is using Cilium in AWS (self-hosted k8s)\n      U: ENI Networking, Service load-balancing, Encryption, Network Policies, Hubble\n      Q: @lbernail, @roboll, @mvisonneau\n\n    * N: Dcode.tech\n      D: We specialize in AWS and Kubernetes, and actively implement Cilium at our clients. \n      U: CNI, CiliumNetworkPolicy, Hubble UI\n      L: https://dcode.tech/\n      Q: @eliranw, @maordavidov\n  \n    * N: Deckhouse\n      D: Deckhouse Kubernetes Platform is using Cilium as a one of the supported CNIs.\n      U: Networking, Security, Hubble UI for network visibility\n      L: https://github.com/deckhouse/deckhouse\n\n    * N: Deezer\n      D: Deezer is using Cilium as CNI for all our on-prem clusters for its performance and security. We plan to leverage BGP features as well soon\n      U: CNI, Hubble, kube-proxy replacement, eBPF\n      L: https://github.com/deezer\n\n    * N: DigitalOcean\n      D: DigitalOcean is using Cilium as the CNI for Digital Ocean's managed Kubernetes Services (DOKS)\n      U: Networking and network policy\n      L: https://github.com/digitalocean/DOKS\n\n    * N: Docaposte\n      D: Docaposte is the digital trust leader in France. We have selected Cilium as our CNI for Kubernetes deployments in production environments, due to its performance and advanced features.\n      U: eBPF, CiliumclusterWideNetworkPolicy, CiliumNetworkPolicy, kube-proxy replacement, Hubble\n      L: https://docaposte.fr\n      Q: @albundy83\n\n    * N: ECCO Data and AI\n      D: ECCO Data and AI is using Cilium as CNI in all their clusters and environments (EKS in AWS).\n      U: CNI, IPv6 networking, Service Load Balancing and Cluster Mesh\n      L: https://github.com/SneaksAndData\n\n    * N: Edgeless Systems\n      D: Edgeless Systems is using Cilium as the CNI for Edgeless System's Confidential Kubernetes Distribution (Constellation)\n      U: Networking (CNI), Transparent Encryption (WG),\n      L: https://docs.edgeless.systems/constellation/architecture/networking\n      Q: @m1ghtym0\n\n    * N: Eficode\n      D: As a cloud-native and devops consulting firm, we have implemented Cilium on customer engagements\n      U: CNI, CiliumNetworkPolicy at L7, Hubble\n      L: https://eficode.com/\n      Q: @Andy Allred\n\n    * N: Elastic Path\n      D: Elastic Path is using Cilium in their CloudOps for Kubernetes production clusters\n      U: CNI\n      L: https://documentation.elasticpath.com/cloudops-kubernetes/docs/index.html\n      Q: @Neil Seward\n\n    * N: Equinix\n      D: Equinix Metal is using Cilium for production and non-production environments on bare metal\n      U: CNI, CiliumClusterWideNetworkpolicy, CiliumNetworkPolicy, BGP advertisements, Hubble, network visibility\n      L: https://metal.equinix.com/\n      Q: @tylerauerbeck, @fishnix, @tenyo, @hegartyk\n\n    * N: Equinix\n      D: Equinix NL Managed Services is using Cilium with their Managed Kubernetes offering\n      U: CNI, network policies, visibility\n      L: https://www.equinix.nl/products/support-services/managed-services/netherlands\n      Q: @jonkerj\n\n    * N: Exoscale\n      D: Exoscale is offering Cilium as a CNI option on its managed Kubernetes service named SKS (Scalable Kubernetes Service)\n      U: CNI, Networking\n      L: https://www.exoscale.com/sks/\n      Q: @Antoine\n\n    * N: finleap connect\n      D: finleap connect is using Cilium in their production clusters (self-hosted, bare-metal, private cloud)\n      U: CNI, NetworkPolicies\n      Q: @chue\n\n    * N: Form3\n      D: Form3 is using Cilium in their production clusters (self-hosted, bare-metal, private cloud)\n      U: Service load-balancing, Encryption, CNI, NetworkPolicies\n      Q: @kevholditch-f3, samo-f3, ewilde-form3\n\n    * N: FRSCA - Factory for Repeatable Secure Creation of Artifacts\n      D: FRSCA is utilizing tetragon integrated with Tekton to create runtime attestation to attest artifact and builder attributes\n      U: Runtime observability\n      L: https://github.com/buildsec/frsca\n      Q: @Parth Patel\n\n    * N: F5 Inc\n      D: F5 helps customers with Cilium VXLAN tunnel integration with BIG-IP\n      U: Networking\n      L: https://github.com/f5devcentral/f5-ci-docs/blob/master/docs/cilium/cilium-bigip-info.rst\n      Q: @vincentmli\n    \n    * N: Gcore\n      D: Gcore supports Cilium as CNI provider for Gcore Managed Kubernetes Service\n      U: CNI, Networking, NetworkPolicy, Kubernetes Services\n      L: https://gcore.com/news/cilium-cni-support\n      Q: @rzdebskiy\n\n    * N: Giant Swarm\n      D: Giant Swarm is using Cilium in their Cluster API based managed Kubernetes service (AWS, Azure, GCP, OpenStack, VMware Cloud Director and VMware vSphere) as CNI\n      U: Networking\n      L: https://www.giantswarm.io/\n\n    * N: GitLab\n      D: GitLab is using Cilium to implement network policies inside Auto DevOps deployed clusters for customers using k8s\n      U: Network policies\n      L: https://docs.gitlab.com/ee/user/clusters/applications.html#install-cilium-using-gitlab-ci\n      Q: @ap4y @whaber\n\n    * N: Google\n      D: Google is using Cilium in Anthos and Google Kubernetes Engine (GKE) as Dataplane V2\n      U: Networking, network policy, and network visibility\n      L: https://cloud.google.com/blog/products/containers-kubernetes/bringing-ebpf-and-cilium-to-google-kubernetes-engine\n\n    * N: G DATA CyberDefense AG\n      D: G DATA CyberDefense AG is using Cilium on our managed on premise clusters.\n      U: Networking, network policy, security, and network visibility\n      L: https://gdatasoftware.com\n      Q: @farodin91\n\n    * N: IDNIC | Kadabra\n      D: IDNIC is the National Internet Registry administering IP addresses for INDONESIA, uses Cilium to powered Kadabra project runing services across multi data centers.\n      U: Networking, Network Policies, kube-proxy Replacement, Service Load Balancing and Cluster Mesh\n      L: https://ris.idnic.net/\n      Q: @ardikabs\n\n    * N: IKEA IT AB\n      D: IKEA IT AB is using Cilium for production and non-production environments (self-hosted, bare-metal, private cloud)\n      U: Networking, CiliumclusterWideNetworkPolicy, CiliumNetworkPolicy, kube-proxy replacement, Hubble, Direct routing, egress gateway, hubble-otel, Multi Nic XDP, BGP advertisements, Bandwidth Manager, Service Load Balancing, Cluster Mesh\n      L: https://www.ingka.com/\n\n    * N: Immerok\n      D: Immerok uses Cilium for cross-cluster communication and network isolation; Immerok Cloud is a serverless platform for the full power of [Apache Flink](https://flink.apache.org) at any scale.\n      U: Networking, network policy, observability, cluster mesh, kube-proxy replacement, security, CNI\n      L: https://immerok.io\n      Q: @austince, @dmvk\n\n    * N: Incentive.me\n      D: Incentive.me use Cilium, Tetragon and Hubble for enterprise networking, observability, and security of all environments.\n      U: Networking, network policy, observability, cluster mesh, kube-proxy replacement, security, egress gateway, service load balancing, CNI\n      L: https://incentive.me\n      Q: @lucasfcnunes\n\n    * N: Infomaniak\n      D: Infomaniak is using Cilium in their production clusters (self-hosted, bare-metal and openstack)\n      U: Networking, CiliumNetworkPolicy, BPF NodePort, Direct routing, kube-proxy replacement\n      L: https://www.infomaniak.com/en\n      Q: @reneluria\n\n    * N: innoQ Schweiz GmbH\n      D: As a consulting company we added Cilium to a couple of our customers infrastructure\n      U: Networking, CiliumNetworkPolicy at L7, kube-proxy replacement, encryption\n      L: https://www.cloud-migration.ch/\n      Q: @fakod\n\n    * N: Intility AS\n      D: Intility is a managed service provider for enterprises and we use Cilium, Tetragon and Hubble to deliver world class managed Kubernetes clusters to customers from our own private cloud\n      U: Networking, CiliumNetworkPolicy, CiliumCIDRGroup, security, CNI\n      L: https://intility.com/container-platform/\n      Q: @jonasks, @daniwk, @stianfro\n\n     * N: Isovalent\n       D: Cilium is the platform that powers Isovalentâs enterprise networking, observability, and security solutions\n       U: Networking, network policy, observability, cluster mesh, kube-proxy replacement, security, egress gateway, service load balancing, CNI\n       L: https://isovalent.com/product/\n       Q: @BillMulligan\n\n    * N: Jar\n       D: Cilium is used as Jar's CNI on all prod and pre production environments.\n       U: Networking, network policy, observability, cluster mesh, kube-proxy replacement, security, egress gateway, service load balancing, CNI\n       L: https://myjar.app/blog/engineering/\n       Q: @rohan-changejar @rohangrge\n       \n\n    * N: JUMO\n      D: JUMO is using Cilium as their CNI plugin for all of their AWS-hosted EKS clusters\n      U: Networking, network policy, network visibility, cluster mesh\n      Q: @Matthieu ANTOINE, @Carlos Castro, @Joao Coutinho (Slack)\n\n    * N: Kakao\n      D: Kakao is using Cilium as the CNI for their private cloud's managed Kubernetes service\n      U: Custom eBPF programs, networking, network policy, kube-proxy replacement\n      L: https://youtu.be/WRACr5nXl9U\n      Q: @gyutaeb\n\n    * N: Keploy\n      D: Keploy is using the Cilium to capture the network traffic to perform E2E Testing.\n      U: Networking, network policy, Monitoring, E2E Testing\n      L: https://keploy.io/\n\n    * N: Kilo\n      D: Cilium is a supported CNI for Kilo. When used together, Cilium + Kilo create a full mesh via WireGuard for Kubernetes in edge environments.\n      U: CNI, Networking, Hubble, kube-proxy replacement, network policy\n      L: https://kilo.squat.ai/\n      Q: @squat, @arpagon\n\n    * N: Koyeb\n      D: Koyeb hosts microVMs on its own servers and uses Cilium to power a mesh in between those\n      U: Networking, policies inside a non-Kubernetes environment\n      L: https://www.koyeb.com/blog/70-faster-deployments-and-high-performance-private-network\n      Q: @koyeb on Twitter / https://community.koyeb.com/\n\n    * N: kOps\n      D: kOps is using Cilium as one of the supported CNIs\n      U: Networking, Hubble, Encryption, kube-proxy replacement\n      L: kops.sigs.k8s.io/\n      Q: @olemarkus\n\n    * N: Kryptos Logic\n      D: Kryptos is a cyber security company that is using Kubernetes on-prem in which Cilium is our CNI of choice.\n      U: Networking, Observability, kube-proxy replacement\n\n    * N: kubeasz\n      D: kubeasz, a certified kubernetes installer, is using Cilium as a one of the supported CNIs.\n      U: Networking, network policy, Hubble for network visibility\n      L: https://github.com/easzlab/kubeasz\n\n    * N: Kube-OVN\n      D: Kube-OVN uses Cilium to enhance service performance, security and monitoring.\n      U: CNI-Chaining, Hubble, kube-proxy replacement\n      L: https://github.com/kubeovn/kube-ovn/blob/master/docs/IntegrateCiliumIntoKubeOVN.md\n      Q: @oilbeater\n\n    * N: Kube-Hetzner\n      D: Kube-Hetzner is a open-source Terraform project that uses Cilium as an possible CNI in its cluster deployment on Hetzner Cloud.\n      U: Networking, Hubble, kube-proxy replacement\n      L: https://github.com/kube-hetzner/terraform-hcloud-kube-hetzner#cni\n      Q: @MysticalTech\n\n    * N: Kubermatic\n      D: Kubermatic Kubernetes Platform is using Cilium as a one of the supported CNIs.\n      U: Networking, network policy, Hubble for network visibility\n      L: https://github.com/kubermatic/kubermatic\n\n    * N: KubeSphere - KubeKey\n      D: KubeKey is an open-source lightweight tool for deploying Kubernetes clusters and addons efficiently. It uses Cilium as one of the supported CNIs.\n      U: Networking, Security, Hubble UI for network visibility\n      L: https://github.com/kubesphere/kubekey\n      Q: @FeynmanZhou\n\n    * N: K8e - Simple Kubernetes Distribution\n      D: Kubernetes Easy (k8e) is a lightweight, Extensible, Enterprise Kubernetes distribution. It uses Cilium as default CNI network.\n      U: Networking, network policy, Hubble for network visibility\n      L: https://github.com/xiaods/k8e\n      Q: @xds2000\n\n    * N: LinkPool\n      D: LinkPool is a professional Web3 infrastructure provider.\n      U: LinkPool is using Cilium as the CNI for its on-premise production clusters\n      L: https://linkpool.com\n      Q: @jleeh\n\n    * N: Liquid Reply\n      D: Liquid Reply is a professional service provider and utilizes Cilium on suitable projects and implementations.\n      U: Networking, network policy, Hubble for network visibility, Security\n      L: http://liquidreply.com\n      Q: @mkorbi\n\n    * N: Magic Leap\n      D: Magic Leap is using Hubble plugged to GKE Dataplane v2 clusters\n      U: Hubble\n      Q: @romachalm\n\n    * N: Melenion Inc\n      D: Melenion is using Cilium as the CNI for its on-premise production clusters\n      U: Service Load Balancing, Hubble\n      Q: @edude03\n\n    * N: Meltwater\n      D: Meltwater is using Cilium in AWS on self-hosted multi-tenant k8s clusters as the CNI plugin\n      U: ENI Networking, Encryption, Monitoring via Prometheus metrics & Hubble\n      Q: @recollir, @dezmodue\n\n    * N: Microsoft\n      D: Microsoft is using Cilium in \"Azure CNI powered by Cilium\" AKS (Azure Kubernetes Services) clusters\n      L: https://techcommunity.microsoft.com/t5/azure-networking-blog/azure-cni-powered-by-cilium-for-azure-kubernetes-service-aks/ba-p/3662341\n      Q: @tamilmani1989 @chandanAggarwal\n\n    * N: Mobilab\n      D: Mobilab uses Cilium as the CNI for its internal cloud\n      U: CNI\n      L: https://mobilabsolutions.com/2019/01/why-we-switched-to-cilium/\n\n    * N: MyFitnessPal\n      D: MyFitnessPal trusts Cilium with high volume user traffic in AWS on self-hosted k8s clusters as the CNI plugin and in GKE with Dataplane V2\n      U: Networking (CNI, Maglev, kube-proxy replacement, local redirect policy),  Observability (Network metrics with Hubble, DNS proxy, service maps, policy troubleshooting) and Security (Network Policy)\n      L: https://www.myfitnesspal.com\n\n    * N: Mux, Inc.\n      D: Mux deploys Cilium on self-hosted k8s clusters (Cluster API) in GCP and AWS to run its video streaming/analytics platforms.\n      U: Pod networking (CNI, IPAM, Host-reachable Services), Hubble, Cluster-mesh. TBD: Network Policy, Transparent Encryption (WG), Host Firewall.\n      L: https://mux.com\n      Q: @dilyevsky\n      \n    * N: NetBird\n      D: NetBird uses Cilium to compile BPF to Go for cross-platform DNS management and NAT traversal\n      U: bpf2go to compile a C source file into eBPF bytecode and then to Go\n      L: https://netbird.io/knowledge-hub/using-xdp-ebpf-to-share-default-dns-port-between-resolvers\n      Q: @braginini\n\n    * N: Netcloud AG\n      D: As a Swiss ICT company we are using Cilium as their CNI for mission critical, on premise k8s clusters.\n      U: Overlay Networking, CNI, Network Policy, Kube-Proxy Replacement, Service load-balancing\n      L: https://www.netcloud.ch\n      \n    * N: NETWAYS Web Services\n      D: NETWAYS Web Services offers Cilium to their clients as CNI option for their Managed Kubernetes clusters.\n      U: Networking (CNI), Observability (Hubble)\n      L: https://nws.netways.de/managed-kubernetes/\n\n    * N: New York Times (the)\n      D: The New York Times is using Cilium on EKS to build multi-region multi-tenant shared clusters\n      U: Networking (CNI, EKS IPAM, Maglev, kube-proxy replacement, Direct Routing),  Observability (Network metrics with Hubble, policy troubleshooting) and Security (Network Policy)\n      L: https://www.nytimes.com/, https://youtu.be/9FDpMNvPrCw\n      Q: @abebars\n\n    * N: Nexxiot\n      D: Nexxiot is an IoT SaaS provider using Cilium as the main CNI plugin on AWS EKS clusters\n      U: Networking (IPAM, CNI), Security (Network Policies), Visibility (hubble)\n      L: https://nexxiot.com\n\n    * N: Nine Internet Solutions AG\n      D: Nine uses Cilium on all Nine Kubernetes Engine clusters\n      U: CNI, network policy, kube-proxy replacement, host firewall\n      L: https://www.nine.ch/en/kubernetes\n\n    * N: Northflank\n      D: Northflank is a PaaS and uses Cilium as the main CNI plugin across GCP, Azure, AWS and bare-metal\n      U: Networking, network policy, hubble, packet monitoring and network visibility\n      L: https://northflank.com\n      Q: @NorthflankWill, @Champgoblem\n\n    * N: Nutanix\n      D: Nutanix uses Cilium as the default CNI plugin for NKP (Nutanix Kubernetes Platform) when deployed on AHV\n      U: Networking, NetworkPolicy, Services\n      L: https://www.nutanix.com/products/kubernetes-management-platform\n      Q: @tuxtof\n\n    * N: Overstock Inc.\n      D: Overstock is using Cilium as the main CNI plugin on bare-metal clusters (self hosted k8s).\n      U: Networking, network policy, hubble, observability\n\n    * N: Palantir Technologies Inc.\n      D: Palantir is using Cilium as their main CNI plugin in all major cloud providers [AWS/Azure/GCP] (self hosted k8s).\n      U: ENI networking, L3/L4 policies, FQDN based policy, FQDN filtering, IPSec\n      Q: ungureanuvladvictor\n\n    * N: Palark GmbH\n      D: Palark uses Cilium for networking in its Kubernetes platform provided to numerous customers as a part of its DevOps as a Service offering.\n      U: CNI, Networking, Network policy, Security, Hubble UI\n      L: https://blog.palark.com/why-cilium-for-kubernetes-networking/\n      Q: @shurup\n\n    * N: Parseable\n      D: Parseable uses Tertragon for collecting and ingesting eBPF logs for Kubernetes clusters.\n      U: Security, eBPF, Tetragon\n      L: https://www.parseable.io/blog/ebpf-log-analytics\n      Q: @nitisht\n\n    * N: Pionative\n      D: Pionative supplies all its clients across cloud providers with\n      Kubernetes running Cilium to deliver the best performance out there.\n      U: CNI, Networking, Security, eBPF\n      L: https://www.pionative.com\n      Q: @Pionerd\n\n    * N: Plaid Inc\n      D: Plaid is using Cilium as their CNI plugin in self-hosted Kubernetes on AWS.\n      U: CNI, network policies\n      L: [https://plaid.com](https://plaid.com/contact/)\n      Q: @diversario @jandersen-plaid\n\n    * N: PlanetScale\n      D: PlanetScale is using Cilium as the CNI for its serverless database platform.\n      U: Networking (CNI, IPAM, kube-proxy replacement, native routing), Network Security, Cluster Mesh, Load Balancing\n      L: https://planetscale.com/\n      Q: @dctrwatson\n\n    * N: plusserver Kubernetes Engine (PSKE)\n      D: PSKE uses Cilium for multiple scenarios, for examples for managed Kubernetes clusters provided with Gardener Project across AWS and OpenStack.\n      U: CNI , Overlay Network, Network Policies\n      L: https://www.plusserver.com/en/product/managed-kubernetes/, https://github.com/gardener/gardener-extension-networking-cilium\n\n    * N: Polar Signals\n      D: Polar Signals uses Cilium as the CNI on its GKE dataplane v2 based clusters.\n      U: Networking\n      L: https://polarsignals.com\n      Q: @polarsignals @brancz\n\n    * N: Polverio\n      D: Polverio KubeLift is a single-node Kubernetes distribution optimized for Azure, using Cilium as the CNI.\n      U: CNI, IPAM\n      L: https://polverio.com\n      Q: @polverio @stuartpreston\n\n    * N: Poseidon Laboratories\n      D: Poseidon's Typhoon Kubernetes distro uses Cilium as the default CNI and its used internally\n      U: Networking, policies, service load balancing\n      L: https://github.com/poseidon/typhoon/\n      Q: @dghubble @typhoon8s\n\n    * N: PostFinance AG\n      D: PostFinance is using Cilium as their CNI for all mission critical, on premise k8s clusters\n      U: Networking, network policies, kube-proxy replacement\n      L: https://github.com/postfinance\n\n    * N: Proton AG\n      D: Proton is using Cilium as their CNI for all their Kubernetes clusters\n      U: Networking, network policies, host firewall, kube-proxy replacement, Hubble\n      L: https://proton.me/\n      Q: @j4m3s @MrFreezeex\n\n    * N: Radio France\n      D: Radio France is using Cilium in their production clusters (self-hosted k8s with kops on AWS)\n      U: Mainly Service load-balancing\n      Q: @francoisj\n\n    * N: Qpoint\n      D: An eBPF-based egress observability platform for your cloud and production applications\n      U: CNI, bpf2go to compile a C source file into eBPF bytecode and then to Go\n      L: https://www.qpoint.io/ and https://github.com/qpoint-io\n      Q: @Marc Barry\n\n    * N: Rancher Labs, now part of SUSE\n      D: Rancher Labs certified Kubernetes distribution RKE2 can be deployed with Cilium.\n      U: Networking and network policy\n      L: https://github.com/rancher/rke and https://github.com/rancher/rke2\n\n    * N: Rapyuta Robotics.\n      D: Rapyuta is using cilium as their main CNI plugin. (self hosted k8s)\n      U: CiliumNetworkPolicy, Hubble, Service Load Balancing.\n      Q: @Gowtham\n\n    * N: Rafay Systems\n      D: Rafay's Kubernetes Operations Platform uses Cilium for centralized network visibility and network policy enforcement\n      U: NetworkPolicy, Visibility via Prometheus metrics & Hubble\n      L: https://rafay.co/platform/network-policy-manager/\n      Q: @cloudnativeboy @mohanatreya\n\n    * N: Robinhood Markets\n      D: Robinhood uses Cilium for Kubernetes overlay networking in an environment where we run tests for backend services\n      U: CNI, Overlay networking\n      Q: @Madhu CS\n\n    * N: Santa Claus & the Elves\n      D: All our infrastructure to process children's letters and wishes, toy making, and delivery, distributed over multiple clusters around the world, is now powered by Cilium.\n      U: ClusterMesh, L4LB, XDP acceleration, Bandwidth manager, Encryption, Hubble\n      L: https://qmonnet.github.io/whirl-offload/2024/01/02/santa-switches-to-cilium/\n\n    * N: SAP\n      D: SAP uses Cilium for multiple internal scenarios. For examples for self-hosted Kubernetes scenarios on AWS with SAP Concur and for managed Kubernetes clusters provided with Gardener Project across AWS, Azure, GCP, and OpenStack.\n      U: CNI , Overlay Network, Network Policies\n      L: https://www.concur.com, https://gardener.cloud/, https://github.com/gardener/gardener-extension-networking-cilium\n      Q: @dragan (SAP Concur), @docktofuture & @ScheererJ (Gardener)\n\n    * N: Sapian\n      D: Sapian uses Cilium as the default CNI in our product DialBox Cloud; DialBox cloud is an Edge Kubernetes cluster using [kilo](https://github.com/squat/kilo) for WireGuard mesh connectivity inter-nodes. Therefore, Cilium is crucial for low latency in real-time communications environments.\n      U: CNI, Network Policies, Hubble, kube-proxy replacement\n      L: https://sapian.com.co, https://arpagon.co/blog/k8s-edge\n      Q: @arpagon\n\n    * N: Schenker AG\n      D: Land transportation unit of Schenker uses Cilium as default CNI in self-managed kubernetes clusters running in AWS\n      U: CNI, Monitoring, kube-proxy replacement\n      L: https://www.dbschenker.com/global\n      Q: @amirkkn\n\n    * N: Scigility AG\n      D: We use Cilium as the default CNI across client implementations and also for our internal platform.\n      U: CNI, Monitoring, kube-proxy replacement, Hubble\n      L: https://scigility.com/\n      Q: @ciil\n\n    * N: Sealos\n      D: Sealos is using Cilium as a consistent CNI for our Sealos Cloud.\n      U: Networking, Service, kube-proxy replacement, Network Policy, Hubble\n      L: https://sealos.io\n      Q: @fanux, @yangchuansheng\n\n    * N: SeatGeek\n      D: SeatGeek uses Cilium as the default CNI/service mesh for AWS hosted clusters\n      U: CNI, ClusterMesh, Network Policy, Hubble, L7 Mesh\n      L: https://seatgeek.com\n      Q: @byxorna, @aetimmes\n\n    * N: Seznam.cz\n      D: Seznam.cz uses Cilium in multiple scenarios in on-prem DCs. At first as L4LB which loadbalances external traffic into k8s+openstack clusters then as CNI in multiple k8s and openstack clusters which are all connected in a clustermesh to enforce NetworkPolicies across pods/VMs.\n      U: L4LB, L3/4 CNPs+CCNPs, KPR, Hubble, HostPolicy, Direct-routing, IPv4+IPv6, ClusterMesh\n      Q: @oblazek\n\n    * N: Simple\n      D: Simple uses cilium as default CNI in Kubernetes clusters (AWS EKS) for both development and production environments.\n      U: CNI, Network Policies, Hubble\n      L: https://simple.life\n      Q: @sergeyshevch\n\n    * N: Scaleway\n      D: Scaleway uses Cilium as the default CNI for Kubernetes Kapsule\n      U: Networking, NetworkPolicy, Services\n      L: @jtherin @remyleone\n\n    * N: Schuberg Philis\n      D: Schuberg Philis uses Cilium as CNI for mission critical kubernetes clusters we run for our customers.\n      U: CNI (instead of amazon-vpc-cni-k8s), DefaultDeny(Zero Trust), Hubble, CiliumNetworkPolicy, CiliumClusterwideNetworkPolicy, EKS\n      L: https://schubergphilis.com/en\n      Q: @stimmerman @shoekstra @mbaumann\n\n    * N: SDV Services\n      D: SDV Services uses Cilium to host Wordpress multi-tenant the cloud-native way and also as the CNI for customer Kubernetes clusters.\n      U: CNI, Networking, NetworkPolicy, Hubble, IPAM, Kubernetes services\n      L: https://sdvservices.nl\n      Q: @Sjouke de Vries\n      \n    * N: SI Analytics\n      D: SI Analytics uses Cilium as CNI in self-managed Kubernetes clusters in on-prem DCs. And also use Cilium as CNI in its GKE dataplane v2 based clusters.\n      U: CNI, Network Policies, Hubble\n      L: https://si-analytics.ai, https://ovision.ai\n      Q: @jholee\n\n    * N: SIGHUP\n      D: SIGHUP integrated Cilium as a supported CNI for KFD (Kubernetes Fury Distribution), our enterprise-grade OSS reference architecture\n      U: Available supported CNI\n      L: https://sighup.io, https://github.com/sighupio/fury-kubernetes-networking\n      Q: @jnardiello @nutellino\n\n    * N: SmileDirectClub\n      D: SmileDirectClub is using Cilium in manufacturing clusters (self-hosted on vSphere and AWS EC2)\n      U: CNI\n      Q: @joey, @onur.gokkocabas\n\n    * N: Snapp\n      D: Snapp is using Cilium in production for its on premise openshift clusters\n      U: CNI, Network Policies, Hubble\n      Q: @m-yosefpor\n\n    * N: Solo.io\n      D: Cilium is part of Gloo Application Networking platform, with a âbatteries included but swappableâ manner\n      U: CNI, Network Policies\n      Q: @linsun\n\n    * N: S&P Global\n      D: S&P Global uses Cilium as their multi-cloud CNI\n      U: CNI\n      L: https://www.youtube.com/watch?v=6CZ_SSTqb4g\n\n    * N: Spectro Cloud\n      D: Spectro Cloud uses & promotes Cilium for clusters its K8S management platform (Palette) deploys\n      U: CNI, Overlay network, kube-proxy replacement\n      Q: @Kevin Reeuwijk\n\n    * N: Spherity\n      D: Spherity  is using Cilium on AWS EKS\n      U: CNI/ENI Networking, Network policies, Hubble\n      Q: @solidnerd\n\n    * N: Sportradar\n      D: Sportradar is using Cilium as their main CNI plugin in AWS (using kops)\n      U: L3/L4 policies, Hubble, BPF NodePort, CiliumClusterwideNetworkPolicy\n      Q: @Eric Bailey, @Ole Markus\n\n    * N: Sproutfi\n      D: Sproutfi uses Cilium as the CNI on its GKE based clusters\n      U: Service Load Balancing, Hubble, Datadog Integration for Prometheus metrics\n      Q: @edude03\n\n    * N: SuperOrbital\n      D: As a Kubernetes-focused consulting firm, we have implemented Cilium on customer engagements\n      U: CNI, CiliumNetworkPolicy at L7, Hubble\n      L: https://superorbital.io/\n      Q: @jmcshane\n\n    * N: Syself\n      D: Syself uses Cilium as the CNI for Syself Autopilot, a managed Kubernetes platform\n      U: CNI, HostFirewall, Monitoring, CiliumClusterwideNetworkPolicy, Hubble\n      L: https://syself.com\n      Q: @sbaete\n\n    * N: Talos\n      D: Cilium is one of the supported CNI's in Talos\n      U: Networking, NetworkPolicy, Hubble, BPF NodePort\n      L: https://github.com/talos-systems/talos\n      Q: @frezbo, @smira, @Ulexus\n\n    * N: Tencent Cloud\n      D: Tencent Cloud container team designed the TKE hybrid cloud container network solution with Cilium as the cluster network base\n      U: Networking, CNI\n      L: https://segmentfault.com/a/1190000040298428/en\n\n    * N: teuto.net Netzdienste GmbH\n      D: teuto.net is using cilium for their managed k8s service, t8s\n      U: CNI, CiliumNetworkPolicy, Hubble, Encryption, ...\n      L: https://teuto.net/managed-kubernetes\n      Q: @cwrau\n\n    * N: Trendyol\n      D: Trendyol.com has recently implemented Cilium as the default CNI for its production Kubernetes clusters starting from version 1.26.\n      U: Networking, kube-proxy replacement, eBPF, Network Visibility with Hubble and Grafana, Local Redirect Policy\n      L: https://t.ly/FDCZK\n\n    * N: T-Systems International\n      D: TSI uses Cilium for it's Open Sovereign Cloud product, including as a CNI for Gardener-based Kubernetes clusters and bare-metal infrastructure managed by OnMetal.\n      U: CNI, overlay network, NetworkPolicies\n      Q: @ManuStoessel\n\n    * N: uSwitch\n      D: uSwitch is using Cilium in AWS for all their production clusters (self hosted k8s)\n      U: ClusterMesh, CNI-Chaining (with amazon-vpc-cni-k8s)\n      Q: @jirving\n\n    * N: United Cloud\n      D: United Cloud is using Cilium for all non-production and production clusters (on-premises)\n      U: CNI, Hubble, CiliumNetworkPolicy, CiliumClusterwideNetworkPolicy, ClusterMesh, Encryption\n      L: https://united.cloud\n      Q: @boris\n\n    * N: Utmost Software, Inc\n      D: Utmost is using Cilium in all tiers of its Kubernetes ecosystem to implement zero trust\n      U: CNI, DefaultDeny(Zero Trust), Hubble, CiliumNetworkPolicy, CiliumClusterwideNetworkPolicy\n      L: https://blog.utmost.co/zero-trust-security-at-utmost\n      Q: @andrewholt\n\n    * N: Trip.com\n      D: Trip.com is using Cilium in their production clusters (self-hosted k8s, On-premises and AWS)\n      U: ENI Networking, Service load-balancing, Direct routing (via Bird)\n      L: https://ctripcloud.github.io/cilium/network/2020/01/19/trip-first-step-towards-cloud-native-networking.html\n      Q: @ArthurChiao\n\n    * N: Tailor Brands\n      D: Tailor Brands is using Cilium in their production, staging, and development clusters (AWS EKS)\n      U: CNI (instead of amazon-vpc-cni-k8s), Hubble, Datadog Integration for Prometheus metrics\n      Q: @liorrozen\n\n    * N: Twilio\n      D: Twilio Segment is using Cilium across their k8s-based compute platform\n      U: CNI, EKS direct routing, kube-proxy replacement, Hubble, CiliumNetworkPolicies\n      Q: @msaah\n\n    * N: ungleich\n      D: ungleich is using Cilium as part of IPv6-only Kubernetes deployments.\n      U: CNI, IPv6 only networking, BGP, eBPF\n      Q: @Nico Schottelius, @nico:ungleich.ch (Matrix)\n\n    * N: Veepee\n      D: Veepee is using Cilium on their on-premise Kubernetes clusters, hosting majority of their applications.\n      U. CNI, BGP, eBPF, Hubble, DirectRouting (via kube-router)\n      Q: @nerzhul\n\n    * N: Virtuozzo\n      D: Cilium CNI is the default network plugin for Kubernetes clusters within Virtuozzo Hybrid Infrastructure.\n      U: Networking, NetworkPolicy, Services\n      L: https://docs.virtuozzo.com/virtuozzo_hybrid_infrastructure_6_3_admins_guide/index.html#provisioning-kubernetes.html\n      Q: egor.ustinov@virtuozzo.com\n\n    * N: VMware by Broadcom\n      D: VMware offers multi-arch (ARM, AMD) and multi-distro (Ubuntu, RedHat UBI, Debian, PhotonOS) Cilium as part of the Tanzu Application Catalog, enabling customers to deploy it in their Kubernetes infrastructure.\n      U: CNI, Hubble, BGP, eBPF, CiliumNetworkPolicy, CiliumClusterwideNetworkPolicy\n      L: https://app-catalog.vmware.com/catalog?gfilter=cilium\n      Q: @carrodher\n\n    * N: Wildlife Studios\n      D: Wildlife Studios is using Cilium in AWS for all their game production clusters (self hosted k8s)\n      U: ClusterMesh, Global Service Load Balancing.\n      Q: @Oki @luanguimaraesla @rsafonseca\n\n    * N: WSO2\n      D: WSO2 is using Cilium to implemented Zero Trust Network Security for their Kubernetes clusters\n      U: CNI, WireGuard Transparent Encryption, CiliumClusterWideNetworkpolicy, CiliumNetworkPolicy, Hubble, Layer 7 visibility and Service Mesh via Cilium Envoy\n      L: https://www.cncf.io/case-studies/wso2/\n      Q: @lakwarus @isala404 @tharinduwijewardane\n\n    * N: Yahoo!\n      D: Yahoo is using Cilium for L4 North-South Load Balancing for Kubernetes Services\n      L: https://www.youtube.com/watch?v=-C86fBMcp5Q\n\n    * N: ZeroHash\n      D: Zero Hash is using Cilium as CNI for networking, security and monitoring features for Kubernetes clusters\n      U: CNI/ENI Networking, Network policies, Hubble\n      Q: @eugenestarchenko\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.0107421875,
          "content": "1.18.0-dev\n"
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "bpf",
          "type": "tree",
          "content": null
        },
        {
          "name": "bugtool",
          "type": "tree",
          "content": null
        },
        {
          "name": "cilium-cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "cilium-dbg",
          "type": "tree",
          "content": null
        },
        {
          "name": "cilium-health",
          "type": "tree",
          "content": null
        },
        {
          "name": "clustermesh-apiserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "daemon",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 14.966796875,
          "content": "module github.com/cilium/cilium\n\ngo 1.23.0\n\nrequire (\n\tgithub.com/AdaLogics/go-fuzz-headers v0.0.0-20240806141605-e8a1dd7889d6\n\tgithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.16.0\n\tgithub.com/Azure/azure-sdk-for-go/sdk/azidentity v1.8.0\n\tgithub.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute v1.0.0\n\tgithub.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork v1.1.0\n\tgithub.com/aliyun/alibaba-cloud-sdk-go v1.63.77\n\tgithub.com/aws/aws-sdk-go-v2 v1.32.7\n\tgithub.com/aws/aws-sdk-go-v2/config v1.28.7\n\tgithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.22\n\tgithub.com/aws/aws-sdk-go-v2/service/ec2 v1.198.1\n\tgithub.com/aws/smithy-go v1.22.1\n\tgithub.com/blang/semver/v4 v4.0.0\n\tgithub.com/cespare/xxhash/v2 v2.3.0\n\tgithub.com/cilium/charts v0.0.0-20241218153829-9518b30a2027\n\tgithub.com/cilium/coverbee v0.3.3-0.20240723084546-664438750fce\n\tgithub.com/cilium/deepequal-gen v0.0.0-20241016021505-f57df2fe2e62\n\tgithub.com/cilium/dns v1.1.51-0.20240603182237-af788769786a\n\tgithub.com/cilium/ebpf v0.17.1\n\tgithub.com/cilium/endpointslice-controller v0.0.0-20240409203012-75cb5d61db1b\n\tgithub.com/cilium/fake v0.6.1\n\tgithub.com/cilium/hive v0.0.0-20241213121623-605c1412b9b3\n\tgithub.com/cilium/linters v0.1.0\n\tgithub.com/cilium/lumberjack/v2 v2.4.1\n\tgithub.com/cilium/proxy v0.0.0-20241219105110-b2e1bb5839df\n\tgithub.com/cilium/statedb v0.3.5\n\tgithub.com/cilium/stream v0.0.0-20241203114243-53c3e5d79744\n\tgithub.com/cilium/workerpool v1.2.0\n\tgithub.com/cloudflare/cfssl v1.6.5\n\tgithub.com/containernetworking/cni v1.2.3\n\tgithub.com/coreos/go-systemd/v22 v22.5.0\n\tgithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc\n\tgithub.com/docker/docker v27.4.1+incompatible\n\tgithub.com/docker/libnetwork v0.8.0-dev.2.0.20210525090646-64b7a4574d14\n\tgithub.com/evanphx/json-patch v5.9.0+incompatible\n\tgithub.com/fatih/color v1.18.0\n\tgithub.com/fsnotify/fsnotify v1.8.0\n\tgithub.com/go-logr/logr v1.4.2\n\tgithub.com/go-openapi/errors v0.22.0\n\tgithub.com/go-openapi/loads v0.22.0\n\tgithub.com/go-openapi/runtime v0.28.0\n\tgithub.com/go-openapi/spec v0.21.0\n\tgithub.com/go-openapi/strfmt v0.23.0\n\tgithub.com/go-openapi/swag v0.23.0\n\tgithub.com/go-openapi/validate v0.24.0\n\tgithub.com/gogo/protobuf v1.3.2\n\tgithub.com/golang/groupcache v0.0.0-20241129210726-2c02b8208cf8\n\tgithub.com/google/cel-go v0.22.1\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/google/go-licenses v1.6.1-0.20230903011517-706b9c60edd4\n\tgithub.com/google/gops v0.3.28\n\tgithub.com/google/renameio/v2 v2.0.0\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/gopacket/gopacket v1.3.1\n\tgithub.com/gorilla/mux v1.8.1\n\tgithub.com/grpc-ecosystem/go-grpc-middleware/v2 v2.2.0\n\tgithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0\n\tgithub.com/hashicorp/go-hclog v1.6.3\n\tgithub.com/hashicorp/go-immutable-radix/v2 v2.1.0\n\tgithub.com/hashicorp/golang-lru/v2 v2.0.7\n\tgithub.com/jeremywohl/flatten v1.0.1\n\tgithub.com/json-iterator/go v1.1.12\n\tgithub.com/kevinburke/ssh_config v1.2.0\n\tgithub.com/lthibault/jitterbug/v2 v2.2.2\n\tgithub.com/mackerelio/go-osstat v0.2.5\n\tgithub.com/mattn/go-shellwords v1.0.12\n\tgithub.com/mdlayher/arp v0.0.0-20220512170110-6706a2966875\n\tgithub.com/mdlayher/ethernet v0.0.0-20220221185849-529eae5b6118\n\tgithub.com/mitchellh/go-wordwrap v1.0.1\n\tgithub.com/onsi/ginkgo v1.16.5\n\tgithub.com/onsi/gomega v1.35.1\n\tgithub.com/osrg/gobgp/v3 v3.33.0\n\tgithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c\n\tgithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2\n\tgithub.com/prometheus-community/pro-bing v0.5.0\n\tgithub.com/prometheus/client_golang v1.20.5\n\tgithub.com/prometheus/client_model v0.6.1\n\tgithub.com/prometheus/common v0.61.0\n\tgithub.com/prometheus/procfs v0.15.1\n\tgithub.com/russross/blackfriday/v2 v2.1.0\n\tgithub.com/sasha-s/go-deadlock v0.3.5\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/spf13/afero v1.11.0\n\tgithub.com/spf13/cast v1.7.1\n\tgithub.com/spf13/cobra v1.8.1\n\tgithub.com/spf13/pflag v1.0.6-0.20210604193023-d5e0c0615ace\n\tgithub.com/spf13/viper v1.19.0\n\tgithub.com/spiffe/go-spiffe/v2 v2.4.0\n\tgithub.com/spiffe/spire-api-sdk v1.11.1\n\tgithub.com/stretchr/testify v1.10.0\n\tgithub.com/tidwall/gjson v1.18.0\n\tgithub.com/tidwall/sjson v1.2.5\n\tgithub.com/vishvananda/netlink v1.3.1-0.20241227191253-26ee0e2abe2d\n\tgithub.com/vishvananda/netns v0.0.5\n\tgo.etcd.io/etcd/api/v3 v3.5.17\n\tgo.etcd.io/etcd/client/pkg/v3 v3.5.17\n\tgo.etcd.io/etcd/client/v3 v3.5.17\n\tgo.opentelemetry.io/otel v1.33.0\n\tgo.opentelemetry.io/otel/trace v1.33.0\n\tgo.uber.org/goleak v1.3.0\n\tgo.uber.org/zap v1.27.0\n\tgo4.org/netipx v0.0.0-20231129151722-fdeea329fbba\n\tgolang.org/x/crypto v0.32.0\n\tgolang.org/x/mod v0.22.0\n\tgolang.org/x/net v0.34.0\n\tgolang.org/x/sync v0.10.0\n\tgolang.org/x/sys v0.29.0\n\tgolang.org/x/term v0.28.0\n\tgolang.org/x/time v0.9.0\n\tgolang.org/x/tools v0.29.0\n\tgolang.zx2c4.com/wireguard/wgctrl v0.0.0-20241231184526-a9ab2273dd10\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20250106144421-5f5ef82da422\n\tgoogle.golang.org/grpc v1.69.2\n\tgoogle.golang.org/protobuf v1.36.2\n\tgopkg.in/ini.v1 v1.67.0\n\tgopkg.in/yaml.v3 v3.0.1\n\thelm.sh/helm/v3 v3.16.4\n\tk8s.io/api v0.32.0\n\tk8s.io/apiextensions-apiserver v0.32.0\n\tk8s.io/apimachinery v0.32.0\n\tk8s.io/cli-runtime v0.32.0\n\tk8s.io/client-go v0.32.0\n\tk8s.io/code-generator v0.32.0\n\tk8s.io/component-base v0.32.0\n\tk8s.io/endpointslice v0.32.0\n\tk8s.io/klog/v2 v2.130.1\n\tk8s.io/kubectl v0.32.0\n\tk8s.io/utils v0.0.0-20241210054802-24370beab758\n\tsigs.k8s.io/controller-runtime v0.19.3\n\tsigs.k8s.io/controller-tools v0.16.5\n\tsigs.k8s.io/gateway-api v1.2.1\n\tsigs.k8s.io/mcs-api v0.1.1-0.20241217092652-fede3192824f\n\tsigs.k8s.io/yaml v1.4.0\n)\n\nrequire (\n\tcel.dev/expr v0.18.0 // indirect\n\tdario.cat/mergo v1.0.1 // indirect\n\tgithub.com/Azure/azure-sdk-for-go/sdk/internal v1.10.0 // indirect\n\tgithub.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161 // indirect\n\tgithub.com/AzureAD/microsoft-authentication-library-for-go v1.2.2 // indirect\n\tgithub.com/BurntSushi/toml v1.3.2 // indirect\n\tgithub.com/MakeNowJust/heredoc v1.0.0 // indirect\n\tgithub.com/Masterminds/goutils v1.1.1 // indirect\n\tgithub.com/Masterminds/semver/v3 v3.3.0 // indirect\n\tgithub.com/Masterminds/sprig/v3 v3.3.0 // indirect\n\tgithub.com/Masterminds/squirrel v1.5.4 // indirect\n\tgithub.com/Microsoft/go-winio v0.6.2 // indirect\n\tgithub.com/alecthomas/participle/v2 v2.1.0 // indirect\n\tgithub.com/antlr4-go/antlr/v4 v4.13.0 // indirect\n\tgithub.com/asaskevich/govalidator v0.0.0-20230301143203-a9d515a09cc2 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/credentials v1.17.48 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.26 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.26 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/ini v1.8.1 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.1 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.7 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sso v1.24.8 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.28.7 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sts v1.33.3 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/census-instrumentation/opencensus-proto v0.4.1 // indirect\n\tgithub.com/chai2010/gettext-go v1.0.2 // indirect\n\tgithub.com/cilium/endpointslice v0.29.4-0.20240409195643-982ad68ab7ba // indirect\n\tgithub.com/cncf/xds/go v0.0.0-20241213214725-57cfbe6fad57 // indirect\n\tgithub.com/containerd/containerd v1.7.23 // indirect\n\tgithub.com/containerd/errdefs v0.3.0 // indirect\n\tgithub.com/containerd/log v0.1.0 // indirect\n\tgithub.com/containerd/platforms v0.2.1 // indirect\n\tgithub.com/coreos/go-semver v0.3.1 // indirect\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.4 // indirect\n\tgithub.com/cyphar/filepath-securejoin v0.3.4 // indirect\n\tgithub.com/dgryski/go-farm v0.0.0-20200201041132-a6ae2369ad13 // indirect\n\tgithub.com/distribution/reference v0.6.0 // indirect\n\tgithub.com/docker/cli v25.0.1+incompatible // indirect\n\tgithub.com/docker/distribution v2.8.3+incompatible // indirect\n\tgithub.com/docker/docker-credential-helpers v0.7.0 // indirect\n\tgithub.com/docker/go-connections v0.5.0 // indirect\n\tgithub.com/docker/go-metrics v0.0.1 // indirect\n\tgithub.com/docker/go-units v0.5.0 // indirect\n\tgithub.com/eapache/channels v1.1.0 // indirect\n\tgithub.com/eapache/queue v1.1.0 // indirect\n\tgithub.com/emicklei/go-restful/v3 v3.12.0 // indirect\n\tgithub.com/envoyproxy/protoc-gen-validate v1.1.0 // indirect\n\tgithub.com/evanphx/json-patch/v5 v5.9.0 // indirect\n\tgithub.com/exponent-io/jsonpath v0.0.0-20210407135951-1de76d718b3f // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/fxamacker/cbor/v2 v2.7.0 // indirect\n\tgithub.com/go-errors/errors v1.4.2 // indirect\n\tgithub.com/go-gorp/gorp/v3 v3.1.0 // indirect\n\tgithub.com/go-jose/go-jose/v4 v4.0.4 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/go-openapi/analysis v0.23.0 // indirect\n\tgithub.com/go-openapi/jsonpointer v0.21.0 // indirect\n\tgithub.com/go-openapi/jsonreference v0.21.0 // indirect\n\tgithub.com/gobuffalo/flect v1.0.3 // indirect\n\tgithub.com/gobwas/glob v0.2.3 // indirect\n\tgithub.com/godbus/dbus/v5 v5.1.0 // indirect\n\tgithub.com/golang-jwt/jwt/v5 v5.2.1 // indirect\n\tgithub.com/golang/protobuf v1.5.4 // indirect\n\tgithub.com/google/btree v1.1.2 // indirect\n\tgithub.com/google/certificate-transparency-go v1.1.7 // indirect\n\tgithub.com/google/gnostic-models v0.6.8 // indirect\n\tgithub.com/google/gofuzz v1.2.0 // indirect\n\tgithub.com/google/licenseclassifier/v2 v2.0.0 // indirect\n\tgithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510 // indirect\n\tgithub.com/gorilla/websocket v1.5.1 // indirect\n\tgithub.com/gosuri/uitable v0.0.4 // indirect\n\tgithub.com/gregjones/httpcache v0.0.0-20190611155906-901d90724c79 // indirect\n\tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n\tgithub.com/hashicorp/go-multierror v1.1.1 // indirect\n\tgithub.com/hashicorp/hcl v1.0.1-vault-5 // indirect\n\tgithub.com/huandu/xstrings v1.5.0 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/ishidawataru/sctp v0.0.0-20230406120618-7ff4192f6ff2 // indirect\n\tgithub.com/jmespath/go-jmespath v0.4.0 // indirect\n\tgithub.com/jmoiron/sqlx v1.4.0 // indirect\n\tgithub.com/josharian/intern v1.0.0 // indirect\n\tgithub.com/josharian/native v1.1.0 // indirect\n\tgithub.com/k-sone/critbitgo v1.4.0 // indirect\n\tgithub.com/klauspost/compress v1.17.9 // indirect\n\tgithub.com/kylelemons/godebug v1.1.0 // indirect\n\tgithub.com/lann/builder v0.0.0-20180802200727-47ae307949d0 // indirect\n\tgithub.com/lann/ps v0.0.0-20150810152359-62de8c46ede0 // indirect\n\tgithub.com/lib/pq v1.10.9 // indirect\n\tgithub.com/liggitt/tabwriter v0.0.0-20181228230101-89fcab3d43de // indirect\n\tgithub.com/magiconair/properties v1.8.7 // indirect\n\tgithub.com/mailru/easyjson v0.7.7 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.13 // indirect\n\tgithub.com/mdlayher/genetlink v1.3.2 // indirect\n\tgithub.com/mdlayher/netlink v1.7.2 // indirect\n\tgithub.com/mdlayher/packet v1.1.2 // indirect\n\tgithub.com/mdlayher/socket v0.5.1 // indirect\n\tgithub.com/miekg/dns v1.1.62 // indirect\n\tgithub.com/mitchellh/copystructure v1.2.0 // indirect\n\tgithub.com/mitchellh/mapstructure v1.5.0 // indirect\n\tgithub.com/mitchellh/reflectwalk v1.0.2 // indirect\n\tgithub.com/moby/docker-image-spec v1.3.1 // indirect\n\tgithub.com/moby/locker v1.0.1 // indirect\n\tgithub.com/moby/spdystream v0.5.0 // indirect\n\tgithub.com/moby/sys/userns v0.1.0 // indirect\n\tgithub.com/moby/term v0.5.0 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/monochromegane/go-gitignore v0.0.0-20200626010858-205db1a8cc00 // indirect\n\tgithub.com/morikuni/aec v1.0.0 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/mxk/go-flowrate v0.0.0-20140419014527-cca7078d478f // indirect\n\tgithub.com/nxadm/tail v1.4.8 // indirect\n\tgithub.com/oklog/ulid v1.3.1 // indirect\n\tgithub.com/opencontainers/go-digest v1.0.0 // indirect\n\tgithub.com/opencontainers/image-spec v1.1.0 // indirect\n\tgithub.com/opentracing/opentracing-go v1.2.1-0.20220228012449-10b1cf09e00b // indirect\n\tgithub.com/pelletier/go-toml v1.9.5 // indirect\n\tgithub.com/pelletier/go-toml/v2 v2.2.2 // indirect\n\tgithub.com/peterbourgon/diskv v2.0.1+incompatible // indirect\n\tgithub.com/petermattis/goid v0.0.0-20240813172612-4fcff4a6cae7 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/rivo/uniseg v0.4.4 // indirect\n\tgithub.com/rubenv/sql-migrate v1.7.0 // indirect\n\tgithub.com/sagikazarmark/locafero v0.4.0 // indirect\n\tgithub.com/sagikazarmark/slog-shim v0.1.0 // indirect\n\tgithub.com/sergi/go-diff v1.3.1 // indirect\n\tgithub.com/shopspring/decimal v1.4.0 // indirect\n\tgithub.com/sourcegraph/conc v0.3.0 // indirect\n\tgithub.com/stoewer/go-strcase v1.3.0 // indirect\n\tgithub.com/subosito/gotenv v1.6.0 // indirect\n\tgithub.com/tidwall/match v1.1.1 // indirect\n\tgithub.com/tidwall/pretty v1.2.0 // indirect\n\tgithub.com/weppos/publicsuffix-go v0.30.0 // indirect\n\tgithub.com/x448/float16 v0.8.4 // indirect\n\tgithub.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb // indirect\n\tgithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415 // indirect\n\tgithub.com/xeipuuv/gojsonschema v1.2.0 // indirect\n\tgithub.com/xlab/treeprint v1.2.0 // indirect\n\tgithub.com/zeebo/errs v1.3.0 // indirect\n\tgithub.com/zmap/zcrypto v0.0.0-20230310154051-c8b263fd8300 // indirect\n\tgithub.com/zmap/zlint/v3 v3.5.0 // indirect\n\tgo.mongodb.org/mongo-driver v1.14.0 // indirect\n\tgo.opencensus.io v0.24.0 // indirect\n\tgo.opentelemetry.io/auto/sdk v1.1.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.22.0 // indirect\n\tgo.opentelemetry.io/otel/metric v1.33.0 // indirect\n\tgo.opentelemetry.io/proto/otlp v1.4.0 // indirect\n\tgo.uber.org/atomic v1.11.0 // indirect\n\tgo.uber.org/dig v1.17.1 // indirect\n\tgo.uber.org/multierr v1.11.0 // indirect\n\tgolang.org/x/exp v0.0.0-20240808152545-0cdaa3abc0fa // indirect\n\tgolang.org/x/oauth2 v0.24.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgolang.zx2c4.com/wireguard v0.0.0-20231211153847-12269c276173 // indirect\n\tgomodules.xyz/jsonpatch/v2 v2.4.0 // indirect\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20241216192217-9240e9c98484 // indirect\n\tgopkg.in/evanphx/json-patch.v4 v4.12.0 // indirect\n\tgopkg.in/inf.v0 v0.9.1 // indirect\n\tgopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 // indirect\n\tgopkg.in/yaml.v2 v2.4.0 // indirect\n\tgotest.tools/v3 v3.5.0 // indirect\n\tk8s.io/apiserver v0.32.0 // indirect\n\tk8s.io/gengo/v2 v2.0.0-20240911193312-2b36238f13e9 // indirect\n\tk8s.io/kube-openapi v0.0.0-20241105132330-32ad38e42d3f // indirect\n\toras.land/oras-go v1.2.5 // indirect\n\tsigs.k8s.io/json v0.0.0-20241010143419-9aa6b5e7a4b3 // indirect\n\tsigs.k8s.io/kustomize/api v0.18.0 // indirect\n\tsigs.k8s.io/kustomize/kyaml v0.18.1 // indirect\n\tsigs.k8s.io/structured-merge-diff/v4 v4.4.2 // indirect\n)\n\n// Using private fork of controller-tools. See commit msg for more context\n// as to why we are using a private fork.\nreplace sigs.k8s.io/controller-tools => github.com/cilium/controller-tools v0.16.5-1\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 102.6201171875,
          "content": "cel.dev/expr v0.18.0 h1:CJ6drgk+Hf96lkLikr4rFf19WrU0BOWEihyZnI2TAzo=\ncel.dev/expr v0.18.0/go.mod h1:MrpN08Q+lEBs+bGYdLxxHkZoUSsCp0nSKTs0nTymJgw=\ncloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ndario.cat/mergo v1.0.1 h1:Ra4+bf83h2ztPIQYNP99R6m+Y7KfnARDfID+a+vLl4s=\ndario.cat/mergo v1.0.1/go.mod h1:uNxQE+84aUszobStD9th8a29P2fMDhsBdgRYvZOxGmk=\ndmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\nfilippo.io/edwards25519 v1.1.0 h1:FNf4tywRC1HmFuKW5xopWpigGjJKiJSV0Cqo0cJWDaA=\nfilippo.io/edwards25519 v1.1.0/go.mod h1:BxyFTGdWcka3PhytdK4V28tE5sGfRvvvRV7EaN4VDT4=\ngithub.com/AdaLogics/go-fuzz-headers v0.0.0-20240806141605-e8a1dd7889d6 h1:He8afgbRMd7mFxO99hRNu+6tazq8nFF9lIwo9JFroBk=\ngithub.com/AdaLogics/go-fuzz-headers v0.0.0-20240806141605-e8a1dd7889d6/go.mod h1:8o94RPi1/7XTJvwPpRSzSUedZrtlirdB3r9Z20bi2f8=\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.16.0 h1:JZg6HRh6W6U4OLl6lk7BZ7BLisIzM9dG1R50zUk9C/M=\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.16.0/go.mod h1:YL1xnZ6QejvQHWJrX/AvhFl4WW4rqHVoKspWNVwFk0M=\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity v1.8.0 h1:B/dfvscEQtew9dVuoxqxrUKKv8Ih2f55PydknDamU+g=\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity v1.8.0/go.mod h1:fiPSssYvltE08HJchL04dOy+RD4hgrjph0cwGGMntdI=\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity/cache v0.3.0 h1:+m0M/LFxN43KvULkDNfdXOgrjtg6UYJPFBJyuEcRCAw=\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity/cache v0.3.0/go.mod h1:PwOyop78lveYMRs6oCxjiVyBdyCgIYH6XHIVZO9/SFQ=\ngithub.com/Azure/azure-sdk-for-go/sdk/internal v1.10.0 h1:ywEEhmNahHBihViHepv3xPBn1663uRv2t2q/ESv9seY=\ngithub.com/Azure/azure-sdk-for-go/sdk/internal v1.10.0/go.mod h1:iZDifYGJTIgIIkYRNWPENUnqx6bJ2xnSDFI2tjwZNuY=\ngithub.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute v1.0.0 h1:/Di3vB4sNeQ+7A8efjUVENvyB945Wruvstucqp7ZArg=\ngithub.com/Azure/azure-sdk-for-go/sdk/resourcemanager/compute/armcompute v1.0.0/go.mod h1:gM3K25LQlsET3QR+4V74zxCsFAy0r6xMNN9n80SZn+4=\ngithub.com/Azure/azure-sdk-for-go/sdk/resourcemanager/internal v1.0.0 h1:lMW1lD/17LUA5z1XTURo7LcVG2ICBPlyMHjIUrcFZNQ=\ngithub.com/Azure/azure-sdk-for-go/sdk/resourcemanager/internal v1.0.0/go.mod h1:ceIuwmxDWptoW3eCqSXlnPsZFKh4X+R38dWPv7GS9Vs=\ngithub.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork v1.1.0 h1:QM6sE5k2ZT/vI5BEe0r7mqjsUSnhVBFbOsVkEuaEfiA=\ngithub.com/Azure/azure-sdk-for-go/sdk/resourcemanager/network/armnetwork v1.1.0/go.mod h1:243D9iHbcQXoFUtgHJwL7gl2zx1aDuDMjvBZVGr2uW0=\ngithub.com/Azure/azure-sdk-for-go/sdk/resourcemanager/resources/armresources v1.0.0 h1:ECsQtyERDVz3NP3kvDOTLvbQhqWp/x9EsGKtb4ogUr8=\ngithub.com/Azure/azure-sdk-for-go/sdk/resourcemanager/resources/armresources v1.0.0/go.mod h1:s1tW/At+xHqjNFvWU4G0c0Qv33KOhvbGNj0RCTQDV8s=\ngithub.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161 h1:L/gRVlceqvL25UVaW/CKtUDjefjrs0SPonmDGUVOYP0=\ngithub.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=\ngithub.com/AzureAD/microsoft-authentication-extensions-for-go/cache v0.1.1 h1:WJTmL004Abzc5wDB5VtZG2PJk5ndYDgVacGqfirKxjM=\ngithub.com/AzureAD/microsoft-authentication-extensions-for-go/cache v0.1.1/go.mod h1:tCcJZ0uHAmvjsVYzEFivsRTN00oz5BEsRgQHu5JZ9WE=\ngithub.com/AzureAD/microsoft-authentication-library-for-go v1.2.2 h1:XHOnouVk1mxXfQidrMEnLlPk9UMeRtyBTnEFtxkV0kU=\ngithub.com/AzureAD/microsoft-authentication-library-for-go v1.2.2/go.mod h1:wP83P5OoQ5p6ip3ScPr0BAq0BvuPAvacpEuSzyouqAI=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/toml v1.3.2 h1:o7IhLm0Msx3BaB+n3Ag7L8EVlByGnpq14C4YWiu/gL8=\ngithub.com/BurntSushi/toml v1.3.2/go.mod h1:CxXYINrC8qIiEnFrOxCa7Jy5BFHlXnUU2pbicEuybxQ=\ngithub.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\ngithub.com/DATA-DOG/go-sqlmock v1.5.2 h1:OcvFkGmslmlZibjAjaHm3L//6LiuBgolP7OputlJIzU=\ngithub.com/DATA-DOG/go-sqlmock v1.5.2/go.mod h1:88MAG/4G7SMwSE3CeA0ZKzrT5CiOU3OJ+JlNzwDqpNU=\ngithub.com/HdrHistogram/hdrhistogram-go v1.1.2/go.mod h1:yDgFjdqOqDEKOvasDdhWNXYg9BVp4O+o5f6V/ehm6Oo=\ngithub.com/MakeNowJust/heredoc v1.0.0 h1:cXCdzVdstXyiTqTvfqk9SDHpKNjxuom+DOlyEeQ4pzQ=\ngithub.com/MakeNowJust/heredoc v1.0.0/go.mod h1:mG5amYoWBHf8vpLOuehzbGGw0EHxpZZ6lCpQ4fNJ8LE=\ngithub.com/Masterminds/goutils v1.1.1 h1:5nUrii3FMTL5diU80unEVvNevw1nH4+ZV4DSLVJLSYI=\ngithub.com/Masterminds/goutils v1.1.1/go.mod h1:8cTjp+g8YejhMuvIA5y2vz3BpJxksy863GQaJW2MFNU=\ngithub.com/Masterminds/semver/v3 v3.3.0 h1:B8LGeaivUe71a5qox1ICM/JLl0NqZSW5CHyL+hmvYS0=\ngithub.com/Masterminds/semver/v3 v3.3.0/go.mod h1:4V+yj/TJE1HU9XfppCwVMZq3I84lprf4nC11bSS5beM=\ngithub.com/Masterminds/sprig/v3 v3.3.0 h1:mQh0Yrg1XPo6vjYXgtf5OtijNAKJRNcTdOOGZe3tPhs=\ngithub.com/Masterminds/sprig/v3 v3.3.0/go.mod h1:Zy1iXRYNqNLUolqCpL4uhk6SHUMAOSCzdgBfDb35Lz0=\ngithub.com/Masterminds/squirrel v1.5.4 h1:uUcX/aBc8O7Fg9kaISIUsHXdKuqehiXAMQTYX8afzqM=\ngithub.com/Masterminds/squirrel v1.5.4/go.mod h1:NNaOrjSoIDfDA40n7sr2tPNZRfjzjA400rg+riTZj10=\ngithub.com/Microsoft/go-winio v0.6.2 h1:F2VQgta7ecxGYO8k3ZZz3RS8fVIXVxONVUPlNERoyfY=\ngithub.com/Microsoft/go-winio v0.6.2/go.mod h1:yd8OoFMLzJbo9gZq8j5qaps8bJ9aShtEA8Ipt1oGCvU=\ngithub.com/Microsoft/hcsshim v0.11.7 h1:vl/nj3Bar/CvJSYo7gIQPyRWc9f3c6IeSNavBTSZNZQ=\ngithub.com/Microsoft/hcsshim v0.11.7/go.mod h1:MV8xMfmECjl5HdO7U/3/hFVnkmSBjAjmA09d4bExKcU=\ngithub.com/Shopify/logrus-bugsnag v0.0.0-20171204204709-577dee27f20d h1:UrqY+r/OJnIp5u0s1SbQ8dVfLCZJsnvazdBP5hS4iRs=\ngithub.com/Shopify/logrus-bugsnag v0.0.0-20171204204709-577dee27f20d/go.mod h1:HI8ITrYtUY+O+ZhtlqUnD8+KwNPOyugEhfP9fdUIaEQ=\ngithub.com/ajstarks/svgo v0.0.0-20180226025133-644b8db467af/go.mod h1:K08gAheRH3/J6wwsYMMT4xOr94bZjxIelGM0+d/wbFw=\ngithub.com/alecthomas/assert/v2 v2.3.0 h1:mAsH2wmvjsuvyBvAmCtm7zFsBlb8mIHx5ySLVdDZXL0=\ngithub.com/alecthomas/assert/v2 v2.3.0/go.mod h1:pXcQ2Asjp247dahGEmsZ6ru0UVwnkhktn7S0bBDLxvQ=\ngithub.com/alecthomas/participle/v2 v2.1.0 h1:z7dElHRrOEEq45F2TG5cbQihMtNTv8vwldytDj7Wrz4=\ngithub.com/alecthomas/participle/v2 v2.1.0/go.mod h1:Y1+hAs8DHPmc3YUFzqllV+eSQ9ljPTk0ZkPMtEdAx2c=\ngithub.com/alecthomas/repr v0.2.0 h1:HAzS41CIzNW5syS8Mf9UwXhNH1J9aix/BvDRf1Ml2Yk=\ngithub.com/alecthomas/repr v0.2.0/go.mod h1:Fr0507jx4eOXV7AlPV6AVZLYrLIuIeSOWtW57eE/O/4=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alessio/shellescape v1.4.1 h1:V7yhSDDn8LP4lc4jS8pFkt0zCnzVJlG5JXy9BVKJUX0=\ngithub.com/alessio/shellescape v1.4.1/go.mod h1:PZAiSCk0LJaZkiCSkPv8qIobYglO3FPpyFjDCtHLS30=\ngithub.com/aliyun/alibaba-cloud-sdk-go v1.63.77 h1:rSZ5T2oKYfsGGxG5t53zl0Hy2KGpdbNYlNhPXtTIydg=\ngithub.com/aliyun/alibaba-cloud-sdk-go v1.63.77/go.mod h1:SOSDHfe1kX91v3W5QiBsWSLqeLxImobbMX1mxrFHsVQ=\ngithub.com/andreyvit/diff v0.0.0-20170406064948-c7f18ee00883 h1:bvNMNQO63//z+xNgfBlViaCIJKLlCJ6/fmUseuG0wVQ=\ngithub.com/andreyvit/diff v0.0.0-20170406064948-c7f18ee00883/go.mod h1:rCTlJbsFo29Kk6CurOXKm700vrz8f0KW0JNfpkRJY/8=\ngithub.com/antihax/optional v1.0.0/go.mod h1:uupD/76wgC+ih3iEmQUL+0Ugr19nfwCT1kdvxnR2qWY=\ngithub.com/antlr4-go/antlr/v4 v4.13.0 h1:lxCg3LAv+EUK6t1i0y1V6/SLeUi0eKEKdhQAlS8TVTI=\ngithub.com/antlr4-go/antlr/v4 v4.13.0/go.mod h1:pfChB/xh/Unjila75QW7+VU4TSnWnnk9UTnmpPaOR2g=\ngithub.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5 h1:0CwZNZbxp69SHPdPJAN/hZIm0C4OItdklCFmMRWYpio=\ngithub.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5/go.mod h1:wHh0iHkYZB8zMSxRWpUBQtwG5a7fFgvEO+odwuTv2gs=\ngithub.com/asaskevich/govalidator v0.0.0-20230301143203-a9d515a09cc2 h1:DklsrG3dyBCFEj5IhUbnKptjxatkF07cF2ak3yi77so=\ngithub.com/asaskevich/govalidator v0.0.0-20230301143203-a9d515a09cc2/go.mod h1:WaHUgvxTVq04UNunO+XhnAqY/wQc+bxr74GqbsZ/Jqw=\ngithub.com/aws/aws-sdk-go-v2 v1.32.7 h1:ky5o35oENWi0JYWUZkB7WYvVPP+bcRF5/Iq7JWSb5Rw=\ngithub.com/aws/aws-sdk-go-v2 v1.32.7/go.mod h1:P5WJBrYqqbWVaOxgH0X/FYYD47/nooaPOZPlQdmiN2U=\ngithub.com/aws/aws-sdk-go-v2/config v1.28.7 h1:GduUnoTXlhkgnxTD93g1nv4tVPILbdNQOzav+Wpg7AE=\ngithub.com/aws/aws-sdk-go-v2/config v1.28.7/go.mod h1:vZGX6GVkIE8uECSUHB6MWAUsd4ZcG2Yq/dMa4refR3M=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.17.48 h1:IYdLD1qTJ0zanRavulofmqut4afs45mOWEI+MzZtTfQ=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.17.48/go.mod h1:tOscxHN3CGmuX9idQ3+qbkzrjVIx32lqDSU1/0d/qXs=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.22 h1:kqOrpojG71DxJm/KDPO+Z/y1phm1JlC8/iT+5XRmAn8=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.22/go.mod h1:NtSFajXVVL8TA2QNngagVZmUtXciyrHOt7xgz4faS/M=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.26 h1:I/5wmGMffY4happ8NOCuIUEWGUvvFp5NSeQcXl9RHcI=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.26/go.mod h1:FR8f4turZtNy6baO0KJ5FJUmXH/cSkI9fOngs0yl6mA=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.26 h1:zXFLuEuMMUOvEARXFUVJdfqZ4bvvSgdGRq/ATcrQxzM=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.26/go.mod h1:3o2Wpy0bogG1kyOPrgkXA8pgIfEEv0+m19O9D5+W8y8=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.8.1 h1:VaRN3TlFdd6KxX1x3ILT5ynH6HvKgqdiXoTxAF4HQcQ=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.8.1/go.mod h1:FbtygfRFze9usAadmnGJNc8KsP346kEe+y2/oyhGAGc=\ngithub.com/aws/aws-sdk-go-v2/service/ec2 v1.198.1 h1:YbNopxjd9baM83YEEmkaYHi+NuJt0AszeaSLqo0CVr0=\ngithub.com/aws/aws-sdk-go-v2/service/ec2 v1.198.1/go.mod h1:mwr3iRm8u1+kkEx4ftDM2Q6Yr0XQFBKrP036ng+k5Lk=\ngithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.1 h1:iXtILhvDxB6kPvEXgsDhGaZCSC6LQET5ZHSdJozeI0Y=\ngithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.1/go.mod h1:9nu0fVANtYiAePIBh2/pFUSwtJ402hLnp854CNoDOeE=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.7 h1:8eUsivBQzZHqe/3FE+cqwfH+0p5Jo8PFM/QYQSmeZ+M=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.7/go.mod h1:kLPQvGUmxn/fqiCrDeohwG33bq2pQpGeY62yRO6Nrh0=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.24.8 h1:CvuUmnXI7ebaUAhbJcDy9YQx8wHR69eZ9I7q5hszt/g=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.24.8/go.mod h1:XDeGv1opzwm8ubxddF0cgqkZWsyOtw4lr6dxwmb6YQg=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.28.7 h1:F2rBfNAL5UyswqoeWv9zs74N/NanhK16ydHW1pahX6E=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.28.7/go.mod h1:JfyQ0g2JG8+Krq0EuZNnRwX0mU0HrwY/tG6JNfcqh4k=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.33.3 h1:Xgv/hyNgvLda/M9l9qxXc4UFSgppnRczLxlMs5Ae/QY=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.33.3/go.mod h1:5Gn+d+VaaRgsjewpMvGazt0WfcFO+Md4wLOuBfGR9Bc=\ngithub.com/aws/smithy-go v1.22.1 h1:/HPHZQ0g7f4eUeK6HKglFz8uwVfZKgoI25rb/J+dnro=\ngithub.com/aws/smithy-go v1.22.1/go.mod h1:irrKGvNn1InZwb2d7fkIRNucdfwR8R+Ts3wxYa/cJHg=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/blang/semver/v4 v4.0.0 h1:1PFHFE6yCCTv8C1TeyNNarDzntLi7wMI5i/pzqYIsAM=\ngithub.com/blang/semver/v4 v4.0.0/go.mod h1:IbckMUScFkM3pff0VJDNKRiT6TG/YpiHIM2yvyW5YoQ=\ngithub.com/bshuster-repo/logrus-logstash-hook v1.0.0 h1:e+C0SB5R1pu//O4MQ3f9cFuPGoOVeF2fE4Og9otCc70=\ngithub.com/bshuster-repo/logrus-logstash-hook v1.0.0/go.mod h1:zsTqEiSzDgAa/8GZR7E1qaXrhYNDKBYy5/dWPTIflbk=\ngithub.com/bugsnag/bugsnag-go v0.0.0-20141110184014-b1d153021fcd h1:rFt+Y/IK1aEZkEHchZRSq9OQbsSzIT/OrI8YFFmRIng=\ngithub.com/bugsnag/bugsnag-go v0.0.0-20141110184014-b1d153021fcd/go.mod h1:2oa8nejYd4cQ/b0hMIopN0lCRxU0bueqREvZLWFrtK8=\ngithub.com/bugsnag/osext v0.0.0-20130617224835-0dd3f918b21b h1:otBG+dV+YK+Soembjv71DPz3uX/V/6MMlSyD9JBQ6kQ=\ngithub.com/bugsnag/osext v0.0.0-20130617224835-0dd3f918b21b/go.mod h1:obH5gd0BsqsP2LwDJ9aOkm/6J86V6lyAXCoQWGw3K50=\ngithub.com/bugsnag/panicwrap v0.0.0-20151223152923-e2c28503fcd0 h1:nvj0OLI3YqYXer/kZD8Ri1aaunCxIEsOst1BVJswV0o=\ngithub.com/bugsnag/panicwrap v0.0.0-20151223152923-e2c28503fcd0/go.mod h1:D/8v3kj0zr8ZAKg1AQ6crr+5VwKN5eIywRkfhyM/+dE=\ngithub.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=\ngithub.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/census-instrumentation/opencensus-proto v0.4.1 h1:iKLQ0xPNFxR/2hzXZMrBo8f1j86j5WHzznCCQxV/b8g=\ngithub.com/census-instrumentation/opencensus-proto v0.4.1/go.mod h1:4T9NM4+4Vw91VeyqjLS6ao50K5bOcLKN6Q42XnYaRYw=\ngithub.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/chai2010/gettext-go v1.0.2 h1:1Lwwip6Q2QGsAdl/ZKPCwTe9fe0CjlUbqj5bFNSjIRk=\ngithub.com/chai2010/gettext-go v1.0.2/go.mod h1:y+wnP2cHYaVj19NZhYKAwEMH2CI1gNHeQQ+5AjwawxA=\ngithub.com/cilium/charts v0.0.0-20241218153829-9518b30a2027 h1:DffBrEg57RLbc1jzajDDRYgTqWw1gr02+sMnzQp8yks=\ngithub.com/cilium/charts v0.0.0-20241218153829-9518b30a2027/go.mod h1:M3C9VOlFvRzuV+a01t07Tw4uFLSfkCH3L542IWjf6BU=\ngithub.com/cilium/controller-tools v0.16.5-1 h1:aJLd2riNwIP+qVwA9bFBu2GDk6fQVecJt/0bZF2IYOw=\ngithub.com/cilium/controller-tools v0.16.5-1/go.mod h1:8vztuRVzs8IuuJqKqbXCSlXcw+lkAv/M2sTpg55qjMY=\ngithub.com/cilium/coverbee v0.3.3-0.20240723084546-664438750fce h1:gqzXY3NuHllVVDw9vD49mlXx+9bYFPlg23rdrkQNFDM=\ngithub.com/cilium/coverbee v0.3.3-0.20240723084546-664438750fce/go.mod h1:6RGqSqaXtkBGjm7na2bKFi52BeeGUuiT3178zeje4Ik=\ngithub.com/cilium/deepequal-gen v0.0.0-20241016021505-f57df2fe2e62 h1:MOWY9eqnrrQx6s8WMuDBasD6zxUDgTqxXD/qYniupG4=\ngithub.com/cilium/deepequal-gen v0.0.0-20241016021505-f57df2fe2e62/go.mod h1:9EU8oWNwEP6f98xJz/YjWw7yOLHK7p90MKmaPu1wBcE=\ngithub.com/cilium/dns v1.1.51-0.20240603182237-af788769786a h1:PRGN7B+72mj3OtLL2DM3F/9jp+ItgqgNS7mecgCmwsQ=\ngithub.com/cilium/dns v1.1.51-0.20240603182237-af788769786a/go.mod h1:/7LC2GOgyXJ7maupZlaVIumYQiGPIgllSf6mA9sg6RU=\ngithub.com/cilium/ebpf v0.17.1 h1:G8mzU81R2JA1nE5/8SRubzqvBMmAmri2VL8BIZPWvV0=\ngithub.com/cilium/ebpf v0.17.1/go.mod h1:vay2FaYSmIlv3r8dNACd4mW/OCaZLJKJOo+IHBvCIO8=\ngithub.com/cilium/endpointslice v0.29.4-0.20240409195643-982ad68ab7ba h1:Ddc5e+pz0/nY0XiAEW/UcIlvnaHACSuF77ePyMNX510=\ngithub.com/cilium/endpointslice v0.29.4-0.20240409195643-982ad68ab7ba/go.mod h1:9MPoeojWVEBLFnioKXTvRoqGWTs9Dt252r1ACFsi8K8=\ngithub.com/cilium/endpointslice-controller v0.0.0-20240409203012-75cb5d61db1b h1:JxoccA9UQVXoQlJaMI7dtCXhg5R1ZPLPW+py376p1SA=\ngithub.com/cilium/endpointslice-controller v0.0.0-20240409203012-75cb5d61db1b/go.mod h1:izWO5C3waDVkh/nt++nNyozXyJAPL6tfFpJSMtzVnwQ=\ngithub.com/cilium/fake v0.6.1 h1:cLkNx1nkF0b0pPW79JaQxaI5oG2/rBzRKpp0YUg1fTA=\ngithub.com/cilium/fake v0.6.1/go.mod h1:V9lCbbcsnSf3vB6sdOP7Q0bsUUJ/jyHPZxnFAw5nPUc=\ngithub.com/cilium/hive v0.0.0-20241213121623-605c1412b9b3 h1:RfmUH1ouzj0LzORYJRhp43e1rlGpx6GNv4NIRUakU2w=\ngithub.com/cilium/hive v0.0.0-20241213121623-605c1412b9b3/go.mod h1:pI2GJ1n3SLKIQVFrKF7W6A6gb6BQkZ+3Hp4PAEo5SuI=\ngithub.com/cilium/linters v0.1.0 h1:ABdLyPBtF+X6oTlTE0AAJbkuo2s1OYaEsP2jb9+7BGY=\ngithub.com/cilium/linters v0.1.0/go.mod h1:mpr0RBmILRLQu2F7ek+gjBxxuacUB/IBmjDRC3RaFkI=\ngithub.com/cilium/lumberjack/v2 v2.4.1 h1:tU92KFJmLQ4Uls5vTgok5b5RbfxpawRia7L14y2qDBs=\ngithub.com/cilium/lumberjack/v2 v2.4.1/go.mod h1:yfbtPGmg4i//5oEqzaMxDqSWqgfZFmMoV70Mc2k6v0A=\ngithub.com/cilium/proxy v0.0.0-20241219105110-b2e1bb5839df h1:wrv1jOKhBnFOhHb9jpE/C6Fm2kaXUDvT0HrdoeETLnQ=\ngithub.com/cilium/proxy v0.0.0-20241219105110-b2e1bb5839df/go.mod h1:BsqJTwrsaSy5DsyH+y5zATYYCsg8/fc/K0qnsNM+43A=\ngithub.com/cilium/statedb v0.3.5 h1:/lN7noYjC+JP6+fII7dhUNRS2FuLrlE0CtNOtuBtI9c=\ngithub.com/cilium/statedb v0.3.5/go.mod h1:n2lNVxi8vz5Up1Y1rRD++aQP2izQA932fUwTkedKSV0=\ngithub.com/cilium/stream v0.0.0-20241203114243-53c3e5d79744 h1:f+CgYUy2YyZ2EX31QSqf3vwFiJJQSAMIQLn4d3QQYno=\ngithub.com/cilium/stream v0.0.0-20241203114243-53c3e5d79744/go.mod h1:/e83AwqvNKpyg4n3C41qmnmj1x2G9DwzI+jb7GkF4lI=\ngithub.com/cilium/workerpool v1.2.0 h1:Wc2iOPTvCgWKQXeq4L5tnx4QFEI+z5q1+bSpSS0cnAY=\ngithub.com/cilium/workerpool v1.2.0/go.mod h1:GOYJhwlnIjR+jWSDNBb5kw47G1H/XA9X4WOBpgr4pQU=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cloudflare/cfssl v1.6.5 h1:46zpNkm6dlNkMZH/wMW22ejih6gIaJbzL2du6vD7ZeI=\ngithub.com/cloudflare/cfssl v1.6.5/go.mod h1:Bk1si7sq8h2+yVEDrFJiz3d7Aw+pfjjJSZVaD+Taky4=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\ngithub.com/cncf/udpa/go v0.0.0-20210930031921-04548b0d99d4/go.mod h1:6pvJx4me5XPnfI9Z40ddWsdw2W/uZgQLFXToKeRcDiI=\ngithub.com/cncf/xds/go v0.0.0-20210922020428-25de7278fc84/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\ngithub.com/cncf/xds/go v0.0.0-20211001041855-01bcc9b48dfe/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\ngithub.com/cncf/xds/go v0.0.0-20211011173535-cb28da3451f1/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\ngithub.com/cncf/xds/go v0.0.0-20241213214725-57cfbe6fad57 h1:put7Je9ZyxbHtwr7IqGrW4LLVUupJQ2gbsDshKISSgU=\ngithub.com/cncf/xds/go v0.0.0-20241213214725-57cfbe6fad57/go.mod h1:W+zGtBO5Y1IgJhy4+A9GOqVhqLpfZi+vwmdNXUehLA8=\ngithub.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=\ngithub.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=\ngithub.com/containerd/containerd v1.7.23 h1:H2CClyUkmpKAGlhQp95g2WXHfLYc7whAuvZGBNYOOwQ=\ngithub.com/containerd/containerd v1.7.23/go.mod h1:7QUzfURqZWCZV7RLNEn1XjUCQLEf0bkaK4GjUaZehxw=\ngithub.com/containerd/continuity v0.4.2 h1:v3y/4Yz5jwnvqPKJJ+7Wf93fyWoCB3F5EclWG023MDM=\ngithub.com/containerd/continuity v0.4.2/go.mod h1:F6PTNCKepoxEaXLQp3wDAjygEnImnZ/7o4JzpodfroQ=\ngithub.com/containerd/errdefs v0.3.0 h1:FSZgGOeK4yuT/+DnF07/Olde/q4KBoMsaamhXxIMDp4=\ngithub.com/containerd/errdefs v0.3.0/go.mod h1:+YBYIdtsnF4Iw6nWZhJcqGSg/dwvV7tyJ/kCkyJ2k+M=\ngithub.com/containerd/log v0.1.0 h1:TCJt7ioM2cr/tfR8GPbGf9/VRAX8D2B4PjzCpfX540I=\ngithub.com/containerd/log v0.1.0/go.mod h1:VRRf09a7mHDIRezVKTRCrOq78v577GXq3bSa3EhrzVo=\ngithub.com/containerd/platforms v0.2.1 h1:zvwtM3rz2YHPQsF2CHYM8+KtB5dvhISiXh5ZpSBQv6A=\ngithub.com/containerd/platforms v0.2.1/go.mod h1:XHCb+2/hzowdiut9rkudds9bE5yJ7npe7dG/wG+uFPw=\ngithub.com/containernetworking/cni v1.2.3 h1:hhOcjNVUQTnzdRJ6alC5XF+wd9mfGIUaj8FuJbEslXM=\ngithub.com/containernetworking/cni v1.2.3/go.mod h1:DuLgF+aPd3DzcTQTtp/Nvl1Kim23oFKdm2okJzBQA5M=\ngithub.com/coreos/go-semver v0.3.1 h1:yi21YpKnrx1gt5R+la8n5WgS0kCrsPp33dmEyHReZr4=\ngithub.com/coreos/go-semver v0.3.1/go.mod h1:irMmmIw/7yzSRPWryHsK7EYSg09caPQL03VsM8rvUec=\ngithub.com/coreos/go-systemd/v22 v22.5.0 h1:RrqgGjYQKalulkV8NGVIfkXQf6YYmOyiJKk8iXXhfZs=\ngithub.com/coreos/go-systemd/v22 v22.5.0/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4 h1:wfIWP927BUkWJb2NmU/kNDYIBTh/ziUX91+lVfRxZq4=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/creack/pty v1.1.18 h1:n56/Zwd5o6whRC5PMGretI4IdRLlmBXYNjScPaBgsbY=\ngithub.com/creack/pty v1.1.18/go.mod h1:MOBLtS5ELjhRRrroQr9kyvTxUAFNvYEK993ew/Vr4O4=\ngithub.com/cyphar/filepath-securejoin v0.3.4 h1:VBWugsJh2ZxJmLFSM06/0qzQyiQX2Qs0ViKrUAcqdZ8=\ngithub.com/cyphar/filepath-securejoin v0.3.4/go.mod h1:8s/MCNJREmFK0H02MF6Ihv1nakJe4L/w3WZLHNkvlYM=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dgryski/go-farm v0.0.0-20200201041132-a6ae2369ad13 h1:fAjc9m62+UWV/WAFKLNi6ZS0675eEUC9y3AlwSbQu1Y=\ngithub.com/dgryski/go-farm v0.0.0-20200201041132-a6ae2369ad13/go.mod h1:SqUrOPUnsFjfmXRMNPybcSiG0BgUW2AuFH8PAnS2iTw=\ngithub.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f h1:lO4WD4F/rVNCu3HqELle0jiPLLBs70cWOduZpkS1E78=\ngithub.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f/go.mod h1:cuUVRXasLTGF7a8hSLbxyZXjz+1KgoB3wDUb6vlszIc=\ngithub.com/distribution/distribution/v3 v3.0.0-20221208165359-362910506bc2 h1:aBfCb7iqHmDEIp6fBvC/hQUddQfg+3qdYjwzaiP9Hnc=\ngithub.com/distribution/distribution/v3 v3.0.0-20221208165359-362910506bc2/go.mod h1:WHNsWjnIn2V1LYOrME7e8KxSeKunYHsxEm4am0BUtcI=\ngithub.com/distribution/reference v0.6.0 h1:0IXCQ5g4/QMHHkarYzh5l+u8T3t73zM5QvfrDyIgxBk=\ngithub.com/distribution/reference v0.6.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=\ngithub.com/docker/cli v25.0.1+incompatible h1:mFpqnrS6Hsm3v1k7Wa/BO23oz0k121MTbTO1lpcGSkU=\ngithub.com/docker/cli v25.0.1+incompatible/go.mod h1:JLrzqnKDaYBop7H2jaqPtU4hHvMKP+vjCwu2uszcLI8=\ngithub.com/docker/distribution v2.8.3+incompatible h1:AtKxIZ36LoNK51+Z6RpzLpddBirtxJnzDrHLEKxTAYk=\ngithub.com/docker/distribution v2.8.3+incompatible/go.mod h1:J2gT2udsDAN96Uj4KfcMRqY0/ypR+oyYUYmja8H+y+w=\ngithub.com/docker/docker v27.4.1+incompatible h1:ZJvcY7gfwHn1JF48PfbyXg7Jyt9ZCWDW+GGXOIxEwp4=\ngithub.com/docker/docker v27.4.1+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\ngithub.com/docker/docker-credential-helpers v0.7.0 h1:xtCHsjxogADNZcdv1pKUHXryefjlVRqWqIhk/uXJp0A=\ngithub.com/docker/docker-credential-helpers v0.7.0/go.mod h1:rETQfLdHNT3foU5kuNkFR1R1V12OJRRO5lzt2D1b5X0=\ngithub.com/docker/go-connections v0.5.0 h1:USnMq7hx7gwdVZq1L49hLXaFtUdTADjXGp+uj1Br63c=\ngithub.com/docker/go-connections v0.5.0/go.mod h1:ov60Kzw0kKElRwhNs9UlUHAE/F9Fe6GLaXnqyDdmEXc=\ngithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c h1:+pKlWGMw7gf6bQ+oDZB4KHQFypsfjYlq/C4rfL7D3g8=\ngithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c/go.mod h1:Uw6UezgYA44ePAFQYUehOuCzmy5zmg/+nl2ZfMWGkpA=\ngithub.com/docker/go-metrics v0.0.1 h1:AgB/0SvBxihN0X8OR4SjsblXkbMvalQ8cjmtKQ2rQV8=\ngithub.com/docker/go-metrics v0.0.1/go.mod h1:cG1hvH2utMXtqgqqYE9plW6lDxS3/5ayHzueweSI3Vw=\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/docker/libnetwork v0.8.0-dev.2.0.20210525090646-64b7a4574d14 h1:GZvuJOpa10/Yl2EinacWoMqJ+XtNPbikclDZvNXBNO8=\ngithub.com/docker/libnetwork v0.8.0-dev.2.0.20210525090646-64b7a4574d14/go.mod h1:93m0aTqz6z+g32wla4l4WxTrdtvBRmVzYRkYvasA5Z8=\ngithub.com/docker/libtrust v0.0.0-20150114040149-fa567046d9b1 h1:ZClxb8laGDf5arXfYcAtECDFgAgHklGI8CxgjHnXKJ4=\ngithub.com/docker/libtrust v0.0.0-20150114040149-fa567046d9b1/go.mod h1:cyGadeNEkKy96OOhEzfZl+yxihPEzKnqJwvfuSUqbZE=\ngithub.com/eapache/channels v1.1.0 h1:F1taHcn7/F0i8DYqKXJnyhJcVpp2kgFcNePxXtnyu4k=\ngithub.com/eapache/channels v1.1.0/go.mod h1:jMm2qB5Ubtg9zLd+inMZd2/NUvXgzmWXsDaLyQIGfH0=\ngithub.com/eapache/queue v1.1.0 h1:YOEu7KNc61ntiQlcEeUIoDTJ2o8mQznoNvUhiigpIqc=\ngithub.com/eapache/queue v1.1.0/go.mod h1:6eCeP0CKFpHLu8blIFXhExK/dRa7WDZfr6jVFPTqq+I=\ngithub.com/emicklei/go-restful/v3 v3.12.0 h1:y2DdzBAURM29NFF94q6RaY4vjIH1rtwDapwQtU84iWk=\ngithub.com/emicklei/go-restful/v3 v3.12.0/go.mod h1:6n3XBCmQQb25CM2LCACGz8ukIrRry+4bhvbpWn3mrbc=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20201210154907-fd9021fe5dad/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\ngithub.com/envoyproxy/go-control-plane v0.10.2-0.20220325020618-49ff273808a1/go.mod h1:KJwIaB5Mv44NWtYuAOFCVOjcI94vtpEz2JU/D2v6IjE=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/envoyproxy/protoc-gen-validate v1.1.0 h1:tntQDh69XqOCOZsDz0lVJQez/2L6Uu2PdjCQwWCJ3bM=\ngithub.com/envoyproxy/protoc-gen-validate v1.1.0/go.mod h1:sXRDRVmzEbkM7CVcM06s9shE/m23dg3wzjl0UWqJ2q4=\ngithub.com/evanphx/json-patch v5.9.0+incompatible h1:fBXyNpNMuTTDdquAq/uisOr2lShz4oaXpDTX2bLe7ls=\ngithub.com/evanphx/json-patch v5.9.0+incompatible/go.mod h1:50XU6AFN0ol/bzJsmQLiYLvXMP4fmwYFNcr97nuDLSk=\ngithub.com/evanphx/json-patch/v5 v5.9.0 h1:kcBlZQbplgElYIlo/n1hJbls2z/1awpXxpRi0/FOJfg=\ngithub.com/evanphx/json-patch/v5 v5.9.0/go.mod h1:VNkHZ/282BpEyt/tObQO8s5CMPmYYq14uClGH4abBuQ=\ngithub.com/exponent-io/jsonpath v0.0.0-20210407135951-1de76d718b3f h1:Wl78ApPPB2Wvf/TIe2xdyJxTlb6obmF18d8QdkxNDu4=\ngithub.com/exponent-io/jsonpath v0.0.0-20210407135951-1de76d718b3f/go.mod h1:OSYXu++VVOHnXeitef/D8n/6y4QV8uLHSFXX4NeXMGc=\ngithub.com/fatih/color v1.13.0/go.mod h1:kLAiJbzzSOZDVNGyDpeOxJ47H46qBXwg5ILebYFFOfk=\ngithub.com/fatih/color v1.18.0 h1:S8gINlzdQ840/4pfAwic/ZE0djQEH3wM94VfqLTZcOM=\ngithub.com/fatih/color v1.18.0/go.mod h1:4FelSpRwEGDpQ12mAdzqdOukCy4u8WUtOY6lkT/6HfU=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/fogleman/gg v1.2.1-0.20190220221249-0403632d5b90/go.mod h1:R/bRT+9gY/C5z7JzPU0zXsXHKM4/ayA+zqcVNZzPa1k=\ngithub.com/foxcpp/go-mockdns v1.1.0 h1:jI0rD8M0wuYAxL7r/ynTrCQQq0BVqfB99Vgk7DlmewI=\ngithub.com/foxcpp/go-mockdns v1.1.0/go.mod h1:IhLeSFGed3mJIAXPH2aiRQB+kqz7oqu8ld2qVbOu7Wk=\ngithub.com/frankban/quicktest v1.14.6 h1:7Xjx+VpznH+oBnejlPUj8oUpdxnVs4f8XU8WnHkI4W8=\ngithub.com/frankban/quicktest v1.14.6/go.mod h1:4ptaffx2x8+WTWXmUCuVU6aPUX1/Mz7zb5vbUoiM6w0=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4IgpuI1SZQ=\ngithub.com/fsnotify/fsnotify v1.8.0 h1:dAwr6QBTBZIkG8roQaJjGof0pp0EeF+tNV7YBP3F/8M=\ngithub.com/fsnotify/fsnotify v1.8.0/go.mod h1:8jBTzvmWwFyi3Pb8djgCCO5IBqzKJ/Jwo8TRcHyHii0=\ngithub.com/fxamacker/cbor/v2 v2.7.0 h1:iM5WgngdRBanHcxugY4JySA0nk1wZorNOpTgCMedv5E=\ngithub.com/fxamacker/cbor/v2 v2.7.0/go.mod h1:pxXPTn3joSm21Gbwsv0w9OSA2y1HFR9qXEeXQVeNoDQ=\ngithub.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\ngithub.com/go-errors/errors v1.4.2 h1:J6MZopCL4uSllY1OfXM374weqZFFItUbrImctkmUxIA=\ngithub.com/go-errors/errors v1.4.2/go.mod h1:sIVyrIiJhuEF+Pj9Ebtd6P/rEYROXFi3BopGUQ5a5Og=\ngithub.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=\ngithub.com/go-gorp/gorp/v3 v3.1.0 h1:ItKF/Vbuj31dmV4jxA1qblpSwkl9g1typ24xoe70IGs=\ngithub.com/go-gorp/gorp/v3 v3.1.0/go.mod h1:dLEjIyyRNiXvNZ8PSmzpt1GsWAUK8kjVhEpjH8TixEw=\ngithub.com/go-jose/go-jose/v4 v4.0.4 h1:VsjPI33J0SB9vQM6PLmNjoHqMQNGPiZ0rHL7Ni7Q6/E=\ngithub.com/go-jose/go-jose/v4 v4.0.4/go.mod h1:NKb5HO1EZccyMpiZNbdUw/14tiXNyUJh188dfnMCAfc=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-logr/zapr v1.3.0 h1:XGdV8XW8zdwFiwOA2Dryh1gj2KRQyOOoNmBy4EplIcQ=\ngithub.com/go-logr/zapr v1.3.0/go.mod h1:YKepepNBd1u/oyhd/yQmtjVXmm9uML4IXUgMOwR8/Gg=\ngithub.com/go-openapi/analysis v0.23.0 h1:aGday7OWupfMs+LbmLZG4k0MYXIANxcuBTYUC03zFCU=\ngithub.com/go-openapi/analysis v0.23.0/go.mod h1:9mz9ZWaSlV8TvjQHLl2mUW2PbZtemkE8yA5v22ohupo=\ngithub.com/go-openapi/errors v0.22.0 h1:c4xY/OLxUBSTiepAg3j/MHuAv5mJhnf53LLMWFB+u/w=\ngithub.com/go-openapi/errors v0.22.0/go.mod h1:J3DmZScxCDufmIMsdOuDHxJbdOGC0xtUynjIx092vXE=\ngithub.com/go-openapi/jsonpointer v0.21.0 h1:YgdVicSA9vH5RiHs9TZW5oyafXZFc6+2Vc1rr/O9oNQ=\ngithub.com/go-openapi/jsonpointer v0.21.0/go.mod h1:IUyH9l/+uyhIYQ/PXVA41Rexl+kOkAPDdXEYns6fzUY=\ngithub.com/go-openapi/jsonreference v0.21.0 h1:Rs+Y7hSXT83Jacb7kFyjn4ijOuVGSvOdF2+tg1TRrwQ=\ngithub.com/go-openapi/jsonreference v0.21.0/go.mod h1:LmZmgsrTkVg9LG4EaHeY8cBDslNPMo06cago5JNLkm4=\ngithub.com/go-openapi/loads v0.22.0 h1:ECPGd4jX1U6NApCGG1We+uEozOAvXvJSF4nnwHZ8Aco=\ngithub.com/go-openapi/loads v0.22.0/go.mod h1:yLsaTCS92mnSAZX5WWoxszLj0u+Ojl+Zs5Stn1oF+rs=\ngithub.com/go-openapi/runtime v0.28.0 h1:gpPPmWSNGo214l6n8hzdXYhPuJcGtziTOgUpvsFWGIQ=\ngithub.com/go-openapi/runtime v0.28.0/go.mod h1:QN7OzcS+XuYmkQLw05akXk0jRH/eZ3kb18+1KwW9gyc=\ngithub.com/go-openapi/spec v0.21.0 h1:LTVzPc3p/RzRnkQqLRndbAzjY0d0BCL72A6j3CdL9ZY=\ngithub.com/go-openapi/spec v0.21.0/go.mod h1:78u6VdPw81XU44qEWGhtr982gJ5BWg2c0I5XwVMotYk=\ngithub.com/go-openapi/strfmt v0.23.0 h1:nlUS6BCqcnAk0pyhi9Y+kdDVZdZMHfEKQiS4HaMgO/c=\ngithub.com/go-openapi/strfmt v0.23.0/go.mod h1:NrtIpfKtWIygRkKVsxh7XQMDQW5HKQl6S5ik2elW+K4=\ngithub.com/go-openapi/swag v0.23.0 h1:vsEVJDUo2hPJ2tu0/Xc+4noaxyEffXNIs3cOULZ+GrE=\ngithub.com/go-openapi/swag v0.23.0/go.mod h1:esZ8ITTYEsH1V2trKHjAN8Ai7xHb8RV+YSZ577vPjgQ=\ngithub.com/go-openapi/validate v0.24.0 h1:LdfDKwNbpB6Vn40xhTdNZAnfLECL81w+VX3BumrGD58=\ngithub.com/go-openapi/validate v0.24.0/go.mod h1:iyeX1sEufmv3nPbBdX3ieNviWnOZaJ1+zquzJEf2BAQ=\ngithub.com/go-quicktest/qt v1.101.0 h1:O1K29Txy5P2OK0dGo59b7b0LR6wKfIhttaAhHUyn7eI=\ngithub.com/go-quicktest/qt v1.101.0/go.mod h1:14Bz/f7NwaXPtdYEgzsx46kqSxVwTbzVZsDC26tQJow=\ngithub.com/go-sql-driver/mysql v1.8.1 h1:LedoTUt/eveggdHS9qUFC1EFSa8bU2+1pZjSRpvNJ1Y=\ngithub.com/go-sql-driver/mysql v1.8.1/go.mod h1:wEBSXgmK//2ZFJyE+qWnIsVGmvmEKlqwuVSjsCm7DZg=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-task/slim-sprig v0.0.0-20210107165309-348f09dbbbc0/go.mod h1:fyg7847qk6SyHyPtNmDHnmrv/HOrqktSC+C9fM+CJOE=\ngithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 h1:tfuBGBXKqDEevZMzYi5KSi8KkcZtzBcTgAUUtapy0OI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0 h1:sUs3vkvUymDpBKi3qH1YSqBQk9+9D/8M2mN1vB6EwHI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0/go.mod h1:W848ghGpv3Qj3dhTPRyJypKRiqCdHZiAzKg9hl15HA8=\ngithub.com/go-test/deep v1.1.0 h1:WOcxcdHcvdgThNXjw0t76K42FXTU7HpNQWHpA2HHNlg=\ngithub.com/go-test/deep v1.1.0/go.mod h1:5C2ZWiW0ErCdrYzpqxLbTX7MG14M9iiw8DgHncVwcsE=\ngithub.com/gobuffalo/flect v1.0.3 h1:xeWBM2nui+qnVvNM4S3foBhCAL2XgPU+a7FdpelbTq4=\ngithub.com/gobuffalo/flect v1.0.3/go.mod h1:A5msMlrHtLqh9umBSnvabjsMrCcCpAyzglnDvkbYKHs=\ngithub.com/gobwas/glob v0.2.3 h1:A4xDbljILXROh+kObIiy5kIaPYD8e96x1tgBhUI5J+Y=\ngithub.com/gobwas/glob v0.2.3/go.mod h1:d3Ez4x06l9bZtSvzIay5+Yzi0fmZzPgnTbPcKjJAkT8=\ngithub.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/godbus/dbus/v5 v5.1.0 h1:4KLkAxT3aOY8Li4FRJe/KvhoNFFxo0m6fNuFUO8QJUk=\ngithub.com/godbus/dbus/v5 v5.1.0/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/goji/httpauth v0.0.0-20160601135302-2da839ab0f4d/go.mod h1:nnjvkQ9ptGaCkuDUx6wNykzzlUixGxvkme+H/lnzb+A=\ngithub.com/golang-jwt/jwt/v5 v5.2.1 h1:OuVbFODueb089Lh128TAcimifWaLhJwVflnrgM17wHk=\ngithub.com/golang-jwt/jwt/v5 v5.2.1/go.mod h1:pqrtFR0X4osieyHYxtmOUWsAWrfe1Q5UVIyoH402zdk=\ngithub.com/golang/freetype v0.0.0-20170609003504-e2365dfdc4a0/go.mod h1:E/TSTwGwJL78qG/PmXZO1EjYhfJinVAhrmmHX6Z8B9k=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20241129210726-2c02b8208cf8 h1:f+oWsMOmNPc8JmEHVZIycC7hBoQxHH9pNKQORJNozsQ=\ngithub.com/golang/groupcache v0.0.0-20241129210726-2c02b8208cf8/go.mod h1:wcDNUvekVysuuOpQKo3191zZyTpiI6se1N1ULghS0sw=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/gomodule/redigo v1.8.2 h1:H5XSIre1MB5NbPYFp+i1NBbb5qN1W8Y8YAQoAYbkm8k=\ngithub.com/gomodule/redigo v1.8.2/go.mod h1:P9dn9mFrCBvWhGE1wpxx6fgq7BAeLBk+UUUzlpkBYO0=\ngithub.com/google/btree v1.1.2 h1:xf4v41cLI2Z6FxbKm+8Bu+m8ifhj15JuZ9sa0jZCMUU=\ngithub.com/google/btree v1.1.2/go.mod h1:qOPhT0dTNdNzV6Z/lhRX0YXUafgPLFUh+gZMl761Gm4=\ngithub.com/google/cel-go v0.22.1 h1:AfVXx3chM2qwoSbM7Da8g8hX8OVSkBFwX+rz2+PcK40=\ngithub.com/google/cel-go v0.22.1/go.mod h1:BuznPXXfQDpXKWQ9sPW3TzlAJN5zzFe+i9tIs0yC4s8=\ngithub.com/google/certificate-transparency-go v1.1.7 h1:IASD+NtgSTJLPdzkthwvAG1ZVbF2WtFg4IvoA68XGSw=\ngithub.com/google/certificate-transparency-go v1.1.7/go.mod h1:FSSBo8fyMVgqptbfF6j5p/XNdgQftAhSmXcIxV9iphE=\ngithub.com/google/gnostic-models v0.6.8 h1:yo/ABAfM5IMRsS1VnXjTBvUb61tFIHozhlYvRgGre9I=\ngithub.com/google/gnostic-models v0.6.8/go.mod h1:5n7qKqH0f5wFt+aWF8CW6pZLLNOfYuF5OpfBSENuI8U=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.6/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.7/go.mod h1:n+brtR0CgQNWTVd5ZUFpTBC8YFBDLK/h/bpaJ8/DtOE=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-github v17.0.0+incompatible/go.mod h1:zLgOLi98H3fifZn+44m+umXrS52loVEgC2AApnigrVQ=\ngithub.com/google/go-licenses v1.6.1-0.20230903011517-706b9c60edd4 h1:2cF5oCuHDHTsC1S1eePsrHKGs1Co9Q6XOc8nhysGer4=\ngithub.com/google/go-licenses v1.6.1-0.20230903011517-706b9c60edd4/go.mod h1:BUoZvAC+k4aLzq3+719tLz4jZum9m7lfwuXKtq8n5VM=\ngithub.com/google/go-querystring v1.0.0/go.mod h1:odCYkC5MyYFN7vkCjXpyrEuKhc/BUO6wN/zVPAxq5ck=\ngithub.com/google/go-replayers/httpreplay v1.2.0 h1:VM1wEyyjaoU53BwrOnaf9VhAyQQEEioJvFYxYcLRKzk=\ngithub.com/google/go-replayers/httpreplay v1.2.0/go.mod h1:WahEFFZZ7a1P4VM1qEeHy+tME4bwyqPcwWbNlUI1Mcg=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/gofuzz v1.2.0 h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=\ngithub.com/google/gofuzz v1.2.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/gops v0.3.28 h1:2Xr57tqKAmQYRAfG12E+yLcoa2Y42UJo2lOrUFL9ark=\ngithub.com/google/gops v0.3.28/go.mod h1:6f6+Nl8LcHrzJwi8+p0ii+vmBFSlB4f8cOOkTJ7sk4c=\ngithub.com/google/licenseclassifier/v2 v2.0.0 h1:1Y57HHILNf4m0ABuMVb6xk4vAJYEUO0gDxNpog0pyeA=\ngithub.com/google/licenseclassifier/v2 v2.0.0/go.mod h1:cOjbdH0kyC9R22sdQbYsFkto4NGCAc+ZSwbeThazEtM=\ngithub.com/google/martian/v3 v3.3.2 h1:IqNFLAmvJOgVlpdEBiQbDc2EwKW77amAycfTuWKdfvw=\ngithub.com/google/martian/v3 v3.3.2/go.mod h1:oBOf6HBosgwRXnUGWUB05QECsc6uvmMiJ3+6W4l/CUk=\ngithub.com/google/pprof v0.0.0-20241029153458-d1b30febd7db h1:097atOisP2aRj7vFgYQBbFN4U4JNXUNYpxael3UzMyo=\ngithub.com/google/pprof v0.0.0-20241029153458-d1b30febd7db/go.mod h1:vavhavw2zAxS5dIdcRluK6cSGGPlZynqzFM8NdvU144=\ngithub.com/google/renameio/v2 v2.0.0 h1:UifI23ZTGY8Tt29JbYFiuyIU3eX+RNFtUwefq9qAhxg=\ngithub.com/google/renameio/v2 v2.0.0/go.mod h1:BtmJXm5YlszgC+TD4HOEEUFgkJP3nLxehU6hfe7jRt4=\ngithub.com/google/safetext v0.0.0-20220905092116-b49f7bc46da2 h1:SJ+NtwL6QaZ21U+IrK7d0gGgpjGGvd2kz+FzTHVzdqI=\ngithub.com/google/safetext v0.0.0-20220905092116-b49f7bc46da2/go.mod h1:Tv1PlzqC9t8wNnpPdctvtSUOPUUg4SHeE6vR1Ir2hmg=\ngithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510 h1:El6M4kTTCOh6aBiKaUGG7oYTSPP8MxqL4YI3kZKwcP4=\ngithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510/go.mod h1:pupxD2MaaD3pAXIBCelhxNneeOaAeabZDe5s4K6zSpQ=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gopacket/gopacket v1.3.1 h1:ZppWyLrOJNZPe5XkdjLbtuTkfQoxQ0xyMJzQCqtqaPU=\ngithub.com/gopacket/gopacket v1.3.1/go.mod h1:3I13qcqSpB2R9fFQg866OOgzylYkZxLTmkvcXhvf6qg=\ngithub.com/gorilla/handlers v1.5.1 h1:9lRY6j8DEeeBT10CvO9hGW0gmky0BprnvDI5vfhUHH4=\ngithub.com/gorilla/handlers v1.5.1/go.mod h1:t8XrUpc4KVXb7HGyJ4/cEnwQiaxrX/hz1Zv/4g96P1Q=\ngithub.com/gorilla/mux v1.8.1 h1:TuBL49tXwgrFYWhqrNgrUNEY92u81SPhu7sTdzQEiWY=\ngithub.com/gorilla/mux v1.8.1/go.mod h1:AKf9I4AEqPTmMytcMc0KkNouC66V3BtZ4qD5fmWSiMQ=\ngithub.com/gorilla/websocket v1.5.1 h1:gmztn0JnHVt9JZquRuzLw3g4wouNVzKL15iLr/zn/QY=\ngithub.com/gorilla/websocket v1.5.1/go.mod h1:x3kM2JMyaluk02fnUJpQuwD2dCS5NDG2ZHL0uE0tcaY=\ngithub.com/gosuri/uitable v0.0.4 h1:IG2xLKRvErL3uhY6e1BylFzG+aJiwQviDDTfOKeKTpY=\ngithub.com/gosuri/uitable v0.0.4/go.mod h1:tKR86bXuXPZazfOTG1FIzvjIdXzd0mo4Vtn16vt0PJo=\ngithub.com/gregjones/httpcache v0.0.0-20190611155906-901d90724c79 h1:+ngKgrYPPJrOjhax5N+uePQ0Fh1Z7PheYoUI/0nzkPA=\ngithub.com/gregjones/httpcache v0.0.0-20190611155906-901d90724c79/go.mod h1:FecbI9+v66THATjSRHfNgh1IVFe/9kFxbXtjV0ctIMA=\ngithub.com/grpc-ecosystem/go-grpc-middleware/v2 v2.2.0 h1:kQ0NI7W1B3HwiN5gAYtY+XFItDPbLBwYRxAqbFTyDes=\ngithub.com/grpc-ecosystem/go-grpc-middleware/v2 v2.2.0/go.mod h1:zrT2dxOAjNFPRGjTUe2Xmb4q4YdUwVvQFV6xiCSf+z0=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0 h1:Ovs26xHkKqVztRpIrF/92BcuyuQ/YW4NSIpoGtfXNho=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0/go.mod h1:8NvIoxWQoOIhqOTXgfV/d3M/q6VIi02HzZEHgUlZvzk=\ngithub.com/grpc-ecosystem/grpc-gateway v1.16.0 h1:gmcG1KaJ57LophUzW0Hy8NmPhnMZb4M0+kPpLofRdBo=\ngithub.com/grpc-ecosystem/grpc-gateway v1.16.0/go.mod h1:BDjrQk3hbvj6Nolgz8mAMFbcEtjT1g+wF4CSlocrBnw=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.24.0 h1:TmHmbvxPmaegwhDubVz0lICL0J5Ka2vwTzhoePEXsGE=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.24.0/go.mod h1:qztMSjm835F2bXf+5HKAPIS5qsmQDqZna/PgVt4rWtI=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=\ngithub.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-hclog v1.6.3 h1:Qr2kF+eVWjTiYmU7Y31tYlP1h0q/X3Nl3tPGdaB11/k=\ngithub.com/hashicorp/go-hclog v1.6.3/go.mod h1:W4Qnvbt70Wk/zYJryRzDRU/4r0kIg0PVHBcfoyhpF5M=\ngithub.com/hashicorp/go-immutable-radix/v2 v2.1.0 h1:CUW5RYIcysz+D3B+l1mDeXrQ7fUvGGCwJfdASSzbrfo=\ngithub.com/hashicorp/go-immutable-radix/v2 v2.1.0/go.mod h1:hgdqLXA4f6NIjRVisM1TJ9aOJVNRqKZj+xDGF6m7PBw=\ngithub.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\ngithub.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\ngithub.com/hashicorp/go-uuid v1.0.3 h1:2gKiV6YVmrJ1i2CKKa9obLvRieoRGviZFL26PcT/Co8=\ngithub.com/hashicorp/go-uuid v1.0.3/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/golang-lru v0.5.4 h1:YDjusn29QI/Das2iO9M0BHnIbxPeyuCHsjMW+lJfyTc=\ngithub.com/hashicorp/golang-lru v0.5.4/go.mod h1:iADmTwqILo4mZ8BN3D2Q6+9jd8WM5uGBxy+E8yxSoD4=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7 h1:a+bsQ5rvGLjzHuww6tVxozPZFVghXaHOwFs4luLUK2k=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7/go.mod h1:QeFd9opnmA6QUJc5vARoKUSoFhyfM2/ZepoAG6RGpeM=\ngithub.com/hashicorp/hcl v1.0.1-vault-5 h1:kI3hhbbyzr4dldA8UdTb7ZlVVlI2DACdCfz31RPDgJM=\ngithub.com/hashicorp/hcl v1.0.1-vault-5/go.mod h1:XYhtn6ijBSAj6n4YqAaf7RBPS4I06AItNorpy+MoQNM=\ngithub.com/hexops/gotextdiff v1.0.3 h1:gitA9+qJrrTCsiCl7+kh75nPqQt1cx4ZkudSTLoUqJM=\ngithub.com/hexops/gotextdiff v1.0.3/go.mod h1:pSWU5MAI3yDq+fZBTazCSJysOMbxWL1BSow5/V2vxeg=\ngithub.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\ngithub.com/huandu/xstrings v1.5.0 h1:2ag3IFq9ZDANvthTwTiqSSZLjDc+BedvHPAp5tJy2TI=\ngithub.com/huandu/xstrings v1.5.0/go.mod h1:y5/lhBue+AyNmUVz9RLU9xbLR0o4KIIExikq4ovT0aE=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/ishidawataru/sctp v0.0.0-20230406120618-7ff4192f6ff2 h1:i2fYnDurfLlJH8AyyMOnkLHnHeP8Ff/DDpuZA/D3bPo=\ngithub.com/ishidawataru/sctp v0.0.0-20230406120618-7ff4192f6ff2/go.mod h1:co9pwDoBCm1kGxawmb4sPq0cSIOOWNPT4KnHotMP1Zg=\ngithub.com/jeremywohl/flatten v1.0.1 h1:LrsxmB3hfwJuE+ptGOijix1PIfOoKLJ3Uee/mzbgtrs=\ngithub.com/jeremywohl/flatten v1.0.1/go.mod h1:4AmD/VxjWcI5SRB0n6szE2A6s2fsNHDLO0nAlMHgfLQ=\ngithub.com/jmespath/go-jmespath v0.4.0 h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=\ngithub.com/jmespath/go-jmespath v0.4.0/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1 h1:shLQSRRSCCPj3f2gpwzGwWFoC7ycTf1rcQZHOlsJ6N8=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1/go.mod h1:L3OGu8Wl2/fWfCI6z80xFu9LTZmf1ZRjMHUOPmWr69U=\ngithub.com/jmoiron/sqlx v1.4.0 h1:1PLqN7S1UYp5t4SrVVnt4nUVNemrDAtxlulVe+Qgm3o=\ngithub.com/jmoiron/sqlx v1.4.0/go.mod h1:ZrZ7UsYB/weZdl2Bxg6jCRO9c3YHl8r3ahlKmRT4JLY=\ngithub.com/josharian/intern v1.0.0 h1:vlS4z54oSdjm0bgjRigI+G1HpF+tI+9rE5LLzOg8HmY=\ngithub.com/josharian/intern v1.0.0/go.mod h1:5DoeVV0s6jJacbCEi61lwdGj/aVlrQvzHFFd8Hwg//Y=\ngithub.com/josharian/native v1.0.0/go.mod h1:7X/raswPFr05uY3HiLlYeyQntB6OO7E/d2Cu7qoaN2w=\ngithub.com/josharian/native v1.1.0 h1:uuaP0hAbW7Y4l0ZRQ6C9zfb7Mg1mbFKry/xzDAfmtLA=\ngithub.com/josharian/native v1.1.0/go.mod h1:7X/raswPFr05uY3HiLlYeyQntB6OO7E/d2Cu7qoaN2w=\ngithub.com/jsimonetti/rtnetlink/v2 v2.0.1 h1:xda7qaHDSVOsADNouv7ukSuicKZO7GgVUCXxpaIEIlM=\ngithub.com/jsimonetti/rtnetlink/v2 v2.0.1/go.mod h1:7MoNYNbb3UaDHtF8udiJo/RH6VsTKP1pqKLUTVCvToE=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.7/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/jung-kurt/gofpdf v1.0.3-0.20190309125859-24315acbbda5/go.mod h1:7Id9E/uU8ce6rXgefFLlgrJj/GYY22cpxn+r32jIOes=\ngithub.com/k-sone/critbitgo v1.4.0 h1:l71cTyBGeh6X5ATh6Fibgw3+rtNT80BA0uNNWgkPrbE=\ngithub.com/k-sone/critbitgo v1.4.0/go.mod h1:7E6pyoyADnFxlUBEKcnfS49b7SUAQGMK+OAp/UQvo0s=\ngithub.com/kevinburke/ssh_config v1.2.0 h1:x584FjTGwHzMwvHx18PXxbBVzfnxogHaAReU4gf13a4=\ngithub.com/kevinburke/ssh_config v1.2.0/go.mod h1:CT57kijsi8u/K/BOFA39wgDQJ9CxiF4nAY/ojJ6r6mM=\ngithub.com/keybase/go-keychain v0.0.0-20231219164618-57a3676c3af6 h1:IsMZxCuZqKuao2vNdfD82fjjgPLfyHLpR41Z88viRWs=\ngithub.com/keybase/go-keychain v0.0.0-20231219164618-57a3676c3af6/go.mod h1:3VeWNIJaW+O5xpRQbPp0Ybqu1vJd/pm7s2F473HRrkw=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/compress v1.17.9 h1:6KIumPrER1LHsvBVuDa0r5xaG0Es51mhhB9BQB2qeMA=\ngithub.com/klauspost/compress v1.17.9/go.mod h1:Di0epgTjJY877eYKx5yC51cX2A2Vl2ibi7bDH9ttBbw=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.3/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/lann/builder v0.0.0-20180802200727-47ae307949d0 h1:SOEGU9fKiNWd/HOJuq6+3iTQz8KNCLtVX6idSoTLdUw=\ngithub.com/lann/builder v0.0.0-20180802200727-47ae307949d0/go.mod h1:dXGbAdH5GtBTC4WfIxhKZfyBF/HBFgRZSWwZ9g/He9o=\ngithub.com/lann/ps v0.0.0-20150810152359-62de8c46ede0 h1:P6pPBnrTSX3DEVR4fDembhRWSsG5rVo6hYhAB/ADZrk=\ngithub.com/lann/ps v0.0.0-20150810152359-62de8c46ede0/go.mod h1:vmVJ0l/dxyfGW6FmdpVm2joNMFikkuWg0EoCKLGUMNw=\ngithub.com/lib/pq v1.10.9 h1:YXG7RB+JIjhP29X+OtkiDnYaXQwpS4JEWq7dtCCRUEw=\ngithub.com/lib/pq v1.10.9/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/liggitt/tabwriter v0.0.0-20181228230101-89fcab3d43de h1:9TO3cAIGXtEhnIaL+V+BEER86oLrvS+kWobKpbJuye0=\ngithub.com/liggitt/tabwriter v0.0.0-20181228230101-89fcab3d43de/go.mod h1:zAbeS9B/r2mtpb6U+EI2rYA5OAXxsYw6wTamcNW+zcE=\ngithub.com/lthibault/jitterbug/v2 v2.2.2 h1:v4+0tqryaI/TlYzgYE0Vhz7ha6Jtz4yRjmBP+PcqWPQ=\ngithub.com/lthibault/jitterbug/v2 v2.2.2/go.mod h1:evaHKX+60nFbFnEvGNPybQMJ5vXay9auziApDGo47Sw=\ngithub.com/mackerelio/go-osstat v0.2.5 h1:+MqTbZUhoIt4m8qzkVoXUJg1EuifwlAJSk4Yl2GXh+o=\ngithub.com/mackerelio/go-osstat v0.2.5/go.mod h1:atxwWF+POUZcdtR1wnsUcQxTytoHG4uhl2AKKzrOajY=\ngithub.com/magiconair/properties v1.8.7 h1:IeQXZAiQcpL9mgcAe1Nu6cX9LLw6ExEHKjN0VQdvPDY=\ngithub.com/magiconair/properties v1.8.7/go.mod h1:Dhd985XPs7jluiymwWYZ0G4Z61jb3vdS329zhj2hYo0=\ngithub.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=\ngithub.com/mailru/easyjson v0.7.7/go.mod h1:xzfreul335JAWq5oZzymOObrkdz5UnU4kGfJJLY9Nlc=\ngithub.com/mattn/go-colorable v0.1.9/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\ngithub.com/mattn/go-colorable v0.1.12/go.mod h1:u5H1YNBxpqRaxsYJYSkiCWKzEfiAb1Gb520KVy5xxl4=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\ngithub.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-runewidth v0.0.13 h1:lTGmDsbAYt5DmK6OnoV7EuIF1wEIFAcxld6ypU4OSgU=\ngithub.com/mattn/go-runewidth v0.0.13/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\ngithub.com/mattn/go-shellwords v1.0.12 h1:M2zGm7EW6UQJvDeQxo4T51eKPurbeFbe8WtebGE2xrk=\ngithub.com/mattn/go-shellwords v1.0.12/go.mod h1:EZzvwXDESEeg03EKmM+RmDnNOPKG4lLtQsUlTZDWQ8Y=\ngithub.com/mattn/go-sqlite3 v1.14.22 h1:2gZY6PC6kBnID23Tichd1K+Z0oS6nE/XwU+Vz/5o4kU=\ngithub.com/mattn/go-sqlite3 v1.14.22/go.mod h1:Uh1q+B4BYcTPb+yiD3kU8Ct7aC0hY9fxUwlHK0RXw+Y=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/mdlayher/arp v0.0.0-20220512170110-6706a2966875 h1:ql8x//rJsHMjS+qqEag8n3i4azw1QneKh5PieH9UEbY=\ngithub.com/mdlayher/arp v0.0.0-20220512170110-6706a2966875/go.mod h1:kfOoFJuHWp76v1RgZCb9/gVUc7XdY877S2uVYbNliGc=\ngithub.com/mdlayher/ethernet v0.0.0-20220221185849-529eae5b6118 h1:2oDp6OOhLxQ9JBoUuysVz9UZ9uI6oLUbvAZu0x8o+vE=\ngithub.com/mdlayher/ethernet v0.0.0-20220221185849-529eae5b6118/go.mod h1:ZFUnHIVchZ9lJoWoEGUg8Q3M4U8aNNWA3CVSUTkW4og=\ngithub.com/mdlayher/genetlink v1.3.2 h1:KdrNKe+CTu+IbZnm/GVUMXSqBBLqcGpRDa0xkQy56gw=\ngithub.com/mdlayher/genetlink v1.3.2/go.mod h1:tcC3pkCrPUGIKKsCsp0B3AdaaKuHtaxoJRz3cc+528o=\ngithub.com/mdlayher/netlink v1.7.2 h1:/UtM3ofJap7Vl4QWCPDGXY8d3GIY2UGSDbK+QWmY8/g=\ngithub.com/mdlayher/netlink v1.7.2/go.mod h1:xraEF7uJbxLhc5fpHL4cPe221LI2bdttWlU+ZGLfQSw=\ngithub.com/mdlayher/packet v1.0.0/go.mod h1:eE7/ctqDhoiRhQ44ko5JZU2zxB88g+JH/6jmnjzPjOU=\ngithub.com/mdlayher/packet v1.1.2 h1:3Up1NG6LZrsgDVn6X4L9Ge/iyRyxFEFD9o6Pr3Q1nQY=\ngithub.com/mdlayher/packet v1.1.2/go.mod h1:GEu1+n9sG5VtiRE4SydOmX5GTwyyYlteZiFU+x0kew4=\ngithub.com/mdlayher/socket v0.2.1/go.mod h1:QLlNPkFR88mRUNQIzRBMfXxwKal8H7u1h3bL1CV+f0E=\ngithub.com/mdlayher/socket v0.5.1 h1:VZaqt6RkGkt2OE9l3GcC6nZkqD3xKeQLyfleW/uBcos=\ngithub.com/mdlayher/socket v0.5.1/go.mod h1:TjPLHI1UgwEv5J1B5q0zTZq12A/6H7nKmtTanQE37IQ=\ngithub.com/miekg/dns v1.1.62 h1:cN8OuEF1/x5Rq6Np+h1epln8OiyPWV+lROx9LxcGgIQ=\ngithub.com/miekg/dns v1.1.62/go.mod h1:mvDlcItzm+br7MToIKqkglaGhlFMHJ9DTNNWONWXbNQ=\ngithub.com/mikioh/ipaddr v0.0.0-20190404000644-d465c8ab6721 h1:RlZweED6sbSArvlE924+mUcZuXKLBHA35U7LN621Bws=\ngithub.com/mikioh/ipaddr v0.0.0-20190404000644-d465c8ab6721/go.mod h1:Ickgr2WtCLZ2MDGd4Gr0geeCH5HybhRJbonOgQpvSxc=\ngithub.com/mitchellh/copystructure v1.2.0 h1:vpKXTN4ewci03Vljg/q9QvCGUDttBOGBIa15WveJJGw=\ngithub.com/mitchellh/copystructure v1.2.0/go.mod h1:qLl+cE2AmVv+CoeAwDPye/v+N2HKCj9FbZEVFJRxO9s=\ngithub.com/mitchellh/go-wordwrap v1.0.1 h1:TLuKupo69TCn6TQSyGxwI1EblZZEsQ0vMlAFQflz0v0=\ngithub.com/mitchellh/go-wordwrap v1.0.1/go.mod h1:R62XHJLzvMFRBbcrT7m7WgmE1eOyTSsCt+hzestvNj0=\ngithub.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=\ngithub.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/mitchellh/reflectwalk v1.0.2 h1:G2LzWKi524PWgd3mLHV8Y5k7s6XUvT0Gef6zxSIeXaQ=\ngithub.com/mitchellh/reflectwalk v1.0.2/go.mod h1:mSTlrgnPZtwu0c4WaC2kGObEpuNDbx0jmZXqmk4esnw=\ngithub.com/moby/docker-image-spec v1.3.1 h1:jMKff3w6PgbfSa69GfNg+zN/XLhfXJGnEx3Nl2EsFP0=\ngithub.com/moby/docker-image-spec v1.3.1/go.mod h1:eKmb5VW8vQEh/BAr2yvVNvuiJuY6UIocYsFu/DxxRpo=\ngithub.com/moby/locker v1.0.1 h1:fOXqR41zeveg4fFODix+1Ch4mj/gT0NE1XJbp/epuBg=\ngithub.com/moby/locker v1.0.1/go.mod h1:S7SDdo5zpBK84bzzVlKr2V0hz+7x9hWbYC/kq7oQppc=\ngithub.com/moby/spdystream v0.5.0 h1:7r0J1Si3QO/kjRitvSLVVFUjxMEb/YLj6S9FF62JBCU=\ngithub.com/moby/spdystream v0.5.0/go.mod h1:xBAYlnt/ay+11ShkdFKNAG7LsyK/tmNBVvVOwrfMgdI=\ngithub.com/moby/sys/mountinfo v0.6.2 h1:BzJjoreD5BMFNmD9Rus6gdd1pLuecOFPt8wC+Vygl78=\ngithub.com/moby/sys/mountinfo v0.6.2/go.mod h1:IJb6JQeOklcdMU9F5xQ8ZALD+CUr5VlGpwtX+VE0rpI=\ngithub.com/moby/sys/userns v0.1.0 h1:tVLXkFOxVu9A64/yh59slHVv9ahO9UIev4JZusOLG/g=\ngithub.com/moby/sys/userns v0.1.0/go.mod h1:IHUYgu/kao6N8YZlp9Cf444ySSvCmDlmzUcYfDHOl28=\ngithub.com/moby/term v0.5.0 h1:xt8Q1nalod/v7BqbG21f8mQPqH+xAaC9C3N3wfWbVP0=\ngithub.com/moby/term v0.5.0/go.mod h1:8FzsFHVUBGZdbDsJw/ot+X+d5HLUbvklYLJ9uGfcI3Y=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/monochromegane/go-gitignore v0.0.0-20200626010858-205db1a8cc00 h1:n6/2gBQ3RWajuToeY6ZtZTIKv2v7ThUy5KKusIT0yc0=\ngithub.com/monochromegane/go-gitignore v0.0.0-20200626010858-205db1a8cc00/go.mod h1:Pm3mSP3c5uWn86xMLZ5Sa7JB9GsEZySvHYXCTK4E9q4=\ngithub.com/morikuni/aec v1.0.0 h1:nP9CBfwrvYnBRgY6qfDQkygYDmYwOilePFkwzv4dU8A=\ngithub.com/morikuni/aec v1.0.0/go.mod h1:BbKIizmSmc5MMPqRYbxO4ZU0S0+P200+tUnFx7PXmsc=\ngithub.com/mreiferson/go-httpclient v0.0.0-20160630210159-31f0106b4474/go.mod h1:OQA4XLvDbMgS8P0CevmM4m9Q3Jq4phKUzcocxuGJ5m8=\ngithub.com/mreiferson/go-httpclient v0.0.0-20201222173833-5e475fde3a4d/go.mod h1:OQA4XLvDbMgS8P0CevmM4m9Q3Jq4phKUzcocxuGJ5m8=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/mxk/go-flowrate v0.0.0-20140419014527-cca7078d478f h1:y5//uYreIhSUg3J1GEMiLbxo1LJaP8RfCpH6pymGZus=\ngithub.com/mxk/go-flowrate v0.0.0-20140419014527-cca7078d478f/go.mod h1:ZdcZmHo+o7JKHSa8/e818NopupXU1YMK5fe1lsApnBw=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=\ngithub.com/nxadm/tail v1.4.4/go.mod h1:kenIhsEOeOJmVchQTgglprH7qJGnHDVpk1VPCcaMI8A=\ngithub.com/nxadm/tail v1.4.8 h1:nPr65rt6Y5JFSKQO7qToXr7pePgD6Gwiw05lkbyAQTE=\ngithub.com/nxadm/tail v1.4.8/go.mod h1:+ncqLTQzXmGhMZNUePPaPqPvBxHAIsmXswZKocGu+AU=\ngithub.com/oklog/ulid v1.3.1 h1:EGfNDEx6MqHz8B3uNV6QAib1UR2Lm97sHi3ocA6ESJ4=\ngithub.com/oklog/ulid v1.3.1/go.mod h1:CirwcVhetQ6Lv90oh/F+FBtV6XMibvdAFo93nm5qn4U=\ngithub.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.12.1/go.mod h1:zj2OWP4+oCPe1qIXoGWkgMRwljMUYCdkwsT2108oapk=\ngithub.com/onsi/ginkgo v1.16.5 h1:8xi0RTUf59SOSfEtZMvwTvXYMzG4gV23XVHOZiXNtnE=\ngithub.com/onsi/ginkgo v1.16.5/go.mod h1:+E8gABHa3K6zRBolWtd+ROzc/U5bkGt0FwiG042wbpU=\ngithub.com/onsi/ginkgo/v2 v2.21.0 h1:7rg/4f3rB88pb5obDgNZrNHrQ4e6WpjonchcpuBRnZM=\ngithub.com/onsi/ginkgo/v2 v2.21.0/go.mod h1:7Du3c42kxCUegi0IImZ1wUQzMBVecgIHjR1C+NkhLQo=\ngithub.com/onsi/gomega v1.7.1/go.mod h1:XdKZgCCFLUoM/7CFJVPcG8C1xQ1AJ0vpAezJrB7JYyY=\ngithub.com/onsi/gomega v1.10.1/go.mod h1:iN09h71vgCQne3DLsj+A5owkum+a2tYe+TOCB1ybHNo=\ngithub.com/onsi/gomega v1.35.1 h1:Cwbd75ZBPxFSuZ6T+rN/WCb/gOc6YgFBXLlZLhC7Ds4=\ngithub.com/onsi/gomega v1.35.1/go.mod h1:PvZbdDc8J6XJEpDK4HCuRBm8a6Fzp9/DmhC9C7yFlog=\ngithub.com/op/go-logging v0.0.0-20160315200505-970db520ece7/go.mod h1:HzydrMdWErDVzsI23lYNej1Htcns9BCg93Dk0bBINWk=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.1.0 h1:8SG7/vwALn54lVB/0yZ/MMwhFrPYtpEHQb2IpWsCzug=\ngithub.com/opencontainers/image-spec v1.1.0/go.mod h1:W4s4sFTMaBeK1BQLXbG4AdM2szdn85PY75RI83NrTrM=\ngithub.com/opentracing/opentracing-go v1.2.1-0.20220228012449-10b1cf09e00b h1:FfH+VrHHk6Lxt9HdVS0PXzSXFyS2NbZKXv33FYPol0A=\ngithub.com/opentracing/opentracing-go v1.2.1-0.20220228012449-10b1cf09e00b/go.mod h1:AC62GU6hc0BrNm+9RK9VSiwa/EUe1bkIeFORAMcHvJU=\ngithub.com/osrg/gobgp/v3 v3.33.0 h1:G8NlY1gzz0DOfiwfiYv2++vWpPLm+CMAKYRVzSmaJow=\ngithub.com/osrg/gobgp/v3 v3.33.0/go.mod h1:8m+kgkdaWrByxg5EWpNUO2r/mopodrNBOUBhMnW/yGQ=\ngithub.com/pelletier/go-toml v1.9.5 h1:4yBQzkHv+7BHq2PQUZF3Mx0IYxG7LsP222s7Agd3ve8=\ngithub.com/pelletier/go-toml v1.9.5/go.mod h1:u1nR/EPcESfeI/szUZKdtJ0xRNbUoANCkoOuaOx1Y+c=\ngithub.com/pelletier/go-toml/v2 v2.2.2 h1:aYUidT7k73Pcl9nb2gScu7NSrKCSHIDE89b3+6Wq+LM=\ngithub.com/pelletier/go-toml/v2 v2.2.2/go.mod h1:1t835xjRzz80PqgE6HHgN2JOsmgYu/h4qDAS4n929Rs=\ngithub.com/peterbourgon/diskv v2.0.1+incompatible h1:UBdAOUP5p4RWqPBg048CAvpKN+vxiaj6gdUUzhl4XmI=\ngithub.com/peterbourgon/diskv v2.0.1+incompatible/go.mod h1:uqqh8zWWbv1HBMNONnaR/tNboyR3/BZd58JJSHlUSCU=\ngithub.com/petermattis/goid v0.0.0-20240813172612-4fcff4a6cae7 h1:Dx7Ovyv/SFnMFw3fD4oEoeorXc6saIiQ23LrGLth0Gw=\ngithub.com/petermattis/goid v0.0.0-20240813172612-4fcff4a6cae7/go.mod h1:pxMtw7cyUw6B2bRH0ZBANSPg+AoSud1I1iyJHI69jH4=\ngithub.com/phayes/freeport v0.0.0-20220201140144-74d24b5ae9f5 h1:Ii+DKncOVM8Cu1Hc+ETb5K+23HdAMvESYE3ZJ5b5cMI=\ngithub.com/phayes/freeport v0.0.0-20220201140144-74d24b5ae9f5/go.mod h1:iIss55rKnNBTvrwdmkUpLnDpZoAHvWaiq5+iMmen4AE=\ngithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c h1:+mdjkGKdHQG3305AYmdv1U2eRNDiU2ErMBj1gwrq8eQ=\ngithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c/go.mod h1:7rwL4CYBLnjLxUqIJNnCWiEdr3bn6IUYi15bNlnbCCU=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/poy/onpar v1.1.2 h1:QaNrNiZx0+Nar5dLgTVp5mXkyoVFIbepjyEoGSnhbAY=\ngithub.com/poy/onpar v1.1.2/go.mod h1:6X8FLNoxyr9kkmnlqpK6LSoiOtrO6MICtWwEuWkLjzg=\ngithub.com/prometheus-community/pro-bing v0.5.0 h1:Fq+4BUXKIvsPtXUY8K+04ud9dkAuFozqGmRAyNUpffY=\ngithub.com/prometheus-community/pro-bing v0.5.0/go.mod h1:1joR9oXdMEAcAJJvhs+8vNDvTg5thfAZcRFhcUozG2g=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=\ngithub.com/prometheus/client_golang v1.1.0/go.mod h1:I1FGZT9+L76gKKOs5djB6ezCbFQP1xR9D75/vuwEF3g=\ngithub.com/prometheus/client_golang v1.20.5 h1:cxppBPuYhUnsO6yo/aoRol4L7q7UFfdm+bR9r+8l63Y=\ngithub.com/prometheus/client_golang v1.20.5/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=\ngithub.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=\ngithub.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.6.0/go.mod h1:eBmuwkDJBwy6iBfxCBob6t6dR6ENT/y+J+Zk0j9GMYc=\ngithub.com/prometheus/common v0.61.0 h1:3gv/GThfX0cV2lpO7gkTUwZru38mxevy90Bj8YFSRQQ=\ngithub.com/prometheus/common v0.61.0/go.mod h1:zr29OCN/2BsJRaFwG8QOBr41D6kkchKbpeNH7pAjb/s=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.0.3/go.mod h1:4A/X28fw3Fc593LaREMrKMqOKvUAntwMDaekg4FpcdQ=\ngithub.com/prometheus/procfs v0.15.1 h1:YagwOFzUgYfKKHX6Dr+sHT7km/hxC76UB0learggepc=\ngithub.com/prometheus/procfs v0.15.1/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=\ngithub.com/redis/go-redis/v9 v9.6.1 h1:HHDteefn6ZkTtY5fGUE8tj8uy85AHk6zP7CpzIAM0y4=\ngithub.com/redis/go-redis/v9 v9.6.1/go.mod h1:0C0c6ycQsdpVNQpxb1njEQIqkx5UcsM8FJCQLgE9+RA=\ngithub.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rivo/uniseg v0.4.4 h1:8TfxU8dW6PdqD27gjM8MVNuicgxIjxpm4K7x4jp8sis=\ngithub.com/rivo/uniseg v0.4.4/go.mod h1:FN3SvrM+Zdj16jyLfmOkMNblXMcoc8DfTHruCPUcx88=\ngithub.com/rogpeppe/fastuuid v1.2.0/go.mod h1:jVj6XXZzXRy/MSR5jhDC/2q6DgLz+nrA6LYCDYWNEvQ=\ngithub.com/rogpeppe/go-internal v1.13.1 h1:KvO1DLK/DRN07sQ1LQKScxyZJuNnedQ5/wKSR38lUII=\ngithub.com/rogpeppe/go-internal v1.13.1/go.mod h1:uMEvuHeurkdAXX61udpOXGD/AzZDWNMNyH2VO9fmH0o=\ngithub.com/rubenv/sql-migrate v1.7.0 h1:HtQq1xyTN2ISmQDggnh0c9U3JlP8apWh8YO2jzlXpTI=\ngithub.com/rubenv/sql-migrate v1.7.0/go.mod h1:S4wtDEG1CKn+0ShpTtzWhFpHHI5PvCUtiGI+C+Z2THE=\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sagikazarmark/locafero v0.4.0 h1:HApY1R9zGo4DBgr7dqsTH/JJxLTTsOt7u6keLGt6kNQ=\ngithub.com/sagikazarmark/locafero v0.4.0/go.mod h1:Pe1W6UlPYUk/+wc/6KFhbORCfqzgYEpgQ3O5fPuL3H4=\ngithub.com/sagikazarmark/slog-shim v0.1.0 h1:diDBnUNK9N/354PgrxMywXnAwEr1QZcOr6gto+ugjYE=\ngithub.com/sagikazarmark/slog-shim v0.1.0/go.mod h1:SrcSrq8aKtyuqEI1uvTDTK1arOWRIczQRv+GVI1AkeQ=\ngithub.com/sasha-s/go-deadlock v0.3.5 h1:tNCOEEDG6tBqrNDOX35j/7hL5FcFViG6awUGROb2NsU=\ngithub.com/sasha-s/go-deadlock v0.3.5/go.mod h1:bugP6EGbdGYObIlx7pUZtWqlvo8k9H6vCBBsiChJQ5U=\ngithub.com/sergi/go-diff v1.1.0/go.mod h1:STckp+ISIX8hZLjrqAeVduY0gWCT9IjLuqbuNXdaHfM=\ngithub.com/sergi/go-diff v1.3.1 h1:xkr+Oxo4BOQKmkn/B9eMK0g5Kg/983T9DqqPHwYqD+8=\ngithub.com/sergi/go-diff v1.3.1/go.mod h1:aMJSSKb2lpPvRNec0+w3fl7LP9IOFzdc9Pa4NFbPK1I=\ngithub.com/shopspring/decimal v1.4.0 h1:bxl37RwXBklmTi0C79JfXCEBD1cqqHt0bbgBAGFp81k=\ngithub.com/shopspring/decimal v1.4.0/go.mod h1:gawqmDU56v4yIKSwfBSFip1HdCCXN8/+DMd9qYNcwME=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.3.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.7.0/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/sirupsen/logrus v1.9.0/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/sourcegraph/conc v0.3.0 h1:OQTbbt6P72L20UqAkXXuLOj79LfEanQ+YQFNpLA9ySo=\ngithub.com/sourcegraph/conc v0.3.0/go.mod h1:Sdozi7LEKbFPqYX2/J+iBAM6HpqSLTASQIKqDmF7Mt0=\ngithub.com/spf13/afero v1.11.0 h1:WJQKhtpdm3v2IzqG8VMqrr6Rf3UYpEF239Jy9wNepM8=\ngithub.com/spf13/afero v1.11.0/go.mod h1:GH9Y3pIexgf1MTIWtNGyogA5MwRIDXGUr+hbWNoBjkY=\ngithub.com/spf13/cast v1.7.1 h1:cuNEagBQEHWN1FnbGEjCXL2szYEXqfJPbP2HNUaca9Y=\ngithub.com/spf13/cast v1.7.1/go.mod h1:ancEpBxwJDODSW/UG4rDrAqiKolqNNh2DX3mk86cAdo=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/spf13/pflag v1.0.6-0.20210604193023-d5e0c0615ace h1:9PNP1jnUjRhfmGMlkXHjYPishpcw4jpSt/V/xYY3FMA=\ngithub.com/spf13/pflag v1.0.6-0.20210604193023-d5e0c0615ace/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/spf13/viper v1.19.0 h1:RWq5SEjt8o25SROyN3z2OrDB9l7RPd3lwTWU8EcEdcI=\ngithub.com/spf13/viper v1.19.0/go.mod h1:GQUN9bilAbhU/jgc1bKs99f/suXKeUMct8Adx5+Ntkg=\ngithub.com/spiffe/go-spiffe/v2 v2.4.0 h1:j/FynG7hi2azrBG5cvjRcnQ4sux/VNj8FAVc99Fl66c=\ngithub.com/spiffe/go-spiffe/v2 v2.4.0/go.mod h1:m5qJ1hGzjxjtrkGHZupoXHo/FDWwCB1MdSyBzfHugx0=\ngithub.com/spiffe/spire-api-sdk v1.11.1 h1:s5RWwBszfMYsRQTGeB6p93NfYBuwHP0tjHFEj5LHun0=\ngithub.com/spiffe/spire-api-sdk v1.11.1/go.mod h1:4uuhFlN6KBWjACRP3xXwrOTNnvaLp1zJs8Lribtr4fI=\ngithub.com/stoewer/go-strcase v1.3.0 h1:g0eASXYtp+yvN9fK8sH94oCIk0fau9uV1/ZdJ0AVEzs=\ngithub.com/stoewer/go-strcase v1.3.0/go.mod h1:fAH5hQ5pehh+j3nZfvwdk2RgEgQjAoM8wodgtPmh1xo=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2 h1:xuMeJ0Sdp5ZMRXx/aWO6RZxdr3beISkG5/G/aIRr3pY=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.2/go.mod h1:R6va5+xMeoiuVRoj+gSkQ7d3FALtqAAGI1FQKckRals=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/subosito/gotenv v1.6.0 h1:9NlTDc1FTs4qu0DDq7AEtTPNw6SVm7uBMsUCUjABIf8=\ngithub.com/subosito/gotenv v1.6.0/go.mod h1:Dk4QP5c2W3ibzajGcXpNraDfq2IrhjMIvMSWPKKo0FU=\ngithub.com/tidwall/gjson v1.14.2/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=\ngithub.com/tidwall/gjson v1.18.0 h1:FIDeeyB800efLX89e5a8Y0BNH+LOngJyGrIWxG2FKQY=\ngithub.com/tidwall/gjson v1.18.0/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=\ngithub.com/tidwall/match v1.1.1 h1:+Ho715JplO36QYgwN9PGYNhgZvoUSc9X2c80KVTi+GA=\ngithub.com/tidwall/match v1.1.1/go.mod h1:eRSPERbgtNPcGhD8UCthc6PmLEQXEWd3PRB5JTxsfmM=\ngithub.com/tidwall/pretty v1.2.0 h1:RWIZEg2iJ8/g6fDDYzMpobmaoGh5OLl4AXtGUGPcqCs=\ngithub.com/tidwall/pretty v1.2.0/go.mod h1:ITEVvHYasfjBbM0u2Pg8T2nJnzm8xPwvNhhsoaGGjNU=\ngithub.com/tidwall/sjson v1.2.5 h1:kLy8mja+1c9jlljvWTlSazM7cKDRfJuR/bOJhcY5NcY=\ngithub.com/tidwall/sjson v1.2.5/go.mod h1:Fvgq9kS/6ociJEDnK0Fk1cpYF4FIW6ZF7LAe+6jwd28=\ngithub.com/uber/jaeger-client-go v2.30.0+incompatible h1:D6wyKGCecFaSRUpo8lCVbaOOb6ThwMmTEbhRwtKR97o=\ngithub.com/uber/jaeger-client-go v2.30.0+incompatible/go.mod h1:WVhlPFC8FDjOFMMWRy2pZqQJSXxYSwNYOkTr/Z6d3Kk=\ngithub.com/uber/jaeger-lib v2.4.1+incompatible h1:td4jdvLcExb4cBISKIpHuGoVXh+dVKhn2Um6rjCsSsg=\ngithub.com/uber/jaeger-lib v2.4.1+incompatible/go.mod h1:ComeNDZlWwrWnDv8aPp0Ba6+uUTzImX/AauajbLI56U=\ngithub.com/vishvananda/netlink v1.3.1-0.20241227191253-26ee0e2abe2d h1:aho1TDN+owyRC4gMe3PRewg0yBVdBsMg5kO9PYvzjo8=\ngithub.com/vishvananda/netlink v1.3.1-0.20241227191253-26ee0e2abe2d/go.mod h1:i6NetklAujEcC6fK0JPjT8qSwWyO0HLn4UKG+hGqeJs=\ngithub.com/vishvananda/netns v0.0.4/go.mod h1:SpkAiCQRtJ6TvvxPnOSyH3BMl6unz3xZlaprSwhNNJM=\ngithub.com/vishvananda/netns v0.0.5 h1:DfiHV+j8bA32MFM7bfEunvT8IAqQ/NzSJHtcmW5zdEY=\ngithub.com/vishvananda/netns v0.0.5/go.mod h1:SpkAiCQRtJ6TvvxPnOSyH3BMl6unz3xZlaprSwhNNJM=\ngithub.com/weppos/publicsuffix-go v0.12.0/go.mod h1:z3LCPQ38eedDQSwmsSRW4Y7t2L8Ln16JPQ02lHAdn5k=\ngithub.com/weppos/publicsuffix-go v0.13.0/go.mod h1:z3LCPQ38eedDQSwmsSRW4Y7t2L8Ln16JPQ02lHAdn5k=\ngithub.com/weppos/publicsuffix-go v0.30.0 h1:QHPZ2GRu/YE7cvejH9iyavPOkVCB4dNxp2ZvtT+vQLY=\ngithub.com/weppos/publicsuffix-go v0.30.0/go.mod h1:kBi8zwYnR0zrbm8RcuN1o9Fzgpnnn+btVN8uWPMyXAY=\ngithub.com/weppos/publicsuffix-go/publicsuffix/generator v0.0.0-20220927085643-dc0d00c92642/go.mod h1:GHfoeIdZLdZmLjMlzBftbTDntahTttUMWjxZwQJhULE=\ngithub.com/x448/float16 v0.8.4 h1:qLwI1I70+NjRFUR3zs1JPUCgaCXSh3SW62uAKT1mSBM=\ngithub.com/x448/float16 v0.8.4/go.mod h1:14CWIYCyZA/cWjXOioeEpHeN/83MdbZDRQHoFcYsOfg=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb h1:zGWFAtiMcyryUHoUjUJX0/lt1H2+i2Ka2n+D3DImSNo=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=\ngithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415 h1:EzJWgHovont7NscjpAxXsDA8S8BMYve8Y5+7cuRE7R0=\ngithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415/go.mod h1:GwrjFmJcFw6At/Gs6z4yjiIwzuJ1/+UwLxMQDVQXShQ=\ngithub.com/xeipuuv/gojsonschema v1.2.0 h1:LhYJRs+L4fBtjZUfuSZIKGeVu0QRy8e5Xi7D17UxZ74=\ngithub.com/xeipuuv/gojsonschema v1.2.0/go.mod h1:anYRn/JVcOK2ZgGU+IjEV4nwlhoK5sQluxsYJ78Id3Y=\ngithub.com/xlab/treeprint v1.2.0 h1:HzHnuAF1plUN2zGlAFHbSQP2qJ0ZAD3XF5XD7OesXRQ=\ngithub.com/xlab/treeprint v1.2.0/go.mod h1:gj5Gd3gPdKtR1ikdDK6fnFLdmIS0X30kTTuNd/WEJu0=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngithub.com/yvasiyarov/go-metrics v0.0.0-20140926110328-57bccd1ccd43 h1:+lm10QQTNSBd8DVTNGHx7o/IKu9HYDvLMffDhbyLccI=\ngithub.com/yvasiyarov/go-metrics v0.0.0-20140926110328-57bccd1ccd43/go.mod h1:aX5oPXxHm3bOH+xeAttToC8pqch2ScQN/JoXYupl6xs=\ngithub.com/yvasiyarov/gorelic v0.0.0-20141212073537-a9bba5b9ab50 h1:hlE8//ciYMztlGpl/VA+Zm1AcTPHYkHJPbHqE6WJUXE=\ngithub.com/yvasiyarov/gorelic v0.0.0-20141212073537-a9bba5b9ab50/go.mod h1:NUSPSUX/bi6SeDMUh6brw0nXpxHnc96TguQh0+r/ssA=\ngithub.com/yvasiyarov/newrelic_platform_go v0.0.0-20140908184405-b21fdbd4370f h1:ERexzlUfuTvpE74urLSbIQW0Z/6hF9t8U4NsJLaioAY=\ngithub.com/yvasiyarov/newrelic_platform_go v0.0.0-20140908184405-b21fdbd4370f/go.mod h1:GlGEuHIJweS1mbCqG+7vt2nvWLzLLnRHbXz5JKd/Qbg=\ngithub.com/zeebo/errs v1.3.0 h1:hmiaKqgYZzcVgRL1Vkc1Mn2914BbzB0IBxs+ebeutGs=\ngithub.com/zeebo/errs v1.3.0/go.mod h1:sgbWHsvVuTPHcqJJGQ1WhI5KbWlHYz+2+2C/LSEtCw4=\ngithub.com/zmap/rc2 v0.0.0-20131011165748-24b9757f5521/go.mod h1:3YZ9o3WnatTIZhuOtot4IcUfzoKVjUHqu6WALIyI0nE=\ngithub.com/zmap/rc2 v0.0.0-20190804163417-abaa70531248/go.mod h1:3YZ9o3WnatTIZhuOtot4IcUfzoKVjUHqu6WALIyI0nE=\ngithub.com/zmap/zcertificate v0.0.0-20180516150559-0e3d58b1bac4/go.mod h1:5iU54tB79AMBcySS0R2XIyZBAVmeHranShAFELYx7is=\ngithub.com/zmap/zcertificate v0.0.1/go.mod h1:q0dlN54Jm4NVSSuzisusQY0hqDWvu92C+TWveAxiVWk=\ngithub.com/zmap/zcrypto v0.0.0-20201128221613-3719af1573cf/go.mod h1:aPM7r+JOkfL+9qSB4KbYjtoEzJqUK50EXkkJabeNJDQ=\ngithub.com/zmap/zcrypto v0.0.0-20201211161100-e54a5822fb7e/go.mod h1:aPM7r+JOkfL+9qSB4KbYjtoEzJqUK50EXkkJabeNJDQ=\ngithub.com/zmap/zcrypto v0.0.0-20230310154051-c8b263fd8300 h1:DZH5n7L3L8RxKdSyJHZt7WePgwdhHnPhQFdQSJaHF+o=\ngithub.com/zmap/zcrypto v0.0.0-20230310154051-c8b263fd8300/go.mod h1:mOd4yUMgn2fe2nV9KXsa9AyQBFZGzygVPovsZR+Rl5w=\ngithub.com/zmap/zlint/v3 v3.0.0/go.mod h1:paGwFySdHIBEMJ61YjoqT4h7Ge+fdYG4sUQhnTb1lJ8=\ngithub.com/zmap/zlint/v3 v3.5.0 h1:Eh2B5t6VKgVH0DFmTwOqE50POvyDhUaU9T2mJOe1vfQ=\ngithub.com/zmap/zlint/v3 v3.5.0/go.mod h1:JkNSrsDJ8F4VRtBZcYUQSvnWFL7utcjDIn+FE64mlBI=\ngo.etcd.io/etcd/api/v3 v3.5.17 h1:cQB8eb8bxwuxOilBpMJAEo8fAONyrdXTHUNcMd8yT1w=\ngo.etcd.io/etcd/api/v3 v3.5.17/go.mod h1:d1hvkRuXkts6PmaYk2Vrgqbv7H4ADfAKhyJqHNLJCB4=\ngo.etcd.io/etcd/client/pkg/v3 v3.5.17 h1:XxnDXAWq2pnxqx76ljWwiQ9jylbpC4rvkAeRVOUKKVw=\ngo.etcd.io/etcd/client/pkg/v3 v3.5.17/go.mod h1:4DqK1TKacp/86nJk4FLQqo6Mn2vvQFBmruW3pP14H/w=\ngo.etcd.io/etcd/client/v3 v3.5.17 h1:o48sINNeWz5+pjy/Z0+HKpj/xSnBkuVhVvXkjEXbqZY=\ngo.etcd.io/etcd/client/v3 v3.5.17/go.mod h1:j2d4eXTHWkT2ClBgnnEPm/Wuu7jsqku41v9DZ3OtjQo=\ngo.mongodb.org/mongo-driver v1.14.0 h1:P98w8egYRjYe3XDjxhYJagTokP/H6HzlsnojRgZRd80=\ngo.mongodb.org/mongo-driver v1.14.0/go.mod h1:Vzb0Mk/pa7e6cWw85R4F/endUC3u0U9jGcNU603k65c=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.opentelemetry.io/auto/sdk v1.1.0 h1:cH53jehLUN6UFLY71z+NDOiNJqDdPRaXzTel0sJySYA=\ngo.opentelemetry.io/auto/sdk v1.1.0/go.mod h1:3wSPjt5PWp2RhlCcmmOial7AvC4DQqZb7a7wCow3W8A=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.53.0 h1:9G6E0TXzGFVfTnawRzrPl83iHOAV7L8NJiR8RSGYV1g=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.53.0/go.mod h1:azvtTADFQJA8mX80jIH/akaE7h+dbm/sVuaHqN13w74=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0 h1:4K4tsIXefpVJtvA/8srF4V4y0akAoPHkIslgAkjixJA=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0/go.mod h1:jjdQuTGVsXV4vSs+CJ2qYDeDPf9yIJV23qlIzBm73Vg=\ngo.opentelemetry.io/otel v1.33.0 h1:/FerN9bax5LoK51X/sI0SVYrjSE0/yUL7DpxW4K3FWw=\ngo.opentelemetry.io/otel v1.33.0/go.mod h1:SUUkR6csvUQl+yjReHu5uM3EtVV7MBm5FHKRlNx4I8I=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0 h1:3Q/xZUyC1BBkualc9ROb4G8qkH90LXEIICcs5zv1OYY=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0/go.mod h1:s75jGIWA9OfCMzF0xr+ZgfrB5FEbbV7UuYo32ahUiFI=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.27.0 h1:qFffATk0X+HD+f1Z8lswGiOQYKHRlzfmdJm0wEaVrFA=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.27.0/go.mod h1:MOiCmryaYtc+V0Ei+Tx9o5S1ZjA7kzLucuVuyzBZloQ=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.22.0 h1:FyjCyI9jVEfqhUh2MoSkmolPjfh5fp2hnV0b0irxH4Q=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.22.0/go.mod h1:hYwym2nDEeZfG/motx0p7L7J1N1vyzIThemQsb4g2qY=\ngo.opentelemetry.io/otel/metric v1.33.0 h1:r+JOocAyeRVXD8lZpjdQjzMadVZp2M4WmQ+5WtEnklQ=\ngo.opentelemetry.io/otel/metric v1.33.0/go.mod h1:L9+Fyctbp6HFTddIxClbQkjtubW6O9QS3Ann/M82u6M=\ngo.opentelemetry.io/otel/sdk v1.31.0 h1:xLY3abVHYZ5HSfOg3l2E5LUj2Cwva5Y7yGxnSW9H5Gk=\ngo.opentelemetry.io/otel/sdk v1.31.0/go.mod h1:TfRbMdhvxIIr/B2N2LQW2S5v9m3gOQ/08KsbbO5BPT0=\ngo.opentelemetry.io/otel/sdk/metric v1.31.0 h1:i9hxxLJF/9kkvfHppyLL55aW7iIJz4JjxTeYusH7zMc=\ngo.opentelemetry.io/otel/sdk/metric v1.31.0/go.mod h1:CRInTMVvNhUKgSAMbKyTMxqOBC0zgyxzW55lZzX43Y8=\ngo.opentelemetry.io/otel/trace v1.33.0 h1:cCJuF7LRjUFso9LPnEAHJDB2pqzp+hbO8eu1qqW2d/s=\ngo.opentelemetry.io/otel/trace v1.33.0/go.mod h1:uIcdVUZMpTAmz0tI1z04GoVSezK37CbGV4fr1f2nBck=\ngo.opentelemetry.io/proto/otlp v0.7.0/go.mod h1:PqfVotwruBrMGOCsRd/89rSnXhoiJIqeYNgFYFoEGnI=\ngo.opentelemetry.io/proto/otlp v1.4.0 h1:TA9WRvW6zMwP+Ssb6fLoUIuirti1gGbP28GcKG1jgeg=\ngo.opentelemetry.io/proto/otlp v1.4.0/go.mod h1:PPBWZIP98o2ElSqI35IHfu7hIhSwvc5N38Jw8pXuGFY=\ngo.uber.org/atomic v1.9.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/atomic v1.11.0 h1:ZvwS0R+56ePWxUNi+Atn9dWONBPp/AUETXlHW0DxSjE=\ngo.uber.org/atomic v1.11.0/go.mod h1:LUxbIzbOniOlMKjJjyPfpl4v+PKK2cNJn91OQbhoJI0=\ngo.uber.org/dig v1.17.1 h1:Tga8Lz8PcYNsWsyHMZ1Vm0OQOUaJNDyvPImgbAu9YSc=\ngo.uber.org/dig v1.17.1/go.mod h1:Us0rSJiThwCv2GteUN0Q7OKvU7n5J4dxZ9JKUXozFdE=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\ngo.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=\ngo.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=\ngo.uber.org/zap v1.27.0 h1:aJMhYGrd5QSmlpLMr2MftRKl7t8J8PTZPA732ud/XR8=\ngo.uber.org/zap v1.27.0/go.mod h1:GB2qFLM7cTU87MWRP2mPIjqfIDnGu+VIO4V/SdhGo2E=\ngo4.org/netipx v0.0.0-20231129151722-fdeea329fbba h1:0b9z3AuHCjxk0x/opv64kcgZLBseWJUpBw5I82+2U4M=\ngo4.org/netipx v0.0.0-20231129151722-fdeea329fbba/go.mod h1:PLyyIXexvUFg3Owu6p/WfdlivPbZJsZdgWZlrGope/Y=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20201124201722-c8d3bf9c5392/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=\ngolang.org/x/crypto v0.0.0-20201208171446-5f87f3452ae9/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.7.0/go.mod h1:pYwdfH91IfpZVANVyUOhSIPZaFoJGxTFbZhFTx+dXZU=\ngolang.org/x/crypto v0.32.0 h1:euUpcYgM8WcP71gNpTqQCn6rC2t6ULUPiOzfWaXVVfc=\ngolang.org/x/crypto v0.32.0/go.mod h1:ZnnJkOaASj8g0AjIduWNlq2NRxL0PlBrbKVyZ6V/Ugc=\ngolang.org/x/exp v0.0.0-20180321215751-8460e604b9de/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20180807140117-3d87b88a115f/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190125153040-c74c464bbbf2/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20191030013958-a1ab85dbe136/go.mod h1:JXzH8nQsPlswgeRAPE3MuO9GYsAcnJvJ4vnMwN/5qkY=\ngolang.org/x/exp v0.0.0-20240808152545-0cdaa3abc0fa h1:ELnwvuAXPNtPk1TJRuGkI9fDTwym6AYBu0qzT8AcHdI=\ngolang.org/x/exp v0.0.0-20240808152545-0cdaa3abc0fa/go.mod h1:akd2r19cwCdwSwWeIdzYQGa/EZZyqcOdwWiwj5L5eKQ=\ngolang.org/x/image v0.0.0-20180708004352-c73c2afc3b81/go.mod h1:ux5Hcp/YLpHSI86hEcLt0YII63i6oz57MZXIpbrjZUs=\ngolang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\ngolang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=\ngolang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.22.0 h1:D4nJWe9zXqHOmWqj4VMOJhvzj7bEZg4wEYa759z1pH4=\ngolang.org/x/mod v0.22.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190503192946-f4e77d36d62c/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200520004742-59133d7f0dd7/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201209123823-ac852fbbde11/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.7.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.8.0/go.mod h1:QVkue5JL9kW//ek3r6jTKnTFis1tRmNAW2P1shuFdJc=\ngolang.org/x/net v0.34.0 h1:Mb7Mrk043xzHgnRM88suvJFwzVrRfHEHJEl5/71CKw0=\ngolang.org/x/net v0.34.0/go.mod h1:di0qlW3YNM5oh6GqDGQr92MyTozJPmybPK4Ev/Gm31k=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.24.0 h1:KTBBxWqUa0ykRPLtV69rRto9TLXcqYkeswu48x/gvNE=\ngolang.org/x/oauth2 v0.24.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190801041406-cbf593c0f2f3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190904154756-749cb33beabd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191005200804-aed5e4c7ecf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191120155948-bd437916bb0e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201126233918-771906719818/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210112080510-489259a85091/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210616094352-59db8d763f22/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210927094055-39ccf1dd6fa6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220209214540-3681064d5158/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220503163025-988cb79eb6c6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.2.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.10.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.29.0 h1:TPYlXGxvx1MGTn2GiZDhnjPA9wZzZeGKHHmKhHYvgaU=\ngolang.org/x/sys v0.29.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201117132131-f5c789dd3221/go.mod h1:Nr5EML6q2oocZ2LXRh80K7BxOlk5/8JxuGnuhpl+muw=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.6.0/go.mod h1:m6U89DPEgQRMq3DNkDClhWw02AUbt2daBVO4cn4Hv9U=\ngolang.org/x/term v0.28.0 h1:/Ts8HFuMR2E6IP/jlo7QVLZHggjKQbhu/7H0LJFr3Gg=\ngolang.org/x/term v0.28.0/go.mod h1:Sw/lC2IAUZ92udQNf3WodGtn4k/XoLyZoh8v/8uiwek=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.8.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.9.0 h1:EsRrnYcQiGH+5FfbgvV4AP7qEZstoyrHB0DzarOQ4ZY=\ngolang.org/x/time v0.9.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180525024113-a5b4c53f6e8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190206041539-40960b6deb8e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20201224043029-2b0845dc783e/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/tools v0.29.0 h1:Xx0h3TtM9rzQpQuR4dKLrdglAmCEN5Oi+P74JdhdzXE=\ngolang.org/x/tools v0.29.0/go.mod h1:KMQVMRsVxU6nHCFXrBPhDB8XncLNLM0lIy/F14RP588=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.zx2c4.com/wireguard v0.0.0-20231211153847-12269c276173 h1:/jFs0duh4rdb8uIfPMv78iAJGcPKDeqAFnaLBropIC4=\ngolang.zx2c4.com/wireguard v0.0.0-20231211153847-12269c276173/go.mod h1:tkCQ4FQXmpAgYVh++1cq16/dH4QJtmvpRv19DWGAHSA=\ngolang.zx2c4.com/wireguard/wgctrl v0.0.0-20241231184526-a9ab2273dd10 h1:3GDAcqdIg1ozBNLgPy4SLT84nfcBjr6rhGtXYtrkWLU=\ngolang.zx2c4.com/wireguard/wgctrl v0.0.0-20241231184526-a9ab2273dd10/go.mod h1:T97yPqesLiNrOYxkwmhMI0ZIlJDm+p0PMR8eRVeR5tQ=\ngomodules.xyz/jsonpatch/v2 v2.4.0 h1:Ci3iUJyx9UeRx7CeFN8ARgGbkESwJK+KB9lLcWxY/Zw=\ngomodules.xyz/jsonpatch/v2 v2.4.0/go.mod h1:AH3dM2RI6uoBZxn3LVrfvJ3E0/9dG4cSrbuBJT4moAY=\ngonum.org/v1/gonum v0.0.0-20180816165407-929014505bf4/go.mod h1:Y+Yx5eoAFn32cQvJDxZx5Dpnq+c3wtXuadVZAcxbbBo=\ngonum.org/v1/gonum v0.8.2/go.mod h1:oe/vMfY3deqTw+1EZJhuvEW2iwGF1bW9wwu7XCu0+v0=\ngonum.org/v1/netlib v0.0.0-20190313105609-8cb42192e0e0/go.mod h1:wa6Ws7BG/ESfp6dHfk7C6KdzKA7wR7u/rKwOGE66zvw=\ngonum.org/v1/plot v0.0.0-20190515093506-e2840ee46a6b/go.mod h1:Wt8AAjI+ypCyYX3nZBvf6cAIx93T+c/OS2HFAYskSZc=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20200513103714-09dca8ec2884/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241216192217-9240e9c98484 h1:ChAdCYNQFDk5fYvFZMywKLIijG7TC2m1C2CMEu11G3o=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241216192217-9240e9c98484/go.mod h1:KRUmxRI4JmbpAm8gcZM4Jsffi859fo5LQjILwuqj9z8=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20250106144421-5f5ef82da422 h1:3UsHvIr4Wc2aW4brOaSCmcxh9ksica6fHEr8P1XhkYw=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20250106144421-5f5ef82da422/go.mod h1:3ENsm/5D1mzDyhpzeRi1NR784I0BcofWBoSc5QqqMK4=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.33.1/go.mod h1:fr5YgcSWrqhRRxogOsw7RzIpsmvOZ6IcH4kBYTpR3n0=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.36.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.48.0/go.mod h1:vN9eftEi1UMyUsIF80+uQXhHjbXYbm0uXoFCACuMGWk=\ngoogle.golang.org/grpc v1.69.2 h1:U3S9QEtbXC0bYNvRtcoklF3xGtLViumSYxWykJS+7AU=\ngoogle.golang.org/grpc v1.69.2/go.mod h1:vyjdE6jLBI76dgpDojsFGNaHlxdjXN9ghpnd2o7JGZ4=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.27.1/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.28.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=\ngoogle.golang.org/protobuf v1.36.2 h1:R8FeyR1/eLmkutZOM5CWghmo5itiG9z0ktFlTVLuTmU=\ngoogle.golang.org/protobuf v1.36.2/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/evanphx/json-patch.v4 v4.12.0 h1:n6jtcsulIzXPJaxegRbvFNNrZDjbij7ny3gmSPG+6V4=\ngopkg.in/evanphx/json-patch.v4 v4.12.0/go.mod h1:p8EYWUEYMpynmqDbY58zCKCFZw8pRWMG4EsWvDvM72M=\ngopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=\ngopkg.in/inf.v0 v0.9.1 h1:73M5CoZyi3ZLMOyDlQh031Cx6N9NDJ2Vvfl76EDAgDc=\ngopkg.in/inf.v0 v0.9.1/go.mod h1:cWUDdTG/fYaXco+Dcufb5Vnc6Gp2YChqWtbxRZE0mXw=\ngopkg.in/ini.v1 v1.67.0 h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=\ngopkg.in/ini.v1 v1.67.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.3/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngotest.tools/v3 v3.5.0 h1:Ljk6PdHdOhAb5aDMWXjDLMMhph+BpztA4v1QdqEW2eY=\ngotest.tools/v3 v3.5.0/go.mod h1:isy3WKz7GK6uNw/sbHzfKBLvlvXwUyV06n6brMxxopU=\nhelm.sh/helm/v3 v3.16.4 h1:rBn/h9MACw+QlhxQTjpl8Ifx+VTWaYsw3rguGBYBzr0=\nhelm.sh/helm/v3 v3.16.4/go.mod h1:k8QPotUt57wWbi90w3LNmg3/MWcLPigVv+0/X4B8BzA=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nk8s.io/api v0.32.0 h1:OL9JpbvAU5ny9ga2fb24X8H6xQlVp+aJMFlgtQjR9CE=\nk8s.io/api v0.32.0/go.mod h1:4LEwHZEf6Q/cG96F3dqR965sYOfmPM7rq81BLgsE0p0=\nk8s.io/apiextensions-apiserver v0.32.0 h1:S0Xlqt51qzzqjKPxfgX1xh4HBZE+p8KKBq+k2SWNOE0=\nk8s.io/apiextensions-apiserver v0.32.0/go.mod h1:86hblMvN5yxMvZrZFX2OhIHAuFIMJIZ19bTvzkP+Fmw=\nk8s.io/apimachinery v0.32.0 h1:cFSE7N3rmEEtv4ei5X6DaJPHHX0C+upp+v5lVPiEwpg=\nk8s.io/apimachinery v0.32.0/go.mod h1:GpHVgxoKlTxClKcteaeuF1Ul/lDVb74KpZcxcmLDElE=\nk8s.io/apiserver v0.32.0 h1:VJ89ZvQZ8p1sLeiWdRJpRD6oLozNZD2+qVSLi+ft5Qs=\nk8s.io/apiserver v0.32.0/go.mod h1:HFh+dM1/BE/Hm4bS4nTXHVfN6Z6tFIZPi649n83b4Ag=\nk8s.io/cli-runtime v0.32.0 h1:dP+OZqs7zHPpGQMCGAhectbHU2SNCuZtIimRKTv2T1c=\nk8s.io/cli-runtime v0.32.0/go.mod h1:Mai8ht2+esoDRK5hr861KRy6z0zHsSTYttNVJXgP3YQ=\nk8s.io/client-go v0.32.0 h1:DimtMcnN/JIKZcrSrstiwvvZvLjG0aSxy8PxN8IChp8=\nk8s.io/client-go v0.32.0/go.mod h1:boDWvdM1Drk4NJj/VddSLnx59X3OPgwrOo0vGbtq9+8=\nk8s.io/code-generator v0.32.0 h1:s0lNN8VSWny8LBz5t5iy7MCdgwdOhdg7vAGVxvS+VWU=\nk8s.io/code-generator v0.32.0/go.mod h1:b7Q7KMZkvsYFy72A79QYjiv4aTz3GvW0f1T3UfhFq4s=\nk8s.io/component-base v0.32.0 h1:d6cWHZkCiiep41ObYQS6IcgzOUQUNpywm39KVYaUqzU=\nk8s.io/component-base v0.32.0/go.mod h1:JLG2W5TUxUu5uDyKiH2R/7NnxJo1HlPoRIIbVLkK5eM=\nk8s.io/endpointslice v0.32.0 h1:ka4sAuyApwkHgh+/0GLTidTCFC2Bz2T7F/jmBeQ+TzY=\nk8s.io/endpointslice v0.32.0/go.mod h1:ArQ8P2n//14SG8k9vAxkiR3adB8C3BY3oSACOpTJRiY=\nk8s.io/gengo/v2 v2.0.0-20240911193312-2b36238f13e9 h1:si3PfKm8dDYxgfbeA6orqrtLkvvIeH8UqffFJDl0bz4=\nk8s.io/gengo/v2 v2.0.0-20240911193312-2b36238f13e9/go.mod h1:EJykeLsmFC60UQbYJezXkEsG2FLrt0GPNkU5iK5GWxU=\nk8s.io/klog/v2 v2.130.1 h1:n9Xl7H1Xvksem4KFG4PYbdQCQxqc/tTUyrgXaOhHSzk=\nk8s.io/klog/v2 v2.130.1/go.mod h1:3Jpz1GvMt720eyJH1ckRHK1EDfpxISzJ7I9OYgaDtPE=\nk8s.io/kube-openapi v0.0.0-20241105132330-32ad38e42d3f h1:GA7//TjRY9yWGy1poLzYYJJ4JRdzg3+O6e8I+e+8T5Y=\nk8s.io/kube-openapi v0.0.0-20241105132330-32ad38e42d3f/go.mod h1:R/HEjbvWI0qdfb8viZUeVZm0X6IZnxAydC7YU42CMw4=\nk8s.io/kubectl v0.32.0 h1:rpxl+ng9qeG79YA4Em9tLSfX0G8W0vfaiPVrc/WR7Xw=\nk8s.io/kubectl v0.32.0/go.mod h1:qIjSX+QgPQUgdy8ps6eKsYNF+YmFOAO3WygfucIqFiE=\nk8s.io/utils v0.0.0-20241210054802-24370beab758 h1:sdbE21q2nlQtFh65saZY+rRM6x6aJJI8IUa1AmH/qa0=\nk8s.io/utils v0.0.0-20241210054802-24370beab758/go.mod h1:OLgZIPagt7ERELqWJFomSt595RzquPNLL48iOWgYOg0=\noras.land/oras-go v1.2.5 h1:XpYuAwAb0DfQsunIyMfeET92emK8km3W4yEzZvUbsTo=\noras.land/oras-go v1.2.5/go.mod h1:PuAwRShRZCsZb7g8Ar3jKKQR/2A/qN+pkYxIOd/FAoo=\nrsc.io/pdf v0.1.1/go.mod h1:n8OzWcQ6Sp37PL01nO98y4iUCRdTGarVfzxY20ICaU4=\nsigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.31.0 h1:CPT0ExVicCzcpeN4baWEV2ko2Z/AsiZgEdwgcfwLgMo=\nsigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.31.0/go.mod h1:Ve9uj1L+deCXFrPOk1LpFXqTg7LCFzFso6PA48q/XZw=\nsigs.k8s.io/controller-runtime v0.19.3 h1:XO2GvC9OPftRst6xWCpTgBZO04S2cbp0Qqkj8bX1sPw=\nsigs.k8s.io/controller-runtime v0.19.3/go.mod h1:j4j87DqtsThvwTv5/Tc5NFRyyF/RF0ip4+62tbTSIUM=\nsigs.k8s.io/gateway-api v1.2.1 h1:fZZ/+RyRb+Y5tGkwxFKuYuSRQHu9dZtbjenblleOLHM=\nsigs.k8s.io/gateway-api v1.2.1/go.mod h1:EpNfEXNjiYfUJypf0eZ0P5iXA9ekSGWaS1WgPaM42X0=\nsigs.k8s.io/json v0.0.0-20241010143419-9aa6b5e7a4b3 h1:/Rv+M11QRah1itp8VhT6HoVx1Ray9eB4DBr+K+/sCJ8=\nsigs.k8s.io/json v0.0.0-20241010143419-9aa6b5e7a4b3/go.mod h1:18nIHnGi6636UCz6m8i4DhaJ65T6EruyzmoQqI2BVDo=\nsigs.k8s.io/kind v0.23.0 h1:8fyDGWbWTeCcCTwA04v4Nfr45KKxbSPH1WO9K+jVrBg=\nsigs.k8s.io/kind v0.23.0/go.mod h1:ZQ1iZuJLh3T+O8fzhdi3VWcFTzsdXtNv2ppsHc8JQ7s=\nsigs.k8s.io/kustomize/api v0.18.0 h1:hTzp67k+3NEVInwz5BHyzc9rGxIauoXferXyjv5lWPo=\nsigs.k8s.io/kustomize/api v0.18.0/go.mod h1:f8isXnX+8b+SGLHQ6yO4JG1rdkZlvhaCf/uZbLVMb0U=\nsigs.k8s.io/kustomize/kyaml v0.18.1 h1:WvBo56Wzw3fjS+7vBjN6TeivvpbW9GmRaWZ9CIVmt4E=\nsigs.k8s.io/kustomize/kyaml v0.18.1/go.mod h1:C3L2BFVU1jgcddNBE1TxuVLgS46TjObMwW5FT9FcjYo=\nsigs.k8s.io/mcs-api v0.1.1-0.20241217092652-fede3192824f h1:nNsLiQPASpDDB5dNq96rmVCvQ3p5B5ChEAsh0Nq0VC0=\nsigs.k8s.io/mcs-api v0.1.1-0.20241217092652-fede3192824f/go.mod h1:x0rgWQwGd3FJzrb94BNn3Nu7YxUwBWcgjVRbkrkVy2A=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.2 h1:MdmvkGuXi/8io6ixD5wud3vOLwc1rj0aNqRlpuvjmwA=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.2/go.mod h1:N8f93tFZh9U6vpxwRArLiikrE5/2tiu1w1AGfACIGE4=\nsigs.k8s.io/yaml v1.4.0 h1:Mk1wCc2gy/F0THH0TAp1QYyJNzRm2KCLy3o5ASXVI5E=\nsigs.k8s.io/yaml v1.4.0/go.mod h1:Ejl7/uTz7PSA4eKMyQCUTnhZYNmLIl+5c2lQPGR2BPY=\n"
        },
        {
          "name": "hack",
          "type": "tree",
          "content": null
        },
        {
          "name": "hubble-relay",
          "type": "tree",
          "content": null
        },
        {
          "name": "hubble",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "install",
          "type": "tree",
          "content": null
        },
        {
          "name": "netlify.toml",
          "type": "blob",
          "size": 0.08984375,
          "content": "[build]\n  base = \"Documentation/\"\n  publish = \"_build/html\"\n  command = \"make html-netlify\"\n"
        },
        {
          "name": "operator",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "stable.txt",
          "type": "blob",
          "size": 0.0078125,
          "content": "v1.16.5\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}