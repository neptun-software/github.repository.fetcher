{
  "metadata": {
    "timestamp": 1736568042695,
    "page": 182,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ardanlabs/gotraining",
      "stars": 11908,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3388671875,
          "content": "gotraining\n\n# Backup files\n*~*\n\n# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n_obj\n_test\n\n# Editor files\n.idea/\n*.iml\n*.swp\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\n//*.test\n.vscode/tasks.json\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 1.05859375,
          "content": "# This file defines the \"canonical\" name and email form for committers\n\n# People with multiple names or missing names.\nAdam Parker <nikaios@gmail.com>\nNick Parker <nikaios@gmail.com>\nBharath Bhushan Sreeravindra <bsreera@gmail.com>\nMark Markaryan <markmark206@gmail.com>\nJanna Brockmeyer <janna_brockmeyer@acl.com>\nRamin Keene <raminkeene@gmail.com>\nScott Skender <sjskender@gmail.com>\n\n# People with multiple emails in our history.\nErnesto Jiménez <me@ernesto-jimenez.com> <erjica@gmail.com>\nDaniela Petruzalek <daniela.petruzalek@gmail.com> <daniela.petruzalek@corp.globo.com>\nRyan Faerman <ryan_faerman@ultimatesoftware.com> <ryan@faerman.net>\nJustyn Temme <justyn@nextwavesolutions.io> <justyntemme@users.noreply.github.com>\n\nWilliam Kennedy <bill@ardanlabs.com> <bill@ardanstudios.com>\nWilliam Kennedy <bill@ardanlabs.com> <bill@ardanlans.com>\nJacob Walker <jacob@ardanlabs.com> <jacob@ardanstudios.com>\nJacob Walker <jacob@ardanlabs.com> <jacobwalker0814@gmail.com>\nEd Gonzalez <ed@ardanlabs.com> <ed@ardanstudios.com>\nJohn Dopazo <john@ardanlabs.com> <john@ardanstudios.com>\n"
        },
        {
          "name": "CONTRIBUTORS",
          "type": "blob",
          "size": 5.8447265625,
          "content": "# This is a list of people have contributed to the gotraining\n# repository. It is maintained on a best-effort basis. If you\n# have made a contribution but do not appear on this list\n# please open a pull request.\n\n# Names should be added to this file like so:\n#     Name <email address>\n\n# Please keep the list sorted.\n\nAaron Greenlee <agreenlee@powerchordsystem.com>\nAdam <advincze@gmail.com>\nAdam Lieskovský <adamliesko@gmail.com>\nAdam Scharf <scharfat@gmail.com>\nAl Thompson <alm4x1mu5@gmail.com>\nAlan Scherger <alan.scherger@gmail.com>\nAlexey Kupershtokh <alexey.kupershtokh@gmail.com>\nAlexey Palazhchenko <alexey.palazhchenko@gmail.com>\nAman Kapoor <aman.sk95@gmail.com>\nAndrew Cole <aocole@oui.st>\nAndy Williams <>\nAnnalise Haynes <annalise@adorable.io>\nAudrey Eschright <spinnerin@gmail.com>\nAuke Kok <sofar+github@foo-projects.org>\nAustin J. Alexander <austinjalexander@gmail.com>\nAlex Sun <sunhuayangak47@gmail.com>\nBarbara Miller <galgeek@users.noreply.github.com>\nBharath Bhushan Sreeravindra <bsreera@gmail.com>\nBill Hathaway <bill.hathaway@gmail.com>\nBudh Ram Gurung <budhrg@users.noreply.github.com>\nBurhanettin Nacar <mtbnacar@gmail.com>\nCarlos Marin <ing.cma@gmail.com>\nCarmen Andoh <carmen.andoh@gmail.com>\nCarol St.Louis <stlouis_c@yahoo.com>\nChetan Conikee <chetan@cloudphysics.com>\nChris Ballance <ballance@gmail.com>\nClaudson Oliveira <claudsonweb@gmail.com>\nColin Edwards <colin@recursivepenguin.com>\nCory LaNou <cory@lanou.com>\ncreativisionist <creativisionist@gmail.com>\nDallas Despain <dallas.despain@gmail.com>\nDamian Gryski <damian@gryski.com>\nDan <DanHam@users.noreply.github.com>\nDan Rowe <draco2003@gmail.com>\nDaniel Metz <danielmmetz@users.noreply.github.com>\nDaniel Whitenack <whitenack.daniel@gmail.com>\nDaniela Petruzalek <daniela.petruzalek@gmail.com>\nDavor Kapsa <davor.kapsa@gmail.com>\nDFenniak <donald@getjobber.com>\nDiwant Vaidya <diwant@gmail.com>\nDmitry Egorov <egorovdmi@gmail.com>\nDmytro Tananayskiy <dmitriyminer@gmail.com>\ndtlaycock <dtlaycock@users.noreply.github.com>\nEd Gonzalez <ed@ardanlabs.com>\nelfgoh <elfgoh@yahoo.com>\nEmily Gu <77.ears@gmail.com>\nEric Dunham <eric.dunham@rackspace.com>\nEric Ernst <eric.ernst@intel.com>\nErnesto Jiménez <me@ernesto-jimenez.com>\nfonglh <fonglh@users.noreply.github.com>\nforevermatt <forevermatt@users.noreply.github.com>\nfREW Schmidt <github@frew.co>\nGe \"David\" Feng <david.feng.ge@gmail.com>\nGeorgia <Greh@users.noreply.github.com>\nginabythebay <ginabythebay@users.noreply.github.com>\ngingersnapz <falycia1@gmail.com>\nHans-Jurgen Jacobs <hjj@hjj-macbookpro-2015.local>\nHarrison Brock <harrison@harrisonbrock.com>\nIan Molee <ian@tune.com>\nJack <dj.jack90@gmail.com>\nJackie Kazil <jackiekazil@users.noreply.github.com>\nJacob Walker <jacob@ardanlabs.com>\nJames Brown <j@mesbrown.com>\nJames Huston <jhuston@redventures.com>\nJanna Brockmeyer <janna_brockmeyer@acl.com>\nJason Zhu <jason.zhuyx@gmail.com>\nJeremy Saenz <jeremy.saenz@gmail.com>\nJoey Geiger <jgeiger@users.noreply.github.com>\nJohn Adams <johnadams@jqatampa.com>\nJohn Dopazo <john@ardanlabs.com>\nJohn Gosset <john.gosset@gmail.com>\nJonas Wouters <jonas@jw.be>\nJoseph Cheng <joseph.cheng@salesforce.com>\nJoseph Howard <6590854+orionthewake@users.noreply.github.com>\nJustin Zimmerman <zimmy130@gmail.com>\nJustyn Temme <justyn@nextwavesolutions.io>\nKashyap <kashyap.kmbc@gmail.com>\nKevin Gillette <extemporalgenome@gmail.com>\nKevin Marquardsen <mr.kmarq@gmail.com>\nKhoa Nguyen <khoa.nguyen@nordstrom.com>\nKyle Banks <banksky1@gmail.com>\nKyle Kelley <rgbkrk@gmail.com>\nLandon Jones <lbj@landonjones.com>\nLee Gaines <lgaines@ceresimaging.net>\nLevi Corcoran <allgeek@gmail.com>\nLuke Kysow <lkysow@gmail.com>\nMark Bates <mark@markbates.com>\nMark Markaryan <markmark206@gmail.com>\nMark van Holsteijn <mvanholsteijn@xebia.com>\nMarkus Braasch <markus.braasch@gmail.com>\nMartin Czygan <53705+miku@users.noreply.github.com>\nMatthew Sanabria <24284972+sudomateo@users.noreply.github.com>\nMatthias Stone <matthias@clockworkendeavors.com>\nMaxwell Dayvson da Silva <dayvson@gmail.com>\nMichelle Tilley <binarymuse@github.com>\nMike Nakhimovich <digitalbuddha@users.noreply.github.com>\nMiki Tebeka <miki.tebeka@gmail.com>\nMilad Poshtdari <mposhtdari@gmail.com>\nNathan Youngman <git@nathany.com>\nNicholas Duffy <duffn@outlook.com>\nNick Parker <nikaios@gmail.com>\nNiel McLaren <dan@danielmclaren.com>\nOppodelldog <odog@netcologne.de>\nPatrick D'appollonio <patrickdappollonio@users.noreply.github.com>\nPayam Moghaddam <pmoghaddam@gmail.com>\nPinglei Guo <at15@outlook.com>\npokemium <bluejapan73+dev@gmail.com>\nRadosław Kapka <rkapka@wp.pl>\nRamin Keene <raminkeene@gmail.com>\nRao Li <lirao@users.noreply.github.com>\nRaviTeja Pothana <ravi-teja@live.com>\nRobert Anthony Bellamy <rabellamy@gmail.com>\nRoberto Nygaard <topikito@gmail.com>\nRyan Faerman <ryan_faerman@ultimatesoftware.com>\nSaddam H <thedevsaddam@gmail.com>\nSasha Melentyev <sasha@melentyev.io>\nScott Feinberg <feinberg.scott@gmail.com>\nScott Skender <sjskender@gmail.com>\nSean Lavine <lavis88@gmail.com>\nSebastiaan van Steenis <mail@superseb.nl>\nSebastian Borza <sebito91@gmail.com>\nSebastien Binet <binet@cern.ch>\nSimon van der Veldt <simon.vanderveldt@gmail.com>\nStanislav Afanasev <superstas@users.noreply.github.com>\nSteve Azzopardi <steveazz@outlook.com>\nSteve Phillips <steve@tryingtobeawesome.com>\nSteven Burgart <Steven_Burgart@ultimatesoftware.com>\nT3[rm]1T <roman.shuhov@gmail.com>\nThomas Hopkins <hopkinsth@gmail.com>\nTim Heaney <oylenshpeegul@gmail.com>\nTim Heckman <t@heckman.io>\nTim Pepper <timothy.c.pepper@linux.intel.com>\nTodd McLeod <tuddleymc@gmail.com>\nTodd Rafferty <webRat@gmail.com>\nTravis Yoder <trayoda@gmail.com>\nTyler Bunnell <tylerb@users.noreply.github.com>\nVasko Zdravevski <vaskoz@users.noreply.github.com>\nWerner Buck <wernerbuck@gmail.com>\nWes Freeman <wes@skeweredrook.com>\nWilliam Hanisch <hanisch@mac.com>\nWilliam Kennedy <bill@ardanlabs.com>\nZac Baston <zacscodingclub@users.noreply.github.com>\nZasda Yusuf Mikail <zasdaym@gmail.com>\nDaniil Maslov <i@dmaslov.dev>"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.17578125,
          "content": "FROM golang:1.11-alpine3.8\nRUN apk add --update --no-cache \\\n           graphviz \\\n           ttf-freefont\nWORKDIR /go/src/github.com/ardanlabs/gotraining\nENTRYPOINT [ \"/bin/sh\" ]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.5400390625,
          "content": "Copyright 2014 Ardan Studios\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License."
        },
        {
          "name": "Opening.md",
          "type": "blob",
          "size": 1.205078125,
          "content": "## Info  \nName:     William Kennedy (Bill)  bill@ardanlabs.com  \nTwitter:  @goinggodotnet #golang  \nCompany:  [ArdanLabs](https://www.ardanlabs.com)  \nBlog:     [GoingGo.net](https://www.ardanlabs.com/blog)  \nBook:     [Ultimate Go Notebook](https://education.ardanlabs.com/courses/ultimate-go-notebook)  \nTraining: [Go](http://github.com/ardanlabs/gotraining)  \n          [Service](http://github.com/ardanlabs/service)  \nSlack:    [Slack](https://invite.slack.golangbridge.org) \nRepl:     [Playground](https://repl.it/languages/go)\nChannel:  #ultimatego \n\n## Quote  \nPrototype Driven Development with Data Oriented Design\n\n\"Data dominates. If you've chosen the right data structures and organized things well, the algorithms will almost always be self-evident. Data structures, not algorithms, are central to programming.\" - Rob Pike\n\n## Extra Links  \n[Installing](https://www.ardanlabs.com/blog/2016/05/installing-go-and-your-workspace.html)  \n[Video](http://education.ardanlabs.com)  \n[Design Philosophy](https://github.com/ardanlabs/gotraining/tree/master/topics/go#design-guidelines)\n\n## Tooling Installs\nGraphviz: https://www.graphviz.org/  \ngo get -u github.com/rakyll/hey   : Or use ab, netcat  \nLatest Version of Go: 1.19  \n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 19.3291015625,
          "content": "## Go Training\n\n[![CircleCI](https://circleci.com/gh/ardanlabs/gotraining.svg?style=svg)](https://circleci.com/gh/ardanlabs/gotraining)\n\n[Review our different courses and material](topics/README.md)  \n\nCopyright 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, Ardan Labs  \nhello@ardanlabs.com\n\n## Learn More\n\n**Reach out about corporate training events, open enrollment live training sessions, and on-demand learning options.**\n\nArdan Labs (www.ardanlabs.com)  \nhello@ardanlabs.com\n\nTo attend any of our high-performance tranings check out this link:  \nhttps://www.ardanlabs.com/training  \n\n## Index\n\n* [Purchase Video](https://github.com/ardanlabs/gotraining#purchase-video--book)\n* [Experience](https://github.com/ardanlabs/gotraining#our-experience)\n* [Teachers](https://github.com/ardanlabs/gotraining#our-teachers)\n* [More About Go](https://github.com/ardanlabs/gotraining#more-about-go)\n* [Minimal Qualified Student](https://github.com/ardanlabs/gotraining#minimal-qualified-student)\n* [Important Reading](https://github.com/ardanlabs/gotraining#important-reading)\n* [Before You Come To Class](https://github.com/ardanlabs/gotraining#before-you-come-to-class)\n* [Twitter Reactions](https://github.com/ardanlabs/gotraining#twitter)\n* [Testimonials](https://github.com/ardanlabs/gotraining#testimonials)\n\n## Purchase Video / Book\n\nThe entire training class has been recorded to be made available to those who can't have the class taught at their company or who can't attend a conference. This is the entire class material.\n\n[education.ardanlabs.com](https://education.ardanlabs.com)  \n\nThere is a book for all of the material in the class.\n\n[Ultimate Go Notebook](https://education.ardanlabs.com/courses/ultimate-go-notebook)  \n\n## Our Experience\n\nWe have taught Go to thousands of developers all around the world since 2014. There is no other company that has been doing it longer and our material has proven to help jump-start developers 6 to 12 months ahead of their knowledge of Go. We know what knowledge developers need in order to be productive and efficient when writing software in Go.\n\nOur classes are perfect for intermediate-level developers who have at least a few months to years of experience writing code in Go. Our classes provide a very deep knowledge of the programming language with a big push on language mechanics, design philosophies and guidelines. We focus on teaching how to write code with a priority on consistency, integrity, readability and simplicity. We cover a lot about “if performance matters” with a focus on mechanical sympathy, data oriented design, decoupling and writing/debugging production software.\n\n## Our Teachers\n\n### William Kennedy ([@goinggodotnet](https://twitter.com/goinggodotnet))  \n_William Kennedy is a managing partner at Ardan Labs in Miami, Florida. Ardan Labs is a high-performance development and training firm working with startups and fortune 500 companies. He is also a co-author of the book Go in Action, the author of the blog GoingGo.Net, and a founding member of GoBridge which is working to increase Go adoption through diversity._\n\n_**Video Training**_  \n[Ultimate Go Video](https://education.ardanlabs.com)  \n[Ardan Labs YouTube Channel](http://youtube.ardanlabs.com/)\n\n_**Blog**_  \n[Going Go](https://www.ardanlabs.com/blog/)    \n\n_**Writing**_  \n[Running MongoDB Queries Concurrently With Go](http://blog.mongodb.org/post/80579086742/running-mongodb-queries-concurrently-with-go)    \n[Go In Action](https://www.manning.com/books/go-in-action)  \n\n_**Articles**_  \n[IT World Canada](http://www.itworldcanada.com/article/nascent-google-development-language-shows-promise-for-more-productive-coding/387449)\n\n_**Video**_  \n[Golang Charlotte (2024) - Domain Driven, Data Oriented Architecture](https://www.youtube.com/watch?v=bQgNYK1Z5ho)  \n[GopherCon SG (2023) - K8s CPU Limits and Go](https://www.youtube.com/watch?v=Dm7yuoYTx54&list=PLq2Nv-Sh8Eba2gEaId35K2aAUFdpbKx9D&index=6)  \n[P99 Talk (2022) - Evaluating Performance In Go](https://www.youtube.com/watch?v=PYMs-urosXs)  \n[GopherCon Europe (2022) - Practical Memory Profiling](https://www.youtube.com/watch?v=6qAfkJGWsns)  \n[Dgrpah Day (2021) - Getting Started With Dgraph and GraphQL](https://www.youtube.com/watch?v=5L4PUbDqSEo)  \n[GDN Event #1 (2021) - GoBridge Needs Your Help](https://www.youtube.com/watch?v=Tst0oI97cvQ&t=2s)  \n[Training Within The Go Community (2019)](https://www.youtube.com/watch?v=PSR1twjzzAM&feature=youtu.be)  \n[GopherCon Australia (2019) - Modules](https://www.youtube.com/watch?v=MVxbVR_6Tac)  \n[Golab (2019) - You Want To Build a Web Service?](https://www.youtube.com/watch?v=IV0wrVb31Pg)  \n[GopherCon Singapore (2019) - Garbage Collection Semantics](https://www.youtube.com/watch?v=q4HoWwdZUHs)  \n[GopherCon India (2019) - Channel Semantics](https://www.youtube.com/watch?v=AHAf1Xfr_HE)  \n[GoWayFest Minsk (2018) - Profiling Web Apps](https://www.youtube.com/watch?v=-GBMFPegqgw)  \n[GopherCon Singapore (2018) - Optimizing For Correctness](https://engineers.sg/video/optimize-for-correctness-gopherconsg-2018--2610)  \n[GopherCon India (2018) - What is the Legacy You Are Leaving Behind](https://www.youtube.com/watch?v=j3zCUc06OXo&t=0s&index=11&list=PLhJxE57Cki63cElK2kmt3_vi8j2eIHTqZ)  \n[Code::Dive (2017) - Optimizing For Correctness](https://www.youtube.com/watch?v=OTLjN8NQDyo)  \n[Code::Dive (2017) - Go: Concurrency Design](https://www.youtube.com/watch?v=OrctYMf4btA)  \n[dotGo (2017) - Behavior Of Channels](https://www.youtube.com/watch?v=zDCKZn4-dck)  \n[GopherCon Singapore (2017) - Escape Analysis](https://engineers.sg/video/escape-analysis-and-memory-profiling-gophercon-sg-2017--1746)  \n[Capital Go (2017) - Concurrency Design](https://www.youtube.com/watch?v=yGOOUCrrgrE&index=10&list=PLeGxIOPLk9EKdl-h_Y-sbLhLoP-ia7CJ5)  \n[GopherCon India (2017) - Package Oriented Design](https://www.youtube.com/watch?v=spKM5CyBwJA#t=0m56s)  \n[GopherCon India (2015) - Go In Action](https://www.youtube.com/watch?v=QkPw8-Pf0SM)  \n[GolangUK (2016) - Dependency Management](https://youtu.be/CdhucJShJU8)  \n[GothamGo (2015) - Error Handling in Go](https://vimeo.com/115782573)  \n[GopherCon (2014) - Building an analytics engine](https://www.youtube.com/watch?v=EfJRQ1lGkUk)  \n\n[Golang Charlotte (2023) - Domain Driven, Data Oriented Architecture with Bill Kennedy](https://www.youtube.com/watch?v=bQgNYK1Z5ho)  \n[Prague Meetup (2021) - Go Module Engineering Decisions](https://youtu.be/m8lgcXv2lhI)  \n[Practical Understanding Of Scheduler Semantics (2021)](https://www.youtube.com/watch?v=p2Cjq3Dq2Q0)  \n[Go Generics Draft Proposal (2020)](https://www.youtube.com/watch?v=gIEPspmbMHM&t=2069s)  \n[Hack Potsdam (2017) - Tech Talk with William Kennedy](https://www.youtube.com/watch?v=sBzJ-sjhgs8)  \n[Chicago Meetup (2016) - An Evening](https://vimeo.com/199832344)  \n[Vancouver Meetup (2016) - Go Talk & Ask Me Anything With William Kennedy](https://www.youtube.com/watch?v=7YcLIbG1ekM&t=91s)  \n[Vancouver Meetup (2015) - Compiler Optimizations in Go](https://www.youtube.com/watch?v=AQipeq39Aek)  \n[Bangalore Meetup (2015) - OOP in Go](https://youtu.be/gRpUfjTwSOo)  \n[GoSF Meetup - The Nature of Constants in Go](https://www.youtube.com/watch?v=ZUCHMAoOgUQ)    \n[London Meetup - Mechanical Sympathy](https://skillsmatter.com/skillscasts/8353-london-go-usergroup)    \n[Vancouver Meetup - Decoupling From Change](https://www.youtube.com/watch?v=7YcLIbG1ekM&feature=youtu.be)  \n\n_**Podcasts**_  \n[Ardan Labs Podcast: On Going Series](https://ardanlabs.buzzsprout.com/)  \n[Mangtas Nation: A Golang Deep Dive with Bill Kennedy](https://anchor.fm/mangtasnation/episodes/A-Golang-Deep-Dive-with-Bill-Kennedy--S2-EP3-e1ij9c3)  \n[Coding with Holger: Go with Bill Kennedy](https://anchor.fm/coding-with-holger/episodes/Go-with-Bill-Kennedy-e1c9h2q)  \n[Craft of Code: From Programming to Teaching Code with Bill Kennedy](https://podcasts.apple.com/us/podcast/from-programming-to-teaching-code-with-bill-kennedy/id1537136353?i=1000545230339)  \n[GoTime: Design Philosophy](https://changelog.com/gotime/172)  \n[GoTime: Learning and Teaching Go](https://changelog.com/gotime/72)  \n[GoTime: Bill Kennedy on Mechanical Sympathy](https://changelog.com/gotime/6)  \n[GoTime: Discussing Imposter Syndrome](https://changelog.com/gotime/30)  \n[HelloTechPros: Your Tech Interviews are Scaring Away Brilliant People](http://hellotechpros.com/william-kennedy-people)    \n[HelloTechPros: The 4 Cornerstones of Writing Software](http://hellotechpros.com/bill-kennedy-productivity)  \n\n## More About Go\n\nGo is an open source programming language that makes it easy to build simple, reliable, and efficient software. Although it borrows ideas from existing languages, it has a unique and simple nature that make Go programs different in character from programs written in other languages. It balances the capabilities of a low-level systems language with some high-level features you see in modern languages today. This creates a programming environment that allows you to be incredibly productive, performant and fully in control; in Go, you can write less code and do so much more.\n\nGo is the fusion of performance and productivity wrapped in a language that software developers can learn, use and understand. Go is not C, yet we have many of the benefits of C with the benefits of higher level programming languages.\n\n[The Ecosystem of the Go Programming Language](https://henvic.dev/posts/go/) - Henrique Vicente  \n[The Why of Go](https://www.infoq.com/presentations/go-concurrency-gc) - Carmen Andoh  \n[Go Ten Years and Climbing](https://commandcenter.blogspot.com/2017/09/go-ten-years-and-climbing.html) - Rob Pike  \n[The eigenvector of \"Why we moved from language X to language Y\"](https://erikbern.com/2017/03/15/the-eigenvector-of-why-we-moved-from-language-x-to-language-y.html) - Erik Bernhardsson  \n[Learn More](https://talks.golang.org/2012/splash.article) - Go Team  \n[Simplicity is Complicated](https://www.youtube.com/watch?v=rFejpH_tAHM) - Rob Pike  \n[Getting Started In Go](http://aarti.github.io/2016/08/13/getting-started-in-go) - Aarti Parikh  \n\n## Minimal Qualified Student\n\nThe material has been designed to be taught in a classroom environment. The code is well commented but missing some of the contextual concepts and ideas that will be covered in class. Students with the following minimal background will get the most out of the class.\n\n* Studied CS in school or has a minimum of two years of experience programming full time professionally.\n* Familiar with structural and object oriented programming styles.\n* Has worked with arrays, lists, queues and stacks.\n* Understands processes, threads and synchronization at a high level.\n* Operating Systems\n\t* Has worked with a command shell.\n\t* Knows how to maneuver around the file system.\n\t* Understands what environment variables are.\n\n## Important Reading\n\nPlease check out this page of [important reading](reading/README.md). You will find articles and videos around mechanical sympathy, data-oriented design, Go runtime and optimizations and articles about the history of computing.\n\n## Before You Come To Class\n\nThe following is a set of tasks that can be done prior to showing up for class.  We will also do this in class if anyone has not completed it.  However, the more attendees that complete this ahead of time the more time we have to cover additional training material.\n\n### Prep Work\n\n**Watch This**  \n[Prepare You Mind](https://www.youtube.com/watch?v=xzK0hYKHzC4)\n\n**Reading Material**  \nhttp://go.dev/   \nhttps://www.ardanlabs.com/blog/\n\n**Exercises**  \nhttps://tour.golang.org/welcome/1  \nhttps://gophercises.com/\n\n**Books**  \nhttps://www.manning.com/books/go-in-action  \nhttps://bitfieldconsulting.com/books/fundamentals  \n\n### Joining the Go Slack Community\n\nWe use a slack channel to share links, code, and examples during the training.  This is free.  This is also the same slack community you will use after training to ask for help and interact with may Go experts around the world in the community.\n\n* Using the following link, fill out your name and email address: https://invite.slack.gobridge.org/\n* Check your email, and follow the link to the slack application.\n\n### Installing Go\n\n#### Local Installation\n\nhttps://www.ardanlabs.com/blog/2016/05/installing-go-and-your-workspace.html\n\n### Editors\n\n**Visual Studio Code**  \nhttps://code.visualstudio.com/Updates  \nhttps://github.com/microsoft/vscode-go\n\n**VIM**  \nhttp://www.vim.org/download.php  \nhttp://farazdagi.com/blog/2015/vim-as-golang-ide/\n\n**Goland**  \nhttps://www.jetbrains.com/go/\n\n### Installing the Training Material\n\nWhile many of the examples can be done using the online playground (http://play.golang.org), some may find it easier to complete them with their local editor.  To do so, you will want to load the training material locally to your machine.  From a command prompt, issue the following commands:\n\n```sh\nmkdir -p $(go env GOPATH)/src/github.com/ardanlabs && cd $_\ngit clone https://github.com/ardanlabs/gotraining.git\n```\n\n*NOTE:* This assumes you have Git installed.  If you don’t, you can find the installation instructions here: https://git-scm.com/\n\n## Twitter\n\nJessie Frazelle ([@frazelledazzell](https://twitter.com/frazelledazzell/status/711355859066990592))  \n_\"@goinggodotnet you were amazing!!! So enthusiastic!!! Thanks for doing this for everyone!\"_\n\nKelsey Hightower ([‏@kelseyhightower](https://twitter.com/kelseyhightower/status/673359937909592064))  \n_\"Day 1 of the [Ultimate] Go workshop was outstanding! Big shoutout to @intel, @golangbridge, and @goinggodotnet for bringing this to Portland.\"_\n\nKatrina Owen ([@kytrinyx](https://twitter.com/kytrinyx/status/673360428278222848))  \n_\"OH: \"You thought you knew Go...\" (You do Go? You want to do Go?) You should take this workshop. Seriously.) \"_\n\nIan Molee ([@ianfoo](https://twitter.com/ianfoo/status/752246569554964480))\n_\"If you're at @GopherCon, get yourself to a session with @goinggodotnet. Superb! Pretty sure his pic appears with the definition of \"dynamo.\"\"_\n\nMatt Oswalt ([@Mierdin](https://twitter.com/mierdin/status/673570058392616961))  \n_\"Should be mentioned that though I am no expert, I have been using Go for about a year - and this meetup is kicking my ass.\"_\n\n## Testimonials\n\nPaul Yeoh  \n_\"Today’s workshop was just mind blowing! You kept us all on the edge all day long - it was the most exhilarating all day workshop I have attended, period. The content was inspiring, moving - caused me to think deeply and gave me a lot of meat to chew on about what it is we are really doing as programmers, what an awesome day!\n\nAnd most of all, I just got such a kick out of the energy which you were putting out - larger than life, it felt like you were turned up to 200%. I really took a lot from it at many levels. Thank you!!\"_\n\nAna-Maria Lazar, Software Engineer at Sainsbury's  \n_\"Intensive crash course in Go that literally takes you to a whole new level. Not only Bill provides lots of examples and exercises to familiarize yourself faster with the language but there is also a lot of  information that can be applied to other languages as well. Perfect combination!\"_\n\nSusan Dady, Software Engineer - GE Digital  \n_\"Rarely will you come across a course as worthwhile as this one. I learned many things relevant and useful in my daily work and William's energy kept me engaged. I came back to work excited to get coding in Go.\"_\n\nRichard Stanley, Software Engineer - GE Digital  \n_\"Not only does Bill deeply understands the technical details of Go, he also can explain them in an effective, enthusiastic manner that helped me retain somewhat dry material.  His passion for the language and its capabilities are obvious through out his training.\"_\n\nShalab Goel, Ph.D.  \n_\"It was a pleasure taking this course — learning lot of \"dry\" stuff in such animated and enthusiastic environment. The exercises were spot on for building what you called as \"memory muscle. I have good amount of background in conventional multithreaded and distributed environments, but I have not put that knowledge to use more recently; so it was good refresher from that point of view as well. From Yuck to completely Wow-ed is how I will like to describe my respect for Go within three days. I knew nothing about GO before the course.\"_\n\nGeoff Clitheroe ([@gclitheroe](https://twitter.com/gclitheroe))  \n_\"Your training is awesome! Myself and three colleagues recently caught variations of the training at GopherCon and OSCON. We all thought the Bootcamp was the best thing at any of these conferences (and I went to both). Awesome work to Bill for presenting and anyone involved in developing the training. I really liked the structure, emphasis on deeper understanding, me doing a small number of examples to emphasize this, and general content. Night and day to other training which is to often just watching someone else live code. Great work.\"_\n\nACL Services ([@ACLServices](https://twitter.com/ACLServices))  \n_\"I'd just like to thank you again for just a phenomenal training session. The feedback from everyone was overwhelmingly positive. You probably could tell first hand that there were skeptics at first, but you've turned many into golang converts and we are really excited in growing golang adoption internally.\"_\n\nJoshua Shuster ([@naysaier](https://twitter.com/naysaier))  \n_\"I would consider Ardan Studio's 3 day course to be invaluable. Bill and his staff, being some of the foremost authorities in the Go language, were able to make many of the complex go topics understandable. Covering everything from memory management, all the way up to building concurrency programs and web API's. It has given me the knowledge to write idiomatic Go, and make the best use of its features. I would highly their courses to anyone new to Go, or to anyone wanting to widen their existing knowledge.\"_\n\nNeeru Dwivedi  \n_\"I attended the one day workshop by Bill Kennedy from Ardan Labs. I was in for a surprise as before the workshop I was concerned whether I would understand concepts and whether I would be able to follow along. Bill has this wonderful way of explaining concepts and his knowledge on the concepts is so good that, I didn't feel that I was learning something new & complicated. The Go Workshop got me started on the Go language. This workshop is perfect for beginners and anyone who wants to learn more about Go. I highly recommend this.\"_\n\nTodd Rafferty ([@webrat](https://twitter.com/webrat))  \n_\"I highly recommend William Kennedy / Ardan Lab for Go Training. William is extremely passionate about the Go language and his energy feeds into his training. Very professional, very informative. My favorite section of his training, if I had to pick, was the segment on MultiWriters. I highly recommend a 3 day course, over a 2 day course. Even after the classes were over, William was always responsive with additional questions via various social media channels.\"_\n\nGeorgi Knox ([@GeorgiCodes](https://twitter.com/georgicodes))  \n_\"The Intro to Go Workshop enabled me to come into class with very little knowledge of Go and leave having a firm grasp of the key concepts of the language. Each topic was followed up with hands-on coding problems which helped to solidify what I was learning. My teacher Bill was not only approachable, but very excited about the language and his enthusiasm was contagious. I enjoyed that we talked about some of the lower level implementation details of Go which was something that I had found lacking from some books on the language. Overall I would highly recommend this workshop to anyone looking to learn Go quickly and effectively.\"_\n\n___\nAll material is licensed under the [Apache License Version 2.0, January 2004](http://www.apache.org/licenses/LICENSE-2.0).\n"
        },
        {
          "name": "env",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.037109375,
          "content": "module github.com/ardanlabs/gotraining\n\ngo 1.21\n\nrequire (\n\tgithub.com/braintree/manners v0.0.0-20160418043613-82a8879fc5fd\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/patrickmn/go-cache v2.1.0+incompatible\n\tgithub.com/pborman/uuid v1.2.1\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/stretchr/testify v1.8.4\n\tgolang.org/x/exp v0.0.0-20240613232115-7f521ea00fb8\n\tgolang.org/x/text v0.16.0\n\tgolang.org/x/time v0.5.0\n\tgonum.org/v1/plot v0.14.0\n)\n\nrequire (\n\tgit.sr.ht/~sbinet/gg v0.5.0 // indirect\n\tgithub.com/ajstarks/svgo v0.0.0-20211024235047-1546f124cd8b // indirect\n\tgithub.com/campoy/embedmd v1.0.0 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/go-fonts/liberation v0.3.2 // indirect\n\tgithub.com/go-latex/latex v0.0.0-20231108140139-5c1ce85aa4ea // indirect\n\tgithub.com/go-pdf/fpdf v0.9.0 // indirect\n\tgithub.com/golang/freetype v0.0.0-20170609003504-e2365dfdc4a0 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgolang.org/x/image v0.18.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 7.6123046875,
          "content": "git.sr.ht/~sbinet/cmpimg v0.1.0 h1:E0zPRk2muWuCqSKSVZIWsgtU9pjsw3eKHi8VmQeScxo=\ngit.sr.ht/~sbinet/cmpimg v0.1.0/go.mod h1:FU12psLbF4TfNXkKH2ZZQ29crIqoiqTZmeQ7dkp/pxE=\ngit.sr.ht/~sbinet/gg v0.5.0 h1:6V43j30HM623V329xA9Ntq+WJrMjDxRjuAB1LFWF5m8=\ngit.sr.ht/~sbinet/gg v0.5.0/go.mod h1:G2C0eRESqlKhS7ErsNey6HHrqU1PwsnCQlekFi9Q2Oo=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/ajstarks/deck v0.0.0-20200831202436-30c9fc6549a9/go.mod h1:JynElWSGnm/4RlzPXRlREEwqTHAN3T56Bv2ITsFT3gY=\ngithub.com/ajstarks/deck/generate v0.0.0-20210309230005-c3f852c02e19/go.mod h1:T13YZdzov6OU0A1+RfKZiZN9ca6VeKdBdyDV+BY97Tk=\ngithub.com/ajstarks/svgo v0.0.0-20211024235047-1546f124cd8b h1:slYM766cy2nI3BwyRiyQj/Ud48djTMtMebDqepE95rw=\ngithub.com/ajstarks/svgo v0.0.0-20211024235047-1546f124cd8b/go.mod h1:1KcenG0jGWcpt8ov532z81sp/kMMUG485J2InIOyADM=\ngithub.com/braintree/manners v0.0.0-20160418043613-82a8879fc5fd h1:ePesaBzdTmoMQjwqRCLP2jY+jjWMBpwws/LEQdt1fMM=\ngithub.com/braintree/manners v0.0.0-20160418043613-82a8879fc5fd/go.mod h1:TNehV1AhBwtT7Bd+rh8G6MoGDbBLNs/sKdk3nvr4Yzg=\ngithub.com/campoy/embedmd v1.0.0 h1:V4kI2qTJJLf4J29RzI/MAt2c3Bl4dQSYPuflzwFH2hY=\ngithub.com/campoy/embedmd v1.0.0/go.mod h1:oxyr9RCiSXg0M3VJ3ks0UGfp98BpSSGr0kpiX3MzVl8=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/go-fonts/dejavu v0.3.2 h1:3XlHi0JBYX+Cp8n98c6qSoHrxPa4AUKDMKdrh/0sUdk=\ngithub.com/go-fonts/dejavu v0.3.2/go.mod h1:m+TzKY7ZEl09/a17t1593E4VYW8L1VaBXHzFZOIjGEY=\ngithub.com/go-fonts/latin-modern v0.3.2 h1:M+Sq24Dp0ZRPf3TctPnG1MZxRblqyWC/cRUL9WmdaFc=\ngithub.com/go-fonts/latin-modern v0.3.2/go.mod h1:9odJt4NbRrbdj4UAMuLVd4zEukf6aAEKnDaQga0whqQ=\ngithub.com/go-fonts/liberation v0.3.2 h1:XuwG0vGHFBPRRI8Qwbi5tIvR3cku9LUfZGq/Ar16wlQ=\ngithub.com/go-fonts/liberation v0.3.2/go.mod h1:N0QsDLVUQPy3UYg9XAc3Uh3UDMp2Z7M1o4+X98dXkmI=\ngithub.com/go-latex/latex v0.0.0-20231108140139-5c1ce85aa4ea h1:DfZQkvEbdmOe+JK2TMtBM+0I9GSdzE2y/L1/AmD8xKc=\ngithub.com/go-latex/latex v0.0.0-20231108140139-5c1ce85aa4ea/go.mod h1:Y7Vld91/HRbTBm7JwoI7HejdDB0u+e9AUBO9MB7yuZk=\ngithub.com/go-pdf/fpdf v0.9.0 h1:PPvSaUuo1iMi9KkaAn90NuKi+P4gwMedWPHhj8YlJQw=\ngithub.com/go-pdf/fpdf v0.9.0/go.mod h1:oO8N111TkmKb9D7VvWGLvLJlaZUQVPM+6V42pp3iV4Y=\ngithub.com/golang/freetype v0.0.0-20170609003504-e2365dfdc4a0 h1:DACJavvAHhabrF08vX0COfcOBJRhZ8lUbR+ZWIs0Y5g=\ngithub.com/golang/freetype v0.0.0-20170609003504-e2365dfdc4a0/go.mod h1:E/TSTwGwJL78qG/PmXZO1EjYhfJinVAhrmmHX6Z8B9k=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/uuid v1.0.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/patrickmn/go-cache v2.1.0+incompatible h1:HRMgzkcYKYpi3C8ajMPV8OFXaaRUnok+kx1WdO15EQc=\ngithub.com/patrickmn/go-cache v2.1.0+incompatible/go.mod h1:3Qf8kWWT7OJRJbdiICTKqZju1ZixQ/KpMGzzAfe6+WQ=\ngithub.com/pborman/uuid v1.2.1 h1:+ZZIw58t/ozdjRaXh/3awHfmWRbzYxJoAdNJxe/3pvw=\ngithub.com/pborman/uuid v1.2.1/go.mod h1:X/NO0urCmaxf9VXbdlT7C2Yzkj2IKimNn4k+gtPdI/k=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/exp v0.0.0-20240613232115-7f521ea00fb8 h1:yixxcjnhBmY0nkL253HFVIm0JsFHwrHdT3Yh6szTnfY=\ngolang.org/x/exp v0.0.0-20240613232115-7f521ea00fb8/go.mod h1:jj3sYF3dwk5D+ghuXyeI3r5MFf+NT2An6/9dOA95KSI=\ngolang.org/x/image v0.18.0 h1:jGzIakQa/ZXI1I0Fxvaa9W7yP25TqT6cHIHn+6CqvSQ=\ngolang.org/x/image v0.18.0/go.mod h1:4yyo5vMFQjVjUcVk4jEQcU9MGy/rulF5WvUILseCM2E=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.16.0 h1:a94ExnEXNtEwYLGJSIUxnWoxoRz/ZcCsV63ROupILh4=\ngolang.org/x/text v0.16.0/go.mod h1:GhwF1Be+LQoKShO3cGOHzqOgRrGaYc9AvblQOmPVHnI=\ngolang.org/x/time v0.5.0 h1:o7cqy6amK/52YcAKIPlM3a+Fpj35zvRj2TP+e1xFSfk=\ngolang.org/x/time v0.5.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngonum.org/v1/gonum v0.14.0 h1:2NiG67LD1tEH0D7kM+ps2V+fXmsAnpUeec7n8tcr4S0=\ngonum.org/v1/gonum v0.14.0/go.mod h1:AoWeoz0becf9QMWtE8iWXNXc27fK4fNeHNf/oMejGfU=\ngonum.org/v1/plot v0.14.0 h1:+LBDVFYwFe4LHhdP8coW6296MBEY4nQ+Y4vuUpJopcE=\ngonum.org/v1/plot v0.14.0/go.mod h1:MLdR9424SJed+5VqC6MsouEpig9pZX2VZ57H9ko2bXU=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405 h1:yhCVgyC4o1eVCa2tZl7eS0r+SDo693bJlVdllGtEeKM=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.1.3/go.mod h1:NgwopIslSNH47DimFoV78dnkksY2EFtX0ajyb3K/las=\nrsc.io/pdf v0.1.1 h1:k1MczvYDUvJBe93bYd7wrZLLUEcLZAuF824/I4e5Xr4=\nrsc.io/pdf v0.1.1/go.mod h1:n8OzWcQ6Sp37PL01nO98y4iUCRdTGarVfzxY20ICaU4=\n"
        },
        {
          "name": "reading",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "topics",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}