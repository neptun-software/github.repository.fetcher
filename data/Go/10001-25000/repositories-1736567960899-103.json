{
  "metadata": {
    "timestamp": 1736567960899,
    "page": 103,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "helm/charts",
      "stars": 15483,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.025390625,
          "content": "*.tpl linguist-language=Go"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4091796875,
          "content": "# General files for the project\npkg/*\n*.pyc\nbin/*\n.project\n/.bin\n/_test/secrets/*.json\n\n# OSX leaves these everywhere on SMB shares\n._*\n\n# OSX trash\n.DS_Store\n\n# Files generated by JetBrains IDEs, e.g. IntelliJ IDEA\n.idea/\n*.iml\n\n# Vscode files\n.vscode\n\n# Emacs save files\n*~\n\\#*\\#\n.\\#*\n\n# Vim-related files\n[._]*.s[a-w][a-z]\n[._]s[a-w][a-z]\n*.un~\nSession.vim\n.netrwhist\n\n# Chart dependencies\n**/charts/*.tgz\n\n.history\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.6064453125,
          "content": "# Contributing Guidelines\n\nThe Kubernetes Charts project accepts contributions via GitHub pull requests. This document outlines the process to help get your contribution accepted.\n\n## Sign Your Work\n\nThe sign-off is a simple line at the end of the explanation for a commit. All\ncommits needs to be signed. Your signature certifies that you wrote the patch or\notherwise have the right to contribute the material. The rules are pretty simple,\nif you can certify the below (from [developercertificate.org](http://developercertificate.org/)):\n\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n1 Letterman Drive\nSuite D4700\nSan Francisco, CA, 94129\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\nThen you just add a line to every git commit message:\n\n    Signed-off-by: Joe Smith <joe.smith@example.com>\n\nUse your real name (sorry, no pseudonyms or anonymous contributions.)\n\nIf you set your `user.name` and `user.email` git configs, you can sign your\ncommit automatically with `git commit -s`.\n\nNote: If your git config information is set properly then viewing the\n `git log` information for your commit will look something like this:\n\n```\nAuthor: Joe Smith <joe.smith@example.com>\nDate:   Thu Feb 2 11:41:15 2018 -0800\n\n    Update README\n\n    Signed-off-by: Joe Smith <joe.smith@example.com>\n```\n\nNotice the `Author` and `Signed-off-by` lines match. If they don't\nyour PR will be rejected by the automated DCO check.\n\n### Reporting a Bug in Helm\n\nThis repository is used by Chart developers for maintaining the official charts for Kubernetes Helm. If your issue is in the Helm tool itself, please use the issue tracker in the [helm/helm](https://github.com/helm/helm) repository.\n\n## How to Contribute to an Existing Chart\n\n1. Fork this repository, develop and test your Chart changes. Remember to sign off your commits as described in the \"Sign Your Work\" chapter.\n1. Ensure your Chart changes follow the [technical](#technical-requirements) and [documentation](#documentation-requirements) guidelines, described below.\n1. Submit a pull request.\n\n***NOTE***: In order to make testing and merging of PRs easier, please submit changes to multiple charts in separate PRs.\n\n### Technical Requirements\n\n* All Chart dependencies should also be submitted independently\n* Must pass the linter (`helm lint`)\n* Must successfully launch with default values (`helm install .`)\n    * All pods go to the running state (or NOTES.txt provides further instructions if a required value is missing e.g. [minecraft](https://github.com/helm/charts/blob/master/stable/minecraft/templates/NOTES.txt#L3))\n    * All services have at least one endpoint\n* Must include source GitHub repositories for images used in the Chart\n* Images should not have any major security vulnerabilities\n* Must be up-to-date with the latest stable Helm/Kubernetes features\n    * Use Deployments in favor of ReplicationControllers\n* Should follow Kubernetes best practices\n    * Include Health Checks wherever practical\n    * Allow configurable [resource requests and limits](http://kubernetes.io/docs/user-guide/compute-resources/#resource-requests-and-limits-of-pod-and-container)\n* Provide a method for data persistence (if applicable)\n* Support application upgrades\n* Allow customization of the application configuration\n* Provide a secure default configuration\n* Do not leverage alpha features of Kubernetes\n* Includes a [NOTES.txt](https://helm.sh/docs/topics/charts/#chart-license-readme-and-notes) explaining how to use the application after install\n* Follows [best practices](https://helm.sh/docs/chart_best_practices/)\n  (especially for [labels](https://helm.sh/docs/chart_best_practices/labels/)\n  and [values](https://helm.sh/docs/chart_best_practices/values/))\n\n### Documentation Requirements\n\n* Must include an in-depth `README.md`, including:\n    * Short description of the Chart\n    * Any prerequisites or requirements\n    * Customization: explaining options in `values.yaml` and their defaults\n* Must include a short `NOTES.txt`, including:\n    * Any relevant post-installation information for the Chart\n    * Instructions on how to access the application or service provided by the Chart\n\n### Merge Approval and Release Process\n\nA Kubernetes Charts maintainer will review the Chart change submission, and start a validation job in the CI to verify the technical requirements of the Chart. A maintainer may add \"LGTM\" (Looks Good To Me) or an equivalent comment to indicate that a PR is acceptable. Any change requires at least one LGTM. No pull requests can be merged until at least one maintainer signs off with an LGTM.\n\nOnce the Chart has been merged, the release job will automatically run in the CI to package and release the Chart in the [`gs://kubernetes-charts` Google Storage bucket](https://console.cloud.google.com/storage/browser/kubernetes-charts/).\n\n## Support Channels\n\nWhether you are a user or contributor, official support channels include:\n\n- GitHub issues: https://github.com/helm/charts/issues\n- Slack: Charts - #Charts room in the [Kubernetes Slack](http://slack.kubernetes.io/)\n- Slack: Helm Users - #Helm-users room in the [Kubernetes Slack](http://slack.kubernetes.io/)\n- Slack: Helm Developers - #Helm-dev room in the [Kubernetes Slack](http://slack.kubernetes.io/)\n\nBefore opening a new issue or submitting a new pull request, it's helpful to search the project - it's likely that another user has already reported the issue you're facing, or it's a known issue that we're already aware of.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0771484375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright The Helm Authors.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "OWNERS",
          "type": "blob",
          "size": 0.234375,
          "content": "approvers:\n  - lachie83\n  - sameersbn\n  - unguiculus\n  - scottrigby\n  - mattfarina\n  - davidkarlsen\n  - paulczar\n  - cpanato\n  - jlegrone\n  - maorfr\nemeritus:\n  - foxish\n  - linki\n  - mgoodness\n  - prydonius\n  - seanknox\n  - viglesiasce\n  \n"
        },
        {
          "name": "PROCESSES.md",
          "type": "blob",
          "size": 3.171875,
          "content": "# Processes\n\nThis document outlines processes and procedures for some common tasks in the charts repository.\n\n## Deprecating A Chart\n\nWhen a chart is no longer maintained it can be [deprecated](https://en.wikipedia.org/wiki/Deprecation). Once a chart is deprecated the expectation is the chart will see no further development. The chart and its versions will still be accessible, though tools such as [monocular](https://github.com/kubernetes-helm/monocular) and [Kubeapps Hub](https://hub.kubeapps.com/) will no longer list the chart.\n\nTo deprecate a chart perform the following:\n\n1. Increment the chart `version` in the `Chart.yaml` file. This is required as all charts are immutable.\n1. Add a property to the `Chart.yaml` file of `deprecated: true` at the top level of the YAML structure.\n1. Above the deprecated property add a comment noting that the chart is deprecated and linking to the deprecation policy.\n1. Remove any maintainers from the chart as the chart is no longer maintained.\n1. Prefix the description with \"DEPRECATED\"\n1. Update READMEs and NOTES.txt to note that the chart is deprecated\n\nFor example, A `Chart.yaml` could start like:\n\n```yaml\nname: foo\n# The foo chart is deprecated and no longer maintained. For details deprecation,\n# including how to un-deprecate a chart see the PROCESSES.md file.\ndeprecated: true\ndescription: DEPRECATED foo bar baz qux...\n```\n\n## Un-deprecating A Chart\n\nWhen new maintainers are interested in bring a chart out of deprecation with\nnew features or new support that can be an option. To un-deprecate a chart:\n\n1. Update the maintainers on the chart if any are listed. The previous maintainers should not be expected to maintain the chart unless they explicitly decide to do so.\n1. If there is an OWNERS file in the chart that should be updated with the new reviewers and  approvers.\n1. The deprecated property from the `Chart.yaml` file should be removed along with any associated comment.\n1. The chart `version` needs to be incremented accordingly. If the same functionality is kept the version can be a patch increase. Otherwise the minor or major version needs to be incremented. For more detail on changing the version number see the [semver specification](http://semver.org).\n\n## Promoting A Chart From Incubator To Stable\n\nWhen promoting a chart from incubator to stable there are several steps that need to be carried out.\n\n1. Prior to promoting the chart verify that it does not depend on any other incubator charts. Stable charts cannot depend on incubator charts.\n1. The chart should be copied, not moved, from the incubator directory to the stable directory.\n1. The chart in the incubator directory should be deprecated according to the [deprecation process](#deprecating-a-chart) described above with a comment noting that the chart has been promoted to stable.\n1. The version of the chart in the stable directory should be updated so that any documentation or other details points to stable rather than incubator. The chart `version` will, also, need to be incremented.\n\n## Reviewing A Pull Request\n\nThere are two parts to reviewing a pull request in the process to do so and the guidelines to follow. Both of those are outlined in the [Review Guidelines](REVIEW_GUIDELINES.md).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.8212890625,
          "content": "|![](https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/Warning.svg/156px-Warning.svg.png) | This project is no longer supported.\n|---|---|\n\n# Helm Charts\n\nThe canonical source for Helm charts is the [Artifact Hub](https://artifacthub.io), an aggregator for distributed chart repos.\n\nThis GitHub project is the source for Helm `stable` and `incubator` [Helm chart repositories](https://v3.helm.sh/docs/topics/chart_repository/). This is now an archive no longer under active development.\n\nFor more information about installing and using Helm, see the\n[Helm Docs](https://helm.sh/docs/). For a quick introduction to Charts, see the [Chart Guide](https://helm.sh/docs/topics/charts/).\n\n## ⚠️ Deprecation and Archive Notice\n\nSimilar to the [Helm 2 Support Plan](https://helm.sh/blog/2019-10-22-helm-2150-released/#helm-2-support-plan), this GitHub project has begun transition to a 1 year \"maintenance mode\" (see [Deprecation Timeline](#deprecation-timeline) below). Given the deprecation plan, this project is intended for [apiVersion: v1](https://helm.sh/docs/topics/charts/#the-apiversion-field) Charts (installable by both Helm 2 and 3), and not for `apiVersion: v2` charts (installable by Helm 3 only).\n\n### Deprecation Timeline\n\n| | |\n| - | - |\n| **Nov 13, 2019** | At [Helm 3's public release](https://helm.sh/blog/helm-3-released/), new charts are no longer accepted to `stable` or `incubator`. Patches to existing charts may continue to be submitted by the community, and (time permitting) reviewed by chart OWNERS for acceptance |\n| **Aug 13, 2020** | At 9 months – when Helm v2 goes security fix only – the `stable` and `incubator` repos will be de-listed from the Helm Hub. Chart OWNERS are encouraged to accept security fixes only. ℹ️ _Note: the original date has been extended 3 months to match Helm v2 support. See [COVID-19: Extending Helm v2 Bug Fixes](https://helm.sh/blog/covid-19-extending-helm-v2-bug-fixes/)_ |\n| **Nov 13, 2020** | At 1 year, support for this project will formally end, at which point the `stable` and `incubator` chart repos will be marked obsolete. At that time these chart repos will likely be garbage collected and no longer available. This git repository will remain as an archive. |\n\nThis timeline gives the community (chart OWNERS, organizations, groups or individuals who want to host charts) 9 months to move charts to new Helm repos, and list these new repos on the Helm Hub before `stable` and `incubator` are de-listed.\n\nNote that this project has been under active development for some time, so you might run into [issues](https://github.com/helm/charts/issues). If you do, please don't be shy about letting us know, or better yet, contribute a fix or feature (within the deprecation timeline of course). Also be aware the repo and chart OWNERS are volunteers so reviews are as time allows, and acceptance is up to the chart OWNERS - you may [reach out](#where-to-find-us) but please be patient and courteous.\n\n## Where to Find Us\n\nFor general Helm Chart discussions join the Helm Charts (#charts) room in the [Kubernetes Slack instance](http://slack.kubernetes.io/).\n\nFor issues and support for Helm and Charts see [Support Channels](CONTRIBUTING.md#support-channels).\n\n## How Do I Install These Charts?\n\nJust `helm install stable/<chart>`. This is the default repository for Helm v2 which is located at https://charts.helm.sh/stable/ and was installed by default prior to Helm v3.\n\nFor more information on using Helm, refer to the [Helm documentation](https://github.com/kubernetes/helm#docs).\n\n## How Do I Enable the Stable Repository for Helm 3?\n\nTo add the Helm Stable Charts for your local client, run `helm repo add`:\n\n```\n$ helm repo add stable https://charts.helm.sh/stable\n\"stable\" has been added to your repositories\n```\n\n## How Do I Enable the Incubator Repository?\n\nTo add the Incubator charts for your local client, run `helm repo add`:\n\n```\n$ helm repo add incubator https://charts.helm.sh/incubator\n\"incubator\" has been added to your repositories\n```\n\nYou can then run `helm search incubator` to see the charts.\n\n## Chart Format\n\nTake a look at the [alpine example chart](https://github.com/helm/helm/tree/master/cmd/helm/testdata/testcharts/alpine) for reference when you're writing your first few charts.\n\nBefore contributing a Chart, become familiar with the format. Note that the project is still under active development and the format may still evolve a bit.\n\n## Repository Structure\n\nThis GitHub repository contains the source for the packaged and versioned charts released using [GitHub pages](https://github.com/helm/charts/tree/gh-pages/stable) (the Chart Repository).\n\nThe Charts in the `stable/` directory in the master branch of this repository match the latest packaged Chart in the Chart Repository, though there may be previous versions of a Chart available in that Chart Repository.\n\nThe purpose of this repository is to provide a place for maintaining and contributing official Charts, with CI processes in place for managing the releasing of Charts into the Chart Repository.\n\nThe Charts in this repository are organized into two folders:\n\n* stable\n* incubator\n\nStable Charts meet the criteria in the [technical requirements](CONTRIBUTING.md#technical-requirements).\n\nIncubator Charts are those that do not meet these criteria. Having the incubator folder allows charts to be shared and improved on until they are ready to be moved into the stable folder. The charts in the `incubator/` directory can be found on the [`gh-pages` branch of the repository](https://github.com/helm/charts/tree/gh-pages/incubator).\n\nIn order to get a Chart from incubator to stable, Chart maintainers should open a pull request that moves the chart folder.\n\n## Contributing to an Existing Chart\n\nWe'd love for you to contribute to an existing Chart that you find provides a useful application or service for Kubernetes. Please read our [Contribution Guide](CONTRIBUTING.md) for more information on how you can contribute Charts.\n\nNote: We use the same [workflow](https://github.com/kubernetes/community/blob/master/contributors/devel/development.md#workflow),\n[License](LICENSE) and [Contributor License Agreement](CONTRIBUTING.md) as the main Kubernetes repository.\n\n## Owning and Maintaining A Chart\n\nIndividual charts can be maintained by one or more users of GitHub. When someone maintains a chart they have the access to merge changes to that chart. To have merge access to a chart someone needs to:\n\n1. Be listed on the chart, in the `Chart.yaml` file, as a maintainer. If you need sponsors and have contributed to the chart, please reach out to the existing maintainers, or if you are having trouble connecting with them, please reach out to one of the [OWNERS](OWNERS) of the charts repository.\n1. Be invited (and accept your invite) as a read-only collaborator on [this repo](https://github.com/helm/charts). This is required for @k8s-ci-robot [PR comment interaction](https://github.com/kubernetes/community/blob/master/contributors/guide/pull-requests.md).\n1. An OWNERS file needs to be added to a chart. That OWNERS file should list the maintainers' GitHub login names for both the reviewers and approvers sections. For an example see the [Drupal chart](stable/drupal/OWNERS). The `OWNERS` file should also be appended to the `.helmignore` file.\n\nOnce these three steps are done a chart approver can merge pull requests following the directions in the [REVIEW_GUIDELINES.md](REVIEW_GUIDELINES.md) file.\n\n## Trusted Collaborator\n\nThe `pull-charts-e2e` test run, that installs a chart to test it, is required before a pull request can be merged. These tests run automatically for members of the Helm Org and for chart [repository collaborators](https://help.github.com/articles/adding-outside-collaborators-to-repositories-in-your-organization/). For regular contributors who are trusted, in a manner similar to Kubernetes community members, we have trusted collaborators. These individuals can have their tests run automatically as well as mark other pull requests as ok to test by adding a comment of `/ok-to-test` on pull requests.\n\nThere are two paths to becoming a trusted collaborator. One only needs follow one of them.\n\n1. If you are a Kubernetes GitHub org member and have your Kubernetes org membership public you can become a trusted collaborator for Helm Charts\n2. Get sponsorship from one of the Charts Maintainers listed in the OWNERS file at the root of this repository\n\nThe process to get added is:\n\n* File an issue asking to be a trusted collaborator\n* A Helm Chart Maintainer can then add the user as a read only collaborator to the repository\n\n## Review Process\n\nFor information related to the review procedure used by the Chart repository maintainers, see [Merge approval and release process](CONTRIBUTING.md#merge-approval-and-release-process).\n\n### Stale Pull Requests and Issues\n\nPull Requests and Issues that have no activity for 30 days automatically become stale. After 30 days of being stale, without activity, they become rotten. Pull Requests and Issues can rot for 30 days and then they are automatically closed. This is the standard stale process handling for all repositories on the Kubernetes GitHub organization.\n\n## Supported Kubernetes Versions\n\nThis chart repository supports the latest and previous minor versions of Kubernetes. For example, if the latest minor release of Kubernetes is 1.8 then 1.7 and 1.8 are supported. Charts may still work on previous versions of Kubernertes even though they are outside the target supported window.\n\nTo provide that support the API versions of objects should be those that work for both the latest minor release and the previous one.\n\n## Happy Helming in China\n\nIf you are in China, there are some problems to use upstream Helm Charts directly (e.g. images hosted on `gcr.io`, `quay.io`, and Charts hosted on `googleapis.com` etc), you can use this mirror repo at https://github.com/cloudnativeapp/charts which automatically sync & replace unavailable image & repo URLs in every Chart.\n"
        },
        {
          "name": "REVIEW_GUIDELINES.md",
          "type": "blob",
          "size": 14.8662109375,
          "content": "# Chart Review Guidelines\n\nAnyone is welcome to review pull requests. Besides our [technical requirements](https://github.com/helm/charts/blob/master/CONTRIBUTING.md#technical-requirements) and [best practices](https://github.com/helm/helm/tree/master/docs/chart_best_practices), here's an overview of process and review guidelines.\n\n## Process\n\nThe process to get a pull request merged is fairly simple. First, all required tests need to pass and the contributor needs to have a signed [DCO](https://www.helm.sh/blog/helm-dco/index.html). See [Charts Testing](https://github.com/helm/charts/blob/master/test/README.md) for details on our CI system and how you can provide custom values for testing. If there is a problem with some part of the test, such as a timeout issue, please contact one of the charts repository maintainers by commenting `cc @helm/charts-maintainers`.\n\nThe charts repository uses the OWNERS files to provide merge access. If a chart has an OWNERS file, an approver listed in that file can approve the pull request. If the chart does not have an OWNERS file, an approver in the OWNERS file at the root of the repository can approve the pull request.\n\nTo approve the pull request, an approver needs to leave a comment of `/lgtm` on the pull request. Once this is in place some tags (`lgtm` and `approved`) will be added to the pull request and a bot will come along and perform the merge.\n\nNote, if a reviewer who is not an approver in an OWNERS file leaves a comment of `/lgtm` a `lgtm` label will be added but a merge will not happen.\n\n## Immutability\n\nChart releases must be immutable. Any change to a chart warrants a chart version bump even if it is only changed to the documentation.\n\n## Versioning\n\nThe chart `version` should follow [semver](https://semver.org/).\n\nStable charts should start at `1.0.0` (for maintainability don't create new PRs for stable charts only to meet these criteria, but when reviewing PRs take the opportunity to ensure that this is met).\n\nAny breaking (backwards incompatible) changes to a chart should:\n\n1. Bump the MAJOR version\n2. In the README, under a section called \"Upgrading\", describe the manual steps necessary to upgrade to the new (specified) MAJOR version\n\n## Chart Metadata\n\nThe `Chart.yaml` should be as complete as possible. The following fields are mandatory:\n\n* name (same as chart's directory)\n* home\n* version\n* appVersion\n* description\n* maintainers (name should be Github username)\n\n## Dependencies\n\nStable charts should not depend on charts in the incubator.\n\n## Names and Labels\n\n### Metadata\nResources and labels should follow some conventions. The standard resource metadata (`metadata.labels` and `spec.template.metadata.labels`) should be this:\n\n```yaml\nname: {{ include \"myapp.fullname\" . }}\nlabels:\n  app.kubernetes.io/name: {{ include \"myapp.name\" . }}\n  app.kubernetes.io/instance: {{ .Release.Name }}\n  app.kubernetes.io/managed-by: {{ .Release.Service }}\n  helm.sh/chart: {{ include \"myapp.chart\" . }}\n```\n\nIf a chart has multiple components, a `app.kubernetes.io/component` label should be added (e. g. `app.kubernetes.io/component: server`). The resource name should get the component as suffix (e. g. `name: {{ include \"myapp.fullname\" . }}-server`).\n\nNote that templates have to be namespaced. With Helm 2.7+, `helm create` does this out-of-the-box. The `app.kubernetes.io/name` label should use the `name` template, not `fullname` as is still the case with older charts.\n\n### Deployments, StatefulSets, DaemonSets Selectors\n\n`spec.selector.matchLabels` must be specified should follow some conventions. The standard selector should be this:\n\n```yaml\nselector:\n  matchLabels:\n    app.kubernetes.io/name: {{ include \"myapp.name\" . }}\n    app.kubernetes.io/instance: {{ .Release.Name }}\n```\n\nIf a chart has multiple components, a `component` label should be added to the selector (see above).\n\n`spec.selector.matchLabels` defined in `Deployments`/`StatefulSets`/`DaemonSets` `>=v1/beta2` **must not** contain `helm.sh/chart` label or any label containing a version of the chart, because the selector is immutable.\nThe chart label string contains the version, so if it is specified, whenever the Chart.yaml version changes, Helm's attempt to change this immutable field would cause the upgrade to fail.\n\n#### Fixing Selectors\n\n##### For Deployments, StatefulSets, DaemonSets apps/v1beta1 or extensions/v1beta1\n\n- If it does not specify `spec.selector.matchLabels`, set it\n- Remove `helm.sh/chart` label in `spec.selector.matchLabels` if it exists\n- Bump patch version of the Chart\n\n##### For Deployments, StatefulSets, DaemonSets >=apps/v1beta2\n\n- Remove `helm.sh/chart` label in `spec.selector.matchLabels` if it exists\n- Bump major version of the Chart as it is a breaking change\n\n### Service Selectors\n\nLabel selectors for services must have both `app.kubernetes.io/name` and `app.kubernetes.io/instance` labels.\n\n```yaml\nselector:\n  app.kubernetes.io/name: {{ include \"myapp.name\" . }}\n  app.kubernetes.io/instance: {{ .Release.Name }}\n```\n\nIf a chart has multiple components, a `app.kubernetes.io/component` label should be added to the selector (see above).\n\n### Persistence Labels\n\n### StatefulSet\n\nIn case of a `Statefulset`, `spec.volumeClaimTemplates.metadata.labels` must have both `app.kubernetes.io/name` and `app.kubernetes.io/instance` labels, and **must not** contain `helm.sh/chart` label or any label containing a version of the chart, because `spec.volumeClaimTemplates` is immutable.\n\n```yaml\nlabels:\n  app.kubernetes.io/name: {{ include \"myapp.name\" . }}\n  app.kubernetes.io/instance: {{ .Release.Name }}\n```\n\nIf a chart has multiple components, a `app.kubernetes.io/component` label should be added to the selector (see above).\n\n### PersistentVolumeClaim\n\nIn case of a `PersistentVolumeClaim`, unless special needs, `matchLabels` should not be specified\nbecause it would prevent automatic `PersistentVolume` provisioning.\n\n## Formatting\n\n* Yaml file should be indented with two spaces.\n* List indentation style should be consistent.\n* There should be a single space after `{{` and before `}}`.\n\n## Configuration\n\n* Docker images should be configurable. Image tags should use stable versions.\n\n```yaml\nimage:\n  repository: myapp\n  tag: 1.2.3\n  pullPolicy: IfNotPresent\n```\n\n* The use of the `default` function should be avoided if possible in favor of defaults in `values.yaml`.\n* It is usually best to not specify defaults for resources and to just provide sensible values that are commented out as a recommendation, especially when resources are rather high. This makes it easier to test charts on small clusters or Minikube. Setting resources should generally be a conscious choice of the user.\n\n## Persistence\n\n* Persistence should be enabled by default\n* PVCs should support specifying an existing claim\n* Storage class should be empty by default so that the default storage class is used\n* All options should be shown in README.md\n* Example persistence section in values.yaml:\n\n```yaml\npersistence:\n  enabled: true\n  ## If defined, storageClassName: <storageClass>\n  ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n  ## If undefined (the default) or set to null, no storageClassName spec is\n  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on\n  ##   GKE, AWS & OpenStack)\n  ##\n  storageClass: \"\"\n  accessMode: ReadWriteOnce\n  size: 10Gi\n  # existingClaim: \"\"\n```\n\n* Example pod spec within a deployment:\n\n```yaml\nvolumes:\n  - name: data\n  {{- if .Values.persistence.enabled }}\n    persistentVolumeClaim:\n      claimName: {{ .Values.persistence.existingClaim | default (include \"myapp.fullname\" .) }}\n  {{- else }}\n    emptyDir: {}\n  {{- end -}}\n```\n\n* Example pvc.yaml:\n\n```yaml\n{{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: {{ include \"myapp.fullname\" . }}\n  labels:\n    app.kubernetes.io/name: {{ include \"myapp.name\" . }}\n    app.kubernetes.io/instance: {{ .Release.Name }}\n    app.kubernetes.io/managed-by: {{ .Release.Service }}\n    helm.sh/chart: {{ include \"myapp.chart\" . }}\nspec:\n  accessModes:\n    - {{ .Values.persistence.accessMode | quote }}\n  resources:\n    requests:\n      storage: {{ .Values.persistence.size | quote }}\n{{- if .Values.persistence.storageClass }}\n{{- if (eq \"-\" .Values.persistence.storageClass) }}\n  storageClassName: \"\"\n{{- else }}\n  storageClassName: \"{{ .Values.persistence.storageClass }}\"\n{{- end }}\n{{- end }}\n{{- end }}\n```\n\n## AutoScaling / HorizontalPodAutoscaler\n\n* Autoscaling should be disabled by default\n* All options should be shown in README.md\n\n* Example autoscaling section in values.yaml:\n\n```yaml\nautoscaling:\n  enabled: false\n  minReplicas: 1\n  maxReplicas: 5\n  targetCPUUtilizationPercentage: 50\n  targetMemoryUtilizationPercentage: 50\n```\n\n* Example hpa.yaml:\n\n```yaml\n{{- if .Values.autoscaling.enabled }}\napiVersion: autoscaling/v2beta1\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: {{ include \"myapp.fullname\" . }}\n  labels:\n    app.kubernetes.io/name: {{ include \"myapp.name\" . }}\n    app.kubernetes.io/instance: {{ .Release.Name }}\n    app.kubernetes.io/managed-by: {{ .Release.Service }}\n    helm.sh/chart: {{ include \"myapp.chart\" . }}\n    app.kubernetes.io/component: \"{{ .Values.name }}\"\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: {{ include \"myapp.fullname\" . }}\n  minReplicas: {{ .Values.autoscaling.minReplicas }}\n  maxReplicas: {{ .Values.autoscaling.maxReplicas }}\n  metrics:\n    - type: Resource\n      resource:\n        name: cpu\n        targetAverageUtilization: {{ .Values.autoscaling.targetCPUUtilizationPercentage }}\n    - type: Resource\n      resource:\n        name: memory\n        targetAverageUtilization: {{ .Values.autoscaling.targetMemoryUtilizationPercentage }}\n{{- end }}\n```\n\n## Ingress\n\n* See the [Ingress resource documentation](https://kubernetes.io/docs/concepts/services-networking/ingress/) for a broader concept overview\n* Ingress should be disabled by default\n* Example ingress section in values.yaml:\n\n```yaml\ningress:\n  enabled: false\n  annotations: {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n  path: /\n  hosts:\n    - chart-example.test\n  tls: []\n  #  - secretName: chart-example-tls\n  #    hosts:\n  #      - chart-example.test\n```\n\n* Example ingress.yaml:\n\n```yaml\n{{- if .Values.ingress.enabled -}}\n{{- if .Capabilities.APIVersions.Has \"networking.k8s.io/v1beta1\" }}\napiVersion: networking.k8s.io/v1beta1\n{{ else }}\napiVersion: extensions/v1beta1\n{{ end -}}\nkind: Ingress\nmetadata:\n  name: {{ include \"myapp.fullname\" }}\n  labels:\n    app.kubernetes.io/name: {{ include \"myapp.name\" . }}\n    app.kubernetes.io/instance: {{ .Release.Name }}\n    app.kubernetes.io/managed-by: {{ .Release.Service }}\n    helm.sh/chart: {{ include \"myapp.chart\" . }}\n{{- with .Values.ingress.annotations }}\n  annotations:\n{{ toYaml . | indent 4 }}\n{{- end }}\nspec:\n{{- if .Values.ingress.tls }}\n  tls:\n  {{- range .Values.ingress.tls }}\n    - hosts:\n      {{- range .hosts }}\n        - {{ . | quote }}\n      {{- end }}\n      secretName: {{ .secretName }}\n  {{- end }}\n{{- end }}\n  rules:\n  {{- range .Values.ingress.hosts }}\n    - host: {{ . | quote }}\n      http:\n        paths:\n          - path: {{ .Values.ingress.path }}\n            backend:\n              serviceName: {{ include \"myapp.fullname\" }}\n              servicePort: http\n  {{- end }}\n{{- end }}\n```\n\n* Example prepend logic for getting an application URL in NOTES.txt:\n\n```\n{{- if .Values.ingress.enabled }}\n{{- range .Values.ingress.hosts }}\n  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ . }}{{ $.Values.ingress.path }}\n{{- end }}\n```\n\n## Documentation\n\n`README.md` and `NOTES.txt` are mandatory. `README.md` should contain a table listing all configuration options. `NOTES.txt` should provide accurate and useful information on how the chart can be used/accessed.\n\n## Compatibility\n\nWe officially support compatibility with the current and the previous minor version of Kubernetes. Generated resources should use the latest possible API versions compatible with these versions. For extended backwards compatibility, conditional logic based on capabilities may be used (see [built-in objects](https://github.com/helm/helm/blob/master/docs/chart_template_guide/builtin_objects.md)).\n\n## Kubernetes Native Workloads\n\nWhile reviewing Charts that contain workloads such as [Deployments](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/), [StatefulSets](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/), [DaemonSets](https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/) and [Jobs](https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/) the below points should be considered.  These are to be seen as best practices rather than strict enforcement.\n\n1. Any workload that is stateless and long-running (servers) in nature are to be created as Deployments.  Deployments, in turn, create ReplicaSets.\n2. Unless there is a compelling reason, ReplicaSets or ReplicationControllers should be avoided as workload types.\n3. Workloads that are stateful in nature such as databases, key-value stores, message queues, in-memory caches are to be created as StatefulSets\n4. It is recommended that Deployments and StatefulSets configure their workloads with a [Pod Disruption Budget](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/) for high availability.\n5. For workloads such as databases, KV stores, etc., that replicate data, it is recommended to configure interpod anti-affinity.\n6. It is recommended to have a default workload update strategy configured that is suitable for this chart.\n7. Batch workloads are to be created using Jobs.\n8. It is best to always create workloads with the latest supported [api version](https://v1-8.docs.kubernetes.io/docs/api-reference/v1.8/) as the older version are either deprecated or soon to be deprecated.\n9. It is generally not advisable to provide hard [resource limits](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#resource-requests-and-limits-of-pod-and-container) to workloads and leave it configurable unless the workload requires such quantity bare minimum to function.\n10. As much as possible complex pre-app setups are configured using [init containers](https://kubernetes.io/docs/concepts/workloads/pods/init-containers/).\n\nMore [configuration](https://kubernetes.io/docs/concepts/configuration/overview/) best practices.\n\n\n## Tests\n\nThis repository follows a [test procedure](https://github.com/helm/charts/blob/master/test/README.md). This allows the charts of this repository to be tested according to several rules (linting, semver checking, deployment testing, etc) for every Pull Request.\n\nThe `ci` directory of a given Chart allows testing different use cases, by allowing you to define different sets of values overriding `values.yaml`, one file per set. See the [documentation](https://github.com/helm/charts/blob/master/test/README.md#providing-custom-test-values) for more information.\n\nThis directory MUST exist with at least one test file in it.\n"
        },
        {
          "name": "code-of-conduct.md",
          "type": "blob",
          "size": 0.1337890625,
          "content": "# Community Code of Conduct\n\nHelm follows the [CNCF Code of Conduct](https://github.com/cncf/foundation/blob/master/code-of-conduct.md).\n"
        },
        {
          "name": "incubator",
          "type": "tree",
          "content": null
        },
        {
          "name": "stable",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}