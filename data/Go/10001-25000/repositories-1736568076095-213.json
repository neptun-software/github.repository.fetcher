{
  "metadata": {
    "timestamp": 1736568076095,
    "page": 213,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "semaphoreui/semaphore",
      "stars": 11018,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".codacy.yml",
          "type": "blob",
          "size": 0.03125,
          "content": "---\nexclude_paths:\n  - .dredd/**"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.025390625,
          "content": "web/node_modules/\nvendor/\n"
        },
        {
          "name": ".dredd",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.470703125,
          "content": "gin-bin\nbuild/\n/certs/\nweb/public/js/bundle.js\nweb/public/css/*.*\nweb/public/html/**/*.*\nweb/public/fonts/*.*\nweb/.nyc_output\napi/public/**/*\n/config.json\n/config-runner.json\n/config-runner-token.txt\n/.dredd/config.json\n/database.boltdb\n/database.boltdb.lock\n/database_test.boltdb\n.DS_Store\nnode_modules/\n\n/.idea/\n/semaphore.iml\n/bin/\n\n/vendor/\n/coverage.out\n/public/package-lock.json\n!.gitkeep\n\n.dredd/compiled_hooks\n.dredd/compiled_hooks.exe\n\n__debug_bin*\n.task/\n/web/.env\n/.venv/"
        },
        {
          "name": ".goreleaser.yml",
          "type": "blob",
          "size": 1.5341796875,
          "content": "dist: bin\n\nbefore:\n  hooks:\n    - task build:fe\n\nbuilds:\n  - binary: semaphore\n    env:\n      - CGO_ENABLED=0\n    main: ./cli/main.go\n    ldflags: -s -w -X github.com/semaphoreui/semaphore/util.Ver={{ .Version }} -X github.com/semaphoreui/semaphore/util.Commit={{ .ShortCommit }} -X github.com/semaphoreui/semaphore/util.Date={{ .Timestamp }}\n    tags:\n      - netgo\n    goos:\n      - windows\n      - darwin\n      - linux\n      - freebsd\n    goarch:\n      - 386\n      - amd64\n      - arm\n      - arm64\n      - ppc64le\n    ignore:\n      - goos: darwin\n        goarch: 386\n      - goos: darwin\n        goarch: arm\n      - goos: darwin\n        goarch: ppc64le\n      - goos: windows\n        goarch: ppc64le\n\narchives:\n  - files:\n      - LICENSE\n    format_overrides:\n      - goos: windows\n        format: zip\n\nsigns:\n  -\n    artifacts: checksum\n    args: [\"-u\", \"58A7 CC3D 8A9C A2E5 BB5C 141D 4064 23EA F814 63CA\", \"--pinentry-mode\", \"loopback\", \"--yes\", \"--batch\", \"--output\", \"${signature}\", \"--detach-sign\", \"${artifact}\"]\n\nsnapshot:\n  name_template: \"{{ .Timestamp }}-{{ .ShortCommit }}-SNAPSHOT\"\n\nnfpms:\n  - file_name_template: \"{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}\"\n    description: Open Source alternative to Ansible Tower\n    homepage: https://github.com/semaphoreui/semaphore\n    vendor: Semaphore UI\n    maintainer: Semaphore UI <support@semaphoreui.com>\n    license: MIT\n\n    formats:\n      - deb\n      - rpm\n\n    dependencies:\n      - git\n\n    suggests:\n      - ansible\n\n    bindir: /usr/bin\n\nrelease:\n  draft: true\n  name_template: \"{{.Tag}}\"\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1591796875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project maintainer at denis@semaphoreui.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.953125,
          "content": "## Pull Requests\n\nWhen creating a pull-request you should:\n\n- __Open an issue first:__ Confirm that the change or feature will be accepted\n- __gofmt and vet the code:__ Use  `gofmt`, `golint`, `govet` and `goimports` to clean up your code.\n- __vendor dependencies with dep:__ Use `dep ensure --update` if you have added to or updated dependencies, so that they get added to the dependency manifest.\n- __Update api documentation:__ If your pull-request adding/modifying an API request, make sure you update the swagger documentation (`api-docs.yml`)\n- __Run Api Tests:__ If your pull request modifies the API make sure you run the integration tests using dredd.\n\n## Installation in a development environment\n\n- Check out the `develop` branch\n- [Install Go](https://golang.org/doc/install). Go must be >= v1.10 for all the tools we use to work\n- Install MySQL / MariaDB (OPTIONAL!!!)\n- Install node.js\n\n1) Set up GOPATH, GOBIN and Workspace.\n```\nmkdir -p $GOPATH/src/github.com/semaphoreui && cd $GOPATH/src/github.com/semaphoreui\n```\n\n2) Clone semaphore (with submodules)\n\n```\ngit clone --recursive git@github.com:semaphoreui/semaphore.git && cd semaphore\n```\n\n3) Install dev dependencies\n\n```\ngo install github.com/go-task/task/v3/cmd/task@latest\ntask deps\n```\nWindows users will additionally need to manually install goreleaser from https://github.com/goreleaser/goreleaser/releases\n\n4) Create database if you want to use MySQL (Semaphore also supports [bbolt](https://github.com/etcd-io/bbolt), it doesn't require additional action) \n\n```\necho \"create database semaphore;\" | mysql -uroot -p\n```\n\n5) Compile, set up & run\n\n```\ntask compile\ngo run cli/main.go setup\ngo run cli/main.go service --config ./config.json\n```\n\nOpen [localhost:3000](http://localhost:3000)\n\nNote: for Windows, you may need [Cygwin](https://www.cygwin.com/) to run certain commands because the [reflex](github.com/cespare/reflex) package probably doesn't work on Windows. \nYou may encounter issues when running `task watch`, but running `task build` etc... will still be OK.\n\n## Integration Tests\n\nDredd is used for API integration tests, if you alter the API in any way you must make sure that the information in the api docs\nmatches the responses.\n\nAs Dredd and the application database config may differ it expects it's own config.json in the .dredd folder.\n\n### How to run Dredd tests locally\n\n1) Build Dredd hooks:\n    ````bash\n    task compile:api:hooks\n    ```\n2) Install Dredd globally\n    ```bash\n    npm install -g dredd\n    ```\n3) Create `./dredd/config.json` for Dredd. It must contain database connection same as used in Semaphore server.\n   You can use any supported database dialect for tests. For example BoltDB.\n    ```json\n   {\n        \"bolt\": {\n            \"host\": \"/tmp/database.boltdb\"\n        },\n        \"dialect\": \"bolt\"\n    }\n    ```\n4) Start Semaphore server (add `--config` option if required):\n    ````bash\n    ./bin/semaphore server\n    ```\n5) Start Dredd tests\n    ```\n    dredd --config ./.dredd/dredd.local.yml\n    ```"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.09375,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2021 Denis Gukov\nCopyright (c) 2014-2021 Castaway Labs LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.4716796875,
          "content": "# Semaphore UI\n\nModern UI for Ansible, Terraform, OpenTofu, PowerShell and other DevOps tools.\n\n[![roadmap](https://img.shields.io/badge/roadmap-gray?style=for-the-badge&logo=github)](https://github.com/orgs/semaphoreui/projects/11)\n[![telegram](https://img.shields.io/badge/discord_community-510b80?style=for-the-badge&logo=discord)](https://discord.gg/5R6k7hNGcH) \n[![youtube](https://img.shields.io/badge/youtube_channel-red?style=for-the-badge&logo=youtube)](https://www.youtube.com/@semaphoreui) \n<!-- [![docker](https://img.shields.io/badge/container_configurator-white?style=for-the-badge&logo=docker)](https://semaphoreui.com/install/docker/) -->\n\n![responsive-ui-phone1](https://user-images.githubusercontent.com/914224/134777345-8789d9e4-ff0d-439c-b80e-ddc56b74fcee.png)\n\nIf your project has grown and deploying from the terminal is no longer feasible, then Semaphore UI is the tool you need.\n\n## Live Demo\n\nTry the latest version of Semaphore at [https://portal.semaphoreui.com](https://portal.semaphoreui.com).\n\n\n## What is Semaphore UI?\n\nSemaphore UI is a modern web interface for managing popular DevOps tools.\n\nSemaphore UI allows you to:\n* Easily run Ansible playbooks, Terraform and OpenTofu code, as well as Bash and PowerShell scripts.\n* Receive notifications about failed tasks.\n* Control access to your deployment system.\n\n## Key Concepts\n\n1. **Projects** is a collection of related resources, configurations, and tasks. Each project allows you to organize and manage your automation efforts in one place, defining the scope of tasks such as deploying applications, running scripts, or orchestrating cloud resources. Projects help group resources, inventories, task templates, and environments for streamlined automation workflows.\n2. **Task Templates** are reusable definitions of tasks that can be executed on demand or scheduled. A template specifies what actions should be performed, such as running Ansible playbooks, Terraform configurations, or other automation tasks. By using templates, you can standardize tasks and easily re-execute them with minimal effort, ensuring consistent results across different environments.\n3. **Task** is a specific instance of a job or operation executed by Semaphore. It refers to running a predefined action (like an Ansible playbook or a script) using a task template. Tasks can be initiated manually or automatically through schedules and are tracked to give you detailed feedback on the execution, including success, failure, and logs.\n4. **Schedules** allow you to automate task execution at specified times or intervals. This feature is useful for running periodic maintenance tasks, backups, or deployments without manual intervention. You can configure recurring schedules to ensure important automation tasks are performed regularly and on time.\n5. **Inventory** is a collection of target hosts (servers, virtual machines, containers, etc.) on which tasks will be executed. The inventory includes details about the managed nodes such as IP addresses, SSH credentials, and grouping information. It allows for dynamic control over which environments and hosts your automation will interact with.\n6. **Environment** refers to a configuration context that holds sensitive information such as environment variables and secrets used by tasks during execution. It separates sensitive data from task templates and allows you to switch between different setups while running the same task template across different environments securely.\n\n## Getting Started\n\nYou can install Semaphore using the following methods:\n* Docker\n* SaaS ([Semaphore Cloud](https://portal.semaphoreui.com))\n* Deploy a VM from a marketplace (AWS, DigitalOcean, etc.)\n* Snap\n* Binary file\n* Debian or RPM package\n\n### Docker\n\nThe most popular way to install Semaphore is via Docker.\n\n```\ndocker run -p 3000:3000 --name semaphore \\\n\t-e SEMAPHORE_DB_DIALECT=bolt \\\n\t-e SEMAPHORE_ADMIN=admin \\\n\t-e SEMAPHORE_ADMIN_PASSWORD=changeme \\\n\t-e SEMAPHORE_ADMIN_NAME=Admin \\\n\t-e SEMAPHORE_ADMIN_EMAIL=admin@localhost \\\n\t-d semaphoreui/semaphore:latest\n```\n\nWe recommend using the [Container Configurator](https://semaphoreui.com/install/docker/) to get the ideal Docker configuration for Semaphore.\n\n### SaaS\n\nWe offer a SaaS solution for using Semaphore UI without installation. Check it out at [Semaphore Cloud](https://portal.semaphoreui.com).\n\n### Deploy VM from Marketplace\n\nSupported cloud providers:\n* [Semaphore Run](https://cloud.semaphore.run/servers/new/semaphore)\n* [AWS](https://aws.amazon.com/marketplace/pp/prodview-5noeat2jipwca)\n* [Yandex Cloud](https://yandex.cloud/en-ru/marketplace/products/fastlix/semaphore)\n* DigitalOcean (coming soon)\n\n### Other Installation Methods\n\nFor more installation options, visit our [Installation page](https://semaphoreui.com/install).\n\n## Documentation\n\n* [User Guide](https://docs.semaphoreui.com)\n* [API Reference](https://semaphoreui.com/api-docs)\n\n## Contribution\n* [Contribution Guide](https://github.com/semaphoreui/semaphore/blob/develop/CONTRIBUTING.md)\n* [Dev Container](https://codespaces.new/semaphoreui/semaphore) (default user `admin` / `changeme`)\n\n## License\nMIT © [Denis Gukov](https://github.com/fiftin)\n\n[![sponsor](https://img.shields.io/badge/become_a_sponsor-d9c7ff?style=for-the-badge&logo=github-sponsors)](https://github.com/sponsors/semaphoreui) [![ko-fi](https://img.shields.io/badge/buy_me_a_coffee-0ba0e0?style=for-the-badge&logo=kofi)](https://ko-fi.com/fiftin) [![patreon](https://img.shields.io/badge/become_a_patreon-teal?style=for-the-badge&logo=patreon)](https://www.patreon.com/semaphoreui)\n"
        },
        {
          "name": "Taskfile.yml",
          "type": "blob",
          "size": 9.375,
          "content": "version: \"3\"\n\nvars:\n  DOCKER_ORG: semaphoreui\n  DOCKER_SERVER: semaphore\n  DOCKER_RUNNER: runner\n  DOCKER_CMD: docker\n\ntasks:\n  all:\n    desc: Install, test and build Semaphore for local architecture\n    cmds:\n      - task: deps\n      - task: test\n      - task: build\n        vars:\n          GOOS: \"\"\n          GOARCH: \"\"\n\n  deps:\n    desc: Install all build dependencies\n    cmds:\n      - task: deps:tools\n      - task: deps:be\n      - task: deps:fe\n\n  deps:tools:\n    desc: Installs required tools to build and publish\n    vars:\n      SWAGGER_VERSION: v0.30.5\n      GORELEASER_VERSION: v1.25.1\n      GOLINTER_VERSION: v1.57.2\n    cmds:\n#      - go install github.com/go-swagger/go-swagger/cmd/swagger@{{ .SWAGGER_VERSION }}\n      - go install github.com/goreleaser/goreleaser@{{ .GORELEASER_VERSION }}\n#      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@{{ .GOLINTER_VERSION }}\n\n  deps:be:\n    desc: Vendor application dependencies\n    cmds:\n      - go mod vendor\n\n  deps:fe:\n    desc: Installs nodejs requirements\n    dir: web\n    cmds:\n      - npm install\n\n  build:\n    desc: Build a full set of release binaries and packages\n    cmds:\n      - task: build:fe\n      - task: build:be\n\n  build:debug:\n    desc: Build DEBUG server binary\n    cmds:\n      - >-\n        env CGO_ENABLED=0 GOOS={{ .GOOS }} GOARCH={{ .GOARCH }}\n        go build -o bin/semaphore{{ if eq OS \"windows\" }}.exe{{ end }}\n        -tags \"netgo\"\n        -gcflags=\"all=-N -l\"\n        -ldflags \"-X {{ .IMPORT }}/util.Ver={{ .VERSION }} -X {{ .IMPORT }}/util.Commit={{ .SHA }} -X {{ .IMPORT }}/util.Date={{ .DATE }}\" ./cli\n    vars:\n      TAG:\n        sh: git name-rev --name-only --tags --no-undefined HEAD 2>/dev/null || git rev-parse --abbrev-ref HEAD\n      SHA:\n        sh: git log --pretty=format:'%h' -n 1\n      VERSION: \"{{ if eq .GITHUB_REF_TYPE \\\"tag\\\" }}{{ .GITHUB_REF_NAME }}{{ else }}{{ .TAG }}{{ end }}\"\n      DATE: \"{{ now | unixEpoch }}\"\n      IMPORT: \"github.com/semaphoreui/semaphore\"\n\n  build:fe:\n    desc: Build VueJS project\n    dir: web\n    sources:\n      - src/*.*\n      - src/**/*.*\n      - public/index.html\n      - public/favicon.ico\n      - package.json\n      - package-lock.json\n      - babel.config.js\n      - vue.config.js\n    generates:\n      - ../api/public/css/*.css\n      - ../api/public/js/*.js\n      - ../api/public/index.html\n      - ../api/public/favicon.ico\n    cmds:\n      - npm run build\n\n  build:be:\n    desc: Build server binary\n    cmds:\n      - >-\n        env CGO_ENABLED=0 GOOS={{ .GOOS }} GOARCH={{ .GOARCH }}\n        go build -o bin/semaphore{{ if eq OS \"windows\" }}.exe{{ end }}\n        -tags \"netgo\"\n        -ldflags \"-s -w -X {{ .IMPORT }}/util.Ver={{ .VERSION }} -X {{ .IMPORT }}/util.Commit={{ .SHA }} -X {{ .IMPORT }}/util.Date={{ .DATE }}\" ./cli\n    vars:\n      TAG:\n        sh: git name-rev --name-only --tags --no-undefined HEAD 2>/dev/null || git rev-parse --abbrev-ref HEAD\n      SHA:\n        sh: git log --pretty=format:'%h' -n 1\n      VERSION: \"{{ if eq .GITHUB_REF_TYPE \\\"tag\\\" }}{{ .GITHUB_REF_NAME }}{{ else }}{{ .TAG }}{{ end }}\"\n      DATE: \"{{ now | unixEpoch }}\"\n      IMPORT: \"github.com/semaphoreui/semaphore\"\n\n  lint:\n    cmds:\n      - task: lint:fe\n#      - task: lint:be\n\n  lint:fe:\n    dir: web\n    cmds:\n      - npm run lint\n\n#  lint:be:\n#    cmds:\n#      - golangci-lint run --disable goconst --timeout 240s ./...\n#      - go vet ./...\n#      - swagger validate ./api-docs.yml\n\n  test:\n    cmds:\n      # - task: test:fe\n      - task: test:be\n\n  test:fe:\n    dir: web\n    cmds:\n      - npm run test:unit\n\n  test:be:\n    desc: Run go code tests\n    cmds:\n      - go test -v -coverprofile=coverage.out ./...\n\n  e2e:goodman:\n    desc: Installs goodman which is required by dredd\n    cmds:\n      - go install github.com/snikch/goodman/cmd/goodman@latest\n\n  e2e:deps:\n    desc: Installs dredd dep for integration testing\n    dir: web\n    cmds:\n      - npm install dredd@13.1.2\n\n  e2e:hooks:\n    desc: Compile required dredd hooks built\n    dir: ./.dredd/hooks\n    cmds:\n      - go build -o ../compiled_hooks{{ if eq OS \"windows\" }}.exe{{ end }}\n\n  e2e:test:\n    desc: Run end to end test for API with dredd\n    cmds:\n      - ./web/node_modules/.bin/dredd --config .dredd/dredd.testing.yml\n\n  e2e:test:local:\n    desc: Run end to end test for API with dredd\n    cmds:\n      - ./web/node_modules/.bin/dredd --config .dredd/dredd.local.yml\n\n  release:prod:\n    desc: Create and publish a release\n    cmds:\n      - goreleaser\n\n  release:test:\n    desc: Create a local test release\n    cmds:\n      - goreleaser --auto-snapshot --clean --skip=sign\n\n  docker:test:\n    desc: Test containers by building, running, testing and deleting them\n    deps:\n      - task: docker:deps\n    cmds:\n      - task: docker:build\n        vars:\n          tag: test\n\n      - task: docker:goss\n      - task: docker:lint\n\n      - \"{{ .DOCKER_CMD }} rmi {{ .DOCKER_ORG }}/{{ .DOCKER_SERVER }}:test\"\n      - \"{{ .DOCKER_CMD }} rmi {{ .DOCKER_ORG }}/{{ .DOCKER_RUNNER }}:test\"\n\n  docker:lint:\n    desc: Lint all dockerfiles based on Hadolint\n    deps:\n      - task: docker:deps\n    cmds:\n      - task: docker:lint:server\n      - task: docker:lint:runner\n\n  docker:lint:server:\n    desc: Lint server dockerfile based on Hadolint\n    dir: deployment/docker/server\n    cmds:\n      - hadolint Dockerfile --ignore DL3018\n\n  docker:lint:runner:\n    desc: Lint runner dockerfile based on Hadolint\n    dir: deployment/docker/runner\n    cmds:\n      - hadolint Dockerfile --ignore DL3018\n\n  docker:goss:\n    desc: Check if container contains defined files\n    deps:\n      - task: docker:deps\n    cmds:\n      - task: docker:goss:server\n      - task: docker:goss:runner\n\n  docker:goss:server:\n    desc: Check if server contains defined files\n    dir: deployment/docker/server\n    env:\n      GOSS_FILES_STRATEGY: cp\n    cmds:\n      - dgoss run -it \"{{ .DOCKER_ORG }}/{{ .DOCKER_SERVER }}:test\"\n\n  docker:goss:runner:\n    desc: Check if runner contains defined files\n    dir: deployment/docker/runner\n    env:\n      GOSS_FILES_STRATEGY: cp\n    cmds:\n      - dgoss run -it \"{{ .DOCKER_ORG }}/{{ .DOCKER_RUNNER }}:test\"\n\n  docker:build:\n    desc: Build all defined images for Semaphore\n    vars:\n      tag: \"{{ if .tag }}{{ .tag }}{{ else }}latest{{ end }}\"\n    cmds:\n      - task: docker:build:server\n        vars:\n          tag: \"{{ .tag }}\"\n      - task: docker:build:runner\n        vars:\n          tag: \"{{ .tag }}\"\n\n  docker:build:debug:\n    desc: Build an DEBUG image for Semaphore server\n    vars:\n      tag: \"debug\"\n    cmds:\n      - \"{{ .DOCKER_CMD }} build -f deployment/docker/debug/Dockerfile -t {{ .DOCKER_ORG }}/{{ .DOCKER_SERVER }}:{{ .tag }} .\"\n\n  docker:build:server:\n    desc: Build an image for Semaphore server\n    vars:\n      tag: \"{{ if .tag }}{{ .tag }}{{ else }}latest{{ end }}\"\n    cmds:\n      - \"{{ .DOCKER_CMD }} build -f deployment/docker/server/Dockerfile -t {{ .DOCKER_ORG }}/{{ .DOCKER_SERVER }}:{{ .tag }} .\"\n\n  docker:build:runner:\n    desc: Build an image for Semaphore runner\n    vars:\n      tag: \"{{ if .tag }}{{ .tag }}{{ else }}latest{{ end }}\"\n    cmds:\n      - \"{{ .DOCKER_CMD }} build -f deployment/docker/runner/Dockerfile -t {{ .DOCKER_ORG }}/{{ .DOCKER_RUNNER }}:{{ .tag }} .\"\n\n  docker:push:\n    desc: Push the images to registry\n    cmds:\n      - docker push {{ .DOCKER_ORG }}/{{ .DOCKER_SERVER }}:{{ .tag }}\n      - docker push {{ .DOCKER_ORG }}/{{ .DOCKER_RUNNER }}:{{ .tag }}\n\n  docker:deps:\n    desc: Install docker testing dependencies\n    vars:\n      INSTALL_PATH: '{{ .INSTALL_PATH | default \"/usr/local/bin\" }}'\n      REQUIRE_SUDO: '{{ .REQUIRE_SUDO | default \"true\" }}'\n    cmds:\n      - task: docker:deps:hadolint\n        vars:\n          INSTALL_PATH: \"{{ .INSTALL_PATH }}\"\n          REQUIRE_SUDO: \"{{ .REQUIRE_SUDO }}\"\n      - task: docker:deps:goss\n        vars:\n          INSTALL_PATH: \"{{ .INSTALL_PATH }}\"\n          REQUIRE_SUDO: \"{{ .REQUIRE_SUDO }}\"\n      - task: docker:deps:dgoss\n        vars:\n          INSTALL_PATH: \"{{ .INSTALL_PATH }}\"\n          REQUIRE_SUDO: \"{{ .REQUIRE_SUDO }}\"\n\n  docker:deps:hadolint:\n    platforms:\n      - linux/amd64\n      - linux/arm64\n      - darwin/amd64\n      - darwin/arm64\n    vars:\n      HADOLINT_VERSION: v2.10.0\n    status:\n      - test -f \"{{ .INSTALL_PATH }}/hadolint\"\n    cmds:\n      - '{{ if eq .REQUIRE_SUDO \"true\" }}sudo {{ end }}curl -sSL https://github.com/hadolint/hadolint/releases/download/{{ .HADOLINT_VERSION }}/hadolint-{{ if eq OS \"linux\" }}Linux{{ end }}{{ if eq OS \"darwin\" }}Darwin{{ end }}-{{ if eq ARCH \"amd64\" }}x86_64{{ else }}{{ ARCH }}{{ end }} -o {{ .INSTALL_PATH }}/hadolint'\n      - '{{ if eq .REQUIRE_SUDO \"true\" }}sudo {{ end }}chmod +x {{ .INSTALL_PATH }}/hadolint'\n\n  docker:deps:goss:\n    platforms:\n      - linux\n      - darwin\n    vars:\n      GOSS_VERSION: v0.3.5\n    status:\n      - test -f \"{{ .INSTALL_PATH }}/goss\"\n    cmds:\n      - '{{ if eq .REQUIRE_SUDO \"true\" }}sudo {{ end }}curl -sSL https://github.com/aelsabbahy/goss/releases/download/{{ .GOSS_VERSION }}/goss-{{ OS }}-{{ ARCH }} -o {{ .INSTALL_PATH }}/goss'\n      - '{{ if eq .REQUIRE_SUDO \"true\" }}sudo {{ end }}chmod +x {{ .INSTALL_PATH }}/goss'\n\n  docker:deps:dgoss:\n    platforms:\n      - linux\n      - darwin\n    vars:\n      GOSS_VERSION: v0.3.5\n    status:\n      - test -f \"{{ .INSTALL_PATH }}/dgoss\"\n    cmds:\n      - '{{ if eq .REQUIRE_SUDO \"true\" }}sudo {{ end }}curl -sSL https://raw.githubusercontent.com/aelsabbahy/goss/{{ .GOSS_VERSION }}/extras/dgoss/dgoss -o {{ .INSTALL_PATH }}/dgoss'\n      - '{{ if eq .REQUIRE_SUDO \"true\" }}sudo {{ end }}chmod +x {{ .INSTALL_PATH }}/dgoss'\n"
        },
        {
          "name": "api-docs.yml",
          "type": "blob",
          "size": 53.611328125,
          "content": "---\nswagger: '2.0'\ninfo:\n  title: SEMAPHORE\n  description: Semaphore API\n  version: \"2.2.0\"\n\nhost: localhost:3000\n\nconsumes:\n  - application/json\nproduces:\n  - application/json\n  - text/plain; charset=utf-8\n\ntags:\n  - name: authentication\n    description: Authentication, Logout & API Tokens\n  - name: project\n    description: Everything related to a project\n  - name: user\n    description: User-related API\n  - name: integration\n    description: Integration API\n\nschemes:\n  - http\n  - https\n\nbasePath: /api\n\ndefinitions:\n\n  Pong:\n    type: string\n    x-example: pong\n\n  Login:\n    type: object\n    properties:\n      auth:\n        type: string\n        description: Username/Email address\n        x-example: user@semaphore.com\n      password:\n        type: string\n        format: password\n        description: Password\n\n  LoginMetadata:\n    type: object\n    properties:\n      oidc_providers:\n        type: array\n        description: List of OIDC providers\n        items:\n          type: object\n          properties:\n            id:\n              type: string\n              description: ID of the provider, used in the login URL\n              x-example: mysso\n            name:\n              type: string\n              description: Text to show on the login button\n              x-example: Sign in with MySSO\n\n  UserRequest:\n    type: object\n    properties:\n      name:\n        type: string\n        x-example: Integration Test User\n        example: Integration Test User\n      username:\n        type: string\n        x-example: test-user\n        example: test-user\n      email:\n        type: string\n        x-example: test@ansiblesemaphore.test\n        example: test@ansiblesemaphore.test\n      password:\n        type: string\n        format: password\n      alert:\n        type: boolean\n      admin:\n        type: boolean\n      external:\n        type: boolean\n\n  UserPutRequest:\n    type: object\n    properties:\n      name:\n        type: string\n        x-example: Integration Test User2\n        example: Integration Test User2\n      username:\n        type: string\n        x-example: test-user2\n        example: test-user2\n      email:\n        type: string\n        x-example: test2@ansiblesemaphore.test\n        example: test2@ansiblesemaphore.test\n      alert:\n        type: boolean\n      admin:\n        type: boolean\n\n  User:\n    type: object\n    properties:\n      id:\n        type: integer\n        minimum: 1\n      name:\n        type: string\n      username:\n        type: string\n      email:\n        type: string\n      created:\n        type: string\n      alert:\n        type: boolean\n      admin:\n        type: boolean\n      external:\n        type: boolean\n\n  ProjectUser:\n    type: object\n    properties:\n      id:\n        type: integer\n        minimum: 1\n      name:\n        type: string\n      username:\n        type: string\n      role:\n        type: string\n        enum: [owner, manager, task_runner, guest]\n\n  ProjectBackup:\n    type: object\n    example: {\"meta\":{\"name\":\"homelab\",\"alert\":true,\"alert_chat\":\"Test\",\"max_parallel_tasks\":0,\"type\":null},\"templates\":[{\"inventory\":\"Build\",\"repository\":\"Demo\",\"environment\":\"Empty\",\"name\":\"Build\",\"playbook\":\"build.yml\",\"arguments\":\"[]\",\"allow_override_args_in_task\":false,\"description\":\"Build Job\",\"vault_key\":null,\"type\":\"build\",\"start_version\":\"1.0.0\",\"build_template\":null,\"view\":\"Build\",\"autorun\":false,\"survey_vars\":[],\"suppress_success_alerts\":false,\"cron\":\"* * * * *\"}],\"repositories\":[{\"name\":\"Demo\",\"git_url\":\"https://github.com/semaphoreui/semaphore-demo.git\",\"git_branch\":\"main\",\"ssh_key\":\"None\"}],\"keys\":[{\"name\":\"None\",\"type\":\"none\"},{\"name\":\"Vault Password\",\"type\":\"login_password\"}],\"views\":[{\"title\":\"Build\",\"position\":0}],\"inventories\":[{\"name\":\"Build\",\"inventory\":\"\",\"ssh_key\":\"None\",\"become_key\":\"None\",\"type\":\"static\"},{\"name\":\"Dev\",\"inventory\":\"\",\"ssh_key\":\"None\",\"become_key\":\"None\",\"type\":\"file\"},{\"name\":\"Prod\",\"inventory\":\"\",\"ssh_key\":\"None\",\"become_key\":\"None\",\"type\":\"file\"}],\"environments\":[{\"name\":\"Empty\",\"password\":null,\"json\":\"{}\",\"env\":null}]}\n    properties:\n      meta:\n        type: object\n        properties:\n          name:\n            type: string\n          alert:\n            type: boolean\n          alert_chat:\n            type:\n              - string\n              - 'null'\n          max_parallel_tasks:\n            type: integer\n            minimum: 0\n          type:\n            type:\n              - string\n              - 'null'\n      templates:\n        type: array\n        items:\n          type: object\n          properties:\n            inventory:\n              type: string\n            repository:\n              type: string\n            environment:\n              type: string\n            view:\n              type: string\n            name:\n              type: string\n            playbook:\n              type: string\n            arguments:\n              type:\n                - string\n                - 'null'\n            description:\n              type: string\n            allow_override_args_in_task:\n              type: boolean\n            suppress_success_alerts:\n              type: boolean\n            cron:\n              type:\n                - string\n                - 'null'\n            build_template:\n              type:\n                - string\n                - 'null'\n            autorun:\n              type: boolean\n            survey_vars:\n              type:\n                - string\n                - 'null'\n            start_version:\n              type:\n                - string\n                - 'null'\n            type:\n              type: string\n            vault_key:\n              type:\n                - string\n                - 'null'\n      repositories:\n        type: array\n        items:\n          type: object\n          properties:\n            name:\n              type: string\n            git_url:\n              type: string\n            git_branch:\n              type: string\n            ssh_key:\n              type: string\n      keys:\n        type: array\n        items:\n          type: object\n          properties:\n            name:\n              type: string\n            type:\n              type: string\n              enum: [ssh, login_password, none]\n      views:\n        type: array\n        items:\n          type: object\n          properties:\n            name:\n              type: string\n            position:\n              type: integer\n              minimum: 0\n      inventories:\n        type: array\n        items:\n          type: object\n          properties:\n            name:\n              type: string\n            inventory:\n              type: string\n            ssh_key:\n              type:\n                - string\n                - 'null'\n            become_key:\n              type:\n                - string\n                - 'null'\n            type:\n              type: string\n              enum: [static, static-yaml, file]\n      environments:\n        type: array\n        items:\n          type: object\n          properties:\n            name:\n              type: string\n            password:\n              type:\n                - string\n                - 'null'\n            json:\n              type: string\n            env:\n              type:\n                - string\n                - 'null'\n\n  APIToken:\n    type: object\n    properties:\n      id:\n        type: string\n      created:\n        type: string\n#        pattern: ^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-[0-9]{2}T\\d{2}:\\d{2}:\\d{2}Z$\n      expired:\n        type: boolean\n      user_id:\n        type: integer\n        minimum: 1\n\n  ProjectRequest:\n    type: object\n    properties:\n      name:\n        type: string\n        example: Test\n      alert:\n        type: boolean\n      alert_chat:\n        type:\n          - string\n          - 'null'\n        example: Test\n      max_parallel_tasks:\n        type: integer\n        minimum: 0\n      type:\n        type:\n          - string\n          - 'null'\n      demo:\n        description: Create Demo project resources?\n        type: boolean\n  Project:\n    type: object\n    properties:\n      id:\n        type: integer\n        minimum: 1\n      name:\n        type: string\n        example: Test\n      created:\n        type: string\n#        pattern: ^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-[0-9]{2}T\\d{2}:\\d{2}:\\d{2}Z$\n      alert:\n        type: boolean\n      alert_chat:\n        type:\n          - string\n          - 'null'\n        example: Test\n      max_parallel_tasks:\n        type: integer\n        minimum: 0\n      type:\n        type:\n          - string\n          - 'null'\n\n  AccessKeyRequest:\n    type: object\n    properties:\n      id:\n        type: integer\n      name:\n        type: string\n        x-example: None\n        example: None\n      type:\n        type: string\n        enum: [none, ssh, login_password]\n        x-example: none\n      project_id:\n        type: integer\n        minimum: 1\n        x-example: 2\n      override_secret:\n        type: boolean\n      login_password:\n        type: object\n        properties:\n          password:\n            type: string\n            x-example: password\n            example: password\n          login:\n            type: string\n            x-example: username\n            example: username\n      ssh:\n        type: object\n        properties:\n          login:\n            type: string\n            x-example: user\n            example: user\n          passphrase:\n            type: string\n            x-example: passphrase\n            example: passphrase\n          private_key:\n            type: string\n            x-example: private key\n            example: private key\n\n  AccessKey:\n    type: object\n    properties:\n      id:\n        type: integer\n      name:\n        type: string\n        example: Test\n      type:\n        type: string\n        enum: [none, ssh, login_password]\n      project_id:\n        type: integer\n\n  EnvironmentSecret:\n    type: object\n    properties:\n      id:\n        type: integer\n      name:\n        type: string\n      type:\n        type: string\n        enum: [env, var]\n\n  EnvironmentSecretRequest:\n    type: object\n    properties:\n      id:\n        type: integer\n      name:\n        type: string\n      secret:\n        type: string\n      type:\n        type: string\n        enum: [env, var]\n      operation:\n        type: string\n        enum: [create, update, delete]\n\n  EnvironmentRequest:\n    type: object\n    properties:\n      id:\n        type: integer\n        example: 1\n      name:\n        type: string\n        example: Test\n      project_id:\n        type: integer\n        minimum: 1\n      password:\n        type: string\n      json:\n        type: string\n        example: '{}'\n      env:\n        type: string\n        example: '{}'\n      secrets:\n        type: array\n        items:\n          $ref: '#/definitions/EnvironmentSecretRequest'\n\n  Environment:\n    type: object\n    properties:\n      id:\n        type: integer\n        minimum: 1\n      name:\n        type: string\n        example: Test\n      project_id:\n        type: integer\n        minimum: 1\n      password:\n        type: string\n      json:\n        type: string\n        example: '{}'\n      env:\n        type: string\n        example: '{}'\n      secrets:\n        type: array\n        items:\n          $ref: '#/definitions/EnvironmentSecret'\n\n  InventoryRequest:\n    type: object\n    properties:\n      id:\n        type: integer\n      name:\n        type: string\n        example: Test\n      project_id:\n        type: integer\n        minimum: 1\n      inventory:\n        type: string\n      ssh_key_id:\n        type: integer\n        minimum: 1\n      become_key_id:\n        type: integer\n        minimum: 1\n      repository_id:\n        type: integer\n        minimum: 1\n      type:\n        type: string\n        enum: [static, static-yaml, file, terraform-workspace]\n\n  Inventory:\n    type: object\n    properties:\n      id:\n        type: integer\n      name:\n        type: string\n        example: Test\n      project_id:\n        type: integer\n      inventory:\n        type: string\n      ssh_key_id:\n        type: integer\n      become_key_id:\n        type: integer\n      repository_id:\n        type: integer\n      type:\n        type: string\n        enum: [static, static-yaml, file, terraform-workspace]\n\n  Integration:\n    type: object\n    properties:\n      id:\n        type: integer\n      name:\n        type: string\n        example: deploy\n      project_id:\n        type: integer\n        minimum: 1\n      template_id:\n        type: integer\n        minimum: 1\n\n  IntegrationRequest:\n    type: object\n    properties:\n      name:\n        type: string\n        example: deploy\n      project_id:\n        type: integer\n      template_id:\n        type: integer\n\n  IntegrationExtractValueRequest:\n    type: object\n    properties:\n      name:\n        type: string\n        example: deploy\n      value_source:\n        type: string\n        enum: [body, header]\n      body_data_type:\n        type: string\n        enum: [json, xml, string]\n      key:\n        type: string\n        example: key\n      variable:\n        type: string\n        example: variable\n\n  IntegrationExtractValue:\n    type: object\n    properties:\n      id:\n        type: integer\n      name:\n        type: string\n        example: extract this value\n      value_source:\n        type: string\n        enum: [body, header]\n      body_data_type:\n        type: string\n        enum: [json, xml, string]\n      key:\n        type: string\n        example: key\n      variable:\n        type: string\n        example: variable\n      integration_id:\n        type: integer\n\n  IntegrationMatcherRequest:\n    type: object\n    properties:\n      name:\n        type: string\n        example: deploy\n      match_type:\n        type: string\n        enum: [body, header]\n      method:\n        type: string\n        enum: [equals, unequals, contains]\n      body_data_type:\n        type: string\n        enum: [json, xml, string]\n      key:\n        type: string\n        example: key\n      value:\n        type: string\n        example: value\n\n  IntegrationMatcher:\n    type: object\n    properties:\n      id:\n        type: integer\n      integration_id:\n        type: integer\n      name:\n        type: string\n        example: deploy\n      match_type:\n        type: string\n        enum: [body, header]\n      method:\n        type: string\n        enum: [equals, unequals, contains]\n      body_data_type:\n        type: string\n        enum: [json, xml, string]\n      key:\n        type: string\n        example: key\n      value:\n        type: string\n        example: value\n\n  RepositoryRequest:\n    type: object\n    properties:\n      id:\n        type: integer\n      name:\n        type: string\n        example: Test\n      project_id:\n        type: integer\n      git_url:\n        type: string\n        example: git@example.com\n      git_branch:\n        type: string\n        example: master\n      ssh_key_id:\n        type: integer\n  Repository:\n    type: object\n    properties:\n      id:\n        type: integer\n      name:\n        type: string\n        example: Test\n      project_id:\n        type: integer\n      git_url:\n        type: string\n        example: git@example.com\n      git_branch:\n        type: string\n        example: master\n      ssh_key_id:\n        type: integer\n\n  Task:\n    type: object\n    properties:\n      id:\n        type: integer\n        example: 23\n      template_id:\n        type: integer\n      status:\n        type: string\n      debug:\n        type: boolean\n      playbook:\n        type: string\n      environment:\n        type: string\n      secret:\n        type: string\n      limit:\n        type: string\n      git_branch:\n        type:\n          - string\n          - 'null'\n\n  TaskOutput:\n    type: object\n    properties:\n      task_id:\n        type: integer\n        example: 23\n      time:\n        type: string\n        format: date-time\n      output:\n        type: string\n\n  TemplateRequest:\n    type: object\n    properties:\n      id:\n        type: integer\n        example: 1\n      project_id:\n        type: integer\n        minimum: 1\n      inventory_id:\n        type: integer\n        minimum: 1\n      repository_id:\n        type: integer\n        minimum: 1\n      environment_id:\n        type: integer\n        minimum: 1\n      view_id:\n        type: integer\n        minimum: 1\n      vaults:\n        type: array\n        items:\n          $ref: '#/definitions/TemplateVault'\n      name:\n        type: string\n        example: Test\n      playbook:\n        type: string\n        example: test.yml\n      arguments:\n        type: string\n        example: '[]'\n      description:\n        type: string\n        example: Hello, World!\n      allow_override_args_in_task:\n        type: boolean\n        example: false\n      limit:\n        type: string\n        example: ''\n      suppress_success_alerts:\n        type: boolean\n      app:\n        type: string\n        example: ansible\n      git_branch:\n        type: string\n        example: main\n      survey_vars:\n        type: array\n        items:\n          $ref: \"#/definitions/TemplateSurveyVar\"\n      type:\n        type: string\n        enum: [\"\", build, deploy]\n      start_version:\n        type: string\n      build_template_id:\n        type: integer\n      autorun:\n        type: boolean\n\n  Template:\n    type: object\n    properties:\n      id:\n        type: integer\n        minimum: 1\n      project_id:\n        type: integer\n        minimum: 1\n      inventory_id:\n        type: integer\n        minimum: 1\n      repository_id:\n        type: integer\n      environment_id:\n        type: integer\n        minimum: 1\n      view_id:\n        type: integer\n        minimum: 1\n      name:\n        type: string\n        example: Test\n      playbook:\n        type: string\n        example: test.yml\n      arguments:\n        type: string\n        example: '[]'\n      description:\n        type: string\n        example: Hello, World!\n      allow_override_args_in_task:\n        type: boolean\n        example: false\n      suppress_success_alerts:\n        type: boolean\n      app:\n        type: string\n      git_branch:\n        type: string\n        example: main\n      type:\n        type: string\n        enum: [\"\", build, deploy]\n      start_version:\n        type:\n          - string\n          - 'null'\n      build_template_id:\n        type:\n          - integer\n          - 'null'\n      autorun:\n        type: boolean\n      survey_vars:\n        type: array\n        items:\n          $ref: \"#/definitions/TemplateSurveyVar\"\n      vaults:\n        type: array\n        items:\n          $ref: \"#/definitions/TemplateVault\"\n\n  TemplateSurveyVar:\n    type: object\n    properties:\n      name:\n        type: string\n      title:\n        type: string\n      description:\n        type: string\n      type:\n        type: string\n        enum: [\"\", int, enum, secret] # String => \"\", Integer => \"int\"\n        example: int\n      required:\n        type: boolean\n      values:\n        type: array\n        items:\n          $ref: \"#/definitions/TemplateSurveyVarValue\"\n\n  TemplateSurveyVarValue:\n    type: object\n    properties:\n      name:\n        type: string\n      value:\n        type: string\n\n  TemplateVault:\n    type: object\n    properties:\n      id:\n        type: integer\n      name:\n        type: string\n        example: default\n      type:\n        type: string\n        enum: [password, script]\n        example: script\n      vault_key_id:\n        type:\n          - integer\n          - 'null'\n      script:\n        type:\n          - string\n          - 'null'\n        example: path/to/script-client.py\n\n  ScheduleRequest:\n    type: object\n    properties:\n      id:\n        type: integer\n      cron_format:\n        type: string\n        x-example: \"* * * 1 *\"\n        example: \"* * * 1 *\"\n      project_id:\n        type: integer\n      template_id:\n        type: integer\n      name:\n        type: string\n      active:\n        type: boolean\n\n  Schedule:\n    type: object\n    properties:\n      id:\n        type: integer\n      cron_format:\n        type: string\n      project_id:\n        type: integer\n      template_id:\n        type: integer\n      name:\n        type: string\n      active:\n        type: boolean\n\n  ViewRequest:\n    type: object\n    properties:\n      title:\n        type: string\n        example: Test\n      project_id:\n        type: integer\n        minimum: 1\n      position:\n        type: integer\n        minimum: 1\n  View:\n    type: object\n    properties:\n      id:\n        type: integer\n      title:\n        type: string\n      project_id:\n        type: integer\n      position:\n        type: integer\n\n  Runner:\n    type: object\n    properties:\n      token:\n        type: string\n\n  Event:\n    type: object\n    properties:\n      project_id:\n        type: integer\n      user_id:\n        type: integer\n      object_id:\n        type:\n          - integer\n          - 'null'\n      object_type:\n        type:\n          - string\n          - 'null'\n      description:\n        type: string\n\n  InfoType:\n    type: object\n    properties:\n      version:\n        type: string\n      updateBody:\n        type: string\n      update:\n        type: object\n        properties:\n          tag_name:\n            type: string\n\nsecurityDefinitions:\n  cookie:\n    type: apiKey\n    name: Cookie\n    in: header\n  bearer:\n    type: apiKey\n    name: Authorization\n    in: header\n\nsecurity:\n  - bearer: []\n  - cookie: []\n\nparameters:\n  project_id:\n    name: project_id\n    description: Project ID\n    in: path\n    type: integer\n    required: true\n    x-example: 1\n  user_id:\n    name: user_id\n    description: User ID\n    in: path\n    type: integer\n    required: true\n    x-example: 2\n  key_id:\n    name: key_id\n    description: key ID\n    in: path\n    type: integer\n    required: true\n    x-example: 3\n  repository_id:\n    name: repository_id\n    description: repository ID\n    in: path\n    type: integer\n    required: true\n    x-example: 4\n  inventory_id:\n    name: inventory_id\n    description: inventory ID\n    in: path\n    type: integer\n    required: true\n    x-example: 5\n  environment_id:\n    name: environment_id\n    description: environment ID\n    in: path\n    type: integer\n    required: true\n    x-example: 6\n  template_id:\n    name: template_id\n    description: template ID\n    in: path\n    type: integer\n    required: true\n    x-example: 7\n  task_id:\n    name: task_id\n    description: task ID\n    in: path\n    type: integer\n    required: true\n    x-example: 8\n  schedule_id:\n    name: schedule_id\n    description: schedule ID\n    in: path\n    type: integer\n    required: true\n    x-example: 9\n  view_id:\n    name: view_id\n    description: view ID\n    in: path\n    type: integer\n    required: true\n    x-example: 10\n  integration_id:\n    name: integration_id\n    description: integration ID\n    in: path\n    type: integer\n    required: true\n    x-example: 11\n  extractvalue_id:\n    name: extractvalue_id\n    description: extractValue ID\n    in: path\n    type: integer\n    required: true\n    x-example: 12\n  matcher_id:\n    name: matcher_id\n    description: matcher ID\n    in: path\n    type: integer\n    required: true\n    x-example: 13\n\npaths:\n  /ping:\n    get:\n      summary: PING test\n      produces:\n        - text/plain\n      security: []   # No security\n      responses:\n        200:\n          description: Successful \"PONG\" reply\n          schema:\n            $ref: \"#/definitions/Pong\"\n          headers:\n            content-type:\n              type: string\n              x-example: text/plain; charset=utf-8\n\n  /ws:\n    get:\n      summary: Websocket handler\n      schemes:\n        - ws\n        - wss\n      responses:\n        200:\n          description: OK\n        401:\n          description: not authenticated\n\n  /info:\n    get:\n      summary: Fetches information about semaphore\n      description: you must be authenticated to use this\n      responses:\n        200:\n          description: ok\n          schema:\n            $ref: \"#/definitions/InfoType\"\n\n  # Authentication\n  /auth/login:\n    get:\n      tags:\n        - authentication\n      summary: Fetches login metadata\n      description: Fetches metadata for login, such as available OIDC providers\n      security: []\n      responses:\n        200:\n          description: Login metadata\n          schema:\n            $ref: \"#/definitions/LoginMetadata\"\n    post:\n      tags:\n        - authentication\n      summary: Performs Login\n      description: Upon success you will be logged in\n      security: []   # No security\n      parameters:\n        - name: Login Body\n          in: body\n          required: true\n          schema:\n            $ref: '#/definitions/Login'\n      responses:\n        204:\n          description: You are logged in\n        400:\n          description: something in body is missing / is invalid\n\n  /auth/logout:\n    post:\n      tags:\n        - authentication\n      summary: Destroys current session\n      responses:\n        204:\n          description: Your session was successfully nuked\n\n  /auth/oidc/{provider_id}/login:\n    parameters:\n      - name: provider_id\n        in: path\n        type: string\n        required: true\n        x-example: \"mysso\"\n    get:\n      tags:\n        - authentication\n      summary: Begin OIDC authentication flow and redirect to OIDC provider\n      description: The user agent is redirected to this endpoint when chosing to sign in via OIDC\n      responses:\n        302:\n          description: Redirection to the OIDC provider on success, or to the login page on error\n\n  /auth/oidc/{provider_id}/redirect:\n    parameters:\n      - name: provider_id\n        in: path\n        type: string\n        required: true\n        x-example: \"mysso\"\n    get:\n      tags:\n        - authentication\n      summary: Finish OIDC authentication flow, upon succes you will be logged in\n      description: The user agent is redirected here by the OIDC provider to complete authentication\n      responses:\n        302:\n          description: Redirection to the Semaphore root URL on success, or to the login page on error\n\n  # User Tokens\n  /user/:\n    get:\n      tags:\n        - user\n      summary: Fetch logged in user\n      responses:\n        200:\n          description: User\n          schema:\n            $ref: \"#/definitions/User\"\n\n  /user/tokens:\n    get:\n      tags:\n        - authentication\n        - user\n      summary: Fetch API tokens for user\n      responses:\n        200:\n          description: API Tokens\n          schema:\n            type: array\n            items:\n              $ref: \"#/definitions/APIToken\"\n    post:\n      tags:\n        - authentication\n        - user\n      summary: Create an API token\n      responses:\n        201:\n          description: API Token\n          schema:\n            $ref: \"#/definitions/APIToken\"\n\n  /user/tokens/{api_token_id}:\n    parameters:\n      - name: api_token_id\n        in: path\n        type: string\n        required: true\n        x-example: \"kwofd61g93-yuqvex8efmhjkgnbxlo8mp1tin6spyhu=\"\n    delete:\n      tags:\n        - authentication\n        - user\n      summary: Expires API token\n      responses:\n        204:\n          description: Expired API Token\n\n  # User Profiles\n  /users:\n    get:\n      tags:\n        - user\n      summary: Fetches all users\n      responses:\n        200:\n          description: Users\n          schema:\n            type: array\n            items:\n              $ref: \"#/definitions/User\"\n    post:\n      tags:\n        - user\n      summary: Creates a user\n      consumes:\n        - application/json\n      parameters:\n        - name: User\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/UserRequest\"\n      responses:\n        400:\n          description: User creation failed\n        201:\n          description: User created\n          schema:\n            $ref: \"#/definitions/User\"\n\n  /users/{user_id}/:\n    parameters:\n      - $ref: \"#/parameters/user_id\"\n    get:\n      tags:\n        - user\n      summary: Fetches a user profile\n      responses:\n        200:\n          description: User profile\n          schema:\n            $ref: \"#/definitions/User\"\n    put:\n      tags:\n        - user\n      summary: Updates user details\n      consumes:\n        - application/json\n      parameters:\n        - name: User\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/UserPutRequest\"\n      responses:\n        204:\n          description: User Updated\n\n    delete:\n      tags:\n        - user\n      summary: Deletes user\n      responses:\n        204:\n          description: User deleted\n\n  /users/{user_id}/password:\n    parameters:\n      - $ref: \"#/parameters/user_id\"\n    post:\n      tags:\n        - user\n      summary: Updates user password\n      consumes:\n        - application/json\n      parameters:\n        - name: Password\n          in: body\n          required: true\n          schema:\n            type: object\n            properties:\n              password:\n                type: string\n                format: password\n      responses:\n        204:\n          description: Password updated\n\n  # Projects\n  /projects:\n    get:\n      tags:\n        - projects\n      summary: Get projects\n      responses:\n        200:\n          description: List of projects\n          schema:\n            type: array\n            items:\n              $ref: \"#/definitions/Project\"\n    post:\n      tags:\n        - projects\n      summary: Create a new project\n      consumes:\n        - application/json\n      parameters:\n        - name: Project\n          in: body\n          required: true\n          schema:\n            $ref: '#/definitions/ProjectRequest'\n      responses:\n        201:\n          description: Created project\n          schema:\n            $ref: \"#/definitions/Project\"\n  /projects/restore:\n    post:\n      tags:\n        - projects\n      summary: Restore Project\n      consumes:\n        - application/json\n      parameters:\n        - name: Backup\n          in: body\n          required: true\n          schema:\n            $ref: '#/definitions/ProjectBackup'\n      responses:\n        200:\n          description: Created project\n          schema:\n            $ref: \"#/definitions/Project\"\n\n  /events:\n    get:\n      summary: Get Events related to Semaphore and projects you are part of\n      responses:\n        200:\n          description: Array of events in chronological order\n          schema:\n            type: array\n            items:\n              $ref: '#/definitions/Event'\n  /events/last:\n    get:\n      summary: Get last 200 Events related to Semaphore and projects you are part of\n      responses:\n        200:\n          description: Array of events in chronological order\n          schema:\n            type: array\n            items:\n              $ref: '#/definitions/Event'\n\n  /project/{project_id}/:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n    get:\n      tags:\n        - project\n      summary: Fetch project\n      responses:\n        200:\n          description: Project\n          schema:\n            $ref: \"#/definitions/Project\"\n    put:\n      tags:\n        - project\n      summary: Update project\n      parameters:\n        - name: Project\n          in: body\n          required: true\n          schema:\n            allOf:\n              - $ref: '#/definitions/ProjectRequest'\n              - properties:\n                  id:\n                    type: integer\n                    minimum: 1\n      responses:\n        204:\n          description: Project saved\n    delete:\n      tags:\n        - project\n      summary: Delete project\n      responses:\n        204:\n          description: Project deleted\n\n  /project/{project_id}/backup:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n    get:\n      tags:\n        - project\n      summary: Backup A Project\n      responses:\n        200:\n          description: Backup\n          schema:\n            $ref: '#/definitions/ProjectBackup'\n\n  /project/{project_id}/role:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n    get:\n      tags:\n        - project\n      summary: Fetch permissions of the current user for project\n      responses:\n        200:\n          description: Permissions\n          schema:\n            type: object\n            properties:\n              role:\n                type: string\n                example: owner\n              permissions:\n                type: number\n                example: 0\n\n\n  /project/{project_id}/events:\n    parameters:\n      - $ref: '#/parameters/project_id'\n    get:\n      tags:\n        - project\n      summary: Get Events related to this project\n      responses:\n        200:\n          description: Array of events in chronological order\n          schema:\n            type: array\n            items:\n              $ref: '#/definitions/Event'\n\n  # User management\n  /project/{project_id}/users:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n    get:\n      tags:\n        - project\n      summary: Get users linked to project\n      parameters:\n        - name: sort\n          in: query\n          required: true\n          type: string\n          enum: [name, username, email, role]\n          description: sorting name\n          x-example: email\n        - name: order\n          in: query\n          required: true\n          type: string\n          enum: [asc, desc]\n          description: ordering manner\n          x-example: desc\n      responses:\n        200:\n          description: Users\n          schema:\n            type: array\n            items:\n              $ref: \"#/definitions/ProjectUser\"\n    post:\n      tags:\n        - project\n      summary: Link user to project\n      parameters:\n        - name: User\n          in: body\n          required: true\n          schema:\n            type: object\n            properties:\n              user_id:\n                type: integer\n                minimum: 2\n              role:\n                type: string\n                enum: [owner, manager, task_runner, guest]\n                example: owner\n      responses:\n        204:\n          description: User added\n  /project/{project_id}/users/{user_id}:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n      - $ref: \"#/parameters/user_id\"\n    delete:\n      tags:\n        - project\n      summary: Removes user from project\n      responses:\n        204:\n          description: User removed\n    put:\n      parameters:\n        - name: Project User\n          in: body\n          required: true\n          schema:\n            type: object\n            properties:\n              role:\n                type: string\n                enum: [owner, manager, task_runner, guest]\n                example: owner\n      summary: Update user role\n      tags:\n        - project\n      responses:\n        204:\n          description: User updated\n\n  /project/{project_id}/integrations:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n    get:\n      tags:\n        - project\n      summary: get all integrations\n      responses:\n        200:\n          description: integration\n          schema:\n            type: array\n            items:\n              $ref: \"#/definitions/Integration\"\n    post:\n      summary: create a new integration\n      tags:\n        - project\n      parameters:\n        - name: Integration\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/IntegrationRequest\"\n      responses:\n        201:\n          description: Integration Created\n          schema:\n            $ref: \"#/definitions/Integration\"\n  /project/{project_id}/integrations/{integration_id}:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n      - $ref: \"#/parameters/integration_id\"\n    put:\n      tags:\n        - project\n      summary: Update Integration\n      parameters:\n        - name: Integration\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/IntegrationRequest\"\n      responses:\n        204:\n          description: Integration updated\n    delete:\n      tags:\n        - project\n      summary: Remove integration\n      responses:\n        204:\n          description: integration removed\n  /project/{project_id}/integrations/{integration_id}/values:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n      - $ref: \"#/parameters/integration_id\"\n    get:\n      tags:\n        - integration\n      summary: Get Integration Extracted Values linked to integration extractor\n      responses:\n        200:\n          description: Integration Extracted Value\n          schema:\n            type: array\n            items:\n              $ref: \"#/definitions/IntegrationExtractValue\"\n    post:\n      tags:\n        - project\n      summary: Add Integration Extracted Value\n      parameters:\n        - name: Integration Extracted Value\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/IntegrationExtractValue\"\n      responses:\n        201:\n          description: Integration Extract Value Created\n        400:\n          description: Bad Integration Extract Value params\n  /project/{project_id}/integrations/{integration_id}/values/{extractvalue_id}:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n      - $ref: \"#/parameters/integration_id\"\n      - $ref: \"#/parameters/extractvalue_id\"\n    put:\n      tags:\n        - integration\n      summary: Updates Integration ExtractValue\n      parameters:\n        - name: Integration ExtractValue\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/IntegrationExtractValueRequest\"\n      responses:\n        204:\n          description: Integration Extract Value updated\n        400:\n          description: Bad integration extract value parameter\n    delete:\n      tags:\n        - integration\n      summary: Removes integration extract value\n      responses:\n        204:\n          description: integration extract value removed\n  /project/{project_id}/integrations/{integration_id}/matchers:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n      - $ref: \"#/parameters/integration_id\"\n    get:\n      tags:\n        - integration\n      summary: Get Integration Matcher linked to integration extractor\n      responses:\n        200:\n          description: Integration Matcher\n          schema:\n            type: array\n            items:\n              $ref: \"#/definitions/IntegrationMatcher\"\n    post:\n      tags:\n        - project\n      summary: Add Integration Matcher\n      parameters:\n        - name: Integration Matcher\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/IntegrationMatcher\"\n      responses:\n        200:\n          description: Integration Matcher Created\n        400:\n          description: Bad Integration Matcher params\n  /project/{project_id}/integrations/{integration_id}/matchers/{matcher_id}:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n      - $ref: \"#/parameters/integration_id\"\n      - $ref: \"#/parameters/matcher_id\"\n    put:\n      tags:\n        - integration\n      summary: Updates Integration Matcher\n      parameters:\n        - name: Integration Matcher\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/IntegrationMatcherRequest\"\n      responses:\n        204:\n          description: Integration Matcher updated\n        400:\n          description: Bad integration matcher parameter\n    delete:\n      tags:\n        - integration\n      summary: Removes integration matcher\n      responses:\n        204:\n          description: integration matcher removed\n\n  # project access keys\n  /project/{project_id}/keys:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n    get:\n      tags:\n        - project\n      summary: Get access keys linked to project\n      parameters:\n        # TODO - the space in this parameter name results in a dredd warning\n        - name: Key type\n          in: query\n          required: false\n          type: string\n          enum: [none, ssh, login_password]\n          description: Filter by key type\n          x-example: none\n        - name: sort\n          in: query\n          required: true\n          type: string\n          enum: [name, type]\n          description: sorting name\n          x-example: type\n        - name: order\n          in: query\n          required: true\n          type: string\n          enum: [asc, desc]\n          description: ordering manner\n          x-example: asc\n      responses:\n        200:\n          description: Access Keys\n          schema:\n            type: array\n            items:\n              $ref: \"#/definitions/AccessKey\"\n    post:\n      tags:\n        - project\n      summary: Add access key\n      parameters:\n        - name: Access Key\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/AccessKeyRequest\"\n      responses:\n        201:\n          description: Access Key created\n          schema:\n            $ref: \"#/definitions/AccessKey\"\n        400:\n          description: Bad type\n  /project/{project_id}/keys/{key_id}:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n      - $ref: \"#/parameters/key_id\"\n    put:\n      tags:\n        - project\n      summary: Updates access key\n      parameters:\n        - name: Access Key\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/AccessKeyRequest\"\n      responses:\n        204:\n          description: Key updated\n        400:\n          description: Bad type\n    delete:\n      tags:\n        - project\n      summary: Removes access key\n      responses:\n        204:\n          description: access key removed\n\n  # project repositories\n  /project/{project_id}/repositories:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n    get:\n      tags:\n        - project\n      summary: Get repositories\n      parameters:\n        - name: sort\n          in: query\n          required: true\n          type: string\n          enum: [name, git_url, ssh_key]\n          description: sorting name\n        - name: order\n          in: query\n          required: true\n          type: string\n          format: asc/desc\n          enum: [asc, desc]\n          description: ordering manner\n      responses:\n        200:\n          description: repositories\n          schema:\n            type: array\n            items:\n              $ref: \"#/definitions/Repository\"\n    post:\n      tags:\n        - project\n      summary: Add repository\n      parameters:\n        - name: Repository\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/RepositoryRequest\"\n      responses:\n        201:\n          description: Repository created\n          schema:\n              $ref: \"#/definitions/Repository\"\n\n  /project/{project_id}/repositories/{repository_id}:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n      - $ref: \"#/parameters/repository_id\"\n    get:\n      tags:\n          - project\n      summary: Get repository\n      responses:\n        200:\n          description: repository object\n          schema:\n              $ref: \"#/definitions/Repository\"\n    put:\n      tags:\n        - project\n      summary: Updates repository\n      parameters:\n        - name: Repository\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/RepositoryRequest\"\n      responses:\n        204:\n          description: Repository updated\n        400:\n          description: Bad request\n    delete:\n      tags:\n        - project\n      summary: Removes repository\n      responses:\n        204:\n          description: repository removed\n\n  # project inventory\n  /project/{project_id}/inventory:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n    get:\n      tags:\n        - project\n      summary: Get inventory\n      parameters:\n        - name: sort\n          in: query\n          required: true\n          type: string\n          description: sorting name\n          enum: [name, type]\n        - name: order\n          in: query\n          required: true\n          type: string\n          description: ordering manner\n          enum: [asc, desc]\n      responses:\n        200:\n          description: inventory\n          schema:\n            type: array\n            items:\n              $ref: \"#/definitions/Inventory\"\n    post:\n      tags:\n        - project\n      summary: create inventory\n      parameters:\n        - name: Inventory\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/InventoryRequest\"\n      responses:\n        201:\n          description: inventory created\n          schema:\n            $ref: \"#/definitions/Inventory\"\n  /project/{project_id}/inventory/{inventory_id}:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n      - $ref: \"#/parameters/inventory_id\"\n    get:\n      tags:\n        - project\n      summary: Get inventory\n      responses:\n        200:\n          description: inventory object\n          schema:\n            $ref: \"#/definitions/Inventory\"\n    put:\n      tags:\n        - project\n      summary: Updates inventory\n      parameters:\n        - name: Inventory\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/InventoryRequest\"\n      responses:\n        204:\n          description: Inventory updated\n    delete:\n      tags:\n        - project\n      summary: Removes inventory\n      responses:\n        204:\n          description: inventory removed\n\n  # project environment\n  /project/{project_id}/environment:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n    get:\n      tags:\n        - project\n      summary: Get environment\n      parameters:\n        - name: sort\n          in: query\n          required: true\n          type: string\n          format: name\n          description: sorting name\n          x-example: name\n        - name: order\n          in: query\n          required: true\n          type: string\n          format: asc/desc\n          description: ordering manner\n          x-example: desc\n      responses:\n        200:\n          description: environment\n          schema:\n            type: array\n            items:\n              $ref: \"#/definitions/Environment\"\n    post:\n      tags:\n        - project\n      summary: Add environment\n      parameters:\n        - name: environment\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/EnvironmentRequest\"\n      responses:\n        201:\n          description: Environment created\n          schema:\n            $ref: \"#/definitions/Environment\"\n  /project/{project_id}/environment/{environment_id}:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n      - $ref: \"#/parameters/environment_id\"\n    get:\n      tags:\n        - project\n      summary: Get environment\n      responses:\n        200:\n          description: environment object\n          schema:\n              $ref: \"#/definitions/Environment\"\n    put:\n      tags:\n        - project\n      summary: Update environment\n      parameters:\n        - name: environment\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/EnvironmentRequest\"\n      responses:\n        204:\n          description: Environment Updated\n    delete:\n      tags:\n        - project\n      summary: Removes environment\n      responses:\n        204:\n          description: environment removed\n\n  # project templates\n  /project/{project_id}/templates:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n    get:\n      tags:\n        - project\n      summary: Get template\n      parameters:\n        - name: sort\n          in: query\n          required: true\n          type: string\n          description: sorting name\n          enum: [name, playbook, ssh_key, inventory, environment, repository]\n        - name: order\n          in: query\n          required: true\n          type: string\n          description: ordering manner\n          enum: [asc, desc]\n      responses:\n        200:\n          description: template\n          schema:\n            type: array\n            items:\n              $ref: \"#/definitions/Template\"\n              properties:\n                survey_vars:\n                  type: array\n                  items:\n                    $ref: \"#/definitions/TemplateSurveyVar\"\n                last_task:\n                  $ref: \"#/definitions/Task\"\n    post:\n      tags:\n        - project\n      summary: create template\n      parameters:\n        - name: template\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/TemplateRequest\"\n      responses:\n        201:\n          description: template created\n          schema:\n            $ref: \"#/definitions/Template\"\n  /project/{project_id}/templates/{template_id}:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n      - $ref: \"#/parameters/template_id\"\n    get:\n      tags:\n        - project\n      summary: Get template\n      responses:\n        200:\n          description: template object\n          schema:\n            $ref: \"#/definitions/Template\"\n    put:\n      tags:\n        - project\n      summary: Updates template\n      parameters:\n        - name: template\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/TemplateRequest\"\n      responses:\n        204:\n          description: template updated\n    delete:\n      tags:\n        - project\n      summary: Removes template\n      responses:\n        204:\n          description: template removed\n\n\n  # project schedules\n  /project/{project_id}/schedules/{schedule_id}:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n      - $ref: \"#/parameters/schedule_id\"\n    get:\n      tags:\n        - schedule\n      summary: Get schedule\n      responses:\n        200:\n          description: Schedule\n          schema:\n            $ref: \"#/definitions/Schedule\"\n    delete:\n      tags:\n        - schedule\n      summary: Deletes schedule\n      responses:\n        204:\n          description: schedule deleted\n    put:\n      tags:\n        - schedule\n      summary: Updates schedule\n      parameters:\n        - name: schedule\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/ScheduleRequest\"\n      responses:\n        204:\n          description: schedule updated\n\n  /project/{project_id}/schedules:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n    post:\n      tags:\n        - schedule\n      summary: create schedule\n      parameters:\n        - name: schedule\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/ScheduleRequest\"\n      responses:\n        201:\n          description: schedule created\n          schema:\n            $ref: \"#/definitions/Schedule\"\n\n  # project views\n  /project/{project_id}/views:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n    get:\n      tags:\n        - project\n      summary: Get view\n      responses:\n        200:\n          description: view\n          schema:\n            type: array\n            items:\n              $ref: \"#/definitions/View\"\n    post:\n      tags:\n        - project\n      summary: create view\n      parameters:\n        - name: view\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/ViewRequest\"\n      responses:\n        201:\n          description: view created\n          schema:\n            $ref: \"#/definitions/View\"\n  /project/{project_id}/views/{view_id}:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n      - $ref: \"#/parameters/view_id\"\n    get:\n      tags:\n        - project\n      summary: Get view\n      responses:\n        200:\n          description: view object\n          schema:\n            $ref: \"#/definitions/View\"\n    put:\n      tags:\n        - project\n      summary: Updates view\n      parameters:\n        - name: view\n          in: body\n          required: true\n          schema:\n            $ref: \"#/definitions/ViewRequest\"\n      responses:\n        204:\n          description: view updated\n    delete:\n      tags:\n        - project\n      summary: Removes view\n      responses:\n        204:\n          description: view removed\n\n\n  # tasks\n  /project/{project_id}/tasks:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n    get:\n      tags:\n        - project\n      summary: Get Tasks related to current project\n      responses:\n        200:\n          description: Array of tasks in chronological order\n          schema:\n            type: array\n            items:\n              $ref: '#/definitions/Task'\n    post:\n      tags:\n        - project\n      summary: Starts a job\n      parameters:\n        - name: task\n          in: body\n          required: true\n          schema:\n            type: object\n            properties:\n              template_id:\n                type: integer\n              debug:\n                type: boolean\n              dry_run:\n                type: boolean\n              diff:\n                type: boolean\n              playbook:\n                type: string\n              environment:\n                type: string\n              limit:\n                type: string\n              git_branch:\n                type: string\n      responses:\n        201:\n          description: Task queued\n          schema:\n            $ref: \"#/definitions/Task\"\n\n\n  /project/{project_id}/tasks/last:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n    get:\n      tags:\n        - project\n      summary: Get last 200 Tasks related to current project\n      responses:\n        200:\n          description: Array of tasks in chronological order\n          schema:\n            type: array\n            items:\n              $ref: '#/definitions/Task'\n\n\n  /project/{project_id}/tasks/{task_id}/stop:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n      - $ref: '#/parameters/task_id'\n    post:\n      tags:\n        - project\n      summary: Stop a job\n      responses:\n        204:\n          description: Task queued\n\n  /project/{project_id}/tasks/{task_id}:\n    parameters:\n      - $ref: \"#/parameters/project_id\"\n      - $ref: \"#/parameters/task_id\"\n    get:\n      tags:\n        - project\n      summary: Get a single task\n      responses:\n        200:\n          description: Task\n          schema:\n            $ref: \"#/definitions/Task\"\n    delete:\n      tags:\n        - project\n      summary: Deletes task (including output)\n      responses:\n        204:\n          description: task deleted\n\n  /project/{project_id}/tasks/{task_id}/output:\n    parameters:\n      - $ref: '#/parameters/project_id'\n      - $ref: '#/parameters/task_id'\n    get:\n      tags:\n        - project\n      summary: Get task output\n      responses:\n        200:\n          description: output\n          schema:\n            type: array\n            items:\n              $ref: \"#/definitions/TaskOutput\"\n\n#  /runners:\n#    post:\n#      tags:\n#        - project\n#      summary: Starts a job\n#      parameters:\n#        - name: task\n#          in: body\n#          required: true\n#          schema:\n#            type: object\n#            properties:\n#              registration_token:\n#                type: string\n#                example: test123\n#      responses:\n#        201:\n#          description: Task queued\n#          schema:\n#            $ref: \"#/definitions/Runner\"\n"
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "db",
          "type": "tree",
          "content": null
        },
        {
          "name": "db_lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "deployment",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 2.951171875,
          "content": "module github.com/semaphoreui/semaphore\n\ngo 1.21.0\n\nrequire (\n\tgithub.com/Masterminds/squirrel v1.5.4\n\tgithub.com/coreos/go-oidc/v3 v3.11.0\n\tgithub.com/creack/pty v1.1.24\n\tgithub.com/go-git/go-git/v5 v5.13.0\n\tgithub.com/go-gorp/gorp/v3 v3.1.0\n\tgithub.com/go-ldap/ldap/v3 v3.4.8\n\tgithub.com/go-sql-driver/mysql v1.8.1\n\tgithub.com/google/go-github v17.0.0+incompatible\n\tgithub.com/gorilla/context v1.1.2\n\tgithub.com/gorilla/handlers v1.5.2\n\tgithub.com/gorilla/mux v1.8.1\n\tgithub.com/gorilla/securecookie v1.1.2\n\tgithub.com/gorilla/websocket v1.5.3\n\tgithub.com/lib/pq v1.10.9\n\tgithub.com/mdp/qrterminal/v3 v3.2.0\n\tgithub.com/pquerna/otp v1.4.0\n\tgithub.com/robfig/cron/v3 v3.0.1\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/snikch/goodman v0.0.0-20171125024755-10e37e294daa\n\tgithub.com/spf13/cobra v1.8.1\n\tgithub.com/stretchr/testify v1.10.0\n\tgithub.com/thedevsaddam/gojsonq/v2 v2.5.2\n\tgo.etcd.io/bbolt v1.3.9\n\tgolang.org/x/crypto v0.31.0\n\tgolang.org/x/oauth2 v0.21.0\n)\n\nrequire (\n\tdario.cat/mergo v1.0.0 // indirect\n\tfilippo.io/edwards25519 v1.1.0 // indirect\n\tgithub.com/Azure/go-ntlmssp v0.0.0-20221128193559-754e69321358 // indirect\n\tgithub.com/Microsoft/go-winio v0.6.1 // indirect\n\tgithub.com/ProtonMail/go-crypto v1.1.3 // indirect\n\tgithub.com/boombuler/barcode v1.0.1-0.20190219062509-6c824513bacc // indirect\n\tgithub.com/cloudflare/circl v1.3.7 // indirect\n\tgithub.com/cyphar/filepath-securejoin v0.2.5 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/emirpasic/gods v1.18.1 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/go-asn1-ber/asn1-ber v1.5.5 // indirect\n\tgithub.com/go-git/gcfg v1.5.1-0.20230307220236-3a3c6141e376 // indirect\n\tgithub.com/go-git/go-billy/v5 v5.6.0 // indirect\n\tgithub.com/go-jose/go-jose/v4 v4.0.2 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/google/go-querystring v1.1.0 // indirect\n\tgithub.com/google/uuid v1.6.0 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/jbenet/go-context v0.0.0-20150711004518-d14ea06fba99 // indirect\n\tgithub.com/kevinburke/ssh_config v1.2.0 // indirect\n\tgithub.com/lann/builder v0.0.0-20180802200727-47ae307949d0 // indirect\n\tgithub.com/lann/ps v0.0.0-20150810152359-62de8c46ede0 // indirect\n\tgithub.com/pjbgf/sha1cd v0.3.0 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/rogpeppe/go-internal v1.12.0 // indirect\n\tgithub.com/sergi/go-diff v1.3.2-0.20230802210424-5b0b94c5c0d3 // indirect\n\tgithub.com/skeema/knownhosts v1.3.0 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgithub.com/xanzy/ssh-agent v0.3.3 // indirect\n\tgolang.org/x/mod v0.17.0 // indirect\n\tgolang.org/x/net v0.33.0 // indirect\n\tgolang.org/x/sync v0.10.0 // indirect\n\tgolang.org/x/sys v0.28.0 // indirect\n\tgolang.org/x/term v0.27.0 // indirect\n\tgolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d // indirect\n\tgopkg.in/warnings.v0 v0.1.2 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n\trsc.io/qr v0.2.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 25.193359375,
          "content": "dario.cat/mergo v1.0.0 h1:AGCNq9Evsj31mOgNPcLyXc+4PNABt905YmuqPYYpBWk=\ndario.cat/mergo v1.0.0/go.mod h1:uNxQE+84aUszobStD9th8a29P2fMDhsBdgRYvZOxGmk=\nfilippo.io/edwards25519 v1.1.0 h1:FNf4tywRC1HmFuKW5xopWpigGjJKiJSV0Cqo0cJWDaA=\nfilippo.io/edwards25519 v1.1.0/go.mod h1:BxyFTGdWcka3PhytdK4V28tE5sGfRvvvRV7EaN4VDT4=\ngithub.com/Azure/go-ntlmssp v0.0.0-20221128193559-754e69321358 h1:mFRzDkZVAjdal+s7s0MwaRv9igoPqLRdzOLzw/8Xvq8=\ngithub.com/Azure/go-ntlmssp v0.0.0-20221128193559-754e69321358/go.mod h1:chxPXzSsl7ZWRAuOIE23GDNzjWuZquvFlgA8xmpunjU=\ngithub.com/Masterminds/squirrel v1.5.4 h1:uUcX/aBc8O7Fg9kaISIUsHXdKuqehiXAMQTYX8afzqM=\ngithub.com/Masterminds/squirrel v1.5.4/go.mod h1:NNaOrjSoIDfDA40n7sr2tPNZRfjzjA400rg+riTZj10=\ngithub.com/Microsoft/go-winio v0.5.2/go.mod h1:WpS1mjBmmwHBEWmogvA2mj8546UReBk4v8QkMxJ6pZY=\ngithub.com/Microsoft/go-winio v0.6.1 h1:9/kr64B9VUZrLm5YYwbGtUJnMgqWVOdUAXu6Migciow=\ngithub.com/Microsoft/go-winio v0.6.1/go.mod h1:LRdKpFKfdobln8UmuiYcKPot9D2v6svN5+sAH+4kjUM=\ngithub.com/ProtonMail/go-crypto v1.0.0 h1:LRuvITjQWX+WIfr930YHG2HNfjR1uOfyf5vE0kC2U78=\ngithub.com/ProtonMail/go-crypto v1.0.0/go.mod h1:EjAoLdwvbIOoOQr3ihjnSoLZRtE8azugULFRteWMNc0=\ngithub.com/ProtonMail/go-crypto v1.1.3 h1:nRBOetoydLeUb4nHajyO2bKqMLfWQ/ZPwkXqXxPxCFk=\ngithub.com/ProtonMail/go-crypto v1.1.3/go.mod h1:rA3QumHc/FZ8pAHreoekgiAbzpNsfQAosU5td4SnOrE=\ngithub.com/alexbrainman/sspi v0.0.0-20231016080023-1a75b4708caa h1:LHTHcTQiSGT7VVbI0o4wBRNQIgn917usHWOd6VAffYI=\ngithub.com/alexbrainman/sspi v0.0.0-20231016080023-1a75b4708caa/go.mod h1:cEWa1LVoE5KvSD9ONXsZrj0z6KqySlCCNKHlLzbqAt4=\ngithub.com/anmitsu/go-shlex v0.0.0-20200514113438-38f4b401e2be h1:9AeTilPcZAjCFIImctFaOjnTIavg87rW78vTPkQqLI8=\ngithub.com/anmitsu/go-shlex v0.0.0-20200514113438-38f4b401e2be/go.mod h1:ySMOLuWl6zY27l47sB3qLNK6tF2fkHG55UZxx8oIVo4=\ngithub.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5 h1:0CwZNZbxp69SHPdPJAN/hZIm0C4OItdklCFmMRWYpio=\ngithub.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5/go.mod h1:wHh0iHkYZB8zMSxRWpUBQtwG5a7fFgvEO+odwuTv2gs=\ngithub.com/boombuler/barcode v1.0.1-0.20190219062509-6c824513bacc h1:biVzkmvwrH8WK8raXaxBx6fRVTlJILwEwQGL1I/ByEI=\ngithub.com/boombuler/barcode v1.0.1-0.20190219062509-6c824513bacc/go.mod h1:paBWMcWSl3LHKBqUq+rly7CNSldXjb2rDl3JlRe0mD8=\ngithub.com/bwesterb/go-ristretto v1.2.3/go.mod h1:fUIoIZaG73pV5biE2Blr2xEzDoMj7NFEuV9ekS419A0=\ngithub.com/cloudflare/circl v1.3.3/go.mod h1:5XYMA4rFBvNIrhs50XuiBJ15vF2pZn4nnUKZrLbUZFA=\ngithub.com/cloudflare/circl v1.3.7 h1:qlCDlTPz2n9fu58M0Nh1J/JzcFpfgkFHHX3O35r5vcU=\ngithub.com/cloudflare/circl v1.3.7/go.mod h1:sRTcRWXGLrKw6yIGJ+l7amYJFfAXbZG0kBSc8r4zxgA=\ngithub.com/coreos/go-oidc/v3 v3.11.0 h1:Ia3MxdwpSw702YW0xgfmP1GVCMA9aEFWu12XUZ3/OtI=\ngithub.com/coreos/go-oidc/v3 v3.11.0/go.mod h1:gE3LgjOgFoHi9a4ce4/tJczr0Ai2/BoDhf0r5lltWI0=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.24 h1:bJrF4RRfyJnbTJqzRLHzcGaZK1NeM5kTC9jGgovnR1s=\ngithub.com/creack/pty v1.1.24/go.mod h1:08sCNb52WyoAwi2QDyzUCTgcvVFhUzewun7wtTfvcwE=\ngithub.com/cyphar/filepath-securejoin v0.2.4 h1:Ugdm7cg7i6ZK6x3xDF1oEu1nfkyfH53EtKeQYTC3kyg=\ngithub.com/cyphar/filepath-securejoin v0.2.4/go.mod h1:aPGpWjXOXUn2NCNjFvBE6aRxGGx79pTxQpKOJNYHHl4=\ngithub.com/cyphar/filepath-securejoin v0.2.5 h1:6iR5tXJ/e6tJZzzdMc1km3Sa7RRIVBKAK32O2s7AYfo=\ngithub.com/cyphar/filepath-securejoin v0.2.5/go.mod h1:aPGpWjXOXUn2NCNjFvBE6aRxGGx79pTxQpKOJNYHHl4=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/elazarl/goproxy v0.0.0-20230808193330-2592e75ae04a h1:mATvB/9r/3gvcejNsXKSkQ6lcIaNec2nyfOdlTBR2lU=\ngithub.com/elazarl/goproxy v0.0.0-20230808193330-2592e75ae04a/go.mod h1:Ro8st/ElPeALwNFlcTpWmkr6IoMFfkjXAvTHpevnDsM=\ngithub.com/emirpasic/gods v1.18.1 h1:FXtiHYKDGKCW2KzwZKx0iC0PQmdlorYgdFG9jPXJ1Bc=\ngithub.com/emirpasic/gods v1.18.1/go.mod h1:8tpGGwCnJ5H4r6BWwaV6OrWmMoPhUl5jm/FMNAnJvWQ=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/gliderlabs/ssh v0.3.7 h1:iV3Bqi942d9huXnzEF2Mt+CY9gLu8DNM4Obd+8bODRE=\ngithub.com/gliderlabs/ssh v0.3.7/go.mod h1:zpHEXBstFnQYtGnB8k8kQLol82umzn/2/snG7alWVD8=\ngithub.com/go-asn1-ber/asn1-ber v1.5.5 h1:MNHlNMBDgEKD4TcKr36vQN68BA00aDfjIt3/bD50WnA=\ngithub.com/go-asn1-ber/asn1-ber v1.5.5/go.mod h1:hEBeB/ic+5LoWskz+yKT7vGhhPYkProFKoKdwZRWMe0=\ngithub.com/go-git/gcfg v1.5.1-0.20230307220236-3a3c6141e376 h1:+zs/tPmkDkHx3U66DAb0lQFJrpS6731Oaa12ikc+DiI=\ngithub.com/go-git/gcfg v1.5.1-0.20230307220236-3a3c6141e376/go.mod h1:an3vInlBmSxCcxctByoQdvwPiA7DTK7jaaFDBTtu0ic=\ngithub.com/go-git/go-billy/v5 v5.5.0 h1:yEY4yhzCDuMGSv83oGxiBotRzhwhNr8VZyphhiu+mTU=\ngithub.com/go-git/go-billy/v5 v5.5.0/go.mod h1:hmexnoNsr2SJU1Ju67OaNz5ASJY3+sHgFRpCtpDCKow=\ngithub.com/go-git/go-billy/v5 v5.6.0 h1:w2hPNtoehvJIxR00Vb4xX94qHQi/ApZfX+nBE2Cjio8=\ngithub.com/go-git/go-billy/v5 v5.6.0/go.mod h1:sFDq7xD3fn3E0GOwUSZqHo9lrkmx8xJhA0ZrfvjBRGM=\ngithub.com/go-git/go-git-fixtures/v4 v4.3.2-0.20231010084843-55a94097c399 h1:eMje31YglSBqCdIqdhKBW8lokaMrL3uTkpGYlE2OOT4=\ngithub.com/go-git/go-git-fixtures/v4 v4.3.2-0.20231010084843-55a94097c399/go.mod h1:1OCfN199q1Jm3HZlxleg+Dw/mwps2Wbk9frAWm+4FII=\ngithub.com/go-git/go-git/v5 v5.12.0 h1:7Md+ndsjrzZxbddRDZjF14qK+NN56sy6wkqaVrjZtys=\ngithub.com/go-git/go-git/v5 v5.12.0/go.mod h1:FTM9VKtnI2m65hNI/TenDDDnUf2Q9FHnXYjuz9i5OEY=\ngithub.com/go-git/go-git/v5 v5.13.0 h1:vLn5wlGIh/X78El6r3Jr+30W16Blk0CTcxTYcYPWi5E=\ngithub.com/go-git/go-git/v5 v5.13.0/go.mod h1:Wjo7/JyVKtQgUNdXYXIepzWfJQkUEIGvkvVkiXRR/zw=\ngithub.com/go-gorp/gorp/v3 v3.1.0 h1:ItKF/Vbuj31dmV4jxA1qblpSwkl9g1typ24xoe70IGs=\ngithub.com/go-gorp/gorp/v3 v3.1.0/go.mod h1:dLEjIyyRNiXvNZ8PSmzpt1GsWAUK8kjVhEpjH8TixEw=\ngithub.com/go-jose/go-jose/v4 v4.0.2 h1:R3l3kkBds16bO7ZFAEEcofK0MkrAJt3jlJznWZG0nvk=\ngithub.com/go-jose/go-jose/v4 v4.0.2/go.mod h1:WVf9LFMHh/QVrmqrOfqun0C45tMe3RoiKJMPvgWwLfY=\ngithub.com/go-ldap/ldap/v3 v3.4.8 h1:loKJyspcRezt2Q3ZRMq2p/0v8iOurlmeXDPw6fikSvQ=\ngithub.com/go-ldap/ldap/v3 v3.4.8/go.mod h1:qS3Sjlu76eHfHGpUdWkAXQTw4beih+cHsco2jXlIXrk=\ngithub.com/go-sql-driver/mysql v1.8.1 h1:LedoTUt/eveggdHS9qUFC1EFSa8bU2+1pZjSRpvNJ1Y=\ngithub.com/go-sql-driver/mysql v1.8.1/go.mod h1:wEBSXgmK//2ZFJyE+qWnIsVGmvmEKlqwuVSjsCm7DZg=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-github v17.0.0+incompatible h1:N0LgJ1j65A7kfXrZnUDaYCs/Sf4rEjNlfyDHW9dolSY=\ngithub.com/google/go-github v17.0.0+incompatible/go.mod h1:zLgOLi98H3fifZn+44m+umXrS52loVEgC2AApnigrVQ=\ngithub.com/google/go-querystring v1.1.0 h1:AnCroh3fv4ZBgVIf1Iwtovgjaw/GiKJo8M8yD/fhyJ8=\ngithub.com/google/go-querystring v1.1.0/go.mod h1:Kcdr2DB4koayq7X8pmAG4sNG59So17icRSOU623lUBU=\ngithub.com/google/gofuzz v1.2.0 h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=\ngithub.com/google/gofuzz v1.2.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gorilla/context v1.1.2 h1:WRkNAv2uoa03QNIc1A6u4O7DAGMUVoopZhkiXWA2V1o=\ngithub.com/gorilla/context v1.1.2/go.mod h1:KDPwT9i/MeWHiLl90fuTgrt4/wPcv75vFAZLaOOcbxM=\ngithub.com/gorilla/handlers v1.5.2 h1:cLTUSsNkgcwhgRqvCNmdbRWG0A3N4F+M2nWKdScwyEE=\ngithub.com/gorilla/handlers v1.5.2/go.mod h1:dX+xVpaxdSw+q0Qek8SSsl3dfMk3jNddUkMzo0GtH0w=\ngithub.com/gorilla/mux v1.8.1 h1:TuBL49tXwgrFYWhqrNgrUNEY92u81SPhu7sTdzQEiWY=\ngithub.com/gorilla/mux v1.8.1/go.mod h1:AKf9I4AEqPTmMytcMc0KkNouC66V3BtZ4qD5fmWSiMQ=\ngithub.com/gorilla/securecookie v1.1.1/go.mod h1:ra0sb63/xPlUeL+yeDciTfxMRAA+MP+HVt/4epWDjd4=\ngithub.com/gorilla/securecookie v1.1.2 h1:YCIWL56dvtr73r6715mJs5ZvhtnY73hBvEF8kXD8ePA=\ngithub.com/gorilla/securecookie v1.1.2/go.mod h1:NfCASbcHqRSY+3a8tlWJwsQap2VX5pwzwo4h3eOamfo=\ngithub.com/gorilla/sessions v1.2.1/go.mod h1:dk2InVEVJ0sfLlnXv9EAgkf6ecYs/i80K/zI+bUmuGM=\ngithub.com/gorilla/websocket v1.5.3 h1:saDtZ6Pbx/0u+bgYQ3q96pZgCzfhKXGPqt7kZ72aNNg=\ngithub.com/gorilla/websocket v1.5.3/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/hashicorp/go-uuid v1.0.2/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.3 h1:2gKiV6YVmrJ1i2CKKa9obLvRieoRGviZFL26PcT/Co8=\ngithub.com/hashicorp/go-uuid v1.0.3/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/jbenet/go-context v0.0.0-20150711004518-d14ea06fba99 h1:BQSFePA1RWJOlocH6Fxy8MmwDt+yVQYULKfN0RoTN8A=\ngithub.com/jbenet/go-context v0.0.0-20150711004518-d14ea06fba99/go.mod h1:1lJo3i6rXxKeerYnT8Nvf0QmHCRC1n8sfWVwXF2Frvo=\ngithub.com/jcmturner/aescts/v2 v2.0.0 h1:9YKLH6ey7H4eDBXW8khjYslgyqG2xZikXP0EQFKrle8=\ngithub.com/jcmturner/aescts/v2 v2.0.0/go.mod h1:AiaICIRyfYg35RUkr8yESTqvSy7csK90qZ5xfvvsoNs=\ngithub.com/jcmturner/dnsutils/v2 v2.0.0 h1:lltnkeZGL0wILNvrNiVCR6Ro5PGU/SeBvVO/8c/iPbo=\ngithub.com/jcmturner/dnsutils/v2 v2.0.0/go.mod h1:b0TnjGOvI/n42bZa+hmXL+kFJZsFT7G4t3HTlQ184QM=\ngithub.com/jcmturner/gofork v1.7.6 h1:QH0l3hzAU1tfT3rZCnW5zXl+orbkNMMRGJfdJjHVETg=\ngithub.com/jcmturner/gofork v1.7.6/go.mod h1:1622LH6i/EZqLloHfE7IeZ0uEJwMSUyQ/nDd82IeqRo=\ngithub.com/jcmturner/goidentity/v6 v6.0.1 h1:VKnZd2oEIMorCTsFBnJWbExfNN7yZr3EhJAxwOkZg6o=\ngithub.com/jcmturner/goidentity/v6 v6.0.1/go.mod h1:X1YW3bgtvwAXju7V3LCIMpY0Gbxyjn/mY9zx4tFonSg=\ngithub.com/jcmturner/gokrb5/v8 v8.4.4 h1:x1Sv4HaTpepFkXbt2IkL29DXRf8sOfZXo8eRKh687T8=\ngithub.com/jcmturner/gokrb5/v8 v8.4.4/go.mod h1:1btQEpgT6k+unzCwX1KdWMEwPPkkgBtP+F6aCACiMrs=\ngithub.com/jcmturner/rpc/v2 v2.0.3 h1:7FXXj8Ti1IaVFpSAziCZWNzbNuZmnvw/i6CqLNdWfZY=\ngithub.com/jcmturner/rpc/v2 v2.0.3/go.mod h1:VUJYCIDm3PVOEHw8sgt091/20OJjskO/YJki3ELg/Hc=\ngithub.com/kevinburke/ssh_config v1.2.0 h1:x584FjTGwHzMwvHx18PXxbBVzfnxogHaAReU4gf13a4=\ngithub.com/kevinburke/ssh_config v1.2.0/go.mod h1:CT57kijsi8u/K/BOFA39wgDQJ9CxiF4nAY/ojJ6r6mM=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/lann/builder v0.0.0-20180802200727-47ae307949d0 h1:SOEGU9fKiNWd/HOJuq6+3iTQz8KNCLtVX6idSoTLdUw=\ngithub.com/lann/builder v0.0.0-20180802200727-47ae307949d0/go.mod h1:dXGbAdH5GtBTC4WfIxhKZfyBF/HBFgRZSWwZ9g/He9o=\ngithub.com/lann/ps v0.0.0-20150810152359-62de8c46ede0 h1:P6pPBnrTSX3DEVR4fDembhRWSsG5rVo6hYhAB/ADZrk=\ngithub.com/lann/ps v0.0.0-20150810152359-62de8c46ede0/go.mod h1:vmVJ0l/dxyfGW6FmdpVm2joNMFikkuWg0EoCKLGUMNw=\ngithub.com/lib/pq v1.10.9 h1:YXG7RB+JIjhP29X+OtkiDnYaXQwpS4JEWq7dtCCRUEw=\ngithub.com/lib/pq v1.10.9/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/mattn/go-sqlite3 v1.14.15 h1:vfoHhTN1af61xCRSWzFIWzx2YskyMTwHLrExkBOjvxI=\ngithub.com/mattn/go-sqlite3 v1.14.15/go.mod h1:2eHXhiwb8IkHr+BDWZGa96P6+rkvnG63S2DGjv9HUNg=\ngithub.com/mdp/qrterminal/v3 v3.2.0 h1:qteQMXO3oyTK4IHwj2mWsKYYRBOp1Pj2WRYFYYNTCdk=\ngithub.com/mdp/qrterminal/v3 v3.2.0/go.mod h1:XGGuua4Lefrl7TLEsSONiD+UEjQXJZ4mPzF+gWYIJkk=\ngithub.com/onsi/gomega v1.27.10 h1:naR28SdDFlqrG6kScpT8VWpu1xWY5nJRCF3XaYyBjhI=\ngithub.com/onsi/gomega v1.27.10/go.mod h1:RsS8tutOdbdgzbPtzzATp12yT7kM5I5aElG3evPbQ0M=\ngithub.com/pjbgf/sha1cd v0.3.0 h1:4D5XXmUUBUl/xQ6IjCkEAbqXskkq/4O7LmGn0AqMDs4=\ngithub.com/pjbgf/sha1cd v0.3.0/go.mod h1:nZ1rrWOcGJ5uZgEEVL1VUM9iRQiZvWdbZjkKyFzPPsI=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/poy/onpar v1.1.2 h1:QaNrNiZx0+Nar5dLgTVp5mXkyoVFIbepjyEoGSnhbAY=\ngithub.com/poy/onpar v1.1.2/go.mod h1:6X8FLNoxyr9kkmnlqpK6LSoiOtrO6MICtWwEuWkLjzg=\ngithub.com/pquerna/otp v1.4.0 h1:wZvl1TIVxKRThZIBiwOOHOGP/1+nZyWBil9Y2XNEDzg=\ngithub.com/pquerna/otp v1.4.0/go.mod h1:dkJfzwRKNiegxyNb54X/3fLwhCynbMspSyWKnvi1AEg=\ngithub.com/robfig/cron/v3 v3.0.1 h1:WdRxkvbJztn8LMz/QEvLN5sBU+xKpSqwwUO1Pjr4qDs=\ngithub.com/robfig/cron/v3 v3.0.1/go.mod h1:eQICP3HwyT7UooqI/z+Ov+PtYAWygg1TEWWzGIFLtro=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sergi/go-diff v1.3.2-0.20230802210424-5b0b94c5c0d3 h1:n661drycOFuPLCN3Uc8sB6B/s6Z4t2xvBgU1htSHuq8=\ngithub.com/sergi/go-diff v1.3.2-0.20230802210424-5b0b94c5c0d3/go.mod h1:A0bzQcvG0E7Rwjx0REVgAGH58e96+X0MeOfepqsbeW4=\ngithub.com/sirupsen/logrus v1.7.0/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/skeema/knownhosts v1.2.2 h1:Iug2P4fLmDw9f41PB6thxUkNUkJzB5i+1/exaj40L3A=\ngithub.com/skeema/knownhosts v1.2.2/go.mod h1:xYbVRSPxqBZFrdmDyMmsOs+uX1UZC3nTN3ThzgDxUwo=\ngithub.com/skeema/knownhosts v1.3.0 h1:AM+y0rI04VksttfwjkSTNQorvGqmwATnvnAHpSgc0LY=\ngithub.com/skeema/knownhosts v1.3.0/go.mod h1:sPINvnADmT/qYH1kfv+ePMmOBTH6Tbl7b5LvTDjFK7M=\ngithub.com/snikch/goodman v0.0.0-20171125024755-10e37e294daa h1:YJfZp12Z3AFhSBeXOlv4BO55RMwPn2NoQeDsrdWnBtY=\ngithub.com/snikch/goodman v0.0.0-20171125024755-10e37e294daa/go.mod h1:oJyF+mSPHbB5mVY2iO9KV3pTt/QbIkGaO8gQ2WrDbP4=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/thedevsaddam/gojsonq/v2 v2.5.2 h1:CoMVaYyKFsVj6TjU6APqAhAvC07hTI6IQen8PHzHYY0=\ngithub.com/thedevsaddam/gojsonq/v2 v2.5.2/go.mod h1:bv6Xa7kWy82uT0LnXPE2SzGqTj33TAEeR560MdJkiXs=\ngithub.com/xanzy/ssh-agent v0.3.3 h1:+/15pJfg/RsTxqYcX6fHqOXZwwMP+2VyYWJeWM2qQFM=\ngithub.com/xanzy/ssh-agent v0.3.3/go.mod h1:6dzNDKs0J9rVPHPhaGCukekBHKqfl+L3KghI1Bc68Uw=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngo.etcd.io/bbolt v1.3.9 h1:8x7aARPEXiXbHmtUwAIv7eV2fQFHrLLavdiJ3uzJXoI=\ngo.etcd.io/bbolt v1.3.9/go.mod h1:zaO32+Ti0PK1ivdPtgMESzuzL2VPoIG1PCQNvOdo/dE=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.0.0-20220622213112-05595931fe9d/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\ngolang.org/x/crypto v0.3.1-0.20221117191849-2c476679df9a/go.mod h1:hebNnKkNXi2UzZN1eVRvBB7co0a+JxK6XbPiWVs/3J4=\ngolang.org/x/crypto v0.6.0/go.mod h1:OFC/31mSvZgRz0V1QTNCzfAI1aIRzbiufJtkMIlEp58=\ngolang.org/x/crypto v0.7.0/go.mod h1:pYwdfH91IfpZVANVyUOhSIPZaFoJGxTFbZhFTx+dXZU=\ngolang.org/x/crypto v0.19.0/go.mod h1:Iy9bg/ha4yyC70EfRS8jz+B6ybOBKMaSxLj6P6oBDfU=\ngolang.org/x/crypto v0.21.0/go.mod h1:0BP7YvVV9gBbVKyeTG0Gyn+gZm94bibOW5BjDEYAOMs=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.15.0 h1:SernR4v+D55NyBH2QiEQrlBAnj1ECL6AGrA5+dPaMY8=\ngolang.org/x/mod v0.15.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/mod v0.17.0 h1:zY54UmvipHiNd+pm+m0x9KhZ9hl1/7QNMyxXbc6ICqA=\ngolang.org/x/mod v0.17.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200114155413-6afb5195e5aa/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20211112202133-69e39bad7dc2/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.2.0/go.mod h1:KqCZLdyyvdV855qA2rE3GC2aiw5xGR5TEjj8smXukLY=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.7.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.8.0/go.mod h1:QVkue5JL9kW//ek3r6jTKnTFis1tRmNAW2P1shuFdJc=\ngolang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=\ngolang.org/x/net v0.21.0/go.mod h1:bIjVDfnllIU7BJ2DNgfnXvpSvtn8VRwhlsaeUTyUS44=\ngolang.org/x/net v0.22.0/go.mod h1:JKghWKKOSdJwpW2GEx0Ja7fmaKnMsbu+MWVZTokSYmg=\ngolang.org/x/net v0.27.0 h1:5K3Njcw06/l2y9vpGCSdcxWOYHOUk3dVNGDXN+FvAys=\ngolang.org/x/net v0.27.0/go.mod h1:dDi0PyhWNoiUOrAS8uXv/vnScO4wnHQO4mj9fn/RytE=\ngolang.org/x/net v0.33.0 h1:74SYHlV8BIgHIFC/LrYkOGIwL19eTYXQ5wc6TBuO36I=\ngolang.org/x/net v0.33.0/go.mod h1:HXLR5J+9DxmrqMwG9qjGCxZ+zKXxBru04zlTvWlWuN4=\ngolang.org/x/oauth2 v0.21.0 h1:tsimM75w1tF/uws5rbeHzIWxEqElMehnc+iW793zsZs=\ngolang.org/x/oauth2 v0.21.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.6.0 h1:5BMeUDZ7vkXGfEr1x9B4bRcTH4lpkTkpdh0T/J+qjbQ=\ngolang.org/x/sync v0.6.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.2.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.3.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.18.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.2.0/go.mod h1:TVmDHMZPmdnySmBfhjOoOdhjzdE1h4u1VwSiw2l1Nuc=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.6.0/go.mod h1:m6U89DPEgQRMq3DNkDClhWw02AUbt2daBVO4cn4Hv9U=\ngolang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=\ngolang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=\ngolang.org/x/term v0.18.0/go.mod h1:ILwASektA3OnRv7amZ1xhE/KTR+u50pbXfZ03+6Nx58=\ngolang.org/x/term v0.27.0 h1:WP60Sv1nlK1T6SupCHbXzSaN0b9wUmsPoRS9b61A23Q=\ngolang.org/x/term v0.27.0/go.mod h1:iMsnZpn0cago0GOrHO2+Y7u7JPn5AylBrcoWkElMTSM=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.4.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.8.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/tools v0.18.0 h1:k8NLag8AGHnn+PHbl7g43CtqZAwG60vZkLqgyZgIHgQ=\ngolang.org/x/tools v0.18.0/go.mod h1:GL7B4CwcLLeo59yx/9UWWuNOW1n3VZ4f5axWfML7Lcg=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d h1:vU5i/LfpvrRCpgM/VPfJLg5KjxD3E+hfT1SH+d9zLwg=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d/go.mod h1:aiJjzUbINMkxbQROHiO6hDPo2LHcIPhhQsa9DLh0yGk=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/warnings.v0 v0.1.2 h1:wFXVbFY8DY5/xOe1ECiWdKCzZlxgshcYVNkBHstARME=\ngopkg.in/warnings.v0 v0.1.2/go.mod h1:jksf8JmL6Qr/oQM2OXTHunEvvTAsrWBLb6OOjuVWRNI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nrsc.io/qr v0.2.0 h1:6vBLea5/NRMVTz8V66gipeLycZMl/+UlFmk8DvqQ6WY=\nrsc.io/qr v0.2.0/go.mod h1:IF+uZjkb9fqyeF/4tlBoynqmQxUoPfWEKh921coOuXs=\n"
        },
        {
          "name": "hook_helpers",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "renovate.json",
          "type": "blob",
          "size": 0.111328125,
          "content": "{\n  \"$schema\": \"https://docs.renovatebot.com/renovate-schema.json\",\n  \"extends\": [\n    \"config:recommended\"\n  ]\n}\n"
        },
        {
          "name": "services",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        },
        {
          "name": "web",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}