{
  "metadata": {
    "timestamp": 1736567951703,
    "page": 95,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ent/ent",
      "stars": 15815,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".all-contributorsrc",
          "type": "blob",
          "size": 21.9873046875,
          "content": "{\n  \"files\": [\n    \"doc/md/contributors.md\"\n  ],\n  \"imageSize\": 100,\n  \"commit\": false,\n  \"contributors\": [\n    {\n      \"login\": \"a8m\",\n      \"name\": \"Ariel Mashraki\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/7413593?v=4\",\n      \"profile\": \"https://github.com/a8m\",\n      \"contributions\": [\n        \"maintenance\",\n        \"doc\",\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"alexsn\",\n      \"name\": \"Alex Snast\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/987019?v=4\",\n      \"profile\": \"https://github.com/alexsn\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"rotemtam\",\n      \"name\": \"Rotem Tamir\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1522681?v=4\",\n      \"profile\": \"https://rotemtam.com/\",\n      \"contributions\": [\n        \"maintenance\",\n        \"doc\",\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"cliedeman\",\n      \"name\": \"Ciaran Liedeman\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/3578740?v=4\",\n      \"profile\": \"https://github.com/cliedeman\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"marwan-at-work\",\n      \"name\": \"Marwan Sulaiman\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/16294261?v=4\",\n      \"profile\": \"https://www.marwan.io/\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"napei\",\n      \"name\": \"Nathaniel Peiffer\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/8946502?v=4\",\n      \"profile\": \"https://nathaniel.peiffer.com.au/\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"tmc\",\n      \"name\": \"Travis Cline\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/3977?v=4\",\n      \"profile\": \"https://github.com/tmc\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"hantmac\",\n      \"name\": \"Jeremy\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/7600925?v=4\",\n      \"profile\": \"https://cloudsjhan.github.io/\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"aca\",\n      \"name\": \"aca\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/50316549?v=4\",\n      \"profile\": \"https://github.com/aca\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"BrentChesny\",\n      \"name\": \"BrentChesny\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1449435?v=4\",\n      \"profile\": \"https://github.com/BrentChesny\",\n      \"contributions\": [\n        \"code\",\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"giautm\",\n      \"name\": \"Giau. Tran Minh\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/12751435?v=4\",\n      \"profile\": \"https://github.com/giautm\",\n      \"contributions\": [\n        \"code\",\n        \"review\"\n      ]\n    },\n    {\n      \"login\": \"htdvisser\",\n      \"name\": \"Hylke Visser\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/181308?v=4\",\n      \"profile\": \"https://htdvisser.dev/\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"kerbelp\",\n      \"name\": \"Pavel Kerbel\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/3934990?v=4\",\n      \"profile\": \"https://github.com/kerbelp\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"day-dreams\",\n      \"name\": \"zhangnan\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/24593904?v=4\",\n      \"profile\": \"https://github.com/day-dreams\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"uta-mori\",\n      \"name\": \"mori yuta\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/59682979?v=4\",\n      \"profile\": \"https://github.com/uta-mori\",\n      \"contributions\": [\n        \"code\",\n        \"translation\",\n        \"review\"\n      ]\n    },\n    {\n      \"login\": \"chris-rock\",\n      \"name\": \"Christoph Hartmann\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1178413?v=4\",\n      \"profile\": \"http://lollyrock.com/\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"rubensayshi\",\n      \"name\": \"Ruben de Vries\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/649160?v=4\",\n      \"profile\": \"https://github.com/rubensayshi\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"ernado\",\n      \"name\": \"Aleksandr Razumov\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/866677?v=4\",\n      \"profile\": \"https://keybase.io/ernado\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"apbuteau\",\n      \"name\": \"apbuteau\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/6796073?v=4\",\n      \"profile\": \"https://github.com/apbuteau\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"ichord\",\n      \"name\": \"Harold.Luo\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1324791?v=4\",\n      \"profile\": \"https://github.com/ichord\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"idoshveki\",\n      \"name\": \"ido shveki\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/11615669?v=4\",\n      \"profile\": \"https://github.com/idoshveki\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"masseelch\",\n      \"name\": \"MasseElch\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/12862103?v=4\",\n      \"profile\": \"https://github.com/masseelch\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"kidlj\",\n      \"name\": \"Jian Li\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/300616?v=4\",\n      \"profile\": \"https://github.com/kidlj\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"nolotz\",\n      \"name\": \"Noah-Jerome Lotzer\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/5778728?v=4\",\n      \"profile\": \"https://noah.je/\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"danf0rth\",\n      \"name\": \"danforth\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/14220891?v=4\",\n      \"profile\": \"https://github.com/danf0rth\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"maxiloEmmmm\",\n      \"name\": \"maxilozoz\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/16779121?v=4\",\n      \"profile\": \"https://github.com/maxiloEmmmm\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"zzwx\",\n      \"name\": \"zzwx\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/8169082?v=4\",\n      \"profile\": \"https://gist.github.com/zzwx\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"ix64\",\n      \"name\": \"MengYX\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/13902388?v=4\",\n      \"profile\": \"https://github.com/ix64\",\n      \"contributions\": [\n        \"translation\"\n      ]\n    },\n    {\n      \"login\": \"mattn\",\n      \"name\": \"mattn\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/10111?v=4\",\n      \"profile\": \"https://mattn.kaoriya.net/\",\n      \"contributions\": [\n        \"translation\"\n      ]\n    },\n    {\n      \"login\": \"Bladrak\",\n      \"name\": \"Hugo Briand\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1321977?v=4\",\n      \"profile\": \"https://github.com/Bladrak\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"enmand\",\n      \"name\": \"Dan Enman\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/432487?v=4\",\n      \"profile\": \"https://danielenman.com/\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"UnAfraid\",\n      \"name\": \"Rumen Nikiforov\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/2185291?v=4\",\n      \"profile\": \"http://www.l2junity.org/\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"wenerme\",\n      \"name\": \"陈杨文\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1777211?v=4\",\n      \"profile\": \"https://wener.me\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"joesonw\",\n      \"name\": \"Qiaosen (Joeson) Huang\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1635441?v=4\",\n      \"profile\": \"https://djwong.net\",\n      \"contributions\": [\n        \"bug\"\n      ]\n    },\n    {\n      \"login\": \"davebehr1\",\n      \"name\": \"AlonDavidBehr\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/16716239?v=4\",\n      \"profile\": \"https://github.com/davebehr1\",\n      \"contributions\": [\n        \"code\",\n        \"review\"\n      ]\n    },\n    {\n      \"login\": \"DuGlaser\",\n      \"name\": \"DuGlaser\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/50506482?v=4\",\n      \"profile\": \"http://duglaser.dev\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"shanna\",\n      \"name\": \"Shane Hanna\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/28489?v=4\",\n      \"profile\": \"https://github.com/shanna\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"mahmud2011\",\n      \"name\": \"Mahmudul Haque\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/5278142?v=4\",\n      \"profile\": \"https://www.linkedin.com/in/mahmud2011\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"sywesk\",\n      \"name\": \"Benjamin Bourgeais\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/862607?v=4\",\n      \"profile\": \"http://blog.scaleprocess.net\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"8ayac\",\n      \"name\": \"8ayac(Yoshinori Hayashi)\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/29266382?v=4\",\n      \"profile\": \"https://about.8ay.ac/\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"y-yagi\",\n      \"name\": \"y-yagi\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/987638?v=4\",\n      \"profile\": \"https://github.com/y-yagi\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"Sacro\",\n      \"name\": \"Ben Woodward\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/2659869?v=4\",\n      \"profile\": \"https://github.com/Sacro\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"wzyjerry\",\n      \"name\": \"WzyJerry\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/11435169?v=4\",\n      \"profile\": \"https://github.com/wzyjerry\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"tarrencev\",\n      \"name\": \"Tarrence van As\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4740651?v=4\",\n      \"profile\": \"https://github.com/tarrencev\",\n      \"contributions\": [\n        \"doc\",\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"MONAKA0721\",\n      \"name\": \"Yuya Sumie\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/32859963?v=4\",\n      \"profile\": \"https://mo7ka.com\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"akfaew\",\n      \"name\": \"Michal Mazurek\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/7853732?v=4\",\n      \"profile\": \"http://jasminek.net\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"nmemoto\",\n      \"name\": \"Takafumi Umemoto\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1522332?v=4\",\n      \"profile\": \"https://github.com/nmemoto\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"squarebat\",\n      \"name\": \"Khadija Sidhpuri\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/59063821?v=4\",\n      \"profile\": \"http://www.linkedin.com/in/khadija-sidhpuri-87709316a\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"neel229\",\n      \"name\": \"Neel Modi\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/53475167?v=4\",\n      \"profile\": \"https://github.com/neel229\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"shomodj\",\n      \"name\": \"Boris Shomodjvarac\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/304768?v=4\",\n      \"profile\": \"https://ie.linkedin.com/in/boris-shomodjvarac-51970879\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"sadmansakib\",\n      \"name\": \"Sadman Sakib\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/17023844?v=4\",\n      \"profile\": \"https://github.com/sadmansakib\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"dakimura\",\n      \"name\": \"dakimura\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/34202807?v=4\",\n      \"profile\": \"https://github.com/dakimura\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"RiskyFeryansyahP\",\n      \"name\": \"Risky Feryansyah\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/36788585?v=4\",\n      \"profile\": \"https://github.com/RiskyFeryansyahP\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"seiichi1101\",\n      \"name\": \"seiichi \",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/20941952?v=4\",\n      \"profile\": \"https://github.com/seiichi1101\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"odeke-em\",\n      \"name\": \"Emmanuel T Odeke\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4898263?v=4\",\n      \"profile\": \"https://orijtech.com/\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"isoppp\",\n      \"name\": \"Hiroki Isogai\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/16318727?v=4\",\n      \"profile\": \"https://isoppp.com\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"tsingsun\",\n      \"name\": \"李清山\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/5848549?v=4\",\n      \"profile\": \"https://github.com/tsingsun\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"s-takehana\",\n      \"name\": \"s-takehana\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/3423547?v=4\",\n      \"profile\": \"https://github.com/s-takehana\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"EndlessIdea\",\n      \"name\": \"Kuiba\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1527796?v=4\",\n      \"profile\": \"https://github.com/EndlessIdea\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"storyicon\",\n      \"name\": \"storyicon\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/29772821?v=4\",\n      \"profile\": \"https://github.com/storyicon\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"evanlurvey\",\n      \"name\": \"Evan Lurvey\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/54965655?v=4\",\n      \"profile\": \"https://github.com/evanlurvey\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"attackordie\",\n      \"name\": \"Brian\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/20145334?v=4\",\n      \"profile\": \"https://github.com/attackordie\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"ThinkontrolSY\",\n      \"name\": \"Shen Yang\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/11331554?v=4\",\n      \"profile\": \"http://www.thinkontrol.com\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"sivchari\",\n      \"name\": \"sivchari\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/55221074?v=4\",\n      \"profile\": \"https://twitter.com/sivchari\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"mookjp\",\n      \"name\": \"mook\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1519309?v=4\",\n      \"profile\": \"https://blog.mookjp.io\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"heliumbrain\",\n      \"name\": \"heliumbrain\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1607668?v=4\",\n      \"profile\": \"http://www.entiros.se\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"JeremyV2014\",\n      \"name\": \"Jeremy Maxey-Vesperman\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/9276415?v=4\",\n      \"profile\": \"https://github.com/JeremyV2014\",\n      \"contributions\": [\n        \"code\",\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"tankbusta\",\n      \"name\": \"Christopher Schmitt\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/592749?v=4\",\n      \"profile\": \"https://github.com/tankbusta\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"grevych\",\n      \"name\": \"Gerardo Reyes\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/3792003?v=4\",\n      \"profile\": \"https://github.com/grevych\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"naormatania\",\n      \"name\": \"Naor Matania\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/6978437?v=4\",\n      \"profile\": \"https://github.com/naormatania\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"idc77\",\n      \"name\": \"idc77\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/87644834?v=4\",\n      \"profile\": \"https://github.com/idc77\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"HurSungYun\",\n      \"name\": \"Sungyun Hur\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/8033896?v=4\",\n      \"profile\": \"http://ethanhur.me\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"peanut-cc\",\n      \"name\": \"peanut-pg\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/55480838?v=4\",\n      \"profile\": \"https://github.com/peanut-cc\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"m3hm3t\",\n      \"name\": \"Mehmet Yılmaz\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/22320354?v=4\",\n      \"profile\": \"https://github.com/m3hm3t\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"Laconty\",\n      \"name\": \"Roman Maklakov\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/17760166?v=4\",\n      \"profile\": \"https://github.com/Laconty\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"genevieve\",\n      \"name\": \"Genevieve\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/12158641?v=4\",\n      \"profile\": \"https://github.com/genevieve\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"cjraa\",\n      \"name\": \"Clarence\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/62199269?v=4\",\n      \"profile\": \"https://github.com/cjraa\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"iamnande\",\n      \"name\": \"Nicholas Anderson\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/7806510?v=4\",\n      \"profile\": \"https://www.linkedin.com/in/iamnande/\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"hezhizhen\",\n      \"name\": \"Zhizhen He\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/7611700?v=4\",\n      \"profile\": \"https://github.com/hezhizhen\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"crossworth\",\n      \"name\": \"Pedro Henrique\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1251151?v=4\",\n      \"profile\": \"https://pedro.dev.br\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"MrParano1d\",\n      \"name\": \"MrParano1d\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/7414374?v=4\",\n      \"profile\": \"https://2jp.de\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"tprebs\",\n      \"name\": \"Thomas Prebble\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/6523587?v=4\",\n      \"profile\": \"https://github.com/tprebs\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"imhuytq\",\n      \"name\": \"Huy TQ\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/5723282?v=4\",\n      \"profile\": \"https://huytq.com\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"maorlipchuk\",\n      \"name\": \"maorlipchuk\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/7034637?v=4\",\n      \"profile\": \"https://github.com/maorlipchuk\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"iwata\",\n      \"name\": \"Motonori Iwata\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/121048?v=4\",\n      \"profile\": \"https://mobcov.hatenadiary.org/\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"CharlesGe129\",\n      \"name\": \"Charles Ge\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/20162173?v=4\",\n      \"profile\": \"https://github.com/CharlesGe129\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"thmeitz\",\n      \"name\": \"Thomas Meitz\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/92851940?v=4\",\n      \"profile\": \"https://github.com/thmeitz\",\n      \"contributions\": [\n        \"code\",\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"booleangate\",\n      \"name\": \"Justin Johnson\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/181567?v=4\",\n      \"profile\": \"http://justinjohnson.org\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"hax10\",\n      \"name\": \"hax10\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/85743468?v=4\",\n      \"profile\": \"https://github.com/hax10\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"water-a\",\n      \"name\": \"water-a\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/38114545?v=4\",\n      \"profile\": \"https://github.com/water-a\",\n      \"contributions\": [\n        \"bug\"\n      ]\n    },\n    {\n      \"login\": \"jhwz\",\n      \"name\": \"jhwz\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/52683873?v=4\",\n      \"profile\": \"https://github.com/jhwz\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"kortschak\",\n      \"name\": \"Dan Kortschak\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/275221?v=4\",\n      \"profile\": \"https://kortschak.io/\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    }\n  ],\n  \"contributorsPerLine\": 7,\n  \"projectName\": \"ent\",\n  \"projectOwner\": \"ent\",\n  \"repoType\": \"github\",\n  \"repoHost\": \"https://github.com\",\n  \"skipCi\": true\n}\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 1.3935546875,
          "content": "run:\n  go: '1.19'\n  timeout: 5m\n\nlinters-settings:\n  errcheck:\n    ignore: fmt:.*,Read|Write|Close|Exec,io:Copy\n  dupl:\n    threshold: 100\n  funlen:\n    lines: 200\n    statements: 200\n  goheader:\n    template: |-\n      Copyright 2019-present Facebook Inc. All rights reserved.\n      This source code is licensed under the Apache 2.0 license found\n      in the LICENSE file in the root directory of this source tree.\nlinters:\n  disable-all: true\n  enable:\n    - asciicheck\n    - bodyclose\n    - dogsled\n    - dupl\n    - errcheck\n    - funlen\n    - gocritic\n    # - gofmt; Enable back when upgrading CI to Go 1.20.\n    - goheader\n    - gosec\n    - gosimple\n    - govet\n    - ineffassign\n    - misspell\n    - staticcheck\n    - stylecheck\n    - typecheck\n    - unconvert\n    - unused\n    - whitespace\n\nissues:\n  exclude-rules:\n    - path: _test\\.go\n      linters:\n        - dupl\n        - funlen\n        - gosec\n        - gocritic\n    - linters:\n        - unused\n      source: ent.Schema\n    - path: dialect/sql/schema\n      linters:\n        - dupl\n        - gosec\n    - text: \"Expect WriteFile permissions to be 0600 or less\"\n      linters:\n        - gosec\n    - path: privacy/privacy.go\n      linters:\n        - stylecheck\n    - path: entc/load/schema.go\n      linters:\n        - staticcheck\n    - path: entc/gen/graph.go\n      linters:\n        - gocritic\n    - path: \\.go\n      linters:\n        - staticcheck\n      text: SA1019\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.27734375,
          "content": "# Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to make participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when\nan individual is representing the project or its community in public spaces.\nExamples of representing a project or community include using an official\nproject e-mail address, posting via an official social media account, or acting\nas an appointed representative at an online or offline event. Representation of\na project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at <opensource-conduct@fb.com>. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.6240234375,
          "content": "# Contributing to ent\nWe want to make contributing to this project as easy and transparent as\npossible.\n\n# Project structure\n\n- `dialect` - Contains SQL and Gremlin code used by the generated code.\n  - `dialect/sql/schema` - Auto migration logic resides there.\n  - `dialect/sql/sqljson` - JSON extension for SQL.\n\n- `schema` - User schema API.\n  - `schema/{field, edge, index, mixin}` - provides schema builders API.\n  - `schema/field/gen` - Templates and codegen for numeric builders.\n\n- `entc` - Codegen of `ent`.\n  - `entc/load` - `entc` loader API for loading user schemas into a Go objects at runtime.\n  - `entc/gen` - The actual code generation logic resides in this package (and its `templates` package).\n  - `integration` - Integration tests for `entc`.\n\n- `privacy` - Runtime code for [privacy layer](https://entgo.io/docs/privacy/).\n\n- `doc` - Documentation code for `entgo.io` (uses [Docusaurus](https://docusaurus.io)).\n  - `doc/md` - Markdown files for documentation.\n  - `doc/website` - Website code and assets.\n\n  In order to test your documentation changes, run `npm start` from the `doc/website` directory, and open [localhost:3000](http://localhost:3000/).\n\n# Run integration tests\nIf you touch any file in `entc`, run the following commands in `entc/integration` and 'examples' dirs:\n\n```\ngo generate ./...\ngo mod tidy\n```\n\nThen, in `entc/integration` run `docker-compose` in order to spin-up all database containers:\n\n```\ndocker-compose -f docker-compose.yaml up -d\n```\n\nThen, run `go test ./...` to run all integration tests.\n\n\n## Pull Requests\nWe actively welcome your pull requests.\n\n1. Fork the repo and create your branch from `master`.\n2. If you've added code that should be tested, add tests.\n3. If you've changed APIs, update the documentation.\n4. Ensure the test suite passes.\n5. Make sure your code lints.\n6. If you haven't already, complete the Contributor License Agreement (\"CLA\").\n\n## Contributor License Agreement (\"CLA\")\nIn order to accept your pull request, we need you to submit a CLA. You only need\nto do this once to work on any of Facebook's open source projects.\n\nComplete your CLA here: <https://code.facebook.com/cla>\n\n## Issues\nWe use GitHub issues to track public bugs. Please ensure your description is\nclear and has sufficient instructions to be able to reproduce the issue.\n\nFacebook has a [bounty program](https://www.facebook.com/whitehat/) for the safe\ndisclosure of security bugs. In those cases, please go through the process\noutlined on that page and do not file a public issue.\n\n## License\nBy contributing to ent, you agree that your contributions will be licensed\nunder the LICENSE file in the root directory of this source tree.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.8251953125,
          "content": "## ent - An Entity Framework For Go\n\n[![Twitter](https://img.shields.io/twitter/url/https/twitter.com/entgo_io.svg?style=social&label=Follow%20%40entgo_io)](https://twitter.com/entgo_io)\n[![Discord](https://img.shields.io/discord/885059418646003782?label=discord&logo=discord&style=flat-square&logoColor=white)](https://discord.gg/qZmPgTE6RX)\n\n[English](README.md) | [中文](README_zh.md) | [日本語](README_jp.md) | [한국어](README_kr.md)\n\n<img width=\"50%\"\nalign=\"right\"\nstyle=\"display: block; margin:40px auto;\"\nsrc=\"https://s3.eu-central-1.amazonaws.com/entgo.io/assets/gopher_graph.png\"/>\n\nSimple, yet powerful entity framework for Go, that makes it easy to build and maintain applications\nwith large data-models.\n\n- **Schema As Code** - model any database schema as Go objects.\n- **Easily Traverse Any Graph** - run queries, aggregations and traverse any graph structure easily.\n- **Statically Typed And Explicit API** - 100% statically typed and explicit API using code generation.\n- **Multi Storage Driver** - supports MySQL, MariaDB, TiDB, PostgreSQL, CockroachDB, SQLite and Gremlin.\n- **Extendable** - simple to extend and customize using Go templates.\n\n## Quick Installation\n```console\ngo install entgo.io/ent/cmd/ent@latest\n```\n\nFor proper installation using [Go modules], visit [entgo.io website][entgo install].\n\n## Docs and Support\nThe documentation for developing and using ent is available at: https://entgo.io\n\nFor discussion and support, [open an issue](https://github.com/ent/ent/issues/new/choose) or join our [channel](https://gophers.slack.com/archives/C01FMSQDT53) in the gophers Slack.\n\n## About the Project\nThe `ent` project was inspired by Ent, an entity framework used internally at Meta (Facebook). It was created by [a8m](https://github.com/a8m) and [alexsn](https://github.com/alexsn) from the [Facebook Connectivity][fbc] team. These days, it is developed and maintained by the [Atlas](https://github.com/ariga/atlas) team, and the roadmap for its v1 release is described [here](https://github.com/ent/ent/issues/46).\n\n## Join the ent Community\nBuilding `ent` would not have been possible without the collective work of our entire community. We maintain a [contributors page](doc/md/contributors.md)\nwhich lists the contributors to this `ent`. \n\nIn order to contribute to `ent`, see the [CONTRIBUTING](CONTRIBUTING.md) file for how to go get started.\nIf your company or your product is using `ent`, please let us know by adding yourself to the [ent users page](https://github.com/ent/ent/wiki/ent-users).\n\nFor updates, follow us on Twitter at https://twitter.com/entgo_io\n\n## License\nent is licensed under Apache 2.0 as found in the [LICENSE file](LICENSE).\n\n\n[entgo install]: https://entgo.io/docs/code-gen/#version-compatibility-between-entc-and-ent\n[Go modules]: https://github.com/golang/go/wiki/Modules#quick-start\n[fbc]: https://connectivity.fb.com\n"
        },
        {
          "name": "README_jp.md",
          "type": "blob",
          "size": 3.7275390625,
          "content": "## ent - Goのエンティティーフレームワーク\n\n[![Twitter](https://img.shields.io/twitter/url/https/twitter.com/entgo_io.svg?style=social&label=Follow%20%40entgo_io)](https://twitter.com/entgo_io)\n\n[English](README.md) | [中文](README_zh.md) | [日本語](README_jp.md)\n\n<img width=\"50%\"\nalign=\"right\"\nstyle=\"display: block; margin:40px auto;\"\nsrc=\"https://s3.eu-central-1.amazonaws.com/entgo.io/assets/gopher_graph.png\"/>\n\nシンプルながらもパワフルなGoのエンティティフレームワークであり、大規模なデータモデルを持つアプリケーションを容易に構築・保守できるようにします。\n\n- **Schema As Code(コードとしてのスキーマ)** - あらゆるデータベーススキーマをGoオブジェクトとしてモデル化します。\n- **任意のグラフを簡単にトラバースできます** - クエリや集約の実行、任意のグラフ構造の走査を容易に実行できます。\n- **100%静的に型付けされた明示的なAPI** - コード生成により、100%静的に型付けされた曖昧さのないAPIを提供します。\n- **マルチストレージドライバ** - MySQL、MariaDB、 TiDB、PostgreSQL、CockroachDB、SQLite、Gremlinをサポートしています。\n- **拡張性** - Goテンプレートを使用して簡単に拡張、カスタマイズできます。\n\n## クイックインストール\n```console\ngo install entgo.io/ent/cmd/ent@latest\n```\n\n[Go modules]を使ったインストールについては、[entgo.ioのWebサイト](https://entgo.io/ja/docs/code-gen/#entc-%E3%81%A8-ent-%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%92%E4%B8%80%E8%87%B4%E3%81%95%E3%81%9B%E3%82%8B)をご覧ください。\n\n## ドキュメントとサポート\nentを開発・使用するためのドキュメントは、こちら: https://entgo.io\n\n議論やサポートについては、[Issueを開く](https://github.com/ent/ent/issues/new/choose)か、gophers Slackの[チャンネル](https://gophers.slack.com/archives/C01FMSQDT53)に参加してください。\n\n## entコミュニティへの参加\n`ent`の構築は、コミュニティ全体の協力なしには実現できませんでした。 私たちは、この`ent`の貢献者をリストアップした[contributorsページ](doc/md/contributors.md)を管理しています。\n\n`ent`に貢献するときは、まず[CONTRIBUTING](CONTRIBUTING.md)を参照してください。\nもし、あなたの会社や製品で`ent`を利用している場合は、[ent usersページ](https://github.com/ent/ent/wiki/ent-users)に追記する形で、そのことをぜひ教えて下さい。\n\n最新情報については、Twitter(<https://twitter.com/entgo_io>)をフォローしてください。\n\n\n\n## プロジェクトについて\n`ent`プロジェクトは、私たちが社内で使用しているエンティティフレームワークであるEntからインスピレーションを得ています。\nentは、[Facebook Connectivity][fbc]チームの[a8m](https://github.com/a8m)と[alexsn](https://github.com/alexsn)が開発・保守しています。\n本番環境では複数のチームやプロジェクトで使用されており、v1リリースまでのロードマップは[こちら](https://github.com/ent/ent/issues/46)に記載されています。\nこのプロジェクトの動機については[こちら](https://entgo.io/blog/2019/10/03/introducing-ent)をご覧ください。\n\n## ライセンス\nentは、[LICENSEファイル](LICENSE)にもある通り、Apache 2.0でライセンスされています。\n\n\n[entgo instal]: https://entgo.io/docs/code-gen/#version-compatibility-between-entc-and-ent\n[Go modules]: https://github.com/golang/go/wiki/Modules#quick-start\n[fbc]: https://connectivity.fb.com\n"
        },
        {
          "name": "README_kr.md",
          "type": "blob",
          "size": 3.015625,
          "content": "## ent - An Entity Framework For Go\n\n[English](README.md) | [中文](README_zh.md) | [日本語](README_jp.md) | [한국어](README_kr.md)\n\n<img width=\"50%\"\nalign=\"right\"\nstyle=\"display: block; margin:40px auto;\"\nsrc=\"https://s3.eu-central-1.amazonaws.com/entgo.io/assets/gopher_graph.png\"/>\n\n간단하지만 강력한 Go용 엔터티 프레임워크로, 대규모 데이터 모델이 포함된 애플리케이션을 쉽게 만들고 유지할 수 있습니다.\n\n-   **스키마를 코드로 관리** - 모든 데이터베이스 스키마와 모델을 Go Object로 구현 가능.\n-   **어떤 그래프든 쉽게 탐색가능** - 쿼리실행, 집계, 그래프구조를 쉽게 탐색 가능.\n-   **정적 타입 그리고 명시적인 API** - 100% 생성된 코드로, 정적타입과 명시적인 API를 제공.\n-   **다양한 스토리지 드라이버** - MySQL, MariaDB, TiDB, PostgreSQL, CockroachDB, SQLite and Gremlin 를 지원\n-   **확장성** - Go 템플릿을 이용하여 간단하게 확장, 커스터마이징 가능.\n\n## 빠른 설치\n\n```console\ngo install entgo.io/ent/cmd/ent@latest\n```\n\n[Go modules]을 사용하여 바르게 설치하려면, [entgo.io 웹페이지][entgo install]를 방문해주시길 바랍니다.\n\n## 문서 및 지원\n\nEnt 개발 및 사용에 관한 문서는 여기서 확인할 수 있습니다. : https://entgo.io\n\n토론, 지원을 위해서 [open an issue](https://github.com/ent/ent/issues/new/choose)깃허브 이슈 또는 gophers Slack [채널](https://gophers.slack.com/archives/C01FMSQDT53)에 가입해주세요.\n\n## ent 커뮤니티 가입\n\nent 커뮤니티의 공동작업이 없었다면, ent를 만들 수 없었을 것입니다. 우리는 기여한 사람들을 [contributors 페이지](doc/md/contributors.md)에 올리고 유지합니다.\n\nent에 기여하려면 [CONTRIBUTING](CONTRIBUTING.md)에서 시작 방법을 확인해보세요.\n프로젝트나 회사에서 ent를 사용중이면, [ent 유저 페이지](https://github.com/ent/ent/wiki/ent-users)에 추가하여 알려주세요.\n\n트위터계정을 팔로우하여 업데이트 소식을 확인하세요. https://twitter.com/entgo_io\n\n## 프로젝트에 관하여\n\nent프로젝트는 내부적으로 사용하는 엔터티 프레임워크 \"Ent\"에서 영감을 받았습니다. 개발 및 유지보수는 [a8m](https://github.com/a8m) 및\u001f [alexsn](https://github.com/alexsn)[Facebook Connectivity][fbc] 팀에서 담당합니다. 여러 팀이 프로덕션 환경에서 사용하고 있습니다. v1 릴리즈 로드맵에 대한 설명은 [여기](https://github.com/ent/ent/issues/46)를 클릭해주세요.\n프로젝트 동기에 대해 더 궁금하시다면 [여기](https://entgo.io/blog/2019/10/03/introducing-ent)를 클릭해주세요.\n\n## 라이센스\n\nent 라이센스는 Apache 2.0입니다. [LICENSE file](LICENSE)파일에서도 확인 가능합니다.\n\n[entgo install]: https://entgo.io/docs/code-gen/#version-compatibility-between-entc-and-ent\n[go modules]: https://github.com/golang/go/wiki/Modules#quick-start\n[fbc]: https://connectivity.fb.com\n"
        },
        {
          "name": "README_zh.md",
          "type": "blob",
          "size": 2.236328125,
          "content": "## ent - 一个强大的Go语言实体框架\n\n[English](README.md) | [中文](README_zh.md) | [日本語](README_jp.md)\n\n<img width=\"50%\"\nalign=\"right\"\nstyle=\"display: block; margin:40px auto;\"\nsrc=\"https://s3.eu-central-1.amazonaws.com/entgo.io/assets/gopher_graph.png\"/>\n\nent是一个简单而又功能强大的Go语言实体框架，ent易于构建和维护应用程序与大数据模型。\n\n- **图就是代码** - 将任何数据库表建模为Go对象。\n- **轻松地遍历任何图形** - 可以轻松地运行查询、聚合和遍历任何图形结构。\n- **静态类型和显式API** - 使用代码生成静态类型和显式API，查询数据更加便捷。\n- **多存储驱动程序** - 支持MySQL, PostgreSQL, SQLite 和 Gremlin。\n- **可扩展** - 简单地扩展和使用Go模板自定义。\n\n## 快速安装\n```console\ngo install entgo.io/ent/cmd/ent@latest\n```\n\n请访问[entgo.io website][entgo instal]以使用[Go modules]进行正确安装。\n\n## 文档和支持\n开发和使用ent的文档请参照： https://entgo.io\n\n如要讨论问题和支持, [创建一个issue](https://github.com/ent/ent/issues/new/choose) 或者加入我们的Gopher Slack(Slack软件,类似于论坛)[讨论组](https://gophers.slack.com/archives/C01FMSQDT53)\n\n## 加入 ent 社区\n如果你想为`ent`做出贡献, [贡献代码](CONTRIBUTING.md) 中写了如何做出自己的贡献\n如果你的公司或者产品在使用`ent`，请让我们知道你已经加入 [ent 用户](https://github.com/ent/ent/wiki/ent-users)\n\n## 关于项目\n`ent` 项目灵感来自于Ent，Ent是一个facebook内部使用的一个实体框架项目。 它由 [Facebook Connectivity][fbc] 团队通过 [a8m](https://github.com/a8m) 和 [alexsn](https://github.com/alexsn) 开发和维护\n, 它被生产中的多个团队和项目使用。它的v1版本的路线图为 [版本的路线图](https://github.com/ent/ent/issues/46).\n关于项目更多的信息 [ent介绍](https://entgo.io/blog/2019/10/03/introducing-ent)。\n\n## 声明\nent使用Apache 2.0协议授权，可以在[LICENSE文件](LICENSE)中找到。\n\n[entgo instal]: https://entgo.io/docs/code-gen/#version-compatibility-between-entc-and-ent\n[Go modules]: https://github.com/golang/go/wiki/Modules#quick-start\n[fbc]: https://connectivity.fb.com\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "dialect",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "ent.go",
          "type": "blob",
          "size": 17.7060546875,
          "content": "// Copyright 2019-present Facebook Inc. All rights reserved.\n// This source code is licensed under the Apache 2.0 license found\n// in the LICENSE file in the root directory of this source tree.\n\n// Package ent is the interface between end-user schemas and entc (ent codegen).\npackage ent\n\nimport (\n\t\"context\"\n\n\t\"entgo.io/ent/schema\"\n\t\"entgo.io/ent/schema/edge\"\n\t\"entgo.io/ent/schema/field\"\n\t\"entgo.io/ent/schema/index\"\n)\n\ntype (\n\t// The Interface type describes the requirements for an exported type defined in the schema package.\n\t// It functions as the interface between the user's schema types and codegen loader.\n\t// Users should use the Schema type for embedding as follows:\n\t//\n\t//\ttype T struct {\n\t//\t\tent.Schema\n\t//\t}\n\t//\n\tInterface interface {\n\t\t// Type is a dummy method, that is used in edge declaration.\n\t\t//\n\t\t// The Type method should be used as follows:\n\t\t//\n\t\t//\ttype S struct { ent.Schema }\n\t\t//\n\t\t//\ttype T struct { ent.Schema }\n\t\t//\n\t\t//\tfunc (T) Edges() []ent.Edge {\n\t\t//\t\treturn []ent.Edge{\n\t\t//\t\t\tedge.To(\"S\", S.Type),\n\t\t//\t\t}\n\t\t//\t}\n\t\t//\n\t\tType()\n\t\t// Fields returns the fields of the schema.\n\t\tFields() []Field\n\t\t// Edges returns the edges of the schema.\n\t\tEdges() []Edge\n\t\t// Indexes returns the indexes of the schema.\n\t\tIndexes() []Index\n\t\t// Config returns an optional config for the schema.\n\t\t//\n\t\t// Deprecated: the Config method predates the Annotations method, and it\n\t\t// is planned be removed in v0.5.0. New code should use Annotations instead.\n\t\t//\n\t\t//\tfunc (T) Annotations() []schema.Annotation {\n\t\t//\t\treturn []schema.Annotation{\n\t\t//\t\t\tentsql.Annotation{Table: \"Name\"},\n\t\t//\t\t}\n\t\t//\t}\n\t\t//\n\t\tConfig() Config\n\t\t// Mixin returns an optional list of Mixin to extends\n\t\t// the schema.\n\t\tMixin() []Mixin\n\t\t// Hooks returns an optional list of Hook to apply on\n\t\t// the executed mutations.\n\t\tHooks() []Hook\n\t\t// Interceptors returns an optional list of Interceptor\n\t\t// to apply on the executed queries.\n\t\tInterceptors() []Interceptor\n\t\t// Policy returns the privacy policy of the schema.\n\t\tPolicy() Policy\n\t\t// Annotations returns a list of schema annotations to be used by\n\t\t// codegen extensions.\n\t\tAnnotations() []schema.Annotation\n\t}\n\n\t// A Field interface returns a field descriptor for vertex fields/properties.\n\t// The usage for the interface is as follows:\n\t//\n\t//\tfunc (T) Fields() []ent.Field {\n\t//\t\treturn []ent.Field{\n\t//\t\t\tfield.Int(\"int\"),\n\t//\t\t}\n\t//\t}\n\t//\n\tField interface {\n\t\tDescriptor() *field.Descriptor\n\t}\n\n\t// An Edge interface returns an edge descriptor for vertex edges.\n\t// The usage for the interface is as follows:\n\t//\n\t//\tfunc (T) Edges() []ent.Edge {\n\t//\t\treturn []ent.Edge{\n\t//\t\t\tedge.To(\"S\", S.Type),\n\t//\t\t}\n\t//\t}\n\t//\n\tEdge interface {\n\t\tDescriptor() *edge.Descriptor\n\t}\n\n\t// An Index interface returns an index descriptor for vertex indexes.\n\t// The usage for the interface is as follows:\n\t//\n\t//\tfunc (T) Indexes() []ent.Index {\n\t//\t\treturn []ent.Index{\n\t//\t\t\tindex.Fields(\"f1\", \"f2\").\n\t//\t\t\t\tUnique(),\n\t//\t\t}\n\t//\t}\n\t//\n\tIndex interface {\n\t\tDescriptor() *index.Descriptor\n\t}\n\n\t// A Config structure is used to configure an entity schema.\n\t// The usage of this structure is as follows:\n\t//\n\t//\tfunc (T) Config() ent.Config {\n\t//\t\treturn ent.Config{\n\t//\t\t\tTable: \"Name\",\n\t//\t\t}\n\t//\t}\n\t//\n\t// Deprecated: the Config object predates the schema.Annotation method and it\n\t// is planned to be removed in future versions. New code should use Annotations\n\t// instead.\n\t//\n\t//\tfunc (T) Annotations() []schema.Annotation {\n\t//\t\treturn []schema.Annotation{\n\t//\t\t\tentsql.Annotation{Table: \"Name\"},\n\t//\t\t}\n\t//\t}\n\t//\n\tConfig struct {\n\t\t// A Table is an optional table name defined for the schema.\n\t\tTable string\n\t}\n\n\t// The Mixin type describes a set of methods that can extend\n\t// other methods in the schema without calling them directly.\n\t//\n\t//\ttype TimeMixin struct {}\n\t//\n\t//\tfunc (TimeMixin) Fields() []ent.Field {\n\t//\t\treturn []ent.Field{\n\t//\t\t\tfield.Time(\"created_at\").\n\t//\t\t\t\tImmutable().\n\t//\t\t\t\tDefault(time.Now),\n\t//\t\t\tfield.Time(\"updated_at\").\n\t//\t\t\t\tDefault(time.Now).\n\t//\t\t\t\tUpdateDefault(time.Now),\n\t//\t\t}\n\t//\t}\n\t//\n\t//\ttype T struct {\n\t//\t\tent.Schema\n\t//\t}\n\t//\n\t// \tfunc(T) Mixin() []ent.Mixin {\n\t// \t\treturn []ent.Mixin{\n\t//\t\t\tTimeMixin{},\n\t// \t\t}\n\t// \t}\n\t//\n\tMixin interface {\n\t\t// Fields returns a slice of fields to add to the schema.\n\t\tFields() []Field\n\t\t// Edges returns a slice of edges to add to the schema.\n\t\tEdges() []Edge\n\t\t// Indexes returns a slice of indexes to add to the schema.\n\t\tIndexes() []Index\n\t\t// Hooks returns a slice of hooks to add to the schema.\n\t\t// Note that mixin hooks are executed before schema hooks.\n\t\tHooks() []Hook\n\t\t// Interceptors returns a slice of interceptors to add to the schema.\n\t\t// Note that mixin interceptors are executed before schema interceptors.\n\t\tInterceptors() []Interceptor\n\t\t// Policy returns a privacy policy to add to the schema.\n\t\t// Note that mixin policy are executed before schema policy.\n\t\tPolicy() Policy\n\t\t// Annotations returns a list of schema annotations to add\n\t\t// to the schema annotations.\n\t\tAnnotations() []schema.Annotation\n\t}\n\n\t// The Policy type defines the privacy policy of an entity.\n\t// The usage for the interface is as follows:\n\t//\n\t//\ttype T struct {\n\t//\t\tent.Schema\n\t//\t}\n\t//\n\t//\tfunc(T) Policy() ent.Policy {\n\t//\t\treturn privacy.AlwaysAllowRule()\n\t//\t}\n\t//\n\tPolicy interface {\n\t\tEvalMutation(context.Context, Mutation) error\n\t\tEvalQuery(context.Context, Query) error\n\t}\n\n\t// Schema is the default implementation for the schema Interface.\n\t// It can be embedded in end-user schemas as follows:\n\t//\n\t//\ttype T struct {\n\t//\t\tent.Schema\n\t//\t}\n\t//\n\tSchema struct {\n\t\tInterface\n\t}\n\n\t// A View only schema describes an entity that all its operations\n\t// are limited to read-only. For example, a database view.\n\t//\n\t// Users that wants to define a view schema should embed the View\n\t// struct in their schema as follows:\n\t//\n\t//\ttype V struct {\n\t//\t\tent.View\n\t//\t}\n\t//\n\tView struct {\n\t\tSchema\n\t}\n)\n\n// Fields of the schema.\nfunc (Schema) Fields() []Field { return nil }\n\n// Edges of the schema.\nfunc (Schema) Edges() []Edge { return nil }\n\n// Indexes of the schema.\nfunc (Schema) Indexes() []Index { return nil }\n\n// Config of the schema.\nfunc (Schema) Config() Config { return Config{} }\n\n// Mixin of the schema.\nfunc (Schema) Mixin() []Mixin { return nil }\n\n// Hooks of the schema.\nfunc (Schema) Hooks() []Hook { return nil }\n\n// Interceptors of the schema.\nfunc (Schema) Interceptors() []Interceptor { return nil }\n\n// Policy of the schema.\nfunc (Schema) Policy() Policy { return nil }\n\n// Annotations of the schema.\nfunc (Schema) Annotations() []schema.Annotation { return nil }\n\n// Viewer is an interface that wraps the view method.\n// Implemented by the View struct.\ntype Viewer interface{ view() }\n\n// view is a dummy method to distinguish between Schema and View.\nfunc (View) view() {}\n\ntype (\n\t// Value represents a dynamic value returned by mutations or queries.\n\tValue any\n\n\t// Mutation represents an operation that mutate the graph.\n\t// For example, adding a new node, updating many, or dropping\n\t// data. The implementation is generated by entc (ent codegen).\n\tMutation interface {\n\t\t// Op returns the operation name generated by entc.\n\t\tOp() Op\n\t\t// Type returns the schema type for this mutation.\n\t\tType() string\n\n\t\t// Fields returns all fields that were changed during\n\t\t// this mutation. Note that, in order to get all numeric\n\t\t// fields that were in/decremented, call AddedFields().\n\t\tFields() []string\n\t\t// Field returns the value of a field with the given name.\n\t\t// The second boolean value indicates that this field was\n\t\t// not set, or was not defined in the schema.\n\t\tField(name string) (Value, bool)\n\t\t// SetField sets the value for the given name. It returns an\n\t\t// error if the field is not defined in the schema, or if the\n\t\t// type mismatch the field type.\n\t\tSetField(name string, value Value) error\n\n\t\t// AddedFields returns all numeric fields that were incremented\n\t\t// or decremented during this mutation.\n\t\tAddedFields() []string\n\t\t// AddedField returns the numeric value that was in/decremented\n\t\t// from a field with the given name. The second value indicates\n\t\t// that this field was not set, or was not define in the schema.\n\t\tAddedField(name string) (Value, bool)\n\t\t// AddField adds the value for the given name. It returns an\n\t\t// error if the field is not defined in the schema, or if the\n\t\t// type mismatch the field type.\n\t\tAddField(name string, value Value) error\n\n\t\t// ClearedFields returns all nullable fields that were cleared\n\t\t// during this mutation.\n\t\tClearedFields() []string\n\t\t// FieldCleared returns a bool indicates if this field was\n\t\t// cleared in this mutation.\n\t\tFieldCleared(name string) bool\n\t\t// ClearField clears the value for the given name. It returns an\n\t\t// error if the field is not defined in the schema.\n\t\tClearField(name string) error\n\n\t\t// ResetField resets all changes in the mutation regarding the\n\t\t// given field name. It returns an error if the field is not\n\t\t// defined in the schema.\n\t\tResetField(name string) error\n\n\t\t// AddedEdges returns all edge names that were set/added in this\n\t\t// mutation.\n\t\tAddedEdges() []string\n\t\t// AddedIDs returns all ids (to other nodes) that were added for\n\t\t// the given edge name.\n\t\tAddedIDs(name string) []Value\n\n\t\t// RemovedEdges returns all edge names that were removed in this\n\t\t// mutation.\n\t\tRemovedEdges() []string\n\t\t// RemovedIDs returns all ids (to other nodes) that were removed for\n\t\t// the given edge name.\n\t\tRemovedIDs(name string) []Value\n\n\t\t// ClearedEdges returns all edge names that were cleared in this\n\t\t// mutation.\n\t\tClearedEdges() []string\n\t\t// EdgeCleared returns a bool indicates if this edge was\n\t\t// cleared in this mutation.\n\t\tEdgeCleared(name string) bool\n\t\t// ClearEdge clears the value for the given name. It returns an\n\t\t// error if the edge name is not defined in the schema.\n\t\tClearEdge(name string) error\n\n\t\t// ResetEdge resets all changes in the mutation regarding the\n\t\t// given edge name. It returns an error if the edge is not\n\t\t// defined in the schema.\n\t\tResetEdge(name string) error\n\n\t\t// OldField returns the old value of the field from the database.\n\t\t// An error is returned if the mutation operation is not UpdateOne,\n\t\t// or the query to the database was failed.\n\t\tOldField(ctx context.Context, name string) (Value, error)\n\t}\n\n\t// Mutator is the interface that wraps the Mutate method.\n\tMutator interface {\n\t\t// Mutate apply the given mutation on the graph. The returned\n\t\t// ent.Value is changing according to the mutation operation:\n\t\t//\n\t\t// OpCreate, the returned value is the created node (T).\n\t\t// OpUpdateOne, the returned value is the updated node (T).\n\t\t// OpUpdate, the returned value is the amount of updated nodes (int).\n\t\t// OpDeleteOne, OpDelete, the returned value is the amount of deleted nodes (int).\n\t\t//\n\t\tMutate(context.Context, Mutation) (Value, error)\n\t}\n\n\t// The MutateFunc type is an adapter to allow the use of ordinary\n\t// function as Mutator. If f is a function with the appropriate signature,\n\t// MutateFunc(f) is a Mutator that calls f.\n\tMutateFunc func(context.Context, Mutation) (Value, error)\n\n\t// Hook defines the \"mutation middleware\". A function that gets a Mutator\n\t// and returns a Mutator. For example:\n\t//\n\t//\thook := func(next ent.Mutator) ent.Mutator {\n\t//\t\treturn ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {\n\t//\t\t\tfmt.Printf(\"Type: %s, Operation: %s, ConcreteType: %T\\n\", m.Type(), m.Op(), m)\n\t//\t\t\treturn next.Mutate(ctx, m)\n\t//\t\t})\n\t//\t}\n\t//\n\tHook func(Mutator) Mutator\n)\n\n// Mutate calls f(ctx, m).\nfunc (f MutateFunc) Mutate(ctx context.Context, m Mutation) (Value, error) {\n\treturn f(ctx, m)\n}\n\ntype (\n\t// Query represents a query builder of an entity. It is\n\t// usually one of the following types: <T>Query.\n\tQuery any\n\n\t// Querier is the interface that wraps the Query method.\n\t// Calling Querier.Query(ent.Query) triggers the execution\n\t// of the query.\n\tQuerier interface {\n\t\t// Query runs the given query on the graph and returns its result.\n\t\tQuery(context.Context, Query) (Value, error)\n\t}\n\n\t// The QuerierFunc type is an adapter to allow the use of ordinary\n\t// function as Querier. If f is a function with the appropriate signature,\n\t// QuerierFunc(f) is a Querier that calls f.\n\tQuerierFunc func(context.Context, Query) (Value, error)\n\n\t// Interceptor defines an execution middleware for various types of Ent queries.\n\t// Contrary to Hooks, Interceptors are implemented as interfaces, allows them to\n\t// intercept and modify the query at different stages, providing more fine-grained\n\t// control over its behavior. For example, see the Traverser interface.\n\tInterceptor interface {\n\t\t// Intercept is a function that gets a Querier and returns a Querier. For example:\n\t\t//\n\t\t//\tent.InterceptFunc(func(next ent.Querier) ent.Querier {\n\t\t//\t\treturn ent.QuerierFunc(func(ctx context.Context, query ent.Query) (ent.Value, error) {\n\t\t//\t\t\t// Do something before the query execution.\n\t\t//\t\t\tvalue, err := next.Query(ctx, query)\n\t\t//\t\t\t// Do something after the query execution.\n\t\t//\t\t\treturn value, err\n\t\t//\t\t})\n\t\t//\t})\n\t\t//\n\t\t// Note that unlike Traverse functions, which are called at each traversal stage, Intercept functions\n\t\t// are invoked before the query executions. This means that using Traverse functions is a better fit\n\t\t// for adding default filters, while using Intercept functions is a better fit for implementing logging\n\t\t// or caching.\n\t\t//\n\t\t//\n\t\t//\tclient.User.Query().\n\t\t//\t\tQueryGroups().\t// User traverse functions applied.\n\t\t//\t\tQueryPosts().\t// Group traverse functions applied.\n\t\t//\t\tAll(ctx)\t// Post traverse and intercept functions applied.\n\t\t//\n\t\tIntercept(Querier) Querier\n\t}\n\n\t// The InterceptFunc type is an adapter to allow the use of ordinary function as Interceptor.\n\t// If f is a function with the appropriate signature, InterceptFunc(f) is an Interceptor that calls f.\n\tInterceptFunc func(Querier) Querier\n\n\t// Traverser defines a graph-traversal middleware for various types of Ent queries.\n\t// Contrary to Interceptors, the Traverse are executed on graph traversals before the\n\t// query is executed. For example:\n\t//\n\t//\tent.TraverseFunc(func(ctx context.Context, q ent.Query) error {\n\t//\t\t// Filter out deleted pets.\n\t//\t\tif pq, ok := q.(*gen.PetQuery); ok {\n\t//\t\t\tpq.Where(pet.DeletedAtIsNil())\n\t//\t\t}\n\t//\t\treturn nil\n\t//\t})\n\t//\n\t//\tclient.Pet.Query().\n\t//\t\tQueryOwner().\t// Pet traverse functions are applied and filter deleted pets.\n\t//\t\tAll(ctx)\t// User traverse and interceptor functions are applied.\n\t//\n\tTraverser interface {\n\t\tTraverse(context.Context, Query) error\n\t}\n\n\t// The TraverseFunc type is an adapter to allow the use of ordinary function as Traverser.\n\t// If f is a function with the appropriate signature, TraverseFunc(f) is a Traverser that calls f.\n\tTraverseFunc func(context.Context, Query) error\n)\n\n// Query calls f(ctx, q).\nfunc (f QuerierFunc) Query(ctx context.Context, q Query) (Value, error) {\n\treturn f(ctx, q)\n}\n\n// Intercept calls f(ctx, q).\nfunc (f InterceptFunc) Intercept(next Querier) Querier {\n\treturn f(next)\n}\n\n// Intercept is a dummy implementation of Intercept that returns the next Querier in the pipeline.\nfunc (f TraverseFunc) Intercept(next Querier) Querier {\n\treturn next\n}\n\n// Traverse calls f(ctx, q).\nfunc (f TraverseFunc) Traverse(ctx context.Context, q Query) error {\n\treturn f(ctx, q)\n}\n\n//go:generate go run golang.org/x/tools/cmd/stringer -type Op\n\n// An Op represents a mutation operation.\ntype Op uint\n\n// Mutation operations.\nconst (\n\tOpCreate    Op = 1 << iota // node creation.\n\tOpUpdate                   // update nodes by predicate (if any).\n\tOpUpdateOne                // update one node.\n\tOpDelete                   // delete nodes by predicate (if any).\n\tOpDeleteOne                // delete one node.\n)\n\n// Is reports whether o is match the given operation.\nfunc (i Op) Is(o Op) bool { return i&o != 0 }\n\n// List of query operations used by the codegen.\nconst (\n\tOpQueryFirst   = \"First\"\n\tOpQueryFirstID = \"FirstID\"\n\tOpQueryOnly    = \"Only\"\n\tOpQueryOnlyID  = \"OnlyID\"\n\tOpQueryAll     = \"All\"\n\tOpQueryIDs     = \"IDs\"\n\tOpQueryCount   = \"Count\"\n\tOpQueryExist   = \"Exist\"\n\tOpQueryGroupBy = \"GroupBy\"\n\tOpQuerySelect  = \"Select\"\n)\n\ntype (\n\t// QueryContext contains additional information about\n\t// the context in which the query is executed.\n\tQueryContext struct {\n\t\t// Op defines the operation name. e.g., First, All, Count, etc.\n\t\tOp string\n\t\t// Type defines the query type as defined in the generated code.\n\t\tType string\n\t\t// Unique indicates if the Unique modifier was set on the query and\n\t\t// its value. Calling Unique(false) sets the value of Unique to false.\n\t\tUnique *bool\n\t\t// Limit indicates if the Limit modifier was set on the query and\n\t\t// its value. Calling Limit(10) sets the value of Limit to 10.\n\t\tLimit *int\n\t\t// Offset indicates if the Offset modifier was set on the query and\n\t\t// its value. Calling Offset(10) sets the value of Offset to 10.\n\t\tOffset *int\n\t\t// Fields specifies the fields that were selected in the query.\n\t\tFields []string\n\t}\n\tqueryCtxKey struct{}\n)\n\n// NewQueryContext returns a new context with the given QueryContext attached.\nfunc NewQueryContext(parent context.Context, c *QueryContext) context.Context {\n\treturn context.WithValue(parent, queryCtxKey{}, c)\n}\n\n// QueryFromContext returns the QueryContext value stored in ctx, if any.\nfunc QueryFromContext(ctx context.Context) *QueryContext {\n\tc, _ := ctx.Value(queryCtxKey{}).(*QueryContext)\n\treturn c\n}\n\n// Clone returns a deep copy of the query context.\nfunc (q *QueryContext) Clone() *QueryContext {\n\tc := &QueryContext{\n\t\tOp:     q.Op,\n\t\tType:   q.Type,\n\t\tFields: append([]string(nil), q.Fields...),\n\t}\n\tif q.Unique != nil {\n\t\tv := *q.Unique\n\t\tc.Unique = &v\n\t}\n\tif q.Limit != nil {\n\t\tv := *q.Limit\n\t\tc.Limit = &v\n\t}\n\tif q.Offset != nil {\n\t\tv := *q.Offset\n\t\tc.Offset = &v\n\t}\n\treturn c\n}\n\n// AppendFieldOnce adds the given field to the spec if it is not already present.\nfunc (q *QueryContext) AppendFieldOnce(f string) *QueryContext {\n\tfor _, f1 := range q.Fields {\n\t\tif f == f1 {\n\t\t\treturn q\n\t\t}\n\t}\n\tq.Fields = append(q.Fields, f)\n\treturn q\n}\n"
        },
        {
          "name": "entc",
          "type": "tree",
          "content": null
        },
        {
          "name": "entql",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.59375,
          "content": "module entgo.io/ent\n\ngo 1.23\n\nrequire (\n\tariga.io/atlas v0.27.1-0.20240912191503-92195304dbe1\n\tgithub.com/DATA-DOG/go-sqlmock v1.5.0\n\tgithub.com/go-openapi/inflect v0.19.0\n\tgithub.com/google/uuid v1.3.0\n\tgithub.com/gorilla/websocket v1.5.0\n\tgithub.com/jessevdk/go-flags v1.5.0\n\tgithub.com/json-iterator/go v1.1.12\n\tgithub.com/mattn/go-sqlite3 v1.14.16\n\tgithub.com/mitchellh/mapstructure v1.5.0\n\tgithub.com/modern-go/reflect2 v1.0.2\n\tgithub.com/olekukonko/tablewriter v0.0.5\n\tgithub.com/spf13/cobra v1.7.0\n\tgithub.com/stretchr/testify v1.8.2\n\tgo.opencensus.io v0.24.0\n\tgolang.org/x/sync v0.8.0\n\tgolang.org/x/tools v0.24.0\n)\n\nrequire (\n\tgithub.com/agext/levenshtein v1.2.1 // indirect\n\tgithub.com/apparentlymart/go-textseg/v13 v13.0.0 // indirect\n\tgithub.com/apparentlymart/go-textseg/v15 v15.0.0 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/google/go-cmp v0.6.0 // indirect\n\tgithub.com/hashicorp/hcl/v2 v2.13.0 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.9 // indirect\n\tgithub.com/mitchellh/go-wordwrap v0.0.0-20150314170334-ad45545899c7 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgithub.com/stretchr/objx v0.5.0 // indirect\n\tgithub.com/zclconf/go-cty v1.14.4 // indirect\n\tgolang.org/x/mod v0.20.0 // indirect\n\tgolang.org/x/sys v0.23.0 // indirect\n\tgolang.org/x/text v0.14.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 16.07421875,
          "content": "ariga.io/atlas v0.27.1-0.20240912191503-92195304dbe1 h1:tqUmxmE7r2qqWmgczyNZNOyhzXLqmdUpRhVSuvCUqTU=\nariga.io/atlas v0.27.1-0.20240912191503-92195304dbe1/go.mod h1:cpxrs2J9HTrjMrfNKFmUpONY9L0vzAHZ1pY++nTtVw0=\ncloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/DATA-DOG/go-sqlmock v1.5.0 h1:Shsta01QNfFxHCfpW6YH2STWB0MudeXXEWMr20OEh60=\ngithub.com/DATA-DOG/go-sqlmock v1.5.0/go.mod h1:f/Ixk793poVmq4qj/V1dPUg2JEAKC73Q5eFN3EC/SaM=\ngithub.com/agext/levenshtein v1.2.1 h1:QmvMAjj2aEICytGiWzmxoE0x2KZvE0fvmqMOfy2tjT8=\ngithub.com/agext/levenshtein v1.2.1/go.mod h1:JEDfjyjHDjOF/1e4FlBE/PkbqA9OfWu2ki2W0IB5558=\ngithub.com/apparentlymart/go-textseg/v13 v13.0.0 h1:Y+KvPE1NYz0xl601PVImeQfFyEy6iT90AvPUL1NNfNw=\ngithub.com/apparentlymart/go-textseg/v13 v13.0.0/go.mod h1:ZK2fH7c4NqDTLtiYLvIkEghdlcqw7yxLeM89kiTRPUo=\ngithub.com/apparentlymart/go-textseg/v15 v15.0.0 h1:uYvfpb3DyLSCGWnctWKGj857c6ew1u1fNQOlOtuGxQY=\ngithub.com/apparentlymart/go-textseg/v15 v15.0.0/go.mod h1:K8XmNZdhEBkdlyDdvbmmsvpAG721bKi0joRfFdHIWJ4=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/go-openapi/inflect v0.19.0 h1:9jCH9scKIbHeV9m12SmPilScz6krDxKRasNNSNPXu/4=\ngithub.com/go-openapi/inflect v0.19.0/go.mod h1:lHpZVlpIQqLyKwJ4N+YSc9hchQy/i12fJykb83CRBH4=\ngithub.com/go-test/deep v1.0.3 h1:ZrJSEWsXzPOxaZnFteGEfooLba+ju3FYIbOrS+rQd68=\ngithub.com/go-test/deep v1.0.3/go.mod h1:wGDj63lr65AM2AQyKZd/NYHGb0R+1RLqB8NKt3aSFNA=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.3.0 h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=\ngithub.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gorilla/websocket v1.5.0 h1:PPwGk2jz7EePpoHN/+ClbZu8SPxiqlu12wZP/3sWmnc=\ngithub.com/gorilla/websocket v1.5.0/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/hashicorp/hcl/v2 v2.13.0 h1:0Apadu1w6M11dyGFxWnmhhcMjkbAiKCv7G1r/2QgCNc=\ngithub.com/hashicorp/hcl/v2 v2.13.0/go.mod h1:e4z5nxYlWNPdDSNYX+ph14EvWYMFm3eP0zIUqPc2jr0=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/jessevdk/go-flags v1.5.0 h1:1jKYvbxEjfUl0fmqTCOfonvskHHXMjBySTLW4y9LFvc=\ngithub.com/jessevdk/go-flags v1.5.0/go.mod h1:Fw0T6WPc1dYxT4mKEZRfG5kJhaTDP9pj1c2EWnYs/m4=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/kr/pretty v0.1.0 h1:L/CwN0zerZDmRFUapSPitk6f+Q3+0za1rQkzVuMiMFI=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/mattn/go-runewidth v0.0.9 h1:Lm995f3rfxdpd6TSmuVCHVb/QhupuXlYr8sCI/QdE+0=\ngithub.com/mattn/go-runewidth v0.0.9/go.mod h1:H031xJmbD/WCDINGzjvQ9THkh0rPKHF+m2gUSrubnMI=\ngithub.com/mattn/go-sqlite3 v1.14.16 h1:yOQRA0RpS5PFz/oikGwBEqvAWhWg5ufRz4ETLjwpU1Y=\ngithub.com/mattn/go-sqlite3 v1.14.16/go.mod h1:2eHXhiwb8IkHr+BDWZGa96P6+rkvnG63S2DGjv9HUNg=\ngithub.com/mitchellh/go-wordwrap v0.0.0-20150314170334-ad45545899c7 h1:DpOJ2HYzCv8LZP15IdmG+YdwD2luVPHITV96TkirNBM=\ngithub.com/mitchellh/go-wordwrap v0.0.0-20150314170334-ad45545899c7/go.mod h1:ZXFpozHsX6DPmq2I0TCekCxypsnAUbP2oI0UX1GXzOo=\ngithub.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=\ngithub.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/olekukonko/tablewriter v0.0.5 h1:P2Ga83D34wi1o9J6Wh1mRuqd4mF/x/lgBS7N7AbDhec=\ngithub.com/olekukonko/tablewriter v0.0.5/go.mod h1:hPp6KlRPjbx+hW8ykQs1w3UBbZlj6HuIJcUGPhkA7kY=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sergi/go-diff v1.0.0 h1:Kpca3qRNrduNnOQeazBd0ysaKrUJiIuISHxogkT9RPQ=\ngithub.com/sergi/go-diff v1.0.0/go.mod h1:0CfEIISq7TuYL3j771MWULgwwjU+GofnZX9QAmXWZgo=\ngithub.com/spf13/cobra v1.7.0 h1:hyqWnYt1ZQShIddO5kBpj3vu05/++x6tJ6dg8EC572I=\ngithub.com/spf13/cobra v1.7.0/go.mod h1:uLxZILRyS/50WlhOIKD7W6V5bgeIt+4sICxh6uRMrb0=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0 h1:1zr/of2m5FGMsad5YfcqgdqdWrIhu+EBEJRhR1U7z/c=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.2 h1:+h33VjcLVPDHtOdpUCuF+7gSuG3yGIftsP1YvFihtJ8=\ngithub.com/stretchr/testify v1.8.2/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/zclconf/go-cty v1.14.4 h1:uXXczd9QDGsgu0i/QFR/hzI5NYCHLf6NQw/atrbnhq8=\ngithub.com/zclconf/go-cty v1.14.4/go.mod h1:VvMs5i0vgZdhYawQNq5kePSpLAoz8u1xvZgrPIxfnZE=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/mod v0.20.0 h1:utOm6MM3R3dnawAiJgn0y+xvuYRsm1RKM/4giyfDgV0=\ngolang.org/x/mod v0.20.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.8.0 h1:3NFvSEYkUoMifnESzZl15y791HH1qU2xm6eCJU5ZPXQ=\ngolang.org/x/sync v0.8.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.23.0 h1:YfKFowiIMvtgl1UERQoTPPToxltDeZfbj4H7dVUCwmM=\ngolang.org/x/sys v0.23.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.14.0 h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.24.0 h1:J1shsA93PJUEVaUSaay7UXAyE8aimq3GW0pjlolpa24=\ngolang.org/x/tools v0.24.0/go.mod h1:YhNqVBIfWHdzvTLs0d8LCuMhkKUgSUKldakyV7W/WDQ=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405 h1:yhCVgyC4o1eVCa2tZl7eS0r+SDo693bJlVdllGtEeKM=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\n"
        },
        {
          "name": "op_string.go",
          "type": "blob",
          "size": 0.8203125,
          "content": "// Code generated by \"stringer -type Op\"; DO NOT EDIT.\n\npackage ent\n\nimport \"strconv\"\n\nfunc _() {\n\t// An \"invalid array index\" compiler error signifies that the constant values have changed.\n\t// Re-run the stringer command to generate them again.\n\tvar x [1]struct{}\n\t_ = x[OpCreate-1]\n\t_ = x[OpUpdate-2]\n\t_ = x[OpUpdateOne-4]\n\t_ = x[OpDelete-8]\n\t_ = x[OpDeleteOne-16]\n}\n\nconst (\n\t_Op_name_0 = \"OpCreateOpUpdate\"\n\t_Op_name_1 = \"OpUpdateOne\"\n\t_Op_name_2 = \"OpDelete\"\n\t_Op_name_3 = \"OpDeleteOne\"\n)\n\nvar (\n\t_Op_index_0 = [...]uint8{0, 8, 16}\n)\n\nfunc (i Op) String() string {\n\tswitch {\n\tcase 1 <= i && i <= 2:\n\t\ti -= 1\n\t\treturn _Op_name_0[_Op_index_0[i]:_Op_index_0[i+1]]\n\tcase i == 4:\n\t\treturn _Op_name_1\n\tcase i == 8:\n\t\treturn _Op_name_2\n\tcase i == 16:\n\t\treturn _Op_name_3\n\tdefault:\n\t\treturn \"Op(\" + strconv.FormatInt(int64(i), 10) + \")\"\n\t}\n}\n"
        },
        {
          "name": "privacy",
          "type": "tree",
          "content": null
        },
        {
          "name": "schema",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}