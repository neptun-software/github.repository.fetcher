{
  "metadata": {
    "timestamp": 1736568085229,
    "page": 223,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "OJ/gobuster",
      "stars": 10646,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3134765625,
          "content": "# Binaries for programs and plugins\n*.exe\n*.exe~\n*.dll\n*.so\n*.dylib\n\n# Test binary, built with `go test -c`\n*.test\n\n# Output of the go coverage tool, specifically when used with LiteIDE\n*.out\n\n# Dependency directories (remove the comment below to include it)\n# vendor/\n\n*.prof\n*.txt\n*.swp\n\n.vscode/\ngobuster\nbuild\n\ndist/\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 0.0390625,
          "content": "linters:\n  enable:\n    - nonamedreturns\n"
        },
        {
          "name": ".goreleaser.yaml",
          "type": "blob",
          "size": 1.228515625,
          "content": "# This is an example .goreleaser.yml file with some sensible defaults.\n# Make sure to check the documentation at https://goreleaser.com\nbefore:\n  hooks:\n    # You may remove this if you don't use go modules.\n    - go mod tidy\n    # you may remove this if you don't need go generate\n    - go generate ./...\nbuilds:\n  - env:\n      - CGO_ENABLED=0\n    goos:\n      - linux\n      - windows\n      - darwin\n\narchives:\n  - format: tar.gz\n    # this name template makes the OS and Arch compatible with the results of uname.\n    name_template: >-\n      {{ .ProjectName }}_\n      {{- title .Os }}_\n      {{- if eq .Arch \"amd64\" }}x86_64\n      {{- else if eq .Arch \"386\" }}i386\n      {{- else }}{{ .Arch }}{{ end }}\n      {{- if .Arm }}v{{ .Arm }}{{ end }}\n    # use zip for windows archives\n    format_overrides:\n    - goos: windows\n      format: zip\nchecksum:\n  name_template: 'checksums.txt'\nsnapshot:\n  name_template: \"{{ incpatch .Version }}-next\"\nchangelog:\n  sort: asc\n  filters:\n    exclude:\n      - '^docs:'\n      - '^test:'\n\n# The lines beneath this are called `modelines`. See `:help modeline`\n# Feel free to remove those if you don't want/use them.\n# yaml-language-server: $schema=https://goreleaser.com/static/schema.json\n# vim: set ts=2 sw=2 tw=0 fo=cnqoj\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.412109375,
          "content": "FROM golang:latest AS build-env\nWORKDIR /src\nENV CGO_ENABLED=0\nCOPY go.mod /src/\nRUN go mod download\nCOPY . .\nRUN go build -a -o gobuster -trimpath\n\nFROM alpine:latest\n\nRUN apk add --no-cache ca-certificates \\\n    && rm -rf /var/cache/*\n\nRUN mkdir -p /app \\\n    && adduser -D gobuster \\\n    && chown -R gobuster:gobuster /app\n\nUSER gobuster\nWORKDIR /app\n\nCOPY --from=build-env /src/gobuster .\n\nENTRYPOINT [ \"./gobuster\" ]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0595703125,
          "content": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.7783203125,
          "content": ".DEFAULT_GOAL := linux\n\n.PHONY: linux\nlinux:\n\tgo build -o ./gobuster\n\n.PHONY: windows\nwindows:\n\tGOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build -o ./gobuster.exe\n\n.PHONY: fmt\nfmt:\n\tgo fmt ./...\n\n.PHONY: update\nupdate:\n\tgo get -u\n\tgo mod tidy -v\n\n.PHONY: all\nall: fmt update linux windows test lint\n\n.PHONY: test\ntest:\n\tgo test -v -race ./...\n\n.PHONY: lint\nlint:\n\t\"$$(go env GOPATH)/bin/golangci-lint\" run ./...\n\tgo mod tidy\n\n.PHONY: lint-update\nlint-update:\n\tcurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $$(go env GOPATH)/bin\n\t$$(go env GOPATH)/bin/golangci-lint --version\n\n.PHONY: tag\ntag:\n\t@[ \"${TAG}\" ] && echo \"Tagging a new version ${TAG}\" || ( echo \"TAG is not set\"; exit 1 )\n\tgit tag -a \"${TAG}\" -m \"${TAG}\"\n\tgit push origin \"${TAG}\"\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 32.4619140625,
          "content": "# Gobuster\n\nGobuster is a tool used to brute-force:\n\n- URIs (directories and files) in web sites.\n- DNS subdomains (with wildcard support).\n- Virtual Host names on target web servers.\n- Open Amazon S3 buckets\n- Open Google Cloud buckets\n- TFTP servers\n\n## Tags, Statuses, etc\n\n[![Build Status](https://travis-ci.com/OJ/gobuster.svg?branch=master)](https://travis-ci.com/OJ/gobuster) [![Backers on Open Collective](https://opencollective.com/gobuster/backers/badge.svg)](https://opencollective.com/gobuster) [![Sponsors on Open Collective](https://opencollective.com/gobuster/sponsors/badge.svg)](https://opencollective.com/gobuster)\n\n\n## Love this tool? Back it!\n\nIf you're backing us already, you rock. If you're not, that's cool too! Want to back us? [Become a backer](https://opencollective.com/gobuster#backer)!\n\n[![Backers](https://opencollective.com/gobuster/backers.svg?width=890)](https://opencollective.com/gobuster#backers)\n\nAll funds that are donated to this project will be donated to charity. A full log of charity donations will be available in this repository as they are processed.\n\n# Changes\n\n## 3.6\n\n- Wordlist offset parameter to skip x lines from the wordlist\n- prevent double slashes when building up an url in dir mode\n- allow for multiple values and ranges on `--exclude-length`\n- `no-fqdn` parameter on dns bruteforce to disable the use of the systems search domains. This should speed up the run if you have configured some search domains. [https://github.com/OJ/gobuster/pull/418](https://github.com/OJ/gobuster/pull/418)\n\n## 3.5\n\n- Allow Ranges in status code and status code blacklist. Example: 200,300-305,404\n\n## 3.4\n\n- Enable TLS1.0 and TLS1.1 support\n- Add TFTP mode to search for files on tftp servers\n\n## 3.3\n\n- Support TLS client certificates / mtls\n- support loading extensions from file\n- support fuzzing POST body, HTTP headers and basic auth\n- new option to not canonicalize header names\n\n## 3.2\n\n- Use go 1.19\n- use contexts in the correct way\n- get rid of the wildcard flag (except in DNS mode)\n- color output\n- retry on timeout\n- google cloud bucket enumeration\n- fix nil reference errors\n\n## 3.1\n\n- enumerate public AWS S3 buckets\n- fuzzing mode\n- specify HTTP method\n- added support for patterns. You can now specify a file containing patterns that are applied to every word, one by line. Every occurrence of the term `{GOBUSTER}` in it will be replaced with the current wordlist item. Please use with caution as this can cause increase the number of requests issued a lot.\n- The shorthand `p` flag which was assigned to proxy is now used by the pattern flag\n\n## 3.0\n\n- New CLI options so modes are strictly separated (`-m` is now gone!)\n- Performance Optimizations and better connection handling\n- Ability to enumerate vhost names\n- Option to supply custom HTTP headers\n\n# License\n\nSee the LICENSE file.\n\n# Manual\n\n## Available Modes\n\n- dir - the classic directory brute-forcing mode\n- dns - DNS subdomain brute-forcing mode\n- s3 - Enumerate open S3 buckets and look for existence and bucket listings\n- gcs - Enumerate open google cloud buckets\n- vhost - virtual host brute-forcing mode (not the same as DNS!)\n- fuzz - some basic fuzzing, replaces the `FUZZ` keyword\n- tftp - bruteforce tftp files\n\n## Easy Installation\n\n### Binary Releases\n\nWe are now shipping binaries for each of the releases so that you don't even have to build them yourself! How wonderful is that!\n\nIf you're stupid enough to trust binaries that I've put together, you can download them from the [releases](https://github.com/OJ/gobuster/releases) page.\n\n### Docker\n\nYou can also grab a prebuilt docker image from [https://github.com/OJ/gobuster/pkgs/container/gobuster](https://github.com/OJ/gobuster/pkgs/container/gobuster)\n\n```bash\ndocker pull ghcr.io/oj/gobuster:latest\n```\n\n### Using `go install`\n\nIf you have a [Go](https://golang.org/) environment ready to go (at least go 1.19), it's as easy as:\n\n```bash\ngo install github.com/OJ/gobuster/v3@latest\n```\n\nPS: You need at least go 1.19 to compile gobuster.\n\n### Building From Source\n\nSince this tool is written in [Go](https://golang.org/) you need to install the Go language/compiler/etc. Full details of installation and set up can be found [on the Go language website](https://golang.org/doc/install). Once installed you have two options. You need at least go 1.19 to compile gobuster.\n\n### Compiling\n\n`gobuster` has external dependencies, and so they need to be pulled in first:\n\n```bash\ngo get && go build\n```\n\nThis will create a `gobuster` binary for you. If you want to install it in the `$GOPATH/bin` folder you can run:\n\n```bash\ngo install\n```\n\n## Modes\n\nHelp is built-in!\n\n- `gobuster help` - outputs the top-level help.\n- `gobuster help <mode>` - outputs the help specific to that mode.\n\n## `dns` Mode\n\n### Options\n\n```text\nUses DNS subdomain enumeration mode\n\nUsage:\n  gobuster dns [flags]\n\nFlags:\n  -d, --domain string      The target domain\n  -h, --help               help for dns\n  -r, --resolver string    Use custom DNS server (format server.com or server.com:port)\n  -c, --show-cname         Show CNAME records (cannot be used with '-i' option)\n  -i, --show-ips           Show IP addresses\n      --timeout duration   DNS resolver timeout (default 1s)\n      --wildcard           Force continued operation when wildcard found\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n  -o, --output string     Output file to write results to (defaults to stdout)\n  -p, --pattern string    File containing replacement patterns\n  -q, --quiet             Don't print the banner and other noise\n  -t, --threads int       Number of concurrent threads (default 10)\n  -v, --verbose           Verbose output (errors)\n  -w, --wordlist string   Path to the wordlist\n```\n\n### Examples\n\n\n```text\ngobuster dns -d mysite.com -t 50 -w common-names.txt\n```\n\nNormal sample run goes like this:\n\n```text\ngobuster dns -d google.com -w ~/wordlists/subdomains.txt\n\n===============================================================\nGobuster v3.2.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Mode         : dns\n[+] Url/Domain   : google.com\n[+] Threads      : 10\n[+] Wordlist     : /home/oj/wordlists/subdomains.txt\n===============================================================\n2019/06/21 11:54:20 Starting gobuster\n===============================================================\nFound: chrome.google.com\nFound: ns1.google.com\nFound: admin.google.com\nFound: www.google.com\nFound: m.google.com\nFound: support.google.com\nFound: translate.google.com\nFound: cse.google.com\nFound: news.google.com\nFound: music.google.com\nFound: mail.google.com\nFound: store.google.com\nFound: mobile.google.com\nFound: search.google.com\nFound: wap.google.com\nFound: directory.google.com\nFound: local.google.com\nFound: blog.google.com\n===============================================================\n2019/06/21 11:54:20 Finished\n===============================================================\n```\n\nShow IP sample run goes like this:\n\n```text\ngobuster dns -d google.com -w ~/wordlists/subdomains.txt -i\n\n===============================================================\nGobuster v3.2.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Mode         : dns\n[+] Url/Domain   : google.com\n[+] Threads      : 10\n[+] Wordlist     : /home/oj/wordlists/subdomains.txt\n===============================================================\n2019/06/21 11:54:54 Starting gobuster\n===============================================================\nFound: www.google.com [172.217.25.36, 2404:6800:4006:802::2004]\nFound: admin.google.com [172.217.25.46, 2404:6800:4006:806::200e]\nFound: store.google.com [172.217.167.78, 2404:6800:4006:802::200e]\nFound: mobile.google.com [172.217.25.43, 2404:6800:4006:802::200b]\nFound: ns1.google.com [216.239.32.10, 2001:4860:4802:32::a]\nFound: m.google.com [172.217.25.43, 2404:6800:4006:802::200b]\nFound: cse.google.com [172.217.25.46, 2404:6800:4006:80a::200e]\nFound: chrome.google.com [172.217.25.46, 2404:6800:4006:802::200e]\nFound: search.google.com [172.217.25.46, 2404:6800:4006:802::200e]\nFound: local.google.com [172.217.25.46, 2404:6800:4006:80a::200e]\nFound: news.google.com [172.217.25.46, 2404:6800:4006:802::200e]\nFound: blog.google.com [216.58.199.73, 2404:6800:4006:806::2009]\nFound: support.google.com [172.217.25.46, 2404:6800:4006:802::200e]\nFound: wap.google.com [172.217.25.46, 2404:6800:4006:802::200e]\nFound: directory.google.com [172.217.25.46, 2404:6800:4006:802::200e]\nFound: translate.google.com [172.217.25.46, 2404:6800:4006:802::200e]\nFound: music.google.com [172.217.25.46, 2404:6800:4006:802::200e]\nFound: mail.google.com [172.217.25.37, 2404:6800:4006:802::2005]\n===============================================================\n2019/06/21 11:54:55 Finished\n===============================================================\n```\n\nBase domain validation warning when the base domain fails to resolve. This is a warning rather than a failure in case the user fat-fingers while typing the domain.\n\n```text\ngobuster dns -d yp.to -w ~/wordlists/subdomains.txt -i\n\n===============================================================\nGobuster v3.2.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Mode         : dns\n[+] Url/Domain   : yp.to\n[+] Threads      : 10\n[+] Wordlist     : /home/oj/wordlists/subdomains.txt\n===============================================================\n2019/06/21 11:56:43 Starting gobuster\n===============================================================\n2019/06/21 11:56:53 [-] Unable to validate base domain: yp.to\nFound: cr.yp.to [131.193.32.108, 131.193.32.109]\n===============================================================\n2019/06/21 11:56:53 Finished\n===============================================================\n```\n\nWildcard DNS is also detected properly:\n\n```text\ngobuster dns -d 0.0.1.xip.io -w ~/wordlists/subdomains.txt\n\n===============================================================\nGobuster v3.2.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Mode         : dns\n[+] Url/Domain   : 0.0.1.xip.io\n[+] Threads      : 10\n[+] Wordlist     : /home/oj/wordlists/subdomains.txt\n===============================================================\n2019/06/21 12:13:48 Starting gobuster\n===============================================================\n2019/06/21 12:13:48 [-] Wildcard DNS found. IP address(es): 1.0.0.0\n2019/06/21 12:13:48 [!] To force processing of Wildcard DNS, specify the '--wildcard' switch.\n===============================================================\n2019/06/21 12:13:48 Finished\n===============================================================\n```\n\nIf the user wants to force processing of a domain that has wildcard entries, use `--wildcard`:\n\n```text\ngobuster dns -d 0.0.1.xip.io -w ~/wordlists/subdomains.txt --wildcard\n\n===============================================================\nGobuster v3.2.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Mode         : dns\n[+] Url/Domain   : 0.0.1.xip.io\n[+] Threads      : 10\n[+] Wordlist     : /home/oj/wordlists/subdomains.txt\n===============================================================\n2019/06/21 12:13:51 Starting gobuster\n===============================================================\n2019/06/21 12:13:51 [-] Wildcard DNS found. IP address(es): 1.0.0.0\nFound: 127.0.0.1.xip.io\nFound: test.127.0.0.1.xip.io\n===============================================================\n2019/06/21 12:13:53 Finished\n===============================================================\n```\n\n## `dir` Mode\n\n### Options\n\n```text\nUses directory/file enumeration mode\n\nUsage:\n  gobuster dir [flags]\n\nFlags:\n  -f, --add-slash                       Append / to each request\n  -c, --cookies string                  Cookies to use for the requests\n  -d, --discover-backup                 Also search for backup files by appending multiple backup extensions\n      --exclude-length ints             exclude the following content length (completely ignores the status). Supply multiple times to exclude multiple sizes.\n  -e, --expanded                        Expanded mode, print full URLs\n  -x, --extensions string               File extension(s) to search for\n  -r, --follow-redirect                 Follow redirects\n  -H, --headers stringArray             Specify HTTP headers, -H 'Header1: val1' -H 'Header2: val2'\n  -h, --help                            help for dir\n      --hide-length                     Hide the length of the body in the output\n  -m, --method string                   Use the following HTTP method (default \"GET\")\n  -n, --no-status                       Don't print status codes\n  -k, --no-tls-validation               Skip TLS certificate verification\n  -P, --password string                 Password for Basic Auth\n      --proxy string                    Proxy to use for requests [http(s)://host:port]\n      --random-agent                    Use a random User-Agent string\n      --retry                           Should retry on request timeout\n      --retry-attempts int              Times to retry on request timeout (default 3)\n  -s, --status-codes string             Positive status codes (will be overwritten with status-codes-blacklist if set)\n  -b, --status-codes-blacklist string   Negative status codes (will override status-codes if set) (default \"404\")\n      --timeout duration                HTTP Timeout (default 10s)\n  -u, --url string                      The target URL\n  -a, --useragent string                Set the User-Agent string (default \"gobuster/3.2.0\")\n  -U, --username string                 Username for Basic Auth\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n  -o, --output string     Output file to write results to (defaults to stdout)\n  -p, --pattern string    File containing replacement patterns\n  -q, --quiet             Don't print the banner and other noise\n  -t, --threads int       Number of concurrent threads (default 10)\n  -v, --verbose           Verbose output (errors)\n  -w, --wordlist string   Path to the wordlist\n```\n\n### Examples\n\n```text\ngobuster dir -u https://mysite.com/path/to/folder -c 'session=123456' -t 50 -w common-files.txt -x .php,.html\n```\n\nDefault options looks like this:\n\n```text\ngobuster dir -u https://buffered.io -w ~/wordlists/shortlist.txt\n\n===============================================================\nGobuster v3.2.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Mode         : dir\n[+] Url/Domain   : https://buffered.io/\n[+] Threads      : 10\n[+] Wordlist     : /home/oj/wordlists/shortlist.txt\n[+] Status codes : 200,204,301,302,307,401,403\n[+] User Agent   : gobuster/3.2.0\n[+] Timeout      : 10s\n===============================================================\n2019/06/21 11:49:43 Starting gobuster\n===============================================================\n/categories (Status: 301)\n/contact (Status: 301)\n/posts (Status: 301)\n/index (Status: 200)\n===============================================================\n2019/06/21 11:49:44 Finished\n===============================================================\n```\n\nDefault options with status codes disabled looks like this:\n\n```text\ngobuster dir -u https://buffered.io -w ~/wordlists/shortlist.txt -n\n\n===============================================================\nGobuster v3.2.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Mode         : dir\n[+] Url/Domain   : https://buffered.io/\n[+] Threads      : 10\n[+] Wordlist     : /home/oj/wordlists/shortlist.txt\n[+] Status codes : 200,204,301,302,307,401,403\n[+] User Agent   : gobuster/3.2.0\n[+] No status    : true\n[+] Timeout      : 10s\n===============================================================\n2019/06/21 11:50:18 Starting gobuster\n===============================================================\n/categories\n/contact\n/index\n/posts\n===============================================================\n2019/06/21 11:50:18 Finished\n===============================================================\n```\n\nVerbose output looks like this:\n\n```text\ngobuster dir -u https://buffered.io -w ~/wordlists/shortlist.txt -v\n\n===============================================================\nGobuster v3.2.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Mode         : dir\n[+] Url/Domain   : https://buffered.io/\n[+] Threads      : 10\n[+] Wordlist     : /home/oj/wordlists/shortlist.txt\n[+] Status codes : 200,204,301,302,307,401,403\n[+] User Agent   : gobuster/3.2.0\n[+] Verbose      : true\n[+] Timeout      : 10s\n===============================================================\n2019/06/21 11:50:51 Starting gobuster\n===============================================================\nMissed: /alsodoesnotexist (Status: 404)\nFound: /index (Status: 200)\nMissed: /doesnotexist (Status: 404)\nFound: /categories (Status: 301)\nFound: /posts (Status: 301)\nFound: /contact (Status: 301)\n===============================================================\n2019/06/21 11:50:51 Finished\n===============================================================\n```\n\nExample showing content length:\n\n```text\ngobuster dir -u https://buffered.io -w ~/wordlists/shortlist.txt -l\n\n===============================================================\nGobuster v3.2.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Mode         : dir\n[+] Url/Domain   : https://buffered.io/\n[+] Threads      : 10\n[+] Wordlist     : /home/oj/wordlists/shortlist.txt\n[+] Status codes : 200,204,301,302,307,401,403\n[+] User Agent   : gobuster/3.2.0\n[+] Show length  : true\n[+] Timeout      : 10s\n===============================================================\n2019/06/21 11:51:16 Starting gobuster\n===============================================================\n/categories (Status: 301) [Size: 178]\n/posts (Status: 301) [Size: 178]\n/contact (Status: 301) [Size: 178]\n/index (Status: 200) [Size: 51759]\n===============================================================\n2019/06/21 11:51:17 Finished\n===============================================================\n```\n\nQuiet output, with status disabled and expanded mode looks like this (\"grep mode\"):\n\n```text\ngobuster dir -u https://buffered.io -w ~/wordlists/shortlist.txt -q -n -e\nhttps://buffered.io/index\nhttps://buffered.io/contact\nhttps://buffered.io/posts\nhttps://buffered.io/categories\n```\n\n## `vhost` Mode\n\n### Options\n\n```text\nUses VHOST enumeration mode (you most probably want to use the IP address as the URL parameter)\n\nUsage:\n  gobuster vhost [flags]\n\nFlags:\n      --append-domain         Append main domain from URL to words from wordlist. Otherwise the fully qualified domains need to be specified in the wordlist.\n  -c, --cookies string        Cookies to use for the requests\n      --domain string         the domain to append when using an IP address as URL. If left empty and you specify a domain based URL the hostname from the URL is extracted\n      --exclude-length ints   exclude the following content length (completely ignores the status). Supply multiple times to exclude multiple sizes.\n  -r, --follow-redirect       Follow redirects\n  -H, --headers stringArray   Specify HTTP headers, -H 'Header1: val1' -H 'Header2: val2'\n  -h, --help                  help for vhost\n  -m, --method string         Use the following HTTP method (default \"GET\")\n  -k, --no-tls-validation     Skip TLS certificate verification\n  -P, --password string       Password for Basic Auth\n      --proxy string          Proxy to use for requests [http(s)://host:port]\n      --random-agent          Use a random User-Agent string\n      --retry                 Should retry on request timeout\n      --retry-attempts int    Times to retry on request timeout (default 3)\n      --timeout duration      HTTP Timeout (default 10s)\n  -u, --url string            The target URL\n  -a, --useragent string      Set the User-Agent string (default \"gobuster/3.2.0\")\n  -U, --username string       Username for Basic Auth\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n  -o, --output string     Output file to write results to (defaults to stdout)\n  -p, --pattern string    File containing replacement patterns\n  -q, --quiet             Don't print the banner and other noise\n  -t, --threads int       Number of concurrent threads (default 10)\n  -v, --verbose           Verbose output (errors)\n  -w, --wordlist string   Path to the wordlist\n```\n\n### Examples\n\n\n```text\ngobuster vhost -u https://mysite.com -w common-vhosts.txt\n```\n\nNormal sample run goes like this:\n\n```text\ngobuster vhost -u https://mysite.com -w common-vhosts.txt\n\n===============================================================\nGobuster v3.2.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:          https://mysite.com\n[+] Threads:      10\n[+] Wordlist:     common-vhosts.txt\n[+] User Agent:   gobuster/3.2.0\n[+] Timeout:      10s\n===============================================================\n2019/06/21 08:36:00 Starting gobuster\n===============================================================\nFound: www.mysite.com\nFound: piwik.mysite.com\nFound: mail.mysite.com\n===============================================================\n2019/06/21 08:36:05 Finished\n===============================================================\n```\n\n## `fuzz` Mode\n\n### Options\n\n```text\nUses fuzzing mode\n\nUsage:\n  gobuster fuzz [flags]\n\nFlags:\n  -c, --cookies string              Cookies to use for the requests\n      --exclude-length ints         exclude the following content length (completely ignores the status). Supply multiple times to exclude multiple sizes.\n  -b, --excludestatuscodes string   Negative status codes (will override statuscodes if set)\n  -r, --follow-redirect             Follow redirects\n  -H, --headers stringArray         Specify HTTP headers, -H 'Header1: val1' -H 'Header2: val2'\n  -h, --help                        help for fuzz\n  -m, --method string               Use the following HTTP method (default \"GET\")\n  -k, --no-tls-validation           Skip TLS certificate verification\n  -P, --password string             Password for Basic Auth\n      --proxy string                Proxy to use for requests [http(s)://host:port]\n      --random-agent                Use a random User-Agent string\n      --retry                       Should retry on request timeout\n      --retry-attempts int          Times to retry on request timeout (default 3)\n      --timeout duration            HTTP Timeout (default 10s)\n  -u, --url string                  The target URL\n  -a, --useragent string            Set the User-Agent string (default \"gobuster/3.2.0\")\n  -U, --username string             Username for Basic Auth\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n  -o, --output string     Output file to write results to (defaults to stdout)\n  -p, --pattern string    File containing replacement patterns\n  -q, --quiet             Don't print the banner and other noise\n  -t, --threads int       Number of concurrent threads (default 10)\n  -v, --verbose           Verbose output (errors)\n  -w, --wordlist string   Path to the wordlist\n```\n\n### Examples\n\n```text\ngobuster fuzz -u https://example.com?FUZZ=test -w parameter-names.txt\n```\n\n## `s3` Mode\n\n### Options\n\n```text\nUses aws bucket enumeration mode\n\nUsage:\n  gobuster s3 [flags]\n\nFlags:\n  -h, --help                 help for s3\n  -m, --maxfiles int         max files to list when listing buckets (only shown in verbose mode) (default 5)\n  -k, --no-tls-validation    Skip TLS certificate verification\n      --proxy string         Proxy to use for requests [http(s)://host:port]\n      --random-agent         Use a random User-Agent string\n      --retry                Should retry on request timeout\n      --retry-attempts int   Times to retry on request timeout (default 3)\n      --timeout duration     HTTP Timeout (default 10s)\n  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n  -o, --output string     Output file to write results to (defaults to stdout)\n  -p, --pattern string    File containing replacement patterns\n  -q, --quiet             Don't print the banner and other noise\n  -t, --threads int       Number of concurrent threads (default 10)\n  -v, --verbose           Verbose output (errors)\n  -w, --wordlist string   Path to the wordlist\n```\n\n### Examples\n\n```text\ngobuster s3 -w bucket-names.txt\n```\n\n## `gcs` Mode\n\n### Options\n\n```text\nUses gcs bucket enumeration mode\n\nUsage:\n  gobuster gcs [flags]\n\nFlags:\n  -h, --help                 help for gcs\n  -m, --maxfiles int         max files to list when listing buckets (only shown in verbose mode) (default 5)\n  -k, --no-tls-validation    Skip TLS certificate verification\n      --proxy string         Proxy to use for requests [http(s)://host:port]\n      --random-agent         Use a random User-Agent string\n      --retry                Should retry on request timeout\n      --retry-attempts int   Times to retry on request timeout (default 3)\n      --timeout duration     HTTP Timeout (default 10s)\n  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n  -o, --output string     Output file to write results to (defaults to stdout)\n  -p, --pattern string    File containing replacement patterns\n  -q, --quiet             Don't print the banner and other noise\n  -t, --threads int       Number of concurrent threads (default 10)\n  -v, --verbose           Verbose output (errors)\n  -w, --wordlist string   Path to the wordlist\n```\n\n### Examples\n\n```text\ngobuster gcs -w bucket-names.txt\n```\n\n## `tftp` Mode\n\n### Options\n\n```text\nUses TFTP enumeration mode\n\nUsage:\n  gobuster tftp [flags]\n\nFlags:\n  -h, --help               help for tftp\n  -s, --server string      The target TFTP server\n      --timeout duration   TFTP timeout (default 1s)\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n  -o, --output string     Output file to write results to (defaults to stdout)\n  -p, --pattern string    File containing replacement patterns\n  -q, --quiet             Don't print the banner and other noise\n  -t, --threads int       Number of concurrent threads (default 10)\n  -v, --verbose           Verbose output (errors)\n  -w, --wordlist string   Path to the wordlist\n```\n\n### Examples\n\n```text\ngobuster tftp -s tftp.example.com -w common-filenames.txt\n```\n\n\n## Wordlists via STDIN\n\nWordlists can be piped into `gobuster` via stdin by providing a `-` to the `-w` option:\n\n```bash\nhashcat -a 3 --stdout ?l | gobuster dir -u https://mysite.com -w -\n```\n\nNote: If the `-w` option is specified at the same time as piping from STDIN, an error will be shown and the program will terminate.\n\n## Patterns\n\nYou can supply pattern files that will be applied to every word from the wordlist.\nJust place the string `{GOBUSTER}` in it and this will be replaced with the word.\nThis feature is also handy in s3 mode to pre- or postfix certain patterns.\n\n**Caution:** Using a big pattern file can cause a lot of request as every pattern is applied to every word in the wordlist.\n\n### Example file\n\n```text\n{GOBUSTER}Partial\n{GOBUSTER}Service\nPRE{GOBUSTER}POST\n{GOBUSTER}-prod\n{GOBUSTER}-dev\n```\n\n#### Use case in combination with patterns\n\n- Create a custom wordlist for the target containing company names and so on\n- Create a pattern file to use for common bucket names.\n\n```bash\ncurl -s --output - https://raw.githubusercontent.com/eth0izzle/bucket-stream/master/permutations/extended.txt | sed -s 's/%s/{GOBUSTER}/' > patterns.txt\n```\n\n- Run gobuster with the custom input. Be sure to turn verbose mode on to see the bucket details\n\n```text\ngobuster s3 --wordlist my.custom.wordlist -p patterns.txt -v\n```\n\nNormal sample run goes like this:\n\n```text\nPS C:\\Users\\firefart\\Documents\\code\\gobuster> .\\gobuster.exe s3 --wordlist .\\wordlist.txt\n===============================================================\nGobuster v3.2.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Threads:                 10\n[+] Wordlist:                .\\wordlist.txt\n[+] User Agent:              gobuster/3.2.0\n[+] Timeout:                 10s\n[+] Maximum files to list:   5\n===============================================================\n2019/08/12 21:48:16 Starting gobuster in S3 bucket enumeration mode\n===============================================================\nwebmail\nhacking\ncss\nimg\nwww\ndav\nweb\nlocalhost\n===============================================================\n2019/08/12 21:48:17 Finished\n===============================================================\n```\n\nVerbose and sample run\n\n```text\nPS C:\\Users\\firefart\\Documents\\code\\gobuster> .\\gobuster.exe s3 --wordlist .\\wordlist.txt -v\n===============================================================\nGobuster v3.2.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Threads:                 10\n[+] Wordlist:                .\\wordlist.txt\n[+] User Agent:              gobuster/3.2.0\n[+] Verbose:                 true\n[+] Timeout:                 10s\n[+] Maximum files to list:   5\n===============================================================\n2019/08/12 21:49:00 Starting gobuster in S3 bucket enumeration mode\n===============================================================\nwww [Error: All access to this object has been disabled (AllAccessDisabled)]\nhacking [Error: Access Denied (AccessDenied)]\ncss [Error: All access to this object has been disabled (AllAccessDisabled)]\nwebmail [Error: All access to this object has been disabled (AllAccessDisabled)]\nimg [Bucket Listing enabled: GodBlessPotomac1.jpg (1236807b), HOMEWORKOUTAUDIO.zip (203908818b), ProductionInfo.xml (11946b), Start of Perpetual Motion Logo-1.mp3 (621821b), addressbook.gif (3115b)]\nweb [Error: Access Denied (AccessDenied)]\ndav [Error: All access to this object has been disabled (AllAccessDisabled)]\nlocalhost [Error: Access Denied (AccessDenied)]\n===============================================================\n2019/08/12 21:49:01 Finished\n===============================================================\n```\n\nExtended sample run\n\n```text\nPS C:\\Users\\firefart\\Documents\\code\\gobuster> .\\gobuster.exe s3 --wordlist .\\wordlist.txt -e\n===============================================================\nGobuster v3.2.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Threads:                 10\n[+] Wordlist:                .\\wordlist.txt\n[+] User Agent:              gobuster/3.2.0\n[+] Timeout:                 10s\n[+] Expanded:                true\n[+] Maximum files to list:   5\n===============================================================\n2019/08/12 21:48:38 Starting gobuster in S3 bucket enumeration mode\n===============================================================\nhttp://css.s3.amazonaws.com/\nhttp://www.s3.amazonaws.com/\nhttp://webmail.s3.amazonaws.com/\nhttp://hacking.s3.amazonaws.com/\nhttp://img.s3.amazonaws.com/\nhttp://web.s3.amazonaws.com/\nhttp://dav.s3.amazonaws.com/\nhttp://localhost.s3.amazonaws.com/\n===============================================================\n2019/08/12 21:48:38 Finished\n===============================================================\n```\n"
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "cspell.json",
          "type": "blob",
          "size": 0.9921875,
          "content": "// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"libgobuster\",\n        \"gobuster\",\n        \"gobusters\",\n        \"gobusterdir\",\n        \"gobusterdns\",\n        \"gobusterfuzz\",\n        \"gobustervhost\",\n        \"gobustergcs\",\n        \"vhost\",\n        \"vhosts\",\n        \"cname\",\n        \"uuid\",\n        \"dirb\",\n        \"wordlist\",\n        \"wordlists\",\n        \"hashcat\",\n        \"Mehlmauer\",\n        \"firefart\",\n        \"GOPATH\",\n        \"nolint\",\n        \"unconvert\",\n        \"unparam\",\n        \"prealloc\",\n        \"gochecknoglobals\",\n        \"gochecknoinits\",\n        \"fatih\",\n        \"netip\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.51171875,
          "content": "module github.com/OJ/gobuster/v3\n\ngo 1.19\n\nrequire (\n\tgithub.com/fatih/color v1.15.0\n\tgithub.com/google/uuid v1.3.0\n\tgithub.com/pin/tftp/v3 v3.0.0\n\tgithub.com/spf13/cobra v1.7.0\n\tgolang.org/x/crypto v0.14.0\n\tgolang.org/x/term v0.13.0\n)\n\nrequire (\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.19 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgolang.org/x/net v0.17.0 // indirect\n\tgolang.org/x/sys v0.13.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 2.9677734375,
          "content": "github.com/cpuguy83/go-md2man/v2 v2.0.2/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/fatih/color v1.15.0 h1:kOqh6YHBtK8aywxGerMG2Eq3H6Qgoqeo13Bk2Mv/nBs=\ngithub.com/fatih/color v1.15.0/go.mod h1:0h5ZqXfHYED7Bhv2ZJamyIOUej9KtShiJESRwBDUSsw=\ngithub.com/google/uuid v1.3.0 h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=\ngithub.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.19 h1:JITubQf0MOLdlGRuRq+jtsDlekdYPia9ZFsB8h/APPA=\ngithub.com/mattn/go-isatty v0.0.19/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/pin/tftp/v3 v3.0.0 h1:o9cQpmWBSbgiaYXuN+qJAB12XBIv4dT7OuOONucn2l0=\ngithub.com/pin/tftp/v3 v3.0.0/go.mod h1:xwQaN4viYL019tM4i8iecm++5cGxSqen6AJEOEyEI0w=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/spf13/cobra v1.7.0 h1:hyqWnYt1ZQShIddO5kBpj3vu05/++x6tJ6dg8EC572I=\ngithub.com/spf13/cobra v1.7.0/go.mod h1:uLxZILRyS/50WlhOIKD7W6V5bgeIt+4sICxh6uRMrb0=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.14.0 h1:wBqGXzWJW6m1XrIKlAH0Hs1JJ7+9KBwnIO8v66Q9cHc=\ngolang.org/x/crypto v0.14.0/go.mod h1:MVFd36DqK4CsrnJYDkBA3VC4m2GkXAM0PvzMCn4JQf4=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.17.0 h1:pVaXccu2ozPjCXewfr1S7xza/zcXTity9cCdXQYSjIM=\ngolang.org/x/net v0.17.0/go.mod h1:NxSsAGuq816PNPmqtQdLE42eU2Fs7NoRIZrHJAlaCOE=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.13.0 h1:Af8nKPmuFypiUBjVoU9V20FiaFXOcuZI21p0ycVYYGE=\ngolang.org/x/sys v0.13.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/term v0.13.0 h1:bb+I9cTfFazGW51MZqBVmZy7+JEJMouUHTUSKVQLBek=\ngolang.org/x/term v0.13.0/go.mod h1:LTmsnFJwVN6bCy1rVCoS+qHT1HhALEFxKncY3WNNh4U=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "gobusterdir",
          "type": "tree",
          "content": null
        },
        {
          "name": "gobusterdns",
          "type": "tree",
          "content": null
        },
        {
          "name": "gobusterfuzz",
          "type": "tree",
          "content": null
        },
        {
          "name": "gobustergcs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gobusters3",
          "type": "tree",
          "content": null
        },
        {
          "name": "gobustertftp",
          "type": "tree",
          "content": null
        },
        {
          "name": "gobustervhost",
          "type": "tree",
          "content": null
        },
        {
          "name": "libgobuster",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 0.58984375,
          "content": "package main\n\nimport \"github.com/OJ/gobuster/v3/cli/cmd\"\n\n//----------------------------------------------------\n// Gobuster -- by OJ Reeves\n//\n// A crap attempt at building something that resembles\n// dirbuster or dirb using Go. The goal was to build\n// a tool that would help learn Go and to actually do\n// something useful. The idea of having this compile\n// to native code is also appealing.\n//\n// Run: gobuster -h\n//\n// Please see THANKS file for contributors.\n// Please see LICENSE file for license details.\n//\n//----------------------------------------------------\n\nfunc main() {\n\tcmd.Execute()\n}\n"
        }
      ]
    }
  ]
}