{
  "metadata": {
    "timestamp": 1736568168673,
    "page": 4,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "moby/moby",
      "stars": 68996,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0712890625,
          "content": ".git\nbundles/\ncli/winresources/**/winres.json\ncli/winresources/**/*.syso\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.119140625,
          "content": "Dockerfile* linguist-language=Dockerfile\nvendor.mod linguist-language=Go-Module\nvendor.sum linguist-language=Go-Checksums\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.44921875,
          "content": "# If you want to ignore files created by your editor/tools, please consider a\n# [global .gitignore](https://help.github.com/articles/ignoring-files).\n\n*~\n*.bak\n*.orig\n.*.swp\n.DS_Store\nthumbs.db\n\n# local repository customization\n.envrc\n.bashrc\n.editorconfig\n\n# build artifacts\nbundles/\ncli/winresources/*/*.syso\ncli/winresources/*/winres.json\ncontrib/builder/rpm/*/changelog\n\n# ci artifacts\n*.exe\n*.gz\ngo-test-report.json\njunit-report.xml\nprofile.out\ntest.main\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 8.68359375,
          "content": "linters:\n  enable:\n    - copyloopvar   # Detects places where loop variables are copied.\n    - depguard\n    - dupword       # Detects duplicate words.\n    - goimports\n    - gosec         # Detects security problems.\n    - gosimple\n    - govet\n    - forbidigo\n    - importas\n    - ineffassign\n    - misspell      # Detects commonly misspelled English words in comments.\n    - revive        # Metalinter; drop-in replacement for golint.\n    - staticcheck\n    - typecheck\n    - unconvert     # Detects unnecessary type conversions.\n    - unused\n\n  disable:\n    - errcheck\n\nrun:\n  # prevent golangci-lint from deducting the go version to lint for through go.mod,\n  # which causes it to fallback to go1.17 semantics.\n  go: \"1.23.4\"\n  concurrency: 2\n  # Only supported with go modules enabled (build flag -mod=vendor only valid when using modules)\n  # modules-download-mode: vendor\n\nlinters-settings:\n  depguard:\n    rules:\n      main:\n        deny:\n          - pkg: io/ioutil\n            desc: The io/ioutil package has been deprecated, see https://go.dev/doc/go1.16#ioutil\n          - pkg: \"github.com/stretchr/testify/assert\"\n            desc: Use \"gotest.tools/v3/assert\" instead\n          - pkg: \"github.com/stretchr/testify/require\"\n            desc: Use \"gotest.tools/v3/assert\" instead\n          - pkg: \"github.com/stretchr/testify/suite\"\n            desc: Do not use\n          - pkg: \"github.com/containerd/containerd/errdefs\"\n            desc: The errdefs package has moved to a separate module, https://github.com/containerd/errdefs\n          - pkg: \"github.com/containerd/containerd/log\"\n            desc: The logs package has moved to a separate module, https://github.com/containerd/log\n          - pkg: \"github.com/containerd/containerd/pkg/userns\"\n            desc: Use github.com/moby/sys/userns instead.\n          - pkg: \"github.com/tonistiigi/fsutil\"\n            desc: The fsutil module does not have a stable API, so we should not have a direct dependency unless necessary.\n\n  dupword:\n    ignore:\n      - \"true\"    # some tests use this as expected output\n      - \"false\"   # some tests use this as expected output\n      - \"root\"    # for tests using \"ls\" output with files owned by \"root:root\"\n\n  forbidigo:\n    forbid:\n      - pkg: ^sync/atomic$\n        p: ^atomic\\.(Add|CompareAndSwap|Load|Store|Swap).\n        msg: Go 1.19 atomic types should be used instead.\n      - pkg: ^regexp$\n        p: ^regexp\\.MustCompile\n        msg: Use internal/lazyregexp.New instead.\n      - pkg: github.com/vishvananda/netlink$\n        p: ^netlink\\.(Handle\\.)?(AddrList|BridgeVlanList|ChainList|ClassList|ConntrackTableList|ConntrackDeleteFilter$|ConntrackDeleteFilters|DevLinkGetDeviceList|DevLinkGetAllPortList|DevlinkGetDeviceParams|FilterList|FouList|GenlFamilyList|GTPPDPList|LinkByName|LinkByAlias|LinkList|LinkSubscribeWithOptions|NeighList$|NeighProxyList|NeighListExecute|NeighSubscribeWithOptions|LinkGetProtinfo|QdiscList|RdmaLinkList|RdmaLinkByName|RdmaLinkDel|RouteList|RouteListFilteredIter|RuleListFiltered$|RouteSubscribeWithOptions|RuleList$|RuleListFiltered|SocketGet|SocketDiagTCPInfo|SocketDiagTCP|SocketDiagUDPInfo|SocketDiagUDP|UnixSocketDiagInfo|UnixSocketDiag|VDPAGetDevConfigList|VDPAGetDevList|VDPAGetMGMTDevList|XfrmPolicyList|XfrmStateList)\n        msg: Use internal nlwrap package for EINTR handling.\n      - pkg: github.com/docker/docker/internal/nlwrap$\n        p: ^nlwrap.Handle.(BridgeVlanList|ChainList|ClassList|ConntrackDeleteFilter$|DevLinkGetDeviceList|DevLinkGetAllPortList|DevlinkGetDeviceParams|FilterList|FouList|GenlFamilyList|GTPPDPList|LinkByAlias|LinkSubscribeWithOptions|NeighList$|NeighProxyList|NeighListExecute|NeighSubscribeWithOptions|LinkGetProtinfo|QdiscList|RdmaLinkList|RdmaLinkByName|RdmaLinkDel|RouteListFilteredIter|RuleListFiltered$|RouteSubscribeWithOptions|RuleList$|RuleListFiltered|SocketGet|SocketDiagTCPInfo|SocketDiagTCP|SocketDiagUDPInfo|SocketDiagUDP|UnixSocketDiagInfo|UnixSocketDiag|VDPAGetDevConfigList|VDPAGetDevList|VDPAGetMGMTDevList)\n        msg: Add a wrapper to nlwrap.Handle for EINTR handling and update the list in .golangci.yml.\n    analyze-types: true\n\n  gosec:\n    excludes:\n      - G104 # G104: Errors unhandled; (TODO: reduce unhandled errors, or explicitly ignore)\n      - G113 # G113: Potential uncontrolled memory consumption in Rat.SetString (CVE-2022-23772); (only affects go < 1.16.14. and go < 1.17.7)\n      - G115 # G115: integer overflow conversion; (TODO: verify these: https://github.com/moby/moby/issues/48358)\n      - G204 # G204: Subprocess launched with variable; too many false positives.\n      - G301 # G301: Expect directory permissions to be 0750 or less (also EXC0009); too restrictive\n      - G302 # G302: Expect file permissions to be 0600 or less (also EXC0009); too restrictive\n      - G304 # G304: Potential file inclusion via variable.\n      - G306 # G306: Expect WriteFile permissions to be 0600 or less (too restrictive; also flags \"0o644\" permissions)\n      - G307 # G307: Deferring unsafe method \"*os.File\" on type \"Close\" (also EXC0008); (TODO: evaluate these and fix where needed: G307: Deferring unsafe method \"*os.File\" on type \"Close\")\n      - G504 # G504: Blocklisted import net/http/cgi: Go versions < 1.6.3 are vulnerable to Httpoxy attack: (CVE-2016-5386); (only affects go < 1.6.3)\n\n  govet:\n    enable-all: true\n    disable:\n      - fieldalignment # TODO: evaluate which ones should be updated.\n\n  importas:\n    # Do not allow unaliased imports of aliased packages.\n    no-unaliased: true\n\n    alias:\n      # Enforce alias to prevent it accidentally being used instead of our\n      # own errdefs package (or vice-versa).\n      - pkg: github.com/containerd/errdefs\n        alias: cerrdefs\n      - pkg: github.com/containerd/containerd/images\n        alias: c8dimages\n      - pkg: github.com/opencontainers/image-spec/specs-go/v1\n        alias: ocispec\n\n  revive:\n    rules:\n      # FIXME make sure all packages have a description. Currently, there's many packages without.\n      - name: package-comments\n        disabled: true\n\nissues:\n  # The default exclusion rules are a bit too permissive, so copying the relevant ones below\n  exclude-use-default: false\n\n  exclude-dirs:\n    - docs\n\n  exclude-rules:\n    # We prefer to use an \"exclude-list\" so that new \"default\" exclusions are not\n    # automatically inherited. We can decide whether or not to follow upstream\n    # defaults when updating golang-ci-lint versions.\n    # Unfortunately, this means we have to copy the whole exclusion pattern, as\n    # (unlike the \"include\" option), the \"exclude\" option does not take exclusion\n    # ID's.\n    #\n    # These exclusion patterns are copied from the default excludes at:\n    # https://github.com/golangci/golangci-lint/blob/v1.61.0/pkg/config/issues.go#L11-L104\n    #\n    # The default list of exclusions can be found at:\n    # https://golangci-lint.run/usage/false-positives/#default-exclusions\n\n    # EXC0001\n    - text: \"Error return value of .((os\\\\.)?std(out|err)\\\\..*|.*Close|.*Flush|os\\\\.Remove(All)?|.*print(f|ln)?|os\\\\.(Un)?Setenv). is not checked\"\n      linters:\n        - errcheck\n\n    # Exclude some linters from running on tests files.\n    - path: _test\\.go\n      linters:\n        - errcheck\n\n    - text: \"G404: Use of weak random number generator\"\n      path: _test\\.go\n      linters:\n        - gosec\n\n    # Suppress golint complaining about generated types in api/types/\n    - text: \"type name will be used as (container|volume)\\\\.(Container|Volume).* by other packages, and that stutters; consider calling this\"\n      path: \"api/types/(volume|container)/\"\n      linters:\n        - revive\n    # FIXME temporarily suppress these (see https://github.com/gotestyourself/gotest.tools/issues/272)\n    - text: \"SA1019: (assert|cmp|is)\\\\.ErrorType is deprecated\"\n      linters:\n        - staticcheck\n\n    - text: \"ineffectual assignment to ctx\"\n      source: \"ctx[, ].*=.*\\\\(ctx[,)]\"\n      linters:\n        - ineffassign\n\n    - text: \"SA4006: this value of `ctx` is never used\"\n      source: \"ctx[, ].*=.*\\\\(ctx[,)]\"\n      linters:\n        - staticcheck\n\n    - text: '^shadow: declaration of \"(ctx|err|ok)\" shadows declaration'\n      linters:\n        - govet\n    - text: '^shadow: declaration of \"(out)\" shadows declaration'\n      path: _test\\.go\n      linters:\n        - govet\n    - text: 'use of `regexp.MustCompile` forbidden'\n      path: _test\\.go\n      linters:\n        - forbidigo\n    - text: 'use of `regexp.MustCompile` forbidden'\n      path: \"internal/lazyregexp\"\n      linters:\n        - forbidigo\n    - text: 'use of `regexp.MustCompile` forbidden'\n      path: \"libnetwork/cmd/networkdb-test/dbclient\"\n      linters:\n        - forbidigo\n\n  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.\n  max-issues-per-linter: 0\n\n  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.\n  max-same-issues: 0\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 39.1318359375,
          "content": "# This file lists the canonical name and email of contributors, and is used to\n# generate AUTHORS (in hack/generate-authors.sh).\n#\n# To find new duplicates, regenerate AUTHORS and scan for name duplicates, or\n# run the following to find email duplicates:\n#   git log --format='%aE - %aN' | sort -uf | awk -v IGNORECASE=1 '$1 in a {print a[$1]; print}; {a[$1]=$0}'\n#\n# For an explanation of this file format, consult gitmailmap(5).\n\nAaron Yoshitake <airandfingers@gmail.com>\nAaron L. Xu <liker.xu@foxmail.com>\nAaron L. Xu <liker.xu@foxmail.com> <likexu@harmonycloud.cn>\nAaron Lehmann <alehmann@netflix.com>\nAaron Lehmann <alehmann@netflix.com> <aaron.lehmann@docker.com>\nAbhinandan Prativadi <aprativadi@gmail.com>\nAbhinandan Prativadi <aprativadi@gmail.com> <abhi@docker.com>\nAbhinandan Prativadi <aprativadi@gmail.com> abhi <user.email>\nAbhishek Chanda <abhishek.becs@gmail.com>\nAbhishek Chanda <abhishek.becs@gmail.com> <abhishek.chanda@emc.com>\nAda Mancini <ada@docker.com>\nAdam Dobrawy <naczelnik@jawnosc.tk>\nAdam Dobrawy <naczelnik@jawnosc.tk> <ad-m@users.noreply.github.com>\nAdrien Gallouët <adrien@gallouet.fr> <angt@users.noreply.github.com>\nAhmed Kamal <email.ahmedkamal@googlemail.com>\nAhmet Alp Balkan <ahmetb@microsoft.com> <ahmetalpbalkan@gmail.com>\nAJ Bowen <aj@soulshake.net>\nAJ Bowen <aj@soulshake.net> <aj@gandi.net>\nAJ Bowen <aj@soulshake.net> <amy@gandi.net>\nAkihiro Matsushima <amatsusbit@gmail.com> <amatsus@users.noreply.github.com>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp> <suda.akihiro@lab.ntt.co.jp>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp> <suda.kyoto@gmail.com>\nAkshay Moghe <akshay.moghe@gmail.com>\nAlano Terblanche <alano.terblanche@docker.com>\nAlano Terblanche <alano.terblanche@docker.com> <18033717+Benehiko@users.noreply.github.com>\nAlbin Kerouanton <albinker@gmail.com>\nAlbin Kerouanton <albinker@gmail.com> <557933+akerouanton@users.noreply.github.com>\nAlbin Kerouanton <albinker@gmail.com> <albin@akerouanton.name>\nAleksa Sarai <asarai@suse.de>\nAleksa Sarai <asarai@suse.de> <asarai@suse.com>\nAleksa Sarai <asarai@suse.de> <cyphar@cyphar.com>\nAleksandrs Fadins <aleks@s-ko.net>\nAlessandro Boch <aboch@tetrationanalytics.com>\nAlessandro Boch <aboch@tetrationanalytics.com> <aboch@docker.com>\nAlessandro Boch <aboch@tetrationanalytics.com> <aboch@socketplane.io>\nAlessandro Boch <aboch@tetrationanalytics.com> <aboch@users.noreply.github.com>\nAlex Chan <alex@alexwlchan.net>\nAlex Chan <alex@alexwlchan.net> <alex.chan@metaswitch.com>\nAlex Chen <alexchenunix@gmail.com> <root@localhost.localdomain>\nAlex Ellis <alexellis2@gmail.com>\nAlex Goodman <wagoodman@gmail.com> <wagoodman@users.noreply.github.com>\nAlexander Larsson <alexl@redhat.com> <alexander.larsson@gmail.com>\nAlexander Morozov <lk4d4math@gmail.com>\nAlexander Morozov <lk4d4math@gmail.com> <lk4d4@docker.com>\nAlexandre Beslic <alexandre.beslic@gmail.com> <abronan@docker.com>\nAlexandre González <agonzalezro@gmail.com>\nAlexis Ries <ries.alexis@gmail.com>\nAlexis Ries <ries.alexis@gmail.com> <alexis.ries.ext@orange.com>\nAlexis Thomas <fr.alexisthomas@gmail.com>\nAlicia Lauerman <alicia@eta.im> <allydevour@me.com>\nAllen Sun <allensun.shl@alibaba-inc.com> <allen.sun@daocloud.io>\nAllen Sun <allensun.shl@alibaba-inc.com> <shlallen1990@gmail.com>\nAnca Iordache <anca.iordache@docker.com>\nAndrea Denisse Gómez <crypto.andrea@protonmail.ch>\nAndrew Baxter <423qpsxzhh8k3h@s.rendaw.me>\nAndrew Baxter <423qpsxzhh8k3h@s.rendaw.me> andrew <>\nAndrew Kim <taeyeonkim90@gmail.com>\nAndrew Kim <taeyeonkim90@gmail.com> <akim01@fortinet.com>\nAndrew Weiss <andrew.weiss@docker.com> <andrew.weiss@microsoft.com>\nAndrew Weiss <andrew.weiss@docker.com> <andrew.weiss@outlook.com>\nAndrey Kolomentsev <andrey.kolomentsev@docker.com>\nAndrey Kolomentsev <andrey.kolomentsev@docker.com> <andrey.kolomentsev@gmail.com>\nAndré Martins  <aanm90@gmail.com> <martins@noironetworks.com>\nAndy Rothfusz <github@developersupport.net> <github@metaliveblog.com>\nAndy Smith <github@anarkystic.com>\nAndy Zhang <andy.zhangtao@hotmail.com>\nAndy Zhang <andy.zhangtao@hotmail.com> <ztao@tibco-support.com>\nAnkush Agarwal <ankushagarwal11@gmail.com> <ankushagarwal@users.noreply.github.com>\nAntonio Murdaca <antonio.murdaca@gmail.com> <amurdaca@redhat.com>\nAntonio Murdaca <antonio.murdaca@gmail.com> <me@runcom.ninja>\nAntonio Murdaca <antonio.murdaca@gmail.com> <runcom@linux.com>\nAntonio Murdaca <antonio.murdaca@gmail.com> <runcom@redhat.com>\nAntonio Murdaca <antonio.murdaca@gmail.com> <runcom@users.noreply.github.com>\nAnuj Bahuguna <anujbahuguna.dev@gmail.com>\nAnuj Bahuguna <anujbahuguna.dev@gmail.com> <abahuguna@fiberlink.com>\nAnusha Ragunathan <anusha.ragunathan@docker.com> <anusha@docker.com>\nAnyu Wang <wanganyu@outlook.com>\nArko Dasgupta <arko@tetrate.io>\nArko Dasgupta <arko@tetrate.io> <arko.dasgupta@docker.com>\nArko Dasgupta <arko@tetrate.io> <arkodg@users.noreply.github.com>\nArnaud Porterie <icecrime@gmail.com>\nArnaud Porterie <icecrime@gmail.com> <arnaud.porterie@docker.com>\nArnaud Rebillout <arnaud.rebillout@collabora.com>\nArnaud Rebillout <arnaud.rebillout@collabora.com> <elboulangero@gmail.com>\nArthur Gautier <baloo@gandi.net> <superbaloo+registrations.github@superbaloo.net>\nArtur Meyster <arthurfbi@yahoo.com>\nAvi Miller <avi.miller@oracle.com> <avi.miller@gmail.com>\nBen Bonnefoy <frenchben@docker.com>\nBen Golub <ben.golub@dotcloud.com>\nBen Toews <mastahyeti@gmail.com> <mastahyeti@users.noreply.github.com>\nBenny Ng <benny.tpng@gmail.com>\nBenoit Chesneau <bchesneau@gmail.com>\nBevisy Zhang <binbin36520@gmail.com>\nBhiraj Butala <abhiraj.butala@gmail.com>\nBhumika Bayani <bhumikabayani@gmail.com>\nBilal Amarni <bilal.amarni@gmail.com> <bamarni@users.noreply.github.com>\nBill Wang <ozbillwang@gmail.com> <SydOps@users.noreply.github.com>\nBily Zhang <xcoder@tenxcloud.com>\nBin Liu <liubin0329@gmail.com>\nBin Liu <liubin0329@gmail.com> <liubin0329@users.noreply.github.com>\nBingshen Wang <bingshen.wbs@alibaba-inc.com>\nBjorn Neergaard <bjorn@neersighted.com>\nBjorn Neergaard <bjorn@neersighted.com> <bjorn.neergaard@docker.com>\nBjorn Neergaard <bjorn@neersighted.com> <bneergaard@mirantis.com>\nBoaz Shuster <ripcurld.github@gmail.com>\nBojun Zhu <bojun.zhu@foxmail.com>\nBoqin Qin <bobbqqin@gmail.com>\nBoshi Lian <farmer1992@gmail.com>\nBrandon Philips <brandon.philips@coreos.com> <brandon@ifup.co>\nBrandon Philips <brandon.philips@coreos.com> <brandon@ifup.org>\nBrent Salisbury <brent.salisbury@docker.com> <brent@docker.com>\nBrian Goff <cpuguy83@gmail.com>\nBrian Goff <cpuguy83@gmail.com> <bgoff@cpuguy83-mbp.home>\nBrian Goff <cpuguy83@gmail.com> <bgoff@cpuguy83-mbp.local>\nBrian Goff <cpuguy83@gmail.com> <brian.goff@microsoft.com>\nBrian Goff <cpuguy83@gmail.com> <cpuguy@hey.com>\nCalvin Liu <flycalvin@qq.com>\nCameron Sparr <gh@sparr.email>\nCarlos de Paula <me@carlosedp.com>\nChander Govindarajan <chandergovind@gmail.com>\nChao Wang <wangchao.fnst@cn.fujitsu.com> <chaowang@localhost.localdomain>\nCharles Hooper <charles.hooper@dotcloud.com> <chooper@plumata.com>\nChen Chao <cc272309126@gmail.com>\nChen Chuanliang <chen.chuanliang@zte.com.cn>\nChen Mingjie <chenmingjie0828@163.com>\nChen Qiu <cheney-90@hotmail.com>\nChen Qiu <cheney-90@hotmail.com> <21321229@zju.edu.cn>\nChengfei Shang <cfshang@alauda.io>\nChentianze <cmoman@126.com>\nChris Dias <cdias@microsoft.com>\nChris McKinnel <chris.mckinnel@tangentlabs.co.uk>\nChris Price <cprice@mirantis.com>\nChris Price <cprice@mirantis.com> <chris.price@docker.com>\nChris Telfer <ctelfer@docker.com>\nChris Telfer <ctelfer@docker.com> <ctelfer@users.noreply.github.com>\nChristopher Biscardi <biscarch@sketcht.com>\nChristopher Latham <sudosurootdev@gmail.com>\nChristopher Petito <chrisjpetito@gmail.com>\nChristopher Petito <chrisjpetito@gmail.com> <47751006+krissetto@users.noreply.github.com>\nChristy Norman <christy@linux.vnet.ibm.com>\nChun Chen <ramichen@tencent.com> <chenchun.feed@gmail.com>\nCorbin Coleman <corbin.coleman@docker.com>\nCristian Ariza <dev@cristianrz.com>\nCristian Staretu <cristian.staretu@gmail.com>\nCristian Staretu <cristian.staretu@gmail.com> <unclejack@users.noreply.github.com>\nCristian Staretu <cristian.staretu@gmail.com> <unclejacksons@gmail.com>\ncui fliter <imcusg@gmail.com>\ncui fliter <imcusg@gmail.com> cuishuang <imcusg@gmail.com>\nCUI Wei <ghostplant@qq.com> cuiwei13 <cuiwei13@pku.edu.cn>\nDaehyeok Mun <daehyeok@gmail.com>\nDaehyeok Mun <daehyeok@gmail.com> <daehyeok@daehyeok-ui-MacBook-Air.local>\nDaehyeok Mun <daehyeok@gmail.com> <daehyeok@daehyeokui-MacBook-Air.local>\nDan Feldman <danf@jfrog.com>\nDaniel Dao <dqminh@cloudflare.com>\nDaniel Dao <dqminh@cloudflare.com> <dqminh89@gmail.com>\nDaniel Garcia <daniel@danielgarcia.info>\nDaniel Gasienica <daniel@gasienica.ch> <dgasienica@zynga.com>\nDaniel Goosen <daniel.goosen@surveysampling.com> <djgoosen@users.noreply.github.com>\nDaniel Grunwell <mwgrunny@gmail.com>\nDaniel Hiltgen <daniel.hiltgen@docker.com> <dhiltgen@users.noreply.github.com>\nDaniel J Walsh <dwalsh@redhat.com>\nDaniel Mizyrycki <daniel.mizyrycki@dotcloud.com> <daniel@dotcloud.com>\nDaniel Mizyrycki <daniel.mizyrycki@dotcloud.com> <mzdaniel@glidelink.net>\nDaniel Mizyrycki <daniel.mizyrycki@dotcloud.com> <root@vagrant-ubuntu-12.10.vagrantup.com>\nDaniel Nephin <dnephin@docker.com> <dnephin@gmail.com>\nDaniel Norberg <dano@spotify.com> <daniel.norberg@gmail.com>\nDaniel Watkins <daniel@daniel-watkins.co.uk>\nDaniel Zhang <jmzwcn@gmail.com>\nDanny Yates <danny@codeaholics.org> <Danny.Yates@mailonline.co.uk>\nDarren Shepherd <darren.s.shepherd@gmail.com> <darren@rancher.com>\nDattatraya Kumbhar <dattatraya.kumbhar@gslab.com>\nDave Goodchild <buddhamagnet@gmail.com>\nDave Henderson <dhenderson@gmail.com> <Dave.Henderson@ca.ibm.com>\nDave Tucker <dt@docker.com> <dave@dtucker.co.uk>\nDavid Dooling <dooling@gmail.com>\nDavid Dooling <dooling@gmail.com> <david.dooling@docker.com>\nDavid M. Karr <davidmichaelkarr@gmail.com>\nDavid Sheets <dsheets@docker.com> <sheets@alum.mit.edu>\nDavid Sissitka <me@dsissitka.com>\nDavid Williamson <david.williamson@docker.com> <davidwilliamson@users.noreply.github.com>\nDerek Ch <denc716@gmail.com>\nDerek McGowan <derek@mcg.dev>\nDerek McGowan <derek@mcg.dev> <derek@mcgstyle.net>\nDeshi Xiao <dxiao@redhat.com> <dsxiao@dataman-inc.com>\nDeshi Xiao <dxiao@redhat.com> <xiaods@gmail.com>\nDhilip Kumars <dhilip.kumar.s@huawei.com>\nDiego Siqueira <dieg0@live.com>\nDiogo Monica <diogo@docker.com> <diogo.monica@gmail.com>\nDmitry Sharshakov <d3dx12.xx@gmail.com>\nDmitry Sharshakov <d3dx12.xx@gmail.com> <sh7dm@outlook.com>\nDmytro Iakovliev <dmytro.iakovliev@zodiacsystems.com>\nDominic Yin <yindongchao@inspur.com>\nDominik Honnef <dominik@honnef.co> <dominikh@fork-bomb.org>\nDoug Davis <dug@us.ibm.com> <duglin@users.noreply.github.com>\nDoug Tangren <d.tangren@gmail.com>\nDrew Erny <derny@mirantis.com>\nDrew Erny <derny@mirantis.com> <drew.erny@docker.com>\nElan Ruusamäe <glen@pld-linux.org>\nElan Ruusamäe <glen@pld-linux.org> <glen@delfi.ee>\nElango Sivanandam <elango.siva@docker.com>\nElango Sivanandam <elango.siva@docker.com> <elango@docker.com>\nEli Uriegas <seemethere101@gmail.com>\nEli Uriegas <seemethere101@gmail.com> <eli.uriegas@docker.com>\nEric G. Noriega <enoriega@vizuri.com> <egnoriega@users.noreply.github.com>\nEric Hanchrow <ehanchrow@ine.com> <eric.hanchrow@gmail.com>\nEric Rosenberg <ehaydenr@gmail.com> <ehaydenr@users.noreply.github.com>\nErica Windisch <erica@windisch.us> <eric@windisch.us>\nErica Windisch <erica@windisch.us> <ewindisch@docker.com>\nErik Hollensbe <github@hollensbe.org> <erik+github@hollensbe.org>\nErwin van der Koogh <info@erronis.nl>\nEthan Bell <ebgamer29@gmail.com>\nEuan Kemp <euan.kemp@coreos.com> <euank@amazon.com>\nEugen Krizo <eugen.krizo@gmail.com>\nEvan Hazlett <ejhazlett@gmail.com> <ehazlett@users.noreply.github.com>\nEvelyn Xu <evelynhsu21@gmail.com>\nEvgeny Shmarnev <shmarnev@gmail.com>\nFaiz Khan <faizkhan00@gmail.com>\nFangming Fang <fangming.fang@arm.com>\nFelix Hupfeld <felix@quobyte.com> <quofelix@users.noreply.github.com>\nFelix Ruess <felix.ruess@gmail.com> <felix.ruess@roboception.de>\nFeng Yan <fy2462@gmail.com>\nFengtu Wang <wangfengtu@huawei.com> <wangfengtu@huawei.com>\nFilipe Pina <hzlu1ot0@duck.com>\nFilipe Pina <hzlu1ot0@duck.com> <636320+fopina@users.noreply.github.com>\nFrancisco Carriedo <fcarriedo@gmail.com>\nFrank Rosquin <frank.rosquin+github@gmail.com> <frank.rosquin@gmail.com>\nFrank Yang <yyb196@gmail.com>\nFrederick F. Kautz IV <fkautz@redhat.com> <fkautz@alumni.cmu.edu>\nFu JinLin <withlin@yeah.net>\nGabriel Goller <gabrielgoller123@gmail.com>\nGabriel Nicolas Avellaneda <avellaneda.gabriel@gmail.com>\nGaetan de Villele <gdevillele@gmail.com>\nGang Qiao <qiaohai8866@gmail.com> <1373319223@qq.com>\nGeon Kim <geon0250@gmail.com>\nGeorge Kontridze <george@bugsnag.com>\nGerwim Feiken <g.feiken@tfe.nl> <gerwim@gmail.com>\nGiampaolo Mancini <giampaolo@trampolineup.com>\nGiovan Isa Musthofa <giovanism@outlook.co.id>\nGopikannan Venugopalsamy <gopikannan.venugopalsamy@gmail.com>\nGou Rao <gou@portworx.com> <gourao@users.noreply.github.com>\nGrant Millar <rid@cylo.io>\nGrant Millar <rid@cylo.io> <grant@cylo.io>\nGrant Millar <rid@cylo.io> <grant@seednet.eu>\nGreg Stephens <greg@udon.org>\nGuillaume J. Charmes <guillaume.charmes@docker.com> <charmes.guillaume@gmail.com>\nGuillaume J. Charmes <guillaume.charmes@docker.com> <guillaume.charmes@dotcloud.com>\nGuillaume J. Charmes <guillaume.charmes@docker.com> <guillaume@charmes.net>\nGuillaume J. Charmes <guillaume.charmes@docker.com> <guillaume@docker.com>\nGuillaume J. Charmes <guillaume.charmes@docker.com> <guillaume@dotcloud.com>\nGunadhya S. <6939749+gunadhya@users.noreply.github.com>\nGuoqiang QI <guoqiang.qi1@gmail.com>\nGuri <odg0318@gmail.com>\nGurjeet Singh <gurjeet@singh.im> <singh.gurjeet@gmail.com>\nGustav Sinder <gustav.sinder@gmail.com>\nGünther Jungbluth <gunther@gameslabs.net>\nHakan Özler <hakan.ozler@kodcu.com>\nHao Shu Wei <haoshuwei24@gmail.com>\nHao Shu Wei <haoshuwei24@gmail.com> <haoshuwei1989@163.com>\nHao Shu Wei <haoshuwei24@gmail.com> <haosw@cn.ibm.com>\nHarald Albers <github@albersweb.de> <albers@users.noreply.github.com>\nHarald Niesche <harald@niesche.de>\nHarold Cooper <hrldcpr@gmail.com>\nHarry Zhang <harryz@hyper.sh>\nHarry Zhang <harryz@hyper.sh> <harryzhang@zju.edu.cn>\nHarry Zhang <harryz@hyper.sh> <resouer@163.com>\nHarry Zhang <harryz@hyper.sh> <resouer@gmail.com>\nHarshal Patil <harshal.patil@in.ibm.com> <harche@users.noreply.github.com>\nHe Simei <hesimei@zju.edu.cn>\nHelen Xie <chenjg@harmonycloud.cn>\nHiroyuki Sasagawa <hs19870702@gmail.com>\nHollie Teal <hollie@docker.com>\nHollie Teal <hollie@docker.com> <hollie.teal@docker.com>\nHollie Teal <hollie@docker.com> <hollietealok@users.noreply.github.com>\nhsinko <21551195@zju.edu.cn> <hsinko@users.noreply.github.com>\nHu Keping <hukeping@huawei.com>\nHuajin Tong <fliterdashen@gmail.com>\nHui Kang <hkang.sunysb@gmail.com>\nHui Kang <hkang.sunysb@gmail.com> <kangh@us.ibm.com>\nHuu Nguyen <huu@prismskylabs.com> <whoshuu@gmail.com>\nHyeongkyu Lee <hyeongkyu.lee@navercorp.com>\nHyzhou Zhy <hyzhou.zhy@alibaba-inc.com>\nHyzhou Zhy <hyzhou.zhy@alibaba-inc.com> <1187766782@qq.com>\nIan Campbell <ian.campbell@docker.com>\nIan Campbell <ian.campbell@docker.com> <ijc@docker.com>\nIlya Khlopotov <ilya.khlopotov@gmail.com>\nIskander Sharipov <quasilyte@gmail.com>\nIvan Babrou <ibobrik@gmail.com>\nIvan Markin <sw@nogoegst.net> <twim@riseup.net>\nJack Laxson <jackjrabbit@gmail.com>\nJacob Atzen <jacob@jacobatzen.dk> <jatzen@gmail.com>\nJacob Tomlinson <jacob@tom.linson.uk> <jacobtomlinson@users.noreply.github.com>\nJaivish Kothari <janonymous.codevulture@gmail.com>\nJake Moshenko <jake@devtable.com>\nJakub Drahos <jdrahos@pulsepoint.com>\nJakub Drahos <jdrahos@pulsepoint.com> <jack.drahos@gmail.com>\nJames Nesbitt <jnesbitt@mirantis.com>\nJames Nesbitt <jnesbitt@mirantis.com> <james.nesbitt@wunderkraut.com>\nJamie Hannaford <jamie@limetree.org> <jamie.hannaford@rackspace.com>\nJan Götte <jaseg@jaseg.net>\nJana Radhakrishnan <mrjana@docker.com>\nJana Radhakrishnan <mrjana@docker.com> <mrjana@socketplane.io>\nJavier Bassi <javierbassi@gmail.com>\nJavier Bassi <javierbassi@gmail.com> <CrimsonGlory@users.noreply.github.com>\nJay Lim <jay@imjching.com>\nJay Lim <jay@imjching.com> <imjching@hotmail.com>\nJean Rouge <rougej+github@gmail.com> <jer329@cornell.edu>\nJean-Baptiste Barth <jeanbaptiste.barth@gmail.com>\nJean-Baptiste Dalido <jeanbaptiste@appgratis.com>\nJean-Tiare Le Bigot <jt@yadutaf.fr> <admin@jtlebi.fr>\nJeff Anderson <jeff@docker.com> <jefferya@programmerq.net>\nJeff Nickoloff <jeff.nickoloff@gmail.com> <jeff@allingeek.com>\nJeroen Franse <jeroenfranse@gmail.com>\nJessica Frazelle <jess@oxide.computer>\nJessica Frazelle <jess@oxide.computer> <acidburn@docker.com>\nJessica Frazelle <jess@oxide.computer> <acidburn@google.com>\nJessica Frazelle <jess@oxide.computer> <acidburn@microsoft.com>\nJessica Frazelle <jess@oxide.computer> <jess@docker.com>\nJessica Frazelle <jess@oxide.computer> <jess@mesosphere.com>\nJessica Frazelle <jess@oxide.computer> <jessfraz@google.com>\nJessica Frazelle <jess@oxide.computer> <jfrazelle@users.noreply.github.com>\nJessica Frazelle <jess@oxide.computer> <me@jessfraz.com>\nJessica Frazelle <jess@oxide.computer> <princess@docker.com>\nJian Liao <jliao@alauda.io>\nJiang Jinyang <jjyruby@gmail.com>\nJiang Jinyang <jjyruby@gmail.com> <jiangjinyang@outlook.com>\nJim Galasyn <jim.galasyn@docker.com>\nJiuyue Ma <majiuyue@huawei.com>\nJoey Geiger <jgeiger@gmail.com>\nJoffrey F <joffrey@docker.com>\nJoffrey F <joffrey@docker.com> <f.joffrey@gmail.com>\nJoffrey F <joffrey@docker.com> <joffrey@dotcloud.com>\nJohan Euphrosine <proppy@google.com> <proppy@aminche.com>\nJohn Harris <john@johnharris.io>\nJohn Howard <github@lowenna.com>\nJohn Howard <github@lowenna.com> <10522484+lowenna@users.noreply.github.com>\nJohn Howard <github@lowenna.com> <jhoward@microsoft.com>\nJohn Howard <github@lowenna.com> <jhoward@ntdev.microsoft.com>\nJohn Howard <github@lowenna.com> <jhowardmsft@users.noreply.github.com>\nJohn Howard <github@lowenna.com> <john.howard@microsoft.com>\nJohn Howard <github@lowenna.com> <john@lowenna.com>\nJohn Stephens <johnstep@docker.com> <johnstep@users.noreply.github.com>\nJon Surrell <jon.surrell@gmail.com> <jon.surrell@automattic.com>\nJonathan A. Sternberg <jonathansternberg@gmail.com>\nJonathan A. Sternberg <jonathansternberg@gmail.com> <jonathan.sternberg@docker.com>\nJonathan Choy <jonathan.j.choy@gmail.com>\nJonathan Choy <jonathan.j.choy@gmail.com> <oni@tetsujinlabs.com>\nJordan Arentsen <blissdev@gmail.com>\nJordan Jennings <jjn2009@gmail.com> <jjn2009@users.noreply.github.com>\nJorit Kleine-Möllhoff <joppich@bricknet.de> <joppich@users.noreply.github.com>\nJose Diaz-Gonzalez <email@josediazgonzalez.com>\nJose Diaz-Gonzalez <email@josediazgonzalez.com> <jose@seatgeek.com>\nJose Diaz-Gonzalez <email@josediazgonzalez.com> <josegonzalez@users.noreply.github.com>\nJosh Bonczkowski <josh.bonczkowski@gmail.com>\nJosh Eveleth <joshe@opendns.com> <jeveleth@users.noreply.github.com>\nJosh Hawn <josh.hawn@docker.com> <jlhawn@berkeley.edu>\nJosh Horwitz <horwitz@addthis.com> <horwitzja@gmail.com>\nJosh Soref <jsoref@gmail.com> <jsoref@users.noreply.github.com>\nJosh Wilson <josh.wilson@fivestars.com> <jcwilson@users.noreply.github.com>\nJoyce Jang <mail@joycejang.com>\nJulien Bordellier <julienbordellier@gmail.com> <git@julienbordellier.com>\nJulien Bordellier <julienbordellier@gmail.com> <me@julienbordellier.com>\nJun Du <dujun5@huawei.com>\nJustin Cormack <justin.cormack@docker.com>\nJustin Cormack <justin.cormack@docker.com> <justin.cormack@unikernel.com>\nJustin Cormack <justin.cormack@docker.com> <justin@specialbusservice.com>\nJustin Keller <85903732+jk-vb@users.noreply.github.com>\nJustin Keller <85903732+jk-vb@users.noreply.github.com> <jkeller@vb-jkeller-mbp.local>\nJustin Simonelis <justin.p.simonelis@gmail.com> <justin.simonelis@PTS-JSIMON2.toronto.exclamation.com>\nJustin Terry <juterry@microsoft.com>\nJérôme Petazzoni <jerome.petazzoni@docker.com> <jerome.petazzoni@dotcloud.com>\nJérôme Petazzoni <jerome.petazzoni@docker.com> <jerome.petazzoni@gmail.com>\nJérôme Petazzoni <jerome.petazzoni@docker.com> <jp@enix.org>\nK. Heller <pestophagous@gmail.com> <pestophagous@users.noreply.github.com>\nKai Qiang Wu (Kennan) <wkq5325@gmail.com>\nKai Qiang Wu (Kennan) <wkq5325@gmail.com> <wkqwu@cn.ibm.com>\nKamil Domański <kamil@domanski.co>\nKamjar Gerami <kami.gerami@gmail.com>\nKarthik Nayak <karthik.188@gmail.com>\nKarthik Nayak <karthik.188@gmail.com> <Karthik.188@gmail.com>\nKen Cochrane <kencochrane@gmail.com> <KenCochrane@gmail.com>\nKen Herner <kherner@progress.com> <chosenken@gmail.com>\nKen Reese <krrgithub@gmail.com>\nKenfe-Mickaël Laventure <mickael.laventure@gmail.com>\nKevin Alvarez <github@crazymax.dev>\nKevin Alvarez <github@crazymax.dev> <1951866+crazy-max@users.noreply.github.com>\nKevin Alvarez <github@crazymax.dev> <crazy-max@users.noreply.github.com>\nKevin Feyrer <kevin.feyrer@btinternet.com> <kevinfeyrer@users.noreply.github.com>\nKevin Kern <kaiwentan@harmonycloud.cn>\nKevin Meredith <kevin.m.meredith@gmail.com>\nKir Kolyshkin <kolyshkin@gmail.com>\nKir Kolyshkin <kolyshkin@gmail.com> <kir@openvz.org>\nKir Kolyshkin <kolyshkin@gmail.com> <kolyshkin@users.noreply.github.com>\nKonrad Kleine <konrad.wilhelm.kleine@gmail.com> <kwk@users.noreply.github.com>\nKonstantin Gribov <grossws@gmail.com>\nKonstantin Pelykh <kpelykh@zettaset.com>\nKotaro Yoshimatsu <kotaro.yoshimatsu@gmail.com>\nKunal Kushwaha <kushwaha_kunal_v7@lab.ntt.co.jp>\nKunal Kushwaha <kushwaha_kunal_v7@lab.ntt.co.jp> <btkushuwahak@KUNAL-PC.swh.swh.nttdata.co.jp>\nKunal Kushwaha <kushwaha_kunal_v7@lab.ntt.co.jp> <kunal.kushwaha@gmail.com>\nKyle Squizzato <ksquizz@gmail.com>\nKyle Squizzato <ksquizz@gmail.com> <kyle.squizzato@docker.com>\nLajos Papp <lajos.papp@sequenceiq.com> <lalyos@yahoo.com>\nLei Gong <lgong@alauda.io>\nLei Jitang <leijitang@huawei.com>\nLei Jitang <leijitang@huawei.com> <leijitang@gmail.com>\nLei Jitang <leijitang@huawei.com> <leijitang@outlook.com>\nLeiiwang <u2takey@gmail.com>\nLiang Mingqiang <mqliang.zju@gmail.com>\nLiang-Chi Hsieh <viirya@gmail.com>\nLiao Qingwei <liaoqingwei@huawei.com>\nLinus Heckemann <lheckemann@twig-world.com>\nLinus Heckemann <lheckemann@twig-world.com> <anonymouse2048@gmail.com>\nLokesh Mandvekar <lsm5@fedoraproject.org> <lsm5@redhat.com>\nLorenzo Fontana <fontanalorenz@gmail.com> <fontanalorenzo@me.com>\nLorenzo Fontana <fontanalorenz@gmail.com> <lo@linux.com>\nLouis Opter <kalessin@kalessin.fr>\nLouis Opter <kalessin@kalessin.fr> <louis@dotcloud.com>\nLuca Favatella <luca.favatella@erlang-solutions.com> <lucafavatella@users.noreply.github.com>\nLuke Marsden <me@lukemarsden.net> <luke@digital-crocus.com>\nLyn <energylyn@zju.edu.cn>\nLynda O'Leary <lyndaoleary29@gmail.com>\nLynda O'Leary <lyndaoleary29@gmail.com> <lyndaoleary@hotmail.com>\nMa Müller <mueller-ma@users.noreply.github.com>\nMadhan Raj Mookkandy <MadhanRaj.Mookkandy@microsoft.com>\nMadhan Raj Mookkandy <MadhanRaj.Mookkandy@microsoft.com> <madhanm@corp.microsoft.com>\nMadhan Raj Mookkandy <MadhanRaj.Mookkandy@microsoft.com> <madhanm@microsoft.com>\nMadhu Venugopal <mavenugo@gmail.com> <madhu@docker.com>\nMadhu Venugopal <mavenugo@gmail.com> <madhu@socketplane.io>\nMageee <fangpuyi@foxmail.com> <21521230.zju.edu.cn>\nMansi Nahar <mmn4185@rit.edu> <mansi.nahar@macbookpro-mansinahar.local>\nMansi Nahar <mmn4185@rit.edu> <mansinahar@users.noreply.github.com>\nMarc Abramowitz <marc@marc-abramowitz.com> <msabramo@gmail.com>\nMarcelo Horacio Fortino <info@fortinux.com> <fortinux@users.noreply.github.com>\nMarcus Linke <marcus.linke@gmx.de>\nMarianna Tessel <mtesselh@gmail.com>\nMark Oates <fl0yd@me.com>\nMarkan Patel <mpatel678@gmail.com>\nMarkus Kortlang <hyp3rdino@googlemail.com> <markus.kortlang@lhsystems.com>\nMartin Redmond <redmond.martin@gmail.com> <martin@tinychat.com>\nMartin Redmond <redmond.martin@gmail.com> <xgithub@redmond5.com>\nMaru Newby <mnewby@thesprawl.net>\nMary Anthony <mary.anthony@docker.com> <mary@docker.com>\nMary Anthony <mary.anthony@docker.com> <moxieandmore@gmail.com>\nMary Anthony <mary.anthony@docker.com> moxiegirl <mary@docker.com>\nMasato Ohba <over.rye@gmail.com>\nMathieu Paturel <mathieu.paturel@gmail.com>\nMatt Bentley <matt.bentley@docker.com> <mbentley@mbentley.net>\nMatt Schurenko <matt.schurenko@gmail.com>\nMatt Williams <mattyw@me.com>\nMatt Williams <mattyw@me.com> <gh@mattyw.net>\nMatthew Heon <mheon@redhat.com> <mheon@mheonlaptop.redhat.com>\nMatthew Mosesohn <raytrac3r@gmail.com>\nMatthew Mueller <mattmuelle@gmail.com>\nMatthias Kühnle <git.nivoc@neverbox.com> <kuehnle@online.de>\nMauricio Garavaglia <mauricio@medallia.com> <mauriciogaravaglia@gmail.com>\nMaxwell <csuhp007@gmail.com>\nMaxwell <csuhp007@gmail.com> <csuhqg@foxmail.com>\nMenghui Chen <menghui.chen@alibaba-inc.com>\nMichael Beskin <mrbeskin@gmail.com>\nMichael Crosby <crosbymichael@gmail.com>\nMichael Crosby <crosbymichael@gmail.com> <crosby.michael@gmail.com>\nMichael Crosby <crosbymichael@gmail.com> <michael@crosbymichael.com>\nMichael Crosby <crosbymichael@gmail.com> <michael@docker.com>\nMichael Crosby <crosbymichael@gmail.com> <michael@thepasture.io>\nMichael Hudson-Doyle <michael.hudson@canonical.com> <michael.hudson@linaro.org>\nMichael Huettermann <michael@huettermann.net>\nMichael Käufl <docker@c.michael-kaeufl.de> <michael-k@users.noreply.github.com>\nMichael Nussbaum <michael.nussbaum@getbraintree.com>\nMichael Nussbaum <michael.nussbaum@getbraintree.com> <code@getbraintree.com>\nMichael Spetsiotis <michael_spets@hotmail.com>\nMichael Stapelberg <michael+gh@stapelberg.de>\nMichael Stapelberg <michael+gh@stapelberg.de> <stapelberg@google.com>\nMichal Kostrzewa <michal.kostrzewa@codilime.com>\nMichal Kostrzewa <michal.kostrzewa@codilime.com> <kostrzewa.michal@o2.pl>\nMichal Minář <miminar@redhat.com>\nMichał Gryko <github@odkurzacz.org>\nMichiel de Jong <michiel@unhosted.org>\nMickaël Fortunato <morsi.morsicus@gmail.com>\nMiguel Angel Alvarez Cabrerizo <doncicuto@gmail.com> <30386061+doncicuto@users.noreply.github.com>\nMiguel Angel Fernández <elmendalerenda@gmail.com>\nMihai Borobocea <MihaiBorob@gmail.com> <MihaiBorobocea@gmail.com>\nMikael Davranche <mikael.davranche@corp.ovh.com>\nMikael Davranche <mikael.davranche@corp.ovh.com> <mikael.davranche@corp.ovh.net>\nMike Casas <mkcsas0@gmail.com> <mikecasas@users.noreply.github.com>\nMike Goelzer <mike.goelzer@docker.com> <mgoelzer@docker.com>\nMilas Bowman <devnull@milas.dev>\nMilas Bowman <devnull@milas.dev> <milas.bowman@docker.com>\nMilas Bowman <devnull@milas.dev> <milasb@gmail.com>\nMilind Chawre <milindchawre@gmail.com>\nMisty Stanley-Jones <misty@docker.com> <misty@apache.org>\nMohammad Banikazemi <MBanikazemi@gmail.com>\nMohammad Banikazemi <MBanikazemi@gmail.com> <mb@us.ibm.com>\nMohd Sadiq <mohdsadiq058@gmail.com> <42430865+msadiq058@users.noreply.github.com>\nMohd Sadiq <mohdsadiq058@gmail.com> <mohdsadiq058@gmail.com>\nMohit Soni <mosoni@ebay.com> <mohitsoni1989@gmail.com>\nMoorthy RS <rsmoorthy@gmail.com> <rsmoorthy@users.noreply.github.com>\nMoysés Borges <moysesb@gmail.com>\nMoysés Borges <moysesb@gmail.com> <moyses.furtado@wplex.com.br>\nmrfly <mr.wrfly@gmail.com> <wrfly@users.noreply.github.com>\nNace Oroz <orkica@gmail.com>\nNatasha Jarus <linuxmercedes@gmail.com>\nNathan LeClaire <nathan.leclaire@docker.com> <nathan.leclaire@gmail.com>\nNathan LeClaire <nathan.leclaire@docker.com> <nathanleclaire@gmail.com>\nNeil Horman <nhorman@tuxdriver.com> <nhorman@hmswarspite.think-freely.org>\nNick Russo <nicholasjamesrusso@gmail.com> <nicholasrusso@icloud.com>\nNicolas Borboën <ponsfrilus@gmail.com> <ponsfrilus@users.noreply.github.com>\nNigel Poulton <nigelpoulton@hotmail.com>\nNik Nyby <nikolas@gnu.org> <nnyby@columbia.edu>\nNolan Darilek <nolan@thewordnerd.info>\nO.S. Tezer <ostezer@gmail.com>\nO.S. Tezer <ostezer@gmail.com> <ostezer@users.noreply.github.com>\nOh Jinkyun <tintypemolly@gmail.com> <tintypemolly@Ohui-MacBook-Pro.local>\nOliver Reason <oli@overrateddev.co>\nOlli Janatuinen <olli.janatuinen@gmail.com>\nOlli Janatuinen <olli.janatuinen@gmail.com> <olljanat@users.noreply.github.com>\nOnur Filiz <onur.filiz@microsoft.com>\nOnur Filiz <onur.filiz@microsoft.com> <ofiliz@users.noreply.github.com>\nOuyang Liduo <oyld0210@163.com>\nPatrick St. laurent <patrick@saint-laurent.us>\nPatrick Stapleton <github@gdi2290.com>\nPaul Liljenberg <liljenberg.paul@gmail.com> <letters@paulnotcom.se>\nPavel Tikhomirov <ptikhomirov@virtuozzo.com> <ptikhomirov@parallels.com>\nPawel Konczalski <mail@konczalski.de>\nPeter Choi <phkchoi89@gmail.com> <reikani@Peters-MacBook-Pro.local>\nPeter Dave Hello <hsu@peterdavehello.org> <PeterDaveHello@users.noreply.github.com>\nPeter Jaffe <pjaffe@nevo.com>\nPeter Nagy <xificurC@gmail.com> <pnagy@gratex.com>\nPeter Waller <p@pwaller.net> <peter@scraperwiki.com>\nPhil Estes <estesp@gmail.com>\nPhil Estes <estesp@gmail.com> <estesp@amazon.com>\nPhil Estes <estesp@gmail.com> <estesp@linux.vnet.ibm.com>\nPhilip Alexander Etling <paetling@gmail.com>\nPhilipp Gillé <philipp.gille@gmail.com> <philippgille@users.noreply.github.com>\nPrasanna Gautam <prasannagautam@gmail.com>\nPuneet Pruthi <puneet.pruthi@oracle.com>\nPuneet Pruthi <puneet.pruthi@oracle.com> <puneetpruthi@gmail.com>\nQiang Huang <h.huangqiang@huawei.com>\nQiang Huang <h.huangqiang@huawei.com> <qhuang@10.0.2.15>\nQin TianHuan <tianhuan@bingotree.cn>\nRay Tsang <rayt@google.com> <saturnism@users.noreply.github.com>\nRenaud Gaubert <rgaubert@nvidia.com> <renaud.gaubert@gmail.com>\nRichard Scothern <richard.scothern@gmail.com>\nRob Murray <rob.murray@docker.com>\nRob Murray <rob.murray@docker.com> <148866618+robmry@users.noreply.github.com>\nRobert Terhaar <rterhaar@atlanticdynamic.com> <robbyt@users.noreply.github.com>\nRoberto G. Hashioka <roberto.hashioka@docker.com> <roberto_hashioka@hotmail.com>\nRoberto Muñoz Fernández <robertomf@gmail.com> <roberto.munoz.fernandez.contractor@bbva.com>\nRobin Thoni <robin@rthoni.com>\nRoman Dudin <katrmr@gmail.com> <decadent@users.noreply.github.com>\nRong Zhang <rongzhang@alauda.io>\nRongxiang Song <tinysong1226@gmail.com>\nRony Weng <ronyweng@synology.com>\nRoss Boucher <rboucher@gmail.com>\nRui Cao <ruicao@alauda.io>\nRui JingAn <quiterace@gmail.com>\nRunshen Zhu <runshen.zhu@gmail.com>\nRyan Stelly <ryan.stelly@live.com>\nRyoga Saito <contact@proelbtn.com>\nRyoga Saito <contact@proelbtn.com> <proelbtn@users.noreply.github.com>\nSainath Grandhi <sainath.grandhi@intel.com>\nSainath Grandhi <sainath.grandhi@intel.com> <saiallforums@gmail.com>\nSakeven Jiang <jc5930@sina.cn>\nSamuel Karp <me@samuelkarp.com> <skarp@amazon.com>\nSandeep Bansal <sabansal@microsoft.com>\nSandeep Bansal <sabansal@microsoft.com> <msabansal@microsoft.com>\nSanthosh Manohar <santhosh@docker.com>\nSargun Dhillon <sargun@netflix.com> <sargun@sargun.me>\nSatoshi Tagomori <tagomoris@gmail.com>\nSean Lee <seanlee@tw.ibm.com> <scaleoutsean@users.noreply.github.com>\nSebastiaan van Stijn <github@gone.nl>\nSebastiaan van Stijn <github@gone.nl> <moby@example.com>\nSebastiaan van Stijn <github@gone.nl> <sebastiaan@ws-key-sebas3.dpi1.dpi>\nSebastiaan van Stijn <github@gone.nl> <thaJeztah@users.noreply.github.com>\nSebastian Thomschke <sebthom@users.noreply.github.com>\nSeongyeol Lim <seongyeol37@gmail.com>\nSerhii Nakon <serhii.n@thescimus.com>\nShaun Kaasten <shaunk@gmail.com>\nShawn Landden <shawn@churchofgit.com> <shawnlandden@gmail.com>\nShengbo Song <thomassong@tencent.com>\nShengbo Song <thomassong@tencent.com> <mymneo@163.com>\nShih-Yuan Lee <fourdollars@gmail.com>\nShishir Mahajan <shishir.mahajan@redhat.com> <smahajan@redhat.com>\nShu-Wai Chow <shu-wai.chow@seattlechildrens.org>\nShukui Yang <yangshukui@huawei.com>\nSidhartha Mani <sidharthamn@gmail.com>\nSjoerd Langkemper <sjoerd-github@linuxonly.nl> <sjoerd@byte.nl>\nSmark Meng <smark@freecoop.net>\nSmark Meng <smark@freecoop.net> <smarkm@users.noreply.github.com>\nSolomon Hykes <solomon@docker.com> <s@docker.com>\nSolomon Hykes <solomon@docker.com> <solomon.hykes@dotcloud.com>\nSolomon Hykes <solomon@docker.com> <solomon@dotcloud.com>\nSoshi Katsuta <soshi.katsuta@gmail.com>\nSoshi Katsuta <soshi.katsuta@gmail.com> <katsuta_soshi@cyberagent.co.jp>\nSridhar Ratnakumar <sridharr@activestate.com>\nSridhar Ratnakumar <sridharr@activestate.com> <github@srid.name>\nSrini Brahmaroutu <srbrahma@us.ibm.com> <sbrahma@us.ibm.com>\nSrinivasan Srivatsan <srinivasan.srivatsan@hpe.com> <srinsriv@users.noreply.github.com>\nStefan Berger <stefanb@linux.vnet.ibm.com>\nStefan Berger <stefanb@linux.vnet.ibm.com> <stefanb@us.ibm.com>\nStefan J. Wernli <swernli@microsoft.com> <swernli@ntdev.microsoft.com>\nStefan S. <tronicum@user.github.com>\nStefan Scherer <stefan.scherer@docker.com>\nStefan Scherer <stefan.scherer@docker.com> <scherer_stefan@icloud.com>\nStephan Spindler <shutefan@gmail.com> <shutefan@users.noreply.github.com>\nStephen Day <stevvooe@gmail.com>\nStephen Day <stevvooe@gmail.com> <stephen.day@docker.com>\nStephen Day <stevvooe@gmail.com> <stevvooe@users.noreply.github.com>\nSteve Desmond <steve@vtsv.ca> <stevedesmond-ca@users.noreply.github.com>\nSun Gengze <690388648@qq.com>\nSun Jianbo <wonderflow.sun@gmail.com>\nSun Jianbo <wonderflow.sun@gmail.com> <wonderflow@zju.edu.cn>\nSven Dowideit <SvenDowideit@home.org.au>\nSven Dowideit <SvenDowideit@home.org.au> <sven@t440s.home.gateway>\nSven Dowideit <SvenDowideit@home.org.au> <SvenDowideit@docker.com>\nSven Dowideit <SvenDowideit@home.org.au> <SvenDowideit@fosiki.com>\nSven Dowideit <SvenDowideit@home.org.au> <SvenDowideit@home.org.au>\nSven Dowideit <SvenDowideit@home.org.au> <SvenDowideit@users.noreply.github.com>\nSven Dowideit <SvenDowideit@home.org.au> <¨SvenDowideit@home.org.au¨>\nSylvain Baubeau <lebauce@gmail.com>\nSylvain Baubeau <lebauce@gmail.com> <sbaubeau@redhat.com>\nSylvain Bellemare <sylvain@ascribe.io>\nSylvain Bellemare <sylvain@ascribe.io> <sylvain.bellemare@ezeep.com>\nTakuto Sato <tockn.jp@gmail.com>\nTangi Colin <tangicolin@gmail.com>\nTejesh Mehta <tejesh.mehta@gmail.com> <tj@init.me>\nTerry Chu <zue.hterry@gmail.com>\nTerry Chu <zue.hterry@gmail.com> <jubosh.tw@gmail.com>\nThatcher Peskens <thatcher@docker.com>\nThatcher Peskens <thatcher@docker.com> <thatcher@dotcloud.com>\nThatcher Peskens <thatcher@docker.com> <thatcher@gmx.net>\nThiago Alves Silva <thiago.alves@aurea.com>\nThiago Alves Silva <thiago.alves@aurea.com> <thiagoalves@users.noreply.github.com>\nThomas Gazagnaire <thomas@gazagnaire.org> <thomas@gazagnaire.com>\nThomas Ledos <thomas.ledos92@gmail.com>\nThomas Léveil <thomasleveil@gmail.com>\nThomas Léveil <thomasleveil@gmail.com> <thomasleveil@users.noreply.github.com>\nTibor Vass <teabee89@gmail.com> <tibor@docker.com>\nTibor Vass <teabee89@gmail.com> <tiborvass@users.noreply.github.com>\nTill Claassen <pixelistik@users.noreply.github.com>\nTim Bart <tim@fewagainstmany.com>\nTim Bosse <taim@bosboot.org> <maztaim@users.noreply.github.com>\nTim Potter <tpot@hpe.com>\nTim Potter <tpot@hpe.com> <tpot@Tims-MacBook-Pro.local>\nTim Ruffles <oi@truffles.me.uk> <timruffles@googlemail.com>\nTim Terhorst <mynamewastaken+git@gmail.com>\nTim Wagner <tim.wagner@freenet.ag>\nTim Wagner <tim.wagner@freenet.ag> <33624860+herrwagner@users.noreply.github.com>\nTim Zju <21651152@zju.edu.cn>\nTimothy Hobbs <timothyhobbs@seznam.cz>\nToli Kuznets <toli@docker.com>\nTom Barlow <tomwbarlow@gmail.com>\nTom Denham <tom@tomdee.co.uk>\nTom Denham <tom@tomdee.co.uk> <tom.denham@metaswitch.com>\nTom Sweeney <tsweeney@redhat.com>\nTom Wilkie <tom.wilkie@gmail.com>\nTom Wilkie <tom.wilkie@gmail.com> <tom@weave.works>\nTõnis Tiigi <tonistiigi@gmail.com>\nTrace Andreason <tandreason@gmail.com>\nTrapier Marshall <tmarshall@mirantis.com>\nTrapier Marshall <tmarshall@mirantis.com> <trapier.marshall@docker.com>\nTrishna Guha <trishnaguha17@gmail.com>\nTristan Carel <tristan@cogniteev.com>\nTristan Carel <tristan@cogniteev.com> <tristan.carel@gmail.com>\nTyler Brown <tylers.pile@gmail.com>\nUmesh Yadav <umesh4257@gmail.com>\nUmesh Yadav <umesh4257@gmail.com> <dungeonmaster18@users.noreply.github.com>\nVictor Lyuboslavsky <victor@victoreda.com>\nVictor Vieux <victor.vieux@docker.com> <dev@vvieux.com>\nVictor Vieux <victor.vieux@docker.com> <victor.vieux@dotcloud.com>\nVictor Vieux <victor.vieux@docker.com> <victor@docker.com>\nVictor Vieux <victor.vieux@docker.com> <victor@dotcloud.com>\nVictor Vieux <victor.vieux@docker.com> <victorvieux@gmail.com>\nVictor Vieux <victor.vieux@docker.com> <vieux@docker.com>\nVikas Choudhary <choudharyvikas16@gmail.com>\nVikram bir Singh <vsingh@mirantis.com>\nVikram bir Singh <vsingh@mirantis.com> <vikrambir.singh@docker.com>\nViktor Vojnovski <viktor.vojnovski@amadeus.com> <vojnovski@gmail.com>\nVincent Batts <vbatts@redhat.com> <vbatts@hashbangbash.com>\nVincent Bernat <vincent@bernat.ch>\nVincent Bernat <vincent@bernat.ch> <bernat@luffy.cx>\nVincent Bernat <vincent@bernat.ch> <Vincent.Bernat@exoscale.ch>\nVincent Bernat <vincent@bernat.ch> <vincent@bernat.im>\nVincent Boulineau <vincent.boulineau@datadoghq.com>\nVincent Demeester <vincent.demeester@docker.com> <vincent+github@demeester.fr>\nVincent Demeester <vincent.demeester@docker.com> <vincent@demeester.fr>\nVincent Demeester <vincent.demeester@docker.com> <vincent@sbr.pm>\nVishnu Kannan <vishnuk@google.com>\nVitaly Ostrosablin <vostrosablin@virtuozzo.com>\nVitaly Ostrosablin <vostrosablin@virtuozzo.com> <tmp6154@yandex.ru>\nVladimir Rutsky <altsysrq@gmail.com> <iamironbob@gmail.com>\nVladislav Kolesnikov <vkolesnikov@beget.ru>\nVladislav Kolesnikov <vkolesnikov@beget.ru> <prime@vladqa.ru>\nWalter Stanish <walter@pratyeka.org>\nWang Chao <chao.wang@ucloud.cn>\nWang Chao <chao.wang@ucloud.cn> <wcwxyz@gmail.com>\nWang Guoliang <liangcszzu@163.com>\nWang Jie <wangjie5@chinaskycloud.com>\nWang Ping <present.wp@icloud.com>\nWang Xing <hzwangxing@corp.netease.com> <root@localhost>\nWang Yuexiao <wang.yuexiao@zte.com.cn>\nWayne Chang <wayne@neverfear.org>\nWayne Song <wsong@docker.com> <wsong@users.noreply.github.com>\nWei Wu <wuwei4455@gmail.com> cizixs <cizixs@163.com>\nWei-Ting Kuo <waitingkuo0527@gmail.com>\nWen Cheng Ma <wenchma@cn.ibm.com>\nWenjun Tang <tangwj2@lenovo.com> <dodia@163.com>\nWewang Xiaorenfine <wang.xiaoren@zte.com.cn>\nWill Weaver <monkey@buildingbananas.com>\nWing-Kam Wong <wingkwong.code@gmail.com>\nWuLonghui <wlh6666@qq.com>\nXian Chaobo <xianchaobo@huawei.com>\nXian Chaobo <xianchaobo@huawei.com> <jimmyxian2004@yahoo.com.cn>\nXianglin Gao <xlgao@zju.edu.cn>\nXianjie <guxianjie@gmail.com>\nXianjie <guxianjie@gmail.com> <datastream@datastream-laptop.local>\nXianlu Bird <xianlubird@gmail.com>\nXiao YongBiao <xyb4638@gmail.com>\nXiao Zhang <xiaozhang0210@hotmail.com>\nXiaodong Liu <liuxiaodong@loongson.cn>\nXiaodong Zhang <a4012017@sina.com>\nXiaohua Ding <xiao_hua_ding@sina.cn>\nXiaoyu Zhang <zhang.xiaoyu33@zte.com.cn>\nXinfeng Liu <XinfengLiu@icloud.com>\nXinfeng Liu <XinfengLiu@icloud.com> <xinfeng.liu@gmail.com>\nXuecong Liao <satorulogic@gmail.com>\nYamasaki Masahide <masahide.y@gmail.com>\nYao Zaiyong <yaozaiyong@hotmail.com>\nYassine Tijani <yasstij11@gmail.com>\nYazhong Liu <yorkiefixer@gmail.com>\nYestin Sun <sunyi0804@gmail.com> <yestin.sun@polyera.com>\nYi EungJun <eungjun.yi@navercorp.com> <semtlenori@gmail.com>\nYing Li <ying.li@docker.com>\nYing Li <ying.li@docker.com> <cyli@twistedmatrix.com>\nYong Tang <yong.tang.github@outlook.com> <yongtang@users.noreply.github.com>\nYongxin Li <yxli@alauda.io>\nYosef Fertel <yfertel@gmail.com> <frosforever@users.noreply.github.com>\nYu Changchun <yuchangchun1@huawei.com>\nYu Chengxia <yuchengxia@huawei.com>\nYu Peng <yu.peng36@zte.com.cn>\nYu Peng <yu.peng36@zte.com.cn> <yupeng36@zte.com.cn>\nYuan Sun <sunyuan3@huawei.com>\nYue Zhang <zy675793960@yeah.net>\nYufei Xiong <yufei.xiong@qq.com>\nZach Gershman <zachgersh@gmail.com>\nZach Gershman <zachgersh@gmail.com> <zachgersh@users.noreply.github.com>\nZachary Jaffee <zjaffee@us.ibm.com> <zij@case.edu>\nZachary Jaffee <zjaffee@us.ibm.com> <zjaffee@apache.org>\nZhang Kun <zkazure@gmail.com>\nZhang Wentao <zhangwentao234@huawei.com>\nZhangHang <stevezhang2014@gmail.com>\nZhenkun Bi <bi.zhenkun@zte.com.cn>\nZhou Hao <zhouhao@cn.fujitsu.com>\nZhoulin Xie <zhoulin.xie@daocloud.io>\nZhu Kunjia <zhu.kunjia@zte.com.cn>\nZiheng Liu <lzhfromustc@gmail.com>\nZou Yu <zouyu7@huawei.com>\nZuhayr Elahi <zuhayr.elahi@docker.com>\nZuhayr Elahi <zuhayr.elahi@docker.com> <elahi.zuhayr@gmail.com>\n정재영 <jjy600901@gmail.com>\n정재영 <jjy600901@gmail.com> <43400316+J-jaeyoung@users.noreply.github.com>\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 90.1435546875,
          "content": "# File @generated by hack/generate-authors.sh. DO NOT EDIT.\n# This file lists all contributors to the repository.\n# See hack/generate-authors.sh to make modifications.\n\nAanand Prasad <aanand.prasad@gmail.com>\nAaron Davidson <aaron@databricks.com>\nAaron Feng <aaron.feng@gmail.com>\nAaron Hnatiw <aaron@griddio.com>\nAaron Huslage <huslage@gmail.com>\nAaron L. Xu <liker.xu@foxmail.com>\nAaron Lehmann <alehmann@netflix.com>\nAaron Welch <welch@packet.net>\nAaron Yoshitake <airandfingers@gmail.com>\nAbel Muiño <amuino@gmail.com>\nAbhijeet Kasurde <akasurde@redhat.com>\nAbhinandan Prativadi <aprativadi@gmail.com>\nAbhinav Ajgaonkar <abhinav316@gmail.com>\nAbhishek Chanda <abhishek.becs@gmail.com>\nAbhishek Sharma <abhishek@asharma.me>\nAbin Shahab <ashahab@altiscale.com>\nAbirdcfly <fp544037857@gmail.com>\nAda Mancini <ada@docker.com>\nAdam Avilla <aavilla@yp.com>\nAdam Dobrawy <naczelnik@jawnosc.tk>\nAdam Eijdenberg <adam.eijdenberg@gmail.com>\nAdam Kunk <adam.kunk@tiaa-cref.org>\nAdam Miller <admiller@redhat.com>\nAdam Mills <adam@armills.info>\nAdam Pointer <adam.pointer@skybettingandgaming.com>\nAdam Singer <financeCoding@gmail.com>\nAdam Thornton <adam.thornton@maryville.com>\nAdam Walz <adam@adamwalz.net>\nAdam Williams <awilliams@mirantis.com>\nAdamKorcz <adam@adalogics.com>\nAddam Hardy <addam.hardy@gmail.com>\nAditi Rajagopal <arajagopal@us.ibm.com>\nAditya <aditya@netroy.in>\nAdnan Khan <adnkha@amazon.com>\nAdolfo Ochagavía <aochagavia92@gmail.com>\nAdria Casas <adriacasas88@gmail.com>\nAdrian Moisey <adrian@changeover.za.net>\nAdrian Mouat <adrian.mouat@gmail.com>\nAdrian Oprea <adrian@codesi.nz>\nAdrien Folie <folie.adrien@gmail.com>\nAdrien Gallouët <adrien@gallouet.fr>\nAhmed Kamal <email.ahmedkamal@googlemail.com>\nAhmet Alp Balkan <ahmetb@microsoft.com>\nAidan Feldman <aidan.feldman@gmail.com>\nAidan Hobson Sayers <aidanhs@cantab.net>\nAJ Bowen <aj@soulshake.net>\nAjey Charantimath <ajey.charantimath@gmail.com>\najneu <ajneu@users.noreply.github.com>\nAkash Gupta <akagup@microsoft.com>\nAkhil Mohan <akhil.mohan@mayadata.io>\nAkihiro Matsushima <amatsusbit@gmail.com>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp>\nAkim Demaille <akim.demaille@docker.com>\nAkira Koyasu <mail@akirakoyasu.net>\nAkshay Karle <akshay.a.karle@gmail.com>\nAkshay Moghe <akshay.moghe@gmail.com>\nAl Tobey <al@ooyala.com>\nalambike <alambike@gmail.com>\nAlan Hoyle <alan@alanhoyle.com>\nAlan Scherger <flyinprogrammer@gmail.com>\nAlan Thompson <cloojure@gmail.com>\nAlano Terblanche <alano.terblanche@docker.com>\nAlbert Callarisa <shark234@gmail.com>\nAlbert Zhang <zhgwenming@gmail.com>\nAlbin Kerouanton <albinker@gmail.com>\nAlec Benson <albenson@redhat.com>\nAlejandro González Hevia <alejandrgh11@gmail.com>\nAleksa Sarai <asarai@suse.de>\nAleksandr Chebotov <v-aleche@microsoft.com>\nAleksandrs Fadins <aleks@s-ko.net>\nAlena Prokharchyk <alena@rancher.com>\nAlessandro Boch <aboch@tetrationanalytics.com>\nAlessio Biancalana <dottorblaster@gmail.com>\nAlex Chan <alex@alexwlchan.net>\nAlex Chen <alexchenunix@gmail.com>\nAlex Coventry <alx@empirical.com>\nAlex Crawford <alex.crawford@coreos.com>\nAlex Ellis <alexellis2@gmail.com>\nAlex Gaynor <alex.gaynor@gmail.com>\nAlex Goodman <wagoodman@gmail.com>\nAlex Nordlund <alexander.nordlund@nasdaq.com>\nAlex Olshansky <i@creagenics.com>\nAlex Samorukov <samm@os2.kiev.ua>\nAlex Stockinger <alex@atomicjar.com>\nAlex Warhawk <ax.warhawk@gmail.com>\nAlexander Artemenko <svetlyak.40wt@gmail.com>\nAlexander Boyd <alex@opengroove.org>\nAlexander Larsson <alexl@redhat.com>\nAlexander Midlash <amidlash@docker.com>\nAlexander Morozov <lk4d4math@gmail.com>\nAlexander Polakov <plhk@sdf.org>\nAlexander Shopov <ash@kambanaria.org>\nAlexandre Beslic <alexandre.beslic@gmail.com>\nAlexandre Garnier <zigarn@gmail.com>\nAlexandre González <agonzalezro@gmail.com>\nAlexandre Jomin <alexandrejomin@gmail.com>\nAlexandru Sfirlogea <alexandru.sfirlogea@gmail.com>\nAlexei Margasov <alexei38@yandex.ru>\nAlexey Guskov <lexag@mail.ru>\nAlexey Kotlyarov <alexey@infoxchange.net.au>\nAlexey Shamrin <shamrin@gmail.com>\nAlexis Ries <ries.alexis@gmail.com>\nAlexis Thomas <fr.alexisthomas@gmail.com>\nAlfred Landrum <alfred.landrum@docker.com>\nAli Dehghani <ali.dehghani.g@gmail.com>\nAlicia Lauerman <alicia@eta.im>\nAlihan Demir <alihan_6153@hotmail.com>\nAllen Madsen <blatyo@gmail.com>\nAllen Sun <allensun.shl@alibaba-inc.com>\nalmoehi <almoehi@users.noreply.github.com>\nAlvaro Saurin <alvaro.saurin@gmail.com>\nAlvin Deng <alvin.q.deng@utexas.edu>\nAlvin Richards <alvin.richards@docker.com>\namangoel <amangoel@gmail.com>\nAmen Belayneh <amenbelayneh@gmail.com>\nAmeya Gawde <agawde@mirantis.com>\nAmir Goldstein <amir73il@aquasec.com>\nAmit Bakshi <ambakshi@gmail.com>\nAmit Krishnan <amit.krishnan@oracle.com>\nAmit Shukla <amit.shukla@docker.com>\nAmr Gawish <amr.gawish@gmail.com>\nAmy Lindburg <amy.lindburg@docker.com>\nAnand Patil <anand.prabhakar.patil@gmail.com>\nAnandkumarPatel <anandkumarpatel@gmail.com>\nAnatoly Borodin <anatoly.borodin@gmail.com>\nAnca Iordache <anca.iordache@docker.com>\nAnchal Agrawal <aagrawa4@illinois.edu>\nAnda Xu <anda.xu@docker.com>\nAnders Janmyr <anders@janmyr.com>\nAndre Dublin <81dublin@gmail.com>\nAndre Granovsky <robotciti@live.com>\nAndrea Denisse Gómez <crypto.andrea@protonmail.ch>\nAndrea Luzzardi <aluzzardi@gmail.com>\nAndrea Turli <andrea.turli@gmail.com>\nAndreas Elvers <andreas@work.de>\nAndreas Köhler <andi5.py@gmx.net>\nAndreas Savvides <andreas@editd.com>\nAndreas Tiefenthaler <at@an-ti.eu>\nAndrei Gherzan <andrei@resin.io>\nAndrei Ushakov <aushakov@netflix.com>\nAndrei Vagin <avagin@gmail.com>\nAndrew Baxter <423qpsxzhh8k3h@s.rendaw.me>\nAndrew C. Bodine <acbodine@us.ibm.com>\nAndrew Clay Shafer <andrewcshafer@gmail.com>\nAndrew Duckworth <grillopress@gmail.com>\nAndrew France <andrew@avito.co.uk>\nAndrew Gerrand <adg@golang.org>\nAndrew Guenther <guenther.andrew.j@gmail.com>\nAndrew He <he.andrew.mail@gmail.com>\nAndrew Hsu <andrewhsu@docker.com>\nAndrew Kim <taeyeonkim90@gmail.com>\nAndrew Kuklewicz <kookster@gmail.com>\nAndrew Macgregor <andrew.macgregor@agworld.com.au>\nAndrew Macpherson <hopscotch23@gmail.com>\nAndrew Martin <sublimino@gmail.com>\nAndrew McDonnell <bugs@andrewmcdonnell.net>\nAndrew Munsell <andrew@wizardapps.net>\nAndrew Pennebaker <andrew.pennebaker@gmail.com>\nAndrew Po <absourd.noise@gmail.com>\nAndrew Weiss <andrew.weiss@docker.com>\nAndrew Williams <williams.andrew@gmail.com>\nAndrews Medina <andrewsmedina@gmail.com>\nAndrey Kolomentsev <andrey.kolomentsev@docker.com>\nAndrey Petrov <andrey.petrov@shazow.net>\nAndrey Stolbovsky <andrey.stolbovsky@gmail.com>\nAndré Martins <aanm90@gmail.com>\nAndy Chambers <anchambers@paypal.com>\nandy diller <dillera@gmail.com>\nAndy Goldstein <agoldste@redhat.com>\nAndy Kipp <andy@rstudio.com>\nAndy Lindeman <alindeman@salesforce.com>\nAndy Rothfusz <github@developersupport.net>\nAndy Smith <github@anarkystic.com>\nAndy Wilson <wilson.andrew.j+github@gmail.com>\nAndy Zhang <andy.zhangtao@hotmail.com>\nAneesh Kulkarni <askthefactorcamera@gmail.com>\nAnes Hasicic <anes.hasicic@gmail.com>\nAngel Velazquez <angelcar@amazon.com>\nAnil Belur <askb23@gmail.com>\nAnil Madhavapeddy <anil@recoil.org>\nAnkit Jain <ajatkj@yahoo.co.in>\nAnkush Agarwal <ankushagarwal11@gmail.com>\nAnonmily <michelle@michelleliu.io>\nAnran Qiao <anran.qiao@daocloud.io>\nAnshul Pundir <anshul.pundir@docker.com>\nAnthon van der Neut <anthon@mnt.org>\nAnthony Baire <Anthony.Baire@irisa.fr>\nAnthony Bishopric <git@anthonybishopric.com>\nAnthony Dahanne <anthony.dahanne@gmail.com>\nAnthony Sottile <asottile@umich.edu>\nAnton Löfgren <anton.lofgren@gmail.com>\nAnton Nikitin <anton.k.nikitin@gmail.com>\nAnton Polonskiy <anton.polonskiy@gmail.com>\nAnton Tiurin <noxiouz@yandex.ru>\nAntonio Aguilar <antonio@zoftko.com>\nAntonio Murdaca <antonio.murdaca@gmail.com>\nAntonis Kalipetis <akalipetis@gmail.com>\nAntony Messerli <amesserl@rackspace.com>\nAnuj Bahuguna <anujbahuguna.dev@gmail.com>\nAnuj Varma <anujvarma@thumbtack.com>\nAnusha Ragunathan <anusha.ragunathan@docker.com>\nAnyu Wang <wanganyu@outlook.com>\napocas <petermdias@gmail.com>\nArash Deshmeh <adeshmeh@ca.ibm.com>\narcosx <arcosx@outlook.com>\nArikaChen <eaglesora@gmail.com>\nArko Dasgupta <arko@tetrate.io>\nArnaud Lefebvre <a.lefebvre@outlook.fr>\nArnaud Porterie <icecrime@gmail.com>\nArnaud Rebillout <arnaud.rebillout@collabora.com>\nArtem Khramov <akhramov@pm.me>\nArthur Barr <arthur.barr@uk.ibm.com>\nArthur Gautier <baloo@gandi.net>\nArtur Meyster <arthurfbi@yahoo.com>\nArun Gupta <arun.gupta@gmail.com>\nAsad Saeeduddin <masaeedu@gmail.com>\nAsbjørn Enge <asbjorn@hanafjedle.net>\nAustin Vazquez <macedonv@amazon.com>\naveragehuman <averagehuman@users.noreply.github.com>\nAvi Das <andas222@gmail.com>\nAvi Kivity <avi@scylladb.com>\nAvi Miller <avi.miller@oracle.com>\nAvi Vaid <avaid1996@gmail.com>\nAzat Khuyiyakhmetov <shadow_uz@mail.ru>\nBao Yonglei <baoyonglei@huawei.com>\nBardia Keyoumarsi <bkeyouma@ucsc.edu>\nBarnaby Gray <barnaby@pickle.me.uk>\nBarry Allard <barry.allard@gmail.com>\nBartłomiej Piotrowski <b@bpiotrowski.pl>\nBastiaan Bakker <bbakker@xebia.com>\nBastien Pascard <bpascard@hotmail.com>\nbdevloed <boris.de.vloed@gmail.com>\nBearice Ren <bearice@gmail.com>\nBen Bonnefoy <frenchben@docker.com>\nBen Firshman <ben@firshman.co.uk>\nBen Golub <ben.golub@dotcloud.com>\nBen Gould <ben@bengould.co.uk>\nBen Hall <ben@benhall.me.uk>\nBen Langfeld <ben@langfeld.me>\nBen Lovy <ben@deciduously.com>\nBen Sargent <ben@brokendigits.com>\nBen Severson <BenSeverson@users.noreply.github.com>\nBen Toews <mastahyeti@gmail.com>\nBen Wiklund <ben@daisyowl.com>\nBenjamin Atkin <ben@benatkin.com>\nBenjamin Baker <Benjamin.baker@utexas.edu>\nBenjamin Boudreau <boudreau.benjamin@gmail.com>\nBenjamin Böhmke <benjamin@boehmke.net>\nBenjamin Wang <wachao@vmware.com>\nBenjamin Yolken <yolken@stripe.com>\nBenny Ng <benny.tpng@gmail.com>\nBenoit Chesneau <bchesneau@gmail.com>\nBernerd Schaefer <bj.schaefer@gmail.com>\nBernhard M. Wiedemann <bwiedemann@suse.de>\nBert Goethals <bert@bertg.be>\nBertrand Roussel <broussel@sierrawireless.com>\nBevisy Zhang <binbin36520@gmail.com>\nBharath Thiruveedula <bharath_ves@hotmail.com>\nBhiraj Butala <abhiraj.butala@gmail.com>\nBhumika Bayani <bhumikabayani@gmail.com>\nBilal Amarni <bilal.amarni@gmail.com>\nBill Wang <ozbillwang@gmail.com>\nBilly Ridgway <wrridgwa@us.ibm.com>\nBily Zhang <xcoder@tenxcloud.com>\nBin Liu <liubin0329@gmail.com>\nBingshen Wang <bingshen.wbs@alibaba-inc.com>\nBjorn Neergaard <bjorn@neersighted.com>\nBlake Geno <blakegeno@gmail.com>\nBoaz Shuster <ripcurld.github@gmail.com>\nbobby abbott <ttobbaybbob@gmail.com>\nBojun Zhu <bojun.zhu@foxmail.com>\nBoqin Qin <bobbqqin@gmail.com>\nBoris Pruessmann <boris@pruessmann.org>\nBoshi Lian <farmer1992@gmail.com>\nBouke Haarsma <bouke@webatoom.nl>\nBoyd Hemphill <boyd@feedmagnet.com>\nboynux <boynux@gmail.com>\nBradley Cicenas <bradley.cicenas@gmail.com>\nBradley Wright <brad@intranation.com>\nBrandon Liu <bdon@bdon.org>\nBrandon Philips <brandon.philips@coreos.com>\nBrandon Rhodes <brandon@rhodesmill.org>\nBrendan Dixon <brendand@microsoft.com>\nBrennan Kinney <5098581+polarathene@users.noreply.github.com>\nBrent Salisbury <brent.salisbury@docker.com>\nBrett Higgins <brhiggins@arbor.net>\nBrett Kochendorfer <brett.kochendorfer@gmail.com>\nBrett Milford <brettmilford@gmail.com>\nBrett Randall <javabrett@gmail.com>\nBrian (bex) Exelbierd <bexelbie@redhat.com>\nBrian Bland <brian.bland@docker.com>\nBrian DeHamer <brian@dehamer.com>\nBrian Dorsey <brian@dorseys.org>\nBrian Flad <bflad417@gmail.com>\nBrian Goff <cpuguy83@gmail.com>\nBrian McCallister <brianm@skife.org>\nBrian Olsen <brian@maven-group.org>\nBrian Schwind <brianmschwind@gmail.com>\nBrian Shumate <brian@couchbase.com>\nBrian Torres-Gil <brian@dralth.com>\nBrian Trump <btrump@yelp.com>\nBrice Jaglin <bjaglin@teads.tv>\nBriehan Lombaard <briehan.lombaard@gmail.com>\nBrielle Broder <bbroder@google.com>\nBruno Bigras <bigras.bruno@gmail.com>\nBruno Binet <bruno.binet@gmail.com>\nBruno Gazzera <bgazzera@paginar.com>\nBruno Renié <brutasse@gmail.com>\nBruno Tavares <btavare@thoughtworks.com>\nBryan Bess <squarejaw@bsbess.com>\nBryan Boreham <bjboreham@gmail.com>\nBryan Matsuo <bryan.matsuo@gmail.com>\nBryan Murphy <bmurphy1976@gmail.com>\nBurke Libbey <burke@libbey.me>\nByung Kang <byung.kang.ctr@amrdec.army.mil>\nCaleb Spare <cespare@gmail.com>\nCalen Pennington <cale@edx.org>\nCalvin Liu <flycalvin@qq.com>\nCameron Boehmer <cameron.boehmer@gmail.com>\nCameron Sparr <gh@sparr.email>\nCameron Spear <cameronspear@gmail.com>\nCampbell Allen <campbell.allen@gmail.com>\nCandid Dauth <cdauth@cdauth.eu>\nCao Weiwei <cao.weiwei30@zte.com.cn>\nCarl Henrik Lunde <chlunde@ping.uio.no>\nCarl Loa Odin <carlodin@gmail.com>\nCarl X. Su <bcbcarl@gmail.com>\nCarlo Mion <mion00@gmail.com>\nCarlos Alexandro Becker <caarlos0@gmail.com>\nCarlos de Paula <me@carlosedp.com>\nCarlos Sanchez <carlos@apache.org>\nCarol Fager-Higgins <carol.fager-higgins@docker.com>\nCary <caryhartline@users.noreply.github.com>\nCasey Bisson <casey.bisson@joyent.com>\nCatalin Pirvu <pirvu.catalin94@gmail.com>\nCe Gao <ce.gao@outlook.com>\nCedric Davies <cedricda@microsoft.com>\nCezar Sa Espinola <cezarsa@gmail.com>\nChad Swenson <chadswen@gmail.com>\nChance Zibolski <chance.zibolski@gmail.com>\nChander Govindarajan <chandergovind@gmail.com>\nChanhun Jeong <keyolk@gmail.com>\nChao Wang <wangchao.fnst@cn.fujitsu.com>\nCharles Chan <charleswhchan@users.noreply.github.com>\nCharles Hooper <charles.hooper@dotcloud.com>\nCharles Law <claw@conduce.com>\nCharles Lindsay <chaz@chazomatic.us>\nCharles Merriam <charles.merriam@gmail.com>\nCharles Sarrazin <charles@sarraz.in>\nCharles Smith <charles.smith@docker.com>\nCharlie Drage <charlie@charliedrage.com>\nCharlie Lewis <charliel@lab41.org>\nChase Bolt <chase.bolt@gmail.com>\nChaYoung You <yousbe@gmail.com>\nChee Hau Lim <ch33hau@gmail.com>\nChen Chao <cc272309126@gmail.com>\nChen Chuanliang <chen.chuanliang@zte.com.cn>\nChen Hanxiao <chenhanxiao@cn.fujitsu.com>\nChen Min <chenmin46@huawei.com>\nChen Mingjie <chenmingjie0828@163.com>\nChen Qiu <cheney-90@hotmail.com>\nCheng-mean Liu <soccerl@microsoft.com>\nChengfei Shang <cfshang@alauda.io>\nChengguang Xu <cgxu519@gmx.com>\nChentianze <cmoman@126.com>\nChenyang Yan <memory.yancy@gmail.com>\nchenyuzhu <chenyuzhi@oschina.cn>\nChetan Birajdar <birajdar.chetan@gmail.com>\nChewey <prosto-chewey@users.noreply.github.com>\nChia-liang Kao <clkao@clkao.org>\nChiranjeevi Tirunagari <vchiranjeeviak.tirunagari@gmail.com>\nchli <chli@freewheel.tv>\nCholerae Hu <choleraehyq@gmail.com>\nChris Alfonso <calfonso@redhat.com>\nChris Armstrong <chris@opdemand.com>\nChris Dias <cdias@microsoft.com>\nChris Dituri <csdituri@gmail.com>\nChris Fordham <chris@fordham-nagy.id.au>\nChris Gavin <chris@chrisgavin.me>\nChris Gibson <chris@chrisg.io>\nChris Khoo <chris.khoo@gmail.com>\nChris Kreussling (Flatbush Gardener) <xrisfg@gmail.com>\nChris McKinnel <chris.mckinnel@tangentlabs.co.uk>\nChris McKinnel <chrismckinnel@gmail.com>\nChris Price <cprice@mirantis.com>\nChris Seto <chriskseto@gmail.com>\nChris Snow <chsnow123@gmail.com>\nChris St. Pierre <chris.a.st.pierre@gmail.com>\nChris Stivers <chris@stivers.us>\nChris Swan <chris.swan@iee.org>\nChris Telfer <ctelfer@docker.com>\nChris Wahl <github@wahlnetwork.com>\nChris Weyl <cweyl@alumni.drew.edu>\nChris White <me@cwprogram.com>\nChristian Becker <christian.becker@sixt.com>\nChristian Berendt <berendt@b1-systems.de>\nChristian Brauner <christian.brauner@ubuntu.com>\nChristian Böhme <developement@boehme3d.de>\nChristian Muehlhaeuser <muesli@gmail.com>\nChristian Persson <saser@live.se>\nChristian Rotzoll <ch.rotzoll@gmail.com>\nChristian Simon <simon@swine.de>\nChristian Stefanescu <st.chris@gmail.com>\nChristoph Ziebuhr <chris@codefrickler.de>\nChristophe Mehay <cmehay@online.net>\nChristophe Troestler <christophe.Troestler@umons.ac.be>\nChristophe Vidal <kriss@krizalys.com>\nChristopher Biscardi <biscarch@sketcht.com>\nChristopher Crone <christopher.crone@docker.com>\nChristopher Currie <codemonkey+github@gmail.com>\nChristopher Jones <tophj@linux.vnet.ibm.com>\nChristopher Latham <sudosurootdev@gmail.com>\nChristopher Petito <chrisjpetito@gmail.com>\nChristopher Rigor <crigor@gmail.com>\nChristy Norman <christy@linux.vnet.ibm.com>\nChun Chen <ramichen@tencent.com>\nCiro S. Costa <ciro.costa@usp.br>\nClayton Coleman <ccoleman@redhat.com>\nClint Armstrong <clint@clintarmstrong.net>\nClinton Kitson <clintonskitson@gmail.com>\nclubby789 <jamie@hill-daniel.co.uk>\nCody Roseborough <crrosebo@amazon.com>\nCoenraad Loubser <coenraad@wish.org.za>\nColin Dunklau <colin.dunklau@gmail.com>\nColin Hebert <hebert.colin@gmail.com>\nColin Panisset <github@clabber.com>\nColin Rice <colin@daedrum.net>\nColin Walters <walters@verbum.org>\nCollin Guarino <collin.guarino@gmail.com>\nColm Hally <colmhally@gmail.com>\ncompanycy <companycy@gmail.com>\nConor Evans <coevans@tcd.ie>\nCorbin Coleman <corbin.coleman@docker.com>\nCorey Farrell <git@cfware.com>\nCory Forsyth <cory.forsyth@gmail.com>\nCory Snider <csnider@mirantis.com>\ncressie176 <github@stephen-cresswell.net>\nCristian Ariza <dev@cristianrz.com>\nCristian Staretu <cristian.staretu@gmail.com>\ncristiano balducci <cristiano.balducci@gmail.com>\nCristina Yenyxe Gonzalez Garcia <cristina.yenyxe@gmail.com>\nCruceru Calin-Cristian <crucerucalincristian@gmail.com>\ncui fliter <imcusg@gmail.com>\nCUI Wei <ghostplant@qq.com>\nCuong Manh Le <cuong.manhle.vn@gmail.com>\nCyprian Gracz <cyprian.gracz@micro-jumbo.eu>\nCyril F <cyrilf7x@gmail.com>\nDa McGrady <dabkb@aol.com>\nDaan van Berkel <daan.v.berkel.1980@gmail.com>\nDaehyeok Mun <daehyeok@gmail.com>\nDafydd Crosby <dtcrsby@gmail.com>\ndalanlan <dalanlan925@gmail.com>\nDamian Smyth <damian@dsau.co>\nDamien Nadé <github@livna.org>\nDamien Nozay <damien.nozay@gmail.com>\nDamjan Georgievski <gdamjan@gmail.com>\nDan Anolik <dan@anolik.net>\nDan Buch <d.buch@modcloth.com>\nDan Cotora <dan@bluevision.ro>\nDan Feldman <danf@jfrog.com>\nDan Griffin <dgriffin@peer1.com>\nDan Hirsch <thequux@upstandinghackers.com>\nDan Keder <dan.keder@gmail.com>\nDan Levy <dan@danlevy.net>\nDan McPherson <dmcphers@redhat.com>\nDan Plamadeala <cornul11@gmail.com>\nDan Stine <sw@stinemail.com>\nDan Williams <me@deedubs.com>\nDani Hodovic <dani.hodovic@gmail.com>\nDani Louca <dani.louca@docker.com>\nDaniel Antlinger <d.antlinger@gmx.at>\nDaniel Black <daniel@linux.ibm.com>\nDaniel Dao <dqminh@cloudflare.com>\nDaniel Exner <dex@dragonslave.de>\nDaniel Farrell <dfarrell@redhat.com>\nDaniel Garcia <daniel@danielgarcia.info>\nDaniel Gasienica <daniel@gasienica.ch>\nDaniel Grunwell <mwgrunny@gmail.com>\nDaniel Helfand <helfand.4@gmail.com>\nDaniel Hiltgen <daniel.hiltgen@docker.com>\nDaniel J Walsh <dwalsh@redhat.com>\nDaniel Menet <membership@sontags.ch>\nDaniel Mizyrycki <daniel.mizyrycki@dotcloud.com>\nDaniel Nephin <dnephin@docker.com>\nDaniel Norberg <dano@spotify.com>\nDaniel Nordberg <dnordberg@gmail.com>\nDaniel P. Berrangé <berrange@redhat.com>\nDaniel Robinson <gottagetmac@gmail.com>\nDaniel S <dan.streby@gmail.com>\nDaniel Sweet <danieljsweet@icloud.com>\nDaniel Von Fange <daniel@leancoder.com>\nDaniel Watkins <daniel@daniel-watkins.co.uk>\nDaniel X Moore <yahivin@gmail.com>\nDaniel YC Lin <dlin.tw@gmail.com>\nDaniel Zhang <jmzwcn@gmail.com>\nDaniele Rondina <geaaru@sabayonlinux.org>\nDanny Berger <dpb587@gmail.com>\nDanny Milosavljevic <dannym@scratchpost.org>\nDanny Yates <danny@codeaholics.org>\nDanyal Khaliq <danyal.khaliq@tenpearls.com>\nDarren Coxall <darren@darrencoxall.com>\nDarren Shepherd <darren.s.shepherd@gmail.com>\nDarren Stahl <darst@microsoft.com>\nDattatraya Kumbhar <dattatraya.kumbhar@gslab.com>\nDavanum Srinivas <davanum@gmail.com>\nDave Barboza <dbarboza@datto.com>\nDave Goodchild <buddhamagnet@gmail.com>\nDave Henderson <dhenderson@gmail.com>\nDave MacDonald <mindlapse@gmail.com>\nDave Tucker <dt@docker.com>\nDavid Anderson <dave@natulte.net>\nDavid Bellotti <dbellotti@pivotal.io>\nDavid Calavera <david.calavera@gmail.com>\nDavid Chung <david.chung@docker.com>\nDavid Corking <dmc-source@dcorking.com>\nDavid Cramer <davcrame@cisco.com>\nDavid Currie <david_currie@uk.ibm.com>\nDavid Davis <daviddavis@redhat.com>\nDavid Dooling <dooling@gmail.com>\nDavid Gageot <david@gageot.net>\nDavid Gebler <davidgebler@gmail.com>\nDavid Glasser <glasser@davidglasser.net>\nDavid Karlsson <35727626+dvdksn@users.noreply.github.com>\nDavid Lawrence <david.lawrence@docker.com>\nDavid Lechner <david@lechnology.com>\nDavid M. Karr <davidmichaelkarr@gmail.com>\nDavid Mackey <tdmackey@booleanhaiku.com>\nDavid Manouchehri <manouchehri@riseup.net>\nDavid Mat <david@davidmat.com>\nDavid Mcanulty <github@hellspark.com>\nDavid McKay <david@rawkode.com>\nDavid O'Rourke <david@scalefactory.com>\nDavid P Hilton <david.hilton.p@gmail.com>\nDavid Pelaez <pelaez89@gmail.com>\nDavid R. Jenni <david.r.jenni@gmail.com>\nDavid Röthlisberger <david@rothlis.net>\nDavid Sheets <dsheets@docker.com>\nDavid Sissitka <me@dsissitka.com>\nDavid Trott <github@davidtrott.com>\nDavid Wang <00107082@163.com>\nDavid Williamson <david.williamson@docker.com>\nDavid Xia <dxia@spotify.com>\nDavid Young <yangboh@cn.ibm.com>\nDavide Ceretti <davide.ceretti@hogarthww.com>\nDawn Chen <dawnchen@google.com>\ndbdd <wangtong2712@gmail.com>\ndcylabs <dcylabs@gmail.com>\nDebayan De <debayande@users.noreply.github.com>\nDeborah Gertrude Digges <deborah.gertrude.digges@gmail.com>\ndeed02392 <georgehafiz@gmail.com>\nDeep Debroy <ddebroy@docker.com>\nDeng Guangxing <dengguangxing@huawei.com>\nDeni Bertovic <deni@kset.org>\nDenis Defreyne <denis@soundcloud.com>\nDenis Gladkikh <denis@gladkikh.email>\nDenis Ollier <larchunix@users.noreply.github.com>\nDennis Chen <barracks510@gmail.com>\nDennis Chen <dennis.chen@arm.com>\nDennis Docter <dennis@d23.nl>\nDerek <crq@kernel.org>\nDerek <crquan@gmail.com>\nDerek Ch <denc716@gmail.com>\nDerek McGowan <derek@mcg.dev>\nDeric Crago <deric.crago@gmail.com>\nDeshi Xiao <dxiao@redhat.com>\nDevon Estes <devon.estes@klarna.com>\nDevvyn Murphy <devvyn@devvyn.com>\nDharmit Shah <shahdharmit@gmail.com>\nDhawal Yogesh Bhanushali <dbhanushali@vmware.com>\nDhilip Kumars <dhilip.kumar.s@huawei.com>\nDiego Romero <idiegoromero@gmail.com>\nDiego Siqueira <dieg0@live.com>\nDieter Reuter <dieter.reuter@me.com>\nDillon Dixon <dillondixon@gmail.com>\nDima Stopel <dima@twistlock.com>\nDimitri John Ledkov <dimitri.j.ledkov@intel.com>\nDimitris Mandalidis <dimitris.mandalidis@gmail.com>\nDimitris Rozakis <dimrozakis@gmail.com>\nDimitry Andric <d.andric@activevideo.com>\nDinesh Subhraveti <dineshs@altiscale.com>\nDing Fei <dingfei@stars.org.cn>\ndingwei <dingwei@cmss.chinamobile.com>\nDiogo Monica <diogo@docker.com>\nDiuDiugirl <sophia.wang@pku.edu.cn>\nDjibril Koné <kone.djibril@gmail.com>\nDjordje Lukic <djordje.lukic@docker.com>\ndkumor <daniel@dkumor.com>\nDmitri Logvinenko <dmitri.logvinenko@gmail.com>\nDmitri Shuralyov <shurcooL@gmail.com>\nDmitry Demeshchuk <demeshchuk@gmail.com>\nDmitry Gusev <dmitry.gusev@gmail.com>\nDmitry Kononenko <d@dm42.ru>\nDmitry Sharshakov <d3dx12.xx@gmail.com>\nDmitry Shyshkin <dmitry@shyshkin.org.ua>\nDmitry Smirnov <onlyjob@member.fsf.org>\nDmitry V. Krivenok <krivenok.dmitry@gmail.com>\nDmitry Vorobev <dimahabr@gmail.com>\nDmytro Iakovliev <dmytro.iakovliev@zodiacsystems.com>\ndocker-unir[bot] <docker-unir[bot]@users.noreply.github.com>\nDolph Mathews <dolph.mathews@gmail.com>\nDominic Tubach <dominic.tubach@to.com>\nDominic Yin <yindongchao@inspur.com>\nDominik Dingel <dingel@linux.vnet.ibm.com>\nDominik Finkbeiner <finkes93@gmail.com>\nDominik Honnef <dominik@honnef.co>\nDon Kirkby <donkirkby@users.noreply.github.com>\nDon Kjer <don.kjer@gmail.com>\nDon Spaulding <donspauldingii@gmail.com>\nDonald Huang <don.hcd@gmail.com>\nDong Chen <dongluo.chen@docker.com>\nDonghwa Kim <shanytt@gmail.com>\nDonovan Jones <git@gamma.net.nz>\nDorin Geman <dorin.geman@docker.com>\nDoron Podoleanu <doronp@il.ibm.com>\nDoug Davis <dug@us.ibm.com>\nDoug MacEachern <dougm@vmware.com>\nDoug Tangren <d.tangren@gmail.com>\nDouglas Curtis <dougcurtis1@gmail.com>\nDr Nic Williams <drnicwilliams@gmail.com>\ndragon788 <dragon788@users.noreply.github.com>\nDražen Lučanin <kermit666@gmail.com>\nDrew Erny <derny@mirantis.com>\nDrew Hubl <drew.hubl@gmail.com>\nDustin Sallings <dustin@spy.net>\nEd Costello <epc@epcostello.com>\nEdmund Wagner <edmund-wagner@web.de>\nEiichi Tsukata <devel@etsukata.com>\nEike Herzbach <eike@herzbach.net>\nEivin Giske Skaaren <eivinsn@axis.com>\nEivind Uggedal <eivind@uggedal.com>\nElan Ruusamäe <glen@pld-linux.org>\nElango Sivanandam <elango.siva@docker.com>\nElena Morozova <lelenanam@gmail.com>\nEli Uriegas <seemethere101@gmail.com>\nElias Faxö <elias.faxo@tre.se>\nElias Koromilas <elias.koromilas@gmail.com>\nElias Probst <mail@eliasprobst.eu>\nElijah Zupancic <elijah@zupancic.name>\neluck <mail@eluck.me>\nElvir Kuric <elvirkuric@gmail.com>\nEmil Davtyan <emil2k@gmail.com>\nEmil Hernvall <emil@quench.at>\nEmily Maier <emily@emilymaier.net>\nEmily Rose <emily@contactvibe.com>\nEmir Ozer <emirozer@yandex.com>\nEng Zer Jun <engzerjun@gmail.com>\nEnguerran <engcolson@gmail.com>\nEnrico Weigelt, metux IT consult <info@metux.net>\nEohyung Lee <liquidnuker@gmail.com>\nepeterso <epeterson@breakpoint-labs.com>\ner0k <er0k@er0k.net>\nEric Barch <barch@tomesoftware.com>\nEric Curtin <ericcurtin17@gmail.com>\nEric G. Noriega <enoriega@vizuri.com>\nEric Hanchrow <ehanchrow@ine.com>\nEric Lee <thenorthsecedes@gmail.com>\nEric Mountain <eric.mountain@datadoghq.com>\nEric Myhre <hash@exultant.us>\nEric Paris <eparis@redhat.com>\nEric Rafaloff <erafaloff@gmail.com>\nEric Rosenberg <ehaydenr@gmail.com>\nEric Sage <eric.david.sage@gmail.com>\nEric Soderstrom <ericsoderstrom@gmail.com>\nEric Yang <windfarer@gmail.com>\nEric-Olivier Lamey <eo@lamey.me>\nErica Windisch <erica@windisch.us>\nErich Cordoba <erich.cm@yandex.com>\nErik Bray <erik.m.bray@gmail.com>\nErik Dubbelboer <erik@dubbelboer.com>\nErik Hollensbe <github@hollensbe.org>\nErik Inge Bolsø <knan@redpill-linpro.com>\nErik Kristensen <erik@erikkristensen.com>\nErik Sipsma <erik@sipsma.dev>\nErik Sjölund <erik.sjolund@gmail.com>\nErik St. Martin <alakriti@gmail.com>\nErik Weathers <erikdw@gmail.com>\nErno Hopearuoho <erno.hopearuoho@gmail.com>\nErwin van der Koogh <info@erronis.nl>\nEspen Suenson <mail@espensuenson.dk>\nEthan Bell <ebgamer29@gmail.com>\nEthan Mosbaugh <ethan@replicated.com>\nEuan Harris <euan.harris@docker.com>\nEuan Kemp <euan.kemp@coreos.com>\nEugen Krizo <eugen.krizo@gmail.com>\nEugene Yakubovich <eugene.yakubovich@coreos.com>\nEvan Allrich <evan@unguku.com>\nEvan Carmi <carmi@users.noreply.github.com>\nEvan Hazlett <ejhazlett@gmail.com>\nEvan Krall <krall@yelp.com>\nEvan Lezar <elezar@nvidia.com>\nEvan Phoenix <evan@fallingsnow.net>\nEvan Wies <evan@neomantra.net>\nEvelyn Xu <evelynhsu21@gmail.com>\nEverett Toews <everett.toews@rackspace.com>\nEvgeniy Makhrov <e.makhrov@corp.badoo.com>\nEvgeny Shmarnev <shmarnev@gmail.com>\nEvgeny Vereshchagin <evvers@ya.ru>\nEwa Czechowska <ewa@ai-traders.com>\nEystein Måløy Stenberg <eystein.maloy.stenberg@cfengine.com>\nezbercih <cem.ezberci@gmail.com>\nEzra Silvera <ezra@il.ibm.com>\nFabian Kramm <kramm@covexo.com>\nFabian Lauer <kontakt@softwareschmiede-saar.de>\nFabian Raetz <fabian.raetz@gmail.com>\nFabiano Rosas <farosas@br.ibm.com>\nFabio Falci <fabiofalci@gmail.com>\nFabio Kung <fabio.kung@gmail.com>\nFabio Rapposelli <fabio@vmware.com>\nFabio Rehm <fgrehm@gmail.com>\nFabrizio Regini <freegenie@gmail.com>\nFabrizio Soppelsa <fsoppelsa@mirantis.com>\nFaiz Khan <faizkhan00@gmail.com>\nfalmp <chico.lopes@gmail.com>\nFangming Fang <fangming.fang@arm.com>\nFangyuan Gao <21551127@zju.edu.cn>\nfanjiyun <fan.jiyun@zte.com.cn>\nFareed Dudhia <fareeddudhia@googlemail.com>\nFathi Boudra <fathi.boudra@linaro.org>\nFederico Gimenez <fgimenez@coit.es>\nFelipe Oliveira <felipeweb.programador@gmail.com>\nFelipe Ruhland <felipe.ruhland@gmail.com>\nFelix Abecassis <fabecassis@nvidia.com>\nFelix Geisendörfer <felix@debuggable.com>\nFelix Hupfeld <felix@quobyte.com>\nFelix Rabe <felix@rabe.io>\nFelix Ruess <felix.ruess@gmail.com>\nFelix Schindler <fschindler@weluse.de>\nFeng Yan <fy2462@gmail.com>\nFengtu Wang <wangfengtu@huawei.com>\nFerenc Szabo <pragmaticfrank@gmail.com>\nFernando <fermayo@gmail.com>\nFero Volar <alian@alian.info>\nFeroz Salam <feroz.salam@sourcegraph.com>\nFerran Rodenas <frodenas@gmail.com>\nFilipe Brandenburger <filbranden@google.com>\nFilipe Oliveira <contato@fmoliveira.com.br>\nFilipe Pina <hzlu1ot0@duck.com>\nFlavio Castelli <fcastelli@suse.com>\nFlavio Crisciani <flavio.crisciani@docker.com>\nFlorian <FWirtz@users.noreply.github.com>\nFlorian Klein <florian.klein@free.fr>\nFlorian Maier <marsmensch@users.noreply.github.com>\nFlorian Noeding <noeding@adobe.com>\nFlorian Schmaus <flo@geekplace.eu>\nFlorian Weingarten <flo@hackvalue.de>\nFlorin Asavoaie <florin.asavoaie@gmail.com>\nFlorin Patan <florinpatan@gmail.com>\nfonglh <fonglh@gmail.com>\nFoysal Iqbal <foysal.iqbal.fb@gmail.com>\nFrancesc Campoy <campoy@google.com>\nFrancesco Degrassi <francesco.degrassi@optionfactory.net>\nFrancesco Mari <mari.francesco@gmail.com>\nFrancis Chuang <francis.chuang@boostport.com>\nFrancisco Carriedo <fcarriedo@gmail.com>\nFrancisco Souza <f@souza.cc>\nFrank Groeneveld <frank@ivaldi.nl>\nFrank Herrmann <fgh@4gh.tv>\nFrank Macreery <frank@macreery.com>\nFrank Rosquin <frank.rosquin+github@gmail.com>\nFrank Villaro-Dixon <frank.villarodixon@merkle.com>\nFrank Yang <yyb196@gmail.com>\nFred Lifton <fred.lifton@docker.com>\nFrederick F. Kautz IV <fkautz@redhat.com>\nFrederico F. de Oliveira <FreddieOliveira@users.noreply.github.com>\nFrederik Loeffert <frederik@zitrusmedia.de>\nFrederik Nordahl Jul Sabroe <frederikns@gmail.com>\nFreek Kalter <freek@kalteronline.org>\nFrieder Bluemle <frieder.bluemle@gmail.com>\nfrobnicaty <92033765+frobnicaty@users.noreply.github.com>\nFrédéric Dalleau <frederic.dalleau@docker.com>\nFu JinLin <withlin@yeah.net>\nFélix Baylac-Jacqué <baylac.felix@gmail.com>\nFélix Cantournet <felix.cantournet@cloudwatt.com>\nGabe Rosenhouse <gabe@missionst.com>\nGabor Nagy <mail@aigeruth.hu>\nGabriel Adrian Samfira <gsamfira@cloudbasesolutions.com>\nGabriel Goller <gabrielgoller123@gmail.com>\nGabriel L. Somlo <gsomlo@gmail.com>\nGabriel Linder <linder.gabriel@gmail.com>\nGabriel Monroy <gabriel@opdemand.com>\nGabriel Nicolas Avellaneda <avellaneda.gabriel@gmail.com>\nGabriel Tomitsuka <gabriel@tomitsuka.com>\nGaetan de Villele <gdevillele@gmail.com>\nGalen Sampson <galen.sampson@gmail.com>\nGang Qiao <qiaohai8866@gmail.com>\nGareth Rushgrove <gareth@morethanseven.net>\nGarrett Barboza <garrett@garrettbarboza.com>\nGary Schaetz <gary@schaetzkc.com>\nGaurav <gaurav.gosec@gmail.com>\nGaurav Singh <gaurav1086@gmail.com>\nGaël PORTAY <gael.portay@savoirfairelinux.com>\nGenki Takiuchi <genki@s21g.com>\nGennadySpb <lipenkov@gmail.com>\nGeoff Levand <geoff@infradead.org>\nGeoffrey Bachelet <grosfrais@gmail.com>\nGeon Kim <geon0250@gmail.com>\nGeorge Kontridze <george@bugsnag.com>\nGeorge Ma <mayangang@outlook.com>\nGeorge MacRorie <gmacr31@gmail.com>\nGeorge Xie <georgexsh@gmail.com>\nGeorgi Hristozov <georgi@forkbomb.nl>\nGeorgy Yakovlev <gyakovlev@gentoo.org>\nGereon Frey <gereon.frey@dynport.de>\nGerman DZ <germ@ndz.com.ar>\nGert van Valkenhoef <g.h.m.van.valkenhoef@rug.nl>\nGerwim Feiken <g.feiken@tfe.nl>\nGhislain Bourgeois <ghislain.bourgeois@gmail.com>\nGiampaolo Mancini <giampaolo@trampolineup.com>\nGianluca Borello <g.borello@gmail.com>\nGildas Cuisinier <gildas.cuisinier@gcuisinier.net>\nGiovan Isa Musthofa <giovanism@outlook.co.id>\ngissehel <public-devgit-dantus@gissehel.org>\nGiuseppe Mazzotta <gdm85@users.noreply.github.com>\nGiuseppe Scrivano <gscrivan@redhat.com>\nGleb Fotengauer-Malinovskiy <glebfm@altlinux.org>\nGleb M Borisov <borisov.gleb@gmail.com>\nGlyn Normington <gnormington@gopivotal.com>\nGoBella <caili_welcome@163.com>\nGoffert van Gool <goffert@phusion.nl>\nGoldwyn Rodrigues <rgoldwyn@suse.com>\nGopikannan Venugopalsamy <gopikannan.venugopalsamy@gmail.com>\nGosuke Miyashita <gosukenator@gmail.com>\nGou Rao <gou@portworx.com>\nGovinda Fichtner <govinda.fichtner@googlemail.com>\nGrant Millar <rid@cylo.io>\nGrant Reaber <grant.reaber@gmail.com>\nGraydon Hoare <graydon@pobox.com>\nGreg Fausak <greg@tacodata.com>\nGreg Pflaum <gpflaum@users.noreply.github.com>\nGreg Stephens <greg@udon.org>\nGreg Thornton <xdissent@me.com>\nGrzegorz Jaśkiewicz <gj.jaskiewicz@gmail.com>\nGuilhem Lettron <guilhem+github@lettron.fr>\nGuilherme Salgado <gsalgado@gmail.com>\nGuillaume Dufour <gdufour.prestataire@voyages-sncf.com>\nGuillaume J. Charmes <guillaume.charmes@docker.com>\nGunadhya S. <6939749+gunadhya@users.noreply.github.com>\nGuoqiang QI <guoqiang.qi1@gmail.com>\nguoxiuyan <guoxiuyan@huawei.com>\nGuri <odg0318@gmail.com>\nGurjeet Singh <gurjeet@singh.im>\nGuruprasad <lgp171188@gmail.com>\nGustav Sinder <gustav.sinder@gmail.com>\ngwx296173 <gaojing3@huawei.com>\nGünter Zöchbauer <guenter@gzoechbauer.com>\nHaichao Yang <yang.haichao@zte.com.cn>\nhaikuoliu <haikuo@amazon.com>\nhaining.cao <haining.cao@daocloud.io>\nHakan Özler <hakan.ozler@kodcu.com>\nHamish Hutchings <moredhel@aoeu.me>\nHannes Ljungberg <hannes@5monkeys.se>\nHans Kristian Flaatten <hans@starefossen.com>\nHans Rødtang <hansrodtang@gmail.com>\nHao Shu Wei <haoshuwei24@gmail.com>\nHao Zhang <21521210@zju.edu.cn>\nHarald Albers <github@albersweb.de>\nHarald Niesche <harald@niesche.de>\nHarley Laue <losinggeneration@gmail.com>\nHarold Cooper <hrldcpr@gmail.com>\nHarrison Turton <harrisonturton@gmail.com>\nHarry Zhang <harryz@hyper.sh>\nHarshal Patil <harshal.patil@in.ibm.com>\nHarshal Patil <harshalp@linux.vnet.ibm.com>\nHe Simei <hesimei@zju.edu.cn>\nHe Xiaoxi <tossmilestone@gmail.com>\nHe Xin <he_xinworld@126.com>\nheartlock <21521209@zju.edu.cn>\nHector Castro <hectcastro@gmail.com>\nHelen Xie <chenjg@harmonycloud.cn>\nHenning Sprang <henning.sprang@gmail.com>\nHiroshi Hatake <hatake@clear-code.com>\nHiroyuki Sasagawa <hs19870702@gmail.com>\nHobofan <goisser94@gmail.com>\nHollie Teal <hollie@docker.com>\nHong Xu <hong@topbug.net>\nHongbin Lu <hongbin034@gmail.com>\nHongxu Jia <hongxu.jia@windriver.com>\nHonza Pokorny <me@honza.ca>\nHsing-Hui Hsu <hsinghui@amazon.com>\nHsing-Yu (David) Chen <davidhsingyuchen@gmail.com>\nhsinko <21551195@zju.edu.cn>\nHu Keping <hukeping@huawei.com>\nHu Tao <hutao@cn.fujitsu.com>\nHuajin Tong <fliterdashen@gmail.com>\nhuang-jl <1046678590@qq.com>\nHuanHuan Ye <logindaveye@gmail.com>\nHuanzhong Zhang <zhanghuanzhong90@gmail.com>\nHuayi Zhang <irachex@gmail.com>\nHugo Barrera <hugo@barrera.io>\nHugo Duncan <hugo@hugoduncan.org>\nHugo Marisco <0x6875676f@gmail.com>\nHui Kang <hkang.sunysb@gmail.com>\nHunter Blanks <hunter@twilio.com>\nhuqun <huqun@zju.edu.cn>\nHuu Nguyen <huu@prismskylabs.com>\nHyeongkyu Lee <hyeongkyu.lee@navercorp.com>\nHyzhou Zhy <hyzhou.zhy@alibaba-inc.com>\nIago López Galeiras <iago@kinvolk.io>\nIan Bishop <ianbishop@pace7.com>\nIan Bull <irbull@gmail.com>\nIan Calvert <ianjcalvert@gmail.com>\nIan Campbell <ian.campbell@docker.com>\nIan Chen <ianre657@gmail.com>\nIan Lee <IanLee1521@gmail.com>\nIan Main <imain@redhat.com>\nIan Philpot <ian.philpot@microsoft.com>\nIan Truslove <ian.truslove@gmail.com>\nIavael <iavaelooeyt@gmail.com>\nIcaro Seara <icaro.seara@gmail.com>\nIgnacio Capurro <icapurrofagian@gmail.com>\nIgor Dolzhikov <bluesriverz@gmail.com>\nIgor Karpovich <i.karpovich@currencysolutions.com>\nIliana Weller <iweller@amazon.com>\nIlkka Laukkanen <ilkka@ilkka.io>\nIllia Antypenko <ilya@antipenko.pp.ua>\nIllo Abdulrahim <abdulrahim.illo@nokia.com>\nIlya Dmitrichenko <errordeveloper@gmail.com>\nIlya Gusev <mail@igusev.ru>\nIlya Khlopotov <ilya.khlopotov@gmail.com>\nimalasong <2879499479@qq.com>\nimre Fitos <imre.fitos+github@gmail.com>\ninglesp <peter.inglesby@gmail.com>\nIngo Gottwald <in.gottwald@gmail.com>\nInnovimax <innovimax@gmail.com>\nIsaac Dupree <antispam@idupree.com>\nIsabel Jimenez <contact.isabeljimenez@gmail.com>\nIsaiah Grace <irgkenya4@gmail.com>\nIsao Jonas <isao.jonas@gmail.com>\nIskander Sharipov <quasilyte@gmail.com>\nIvan Babrou <ibobrik@gmail.com>\nIvan Fraixedes <ifcdev@gmail.com>\nIvan Grcic <igrcic@gmail.com>\nIvan Markin <sw@nogoegst.net>\nJ Bruni <joaohbruni@yahoo.com.br>\nJ. Nunn <jbnunn@gmail.com>\nJack Danger Canty <jackdanger@squareup.com>\nJack Laxson <jackjrabbit@gmail.com>\nJack Walker <90711509+j2walker@users.noreply.github.com>\nJacob Atzen <jacob@jacobatzen.dk>\nJacob Edelman <edelman.jd@gmail.com>\nJacob Tomlinson <jacob@tom.linson.uk>\nJacob Vallejo <jakeev@amazon.com>\nJacob Wen <jian.w.wen@oracle.com>\nJaime Cepeda <jcepedavillamayor@gmail.com>\nJaivish Kothari <janonymous.codevulture@gmail.com>\nJake Champlin <jake.champlin.27@gmail.com>\nJake Moshenko <jake@devtable.com>\nJake Sanders <jsand@google.com>\nJakub Drahos <jdrahos@pulsepoint.com>\nJakub Guzik <jakubmguzik@gmail.com>\nJames Allen <jamesallen0108@gmail.com>\nJames Carey <jecarey@us.ibm.com>\nJames Carr <james.r.carr@gmail.com>\nJames DeFelice <james.defelice@ishisystems.com>\nJames Harrison Fisher <jameshfisher@gmail.com>\nJames Kyburz <james.kyburz@gmail.com>\nJames Kyle <james@jameskyle.org>\nJames Lal <james@lightsofapollo.com>\nJames Mills <prologic@shortcircuit.net.au>\nJames Nesbitt <jnesbitt@mirantis.com>\nJames Nugent <james@jen20.com>\nJames Sanders <james3sanders@gmail.com>\nJames Turnbull <james@lovedthanlost.net>\nJames Watkins-Harvey <jwatkins@progi-media.com>\nJamie Hannaford <jamie@limetree.org>\nJamshid Afshar <jafshar@yahoo.com>\nJan Breig <git@pygos.space>\nJan Chren <dev.rindeal@gmail.com>\nJan Garcia <github-public@n-garcia.com>\nJan Götte <jaseg@jaseg.net>\nJan Keromnes <janx@linux.com>\nJan Koprowski <jan.koprowski@gmail.com>\nJan Pazdziora <jpazdziora@redhat.com>\nJan Toebes <jan@toebes.info>\nJan-Gerd Tenberge <janten@gmail.com>\nJan-Jaap Driessen <janjaapdriessen@gmail.com>\nJana Radhakrishnan <mrjana@docker.com>\nJannick Fahlbusch <git@jf-projects.de>\nJanuar Wayong <januar@gmail.com>\nJared Biel <jared.biel@bolderthinking.com>\nJared Hocutt <jaredh@netapp.com>\nJaroslav Jindrak <dzejrou@gmail.com>\nJaroslaw Zabiello <hipertracker@gmail.com>\nJasmine Hegman <jasmine@jhegman.com>\nJason A. Donenfeld <Jason@zx2c4.com>\nJason Divock <jdivock@gmail.com>\nJason Giedymin <jasong@apache.org>\nJason Green <Jason.Green@AverInformatics.Com>\nJason Hall <imjasonh@gmail.com>\nJason Heiss <jheiss@aput.net>\nJason Livesay <ithkuil@gmail.com>\nJason McVetta <jason.mcvetta@gmail.com>\nJason Plum <jplum@devonit.com>\nJason Shepherd <jason@jasonshepherd.net>\nJason Smith <jasonrichardsmith@gmail.com>\nJason Sommer <jsdirv@gmail.com>\nJason Stangroome <jason@codeassassin.com>\nJasper Siepkes <siepkes@serviceplanet.nl>\nJavier Bassi <javierbassi@gmail.com>\njaxgeller <jacksongeller@gmail.com>\nJay <teguhwpurwanto@gmail.com>\nJay Kamat <github@jgkamat.33mail.com>\nJay Lim <jay@imjching.com>\nJean Rouge <rougej+github@gmail.com>\nJean-Baptiste Barth <jeanbaptiste.barth@gmail.com>\nJean-Baptiste Dalido <jeanbaptiste@appgratis.com>\nJean-Christophe Berthon <huygens@berthon.eu>\nJean-Michel Rouet <jm.rouet@gmail.com>\nJean-Paul Calderone <exarkun@twistedmatrix.com>\nJean-Pierre Huynh <jean-pierre.huynh@ounet.fr>\nJean-Tiare Le Bigot <jt@yadutaf.fr>\nJeeva S. Chelladhurai <sjeeva@gmail.com>\nJeff Anderson <jeff@docker.com>\nJeff Hajewski <jeff.hajewski@gmail.com>\nJeff Johnston <jeff.johnston.mn@gmail.com>\nJeff Lindsay <progrium@gmail.com>\nJeff Mickey <j@codemac.net>\nJeff Minard <jeff@creditkarma.com>\nJeff Nickoloff <jeff.nickoloff@gmail.com>\nJeff Silberman <jsilberm@gmail.com>\nJeff Welch <whatthejeff@gmail.com>\nJeff Zvier <zvier20@gmail.com>\nJeffrey Bolle <jeffreybolle@gmail.com>\nJeffrey Morgan <jmorganca@gmail.com>\nJeffrey van Gogh <jvg@google.com>\nJenny Gebske <jennifer@gebske.de>\nJeongseok Kang <piono623@naver.com>\nJeremy Chambers <jeremy@thehipbot.com>\nJeremy Grosser <jeremy@synack.me>\nJeremy Huntwork <jhuntwork@lightcubesolutions.com>\nJeremy Price <jprice.rhit@gmail.com>\nJeremy Qian <vanpire110@163.com>\nJeremy Unruh <jeremybunruh@gmail.com>\nJeremy Yallop <yallop@docker.com>\nJeroen Franse <jeroenfranse@gmail.com>\nJeroen Jacobs <github@jeroenj.be>\nJesse Dearing <jesse.dearing@gmail.com>\nJesse Dubay <jesse@thefortytwo.net>\nJessica Frazelle <jess@oxide.computer>\nJeyanthinath Muthuram <jeyanthinath10@gmail.com>\nJezeniel Zapanta <jpzapanta22@gmail.com>\nJhon Honce <jhonce@redhat.com>\nJi.Zhilong <zhilongji@gmail.com>\nJian Liao <jliao@alauda.io>\nJian Zeng <anonymousknight96@gmail.com>\nJian Zhang <zhangjian.fnst@cn.fujitsu.com>\nJiang Jinyang <jjyruby@gmail.com>\nJianyong Wu <jianyong.wu@arm.com>\nJie Luo <luo612@zju.edu.cn>\nJie Ma <jienius@outlook.com>\nJihyun Hwang <jhhwang@telcoware.com>\nJilles Oldenbeuving <ojilles@gmail.com>\nJim Alateras <jima@comware.com.au>\nJim Carroll <jim.carroll@docker.com>\nJim Ehrismann <jim.ehrismann@docker.com>\nJim Galasyn <jim.galasyn@docker.com>\nJim Lin <b04705003@ntu.edu.tw>\nJim Minter <jminter@redhat.com>\nJim Perrin <jperrin@centos.org>\nJimmy Cuadra <jimmy@jimmycuadra.com>\nJimmy Puckett <jimmy.puckett@spinen.com>\nJimmy Song <rootsongjc@gmail.com>\nJinsoo Park <cellpjs@gmail.com>\nJintao Zhang <zhangjintao9020@gmail.com>\nJiri Appl <jiria@microsoft.com>\nJiri Popelka <jpopelka@redhat.com>\nJiuyue Ma <majiuyue@huawei.com>\nJiří Župka <jzupka@redhat.com>\nJoakim Roubert <joakim.roubert@axis.com>\nJoao Fernandes <joao.fernandes@docker.com>\nJoao Trindade <trindade.joao@gmail.com>\nJoe Beda <joe.github@bedafamily.com>\nJoe Doliner <jdoliner@pachyderm.io>\nJoe Ferguson <joe@infosiftr.com>\nJoe Gordon <joe.gordon0@gmail.com>\nJoe Shaw <joe@joeshaw.org>\nJoe Van Dyk <joe@tanga.com>\nJoel Friedly <joelfriedly@gmail.com>\nJoel Handwell <joelhandwell@gmail.com>\nJoel Hansson <joel.hansson@ecraft.com>\nJoel Wurtz <jwurtz@jolicode.com>\nJoey Geiger <jgeiger@gmail.com>\nJoey Geiger <jgeiger@users.noreply.github.com>\nJoey Gibson <joey@joeygibson.com>\nJoffrey F <joffrey@docker.com>\nJohan Euphrosine <proppy@google.com>\nJohan Rydberg <johan.rydberg@gmail.com>\nJohanan Lieberman <johanan.lieberman@gmail.com>\nJohannes 'fish' Ziemke <github@freigeist.org>\nJohn Costa <john.costa@gmail.com>\nJohn Feminella <jxf@jxf.me>\nJohn Gardiner Myers <jgmyers@proofpoint.com>\nJohn Gossman <johngos@microsoft.com>\nJohn Harris <john@johnharris.io>\nJohn Howard <github@lowenna.com>\nJohn Laswell <john.n.laswell@gmail.com>\nJohn Maguire <jmaguire@duosecurity.com>\nJohn Mulhausen <john@docker.com>\nJohn OBrien III <jobrieniii@yahoo.com>\nJohn Starks <jostarks@microsoft.com>\nJohn Stephens <johnstep@docker.com>\nJohn Tims <john.k.tims@gmail.com>\nJohn V. Martinez <jvmatl@gmail.com>\nJohn Warwick <jwarwick@gmail.com>\nJohn Willis <john.willis@docker.com>\nJon Johnson <jonjohnson@google.com>\nJon Surrell <jon.surrell@gmail.com>\nJon Wedaman <jweede@gmail.com>\nJonas Dohse <jonas@dohse.ch>\nJonas Geiler <git@jonasgeiler.com>\nJonas Heinrich <Jonas@JonasHeinrich.com>\nJonas Pfenniger <jonas@pfenniger.name>\nJonathan A. Schweder <jonathanschweder@gmail.com>\nJonathan A. Sternberg <jonathansternberg@gmail.com>\nJonathan Boulle <jonathanboulle@gmail.com>\nJonathan Camp <jonathan@irondojo.com>\nJonathan Choy <jonathan.j.choy@gmail.com>\nJonathan Dowland <jon+github@alcopop.org>\nJonathan Lebon <jlebon@redhat.com>\nJonathan Lomas <jonathan@floatinglomas.ca>\nJonathan McCrohan <jmccrohan@gmail.com>\nJonathan Mueller <j.mueller@apoveda.ch>\nJonathan Pares <jonathanpa@users.noreply.github.com>\nJonathan Rudenberg <jonathan@titanous.com>\nJonathan Stoppani <jonathan.stoppani@divio.com>\nJonh Wendell <jonh.wendell@redhat.com>\nJoni Sar <yoni@cocycles.com>\nJoost Cassee <joost@cassee.net>\nJordan Arentsen <blissdev@gmail.com>\nJordan Jennings <jjn2009@gmail.com>\nJordan Sissel <jls@semicomplete.com>\nJordi Massaguer Pla <jmassaguerpla@suse.de>\nJorge Marin <chipironcin@users.noreply.github.com>\nJorit Kleine-Möllhoff <joppich@bricknet.de>\nJose Diaz-Gonzalez <email@josediazgonzalez.com>\nJoseph Anthony Pasquale Holsten <joseph@josephholsten.com>\nJoseph Hager <ajhager@gmail.com>\nJoseph Kern <jkern@semafour.net>\nJoseph Rothrock <rothrock@rothrock.org>\nJosh <jokajak@gmail.com>\nJosh Bodah <jb3689@yahoo.com>\nJosh Bonczkowski <josh.bonczkowski@gmail.com>\nJosh Chorlton <jchorlton@gmail.com>\nJosh Eveleth <joshe@opendns.com>\nJosh Hawn <josh.hawn@docker.com>\nJosh Horwitz <horwitz@addthis.com>\nJosh Poimboeuf <jpoimboe@redhat.com>\nJosh Soref <jsoref@gmail.com>\nJosh Wilson <josh.wilson@fivestars.com>\nJosiah Kiehl <jkiehl@riotgames.com>\nJosé Tomás Albornoz <jojo@eljojo.net>\nJoyce Jang <mail@joycejang.com>\nJP <jpellerin@leapfrogonline.com>\nJulian Taylor <jtaylor.debian@googlemail.com>\nJulien Barbier <write0@gmail.com>\nJulien Bisconti <veggiemonk@users.noreply.github.com>\nJulien Bordellier <julienbordellier@gmail.com>\nJulien Dubois <julien.dubois@gmail.com>\nJulien Kassar <github@kassisol.com>\nJulien Maitrehenry <julien.maitrehenry@me.com>\nJulien Pervillé <julien.perville@perfect-memory.com>\nJulien Pivotto <roidelapluie@inuits.eu>\nJulio Guerra <julio@sqreen.com>\nJulio Montes <imc.coder@gmail.com>\nJun Du <dujun5@huawei.com>\nJun-Ru Chang <jrjang@gmail.com>\njunxu <xujun@cmss.chinamobile.com>\nJussi Nummelin <jussi.nummelin@gmail.com>\nJustas Brazauskas <brazauskasjustas@gmail.com>\nJusten Martin <jmart@the-coder.com>\nJustin Chadwell <me@jedevc.com>\nJustin Cormack <justin.cormack@docker.com>\nJustin Force <justin.force@gmail.com>\nJustin Keller <85903732+jk-vb@users.noreply.github.com>\nJustin Menga <justin.menga@gmail.com>\nJustin Plock <jplock@users.noreply.github.com>\nJustin Simonelis <justin.p.simonelis@gmail.com>\nJustin Terry <juterry@microsoft.com>\nJustyn Temme <justyntemme@gmail.com>\nJyrki Puttonen <jyrkiput@gmail.com>\nJérémy Leherpeur <amenophis@leherpeur.net>\nJérôme Petazzoni <jerome.petazzoni@docker.com>\nJörg Thalheim <joerg@higgsboson.tk>\nK. Heller <pestophagous@gmail.com>\nKai Blin <kai@samba.org>\nKai Qiang Wu (Kennan) <wkq5325@gmail.com>\nKaijie Chen <chen@kaijie.org>\nKamil Domański <kamil@domanski.co>\nKamjar Gerami <kami.gerami@gmail.com>\nKanstantsin Shautsou <kanstantsin.sha@gmail.com>\nKara Alexandra <kalexandra@us.ibm.com>\nKaran Lyons <karan@karanlyons.com>\nKareem Khazem <karkhaz@karkhaz.com>\nkargakis <kargakis@users.noreply.github.com>\nKarl Grzeszczak <karlgrz@gmail.com>\nKarol Duleba <mr.fuxi@gmail.com>\nKarthik Karanth <karanth.karthik@gmail.com>\nKarthik Nayak <karthik.188@gmail.com>\nKasper Fabæch Brandt <poizan@poizan.dk>\nKate Heddleston <kate.heddleston@gmail.com>\nKatie McLaughlin <katie@glasnt.com>\nKato Kazuyoshi <kato.kazuyoshi@gmail.com>\nKatrina Owen <katrina.owen@gmail.com>\nKawsar Saiyeed <kawsar.saiyeed@projiris.com>\nKay Yan <kay.yan@daocloud.io>\nkayrus <kay.diam@gmail.com>\nKazuhiro Sera <seratch@gmail.com>\nKazuyoshi Kato <katokazu@amazon.com>\nKe Li <kel@splunk.com>\nKe Xu <leonhartx.k@gmail.com>\nKei Ohmura <ohmura.kei@gmail.com>\nKeith Hudgins <greenman@greenman.org>\nKeli Hu <dev@keli.hu>\nKen Bannister <kb2ma@runbox.com>\nKen Cochrane <kencochrane@gmail.com>\nKen Herner <kherner@progress.com>\nKen ICHIKAWA <ichikawa.ken@jp.fujitsu.com>\nKen Reese <krrgithub@gmail.com>\nKenfe-Mickaël Laventure <mickael.laventure@gmail.com>\nKenjiro Nakayama <nakayamakenjiro@gmail.com>\nKent Johnson <kentoj@gmail.com>\nKenta Tada <Kenta.Tada@sony.com>\nKevin \"qwazerty\" Houdebert <kevin.houdebert@gmail.com>\nKevin Alvarez <github@crazymax.dev>\nKevin Burke <kev@inburke.com>\nKevin Clark <kevin.clark@gmail.com>\nKevin Feyrer <kevin.feyrer@btinternet.com>\nKevin J. Lynagh <kevin@keminglabs.com>\nKevin Jing Qiu <kevin@idempotent.ca>\nKevin Kern <kaiwentan@harmonycloud.cn>\nKevin Menard <kevin@nirvdrum.com>\nKevin Meredith <kevin.m.meredith@gmail.com>\nKevin P. Kucharczyk <kevinkucharczyk@gmail.com>\nKevin Parsons <kevpar@microsoft.com>\nKevin Richardson <kevin@kevinrichardson.co>\nKevin Shi <kshi@andrew.cmu.edu>\nKevin Wallace <kevin@pentabarf.net>\nKevin Yap <me@kevinyap.ca>\nKeyvan Fatehi <keyvanfatehi@gmail.com>\nkies <lleelm@gmail.com>\nKim BKC Carlbacker <kim.carlbacker@gmail.com>\nKim Eik <kim@heldig.org>\nKimbro Staken <kstaken@kstaken.com>\nKir Kolyshkin <kolyshkin@gmail.com>\nKiran Gangadharan <kiran.daredevil@gmail.com>\nKirill SIbirev <l0kix2@gmail.com>\nKirk Easterson <kirk.easterson@gmail.com>\nknappe <tyler.knappe@gmail.com>\nKohei Tsuruta <coheyxyz@gmail.com>\nKoichi Shiraishi <k@zchee.io>\nKonrad Kleine <konrad.wilhelm.kleine@gmail.com>\nKonrad Ponichtera <konpon96@gmail.com>\nKonstantin Gribov <grossws@gmail.com>\nKonstantin L <sw.double@gmail.com>\nKonstantin Pelykh <kpelykh@zettaset.com>\nKostadin Plachkov <k.n.plachkov@gmail.com>\nkpcyrd <git@rxv.cc>\nKrasi Georgiev <krasi@vip-consult.solutions>\nKrasimir Georgiev <support@vip-consult.co.uk>\nKris-Mikael Krister <krismikael@protonmail.com>\nKristian Haugene <kristian.haugene@capgemini.com>\nKristina Zabunova <triara.xiii@gmail.com>\nKrystian Wojcicki <kwojcicki@sympatico.ca>\nKunal Kushwaha <kushwaha_kunal_v7@lab.ntt.co.jp>\nKunal Tyagi <tyagi.kunal@live.com>\nKyle Conroy <kyle.j.conroy@gmail.com>\nKyle Linden <linden.kyle@gmail.com>\nKyle Squizzato <ksquizz@gmail.com>\nKyle Wuolle <kyle.wuolle@gmail.com>\nkyu <leehk1227@gmail.com>\nLachlan Coote <lcoote@vmware.com>\nLai Jiangshan <jiangshanlai@gmail.com>\nLajos Papp <lajos.papp@sequenceiq.com>\nLakshan Perera <lakshan@laktek.com>\nLalatendu Mohanty <lmohanty@redhat.com>\nLance Chen <cyen0312@gmail.com>\nLance Kinley <lkinley@loyaltymethods.com>\nLars Andringa <l.s.andringa@rug.nl>\nLars Butler <Lars.Butler@gmail.com>\nLars Kellogg-Stedman <lars@redhat.com>\nLars R. Damerow <lars@pixar.com>\nLars-Magnus Skog <ralphtheninja@riseup.net>\nLaszlo Meszaros <lacienator@gmail.com>\nLaura Brehm <laurabrehm@hey.com>\nLaura Frank <ljfrank@gmail.com>\nLaurent Bernaille <laurent.bernaille@datadoghq.com>\nLaurent Erignoux <lerignoux@gmail.com>\nLaurie Voss <github@seldo.com>\nLeandro Motta Barros <lmb@stackedboxes.org>\nLeandro Siqueira <leandro.siqueira@gmail.com>\nLee Calcote <leecalcote@gmail.com>\nLee Chao <932819864@qq.com>\nLee, Meng-Han <sunrisedm4@gmail.com>\nLei Gong <lgong@alauda.io>\nLei Jitang <leijitang@huawei.com>\nLeiiwang <u2takey@gmail.com>\nLen Weincier <len@cloudafrica.net>\nLennie <github@consolejunkie.net>\nLeo Gallucci <elgalu3@gmail.com>\nLeonardo Nodari <me@leonardonodari.it>\nLeonardo Taccari <leot@NetBSD.org>\nLeszek Kowalski <github@leszekkowalski.pl>\nLevi Blackstone <levi.blackstone@rackspace.com>\nLevi Gross <levi@levigross.com>\nLevi Harrison <levisamuelharrison@gmail.com>\nLewis Daly <lewisdaly@me.com>\nLewis Marshall <lewis@lmars.net>\nLewis Peckover <lew+github@lew.io>\nLi Yi <denverdino@gmail.com>\nLiam Macgillavry <liam@kumina.nl>\nLiana Lo <liana.lixia@gmail.com>\nLiang Mingqiang <mqliang.zju@gmail.com>\nLiang-Chi Hsieh <viirya@gmail.com>\nliangwei <liangwei14@huawei.com>\nLiao Qingwei <liaoqingwei@huawei.com>\nLifubang <lifubang@acmcoder.com>\nLihua Tang <lhtang@alauda.io>\nLily Guo <lily.guo@docker.com>\nlimeidan <limeidan@loongson.cn>\nLin Lu <doraalin@163.com>\nLingFaKe <lingfake@huawei.com>\nLinus Heckemann <lheckemann@twig-world.com>\nLiran Tal <liran.tal@gmail.com>\nLiron Levin <liron@twistlock.com>\nLiu Bo <bo.li.liu@oracle.com>\nLiu Hua <sdu.liu@huawei.com>\nliwenqi <vikilwq@zju.edu.cn>\nlixiaobing10051267 <li.xiaobing1@zte.com.cn>\nLiz Zhang <lizzha@microsoft.com>\nLIZAO LI <lzlarryli@gmail.com>\nLizzie Dixon <_@lizzie.io>\nLloyd Dewolf <foolswisdom@gmail.com>\nLokesh Mandvekar <lsm5@fedoraproject.org>\nlongliqiang88 <394564827@qq.com>\nLorenz Leutgeb <lorenz.leutgeb@gmail.com>\nLorenzo Fontana <fontanalorenz@gmail.com>\nLotus Fenn <fenn.lotus@gmail.com>\nLouis Delossantos <ldelossa.ld@gmail.com>\nLouis Opter <kalessin@kalessin.fr>\nLuboslav Pivarc <lpivarc@redhat.com>\nLuca Favatella <luca.favatella@erlang-solutions.com>\nLuca Marturana <lucamarturana@gmail.com>\nLuca Orlandi <luca.orlandi@gmail.com>\nLuca-Bogdan Grigorescu <Luca-Bogdan Grigorescu>\nLucas Chan <lucas-github@lucaschan.com>\nLucas Chi <lucas@teacherspayteachers.com>\nLucas Molas <lmolas@fundacionsadosky.org.ar>\nLucas Silvestre <lukas.silvestre@gmail.com>\nLuciano Mores <leslau@gmail.com>\nLuis Henrique Mulinari <luis.mulinari@gmail.com>\nLuis Martínez de Bartolomé Izquierdo <lmartinez@biicode.com>\nLuiz Svoboda <luizek@gmail.com>\nLukas Heeren <lukas-heeren@hotmail.com>\nLukas Waslowski <cr7pt0gr4ph7@gmail.com>\nlukaspustina <lukas.pustina@centerdevice.com>\nLukasz Zajaczkowski <Lukasz.Zajaczkowski@ts.fujitsu.com>\nLuke Marsden <me@lukemarsden.net>\nLyn <energylyn@zju.edu.cn>\nLynda O'Leary <lyndaoleary29@gmail.com>\nLénaïc Huard <lhuard@amadeus.com>\nMa Müller <mueller-ma@users.noreply.github.com>\nMa Shimiao <mashimiao.fnst@cn.fujitsu.com>\nMabin <bin.ma@huawei.com>\nMadhan Raj Mookkandy <MadhanRaj.Mookkandy@microsoft.com>\nMadhav Puri <madhav.puri@gmail.com>\nMadhu Venugopal <mavenugo@gmail.com>\nMageee <fangpuyi@foxmail.com>\nMahesh Tiyyagura <tmahesh@gmail.com>\nmalnick <malnick@gmail..com>\nMalte Janduda <mail@janduda.net>\nManfred Touron <m@42.am>\nManfred Zabarauskas <manfredas@zabarauskas.com>\nManjunath A Kumatagi <mkumatag@in.ibm.com>\nMansi Nahar <mmn4185@rit.edu>\nManuel Meurer <manuel@krautcomputing.com>\nManuel Rüger <manuel@rueg.eu>\nManuel Woelker <github@manuel.woelker.org>\nmapk0y <mapk0y@gmail.com>\nMarat Radchenko <marat@slonopotamus.org>\nMarc Abramowitz <marc@marc-abramowitz.com>\nMarc Kuo <kuomarc2@gmail.com>\nMarc Tamsky <mtamsky@gmail.com>\nMarcel Edmund Franke <marcel.edmund.franke@gmail.com>\nMarcelo Horacio Fortino <info@fortinux.com>\nMarcelo Salazar <chelosalazar@gmail.com>\nMarco Hennings <marco.hennings@freiheit.com>\nMarcus Cobden <mcobden@cisco.com>\nMarcus Farkas <toothlessgear@finitebox.com>\nMarcus Linke <marcus.linke@gmx.de>\nMarcus Martins <marcus@docker.com>\nMarcus Ramberg <marcus@nordaaker.com>\nMarek Goldmann <marek.goldmann@gmail.com>\nMarian Marinov <mm@yuhu.biz>\nMarianna Tessel <mtesselh@gmail.com>\nMario Loriedo <mario.loriedo@gmail.com>\nMarius Gundersen <me@mariusgundersen.net>\nMarius Sturm <marius@graylog.com>\nMarius Voila <marius.voila@gmail.com>\nMark Allen <mrallen1@yahoo.com>\nMark Feit <mfeit@internet2.edu>\nMark Jeromin <mark.jeromin@sysfrog.net>\nMark McGranaghan <mmcgrana@gmail.com>\nMark McKinstry <mmckinst@umich.edu>\nMark Milstein <mark@epiloque.com>\nMark Oates <fl0yd@me.com>\nMark Parker <godefroi@users.noreply.github.com>\nMark Vainomaa <mikroskeem@mikroskeem.eu>\nMark West <markewest@gmail.com>\nMarkan Patel <mpatel678@gmail.com>\nMarko Mikulicic <mmikulicic@gmail.com>\nMarko Tibold <marko@tibold.nl>\nMarkus Fix <lispmeister@gmail.com>\nMarkus Kortlang <hyp3rdino@googlemail.com>\nMartijn Dwars <ikben@martijndwars.nl>\nMartijn van Oosterhout <kleptog@svana.org>\nMartin Braun <braun@neuroforge.de>\nMartin Dojcak <martin.dojcak@lablabs.io>\nMartin Honermeyer <maze@strahlungsfrei.de>\nMartin Jirku <martin@jirku.sk>\nMartin Kelly <martin@surround.io>\nMartin Mosegaard Amdisen <martin.amdisen@praqma.com>\nMartin Muzatko <martin@happy-css.com>\nMartin Redmond <redmond.martin@gmail.com>\nMaru Newby <mnewby@thesprawl.net>\nMary Anthony <mary.anthony@docker.com>\nMasahito Zembutsu <zembutsu@users.noreply.github.com>\nMasato Ohba <over.rye@gmail.com>\nMasayuki Morita <minamijoyo@gmail.com>\nMason Malone <mason.malone@gmail.com>\nMateusz Sulima <sulima.mateusz@gmail.com>\nMathias Monnerville <mathias@monnerville.com>\nMathieu Champlon <mathieu.champlon@docker.com>\nMathieu Le Marec - Pasquet <kiorky@cryptelium.net>\nMathieu Parent <math.parent@gmail.com>\nMathieu Paturel <mathieu.paturel@gmail.com>\nMatt Apperson <me@mattapperson.com>\nMatt Bachmann <bachmann.matt@gmail.com>\nMatt Bajor <matt@notevenremotelydorky.com>\nMatt Bentley <matt.bentley@docker.com>\nMatt Haggard <haggardii@gmail.com>\nMatt Hoyle <matt@deployable.co>\nMatt McCormick <matt.mccormick@kitware.com>\nMatt Moore <mattmoor@google.com>\nMatt Morrison <3maven@gmail.com>\nMatt Richardson <matt@redgumtech.com.au>\nMatt Rickard <mrick@google.com>\nMatt Robenolt <matt@ydekproductions.com>\nMatt Schurenko <matt.schurenko@gmail.com>\nMatt Williams <mattyw@me.com>\nMatthew Heon <mheon@redhat.com>\nMatthew Lapworth <matthewl@bit-shift.net>\nMatthew Mayer <matthewkmayer@gmail.com>\nMatthew Mosesohn <raytrac3r@gmail.com>\nMatthew Mueller <mattmuelle@gmail.com>\nMatthew Riley <mattdr@google.com>\nMatthias Klumpp <matthias@tenstral.net>\nMatthias Kühnle <git.nivoc@neverbox.com>\nMatthias Rampke <mr@soundcloud.com>\nMatthieu Fronton <m@tthieu.fr>\nMatthieu Hauglustaine <matt.hauglustaine@gmail.com>\nMattias Jernberg <nostrad@gmail.com>\nMauricio Garavaglia <mauricio@medallia.com>\nmauriyouth <mauriyouth@gmail.com>\nMax Harmathy <max.harmathy@web.de>\nMax Shytikov <mshytikov@gmail.com>\nMax Timchenko <maxvt@pagerduty.com>\nMaxim Fedchyshyn <sevmax@gmail.com>\nMaxim Ivanov <ivanov.maxim@gmail.com>\nMaxim Kulkin <mkulkin@mirantis.com>\nMaxim Treskin <zerthurd@gmail.com>\nMaxime Petazzoni <max@signalfuse.com>\nMaximiliano Maccanti <maccanti@amazon.com>\nMaxwell <csuhp007@gmail.com>\nMeaglith Ma <genedna@gmail.com>\nmeejah <meejah@meejah.ca>\nMegan Kostick <mkostick@us.ibm.com>\nMehul Kar <mehul.kar@gmail.com>\nMei ChunTao <mei.chuntao@zte.com.cn>\nMengdi Gao <usrgdd@gmail.com>\nMenghui Chen <menghui.chen@alibaba-inc.com>\nMert Yazıcıoğlu <merty@users.noreply.github.com>\nmgniu <mgniu@dataman-inc.com>\nMicah Zoltu <micah@newrelic.com>\nMichael A. Smith <michael@smith-li.com>\nMichael Beskin <mrbeskin@gmail.com>\nMichael Bridgen <mikeb@squaremobius.net>\nMichael Brown <michael@netdirect.ca>\nMichael Chiang <mchiang@docker.com>\nMichael Crosby <crosbymichael@gmail.com>\nMichael Currie <mcurrie@bruceforceresearch.com>\nMichael Friis <friism@gmail.com>\nMichael Gorsuch <gorsuch@github.com>\nMichael Grauer <michael.grauer@kitware.com>\nMichael Holzheu <holzheu@linux.vnet.ibm.com>\nMichael Hudson-Doyle <michael.hudson@canonical.com>\nMichael Huettermann <michael@huettermann.net>\nMichael Irwin <mikesir87@gmail.com>\nMichael Kebe <michael.kebe@hkm.de>\nMichael Kuehn <micha@kuehn.io>\nMichael Käufl <docker@c.michael-kaeufl.de>\nMichael Neale <michael.neale@gmail.com>\nMichael Nussbaum <michael.nussbaum@getbraintree.com>\nMichael Prokop <github@michael-prokop.at>\nMichael Scharf <github@scharf.gr>\nMichael Spetsiotis <michael_spets@hotmail.com>\nMichael Stapelberg <michael+gh@stapelberg.de>\nMichael Steinert <mike.steinert@gmail.com>\nMichael Thies <michaelthies78@gmail.com>\nMichael Weidmann <michaelweidmann@web.de>\nMichael West <mwest@mdsol.com>\nMichael Zhao <michael.zhao@arm.com>\nMichal Fojtik <mfojtik@redhat.com>\nMichal Gebauer <mishak@mishak.net>\nMichal Jemala <michal.jemala@gmail.com>\nMichal Kostrzewa <michal.kostrzewa@codilime.com>\nMichal Minář <miminar@redhat.com>\nMichal Rostecki <mrostecki@opensuse.org>\nMichal Wieczorek <wieczorek-michal@wp.pl>\nMichaël Pailloncy <mpapo.dev@gmail.com>\nMichał Czeraszkiewicz <czerasz@gmail.com>\nMichał Gryko <github@odkurzacz.org>\nMichał Kosek <mihao@users.noreply.github.com>\nMichiel de Jong <michiel@unhosted.org>\nMickaël Fortunato <morsi.morsicus@gmail.com>\nMickaël Remars <mickael@remars.com>\nMiguel Angel Fernández <elmendalerenda@gmail.com>\nMiguel Morales <mimoralea@gmail.com>\nMiguel Perez <miguel@voyat.com>\nMihai Borobocea <MihaiBorob@gmail.com>\nMihuleacc Sergiu <mihuleac.sergiu@gmail.com>\nMikael Davranche <mikael.davranche@corp.ovh.com>\nMike Brown <brownwm@us.ibm.com>\nMike Bush <mpbush@gmail.com>\nMike Casas <mkcsas0@gmail.com>\nMike Chelen <michael.chelen@gmail.com>\nMike Danese <mikedanese@google.com>\nMike Dillon <mike@embody.org>\nMike Dougherty <mike.dougherty@docker.com>\nMike Estes <mike.estes@logos.com>\nMike Gaffney <mike@uberu.com>\nMike Goelzer <mike.goelzer@docker.com>\nMike Leone <mleone896@gmail.com>\nMike Lundy <mike@fluffypenguin.org>\nMike MacCana <mike.maccana@gmail.com>\nMike Naberezny <mike@naberezny.com>\nMike Snitzer <snitzer@redhat.com>\nMike Sul <mike.sul@foundries.io>\nmikelinjie <294893458@qq.com>\nMikhail Sobolev <mss@mawhrin.net>\nMiklos Szegedi <miklos.szegedi@cloudera.com>\nMilas Bowman <devnull@milas.dev>\nMilind Chawre <milindchawre@gmail.com>\nMiloslav Trmač <mitr@redhat.com>\nmingqing <limingqing@cyou-inc.com>\nMingzhen Feng <fmzhen@zju.edu.cn>\nMisty Stanley-Jones <misty@docker.com>\nMitch Capper <mitch.capper@gmail.com>\nMizuki Urushida <z11111001011@gmail.com>\nmlarcher <github@ringabell.org>\nMohammad Banikazemi <MBanikazemi@gmail.com>\nMohammad Nasirifar <farnasirim@gmail.com>\nMohammed Aaqib Ansari <maaquib@gmail.com>\nMohd Sadiq <mohdsadiq058@gmail.com>\nMohit Soni <mosoni@ebay.com>\nMoorthy RS <rsmoorthy@gmail.com>\nMorgan Bauer <mbauer@us.ibm.com>\nMorgante Pell <morgante.pell@morgante.net>\nMorgy93 <thomas@ulfertsprygoda.de>\nMorten Siebuhr <sbhr@sbhr.dk>\nMorton Fox <github@qslw.com>\nMoysés Borges <moysesb@gmail.com>\nmrfly <mr.wrfly@gmail.com>\nMrunal Patel <mrunalp@gmail.com>\nMuayyad Alsadi <alsadi@gmail.com>\nMuhammad Zohaib Aslam <zohaibse011@gmail.com>\nMustafa Akın <mustafa91@gmail.com>\nMuthukumar R <muthur@gmail.com>\nMáximo Cuadros <mcuadros@gmail.com>\nMédi-Rémi Hashim <medimatrix@users.noreply.github.com>\nNace Oroz <orkica@gmail.com>\nNahum Shalman <nshalman@omniti.com>\nNakul Pathak <nakulpathak3@hotmail.com>\nNalin Dahyabhai <nalin@redhat.com>\nNan Monnand Deng <monnand@gmail.com>\nNaoki Orii <norii@cs.cmu.edu>\nNatalie Parker <nparker@omnifone.com>\nNatanael Copa <natanael.copa@docker.com>\nNatasha Jarus <linuxmercedes@gmail.com>\nNate Brennand <nate.brennand@clever.com>\nNate Eagleson <nate@nateeag.com>\nNate Jones <nate@endot.org>\nNathan Carlson <carl4403@umn.edu>\nNathan Herald <me@nathanherald.com>\nNathan Hsieh <hsieh.nathan@gmail.com>\nNathan Kleyn <nathan@nathankleyn.com>\nNathan LeClaire <nathan.leclaire@docker.com>\nNathan McCauley <nathan.mccauley@docker.com>\nNathan Williams <nathan@teamtreehouse.com>\nNaveed Jamil <naveed.jamil@tenpearls.com>\nNeal McBurnett <neal@mcburnett.org>\nNeil Horman <nhorman@tuxdriver.com>\nNeil Peterson <neilpeterson@outlook.com>\nNelson Chen <crazysim@gmail.com>\nNeyazul Haque <nuhaque@gmail.com>\nNghia Tran <nghia@google.com>\nNiall O'Higgins <niallo@unworkable.org>\nNicholas E. Rabenau <nerab@gmx.at>\nNick Adcock <nick.adcock@docker.com>\nNick DeCoursin <n.decoursin@foodpanda.com>\nNick Irvine <nfirvine@nfirvine.com>\nNick Neisen <nwneisen@gmail.com>\nNick Parker <nikaios@gmail.com>\nNick Payne <nick@kurai.co.uk>\nNick Russo <nicholasjamesrusso@gmail.com>\nNick Santos <nick.santos@docker.com>\nNick Stenning <nick.stenning@digital.cabinet-office.gov.uk>\nNick Stinemates <nick@stinemates.org>\nNick Wood <nwood@microsoft.com>\nNickrenREN <yuquan.ren@easystack.cn>\nNicola Kabar <nicolaka@gmail.com>\nNicolas Borboën <ponsfrilus@gmail.com>\nNicolas De Loof <nicolas.deloof@gmail.com>\nNicolas Dudebout <nicolas.dudebout@gatech.edu>\nNicolas Goy <kuon@goyman.com>\nNicolas Kaiser <nikai@nikai.net>\nNicolas Sterchele <sterchele.nicolas@gmail.com>\nNicolas V Castet <nvcastet@us.ibm.com>\nNicolás Hock Isaza <nhocki@gmail.com>\nNiel Drummond <niel@drummond.lu>\nNigel Poulton <nigelpoulton@hotmail.com>\nNik Nyby <nikolas@gnu.org>\nNikhil Chawla <chawlanikhil24@gmail.com>\nNikolaMandic <mn080202@gmail.com>\nNikolas Garofil <nikolas.garofil@uantwerpen.be>\nNikolay Edigaryev <edigaryev@gmail.com>\nNikolay Milovanov <nmil@itransformers.net>\nningmingxiao <ning.mingxiao@zte.com.cn>\nNirmal Mehta <nirmalkmehta@gmail.com>\nNishant Totla <nishanttotla@gmail.com>\nNIWA Hideyuki <niwa.niwa@nifty.ne.jp>\nNoah Meyerhans <nmeyerha@amazon.com>\nNoah Treuhaft <noah.treuhaft@docker.com>\nNobodyOnSE <ich@sektor.selfip.com>\nnoducks <onemannoducks@gmail.com>\nNolan Darilek <nolan@thewordnerd.info>\nNolan Miles <nolanpmiles@gmail.com>\nNoriki Nakamura <noriki.nakamura@miraclelinux.com>\nnponeccop <andy.melnikov@gmail.com>\nNurahmadie <nurahmadie@gmail.com>\nNuutti Kotivuori <naked@iki.fi>\nnzwsch <hi@nzwsch.com>\nO.S. Tezer <ostezer@gmail.com>\nobjectified <objectified@gmail.com>\nOdin Ugedal <odin@ugedal.com>\nOguz Bilgic <fisyonet@gmail.com>\nOh Jinkyun <tintypemolly@gmail.com>\nOhad Schneider <ohadschn@users.noreply.github.com>\nohmystack <jun.jiang02@ele.me>\nOle Reifschneider <mail@ole-reifschneider.de>\nOliver Neal <ItsVeryWindy@users.noreply.github.com>\nOliver Reason <oli@overrateddev.co>\nOlivier Gambier <dmp42@users.noreply.github.com>\nOlle Jonsson <olle.jonsson@gmail.com>\nOlli Janatuinen <olli.janatuinen@gmail.com>\nOlly Pomeroy <oppomeroy@gmail.com>\nOmri Shiv <Omri.Shiv@teradata.com>\nOnur Filiz <onur.filiz@microsoft.com>\nOriol Francès <oriolfa@gmail.com>\nOscar Bonilla <6f6231@gmail.com>\noscar.chen <2972789494@qq.com>\nOskar Niburski <oskarniburski@gmail.com>\nOtto Kekäläinen <otto@seravo.fi>\nOuyang Liduo <oyld0210@163.com>\nOvidio Mallo <ovidio.mallo@gmail.com>\nPanagiotis Moustafellos <pmoust@elastic.co>\nPaolo G. Giarrusso <p.giarrusso@gmail.com>\nPascal <pascalgn@users.noreply.github.com>\nPascal Bach <pascal.bach@siemens.com>\nPascal Borreli <pascal@borreli.com>\nPascal Hartig <phartig@rdrei.net>\nPatrick Böänziger <patrick.baenziger@bsi-software.com>\nPatrick Devine <patrick.devine@docker.com>\nPatrick Haas <patrickhaas@google.com>\nPatrick Hemmer <patrick.hemmer@gmail.com>\nPatrick St. laurent <patrick@saint-laurent.us>\nPatrick Stapleton <github@gdi2290.com>\nPatrik Cyvoct <patrik@ptrk.io>\npattichen <craftsbear@gmail.com>\nPaul \"TBBle\" Hampson <Paul.Hampson@Pobox.com>\nPaul <paul9869@gmail.com>\npaul <paul@inkling.com>\nPaul Annesley <paul@annesley.cc>\nPaul Bellamy <paul.a.bellamy@gmail.com>\nPaul Bowsher <pbowsher@globalpersonals.co.uk>\nPaul Furtado <pfurtado@hubspot.com>\nPaul Hammond <paul@paulhammond.org>\nPaul Jimenez <pj@place.org>\nPaul Kehrer <paul.l.kehrer@gmail.com>\nPaul Lietar <paul@lietar.net>\nPaul Liljenberg <liljenberg.paul@gmail.com>\nPaul Morie <pmorie@gmail.com>\nPaul Nasrat <pnasrat@gmail.com>\nPaul Seiffert <paul.seiffert@jimdo.com>\nPaul Weaver <pauweave@cisco.com>\nPaulo Gomes <pjbgf@linux.com>\nPaulo Ribeiro <paigr.io@gmail.com>\nPavel Lobashov <ShockwaveNN@gmail.com>\nPavel Matěja <pavel@verotel.cz>\nPavel Pletenev <cpp.create@gmail.com>\nPavel Pospisil <pospispa@gmail.com>\nPavel Sutyrin <pavel.sutyrin@gmail.com>\nPavel Tikhomirov <ptikhomirov@virtuozzo.com>\nPavlos Ratis <dastergon@gentoo.org>\nPavol Vargovcik <pallly.vargovcik@gmail.com>\nPawel Konczalski <mail@konczalski.de>\nPaweł Gronowski <pawel.gronowski@docker.com>\npayall4u <payall4u@qq.com>\nPeeyush Gupta <gpeeyush@linux.vnet.ibm.com>\nPeggy Li <peggyli.224@gmail.com>\nPei Su <sillyousu@gmail.com>\nPeng Tao <bergwolf@gmail.com>\nPenghan Wang <ph.wang@daocloud.io>\nPer Weijnitz <per.weijnitz@gmail.com>\nperhapszzy@sina.com <perhapszzy@sina.com>\nPete Woods <pete.woods@circleci.com>\nPeter Bourgon <peter@bourgon.org>\nPeter Braden <peterbraden@peterbraden.co.uk>\nPeter Bücker <peter.buecker@pressrelations.de>\nPeter Choi <phkchoi89@gmail.com>\nPeter Dave Hello <hsu@peterdavehello.org>\nPeter Edge <peter.edge@gmail.com>\nPeter Ericson <pdericson@gmail.com>\nPeter Esbensen <pkesbensen@gmail.com>\nPeter Jaffe <pjaffe@nevo.com>\nPeter Kang <peter@spell.run>\nPeter Malmgren <ptmalmgren@gmail.com>\nPeter Salvatore <peter@psftw.com>\nPeter Volpe <petervo@redhat.com>\nPeter Waller <p@pwaller.net>\nPetr Švihlík <svihlik.petr@gmail.com>\nPetros Angelatos <petrosagg@gmail.com>\nPhil <underscorephil@gmail.com>\nPhil Estes <estesp@gmail.com>\nPhil Sphicas <phil.sphicas@att.com>\nPhil Spitler <pspitler@gmail.com>\nPhilip Alexander Etling <paetling@gmail.com>\nPhilip K. Warren <pkwarren@gmail.com>\nPhilip Monroe <phil@philmonroe.com>\nPhilipp Fruck <dev@p-fruck.de>\nPhilipp Gillé <philipp.gille@gmail.com>\nPhilipp Wahala <philipp.wahala@gmail.com>\nPhilipp Weissensteiner <mail@philippweissensteiner.com>\nPhillip Alexander <git@phillipalexander.io>\nphineas <phin@phineas.io>\npidster <pid@pidster.com>\nPiergiuliano Bossi <pgbossi@gmail.com>\nPierre <py@poujade.org>\nPierre Carrier <pierre@meteor.com>\nPierre Dal-Pra <dalpra.pierre@gmail.com>\nPierre Wacrenier <pierre.wacrenier@gmail.com>\nPierre-Alain RIVIERE <pariviere@ippon.fr>\nPiotr Bogdan <ppbogdan@gmail.com>\nPiotr Karbowski <piotr.karbowski@protonmail.ch>\nPorjo <porjo38@yahoo.com.au>\nPoul Kjeldager Sørensen <pks@s-innovations.net>\nPradeep Chhetri <pradeep@indix.com>\nPradip Dhara <pradipd@microsoft.com>\nPradipta Kr. Banerjee <bpradip@in.ibm.com>\nPrasanna Gautam <prasannagautam@gmail.com>\nPratik Karki <prertik@outlook.com>\nPrayag Verma <prayag.verma@gmail.com>\nPriya Wadhwa <priyawadhwa@google.com>\nProjjol Banerji <probaner23@gmail.com>\nPrzemek Hejman <przemyslaw.hejman@gmail.com>\nPuneet Pruthi <puneet.pruthi@oracle.com>\nPure White <daniel48@126.com>\npysqz <randomq@126.com>\nQiang Huang <h.huangqiang@huawei.com>\nQin TianHuan <tianhuan@bingotree.cn>\nQinglan Peng <qinglanpeng@zju.edu.cn>\nQuan Tian <tianquan@cloudin.cn>\nqudongfang <qudongfang@gmail.com>\nQuentin Brossard <qbrossard@gmail.com>\nQuentin Perez <qperez@ocs.online.net>\nQuentin Tayssier <qtayssier@gmail.com>\nr0n22 <cameron.regan@gmail.com>\nRachit Sharma <rachitsharma613@gmail.com>\nRadostin Stoyanov <rstoyanov1@gmail.com>\nRafal Jeczalik <rjeczalik@gmail.com>\nRafe Colton <rafael.colton@gmail.com>\nRaghavendra K T <raghavendra.kt@linux.vnet.ibm.com>\nRaghuram Devarakonda <draghuram@gmail.com>\nRaja Sami <raja.sami@tenpearls.com>\nRajat Pandit <rp@rajatpandit.com>\nRajdeep Dua <dua_rajdeep@yahoo.com>\nRalf Sippl <ralf.sippl@gmail.com>\nRalle <spam@rasmusa.net>\nRalph Bean <rbean@redhat.com>\nRamkumar Ramachandra <artagnon@gmail.com>\nRamon Brooker <rbrooker@aetherealmind.com>\nRamon van Alteren <ramon@vanalteren.nl>\nRaviTeja Pothana <ravi-teja@live.com>\nRay Tsang <rayt@google.com>\nReadmeCritic <frankensteinbot@gmail.com>\nrealityone <realityone@me.com>\nRecursive Madman <recursive.madman@gmx.de>\nReficul <xuzhenglun@gmail.com>\nRegan McCooey <rmccooey27@aol.com>\nRemi Rampin <remirampin@gmail.com>\nRemy Suen <remy.suen@gmail.com>\nRenato Riccieri Santos Zannon <renato.riccieri@gmail.com>\nRenaud Gaubert <rgaubert@nvidia.com>\nRhys Hiltner <rhys@twitch.tv>\nRi Xu <xuri.me@gmail.com>\nRicardo N Feliciano <FelicianoTech@gmail.com>\nRich Horwood <rjhorwood@apple.com>\nRich Moyse <rich@moyse.us>\nRich Seymour <rseymour@gmail.com>\nRichard Burnison <rburnison@ebay.com>\nRichard Hansen <rhansen@rhansen.org>\nRichard Harvey <richard@squarecows.com>\nRichard Mathie <richard.mathie@amey.co.uk>\nRichard Metzler <richard@paadee.com>\nRichard Scothern <richard.scothern@gmail.com>\nRicho Healey <richo@psych0tik.net>\nRick Bradley <rick@users.noreply.github.com>\nRick van de Loo <rickvandeloo@gmail.com>\nRick Wieman <git@rickw.nl>\nRik Nijessen <rik@keefo.nl>\nRiku Voipio <riku.voipio@linaro.org>\nRiley Guerin <rileytg.dev@gmail.com>\nRitesh H Shukla <sritesh@vmware.com>\nRiyaz Faizullabhoy <riyaz.faizullabhoy@docker.com>\nRob Cowsill <42620235+rcowsill@users.noreply.github.com>\nRob Gulewich <rgulewich@netflix.com>\nRob Murray <rob.murray@docker.com>\nRob Vesse <rvesse@dotnetrdf.org>\nRobert Bachmann <rb@robertbachmann.at>\nRobert Bittle <guywithnose@gmail.com>\nRobert Obryk <robryk@gmail.com>\nRobert Schneider <mail@shakeme.info>\nRobert Shade <robert.shade@gmail.com>\nRobert Stern <lexandro2000@gmail.com>\nRobert Terhaar <rterhaar@atlanticdynamic.com>\nRobert Wallis <smilingrob@gmail.com>\nRobert Wang <robert@arctic.tw>\nRoberto G. Hashioka <roberto.hashioka@docker.com>\nRoberto Muñoz Fernández <robertomf@gmail.com>\nRobin Naundorf <r.naundorf@fh-muenster.de>\nRobin Schneider <ypid@riseup.net>\nRobin Speekenbrink <robin@kingsquare.nl>\nRobin Thoni <robin@rthoni.com>\nrobpc <rpcann@gmail.com>\nRodolfo Carvalho <rhcarvalho@gmail.com>\nRodrigo Campos <rodrigo@kinvolk.io>\nRodrigo Vaz <rodrigo.vaz@gmail.com>\nRoel Van Nyen <roel.vannyen@gmail.com>\nRoger Peppe <rogpeppe@gmail.com>\nRohit Jnagal <jnagal@google.com>\nRohit Kadam <rohit.d.kadam@gmail.com>\nRohit Kapur <rkapur@flatiron.com>\nRojin George <rojingeorge@huawei.com>\nRoland Huß <roland@jolokia.org>\nRoland Kammerer <roland.kammerer@linbit.com>\nRoland Moriz <rmoriz@users.noreply.github.com>\nRoma Sokolov <sokolov.r.v@gmail.com>\nRoman Dudin <katrmr@gmail.com>\nRoman Mazur <roman@balena.io>\nRoman Strashkin <roman.strashkin@gmail.com>\nRoman Volosatovs <roman.volosatovs@docker.com>\nRoman Zabaluev <gpg@haarolean.dev>\nRon Smits <ron.smits@gmail.com>\nRon Williams <ron.a.williams@gmail.com>\nRong Gao <gaoronggood@163.com>\nRong Zhang <rongzhang@alauda.io>\nRongxiang Song <tinysong1226@gmail.com>\nRony Weng <ronyweng@synology.com>\nroot <docker-dummy@example.com>\nroot <root@lxdebmas.marist.edu>\nroot <root@ubuntu-14.04-amd64-vbox>\nroot <root@webm215.cluster016.ha.ovh.net>\nRory Hunter <roryhunter2@gmail.com>\nRory McCune <raesene@gmail.com>\nRoss Boucher <rboucher@gmail.com>\nRovanion Luckey <rovanion.luckey@gmail.com>\nRoy Reznik <roy@wiz.io>\nRoyce Remer <royceremer@gmail.com>\nRozhnov Alexandr <nox73@ya.ru>\nRudolph Gottesheim <r.gottesheim@loot.at>\nRui Cao <ruicao@alauda.io>\nRui JingAn <quiterace@gmail.com>\nRui Lopes <rgl@ruilopes.com>\nRuilin Li <liruilin4@huawei.com>\nRunshen Zhu <runshen.zhu@gmail.com>\nRuss Magee <rmagee@gmail.com>\nRyan Abrams <rdabrams@gmail.com>\nRyan Anderson <anderson.ryanc@gmail.com>\nRyan Aslett <github@mixologic.com>\nRyan Barry <rbarry@mirantis.com>\nRyan Belgrave <rmb1993@gmail.com>\nRyan Campbell <campbellr@gmail.com>\nRyan Detzel <ryan.detzel@gmail.com>\nRyan Fowler <rwfowler@gmail.com>\nRyan Liu <ryanlyy@me.com>\nRyan McLaughlin <rmclaughlin@insidesales.com>\nRyan O'Donnell <odonnellryanc@gmail.com>\nRyan Seto <ryanseto@yak.net>\nRyan Shea <sheabot03@gmail.com>\nRyan Simmen <ryan.simmen@gmail.com>\nRyan Stelly <ryan.stelly@live.com>\nRyan Thomas <rthomas@atlassian.com>\nRyan Trauntvein <rtrauntvein@novacoast.com>\nRyan Wallner <ryan.wallner@clusterhq.com>\nRyan Zhang <ryan.zhang@docker.com>\nryancooper7 <ryan.cooper7@gmail.com>\nRyanDeng <sheldon.d1018@gmail.com>\nRyo Nakao <nakabonne@gmail.com>\nRyoga Saito <contact@proelbtn.com>\nRégis Behmo <regis@behmo.com>\nRémy Greinhofer <remy.greinhofer@livelovely.com>\ns. rannou <mxs@sbrk.org>\nSabin Basyal <sabin.basyal@gmail.com>\nSachin Joshi <sachin_jayant_joshi@hotmail.com>\nSagar Hani <sagarhani33@gmail.com>\nSainath Grandhi <sainath.grandhi@intel.com>\nSakeven Jiang <jc5930@sina.cn>\nSalahuddin Khan <salah@docker.com>\nSally O'Malley <somalley@redhat.com>\nSam Abed <sam.abed@gmail.com>\nSam Alba <sam.alba@gmail.com>\nSam Bailey <cyprix@cyprix.com.au>\nSam J Sharpe <sam.sharpe@digital.cabinet-office.gov.uk>\nSam Neirinck <sam@samneirinck.com>\nSam Reis <sreis@atlassian.com>\nSam Rijs <srijs@airpost.net>\nSam Thibault <sam.thibault@docker.com>\nSam Whited <sam@samwhited.com>\nSambuddha Basu <sambuddhabasu1@gmail.com>\nSami Wagiaalla <swagiaal@redhat.com>\nSamuel Andaya <samuel@andaya.net>\nSamuel Dion-Girardeau <samuel.diongirardeau@gmail.com>\nSamuel Karp <me@samuelkarp.com>\nSamuel PHAN <samuel-phan@users.noreply.github.com>\nsanchayanghosh <sanchayanghosh@outlook.com>\nSandeep Bansal <sabansal@microsoft.com>\nSankar சங்கர் <sankar.curiosity@gmail.com>\nSanket Saurav <sanketsaurav@gmail.com>\nSanthosh Manohar <santhosh@docker.com>\nsapphiredev <se.imas.kr@gmail.com>\nSargun Dhillon <sargun@netflix.com>\nSascha Andres <sascha.andres@outlook.com>\nSascha Grunert <sgrunert@suse.com>\nSataQiu <qiushida@beyondcent.com>\nSatnam Singh <satnam@raintown.org>\nSatoshi Amemiya <satoshi_amemiya@voyagegroup.com>\nSatoshi Tagomori <tagomoris@gmail.com>\nScott Bessler <scottbessler@gmail.com>\nScott Collier <emailscottcollier@gmail.com>\nScott Johnston <scott@docker.com>\nScott Moser <smoser@brickies.net>\nScott Percival <scottp@lastyard.com>\nScott Stamp <scottstamp851@gmail.com>\nScott Walls <sawalls@umich.edu>\nsdreyesg <sdreyesg@gmail.com>\nSean Christopherson <sean.j.christopherson@intel.com>\nSean Cronin <seancron@gmail.com>\nSean Lee <seanlee@tw.ibm.com>\nSean McIntyre <s.mcintyre@xverba.ca>\nSean OMeara <sean@chef.io>\nSean P. Kane <skane@newrelic.com>\nSean Rodman <srodman7689@gmail.com>\nSebastiaan van Steenis <mail@superseb.nl>\nSebastiaan van Stijn <github@gone.nl>\nSebastian Höffner <sebastian.hoeffner@mevis.fraunhofer.de>\nSebastian Radloff <sradloff23@gmail.com>\nSebastian Thomschke <sebthom@users.noreply.github.com>\nSebastien Goasguen <runseb@gmail.com>\nSenthil Kumar Selvaraj <senthil.thecoder@gmail.com>\nSenthil Kumaran <senthil@uthcode.com>\nSeongJae Park <sj38.park@gmail.com>\nSeongyeol Lim <seongyeol37@gmail.com>\nSerge Hallyn <serge.hallyn@ubuntu.com>\nSergey Alekseev <sergey.alekseev.minsk@gmail.com>\nSergey Evstifeev <sergey.evstifeev@gmail.com>\nSergii Kabashniuk <skabashnyuk@codenvy.com>\nSergio Lopez <slp@redhat.com>\nSerhat Gülçiçek <serhat25@gmail.com>\nSerhii Nakon <serhii.n@thescimus.com>\nSeungUkLee <lsy931106@gmail.com>\nSevki Hasirci <s@sevki.org>\nShane Canon <scanon@lbl.gov>\nShane da Silva <shane@dasilva.io>\nShaun Kaasten <shaunk@gmail.com>\nshaunol <shaunol@gmail.com>\nShawn Landden <shawn@churchofgit.com>\nShawn Siefkas <shawn.siefkas@meredith.com>\nshawnhe <shawnhe@shawnhedeMacBook-Pro.local>\nShayan Pooya <shayan@liveve.org>\nShayne Wang <shaynexwang@gmail.com>\nShekhar Gulati <shekhargulati84@gmail.com>\nSheng Yang <sheng@yasker.org>\nShengbo Song <thomassong@tencent.com>\nShengjing Zhu <zhsj@debian.org>\nShev Yan <yandong_8212@163.com>\nShih-Yuan Lee <fourdollars@gmail.com>\nShihao Xia <charlesxsh@hotmail.com>\nShijiang Wei <mountkin@gmail.com>\nShijun Qin <qinshijun16@mails.ucas.ac.cn>\nShishir Mahajan <shishir.mahajan@redhat.com>\nShoubhik Bose <sbose78@gmail.com>\nShourya Sarcar <shourya.sarcar@gmail.com>\nShu-Wai Chow <shu-wai.chow@seattlechildrens.org>\nshuai-z <zs.broccoli@gmail.com>\nShukui Yang <yangshukui@huawei.com>\nSian Lerk Lau <kiawin@gmail.com>\nSiarhei Rasiukevich <s_rasiukevich@wargaming.net>\nSidhartha Mani <sidharthamn@gmail.com>\nsidharthamani <sid@rancher.com>\nSilas Sewell <silas@sewell.org>\nSilvan Jegen <s.jegen@gmail.com>\nSimão Reis <smnrsti@gmail.com>\nSimon Barendse <simon.barendse@gmail.com>\nSimon Eskildsen <sirup@sirupsen.com>\nSimon Ferquel <simon.ferquel@docker.com>\nSimon Leinen <simon.leinen@gmail.com>\nSimon Menke <simon.menke@gmail.com>\nSimon Taranto <simon.taranto@gmail.com>\nSimon Vikstrom <pullreq@devsn.se>\nSindhu S <sindhus@live.in>\nSjoerd Langkemper <sjoerd-github@linuxonly.nl>\nskanehira <sho19921005@gmail.com>\nSmark Meng <smark@freecoop.net>\nSolganik Alexander <solganik@gmail.com>\nSolomon Hykes <solomon@docker.com>\nSong Gao <song@gao.io>\nSoshi Katsuta <soshi.katsuta@gmail.com>\nSotiris Salloumis <sotiris.salloumis@gmail.com>\nSoulou <leo@unbekandt.eu>\nSpencer Brown <spencer@spencerbrown.org>\nSpencer Smith <robertspencersmith@gmail.com>\nSpike Curtis <spike.curtis@metaswitch.com>\nSridatta Thatipamala <sthatipamala@gmail.com>\nSridhar Ratnakumar <sridharr@activestate.com>\nSrini Brahmaroutu <srbrahma@us.ibm.com>\nSrinivasan Srivatsan <srinivasan.srivatsan@hpe.com>\nStaf Wagemakers <staf@wagemakers.be>\nStanislav Bondarenko <stanislav.bondarenko@gmail.com>\nStanislav Levin <slev@altlinux.org>\nSteeve Morin <steeve.morin@gmail.com>\nStefan Berger <stefanb@linux.vnet.ibm.com>\nStefan Gehrig <stefan.gehrig.hn@googlemail.com>\nStefan J. Wernli <swernli@microsoft.com>\nStefan Praszalowicz <stefan@greplin.com>\nStefan S. <tronicum@user.github.com>\nStefan Scherer <stefan.scherer@docker.com>\nStefan Staudenmeyer <doerte@instana.com>\nStefan Weil <sw@weilnetz.de>\nSteffen Butzer <steffen.butzer@outlook.com>\nStephan Henningsen <stephan-henningsen@users.noreply.github.com>\nStephan Spindler <shutefan@gmail.com>\nStephen Benjamin <stephen@redhat.com>\nStephen Crosby <stevecrozz@gmail.com>\nStephen Day <stevvooe@gmail.com>\nStephen Drake <stephen@xenolith.net>\nStephen Rust <srust@blockbridge.com>\nSteve Desmond <steve@vtsv.ca>\nSteve Dougherty <steve@asksteved.com>\nSteve Durrheimer <s.durrheimer@gmail.com>\nSteve Francia <steve.francia@gmail.com>\nSteve Koch <stevekochscience@gmail.com>\nSteven Burgess <steven.a.burgess@hotmail.com>\nSteven Erenst <stevenerenst@gmail.com>\nSteven Hartland <steven.hartland@multiplay.co.uk>\nSteven Iveson <sjiveson@outlook.com>\nSteven Merrill <steven.merrill@gmail.com>\nSteven Richards <steven@axiomzen.co>\nSteven Taylor <steven.taylor@me.com>\nStéphane Este-Gracias <sestegra@gmail.com>\nStig Larsson <stig@larsson.dev>\nSu Wang <su.wang@docker.com>\nSubhajit Ghosh <isubuz.g@gmail.com>\nSujith Haridasan <sujith.h@gmail.com>\nSun Gengze <690388648@qq.com>\nSun Jianbo <wonderflow.sun@gmail.com>\nSune Keller <sune.keller@gmail.com>\nSunny Gogoi <indiasuny000@gmail.com>\nSuryakumar Sudar <surya.trunks@gmail.com>\nSven Dowideit <SvenDowideit@home.org.au>\nSwapnil Daingade <swapnil.daingade@gmail.com>\nSylvain Baubeau <lebauce@gmail.com>\nSylvain Bellemare <sylvain@ascribe.io>\nSébastien <sebastien@yoozio.com>\nSébastien HOUZÉ <cto@verylastroom.com>\nSébastien Luttringer <seblu@seblu.net>\nSébastien Stormacq <sebsto@users.noreply.github.com>\nSören Tempel <soeren+git@soeren-tempel.net>\nTabakhase <mail@tabakhase.com>\nTadej Janež <tadej.j@nez.si>\nTakuto Sato <tockn.jp@gmail.com>\ntang0th <tang0th@gmx.com>\nTangi Colin <tangicolin@gmail.com>\nTatsuki Sugiura <sugi@nemui.org>\nTatsushi Inagaki <e29253@jp.ibm.com>\nTaylan Isikdemir <taylani@google.com>\nTaylor Jones <monitorjbl@gmail.com>\nTed M. Young <tedyoung@gmail.com>\nTehmasp Chaudhri <tehmasp@gmail.com>\nTejaswini Duggaraju <naduggar@microsoft.com>\nTejesh Mehta <tejesh.mehta@gmail.com>\nTerry Chu <zue.hterry@gmail.com>\nterryding77 <550147740@qq.com>\nThatcher Peskens <thatcher@docker.com>\ntheadactyl <thea.lamkin@gmail.com>\nThell 'Bo' Fowler <thell@tbfowler.name>\nThermionix <bond711@gmail.com>\nThiago Alves Silva <thiago.alves@aurea.com>\nThijs Terlouw <thijsterlouw@gmail.com>\nThomas Bikeev <thomas.bikeev@mac.com>\nThomas Frössman <thomasf@jossystem.se>\nThomas Gazagnaire <thomas@gazagnaire.org>\nThomas Graf <tgraf@suug.ch>\nThomas Grainger <tagrain@gmail.com>\nThomas Hansen <thomas.hansen@gmail.com>\nThomas Ledos <thomas.ledos92@gmail.com>\nThomas Leonard <thomas.leonard@docker.com>\nThomas Léveil <thomasleveil@gmail.com>\nThomas Orozco <thomas@orozco.fr>\nThomas Riccardi <riccardi@systran.fr>\nThomas Schroeter <thomas@cliqz.com>\nThomas Sjögren <konstruktoid@users.noreply.github.com>\nThomas Swift <tgs242@gmail.com>\nThomas Tanaka <thomas.tanaka@oracle.com>\nThomas Texier <sharkone@en-mousse.org>\nTi Zhou <tizhou1986@gmail.com>\nTiago Seabra <tlgs@users.noreply.github.com>\nTianon Gravi <admwiggin@gmail.com>\nTianyi Wang <capkurmagati@gmail.com>\nTibor Vass <teabee89@gmail.com>\nTiffany Jernigan <tiffany.f.j@gmail.com>\nTiffany Low <tiffany@box.com>\nTill Claassen <pixelistik@users.noreply.github.com>\nTill Wegmüller <toasterson@gmail.com>\nTim <elatllat@gmail.com>\nTim Bart <tim@fewagainstmany.com>\nTim Bosse <taim@bosboot.org>\nTim Dettrick <t.dettrick@uq.edu.au>\nTim Düsterhus <tim@bastelstu.be>\nTim Hockin <thockin@google.com>\nTim Potter <tpot@hpe.com>\nTim Ruffles <oi@truffles.me.uk>\nTim Smith <timbot@google.com>\nTim Terhorst <mynamewastaken+git@gmail.com>\nTim Wagner <tim.wagner@freenet.ag>\nTim Wang <timwangdev@gmail.com>\nTim Waugh <twaugh@redhat.com>\nTim Wraight <tim.wraight@tangentlabs.co.uk>\nTim Zju <21651152@zju.edu.cn>\ntimchenxiaoyu <837829664@qq.com>\ntimfeirg <kkcocogogo@gmail.com>\nTimo Rothenpieler <timo@rothenpieler.org>\nTimothy Hobbs <timothyhobbs@seznam.cz>\ntjwebb123 <tjwebb123@users.noreply.github.com>\ntobe <tobegit3hub@gmail.com>\nTobias Bieniek <Tobias.Bieniek@gmx.de>\nTobias Bradtke <webwurst@gmail.com>\nTobias Gesellchen <tobias@gesellix.de>\nTobias Klauser <tklauser@distanz.ch>\nTobias Munk <schmunk@usrbin.de>\nTobias Pfandzelter <tobias@pfandzelter.com>\nTobias Schmidt <ts@soundcloud.com>\nTobias Schwab <tobias.schwab@dynport.de>\nTodd Crane <todd@toddcrane.com>\nTodd Lunter <tlunter@gmail.com>\nTodd Whiteman <todd.whiteman@joyent.com>\nToli Kuznets <toli@docker.com>\nTom Barlow <tomwbarlow@gmail.com>\nTom Booth <tombooth@gmail.com>\nTom Denham <tom@tomdee.co.uk>\nTom Fotherby <tom+github@peopleperhour.com>\nTom Howe <tom.howe@enstratius.com>\nTom Hulihan <hulihan.tom159@gmail.com>\nTom Maaswinkel <tom.maaswinkel@12wiki.eu>\nTom Parker <palfrey@tevp.net>\nTom Sweeney <tsweeney@redhat.com>\nTom Wilkie <tom.wilkie@gmail.com>\nTom X. Tobin <tomxtobin@tomxtobin.com>\nTom Zhao <zlwangel@gmail.com>\nTomas Janousek <tomi@nomi.cz>\nTomas Kral <tomas.kral@gmail.com>\nTomas Tomecek <ttomecek@redhat.com>\nTomasz Kopczynski <tomek@kopczynski.net.pl>\nTomasz Lipinski <tlipinski@users.noreply.github.com>\nTomasz Nurkiewicz <nurkiewicz@gmail.com>\nTomek Mańko <tomek.manko@railgun-solutions.com>\nTommaso Visconti <tommaso.visconti@gmail.com>\nTomoya Tabuchi <t@tomoyat1.com>\nTomáš Hrčka <thrcka@redhat.com>\nTomáš Virtus <nechtom@gmail.com>\ntonic <tonicbupt@gmail.com>\nTonny Xu <tonny.xu@gmail.com>\nTony Abboud <tdabboud@hotmail.com>\nTony Daws <tony@daws.ca>\nTony Miller <mcfiredrill@gmail.com>\ntoogley <toogley@mailbox.org>\nTorstein Husebø <torstein@huseboe.net>\nToshiaki Makita <makita.toshiaki@lab.ntt.co.jp>\nTõnis Tiigi <tonistiigi@gmail.com>\nTrace Andreason <tandreason@gmail.com>\ntracylihui <793912329@qq.com>\nTrapier Marshall <tmarshall@mirantis.com>\nTravis Cline <travis.cline@gmail.com>\nTravis Thieman <travis.thieman@gmail.com>\nTrent Ogren <tedwardo2@gmail.com>\nTrevor <trevinwoodstock@gmail.com>\nTrevor Pounds <trevor.pounds@gmail.com>\nTrevor Sullivan <pcgeek86@gmail.com>\nTrishna Guha <trishnaguha17@gmail.com>\nTristan Carel <tristan@cogniteev.com>\nTroy Denton <trdenton@gmail.com>\nTudor Brindus <me@tbrindus.ca>\nTy Alexander <ty.alexander@sendgrid.com>\nTycho Andersen <tycho@docker.com>\nTyler Brock <tyler.brock@gmail.com>\nTyler Brown <tylers.pile@gmail.com>\nTzu-Jung Lee <roylee17@gmail.com>\nuhayate <uhayate.gong@daocloud.io>\nUlysse Carion <ulyssecarion@gmail.com>\nUmesh Yadav <umesh4257@gmail.com>\nUtz Bacher <utz.bacher@de.ibm.com>\nvagrant <vagrant@ubuntu-14.04-amd64-vbox>\nVaidas Jablonskis <jablonskis@gmail.com>\nValentin Kulesh <valentin.kulesh@virtuozzo.com>\nvanderliang <lansheng@meili-inc.com>\nVelko Ivanov <vivanov@deeperplane.com>\nVeres Lajos <vlajos@gmail.com>\nVictor Algaze <valgaze@gmail.com>\nVictor Coisne <victor.coisne@dotcloud.com>\nVictor Costan <costan@gmail.com>\nVictor I. Wood <viw@t2am.com>\nVictor Lyuboslavsky <victor@victoreda.com>\nVictor Marmol <vmarmol@google.com>\nVictor Palma <palma.victor@gmail.com>\nVictor Toni <victor.toni@gmail.com>\nVictor Vieux <victor.vieux@docker.com>\nVictoria Bialas <victoria.bialas@docker.com>\nVijaya Kumar K <vijayak@caviumnetworks.com>\nVikas Choudhary <choudharyvikas16@gmail.com>\nVikram bir Singh <vsingh@mirantis.com>\nViktor Stanchev <me@viktorstanchev.com>\nViktor Vojnovski <viktor.vojnovski@amadeus.com>\nVinayRaghavanKS <raghavan.vinay@gmail.com>\nVincent Batts <vbatts@redhat.com>\nVincent Bernat <vincent@bernat.ch>\nVincent Boulineau <vincent.boulineau@datadoghq.com>\nVincent Demeester <vincent.demeester@docker.com>\nVincent Giersch <vincent.giersch@ovh.net>\nVincent Mayers <vincent.mayers@inbloom.org>\nVincent Woo <me@vincentwoo.com>\nVinod Kulkarni <vinod.kulkarni@gmail.com>\nVishal Doshi <vishal.doshi@gmail.com>\nVishnu Kannan <vishnuk@google.com>\nVitaly Ostrosablin <vostrosablin@virtuozzo.com>\nVitor Anjos <bartier@users.noreply.github.com>\nVitor Monteiro <vmrmonteiro@gmail.com>\nVivek Agarwal <me@vivek.im>\nVivek Dasgupta <vdasgupt@redhat.com>\nVivek Goyal <vgoyal@redhat.com>\nVladimir Bulyga <xx@ccxx.cc>\nVladimir Kirillov <proger@wilab.org.ua>\nVladimir Pouzanov <farcaller@google.com>\nVladimir Rutsky <altsysrq@gmail.com>\nVladimir Varankin <nek.narqo+git@gmail.com>\nVladimirAus <v_roudakov@yahoo.com>\nVladislav Kolesnikov <vkolesnikov@beget.ru>\nVlastimil Zeman <vlastimil.zeman@diffblue.com>\nVojtech Vitek (V-Teq) <vvitek@redhat.com>\nvoloder <110066198+voloder@users.noreply.github.com>\nWalter Leibbrandt <github@wrl.co.za>\nWalter Stanish <walter@pratyeka.org>\nWang Chao <chao.wang@ucloud.cn>\nWang Guoliang <liangcszzu@163.com>\nWang Jie <wangjie5@chinaskycloud.com>\nWang Long <long.wanglong@huawei.com>\nWang Ping <present.wp@icloud.com>\nWang Xing <hzwangxing@corp.netease.com>\nWang Yuexiao <wang.yuexiao@zte.com.cn>\nWang Yumu <37442693@qq.com>\nwanghuaiqing <wanghuaiqing@loongson.cn>\nWard Vandewege <ward@jhvc.com>\nWarheadsSE <max@warheads.net>\nWassim Dhif <wassimdhif@gmail.com>\nWataru Ishida <ishida.wataru@lab.ntt.co.jp>\nWayne Chang <wayne@neverfear.org>\nWayne Song <wsong@docker.com>\nweebney <weebney@gmail.com>\nWeerasak Chongnguluam <singpor@gmail.com>\nWei Fu <fuweid89@gmail.com>\nWei Wu <wuwei4455@gmail.com>\nWei-Ting Kuo <waitingkuo0527@gmail.com>\nweipeng <weipeng@tuscloud.io>\nweiyan <weiyan3@huawei.com>\nWeiyang Zhu <cnresonant@gmail.com>\nWen Cheng Ma <wenchma@cn.ibm.com>\nWendel Fleming <wfleming@usc.edu>\nWenjun Tang <tangwj2@lenovo.com>\nWenkai Yin <yinw@vmware.com>\nwenlxie <wenlxie@ebay.com>\nWenxuan Zhao <viz@linux.com>\nWenyu You <21551128@zju.edu.cn>\nWenzhi Liang <wenzhi.liang@gmail.com>\nWes Morgan <cap10morgan@gmail.com>\nWesley Pettit <wppttt@amazon.com>\nWewang Xiaorenfine <wang.xiaoren@zte.com.cn>\nWiktor Kwapisiewicz <wiktor@metacode.biz>\nWill Dietz <w@wdtz.org>\nWill Rouesnel <w.rouesnel@gmail.com>\nWill Weaver <monkey@buildingbananas.com>\nwillhf <willhf@gmail.com>\nWilliam Delanoue <william.delanoue@gmail.com>\nWilliam Henry <whenry@redhat.com>\nWilliam Hubbs <w.d.hubbs@gmail.com>\nWilliam Martin <wmartin@pivotal.io>\nWilliam Riancho <wr.wllm@gmail.com>\nWilliam Thurston <thurstw@amazon.com>\nWilson Júnior <wilsonpjunior@gmail.com>\nWing-Kam Wong <wingkwong.code@gmail.com>\nWiseTrem <shepelyov.g@gmail.com>\nWolfgang Nagele <mail@wnagele.com>\nWolfgang Powisch <powo@powo.priv.at>\nWonjun Kim <wonjun.kim@navercorp.com>\nWuLonghui <wlh6666@qq.com>\nxamyzhao <x.amy.zhao@gmail.com>\nXia Wu <xwumzn@amazon.com>\nXian Chaobo <xianchaobo@huawei.com>\nXianglin Gao <xlgao@zju.edu.cn>\nXianjie <guxianjie@gmail.com>\nXianlu Bird <xianlubird@gmail.com>\nXiao YongBiao <xyb4638@gmail.com>\nXiao Zhang <xiaozhang0210@hotmail.com>\nXiaoBing Jiang <s7v7nislands@gmail.com>\nXiaodong Liu <liuxiaodong@loongson.cn>\nXiaodong Zhang <a4012017@sina.com>\nXiaohua Ding <xiao_hua_ding@sina.cn>\nXiaoxi He <xxhe@alauda.io>\nXiaoxu Chen <chenxiaoxu14@otcaix.iscas.ac.cn>\nXiaoyu Zhang <zhang.xiaoyu33@zte.com.cn>\nxichengliudui <1693291525@qq.com>\nxiekeyang <xiekeyang@huawei.com>\nXimo Guanter Gonzálbez <joaquin.guantergonzalbez@telefonica.com>\nxin.li <xin.li@daocloud.io>\nXinbo Weng <xihuanbo_0521@zju.edu.cn>\nXinfeng Liu <XinfengLiu@icloud.com>\nXinzi Zhou <imdreamrunner@gmail.com>\nXiuming Chen <cc@cxm.cc>\nXuecong Liao <satorulogic@gmail.com>\nxuzhaokui <cynicholas@gmail.com>\nYadnyawalkya Tale <ytale@redhat.com>\nYahya <ya7yaz@gmail.com>\nyalpul <yalpul@gmail.com>\nYAMADA Tsuyoshi <tyamada@minimum2scp.org>\nYamasaki Masahide <masahide.y@gmail.com>\nYamazaki Masashi <masi19bw@gmail.com>\nYan Feng <yanfeng2@huawei.com>\nYan Zhu <yanzhu@alauda.io>\nYang Bai <hamo.by@gmail.com>\nYang Li <idealhack@gmail.com>\nYang Pengfei <yangpengfei4@huawei.com>\nyangchenliang <yangchenliang@huawei.com>\nYann Autissier <yann.autissier@gmail.com>\nYanqiang Miao <miao.yanqiang@zte.com.cn>\nYao Zaiyong <yaozaiyong@hotmail.com>\nYash Murty <yashmurty@gmail.com>\nYassine Tijani <yasstij11@gmail.com>\nYasunori Mahata <nori@mahata.net>\nYazhong Liu <yorkiefixer@gmail.com>\nYestin Sun <sunyi0804@gmail.com>\nYi EungJun <eungjun.yi@navercorp.com>\nYibai Zhang <xm1994@gmail.com>\nYihang Ho <hoyihang5@gmail.com>\nYing Li <ying.li@docker.com>\nYohei Ueda <yohei@jp.ibm.com>\nYong Tang <yong.tang.github@outlook.com>\nYongxin Li <yxli@alauda.io>\nYongzhi Pan <panyongzhi@gmail.com>\nYosef Fertel <yfertel@gmail.com>\nYou-Sheng Yang (楊有勝) <vicamo@gmail.com>\nyoucai <omegacoleman@gmail.com>\nYoucef YEKHLEF <yyekhlef@gmail.com>\nYoufu Zhang <zhangyoufu@gmail.com>\nYu Changchun <yuchangchun1@huawei.com>\nYu Chengxia <yuchengxia@huawei.com>\nYu Peng <yu.peng36@zte.com.cn>\nYu-Ju Hong <yjhong@google.com>\nYuan Sun <sunyuan3@huawei.com>\nYuanhong Peng <pengyuanhong@huawei.com>\nYue Zhang <zy675793960@yeah.net>\nYufei Xiong <yufei.xiong@qq.com>\nYuhao Fang <fangyuhao@gmail.com>\nYuichiro Kaneko <spiketeika@gmail.com>\nYujiOshima <yuji.oshima0x3fd@gmail.com>\nYunxiang Huang <hyxqshk@vip.qq.com>\nYurii Rashkovskii <yrashk@gmail.com>\nYusuf Tarık Günaydın <yusuf_tarik@hotmail.com>\nYves Blusseau <90z7oey02@sneakemail.com>\nYves Junqueira <yves.junqueira@gmail.com>\nZac Dover <zdover@redhat.com>\nZach Borboa <zachborboa@gmail.com>\nZach Gershman <zachgersh@gmail.com>\nZachary Jaffee <zjaffee@us.ibm.com>\nZain Memon <zain@inzain.net>\nZaiste! <oh@zaiste.net>\nZane DeGraffenried <zane.deg@gmail.com>\nZefan Li <lizefan@huawei.com>\nZen Lin(Zhinan Lin) <linzhinan@huawei.com>\nZhang Kun <zkazure@gmail.com>\nZhang Wei <zhangwei555@huawei.com>\nZhang Wentao <zhangwentao234@huawei.com>\nzhangguanzhang <zhangguanzhang@qq.com>\nZhangHang <stevezhang2014@gmail.com>\nzhangxianwei <xianwei.zw@alibaba-inc.com>\nZhenan Ye <21551168@zju.edu.cn>\nzhenghenghuo <zhenghenghuo@zju.edu.cn>\nZhenhai Gao <gaozh1988@live.com>\nZhenkun Bi <bi.zhenkun@zte.com.cn>\nZhiPeng Lu <lu.zhipeng@zte.com.cn>\nzhipengzuo <zuozhipeng@baidu.com>\nZhou Hao <zhouhao@cn.fujitsu.com>\nZhoulin Xie <zhoulin.xie@daocloud.io>\nZhu Guihua <zhugh.fnst@cn.fujitsu.com>\nZhu Kunjia <zhu.kunjia@zte.com.cn>\nZhuoyun Wei <wzyboy@wzyboy.org>\nZiheng Liu <lzhfromustc@gmail.com>\nZilin Du <zilin.du@gmail.com>\nzimbatm <zimbatm@zimbatm.com>\nZiming Dong <bnudzm@foxmail.com>\nZJUshuaizhou <21551191@zju.edu.cn>\nzmarouf <zeid.marouf@gmail.com>\nZoltan Tombol <zoltan.tombol@gmail.com>\nZou Yu <zouyu7@huawei.com>\nzqh <zqhxuyuan@gmail.com>\nZuhayr Elahi <zuhayr.elahi@docker.com>\nZunayed Ali <zunayed@gmail.com>\nÁlvaro Lázaro <alvaro.lazaro.g@gmail.com>\nÁtila Camurça Alves <camurca.home@gmail.com>\n吴小白 <296015668@qq.com>\n尹吉峰 <jifeng.yin@gmail.com>\n屈骏 <qujun@tiduyun.com>\n徐俊杰 <paco.xu@daocloud.io>\n慕陶 <jihui.xjh@alibaba-inc.com>\n搏通 <yufeng.pyf@alibaba-inc.com>\n黄艳红00139573 <huang.yanhong@zte.com.cn>\n정재영 <jjy600901@gmail.com>\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 18.6826171875,
          "content": "# Contribute to the Moby Project\n\nWant to hack on the Moby Project? Awesome! We have a contributor's guide that explains\n[setting up a development environment and the contribution\nprocess](docs/contributing/). \n\n[![Contributors guide](docs/static_files/contributors.png)](https://docs.docker.com/opensource/project/who-written-for/)\n\nThis page contains information about reporting issues as well as some tips and\nguidelines useful to experienced open source contributors. Finally, make sure\nyou read our [community guidelines](#moby-community-guidelines) before you\nstart participating.\n\n## Topics\n\n* [Reporting Security Issues](#reporting-security-issues)\n* [Design and Cleanup Proposals](#design-and-cleanup-proposals)\n* [Reporting Issues](#reporting-other-issues)\n* [Quick Contribution Tips and Guidelines](#quick-contribution-tips-and-guidelines)\n* [Community Guidelines](#moby-community-guidelines)\n\n## Reporting security issues\n\nThe Moby maintainers take security seriously. If you discover a security\nissue, please bring it to their attention right away!\n\nPlease **DO NOT** file a public issue, instead send your report privately to\n[security@docker.com](mailto:security@docker.com).\n\nSecurity reports are greatly appreciated and we will publicly thank you for it,\nalthough we keep your name confidential if you request it. We also like to send\ngifts&mdash;if you're into schwag, make sure to let us know. We currently do not\noffer a paid security bounty program, but are not ruling it out in the future.\n\n\n## Reporting other issues\n\nA great way to contribute to the project is to send a detailed report when you\nencounter an issue. We always appreciate a well-written, thorough bug report,\nand will thank you for it!\n\nCheck that [our issue database](https://github.com/moby/moby/issues)\ndoesn't already include that problem or suggestion before submitting an issue.\nIf you find a match, you can use the \"subscribe\" button to get notified on\nupdates. Do *not* leave random \"+1\" or \"I have this too\" comments, as they\nonly clutter the discussion, and don't help resolving it. However, if you\nhave ways to reproduce the issue or have additional information that may help\nresolving the issue, please leave a comment.\n\nWhen reporting issues, always include:\n\n* The output of `docker version`.\n* The output of `docker info`.\n\nAlso include the steps required to reproduce the problem if possible and\napplicable. This information will help us review and fix your issue faster.\nWhen sending lengthy log-files, consider posting them as a gist (https://gist.github.com).\nDon't forget to remove sensitive data from your logfiles before posting (you can\nreplace those parts with \"REDACTED\").\n\n## Quick contribution tips and guidelines\n\nThis section gives the experienced contributor some tips and guidelines.\n\n### Pull requests are always welcome\n\nNot sure if that typo is worth a pull request? Found a bug and know how to fix\nit? Do it! We will appreciate it. Any significant improvement should be\ndocumented as [a GitHub issue](https://github.com/moby/moby/issues) before\nanybody starts working on it.\n\nWe are always thrilled to receive pull requests. We do our best to process them\nquickly. If your pull request is not accepted on the first try,\ndon't get discouraged! Our contributor's guide explains [the review process we\nuse for simple changes](https://docs.docker.com/contribute/overview/).\n\n### Design and cleanup proposals\n\nYou can propose new designs for existing Docker features. You can also design\nentirely new features. We really appreciate contributors who want to refactor or\notherwise cleanup our project. For information on making these types of\ncontributions, see [the advanced contribution\nsection](https://docs.docker.com/opensource/workflow/advanced-contributing/) in\nthe contributors guide.\n\n### Connect with other Moby Project contributors\n\n<table class=\"tg\">\n  <col width=\"45%\">\n  <col width=\"65%\">\n  <tr>\n    <td>Forums</td>\n    <td>\n      A public forum for users to discuss questions and explore current design patterns and\n      best practices about all the Moby projects. To participate, log in with your Github\n      account or create an account at <a href=\"https://forums.mobyproject.org\" target=\"_blank\">https://forums.mobyproject.org</a>.\n    </td>\n  </tr>\n  <tr>\n    <td>Slack</td>\n    <td>\n      <p>\n        Register for the Docker Community Slack at\n\t<a href=\"https://dockr.ly/comm-slack\" target=\"_blank\">https://dockr.ly/comm-slack</a>.\n        We use the #moby-project channel for general discussion, and there are separate channels for other Moby projects such as #containerd.\n      </p>\n    </td>\n  </tr>\n  <tr>\n    <td>Twitter</td>\n    <td>\n      You can follow <a href=\"https://twitter.com/moby/\" target=\"_blank\">Moby Project Twitter feed</a>\n      to get updates on our products. You can also tweet us questions or just\n      share blogs or stories.\n    </td>\n  </tr>\n</table>\n\n\n### Conventions\n\nFork the repository and make changes on your fork in a feature branch:\n\n- If it's a bug fix branch, name it XXXX-something where XXXX is the number of\n\tthe issue. \n- If it's a feature branch, create an enhancement issue to announce\n\tyour intentions, and name it XXXX-something where XXXX is the number of the\n\tissue.\n\nSubmit tests for your changes. See [TESTING.md](./TESTING.md) for details.\n\nIf your changes need integration tests, write them against the API. The `cli`\nintegration tests are slowly either migrated to API tests or moved away as unit\ntests in `docker/cli` and end-to-end tests for Docker.\n\nUpdate the documentation when creating or modifying features. Test your\ndocumentation changes for clarity, concision, and correctness, as well as a\nclean documentation build. See our contributors guide for [our style\nguide](https://docs.docker.com/opensource/doc-style) and instructions on [building\nthe documentation](https://docs.docker.com/opensource/project/test-and-docs/#build-and-test-the-documentation).\n\nWrite clean code. Universally formatted code promotes ease of writing, reading,\nand maintenance. Always run `gofmt -s -w file.go` on each changed file before\ncommitting your changes. Most editors have plug-ins that do this automatically.\n\nPull request descriptions should be as clear as possible and include a reference\nto all the issues that they address.\n\n### Successful Changes\n\nBefore contributing large or high impact changes, make the effort to coordinate\nwith the maintainers of the project before submitting a pull request. This\nprevents you from doing extra work that may or may not be merged.\n\nLarge PRs that are just submitted without any prior communication are unlikely\nto be successful.\n\nWhile pull requests are the methodology for submitting changes to code, changes\nare much more likely to be accepted if they are accompanied by additional\nengineering work. While we don't define this explicitly, most of these goals\nare accomplished through communication of the design goals and subsequent\nsolutions. Often times, it helps to first state the problem before presenting\nsolutions.\n\nTypically, the best methods of accomplishing this are to submit an issue,\nstating the problem. This issue can include a problem statement and a\nchecklist with requirements. If solutions are proposed, alternatives should be\nlisted and eliminated. Even if the criteria for elimination of a solution is\nfrivolous, say so.\n\nLarger changes typically work best with design documents. These are focused on\nproviding context to the design at the time the feature was conceived and can\ninform future documentation contributions.\n\n### Commit Messages\n\nCommit messages must start with a capitalized and short summary (max. 50 chars)\nwritten in the imperative, followed by an optional, more detailed explanatory\ntext which is separated from the summary by an empty line.\n\nCommit messages should follow best practices, including explaining the context\nof the problem and how it was solved, including in caveats or follow up changes\nrequired. They should tell the story of the change and provide readers\nunderstanding of what led to it.\n\nIf you're lost about what this even means, please see [How to Write a Git\nCommit Message](http://chris.beams.io/posts/git-commit/) for a start.\n\nIn practice, the best approach to maintaining a nice commit message is to\nleverage a `git add -p` and `git commit --amend` to formulate a solid\nchangeset. This allows one to piece together a change, as information becomes\navailable.\n\nIf you squash a series of commits, don't just submit that. Re-write the commit\nmessage, as if the series of commits was a single stroke of brilliance.\n\nThat said, there is no requirement to have a single commit for a PR, as long as\neach commit tells the story. For example, if there is a feature that requires a\npackage, it might make sense to have the package in a separate commit then have\na subsequent commit that uses it.\n\nRemember, you're telling part of the story with the commit message. Don't make\nyour chapter weird.\n\n### Review\n\nCode review comments may be added to your pull request. Discuss, then make the\nsuggested modifications and push additional commits to your feature branch. Post\na comment after pushing. New commits show up in the pull request automatically,\nbut the reviewers are notified only when you comment.\n\nPull requests must be cleanly rebased on top of master without multiple branches\nmixed into the PR.\n\n**Git tip**: If your PR no longer merges cleanly, use `rebase master` in your\nfeature branch to update your pull request rather than `merge master`.\n\nBefore you make a pull request, squash your commits into logical units of work\nusing `git rebase -i` and `git push -f`. A logical unit of work is a consistent\nset of patches that should be reviewed together: for example, upgrading the\nversion of a vendored dependency and taking advantage of its now available new\nfeature constitute two separate units of work. Implementing a new function and\ncalling it in another file constitute a single logical unit of work. The very\nhigh majority of submissions should have a single commit, so if in doubt: squash\ndown to one.\n\nAfter every commit, [make sure the test suite passes](./TESTING.md). Include\ndocumentation changes in the same pull request so that a revert would remove\nall traces of the feature or fix.\n\nInclude an issue reference like `Closes #XXXX` or `Fixes #XXXX` in commits that\nclose an issue. Including references automatically closes the issue on a merge.\n\nPlease do not add yourself to the `AUTHORS` file, as it is regenerated regularly\nfrom the Git history.\n\nPlease see the [Coding Style](#coding-style) for further guidelines.\n\n### Merge approval\n\nMoby maintainers use LGTM (Looks Good To Me) in comments on the code review to\nindicate acceptance, or use the Github review approval feature.\n\nFor an explanation of the review and approval process see the\n[REVIEWING](project/REVIEWING.md) page.\n\n### Sign your work\n\nThe sign-off is a simple line at the end of the explanation for the patch. Your\nsignature certifies that you wrote the patch or otherwise have the right to pass\nit on as an open-source patch. The rules are pretty simple: if you can certify\nthe below (from [developercertificate.org](http://developercertificate.org/)):\n\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n1 Letterman Drive\nSuite D4700\nSan Francisco, CA, 94129\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\nThen you just add a line to every git commit message:\n\n    Signed-off-by: Joe Smith <joe.smith@email.com>\n\nUse your real name (sorry, no pseudonyms or anonymous contributions.)\n\nIf you set your `user.name` and `user.email` git configs, you can sign your\ncommit automatically with `git commit -s`.\n\n### How can I become a maintainer?\n\nThe procedures for adding new maintainers are explained in the \n[/project/GOVERNANCE.md](/project/GOVERNANCE.md)\nfile in this repository.\n\nDon't forget: being a maintainer is a time investment. Make sure you\nwill have time to make yourself available. You don't have to be a\nmaintainer to make a difference on the project!\n\n## Moby community guidelines\n\nWe want to keep the Moby community awesome, growing and collaborative. We need\nyour help to keep it that way. To help with this we've come up with some general\nguidelines for the community as a whole:\n\n* Be nice: Be courteous, respectful and polite to fellow community members:\n  no regional, racial, gender, or other abuse will be tolerated. We like\n  nice people way better than mean ones!\n\n* Encourage diversity and participation: Make everyone in our community feel\n  welcome, regardless of their background and the extent of their\n  contributions, and do everything possible to encourage participation in\n  our community.\n\n* Keep it legal: Basically, don't get us in trouble. Share only content that\n  you own, do not share private or sensitive information, and don't break\n  the law.\n\n* Stay on topic: Make sure that you are posting to the correct channel and\n  avoid off-topic discussions. Remember when you update an issue or respond\n  to an email you are potentially sending to a large number of people. Please\n  consider this before you update. Also remember that nobody likes spam.\n\n* Don't send email to the maintainers: There's no need to send email to the\n  maintainers to ask them to investigate an issue or to take a look at a\n  pull request. Instead of sending an email, GitHub mentions should be\n  used to ping maintainers to review a pull request, a proposal or an\n  issue.\n\nThe open source governance for this repository is handled via the [Moby Technical Steering Committee (TSC)](https://github.com/moby/tsc)\ncharter. For any concerns with the community process regarding technical contributions,\nplease contact the TSC. More information on project governance is available in\nour [project/GOVERNANCE.md](/project/GOVERNANCE.md) document.\n\n### Guideline violations — 3 strikes method\n\nThe point of this section is not to find opportunities to punish people, but we\ndo need a fair way to deal with people who are making our community suck.\n\n1. First occurrence: We'll give you a friendly, but public reminder that the\n   behavior is inappropriate according to our guidelines.\n\n2. Second occurrence: We will send you a private message with a warning that\n   any additional violations will result in removal from the community.\n\n3. Third occurrence: Depending on the violation, we may need to delete or ban\n   your account.\n\n**Notes:**\n\n* Obvious spammers are banned on first occurrence. If we don't do this, we'll\n  have spam all over the place.\n\n* Violations are forgiven after 6 months of good behavior, and we won't hold a\n  grudge.\n\n* People who commit minor infractions will get some education, rather than\n  hammering them in the 3 strikes process.\n\n* The rules apply equally to everyone in the community, no matter how much\n\tyou've contributed.\n\n* Extreme violations of a threatening, abusive, destructive or illegal nature\n\twill be addressed immediately and are not subject to 3 strikes or forgiveness.\n\n* Contact abuse@docker.com to report abuse or appeal violations. In the case of\n\tappeals, we know that mistakes happen, and we'll work with you to come up with a\n\tfair solution if there has been a misunderstanding.\n\n## Coding Style\n\nUnless explicitly stated, we follow all coding guidelines from the Go\ncommunity. While some of these standards may seem arbitrary, they somehow seem\nto result in a solid, consistent codebase.\n\nIt is possible that the code base does not currently comply with these\nguidelines. We are not looking for a massive PR that fixes this, since that\ngoes against the spirit of the guidelines. All new contributions should make a\nbest effort to clean up and make the code base better than they left it.\nObviously, apply your best judgement. Remember, the goal here is to make the\ncode base easier for humans to navigate and understand. Always keep that in\nmind when nudging others to comply.\n\nThe rules:\n\n1. All code should be formatted with `gofmt -s`.\n2. All code should pass the default levels of\n   [`golint`](https://github.com/golang/lint).\n3. All code should follow the guidelines covered in [Effective\n   Go](http://golang.org/doc/effective_go.html) and [Go Code Review\n   Comments](https://github.com/golang/go/wiki/CodeReviewComments).\n4. Comment the code. Tell us the why, the history and the context.\n5. Document _all_ declarations and methods, even private ones. Declare\n   expectations, caveats and anything else that may be important. If a type\n   gets exported, having the comments already there will ensure it's ready.\n6. Variable name length should be proportional to its context and no longer.\n   `noCommaALongVariableNameLikeThisIsNotMoreClearWhenASimpleCommentWouldDo`.\n   In practice, short methods will have short variable names and globals will\n   have longer names.\n7. No underscores in package names. If you need a compound name, step back,\n   and re-examine why you need a compound name. If you still think you need a\n   compound name, lose the underscore.\n8. No utils or helpers packages. If a function is not general enough to\n   warrant its own package, it has not been written generally enough to be a\n   part of a util package. Just leave it unexported and well-documented.\n9. All tests should run with `go test` and outside tooling should not be\n   required. No, we don't need another unit testing framework. Assertion\n   packages are acceptable if they provide _real_ incremental value.\n10. Even though we call these \"rules\" above, they are actually just\n    guidelines. Since you've read all the rules, you now know that.\n\nIf you are having trouble getting into the mood of idiomatic Go, we recommend\nreading through [Effective Go](https://go.dev/doc/effective_go). The\n[Go Blog](https://go.dev/blog/) is also a great resource. Drinking the\nkool-aid is a lot easier than going thirsty.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 27.6279296875,
          "content": "# syntax=docker/dockerfile:1.7\n\nARG GO_VERSION=1.23.4\nARG BASE_DEBIAN_DISTRO=\"bookworm\"\nARG GOLANG_IMAGE=\"golang:${GO_VERSION}-${BASE_DEBIAN_DISTRO}\"\nARG XX_VERSION=1.6.1\n\nARG VPNKIT_VERSION=0.5.0\n\nARG DOCKERCLI_REPOSITORY=\"https://github.com/docker/cli.git\"\nARG DOCKERCLI_VERSION=v27.3.1\n# cli version used for integration-cli tests\nARG DOCKERCLI_INTEGRATION_REPOSITORY=\"https://github.com/docker/cli.git\"\nARG DOCKERCLI_INTEGRATION_VERSION=v17.06.2-ce\nARG BUILDX_VERSION=0.18.0\nARG COMPOSE_VERSION=v2.30.3\n\nARG SYSTEMD=\"false\"\nARG FIREWALLD=\"false\"\nARG DOCKER_STATIC=1\n\n# REGISTRY_VERSION specifies the version of the registry to download from\n# https://hub.docker.com/r/distribution/distribution. This version of\n# the registry is used to test schema 2 manifests. Generally,  the version\n# specified here should match a current release.\nARG REGISTRY_VERSION=3.0.0-rc.1\n\n# delve is currently only supported on linux/amd64 and linux/arm64;\n# https://github.com/go-delve/delve/blob/v1.8.1/pkg/proc/native/support_sentinel.go#L1-L6\nARG DELVE_SUPPORTED=${TARGETPLATFORM#linux/amd64} DELVE_SUPPORTED=${DELVE_SUPPORTED#linux/arm64}\nARG DELVE_SUPPORTED=${DELVE_SUPPORTED:+\"unsupported\"}\nARG DELVE_SUPPORTED=${DELVE_SUPPORTED:-\"supported\"}\n\n# cross compilation helper\nFROM --platform=$BUILDPLATFORM tonistiigi/xx:${XX_VERSION} AS xx\n\n# dummy stage to make sure the image is built for deps that don't support some\n# architectures\nFROM --platform=$BUILDPLATFORM busybox AS build-dummy\nRUN mkdir -p /build\nFROM scratch AS binary-dummy\nCOPY --from=build-dummy /build /build\n\n# base\nFROM --platform=$BUILDPLATFORM ${GOLANG_IMAGE} AS base\nCOPY --from=xx / /\nRUN echo 'Binary::apt::APT::Keep-Downloaded-Packages \"true\";' > /etc/apt/apt.conf.d/keep-cache\nRUN apt-get update && apt-get install --no-install-recommends -y file\nENV GO111MODULE=off\nENV GOTOOLCHAIN=local\n\nFROM base AS criu\nADD --chmod=0644 https://download.opensuse.org/repositories/devel:/tools:/criu/Debian_11/Release.key /etc/apt/trusted.gpg.d/criu.gpg.asc\nRUN --mount=type=cache,sharing=locked,id=moby-criu-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-criu-aptcache,target=/var/cache/apt \\\n        echo 'deb https://download.opensuse.org/repositories/devel:/tools:/criu/Debian_12/ /' > /etc/apt/sources.list.d/criu.list \\\n        && apt-get update \\\n        && apt-get install -y --no-install-recommends criu \\\n        && install -D /usr/sbin/criu /build/criu \\\n        && /build/criu --version\n\n# registry\nFROM base AS registry-src\nWORKDIR /usr/src/registry\nRUN git init . && git remote add origin \"https://github.com/distribution/distribution.git\"\n\nFROM base AS registry\nWORKDIR /go/src/github.com/docker/distribution\n\n# REGISTRY_VERSION_SCHEMA1 specifies the version of the registry to build and\n# install from the https://github.com/docker/distribution repository. This is\n# an older (pre v2.3.0) version of the registry that only supports schema1\n# manifests. This version of the registry is not working on arm64, so installation\n# is skipped on that architecture.\nARG REGISTRY_VERSION_SCHEMA1=v2.1.0\nARG TARGETPLATFORM\nRUN --mount=from=registry-src,src=/usr/src/registry,rw \\\n    --mount=type=cache,target=/root/.cache/go-build,id=registry-build-$TARGETPLATFORM \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    --mount=type=tmpfs,target=/go/src <<EOT\n  set -ex\n  export GOPATH=\"/go/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH\"\n  # Make the /build directory no matter what so that it doesn't fail on arm64 or\n  # any other platform where we don't build this registry\n  mkdir /build\n  case $TARGETPLATFORM in\n    linux/amd64|linux/arm/v7|linux/ppc64le|linux/s390x)\n      git fetch -q --depth 1 origin \"${REGISTRY_VERSION_SCHEMA1}\" +refs/tags/*:refs/tags/*\n      git checkout -q FETCH_HEAD\n      CGO_ENABLED=0 xx-go build -o /build/registry-v2-schema1 -v ./cmd/registry\n      xx-verify /build/registry-v2-schema1\n      ;;\n  esac\nEOT\n\nFROM distribution/distribution:$REGISTRY_VERSION AS registry-v2\nRUN mkdir /build && mv /bin/registry /build/registry-v2\n\n# go-swagger\nFROM base AS swagger-src\nWORKDIR /usr/src/swagger\n# Currently uses a fork from https://github.com/kolyshkin/go-swagger/tree/golang-1.13-fix\n# TODO: move to under moby/ or fix upstream go-swagger to work for us.\nRUN git init . && git remote add origin \"https://github.com/kolyshkin/go-swagger.git\"\n# GO_SWAGGER_COMMIT specifies the version of the go-swagger binary to build and\n# install. Go-swagger is used in CI for validating swagger.yaml in hack/validate/swagger-gen\nARG GO_SWAGGER_COMMIT=c56166c036004ba7a3a321e5951ba472b9ae298c\nRUN git fetch -q --depth 1 origin \"${GO_SWAGGER_COMMIT}\" && git checkout -q FETCH_HEAD\n\nFROM base AS swagger\nWORKDIR /go/src/github.com/go-swagger/go-swagger\nARG TARGETPLATFORM\nRUN --mount=from=swagger-src,src=/usr/src/swagger,rw \\\n    --mount=type=cache,target=/root/.cache/go-build,id=swagger-build-$TARGETPLATFORM \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    --mount=type=tmpfs,target=/go/src/ <<EOT\n  set -e\n  xx-go build -o /build/swagger ./cmd/swagger\n  xx-verify /build/swagger\nEOT\n\n# frozen-images\n# See also frozenImages in \"testutil/environment/protect.go\" (which needs to\n# be updated when adding images to this list)\nFROM debian:${BASE_DEBIAN_DISTRO} AS frozen-images\nRUN --mount=type=cache,sharing=locked,id=moby-frozen-images-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-frozen-images-aptcache,target=/var/cache/apt \\\n       apt-get update && apt-get install -y --no-install-recommends \\\n           ca-certificates \\\n           curl \\\n           jq\n# Get useful and necessary Hub images so we can \"docker load\" locally instead of pulling\nCOPY contrib/download-frozen-image-v2.sh /\nARG TARGETARCH\nARG TARGETVARIANT\nRUN /download-frozen-image-v2.sh /build \\\n        busybox:latest@sha256:95cf004f559831017cdf4628aaf1bb30133677be8702a8c5f2994629f637a209 \\\n        busybox:glibc@sha256:1f81263701cddf6402afe9f33fca0266d9fff379e59b1748f33d3072da71ee85 \\\n        debian:bookworm-slim@sha256:2bc5c236e9b262645a323e9088dfa3bb1ecb16cc75811daf40a23a824d665be9 \\\n        hello-world:latest@sha256:d58e752213a51785838f9eed2b7a498ffa1cb3aa7f946dda11af39286c3db9a9 \\\n        arm32v7/hello-world:latest@sha256:50b8560ad574c779908da71f7ce370c0a2471c098d44d1c8f6b513c5a55eeeb1 \\\n        hello-world:amd64@sha256:90659bf80b44ce6be8234e6ff90a1ac34acbeb826903b02cfa0da11c82cbc042 \\\n        hello-world:arm64@sha256:963612c5503f3f1674f315c67089dee577d8cc6afc18565e0b4183ae355fb343\n\n# delve\nFROM base AS delve-src\nWORKDIR /usr/src/delve\nRUN git init . && git remote add origin \"https://github.com/go-delve/delve.git\"\n# DELVE_VERSION specifies the version of the Delve debugger binary\n# from the https://github.com/go-delve/delve repository.\n# It can be used to run Docker with a possibility of\n# attaching debugger to it.\nARG DELVE_VERSION=v1.23.0\nRUN git fetch -q --depth 1 origin \"${DELVE_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD\n\nFROM base AS delve-supported\nWORKDIR /usr/src/delve\nARG TARGETPLATFORM\nRUN --mount=from=delve-src,src=/usr/src/delve,rw \\\n    --mount=type=cache,target=/root/.cache/go-build,id=delve-build-$TARGETPLATFORM \\\n    --mount=type=cache,target=/go/pkg/mod <<EOT\n  set -e\n  GO111MODULE=on xx-go build -o /build/dlv ./cmd/dlv\n  xx-verify /build/dlv\nEOT\n\nFROM binary-dummy AS delve-unsupported\nFROM delve-${DELVE_SUPPORTED} AS delve\n\nFROM base AS tomll\n# GOTOML_VERSION specifies the version of the tomll binary to build and install\n# from the https://github.com/pelletier/go-toml repository. This binary is used\n# in CI in the hack/validate/toml script.\n#\n# When updating this version, consider updating the github.com/pelletier/go-toml\n# dependency in vendor.mod accordingly.\nARG GOTOML_VERSION=v1.8.1\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n        GOBIN=/build/ GO111MODULE=on go install \"github.com/pelletier/go-toml/cmd/tomll@${GOTOML_VERSION}\" \\\n     && /build/tomll --help\n\nFROM base AS gowinres\n# GOWINRES_VERSION defines go-winres tool version\nARG GOWINRES_VERSION=v0.3.1\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n        GOBIN=/build/ GO111MODULE=on go install \"github.com/tc-hib/go-winres@${GOWINRES_VERSION}\" \\\n     && /build/go-winres --help\n\n# containerd\nFROM base AS containerd-src\nWORKDIR /usr/src/containerd\nRUN git init . && git remote add origin \"https://github.com/containerd/containerd.git\"\n# CONTAINERD_VERSION is used to build containerd binaries, and used for the\n# integration tests. The distributed docker .deb and .rpm packages depend on a\n# separate (containerd.io) package, which may be a different version as is\n# specified here. The containerd golang package is also pinned in vendor.mod.\n# When updating the binary version you may also need to update the vendor\n# version to pick up bug fixes or new APIs, however, usually the Go packages\n# are built from a commit from the master branch.\nARG CONTAINERD_VERSION=v1.7.25\nRUN git fetch -q --depth 1 origin \"${CONTAINERD_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD\n\nFROM base AS containerd-build\nWORKDIR /go/src/github.com/containerd/containerd\nARG TARGETPLATFORM\nRUN --mount=type=cache,sharing=locked,id=moby-containerd-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-containerd-aptcache,target=/var/cache/apt \\\n        apt-get update && xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            pkg-config\nARG DOCKER_STATIC\nRUN --mount=from=containerd-src,src=/usr/src/containerd,rw \\\n    --mount=type=cache,target=/root/.cache/go-build,id=containerd-build-$TARGETPLATFORM <<EOT\n  set -e\n  export CC=$(xx-info)-gcc\n  export CGO_ENABLED=$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"0\" || echo \"1\")\n  xx-go --wrap\n  make $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"STATIC=1\") binaries\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") bin/containerd\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") bin/containerd-shim-runc-v2\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") bin/ctr\n  mkdir /build\n  mv bin/containerd bin/containerd-shim-runc-v2 bin/ctr /build\nEOT\n\nFROM containerd-build AS containerd-linux\nFROM binary-dummy AS containerd-windows\nFROM containerd-${TARGETOS} AS containerd\n\nFROM base AS golangci_lint\nARG GOLANGCI_LINT_VERSION=v1.62.0\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n        GOBIN=/build/ GO111MODULE=on go install \"github.com/golangci/golangci-lint/cmd/golangci-lint@${GOLANGCI_LINT_VERSION}\" \\\n     && /build/golangci-lint --version\n\nFROM base AS gotestsum\nARG GOTESTSUM_VERSION=v1.8.2\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n        GOBIN=/build/ GO111MODULE=on go install \"gotest.tools/gotestsum@${GOTESTSUM_VERSION}\" \\\n     && /build/gotestsum --version\n\nFROM base AS shfmt\nARG SHFMT_VERSION=v3.8.0\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n        GOBIN=/build/ GO111MODULE=on go install \"mvdan.cc/sh/v3/cmd/shfmt@${SHFMT_VERSION}\" \\\n     && /build/shfmt --version\n\nFROM base AS gopls\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n        GOBIN=/build/ GO111MODULE=on go install \"golang.org/x/tools/gopls@latest\" \\\n     && /build/gopls version\n\nFROM base AS dockercli\nWORKDIR /go/src/github.com/docker/cli\nARG DOCKERCLI_REPOSITORY\nARG DOCKERCLI_VERSION\nARG TARGETPLATFORM\nRUN --mount=source=hack/dockerfile/cli.sh,target=/download-or-build-cli.sh \\\n    --mount=type=cache,id=dockercli-git-$TARGETPLATFORM,sharing=locked,target=./.git \\\n    --mount=type=cache,target=/root/.cache/go-build,id=dockercli-build-$TARGETPLATFORM \\\n        rm -f ./.git/*.lock \\\n     && /download-or-build-cli.sh ${DOCKERCLI_VERSION} ${DOCKERCLI_REPOSITORY} /build \\\n     && /build/docker --version\n\nFROM base AS dockercli-integration\nWORKDIR /go/src/github.com/docker/cli\nARG DOCKERCLI_INTEGRATION_REPOSITORY\nARG DOCKERCLI_INTEGRATION_VERSION\nARG TARGETPLATFORM\nRUN --mount=source=hack/dockerfile/cli.sh,target=/download-or-build-cli.sh \\\n    --mount=type=cache,id=dockercli-git-$TARGETPLATFORM,sharing=locked,target=./.git \\\n    --mount=type=cache,target=/root/.cache/go-build,id=dockercli-build-$TARGETPLATFORM \\\n        rm -f ./.git/*.lock \\\n     && /download-or-build-cli.sh ${DOCKERCLI_INTEGRATION_VERSION} ${DOCKERCLI_INTEGRATION_REPOSITORY} /build \\\n     && /build/docker --version\n\n# runc\nFROM base AS runc-src\nWORKDIR /usr/src/runc\nRUN git init . && git remote add origin \"https://github.com/opencontainers/runc.git\"\n# RUNC_VERSION should match the version that is used by the containerd version\n# that is used. If you need to update runc, open a pull request in the containerd\n# project first, and update both after that is merged. When updating RUNC_VERSION,\n# consider updating runc in vendor.mod accordingly.\nARG RUNC_VERSION=v1.2.4\nRUN git fetch -q --depth 1 origin \"${RUNC_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD\n\nFROM base AS runc-build\nWORKDIR /go/src/github.com/opencontainers/runc\nARG TARGETPLATFORM\nRUN --mount=type=cache,sharing=locked,id=moby-runc-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-runc-aptcache,target=/var/cache/apt \\\n        apt-get update && xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            libc6-dev \\\n            libseccomp-dev \\\n            pkg-config\nARG DOCKER_STATIC\nRUN --mount=from=runc-src,src=/usr/src/runc,rw \\\n    --mount=type=cache,target=/root/.cache/go-build,id=runc-build-$TARGETPLATFORM <<EOT\n  set -e\n  xx-go --wrap\n  CGO_ENABLED=1 make \"$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"static\" || echo \"runc\")\"\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") runc\n  mkdir /build\n  mv runc /build/\nEOT\n\nFROM runc-build AS runc-linux\nFROM binary-dummy AS runc-windows\nFROM runc-${TARGETOS} AS runc\n\n# tini\nFROM base AS tini-src\nWORKDIR /usr/src/tini\nRUN git init . && git remote add origin \"https://github.com/krallin/tini.git\"\n# TINI_VERSION specifies the version of tini (docker-init) to build. This\n# binary is used when starting containers with the `--init` option.\nARG TINI_VERSION=v0.19.0\nRUN git fetch -q --depth 1 origin \"${TINI_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD\n\nFROM base AS tini-build\nWORKDIR /go/src/github.com/krallin/tini\nRUN --mount=type=cache,sharing=locked,id=moby-tini-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-tini-aptcache,target=/var/cache/apt \\\n        apt-get update && apt-get install -y --no-install-recommends cmake\nARG TARGETPLATFORM\nRUN --mount=type=cache,sharing=locked,id=moby-tini-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-tini-aptcache,target=/var/cache/apt \\\n        xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            libc6-dev \\\n            pkg-config\nRUN --mount=from=tini-src,src=/usr/src/tini,rw \\\n    --mount=type=cache,target=/root/.cache/go-build,id=tini-build-$TARGETPLATFORM <<EOT\n  set -e\n  CC=$(xx-info)-gcc cmake .\n  make tini-static\n  xx-verify --static tini-static\n  mkdir /build\n  mv tini-static /build/docker-init\nEOT\n\nFROM tini-build AS tini-linux\nFROM binary-dummy AS tini-windows\nFROM tini-${TARGETOS} AS tini\n\n# rootlesskit\nFROM base AS rootlesskit-src\nWORKDIR /usr/src/rootlesskit\nRUN git init . && git remote add origin \"https://github.com/rootless-containers/rootlesskit.git\"\n# When updating, also update vendor.mod and hack/dockerfile/install/rootlesskit.installer accordingly.\nARG ROOTLESSKIT_VERSION=v2.3.1\nRUN git fetch -q --depth 1 origin \"${ROOTLESSKIT_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD\n\nFROM base AS rootlesskit-build\nWORKDIR /go/src/github.com/rootless-containers/rootlesskit\nARG TARGETPLATFORM\nRUN --mount=type=cache,sharing=locked,id=moby-rootlesskit-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-rootlesskit-aptcache,target=/var/cache/apt \\\n        apt-get update && xx-apt-get install -y --no-install-recommends \\\n            gcc \\\n            libc6-dev \\\n            pkg-config\nENV GO111MODULE=on\nARG DOCKER_STATIC\nRUN --mount=from=rootlesskit-src,src=/usr/src/rootlesskit,rw \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    --mount=type=cache,target=/root/.cache/go-build,id=rootlesskit-build-$TARGETPLATFORM <<EOT\n  set -e\n  export CGO_ENABLED=$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"0\" || echo \"1\")\n  xx-go build -o /build/rootlesskit -ldflags=\"$([ \"$DOCKER_STATIC\" != \"1\" ] && echo \"-linkmode=external\")\" ./cmd/rootlesskit\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") /build/rootlesskit\nEOT\nCOPY --link ./contrib/dockerd-rootless.sh /build/\nCOPY --link ./contrib/dockerd-rootless-setuptool.sh /build/\n\nFROM rootlesskit-build AS rootlesskit-linux\nFROM binary-dummy AS rootlesskit-windows\nFROM rootlesskit-${TARGETOS} AS rootlesskit\n\nFROM base AS crun\nARG CRUN_VERSION=1.12\nRUN --mount=type=cache,sharing=locked,id=moby-crun-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-crun-aptcache,target=/var/cache/apt \\\n        apt-get update && apt-get install -y --no-install-recommends \\\n            autoconf \\\n            automake \\\n            build-essential \\\n            libcap-dev \\\n            libprotobuf-c-dev \\\n            libseccomp-dev \\\n            libsystemd-dev \\\n            libtool \\\n            libyajl-dev \\\n            python3 \\\n            ;\nRUN --mount=type=tmpfs,target=/tmp/crun-build \\\n    git clone https://github.com/containers/crun.git /tmp/crun-build && \\\n    cd /tmp/crun-build && \\\n    git checkout -q \"${CRUN_VERSION}\" && \\\n    ./autogen.sh && \\\n    ./configure --bindir=/build && \\\n    make -j install\n\n# vpnkit\n# use dummy scratch stage to avoid build to fail for unsupported platforms\nFROM scratch AS vpnkit-windows\nFROM scratch AS vpnkit-linux-386\nFROM scratch AS vpnkit-linux-arm\nFROM scratch AS vpnkit-linux-ppc64le\nFROM scratch AS vpnkit-linux-riscv64\nFROM scratch AS vpnkit-linux-s390x\nFROM djs55/vpnkit:${VPNKIT_VERSION} AS vpnkit-linux-amd64\nFROM djs55/vpnkit:${VPNKIT_VERSION} AS vpnkit-linux-arm64\nFROM vpnkit-linux-${TARGETARCH} AS vpnkit-linux\nFROM vpnkit-${TARGETOS} AS vpnkit\n\n# containerutility\nFROM base AS containerutil-src\nWORKDIR /usr/src/containerutil\nRUN git init . && git remote add origin \"https://github.com/docker-archive/windows-container-utility.git\"\nARG CONTAINERUTILITY_VERSION=aa1ba87e99b68e0113bd27ec26c60b88f9d4ccd9\nRUN git fetch -q --depth 1 origin \"${CONTAINERUTILITY_VERSION}\" +refs/tags/*:refs/tags/* && git checkout -q FETCH_HEAD\n\nFROM base AS containerutil-build\nWORKDIR /usr/src/containerutil\nARG TARGETPLATFORM\nRUN xx-apt-get install -y --no-install-recommends \\\n        gcc \\\n        g++ \\\n        libc6-dev \\\n        pkg-config\nRUN --mount=from=containerutil-src,src=/usr/src/containerutil,rw \\\n    --mount=type=cache,target=/root/.cache/go-build,id=containerutil-build-$TARGETPLATFORM <<EOT\n  set -e\n  CC=\"$(xx-info)-gcc\" CXX=\"$(xx-info)-g++\" make\n  xx-verify --static containerutility.exe\n  mkdir /build\n  mv containerutility.exe /build/\nEOT\n\nFROM binary-dummy AS containerutil-linux\nFROM containerutil-build AS containerutil-windows-amd64\nFROM containerutil-windows-${TARGETARCH} AS containerutil-windows\nFROM containerutil-${TARGETOS} AS containerutil\nFROM docker/buildx-bin:${BUILDX_VERSION} as buildx\nFROM docker/compose-bin:${COMPOSE_VERSION} as compose\n\nFROM base AS dev-systemd-false\nCOPY --link --from=frozen-images /build/ /docker-frozen-images\nCOPY --link --from=swagger       /build/ /usr/local/bin/\nCOPY --link --from=delve         /build/ /usr/local/bin/\nCOPY --link --from=tomll         /build/ /usr/local/bin/\nCOPY --link --from=gowinres      /build/ /usr/local/bin/\nCOPY --link --from=tini          /build/ /usr/local/bin/\nCOPY --link --from=registry      /build/ /usr/local/bin/\nCOPY --link --from=registry-v2   /build/ /usr/local/bin/\n\n# Skip the CRIU stage for now, as the opensuse package repository is sometimes\n# unstable, and we're currently not using it in CI.\n#\n# FIXME(thaJeztah): re-enable this stage when https://github.com/moby/moby/issues/38963 is resolved (see https://github.com/moby/moby/pull/38984)\n# COPY --link --from=criu          /build/ /usr/local/bin/\nCOPY --link --from=gotestsum     /build/ /usr/local/bin/\nCOPY --link --from=golangci_lint /build/ /usr/local/bin/\nCOPY --link --from=shfmt         /build/ /usr/local/bin/\nCOPY --link --from=runc          /build/ /usr/local/bin/\nCOPY --link --from=containerd    /build/ /usr/local/bin/\nCOPY --link --from=rootlesskit   /build/ /usr/local/bin/\nCOPY --link --from=vpnkit        /       /usr/local/bin/\nCOPY --link --from=containerutil /build/ /usr/local/bin/\nCOPY --link --from=crun          /build/ /usr/local/bin/\nCOPY --link hack/dockerfile/etc/docker/  /etc/docker/\nCOPY --link --from=buildx        /buildx /usr/local/libexec/docker/cli-plugins/docker-buildx\nCOPY --link --from=compose       /docker-compose /usr/libexec/docker/cli-plugins/docker-compose\n\nENV PATH=/usr/local/cli:$PATH\nENV TEST_CLIENT_BINARY=/usr/local/cli-integration/docker\nENV CONTAINERD_ADDRESS=/run/docker/containerd/containerd.sock\nENV CONTAINERD_NAMESPACE=moby\nWORKDIR /go/src/github.com/docker/docker\nVOLUME /var/lib/docker\nVOLUME /home/unprivilegeduser/.local/share/docker\n# Wrap all commands in the \"docker-in-docker\" script to allow nested containers\nENTRYPOINT [\"hack/dind\"]\n\nFROM dev-systemd-false AS dev-systemd-true\nRUN --mount=type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt \\\n        apt-get update && apt-get install -y --no-install-recommends \\\n            dbus \\\n            dbus-user-session \\\n            systemd \\\n            systemd-sysv\nENTRYPOINT [\"hack/dind-systemd\"]\n\nFROM dev-systemd-${SYSTEMD} AS dev-firewalld-false\n\nFROM dev-systemd-true AS dev-firewalld-true\nRUN --mount=type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt \\\n        apt-get update && apt-get install -y --no-install-recommends \\\n            firewalld\nRUN sed -i 's/FirewallBackend=nftables/FirewallBackend=iptables/' /etc/firewalld/firewalld.conf\n\nFROM dev-firewalld-${FIREWALLD} AS dev-base\nRUN groupadd -r docker\nRUN useradd --create-home --gid docker unprivilegeduser \\\n && mkdir -p /home/unprivilegeduser/.local/share/docker \\\n && chown -R unprivilegeduser /home/unprivilegeduser\n# Let us use a .bashrc file\nRUN ln -sfv /go/src/github.com/docker/docker/.bashrc ~/.bashrc\n# Activate bash completion and include Docker's completion if mounted with DOCKER_BASH_COMPLETION_PATH\nRUN echo \"source /usr/share/bash-completion/bash_completion\" >> /etc/bash.bashrc\nRUN ln -s /usr/local/completion/bash/docker /etc/bash_completion.d/docker\nRUN ldconfig\n# Set dev environment as safe git directory to prevent \"dubious ownership\" errors\n# when bind-mounting the source into the dev-container. See https://github.com/moby/moby/pull/44930\nRUN git config --global --add safe.directory $GOPATH/src/github.com/docker/docker\n# This should only install packages that are specifically needed for the dev environment and nothing else\n# Do you really need to add another package here? Can it be done in a different build stage?\nRUN --mount=type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt \\\n        apt-get update && apt-get install -y --no-install-recommends \\\n            apparmor \\\n            bash-completion \\\n            bzip2 \\\n            inetutils-ping \\\n            iproute2 \\\n            iptables \\\n            jq \\\n            libcap2-bin \\\n            libnet1 \\\n            libnl-3-200 \\\n            libprotobuf-c1 \\\n            libyajl2 \\\n            net-tools \\\n            patch \\\n            pigz \\\n            sudo \\\n            systemd-journal-remote \\\n            thin-provisioning-tools \\\n            uidmap \\\n            vim \\\n            vim-common \\\n            xfsprogs \\\n            xz-utils \\\n            zip \\\n            zstd\n# Switch to use iptables instead of nftables (to match the CI hosts)\n# TODO use some kind of runtime auto-detection instead if/when nftables is supported (https://github.com/moby/moby/issues/26824)\nRUN update-alternatives --set iptables  /usr/sbin/iptables-legacy  || true \\\n && update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy || true \\\n && update-alternatives --set arptables /usr/sbin/arptables-legacy || true\nRUN --mount=type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-dev-aptcache,target=/var/cache/apt \\\n        apt-get update && apt-get install --no-install-recommends -y \\\n            gcc \\\n            pkg-config \\\n            libseccomp-dev \\\n            libsystemd-dev \\\n            yamllint\nCOPY --link --from=dockercli             /build/ /usr/local/cli\nCOPY --link --from=dockercli-integration /build/ /usr/local/cli-integration\n\nFROM base AS build\nCOPY --from=gowinres /build/ /usr/local/bin/\nWORKDIR /go/src/github.com/docker/docker\nENV GO111MODULE=off\nENV CGO_ENABLED=1\nRUN --mount=type=cache,sharing=locked,id=moby-build-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-build-aptcache,target=/var/cache/apt \\\n        apt-get update && apt-get install --no-install-recommends -y \\\n            clang \\\n            lld \\\n            llvm\nARG TARGETPLATFORM\nRUN --mount=type=cache,sharing=locked,id=moby-build-aptlib,target=/var/lib/apt \\\n    --mount=type=cache,sharing=locked,id=moby-build-aptcache,target=/var/cache/apt \\\n        xx-apt-get install --no-install-recommends -y \\\n            gcc \\\n            libc6-dev \\\n            libseccomp-dev \\\n            libsystemd-dev \\\n            pkg-config\nARG DOCKER_BUILDTAGS\nARG DOCKER_DEBUG\nARG DOCKER_GITCOMMIT=HEAD\nARG DOCKER_LDFLAGS\nARG DOCKER_STATIC\nARG VERSION\nARG PLATFORM\nARG PRODUCT\nARG DEFAULT_PRODUCT_LICENSE\nARG PACKAGER_NAME\n# PREFIX overrides DEST dir in make.sh script otherwise it fails because of\n# read only mount in current work dir\nENV PREFIX=/tmp\nRUN <<EOT\n  # in bullseye arm64 target does not link with lld so configure it to use ld instead\n  if [ \"$(xx-info arch)\" = \"arm64\" ]; then\n    XX_CC_PREFER_LINKER=ld xx-clang --setup-target-triple\n  fi\nEOT\nRUN --mount=type=bind,target=.,rw \\\n    --mount=type=tmpfs,target=cli/winresources/dockerd \\\n    --mount=type=cache,target=/root/.cache/go-build,id=moby-build-$TARGETPLATFORM <<EOT\n  set -e\n  target=$([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"binary\" || echo \"dynbinary\")\n  xx-go --wrap\n  PKG_CONFIG=$(xx-go env PKG_CONFIG) ./hack/make.sh $target\n  xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") /tmp/bundles/${target}-daemon/dockerd$([ \"$(xx-info os)\" = \"windows\" ] && echo \".exe\")\n  [ \"$(xx-info os)\" != \"linux\" ] || xx-verify $([ \"$DOCKER_STATIC\" = \"1\" ] && echo \"--static\") /tmp/bundles/${target}-daemon/docker-proxy\n  mkdir /build\n  mv /tmp/bundles/${target}-daemon/* /build/\nEOT\n\n# usage:\n# > docker buildx bake binary\n# > DOCKER_STATIC=0 docker buildx bake binary\n# or\n# > make binary\n# > make dynbinary\nFROM scratch AS binary\nCOPY --from=build /build/ /\n\n# usage:\n# > docker buildx bake all\nFROM scratch AS all\nCOPY --link --from=tini          /build/ /\nCOPY --link --from=runc          /build/ /\nCOPY --link --from=containerd    /build/ /\nCOPY --link --from=rootlesskit   /build/ /\nCOPY --link --from=containerutil /build/ /\nCOPY --link --from=vpnkit        /       /\nCOPY --link --from=build         /build  /\n\n# smoke tests\n# usage:\n# > docker buildx bake binary-smoketest\nFROM --platform=$TARGETPLATFORM base AS smoketest\nWORKDIR /usr/local/bin\nCOPY --from=build /build .\nRUN <<EOT\n  set -ex\n  file dockerd\n  dockerd --version\n  file docker-proxy\n  docker-proxy --version\nEOT\n\n# devcontainer is a stage used by .devcontainer/devcontainer.json\nFROM dev-base AS devcontainer\nCOPY --link . .\nCOPY --link --from=gopls         /build/ /usr/local/bin/\n\n# usage:\n# > make shell\n# > SYSTEMD=true make shell\nFROM dev-base AS dev\nCOPY --link . .\n"
        },
        {
          "name": "Dockerfile.simple",
          "type": "blob",
          "size": 1.3955078125,
          "content": "# docker build -t docker:simple -f Dockerfile.simple .\n# docker run --rm docker:simple hack/make.sh dynbinary\n# docker run --rm --privileged docker:simple hack/dind hack/make.sh test-unit\n# docker run --rm --privileged -v /var/lib/docker docker:simple hack/dind hack/make.sh dynbinary test-integration\n\n# This represents the bare minimum required to build and test Docker.\n\nARG GO_VERSION=1.23.4\n\nARG BASE_DEBIAN_DISTRO=\"bookworm\"\nARG GOLANG_IMAGE=\"golang:${GO_VERSION}-${BASE_DEBIAN_DISTRO}\"\n\nFROM ${GOLANG_IMAGE}\nENV GO111MODULE=off\nENV GOTOOLCHAIN=local\n\n# Compile and runtime deps\n# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#build-dependencies\n# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tbuild-essential \\\n\t\tcurl \\\n\t\tcmake \\\n\t\tgit \\\n\t\tlibseccomp-dev \\\n\t\tca-certificates \\\n\t\te2fsprogs \\\n\t\tiptables \\\n\t\tpkg-config \\\n\t\tpigz \\\n\t\tprocps \\\n\t\txfsprogs \\\n\t\txz-utils \\\n\t\t\\\n\t\tvim-common \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# Install runc, containerd, tini and docker-proxy\n# Please edit hack/dockerfile/install/<name>.installer to update them.\nCOPY hack/dockerfile/install hack/dockerfile/install\nRUN for i in runc containerd tini proxy dockercli; \\\n\t\tdo hack/dockerfile/install/install.sh $i; \\\n\tdone\nENV PATH=/usr/local/cli:$PATH\n\nENV AUTO_GOPATH 1\nWORKDIR /usr/src/docker\nCOPY . /usr/src/docker\n"
        },
        {
          "name": "Dockerfile.windows",
          "type": "blob",
          "size": 13.3515625,
          "content": "# escape=`\n\n# -----------------------------------------------------------------------------------------\n# This file describes the standard way to build Docker in a container on Windows\n# Server 2016 or Windows 10.\n#\n# Maintainer: @jhowardmsft\n# -----------------------------------------------------------------------------------------\n\n\n# Prerequisites:\n# --------------\n#\n# 1. Windows Server 2016 or Windows 10 with all Windows updates applied. The major \n#    build number must be at least 14393. This can be confirmed, for example, by \n#    running the following from an elevated PowerShell prompt - this sample output \n#    is from a fully up to date machine as at mid-November 2016:\n#\n#    >> PS C:\\> $(gin).WindowsBuildLabEx\n#    >> 14393.447.amd64fre.rs1_release_inmarket.161102-0100\n#\n# 2. Git for Windows (or another git client) must be installed. https://git-scm.com/download/win.\n#\n# 3. The machine must be configured to run containers. For example, by following\n#    the quick start guidance at https://msdn.microsoft.com/en-us/virtualization/windowscontainers/quick_start/quick_start or\n#    https://github.com/docker/labs/blob/master/windows/windows-containers/Setup.md\n#\n# 4. If building in a Hyper-V VM: For Windows Server 2016 using Windows Server\n#    containers as the default option, it is recommended you have at least 1GB \n#    of memory assigned; For Windows 10 where Hyper-V Containers are employed, you\n#    should have at least 4GB of memory assigned. Note also, to run Hyper-V \n#    containers in a VM, it is necessary to configure the VM for nested virtualization.\n\n# -----------------------------------------------------------------------------------------\n\n\n# Usage:\n# -----\n#\n#  The following steps should be run from an (elevated*) Windows PowerShell prompt. \n#\n#  (*In a default installation of containers on Windows following the quick-start guidance at\n#    https://msdn.microsoft.com/en-us/virtualization/windowscontainers/quick_start/quick_start,\n#    the docker.exe client must run elevated to be able to connect to the daemon).\n#\n# 1. Clone the sources from github.com:\n#\n#    >>   git clone https://github.com/docker/docker.git C:\\gopath\\src\\github.com\\docker\\docker\n#    >>   Cloning into 'C:\\gopath\\src\\github.com\\docker\\docker'...\n#    >>   remote: Counting objects: 186216, done.\n#    >>   remote: Compressing objects: 100% (21/21), done.\n#    >>   remote: Total 186216 (delta 5), reused 0 (delta 0), pack-reused 186195\n#    >>   Receiving objects: 100% (186216/186216), 104.32 MiB | 8.18 MiB/s, done.\n#    >>   Resolving deltas: 100% (123139/123139), done.\n#    >>   Checking connectivity... done.\n#    >>   Checking out files: 100% (3912/3912), done.\n#    >>   PS C:\\>\n#\n#\n# 2. Change directory to the cloned docker sources:\n#\n#    >>   cd C:\\gopath\\src\\github.com\\docker\\docker \n#\n#\n# 3. Build a docker image with the components required to build the docker binaries from source\n#    by running one of the following:\n#\n#    >>   docker build -t nativebuildimage -f Dockerfile.windows .          \n#    >>   docker build -t nativebuildimage -f Dockerfile.windows -m 2GB .    (if using Hyper-V containers)\n#\n#\n# 4. Build the docker executable binaries by running one of the following:\n#\n#    >>   $DOCKER_GITCOMMIT=(git rev-parse --short HEAD)\n#    >>   docker run --name binaries -e DOCKER_GITCOMMIT=$DOCKER_GITCOMMIT nativebuildimage hack\\make.ps1 -Binary\n#    >>   docker run --name binaries -e DOCKER_GITCOMMIT=$DOCKER_GITCOMMIT -m 2GB nativebuildimage hack\\make.ps1 -Binary    (if using Hyper-V containers)\n#\n#\n# 5. Copy the binaries out of the container, replacing HostPath with an appropriate destination \n#    folder on the host system where you want the binaries to be located.\n#\n#    >>   docker cp binaries:C:\\gopath\\src\\github.com\\docker\\docker\\bundles\\docker.exe C:\\HostPath\\docker.exe\n#    >>   docker cp binaries:C:\\gopath\\src\\github.com\\docker\\docker\\bundles\\dockerd.exe C:\\HostPath\\dockerd.exe\n#\n#\n# 6. (Optional) Remove the interim container holding the built executable binaries:\n#\n#    >>    docker rm binaries\n#\n#\n# 7. (Optional) Remove the image used for the container in which the executable\n#    binaries are build. Tip - it may be useful to keep this image around if you need to\n#    build multiple times. Then you can take advantage of the builder cache to have an\n#    image which has all the components required to build the binaries already installed.\n#\n#    >>    docker rmi nativebuildimage\n#\n\n# -----------------------------------------------------------------------------------------\n\n\n#  The validation tests can only run directly on the host. This is because they calculate\n#  information from the git repo, but the .git directory is not passed into the image as\n#  it is excluded via .dockerignore. Run the following from a Windows PowerShell prompt\n#  (elevation is not required): (Note Go must be installed to run these tests)\n#\n#    >>   hack\\make.ps1 -DCO -PkgImports -GoFormat\n\n\n# -----------------------------------------------------------------------------------------\n\n\n#  To run unit tests, ensure you have created the nativebuildimage above. Then run one of\n#  the following from an (elevated) Windows PowerShell prompt:\n#\n#    >>   docker run --rm nativebuildimage hack\\make.ps1 -TestUnit\n#    >>   docker run --rm -m 2GB nativebuildimage hack\\make.ps1 -TestUnit    (if using Hyper-V containers)\n\n\n# -----------------------------------------------------------------------------------------\n\n\n#  To run unit tests and binary build, ensure you have created the nativebuildimage above. Then \n#  run one of the following from an (elevated) Windows PowerShell prompt:\n#\n#    >>   docker run nativebuildimage hack\\make.ps1 -All\n#    >>   docker run -m 2GB nativebuildimage hack\\make.ps1 -All    (if using Hyper-V containers)\n\n# -----------------------------------------------------------------------------------------\n\n\n# Important notes:\n# ---------------\n#\n# Don't attempt to use a bind mount to pass a local directory as the bundles target\n# directory. It does not work (golang attempts for follow a mapped folder incorrectly).\n# Instead, use docker cp as per the example.\n#\n# go.zip is not removed from the image as it is used by the Windows CI servers\n# to ensure the host and image are running consistent versions of go.\n#\n# Nanoserver support is a work in progress. Although the image will build if the \n# FROM statement is updated, it will not work when running autogen through hack\\make.ps1. \n# It is suspected that the required GCC utilities (eg gcc, windres, windmc) silently\n# quit due to the use of console hooks which are not available.\n#\n# The docker integration tests do not currently run in a container on Windows, predominantly\n# due to Windows not supporting privileged mode, so anything using a volume would fail.\n# They (along with the rest of the docker CI suite) can be run using \n# https://github.com/kevpar/docker-w2wCIScripts/blob/master/runCI/Invoke-DockerCI.ps1.\n#\n# -----------------------------------------------------------------------------------------\n\n\n# The number of build steps below are explicitly minimised to improve performance.\n\nARG WINDOWS_BASE_IMAGE=mcr.microsoft.com/windows/servercore\nARG WINDOWS_BASE_IMAGE_TAG=ltsc2022\nFROM ${WINDOWS_BASE_IMAGE}:${WINDOWS_BASE_IMAGE_TAG}\n\n# Use PowerShell as the default shell\nSHELL [\"powershell\", \"-Command\", \"$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';\"]\n\nARG GO_VERSION=1.23.4\nARG GOTESTSUM_VERSION=v1.8.2\nARG GOWINRES_VERSION=v0.3.1\nARG CONTAINERD_VERSION=v1.7.25\n\n# Environment variable notes:\n#  - GO_VERSION must be consistent with 'Dockerfile' used by Linux.\n#  - CONTAINERD_VERSION must be consistent with 'hack/dockerfile/install/containerd.installer' used by Linux.\n#  - FROM_DOCKERFILE is used for detection of building within a container.\nENV GO_VERSION=${GO_VERSION} `\n    CONTAINERD_VERSION=${CONTAINERD_VERSION} `\n    GIT_VERSION=2.11.1 `\n    GOPATH=C:\\gopath `\n    GO111MODULE=off `\n    GOTOOLCHAIN=local `\n    FROM_DOCKERFILE=1 `\n    GOTESTSUM_VERSION=${GOTESTSUM_VERSION} `\n    GOWINRES_VERSION=${GOWINRES_VERSION}\n\nRUN `\n  Function Test-Nano() { `\n    $EditionId = (Get-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion' -Name 'EditionID').EditionId; `\n    return (($EditionId -eq 'ServerStandardNano') -or ($EditionId -eq 'ServerDataCenterNano') -or ($EditionId -eq 'NanoServer')); `\n  }`\n  `\n  Function Download-File([string] $source, [string] $target) { `\n    if (Test-Nano) { `\n      $handler = New-Object System.Net.Http.HttpClientHandler; `\n      $client = New-Object System.Net.Http.HttpClient($handler); `\n      $client.Timeout = New-Object System.TimeSpan(0, 30, 0); `\n      $cancelTokenSource = [System.Threading.CancellationTokenSource]::new(); `\n      $responseMsg = $client.GetAsync([System.Uri]::new($source), $cancelTokenSource.Token); `\n      $responseMsg.Wait(); `\n      if (!$responseMsg.IsCanceled) { `\n        $response = $responseMsg.Result; `\n        if ($response.IsSuccessStatusCode) { `\n          $downloadedFileStream = [System.IO.FileStream]::new($target, [System.IO.FileMode]::Create, [System.IO.FileAccess]::Write); `\n          $copyStreamOp = $response.Content.CopyToAsync($downloadedFileStream); `\n          $copyStreamOp.Wait(); `\n          $downloadedFileStream.Close(); `\n          if ($copyStreamOp.Exception -ne $null) { throw $copyStreamOp.Exception } `\n        } `\n      } else { `\n      Throw (\"Failed to download \" + $source) `\n      }`\n    } else { `\n      [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; `\n      $webClient = New-Object System.Net.WebClient; `\n      $webClient.DownloadFile($source, $target); `\n    } `\n  } `\n  `\n  setx /M PATH $('C:\\git\\cmd;C:\\git\\usr\\bin;'+$Env:PATH+';C:\\gcc\\bin;C:\\go\\bin;C:\\containerd\\bin'); `\n  `\n  Write-Host INFO: Downloading git...; `\n  $location='https://www.nuget.org/api/v2/package/GitForWindows/'+$Env:GIT_VERSION; `\n  Download-File $location C:\\gitsetup.zip; `\n  `\n  Write-Host INFO: Downloading go...; `\n  $dlGoVersion=$Env:GO_VERSION; `\n  Download-File \"https://go.dev/dl/go${dlGoVersion}.windows-amd64.zip\" C:\\go.zip; `\n  `\n  Write-Host INFO: Downloading compiler 1 of 3...; `\n  Download-File https://raw.githubusercontent.com/moby/docker-tdmgcc/master/gcc.zip C:\\gcc.zip; `\n  `\n  Write-Host INFO: Downloading compiler 2 of 3...; `\n  Download-File https://raw.githubusercontent.com/moby/docker-tdmgcc/master/runtime.zip C:\\runtime.zip; `\n  `\n  Write-Host INFO: Downloading compiler 3 of 3...; `\n  Download-File https://raw.githubusercontent.com/moby/docker-tdmgcc/master/binutils.zip C:\\binutils.zip; `\n  `\n  Write-Host INFO: Extracting git...; `\n  Expand-Archive C:\\gitsetup.zip C:\\git-tmp; `\n  New-Item -Type Directory C:\\git | Out-Null; `\n  Move-Item C:\\git-tmp\\tools\\* C:\\git\\.; `\n  Remove-Item -Recurse -Force C:\\git-tmp; `\n  `\n  Write-Host INFO: Expanding go...; `\n  Expand-Archive C:\\go.zip -DestinationPath C:\\; `\n  `\n  Write-Host INFO: Expanding compiler 1 of 3...; `\n  Expand-Archive C:\\gcc.zip -DestinationPath C:\\gcc -Force; `\n  Write-Host INFO: Expanding compiler 2 of 3...; `\n  Expand-Archive C:\\runtime.zip -DestinationPath C:\\gcc -Force; `\n  Write-Host INFO: Expanding compiler 3 of 3...; `\n  Expand-Archive C:\\binutils.zip -DestinationPath C:\\gcc -Force; `\n  `\n  Write-Host INFO: Removing downloaded files...; `\n  Remove-Item C:\\gcc.zip; `\n  Remove-Item C:\\runtime.zip; `\n  Remove-Item C:\\binutils.zip; `\n  Remove-Item C:\\gitsetup.zip; `\n  `\n  Write-Host INFO: Downloading containerd; `\n  Install-Package -Force 7Zip4PowerShell; `\n  $location='https://github.com/containerd/containerd/releases/download/'+$Env:CONTAINERD_VERSION+'/containerd-'+$Env:CONTAINERD_VERSION.TrimStart('v')+'-windows-amd64.tar.gz'; `\n  Download-File $location C:\\containerd.tar.gz; `\n  New-Item -Path C:\\containerd -ItemType Directory; `\n  Expand-7Zip C:\\containerd.tar.gz C:\\; `\n  Expand-7Zip C:\\containerd.tar C:\\containerd; `\n  Remove-Item C:\\containerd.tar.gz; `\n  Remove-Item C:\\containerd.tar; `\n  `\n  # Ensure all directories exist that we will require below....\n  $srcDir = \"\"\"$Env:GOPATH`\\src\\github.com\\docker\\docker\\bundles\"\"\"; `\n  Write-Host INFO: Ensuring existence of directory $srcDir...; `\n  New-Item -Force -ItemType Directory -Path $srcDir | Out-Null; `\n  `\n  Write-Host INFO: Configuring git core.autocrlf...; `\n  C:\\git\\cmd\\git config --global core.autocrlf true;\n\nRUN `\n  Function Install-GoTestSum() { `\n    $Env:GO111MODULE = 'on'; `\n    $tmpGobin = \"${Env:GOBIN_TMP}\"; `\n    $Env:GOBIN = \"\"\"${Env:GOPATH}`\\bin\"\"\"; `\n    Write-Host \"INFO: Installing gotestsum version $Env:GOTESTSUM_VERSION in $Env:GOBIN\"; `\n    &go install \"gotest.tools/gotestsum@${Env:GOTESTSUM_VERSION}\"; `\n    $Env:GOBIN = \"${tmpGobin}\"; `\n    $Env:GO111MODULE = 'off'; `\n    if ($LASTEXITCODE -ne 0) {  `\n      Throw '\"gotestsum install failed...\"'; `\n    } `\n  } `\n  `\n  Install-GoTestSum\n\nRUN `\n  Function Install-GoWinres() { `\n    $Env:GO111MODULE = 'on'; `\n    $tmpGobin = \"${Env:GOBIN_TMP}\"; `\n    $Env:GOBIN = \"\"\"${Env:GOPATH}`\\bin\"\"\"; `\n    Write-Host \"INFO: Installing go-winres version $Env:GOWINRES_VERSION in $Env:GOBIN\"; `\n    &go install \"github.com/tc-hib/go-winres@${Env:GOWINRES_VERSION}\"; `\n    $Env:GOBIN = \"${tmpGobin}\"; `\n    $Env:GO111MODULE = 'off'; `\n    if ($LASTEXITCODE -ne 0) {  `\n      Throw '\"go-winres install failed...\"'; `\n    } `\n  } `\n  `\n  Install-GoWinres\n\n# Make PowerShell the default entrypoint\nENTRYPOINT [\"powershell.exe\"]\n\n# Set the working directory to the location of the sources\nWORKDIR ${GOPATH}\\src\\github.com\\docker\\docker\n\n# Copy the sources into the container\nCOPY . .\n"
        },
        {
          "name": "Jenkinsfile",
          "type": "blob",
          "size": 7.1083984375,
          "content": "#!groovy\npipeline {\n    agent none\n\n    options {\n        buildDiscarder(logRotator(daysToKeepStr: '30'))\n        timeout(time: 2, unit: 'HOURS')\n        timestamps()\n    }\n    parameters {\n        booleanParam(name: 'arm64', defaultValue: true, description: 'ARM (arm64) Build/Test')\n        booleanParam(name: 'dco', defaultValue: true, description: 'Run the DCO check')\n    }\n    environment {\n        DOCKER_BUILDKIT     = '1'\n        DOCKER_EXPERIMENTAL = '1'\n        DOCKER_GRAPHDRIVER  = 'overlay2'\n        CHECK_CONFIG_COMMIT = '33a3680e08d1007e72c3b3f1454f823d8e9948ee'\n        TESTDEBUG           = '0'\n        TIMEOUT             = '120m'\n    }\n    stages {\n        stage('pr-hack') {\n            when { changeRequest() }\n            steps {\n                script {\n                    echo \"Workaround for PR auto-cancel feature. Borrowed from https://issues.jenkins-ci.org/browse/JENKINS-43353\"\n                    def buildNumber = env.BUILD_NUMBER as int\n                    if (buildNumber > 1) milestone(buildNumber - 1)\n                    milestone(buildNumber)\n                }\n            }\n        }\n        stage('DCO-check') {\n            when {\n                beforeAgent true\n                expression { params.dco }\n            }\n            agent { label 'arm64 && ubuntu-2004' }\n            steps {\n                sh '''\n                docker run --rm \\\n                  -v \"$WORKSPACE:/workspace\" \\\n                  -e VALIDATE_REPO=${GIT_URL} \\\n                  -e VALIDATE_BRANCH=${CHANGE_TARGET} \\\n                  alpine sh -c 'apk add --no-cache -q bash git openssh-client && git config --system --add safe.directory /workspace && cd /workspace && hack/validate/dco'\n                '''\n            }\n        }\n        stage('Build') {\n            parallel {\n                stage('arm64') {\n                    when {\n                        beforeAgent true\n                        expression { params.arm64 }\n                    }\n                    agent { label 'arm64 && ubuntu-2004' }\n                    environment {\n                        TEST_SKIP_INTEGRATION_CLI = '1'\n                    }\n\n                    stages {\n                        stage(\"Print info\") {\n                            steps {\n                                sh 'docker version'\n                                sh 'docker info'\n                                sh '''\n                                echo \"check-config.sh version: ${CHECK_CONFIG_COMMIT}\"\n                                curl -fsSL -o ${WORKSPACE}/check-config.sh \"https://raw.githubusercontent.com/moby/moby/${CHECK_CONFIG_COMMIT}/contrib/check-config.sh\" \\\n                                && bash ${WORKSPACE}/check-config.sh || true\n                                '''\n                            }\n                        }\n                        stage(\"Build dev image\") {\n                            steps {\n                                sh 'docker build --force-rm -t docker:${GIT_COMMIT} .'\n                            }\n                        }\n                        stage(\"Unit tests\") {\n                            steps {\n                                sh '''\n                                docker run --rm -t --privileged \\\n                                  -v \"$WORKSPACE/bundles:/go/src/github.com/docker/docker/bundles\" \\\n                                  --name docker-pr$BUILD_NUMBER \\\n                                  -e DOCKER_EXPERIMENTAL \\\n                                  -e DOCKER_GITCOMMIT=${GIT_COMMIT} \\\n                                  -e DOCKER_GRAPHDRIVER \\\n                                  -e VALIDATE_REPO=${GIT_URL} \\\n                                  -e VALIDATE_BRANCH=${CHANGE_TARGET} \\\n                                  docker:${GIT_COMMIT} \\\n                                  hack/test/unit\n                                '''\n                            }\n                            post {\n                                always {\n                                    junit testResults: 'bundles/junit-report*.xml', allowEmptyResults: true\n                                }\n                            }\n                        }\n                        stage(\"Integration tests\") {\n                            environment { TEST_SKIP_INTEGRATION_CLI = '1' }\n                            steps {\n                                sh '''\n                                docker run --rm -t --privileged \\\n                                  -v \"$WORKSPACE/bundles:/go/src/github.com/docker/docker/bundles\" \\\n                                  --name docker-pr$BUILD_NUMBER \\\n                                  -e DOCKER_EXPERIMENTAL \\\n                                  -e DOCKER_GITCOMMIT=${GIT_COMMIT} \\\n                                  -e DOCKER_GRAPHDRIVER \\\n                                  -e TESTDEBUG \\\n                                  -e TEST_INTEGRATION_USE_SNAPSHOTTER \\\n                                  -e TEST_SKIP_INTEGRATION_CLI \\\n                                  -e TIMEOUT \\\n                                  -e VALIDATE_REPO=${GIT_URL} \\\n                                  -e VALIDATE_BRANCH=${CHANGE_TARGET} \\\n                                  docker:${GIT_COMMIT} \\\n                                  hack/make.sh \\\n                                    dynbinary \\\n                                    test-integration\n                                '''\n                            }\n                            post {\n                                always {\n                                    junit testResults: 'bundles/**/*-report.xml', allowEmptyResults: true\n                                }\n                            }\n                        }\n                    }\n\n                    post {\n                        always {\n                            sh '''\n                            echo \"Ensuring container killed.\"\n                            docker rm -vf docker-pr$BUILD_NUMBER || true\n                            '''\n\n                            sh '''\n                            echo \"Chowning /workspace to jenkins user\"\n                            docker run --rm -v \"$WORKSPACE:/workspace\" busybox chown -R \"$(id -u):$(id -g)\" /workspace\n                            '''\n\n                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE', message: 'Failed to create bundles.tar.gz') {\n                                sh '''\n                                bundleName=arm64-integration\n                                echo \"Creating ${bundleName}-bundles.tar.gz\"\n                                # exclude overlay2 directories\n                                find bundles -path '*/root/*overlay2' -prune -o -type f \\\\( -name '*-report.json' -o -name '*.log' -o -name '*.prof' -o -name '*-report.xml' \\\\) -print | xargs tar -czf ${bundleName}-bundles.tar.gz\n                                '''\n\n                                archiveArtifacts artifacts: '*-bundles.tar.gz', allowEmptyArchive: true\n                            }\n                        }\n                        cleanup {\n                            sh 'make clean'\n                            deleteDir()\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.5126953125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        https://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   Copyright 2013-2018 Docker, Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       https://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 18.3955078125,
          "content": "# Moby maintainers file\n#\n# This file describes the maintainer groups within the moby/moby project.\n# More detail on Moby project governance is available in the\n# project/GOVERNANCE.md file found in this repository.\n#\n# It is structured to be consumable by both humans and programs.\n# To extract its contents programmatically, use any TOML-compliant\n# parser.\n#\n# TODO(estesp): This file should not necessarily depend on docker/opensource\n# This file is compiled into the MAINTAINERS file in docker/opensource.\n#\n[Org]\n\n\t[Org.\"Core maintainers\"]\n\n\t# The Core maintainers are the ghostbusters of the project: when there's a problem others\n\t# can't solve, they show up and fix it with bizarre devices and weaponry.\n\t# They have final say on technical implementation and coding style.\n\t# They are ultimately responsible for quality in all its forms: usability polish,\n\t# bugfixes, performance, stability, etc. When ownership  can cleanly be passed to\n\t# a subsystem, they are responsible for doing so and holding the\n\t# subsystem maintainers accountable. If ownership is unclear, they are the de facto owners.\n\n\t\tpeople = [\n\t\t\t\"akerouanton\",\n\t\t\t\"akihirosuda\",\n\t\t\t\"anusha\",\n\t\t\t\"austinvazquez\",\n\t\t\t\"coolljt0725\",\n\t\t\t\"corhere\",\n\t\t\t\"cpuguy83\",\n\t\t\t\"crazy-max\",\n\t\t\t\"estesp\",\n\t\t\t\"johnstep\",\n\t\t\t\"justincormack\",\n\t\t\t\"kolyshkin\",\n\t\t\t\"laurazard\",\n\t\t\t\"mhbauer\",\n\t\t\t\"neersighted\",\n\t\t\t\"robmry\",\n\t\t\t\"rumpl\",\n\t\t\t\"runcom\",\n\t\t\t\"samuelkarp\",\n\t\t\t\"stevvooe\",\n\t\t\t\"thajeztah\",\n\t\t\t\"tianon\",\n\t\t\t\"tibor\",\n\t\t\t\"tonistiigi\",\n\t\t\t\"unclejack\",\n\t\t\t\"vdemeester\",\n\t\t\t\"vieux\",\n\t\t\t\"vvoland\",\n\t\t\t\"yongtang\"\n\t\t]\n\n\t[Org.Curators]\n\n\t# The curators help ensure that incoming issues and pull requests are properly triaged and\n\t# that our various contribution and reviewing processes are respected. With their knowledge of\n\t# the repository activity, they can also guide contributors to relevant material or\n\t# discussions.\n\t#\n\t# They are neither code nor docs reviewers, so they are never expected to merge. They can\n\t# however:\n\t# - close an issue or pull request when it's an exact duplicate\n\t# - close an issue or pull request when it's inappropriate or off-topic\n\n\t\tpeople = [\n\t\t\t\"alexellis\",\n\t\t\t\"andrewhsu\",\n\t\t\t\"bsousaa\",\n\t\t\t\"dmcgowan\",\n\t\t\t\"fntlnz\",\n\t\t\t\"gianarb\",\n\t\t\t\"olljanat\",\n\t\t\t\"programmerq\",\n\t\t\t\"ripcurld\",\n\t\t\t\"sam-thibault\",\n\t\t\t\"samwhited\",\n\t\t\t\"thajeztah\",\n\t\t\t\"thompson-shaun\",\n\t\t]\n\n\t[Org.Alumni]\n\n\t# This list contains maintainers that are no longer active on the project.\n\t# It is thanks to these people that the project has become what it is today.\n\t# Thank you!\n\n\t\tpeople = [\n\t\t\t# Aaron Lehmann was a maintainer for swarmkit, the registry, and the engine,\n\t\t\t# and contributed many improvements, features, and bugfixes in those areas,\n\t\t\t# among which \"automated service rollbacks\", templated secrets and configs,\n\t\t\t# and resumable image layer downloads.\n\t\t\t\"aaronlehmann\",\n\n\t\t\t# Harald Albers is the mastermind behind the bash completion scripts for the\n\t\t\t# Docker CLI. The completion scripts moved to the Docker CLI repository, so\n\t\t\t# you can now find him perform his magic in the https://github.com/docker/cli repository.\n\t\t\t\"albers\",\n\n\t\t\t# Andrea Luzzardi started contributing to the Docker codebase in the \"dotCloud\"\n\t\t\t# era, even before it was called \"Docker\". He is one of the architects of both\n\t\t\t# Swarm and SwarmKit, and its integration into the Docker engine.\n\t\t\t\"aluzzardi\",\n\t\t\t\n\t\t\t# David Calavera contributed many features to Docker, such as an improved\n\t\t\t# event system, dynamic configuration reloading, volume plugins, fancy\n\t\t\t# new templating options, and an external client credential store. As a\n\t\t\t# maintainer, David was release captain for Docker 1.8, and competing\n\t\t\t# with Jess Frazelle to be \"top dream killer\".\n\t\t\t# David is now doing amazing stuff as CTO for https://www.netlify.com,\n\t\t\t# and tweets as @calavera.\n\t\t\t\"calavera\",\n\n\t\t\t# Michael Crosby was \"chief maintainer\" of the Docker project.\n\t\t\t# During his time as a maintainer, Michael contributed to many\n\t\t\t# milestones of the project; he was release captain of Docker v1.0.0,\n\t\t\t# started the development of \"libcontainer\" (what later became runc)\n\t\t\t# and containerd, as well as demoing cool hacks such as live migrating\n\t\t\t# a game server container with checkpoint/restore.\n\t\t\t#\n\t\t\t# Michael is currently a maintainer of containerd, but you may see\n\t\t\t# him around in other projects on GitHub.\n\t\t\t\"crosbymichael\",\n\n\t\t\t# Before becoming a maintainer, Daniel Nephin was a core contributor\n\t\t\t# to \"Fig\" (now known as Docker Compose). As a maintainer for both the\n\t\t\t# Engine and Docker CLI, Daniel contributed many features, among which\n\t\t\t# the `docker stack` commands, allowing users to deploy their Docker\n\t\t\t# Compose projects as a Swarm service.\n\t\t\t\"dnephin\",\n\n\t\t\t# Doug Davis contributed many features and fixes for the classic builder,\n\t\t\t# such as \"wildcard\" copy, the dockerignore file, custom paths/names\n\t\t\t# for the Dockerfile, as well as enhancements to the API and documentation.\n\t\t\t# Follow Doug on Twitter, where he tweets as @duginabox.\n\t\t\t\"duglin\",\n\n\t\t\t# As a maintainer, Erik was responsible for the \"builder\", and\n\t\t\t# started the first designs for the new networking model in\n\t\t\t# Docker. Erik is now working on all kinds of plugins for Docker\n\t\t\t# (https://github.com/contiv) and various open source projects\n\t\t\t# in his own repository https://github.com/erikh. You may\n\t\t\t# still stumble into him in our issue tracker, or on IRC.\n\t\t\t\"erikh\",\n\n\t\t\t# Evan Hazlett is the creator of the Shipyard and Interlock open source projects,\n\t\t\t# and the author of \"Orca\", which became the foundation of Docker Universal Control\n\t\t\t# Plane (UCP). As a maintainer, Evan helped integrating SwarmKit (secrets, tasks)\n\t\t\t# into the Docker engine.\n\t\t\t\"ehazlett\",\n\n\t\t\t# Arnaud Porterie (AKA \"icecrime\") was in charge of maintaining the maintainers.\n\t\t\t# As a maintainer, he made life easier for contributors to the Docker open-source\n\t\t\t# projects, bringing order in the chaos by designing a triage- and review workflow\n\t\t\t# using labels (see https://icecrime.net/technology/a-structured-approach-to-labeling/),\n\t\t\t# and automating the hell out of things with his buddies GordonTheTurtle and Poule\n\t\t\t# (a chicken!).\n\t\t\t# \n\t\t\t# A lesser-known fact is that he created the first commit in the libnetwork repository\n\t\t\t# even though he didn't know anything about it. Some say, he's now selling stuff on\n\t\t\t# the internet ;-)\n\t\t\t\"icecrime\",\n\n\t\t\t# After a false start with his first PR being rejected, James Turnbull became a frequent\n\t\t\t# contributor to the documentation, and became a docs maintainer on December 5, 2013. As\n\t\t\t# a maintainer, James lifted the docs to a higher standard, and introduced the community\n\t\t\t# guidelines (\"three strikes\"). James is currently changing the world as CTO of https://www.empatico.org,\n\t\t\t# meanwhile authoring various books that are worth checking out. You can find him on Twitter,\n\t\t\t# rambling as @kartar, and although no longer active as a maintainer, he's always \"game\" to\n\t\t\t# help out reviewing docs PRs, so you may still see him around in the repository.\n\t\t\t\"jamtur01\",\n\n\t\t\t# Jessica Frazelle, also known as the \"Keyser Söze of containers\",\n\t\t\t# runs *everything* in containers. She started contributing to\n\t\t\t# Docker with a (fun fun) change involving both iptables and regular\n\t\t\t# expressions (coz, YOLO!) on July 10, 2014\n\t\t\t# https://github.com/docker/docker/pull/6950/commits/f3a68ffa390fb851115c77783fa4031f1d3b2995.\n\t\t\t# Jess was Release Captain for Docker 1.4, 1.6 and 1.7, and contributed\n\t\t\t# many features and improvement, among which \"seccomp profiles\" (making\n\t\t\t# containers a lot more secure). Besides being a maintainer, she\n\t\t\t# set up the CI infrastructure for the project, giving everyone\n\t\t\t# something to shout at if a PR failed (\"noooo Janky!\").\n\t\t\t# Be sure you don't miss her talks at a conference near you (a must-see),\n\t\t\t# read her blog at https://blog.jessfraz.com (a must-read), and\n\t\t\t# check out her open source projects on GitHub https://github.com/jessfraz (a must-try).\n\t\t\t\"jessfraz\",\n\n\t\t\t# As a maintainer, John Howard managed to make the impossible possible;\n\t\t\t# to run Docker on Windows. After facing many challenges, teaching\n\t\t\t# fellow-maintainers that 'Windows is not Linux', and many changes in\n\t\t\t# Windows Server to facilitate containers, native Windows containers\n\t\t\t# saw the light of day in 2015.\n\t\t\t#\n\t\t\t# John is now enjoying life without containers: playing piano, painting,\n\t\t\t# and walking his dogs, but you may occasionally see him drop by on GitHub.\n\t\t\t\"lowenna\",\n\n\t\t\t# Alexander Morozov contributed many features to Docker, worked on the premise of \n\t\t\t# what later became containerd (and worked on that too), and made a \"stupid\" Go\n\t\t\t# vendor tool specifically for docker/docker needs: vndr (https://github.com/LK4D4/vndr).\n\t\t\t# Not many know that Alexander is a master negotiator, being able to change course\n\t\t\t# of action with a single \"Nope, we're not gonna do that\".\n\t\t\t\"lk4d4\",\n\n\t\t\t# Madhu Venugopal was part of the SocketPlane team that joined Docker.\n\t\t\t# As a maintainer, he was working with Jana for the Container Network\n\t\t\t# Model (CNM) implemented through libnetwork, and the \"routing mesh\" powering\n\t\t\t# Swarm mode networking.\n\t\t\t\"mavenugo\",\n\n\t\t\t# As a maintainer, Kenfe-Mickaël Laventure worked on the container runtime,\n\t\t\t# integrating containerd 1.0 with the daemon, and adding support for custom\n\t\t\t# OCI runtimes, as well as implementing the `docker prune` subcommands,\n\t\t\t# which was a welcome feature to be added. You can keep up with Mickaél on\n\t\t\t# Twitter (@kmlaventure).\n\t\t\t\"mlaventure\",\n\n\t\t\t# As a docs maintainer, Mary Anthony contributed greatly to the Docker\n\t\t\t# docs. She wrote the Docker Contributor Guide and Getting Started\n\t\t\t# Guides. She helped create a doc build system independent of\n\t\t\t# docker/docker project, and implemented a new docs.docker.com theme and\n\t\t\t# nav for 2015 Dockercon. Fun fact: the most inherited layer in DockerHub\n\t\t\t# public repositories was originally referenced in\n\t\t\t# maryatdocker/docker-whale back in May 2015.\n\t\t\t\"moxiegirl\",\n\n\t\t\t# Jana Radhakrishnan was part of the SocketPlane team that joined Docker.\n\t\t\t# As a maintainer, he was the lead architect for the Container Network\n\t\t\t# Model (CNM) implemented through libnetwork, and the \"routing mesh\" powering\n\t\t\t# Swarm mode networking.\n\t\t\t#\n\t\t\t# Jana started new adventures in networking, but you can find him tweeting as @mrjana,\n\t\t\t# coding on GitHub https://github.com/mrjana, and he may be hiding on the Docker Community\n\t\t\t# slack channel :-)\n\t\t\t\"mrjana\",\n\n\t\t\t# Sven Dowideit became a well known person in the Docker ecosphere, building\n\t\t\t# boot2docker, and became a regular contributor to the project, starting as\n\t\t\t# early as October 2013 (https://github.com/docker/docker/pull/2119), to become\n\t\t\t# a maintainer less than two months later (https://github.com/docker/docker/pull/3061).\n\t\t\t#\n\t\t\t# As a maintainer, Sven took on the task to convert the documentation from\n\t\t\t# ReStructuredText to Markdown, migrate to Hugo for generating the docs, and\n\t\t\t# writing tooling for building, testing, and publishing them.\n\t\t\t#\n\t\t\t# If you're not in the occasion to visit \"the Australian office\", you\n\t\t\t# can keep up with Sven on Twitter (@SvenDowideit), his blog http://fosiki.com,\n\t\t\t# and of course on GitHub.\n\t\t\t\"sven\",\n\n\t\t\t# Vincent \"vbatts!\" Batts made his first contribution to the project\n\t\t\t# in November 2013, to become a maintainer a few months later, on\n\t\t\t# May 10, 2014 (https://github.com/docker/docker/commit/d6e666a87a01a5634c250358a94c814bf26cb778).\n\t\t\t# As a maintainer, Vincent made important contributions to core elements\n\t\t\t# of Docker, such as \"distribution\" (tarsum) and graphdrivers (btrfs, devicemapper).\n\t\t\t# He also contributed the \"tar-split\" library, an important element\n\t\t\t# for the content-addressable store.\n\t\t\t# Vincent is currently a member of the Open Containers Initiative\n\t\t\t# Technical Oversight Board (TOB), besides his work at Red Hat and\n\t\t\t# Project Atomic. You can still find him regularly hanging out in\n\t\t\t# our repository and the #docker-dev and #docker-maintainers IRC channels\n\t\t\t# for a chat, as he's always a lot of fun.\n\t\t\t\"vbatts\",\n\n\t\t\t# Vishnu became a maintainer to help out on the daemon codebase and\n\t\t\t# libcontainer integration. He's currently involved in the\n\t\t\t# Open Containers Initiative, working on the specifications,\n\t\t\t# besides his work on cAdvisor and Kubernetes for Google.\n\t\t\t\"vishh\"\n\t\t]\n\n[people]\n\n# A reference list of all people associated with the project.\n# All other sections should refer to people by their canonical key\n# in the people section.\n\n\t# ADD YOURSELF HERE IN ALPHABETICAL ORDER\n\n\t[people.aaronlehmann]\n\tName = \"Aaron Lehmann\"\n\tEmail = \"aaron.lehmann@docker.com\"\n\tGitHub = \"aaronlehmann\"\n\n\t[people.akerouanton]\n\tName = \"Albin Kerouanton\"\n\tEmail = \"albinker@gmail.com\"\n\tGitHub = \"akerouanton\"\n\n\t[people.alexellis]\n\tName = \"Alex Ellis\"\n\tEmail = \"alexellis2@gmail.com\"\n\tGitHub = \"alexellis\"\n\n\t[people.akihirosuda]\n\tName = \"Akihiro Suda\"\n\tEmail = \"akihiro.suda.cz@hco.ntt.co.jp\"\n\tGitHub = \"AkihiroSuda\"\n\n\t[people.aluzzardi]\n\tName = \"Andrea Luzzardi\"\n\tEmail = \"al@docker.com\"\n\tGitHub = \"aluzzardi\"\n\n\t[people.albers]\n\tName = \"Harald Albers\"\n\tEmail = \"github@albersweb.de\"\n\tGitHub = \"albers\"\n\n\t[people.andrewhsu]\n\tName = \"Andrew Hsu\"\n\tEmail = \"andrewhsu@docker.com\"\n\tGitHub = \"andrewhsu\"\n\n\t[people.austinvazquez]\n\tName = \"Austin Vazquez\"\n\tEmail = \"macedonv@amazon.com\"\n\tGitHub = \"austinvazquez\"\n\n\t[people.anusha]\n\tName = \"Anusha Ragunathan\"\n\tEmail = \"anusha@docker.com\"\n\tGitHub = \"anusha-ragunathan\"\n\t\n\t[people.bsousaa]\n\tName = \"Bruno de Sousa\"\n\tEmail = \"bruno.sousa@docker.com\"\n\tGitHub = \"bsousaa\"\n\n\t[people.calavera]\n\tName = \"David Calavera\"\n\tEmail = \"david.calavera@gmail.com\"\n\tGitHub = \"calavera\"\n\n\t[people.coolljt0725]\n\tName = \"Lei Jitang\"\n\tEmail = \"leijitang@huawei.com\"\n\tGitHub = \"coolljt0725\"\n\n\t[people.corhere]\n\tName = \"Cory Snider\"\n\tEmail = \"csnider@mirantis.com\"\n\tGitHub = \"corhere\"\n\n\t[people.cpuguy83]\n\tName = \"Brian Goff\"\n\tEmail = \"cpuguy83@gmail.com\"\n\tGitHub = \"cpuguy83\"\n\n\t[people.crazy-max]\n\tName = \"Kevin Alvarez\"\n\tEmail = \"contact@crazymax.dev\"\n\tGitHub = \"crazy-max\"\n\n\t[people.crosbymichael]\n\tName = \"Michael Crosby\"\n\tEmail = \"crosbymichael@gmail.com\"\n\tGitHub = \"crosbymichael\"\n\n\t[people.dnephin]\n\tName = \"Daniel Nephin\"\n\tEmail = \"dnephin@gmail.com\"\n\tGitHub = \"dnephin\"\n\n\t[people.dmcgowan]\n\tName = \"Derek McGowan\"\n\tEmail = \"derek@mcgstyle.net\"\n\tGitHub = \"dmcgowan\"\n\n\t[people.duglin]\n\tName = \"Doug Davis\"\n\tEmail = \"dug@us.ibm.com\"\n\tGitHub = \"duglin\"\n\n\t[people.ehazlett]\n\tName = \"Evan Hazlett\"\n\tEmail = \"ejhazlett@gmail.com\"\n\tGitHub = \"ehazlett\"\n\n\t[people.erikh]\n\tName = \"Erik Hollensbe\"\n\tEmail = \"erik@docker.com\"\n\tGitHub = \"erikh\"\n\n\t[people.estesp]\n\tName = \"Phil Estes\"\n\tEmail = \"estesp@linux.vnet.ibm.com\"\n\tGitHub = \"estesp\"\n\n\t[people.fntlnz]\n\tName = \"Lorenzo Fontana\"\n\tEmail = \"fontanalorenz@gmail.com\"\n\tGitHub = \"fntlnz\"\n\n\t[people.gianarb]\n\tName = \"Gianluca Arbezzano\"\n\tEmail = \"ga@thumpflow.com\"\n\tGitHub = \"gianarb\"\n\n\t[people.icecrime]\n\tName = \"Arnaud Porterie\"\n\tEmail = \"icecrime@gmail.com\"\n\tGitHub = \"icecrime\"\n\n\t[people.jamtur01]\n\tName = \"James Turnbull\"\n\tEmail = \"james@lovedthanlost.net\"\n\tGitHub = \"jamtur01\"\n\n\t[people.jessfraz]\n\tName = \"Jessie Frazelle\"\n\tEmail = \"jess@linux.com\"\n\tGitHub = \"jessfraz\"\n\n\t[people.johnstep]\n\tName = \"John Stephens\"\n\tEmail = \"johnstep@docker.com\"\n\tGitHub = \"johnstep\"\n\n\t[people.justincormack]\n\tName = \"Justin Cormack\"\n\tEmail = \"justin.cormack@docker.com\"\n\tGitHub = \"justincormack\"\n\n\t[people.kolyshkin]\n\tName = \"Kir Kolyshkin\"\n\tEmail = \"kolyshkin@gmail.com\"\n\tGitHub = \"kolyshkin\"\n\n\t[people.laurazard]\n\tName = \"Laura Brehm\"\n\tEmail = \"laura.brehm@docker.com\"\n\tGitHub = \"laurazard\"\n\n\t[people.lk4d4]\n\tName = \"Alexander Morozov\"\n\tEmail = \"lk4d4@docker.com\"\n\tGitHub = \"lk4d4\"\n\n\t[people.lowenna]\n\tName = \"John Howard\"\n\tEmail = \"github@lowenna.com\"\n\tGitHub = \"lowenna\"\n\n\t[people.mavenugo]\n\tName = \"Madhu Venugopal\"\n\tEmail = \"madhu@docker.com\"\n\tGitHub = \"mavenugo\"\n\n\t[people.mhbauer]\n\tName = \"Morgan Bauer\"\n\tEmail = \"mbauer@us.ibm.com\"\n\tGitHub = \"mhbauer\"\n\n\t[people.mlaventure]\n\tName = \"Kenfe-Mickaël Laventure\"\n\tEmail = \"mickael.laventure@gmail.com\"\n\tGitHub = \"mlaventure\"\n\n\t[people.moxiegirl]\n\tName = \"Mary Anthony\"\n\tEmail = \"mary.anthony@docker.com\"\n\tGitHub = \"moxiegirl\"\n\n\t[people.mrjana]\n\tName = \"Jana Radhakrishnan\"\n\tEmail = \"mrjana@docker.com\"\n\tGitHub = \"mrjana\"\n\n\t[people.neersighted]\n\tName = \"Bjorn Neergaard\"\n\tEmail = \"bjorn@neersighted.com\"\n\tGitHub = \"neersighted\"\n\n\t[people.olljanat]\n\tName = \"Olli Janatuinen\"\n\tEmail = \"olli.janatuinen@gmail.com\"\n\tGitHub = \"olljanat\"\n\n\t[people.programmerq]\n\tName = \"Jeff Anderson\"\n\tEmail = \"jeff@docker.com\"\n\tGitHub = \"programmerq\"\n\n\t[people.robmry]\n\tName = \"Rob Murray\"\n\tEmail = \"rob.murray@docker.com\"\n\tGitHub = \"robmry\"\n\n\t[people.ripcurld]\n\tName = \"Boaz Shuster\"\n\tEmail = \"ripcurld.github@gmail.com\"\n\tGitHub = \"ripcurld\"\n\n\t[people.rumpl]\n\tName = \"Djordje Lukic\"\n\tEmail = \"djordje.lukic@docker.com\"\n\tGitHub = \"rumpl\"\n\n\t[people.runcom]\n\tName = \"Antonio Murdaca\"\n\tEmail = \"runcom@redhat.com\"\n\tGitHub = \"runcom\"\n\n\t[people.sam-thibault]\n\tName = \"Sam Thibault\"\n\tEmail = \"sam.thibault@docker.com\"\n\tGitHub = \"sam-thibault\"\n\n\t[people.samuelkarp]\n\tName = \"Samuel Karp\"\n\tEmail = \"me@samuelkarp.com\"\n\tGitHub = \"samuelkarp\"\n\n\t[people.samwhited]\n\tName = \"Sam Whited\"\n\tEmail = \"sam@samwhited.com\"\n\tGitHub = \"samwhited\"\n\n\t[people.shykes]\n\tName = \"Solomon Hykes\"\n\tEmail = \"solomon@docker.com\"\n\tGitHub = \"shykes\"\n\n\t[people.stevvooe]\n\tName = \"Stephen Day\"\n\tEmail = \"stephen.day@docker.com\"\n\tGitHub = \"stevvooe\"\n\n\t[people.sven]\n\tName = \"Sven Dowideit\"\n\tEmail = \"SvenDowideit@home.org.au\"\n\tGitHub = \"SvenDowideit\"\n\n\t[people.thajeztah]\n\tName = \"Sebastiaan van Stijn\"\n\tEmail = \"github@gone.nl\"\n\tGitHub = \"thaJeztah\"\n\n\t[people.thompson-shaun]\n\tName = \"Shaun Thompson\"\n\tEmail = \"shaun.thompson@docker.com\"\n\tGitHub = \"thompson-shaun\"\n\n\t[people.tianon]\n\tName = \"Tianon Gravi\"\n\tEmail = \"admwiggin@gmail.com\"\n\tGitHub = \"tianon\"\n\n\t[people.tibor]\n\tName = \"Tibor Vass\"\n\tEmail = \"tibor@docker.com\"\n\tGitHub = \"tiborvass\"\n\n\t[people.tonistiigi]\n\tName = \"Tõnis Tiigi\"\n\tEmail = \"tonis@docker.com\"\n\tGitHub = \"tonistiigi\"\n\n\t[people.unclejack]\n\tName = \"Cristian Staretu\"\n\tEmail = \"cristian.staretu@gmail.com\"\n\tGitHub = \"unclejack\"\n\n\t[people.vbatts]\n\tName = \"Vincent Batts\"\n\tEmail = \"vbatts@redhat.com\"\n\tGitHub = \"vbatts\"\n\n\t[people.vdemeester]\n\tName = \"Vincent Demeester\"\n\tEmail = \"vincent@sbr.pm\"\n\tGitHub = \"vdemeester\"\n\n\t[people.vieux]\n\tName = \"Victor Vieux\"\n\tEmail = \"vieux@docker.com\"\n\tGitHub = \"vieux\"\n\n\t[people.vishh]\n\tName = \"Vishnu Kannan\"\n\tEmail = \"vishnuk@google.com\"\n\tGitHub = \"vishh\"\n\t\n\t[people.vvoland]\n\tName = \"Paweł Gronowski\"\n\tEmail = \"pawel.gronowski@docker.com\"\n\tGitHub = \"vvoland\"\n\n\t[people.yongtang]\n\tName = \"Yong Tang\"\n\tEmail = \"yong.tang.github@outlook.com\"\n\tGitHub = \"yongtang\"\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 9.6904296875,
          "content": "DOCKER ?= docker\nBUILDX ?= $(DOCKER) buildx\n\nDOCKER_GITCOMMIT := $(shell git rev-parse HEAD)\nexport DOCKER_GITCOMMIT\n\n# allow overriding the repository and branch that validation scripts are running\n# against these are used in hack/validate/.validate to check what changed in the PR.\nexport VALIDATE_REPO\nexport VALIDATE_BRANCH\nexport VALIDATE_ORIGIN_BRANCH\n\nexport PAGER\nexport GIT_PAGER\n\n# env vars passed through directly to Docker's build scripts\n# to allow things like `make KEEPBUNDLE=1 binary` easily\n# `project/PACKAGERS.md` have some limited documentation of some of these\n#\n# DOCKER_LDFLAGS can be used to pass additional parameters to -ldflags\n# option of \"go build\". For example, a built-in graphdriver priority list\n# can be changed during build time like this:\n#\n# make DOCKER_LDFLAGS=\"-X github.com/docker/docker/daemon/graphdriver.priority=overlay2,zfs\" dynbinary\n#\nDOCKER_ENVS := \\\n\t-e BUILDFLAGS \\\n\t-e KEEPBUNDLE \\\n\t-e DOCKER_BUILD_ARGS \\\n\t-e DOCKER_BUILD_GOGC \\\n\t-e DOCKER_BUILD_OPTS \\\n\t-e DOCKER_BUILD_PKGS \\\n\t-e DOCKER_BUILDKIT \\\n\t-e DOCKER_BASH_COMPLETION_PATH \\\n\t-e DOCKER_CLI_PATH \\\n\t-e DOCKERCLI_VERSION \\\n\t-e DOCKERCLI_REPOSITORY \\\n\t-e DOCKERCLI_INTEGRATION_VERSION \\\n\t-e DOCKERCLI_INTEGRATION_REPOSITORY \\\n\t-e DOCKER_DEBUG \\\n\t-e DOCKER_EXPERIMENTAL \\\n\t-e DOCKER_FIREWALLD \\\n\t-e DOCKER_GITCOMMIT \\\n\t-e DOCKER_GRAPHDRIVER \\\n\t-e DOCKER_LDFLAGS \\\n\t-e DOCKER_PORT \\\n\t-e DOCKER_REMAP_ROOT \\\n\t-e DOCKER_ROOTLESS \\\n\t-e DOCKER_STORAGE_OPTS \\\n\t-e DOCKER_TEST_HOST \\\n\t-e DOCKER_USERLANDPROXY \\\n\t-e DOCKERD_ARGS \\\n\t-e DELVE_PORT \\\n\t-e GITHUB_ACTIONS \\\n\t-e TEST_FORCE_VALIDATE \\\n\t-e TEST_INTEGRATION_DIR \\\n\t-e TEST_INTEGRATION_USE_SNAPSHOTTER \\\n\t-e TEST_INTEGRATION_FAIL_FAST \\\n\t-e TEST_SKIP_INTEGRATION \\\n\t-e TEST_SKIP_INTEGRATION_CLI \\\n\t-e TEST_IGNORE_CGROUP_CHECK \\\n\t-e TESTCOVERAGE \\\n\t-e TESTDEBUG \\\n\t-e TESTDIRS \\\n\t-e TESTFLAGS \\\n\t-e TESTFLAGS_INTEGRATION \\\n\t-e TESTFLAGS_INTEGRATION_CLI \\\n\t-e TEST_FILTER \\\n\t-e TIMEOUT \\\n\t-e VALIDATE_REPO \\\n\t-e VALIDATE_BRANCH \\\n\t-e VALIDATE_ORIGIN_BRANCH \\\n\t-e VERSION \\\n\t-e PLATFORM \\\n\t-e DEFAULT_PRODUCT_LICENSE \\\n\t-e PRODUCT \\\n\t-e PACKAGER_NAME \\\n\t-e PAGER \\\n\t-e GIT_PAGER \\\n\t-e OTEL_EXPORTER_OTLP_ENDPOINT \\\n\t-e OTEL_EXPORTER_OTLP_PROTOCOL \\\n\t-e OTEL_SERVICE_NAME\n# note: we _cannot_ add \"-e DOCKER_BUILDTAGS\" here because even if it's unset in the shell, that would shadow the \"ENV DOCKER_BUILDTAGS\" set in our Dockerfile, which is very important for our official builds\n\n# to allow `make BIND_DIR=. shell` or `make BIND_DIR= test`\n# (default to no bind mount if DOCKER_HOST is set)\n# note: BINDDIR is supported for backwards-compatibility here\nBIND_DIR := $(if $(BINDDIR),$(BINDDIR),$(if $(DOCKER_HOST),,bundles))\n\n# DOCKER_MOUNT can be overridden, but use at your own risk!\nifndef DOCKER_MOUNT\nDOCKER_MOUNT := $(if $(BIND_DIR),-v \"$(CURDIR)/$(BIND_DIR):/go/src/github.com/docker/docker/$(BIND_DIR)\")\nDOCKER_MOUNT := $(if $(DOCKER_BINDDIR_MOUNT_OPTS),$(DOCKER_MOUNT):$(DOCKER_BINDDIR_MOUNT_OPTS),$(DOCKER_MOUNT))\n\n# This allows the test suite to be able to run without worrying about the underlying fs used by the container running the daemon (e.g. aufs-on-aufs), so long as the host running the container is running a supported fs.\n# The volume will be cleaned up when the container is removed due to `--rm`.\n# Note that `BIND_DIR` will already be set to `bundles` if `DOCKER_HOST` is not set (see above BIND_DIR line), in such case this will do nothing since `DOCKER_MOUNT` will already be set.\nDOCKER_MOUNT := $(if $(DOCKER_MOUNT),$(DOCKER_MOUNT),-v /go/src/github.com/docker/docker/bundles) -v \"$(CURDIR)/.git:/go/src/github.com/docker/docker/.git\"\n\nDOCKER_MOUNT_CACHE := -v docker-dev-cache:/root/.cache -v docker-mod-cache:/go/pkg/mod/\nDOCKER_MOUNT_CLI := $(if $(DOCKER_CLI_PATH),-v $(shell dirname $(DOCKER_CLI_PATH)):/usr/local/cli,)\nDOCKER_MOUNT_BASH_COMPLETION := $(if $(DOCKER_BASH_COMPLETION_PATH),-v $(shell dirname $(DOCKER_BASH_COMPLETION_PATH)):/usr/local/completion/bash,)\n\nifdef BIND_GIT\n\t# Gets the common .git directory (even from inside a git worktree)\n\tGITDIR := $(shell realpath $(shell git rev-parse --git-common-dir))\n\tMOUNT_GITDIR := $(if $(GITDIR),-v \"$(GITDIR):$(GITDIR)\")\nendif\n\nDOCKER_MOUNT := $(DOCKER_MOUNT) $(DOCKER_MOUNT_CACHE) $(DOCKER_MOUNT_CLI) $(DOCKER_MOUNT_BASH_COMPLETION) $(MOUNT_GITDIR)\nendif # ifndef DOCKER_MOUNT\n\n# This allows to set the docker-dev container name\nDOCKER_CONTAINER_NAME := $(if $(CONTAINER_NAME),--name $(CONTAINER_NAME),)\n\nDOCKER_IMAGE := docker-dev\nDOCKER_PORT_FORWARD := $(if $(DOCKER_PORT),-p \"$(DOCKER_PORT)\",)\nDELVE_PORT_FORWARD := $(if $(DELVE_PORT),-p \"$(DELVE_PORT)\",)\n\nDOCKER_FLAGS := $(DOCKER) run --rm --privileged $(DOCKER_CONTAINER_NAME) $(DOCKER_ENVS) $(DOCKER_MOUNT) $(DOCKER_PORT_FORWARD) $(DELVE_PORT_FORWARD)\n\nSWAGGER_DOCS_PORT ?= 9000\n\ndefine \\n\n\n\nendef\n\n# if this session isn't interactive, then we don't want to allocate a\n# TTY, which would fail, but if it is interactive, we do want to attach\n# so that the user can send e.g. ^C through.\nINTERACTIVE := $(shell [ -t 0 ] && echo 1 || echo 0)\nifeq ($(INTERACTIVE), 1)\n\tDOCKER_FLAGS += -t\nendif\n\n# on GitHub Runners input device is not a TTY but we allocate a pseudo-one,\n# otherwise keep STDIN open even if not attached if not a GitHub Runner.\nifeq ($(GITHUB_ACTIONS),true)\n\tDOCKER_FLAGS += -t\nelse\n\tDOCKER_FLAGS += -i\nendif\n\nDOCKER_RUN_DOCKER := $(DOCKER_FLAGS) \"$(DOCKER_IMAGE)\"\n\nDOCKER_BUILD_ARGS += --build-arg=GO_VERSION\nDOCKER_BUILD_ARGS += --build-arg=DOCKERCLI_VERSION\nDOCKER_BUILD_ARGS += --build-arg=DOCKERCLI_REPOSITORY\nDOCKER_BUILD_ARGS += --build-arg=DOCKERCLI_INTEGRATION_VERSION\nDOCKER_BUILD_ARGS += --build-arg=DOCKERCLI_INTEGRATION_REPOSITORY\nifdef DOCKER_SYSTEMD\nDOCKER_BUILD_ARGS += --build-arg=SYSTEMD=true\nendif\nifdef DOCKER_FIREWALLD\nDOCKER_BUILD_ARGS += --build-arg=FIREWALLD=true\nendif\n\nBUILD_OPTS := ${DOCKER_BUILD_ARGS} ${DOCKER_BUILD_OPTS}\nBUILD_CMD := $(BUILDX) build\nBAKE_CMD := $(BUILDX) bake\n\ndefault: binary\n\n.PHONY: all\nall: build ## validate all checks, build linux binaries, run all tests,\\ncross build non-linux binaries, and generate archives\n\t$(DOCKER_RUN_DOCKER) bash -c 'hack/validate/default && hack/make.sh'\n\n.PHONY: binary\nbinary: bundles ## build statically linked linux binaries\n\t$(BAKE_CMD) binary\n\n.PHONY: dynbinary\ndynbinary: bundles ## build dynamically linked linux binaries\n\t$(BAKE_CMD) dynbinary\n\n.PHONY: cross\ncross: bundles ## cross build the binaries\n\t$(BAKE_CMD) binary-cross\n\nbundles:\n\tmkdir bundles\n\n.PHONY: clean\nclean: clean-cache\n\n.PHONY: clean-cache\nclean-cache: ## remove the docker volumes that are used for caching in the dev-container\n\tdocker volume rm -f docker-dev-cache docker-mod-cache\n\n.PHONY: help\nhelp: ## this help\n\t@awk 'BEGIN {FS = \":.*?## \"} /^[a-zA-Z0-9_-]+:.*?## / {gsub(\"\\\\\\\\n\",sprintf(\"\\n%22c\",\"\"), $$2);printf \"\\033[36m%-20s\\033[0m %s\\n\", $$1, $$2}' $(MAKEFILE_LIST)\n\n.PHONY: install\ninstall: ## install the linux binaries\n\tKEEPBUNDLE=1 hack/make.sh install-binary\n\n.PHONY: run\nrun: build ## run the docker daemon in a container\n\t$(DOCKER_RUN_DOCKER) sh -c \"KEEPBUNDLE=1 hack/make.sh install-binary run\"\n \n.PHONY: build\nifeq ($(BIND_DIR), .)\nbuild: shell_target := --target=dev-base\nelse\nbuild: shell_target := --target=dev\nendif\nbuild: bundles\n\t$(BUILD_CMD) $(BUILD_OPTS) $(shell_target) --load -t \"$(DOCKER_IMAGE)\" .\n\n.PHONY: shell\nshell: build  ## start a shell inside the build env\n\t$(DOCKER_RUN_DOCKER) bash\n\n.PHONY: test\ntest: build test-unit ## run the unit, integration and docker-py tests\n\t$(DOCKER_RUN_DOCKER) hack/make.sh dynbinary test-integration test-docker-py\n\n.PHONY: test-docker-py\ntest-docker-py: build ## run the docker-py tests\n\t$(DOCKER_RUN_DOCKER) hack/make.sh dynbinary test-docker-py\n\n.PHONY: test-integration-cli\ntest-integration-cli: test-integration ## (DEPRECATED) use test-integration\n\n.PHONY: test-integration\nifneq ($(and $(TEST_SKIP_INTEGRATION),$(TEST_SKIP_INTEGRATION_CLI)),)\ntest-integration:\n\t@echo Both integrations suites skipped per environment variables\nelse\ntest-integration: build ## run the integration tests\n\t$(DOCKER_RUN_DOCKER) hack/make.sh dynbinary test-integration\nendif\n\n.PHONY: test-integration-flaky\ntest-integration-flaky: build ## run the stress test for all new integration tests\n\t$(DOCKER_RUN_DOCKER) hack/make.sh dynbinary test-integration-flaky\n\n.PHONY: test-unit\ntest-unit: build ## run the unit tests\n\t$(DOCKER_RUN_DOCKER) hack/test/unit\n\n.PHONY: validate\nvalidate: build ## validate DCO, Seccomp profile generation, gofmt,\\n./pkg/ isolation, golint, tests, tomls, go vet and vendor\n\t$(DOCKER_RUN_DOCKER) hack/validate/all\n\n.PHONY: validate-generate-files\nvalidate-generate-files:\n\t$(BUILD_CMD) --target \"validate\" \\\n\t\t--output \"type=cacheonly\" \\\n\t\t--file \"./hack/dockerfiles/generate-files.Dockerfile\" .\n\n.PHONY: validate-%\nvalidate-%: build ## validate specific check\n\t$(DOCKER_RUN_DOCKER) hack/validate/$*\n\n.PHONY: win\nwin: bundles ## cross build the binary for windows\n\t$(BAKE_CMD) --set *.platform=windows/amd64 binary\n\n.PHONY: swagger-gen\nswagger-gen:\n\tdocker run --rm -v $(PWD):/go/src/github.com/docker/docker \\\n\t\t-w /go/src/github.com/docker/docker \\\n\t\t--entrypoint hack/generate-swagger-api.sh \\\n\t\t-e GOPATH=/go \\\n\t\tquay.io/goswagger/swagger:0.7.4\n\n.PHONY: swagger-docs\nswagger-docs: ## preview the API documentation\n\t@echo \"API docs preview will be running at http://localhost:$(SWAGGER_DOCS_PORT)\"\n\t@docker run --rm -v $(PWD)/api/swagger.yaml:/usr/share/nginx/html/swagger.yaml \\\n\t\t-e 'REDOC_OPTIONS=hide-hostname=\"true\" lazy-rendering' \\\n\t\t-p $(SWAGGER_DOCS_PORT):80 \\\n\t\tbfirsh/redoc:1.14.0\n\n.PHONY: generate-files\ngenerate-files:\n\t$(eval $@_TMP_OUT := $(shell mktemp -d -t moby-output.XXXXXXXXXX))\n\t@if [ -z \"$($@_TMP_OUT)\" ]; then \\\n\t\techo \"Temp dir is not set\"; \\\n\t\texit 1; \\\n\tfi\n\t$(BUILD_CMD) --target \"update\" \\\n\t\t--output \"type=local,dest=$($@_TMP_OUT)\" \\\n\t\t--file \"./hack/dockerfiles/generate-files.Dockerfile\" .\n\tcp -R \"$($@_TMP_OUT)\"/. .\n\trm -rf \"$($@_TMP_OUT)\"/*\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.626953125,
          "content": "Docker\nCopyright 2012-2017 Docker, Inc.\n\nThis product includes software developed at Docker, Inc. (https://www.docker.com).\n\nThis product contains software (https://github.com/creack/pty) developed\nby Keith Rarick, licensed under the MIT License.\n\nThe following is courtesy of our legal counsel:\n\n\nUse and transfer of Docker may be subject to certain restrictions by the\nUnited States and other governments.\nIt is your responsibility to ensure that your use and/or transfer does not\nviolate applicable laws.\n\nFor more information, please see https://www.bis.doc.gov\n\nSee also https://www.apache.org/dev/crypto.html and/or seek legal counsel.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.826171875,
          "content": "The Moby Project\n================\n\n[![PkgGoDev](https://pkg.go.dev/badge/github.com/docker/docker)](https://pkg.go.dev/github.com/docker/docker)\n[![Go Report Card](https://goreportcard.com/badge/github.com/docker/docker)](https://goreportcard.com/report/github.com/docker/docker)\n[![OpenSSF Scorecard](https://api.scorecard.dev/projects/github.com/moby/moby/badge)](https://scorecard.dev/viewer/?uri=github.com/moby/moby)\n\n\n![Moby Project logo](docs/static_files/moby-project-logo.png \"The Moby Project\")\n\nMoby is an open-source project created by Docker to enable and accelerate software containerization.\n\nIt provides a \"Lego set\" of toolkit components, the framework for assembling them into custom container-based systems, and a place for all container enthusiasts and professionals to experiment and exchange ideas.\nComponents include container build tools, a container registry, orchestration tools, a runtime and more, and these can be used as building blocks in conjunction with other tools and projects.\n\n## Principles\n\nMoby is an open project guided by strong principles, aiming to be modular, flexible and without too strong an opinion on user experience.\nIt is open to the community to help set its direction.\n\n- Modular: the project includes lots of components that have well-defined functions and APIs that work together.\n- Batteries included but swappable: Moby includes enough components to build fully featured container systems, but its modular architecture ensures that most of the components can be swapped by different implementations.\n- Usable security: Moby provides secure defaults without compromising usability.\n- Developer focused: The APIs are intended to be functional and useful to build powerful tools.\nThey are not necessarily intended as end user tools but as components aimed at developers.\nDocumentation and UX is aimed at developers not end users.\n\n## Audience\n\nThe Moby Project is intended for engineers, integrators and enthusiasts looking to modify, hack, fix, experiment, invent and build systems based on containers.\nIt is not for people looking for a commercially supported system, but for people who want to work and learn with open source code.\n\n## Relationship with Docker\n\nThe components and tools in the Moby Project are initially the open source components that Docker and the community have built for the Docker Project.\nNew projects can be added if they fit with the community goals. Docker is committed to using Moby as the upstream for the Docker Product.\nHowever, other projects are also encouraged to use Moby as an upstream, and to reuse the components in diverse ways, and all these uses will be treated in the same way. External maintainers and contributors are welcomed.\n\nThe Moby project is not intended as a location for support or feature requests for Docker products, but as a place for contributors to work on open source code, fix bugs, and make the code more useful.\nThe releases are supported by the maintainers, community and users, on a best efforts basis only. For customers who want enterprise or commercial support, [Docker Desktop](https://www.docker.com/products/docker-desktop/) and [Mirantis Container Runtime](https://www.mirantis.com/software/mirantis-container-runtime/) are the appropriate products for these use cases.\n\n-----\n\nLegal\n=====\n\n*Brought to you courtesy of our legal counsel. For more context,\nplease see the [NOTICE](https://github.com/moby/moby/blob/master/NOTICE) document in this repo.*\n\nUse and transfer of Moby may be subject to certain restrictions by the\nUnited States and other governments.\n\nIt is your responsibility to ensure that your use and/or transfer does not\nviolate applicable laws.\n\nFor more information, please see https://www.bis.doc.gov\n\nLicensing\n=========\nMoby is licensed under the Apache License, Version 2.0. See\n[LICENSE](https://github.com/moby/moby/blob/master/LICENSE) for the full\nlicense text.\n"
        },
        {
          "name": "ROADMAP.md",
          "type": "blob",
          "size": 5.6455078125,
          "content": "Moby Project Roadmap\n====================\n\n### How should I use this document?\n\nThis document provides description of items that the project decided to prioritize. This should\nserve as a reference point for Moby contributors to understand where the project is going, and\nhelp determine if a contribution could be conflicting with some longer term plans.\n\nThe fact that a feature isn't listed here doesn't mean that a patch for it will automatically be\nrefused! We are always happy to receive patches for new cool features we haven't thought about,\nor didn't judge to be a priority. Please however understand that such patches might take longer\nfor us to review.\n\n### How can I help?\n\nShort term objectives are listed in\n[Issues](https://github.com/moby/moby/issues?q=is%3Aopen+is%3Aissue+label%3Aroadmap). Our\ngoal is to split down the workload in such way that anybody can jump in and help. Please comment on\nissues if you want to work on it to avoid duplicating effort! Similarly, if a maintainer is already\nassigned on an issue you'd like to participate in, pinging him on GitHub to offer your help is\nthe best way to go.\n\n### How can I add something to the roadmap?\n\nThe roadmap process is new to the Moby Project: we are only beginning to structure and document the\nproject objectives. Our immediate goal is to be more transparent, and work with our community to\nfocus our efforts on fewer prioritized topics.\n\nWe hope to offer in the near future a process allowing anyone to propose a topic to the roadmap, but\nwe are not quite there yet. For the time being, it is best to discuss with the maintainers on an\nissue, in the Slack channel, or in person at the Moby Summits that happen every few months.\n\n# 1. Features and refactoring\n\n## 1.1 Runtime improvements\n\nOver time we have accumulated a lot of functionality in the container runtime\naspect of Moby while also growing in other areas. Much of the container runtime\npieces are now duplicated work available in other, lower level components such\nas [containerd](https://containerd.io).\n\nMoby currently only utilizes containerd for basic runtime state management, e.g. starting\nand stopping a container, which is what the pre-containerd 1.0 daemon provided.\nNow that containerd is a full-fledged container runtime which supports full\ncontainer life-cycle management, we would like to start relying more on containerd\nand removing the bits in Moby which are now duplicated. This will necessitate\na significant effort to refactor and even remove large parts of Moby's codebase.\n\nTracking issues:\n\n- [#38043](https://github.com/moby/moby/issues/38043) Proposal: containerd image integration\n\n## 1.2 Image Builder\n\nWork is ongoing to integrate [BuildKit](https://github.com/moby/buildkit) into\nMoby and replace the \"v0\" build implementation. Buildkit offers better cache\nmanagement, parallelizable build steps, and better extensibility while also\nkeeping builds portable, a chief tenent of Moby's builder.\n\nUpon completion of this effort, users will have a builder that performs better\nwhile also being more extensible, enabling users to provide their own custom\nsyntax which can be either Dockerfile-like or something completely different.\n\nSee [buildpacks on buildkit](https://github.com/tonistiigi/buildkit-pack) as an\nexample of this extensibility.\n\nNew features for the builder and Dockerfile should be implemented first in the\nBuildKit backend using an external Dockerfile implementation from the container\nimages. This allows everyone to test and evaluate the feature without upgrading\ntheir daemon. New features should go to the experimental channel first, and can be\npart of the `docker/dockerfile:experimental` image. From there they graduate to\n`docker/dockerfile:latest` and binary releases. The Dockerfile frontend source\ncode is temporarily located at\n[https://github.com/moby/buildkit/tree/master/frontend/dockerfile](https://github.com/moby/buildkit/tree/master/frontend/dockerfile)\nwith separate new features defined with go build tags.\n\nTracking issues:\n\n- [#32925](https://github.com/moby/moby/issues/32925) discussion: builder future: buildkit\n\n## 1.3 Rootless Mode\n\nRunning the daemon requires elevated privileges for many tasks. We would like to\nsupport running the daemon as a normal, unprivileged user without requiring `suid`\nbinaries.\n\nTracking issues:\n\n- [#37375](https://github.com/moby/moby/issues/37375) Proposal: allow running `dockerd` as an unprivileged user (aka rootless mode)\n\n## 1.4 Testing\n\nMoby has many tests, both unit and integration. Moby needs more tests which can\ncover the full spectrum functionality and edge cases out there.\n\nTests in the `integration-cli` folder should also be migrated into (both in\nlocation and style) the `integration` folder. These newer tests are simpler to\nrun in isolation, simpler to read, simpler to write, and more fully exercise the\nAPI. Meanwhile tests of the docker CLI should generally live in docker/cli.\n\nTracking issues:\n\n- [#32866](https://github.com/moby/moby/issues/32866) Replace integration-cli suite with API test suite\n\n## 1.5 Internal decoupling\n\nA lot of work has been done in trying to decouple Moby internals. This process of creating\nstandalone projects with a well defined function that attract a dedicated community should continue.\nAs well as integrating `containerd` we would like to integrate [BuildKit](https://github.com/moby/buildkit)\nas the next standalone component.\nWe see gRPC as the natural communication layer between decoupled components.\n\nIn addition to pushing out large components into other projects, much of the\ninternal code structure, and in particular the\n[\"Daemon\"](https://godoc.org/github.com/docker/docker/daemon#Daemon) object,\nshould be split into smaller, more manageable, and more testable components.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.7158203125,
          "content": "# Security Policy\n\nThe maintainers of the Moby project take security seriously. If you discover\na security issue, please bring it to their attention right away!\n\n## Reporting a Vulnerability\n\nPlease **DO NOT** file a public issue, instead send your report privately\nto [security@docker.com](mailto:security@docker.com).\n\nReporter(s) can expect a response within 72 hours, acknowledging the issue was\nreceived.\n\n## Review Process\n\nAfter receiving the report, an initial triage and technical analysis is\nperformed to confirm the report and determine its scope. We may request\nadditional information in this stage of the process.\n\nOnce a reviewer has confirmed the relevance of the report, a draft security\nadvisory will be created on GitHub. The draft advisory will be used to discuss\nthe issue with maintainers, the reporter(s), and where applicable, other\naffected parties under embargo.\n\nIf the vulnerability is accepted, a timeline for developing a patch, public\ndisclosure, and patch release will be determined. If there is an embargo period\non public disclosure before the patch release, the reporter(s) are expected to\nparticipate in the discussion of the timeline and abide by agreed upon dates\nfor public disclosure.\n\n## Accreditation\n\nSecurity reports are greatly appreciated and we will publicly thank you,\nalthough we will keep your name confidential if you request it. We also like to\nsend gifts - if you're into swag, make sure to let us know. We do not currently\noffer a paid security bounty program at this time.\n\n## Supported Versions\n\nThis project uses long-lived branches to maintain releases. Refer to\n[BRANCHES-AND-TAGS.md](project/BRANCHES-AND-TAGS.md) in the default branch to\nlearn about the current maintenance status of each branch.\n"
        },
        {
          "name": "TESTING.md",
          "type": "blob",
          "size": 4.4658203125,
          "content": "# Testing\n\nThis document contains the Moby code testing guidelines. It should answer any \nquestions you may have as an aspiring Moby contributor.\n\n## Test suites\n\nMoby has two test suites (and one legacy test suite):\n\n* Unit tests - use standard `go test` and\n  [gotest.tools/assert](https://godoc.org/gotest.tools/assert) assertions. They are located in\n  the package they test. Unit tests should be fast and test only their own \n  package.\n* API integration tests - use standard `go test` and\n  [gotest.tools/assert](https://godoc.org/gotest.tools/assert) assertions. They are located in\n  `./integration/<component>` directories, where `component` is: container,\n  image, volume, etc. These tests perform HTTP requests to an API endpoint and\n  check the HTTP response and daemon state after the call.\n\nThe legacy test suite `integration-cli/` is deprecated. No new tests will be \nadded to this suite. Any tests in this suite which require updates should be \nported to either the unit test suite or the new API integration test suite.\n\n## Writing new tests\n\nMost code changes will fall into one of the following categories.\n\n### Writing tests for new features\n\nNew code should be covered by unit tests. If the code is difficult to test with\nunit tests, then that is a good sign that it should be refactored to make it\neasier to reuse and maintain. Consider accepting unexported interfaces instead\nof structs so that fakes can be provided for dependencies.\n\nIf the new feature includes a completely new API endpoint then a new API \nintegration test should be added to cover the success case of that endpoint.\n\nIf the new feature does not include a completely new API endpoint consider \nadding the new API fields to the existing test for that endpoint. A new \nintegration test should **not** be added for every new API field or API error \ncase. Error cases should be handled by unit tests.\n\n### Writing tests for bug fixes\n\nBugs fixes should include a unit test case which exercises the bug.\n\nA bug fix may also include new assertions in existing integration tests for the\nAPI endpoint.\n\n### Writing new integration tests\n\nNote the `integration-cli` tests are deprecated; new tests will be rejected by\nthe CI.\n\nInstead, implement new tests under `integration/`.\n\n### Integration tests environment considerations\n\nWhen adding new tests or modifying existing tests under `integration/`, testing\nenvironment should be properly considered. `skip.If` from \n[gotest.tools/skip](https://godoc.org/gotest.tools/skip) can be used to make the \ntest run conditionally. Full testing environment conditions can be found at \n[environment.go](https://github.com/moby/moby/blob/6b6eeed03b963a27085ea670f40cd5ff8a61f32e/testutil/environment/environment.go)\n\nHere is a quick example. If the test needs to interact with a docker daemon on \nthe same host, the following condition should be checked within the test code\n\n```go\nskip.If(t, testEnv.IsRemoteDaemon())\n// your integration test code\n```\n\nIf a remote daemon is detected, the test will be skipped.\n\n## Running tests\n\n### Unit Tests\n\nTo run the unit test suite:\n\n```\nmake test-unit\n```\n\nor `hack/test/unit` from inside a `BINDDIR=. make shell` container or properly\nconfigured environment.\n\nThe following environment variables may be used to run a subset of tests:\n\n* `TESTDIRS` - paths to directories to be tested, defaults to `./...`\n* `TESTFLAGS` - flags passed to `go test`, to run tests which match a pattern\n  use `TESTFLAGS=\"-test.run TestNameOrPrefix\"`\n\n### Integration Tests\n\nTo run the integration test suite:\n\n```\nmake test-integration\n```\n\nThis make target runs both the \"integration\" suite and the \"integration-cli\"\nsuite.\n\nYou can specify which integration test dirs to build and run by specifying\nthe list of dirs in the TEST_INTEGRATION_DIR environment variable.\n\nYou can also explicitly skip either suite by setting (any value) in\nTEST_SKIP_INTEGRATION and/or TEST_SKIP_INTEGRATION_CLI environment variables.\n\nFlags specific to each suite can be set in the TESTFLAGS_INTEGRATION and\nTESTFLAGS_INTEGRATION_CLI environment variables.\n\nIf all you want is to specify a test filter to run, you can set the\n`TEST_FILTER` environment variable. This ends up getting passed directly to `go\ntest -run` (or `go test -check-f`, depending on the test suite). It will also\nautomatically set the other above mentioned environment variables accordingly.\n\n### Go Version\n\nYou can change a version of golang used for building stuff that is being tested\nby setting `GO_VERSION` variable, for example:\n\n```\nmake GO_VERSION=1.12.8 test\n```\n"
        },
        {
          "name": "VENDORING.md",
          "type": "blob",
          "size": 1.90625,
          "content": "# Vendoring policies\n\nThis document outlines recommended Vendoring policies for Docker repositories.\n(Example, libnetwork is a Docker repo and logrus is not.)\n\n## Vendoring using tags\n\nCommit ID based vendoring provides little/no information about the updates\nvendored. To fix this, vendors will now require that repositories use annotated\ntags along with commit ids to snapshot commits. Annotated tags by themselves\nare not sufficient, since the same tag can be force updated to reference\ndifferent commits.\n\nEach tag should:\n- Follow Semantic Versioning rules (refer to section on \"Semantic Versioning\")\n- Have a corresponding entry in the change tracking document.\n\nEach repo should:\n- Have a change tracking document between tags/releases. Ex: CHANGELOG.md,\ngithub releases file.\n\nThe goal here is for consuming repos to be able to use the tag version and\nchangelog updates to determine whether the vendoring will cause any breaking or\nbackward incompatible changes. This also means that repos can specify having\ndependency on a package of a specific version or greater up to the next major\nrelease, without encountering breaking changes.\n\n## Semantic Versioning\nAnnotated version tags should follow [Semantic Versioning](http://semver.org) policies:\n\n\"Given a version number MAJOR.MINOR.PATCH, increment the:\n\n   1. MAJOR version when you make incompatible API changes,\n   2. MINOR version when you add functionality in a backwards-compatible manner, and\n   3. PATCH version when you make backwards-compatible bug fixes.\n\nAdditional labels for pre-release and build metadata are available as extensions\nto the MAJOR.MINOR.PATCH format.\"\n\n## Vendoring cadence\nIn order to avoid huge vendoring changes, it is recommended to have a regular\ncadence for vendoring updates. e.g. monthly.\n\n## Pre-merge vendoring tests\nAll related repos will be vendored into docker/docker.\nCI on docker/docker should catch any breaking changes involving multiple repos.\n"
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "builder",
          "type": "tree",
          "content": null
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.3037109375,
          "content": "comment: false\n\ngithub_checks:\n  annotations: false\n\ncoverage:\n  status:\n    patch: false\n    # project will give us the diff in the total code coverage between a commit\n    # and its parent\n    project:\n      default:\n        target: auto\n        threshold: \"15%\"\n    changes: false\n\nignore:\n  - \"vendor/**/*\"\n"
        },
        {
          "name": "container",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "daemon",
          "type": "tree",
          "content": null
        },
        {
          "name": "distribution",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-bake.hcl",
          "type": "blob",
          "size": 3.8056640625,
          "content": "variable \"DOCKER_DEBUG\" {\n  default = \"\"\n}\nvariable \"DOCKER_STATIC\" {\n  default = \"1\"\n}\nvariable \"DOCKER_LDFLAGS\" {\n  default = \"\"\n}\nvariable \"DOCKER_BUILDTAGS\" {\n  default = \"\"\n}\nvariable \"DOCKER_GITCOMMIT\" {\n  default = null\n}\n\n# Docker version such as 23.0.0-dev. Automatically generated through Git ref.\nvariable \"VERSION\" {\n  default = \"\"\n}\n\n# The platform name, such as \"Docker Engine - Community\".\nvariable \"PLATFORM\" {\n  default = \"\"\n}\n\n# The product name, used to set version.ProductName, which is used to set\n# BuildKit's ExportedProduct variable in order to show useful error messages\n# to users when a certain version of the product doesn't support a BuildKit feature.\nvariable \"PRODUCT\" {\n  default = \"\"\n}\n\n# Sets the version.DefaultProductLicense string, such as \"Community Engine\".\n# This field can contain a summary of the product license of the daemon if a\n# commercial license has been applied to the daemon.\nvariable \"DEFAULT_PRODUCT_LICENSE\" {\n  default = \"\"\n}\n\n# The name of the packager (e.g. \"Docker, Inc.\"). This used to set CompanyName\n# in the manifest.\nvariable \"PACKAGER_NAME\" {\n  default = \"\"\n}\n\n# Special target: https://github.com/docker/metadata-action#bake-definition\ntarget \"docker-metadata-action\" {\n  tags = [\"moby-bin:local\"]\n}\n\n# Defines the output folder\nvariable \"DESTDIR\" {\n  default = \"\"\n}\nfunction \"bindir\" {\n  params = [defaultdir]\n  result = DESTDIR != \"\" ? DESTDIR : \"./bundles/${defaultdir}\"\n}\n\ntarget \"_common\" {\n  args = {\n    BUILDKIT_CONTEXT_KEEP_GIT_DIR = 1\n    DOCKER_DEBUG = DOCKER_DEBUG\n    DOCKER_STATIC = DOCKER_STATIC\n    DOCKER_LDFLAGS = DOCKER_LDFLAGS\n    DOCKER_BUILDTAGS = DOCKER_BUILDTAGS\n    DOCKER_GITCOMMIT = DOCKER_GITCOMMIT\n    VERSION = VERSION\n    PLATFORM = PLATFORM\n    PRODUCT = PRODUCT\n    DEFAULT_PRODUCT_LICENSE = DEFAULT_PRODUCT_LICENSE\n    PACKAGER_NAME = PACKAGER_NAME\n  }\n}\n\ngroup \"default\" {\n  targets = [\"binary\"]\n}\n\ntarget \"_platforms\" {\n  platforms = [\n    \"linux/amd64\",\n    \"linux/arm/v5\",\n    \"linux/arm/v6\",\n    \"linux/arm/v7\",\n    \"linux/arm64\",\n    \"linux/ppc64le\",\n    \"linux/s390x\",\n    \"windows/amd64\"\n  ]\n}\n\n#\n# build dockerd and docker-proxy\n#\n\ntarget \"binary\" {\n  inherits = [\"_common\"]\n  target = \"binary\"\n  output = [bindir(DOCKER_STATIC == \"1\" ? \"binary\" : \"dynbinary\")]\n}\n\ntarget \"dynbinary\" {\n  inherits = [\"binary\"]\n  output = [bindir(\"dynbinary\")]\n  args = {\n    DOCKER_STATIC = \"0\"\n  }\n}\n\ntarget \"binary-cross\" {\n  inherits = [\"binary\", \"_platforms\"]\n}\n\ntarget \"binary-smoketest\" {\n  inherits = [\"_common\"]\n  target = \"smoketest\"\n  output = [\"type=cacheonly\"]\n  platforms = [\n    \"linux/amd64\",\n    \"linux/arm/v6\",\n    \"linux/arm/v7\",\n    \"linux/arm64\",\n    \"linux/ppc64le\",\n    \"linux/s390x\"\n  ]\n}\n\n#\n# same as binary but with extra tools as well (containerd, runc, ...)\n#\n\ntarget \"all\" {\n  inherits = [\"_common\"]\n  target = \"all\"\n  output = [bindir(DOCKER_STATIC == \"1\" ? \"binary\" : \"dynbinary\")]\n}\n\ntarget \"all-cross\" {\n  inherits = [\"all\", \"_platforms\"]\n}\n\n#\n# bin image\n#\n\ntarget \"bin-image\" {\n  inherits = [\"all\", \"docker-metadata-action\"]\n  output = [\"type=docker\"]\n}\n\ntarget \"bin-image-cross\" {\n  inherits = [\"bin-image\"]\n  output = [\"type=image\"]\n  platforms = [\n    \"linux/amd64\",\n    \"linux/arm/v6\",\n    \"linux/arm/v7\",\n    \"linux/arm64\",\n    \"linux/ppc64le\",\n    \"linux/s390x\",\n    \"windows/amd64\"\n  ]\n}\n\n#\n# dev\n#\n\nvariable \"SYSTEMD\" {\n  default = \"false\"\n}\n\nvariable \"FIREWALLD\" {\n  default = \"false\"\n}\n\ntarget \"dev\" {\n  inherits = [\"_common\"]\n  target = \"dev\"\n  args = {\n    SYSTEMD = SYSTEMD\n    FIREWALLD = FIREWALLD\n  }\n  tags = [\"docker-dev\"]\n  output = [\"type=docker\"]\n}\n\n#\n# govulncheck\n#\n\nvariable \"GOVULNCHECK_FORMAT\" {\n  default = null\n}\n\ntarget \"govulncheck\" {\n  inherits = [\"_common\"]\n  dockerfile = \"./hack/dockerfiles/govulncheck.Dockerfile\"\n  target = \"output\"\n  args = {\n    FORMAT = GOVULNCHECK_FORMAT\n  }\n  no-cache-filter = [\"run\"]\n  output = [\"${DESTDIR}\"]\n}\n"
        },
        {
          "name": "dockerversion",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "errdefs",
          "type": "tree",
          "content": null
        },
        {
          "name": "hack",
          "type": "tree",
          "content": null
        },
        {
          "name": "image",
          "type": "tree",
          "content": null
        },
        {
          "name": "integration-cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "integration",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "layer",
          "type": "tree",
          "content": null
        },
        {
          "name": "libcontainerd",
          "type": "tree",
          "content": null
        },
        {
          "name": "libnetwork",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "oci",
          "type": "tree",
          "content": null
        },
        {
          "name": "opts",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "profiles",
          "type": "tree",
          "content": null
        },
        {
          "name": "project",
          "type": "tree",
          "content": null
        },
        {
          "name": "quota",
          "type": "tree",
          "content": null
        },
        {
          "name": "reference",
          "type": "tree",
          "content": null
        },
        {
          "name": "registry",
          "type": "tree",
          "content": null
        },
        {
          "name": "reports",
          "type": "tree",
          "content": null
        },
        {
          "name": "restartmanager",
          "type": "tree",
          "content": null
        },
        {
          "name": "runconfig",
          "type": "tree",
          "content": null
        },
        {
          "name": "testutil",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor.mod",
          "type": "blob",
          "size": 11.4208984375,
          "content": "// 'vendor.mod' enables use of 'go mod vendor' to managed 'vendor/' directory.\n// There is no 'go.mod' file, as the project has not yet completed the migration\n// to a Go module. This project should be built in GOPATH mode, and not module mode,\n// until the migration is complete and this file becomes 'go.mod.'\n\nmodule github.com/docker/docker\n\ngo 1.22.0\n\nrequire (\n\tcloud.google.com/go/compute/metadata v0.3.0\n\tcloud.google.com/go/logging v1.9.0\n\tcode.cloudfoundry.org/clock v1.1.0\n\tdario.cat/mergo v1.0.1\n\tgithub.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24\n\tgithub.com/Azure/go-ansiterm v0.0.0-20250102033503-faa5f7b0171c\n\tgithub.com/Graylog2/go-gelf v0.0.0-20191017102106-1550ee647df0\n\tgithub.com/Microsoft/go-winio v0.6.2\n\tgithub.com/Microsoft/hcsshim v0.12.8\n\tgithub.com/RackSec/srslog v0.0.0-20180709174129-a4725f04ec91\n\tgithub.com/aws/aws-sdk-go-v2 v1.24.1\n\tgithub.com/aws/aws-sdk-go-v2/config v1.26.6\n\tgithub.com/aws/aws-sdk-go-v2/credentials v1.16.16\n\tgithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.14.11\n\tgithub.com/aws/aws-sdk-go-v2/service/cloudwatchlogs v1.32.0\n\tgithub.com/aws/smithy-go v1.19.0\n\tgithub.com/cloudflare/cfssl v1.6.4\n\tgithub.com/containerd/cgroups/v3 v3.0.5\n\tgithub.com/containerd/containerd v1.7.25\n\tgithub.com/containerd/containerd/api v1.8.0\n\tgithub.com/containerd/continuity v0.4.5\n\tgithub.com/containerd/errdefs v0.3.0\n\tgithub.com/containerd/fifo v1.1.0\n\tgithub.com/containerd/log v0.1.0\n\tgithub.com/containerd/platforms v0.2.1\n\tgithub.com/containerd/typeurl/v2 v2.2.3\n\tgithub.com/coreos/go-systemd/v22 v22.5.0\n\tgithub.com/cpuguy83/tar2go v0.3.1\n\tgithub.com/creack/pty v1.1.21\n\tgithub.com/deckarep/golang-set/v2 v2.3.0\n\tgithub.com/distribution/reference v0.6.0\n\tgithub.com/docker/distribution v2.8.3+incompatible\n\tgithub.com/docker/go-connections v0.5.0\n\tgithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c\n\tgithub.com/docker/go-metrics v0.0.1\n\tgithub.com/docker/go-units v0.5.0\n\tgithub.com/docker/libtrust v0.0.0-20150526203908-9cbd2a1374f4\n\tgithub.com/fluent/fluent-logger-golang v1.9.0\n\tgithub.com/godbus/dbus/v5 v5.1.0\n\tgithub.com/gogo/protobuf v1.3.2\n\tgithub.com/golang/gddo v0.0.0-20190904175337-72a348e765d2\n\tgithub.com/golang/protobuf v1.5.4\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/gorilla/mux v1.8.1\n\tgithub.com/hashicorp/go-immutable-radix/v2 v2.1.0\n\tgithub.com/hashicorp/go-memdb v1.3.2\n\tgithub.com/hashicorp/go-multierror v1.1.1\n\tgithub.com/hashicorp/memberlist v0.4.0\n\tgithub.com/hashicorp/serf v0.8.5\n\tgithub.com/ishidawataru/sctp v0.0.0-20230406120618-7ff4192f6ff2\n\tgithub.com/klauspost/compress v1.17.11\n\tgithub.com/miekg/dns v1.1.57\n\tgithub.com/mistifyio/go-zfs/v3 v3.0.1\n\tgithub.com/mitchellh/copystructure v1.2.0\n\tgithub.com/moby/buildkit v0.18.2\n\tgithub.com/moby/docker-image-spec v1.3.1\n\tgithub.com/moby/ipvs v1.1.0\n\tgithub.com/moby/locker v1.0.1\n\tgithub.com/moby/patternmatcher v0.6.0\n\tgithub.com/moby/pubsub v1.0.0\n\tgithub.com/moby/swarmkit/v2 v2.0.0-20250103191802-8c1959736554\n\tgithub.com/moby/sys/mount v0.3.4\n\tgithub.com/moby/sys/mountinfo v0.7.2\n\tgithub.com/moby/sys/reexec v0.1.0\n\tgithub.com/moby/sys/sequential v0.6.0\n\tgithub.com/moby/sys/signal v0.7.1\n\tgithub.com/moby/sys/symlink v0.3.0\n\tgithub.com/moby/sys/user v0.3.0\n\tgithub.com/moby/sys/userns v0.1.0\n\tgithub.com/moby/term v0.5.2\n\tgithub.com/morikuni/aec v1.0.0\n\tgithub.com/opencontainers/go-digest v1.0.0\n\tgithub.com/opencontainers/image-spec v1.1.0\n\tgithub.com/opencontainers/runc v1.2.3\n\tgithub.com/opencontainers/runtime-spec v1.2.0\n\tgithub.com/opencontainers/selinux v1.11.1\n\tgithub.com/pelletier/go-toml v1.9.5\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/prometheus/client_golang v1.20.5\n\tgithub.com/rootless-containers/rootlesskit/v2 v2.3.1\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/spf13/cobra v1.8.1\n\tgithub.com/spf13/pflag v1.0.5\n\tgithub.com/tonistiigi/go-archvariant v1.0.0\n\tgithub.com/vbatts/tar-split v0.11.5\n\tgithub.com/vishvananda/netlink v1.3.1-0.20240922070040-084abd93d350\n\tgithub.com/vishvananda/netns v0.0.5\n\tgo.etcd.io/bbolt v1.3.11\n\tgo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.53.0\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0\n\tgo.opentelemetry.io/otel v1.28.0\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.28.0\n\tgo.opentelemetry.io/otel/metric v1.28.0\n\tgo.opentelemetry.io/otel/sdk v1.28.0\n\tgo.opentelemetry.io/otel/trace v1.28.0\n\tgolang.org/x/mod v0.22.0\n\tgolang.org/x/net v0.33.0\n\tgolang.org/x/sync v0.10.0\n\tgolang.org/x/sys v0.28.0\n\tgolang.org/x/text v0.21.0\n\tgolang.org/x/time v0.6.0\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20240701130421-f6361c86f094\n\tgoogle.golang.org/grpc v1.66.3\n\tgoogle.golang.org/protobuf v1.35.2\n\tgotest.tools/v3 v3.5.1\n\tresenje.org/singleflight v0.4.3\n\ttags.cncf.io/container-device-interface v0.8.0\n)\n\nrequire (\n\tcloud.google.com/go v0.112.0 // indirect\n\tcloud.google.com/go/longrunning v0.5.4 // indirect\n\tgithub.com/AdamKorcz/go-118-fuzz-build v0.0.0-20230306123547-8075edf89bb0 // indirect\n\tgithub.com/agext/levenshtein v1.2.3 // indirect\n\tgithub.com/anchore/go-struct-converter v0.0.0-20221118182256-c68fdcfa2092 // indirect\n\tgithub.com/armon/circbuf v0.0.0-20190214190532-5111143e8da2 // indirect\n\tgithub.com/armon/go-metrics v0.4.1 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.5.4 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/configsources v1.2.10 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.5.10 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/ini v1.7.3 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.10.4 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.10.10 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sso v1.18.7 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.21.7 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sts v1.26.7 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/bits-and-blooms/bitset v1.13.0 // indirect\n\tgithub.com/bmizerany/assert v0.0.0-20160611221934-b7ed37b82869 // indirect\n\tgithub.com/cenkalti/backoff/v4 v4.3.0 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/cilium/ebpf v0.16.0 // indirect\n\tgithub.com/container-storage-interface/spec v1.5.0 // indirect\n\tgithub.com/containerd/console v1.0.4 // indirect\n\tgithub.com/containerd/go-cni v1.1.10 // indirect\n\tgithub.com/containerd/go-runc v1.1.0 // indirect\n\tgithub.com/containerd/nydus-snapshotter v0.14.0 // indirect\n\tgithub.com/containerd/stargz-snapshotter/estargz v0.15.1 // indirect\n\tgithub.com/containerd/ttrpc v1.2.5 // indirect\n\tgithub.com/containernetworking/cni v1.2.2 // indirect\n\tgithub.com/containernetworking/plugins v1.5.1 // indirect\n\tgithub.com/cyphar/filepath-securejoin v0.3.5 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/dimchansky/utfbom v1.1.1 // indirect\n\tgithub.com/dustin/go-humanize v1.0.0 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/fernet/fernet-go v0.0.0-20211208181803-9f70042a33ee // indirect\n\tgithub.com/fsnotify/fsnotify v1.6.0 // indirect\n\tgithub.com/go-logr/logr v1.4.2 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/gofrs/flock v0.12.1 // indirect\n\tgithub.com/golang-jwt/jwt/v5 v5.2.1 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/google/btree v1.1.2 // indirect\n\tgithub.com/google/certificate-transparency-go v1.1.4 // indirect\n\tgithub.com/google/s2a-go v0.1.7 // indirect\n\tgithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510 // indirect\n\tgithub.com/googleapis/enterprise-certificate-proxy v0.3.2 // indirect\n\tgithub.com/googleapis/gax-go/v2 v2.12.0 // indirect\n\tgithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0 // indirect\n\tgithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 // indirect\n\tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n\tgithub.com/hashicorp/go-immutable-radix v1.3.1 // indirect\n\tgithub.com/hashicorp/go-msgpack v0.5.5 // indirect\n\tgithub.com/hashicorp/go-sockaddr v1.0.2 // indirect\n\tgithub.com/hashicorp/golang-lru v0.5.4 // indirect\n\tgithub.com/hashicorp/golang-lru/v2 v2.0.7 // indirect\n\tgithub.com/in-toto/in-toto-golang v0.5.0 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/jmoiron/sqlx v1.3.3 // indirect\n\tgithub.com/mitchellh/hashstructure/v2 v2.0.2 // indirect\n\tgithub.com/mitchellh/reflectwalk v1.0.2 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/opencontainers/runtime-tools v0.9.1-0.20221107090550-2e043c6bd626 // indirect\n\tgithub.com/package-url/packageurl-go v0.1.1-0.20220428063043-89078438f170 // indirect\n\tgithub.com/philhofer/fwd v1.1.2 // indirect\n\tgithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/prometheus/client_model v0.6.1 // indirect\n\tgithub.com/prometheus/common v0.55.0 // indirect\n\tgithub.com/prometheus/procfs v0.15.1 // indirect\n\tgithub.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529 // indirect\n\tgithub.com/secure-systems-lab/go-securesystemslib v0.4.0 // indirect\n\tgithub.com/shibumi/go-pathspec v1.3.0 // indirect\n\tgithub.com/spdx/tools-golang v0.5.3 // indirect\n\tgithub.com/stretchr/testify v1.9.0 // indirect\n\tgithub.com/syndtr/gocapability v0.0.0-20200815063812-42c35b437635 // indirect\n\tgithub.com/tinylib/msgp v1.1.8 // indirect\n\tgithub.com/tonistiigi/dchapes-mode v0.0.0-20241001053921-ca0759fec205 // indirect\n\tgithub.com/tonistiigi/fsutil v0.0.0-20241121093142-31cf1f437184 // indirect\n\tgithub.com/tonistiigi/go-actions-cache v0.0.0-20241108014124-394979b8119e // indirect\n\tgithub.com/tonistiigi/go-csvvalue v0.0.0-20240710180619-ddb21b71c0b4 // indirect\n\tgithub.com/tonistiigi/units v0.0.0-20180711220420-6950e57a87ea // indirect\n\tgithub.com/tonistiigi/vt100 v0.0.0-20240514184818-90bafcd6abab // indirect\n\tgithub.com/weppos/publicsuffix-go v0.15.1-0.20210511084619-b1f36a2d6c0b // indirect\n\tgithub.com/zmap/zcrypto v0.0.0-20210511125630-18f1e0152cfc // indirect\n\tgithub.com/zmap/zlint/v3 v3.1.0 // indirect\n\tgo.etcd.io/etcd/client/pkg/v3 v3.5.16 // indirect\n\tgo.etcd.io/etcd/pkg/v3 v3.5.16 // indirect\n\tgo.etcd.io/etcd/raft/v3 v3.5.16 // indirect\n\tgo.etcd.io/etcd/server/v3 v3.5.16 // indirect\n\tgo.opencensus.io v0.24.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace v0.53.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.28.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.28.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.28.0 // indirect\n\tgo.opentelemetry.io/otel/sdk/metric v1.28.0 // indirect\n\tgo.opentelemetry.io/proto/otlp v1.3.1 // indirect\n\tgo.uber.org/atomic v1.9.0 // indirect\n\tgo.uber.org/multierr v1.8.0 // indirect\n\tgo.uber.org/zap v1.21.0 // indirect\n\tgolang.org/x/crypto v0.31.0 // indirect\n\tgolang.org/x/exp v0.0.0-20241108190413-2d47ceb2692f // indirect\n\tgolang.org/x/oauth2 v0.22.0 // indirect\n\tgolang.org/x/tools v0.27.0 // indirect\n\tgoogle.golang.org/api v0.155.0 // indirect\n\tgoogle.golang.org/genproto v0.0.0-20240123012728-ef4313101c80 // indirect; TODO(thaJeztah): should we keep this one aligned with the other google.golang.org/genproto/xxx modules?\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240701130421-f6361c86f094 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n\tk8s.io/klog/v2 v2.90.1 // indirect\n\tsigs.k8s.io/yaml v1.4.0 // indirect\n\ttags.cncf.io/container-device-interface/specs-go v0.8.0 // indirect\n)\n"
        },
        {
          "name": "vendor.sum",
          "type": "blob",
          "size": 76.7275390625,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.112.0 h1:tpFCD7hpHFlQ8yPwT3x+QeXqc2T6+n6T+hmABHfDUSM=\ncloud.google.com/go v0.112.0/go.mod h1:3jEEVwZ/MHU4djK5t5RHuKOA/GbLddgTdVubX1qnPD4=\ncloud.google.com/go/compute/metadata v0.3.0 h1:Tz+eQXMEqDIKRsmY3cHTL6FVaynIjX2QxYC4trgAKZc=\ncloud.google.com/go/compute/metadata v0.3.0/go.mod h1:zFmK7XCadkQkj6TtorcaGlCW1hT1fIilQDwofLpJ20k=\ncloud.google.com/go/iam v1.1.5 h1:1jTsCu4bcsNsE4iiqNT5SHwrDRCfRmIaaaVFhRveTJI=\ncloud.google.com/go/iam v1.1.5/go.mod h1:rB6P/Ic3mykPbFio+vo7403drjlgvoWfYpJhMXEbzv8=\ncloud.google.com/go/logging v1.9.0 h1:iEIOXFO9EmSiTjDmfpbRjOxECO7R8C7b8IXUGOj7xZw=\ncloud.google.com/go/logging v1.9.0/go.mod h1:1Io0vnZv4onoUnsVUQY3HZ3Igb1nBchky0A0y7BBBhE=\ncloud.google.com/go/longrunning v0.5.4 h1:w8xEcbZodnA2BbW6sVirkkoC+1gP8wS57EUUgGS0GVg=\ncloud.google.com/go/longrunning v0.5.4/go.mod h1:zqNVncI0BOP8ST6XQD1+VcvuShMmq7+xFSzOL++V0dI=\ncode.cloudfoundry.org/clock v1.1.0 h1:XLzC6W3Ah/Y7ht1rmZ6+QfPdt1iGWEAAtIZXgiaj57c=\ncode.cloudfoundry.org/clock v1.1.0/go.mod h1:yA3fxddT9RINQL2XHS7PS+OXxKCGhfrZmlNUCIM6AKo=\ndario.cat/mergo v1.0.1 h1:Ra4+bf83h2ztPIQYNP99R6m+Y7KfnARDfID+a+vLl4s=\ndario.cat/mergo v1.0.1/go.mod h1:uNxQE+84aUszobStD9th8a29P2fMDhsBdgRYvZOxGmk=\ngithub.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24 h1:bvDV9vkmnHYOMsOr4WLk+Vo07yKIzd94sVoIqshQ4bU=\ngithub.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24/go.mod h1:8o94RPi1/7XTJvwPpRSzSUedZrtlirdB3r9Z20bi2f8=\ngithub.com/AdamKorcz/go-118-fuzz-build v0.0.0-20230306123547-8075edf89bb0 h1:59MxjQVfjXsBpLy+dbd2/ELV5ofnUkUZBvWSC85sheA=\ngithub.com/AdamKorcz/go-118-fuzz-build v0.0.0-20230306123547-8075edf89bb0/go.mod h1:OahwfttHWG6eJ0clwcfBAHoDI6X/LV/15hx/wlMZSrU=\ngithub.com/Azure/go-ansiterm v0.0.0-20250102033503-faa5f7b0171c h1:udKWzYgxTojEKWjV8V+WSxDXJ4NFATAsZjh8iIbsQIg=\ngithub.com/Azure/go-ansiterm v0.0.0-20250102033503-faa5f7b0171c/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/DataDog/datadog-go v3.2.0+incompatible/go.mod h1:LButxg5PwREeZtORoXG3tL4fMGNddJ+vMq1mwgfaqoQ=\ngithub.com/Graylog2/go-gelf v0.0.0-20191017102106-1550ee647df0 h1:cOjLyhBhe91glgZZNbQUg9BJC57l6BiSKov0Ivv7k0U=\ngithub.com/Graylog2/go-gelf v0.0.0-20191017102106-1550ee647df0/go.mod h1:fBaQWrftOD5CrVCUfoYGHs4X4VViTuGOXA8WloCjTY0=\ngithub.com/Microsoft/go-winio v0.6.2 h1:F2VQgta7ecxGYO8k3ZZz3RS8fVIXVxONVUPlNERoyfY=\ngithub.com/Microsoft/go-winio v0.6.2/go.mod h1:yd8OoFMLzJbo9gZq8j5qaps8bJ9aShtEA8Ipt1oGCvU=\ngithub.com/Microsoft/hcsshim v0.12.8 h1:BtDWYlFMcWhorrvSSo2M7z0csPdw6t7no/C3FsSvqiI=\ngithub.com/Microsoft/hcsshim v0.12.8/go.mod h1:cibQ4BqhJ32FXDwPdQhKhwrwophnh3FuT4nwQZF907w=\ngithub.com/RackSec/srslog v0.0.0-20180709174129-a4725f04ec91 h1:vX+gnvBc56EbWYrmlhYbFYRaeikAke1GL84N4BEYOFE=\ngithub.com/RackSec/srslog v0.0.0-20180709174129-a4725f04ec91/go.mod h1:cDLGBht23g0XQdLjzn6xOGXDkLK182YfINAaZEQLCHQ=\ngithub.com/agext/levenshtein v1.2.3 h1:YB2fHEn0UJagG8T1rrWknE3ZQzWM06O8AMAatNn7lmo=\ngithub.com/agext/levenshtein v1.2.3/go.mod h1:JEDfjyjHDjOF/1e4FlBE/PkbqA9OfWu2ki2W0IB5558=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alecthomas/units v0.0.0-20190717042225-c3de453c63f4/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/anchore/go-struct-converter v0.0.0-20221118182256-c68fdcfa2092 h1:aM1rlcoLz8y5B2r4tTLMiVTrMtpfY0O8EScKJxaSaEc=\ngithub.com/anchore/go-struct-converter v0.0.0-20221118182256-c68fdcfa2092/go.mod h1:rYqSE9HbjzpHTI74vwPvae4ZVYZd1lue2ta6xHPdblA=\ngithub.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e/go.mod h1:3U/XgcO3hCbHZ8TKRvWD2dDTCfh9M9ya+I9JpbB7O8o=\ngithub.com/armon/circbuf v0.0.0-20190214190532-5111143e8da2 h1:7Ip0wMmLHLRJdrloDxZfhMm0xrLXZS8+COSu2bXmEQs=\ngithub.com/armon/circbuf v0.0.0-20190214190532-5111143e8da2/go.mod h1:3U/XgcO3hCbHZ8TKRvWD2dDTCfh9M9ya+I9JpbB7O8o=\ngithub.com/armon/go-metrics v0.0.0-20180917152333-f0300d1749da/go.mod h1:Q73ZrmVTwzkszR9V5SSuryQ31EELlFMUz1kKyl939pY=\ngithub.com/armon/go-metrics v0.4.1 h1:hR91U9KYmb6bLBYLQjyM+3j+rcd/UhE+G78SFnF8gJA=\ngithub.com/armon/go-metrics v0.4.1/go.mod h1:E6amYzXo6aW1tqzoZGT755KkbgrJsSdpwZ+3JqfkOG4=\ngithub.com/armon/go-radix v0.0.0-20180808171621-7fddfc383310/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=\ngithub.com/aws/aws-sdk-go-v2 v1.24.1 h1:xAojnj+ktS95YZlDf0zxWBkbFtymPeDP+rvUQIH3uAU=\ngithub.com/aws/aws-sdk-go-v2 v1.24.1/go.mod h1:LNh45Br1YAkEKaAqvmE1m8FUx6a5b/V0oAKV7of29b4=\ngithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.5.4 h1:OCs21ST2LrepDfD3lwlQiOqIGp6JiEUqG84GzTDoyJs=\ngithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.5.4/go.mod h1:usURWEKSNNAcAZuzRn/9ZYPT8aZQkR7xcCtunK/LkJo=\ngithub.com/aws/aws-sdk-go-v2/config v1.26.6 h1:Z/7w9bUqlRI0FFQpetVuFYEsjzE3h7fpU6HuGmfPL/o=\ngithub.com/aws/aws-sdk-go-v2/config v1.26.6/go.mod h1:uKU6cnDmYCvJ+pxO9S4cWDb2yWWIH5hra+32hVh1MI4=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.16.16 h1:8q6Rliyv0aUFAVtzaldUEcS+T5gbadPbWdV1WcAddK8=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.16.16/go.mod h1:UHVZrdUsv63hPXFo1H7c5fEneoVo9UXiz36QG1GEPi0=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.14.11 h1:c5I5iH+DZcH3xOIMlz3/tCKJDaHFwYEmxvlh2fAcFo8=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.14.11/go.mod h1:cRrYDYAMUohBJUtUnOhydaMHtiK/1NZ0Otc9lIb6O0Y=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.2.10 h1:vF+Zgd9s+H4vOXd5BMaPWykta2a6Ih0AKLq/X6NYKn4=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.2.10/go.mod h1:6BkRjejp/GR4411UGqkX8+wFMbFbqsUIimfK4XjOKR4=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.5.10 h1:nYPe006ktcqUji8S2mqXf9c/7NdiKriOwMvWQHgYztw=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.5.10/go.mod h1:6UV4SZkVvmODfXKql4LCbaZUpF7HO2BX38FgBf9ZOLw=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.7.3 h1:n3GDfwqF2tzEkXlv5cuy4iy7LpKDtqDMcNLfZDu9rls=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.7.3/go.mod h1:6fQQgfuGmw8Al/3M2IgIllycxV7ZW7WCdVSqfBeUiCY=\ngithub.com/aws/aws-sdk-go-v2/service/cloudwatchlogs v1.32.0 h1:VdKYfVPIDzmfSQk5gOQ5uueKiuKMkJuB/KOXmQ9Ytag=\ngithub.com/aws/aws-sdk-go-v2/service/cloudwatchlogs v1.32.0/go.mod h1:jZNaJEtn9TLi3pfxycLz79HVkKxP8ZdYm92iaNFgBsA=\ngithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.10.4 h1:/b31bi3YVNlkzkBrm9LfpaKoaYZUxIAj4sHfOTmLfqw=\ngithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.10.4/go.mod h1:2aGXHFmbInwgP9ZfpmdIfOELL79zhdNYNmReK8qDfdQ=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.10.10 h1:DBYTXwIGQSGs9w4jKm60F5dmCQ3EEruxdc0MFh+3EY4=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.10.10/go.mod h1:wohMUQiFdzo0NtxbBg0mSRGZ4vL3n0dKjLTINdcIino=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.18.7 h1:eajuO3nykDPdYicLlP3AGgOyVN3MOlFmZv7WGTuJPow=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.18.7/go.mod h1:+mJNDdF+qiUlNKNC3fxn74WWNN+sOiGOEImje+3ScPM=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.21.7 h1:QPMJf+Jw8E1l7zqhZmMlFw6w1NmfkfiSK8mS4zOx3BA=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.21.7/go.mod h1:ykf3COxYI0UJmxcfcxcVuz7b6uADi1FkiUz6Eb7AgM8=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.26.7 h1:NzO4Vrau795RkUdSHKEwiR01FaGzGOH1EETJ+5QHnm0=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.26.7/go.mod h1:6h2YuIoxaMSCFf5fi1EgZAwdfkGMgDY+DVfa61uLe4U=\ngithub.com/aws/smithy-go v1.19.0 h1:KWFKQV80DpP3vJrrA9sVAHQ5gc2z8i4EzrLhLlWXcBM=\ngithub.com/aws/smithy-go v1.19.0/go.mod h1:NukqUGpCZIILqqiV0NIjeFh24kd/FAa4beRb6nbIUPE=\ngithub.com/benbjohnson/clock v1.1.0 h1:Q92kusRqC1XV2MjkWETPvjJVqKetz1OzxZB7mHJLju8=\ngithub.com/benbjohnson/clock v1.1.0/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/bgentry/speakeasy v0.1.0/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=\ngithub.com/bits-and-blooms/bitset v1.13.0 h1:bAQ9OPNFYbGHV6Nez0tmNI0RiEu7/hxlYJRUA0wFAVE=\ngithub.com/bits-and-blooms/bitset v1.13.0/go.mod h1:7hO7Gc7Pp1vODcmWvKMRA9BNmbv6a/7QIWpPxHddWR8=\ngithub.com/blang/semver/v4 v4.0.0 h1:1PFHFE6yCCTv8C1TeyNNarDzntLi7wMI5i/pzqYIsAM=\ngithub.com/blang/semver/v4 v4.0.0/go.mod h1:IbckMUScFkM3pff0VJDNKRiT6TG/YpiHIM2yvyW5YoQ=\ngithub.com/bmizerany/assert v0.0.0-20160611221934-b7ed37b82869 h1:DDGfHa7BWjL4YnC6+E63dPcxHo2sUxDIu8g3QgEJdRY=\ngithub.com/bmizerany/assert v0.0.0-20160611221934-b7ed37b82869/go.mod h1:Ekp36dRnpXw/yCqJaO+ZrUyxD+3VXMFFr56k5XYrpB4=\ngithub.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=\ngithub.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cilium/ebpf v0.16.0 h1:+BiEnHL6Z7lXnlGUsXQPPAE7+kenAd4ES8MQ5min0Ok=\ngithub.com/cilium/ebpf v0.16.0/go.mod h1:L7u2Blt2jMM/vLAVgjxluxtBKlz3/GWjB0dMOEngfwE=\ngithub.com/circonus-labs/circonus-gometrics v2.3.1+incompatible/go.mod h1:nmEj6Dob7S7YxXgwXpfOuvO54S+tGdZdw9fuRZt25Ag=\ngithub.com/circonus-labs/circonusllhist v0.1.3/go.mod h1:kMXHVDlOchFAehlya5ePtbp5jckzBHf4XRpQvBOLI+I=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cloudflare/cfssl v1.6.4 h1:NMOvfrEjFfC63K3SGXgAnFdsgkmiq4kATme5BfcqrO8=\ngithub.com/cloudflare/cfssl v1.6.4/go.mod h1:8b3CQMxfWPAeom3zBnGJ6sd+G1NkL5TXqmDXacb+1J0=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cockroachdb/datadriven v1.0.2 h1:H9MtNqVoVhvd9nCBwOyDjUEdZCREqbIdCJD93PBm/jA=\ngithub.com/cockroachdb/datadriven v1.0.2/go.mod h1:a9RdTaap04u637JoCzcUoIcDmvwSUtcUFtT/C3kJlTU=\ngithub.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=\ngithub.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=\ngithub.com/container-storage-interface/spec v1.5.0 h1:lvKxe3uLgqQeVQcrnL2CPQKISoKjTJxojEs9cBk+HXo=\ngithub.com/container-storage-interface/spec v1.5.0/go.mod h1:8K96oQNkJ7pFcC2R9Z1ynGGBB1I93kcS6PGg3SsOk8s=\ngithub.com/containerd/cgroups/v3 v3.0.5 h1:44na7Ud+VwyE7LIoJ8JTNQOa549a8543BmzaJHo6Bzo=\ngithub.com/containerd/cgroups/v3 v3.0.5/go.mod h1:SA5DLYnXO8pTGYiAHXz94qvLQTKfVM5GEVisn4jpins=\ngithub.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=\ngithub.com/containerd/console v1.0.4/go.mod h1:YynlIjWYF8myEu6sdkwKIvGQq+cOckRm6So2avqoYAk=\ngithub.com/containerd/containerd v1.7.25 h1:khEQOAXOEJalRO228yzVsuASLH42vT7DIo9Ss+9SMFQ=\ngithub.com/containerd/containerd v1.7.25/go.mod h1:tWfHzVI0azhw4CT2vaIjsb2CoV4LJ9PrMPaULAr21Ok=\ngithub.com/containerd/containerd/api v1.8.0 h1:hVTNJKR8fMc/2Tiw60ZRijntNMd1U+JVMyTRdsD2bS0=\ngithub.com/containerd/containerd/api v1.8.0/go.mod h1:dFv4lt6S20wTu/hMcP4350RL87qPWLVa/OHOwmmdnYc=\ngithub.com/containerd/continuity v0.4.5 h1:ZRoN1sXq9u7V6QoHMcVWGhOwDFqZ4B9i5H6un1Wh0x4=\ngithub.com/containerd/continuity v0.4.5/go.mod h1:/lNJvtJKUQStBzpVQ1+rasXO1LAWtUQssk28EZvJ3nE=\ngithub.com/containerd/errdefs v0.3.0 h1:FSZgGOeK4yuT/+DnF07/Olde/q4KBoMsaamhXxIMDp4=\ngithub.com/containerd/errdefs v0.3.0/go.mod h1:+YBYIdtsnF4Iw6nWZhJcqGSg/dwvV7tyJ/kCkyJ2k+M=\ngithub.com/containerd/fifo v1.1.0 h1:4I2mbh5stb1u6ycIABlBw9zgtlK8viPI9QkQNRQEEmY=\ngithub.com/containerd/fifo v1.1.0/go.mod h1:bmC4NWMbXlt2EZ0Hc7Fx7QzTFxgPID13eH0Qu+MAb2o=\ngithub.com/containerd/go-cni v1.1.10 h1:c2U73nld7spSWfiJwSh/8W9DK+/qQwYM2rngIhCyhyg=\ngithub.com/containerd/go-cni v1.1.10/go.mod h1:/Y/sL8yqYQn1ZG1om1OncJB1W4zN3YmjfP/ShCzG/OY=\ngithub.com/containerd/go-runc v1.1.0 h1:OX4f+/i2y5sUT7LhmcJH7GYrjjhHa1QI4e8yO0gGleA=\ngithub.com/containerd/go-runc v1.1.0/go.mod h1:xJv2hFF7GvHtTJd9JqTS2UVxMkULUYw4JN5XAUZqH5U=\ngithub.com/containerd/log v0.1.0 h1:TCJt7ioM2cr/tfR8GPbGf9/VRAX8D2B4PjzCpfX540I=\ngithub.com/containerd/log v0.1.0/go.mod h1:VRRf09a7mHDIRezVKTRCrOq78v577GXq3bSa3EhrzVo=\ngithub.com/containerd/nydus-snapshotter v0.14.0 h1:6/eAi6d7MjaeLLuMO8Udfe5GVsDudmrDNO4SGETMBco=\ngithub.com/containerd/nydus-snapshotter v0.14.0/go.mod h1:TT4jv2SnIDxEBu4H2YOvWQHPOap031ydTaHTuvc5VQk=\ngithub.com/containerd/platforms v0.2.1 h1:zvwtM3rz2YHPQsF2CHYM8+KtB5dvhISiXh5ZpSBQv6A=\ngithub.com/containerd/platforms v0.2.1/go.mod h1:XHCb+2/hzowdiut9rkudds9bE5yJ7npe7dG/wG+uFPw=\ngithub.com/containerd/stargz-snapshotter/estargz v0.15.1 h1:eXJjw9RbkLFgioVaTG+G/ZW/0kEe2oEKCdS/ZxIyoCU=\ngithub.com/containerd/stargz-snapshotter/estargz v0.15.1/go.mod h1:gr2RNwukQ/S9Nv33Lt6UC7xEx58C+LHRdoqbEKjz1Kk=\ngithub.com/containerd/ttrpc v1.2.5 h1:IFckT1EFQoFBMG4c3sMdT8EP3/aKfumK1msY+Ze4oLU=\ngithub.com/containerd/ttrpc v1.2.5/go.mod h1:YCXHsb32f+Sq5/72xHubdiJRQY9inL4a4ZQrAbN1q9o=\ngithub.com/containerd/typeurl/v2 v2.2.3 h1:yNA/94zxWdvYACdYO8zofhrTVuQY73fFU1y++dYSw40=\ngithub.com/containerd/typeurl/v2 v2.2.3/go.mod h1:95ljDnPfD3bAbDJRugOiShd/DlAAsxGtUBhJxIn7SCk=\ngithub.com/containernetworking/cni v1.2.2 h1:9IbP6KJQQxVKo4hhnm8r50YcVKrJbJu3Dqw+Rbt1vYk=\ngithub.com/containernetworking/cni v1.2.2/go.mod h1:DuLgF+aPd3DzcTQTtp/Nvl1Kim23oFKdm2okJzBQA5M=\ngithub.com/containernetworking/plugins v1.5.1 h1:T5ji+LPYjjgW0QM+KyrigZbLsZ8jaX+E5J/EcKOE4gQ=\ngithub.com/containernetworking/plugins v1.5.1/go.mod h1:MIQfgMayGuHYs0XdNudf31cLLAC+i242hNm6KuDGqCM=\ngithub.com/coreos/go-systemd/v22 v22.5.0 h1:RrqgGjYQKalulkV8NGVIfkXQf6YYmOyiJKk8iXXhfZs=\ngithub.com/coreos/go-systemd/v22 v22.5.0/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/cpuguy83/tar2go v0.3.1 h1:DMWlaIyoh9FBWR4hyfZSOEDA7z8rmCiGF1IJIzlTlR8=\ngithub.com/cpuguy83/tar2go v0.3.1/go.mod h1:2Ys2/Hu+iPHQRa4DjIVJ7UAaKnDhAhNACeK3A0Rr5rM=\ngithub.com/creack/pty v1.1.21 h1:1/QdRyBaHHJP61QkWMXlOIBfsgdDeeKfK8SYVUWJKf0=\ngithub.com/creack/pty v1.1.21/go.mod h1:MOBLtS5ELjhRRrroQr9kyvTxUAFNvYEK993ew/Vr4O4=\ngithub.com/cyphar/filepath-securejoin v0.3.5 h1:L81NHjquoQmcPgXcttUS9qTSR/+bXry6pbSINQGpjj4=\ngithub.com/cyphar/filepath-securejoin v0.3.5/go.mod h1:edhVd3c6OXKjUmSrVa/tGJRS9joFTxlslFCAyaxigkE=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/deckarep/golang-set/v2 v2.3.0 h1:qs18EKUfHm2X9fA50Mr/M5hccg2tNnVqsiBImnyDs0g=\ngithub.com/deckarep/golang-set/v2 v2.3.0/go.mod h1:VAky9rY/yGXJOLEDv3OMci+7wtDpOF4IN+y82NBOac4=\ngithub.com/dimchansky/utfbom v1.1.1 h1:vV6w1AhK4VMnhBno/TPVCoK9U/LP0PkLCS9tbxHdi/U=\ngithub.com/dimchansky/utfbom v1.1.1/go.mod h1:SxdoEBH5qIqFocHMyGOXVAybYJdr71b1Q/j0mACtrfE=\ngithub.com/distribution/reference v0.6.0 h1:0IXCQ5g4/QMHHkarYzh5l+u8T3t73zM5QvfrDyIgxBk=\ngithub.com/distribution/reference v0.6.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=\ngithub.com/docker/distribution v2.8.3+incompatible h1:AtKxIZ36LoNK51+Z6RpzLpddBirtxJnzDrHLEKxTAYk=\ngithub.com/docker/distribution v2.8.3+incompatible/go.mod h1:J2gT2udsDAN96Uj4KfcMRqY0/ypR+oyYUYmja8H+y+w=\ngithub.com/docker/go-connections v0.5.0 h1:USnMq7hx7gwdVZq1L49hLXaFtUdTADjXGp+uj1Br63c=\ngithub.com/docker/go-connections v0.5.0/go.mod h1:ov60Kzw0kKElRwhNs9UlUHAE/F9Fe6GLaXnqyDdmEXc=\ngithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c h1:+pKlWGMw7gf6bQ+oDZB4KHQFypsfjYlq/C4rfL7D3g8=\ngithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c/go.mod h1:Uw6UezgYA44ePAFQYUehOuCzmy5zmg/+nl2ZfMWGkpA=\ngithub.com/docker/go-metrics v0.0.1 h1:AgB/0SvBxihN0X8OR4SjsblXkbMvalQ8cjmtKQ2rQV8=\ngithub.com/docker/go-metrics v0.0.1/go.mod h1:cG1hvH2utMXtqgqqYE9plW6lDxS3/5ayHzueweSI3Vw=\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/docker/libtrust v0.0.0-20150526203908-9cbd2a1374f4 h1:k8TfKGeAcDQFFQOGCQMRN04N4a9YrPlRMMKnzAuvM9Q=\ngithub.com/docker/libtrust v0.0.0-20150526203908-9cbd2a1374f4/go.mod h1:cyGadeNEkKy96OOhEzfZl+yxihPEzKnqJwvfuSUqbZE=\ngithub.com/dustin/go-humanize v1.0.0 h1:VSnTsYCnlFHaM2/igO1h6X3HA71jcobQuxemgkq4zYo=\ngithub.com/dustin/go-humanize v1.0.0/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/fatih/color v1.7.0/go.mod h1:Zm6kSWBoL9eyXnKyktHP6abPY2pDugNf5KwzbycvMj4=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/fernet/fernet-go v0.0.0-20211208181803-9f70042a33ee h1:v6Eju/FhxsACGNipFEPBZZAzGr1F/jlRQr1qiBw2nEE=\ngithub.com/fernet/fernet-go v0.0.0-20211208181803-9f70042a33ee/go.mod h1:2H9hjfbpSMHwY503FclkV/lZTBh2YlOmLLSda12uL8c=\ngithub.com/fluent/fluent-logger-golang v1.9.0 h1:zUdY44CHX2oIUc7VTNZc+4m+ORuO/mldQDA7czhWXEg=\ngithub.com/fluent/fluent-logger-golang v1.9.0/go.mod h1:2/HCT/jTy78yGyeNGQLGQsjF3zzzAuy6Xlk6FCMV5eU=\ngithub.com/fsnotify/fsnotify v1.6.0 h1:n+5WquG0fcWoWp6xPWfHdbskMCQaFnG6PfBrh1Ky4HY=\ngithub.com/fsnotify/fsnotify v1.6.0/go.mod h1:sl3t1tCWJFWoRz9R8WJCbQihKKwmorjAbSClcnxKAGw=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/kit v0.9.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=\ngithub.com/go-logr/logr v1.2.0/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-quicktest/qt v1.101.0 h1:O1K29Txy5P2OK0dGo59b7b0LR6wKfIhttaAhHUyn7eI=\ngithub.com/go-quicktest/qt v1.101.0/go.mod h1:14Bz/f7NwaXPtdYEgzsx46kqSxVwTbzVZsDC26tQJow=\ngithub.com/go-sql-driver/mysql v1.5.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 h1:tfuBGBXKqDEevZMzYi5KSi8KkcZtzBcTgAUUtapy0OI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0 h1:sUs3vkvUymDpBKi3qH1YSqBQk9+9D/8M2mN1vB6EwHI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0/go.mod h1:W848ghGpv3Qj3dhTPRyJypKRiqCdHZiAzKg9hl15HA8=\ngithub.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/godbus/dbus/v5 v5.1.0 h1:4KLkAxT3aOY8Li4FRJe/KvhoNFFxo0m6fNuFUO8QJUk=\ngithub.com/godbus/dbus/v5 v5.1.0/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/gofrs/flock v0.12.1 h1:MTLVXXHf8ekldpJk3AKicLij9MdwOWkZ+a/jHHZby9E=\ngithub.com/gofrs/flock v0.12.1/go.mod h1:9zxTsyu5xtJ9DK+1tFZyibEV7y3uwDxPPfbxeeHCoD0=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang-jwt/jwt/v5 v5.2.1 h1:OuVbFODueb089Lh128TAcimifWaLhJwVflnrgM17wHk=\ngithub.com/golang-jwt/jwt/v5 v5.2.1/go.mod h1:pqrtFR0X4osieyHYxtmOUWsAWrfe1Q5UVIyoH402zdk=\ngithub.com/golang/gddo v0.0.0-20190904175337-72a348e765d2 h1:xisWqjiKEff2B0KfFYGpCqc3M3zdTz+OHQHRc09FeYk=\ngithub.com/golang/gddo v0.0.0-20190904175337-72a348e765d2/go.mod h1:xEhNfoBDX1hzLm2Nf80qUvZ2sVwoMZ8d6IE2SrsQfh4=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.1.2 h1:xf4v41cLI2Z6FxbKm+8Bu+m8ifhj15JuZ9sa0jZCMUU=\ngithub.com/google/btree v1.1.2/go.mod h1:qOPhT0dTNdNzV6Z/lhRX0YXUafgPLFUh+gZMl761Gm4=\ngithub.com/google/certificate-transparency-go v1.1.4 h1:hCyXHDbtqlr/lMXU0D4WgbalXL0Zk4dSWWMbPV8VrqY=\ngithub.com/google/certificate-transparency-go v1.1.4/go.mod h1:D6lvbfwckhNrbM9WVl1EVeMOyzC19mpIjMOI4nxBHtQ=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/pprof v0.0.0-20240424215950-a892ee059fd6 h1:k7nVchz72niMH6YLQNvHSdIE7iqsQxK1P41mySCvssg=\ngithub.com/google/pprof v0.0.0-20240424215950-a892ee059fd6/go.mod h1:kf6iHlnVGwgKolg33glAes7Yg/8iWP8ukqeldJSO7jw=\ngithub.com/google/s2a-go v0.1.7 h1:60BLSyTrOV4/haCDW4zb1guZItoSq8foHCXrAnjBo/o=\ngithub.com/google/s2a-go v0.1.7/go.mod h1:50CgR4k1jNlWBu4UfS4AcfhVe1r6pdZPygJ3R8F0Qdw=\ngithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510 h1:El6M4kTTCOh6aBiKaUGG7oYTSPP8MxqL4YI3kZKwcP4=\ngithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510/go.mod h1:pupxD2MaaD3pAXIBCelhxNneeOaAeabZDe5s4K6zSpQ=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.2.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.2 h1:Vie5ybvEvT75RniqhfFxPRy3Bf7vr3h0cechB90XaQs=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.2/go.mod h1:VLSiSSBs/ksPL8kq3OBOQ6WRI2QnaFynd1DCjZ62+V0=\ngithub.com/googleapis/gax-go/v2 v2.12.0 h1:A+gCJKdRfqXkr+BIRGtZLibNXf0m1f9E4HG56etFpas=\ngithub.com/googleapis/gax-go/v2 v2.12.0/go.mod h1:y+aIqrI5eb1YGMVJfuV3185Ts/D7qKpsEkdD5+I6QGU=\ngithub.com/gorilla/mux v1.8.1 h1:TuBL49tXwgrFYWhqrNgrUNEY92u81SPhu7sTdzQEiWY=\ngithub.com/gorilla/mux v1.8.1/go.mod h1:AKf9I4AEqPTmMytcMc0KkNouC66V3BtZ4qD5fmWSiMQ=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0 h1:Ovs26xHkKqVztRpIrF/92BcuyuQ/YW4NSIpoGtfXNho=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0/go.mod h1:8NvIoxWQoOIhqOTXgfV/d3M/q6VIi02HzZEHgUlZvzk=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 h1:bkypFPDjIYGfCYD5mRBvpqxfYX1YCS1PXdKYWi8FsN0=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0/go.mod h1:P+Lt/0by1T8bfcF3z737NnSbmxQAppXMRziHUxPOC8k=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=\ngithub.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-cleanhttp v0.5.0/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=\ngithub.com/hashicorp/go-immutable-radix v1.0.0/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-immutable-radix v1.3.0/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-immutable-radix v1.3.1 h1:DKHmCUm2hRBK510BaiZlwvpD40f8bJFeZnpfm2KLowc=\ngithub.com/hashicorp/go-immutable-radix v1.3.1/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-immutable-radix/v2 v2.1.0 h1:CUW5RYIcysz+D3B+l1mDeXrQ7fUvGGCwJfdASSzbrfo=\ngithub.com/hashicorp/go-immutable-radix/v2 v2.1.0/go.mod h1:hgdqLXA4f6NIjRVisM1TJ9aOJVNRqKZj+xDGF6m7PBw=\ngithub.com/hashicorp/go-memdb v1.3.2 h1:RBKHOsnSszpU6vxq80LzC2BaQjuuvoyaQbkLTf7V7g8=\ngithub.com/hashicorp/go-memdb v1.3.2/go.mod h1:Mluclgwib3R93Hk5fxEfiRhB+6Dar64wWh71LpNSe3g=\ngithub.com/hashicorp/go-msgpack v0.5.3/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=\ngithub.com/hashicorp/go-msgpack v0.5.5 h1:i9R9JSrqIz0QVLz3sz+i3YJdT7TTSLcfLLzJi9aZTuI=\ngithub.com/hashicorp/go-msgpack v0.5.5/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=\ngithub.com/hashicorp/go-multierror v1.0.0/go.mod h1:dHtQlpGsu+cZNNAkkCN/P3hoUDHhCYQXV3UM06sGGrk=\ngithub.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\ngithub.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\ngithub.com/hashicorp/go-retryablehttp v0.5.3/go.mod h1:9B5zBasrRhHXnJnui7y6sL7es7NDiJgTc6Er0maI1Xs=\ngithub.com/hashicorp/go-sockaddr v1.0.0/go.mod h1:7Xibr9yA9JjQq1JpNB2Vw7kxv8xerXegt+ozgdvDeDU=\ngithub.com/hashicorp/go-sockaddr v1.0.2 h1:ztczhD1jLxIRjVejw8gFomI1BQZOe2WoVOu0SyteCQc=\ngithub.com/hashicorp/go-sockaddr v1.0.2/go.mod h1:rB4wwRAUzs07qva3c5SdrY/NEtAUjGlgmH/UkBUC97A=\ngithub.com/hashicorp/go-syslog v1.0.0/go.mod h1:qPfqrKkXGihmCqbJM2mZgkZGvKG1dFdvsLplgctolz4=\ngithub.com/hashicorp/go-uuid v1.0.0/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.1/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.3 h1:2gKiV6YVmrJ1i2CKKa9obLvRieoRGviZFL26PcT/Co8=\ngithub.com/hashicorp/go-uuid v1.0.3/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go.net v0.0.1/go.mod h1:hjKkEWcCURg++eb33jQU7oqQcI9XDCnUzHA0oac0k90=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.4 h1:YDjusn29QI/Das2iO9M0BHnIbxPeyuCHsjMW+lJfyTc=\ngithub.com/hashicorp/golang-lru v0.5.4/go.mod h1:iADmTwqILo4mZ8BN3D2Q6+9jd8WM5uGBxy+E8yxSoD4=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7 h1:a+bsQ5rvGLjzHuww6tVxozPZFVghXaHOwFs4luLUK2k=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7/go.mod h1:QeFd9opnmA6QUJc5vARoKUSoFhyfM2/ZepoAG6RGpeM=\ngithub.com/hashicorp/logutils v1.0.0/go.mod h1:QIAnNjmIWmVIIkWDTG1z5v++HQmx9WQRO+LraFDTW64=\ngithub.com/hashicorp/mdns v1.0.0/go.mod h1:tL+uN++7HEJ6SQLQ2/p+z2pH24WQKWjBPkE0mNTz8vQ=\ngithub.com/hashicorp/memberlist v0.1.3/go.mod h1:ajVTdAv/9Im8oMAAj5G31PhhMCZJV2pPBoIllUwCN7I=\ngithub.com/hashicorp/memberlist v0.4.0 h1:k3uda5gZcltmafuFF+UFqNEl5PrH+yPZ4zkjp1f/H/8=\ngithub.com/hashicorp/memberlist v0.4.0/go.mod h1:yvyXLpo0QaGE59Y7hDTsTzDD25JYBZ4mHgHUZ8lrOI0=\ngithub.com/hashicorp/serf v0.8.5 h1:ZynDUIQiA8usmRgPdGPHFdPnb1wgGI9tK3mO9hcAJjc=\ngithub.com/hashicorp/serf v0.8.5/go.mod h1:UpNcs7fFbpKIyZaUuSW6EPiH+eZC7OuyFD+wc1oal+k=\ngithub.com/in-toto/in-toto-golang v0.5.0 h1:hb8bgwr0M2hGdDsLjkJ3ZqJ8JFLL/tgYdAxF/XEFBbY=\ngithub.com/in-toto/in-toto-golang v0.5.0/go.mod h1:/Rq0IZHLV7Ku5gielPT4wPHJfH1GdHMCq8+WPxw8/BE=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/ishidawataru/sctp v0.0.0-20230406120618-7ff4192f6ff2 h1:i2fYnDurfLlJH8AyyMOnkLHnHeP8Ff/DDpuZA/D3bPo=\ngithub.com/ishidawataru/sctp v0.0.0-20230406120618-7ff4192f6ff2/go.mod h1:co9pwDoBCm1kGxawmb4sPq0cSIOOWNPT4KnHotMP1Zg=\ngithub.com/jmoiron/sqlx v1.3.3 h1:j82X0bf7oQ27XeqxicSZsTU5suPwKElg3oyxNn43iTk=\ngithub.com/jmoiron/sqlx v1.3.3/go.mod h1:2BljVx/86SuTyjE+aPYlHCTNvZrnJXghYGpNiXLBMCQ=\ngithub.com/josharian/native v1.1.0 h1:uuaP0hAbW7Y4l0ZRQ6C9zfb7Mg1mbFKry/xzDAfmtLA=\ngithub.com/josharian/native v1.1.0/go.mod h1:7X/raswPFr05uY3HiLlYeyQntB6OO7E/d2Cu7qoaN2w=\ngithub.com/jsimonetti/rtnetlink/v2 v2.0.1 h1:xda7qaHDSVOsADNouv7ukSuicKZO7GgVUCXxpaIEIlM=\ngithub.com/jsimonetti/rtnetlink/v2 v2.0.1/go.mod h1:7MoNYNbb3UaDHtF8udiJo/RH6VsTKP1pqKLUTVCvToE=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.7/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.9/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/compress v1.17.11 h1:In6xLpyWOi1+C7tXUUWv2ot1QvBjxevKAaI6IXrJmUc=\ngithub.com/klauspost/compress v1.17.11/go.mod h1:pMDklpSncoRMuLFrf1W9Ss9KT+0rH90U12bZKk7uwG0=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/lib/pq v1.2.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=\ngithub.com/mattn/go-isatty v0.0.3/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=\ngithub.com/mattn/go-sqlite3 v1.14.6/go.mod h1:NyWgC/yNuGj7Q9rpYnZvas74GogHl5/Z4A/KQRfk6bU=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/mdlayher/netlink v1.7.2 h1:/UtM3ofJap7Vl4QWCPDGXY8d3GIY2UGSDbK+QWmY8/g=\ngithub.com/mdlayher/netlink v1.7.2/go.mod h1:xraEF7uJbxLhc5fpHL4cPe221LI2bdttWlU+ZGLfQSw=\ngithub.com/mdlayher/socket v0.4.1 h1:eM9y2/jlbs1M615oshPQOHZzj6R6wMT7bX5NPiQvn2U=\ngithub.com/mdlayher/socket v0.4.1/go.mod h1:cAqeGjoufqdxWkD7DkpyS+wcefOtmu5OQ8KuoJGIReA=\ngithub.com/miekg/dns v1.0.14/go.mod h1:W1PPwlIAgtquWBMBEV9nkV9Cazfe8ScdGz/Lj7v3Nrg=\ngithub.com/miekg/dns v1.1.26/go.mod h1:bPDLeHnStXmXAq1m/Ch/hvfNHr14JKNPMBo3VZKjuso=\ngithub.com/miekg/dns v1.1.57 h1:Jzi7ApEIzwEPLHWRcafCN9LZSBbqQpxjt/wpgvg7wcM=\ngithub.com/miekg/dns v1.1.57/go.mod h1:uqRjCRUuEAA6qsOiJvDd+CFo/vW+y5WR6SNmHE55hZk=\ngithub.com/mistifyio/go-zfs/v3 v3.0.1 h1:YaoXgBePoMA12+S1u/ddkv+QqxcfiZK4prI6HPnkFiU=\ngithub.com/mistifyio/go-zfs/v3 v3.0.1/go.mod h1:CzVgeB0RvF2EGzQnytKVvVSDwmKJXxkOTUGbNrTja/k=\ngithub.com/mitchellh/cli v1.0.0/go.mod h1:hNIlj7HEI86fIcpObd7a0FcrxTWetlwJDGcceTlRvqc=\ngithub.com/mitchellh/copystructure v1.2.0 h1:vpKXTN4ewci03Vljg/q9QvCGUDttBOGBIa15WveJJGw=\ngithub.com/mitchellh/copystructure v1.2.0/go.mod h1:qLl+cE2AmVv+CoeAwDPye/v+N2HKCj9FbZEVFJRxO9s=\ngithub.com/mitchellh/go-wordwrap v1.0.0/go.mod h1:ZXFpozHsX6DPmq2I0TCekCxypsnAUbP2oI0UX1GXzOo=\ngithub.com/mitchellh/hashstructure/v2 v2.0.2 h1:vGKWl0YJqUNxE8d+h8f6NJLcCJrgbhC4NcD46KavDd4=\ngithub.com/mitchellh/hashstructure/v2 v2.0.2/go.mod h1:MG3aRVU/N29oo/V/IhBX8GR/zz4kQkprJgF2EVszyDE=\ngithub.com/mitchellh/mapstructure v0.0.0-20160808181253-ca63d7c062ee/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/reflectwalk v1.0.2 h1:G2LzWKi524PWgd3mLHV8Y5k7s6XUvT0Gef6zxSIeXaQ=\ngithub.com/mitchellh/reflectwalk v1.0.2/go.mod h1:mSTlrgnPZtwu0c4WaC2kGObEpuNDbx0jmZXqmk4esnw=\ngithub.com/mndrix/tap-go v0.0.0-20171203230836-629fa407e90b/go.mod h1:pzzDgJWZ34fGzaAZGFW22KVZDfyrYW+QABMrWnJBnSs=\ngithub.com/moby/buildkit v0.18.2 h1:l86uBvxh4ntNoUUg3Y0eGTbKg1PbUh6tawJ4Xt75SpQ=\ngithub.com/moby/buildkit v0.18.2/go.mod h1:vCR5CX8NGsPTthTg681+9kdmfvkvqJBXEv71GZe5msU=\ngithub.com/moby/docker-image-spec v1.3.1 h1:jMKff3w6PgbfSa69GfNg+zN/XLhfXJGnEx3Nl2EsFP0=\ngithub.com/moby/docker-image-spec v1.3.1/go.mod h1:eKmb5VW8vQEh/BAr2yvVNvuiJuY6UIocYsFu/DxxRpo=\ngithub.com/moby/ipvs v1.1.0 h1:ONN4pGaZQgAx+1Scz5RvWV4Q7Gb+mvfRh3NsPS+1XQQ=\ngithub.com/moby/ipvs v1.1.0/go.mod h1:4VJMWuf098bsUMmZEiD4Tjk/O7mOn3l1PTD3s4OoYAs=\ngithub.com/moby/locker v1.0.1 h1:fOXqR41zeveg4fFODix+1Ch4mj/gT0NE1XJbp/epuBg=\ngithub.com/moby/locker v1.0.1/go.mod h1:S7SDdo5zpBK84bzzVlKr2V0hz+7x9hWbYC/kq7oQppc=\ngithub.com/moby/patternmatcher v0.6.0 h1:GmP9lR19aU5GqSSFko+5pRqHi+Ohk1O69aFiKkVGiPk=\ngithub.com/moby/patternmatcher v0.6.0/go.mod h1:hDPoyOpDY7OrrMDLaYoY3hf52gNCR/YOUYxkhApJIxc=\ngithub.com/moby/pubsub v1.0.0 h1:jkp/imWsmJz2f6LyFsk7EkVeN2HxR/HTTOY8kHrsxfA=\ngithub.com/moby/pubsub v1.0.0/go.mod h1:bXSO+3h5MNXXCaEG+6/NlAIk7MMZbySZlnB+cUQhKKc=\ngithub.com/moby/swarmkit/v2 v2.0.0-20250103191802-8c1959736554 h1:DMHJbgyNZWyrPKYjCYt2IxEO7KA0eSd4fo6KQsv2W84=\ngithub.com/moby/swarmkit/v2 v2.0.0-20250103191802-8c1959736554/go.mod h1:mTTGIAz/59OGZR5Qe+QByIe3Nxc+sSuJkrsStFhr6Lg=\ngithub.com/moby/sys/mount v0.3.4 h1:yn5jq4STPztkkzSKpZkLcmjue+bZJ0u2AuQY1iNI1Ww=\ngithub.com/moby/sys/mount v0.3.4/go.mod h1:KcQJMbQdJHPlq5lcYT+/CjatWM4PuxKe+XLSVS4J6Os=\ngithub.com/moby/sys/mountinfo v0.7.2 h1:1shs6aH5s4o5H2zQLn796ADW1wMrIwHsyJ2v9KouLrg=\ngithub.com/moby/sys/mountinfo v0.7.2/go.mod h1:1YOa8w8Ih7uW0wALDUgT1dTTSBrZ+HiBLGws92L2RU4=\ngithub.com/moby/sys/reexec v0.1.0 h1:RrBi8e0EBTLEgfruBOFcxtElzRGTEUkeIFaVXgU7wok=\ngithub.com/moby/sys/reexec v0.1.0/go.mod h1:EqjBg8F3X7iZe5pU6nRZnYCMUTXoxsjiIfHup5wYIN8=\ngithub.com/moby/sys/sequential v0.6.0 h1:qrx7XFUd/5DxtqcoH1h438hF5TmOvzC/lspjy7zgvCU=\ngithub.com/moby/sys/sequential v0.6.0/go.mod h1:uyv8EUTrca5PnDsdMGXhZe6CCe8U/UiTWd+lL+7b/Ko=\ngithub.com/moby/sys/signal v0.7.1 h1:PrQxdvxcGijdo6UXXo/lU/TvHUWyPhj7UOpSo8tuvk0=\ngithub.com/moby/sys/signal v0.7.1/go.mod h1:Se1VGehYokAkrSQwL4tDzHvETwUZlnY7S5XtQ50mQp8=\ngithub.com/moby/sys/symlink v0.3.0 h1:GZX89mEZ9u53f97npBy4Rc3vJKj7JBDj/PN2I22GrNU=\ngithub.com/moby/sys/symlink v0.3.0/go.mod h1:3eNdhduHmYPcgsJtZXW1W4XUJdZGBIkttZ8xKqPUJq0=\ngithub.com/moby/sys/user v0.3.0 h1:9ni5DlcW5an3SvRSx4MouotOygvzaXbaSrc/wGDFWPo=\ngithub.com/moby/sys/user v0.3.0/go.mod h1:bG+tYYYJgaMtRKgEmuueC0hJEAZWwtIbZTB+85uoHjs=\ngithub.com/moby/sys/userns v0.1.0 h1:tVLXkFOxVu9A64/yh59slHVv9ahO9UIev4JZusOLG/g=\ngithub.com/moby/sys/userns v0.1.0/go.mod h1:IHUYgu/kao6N8YZlp9Cf444ySSvCmDlmzUcYfDHOl28=\ngithub.com/moby/term v0.5.2 h1:6qk3FJAFDs6i/q3W/pQ97SX192qKfZgGjCQqfCJkgzQ=\ngithub.com/moby/term v0.5.2/go.mod h1:d3djjFCrjnB+fl8NJux+EJzu0msscUP+f8it8hPkFLc=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/morikuni/aec v1.0.0 h1:nP9CBfwrvYnBRgY6qfDQkygYDmYwOilePFkwzv4dU8A=\ngithub.com/morikuni/aec v1.0.0/go.mod h1:BbKIizmSmc5MMPqRYbxO4ZU0S0+P200+tUnFx7PXmsc=\ngithub.com/mreiferson/go-httpclient v0.0.0-20160630210159-31f0106b4474/go.mod h1:OQA4XLvDbMgS8P0CevmM4m9Q3Jq4phKUzcocxuGJ5m8=\ngithub.com/mrunalp/fileutils v0.5.0/go.mod h1:M1WthSahJixYnrXQl/DFQuteStB1weuxD2QJNHXfbSQ=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/nxadm/tail v1.4.8 h1:nPr65rt6Y5JFSKQO7qToXr7pePgD6Gwiw05lkbyAQTE=\ngithub.com/nxadm/tail v1.4.8/go.mod h1:+ncqLTQzXmGhMZNUePPaPqPvBxHAIsmXswZKocGu+AU=\ngithub.com/onsi/ginkgo v1.16.5 h1:8xi0RTUf59SOSfEtZMvwTvXYMzG4gV23XVHOZiXNtnE=\ngithub.com/onsi/ginkgo v1.16.5/go.mod h1:+E8gABHa3K6zRBolWtd+ROzc/U5bkGt0FwiG042wbpU=\ngithub.com/onsi/ginkgo/v2 v2.19.0 h1:9Cnnf7UHo57Hy3k6/m5k3dRfGTMXGvxhHFvkDTCTpvA=\ngithub.com/onsi/ginkgo/v2 v2.19.0/go.mod h1:rlwLi9PilAFJ8jCg9UE1QP6VBpd6/xj3SRC0d6TU0To=\ngithub.com/onsi/gomega v1.33.1 h1:dsYjIxxSR755MDmKVsaFQTE22ChNBcuuTWgkUDSubOk=\ngithub.com/onsi/gomega v1.33.1/go.mod h1:U4R44UsT+9eLIaYRB2a5qajjtQYn0hauxvRm16AVYg0=\ngithub.com/op/go-logging v0.0.0-20160315200505-970db520ece7/go.mod h1:HzydrMdWErDVzsI23lYNej1Htcns9BCg93Dk0bBINWk=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.1.0 h1:8SG7/vwALn54lVB/0yZ/MMwhFrPYtpEHQb2IpWsCzug=\ngithub.com/opencontainers/image-spec v1.1.0/go.mod h1:W4s4sFTMaBeK1BQLXbG4AdM2szdn85PY75RI83NrTrM=\ngithub.com/opencontainers/runc v1.2.3 h1:fxE7amCzfZflJO2lHXf4y/y8M1BoAqp+FVmG19oYB80=\ngithub.com/opencontainers/runc v1.2.3/go.mod h1:nSxcWUydXrsBZVYNSkTjoQ/N6rcyTtn+1SD5D4+kRIM=\ngithub.com/opencontainers/runtime-spec v1.0.3-0.20220825212826-86290f6a00fb/go.mod h1:jwyrGlmzljRJv/Fgzds9SsS/C5hL+LL3ko9hs6T5lQ0=\ngithub.com/opencontainers/runtime-spec v1.2.0 h1:z97+pHb3uELt/yiAWD691HNHQIF07bE7dzrbT927iTk=\ngithub.com/opencontainers/runtime-spec v1.2.0/go.mod h1:jwyrGlmzljRJv/Fgzds9SsS/C5hL+LL3ko9hs6T5lQ0=\ngithub.com/opencontainers/runtime-tools v0.9.1-0.20221107090550-2e043c6bd626 h1:DmNGcqH3WDbV5k8OJ+esPWbqUOX5rMLR2PMvziDMJi0=\ngithub.com/opencontainers/runtime-tools v0.9.1-0.20221107090550-2e043c6bd626/go.mod h1:BRHJJd0E+cx42OybVYSgUvZmU0B8P9gZuRXlZUP7TKI=\ngithub.com/opencontainers/selinux v1.9.1/go.mod h1:2i0OySw99QjzBBQByd1Gr9gSjvuho1lHsJxIJ3gGbJI=\ngithub.com/opencontainers/selinux v1.11.1 h1:nHFvthhM0qY8/m+vfhJylliSshm8G1jJ2jDMcgULaH8=\ngithub.com/opencontainers/selinux v1.11.1/go.mod h1:E5dMC3VPuVvVHDYmi78qvhJp8+M586T4DlDRYpFkyec=\ngithub.com/package-url/packageurl-go v0.1.1-0.20220428063043-89078438f170 h1:DiLBVp4DAcZlBVBEtJpNWZpZVq0AEeCY7Hqk8URVs4o=\ngithub.com/package-url/packageurl-go v0.1.1-0.20220428063043-89078438f170/go.mod h1:uQd4a7Rh3ZsVg5j0lNyAfyxIeGde9yrlhjF78GzeW0c=\ngithub.com/pascaldekloe/goe v0.0.0-20180627143212-57f6aae5913c/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=\ngithub.com/pascaldekloe/goe v0.1.0 h1:cBOtyMzM9HTpWjXfbbunk26uA6nG3a8n06Wieeh0MwY=\ngithub.com/pascaldekloe/goe v0.1.0/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=\ngithub.com/pelletier/go-toml v1.9.5 h1:4yBQzkHv+7BHq2PQUZF3Mx0IYxG7LsP222s7Agd3ve8=\ngithub.com/pelletier/go-toml v1.9.5/go.mod h1:u1nR/EPcESfeI/szUZKdtJ0xRNbUoANCkoOuaOx1Y+c=\ngithub.com/phayes/permbits v0.0.0-20190612203442-39d7c581d2ee h1:P6U24L02WMfj9ymZTxl7CxS73JC99x3ukk+DBkgQGQs=\ngithub.com/phayes/permbits v0.0.0-20190612203442-39d7c581d2ee/go.mod h1:3uODdxMgOaPYeWU7RzZLxVtJHZ/x1f/iHkBZuKJDzuY=\ngithub.com/philhofer/fwd v1.1.2 h1:bnDivRJ1EWPjUIRXV5KfORO897HTbpFAQddBdE8t7Gw=\ngithub.com/philhofer/fwd v1.1.2/go.mod h1:qkPdfjR2SIEbspLqpe1tO4n5yICnr2DY7mqEx2tUTP0=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10 h1:GFCKgmp0tecUJ0sJuv4pzYCqS9+RGSn52M3FUwPs+uo=\ngithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10/go.mod h1:t/avpk3KcrXxUnYOhZhMXJlSEyie6gQbtLq5NM3loB8=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/posener/complete v1.1.1/go.mod h1:em0nMJCgc9GFtwrmVmEMR/ZL6WyhyjMBndrE9hABlRI=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=\ngithub.com/prometheus/client_golang v1.1.0/go.mod h1:I1FGZT9+L76gKKOs5djB6ezCbFQP1xR9D75/vuwEF3g=\ngithub.com/prometheus/client_golang v1.4.0/go.mod h1:e9GMxYsXl05ICDXkRhurwBS4Q3OK1iX/F2sw+iXX5zU=\ngithub.com/prometheus/client_golang v1.20.5 h1:cxppBPuYhUnsO6yo/aoRol4L7q7UFfdm+bR9r+8l63Y=\ngithub.com/prometheus/client_golang v1.20.5/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.2.0/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=\ngithub.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=\ngithub.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.6.0/go.mod h1:eBmuwkDJBwy6iBfxCBob6t6dR6ENT/y+J+Zk0j9GMYc=\ngithub.com/prometheus/common v0.9.1/go.mod h1:yhUN8i9wzaXS3w1O07YhxHEBxD+W35wd8bs7vj7HSQ4=\ngithub.com/prometheus/common v0.55.0 h1:KEi6DK7lXW/m7Ig5i47x0vRzuBsHuvJdi5ee6Y3G1dc=\ngithub.com/prometheus/common v0.55.0/go.mod h1:2SECS4xJG1kd8XF9IcM1gMX6510RAEL65zxzNImwdc8=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.0.3/go.mod h1:4A/X28fw3Fc593LaREMrKMqOKvUAntwMDaekg4FpcdQ=\ngithub.com/prometheus/procfs v0.0.8/go.mod h1:7Qr8sr6344vo1JqZ6HhLceV9o3AJ1Ff+GxbHq6oeK9A=\ngithub.com/prometheus/procfs v0.15.1 h1:YagwOFzUgYfKKHX6Dr+sHT7km/hxC76UB0learggepc=\ngithub.com/prometheus/procfs v0.15.1/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/rootless-containers/rootlesskit/v2 v2.3.1 h1:wdYtdKxWFvVLby9ThMP6O6/v2q/GmOXbkRi+4m9nPW0=\ngithub.com/rootless-containers/rootlesskit/v2 v2.3.1/go.mod h1:tdtfS9ak4bGmwJRmcjsAzcHN5rJ3c5dB7yhSV10KTbk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=\ngithub.com/ryanuber/columnize v2.1.0+incompatible/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=\ngithub.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529 h1:nn5Wsu0esKSJiIVhscUtVbo7ada43DJhG55ua/hjS5I=\ngithub.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529/go.mod h1:DxrIzT+xaE7yg65j358z/aeFdxmN0P9QXhEzd20vsDc=\ngithub.com/secure-systems-lab/go-securesystemslib v0.4.0 h1:b23VGrQhTA8cN2CbBw7/FulN9fTtqYUdS5+Oxzt+DUE=\ngithub.com/secure-systems-lab/go-securesystemslib v0.4.0/go.mod h1:FGBZgq2tXWICsxWQW1msNf49F0Pf2Op5Htayx335Qbs=\ngithub.com/shibumi/go-pathspec v1.3.0 h1:QUyMZhFo0Md5B8zV8x2tesohbb5kfbpTi9rBnKh5dkI=\ngithub.com/shibumi/go-pathspec v1.3.0/go.mod h1:Xutfslp817l2I1cZvgcfeMQJG5QnU2lh5tVaaMCl3jE=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.3.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/sirupsen/logrus v1.7.0/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/sirupsen/logrus v1.8.1/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/spdx/gordf v0.0.0-20201111095634-7098f93598fb/go.mod h1:uKWaldnbMnjsSAXRurWqqrdyZen1R7kxl8TkmWk2OyM=\ngithub.com/spdx/tools-golang v0.5.3 h1:ialnHeEYUC4+hkm5vJm4qz2x+oEJbS0mAMFrNXdQraY=\ngithub.com/spdx/tools-golang v0.5.3/go.mod h1:/ETOahiAo96Ob0/RAIBmFZw6XN0yTnyr/uFZm2NTMhI=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2 h1:xuMeJ0Sdp5ZMRXx/aWO6RZxdr3beISkG5/G/aIRr3pY=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/syndtr/gocapability v0.0.0-20200815063812-42c35b437635 h1:kdXcSzyDtseVEc4yCz2qF8ZrQvIDBJLl4S1c3GCXmoI=\ngithub.com/syndtr/gocapability v0.0.0-20200815063812-42c35b437635/go.mod h1:hkRG7XYTFWNJGYcbNJQlaLq0fg1yr4J4t/NcTQtrfww=\ngithub.com/tedsuo/ifrit v0.0.0-20230330192023-5cba443a66c4 h1:MGZzzxBuPuK4J0XQo+0uy0NnXQGKzHXhYp5oG1Wy860=\ngithub.com/tedsuo/ifrit v0.0.0-20230330192023-5cba443a66c4/go.mod h1:eyZnKCc955uh98WQvzOm0dgAeLnf2O0Rz0LPoC5ze+0=\ngithub.com/tinylib/msgp v1.1.8 h1:FCXC1xanKO4I8plpHGH2P7koL/RzZs12l/+r7vakfm0=\ngithub.com/tinylib/msgp v1.1.8/go.mod h1:qkpG+2ldGg4xRFmx+jfTvZPxfGFhi64BcnL9vkCm/Tw=\ngithub.com/tonistiigi/dchapes-mode v0.0.0-20241001053921-ca0759fec205 h1:eUk79E1w8yMtXeHSzjKorxuC8qJOnyXQnLaJehxpJaI=\ngithub.com/tonistiigi/dchapes-mode v0.0.0-20241001053921-ca0759fec205/go.mod h1:3Iuxbr0P7D3zUzBMAZB+ois3h/et0shEz0qApgHYGpY=\ngithub.com/tonistiigi/fsutil v0.0.0-20241121093142-31cf1f437184 h1:RgyoSI38Y36zjQaszel/0RAcIehAnjA1B0RiUV9SDO4=\ngithub.com/tonistiigi/fsutil v0.0.0-20241121093142-31cf1f437184/go.mod h1:Dl/9oEjK7IqnjAm21Okx/XIxUCFJzvh+XdVHUlBwXTw=\ngithub.com/tonistiigi/go-actions-cache v0.0.0-20241108014124-394979b8119e h1:SdcAL/tmv2mIfNhRygmeRrcci3aJQFqNughD7rcV170=\ngithub.com/tonistiigi/go-actions-cache v0.0.0-20241108014124-394979b8119e/go.mod h1:xsu+XeKT9piH/5f9Y1Zsv5krQqI34CWkIusbs5027IM=\ngithub.com/tonistiigi/go-archvariant v1.0.0 h1:5LC1eDWiBNflnTF1prCiX09yfNHIxDC/aukdhCdTyb0=\ngithub.com/tonistiigi/go-archvariant v1.0.0/go.mod h1:TxFmO5VS6vMq2kvs3ht04iPXtu2rUT/erOnGFYfk5Ho=\ngithub.com/tonistiigi/go-csvvalue v0.0.0-20240710180619-ddb21b71c0b4 h1:7I5c2Ig/5FgqkYOh/N87NzoyI9U15qUPXhDD8uCupv8=\ngithub.com/tonistiigi/go-csvvalue v0.0.0-20240710180619-ddb21b71c0b4/go.mod h1:278M4p8WsNh3n4a1eqiFcV2FGk7wE5fwUpUom9mK9lE=\ngithub.com/tonistiigi/units v0.0.0-20180711220420-6950e57a87ea h1:SXhTLE6pb6eld/v/cCndK0AMpt1wiVFb/YYmqB3/QG0=\ngithub.com/tonistiigi/units v0.0.0-20180711220420-6950e57a87ea/go.mod h1:WPnis/6cRcDZSUvVmezrxJPkiO87ThFYsoUiMwWNDJk=\ngithub.com/tonistiigi/vt100 v0.0.0-20240514184818-90bafcd6abab h1:H6aJ0yKQ0gF49Qb2z5hI1UHxSQt4JMyxebFR15KnApw=\ngithub.com/tonistiigi/vt100 v0.0.0-20240514184818-90bafcd6abab/go.mod h1:ulncasL3N9uLrVann0m+CDlJKWsIAP34MPcOJF6VRvc=\ngithub.com/tv42/httpunix v0.0.0-20150427012821-b75d8614f926/go.mod h1:9ESjWnEqriFuLhtthL60Sar/7RFoluCcXsuvEwTV5KM=\ngithub.com/urfave/cli v1.19.1/go.mod h1:70zkFmudgCuE/ngEzBv17Jvp/497gISqfk5gWijbERA=\ngithub.com/vbatts/tar-split v0.11.5 h1:3bHCTIheBm1qFTcgh9oPu+nNBtX+XJIupG/vacinCts=\ngithub.com/vbatts/tar-split v0.11.5/go.mod h1:yZbwRsSeGjusneWgA781EKej9HF8vme8okylkAeNKLk=\ngithub.com/vishvananda/netlink v1.3.1-0.20240922070040-084abd93d350 h1:w5OI+kArIBVksl8UGn6ARQshtPCQvDsbuA9NQie3GIg=\ngithub.com/vishvananda/netlink v1.3.1-0.20240922070040-084abd93d350/go.mod h1:i6NetklAujEcC6fK0JPjT8qSwWyO0HLn4UKG+hGqeJs=\ngithub.com/vishvananda/netns v0.0.4/go.mod h1:SpkAiCQRtJ6TvvxPnOSyH3BMl6unz3xZlaprSwhNNJM=\ngithub.com/vishvananda/netns v0.0.5 h1:DfiHV+j8bA32MFM7bfEunvT8IAqQ/NzSJHtcmW5zdEY=\ngithub.com/vishvananda/netns v0.0.5/go.mod h1:SpkAiCQRtJ6TvvxPnOSyH3BMl6unz3xZlaprSwhNNJM=\ngithub.com/weppos/publicsuffix-go v0.13.1-0.20210123135404-5fd73613514e/go.mod h1:HYux0V0Zi04bHNwOHy4cXJVz/TQjYonnF6aoYhj+3QE=\ngithub.com/weppos/publicsuffix-go v0.15.1-0.20210511084619-b1f36a2d6c0b h1:FsyNrX12e5BkplJq7wKOLk0+C6LZ+KGXvuEcKUYm5ss=\ngithub.com/weppos/publicsuffix-go v0.15.1-0.20210511084619-b1f36a2d6c0b/go.mod h1:HYux0V0Zi04bHNwOHy4cXJVz/TQjYonnF6aoYhj+3QE=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb h1:zGWFAtiMcyryUHoUjUJX0/lt1H2+i2Ka2n+D3DImSNo=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=\ngithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415 h1:EzJWgHovont7NscjpAxXsDA8S8BMYve8Y5+7cuRE7R0=\ngithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415/go.mod h1:GwrjFmJcFw6At/Gs6z4yjiIwzuJ1/+UwLxMQDVQXShQ=\ngithub.com/xeipuuv/gojsonschema v1.2.0 h1:LhYJRs+L4fBtjZUfuSZIKGeVu0QRy8e5Xi7D17UxZ74=\ngithub.com/xeipuuv/gojsonschema v1.2.0/go.mod h1:anYRn/JVcOK2ZgGU+IjEV4nwlhoK5sQluxsYJ78Id3Y=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngithub.com/zmap/rc2 v0.0.0-20131011165748-24b9757f5521/go.mod h1:3YZ9o3WnatTIZhuOtot4IcUfzoKVjUHqu6WALIyI0nE=\ngithub.com/zmap/zcertificate v0.0.0-20180516150559-0e3d58b1bac4/go.mod h1:5iU54tB79AMBcySS0R2XIyZBAVmeHranShAFELYx7is=\ngithub.com/zmap/zcrypto v0.0.0-20210123152837-9cf5beac6d91/go.mod h1:R/deQh6+tSWlgI9tb4jNmXxn8nSCabl5ZQsBX9//I/E=\ngithub.com/zmap/zcrypto v0.0.0-20210511125630-18f1e0152cfc h1:zkGwegkOW709y0oiAraH/3D8njopUR/pARHv4tZZ6pw=\ngithub.com/zmap/zcrypto v0.0.0-20210511125630-18f1e0152cfc/go.mod h1:FM4U1E3NzlNMRnSUTU3P1UdukWhYGifqEsjk9fn7BCk=\ngithub.com/zmap/zlint/v3 v3.1.0 h1:WjVytZo79m/L1+/Mlphl09WBob6YTGljN5IGWZFpAv0=\ngithub.com/zmap/zlint/v3 v3.1.0/go.mod h1:L7t8s3sEKkb0A2BxGy1IWrxt1ZATa1R4QfJZaQOD3zU=\ngo.etcd.io/bbolt v1.3.11 h1:yGEzV1wPz2yVCLsD8ZAiGHhHVlczyC9d1rP43/VCRJ0=\ngo.etcd.io/bbolt v1.3.11/go.mod h1:dksAq7YMXoljX0xu6VF5DMZGbhYYoLUalEiSySYAS4I=\ngo.etcd.io/etcd/client/pkg/v3 v3.5.16 h1:ZgY48uH6UvB+/7R9Yf4x574uCO3jIx0TRDyetSfId3Q=\ngo.etcd.io/etcd/client/pkg/v3 v3.5.16/go.mod h1:V8acl8pcEK0Y2g19YlOV9m9ssUe6MgiDSobSoaBAM0E=\ngo.etcd.io/etcd/pkg/v3 v3.5.16 h1:cnavs5WSPWeK4TYwPYfmcr3Joz9BH+TZ6qoUtz6/+mc=\ngo.etcd.io/etcd/pkg/v3 v3.5.16/go.mod h1:+lutCZHG5MBBFI/U4eYT5yL7sJfnexsoM20Y0t2uNuY=\ngo.etcd.io/etcd/raft/v3 v3.5.16 h1:zBXA3ZUpYs1AwiLGPafYAKKl/CORn/uaxYDwlNwndAk=\ngo.etcd.io/etcd/raft/v3 v3.5.16/go.mod h1:P4UP14AxofMJ/54boWilabqqWoW9eLodl6I5GdGzazI=\ngo.etcd.io/etcd/server/v3 v3.5.16 h1:d0/SAdJ3vVsZvF8IFVb1k8zqMZ+heGcNfft71ul9GWE=\ngo.etcd.io/etcd/server/v3 v3.5.16/go.mod h1:ynhyZZpdDp1Gq49jkUg5mfkDWZwXnn3eIqCqtJnrD/s=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.53.0 h1:9G6E0TXzGFVfTnawRzrPl83iHOAV7L8NJiR8RSGYV1g=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.53.0/go.mod h1:azvtTADFQJA8mX80jIH/akaE7h+dbm/sVuaHqN13w74=\ngo.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace v0.53.0 h1:IVtyPth4Rs5P8wIf0mP2KVKFNTJ4paX9qQ4Hkh5gFdc=\ngo.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace v0.53.0/go.mod h1:ImRBLMJv177/pwiLZ7tU7HDGNdBv7rS0HQ99eN/zBl8=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0 h1:4K4tsIXefpVJtvA/8srF4V4y0akAoPHkIslgAkjixJA=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0/go.mod h1:jjdQuTGVsXV4vSs+CJ2qYDeDPf9yIJV23qlIzBm73Vg=\ngo.opentelemetry.io/otel v1.28.0 h1:/SqNcYk+idO0CxKEUOtKQClMK/MimZihKYMruSMViUo=\ngo.opentelemetry.io/otel v1.28.0/go.mod h1:q68ijF8Fc8CnMHKyzqL6akLO46ePnjkgfIMIjUIX9z4=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.28.0 h1:U2guen0GhqH8o/G2un8f/aG/y++OuW6MyCo6hT9prXk=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.28.0/go.mod h1:yeGZANgEcpdx/WK0IvvRFC+2oLiMS2u4L/0Rj2M2Qr0=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.28.0 h1:aLmmtjRke7LPDQ3lvpFz+kNEH43faFhzW7v8BFIEydg=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.28.0/go.mod h1:TC1pyCt6G9Sjb4bQpShH+P5R53pO6ZuGnHuuln9xMeE=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0 h1:3Q/xZUyC1BBkualc9ROb4G8qkH90LXEIICcs5zv1OYY=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0/go.mod h1:s75jGIWA9OfCMzF0xr+ZgfrB5FEbbV7UuYo32ahUiFI=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.28.0 h1:R3X6ZXmNPRR8ul6i3WgFURCHzaXjHdm0karRG/+dj3s=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.28.0/go.mod h1:QWFXnDavXWwMx2EEcZsf3yxgEKAqsxQ+Syjp+seyInw=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.28.0 h1:j9+03ymgYhPKmeXGk5Zu+cIZOlVzd9Zv7QIiyItjFBU=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.28.0/go.mod h1:Y5+XiUG4Emn1hTfciPzGPJaSI+RpDts6BnCIir0SLqk=\ngo.opentelemetry.io/otel/metric v1.28.0 h1:f0HGvSl1KRAU1DLgLGFjrwVyismPlnuU6JD6bOeuA5Q=\ngo.opentelemetry.io/otel/metric v1.28.0/go.mod h1:Fb1eVBFZmLVTMb6PPohq3TO9IIhUisDsbJoL/+uQW4s=\ngo.opentelemetry.io/otel/sdk v1.28.0 h1:b9d7hIry8yZsgtbmM0DKyPWMMUMlK9NEKuIG4aBqWyE=\ngo.opentelemetry.io/otel/sdk v1.28.0/go.mod h1:oYj7ClPUA7Iw3m+r7GeEjz0qckQRJK2B8zjcZEfu7Pg=\ngo.opentelemetry.io/otel/sdk/metric v1.28.0 h1:OkuaKgKrgAbYrrY0t92c+cC+2F6hsFNnCQArXCKlg08=\ngo.opentelemetry.io/otel/sdk/metric v1.28.0/go.mod h1:cWPjykihLAPvXKi4iZc1dpER3Jdq2Z0YLse3moQUCpg=\ngo.opentelemetry.io/otel/trace v1.28.0 h1:GhQ9cUuQGmNDd5BTCP2dAvv75RdMxEfTmYejp+lkx9g=\ngo.opentelemetry.io/otel/trace v1.28.0/go.mod h1:jPyXzNPg6da9+38HEwElrQiHlVMTnVfM3/yv2OlIHaI=\ngo.opentelemetry.io/proto/otlp v1.3.1 h1:TrMUixzpM0yuc/znrFTP9MMRh8trP93mkCiDVeXrui0=\ngo.opentelemetry.io/proto/otlp v1.3.1/go.mod h1:0X1WI4de4ZsLrrJNLAQbFeLCm3T7yBkR0XqQ7niQU+8=\ngo.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/atomic v1.9.0 h1:ECmE8Bn/WFTYwEW/bpKD3M8VtR/zQVbavAoalC1PYyE=\ngo.uber.org/atomic v1.9.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/goleak v1.1.11/go.mod h1:cwTWslyiVhfpKIDGSZEM2HlOvcqm+tG4zioyIeLoqMQ=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\ngo.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=\ngo.uber.org/multierr v1.8.0 h1:dg6GjLku4EH+249NNmoIciG9N/jURbDG+pFlTkhzIC8=\ngo.uber.org/multierr v1.8.0/go.mod h1:7EAYxJLBy9rStEaz58O2t4Uvip6FSURkq8/ppBp95ak=\ngo.uber.org/zap v1.21.0 h1:WefMeulhovoZ2sYXz7st6K0sLj7bBhpiFaud4r4zST8=\ngo.uber.org/zap v1.21.0/go.mod h1:wjWOCqI0f2ZZrJF/UufIOkiC8ii6tm1iqIsLo76RfJw=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20181029021203-45a5f77698d3/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190923035154-9ee001bba392/go.mod h1:/lpIB1dKB+9EgE3H3cr1v9wB50oz8l4C4h62xy7jSTY=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20201124201722-c8d3bf9c5392/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20241108190413-2d47ceb2692f h1:XdNn9LlyWAhLVp6P/i8QYBW+hlyhrhei9uErw2B5GJo=\ngolang.org/x/exp v0.0.0-20241108190413-2d47ceb2692f/go.mod h1:D5SMRVC3C2/4+F/DB1wZsLRnSNimn2Sp/NPsCrsv8ak=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.7.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.22.0 h1:D4nJWe9zXqHOmWqj4VMOJhvzj7bEZg4wEYa759z1pH4=\ngolang.org/x/mod v0.22.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181023162649-9b4f9f5ad519/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181201002055-351d144fa1fc/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190923162816-aa69164e4478/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.3.0/go.mod h1:MBQ8lrhLObU/6UmLb4fmbmk5OcyYmqtbGd/9yIeKjEE=\ngolang.org/x/net v0.33.0 h1:74SYHlV8BIgHIFC/LrYkOGIwL19eTYXQ5wc6TBuO36I=\ngolang.org/x/net v0.33.0/go.mod h1:HXLR5J+9DxmrqMwG9qjGCxZ+zKXxBru04zlTvWlWuN4=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.22.0 h1:BzDx2FehcG7jJwgWLELCdmLuxk2i+x9UDpSiss2u0ZA=\ngolang.org/x/oauth2 v0.22.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180823144017-11551d06cbcc/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181026203630-95b1ffbd15a5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190801041406-cbf593c0f2f3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190922100055-0a153f010e69/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190924154521-2837fb4f24fe/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191115151921-52ab43148777/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201126233918-771906719818/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210616094352-59db8d763f22/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220728004956-3c1f35247d10/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220908164124-27713097b956/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.2.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.3.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.10.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201117132131-f5c789dd3221/go.mod h1:Nr5EML6q2oocZ2LXRh80K7BxOlk5/8JxuGnuhpl+muw=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.3.0/go.mod h1:q750SLmJuPmVoN1blW3UFBPREJfb1KmY3vwxfr+nFDA=\ngolang.org/x/term v0.27.0 h1:WP60Sv1nlK1T6SupCHbXzSaN0b9wUmsPoRS9b61A23Q=\ngolang.org/x/term v0.27.0/go.mod h1:iMsnZpn0cago0GOrHO2+Y7u7JPn5AylBrcoWkElMTSM=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.5.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.6.0 h1:eTDhh4ZXt5Qf0augr54TN6suAUudPcawVZeIAPU7D4U=\ngolang.org/x/time v0.6.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190907020128-2ca718005c18/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.5/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.4.0/go.mod h1:UE5sM2OK9E/d67R0ANs2xJizIymRP5gJU295PvKXxjQ=\ngolang.org/x/tools v0.27.0 h1:qEKojBykQkQ4EynWy4S8Weg69NumxKdn40Fce3uc/8o=\ngolang.org/x/tools v0.27.0/go.mod h1:sUi0ZgbwW9ZPAq26Ekut+weQPR5eIM6GQLQ1Yjm1H0Q=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/api v0.155.0 h1:vBmGhCYs0djJttDNynWo44zosHlPvHmA0XiN2zP2DtA=\ngoogle.golang.org/api v0.155.0/go.mod h1:GI5qK5f40kCpHfPn6+YzGAByIKWv8ujFnmoWm7Igduk=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20240123012728-ef4313101c80 h1:KAeGQVN3M9nD0/bQXnr/ClcEMJ968gUXJQ9pwfSynuQ=\ngoogle.golang.org/genproto v0.0.0-20240123012728-ef4313101c80/go.mod h1:cc8bqMqtv9gMOr0zHg2Vzff5ULhhL2IXP4sbcn32Dro=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240701130421-f6361c86f094 h1:0+ozOGcrp+Y8Aq8TLNN2Aliibms5LEzsq99ZZmAGYm0=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240701130421-f6361c86f094/go.mod h1:fJ/e3If/Q67Mj99hin0hMhiNyCRmt6BQ2aWIJshUSJw=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240701130421-f6361c86f094 h1:BwIjyKYGsK9dMCBOorzRri8MQwmi7mT9rGHsCEinZkA=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240701130421-f6361c86f094/go.mod h1:Ue6ibwXGpU+dqIcODieyLOcgj7z8+IcskoNIgZxtrFY=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.66.3 h1:TWlsh8Mv0QI/1sIbs1W36lqRclxrmF+eFJ4DbI0fuhA=\ngoogle.golang.org/grpc v1.66.3/go.mod h1:s3/l6xSSCURdVfAnL+TqCNMyTDAGN6+lZeVxnZR128Y=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.35.2 h1:8Ar7bF+apOIoThw1EdZl0p1oWvMqTHmpA2fRTyZO8io=\ngoogle.golang.org/protobuf v1.35.2/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.5/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngotest.tools/v3 v3.5.1 h1:EENdUnS3pdur5nybKYIh2Vfgc8IUNBjxDPSjtiJcOzU=\ngotest.tools/v3 v3.5.1/go.mod h1:isy3WKz7GK6uNw/sbHzfKBLvlvXwUyV06n6brMxxopU=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nk8s.io/klog/v2 v2.90.1 h1:m4bYOKall2MmOiRaR1J+We67Do7vm9KiQVlT96lnHUw=\nk8s.io/klog/v2 v2.90.1/go.mod h1:y1WjHnz7Dj687irZUWR/WLkLc5N1YHtjLdmgWjndZn0=\nkernel.org/pub/linux/libs/security/libcap/cap v1.2.70 h1:QnLPkuDWWbD5C+3DUA2IUXai5TK6w2zff+MAGccqdsw=\nkernel.org/pub/linux/libs/security/libcap/cap v1.2.70/go.mod h1:/iBwcj9nbLejQitYvUm9caurITQ6WyNHibJk6Q9fiS4=\nkernel.org/pub/linux/libs/security/libcap/psx v1.2.70 h1:HsB2G/rEQiYyo1bGoQqHZ/Bvd6x1rERQTNdPr1FyWjI=\nkernel.org/pub/linux/libs/security/libcap/psx v1.2.70/go.mod h1:+l6Ee2F59XiJ2I6WR5ObpC1utCQJZ/VLsEbQCD8RG24=\nresenje.org/singleflight v0.4.3 h1:l7foFYg8X/VEHPxWs1K/Pw77807RMVzvXgWGb0J1sdM=\nresenje.org/singleflight v0.4.3/go.mod h1:lAgQK7VfjG6/pgredbQfmV0RvG/uVhKo6vSuZ0vCWfk=\nsigs.k8s.io/yaml v1.3.0/go.mod h1:GeOyir5tyXNByN85N/dRIT9es5UQNerPYEKK56eTBm8=\nsigs.k8s.io/yaml v1.4.0 h1:Mk1wCc2gy/F0THH0TAp1QYyJNzRm2KCLy3o5ASXVI5E=\nsigs.k8s.io/yaml v1.4.0/go.mod h1:Ejl7/uTz7PSA4eKMyQCUTnhZYNmLIl+5c2lQPGR2BPY=\ntags.cncf.io/container-device-interface v0.8.0 h1:8bCFo/g9WODjWx3m6EYl3GfUG31eKJbaggyBDxEldRc=\ntags.cncf.io/container-device-interface v0.8.0/go.mod h1:Apb7N4VdILW0EVdEMRYXIDVRZfNJZ+kmEUss2kRRQ6Y=\ntags.cncf.io/container-device-interface/specs-go v0.8.0 h1:QYGFzGxvYK/ZLMrjhvY0RjpUavIn4KcmRmVP/JjdBTA=\ntags.cncf.io/container-device-interface/specs-go v0.8.0/go.mod h1:BhJIkjjPh4qpys+qm4DAYtUyryaTDg9zris+AczXyws=\n"
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        },
        {
          "name": "volume",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}