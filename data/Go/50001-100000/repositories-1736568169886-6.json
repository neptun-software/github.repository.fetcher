{
  "metadata": {
    "timestamp": 1736568169886,
    "page": 6,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "syncthing/syncthing",
      "stars": 66756,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.271484375,
          "content": "comment: false\n\ncoverage:\n  range: \"40...100\"\n  precision: 1\n  status:\n    patch:\n      default:\n        informational: true\n    project:\n      default:\n        informational: true\n\ngithub_checks:\n  annotations: false\n\nignore:\n  - \"**.pb.go\"\n  - \"**_mocked.go\"\n  - \"**/mocks/*\"\n"
        },
        {
          "name": ".deepsource.toml",
          "type": "blob",
          "size": 0.216796875,
          "content": "version = 1\n\nexclude_patterns = [\"**/*.pb.go\"]\ntest_patterns = [\"**/*_test.go\"]\n\n[[analyzers]]\nname = \"go\"\nenabled = true\n\n  [analyzers.meta]\n  import_paths = [\"github.com/syncthing/syncthing\"]\n  build_tags = [\"noassets\"]\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1953125,
          "content": "# Text files use LF line endings in this repository\n*   text=auto\n\n# Except the dependencies, which we leave alone\nvendor/**   -text=auto\n\n# Diffs on these files are meaningless\n*.svg           -diff\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.224609375,
          "content": "/syncthing\n/stdiscosrv\n*.tar.gz\n*.zip\n*.asc\n*.deb\n*.exe\n.jshintrc\ncoverage.out\nfiles/pidx\nbin\nperfstats*.csv\ncoverage.xml\nsyncthing.sig\nRELEASE\ndeb\n*.bz2\n/repos\n/proto/scripts/protoc-gen-gosyncthing\n/gui/next-gen-gui\n/compat.json\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 0.572265625,
          "content": "linters:\n  enable-all: true\n  disable:\n    - cyclop\n    - depguard\n    - exhaustive\n    - exhaustruct\n    - funlen\n    - gci\n    - gochecknoglobals\n    - gochecknoinits\n    - gocognit\n    - goconst\n    - gocyclo\n    - godox\n    - gofmt\n    - goimports\n    - gomoddirectives\n    - inamedparam\n    - interfacebloat\n    - ireturn\n    - lll\n    - maintidx\n    - nestif\n    - nonamedreturns\n    - paralleltest\n    - protogetter\n    - scopelint\n    - tagalign\n    - tagliatelle\n    - testpackage\n    - varnamelen\n    - wsl\n\nissues:\n  exclude-dirs:\n    - internal/gen\n    - cmd/dev\n    - repos"
        },
        {
          "name": ".policy.yml",
          "type": "blob",
          "size": 2.8935546875,
          "content": "# This is the policy-bot configuration for this repository. It controls\n# which approvals are required for any given pull request. The format is\n# described at https://github.com/palantir/policy-bot. The syntax of the\n# policy can be verified by the bot:\n# curl https://pb.syncthing.net/api/validate -X PUT -T .policy.yml\n\n# The policy below is what is required for any pull request.\npolicy:\n  approval:\n    - subject is conventional commit\n    - project metadata requires maintainer approval\n    - or:\n      - is approved by a syncthing contributor\n      - is a translation or dependency update by a contributor\n      - is a trivial change by a contributor\n\n  # Additionally, contributors can disapprove of a PR\n  disapproval:\n    requires:\n      teams:\n        - syncthing/contributors\n\n# The rules for the policy are described below.\n\napproval_rules:\n\n  # All commits (PRs before squashing) should have a valid conventional\n  # commit type subject.\n  - name: subject is conventional commit\n    requires:\n      conditions:\n        title:\n          matches:\n            - '^(feat|fix|docs|chore|refactor|build): [a-z].+'\n            - '^(feat|fix|docs|chore|refactor|build)\\(\\w+(, \\w+)*\\): [a-z].+'\n\n  # Changes to important project metadata and documentation, including this\n  # policy, require signoff by a maintainer\n  - name: project metadata requires maintainer approval\n    if:\n      changed_files:\n        paths:\n          - ^[^/]+\\.md\n          - ^\\.policy\\.yml\n          - ^\\.github/\n          - ^LICENSE\n    requires:\n      count: 1\n      teams:\n        - syncthing/maintainers\n    options:\n      ignore_update_merges: true\n      allow_contributor: true\n\n  # Regular pull requests require approval by an active contributor\n  - name: is approved by a syncthing contributor\n    requires:\n      count: 1\n      teams:\n        - syncthing/contributors\n    options:\n      ignore_update_merges: true\n      allow_contributor: true\n\n  # Changes to some files (translations, dependencies, compatibility) do not\n  # require approval if they were proposed by a contributor and have a\n  # matching commit subject\n  - name: is a translation or dependency update by a contributor\n    if:\n      only_changed_files:\n        paths:\n          - ^gui/default/assets/lang/\n          - ^go\\.mod$\n          - ^go\\.sum$\n          - ^compat\\.yaml$\n      title:\n        matches:\n          - '^chore\\(gui\\):'\n          - '^build\\(deps\\):'\n          - '^build\\(compat\\):'\n      has_author_in:\n        teams:\n          - syncthing/contributors\n\n  # If the change is small and the label \"trivial\" is added, we accept that\n  # on trust. These PRs can be audited after the fact as appropriate.\n  # Features are not trivial.\n  - name: is a trivial change by a contributor\n    if:\n      modified_lines:\n        total: \"< 25\"\n      title:\n        not_matches:\n          - '^feat'\n      has_labels:\n        - trivial\n      has_author_in:\n        teams:\n          - syncthing/contributors\n"
        },
        {
          "name": ".yamlfmt",
          "type": "blob",
          "size": 0.06640625,
          "content": "line_ending: lf\nformatter:\n  type: basic\n  retain_line_breaks: true\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 17.2724609375,
          "content": "# This is the official list of Syncthing authors for copyright purposes.\n#\n# THIS FILE IS MOSTLY AUTO GENERATED. IF YOU'VE MADE A COMMIT TO THE\n# REPOSITORY YOU WILL BE ADDED HERE AUTOMATICALLY WITHOUT THE NEED FOR\n# ANY MANUAL ACTION.\n#\n# That said, you are welcome to correct your name or add a nickname / GitHub\n# user name as appropriate. The format is:\n#\n#    Name Name Name (nickname) <email1@example.com> <email2@example.com>\n#\n# The in-GUI authors list is periodically automatically updated from the\n# contents of this file.\n#\n\nAaron Bieber (qbit) <qbit@deftly.net>\nAdam Piggott (ProactiveServices) <aD@simplypeachy.co.uk> <simplypeachy@users.noreply.github.com> <ProactiveServices@users.noreply.github.com> <adam@proactiveservices.co.uk>\nAdel Qalieh (adelq) <aqalieh95@gmail.com> <adelq@users.noreply.github.com>\nAlan Pope <alan@popey.com>\nAlberto Donato <albertodonato@users.noreply.github.com>\nAleksey Vasenev <margtu-fivt@ya.ru>\nAlessandro G. (alessandro.g89) <alessandro.g89@gmail.com>\nAlex Ionescu <github@ionescu.sh>\nAlex Lindeman <139387+aelindeman@users.noreply.github.com>\nAlex Xu <alex.hello71@gmail.com>\nAlexander Graf (alex2108) <register-github@alex-graf.de>\nAlexander Seiler <seileralex@gmail.com>\nAlexandre Alves <alexandrealvesdb.contact@gmail.com>\nAlexandre Viau (aviau) <alexandre@alexandreviau.net> <aviau@debian.org>\nAman Gupta <aman@tmm1.net>\nAnatoli Babenia <anatoli@rainforce.org>\nAnderson Mesquita (andersonvom) <andersonvom@gmail.com>\nAndreas Sommer <andreas.sommer87@googlemail.com>\nandresvia <andres.via@gmail.com>\nAndrew Dunham (andrew-d) <andrew@du.nham.ca>\nAndrew Meyer <andrewm.bpi@gmail.com>\nAndrew Rabert (nvllsvm) <ar@nullsum.net> <6550543+nvllsvm@users.noreply.github.com>\nAndrey D (scienmind) <scintertech@cryptolab.net> <scienmind@users.noreply.github.com>\nAndré Colomb (acolomb) <src@andre.colomb.de> <github.com@andre.colomb.de>\nandyleap <andyleap@gmail.com>\nAnjan Momi <anjan@momi.ca>\nAnthony Goeckner <agoeckner@users.noreply.github.com>\nAntoine Lamielle (0x010C) <antoine.lamielle@0x010c.fr> <gh@0x010c.fr>\nAntony Male (canton7) <antony.male@gmail.com>\nAnur <anurnomeru@163.com>\nAranjedeath <Aranjedeath@users.noreply.github.com>\nArkadiusz Tymiński <gevleeog@gmail.com>\nAroun <login@b-vo.fr>\nArthur Axel fREW Schmidt (frioux) <frew@afoolishmanifesto.com> <frioux@gmail.com>\nArtur Zubilewicz <AkaZecik@users.noreply.github.com>\nAudrius Butkevicius (AudriusButkevicius) <audrius.butkevicius@gmail.com> <github@audrius.rocks>\nAurélien Rainone <476650+arl@users.noreply.github.com>\nBAHADIR YILMAZ <bahadiryilmaz32@gmail.com>\nBart De Vries (mogwa1) <devriesb@gmail.com>\nBeat Reichenbach <44111292+beatreichenbach@users.noreply.github.com>\nBen Curthoys (bencurthoys) <ben@bencurthoys.com>\nBen Schulz (uok) <ueomkail@gmail.com> <uok@users.noreply.github.com>\nBen Shepherd (benshep) <bjashepherd@gmail.com>\nBen Sidhom (bsidhom) <bsidhom@gmail.com>\nBenedikt Heine (bebehei) <bebe@bebehei.de>\nBenedikt Morbach <benedikt.morbach@googlemail.com>\nBenjamin Nater <17193640+bn4t@users.noreply.github.com>\nBenno Fünfstück <benno.fuenfstueck@gmail.com>\nBenny Ng (tpng) <benny.tpng@gmail.com>\nboomsquared <54829195+boomsquared@users.noreply.github.com>\nBoqin Qin <bobbqqin@bupt.edu.cn>\nBoris Rybalkin <ribalkin@gmail.com>\nBrandon Philips (philips) <brandon@ifup.org>\nBrendan Long (brendanlong) <self@brendanlong.com>\nBrian R. Becker (brbecker) <brbecker@gmail.com>\nbt90 <btom1990@googlemail.com>\nCaleb Callaway (cqcallaw) <enlightened.despot@gmail.com>\nCarsten Hagemann (carstenhag) <moter8@gmail.com> <carsten@chagemann.de>\nCatfriend1 <16361913+Catfriend1@users.noreply.github.com>\nCathryne Linenweaver (Cathryne) <cathryne.linenweaver@gmail.com> <Cathryne@users.noreply.github.com> <katrinleinweber@MAC.local>\nCedric Staniewski (xduugu) <cedric@gmx.ca>\nchenrui <rui@meetup.com>\nChih-Hsuan Yen <yan12125@gmail.com> <1937689+yan12125@users.noreply.github.com>\nChoongkyu <choongkyu.kim+gh@gmail.com> <vapidlyrapid+gh@gmail.com>\nChris Howie (cdhowie) <me@chrishowie.com>\nChris Joel (cdata) <chris@scriptolo.gy>\nChris Tonkinson <chris@masterbran.ch>\nChristian Kujau <ckujau@users.noreply.github.com>\nChristian Prescott <me@christianprescott.com>\nchucic <chucic@seznam.cz>\ncjc7373 <niuchangcun@gmail.com>\nColin Kennedy (moshen) <moshen.colin@gmail.com>\nCromefire_ <tim.l@nghorst.net> <26320625+cromefire@users.noreply.github.com>\ncui fliter <imcusg@gmail.com>\nCyprien Devillez <cypx@users.noreply.github.com>\nd-volution <49024624+d-volution@users.noreply.github.com>\nDale Visser <dale.visser@live.com>\nDan <benda.daniel@gmail.com>\nDaniel Barczyk <46358936+DanielBarczyk@users.noreply.github.com>\nDaniel Bergmann (brgmnn) <dan.arne.bergmann@gmail.com> <brgmnn@users.noreply.github.com>\nDaniel Harte (norgeous) <daniel@harte.me> <daniel@danielharte.co.uk> <norgeous@users.noreply.github.com>\nDaniel Martí (mvdan) <mvdan@mvdan.cc>\nDaniel Padrta <64928366+danpadcz@users.noreply.github.com>\nDarshil Chanpura (dtchanpura) <dtchanpura@gmail.com> <dcprime314@gmail.com>\nDavid Rimmer (dinosore) <dinosore@dbrsoftware.co.uk>\ndeepsource-autofix[bot] <62050782+deepsource-autofix[bot]@users.noreply.github.com>\nDeflateAwning <11021263+DeflateAwning@users.noreply.github.com>\nDenis A. (dva) <denisva@gmail.com>\nDennis Wilson (snnd) <dw@risu.io>\ndependabot-preview[bot] <dependabot-preview[bot]@users.noreply.github.com> <27856297+dependabot-preview[bot]@users.noreply.github.com>\ndependabot[bot] <dependabot[bot]@users.noreply.github.com> <49699333+dependabot[bot]@users.noreply.github.com>\nderekriemer <derek.riemer@colorado.edu>\nDerRockWolf <50499906+DerRockWolf@users.noreply.github.com>\ndesbma <desbma@users.noreply.github.com>\nDevon G. Redekopp <devon@redekopp.com>\ndiemade <spamkill@posteo.ch>\ndigital <didev@dinid.net>\nDimitri Papadopoulos Orfanos <3234522+DimitriPapadopoulos@users.noreply.github.com>\nDmitry Saveliev (dsaveliev) <d.e.saveliev@gmail.com>\nDomenic Horner <domenic@tgxn.net>\nDominik Heidler (asdil12) <dominik@heidler.eu>\nElias Jarlebring (jarlebring) <jarlebring@gmail.com>\nElliot Huffman <thelich2@gmail.com>\nEmil Hessman (ceh) <emil@hessman.se>\nEmil Lundberg <emil@emlun.se>\nEng Zer Jun <engzerjun@gmail.com>\nentity0xfe <109791748+entity0xfe@users.noreply.github.com> <entity0xfe@my.domain>\nEric Lesiuta <elesiuta@gmail.com>\nEric P <eric@kastelo.net>\nErik Meitner (WSGCSysadmin) <e.meitner@willystreet.coop>\nEvan Spensley <94762716+0evan@users.noreply.github.com>\nEvgeny Kuznetsov <evgeny@kuznetsov.md>\nFederico Castagnini (facastagnini) <federico.castagnini@gmail.com>\nFelix <53702818+f-eliks@users.noreply.github.com>\nFelix Ableitner (Nutomic) <me@nutomic.com>\nFelix Lampe <mail@flampe.de>\nFelix Unterpaintner (bigbear2nd) <bigbear2nd@gmail.com>\nFrancois-Xavier Gsell (zukoo) <fxgsell@gmail.com>\nFrank Isemann (fti7) <frank@isemann.name>\nGahl Saraf <saraf.gahl@gmail.com> <gahl@raftt.io>\ngeorgespatton <georgespatton@users.noreply.github.com>\nghjklw <malo@jaffre.info>\nGilli Sigurdsson (gillisig) <gilli@vx.is>\nGleb Sinyavskiy <zhulik.gleb@gmail.com>\nGraham Miln (grahammiln) <graham.miln@dssw.co.uk> <graham.miln@miln.eu>\ngreatroar <61184462+greatroar@users.noreply.github.com>\nGreg <gco@jazzhaiku.com>\nguangwu <guoguangwu@magic-shield.com>\ngudvinr <gudvinr@gmail.com>\nGusted <postmaster@gusted.xyz> <williamzijl7@hotmail.com>\nHan Boetes <han@boetes.org>\nHansK-p <42314815+HansK-p@users.noreply.github.com>\nHarrison Jones (harrisonhjones) <harrisonhjones@users.noreply.github.com>\nHeiko Zuerker (Smiley73) <heiko@zuerker.org>\nHireworks <129852174+hireworksltd@users.noreply.github.com>\nHugo Locurcio <hugo.locurcio@hugo.pro>\nIain Barnett <iainspeed@gmail.com>\nIan Johnson (anonymouse64) <ian.johnson@canonical.com> <person.uwsome@gmail.com>\nignacy123 <ignacy.buczek@onet.pl>\nIkko Ashimine <eltociear@gmail.com>\nIlya Brin <464157+ilyabrin@users.noreply.github.com>\nIskander Sharipov (Alex) <quasilyte@gmail.com>\nJaakko Hannikainen (jgke) <jgke@jgke.fi>\nJacek Szafarkiewicz (hadogenes) <szafar@linux.pl>\nJack Croft <jccroft1@users.noreply.github.com>\nJacob <jyundt@gmail.com>\nJake Peterson (acogdev) <jake@acogdev.com>\nJakob Borg (calmh) <jakob@nym.se> <jakob@kastelo.net> <jborg@coreweave.com>\nJames O'Beirne <wild-github@au92.org>\nJames Patterson (jpjp) <jamespatterson@operamail.com> <jpjp@users.noreply.github.com>\njanost <janost@tuta.io>\nJaroslav Lichtblau <svetlemodry@users.noreply.github.com>\nJaroslav Malec (dzarda) <dzardacz@gmail.com>\njaseg <githubaccount@jaseg.net>\nJaspitta <ste.scarpitta@gmail.com>\nJauder Ho <jauderho@users.noreply.github.com>\nJaya Chithra (jayachithra) <s.k.jayachithra@gmail.com>\nJaya Kumar <jaya.kumar@ict.nl>\nJeffery To <jeffery.to@gmail.com>\njelle van der Waa <jelle@vdwaa.nl>\nJens Diemer (jedie) <github.com@jensdiemer.de> <git@jensdiemer.de>\nJerry Jacobs (xor-gate) <jerry.jacobs@xor-gate.org> <xor-gate@users.noreply.github.com>\nJesse Lucas <jesse@jesselucas.com>\nJochen Voss (seehuhn) <voss@seehuhn.de>\nJohan Andersson <j@i19.se>\nJohan Vromans (sciurius) <jvromans@squirrel.nl>\nJohn Rinehart (fuzzybear3965) <johnrichardrinehart@gmail.com>\nJonas Thelemann <e-mail@jonas-thelemann.de>\nJonathan <artback@protonmail.com> <jonagn@gmail.com>\nJonathan Cross <jcross@gmail.com>\nJonta <359397+Jonta@users.noreply.github.com>\nJose Manuel Delicado (jmdaweb) <jmdaweb@hotmail.com> <jmdaweb@users.noreply.github.com>\njtagcat <git-514635f7@jtag.cat> <git-12dbd862@jtag.cat>\nJulian Lehrhuber <jul13579@users.noreply.github.com>\nJörg Thalheim <Mic92@users.noreply.github.com>\nJędrzej Kula <kula.jedrek@gmail.com>\nK.B.Dharun Krishna <kbdharunkrishna@gmail.com>\nKalle Laine <pahakalle@protonmail.com>\nKapil Sareen <kapilsareen584@gmail.com>\nKarol Różycki (krozycki) <rozycki.karol@gmail.com>\nKebin Liu <lkebin@gmail.com>\nKeith Harrison <keithh@protonmail.com>\nKeith Turner <kturner@apache.org>\nKelong Cong (kc1212) <kc04bc@gmx.com> <kc1212@users.noreply.github.com>\nKen'ichi Kamada (kamadak) <kamada@nanohz.org>\nKevin Allen (ironmig) <kma1660@gmail.com>\nKevin Bushiri (keevBush) <keevbush@gmail.com> <36192217+keevBush@users.noreply.github.com>\nKevin White, Jr. (kwhite17) <kevinwhite1710@gmail.com>\nklemens <ka7@github.com>\nKurt Fitzner (Kudalufi) <kurt@va1der.ca> <kurt.fitzner@gmail.com>\nkylosus <33132401+kylosus@users.noreply.github.com>\nLars K.W. Gohlke (lkwg82) <lkwg82@gmx.de>\nLars Lehtonen <lars.lehtonen@gmail.com>\nLaurent Arnoud <laurent@spkdev.net>\nLaurent Etiemble (letiemble) <laurent.etiemble@gmail.com> <laurent.etiemble@monobjc.net>\nLeo Arias (elopio) <yo@elopio.net>\nLiu Siyuan (liusy182) <liusy182@gmail.com> <liusy182@hotmail.com>\nLode Hoste (Zillode) <zillode@zillode.be>\nLord Landon Agahnim (LordLandon) <lordlandon@gmail.com>\nLSmithx2 <42276854+lsmithx2@users.noreply.github.com>\nluchenhan <168071714+luchenhan@users.noreply.github.com>\nLukas Lihotzki <lukas@lihotzki.de>\nLuke Hamburg <1992842+luckman212@users.noreply.github.com>\nluzpaz <luzpaz@users.noreply.github.com>\nMajed Abdulaziz (majedev) <majed.alhajry@gmail.com>\nMarc Laporte (marclaporte) <marc@marclaporte.com> <marc@laporte.name>\nMarc Pujol (kilburn) <kilburn@la3.org>\nMarcin Dziadus (marcindziadus) <dziadus.marcin@gmail.com>\nmarco-m <marco.molteni@laposte.net>\nMarcus Legendre <marcus.legendre@gmail.com>\nMario Majila <mariustshipichik@gmail.com>\nMark Pulford (mpx) <mark@kyne.com.au>\nMartchus <martchus@gmx.net>\nMartin Polehla <p0l0us@users.noreply.github.com>\nMateusz Naściszewski (mateon1) <matin1111@wp.pl>\nMateusz Ż <thedead4fun@live.com>\nMatic Potočnik <hairyfotr@gmail.com>\nMatt Burke (burkemw3) <mburke@amplify.com> <burkemw3@gmail.com>\nMatt Robenolt <matt@ydekproductions.com>\nMatteo Ruina <matteo.ruina@gmail.com>\nMaurizio Tomasi <ziotom78@gmail.com>\nMax <github@germancoding.com>\nMax Schulze (kralo) <max.schulze@online.de> <kralo@users.noreply.github.com>\nmaxice8 <30738253+maxice8@users.noreply.github.com>\nMaximAL <almaximal@ya.ru>\nMaxime Thirouin <m@moox.io>\nMaximilian <maxi.rostock@outlook.de> <public@complexvector.space>\nmclang <1721600+mclang@users.noreply.github.com>\nMichael Jephcote (Rewt0r) <rewt0r@gmx.com> <Rewt0r@users.noreply.github.com>\nMichael Ploujnikov (plouj) <ploujj@gmail.com>\nMichael Rienstra <mrienstra@gmail.com>\nMichael Tilli (pyfisch) <pyfisch@gmail.com>\nMichaIng <micha@dietpi.com>\nMigelo <miha@filetki.si>\nMike Boone <mike@boonedocks.net>\nMikeLund <MikeLund@users.noreply.github.com>\nMikolajTwarog <43782609+MikolajTwarog@users.noreply.github.com>\nMingxuan Lin <gdlmx@users.noreply.github.com>\nmv1005 <49659413+mv1005@users.noreply.github.com>\nNate Morrison (nrm21) <natemorrison@gmail.com>\nNaveen <172697+naveensrinivasan@users.noreply.github.com>\nnf <nf@wh3rd.net>\nNicholas Rishel (PrototypeNM1) <rishel.nick@gmail.com> <PrototypeNM1@users.noreply.github.com>\nNick Busey <NickBusey@users.noreply.github.com>\nNico Stapelbroek <3368018+nstapelbroek@users.noreply.github.com>\nNicolas Braud-Santoni <nicolas@braud-santoni.eu>\nNicolas Perraut <n.perraut@gmail.com>\nNiels Peter Roest (Niller303) <nielsproest@hotmail.com> <seje.niels@hotmail.com>\nNils Jakobi (thunderstorm99) <jakobi.nils@gmail.com>\nNinoM4ster <ninom4ster@gmail.com>\nNitroretro <43112364+Nitroretro@users.noreply.github.com>\nNoLooseEnds <jon.koslung@gmail.com>\nOliver Freyermuth <o.freyermuth@googlemail.com>\norangekame3 <miya.org.0309@gmail.com>\notbutz <tbutz@optitool.de>\nOtiel <Otiel@users.noreply.github.com>\noverkill <22098433+0verk1ll@users.noreply.github.com>\nOyebanji Jacob Mayowa <oyebanji05@gmail.com>\nPablo <pbaeyens31+github@gmail.com>\nPascal Jungblut (pascalj) <github@pascalj.com> <mail@pascal-jungblut.com>\nPaul Brit <paulbrit44@gmail.com>\nPawel Palenica (qepasa) <pawelpalenica11@gmail.com>\nPaweł Rozlach <vespian@users.noreply.github.com>\nperewa <cavalcante.ten@gmail.com>\nPeter Badida <KeyWeeUsr@users.noreply.github.com>\nPeter Dave Hello <hsu@peterdavehello.org>\nPeter Hoeg (peterhoeg) <peter@speartail.com>\nPeter Marquardt (wwwutz) <wwwutz@gmail.com> <wwwutz@googlemail.com>\nPhani Rithvij <phanirithvij2000@gmail.com>\nPhil Davis <phil.davis@inf.org>\nPhilippe Schommers (filoozoom) <philippe@schommers.be>\nPhill Luby (pluby) <phill.luby@newredo.com>\nPier Paolo Ramon <ramonpierre@gmail.com>\nPiotr Bejda (piobpl) <piotrb10@gmail.com>\nPramodh KP (pramodhkp) <pramodh.p@directi.com> <1507241+pramodhkp@users.noreply.github.com>\nQuentin Hibon <qh.public@yahoo.com>\nRahmi Pruitt <rjpruitt16@gmail.com>\nred_led <red-led@users.noreply.github.com>\nRichard Hartmann <RichiH@users.noreply.github.com>\nRobert Carosi (nov1n) <robert@carosi.nl>\nRoberto Santalla <roobre@users.noreply.github.com>\nRobin Schoonover <robin@cornhooves.org>\nRoman Zaynetdinov (zaynetro) <romanznet@gmail.com>\nRoss Smith II (rasa) <ross@smithii.com>\nrubenbe <github-com-00ff86@vandamme.email>\nRuslan Yevdokymov <38809160+ruslanye@users.noreply.github.com>\nRyan Qian <i@bitbili.net>\nRyan Sullivan (KayoticSully) <kayoticsully@gmail.com>\nSacheendra Talluri (sacheendra) <sacheendra.t@gmail.com>\nScott Klupfel (kluppy) <kluppy@going2blue.com>\nsec65 <106604020+sec65@users.noreply.github.com>\nSergey Mishin (ralder) <ralder@yandex.ru>\nSertonix <83883937+Sertonix@users.noreply.github.com>\nSeverin von Wnuck-Lipinski <ss7@live.de>\nShaarad Dalvi <60266155+shaaraddalvi@users.noreply.github.com> <shdalv@microsoft.com>\nSimon Frei (imsodin) <freisim93@gmail.com>\nSimon Mwepu <simonmwepu@gmail.com>\nSimon Pickup <simon@pickupinfinity.com>\nSly_tom_cat <slytomcat@mail.ru>\nSonu Kumar Saw <31889738+dev-saw99@users.noreply.github.com>\nStefan Kuntz (Stefan-Code) <stefan.github@gmail.com> <Stefan.github@gmail.com>\nStefan Tatschner (rumpelsepp) <stefan@sevenbyte.org> <rumpelsepp@sevenbyte.org> <stefan@rumpelsepp.org>\nSteven Eckhoff <steven.eckhoff.opensource@gmail.com>\nSuhas Gundimeda (snugghash) <suhas.gundimeda@gmail.com> <snugghash@gmail.com>\nSven Bachmann <dev@mcbachmann.de>\nSyncthing Automation <automation@syncthing.net>\nSyncthing Release Automation <release@syncthing.net>\nTaylor Khan (nelsonkhan) <nelsonkhan@gmail.com>\nTerrance <git@terrance.allofti.me>\nThomas <9749173+uhthomas@users.noreply.github.com>\nThomas Hipp <thomashipp@gmail.com>\nTim Abell (timabell) <tim@timwise.co.uk>\nTim Howes (timhowes) <timhowes@berkeley.edu>\nTim Nordenfur <tim@gurka.se>\nTobias Frölich <40638719+tobifroe@users.noreply.github.com>\nTobias Klauser <tobias.klauser@gmail.com>\nTobias Nygren (tnn2) <tnn@nygren.pp.se>\nTobias Tom (tobiastom) <t.tom@succont.de>\nTom Jakubowski <tom@crystae.net>\nTomasz Wilczyński <5626656+tomasz1986@users.noreply.github.com> <twilczynski@naver.com>\nTommy Thorn <tommy-github-email@thorn.ws>\nTommy van der Vorst <tommy-github@pixelspark.nl> <tommy@pixelspark.nl>\nTully Robinson (tojrobinson) <tully@tojr.org>\nTyler Brazier (tylerbrazier) <tyler@tylerbrazier.com>\nTyler Kropp <kropptyler@gmail.com>\nUnrud (Unrud) <unrud@openaliasbox.org> <Unrud@users.noreply.github.com>\nvapatel2 <149737089+vapatel2@users.noreply.github.com>\nVeeti Paananen (veeti) <veeti.paananen@rojekti.fi>\nVictor Buinsky (buinsky) <vix_booja@tut.by>\nVik <63919734+ViktorOn@users.noreply.github.com>\nVil Brekin (Vilbrekin) <vilbrekin@gmail.com>\nvillekalliomaki <53118179+villekalliomaki@users.noreply.github.com>\nVladimir Rusinov <vrusinov@google.com> <vladimir.rusinov@gmail.com>\nwangguoliang <liangcszzu@163.com>\nWangXi <xib1102@icloud.com>\nWill Rouesnel <wrouesnel@wrouesnel.com>\nWilliam A. Kennington III (wkennington) <william@wkennington.com>\nwouter bolsterlee <wouter@bolsterl.ee>\nWulf Weich (wweich) <wweich@users.noreply.github.com> <wweich@gmx.de> <wulf@weich-kr.de>\nxarx00 <xarx00@users.noreply.github.com>\nXavier O. (damajor) <damajor@gmail.com>\nxjtdy888 (xjtdy888) <xjtdy888@163.com>\nYannic A. (eipiminus1) <eipiminusone+github@gmail.com> <eipiminus1@users.noreply.github.com>\n佛跳墙 <daoquan@qq.com>\n落心 <luoxin.ttt@gmail.com>\n"
        },
        {
          "name": "CONDUCT.md",
          "type": "blob",
          "size": 3.154296875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\neducation, socio-economic status, nationality, personal appearance, race,\nreligion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at security@syncthing.net. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.2744140625,
          "content": "## Reporting Bugs\n\nPlease file bugs in the [GitHub Issue\nTracker](https://github.com/syncthing/syncthing/issues). Include at\nleast the following:\n\n - What happened\n\n - What did you expect to happen instead of what *did* happen, if it's\n   not crazy obvious\n\n - What operating system, operating system version and version of\n   Syncthing you are running\n\n - The same for other connected devices, where relevant\n\n - Screenshot if the issue concerns something visible in the GUI\n\n - Console log entries, where possible and relevant\n\nIf you're not sure whether something is relevant, erring on the side of\ntoo much information will never get you yelled at. :)\n\n## Contributing Translations\n\nAll translations are done via\n[Weblate](https://hosted.weblate.org/projects/syncthing/). If you wish\nto contribute to a translation, just head over there and sign up.\nBefore every release, the language resources are updated from the\nlatest info on Weblate.\n\nNote that the previously used service at\n[Transifex](https://www.transifex.com/projects/p/syncthing/) is being\nretired and we kindly ask you to sign up on Weblate for continued\ninvolvement.\n\n## Contributing Code\n\nEvery contribution is welcome. If you want to contribute but are unsure\nwhere to start, any open issues are fair game! See the [Contribution\nGuidelines](https://docs.syncthing.net/dev/contributing.html) for the full\nstory on committing code.\n\n## Contributing Documentation\n\nUpdates to the [documentation site](https://docs.syncthing.net/) can be\nmade as pull requests on the [documentation\nrepository](https://github.com/syncthing/docs).\n\n## Licensing\n\nAll contributions are made available under the same license as the already\nexisting material being contributed to. For most of the project and unless\notherwise stated this means MPLv2, but there are exceptions:\n\n- Certain commands (under cmd/...) may have a separate license, indicated by\n  the presence of a LICENSE file in the corresponding directory.\n\n- The documentation (man/...) is licensed under the Creative Commons\n  Attribution 4.0 International License.\n\n- Projects under vendor/... are copyright by and licensed from their\n  respective original authors. Contributions should be made to the original\n  project, not here.\n\nRegardless of the license in effect, you retain the copyright to your\ncontribution.\n\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.705078125,
          "content": "ARG GOVERSION=latest\n\n#\n# Maybe build Syncthing. This is a bit ugly as we can't make an entire\n# section of the Dockerfile conditional, so we end up always pulling the\n# golang image as builder. Then we check if the executable we need already\n# exists (pre-built) otherwise we build it.\n#\n\nFROM golang:$GOVERSION AS builder\nARG BUILD_USER\nARG BUILD_HOST\nARG TARGETARCH\n\nWORKDIR /src\nCOPY . .\n\nENV CGO_ENABLED=0\nRUN if [ ! -f syncthing-linux-$TARGETARCH ] ; then \\\n    go run build.go -no-upgrade build syncthing ; \\\n    mv syncthing syncthing-linux-$TARGETARCH ; \\\n  fi\n\n#\n# The rest of the Dockerfile uses the binary from the builder, prebuilt or\n# not.\n#\n\nFROM alpine\nARG TARGETARCH\n\nLABEL org.opencontainers.image.authors=\"The Syncthing Project\" \\\n      org.opencontainers.image.url=\"https://syncthing.net\" \\\n      org.opencontainers.image.documentation=\"https://docs.syncthing.net\" \\\n      org.opencontainers.image.source=\"https://github.com/syncthing/syncthing\" \\\n      org.opencontainers.image.vendor=\"The Syncthing Project\" \\\n      org.opencontainers.image.licenses=\"MPL-2.0\" \\\n      org.opencontainers.image.title=\"Syncthing\"\n\nEXPOSE 8384 22000/tcp 22000/udp 21027/udp\n\nVOLUME [\"/var/syncthing\"]\n\nRUN apk add --no-cache ca-certificates curl libcap su-exec tzdata\n\nCOPY --from=builder /src/syncthing-linux-$TARGETARCH /bin/syncthing\nCOPY --from=builder /src/script/docker-entrypoint.sh /bin/entrypoint.sh\n\nENV PUID=1000 PGID=1000 HOME=/var/syncthing\n\nHEALTHCHECK --interval=1m --timeout=10s \\\n  CMD curl -fkLsS -m 2 127.0.0.1:8384/rest/noauth/health | grep -o --color=never OK || exit 1\n\nENV STGUIADDRESS=0.0.0.0:8384\nENV STHOMEDIR=/var/syncthing/config\nRUN chmod 755 /bin/entrypoint.sh\nENTRYPOINT [\"/bin/entrypoint.sh\", \"/bin/syncthing\"]\n"
        },
        {
          "name": "Dockerfile.builder",
          "type": "blob",
          "size": 0.7060546875,
          "content": "ARG GOVERSION=latest\nFROM golang:$GOVERSION\n\nLABEL org.opencontainers.image.authors=\"The Syncthing Project\" \\\n      org.opencontainers.image.url=\"https://syncthing.net\" \\\n      org.opencontainers.image.documentation=\"https://docs.syncthing.net\" \\\n      org.opencontainers.image.source=\"https://github.com/syncthing/syncthing\" \\\n      org.opencontainers.image.vendor=\"The Syncthing Project\" \\\n      org.opencontainers.image.licenses=\"MPL-2.0\" \\\n      org.opencontainers.image.title=\"Syncthing Builder\"\n\n# FPM to build Debian packages\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\tlocales rubygems ruby-dev build-essential git \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t&& gem install fpm\n"
        },
        {
          "name": "Dockerfile.stcrashreceiver",
          "type": "blob",
          "size": 0.591796875,
          "content": "FROM alpine\nARG TARGETARCH\n\nLABEL org.opencontainers.image.authors=\"The Syncthing Project\" \\\n      org.opencontainers.image.url=\"https://syncthing.net\" \\\n      org.opencontainers.image.documentation=\"https://docs.syncthing.net\" \\\n      org.opencontainers.image.source=\"https://github.com/syncthing/syncthing\" \\\n      org.opencontainers.image.vendor=\"The Syncthing Project\" \\\n      org.opencontainers.image.licenses=\"MPL-2.0\" \\\n      org.opencontainers.image.title=\"Syncthing Crash Receiver\"\n\nEXPOSE 8080\n\nCOPY stcrashreceiver-linux-${TARGETARCH} /bin/stcrashreceiver\n\nENTRYPOINT [ \"/bin/stcrashreceiver\" ]\n"
        },
        {
          "name": "Dockerfile.stdiscosrv",
          "type": "blob",
          "size": 1.2119140625,
          "content": "ARG GOVERSION=latest\nFROM golang:$GOVERSION AS builder\nARG BUILD_USER\nARG BUILD_HOST\nARG TARGETARCH\n\nWORKDIR /src\nCOPY . .\n\nENV CGO_ENABLED=0\nRUN if [ ! -f stdiscosrv-linux-$TARGETARCH ] ; then \\\n    go run build.go -no-upgrade build stdiscosrv ; \\\n    mv stdiscosrv stdiscosrv-linux-$TARGETARCH ; \\\n  fi\n\nFROM alpine\nARG TARGETARCH\n\nLABEL org.opencontainers.image.authors=\"The Syncthing Project\" \\\n      org.opencontainers.image.url=\"https://syncthing.net\" \\\n      org.opencontainers.image.documentation=\"https://docs.syncthing.net\" \\\n      org.opencontainers.image.source=\"https://github.com/syncthing/syncthing\" \\\n      org.opencontainers.image.vendor=\"The Syncthing Project\" \\\n      org.opencontainers.image.licenses=\"MPL-2.0\" \\\n      org.opencontainers.image.title=\"Syncthing Discovery Server\"\n\nEXPOSE 19200 8443\n\nVOLUME [\"/var/stdiscosrv\"]\n\nRUN apk add --no-cache ca-certificates su-exec\n\nCOPY --from=builder /src/stdiscosrv-linux-$TARGETARCH /bin/stdiscosrv\nCOPY --from=builder /src/script/docker-entrypoint.sh /bin/entrypoint.sh\n\nENV PUID=1000 PGID=1000 HOME=/var/stdiscosrv\n\nHEALTHCHECK --interval=1m --timeout=10s \\\n  CMD nc -z localhost 8443 || exit 1\n\nWORKDIR /var/stdiscosrv\nENTRYPOINT [\"/bin/entrypoint.sh\", \"/bin/stdiscosrv\"]\n"
        },
        {
          "name": "Dockerfile.strelaypoolsrv",
          "type": "blob",
          "size": 0.609375,
          "content": "FROM alpine\nARG TARGETARCH\n\nLABEL org.opencontainers.image.authors=\"The Syncthing Project\" \\\n      org.opencontainers.image.url=\"https://syncthing.net\" \\\n      org.opencontainers.image.documentation=\"https://docs.syncthing.net\" \\\n      org.opencontainers.image.source=\"https://github.com/syncthing/syncthing\" \\\n      org.opencontainers.image.vendor=\"The Syncthing Project\" \\\n      org.opencontainers.image.licenses=\"MPL-2.0\" \\\n      org.opencontainers.image.title=\"Syncthing Relay Pool Server\"\n\nEXPOSE 8080\n\nCOPY strelaypoolsrv-linux-${TARGETARCH} /bin/strelaypoolsrv\n\nENTRYPOINT [\"/bin/strelaypoolsrv\", \"-listen\", \":8080\"]\n"
        },
        {
          "name": "Dockerfile.strelaysrv",
          "type": "blob",
          "size": 1.2099609375,
          "content": "ARG GOVERSION=latest\nFROM golang:$GOVERSION AS builder\nARG BUILD_USER\nARG BUILD_HOST\nARG TARGETARCH\n\nWORKDIR /src\nCOPY . .\n\nENV CGO_ENABLED=0\nRUN if [ ! -f strelaysrv-linux-$TARGETARCH ] ; then \\\n    go run build.go -no-upgrade build strelaysrv ; \\\n    mv strelaysrv strelaysrv-linux-$TARGETARCH ; \\\n  fi\n\nFROM alpine\nARG TARGETARCH\n\nLABEL org.opencontainers.image.authors=\"The Syncthing Project\" \\\n      org.opencontainers.image.url=\"https://syncthing.net\" \\\n      org.opencontainers.image.documentation=\"https://docs.syncthing.net\" \\\n      org.opencontainers.image.source=\"https://github.com/syncthing/syncthing\" \\\n      org.opencontainers.image.vendor=\"The Syncthing Project\" \\\n      org.opencontainers.image.licenses=\"MPL-2.0\" \\\n      org.opencontainers.image.title=\"Syncthing Relay Server\"\n\nEXPOSE 22067 22070\n\nVOLUME [\"/var/strelaysrv\"]\n\nRUN apk add --no-cache ca-certificates su-exec\n\nCOPY --from=builder /src/strelaysrv-linux-$TARGETARCH /bin/strelaysrv\nCOPY --from=builder /src/script/docker-entrypoint.sh /bin/entrypoint.sh\n\nENV PUID=1000 PGID=1000 HOME=/var/strelaysrv\n\nHEALTHCHECK --interval=1m --timeout=10s \\\n  CMD nc -z localhost 22067 || exit 1\n\nWORKDIR /var/strelaysrv\nENTRYPOINT [\"/bin/entrypoint.sh\", \"/bin/strelaysrv\"]\n"
        },
        {
          "name": "Dockerfile.stupgrades",
          "type": "blob",
          "size": 0.5712890625,
          "content": "FROM alpine\nARG TARGETARCH\n\nLABEL org.opencontainers.image.authors=\"The Syncthing Project\" \\\n      org.opencontainers.image.url=\"https://syncthing.net\" \\\n      org.opencontainers.image.documentation=\"https://docs.syncthing.net\" \\\n      org.opencontainers.image.source=\"https://github.com/syncthing/syncthing\" \\\n      org.opencontainers.image.vendor=\"The Syncthing Project\" \\\n      org.opencontainers.image.licenses=\"MPL-2.0\" \\\n      org.opencontainers.image.title=\"Syncthing Upgrades\"\n\nEXPOSE 8080\n\nCOPY stupgrades-linux-${TARGETARCH} /bin/stupgrades\n\nENTRYPOINT [ \"/bin/stupgrades\" ]\n"
        },
        {
          "name": "Dockerfile.ursrv",
          "type": "blob",
          "size": 0.5703125,
          "content": "FROM alpine\nARG TARGETARCH\n\nLABEL org.opencontainers.image.authors=\"The Syncthing Project\" \\\n      org.opencontainers.image.url=\"https://syncthing.net\" \\\n      org.opencontainers.image.documentation=\"https://docs.syncthing.net\" \\\n      org.opencontainers.image.source=\"https://github.com/syncthing/syncthing\" \\\n      org.opencontainers.image.vendor=\"The Syncthing Project\" \\\n      org.opencontainers.image.licenses=\"MPL-2.0\" \\\n      org.opencontainers.image.title=\"Syncthing Usage Reporting Server\"\n\nEXPOSE 8080\n\nCOPY ursrv-linux-${TARGETARCH} /bin/ursrv\n\nENTRYPOINT [ \"/bin/ursrv\" ]\n"
        },
        {
          "name": "GOALS.md",
          "type": "blob",
          "size": 3.431640625,
          "content": "# The Syncthing Goals\n\nSyncthing is a **continuous file synchronization program**. It synchronizes\nfiles between two or more computers. We strive to fulfill the goals below.\nThe goals are listed in order of importance, the most important one being\nthe first.\n\n> \"Syncing files\" here is precise. It means we specifically exclude things\n> that are not files - calendar items, instant messages, and so on. If those\n> are in fact stored as files on disk, they can of course be synced as\n> files.\n\nSyncthing should be:\n\n### 1. Safe From Data Loss\n\nProtecting the user's data is paramount. We take every reasonable precaution\nto avoid corrupting the user's files.\n\n> This is the overriding goal, without which synchronizing files becomes\n> pointless. This means that we do not make unsafe trade offs for the sake\n> of performance or, in some cases, even usability.\n\n### 2. Secure Against Attackers\n\nAgain, protecting the user's data is paramount. Regardless of our other\ngoals, we must never allow the user's data to be susceptible to eavesdropping\nor modification by unauthorized parties.\n\n> This should be understood in context. It is not necessarily reasonable to\n> expect Syncthing to be resistant against well equipped state level\n> attackers. We will, however, do our best. Note also that this is different\n> from anonymity which is not, currently, a goal.\n\n### 3. Easy to Use\n\nSyncthing should be approachable, understandable, and inclusive.\n\n> Complex concepts and maths form the base of Syncthing's functionality.\n> This should nonetheless be abstracted or hidden to a degree where\n> Syncthing is usable by the general public.\n\n### 4. Automatic\n\nUser interaction should be required only when absolutely necessary.\n\n> Specifically this means that changes to files are picked up without\n> prompting, conflicts are resolved without prompting and connections are\n> maintained without prompting. We only prompt the user when it is required\n> to fulfill one of the (overriding) Secure, Safe or Easy goals.\n\n### 5. Universally Available\n\nSyncthing should run on every common computer. We are mindful that the\nlatest technology is not always available to every individual.\n\n> Computers include desktops, laptops, servers, virtual machines, small\n> general purpose computers such as Raspberry Pis and, *where possible*,\n> tablets and phones. NAS appliances, toasters, cars, firearms, thermostats,\n> and so on may include computing capabilities but it is not our goal for\n> Syncthing to run smoothly on these devices.\n\n### 6. For Individuals\n\nSyncthing is primarily about empowering the individual user with safe,\nsecure, and easy to use file synchronization.\n\n> We acknowledge that it's also useful in an enterprise setting and include\n> functionality to support that. If this is in conflict with the\n> requirements of the individual, those will however take priority.\n\n### 7. Everything Else\n\nThere are many things we care about that don't make it on to the list. It is\nfine to optimize for these values as well, as long as they are not in\nconflict with the stated goals above.\n\n> For example, performance is a thing we care about. We just don't care more\n> about it than safety, security, etc. Maintainability of the code base and\n> providing entertainment value for the maintainers are also things that\n> matter. It is understood that there are aspects of Syncthing that are\n> suboptimal or even in opposition with the goals above. However, we\n> continuously strive to align Syncthing more and more with these goals.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 16.333984375,
          "content": "Mozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at https://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n"
        },
        {
          "name": "README-Docker.md",
          "type": "blob",
          "size": 3.6865234375,
          "content": "# Docker Container for Syncthing\n\nUse the Dockerfile in this repo, or pull the `syncthing/syncthing` image\nfrom Docker Hub.\n\nUse the `/var/syncthing` volume to have the synchronized files available on the\nhost. You can add more folders and map them as you prefer.\n\nNote that Syncthing runs as UID 1000 and GID 1000 by default. These may be\naltered with the `PUID` and `PGID` environment variables. In addition\nthe name of the Syncthing instance can be optionally defined by using\n`--hostname=syncthing` parameter.\n\nTo grant Syncthing additional capabilities without running as root, use the\n`PCAP` environment variable with the same syntax as that for `setcap(8)`.\nFor example, `PCAP=cap_chown,cap_fowner+ep`.\n\nTo set a different umask value, use the `UMASK` environment variable. For\nexample `UMASK=002`.\n\n## Example Usage\n\n**Docker cli**\n```\n$ docker pull syncthing/syncthing\n$ docker run -p 8384:8384 -p 22000:22000/tcp -p 22000:22000/udp -p 21027:21027/udp \\\n    -v /wherever/st-sync:/var/syncthing \\\n    --hostname=my-syncthing \\\n    syncthing/syncthing:latest\n```\n\n**Docker compose**\n```yml\n---\nversion: \"3\"\nservices:\n  syncthing:\n    image: syncthing/syncthing\n    container_name: syncthing\n    hostname: my-syncthing\n    environment:\n      - PUID=1000\n      - PGID=1000\n    volumes:\n      - /wherever/st-sync:/var/syncthing\n    ports:\n      - 8384:8384 # Web UI\n      - 22000:22000/tcp # TCP file transfers\n      - 22000:22000/udp # QUIC file transfers\n      - 21027:21027/udp # Receive local discovery broadcasts\n    restart: unless-stopped\n    healthcheck:\n      test: curl -fkLsS -m 2 127.0.0.1:8384/rest/noauth/health | grep -o --color=never OK || exit 1\n      interval: 1m\n      timeout: 10s\n      retries: 3\n```\n\n## Discovery\n\nNote that Docker's default network mode prevents local IP addresses from\nbeing discovered, as Syncthing is only able to see the internal IP of the\ncontainer on the `172.17.0.0/16` subnet. This will result in poor transfer rates\nif local device addresses are not manually configured.\n\nIt is therefore advisable to use the [host network mode](https://docs.docker.com/network/host/) instead:\n\n**Docker cli**\n```\n$ docker pull syncthing/syncthing\n$ docker run --network=host \\\n    -v /wherever/st-sync:/var/syncthing \\\n    syncthing/syncthing:latest\n```\n\n**Docker compose**\n```yml\n---\nversion: \"3\"\nservices:\n  syncthing:\n    image: syncthing/syncthing\n    container_name: syncthing\n    hostname: my-syncthing\n    environment:\n      - PUID=1000\n      - PGID=1000\n    volumes:\n      - /wherever/st-sync:/var/syncthing\n    network_mode: host\n    restart: unless-stopped\n    healthcheck:\n      test: curl -fkLsS -m 2 127.0.0.1:8384/rest/noauth/health | grep -o --color=never OK || exit 1\n      interval: 1m\n      timeout: 10s\n      retries: 3\n```\n\nBe aware that syncthing alone is now in control of what interfaces and ports it\nlistens on. You can edit the syncthing configuration to change the defaults if\nthere are conflicts.\n\n## GUI Security\n\nBy default Syncthing inside the Docker image listens on 0.0.0.0:8384 to\nallow GUI connections via the Docker proxy. This is set by the\n`STGUIADDRESS` environment variable in the Dockerfile, as it differs from\nwhat Syncthing would otherwise use by default. This means you should set up\nauthentication in the GUI, like for any other externally reachable Syncthing\ninstance. If you do not require the GUI, or you use host networking, you can\nunset the `STGUIADDRESS` variable to have Syncthing fall back to listening\non 127.0.0.1:\n\n```\n$ docker pull syncthing/syncthing\n$ docker run -e STGUIADDRESS= \\\n    -v /wherever/st-sync:/var/syncthing \\\n    syncthing/syncthing:latest\n```\n\nWith the environment variable unset Syncthing will follow what is set in the\nconfiguration file / GUI settings dialog.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.9052734375,
          "content": "[![Syncthing][14]][15]\n\n---\n\n[![MPLv2 License](https://img.shields.io/badge/license-MPLv2-blue.svg?style=flat-square)](https://www.mozilla.org/MPL/2.0/)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/88/badge)](https://bestpractices.coreinfrastructure.org/projects/88)\n[![Go Report Card](https://goreportcard.com/badge/github.com/syncthing/syncthing)](https://goreportcard.com/report/github.com/syncthing/syncthing)\n\n## Goals\n\nSyncthing is a **continuous file synchronization program**. It synchronizes\nfiles between two or more computers. We strive to fulfill the goals below.\nThe goals are listed in order of importance, the most important ones first.\nThis is the summary version of the goal list - for more\ncommentary, see the full [Goals document][13].\n\nSyncthing should be:\n\n1. **Safe From Data Loss**\n\n   Protecting the user's data is paramount. We take every reasonable\n   precaution to avoid corrupting the user's files.\n\n2. **Secure Against Attackers**\n\n   Again, protecting the user's data is paramount. Regardless of our other\n   goals, we must never allow the user's data to be susceptible to\n   eavesdropping or modification by unauthorized parties.\n\n3. **Easy to Use**\n\n   Syncthing should be approachable, understandable, and inclusive.\n\n4. **Automatic**\n\n   User interaction should be required only when absolutely necessary.\n\n5. **Universally Available**\n\n   Syncthing should run on every common computer. We are mindful that the\n   latest technology is not always available to every individual.\n\n6. **For Individuals**\n\n   Syncthing is primarily about empowering the individual user with safe,\n   secure, and easy to use file synchronization.\n\n7. **Everything Else**\n\n   There are many things we care about that don't make it on to the list. It\n   is fine to optimize for these values, as long as they are not in conflict\n   with the stated goals above.\n\n## Getting Started\n\nTake a look at the [getting started guide][2].\n\nThere are a few examples for keeping Syncthing running in the background\non your system in [the etc directory][3]. There are also several [GUI\nimplementations][11] for Windows, Mac, and Linux.\n\n## Docker\n\nTo run Syncthing in Docker, see [the Docker README][16].\n\n## Getting in Touch\n\nThe first and best point of contact is the [Forum][8].\nIf you've found something that is clearly a\nbug, feel free to report it in the [GitHub issue tracker][10].\n\nIf you believe that you’ve found a Syncthing-related security vulnerability,\nplease report it by emailing security@syncthing.net. Do not report it in the\nForum or issue tracker.\n\n## Building\n\nBuilding Syncthing from source is easy. After extracting the source bundle from\na release or checking out git, you just need to run `go run build.go` and the\nbinaries are created in `./bin`. There's [a guide][5] with more details on the\nbuild process.\n\n## Signed Releases\n\nRelease binaries are GPG signed with the key available from\nhttps://syncthing.net/security/. There is also a built-in automatic\nupgrade mechanism (disabled in some distribution channels) which uses a\ncompiled in ECDSA signature. macOS and Windows binaries are also\ncode-signed.\n\n## Documentation\n\nPlease see the Syncthing [documentation site][6] [[source]][17].\n\nAll code is licensed under the [MPLv2 License][7].\n\n[1]: https://docs.syncthing.net/specs/bep-v1.html\n[2]: https://docs.syncthing.net/intro/getting-started.html\n[3]: https://github.com/syncthing/syncthing/blob/main/etc\n[5]: https://docs.syncthing.net/dev/building.html\n[6]: https://docs.syncthing.net/\n[7]: https://github.com/syncthing/syncthing/blob/main/LICENSE\n[8]: https://forum.syncthing.net/\n[10]: https://github.com/syncthing/syncthing/issues\n[11]: https://docs.syncthing.net/users/contrib.html#gui-wrappers\n[13]: https://github.com/syncthing/syncthing/blob/main/GOALS.md\n[14]: assets/logo-text-128.png\n[15]: https://syncthing.net/\n[16]: https://github.com/syncthing/syncthing/blob/main/README-Docker.md\n[17]: https://github.com/syncthing/docs\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "buf.gen.yaml",
          "type": "blob",
          "size": 0.28125,
          "content": "version: v2\nmanaged:\n  enabled: true\n  override:\n    - file_option: go_package_prefix\n      value: github.com/syncthing/syncthing/internal/gen\nplugins:\n  - remote: buf.build/protocolbuffers/go:v1.35.1\n    out: .\n    opt: module=github.com/syncthing/syncthing\ninputs:\n  - directory: proto\n"
        },
        {
          "name": "buf.yaml",
          "type": "blob",
          "size": 0.1357421875,
          "content": "version: v2\nmodules:\n  - path: proto\n    name: github.com/syncthing/syncthing\nlint:\n  use:\n    - STANDARD\nbreaking:\n  use:\n    - WIRE_JSON\n"
        },
        {
          "name": "build.go",
          "type": "blob",
          "size": 41.5537109375,
          "content": "// Copyright (C) 2014 The Syncthing Authors.\n//\n// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v. 2.0. If a copy of the MPL was not distributed with this file,\n// You can obtain one at https://mozilla.org/MPL/2.0/.\n\n//go:build tools\n// +build tools\n\npackage main\n\nimport (\n\t\"archive/tar\"\n\t\"archive/zip\"\n\t\"bytes\"\n\t\"compress/flate\"\n\t\"compress/gzip\"\n\t\"encoding/base64\"\n\t\"encoding/json\"\n\t\"errors\"\n\t\"flag\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n\t\"os/exec\"\n\t\"os/user\"\n\t\"path/filepath\"\n\t\"regexp\"\n\t\"runtime\"\n\t\"strconv\"\n\t\"strings\"\n\t\"text/template\"\n\t\"time\"\n\n\tbuildpkg \"github.com/syncthing/syncthing/lib/build\"\n\t\"github.com/syncthing/syncthing/lib/upgrade\"\n\t\"sigs.k8s.io/yaml\"\n)\n\nvar (\n\tgoarch         string\n\tgoos           string\n\tnoupgrade      bool\n\tversion        string\n\tgoCmd          string\n\trace           bool\n\tdebug          = os.Getenv(\"BUILDDEBUG\") != \"\"\n\textraTags      string\n\tinstallSuffix  string\n\tpkgdir         string\n\tcc             string\n\trun            string\n\tbenchRun       string\n\tbuildOut       string\n\tdebugBinary    bool\n\tcoverage       bool\n\tlong           bool\n\ttimeout        = \"120s\"\n\tlongTimeout    = \"600s\"\n\tnumVersions    = 5\n\twithNextGenGUI = os.Getenv(\"BUILD_NEXT_GEN_GUI\") != \"\"\n)\n\ntype target struct {\n\tname              string\n\tdebname           string\n\tdebdeps           []string\n\tdebpre            string\n\tdescription       string\n\tbuildPkgs         []string\n\tbinaryName        string\n\tarchiveFiles      []archiveFile\n\tsystemdService    string\n\tinstallationFiles []archiveFile\n\ttags              []string\n}\n\ntype archiveFile struct {\n\tsrc  string\n\tdst  string\n\tperm os.FileMode\n}\n\nvar targets = map[string]target{\n\t\"all\": {\n\t\t// Only valid for the \"build\" and \"install\" commands as it lacks all\n\t\t// the archive creation stuff. buildPkgs gets filled out in init()\n\t},\n\t\"syncthing\": {\n\t\t// The default target for \"build\", \"install\", \"tar\", \"zip\", \"deb\", etc.\n\t\tname:        \"syncthing\",\n\t\tdebname:     \"syncthing\",\n\t\tdebdeps:     []string{\"libc6\", \"procps\"},\n\t\tdescription: \"Open Source Continuous File Synchronization\",\n\t\tbuildPkgs:   []string{\"github.com/syncthing/syncthing/cmd/syncthing\"},\n\t\tbinaryName:  \"syncthing\", // .exe will be added automatically for Windows builds\n\t\tarchiveFiles: []archiveFile{\n\t\t\t{src: \"{{binary}}\", dst: \"{{binary}}\", perm: 0o755},\n\t\t\t{src: \"README.md\", dst: \"README.txt\", perm: 0o644},\n\t\t\t{src: \"LICENSE\", dst: \"LICENSE.txt\", perm: 0o644},\n\t\t\t{src: \"AUTHORS\", dst: \"AUTHORS.txt\", perm: 0o644},\n\t\t\t// All files from etc/ and extra/ added automatically in init().\n\t\t},\n\t\tsystemdService: \"syncthing@*.service\",\n\t\tinstallationFiles: []archiveFile{\n\t\t\t{src: \"{{binary}}\", dst: \"deb/usr/bin/{{binary}}\", perm: 0o755},\n\t\t\t{src: \"README.md\", dst: \"deb/usr/share/doc/syncthing/README.txt\", perm: 0o644},\n\t\t\t{src: \"LICENSE\", dst: \"deb/usr/share/doc/syncthing/LICENSE.txt\", perm: 0o644},\n\t\t\t{src: \"AUTHORS\", dst: \"deb/usr/share/doc/syncthing/AUTHORS.txt\", perm: 0o644},\n\t\t\t{src: \"man/syncthing.1\", dst: \"deb/usr/share/man/man1/syncthing.1\", perm: 0o644},\n\t\t\t{src: \"man/syncthing-config.5\", dst: \"deb/usr/share/man/man5/syncthing-config.5\", perm: 0o644},\n\t\t\t{src: \"man/syncthing-stignore.5\", dst: \"deb/usr/share/man/man5/syncthing-stignore.5\", perm: 0o644},\n\t\t\t{src: \"man/syncthing-device-ids.7\", dst: \"deb/usr/share/man/man7/syncthing-device-ids.7\", perm: 0o644},\n\t\t\t{src: \"man/syncthing-event-api.7\", dst: \"deb/usr/share/man/man7/syncthing-event-api.7\", perm: 0o644},\n\t\t\t{src: \"man/syncthing-faq.7\", dst: \"deb/usr/share/man/man7/syncthing-faq.7\", perm: 0o644},\n\t\t\t{src: \"man/syncthing-networking.7\", dst: \"deb/usr/share/man/man7/syncthing-networking.7\", perm: 0o644},\n\t\t\t{src: \"man/syncthing-rest-api.7\", dst: \"deb/usr/share/man/man7/syncthing-rest-api.7\", perm: 0o644},\n\t\t\t{src: \"man/syncthing-security.7\", dst: \"deb/usr/share/man/man7/syncthing-security.7\", perm: 0o644},\n\t\t\t{src: \"man/syncthing-versioning.7\", dst: \"deb/usr/share/man/man7/syncthing-versioning.7\", perm: 0o644},\n\t\t\t{src: \"etc/linux-systemd/system/syncthing@.service\", dst: \"deb/lib/systemd/system/syncthing@.service\", perm: 0o644},\n\t\t\t{src: \"etc/linux-systemd/user/syncthing.service\", dst: \"deb/usr/lib/systemd/user/syncthing.service\", perm: 0o644},\n\t\t\t{src: \"etc/linux-sysctl/30-syncthing.conf\", dst: \"deb/usr/lib/sysctl.d/30-syncthing.conf\", perm: 0o644},\n\t\t\t{src: \"etc/firewall-ufw/syncthing\", dst: \"deb/etc/ufw/applications.d/syncthing\", perm: 0o644},\n\t\t\t{src: \"etc/linux-desktop/syncthing-start.desktop\", dst: \"deb/usr/share/applications/syncthing-start.desktop\", perm: 0o644},\n\t\t\t{src: \"etc/linux-desktop/syncthing-ui.desktop\", dst: \"deb/usr/share/applications/syncthing-ui.desktop\", perm: 0o644},\n\t\t\t{src: \"assets/logo-32.png\", dst: \"deb/usr/share/icons/hicolor/32x32/apps/syncthing.png\", perm: 0o644},\n\t\t\t{src: \"assets/logo-64.png\", dst: \"deb/usr/share/icons/hicolor/64x64/apps/syncthing.png\", perm: 0o644},\n\t\t\t{src: \"assets/logo-128.png\", dst: \"deb/usr/share/icons/hicolor/128x128/apps/syncthing.png\", perm: 0o644},\n\t\t\t{src: \"assets/logo-256.png\", dst: \"deb/usr/share/icons/hicolor/256x256/apps/syncthing.png\", perm: 0o644},\n\t\t\t{src: \"assets/logo-512.png\", dst: \"deb/usr/share/icons/hicolor/512x512/apps/syncthing.png\", perm: 0o644},\n\t\t\t{src: \"assets/logo-only.svg\", dst: \"deb/usr/share/icons/hicolor/scalable/apps/syncthing.svg\", perm: 0o644},\n\t\t},\n\t},\n\t\"stdiscosrv\": {\n\t\tname:        \"stdiscosrv\",\n\t\tdebname:     \"syncthing-discosrv\",\n\t\tdebdeps:     []string{\"libc6\"},\n\t\tdebpre:      \"cmd/stdiscosrv/scripts/preinst\",\n\t\tdescription: \"Syncthing Discovery Server\",\n\t\tbuildPkgs:   []string{\"github.com/syncthing/syncthing/cmd/stdiscosrv\"},\n\t\tbinaryName:  \"stdiscosrv\", // .exe will be added automatically for Windows builds\n\t\tarchiveFiles: []archiveFile{\n\t\t\t{src: \"{{binary}}\", dst: \"{{binary}}\", perm: 0o755},\n\t\t\t{src: \"cmd/stdiscosrv/README.md\", dst: \"README.txt\", perm: 0o644},\n\t\t\t{src: \"LICENSE\", dst: \"LICENSE.txt\", perm: 0o644},\n\t\t\t{src: \"AUTHORS\", dst: \"AUTHORS.txt\", perm: 0o644},\n\t\t},\n\t\tsystemdService: \"stdiscosrv.service\",\n\t\tinstallationFiles: []archiveFile{\n\t\t\t{src: \"{{binary}}\", dst: \"deb/usr/bin/{{binary}}\", perm: 0o755},\n\t\t\t{src: \"cmd/stdiscosrv/README.md\", dst: \"deb/usr/share/doc/syncthing-discosrv/README.txt\", perm: 0o644},\n\t\t\t{src: \"LICENSE\", dst: \"deb/usr/share/doc/syncthing-discosrv/LICENSE.txt\", perm: 0o644},\n\t\t\t{src: \"AUTHORS\", dst: \"deb/usr/share/doc/syncthing-discosrv/AUTHORS.txt\", perm: 0o644},\n\t\t\t{src: \"man/stdiscosrv.1\", dst: \"deb/usr/share/man/man1/stdiscosrv.1\", perm: 0o644},\n\t\t\t{src: \"cmd/stdiscosrv/etc/linux-systemd/stdiscosrv.service\", dst: \"deb/lib/systemd/system/stdiscosrv.service\", perm: 0o644},\n\t\t\t{src: \"cmd/stdiscosrv/etc/linux-systemd/default\", dst: \"deb/etc/default/syncthing-discosrv\", perm: 0o644},\n\t\t\t{src: \"cmd/stdiscosrv/etc/firewall-ufw/stdiscosrv\", dst: \"deb/etc/ufw/applications.d/stdiscosrv\", perm: 0o644},\n\t\t},\n\t},\n\t\"strelaysrv\": {\n\t\tname:        \"strelaysrv\",\n\t\tdebname:     \"syncthing-relaysrv\",\n\t\tdebdeps:     []string{\"libc6\"},\n\t\tdebpre:      \"cmd/strelaysrv/scripts/preinst\",\n\t\tdescription: \"Syncthing Relay Server\",\n\t\tbuildPkgs:   []string{\"github.com/syncthing/syncthing/cmd/strelaysrv\"},\n\t\tbinaryName:  \"strelaysrv\", // .exe will be added automatically for Windows builds\n\t\tarchiveFiles: []archiveFile{\n\t\t\t{src: \"{{binary}}\", dst: \"{{binary}}\", perm: 0o755},\n\t\t\t{src: \"cmd/strelaysrv/README.md\", dst: \"README.txt\", perm: 0o644},\n\t\t\t{src: \"cmd/strelaysrv/LICENSE\", dst: \"LICENSE.txt\", perm: 0o644},\n\t\t\t{src: \"LICENSE\", dst: \"LICENSE.txt\", perm: 0o644},\n\t\t\t{src: \"AUTHORS\", dst: \"AUTHORS.txt\", perm: 0o644},\n\t\t},\n\t\tsystemdService: \"strelaysrv.service\",\n\t\tinstallationFiles: []archiveFile{\n\t\t\t{src: \"{{binary}}\", dst: \"deb/usr/bin/{{binary}}\", perm: 0o755},\n\t\t\t{src: \"cmd/strelaysrv/README.md\", dst: \"deb/usr/share/doc/syncthing-relaysrv/README.txt\", perm: 0o644},\n\t\t\t{src: \"cmd/strelaysrv/LICENSE\", dst: \"deb/usr/share/doc/syncthing-relaysrv/LICENSE.txt\", perm: 0o644},\n\t\t\t{src: \"LICENSE\", dst: \"deb/usr/share/doc/syncthing-relaysrv/LICENSE.txt\", perm: 0o644},\n\t\t\t{src: \"AUTHORS\", dst: \"deb/usr/share/doc/syncthing-relaysrv/AUTHORS.txt\", perm: 0o644},\n\t\t\t{src: \"man/strelaysrv.1\", dst: \"deb/usr/share/man/man1/strelaysrv.1\", perm: 0o644},\n\t\t\t{src: \"cmd/strelaysrv/etc/linux-systemd/strelaysrv.service\", dst: \"deb/lib/systemd/system/strelaysrv.service\", perm: 0o644},\n\t\t\t{src: \"cmd/strelaysrv/etc/linux-systemd/default\", dst: \"deb/etc/default/syncthing-relaysrv\", perm: 0o644},\n\t\t\t{src: \"cmd/strelaysrv/etc/firewall-ufw/strelaysrv\", dst: \"deb/etc/ufw/applications.d/strelaysrv\", perm: 0o644},\n\t\t},\n\t},\n\t\"strelaypoolsrv\": {\n\t\tname:        \"strelaypoolsrv\",\n\t\tdescription: \"Syncthing Relay Pool Server\",\n\t\tbuildPkgs:   []string{\"github.com/syncthing/syncthing/cmd/infra/strelaypoolsrv\"},\n\t\tbinaryName:  \"strelaypoolsrv\",\n\t},\n\t\"stupgrades\": {\n\t\tname:        \"stupgrades\",\n\t\tdescription: \"Syncthing Upgrade Check Server\",\n\t\tbuildPkgs:   []string{\"github.com/syncthing/syncthing/cmd/infra/stupgrades\"},\n\t\tbinaryName:  \"stupgrades\",\n\t},\n\t\"stcrashreceiver\": {\n\t\tname:        \"stcrashreceiver\",\n\t\tdescription: \"Syncthing Crash Server\",\n\t\tbuildPkgs:   []string{\"github.com/syncthing/syncthing/cmd/infra/stcrashreceiver\"},\n\t\tbinaryName:  \"stcrashreceiver\",\n\t},\n\t\"ursrv\": {\n\t\tname:        \"ursrv\",\n\t\tdescription: \"Syncthing Usage Reporting Server\",\n\t\tbuildPkgs:   []string{\"github.com/syncthing/syncthing/cmd/infra/ursrv\"},\n\t\tbinaryName:  \"ursrv\",\n\t},\n}\n\nfunc initTargets() {\n\tall := targets[\"all\"]\n\tpkgs, _ := filepath.Glob(\"cmd/*\")\n\tfor _, pkg := range pkgs {\n\t\tif files, err := filepath.Glob(pkg + \"/*.go\"); err != nil || len(files) == 0 {\n\t\t\t// No go files in the directory\n\t\t\tcontinue\n\t\t}\n\t\tall.buildPkgs = append(all.buildPkgs, fmt.Sprintf(\"github.com/syncthing/syncthing/%s\", pkg))\n\t}\n\ttargets[\"all\"] = all\n\n\t// The \"syncthing\" target includes a few more files found in the \"etc\"\n\t// and \"extra\" dirs.\n\tsyncthingPkg := targets[\"syncthing\"]\n\tfor _, file := range listFiles(\"etc\") {\n\t\tsyncthingPkg.archiveFiles = append(syncthingPkg.archiveFiles, archiveFile{src: file, dst: file, perm: 0o644})\n\t}\n\tfor _, file := range listFiles(\"extra\") {\n\t\tsyncthingPkg.archiveFiles = append(syncthingPkg.archiveFiles, archiveFile{src: file, dst: file, perm: 0o644})\n\t}\n\tfor _, file := range listFiles(\"extra\") {\n\t\tsyncthingPkg.installationFiles = append(syncthingPkg.installationFiles, archiveFile{src: file, dst: \"deb/usr/share/doc/syncthing/\" + filepath.Base(file), perm: 0o644})\n\t}\n\ttargets[\"syncthing\"] = syncthingPkg\n}\n\nfunc main() {\n\tlog.SetFlags(0)\n\n\tparseFlags()\n\n\tif debug {\n\t\tt0 := time.Now()\n\t\tdefer func() {\n\t\t\tlog.Println(\"... build completed in\", time.Since(t0))\n\t\t}()\n\t}\n\n\tinitTargets()\n\n\t// Invoking build.go with no parameters at all builds everything (incrementally),\n\t// which is what you want for maximum error checking during development.\n\tif flag.NArg() == 0 {\n\t\trunCommand(\"install\", targets[\"all\"])\n\t} else {\n\t\t// with any command given but not a target, the target is\n\t\t// \"syncthing\". So \"go run build.go install\" is \"go run build.go install\n\t\t// syncthing\" etc.\n\t\ttargetName := \"syncthing\"\n\t\tif flag.NArg() > 1 {\n\t\t\ttargetName = flag.Arg(1)\n\t\t}\n\t\ttarget, ok := targets[targetName]\n\t\tif !ok {\n\t\t\tlog.Fatalln(\"Unknown target\", target)\n\t\t}\n\n\t\trunCommand(flag.Arg(0), target)\n\t}\n}\n\nfunc runCommand(cmd string, target target) {\n\tvar tags []string\n\tif noupgrade {\n\t\ttags = []string{\"noupgrade\"}\n\t}\n\ttags = append(tags, strings.Fields(extraTags)...)\n\n\tswitch cmd {\n\tcase \"install\":\n\t\tinstall(target, tags)\n\t\tmetalintShort()\n\n\tcase \"build\":\n\t\tbuild(target, tags)\n\n\tcase \"test\":\n\t\ttest(strings.Fields(extraTags), \"github.com/syncthing/syncthing/lib/...\", \"github.com/syncthing/syncthing/cmd/...\")\n\n\tcase \"bench\":\n\t\tbench(strings.Fields(extraTags), \"github.com/syncthing/syncthing/lib/...\", \"github.com/syncthing/syncthing/cmd/...\")\n\n\tcase \"integration\":\n\t\tintegration(false)\n\n\tcase \"integrationbench\":\n\t\tintegration(true)\n\n\tcase \"assets\":\n\t\trebuildAssets()\n\n\tcase \"update-deps\":\n\t\tupdateDependencies()\n\n\tcase \"proto\":\n\t\tproto()\n\n\tcase \"testmocks\":\n\t\ttestmocks()\n\n\tcase \"translate\":\n\t\ttranslate()\n\n\tcase \"transifex\":\n\t\ttransifex()\n\n\tcase \"weblate\":\n\t\tweblate()\n\n\tcase \"tar\":\n\t\tbuildTar(target, tags)\n\t\twriteCompatJSON()\n\n\tcase \"zip\":\n\t\tbuildZip(target, tags)\n\t\twriteCompatJSON()\n\n\tcase \"deb\":\n\t\tbuildDeb(target)\n\n\tcase \"vet\":\n\t\tmetalintShort()\n\n\tcase \"lint\":\n\t\tmetalintShort()\n\n\tcase \"metalint\":\n\t\tmetalint()\n\n\tcase \"version\":\n\t\tfmt.Println(getVersion())\n\n\tcase \"changelog\":\n\t\tvers, err := currentAndLatestVersions(numVersions)\n\t\tif err != nil {\n\t\t\tlog.Fatal(err)\n\t\t}\n\t\tfor _, ver := range vers {\n\t\t\tunderline := strings.Repeat(\"=\", len(ver))\n\t\t\tmsg, err := tagMessage(ver)\n\t\t\tif err != nil {\n\t\t\t\tlog.Fatal(err)\n\t\t\t}\n\t\t\tfmt.Printf(\"%s\\n%s\\n\\n%s\\n\\n\", ver, underline, msg)\n\t\t}\n\n\tdefault:\n\t\tlog.Fatalf(\"Unknown command %q\", cmd)\n\t}\n}\n\nfunc parseFlags() {\n\tflag.StringVar(&goarch, \"goarch\", runtime.GOARCH, \"GOARCH\")\n\tflag.StringVar(&goos, \"goos\", runtime.GOOS, \"GOOS\")\n\tflag.StringVar(&goCmd, \"gocmd\", \"go\", \"Specify `go` command\")\n\tflag.BoolVar(&noupgrade, \"no-upgrade\", noupgrade, \"Disable upgrade functionality\")\n\tflag.StringVar(&version, \"version\", getVersion(), \"Set compiled in version string\")\n\tflag.BoolVar(&race, \"race\", race, \"Use race detector\")\n\tflag.StringVar(&extraTags, \"tags\", extraTags, \"Extra tags, space separated\")\n\tflag.StringVar(&installSuffix, \"installsuffix\", installSuffix, \"Install suffix, optional\")\n\tflag.StringVar(&pkgdir, \"pkgdir\", \"\", \"Set -pkgdir parameter for `go build`\")\n\tflag.StringVar(&cc, \"cc\", os.Getenv(\"CC\"), \"Set CC environment variable for `go build`\")\n\tflag.BoolVar(&debugBinary, \"debug-binary\", debugBinary, \"Create unoptimized binary to use with delve, set -gcflags='-N -l' and omit -ldflags\")\n\tflag.BoolVar(&coverage, \"coverage\", coverage, \"Write coverage profile of tests to coverage.txt\")\n\tflag.BoolVar(&long, \"long\", long, \"Run tests without the -short flag\")\n\tflag.IntVar(&numVersions, \"num-versions\", numVersions, \"Number of versions for changelog command\")\n\tflag.StringVar(&run, \"run\", \"\", \"Specify which tests to run\")\n\tflag.StringVar(&benchRun, \"bench\", \"\", \"Specify which benchmarks to run\")\n\tflag.BoolVar(&withNextGenGUI, \"with-next-gen-gui\", withNextGenGUI, \"Also build 'newgui'\")\n\tflag.StringVar(&buildOut, \"build-out\", \"\", \"Set the '-o' value for 'go build'\")\n\tflag.Parse()\n}\n\nfunc test(tags []string, pkgs ...string) {\n\tlazyRebuildAssets()\n\n\targs := []string{\"test\", \"-tags\", strings.Join(tags, \" \")}\n\tif long {\n\t\ttimeout = longTimeout\n\t} else {\n\t\targs = append(args, \"-short\")\n\t}\n\targs = append(args, \"-timeout\", timeout)\n\n\tif runtime.GOARCH == \"amd64\" {\n\t\tswitch runtime.GOOS {\n\t\tcase buildpkg.Darwin, buildpkg.Linux, buildpkg.FreeBSD: // , \"windows\": # See https://github.com/golang/go/issues/27089\n\t\t\targs = append(args, \"-race\")\n\t\t}\n\t}\n\n\tif coverage {\n\t\targs = append(args, \"-covermode\", \"atomic\", \"-coverprofile\", \"coverage.txt\", \"-coverpkg\", strings.Join(pkgs, \",\"))\n\t}\n\n\targs = append(args, runArgs()...)\n\n\trunPrint(goCmd, append(args, pkgs...)...)\n}\n\nfunc bench(tags []string, pkgs ...string) {\n\tlazyRebuildAssets()\n\targs := append([]string{\"test\", \"-run\", \"NONE\", \"-tags\", strings.Join(tags, \" \")}, benchArgs()...)\n\trunPrint(goCmd, append(args, pkgs...)...)\n}\n\nfunc integration(bench bool) {\n\tlazyRebuildAssets()\n\targs := []string{\"test\", \"-v\", \"-timeout\", \"60m\", \"-tags\"}\n\ttags := \"integration\"\n\tif bench {\n\t\ttags += \",benchmark\"\n\t}\n\targs = append(args, tags)\n\targs = append(args, runArgs()...)\n\tif bench {\n\t\tif run == \"\" {\n\t\t\targs = append(args, \"-run\", \"Benchmark\")\n\t\t}\n\t\targs = append(args, benchArgs()...)\n\t}\n\targs = append(args, \"./test\")\n\tfmt.Println(args)\n\trunPrint(goCmd, args...)\n}\n\nfunc runArgs() []string {\n\tif run == \"\" {\n\t\treturn nil\n\t}\n\treturn []string{\"-run\", run}\n}\n\nfunc benchArgs() []string {\n\tif benchRun == \"\" {\n\t\treturn []string{\"-bench\", \".\"}\n\t}\n\treturn []string{\"-bench\", benchRun}\n}\n\nfunc install(target target, tags []string) {\n\tif (target.name == \"syncthing\" || target.name == \"\") && !withNextGenGUI {\n\t\tlog.Println(\"Notice: Next generation GUI will not be built; see --with-next-gen-gui.\")\n\t}\n\n\tlazyRebuildAssets()\n\n\ttags = append(target.tags, tags...)\n\n\tcwd, err := os.Getwd()\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tos.Setenv(\"GOBIN\", filepath.Join(cwd, \"bin\"))\n\n\tsetBuildEnvVars()\n\n\t// On Windows generate a special file which the Go compiler will\n\t// automatically use when generating Windows binaries to set things like\n\t// the file icon, version, etc.\n\tif goos == \"windows\" {\n\t\tsysoPath, err := shouldBuildSyso(cwd)\n\t\tif err != nil {\n\t\t\tlog.Printf(\"Warning: Windows binaries will not have file information encoded: %v\", err)\n\t\t}\n\t\tdefer shouldCleanupSyso(sysoPath)\n\t}\n\n\targs := []string{\"install\", \"-v\"}\n\targs = appendParameters(args, tags, target.buildPkgs...)\n\trunPrint(goCmd, args...)\n}\n\nfunc build(target target, tags []string) {\n\tif (target.name == \"syncthing\" || target.name == \"\") && !withNextGenGUI {\n\t\tlog.Println(\"Notice: Next generation GUI will not be built; see --with-next-gen-gui.\")\n\t}\n\n\tlazyRebuildAssets()\n\ttags = append(target.tags, tags...)\n\n\trmr(target.BinaryName())\n\n\tsetBuildEnvVars()\n\n\t// On Windows generate a special file which the Go compiler will\n\t// automatically use when generating Windows binaries to set things like\n\t// the file icon, version, etc.\n\tif goos == \"windows\" {\n\t\tcwd, err := os.Getwd()\n\t\tif err != nil {\n\t\t\tlog.Fatal(err)\n\t\t}\n\t\tsysoPath, err := shouldBuildSyso(cwd)\n\t\tif err != nil {\n\t\t\tlog.Printf(\"Warning: Windows binaries will not have file information encoded: %v\", err)\n\t\t}\n\t\tdefer shouldCleanupSyso(sysoPath)\n\t}\n\n\targs := []string{\"build\", \"-v\"}\n\tif buildOut != \"\" {\n\t\targs = append(args, \"-o\", buildOut)\n\t}\n\targs = appendParameters(args, tags, target.buildPkgs...)\n\trunPrint(goCmd, args...)\n}\n\nfunc setBuildEnvVars() {\n\tos.Setenv(\"GOOS\", goos)\n\tos.Setenv(\"GOARCH\", goarch)\n\tos.Setenv(\"CC\", cc)\n\tif os.Getenv(\"CGO_ENABLED\") == \"\" {\n\t\tswitch goos {\n\t\tcase \"darwin\", \"solaris\":\n\t\tdefault:\n\t\t\tos.Setenv(\"CGO_ENABLED\", \"0\")\n\t\t}\n\t}\n}\n\nfunc appendParameters(args []string, tags []string, pkgs ...string) []string {\n\tif pkgdir != \"\" {\n\t\targs = append(args, \"-pkgdir\", pkgdir)\n\t}\n\tif len(tags) > 0 {\n\t\targs = append(args, \"-tags\", strings.Join(tags, \" \"))\n\t}\n\tif installSuffix != \"\" {\n\t\targs = append(args, \"-installsuffix\", installSuffix)\n\t}\n\tif race {\n\t\targs = append(args, \"-race\")\n\t}\n\n\tif !debugBinary {\n\t\t// Regular binaries get version tagged and skip some debug symbols\n\t\targs = append(args, \"-trimpath\", \"-ldflags\", ldflags(tags))\n\t} else {\n\t\t// -gcflags to disable optimizations and inlining. Skip -ldflags\n\t\t// because `Could not launch program: decoding dwarf section info at\n\t\t// offset 0x0: too short` on 'dlv exec ...' see\n\t\t// https://github.com/go-delve/delve/issues/79\n\t\targs = append(args, \"-gcflags\", \"all=-N -l\")\n\t}\n\n\treturn append(args, pkgs...)\n}\n\nfunc buildTar(target target, tags []string) {\n\tname := archiveName(target)\n\tfilename := name + \".tar.gz\"\n\n\tfor _, tag := range tags {\n\t\tif tag == \"noupgrade\" {\n\t\t\tname += \"-noupgrade\"\n\t\t\tbreak\n\t\t}\n\t}\n\n\tbuild(target, tags)\n\tcodesign(target)\n\n\tfor i := range target.archiveFiles {\n\t\ttarget.archiveFiles[i].src = strings.Replace(target.archiveFiles[i].src, \"{{binary}}\", target.BinaryName(), 1)\n\t\ttarget.archiveFiles[i].dst = strings.Replace(target.archiveFiles[i].dst, \"{{binary}}\", target.BinaryName(), 1)\n\t\ttarget.archiveFiles[i].dst = name + \"/\" + target.archiveFiles[i].dst\n\t}\n\n\ttarGz(filename, target.archiveFiles)\n\tfmt.Println(filename)\n}\n\nfunc buildZip(target target, tags []string) {\n\tname := archiveName(target)\n\tfilename := name + \".zip\"\n\n\tfor _, tag := range tags {\n\t\tif tag == \"noupgrade\" {\n\t\t\tname += \"-noupgrade\"\n\t\t\tbreak\n\t\t}\n\t}\n\n\tbuild(target, tags)\n\tcodesign(target)\n\n\tfor i := range target.archiveFiles {\n\t\ttarget.archiveFiles[i].src = strings.Replace(target.archiveFiles[i].src, \"{{binary}}\", target.BinaryName(), 1)\n\t\ttarget.archiveFiles[i].dst = strings.Replace(target.archiveFiles[i].dst, \"{{binary}}\", target.BinaryName(), 1)\n\t\ttarget.archiveFiles[i].dst = name + \"/\" + target.archiveFiles[i].dst\n\t}\n\n\tzipFile(filename, target.archiveFiles)\n\tfmt.Println(filename)\n}\n\nfunc buildDeb(target target) {\n\tos.RemoveAll(\"deb\")\n\n\t// \"goarch\" here is set to whatever the Debian packages expect. We correct\n\t// it to what we actually know how to build and keep the Debian variant\n\t// name in \"debarch\".\n\tdebarch := goarch\n\tswitch goarch {\n\tcase \"i386\":\n\t\tgoarch = \"386\"\n\tcase \"armel\", \"armhf\":\n\t\tgoarch = \"arm\"\n\t}\n\n\tbuild(target, []string{\"noupgrade\"})\n\n\tfor i := range target.installationFiles {\n\t\ttarget.installationFiles[i].src = strings.Replace(target.installationFiles[i].src, \"{{binary}}\", target.BinaryName(), 1)\n\t\ttarget.installationFiles[i].dst = strings.Replace(target.installationFiles[i].dst, \"{{binary}}\", target.BinaryName(), 1)\n\t}\n\n\tfor _, af := range target.installationFiles {\n\t\tif err := copyFile(af.src, af.dst, af.perm); err != nil {\n\t\t\tlog.Fatal(err)\n\t\t}\n\t}\n\n\tmaintainer := \"Syncthing Release Management <release@syncthing.net>\"\n\tdebver := version\n\tif strings.HasPrefix(debver, \"v\") {\n\t\tdebver = debver[1:]\n\t\t// Debian interprets dashes as separator between main version and\n\t\t// Debian package version, and thus thinks 0.14.26-rc.1 is better\n\t\t// than just 0.14.26. This rectifies that.\n\t\tdebver = strings.Replace(debver, \"-\", \"~\", -1)\n\t}\n\targs := []string{\n\t\t\"-t\", \"deb\",\n\t\t\"-s\", \"dir\",\n\t\t\"-C\", \"deb\",\n\t\t\"-n\", target.debname,\n\t\t\"-v\", debver,\n\t\t\"-a\", debarch,\n\t\t\"-m\", maintainer,\n\t\t\"--vendor\", maintainer,\n\t\t\"--description\", target.description,\n\t\t\"--url\", \"https://syncthing.net/\",\n\t\t\"--license\", \"MPL-2\",\n\t}\n\tfor _, dep := range target.debdeps {\n\t\targs = append(args, \"-d\", dep)\n\t}\n\tif target.systemdService != \"\" {\n\t\tdebpost, err := createPostInstScript(target)\n\t\tdefer os.Remove(debpost)\n\t\tif err != nil {\n\t\t\tlog.Fatal(err)\n\t\t}\n\t\targs = append(args, \"--after-upgrade\", debpost)\n\t}\n\tif target.debpre != \"\" {\n\t\targs = append(args, \"--before-install\", target.debpre)\n\t}\n\trunPrint(\"fpm\", args...)\n}\n\nfunc createPostInstScript(target target) (string, error) {\n\tscriptname := filepath.Join(\"script\", \"deb-post-inst.template\")\n\tt, err := template.ParseFiles(scriptname)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\tscriptname = strings.TrimSuffix(scriptname, \".template\")\n\tw, err := os.Create(scriptname)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\tdefer w.Close()\n\tif err = t.Execute(w, struct {\n\t\tService, Command string\n\t}{\n\t\ttarget.systemdService, target.binaryName,\n\t}); err != nil {\n\t\treturn \"\", err\n\t}\n\treturn scriptname, nil\n}\n\nfunc shouldBuildSyso(dir string) (string, error) {\n\ttype M map[string]interface{}\n\tversion := getVersion()\n\tversion = strings.TrimPrefix(version, \"v\")\n\tmajor, minor, patch := semanticVersion()\n\tbs, err := json.Marshal(M{\n\t\t\"FixedFileInfo\": M{\n\t\t\t\"FileVersion\": M{\n\t\t\t\t\"Major\": major,\n\t\t\t\t\"Minor\": minor,\n\t\t\t\t\"Patch\": patch,\n\t\t\t},\n\t\t\t\"ProductVersion\": M{\n\t\t\t\t\"Major\": major,\n\t\t\t\t\"Minor\": minor,\n\t\t\t\t\"Patch\": patch,\n\t\t\t},\n\t\t},\n\t\t\"StringFileInfo\": M{\n\t\t\t\"CompanyName\":      \"The Syncthing Authors\",\n\t\t\t\"FileDescription\":  \"Syncthing - Open Source Continuous File Synchronization\",\n\t\t\t\"FileVersion\":      version,\n\t\t\t\"InternalName\":     \"syncthing\",\n\t\t\t\"LegalCopyright\":   \"The Syncthing Authors\",\n\t\t\t\"OriginalFilename\": \"syncthing\",\n\t\t\t\"ProductName\":      \"Syncthing\",\n\t\t\t\"ProductVersion\":   version,\n\t\t},\n\t\t\"IconPath\": \"assets/logo.ico\",\n\t})\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\tjsonPath := filepath.Join(dir, \"versioninfo.json\")\n\terr = os.WriteFile(jsonPath, bs, 0o644)\n\tif err != nil {\n\t\treturn \"\", errors.New(\"failed to create \" + jsonPath + \": \" + err.Error())\n\t}\n\n\tdefer func() {\n\t\tif err := os.Remove(jsonPath); err != nil {\n\t\t\tlog.Printf(\"Warning: unable to remove generated %s: %v. Please remove it manually.\", jsonPath, err)\n\t\t}\n\t}()\n\n\tsysoPath := filepath.Join(dir, \"cmd\", \"syncthing\", \"resource.syso\")\n\n\t// See https://github.com/josephspurrier/goversioninfo#command-line-flags\n\tarmOption := \"\"\n\tif strings.Contains(goarch, \"arm\") {\n\t\tarmOption = \"-arm=true\"\n\t}\n\n\tif _, err := runError(\"goversioninfo\", \"-o\", sysoPath, armOption); err != nil {\n\t\treturn \"\", errors.New(\"failed to create \" + sysoPath + \": \" + err.Error())\n\t}\n\n\treturn sysoPath, nil\n}\n\nfunc shouldCleanupSyso(sysoFilePath string) {\n\tif sysoFilePath == \"\" {\n\t\treturn\n\t}\n\tif err := os.Remove(sysoFilePath); err != nil {\n\t\tlog.Printf(\"Warning: unable to remove generated %s: %v. Please remove it manually.\", sysoFilePath, err)\n\t}\n}\n\n// copyFile copies a file from src to dst, ensuring the containing directory\n// exists. The permission bits are copied as well. If dst already exists and\n// the contents are identical to src the modification time is not updated.\nfunc copyFile(src, dst string, perm os.FileMode) error {\n\tin, err := os.ReadFile(src)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tout, err := os.ReadFile(dst)\n\tif err != nil {\n\t\t// The destination probably doesn't exist, we should create\n\t\t// it.\n\t\tgoto copy\n\t}\n\n\tif bytes.Equal(in, out) {\n\t\t// The permission bits may have changed without the contents\n\t\t// changing so we always mirror them.\n\t\tos.Chmod(dst, perm)\n\t\treturn nil\n\t}\n\ncopy:\n\tos.MkdirAll(filepath.Dir(dst), 0o777)\n\tif err := os.WriteFile(dst, in, perm); err != nil {\n\t\treturn err\n\t}\n\n\treturn nil\n}\n\nfunc listFiles(dir string) []string {\n\tvar res []string\n\tfilepath.Walk(dir, func(path string, fi os.FileInfo, err error) error {\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\tif fi.Mode().IsRegular() {\n\t\t\tres = append(res, path)\n\t\t}\n\t\treturn nil\n\t})\n\treturn res\n}\n\nfunc rebuildAssets() {\n\tos.Setenv(\"SOURCE_DATE_EPOCH\", fmt.Sprint(buildStamp()))\n\trunPrint(goCmd, \"generate\", \"github.com/syncthing/syncthing/lib/api/auto\", \"github.com/syncthing/syncthing/cmd/infra/strelaypoolsrv/auto\")\n}\n\nfunc lazyRebuildAssets() {\n\tshouldRebuild := shouldRebuildAssets(\"lib/api/auto/gui.files.go\", \"gui\") ||\n\t\tshouldRebuildAssets(\"cmd/infra/strelaypoolsrv/auto/gui.files.go\", \"cmd/infra/strelaypoolsrv/gui\")\n\n\tif withNextGenGUI {\n\t\tshouldRebuild = buildNextGenGUI() || shouldRebuild\n\t}\n\n\tif shouldRebuild {\n\t\trebuildAssets()\n\t}\n}\n\nfunc buildNextGenGUI() bool {\n\t// Check if we need to run the npm process, and if so also set the flag\n\t// to rebuild Go assets afterwards. The index.html is regenerated every\n\t// time by the build process. This assumes the new GUI ends up in\n\t// next-gen-gui/dist/next-gen-gui.\n\n\tif !shouldRebuildAssets(\"gui/next-gen-gui/index.html\", \"next-gen-gui\") {\n\t\t// The GUI is up to date.\n\t\treturn false\n\t}\n\n\trunPrintInDir(\"next-gen-gui\", \"npm\", \"install\")\n\trunPrintInDir(\"next-gen-gui\", \"npm\", \"run\", \"build\", \"--\", \"--prod\", \"--subresource-integrity\")\n\n\trmr(\"gui/tech-ui\")\n\n\tfor _, src := range listFiles(\"next-gen-gui/dist\") {\n\t\trel, _ := filepath.Rel(\"next-gen-gui/dist\", src)\n\t\tdst := filepath.Join(\"gui\", rel)\n\t\tif err := copyFile(src, dst, 0o644); err != nil {\n\t\t\tfmt.Println(\"copy:\", err)\n\t\t\tos.Exit(1)\n\t\t}\n\t}\n\n\treturn true\n}\n\nfunc shouldRebuildAssets(target, srcdir string) bool {\n\tinfo, err := os.Stat(target)\n\tif err != nil {\n\t\t// If the file doesn't exist, we must rebuild it\n\t\treturn true\n\t}\n\n\t// Check if any of the files in gui/ are newer than the asset file. If\n\t// so we should rebuild it.\n\tcurrentBuild := info.ModTime()\n\tassetsAreNewer := false\n\tstop := errors.New(\"no need to iterate further\")\n\tfilepath.Walk(srcdir, func(path string, info os.FileInfo, err error) error {\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tif info.ModTime().After(currentBuild) {\n\t\t\tassetsAreNewer = true\n\t\t\treturn stop\n\t\t}\n\t\treturn nil\n\t})\n\n\treturn assetsAreNewer\n}\n\nfunc updateDependencies() {\n\t// Figure out desired Go version\n\tbs, err := os.ReadFile(\"go.mod\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tre := regexp.MustCompile(`(?m)^go\\s+([0-9.]+)`)\n\tmatches := re.FindSubmatch(bs)\n\tif len(matches) != 2 {\n\t\tlog.Fatal(\"failed to parse go.mod\")\n\t}\n\tgoVersion := string(matches[1])\n\n\trunPrint(goCmd, \"get\", \"-u\", \"./...\")\n\trunPrint(goCmd, \"mod\", \"tidy\", \"-go=\"+goVersion, \"-compat=\"+goVersion)\n\n\t// We might have updated the protobuf package and should regenerate to match.\n\tproto()\n}\n\nfunc proto() {\n\t// buf needs to be installed\n\t// https://buf.build/docs/installation/\n\trunPrint(\"buf\", \"generate\")\n}\n\nfunc testmocks() {\n\targs := []string{\n\t\t\"generate\",\n\t\t\"github.com/syncthing/syncthing/lib/config\",\n\t\t\"github.com/syncthing/syncthing/lib/connections\",\n\t\t\"github.com/syncthing/syncthing/lib/discover\",\n\t\t\"github.com/syncthing/syncthing/lib/events\",\n\t\t\"github.com/syncthing/syncthing/lib/logger\",\n\t\t\"github.com/syncthing/syncthing/lib/model\",\n\t\t\"github.com/syncthing/syncthing/lib/protocol\",\n\t}\n\trunPrint(goCmd, args...)\n}\n\nfunc translate() {\n\tos.Chdir(\"gui/default/assets/lang\")\n\trunPipe(\"lang-en-new.json\", goCmd, \"run\", \"../../../../script/translate.go\", \"lang-en.json\", \"../../../\")\n\tos.Remove(\"lang-en.json\")\n\terr := os.Rename(\"lang-en-new.json\", \"lang-en.json\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tos.Chdir(\"../../../..\")\n}\n\nfunc transifex() {\n\tos.Chdir(\"gui/default/assets/lang\")\n\trunPrint(goCmd, \"run\", \"../../../../script/transifexdl.go\")\n}\n\nfunc weblate() {\n\tos.Chdir(\"gui/default/assets/lang\")\n\trunPrint(goCmd, \"run\", \"../../../../script/weblatedl.go\")\n}\n\nfunc ldflags(tags []string) string {\n\tb := new(strings.Builder)\n\tb.WriteString(\"-w\")\n\tfmt.Fprintf(b, \" -X github.com/syncthing/syncthing/lib/build.Version=%s\", version)\n\tfmt.Fprintf(b, \" -X github.com/syncthing/syncthing/lib/build.Stamp=%d\", buildStamp())\n\tfmt.Fprintf(b, \" -X github.com/syncthing/syncthing/lib/build.User=%s\", buildUser())\n\tfmt.Fprintf(b, \" -X github.com/syncthing/syncthing/lib/build.Host=%s\", buildHost())\n\tfmt.Fprintf(b, \" -X github.com/syncthing/syncthing/lib/build.Tags=%s\", strings.Join(tags, \",\"))\n\tif v := os.Getenv(\"EXTRA_LDFLAGS\"); v != \"\" {\n\t\tfmt.Fprintf(b, \" %s\", v)\n\t}\n\treturn b.String()\n}\n\nfunc rmr(paths ...string) {\n\tfor _, path := range paths {\n\t\tif debug {\n\t\t\tlog.Println(\"rm -r\", path)\n\t\t}\n\t\tos.RemoveAll(path)\n\t}\n}\n\nfunc getReleaseVersion() (string, error) {\n\tbs, err := os.ReadFile(\"RELEASE\")\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\treturn string(bytes.TrimSpace(bs)), nil\n}\n\nfunc getGitVersion() (string, error) {\n\t// The current version as Git sees it\n\tbs, err := runError(\"git\", \"describe\", \"--always\", \"--dirty\", \"--abbrev=8\")\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\tvcur := string(bs)\n\n\t// The closest current tag name\n\tbs, err = runError(\"git\", \"describe\", \"--always\", \"--abbrev=0\")\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\tv0 := string(bs)\n\n\t// To be more semantic-versionish and ensure proper ordering in our\n\t// upgrade process, we make sure there's only one hyphen in the version.\n\n\tversionRe := regexp.MustCompile(`-([0-9]{1,3}-g[0-9a-f]{5,10}(-dirty)?)`)\n\tif m := versionRe.FindStringSubmatch(vcur); len(m) > 0 {\n\t\tsuffix := strings.ReplaceAll(m[1], \"-\", \".\")\n\n\t\tif strings.Contains(v0, \"-\") {\n\t\t\t// We're based of a tag with a prerelease string. We can just\n\t\t\t// add our dev stuff directly.\n\t\t\treturn fmt.Sprintf(\"%s.dev.%s\", v0, suffix), nil\n\t\t}\n\n\t\t// We're based on a release version. We need to bump the patch\n\t\t// version and then add a -dev prerelease string.\n\t\tnext := nextPatchVersion(v0)\n\t\treturn fmt.Sprintf(\"%s-dev.%s\", next, suffix), nil\n\t}\n\treturn vcur, nil\n}\n\nfunc getVersion() string {\n\t// First try for a RELEASE file,\n\tif ver, err := getReleaseVersion(); err == nil {\n\t\treturn ver\n\t}\n\t// ... then see if we have a Git tag.\n\tif ver, err := getGitVersion(); err == nil {\n\t\tif strings.Contains(ver, \"-\") {\n\t\t\t// The version already contains a hash and stuff. See if we can\n\t\t\t// find a current branch name to tack onto it as well.\n\t\t\treturn ver + getBranchSuffix()\n\t\t}\n\t\treturn ver\n\t}\n\t// This seems to be a dev build.\n\treturn \"unknown-dev\"\n}\n\nfunc semanticVersion() (major, minor, patch int) {\n\tr := regexp.MustCompile(`v(\\d+)\\.(\\d+).(\\d+)`)\n\tmatches := r.FindStringSubmatch(getVersion())\n\tif len(matches) != 4 {\n\t\treturn 0, 0, 0\n\t}\n\n\tvar ints [3]int\n\tfor i, s := range matches[1:] {\n\t\tints[i], _ = strconv.Atoi(s)\n\t}\n\treturn ints[0], ints[1], ints[2]\n}\n\nfunc getBranchSuffix() string {\n\tbs, err := runError(\"git\", \"branch\", \"-a\", \"--contains\")\n\tif err != nil {\n\t\treturn \"\"\n\t}\n\n\tbranches := strings.Split(string(bs), \"\\n\")\n\tif len(branches) == 0 {\n\t\treturn \"\"\n\t}\n\n\tbranch := \"\"\n\tfor i, candidate := range branches {\n\t\tif strings.HasPrefix(candidate, \"*\") {\n\t\t\t// This is the current branch. Select it!\n\t\t\tbranch = strings.TrimLeft(candidate, \" \\t*\")\n\t\t\tbreak\n\t\t} else if i == 0 {\n\t\t\t// Otherwise the first branch in the list will do.\n\t\t\tbranch = strings.TrimSpace(branch)\n\t\t}\n\t}\n\n\tif branch == \"\" {\n\t\treturn \"\"\n\t}\n\n\t// The branch name may be on the form \"remotes/origin/foo\" from which we\n\t// just want \"foo\".\n\tparts := strings.Split(branch, \"/\")\n\tif len(parts) == 0 || len(parts[len(parts)-1]) == 0 {\n\t\treturn \"\"\n\t}\n\n\tbranch = parts[len(parts)-1]\n\tswitch branch {\n\tcase \"release\", \"main\":\n\t\t// these are not special\n\t\treturn \"\"\n\t}\n\tif strings.HasPrefix(branch, \"release-\") {\n\t\t// release branches are not special\n\t\treturn \"\"\n\t}\n\n\tvalidBranchRe := regexp.MustCompile(`^[a-zA-Z0-9_.-]+$`)\n\tif !validBranchRe.MatchString(branch) {\n\t\t// There's some odd stuff in the branch name. Better skip it.\n\t\treturn \"\"\n\t}\n\n\treturn \"-\" + branch\n}\n\nfunc buildStamp() int64 {\n\t// If SOURCE_DATE_EPOCH is set, use that.\n\tif s, _ := strconv.ParseInt(os.Getenv(\"SOURCE_DATE_EPOCH\"), 10, 64); s > 0 {\n\t\treturn s\n\t}\n\n\t// Try to get the timestamp of the latest commit.\n\tbs, err := runError(\"git\", \"show\", \"-s\", \"--format=%ct\")\n\tif err != nil {\n\t\t// Fall back to \"now\".\n\t\treturn time.Now().Unix()\n\t}\n\n\ts, _ := strconv.ParseInt(string(bs), 10, 64)\n\treturn s\n}\n\nfunc buildUser() string {\n\tif v := os.Getenv(\"BUILD_USER\"); v != \"\" {\n\t\treturn v\n\t}\n\n\tu, err := user.Current()\n\tif err != nil {\n\t\treturn \"unknown-user\"\n\t}\n\treturn strings.Replace(u.Username, \" \", \"-\", -1)\n}\n\nfunc buildHost() string {\n\tif v := os.Getenv(\"BUILD_HOST\"); v != \"\" {\n\t\treturn v\n\t}\n\n\th, err := os.Hostname()\n\tif err != nil {\n\t\treturn \"unknown-host\"\n\t}\n\treturn h\n}\n\nfunc buildArch() string {\n\tos := goos\n\tif os == \"darwin\" {\n\t\tos = \"macos\"\n\t}\n\treturn fmt.Sprintf(\"%s-%s\", os, goarch)\n}\n\nfunc archiveName(target target) string {\n\treturn fmt.Sprintf(\"%s-%s-%s\", target.name, buildArch(), version)\n}\n\nfunc runError(cmd string, args ...string) ([]byte, error) {\n\tif debug {\n\t\tt0 := time.Now()\n\t\tlog.Println(\"runError:\", cmd, strings.Join(args, \" \"))\n\t\tdefer func() {\n\t\t\tlog.Println(\"... in\", time.Since(t0))\n\t\t}()\n\t}\n\tecmd := exec.Command(cmd, args...)\n\tbs, err := ecmd.CombinedOutput()\n\treturn bytes.TrimSpace(bs), err\n}\n\nfunc runPrint(cmd string, args ...string) {\n\trunPrintInDir(\".\", cmd, args...)\n}\n\nfunc runPrintInDir(dir string, cmd string, args ...string) {\n\tif debug {\n\t\tt0 := time.Now()\n\t\tlog.Println(\"runPrint:\", cmd, strings.Join(args, \" \"))\n\t\tdefer func() {\n\t\t\tlog.Println(\"... in\", time.Since(t0))\n\t\t}()\n\t}\n\tecmd := exec.Command(cmd, args...)\n\tecmd.Stdout = os.Stdout\n\tecmd.Stderr = os.Stderr\n\tecmd.Dir = dir\n\terr := ecmd.Run()\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n}\n\nfunc runPipe(file, cmd string, args ...string) {\n\tif debug {\n\t\tt0 := time.Now()\n\t\tlog.Println(\"runPipe:\", cmd, strings.Join(args, \" \"))\n\t\tdefer func() {\n\t\t\tlog.Println(\"... in\", time.Since(t0))\n\t\t}()\n\t}\n\tfd, err := os.Create(file)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tecmd := exec.Command(cmd, args...)\n\tecmd.Stdout = fd\n\tecmd.Stderr = os.Stderr\n\terr = ecmd.Run()\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tfd.Close()\n}\n\nfunc tarGz(out string, files []archiveFile) {\n\tfd, err := os.Create(out)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tgw, err := gzip.NewWriterLevel(fd, gzip.BestCompression)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\ttw := tar.NewWriter(gw)\n\n\tfor _, f := range files {\n\t\tsf, err := os.Open(f.src)\n\t\tif err != nil {\n\t\t\tlog.Fatal(err)\n\t\t}\n\n\t\tinfo, err := sf.Stat()\n\t\tif err != nil {\n\t\t\tlog.Fatal(err)\n\t\t}\n\t\th := &tar.Header{\n\t\t\tName:    f.dst,\n\t\t\tSize:    info.Size(),\n\t\t\tMode:    int64(info.Mode()),\n\t\t\tModTime: info.ModTime(),\n\t\t}\n\n\t\terr = tw.WriteHeader(h)\n\t\tif err != nil {\n\t\t\tlog.Fatal(err)\n\t\t}\n\t\t_, err = io.Copy(tw, sf)\n\t\tif err != nil {\n\t\t\tlog.Fatal(err)\n\t\t}\n\t\tsf.Close()\n\t}\n\n\terr = tw.Close()\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\terr = gw.Close()\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\terr = fd.Close()\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n}\n\nfunc zipFile(out string, files []archiveFile) {\n\tfd, err := os.Create(out)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tzw := zip.NewWriter(fd)\n\n\tvar fw *flate.Writer\n\n\t// Register the deflator.\n\tzw.RegisterCompressor(zip.Deflate, func(out io.Writer) (io.WriteCloser, error) {\n\t\tvar err error\n\t\tif fw == nil {\n\t\t\t// Creating a flate compressor for every file is\n\t\t\t// expensive, create one and reuse it.\n\t\t\tfw, err = flate.NewWriter(out, flate.BestCompression)\n\t\t} else {\n\t\t\tfw.Reset(out)\n\t\t}\n\t\treturn fw, err\n\t})\n\n\tfor _, f := range files {\n\t\tsf, err := os.Open(f.src)\n\t\tif err != nil {\n\t\t\tlog.Fatal(err)\n\t\t}\n\n\t\tinfo, err := sf.Stat()\n\t\tif err != nil {\n\t\t\tlog.Fatal(err)\n\t\t}\n\n\t\tfh, err := zip.FileInfoHeader(info)\n\t\tif err != nil {\n\t\t\tlog.Fatal(err)\n\t\t}\n\t\tfh.Name = filepath.ToSlash(f.dst)\n\t\tfh.Method = zip.Deflate\n\n\t\tif strings.HasSuffix(f.dst, \".txt\") {\n\t\t\t// Text file. Read it and convert line endings.\n\t\t\tbs, err := io.ReadAll(sf)\n\t\t\tif err != nil {\n\t\t\t\tlog.Fatal(err)\n\t\t\t}\n\t\t\tbs = bytes.Replace(bs, []byte{'\\n'}, []byte{'\\r', '\\n'}, -1)\n\t\t\tfh.UncompressedSize = uint32(len(bs))\n\t\t\tfh.UncompressedSize64 = uint64(len(bs))\n\n\t\t\tof, err := zw.CreateHeader(fh)\n\t\t\tif err != nil {\n\t\t\t\tlog.Fatal(err)\n\t\t\t}\n\t\t\tof.Write(bs)\n\t\t} else {\n\t\t\t// Binary file. Copy verbatim.\n\t\t\tof, err := zw.CreateHeader(fh)\n\t\t\tif err != nil {\n\t\t\t\tlog.Fatal(err)\n\t\t\t}\n\t\t\t_, err = io.Copy(of, sf)\n\t\t\tif err != nil {\n\t\t\t\tlog.Fatal(err)\n\t\t\t}\n\t\t}\n\t}\n\n\terr = zw.Close()\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\terr = fd.Close()\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n}\n\nfunc codesign(target target) {\n\tswitch goos {\n\tcase \"windows\":\n\t\twindowsCodesign(target.BinaryName())\n\tcase \"darwin\":\n\t\tmacosCodesign(target.BinaryName())\n\t}\n}\n\nfunc macosCodesign(file string) {\n\tif pass := os.Getenv(\"CODESIGN_KEYCHAIN_PASS\"); pass != \"\" {\n\t\tbs, err := runError(\"security\", \"unlock-keychain\", \"-p\", pass)\n\t\tif err != nil {\n\t\t\tlog.Println(\"Codesign: unlocking keychain failed:\", string(bs))\n\t\t\treturn\n\t\t}\n\t}\n\n\tif id := os.Getenv(\"CODESIGN_IDENTITY\"); id != \"\" {\n\t\tbs, err := runError(\"codesign\", \"--options=runtime\", \"-s\", id, file)\n\t\tif err != nil {\n\t\t\tlog.Println(\"Codesign: signing failed:\", string(bs))\n\t\t\treturn\n\t\t}\n\t\tlog.Println(\"Codesign: successfully signed\", file)\n\t}\n}\n\nfunc windowsCodesign(file string) {\n\tst := \"signtool.exe\"\n\n\tif path := os.Getenv(\"CODESIGN_SIGNTOOL\"); path != \"\" {\n\t\tst = path\n\t}\n\n\tfor i, algo := range []string{\"sha1\", \"sha256\"} {\n\t\targs := []string{\"sign\", \"/fd\", algo}\n\t\tif f := os.Getenv(\"CODESIGN_CERTIFICATE_FILE\"); f != \"\" {\n\t\t\targs = append(args, \"/f\", f)\n\t\t} else if b := os.Getenv(\"CODESIGN_CERTIFICATE_BASE64\"); b != \"\" {\n\t\t\t// Decode the PFX certificate from base64.\n\t\t\tbs, err := base64.RawStdEncoding.DecodeString(b)\n\t\t\tif err != nil {\n\t\t\t\tlog.Println(\"Codesign: signing failed: decoding base64:\", err)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// Write it to a temporary file\n\t\t\tf, err := os.CreateTemp(\"\", \"codesign-*.pfx\")\n\t\t\tif err != nil {\n\t\t\t\tlog.Println(\"Codesign: signing failed: creating temp file:\", err)\n\t\t\t\treturn\n\t\t\t}\n\t\t\t_ = f.Chmod(0o600) // best effort remove other users' access\n\t\t\tdefer os.Remove(f.Name())\n\t\t\tif _, err := f.Write(bs); err != nil {\n\t\t\t\tlog.Println(\"Codesign: signing failed: writing temp file:\", err)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif err := f.Close(); err != nil {\n\t\t\t\tlog.Println(\"Codesign: signing failed: closing temp file:\", err)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// Use that when signing\n\t\t\targs = append(args, \"/f\", f.Name())\n\t\t}\n\t\tif p := os.Getenv(\"CODESIGN_CERTIFICATE_PASSWORD\"); p != \"\" {\n\t\t\targs = append(args, \"/p\", p)\n\t\t}\n\t\tif tr := os.Getenv(\"CODESIGN_TIMESTAMP_SERVER\"); tr != \"\" {\n\t\t\tswitch algo {\n\t\t\tcase \"sha256\":\n\t\t\t\targs = append(args, \"/tr\", tr, \"/td\", algo)\n\t\t\tdefault:\n\t\t\t\targs = append(args, \"/t\", tr)\n\t\t\t}\n\t\t}\n\t\tif i > 0 {\n\t\t\targs = append(args, \"/as\")\n\t\t}\n\t\targs = append(args, file)\n\n\t\tbs, err := runError(st, args...)\n\t\tif err != nil {\n\t\t\tlog.Printf(\"Codesign: signing failed: %v: %s\", err, string(bs))\n\t\t\treturn\n\t\t}\n\t\tlog.Println(\"Codesign: successfully signed\", file, \"using\", algo)\n\t}\n}\n\nfunc metalint() {\n\tlazyRebuildAssets()\n\trunPrint(goCmd, \"test\", \"-run\", \"Metalint\", \"./meta\")\n}\n\nfunc metalintShort() {\n\tlazyRebuildAssets()\n\trunPrint(goCmd, \"test\", \"-short\", \"-run\", \"Metalint\", \"./meta\")\n}\n\nfunc (t target) BinaryName() string {\n\tif goos == \"windows\" {\n\t\treturn t.binaryName + \".exe\"\n\t}\n\treturn t.binaryName\n}\n\nfunc currentAndLatestVersions(n int) ([]string, error) {\n\tbs, err := runError(\"git\", \"tag\", \"--sort\", \"taggerdate\")\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tlines := strings.Split(string(bs), \"\\n\")\n\treverseStrings(lines)\n\n\t// The one at the head is the latest version. We always keep that one.\n\t// Then we filter out remaining ones with dashes (pre-releases etc).\n\n\tlatest := lines[:1]\n\tnonPres := filterStrings(lines[1:], func(s string) bool { return !strings.Contains(s, \"-\") })\n\tvers := append(latest, nonPres...)\n\treturn vers[:n], nil\n}\n\nfunc reverseStrings(ss []string) {\n\tfor i := 0; i < len(ss)/2; i++ {\n\t\tss[i], ss[len(ss)-1-i] = ss[len(ss)-1-i], ss[i]\n\t}\n}\n\nfunc filterStrings(ss []string, op func(string) bool) []string {\n\tn := ss[:0]\n\tfor _, s := range ss {\n\t\tif op(s) {\n\t\t\tn = append(n, s)\n\t\t}\n\t}\n\treturn n\n}\n\nfunc tagMessage(tag string) (string, error) {\n\thash, err := runError(\"git\", \"rev-parse\", tag)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\tobj, err := runError(\"git\", \"cat-file\", \"-p\", string(hash))\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\treturn trimTagMessage(string(obj), tag), nil\n}\n\nfunc trimTagMessage(msg, tag string) string {\n\tfirstBlank := strings.Index(msg, \"\\n\\n\")\n\tif firstBlank > 0 {\n\t\tmsg = msg[firstBlank+2:]\n\t}\n\tmsg = strings.TrimPrefix(msg, tag)\n\tbeginSig := strings.Index(msg, \"-----BEGIN PGP\")\n\tif beginSig > 0 {\n\t\tmsg = msg[:beginSig]\n\t}\n\treturn strings.TrimSpace(msg)\n}\n\nfunc nextPatchVersion(ver string) string {\n\tparts := strings.SplitN(ver, \"-\", 2)\n\tdigits := strings.Split(parts[0], \".\")\n\tn, _ := strconv.Atoi(digits[len(digits)-1])\n\tdigits[len(digits)-1] = strconv.Itoa(n + 1)\n\treturn strings.Join(digits, \".\")\n}\n\nfunc writeCompatJSON() {\n\tbs, err := os.ReadFile(\"compat.yaml\")\n\tif err != nil {\n\t\tlog.Fatal(\"Reading compat.yaml:\", err)\n\t}\n\n\tvar entries []upgrade.ReleaseCompatibility\n\tif err := yaml.Unmarshal(bs, &entries); err != nil {\n\t\tlog.Fatal(\"Parsing compat.yaml:\", err)\n\t}\n\n\trt := runtime.Version()\n\tfor _, e := range entries {\n\t\tif !strings.HasPrefix(rt, e.Runtime) {\n\t\t\tcontinue\n\t\t}\n\t\tbs, _ := json.MarshalIndent(e, \"\", \"  \")\n\t\tif err := os.WriteFile(\"compat.json\", bs, 0o644); err != nil {\n\t\t\tlog.Fatal(\"Writing compat.json:\", err)\n\t\t}\n\t\treturn\n\t}\n\n\tlog.Fatalf(\"runtime %v not found in compat.yaml\", rt)\n}\n"
        },
        {
          "name": "build.ps1",
          "type": "blob",
          "size": 0.2578125,
          "content": "function build {\n    go run build.go @args\n}\n\n$cmd, $rest = $args\nswitch ($cmd) {\n    \"test\" {\n        $env:LOGGER_DISCARD=1\n        build test\n    }\n\n    \"bench\" {\n        $env:LOGGER_DISCARD=1\n        build bench\n    }\n\n    default {\n        build @rest\n    }\n}\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.4794921875,
          "content": "#!/usr/bin/env bash\nset -euo pipefail\nIFS=$'\\n\\t'\n\nscript() {\n\tname=\"$1\"\n\tshift\n\tgo run \"script/$name.go\" \"$@\"\n}\n\nbuild() {\n\tgo run build.go \"$@\"\n}\n\ncase \"${1:-default}\" in\n\ttest)\n\t\tLOGGER_DISCARD=1 build test\n\t\t;;\n\n\tbench)\n\t\tLOGGER_DISCARD=1 build bench\n\t\t;;\n\n\tprerelease)\n\t\tscript authors\n\t\tbuild weblate\n\t\tpushd man ; ./refresh.sh ; popd\n\t\tgit add -A gui man AUTHORS\n\t\tgit commit -m 'chore(gui, man, authors): update docs, translations, and contributors'\n\t\t;;\n\n\t*)\n\t\tbuild \"$@\"\n\t\t;;\nesac\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "compat.yaml",
          "type": "blob",
          "size": 0.9755859375,
          "content": "- runtime: go1.21\n  requirements:\n    # See https://en.wikipedia.org/wiki/MacOS_version_history#Releases\n    #\n    # macOS 10.15 (Catalina) per https://go.dev/doc/go1.22#darwin\n    darwin: \"19\"\n    # Per https://go.dev/doc/go1.23#linux\n    linux: \"2.6.32\"\n    # Windows 10's initial release was 10.0.10240.16405, per\n    # https://learn.microsoft.com/en-us/windows/release-health/release-information\n    # and Windows 11's initial release was 10.0.22000.194 per\n    # https://learn.microsoft.com/en-us/windows/release-health/windows11-release-information\n    #\n    # Windows 10/Windows Server 2016 per https://go.dev/doc/go1.21#windows\n    windows: \"10.0\"\n\n- runtime: go1.22\n  requirements:\n    darwin: \"19\"\n    linux: \"2.6.32\"\n    windows: \"10.0\"\n\n- runtime: go1.23\n  requirements:\n    # macOS 11 (Big Sur) per https://tip.golang.org/doc/go1.23#darwin\n    darwin: \"20\"\n    linux: \"2.6.32\"\n    windows: \"10.0\"\n\n- runtime: go1.24\n  requirements:\n    darwin: \"20\"\n    linux: \"3.2\"\n    windows: \"10.0\"\n"
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 4.2470703125,
          "content": "module github.com/syncthing/syncthing\n\ngo 1.22.0\n\nrequire (\n\tgithub.com/AudriusButkevicius/recli v0.0.7-0.20220911121932-d000ce8fbf0f\n\tgithub.com/alecthomas/kong v1.6.0\n\tgithub.com/aws/aws-sdk-go v1.55.5\n\tgithub.com/calmh/incontainer v1.0.0\n\tgithub.com/calmh/xdr v1.2.0\n\tgithub.com/ccding/go-stun v0.1.5\n\tgithub.com/chmduquesne/rollinghash v4.0.0+incompatible\n\tgithub.com/d4l3k/messagediff v1.2.1\n\tgithub.com/getsentry/raven-go v0.2.0\n\tgithub.com/go-ldap/ldap/v3 v3.4.10\n\tgithub.com/gobwas/glob v0.2.3\n\tgithub.com/greatroar/blobloom v0.8.0\n\tgithub.com/hashicorp/golang-lru/v2 v2.0.7\n\tgithub.com/jackpal/gateway v1.0.16\n\tgithub.com/jackpal/go-nat-pmp v1.0.2\n\tgithub.com/julienschmidt/httprouter v1.3.0\n\tgithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51\n\tgithub.com/maruel/panicparse/v2 v2.4.0\n\tgithub.com/maxbrunsfeld/counterfeiter/v6 v6.8.1\n\tgithub.com/maxmind/geoipupdate/v6 v6.1.0\n\tgithub.com/miscreant/miscreant.go v0.0.0-20200214223636-26d376326b75\n\tgithub.com/oschwald/geoip2-golang v1.11.0\n\tgithub.com/pierrec/lz4/v4 v4.1.22\n\tgithub.com/prometheus/client_golang v1.20.5\n\tgithub.com/puzpuzpuz/xsync/v3 v3.4.0\n\tgithub.com/quic-go/quic-go v0.48.2\n\tgithub.com/rabbitmq/amqp091-go v1.10.0\n\tgithub.com/rcrowley/go-metrics v0.0.0-20201227073835-cf1acfcdf475\n\tgithub.com/shirou/gopsutil/v4 v4.24.12\n\tgithub.com/syncthing/notify v0.0.0-20210616190510-c6b7342338d2\n\tgithub.com/syndtr/goleveldb v1.0.1-0.20220721030215-126854af5e6d\n\tgithub.com/thejerf/suture/v4 v4.0.6\n\tgithub.com/urfave/cli v1.22.16\n\tgithub.com/vitrun/qart v0.0.0-20160531060029-bf64b92db6b0\n\tgithub.com/willabides/kongplete v0.4.0\n\tgo.uber.org/automaxprocs v1.6.0\n\tgolang.org/x/crypto v0.31.0\n\tgolang.org/x/net v0.33.0\n\tgolang.org/x/sys v0.28.0\n\tgolang.org/x/text v0.21.0\n\tgolang.org/x/time v0.8.0\n\tgolang.org/x/tools v0.28.0\n\tgoogle.golang.org/protobuf v1.36.1\n\tsigs.k8s.io/yaml v1.4.0\n)\n\nrequire (\n\tgithub.com/Azure/go-ntlmssp v0.0.0-20221128193559-754e69321358 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/cenkalti/backoff/v4 v4.3.0 // indirect\n\tgithub.com/certifi/gocertifi v0.0.0-20210507211836-431795d63e8d // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.5 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/ebitengine/purego v0.8.1 // indirect\n\tgithub.com/fsnotify/fsnotify v1.7.0 // indirect\n\tgithub.com/go-asn1-ber/asn1-ber v1.5.7 // indirect\n\tgithub.com/go-ole/go-ole v1.3.0 // indirect\n\tgithub.com/go-task/slim-sprig/v3 v3.0.0 // indirect\n\tgithub.com/gofrs/flock v0.12.1 // indirect\n\tgithub.com/golang/snappy v0.0.4 // indirect\n\tgithub.com/google/pprof v0.0.0-20241009165004-a3522334989c // indirect\n\tgithub.com/google/uuid v1.6.0 // indirect\n\tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n\tgithub.com/hashicorp/go-multierror v1.1.1 // indirect\n\tgithub.com/jmespath/go-jmespath v0.4.0 // indirect\n\tgithub.com/klauspost/compress v1.17.11 // indirect\n\tgithub.com/lufia/plan9stats v0.0.0-20240909124753-873cd0166683 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/nxadm/tail v1.4.11 // indirect\n\tgithub.com/onsi/ginkgo/v2 v2.20.2 // indirect\n\tgithub.com/oschwald/maxminddb-golang v1.13.1 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/posener/complete v1.2.3 // indirect\n\tgithub.com/power-devops/perfstat v0.0.0-20240221224432-82ca36839d55 // indirect\n\tgithub.com/prometheus/client_model v0.6.1 // indirect\n\tgithub.com/prometheus/common v0.60.0 // indirect\n\tgithub.com/prometheus/procfs v0.15.1 // indirect\n\tgithub.com/riywo/loginshell v0.0.0-20200815045211-7d26008be1ab // indirect\n\tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n\tgithub.com/stretchr/objx v0.5.2 // indirect\n\tgithub.com/stretchr/testify v1.10.0 // indirect\n\tgithub.com/tklauser/go-sysconf v0.3.14 // indirect\n\tgithub.com/tklauser/numcpus v0.9.0 // indirect\n\tgithub.com/yusufpapurcu/wmi v1.2.4 // indirect\n\tgo.uber.org/mock v0.4.0 // indirect\n\tgolang.org/x/exp v0.0.0-20241009180824-f66d83c29e7c // indirect\n\tgolang.org/x/mod v0.22.0 // indirect\n\tgolang.org/x/sync v0.10.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n\n// https://github.com/gobwas/glob/pull/55\nreplace github.com/gobwas/glob v0.2.3 => github.com/calmh/glob v0.0.0-20220615080505-1d823af5017b\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 35.9013671875,
          "content": "github.com/AudriusButkevicius/recli v0.0.7-0.20220911121932-d000ce8fbf0f h1:GmH5lT+moM7PbAJFBq57nH9WJ+wRnBXr/tyaYWbSAx8=\ngithub.com/AudriusButkevicius/recli v0.0.7-0.20220911121932-d000ce8fbf0f/go.mod h1:Nhfib1j/VFnLrXL9cHgA+/n2O6P5THuWelOnbfPNd78=\ngithub.com/Azure/go-ntlmssp v0.0.0-20221128193559-754e69321358 h1:mFRzDkZVAjdal+s7s0MwaRv9igoPqLRdzOLzw/8Xvq8=\ngithub.com/Azure/go-ntlmssp v0.0.0-20221128193559-754e69321358/go.mod h1:chxPXzSsl7ZWRAuOIE23GDNzjWuZquvFlgA8xmpunjU=\ngithub.com/BurntSushi/toml v1.4.0/go.mod h1:ukJfTF/6rtPPRCnwkur4qwRxa8vTRFBF0uk2lLoLwho=\ngithub.com/alecthomas/assert/v2 v2.11.0 h1:2Q9r3ki8+JYXvGsDyBXwH3LcJ+WK5D0gc5E8vS6K3D0=\ngithub.com/alecthomas/assert/v2 v2.11.0/go.mod h1:Bze95FyfUr7x34QZrjL+XP+0qgp/zg8yS+TtBj1WA3k=\ngithub.com/alecthomas/kong v1.6.0 h1:mwOzbdMR7uv2vul9J0FU3GYxE7ls/iX1ieMg5WIM6gE=\ngithub.com/alecthomas/kong v1.6.0/go.mod h1:p2vqieVMeTAnaC83txKtXe8FLke2X07aruPWXyMPQrU=\ngithub.com/alecthomas/repr v0.4.0 h1:GhI2A8MACjfegCPVq9f1FLvIBS+DrQ2KQBFZP1iFzXc=\ngithub.com/alecthomas/repr v0.4.0/go.mod h1:Fr0507jx4eOXV7AlPV6AVZLYrLIuIeSOWtW57eE/O/4=\ngithub.com/alexbrainman/sspi v0.0.0-20231016080023-1a75b4708caa h1:LHTHcTQiSGT7VVbI0o4wBRNQIgn917usHWOd6VAffYI=\ngithub.com/alexbrainman/sspi v0.0.0-20231016080023-1a75b4708caa/go.mod h1:cEWa1LVoE5KvSD9ONXsZrj0z6KqySlCCNKHlLzbqAt4=\ngithub.com/aws/aws-sdk-go v1.55.5 h1:KKUZBfBoyqy5d3swXyiC7Q76ic40rYcbqH7qjh59kzU=\ngithub.com/aws/aws-sdk-go v1.55.5/go.mod h1:eRwEWoyTWFMVYVQzKMNHWP5/RV4xIUGMQfXQHfHkpNU=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/calmh/glob v0.0.0-20220615080505-1d823af5017b h1:Fjm4GuJ+TGMgqfGHN42IQArJb77CfD/mAwLbDUoJe6g=\ngithub.com/calmh/glob v0.0.0-20220615080505-1d823af5017b/go.mod h1:91K7jfEsgJSyfSrX+gmrRfZMtntx6JsHolWubGXDopg=\ngithub.com/calmh/incontainer v1.0.0 h1:g2cTUtZuFGmMGX8GoykPkN1Judj2uw8/3/aEtq4Z/rg=\ngithub.com/calmh/incontainer v1.0.0/go.mod h1:eOhqnw15c9X+4RNBe0W3HlUZFfX16O0EDsCOInTndHY=\ngithub.com/calmh/xdr v1.2.0 h1:GaGSNH4ZDw9kNdYqle6+RcAENiaQ8/611Ok+jQbBEeU=\ngithub.com/calmh/xdr v1.2.0/go.mod h1:vO5+lCx/8xz7Ekd/ZLf+xuy7c1x6FMO1pBJyjDebwyg=\ngithub.com/ccding/go-stun v0.1.5 h1:qEM367nnezmj7dv+SdT52prv5x6HUTG3nlrjX5aitlo=\ngithub.com/ccding/go-stun v0.1.5/go.mod h1:cCZjJ1J3WFSJV6Wj8Y9Di8JMTsEXh6uv2eNmLzKaUeM=\ngithub.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=\ngithub.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/certifi/gocertifi v0.0.0-20210507211836-431795d63e8d h1:S2NE3iHSwP0XV47EEXL8mWmRdEfGscSJ+7EgePNgt0s=\ngithub.com/certifi/gocertifi v0.0.0-20210507211836-431795d63e8d/go.mod h1:sGbDF6GwGcLpkNXPUTkMRoywsNa/ol15pxFe6ERfguA=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/chmduquesne/rollinghash v4.0.0+incompatible h1:hnREQO+DXjqIw3rUTzWN7/+Dpw+N5Um8zpKV0JOEgbo=\ngithub.com/chmduquesne/rollinghash v4.0.0+incompatible/go.mod h1:Uc2I36RRfTAf7Dge82bi3RU0OQUmXT9iweIcPqvr8A0=\ngithub.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\ngithub.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\ngithub.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.5 h1:ZtcqGrnekaHpVLArFSe4HK5DoKx1T0rq2DwVB0alcyc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.5/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/d4l3k/messagediff v1.2.1 h1:ZcAIMYsUg0EAp9X+tt8/enBE/Q8Yd5kzPynLyKptt9U=\ngithub.com/d4l3k/messagediff v1.2.1/go.mod h1:Oozbb1TVXFac9FtSIxHBMnBCq2qeH/2KkEQxENCrlLo=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/ebitengine/purego v0.8.1 h1:sdRKd6plj7KYW33EH5As6YKfe8m9zbN9JMrOjNVF/BE=\ngithub.com/ebitengine/purego v0.8.1/go.mod h1:iIjxzd6CiRiOG0UyXP+V1+jWqUXVjPKLAI0mRfJZTmQ=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4IgpuI1SZQ=\ngithub.com/fsnotify/fsnotify v1.5.4/go.mod h1:OVB6XrOHzAwXMpEM7uPOzcehqUV2UqJxmVXmkdnm1bU=\ngithub.com/fsnotify/fsnotify v1.6.0/go.mod h1:sl3t1tCWJFWoRz9R8WJCbQihKKwmorjAbSClcnxKAGw=\ngithub.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=\ngithub.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=\ngithub.com/getsentry/raven-go v0.2.0 h1:no+xWJRb5ZI7eE8TWgIq1jLulQiIoLG0IfYxv5JYMGs=\ngithub.com/getsentry/raven-go v0.2.0/go.mod h1:KungGk8q33+aIAZUIVWZDr2OfAEBsO49PX4NzFV5kcQ=\ngithub.com/go-asn1-ber/asn1-ber v1.5.7 h1:DTX+lbVTWaTw1hQ+PbZPlnDZPEIs0SS/GCZAl535dDk=\ngithub.com/go-asn1-ber/asn1-ber v1.5.7/go.mod h1:hEBeB/ic+5LoWskz+yKT7vGhhPYkProFKoKdwZRWMe0=\ngithub.com/go-ldap/ldap/v3 v3.4.10 h1:ot/iwPOhfpNVgB1o+AVXljizWZ9JTp7YF5oeyONmcJU=\ngithub.com/go-ldap/ldap/v3 v3.4.10/go.mod h1:JXh4Uxgi40P6E9rdsYqpUtbW46D9UTjJ9QSwGRznplY=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-ole/go-ole v1.2.6/go.mod h1:pprOEPIfldk/42T2oK7lQ4v4JSDwmV0As9GaiUsvbm0=\ngithub.com/go-ole/go-ole v1.3.0 h1:Dt6ye7+vXGIKZ7Xtk4s6/xVdGDQynvom7xCFEdWr6uE=\ngithub.com/go-ole/go-ole v1.3.0/go.mod h1:5LS6F96DhAwUc7C+1HLexzMXY1xGRSryjyPPKW6zv78=\ngithub.com/go-task/slim-sprig v0.0.0-20210107165309-348f09dbbbc0/go.mod h1:fyg7847qk6SyHyPtNmDHnmrv/HOrqktSC+C9fM+CJOE=\ngithub.com/go-task/slim-sprig/v3 v3.0.0 h1:sUs3vkvUymDpBKi3qH1YSqBQk9+9D/8M2mN1vB6EwHI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0/go.mod h1:W848ghGpv3Qj3dhTPRyJypKRiqCdHZiAzKg9hl15HA8=\ngithub.com/gofrs/flock v0.12.1 h1:MTLVXXHf8ekldpJk3AKicLij9MdwOWkZ+a/jHHZby9E=\ngithub.com/gofrs/flock v0.12.1/go.mod h1:9zxTsyu5xtJ9DK+1tFZyibEV7y3uwDxPPfbxeeHCoD0=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/golang/snappy v0.0.4 h1:yAGX7huGHXlcLOEtBnF4w7FQwA26wojNCwOYAEhLjQM=\ngithub.com/golang/snappy v0.0.4/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/pprof v0.0.0-20210407192527-94a9f03dee38/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20241009165004-a3522334989c h1:NDovD0SMpBYXlE1zJmS1q55vWB/fUQBcPAqAboZSccA=\ngithub.com/google/pprof v0.0.0-20241009165004-a3522334989c/go.mod h1:vavhavw2zAxS5dIdcRluK6cSGGPlZynqzFM8NdvU144=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gorilla/securecookie v1.1.1/go.mod h1:ra0sb63/xPlUeL+yeDciTfxMRAA+MP+HVt/4epWDjd4=\ngithub.com/gorilla/sessions v1.2.1/go.mod h1:dk2InVEVJ0sfLlnXv9EAgkf6ecYs/i80K/zI+bUmuGM=\ngithub.com/greatroar/blobloom v0.8.0 h1:I9RlEkfqK9/6f1v9mFmDYegDQ/x0mISCpiNpAm23Pt4=\ngithub.com/greatroar/blobloom v0.8.0/go.mod h1:mjMJ1hh1wjGVfr93QIHJ6FfDNVrA0IELv8OvMHJxHKs=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=\ngithub.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-multierror v1.0.0/go.mod h1:dHtQlpGsu+cZNNAkkCN/P3hoUDHhCYQXV3UM06sGGrk=\ngithub.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\ngithub.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\ngithub.com/hashicorp/go-uuid v1.0.2/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.3 h1:2gKiV6YVmrJ1i2CKKa9obLvRieoRGviZFL26PcT/Co8=\ngithub.com/hashicorp/go-uuid v1.0.3/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7 h1:a+bsQ5rvGLjzHuww6tVxozPZFVghXaHOwFs4luLUK2k=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7/go.mod h1:QeFd9opnmA6QUJc5vARoKUSoFhyfM2/ZepoAG6RGpeM=\ngithub.com/hexops/gotextdiff v1.0.3 h1:gitA9+qJrrTCsiCl7+kh75nPqQt1cx4ZkudSTLoUqJM=\ngithub.com/hexops/gotextdiff v1.0.3/go.mod h1:pSWU5MAI3yDq+fZBTazCSJysOMbxWL1BSow5/V2vxeg=\ngithub.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\ngithub.com/ianlancetaylor/demangle v0.0.0-20200824232613-28f6c0f3b639/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/jackpal/gateway v1.0.16 h1:mTBRuHSW8qviVqX7kXnxKevqlfS/OA01ys6k6fxSX7w=\ngithub.com/jackpal/gateway v1.0.16/go.mod h1:IOn1OUbso/cGYmnCBZbCEqhNCLSz0xxdtIpUpri5/nA=\ngithub.com/jackpal/go-nat-pmp v1.0.2 h1:KzKSgb7qkJvOUTqYl9/Hg/me3pWgBmERKrTGD7BdWus=\ngithub.com/jackpal/go-nat-pmp v1.0.2/go.mod h1:QPH045xvCAeXUZOxsnwmrtiCoxIr9eob+4orBN1SBKc=\ngithub.com/jcmturner/aescts/v2 v2.0.0 h1:9YKLH6ey7H4eDBXW8khjYslgyqG2xZikXP0EQFKrle8=\ngithub.com/jcmturner/aescts/v2 v2.0.0/go.mod h1:AiaICIRyfYg35RUkr8yESTqvSy7csK90qZ5xfvvsoNs=\ngithub.com/jcmturner/dnsutils/v2 v2.0.0 h1:lltnkeZGL0wILNvrNiVCR6Ro5PGU/SeBvVO/8c/iPbo=\ngithub.com/jcmturner/dnsutils/v2 v2.0.0/go.mod h1:b0TnjGOvI/n42bZa+hmXL+kFJZsFT7G4t3HTlQ184QM=\ngithub.com/jcmturner/gofork v1.7.6 h1:QH0l3hzAU1tfT3rZCnW5zXl+orbkNMMRGJfdJjHVETg=\ngithub.com/jcmturner/gofork v1.7.6/go.mod h1:1622LH6i/EZqLloHfE7IeZ0uEJwMSUyQ/nDd82IeqRo=\ngithub.com/jcmturner/goidentity/v6 v6.0.1 h1:VKnZd2oEIMorCTsFBnJWbExfNN7yZr3EhJAxwOkZg6o=\ngithub.com/jcmturner/goidentity/v6 v6.0.1/go.mod h1:X1YW3bgtvwAXju7V3LCIMpY0Gbxyjn/mY9zx4tFonSg=\ngithub.com/jcmturner/gokrb5/v8 v8.4.4 h1:x1Sv4HaTpepFkXbt2IkL29DXRf8sOfZXo8eRKh687T8=\ngithub.com/jcmturner/gokrb5/v8 v8.4.4/go.mod h1:1btQEpgT6k+unzCwX1KdWMEwPPkkgBtP+F6aCACiMrs=\ngithub.com/jcmturner/rpc/v2 v2.0.3 h1:7FXXj8Ti1IaVFpSAziCZWNzbNuZmnvw/i6CqLNdWfZY=\ngithub.com/jcmturner/rpc/v2 v2.0.3/go.mod h1:VUJYCIDm3PVOEHw8sgt091/20OJjskO/YJki3ELg/Hc=\ngithub.com/jmespath/go-jmespath v0.4.0 h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=\ngithub.com/jmespath/go-jmespath v0.4.0/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1 h1:shLQSRRSCCPj3f2gpwzGwWFoC7ycTf1rcQZHOlsJ6N8=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1/go.mod h1:L3OGu8Wl2/fWfCI6z80xFu9LTZmf1ZRjMHUOPmWr69U=\ngithub.com/julienschmidt/httprouter v1.3.0 h1:U0609e9tgbseu3rBINet9P48AI/D3oJs4dN7jwJOQ1U=\ngithub.com/julienschmidt/httprouter v1.3.0/go.mod h1:JR6WtHb+2LUe8TCKY3cZOxFyyO8IZAc4RVcycCCAKdM=\ngithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51 h1:Z9n2FFNUXsshfwJMBgNA0RU6/i7WVaAegv3PtuIHPMs=\ngithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51/go.mod h1:CzGEWj7cYgsdH8dAjBGEr58BoE7ScuLd+fwFZ44+/x8=\ngithub.com/klauspost/compress v1.17.11 h1:In6xLpyWOi1+C7tXUUWv2ot1QvBjxevKAaI6IXrJmUc=\ngithub.com/klauspost/compress v1.17.11/go.mod h1:pMDklpSncoRMuLFrf1W9Ss9KT+0rH90U12bZKk7uwG0=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/lufia/plan9stats v0.0.0-20240909124753-873cd0166683 h1:7UMa6KCCMjZEMDtTVdcGu0B1GmmC7QJKiCCjyTAWQy0=\ngithub.com/lufia/plan9stats v0.0.0-20240909124753-873cd0166683/go.mod h1:ilwx/Dta8jXAgpFYFvSWEMwxmbWXyiUHkd5FwyKhb5k=\ngithub.com/maruel/panicparse/v2 v2.4.0 h1:yQKMIbQ0DKfinzVkTkcUzQyQ60UCiNnYfR7PWwTs2VI=\ngithub.com/maruel/panicparse/v2 v2.4.0/go.mod h1:nOY2OKe8csO3F3SA5+hsxot05JLgukrF54B9x88fVp4=\ngithub.com/maxbrunsfeld/counterfeiter/v6 v6.8.1 h1:NicmruxkeqHjDv03SfSxqmaLuisddudfP3h5wdXFbhM=\ngithub.com/maxbrunsfeld/counterfeiter/v6 v6.8.1/go.mod h1:eyp4DdUJAKkr9tvxR3jWhw2mDK7CWABMG5r9uyaKC7I=\ngithub.com/maxmind/geoipupdate/v6 v6.1.0 h1:sdtTHzzQNJlXF5+fd/EoPTucRHyMonYt/Cok8xzzfqA=\ngithub.com/maxmind/geoipupdate/v6 v6.1.0/go.mod h1:cZYCDzfMzTY4v6dKRdV7KTB6SStxtn3yFkiJ1btTGGc=\ngithub.com/miscreant/miscreant.go v0.0.0-20200214223636-26d376326b75 h1:cUVxyR+UfmdEAZGJ8IiKld1O0dbGotEnkMolG5hfMSY=\ngithub.com/miscreant/miscreant.go v0.0.0-20200214223636-26d376326b75/go.mod h1:pBbZyGwC5i16IBkjVKoy/sznA8jPD/K9iedwe1ESE6w=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/nxadm/tail v1.4.4/go.mod h1:kenIhsEOeOJmVchQTgglprH7qJGnHDVpk1VPCcaMI8A=\ngithub.com/nxadm/tail v1.4.8/go.mod h1:+ncqLTQzXmGhMZNUePPaPqPvBxHAIsmXswZKocGu+AU=\ngithub.com/nxadm/tail v1.4.11 h1:8feyoE3OzPrcshW5/MJ4sGESc5cqmGkGCWlco4l0bqY=\ngithub.com/nxadm/tail v1.4.11/go.mod h1:OTaG3NK980DZzxbRq6lEuzgU+mug70nY11sMd4JXXHc=\ngithub.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.12.1/go.mod h1:zj2OWP4+oCPe1qIXoGWkgMRwljMUYCdkwsT2108oapk=\ngithub.com/onsi/ginkgo v1.16.4/go.mod h1:dX+/inL/fNMqNlz0e9LfyB9TswhZpCVdJM/Z6Vvnwo0=\ngithub.com/onsi/ginkgo v1.16.5 h1:8xi0RTUf59SOSfEtZMvwTvXYMzG4gV23XVHOZiXNtnE=\ngithub.com/onsi/ginkgo v1.16.5/go.mod h1:+E8gABHa3K6zRBolWtd+ROzc/U5bkGt0FwiG042wbpU=\ngithub.com/onsi/ginkgo/v2 v2.1.3/go.mod h1:vw5CSIxN1JObi/U8gcbwft7ZxR2dgaR70JSE3/PpL4c=\ngithub.com/onsi/ginkgo/v2 v2.20.2 h1:7NVCeyIWROIAheY21RLS+3j2bb52W0W82tkberYytp4=\ngithub.com/onsi/ginkgo/v2 v2.20.2/go.mod h1:K9gyxPIlb+aIvnZ8bd9Ak+YP18w3APlR+5coaZoE2ag=\ngithub.com/onsi/gomega v1.7.1/go.mod h1:XdKZgCCFLUoM/7CFJVPcG8C1xQ1AJ0vpAezJrB7JYyY=\ngithub.com/onsi/gomega v1.10.1/go.mod h1:iN09h71vgCQne3DLsj+A5owkum+a2tYe+TOCB1ybHNo=\ngithub.com/onsi/gomega v1.17.0/go.mod h1:HnhC7FXeEQY45zxNK3PPoIUhzk/80Xly9PcubAlGdZY=\ngithub.com/onsi/gomega v1.19.0/go.mod h1:LY+I3pBVzYsTBU1AnDwOSxaYi9WoWiqgwooUqq9yPro=\ngithub.com/onsi/gomega v1.34.1 h1:EUMJIKUjM8sKjYbtxQI9A4z2o+rruxnzNvpknOXie6k=\ngithub.com/onsi/gomega v1.34.1/go.mod h1:kU1QgUvBDLXBJq618Xvm2LUX6rSAfRaFRTcdOeDLwwY=\ngithub.com/oschwald/geoip2-golang v1.11.0 h1:hNENhCn1Uyzhf9PTmquXENiWS6AlxAEnBII6r8krA3w=\ngithub.com/oschwald/geoip2-golang v1.11.0/go.mod h1:P9zG+54KPEFOliZ29i7SeYZ/GM6tfEL+rgSn03hYuUo=\ngithub.com/oschwald/maxminddb-golang v1.13.1 h1:G3wwjdN9JmIK2o/ermkHM+98oX5fS+k5MbwsmL4MRQE=\ngithub.com/oschwald/maxminddb-golang v1.13.1/go.mod h1:K4pgV9N/GcK694KSTmVSDTODk4IsCNThNdTmnaBZ/F8=\ngithub.com/pierrec/lz4/v4 v4.1.22 h1:cKFw6uJDK+/gfw5BcDL0JL5aBsAFdsIT18eRtLj7VIU=\ngithub.com/pierrec/lz4/v4 v4.1.22/go.mod h1:gZWDp/Ze/IJXGXf23ltt2EXimqmTUXEy0GFuRQyBid4=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/posener/complete v1.2.3 h1:NP0eAhjcjImqslEwo/1hq7gpajME0fTLTezBKDqfXqo=\ngithub.com/posener/complete v1.2.3/go.mod h1:WZIdtGGp+qx0sLrYKtIRAruyNpv6hFCicSgv7Sy7s/s=\ngithub.com/power-devops/perfstat v0.0.0-20240221224432-82ca36839d55 h1:o4JXh1EVt9k/+g42oCprj/FisM4qX9L3sZB3upGN2ZU=\ngithub.com/power-devops/perfstat v0.0.0-20240221224432-82ca36839d55/go.mod h1:OmDBASR4679mdNQnz2pUhc2G8CO2JrUAVFDRBDP/hJE=\ngithub.com/prashantv/gostub v1.1.0 h1:BTyx3RfQjRHnUWaGF9oQos79AlQ5k8WNktv7VGvVH4g=\ngithub.com/prashantv/gostub v1.1.0/go.mod h1:A5zLQHz7ieHGG7is6LLXLz7I8+3LZzsrV0P1IAHhP5U=\ngithub.com/prometheus/client_golang v1.20.5 h1:cxppBPuYhUnsO6yo/aoRol4L7q7UFfdm+bR9r+8l63Y=\ngithub.com/prometheus/client_golang v1.20.5/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=\ngithub.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=\ngithub.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=\ngithub.com/prometheus/common v0.60.0 h1:+V9PAREWNvJMAuJ1x1BaWl9dewMW4YrHZQbx0sJNllA=\ngithub.com/prometheus/common v0.60.0/go.mod h1:h0LYf1R1deLSKtD4Vdg8gy4RuOvENW2J/h19V5NADQw=\ngithub.com/prometheus/procfs v0.15.1 h1:YagwOFzUgYfKKHX6Dr+sHT7km/hxC76UB0learggepc=\ngithub.com/prometheus/procfs v0.15.1/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=\ngithub.com/puzpuzpuz/xsync/v3 v3.4.0 h1:DuVBAdXuGFHv8adVXjWWZ63pJq+NRXOWVXlKDBZ+mJ4=\ngithub.com/puzpuzpuz/xsync/v3 v3.4.0/go.mod h1:VjzYrABPabuM4KyBh1Ftq6u8nhwY5tBPKP9jpmh0nnA=\ngithub.com/quic-go/quic-go v0.48.2 h1:wsKXZPeGWpMpCGSWqOcqpW2wZYic/8T3aqiOID0/KWE=\ngithub.com/quic-go/quic-go v0.48.2/go.mod h1:yBgs3rWBOADpga7F+jJsb6Ybg1LSYiQvwWlLX+/6HMs=\ngithub.com/rabbitmq/amqp091-go v1.10.0 h1:STpn5XsHlHGcecLmMFCtg7mqq0RnD+zFr4uzukfVhBw=\ngithub.com/rabbitmq/amqp091-go v1.10.0/go.mod h1:Hy4jKW5kQART1u+JkDTF9YYOQUHXqMuhrgxOEeS7G4o=\ngithub.com/rcrowley/go-metrics v0.0.0-20201227073835-cf1acfcdf475 h1:N/ElC8H3+5XpJzTSTfLsJV/mx9Q9g7kxmchpfZyxgzM=\ngithub.com/rcrowley/go-metrics v0.0.0-20201227073835-cf1acfcdf475/go.mod h1:bCqnVzQkZxMG4s8nGwiZ5l3QUCyqpo9Y+/ZMZ9VjZe4=\ngithub.com/riywo/loginshell v0.0.0-20200815045211-7d26008be1ab h1:ZjX6I48eZSFetPb41dHudEyVr5v953N15TsNZXlkcWY=\ngithub.com/riywo/loginshell v0.0.0-20200815045211-7d26008be1ab/go.mod h1:/PfPXh0EntGc3QAAyUaviy4S9tzy4Zp0e2ilq4voC6E=\ngithub.com/rogpeppe/go-internal v1.10.0 h1:TMyTOH3F/DB16zRVcYyreMH6GnZZrwQVAoYjRBZyWFQ=\ngithub.com/rogpeppe/go-internal v1.10.0/go.mod h1:UQnix2H7Ngw/k4C5ijL5+65zddjncjaFoBhdsK/akog=\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sclevine/spec v1.4.0 h1:z/Q9idDcay5m5irkZ28M7PtQM4aOISzOpj4bUPkDee8=\ngithub.com/sclevine/spec v1.4.0/go.mod h1:LvpgJaFyvQzRvc1kaDs0bulYwzC70PbiYjC4QnFHkOM=\ngithub.com/shirou/gopsutil/v4 v4.24.12 h1:qvePBOk20e0IKA1QXrIIU+jmk+zEiYVVx06WjBRlZo4=\ngithub.com/shirou/gopsutil/v4 v4.24.12/go.mod h1:DCtMPAad2XceTeIAbGyVfycbYQNBGk2P8cvDi7/VN9o=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2 h1:xuMeJ0Sdp5ZMRXx/aWO6RZxdr3beISkG5/G/aIRr3pY=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.2/go.mod h1:R6va5+xMeoiuVRoj+gSkQ7d3FALtqAAGI1FQKckRals=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/syncthing/notify v0.0.0-20210616190510-c6b7342338d2 h1:F4snRP//nIuTTW9LYEzVH4HVwDG9T3M4t8y/2nqMbiY=\ngithub.com/syncthing/notify v0.0.0-20210616190510-c6b7342338d2/go.mod h1:J0q59IWjLtpRIJulohwqEZvjzwOfTEPp8SVhDJl+y0Y=\ngithub.com/syndtr/goleveldb v1.0.1-0.20220721030215-126854af5e6d h1:vfofYNRScrDdvS342BElfbETmL1Aiz3i2t0zfRj16Hs=\ngithub.com/syndtr/goleveldb v1.0.1-0.20220721030215-126854af5e6d/go.mod h1:RRCYJbIwD5jmqPI9XoAFR0OcDxqUctll6zUj/+B4S48=\ngithub.com/thejerf/suture/v4 v4.0.6 h1:QsuCEsCqb03xF9tPAsWAj8QOAJBgQI1c0VqJNaingg8=\ngithub.com/thejerf/suture/v4 v4.0.6/go.mod h1:gu9Y4dXNUWFrByqRt30Rm9/UZ0wzRSt9AJS6xu/ZGxU=\ngithub.com/tklauser/go-sysconf v0.3.14 h1:g5vzr9iPFFz24v2KZXs/pvpvh8/V9Fw6vQK5ZZb78yU=\ngithub.com/tklauser/go-sysconf v0.3.14/go.mod h1:1ym4lWMLUOhuBOPGtRcJm7tEGX4SCYNEEEtghGG/8uY=\ngithub.com/tklauser/numcpus v0.9.0 h1:lmyCHtANi8aRUgkckBgoDk1nHCux3n2cgkJLXdQGPDo=\ngithub.com/tklauser/numcpus v0.9.0/go.mod h1:SN6Nq1O3VychhC1npsWostA+oW+VOQTxZrS604NSRyI=\ngithub.com/urfave/cli v1.20.0/go.mod h1:70zkFmudgCuE/ngEzBv17Jvp/497gISqfk5gWijbERA=\ngithub.com/urfave/cli v1.22.16 h1:MH0k6uJxdwdeWQTwhSO42Pwr4YLrNLwBtg1MRgTqPdQ=\ngithub.com/urfave/cli v1.22.16/go.mod h1:EeJR6BKodywf4zciqrdw6hpCPk68JO9z5LazXZMn5Po=\ngithub.com/vitrun/qart v0.0.0-20160531060029-bf64b92db6b0 h1:okhMind4q9H1OxF44gNegWkiP4H/gsTFLalHFa4OOUI=\ngithub.com/vitrun/qart v0.0.0-20160531060029-bf64b92db6b0/go.mod h1:TTbGUfE+cXXceWtbTHq6lqcTvYPBKLNejBEbnUsQJtU=\ngithub.com/willabides/kongplete v0.4.0 h1:eivXxkp5ud5+4+NVN9e4goxC5mSh3n1RHov+gsblM2g=\ngithub.com/willabides/kongplete v0.4.0/go.mod h1:0P0jtWD9aTsqPSUAl4de35DLghrr57XcayPyvqSi2X8=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngithub.com/yusufpapurcu/wmi v1.2.4 h1:zFUKzehAFReQwLys1b/iSMl+JQGSCSjtVqQn9bBrPo0=\ngithub.com/yusufpapurcu/wmi v1.2.4/go.mod h1:SBZ9tNy3G9/m5Oi98Zks0QjeHVDvuK0qfxQmPyzfmi0=\ngo.uber.org/automaxprocs v1.6.0 h1:O3y2/QNTOdbF+e/dpXNNW7Rx2hZ4sTIPyybbxyNqTUs=\ngo.uber.org/automaxprocs v1.6.0/go.mod h1:ifeIMSnPZuznNm6jmdzmU3/bfk01Fe2fotchwEFJ8r8=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\ngo.uber.org/mock v0.4.0 h1:VcM4ZOtdbR4f6VXfiOpwpVJDL6lCReaZ6mw31wqh7KU=\ngo.uber.org/mock v0.4.0/go.mod h1:a6FSlNadKUHUa9IP5Vyt1zh4fC7uAwxMutEAscFbkZc=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.6.0/go.mod h1:OFC/31mSvZgRz0V1QTNCzfAI1aIRzbiufJtkMIlEp58=\ngolang.org/x/crypto v0.13.0/go.mod h1:y6Z2r+Rw4iayiXXAIxJIDAJ1zMW4yaTpebo8fPOliYc=\ngolang.org/x/crypto v0.19.0/go.mod h1:Iy9bg/ha4yyC70EfRS8jz+B6ybOBKMaSxLj6P6oBDfU=\ngolang.org/x/crypto v0.23.0/go.mod h1:CKFgDieR+mRhux2Lsu27y0fO304Db0wZe70UKqHu0v8=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20241009180824-f66d83c29e7c h1:7dEasQXItcW1xKJ2+gg5VOiBnqWrJc+rq0DPKyvvdbY=\ngolang.org/x/exp v0.0.0-20241009180824-f66d83c29e7c/go.mod h1:NQtJDoLvd6faHhE7m4T/1IY708gDefGGjR/iUW8yQQ8=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.12.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.15.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/mod v0.17.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/mod v0.22.0 h1:D4nJWe9zXqHOmWqj4VMOJhvzj7bEZg4wEYa759z1pH4=\ngolang.org/x/mod v0.22.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200114155413-6afb5195e5aa/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200520004742-59133d7f0dd7/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210428140749-89ef3d95e781/go.mod h1:OJAsFXCWl8Ukc7SiCT/9KSuxbyM7479/AVlXFRxuMCk=\ngolang.org/x/net v0.0.0-20220225172249-27dd8689420f/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\ngolang.org/x/net v0.0.0-20220607020251-c690dde0001d/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.7.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=\ngolang.org/x/net v0.15.0/go.mod h1:idbUs1IY1+zTqbi8yxTbhexhEEk5ur9LInksu6HrEpk=\ngolang.org/x/net v0.21.0/go.mod h1:bIjVDfnllIU7BJ2DNgfnXvpSvtn8VRwhlsaeUTyUS44=\ngolang.org/x/net v0.25.0/go.mod h1:JkAGAh7GEvH74S6FOH42FLoXpXbE/aqXSrIQjXgsiwM=\ngolang.org/x/net v0.33.0 h1:74SYHlV8BIgHIFC/LrYkOGIwL19eTYXQ5wc6TBuO36I=\ngolang.org/x/net v0.33.0/go.mod h1:HXLR5J+9DxmrqMwG9qjGCxZ+zKXxBru04zlTvWlWuN4=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.3.0/go.mod h1:FU7BRWz2tNW+3quACPkgCx/L+uEAv1htQ0V83Z9Rj+Y=\ngolang.org/x/sync v0.6.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sync v0.7.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180926160741-c2ed4eda69e7/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190904154756-749cb33beabd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190916202348-b4ddaad3f8a3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191005200804-aed5e4c7ecf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191120155948-bd437916bb0e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201204225414-ed752295db88/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210112080510-489259a85091/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220412211240-33da011f77ad/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220908164124-27713097b956/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.12.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.20.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/telemetry v0.0.0-20240228155512-f48c80bd79b2/go.mod h1:TeRTkGYfJXctD9OcfyVLyj2J3IxLnKwHJR8f4D8a3YE=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=\ngolang.org/x/term v0.12.0/go.mod h1:owVbMEjm3cBLCHdkQu9b1opXd4ETQWc3BhuQGKgXgvU=\ngolang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=\ngolang.org/x/term v0.20.0/go.mod h1:8UkIAJTvZgivsXaD6/pH6U9ecQzZ45awqEOzuCvwpFY=\ngolang.org/x/term v0.27.0/go.mod h1:iMsnZpn0cago0GOrHO2+Y7u7JPn5AylBrcoWkElMTSM=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.13.0/go.mod h1:TvPlkZtksWOMsz7fbANvkp4WM8x/WCo/om8BMLbz+aE=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/text v0.15.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.8.0 h1:9i3RxcPv3PZnitoVGMPDKZSq1xW1gK1Xy3ArNOGZfEg=\ngolang.org/x/time v0.8.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20201224043029-2b0845dc783e/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/tools v0.13.0/go.mod h1:HvlwmtVNQAhOuCjW7xxvovg8wbNq7LwfXh/k7wXUl58=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d/go.mod h1:aiJjzUbINMkxbQROHiO6hDPo2LHcIPhhQsa9DLh0yGk=\ngolang.org/x/tools v0.28.0 h1:WuB6qZ4RPCQo5aP3WdKZS7i595EdWqWR8vqJTlwTVK8=\ngolang.org/x/tools v0.28.0/go.mod h1:dcIOrVd3mfQKTgrDVQHqCPMWy6lnhfhtX3hLXYVLfRw=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20220517211312-f3a8303e98df/go.mod h1:K8+ghG5WaK9qNqU5K3HdILfMLy1f3aNYFI/wnl100a8=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.36.1 h1:yBPeRvTftaleIgM3PZ/WBIZ7XM/eEYAaEyCwvyjq/gk=\ngoogle.golang.org/protobuf v1.36.1/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nsigs.k8s.io/yaml v1.4.0 h1:Mk1wCc2gy/F0THH0TAp1QYyJNzRm2KCLy3o5ASXVI5E=\nsigs.k8s.io/yaml v1.4.0/go.mod h1:Ejl7/uTz7PSA4eKMyQCUTnhZYNmLIl+5c2lQPGR2BPY=\n"
        },
        {
          "name": "gui",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "meta",
          "type": "tree",
          "content": null
        },
        {
          "name": "next-gen-gui",
          "type": "tree",
          "content": null
        },
        {
          "name": "proto",
          "type": "tree",
          "content": null
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools.go",
          "type": "blob",
          "size": 0.369140625,
          "content": "// This file is never built. It serves to establish dependencies on tools\n// used by go generate and build.go. See\n// https://github.com/golang/go/wiki/Modules#how-can-i-track-tool-dependencies-for-a-module\n\n//go:build tools\n// +build tools\n\npackage tools\n\nimport (\n\t_ \"github.com/calmh/xdr\"\n\t_ \"github.com/maxbrunsfeld/counterfeiter/v6\"\n\t_ \"golang.org/x/tools/cmd/goimports\"\n)\n"
        }
      ]
    }
  ]
}