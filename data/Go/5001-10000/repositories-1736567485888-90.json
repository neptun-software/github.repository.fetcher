{
  "metadata": {
    "timestamp": 1736567485888,
    "page": 90,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "moby/buildkit",
      "stars": 8378,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.015625,
          "content": "bin\n.certs\n.tmp\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2041015625,
          "content": "# BuildKit project generated files to ignore\n#  if you want to ignore files created by your editor/tools,\n#  please consider a global .gitignore https://help.github.com/articles/ignoring-files\nbin\n.certs\n.tmp\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 3.984375,
          "content": "run:\n  timeout: 30m\n  modules-download-mode: vendor\n  # default uses Go version from the go.mod file, fallback on the env var\n  # `GOVERSION`, fallback on 1.17: https://golangci-lint.run/usage/configuration/#run-configuration\n  go: \"1.23\"\n\nlinters:\n  enable:\n    - bodyclose\n    - depguard\n    - errname\n    - forbidigo\n    - gocritic\n    - gofmt\n    - goimports\n    - gosec\n    - gosimple\n    - govet\n    - importas\n    - ineffassign\n    - makezero\n    - misspell\n    - noctx\n    - nolintlint\n    - revive\n    - staticcheck\n    - testifylint\n    - typecheck\n    - unused\n    - whitespace\n  disable-all: true\n\nlinters-settings:\n  staticcheck:\n    checks:\n      - \"all\"\n  gocritic:\n    disabled-checks:\n      - \"ifElseChain\"\n      - \"assignOp\"\n      - \"appendAssign\"\n      - \"singleCaseSwitch\"\n  govet:\n    enable:\n      - nilness\n      - unusedwrite\n  # enable-all: true\n  # disable:\n  #   - fieldalignment\n  #   - shadow\n  depguard:\n    rules:\n      main:\n        deny:\n          - pkg: \"github.com/containerd/containerd/errdefs\"\n            desc: The containerd errdefs package was migrated to a separate module. Use github.com/containerd/errdefs instead.\n          - pkg: \"github.com/containerd/containerd/log\"\n            desc: The containerd log package was migrated to a separate module. Use github.com/containerd/log instead.\n          - pkg: \"github.com/containerd/containerd/pkg/userns\"\n            desc: Use github.com/moby/sys/userns instead.\n          - pkg: \"github.com/containerd/containerd/platforms\"\n            desc: The containerd platforms package was migrated to a separate module. Use github.com/containerd/platforms instead.\n          - pkg: \"github.com/containerd/nydus-snapshotter/pkg/errdefs\"\n            desc: You probably meant to use github.com/containerd/errdefs\n          - pkg: \"github.com/opencontainers/runc/libcontainer/userns\"\n            desc: Use github.com/moby/sys/userns instead.\n          - pkg: \"io/ioutil\"\n            desc: The io/ioutil package has been deprecated.\n  forbidigo:\n    forbid:\n      - '^context\\.WithCancel(# use context\\.WithCancelCause instead)?$'\n      - '^context\\.WithDeadline(# use context\\.WithDeadline instead)?$'\n      - '^context\\.WithTimeout(# use context\\.WithTimeoutCause instead)?$'\n      - '^ctx\\.Err(# use context\\.Cause instead)?$'\n      - '^fmt\\.Errorf(# use errors\\.Errorf instead)?$'\n      - '^logrus\\.(Trace|Debug|Info|Warn|Warning|Error|Fatal)(f|ln)?(# use bklog\\.G or bklog\\.L instead of logrus directly)?$'\n      - '^platforms\\.DefaultString(# use platforms\\.Format(platforms\\.DefaultSpec()) instead\\. Be aware that DefaultSpec is for the local platform, so must be avoided when working cross-platform)?$'\n  importas:\n    alias:\n      # Enforce alias to prevent it accidentally being used instead of our\n      # own errdefs package (or vice-versa).\n      - pkg: \"github.com/containerd/errdefs\"\n        alias: \"cerrdefs\"\n      - pkg: \"github.com/opencontainers/image-spec/specs-go/v1\"\n        alias: \"ocispecs\"\n      - pkg: \"github.com/opencontainers/go-digest\"\n        alias: \"digest\"\n\n    # Do not allow unaliased imports of aliased packages.\n    no-unaliased: true\n  gosec:\n    excludes:\n      - G101  # Potential hardcoded credentials (false positives)\n      - G402  # TLS MinVersion too low\n      - G504  # Import blocklist: net/http/cgi\n      - G601  # Implicit memory aliasing in for loop (false positives)\n      - G115  # integer overflow conversion (TODO: verify these)\n    config:\n      G306: \"0644\"\n  testifylint:\n    disable:\n      # disable rules that reduce the test condition\n      - \"empty\"\n      - \"bool-compare\"\n      - \"len\"\n      - \"negative-positive\"\n\nissues:\n  exclude-files:\n    - \".*\\\\.pb\\\\.go$\"\n  exclude-rules:\n    - linters:\n        - revive\n      text: \"stutters\"\n    - linters:\n        - revive\n      text: \"empty-block\"\n    - linters:\n        - revive\n      text: \"superfluous-else\"\n    - linters:\n        - revive\n      text: \"unused-parameter\"\n    - linters:\n        - revive\n      text: \"redefines-builtin-id\"\n    - linters:\n        - revive\n      text: \"if-return\"\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 3.4736328125,
          "content": "# Generate AUTHORS: scripts/generate-authors.sh\n\n# Tip for finding duplicates (besides scanning the output of AUTHORS for name\n# duplicates that aren't also email duplicates): scan the output of:\n#   git log --format='%aE - %aN' | sort -uf\n#\n# For explanation on this file format: man git-shortlog\n\nAaron L. Xu <likexu@harmonycloud.cn>\nAhmon Dancy <adancy@wikimedia.org>\nAhmon Dancy <adancy@wikimedia.org> <dancy@dancysoft.com>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp> <suda.kyoto@gmail.com>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp> <suda.akihiro@lab.ntt.co.jp>\nAlex Couture-Beil <alex@earthly.dev>\nAlex Couture-Beil <alex@earthly.dev> <alex@mofo.ca>\nAllen Sun <allen.sun@daocloud.io>\nAndrey Smirnov <smirnov.andrey@gmail.com>\nAndrey Smirnov <smirnov.andrey@gmail.com> <andrey.smirnov@talos-systems.com>\nBin Liu <liubin0329@gmail.com>\nCrazyMax <github@crazymax.dev>\nCrazyMax <github@crazymax.dev> <1951866+crazy-max@users.noreply.github.com>\nCrazyMax <github@crazymax.dev> <crazy-max@users.noreply.github.com>\nDaniel Nephin <dnephin@gmail.com>\nDaniel Nephin <dnephin@gmail.com> <dnephin@docker.com>\nDavid Gageot <david.gageot@docker.com>\nDavid Gageot <david.gageot@docker.com> <david.gageot@doctolib.com>\nDavid Karlsson <david.karlsson@docker.com>\nDavid Karlsson <david.karlsson@docker.com> <35727626+dvdksn@users.noreply.github.com>\nDerek McGowan <derek@mcg.dev>\nDerek McGowan <derek@mcg.dev> <derek@mcgstyle.net>\nEdgar Lee <edgarhinshunlee@gmail.com>\nEdgar Lee <edgarhinshunlee@gmail.com> <edgarl@netflix.com>\nFernando Miguel <github@FernandoMiguel.net>\nFernando Miguel <github@FernandoMiguel.net> <FernandoMiguel@users.noreply.github.com>\nGabriel-Adrian Samfira <samfiragabriel@gmail.com>\nGabriel-Adrian Samfira <samfiragabriel@gmail.com> <gsamfira@cloudbasesolutions.com>\nGuilhem Charles <guilhem.charles@gmail.com>\nHelen Xie <chenjg@harmonycloud.cn>\nHimanshu Pandey <hpandey@pivotal.io>\nHiromu Nakamura <abctail30@gmail.com>\nJessica Frazelle <acidburn@microsoft.com>\nJessica Frazelle <acidburn@microsoft.com> <acidburn@docker.com>\nIgnas Mikalajūnas <ignas@devzero.io>\nIgnas Mikalajūnas <ignas@devzero.io> <ignas@pow.lt>\nKohei Tokunaga <ktokunaga.mail@gmail.com>\nKohei Tokunaga <ktokunaga.mail@gmail.com> <43872416+ktock@users.noreply.github.com>\nNatasha Jarus <linuxmercedes@gmail.com>\nNick Santos <nick.santos@docker.com>\nNick Santos <nick.santos@docker.com> <nicholas.j.santos@gmail.com>\nNick Santos <nick.santos@docker.com> <nick@tilt.dev>\nSebastiaan van Stijn <github@gone.nl>\nSebastiaan van Stijn <github@gone.nl> <thaJeztah@users.noreply.github.com>\nTalon Bowler <talon.bowler@docker.com>\nTalon Bowler <talon.bowler@docker.com> <nolat301@gmail.com>\nTibor Vass <tibor@docker.com>\nTibor Vass <tibor@docker.com> <tiborvass@users.noreply.github.com>\nTibor Vass <tibor@docker.com> <teabee89@gmail.com>\nShaun Thompson <shaun.thompson@docker.com>\nShaun Thompson <shaun.thompson@docker.com> <shaun.b.thompson@gmail.com>\nTomohiro Kusumoto <zabio1192@gmail.com>\nTõnis Tiigi <tonistiigi@gmail.com>\nVictor Vieux <victorvieux@gmail.com>\nVictor Vieux <victorvieux@gmail.com> <vieux@docker.com>\nVincent Demeester <vincent.demeester@docker.com>\nVincent Demeester <vincent.demeester@docker.com> <vincent@sbr.pm>\nVlad A. Ionescu <vladaionescu@users.noreply.github.com>\nVlad A. Ionescu <vladaionescu@users.noreply.github.com> <446771+vladaionescu@users.noreply.github.com>\nZiv Tsarfati <digger18@gmail.com>\nZiv Tsarfati <digger18@gmail.com> <digger18@users.noreply.github.com>\n郑泽宇 <perhapszzy@sina.com>\n"
        },
        {
          "name": ".protolint.yaml",
          "type": "blob",
          "size": 0.423828125,
          "content": "lint:\n  directories:\n    exclude:\n      - vendor\n\n  rules:\n    no_default: true\n\n    add:\n      # syntax\n      - INDENT\n      - SYNTAX_CONSISTENT\n      - QUOTE_CONSISTENT\n\n      # ordering\n      - IMPORTS_SORTED\n\n      # naming\n      - PACKAGE_NAME_LOWER_CASE\n      - RPC_NAMES_UPPER_CAMEL_CASE\n      - RPC_NAMES_CASE\n      - SERVICE_NAMES_UPPER_CAMEL_CASE\n\n  rules_option:\n    indent:\n      style: tab\n      not_insert_newline: true\n"
        },
        {
          "name": ".yamllint.yml",
          "type": "blob",
          "size": 0.1474609375,
          "content": "ignore: |\n  /vendor\n\nextends: default\n\nyaml-files:\n  - '*.yaml'\n  - '*.yml'\n\nrules:\n  truthy: disable\n  line-length: disable\n  document-start: disable\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 12.9697265625,
          "content": "# This file lists all individuals having contributed content to the repository.\n# For how it is generated, see hack/dockerfiles/authors.Dockerfile.\n\na-palchikov <deemok@gmail.com>\nAaron L. Xu <likexu@harmonycloud.cn>\nAaron Lehmann <aaron.lehmann@docker.com>\nAaron Lehmann <alehmann@netflix.com>\nAbdur Rehman <abdur_rehman@mentor.com>\nadamperlin <adamp@nanosoft.com>\nAddam Hardy <addam.hardy@gmail.com>\nAdrian Plata <adrian.plata@docker.com>\nAdrien Delorme <azr@users.noreply.github.com>\nAhmon Dancy <adancy@wikimedia.org>\nAidan Hobson Sayers <aidanhs@cantab.net>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp>\nAlan Fregtman <941331+darkvertex@users.noreply.github.com>\nAlano Terblanche <18033717+Benehiko@users.noreply.github.com>\nAleksa Sarai <cyphar@cyphar.com>\nAlex Couture-Beil <alex@earthly.dev>\nAlex Mayer <amayer5125@gmail.com>\nAlex Suraci <suraci.alex@gmail.com>\nAlexander Morozov <lk4d4@docker.com>\nAlexis Murzeau <amubtdx@gmail.com>\nAlice Frosi <afrosi@de.ibm.com>\nAllen Sun <allen.sun@daocloud.io>\nAmen Belayneh <amenbelayneh@gmail.com>\nAnca Iordache <anca.iordache@docker.com>\nAnda Xu <anda.xu@docker.com>\nAnders F Björklund <anders.f.bjorklund@gmail.com>\nAndrea Bolognani <abologna@redhat.com>\nAndrea Luzzardi <aluzzardi@gmail.com>\nAndrew Chang <chang331006@gmail.com>\nAndrey Smirnov <smirnov.andrey@gmail.com>\nAndy Alt <andy5995@users.noreply.github.com>\nAndy Caldwell <andrew.caldwell@metaswitch.com>\nAnkush Agarwal <ankushagarwal11@gmail.com>\nAnthony Nandaa <profnandaa@gmail.com>\nAnthony Sottile <asottile@umich.edu>\nAnurag Goel <anurag@render.com>\nAnusha Ragunathan <anusha@docker.com>\nArkadiusz Drabczyk <arkadiusz@drabczyk.org>\nArnaldo Garcia Rincon <agarrcia@amazon.com>\nArnaud Bailly <arnaud.oqube@gmail.com>\nArtem Khramov <akhramov@pm.me>\nAustin Vazquez <macedonv@amazon.com>\nAvi Deitcher <avi@deitcher.net>\nBastiaan Bakker <bbakker@xebia.com>\nBen Longo <benlongo9807@gmail.com>\nBertrand Paquet <bertrand.paquet@gmail.com>\nBilly Owire <billyowire@microsoft.com>\nBin Liu <liubin0329@gmail.com>\nBjorn Neergaard <bjorn.neergaard@docker.com>\nBrandon Mitchell <git@bmitch.net>\nBrennan Kinney <5098581+polarathene@users.noreply.github.com>\nBrian Goff <cpuguy83@gmail.com>\nBunyamin Dokmetas <19335284+ztzxt@users.noreply.github.com>\nBurt Holzman <burt@fnal.gov>\nCe Gao <ce.gao@outlook.com>\nChaerim Yeo <yeochaerim@gmail.com>\nChangwei Ge <gechangwei@bytedance.com>\nChanhun Jeong <chanhun.jeong@navercorp.com>\nChaosGramer <ChaosGramer@users.noreply.github.com>\nCharles Chan <charleswhchan@users.noreply.github.com>\nCharles Korn <me@charleskorn.com>\nCharles Law <claw@conduce.com>\nChenbin <chen.bin11@zte.com.cn>\nChris Goller <goller@gmail.com>\nChris McKinnel <chrismckinnel@gmail.com>\nChristian Höltje <docwhat@gerf.org>\nChristian Weichel <chris@gitpod.io>\nCiro S. Costa <cscosta@pivotal.io>\nClaudiu Belu <cbelu@cloudbasesolutions.com>\nColin Chartier <colin.n.chartier@gmail.com>\nCorey Larson <corey@earthly.dev>\nCory Bennett <cbennett@netflix.com>\nCory Snider <csnider@mirantis.com>\ncoryb <cbennett@netflix.com>\nCraig Andrews <candrews@integralblue.com>\nCrazyMax <github@crazymax.dev>\nCsaba Apagyi <csaba.apagyi@gmail.com>\ncuiyourong <cuiyourong@gmail.com>\nDan Duvall <dduvall@wikimedia.org>\nDaniel Cassidy <mail@danielcassidy.me.uk>\nDaniel Nephin <dnephin@gmail.com>\nDarren Shepherd <darren@rancher.com>\nDave Chen <dave.chen@arm.com>\nDave Henderson <dhenderson@gmail.com>\nDave Tucker <dt@docker.com>\nDavid Calavera <david.calavera@gmail.com>\nDavid Dooling <dooling@gmail.com>\nDavid Gageot <david.gageot@docker.com>\nDavid Karlsson <david.karlsson@docker.com>\nDavis Schirmer <djds@bghost.xyz>\nDebosmit Ray <dray92@uw.edu>\nDennis Chen <dennis.chen@arm.com>\nDennis Haney <davh@davh.dk>\ndependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\nDerek McGowan <derek@mcg.dev>\nDharmit Shah <shahdharmit@gmail.com>\nDing Fei <dingfei@stars.org.cn>\ndito <itodaisuke00@gmail.com>\nDoug Davis <dug@us.ibm.com>\nEdgar Lee <edgarhinshunlee@gmail.com>\nEli Uriegas <eli.uriegas@docker.com>\nElias Faxö <elias.faxo@tre.se>\nEng Zer Jun <engzerjun@gmail.com>\nEric Engestrom <eric@engestrom.ch>\nErik McKelvey <Erik.McKelvey.is@gmail.com>\nErik Sipsma <erik@sipsma.dev>\neyherabh <hugogabriel.eyherabide@gmail.com>\nf0 <f0@users.noreply.github.com>\nfanjiyun.fjy <fanjiyun.fjy@alibaba-inc.com>\nFelix Fontein <felix@fontein.de>\nFernando Miguel <github@FernandoMiguel.net>\nFiona Klute <fiona.klute@gmx.de>\nFoysal Iqbal <foysal.iqbal.fb@gmail.com>\nFrank Villaro-Dixon <frank.villarodixon@merkle.com>\nfrankyang <yyb196@gmail.com>\nFred Cox <mcfedr@gmail.com>\nFrieder Bluemle <frieder.bluemle@gmail.com>\nFélix Mattrat <felix@dysosmus.net>\nGabriel-Adrian Samfira <samfiragabriel@gmail.com>\nGaetan de Villele <gdevillele@gmail.com>\nGahl Saraf <saraf.gahl@gmail.com>\ngenglu.gl <luzigeng32@163.com>\nGeorge <george@betterde.com>\nggjulio <juligonz@student.42.fr>\nGovind Rai <raigovind93@gmail.com>\nGrant Reaber <grant.reaber@gmail.com>\nGrégoire Payen de La Garanderie <gregoire.payen.de.la.garanderie@intel.com>\nguangwu <guoguangwu@magic-shield.com>\nGuilhem Charles <guilhem.charles@gmail.com>\nguoguangwu <guoguangwug@gmail.com>\nHans van den Bogert <hansbogert@gmail.com>\nHao Hu <hao.hu.fr@gmail.com>\nHector S <hfsam88@gmail.com>\nHelen Xie <chenjg@harmonycloud.cn>\nHimanshu Pandey <hpandey@pivotal.io>\nHiromu Nakamura <abctail30@gmail.com>\nHowJMay <vulxj0j8j8@gmail.com>\nHugo Santos <hugo@namespacelabs.com>\nHöhl, Lukas <lukas.hoehl@accso.de>\nIan Campbell <ijc@docker.com>\nIan King'ori <kingorim.ian@gmail.com>\nIgnas Mikalajūnas <ignas@devzero.io>\nIlya Dmitrichenko <errordeveloper@gmail.com>\nIskander (Alex) Sharipov <quasilyte@gmail.com>\nJacob Gillespie <jacobwgillespie@gmail.com>\nJacob MacElroy <jacob@okteto.com>\nJakub Ciolek <jakub@ciolek.dev>\nJames Carnegie <james.carnegie@docker.com>\nJean-Pierre Huynh <jean-pierre.huynh@ounet.fr>\nJeffrey Huang <jeffreyhuang23@gmail.com>\nJesper Noordsij <jesper@sslleiden.nl>\nJesse Rittner <rittneje@gmail.com>\nJessica Frazelle <acidburn@microsoft.com>\njgeiger <jgeiger@gmail.com>\nJitender Kumar <jitender.kumar@intel.com>\njlecordier <jeanlecordier@hotmail.fr>\njoey <zchengjoey@gmail.com>\nJohn Howard <jhoward@microsoft.com>\nJohn Maguire <jmaguire@duosecurity.com>\nJohn Mulhausen <john@docker.com>\nJohn Tims <john.k.tims@gmail.com>\nJon Zeolla <zeolla@gmail.com>\nJonathan A. Sternberg <jonathan.sternberg@docker.com>\nJonathan Azoff <azoff@users.noreply.github.com>\nJonathan Giannuzzi <jonathan@giannuzzi.me>\nJonathan Stoppani <jonathan.stoppani@divio.com>\nJonny Stoten <jonny.stoten@docker.com>\nJordanGoasdoue <jordan.goasdoue@dailymotion.com>\njroenf <jeroenfranse@gmail.com>\nJulian Goede <julian.goede@pm.me>\nJustas Brazauskas <brazauskasjustas@gmail.com>\nJustin Chadwell <me@jedevc.com>\nJustin Cormack <justin.cormack@docker.com>\nJustin Garrison <justin@linux.com>\nJörg Franke <359489+NewJorg@users.noreply.github.com>\nKai Takac <kai.takac@gmail.com>\nKang, Matthew <impulsecss@gmail.com>\nKazuyoshi Kato <kaz@fly.io>\nKees Cook <keescook@chromium.org>\nKevin Burke <kev@inburke.com>\nkevinmeredith <kevin.m.meredith@gmail.com>\nKir Kolyshkin <kolyshkin@gmail.com>\nKirill A. Korinsky <kirill@korins.ky>\nKohei Tokunaga <ktokunaga.mail@gmail.com>\nKoichi Shiraishi <zchee.io@gmail.com>\nKris-Mikael Krister <krismikael@protonmail.com>\nKunal Kushwaha <kushwaha_kunal_v7@lab.ntt.co.jp>\nKyle <Kylemit@gmail.com>\nl00397676 <lujingxiao@huawei.com>\nLajos Papp <lalyos@yahoo.com>\nlalyos <lalyos@yahoo.com>\nLeandro Santiago <leandrosansilva@gmail.com>\nLevi Harrison <levisamuelharrison@gmail.com>\nliulanzheng <lanzheng.liulz@alibaba-inc.com>\nliwenqi <vikilwq@zju.edu.cn>\nlixiaobing10051267 <li.xiaobing1@zte.com.cn>\nlomot <lomot@qq.com>\nLu Jingxiao <lujingxiao@huawei.com>\nLuca Visentin <luck.visentin@gmail.com>\nMaciej Kalisz <mdkalish@users.noreply.github.com>\nMadhav Puri <madhav.puri@gmail.com>\nManu Gupta <manugupt1@gmail.com>\nMarat Radchenko <marat@slonopotamus.org>\nMarcus Comstedt <marcus@mc.pp.se>\nMark Gordon <msg555@gmail.com>\nMark Yen <mark.yen@suse.com>\nMarko Kohtala <marko.kohtala@gmail.com>\nMary Anthony <mary@docker.com>\nmasibw <masi19bw@gmail.com>\nMatias Insaurralde <matias@insaurral.de>\nMatt Kang <impulsecss@gmail.com>\nMatt Rickard <mrick@google.com>\nMaxime Lagresle <maxime@angel.co>\nMichael Crosby <crosbymichael@gmail.com>\nMichael Friis <friism@gmail.com>\nMichael Irwin <mikesir87@gmail.com>\nMiguel Ángel Jimeno <miguelangel4b@gmail.com>\nMihai Borobocea <MihaiBorob@gmail.com>\nMike Brown <brownwm@us.ibm.com>\nmikelinjie <294893458@qq.com>\nMikhail Vasin <vasin@cloud-tv.ru>\nMilas Bowman <milas.bowman@docker.com>\nMisty Stanley-Jones <misty@docker.com>\nMitsuru Kariya <mitsuru.kariya@nttdata.com>\nMiyachi Katsuya <miyachi_katsuya@r.recruit.co.jp>\nMorgan Bauer <mbauer@us.ibm.com>\nMoritz \"WanzenBug\" Wanzenböck <moritz@wanzenbug.xyz>\nMorlay <morlay.null@gmail.com>\nmsg <msg@clinc.com>\nNao YONASHIRO <yonashiro@r.recruit.co.jp>\nNatasha Jarus <linuxmercedes@gmail.com>\nNathan Sullivan <nathan@nightsys.net>\nNguyễn Đức Chiến <nobi@nobidev.com>\nNick Miyake <nmiyake@users.noreply.github.com>\nNick Santos <nick.santos@docker.com>\nNikhil Pandeti <nikhil.pandeti@utexas.edu>\nnjucjc <njucjc@gmail.com>\nNobi <nobi@nobidev.com>\nNoel Georgi <18496730+frezbo@users.noreply.github.com>\nOliver Bristow <oliver.bristow@project-tracr.com>\nomahs <73983677+omahs@users.noreply.github.com>\nOmer Duchovne <79370724+od-cyera@users.noreply.github.com>\nOmer Mizrahi <ommizrah@microsoft.com>\nOndrej Fabry <ofabry@cisco.com>\nOtto Kekäläinen <otto@seravo.fi>\nPablo Chico de Guzman <pchico83@gmail.com>\nPatrick Hemmer <patrick.hemmer@gmail.com>\nPatrick Lang <plang@microsoft.com>\nPatrick Van Stee <patrick@vanstee.me>\nPaul \"TBBle\" Hampson <Paul.Hampson@Pobox.com>\nPaweł Gronowski <pawel.gronowski@docker.com>\nPeter Dave Hello <hsu@peterdavehello.org>\nPetr Fedchenkov <giggsoff@gmail.com>\nPetteri Räty <github@petteriraty.eu>\nPhil Estes <estesp@gmail.com>\nPierre Fenoll <pierrefenoll@gmail.com>\npieterdd <pieterdd@users.noreply.github.com>\nPranav Pandit <pranavp@microsoft.com>\nPratik Raj <rajpratik71@gmail.com>\nPrayag Verma <prayag.verma@gmail.com>\nQiang Huang <h.huangqiang@huawei.com>\nracequite <quiterace@gmail.com>\nRemy Suen <remy.suen@gmail.com>\nReshen <reshen817@gmail.com>\nretornam <retornam@users.noreply.github.com>\nRi Xu <xuri.me@gmail.com>\nRob Taylor <rob@shape.build>\nRobert Estelle <robertestelle@gmail.com>\nRubens Figueiredo <r.figueiredo.52@gmail.com>\nSalim B <git@salim.space>\nSam Whited <sam@samwhited.com>\nSascha Hemleb <github@sascha.hemleb.de>\nSascha Schwarze <schwarzs@de.ibm.com>\nSean P. Kane <spkane00@gmail.com>\nSebastiaan van Stijn <github@gone.nl>\nSeiya Miyata <odradek38@gmail.com>\nSerhat Gülçiçek <serhat25@gmail.com>\nSertac Ozercan <sozercan@gmail.com>\nShaun Thompson <shaun.thompson@docker.com>\nShev Yan <yandong_8212@163.com>\nShijiang Wei <mountkin@gmail.com>\nShingo Omura <everpeace@gmail.com>\nShiwei Zhang <shizh@microsoft.com>\nSiebe Schaap <siebe@digibites.nl>\nSilvin Lubecki <31478878+silvin-lubecki@users.noreply.github.com>\nSimon Ferquel <simon.ferquel@docker.com>\nSlava Semushin <semushin@redhat.com>\nSolomon Hykes <sh.github.6811@hykes.org>\nsqueegels <1674195+squeegels@users.noreply.github.com>\nStefan Scherer <stefan.scherer@docker.com>\nStefan Weil <sw@weilnetz.de>\nStefanSchoof <Stefan.Schoof@direkt-gruppe.de>\nStepan Blyshchak <stepanblischak@gmail.com>\nStephen Day <stephen.day@docker.com>\nSteve Lohr <schdief.law@gmail.com>\nsunchunming <sunchunming1@jd.com>\nSven Dowideit <SvenDowideit@home.org.au>\nSwagat Bora <sbora@amazon.com>\nTakuya Noguchi <takninnovationresearch@gmail.com>\nTalon Bowler <talon.bowler@docker.com>\nThomas Leonard <thomas.leonard@docker.com>\nThomas Riccardi <riccardi@systran.fr>\nThomas Shaw <tomwillfixit@users.noreply.github.com>\nTianon Gravi <admwiggin@gmail.com>\nTibor Vass <tibor@docker.com>\nTiffany Jernigan <tiffany.f.j@gmail.com>\nTim Waugh <twaugh@redhat.com>\nTim Wraight <tim.wraight@tangentlabs.co.uk>\nTino Rusch <tino.rusch@gmail.com>\nTobias Klauser <tklauser@distanz.ch>\nTomas Tomecek <ttomecek@redhat.com>\nTomasz Kopczynski <tomek@kopczynski.net.pl>\nTomohiro Kusumoto <zabio1192@gmail.com>\nTristan Stenner <ts@ppi.de>\nTroels Liebe Bentsen <tlb@nversion.dk>\nTõnis Tiigi <tonistiigi@gmail.com>\nValentin Lorentz <progval+git@progval.net>\nVasek - Tom C <tom.chauveau@epitech.eu>\nVictor Vieux <victorvieux@gmail.com>\nVictoria Bialas <victoria.bialas@docker.com>\nVincent Demeester <vincent.demeester@docker.com>\nVlad A. Ionescu <vladaionescu@users.noreply.github.com>\nVladislav Ivanov <vlad@ivanov.email>\nWang Yumu <37442693@qq.com>\nWei Fu <fuweid89@gmail.com>\nWei Zhang <kweizh@gmail.com>\nwingkwong <wingkwong.code@gmail.com>\nx893675 <x893675@icloud.com>\nXiaofan Zhang <xiaofan.zhang@clinc.com>\nXimo Guanter <ximo.guanter@gmail.com>\nYamazaki Masashi <masi19bw@gmail.com>\nYan Song <imeoer@linux.alibaba.com>\nYong Tang <yong.tang.github@outlook.com>\nYuichiro Kaneko <spiketeika@gmail.com>\nyumemio <59369226+yumemio@users.noreply.github.com>\nYurii Rashkovskii <yrashk@gmail.com>\nyzewei <yangzewei@loongson.cn>\nZach Badgett <zach.badgett@gmail.com>\nzhangwenlong <zhangwenlong8911@163.com>\nZhizhen He <hezhizhen.yi@gmail.com>\nZiv Tsarfati <digger18@gmail.com>\n岁丰 <genglu.gl@antfin.com>\n沈陵 <shenling.yyb@alibaba-inc.com>\n蝦米 <me@jhdxr.com>\n郑泽宇 <perhapszzy@sina.com>\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 17.2119140625,
          "content": "# syntax=docker/dockerfile-upstream:master\n\nARG RUNC_VERSION=v1.2.4\nARG CONTAINERD_VERSION=v2.0.0\n# CONTAINERD_ALT_VERSION_... defines fallback containerd version for integration tests\nARG CONTAINERD_ALT_VERSION_17=v1.7.23\nARG CONTAINERD_ALT_VERSION_16=v1.6.36\nARG REGISTRY_VERSION=v2.8.3\nARG ROOTLESSKIT_VERSION=v2.3.1\nARG CNI_VERSION=v1.5.1\nARG STARGZ_SNAPSHOTTER_VERSION=v0.15.1\nARG NERDCTL_VERSION=v1.6.2\nARG DNSNAME_VERSION=v1.3.1\nARG NYDUS_VERSION=v2.2.4\nARG MINIO_VERSION=RELEASE.2022-05-03T20-36-08Z\nARG MINIO_MC_VERSION=RELEASE.2022-05-04T06-07-55Z\nARG AZURITE_VERSION=3.18.0\nARG GOTESTSUM_VERSION=v1.9.0\nARG DELVE_VERSION=v1.23.1\n\nARG GO_VERSION=1.23\nARG ALPINE_VERSION=3.21\nARG XX_VERSION=1.6.1\nARG BUILDKIT_DEBUG\n\n# minio for s3 integration tests\nFROM minio/minio:${MINIO_VERSION} AS minio\nFROM minio/mc:${MINIO_MC_VERSION} AS minio-mc\n\n# xx is a helper for cross-compilation\nFROM --platform=$BUILDPLATFORM tonistiigi/xx:${XX_VERSION} AS xx\n\n# golatest is alias for Go base image\nFROM --platform=$BUILDPLATFORM golang:${GO_VERSION}-alpine${ALPINE_VERSION} AS golatest\n\n# gobuild-base is base stage for compiling go/cgo\nFROM golatest AS gobuild-base\nRUN apk add --no-cache file bash clang lld musl-dev pkgconfig git make\nCOPY --link --from=xx / /\n\n# runc builds runc binary\nFROM gobuild-base AS runc\nWORKDIR $GOPATH/src/github.com/opencontainers/runc\nARG RUNC_VERSION\nADD --keep-git-dir=true \"https://github.com/opencontainers/runc.git#$RUNC_VERSION\" .\nARG TARGETPLATFORM\n# gcc is only installed for libgcc\n# lld has issues building static binaries for ppc so prefer ld for it\nRUN set -e; xx-apk add musl-dev gcc libseccomp-dev libseccomp-static; \\\n  [ \"$(xx-info arch)\" != \"ppc64le\" ] || XX_CC_PREFER_LINKER=ld xx-clang --setup-target-triple\nRUN --mount=target=/root/.cache,type=cache <<EOT\n  set -ex\n  CGO_ENABLED=1 xx-go build -mod=vendor -ldflags '-extldflags -static' -tags 'apparmor seccomp netgo cgo static_build osusergo' -o /usr/bin/runc ./\n  xx-verify --static /usr/bin/runc\n  if [ \"$(xx-info os)\" = \"linux\" ]; then /usr/bin/runc --version; fi\nEOT\n\nFROM gobuild-base AS buildkit-base\nWORKDIR /src\nENV GOFLAGS=-mod=vendor\n\n# buildkit-version builds stage with version/revision info\nFROM buildkit-base AS buildkit-version\n# TODO: PKG should be inferred from go modules\nRUN --mount=target=. <<'EOT'\n  git rev-parse HEAD 2>/dev/null || {\n    echo >&2 \"Failed to get git revision, make sure --build-arg BUILDKIT_CONTEXT_KEEP_GIT_DIR=1 is set when building from Git directly\"\n    exit 1\n  }\n  set -ex\n  export PKG=github.com/moby/buildkit VERSION=$(git describe --match 'v[0-9]*' --dirty='.m' --always --tags) REVISION=$(git rev-parse HEAD)$(if ! git diff --no-ext-diff --quiet --exit-code; then echo .m; fi);\n  echo \"-X ${PKG}/version.Version=${VERSION} -X ${PKG}/version.Revision=${REVISION} -X ${PKG}/version.Package=${PKG}\" > /tmp/.ldflags;\n  echo -n \"${VERSION}\" > /tmp/.version;\nEOT\n\n# buildctl builds test cli binary\nFROM buildkit-base AS buildctl\nENV CGO_ENABLED=0\nARG TARGETPLATFORM\nARG GOBUILDFLAGS\nRUN --mount=target=. --mount=target=/root/.cache,type=cache \\\n  --mount=target=/go/pkg/mod,type=cache \\\n  --mount=source=/tmp/.ldflags,target=/tmp/.ldflags,from=buildkit-version <<EOT\n  set -ex\n  xx-go build ${GOBUILDFLAGS} -ldflags \"$(cat /tmp/.ldflags)\" -o /usr/bin/buildctl ./cmd/buildctl\n  xx-verify --static /usr/bin/buildctl\n  if [ \"$(xx-info os)\" = \"linux\" ]; then /usr/bin/buildctl --version; fi\nEOT\n\n# buildkitd builds daemon binary\nFROM buildkit-base AS buildkitd\n# BUILDKITD_TAGS defines additional Go build tags for compiling buildkitd\nARG BUILDKITD_TAGS\nARG TARGETPLATFORM\nARG GOBUILDFLAGS\nARG VERIFYFLAGS=\"--static\"\nARG CGO_ENABLED=0\nARG BUILDKIT_DEBUG\nARG GOGCFLAGS=${BUILDKIT_DEBUG:+\"all=-N -l\"}\nRUN --mount=target=. --mount=target=/root/.cache,type=cache \\\n  --mount=target=/go/pkg/mod,type=cache \\\n  --mount=source=/tmp/.ldflags,target=/tmp/.ldflags,from=buildkit-version <<EOT\n  set -ex\n  xx-go build ${GOBUILDFLAGS} -gcflags=\"${GOGCFLAGS}\" -ldflags \"$(cat /tmp/.ldflags) -extldflags '-static'\" -tags \"osusergo netgo static_build seccomp ${BUILDKITD_TAGS}\" -o /usr/bin/buildkitd ./cmd/buildkitd\n  xx-verify ${VERIFYFLAGS} /usr/bin/buildkitd\n\n  # buildkitd --version can be flaky when running through emulation related to\n  # https://github.com/moby/buildkit/pull/4491. Retry a few times as a workaround.\n  set +ex\n  if [ \"$(xx-info os)\" = \"linux\" ]; then\n    max_retries=5\n    for attempt in $(seq \"$max_retries\"); do\n      timeout 3 /usr/bin/buildkitd --version\n      exitcode=$?\n      if ! xx-info is-cross; then\n        exit $exitcode\n      elif [ $exitcode -eq 0 ]; then\n        break\n      elif [ $exitcode -eq 124 ] || [ $exitcode -eq 143 ]; then\n        echo \"WARN: buildkitd --version timed out ($attempt/$max_retries)\"\n        if [ \"$attempt\" -eq \"$max_retries\" ]; then\n          exit $exitcode\n        fi\n      else\n        echo \"ERROR: buildkitd --version failed with exit code $exitcode\"\n      fi\n      sleep 1\n    done\n  fi\nEOT\n\n# dnsname builds dnsname CNI plugin for testing\nFROM gobuild-base AS dnsname\nWORKDIR /go/src/github.com/containers/dnsname\nARG DNSNAME_VERSION\nADD --keep-git-dir=true \"https://github.com/containers/dnsname.git#$DNSNAME_VERSION\" .\nARG TARGETPLATFORM\nRUN --mount=target=/root/.cache,type=cache \\\n    CGO_ENABLED=0 xx-go build -o /usr/bin/dnsname ./plugins/meta/dnsname && \\\n    xx-verify --static /usr/bin/dnsname\n\nFROM --platform=$BUILDPLATFORM alpine:${ALPINE_VERSION} AS cni-plugins\nRUN apk add --no-cache curl\nCOPY --from=xx / /\nARG CNI_VERSION\nARG TARGETOS\nARG TARGETARCH\nARG TARGETPLATFORM\nWORKDIR /opt/cni/bin\nRUN curl -Ls https://github.com/containernetworking/plugins/releases/download/${CNI_VERSION}/cni-plugins-${TARGETOS}-${TARGETARCH}-${CNI_VERSION}.tgz | tar xzv\nRUN xx-verify --static bridge loopback host-local\nCOPY --link --from=dnsname /usr/bin/dnsname /opt/cni/bin/\n\nFROM scratch AS cni-plugins-export\nCOPY --link --from=cni-plugins /opt/cni/bin/bridge /buildkit-cni-bridge\nCOPY --link --from=cni-plugins /opt/cni/bin/loopback /buildkit-cni-loopback\nCOPY --link --from=cni-plugins /opt/cni/bin/host-local /buildkit-cni-host-local\nCOPY --link --from=cni-plugins /opt/cni/bin/firewall /buildkit-cni-firewall\n\nFROM scratch AS cni-plugins-export-squashed\nCOPY --from=cni-plugins-export / /\n\nFROM scratch AS binaries-linux\nCOPY --link --from=runc /usr/bin/runc /buildkit-runc\n# built from https://github.com/tonistiigi/binfmt/releases/tag/buildkit%2Fv7.1.0-30\nCOPY --link --from=tonistiigi/binfmt:buildkit-v7.1.0-30@sha256:45dd57b4ba2f24e2354f71f1e4e51f073cb7a28fd848ce6f5f2a7701142a6bf0 / /\nCOPY --link --from=cni-plugins-export-squashed / /\nCOPY --link --from=buildctl /usr/bin/buildctl /\nCOPY --link --from=buildkitd /usr/bin/buildkitd /\n\nFROM scratch AS binaries-darwin\nCOPY --link --from=buildctl /usr/bin/buildctl /\n\nFROM scratch AS binaries-windows\nCOPY --link --from=buildctl /usr/bin/buildctl /buildctl.exe\nCOPY --link --from=buildkitd /usr/bin/buildkitd /buildkitd.exe\n\nFROM scratch AS binaries-freebsd\nCOPY --link --from=buildkitd /usr/bin/buildkitd /\nCOPY --link --from=buildctl /usr/bin/buildctl /\n\nFROM binaries-$TARGETOS AS binaries\n# BUILDKIT_SBOM_SCAN_STAGE enables SBOM scanning for this stage\nARG BUILDKIT_SBOM_SCAN_STAGE=true\n\nFROM --platform=$BUILDPLATFORM alpine:${ALPINE_VERSION} AS releaser\nRUN apk add --no-cache tar gzip\nWORKDIR /work\nARG TARGETPLATFORM\nRUN --mount=from=binaries \\\n  --mount=source=/tmp/.version,target=/tmp/.version,from=buildkit-version \\\n  mkdir -p /out && tar czvf \"/out/buildkit-$(cat /tmp/.version).$(echo $TARGETPLATFORM | sed 's/\\//-/g').tar.gz\" --mtime='2015-10-21 00:00Z' --sort=name --transform 's/^./bin/' .\n\nFROM scratch AS release\nCOPY --link --from=releaser /out/ /\n\nFROM alpine:${ALPINE_VERSION} AS buildkit-export\nRUN apk add --no-cache fuse3 git openssh pigz xz iptables ip6tables \\\n  && ln -s fusermount3 /usr/bin/fusermount\nCOPY --link examples/buildctl-daemonless/buildctl-daemonless.sh /usr/bin/\nVOLUME /var/lib/buildkit\n\nFROM gobuild-base AS containerd-build\nWORKDIR /go/src/github.com/containerd/containerd\nARG TARGETPLATFORM\nENV CGO_ENABLED=1 CGO_LDFLAGS=\"-fuse-ld=lld\" BUILDTAGS=no_btrfs GO111MODULE=off\nRUN xx-apk add musl-dev gcc && xx-go --wrap\nCOPY --chmod=755 <<-EOT /build.sh\n#!/bin/sh\nset -ex\nmkdir /out\nif [ \"$(xx-info os)\" = \"linux\" ]; then\n  make bin/containerd\n  make bin/containerd-shim-runc-v2\n  mv bin/containerd bin/containerd-shim* /out\nelse\n  CGO_ENABLED=0 make STATIC=1 binaries\n  if [ \"$(xx-info os)\" = \"windows\" ]; then\n    mv bin/containerd.exe /out\n  else\n    mv bin/containerd /out\n  fi\n  # No shim binary is built for FreeBSD, since containerd v2.0.\n  if ls bin/containerd-shim* >/dev/null 2>&1; then\n    mv bin/containerd-shim* /out\n  fi\nfi\nEOT\n\nFROM containerd-build AS containerd\nWORKDIR /go/src/github.com/containerd/containerd\nARG CONTAINERD_VERSION\nADD --keep-git-dir=true \"https://github.com/containerd/containerd.git#$CONTAINERD_VERSION\" .\nRUN /build.sh\n\n# containerd-alt-17 builds containerd v1.7 for integration tests\nFROM containerd-build AS containerd-alt-17\nWORKDIR /go/src/github.com/containerd/containerd\nARG CONTAINERD_ALT_VERSION_17\nADD --keep-git-dir=true \"https://github.com/containerd/containerd.git#$CONTAINERD_ALT_VERSION_17\" .\nRUN /build.sh\n\n# containerd-alt-16 builds containerd v1.6 for integration tests\nFROM containerd-build AS containerd-alt-16\nWORKDIR /go/src/github.com/containerd/containerd\nARG CONTAINERD_ALT_VERSION_16\nADD --keep-git-dir=true \"https://github.com/containerd/containerd.git#$CONTAINERD_ALT_VERSION_16\" .\nRUN /build.sh\n\nFROM gobuild-base AS registry\nWORKDIR /go/src/github.com/docker/distribution\nARG REGISTRY_VERSION\nADD --keep-git-dir=true \"https://github.com/distribution/distribution.git#$REGISTRY_VERSION\" .\nARG TARGETPLATFORM\nRUN --mount=target=/root/.cache,type=cache <<EOT\n  set -ex\n  mkdir /out\n  export GOPATH=\"$(pwd)/Godeps/_workspace:$GOPATH\"\n  GO111MODULE=off CGO_ENABLED=0 xx-go build -o /out/registry ./cmd/registry\n  xx-verify --static /out/registry\n  if [ \"$(xx-info os)\" = \"windows\" ]; then\n    mv /out/registry /out/registry.exe\n  fi\nEOT\n\nFROM gobuild-base AS rootlesskit\nWORKDIR /go/src/github.com/rootless-containers/rootlesskit\nARG ROOTLESSKIT_VERSION\nADD --keep-git-dir=true \"https://github.com/rootless-containers/rootlesskit.git#$ROOTLESSKIT_VERSION\" .\nARG TARGETPLATFORM\nRUN  --mount=target=/root/.cache,type=cache \\\n  CGO_ENABLED=0 xx-go build -o /rootlesskit ./cmd/rootlesskit && \\\n  xx-verify --static /rootlesskit\n\nFROM gobuild-base AS stargz-snapshotter\nWORKDIR /go/src/github.com/containerd/stargz-snapshotter\nARG STARGZ_SNAPSHOTTER_VERSION\nADD --keep-git-dir=true \"https://github.com/containerd/stargz-snapshotter.git#$STARGZ_SNAPSHOTTER_VERSION\" .\nARG TARGETPLATFORM\nRUN --mount=target=/root/.cache,type=cache \\\n  xx-go --wrap && \\\n  mkdir /out && CGO_ENABLED=0 PREFIX=/out/ make && \\\n  xx-verify --static /out/containerd-stargz-grpc && \\\n  xx-verify --static /out/ctr-remote\n\nFROM gobuild-base AS nydus\nARG NYDUS_VERSION\nARG TARGETOS\nARG TARGETARCH\nSHELL [\"/bin/bash\", \"-c\"]\nRUN wget https://github.com/dragonflyoss/image-service/releases/download/$NYDUS_VERSION/nydus-static-$NYDUS_VERSION-$TARGETOS-$TARGETARCH.tgz\nRUN mkdir -p /out/nydus-static && tar xzvf nydus-static-$NYDUS_VERSION-$TARGETOS-$TARGETARCH.tgz -C /out\n\nFROM gobuild-base AS gotestsum\nARG GOTESTSUM_VERSION\nARG TARGETPLATFORM\nRUN --mount=target=/root/.cache,type=cache <<EOT\n  set -ex\n  xx-go install \"gotest.tools/gotestsum@${GOTESTSUM_VERSION}\"\n  xx-go install \"github.com/wadey/gocovmerge@latest\"\n  mkdir /out\n  if ! xx-info is-cross; then\n    /go/bin/gotestsum --version\n    mv /go/bin/gotestsum /out\n    mv /go/bin/gocovmerge /out\n  else\n    mv /go/bin/*/gotestsum* /out\n    mv /go/bin/*/gocovmerge* /out\n  fi\nEOT\nCOPY --chmod=755 <<\"EOF\" /out/gotestsumandcover\n#!/bin/sh\nset -x\nif [ -z \"$GO_TEST_COVERPROFILE\" ]; then\n  exec gotestsum \"$@\"\nfi\ncoverdir=\"$(dirname \"$GO_TEST_COVERPROFILE\")\"\nmkdir -p \"$coverdir/helpers\"\ngotestsum \"$@\" \"-coverprofile=$GO_TEST_COVERPROFILE\"\necode=$?\ngo tool covdata textfmt -i=$coverdir/helpers -o=$coverdir/helpers-report.txt\ngocovmerge \"$coverdir/helpers-report.txt\" \"$GO_TEST_COVERPROFILE\" > \"$coverdir/merged-report.txt\"\nmv \"$coverdir/merged-report.txt\" \"$GO_TEST_COVERPROFILE\"\nrm \"$coverdir/helpers-report.txt\"\nfor f in \"$coverdir/helpers\"/*; do\n  rm \"$f\"\ndone\nrmdir \"$coverdir/helpers\"\nexit $ecode\nEOF\n\n# dlv builds delve for debug variant images\nFROM gobuild-base AS dlv\nARG DELVE_VERSION\nARG TARGETPLATFORM\nRUN --mount=target=/root/.cache,type=cache\\\n    --mount=target=/go/pkg/mod,type=cache <<EOT\n  set -ex\n  mkdir /out\n  if [ \"$(xx-info os)\" = \"freebsd\" ]; then\n    echo \"WARN: dlv requires cgo enabled on FreeBSD, skipping: https://github.com/moby/buildkit/pull/5497#issuecomment-2462031339\"\n    exit 0\n  fi\n  xx-go install \"github.com/go-delve/delve/cmd/dlv@${DELVE_VERSION}\"\n  if ! xx-info is-cross; then\n    /go/bin/dlv version\n    mv /go/bin/dlv /out\n  else\n    mv /go/bin/*/dlv* /out\n  fi\nEOT\n\nFROM buildkit-export AS buildkit-linux\nCOPY --link --from=binaries / /usr/bin/\nENV BUILDKIT_SETUP_CGROUPV2_ROOT=1\nENTRYPOINT [\"buildkitd\"]\n\nFROM buildkit-linux AS buildkit-linux-debug\nCOPY --link --from=dlv /usr/bin/dlv /usr/bin/dlv\nCOPY --link --chmod=755 <<EOF /docker-entrypoint.sh\n#!/bin/sh\nexec dlv exec /usr/bin/buildkitd \\\\\n  --api-version=2 \\\\\n  -l 0.0.0.0:\\${DELVE_PORT:-5000} \\\\\n  --headless=true \\\\\n  --accept-multiclient \\\\\n  --continue \\\\\n  -- \"\\$@\"\nEOF\nENV DELVE_PORT=5000\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nFROM binaries AS buildkit-darwin\n\nFROM binaries AS buildkit-freebsd\nENTRYPOINT [\"/buildkitd\"]\n\nFROM binaries AS buildkit-windows\n\nFROM scratch AS binaries-for-test\nCOPY --link --from=gotestsum /out /\nCOPY --link --from=dlv /out /\nCOPY --link --from=registry /out /\nCOPY --link --from=containerd /out /\nCOPY --link --from=binaries / /\n\nFROM buildkit-base AS integration-tests-base\nENV BUILDKIT_INTEGRATION_ROOTLESS_IDPAIR=\"1000:1000\"\nRUN apk add --no-cache shadow shadow-uidmap sudo vim iptables ip6tables dnsmasq fuse curl git-daemon openssh-client slirp4netns iproute2 \\\n  && useradd --create-home --home-dir /home/user --uid 1000 -s /bin/sh user \\\n  && echo \"XDG_RUNTIME_DIR=/run/user/1000; export XDG_RUNTIME_DIR\" >> /home/user/.profile \\\n  && mkdir -m 0700 -p /run/user/1000 \\\n  && chown -R user /run/user/1000 /home/user \\\n  && ln -s /sbin/iptables-legacy /usr/bin/iptables \\\n  && xx-go --wrap\nARG NERDCTL_VERSION\nRUN curl -Ls https://raw.githubusercontent.com/containerd/nerdctl/$NERDCTL_VERSION/extras/rootless/containerd-rootless.sh > /usr/bin/containerd-rootless.sh \\\n  && chmod 0755 /usr/bin/containerd-rootless.sh\nARG AZURITE_VERSION\nRUN apk add --no-cache nodejs npm \\\n  && npm install -g azurite@${AZURITE_VERSION}\n# The entrypoint script is needed for enabling nested cgroup v2 (https://github.com/moby/buildkit/issues/3265#issuecomment-1309631736)\nRUN curl -Ls https://raw.githubusercontent.com/moby/moby/v25.0.1/hack/dind > /docker-entrypoint.sh \\\n  && chmod 0755 /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n# musl is needed to directly use the registry binary that is built on alpine\nENV BUILDKIT_INTEGRATION_CONTAINERD_EXTRA=\"containerd-1.7=/opt/containerd-alt-17/bin,containerd-1.6=/opt/containerd-alt-16/bin\"\nENV BUILDKIT_INTEGRATION_SNAPSHOTTER=stargz\nENV BUILDKIT_SETUP_CGROUPV2_ROOT=1\nENV CGO_ENABLED=0\nENV GOTESTSUM_FORMAT=standard-verbose\nCOPY --link --from=gotestsum /out /usr/bin/\nCOPY --link --from=minio /opt/bin/minio /usr/bin/\nCOPY --link --from=minio-mc /usr/bin/mc /usr/bin/\nCOPY --link --from=nydus /out/nydus-static/* /usr/bin/\nCOPY --link --from=stargz-snapshotter /out/* /usr/bin/\nCOPY --link --from=rootlesskit /rootlesskit /usr/bin/\nCOPY --link --from=containerd-alt-17 /out/containerd* /opt/containerd-alt-17/bin/\nCOPY --link --from=containerd-alt-16 /out/containerd* /opt/containerd-alt-16/bin/\nCOPY --link --from=registry /out /usr/bin/\nCOPY --link --from=runc /usr/bin/runc /usr/bin/\nCOPY --link --from=containerd /out/containerd* /usr/bin/\nCOPY --link --from=cni-plugins /opt/cni/bin/bridge /opt/cni/bin/host-local /opt/cni/bin/loopback /opt/cni/bin/firewall /opt/cni/bin/dnsname /opt/cni/bin/\nCOPY --link hack/fixtures/cni.json /etc/buildkit/cni.json\nCOPY --link hack/fixtures/dns-cni.conflist /etc/buildkit/dns-cni.conflist\nCOPY --link --from=binaries / /usr/bin/\n\n# integration-tests prepares an image suitable for running all tests\nFROM integration-tests-base AS integration-tests\nCOPY . .\nENV BUILDKIT_RUN_NETWORK_INTEGRATION_TESTS=1 BUILDKIT_CNI_INIT_LOCK_PATH=/run/buildkit_cni_bridge.lock\n\nFROM integration-tests AS dev-env\nVOLUME /var/lib/buildkit\n\n# rootless builds a rootless variant of buildkitd image\nFROM alpine:${ALPINE_VERSION} AS rootless\nRUN apk add --no-cache fuse3 fuse-overlayfs git openssh pigz shadow-uidmap xz\nRUN adduser -D -u 1000 user \\\n  && mkdir -p /run/user/1000 /home/user/.local/tmp /home/user/.local/share/buildkit \\\n  && chown -R user /run/user/1000 /home/user \\\n  && echo user:100000:65536 | tee /etc/subuid | tee /etc/subgid\nCOPY --link --from=rootlesskit /rootlesskit /usr/bin/\nCOPY --link --from=binaries / /usr/bin/\nCOPY --link examples/buildctl-daemonless/buildctl-daemonless.sh /usr/bin/\n# Kubernetes runAsNonRoot requires USER to be numeric\nUSER 1000:1000\nENV HOME=/home/user\nENV USER=user\nENV XDG_RUNTIME_DIR=/run/user/1000\nENV TMPDIR=/home/user/.local/tmp\nENV BUILDKIT_HOST=unix:///run/user/1000/buildkit/buildkitd.sock\nVOLUME /home/user/.local/share/buildkit\nENTRYPOINT [\"rootlesskit\", \"buildkitd\"]\n\n# buildkit builds the buildkit container image\nFROM buildkit-$TARGETOS${BUILDKIT_DEBUG:+-debug} AS buildkit\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 7.435546875,
          "content": "# BuildKit maintainers file\n#\n# This file describes the maintainer groups within the moby/buildkit project.\n# More detail on Moby project governance is available in the\n# https://github.com/moby/moby/blob/master/project/GOVERNANCE.md file.\n#\n# It is structured to be consumable by both humans and programs.\n# To extract its contents programmatically, use any TOML-compliant\n# parser.\n#\n\n[Rules]\n\n\t\t[Rules.maintainers]\n\n\t\ttitle = \"What is a maintainer?\"\n\n\t\ttext = \"\"\"\nThere are different types of maintainers, with different\nresponsibilities, but all maintainers have 3 things in common:\n\n1) They share responsibility in the project's success.\n2) They have made a long-term, recurring time investment to improve\n   the project.\n3) They spend that time doing whatever needs to be done, not\n   necessarily what is the most interesting or fun.\n\nMaintainers are often under-appreciated, because their work is harder\nto appreciate.  It's easy to appreciate a really cool and technically\nadvanced feature. It's harder to appreciate the absence of bugs, the\nslow but steady improvement in stability, or the reliability of a\nrelease process. But those things distinguish a good project from a\ngreat one.\n\"\"\"\n\n\t\t[Rules.adding-maintainers]\n\n\t\ttitle = \"How are maintainers added?\"\n\n\t\ttext = \"\"\"\nMaintainers are first and foremost contributors that have shown they\nare committed to the long term success of a project. Contributors\nwanting to become maintainers are expected to be deeply involved in\ncontributing code, pull request review, and triage of issues in the\nproject for more than three months.\n\nJust contributing does not make you a maintainer, it is about building\ntrust with the current maintainers of the project and being a person\nthat they can depend on and trust to make decisions in the best\ninterest of the project.\n\nPeriodically, the existing maintainers curate a list of contributors\nthat have shown regular activity on the project over the prior\nmonths. From this list, maintainer candidates are selected.\n\nAfter a candidate has been announced, the existing maintainers are\ngiven five business days to discuss the candidate, raise objections\nand cast their vote. Candidates must be approved by at least 66% of\nthe current maintainers by adding their vote on the slack\nchannel. Only maintainers of the repository that the candidate is\nproposed for are allowed to vote.\n\nIf a candidate is approved, a maintainer will contact the candidate to\ninvite the candidate to open a pull request that adds the contributor\nto the MAINTAINERS file. The candidate becomes a maintainer once the\npull request is merged.\n\"\"\"\n\n\t\t[Rules.stepping-down-policy]\n\n\t\ttitle = \"Stepping down policy\"\n\n\t\ttext = \"\"\"\nLife priorities, interests, and passions can change. If you're a\nmaintainer but feel you must remove yourself from the list, inform\nother maintainers that you intend to step down, and if possible, help\nfind someone to pick up your work.  At the very least, ensure your\nwork can be continued where you left off.\n\nAfter you've informed other maintainers, create a pull request to\nremove yourself from the MAINTAINERS file.\n\"\"\"\n\n\t\t[Rules.inactive-maintainers]\n\n\t\ttitle = \"Removal of inactive maintainers\"\n\n\t\ttext = \"\"\"\nSimilar to the procedure for adding new maintainers, existing\nmaintainers can be removed from the list if they do not show\nsignificant activity on the project. Periodically, the maintainers\nreview the list of maintainers and their activity over the last three\nmonths.\n\nIf a maintainer has shown insufficient activity over this period, a\nneutral person will contact the maintainer to ask if they want to\ncontinue being a maintainer. If the maintainer decides to step down as\na maintainer, they open a pull request to be removed from the\nMAINTAINERS file.\n\nIf the maintainer wants to remain a maintainer, but is unable to\nperform the required duties they can be removed with a vote of at\nleast 66% of the current maintainers.  The voting period is five\nbusiness days. Issues related to a maintainer's performance should be\ndiscussed with them among the other maintainers so that they are not\nsurprised by a pull request removing them.\n\"\"\"\n\n\t\t[Rules.DCO]\n\n\t\ttitle = \"Helping contributors with the DCO\"\n\n\t\ttext = \"\"\"\nThe [DCO or `Sign your work`](\nhttps://github.com/moby/buildkit/blob/master/CONTRIBUTING.md#sign-your-work)\nrequirement is not intended as a roadblock or speed bump.\n\nSome BuildKit contributors are not as familiar with `git`, or have\nused a web based editor, and thus asking them to `git commit --amend\n-s` is not the best way forward.\n\nIn this case, maintainers can update the commits based on clause (c)\nof the DCO.  The most trivial way for a contributor to allow the\nmaintainer to do this, is to add a DCO signature in a pull requests's\ncomment, or a maintainer can simply note that the change is\nsufficiently trivial that it does not substantially change the\nexisting contribution - i.e., a spelling change.\n\nWhen you add someone's DCO, please also add your own to keep a log.\n\"\"\"\n\n\t\t[Rules.\"no direct push\"]\n\n\t\ttitle = \"I'm a maintainer. Should I make pull requests too?\"\n\n\t\ttext = \"\"\"\nYes. Nobody should ever push to master directly. All changes should be\nmade through a pull request.\n\"\"\"\n\n\t\t[Rules.meta]\n\n\t\ttitle = \"How is this process changed?\"\n\n\t\ttext = \"Just like everything else: by making a pull request :)\"\n\n\n[Org]\n\n\t[Org.Maintainers]\n\n\t\tpeople = [\n\t\t\t\"akihirosuda\",\n\t\t\t\"coryb\",\n\t\t\t\"crazy-max\",\n\t\t\t\"gabriel-samfira\",\n\t\t\t\"hinshun\",\n\t\t\t\"ijc\",\n\t\t\t\"jedevc\",\n\t\t\t\"ktock\",\n\t\t\t\"sipsma\",\n\t\t\t\"tiborvass\",\n\t\t\t\"tonistiigi\",\n\t\t]\n\n\t[Org.Curators]\n\n\t# The curators help ensure that incoming issues and pull requests are properly triaged and\n\t# that our various contribution and reviewing processes are respected. With their knowledge of\n\t# the repository activity, they can also guide contributors to relevant material or\n\t# discussions.\n\t#\n\t# They are neither code nor docs reviewers, so they are never expected to merge. They can\n\t# however:\n\t# - close an issue or pull request when it's an exact duplicate\n\t# - close an issue or pull request when it's inappropriate or off-topic\n\n\t\tpeople = [\n\t\t\t\"thajeztah\",\n\t\t\t\"thompson-shaun\"\n\t\t]\n\n[people]\n\n# A reference list of all people associated with the project.\n# All other sections should refer to people by their canonical key\n# in the people section.\n\n\t[people.akihirosuda]\n\tName = \"Akihiro Suda\"\n\tEmail = \"akihiro.suda.cz@hco.ntt.co.jp\"\n\tGitHub = \"AkihiroSuda\"\n\n\t[people.coryb]\n\tName = \"Cory Bennett\"\n\tEmail = \"github@corybennett.org\"\n\tGitHub = \"coryb\"\n\n\t[people.crazy-max]\n\tName = \"Kevin Alvarez\"\n\tEmail = \"contact@crazymax.dev\"\n\tGitHub = \"crazy-max\"\n\n\t[people.gabriel-samfira]\n\tName = \"Gabriel Adrian Samfira\"\n\tEmail = \"gsamfira@cloudbasesolutions.com\"\n\tGitHub = \"gabriel-samfira\"\n\n\t[people.hinshun]\n\tName = \"Edgar Lee\"\n\tEmail = \"edgarhinshunlee@gmail.com\"\n\tGitHub = \"hinshun\"\n\n\t[people.ijc]\n\tName = \"Ian Campbell\"\n\tEmail = \"ian.campbell@docker.com\"\n\tGitHub = \"ijc\"\n\n\t[people.jedevc]\n\tName = \"Justin Chadwell\"\n\tEmail = \"me@jedevc.com\"\n\tGitHub = \"jedevc\"\n\n\t[people.ktock]\n\tName = \"Kohei Tokunaga\"\n\tEmail = \"ktokunaga.mail@gmail.com\"\n\tGitHub = \"ktock\"\n\n\t[people.sipsma]\n\tName = \"Erik Sipsma\"\n\tEmail = \"erik@sipsma.dev\"\n\tGitHub = \"sipsma\"\n\n\t[people.thajeztah]\n\tName = \"Sebastiaan van Stijn\"\n\tEmail = \"github@gone.nl\"\n\tGitHub = \"thaJeztah\"\n\n\t[people.thompson-shaun]\n\tName = \"Shaun Thompson\"\n\tEmail = \"shaun.thompson@docker.com\"\n\tGitHub = \"thompson-shaun\"\n\n\t[people.tiborvass]\n\tName = \"Tibor Vass\"\n\tEmail = \"tibor@docker.com\"\n\tGitHub = \"tiborvass\"\n\n\t[people.tonistiigi]\n\tName = \"Tõnis Tiigi\"\n\tEmail = \"tonis@docker.com\"\n\tGitHub = \"tonistiigi\"\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.3701171875,
          "content": "prefix=/usr/local\nbindir=$(prefix)/bin\n\nifneq (, $(BUILDX_BIN))\n\texport BUILDX_CMD = $(BUILDX_BIN)\nelse ifneq (, $(shell docker buildx version))\n\texport BUILDX_CMD = docker buildx\nelse ifneq (, $(shell command -v buildx))\n\texport BUILDX_CMD = $(command -v buildx)\nendif\n\nexport BUILDX_CMD ?= docker buildx\n\n.PHONY: binaries\nbinaries:\n\t$(BUILDX_CMD) bake binaries\n\n.PHONY: cross\ncross:\n\t$(BUILDX_CMD) bake binaries-cross\n\n.PHONY: images\nimages:\n# moby/buildkit:local and moby/buildkit:local-rootless are created on Docker\n\thack/images local moby/buildkit\n\tTARGET=rootless hack/images local moby/buildkit\n\n.PHONY: install\ninstall:\n\tmkdir -p $(DESTDIR)$(bindir)\n\tinstall bin/build/* $(DESTDIR)$(bindir)\n\n.PHONY: release\nrelease:\n\t./hack/release\n\n.PHONY: clean\nclean:\n\trm -rf ./bin\n\n.PHONY: test\ntest:\n\t./hack/test integration gateway dockerfile\n\n.PHONY: test-race\ntest-race:\n\tCGO_ENABLED=1 GOBUILDFLAGS=\"-race\" ./hack/test integration gateway dockerfile\n\n.PHONY: lint\nlint:\n\t$(BUILDX_CMD) bake lint\n\n.PHONY: validate-vendor\nvalidate-vendor:\n\t$(BUILDX_CMD) bake validate-vendor\n\n.PHONY: validate-shfmt\nvalidate-shfmt:\n\t$(BUILDX_CMD) bake validate-shfmt\n\n.PHONY: shfmt\nshfmt:\n\t$(BUILDX_CMD) bake shfmt\n\n.PHONY: validate-authors\nvalidate-authors:\n\t$(BUILDX_CMD) bake validate-authors\n\n.PHONY: validate-generated-files\nvalidate-generated-files:\n\t$(BUILDX_CMD) bake validate-generated-files\n\n.PHONY: validate-archutil\nvalidate-archutil:\n\t$(BUILDX_CMD) bake validate-archutil\n\n.PHONY: validate-doctoc\nvalidate-doctoc:\n\t$(BUILDX_CMD) bake validate-doctoc\n\n.PHONY: validate-docs\nvalidate-docs:\n\t$(BUILDX_CMD) bake validate-docs\n\n.PHONY: validate-all\nvalidate-all: test lint validate-vendor validate-generated-files validate-archutil validate-doctoc validate-docs\n\n.PHONY: vendor\nvendor:\n\t$(eval $@_TMP_OUT := $(shell mktemp -d -t buildkit-output.XXXXXXXXXX))\n\t$(BUILDX_CMD) bake --set \"*.output=type=local,dest=$($@_TMP_OUT)\" vendor\n\trm -rf ./vendor\n\tcp -R \"$($@_TMP_OUT)\"/out/* .\n\trm -rf \"$($@_TMP_OUT)\"/\n\n.PHONY: generated-files\ngenerated-files:\n\t$(BUILDX_CMD) bake generated-files\n\n.PHONY: archutil\narchutil:\n\t$(BUILDX_CMD) bake archutil\n\n.PHONY: authors\nauthors:\n\t$(BUILDX_CMD) bake authors\n\n.PHONY: doctoc\ndoctoc:\n\t$(BUILDX_CMD) bake doctoc\n\n.PHONY: docs\ndocs:\n\t$(BUILDX_CMD) bake docs\n\n.PHONY: docs-dockerfile\ndocs-dockerfile:\n\t$(BUILDX_CMD) bake docs-dockerfile\n\n.PHONY: mod-outdated\nmod-outdated:\n\t$(BUILDX_CMD) bake mod-outdated\n"
        },
        {
          "name": "PROJECT.md",
          "type": "blob",
          "size": 11.6484375,
          "content": "# BuildKit project process guide\n\n* [Issue categorization guidelines](#issue-categorization-guidelines)\n  + [P0](#p0)\n  + [P1](#p1)\n  + [P2](#p2)\n* [Release milestones](#release-milestones)\n  + [Feature releases](#feature-releases)\n  + [Patch releases](#patch-releases)\n  + [Updating dependencies](#updating-dependencies)\n* [Project scope](#project-scope)\n* [Security boundary](#security-boundary)\n  + [Host](#host)\n  + [Client](#client)\n  + [Untrusted sources](#untrusted-sources)\n  + [Stored data](#stored-data)\n  + [Examples of issues not (currently) considered security](#examples-of-issues-not--currently--considered-security)\n\n\n## Issue categorization guidelines\n\nFollowing categorization describes how priorities are assigned to bug reports, and how the priority is used to determine whether a fix will be included in a patch release. Note that not all issues need to have priority assigned if they don't need any special tracking for an upcoming patch release of a feature milestone.\n\n### P0\n\nFixing this issue is the highest priority. As soon as a patch is available and verified a patch release will follow.\n\nExamples:\n\n- Regression in a critical code path\n- Panic in a critical code path\n- Corruption in critical code path or rest of the system\n- Leaked zero-day critical security\n\n### P1\n\nIssues should be fixed with high priority and almost always included in a patch release. Unless waiting for another issue, patch releases should happen within a week.\n\nExamples:\n\n- Any regression, panic\n- Measurable performance regression\n- A major bug in a new feature in the latest release\n- Incompatibility with upgraded external dependency\n\n### P2\n\nPRs opened for P2 bugs should be included in the next feature release milestone. A P2 fix may be included in a patch release, depending on the patch size and how likely the patch may break something some other functionality. Patch release is usually only done if there are P1 fixes, and in that case some of the P2 fixes may be included as well.\n\nExamples:\n\n- Confirmed bug\n- Bugs in non-default configurations\n\n## Release milestones\n\nBuildKit is released with feature releases, patch releases, and security releases.\n\n### Feature releases\n\nFeature releases happen from the development branch, after which a release branch is cut for future patch releases (this can also happen in the code freeze time).\n\nUsers can expect 2-3 release candidate test releases before a feature release. First of these usually happens around 2 weeks before the actual release.\n\nBuildKit maintains backward compatibility in the gRPC API with previous releases, so it is possible to use old clients with new daemon and vice versa. If a feature needs to be removed, then it is first marked deprecated in a feature release. We do not plan to ever make backward incompatible changes in certain areas like the LLB API. BuildKit APIs internally use feature detection to understand what features the other side of the API supports.\n\nGo modules in the BuildKit repository aren't guaranteed to be backward compatible with previous release branches.\n\nOnce a new feature release is cut, no support is offered for the previous feature release. An exception might be if a security release suddenly appears very soon after a new feature release. There are no LTS releases. If you need a different support cycle, consider using a [product that includes BuildKit](https://github.com/moby/buildkit#used-by), (eg. Docker) instead.\n\nAnyone can ask for an issue or PR to be included in the next feature- or patch release milestone, assuming it passes the requirements.\n\n### Patch releases\n\nPatch releases should only include the most critical patches. Everyone should always use the latest patch release, so stability is very important.\n\nIf a fix is needed but it does not qualify for patch release because of the code size or other criteria that make it too unpredictable, we will prioritize cutting a new feature release sooner, rather than making an exception for backporting.\n\nFollowing PRs are included in patch releases\n\n- P0 fixes\n- P1 fixes, assuming maintainers don’t object because of the patch size\n- P2 fixes, only if (both required)\n    - proposed by maintainer\n    - the patch is trivial and self-contained\n- Documentation-only patches\n- Runtime dependency updates (e.g. Alpine packages, runc)\n    - may be updated to the latest patch release of the dependency\n- Vendored dependency updates, only if\n    - Fixing (qualifying) bug or security issue in BuildKit\n    - Patch is small, otherwise a forked version of dependency with only the patches required\n\nNew features do not qualify for patch release.\n\n### Updating dependencies\n\nRuntime dependencies should usually use the latest stable release available when the first RC of the feature release was cut. Patch releases may update such dependencies to their own latest matching patch release.\n\nThe core vendored dependencies (eg. `x/sys` , OTEL, grpc, protobuf) should use the same dependency version that is used by the vendored `containerd` library. At feature release time containerd library should use a version from a containerd release branch. If you need to update such dependency, update it in containerd repository first and then update containerd in BuildKit. During development, using containerd development branch is allowed if the release timeline shows that containerd release (and matching update in BuildKit) will happen before next BuildKit feature release.\n\nDocker dependencies from `moby/moby` and `docker/cli` may use versions from the development branch.\n\nFor other dependencies, updating to the latest patch release is always allowed in the development branch. Updating to a new feature release should have a reason unless the dependency is very stale. Dependencies should use a tagged version if one is available and there isn’t a need for a specific patch from an untagged commit. Go modules should define the lowest compatible version for their dependencies so there is no goal that all dependencies need to be in their latest versions before a new BuildKit feature release is cut.\n\nVendored dependency updates are considered for patch releases, except for rare cases defined in the earlier section.\n\nA security scanner report for a dependency that isn't exploitable via BuildKit is not considered a valid reason for backports.\n\n## Project scope\n\nThe following characteristics define the scope and purpose of the BuildKit project:\n\n- BuildKit provides the best solution for defining a build graph, executing and caching it as efficiently as possible, and exporting the result to a place where it can be used by other tools.\n- BuildKit is a place for fast collaboration around modern containerized build tooling. \n- BuildKit uses containers as an execution sandbox and distribution platform.\n- BuildKit provides an API that is flexible enough to be used in many tools and use cases.\n- BuildKit is secure by default and can be used with untrusted sources.\n- The purpose of BuildKit's command line tool `buildctl` is to expose API features as directly as possible.\n- BuildKit isn't limited to only supporting features used by Docker build.\n\nThings that **do not** define BuildKit:\n\n- Running processes on the host.\n- Solving the following issues that should be left for external projects, such as:\n  - Combining multiple build requests together\n  - Managing and deploying BuildKit instances\n  - Inventing new frontends\n  - Running containers from mutable state\n- Opinionated client-side UX features. An exception here is a `buildctl debug` command where we can experiment with ways to extract more debugging data out of BuildKit.\n\nIf you are an end user, you should probably consider a tool built with BuildKit, rather than using BuildKit directly.\n\n## Security boundary\n\nThis section is for some guidelines about what BuildKit considers a security issue and what kind of guarantees all future BuildKit features should provide. If you are unsure if the case you have found is a security issue, it is always better to ask privately first.\n\n### Host\n\n- The BuildKit API with default daemon configuration does not allow changes to the host filesystem or reading the host filesystem outside of the BuildKit state directory.\n- Application and frontend containers are not allowed to read or write to the host system, run privileged system calls, or access external devices directly. Monitoring the load of the system is allowed.\n\n### Client\n\n- Buildctl does not allow access to any directories or file paths that are not explicitly set by the user with command line arguments. The untrusted BuildKit daemon does not have any way to access files that were not listed.\n- When extracting build results to a directory specified with `--output` or `--cache-to`, no subfile can escape to the outside directory (e.g. via symlinks)\n\n### Untrusted sources\n\n- Although discouraged, you can use untrusted resources in your build, like images, frontend, URLs. These resources, or containers created from the files of these resources, should not have a way to read/write/execute in the host or crash the BuildKit daemon.\n  \n  Exceptions:\n\n  - Containers can use system resources (CPU, memory, disk) without specific limits.\n  - Untrusted remote cache imports may not be used.\n\n- An untrusted frontend may not export build results to a location (client-side directory, registry) without user permission with a specific build request. If the frontend initializes a pull with credentials from the client, this needs to be logged on the client-side progress stream.\n- Frontends can not access registry credentials or tokens that a build is using, the SSH private keys used in SSH forwarding, nor keys that may be used to sign build results or attestations. Frontends can provide SBOM attestation for the builds it has performed but it can not alter the contents of provenance attestations generated by BuildKit daemon.\n- If a build was started with a policy file, the untrusted frontend has no way to use resources that are denied by that policy.\n\n### Stored data\n\n- Credentials should not be logged or written to OpenTelemetry trace or progress stream. Note that this applies to registry credentials and URL sources, if user writes credentials into the arguments of their application containers, there is nothing BuildKit can do about it.\n- Values of the build secrets should never be stored anywhere on the disk or included in the cache checksums.\n\n### Examples of issues not (currently) considered security\n\n- Multiple concurrent builds from separate client share their build resources without namespacing. For example, if both builds require pulling the same image, the pull only happens once and is authenticated only once. The same behavior happens with containers that use the same build secret or if local cache or cache mounts of a previous build are reused. If different behavior is needed, consider running multiple instances of buildkitd for each of the namespaces.\n- Remote cache resources provided with `--cache-to` need to be trusted by the user. If they have been manipulated by an attacker, this can result in an incorrect cache match by BuildKit solver.\n- Application containers may cause the system to run out of resources (e.g. memory). In that case BuildKit should be configured with a cgroup parent.\n- By default, registry credentials are not shared with BuildKit daemon, and short-lived token is generated on client side instead. For backward compatibility this can be bypassed and daemon can choose to ask for credentials instead (this is always required for basic auth). In such cases, the sending of credentials should be logged by the client, but no special confirmation from the user is needed.\n- Untrusted frontends are free to run any builds, for example, they can run a container with a secret mounted and then read out the secret value. They are not allowed to see your registry credentials/tokens or signing keys.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 37.4921875,
          "content": "[![asciicinema example](https://asciinema.org/a/gPEIEo1NzmDTUu2bEPsUboqmU.png)](https://asciinema.org/a/gPEIEo1NzmDTUu2bEPsUboqmU)\n\n# BuildKit <!-- omit in toc -->\n\n[![GitHub Release](https://img.shields.io/github/release/moby/buildkit.svg?style=flat-square)](https://github.com/moby/buildkit/releases/latest)\n[![PkgGoDev](https://img.shields.io/badge/go.dev-docs-007d9c?style=flat-square&logo=go&logoColor=white)](https://pkg.go.dev/github.com/moby/buildkit/client/llb)\n[![CI BuildKit Status](https://img.shields.io/github/actions/workflow/status/moby/buildkit/buildkit.yml?label=buildkit&logo=github&style=flat-square)](https://github.com/moby/buildkit/actions?query=workflow%3Abuildkit)\n[![CI Frontend Status](https://img.shields.io/github/actions/workflow/status/moby/buildkit/frontend.yml?label=frontend&logo=github&style=flat-square)](https://github.com/moby/buildkit/actions?query=workflow%3Afrontend)\n[![Go Report Card](https://goreportcard.com/badge/github.com/moby/buildkit?style=flat-square)](https://goreportcard.com/report/github.com/moby/buildkit)\n[![Codecov](https://img.shields.io/codecov/c/github/moby/buildkit?logo=codecov&style=flat-square)](https://codecov.io/gh/moby/buildkit)\n\nBuildKit is a toolkit for converting source code to build artifacts in an efficient, expressive and repeatable manner.\n\nKey features:\n\n-   Automatic garbage collection\n-   Extendable frontend formats\n-   Concurrent dependency resolution\n-   Efficient instruction caching\n-   Build cache import/export\n-   Nested build job invocations\n-   Distributable workers\n-   Multiple output formats\n-   Pluggable architecture\n-   Execution without root privileges\n\nRead the proposal from https://github.com/moby/moby/issues/32925\n\nIntroductory blog post https://blog.mobyproject.org/introducing-buildkit-17e056cc5317\n\nJoin `#buildkit` channel on [Docker Community Slack](https://dockr.ly/comm-slack)\n\n> [!NOTE]\n> If you are visiting this repo for the usage of BuildKit-only Dockerfile features\n> like `RUN --mount=type=(bind|cache|tmpfs|secret|ssh)`, please refer to the\n> [Dockerfile reference](https://docs.docker.com/engine/reference/builder/).\n\n> [!NOTE]\n> `docker build` [uses Buildx and BuildKit by default](https://docs.docker.com/build/architecture/) since Docker Engine 23.0.\n> You don't need to read this document unless you want to use the full-featured\n> standalone version of BuildKit.\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Used by](#used-by)\n- [Quick start](#quick-start)\n  - [Linux Setup](#linux-setup)\n  - [Windows Setup](#windows-setup)\n  - [macOS Setup](#macos-setup)\n  - [Build from source](#build-from-source)\n  - [Exploring LLB](#exploring-llb)\n  - [Exploring Dockerfiles](#exploring-dockerfiles)\n    - [Building a Dockerfile with `buildctl`](#building-a-dockerfile-with-buildctl)\n    - [Building a Dockerfile using external frontend](#building-a-dockerfile-using-external-frontend)\n  - [Output](#output)\n    - [Image/Registry](#imageregistry)\n    - [Local directory](#local-directory)\n    - [Docker tarball](#docker-tarball)\n    - [OCI tarball](#oci-tarball)\n    - [containerd image store](#containerd-image-store)\n- [Cache](#cache)\n  - [Garbage collection](#garbage-collection)\n  - [Export cache](#export-cache)\n    - [Inline (push image and cache together)](#inline-push-image-and-cache-together)\n    - [Registry (push image and cache separately)](#registry-push-image-and-cache-separately)\n    - [Local directory](#local-directory-1)\n    - [GitHub Actions cache (experimental)](#github-actions-cache-experimental)\n    - [S3 cache (experimental)](#s3-cache-experimental)\n    - [Azure Blob Storage cache (experimental)](#azure-blob-storage-cache-experimental)\n  - [Consistent hashing](#consistent-hashing)\n- [Metadata](#metadata)\n- [Systemd socket activation](#systemd-socket-activation)\n- [Expose BuildKit as a TCP service](#expose-buildkit-as-a-tcp-service)\n  - [Load balancing](#load-balancing)\n- [Containerizing BuildKit](#containerizing-buildkit)\n  - [Podman](#podman)\n  - [Nerdctl](#nerdctl)\n  - [Kubernetes](#kubernetes)\n  - [Daemonless](#daemonless)\n- [OpenTelemetry support](#opentelemetry-support)\n- [Running BuildKit without root privileges](#running-buildkit-without-root-privileges)\n- [Building multi-platform images](#building-multi-platform-images)\n  - [Configuring `buildctl`](#configuring-buildctl)\n    - [Color Output Controls](#color-output-controls)\n    - [Number of log lines (for active steps in tty mode)](#number-of-log-lines-for-active-steps-in-tty-mode)\n- [Contributing](#contributing)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Used by\n\nBuildKit is used by the following projects:\n\n-   [Moby & Docker](https://github.com/moby/moby/pull/37151) (`DOCKER_BUILDKIT=1 docker build`)\n-   [img](https://github.com/genuinetools/img)\n-   [OpenFaaS Cloud](https://github.com/openfaas/openfaas-cloud)\n-   [container build interface](https://github.com/containerbuilding/cbi)\n-   [Tekton Pipelines](https://github.com/tektoncd/catalog) (formerly [Knative Build Templates](https://github.com/knative/build-templates))\n-   [the Sanic build tool](https://github.com/distributed-containers-inc/sanic)\n-   [vab](https://github.com/stellarproject/vab)\n-   [Rio](https://github.com/rancher/rio)\n-   [kim](https://github.com/rancher/kim)\n-   [PouchContainer](https://github.com/alibaba/pouch)\n-   [Docker buildx](https://github.com/docker/buildx)\n-   [Okteto Cloud](https://okteto.com/)\n-   [Earthly earthfiles](https://github.com/vladaionescu/earthly)\n-   [Gitpod](https://github.com/gitpod-io/gitpod)\n-   [Dagger](https://dagger.io)\n-   [envd](https://github.com/tensorchord/envd/)\n-   [Depot](https://depot.dev)\n-   [Namespace](https://namespace.so)\n-   [Unikraft](https://unikraft.org)\n-   [DevZero](https://devzero.io)\n-   [dacc](https://github.com/r2d4/dacc)\n\n## Quick start\n\n:information_source: For Kubernetes deployments, see [`examples/kubernetes`](./examples/kubernetes).\n\nBuildKit is composed of the `buildkitd` daemon and the `buildctl` client.\nWhile the `buildctl` client is available for Linux, macOS, and Windows, the `buildkitd` daemon is only available for Linux and *Windows currently.\n\nThe latest binaries of BuildKit are available [here](https://github.com/moby/buildkit/releases) for Linux, macOS, and Windows.\n\n\n### Linux Setup\n\nThe `buildkitd` daemon requires the following components to be installed:\n-   [runc](https://github.com/opencontainers/runc) or [crun](https://github.com/containers/crun)\n-   [containerd](https://github.com/containerd/containerd) (if you want to use containerd worker)\n\n**Starting the `buildkitd` daemon:**\nYou need to run `buildkitd` as the root user on the host.\n\n```bash\n$ sudo buildkitd\n```\n\nTo run `buildkitd` as a non-root user, see [`docs/rootless.md`](docs/rootless.md).\n\nThe buildkitd daemon supports two worker backends: OCI (runc) and containerd.\n\nBy default, the OCI (runc) worker is used. You can set `--oci-worker=false --containerd-worker=true` to use the containerd worker.\n\nWe are open to adding more backends.\n\nTo start the buildkitd daemon using systemd socket activation, you can install the buildkit systemd unit files.\nSee [Systemd socket activation](#systemd-socket-activation)\n\nThe buildkitd daemon listens gRPC API on `/run/buildkit/buildkitd.sock` by default, but you can also use TCP sockets.\nSee [Expose BuildKit as a TCP service](#expose-buildkit-as-a-tcp-service).\n\n### Windows Setup\n\nSee instructions and notes at [`docs/windows.md`](./docs/windows.md).\n\n### macOS Setup\n\n[Homebrew formula](https://formulae.brew.sh/formula/buildkit) (unofficial) is available for macOS.\n```console\n$ brew install buildkit\n```\n\nThe Homebrew formula does not contain the daemon (`buildkitd`).\n\nFor example, [Lima](https://lima-vm.io) can be used for launching the daemon inside a Linux VM.\n```console\nbrew install lima\nlimactl start template://buildkit\nexport BUILDKIT_HOST=\"unix://$HOME/.lima/buildkit/sock/buildkitd.sock\"\n```\n\n### Build from source\n\nTo build BuildKit from source, see [`.github/CONTRIBUTING.md`](./.github/CONTRIBUTING.md).\n\nFor a `buildctl` reference, see [this document](./docs/reference/buildctl.md).\n\n### Exploring LLB\n\nBuildKit builds are based on a binary intermediate format called LLB that is used for defining the dependency graph for processes running part of your build. tl;dr: LLB is to Dockerfile what LLVM IR is to C.\n\n-   Marshaled as Protobuf messages\n-   Concurrently executable\n-   Efficiently cacheable\n-   Vendor-neutral (i.e. non-Dockerfile languages can be easily implemented)\n\nSee [`solver/pb/ops.proto`](./solver/pb/ops.proto) for the format definition, and see [`./examples/README.md`](./examples/README.md) for example LLB applications.\n\nCurrently, the following high-level languages have been implemented for LLB:\n\n-   Dockerfile (See [Exploring Dockerfiles](#exploring-dockerfiles))\n-   [Buildpacks](https://github.com/tonistiigi/buildkit-pack)\n-   [Mockerfile](https://matt-rickard.com/building-a-new-dockerfile-frontend/)\n-   [Gockerfile](https://github.com/po3rin/gockerfile)\n-   [bldr (Pkgfile)](https://github.com/talos-systems/bldr/)\n-   [HLB](https://github.com/openllb/hlb)\n-   [Earthfile (Earthly)](https://github.com/earthly/earthly)\n-   [Cargo Wharf (Rust)](https://github.com/denzp/cargo-wharf)\n-   [Nix](https://github.com/reproducible-containers/buildkit-nix)\n-   [mopy (Python)](https://github.com/cmdjulian/mopy)\n-   [envd (starlark)](https://github.com/tensorchord/envd/)\n-   [Blubber](https://gitlab.wikimedia.org/repos/releng/blubber)\n-   [Bass](https://github.com/vito/bass)\n-   [kraft.yaml (Unikraft)](https://github.com/unikraft/kraftkit/tree/staging/tools/dockerfile-llb-frontend)\n-   [r2d4/llb (JSON Gateway)](https://github.com/r2d4/llb)\n-   (open a PR to add your own language)\n\n### Exploring Dockerfiles\n\nFrontends are components that run inside BuildKit and convert any build definition to LLB. There is a special frontend called gateway (`gateway.v0`) that allows using any image as a frontend.\n\nDuring development, Dockerfile frontend (`dockerfile.v0`) is also part of the BuildKit repo. In the future, this will be moved out, and Dockerfiles can be built using an external image.\n\n#### Building a Dockerfile with `buildctl`\n\n```bash\nbuildctl build \\\n    --frontend=dockerfile.v0 \\\n    --local context=. \\\n    --local dockerfile=.\n# or\nbuildctl build \\\n    --frontend=dockerfile.v0 \\\n    --local context=. \\\n    --local dockerfile=. \\\n    --opt target=foo \\\n    --opt build-arg:foo=bar\n```\n\n`--local` exposes local source files from client to the builder. `context` and `dockerfile` are the names Dockerfile frontend looks for build context and Dockerfile location.\n\nIf the Dockerfile has a different filename it can be specified with `--opt filename=./Dockerfile-alternative`.\n\n#### Building a Dockerfile using external frontend\n\nExternal versions of the Dockerfile frontend are pushed to https://hub.docker.com/r/docker/dockerfile-upstream and https://hub.docker.com/r/docker/dockerfile and can be used with the gateway frontend. The source for the external frontend is currently located in `./frontend/dockerfile/cmd/dockerfile-frontend` but will move out of this repository in the future ([#163](https://github.com/moby/buildkit/issues/163)). For automatic build from master branch of this repository `docker/dockerfile-upstream:master` or `docker/dockerfile-upstream:master-labs` image can be used.\n\n```bash\nbuildctl build \\\n    --frontend gateway.v0 \\\n    --opt source=docker/dockerfile \\\n    --local context=. \\\n    --local dockerfile=.\nbuildctl build \\\n    --frontend gateway.v0 \\\n    --opt source=docker/dockerfile \\\n    --opt context=https://github.com/moby/moby.git \\\n    --opt build-arg:APT_MIRROR=cdn-fastly.deb.debian.org\n```\n\n### Output\n\nBy default, the build result and intermediate cache will only remain internally in BuildKit. An output needs to be specified to retrieve the result.\n\n#### Image/Registry\n\n```bash\nbuildctl build ... --output type=image,name=docker.io/username/image,push=true\n```\n\nTo export the image to multiple registries:\n\n```bash\nbuildctl build ... --output type=image,\\\"name=docker.io/username/image,docker.io/username2/image2\\\",push=true\n```\n\nTo export the cache embed with the image and pushing them to registry together, type `registry` is required to import the cache, you should specify `--export-cache type=inline` and `--import-cache type=registry,ref=...`. To export the cache to a local directly, you should specify `--export-cache type=local`.\nDetails in [Export cache](#export-cache).\n\n```bash\nbuildctl build ...\\\n  --output type=image,name=docker.io/username/image,push=true \\\n  --export-cache type=inline \\\n  --import-cache type=registry,ref=docker.io/username/image\n```\n\nKeys supported by image output:\n* `name=<value>`: specify image name(s)\n* `push=true`: push after creating the image\n* `push-by-digest=true`: push unnamed image\n* `registry.insecure=true`: push to insecure HTTP registry\n* `oci-mediatypes=true`: use OCI mediatypes in configuration JSON instead of Docker's\n* `oci-artifact=false`: use OCI artifact format for attestations\n* `unpack=true`: unpack image after creation (for use with containerd)\n* `dangling-name-prefix=<value>`: name image with `prefix@<digest>`, used for anonymous images\n* `name-canonical=true`: add additional canonical name `name@<digest>`\n* `compression=<uncompressed|gzip|estargz|zstd>`: choose compression type for layers newly created and cached, gzip is default value. estargz should be used with `oci-mediatypes=true`.\n* `compression-level=<value>`: compression level for gzip, estargz (0-9) and zstd (0-22)\n* `rewrite-timestamp=true`: rewrite the file timestamps to the `SOURCE_DATE_EPOCH` value.\n   See [`docs/build-repro.md`](docs/build-repro.md) for how to specify the `SOURCE_DATE_EPOCH` value.\n* `force-compression=true`: forcefully apply `compression` option to all layers (including already existing layers)\n* `store=true`: store the result images to the worker's (e.g. containerd) image store as well as ensures that the image has all blobs in the content store (default `true`). Ignored if the worker doesn't have image store (e.g. OCI worker).\n* `annotation.<key>=<value>`: attach an annotation with the respective `key` and `value` to the built image\n  * Using the extended syntaxes, `annotation-<type>.<key>=<value>`, `annotation[<platform>].<key>=<value>` and both combined with `annotation-<type>[<platform>].<key>=<value>`, allows configuring exactly where to attach the annotation.\n  * `<type>` specifies what object to attach to, and can be any of `manifest` (the default), `manifest-descriptor`, `index` and `index-descriptor`\n  * `<platform>` specifies which objects to attach to (by default, all), and is the same key passed into the `platform` opt, see [`docs/multi-platform.md`](docs/multi-platform.md).\n  * See [`docs/annotations.md`](docs/annotations.md) for more details.\n\nIf credentials are required, `buildctl` will attempt to read Docker configuration file `$DOCKER_CONFIG/config.json`.\n`$DOCKER_CONFIG` defaults to `~/.docker`.\n\n#### Local directory\n\nThe local client will copy the files directly to the client. This is useful if BuildKit is being used for building something else than container images.\n\n```bash\nbuildctl build ... --output type=local,dest=path/to/output-dir\n```\n\nTo export specific files use multi-stage builds with a scratch stage and copy the needed files into that stage with `COPY --from`.\n\n```dockerfile\n...\nFROM scratch as testresult\n\nCOPY --from=builder /usr/src/app/testresult.xml .\n...\n```\n\n```bash\nbuildctl build ... --opt target=testresult --output type=local,dest=path/to/output-dir\n```\n\nWith a [multi-platform build](docs/multi-platform.md), a subfolder matching\neach target platform will be created in the destination directory:\n\n```dockerfile\nFROM busybox AS build\nARG TARGETOS\nARG TARGETARCH\nRUN mkdir /out && echo foo > /out/hello-$TARGETOS-$TARGETARCH\n\nFROM scratch\nCOPY --from=build /out /\n```\n\n```bash\n$ buildctl build \\\n  --frontend dockerfile.v0 \\\n  --opt platform=linux/amd64,linux/arm64 \\\n  --output type=local,dest=./bin/release\n\n$ tree ./bin\n./bin/\n└── release\n    ├── linux_amd64\n    │   └── hello-linux-amd64\n    └── linux_arm64\n        └── hello-linux-arm64\n```\n\nYou can set `platform-split=false` to merge files from all platforms together\ninto same directory:\n\n```bash\n$ buildctl build \\\n  --frontend dockerfile.v0 \\\n  --opt platform=linux/amd64,linux/arm64 \\\n  --output type=local,dest=./bin/release,platform-split=false\n\n$ tree ./bin\n./bin/\n└── release\n    ├── hello-linux-amd64\n    └── hello-linux-arm64\n```\n\nTar exporter is similar to local exporter but transfers the files through a tarball.\n\n```bash\nbuildctl build ... --output type=tar,dest=out.tar\nbuildctl build ... --output type=tar > out.tar\n```\n\n#### Docker tarball\n\n```bash\n# exported tarball is also compatible with OCI spec\nbuildctl build ... --output type=docker,name=myimage | docker load\n```\n\n#### OCI tarball\n\n```bash\nbuildctl build ... --output type=oci,dest=path/to/output.tar\nbuildctl build ... --output type=oci > output.tar\n```\n\n#### containerd image store\n\nThe containerd worker needs to be used\n\n```bash\nbuildctl build ... --output type=image,name=docker.io/username/image\nctr --namespace=buildkit images ls\n```\n\nTo change the containerd namespace, you need to change `worker.containerd.namespace` in [`/etc/buildkit/buildkitd.toml`](./docs/buildkitd.toml.md).\n\n## Cache\n\nTo show local build cache (`/var/lib/buildkit`):\n\n```bash\nbuildctl du -v\n```\n\nTo prune local build cache:\n```bash\nbuildctl prune\n```\n\n### Garbage collection\n\nSee [`./docs/buildkitd.toml.md`](./docs/buildkitd.toml.md).\n\n### Export cache\n\nBuildKit supports the following cache exporters:\n* `inline`: embed the cache into the image, and push them to the registry together\n* `registry`: push the image and the cache separately\n* `local`: export to a local directory\n* `gha`: export to GitHub Actions cache\n\nIn most case you want to use the `inline` cache exporter.\nHowever, note that the `inline` cache exporter only supports `min` cache mode. \nTo enable `max` cache mode, push the image and the cache separately by using `registry` cache exporter.\n\n`inline` and `registry` exporters both store the cache in the registry. For importing the cache, `type=registry` is sufficient for both, as specifying the cache format is not necessary.\n\n#### Inline (push image and cache together)\n\n```bash\nbuildctl build ... \\\n  --output type=image,name=docker.io/username/image,push=true \\\n  --export-cache type=inline \\\n  --import-cache type=registry,ref=docker.io/username/image\n```\n\nNote that the inline cache is not imported unless [`--import-cache type=registry,ref=...`](#registry-push-image-and-cache-separately) is provided.\n\nInline cache embeds cache metadata into the image config. The layers in the image will be left untouched compared to the image with no cache information.\n\n:information_source: Docker-integrated BuildKit (`DOCKER_BUILDKIT=1 docker build`) and `docker buildx`requires \n`--build-arg BUILDKIT_INLINE_CACHE=1` to be specified to enable the `inline` cache exporter.\nHowever, the standalone `buildctl` does NOT require `--opt build-arg:BUILDKIT_INLINE_CACHE=1` and the build-arg is simply ignored.\n\n#### Registry (push image and cache separately)\n\n```bash\nbuildctl build ... \\\n  --output type=image,name=localhost:5000/myrepo:image,push=true \\\n  --export-cache type=registry,ref=localhost:5000/myrepo:buildcache \\\n  --import-cache type=registry,ref=localhost:5000/myrepo:buildcache\n```\n\n`--export-cache` options:\n* `type=registry`\n* `mode=<min|max>`: specify cache layers to export (default: `min`)\n  * `min`: only export layers for the resulting image\n  * `max`: export all the layers of all intermediate steps\n* `ref=<ref>`: specify repository reference to store cache, e.g. `docker.io/user/image:tag`\n* `image-manifest=<true|false>`: whether to export cache manifest as an OCI-compatible image manifest rather than a manifest list/index (default: `false`, must be used with `oci-mediatypes=true`)\n* `oci-mediatypes=<true|false>`: whether to use OCI mediatypes in exported manifests (default: `true`, since BuildKit `v0.8`)\n* `compression=<uncompressed|gzip|estargz|zstd>`: choose compression type for layers newly created and cached, gzip is default value. estargz and zstd should be used with `oci-mediatypes=true`\n* `compression-level=<value>`: choose compression level for gzip, estargz (0-9) and zstd (0-22)\n* `force-compression=true`: forcibly apply `compression` option to all layers\n* `ignore-error=<false|true>`: specify if error is ignored in case cache export fails (default: `false`)\n\n`--import-cache` options:\n* `type=registry`\n* `ref=<ref>`: specify repository reference to retrieve cache from, e.g. `docker.io/user/image:tag`\n\n#### Local directory\n\n```bash\nbuildctl build ... --export-cache type=local,dest=path/to/output-dir\nbuildctl build ... --import-cache type=local,src=path/to/input-dir\n```\n\nThe directory layout conforms to OCI Image Spec v1.0.\n\n`--export-cache` options:\n* `type=local`\n* `mode=<min|max>`: specify cache layers to export (default: `min`)\n  * `min`: only export layers for the resulting image\n  * `max`: export all the layers of all intermediate steps\n* `dest=<path>`: destination directory for cache exporter\n* `tag=<tag>`: specify custom tag of image to write to local index (default: `latest`)\n* `image-manifest=<true|false>`: whether to export cache manifest as an OCI-compatible image manifest rather than a manifest list/index (default: `false`, must be used with `oci-mediatypes=true`)\n* `oci-mediatypes=<true|false>`: whether to use OCI mediatypes in exported manifests (default `true`, since BuildKit `v0.8`)\n* `compression=<uncompressed|gzip|estargz|zstd>`: choose compression type for layers newly created and cached, gzip is default value. estargz and zstd should be used with `oci-mediatypes=true`.\n* `compression-level=<value>`: compression level for gzip, estargz (0-9) and zstd (0-22)\n* `force-compression=true`: forcibly apply `compression` option to all layers\n* `ignore-error=<false|true>`: specify if error is ignored in case cache export fails (default: `false`)\n\n`--import-cache` options:\n* `type=local`\n* `src=<path>`: source directory for cache importer\n* `tag=<tag>`: specify custom tag of image to read from local index (default: `latest`)\n* `digest=sha256:<sha256digest>`: specify explicit digest of the manifest list to import\n\n#### GitHub Actions cache (experimental)\n\n```bash\nbuildctl build ... \\\n  --output type=image,name=docker.io/username/image,push=true \\\n  --export-cache type=gha \\\n  --import-cache type=gha\n```\n\nGitHub Actions cache saves both cache metadata and layers to GitHub's Cache service. This cache currently has a [size limit of 10GB](https://docs.github.com/en/actions/advanced-guides/caching-dependencies-to-speed-up-workflows#usage-limits-and-eviction-policy) that is shared across different caches in the repo. If you exceed this limit, GitHub will save your cache but will begin evicting caches until the total size is less than 10 GB. Recycling caches too often can result in slower runtimes overall.\n\nSimilarly to using [actions/cache](https://github.com/actions/cache), caches are [scoped by branch](https://docs.github.com/en/actions/advanced-guides/caching-dependencies-to-speed-up-workflows#restrictions-for-accessing-a-cache), with the default and target branches being available to every branch.\n\nFollowing attributes are required to authenticate against the [GitHub Actions Cache service API](https://github.com/tonistiigi/go-actions-cache/blob/master/api.md#authentication):\n* `url`: Cache server URL (default `$ACTIONS_CACHE_URL`)\n* `token`: Access token (default `$ACTIONS_RUNTIME_TOKEN`)\n\n:information_source: This type of cache can be used with [Docker Build Push Action](https://github.com/docker/build-push-action)\nwhere `url` and `token` will be automatically set. To use this backend in an inline `run` step, you have to include [crazy-max/ghaction-github-runtime](https://github.com/crazy-max/ghaction-github-runtime)\nin your workflow to expose the runtime.\n\n`--export-cache` options:\n* `type=gha`\n* `mode=<min|max>`: specify cache layers to export (default: `min`)\n  * `min`: only export layers for the resulting image\n  * `max`: export all the layers of all intermediate steps\n* `scope=<scope>`: which scope cache object belongs to (default `buildkit`)\n* `ignore-error=<false|true>`: specify if error is ignored in case cache export fails (default: `false`)\n* `timeout=<duration>`: sets the timeout duration for cache export (default: `10m`)\n\n`--import-cache` options:\n* `type=gha`\n* `scope=<scope>`: which scope cache object belongs to (default `buildkit`)\n* `timeout=<duration>`: sets the timeout duration for cache import (default: `10m`)\n\n#### S3 cache (experimental)\n\n```bash\nbuildctl build ... \\\n  --output type=image,name=docker.io/username/image,push=true \\\n  --export-cache type=s3,region=eu-west-1,bucket=my_bucket,name=my_image \\\n  --import-cache type=s3,region=eu-west-1,bucket=my_bucket,name=my_image\n```\n\nThe following attributes are required:\n* `bucket`: AWS S3 bucket (default: `$AWS_BUCKET`)\n* `region`: AWS region (default: `$AWS_REGION`)\n\nStorage locations:\n* blobs: `s3://<bucket>/<prefix><blobs_prefix>/<sha256>`, default: `s3://<bucket>/blobs/<sha256>`\n* manifests: `s3://<bucket>/<prefix><manifests_prefix>/<name>`, default: `s3://<bucket>/manifests/<name>`\n\nS3 configuration:\n* `blobs_prefix`: global prefix to store / read blobs on s3 (default: `blobs/`)\n* `manifests_prefix`: global prefix to store / read manifests on s3 (default: `manifests/`)\n* `endpoint_url`: specify a specific S3 endpoint (default: empty)\n* `use_path_style`: if set to `true`, put the bucket name in the URL instead of in the hostname (default: `false`)\n\nAWS Authentication:\n\nThe simplest way is to use an IAM Instance profile.\nOther options are:\n\n* Any system using environment variables / config files supported by the [AWS Go SDK](https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html). The configuration must be available for the buildkit daemon, not for the client.\n* Using the following attributes:\n  * `access_key_id`: Access Key ID\n  * `secret_access_key`: Secret Access Key\n  * `session_token`: Session Token\n\n`--export-cache` options:\n* `type=s3`\n* `mode=<min|max>`: specify cache layers to export (default: `min`)\n  * `min`: only export layers for the resulting image\n  * `max`: export all the layers of all intermediate steps\n* `prefix=<prefix>`: set global prefix to store / read files on s3 (default: empty)\n* `name=<manifest>`: specify name of the manifest to use (default `buildkit`)\n  * Multiple manifest names can be specified at the same time, separated by `;`. The standard use case is to use the git sha1 as name, and the branch name as duplicate, and load both with 2 `import-cache` commands.\n* `ignore-error=<false|true>`: specify if error is ignored in case cache export fails (default: `false`)\n* `touch_refresh=24h`: Instead of being uploaded again when not changed, blobs files will be \"touched\" on s3 every `touch_refresh`, default is 24h. Due to this, an expiration policy can be set on the S3 bucket to cleanup useless files automatically. Manifests files are systematically rewritten, there is no need to touch them.\n* `upload_parallelism=4`: This parameter changes the number of layers uploaded to s3 in parallel. Each individual layer is uploaded with 5 threads, using the Upload manager provided by the AWS SDK.\n\n`--import-cache` options:\n* `type=s3`\n* `prefix=<prefix>`: set global prefix to store / read files on s3 (default: empty)\n* `blobs_prefix=<prefix>`: set global prefix to store / read blobs on s3 (default: `blobs/`)\n* `manifests_prefix=<prefix>`: set global prefix to store / read manifests on s3 (default: `manifests/`)\n* `name=<manifest>`: name of the manifest to use (default `buildkit`)\n\n#### Azure Blob Storage cache (experimental)\n\n```bash\nbuildctl build ... \\\n  --output type=image,name=docker.io/username/image,push=true \\\n  --export-cache type=azblob,account_url=https://myaccount.blob.core.windows.net,name=my_image \\\n  --import-cache type=azblob,account_url=https://myaccount.blob.core.windows.net,name=my_image\n```\n\nThe following attributes are required:\n* `account_url`: The Azure Blob Storage account URL (default: `$BUILDKIT_AZURE_STORAGE_ACCOUNT_URL`)\n\nStorage locations:\n* blobs: `<account_url>/<container>/<prefix><blobs_prefix>/<sha256>`, default: `<account_url>/<container>/blobs/<sha256>`\n* manifests: `<account_url>/<container>/<prefix><manifests_prefix>/<name>`, default: `<account_url>/<container>/manifests/<name>`\n\nAzure Blob Storage configuration:\n* `container`: The Azure Blob Storage container name (default: `buildkit-cache` or `$BUILDKIT_AZURE_STORAGE_CONTAINER` if set)\n* `blobs_prefix`: Global prefix to store / read blobs on the Azure Blob Storage container (`<container>`) (default: `blobs/`)\n* `manifests_prefix`: Global prefix to store / read blobs on the Azure Blob Storage container (`<container>`) (default: `manifests/`)\n\nAzure Blob Storage authentication:\n\nThere are 2 options supported for Azure Blob Storage authentication:\n\n* Any system using environment variables supported by the [Azure SDK for Go](https://docs.microsoft.com/en-us/azure/developer/go/azure-sdk-authentication). The configuration must be available for the buildkit daemon, not for the client.\n* Secret Access Key, using the `secret_access_key` attribute to specify the primary or secondary account key for your Azure Blob Storage account. [Azure Blob Storage account keys](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage)\n\n> [!NOTE]\n> Account name can also be specified with `account_name` attribute (or `$BUILDKIT_AZURE_STORAGE_ACCOUNT_NAME`)\n> if it is not part of the account URL host.\n\n`--export-cache` options:\n* `type=azblob`\n* `mode=<min|max>`: specify cache layers to export (default: `min`)\n  * `min`: only export layers for the resulting image\n  * `max`: export all the layers of all intermediate steps\n* `prefix=<prefix>`: set global prefix to store / read files on the Azure Blob Storage container (`<container>`) (default: empty)\n* `name=<manifest>`: specify name of the manifest to use (default: `buildkit`)\n  * Multiple manifest names can be specified at the same time, separated by `;`. The standard use case is to use the git sha1 as name, and the branch name as duplicate, and load both with 2 `import-cache` commands.\n* `ignore-error=<false|true>`: specify if error is ignored in case cache export fails (default: `false`)\n\n`--import-cache` options:\n* `type=azblob`\n* `prefix=<prefix>`: set global prefix to store / read files on the Azure Blob Storage container (`<container>`) (default: empty)\n* `blobs_prefix=<prefix>`: set global prefix to store / read blobs on the Azure Blob Storage container (`<container>`) (default: `blobs/`)\n* `manifests_prefix=<prefix>`: set global prefix to store / read manifests on the Azure Blob Storage container (`<container>`) (default: `manifests/`)\n* `name=<manifest>`: name of the manifest to use (default: `buildkit`)\n\n### Consistent hashing\n\nIf you have multiple BuildKit daemon instances, but you don't want to use registry for sharing cache across the cluster,\nconsider client-side load balancing using consistent hashing.\n\nSee [`./examples/kubernetes/consistenthash`](./examples/kubernetes/consistenthash).\n\n## Metadata\n\nTo output build metadata such as the image digest, pass the `--metadata-file` flag.\nThe metadata will be written as a JSON object to the specified file.\nThe directory of the specified file must already exist and be writable.\n\n```bash\nbuildctl build ... --metadata-file metadata.json\n```\n\n```shell\njq '.' metadata.json\n```\n```json\n{\n  \"containerimage.config.digest\": \"sha256:2937f66a9722f7f4a2df583de2f8cb97fc9196059a410e7f00072fc918930e66\",\n  \"containerimage.descriptor\": {\n    \"annotations\": {\n      \"config.digest\": \"sha256:2937f66a9722f7f4a2df583de2f8cb97fc9196059a410e7f00072fc918930e66\",\n      \"org.opencontainers.image.created\": \"2022-02-08T21:28:03Z\"\n    },\n    \"digest\": \"sha256:19ffeab6f8bc9293ac2c3fdf94ebe28396254c993aea0b5a542cfb02e0883fa3\",\n    \"mediaType\": \"application/vnd.oci.image.manifest.v1+json\",\n    \"size\": 506\n  },\n  \"containerimage.digest\": \"sha256:19ffeab6f8bc9293ac2c3fdf94ebe28396254c993aea0b5a542cfb02e0883fa3\"\n}\n```\n\n## Systemd socket activation\n\nOn Systemd based systems, you can communicate with the daemon via [Systemd socket activation](http://0pointer.de/blog/projects/socket-activation.html), use `buildkitd --addr fd://`.\nYou can find examples of using Systemd socket activation with BuildKit and Systemd in [`./examples/systemd`](./examples/systemd).\n## Expose BuildKit as a TCP service\n\nThe `buildkitd` daemon can listen the gRPC API on a TCP socket.\n\nIt is highly recommended to create TLS certificates for both the daemon and the client (mTLS).\nEnabling TCP without mTLS is dangerous because the executor containers (aka Dockerfile `RUN` containers) can call BuildKit API as well.\n\n```bash\nbuildkitd \\\n  --addr tcp://0.0.0.0:1234 \\\n  --tlscacert /path/to/ca.pem \\\n  --tlscert /path/to/cert.pem \\\n  --tlskey /path/to/key.pem\n```\n\n```bash\nbuildctl \\\n  --addr tcp://example.com:1234 \\\n  --tlscacert /path/to/ca.pem \\\n  --tlscert /path/to/clientcert.pem \\\n  --tlskey /path/to/clientkey.pem \\\n  build ...\n```\n\n### Load balancing\n\n`buildctl build` can be called against randomly load balanced `buildkitd` daemons.\n\nSee also [Consistent hashing](#consistent-hashing) for client-side load balancing.\n\n## Containerizing BuildKit\n\nBuildKit can also be used by running the `buildkitd` daemon inside a Docker container and accessing it remotely.\n\nWe provide the container images as [`moby/buildkit`](https://hub.docker.com/r/moby/buildkit/tags/):\n\n-   `moby/buildkit:latest`: built from the latest regular [release](https://github.com/moby/buildkit/releases)\n-   `moby/buildkit:rootless`: same as `latest` but runs as an unprivileged user, see [`docs/rootless.md`](docs/rootless.md)\n-   `moby/buildkit:master`: built from the master branch\n-   `moby/buildkit:master-rootless`: same as master but runs as an unprivileged user, see [`docs/rootless.md`](docs/rootless.md)\n\nTo run daemon in a container:\n\n```bash\ndocker run -d --name buildkitd --privileged moby/buildkit:latest\nexport BUILDKIT_HOST=docker-container://buildkitd\nbuildctl build --help\n```\n\n### Podman\nTo connect to a BuildKit daemon running in a Podman container, use `podman-container://` instead of `docker-container://` .\n\n```bash\npodman run -d --name buildkitd --privileged moby/buildkit:latest\nbuildctl --addr=podman-container://buildkitd build --frontend dockerfile.v0 --local context=. --local dockerfile=. --output type=oci | podman load foo\n```\n\n`sudo` is not required.\n\n### Nerdctl\nTo connect to a BuildKit daemon running in a Nerdctl container, use `nerdctl-container://` instead of `docker-container://`.\n\n```bash\nnerdctl run -d --name buildkitd --privileged moby/buildkit:latest\nbuildctl --addr=nerdctl-container://buildkitd build --frontend dockerfile.v0 --local context=. --local dockerfile=. --output type=oci | nerdctl load\n```\n\n`sudo` is not required.\n\n### Kubernetes\n\nFor Kubernetes deployments, see [`examples/kubernetes`](./examples/kubernetes).\n\n### Daemonless\n\nTo run the client and an ephemeral daemon in a single container (\"daemonless mode\"):\n\n```bash\ndocker run \\\n    -it \\\n    --rm \\\n    --privileged \\\n    -v /path/to/dir:/tmp/work \\\n    --entrypoint buildctl-daemonless.sh \\\n    moby/buildkit:master \\\n        build \\\n        --frontend dockerfile.v0 \\\n        --local context=/tmp/work \\\n        --local dockerfile=/tmp/work\n```\n\nor\n\n```bash\ndocker run \\\n    -it \\\n    --rm \\\n    --security-opt seccomp=unconfined \\\n    --security-opt apparmor=unconfined \\\n    -e BUILDKITD_FLAGS=--oci-worker-no-process-sandbox \\\n    -v /path/to/dir:/tmp/work \\\n    --entrypoint buildctl-daemonless.sh \\\n    moby/buildkit:master-rootless \\\n        build \\\n        --frontend \\\n        dockerfile.v0 \\\n        --local context=/tmp/work \\\n        --local dockerfile=/tmp/work\n```\n\n## OpenTelemetry support\n\nBuildKit supports [OpenTelemetry](https://opentelemetry.io/) for buildkitd gRPC\nAPI and buildctl commands. To capture the trace to\n[Jaeger](https://github.com/jaegertracing/jaeger), set `JAEGER_TRACE`\nenvironment variable to the collection address.\n\n```bash\ndocker run -d -p6831:6831/udp -p16686:16686 jaegertracing/all-in-one:latest\nexport JAEGER_TRACE=0.0.0.0:6831\n# restart buildkitd and buildctl so they know JAEGER_TRACE\n# any buildctl command should be traced to http://127.0.0.1:16686/\n```\n\n> On Windows, if you are running Jaeger outside of a container, [`jaeger-all-in-one.exe`](https://www.jaegertracing.io/docs/1.57/getting-started/#all-in-one),\n> set the environment variable `setx -m JAEGER_TRACE \"0.0.0.0:6831\"`,\n> restart `buildkitd` in a new terminal and the traces will be collected automatically.\n\n## Running BuildKit without root privileges\n\nPlease refer to [`docs/rootless.md`](docs/rootless.md).\n\n## Building multi-platform images\n\nPlease refer to [`docs/multi-platform.md`](docs/multi-platform.md).\n\n### Configuring `buildctl`\n\n#### Color Output Controls\n\n`buildctl` has support for modifying the colors that are used to output information to the terminal. You can set the environment variable `BUILDKIT_COLORS` to something like `run=green:warning=yellow:error=red:cancel=255,165,0` to set the colors that you would like to use. Setting `NO_COLOR` to anything will disable any colorized output as recommended by [no-color.org](https://no-color.org/).\n\nParsing errors will be reported but ignored. This will result in default color values being used where needed.\n\n- [The list of pre-defined colors](https://github.com/moby/buildkit/blob/master/util/progress/progressui/colors.go).\n\n#### Number of log lines (for active steps in tty mode)\nYou can change how many log lines are visible for active steps in tty mode by setting `BUILDKIT_TTY_LOG_LINES` to a number (default: 6).\n\n## Contributing\n\nWant to contribute to BuildKit? Awesome! You can find information about contributing to this project in the [CONTRIBUTING.md](/.github/CONTRIBUTING.md)\n"
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "cache",
          "type": "tree",
          "content": null
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.296875,
          "content": "comment: false\n\ncoverage:\n  status:\n    project:  # settings affecting project coverage\n      default:\n        target: auto  # auto % coverage target\n        threshold: 1%  # allow for 1% reduction of coverage without failing\n    patch: off\n\ngithub_checks:\n  annotations: false\n\nignore:\n  - \"**/*.pb.go\"\n"
        },
        {
          "name": "control",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc.go",
          "type": "blob",
          "size": 0.0166015625,
          "content": "package buildkit\n"
        },
        {
          "name": "docker-bake.hcl",
          "type": "blob",
          "size": 7.6630859375,
          "content": "variable \"ALPINE_VERSION\" {\n  default = null\n}\n\nvariable \"GO_VERSION\" {\n  default = null\n}\n\nvariable \"NODE_VERSION\" {\n  default = null\n}\n\nvariable \"BUILDKITD_TAGS\" {\n  default = null\n}\n\nvariable \"HTTP_PROXY\" {\n  default = null\n}\n\nvariable \"HTTPS_PROXY\" {\n  default = null\n}\n\nvariable \"NO_PROXY\" {\n  default = null\n}\n\nvariable \"GOBUILDFLAGS\" {\n  default = null\n}\n\nvariable \"VERIFYFLAGS\" {\n  default = null\n}\n\nvariable \"CGO_ENABLED\" {\n  default = null\n}\n\nvariable \"GOLANGCI_LINT_MULTIPLATFORM\" {\n  default = null\n}\n\n# Defines the output folder\nvariable \"DESTDIR\" {\n  default = \"\"\n}\n\nvariable \"TEST_COVERAGE\" {\n  default = null\n}\n\nvariable \"TEST_IMAGE_NAME\" {\n  default = \"buildkit-tests\"\n}\n\nvariable \"TEST_CONTEXT\" {\n  default = \".\"\n  description = \"Context for building the test image\"\n}\n\nvariable \"TEST_BINARIES_CONTEXT\" {\n  default = TEST_CONTEXT\n  description = \"Context for building the buildkitd for test image\"\n}\n\nvariable \"BUILDKIT_SYNTAX\" {\n  default = null\n}\n\nfunction \"bindir\" {\n  params = [defaultdir]\n  result = DESTDIR != \"\" ? DESTDIR : \"./bin/${defaultdir}\"\n}\n\ntarget \"_common\" {\n  args = {\n    ALPINE_VERSION = ALPINE_VERSION\n    GO_VERSION = GO_VERSION\n    NODE_VERSION = NODE_VERSION\n    BUILDKITD_TAGS = BUILDKITD_TAGS\n    HTTP_PROXY = HTTP_PROXY\n    HTTPS_PROXY = HTTPS_PROXY\n    NO_PROXY = NO_PROXY\n    GOBUILDFLAGS = GOBUILDFLAGS\n    VERIFYFLAGS = VERIFYFLAGS\n    CGO_ENABLED = CGO_ENABLED\n    BUILDKIT_CONTEXT_KEEP_GIT_DIR = 1\n  }\n}\n\ngroup \"default\" {\n  targets = [\"binaries\"]\n}\n\ntarget \"binaries\" {\n  inherits = [\"_common\"]\n  target = \"binaries\"\n  output = [bindir(\"build\")]\n}\n\ntarget \"binaries-cross\" {\n  inherits = [\"binaries\"]\n  output = [bindir(\"cross\")]\n  platforms = [\n    \"darwin/amd64\",\n    \"darwin/arm64\",\n    \"linux/amd64\",\n    \"linux/arm/v7\",\n    \"linux/arm64\",\n    \"linux/s390x\",\n    \"linux/ppc64le\",\n    \"linux/riscv64\",\n    \"windows/amd64\",\n    \"windows/arm64\"\n  ]\n}\n\ntarget \"binaries-for-test\" {\n  inherits = [\"_common\"]\n  target = \"binaries-for-test\"\n  output = [bindir(\"build\")]\n}\n\ntarget \"release\" {\n  inherits = [\"binaries-cross\"]\n  target = \"release\"\n  output = [bindir(\"release\")]\n}\n\ntarget \"integration-tests-base\" {\n  inherits = [\"_common\"]\n  target = \"integration-tests-base\"\n  output = [\"type=cacheonly\"]\n}\n\ntarget \"integration-tests-binaries\" {\n  inherits = [\"_common\"]\n  target = \"binaries\"\n  context = TEST_BINARIES_CONTEXT\n}\n\ntarget \"integration-tests\" {\n  inherits = [\"integration-tests-base\"]\n  target = \"integration-tests\"\n  context = TEST_CONTEXT\n  contexts = TEST_CONTEXT != TEST_BINARIES_CONTEXT ? {\n    \"binaries\" = \"target:integration-tests-binaries\"\n  } : null\n  args = {\n    GOBUILDFLAGS = TEST_COVERAGE == \"1\" ? \"-cover\" : null\n    BUILDKIT_SYNTAX = BUILDKIT_SYNTAX\n  }\n  output = [\n    \"type=docker,name=${TEST_IMAGE_NAME}\",\n  ]\n}\n\ngroup \"validate\" {\n  targets = [\"lint\", \"validate-vendor\", \"validate-doctoc\", \"validate-dockerfile\", \"validate-generated-files\", \"validate-archutil\", \"validate-shfmt\", \"validate-docs\", \"validate-docs-dockerfile\"]\n}\n\ntarget \"lint\" {\n  name = \"lint-${buildtags.name}\"\n  inherits = [\"_common\"]\n  dockerfile = \"./hack/dockerfiles/lint.Dockerfile\"\n  output = [\"type=cacheonly\"]\n  target = buildtags.target\n  args = {\n    TARGETNAME = buildtags.name\n    BUILDTAGS = buildtags.tags\n  }\n  platforms = ( buildtags.target == \"golangci-lint\" || buildtags.name == \"gopls\" ) && GOLANGCI_LINT_MULTIPLATFORM != null ? [\n    \"freebsd/amd64\",\n    \"linux/amd64\",\n    \"linux/arm64\",\n    \"linux/s390x\",\n    \"linux/ppc64le\",\n    \"linux/riscv64\",\n    \"windows/amd64\",\n    \"windows/arm64\"\n  ] : []\n  matrix = {\n    buildtags = [\n      { name = \"default\", tags = \"\", target = \"golangci-lint\" },\n      { name = \"labs\", tags = \"dfrunsecurity dfparents dfexcludepatterns\", target = \"golangci-lint\" },\n      { name = \"nydus\", tags = \"nydus\", target = \"golangci-lint\" },\n      { name = \"yaml\", tags = \"\", target = \"yamllint\" },\n      { name = \"golangci-verify\", tags = \"\", target = \"golangci-verify\" },\n      { name = \"proto\", tags = \"\", target = \"protolint\" },\n      { name = \"gopls\", tags = \"\", target = \"gopls-analyze\" }\n    ]\n  }\n}\n\ntarget \"validate-vendor\" {\n  inherits = [\"_common\"]\n  dockerfile = \"./hack/dockerfiles/vendor.Dockerfile\"\n  target = \"validate\"\n  output = [\"type=cacheonly\"]\n}\n\ntarget \"validate-generated-files\" {\n  inherits = [\"_common\"]\n  dockerfile = \"./hack/dockerfiles/generated-files.Dockerfile\"\n  target = \"validate\"\n  output = [\"type=cacheonly\"]\n}\n\ntarget \"validate-archutil\" {\n  inherits = [\"_common\"]\n  dockerfile = \"./hack/dockerfiles/archutil.Dockerfile\"\n  target = \"validate\"\n  output = [\"type=cacheonly\"]\n}\n\ntarget \"validate-shfmt\" {\n  inherits = [\"_common\"]\n  dockerfile = \"./hack/dockerfiles/shfmt.Dockerfile\"\n  target = \"validate\"\n  output = [\"type=cacheonly\"]\n}\n\ntarget \"validate-doctoc\" {\n  inherits = [\"_common\"]\n  dockerfile = \"./hack/dockerfiles/doctoc.Dockerfile\"\n  target = \"validate-toc\"\n  output = [\"type=cacheonly\"]\n}\n\ntarget \"validate-authors\" {\n  inherits = [\"_common\"]\n  dockerfile = \"./hack/dockerfiles/authors.Dockerfile\"\n  target = \"validate\"\n  output = [\"type=cacheonly\"]\n}\n\ntarget \"validate-docs\" {\n  inherits = [\"_common\"]\n  dockerfile = \"./hack/dockerfiles/docs.Dockerfile\"\n  target = \"validate\"\n  output = [\"type=cacheonly\"]\n}\n\ntarget \"validate-docs-dockerfile\" {\n  inherits = [\"_common\"]\n  dockerfile = \"./hack/dockerfiles/docs-dockerfile.Dockerfile\"\n  target = \"validate\"\n  output = [\"type=cacheonly\"]\n}\n\ntarget \"validate-dockerfile\" {\n  matrix = {\n    dockerfile = [\n      \"Dockerfile\",\n      \"./hack/dockerfiles/archutil.Dockerfile\",\n      \"./hack/dockerfiles/authors.Dockerfile\",\n      \"./hack/dockerfiles/docs-dockerfile.Dockerfile\",\n      \"./hack/dockerfiles/docs.Dockerfile\",\n      \"./hack/dockerfiles/doctoc.Dockerfile\",\n      \"./hack/dockerfiles/generated-files.Dockerfile\",\n      \"./hack/dockerfiles/govulncheck.Dockerfile\",\n      \"./hack/dockerfiles/lint.Dockerfile\",\n      \"./hack/dockerfiles/shfmt.Dockerfile\",\n      \"./hack/dockerfiles/vendor.Dockerfile\",\n      \"./frontend/dockerfile/cmd/dockerfile-frontend/Dockerfile\",\n    ]\n  }\n  name = \"validate-dockerfile-${md5(dockerfile)}\"\n  inherits = [\"_common\"]\n  dockerfile = dockerfile\n  call = \"check\"\n}\n\ntarget \"vendor\" {\n  inherits = [\"_common\"]\n  dockerfile = \"./hack/dockerfiles/vendor.Dockerfile\"\n  target = \"update\"\n  output = [\".\"]\n}\n\ntarget \"generated-files\" {\n  inherits = [\"_common\"]\n  dockerfile = \"./hack/dockerfiles/generated-files.Dockerfile\"\n  target = \"update\"\n  output = [\".\"]\n}\n\ntarget \"archutil\" {\n  inherits = [\"_common\"]\n  dockerfile = \"./hack/dockerfiles/archutil.Dockerfile\"\n  target = \"update\"\n  output = [\"./util/archutil\"]\n}\n\ntarget \"shfmt\" {\n  inherits = [\"_common\"]\n  dockerfile = \"./hack/dockerfiles/shfmt.Dockerfile\"\n  target = \"update\"\n  output = [\".\"]\n}\n\ntarget \"doctoc\" {\n  inherits = [\"_common\"]\n  dockerfile = \"./hack/dockerfiles/doctoc.Dockerfile\"\n  target = \"update\"\n  output = [\".\"]\n}\n\ntarget \"authors\" {\n  inherits = [\"_common\"]\n  dockerfile = \"./hack/dockerfiles/authors.Dockerfile\"\n  target = \"update\"\n  output = [\".\"]\n}\n\ntarget \"docs\" {\n  inherits = [\"_common\"]\n  dockerfile = \"./hack/dockerfiles/docs.Dockerfile\"\n  target = \"update\"\n  output = [\"./docs\"]\n}\n\ntarget \"docs-dockerfile\" {\n  inherits = [\"_common\"]\n  dockerfile = \"./hack/dockerfiles/docs-dockerfile.Dockerfile\"\n  target = \"update\"\n  output = [\"./frontend/dockerfile/docs/rules\"]\n}\n\ntarget \"mod-outdated\" {\n  inherits = [\"_common\"]\n  dockerfile = \"./hack/dockerfiles/vendor.Dockerfile\"\n  target = \"outdated\"\n  no-cache-filter = [\"outdated\"]\n  output = [\"type=cacheonly\"]\n}\n\nvariable \"GOVULNCHECK_FORMAT\" {\n  default = null\n}\n\ntarget \"govulncheck\" {\n  inherits = [\"_common\"]\n  dockerfile = \"./hack/dockerfiles/govulncheck.Dockerfile\"\n  target = \"output\"\n  args = {\n    FORMAT = GOVULNCHECK_FORMAT\n  }\n  no-cache-filter = [\"run\"]\n  output = [\"${DESTDIR}\"]\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "errdefs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "executor",
          "type": "tree",
          "content": null
        },
        {
          "name": "exporter",
          "type": "tree",
          "content": null
        },
        {
          "name": "frontend",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 8.7109375,
          "content": "module github.com/moby/buildkit\n\ngo 1.22.0\n\nrequire (\n\tgithub.com/Azure/azure-sdk-for-go/sdk/azidentity v1.6.0\n\tgithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob v0.4.1\n\tgithub.com/Microsoft/go-winio v0.6.2\n\tgithub.com/Microsoft/hcsshim v0.12.8\n\tgithub.com/agext/levenshtein v1.2.3\n\tgithub.com/armon/circbuf v0.0.0-20190214190532-5111143e8da2\n\tgithub.com/aws/aws-sdk-go-v2 v1.24.1\n\tgithub.com/aws/aws-sdk-go-v2/config v1.26.6\n\tgithub.com/aws/aws-sdk-go-v2/credentials v1.16.16\n\tgithub.com/aws/aws-sdk-go-v2/feature/s3/manager v1.15.15\n\tgithub.com/aws/aws-sdk-go-v2/service/s3 v1.48.1\n\tgithub.com/containerd/console v1.0.4\n\tgithub.com/containerd/containerd v1.7.24\n\tgithub.com/containerd/containerd/api v1.7.19\n\tgithub.com/containerd/continuity v0.4.5\n\tgithub.com/containerd/errdefs v0.3.0\n\tgithub.com/containerd/fuse-overlayfs-snapshotter v1.0.8\n\tgithub.com/containerd/go-cni v1.1.10\n\tgithub.com/containerd/go-runc v1.1.0\n\tgithub.com/containerd/log v0.1.0\n\tgithub.com/containerd/nydus-snapshotter v0.14.0\n\tgithub.com/containerd/platforms v0.2.1\n\tgithub.com/containerd/stargz-snapshotter v0.15.1\n\tgithub.com/containerd/stargz-snapshotter/estargz v0.15.1\n\tgithub.com/containerd/typeurl/v2 v2.2.3\n\tgithub.com/containernetworking/plugins v1.4.0\n\tgithub.com/coreos/go-systemd/v22 v22.5.0\n\tgithub.com/distribution/reference v0.6.0\n\tgithub.com/docker/cli v27.4.1+incompatible\n\tgithub.com/docker/docker v27.4.1+incompatible\n\tgithub.com/docker/go-connections v0.5.0\n\tgithub.com/docker/go-units v0.5.0\n\tgithub.com/gofrs/flock v0.12.1\n\tgithub.com/golang/protobuf v1.5.4\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510\n\tgithub.com/hashicorp/go-cleanhttp v0.5.2\n\tgithub.com/hashicorp/go-immutable-radix/v2 v2.1.0\n\tgithub.com/hashicorp/go-multierror v1.1.1\n\tgithub.com/hashicorp/golang-lru/v2 v2.0.7\n\tgithub.com/in-toto/in-toto-golang v0.5.0\n\tgithub.com/klauspost/compress v1.17.11\n\tgithub.com/mitchellh/hashstructure/v2 v2.0.2\n\tgithub.com/moby/docker-image-spec v1.3.1\n\tgithub.com/moby/locker v1.0.1\n\tgithub.com/moby/patternmatcher v0.6.0\n\tgithub.com/moby/sys/mountinfo v0.7.2\n\tgithub.com/moby/sys/reexec v0.1.0\n\tgithub.com/moby/sys/signal v0.7.1\n\tgithub.com/moby/sys/user v0.3.0\n\tgithub.com/moby/sys/userns v0.1.0\n\tgithub.com/morikuni/aec v1.0.0\n\tgithub.com/opencontainers/go-digest v1.0.0\n\tgithub.com/opencontainers/image-spec v1.1.0\n\tgithub.com/opencontainers/runtime-spec v1.2.0\n\tgithub.com/opencontainers/selinux v1.11.1\n\tgithub.com/package-url/packageurl-go v0.1.1-0.20220428063043-89078438f170\n\tgithub.com/pelletier/go-toml v1.9.5\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/pkg/profile v1.7.0\n\tgithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10\n\tgithub.com/prometheus/client_golang v1.20.5\n\tgithub.com/prometheus/procfs v0.15.1\n\tgithub.com/serialx/hashring v0.0.0-20200727003509-22c0c7ab6b1b\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/spdx/tools-golang v0.5.3\n\tgithub.com/stretchr/testify v1.9.0\n\tgithub.com/tonistiigi/dchapes-mode v0.0.0-20241001053921-ca0759fec205\n\tgithub.com/tonistiigi/fsutil v0.0.0-20241121093142-31cf1f437184\n\tgithub.com/tonistiigi/go-actions-cache v0.0.0-20241210095730-017636a73805\n\tgithub.com/tonistiigi/go-archvariant v1.0.0\n\tgithub.com/tonistiigi/go-csvvalue v0.0.0-20240710180619-ddb21b71c0b4\n\tgithub.com/tonistiigi/units v0.0.0-20180711220420-6950e57a87ea\n\tgithub.com/tonistiigi/vt100 v0.0.0-20240514184818-90bafcd6abab\n\tgithub.com/urfave/cli v1.22.16\n\tgithub.com/vishvananda/netlink v1.3.0\n\tgo.etcd.io/bbolt v1.3.11\n\tgo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.53.0\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace v0.53.0\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0\n\tgo.opentelemetry.io/otel v1.28.0\n\tgo.opentelemetry.io/otel/exporters/jaeger v1.17.0\n\tgo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.28.0\n\tgo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.28.0\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.28.0\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.28.0\n\tgo.opentelemetry.io/otel/exporters/prometheus v0.42.0\n\tgo.opentelemetry.io/otel/sdk v1.28.0\n\tgo.opentelemetry.io/otel/sdk/metric v1.28.0\n\tgo.opentelemetry.io/otel/trace v1.28.0\n\tgo.opentelemetry.io/proto/otlp v1.3.1\n\tgolang.org/x/crypto v0.31.0\n\tgolang.org/x/exp v0.0.0-20240909161429-701f63a606c0\n\tgolang.org/x/mod v0.21.0\n\tgolang.org/x/net v0.29.0\n\tgolang.org/x/sync v0.10.0\n\tgolang.org/x/sys v0.28.0\n\tgolang.org/x/time v0.6.0\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240701130421-f6361c86f094\n\tgoogle.golang.org/grpc v1.66.3\n\tgoogle.golang.org/grpc/cmd/protoc-gen-go-grpc v1.5.1\n\tgoogle.golang.org/protobuf v1.35.1\n\tkernel.org/pub/linux/libs/security/libcap/cap v1.2.70\n)\n\nrequire (\n\tgithub.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24 // indirect\n\tgithub.com/AdamKorcz/go-118-fuzz-build v0.0.0-20230306123547-8075edf89bb0 // indirect\n\tgithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.11.1 // indirect\n\tgithub.com/Azure/azure-sdk-for-go/sdk/internal v1.8.0 // indirect\n\tgithub.com/AzureAD/microsoft-authentication-library-for-go v1.2.2 // indirect\n\tgithub.com/anchore/go-struct-converter v0.0.0-20221118182256-c68fdcfa2092 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.5.4 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.14.11 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/configsources v1.2.10 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.5.10 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/ini v1.7.3 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/v4a v1.2.10 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.10.4 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/checksum v1.2.10 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.10.10 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.16.10 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sso v1.18.7 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.21.7 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sts v1.26.7 // indirect\n\tgithub.com/aws/smithy-go v1.19.0 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/cenkalti/backoff/v4 v4.3.0 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/containerd/cgroups/v3 v3.0.3 // indirect\n\tgithub.com/containerd/fifo v1.1.0 // indirect\n\tgithub.com/containerd/ttrpc v1.2.5 // indirect\n\tgithub.com/containernetworking/cni v1.2.2 // indirect\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.5 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/dimchansky/utfbom v1.1.1 // indirect\n\tgithub.com/docker/docker-credential-helpers v0.8.2 // indirect\n\tgithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c // indirect\n\tgithub.com/docker/go-metrics v0.0.1 // indirect\n\tgithub.com/felixge/fgprof v0.9.3 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/go-logr/logr v1.4.2 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang-jwt/jwt/v5 v5.2.1 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/google/pprof v0.0.0-20240424215950-a892ee059fd6 // indirect\n\tgithub.com/google/uuid v1.6.0 // indirect\n\tgithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 // indirect\n\tgithub.com/hanwen/go-fuse/v2 v2.4.0 // indirect\n\tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n\tgithub.com/hashicorp/go-retryablehttp v0.7.7 // indirect\n\tgithub.com/jmespath/go-jmespath v0.4.0 // indirect\n\tgithub.com/kylelemons/godebug v1.1.0 // indirect\n\tgithub.com/moby/sys/mount v0.3.4 // indirect\n\tgithub.com/moby/sys/sequential v0.6.0 // indirect\n\tgithub.com/moby/term v0.5.0 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/prometheus/client_model v0.6.1 // indirect\n\tgithub.com/prometheus/common v0.55.0 // indirect\n\tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n\tgithub.com/secure-systems-lab/go-securesystemslib v0.4.0 // indirect\n\tgithub.com/shibumi/go-pathspec v1.3.0 // indirect\n\tgithub.com/vbatts/tar-split v0.11.5 // indirect\n\tgithub.com/vishvananda/netns v0.0.4 // indirect\n\tgo.opencensus.io v0.24.0 // indirect\n\tgo.opentelemetry.io/otel/metric v1.28.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgoogle.golang.org/genproto v0.0.0-20240123012728-ef4313101c80 // indirect\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20240701130421-f6361c86f094 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n\tkernel.org/pub/linux/libs/security/libcap/psx v1.2.70 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 53.625,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ngithub.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24 h1:bvDV9vkmnHYOMsOr4WLk+Vo07yKIzd94sVoIqshQ4bU=\ngithub.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24/go.mod h1:8o94RPi1/7XTJvwPpRSzSUedZrtlirdB3r9Z20bi2f8=\ngithub.com/AdamKorcz/go-118-fuzz-build v0.0.0-20230306123547-8075edf89bb0 h1:59MxjQVfjXsBpLy+dbd2/ELV5ofnUkUZBvWSC85sheA=\ngithub.com/AdamKorcz/go-118-fuzz-build v0.0.0-20230306123547-8075edf89bb0/go.mod h1:OahwfttHWG6eJ0clwcfBAHoDI6X/LV/15hx/wlMZSrU=\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.11.1 h1:E+OJmp2tPvt1W+amx48v1eqbjDYsgN+RzP4q16yV5eM=\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.11.1/go.mod h1:a6xsAQUZg+VsS3TJ05SRp524Hs4pZ/AeFSr5ENf0Yjo=\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity v1.6.0 h1:U2rTu3Ef+7w9FHKIAXM6ZyqF3UOWJZ12zIm8zECAFfg=\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity v1.6.0/go.mod h1:9kIvujWAA58nmPmWB1m23fyWic1kYZMxD9CxaWn4Qpg=\ngithub.com/Azure/azure-sdk-for-go/sdk/internal v1.8.0 h1:jBQA3cKT4L2rWMpgE7Yt3Hwh2aUj8KXjIGLxjHeYNNo=\ngithub.com/Azure/azure-sdk-for-go/sdk/internal v1.8.0/go.mod h1:4OG6tQ9EOP/MT0NMjDlRzWoVFxfu9rN9B2X+tlSVktg=\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob v0.4.1 h1:QSdcrd/UFJv6Bp/CfoVf2SrENpFn9P6Yh8yb+xNhYMM=\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob v0.4.1/go.mod h1:eZ4g6GUvXiGulfIbbhh1Xr4XwUYaYaWMqzGD/284wCA=\ngithub.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161 h1:L/gRVlceqvL25UVaW/CKtUDjefjrs0SPonmDGUVOYP0=\ngithub.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=\ngithub.com/AzureAD/microsoft-authentication-library-for-go v1.2.2 h1:XHOnouVk1mxXfQidrMEnLlPk9UMeRtyBTnEFtxkV0kU=\ngithub.com/AzureAD/microsoft-authentication-library-for-go v1.2.2/go.mod h1:wP83P5OoQ5p6ip3ScPr0BAq0BvuPAvacpEuSzyouqAI=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/toml v1.4.0/go.mod h1:ukJfTF/6rtPPRCnwkur4qwRxa8vTRFBF0uk2lLoLwho=\ngithub.com/Microsoft/go-winio v0.6.2 h1:F2VQgta7ecxGYO8k3ZZz3RS8fVIXVxONVUPlNERoyfY=\ngithub.com/Microsoft/go-winio v0.6.2/go.mod h1:yd8OoFMLzJbo9gZq8j5qaps8bJ9aShtEA8Ipt1oGCvU=\ngithub.com/Microsoft/hcsshim v0.12.8 h1:BtDWYlFMcWhorrvSSo2M7z0csPdw6t7no/C3FsSvqiI=\ngithub.com/Microsoft/hcsshim v0.12.8/go.mod h1:cibQ4BqhJ32FXDwPdQhKhwrwophnh3FuT4nwQZF907w=\ngithub.com/agext/levenshtein v1.2.3 h1:YB2fHEn0UJagG8T1rrWknE3ZQzWM06O8AMAatNn7lmo=\ngithub.com/agext/levenshtein v1.2.3/go.mod h1:JEDfjyjHDjOF/1e4FlBE/PkbqA9OfWu2ki2W0IB5558=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/anchore/go-struct-converter v0.0.0-20221118182256-c68fdcfa2092 h1:aM1rlcoLz8y5B2r4tTLMiVTrMtpfY0O8EScKJxaSaEc=\ngithub.com/anchore/go-struct-converter v0.0.0-20221118182256-c68fdcfa2092/go.mod h1:rYqSE9HbjzpHTI74vwPvae4ZVYZd1lue2ta6xHPdblA=\ngithub.com/armon/circbuf v0.0.0-20190214190532-5111143e8da2 h1:7Ip0wMmLHLRJdrloDxZfhMm0xrLXZS8+COSu2bXmEQs=\ngithub.com/armon/circbuf v0.0.0-20190214190532-5111143e8da2/go.mod h1:3U/XgcO3hCbHZ8TKRvWD2dDTCfh9M9ya+I9JpbB7O8o=\ngithub.com/aws/aws-sdk-go-v2 v1.24.1 h1:xAojnj+ktS95YZlDf0zxWBkbFtymPeDP+rvUQIH3uAU=\ngithub.com/aws/aws-sdk-go-v2 v1.24.1/go.mod h1:LNh45Br1YAkEKaAqvmE1m8FUx6a5b/V0oAKV7of29b4=\ngithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.5.4 h1:OCs21ST2LrepDfD3lwlQiOqIGp6JiEUqG84GzTDoyJs=\ngithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.5.4/go.mod h1:usURWEKSNNAcAZuzRn/9ZYPT8aZQkR7xcCtunK/LkJo=\ngithub.com/aws/aws-sdk-go-v2/config v1.26.6 h1:Z/7w9bUqlRI0FFQpetVuFYEsjzE3h7fpU6HuGmfPL/o=\ngithub.com/aws/aws-sdk-go-v2/config v1.26.6/go.mod h1:uKU6cnDmYCvJ+pxO9S4cWDb2yWWIH5hra+32hVh1MI4=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.16.16 h1:8q6Rliyv0aUFAVtzaldUEcS+T5gbadPbWdV1WcAddK8=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.16.16/go.mod h1:UHVZrdUsv63hPXFo1H7c5fEneoVo9UXiz36QG1GEPi0=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.14.11 h1:c5I5iH+DZcH3xOIMlz3/tCKJDaHFwYEmxvlh2fAcFo8=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.14.11/go.mod h1:cRrYDYAMUohBJUtUnOhydaMHtiK/1NZ0Otc9lIb6O0Y=\ngithub.com/aws/aws-sdk-go-v2/feature/s3/manager v1.15.15 h1:2MUXyGW6dVaQz6aqycpbdLIH1NMcUI6kW6vQ0RabGYg=\ngithub.com/aws/aws-sdk-go-v2/feature/s3/manager v1.15.15/go.mod h1:aHbhbR6WEQgHAiRj41EQ2W47yOYwNtIkWTXmcAtYqj8=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.2.10 h1:vF+Zgd9s+H4vOXd5BMaPWykta2a6Ih0AKLq/X6NYKn4=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.2.10/go.mod h1:6BkRjejp/GR4411UGqkX8+wFMbFbqsUIimfK4XjOKR4=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.5.10 h1:nYPe006ktcqUji8S2mqXf9c/7NdiKriOwMvWQHgYztw=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.5.10/go.mod h1:6UV4SZkVvmODfXKql4LCbaZUpF7HO2BX38FgBf9ZOLw=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.7.3 h1:n3GDfwqF2tzEkXlv5cuy4iy7LpKDtqDMcNLfZDu9rls=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.7.3/go.mod h1:6fQQgfuGmw8Al/3M2IgIllycxV7ZW7WCdVSqfBeUiCY=\ngithub.com/aws/aws-sdk-go-v2/internal/v4a v1.2.10 h1:5oE2WzJE56/mVveuDZPJESKlg/00AaS2pY2QZcnxg4M=\ngithub.com/aws/aws-sdk-go-v2/internal/v4a v1.2.10/go.mod h1:FHbKWQtRBYUz4vO5WBWjzMD2by126ny5y/1EoaWoLfI=\ngithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.10.4 h1:/b31bi3YVNlkzkBrm9LfpaKoaYZUxIAj4sHfOTmLfqw=\ngithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.10.4/go.mod h1:2aGXHFmbInwgP9ZfpmdIfOELL79zhdNYNmReK8qDfdQ=\ngithub.com/aws/aws-sdk-go-v2/service/internal/checksum v1.2.10 h1:L0ai8WICYHozIKK+OtPzVJBugL7culcuM4E4JOpIEm8=\ngithub.com/aws/aws-sdk-go-v2/service/internal/checksum v1.2.10/go.mod h1:byqfyxJBshFk0fF9YmK0M0ugIO8OWjzH2T3bPG4eGuA=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.10.10 h1:DBYTXwIGQSGs9w4jKm60F5dmCQ3EEruxdc0MFh+3EY4=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.10.10/go.mod h1:wohMUQiFdzo0NtxbBg0mSRGZ4vL3n0dKjLTINdcIino=\ngithub.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.16.10 h1:KOxnQeWy5sXyS37fdKEvAsGHOr9fa/qvwxfJurR/BzE=\ngithub.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.16.10/go.mod h1:jMx5INQFYFYB3lQD9W0D8Ohgq6Wnl7NYOJ2TQndbulI=\ngithub.com/aws/aws-sdk-go-v2/service/s3 v1.48.1 h1:5XNlsBsEvBZBMO6p82y+sqpWg8j5aBCe+5C2GBFgqBQ=\ngithub.com/aws/aws-sdk-go-v2/service/s3 v1.48.1/go.mod h1:4qXHrG1Ne3VGIMZPCB8OjH/pLFO94sKABIusjh0KWPU=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.18.7 h1:eajuO3nykDPdYicLlP3AGgOyVN3MOlFmZv7WGTuJPow=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.18.7/go.mod h1:+mJNDdF+qiUlNKNC3fxn74WWNN+sOiGOEImje+3ScPM=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.21.7 h1:QPMJf+Jw8E1l7zqhZmMlFw6w1NmfkfiSK8mS4zOx3BA=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.21.7/go.mod h1:ykf3COxYI0UJmxcfcxcVuz7b6uADi1FkiUz6Eb7AgM8=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.26.7 h1:NzO4Vrau795RkUdSHKEwiR01FaGzGOH1EETJ+5QHnm0=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.26.7/go.mod h1:6h2YuIoxaMSCFf5fi1EgZAwdfkGMgDY+DVfa61uLe4U=\ngithub.com/aws/smithy-go v1.19.0 h1:KWFKQV80DpP3vJrrA9sVAHQ5gc2z8i4EzrLhLlWXcBM=\ngithub.com/aws/smithy-go v1.19.0/go.mod h1:NukqUGpCZIILqqiV0NIjeFh24kd/FAa4beRb6nbIUPE=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=\ngithub.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\ngithub.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\ngithub.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=\ngithub.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=\ngithub.com/containerd/cgroups/v3 v3.0.3 h1:S5ByHZ/h9PMe5IOQoN7E+nMc2UcLEM/V48DGDJ9kip0=\ngithub.com/containerd/cgroups/v3 v3.0.3/go.mod h1:8HBe7V3aWGLFPd/k03swSIsGjZhHI2WzJmticMgVuz0=\ngithub.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=\ngithub.com/containerd/console v1.0.4/go.mod h1:YynlIjWYF8myEu6sdkwKIvGQq+cOckRm6So2avqoYAk=\ngithub.com/containerd/containerd v1.7.24 h1:zxszGrGjrra1yYJW/6rhm9cJ1ZQ8rkKBR48brqsa7nA=\ngithub.com/containerd/containerd v1.7.24/go.mod h1:7QUzfURqZWCZV7RLNEn1XjUCQLEf0bkaK4GjUaZehxw=\ngithub.com/containerd/containerd/api v1.7.19 h1:VWbJL+8Ap4Ju2mx9c9qS1uFSB1OVYr5JJrW2yT5vFoA=\ngithub.com/containerd/containerd/api v1.7.19/go.mod h1:fwGavl3LNwAV5ilJ0sbrABL44AQxmNjDRcwheXDb6Ig=\ngithub.com/containerd/continuity v0.4.5 h1:ZRoN1sXq9u7V6QoHMcVWGhOwDFqZ4B9i5H6un1Wh0x4=\ngithub.com/containerd/continuity v0.4.5/go.mod h1:/lNJvtJKUQStBzpVQ1+rasXO1LAWtUQssk28EZvJ3nE=\ngithub.com/containerd/errdefs v0.3.0 h1:FSZgGOeK4yuT/+DnF07/Olde/q4KBoMsaamhXxIMDp4=\ngithub.com/containerd/errdefs v0.3.0/go.mod h1:+YBYIdtsnF4Iw6nWZhJcqGSg/dwvV7tyJ/kCkyJ2k+M=\ngithub.com/containerd/fifo v1.1.0 h1:4I2mbh5stb1u6ycIABlBw9zgtlK8viPI9QkQNRQEEmY=\ngithub.com/containerd/fifo v1.1.0/go.mod h1:bmC4NWMbXlt2EZ0Hc7Fx7QzTFxgPID13eH0Qu+MAb2o=\ngithub.com/containerd/fuse-overlayfs-snapshotter v1.0.8 h1:O471INHO59/fnSVE+B+THGjvRA2d1K6/FdpUuhNnXwk=\ngithub.com/containerd/fuse-overlayfs-snapshotter v1.0.8/go.mod h1:mY+oK2oQhlUk6hP5HNG28/OK9oqQpB2wK1w6sudC5gQ=\ngithub.com/containerd/go-cni v1.1.10 h1:c2U73nld7spSWfiJwSh/8W9DK+/qQwYM2rngIhCyhyg=\ngithub.com/containerd/go-cni v1.1.10/go.mod h1:/Y/sL8yqYQn1ZG1om1OncJB1W4zN3YmjfP/ShCzG/OY=\ngithub.com/containerd/go-runc v1.1.0 h1:OX4f+/i2y5sUT7LhmcJH7GYrjjhHa1QI4e8yO0gGleA=\ngithub.com/containerd/go-runc v1.1.0/go.mod h1:xJv2hFF7GvHtTJd9JqTS2UVxMkULUYw4JN5XAUZqH5U=\ngithub.com/containerd/log v0.1.0 h1:TCJt7ioM2cr/tfR8GPbGf9/VRAX8D2B4PjzCpfX540I=\ngithub.com/containerd/log v0.1.0/go.mod h1:VRRf09a7mHDIRezVKTRCrOq78v577GXq3bSa3EhrzVo=\ngithub.com/containerd/nydus-snapshotter v0.14.0 h1:6/eAi6d7MjaeLLuMO8Udfe5GVsDudmrDNO4SGETMBco=\ngithub.com/containerd/nydus-snapshotter v0.14.0/go.mod h1:TT4jv2SnIDxEBu4H2YOvWQHPOap031ydTaHTuvc5VQk=\ngithub.com/containerd/platforms v0.2.1 h1:zvwtM3rz2YHPQsF2CHYM8+KtB5dvhISiXh5ZpSBQv6A=\ngithub.com/containerd/platforms v0.2.1/go.mod h1:XHCb+2/hzowdiut9rkudds9bE5yJ7npe7dG/wG+uFPw=\ngithub.com/containerd/stargz-snapshotter v0.15.1 h1:fpsP4kf/Z4n2EYnU0WT8ZCE3eiKDwikDhL6VwxIlgeA=\ngithub.com/containerd/stargz-snapshotter v0.15.1/go.mod h1:74D+J1m1RMXytLmWxegXWhtOSRHPWZKpKc2NdK3S+us=\ngithub.com/containerd/stargz-snapshotter/estargz v0.15.1 h1:eXJjw9RbkLFgioVaTG+G/ZW/0kEe2oEKCdS/ZxIyoCU=\ngithub.com/containerd/stargz-snapshotter/estargz v0.15.1/go.mod h1:gr2RNwukQ/S9Nv33Lt6UC7xEx58C+LHRdoqbEKjz1Kk=\ngithub.com/containerd/ttrpc v1.2.5 h1:IFckT1EFQoFBMG4c3sMdT8EP3/aKfumK1msY+Ze4oLU=\ngithub.com/containerd/ttrpc v1.2.5/go.mod h1:YCXHsb32f+Sq5/72xHubdiJRQY9inL4a4ZQrAbN1q9o=\ngithub.com/containerd/typeurl/v2 v2.2.3 h1:yNA/94zxWdvYACdYO8zofhrTVuQY73fFU1y++dYSw40=\ngithub.com/containerd/typeurl/v2 v2.2.3/go.mod h1:95ljDnPfD3bAbDJRugOiShd/DlAAsxGtUBhJxIn7SCk=\ngithub.com/containernetworking/cni v1.2.2 h1:9IbP6KJQQxVKo4hhnm8r50YcVKrJbJu3Dqw+Rbt1vYk=\ngithub.com/containernetworking/cni v1.2.2/go.mod h1:DuLgF+aPd3DzcTQTtp/Nvl1Kim23oFKdm2okJzBQA5M=\ngithub.com/containernetworking/plugins v1.4.0 h1:+w22VPYgk7nQHw7KT92lsRmuToHvb7wwSv9iTbXzzic=\ngithub.com/containernetworking/plugins v1.4.0/go.mod h1:UYhcOyjefnrQvKvmmyEKsUA+M9Nfn7tqULPpH0Pkcj0=\ngithub.com/coreos/go-systemd/v22 v22.5.0 h1:RrqgGjYQKalulkV8NGVIfkXQf6YYmOyiJKk8iXXhfZs=\ngithub.com/coreos/go-systemd/v22 v22.5.0/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.5 h1:ZtcqGrnekaHpVLArFSe4HK5DoKx1T0rq2DwVB0alcyc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.5/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dimchansky/utfbom v1.1.1 h1:vV6w1AhK4VMnhBno/TPVCoK9U/LP0PkLCS9tbxHdi/U=\ngithub.com/dimchansky/utfbom v1.1.1/go.mod h1:SxdoEBH5qIqFocHMyGOXVAybYJdr71b1Q/j0mACtrfE=\ngithub.com/distribution/reference v0.6.0 h1:0IXCQ5g4/QMHHkarYzh5l+u8T3t73zM5QvfrDyIgxBk=\ngithub.com/distribution/reference v0.6.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=\ngithub.com/docker/cli v27.4.1+incompatible h1:VzPiUlRJ/xh+otB75gva3r05isHMo5wXDfPRi5/b4hI=\ngithub.com/docker/cli v27.4.1+incompatible/go.mod h1:JLrzqnKDaYBop7H2jaqPtU4hHvMKP+vjCwu2uszcLI8=\ngithub.com/docker/docker v27.4.1+incompatible h1:ZJvcY7gfwHn1JF48PfbyXg7Jyt9ZCWDW+GGXOIxEwp4=\ngithub.com/docker/docker v27.4.1+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\ngithub.com/docker/docker-credential-helpers v0.8.2 h1:bX3YxiGzFP5sOXWc3bTPEXdEaZSeVMrFgOr3T+zrFAo=\ngithub.com/docker/docker-credential-helpers v0.8.2/go.mod h1:P3ci7E3lwkZg6XiHdRKft1KckHiO9a2rNtyFbZ/ry9M=\ngithub.com/docker/go-connections v0.5.0 h1:USnMq7hx7gwdVZq1L49hLXaFtUdTADjXGp+uj1Br63c=\ngithub.com/docker/go-connections v0.5.0/go.mod h1:ov60Kzw0kKElRwhNs9UlUHAE/F9Fe6GLaXnqyDdmEXc=\ngithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c h1:+pKlWGMw7gf6bQ+oDZB4KHQFypsfjYlq/C4rfL7D3g8=\ngithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c/go.mod h1:Uw6UezgYA44ePAFQYUehOuCzmy5zmg/+nl2ZfMWGkpA=\ngithub.com/docker/go-metrics v0.0.1 h1:AgB/0SvBxihN0X8OR4SjsblXkbMvalQ8cjmtKQ2rQV8=\ngithub.com/docker/go-metrics v0.0.1/go.mod h1:cG1hvH2utMXtqgqqYE9plW6lDxS3/5ayHzueweSI3Vw=\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/fatih/color v1.16.0 h1:zmkK9Ngbjj+K0yRhTVONQh1p/HknKYSlNT+vZCzyokM=\ngithub.com/fatih/color v1.16.0/go.mod h1:fL2Sau1YI5c0pdGEVCbKQbLXB6edEj1ZgiY4NijnWvE=\ngithub.com/felixge/fgprof v0.9.3 h1:VvyZxILNuCiUCSXtPtYmmtGvb65nqXh2QFWc0Wpf2/g=\ngithub.com/felixge/fgprof v0.9.3/go.mod h1:RdbpDgzqYVh/T9fPELJyV7EYJuHB55UTEULNun8eiPw=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 h1:tfuBGBXKqDEevZMzYi5KSi8KkcZtzBcTgAUUtapy0OI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0 h1:sUs3vkvUymDpBKi3qH1YSqBQk9+9D/8M2mN1vB6EwHI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0/go.mod h1:W848ghGpv3Qj3dhTPRyJypKRiqCdHZiAzKg9hl15HA8=\ngithub.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/gofrs/flock v0.12.1 h1:MTLVXXHf8ekldpJk3AKicLij9MdwOWkZ+a/jHHZby9E=\ngithub.com/gofrs/flock v0.12.1/go.mod h1:9zxTsyu5xtJ9DK+1tFZyibEV7y3uwDxPPfbxeeHCoD0=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang-jwt/jwt/v5 v5.2.1 h1:OuVbFODueb089Lh128TAcimifWaLhJwVflnrgM17wHk=\ngithub.com/golang-jwt/jwt/v5 v5.2.1/go.mod h1:pqrtFR0X4osieyHYxtmOUWsAWrfe1Q5UVIyoH402zdk=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/pprof v0.0.0-20211214055906-6f57359322fd/go.mod h1:KgnwoLYCZ8IQu3XUZ8Nc/bM9CCZFOyjUNOSygVozoDg=\ngithub.com/google/pprof v0.0.0-20240424215950-a892ee059fd6 h1:k7nVchz72niMH6YLQNvHSdIE7iqsQxK1P41mySCvssg=\ngithub.com/google/pprof v0.0.0-20240424215950-a892ee059fd6/go.mod h1:kf6iHlnVGwgKolg33glAes7Yg/8iWP8ukqeldJSO7jw=\ngithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510 h1:El6M4kTTCOh6aBiKaUGG7oYTSPP8MxqL4YI3kZKwcP4=\ngithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510/go.mod h1:pupxD2MaaD3pAXIBCelhxNneeOaAeabZDe5s4K6zSpQ=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 h1:bkypFPDjIYGfCYD5mRBvpqxfYX1YCS1PXdKYWi8FsN0=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0/go.mod h1:P+Lt/0by1T8bfcF3z737NnSbmxQAppXMRziHUxPOC8k=\ngithub.com/hanwen/go-fuse/v2 v2.4.0 h1:12OhD7CkXXQdvxG2osIdBQLdXh+nmLXY9unkUIe/xaU=\ngithub.com/hanwen/go-fuse/v2 v2.4.0/go.mod h1:xKwi1cF7nXAOBCXujD5ie0ZKsxc8GGSA1rlMJc+8IJs=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=\ngithub.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-cleanhttp v0.5.2 h1:035FKYIWjmULyFRBKPs8TBQoi0x6d9G4xc9neXJWAZQ=\ngithub.com/hashicorp/go-cleanhttp v0.5.2/go.mod h1:kO/YDlP8L1346E6Sodw+PrpBSV4/SoxCXGY6BqNFT48=\ngithub.com/hashicorp/go-hclog v1.6.3 h1:Qr2kF+eVWjTiYmU7Y31tYlP1h0q/X3Nl3tPGdaB11/k=\ngithub.com/hashicorp/go-hclog v1.6.3/go.mod h1:W4Qnvbt70Wk/zYJryRzDRU/4r0kIg0PVHBcfoyhpF5M=\ngithub.com/hashicorp/go-immutable-radix/v2 v2.1.0 h1:CUW5RYIcysz+D3B+l1mDeXrQ7fUvGGCwJfdASSzbrfo=\ngithub.com/hashicorp/go-immutable-radix/v2 v2.1.0/go.mod h1:hgdqLXA4f6NIjRVisM1TJ9aOJVNRqKZj+xDGF6m7PBw=\ngithub.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\ngithub.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\ngithub.com/hashicorp/go-retryablehttp v0.7.7 h1:C8hUCYzor8PIfXHa4UrZkU4VvK8o9ISHxT2Q8+VepXU=\ngithub.com/hashicorp/go-retryablehttp v0.7.7/go.mod h1:pkQpWZeYWskR+D1tR2O5OcBFOxfA7DoAO6xtkuQnHTk=\ngithub.com/hashicorp/go-uuid v1.0.3 h1:2gKiV6YVmrJ1i2CKKa9obLvRieoRGviZFL26PcT/Co8=\ngithub.com/hashicorp/go-uuid v1.0.3/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7 h1:a+bsQ5rvGLjzHuww6tVxozPZFVghXaHOwFs4luLUK2k=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7/go.mod h1:QeFd9opnmA6QUJc5vARoKUSoFhyfM2/ZepoAG6RGpeM=\ngithub.com/ianlancetaylor/demangle v0.0.0-20210905161508-09a460cdf81d/go.mod h1:aYm2/VgdVmcIU8iMfdMvDMsRAQjcfZSKFby6HOFvi/w=\ngithub.com/in-toto/in-toto-golang v0.5.0 h1:hb8bgwr0M2hGdDsLjkJ3ZqJ8JFLL/tgYdAxF/XEFBbY=\ngithub.com/in-toto/in-toto-golang v0.5.0/go.mod h1:/Rq0IZHLV7Ku5gielPT4wPHJfH1GdHMCq8+WPxw8/BE=\ngithub.com/jmespath/go-jmespath v0.4.0 h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=\ngithub.com/jmespath/go-jmespath v0.4.0/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1 h1:shLQSRRSCCPj3f2gpwzGwWFoC7ycTf1rcQZHOlsJ6N8=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1/go.mod h1:L3OGu8Wl2/fWfCI6z80xFu9LTZmf1ZRjMHUOPmWr69U=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.7/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/compress v1.17.11 h1:In6xLpyWOi1+C7tXUUWv2ot1QvBjxevKAaI6IXrJmUc=\ngithub.com/klauspost/compress v1.17.11/go.mod h1:pMDklpSncoRMuLFrf1W9Ss9KT+0rH90U12bZKk7uwG0=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v0.0.0-20170820004349-d65d576e9348/go.mod h1:B69LEHPfb2qLo0BaaOLcbitczOKLWTsrBG9LczfCD4k=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/mitchellh/hashstructure/v2 v2.0.2 h1:vGKWl0YJqUNxE8d+h8f6NJLcCJrgbhC4NcD46KavDd4=\ngithub.com/mitchellh/hashstructure/v2 v2.0.2/go.mod h1:MG3aRVU/N29oo/V/IhBX8GR/zz4kQkprJgF2EVszyDE=\ngithub.com/moby/docker-image-spec v1.3.1 h1:jMKff3w6PgbfSa69GfNg+zN/XLhfXJGnEx3Nl2EsFP0=\ngithub.com/moby/docker-image-spec v1.3.1/go.mod h1:eKmb5VW8vQEh/BAr2yvVNvuiJuY6UIocYsFu/DxxRpo=\ngithub.com/moby/locker v1.0.1 h1:fOXqR41zeveg4fFODix+1Ch4mj/gT0NE1XJbp/epuBg=\ngithub.com/moby/locker v1.0.1/go.mod h1:S7SDdo5zpBK84bzzVlKr2V0hz+7x9hWbYC/kq7oQppc=\ngithub.com/moby/patternmatcher v0.6.0 h1:GmP9lR19aU5GqSSFko+5pRqHi+Ohk1O69aFiKkVGiPk=\ngithub.com/moby/patternmatcher v0.6.0/go.mod h1:hDPoyOpDY7OrrMDLaYoY3hf52gNCR/YOUYxkhApJIxc=\ngithub.com/moby/sys/mount v0.3.4 h1:yn5jq4STPztkkzSKpZkLcmjue+bZJ0u2AuQY1iNI1Ww=\ngithub.com/moby/sys/mount v0.3.4/go.mod h1:KcQJMbQdJHPlq5lcYT+/CjatWM4PuxKe+XLSVS4J6Os=\ngithub.com/moby/sys/mountinfo v0.6.2/go.mod h1:IJb6JQeOklcdMU9F5xQ8ZALD+CUr5VlGpwtX+VE0rpI=\ngithub.com/moby/sys/mountinfo v0.7.2 h1:1shs6aH5s4o5H2zQLn796ADW1wMrIwHsyJ2v9KouLrg=\ngithub.com/moby/sys/mountinfo v0.7.2/go.mod h1:1YOa8w8Ih7uW0wALDUgT1dTTSBrZ+HiBLGws92L2RU4=\ngithub.com/moby/sys/reexec v0.1.0 h1:RrBi8e0EBTLEgfruBOFcxtElzRGTEUkeIFaVXgU7wok=\ngithub.com/moby/sys/reexec v0.1.0/go.mod h1:EqjBg8F3X7iZe5pU6nRZnYCMUTXoxsjiIfHup5wYIN8=\ngithub.com/moby/sys/sequential v0.6.0 h1:qrx7XFUd/5DxtqcoH1h438hF5TmOvzC/lspjy7zgvCU=\ngithub.com/moby/sys/sequential v0.6.0/go.mod h1:uyv8EUTrca5PnDsdMGXhZe6CCe8U/UiTWd+lL+7b/Ko=\ngithub.com/moby/sys/signal v0.7.1 h1:PrQxdvxcGijdo6UXXo/lU/TvHUWyPhj7UOpSo8tuvk0=\ngithub.com/moby/sys/signal v0.7.1/go.mod h1:Se1VGehYokAkrSQwL4tDzHvETwUZlnY7S5XtQ50mQp8=\ngithub.com/moby/sys/user v0.3.0 h1:9ni5DlcW5an3SvRSx4MouotOygvzaXbaSrc/wGDFWPo=\ngithub.com/moby/sys/user v0.3.0/go.mod h1:bG+tYYYJgaMtRKgEmuueC0hJEAZWwtIbZTB+85uoHjs=\ngithub.com/moby/sys/userns v0.1.0 h1:tVLXkFOxVu9A64/yh59slHVv9ahO9UIev4JZusOLG/g=\ngithub.com/moby/sys/userns v0.1.0/go.mod h1:IHUYgu/kao6N8YZlp9Cf444ySSvCmDlmzUcYfDHOl28=\ngithub.com/moby/term v0.5.0 h1:xt8Q1nalod/v7BqbG21f8mQPqH+xAaC9C3N3wfWbVP0=\ngithub.com/moby/term v0.5.0/go.mod h1:8FzsFHVUBGZdbDsJw/ot+X+d5HLUbvklYLJ9uGfcI3Y=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/morikuni/aec v1.0.0 h1:nP9CBfwrvYnBRgY6qfDQkygYDmYwOilePFkwzv4dU8A=\ngithub.com/morikuni/aec v1.0.0/go.mod h1:BbKIizmSmc5MMPqRYbxO4ZU0S0+P200+tUnFx7PXmsc=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/onsi/ginkgo/v2 v2.19.0 h1:9Cnnf7UHo57Hy3k6/m5k3dRfGTMXGvxhHFvkDTCTpvA=\ngithub.com/onsi/ginkgo/v2 v2.19.0/go.mod h1:rlwLi9PilAFJ8jCg9UE1QP6VBpd6/xj3SRC0d6TU0To=\ngithub.com/onsi/gomega v1.33.1 h1:dsYjIxxSR755MDmKVsaFQTE22ChNBcuuTWgkUDSubOk=\ngithub.com/onsi/gomega v1.33.1/go.mod h1:U4R44UsT+9eLIaYRB2a5qajjtQYn0hauxvRm16AVYg0=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.1.0 h1:8SG7/vwALn54lVB/0yZ/MMwhFrPYtpEHQb2IpWsCzug=\ngithub.com/opencontainers/image-spec v1.1.0/go.mod h1:W4s4sFTMaBeK1BQLXbG4AdM2szdn85PY75RI83NrTrM=\ngithub.com/opencontainers/runtime-spec v1.2.0 h1:z97+pHb3uELt/yiAWD691HNHQIF07bE7dzrbT927iTk=\ngithub.com/opencontainers/runtime-spec v1.2.0/go.mod h1:jwyrGlmzljRJv/Fgzds9SsS/C5hL+LL3ko9hs6T5lQ0=\ngithub.com/opencontainers/selinux v1.11.1 h1:nHFvthhM0qY8/m+vfhJylliSshm8G1jJ2jDMcgULaH8=\ngithub.com/opencontainers/selinux v1.11.1/go.mod h1:E5dMC3VPuVvVHDYmi78qvhJp8+M586T4DlDRYpFkyec=\ngithub.com/package-url/packageurl-go v0.1.1-0.20220428063043-89078438f170 h1:DiLBVp4DAcZlBVBEtJpNWZpZVq0AEeCY7Hqk8URVs4o=\ngithub.com/package-url/packageurl-go v0.1.1-0.20220428063043-89078438f170/go.mod h1:uQd4a7Rh3ZsVg5j0lNyAfyxIeGde9yrlhjF78GzeW0c=\ngithub.com/pelletier/go-toml v1.9.5 h1:4yBQzkHv+7BHq2PQUZF3Mx0IYxG7LsP222s7Agd3ve8=\ngithub.com/pelletier/go-toml v1.9.5/go.mod h1:u1nR/EPcESfeI/szUZKdtJ0xRNbUoANCkoOuaOx1Y+c=\ngithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c h1:+mdjkGKdHQG3305AYmdv1U2eRNDiU2ErMBj1gwrq8eQ=\ngithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c/go.mod h1:7rwL4CYBLnjLxUqIJNnCWiEdr3bn6IUYi15bNlnbCCU=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/profile v1.7.0 h1:hnbDkaNWPCLMO9wGLdBFTIZvzDrDfBM2072E1S9gJkA=\ngithub.com/pkg/profile v1.7.0/go.mod h1:8Uer0jas47ZQMJ7VD+OHknK4YDY07LPUC6dEvqDjvNo=\ngithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10 h1:GFCKgmp0tecUJ0sJuv4pzYCqS9+RGSn52M3FUwPs+uo=\ngithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10/go.mod h1:t/avpk3KcrXxUnYOhZhMXJlSEyie6gQbtLq5NM3loB8=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=\ngithub.com/prometheus/client_golang v1.1.0/go.mod h1:I1FGZT9+L76gKKOs5djB6ezCbFQP1xR9D75/vuwEF3g=\ngithub.com/prometheus/client_golang v1.20.5 h1:cxppBPuYhUnsO6yo/aoRol4L7q7UFfdm+bR9r+8l63Y=\ngithub.com/prometheus/client_golang v1.20.5/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=\ngithub.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=\ngithub.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.6.0/go.mod h1:eBmuwkDJBwy6iBfxCBob6t6dR6ENT/y+J+Zk0j9GMYc=\ngithub.com/prometheus/common v0.55.0 h1:KEi6DK7lXW/m7Ig5i47x0vRzuBsHuvJdi5ee6Y3G1dc=\ngithub.com/prometheus/common v0.55.0/go.mod h1:2SECS4xJG1kd8XF9IcM1gMX6510RAEL65zxzNImwdc8=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.0.3/go.mod h1:4A/X28fw3Fc593LaREMrKMqOKvUAntwMDaekg4FpcdQ=\ngithub.com/prometheus/procfs v0.15.1 h1:YagwOFzUgYfKKHX6Dr+sHT7km/hxC76UB0learggepc=\ngithub.com/prometheus/procfs v0.15.1/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/secure-systems-lab/go-securesystemslib v0.4.0 h1:b23VGrQhTA8cN2CbBw7/FulN9fTtqYUdS5+Oxzt+DUE=\ngithub.com/secure-systems-lab/go-securesystemslib v0.4.0/go.mod h1:FGBZgq2tXWICsxWQW1msNf49F0Pf2Op5Htayx335Qbs=\ngithub.com/serialx/hashring v0.0.0-20200727003509-22c0c7ab6b1b h1:h+3JX2VoWTFuyQEo87pStk/a99dzIO1mM9KxIyLPGTU=\ngithub.com/serialx/hashring v0.0.0-20200727003509-22c0c7ab6b1b/go.mod h1:/yeG0My1xr/u+HZrFQ1tOQQQQrOawfyMUH13ai5brBc=\ngithub.com/shibumi/go-pathspec v1.3.0 h1:QUyMZhFo0Md5B8zV8x2tesohbb5kfbpTi9rBnKh5dkI=\ngithub.com/shibumi/go-pathspec v1.3.0/go.mod h1:Xutfslp817l2I1cZvgcfeMQJG5QnU2lh5tVaaMCl3jE=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/spdx/gordf v0.0.0-20201111095634-7098f93598fb/go.mod h1:uKWaldnbMnjsSAXRurWqqrdyZen1R7kxl8TkmWk2OyM=\ngithub.com/spdx/tools-golang v0.5.3 h1:ialnHeEYUC4+hkm5vJm4qz2x+oEJbS0mAMFrNXdQraY=\ngithub.com/spdx/tools-golang v0.5.3/go.mod h1:/ETOahiAo96Ob0/RAIBmFZw6XN0yTnyr/uFZm2NTMhI=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2 h1:xuMeJ0Sdp5ZMRXx/aWO6RZxdr3beISkG5/G/aIRr3pY=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/tonistiigi/dchapes-mode v0.0.0-20241001053921-ca0759fec205 h1:eUk79E1w8yMtXeHSzjKorxuC8qJOnyXQnLaJehxpJaI=\ngithub.com/tonistiigi/dchapes-mode v0.0.0-20241001053921-ca0759fec205/go.mod h1:3Iuxbr0P7D3zUzBMAZB+ois3h/et0shEz0qApgHYGpY=\ngithub.com/tonistiigi/fsutil v0.0.0-20241121093142-31cf1f437184 h1:RgyoSI38Y36zjQaszel/0RAcIehAnjA1B0RiUV9SDO4=\ngithub.com/tonistiigi/fsutil v0.0.0-20241121093142-31cf1f437184/go.mod h1:Dl/9oEjK7IqnjAm21Okx/XIxUCFJzvh+XdVHUlBwXTw=\ngithub.com/tonistiigi/go-actions-cache v0.0.0-20241210095730-017636a73805 h1:l2x1Ubj8f5xhPzZI428ZQ6+BDafGovpdk2ITnD3twTw=\ngithub.com/tonistiigi/go-actions-cache v0.0.0-20241210095730-017636a73805/go.mod h1:xsu+XeKT9piH/5f9Y1Zsv5krQqI34CWkIusbs5027IM=\ngithub.com/tonistiigi/go-archvariant v1.0.0 h1:5LC1eDWiBNflnTF1prCiX09yfNHIxDC/aukdhCdTyb0=\ngithub.com/tonistiigi/go-archvariant v1.0.0/go.mod h1:TxFmO5VS6vMq2kvs3ht04iPXtu2rUT/erOnGFYfk5Ho=\ngithub.com/tonistiigi/go-csvvalue v0.0.0-20240710180619-ddb21b71c0b4 h1:7I5c2Ig/5FgqkYOh/N87NzoyI9U15qUPXhDD8uCupv8=\ngithub.com/tonistiigi/go-csvvalue v0.0.0-20240710180619-ddb21b71c0b4/go.mod h1:278M4p8WsNh3n4a1eqiFcV2FGk7wE5fwUpUom9mK9lE=\ngithub.com/tonistiigi/units v0.0.0-20180711220420-6950e57a87ea h1:SXhTLE6pb6eld/v/cCndK0AMpt1wiVFb/YYmqB3/QG0=\ngithub.com/tonistiigi/units v0.0.0-20180711220420-6950e57a87ea/go.mod h1:WPnis/6cRcDZSUvVmezrxJPkiO87ThFYsoUiMwWNDJk=\ngithub.com/tonistiigi/vt100 v0.0.0-20240514184818-90bafcd6abab h1:H6aJ0yKQ0gF49Qb2z5hI1UHxSQt4JMyxebFR15KnApw=\ngithub.com/tonistiigi/vt100 v0.0.0-20240514184818-90bafcd6abab/go.mod h1:ulncasL3N9uLrVann0m+CDlJKWsIAP34MPcOJF6VRvc=\ngithub.com/urfave/cli v1.22.16 h1:MH0k6uJxdwdeWQTwhSO42Pwr4YLrNLwBtg1MRgTqPdQ=\ngithub.com/urfave/cli v1.22.16/go.mod h1:EeJR6BKodywf4zciqrdw6hpCPk68JO9z5LazXZMn5Po=\ngithub.com/vbatts/tar-split v0.11.5 h1:3bHCTIheBm1qFTcgh9oPu+nNBtX+XJIupG/vacinCts=\ngithub.com/vbatts/tar-split v0.11.5/go.mod h1:yZbwRsSeGjusneWgA781EKej9HF8vme8okylkAeNKLk=\ngithub.com/vishvananda/netlink v1.3.0 h1:X7l42GfcV4S6E4vHTsw48qbrV+9PVojNfIhZcwQdrZk=\ngithub.com/vishvananda/netlink v1.3.0/go.mod h1:i6NetklAujEcC6fK0JPjT8qSwWyO0HLn4UKG+hGqeJs=\ngithub.com/vishvananda/netns v0.0.4 h1:Oeaw1EM2JMxD51g9uhtC0D7erkIjgmj8+JZc26m1YX8=\ngithub.com/vishvananda/netns v0.0.4/go.mod h1:SpkAiCQRtJ6TvvxPnOSyH3BMl6unz3xZlaprSwhNNJM=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngo.etcd.io/bbolt v1.3.11 h1:yGEzV1wPz2yVCLsD8ZAiGHhHVlczyC9d1rP43/VCRJ0=\ngo.etcd.io/bbolt v1.3.11/go.mod h1:dksAq7YMXoljX0xu6VF5DMZGbhYYoLUalEiSySYAS4I=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.53.0 h1:9G6E0TXzGFVfTnawRzrPl83iHOAV7L8NJiR8RSGYV1g=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.53.0/go.mod h1:azvtTADFQJA8mX80jIH/akaE7h+dbm/sVuaHqN13w74=\ngo.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace v0.53.0 h1:IVtyPth4Rs5P8wIf0mP2KVKFNTJ4paX9qQ4Hkh5gFdc=\ngo.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace v0.53.0/go.mod h1:ImRBLMJv177/pwiLZ7tU7HDGNdBv7rS0HQ99eN/zBl8=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0 h1:4K4tsIXefpVJtvA/8srF4V4y0akAoPHkIslgAkjixJA=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0/go.mod h1:jjdQuTGVsXV4vSs+CJ2qYDeDPf9yIJV23qlIzBm73Vg=\ngo.opentelemetry.io/otel v1.28.0 h1:/SqNcYk+idO0CxKEUOtKQClMK/MimZihKYMruSMViUo=\ngo.opentelemetry.io/otel v1.28.0/go.mod h1:q68ijF8Fc8CnMHKyzqL6akLO46ePnjkgfIMIjUIX9z4=\ngo.opentelemetry.io/otel/exporters/jaeger v1.17.0 h1:D7UpUy2Xc2wsi1Ras6V40q806WM07rqoCWzXu7Sqy+4=\ngo.opentelemetry.io/otel/exporters/jaeger v1.17.0/go.mod h1:nPCqOnEH9rNLKqH/+rrUjiMzHJdV1BlpKcTwRTyKkKI=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.28.0 h1:U2guen0GhqH8o/G2un8f/aG/y++OuW6MyCo6hT9prXk=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.28.0/go.mod h1:yeGZANgEcpdx/WK0IvvRFC+2oLiMS2u4L/0Rj2M2Qr0=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.28.0 h1:aLmmtjRke7LPDQ3lvpFz+kNEH43faFhzW7v8BFIEydg=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.28.0/go.mod h1:TC1pyCt6G9Sjb4bQpShH+P5R53pO6ZuGnHuuln9xMeE=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0 h1:3Q/xZUyC1BBkualc9ROb4G8qkH90LXEIICcs5zv1OYY=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0/go.mod h1:s75jGIWA9OfCMzF0xr+ZgfrB5FEbbV7UuYo32ahUiFI=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.28.0 h1:R3X6ZXmNPRR8ul6i3WgFURCHzaXjHdm0karRG/+dj3s=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.28.0/go.mod h1:QWFXnDavXWwMx2EEcZsf3yxgEKAqsxQ+Syjp+seyInw=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.28.0 h1:j9+03ymgYhPKmeXGk5Zu+cIZOlVzd9Zv7QIiyItjFBU=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.28.0/go.mod h1:Y5+XiUG4Emn1hTfciPzGPJaSI+RpDts6BnCIir0SLqk=\ngo.opentelemetry.io/otel/exporters/prometheus v0.42.0 h1:jwV9iQdvp38fxXi8ZC+lNpxjK16MRcZlpDYvbuO1FiA=\ngo.opentelemetry.io/otel/exporters/prometheus v0.42.0/go.mod h1:f3bYiqNqhoPxkvI2LrXqQVC546K7BuRDL/kKuxkujhA=\ngo.opentelemetry.io/otel/metric v1.28.0 h1:f0HGvSl1KRAU1DLgLGFjrwVyismPlnuU6JD6bOeuA5Q=\ngo.opentelemetry.io/otel/metric v1.28.0/go.mod h1:Fb1eVBFZmLVTMb6PPohq3TO9IIhUisDsbJoL/+uQW4s=\ngo.opentelemetry.io/otel/sdk v1.28.0 h1:b9d7hIry8yZsgtbmM0DKyPWMMUMlK9NEKuIG4aBqWyE=\ngo.opentelemetry.io/otel/sdk v1.28.0/go.mod h1:oYj7ClPUA7Iw3m+r7GeEjz0qckQRJK2B8zjcZEfu7Pg=\ngo.opentelemetry.io/otel/sdk/metric v1.28.0 h1:OkuaKgKrgAbYrrY0t92c+cC+2F6hsFNnCQArXCKlg08=\ngo.opentelemetry.io/otel/sdk/metric v1.28.0/go.mod h1:cWPjykihLAPvXKi4iZc1dpER3Jdq2Z0YLse3moQUCpg=\ngo.opentelemetry.io/otel/trace v1.28.0 h1:GhQ9cUuQGmNDd5BTCP2dAvv75RdMxEfTmYejp+lkx9g=\ngo.opentelemetry.io/otel/trace v1.28.0/go.mod h1:jPyXzNPg6da9+38HEwElrQiHlVMTnVfM3/yv2OlIHaI=\ngo.opentelemetry.io/proto/otlp v1.3.1 h1:TrMUixzpM0yuc/znrFTP9MMRh8trP93mkCiDVeXrui0=\ngo.opentelemetry.io/proto/otlp v1.3.1/go.mod h1:0X1WI4de4ZsLrrJNLAQbFeLCm3T7yBkR0XqQ7niQU+8=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20240909161429-701f63a606c0 h1:e66Fs6Z+fZTbFBAxKfP3PALWBtpfqks2bwGcexMxgtk=\ngolang.org/x/exp v0.0.0-20240909161429-701f63a606c0/go.mod h1:2TbTHSBQa924w8M6Xs1QcRcFwyucIwBGpK1p2f1YFFY=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.21.0 h1:vvrHzRwRfVKSiLrG+d4FMl/Qi4ukBCE6kZlTUkDYRT0=\ngolang.org/x/mod v0.21.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.29.0 h1:5ORfpBpCs4HzDYoodCDBbwHzdR5UrLBZ3sOnUJmFoHo=\ngolang.org/x/net v0.29.0/go.mod h1:gLkgy8jTGERgjzMic6DS9+SP0ajcu6Xu3Orq/SpETg0=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201207232520-09787c993a3a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190801041406-cbf593c0f2f3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20211007075335-d3039528d8ac/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.2.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.10.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.27.0 h1:WP60Sv1nlK1T6SupCHbXzSaN0b9wUmsPoRS9b61A23Q=\ngolang.org/x/term v0.27.0/go.mod h1:iMsnZpn0cago0GOrHO2+Y7u7JPn5AylBrcoWkElMTSM=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.6.0 h1:eTDhh4ZXt5Qf0augr54TN6suAUudPcawVZeIAPU7D4U=\ngolang.org/x/time v0.6.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.25.0 h1:oFU9pkj/iJgs+0DT+VMHrx+oBKs/LJMV+Uvg78sl+fE=\ngolang.org/x/tools v0.25.0/go.mod h1:/vtpO8WL1N9cQC3FN5zPqb//fRXskFHbLKk4OW1Q7rg=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20240123012728-ef4313101c80 h1:KAeGQVN3M9nD0/bQXnr/ClcEMJ968gUXJQ9pwfSynuQ=\ngoogle.golang.org/genproto v0.0.0-20240123012728-ef4313101c80/go.mod h1:cc8bqMqtv9gMOr0zHg2Vzff5ULhhL2IXP4sbcn32Dro=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240701130421-f6361c86f094 h1:0+ozOGcrp+Y8Aq8TLNN2Aliibms5LEzsq99ZZmAGYm0=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240701130421-f6361c86f094/go.mod h1:fJ/e3If/Q67Mj99hin0hMhiNyCRmt6BQ2aWIJshUSJw=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240701130421-f6361c86f094 h1:BwIjyKYGsK9dMCBOorzRri8MQwmi7mT9rGHsCEinZkA=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240701130421-f6361c86f094/go.mod h1:Ue6ibwXGpU+dqIcODieyLOcgj7z8+IcskoNIgZxtrFY=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.66.3 h1:TWlsh8Mv0QI/1sIbs1W36lqRclxrmF+eFJ4DbI0fuhA=\ngoogle.golang.org/grpc v1.66.3/go.mod h1:s3/l6xSSCURdVfAnL+TqCNMyTDAGN6+lZeVxnZR128Y=\ngoogle.golang.org/grpc/cmd/protoc-gen-go-grpc v1.5.1 h1:F29+wU6Ee6qgu9TddPgooOdaqsxTMunOoj8KA5yuS5A=\ngoogle.golang.org/grpc/cmd/protoc-gen-go-grpc v1.5.1/go.mod h1:5KF+wpkbTSbGcR9zteSqZV6fqFOWBl4Yde8En8MryZA=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.35.1 h1:m3LfL6/Ca+fqnjnlqQXNpFPABW1UD7mjh8KO2mKFytA=\ngoogle.golang.org/protobuf v1.35.1/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngotest.tools v2.2.0+incompatible h1:VsBPFP1AI068pPrMxtb/S8Zkgf9xEmTLJjfM+P5UIEo=\ngotest.tools/v3 v3.4.0 h1:ZazjZUfuVeZGLAmlKKuyv3IKP5orXcwtOwDQH6YVr6o=\ngotest.tools/v3 v3.4.0/go.mod h1:CtbdzLSsqVhDgMtKsx03ird5YTGB3ar27v0u/yKBW5g=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nkernel.org/pub/linux/libs/security/libcap/cap v1.2.70 h1:QnLPkuDWWbD5C+3DUA2IUXai5TK6w2zff+MAGccqdsw=\nkernel.org/pub/linux/libs/security/libcap/cap v1.2.70/go.mod h1:/iBwcj9nbLejQitYvUm9caurITQ6WyNHibJk6Q9fiS4=\nkernel.org/pub/linux/libs/security/libcap/psx v1.2.70 h1:HsB2G/rEQiYyo1bGoQqHZ/Bvd6x1rERQTNdPr1FyWjI=\nkernel.org/pub/linux/libs/security/libcap/psx v1.2.70/go.mod h1:+l6Ee2F59XiJ2I6WR5ObpC1utCQJZ/VLsEbQCD8RG24=\nsigs.k8s.io/yaml v1.3.0/go.mod h1:GeOyir5tyXNByN85N/dRIT9es5UQNerPYEKK56eTBm8=\n"
        },
        {
          "name": "hack",
          "type": "tree",
          "content": null
        },
        {
          "name": "identity",
          "type": "tree",
          "content": null
        },
        {
          "name": "session",
          "type": "tree",
          "content": null
        },
        {
          "name": "snapshot",
          "type": "tree",
          "content": null
        },
        {
          "name": "solver",
          "type": "tree",
          "content": null
        },
        {
          "name": "source",
          "type": "tree",
          "content": null
        },
        {
          "name": "sourcepolicy",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        },
        {
          "name": "version",
          "type": "tree",
          "content": null
        },
        {
          "name": "worker",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}