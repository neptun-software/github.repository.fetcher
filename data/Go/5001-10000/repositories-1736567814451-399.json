{
  "metadata": {
    "timestamp": 1736567814451,
    "page": 399,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "darjun/go-daily-lib",
      "stars": 5133,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0078125,
          "content": ".vscode/"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.97265625,
          "content": "## Go 每日一库\n\n每天学习一个 Go 语言库！\n\n相关博客：\n\n* [flag](https://darjun.github.io/2020/01/10/godailylib/flag/)\n  Go 标准库提供的命令行选项解析库，简单实用。\n* [go-flags](https://darjun.github.io/2020/01/10/godailylib/go-flags/)\n  第三方命令行选项解析库，非常强大。\n* [go-homedir](https://darjun.github.io/2020/01/14/godailylib/go-homedir/)\n  不使用 cgo 获取用户主目录的第三方库，支持交叉编译。\n* [go-ini](https://darjun.github.io/2020/01/15/godailylib/go-ini/)\n  解析 INI 配置文件的第三方库。\n* [cobra](https://darjun.github.io/2020/01/17/godailylib/cobra/)\n  编写命令行程序的库，并提供生成代码的脚手架。\n* [viper](https://darjun.github.io/2020/01/18/godailylib/viper/)\n  灵活强大的配置管理工具，支持多种 JSON/TOML/YAML 等多种配置格式，支持热更新。\n* [fsnotify](https://darjun.github.io/2020/01/19/godailylib/fsnotify/)\n  监控文件或目录改动的第三方库。\n* [cast](https://darjun.github.io/2020/01/20/godailylib/cast/)\n  方便实用的类型转换库。\n* [log](https://darjun.github.io/2020/02/07/godailylib/log/)\n  Go 标准日志库。\n* [logrus](https://darjun.github.io/2020/02/07/godailylib/logrus/)\n  使用非常广泛的开源日志库。\n* [godotenv](https://darjun.github.io/2020/02/12/godailylib/godotenv/)\n  读取项目目录中的 .env 文件设置程序的环境变量。支持多种开发模式`dev/prod`。\n* [carbon](https://darjun.github.io/2020/02/14/godailylib/carbon/)\n  功能强大的日期时间库，仿 PHP 的同名库。\n* [email](https://darjun.github.io/2020/02/16/godailylib/email)\n  发送邮件的第三方库。\n* [dig](https://darjun.github.io/2020/02/22/godailylib/dig)\n  Uber 出品的依赖注入库。\n* [gojsonq](https://darjun.github.io/2020/02/24/godailylib/gojsonq)\n  Go 操作 JSON 数据的库，支持基本操作和花式操作方法。\n* [message-bus](https://darjun.github.io/2020/02/26/godailylib/message-bus)\n  异步消息通信库。\n* [watermill](https://darjun.github.io/2020/03/01/godailylib/watermill)\n  功能丰富的消息通信库。\n* [wire](https://darjun.github.io/2020/03/02/godailylib/wire)\n  Google 出品的依赖注入框架，编译前自动生成 Go 代码，无需反射。\n* [mergo](https://darjun.github.io/2020/03/11/godailylib/mergo)\n  合并结构体和 map 的库。\n* [copier](https://darjun.github.io/2020/03/13/godailylib/copier)\n  处理相同或不同结构体/map 之间的赋值。\n* [jennifer](https://darjun.github.io/2020/03/14/godailylib/jennifer)\n  Go 代码生成库。\n* [go-cmp](https://darjun.github.io/2020/03/20/godailylib/go-cmp)\n  Google 出品的比较库，一般用于测试代码中。\n* [buntdb](https://darjun.github.io/2020/03/21/godailylib/buntdb)\n  Go 实现的内存键值库，支持 JSON 操作和事务。\n* [gjson](https://darjun.github.io/2020/03/22/godailylib/gjson)\n  专注于读取 JSON 值的库。\n* [sjson](https://darjun.github.io/2020/03/24/godailylib/sjson)\n  专注于设置 JSON 值的库。\n* [jj](https://darjun.github.io/2020/03/25/godailylib/jj)\n  操作 JSON 数据的命令行程序。\n* [govaluate](https://darjun.github.io/2020/04/01/godailylib/govaluate)\n  计算动态 Go 表达式的库。\n* [validator](https://darjun.github.io/2020/04/04/godailylib/validator)\n  使用最为广泛的数据校验库。\n* [gopsutil](https://darjun.github.io/2020/04/05/godailylib/gopsutil)\n  获取各种系统信息的库。\n* [gentleman](https://darjun.github.io/2020/04/07/godailylib/gentleman)\n  HTTP 客户端。\n* [plot](https://darjun.github.io/2020/04/12/godailylib/plot)\n  绘图库。\n* [gron](https://darjun.github.io/2020/04/20/godailylib/gron)\n  定时任务管理库。\n* [go-app](https://darjun.github.io/2020/04/22/godailylib/go-app)\n  使用 Go + Webassembly 编写应用的库。\n* [zap](https://darjun.github.io/2020/04/23/godailylib/zap)\n  Uber 出品的高性能日志库。\n* [zerolog](https://darjun.github.io/2020/04/24/godailylib/zerolog)\n  高性能日志库，专注于 JSON 格式的日志，号称 0 内存分配。\n* [nutsdb](https://darjun.github.io/2020/04/25/godailylib/nutsdb)\n  国人开发的内存键值库，支持备份和还原。\n* [sqlc](https://darjun.github.io/2020/04/28/godailylib/sqlc)\n  根据 SQL 语句生成相应操作数据库的 Go 代码。\n* [xorm](https://darjun.github.io/2020/05/07/godailylib/xorm)\n  ORM 库。\n* [rpc](https://darjun.github.io/2020/05/08/godailylib/rpc)\n  标准 RPC 库。\n* [jsonrpc](https://darjun.github.io/2020/05/10/godailylib/jsonrpc)\n  标准 JSON-RPC 库。\n* [rpcx](https://darjun.github.io/2020/05/21/godailylib/rpcx)\n  基于标准 RPC 库扩展的功能强大、高性能的 RPC 框架。\n* [twirp](https://darjun.github.io/2020/06/07/godailylib/twirp)\n  twitchtv 出品的基于 Google Protobuf 的 RPC 库。\n* [casbin](https://darjun.github.io/2020/06/12/godailylib/casbin)\n  灵活、强大的权限管理库，支持多种语言。\n* [fyne](https://darjun.github.io/2020/06/15/godailylib/fyne)\n  Go GUI 框架。\n* [negroni](https://darjun.github.io/2020/06/19/godailylib/negroni)\n  Go 中间件库。\n* [cli](https://darjun.github.io/2020/06/22/godailylib/cli)\n  命令行程序库，方便编写命令行程序。\n* [cron](https://darjun.github.io/2020/06/25/godailylib/cron)\n  定时任务管理库，对标 Linux 的 crontab 命令。\n* [mapstructure](https://darjun.github.io/2020/07/29/godailylib/mapstructure)\n  结构体和 map 转换库。\n* [jobrunner](https://darjun.github.io/2020/09/01/godailylib/jobrunner)\n  基于 cron 的定时任务管理库。\n* [gabs](https://darjun.github.io/2020/09/03/godailylib/gabs)\n  JSON 操作库。\n* [commonregex](https://darjun.github.io/2020/09/05/godailylib/commonregex)\n  收集常用的正则表达式。\n* [quicktemplate](https://darjun.github.io/2020/09/26/godailylib/quicktemplate)\n  Go 模板库，预先编译为 Go 代码。\n* [air](https://darjun.github.io/2020/09/27/godailylib/air/)\n  监听文件修改，自动编译，重启 Go 程序。提升开发效率。\n* [goquery](https://darjun.github.io/2020/10/11/godailylib/goquery)\n  Go 的**jQuery**。\n* [rxgo](https://darjun.github.io/2020/10/11/godailylib/rxgo)\n  基于[pipelines](https://blog.golang.org/pipelines)的异步编程库。\n* [bytebufferpool](https://darjun.github.io/2021/05/08/godailylib/bytebufferpool)\n  基于`sync.Pool`实现的高性能对象缓冲池。\n* [gotalk](https://darjun.github.io/2021/05/20/godailylib/gotalk/)\n  专注于进程间通信的库。\n* [fasttemplate](https://darjun.github.io/2021/05/24/godailylib/fasttemplate)\n  一款小型的模板库，可用于替换`strings.Replace`和`fmt.Sprintf`。\n* [reflect](https://darjun.github.io/2021/05/27/godailylib/reflect)\n  反射标准库`reflect`详解。\n* [ants](https://darjun.github.io/2021/06/03/godailylib/ants)\n  goroutine 池。\n* [tunny](https://darjun.github.io/2021/06/10/godailylib/tunny)\n  另一个 goroutine 池实现。\n* [bubbletea](https://darjun.github.io/2021/06/11/godailylib/bubbletea)\n  TUI 程序框架。\n* [ozzo-validation](https://darjun.github.io/2021/06/20/godailylib/ozzo-validation)\n  数据校验库。\n* [dateparse](https://darjun.github.io/2021/06/24/godailylib/dateparse)\n  日期时间字符串解析库。\n* [resty](https://darjun.github.io/2021/06/26/godailylib/resty)\n  HTTP client。\n* [termtables](https://darjun.github.io/2021/06/29/godailylib/termtables/)\n  控制台输出表格。\n* [colly](https://darjun.github.io/2021/06/30/godailylib/colly/)\n  Go 语言的爬虫框架。\n* [net/http](https://darjun.github.io/2021/07/13/in-post/godailylib/nethttp/)：\n  基础和中间件\n* [gorilla/mux](https://darjun.github.io/2021/07/19/godailylib/gorilla/mux)\n  gorilla Web 开发包之路由库\n* [gorilla/handlers](https://darjun.github.io/2021/07/21/godailylib/gorilla/handlers)\n    gorilla Web 开发包之中间件库\n* [gorilla/schema](https://darjun.github.io/2021/07/22/godailylib/gorilla/schema)\n    gorilla Web 开发包之表单处理库\n* [gorilla/securecookie](https://darjun.github.io/2021/07/23/godailylib/gorilla/securecookie/)\n    gorilla Web 开发包之安全 cookie 库\n* [gorilla/sessions](https://darjun.github.io/2021/07/25/godailylib/gorilla/sessions)\n    gorilla Web 开发包之 session 处理库\n* [goth](https://darjun.github.io/2021/07/26/godailylib/goth)\n    第三方认证合集\n* [testing](https://darjun.github.io/2021/08/03/godailylib/testing)\n    标准库测试包\n* [testify](https://darjun.github.io/2021/08/11/godailylib/testify)\n    Go 最流行的测试库\n* [bitset](https://darjun.github.io/2022/07/16/godailylib/bitset/)\n    位集合操作库\n* [roaring](https://darjun.github.io/2022/07/17/godailylib/roaring/)\n    压缩位图\n* [os/exec](https://darjun.github.io/2022/11/01/godailylib/osexec/)\n    执行外部命令\n* ebiten\n  * [一起用Go做一个游戏（上）](https://darjun.github.io/2022/11/15/godailylib/ebiten1/)\n  * [一起用Go做一个游戏（中）](https://darjun.github.io/2022/11/18/godailylib/ebiten2/)\n  * [一起用Go做一个游戏（下）](https://darjun.github.io/2022/11/23/godailylib/ebiten2/)"
        },
        {
          "name": "air",
          "type": "tree",
          "content": null
        },
        {
          "name": "ants",
          "type": "tree",
          "content": null
        },
        {
          "name": "bitset",
          "type": "tree",
          "content": null
        },
        {
          "name": "bubbletea",
          "type": "tree",
          "content": null
        },
        {
          "name": "buntdb",
          "type": "tree",
          "content": null
        },
        {
          "name": "bytebufferpool",
          "type": "tree",
          "content": null
        },
        {
          "name": "carbon",
          "type": "tree",
          "content": null
        },
        {
          "name": "casbin",
          "type": "tree",
          "content": null
        },
        {
          "name": "cast",
          "type": "tree",
          "content": null
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "cobra",
          "type": "tree",
          "content": null
        },
        {
          "name": "colly",
          "type": "tree",
          "content": null
        },
        {
          "name": "commonregex",
          "type": "tree",
          "content": null
        },
        {
          "name": "copier",
          "type": "tree",
          "content": null
        },
        {
          "name": "cron",
          "type": "tree",
          "content": null
        },
        {
          "name": "dateparse",
          "type": "tree",
          "content": null
        },
        {
          "name": "dig",
          "type": "tree",
          "content": null
        },
        {
          "name": "ebiten",
          "type": "tree",
          "content": null
        },
        {
          "name": "email",
          "type": "tree",
          "content": null
        },
        {
          "name": "exec",
          "type": "tree",
          "content": null
        },
        {
          "name": "fasttemplate",
          "type": "tree",
          "content": null
        },
        {
          "name": "flag",
          "type": "tree",
          "content": null
        },
        {
          "name": "fsnotify",
          "type": "tree",
          "content": null
        },
        {
          "name": "fyne",
          "type": "tree",
          "content": null
        },
        {
          "name": "gabs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gentleman",
          "type": "tree",
          "content": null
        },
        {
          "name": "gjson",
          "type": "tree",
          "content": null
        },
        {
          "name": "go-app",
          "type": "tree",
          "content": null
        },
        {
          "name": "go-cmp",
          "type": "tree",
          "content": null
        },
        {
          "name": "go-flags",
          "type": "tree",
          "content": null
        },
        {
          "name": "go-homedir",
          "type": "tree",
          "content": null
        },
        {
          "name": "go-ini",
          "type": "tree",
          "content": null
        },
        {
          "name": "godotenv",
          "type": "tree",
          "content": null
        },
        {
          "name": "gojsonq",
          "type": "tree",
          "content": null
        },
        {
          "name": "gopsutil",
          "type": "tree",
          "content": null
        },
        {
          "name": "goquery",
          "type": "tree",
          "content": null
        },
        {
          "name": "gorilla",
          "type": "tree",
          "content": null
        },
        {
          "name": "gotalk",
          "type": "tree",
          "content": null
        },
        {
          "name": "goth",
          "type": "tree",
          "content": null
        },
        {
          "name": "govaluate",
          "type": "tree",
          "content": null
        },
        {
          "name": "gron",
          "type": "tree",
          "content": null
        },
        {
          "name": "jennnifer",
          "type": "tree",
          "content": null
        },
        {
          "name": "jj",
          "type": "tree",
          "content": null
        },
        {
          "name": "jobrunner",
          "type": "tree",
          "content": null
        },
        {
          "name": "jsonrpc",
          "type": "tree",
          "content": null
        },
        {
          "name": "log",
          "type": "tree",
          "content": null
        },
        {
          "name": "logrus",
          "type": "tree",
          "content": null
        },
        {
          "name": "mapstructure",
          "type": "tree",
          "content": null
        },
        {
          "name": "mergo",
          "type": "tree",
          "content": null
        },
        {
          "name": "message-bus",
          "type": "tree",
          "content": null
        },
        {
          "name": "negroni",
          "type": "tree",
          "content": null
        },
        {
          "name": "nethttp",
          "type": "tree",
          "content": null
        },
        {
          "name": "nutsdb",
          "type": "tree",
          "content": null
        },
        {
          "name": "ozzo-validation",
          "type": "tree",
          "content": null
        },
        {
          "name": "plot",
          "type": "tree",
          "content": null
        },
        {
          "name": "quicktemplate",
          "type": "tree",
          "content": null
        },
        {
          "name": "reflect",
          "type": "tree",
          "content": null
        },
        {
          "name": "resty",
          "type": "tree",
          "content": null
        },
        {
          "name": "roaring",
          "type": "tree",
          "content": null
        },
        {
          "name": "rpc",
          "type": "tree",
          "content": null
        },
        {
          "name": "rpcx",
          "type": "tree",
          "content": null
        },
        {
          "name": "rxgo",
          "type": "tree",
          "content": null
        },
        {
          "name": "sjson",
          "type": "tree",
          "content": null
        },
        {
          "name": "sqlc",
          "type": "tree",
          "content": null
        },
        {
          "name": "termtables",
          "type": "tree",
          "content": null
        },
        {
          "name": "testify",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing",
          "type": "tree",
          "content": null
        },
        {
          "name": "tunny",
          "type": "tree",
          "content": null
        },
        {
          "name": "twirp",
          "type": "tree",
          "content": null
        },
        {
          "name": "validator",
          "type": "tree",
          "content": null
        },
        {
          "name": "viper",
          "type": "tree",
          "content": null
        },
        {
          "name": "watermill",
          "type": "tree",
          "content": null
        },
        {
          "name": "wire",
          "type": "tree",
          "content": null
        },
        {
          "name": "xorm",
          "type": "tree",
          "content": null
        },
        {
          "name": "zap",
          "type": "tree",
          "content": null
        },
        {
          "name": "zerolog",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}