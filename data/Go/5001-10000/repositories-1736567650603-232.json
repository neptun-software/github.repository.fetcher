{
  "metadata": {
    "timestamp": 1736567650603,
    "page": 232,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rancher/os",
      "stars": 6434,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.2158203125,
          "content": ".DS_Store\n.idea\n.trash-cache\nbin\nstate\nbuild\nimages/*/build\nscripts/images/*/dist/\ndist\ntests/integration/.venv*\ntests/integration/.tox\n*/*/*/*.pyc\n*/*/*/__pycache__\n.trash-cache\n#.dapper\nvendor/*/*/*/.git\ntmp\ndocs/_site\n"
        },
        {
          "name": ".drone.yml",
          "type": "blob",
          "size": 0.2958984375,
          "content": "---\nkind: pipeline\nname: default\n\nplatform:\n  os: linux\n  arch: amd64\n\nsteps:\n- name: build\n  pull: default\n  image: rancher/dapper:1.10.3\n  commands:\n  - KERNEL_CHECK=0 dapper ci\n  volumes:\n  - name: socket\n    path: /var/run/docker.sock\n\nvolumes:\n- name: socket\n  host:\n    path: /var/run/docker.sock\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2890625,
          "content": ".DS_Store\n/assets/ca.crt\n/state\n/bin\n/build\n/dist\n/gopath\n/images/*/build\n/scripts/images/vmware/assets\n.dockerfile\n*.swp\n/tests/integration/MANIFEST\n/tests/integration/.venv*\n/tests/integration/.tox\n/tests/integration/.idea\n*.pyc\n__pycache__\n/.dapper\n/.trash-cache\n/trash.lock\n.idea\n.trash-conf\n"
        },
        {
          "name": "Dockerfile.dapper",
          "type": "blob",
          "size": 6.017578125,
          "content": "FROM ubuntu:bionic\n# FROM arm64=arm64v8/ubuntu:bionic\n\n# get the apt-cacher proxy set\nARG APTPROXY=\n\nRUN echo \"Acquire::http { Proxy \\\"$APTPROXY\\\"; };\" >> /etc/apt/apt.conf.d/01proxy \\\n    && cat /etc/apt/apt.conf.d/01proxy \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates \\\n        cpio \\\n        curl \\\n        dosfstools \\\n        gccgo \\\n        genisoimage \\\n        gettext \\\n        git \\\n        isolinux \\\n        less \\\n        libblkid-dev \\\n        libmount-dev \\\n        libselinux1-dev \\\n        locales \\\n        module-init-tools \\\n        mtools \\\n        openssh-client \\\n        pkg-config \\\n        qemu \\\n        qemu-kvm \\\n        rsync \\\n        sudo \\\n        syslinux-common \\\n        vim \\\n        wget \\\n        xorriso \\\n        xz-utils \\\n        telnet\n\n########## Dapper Configuration #####################\n\nENV DAPPER_ENV VERSION DEV_BUILD RUNTEST DEBUG APTPROXY ENGINE_REGISTRY_MIRROR KERNEL_CHECK APPEND_SYSTEM_IMAGES APPEND_USER_IMAGES\nENV DAPPER_DOCKER_SOCKET true\nENV DAPPER_SOURCE /go/src/github.com/rancher/os\nENV DAPPER_OUTPUT ./bin ./dist ./build/initrd ./build/kernel\nENV DAPPER_RUN_ARGS --privileged\nENV TRASH_CACHE ${DAPPER_SOURCE}/.trash-cache\nENV SHELL /bin/bash\nWORKDIR ${DAPPER_SOURCE}\n\n########## General Configuration #####################\nARG DAPPER_HOST_ARCH=amd64\nARG HOST_ARCH=${DAPPER_HOST_ARCH}\nARG ARCH=${HOST_ARCH}\n\nARG OS_REPO=rancher\nARG HOSTNAME_DEFAULT=rancher\nARG DISTRIB_ID=RancherOS\n\nARG SELINUX_POLICY_URL=https://github.com/rancher/refpolicy/releases/download/v0.0.3/policy.29\n\nARG KERNEL_VERSION=4.14.176-rancher\nARG KERNEL_URL_amd64=https://github.com/rancher/os-kernel/releases/download/v${KERNEL_VERSION}/linux-${KERNEL_VERSION}-x86.tar.gz\nARG KERNEL_URL_arm64=https://github.com/rancher/os-kernel/releases/download/v${KERNEL_VERSION}/linux-${KERNEL_VERSION}-arm64.tar.gz\n\nARG BUILD_DOCKER_URL_amd64=https://get.docker.com/builds/Linux/x86_64/docker-1.10.3\nARG BUILD_DOCKER_URL_arm64=https://github.com/rancher/docker/releases/download/v1.10.3-ros1/docker-1.10.3_arm64\n\nARG OS_RELEASES_YML=https://releases.rancher.com/os\n\nARG OS_SERVICES_REPO=https://raw.githubusercontent.com/${OS_REPO}/os-services\nARG IMAGE_NAME=${OS_REPO}/os\n\nARG OS_CONSOLE=default\nARG OS_AUTOFORMAT=false\n\nARG OS_BASE_URL_amd64=https://github.com/rancher/os-base/releases/download/v2018.02.11-1/os-base_amd64.tar.xz\nARG OS_BASE_URL_arm64=https://github.com/rancher/os-base/releases/download/v2018.02.11-1/os-base_arm64.tar.xz\n\nARG OS_INITRD_BASE_URL_amd64=https://github.com/rancher/os-initrd-base/releases/download/v2018.02.11-1/os-initrd-base-amd64.tar.gz\nARG OS_INITRD_BASE_URL_arm64=https://github.com/rancher/os-initrd-base/releases/download/v2018.02.11-1/os-initrd-base-arm64.tar.gz\n\nARG SYSTEM_DOCKER_VERSION=17.06-ros6\nARG SYSTEM_DOCKER_URL_amd64=https://github.com/rancher/os-system-docker/releases/download/${SYSTEM_DOCKER_VERSION}/docker-amd64-${SYSTEM_DOCKER_VERSION}.tgz\nARG SYSTEM_DOCKER_URL_arm64=https://github.com/rancher/os-system-docker/releases/download/${SYSTEM_DOCKER_VERSION}/docker-arm64-${SYSTEM_DOCKER_VERSION}.tgz\n\nARG USER_DOCKER_VERSION=19.03.8\nARG USER_DOCKER_ENGINE_VERSION=docker-${USER_DOCKER_VERSION}\n\nARG AZURE_SERVICE=false\nARG PROXMOXVE_SERVICE=false\n######################################################\n\n# Set up environment and export all ARGS as ENV\nENV ARCH=${ARCH} \\\n    HOST_ARCH=${HOST_ARCH} \\\n    XZ_DEFAULTS=\"-T0\"\n\nENV BUILD_DOCKER_URL=BUILD_DOCKER_URL_${ARCH} \\\n    BUILD_DOCKER_URL_amd64=${BUILD_DOCKER_URL_amd64} \\\n    BUILD_DOCKER_URL_arm64=${BUILD_DOCKER_URL_arm64} \\\n    DAPPER_HOST_ARCH=${DAPPER_HOST_ARCH} \\\n    DISTRIB_ID=${DISTRIB_ID} \\\n    DOWNLOADS=/usr/src/downloads \\\n    GOPATH=/go \\\n    GO_VERSION=1.8.5 \\\n    GOARCH=$ARCH \\\n    HOSTNAME_DEFAULT=${HOSTNAME_DEFAULT} \\\n    IMAGE_NAME=${IMAGE_NAME} \\\n    KERNEL_VERSION=${KERNEL_VERSION} \\\n    KERNEL_URL=KERNEL_URL_${ARCH} \\\n    KERNEL_URL_amd64=${KERNEL_URL_amd64} \\\n    KERNEL_URL_arm64=${KERNEL_URL_arm64} \\\n    OS_BASE_URL=OS_BASE_URL_${ARCH} \\\n    OS_BASE_URL_amd64=${OS_BASE_URL_amd64} \\\n    OS_BASE_URL_arm64=${OS_BASE_URL_arm64} \\\n    OS_INITRD_BASE_URL=OS_INITRD_BASE_URL_${ARCH} \\\n    OS_INITRD_BASE_URL_amd64=${OS_INITRD_BASE_URL_amd64} \\\n    OS_INITRD_BASE_URL_arm64=${OS_INITRD_BASE_URL_arm64} \\\n    OS_RELEASES_YML=${OS_RELEASES_YML} \\\n    OS_REPO=${OS_REPO} \\\n    OS_SERVICES_REPO=${OS_SERVICES_REPO} \\\n    OS_CONSOLE=${OS_CONSOLE} \\\n    OS_AUTOFORMAT=${OS_AUTOFORMAT} \\\n    REPO_VERSION=master \\\n    SELINUX_POLICY_URL=${SELINUX_POLICY_URL} \\\n    SYSTEM_DOCKER_URL=SYSTEM_DOCKER_URL_${ARCH} \\\n    SYSTEM_DOCKER_URL_amd64=${SYSTEM_DOCKER_URL_amd64} \\\n    SYSTEM_DOCKER_URL_arm64=${SYSTEM_DOCKER_URL_arm64} \\\n    USER_DOCKER_VERSION=${USER_DOCKER_VERSION} \\\n    USER_DOCKER_ENGINE_VERSION=${USER_DOCKER_ENGINE_VERSION} \\\n    AZURE_SERVICE=${AZURE_SERVICE} \\\n    PROXMOXVE_SERVICE=${PROXMOXVE_SERVICE}\nENV PATH=${GOPATH}/bin:/usr/local/go/bin:$PATH\n\nRUN mkdir -p ${DOWNLOADS}\n\n# Download kernel\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\nRUN echo \"... Downloading  ${!KERNEL_URL}\"; \\\n    if [ -n \"${!KERNEL_URL}\" ]; then \\\n        curl -fL ${!KERNEL_URL} > ${DOWNLOADS}/kernel.tar.gz \\\n    ;fi\n\n# Download SELinux Policy\nRUN curl -pfL ${SELINUX_POLICY_URL} > ${DOWNLOADS}/$(basename ${SELINUX_POLICY_URL})\n\n# Install Go\nRUN wget -O - https://storage.googleapis.com/golang/go${GO_VERSION}.linux-${GOARCH}.tar.gz | tar -xzf - -C /usr/local && \\\n    go get github.com/rancher/trash\n\nRUN mkdir -p ${GOPATH}/src/golang.org/x && cd ${GOPATH}/src/golang.org/x/ && git clone https://github.com/golang/tools && \\\n    cd tools && git checkout 6adeb8aab2ded9eb693b831d5fd090c10a6ebdfa -b temp && go get golang.org/x/lint/golint\n\n# Install Host Docker\nRUN curl -fL ${!BUILD_DOCKER_URL} > /usr/bin/docker && \\\n    chmod +x /usr/bin/docker\n\n# Install dapper\nRUN curl -sL https://releases.rancher.com/dapper/latest/dapper-`uname -s`-`uname -m | sed 's/arm.*/arm/'` > /usr/bin/dapper && \\\n    chmod +x /usr/bin/dapper\n\nRUN cd ${DOWNLOADS} && \\\n    curl -pfL ${!OS_BASE_URL} | tar xvJf -\n\nENTRYPOINT [\"./scripts/entry\"]\nCMD [\"ci\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 9.935546875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.671875,
          "content": "TARGETS := $(shell ls scripts | grep -vE 'clean|run|help|release*|build-moby|run-moby')\n\n.dapper:\n\t@echo Downloading dapper\n\t@curl -sL https://releases.rancher.com/dapper/latest/dapper-`uname -s`-`uname -m|sed 's/v7l//'` > .dapper.tmp\n\t@@chmod +x .dapper.tmp\n\t@./.dapper.tmp -v\n\t@mv .dapper.tmp .dapper\n\n$(TARGETS): .dapper\n\t./.dapper $@\n\ntrash: .dapper\n\t./.dapper -m bind trash\n\ntrash-keep: .dapper\n\t./.dapper -m bind trash -k\n\ndeps: trash\n\nbuild/initrd/.id: .dapper\n\t./.dapper prepare\n\nrun: build/initrd/.id .dapper\n\t./.dapper -m bind build-target\n\t./scripts/run\n\nbuild-moby:\n\t./scripts/build-moby\n\nrun-moby:\n\t./scripts/run-moby\n\nshell-bind: .dapper\n\t./.dapper -m bind -s\n\nclean:\n\t@./scripts/clean\n\nrelease: .dapper release-build\n\nrelease-build:\n\tmkdir -p dist\n\t./.dapper release\n\nrpi64: .dapper\n\t./scripts/release-rpi64\n\nvmware: .dapper\n\tmkdir -p dist\n\tAPPEND_SYSTEM_IMAGES=\"rancher/os-openvmtools:10.3.10-2\" \\\n\t./.dapper release-vmware\n\nhyperv: .dapper\n\tmkdir -p dist\n\tAPPEND_SYSTEM_IMAGES=\"rancher/os-hypervvmtools:v4.14.138-rancher-1\" \\\n\t./.dapper release-hyperv\n\nazurebase: .dapper\n\tmkdir -p dist\n\tAZURE_SERVICE=\"true\" \\\n\tAPPEND_SYSTEM_IMAGES=\"rancher/os-hypervvmtools:v4.14.138-rancher-1 rancher/os-waagent:v2.2.34-1\" \\\n\t./.dapper release-azurebase\n\n4glte: .dapper\n\tmkdir -p dist\n\tAPPEND_SYSTEM_IMAGES=\"rancher/os-modemmanager:v1.6.4-1\" \\\n\t./.dapper release-4glte\n\nproxmoxve: .dapper\n\tmkdir -p dist\n\tPROXMOXVE_SERVICE=\"true\" \\\n\tAPPEND_SYSTEM_IMAGES=\"rancher/os-qemuguestagent:v2.8.1-2\" \\\n\t./.dapper release-proxmoxve\n\npingan: .dapper\n\tmkdir -p dist\n\tAPPEND_SYSTEM_IMAGES=\"cnrancher/os-pingan-amc:v0.0.6-1\" \\\n\t./.dapper release-pingan\n\nhelp:\n\t@./scripts/help\n\n.DEFAULT_GOAL := default\n\n.PHONY: $(TARGETS)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.0009765625,
          "content": "# Development and Maintenance Status\nRancherOS 1.x is no longer being actively maintained. There are two significant reasons behind this product decision:\n1. **Docker** - The current industry requirements for a container runtime are very much evolving. Container runtimes like containerd and CRIO are now being actively considered as the default choice. RancherOS 1.x, which was specifically designed around using Docker engine only, unfortunately does not lend itself, in its current design, to this new evolving requirement.\n2. **ISV Support** - RancherOS was specifically designed as a minimalistic OS to support purpose-built containerized applications. It was not designed to be used as a general purpose OS (such as CentOS or Ubuntu). As such, most ISVs have not certified their software to run on RancherOS, nor does RancherOS even contain the necessary components for many of these applications to run.\n\nWe're working on a replacement. Stay tuned!\n\n# RancherOS\n\n[![Build Status](https://drone-pr.rancher.io/api/badges/rancher/os/status.svg?branch=master)](https://drone-pr.rancher.io/rancher/os)\n[![Docker Pulls](https://img.shields.io/docker/pulls/rancher/os.svg)](https://store.docker.com/community/images/rancher/os)\n[![Go Report Card](https://goreportcard.com/badge/github.com/rancher/os)](https://goreportcard.com/badge/github.com/rancher/os)\n\nThe smallest, easiest way to run Docker in production at scale.  Everything in RancherOS is a container managed by Docker.  This includes system services such as udev and rsyslog.  RancherOS includes only the bare minimum amount of software needed to run Docker.  This keeps the binary download of RancherOS very small.  Everything else can be pulled in dynamically through Docker.\n\n## How this works\n\nEverything in RancherOS is a Docker container.  We accomplish this by launching two instances of\nDocker.  One is what we call the system Docker which runs as the first process.  System Docker then launches\na container that runs the user Docker.  The user Docker is then the instance that gets primarily\nused to create containers.  We created this separation because it seemed logical and also\nit would really be bad if somebody did `docker rm -f $(docker ps -qa)` and deleted the entire OS.\n\n![How it works](./rancheros.png \"How it works\")\n\n## Release\n\n- **v1.5.8 - Docker 19.03.15 - Linux 4.14.138**\n\n### ISO\n\n- https://releases.rancher.com/os/v1.5.8/rancheros.iso\n- https://releases.rancher.com/os/v1.5.8/hyperv/rancheros.iso\n- https://releases.rancher.com/os/v1.5.8/4glte/rancheros.iso\n- https://releases.rancher.com/os/v1.5.8/vmware/rancheros.iso\n\n#### Special docker-machine Links\n\n- https://releases.rancher.com/os/v1.5.8/vmware/rancheros-autoformat.iso\n- https://releases.rancher.com/os/v1.5.8/proxmoxve/rancheros-autoformat.iso\n\n### Additional Downloads\n\n#### AMD64 Links\n\n* https://releases.rancher.com/os/v1.5.8/initrd\n* https://releases.rancher.com/os/v1.5.8/vmlinuz\n* https://releases.rancher.com/os/v1.5.8/rancheros.ipxe\n* https://releases.rancher.com/os/v1.5.8/rootfs.tar.gz\n\n#### ARM64 Links\n\n* https://releases.rancher.com/os/v1.5.8/arm64/initrd\n* https://releases.rancher.com/os/v1.5.8/arm64/vmlinuz\n* https://releases.rancher.com/os/v1.5.8/arm64/rootfs_arm64.tar.gz\n* https://releases.rancher.com/os/v1.5.8/arm64/rancheros-raspberry-pi64.zip\n\n#### Cloud Links\n\n* https://releases.rancher.com/os/v1.5.8/rancheros-openstack.img\n* https://releases.rancher.com/os/v1.5.8/rancheros-digitalocean.img\n* https://releases.rancher.com/os/v1.5.8/rancheros-cloudstack.img\n* https://releases.rancher.com/os/v1.5.8/rancheros-aliyun.vhd\n* https://releases.rancher.com/os/v1.5.8/rancheros-gce.tar.gz\n\n#### VMware Links\n\n* https://releases.rancher.com/os/v1.5.8/vmware/initrd\n* https://releases.rancher.com/os/v1.5.8/vmware/rancheros.vmdk\n* https://releases.rancher.com/os/v1.5.8/vmware/rootfs.tar.gz\n\n#### Hyper-V Links\n\n* https://releases.rancher.com/os/v1.5.8/hyperv/initrd\n* https://releases.rancher.com/os/v1.5.8/hyperv/rootfs.tar.gz\n\n#### Proxmox VE Links\n\n* https://releases.rancher.com/os/v1.5.8/proxmoxve/initrd\n* https://releases.rancher.com/os/v1.5.8/proxmoxve/rootfs.tar.gz\n\n#### 4G-LTE Links\n\n* https://releases.rancher.com/os/v1.5.8/4glte/initrd\n* https://releases.rancher.com/os/v1.5.8/4glte/rootfs.tar.gz\n\n**Note**:\n1. you can use `http` instead of `https` in the above URLs, e.g. for iPXE.\n2. you can use `latest` instead of `v1.5.8` in the above URLs if you want to get the latest version.\n\n### Amazon\n\nSSH keys are added to the **`rancher`** user, so you must log in using the **rancher** user.\n\n**HVM**\n\nRegion | Type | AMI\n-------|------|------\neu-north-1 | HVM | [ami-08b189555c5d2d8c3](https://eu-north-1.console.aws.amazon.com/ec2/home?region=eu-north-1#launchInstanceWizard:ami=ami-08b189555c5d2d8c3)\nap-south-1 | HVM | [ami-0086964cb1ffc4fdb](https://ap-south-1.console.aws.amazon.com/ec2/home?region=ap-south-1#launchInstanceWizard:ami=ami-0086964cb1ffc4fdb)\neu-west-3 | HVM | [ami-088930cafc1ad9f20](https://eu-west-3.console.aws.amazon.com/ec2/home?region=eu-west-3#launchInstanceWizard:ami=ami-088930cafc1ad9f20)\neu-west-2 | HVM | [ami-0fdf07cfd187af004](https://eu-west-2.console.aws.amazon.com/ec2/home?region=eu-west-2#launchInstanceWizard:ami=ami-0fdf07cfd187af004)\neu-west-1 | HVM | [ami-0cea454c576ececbd](https://eu-west-1.console.aws.amazon.com/ec2/home?region=eu-west-1#launchInstanceWizard:ami=ami-0cea454c576ececbd)\nap-northeast-2 | HVM | [ami-0fdb6555f88256d12](https://ap-northeast-2.console.aws.amazon.com/ec2/home?region=ap-northeast-2#launchInstanceWizard:ami=ami-0fdb6555f88256d12)\nap-northeast-1 | HVM | [ami-052c75c3e8757bcd9](https://ap-northeast-1.console.aws.amazon.com/ec2/home?region=ap-northeast-1#launchInstanceWizard:ami=ami-052c75c3e8757bcd9)\nsa-east-1 | HVM | [ami-04e51c9d1edad1bfd](https://sa-east-1.console.aws.amazon.com/ec2/home?region=sa-east-1#launchInstanceWizard:ami=ami-04e51c9d1edad1bfd)\nca-central-1 | HVM | [ami-006a1ff3bf21003b3](https://ca-central-1.console.aws.amazon.com/ec2/home?region=ca-central-1#launchInstanceWizard:ami=ami-006a1ff3bf21003b3)\nap-southeast-1 | HVM | [ami-03b14c67c74644c2b](https://ap-southeast-1.console.aws.amazon.com/ec2/home?region=ap-southeast-1#launchInstanceWizard:ami=ami-03b14c67c74644c2b)\nap-southeast-2 | HVM | [ami-07059c8f12411bfcb](https://ap-southeast-2.console.aws.amazon.com/ec2/home?region=ap-southeast-2#launchInstanceWizard:ami=ami-07059c8f12411bfcb)\neu-central-1 | HVM | [ami-0fc1a9332c246bc56](https://eu-central-1.console.aws.amazon.com/ec2/home?region=eu-central-1#launchInstanceWizard:ami=ami-0fc1a9332c246bc56)\nus-east-1 | HVM | [ami-02fe87f853d560d52](https://us-east-1.console.aws.amazon.com/ec2/home?region=us-east-1#launchInstanceWizard:ami=ami-02fe87f853d560d52)\nus-east-2 | HVM | [ami-004259f4c48585992](https://us-east-2.console.aws.amazon.com/ec2/home?region=us-east-2#launchInstanceWizard:ami=ami-004259f4c48585992)\nus-west-1 | HVM | [ami-0b382b76fadc95544](https://us-west-1.console.aws.amazon.com/ec2/home?region=us-west-1#launchInstanceWizard:ami=ami-0b382b76fadc95544)\nus-west-2 | HVM | [ami-0cdefa6a0646eb511](https://us-west-2.console.aws.amazon.com/ec2/home?region=us-west-2#launchInstanceWizard:ami=ami-0cdefa6a0646eb511)\n\nAdditionally, images are available with support for Amazon EC2 Container Service (ECS) [here](https://rancher.com/docs/os/v1.x/en/installation/amazon-ecs/#amazon-ecs-enabled-amis).\n\n### Azure\n\nYou can get RancherOS in the [Azure Marketplace](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/rancher.rancheros), currently only the `rancher` user can be logged in through SSH keys.\n\n## Documentation for RancherOS\n\nPlease refer to our [RancherOS Documentation](https://rancher.com/docs/os/v1.x/en/) website to read all about RancherOS. It has detailed information on how RancherOS works, getting-started and other details.\n\n## Support, Discussion, and Community\nIf you need any help with RancherOS or Rancher, please join us at either our [Rancher forums](http://forums.rancher.com) or [#rancher IRC channel](http://webchat.freenode.net/?channels=rancher) where most of our team hangs out at.\n\nFor security issues, please email security@rancher.com instead of posting a public issue in GitHub.  You may (but are not required to) use the GPG key located on [Keybase](https://keybase.io/rancher).\n\n\nPlease submit any **RancherOS** bugs, issues, and feature requests to [rancher/os](//github.com/rancher/os/issues).\n\nPlease submit any **Rancher** bugs, issues, and feature requests to [rancher/rancher](//github.com/rancher/rancher/issues).\n\n## License\n\nCopyright (c) 2014-2020 [Rancher Labs, Inc.](http://rancher.com)\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n[http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 1.5341796875,
          "content": "package main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com/rancher/os/cmd/cloudinitexecute\"\n\t\"github.com/rancher/os/cmd/cloudinitsave\"\n\t\"github.com/rancher/os/cmd/control\"\n\tosInit \"github.com/rancher/os/cmd/init\"\n\t\"github.com/rancher/os/cmd/network\"\n\t\"github.com/rancher/os/cmd/power\"\n\t\"github.com/rancher/os/cmd/respawn\"\n\t\"github.com/rancher/os/cmd/sysinit\"\n\t\"github.com/rancher/os/cmd/wait\"\n\t\"github.com/rancher/os/pkg/dfs\"\n\n\t\"github.com/docker/docker/pkg/reexec\"\n)\n\nvar entrypoints = map[string]func(){\n\t\"autologin\":          control.AutologinMain,\n\t\"cloud-init-execute\": cloudinitexecute.Main,\n\t\"cloud-init-save\":    cloudinitsave.Main,\n\t\"dockerlaunch\":       dfs.Main,\n\t\"init\":               osInit.MainInit,\n\t\"netconf\":            network.Main,\n\t\"recovery\":           control.AutologinMain,\n\t\"ros-bootstrap\":      control.BootstrapMain,\n\t\"ros-sysinit\":        sysinit.Main,\n\t\"wait-for-docker\":    wait.Main,\n\t\"respawn\":            respawn.Main,\n\n\t// Power commands\n\t\"halt\":     power.Shutdown,\n\t\"poweroff\": power.Shutdown,\n\t\"reboot\":   power.Shutdown,\n\t\"shutdown\": power.Shutdown,\n}\n\nfunc main() {\n\tif 0 == 1 {\n\t\t// TODO: move this into a \"dev/debug +build\"\n\t\tfmt.Fprintf(os.Stderr, \"ros main(%s) ppid:%d - print to stdio\\n\", os.Args[0], os.Getppid())\n\n\t\tfilename := \"/dev/kmsg\"\n\t\tf, err := os.OpenFile(filename, os.O_WRONLY, 0644)\n\t\tif err == nil {\n\t\t\tfmt.Fprintf(f, \"ros main(%s) ppid:%d - print to %s\\n\", os.Args[0], os.Getppid(), filename)\n\t\t}\n\t\tf.Close()\n\t}\n\n\tfor name, f := range entrypoints {\n\t\treexec.Register(name, f)\n\t}\n\n\tif !reexec.Init() {\n\t\tcontrol.Main()\n\t}\n}\n"
        },
        {
          "name": "os-config.tpl.yml",
          "type": "blob",
          "size": 11.775390625,
          "content": "rancher:\n  shutdown_timeout: 60\n  http_load_retries: 6\n  environment:\n    VERSION: {{.VERSION}}\n    SUFFIX: {{.SUFFIX}}\n    REGISTRY_DOMAIN: \"docker.io\"\n  defaults:\n    hostname: {{.HOSTNAME_DEFAULT}}\n    {{if eq \"amd64\" .ARCH -}}\n    docker:\n      engine: {{.USER_DOCKER_ENGINE_VERSION}}\n    {{else -}}\n    docker:\n      engine: {{.USER_DOCKER_ENGINE_VERSION}}\n    {{end -}}\n    network:\n      dhcp_timeout: 10\n      dns:\n        nameservers: [8.8.8.8, 8.8.4.4]\n    system_docker_logs: /var/log/system-docker.log\n  ssh:\n    daemon: true\n  hypervisor_service: true\n  services_include:\n  {{- if eq \"true\" .AZURE_SERVICE}}\n    waagent: true\n  {{- end}}\n  {{- if eq \"true\" .PROXMOXVE_SERVICE}}\n    qemu-guest-agent: true\n  {{- end}}\n  bootstrap:\n    bootstrap:\n      image: {{.OS_REPO}}/os-bootstrap:{{.VERSION}}{{.SUFFIX}}\n      command: ros-bootstrap\n      labels:\n        io.rancher.os.detach: \"false\"\n        io.rancher.os.scope: system\n      log_driver: json-file\n      net: none\n      privileged: true\n      volumes:\n      - /dev:/host/dev\n      - /lib/modules:/lib/modules\n      - /lib/firmware:/lib/firmware\n      - /usr/bin/ros:/usr/bin/ros:ro\n      - /usr/bin/ros:/usr/bin/ros-bootstrap:ro\n      - /usr/share/ros:/usr/share/ros:ro\n      - /var/lib/rancher:/var/lib/rancher:ro\n      - /var/log:/var/log\n  cloud_init_services:\n    cloud-init:\n      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}\n      command: cloud-init-save\n      labels:\n        io.rancher.os.detach: \"false\"\n        io.rancher.os.scope: system\n      log_driver: json-file\n      net: host\n      uts: host\n      pid: host\n      ipc: host\n      privileged: true\n      volumes:\n      - /etc/resolv.conf:/etc/resolv.conf\n      - /dev:/host/dev\n      - /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt.rancher\n      - /lib/modules:/lib/modules\n      - /lib/firmware:/lib/firmware\n      - /usr/bin/ros:/usr/bin/ros:ro\n      - /usr/bin/ros:/usr/bin/cloud-init-save\n      - /usr/share/ros:/usr/share/ros:ro\n      - /var/lib/rancher:/var/lib/rancher\n      - /var/lib/rancher/conf:/var/lib/rancher/conf\n      - /var/log:/var/log\n  bootstrap_docker:\n    bridge: none\n    storage_driver: overlay2\n    restart: false\n    graph: /var/lib/system-docker\n    group: root\n    host: [\"unix:///var/run/system-docker.sock\"]\n    userland_proxy: false\n  console: {{.OS_CONSOLE}}\n  cloud_init:\n    datasources:\n    - configdrive:/media/config-2\n  repositories:\n    core:\n      url: {{.OS_SERVICES_REPO}}/{{.REPO_VERSION}}\n  state:\n    fstype: auto\n    oem_fstype: auto\n    oem_dev: LABEL=RANCHER_OEM\n    boot_fstype: auto\n    boot_dev: LABEL=RANCHER_BOOT\n    rngd: true\n  sysctl:\n    fs.file-max: 1000000000\n  services:\n    command-volumes:\n      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}\n      command: echo\n      labels:\n        io.rancher.os.createonly: \"true\"\n        io.rancher.os.scope: system\n      log_driver: json-file\n      net: none\n      privileged: true\n      read_only: true\n      volumes:\n      - /usr/bin/ros:/usr/bin/ros:ro\n      - /usr/bin/system-docker:/usr/bin/system-docker:ro\n      - /usr/bin/system-docker-runc:/usr/bin/system-docker-runc:ro\n    system-volumes:\n      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}\n      command: echo\n      labels:\n        io.rancher.os.createonly: \"true\"\n        io.rancher.os.scope: system\n      log_driver: json-file\n      net: none\n      privileged: true\n      read_only: true\n      volumes:\n      - /dev:/host/dev\n      - /etc/docker:/etc/docker\n      - /etc/hosts:/etc/hosts\n      - /etc/logrotate.d:/etc/logrotate.d\n      - /etc/resolv.conf:/etc/resolv.conf\n      - /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt.rancher\n      - /etc/selinux:/etc/selinux\n      - /lib/firmware:/lib/firmware\n      - /lib/modules:/lib/modules\n      - /run:/run\n      - /usr/share/ros:/usr/share/ros\n      - /var/lib/boot2docker:/var/lib/boot2docker\n      - /var/lib/rancher/cache:/var/lib/rancher/cache\n      - /var/lib/rancher/conf:/var/lib/rancher/conf\n      - /var/lib/rancher:/var/lib/rancher\n      - /var/lib/waagent:/var/lib/waagent\n      - /var/log:/var/log\n      - /var/run:/var/run\n    container-data-volumes:\n      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}\n      command: echo\n      labels:\n        io.rancher.os.createonly: \"true\"\n        io.rancher.os.scope: system\n      log_driver: json-file\n      net: none\n      privileged: true\n      read_only: true\n      volumes:\n      - /var/lib/user-docker:/var/lib/docker\n      - /var/lib/m-user-docker:/var/lib/m-user-docker\n    user-volumes:\n      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}\n      command: echo\n      labels:\n        io.rancher.os.createonly: \"true\"\n        io.rancher.os.scope: system\n      log_driver: json-file\n      net: none\n      privileged: true\n      read_only: true\n      volumes:\n      - /home:/home\n      - /opt:/opt\n      - /var/lib/kubelet:/var/lib/kubelet\n    media-volumes:\n      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}\n      command: echo\n      labels:\n        io.rancher.os.createonly: \"true\"\n        io.rancher.os.scope: system\n      log_driver: json-file\n      net: none\n      privileged: true\n      read_only: true\n      volumes:\n      - /media:/media:shared\n      - /mnt:/mnt:shared\n    all-volumes:\n      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}\n      command: echo\n      labels:\n        io.rancher.os.createonly: \"true\"\n        io.rancher.os.scope: system\n        io.docker.compose.rebuild: always\n      log_driver: json-file\n      net: none\n      privileged: true\n      read_only: true\n      volumes_from:\n      - container-data-volumes\n      - command-volumes\n      - media-volumes\n      - user-volumes\n      - system-volumes\n    {{if eq \"amd64\" .ARCH -}}\n    acpid:\n      image: {{.OS_REPO}}/os-acpid:{{.VERSION}}{{.SUFFIX}}\n      command: /usr/sbin/acpid -f\n      labels:\n        io.rancher.os.scope: system\n      net: host\n      uts: host\n      privileged: true\n      volumes_from:\n      - command-volumes\n      - system-volumes\n    {{end -}}\n    cloud-init-execute:\n      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}\n      command: cloud-init-execute -pre-console\n      labels:\n        io.rancher.os.detach: \"false\"\n        io.rancher.os.scope: system\n        io.rancher.os.after: ntp\n      net: host\n      uts: host\n      privileged: true\n      volumes_from:\n      - system-volumes\n      volumes:\n      - /usr/bin/ros:/usr/bin/ros:ro\n    console:\n      image: {{.OS_REPO}}/os-console:{{.VERSION}}{{.SUFFIX}}\n      command: ros console-init\n      labels:\n        io.rancher.os.scope: system\n        io.rancher.os.after: cloud-init-execute\n        io.docker.compose.rebuild: always\n        io.rancher.os.console: default\n      environment:\n      - HTTP_PROXY\n      - HTTPS_PROXY\n      - NO_PROXY\n      net: host\n      uts: host\n      pid: host\n      ipc: host\n      privileged: true\n      restart: always\n      volumes_from:\n      - all-volumes\n      volumes:\n      - /usr/bin/iptables:/sbin/iptables:ro\n    logrotate:\n      image: {{.OS_REPO}}/os-logrotate:{{.VERSION}}{{.SUFFIX}}\n      command: /usr/sbin/logrotate -v /etc/logrotate.conf\n      labels:\n        io.rancher.os.createonly: \"true\"\n        io.rancher.os.scope: system\n        io.rancher.os.before: system-cron\n        cron.schedule: \"@hourly\"\n      uts: host\n      net: none\n      privileged: true\n      volumes_from:\n      - command-volumes\n      - system-volumes\n    network:\n      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}\n      command: netconf\n      labels:\n        io.rancher.os.scope: system\n        io.rancher.os.after: udev\n        io.rancher.os.reloadconfig: \"true\"\n      net: host\n      uts: host\n      pid: host\n      privileged: true\n      volumes_from:\n      - system-volumes\n      - command-volumes\n      volumes:\n      - /usr/bin/iptables:/sbin/iptables:ro\n    ntp:\n      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}\n      command: /bin/start_ntp.sh\n      labels:\n        io.rancher.os.scope: system\n        io.rancher.os.after: network\n      net: host\n      uts: host\n      privileged: true\n      restart: always\n      volumes_from:\n      - command-volumes\n      - system-volumes\n    preload-user-images:\n      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}\n      command: ros preload-images\n      net: host\n      labels:\n        io.rancher.os.detach: \"false\"\n        io.rancher.os.scope: system\n        io.rancher.os.after: console\n      privileged: true\n      volumes_from:\n      - command-volumes\n      - system-volumes\n    syslog:\n      image: {{.OS_REPO}}/os-syslog:{{.VERSION}}{{.SUFFIX}}\n      command: rsyslogd -n\n      labels:\n        io.rancher.os.scope: system\n      log_driver: json-file\n      net: host\n      uts: host\n      privileged: true\n      restart: always\n      volumes_from:\n      - command-volumes\n      - system-volumes\n    system-cron:\n      {{if eq \"amd64\" .ARCH -}}\n      image: rancher/container-crontab:v0.4.0\n      {{else -}}\n      image: niusmallnan/container-crontab:v0.4.0{{.SUFFIX}}\n      {{end -}}\n      labels:\n        io.rancher.os.scope: system\n      uts: host\n      net: none\n      privileged: true\n      restart: always\n      volumes:\n      - /var/run/system-docker.sock:/var/run/docker.sock\n      environment:\n        DOCKER_API_VERSION: \"1.22\"\n    udev-cold:\n      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}\n      command: ros udev-settle\n      labels:\n        io.rancher.os.detach: \"false\"\n        io.rancher.os.scope: system\n      net: host\n      uts: host\n      privileged: true\n      volumes_from:\n      - command-volumes\n      - system-volumes\n    udev:\n      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}\n      command: udevd\n      labels:\n        io.rancher.os.detach: \"true\"\n        io.rancher.os.scope: system\n        io.rancher.os.after: udev-cold\n      net: host\n      uts: host\n      privileged: true\n      restart: always\n      volumes_from:\n      - command-volumes\n      - system-volumes\n    docker:\n      {{if eq \"amd64\" .ARCH -}}\n      image: {{.OS_REPO}}/os-docker:{{.USER_DOCKER_VERSION}}{{.SUFFIX}}\n      {{else -}}\n      image: {{.OS_REPO}}/os-docker:{{.USER_DOCKER_VERSION}}{{.SUFFIX}}\n      {{end -}}\n      command: ros user-docker\n      environment:\n      - HTTP_PROXY\n      - HTTPS_PROXY\n      - NO_PROXY\n      labels:\n        io.rancher.os.scope: system\n        io.rancher.os.after: console\n      net: host\n      pid: host\n      ipc: host\n      uts: host\n      privileged: true\n      restart: always\n      volumes_from:\n      - all-volumes\n      volumes:\n      - /sys:/host/sys\n      - /var/lib/system-docker:/var/lib/system-docker:shared\n    subscriber:\n      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}\n      command: os-subscriber\n      environment:\n      - IN_DOCKER=true\n      labels:\n        io.rancher.os.scope: system\n        io.rancher.os.after: console\n        cron.schedule: \"0 0 3 * * ?\"\n      privileged: true\n      pid: host\n      ipc: host\n      net: host\n      uts: host\n      volumes_from:\n      - command-volumes\n      - system-volumes\n      volumes:\n      - /sys:/host/sys\n  system_docker:\n    exec: true\n    storage_driver: overlay2\n    bip: 172.18.42.1/16\n    restart: false\n    graph: /var/lib/system-docker\n    group: root\n    host: [\"unix:///var/run/system-docker.sock\"]\n    pid_file: /var/run/system-docker.pid\n    exec_root: /var/run/system-docker\n    config_file: /etc/docker/system-docker.json\n    userland_proxy: false\n    log_opts:\n      max-size: 25m\n      max-file: 2\n  upgrade:\n    url: {{.OS_RELEASES_YML}}/releases{{.SUFFIX}}.yml\n    image: {{.OS_REPO}}/os\n    policy: download\n  docker:\n    {{if eq \"amd64\" .ARCH -}}\n    engine: {{.USER_DOCKER_ENGINE_VERSION}}\n    {{else -}}\n    engine: {{.USER_DOCKER_ENGINE_VERSION}}\n    {{end -}}\n    group: docker\n    host: [\"unix:///var/run/docker.sock\"]\n    log_opts:\n      max-size: 25m\n      max-file: 2\n    tls_args: [--tlsverify, --tlscacert=/etc/docker/tls/ca.pem, --tlscert=/etc/docker/tls/server-cert.pem, --tlskey=/etc/docker/tls/server-key.pem,\n      '-H=0.0.0.0:2376']\n"
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "rancheros.png",
          "type": "blob",
          "size": 17.8603515625,
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "trash.conf",
          "type": "blob",
          "size": 2.70703125,
          "content": "github.com/Microsoft/go-winio v0.1.0\ngithub.com/Sirupsen/logrus v0.11.5\ngithub.com/cloudfoundry-incubator/candiedyaml 457a86017e98f33631ffe83db8e66be960dfc517 https://github.com/rancher/candiedyaml\ngithub.com/codegangsta/cli d2b9ba9c38eb353ba3c6df3f57072348e19cc5c7 https://github.com/rancher/cli-1\ngithub.com/coreos/yaml 6b16a5714269b2f70720a45406b1babd947a17ef\ngithub.com/davecgh/go-spew 5215b55f46b2b919f50a1df0eaa5886afe4e3b3d\ngithub.com/docker/containerd b7a26a1c481d5ba88a2df757954a54439142ceb1 https://github.com/ibuildthecloud/containerd.git\ngithub.com/docker/distribution 467fc068d88aa6610691b7f1a677271a3fac4aac \ngithub.com/docker/docker b40c87254f587af7cad8e8128f061a2a7f367343 https://github.com/rancher/docker.git\ngithub.com/docker/engine-api v0.3.3\ngithub.com/docker/go-connections v0.2.0\ngithub.com/docker/go-units 651fc226e7441360384da338d0fd37f2440ffbe3\ngithub.com/docker/libcompose 2987bb539b670b71a33575bdee00bd351be60f20 https://github.com/rancher/libcompose.git\ngithub.com/docker/libnetwork v0.5.6\ngithub.com/docker/machine 4a8e93ac9bc2ced1c3bc4a43c03fdaa1c2749205\ngithub.com/flynn/go-shlex 3f9db97f856818214da2e1057f8ad84803971cff\ngithub.com/gorilla/context 14f550f51a \ngithub.com/gorilla/mux e444e69cbd \ngithub.com/j-keck/arping 4f4d2c8983a18e2c9c63a3f339bc9a998c4557bc\ngithub.com/tredoe/term e551c64f56c0ac0469b4db1b70918e05bfd3ab20\ngithub.com/opencontainers/runc edc34c4a8c1e261b5ce926ff557ecde1aff19ce3 https://github.com/ibuildthecloud/runc.git\ngithub.com/packethost/packngo v0.1.0\ngithub.com/pkg/errors d62207b3dc916c342cd6a7180fa861d898cf42ee\ngithub.com/pmezard/go-difflib d8ed2627bdf02c080bf22230dbb337003b7aba2d\ngithub.com/ryanuber/go-glob 0067a9abd927e50aed5190662702f81231413ae0\ngithub.com/sigma/vmw-guestinfo master\ngithub.com/vmware/vmw-guestinfo master\ngithub.com/sigma/vmw-ovflib master\ngithub.com/sigma/bdoor master\ngithub.com/stretchr/testify a1f97990ddc16022ec7610326dd9bce31332c116\ngithub.com/vbatts/tar-split v0.9.11\ngithub.com/vishvananda/netlink b76f71f1d33745ac0833fff4277481599a8ee73f https://github.com/niusmallnan/netlink\ngithub.com/vishvananda/netns 54f0e4339ce73702a0607f49922aaa1e749b418d\ngithub.com/xeipuuv/gojsonpointer 6fe8760cad3569743d51ddbb243b26f8456742dc\ngithub.com/xeipuuv/gojsonreference e02fc20de94c78484cd5ffb007f8af96be030a45\ngithub.com/xeipuuv/gojsonschema 0c8571ac0ce161a5feb57375a9cdf148c98c0f70\ngithub.com/SvenDowideit/cpuid dfdb6dba69f48dd44c5cd831950be648f71162ca\ngolang.org/x/crypto 2f3083f6163ef51179ad42ed523a18c9a1141467\ngolang.org/x/net 991d3e32f76f19ee6d9caadb3a22eae8d23315f7 https://github.com/golang/net.git\ngolang.org/x/sys eb2c74142fd19a79b3f237334c7384d5167b1b46 https://github.com/golang/sys.git\ngithub.com/fatih/structs dc3312cb1a4513a366c4c9e622ad55c32df12ed3\ngithub.com/pin/tftp v2.1.0\n"
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}