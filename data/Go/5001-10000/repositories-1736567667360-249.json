{
  "metadata": {
    "timestamp": 1736567667360,
    "page": 249,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dominikh/go-tools",
      "stars": 6278,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0478515625,
          "content": "*.golden -text\n*.svg binary\n**/testdata/** -text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4541015625,
          "content": "/cmd/keyify/keyify\n/cmd/staticcheck/staticcheck\n/cmd/structlayout-optimize/structlayout-optimize\n/cmd/structlayout-pretty/structlayout-pretty\n/cmd/structlayout/structlayout\n/dist/20??.?.?/\n/dist/20??.?/\n/internal/cmd/irdump/irdump\n/website/.hugo_build.lock\n/website/public\n/website/resources\n/website/assets/img/sponsors\n/website/data/sponsors.toml\n/website/data/copyrights.toml\n/website/data/checks.json\n/website/content/docs/configuration/default_config/index.md\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1005859375,
          "content": "[submodule \"website/themes/docsy\"]\n\tpath = website/themes/docsy\n\turl = https://github.com/google/docsy\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.033203125,
          "content": "Copyright (c) 2016 Dominik Honnef\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "LICENSE-THIRD-PARTY",
          "type": "blob",
          "size": 6.291015625,
          "content": "Staticcheck and its related tools make use of third party projects,\neither by reusing their code, or by statically linking them into\nresulting binaries. These projects are:\n\n* The Go Programming Language - https://golang.org/\n  golang.org/x/mod - https://github.com/golang/mod\n  golang.org/x/tools - https://github.com/golang/tools\n  golang.org/x/sys - https://github.com/golang/sys\n  golang.org/x/xerrors - https://github.com/golang/xerrors\n\n    Copyright (c) 2009 The Go Authors. All rights reserved.\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions are\n    met:\n\n       * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n       * Redistributions in binary form must reproduce the above\n    copyright notice, this list of conditions and the following disclaimer\n    in the documentation and/or other materials provided with the\n    distribution.\n       * Neither the name of Google Inc. nor the names of its\n    contributors may be used to endorse or promote products derived from\n    this software without specific prior written permission.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n    \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n    A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n    OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n    SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n    LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n    DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n    (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n    OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n* github.com/BurntSushi/toml - https://github.com/BurntSushi/toml\n\n    The MIT License (MIT)\n\n    Copyright (c) 2013 TOML authors\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n    THE SOFTWARE.\n\n* gogrep - https://github.com/mvdan/gogrep\n\n    Copyright (c) 2017, Daniel Mart√≠. All rights reserved.\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions are\n    met:\n\n       * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n       * Redistributions in binary form must reproduce the above\n    copyright notice, this list of conditions and the following disclaimer\n    in the documentation and/or other materials provided with the\n    distribution.\n       * Neither the name of the copyright holder nor the names of its\n    contributors may be used to endorse or promote products derived from\n    this software without specific prior written permission.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n    \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n    A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n    OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n    SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n    LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n    DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n    (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n    OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n* gosmith - https://github.com/dvyukov/gosmith\n\n    Copyright (c) 2014 Dmitry Vyukov. All rights reserved.\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions are\n    met:\n\n       * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n       * Redistributions in binary form must reproduce the above\n    copyright notice, this list of conditions and the following disclaimer\n    in the documentation and/or other materials provided with the\n    distribution.\n       * The name of Dmitry Vyukov may be used to endorse or promote\n    products derived from this software without specific prior written permission.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n    \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n    A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n    OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n    SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n    LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n    DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n    (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n    OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.8916015625,
          "content": "<div align=\"center\">\n\t<h1><img alt=\"Staticcheck logo\" src=\"/images/logo.svg\" height=\"300\" /><br />\n\t\tThe advanced Go linter\n\t</h1>\n</div>\n\nStaticcheck is a state of the art linter for the [Go programming\nlanguage](https://go.dev/). Using static analysis, it finds bugs and performance issues,\noffers simplifications, and enforces style rules.\n\n**Financial support by [private and corporate sponsors](https://staticcheck.dev/sponsors) guarantees the tool's continued development.\nPlease [become a sponsor](https://github.com/users/dominikh/sponsorship) if you or your company rely on Staticcheck.**\n\n\n## Documentation\n\nYou can find extensive documentation on Staticcheck on [its website](https://staticcheck.dev/docs/).\n\n## Installation\n\n### Releases\n\nIt is recommended that you run released versions of the tools.\nThese releases can be found as git tags (e.g. `2022.1`).\n\nThe easiest way of installing a release is by using `go install`, for example `go install honnef.co/go/tools/cmd/staticcheck@2022.1`.\nAlternatively, we also offer [prebuilt binaries](https://github.com/dominikh/go-tools/releases).\n\nYou can find more information about installation and releases in the [documentation](https://staticcheck.dev/docs/getting-started/).\n\n### Master\n\nYou can also run the master branch instead of a release. Note that\nwhile the master branch is usually stable, it may still contain new\nchecks or backwards incompatible changes that break your build. By\nusing the master branch you agree to become a beta tester.\n\n## Tools\n\nAll of the following tools can be found in the cmd/ directory. Each\ntool is accompanied by its own README, describing it in more detail.\n\n| Tool                                               | Description                                                             |\n|----------------------------------------------------|-------------------------------------------------------------------------|\n| [staticcheck](cmd/staticcheck/)                    | Go static analysis, detecting bugs, performance issues, and much more. |\n| [structlayout](cmd/structlayout/)                  | Displays the layout (field sizes and padding) of structs.               |\n| [structlayout-optimize](cmd/structlayout-optimize) | Reorders struct fields to minimize the amount of padding.               |\n| [structlayout-pretty](cmd/structlayout-pretty)     | Formats the output of structlayout with ASCII art.                      |\n\n## Libraries\n\nIn addition to the aforementioned tools, this repository contains the\nlibraries necessary to implement these tools.\n\nUnless otherwise noted, none of these libraries have stable APIs.\nTheir main purpose is to aid the implementation of the tools.\nYou'll have to expect semiregular backwards-incompatible changes if you decide to use these libraries.\n\n## System requirements\n\nStaticcheck can be compiled and run with the latest release of Go. It can analyze code targeting any version of Go upto\nthe latest release.\n"
        },
        {
          "name": "_benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "add-check.go",
          "type": "blob",
          "size": 2.8515625,
          "content": "//go:build ignore\n\npackage main\n\nimport (\n\t\"bytes\"\n\t\"go/format\"\n\t\"log\"\n\t\"os\"\n\t\"os/exec\"\n\t\"path/filepath\"\n\t\"regexp\"\n\t\"strings\"\n\t\"text/template\"\n)\n\nvar tmpl = `\npackage {{.lname}}\n\nimport (\n\t\"honnef.co/go/tools/analysis/lint\"\n\n\t\"golang.org/x/tools/go/analysis\"\n)\n\nvar SCAnalyzer = lint.InitializeAnalyzer(&lint.Analyzer{\n\tAnalyzer: &analysis.Analyzer{\n\t\tName: \"{{.name}}\",\n\t\tRun: run,\n\t\tRequires: []*analysis.Analyzer{},\n\t},\n\tDoc: &lint.RawDocumentation{\n\t\tTitle: \"\",\n\t\tText: {{.emptyRaw}},\n\t\t{{- if .quickfix }}\n\t\tBefore: {{.emptyRaw}},\n\t\tAfter: {{.emptyRaw}},\n\t\t{{- end }}\n\t\tSince: \"Unreleased\",\n\t\tSeverity: lint.SeverityWarning,\n\t},\n})\n\nvar Analyzer = SCAnalyzer.Analyzer\n\nfunc run(pass *analysis.Pass) (any, error) {\n\treturn nil, nil\n}\n`\n\nfunc main() {\n\tlog.SetFlags(0)\n\n\tvar t template.Template\n\tif _, err := t.Parse(tmpl); err != nil {\n\t\tlog.Fatalln(\"couldn't parse template:\", err)\n\t}\n\n\tif len(os.Args) != 2 {\n\t\tlog.Fatalf(\"Usage: %s <new check's name>\", os.Args[0])\n\t}\n\n\tname := os.Args[1]\n\tcheckRe := regexp.MustCompile(`^([A-Za-z]+)\\d{4}$`)\n\tparts := checkRe.FindStringSubmatch(name)\n\tif parts == nil {\n\t\tlog.Fatalf(\"invalid check name %q\", name)\n\t}\n\n\tvar catDir string\n\tprefix := strings.ToUpper(parts[1])\n\tswitch prefix {\n\tcase \"SA\":\n\t\tcatDir = \"staticcheck\"\n\tcase \"S\":\n\t\tcatDir = \"simple\"\n\tcase \"ST\":\n\t\tcatDir = \"stylecheck\"\n\tcase \"QF\":\n\t\tcatDir = \"quickfix\"\n\tdefault:\n\t\tlog.Fatalf(\"unknown check prefix %q\", prefix)\n\t}\n\n\tlname := strings.ToLower(name)\n\tdir := filepath.Join(catDir, lname)\n\tdst := filepath.Join(dir, lname+\".go\")\n\n\tmkdirp(dir)\n\n\tbuf := bytes.NewBuffer(nil)\n\tvars := map[string]any{\n\t\t\"name\":     name,\n\t\t\"lname\":    lname,\n\t\t\"emptyRaw\": \"``\",\n\t\t\"quickfix\": prefix == \"QF\",\n\t}\n\n\tif err := t.Execute(buf, vars); err != nil {\n\t\tlog.Fatalf(\"couldn't generate %s: %s\", dst, err)\n\t}\n\n\tb, err := format.Source(buf.Bytes())\n\tif err != nil {\n\t\tlog.Fatalf(\"couldn't gofmt %s: %s\", dst, err)\n\t}\n\n\twriteFile(dst, b)\n\n\ttestdata := filepath.Join(dir, \"testdata\", \"src\", \"example.com\", \"pkg\")\n\tmkdirp(testdata)\n\twriteFile(filepath.Join(testdata, \"pkg.go\"), []byte(\"package pkg\\n\"))\n\n\tout, err := exec.Command(\"go\", \"generate\", \"./...\").CombinedOutput()\n\tif err != nil {\n\t\tlog.Printf(\"could not run 'go generate ./...': %s\", err)\n\t\tlog.Println(\"Output:\")\n\t\tlog.Fatalln(string(out))\n\t}\n\n\tflags := []string{\n\t\t\"add\",\n\t\t\"--intent-to-add\",\n\t\t\"--verbose\",\n\n\t\tfilepath.Join(dir, lname+\"_test.go\"),\n\t\tfilepath.Join(testdata, \"pkg.go\"),\n\t\tdst,\n\t}\n\tcmd := exec.Command(\"git\", flags...)\n\tcmd.Stdout = os.Stdout\n\tcmd.Stderr = os.Stderr\n\tif err := cmd.Run(); err != nil {\n\t\tlog.Fatalln(\"could not run 'git add':\", err)\n\t}\n}\n\nfunc writeFile(path string, data []byte) {\n\tif err := os.WriteFile(path, data, 0677); err != nil {\n\t\tlog.Fatalf(\"couldn't write %s: %s\", path, err)\n\t}\n}\n\nfunc mkdirp(path string) {\n\tif err := os.MkdirAll(path, 0777); err != nil {\n\t\tlog.Fatalf(\"couldn't create directory %s: %s\", path, err)\n\t}\n}\n"
        },
        {
          "name": "analysis",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "debug",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "generate.go",
          "type": "blob",
          "size": 2.072265625,
          "content": "//go:build ignore\n\npackage main\n\nimport (\n\t\"bytes\"\n\t\"go/format\"\n\t\"log\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"regexp\"\n\t\"text/template\"\n)\n\nvar tmpl = `\n{{define \"analyzers\"}}\n// Code generated by generate.go. DO NOT EDIT.\n\npackage {{.dir}}\n\nimport (\n\t\"honnef.co/go/tools/analysis/lint\"\n{{- range $check := .checks}}\n\t\"honnef.co/go/tools/{{$.dir}}/{{$check}}\"\n{{- end}}\n)\n\nvar Analyzers = []*lint.Analyzer{\n{{- range $check := .checks}}\n\t{{$check}}.SCAnalyzer,\n{{- end}}\n}\n{{end}}\n\n{{define \"tests\"}}\n// Code generated by generate.go. DO NOT EDIT.\n\npackage {{.check}}\n\nimport (\n\t\"testing\"\n\n\t\"honnef.co/go/tools/analysis/lint/testutil\"\n)\n\nfunc TestTestdata(t *testing.T) {\n\ttestutil.Run(t, SCAnalyzer)\n}\n{{end}}\n`\n\nfunc main() {\n\tlog.SetFlags(0)\n\n\tdir, err := os.Getwd()\n\tif err != nil {\n\t\tlog.Fatalln(\"couldn't determine current directory:\", err)\n\t}\n\n\tdir = filepath.Base(dir)\n\n\tvar t template.Template\n\tif _, err = t.Parse(tmpl); err != nil {\n\t\tlog.Fatalln(\"couldn't parse templates:\", err)\n\t}\n\n\tdirs, err := filepath.Glob(\"*\")\n\tif err != nil {\n\t\tlog.Fatalln(\"couldn't enumerate checks:\", err)\n\t}\n\n\tcheckRe := regexp.MustCompile(`^[a-z]+\\d{4}$`)\n\tout := dirs[:0]\n\tfor _, dir := range dirs {\n\t\tif checkRe.MatchString(dir) {\n\t\t\tout = append(out, dir)\n\t\t}\n\t}\n\tdirs = out\n\n\tbuf := bytes.NewBuffer(nil)\n\n\tif err := t.ExecuteTemplate(buf, \"analyzers\", map[string]any{\"checks\": dirs, \"dir\": dir}); err != nil {\n\t\tlog.Fatalln(\"couldn't generate analysis.go:\", err)\n\t}\n\n\tb, err := format.Source(buf.Bytes())\n\tif err != nil {\n\t\tlog.Fatalln(\"couldn't gofmt analysis.go:\", err)\n\t}\n\tif err := os.WriteFile(\"analysis.go\", b, 0666); err != nil {\n\t\tlog.Fatalln(\"couldn't write analysis.go:\", err)\n\t}\n\n\tfor _, dir := range dirs {\n\t\tbuf.Reset()\n\t\tdst := filepath.Join(dir, dir+\"_test.go\")\n\t\tif err := t.ExecuteTemplate(buf, \"tests\", map[string]any{\"check\": dir}); err != nil {\n\t\t\tlog.Fatalf(\"couldn't generate %s: %s\", dst, err)\n\t\t}\n\n\t\tb, err := format.Source(buf.Bytes())\n\t\tif err != nil {\n\t\t\tlog.Fatalf(\"couldn't gofmt %s: %s\", dst, err)\n\t\t}\n\t\tif err := os.WriteFile(dst, b, 0666); err != nil {\n\t\t\tlog.Fatalf(\"couldn't write %s: %s\", dst, err)\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.3662109375,
          "content": "module honnef.co/go/tools\n\ngo 1.22.1\n\nrequire (\n\tgithub.com/BurntSushi/toml v1.4.1-0.20240526193622-a339e1f7089c\n\tgolang.org/x/exp v0.0.0-20231110203233-9a3e6036ecaa\n\tgolang.org/x/exp/typeparams v0.0.0-20231108232855-2478ac86f678\n\tgolang.org/x/sys v0.25.0\n\tgolang.org/x/tools v0.25.0\n)\n\nrequire (\n\tgolang.org/x/mod v0.21.0 // indirect\n\tgolang.org/x/sync v0.8.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 1.416015625,
          "content": "github.com/BurntSushi/toml v1.4.1-0.20240526193622-a339e1f7089c h1:pxW6RcqyfI9/kWtOwnv/G+AzdKuy2ZrqINhenH4HyNs=\ngithub.com/BurntSushi/toml v1.4.1-0.20240526193622-a339e1f7089c/go.mod h1:ukJfTF/6rtPPRCnwkur4qwRxa8vTRFBF0uk2lLoLwho=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngolang.org/x/exp v0.0.0-20231110203233-9a3e6036ecaa h1:FRnLl4eNAQl8hwxVVC17teOw8kdjVDVAiFMtgUdTSRQ=\ngolang.org/x/exp v0.0.0-20231110203233-9a3e6036ecaa/go.mod h1:zk2irFbV9DP96SEBUUAy67IdHUaZuSnrz1n472HUCLE=\ngolang.org/x/exp/typeparams v0.0.0-20231108232855-2478ac86f678 h1:1P7xPZEwZMoBoz0Yze5Nx2/4pxj6nw9ZqHWXqP0iRgQ=\ngolang.org/x/exp/typeparams v0.0.0-20231108232855-2478ac86f678/go.mod h1:AbB0pIl9nAr9wVwH+Z2ZpaocVmF5I4GyWCDIsVjR0bk=\ngolang.org/x/mod v0.21.0 h1:vvrHzRwRfVKSiLrG+d4FMl/Qi4ukBCE6kZlTUkDYRT0=\ngolang.org/x/mod v0.21.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/sync v0.8.0 h1:3NFvSEYkUoMifnESzZl15y791HH1qU2xm6eCJU5ZPXQ=\ngolang.org/x/sync v0.8.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.25.0 h1:r+8e+loiHxRqhXVl6ML1nO3l1+oFoWbnlu2Ehimmi34=\ngolang.org/x/sys v0.25.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/tools v0.25.0 h1:oFU9pkj/iJgs+0DT+VMHrx+oBKs/LJMV+Uvg78sl+fE=\ngolang.org/x/tools v0.25.0/go.mod h1:/vtpO8WL1N9cQC3FN5zPqb//fRXskFHbLKk4OW1Q7rg=\n"
        },
        {
          "name": "go",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "knowledge",
          "type": "tree",
          "content": null
        },
        {
          "name": "lintcmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "pattern",
          "type": "tree",
          "content": null
        },
        {
          "name": "printf",
          "type": "tree",
          "content": null
        },
        {
          "name": "quickfix",
          "type": "tree",
          "content": null
        },
        {
          "name": "sarif",
          "type": "tree",
          "content": null
        },
        {
          "name": "simple",
          "type": "tree",
          "content": null
        },
        {
          "name": "staticcheck.conf",
          "type": "blob",
          "size": 0.03125,
          "content": "checks = [\"inherit\", \"-SA9003\"]\n"
        },
        {
          "name": "staticcheck",
          "type": "tree",
          "content": null
        },
        {
          "name": "structlayout",
          "type": "tree",
          "content": null
        },
        {
          "name": "stylecheck",
          "type": "tree",
          "content": null
        },
        {
          "name": "unused",
          "type": "tree",
          "content": null
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}