{
  "metadata": {
    "timestamp": 1736567562238,
    "page": 160,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "golang/tools",
      "stars": 7456,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3369140625,
          "content": "# Treat all files in this repo as binary, with no git magic updating\n# line endings. Windows users contributing to Go will need to use a\n# modern version of git and editors capable of LF line endings.\n#\n# We'll prevent accidental CRLF line endings from entering the repo\n# via the git-review gofmt checks.\n#\n# See golang.org/issue/9281\n\n* -text\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0830078125,
          "content": "# Add no patterns to .gitignore except for files generated by the build.\nlast-change\n"
        },
        {
          "name": ".prettierrc",
          "type": "blob",
          "size": 0.0498046875,
          "content": "{\n  \"singleQuote\": true,\n  \"trailingComma\": \"es5\"\n}"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.8916015625,
          "content": "# Contributing to Go\n\nGo is an open source project.\n\nIt is the work of hundreds of contributors. We appreciate your help!\n\n## Filing issues\n\nWhen [filing an issue](https://golang.org/issue/new), make sure to answer these five questions:\n\n1.  What version of Go are you using (`go version`)?\n2.  What operating system and processor architecture are you using?\n3.  What did you do?\n4.  What did you expect to see?\n5.  What did you see instead?\n\nGeneral questions should go to the [golang-nuts mailing list](https://groups.google.com/group/golang-nuts) instead of the issue tracker.\nThe gophers there will answer or ask you to file an issue if you've tripped over a bug.\n\n## Contributing code\n\nPlease read the [Contribution Guidelines](https://golang.org/doc/contribute.html)\nbefore sending patches.\n\nUnless otherwise noted, the Go source files are distributed under\nthe BSD-style license found in the LICENSE file.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4189453125,
          "content": "Copyright 2009 The Go Authors.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google LLC nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "PATENTS",
          "type": "blob",
          "size": 1.2724609375,
          "content": "Additional IP Rights Grant (Patents)\n\n\"This implementation\" means the copyrightable works distributed by\nGoogle as part of the Go project.\n\nGoogle hereby grants to You a perpetual, worldwide, non-exclusive,\nno-charge, royalty-free, irrevocable (except as stated in this section)\npatent license to make, have made, use, offer to sell, sell, import,\ntransfer and otherwise run, modify and propagate the contents of this\nimplementation of Go, where such license applies only to those patent\nclaims, both currently owned or controlled by Google and acquired in\nthe future, licensable by Google that are necessarily infringed by this\nimplementation of Go.  This grant does not include claims that would be\ninfringed only as a consequence of further modification of this\nimplementation.  If you or your agent or exclusive licensee institute or\norder or agree to the institution of patent litigation against any\nentity (including a cross-claim or counterclaim in a lawsuit) alleging\nthat this implementation of Go or any code incorporated within this\nimplementation of Go constitutes direct or contributory patent\ninfringement, or inducement of patent infringement, then any patent\nrights granted to you under this License for this implementation of Go\nshall terminate as of the date such litigation is filed.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.341796875,
          "content": "# Go Tools\n\n[![PkgGoDev](https://pkg.go.dev/badge/golang.org/x/tools)](https://pkg.go.dev/golang.org/x/tools)\n\nThis repository provides the `golang.org/x/tools` module, comprising\nvarious tools and packages mostly for static analysis of Go programs,\nsome of which are listed below.\nUse the \"Go reference\" link above for more information about any package.\n\nIt also contains the\n[`golang.org/x/tools/gopls`](https://pkg.go.dev/golang.org/x/tools/gopls)\nmodule, whose root package is a language-server protocol (LSP) server for Go.\nAn LSP server analyses the source code of a project and\nresponds to requests from a wide range of editors such as VSCode and\nVim, allowing them to support IDE-like functionality.\n\n<!-- List only packages of general interest below. -->\n\nSelected commands:\n\n- `cmd/goimports` formats a Go program like `go fmt` and additionally\n  inserts import statements for any packages required by the file\n  after it is edited.\n- `cmd/callgraph` prints the call graph of a Go program.\n- `cmd/digraph` is a utility for manipulating directed graphs in textual notation.\n- `cmd/stringer` generates declarations (including a `String` method) for \"enum\" types.\n- `cmd/toolstash` is a utility to simplify working with multiple versions of the Go toolchain.\n\nThese commands may be fetched with a command such as\n```\ngo install golang.org/x/tools/cmd/goimports@latest\n```\n\nSelected packages:\n\n- `go/ssa` provides a static single-assignment form (SSA) intermediate\n  representation (IR) for Go programs, similar to a typical compiler,\n  for use by analysis tools.\n\n- `go/packages` provides a simple interface for loading, parsing, and\n  type checking a complete Go program from source code.\n\n- `go/analysis` provides a framework for modular static analysis of Go\n  programs.\n\n- `go/callgraph` provides call graphs of Go programs using a variety\n  of algorithms with different trade-offs.\n\n- `go/ast/inspector` provides an optimized means of traversing a Go\n  parse tree for use in analysis tools.\n\n- `go/cfg` provides a simple control-flow graph (CFG) for a Go function.\n\n- `go/gcexportdata` and `go/gccgoexportdata` read and write the binary\n  files containing type information used by the standard and `gccgo` compilers.\n\n- `go/types/objectpath` provides a stable naming scheme for named\n  entities (\"objects\") in the `go/types` API.\n\nNumerous other packages provide more esoteric functionality.\n\n<!-- Some that didn't make the cut:\n\ngolang.org/x/tools/benchmark/parse\ngolang.org/x/tools/go/ast/astutil\ngolang.org/x/tools/go/types/typeutil\ngolang.org/x/tools/playground\ngolang.org/x/tools/present\ngolang.org/x/tools/refactor/importgraph\ngolang.org/x/tools/refactor/rename\ngolang.org/x/tools/refactor/satisfy\ngolang.org/x/tools/txtar\n\n-->\n\n## Contributing\n\nThis repository uses Gerrit for code changes.\nTo learn how to submit changes, see https://go.dev/doc/contribute.\n\nThe git repository is https://go.googlesource.com/tools.\n\nThe main issue tracker for the tools repository is located at\nhttps://go.dev/issues. Prefix your issue with \"x/tools/(your\nsubdir):\" in the subject line, so it is easy to find.\n\n### JavaScript and CSS Formatting\n\nThis repository uses [prettier](https://prettier.io/) to format JS and CSS files.\n\nThe version of `prettier` used is 1.18.2.\n\nIt is encouraged that all JS and CSS code be run through this before submitting\na change. However, it is not a strict requirement enforced by CI.\n"
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "blog",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "codereview.cfg",
          "type": "blob",
          "size": 0.0205078125,
          "content": "issuerepo: golang/go\n"
        },
        {
          "name": "container",
          "type": "tree",
          "content": null
        },
        {
          "name": "copyright",
          "type": "tree",
          "content": null
        },
        {
          "name": "cover",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.333984375,
          "content": "module golang.org/x/tools\n\ngo 1.22.0 // => default GODEBUG has gotypesalias=0\n\nrequire (\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/yuin/goldmark v1.4.13\n\tgolang.org/x/mod v0.22.0\n\tgolang.org/x/net v0.34.0\n\tgolang.org/x/sync v0.10.0\n\tgolang.org/x/telemetry v0.0.0-20240521205824-bda55230c457\n)\n\nrequire golang.org/x/sys v0.29.0 // indirect\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 1.1416015625,
          "content": "github.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/yuin/goldmark v1.4.13 h1:fVcFKWvrslecOb/tg+Cc05dkeYx540o0FuFt3nUVDoE=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngolang.org/x/mod v0.22.0 h1:D4nJWe9zXqHOmWqj4VMOJhvzj7bEZg4wEYa759z1pH4=\ngolang.org/x/mod v0.22.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.34.0 h1:Mb7Mrk043xzHgnRM88suvJFwzVrRfHEHJEl5/71CKw0=\ngolang.org/x/net v0.34.0/go.mod h1:di0qlW3YNM5oh6GqDGQr92MyTozJPmybPK4Ev/Gm31k=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.29.0 h1:TPYlXGxvx1MGTn2GiZDhnjPA9wZzZeGKHHmKhHYvgaU=\ngolang.org/x/sys v0.29.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/telemetry v0.0.0-20240521205824-bda55230c457 h1:zf5N6UOrA487eEFacMePxjXAJctxKmyjKUsjA11Uzuk=\ngolang.org/x/telemetry v0.0.0-20240521205824-bda55230c457/go.mod h1:pRgIJT+bRLFKnoM1ldnzKoxTIn14Yxz928LQRYYgIN0=\n"
        },
        {
          "name": "go",
          "type": "tree",
          "content": null
        },
        {
          "name": "godoc",
          "type": "tree",
          "content": null
        },
        {
          "name": "gopls",
          "type": "tree",
          "content": null
        },
        {
          "name": "imports",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "playground",
          "type": "tree",
          "content": null
        },
        {
          "name": "present",
          "type": "tree",
          "content": null
        },
        {
          "name": "refactor",
          "type": "tree",
          "content": null
        },
        {
          "name": "txtar",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}