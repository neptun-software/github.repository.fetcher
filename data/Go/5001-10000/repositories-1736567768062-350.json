{
  "metadata": {
    "timestamp": 1736567768062,
    "page": 350,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "charmbracelet/soft-serve",
      "stars": 5525,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.169921875,
          "content": "root = true\n\n[*]\ncharset=utf-8\nend_of_line=lf\ninsert_final_newline=true\ntrim_trailing_whitespace=true\nindent_size=2\nindent_style=space\n\n[*.go]\nindent_size=4\nindent_style=tab\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0849609375,
          "content": "cmd/soft/soft\n./soft\n.ssh\n.repos\ndist\ndata/\ncompletions/\nmanpages/\nsoft_serve_ed25519*\n"
        },
        {
          "name": ".golangci-soft.yml",
          "type": "blob",
          "size": 0.58203125,
          "content": "run:\n  tests: false\n  timeout: 5m\n\nissues:\n  include:\n    - EXC0001\n    - EXC0005\n    - EXC0011\n    - EXC0012\n    - EXC0013\n\n  max-issues-per-linter: 0\n  max-same-issues: 0\n\nlinters:\n  enable:\n    - exhaustive\n    - goconst\n    - godot\n    - godox\n    - mnd\n    - gomoddirectives\n    - goprintffuncname\n    - misspell\n    - nakedret\n    - nestif\n    - noctx\n    - nolintlint\n    - prealloc\n    - wrapcheck\n\n  # disable default linters, they are already enabled in .golangci.yml\n  disable:\n    - errcheck\n    - gosimple\n    - govet\n    - ineffassign\n    - staticcheck\n    - typecheck\n    - unused\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 0.50390625,
          "content": "run:\n  tests: false\n  timeout: 5m\n\nissues:\n  include:\n    - EXC0001\n    - EXC0005\n    - EXC0011\n    - EXC0012\n    - EXC0013\n\n  max-issues-per-linter: 0\n  max-same-issues: 0\n\nlinters:\n  enable:\n    - bodyclose\n    - exportloopref\n    - gofumpt\n    - goimports\n    - gosec\n    - nilerr\n    - predeclared\n    - revive\n    - rowserrcheck\n    - sqlclosecheck\n    - tparallel\n    - unconvert\n    - unparam\n    - whitespace\n\nseverity:\n  default-severity: error\n  rules:\n    - linters:\n        - revive\n      severity: info\n"
        },
        {
          "name": ".goreleaser.yml",
          "type": "blob",
          "size": 0.478515625,
          "content": "includes:\n  - from_url:\n      url: charmbracelet/meta/main/goreleaser-soft-serve.yaml\n\nvariables:\n  main: \"./cmd/soft\"\n  binary_name: soft\n  description: \"A tasty, self-hostable Git server for the command lineüç¶\"\n  github_url: \"https://github.com/charmbracelet/soft-serve\"\n  maintainer: \"Ayman Bagabas <ayman@charm.sh>\"\n  brew_commit_author_name: \"Ayman Bagabas\"\n  brew_commit_author_email: \"ayman@charm.sh\"\n\n# yaml-language-server: $schema=https://goreleaser.com/static/schema-pro.json\n\n"
        },
        {
          "name": ".nfpm",
          "type": "tree",
          "content": null
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.560546875,
          "content": "FROM alpine:latest\n\n# Create directories\nWORKDIR /soft-serve\n# Expose data volume\nVOLUME /soft-serve\n\n# Environment variables\nENV SOFT_SERVE_DATA_PATH \"/soft-serve\"\nENV SOFT_SERVE_INITIAL_ADMIN_KEYS \"\"\n# workaround to prevent slowness in docker when running with a tty\nENV CI \"1\"\n\n# Expose ports\n# SSH\nEXPOSE 23231/tcp\n# HTTP\nEXPOSE 23232/tcp\n# Stats\nEXPOSE 23233/tcp\n# Git\nEXPOSE 9418/tcp\n\n# Set the default command\nENTRYPOINT [ \"/usr/local/bin/soft\", \"serve\" ]\n\nRUN apk update && apk add --update git bash openssh && rm -rf /var/cache/apk/*\n\nCOPY soft /usr/local/bin/soft\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0546875,
          "content": "MIT License\n\nCopyright (c) 2021-2023 Charmbracelet, Inc\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 24.50390625,
          "content": "# Soft Serve\n\n<p>\n    <img style=\"width: 451px\" src=\"https://stuff.charm.sh/soft-serve/soft-serve-header.png?0\" alt=\"A nice rendering of some melting ice cream with the words ‚ÄòCharm Soft Serve‚Äô next to it\"><br>\n    <a href=\"https://github.com/charmbracelet/soft-serve/releases\"><img src=\"https://img.shields.io/github/release/charmbracelet/soft-serve.svg\" alt=\"Latest Release\"></a>\n    <a href=\"https://pkg.go.dev/github.com/charmbracelet/soft-serve?tab=doc\"><img src=\"https://godoc.org/github.com/golang/gddo?status.svg\" alt=\"GoDoc\"></a>\n    <a href=\"https://github.com/charmbracelet/soft-serve/actions\"><img src=\"https://github.com/charmbracelet/soft-serve/workflows/build/badge.svg\" alt=\"Build Status\"></a>\n    <a href=\"https://nightly.link/charmbracelet/soft-serve/workflows/nightly/main\"><img src=\"https://shields.io/badge/-Nightly%20Builds-orange?logo=hackthebox&logoColor=fff&style=appveyor\"/></a>\n</p>\n\nA tasty, self-hostable Git server for the command line. üç¶\n\n<picture>\n  <source media=\"(max-width: 750px)\" srcset=\"https://github.com/charmbracelet/soft-serve/assets/42545625/c754c746-dc4c-44a6-9c39-28649264cbf2\">\n  <source media=\"(min-width: 750px)\" width=\"750\" srcset=\"https://github.com/charmbracelet/soft-serve/assets/42545625/c754c746-dc4c-44a6-9c39-28649264cbf2\">\n  <img src=\"https://github.com/charmbracelet/soft-serve/assets/42545625/c754c746-dc4c-44a6-9c39-28649264cbf2\" alt=\"Soft Serve screencast\">\n</picture>\n\n- Easy to navigate TUI available over SSH\n- Clone repos over SSH, HTTP, or Git protocol\n- Git LFS support with both HTTP and SSH backends\n- Manage repos with SSH\n- Create repos on demand with SSH or `git push`\n- Browse repos, files and commits with SSH-accessible UI\n- Print files over SSH with or without syntax highlighting and line numbers\n- Easy access control\n  - SSH authentication using public keys\n  - Allow/disallow anonymous access\n  - Add collaborators with SSH public keys\n  - Repos can be public or private\n  - User access tokens\n\n## Where can I see it?\n\nJust run `ssh git.charm.sh` for an example. You can also try some of the following commands:\n\n```bash\n# Jump directly to a repo in the TUI\nssh git.charm.sh -t soft-serve\n\n# Print out a directory tree for a repo\nssh git.charm.sh repo tree soft-serve\n\n# Print a specific file\nssh git.charm.sh repo blob soft-serve cmd/soft/main.go\n\n# Print a file with syntax highlighting and line numbers\nssh git.charm.sh repo blob soft-serve cmd/soft/main.go -c -l\n```\n\nOr you can use Soft Serve to browse local repositories using `soft browse\n[directory]` or running `soft` within a Git repository.\n\n## Installation\n\nSoft Serve is a single binary called `soft`. You can get it from a package\nmanager:\n\n```bash\n# macOS or Linux\nbrew install charmbracelet/tap/soft-serve\n\n# Windows (with Winget)\nwinget install charmbracelet.soft-serve\n\n# Arch Linux\npacman -S soft-serve\n\n# Nix\nnix-env -iA nixpkgs.soft-serve\n\n# Debian/Ubuntu\nsudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg\necho \"deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *\" | sudo tee /etc/apt/sources.list.d/charm.list\nsudo apt update && sudo apt install soft-serve\n\n# Fedora/RHEL\necho '[charm]\nname=Charm\nbaseurl=https://repo.charm.sh/yum/\nenabled=1\ngpgcheck=1\ngpgkey=https://repo.charm.sh/yum/gpg.key' | sudo tee /etc/yum.repos.d/charm.repo\nsudo yum install soft-serve\n```\n\nYou can also download a binary from the [releases][releases] page. Packages are\navailable in Alpine, Debian, and RPM formats. Binaries are available for Linux,\nmacOS, and Windows.\n\n[releases]: https://github.com/charmbracelet/soft-serve/releases\n\nOr just install it with `go`:\n\n```bash\ngo install github.com/charmbracelet/soft-serve/cmd/soft@latest\n```\n\nA [Docker image][docker] is also available.\n\n[docker]: https://github.com/charmbracelet/soft-serve/blob/main/docker.md\n\n## Setting up a server\n\nMake sure `git` is installed, then run `soft serve`. That‚Äôs it.\n\nThis will create a `data` directory that will store all the repos, ssh keys,\nand database.\n\nBy default, program configuration is stored within the `data` directory. But,\nthis can be overridden by setting a custom path to a config file with `SOFT_SERVE_CONFIG_LOCATION`\nthat is pre-created. If a config file pointed to by `SOFT_SERVE_CONFIG_LOCATION`, \nthe default location within the `data` dir is used for generating a default config.\n\nTo change the default data path use `SOFT_SERVE_DATA_PATH` environment variable.\n\n```sh\nSOFT_SERVE_DATA_PATH=/var/lib/soft-serve soft serve\n```\n\nWhen you run Soft Serve for the first time, make sure you have the\n`SOFT_SERVE_INITIAL_ADMIN_KEYS` environment variable is set to your ssh\nauthorized key. Any added key to this variable will be treated as admin with\nfull privileges.\n\nUsing this environment variable, Soft Serve will create a new `admin` user that\nhas full privileges. You can rename and change the user settings later.\n\nCheck out [Systemd][systemd] on how to run Soft Serve as a service using\nSystemd. Soft Serve packages in our Apt/Yum repositories come with Systemd\nservice units.\n\n[systemd]: https://github.com/charmbracelet/soft-serve/blob/main/systemd.md\n\n### Server Configuration\n\nOnce you start the server for the first time, the settings will be in\n`config.yaml` under your data directory. The default `config.yaml` is\nself-explanatory and will look like this:\n\n```yaml\n# Soft Serve Server configurations\n\n# The name of the server.\n# This is the name that will be displayed in the UI.\nname: \"Soft Serve\"\n\n# Log format to use. Valid values are \"json\", \"logfmt\", and \"text\".\nlog_format: \"text\"\n\n# The SSH server configuration.\nssh:\n  # The address on which the SSH server will listen.\n  listen_addr: \":23231\"\n\n  # The public URL of the SSH server.\n  # This is the address that will be used to clone repositories.\n  public_url: \"ssh://localhost:23231\"\n\n  # The path to the SSH server's private key.\n  key_path: \"ssh/soft_serve_host\"\n\n  # The path to the SSH server's client private key.\n  # This key will be used to authenticate the server to make git requests to\n  # ssh remotes.\n  client_key_path: \"ssh/soft_serve_client\"\n\n  # The maximum number of seconds a connection can take.\n  # A value of 0 means no timeout.\n  max_timeout: 0\n\n  # The number of seconds a connection can be idle before it is closed.\n  idle_timeout: 120\n\n# The Git daemon configuration.\ngit:\n  # The address on which the Git daemon will listen.\n  listen_addr: \":9418\"\n\n  # The maximum number of seconds a connection can take.\n  # A value of 0 means no timeout.\n  max_timeout: 0\n\n  # The number of seconds a connection can be idle before it is closed.\n  idle_timeout: 3\n\n  # The maximum number of concurrent connections.\n  max_connections: 32\n\n# The HTTP server configuration.\nhttp:\n  # The address on which the HTTP server will listen.\n  listen_addr: \":23232\"\n\n  # The path to the TLS private key.\n  tls_key_path: \"\"\n\n  # The path to the TLS certificate.\n  tls_cert_path: \"\"\n\n  # The public URL of the HTTP server.\n  # This is the address that will be used to clone repositories.\n  # Make sure to use https:// if you are using TLS.\n  public_url: \"http://localhost:23232\"\n\n# The database configuration.\ndb:\n  # The database driver to use.\n  # Valid values are \"sqlite\" and \"postgres\".\n  driver: \"sqlite\"\n  # The database data source name.\n  # This is driver specific and can be a file path or connection string.\n  # Make sure foreign key support is enabled when using SQLite.\n  data_source: \"soft-serve.db?_pragma=busy_timeout(5000)&_pragma=foreign_keys(1)\"\n\n# Git LFS configuration.\nlfs:\n  # Enable Git LFS.\n  enabled: true\n  # Enable Git SSH transfer.\n  ssh_enabled: false\n\n# Cron job configuration\njobs:\n  mirror_pull: \"@every 10m\"\n\n# The stats server configuration.\nstats:\n  # The address on which the stats server will listen.\n  listen_addr: \":23233\"\n# Additional admin keys.\n#initial_admin_keys:\n#  - \"ssh-rsa AAAAB3NzaC1yc2...\"\n```\n\nYou can also use environment variables, to override these settings. All server\nsettings environment variables start with `SOFT_SERVE_` followed by the setting\nname all in uppercase. Here are some examples:\n\n- `SOFT_SERVE_NAME`: The name of the server that will appear in the TUI\n- `SOFT_SERVE_SSH_LISTEN_ADDR`: SSH listen address\n- `SOFT_SERVE_SSH_KEY_PATH`: SSH host key-pair path\n- `SOFT_SERVE_HTTP_LISTEN_ADDR`: HTTP listen address\n- `SOFT_SERVE_HTTP_PUBLIC_URL`: HTTP public URL used for cloning\n- `SOFT_SERVE_GIT_MAX_CONNECTIONS`: The number of simultaneous connections to git daemon\n\n#### Database Configuration\n\nSoft Serve supports both SQLite and Postgres for its database. Like all other Soft Serve settings, you can change the database _driver_ and _data source_ using either `config.yaml` or environment variables. The default config uses SQLite as the default database driver.\n\nTo use Postgres as your database, first create a Soft Serve database:\n\n```sh\npsql -h<hostname> -p<port> -U<user> -c 'CREATE DATABASE soft_serve'\n```\n\nThen set the database _data source_ to point to your Postgres database. For instance, if you're running Postgres locally, using the default user `postgres` and using a database name `soft_serve`, you would have this config in your config file or environment variable:\n\n```\ndb:\n  driver: \"postgres\"\n  data_source: \"postgres://postgres@localhost:5432/soft_serve?sslmode=disable\"\n```\n\nEnvironment variables equivalent:\n\n```sh\nSOFT_SERVE_DB_DRIVER=postgres \\\nSOFT_SERVE_DB_DATA_SOURCE=\"postgres://postgres@localhost:5432/soft_serve?sslmode=disable\" \\\nsoft serve\n```\n\nYou can specify a database connection password in the _data source_ url. For example, `postgres://myuser:dbpass@localhost:5432/my_soft_serve_db`.\n\n#### LFS Configuration\n\nSoft Serve supports both Git LFS [HTTP](https://github.com/git-lfs/git-lfs/blob/main/docs/api/README.md) and [SSH](https://github.com/git-lfs/git-lfs/blob/main/docs/proposals/ssh_adapter.md) protocols out of the box, there is no need to do any extra set up.\n\nUse the `lfs` config section to customize your Git LFS server.\n\n> **Note**: The pure-SSH transfer is disabled by default.\n\n## Server Access\n\nSoft Serve at its core manages your server authentication and authorization. Authentication verifies the identity of a user, while authorization determines their access rights to a repository.\n\nTo manage the server users, access, and repos, you can use the SSH command line interface.\n\nTry `ssh localhost -i ~/.ssh/id_ed25519 -p 23231 help` for more info. Make sure\nyou use your key here.\n\nFor ease of use, instead of specifying the key, port, and hostname every time\nyou SSH into Soft Serve, add your own Soft Serve instance entry to your SSH\nconfig. For instance, to use `ssh soft` instead of typing `ssh localhost -i\n~/.ssh/id_ed25519 -p 23231`, we can define a `soft` entry in our SSH config\nfile `~/.ssh/config`.\n\n```conf\nHost soft\n  HostName localhost\n  Port 23231\n  IdentityFile ~/.ssh/id_ed25519\n```\n\nNow, we can do `ssh soft` to SSH into Soft Serve. Since `git` is also aware of\nthis config, you can use `soft` as the hostname for your clone commands.\n\n```sh\ngit clone ssh://soft/dotfiles\n# make changes\n# add & commit\ngit push origin main\n```\n\n> **Note** The `-i` part will be omitted in the examples below for brevity. You\n> can add your server settings to your sshconfig for quicker access.\n\n### Authentication\n\nEverything that needs authentication is done using SSH. Make sure you have\nadded an entry for your Soft Serve instance in your `~/.ssh/config` file.\n\nBy default, Soft Serve gives read-only permission to anonymous connections to\nany of the above protocols. This is controlled by two settings `anon-access`\nand `allow-keyless`.\n\n- `anon-access`: Defines the access level for anonymous users. Available\n  options are `no-access`, `read-only`, `read-write`, and `admin-access`.\n  Default is `read-only`.\n- `allow-keyless`: Whether to allow connections that doesn't use keys to pass.\n  Setting this to `false` would disable access to SSH keyboard-interactive,\n  HTTP, and Git protocol connections. Default is `true`.\n\n```sh\n$ ssh -p 23231 localhost settings\nManage server settings\n\nUsage:\n  ssh -p 23231 localhost settings [command]\n\nAvailable Commands:\n  allow-keyless Set or get allow keyless access to repositories\n  anon-access   Set or get the default access level for anonymous users\n\nFlags:\n  -h, --help   help for settings\n\nUse \"ssh -p 23231 localhost settings [command] --help\" for more information about a command.\n```\n\n> **Note** These settings can only be changed by admins.\n\nWhen `allow-keyless` is disabled, connections that don't use SSH Public Key\nauthentication will get denied. This means cloning repos over HTTP(s) or git://\nwill get denied.\n\nMeanwhile, `anon-access` controls the access level granted to connections that\nuse SSH Public Key authentication but are not registered users. The default\nsetting for this is `read-only`. This will grant anonymous connections that use\nSSH Public Key authentication `read-only` access to public repos.\n\n`anon-access` is also used in combination with `allow-keyless` to determine the\naccess level for HTTP(s) and git:// clone requests.\n\n#### SSH\n\nSoft Serve doesn't allow duplicate SSH public keys for users. A public key can be associated with one user only. This makes SSH authentication simple and straight forward, add your public key to your Soft Serve user to be able to access Soft Serve.\n\n#### HTTP\n\nYou can generate user access tokens through the SSH command line interface. Access tokens can have an optional expiration date. Use your access token as the basic auth user to access your Soft Serve repos through HTTP.\n\n```sh\n# Create a user token\nssh -p 23231 localhost token create 'my new token'\nss_1234abc56789012345678901234de246d798fghi\n\n# Or with an expiry date\nssh -p 23231 localhost token create --expires-in 1y 'my other token'\nss_98fghi1234abc56789012345678901234de246d7\n```\n\nNow you can access to repos that require `read-write` access.\n\n```sh\ngit clone http://ss_98fghi1234abc56789012345678901234de246d7@localhost:23232/my-private-repo.git my-private-repo\n# Make changes and push\n```\n\n### Authorization\n\nSoft Serve offers a simple access control. There are four access levels,\nno-access, read-only, read-write, and admin-access.\n\n`admin-access` has full control of the server and can make changes to users and repos.\n\n`read-write` access gets full control of repos.\n\n`read-only` can read public repos.\n\n`no-access` denies access to all repos.\n\n## User Management\n\nAdmins can manage users and their keys using the `user` command. Once a user is\ncreated and has access to the server, they can manage their own keys and\nsettings.\n\nTo create a new user simply use `user create`:\n\n```sh\n# Create a new user\nssh -p 23231 localhost user create beatrice\n\n# Add user keys\nssh -p 23231 localhost user add-pubkey beatrice ssh-rsa AAAAB3Nz...\nssh -p 23231 localhost user add-pubkey beatrice ssh-ed25519 AAAA...\n\n# Create another user with public key\nssh -p 23231 localhost user create frankie '-k \"ssh-ed25519 AAAATzN...\"'\n\n# Need help?\nssh -p 23231 localhost user help\n```\n\nOnce a user is created, they get `read-only` access to public repositories.\nThey can also create new repositories on the server.\n\nUsers can manage their keys using the `pubkey` command:\n\n```sh\n# List user keys\nssh -p 23231 localhost pubkey list\n\n# Add key\nssh -p 23231 localhost pubkey add ssh-ed25519 AAAA...\n\n# Wanna change your username?\nssh -p 23231 localhost set-username yolo\n\n# To display user info\nssh -p 23231 localhost info\n```\n\n## Repositories\n\nYou can manage repositories using the `repo` command.\n\n```sh\n# Run repo help\n$ ssh -p 23231 localhost repo help\nManage repositories\n\nUsage:\n  ssh -p 23231 localhost repo [command]\n\nAliases:\n  repo, repos, repository, repositories\n\nAvailable Commands:\n  blob         Print out the contents of file at path\n  branch       Manage repository branches\n  collab       Manage collaborators\n  create       Create a new repository\n  delete       Delete a repository\n  description  Set or get the description for a repository\n  hide         Hide or unhide a repository\n  import       Import a new repository from remote\n  info         Get information about a repository\n  is-mirror    Whether a repository is a mirror\n  list         List repositories\n  private      Set or get a repository private property\n  project-name Set or get the project name for a repository\n  rename       Rename an existing repository\n  tag          Manage repository tags\n  tree         Print repository tree at path\n\nFlags:\n  -h, --help   help for repo\n\nUse \"ssh -p 23231 localhost repo [command] --help\" for more information about a command.\n```\n\nTo use any of the above `repo` commands, a user must be a collaborator in the repository. More on this below.\n\n### Creating Repositories\n\nTo create a repository, first make sure you are a registered user. Use the\n`repo create <repo>` command to create a new repository:\n\n```sh\n# Create a new repository\nssh -p 23231 localhost repo create icecream\n\n# Create a repo with description\nssh -p 23231 localhost repo create icecream '-d \"This is an Ice Cream description\"'\n\n# ... and project name\nssh -p 23231 localhost repo create icecream '-d \"This is an Ice Cream description\"' '-n \"Ice Cream\"'\n\n# I need my repository private!\nssh -p 23231 localhost repo create icecream -p '-d \"This is an Ice Cream description\"' '-n \"Ice Cream\"'\n\n# Help?\nssh -p 23231 localhost repo create -h\n```\n\nOr you can add your Soft Serve server as a remote to any existing repo, given\nyou have write access, and push to remote:\n\n```\ngit remote add origin ssh://localhost:23231/icecream\n```\n\nAfter you‚Äôve added the remote just go ahead and push. If the repo doesn‚Äôt exist\non the server it‚Äôll be created.\n\n```\ngit push origin main\n```\n\n### Nested Repositories\n\nRepositories can be nested too:\n\n```sh\n# Create a new nested repository\nssh -p 23231 localhost repo create charmbracelet/icecream\n\n# Or ...\ngit remote add charm ssh://localhost:23231/charmbracelet/icecream\ngit push charm main\n```\n\n### Mirrors\n\nYou can also *import* repositories from any public remote. Use the `repo import` command.\n\n```sh\nssh -p 23231 localhost repo import soft-serve https://github.com/charmbracelet/soft-serve\n```\n\nUse `--mirror` or `-m` to mark the repository as a *pull* mirror.\n\n### Deleting Repositories\n\nYou can delete repositories using the `repo delete <repo>` command.\n\n```sh\nssh -p 23231 localhost repo delete icecream\n```\n\n### Renaming Repositories\n\nUse the `repo rename <old> <new>` command to rename existing repositories.\n\n```sh\nssh -p 23231 localhost repo rename icecream vanilla\n```\n\n### Repository Collaborators\n\nSometimes you want to restrict write access to certain repositories. This can\nbe achieved by adding a collaborator to your repository.\n\nUse the `repo collab <command> <repo>` command to manage repo collaborators.\n\n```sh\n# Add collaborator to soft-serve\nssh -p 23231 localhost repo collab add soft-serve frankie\n\n# Add collaborator with a specific access level\nssh -p 23231 localhost repo collab add soft-serve beatrice read-only\n\n# Remove collaborator\nssh -p 23231 localhost repo collab remove soft-serve beatrice\n\n# List collaborators\nssh -p 23231 localhost repo collab list soft-serve\n```\n\n### Repository Metadata\n\nYou can also change the repo's description, project name, whether it's private,\netc using the `repo <command>` command.\n\n```sh\n# Set description for repo\nssh -p 23231 localhost repo description icecream \"This is a new description\"\n\n# Hide repo from listing\nssh -p 23231 localhost repo hidden icecream true\n\n# List repository info (branches, tags, description, etc)\nssh -p 23231 localhost repo icecream info\n```\n\nTo make a repository private, use `repo private <repo> [true|false]`. Private\nrepos can only be accessed by admins and collaborators.\n\n```sh\nssh -p 23231 localhost repo private icecream true\n```\n\n### Repository Branches & Tags\n\nUse `repo branch` and `repo tag` to list, and delete branches or tags. You can\nalso use `repo branch default` to set or get the repository default branch.\n\n### Repository Tree\n\nTo print a file tree for the project, just use the `repo tree` command along with\nthe repo name as the SSH command to your Soft Serve server:\n\n```sh\nssh -p 23231 localhost repo tree soft-serve\n```\n\nYou can also specify the sub-path and a specific reference or branch.\n\n```sh\nssh -p 23231 localhost repo tree soft-serve server/config\nssh -p 23231 localhost repo tree soft-serve main server/config\n```\n\nFrom there, you can print individual files using the `repo blob` command:\n\n```sh\nssh -p 23231 localhost repo blob soft-serve cmd/soft/main.go\n```\n\nYou can add the `-c` flag to enable syntax coloring and `-l` to print line\nnumbers:\n\n```sh\nssh -p 23231 localhost repo blob soft-serve cmd/soft/main.go -c -l\n\n```\n\nUse `--raw` to print raw file contents. This is useful for dumping binary data.\n\n### Repository webhooks\n\nSoft Serve supports repository webhooks using the `repo webhook` command. You\ncan create and manage webhooks for different repository events such as _push_,\n_collaborators_, and _branch_tag_create_ events.\n\n```\nManage repository webhooks\n\nUsage:\n  ssh -p 23231 localhost repo webhook [command]\n\nAliases:\n  webhook, webhooks\n\nAvailable Commands:\n  create      Create a repository webhook\n  delete      Delete a repository webhook\n  deliveries  Manage webhook deliveries\n  list        List repository webhooks\n  update      Update a repository webhook\n\nFlags:\n  -h, --help   help for webhook\n```\n\n## The Soft Serve TUI\n\n<img src=\"https://stuff.charm.sh/soft-serve/soft-serve-demo-commit.png\" width=\"750\" alt=\"TUI example showing a diff\">\n\nSoft Serve TUI is mainly used to browse repos over SSH. You can also use it to\nbrowse local repositories with `soft browse` or running `soft` within a Git\nrepository.\n\n```sh\nssh localhost -p 23231\n```\n\nIt's also possible to ‚Äúlink‚Äù to a specific repo:\n\n```sh\nssh -p 23231 localhost -t soft-serve\n```\n\nYou can copy text to your clipboard over SSH. For instance, you can press\n<kbd>c</kbd> on the highlighted repo in the menu to copy the clone command\n[^osc52].\n\n[^osc52]:\n    Copying over SSH depends on your terminal support of OSC52. Refer to\n    [go-osc52](https://github.com/aymanbagabas/go-osc52) for more information.\n\n## Hooks\n\nSoft Serve supports git server-side hooks `pre-receive`, `update`,\n`post-update`, and `post-receive`. This means you can define your own hooks to\nrun on repository push events. Hooks can be defined as a per-repository hook,\nand/or global hooks that run for all repositories.\n\nYou can find per-repository hooks under the repository `hooks` directory.\n\nGlobs hooks can be found in your `SOFT_SERVE_DATA_PATH` directory under\n`hooks`. Defining global hooks is useful if you want to run CI/CD for example.\n\nHere's an example of sending a message after receiving a push event. Create an\nexecutable file `<data path>/hooks/update`:\n\n```sh\n#!/bin/sh\n#\n# An example hook script to echo information about the push\n# and send it to the client.\n\nrefname=\"$1\"\noldrev=\"$2\"\nnewrev=\"$3\"\n\n# Safety check\nif [ -z \"$GIT_DIR\" ]; then\n        echo \"Don't run this script from the command line.\" >&2\n        echo \" (if you want, you could supply GIT_DIR then run\" >&2\n        echo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n        exit 1\nfi\n\nif [ -z \"$refname\" -o -z \"$oldrev\" -o -z \"$newrev\" ]; then\n        echo \"usage: $0 <ref> <oldrev> <newrev>\" >&2\n        exit 1\nfi\n\n# Check types\n# if $newrev is 0000...0000, it's a commit to delete a ref.\nzero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')\nif [ \"$newrev\" = \"$zero\" ]; then\n        newrev_type=delete\nelse\n        newrev_type=$(git cat-file -t $newrev)\nfi\n\necho \"Hi from Soft Serve update hook!\"\necho\necho \"RefName: $refname\"\necho \"Change Type: $newrev_type\"\necho \"Old SHA1: $oldrev\"\necho \"New SHA1: $newrev\"\n\nexit 0\n```\n\nNow, you should get a message after pushing changes to any repository.\n\n## A note about RSA keys\n\nUnfortunately, due to a shortcoming in Go‚Äôs `x/crypto/ssh` package, Soft Serve\ndoes not currently support access via new SSH RSA keys: only the old SHA-1\nones will work.\n\nUntil we sort this out you‚Äôll either need an SHA-1 RSA key or a key with\nanother algorithm, e.g. Ed25519. Not sure what type of keys you have?\nYou can check with the following:\n\n```sh\n$ find ~/.ssh/id_*.pub -exec ssh-keygen -l -f {} \\;\n```\n\nIf you‚Äôre curious about the inner workings of this problem have a look at:\n\n- https://github.com/golang/go/issues/37278\n- https://go-review.googlesource.com/c/crypto/+/220037\n- https://github.com/golang/crypto/pull/197\n\n## Feedback\n\nWe‚Äôd love to hear your thoughts on this project. Feel free to drop us a note!\n\n- [Twitter](https://twitter.com/charmcli)\n- [The Fediverse](https://mastodon.social/@charmcli)\n- [Discord](https://charm.sh/chat)\n\n## License\n\n[MIT](https://github.com/charmbracelet/soft-serve/raw/main/LICENSE)\n\n---\n\nPart of [Charm](https://charm.sh).\n\n<a href=\"https://charm.sh/\"><img alt=\"The Charm logo\" src=\"https://stuff.charm.sh/charm-badge.jpg\" width=\"400\"></a>\n\nCharmÁÉ≠Áà±ÂºÄÊ∫ê ‚Ä¢ Charm loves open source\n"
        },
        {
          "name": "browse.tape",
          "type": "blob",
          "size": 0.5068359375,
          "content": "Set Width 1600\nSet Height 900\nSet FontSize 22\n\nOutput soft-serve-browse.gif\nOutput soft-serve-frames/\n\nType@300ms \"soft\"\nEnter\nSleep 2s\nType@1s \"ddd\"\nSleep 2s\nType@1s \"uuu\"\nSleep 2s\nTab@1s\nSleep 1s\nDown@300ms 4\nEnter\nSleep 1s\nDown@300ms 13\nEnter\nSleep 1s\nDown@300ms 5\nEnter\nDown@300ms 20\nSleep 2s\nType@500ms \"b\"\nSleep 2.5s\nDown@300ms 50\nSleep 2.5s\nTab@1s\nDown@500ms 4\nUp@500ms 2\nEnter\nDown@250ms 50\nSleep 1s\nTab@1s\nDown@500ms 8\nEnter\nDown@250ms 30\nTab@2s\nDown@500ms 5\nUp@500ms 2\nSleep 2.5s\nTab@2s\nDown@500ms 8\nSleep 2s\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.111328125,
          "content": "coverage:\n  status:\n    project:\n      default:\n        target: 50%\n    patch:\n      default:\n        target: 30%\n"
        },
        {
          "name": "demo.tape",
          "type": "blob",
          "size": 0.404296875,
          "content": "Set Width 1600\nSet Height 900\nSet FontSize 22\n\nOutput soft-serve.gif\nOutput soft-serve-frames/\n\nType \"ssh git.charm.sh\"\nSleep 1s\nEnter\nSleep 2s\nType@500ms \"jjj\"\nSleep 1s\nType@250ms \"kkk\"\nEnter\nSleep 1s\nDown@300ms 10\nSleep 1s\nTab@1s 2\nDown@300ms 3\nEnter\nDown@250ms 30\nSleep 1s\nType \"h\"\nSleep 1s\nTab@1s 4\nSleep 500ms\nDown@300ms 4\nEnter\nDown@300ms 2\nEnter\nDown\nSleep 1s\nEnter\nDown@250ms 50\nSleep 2.5s\nEscape\nSleep 2s\n"
        },
        {
          "name": "docker.md",
          "type": "blob",
          "size": 1.6083984375,
          "content": "# Running Soft-Serve with Docker\n\nThe official Soft Serve Docker images are available at [charmcli/soft-serve][docker]. Development and nightly builds are available at [ghcr.io/charmbracelet/soft-serve][ghcr]\n\n```sh\ndocker pull charmcli/soft-serve:latest\n```\n\nHere‚Äôs how you might run `soft-serve` as a container.  Keep in mind that\nrepositories are stored in the `/soft-serve` directory, so you‚Äôll likely want\nto mount that directory as a volume in order keep your repositories backed up.\n\n```sh\ndocker run \\\n  --name=soft-serve \\\n  --volume /path/to/data:/soft-serve \\\n  --publish 23231:23231 \\\n  --publish 23232:23232 \\\n  --publish 23233:23233 \\\n  --publish 9418:9418 \\\n  -e SOFT_SERVE_INITIAL_ADMIN_KEYS=\"YOUR_ADMIN_KEY_HERE\" \\\n  --restart unless-stopped \\\n  charmcli/soft-serve:latest\n```\n\nOr by using docker-compose:\n\n```yaml\n---\nversion: \"3.1\"\nservices:\n  soft-serve:\n    image: charmcli/soft-serve:latest\n    container_name: soft-serve\n    volumes:\n      - /path/to/data:/soft-serve\n    ports:\n      - 23231:23231\n      - 23232:23232\n      - 23233:23233\n      - 9418:9418\n    environment:\n      SOFT_SERVE_INITIAL_ADMIN_KEYS: \"YOUR_ADMIN_KEY_HERE\"\n    restart: unless-stopped\n```\n\n[docker]: https://hub.docker.com/r/charmcli/soft-serve\n[ghcr]: https://github.com/charmbracelet/soft-serve/pkgs/container/soft-serve\n\n\n> **Warning**\n>\n> Make sure to run the image without a TTY, i.e.: do not use the `--tty`/`-t`\n> flags.\n\n\n***\n\nPart of [Charm](https://charm.sh).\n\n<a href=\"https://charm.sh/\"><img alt=\"The Charm logo\" src=\"https://stuff.charm.sh/charm-badge-unrounded.jpg\" width=\"400\"></a>\n\nCharmÁÉ≠Áà±ÂºÄÊ∫ê ‚Ä¢ Charm loves open source\n"
        },
        {
          "name": "git",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 4.748046875,
          "content": "module github.com/charmbracelet/soft-serve\n\ngo 1.22\n\ntoolchain go1.23.4\n\nrequire (\n\tgithub.com/charmbracelet/bubbles v0.20.0\n\tgithub.com/charmbracelet/bubbletea v1.2.4\n\tgithub.com/charmbracelet/glamour v0.8.0\n\tgithub.com/charmbracelet/lipgloss v1.0.0\n\tgithub.com/charmbracelet/wish v1.4.4\n\tgithub.com/dustin/go-humanize v1.0.1\n\tgithub.com/go-git/go-git/v5 v5.13.1\n\tgithub.com/matryer/is v1.4.1\n\tgithub.com/muesli/reflow v0.3.0\n\tgithub.com/muesli/termenv v0.15.3-0.20240618155329-98d742f6907a\n\tgithub.com/sergi/go-diff v1.3.2-0.20230802210424-5b0b94c5c0d3\n)\n\nrequire (\n\tgithub.com/alecthomas/chroma/v2 v2.15.0\n\tgithub.com/aymanbagabas/git-module v1.8.4-0.20231101154130-8d27204ac6d2\n\tgithub.com/caarlos0/duration v0.0.0-20240108180406-5d492514f3c7\n\tgithub.com/caarlos0/env/v11 v11.3.1\n\tgithub.com/charmbracelet/git-lfs-transfer v0.1.1-0.20240708204110-bacbfdb68d92\n\tgithub.com/charmbracelet/keygen v0.5.1\n\tgithub.com/charmbracelet/log v0.4.0\n\tgithub.com/charmbracelet/ssh v0.0.0-20241211182756-4fe22b0f1b7c\n\tgithub.com/go-jose/go-jose/v3 v3.0.3\n\tgithub.com/gobwas/glob v0.2.3\n\tgithub.com/golang-jwt/jwt/v5 v5.2.1\n\tgithub.com/google/go-querystring v1.1.0\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/gorilla/handlers v1.5.2\n\tgithub.com/gorilla/mux v1.8.1\n\tgithub.com/hashicorp/golang-lru/v2 v2.0.7\n\tgithub.com/jmoiron/sqlx v1.4.0\n\tgithub.com/lib/pq v1.10.9\n\tgithub.com/lrstanley/bubblezone v0.0.0-20240723130623-7fd58a7b1f91\n\tgithub.com/muesli/mango-cobra v1.2.0\n\tgithub.com/muesli/roff v0.1.0\n\tgithub.com/prometheus/client_golang v1.20.5\n\tgithub.com/robfig/cron/v3 v3.0.1\n\tgithub.com/rogpeppe/go-internal v1.13.1\n\tgithub.com/spf13/cobra v1.8.1\n\tgo.uber.org/automaxprocs v1.6.0\n\tgolang.org/x/crypto v0.32.0\n\tgolang.org/x/sync v0.10.0\n\tgopkg.in/yaml.v3 v3.0.1\n\tmodernc.org/sqlite v1.34.4\n)\n\nrequire (\n\tgithub.com/anmitsu/go-shlex v0.0.0-20200514113438-38f4b401e2be // indirect\n\tgithub.com/atotto/clipboard v0.1.4 // indirect\n\tgithub.com/aymanbagabas/go-osc52/v2 v2.0.1 // indirect\n\tgithub.com/aymerick/douceur v0.2.0 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/charmbracelet/x/ansi v0.4.5 // indirect\n\tgithub.com/charmbracelet/x/conpty v0.1.0 // indirect\n\tgithub.com/charmbracelet/x/errors v0.0.0-20240725160154-f9f6568126ec // indirect\n\tgithub.com/charmbracelet/x/input v0.2.0 // indirect\n\tgithub.com/charmbracelet/x/term v0.2.1 // indirect\n\tgithub.com/charmbracelet/x/termios v0.1.0 // indirect\n\tgithub.com/creack/pty v1.1.21 // indirect\n\tgithub.com/dlclark/regexp2 v1.11.4 // indirect\n\tgithub.com/erikgeiser/coninput v0.0.0-20211004153227-1c3628e74d0f // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/git-lfs/pktline v0.0.0-20230103162542-ca444d533ef1 // indirect\n\tgithub.com/go-git/gcfg v1.5.1-0.20230307220236-3a3c6141e376 // indirect\n\tgithub.com/go-logfmt/logfmt v0.6.0 // indirect\n\tgithub.com/gorilla/css v1.0.1 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/klauspost/compress v1.17.9 // indirect\n\tgithub.com/lucasb-eyer/go-colorful v1.2.0 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/mattn/go-localereader v0.0.1 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.16 // indirect\n\tgithub.com/mcuadros/go-version v0.0.0-20190830083331-035f6764e8d2 // indirect\n\tgithub.com/microcosm-cc/bluemonday v1.0.27 // indirect\n\tgithub.com/muesli/ansi v0.0.0-20230316100256-276c6243b2f6 // indirect\n\tgithub.com/muesli/cancelreader v0.2.2 // indirect\n\tgithub.com/muesli/mango v0.2.0 // indirect\n\tgithub.com/muesli/mango-pflag v0.1.0 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/ncruces/go-strftime v0.1.9 // indirect\n\tgithub.com/prometheus/client_model v0.6.1 // indirect\n\tgithub.com/prometheus/common v0.55.0 // indirect\n\tgithub.com/prometheus/procfs v0.15.1 // indirect\n\tgithub.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec // indirect\n\tgithub.com/rivo/uniseg v0.4.7 // indirect\n\tgithub.com/sahilm/fuzzy v0.1.1 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgithub.com/xo/terminfo v0.0.0-20220910002029-abceb7e1c41e // indirect\n\tgithub.com/yuin/goldmark v1.7.4 // indirect\n\tgithub.com/yuin/goldmark-emoji v1.0.3 // indirect\n\tgolang.org/x/exp v0.0.0-20240719175910-8a7402abbf56 // indirect\n\tgolang.org/x/net v0.33.0 // indirect\n\tgolang.org/x/sys v0.29.0 // indirect\n\tgolang.org/x/term v0.28.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgolang.org/x/tools v0.23.0 // indirect\n\tgoogle.golang.org/protobuf v1.34.2 // indirect\n\tgopkg.in/warnings.v0 v0.1.2 // indirect\n\tmodernc.org/gc/v3 v3.0.0-20240722195230-4a140ff9c08e // indirect\n\tmodernc.org/libc v1.55.3 // indirect\n\tmodernc.org/mathutil v1.6.0 // indirect\n\tmodernc.org/memory v1.8.0 // indirect\n\tmodernc.org/strutil v1.2.0 // indirect\n\tmodernc.org/token v1.1.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 28.333984375,
          "content": "filippo.io/edwards25519 v1.1.0 h1:FNf4tywRC1HmFuKW5xopWpigGjJKiJSV0Cqo0cJWDaA=\nfilippo.io/edwards25519 v1.1.0/go.mod h1:BxyFTGdWcka3PhytdK4V28tE5sGfRvvvRV7EaN4VDT4=\ngithub.com/alecthomas/assert/v2 v2.11.0 h1:2Q9r3ki8+JYXvGsDyBXwH3LcJ+WK5D0gc5E8vS6K3D0=\ngithub.com/alecthomas/assert/v2 v2.11.0/go.mod h1:Bze95FyfUr7x34QZrjL+XP+0qgp/zg8yS+TtBj1WA3k=\ngithub.com/alecthomas/chroma/v2 v2.15.0 h1:LxXTQHFoYrstG2nnV9y2X5O94sOBzf0CIUpSTbpxvMc=\ngithub.com/alecthomas/chroma/v2 v2.15.0/go.mod h1:gUhVLrPDXPtp/f+L1jo9xepo9gL4eLwRuGAunSZMkio=\ngithub.com/alecthomas/repr v0.4.0 h1:GhI2A8MACjfegCPVq9f1FLvIBS+DrQ2KQBFZP1iFzXc=\ngithub.com/alecthomas/repr v0.4.0/go.mod h1:Fr0507jx4eOXV7AlPV6AVZLYrLIuIeSOWtW57eE/O/4=\ngithub.com/anmitsu/go-shlex v0.0.0-20200514113438-38f4b401e2be h1:9AeTilPcZAjCFIImctFaOjnTIavg87rW78vTPkQqLI8=\ngithub.com/anmitsu/go-shlex v0.0.0-20200514113438-38f4b401e2be/go.mod h1:ySMOLuWl6zY27l47sB3qLNK6tF2fkHG55UZxx8oIVo4=\ngithub.com/atotto/clipboard v0.1.4 h1:EH0zSVneZPSuFR11BlR9YppQTVDbh5+16AmcJi4g1z4=\ngithub.com/atotto/clipboard v0.1.4/go.mod h1:ZY9tmq7sm5xIbd9bOK4onWV4S6X0u6GY7Vn0Yu86PYI=\ngithub.com/aymanbagabas/git-module v1.8.4-0.20231101154130-8d27204ac6d2 h1:3w5KT+shE3hzWhORGiu2liVjEoaCEXm9uZP47+Gw4So=\ngithub.com/aymanbagabas/git-module v1.8.4-0.20231101154130-8d27204ac6d2/go.mod h1:d4gQ7/3/S2sPq4NnKdtAgUOVr6XtLpWFtxyVV5/+76U=\ngithub.com/aymanbagabas/go-osc52/v2 v2.0.1 h1:HwpRHbFMcZLEVr42D4p7XBqjyuxQH5SMiErDT4WkJ2k=\ngithub.com/aymanbagabas/go-osc52/v2 v2.0.1/go.mod h1:uYgXzlJ7ZpABp8OJ+exZzJJhRNQ2ASbcXHWsFqH8hp8=\ngithub.com/aymanbagabas/go-udiff v0.2.0 h1:TK0fH4MteXUDspT88n8CKzvK0X9O2xu9yQjWpi6yML8=\ngithub.com/aymanbagabas/go-udiff v0.2.0/go.mod h1:RE4Ex0qsGkTAJoQdQQCA0uG+nAzJO/pI/QwceO5fgrA=\ngithub.com/aymerick/douceur v0.2.0 h1:Mv+mAeH1Q+n9Fr+oyamOlAkUNPWPlA8PPGR0QAaYuPk=\ngithub.com/aymerick/douceur v0.2.0/go.mod h1:wlT5vV2O3h55X9m7iVYN0TBM0NH/MmbLnd30/FjWUq4=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/caarlos0/duration v0.0.0-20240108180406-5d492514f3c7 h1:kJP/C2eL9DCKrCOlX6lPVmAUAb6U4u9xllgws1kP9ds=\ngithub.com/caarlos0/duration v0.0.0-20240108180406-5d492514f3c7/go.mod h1:mSkwb/eZEwOJJJ4tqAKiuhLIPe0e9+FKhlU0oMCpbf8=\ngithub.com/caarlos0/env/v11 v11.3.1 h1:cArPWC15hWmEt+gWk7YBi7lEXTXCvpaSdCiZE2X5mCA=\ngithub.com/caarlos0/env/v11 v11.3.1/go.mod h1:qupehSf/Y0TUTsxKywqRt/vJjN5nz6vauiYEUUr8P4U=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/charmbracelet/bubbles v0.20.0 h1:jSZu6qD8cRQ6k9OMfR1WlM+ruM8fkPWkHvQWD9LIutE=\ngithub.com/charmbracelet/bubbles v0.20.0/go.mod h1:39slydyswPy+uVOHZ5x/GjwVAFkCsV8IIVy+4MhzwwU=\ngithub.com/charmbracelet/bubbletea v1.2.4 h1:KN8aCViA0eps9SCOThb2/XPIlea3ANJLUkv3KnQRNCE=\ngithub.com/charmbracelet/bubbletea v1.2.4/go.mod h1:Qr6fVQw+wX7JkWWkVyXYk/ZUQ92a6XNekLXa3rR18MM=\ngithub.com/charmbracelet/git-lfs-transfer v0.1.1-0.20240708204110-bacbfdb68d92 h1:KtQlsiHfY3K4AoIEh0yUE/wCLHteZ9EzV1hKmx+p7U8=\ngithub.com/charmbracelet/git-lfs-transfer v0.1.1-0.20240708204110-bacbfdb68d92/go.mod h1:UrXUCm3xLQkq15fu7qlXHUMlrhdlXHoi13KH2Dfiits=\ngithub.com/charmbracelet/glamour v0.8.0 h1:tPrjL3aRcQbn++7t18wOpgLyl8wrOHUEDS7IZ68QtZs=\ngithub.com/charmbracelet/glamour v0.8.0/go.mod h1:ViRgmKkf3u5S7uakt2czJ272WSg2ZenlYEZXT2x7Bjw=\ngithub.com/charmbracelet/keygen v0.5.1 h1:zBkkYPtmKDVTw+cwUyY6ZwGDhRxXkEp0Oxs9sqMLqxI=\ngithub.com/charmbracelet/keygen v0.5.1/go.mod h1:zznJVmK/GWB6dAtjluqn2qsttiCBhA5MZSiwb80fcHw=\ngithub.com/charmbracelet/lipgloss v1.0.0 h1:O7VkGDvqEdGi93X+DeqsQ7PKHDgtQfF8j8/O2qFMQNg=\ngithub.com/charmbracelet/lipgloss v1.0.0/go.mod h1:U5fy9Z+C38obMs+T+tJqst9VGzlOYGj4ri9reL3qUlo=\ngithub.com/charmbracelet/log v0.4.0 h1:G9bQAcx8rWA2T3pWvx7YtPTPwgqpk7D68BX21IRW8ZM=\ngithub.com/charmbracelet/log v0.4.0/go.mod h1:63bXt/djrizTec0l11H20t8FDSvA4CRZJ1KH22MdptM=\ngithub.com/charmbracelet/ssh v0.0.0-20241211182756-4fe22b0f1b7c h1:treQxMBdI2PaD4eOYfFux8stfCkUxhuUxaqGcxKqVpI=\ngithub.com/charmbracelet/ssh v0.0.0-20241211182756-4fe22b0f1b7c/go.mod h1:CY1xbl2z+ZeBmNWItKZyxx0zgDgnhmR57+DTsHOobJ4=\ngithub.com/charmbracelet/wish v1.4.4 h1:wtfoAMkf8Db9zi+9Lme2f7XKMxL6BqfgDWbqcTUHLaU=\ngithub.com/charmbracelet/wish v1.4.4/go.mod h1:XB8v51UxIFMRlUod9lLaAgOsj/wpe+qW9HjsoYIiNMo=\ngithub.com/charmbracelet/x/ansi v0.4.5 h1:LqK4vwBNaXw2AyGIICa5/29Sbdq58GbGdFngSexTdRM=\ngithub.com/charmbracelet/x/ansi v0.4.5/go.mod h1:dk73KoMTT5AX5BsX0KrqhsTqAnhZZoCBjs7dGWp4Ktw=\ngithub.com/charmbracelet/x/conpty v0.1.0 h1:4zc8KaIcbiL4mghEON8D72agYtSeIgq8FSThSPQIb+U=\ngithub.com/charmbracelet/x/conpty v0.1.0/go.mod h1:rMFsDJoDwVmiYM10aD4bH2XiRgwI7NYJtQgl5yskjEQ=\ngithub.com/charmbracelet/x/errors v0.0.0-20240725160154-f9f6568126ec h1:O8c7pFFK0imuHH5JBqv5smlbVoFn4CZKGjtvCQKu1WE=\ngithub.com/charmbracelet/x/errors v0.0.0-20240725160154-f9f6568126ec/go.mod h1:2P0UgXMEa6TsToMSuFqKFQR+fZTO9CNGUNokkPatT/0=\ngithub.com/charmbracelet/x/exp/golden v0.0.0-20240815200342-61de596daa2b h1:MnAMdlwSltxJyULnrYbkZpp4k58Co7Tah3ciKhSNo0Q=\ngithub.com/charmbracelet/x/exp/golden v0.0.0-20240815200342-61de596daa2b/go.mod h1:wDlXFlCrmJ8J+swcL/MnGUuYnqgQdW9rhSD61oNMb6U=\ngithub.com/charmbracelet/x/input v0.2.0 h1:1Sv+y/flcqUfUH2PXNIDKDIdT2G8smOnGOgawqhwy8A=\ngithub.com/charmbracelet/x/input v0.2.0/go.mod h1:KUSFIS6uQymtnr5lHVSOK9j8RvwTD4YHnWnzJUYnd/M=\ngithub.com/charmbracelet/x/term v0.2.1 h1:AQeHeLZ1OqSXhrAWpYUtZyX1T3zVxfpZuEQMIQaGIAQ=\ngithub.com/charmbracelet/x/term v0.2.1/go.mod h1:oQ4enTYFV7QN4m0i9mzHrViD7TQKvNEEkHUMCmsxdUg=\ngithub.com/charmbracelet/x/termios v0.1.0 h1:y4rjAHeFksBAfGbkRDmVinMg7x7DELIGAFbdNvxg97k=\ngithub.com/charmbracelet/x/termios v0.1.0/go.mod h1:H/EVv/KRnrYjz+fCYa9bsKdqF3S8ouDK0AZEbG7r+/U=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.21 h1:1/QdRyBaHHJP61QkWMXlOIBfsgdDeeKfK8SYVUWJKf0=\ngithub.com/creack/pty v1.1.21/go.mod h1:MOBLtS5ELjhRRrroQr9kyvTxUAFNvYEK993ew/Vr4O4=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dlclark/regexp2 v1.11.4 h1:rPYF9/LECdNymJufQKmri9gV604RvvABwgOA8un7yAo=\ngithub.com/dlclark/regexp2 v1.11.4/go.mod h1:DHkYz0B9wPfa6wondMfaivmHpzrQ3v9q8cnmRbL6yW8=\ngithub.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=\ngithub.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=\ngithub.com/erikgeiser/coninput v0.0.0-20211004153227-1c3628e74d0f h1:Y/CXytFA4m6baUTXGLOoWe4PQhGxaX0KpnayAqC48p4=\ngithub.com/erikgeiser/coninput v0.0.0-20211004153227-1c3628e74d0f/go.mod h1:vw97MGsxSvLiUE2X8qFplwetxpGLQrlU1Q9AUEIzCaM=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/git-lfs/pktline v0.0.0-20230103162542-ca444d533ef1 h1:mtDjlmloH7ytdblogrMz1/8Hqua1y8B4ID+bh3rvod0=\ngithub.com/git-lfs/pktline v0.0.0-20230103162542-ca444d533ef1/go.mod h1:fenKRzpXDjNpsIBhuhUzvjCKlDjKam0boRAenTE0Q6A=\ngithub.com/go-git/gcfg v1.5.1-0.20230307220236-3a3c6141e376 h1:+zs/tPmkDkHx3U66DAb0lQFJrpS6731Oaa12ikc+DiI=\ngithub.com/go-git/gcfg v1.5.1-0.20230307220236-3a3c6141e376/go.mod h1:an3vInlBmSxCcxctByoQdvwPiA7DTK7jaaFDBTtu0ic=\ngithub.com/go-git/go-git/v5 v5.13.1 h1:DAQ9APonnlvSWpvolXWIuV6Q6zXy2wHbN4cVlNR5Q+M=\ngithub.com/go-git/go-git/v5 v5.13.1/go.mod h1:qryJB4cSBoq3FRoBRf5A77joojuBcmPJ0qu3XXXVixc=\ngithub.com/go-jose/go-jose/v3 v3.0.3 h1:fFKWeig/irsp7XD2zBxvnmA/XaRWp5V3CBsZXJF7G7k=\ngithub.com/go-jose/go-jose/v3 v3.0.3/go.mod h1:5b+7YgP7ZICgJDBdfjZaIt+H/9L9T/YQrVfLAMboGkQ=\ngithub.com/go-logfmt/logfmt v0.6.0 h1:wGYYu3uicYdqXVgoYbvnkrPVXkuLM1p1ifugDMEdRi4=\ngithub.com/go-logfmt/logfmt v0.6.0/go.mod h1:WYhtIu8zTZfxdn5+rREduYbwxfcBr/Vr6KEVveWlfTs=\ngithub.com/go-sql-driver/mysql v1.8.1 h1:LedoTUt/eveggdHS9qUFC1EFSa8bU2+1pZjSRpvNJ1Y=\ngithub.com/go-sql-driver/mysql v1.8.1/go.mod h1:wEBSXgmK//2ZFJyE+qWnIsVGmvmEKlqwuVSjsCm7DZg=\ngithub.com/gobwas/glob v0.2.3 h1:A4xDbljILXROh+kObIiy5kIaPYD8e96x1tgBhUI5J+Y=\ngithub.com/gobwas/glob v0.2.3/go.mod h1:d3Ez4x06l9bZtSvzIay5+Yzi0fmZzPgnTbPcKjJAkT8=\ngithub.com/golang-jwt/jwt/v5 v5.2.1 h1:OuVbFODueb089Lh128TAcimifWaLhJwVflnrgM17wHk=\ngithub.com/golang-jwt/jwt/v5 v5.2.1/go.mod h1:pqrtFR0X4osieyHYxtmOUWsAWrfe1Q5UVIyoH402zdk=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-querystring v1.1.0 h1:AnCroh3fv4ZBgVIf1Iwtovgjaw/GiKJo8M8yD/fhyJ8=\ngithub.com/google/go-querystring v1.1.0/go.mod h1:Kcdr2DB4koayq7X8pmAG4sNG59So17icRSOU623lUBU=\ngithub.com/google/pprof v0.0.0-20240409012703-83162a5b38cd h1:gbpYu9NMq8jhDVbvlGkMFWCjLFlqqEZjEmObmhUy6Vo=\ngithub.com/google/pprof v0.0.0-20240409012703-83162a5b38cd/go.mod h1:kf6iHlnVGwgKolg33glAes7Yg/8iWP8ukqeldJSO7jw=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gorilla/css v1.0.1 h1:ntNaBIghp6JmvWnxbZKANoLyuXTPZ4cAMlo6RyhlbO8=\ngithub.com/gorilla/css v1.0.1/go.mod h1:BvnYkspnSzMmwRK+b8/xgNPLiIuNZr6vbZBTPQ2A3b0=\ngithub.com/gorilla/handlers v1.5.2 h1:cLTUSsNkgcwhgRqvCNmdbRWG0A3N4F+M2nWKdScwyEE=\ngithub.com/gorilla/handlers v1.5.2/go.mod h1:dX+xVpaxdSw+q0Qek8SSsl3dfMk3jNddUkMzo0GtH0w=\ngithub.com/gorilla/mux v1.8.1 h1:TuBL49tXwgrFYWhqrNgrUNEY92u81SPhu7sTdzQEiWY=\ngithub.com/gorilla/mux v1.8.1/go.mod h1:AKf9I4AEqPTmMytcMc0KkNouC66V3BtZ4qD5fmWSiMQ=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7 h1:a+bsQ5rvGLjzHuww6tVxozPZFVghXaHOwFs4luLUK2k=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7/go.mod h1:QeFd9opnmA6QUJc5vARoKUSoFhyfM2/ZepoAG6RGpeM=\ngithub.com/hexops/gotextdiff v1.0.3 h1:gitA9+qJrrTCsiCl7+kh75nPqQt1cx4ZkudSTLoUqJM=\ngithub.com/hexops/gotextdiff v1.0.3/go.mod h1:pSWU5MAI3yDq+fZBTazCSJysOMbxWL1BSow5/V2vxeg=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/jmoiron/sqlx v1.4.0 h1:1PLqN7S1UYp5t4SrVVnt4nUVNemrDAtxlulVe+Qgm3o=\ngithub.com/jmoiron/sqlx v1.4.0/go.mod h1:ZrZ7UsYB/weZdl2Bxg6jCRO9c3YHl8r3ahlKmRT4JLY=\ngithub.com/klauspost/compress v1.17.9 h1:6KIumPrER1LHsvBVuDa0r5xaG0Es51mhhB9BQB2qeMA=\ngithub.com/klauspost/compress v1.17.9/go.mod h1:Di0epgTjJY877eYKx5yC51cX2A2Vl2ibi7bDH9ttBbw=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/lib/pq v1.10.9 h1:YXG7RB+JIjhP29X+OtkiDnYaXQwpS4JEWq7dtCCRUEw=\ngithub.com/lib/pq v1.10.9/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/lrstanley/bubblezone v0.0.0-20240723130623-7fd58a7b1f91 h1:NIU7JKWRT1sQcopTxZJ6h5zNAaTy1WE1i6phrMKj8mw=\ngithub.com/lrstanley/bubblezone v0.0.0-20240723130623-7fd58a7b1f91/go.mod h1:fMHACHXouhQO+NLAFvHEeKdVSzG7L/O1khqsvswCTmk=\ngithub.com/lucasb-eyer/go-colorful v1.2.0 h1:1nnpGOrhyZZuNyfu1QjKiUICQ74+3FNCN69Aj6K7nkY=\ngithub.com/lucasb-eyer/go-colorful v1.2.0/go.mod h1:R4dSotOR9KMtayYi1e77YzuveK+i7ruzyGqttikkLy0=\ngithub.com/matryer/is v1.4.1 h1:55ehd8zaGABKLXQUe2awZ99BD/PTc2ls+KV/dXphgEQ=\ngithub.com/matryer/is v1.4.1/go.mod h1:8I/i5uYgLzgsgEloJE1U6xx5HkBQpAZvepWuujKwMRU=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-localereader v0.0.1 h1:ygSAOl7ZXTx4RdPYinUpg6W99U8jWvWi9Ye2JC/oIi4=\ngithub.com/mattn/go-localereader v0.0.1/go.mod h1:8fBrzywKY7BI3czFoHkuzRoWE9C+EiG4R1k4Cjx5p88=\ngithub.com/mattn/go-runewidth v0.0.12/go.mod h1:RAqKPSqVFrSLVXbA8x7dzmKdmGzieGRCM46jaSJTDAk=\ngithub.com/mattn/go-runewidth v0.0.16 h1:E5ScNMtiwvlvB5paMFdw9p4kSQzbXFikJ5SQO6TULQc=\ngithub.com/mattn/go-runewidth v0.0.16/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\ngithub.com/mattn/go-sqlite3 v1.14.22 h1:2gZY6PC6kBnID23Tichd1K+Z0oS6nE/XwU+Vz/5o4kU=\ngithub.com/mattn/go-sqlite3 v1.14.22/go.mod h1:Uh1q+B4BYcTPb+yiD3kU8Ct7aC0hY9fxUwlHK0RXw+Y=\ngithub.com/mcuadros/go-version v0.0.0-20190308113854-92cdf37c5b75/go.mod h1:76rfSfYPWj01Z85hUf/ituArm797mNKcvINh1OlsZKo=\ngithub.com/mcuadros/go-version v0.0.0-20190830083331-035f6764e8d2 h1:YocNLcTBdEdvY3iDK6jfWXvEaM5OCKkjxPKoJRdB3Gg=\ngithub.com/mcuadros/go-version v0.0.0-20190830083331-035f6764e8d2/go.mod h1:76rfSfYPWj01Z85hUf/ituArm797mNKcvINh1OlsZKo=\ngithub.com/microcosm-cc/bluemonday v1.0.27 h1:MpEUotklkwCSLeH+Qdx1VJgNqLlpY2KXwXFM08ygZfk=\ngithub.com/microcosm-cc/bluemonday v1.0.27/go.mod h1:jFi9vgW+H7c3V0lb6nR74Ib/DIB5OBs92Dimizgw2cA=\ngithub.com/muesli/ansi v0.0.0-20230316100256-276c6243b2f6 h1:ZK8zHtRHOkbHy6Mmr5D264iyp3TiX5OmNcI5cIARiQI=\ngithub.com/muesli/ansi v0.0.0-20230316100256-276c6243b2f6/go.mod h1:CJlz5H+gyd6CUWT45Oy4q24RdLyn7Md9Vj2/ldJBSIo=\ngithub.com/muesli/cancelreader v0.2.2 h1:3I4Kt4BQjOR54NavqnDogx/MIoWBFa0StPA8ELUXHmA=\ngithub.com/muesli/cancelreader v0.2.2/go.mod h1:3XuTXfFS2VjM+HTLZY9Ak0l6eUKfijIfMUZ4EgX0QYo=\ngithub.com/muesli/mango v0.2.0 h1:iNNc0c5VLQ6fsMgAqGQofByNUBH2Q2nEbD6TaI+5yyQ=\ngithub.com/muesli/mango v0.2.0/go.mod h1:5XFpbC8jY5UUv89YQciiXNlbi+iJgt29VDC5xbzrLL4=\ngithub.com/muesli/mango-cobra v1.2.0 h1:DQvjzAM0PMZr85Iv9LIMaYISpTOliMEg+uMFtNbYvWg=\ngithub.com/muesli/mango-cobra v1.2.0/go.mod h1:vMJL54QytZAJhCT13LPVDfkvCUJ5/4jNUKF/8NC2UjA=\ngithub.com/muesli/mango-pflag v0.1.0 h1:UADqbYgpUyRoBja3g6LUL+3LErjpsOwaC9ywvBWe7Sg=\ngithub.com/muesli/mango-pflag v0.1.0/go.mod h1:YEQomTxaCUp8PrbhFh10UfbhbQrM/xJ4i2PB8VTLLW0=\ngithub.com/muesli/reflow v0.3.0 h1:IFsN6K9NfGtjeggFP+68I4chLZV2yIKsXJFNZ+eWh6s=\ngithub.com/muesli/reflow v0.3.0/go.mod h1:pbwTDkVPibjO2kyvBQRBxTWEEGDGq0FlB1BIKtnHY/8=\ngithub.com/muesli/roff v0.1.0 h1:YD0lalCotmYuF5HhZliKWlIx7IEhiXeSfq7hNjFqGF8=\ngithub.com/muesli/roff v0.1.0/go.mod h1:pjAHQM9hdUUwm/krAfrLGgJkXJ+YuhtsfZ42kieB2Ig=\ngithub.com/muesli/termenv v0.15.3-0.20240618155329-98d742f6907a h1:2MaM6YC3mGu54x+RKAA6JiFFHlHDY1UbkxqppT7wYOg=\ngithub.com/muesli/termenv v0.15.3-0.20240618155329-98d742f6907a/go.mod h1:hxSnBBYLK21Vtq/PHd0S2FYCxBXzBua8ov5s1RobyRQ=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/ncruces/go-strftime v0.1.9 h1:bY0MQC28UADQmHmaF5dgpLmImcShSi2kHU9XLdhx/f4=\ngithub.com/ncruces/go-strftime v0.1.9/go.mod h1:Fwc5htZGVVkseilnfgOVb9mKy6w1naJmn9CehxcKcls=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prashantv/gostub v1.1.0 h1:BTyx3RfQjRHnUWaGF9oQos79AlQ5k8WNktv7VGvVH4g=\ngithub.com/prashantv/gostub v1.1.0/go.mod h1:A5zLQHz7ieHGG7is6LLXLz7I8+3LZzsrV0P1IAHhP5U=\ngithub.com/prometheus/client_golang v1.20.5 h1:cxppBPuYhUnsO6yo/aoRol4L7q7UFfdm+bR9r+8l63Y=\ngithub.com/prometheus/client_golang v1.20.5/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=\ngithub.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=\ngithub.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=\ngithub.com/prometheus/common v0.55.0 h1:KEi6DK7lXW/m7Ig5i47x0vRzuBsHuvJdi5ee6Y3G1dc=\ngithub.com/prometheus/common v0.55.0/go.mod h1:2SECS4xJG1kd8XF9IcM1gMX6510RAEL65zxzNImwdc8=\ngithub.com/prometheus/procfs v0.15.1 h1:YagwOFzUgYfKKHX6Dr+sHT7km/hxC76UB0learggepc=\ngithub.com/prometheus/procfs v0.15.1/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=\ngithub.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec h1:W09IVJc94icq4NjY3clb7Lk8O1qJ8BdBEF8z0ibU0rE=\ngithub.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec/go.mod h1:qqbHyh8v60DhA7CoWK5oRCqLrMHRGoxYCSS9EjAz6Eo=\ngithub.com/rivo/uniseg v0.1.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rivo/uniseg v0.4.7 h1:WUdvkW8uEhrYfLC4ZzdpI2ztxP1I582+49Oc5Mq64VQ=\ngithub.com/rivo/uniseg v0.4.7/go.mod h1:FN3SvrM+Zdj16jyLfmOkMNblXMcoc8DfTHruCPUcx88=\ngithub.com/robfig/cron/v3 v3.0.1 h1:WdRxkvbJztn8LMz/QEvLN5sBU+xKpSqwwUO1Pjr4qDs=\ngithub.com/robfig/cron/v3 v3.0.1/go.mod h1:eQICP3HwyT7UooqI/z+Ov+PtYAWygg1TEWWzGIFLtro=\ngithub.com/rogpeppe/go-internal v1.13.1 h1:KvO1DLK/DRN07sQ1LQKScxyZJuNnedQ5/wKSR38lUII=\ngithub.com/rogpeppe/go-internal v1.13.1/go.mod h1:uMEvuHeurkdAXX61udpOXGD/AzZDWNMNyH2VO9fmH0o=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sahilm/fuzzy v0.1.1 h1:ceu5RHF8DGgoi+/dR5PsECjCDH1BE3Fnmpo7aVXOdRA=\ngithub.com/sahilm/fuzzy v0.1.1/go.mod h1:VFvziUEIMCrT6A6tw2RFIXPXXmzXbOsSHF0DOI8ZK9Y=\ngithub.com/sergi/go-diff v1.3.2-0.20230802210424-5b0b94c5c0d3 h1:n661drycOFuPLCN3Uc8sB6B/s6Z4t2xvBgU1htSHuq8=\ngithub.com/sergi/go-diff v1.3.2-0.20230802210424-5b0b94c5c0d3/go.mod h1:A0bzQcvG0E7Rwjx0REVgAGH58e96+X0MeOfepqsbeW4=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/xo/terminfo v0.0.0-20220910002029-abceb7e1c41e h1:JVG44RsyaB9T2KIHavMF/ppJZNG9ZpyihvCd0w101no=\ngithub.com/xo/terminfo v0.0.0-20220910002029-abceb7e1c41e/go.mod h1:RbqR21r5mrJuqunuUZ/Dhy/avygyECGrLceyNeo4LiM=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngithub.com/yuin/goldmark v1.7.1/go.mod h1:uzxRWxtg69N339t3louHJ7+O03ezfj6PlliRlaOzY1E=\ngithub.com/yuin/goldmark v1.7.4 h1:BDXOHExt+A7gwPCJgPIIq7ENvceR7we7rOS9TNoLZeg=\ngithub.com/yuin/goldmark v1.7.4/go.mod h1:uzxRWxtg69N339t3louHJ7+O03ezfj6PlliRlaOzY1E=\ngithub.com/yuin/goldmark-emoji v1.0.3 h1:aLRkLHOuBR2czCY4R8olwMjID+tENfhyFDMCRhbIQY4=\ngithub.com/yuin/goldmark-emoji v1.0.3/go.mod h1:tTkZEbwu5wkPmgTcitqddVxY9osFZiavD+r4AzQrh1U=\ngo.uber.org/automaxprocs v1.6.0 h1:O3y2/QNTOdbF+e/dpXNNW7Rx2hZ4sTIPyybbxyNqTUs=\ngo.uber.org/automaxprocs v1.6.0/go.mod h1:ifeIMSnPZuznNm6jmdzmU3/bfk01Fe2fotchwEFJ8r8=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.19.0/go.mod h1:Iy9bg/ha4yyC70EfRS8jz+B6ybOBKMaSxLj6P6oBDfU=\ngolang.org/x/crypto v0.32.0 h1:euUpcYgM8WcP71gNpTqQCn6rC2t6ULUPiOzfWaXVVfc=\ngolang.org/x/crypto v0.32.0/go.mod h1:ZnnJkOaASj8g0AjIduWNlq2NRxL0PlBrbKVyZ6V/Ugc=\ngolang.org/x/exp v0.0.0-20240719175910-8a7402abbf56 h1:2dVuKD2vS7b0QIHQbpyTISPd0LeHDbnYEryqj5Q1ug8=\ngolang.org/x/exp v0.0.0-20240719175910-8a7402abbf56/go.mod h1:M4RDyNAINzryxdtnbRXRL/OHtkFuWGRjvuhBJpk2IlY=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.19.0 h1:fEdghXQSo20giMthA7cd28ZC+jts4amQ3YMXiP5oMQ8=\ngolang.org/x/mod v0.19.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=\ngolang.org/x/net v0.33.0 h1:74SYHlV8BIgHIFC/LrYkOGIwL19eTYXQ5wc6TBuO36I=\ngolang.org/x/net v0.33.0/go.mod h1:HXLR5J+9DxmrqMwG9qjGCxZ+zKXxBru04zlTvWlWuN4=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.4.0/go.mod h1:FU7BRWz2tNW+3quACPkgCx/L+uEAv1htQ0V83Z9Rj+Y=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210809222454-d867a43fc93e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.29.0 h1:TPYlXGxvx1MGTn2GiZDhnjPA9wZzZeGKHHmKhHYvgaU=\ngolang.org/x/sys v0.29.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=\ngolang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=\ngolang.org/x/term v0.28.0 h1:/Ts8HFuMR2E6IP/jlo7QVLZHggjKQbhu/7H0LJFr3Gg=\ngolang.org/x/term v0.28.0/go.mod h1:Sw/lC2IAUZ92udQNf3WodGtn4k/XoLyZoh8v/8uiwek=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/tools v0.23.0 h1:SGsXPZ+2l4JsgaCKkx+FQ9YZ5XEtA1GZYuoDjenLjvg=\ngolang.org/x/tools v0.23.0/go.mod h1:pnu6ufv6vQkll6szChhK3C3L/ruaIv5eBeztNG8wtsI=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/protobuf v1.34.2 h1:6xV6lTsCfpGD21XK49h7MhtcApnLqkfYgPcdHftf6hg=\ngoogle.golang.org/protobuf v1.34.2/go.mod h1:qYOHts0dSfpeUzUFpOMr/WGzszTmLH+DiWniOlNbLDw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/warnings.v0 v0.1.2 h1:wFXVbFY8DY5/xOe1ECiWdKCzZlxgshcYVNkBHstARME=\ngopkg.in/warnings.v0 v0.1.2/go.mod h1:jksf8JmL6Qr/oQM2OXTHunEvvTAsrWBLb6OOjuVWRNI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nmodernc.org/cc/v4 v4.21.4 h1:3Be/Rdo1fpr8GrQ7IVw9OHtplU4gWbb+wNgeoBMmGLQ=\nmodernc.org/cc/v4 v4.21.4/go.mod h1:HM7VJTZbUCR3rV8EYBi9wxnJ0ZBRiGE5OeGXNA0IsLQ=\nmodernc.org/ccgo/v4 v4.19.2 h1:lwQZgvboKD0jBwdaeVCTouxhxAyN6iawF3STraAal8Y=\nmodernc.org/ccgo/v4 v4.19.2/go.mod h1:ysS3mxiMV38XGRTTcgo0DQTeTmAO4oCmJl1nX9VFI3s=\nmodernc.org/fileutil v1.3.0 h1:gQ5SIzK3H9kdfai/5x41oQiKValumqNTDXMvKo62HvE=\nmodernc.org/fileutil v1.3.0/go.mod h1:XatxS8fZi3pS8/hKG2GH/ArUogfxjpEKs3Ku3aK4JyQ=\nmodernc.org/gc/v2 v2.4.1 h1:9cNzOqPyMJBvrUipmynX0ZohMhcxPtMccYgGOJdOiBw=\nmodernc.org/gc/v2 v2.4.1/go.mod h1:wzN5dK1AzVGoH6XOzc3YZ+ey/jPgYHLuVckd62P0GYU=\nmodernc.org/gc/v3 v3.0.0-20240722195230-4a140ff9c08e h1:WPC4v0rNIFb2PY+nBBEEKyugPPRHPzUgyN3xZPpGK58=\nmodernc.org/gc/v3 v3.0.0-20240722195230-4a140ff9c08e/go.mod h1:Qz0X07sNOR1jWYCrJMEnbW/X55x206Q7Vt4mz6/wHp4=\nmodernc.org/libc v1.55.3 h1:AzcW1mhlPNrRtjS5sS+eW2ISCgSOLLNyFzRh/V3Qj/U=\nmodernc.org/libc v1.55.3/go.mod h1:qFXepLhz+JjFThQ4kzwzOjA/y/artDeg+pcYnY+Q83w=\nmodernc.org/mathutil v1.6.0 h1:fRe9+AmYlaej+64JsEEhoWuAYBkOtQiMEU7n/XgfYi4=\nmodernc.org/mathutil v1.6.0/go.mod h1:Ui5Q9q1TR2gFm0AQRqQUaBWFLAhQpCwNcuhBOSedWPo=\nmodernc.org/memory v1.8.0 h1:IqGTL6eFMaDZZhEWwcREgeMXYwmW83LYW8cROZYkg+E=\nmodernc.org/memory v1.8.0/go.mod h1:XPZ936zp5OMKGWPqbD3JShgd/ZoQ7899TUuQqxY+peU=\nmodernc.org/opt v0.1.3 h1:3XOZf2yznlhC+ibLltsDGzABUGVx8J6pnFMS3E4dcq4=\nmodernc.org/opt v0.1.3/go.mod h1:WdSiB5evDcignE70guQKxYUl14mgWtbClRi5wmkkTX0=\nmodernc.org/sortutil v1.2.0 h1:jQiD3PfS2REGJNzNCMMaLSp/wdMNieTbKX920Cqdgqc=\nmodernc.org/sortutil v1.2.0/go.mod h1:TKU2s7kJMf1AE84OoiGppNHJwvB753OYfNl2WRb++Ss=\nmodernc.org/sqlite v1.34.4 h1:sjdARozcL5KJBvYQvLlZEmctRgW9xqIZc2ncN7PU0P8=\nmodernc.org/sqlite v1.34.4/go.mod h1:3QQFCG2SEMtc2nv+Wq4cQCH7Hjcg+p/RMlS1XK+zwbk=\nmodernc.org/strutil v1.2.0 h1:agBi9dp1I+eOnxXeiZawM8F4LawKv4NzGWSaLfyeNZA=\nmodernc.org/strutil v1.2.0/go.mod h1:/mdcBmfOibveCTBxUl5B5l6W+TTH1FXPLHZE6bTosX0=\nmodernc.org/token v1.1.0 h1:Xl7Ap9dKaEs5kLoOQeQmPWevfnk/DM5qcLcYlA8ys6Y=\nmodernc.org/token v1.1.0/go.mod h1:UGzOrNV1mAFSEB63lOFHIpNRUVMvYTc6yu1SMY/XTDM=\n"
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "systemd.md",
          "type": "blob",
          "size": 3.2880859375,
          "content": "# Running Soft Serve as a Systemd Service\n\nMost Linux OSes use Systemd as an init system and service management. You can\nuse Systemd to manage Soft Serve as a service on your host machine.\n\nOur Soft Serve deb/rpm packages come with Systemd service files pre-packaged.\nYou can install `soft-serve` from our Apt/Yum repositories. Follow the\n[installation instructions](https://github.com/charmbracelet/soft-serve#installation) for\nmore information.\n\n## Writing a Systemd Service File\n\n> **Note** you can skip this section if you are using our deb/rpm packages or\n> installed Soft Serve from our Apt/Yum repositories.\n\nStart by writing a Systemd service file to define how your Soft Serve server\nshould start.\n\nFirst, we need to specify where the data should live for our server. Here I\nwill be choosing `/var/local/lib/soft-serve` to store the server's data. Soft\nServe will look for this path in the `SOFT_SERVE_DATA_PATH` environment\nvariable.\n\nMake sure this directory exists before proceeding.\n\n```sh\nsudo mkdir -p /var/local/lib/soft-serve\n```\n\nWe will also create a `/etc/soft-serve.conf` file for any extra server settings that we want to override.\n\n```conf\n# Config defined here will override the config in /var/local/lib/soft-serve/config.yaml\n# Keys defined in `SOFT_SERVE_INITIAL_ADMIN_KEYS` will be merged with\n# the `initial_admin_keys` from /var/local/lib/soft-serve/config.yaml.\n#\n#SOFT_SERVE_GIT_LISTEN_ADDR=:9418\n#SOFT_SERVE_HTTP_LISTEN_ADDR=:23232\n#SOFT_SERVE_SSH_LISTEN_ADDR=:23231\n#SOFT_SERVE_SSH_KEY_PATH=ssh/soft_serve_host_ed25519\n#SOFT_SERVE_INITIAL_ADMIN_KEYS='ssh-ed25519 AAAAC3NzaC1lZDI1...'\n```\n\n> **Note** Soft Serve stores its server configuration and settings in\n> `config.yaml` under its _data path_ directory specified using\n> `SOFT_SERVE_DATA_PATH` environment variable.\n\nNow, let's write a new `/etc/systemd/system/soft-serve.service` Systemd service file:\n\n```conf\n[Unit]\nDescription=Soft Serve git server üç¶\nDocumentation=https://github.com/charmbracelet/soft-serve\nRequires=network-online.target\nAfter=network-online.target\n\n[Service]\nType=simple\nRestart=always\nRestartSec=1\nExecStart=/usr/bin/soft serve\nEnvironment=SOFT_SERVE_DATA_PATH=/var/local/lib/soft-serve\nEnvironmentFile=-/etc/soft-serve.conf\nWorkingDirectory=/var/local/lib/soft-serve\n\n[Install]\nWantedBy=multi-user.target\n```\n\nGreat, we now have a Systemd service file for Soft Serve. The settings defined\nhere may vary depending on your specific setup. This assumes that you want to\nrun Soft Serve as `root`. For more information on Systemd service files, refer\nto\n[systemd.service](https://www.freedesktop.org/software/systemd/man/systemd.service.html)\n\n## Start Soft Serve on boot\n\nNow that we have our Soft Serve Systemd service file in-place, let's go ahead\nand enable and start Soft Serve to run on-boot.\n\n```sh\n# Reload systemd daemon\nsudo systemctl daemon-reload\n# Enable Soft Serve to start on-boot\nsudo systemctl enable soft-serve.service\n# Start Soft Serve now!!\nsudo systemctl start soft-serve.service\n```\n\nYou can monitor the server logs using `journalctl -u soft-serve.service`. Use\n`-f` to _tail_ and follow the logs as they get written.\n\n***\n\nPart of [Charm](https://charm.sh).\n\n<a href=\"https://charm.sh/\"><img alt=\"The Charm logo\" src=\"https://stuff.charm.sh/charm-badge-unrounded.jpg\" width=\"400\"></a>\n\nCharmÁÉ≠Áà±ÂºÄÊ∫ê ‚Ä¢ Charm loves open source\n"
        },
        {
          "name": "testscript",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}