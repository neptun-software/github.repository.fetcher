{
  "metadata": {
    "timestamp": 1736567738513,
    "page": 325,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "matrix-org/dendrite",
      "stars": 5724,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.009765625,
          "content": "bin\n*.wasm"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.8603515625,
          "content": ".*.swp\n\n# Hidden files\n.*\n\n# Allow GitHub config\n!.github\n\n# Downloads\n/.downloads\n\n# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n/kafka\n/bin\n/pkg\n/_obj\n/_test\n/vendor/bin\n/docker/build\n/logs\n/jetstream\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\n*.test\n*.prof\n*.wasm\n*.aar\n*.jar\n*.framework\n*.xcframework\n\n# Generated keys\n*.pem\n*.key\n*.crt\n\n# Default configuration file\ndendrite.yaml\n\n# Database files\n*.db\n*.db-journal\n\n# Log files\n*.log*\n\n# Generated code\ncmd/dendrite-demo-yggdrasil/embed/fs*.go\n\n# Test dependencies\ntest/wasm/node_modules\n\n# Ignore complement folder when running locally\ncomplement/\n\n# Stuff from GitHub Pages\ndocs/_site\n\nmedia_store/\nbuild\n\n# golang workspaces\ngo.work*\n\n# helm chart\nhelm/dendrite/charts/\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 10.0244140625,
          "content": "# Config file for golangci-lint\n\n# options for analysis running\nrun:\n  # default concurrency is a available CPU number\n  concurrency: 4\n\n  # timeout for analysis, e.g. 30s, 5m, default is 1m\n  timeout: 5m\n\n  # exit code when at least one issue was found, default is 1\n  issues-exit-code: 1\n\n  # include test files or not, default is true\n  tests: true\n\n  # list of build tags, all linters use it. Default is empty list.\n  #build-tags:\n  #  - mytag\n\n  # by default isn't set. If set we pass it to \"go list -mod={option}\". From \"go help modules\":\n  # If invoked with -mod=readonly, the go command is disallowed from the implicit\n  # automatic updating of go.mod described above. Instead, it fails when any changes\n  # to go.mod are needed. This setting is most useful to check that go.mod does\n  # not need updates, such as in a continuous integration and testing system.\n  # If invoked with -mod=vendor, the go command assumes that the vendor\n  # directory holds the correct copies of dependencies and ignores\n  # the dependency descriptions in go.mod.\n  #modules-download-mode: (release|readonly|vendor)\n\n\n# output configuration options\noutput:\n  # colored-line-number|line-number|json|tab|checkstyle|code-climate, default is \"colored-line-number\"\n  formats:\n    - format: colored-line-number\n\n  # print lines of code with issue, default is true\n  print-issued-lines: true\n\n  # print linter name in the end of issue text, default is true\n  print-linter-name: true\n\n\n# all available settings of specific linters\nlinters-settings:\n  errcheck:\n    # report about not checking of errors in type assertions: `a := b.(MyStruct)`;\n    # default is false: such cases aren't reported by default.\n    check-type-assertions: false\n\n    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`;\n    # default is false: such cases aren't reported by default.\n    check-blank: false\n\n    # [deprecated] comma-separated list of pairs of the form pkg:regex\n    # the regex is used to ignore names within pkg. (default \"fmt:.*\").\n    # see https://github.com/kisielk/errcheck#the-deprecated-method for details\n    #ignore: fmt:.*,io/ioutil:^Read.*\n\n    # path to a file containing a list of functions to exclude from checking\n    # see https://github.com/kisielk/errcheck#excluding-functions for details\n    #exclude: /path/to/file.txt\n  govet:\n    enable:\n      - shadow\n    # settings per analyzer\n    settings:\n      printf: # analyzer name, run `go tool vet help` to see all analyzers\n        funcs: # run `go tool vet help printf` to see available settings for `printf` analyzer\n          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof\n          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf\n          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf\n          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf\n  golint:\n    # minimal confidence for issues, default is 0.8\n    min-confidence: 0.8\n  gofmt:\n    # simplify code: gofmt with `-s` option, true by default\n    simplify: true\n  goimports:\n    # put imports beginning with prefix after 3rd-party packages;\n    # it's a comma-separated list of prefixes\n    #local-prefixes: github.com/org/project\n  gocyclo:\n    # minimal code complexity to report, 30 by default (but we recommend 10-20)\n    min-complexity: 25\n  maligned:\n    # print struct with more effective memory layout or not, false by default\n    suggest-new: true\n  dupl:\n    # tokens count to trigger issue, 150 by default\n    threshold: 100\n  goconst:\n    # minimal length of string constant, 3 by default\n    min-len: 3\n    # minimal occurrences count to trigger, 3 by default\n    min-occurrences: 3\n  depguard:\n    list-type: blacklist\n    include-go-root: false\n    packages:\n    #  - github.com/davecgh/go-spew/spew\n  misspell:\n    # Correct spellings using locale preferences for US or UK.\n    # Default is to use a neutral variety of English.\n    # Setting locale to US will correct the British spelling of 'colour' to 'color'.\n    locale: UK\n    ignore-words:\n    #  - someword\n  lll:\n    # max line length, lines longer will be reported. Default is 120.\n    # '\\t' is counted as 1 character by default, and can be changed with the tab-width option\n    line-length: 96\n    # tab width in spaces. Default to 1.\n    tab-width: 1\n  unused:\n    # treat code as a program (not a library) and report unused exported identifiers; default is false.\n    # XXX: if you enable this setting, unused will report a lot of false-positives in text editors:\n    # if it's called for subdir of a project it can't find funcs usages. All text editor integrations\n    # with golangci-lint call it on a directory with the changed file.\n    check-exported: false\n  unparam:\n    # Inspect exported functions, default is false. Set to true if no external program/library imports your code.\n    # XXX: if you enable this setting, unparam will report a lot of false-positives in text editors:\n    # if it's called for subdir of a project it can't find external interfaces. All text editor integrations\n    # with golangci-lint call it on a directory with the changed file.\n    check-exported: false\n  nakedret:\n    # make an issue if func has more lines of code than this setting and it has naked returns; default is 30\n    max-func-lines: 60\n  prealloc:\n    # XXX: we don't recommend using this linter before doing performance profiling.\n    # For most programs usage of prealloc will be a premature optimization.\n\n    # Report preallocation suggestions only on simple loops that have no returns/breaks/continues/gotos in them.\n    # True by default.\n    simple: true\n    range-loops: true # Report preallocation suggestions on range loops, true by default\n    for-loops: false # Report preallocation suggestions on for loops, false by default\n  gocritic:\n    # Which checks should be enabled; can't be combined with 'disabled-checks';\n    # See https://go-critic.github.io/overview#checks-overview\n    # To check which checks are enabled run `GL_DEBUG=gocritic golangci-lint run`\n    # By default list of stable checks is used.\n    #enabled-checks:\n\n    # Which checks should be disabled; can't be combined with 'enabled-checks'; default is empty\n    #disabled-checks:\n\n    # Enable multiple checks by tags, run `GL_DEBUG=gocritic golangci-lint` run to see all tags and checks.\n    # Empty list by default. See https://github.com/go-critic/go-critic#usage -> section \"Tags\".\n    #enabled-tags:\n    #  - performance\n\n    settings: # settings passed to gocritic\n      captLocal: # must be valid enabled check name\n        paramsOnly: true\n      #rangeValCopy:\n      #  sizeThreshold: 32\n\nlinters:\n  enable:\n    - errcheck\n    - gocyclo\n    - goimports # Does everything gofmt does\n    - gosimple\n    - govet\n    - ineffassign\n    - megacheck\n    - misspell # Check code comments, whereas misspell in CI checks *.md files\n    - nakedret\n    - staticcheck\n    - unparam\n    - unused\n  enable-all: false\n  disable:\n    - bodyclose\n    - depguard\n    - dupl\n    - gochecknoglobals\n    - gochecknoinits\n    - gocritic\n    - gofmt\n    - golint\n    - gosec # Should turn back on soon\n    - interfacer\n    - lll\n    - maligned\n    - prealloc # Should turn back on soon\n    - scopelint\n    - stylecheck\n    - typecheck # Should turn back on soon\n    - unconvert # Should turn back on soon\n    - goconst # Slightly annoying, as it reports \"issues\" in SQL statements\n  disable-all: false\n  presets:\n  fast: false\n\n\nissues:\n  # which files to skip: they will be analyzed, but issues from them\n  # won't be reported. Default value is empty list, but there is\n  # no need to include all autogenerated files, we confidently recognize\n  # autogenerated files. If it's not please let us know.\n  exclude-files:\n    - \".*\\\\.md$\"\n    - \".*\\\\.sh$\"\n    - \"^cmd/syncserver-integration-tests/testdata.go$\"\n\n  # which dirs to skip: they won't be analyzed;\n  # can use regexp here: generated.*, regexp is applied on full path;\n  # default value is empty list, but next dirs are always skipped independently\n  # from this option's value:\n  #   \tvendor$, third_party$, testdata$, examples$, Godeps$, builtin$\n  exclude-dirs:\n    - bin\n    - docs\n\n  # List of regexps of issue texts to exclude, empty list by default.\n  # But independently from this option we use default exclude patterns,\n  # it can be disabled by `exclude-use-default: false`. To list all\n  # excluded by default patterns execute `golangci-lint run --help`\n  exclude:\n  # - abcdef\n\n  # Excluding configuration per-path, per-linter, per-text and per-source\n  exclude-rules:\n    # Exclude some linters from running on tests files.\n    - path: _test\\.go\n      linters:\n        - gocyclo\n        - errcheck\n        - dupl\n        - gosec\n\n    # Exclude known linters from partially hard-vendored code,\n    # which is impossible to exclude via \"nolint\" comments.\n    - path: internal/hmac/\n      text: \"weak cryptographic primitive\"\n      linters:\n        - gosec\n\n    # Exclude some staticcheck messages\n    - linters:\n        - staticcheck\n      text: \"SA9003:\"\n\n    # Exclude lll issues for long lines with go:generate\n    - linters:\n        - lll\n      source: \"^//go:generate \"\n\n  # Independently from option `exclude` we use default exclude patterns,\n  # it can be disabled by this option. To list all\n  # excluded by default patterns execute `golangci-lint run --help`.\n  # Default value for this option is true.\n  exclude-use-default: false\n\n  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.\n  max-issues-per-linter: 0\n\n  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.\n  max-same-issues: 0\n\n  # Show only new issues: if there are unstaged changes or untracked files,\n  # only those changes are analyzed, else only changes in HEAD~ are analyzed.\n  # It's a super-useful option for integration of golangci-lint into existing\n  # large codebase. It's not practical to fix all existing issues at the moment\n  # of integration: much better don't allow issues in new code.\n  # Default is false.\n  new: false\n\n  # Show only new issues created after git revision `REV`\n  #new-from-rev: REV\n\n  # Show only new issues created in git patch with set file path.\n  #new-from-patch: path/to/patch/file\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 87.9169921875,
          "content": "# Changelog\n\n## Dendrite 0.13.8 (2024-09-13)\n\n### Features\n\n  - The required Go version to build Dendrite is now 1.21\n  - Support for authenticated media ([MSC3916](https://github.com/matrix-org/matrix-spec-proposals/pull/3916)) has been added\n  - NATS can now connect to servers requiring authentication (contributed by [paigeadelethompson](https://github.com/paigeadelethompson))\n  - Updated dependencies\n    - Internal NATS Server has been updated from v2.10.7 to v2.10.20 (contributed by [neilalexander](https://github.com/neilalexander)) \n\n### Fixes\n\n  - Fix parsing `?ts` query param (contributed by [tulir](https://github.com/tulir))\n  - Don't query the database if we could fetch all keys from cache\n  - Fix media DB potentially leaking connections\n  - Fixed a bug where we would return that an account exists if we encountered an unhandled error case\n  - Fixed an issues where edited message could appear twice in search results (contributed by [adnull](https://github.com/adnull))\n  - Outgoing threepid HTTP requests now correctly close the returned body (contributed by [ testwill](https://github.com/testwill))\n  - Presence conflicts are handled better, reducing the amount of outgoing federation requests (contributed by [jjj333-p](https://github.com/jjj333-p))\n  - Internal NATS now uses `SyncAlways` which should improve resilience against crashes (contributed by [neilalexander](https://github.com/neilalexander))\n  - Whitespaces in the `X-Matrix` header are now handled correctly\n  - `/.well-known/matrix/server` lookups now timeout after 30 seconds\n  - Purging rooms has seen a huge speed-up\n\n## Dendrite 0.13.7 (2024-04-09)\n\n### Fixes\n\n- Fixed an issue where the displayname/avatar of an invited user was replaced with the inviter's details\n- Improved server startup performance by avoiding unnecessary room ACL queries\n  - This change reduces memory footprint as it caches ACL regex patterns once instead of for each room\n  - Unnecessary Relay related queries have been removed. **Note**: To use relays, you now need to explicitly enable them using the `federation_api.enable_relays` config\n- Fixed space summaries over federation\n- Improved usage of external NATS JetStream by reusing existing connections instead of opening new ones unnecessarily\n\n### Features\n\n- Modernized Appservices (contributed by [tulir](https://github.com/tulir))\n- Added event reporting with Synapse Admin endpoints for querying them\n- Updated dependencies\n\n## Dendrite 0.13.6 (2024-01-26)\n\nUpgrading to this version is **highly** recommended, as it contains several QoL improvements.\n\n### Fixes\n\n- Use `AckExplicitPolicy` for JetStream consumers, so messages don't pile up in NATS\n- A rare panic when assigning a state key NID has been fixed\n- A rare panic when checking powerlevels has been fixed\n- Notary keys requests for all keys now work correctly\n- Spec compliance:\n  - Return `M_INVALID_PARAM` when querying room aliases\n  - Handle empty `from` parameter when requesting `/messages`\n  - Add CORP headers on media endpoints\n  - Remove `aliases` from `/publicRooms` responses\n  - Allow `+` in MXIDs (Contributed by [RosstheRoss](https://github.com/RosstheRoss))\n- Fixes membership transitions from `knock` to `join` in `knock_restricted` rooms\n- Incremental syncs now batch querying events (Contributed by [recht](https://github.com/recht))\n- Move `/joined_members` back to the clientAPI/roomserver, which should make bridges happier again\n- Backfilling from other servers now only uses at max 100 events instead of potentially thousands\n\n## Dendrite 0.13.5 (2023-12-12)\n\nUpgrading to this version is **highly** recommended, as it fixes several long-standing bugs in\nour CanonicalJSON implementation.\n\n### Fixes\n\n- Convert unicode escapes to lowercase (gomatrixserverlib)\n- Fix canonical json utf-16 surrogate pair detection logic (gomatrixserverlib)\n- Handle negative zero and exponential numbers in Canonical JSON verification (gomatrixserverlib)\n- Avoid logging unnecessary messages when unable to fetch server keys if multiple fetchers are used (gomatrixserverlib)\n- Issues around the device list updater have been fixed, which should ensure that there are always\n  workers available to process incoming device list updates.\n- A panic in the `/hierarchy` endpoints used for spaces has been fixed (client-server and server-server API)\n- Fixes around the way we handle database transactions (including a potential connection leak)\n- ACLs are now updated when received as outliers\n- A race condition, which could lead to bridges instantly leaving a room after joining it, between the SyncAPI and\n  Appservices has been fixed\n\n### Features\n\n- **Appservice login is now supported!**\n- Users can now kick themselves (used by some bridges)\n\n## Dendrite 0.13.4 (2023-10-25)\n\nUpgrading to this version is **highly** recommended, as it fixes a long-standing bug in the state resolution\nalgorithm.\n\n### Fixes:\n\n- The \"device list updater\" now de-duplicates the servers to fetch devices from on startup. (This also \n  avoids spamming the logs when shutting down.)\n- A bug in the state resolution algorithm has been fixed. This bug could result in users \"being reset\"\n  out of rooms and other missing state events due to calculating the wrong state.\n- A bug when setting notifications from Element Android has been fixed by implementing MSC3987\n\n### Features\n\n- Updated dependencies\n  - Internal NATS Server has been updated from v2.9.19 to v2.9.23\n\n## Dendrite 0.13.3 (2023-09-28)\n\n### Fixes:\n\n- The `user_id` query parameter when authenticating is now used correctly (contributed by [tulir](https://github.com/tulir))\n- Invitations are now correctly pushed to devices\n- A bug which could result in the corruption of `m.direct` account data has been fixed \n\n### Features\n\n- [Sliding Sync proxy](https://github.com/matrix-org/sliding-sync) can be configured in the `/.well-known/matrix/client` response\n- Room version 11 is now supported\n- Clients can request the `federation` `event_format` when creating filters\n- Many under the hood improvements for [MSC4014: Pseudonymous Identities](https://github.com/matrix-org/matrix-spec-proposals/blob/kegan/pseudo-ids/proposals/4014-pseudonymous-identities.md)\n\n### Other\n\n- Dendrite now requires Go 1.20 if building from source\n\n## Dendrite 0.13.2 (2023-08-23)\n\n### Fixes:\n\n- Migrations in SQLite are now prepared on the correct context (transaction or database)\n- The `InputRoomEvent` stream now has a maximum age of 24h, which should help with slow start up times of NATS JetStream (contributed by [neilalexander](https://github.com/neilalexander))\n- Event size checks are more in line with Synapse\n- Requests to `/messages` have been optimized, possibly reducing database round trips\n- Re-add the revision of Dendrite when building from source (Note: This only works if git is installed)\n- Getting local members to notify has been optimized, which should significantly reduce memory allocation and cache usage\n- When getting queried about user profiles, we now return HTTP404 if the user/profiles does not exist\n- Background federated joins should now be fixed and not timeout after a short time\n- Database connections are now correctly re-used\n- Restored the old behavior of the `/purgeRoom` admin endpoint (does not evacuate the room before purging)\n- Don't expose information about the system when trying to download files that don't exist\n\n### Features\n\n- Further improvements and fixes for [MSC4014: Pseudonymous Identities](https://github.com/matrix-org/matrix-spec-proposals/blob/kegan/pseudo-ids/proposals/4014-pseudonymous-identities.md)\n  - Lookup correct prev events in the sync API\n  - Populate `prev_sender` correctly in the sync API\n  - Event federation should work better\n- Added new `dendrite_up` Prometheus metric, containing the version of Dendrite\n- Space summaries ([MSC2946](https://github.com/matrix-org/matrix-spec-proposals/pull/2946)) have been moved from MSC to being natively supported\n- For easier issue investigation, logs for application services now contain the application service ID (contributed by [maxberger](https://github.com/maxberger))\n- The default room version to use when creating rooms can now be configured using `room_server.default_room_version`\n\n## Dendrite 0.13.1 (2023-07-06)\n\nThis releases fixes a long-standing \"off-by-one\" error which could result in state resets. Upgrading to this version is **highly** recommended.\n\nWhen deduplicating state events, we were checking if the event in question was already in a state snapshot. If it was in a previous state snapshot, we would \nthen remove it from the list of events to store. If this happened, we were, unfortunately, skipping the next event to check. This resulted in \nevents getting stored in state snapshots where they may not be needed. When we now compared two of those state snapshots, one of them\ncontained the skipped event, while the other didn't. This difference possibly shouldn't exist, resulting in unexpected state resets and explains\nreports of missing state events as well.\n\nRooms where a state reset occurred earlier should, hopefully, reconcile over time.\n\n### Fixes:\n\n- A long-standing \"off-by-one\" error has been fixed, which could result in state resets\n- Roomserver Prometheus Metrics are available again\n\n### Features\n\n- Updated dependencies\n  - Internal NATS Server has been updated from v2.9.15 to v2.9.19\n\n## Dendrite 0.13.0 (2023-06-30)\n\n### Features\n\n- Results in responses to `/search` now highlight words more accurately and not only the search terms as before\n- Support for connecting to appservices listening on unix sockets has been added (contributed by [cyberb](https://github.com/cyberb))\n- Admin APIs for token authenticated registration have been added (contributed by [santhoshivan23](https://github.com/santhoshivan23))\n- Initial support for [MSC4014: Pseudonymous Identities](https://github.com/matrix-org/matrix-spec-proposals/blob/kegan/pseudo-ids/proposals/4014-pseudonymous-identities.md)\n  - This is **highly experimental**, things like changing usernames/avatars, inviting users, upgrading rooms isn't working\n\n### Fixes\n\n- `m.upload.size` is now optional, finally allowing uploads with unlimited file size\n- A bug while resolving server names has been fixed (contributed by [anton-molyboha](https://github.com/anton-molyboha))\n- Application services should only receive one invitation instead of 2 (or worse), which could result in state resets previously\n- Several admin endpoints are now using `POST` instead of `GET`\n- `/delete_devices` now uses user-interactive authentication\n- Several \"membership\" (e.g `/kick`, `/ban`) endpoints are using less heavy database queries to check if the user is allowed to perform this action\n- `/3pid` endpoints are now available on `/v3` instead of the `/unstable` prefix\n- Upgrading rooms ignores state events of other users, which could result in failed upgrades before\n- Uploading key backups with a wrong version now returns `M_WRONG_ROOM_KEYS_VERSION`\n- A potential state reset when joining the same room multiple times in short sequence has been fixed\n- A bug where we returned the full event as `redacted_because` in redaction events has been fixed\n- The `displayname` and `avatar_url` can now be set to empty strings\n- Unsafe hotserving of files has been fixed (contributed by [joshqou](https://github.com/joshqou))\n- Joining new rooms would potentially return \"redacted\" events, due to history visibility not being set correctly, this could result in events being rejected \n- Backfilling resulting in `unsuported room version ''` should now be solved\n\n### Other\n\n- Huge refactoring of Dendrite and gomatrixserverlib\n\n## Dendrite 0.12.0 (2023-03-13)\n\n### Features\n\n- The userapi and keyserver have been merged (no actions needed regarding the database)\n- The internal NATS JetStream server is now using logrus for logging (contributed by [dvob](https://github.com/dvob))\n- The roomserver database has been refactored to have separate interfaces when working with rooms and events. Also includes increased usage of the cache to avoid database round trips. (database is unchanged)\n- The pinecone demo now shuts down more cleanly\n- The Helm chart now has the ability to deploy a Grafana chart as well (contributed by [genofire](https://github.com/genofire))\n- Support for listening on unix sockets has been added (contributed by [cyberb](https://github.com/cyberb))\n- The internal NATS server was updated to v2.9.15\n- Initial support for `runtime/trace` has been added, to further track down long-running tasks\n\n### Fixes\n\n- The `session_id` is now correctly set when using SQLite\n- An issue where device keys could be removed if a device ID is reused has been fixed\n- A possible DoS issue related to relations has been fixed (reported by [sleroq](https://github.com/sleroq))\n- When backfilling events, errors are now ignored if we still could fetch events\n\n### Other\n\n- **⚠️ DEPRECATION: Polylith/HTTP API mode has been removed**\n- The default endpoint to report usages stats to has been updated\n\n## Dendrite 0.11.1 (2023-02-10)\n\n**⚠️ DEPRECATION WARNING: This is the last release to have polylith and HTTP API mode. Future releases are monolith only.**\n\n### Features\n\n* Dendrite can now be compiled against Go 1.20\n* Initial store and forward support has been added\n* A landing page showing that Dendrite is running has been added (contributed by [LukasLJL](https://github.com/LukasLJL))\n\n### Fixes\n\n- `/sync` is now using significantly less database round trips when using Postgres, resulting in faster initial syncs, allowing larger accounts to login again\n- Many under the hood pinecone improvements\n- Publishing rooms is now possible again\n\n## Dendrite 0.11.0 (2023-01-20)\n\nThe last three missing federation API Sytests have been fixed - bringing us to 100% server-server Synapse parity, with client-server parity at 93% 🎉\n\n### Features\n\n* Added `/_dendrite/admin/purgeRoom/{roomID}` to clean up the database\n* The default room version was updated to 10 (contributed by [FSG-Cat](https://github.com/FSG-Cat))\n\n### Fixes\n\n* An oversight in the `create-config` binary, which now correctly sets the media path if specified (contributed by [BieHDC](https://github.com/BieHDC))\n* The Helm chart now uses the `$.Chart.AppVersion` as the default image version to pull, with the possibility to override it (contributed by [genofire](https://github.com/genofire))\n\n## Dendrite 0.10.9 (2023-01-17)\n\n### Features\n\n* Stale device lists are now cleaned up on startup, removing entries for users the server doesn't share a room with anymore\n* Dendrite now has its own Helm chart\n* Guest access is now handled correctly (disallow joins, kick guests on revocation of guest access, as well as over federation)\n\n### Fixes\n\n* Push rules have seen several tweaks and fixes, which should, for example, fix notifications for `m.read_receipts`\n* Outgoing presence will now correctly be sent to newly joined hosts\n* Fixes the `/_dendrite/admin/resetPassword/{userID}` admin endpoint to use the correct variable\n* Federated backfilling for medium/large rooms has been fixed\n* `/login` causing wrong device list updates has been resolved\n* `/sync` should now return the correct room summary heroes\n* The default config options for `recaptcha_sitekey_class` and `recaptcha_form_field` are now set correctly \n* `/messages` now omits empty `state` to be more spec compliant (contributed by [handlerug](https://github.com/handlerug))\n* `/sync` has been optimised to only query state events for history visibility if they are really needed\n\n## Dendrite 0.10.8 (2022-11-29)\n\n### Features\n\n* The built-in NATS Server has been updated to version 2.9.8\n* A number of under-the-hood changes have been merged for future virtual hosting support in Dendrite (running multiple domain names on the same Dendrite deployment)\n\n### Fixes\n\n* Event auth handling of invites has been refactored, which should fix some edge cases being handled incorrectly\n* Fix a bug when returning an empty protocol list, which could cause Element to display \"The homeserver may be too old to support third party networks\" when opening the public room directory\n* The sync API will no longer filter out the user's own membership when using lazy-loading\n* Dendrite will now correctly detect JetStream consumers being deleted, stopping the consumer goroutine as needed\n* A panic in the federation API where the server list could go out of bounds has been fixed\n* Blacklisted servers will now be excluded when querying joined servers, which improves CPU usage and performs less unnecessary outbound requests\n* A database writer will now be used to assign state key NIDs when requesting NIDs that may not exist yet\n* Dendrite will now correctly move local aliases for an upgraded room when the room is upgraded remotely\n* Dendrite will now correctly move account data for an upgraded room when the room is upgraded remotely\n* Missing state key NIDs will now be allocated on request rather than returning an error\n* Guest access is now correctly denied on a number of endpoints\n* Presence information will now be correctly sent for new private chats\n* A number of unspecced fields have been removed from outbound `/send` transactions\n\n## Dendrite 0.10.7 (2022-11-04)\n\n### Features\n\n* Dendrite will now use a native SQLite port when building with `CGO_ENABLED=0`\n* A number of `thirdparty` endpoints have been added, improving support for appservices\n\n### Fixes\n\n* The `\"state\"` section of the `/sync` response is no longer limited, so state events should not be dropped unexpectedly\n* The deduplication of the `\"timeline\"` and `\"state\"` sections in `/sync` is now performed after applying history visibility, so state events should not be dropped unexpectedly\n* The `prev_batch` token returned by `/sync` is now calculated after applying history visibility, so that the pagination boundaries are correct\n* The room summary membership counts in `/sync` should now be calculated properly in more cases\n* A false membership leave event should no longer be sent down `/sync` as a result of retiring an accepted invite (contributed by [tak-hntlabs](https://github.com/tak-hntlabs))\n* Presence updates are now only sent to other servers for which the user shares rooms\n* A bug which could cause a panic when converting events into the `ClientEvent` format has been fixed\n\n## Dendrite 0.10.6 (2022-11-01)\n\n### Features\n\n* History visibility checks have been optimised, which should speed up response times on a variety of endpoints (including `/sync`, `/messages`, `/context` and others) and reduce database load\n* The built-in NATS Server has been updated to version 2.9.4\n* Some other minor dependencies have been updated\n\n### Fixes\n\n* A panic has been fixed in the sync API PDU stream which could cause requests to fail\n* The `/members` response now contains the `room_id` field, which may fix some E2EE problems with clients using the JS SDK (contributed by [ashkitten](https://github.com/ashkitten))\n* The auth difference calculation in state resolution v2 has been tweaked for clarity (and moved into gomatrixserverlib with the rest of the state resolution code)\n\n## Dendrite 0.10.5 (2022-10-31)\n\n### Features\n\n* It is now possible to use hCaptcha instead of reCAPTCHA for protecting registration\n* A new `auto_join_rooms` configuration option has been added for automatically joining new users to a set of rooms\n* A new `/_dendrite/admin/downloadState/{serverName}/{roomID}` endpoint has been added, which allows a server administrator to attempt to repair a room with broken room state by downloading a state snapshot from another federated server in the room\n\n### Fixes\n\n* Querying cross-signing keys for users should now be considerably faster\n* A bug in state resolution where some events were not correctly selected for third-party invites has been fixed\n* A bug in state resolution which could result in `not in room` event rejections has been fixed\n* When accepting a DM invite, it should now be possible to see messages that were sent before the invite was accepted\n* Claiming remote E2EE one-time keys has been refactored and should be more reliable now\n* Various fixes have been made to the `/members` endpoint, which may help with E2EE reliability and clients rendering memberships\n* A race condition in the federation API destination queues has been fixed when associating queued events with remote server destinations\n* A bug in the sync API where too many events were selected resulting in high CPU usage has been fixed\n* Configuring the avatar URL for the Server Notices user should work correctly now\n\n## Dendrite 0.10.4 (2022-10-21)\n\n### Features\n\n* Various tables belonging to the user API will be renamed so that they are namespaced with the `userapi_` prefix\n  * Note that, after upgrading to this version, you should not revert to an older version of Dendrite as the database changes **will not** be reverted automatically\n* The backoff and retry behaviour in the federation API has been refactored and improved\n\n### Fixes\n\n* Private read receipt support is now advertised in the client `/versions` endpoint\n* Private read receipts will now clear notification counts properly\n* A bug where a false `leave` membership transition was inserted into the timeline after accepting an invite has been fixed\n* Some panics caused by concurrent map writes in the key server have been fixed\n* The sync API now calculates membership transitions from state deltas more accurately\n* Transaction IDs are now scoped to endpoints, which should fix some bugs where transaction ID reuse could cause nonsensical cached responses from some endpoints\n* The length of the `type`, `sender`, `state_key` and `room_id` fields in events are now verified by number of bytes rather than codepoints after a spec clarification, reverting a change made in Dendrite 0.9.6\n\n## Dendrite 0.10.3 (2022-10-14)\n\n### Features\n\n* Event relations are now tracked and support for the `/room/{roomID}/relations/...` client API endpoints have been added\n* Support has been added for private read receipts\n* The built-in NATS Server has been updated to version 2.9.3\n\n### Fixes\n\n* The `unread_notifications` are now always populated in joined room responses\n* The `/get_missing_events` federation API endpoint should now work correctly for rooms with `joined` and `invited` visibility settings, returning redacted events for events that other servers are not allowed to see\n* The `/event` client API endpoint now applies history visibility correctly\n* Read markers should now be updated much more reliably\n* A rare bug in the sync API which could cause some `join` memberships to be incorrectly overwritten by other memberships when working out which rooms to populate has been fixed\n* The federation API now correctly updates the joined hosts table during a state rewrite\n\n## Dendrite 0.10.2 (2022-10-07)\n\n### Features\n\n* Dendrite will now fail to start if there is an obvious problem with the configured `max_open_conns` when using PostgreSQL database backends, since this can lead to instability and performance issues\n  * More information on this is available [in the documentation](https://matrix-org.github.io/dendrite/installation/start/optimisation#postgresql-connection-limit)\n* Unnecessary/empty fields will no longer be sent in `/sync` responses\n* It is now possible to configure `old_private_keys` from previous Matrix installations on the same domain if only public key is known, to make it easier to expire old keys correctly\n  * You can configure either just the `private_key` path, or you can supply both the `public_key` and `key_id`\n\n### Fixes\n\n* The sync transaction behaviour has been modified further so that errors in one stream should not propagate to other streams unnecessarily\n* Rooms should now be classified as DM rooms correctly by passing through `is_direct` and unsigned hints\n* A bug which caused marking device lists as stale to consume lots of CPU has been fixed\n* Users accepting invites should no longer cause unnecessary federated joins if there are already other local users in the room\n* The sync API state range queries have been optimised by adding missing indexes\n* It should now be possible to configure non-English languages for full-text search in `search.language`\n* The roomserver will no longer attempt to perform federated requests to the local server when trying to fetch missing events\n* The `/keys/upload` endpoint will now always return the `one_time_keys_counts`, which may help with E2EE reliability\n* The sync API will now retrieve the latest stream position before processing each stream rather than at the beginning of the request, to hopefully reduce the number of round-trips to `/sync`\n\n## Dendrite 0.10.1 (2022-09-30)\n\n### Features\n\n* The built-in NATS Server has been updated to version 2.9.2\n\n### Fixes\n\n* A regression introduced in 0.10.0 in `/sync` as a result of transaction errors has been fixed\n* Account data updates will no longer send duplicate output events\n\n## Dendrite 0.10.0 (2022-09-30)\n\n### Features\n\n* High performance full-text searching has been added to Dendrite\n  * Search must be enabled in the [`search` section of the `sync_api` config](https://github.com/matrix-org/dendrite/blob/6348486a1365c7469a498101f5035a9b6bd16d22/dendrite-sample.monolith.yaml#L279-L290) before it can be used\n  * The search index is stored on the filesystem rather than the sync API database, so a path to a suitable storage location on disk must be configured\n* Sync requests should now complete faster and use considerably less database connections as a result of better transactional isolation\n* The notifications code has been refactored to hopefully make notifications more reliable\n* A new `/_dendrite/admin/refreshDevices/{userID}` admin endpoint has been added for forcing a refresh of a remote user's device lists without having to modify the database by hand\n* A new `/_dendrite/admin/fulltext/reindex` admin endpoint has been added for rebuilding the search index (although this may take some time)\n\n### Fixes\n\n* A number of bugs in the device list updater have been fixed, which should help considerably with federated device list synchronisation and E2EE reliability\n* A state resolution bug has been fixed which should help to prevent unexpected state resets\n* The deprecated `\"origin\"` field in events will now be correctly ignored in all cases\n* Room versions 8 and 9 will now correctly evaluate `\"knock\"` join rules and membership states\n* A database index has been added to speed up finding room memberships in the sync API (contributed by [PiotrKozimor](https://github.com/PiotrKozimor))\n* The client API will now return an `M_UNRECOGNIZED` error for unknown endpoints/methods, which should help with client error handling\n* A bug has been fixed when updating push rules which could result in `database is locked` on SQLite\n\n## Dendrite 0.9.9 (2022-09-22)\n\n### Features\n\n* Dendrite will now try to keep HTTP connections open to remote federated servers for a few minutes after a request and attempt to reuse those connections where possible\n  * This should reduce the amount of time spent on TLS handshakes and often speed up requests to remote servers\n  * This new behaviour can be disabled with the `federation_api.disable_http_keepalives` option if needed\n* A number of dependencies have been updated\n\n### Fixes\n\n* A bug where the roomserver did not correctly propagate rewritten room state to downstream components (like the federation API and sync API) has been fixed, which could cause issues when performing a federated join to a previously left room\n* Event auth now correctly parses the `join_authorised_via_users_server` field in the membership event content\n* Database migrations should no longer produce unique constraint errors at Dendrite startup\n* The `origin` of device list updates should now be populated correctly\n* Send-to-device messages will no longer be dropped if we fail to publish them to specific devices\n* The roomserver query to find state after events will now always resolve state if there are multiple prev events\n* The roomserver will now return no memberships if querying history visibility for an event which has no state snapshot\n* The device list updater will now mark a device list as stale if a requesting device ID is not known\n* Transactions sent to appservices should no longer have accidental duplicated transaction IDs (contributed by [tak-hntlabs](https://github.com/tak-hntlabs))\n\n## Dendrite 0.9.8 (2022-09-12)\n\n### Important\n\n* This is a **security release** to fix a vulnerability where missing events retrieved from other servers did not have their signatures verified in all cases, affecting all versions of Dendrite before 0.9.8. Upgrading to this version is highly recommended. For more information, [see here](https://github.com/matrix-org/dendrite/security/advisories/GHSA-pfw4-xjgm-267c).\n\n### Features\n\n* The built-in NATS Server has been updated to the final 2.9.0 release version\n\n### Fixes\n\n* Dendrite will now correctly verify the signatures of events retrieved using `/get_missing_events`\n\n## Dendrite 0.9.7 (2022-09-09)\n\n### Features\n\n* Initial supporting code to enable full-text search has been merged (although not ready for use yet)\n* Newly created rooms now have higher default power levels for enabling encryption, setting server ACLs or sending tombstone events\n* Incoming signing key updates over federation are now queued in JetStream for processing, so that they cannot be dropped accidentally\n\n### Fixes\n\n* A race condition between the roomserver output events being generated, forward extremities being updated and room info being updated has been fixed\n* Appservices will no longer receive invite events which they are not interested in, which caused heavy load in some cases or excessive request sizes in others\n* A bug in state resolution v2 where events could incorrectly be classified as control events has been fixed\n* A bug in state resolution v2 where some specific events with unexpected non-empty state keys are dropped has been fixed\n* A bug in state resolution v2 when fetching auth events vs partial state has been fixed\n* Stale device lists should now be handled correctly for all user IDs, which may help with E2EE reliability\n* A number of database writer issues have been fixed in the user API and sync API, which should help to reduce `database is locked` errors with SQLite databases\n* Database migrations should now be detected more reliably to prevent unexpected errors at startup\n* A number of minor database transaction issues have been fixed, particularly for assigning NIDs in the roomserver, cleaning up device keys and cleaning up notifications\n* The database query for finding shared users in the sync API has been optimised, using significantly less CPU time as a result\n\n## Dendrite 0.9.6 (2022-09-01)\n\n### Features\n\n* The appservice API has been refactored for improved performance and stability\n  * The appservice database has been deprecated, as the roomserver output stream is now used as the data source instead\n* The `generate-config` tool has been updated to support additional scenarios, i.e. for CI configuration generation and generating both monolith and polylith skeleton config files\n\n### Fixes\n\n* The username length check has been fixed on new account creation\n* The length of the `type`, `sender`, `state_key` and `room_id` fields in events are now verified by number of codepoints rather than bytes, fixing the \"Cat Overflow\" bug\n* UTF-16 surrogate handling in the canonical JSON implementation has been fixed\n* A race condition when starting the keyserver has been fixed\n* A race condition when configuring HTTP servers and routing at startup has been fixed\n* A bug where the incorrect limit was used for lazy-loading memberships has been fixed\n* The number of push notifications will now be sent to the push gateway\n* A missing index causing slow performance on the sync API send-to-device table has been added (contributed by [PiotrKozimor](https://github.com/PiotrKozimor))\n* Event auth will now correctly check for the existence of the `\"creator\"` field in create events\n\n## Dendrite 0.9.5 (2022-08-25)\n\n### Fixes\n\n* The roomserver will now correctly unreject previously rejected events if necessary when reprocessing\n* The handling of event soft-failure has been improved on the roomserver input by no longer applying rejection rules and still calculating state before the event if possible\n* The federation `/state` and `/state_ids` endpoints should now return the correct error code when the state isn't known instead of returning a HTTP 500\n* The federation `/event` should now return outlier events correctly instead of returning a HTTP 500\n* A bug in the federation backoff allowing zero intervals has been corrected\n* The `create-account` utility will no longer error if the homeserver URL ends in a trailing slash\n* A regression in `/sync` introduced in 0.9.4 should be fixed\n\n## Dendrite 0.9.4 (2022-08-19)\n\n### Fixes\n\n* A bug in the roomserver around handling rejected outliers has been fixed\n* Backfilled events will now use the correct history visibility where possible\n* The device list updater backoff has been fixed, which should reduce the number of outbound HTTP requests and `Failed to query device keys for some users` log entries for dead servers\n* The `/sync` endpoint will no longer incorrectly return room entries for retired invites which could cause some rooms to show up in the client \"Historical\" section\n* The `/createRoom` endpoint will now correctly populate `is_direct` in invite membership events, which may help clients to classify direct messages correctly\n* The `create-account` tool will now log an error if the shared secret is not set in the Dendrite config\n* A couple of minor bugs have been fixed in the membership lazy-loading\n* Queued EDUs in the federation API are now cached properly\n\n## Dendrite 0.9.3 (2022-08-15)\n\n### Important\n\n* This is a **security release** to fix a vulnerability within event auth, affecting all versions of Dendrite before 0.9.3. Upgrading to this version is highly recommended. For more information, [see here](https://github.com/matrix-org/gomatrixserverlib/security/advisories/GHSA-grvv-h2f9-7v9c).\n\n### Fixes\n\n* Dendrite will now correctly parse the `\"events_default\"` power level value for event auth.\n\n## Dendrite 0.9.2 (2022-08-12)\n\n### Features\n\n* Dendrite now supports history visibility on the `/sync`, `/messages` and `/context` endpoints\n  * It should now be possible to view the history of a room in more cases (as opposed to limiting scrollback to the join event or defaulting to the restrictive `\"join\"` visibility rule as before)\n* The default room version for newly created rooms is now room version 9\n* New admin endpoint `/_dendrite/admin/resetPassword/{userID}` has been added, which replaces the `-reset-password` flag in `create-account`\n* The `create-account` binary now uses shared secret registration over HTTP to create new accounts, which fixes a number of problems with account data and push rules not being configured correctly for new accounts\n* The internal HTTP APIs for polylith deployments have been refactored for correctness and consistency\n* The federation API will now automatically clean up some EDUs that have failed to send within a certain period of time\n* The `/hierarchy` endpoint will now return potentially joinable rooms (contributed by [texuf](https://github.com/texuf))\n* The user directory will now show or hide users correctly\n\n### Fixes\n\n* Send-to-device messages should no longer be incorrectly duplicated in `/sync`\n* The federation sender will no longer create unnecessary destination queues as a result of a logic error\n* A bug where database migrations may not execute properly when upgrading from older versions has been fixed\n* A crash when failing to update user account data has been fixed\n* A race condition when generating notification counts has been fixed\n* A race condition when setting up NATS has been fixed (contributed by [brianathere](https://github.com/brianathere))\n* Stale cache data for membership lazy-loading is now correctly invalidated when doing a complete sync\n* Data races within user-interactive authentication have been fixed (contributed by [tak-hntlabs](https://github.com/tak-hntlabs))\n\n## Dendrite 0.9.1 (2022-08-03)\n\n### Fixes\n\n* Upgrades a dependency which caused issues building Dendrite with Go 1.19\n* The roomserver will no longer give up prematurely after failing to call `/state_ids`\n* Removes the faulty room info cache, which caused of a number of race conditions and occasional bugs (including when creating and joining rooms)\n* The media endpoint now sets the `Cache-Control` header correctly to prevent web-based clients from hitting media endpoints excessively\n* The sync API will now advance the PDU stream position correctly in all cases (contributed by [sergekh2](https://github.com/sergekh2))\n* The sync API will now delete the correct range of send-to-device messages when advancing the stream position\n* The device list `changed` key in the `/sync` response should now return the correct users\n* A data race when looking up missing state has been fixed\n* The `/send_join` API is now applying stronger validation to the received membership event\n\n## Dendrite 0.9.0 (2022-08-01)\n\n### Features\n\n* Dendrite now uses Ristretto for managing in-memory caches\n  * Should improve cache utilisation considerably over time by more intelligently selecting and managing cache entries compared to the previous LRU-based cache\n  * Defaults to a 1GB cache size if not configured otherwise\n  * The estimated cache size in memory and maximum age can now be configured with new [configuration options](https://github.com/matrix-org/dendrite/blob/e94ef84aaba30e12baf7f524c4e7a36d2fdeb189/dendrite-sample.monolith.yaml#L44-L61) to prevent unbounded cache growth\n* Added support for serving the `/.well-known/matrix/client` hint directly from Dendrite\n  * Configurable with the new [configuration option](https://github.com/matrix-org/dendrite/blob/e94ef84aaba30e12baf7f524c4e7a36d2fdeb189/dendrite-sample.monolith.yaml#L67-L69)\n* Refactored membership updater, which should eliminate some bugs caused by the membership table getting out of sync with the room state\n* The User API is now responsible for sending account data updates to other components, which may fix some races and duplicate account data events\n* Optimised database query for checking whether a remote server is allowed to request an event over federation without using anywhere near as much CPU time (PostgreSQL only)\n* Database migrations have been refactored to eliminate some problems that were present with `goose` and upgrading from older Dendrite versions\n* Media fetching will now use the `/v3` endpoints for downloading media from remote homeservers\n* HTTP 404 and HTTP 405 errors from the client-facing APIs should now be returned with CORS headers so that web-based clients do not produce incorrect access control warnings for unknown endpoints\n* Some preparation work for full history visibility support\n\n### Fixes\n\n* Fixes a crash that could occur during event redaction\n* The `/members` endpoint will no longer incorrectly return HTTP 500 as a result of some invite events\n* Send-to-device messages should now be ordered more reliably and the last position in the stream updated correctly\n* Parsing of appservice configuration files is now less strict (contributed by [Kab1r](https://github.com/Kab1r))\n* The sync API should now identify shared users correctly when waking up for E2EE key changes\n* The federation `/state` endpoint will now return a HTTP 403 when the state before an event isn't known instead of a HTTP 500\n* Presence timestamps should now be calculated with the correct precision\n* A race condition in the roomserver's room info has been fixed\n* A race condition in the sync API has been fixed\n\n## Dendrite 0.8.9 (2022-07-01)\n\n### Features\n\n* Incoming device list updates over federation are now queued in JetStream for processing so that they will no longer block incoming federation transactions and should never end up dropped, which will hopefully help E2EE reliability\n* The `/context` endpoint now returns `\"start\"` and `\"end\"` parameters to allow pagination from a context call\n* The `/messages` endpoint will no longer return `\"end\"` when there are no more messages remaining\n* Deactivated user accounts will now leave all rooms automatically\n* New admin endpoint `/_dendrite/admin/evacuateUser/{userID}` has been added for forcing a local user to leave all joined rooms\n* Dendrite will now automatically attempt to raise the file descriptor limit at startup if it is too low\n\n### Fixes\n\n* A rare crash when retrieving remote device lists has been fixed\n* Fixes a bug where events were not redacted properly over federation\n* The `/invite` endpoints will now return an error instead of silently proceeding if the user ID is obviously malformed\n\n## Dendrite 0.8.8 (2022-06-09)\n\n### Features\n\n* The performance of state resolution has been increased significantly for larger rooms\n* A number of changes have been made to rate limiting:\n  * Logged in users will now be rate-limited on a per-session basis rather than by remote IP\n  * Rate limiting no longer applies to admin or appservice users\n  * It is now possible to configure additional users that are exempt from rate limiting using the `exempt_user_ids` option in the `rate_limiting` section of the Dendrite config\n* Setting state is now idempotent via the client API state endpoints\n\n### Fixes\n\n* Room upgrades now properly propagate tombstone events to remote servers\n* Room upgrades will no longer send tombstone events if creating the upgraded room fails\n* A crash has been fixed when evaluating restricted room joins\n\n## Dendrite 0.8.7 (2022-06-01)\n\n### Features\n\n* Support added for room version 10\n\n### Fixes\n\n* A number of state handling bugs have been fixed, which previously resulted in missing state events, unexpected state deletions, reverted memberships and unexpectedly rejected/soft-failed events in some specific cases\n* Fixed destination queue performance issues as a result of missing indexes, which speeds up outbound federation considerably\n* A bug which could cause the `/register` endpoint to return HTTP 500 has been fixed\n\n## Dendrite 0.8.6 (2022-05-26)\n\n### Features\n\n* Room versions 8 and 9 are now marked as stable\n* Dendrite can now assist remote users to join restricted rooms via `/make_join` and `/send_join`\n\n### Fixes\n\n* The sync API no longer returns immediately on `/sync` requests unnecessarily if it can be avoided\n* A race condition has been fixed in the sync API when updating presence via `/sync`\n* A race condition has been fixed sending E2EE keys to remote servers over federation when joining rooms\n* The `trusted_private_chat` preset should now grant power level 100 to all participant users, which should improve the user experience of direct messages\n* Invited users are now authed correctly in restricted rooms\n* The `join_authorised_by_users_server` key is now correctly stripped in restricted rooms when updating the membership event\n* Appservices should now receive invite events correctly\n* Device list updates should no longer contain optional fields with `null` values\n* The `/deactivate` endpoint has been fixed to no longer confuse Element with incorrect completed flows\n\n## Dendrite 0.8.5 (2022-05-13)\n\n### Features\n\n* New living documentation available at <https://matrix-org.github.io/dendrite/>, including new installation instructions\n* The built-in NATS Server has been updated to version 2.8.2\n\n### Fixes\n\n* Monolith deployments will no longer panic at startup if given a config file that does not include the `internal_api` and `external_api` options\n* State resolution v2 now correctly identifies other events related to power events, which should fix some event auth issues\n* The latest events updater will no longer implicitly trust the new forward extremities when calculating the current room state, which may help to avoid some state resets\n* The one-time key count is now correctly returned in `/sync` even if the request otherwise timed out, which should reduce the chance that unnecessary one-time keys will be uploaded by clients\n* The `create-account` tool should now work properly when the database is configured using the global connection pool\n\n## Dendrite 0.8.4 (2022-05-10)\n\n### Fixes\n\n* Fixes a regression introduced in the previous version where appservices, push and phone-home statistics would not work over plain HTTP\n* Adds missing indexes to the sync API output events table, which should significantly improve `/sync` performance and reduce database CPU usage\n* Building Dendrite with the `bimg` thumbnailer should now work again (contributed by [database64128](https://github.com/database64128))\n\n## Dendrite 0.8.3 (2022-05-09)\n\n### Features\n\n* Open registration is now harder to enable, which should reduce the chance that Dendrite servers will be used to conduct spam or abuse attacks\n  * Dendrite will only enable open registration if you pass the `--really-enable-open-registration` command line flag at startup\n  * If open registration is enabled but this command line flag is not passed, Dendrite will fail to start up\n* Dendrite now supports phone-home statistic reporting\n  * These statistics include things like the number of registered and active users, some configuration options and platform/environment details, to help us to understand how Dendrite is used\n  * This is not enabled by default — it must be enabled in the `global.report_stats` section of the config file\n* Monolith installations can now be configured with a single global database connection pool (in `global.database` in the config) rather than having to configure each component separately\n  * This also means that you no longer need to balance connection counts between different components, as they will share the same larger pool\n  * Specific components can override the global database settings by specifying their own `database` block\n  * To use only the global pool, you must configure `global.database` and then remove the `database` block from all of the component sections of the config file\n* A new admin API endpoint `/_dendrite/admin/evacuateRoom/{roomID}` has been added, allowing server admins to forcefully part all local users from a given room\n* The sync notifier now only loads members for the relevant rooms, which should reduce CPU usage and load on the database\n* A number of component interfaces have been refactored for cleanliness and developer ease\n* Event auth errors in the log should now be much more useful, including the reason for the event failures\n* The forward extremity calculation in the roomserver has been simplified\n* A new index has been added to the one-time keys table in the keyserver which should speed up key count lookups\n\n### Fixes\n\n* Dendrite will no longer process events for rooms where there are no local users joined, which should help to reduce CPU and RAM usage\n* A bug has been fixed in event auth when changing the user levels in `m.room.power_levels` events\n* Usernames should no longer be duplicated when no room name is set\n* Device display names should now be correctly propagated over federation\n* A panic when uploading cross-signing signatures has been fixed\n* Presence is now correctly limited in `/sync` based on the filters\n* The presence stream position returned by `/sync` will now be correct if no presence events were returned\n* The media `/config` endpoint will no longer return a maximum upload size field if it is configured to be unlimited in the Dendrite config\n* The server notices room will no longer produce \"User is already joined to the room\" errors\n* Consumer errors will no longer flood the logs during a graceful shutdown\n* Sync API and federation API consumers will no longer unnecessarily query added state events matching the one in the output event\n* The Sync API will no longer unnecessarily track invites for remote users\n\n## Dendrite 0.8.2 (2022-04-27)\n\n### Features\n\n* Lazy-loading has been added to the `/sync` endpoint, which should speed up syncs considerably\n* Filtering has been added to the `/messages` endpoint\n* The room summary now contains \"heroes\" (up to 5 users in the room) for clients to display when no room name is set\n* The existing lazy-loading caches will now be used by `/messages` and `/context` so that member events will not be sent to clients more times than necessary\n* The account data stream now uses the provided filters\n* The built-in NATS Server has been updated to version 2.8.0\n* The `/state` and `/state_ids` endpoints will now return `M_NOT_FOUND` for rejected events\n* Repeated calls to the `/redact` endpoint will now be idempotent when a transaction ID is given\n* Dendrite should now be able to run as a Windows service under Service Control Manager\n\n### Fixes\n\n* Fictitious presence updates will no longer be created for users which have not sent us presence updates, which should speed up complete syncs considerably\n* Uploading cross-signing device signatures should now be more reliable, fixing a number of bugs with cross-signing\n* All account data should now be sent properly on a complete sync, which should eliminate problems with client settings or key backups appearing to be missing\n* Account data will now be limited correctly on incremental syncs, returning the stream position of the most recent update rather than the latest stream position\n* Account data will not be sent for parted rooms, which should reduce the number of left/forgotten rooms reappearing in clients as empty rooms\n* The TURN username hash has been fixed which should help to resolve some problems when using TURN for voice calls (contributed by [fcwoknhenuxdfiyv](https://github.com/fcwoknhenuxdfiyv))\n* Push rules can no longer be modified using the account data endpoints\n* Querying account availability should now work properly in polylith deployments\n* A number of bugs with sync filters have been fixed\n* A default sync filter will now be used if the request contains a filter ID that does not exist\n* The `pushkey_ts` field is now using seconds instead of milliseconds\n* A race condition when gracefully shutting down has been fixed, so JetStream should no longer cause the process to exit before other Dendrite components are finished shutting down\n\n## Dendrite 0.8.1 (2022-04-07)\n\n### Fixes\n\n* A bug which could result in the sync API deadlocking due to lock contention in the notifier has been fixed\n\n## Dendrite 0.8.0 (2022-04-07)\n\n### Features\n\n* Support for presence has been added\n  * Presence is not enabled by default\n  * The `global.presence.enable_inbound` and `global.presence.enable_outbound` configuration options allow configuring inbound and outbound presence separately\n* Support for room upgrades via the `/room/{roomID}/upgrade` endpoint has been added (contributed by [DavidSpenler](https://github.com/DavidSpenler), [alexkursell](https://github.com/alexkursell))\n* Support for ignoring users has been added\n* Joined and invite user counts are now sent in the `/sync` room summaries\n* Queued federation and stale device list updates will now be staggered at startup over an up-to 2 minute warm-up period, rather than happening all at once\n* Memory pressure created by the sync notifier has been reduced\n* The EDU server component has now been removed, with the work being moved to more relevant components\n\n### Fixes\n\n* It is now possible to set the `power_level_content_override` when creating a room to include power levels over 100\n* `/send_join` and `/state` responses will now not unmarshal the JSON twice\n* The stream event consumer for push notifications will no longer request membership events that are irrelevant\n* Appservices will no longer incorrectly receive state events twice\n\n## Dendrite 0.7.0 (2022-03-25)\n\n### Features\n\n* The roomserver input API will now queue all events into NATS, which provides better crash resilience\n* The roomserver input API now configures per-room consumers, which should use less memory\n* Canonical aliases can now be added and removed\n* MSC2946 Spaces Summary now works correctly, both locally and over federation\n* Healthcheck endpoints are now available at:\n  * `/_dendrite/monitor/up`, which will return 200 when Dendrite is ready to accept requests\n  * `/_dendrite/monitor/health`, which will return 200 if healthy and 503 if degraded for some reason\n* The `X-Matrix` federation authorisation header now includes a `destination` field, as per MSC3383\n* The `/sync` endpoint now uses less memory by only ranging state for rooms that the user has participated in\n* The `/messages` endpoint now accepts stream positions in both the `from` and `to` parameters\n* Dendrite will now log a warning at startup if the file descriptor limit is set too low\n* The federation client will now attempt to use HTTP/2 if available\n* The federation client will now attempt to resume TLS sessions if possible, to reduce handshake overheads\n* The built-in NATS Server has been updated to version 2.7.4\n* NATS streams that don't match the desired configuration will now be recreated automatically\n* When performing a graceful shutdown, Dendrite will now wait for NATS Server to shutdown completely, which should avoid some corruption of data on-disk\n* The `create-account` tool has seen a number of improvements, will now ask for passwords automatically\n\n### Fixes\n\n* The `/sync` endpoint will no longer lose state events when truncating the timeline for history visibility\n* The `/context` endpoint now works correctly with `lazy_load_members`\n* The `/directory/list/room/{roomID}` endpoint now correctly reports whether a room is published in the server room directory or not\n* Some bugs around appservice username validation have been fixed\n* Roomserver output messages are no longer unnecessarily inflated by state events, which should reduce the number of NATS message size errors\n* Stream IDs for device list updates are now always 64-bit, which should fix some problems when running Dendrite on a 32-bit system\n* Purging room state in the sync API has been fixed after a faulty database query was corrected\n* The federation client will now release host records for remote destinations after 5 minutes instead of holding them in memory forever\n* Remote media requests will now correctly return an error if the file cannot be found or downloaded\n* A panic in the media API that could happen when the remote file doesn't exist has been fixed\n* Various bugs around membership state and invites have been fixed\n* The memberships table will now be correctly updated when rejecting a federated invite\n* The client API and appservice API will now access the user database using the user API rather than accessing the database directly\n\n## Dendrite 0.6.5 (2022-03-04)\n\n### Features\n\n* Early support for push notifications has been added, with support for push rules, pushers, HTTP push gateways and the `/notifications` endpoint (contributions by [danpe](https://github.com/danpe), [PiotrKozimor](https://github.com/PiotrKozimor) and [tommie](https://github.com/tommie))\n* Spaces Summary (MSC2946) is now correctly supported (when `msc2946` is enabled in the config)\n* All media API endpoints are now available under the `/v3` namespace\n* Profile updates (display name and avatar) are now sent asynchronously so they shouldn't block the client for a very long time\n* State resolution v2 has been optimised further to considerably reduce the number of memory allocations\n* State resolution v2 will no longer duplicate events unnecessarily when calculating the auth difference\n* The `create-account` tool now has a `-reset-password` option for resetting the passwords of existing accounts\n* The `/sync` endpoint now calculates device list changes much more quickly with less RAM used\n* The `/messages` endpoint now lazy-loads members correctly\n\n### Fixes\n\n* Read receipts now work correctly by correcting bugs in the stream positions and receipt coalescing\n* Topological sorting of state and join responses has been corrected, which should help to reduce the number of auth problems when joining new federated rooms\n* Media thumbnails should now work properly after having unnecessarily strict rate limiting removed\n* The roomserver no longer holds transactions for as long when processing input events\n* Uploading device keys and cross-signing keys will now correctly no-op if there were no changes\n* Parameters are now remembered correctly during registration\n* Devices can now only be deleted within the appropriate UIA flow\n* The `/context` endpoint now returns 404 instead of 500 if the event was not found\n* SQLite mode will no longer leak memory as a result of not closing prepared statements\n\n## Dendrite 0.6.4 (2022-02-21)\n\n### Features\n\n* All Client-Server API endpoints are now available under the `/v3` namespace\n* The `/whoami` response format now matches the latest Matrix spec version\n* Support added for the `/context` endpoint, which should help clients to render quote-replies correctly\n* Accounts now have an optional account type field, allowing admin accounts to be created\n* Server notices are now supported\n* Refactored the user API storage to deduplicate a significant amount of code, as well as merging both user API databases into a single database\n  * The account database is now used for all user API storage and the device database is now obsolete\n  * For some installations that have separate account and device databases, this may result in access tokens being revoked and client sessions being logged out — users may need to log in again\n  * The above can be avoided by moving the `device_devices` table into the account database manually\n* Guest registration can now be separately disabled with the new `client_api.guests_disabled` configuration option\n* Outbound connections now obey proxy settings from the environment, deprecating the `federation_api.proxy_outbound` configuration options\n\n### Fixes\n\n* The roomserver input API will now strictly consume only one database transaction per room, which should prevent situations where the roomserver can deadlock waiting for database connections to become available\n* Room joins will now fall back to federation if the local room state is insufficient to create a membership event\n* Create events are now correctly filtered from federation `/send` transactions\n* Excessive logging when federation is disabled should now be fixed\n* Dendrite will no longer panic if trying to retire an invite event that has not been seen yet\n* The device list updater will now wait for longer after a connection issue, rather than flooding the logs with errors\n* The device list updater will no longer produce unnecessary output events for federated key updates with no changes, which should help to reduce CPU usage\n* Local device name changes will now generate key change events correctly\n* The sync API will now try to share device list update notifications even if all state key NIDs cannot be fetched\n* An off-by-one error in the sync stream token handling which could result in a crash has been fixed\n* State events will no longer be re-sent unnecessary by the roomserver to other components if they have already been sent, which should help to reduce the NATS message sizes on the roomserver output topic in some cases\n* The roomserver input API now uses the process context and should handle graceful shutdowns better\n* Guest registration is now correctly disabled when the `client_api.registration_disabled` configuration option is set\n* One-time encryption keys are now cleaned up correctly when a device is logged out or removed\n* Invalid state snapshots in the state storage refactoring migration are now reset rather than causing a panic at startup\n\n## Dendrite 0.6.3 (2022-02-10)\n\n### Features\n\n* Initial support for `m.login.token`\n* A number of regressions from earlier v0.6.x versions should now be corrected\n\n### Fixes\n\n* Missing state is now correctly retrieved in cases where a gap in the timeline was closed but some of those events were missing state snapshots, which should help to unstick slow or broken rooms\n* Fixed a transaction issue where inserting events into the database could deadlock, which should stop rooms from getting stuck\n* Fixed a problem where rejected events could result in rolled back database transactions\n* Avoided a potential race condition on fetching latest events by using the room updater instead\n* Processing events from `/get_missing_events` will no longer result in potential recursion\n* Federation events are now correctly generated for updated self-signing keys and signed devices\n* Rejected events can now be un-rejected if they are reprocessed and all of the correct conditions are met\n* Fetching missing auth events will no longer error as long as all needed events for auth were satisfied\n* Users can now correctly forget rooms if they were not a member of the room\n\n## Dendrite 0.6.2 (2022-02-04)\n\n### Fixes\n\n* Resolves an issue where the key change consumer in the keyserver could consume extreme amounts of CPU\n\n## Dendrite 0.6.1 (2022-02-04)\n\n### Features\n\n* Roomserver inputs now take place with full transactional isolation in PostgreSQL deployments\n* Pull consumers are now used instead of push consumers when retrieving messages from NATS to better guarantee ordering and to reduce redelivery of duplicate messages\n* Further logging tweaks, particularly when joining rooms\n* Improved calculation of servers in the room, when checking for missing auth/prev events or state\n* Dendrite will now skip dead servers more quickly when federating by reducing the TCP dial timeout\n* The key change consumers have now been converted to use native NATS code rather than a wrapper\n* Go 1.16 is now the minimum supported version for Dendrite\n\n### Fixes\n\n* Local clients should now be notified correctly of invites\n* The roomserver input API now has more time to process events, particularly when fetching missing events or state, which should fix a number of errors from expired contexts\n* Fixed a panic that could happen due to a closed channel in the roomserver input API\n* Logging in with uppercase usernames from old installations is now supported again (contributed by [hoernschen](https://github.com/hoernschen))\n* Federated room joins now have more time to complete and should not fail due to expired contexts\n* Events that were sent to the roomserver along with a complete state snapshot are now persisted with the correct state, even if they were rejected or soft-failed\n\n## Dendrite 0.6.0 (2022-01-28)\n\n### Features\n\n* NATS JetStream is now used instead of Kafka and Naffka\n  * For monolith deployments, a built-in NATS Server is embedded into Dendrite or a standalone NATS Server deployment can be optionally used instead\n  * For polylith deployments, a standalone NATS Server deployment is required\n  * Requires the version 2 configuration file — please see the new `dendrite-config.yaml` sample config file\n  * Kafka and Naffka are no longer supported as of this release\n* The roomserver is now responsible for fetching missing events and state instead of the federation API\n  * Removes a number of race conditions between the federation API and roomserver, which reduces duplicate work and overall lowers CPU usage\n* The roomserver input API is now strictly ordered with support for asynchronous requests, smoothing out incoming federation significantly\n* Consolidated the federation API, federation sender and signing key server into a single component\n  * If multiple databases are used, tables for the federation sender and signing key server should be merged into the federation API database (table names have not changed)\n* Device list synchronisation is now database-backed rather than using the now-removed Kafka logs\n\n### Fixes\n\n* The code for fetching missing events and state now correctly identifies when gaps in history have been closed, so federation traffic will consume less CPU and memory than before\n* The stream position is now correctly advanced when typing notifications time out in the sync API\n* Event NIDs are now correctly returned when persisting events in the roomserver in SQLite mode\n  * The built-in SQLite was updated to version 3.37.0 as a result\n* The `/event_auth` endpoint now strictly returns the auth chain for the requested event without loading the room state, which should reduce spikes in memory usage\n* Filters are now correctly sent when using federated public room directories (contributed by [S7evinK](https://github.com/S7evinK))\n* Login usernames are now squashed to lower-case (contributed by [BernardZhao](https://github.com/BernardZhao))\n* The logs should no longer be flooded with `Failed to get server ACLs for room` warnings at startup\n* Backfilling will now attempt federation as a last resort when trying to retrieve missing events from the database fails\n\n## Dendrite 0.5.1 (2021-11-16)\n\n### Features\n\n* Experimental (although incomplete) support for joining version 8 and 9 rooms\n* State resolution v2 optimisations (close to 20% speed improvement thanks to reduced allocations)\n* Optimisations made to the federation `/send` endpoint which avoids duplicate work, reduces CPU usage and smooths out incoming federation\n* The sync API now consumes less CPU when generating sync responses (optimised `SelectStateInRange`)\n* Support for serving the `.well-known/matrix/server` endpoint from within Dendrite itself (contributed by [twentybit](https://github.com/twentybit))\n* Support for thumbnailing WebP media (contributed by [hacktivista](https://github.com/hacktivista))\n\n### Fixes\n\n* The `/publicRooms` handler now handles `POST` requests in addition to `GET` correctly\n* Only valid canonical aliases will be returned in the `/publicRooms` response\n* The media API now correctly handles `max_file_size_bytes` being configured to `0` (contributed by [database64128](https://github.com/database64128))\n* Unverifiable auth events in `/send_join` responses no longer result in a panic\n* Build issues on Windows are now resolved (contributed by [S7evinK](https://github.com/S7evinK))\n* The default power levels in a room now set the invite level to 50, as per the spec\n* A panic has been fixed when malformed messages are received in the key change consumers\n\n## Dendrite 0.5.0 (2021-08-24)\n\n### Features\n\n* Support for serverside key backups has been added, allowing your E2EE keys to be backed up and to be restored after logging out or when logging in from a new device\n* Experimental support for cross-signing has been added, allowing verifying your own device keys and verifying other user's public keys\n* Dendrite can now send logs to a TCP syslog server by using the `syslog` logger type (contributed by [sambhavsaggi](https://github.com/sambhavsaggi))\n* Go 1.15 is now the minimum supported version for Dendrite\n\n### Fixes\n\n* Device keys are now cleaned up from the keyserver when the user API removes a device session\n* The `M_ROOM_IN_USE` error code is now returned when a room alias is already taken (contributed by [nivekuil](https://github.com/nivekuil))\n* A bug in the state storage migration has been fixed where room create events had incorrect state snapshots\n* A bug when deactivating accounts caused by only reading the deprecated username field has been fixed\n\n## Dendrite 0.4.1 (2021-07-26)\n\n### Features\n\n* Support for room version 7 has been added\n* Key notary support is now more complete, allowing Dendrite to be used as a notary server for looking up signing keys\n* State resolution v2 performance has been optimised further by caching the create event, power levels and join rules in memory instead of parsing them repeatedly\n* The media API now handles cases where the maximum file size is configured to be less than 0 for unlimited size\n* The `initial_state` in a `/createRoom` request is now respected when creating a room\n* Code paths for checking if servers are joined to rooms have been optimised significantly\n\n### Fixes\n\n* A bug resulting in `cannot xref null state block with snapshot` during the new state storage migration has been fixed\n* Invites are now retired correctly when rejecting an invite from a remote server which is no longer reachable\n* The DNS cache `cache_lifetime` option is now handled correctly (contributed by [S7evinK](https://github.com/S7evinK))\n* Invalid events in a room join response are now dropped correctly, rather than failing the entire join\n* The `prev_state` of an event will no longer be populated incorrectly to the state of the current event\n* Receiving an invite to an unsupported room version will now correctly return the `M_UNSUPPORTED_ROOM_VERSION` error code instead of `M_BAD_JSON` (contributed by [meenal06](https://github.com/meenal06))\n\n## Dendrite 0.4.0 (2021-07-12)\n\n### Features\n\n* All-new state storage in the roomserver, which dramatically reduces disk space utilisation\n  * State snapshots and blocks are now aggressively deduplicated and reused wherever possible, with state blocks being reduced by up to 15x and snapshot references being reduced up to 2x\n  * Dendrite will upgrade to the new state storage automatically on the first run after upgrade, although this may take some time depending on the size of the state storage\n* Appservice support has been improved significantly, with many bridges now working correctly with Dendrite\n  * Events are now correctly sent to appservices based on room memberships\n  * Aliases and namespaces are now handled correctly, calling the appservice to query for aliases as needed\n  * Appservice user registrations are no longer being subject to incorrect validation checks\n* Shared secret registration has now been implemented correctly\n* The roomserver input API implements a new queuing system to reduce backpressure across rooms\n* Checking if the local server is in a room has been optimised substantially, reducing CPU usage\n* State resolution v2 has been optimised further by improving the power level checks, reducing CPU usage\n* The federation API `/send` endpoint now deduplicates missing auth and prev events more aggressively to reduce memory usage\n* The federation API `/send` endpoint now uses workers to reduce backpressure across rooms\n* The bcrypt cost for password storage is now configurable with the `user_api.bcrypt_cost` option\n* The federation API will now use significantly less memory when calling `/get_missing_events`\n* MSC2946 Spaces endpoints have been updated to stable endpoint naming\n* The media API can now be configured without a maximum file size\n* A new `dendrite-upgrade-test` test has been added for verifying database schema upgrades across versions\n* Added Prometheus metrics for roomserver backpressure, excessive device list updates and federation API event processing summaries\n* Sentry support has been added for error reporting\n\n### Fixes\n\n* Removed the legacy `/v1` register endpoint. Dendrite only implements `/r0` of the CS API, and the legacy `/v1` endpoint had implementation errors which made it possible to bypass shared secret registration (thanks to Jakob Varmose Bentzen for reporting this)\n* Attempting to register an account that already exists now returns a sensible error code rather than a HTTP 500\n* Dendrite will no longer attempt to `/make_join` with itself if listed in the request `server_names`\n* `/sync` will no longer return immediately if there is nothing to sync, which happened particularly with new accounts, causing high CPU usage\n* Malicious media uploads can no longer exhaust all available memory (contributed by [S7evinK](https://github.com/S7evinK))\n* Selecting one-time keys from the database has been optimised (contributed by [S7evinK](https://github.com/S7evinK))\n* The return code when trying to fetch missing account data has been fixed (contributed by [adamgreig](https://github.com/adamgreig))\n* Dendrite will no longer attempt to use `/make_leave` over federation when rejecting a local invite\n* A panic has been fixed in `QueryMembershipsForRoom`\n* A panic on duplicate membership events has been fixed in the federation sender\n* A panic has been fixed in in `IsInterestedInRoomID` (contributed by [bodqhrohro](https://github.com/bodqhrohro))\n* A panic in the roomserver has been fixed when handling empty state sets\n* A panic in the federation API has been fixed when handling cached events\n\n## Dendrite 0.3.11 (2021-03-02)\n\n### Fixes\n\n* **SECURITY:** A bug in SQLite mode which could cause the registration flow to complete unexpectedly for existing accounts has been fixed (PostgreSQL deployments are not affected)\n* A panic in the federation sender has been fixed when shutting down destination queues\n* The `/keys/upload` endpoint now correctly returns the number of one-time keys in response to an empty upload request\n\n## Dendrite 0.3.10 (2021-02-17)\n\n### Features\n\n* In-memory caches will now gradually evict old entries, reducing idle memory usage\n* Federation sender queues will now be fully unloaded when idle, reducing idle memory usage\n* The `power_level_content_override` option is now supported in `/createRoom`\n* The `/send` endpoint will now attempt more servers in the room when trying to fetch missing events or state\n\n### Fixes\n\n* A panic in the membership updater has been fixed\n* Events in the sync API that weren't excluded from sync can no longer be incorrectly excluded from sync by backfill\n* Retrieving remote media now correcly respects the locally configured maximum file size, even when the `Content-Length` header is unavailable\n* The `/send` endpoint will no longer hit the database more than once to find servers in the room\n\n## Dendrite 0.3.9 (2021-02-04)\n\n### Features\n\n* Performance of initial/complete syncs has been improved dramatically\n* State events that can't be authed are now dropped when joining a room rather than unexpectedly causing the room join to fail\n* State events that already appear in the timeline will no longer be requested from the sync API database more than once, which may reduce memory usage in some cases\n\n### Fixes\n\n* A crash at startup due to a conflict in the sync API account data has been fixed\n* A crash at startup due to mismatched event IDs in the federation sender has been fixed\n* A redundant check which may cause the roomserver memberships table to get out of sync has been removed\n\n## Dendrite 0.3.8 (2021-01-28)\n\n### Fixes\n\n* A well-known lookup regression in version 0.3.7 has been fixed\n\n## Dendrite 0.3.7 (2021-01-26)\n\n### Features\n\n* Sync filtering support (for event types, senders and limits)\n* In-process DNS caching support for deployments where a local DNS caching resolver is not available (disabled by default)\n* Experimental support for MSC2444 (Peeking over Federation) has been merged\n* Experimental federation support for MSC2946 (Spaces Summary) has been merged\n\n### Fixes\n\n* Dendrite will no longer load a given event more than once for state resolution, which may help to reduce memory usage and database I/O slightly in some cases\n* Large well-known responses will no longer use significant amounts of memory\n\n## Dendrite 0.3.6 (2021-01-18)\n\n### Features\n\n* Experimental support for MSC2946 (Spaces Summary) has been merged\n* Send-to-device messages have been refactored and now take advantage of having their own stream position, making delivery more reliable\n* Unstable features and MSCs are now listed in `/versions` (contributed by [sumitks866](https://github.com/sumitks866))\n* Well-known and DNS SRV record results for federated servers are now cached properly, improving outbound federation performance and reducing traffic\n\n### Fixes\n\n* Updating forward extremities will no longer result in so many unnecessary state snapshots, reducing on-going disk usage in the roomserver database\n* Pagination tokens for `/messages` have been fixed, which should improve the reliability of scrollback/pagination\n* Dendrite now avoids returning `null`s in fields of the `/sync` response, and omitting some fields altogether when not needed, which should fix sync issues with Element Android\n* Requests for user device lists now time out quicker, which prevents federated `/send` requests from also timing out in many cases\n* Empty push rules are no longer sent over and over again in `/sync`\n* An integer overflow in the device list updater which could result in panics on 32-bit platforms has been fixed (contributed by [Lesterpig](https://github.com/Lesterpig))\n* Event IDs are now logged properly in federation sender and sync API consumer errors\n\n## Dendrite 0.3.5 (2021-01-11)\n\n### Features\n\n* All `/sync` streams are now logically separate after a refactoring exercise\n\n### Fixes\n\n* Event references are now deeply checked properly when calculating forward extremities, reducing the amount of forward extremities in most cases, which improves RAM utilisation and reduces the work done by state resolution\n* Sync no longer sends incorrect `next_batch` tokens with old stream positions, reducing flashbacks of old messages in clients\n* The federation `/send` endpoint no longer uses the request context, which could result in some events failing to be persisted if the sending server gave up the HTTP connection\n* Appservices can now auth as users in their namespaces properly\n\n## Dendrite 0.3.4 (2020-12-18)\n\n### Features\n\n* The stream tokens for `/sync` have been refactored, giving PDUs, typing notifications, read receipts, invites and send-to-device messages their own respective stream positions, greatly improving the correctness of sync\n* A new roominfo cache has been added, which results in less database hits in the roomserver\n* Prometheus metrics have been added for sync requests, destination queues and client API event send perceived latency\n\n### Fixes\n\n* Event IDs are no longer recalculated so often in `/sync`, which reduces CPU usage\n* Sync requests are now woken up correctly for our own device list updates\n* The device list stream position is no longer lost, so unnecessary device updates no longer appear in every other sync\n* A crash on concurrent map read/writes has been fixed in the stream token code\n* The roomserver input API no longer starts more worker goroutines than needed\n* The roomserver no longer uses the request context for queued tasks which could lead to send requests failing to be processed\n* A new index has been added to the sync API current state table, which improves lookup performance significantly\n* The client API `/joined_rooms` endpoint no longer incorrectly returns `null` if there are 0 rooms joined\n* The roomserver will now query appservices when looking up a local room alias that isn't known\n* The check on registration for appservice-exclusive namespaces has been fixed\n\n## Dendrite 0.3.3 (2020-12-09)\n\n### Features\n\n* Federation sender should now use considerably less CPU cycles and RAM when sending events into large rooms\n* The roomserver now uses considerably less CPU cycles by not calculating event IDs so often\n* Experimental support for [MSC2836](https://github.com/matrix-org/matrix-doc/pull/2836) (threading) has been merged\n* Dendrite will no longer hold federation HTTP connections open unnecessarily, which should help to reduce ambient CPU/RAM usage and hold fewer long-term file descriptors\n\n### Fixes\n\n* A bug in the latest event updater has been fixed, which should prevent the roomserver from losing forward extremities in some rare cases\n* A panic has been fixed when federation is disabled (contributed by [kraem](https://github.com/kraem))\n* The response format of the `/joined_members` endpoint has been fixed (contributed by [alexkursell](https://github.com/alexkursell))\n\n## Dendrite 0.3.2 (2020-12-02)\n\n### Features\n\n* Federation can now be disabled with the `global.disable_federation` configuration option\n\n### Fixes\n\n* The `\"since\"` parameter is now checked more thoroughly in the sync API, which led to a bug that could cause forgotten rooms to reappear (contributed by [kaniini](https://github.com/kaniini))\n* The polylith now proxies signing key requests through the federation sender correctly\n* The code for checking if remote servers are allowed to see events now no longer wastes CPU time retrieving irrelevant state events\n\n## Dendrite 0.3.1 (2020-11-20)\n\n### Features\n\n* Memory optimisation by reference passing, significantly reducing the number of allocations and duplication in memory\n* A hook API has been added for experimental MSCs, with an early implementation of MSC2836\n* The last seen timestamp and IP address are now updated automatically when calling `/sync`\n* The last seen timestamp and IP address are now reported in `/_matrix/client/r0/devices` (contributed by [alexkursell](https://github.com/alexkursell))\n* An optional configuration option `sync_api.real_ip_header` has been added for specifying which HTTP header contains the real client IP address (for if Dendrite is running behind a reverse HTTP proxy)\n* Partial implementation of `/_matrix/client/r0/admin/whois` (contributed by [DavidSpenler](https://github.com/DavidSpenler))\n\n### Fixes\n\n* A concurrency bug has been fixed in the federation API that could cause Dendrite to crash\n* The error when registering a username with invalid characters has been corrected (contributed by [bodqhrohro](https://github.com/bodqhrohro))\n\n## Dendrite 0.3.0 (2020-11-16)\n\n### Features\n\n* Read receipts (both inbound and outbound) are now supported (contributed by [S7evinK](https://github.com/S7evinK))\n* Forgetting rooms is now supported (contributed by [S7evinK](https://github.com/S7evinK))\n* The `-version` command line flag has been added (contributed by [S7evinK](https://github.com/S7evinK))\n\n### Fixes\n\n* User accounts that contain the `=` character can now be registered\n* Backfilling should now work properly on rooms with world-readable history visibility (contributed by [MayeulC](https://github.com/MayeulC))\n* The `gjson` dependency has been updated for correct JSON integer ranges\n* Some more client event fields have been marked as omit-when-empty (contributed by [S7evinK](https://github.com/S7evinK))\n* The `build.sh` script has been updated to work properly on all POSIX platforms (contributed by [felix](https://github.com/felix))\n\n## Dendrite 0.2.1 (2020-10-22)\n\n### Fixes\n\n* Forward extremities are now calculated using only references from other extremities, rather than including outliers, which should fix cases where state can become corrupted ([#1556](https://github.com/matrix-org/dendrite/pull/1556))\n* Old state events will no longer be processed by the sync API as new, which should fix some cases where clients incorrectly believe they have joined or left rooms ([#1548](https://github.com/matrix-org/dendrite/pull/1548))\n* More SQLite database locking issues have been resolved in the latest events updater ([#1554](https://github.com/matrix-org/dendrite/pull/1554))\n* Internal HTTP API calls are now made using H2C (HTTP/2) in polylith mode, mitigating some potential head-of-line blocking issues ([#1541](https://github.com/matrix-org/dendrite/pull/1541))\n* Roomserver output events no longer incorrectly flag state rewrites ([#1557](https://github.com/matrix-org/dendrite/pull/1557))\n* Notification levels are now parsed correctly in power level events ([gomatrixserverlib#228](https://github.com/matrix-org/gomatrixserverlib/pull/228), contributed by [Pestdoktor](https://github.com/Pestdoktor))\n* Invalid UTF-8 is now correctly rejected when making federation requests ([gomatrixserverlib#229](https://github.com/matrix-org/gomatrixserverlib/pull/229), contributed by [Pestdoktor](https://github.com/Pestdoktor))\n\n## Dendrite 0.2.0 (2020-10-20)\n\n### Important\n\n* This release makes breaking changes for polylith deployments, since they now use the multi-personality binary rather than separate binary files\n  * Users of polylith deployments should revise their setups to use the new binary - see the Features section below\n* This release also makes breaking changes for Docker deployments, as are now publishing images to Docker Hub in separate repositories for monolith and polylith\n  * New repositories are as follows: [matrixdotorg/dendrite-monolith](https://hub.docker.com/repository/docker/matrixdotorg/dendrite-monolith) and [matrixdotorg/dendrite-polylith](https://hub.docker.com/repository/docker/matrixdotorg/dendrite-polylith)\n  * The new `latest` tag will be updated with the latest release, and new versioned tags, e.g. `v0.2.0`, will preserve specific release versions\n  * [Sample Compose configs](https://github.com/matrix-org/dendrite/tree/master/build/docker) have been updated - if you are running a Docker deployment, please review the changes\n  * Images for the client API proxy and federation API proxy are no longer provided as they are unsupported - please use [nginx](docs/nginx/) (or another reverse proxy) instead\n\n### Features\n\n* Dendrite polylith deployments now use a special multi-personality binary, rather than separate binaries\n  * This is cleaner, builds faster and simplifies deployment\n  * The first command line argument states the component to run, e.g. `./dendrite-polylith-multi roomserver`\n* Database migrations are now run at startup\n* Invalid UTF-8 in requests is now rejected (contributed by [Pestdoktor](https://github.com/Pestdoktor))\n* Fully read markers are now implemented in the client API (contributed by [Lesterpig](https://github.com/Lesterpig))\n* Missing auth events are now retrieved from other servers in the room, rather than just the event origin\n* `m.room.create` events are now validated properly when processing a `/send_join` response\n* The roomserver now implements `KindOld` for handling historic events without them becoming forward extremity candidates, i.e. for backfilled or missing events\n\n### Fixes\n\n* State resolution v2 performance has been improved dramatically when dealing with large state sets\n* The roomserver no longer processes outlier events if they are already known\n* A SQLite locking issue in the previous events updater has been fixed\n* The client API `/state` endpoint now correctly returns state after the leave event, if the user has left the room\n* The client API `/createRoom` endpoint now sends cumulative state to the roomserver for the initial room events\n* The federation API `/send` endpoint now correctly requests the entire room state from the roomserver when needed\n* Some internal HTTP API paths have been fixed in the user API (contributed by [S7evinK](https://github.com/S7evinK))\n* A race condition in the rate limiting code resulting in concurrent map writes has been fixed\n* Each component now correctly starts a consumer/producer connection in monolith mode (when using Kafka)\n* State resolution is no longer run for single trusted state snapshots that have been verified before\n* A crash when rolling back the transaction in the latest events updater has been fixed\n* Typing events are now ignored when the sender domain does not match the origin server\n* Duplicate redaction entries no longer result in database errors\n* Recursion has been removed from the code path for retrieving missing events\n* `QueryMissingAuthPrevEvents` now returns events that have no associated state as if they are missing\n* Signing key fetchers no longer ignore keys for the local domain, if retrieving a key that is not known in the local config\n* Federation timeouts have been adjusted so we don't give up on remote requests so quickly\n* `create-account` no longer relies on the device database (contributed by [ThatNerdyPikachu](https://github.com/ThatNerdyPikachu))\n\n### Known issues\n\n* Old events can incorrectly appear in `/sync` as if they are new when retrieving missing events from federated servers, causing them to appear at the bottom of the timeline in clients\n\n## Dendrite 0.1.0 (2020-10-08)\n\nFirst versioned release of Dendrite.\n\n## Client-Server API Features\n\n### Account registration and management\n\n* Registration: By password only.\n* Login: By password only. No fallback.\n* Logout: Yes.\n* Change password: Yes.\n* Link email/msisdn to account: No.\n* Deactivate account: Yes.\n* Check if username is available: Yes.\n* Account data: Yes.\n* OpenID: No.\n\n### Rooms\n\n* Room creation: Yes, including presets.\n* Joining rooms: Yes, including by alias or `?server_name=`.\n* Event sending: Yes, including transaction IDs.\n* Aliases: Yes.\n* Published room directory: Yes.\n* Kicking users: Yes.\n* Banning users: Yes.\n* Inviting users: Yes, but not third-party invites.\n* Forgetting rooms: No.\n* Room versions: All (v1 * v6)\n* Tagging: Yes.\n\n### User management\n\n* User directory: Basic support.\n* Ignoring users: No.\n* Groups/Communities: No.\n\n### Device management\n\n* Creating devices: Yes.\n* Deleting devices: Yes.\n* Send-to-device messaging: Yes.\n\n### Sync\n\n* Filters: Timeline limit only. Rest unimplemented.\n* Deprecated `/events` and `/initialSync`: No.\n\n### Room events\n\n* Typing: Yes.\n* Receipts: No.\n* Read Markers: No.\n* Presence: No.\n* Content repository (attachments): Yes.\n* History visibility: No, defaults to `joined`.\n* Push notifications: No.\n* Event context: No.\n* Reporting content: No.\n\n### End-to-End Encryption\n\n* Uploading device keys: Yes.\n* Downloading device keys: Yes.\n* Claiming one-time keys: Yes.\n* Querying key changes: Yes.\n* Cross-Signing: No.\n\n### Misc\n\n* Server-side search: No.\n* Guest access: Partial.\n* Room previews: No, partial support for Peeking via MSC2753.\n* Third-Party networks: No.\n* Server notices: No.\n* Policy lists: No.\n\n## Federation Features\n\n* Querying keys (incl. notary): Yes.\n* Server ACLs: Yes.\n* Sending transactions: Yes.\n* Joining rooms: Yes.\n* Inviting to rooms: Yes, but not third-party invites.\n* Leaving rooms: Yes.\n* Content repository: Yes.\n* Backfilling / get_missing_events: Yes.\n* Retrieving state of the room (`/state` and `/state_ids`): Yes.\n* Public rooms: Yes.\n* Querying profile data: Yes.\n* Device management: Yes.\n* Send-to-Device messaging: Yes.\n* Querying/Claiming E2E Keys: Yes.\n* Typing: Yes.\n* Presence: No.\n* Receipts: No.\n* OpenID: No.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.923828125,
          "content": "# Contributing to Dendrite\n\nThank you for taking the time to contribute to Matrix!\n\nThis is the repository for Dendrite, a second-generation Matrix homeserver written in Go.\n\n## Sign off\n\nWe ask that everybody who contributes to this project signs off their contributions, as explained below.\n\nWe follow a simple 'inbound=outbound' model for contributions: the act of submitting an 'inbound' contribution means that the contributor agrees to license their contribution under the same terms as the project's overall 'outbound' license - in our case, this is Apache Software License v2 (see [LICENSE](./LICENSE)).\n\nIn order to have a concrete record that your contribution is intentional and you agree to license it under the same terms as the project's license, we've adopted the same lightweight approach used by the [Linux Kernel](https://www.kernel.org/doc/html/latest/process/submitting-patches.html), [Docker](https://github.com/docker/docker/blob/master/CONTRIBUTING.md), and many other projects: the [Developer Certificate of Origin](https://developercertificate.org/) (DCO). This is a simple declaration that you wrote the contribution or otherwise have the right to contribute it to Matrix:\n\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n660 York Street, Suite 102,\nSan Francisco, CA 94110 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\nIf you agree to this for your contribution, then all that's needed is to include the line in your commit or pull request comment:\n\n```\nSigned-off-by: Your Name <your@email.example.org>\n```\n\nGit allows you to add this signoff automatically when using the `-s` flag to `git commit`, which uses the name and email set in your `user.name` and `user.email` git configs."
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.546875,
          "content": "#syntax=docker/dockerfile:1.2\n\n#\n# base installs required dependencies and runs go mod download to cache dependencies\n#\nFROM --platform=${BUILDPLATFORM} docker.io/golang:1.22-alpine AS base\nRUN apk --update --no-cache add bash build-base curl git\n\n#\n# build creates all needed binaries\n#\nFROM --platform=${BUILDPLATFORM} base AS build\nWORKDIR /src\nARG TARGETOS\nARG TARGETARCH\nRUN --mount=target=. \\\n    --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    USERARCH=`go env GOARCH` \\\n    GOARCH=\"$TARGETARCH\" \\\n    GOOS=\"linux\" \\\n    CGO_ENABLED=$([ \"$TARGETARCH\" = \"$USERARCH\" ] && echo \"1\" || echo \"0\") \\\n    go build -v -trimpath -o /out/ ./cmd/...\n\n\n#\n# Builds the Dendrite image containing all required binaries\n#\nFROM alpine:latest\nRUN apk --update --no-cache add curl\nLABEL org.opencontainers.image.title=\"Dendrite\"\nLABEL org.opencontainers.image.description=\"Next-generation Matrix homeserver written in Go\"\nLABEL org.opencontainers.image.source=\"https://github.com/matrix-org/dendrite\"\nLABEL org.opencontainers.image.licenses=\"Apache-2.0\"\nLABEL org.opencontainers.image.documentation=\"https://matrix-org.github.io/dendrite/\"\nLABEL org.opencontainers.image.vendor=\"The Matrix.org Foundation C.I.C.\"\n\nCOPY --from=build /out/create-account /usr/bin/create-account\nCOPY --from=build /out/generate-config /usr/bin/generate-config\nCOPY --from=build /out/generate-keys /usr/bin/generate-keys\nCOPY --from=build /out/dendrite /usr/bin/dendrite\n\nVOLUME /etc/dendrite\nWORKDIR /etc/dendrite\n\nENTRYPOINT [\"/usr/bin/dendrite\"]\nEXPOSE 8008 8448\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 9.935546875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.302734375,
          "content": "# Dendrite\n\n## Dendrite is now maintained at [element-hq/dendrite](https://github.com/element-hq/dendrite)\n\nDendrite is an open-source [Matrix](https://matrix.org/) homeserver developed from 2019 through 2023 as part of the Matrix.org Foundation. \nThe Matrix.org Foundation is not able to resource maintenance of Dendrite and it [continues to be developed by Element](https://github.com/element-hq/dendrite)\nadditionally you have the choice of [other Matrix homeservers](https://matrix.org/ecosystem/servers/)\n\nSee [The future of Synapse and Dendrite](https://matrix.org/blog/2023/11/06/future-of-synapse-dendrite/) blog post for more information.\n\n[![Build status](https://github.com/matrix-org/dendrite/actions/workflows/dendrite.yml/badge.svg?event=push)](https://github.com/matrix-org/dendrite/actions/workflows/dendrite.yml) [![Dendrite](https://img.shields.io/matrix/dendrite:matrix.org.svg?label=%23dendrite%3Amatrix.org&logo=matrix&server_fqdn=matrix.org)](https://matrix.to/#/#dendrite:matrix.org) [![Dendrite Dev](https://img.shields.io/matrix/dendrite-dev:matrix.org.svg?label=%23dendrite-dev%3Amatrix.org&logo=matrix&server_fqdn=matrix.org)](https://matrix.to/#/#dendrite-dev:matrix.org)\n\nDendrite is a second-generation Matrix homeserver written in Go.\nIt intends to provide an **efficient**, **reliable** and **scalable** alternative to [Synapse](https://github.com/matrix-org/synapse):\n\n- Efficient: A small memory footprint with better baseline performance than an out-of-the-box Synapse.\n- Reliable: Implements the Matrix specification as written, using the\n  [same test suite](https://github.com/matrix-org/sytest) as Synapse as well as\n  a [brand new Go test suite](https://github.com/matrix-org/complement).\n- Scalable: can run on multiple machines and eventually scale to massive homeserver deployments.\n\nDendrite is **beta** software, which means:\n\n- Dendrite is ready for early adopters. We recommend running Dendrite with a PostgreSQL database.\n- Dendrite has periodic releases. We intend to release new versions as we fix bugs and land significant features.\n- Dendrite supports database schema upgrades between releases. This means you should never lose your messages when upgrading Dendrite.\n\nThis does not mean:\n\n- Dendrite is bug-free. It has not yet been battle-tested in the real world and so will be error prone initially.\n- Dendrite is feature-complete. There may be client or federation APIs that are not implemented.\n- Dendrite is ready for massive homeserver deployments. There is no high-availability/clustering support.\n\nCurrently, we expect Dendrite to function well for small (10s/100s of users) homeserver deployments as well as P2P Matrix nodes in-browser or on mobile devices.\n\nIf you have further questions, please take a look at [our FAQ](docs/FAQ.md) or join us in:\n\n- **[#dendrite:matrix.org](https://matrix.to/#/#dendrite:matrix.org)** - General chat about the Dendrite project, for users and server admins alike\n- **[#dendrite-dev:matrix.org](https://matrix.to/#/#dendrite-dev:matrix.org)** - The place for developers, where all Dendrite development discussion happens\n- **[#dendrite-alerts:matrix.org](https://matrix.to/#/#dendrite-alerts:matrix.org)** - Release notifications and important info, highly recommended for all Dendrite server admins\n\n## Requirements\n\nSee the [Planning your Installation](https://matrix-org.github.io/dendrite/installation/planning) page for\nmore information on requirements.\n\nTo build Dendrite, you will need Go 1.21 or later.\n\nFor a usable federating Dendrite deployment, you will also need:\n\n- A domain name (or subdomain)\n- A valid TLS certificate issued by a trusted authority for that domain\n- SRV records or a well-known file pointing to your deployment\n\nAlso recommended are:\n\n- A PostgreSQL database engine, which will perform better than SQLite with many users and/or larger rooms\n- A reverse proxy server, such as nginx, configured [like this sample](https://github.com/matrix-org/dendrite/blob/main/docs/nginx/dendrite-sample.conf)\n\nThe [Federation Tester](https://federationtester.matrix.org) can be used to verify your deployment.\n\n## Get started\n\nIf you wish to build a fully-federating Dendrite instance, see [the Installation documentation](https://matrix-org.github.io/dendrite/installation). For running in Docker, see [build/docker](build/docker).\n\nThe following instructions are enough to get Dendrite started as a non-federating test deployment using self-signed certificates and SQLite databases:\n\n```bash\n$ git clone https://github.com/matrix-org/dendrite\n$ cd dendrite\n$ go build -o bin/ ./cmd/...\n\n# Generate a Matrix signing key for federation (required)\n$ ./bin/generate-keys --private-key matrix_key.pem\n\n# Generate a self-signed certificate (optional, but a valid TLS certificate is normally\n# needed for Matrix federation/clients to work properly!)\n$ ./bin/generate-keys --tls-cert server.crt --tls-key server.key\n\n# Copy and modify the config file - you'll need to set a server name and paths to the keys\n# at the very least, along with setting up the database connection strings.\n$ cp dendrite-sample.yaml dendrite.yaml\n\n# Build and run the server:\n$ ./bin/dendrite --tls-cert server.crt --tls-key server.key --config dendrite.yaml\n\n# Create an user account (add -admin for an admin user).\n# Specify the localpart only, e.g. 'alice' for '@alice:domain.com'\n$ ./bin/create-account --config dendrite.yaml --username alice\n```\n\nThen point your favourite Matrix client at `http://localhost:8008` or `https://localhost:8448`.\n\n## Progress\n\nWe use a script called \"Are We Synapse Yet\" which checks Sytest compliance rates. Sytest is a black-box homeserver\ntest rig with around 900 tests. The script works out how many of these tests are passing on Dendrite and it\nupdates with CI. As of January 2023, we have 100% server-server parity with Synapse, and the client-server parity is at 93% , though check\nCI for the latest numbers. In practice, this means you can communicate locally and via federation with Synapse\nservers such as matrix.org reasonably well, although there are still some missing features (like SSO and Third-party ID APIs).\n\nWe are prioritising features that will benefit single-user homeservers first (e.g Receipts, E2E) rather\nthan features that massive deployments may be interested in (OpenID, Guests, Admin APIs, AS API).\nThis means Dendrite supports amongst others:\n\n- Core room functionality (creating rooms, invites, auth rules)\n- Room versions 1 to 10 supported\n- Backfilling locally and via federation\n- Accounts, profiles and devices\n- Published room lists\n- Typing\n- Media APIs\n- Redaction\n- Tagging\n- Context\n- E2E keys and device lists\n- Receipts\n- Push\n- Guests\n- User Directory\n- Presence\n- Fulltext search\n\n## Contributing\n\nWe would be grateful for any help on issues marked as\n[Are We Synapse Yet](https://github.com/matrix-org/dendrite/labels/are-we-synapse-yet). These issues\nall have related Sytests which need to pass in order for the issue to be closed. Once you've written your\ncode, you can quickly run Sytest to ensure that the test names are now passing.\n\nIf you're new to the project, see our\n[Contributing page](https://matrix-org.github.io/dendrite/development/contributing) to get up to speed, then\nlook for [Good First Issues](https://github.com/matrix-org/dendrite/labels/good%20first%20issue). If you're\nfamiliar with the project, look for [Help Wanted](https://github.com/matrix-org/dendrite/labels/help-wanted)\nissues.\n"
        },
        {
          "name": "appservice",
          "type": "tree",
          "content": null
        },
        {
          "name": "are-we-synapse-yet.list",
          "type": "blob",
          "size": 52.849609375,
          "content": "reg GET /register yields a set of flows\nreg POST /register can create a user\nreg POST /register downcases capitals in usernames\nreg POST /register returns the same device_id as that in the request\nreg POST /register rejects registration of usernames with '!'\nreg POST /register rejects registration of usernames with '\"'\nreg POST /register rejects registration of usernames with ':'\nreg POST /register rejects registration of usernames with '?'\nreg POST /register rejects registration of usernames with '\\'\nreg POST /register rejects registration of usernames with '@'\nreg POST /register rejects registration of usernames with '['\nreg POST /register rejects registration of usernames with ']'\nreg POST /register rejects registration of usernames with '{'\nreg POST /register rejects registration of usernames with '|'\nreg POST /register rejects registration of usernames with '}'\nreg POST /register rejects registration of usernames with '£'\nreg POST /register rejects registration of usernames with 'é'\nreg POST /register rejects registration of usernames with '\\n'\nreg POST /register rejects registration of usernames with '''\nreg POST /register allows registration of usernames with 'q'\nreg POST /register allows registration of usernames with '3'\nreg POST /register allows registration of usernames with '.'\nreg POST /register allows registration of usernames with '_'\nreg POST /register allows registration of usernames with '='\nreg POST /register allows registration of usernames with '-'\nreg POST /register allows registration of usernames with '/'\nreg POST /r0/admin/register with shared secret \nreg POST /r0/admin/register admin with shared secret \nreg POST /r0/admin/register with shared secret downcases capitals \nreg POST /r0/admin/register with shared secret disallows symbols \nreg POST rejects invalid utf-8 in JSON \nlog GET /login yields a set of flows\nlog POST /login can log in as a user \nlog POST /login returns the same device_id as that in the request \nlog POST /login can log in as a user with just the local part of the id \nlog POST /login as non-existing user is rejected \nlog POST /login wrong password is rejected \nlog Interactive authentication types include SSO\nlog Can perform interactive authentication with SSO\nlog The user must be consistent through an interactive authentication session with SSO\nlog The operation must be consistent through an interactive authentication session\nv1s GET /events initially\nv1s GET /initialSync initially\ncsa Version responds 200 OK with valid structure\npro PUT /profile/:user_id/displayname sets my name\npro GET /profile/:user_id/displayname publicly accessible\npro PUT /profile/:user_id/avatar_url sets my avatar\npro GET /profile/:user_id/avatar_url publicly accessible\ndev GET /device/{deviceId} \ndev GET /device/{deviceId} gives a 404 for unknown devices\ndev GET /devices \ndev PUT /device/{deviceId} updates device fields \ndev PUT /device/{deviceId} gives a 404 for unknown devices\ndev DELETE /device/{deviceId} \ndev DELETE /device/{deviceId} requires UI auth user to match device owner \ndev DELETE /device/{deviceId} with no body gives a 401 \ndev The deleted device must be consistent through an interactive auth session \ndev Users receive device_list updates for their own devices\npre GET /presence/:user_id/status fetches initial status \npre PUT /presence/:user_id/status updates my presence \ncrm POST /createRoom makes a public room\ncrm POST /createRoom makes a private room\ncrm POST /createRoom makes a private room with invites\ncrm POST /createRoom makes a room with a name\ncrm POST /createRoom makes a room with a topic\nsyn Can /sync newly created room\ncrm POST /createRoom creates a room with the given version\ncrm POST /createRoom rejects attempts to create rooms with numeric versions\ncrm POST /createRoom rejects attempts to create rooms with unknown versions\ncrm POST /createRoom ignores attempts to set the room version via creation_content\nmem GET /rooms/:room_id/state/m.room.member/:user_id fetches my membership\nmem GET /rooms/:room_id/state/m.room.member/:user_id?format=event fetches my membership event \nrst GET /rooms/:room_id/state/m.room.power_levels fetches powerlevels\nmem GET /rooms/:room_id/joined_members fetches my membership \nv1s GET /rooms/:room_id/initialSync fetches initial sync state \npub GET /publicRooms lists newly-created room \nali GET /directory/room/:room_alias yields room ID\nmem GET /joined_rooms lists newly-created room\nrst POST /rooms/:room_id/state/m.room.name sets name\nrst GET /rooms/:room_id/state/m.room.name gets name\nrst POST /rooms/:room_id/state/m.room.topic sets topic\nrst GET /rooms/:room_id/state/m.room.topic gets topic\nrst GET /rooms/:room_id/state fetches entire room state \ncrm POST /createRoom with creation content\nali PUT /directory/room/:room_alias creates alias\nali GET /rooms/:room_id/aliases lists aliases \njon POST /rooms/:room_id/join can join a room\njon POST /join/:room_alias can join a room\njon POST /join/:room_id can join a room\njon POST /join/:room_id can join a room with custom content\njon POST /join/:room_alias can join a room with custom content\nlev POST /rooms/:room_id/leave can leave a room\ninv POST /rooms/:room_id/invite can send an invite\nban POST /rooms/:room_id/ban can ban a user\nsnd POST /rooms/:room_id/send/:event_type sends a message\nsnd PUT /rooms/:room_id/send/:event_type/:txn_id sends a message\nsnd PUT /rooms/:room_id/send/:event_type/:txn_id deduplicates the same txn id\nget GET /rooms/:room_id/messages returns a message\nget GET /rooms/:room_id/messages lazy loads members correctly \ntyp PUT /rooms/:room_id/typing/:user_id sets typing notification \ntyp Typing notifications don't leak (3 subtests)\nrst GET /rooms/:room_id/state/m.room.power_levels can fetch levels\nrst PUT /rooms/:room_id/state/m.room.power_levels can set levels\nrst PUT power_levels should not explode if the old power levels were empty\nrst Users cannot set notifications powerlevel higher than their own (2 subtests)\nrst Both GET and PUT work\nrct POST /rooms/:room_id/receipt can create receipts \nred POST /rooms/:room_id/read_markers can create read marker\nmed POST /media/v3/upload can create an upload\nmed POST /media/r0/upload can create an upload \nmed GET /media/v3/download can fetch the value again\nmed GET /media/r0/download can fetch the value again \ncap GET /capabilities is present and well formed for registered user \ncap GET /r0/capabilities is not public\ncap GET /v3/capabilities is not public\nreg Register with a recaptcha \nreg registration is idempotent, without username specified \nreg registration is idempotent, with username specified \nreg registration remembers parameters \nreg registration accepts non-ascii passwords \nreg registration with inhibit_login inhibits login \nreg User signups are forbidden from starting with '_'\nreg Can register using an email address \nlog Can login with 3pid and password using m.login.password \nlog login types include SSO \nlog /login/cas/redirect redirects if the old m.login.cas login type is listed \nlog Can login with new user via CAS \nlox Can logout current device \nlox Can logout all devices \nlox Request to logout with invalid an access token is rejected\nlox Request to logout without an access token is rejected\nlog After changing password, can't log in with old password \nlog After changing password, can log in with new password \nlog After changing password, existing session still works \nlog After changing password, a different session no longer works by default \nlog After changing password, different sessions can optionally be kept \npsh Pushers created with a different access token are deleted on password change \npsh Pushers created with a the same access token are not deleted on password change \nacc Can deactivate account \nacc Can't deactivate account with wrong password \nacc After deactivating account, can't log in with password \nacc After deactivating account, can't log in with an email\nv1s initialSync sees my presence status \npre Presence change reports an event to myself \npre Friends presence changes reports events \ncrm Room creation reports m.room.create to myself\ncrm Room creation reports m.room.member to myself\nrst Setting room topic reports m.room.topic to myself \nv1s Global initialSync \nv1s Global initialSync with limit=0 gives no messages \nv1s Room initialSync \nv1s Room initialSync with limit=0 gives no messages \nrst Setting state twice is idempotent \njon Joining room twice is idempotent \nsyn New room members see their own join event\nv1s New room members see existing users' presence in room initialSync \nsyn Existing members see new members' join events\npre Existing members see new members' presence\nv1s All room members see all room members' presence in global initialSync \nf,jon Remote users can join room by alias \nsyn New room members see their own join event \nv1s New room members see existing members' presence in room initialSync \nsyn Existing members see new members' join events \npre Existing members see new member's presence\nv1s New room members see first user's profile information in global initialSync\nv1s New room members see first user's profile information in per-room initialSync\nf,jon Remote users may not join unfederated rooms\nsyn Local room members see posted message events\nv1s Fetching eventstream a second time doesn't yield the message again\nsyn Local non-members don't see posted message events\nget Local room members can get room messages\nf,syn Remote room members also see posted message events\nf,get Remote room members can get room messages\nget Message history can be paginated\nf,get Message history can be paginated over federation\neph Ephemeral messages received from clients are correctly expired\nali Room aliases can contain Unicode\nf,ali Remote room alias queries can handle Unicode\nali Canonical alias can be set\nali Canonical alias can be set (3 subtests)\nali Canonical alias can include alt_aliases\nali Canonical alias can include alt_aliases (4 subtests)\nali Regular users can add and delete aliases in the default room configuration\nali Regular users can add and delete aliases when m.room.aliases is restricted\nali Deleting a non-existent alias should return a 404\nali Users can't delete other's aliases\nali Users with sufficient power-level can delete other's aliases\nali Can delete canonical alias\nali Alias creators can delete alias with no ops\nali Alias creators can delete canonical alias with no ops\nmsc Only room members can list aliases of a room\ninv Can invite users to invite-only rooms\ninv Uninvited users cannot join the room\ninv Invited user can reject invite\nf,inv Invited user can reject invite over federation\nf,inv Invited user can reject invite over federation several times\ninv Invited user can reject invite for empty room\nf,inv Invited user can reject invite over federation for empty room\ninv Invited user can reject local invite after originator leaves\ninv Invited user can see room metadata\nf,inv Remote invited user can see room metadata\ninv Users cannot invite themselves to a room\ninv Users cannot invite a user that is already in the room\nban Banned user is kicked and may not rejoin until unbanned\nf,ban Remote banned user is kicked and may not rejoin until unbanned\nban 'ban' event respects room powerlevel\nplv setting 'm.room.name' respects room powerlevel\nplv setting 'm.room.power_levels' respects room powerlevel (2 subtests)\nplv Unprivileged users can set m.room.topic if it only needs level 0\nplv Users cannot set ban powerlevel higher than their own (2 subtests)\nplv Users cannot set kick powerlevel higher than their own (2 subtests)\nplv Users cannot set redact powerlevel higher than their own (2 subtests)\nv1s Check that event streams started after a client joined a room work (SYT-1)\nv1s Event stream catches up fully after many messages\nxxx PUT /rooms/:room_id/redact/:event_id/:txn_id as power user redacts message\nxxx PUT /rooms/:room_id/redact/:event_id/:txn_id as original message sender redacts message\nxxx PUT /rooms/:room_id/redact/:event_id/:txn_id as random user does not redact message\nxxx PUT /redact disallows redaction of event in different room\nxxx Redaction of a redaction redacts the redaction reason\nxxx PUT /rooms/:room_id/redact/:event_id/:txn_id is idempotent\nv1s A departed room is still included in /initialSync (SPEC-216)\nv1s Can get rooms/{roomId}/initialSync for a departed room (SPEC-216)\nrst Can get rooms/{roomId}/state for a departed room (SPEC-216)\nmem Can get rooms/{roomId}/members for a departed room (SPEC-216)\nget Can get rooms/{roomId}/messages for a departed room (SPEC-216)\nrst Can get 'm.room.name' state for a departed room (SPEC-216)\nsyn Getting messages going forward is limited for a departed room (SPEC-216)\n3pd Can invite existing 3pid\n3pd Can invite existing 3pid with no ops into a private room\n3pd Can invite existing 3pid in createRoom\n3pd Can invite unbound 3pid\nf,3pd Can invite unbound 3pid over federation\n3pd Can invite unbound 3pid with no ops into a private room\nf,3pd Can invite unbound 3pid over federation with no ops into a private room\nf,3pd Can invite unbound 3pid over federation with users from both servers\n3pd Can accept unbound 3pid invite after inviter leaves\n3pd Can accept third party invite with /join\n3pd 3pid invite join with wrong but valid signature are rejected\n3pd 3pid invite join valid signature but revoked keys are rejected\n3pd 3pid invite join valid signature but unreachable ID server are rejected\ngst Guest user cannot call /events globally\ngst Guest users can join guest_access rooms\ngst Guest users can send messages to guest_access rooms if joined\ngst Guest user calling /events doesn't tightloop\ngst Guest users are kicked from guest_access rooms on revocation of guest_access\ngst Guest user can set display names\ngst Guest users are kicked from guest_access rooms on revocation of guest_access over federation\ngst Guest user can upgrade to fully featured user\ngst Guest user cannot upgrade other users\npub GET /publicRooms lists rooms\npub GET /publicRooms includes avatar URLs\ngst Guest users can accept invites to private rooms over federation\ngst Guest users denied access over federation if guest access prohibited\nmem Room members can override their displayname on a room-specific basis\nmem Room members can join a room with an overridden displayname\nmem Users cannot kick users from a room they are not in\nmem Users cannot kick users who have already left a room\ntyp Typing notification sent to local room members\nf,typ Typing notifications also sent to remote room members\ntyp Typing can be explicitly stopped\nrct Read receipts are visible to /initialSync\nrct Read receipts are sent as events\nrct Receipts must be m.read\npro displayname updates affect room member events\npro avatar_url updates affect room member events\ngst m.room.history_visibility == \"world_readable\" allows/forbids appropriately for Guest users\ngst m.room.history_visibility == \"shared\" allows/forbids appropriately for Guest users\ngst m.room.history_visibility == \"invited\" allows/forbids appropriately for Guest users\ngst m.room.history_visibility == \"joined\" allows/forbids appropriately for Guest users\ngst m.room.history_visibility == \"default\" allows/forbids appropriately for Guest users\ngst Guest non-joined user cannot call /events on shared room\ngst Guest non-joined user cannot call /events on invited room\ngst Guest non-joined user cannot call /events on joined room\ngst Guest non-joined user cannot call /events on default room\ngst Guest non-joined user can call /events on world_readable room\ngst Guest non-joined users can get state for world_readable rooms\ngst Guest non-joined users can get individual state for world_readable rooms\ngst Guest non-joined users cannot room initalSync for non-world_readable rooms\ngst Guest non-joined users can room initialSync for world_readable rooms\ngst Guest non-joined users can get individual state for world_readable rooms after leaving\ngst Guest non-joined users cannot send messages to guest_access rooms if not joined\ngst Guest users can sync from world_readable guest_access rooms if joined\ngst Guest users can sync from shared guest_access rooms if joined\ngst Guest users can sync from invited guest_access rooms if joined\ngst Guest users can sync from joined guest_access rooms if joined\ngst Guest users can sync from default guest_access rooms if joined\nath m.room.history_visibility == \"world_readable\" allows/forbids appropriately for Real users\nath m.room.history_visibility == \"shared\" allows/forbids appropriately for Real users\nath m.room.history_visibility == \"invited\" allows/forbids appropriately for Real users\nath m.room.history_visibility == \"joined\" allows/forbids appropriately for Real users\nath m.room.history_visibility == \"default\" allows/forbids appropriately for Real users\nath Real non-joined user cannot call /events on shared room\nath Real non-joined user cannot call /events on invited room\nath Real non-joined user cannot call /events on joined room\nath Real non-joined user cannot call /events on default room\nath Real non-joined user can call /events on world_readable room\nath Real non-joined users can get state for world_readable rooms\nath Real non-joined users can get individual state for world_readable rooms\nath Real non-joined users cannot room initalSync for non-world_readable rooms\nath Real non-joined users can room initialSync for world_readable rooms\nath Real non-joined users can get individual state for world_readable rooms after leaving\nath Real non-joined users cannot send messages to guest_access rooms if not joined\nath Real users can sync from world_readable guest_access rooms if joined\nath Real users can sync from shared guest_access rooms if joined\nath Real users can sync from invited guest_access rooms if joined\nath Real users can sync from joined guest_access rooms if joined\nath Real users can sync from default guest_access rooms if joined\nath Only see history_visibility changes on boundaries\nf,ath Backfill works correctly with history visibility set to joined\nfgt Forgotten room messages cannot be paginated\nfgt Forgetting room does not show up in v2 /sync\nfgt Can forget room you've been kicked from\nfgt Can't forget room you're still in\nfgt Can re-join room if re-invited\nath Only original members of the room can see messages from erased users\nmem /joined_rooms returns only joined rooms\nmem /joined_members return joined members\nctx /context/ on joined room works\nctx /context/ on non world readable room does not work\nctx /context/ returns correct number of events\nctx /context/ with lazy_load_members filter works\nget /event/ on joined room works\nget /event/ on non world readable room does not work\nget /event/ does not allow access to events before the user joined\nmem Can get rooms/{roomId}/members\nmem Can get rooms/{roomId}/members at a given point\nmem Can filter rooms/{roomId}/members\nupg /upgrade creates a new room\nupg /upgrade should preserve room visibility for public rooms\nupg /upgrade should preserve room visibility for private rooms\nupg /upgrade copies >100 power levels to the new room\nupg /upgrade copies the power levels to the new room\nupg /upgrade preserves the power level of the upgrading user in old and new rooms\nupg /upgrade copies important state to the new room\nupg /upgrade copies ban events to the new room\nupg local user has push rules copied to upgraded room\nf,upg remote user has push rules copied to upgraded room\nupg /upgrade moves aliases to the new room\nupg /upgrade moves remote aliases to the new room\nupg /upgrade preserves direct room state\nupg /upgrade preserves room federation ability\nupg /upgrade restricts power levels in the old room\nupg /upgrade restricts power levels in the old room when the old PLs are unusual\nupg /upgrade to an unknown version is rejected\nupg /upgrade is rejected if the user can't send state events\nupg /upgrade of a bogus room fails gracefully\nupg Cannot send tombstone event that points to the same room\nf,upg Local and remote users' homeservers remove a room from their public directory on upgrade\nrst Name/topic keys are correct\nf,pub Can get remote public room list\npub Can paginate public room list\npub Can search public room list\nsyn Can create filter\nsyn Can download filter\nsyn Can sync\nsyn Can sync a joined room\nsyn Full state sync includes joined rooms\nsyn Newly joined room is included in an incremental sync\nsyn Newly joined room has correct timeline in incremental sync\npre Newly joined room includes presence in incremental sync\npre Get presence for newly joined members in incremental sync\nsyn Can sync a room with a single message\nsyn Can sync a room with a message with a transaction id\nsyn A message sent after an initial sync appears in the timeline of an incremental sync.\nsyn A filtered timeline reaches its limit\nsyn Syncing a new room with a large timeline limit isn't limited\nsyn A full_state incremental update returns only recent timeline\nsyn A prev_batch token can be used in the v1 messages API\nsyn A next_batch token can be used in the v1 messages API\nsyn A prev_batch token from incremental sync can be used in the v1 messages API\npre User sees their own presence in a sync\npre User is offline if they set_presence=offline in their sync\npre User sees updates to presence from other users in the incremental sync.\nsyn State is included in the timeline in the initial sync \nf,syn State from remote users is included in the state in the initial sync \nsyn Changes to state are included in an incremental sync\nsyn Changes to state are included in an gapped incremental sync \nf,syn State from remote users is included in the timeline in an incremental sync \nsyn A full_state incremental update returns all state \nsyn When user joins a room the state is included in the next sync \nsyn A change to displayname should not result in a full state sync \nsyn A change to displayname should appear in incremental /sync\nsyn When user joins a room the state is included in a gapped sync \nsyn When user joins and leaves a room in the same batch, the full state is still included in the next sync \nsyn Current state appears in timeline in private history\nsyn Current state appears in timeline in private history with many messages before\nsyn Current state appears in timeline in private history with many messages after \nsyn Rooms a user is invited to appear in an initial sync\nsyn Rooms a user is invited to appear in an incremental sync\nsyn Newly joined room is included in an incremental sync after invite\nsyn Sync can be polled for updates\nsyn Sync is woken up for leaves\nsyn Left rooms appear in the leave section of sync \nsyn Newly left rooms appear in the leave section of incremental sync\nsyn We should see our own leave event, even if history_visibility is restricted (SYN-662)\nsyn We should see our own leave event when rejecting an invite, even if history_visibility is restricted (riot-web/3462)\nsyn Newly left rooms appear in the leave section of gapped sync\nsyn Previously left rooms don't appear in the leave section of sync\nsyn Left rooms appear in the leave section of full state sync\nsyn Archived rooms only contain history from before the user left \nsyn Banned rooms appear in the leave section of sync \nsyn Newly banned rooms appear in the leave section of incremental sync\nsyn Newly banned rooms appear in the leave section of incremental sync\nsyn Typing events appear in initial sync\nsyn Typing events appear in incremental sync\nsyn Typing events appear in gapped sync\nsyn Read receipts appear in initial v2 /sync \nsyn New read receipts appear in incremental v2 /sync \nsyn Can pass a JSON filter as a query parameter \nsyn Can request federation format via the filter \nsyn Read markers appear in incremental v2 /sync \nsyn Read markers appear in initial v2 /sync \nsyn Read markers can be updated \nsyn Lazy loading parameters in the filter are strictly boolean\nsyn The only membership state included in an initial sync is for all the senders in the timeline \nsyn The only membership state included in an incremental sync is for senders in the timeline \nsyn The only membership state included in a gapped incremental sync is for senders in the timeline \nsyn Gapped incremental syncs include all state changes \nsyn Old leaves are present in gapped incremental syncs \nsyn Leaves are present in non-gapped incremental syncs \nsyn Old members are included in gappy incr LL sync if they start speaking \nsyn Members from the gap are included in gappy incr LL sync \nsyn We don't send redundant membership state across incremental syncs by default \nsyn We do send redundant membership state across incremental syncs if asked \nsyn Unnamed room comes with a name summary \nsyn Named room comes with just joined member count summary \nsyn Room summary only has 5 heroes \nsyn Room summary counts change when membership changes \nrmv User can create and send/receive messages in a room with version 1 \nrmv User can create and send/receive messages in a room with version 1 (2 subtests)\nrmv local user can join room with version 1\nrmv User can invite local user to room with version 1\nrmv remote user can join room with version 1\nrmv User can invite remote user to room with version 1 \nrmv Remote user can backfill in a room with version 1\nrmv Can reject invites over federation for rooms with version 1 \nrmv Can receive redactions from regular users over federation in room version 1 \nrmv User can create and send/receive messages in a room with version 2 \nrmv User can create and send/receive messages in a room with version 2 (2 subtests)\nrmv local user can join room with version 2\nrmv User can invite local user to room with version 2\nrmv remote user can join room with version 2\nrmv User can invite remote user to room with version 2 \nrmv Remote user can backfill in a room with version 2\nrmv Can reject invites over federation for rooms with version 2 \nrmv Can receive redactions from regular users over federation in room version 2 \nrmv User can create and send/receive messages in a room with version 3 \nrmv User can create and send/receive messages in a room with version 3 (2 subtests)\nrmv local user can join room with version 3 \nrmv User can invite local user to room with version 3 \nrmv remote user can join room with version 3 \nrmv User can invite remote user to room with version 3 \nrmv Remote user can backfill in a room with version 3 \nrmv Can reject invites over federation for rooms with version 3 \nrmv Can receive redactions from regular users over federation in room version 3 \nrmv User can create and send/receive messages in a room with version 4 \nrmv User can create and send/receive messages in a room with version 4 (2 subtests)\nrmv local user can join room with version 4 \nrmv User can invite local user to room with version 4 \nrmv remote user can join room with version 4 \nrmv User can invite remote user to room with version 4 \nrmv Remote user can backfill in a room with version 4 \nrmv Can reject invites over federation for rooms with version 4 \nrmv Can receive redactions from regular users over federation in room version 4 \nrmv User can create and send/receive messages in a room with version 5 \nrmv User can create and send/receive messages in a room with version 5 (2 subtests)\nrmv local user can join room with version 5 \nrmv User can invite local user to room with version 5 \nrmv remote user can join room with version 5 \nrmv User can invite remote user to room with version 5 \nrmv Remote user can backfill in a room with version 5 \nrmv Can reject invites over federation for rooms with version 5 \nrmv Can receive redactions from regular users over federation in room version 5 \nrmv User can create and send/receive messages in a room with version 6 \nrmv User can create and send/receive messages in a room with version 6 (2 subtests)\nrmv local user can join room with version 6 \nrmv User can invite local user to room with version 6 \nrmv remote user can join room with version 6 \nrmv User can invite remote user to room with version 6 \nrmv Remote user can backfill in a room with version 6 \nrmv Can reject invites over federation for rooms with version 6 \nrmv Can receive redactions from regular users over federation in room version 6 \nrmv Inbound federation rejects invites which include invalid JSON for room version 6\nrmv Outbound federation rejects invite response which include invalid JSON for room version 6\nrmv Inbound federation rejects invite rejections which include invalid JSON for room version 6\nrmv Server rejects invalid JSON in a version 6 room\nrmv User can create and send/receive messages in a room with version 7 (2 subtests)\nrmv local user can join room with version 7\nrmv User can invite local user to room with version 7\nrmv remote user can join room with version 7\nrmv User can invite remote user to room with version 7\nrmv Remote user can backfill in a room with version 7\nrmv Can reject invites over federation for rooms with version 7\nrmv Can receive redactions from regular users over federation in room version 7\nrmv User can create and send/receive messages in a room with version 8 (2 subtests)\nrmv local user can join room with version 8\nrmv User can invite local user to room with version 8\nrmv remote user can join room with version 8\nrmv User can invite remote user to room with version 8\nrmv Remote user can backfill in a room with version 8\nrmv Can reject invites over federation for rooms with version 8\nrmv Can receive redactions from regular users over federation in room version 8\nrmv User can create and send/receive messages in a room with version 9 (2 subtests)\nrmv local user can join room with version 9\nrmv User can invite local user to room with version 9\nrmv remote user can join room with version 9\nrmv User can invite remote user to room with version 9\nrmv Remote user can backfill in a room with version 9\nrmv Can reject invites over federation for rooms with version 9\nrmv Can receive redactions from regular users over federation in room version 9\npre Presence changes are reported to local room members \nf,pre Presence changes are also reported to remote room members \npre Presence changes to UNAVAILABLE are reported to local room members \nf,pre Presence changes to UNAVAILABLE are reported to remote room members \nv1s Newly created users see their own presence in /initialSync (SYT-34) \ndvk Can upload device keys \ndvk Should reject keys claiming to belong to a different user\ndvk Can query device keys using POST \ndvk Can query specific device keys using POST \ndvk query for user with no keys returns empty key dict \ndvk Can claim one time key using POST \nf,dvk Can query remote device keys using POST \nf,dvk Can claim remote one time key using POST \ndvk Local device key changes appear in v2 /sync \ndvk Local new device changes appear in v2 /sync \ndvk Local delete device changes appear in v2 /sync \ndvk Local update device changes appear in v2 /sync \ndvk Can query remote device keys using POST after notification \nf,dev Device deletion propagates over federation \nf,dev If remote user leaves room, changes device and rejoins we see update in sync \nf,dev If remote user leaves room we no longer receive device updates \ndvk Local device key changes appear in /keys/changes \ndvk New users appear in /keys/changes \nf,dvk If remote user leaves room, changes device and rejoins we see update in /keys/changes \ndvk Get left notifs in sync and /keys/changes when other user leaves \ndvk Get left notifs for other users in sync and /keys/changes when user leaves \nf,dvk If user leaves room, remote user changes device and rejoins we see update in /sync and /keys/changes \ndkb Can create backup version \ndkb Can update backup version \ndkb Responds correctly when backup is empty \ndkb Can backup keys \ndkb Can update keys with better versions \ndkb Will not update keys with worse versions \ndkb Will not back up to an old backup version \ndkb Can delete backup \ndkb Deleted & recreated backups are empty \ndkb Can create more than 10 backup versions \nxsk Can upload self-signing keys \nxsk Fails to upload self-signing keys with no auth \nxsk Fails to upload self-signing key without master key \nxsk Changing master key notifies local users \nxsk Changing user-signing key notifies local users \nf,xsk can fetch self-signing keys over federation \nf,xsk uploading self-signing key notifies over federation \nf,xsk uploading signed devices gets propagated over federation \ntag Can add tag\ntag Can remove tag\ntag Can list tags for a room\nv1s Tags appear in the v1 /events stream \nv1s Tags appear in the v1 /initalSync \nv1s Tags appear in the v1 room initial sync \ntag Tags appear in an initial v2 /sync\ntag Newly updated tags appear in an incremental v2 /sync\ntag Deleted tags appear in an incremental v2 /sync\ntag local user has tags copied to the new room \nf,tag remote user has tags copied to the new room \nsch Can search for an event by body \nsch Can get context around search results \nsch Can back-paginate search results \nsch Search works across an upgraded room and its predecessor \nsch Search results with rank ordering do not include redacted events \nsch Search results with recent ordering do not include redacted events \nacc Can add account data\nacc Can add account data to room\nacc Can get account data without syncing \nacc Can get room account data without syncing \nv1s Latest account data comes down in /initialSync \nv1s Latest account data comes down in room initialSync \nv1s Account data appears in v1 /events stream \nv1s Room account data appears in v1 /events stream \nacc Latest account data appears in v2 /sync \nacc New account data appears in incremental v2 /sync\noid Can generate a openid access_token that can be exchanged for information about a user \noid Invalid openid access tokens are rejected \noid Requests to userinfo without access tokens are rejected \nstd Can send a message directly to a device using PUT /sendToDevice \nstd Can recv a device message using /sync \nstd Can recv device messages until they are acknowledged \nstd Device messages with the same txn_id are deduplicated \nstd Device messages wake up /sync \nstd Can recv device messages over federation \nfsd Device messages over federation wake up /sync \nstd Can send messages with a wildcard device id \nstd Can send messages with a wildcard device id to two devices \nstd Wildcard device messages wake up /sync \nfsd Wildcard device messages over federation wake up /sync \nadm /whois \nnsp /purge_history \nnsp /purge_history by ts \nnsp Can backfill purged history \nnsp Shutdown room \nign Ignore user in existing room \nign Ignore invite in full sync \nign Ignore invite in incremental sync \nfky Checking local federation server\nfky Federation key API allows unsigned requests for keys\nfky Federation key API can act as a notary server via a GET request \nfky Federation key API can act as a notary server via a POST request \nfky Key notary server should return an expired key if it can't find any others \nfky Key notary server must not overwrite a valid key with a spurious result from the origin server \nfqu Non-numeric ports in server names are rejected \nfqu Outbound federation can query profile data\nfqu Inbound federation can query profile data\nfqu Outbound federation can query room alias directory\nfqu Inbound federation can query room alias directory\nfsj Membership event with an invalid displayname in the send_join response should not cause room join to fail\nfsj Outbound federation can query v1 /send_join \nfsj Outbound federation can query v2 /send_join\nfmj Outbound federation passes make_join failures through to the client \nfsj Inbound federation can receive v1 /send_join \nfsj Inbound federation can receive v2 /send_join\nfmj Inbound /v1/make_join rejects remote attempts to join local users to rooms\nfsj Inbound /v1/send_join rejects incorrectly-signed joins \nfsj Inbound /v1/send_join rejects joins from other servers \nfau Inbound federation rejects remote attempts to kick local users to rooms\nfrv Inbound federation rejects attempts to join v1 rooms from servers without v1 support \nfrv Inbound federation rejects attempts to join v2 rooms from servers lacking version support \nfrv Inbound federation rejects attempts to join v2 rooms from servers only supporting v1 \nfrv Inbound federation accepts attempts to join v2 rooms from servers with support\nfrv Outbound federation correctly handles unsupported room versions \nfrv A pair of servers can establish a join in a v2 room \nfsj Outbound federation rejects send_join responses with no m.room.create event \nfrv Outbound federation rejects m.room.create events with an unknown room version \nfsj Event with an invalid signature in the send_join response should not cause room join to fail \nfsj Inbound: send_join rejects invalid JSON for room version 6\nfed Outbound federation can send events\nfed Inbound federation can receive events \nfed Inbound federation can receive redacted events \nmsc Ephemeral messages received from servers are correctly expired \nfed Events whose auth_events are in the wrong room do not mess up the room state \nfed Inbound federation can return events \nfed Inbound federation redacts events from erased users \nfme Outbound federation can request missing events \nfme Inbound federation can return missing events for world_readable visibility \nfme Inbound federation can return missing events for shared visibility \nfme Inbound federation can return missing events for invited visibility\nfme Inbound federation can return missing events for joined visibility \nfme outliers whose auth_events are in a different room are correctly rejected \nfbk Outbound federation can backfill events \nfbk Inbound federation can backfill events \nfbk Backfill checks the events requested belong to the room \nfbk Backfilled events whose prev_events are in a different room do not allow cross-room back-pagination \nfiv Outbound federation can send invites via v1 API \nfiv Outbound federation can send invites via v2 API \nfiv Inbound federation can receive invites via v1 API \nfiv Inbound federation can receive invites via v2 API \nfiv Inbound federation can receive invite and reject when remote replies with a 403 \nfiv Inbound federation can receive invite and reject when remote replies with a 500 \nfiv Inbound federation can receive invite and reject when remote is unreachable \nfiv Inbound federation rejects invites which are not signed by the sender \nfiv Inbound federation can receive invite rejections \nfiv Inbound federation rejects incorrectly-signed invite rejections \nfsl Inbound /v1/send_leave rejects leaves from other servers \nfst Inbound federation can get state for a room \nfst Inbound federation of state requires event_id as a mandatory paramater\nfst Inbound federation can get state_ids for a room \nfst Inbound federation of state_ids requires event_id as a mandatory paramater\nfst  Federation rejects inbound events where the prev_events cannot be found \nfst Room state at a rejected message event is the same as its predecessor \nfst Room state at a rejected state event is the same as its predecessor \nfst Outbound federation requests missing prev_events and then asks for /state_ids and resolves the state \nfst Federation handles empty auth_events in state_ids sanely \nfst Getting state checks the events requested belong to the room \nfst Getting state IDs checks the events requested belong to the room \nfst Should not be able to take over the room by pretending there is no PL event \nfpb Inbound federation can get public room list \nfed Outbound federation sends receipts \nfed Inbound federation rejects receipts from wrong remote \nfed Inbound federation ignores redactions from invalid servers room > v3 \nfed An event which redacts an event in a different room should be ignored \nfed An event which redacts itself should be ignored \nfed A pair of events which redact each other should be ignored \nfdk Local device key changes get to remote servers \nfdk Server correctly handles incoming m.device_list_update \nfdk Server correctly resyncs when client query keys and there is no remote cache \nfdk Server correctly resyncs when server leaves and rejoins a room \nfdk Local device key changes get to remote servers with correct prev_id \nfdk Device list doesn't change if remote server is down \nfdk If a device list update goes missing, the server resyncs on the next one \nfst Name/topic keys are correct \nfau Remote servers cannot set power levels in rooms without existing powerlevels \nfau Remote servers should reject attempts by non-creators to set the power levels \nfau Inbound federation rejects typing notifications from wrong remote \nfau Users cannot set notifications powerlevel higher than their own\nfed Forward extremities remain so even after the next events are populated as outliers \nfau Banned servers cannot send events \nfau Banned servers cannot /make_join \nfau Banned servers cannot /send_join \nfau Banned servers cannot /make_leave \nfau Banned servers cannot /send_leave \nfau Banned servers cannot /invite \nfau Banned servers cannot get room state \nfau Banned servers cannot get room state ids \nfau Banned servers cannot backfill \nfau Banned servers cannot /event_auth \nfau Banned servers cannot get missing events \nfau Server correctly handles transactions that break edu limits \nfau Inbound federation correctly soft fails events \nfau Inbound federation accepts a second soft-failed event \nfau Inbound federation correctly handles soft failed events as extremities \nmed Can upload with Unicode file name \nmed Can download with Unicode file name locally \nf,med Can download with Unicode file name over federation \nmed Alternative server names do not cause a routing loop \nmed Can download specifying a different Unicode file name \nmed Can upload without a file name\nmed Can download without a file name locally\nf,med Can download without a file name over federation \nmed Can upload with ASCII file name\nmed Can download file 'ascii' \nmed Can download file 'name with spaces' \nmed Can download file 'name;with;semicolons' \nmed Can download specifying a different ASCII file name \nmed Can send image in room message\nmed Can fetch images in room \nmed POSTed media can be thumbnailed \nf,med Remote media can be thumbnailed \nmed Test URL preview \nmed Can read configuration endpoint \nnsp Can quarantine media in rooms \nudr User appears in user directory \nudr User in private room doesn't appear in user directory \nudr User joining then leaving public room appears and dissappears from directory \nudr Users appear/disappear from directory when join_rules are changed \nudr Users appear/disappear from directory when history_visibility are changed \nudr Users stay in directory when join_rules are changed but history_visibility is world_readable \nf,udr User in remote room doesn't appear in user directory after server left room \nudr User directory correctly update on display name change \nudr User in shared private room does appear in user directory \nudr User in shared private room does appear in user directory until leave \nudr User in dir while user still shares private rooms \nnsp Create group \nnsp Add group rooms \nnsp Remove group rooms \nnsp Get local group profile \nnsp Get local group users \nnsp Add/remove local group rooms \nnsp Get local group summary \nnsp Get remote group profile \nnsp Get remote group users \nnsp Add/remove remote group rooms \nnsp Get remote group summary \nnsp Add local group users \nnsp Remove self from local group \nnsp Remove other from local group \nnsp Add remote group users \nnsp Remove self from remote group \nnsp Listing invited users of a remote group when not a member returns a 403 \nnsp Add group category \nnsp Remove group category \nnsp Get group categories \nnsp Add group role \nnsp Remove group role \nnsp Get group roles \nnsp Add room to group summary \nnsp Adding room to group summary keeps room_id when fetching rooms in group \nnsp Adding multiple rooms to group summary have correct order \nnsp Remove room from group summary \nnsp Add room to group summary with category \nnsp Remove room from group summary with category \nnsp Add user to group summary \nnsp Adding multiple users to group summary have correct order \nnsp Remove user from group summary \nnsp Add user to group summary with role \nnsp Remove user from group summary with role \nnsp Local group invites come down sync \nnsp Group creator sees group in sync \nnsp Group creator sees group in initial sync \nnsp Get/set local group publicity \nnsp Bulk get group publicity \nnsp Joinability comes down summary \nnsp Set group joinable and join it \nnsp Group is not joinable by default \nnsp Group is joinable over federation \nnsp Room is transitioned on local and remote groups upon room upgrade \nnsp POST /_synapse/admin/v1/register with shared secret\nnsp POST /_synapse/admin/v1/register admin with shared secret\nnsp POST /_synapse/admin/v1/register with shared secret downcases capitals\nnsp POST /_synapse/admin/v1/register with shared secret disallows symbols\n3pd Can bind 3PID via home server \n3pd Can bind and unbind 3PID via homeserver \n3pd Can unbind 3PID via homeserver when bound out of band \n3pd 3PIDs are unbound after account deactivation \n3pd Can bind and unbind 3PID via /unbind by specifying the identity server \n3pd Can bind and unbind 3PID via /unbind without specifying the identity server \napp AS can create a user \napp AS can create a user with an underscore \napp AS can create a user with inhibit_login \napp AS cannot create users outside its own namespace\napp Regular users cannot register within the AS namespace\napp AS can make room aliases \napp Regular users cannot create room aliases within the AS namespace\napp AS-ghosted users can use rooms via AS \napp AS-ghosted users can use rooms themselves \napp AS-ghosted users can use rooms via AS (2 subtests)\napp AS-ghosted users can use rooms themselves (3 subtests)\napp Ghost user must register before joining room \napp AS can set avatar for ghosted users \napp AS can set displayname for ghosted users \napp AS can't set displayname for random users\napp Inviting an AS-hosted user asks the AS server \napp Accesing an AS-hosted room alias asks the AS server \napp Accesing an AS-hosted room alias asks the AS server (2 subtests)\napp Events in rooms with AS-hosted room aliases are sent to AS server \napp AS user (not ghost) can join room without registering \napp AS user (not ghost) can join room without registering, with user_id query param\napp HS provides query metadata \napp HS can provide query metadata on a single protocol \napp HS will proxy request for 3PU mapping \napp HS will proxy request for 3PL mapping \napp AS can publish rooms in their own list \napp AS and main public room lists are separate \napp AS can deactivate a user \npsh Test that a message is pushed \npsh Test that a message is pushed (6 subtests)\npsh Test that rejected pushers are removed. (4 subtests)\npsh Invites are pushed \npsh Rooms with names are correctly named in pushed \npsh Rooms with canonical alias are correctly named in pushed \npsh Rooms with many users are correctly pushed \npsh Don't get pushed for rooms you've muted \npsh Rejected events are not pushed \npsh Can add global push rule for room \npsh Can add global push rule for sender \npsh Can add global push rule for content \npsh Can add global push rule for override \npsh Can add global push rule for underride \npsh Can add global push rule for content \npsh New rules appear before old rules by default \npsh Can add global push rule before an existing rule \npsh Can add global push rule after an existing rule \npsh Can delete a push rule \npsh Can disable a push rule \npsh Adding the same push rule twice is idempotent \npsh Messages that notify from another user increment unread notification count \npsh Messages that highlight from another user increment unread highlight count \npsh Can change the actions of default rules \npsh Changing the actions of an unknown default rule fails with 404\npsh Can change the actions of a user specified rule \npsh Changing the actions of an unknown rule fails with 404\npsh Can fetch a user's pushers \npsh Push rules come down in an initial /sync\npsh Adding a push rule wakes up an incremental /sync \npsh Disabling a push rule wakes up an incremental /sync \npsh Enabling a push rule wakes up an incremental /sync \npsh Setting actions for a push rule wakes up an incremental /sync \npsh Can enable/disable default rules \npsh Enabling an unknown default rule fails with 404\npsh Test that rejected pushers are removed. \npsh Notifications can be viewed with GET /notifications \npsh Trying to add push rule with no scope fails with 400 \npsh Trying to add push rule with invalid scope fails with 400 \npsh Trying to add push rule with missing template fails with 400 \npsh Trying to add push rule with missing rule_id fails with 400 \npsh Trying to add push rule with empty rule_id fails with 400 \npsh Trying to add push rule with invalid template fails with 400 \npsh Trying to add push rule with rule_id with slashes fails with 400 \npsh Trying to add push rule with override rule without conditions fails with 400 \npsh Trying to add push rule with underride rule without conditions fails with 400 \npsh Trying to add push rule with condition without kind fails with 400 \npsh Trying to add push rule with content rule without pattern fails with 400 \npsh Trying to add push rule with no actions fails with 400 \npsh Trying to add push rule with invalid action fails with 400 \npsh Trying to add push rule with invalid attr fails with 400 \npsh Trying to add push rule with invalid value for enabled fails with 400 \npsh Trying to get push rules with no trailing slash fails with 400 \npsh Trying to get push rules with scope without trailing slash fails with 400 \npsh Trying to get push rules with template without tailing slash fails with 400 \npsh Trying to get push rules with unknown scope fails with 400 \npsh Trying to get push rules with unknown template fails with 400 \npsh Trying to get push rules with unknown attribute fails with 400 \npsh Trying to get push rules with unknown rule_id fails with 404\npsh Rooms with names are correctly named in pushes\nv1s GET /initialSync with non-numeric 'limit' \nv1s GET /events with non-numeric 'limit' \nv1s GET /events with negative 'limit' \nv1s GET /events with non-numeric 'timeout' \nath Event size limits \nsyn Check creating invalid filters returns 4xx \nf,pre New federated private chats get full presence information (SYN-115) \npre Left room members do not cause problems for presence \ncrm Rooms can be created with an initial invite list (SYN-205) (1 subtests)\ntyp Typing notifications don't leak \nban Non-present room members cannot ban others \nban Non-present room members cannot ban others (3 subtests)\npsh Getting push rules doesn't corrupt the cache SYN-390 \npsh Getting push rules doesn't corrupt the cache SYN-390 (3 subtests)\ninv Test that we can be reinvited to a room we created \nsyn Multiple calls to /sync should not cause 500 errors \nsyn Multiple calls to /sync should not cause 500 errors (6 subtests)\ngst Guest user can call /events on another world_readable room (SYN-606) \ngst Real user can call /events on another world_readable room (SYN-606) \ngst Events come down the correct room\npub Asking for a remote rooms list, but supplying the local server's name, returns the local rooms list\nstd Can send a to-device message to two users which both receive it using /sync\nfme Outbound federation will ignore a missing event with bad JSON for room version 6\nfbk Outbound federation rejects backfill containing invalid JSON for events in room version 6\njso Invalid JSON integers\njso Invalid JSON floats\njso Invalid JSON special values\ninv Can invite users to invite-only rooms (2 subtests)\nplv setting 'm.room.name' respects room powerlevel (2 subtests)\npsh Messages that notify from another user increment notification_count\nmsc Messages that org.matrix.msc2625.mark_unread from another user increment org.matrix.msc2625.unread_count\ndvk Can claim one time key using POST (2 subtests)\nfdk Can query remote device keys using POST (1 subtests)\nfdk Can claim remote one time key using POST (2 subtests)\nfmj Inbound /make_join rejects attempts to join rooms where all users have left\nmsc Local users can peek into world_readable rooms by room ID\nmsc We can't peek into rooms with shared history_visibility\nmsc We can't peek into rooms with invited history_visibility\nmsc We can't peek into rooms with joined history_visibility\nmsc Local users can peek by room alias\nmsc Peeked rooms only turn up in the sync for the device who peeked them\nban 'ban' event respects room powerlevel (2 subtests)\ninv Test that we can be reinvited to a room we created (11 subtests)\nfiv Rejecting invite over federation doesn't break incremental /sync\npre Presence can be set from sync\nfst /state returns M_NOT_FOUND for an outlier\nfst /state_ids returns M_NOT_FOUND for an outlier\nfst /state returns M_NOT_FOUND for a rejected message event\nfst /state_ids returns M_NOT_FOUND for a rejected message event\nfst /state returns M_NOT_FOUND for a rejected state event\nfst /state_ids returns M_NOT_FOUND for a rejected state event\nfst Room state after a rejected message event is the same as before\nfst Room state after a rejected state event is the same as before\nfpb Federation publicRoom Name/topic keys are correct\nfed New federated private chats get full presence information (SYN-115) (10 subtests)\ndvk Rejects invalid device keys\nrmv User can create and send/receive messages in a room with version 10\nrmv local user can join room with version 10\nrmv User can invite local user to room with version 10\nrmv remote user can join room with version 10\nrmv User can invite remote user to room with version 10\nrmv Remote user can backfill in a room with version 10\nrmv Can reject invites over federation for rooms with version 10\nrmv Can receive redactions from regular users over federation in room version 10\nrmv User can create and send/receive messages in a room with version 11\nrmv local user can join room with version 11\nrmv User can invite local user to room with version 11\nrmv remote user can join room with version 11\nrmv User can invite remote user to room with version 11\nrmv Remote user can backfill in a room with version 11\nrmv Can reject invites over federation for rooms with version 11\nrmv Can receive redactions from regular users over federation in room version 11"
        },
        {
          "name": "are-we-synapse-yet.py",
          "type": "blob",
          "size": 9.62890625,
          "content": "#!/usr/bin/env python3\n\nfrom __future__ import division\nimport argparse\nimport re\nimport os\n\n# Usage: $ ./are-we-synapse-yet.py [-v] results.tap\n# This script scans a results.tap file from Dendrite's CI process and spits out\n# a rating of how close we are to Synapse parity, based purely on SyTests.\n# The main complexity is grouping tests sensibly into features like 'Registration'\n# and 'Federation'. Then it just checks the ones which are passing and calculates\n# percentages for each group. Produces results like:\n# \n# Client-Server APIs: 29% (196/666 tests)\n# -------------------\n#   Registration             :  62% (20/32 tests)\n#   Login                    :   7% (1/15 tests)\n#   V1 CS APIs               :  10% (3/30 tests)\n#   ...\n#\n# or in verbose mode:\n#\n# Client-Server APIs: 29% (196/666 tests)\n# -------------------\n#  Registration             :  62% (20/32 tests)\n#    ✓ GET /register yields a set of flows\n#    ✓ POST /register can create a user\n#    ✓ POST /register downcases capitals in usernames\n#    ...\n# \n# You can also tack `-v` on to see exactly which tests each category falls under.\n\ntest_mappings = {\n    \"nsp\": \"Non-Spec API\",\n    \"unk\": \"Unknown API (no group specified)\",\n    \"app\": \"Application Services API\",\n    \"msc\": \"MSCs\",\n    \"f\": \"Federation\", # flag to mark test involves federation\n\n    \"federation_apis\": {\n        \"fky\": \"Key API\",\n        \"fsj\": \"send_join API\",\n        \"fmj\": \"make_join API\",\n        \"fsl\": \"send_leave API\",\n        \"fiv\": \"Invite API\",\n        \"fqu\": \"Query API\",\n        \"frv\": \"room versions\",\n        \"fau\": \"Auth\",\n        \"fbk\": \"Backfill API\",\n        \"fme\": \"get_missing_events API\",\n        \"fst\": \"State APIs\",\n        \"fpb\": \"Public Room API\",\n        \"fdk\": \"Device Key APIs\",\n        \"fed\": \"Federation API\",\n\t\t\"fsd\": \"Send-to-Device APIs\",\n    },\n\n    \"client_apis\": {\n        \"reg\": \"Registration\",\n        \"log\": \"Login\",\n        \"lox\": \"Logout\",\n        \"v1s\": \"V1 CS APIs\",\n        \"csa\": \"Misc CS APIs\",\n        \"pro\": \"Profile\",\n        \"dev\": \"Devices\",\n        \"dvk\": \"Device Keys\",\n        \"dkb\": \"Device Key Backup\",\n        \"xsk\": \"Cross-signing Keys\",\n        \"pre\": \"Presence\",\n        \"crm\": \"Create Room\",\n        \"syn\": \"Sync API\",\n        \"rmv\": \"Room Versions\",\n        \"rst\": \"Room State APIs\",\n        \"pub\": \"Public Room APIs\",\n        \"mem\": \"Room Membership\",\n        \"ali\": \"Room Aliases\",\n        \"jon\": \"Joining Rooms\",\n        \"lev\": \"Leaving Rooms\",\n        \"inv\": \"Inviting users to Rooms\",\n        \"ban\": \"Banning users\",\n        \"snd\": \"Sending events\",\n        \"get\": \"Getting events for Rooms\",\n        \"rct\": \"Receipts\",\n        \"red\": \"Read markers\",\n        \"med\": \"Media APIs\",\n        \"cap\": \"Capabilities API\",\n        \"typ\": \"Typing API\",\n        \"psh\": \"Push APIs\",\n        \"acc\": \"Account APIs\",\n        \"eph\": \"Ephemeral Events\",\n        \"plv\": \"Power Levels\",\n        \"xxx\": \"Redaction\",\n        \"3pd\": \"Third-Party ID APIs\",\n        \"gst\": \"Guest APIs\",\n        \"ath\": \"Room Auth\",\n        \"fgt\": \"Forget APIs\",\n        \"ctx\": \"Context APIs\",\n        \"upg\": \"Room Upgrade APIs\",\n        \"tag\": \"Tagging APIs\",\n        \"sch\": \"Search APIs\",\n        \"oid\": \"OpenID API\",\n        \"std\": \"Send-to-Device APIs\",\n        \"adm\": \"Server Admin API\",\n        \"ign\": \"Ignore Users\",\n        \"udr\": \"User Directory APIs\",\n\t\t\"jso\": \"Enforced canonical JSON\",\n    },\n}\n\n# optional 'not ' with test number then anything but '#'\nre_testname = re.compile(r\"^(not )?ok [0-9]+ ([^#]+)\")\n\n# Parses lines like the following:\n#\n# SUCCESS:     ok 3 POST /register downcases capitals in usernames\n# FAIL:        not ok 54 (expected fail) POST /createRoom creates a room with the given version\n# SKIP:        ok 821 Multiple calls to /sync should not cause 500 errors # skip lack of can_post_room_receipts\n# EXPECT FAIL: not ok 822 (expected fail) Guest user can call /events on another world_readable room (SYN-606) # TODO expected fail\n#\n# Only SUCCESS lines are treated as success, the rest are not implemented.\n#\n# Returns a dict like:\n# { name: \"...\", ok: True }\ndef parse_test_line(line):\n    if not line.startswith(\"ok \") and not line.startswith(\"not ok \"):\n        return\n    re_match = re_testname.match(line)\n    test_name = re_match.groups()[1].replace(\"(expected fail) \", \"\").strip()\n    test_pass = False\n    if line.startswith(\"ok \") and not \"# skip \" in line:\n        test_pass = True\n    return {\n        \"name\": test_name,\n        \"ok\": test_pass,\n    }\n\n# Prints the stats for a complete section.\n#   header_name => \"Client-Server APIs\"\n#   gid_to_tests => { gid: { <name>: True|False }}\n#   gid_to_name  => { gid: \"Group Name\" }\n#   verbose => True|False\n# Produces:\n# Client-Server APIs: 29% (196/666 tests)\n# -------------------\n#   Registration             :  62% (20/32 tests)\n#   Login                    :   7% (1/15 tests)\n#   V1 CS APIs               :  10% (3/30 tests)\n#   ...\n# or in verbose mode:\n# Client-Server APIs: 29% (196/666 tests)\n# -------------------\n#  Registration             :  62% (20/32 tests)\n#    ✓ GET /register yields a set of flows\n#    ✓ POST /register can create a user\n#    ✓ POST /register downcases capitals in usernames\n#    ...\ndef print_stats(header_name, gid_to_tests, gid_to_name, verbose):\n    ci = os.getenv(\"CI\") # When running from GHA, this groups the subsections\n    subsections = [] # Registration: 100% (13/13 tests)\n    subsection_test_names = {} # 'subsection name': [\"✓ Test 1\", \"✓ Test 2\", \"× Test 3\"]\n    total_passing = 0\n    total_tests = 0\n    for gid, tests in gid_to_tests.items():\n        group_total = len(tests)\n        if group_total == 0:\n            continue\n        group_passing = 0\n        test_names_and_marks = []\n        for name, passing in tests.items():\n            if passing:\n                group_passing += 1\n            test_names_and_marks.append(f\"{'✅' if passing else '❌'} {name}\")\n            \n        total_tests += group_total\n        total_passing += group_passing\n        pct = \"{0:.0f}%\".format(group_passing/group_total * 100)\n        line = \"%s: %s (%d/%d tests)\" % (gid_to_name[gid].ljust(25, ' '), pct.rjust(4, ' '), group_passing, group_total)\n        subsections.append(line)\n        subsection_test_names[line] = test_names_and_marks\n\n    # avoid errors when trying to divide by 0\n    if total_tests == 0:\n        return\n    \n    pct = \"{0:.0f}%\".format(total_passing/total_tests * 100)\n    print(\"%s: %s (%d/%d tests)\" % (header_name, pct, total_passing, total_tests))\n    print(\"-\" * (len(header_name)+1))\n    for line in subsections:\n        print(\"%s%s\" % (\"::group::\" if ci and verbose else \"\", line,))\n        if verbose:\n            for test_name_and_pass_mark in subsection_test_names[line]:\n                print(\"    %s\" % (test_name_and_pass_mark,))\n            print(\"%s\" % (\"::endgroup::\" if ci else \"\"))\n    print(\"\")\n\ndef main(results_tap_path, verbose):\n    # Load up test mappings\n    test_name_to_group_id = {}\n    fed_tests = set()\n    client_tests = set()\n    with open(\"./are-we-synapse-yet.list\", \"r\") as f:\n        for line in f.readlines():\n            test_name = \" \".join(line.split(\" \")[1:]).strip()\n            groups = line.split(\" \")[0].split(\",\")\n            for gid in groups:\n                if gid == \"f\" or gid in test_mappings[\"federation_apis\"]:\n                    fed_tests.add(test_name)\n                else:\n                    client_tests.add(test_name)\n                if gid == \"f\":\n                    continue # we expect another group ID\n                test_name_to_group_id[test_name] = gid\n\n    # parse results.tap\n    summary = {\n        \"client\": {\n            # gid: {\n            #   test_name: OK\n            # }\n        },\n        \"federation\": {\n            # gid: {\n            #   test_name: OK\n            # }\n        },\n        \"appservice\": {\n            \"app\": {},\n        },\n        \"nonspec\": {\n            \"nsp\": {},\n            \"msc\": {},\n            \"unk\": {}\n        },\n    }\n    with open(results_tap_path, \"r\") as f:\n        for line in f.readlines():\n            test_result = parse_test_line(line)\n            if not test_result:\n                continue\n            name = test_result[\"name\"]\n            group_id = test_name_to_group_id.get(name)\n            if not group_id:\n                summary[\"nonspec\"][\"unk\"][name] = test_result[\"ok\"]\n            if group_id == \"nsp\":\n                summary[\"nonspec\"][\"nsp\"][name] = test_result[\"ok\"]\n            elif group_id == \"msc\":\n                summary[\"nonspec\"][\"msc\"][name] = test_result[\"ok\"]\n            elif group_id == \"app\":\n                summary[\"appservice\"][\"app\"][name] = test_result[\"ok\"]\n            elif group_id in test_mappings[\"federation_apis\"]:\n                group = summary[\"federation\"].get(group_id, {})\n                group[name] = test_result[\"ok\"]\n                summary[\"federation\"][group_id] = group\n            elif group_id in test_mappings[\"client_apis\"]:\n                group = summary[\"client\"].get(group_id, {})\n                group[name] = test_result[\"ok\"]\n                summary[\"client\"][group_id] = group\n\n    print(\"Are We Synapse Yet?\")\n    print(\"===================\")\n    print(\"\")\n    print_stats(\"Non-Spec APIs\", summary[\"nonspec\"], test_mappings, verbose)\n    print_stats(\"Client-Server APIs\", summary[\"client\"], test_mappings[\"client_apis\"], verbose)\n    print_stats(\"Federation APIs\", summary[\"federation\"], test_mappings[\"federation_apis\"], verbose)\n    print_stats(\"Application Services APIs\", summary[\"appservice\"], test_mappings, verbose)\n\n\n\nif __name__ == '__main__':\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\"tap_file\", help=\"path to results.tap\")\n    parser.add_argument(\"-v\", action=\"store_true\", help=\"show individual test names in output\")\n    args = parser.parse_args()\n    main(args.tap_file, args.v)"
        },
        {
          "name": "build-dendritejs.sh",
          "type": "blob",
          "size": 0.1708984375,
          "content": "#!/bin/sh -eu\n\nexport GIT_COMMIT=$(git rev-list -1 HEAD) && \\\nGOOS=js GOARCH=wasm go build -ldflags \"-X main.GitCommit=$GIT_COMMIT\" -o bin/main.wasm ./cmd/dendritejs-pinecone\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "clientapi",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "dendrite-sample.yaml",
          "type": "blob",
          "size": 14.7275390625,
          "content": "# This is the Dendrite configuration file.\n#\n# The configuration is split up into sections - each Dendrite component has a\n# configuration section, in addition to the \"global\" section which applies to\n# all components.\n\n# The version of the configuration file.\nversion: 2\n\n# Global Matrix configuration. This configuration applies to all components.\nglobal:\n  # The domain name of this homeserver.\n  server_name: localhost\n\n  # The path to the signing private key file, used to sign requests and events.\n  # Note that this is NOT the same private key as used for TLS! To generate a\n  # signing key, use \"./bin/generate-keys --private-key matrix_key.pem\".\n  private_key: matrix_key.pem\n\n  # The paths and expiry timestamps (as a UNIX timestamp in millisecond precision)\n  # to old signing keys that were formerly in use on this domain name. These\n  # keys will not be used for federation request or event signing, but will be\n  # provided to any other homeserver that asks when trying to verify old events.\n  old_private_keys:\n  #  If the old private key file is available:\n  #  - private_key: old_matrix_key.pem\n  #    expired_at: 1601024554498\n  #  If only the public key (in base64 format) and key ID are known:\n  #  - public_key: mn59Kxfdq9VziYHSBzI7+EDPDcBS2Xl7jeUdiiQcOnM=\n  #    key_id: ed25519:mykeyid\n  #    expired_at: 1601024554498\n\n  # How long a remote server can cache our server signing key before requesting it\n  # again. Increasing this number will reduce the number of requests made by other\n  # servers for our key but increases the period that a compromised key will be\n  # considered valid by other homeservers.\n  key_validity_period: 168h0m0s\n\n  # Global database connection pool, for PostgreSQL monolith deployments only. If\n  # this section is populated then you can omit the \"database\" blocks in all other\n  # sections. For monolith deployments using SQLite databases,\n  # you must configure the \"database\" block for each component instead.\n  database:\n    connection_string: postgresql://username:password@hostname/dendrite?sslmode=disable\n    max_open_conns: 90\n    max_idle_conns: 5\n    conn_max_lifetime: -1\n\n  # Configuration for in-memory caches. Caches can often improve performance by\n  # keeping frequently accessed items (like events, identifiers etc.) in memory\n  # rather than having to read them from the database.\n  cache:\n    # The estimated maximum size for the global cache in bytes, or in terabytes,\n    # gigabytes, megabytes or kilobytes when the appropriate 'tb', 'gb', 'mb' or\n    # 'kb' suffix is specified. Note that this is not a hard limit, nor is it a\n    # memory limit for the entire process. A cache that is too small may ultimately\n    # provide little or no benefit.\n    max_size_estimated: 1gb\n\n    # The maximum amount of time that a cache entry can live for in memory before\n    # it will be evicted and/or refreshed from the database. Lower values result in\n    # easier admission of new cache entries but may also increase database load in\n    # comparison to higher values, so adjust conservatively. Higher values may make\n    # it harder for new items to make it into the cache, e.g. if new rooms suddenly\n    # become popular.\n    max_age: 1h\n\n  # The server name to delegate server-server communications to, with optional port\n  # e.g. localhost:443\n  well_known_server_name: \"\"\n\n  # The base URL to delegate client-server communications to e.g. https://localhost\n  well_known_client_name: \"\"\n\n  # The server name to delegate sliding sync communications to, with optional port.\n  # Requires `well_known_client_name` to also be configured.\n  well_known_sliding_sync_proxy: \"\"\n\n  # Lists of domains that the server will trust as identity servers to verify third\n  # party identifiers such as phone numbers and email addresses.\n  trusted_third_party_id_servers:\n    - matrix.org\n    - vector.im\n\n  # Disables federation. Dendrite will not be able to communicate with other servers\n  # in the Matrix federation and the federation API will not be exposed.\n  disable_federation: false\n\n  # Configures the handling of presence events. Inbound controls whether we receive\n  # presence events from other servers, outbound controls whether we send presence\n  # events for our local users to other servers.\n  presence:\n    enable_inbound: false\n    enable_outbound: false\n\n  # Configures phone-home statistics reporting. These statistics contain the server\n  # name, number of active users and some information on your deployment config.\n  # We use this information to understand how Dendrite is being used in the wild.\n  report_stats:\n    enabled: false\n    endpoint: https://panopticon.matrix.org/push\n\n  # Server notices allows server admins to send messages to all users on the server.\n  server_notices:\n    enabled: false\n    # The local part, display name and avatar URL (as a mxc:// URL) for the user that\n    # will send the server notices. These are visible to all users on the deployment.\n    local_part: \"_server\"\n    display_name: \"Server Alerts\"\n    avatar_url: \"\"\n    # The room name to be used when sending server notices. This room name will\n    # appear in user clients.\n    room_name: \"Server Alerts\"\n\n  # Configuration for NATS JetStream\n  jetstream:\n    # A list of NATS Server addresses to connect to. If none are specified, an\n    # internal NATS server will be started automatically when running Dendrite in\n    # monolith mode.\n    addresses:\n    # - localhost:4222\n\n    # Disable the validation of TLS certificates of NATS. This is\n    # not recommended in production since it may allow NATS traffic\n    # to be sent to an insecure endpoint.\n    disable_tls_validation: false\n\n    # Persistent directory to store JetStream streams in. This directory should be\n    # preserved across Dendrite restarts.\n    storage_path: ./\n\n    # The prefix to use for stream names for this homeserver - really only useful\n    # if you are running more than one Dendrite server on the same NATS deployment.\n    topic_prefix: Dendrite\n\n  # Configuration for Prometheus metric collection.\n  metrics:\n    enabled: false\n    basic_auth:\n      username: metrics\n      password: metrics\n\n  # Optional DNS cache. The DNS cache may reduce the load on DNS servers if there\n  # is no local caching resolver available for use.\n  dns_cache:\n    enabled: false\n    cache_size: 256\n    cache_lifetime: \"5m\" # 5 minutes; https://pkg.go.dev/time@master#ParseDuration\n\n# Configuration for the Appservice API.\napp_service_api:\n  # Disable the validation of TLS certificates of appservices. This is\n  # not recommended in production since it may allow appservice traffic\n  # to be sent to an insecure endpoint.\n  disable_tls_validation: false\n\n  # Send the access_token query parameter with appservice requests in addition\n  # to the Authorization header. This can cause hs_tokens to be saved to logs,\n  # so it should not be enabled unless absolutely necessary.\n  legacy_auth: false\n  # Use the legacy unprefixed paths for appservice requests.\n  legacy_paths: false\n\n  # Appservice configuration files to load into this homeserver.\n  config_files:\n  #  - /path/to/appservice_registration.yaml\n\n# Configuration for the Client API.\nclient_api:\n  # Prevents new users from being able to register on this homeserver, except when\n  # using the registration shared secret below.\n  registration_disabled: true\n\n  # Prevents new guest accounts from being created. Guest registration is also\n  # disabled implicitly by setting 'registration_disabled' above.\n  guests_disabled: true\n\n  # If set, allows registration by anyone who knows the shared secret, regardless\n  # of whether registration is otherwise disabled.\n  registration_shared_secret: \"\"\n\n  # Whether to require reCAPTCHA for registration. If you have enabled registration\n  # then this is HIGHLY RECOMMENDED to reduce the risk of your homeserver being used\n  # for coordinated spam attacks.\n  enable_registration_captcha: false\n\n  # Settings for ReCAPTCHA.\n  recaptcha_public_key: \"\"\n  recaptcha_private_key: \"\"\n  recaptcha_bypass_secret: \"\"\n  \n  # To use hcaptcha.com instead of ReCAPTCHA, set the following parameters, otherwise just keep them empty.\n  # recaptcha_siteverify_api: \"https://hcaptcha.com/siteverify\"\n  # recaptcha_api_js_url: \"https://js.hcaptcha.com/1/api.js\"\n  # recaptcha_form_field: \"h-captcha-response\"\n  # recaptcha_sitekey_class: \"h-captcha\"\n\n\n  # TURN server information that this homeserver should send to clients.\n  turn:\n    turn_user_lifetime: \"5m\"\n    turn_uris:\n    #  - turn:turn.server.org?transport=udp\n    #  - turn:turn.server.org?transport=tcp\n    turn_shared_secret: \"\"\n    # If your TURN server requires static credentials, then you will need to enter\n    # them here instead of supplying a shared secret. Note that these credentials\n    # will be visible to clients!\n    # turn_username: \"\"\n    # turn_password: \"\"\n\n  # Settings for rate-limited endpoints. Rate limiting kicks in after the threshold\n  # number of \"slots\" have been taken by requests from a specific host. Each \"slot\"\n  # will be released after the cooloff time in milliseconds. Server administrators\n  # and appservice users are exempt from rate limiting by default.\n  rate_limiting:\n    enabled: true\n    threshold: 20\n    cooloff_ms: 500\n    exempt_user_ids:\n    #  - \"@user:domain.com\"\n\n# Configuration for the Federation API.\nfederation_api:\n  # How many times we will try to resend a failed transaction to a specific server. The\n  # backoff is 2**x seconds, so 1 = 2 seconds, 2 = 4 seconds, 3 = 8 seconds etc. Once\n  # the max retries are exceeded, Dendrite will no longer try to send transactions to\n  # that server until it comes back to life and connects to us again.\n  send_max_retries: 16\n\n  # Disable the validation of TLS certificates of remote federated homeservers. Do not\n  # enable this option in production as it presents a security risk!\n  disable_tls_validation: false\n\n  # Disable HTTP keepalives, which also prevents connection reuse. Dendrite will typically\n  # keep HTTP connections open to remote hosts for 5 minutes as they can be reused much\n  # more quickly than opening new connections each time. Disabling keepalives will close\n  # HTTP connections immediately after a successful request but may result in more CPU and\n  # memory being used on TLS handshakes for each new connection instead.\n  disable_http_keepalives: false\n\n  # Perspective keyservers to use as a backup when direct key fetches fail. This may\n  # be required to satisfy key requests for servers that are no longer online when\n  # joining some rooms.\n  key_perspectives:\n    - server_name: matrix.org\n      keys:\n        - key_id: ed25519:auto\n          public_key: Noi6WqcDj0QmPxCNQqgezwTlBKrfqehY1u2FyWP9uYw\n        - key_id: ed25519:a_RXGa\n          public_key: l8Hft5qXKn1vfHrg3p4+W8gELQVo8N13JkluMfmn2sQ\n\n  # This option will control whether Dendrite will prefer to look up keys directly\n  # or whether it should try perspective servers first, using direct fetches as a\n  # last resort.\n  prefer_direct_fetch: false\n\n# Configuration for the Media API.\nmedia_api:\n  # Storage path for uploaded media. May be relative or absolute.\n  base_path: ./media_store\n\n  # The maximum allowed file size (in bytes) for media uploads to this homeserver\n  # (0 = unlimited). If using a reverse proxy, ensure it allows requests at least\n  #this large (e.g. the client_max_body_size setting in nginx).\n  max_file_size_bytes: 10485760\n\n  # Whether to dynamically generate thumbnails if needed.\n  dynamic_thumbnails: false\n\n  # The maximum number of simultaneous thumbnail generators to run.\n  max_thumbnail_generators: 10\n\n  # A list of thumbnail sizes to be generated for media content.\n  thumbnail_sizes:\n    - width: 32\n      height: 32\n      method: crop\n    - width: 96\n      height: 96\n      method: crop\n    - width: 640\n      height: 480\n      method: scale\n\n# Configuration for enabling experimental MSCs on this homeserver.\nmscs:\n  mscs:\n  #  - msc2836  # (Threading, see https://github.com/matrix-org/matrix-doc/pull/2836)\n\n# Configuration for the Sync API.\nsync_api:\n  # This option controls which HTTP header to inspect to find the real remote IP\n  # address of the client. This is likely required if Dendrite is running behind\n  # a reverse proxy server.\n  # real_ip_header: X-Real-IP\n\n  # Configuration for the full-text search engine.\n  search:\n    # Whether or not search is enabled.\n    enabled: false\n\n    # The path where the search index will be created in.\n    index_path: \"./searchindex\"\n\n    # The language most likely to be used on the server - used when indexing, to\n    # ensure the returned results match expectations. A full list of possible languages\n    # can be found at https://github.com/blevesearch/bleve/tree/master/analysis/lang\n    language: \"en\"\n\n# Configuration for the User API.\nuser_api:\n  # The cost when hashing passwords on registration/login. Default: 10. Min: 4, Max: 31\n  # See https://pkg.go.dev/golang.org/x/crypto/bcrypt for more information.\n  # Setting this lower makes registration/login consume less CPU resources at the cost\n  # of security should the database be compromised. Setting this higher makes registration/login\n  # consume more CPU resources but makes it harder to brute force password hashes. This value\n  # can be lowered if performing tests or on embedded Dendrite instances (e.g WASM builds).\n  bcrypt_cost: 10\n\n  # The length of time that a token issued for a relying party from\n  # /_matrix/client/r0/user/{userId}/openid/request_token endpoint\n  # is considered to be valid in milliseconds.\n  # The default lifetime is 3600000ms (60 minutes).\n  # openid_token_lifetime_ms: 3600000\n\n  # Users who register on this homeserver will automatically be joined to the rooms listed under \"auto_join_rooms\" option.\n  # By default, any room aliases included in this list will be created as a publicly joinable room\n  # when the first user registers for the homeserver. If the room already exists,\n  # make certain it is a publicly joinable room, i.e. the join rule of the room must be set to 'public'.\n  # As Spaces are just rooms under the hood, Space aliases may also be used.\n  auto_join_rooms:\n  #  - \"#main:matrix.org\"\n\n  # The number of workers to start for the DeviceListUpdater. Defaults to 8.\n  # This only needs updating if the \"InputDeviceListUpdate\" stream keeps growing indefinitely.\n  # worker_count: 8\n\n# Configuration for Opentracing.\n# See https://github.com/matrix-org/dendrite/tree/master/docs/tracing for information on\n# how this works and how to set it up.\ntracing:\n  enabled: false\n  jaeger:\n    serviceName: \"\"\n    disabled: false\n    rpc_metrics: false\n    tags: []\n    sampler: null\n    reporter: null\n    headers: null\n    baggage_restrictions: null\n    throttler: null\n\n# Logging configuration. The \"std\" logging type controls the logs being sent to\n# stdout. The \"file\" logging type controls logs being written to a log folder on\n# the disk. Supported log levels are \"debug\", \"info\", \"warn\", \"error\".\nlogging:\n  - type: std\n    level: info\n  - type: file\n    level: info\n    params:\n      path: ./logs\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "federationapi",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 7.1826171875,
          "content": "module github.com/matrix-org/dendrite\n\nrequire (\n\tgithub.com/Arceliar/phony v0.0.0-20220903101357-530938a4b13d\n\tgithub.com/DATA-DOG/go-sqlmock v1.5.0\n\tgithub.com/MFAshby/stdemuxerhook v1.0.0\n\tgithub.com/Masterminds/semver/v3 v3.1.1\n\tgithub.com/blevesearch/bleve/v2 v2.4.0\n\tgithub.com/codeclysm/extract v2.2.0+incompatible\n\tgithub.com/cretz/bine v0.2.0\n\tgithub.com/dgraph-io/ristretto v0.1.1\n\tgithub.com/docker/docker v25.0.6+incompatible\n\tgithub.com/docker/go-connections v0.4.0\n\tgithub.com/eyedeekay/goSam v0.32.54\n\tgithub.com/eyedeekay/onramp v0.33.8\n\tgithub.com/getsentry/sentry-go v0.14.0\n\tgithub.com/gologme/log v1.3.0\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/gorilla/mux v1.8.0\n\tgithub.com/gorilla/websocket v1.5.0\n\tgithub.com/kardianos/minwinsvc v1.0.2\n\tgithub.com/lib/pq v1.10.9\n\tgithub.com/matrix-org/dugong v0.0.0-20210921133753-66e6b1c67e2e\n\tgithub.com/matrix-org/go-sqlite3-js v0.0.0-20220419092513-28aa791a1c91\n\tgithub.com/matrix-org/gomatrix v0.0.0-20220926102614-ceba4d9f7530\n\tgithub.com/matrix-org/gomatrixserverlib v0.0.0-20240910190622-2c764912ce93\n\tgithub.com/matrix-org/pinecone v0.11.1-0.20230810010612-ea4c33717fd7\n\tgithub.com/matrix-org/util v0.0.0-20221111132719-399730281e66\n\tgithub.com/mattn/go-sqlite3 v1.14.22\n\tgithub.com/nats-io/nats-server/v2 v2.10.20\n\tgithub.com/nats-io/nats.go v1.36.0\n\tgithub.com/nfnt/resize v0.0.0-20180221191011-83c6a9932646\n\tgithub.com/opentracing/opentracing-go v1.2.0\n\tgithub.com/patrickmn/go-cache v2.1.0+incompatible\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/prometheus/client_golang v1.19.1\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/stretchr/testify v1.9.0\n\tgithub.com/tidwall/gjson v1.17.0\n\tgithub.com/tidwall/sjson v1.2.5\n\tgithub.com/uber/jaeger-client-go v2.30.0+incompatible\n\tgithub.com/uber/jaeger-lib v2.4.1+incompatible\n\tgithub.com/yggdrasil-network/yggdrasil-go v0.5.6\n\tgithub.com/yggdrasil-network/yggquic v0.0.0-20240802104827-b4e97a928967\n\tgo.uber.org/atomic v1.11.0\n\tgolang.org/x/crypto v0.27.0\n\tgolang.org/x/exp v0.0.0-20240506185415-9bf2ced13842\n\tgolang.org/x/image v0.18.0\n\tgolang.org/x/mobile v0.0.0-20240520174638-fa72addaaa1b\n\tgolang.org/x/sync v0.8.0\n\tgolang.org/x/term v0.24.0\n\tgopkg.in/h2non/bimg.v1 v1.1.9\n\tgopkg.in/yaml.v2 v2.4.0\n\tgotest.tools/v3 v3.4.0\n\tmaunium.net/go/mautrix v0.15.1\n\tmodernc.org/sqlite v1.29.5\n\tnhooyr.io/websocket v1.8.7\n)\n\nrequire (\n\tgithub.com/Arceliar/ironwood v0.0.0-20240529054413-b8e59574e2b2 // indirect\n\tgithub.com/HdrHistogram/hdrhistogram-go v1.1.2 // indirect\n\tgithub.com/Microsoft/go-winio v0.5.2 // indirect\n\tgithub.com/RoaringBitmap/roaring v1.2.3 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/bits-and-blooms/bitset v1.13.0 // indirect\n\tgithub.com/bits-and-blooms/bloom/v3 v3.7.0 // indirect\n\tgithub.com/blevesearch/bleve_index_api v1.1.6 // indirect\n\tgithub.com/blevesearch/geo v0.1.20 // indirect\n\tgithub.com/blevesearch/go-faiss v1.0.13 // indirect\n\tgithub.com/blevesearch/go-porterstemmer v1.0.3 // indirect\n\tgithub.com/blevesearch/gtreap v0.1.1 // indirect\n\tgithub.com/blevesearch/mmap-go v1.0.4 // indirect\n\tgithub.com/blevesearch/scorch_segment_api/v2 v2.2.9 // indirect\n\tgithub.com/blevesearch/segment v0.9.1 // indirect\n\tgithub.com/blevesearch/snowballstem v0.9.0 // indirect\n\tgithub.com/blevesearch/upsidedown_store_api v1.0.2 // indirect\n\tgithub.com/blevesearch/vellum v1.0.10 // indirect\n\tgithub.com/blevesearch/zapx/v11 v11.3.10 // indirect\n\tgithub.com/blevesearch/zapx/v12 v12.3.10 // indirect\n\tgithub.com/blevesearch/zapx/v13 v13.3.10 // indirect\n\tgithub.com/blevesearch/zapx/v14 v14.3.10 // indirect\n\tgithub.com/blevesearch/zapx/v15 v15.3.13 // indirect\n\tgithub.com/blevesearch/zapx/v16 v16.0.12 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.2.0 // indirect\n\tgithub.com/containerd/log v0.1.0 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/distribution/reference v0.6.0 // indirect\n\tgithub.com/docker/go-units v0.5.0 // indirect\n\tgithub.com/dustin/go-humanize v1.0.1 // indirect\n\tgithub.com/eyedeekay/i2pkeys v0.33.8 // indirect\n\tgithub.com/eyedeekay/sam3 v0.33.8 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/go-logr/logr v1.4.2 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang/geo v0.0.0-20210211234256-740aa86cb551 // indirect\n\tgithub.com/golang/glog v1.0.0 // indirect\n\tgithub.com/golang/protobuf v1.5.3 // indirect\n\tgithub.com/golang/snappy v0.0.4 // indirect\n\tgithub.com/google/pprof v0.0.0-20230808223545-4887780b67fb // indirect\n\tgithub.com/h2non/filetype v1.1.3 // indirect\n\tgithub.com/hashicorp/golang-lru/v2 v2.0.7 // indirect\n\tgithub.com/hjson/hjson-go/v4 v4.4.0 // indirect\n\tgithub.com/json-iterator/go v1.1.12 // indirect\n\tgithub.com/juju/errors v1.0.0 // indirect\n\tgithub.com/klauspost/compress v1.17.9 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.19 // indirect\n\tgithub.com/minio/highwayhash v1.0.3 // indirect\n\tgithub.com/moby/term v0.0.0-20220808134915-39b0c02b01ae // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/morikuni/aec v1.0.0 // indirect\n\tgithub.com/mschoch/smat v0.2.0 // indirect\n\tgithub.com/nats-io/jwt/v2 v2.5.8 // indirect\n\tgithub.com/nats-io/nkeys v0.4.7 // indirect\n\tgithub.com/nats-io/nuid v1.0.1 // indirect\n\tgithub.com/ncruces/go-strftime v0.1.9 // indirect\n\tgithub.com/onsi/ginkgo/v2 v2.11.0 // indirect\n\tgithub.com/opencontainers/go-digest v1.0.0 // indirect\n\tgithub.com/opencontainers/image-spec v1.0.3-0.20211202183452-c5a74bcca799 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/prometheus/client_model v0.5.0 // indirect\n\tgithub.com/prometheus/common v0.48.0 // indirect\n\tgithub.com/prometheus/procfs v0.12.0 // indirect\n\tgithub.com/quic-go/quic-go v0.45.2 // indirect\n\tgithub.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec // indirect\n\tgithub.com/rs/zerolog v1.29.1 // indirect\n\tgithub.com/tidwall/match v1.1.1 // indirect\n\tgithub.com/tidwall/pretty v1.2.1 // indirect\n\tgo.etcd.io/bbolt v1.3.7 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0 // indirect\n\tgo.opentelemetry.io/otel v1.28.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.28.0 // indirect\n\tgo.opentelemetry.io/otel/metric v1.28.0 // indirect\n\tgo.opentelemetry.io/otel/sdk v1.28.0 // indirect\n\tgo.opentelemetry.io/otel/trace v1.28.0 // indirect\n\tgo.uber.org/mock v0.4.0 // indirect\n\tgolang.org/x/mod v0.17.0 // indirect\n\tgolang.org/x/net v0.29.0 // indirect\n\tgolang.org/x/sys v0.25.0 // indirect\n\tgolang.org/x/text v0.18.0 // indirect\n\tgolang.org/x/time v0.6.0 // indirect\n\tgolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d // indirect\n\tgoogle.golang.org/protobuf v1.34.2 // indirect\n\tgopkg.in/macaroon.v2 v2.1.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n\tmaunium.net/go/maulogger/v2 v2.4.1 // indirect\n\tmodernc.org/gc/v3 v3.0.0-20240107210532-573471604cb6 // indirect\n\tmodernc.org/libc v1.41.0 // indirect\n\tmodernc.org/mathutil v1.6.0 // indirect\n\tmodernc.org/memory v1.7.2 // indirect\n\tmodernc.org/strutil v1.2.0 // indirect\n\tmodernc.org/token v1.1.0 // indirect\n)\n\ngo 1.21.0\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 51.474609375,
          "content": "dmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\ngithub.com/Arceliar/ironwood v0.0.0-20240529054413-b8e59574e2b2 h1:SBdYBKeXYUUFef5wi2CMhYmXFVGiYaRpTvbki0Bu+JQ=\ngithub.com/Arceliar/ironwood v0.0.0-20240529054413-b8e59574e2b2/go.mod h1:6WP4799FX0OuWdENGQAh+0RXp9FLh0y7NZ7tM9cJyXk=\ngithub.com/Arceliar/phony v0.0.0-20220903101357-530938a4b13d h1:UK9fsWbWqwIQkMCz1CP+v5pGbsGoWAw6g4AyvMpm1EM=\ngithub.com/Arceliar/phony v0.0.0-20220903101357-530938a4b13d/go.mod h1:BCnxhRf47C/dy/e/D2pmB8NkB3dQVIrkD98b220rx5Q=\ngithub.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1 h1:UQHMgLO+TxOElx5B5HZ4hJQsoJ/PvUvKRhJHDQXO8P8=\ngithub.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=\ngithub.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\ngithub.com/DATA-DOG/go-sqlmock v1.5.0 h1:Shsta01QNfFxHCfpW6YH2STWB0MudeXXEWMr20OEh60=\ngithub.com/DATA-DOG/go-sqlmock v1.5.0/go.mod h1:f/Ixk793poVmq4qj/V1dPUg2JEAKC73Q5eFN3EC/SaM=\ngithub.com/HdrHistogram/hdrhistogram-go v1.1.2 h1:5IcZpTvzydCQeHzK4Ef/D5rrSqwxob0t8PQPMybUNFM=\ngithub.com/HdrHistogram/hdrhistogram-go v1.1.2/go.mod h1:yDgFjdqOqDEKOvasDdhWNXYg9BVp4O+o5f6V/ehm6Oo=\ngithub.com/MFAshby/stdemuxerhook v1.0.0 h1:1XFGzakrsHMv76AeanPDL26NOgwjPl/OUxbGhJthwMc=\ngithub.com/MFAshby/stdemuxerhook v1.0.0/go.mod h1:nLMI9FUf9Hz98n+yAXsTMUR4RZQy28uCTLG1Fzvj/uY=\ngithub.com/Masterminds/semver/v3 v3.1.1 h1:hLg3sBzpNErnxhQtUy/mmLR2I9foDujNK030IGemrRc=\ngithub.com/Masterminds/semver/v3 v3.1.1/go.mod h1:VPu/7SZ7ePZ3QOrcuXROw5FAcLl4a0cBrbBpGY/8hQs=\ngithub.com/Microsoft/go-winio v0.5.2 h1:a9IhgEQBCUEk6QCdml9CiJGhAws+YwffDHEMp1VMrpA=\ngithub.com/Microsoft/go-winio v0.5.2/go.mod h1:WpS1mjBmmwHBEWmogvA2mj8546UReBk4v8QkMxJ6pZY=\ngithub.com/RoaringBitmap/roaring v1.2.3 h1:yqreLINqIrX22ErkKI0vY47/ivtJr6n+kMhVOVmhWBY=\ngithub.com/RoaringBitmap/roaring v1.2.3/go.mod h1:plvDsJQpxOC5bw8LRteu/MLWHsHez/3y6cubLI4/1yE=\ngithub.com/ajstarks/svgo v0.0.0-20180226025133-644b8db467af/go.mod h1:K08gAheRH3/J6wwsYMMT4xOr94bZjxIelGM0+d/wbFw=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/bits-and-blooms/bitset v1.2.0/go.mod h1:gIdJ4wp64HaoK2YrL1Q5/N7Y16edYb8uY+O0FJTyyDA=\ngithub.com/bits-and-blooms/bitset v1.10.0/go.mod h1:7hO7Gc7Pp1vODcmWvKMRA9BNmbv6a/7QIWpPxHddWR8=\ngithub.com/bits-and-blooms/bitset v1.13.0 h1:bAQ9OPNFYbGHV6Nez0tmNI0RiEu7/hxlYJRUA0wFAVE=\ngithub.com/bits-and-blooms/bitset v1.13.0/go.mod h1:7hO7Gc7Pp1vODcmWvKMRA9BNmbv6a/7QIWpPxHddWR8=\ngithub.com/bits-and-blooms/bloom/v3 v3.7.0 h1:VfknkqV4xI+PsaDIsoHueyxVDZrfvMn56jeWUzvzdls=\ngithub.com/bits-and-blooms/bloom/v3 v3.7.0/go.mod h1:VKlUSvp0lFIYqxJjzdnSsZEw4iHb1kOL2tfHTgyJBHg=\ngithub.com/blevesearch/bleve/v2 v2.4.0 h1:2xyg+Wv60CFHYccXc+moGxbL+8QKT/dZK09AewHgKsg=\ngithub.com/blevesearch/bleve/v2 v2.4.0/go.mod h1:IhQHoFAbHgWKYavb9rQgQEJJVMuY99cKdQ0wPpst2aY=\ngithub.com/blevesearch/bleve_index_api v1.1.6 h1:orkqDFCBuNU2oHW9hN2YEJmet+TE9orml3FCGbl1cKk=\ngithub.com/blevesearch/bleve_index_api v1.1.6/go.mod h1:PbcwjIcRmjhGbkS/lJCpfgVSMROV6TRubGGAODaK1W8=\ngithub.com/blevesearch/geo v0.1.20 h1:paaSpu2Ewh/tn5DKn/FB5SzvH0EWupxHEIwbCk/QPqM=\ngithub.com/blevesearch/geo v0.1.20/go.mod h1:DVG2QjwHNMFmjo+ZgzrIq2sfCh6rIHzy9d9d0B59I6w=\ngithub.com/blevesearch/go-faiss v1.0.13 h1:zfFs7ZYD0NqXVSY37j0JZjZT1BhE9AE4peJfcx/NB4A=\ngithub.com/blevesearch/go-faiss v1.0.13/go.mod h1:jrxHrbl42X/RnDPI+wBoZU8joxxuRwedrxqswQ3xfU8=\ngithub.com/blevesearch/go-porterstemmer v1.0.3 h1:GtmsqID0aZdCSNiY8SkuPJ12pD4jI+DdXTAn4YRcHCo=\ngithub.com/blevesearch/go-porterstemmer v1.0.3/go.mod h1:angGc5Ht+k2xhJdZi511LtmxuEf0OVpvUUNrwmM1P7M=\ngithub.com/blevesearch/gtreap v0.1.1 h1:2JWigFrzDMR+42WGIN/V2p0cUvn4UP3C4Q5nmaZGW8Y=\ngithub.com/blevesearch/gtreap v0.1.1/go.mod h1:QaQyDRAT51sotthUWAH4Sj08awFSSWzgYICSZ3w0tYk=\ngithub.com/blevesearch/mmap-go v1.0.4 h1:OVhDhT5B/M1HNPpYPBKIEJaD0F3Si+CrEKULGCDPWmc=\ngithub.com/blevesearch/mmap-go v1.0.4/go.mod h1:EWmEAOmdAS9z/pi/+Toxu99DnsbhG1TIxUoRmJw/pSs=\ngithub.com/blevesearch/scorch_segment_api/v2 v2.2.9 h1:3nBaSBRFokjE4FtPW3eUDgcAu3KphBg1GP07zy/6Uyk=\ngithub.com/blevesearch/scorch_segment_api/v2 v2.2.9/go.mod h1:ckbeb7knyOOvAdZinn/ASbB7EA3HoagnJkmEV3J7+sg=\ngithub.com/blevesearch/segment v0.9.1 h1:+dThDy+Lvgj5JMxhmOVlgFfkUtZV2kw49xax4+jTfSU=\ngithub.com/blevesearch/segment v0.9.1/go.mod h1:zN21iLm7+GnBHWTao9I+Au/7MBiL8pPFtJBJTsk6kQw=\ngithub.com/blevesearch/snowballstem v0.9.0 h1:lMQ189YspGP6sXvZQ4WZ+MLawfV8wOmPoD/iWeNXm8s=\ngithub.com/blevesearch/snowballstem v0.9.0/go.mod h1:PivSj3JMc8WuaFkTSRDW2SlrulNWPl4ABg1tC/hlgLs=\ngithub.com/blevesearch/upsidedown_store_api v1.0.2 h1:U53Q6YoWEARVLd1OYNc9kvhBMGZzVrdmaozG2MfoB+A=\ngithub.com/blevesearch/upsidedown_store_api v1.0.2/go.mod h1:M01mh3Gpfy56Ps/UXHjEO/knbqyQ1Oamg8If49gRwrQ=\ngithub.com/blevesearch/vellum v1.0.10 h1:HGPJDT2bTva12hrHepVT3rOyIKFFF4t7Gf6yMxyMIPI=\ngithub.com/blevesearch/vellum v1.0.10/go.mod h1:ul1oT0FhSMDIExNjIxHqJoGpVrBpKCdgDQNxfqgJt7k=\ngithub.com/blevesearch/zapx/v11 v11.3.10 h1:hvjgj9tZ9DeIqBCxKhi70TtSZYMdcFn7gDb71Xo/fvk=\ngithub.com/blevesearch/zapx/v11 v11.3.10/go.mod h1:0+gW+FaE48fNxoVtMY5ugtNHHof/PxCqh7CnhYdnMzQ=\ngithub.com/blevesearch/zapx/v12 v12.3.10 h1:yHfj3vXLSYmmsBleJFROXuO08mS3L1qDCdDK81jDl8s=\ngithub.com/blevesearch/zapx/v12 v12.3.10/go.mod h1:0yeZg6JhaGxITlsS5co73aqPtM04+ycnI6D1v0mhbCs=\ngithub.com/blevesearch/zapx/v13 v13.3.10 h1:0KY9tuxg06rXxOZHg3DwPJBjniSlqEgVpxIqMGahDE8=\ngithub.com/blevesearch/zapx/v13 v13.3.10/go.mod h1:w2wjSDQ/WBVeEIvP0fvMJZAzDwqwIEzVPnCPrz93yAk=\ngithub.com/blevesearch/zapx/v14 v14.3.10 h1:SG6xlsL+W6YjhX5N3aEiL/2tcWh3DO75Bnz77pSwwKU=\ngithub.com/blevesearch/zapx/v14 v14.3.10/go.mod h1:qqyuR0u230jN1yMmE4FIAuCxmahRQEOehF78m6oTgns=\ngithub.com/blevesearch/zapx/v15 v15.3.13 h1:6EkfaZiPlAxqXz0neniq35my6S48QI94W/wyhnpDHHQ=\ngithub.com/blevesearch/zapx/v15 v15.3.13/go.mod h1:Turk/TNRKj9es7ZpKK95PS7f6D44Y7fAFy8F4LXQtGg=\ngithub.com/blevesearch/zapx/v16 v16.0.12 h1:Uccxvjmn+hQ6ywQP+wIiTpdq9LnAviGoryJOmGwAo/I=\ngithub.com/blevesearch/zapx/v16 v16.0.12/go.mod h1:MYnOshRfSm4C4drxx1LGRI+MVFByykJ2anDY1fxdk9Q=\ngithub.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=\ngithub.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cespare/xxhash/v2 v2.2.0 h1:DC2CZ1Ep5Y4k3ZQ899DldepgrayRUGE6BBZ/cd9Cj44=\ngithub.com/cespare/xxhash/v2 v2.2.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/codeclysm/extract v2.2.0+incompatible h1:q3wyckoA30bhUSiwdQezMqVhwd8+WGE64/GL//LtUhI=\ngithub.com/codeclysm/extract v2.2.0+incompatible/go.mod h1:2nhFMPHiU9At61hz+12bfrlpXSUrOnK+wR+KlGO4Uks=\ngithub.com/containerd/log v0.1.0 h1:TCJt7ioM2cr/tfR8GPbGf9/VRAX8D2B4PjzCpfX540I=\ngithub.com/containerd/log v0.1.0/go.mod h1:VRRf09a7mHDIRezVKTRCrOq78v577GXq3bSa3EhrzVo=\ngithub.com/coreos/go-systemd/v22 v22.5.0/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/creack/pty v1.1.11/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/cretz/bine v0.2.0 h1:8GiDRGlTgz+o8H9DSnsl+5MeBK4HsExxgl6WgzOCuZo=\ngithub.com/cretz/bine v0.2.0/go.mod h1:WU4o9QR9wWp8AVKtTM1XD5vUHkEqnf2vVSo6dBqbetI=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dgraph-io/ristretto v0.1.1 h1:6CWw5tJNgpegArSHpNHJKldNeq03FQCwYvfMVWajOK8=\ngithub.com/dgraph-io/ristretto v0.1.1/go.mod h1:S1GPSBCYCIhmVNfcth17y2zZtQT6wzkzgwUve0VDWWA=\ngithub.com/dgryski/go-farm v0.0.0-20190423205320-6a90982ecee2 h1:tdlZCpZ/P9DhczCTSixgIKmwPv6+wP5DGjqLYw5SUiA=\ngithub.com/dgryski/go-farm v0.0.0-20190423205320-6a90982ecee2/go.mod h1:SqUrOPUnsFjfmXRMNPybcSiG0BgUW2AuFH8PAnS2iTw=\ngithub.com/distribution/reference v0.6.0 h1:0IXCQ5g4/QMHHkarYzh5l+u8T3t73zM5QvfrDyIgxBk=\ngithub.com/distribution/reference v0.6.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=\ngithub.com/docker/docker v25.0.6+incompatible h1:5cPwbwriIcsua2REJe8HqQV+6WlWc1byg2QSXzBxBGg=\ngithub.com/docker/docker v25.0.6+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\ngithub.com/docker/go-connections v0.4.0 h1:El9xVISelRB7BuFusrZozjnkIM5YnzCViNKohAFqRJQ=\ngithub.com/docker/go-connections v0.4.0/go.mod h1:Gbd7IOopHjR8Iph03tsViu4nIes5XhDvyHbTtUxmeec=\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/dustin/go-humanize v1.0.0/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=\ngithub.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=\ngithub.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=\ngithub.com/eyedeekay/goSam v0.32.54 h1:Uq1F9rePGi5aiHZ8J8ZC0HRpf4hvTUR+PJvmcCBpmWU=\ngithub.com/eyedeekay/goSam v0.32.54/go.mod h1:R+prG/Xans0bG87LhtbbLSx40YiHtJNovhTHL2mEwPE=\ngithub.com/eyedeekay/i2pkeys v0.0.0-20220310055120-b97558c06ac8/go.mod h1:W9KCm9lqZ+Ozwl3dwcgnpPXAML97+I8Jiht7o5A8YBM=\ngithub.com/eyedeekay/i2pkeys v0.33.8 h1:f3llyruchFqs1QwCacBYbShArKPpMSSOqo/DVZXcfVs=\ngithub.com/eyedeekay/i2pkeys v0.33.8/go.mod h1:W9KCm9lqZ+Ozwl3dwcgnpPXAML97+I8Jiht7o5A8YBM=\ngithub.com/eyedeekay/onramp v0.33.8 h1:nc2ZGwWkeLf/GcijOMDdzI53q2mA8hCjepMyGHstcF0=\ngithub.com/eyedeekay/onramp v0.33.8/go.mod h1:YYMgClC/ck/+3lHHAdsYzmDCSmsU8tn5WMkiSy9fcLo=\ngithub.com/eyedeekay/sam3 v0.33.8 h1:emuSZ4qSyoqc1EDjIBFbJ3GXNHOXw6hjbNp2OqdOpgI=\ngithub.com/eyedeekay/sam3 v0.33.8/go.mod h1:ytbwLYLJlW6UA92Ffyc6oioWTKnGeeUMr9CLuJbtqSA=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/fogleman/gg v1.2.1-0.20190220221249-0403632d5b90/go.mod h1:R/bRT+9gY/C5z7JzPU0zXsXHKM4/ayA+zqcVNZzPa1k=\ngithub.com/frankban/quicktest v1.0.0/go.mod h1:R98jIehRai+d1/3Hv2//jOVCTJhW1VBavT6B6CuGq2k=\ngithub.com/frankban/quicktest v1.14.3 h1:FJKSZTDHjyhriyC81FLQ0LY93eSai0ZyR/ZIkd3ZUKE=\ngithub.com/frankban/quicktest v1.14.3/go.mod h1:mgiwOwqx65TmIk1wJ6Q7wvnVMocbUorkibMOrVTHZps=\ngithub.com/getlantern/context v0.0.0-20190109183933-c447772a6520/go.mod h1:L+mq6/vvYHKjCX2oez0CgEAJmbq1fbb/oNJIWQkBybY=\ngithub.com/getlantern/errors v1.0.1/go.mod h1:l+xpFBrCtDLpK9qNjxs+cHU6+BAdlBaxHqikB6Lku3A=\ngithub.com/getlantern/fdcount v0.0.0-20210503151800-5decd65b3731/go.mod h1:XZwE+iIlAgr64OFbXKFNCllBwV4wEipPx8Hlo2gZdbM=\ngithub.com/getlantern/go-socks5 v0.0.0-20171114193258-79d4dd3e2db5/go.mod h1:kGHRXch95rnGLHjER/GhhFiHvfnqNz7KqWD9kGfATHY=\ngithub.com/getlantern/golog v0.0.0-20201105130739-9586b8bde3a9/go.mod h1:ZyIjgH/1wTCl+B+7yH1DqrWp6MPJqESmwmEQ89ZfhvA=\ngithub.com/getlantern/hex v0.0.0-20190417191902-c6586a6fe0b7/go.mod h1:dD3CgOrwlzca8ed61CsZouQS5h5jIzkK9ZWrTcf0s+o=\ngithub.com/getlantern/hidden v0.0.0-20190325191715-f02dbb02be55/go.mod h1:6mmzY2kW1TOOrVy+r41Za2MxXM+hhqTtY3oBKd2AgFA=\ngithub.com/getlantern/mockconn v0.0.0-20200818071412-cb30d065a848/go.mod h1:+F5GJ7qGpQ03DBtcOEyQpM30ix4BLswdaojecFtsdy8=\ngithub.com/getlantern/mtime v0.0.0-20200417132445-23682092d1f7/go.mod h1:GfzwugvtH7YcmNIrHHizeyImsgEdyL88YkdnK28B14c=\ngithub.com/getlantern/netx v0.0.0-20190110220209-9912de6f94fd/go.mod h1:wKdY0ikOgzrWSeB9UyBVKPRhjXQ+vTb+BPeJuypUuNE=\ngithub.com/getlantern/ops v0.0.0-20190325191751-d70cb0d6f85f/go.mod h1:D5ao98qkA6pxftxoqzibIBBrLSUli+kYnJqrgBf9cIA=\ngithub.com/getlantern/ops v0.0.0-20200403153110-8476b16edcd6/go.mod h1:D5ao98qkA6pxftxoqzibIBBrLSUli+kYnJqrgBf9cIA=\ngithub.com/getsentry/sentry-go v0.14.0 h1:rlOBkuFZRKKdUnKO+0U3JclRDQKlRu5vVQtkWSQvC70=\ngithub.com/getsentry/sentry-go v0.14.0/go.mod h1:RZPJKSw+adu8PBNygiri/A98FqVr2HtRckJk9XVxJ9I=\ngithub.com/gin-contrib/sse v0.1.0 h1:Y/yl/+YNO8GZSjAhjMsSuLt29uWRFHdHYUb5lYOV9qE=\ngithub.com/gin-contrib/sse v0.1.0/go.mod h1:RHrZQHXnP2xjPF+u1gW/2HnVO7nvIa9PG3Gm+fLHvGI=\ngithub.com/gin-gonic/gin v1.6.3/go.mod h1:75u5sXoLsGZoRN5Sgbi1eraJ4GU3++wFwWzhwvtwp4M=\ngithub.com/gin-gonic/gin v1.8.1 h1:4+fr/el88TOO3ewCmQr8cx/CtZ/umlIRIs5M4NTNjf8=\ngithub.com/gin-gonic/gin v1.8.1/go.mod h1:ji8BvRH1azfM+SYow9zQ6SZMvR8qOMZHmsCuWR9tTTk=\ngithub.com/go-errors/errors v1.4.2 h1:J6MZopCL4uSllY1OfXM374weqZFFItUbrImctkmUxIA=\ngithub.com/go-errors/errors v1.4.2/go.mod h1:sIVyrIiJhuEF+Pj9Ebtd6P/rEYROXFi3BopGUQ5a5Og=\ngithub.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-playground/assert/v2 v2.0.1/go.mod h1:VDjEfimB/XKnb+ZQfWdccd7VUvScMdVu0Titje2rxJ4=\ngithub.com/go-playground/locales v0.13.0/go.mod h1:taPMhCMXrRLJO55olJkUXHZBHCxTMfnGwq/HNwmWNS8=\ngithub.com/go-playground/locales v0.14.0 h1:u50s323jtVGugKlcYeyzC0etD1HifMjqmJqb8WugfUU=\ngithub.com/go-playground/locales v0.14.0/go.mod h1:sawfccIbzZTqEDETgFXqTho0QybSa7l++s0DH+LDiLs=\ngithub.com/go-playground/universal-translator v0.17.0/go.mod h1:UkSxE5sNxxRwHyU+Scu5vgOQjsIJAF8j9muTVoKLVtA=\ngithub.com/go-playground/universal-translator v0.18.0 h1:82dyy6p4OuJq4/CByFNOn/jYrnRPArHwAcmLoJZxyho=\ngithub.com/go-playground/universal-translator v0.18.0/go.mod h1:UvRDBj+xPUEGrFYl+lu/H90nyDXpg0fqeB/AQUGNTVA=\ngithub.com/go-playground/validator/v10 v10.2.0/go.mod h1:uOYAAleCW8F/7oMFd6aG0GOhaH6EGOAJShg8Id5JGkI=\ngithub.com/go-playground/validator/v10 v10.11.1 h1:prmOlTVv+YjZjmRmNSF3VmspqJIxJWXmqUsHwfTRRkQ=\ngithub.com/go-playground/validator/v10 v10.11.1/go.mod h1:i+3WkQ1FvaUjjxh1kSvIA4dMGDBiPU55YFDl0WbKdWU=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 h1:tfuBGBXKqDEevZMzYi5KSi8KkcZtzBcTgAUUtapy0OI=\ngithub.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572/go.mod h1:9Pwr4B2jHnOSGXyyzV8ROjYa2ojvAY6HCGYYfMoC3Ls=\ngithub.com/gobwas/httphead v0.0.0-20180130184737-2c6c146eadee h1:s+21KNqlpePfkah2I+gwHF8xmJWRjooY+5248k6m4A0=\ngithub.com/gobwas/httphead v0.0.0-20180130184737-2c6c146eadee/go.mod h1:L0fX3K22YWvt/FAX9NnzrNzcI4wNYi9Yku4O0LKYflo=\ngithub.com/gobwas/pool v0.2.0 h1:QEmUOlnSjWtnpRGHF3SauEiOsy82Cup83Vf2LcMlnc8=\ngithub.com/gobwas/pool v0.2.0/go.mod h1:q8bcK0KcYlCgd9e7WYLm9LpyS+YeLd8JVDW6WezmKEw=\ngithub.com/gobwas/ws v1.0.2 h1:CoAavW/wd/kulfZmSIBt6p24n4j7tHgNVCjsfHVNUbo=\ngithub.com/gobwas/ws v1.0.2/go.mod h1:szmBTxLgaFppYjEmNtny/v3w89xOydFnnZMcgRRu/EM=\ngithub.com/goccy/go-json v0.9.11 h1:/pAaQDLHEoCq/5FFmSKBswWmK6H0e8g4159Kc/X/nqk=\ngithub.com/goccy/go-json v0.9.11/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=\ngithub.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/freetype v0.0.0-20170609003504-e2365dfdc4a0/go.mod h1:E/TSTwGwJL78qG/PmXZO1EjYhfJinVAhrmmHX6Z8B9k=\ngithub.com/golang/geo v0.0.0-20210211234256-740aa86cb551 h1:gtexQ/VGyN+VVFRXSFiguSNcXmS6rkKT+X7FdIrTtfo=\ngithub.com/golang/geo v0.0.0-20210211234256-740aa86cb551/go.mod h1:QZ0nwyI2jOfgRAoBvP+ab5aRr7c9x7lhGEJrKvBwjWI=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/glog v1.0.0 h1:nfP3RFugxnNRyKgeWd4oI1nYvXpxrx8ck8ZrcizshdQ=\ngithub.com/golang/glog v1.0.0/go.mod h1:EWib/APOK0SL3dFbYqvxE3UYd8E6s1ouQ7iEp/0LWV4=\ngithub.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.5/go.mod h1:6O5/vntMXwX2lRkT1hjjk0nAC1IDOTvTlVgjlRvqsdk=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.3 h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg=\ngithub.com/golang/protobuf v1.5.3/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/golang/snappy v0.0.4 h1:yAGX7huGHXlcLOEtBnF4w7FQwA26wojNCwOYAEhLjQM=\ngithub.com/golang/snappy v0.0.4/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/gologme/log v1.3.0 h1:l781G4dE+pbigClDSDzSaaYKtiueHCILUa/qSDsmHAo=\ngithub.com/gologme/log v1.3.0/go.mod h1:yKT+DvIPdDdDoPtqFrFxheooyVmoqi0BAsw+erN3wA4=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/pprof v0.0.0-20230808223545-4887780b67fb h1:oqpb3Cwpc7EOml5PVGMYbSGmwNui2R7i8IW83gs4W0c=\ngithub.com/google/pprof v0.0.0-20230808223545-4887780b67fb/go.mod h1:Jh3hGz2jkYak8qXPD19ryItVnUgpgeqzdkY/D0EaeuA=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gorilla/mux v1.8.0 h1:i40aqfkR1h2SlN9hojwV5ZA91wcXFOvkdNIeFDP5koI=\ngithub.com/gorilla/mux v1.8.0/go.mod h1:DVbg23sWSpFRCP0SfiEN6jmj59UnW/n46BH5rLB71So=\ngithub.com/gorilla/websocket v1.4.1/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/gorilla/websocket v1.5.0 h1:PPwGk2jz7EePpoHN/+ClbZu8SPxiqlu12wZP/3sWmnc=\ngithub.com/gorilla/websocket v1.5.0/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 h1:bkypFPDjIYGfCYD5mRBvpqxfYX1YCS1PXdKYWi8FsN0=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0/go.mod h1:P+Lt/0by1T8bfcF3z737NnSbmxQAppXMRziHUxPOC8k=\ngithub.com/h2non/filetype v1.1.3 h1:FKkx9QbD7HR/zjK1Ia5XiBsq9zdLi5Kf3zGyFTAFkGg=\ngithub.com/h2non/filetype v1.1.3/go.mod h1:319b3zT68BvV+WRj7cwy856M2ehB3HqNOt6sy1HndBY=\ngithub.com/h2non/parth v0.0.0-20190131123155-b4df798d6542 h1:2VTzZjLZBgl62/EtslCrtky5vbi9dd7HrQPQIx6wqiw=\ngithub.com/h2non/parth v0.0.0-20190131123155-b4df798d6542/go.mod h1:Ow0tF8D4Kplbc8s8sSb3V2oUCygFHVp8gC3Dn6U4MNI=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7 h1:a+bsQ5rvGLjzHuww6tVxozPZFVghXaHOwFs4luLUK2k=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7/go.mod h1:QeFd9opnmA6QUJc5vARoKUSoFhyfM2/ZepoAG6RGpeM=\ngithub.com/hjson/hjson-go/v4 v4.4.0 h1:D/NPvqOCH6/eisTb5/ztuIS8GUvmpHaLOcNk1Bjr298=\ngithub.com/hjson/hjson-go/v4 v4.4.0/go.mod h1:KaYt3bTw3zhBjYqnXkYywcYctk0A2nxeEFTse3rH13E=\ngithub.com/json-iterator/go v1.1.9/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/juju/errors v1.0.0 h1:yiq7kjCLll1BiaRuNY53MGI0+EQ3rF6GB+wvboZDefM=\ngithub.com/juju/errors v1.0.0/go.mod h1:B5x9thDqx0wIMH3+aLIMP9HjItInYWObRovoCFM5Qe8=\ngithub.com/jung-kurt/gofpdf v1.0.3-0.20190309125859-24315acbbda5/go.mod h1:7Id9E/uU8ce6rXgefFLlgrJj/GYY22cpxn+r32jIOes=\ngithub.com/kardianos/minwinsvc v1.0.2 h1:JmZKFJQrmTGa/WiW+vkJXKmfzdjabuEW4Tirj5lLdR0=\ngithub.com/kardianos/minwinsvc v1.0.2/go.mod h1:LUZNYhNmxujx2tR7FbdxqYJ9XDDoCd3MQcl1o//FWl4=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/compress v1.10.3/go.mod h1:aoV0uJVorq1K+umq18yTdKaF57EivdYsUV+/s2qKfXs=\ngithub.com/klauspost/compress v1.17.9 h1:6KIumPrER1LHsvBVuDa0r5xaG0Es51mhhB9BQB2qeMA=\ngithub.com/klauspost/compress v1.17.9/go.mod h1:Di0epgTjJY877eYKx5yC51cX2A2Vl2ibi7bDH9ttBbw=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/leodido/go-urn v1.2.0/go.mod h1:+8+nEpDfqqsY+g338gtMEUOtuK+4dEMhiQEgxpxOKII=\ngithub.com/leodido/go-urn v1.2.1 h1:BqpAaACuzVSgi/VLzGZIobT2z4v53pjosyNd9Yv6n/w=\ngithub.com/leodido/go-urn v1.2.1/go.mod h1:zt4jvISO2HfUBqxjfIshjdMTYS56ZS/qv49ictyFfxY=\ngithub.com/lib/pq v1.10.9 h1:YXG7RB+JIjhP29X+OtkiDnYaXQwpS4JEWq7dtCCRUEw=\ngithub.com/lib/pq v1.10.9/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/matrix-org/dugong v0.0.0-20210921133753-66e6b1c67e2e h1:DP5RC0Z3XdyBEW5dKt8YPeN6vZbm6OzVaGVp7f1BQRM=\ngithub.com/matrix-org/dugong v0.0.0-20210921133753-66e6b1c67e2e/go.mod h1:NgPCr+UavRGH6n5jmdX8DuqFZ4JiCWIJoZiuhTRLSUg=\ngithub.com/matrix-org/go-sqlite3-js v0.0.0-20220419092513-28aa791a1c91 h1:s7fexw2QV3YD/fRrzEDPNGgTlJlvXY0EHHnT87wF3OA=\ngithub.com/matrix-org/go-sqlite3-js v0.0.0-20220419092513-28aa791a1c91/go.mod h1:e+cg2q7C7yE5QnAXgzo512tgFh1RbQLC0+jozuegKgo=\ngithub.com/matrix-org/gomatrix v0.0.0-20220926102614-ceba4d9f7530 h1:kHKxCOLcHH8r4Fzarl4+Y3K5hjothkVW5z7T1dUM11U=\ngithub.com/matrix-org/gomatrix v0.0.0-20220926102614-ceba4d9f7530/go.mod h1:/gBX06Kw0exX1HrwmoBibFA98yBk/jxKpGVeyQbff+s=\ngithub.com/matrix-org/gomatrixserverlib v0.0.0-20240910190622-2c764912ce93 h1:FbyZ/xkeBVYHi2xfwAVaNmDhP+4HNbt9e6ucOR+jvBk=\ngithub.com/matrix-org/gomatrixserverlib v0.0.0-20240910190622-2c764912ce93/go.mod h1:HZGsVJ3bUE+DkZtufkH9H0mlsvbhEGK5CpX0Zlavylg=\ngithub.com/matrix-org/pinecone v0.11.1-0.20230810010612-ea4c33717fd7 h1:6t8kJr8i1/1I5nNttw6nn1ryQJgzVlBmSGgPiiaTdw4=\ngithub.com/matrix-org/pinecone v0.11.1-0.20230810010612-ea4c33717fd7/go.mod h1:ReWMS/LoVnOiRAdq9sNUC2NZnd1mZkMNB52QhpTRWjg=\ngithub.com/matrix-org/util v0.0.0-20221111132719-399730281e66 h1:6z4KxomXSIGWqhHcfzExgkH3Z3UkIXry4ibJS4Aqz2Y=\ngithub.com/matrix-org/util v0.0.0-20221111132719-399730281e66/go.mod h1:iBI1foelCqA09JJgPV0FYz4qA5dUXYOxMi57FxKBdd4=\ngithub.com/mattn/go-colorable v0.1.12/go.mod h1:u5H1YNBxpqRaxsYJYSkiCWKzEfiAb1Gb520KVy5xxl4=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\ngithub.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.19 h1:JITubQf0MOLdlGRuRq+jtsDlekdYPia9ZFsB8h/APPA=\ngithub.com/mattn/go-isatty v0.0.19/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-sqlite3 v1.14.22 h1:2gZY6PC6kBnID23Tichd1K+Z0oS6nE/XwU+Vz/5o4kU=\ngithub.com/mattn/go-sqlite3 v1.14.22/go.mod h1:Uh1q+B4BYcTPb+yiD3kU8Ct7aC0hY9fxUwlHK0RXw+Y=\ngithub.com/miekg/dns v1.1.50 h1:DQUfb9uc6smULcREF09Uc+/Gd46YWqJd5DbpPE9xkcA=\ngithub.com/miekg/dns v1.1.50/go.mod h1:e3IlAVfNqAllflbibAZEWOXOQ+Ynzk/dDozDxY7XnME=\ngithub.com/minio/highwayhash v1.0.3 h1:kbnuUMoHYyVl7szWjSxJnxw11k2U709jqFPPmIUyD6Q=\ngithub.com/minio/highwayhash v1.0.3/go.mod h1:GGYsuwP/fPD6Y9hMiXuapVvlIUEhFhMTh0rxU3ik1LQ=\ngithub.com/moby/term v0.0.0-20220808134915-39b0c02b01ae h1:O4SWKdcHVCvYqyDV+9CJA1fcDN2L11Bule0iFy3YlAI=\ngithub.com/moby/term v0.0.0-20220808134915-39b0c02b01ae/go.mod h1:E2VnQOmVuvZB6UYnnDB0qG5Nq/1tD9acaOpo6xmt0Kw=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/morikuni/aec v1.0.0 h1:nP9CBfwrvYnBRgY6qfDQkygYDmYwOilePFkwzv4dU8A=\ngithub.com/morikuni/aec v1.0.0/go.mod h1:BbKIizmSmc5MMPqRYbxO4ZU0S0+P200+tUnFx7PXmsc=\ngithub.com/mschoch/smat v0.2.0 h1:8imxQsjDm8yFEAVBe7azKmKSgzSkZXDuKkSq9374khM=\ngithub.com/mschoch/smat v0.2.0/go.mod h1:kc9mz7DoBKqDyiRL7VZN8KvXQMWeTaVnttLRXOlotKw=\ngithub.com/nats-io/jwt/v2 v2.5.8 h1:uvdSzwWiEGWGXf+0Q+70qv6AQdvcvxrv9hPM0RiPamE=\ngithub.com/nats-io/jwt/v2 v2.5.8/go.mod h1:ZdWS1nZa6WMZfFwwgpEaqBV8EPGVgOTDHN/wTbz0Y5A=\ngithub.com/nats-io/nats-server/v2 v2.10.20 h1:CXDTYNHeBiAKBTAIP2gjpgbWap2GhATnTLgP8etyvEI=\ngithub.com/nats-io/nats-server/v2 v2.10.20/go.mod h1:hgcPnoUtMfxz1qVOvLZGurVypQ+Cg6GXVXjG53iHk+M=\ngithub.com/nats-io/nats.go v1.36.0 h1:suEUPuWzTSse/XhESwqLxXGuj8vGRuPRoG7MoRN/qyU=\ngithub.com/nats-io/nats.go v1.36.0/go.mod h1:Ubdu4Nh9exXdSz0RVWRFBbRfrbSxOYd26oF0wkWclB8=\ngithub.com/nats-io/nkeys v0.4.7 h1:RwNJbbIdYCoClSDNY7QVKZlyb/wfT6ugvFCiKy6vDvI=\ngithub.com/nats-io/nkeys v0.4.7/go.mod h1:kqXRgRDPlGy7nGaEDMuYzmiJCIAAWDK0IMBtDmGD0nc=\ngithub.com/nats-io/nuid v1.0.1 h1:5iA8DT8V7q8WK2EScv2padNa/rTESc1KdnPw4TC2paw=\ngithub.com/nats-io/nuid v1.0.1/go.mod h1:19wcPz3Ph3q0Jbyiqsd0kePYG7A95tJPxeL+1OSON2c=\ngithub.com/ncruces/go-strftime v0.1.9 h1:bY0MQC28UADQmHmaF5dgpLmImcShSi2kHU9XLdhx/f4=\ngithub.com/ncruces/go-strftime v0.1.9/go.mod h1:Fwc5htZGVVkseilnfgOVb9mKy6w1naJmn9CehxcKcls=\ngithub.com/nfnt/resize v0.0.0-20180221191011-83c6a9932646 h1:zYyBkD/k9seD2A7fsi6Oo2LfFZAehjjQMERAvZLEDnQ=\ngithub.com/nfnt/resize v0.0.0-20180221191011-83c6a9932646/go.mod h1:jpp1/29i3P1S/RLdc7JQKbRpFeM1dOBd8T9ki5s+AY8=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=\ngithub.com/onsi/ginkgo/v2 v2.11.0 h1:WgqUCUt/lT6yXoQ8Wef0fsNn5cAuMK7+KT9UFRz2tcU=\ngithub.com/onsi/ginkgo/v2 v2.11.0/go.mod h1:ZhrRA5XmEE3x3rhlzamx/JJvujdZoJ2uvgI7kR0iZvM=\ngithub.com/onsi/gomega v1.27.8 h1:gegWiwZjBsf2DgiSbf5hpokZ98JVDMcWkUiigk6/KXc=\ngithub.com/onsi/gomega v1.27.8/go.mod h1:2J8vzI/s+2shY9XHRApDkdgPo1TKT7P2u6fXeJKFnNQ=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.0.3-0.20211202183452-c5a74bcca799 h1:rc3tiVYb5z54aKaDfakKn0dDjIyPpTtszkjuMzyt7ec=\ngithub.com/opencontainers/image-spec v1.0.3-0.20211202183452-c5a74bcca799/go.mod h1:BtxoFyWECRxE4U/7sNtV5W15zMzWCbyJoFRP3s7yZA0=\ngithub.com/opentracing/opentracing-go v1.2.0 h1:uEJPy/1a5RIPAJ0Ov+OIO8OxWu77jEv+1B0VhjKrZUs=\ngithub.com/opentracing/opentracing-go v1.2.0/go.mod h1:GxEUsuufX4nBwe+T+Wl9TAgYrxe9dPLANfrWvHYVTgc=\ngithub.com/oxtoacart/bpool v0.0.0-20190530202638-03653db5a59c/go.mod h1:X07ZCGwUbLaax7L0S3Tw4hpejzu63ZrrQiUe6W0hcy0=\ngithub.com/patrickmn/go-cache v2.1.0+incompatible h1:HRMgzkcYKYpi3C8ajMPV8OFXaaRUnok+kx1WdO15EQc=\ngithub.com/patrickmn/go-cache v2.1.0+incompatible/go.mod h1:3Qf8kWWT7OJRJbdiICTKqZju1ZixQ/KpMGzzAfe6+WQ=\ngithub.com/pelletier/go-toml/v2 v2.0.5 h1:ipoSadvV8oGUjnUbMub59IDPPwfxF694nG/jwbMiyQg=\ngithub.com/pelletier/go-toml/v2 v2.0.5/go.mod h1:OMHamSCAODeSsVrwwvcJOaoN0LIUIaFVNZzmWyNfXas=\ngithub.com/pingcap/errors v0.11.4 h1:lFuQV/oaUMGcD2tqt+01ROSmJs75VG1ToEOkZIZ4nE4=\ngithub.com/pingcap/errors v0.11.4/go.mod h1:Oi8TUi2kEtXXLMJk9l1cGmz20kV3TaQ0usTwv5KuLY8=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_golang v1.19.1 h1:wZWJDwK+NameRJuPGDhlnFgx8e8HN3XHQeLaYJFJBOE=\ngithub.com/prometheus/client_golang v1.19.1/go.mod h1:mP78NwGzrVks5S2H6ab8+ZZGJLZUq1hoULYBAYBw1Ho=\ngithub.com/prometheus/client_model v0.5.0 h1:VQw1hfvPvk3Uv6Qf29VrPF32JB6rtbgI6cYPYQjL0Qw=\ngithub.com/prometheus/client_model v0.5.0/go.mod h1:dTiFglRmd66nLR9Pv9f0mZi7B7fk5Pm3gvsjB5tr+kI=\ngithub.com/prometheus/common v0.48.0 h1:QO8U2CdOzSn1BBsmXJXduaaW+dY/5QLjfB8svtSzKKE=\ngithub.com/prometheus/common v0.48.0/go.mod h1:0/KsvlIEfPQCQ5I2iNSAWKPZziNCvRs5EC6ILDTlAPc=\ngithub.com/prometheus/procfs v0.12.0 h1:jluTpSng7V9hY0O2R9DzzJHYb2xULk9VTR1V1R/k6Bo=\ngithub.com/prometheus/procfs v0.12.0/go.mod h1:pcuDEFsWDnvcgNzo4EEweacyhjeA9Zk3cnaOZAZEfOo=\ngithub.com/quic-go/quic-go v0.45.2 h1:DfqBmqjb4ExSdxRIb/+qXhPC+7k6+DUNZha4oeiC9fY=\ngithub.com/quic-go/quic-go v0.45.2/go.mod h1:1dLehS7TIR64+vxGR70GDcatWTOtMX2PUtnKsjbTurI=\ngithub.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec h1:W09IVJc94icq4NjY3clb7Lk8O1qJ8BdBEF8z0ibU0rE=\ngithub.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec/go.mod h1:qqbHyh8v60DhA7CoWK5oRCqLrMHRGoxYCSS9EjAz6Eo=\ngithub.com/rogpeppe/go-internal v1.10.0 h1:TMyTOH3F/DB16zRVcYyreMH6GnZZrwQVAoYjRBZyWFQ=\ngithub.com/rogpeppe/go-internal v1.10.0/go.mod h1:UQnix2H7Ngw/k4C5ijL5+65zddjncjaFoBhdsK/akog=\ngithub.com/rs/xid v1.4.0/go.mod h1:trrq9SKmegXys3aeAKXMUTdJsYXVwGY3RLcfgqegfbg=\ngithub.com/rs/zerolog v1.29.1 h1:cO+d60CHkknCbvzEWxP0S9K6KqyTjrCNUy1LdQLCGPc=\ngithub.com/rs/zerolog v1.29.1/go.mod h1:Le6ESbR7hc+DP6Lt1THiV8CQSdkkNrd3R0XbEgp3ZBU=\ngithub.com/sirupsen/logrus v1.7.0/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/spf13/pflag v1.0.3/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.5.2 h1:xuMeJ0Sdp5ZMRXx/aWO6RZxdr3beISkG5/G/aIRr3pY=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/tidwall/gjson v1.14.2/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=\ngithub.com/tidwall/gjson v1.17.0 h1:/Jocvlh98kcTfpN2+JzGQWQcqrPQwDrVEMApx/M5ZwM=\ngithub.com/tidwall/gjson v1.17.0/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=\ngithub.com/tidwall/match v1.1.1 h1:+Ho715JplO36QYgwN9PGYNhgZvoUSc9X2c80KVTi+GA=\ngithub.com/tidwall/match v1.1.1/go.mod h1:eRSPERbgtNPcGhD8UCthc6PmLEQXEWd3PRB5JTxsfmM=\ngithub.com/tidwall/pretty v1.2.0/go.mod h1:ITEVvHYasfjBbM0u2Pg8T2nJnzm8xPwvNhhsoaGGjNU=\ngithub.com/tidwall/pretty v1.2.1 h1:qjsOFOWWQl+N3RsoF5/ssm1pHmJJwhjlSbZ51I6wMl4=\ngithub.com/tidwall/pretty v1.2.1/go.mod h1:ITEVvHYasfjBbM0u2Pg8T2nJnzm8xPwvNhhsoaGGjNU=\ngithub.com/tidwall/sjson v1.2.5 h1:kLy8mja+1c9jlljvWTlSazM7cKDRfJuR/bOJhcY5NcY=\ngithub.com/tidwall/sjson v1.2.5/go.mod h1:Fvgq9kS/6ociJEDnK0Fk1cpYF4FIW6ZF7LAe+6jwd28=\ngithub.com/twmb/murmur3 v1.1.6 h1:mqrRot1BRxm+Yct+vavLMou2/iJt0tNVTTC0QoIjaZg=\ngithub.com/twmb/murmur3 v1.1.6/go.mod h1:Qq/R7NUyOfr65zD+6Q5IHKsJLwP7exErjN6lyyq3OSQ=\ngithub.com/uber/jaeger-client-go v2.30.0+incompatible h1:D6wyKGCecFaSRUpo8lCVbaOOb6ThwMmTEbhRwtKR97o=\ngithub.com/uber/jaeger-client-go v2.30.0+incompatible/go.mod h1:WVhlPFC8FDjOFMMWRy2pZqQJSXxYSwNYOkTr/Z6d3Kk=\ngithub.com/uber/jaeger-lib v2.4.1+incompatible h1:td4jdvLcExb4cBISKIpHuGoVXh+dVKhn2Um6rjCsSsg=\ngithub.com/uber/jaeger-lib v2.4.1+incompatible/go.mod h1:ComeNDZlWwrWnDv8aPp0Ba6+uUTzImX/AauajbLI56U=\ngithub.com/ugorji/go v1.1.7 h1:/68gy2h+1mWMrwZFeD1kQialdSzAb432dtpeJ42ovdo=\ngithub.com/ugorji/go v1.1.7/go.mod h1:kZn38zHttfInRq0xu/PH0az30d+z6vm202qpg1oXVMw=\ngithub.com/ugorji/go/codec v1.1.7/go.mod h1:Ax+UKWsSmolVDwsd+7N3ZtXu+yMGCf907BLYF3GoBXY=\ngithub.com/ugorji/go/codec v1.2.7 h1:YPXUKf7fYbp/y8xloBqZOw2qaVggbfwMlI8WM3wZUJ0=\ngithub.com/ugorji/go/codec v1.2.7/go.mod h1:WGN1fab3R1fzQlVQTkfxVtIBhWDRqOviHU95kRgeqEY=\ngithub.com/yggdrasil-network/yggdrasil-go v0.5.6 h1:thh5YQYXQgkhkSO6v2D9Ya9fLHXfY38VfsCTZTIbIeI=\ngithub.com/yggdrasil-network/yggdrasil-go v0.5.6/go.mod h1:WAqMZ4e1QSf/EKbzfD77XXTSAIRO/0nWKCVpHsKLg40=\ngithub.com/yggdrasil-network/yggquic v0.0.0-20240802104827-b4e97a928967 h1:IxtZy4a4ZFYc1OiEv1VUc8u4Xl1WF6986wfu1DbY/SI=\ngithub.com/yggdrasil-network/yggquic v0.0.0-20240802104827-b4e97a928967/go.mod h1:RVLAuYojgYebPO/fJwWRSVlzKLXbZzZpWAStnBwiSsk=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngo.etcd.io/bbolt v1.3.7 h1:j+zJOnnEjF/kyHlDDgGnVL/AIqIJPq8UoB2GSNfkUfQ=\ngo.etcd.io/bbolt v1.3.7/go.mod h1:N9Mkw9X8x5fupy0IKsmuqVtoGDyxsaDlbk4Rd05IAQw=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0 h1:4K4tsIXefpVJtvA/8srF4V4y0akAoPHkIslgAkjixJA=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0/go.mod h1:jjdQuTGVsXV4vSs+CJ2qYDeDPf9yIJV23qlIzBm73Vg=\ngo.opentelemetry.io/otel v1.28.0 h1:/SqNcYk+idO0CxKEUOtKQClMK/MimZihKYMruSMViUo=\ngo.opentelemetry.io/otel v1.28.0/go.mod h1:q68ijF8Fc8CnMHKyzqL6akLO46ePnjkgfIMIjUIX9z4=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0 h1:3Q/xZUyC1BBkualc9ROb4G8qkH90LXEIICcs5zv1OYY=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0/go.mod h1:s75jGIWA9OfCMzF0xr+ZgfrB5FEbbV7UuYo32ahUiFI=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.28.0 h1:j9+03ymgYhPKmeXGk5Zu+cIZOlVzd9Zv7QIiyItjFBU=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.28.0/go.mod h1:Y5+XiUG4Emn1hTfciPzGPJaSI+RpDts6BnCIir0SLqk=\ngo.opentelemetry.io/otel/metric v1.28.0 h1:f0HGvSl1KRAU1DLgLGFjrwVyismPlnuU6JD6bOeuA5Q=\ngo.opentelemetry.io/otel/metric v1.28.0/go.mod h1:Fb1eVBFZmLVTMb6PPohq3TO9IIhUisDsbJoL/+uQW4s=\ngo.opentelemetry.io/otel/sdk v1.28.0 h1:b9d7hIry8yZsgtbmM0DKyPWMMUMlK9NEKuIG4aBqWyE=\ngo.opentelemetry.io/otel/sdk v1.28.0/go.mod h1:oYj7ClPUA7Iw3m+r7GeEjz0qckQRJK2B8zjcZEfu7Pg=\ngo.opentelemetry.io/otel/trace v1.28.0 h1:GhQ9cUuQGmNDd5BTCP2dAvv75RdMxEfTmYejp+lkx9g=\ngo.opentelemetry.io/otel/trace v1.28.0/go.mod h1:jPyXzNPg6da9+38HEwElrQiHlVMTnVfM3/yv2OlIHaI=\ngo.opentelemetry.io/proto/otlp v1.3.1 h1:TrMUixzpM0yuc/znrFTP9MMRh8trP93mkCiDVeXrui0=\ngo.opentelemetry.io/proto/otlp v1.3.1/go.mod h1:0X1WI4de4ZsLrrJNLAQbFeLCm3T7yBkR0XqQ7niQU+8=\ngo.uber.org/atomic v1.11.0 h1:ZvwS0R+56ePWxUNi+Atn9dWONBPp/AUETXlHW0DxSjE=\ngo.uber.org/atomic v1.11.0/go.mod h1:LUxbIzbOniOlMKjJjyPfpl4v+PKK2cNJn91OQbhoJI0=\ngo.uber.org/mock v0.4.0 h1:VcM4ZOtdbR4f6VXfiOpwpVJDL6lCReaZ6mw31wqh7KU=\ngo.uber.org/mock v0.4.0/go.mod h1:a6FSlNadKUHUa9IP5Vyt1zh4fC7uAwxMutEAscFbkZc=\ngolang.org/x/crypto v0.0.0-20180723164146-c126467f60eb/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210513164829-c07d793c2f9a/go.mod h1:P+XmwS30IXTQdn5tA2iutPOUgjI07+tq3H3K9MVA1s8=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.19.0/go.mod h1:Iy9bg/ha4yyC70EfRS8jz+B6ybOBKMaSxLj6P6oBDfU=\ngolang.org/x/crypto v0.23.0/go.mod h1:CKFgDieR+mRhux2Lsu27y0fO304Db0wZe70UKqHu0v8=\ngolang.org/x/crypto v0.27.0 h1:GXm2NjJrPaiv/h1tb2UH8QfgC/hOf/+z0p6PT8o1w7A=\ngolang.org/x/crypto v0.27.0/go.mod h1:1Xngt8kV6Dvbssa53Ziq6Eqn0HqbZi5Z6R0ZpwQzt70=\ngolang.org/x/exp v0.0.0-20180321215751-8460e604b9de/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20180807140117-3d87b88a115f/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190125153040-c74c464bbbf2/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20191030013958-a1ab85dbe136/go.mod h1:JXzH8nQsPlswgeRAPE3MuO9GYsAcnJvJ4vnMwN/5qkY=\ngolang.org/x/exp v0.0.0-20240506185415-9bf2ced13842 h1:vr/HnozRka3pE4EsMEg1lgkXJkTFJCVUX+S/ZT6wYzM=\ngolang.org/x/exp v0.0.0-20240506185415-9bf2ced13842/go.mod h1:XtvwrStGgqGPLc4cjQfWqZHG1YFdYs6swckp8vpsjnc=\ngolang.org/x/image v0.0.0-20180708004352-c73c2afc3b81/go.mod h1:ux5Hcp/YLpHSI86hEcLt0YII63i6oz57MZXIpbrjZUs=\ngolang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\ngolang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/image v0.18.0 h1:jGzIakQa/ZXI1I0Fxvaa9W7yP25TqT6cHIHn+6CqvSQ=\ngolang.org/x/image v0.18.0/go.mod h1:4yyo5vMFQjVjUcVk4jEQcU9MGy/rulF5WvUILseCM2E=\ngolang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=\ngolang.org/x/mobile v0.0.0-20240520174638-fa72addaaa1b h1:WX7nnnLfCEXg+FmdYZPai2XuP3VqCP1HZVMST0n9DF0=\ngolang.org/x/mobile v0.0.0-20240520174638-fa72addaaa1b/go.mod h1:EiXZlVfUTaAyySFVJb9rsODuiO+WXu8HrUuySb7nYFw=\ngolang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.17.0 h1:zY54UmvipHiNd+pm+m0x9KhZ9hl1/7QNMyxXbc6ICqA=\ngolang.org/x/mod v0.17.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210525063256-abc453219eb5/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=\ngolang.org/x/net v0.21.0/go.mod h1:bIjVDfnllIU7BJ2DNgfnXvpSvtn8VRwhlsaeUTyUS44=\ngolang.org/x/net v0.29.0 h1:5ORfpBpCs4HzDYoodCDBbwHzdR5UrLBZ3sOnUJmFoHo=\ngolang.org/x/net v0.29.0/go.mod h1:gLkgy8jTGERgjzMic6DS9+SP0ajcu6Xu3Orq/SpETg0=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.8.0 h1:3NFvSEYkUoMifnESzZl15y791HH1qU2xm6eCJU5ZPXQ=\ngolang.org/x/sync v0.8.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210616094352-59db8d763f22/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210927094055-39ccf1dd6fa6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20221010170243-090e33056c14/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.20.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.21.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.25.0 h1:r+8e+loiHxRqhXVl6ML1nO3l1+oFoWbnlu2Ehimmi34=\ngolang.org/x/sys v0.25.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=\ngolang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=\ngolang.org/x/term v0.20.0/go.mod h1:8UkIAJTvZgivsXaD6/pH6U9ecQzZ45awqEOzuCvwpFY=\ngolang.org/x/term v0.24.0 h1:Mh5cbb+Zk2hqqXNO7S1iTjEphVL+jb8ZWaqh/g+JWkM=\ngolang.org/x/term v0.24.0/go.mod h1:lOBK/LVxemqiMij05LGJ0tzNr8xlmwBRJ81PX6wVLH8=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/text v0.15.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/text v0.18.0 h1:XvMDiNzPAl0jr17s6W9lcaIhGUfUORdGCNsuLmPG224=\ngolang.org/x/text v0.18.0/go.mod h1:BuEKDfySbSR4drPmRPG/7iBdf8hvFMuRexcpahXilzY=\ngolang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.6.0 h1:eTDhh4ZXt5Qf0augr54TN6suAUudPcawVZeIAPU7D4U=\ngolang.org/x/time v0.6.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180525024113-a5b4c53f6e8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190206041539-40960b6deb8e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190624222133-a101b041ded4/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d h1:vU5i/LfpvrRCpgM/VPfJLg5KjxD3E+hfT1SH+d9zLwg=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d/go.mod h1:aiJjzUbINMkxbQROHiO6hDPo2LHcIPhhQsa9DLh0yGk=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngonum.org/v1/gonum v0.0.0-20180816165407-929014505bf4/go.mod h1:Y+Yx5eoAFn32cQvJDxZx5Dpnq+c3wtXuadVZAcxbbBo=\ngonum.org/v1/gonum v0.8.2/go.mod h1:oe/vMfY3deqTw+1EZJhuvEW2iwGF1bW9wwu7XCu0+v0=\ngonum.org/v1/netlib v0.0.0-20190313105609-8cb42192e0e0/go.mod h1:wa6Ws7BG/ESfp6dHfk7C6KdzKA7wR7u/rKwOGE66zvw=\ngonum.org/v1/plot v0.0.0-20190515093506-e2840ee46a6b/go.mod h1:Wt8AAjI+ypCyYX3nZBvf6cAIx93T+c/OS2HFAYskSZc=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240701130421-f6361c86f094 h1:0+ozOGcrp+Y8Aq8TLNN2Aliibms5LEzsq99ZZmAGYm0=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20240701130421-f6361c86f094/go.mod h1:fJ/e3If/Q67Mj99hin0hMhiNyCRmt6BQ2aWIJshUSJw=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240701130421-f6361c86f094 h1:BwIjyKYGsK9dMCBOorzRri8MQwmi7mT9rGHsCEinZkA=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240701130421-f6361c86f094/go.mod h1:Ue6ibwXGpU+dqIcODieyLOcgj7z8+IcskoNIgZxtrFY=\ngoogle.golang.org/grpc v1.64.0 h1:KH3VH9y/MgNQg1dE7b3XfVK0GsPSIzJwdF617gUSbvY=\ngoogle.golang.org/grpc v1.64.0/go.mod h1:oxjF8E3FBnjp+/gVFYdWacaLDx9na1aqy9oovLpxQYg=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.34.2 h1:6xV6lTsCfpGD21XK49h7MhtcApnLqkfYgPcdHftf6hg=\ngoogle.golang.org/protobuf v1.34.2/go.mod h1:qYOHts0dSfpeUzUFpOMr/WGzszTmLH+DiWniOlNbLDw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/h2non/bimg.v1 v1.1.9 h1:wZIUbeOnwr37Ta4aofhIv8OI8v4ujpjXC9mXnAGpQjM=\ngopkg.in/h2non/bimg.v1 v1.1.9/go.mod h1:PgsZL7dLwUbsGm1NYps320GxGgvQNTnecMCZqxV11So=\ngopkg.in/h2non/gock.v1 v1.1.2 h1:jBbHXgGBK/AoPVfJh5x4r/WxIrElvbLel8TCZkkZJoY=\ngopkg.in/h2non/gock.v1 v1.1.2/go.mod h1:n7UGz/ckNChHiK05rDoiC4MYSunEC/lyaUm2WWaDva0=\ngopkg.in/macaroon.v2 v2.1.0 h1:HZcsjBCzq9t0eBPMKqTN/uSN6JOm78ZJ2INbqcBQOUI=\ngopkg.in/macaroon.v2 v2.1.0/go.mod h1:OUb+TQP/OP0WOerC2Jp/3CwhIKyIa9kQjuc7H24e6/o=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngotest.tools/v3 v3.0.2/go.mod h1:3SzNCllyD9/Y+b5r9JIKQ474KzkZyqLqEfYqMsX94Bk=\ngotest.tools/v3 v3.4.0 h1:ZazjZUfuVeZGLAmlKKuyv3IKP5orXcwtOwDQH6YVr6o=\ngotest.tools/v3 v3.4.0/go.mod h1:CtbdzLSsqVhDgMtKsx03ird5YTGB3ar27v0u/yKBW5g=\nmaunium.net/go/maulogger/v2 v2.4.1 h1:N7zSdd0mZkB2m2JtFUsiGTQQAdP0YeFWT7YMc80yAL8=\nmaunium.net/go/maulogger/v2 v2.4.1/go.mod h1:omPuYwYBILeVQobz8uO3XC8DIRuEb5rXYlQSuqrbCho=\nmaunium.net/go/mautrix v0.15.1 h1:pmCtMjYRpd83+2UL+KTRFYQo5to0373yulimvLK+1k0=\nmaunium.net/go/mautrix v0.15.1/go.mod h1:icQIrvz2NldkRLTuzSGzmaeuMUmw+fzO7UVycPeauN8=\nmodernc.org/fileutil v1.3.0 h1:gQ5SIzK3H9kdfai/5x41oQiKValumqNTDXMvKo62HvE=\nmodernc.org/fileutil v1.3.0/go.mod h1:XatxS8fZi3pS8/hKG2GH/ArUogfxjpEKs3Ku3aK4JyQ=\nmodernc.org/gc/v3 v3.0.0-20240107210532-573471604cb6 h1:5D53IMaUuA5InSeMu9eJtlQXS2NxAhyWQvkKEgXZhHI=\nmodernc.org/gc/v3 v3.0.0-20240107210532-573471604cb6/go.mod h1:Qz0X07sNOR1jWYCrJMEnbW/X55x206Q7Vt4mz6/wHp4=\nmodernc.org/libc v1.41.0 h1:g9YAc6BkKlgORsUWj+JwqoB1wU3o4DE3bM3yvA3k+Gk=\nmodernc.org/libc v1.41.0/go.mod h1:w0eszPsiXoOnoMJgrXjglgLuDy/bt5RR4y3QzUUeodY=\nmodernc.org/mathutil v1.6.0 h1:fRe9+AmYlaej+64JsEEhoWuAYBkOtQiMEU7n/XgfYi4=\nmodernc.org/mathutil v1.6.0/go.mod h1:Ui5Q9q1TR2gFm0AQRqQUaBWFLAhQpCwNcuhBOSedWPo=\nmodernc.org/memory v1.7.2 h1:Klh90S215mmH8c9gO98QxQFsY+W451E8AnzjoE2ee1E=\nmodernc.org/memory v1.7.2/go.mod h1:NO4NVCQy0N7ln+T9ngWqOQfi7ley4vpwvARR+Hjw95E=\nmodernc.org/sqlite v1.29.5 h1:8l/SQKAjDtZFo9lkJLdk8g9JEOeYRG4/ghStDCCTiTE=\nmodernc.org/sqlite v1.29.5/go.mod h1:S02dvcmm7TnTRvGhv8IGYyLnIt7AS2KPaB1F/71p75U=\nmodernc.org/strutil v1.2.0 h1:agBi9dp1I+eOnxXeiZawM8F4LawKv4NzGWSaLfyeNZA=\nmodernc.org/strutil v1.2.0/go.mod h1:/mdcBmfOibveCTBxUl5B5l6W+TTH1FXPLHZE6bTosX0=\nmodernc.org/token v1.1.0 h1:Xl7Ap9dKaEs5kLoOQeQmPWevfnk/DM5qcLcYlA8ys6Y=\nmodernc.org/token v1.1.0/go.mod h1:UGzOrNV1mAFSEB63lOFHIpNRUVMvYTc6yu1SMY/XTDM=\nnhooyr.io/websocket v1.8.7 h1:usjR2uOr/zjjkVMy0lW+PPohFok7PCow5sDjLgX4P4g=\nnhooyr.io/websocket v1.8.7/go.mod h1:B70DZP8IakI65RVQ51MsWP/8jndNma26DVA/nFSCgW0=\nrsc.io/pdf v0.1.1/go.mod h1:n8OzWcQ6Sp37PL01nO98y4iUCRdTGarVfzxY20ICaU4=\n"
        },
        {
          "name": "helm",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "mediaapi",
          "type": "tree",
          "content": null
        },
        {
          "name": "relayapi",
          "type": "tree",
          "content": null
        },
        {
          "name": "roomserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "run-sytest.sh",
          "type": "blob",
          "size": 1.8994140625,
          "content": "#!/usr/bin/env bash\n#\n# Runs SyTest either from Docker Hub, or from ../sytest. If it's run\n# locally, the Docker image is rebuilt first.\n#\n# Logs are stored in ../sytestout/logs.\n\nset -e\nset -o pipefail\n\nmain() {\n    local tag=buster\n    local base_image=debian:$tag\n    local runargs=()\n\n    cd \"$(dirname \"$0\")\"\n\n    if [ -d ../sytest ]; then\n        local tmpdir\n        tmpdir=\"$(mktemp -d -t run-systest.XXXXXXXXXX)\"\n        trap \"rm -r '$tmpdir'\" EXIT\n\n        if [ -z \"$DISABLE_BUILDING_SYTEST\" ]; then\n            echo \"Re-building ../sytest Docker images...\"\n\n            local status\n            (\n                cd ../sytest\n\n                docker build -f docker/base.Dockerfile --build-arg BASE_IMAGE=\"$base_image\" --tag matrixdotorg/sytest:\"$tag\" .\n                docker build -f docker/dendrite.Dockerfile --build-arg SYTEST_IMAGE_TAG=\"$tag\" --tag matrixdotorg/sytest-dendrite:latest .\n            ) &>\"$tmpdir/buildlog\" || status=$?\n            if (( status != 0 )); then\n                # Docker is very verbose, and we don't really care about\n                # building SyTest. So we accumulate and only output on\n                # failure.\n                cat \"$tmpdir/buildlog\" >&2\n                return $status\n            fi\n        fi\n\n        runargs+=( -v \"$PWD/../sytest:/sytest:ro\" )\n    fi\n    if [ -n \"$SYTEST_POSTGRES\" ]; then\n        runargs+=( -e POSTGRES=1 )\n    fi\n\n    local sytestout=$PWD/../sytestout\n    mkdir -p \"$sytestout\"/{logs,cache/go-build,cache/go-pkg}\n    docker run \\\n           --rm \\\n           --name \"sytest-dendrite-${LOGNAME}\" \\\n           -e LOGS_USER=$(id -u) \\\n           -e LOGS_GROUP=$(id -g) \\\n           -v \"$PWD:/src/:ro\" \\\n           -v \"$sytestout/logs:/logs/\" \\\n           -v \"$sytestout/cache/go-build:/root/.cache/go-build\" \\\n           -v \"$sytestout/cache/go-pkg:/gopath/pkg\" \\\n           \"${runargs[@]}\" \\\n           matrixdotorg/sytest-dendrite:latest \"$@\"\n}\n\nmain \"$@\"\n"
        },
        {
          "name": "setup",
          "type": "tree",
          "content": null
        },
        {
          "name": "show-expected-fail-tests.sh",
          "type": "blob",
          "size": 3.291015625,
          "content": "#!/usr/bin/env bash\n#\n# Parses a results.tap file from SyTest output and a file containing test names (a test whitelist)\n# and checks whether a test name that exists in the whitelist (that should pass), failed or not.\n#\n# An optional blacklist file can be added, also containing test names, where if a test name is\n# present, the script will not error even if the test is in the whitelist file and failed\n#\n# For each of these files, lines starting with '#' are ignored.\n#\n# Usage ./show-expected-fail-tests.sh results.tap whitelist [blacklist]\n\nresults_file=$1\nwhitelist_file=$2\nblacklist_file=$3\n\nfail_build=0\n\nif [ $# -lt 2 ]; then\n\techo \"Usage: $0 results.tap whitelist [blacklist]\"\n\texit 1\nfi\n\nif [ ! -f \"$results_file\" ]; then\n\techo \"ERROR: Specified results file '${results_file}' doesn't exist.\"\n\tfail_build=1\nfi\n\nif [ ! -f \"$whitelist_file\" ]; then\n\techo \"ERROR: Specified test whitelist '${whitelist_file}' doesn't exist.\"\n\tfail_build=1\nfi\n\nblacklisted_tests=()\n\n# Check if a blacklist file was provided\nif [ $# -eq 3 ]; then\n\t# Read test blacklist file\n\tif [ ! -f \"$blacklist_file\" ]; then\n\t\techo \"ERROR: Specified test blacklist file '${blacklist_file}' doesn't exist.\"\n\t\tfail_build=1\n\tfi\n\n\t# Read each line, ignoring those that start with '#'\n\tblacklisted_tests=\"\"\n\tsearch_non_comments=$(grep -v '^#' ${blacklist_file})\n\twhile read -r line ; do\n\t\t# Record the blacklisted test name\n\t\tblacklisted_tests+=(\"${line}\")\n\tdone <<< \"${search_non_comments}\"  # This allows us to edit blacklisted_tests in the while loop\nfi\n\n[ \"$fail_build\" = 0 ] || exit 1\n\npassed_but_expected_fail=$(grep ' # TODO passed but expected fail' ${results_file} | sed -E 's/^ok [0-9]+ (\\(expected fail\\) )?//' | sed -E 's/( \\([0-9]+ subtests\\))? # TODO passed but expected fail$//')\ntests_to_add=\"\"\nalready_in_whitelist=\"\"\n\nwhile read -r test_name; do\n\t# Ignore empty lines\n\t[ \"${test_name}\" = \"\" ] && continue\n\n\tgrep \"^${test_name}\" \"${whitelist_file}\" > /dev/null 2>&1\n\tif [ \"$?\" != \"0\" ]; then\n\t\t# Check if this test name is blacklisted\n\t\tif printf '%s\\n' \"${blacklisted_tests[@]}\" | grep -q -P \"^${test_name}$\"; then\n\t\t\t# Don't notify about this test\n\t\t\tcontinue\n\t\tfi\n\n\t\t# Append this test_name to the existing list\n\t\ttests_to_add=\"${tests_to_add}${test_name}\\n\"\n\t\tfail_build=1\n\telse\n\t\talready_in_whitelist=\"${already_in_whitelist}${test_name}\\n\"\n\tfi\ndone <<< \"${passed_but_expected_fail}\"\n\n# TODO: Check that the same test doesn't exist in both the whitelist and blacklist\n# TODO: Check that the same test doesn't appear twice in the whitelist|blacklist\n\n# Trim test output strings\ntests_to_add=$(IFS=$'\\n' echo \"${tests_to_add[*]%%'\\n'}\")\nalready_in_whitelist=$(IFS=$'\\n' echo \"${already_in_whitelist[*]%%'\\n'}\")\n\n# Format output with markdown for buildkite annotation rendering purposes\nif [ -n \"${tests_to_add}\" ] && [ -n \"${already_in_whitelist}\" ]; then\n\techo \"### 📜 SyTest Whitelist Maintenance\"\nfi\n\nif [ -n \"${tests_to_add}\" ]; then\n\techo \"::error::The following tests passed but are not present in \\`$2\\`. Please append them to the file:\"\n\techo \"::group::Passing tests\"\n  echo -e \"${tests_to_add}\"\n  echo \"::endgroup::\"\nfi\n\nif [ -n \"${already_in_whitelist}\" ]; then\n\techo \"::warning::Tests in the whitelist still marked as **expected fail**:\"\n\techo \"::group::Still marked as expected fail\"\n  echo -e \"${already_in_whitelist}\"\n  echo \"::endgroup::\"\nfi\n\nexit ${fail_build}\n"
        },
        {
          "name": "syncapi",
          "type": "tree",
          "content": null
        },
        {
          "name": "sytest-blacklist",
          "type": "blob",
          "size": 0.95703125,
          "content": "# Blacklisted due to https://github.com/matrix-org/matrix-spec/issues/942\nThe only membership state included in a gapped incremental sync is for senders in the timeline\n\n# Flakey\nAS-ghosted users can use rooms themselves\nAS-ghosted users can use rooms via AS\nEvents in rooms with AS-hosted room aliases are sent to AS server\nInviting an AS-hosted user asks the AS server\nAccesing an AS-hosted room alias asks the AS server\nIf user leaves room, remote user changes device and rejoins we see update in /sync and /keys/changes\nNew federated private chats get full presence information (SYN-115)\n\n# This will fail in HTTP API mode, so blacklisted for now\nIf a device list update goes missing, the server resyncs on the next one\n\n# Might be a bug in the test because leaves do appear :-(\nLeaves are present in non-gapped incremental syncs\n\n# We don't have any state to calculate m.room.guest_access when accepting invites\nGuest users can accept invites to private rooms over federation"
        },
        {
          "name": "sytest-whitelist",
          "type": "blob",
          "size": 41.27734375,
          "content": "GET /register yields a set of flows\nPOST /register can create a user\nPOST /register downcases capitals in usernames\nPOST /register rejects registration of usernames with '!'\nPOST /register rejects registration of usernames with '\"'\nPOST /register rejects registration of usernames with ':'\nPOST /register rejects registration of usernames with '?'\nPOST /register rejects registration of usernames with '\\'\nPOST /register rejects registration of usernames with '@'\nPOST /register rejects registration of usernames with '['\nPOST /register rejects registration of usernames with ']'\nPOST /register rejects registration of usernames with '{'\nPOST /register rejects registration of usernames with '|'\nPOST /register rejects registration of usernames with '}'\nPOST /register rejects registration of usernames with '£'\nPOST /register rejects registration of usernames with 'é'\nPOST /register rejects registration of usernames with '\\n'\nPOST /register rejects registration of usernames with '''\nPOST /register allows registration of usernames with 'q'\nPOST /register allows registration of usernames with '3'\nPOST /register allows registration of usernames with '.'\nPOST /register allows registration of usernames with '_'\nPOST /register allows registration of usernames with '='\nPOST /register allows registration of usernames with '-'\nPOST /register allows registration of usernames with '/'\nGET /login yields a set of flows\nPOST /login can log in as a user\nPOST /login returns the same device_id as that in the request\nPOST /login can log in as a user with just the local part of the id\nPOST /login as non-existing user is rejected\nPOST /login wrong password is rejected\nGET /events initially\nGET /initialSync initially\nVersion responds 200 OK with valid structure\nPUT /profile/:user_id/displayname sets my name\nGET /profile/:user_id/displayname publicly accessible\nPUT /profile/:user_id/avatar_url sets my avatar\nGET /profile/:user_id/avatar_url publicly accessible\nGET /device/{deviceId} gives a 404 for unknown devices\nPUT /device/{deviceId} gives a 404 for unknown devices\nGET /device/{deviceId}\nGET /devices\nPUT /device/{deviceId} updates device fields\nDELETE /device/{deviceId}\nDELETE /device/{deviceId} requires UI auth user to match device owner\nDELETE /device/{deviceId} with no body gives a 401\nPOST /createRoom makes a public room\nPOST /createRoom makes a private room\nPOST /createRoom makes a private room with invites\nPOST /createRoom makes a room with a name\nPOST /createRoom makes a room with a topic\nCan /sync newly created room\nGET /rooms/:room_id/state/m.room.member/:user_id fetches my membership\nGET /rooms/:room_id/state/m.room.power_levels fetches powerlevels\nPOST /join/:room_alias can join a room\nPOST /join/:room_id can join a room\nPOST /join/:room_id can join a room with custom content\nPOST /join/:room_alias can join a room with custom content\nPOST /rooms/:room_id/join can join a room\nPOST /rooms/:room_id/leave can leave a room\nPOST /rooms/:room_id/invite can send an invite\nPOST /rooms/:room_id/ban can ban a user\nPOST /rooms/:room_id/send/:event_type sends a message\nPUT /rooms/:room_id/send/:event_type/:txn_id sends a message\nPUT /rooms/:room_id/send/:event_type/:txn_id deduplicates the same txn id\nGET /rooms/:room_id/state/m.room.power_levels can fetch levels\nPUT /rooms/:room_id/state/m.room.power_levels can set levels\nPUT power_levels should not explode if the old power levels were empty\nGET /rooms/:room_id/state/m.room.member/:user_id?format=event fetches my membership event\nGET /rooms/:room_id/joined_members fetches my membership\nBoth GET and PUT work\nPOST /rooms/:room_id/read_markers can create read marker\nUser signups are forbidden from starting with '_'\nRequest to logout with invalid an access token is rejected\nRequest to logout without an access token is rejected\nRoom creation reports m.room.create to myself\nRoom creation reports m.room.member to myself\nOutbound federation rejects send_join responses with no m.room.create event\nOutbound federation rejects m.room.create events with an unknown room version\nInvited user can see room metadata\n# Blacklisted because these tests call /v3/events which we don't implement\n# New room members see their own join event\n# Existing members see new members' join events\nsetting 'm.room.power_levels' respects room powerlevel\nUnprivileged users can set m.room.topic if it only needs level 0\nUsers cannot set ban powerlevel higher than their own\nUsers cannot set kick powerlevel higher than their own\nUsers cannot set redact powerlevel higher than their own\nCan get rooms/{roomId}/members for a departed room (SPEC-216)\n3pid invite join with wrong but valid signature are rejected\n3pid invite join valid signature but revoked keys are rejected\n3pid invite join valid signature but unreachable ID server are rejected\nRoom members can join a room with an overridden displayname\nReal non-joined user cannot call /events on shared room\nReal non-joined user cannot call /events on invited room\nReal non-joined user cannot call /events on joined room\nReal non-joined user cannot call /events on default room\nReal non-joined users can get state for world_readable rooms\nReal non-joined users can get individual state for world_readable rooms\n#Real non-joined users can get individual state for world_readable rooms after leaving\nReal non-joined users cannot send messages to guest_access rooms if not joined\nCan't forget room you're still in\nCan get rooms/{roomId}/members\nCan create filter\nCan download filter\nLazy loading parameters in the filter are strictly boolean\nCan sync\nCan sync a joined room\nNewly joined room is included in an incremental sync\nUser is offline if they set_presence=offline in their sync\nChanges to state are included in an incremental sync\nA change to displayname should appear in incremental /sync\nRooms a user is invited to appear in an initial sync\nRooms a user is invited to appear in an incremental sync\nSync can be polled for updates\nSync is woken up for leaves\nNewly left rooms appear in the leave section of incremental sync\nRooms can be created with an initial invite list (SYN-205)\nWe should see our own leave event, even if history_visibility is restricted (SYN-662)\nWe should see our own leave event when rejecting an invite, even if history_visibility is restricted (riot-web/3462)\nNewly left rooms appear in the leave section of gapped sync\nPreviously left rooms don't appear in the leave section of sync\nLeft rooms appear in the leave section of full state sync\nNewly banned rooms appear in the leave section of incremental sync\nNewly banned rooms appear in the leave section of incremental sync\nlocal user can join room with version 1\nUser can invite local user to room with version 1\nCan upload device keys\nShould reject keys claiming to belong to a different user\nCan query device keys using POST\nCan query remote device keys using POST\nCan query specific device keys using POST\nquery for user with no keys returns empty key dict\nCan claim one time key using POST\nCan claim remote one time key using POST\nLocal device key changes appear in v2 /sync\nNew users appear in /keys/changes\nLocal delete device changes appear in v2 /sync\nLocal new device changes appear in v2 /sync\nLocal update device changes appear in v2 /sync\nGet left notifs for other users in sync and /keys/changes when user leaves\nLocal device key changes get to remote servers\nServer correctly handles incoming m.device_list_update\nIf remote user leaves room, changes device and rejoins we see update in sync\nIf remote user leaves room, changes device and rejoins we see update in /keys/changes\nIf remote user leaves room we no longer receive device updates\nServer correctly resyncs when client query keys and there is no remote cache\nServer correctly resyncs when server leaves and rejoins a room\nDevice list doesn't change if remote server is down\nCan add account data\nCan add account data to room\nCan get account data without syncing\nCan get room account data without syncing\nLatest account data appears in v2 /sync\nNew account data appears in incremental v2 /sync\nChecking local federation server\nInbound federation can query profile data\nOutbound federation can send room-join requests\nOutbound federation can send events\n# SyTest currently only implements the v1 endpoints for /send_join and /send_leave,\n# whereas Dendrite only supports the v2 endpoints for those, so let's ignore this\n# test for now.\n#Inbound federation can backfill events\n# SyTest currently only implements the v1 endpoints for /send_join and /send_leave,\n# whereas Dendrite only supports the v2 endpoints for those, so let's ignore this\n# test for now.\n#Backfill checks the events requested belong to the room\nCan upload without a file name\nCan download without a file name locally\nCan upload with ASCII file name\nCan send image in room message\nAS cannot create users outside its own namespace\nRegular users cannot register within the AS namespace\nAS can't set displayname for random users\nAS user (not ghost) can join room without registering, with user_id query param\nChanging the actions of an unknown default rule fails with 404\nChanging the actions of an unknown rule fails with 404\nEnabling an unknown default rule fails with 404\nTrying to get push rules with unknown rule_id fails with 404\nEvents come down the correct room\n# SyTest currently only implements the v1 endpoints for /send_join and /send_leave,\n# whereas Dendrite only supports the v2 endpoints for those, so let's ignore this\n# test for now.\n#Inbound federation can receive v1 room-join requests\nTyping events appear in initial sync\nTyping events appear in incremental sync\nTyping events appear in gapped sync\nInbound federation of state requires event_id as a mandatory paramater\nInbound federation of state_ids requires event_id as a mandatory paramater\nPOST /register returns the same device_id as that in the request\nPOST /createRoom with creation content\nUser can create and send/receive messages in a room with version 1\nPOST /createRoom ignores attempts to set the room version via creation_content\nInbound federation rejects remote attempts to join local users to rooms\nInbound federation rejects remote attempts to kick local users to rooms\nFull state sync includes joined rooms\nA message sent after an initial sync appears in the timeline of an incremental sync.\nCan add tag\nCan remove tag\nCan list tags for a room\nTags appear in an initial v2 /sync\nNewly updated tags appear in an incremental v2 /sync\nDeleted tags appear in an incremental v2 /sync\n/event/ on non world readable room does not work\nOutbound federation can query profile data\n/event/ on joined room works\n/event/ does not allow access to events before the user joined\nFederation key API allows unsigned requests for keys\nGET /publicRooms lists rooms\nGET /publicRooms includes avatar URLs\nCan paginate public room list\nGET /publicRooms lists newly-created room\nName/topic keys are correct\nGET /directory/room/:room_alias yields room ID\nPUT /directory/room/:room_alias creates alias\nRoom aliases can contain Unicode\nCreators can delete alias\nRegular users cannot create room aliases within the AS namespace\nDeleting a non-existent alias should return a 404\nUsers can't delete other's aliases\nOutbound federation can query room alias directory\nCan deactivate account\nCan't deactivate account with wrong password\nAfter deactivating account, can't log in with password\nAfter deactivating account, can't log in with an email\nRemote room alias queries can handle Unicode\nNewly joined room is included in an incremental sync after invite\nInbound /v1/make_join rejects remote attempts to join local users to rooms\nLocal room members see posted message events\nFetching eventstream a second time doesn't yield the message again\nLocal non-members don't see posted message events\nRemote room members also see posted message events\nLazy loading parameters in the filter are strictly boolean\nremote user can join room with version 1\nInbound federation can query room alias directory\nOutbound federation can query v2 /send_join\nInbound federation can receive v2 /send_join\nMessage history can be paginated\nBackfill works correctly with history visibility set to joined\nGuest user cannot call /events globally\nGuest user can set display names\nGuest user cannot upgrade other users\nGuest non-joined user cannot call /events on shared room\nGuest non-joined user cannot call /events on invited room\nGuest non-joined user cannot call /events on joined room\nGuest non-joined user cannot call /events on default room\nGuest non-joined users can get state for world_readable rooms\nGuest non-joined users can get individual state for world_readable rooms\nGuest non-joined users cannot room initalSync for non-world_readable rooms\nGuest non-joined users can get individual state for world_readable rooms after leaving\nGuest non-joined users cannot send messages to guest_access rooms if not joined\nReal non-joined users cannot room initalSync for non-world_readable rooms\nPush rules come down in an initial /sync\nRegular users can add and delete aliases in the default room configuration\nGET /v3/capabilities is not public\nGET /joined_rooms lists newly-created room\n/joined_rooms returns only joined rooms\nMessage history can be paginated over federation\nGET /rooms/:room_id/messages returns a message\nRemote user can backfill in a room with version 1\nPOST /createRoom creates a room with the given version\nPOST /createRoom rejects attempts to create rooms with numeric versions\nPOST /createRoom rejects attempts to create rooms with unknown versions\nRegular users can add and delete aliases when m.room.aliases is restricted\nUser can create and send/receive messages in a room with version 2\nlocal user can join room with version 2\nremote user can join room with version 2\nUser can invite local user to room with version 2\nRemote user can backfill in a room with version 2\nInbound federation accepts attempts to join v2 rooms from servers with support\nOutbound federation can send invites via v2 API\nOutbound federation can send invites via v1 API\nInbound federation can receive invites via v1 API\nInbound federation can receive invites via v2 API\nUser can create and send/receive messages in a room with version 3\nlocal user can join room with version 3\nRemote user can backfill in a room with version 3\nUser can create and send/receive messages in a room with version 4\nlocal user can join room with version 4\nremote user can join room with version 3\nremote user can join room with version 4\nRemote user can backfill in a room with version 4\nOutbound federation can send invites via v2 API\nUser can invite local user to room with version 3\nUser can invite local user to room with version 4\nA pair of servers can establish a join in a v2 room\nCan logout all devices\nState from remote users is included in the timeline in an incremental sync\nUser can invite remote user to room with version 1\nUser can invite remote user to room with version 2\nUser can invite remote user to room with version 3\nUser can invite remote user to room with version 4\nUser can create and send/receive messages in a room with version 5\nlocal user can join room with version 5\nUser can invite local user to room with version 5\nremote user can join room with version 5\nUser can invite remote user to room with version 5\nRemote user can backfill in a room with version 5\nInbound federation can receive v1 /send_join\nInbound federation can get state for a room\nInbound federation of state requires event_id as a mandatory paramater\nInbound federation can get state_ids for a room\nInbound federation of state_ids requires event_id as a mandatory paramater\nFederation rejects inbound events where the prev_events cannot be found\nAlternative server names do not cause a routing loop\nEvents whose auth_events are in the wrong room do not mess up the room state\nInbound federation can return events\nInbound federation can return missing events for world_readable visibility\nInbound federation can return missing events for invited visibility\nInbound federation can get public room list\nPUT /rooms/:room_id/redact/:event_id/:txn_id as power user redacts message\nPUT /rooms/:room_id/redact/:event_id/:txn_id as original message sender redacts message\nPUT /rooms/:room_id/redact/:event_id/:txn_id as random user does not redact message\nPUT /redact disallows redaction of event in different room\nAn event which redacts itself should be ignored\nA pair of events which redact each other should be ignored\nRedaction of a redaction redacts the redaction reason\nAn event which redacts an event in a different room should be ignored\nCan receive redactions from regular users over federation in room version 1\nCan receive redactions from regular users over federation in room version 2\nCan receive redactions from regular users over federation in room version 3\nCan receive redactions from regular users over federation in room version 4\nCan receive redactions from regular users over federation in room version 5\nCan receive redactions from regular users over federation in room version 6\nOutbound federation can backfill events\nInbound federation can backfill events\nBackfill checks the events requested belong to the room\nBackfilled events whose prev_events are in a different room do not allow cross-room back-pagination\nOutbound federation can request missing events\nNew room members see their own join event\nExisting members see new members' join events\nInbound federation can receive events\nInbound federation can receive redacted events\nCan logout current device\nCan send a message directly to a device using PUT /sendToDevice\nCan recv a device message using /sync\nCan recv device messages until they are acknowledged\nDevice messages with the same txn_id are deduplicated\nDevice messages wake up /sync\nCan recv device messages over federation\nDevice messages over federation wake up /sync\nCan send messages with a wildcard device id\nCan send messages with a wildcard device id to two devices\nWildcard device messages wake up /sync\nWildcard device messages over federation wake up /sync\nCan send a to-device message to two users which both receive it using /sync\nUser can create and send/receive messages in a room with version 6\nlocal user can join room with version 6\nUser can invite local user to room with version 6\nremote user can join room with version 6\nUser can invite remote user to room with version 6\nRemote user can backfill in a room with version 6\nInbound: send_join rejects invalid JSON for room version 6\nOutbound federation rejects backfill containing invalid JSON for events in room version 6\nInvalid JSON integers\nInvalid JSON special values\nInvalid JSON floats\nOutbound federation will ignore a missing event with bad JSON for room version 6\nServer correctly handles transactions that break edu limits\nServer rejects invalid JSON in a version 6 room\nCan download without a file name over federation\nPOST /media/v3/upload can create an upload\nGET /media/v3/download can fetch the value again\nRemote users can join room by alias\nAlias creators can delete alias with no ops\nAlias creators can delete canonical alias with no ops\nRoom members can override their displayname on a room-specific basis\ndisplayname updates affect room member events\navatar_url updates affect room member events\nReal non-joined users can get individual state for world_readable rooms after leaving\nCan upload with Unicode file name\nPOSTed media can be thumbnailed\nRemote media can be thumbnailed\nCan download with Unicode file name locally\nCan download file 'ascii'\nCan download file 'name with spaces'\nCan download file 'name;with;semicolons'\nCan download specifying a different ASCII file name\nCan download with Unicode file name over federation\nCan download specifying a different Unicode file name\nInbound /v1/send_join rejects joins from other servers\nOutbound federation can query v1 /send_join\nInbound /v1/send_join rejects incorrectly-signed joins\nPOST /rooms/:room_id/state/m.room.name sets name\nGET /rooms/:room_id/state/m.room.name gets name\nPOST /rooms/:room_id/state/m.room.topic sets topic\nGET /rooms/:room_id/state/m.room.topic gets topic\nGET /rooms/:room_id/state fetches entire room state\nSetting room topic reports m.room.topic to myself\nsetting 'm.room.name' respects room powerlevel\nSyncing a new room with a large timeline limit isn't limited\nGetting state checks the events requested belong to the room\nGetting state IDs checks the events requested belong to the room\nCan invite users to invite-only rooms\nUninvited users cannot join the room\nUsers cannot invite themselves to a room\nUsers cannot invite a user that is already in the room\nInvited user can reject invite\nPUT /rooms/:room_id/typing/:user_id sets typing notification\nTyping notification sent to local room members\nTyping notifications also sent to remote room members\nTyping can be explicitly stopped\nBanned user is kicked and may not rejoin until unbanned\nInbound federation rejects attempts to join v1 rooms from servers without v1 support\nInbound federation rejects attempts to join v2 rooms from servers lacking version support\nInbound federation rejects attempts to join v2 rooms from servers only supporting v1\nOutbound federation passes make_join failures through to the client\nOutbound federation correctly handles unsupported room versions\nRemote users may not join unfederated rooms\nNon-numeric ports in server names are rejected\nInvited user can reject invite over federation\nInvited user can reject invite over federation for empty room\nInvited user can reject invite over federation several times\nCan reject invites over federation for rooms with version 1\nCan reject invites over federation for rooms with version 2\nCan reject invites over federation for rooms with version 3\nCan reject invites over federation for rooms with version 4\nCan reject invites over federation for rooms with version 5\nCan reject invites over federation for rooms with version 6\nEvent size limits\nCan sync a room with a single message\nCan sync a room with a message with a transaction id\nA full_state incremental update returns only recent timeline\nA prev_batch token can be used in the v1 messages API\nWe don't send redundant membership state across incremental syncs by default\nTyping notifications don't leak\nUsers cannot kick users from a room they are not in\nUser appears in user directory\nUser directory correctly update on display name change\nUser in shared private room does appear in user directory\nUser in dir while user still shares private rooms\nCan get 'm.room.name' state for a departed room (SPEC-216)\nBanned servers cannot send events\nBanned servers cannot /make_join\nBanned servers cannot /send_join\nBanned servers cannot /make_leave\nBanned servers cannot /send_leave\nBanned servers cannot /invite\nBanned servers cannot get room state\nBanned servers cannot /event_auth\nBanned servers cannot get missing events\nBanned servers cannot get room state ids\nBanned servers cannot backfill\nInbound /v1/send_leave rejects leaves from other servers\nGuest users can accept invites to private rooms over federation\nAS user (not ghost) can join room without registering\nCan search public room list\nCan get remote public room list\nAsking for a remote rooms list, but supplying the local server's name, returns the local rooms list\nAfter changing password, can't log in with old password\nAfter changing password, can log in with new password\nAfter changing password, existing session still works\nAfter changing password, different sessions can optionally be kept\nAfter changing password, a different session no longer works by default\nRead markers appear in incremental v2 /sync\nRead markers appear in initial v2 /sync\nRead markers can be updated\nWe can't peek into rooms with shared history_visibility\nWe can't peek into rooms with invited history_visibility\nWe can't peek into rooms with joined history_visibility\nLocal users can peek by room alias\nPeeked rooms only turn up in the sync for the device who peeked them\nRoom state at a rejected message event is the same as its predecessor\nRoom state at a rejected state event is the same as its predecessor\nInbound federation correctly soft fails events\nInbound federation accepts a second soft-failed event\nFederation key API can act as a notary server via a POST request\nFederation key API can act as a notary server via a GET request\nInbound /make_join rejects attempts to join rooms where all users have left\nInbound federation rejects invites which include invalid JSON for room version 6\nInbound federation rejects invite rejections which include invalid JSON for room version 6\nGET /capabilities is present and well formed for registered user\nm.room.history_visibility == \"joined\" allows/forbids appropriately for Guest users\nm.room.history_visibility == \"joined\" allows/forbids appropriately for Real users\nPOST rejects invalid utf-8 in JSON\nUsers cannot kick users who have already left a room\nEvent with an invalid signature in the send_join response should not cause room join to fail\nInbound federation rejects typing notifications from wrong remote\nPOST /rooms/:room_id/receipt can create receipts\nReceipts must be m.read\nRead receipts appear in initial v2 /sync\nNew read receipts appear in incremental v2 /sync\nOutbound federation sends receipts\nInbound federation rejects receipts from wrong remote\nShould not be able to take over the room by pretending there is no PL event\nCan get rooms/{roomId}/state for a departed room (SPEC-216)\nUsers cannot set notifications powerlevel higher than their own\nForgetting room does not show up in v2 /sync\nCan forget room you've been kicked from\n/whois\n/joined_members return joined members\nA next_batch token can be used in the v1 messages API\nUsers receive device_list updates for their own devices\nm.room.history_visibility == \"world_readable\" allows/forbids appropriately for Guest users\nm.room.history_visibility == \"world_readable\" allows/forbids appropriately for Real users\nState is included in the timeline in the initial sync\nState from remote users is included in the state in the initial sync\nChanges to state are included in an gapped incremental sync\nA full_state incremental update returns all state\nCan pass a JSON filter as a query parameter\nLocal room members can get room messages\nRemote room members can get room messages\nGuest users can send messages to guest_access rooms if joined\nAS can create a user\nAS can create a user with an underscore\nAS can create a user with inhibit_login\nAS can set avatar for ghosted users\nAS can set displayname for ghosted users\nGhost user must register before joining room\nCan generate a openid access_token that can be exchanged for information about a user\nInvalid openid access tokens are rejected\nRequests to userinfo without access tokens are rejected\n'ban' event respects room powerlevel\nNon-present room members cannot ban others\nPOST /_synapse/admin/v1/register with shared secret\nPOST /_synapse/admin/v1/register admin with shared secret\nPOST /_synapse/admin/v1/register with shared secret downcases capitals\nPOST /_synapse/admin/v1/register with shared secret disallows symbols\nMembership event with an invalid displayname in the send_join response should not cause room join to fail\nInbound federation rejects incorrectly-signed invite rejections\nInbound federation can receive invite rejections\nInbound federation can receive invite and reject when remote replies with a 403\nInbound federation can receive invite and reject when remote replies with a 500\nInbound federation can receive invite and reject when remote is unreachable\nRemote servers cannot set power levels in rooms without existing powerlevels\nRemote servers should reject attempts by non-creators to set the power levels\nFederation handles empty auth_events in state_ids sanely\nKey notary server should return an expired key if it can't find any others\nKey notary server must not overwrite a valid key with a spurious result from the origin server\nGET /rooms/:room_id/aliases lists aliases\nOnly room members can list aliases of a room\nUsers with sufficient power-level can delete other's aliases\nCan create backup version\nCan update backup version\nResponds correctly when backup is empty\nCan backup keys\nCan update keys with better versions\nWill not update keys with worse versions\nWill not back up to an old backup version\nCan create more than 10 backup versions\nCan delete backup\nDeleted & recreated backups are empty\nFails to upload self-signing keys with no auth\nFails to upload self-signing key without master key\ncan fetch self-signing keys over federation\nChanging master key notifies local users\nChanging user-signing key notifies local users\nInbound federation correctly handles soft failed events as extremities\nCan read configuration endpoint\nUser can create and send/receive messages in a room with version 7\nlocal user can join room with version 7\nUser can invite local user to room with version 7\nremote user can join room with version 7\nUser can invite remote user to room with version 7\nRemote user can backfill in a room with version 7\nCan reject invites over federation for rooms with version 7\nCan receive redactions from regular users over federation in room version 7\nFederation publicRoom Name/topic keys are correct\nRemote invited user can see room metadata\nCan re-join room if re-invited\nA prev_batch token from incremental sync can be used in the v1 messages API\nInbound federation rejects invites which are not signed by the sender\nInvited user can reject invite over federation several times\nTest that we can be reinvited to a room we created\nUser can create and send/receive messages in a room with version 8\nlocal user can join room with version 8\nUser can invite local user to room with version 8\nremote user can join room with version 8\nUser can invite remote user to room with version 8\nRemote user can backfill in a room with version 8\nCan reject invites over federation for rooms with version 8\nCan receive redactions from regular users over federation in room version 8\nUser can create and send/receive messages in a room with version 9\nlocal user can join room with version 9\nUser can invite local user to room with version 9\nremote user can join room with version 9\nUser can invite remote user to room with version 9\nRemote user can backfill in a room with version 9\nCan reject invites over federation for rooms with version 9\nCan receive redactions from regular users over federation in room version 9\nPushers created with a different access token are deleted on password change\nPushers created with a the same access token are not deleted on password change\nCan fetch a user's pushers\nCan add global push rule for room\nCan add global push rule for sender\nCan add global push rule for content\nCan add global push rule for override\nCan add global push rule for underride\nCan add global push rule for content\nNew rules appear before old rules by default\nCan add global push rule before an existing rule\nCan add global push rule after an existing rule\nCan delete a push rule\nCan disable a push rule\nAdding the same push rule twice is idempotent\nCan change the actions of default rules\nCan change the actions of a user specified rule\nAdding a push rule wakes up an incremental /sync\nDisabling a push rule wakes up an incremental /sync\nEnabling a push rule wakes up an incremental /sync\nSetting actions for a push rule wakes up an incremental /sync\nCan enable/disable default rules\nTrying to add push rule with missing template fails with 400\nTrying to add push rule with missing rule_id fails with 400\nTrying to add push rule with empty rule_id fails with 400\nTrying to add push rule with invalid template fails with 400\nTrying to add push rule with rule_id with slashes fails with 400\nTrying to add push rule with override rule without conditions fails with 400\nTrying to add push rule with underride rule without conditions fails with 400\nTrying to add push rule with condition without kind fails with 400\nTrying to add push rule with content rule without pattern fails with 400\nTrying to add push rule with no actions fails with 400\nTrying to add push rule with invalid action fails with 400\nTrying to add push rule with invalid attr fails with 400\nTrying to add push rule with invalid value for enabled fails with 400\nTrying to get push rules with no trailing slash fails with 400\nTrying to get push rules with scope without trailing slash fails with 400\nTrying to get push rules with template without tailing slash fails with 400\nTrying to get push rules with unknown scope fails with 400\nTrying to get push rules with unknown template fails with 400\nTrying to get push rules with unknown attribute fails with 400\nGetting push rules doesn't corrupt the cache SYN-390\nTest that a message is pushed\nInvites are pushed\nRooms with names are correctly named in pushes\nRooms with canonical alias are correctly named in pushed\nRooms with many users are correctly pushed\nDon't get pushed for rooms you've muted\nRejected events are not pushed\nTest that rejected pushers are removed.\nTrying to add push rule with no scope fails with 400\nTrying to add push rule with invalid scope fails with 400\nForward extremities remain so even after the next events are populated as outliers\nuploading self-signing key notifies over federation\nDevice list doesn't change if remote server is down\n/context/ on joined room works\n/context/ on non world readable room does not work\n/context/ returns correct number of events\nGET /rooms/:room_id/messages lazy loads members correctly\nCan query remote device keys using POST after notification\nDevice deletion propagates over federation\nGet left notifs in sync and /keys/changes when other user leaves\nRemote banned user is kicked and may not rejoin until unbanned\nregistration remembers parameters\nregistration accepts non-ascii passwords\nregistration with inhibit_login inhibits login\nThe operation must be consistent through an interactive authentication session\nMultiple calls to /sync should not cause 500 errors\nCanonical alias can be set\nCanonical alias can include alt_aliases\nCan delete canonical alias\nAS can make room aliases\n/context/ with lazy_load_members filter works\n/upgrade creates a new room\n/upgrade should preserve room visibility for public rooms\n/upgrade should preserve room visibility for private rooms\n/upgrade copies the power levels to the new room\n/upgrade preserves the power level of the upgrading user in old and new rooms\n/upgrade copies important state to the new room\n/upgrade copies ban events to the new room\nlocal user has push rules copied to upgraded room\nremote user has push rules copied to upgraded room\n/upgrade moves aliases to the new room\n/upgrade preserves room federation ability\n/upgrade restricts power levels in the old room\n/upgrade restricts power levels in the old room when the old PLs are unusual\n/upgrade to an unknown version is rejected\n/upgrade is rejected if the user can't send state events\n/upgrade of a bogus room fails gracefully\nCannot send tombstone event that points to the same room\nRoom summary counts change when membership changes\nGET /presence/:user_id/status fetches initial status\nPUT /presence/:user_id/status updates my presence\nPresence change reports an event to myself\nExisting members see new members' presence\nGet presence for newly joined members in incremental sync\nUser sees their own presence in a sync\nUser sees updates to presence from other users in the incremental sync.\nPresence changes are reported to local room members\nPresence changes are also reported to remote room members\nPresence changes to UNAVAILABLE are reported to local room members\nPresence changes to UNAVAILABLE are reported to remote room members\n/upgrade copies >100 power levels to the new room\nRoom state after a rejected message event is the same as before\nRoom state after a rejected state event is the same as before\nIgnore user in existing room\nIgnore invite in full sync\nIgnore invite in incremental sync\nA filtered timeline reaches its limit\nA change to displayname should not result in a full state sync\nCan fetch images in room\nThe only membership state included in an initial sync is for all the senders in the timeline\nThe only membership state included in an incremental sync is for senders in the timeline\nOld members are included in gappy incr LL sync if they start speaking\nWe do send redundant membership state across incremental syncs if asked\nRejecting invite over federation doesn't break incremental /sync\nGapped incremental syncs include all state changes\nOld leaves are present in gapped incremental syncs\n#Leaves are present in non-gapped incremental syncs\nMembers from the gap are included in gappy incr LL sync\nPresence can be set from sync\n/state returns M_NOT_FOUND for a rejected message event\n/state_ids returns M_NOT_FOUND for a rejected message event\n/state returns M_NOT_FOUND for a rejected state event\n/state_ids returns M_NOT_FOUND for a rejected state event\nPUT /rooms/:room_id/redact/:event_id/:txn_id is idempotent\nUnnamed room comes with a name summary\nNamed room comes with just joined member count summary\nRoom summary only has 5 heroes\nregistration is idempotent, with username specified\nSetting state twice is idempotent\nJoining room twice is idempotent\nInbound federation can return missing events for shared visibility\nInbound federation ignores redactions from invalid servers room > v3\nJoining room twice is idempotent\nGetting messages going forward is limited for a departed room (SPEC-216)\nm.room.history_visibility == \"shared\" allows/forbids appropriately for Guest users\nm.room.history_visibility == \"invited\" allows/forbids appropriately for Guest users\nm.room.history_visibility == \"default\" allows/forbids appropriately for Guest users\nm.room.history_visibility == \"shared\" allows/forbids appropriately for Real users\nm.room.history_visibility == \"invited\" allows/forbids appropriately for Real users\nm.room.history_visibility == \"default\" allows/forbids appropriately for Real users\nGuest users can sync from world_readable guest_access rooms if joined\nGuest users can sync from shared guest_access rooms if joined\nGuest users can sync from invited guest_access rooms if joined\nGuest users can sync from joined guest_access rooms if joined\nGuest users can sync from default guest_access rooms if joined\nReal users can sync from world_readable guest_access rooms if joined\nReal users can sync from shared guest_access rooms if joined\nReal users can sync from invited guest_access rooms if joined\nReal users can sync from joined guest_access rooms if joined\nReal users can sync from default guest_access rooms if joined\nOnly see history_visibility changes on boundaries\nCurrent state appears in timeline in private history\nCurrent state appears in timeline in private history with many messages before\nLocal users can peek into world_readable rooms by room ID\nNewly joined room includes presence in incremental sync\nUser in private room doesn't appear in user directory\nUser joining then leaving public room appears and dissappears from directory\nUser in remote room doesn't appear in user directory after server left room\nUser in shared private room does appear in user directory until leave\nExisting members see new member's presence\nInbound federation can return missing events for joined visibility\noutliers whose auth_events are in a different room are correctly rejected\nMessages that notify from another user increment notification_count\nMessages that highlight from another user increment unread highlight count\nNewly joined room has correct timeline in incremental sync\nWhen user joins a room the state is included in the next sync\nWhen user joins a room the state is included in a gapped sync\nMessages that notify from another user increment notification_count\nMessages that highlight from another user increment unread highlight count\nNotifications can be viewed with GET /notifications\nCan get rooms/{roomId}/messages for a departed room (SPEC-216)\nLocal device key changes appear in /keys/changes\nCan get rooms/{roomId}/members at a given point\nCan filter rooms/{roomId}/members\nCurrent state appears in timeline in private history with many messages after\nAS can publish rooms in their own list\nAS and main public room lists are separate\n/upgrade preserves direct room state\nlocal user has tags copied to the new room\nremote user has tags copied to the new room\n/upgrade moves remote aliases to the new room\nLocal and remote users' homeservers remove a room from their public directory on upgrade\nGuest users denied access over federation if guest access prohibited\nGuest users are kicked from guest_access rooms on revocation of guest_access\nGuest users are kicked from guest_access rooms on revocation of guest_access over federation\nUser can create and send/receive messages in a room with version 10\nlocal user can join room with version 10\nUser can invite local user to room with version 10\nremote user can join room with version 10\nUser can invite remote user to room with version 10\nRemote user can backfill in a room with version 10\nCan reject invites over federation for rooms with version 10\nCan receive redactions from regular users over federation in room version 10\nNew federated private chats get full presence information (SYN-115)\n/state returns M_NOT_FOUND for an outlier\n/state_ids returns M_NOT_FOUND for an outlier\nOutbound federation requests missing prev_events and then asks for /state_ids and resolves the state\nInvited user can reject invite for empty room\nInvited user can reject local invite after originator leaves\nGuest users can join guest_access rooms\nForgotten room messages cannot be paginated\nLocal device key changes get to remote servers with correct prev_id\nHS provides query metadata\nHS can provide query metadata on a single protocol\nInvites over federation are correctly pushed\nInvites over federation are correctly pushed with name\nUser can create and send/receive messages in a room with version 11\nlocal user can join room with version 11\nUser can invite local user to room with version 11\nremote user can join room with version 11\nUser can invite remote user to room with version 11\nRemote user can backfill in a room with version 11\nCan reject invites over federation for rooms with version 11\nCan receive redactions from regular users over federation in room version 11"
        },
        {
          "name": "test-dendritejs.sh",
          "type": "blob",
          "size": 0.103515625,
          "content": "#!/bin/sh -eu\n\nGOOS=js GOARCH=wasm go test -v -exec \"$(pwd)/test/wasm/index.js\" ./cmd/dendritejs-pinecone\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "userapi",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}