{
  "metadata": {
    "timestamp": 1736567463671,
    "page": 68,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "codenotary/immudb",
      "stars": 8664,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".chglog",
          "type": "tree",
          "content": null
        },
        {
          "name": ".codeclimate.yml",
          "type": "blob",
          "size": 0.0830078125,
          "content": "exclude_patterns:\n- \"pkg/api/schema/schema.pb.go\"\n- \"pkg/api/schema/schema.pb.gw.go\"\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.2470703125,
          "content": "# Compiled binaries\n/bm\ndist\n\n# Immudb data\n/data*\n\n# Vendor\nvendor\n\n# Unuseful stuff\n*.iml\n*.swp\n.idea/\n.gitignore\nbuild\nresources\n/immudata\n/Dockerfile*\npkg/integration/replication\nwebconsole/dist\n\n# Allow FIPS build checker\n!build/fips/check-fips.sh\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1923828125,
          "content": "root = true\n\n[*]\nend_of_line = lf\nindent_size = 4\nindent_style = tab\ninsert_final_newline = true\ntrim_trailing_whitespace = true\ncharset = utf-8\n\n[*.{md, yml}]\nindent_size = 2\nindent_style = space\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5576171875,
          "content": "# Binaries for programs and plugins\n*.exe\n*.exe~\n*.dll\n*.so\n*.dylib\n\n# Test binary, build with `go test -c`\n*.test\n\n# Output of the go coverage tool, specifically when used with LiteIDE\n*.out\ncoverage.txt\n\n# Output of goyacc\nembedded/sql/y.output\n\n# Editor\n.vscode\n.idea\n*.iml\n*.swp\n\n# Environment\n.env\n\n# macOS\n.DS_Store\n\n# Binaries\n/immuclient\n/immuadmin\n/immutest\n/immudb\n/nimmu\n/bm\n/immutc\n\n/dist\n\n# Working files\n.root*\nimmudb.pid\n/data\n\n# Vendor\nvendor\n\n# immudb auth\nimmudb_pwd\ntoken\ntoken_admin\n\nswagger/dist\nswagger/swaggerembedded\nwebconsole/webconsoleembedded\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 9.0068359375,
          "content": "# This file contains all available configuration options\n# with their default values.\n\n# options for analysis running\nrun:\n  # default concurrency is a available CPU number\n  concurrency: 4\n\n  # timeout for analysis, e.g. 30s, 5m, default is 1m\n  deadline: 1m\n\n  # exit code when at least one issue was found, default is 1\n  issues-exit-code: 1\n\n  # include test files or not, default is true\n  tests: false\n\n  skip-dirs:\n    - pkg/api\n# output configuration options\noutput:\n  # colored-line-number|line-number|json|tab|checkstyle, default is \"colored-line-number\"\n  format: colored-line-number\n\n  # print lines of code with issue, default is true\n  print-issued-lines: true\n\n  # print linter name in the end of issue text, default is true\n  print-linter-name: true\n\n\n# all available settings of specific linters\nlinters-settings:\n  errcheck:\n    # report about not checking of errors in type assetions: `a := b.(MyStruct)`;\n    # default is false: such cases aren't reported by default.\n    check-type-assertions: false\n\n    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`;\n    # default is false: such cases aren't reported by default.\n    check-blank: false\n\n    # [deprecated] comma-separated list of pairs of the form pkg:regex\n    # the regex is used to ignore names within pkg. (default \"fmt:.*\").\n    # see https://github.com/kisielk/errcheck#the-deprecated-method for details\n    ignore: fmt:.*,io/ioutil:^Read.*\n\n    # path to a file containing a list of functions to exclude from checking\n    # see https://github.com/kisielk/errcheck#excluding-functions for details\n    #exclude: /path/to/file.txt\n  govet:\n    # report about shadowed variables\n    check-shadowing: true\n  golint:\n    # minimal confidence for issues, default is 0.8\n    min-confidence: 0.8\n  gofmt:\n    # simplify code: gofmt with `-s` option, true by default\n    simplify: true\n  goimports:\n    # put imports beginning with prefix after 3rd-party packages;\n    # it's a comma-separated list of prefixes\n    local-prefixes: github.com/org/project\n  gocyclo:\n    # minimal code complexity to report, 30 by default (but we recommend 10-20)\n    min-complexity: 15\n  maligned:\n    # print struct with more effective memory layout or not, false by default\n    suggest-new: true\n  dupl:\n    # tokens count to trigger issue, 150 by default\n    threshold: 100\n  goconst:\n    # minimal length of string constant, 3 by default\n    min-len: 3\n    # minimal occurrences count to trigger, 3 by default\n    min-occurrences: 3\n  depguard:\n    list-type: blacklist\n    include-go-root: false\n    packages:\n    - github.com/davecgh/go-spew/spew\n  misspell:\n    # Correct spellings using locale preferences for US or UK.\n    # Default is to use a neutral variety of English.\n    # Setting locale to US will correct the British spelling of 'colour' to 'color'.\n    locale: US\n  lll:\n    # max line length, lines longer will be reported. Default is 120.\n    # '\\t' is counted as 1 character by default, and can be changed with the tab-width option\n    line-length: 120\n    # tab width in spaces. Default to 1.\n    tab-width: 1\n  unused:\n    # treat code as a program (not a library) and report unused exported identifiers; default is false.\n    # XXX: if you enable this setting, unused will report a lot of false-positives in text editors:\n    # if it's called for subdir of a project it can't find funcs usages. All text editor integrations\n    # with golangci-lint call it on a directory with the changed file.\n    check-exported: false\n  unparam:\n    # call graph construction algorithm (cha, rta). In general, use cha for libraries,\n    # and rta for programs with main packages. Default is cha.\n    algo: cha\n\n    # Inspect exported functions, default is false. Set to true if no external program/library imports your code.\n    # XXX: if you enable this setting, unparam will report a lot of false-positives in text editors:\n    # if it's called for subdir of a project it can't find external interfaces. All text editor integrations\n    # with golangci-lint call it on a directory with the changed file.\n    check-exported: false\n  nakedret:\n    # make an issue if func has more lines of code than this setting and it has naked returns; default is 30\n    max-func-lines: 30\n  prealloc:\n    # XXX: we don't recommend using this linter before doing performance profiling.\n    # For most programs usage of prealloc will be a premature optimization.\n\n    # Report preallocation suggestions only on simple loops that have no returns/breaks/continues/gotos in them.\n    # True by default.\n    simple: true\n    range-loops: true # Report preallocation suggestions on range loops, true by default\n    for-loops: false # Report preallocation suggestions on for loops, false by default\n\nlinters:\n  enable:\n    - govet # Used in main precommit. Vet examines Go source code and reports suspicious constructs, such as Printf calls whose arguments do not align with the format string [fast: true]\n    - errcheck # Errcheck is a program for checking for unchecked errors in go programs. These unchecked errors can be critical bugs in some cases [fast: true]\n    - staticcheck  #Staticcheck is a go vet on steroids, applying a ton of static analysis checks [fast: false]\n    - unused # Checks Go code for unused constants, variables, functions and types [fast: false]\n    - gosimple # Linter for Go source code that specializes in simplifying a code [fast: false]\n    - structcheck # Finds an unused struct fields [fast: true]\n    - varcheck # Finds unused global variables and constants [fast: true]\n    - ineffassign # Detects when assignments to existing variables are not used [fast: true]\n    - deadcode # Finds unused code [fast: true]\n    #- typecheck # Like the front-end of a Go compiler, parses and type-checks Go code [fast: true]\n    #- goimports #  Goimports does everything that gofmt does. Additionally it checks unused imports [fast: true]\n    #- golint # Golint differs from gofmt. Gofmt reformats Go source code, whereas golint prints out style mistakes [fast: true]\n    #- gosec (gas) #  Inspects source code for security problems [fast: true]\n    #- interfacer #  Linter that suggests narrower interface types [fast: false]\n    - unconvert #  Remove unnecessary type conversions [fast: true]\n    #- dupl #  Tool for code clone detection [fast: true]\n    #- goconst #  Finds repeated strings that could be replaced by a constant [fast: true]\n    - gocyclo #  Computes and checks the cyclomatic complexity of functions [fast: true]\n    #- gofmt # Used in main precommit.  Gofmt checks whether code was gofmt-ed. By default this tool runs with -s option to check for code simplification [fast: true]\n    #- maligned #  Tool to detect Go structs that would take less memory if their fields were sorted [fast: true]\n    #- megacheck #  3 sub-linters in one: unused, gosimple and staticcheck [fast: false]\n    #- depguard #  Go linter that checks if package imports are in a list of acceptable packages [fast: true]\n    - misspell #  Finds commonly misspelled English words in comments [fast: true]\n    #- lll #  Reports long lines [fast: true]\n    #- unparam #  Reports unused function parameters [fast: false]\n    #- nakedret #  Finds naked returns in functions greater than a specified function length [fast: true]\n    #- prealloc #  Finds slice declarations that could potentially be preallocated [fast: true]\n    #- scopelint #  Scopelint checks for unpinned variables in go programs [fast: true]\n    #- gocritic #  The most opinionated Go source code linter [fast: true]\n    #- gochecknoinits #  Checks that no init functions are present in Go code [fast: true]\n    #- gochecknoglobals #  Checks that no globals are present in Go code [fast: true]\n  fast: true\n\n\nissues:\n  # List of regexps of issue texts to exclude, empty list by default.\n  # But independently from this option we use default exclude patterns,\n  # it can be disabled by `exclude-use-default: false`. To list all\n  # excluded by default patterns execute `golangci-lint run --help`\n  exclude:\n    - \"not declared by package utf8\"\n    - \"unicode/utf8/utf8.go\"\n    #- \".*defer.*\"\n\n  # Independently from option `exclude` we use default exclude patterns,\n  # it can be disabled by this option. To list all\n  # excluded by default patterns execute `golangci-lint run --help`.\n  # Default value for this option is true.\n  exclude-use-default: false\n\n  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.\n  max-per-linter: 0\n\n  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.\n  max-same-issues: 0\n\n  # Show only new issues: if there are unstaged changes or untracked files,\n  # only those changes are analyzed, else only changes in HEAD~ are analyzed.\n  # It's a super-useful option for integration of golangci-lint into existing\n  # large codebase. It's not practical to fix all existing issues at the moment\n  # of integration: much better don't allow issues in new code.\n  # Default is false.\n  new: false\n\n  # Show only new issues created after git revision `REV`\n  #new-from-rev: REV\n\n  # Show only new issues created in git patch with set file path.\n  #new-from-patch: path/to/patch/file\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.3115234375,
          "content": "\nrepos:\n- repo: git://github.com/pre-commit/pre-commit-hooks\n  rev: v2.1.0\n  hooks:\n  - id: check-merge-conflict\n  - id: check-yaml\n  - id: end-of-file-fixer\n  - id: trailing-whitespace\n- repo: git://github.com/dnephin/pre-commit-golang\n  rev: v0.3.3\n  hooks:\n  - id: go-fmt\n  - id: validate-toml\n  - id: no-go-testing\n"
        },
        {
          "name": "ACKNOWLEDGEMENTS.md",
          "type": "blob",
          "size": 5.044921875,
          "content": "# software\n\nimmudb copyright info:\n Copyright 2022 Codenotary Inc. All rights reserved.\n Released under [Apache 2.0 License](https://raw.githubusercontent.com/codenotary/immudb/master/LICENSE).\n\nReadme has been inspired by the amazing Netdata community project.\n[Netdata](https://github.com/netdata/netdata)\n\n\nimmudb uses the following amazing open source projects. Copyright by their respective copyright holders and Codenotary Inc.\n\n| Project                                                      | License                                                      |\n| ------------------------------------------------------------ | ------------------------------------------------------------ |\n| [cobra](https://github.com/spf13/cobra)                      | [Apache License 2.0](https://github.com/spf13/cobra/blob/master/LICENSE.txt) |\n| [go-homedir](https://github.com/mitchellh/go-homedir)        | [MIT](https://github.com/mitchellh/go-homedir/blob/master/LICENSE) |\n| [viper](https://github.com/spf13/viper)                      | [MIT](https://github.com/spf13/viper/blob/master/LICENSE)    |\n| [xid](https://github.com/rs/xid)                             | [MIT](https://github.com/rs/xid/blob/master/LICENSE)         |\n| [Prometheus Go client library](https://github.com/prometheus/client_golang) | [Apache License 2.0](https://github.com/prometheus/client_golang/blob/master/LICENSE) |\n| [Go gRPC Middleware](https://github.com/grpc-ecosystem/go-grpc-middleware) | [Apache License 2.0](https://github.com/grpc-ecosystem/go-grpc-middleware/blob/master/LICENSE) |\n| [go-toml](https://github.com/pelletier/go-toml)              | [MIT](https://github.com/pelletier/go-toml/blob/master/LICENSE) |\n| [File system notifications for Go](https://github.com/fsnotify/fsnotify) | [BSD 3-Clause \"New\" or \"Revised\" License](https://github.com/fsnotify/fsnotify/blob/master/LICENSE) |\n| [jWalterWeatherman](https://github.com/spf13/jwalterweatherman) | [MIT](https://github.com/spf13/jwalterweatherman/blob/master/LICENSE) |\n| [HCL](https://github.com/hashicorp/hcl)                      | [Mozilla Public License 2.0](https://github.com/hashicorp/hcl/blob/master/LICENSE) |\n| [mapstructure](https://github.com/mitchellh/mapstructure)    | [MIT](https://github.com/mitchellh/mapstructure/blob/master/LICENSE) |\n| [grpc-gateway](https://github.com/grpc-ecosystem/grpc-gateway) | [BSD 3-Clause \"New\" or \"Revised\" License](https://github.com/grpc-ecosystem/grpc-gateway/blob/master/LICENSE.txt) |\n| [cast](https://github.com/spf13/cast)                        | [MIT](https://github.com/spf13/cast/blob/master/LICENSE)     |\n| [go-md2man](https://github.com/cpuguy83/go-md2man)           | [MIT](https://github.com/cpuguy83/go-md2man/blob/master/LICENSE.md) |\n| [xxhash](https://github.com/cespare/xxhash)                  | [MIT](https://github.com/cespare/xxhash/blob/master/LICENSE.txt) |\n| [Data model artifacts for Prometheus](https://github.com/prometheus/client_model) | [Apache License 2.0](https://github.com/prometheus/client_model/blob/master/LICENSE) |\n| [pflag](https://github.com/spf13/pflag)                      | [BSD 3-Clause \"New\" or \"Revised\" License](https://github.com/spf13/pflag/blob/master/LICENSE) |\n| [Go support for Protocol Buffers](https://github.com/protocolbuffers/protobuf-go) | [License](https://github.com/protocolbuffers/protobuf-go/blob/master/LICENSE) |\n| [Ristretto](https://github.com/dgraph-io/ristretto)          | [Apache License 2.0](https://github.com/dgraph-io/ristretto/blob/master/LICENSE) |\n| [AFERO](https://github.com/spf13/afero)                      | [Apache License 2.0](https://github.com/spf13/afero/blob/master/LICENSE.txt) |\n| [Blackfriday](https://github.com/russross/blackfriday)       | [Simplified BSD License](https://github.com/russross/blackfriday/blob/master/LICENSE.txt) |\n| [Humane Units](https://github.com/dustin/go-humanize)        | [License](https://github.com/dustin/go-humanize/blob/master/LICENSE) |\n| [sanitized anchor name](https://github.com/shurcooL/sanitized_anchor_name) | [MIT](https://github.com/shurcooL/sanitized_anchor_name/blob/master/LICENSE) |\n| [go-farm](https://github.com/dgryski/go-farm)                | [MIT](https://github.com/dgryski/go-farm/blob/master/LICENSE) |\n| [PASETO](https://github.com/o1egl/paseto)                    | [MIT](https://github.com/o1egl/paseto/blob/master/LICENSE)   |\n| [ChaCha20](https://github.com/aead/chacha20)                 | [MIT](https://github.com/aead/chacha20/blob/master/LICENSE)  |\n| [Perks](https://github.com/beorn7/perks)                     | [MIT](https://github.com/beorn7/perks/blob/master/LICENSE)   |\n| [Zstd Go Wrapper](https://github.com/DataDog/zstd)           | [Simplified BSD License](https://github.com/DataDog/zstd/blob/1.x/LICENSE) |\n| [gotenv](https://github.com/subosito/gotenv)                 | [MIT](https://github.com/subosito/gotenv/blob/master/LICENSE) |\n| [poly1305](https://github.com/aead/poly1305)                 | [MIT](https://github.com/aead/poly1305/blob/master/LICENSE)  |\n| [Go CORS handler](https://github.com/rs/cors)                | [MIT](https://github.com/rs/cors/blob/master/LICENSE)        |\n"
        },
        {
          "name": "BUILD.md",
          "type": "blob",
          "size": 1.4658203125,
          "content": "# Build the binaries yourself\n\nTo build the binaries yourself, simply clone this repo and run\n\n```\nmake all\n```\n\nTo embed the webconsole, build with\n\n```\nrm -rf webconsole/dist  # force download of the correct webconsole version\nmake WEBCONSOLE=default\n```\n\nThis will download the appropriate webconsole release and add the Go build tag `webconsole`\nwhich will use the go:embed to embed the front-end code.\nThe front-end will be then served in the web API root \"/\".\n\nTo regenerate the default page, change the files in webconsole/default and run `make webconsole/default`\n\n## Linux (by component)\n\n```bash\nGOOS=linux GOARCH=amd64 make immuclient-static immuadmin-static immudb-static\n```\n\n## MacOS (by component)\nFor Apple Silicon (M1) use `GOARCH=arm64` instead of `GOARCH=amd64`\n\n```bash\nGOOS=darwin GOARCH=amd64 make immuclient-static immuadmin-static immudb-static\n```\n\n## Windows (by component)\n\n```bash\nGOOS=windows GOARCH=amd64 make immuclient-static immuadmin-static immudb-static\n```\n\n## Freebsd (by component)\n\n```bash\nGOOS=freebsd GOARCH=amd64 make immuclient-static immuadmin-static immudb-static\n```\n# Build the Docker images yourself\n\nIf you want to build the container images yourself, simply clone this repo and run\n\n```\ndocker build -t myown/immudb:latest -f Dockerfile .\ndocker build -t myown/immuadmin:latest -f Dockerfile.immuadmin .\ndocker build -t myown/immuclient:latest -f Dockerfile.immuclient .\n```\nAnd then run immudb as described when pulling official immudb Docker image.\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 192.9365234375,
          "content": "# CHANGELOG\nAll notable changes to this project will be documented in this file. This project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n<a name=\"unreleased\"></a>\n## [Unreleased]\n\n\n<a name=\"v1.9.5\"></a>\n## [v1.9.5] - 2024-09-16\n### Bug Fixes\n- time.Since should not be used in defer statement\n- **pkg/dabase:** return error when attempting to access deleted database\n- **pkg/pgsql/server:** close row readers to release resources\n- **pkg/server:** run metrics server under HTTPS\n\n### Changes\n- **embedded/logging:** improve file base logging.\n- **embedded/sql:** improvements on SQL layer.\n- **embedded/store:** improve index flush logic\n- **pkg/database:** implement database manager\n- **pkg/server:** implement automatic generation of self-signed HTTPS certificate\n\n\n<a name=\"v1.9.4\"></a>\n## [v1.9.4] - 2024-07-25\n### Bug Fixes\n- set mattermost payload\n\n\n<a name=\"v1.9.3\"></a>\n## [v1.9.3] - 2024-05-23\n### Changes\n- fix some comments\n- refactor image building\n- The GitHub workflow push.yml was updated to use the repository owner's Docker images instead of fixed ones. This change allows for more flexibility and control when using Docker images, and ensures that the correct images are used based on the repository owner.\n- Update GitHub Actions to use checkout[@v4](https://github.com/v4)\n- Add support to ARM64\n- **embedded/cache:** replace sync.Mutex with sync.RWMutex\n- **embedded/cache:** validate input params before obtaining mutex lock\n\n### Reverts\n- test with github token\n- chore(embedded/cache): replace sync.Mutex with sync.RWMutex\n\n\n<a name=\"v1.9DOM.2\"></a>\n## [v1.9DOM.2] - 2023-12-29\n### Bug Fixes\n- apply fix for CVE-2023-44487\n- performance test regression\n\n### Changes\n- **deps:** bump actions/setup-go from 3 to 5\n- **deps:** bump actions/upload-artifact from 3 to 4\n- **deps:** bump actions/download-artifact from 3 to 4\n- **deps:** bump google.golang.org/grpc in /test/e2e/truncation\n- **deps:** bump google.golang.org/protobuf from 1.31.0 to 1.32.0\n\n\n<a name=\"v1.9DOM.2-RC1\"></a>\n## [v1.9DOM.2-RC1] - 2023-12-21\n### Bug Fixes\n- performance test regression\n- remove influxdb dependencies\n- correct the test after the merge and latest refactor\n- source /etc/sysconfig/immudb on AWS EC2 startup\n\n### Changes\n- add influxdb (needed for performance test) dependency\n- use goveralls token variable\n- **deps:** bump golang.org/x/crypto in /test/columns\n- **deps:** bump golang.org/x/crypto in /tools/mkdb\n- **deps:** bump golang.org/x/crypto\n- **deps:** bump golang.org/x/crypto in /test/e2e/truncation\n- **deps:** bump golang.org/x/crypto\n- **deps:** bump github.com/rogpeppe/go-internal from 1.9.0 to 1.12.0\n- **deps:** bump golang.org/x/net from 0.17.0 to 0.19.0\n- **deps:** bump golang.org/x/crypto from 0.14.0 to 0.17.0\n\n### Features\n- add s3 (aws) role based auth as an option\n- automatically convert uuid strings and byte slices to uuid values\n\n### Reverts\n- Merge remote-tracking branch 'origin/dependabot/go_modules/github.com/rogpeppe/go-internal-1.12.0' into release/v1.9.2\n\n\n<a name=\"v1.9DOM.1\"></a>\n## [v1.9DOM.1] - 2023-11-16\n### Changes\n- **pkg/pgsql:** handle odbc help\n- **pkg/server:** change permission automatically revokes existing ones\n\n\n<a name=\"v1.9DOM.1-RC1\"></a>\n## [v1.9DOM.1-RC1] - 2023-11-14\n### Bug Fixes\n- lower databasename in OpenSession\n- **embedded/sql:** fix data-race when mapping keys\n- **embedded/sql:** fix data-race when mapping keys\n- **embedded/store:** handle key mapping in ongoing txs\n- **embedded/store:** handle key mapping in ongoing txs\n- **embedded/store:** handle key mapping in ongoing txs\n- **pkg/database:** ensure proper tx validation\n- **pkg/server:** user creation with multidbs\n\n### Changes\n- docker image with swagger ui (for AWS Marketplace)\n- **cmd/immudb:** upgrade to new pgsql changes\n- **deps:** bump github.com/google/uuid from 1.3.1 to 1.4.0\n- **embedded/sql:** user pwd\n- **embedded/sql:** show users stmt\n- **embedded/sql:** wip emulate pg_type system table\n- **embedded/sql:** continue to support databases and tables datasources\n- **embedded/store:** indexer source and target prefixes\n- **pkg/client:** possibility to retrieve session id\n- **pkg/pgsql:** decouple error from ready to query messages\n- **pkg/pgsql:** uuid and float types conversion\n- **pkg/pgsql:** comment describing pgsql wire protocol constraints\n- **pkg/pgsql:** support multiple-statements in simple-query mode\n- **pkg/pgsql:** protocol enhancements\n- **pkg/pgsql:** handle deallocate prepared stmt\n- **pkg/pgsql:** tls support\n- **pkg/pgsql:** single command complete message\n- **pkg/pgsql:** transactional query machine\n- **pkg/pgsql:** pgsql write protocol improvements\n- **pkg/pgsql:** proper handling of queries with empty resultsets\n- **pkg/pgsql:** show table/s\n- **pkg/server:** upgrade to transactional pgsql server\n- **pkg/server:** set dynamic immudb server port in pgsql server\n- **pkg/server:** pgsql server creation only when enabled\n- **pkg/server:** list users from multidb handler\n- **pkg/server:** require proper permissions at multidb handler\n\n### Features\n- **embedded/sql:** show table stmt\n- **embedded/sql:** wip user mgmt\n- **embedded/sql:** show users stmt\n- **embedded/sql:** show databases/tables stmt\n- **pkg/server:** add support of underscore in db name Signed-off-by: Martin Jirku <martin[@jirku](https://github.com/jirku).sk>\n\n\n<a name=\"v1.9DOM.0\"></a>\n## [v1.9DOM.0] - 2023-10-19\n### Changes\n- docker image with swagger ui\n- docker image with swagger ui\n\n\n<a name=\"v1.9DOM\"></a>\n## [v1.9DOM] - 2023-10-19\n### Changes\n- **cmd/immuadmin:** add indexing related flags\n\n### Features\n- **embedded/sql:** table renaming\n\n\n<a name=\"v1.9.0-RC2\"></a>\n## [v1.9.0-RC2] - 2023-10-16\n### Bug Fixes\n- standard syntax for drop index\n- **embedded/sql:** fix sql temporal range evaluation\n\n### Changes\n- **embedded/document:** count with limit in subquery\n- **embedded/sql:** expose subquery creation\n- **pkg/api:** set optional parameters\n- **pkg/api:** set optional parameters\n\n\n<a name=\"v1.9.0-RC1\"></a>\n## [v1.9.0-RC1] - 2023-10-11\n### Bug Fixes\n- correct immudb name in readme\n- allow the local id to be used if present even if remote flag is on\n- apply fixes discussed in PR\n- insertion ts for key-values should not be equal to the current root ts\n- **Makefile:** remove webconsole tag from immuclient/immuadmin builds\n- **embedded/appendable:** explicit freebsd build clauses\n- **embedded/document:** ensure multi-indexing is enabled\n- **embedded/document:** avoid waiting for tx to be committed\n- **embedded/sql:** advance position when decoding value at deleted column\n- **embedded/store:** use correct index path\n- **embedded/store:** handle transient key update\n- **embedded/store:** read lock when fetching indexer\n- **embedded/store:** precommitted transaction discarding recedes durable state\n- **embedded/store:** read lock when pausing indexers\n- **embedded/tbtree:** snapshot validation\n- **embedded/tbtree:** consider offset for history count calculation\n- **embedded/tbtree:** proper _rev calculation\n- **pkg/server:** buffer reuse\n\n### Changes\n- build with swaggerui\n- unnecessary use of fmt.Sprintf\n- use copy instead of a loop\n- align covered packages when pulling and merging\n- unnecessary use of fmt.Sprintf\n- **cmd/immuclient:** display raw column selector in table header\n- **deps:** bump golang.org/x/net from 0.10.0 to 0.12.0\n- **deps:** bump golang.org/x/crypto from 0.10.0 to 0.11.0\n- **deps:** bump golang.org/x/crypto from 0.13.0 to 0.14.0\n- **deps:** bump golang.org/x/crypto from 0.12.0 to 0.13.0\n- **deps:** bump golang.org/x/sys from 0.9.0 to 0.10.0\n- **deps:** bump golang.org/x/net from 0.14.0 to 0.15.0\n- **deps:** bump google.golang.org/grpc\n- **deps:** bump golang.org/x/sys from 0.11.0 to 0.12.0\n- **deps:** bump google.golang.org/grpc in /test/e2e/truncation\n- **deps:** bump google.golang.org/grpc\n- **deps:** bump golang.org/x/net from 0.15.0 to 0.17.0\n- **deps:** bump github.com/grpc-ecosystem/grpc-gateway/v2\n- **deps:** bump securego/gosec from 2.15.0 to 2.17.0\n- **deps:** bump golang.org/x/sys from 0.10.0 to 0.11.0\n- **deps:** bump golang.org/x/crypto from 0.7.0 to 0.10.0\n- **deps:** bump golang.org/x/net from 0.12.0 to 0.13.0\n- **deps:** bump google.golang.org/grpc from 1.55.0 to 1.56.2\n- **deps:** bump golang.org/x/net from 0.13.0 to 0.14.0\n- **embedded/document:** register username when applying a change\n- **embedded/document:** enable multi-indexing in doc engine tests\n- **embedded/document:** encoded document using valRef\n- **embedded/document:** attach username when auditing document\n- **embedded/sql:** post-commit physical index deletion\n- **embedded/sql:** uuid decoding\n- **embedded/sql:** improve internal index naming\n- **embedded/sql:** use declared constant for fixed ids\n- **embedded/sql:** insertion benchmark\n- **embedded/sql:** historical queries over primary index\n- **embedded/sql:** dynamic indexing\n- **embedded/sql:** deletion of primary index path\n- **embedded/sql:** multi-snapshop mvvc\n- **embedded/sql:** temporal queries with multi-indexing\n- **embedded/sql:** transactional drops\n- **embedded/sql:** unique index creation supported on empty tables\n- **embedded/sql:** support parenthesis as datatype constraint delimiter\n- **embedded/store:** multi-indexing\n- **embedded/store:** ensure index is erased from disk\n- **embedded/store:** wip multi-indexing\n- **embedded/store:** history returning value refs\n- **embedded/store:** indexer alloc its tx\n- **embedded/store:** remove metastate\n- **embedded/store:** history with rev count\n- **embedded/store:** injective index mapper\n- **embedded/store:** ensure snapshot up to date\n- **embedded/store:** indexing callbacks\n- **embedded/store:** key reader including historical entries\n- **embedded/store:** indexing prefix\n- **embedded/store:** entry mapper\n- **embedded/tbtree:** value-preserving history\n- **embedded/tbtree:** hcount serialization\n- **embedded/tbtree:** fetching historical values\n- **embedded/tbtree:** wip value-preserving history\n- **embedded/tbtree:** value-preserving history\n- **embedded/tbtree:** context propagation\n- **pkg/api:** adjust doc serializations to match verification\n- **pkg/api:** endpoint improvements\n- **pkg/client:** add setAll to immuclient mock\n- **pkg/client:** use buf for msg exchange\n- **pkg/database:** context propagation\n- **pkg/database:** context propagation\n- **pkg/database:** fix remote storage paths\n- **pkg/database:** increase delay when tx is not present\n- **pkg/database:** keept reading from specific tx\n- **pkg/database:** multi-indexing database\n- **pkg/database:** doc audit without retrieving payloads\n- **pkg/database:** register username when applying a change\n- **pkg/database:** fix remote storage paths\n- **pkg/database:** mandatory wait with async replication\n- **pkg/database:** kv count\n- **pkg/server:** register username when applying a change in doc apis\n- **pkg/server:** minor code adjustment\n- **pkg/stdlib:** non transactional ddl stmts\n- **pkg/truncator:** use embedded/logger package\n- **pkg/verification:** minor doc verification improvements\n- **swagger:** use embedded logger package\n- **tests:** Tests cleanup\n\n### Code Refactoring\n- **pkg/logger:** move logger from pkg to embedded\n\n### Features\n- update readme\n- prevent identifier from creation when use external id option\n- pass logger to heartbeater\n- add flag for using external id as a main one\n- **embedded/document:** register user when creating collection\n- **embedded/document:** doc audit without retrieving payloads\n- **embedded/document:** remove field from collection\n- **embedded/document:** add field to collection\n- **embedded/sql:** async multi-indexing\n- **embedded/sql:** extra metadata when creating tx\n- **embedded/sql:** include _rev column in historical queries\n- **embedded/sql:** drop index and table stmts\n- **embedded/sql:** table history\n- **embedded/sql:** query including historical rows\n- **embedded/sql:** dynamic multi-indexing\n- **embedded/sql:** wip uuid datatype support\n- **embedded/sql:** drop column stmt\n- **embedded/store:** use index attribute in kv metadata\n- **embedded/store:** getBetween\n- **embedded/store:** extra tx metadata\n- **embedded/store:** transactionaless multi-indexing\n- **embedded/tbtree:** getBetween\n- **embedded/tbtree:** key reader supporting historical values\n- **pkg/api:** docAudit returning timestamp and possibility to omit payloads\n- **pkg/api:** re-enable swagger ui\n- **pkg/api:** include username in document audit response\n- **pkg/api:** add field and remove field endpoints\n- **pkg/database:** add user when creating collection\n- **pkg/server:** add user when creating collection\n\n### Reverts\n- chore: remove initial swagger support\n\n\n<a name=\"v1.5.0\"></a>\n## [v1.5.0] - 2023-06-20\n### Bug Fixes\n- **embedded/store:** handle replication of empty values\n\n### Changes\n- **embedded/document:** naming validations\n- **embedded/document:** allow hyphen in doc naming\n- **embedded/document:** collection and field naming validations\n- **embedded/store:** embedded values and prealloc disabled by default\n\n\n<a name=\"v1.5.0-RC1\"></a>\n## [v1.5.0-RC1] - 2023-06-16\n### Bug Fixes\n- build/Dockerfile.immuadmin to reduce vulnerabilities\n- build/Dockerfile.immuclient to reduce vulnerabilities\n- build/Dockerfile.immuadmin to reduce vulnerabilities\n- build/Dockerfile.rndpass to reduce vulnerabilities\n- build/Dockerfile.full to reduce vulnerabilities\n- modify tests for new object db initialisation\n- build/Dockerfile.full to reduce vulnerabilities\n- build/Dockerfile.rndpass to reduce vulnerabilities\n- table id generation\n- build/Dockerfile.immuclient to reduce vulnerabilities\n- **docs:** bump golang.org/x/net to 0.7.0 in docs and test pkg\n- **embedded/ahtree:** correct calculation of payload offset\n- **embedded/appendable:** proper closing of non-required chunks\n- **embedded/document:** support nil docs\n- **embedded/document:** proper column renaming\n- **embedded/document:** assign correct revision number\n- **embedded/document:** close readers before updating document\n- **embedded/document:** id field conversion\n- **embedded/document:** proper handling of deleted documents\n- **embedded/document:** validate doc is properly initialized\n- **embedded/document:** validate doc is properly initialized\n- **embedded/sql:** do not force columns to have max key length when unspecified\n- **embedded/sql:** include explicit close into sqlTx options\n- **embedded/sql:** multi-row conflict handling\n- **embedded/sql:** implicit conversion within expressions\n- **embedded/sql:** consider 0 as no limit\n- **embedded/sql:** parsing of exists stmt\n- **embedded/sql:** like operator supporting null values\n- **embedded/sql:** crash when RowReader.Read() returns error\n- **embedded/sql:** proper handling of parameters in row readers\n- **embedded/store:** force snapshot to include mandatory mvcc changes\n- **embedded/store:** ensure snapshot is closed for read-only txs\n- **embedded/store:** integrity checks covering empty values\n- **embedded/store:** avoid dead-lock when exporting tx with external commit allowance mode\n- **embedded/tbtree:** fix error comparison\n- **embedded/tbtree:** rollback to the most recent snapshot when insertion fails\n- **embedded/tbtree:** fix snapshot getKeyWithPrefix\n- **embedded/tbtree:** proper kv validation\n- **embedded/tbtree:** fix snapshot getKeyWithPrefix\n- **go.mod:** bump go version to 1.17 in go.mod\n- **helm:** set securityContext and podSecurityContext at correct location\n- **pkg/api:** create collection endpoint with path parameter\n- **pkg/api:** fix and implement LIKE and NOT_LIKE operator when querying documents\n- **pkg/client:** ensure ticker is properly stopped\n- **pkg/client:** return error when verifiedGet operation fails\n- **pkg/database:** read-only document API for replicas\n- **pkg/database:** skip eof error during scan\n- **pkg/database:** read from err channel\n- **pkg/database:** wrap propagated context\n- **pkg/database:** fix truncation and contemplate entry-less txs\n- **pkg/replicator:** check stream is properly initialized\n- **pkg/server:** do not set trailer metadata when replication is done with bidirectional streamming\n- **pkg/server:** ensure error propagation when sending headers\n- **pkg/server:** use grpc interceptors with grpc proxy\n- **pkg/server:** request explicit close when creating a rw sql tx\n- **pkg/server:** ensure tx is closed upon error\n- **pkg/server:** close document readers before cancelling txs\n- **pkg/server:** thread-safe doc reader during session handling\n- **pkg/stream:** handle the case when message fits in a single chunk\n- **pkg/truncator:** adjust plan logic and contemplate empty txs\n- **pkg/verification:** document comparison with proto equals\n- **push.yml:** update min go version\n\n### Changes\n- Add reformatting of protobuf file on build/codegen\n- rename DocumentBulkInsert to DocumentInsertMany\n- Update build/RELEASING.md file\n- allow multiple order by clauses\n- replace schemav2 with protomodel in truncator test\n- handle no more doc error inside response in search\n- use sys/unix package\n- remove docker test provider\n- update document with id if not nil\n- use gosec action\n- add updatecollection api\n- copy document catalogue when truncating db\n- add DocumentFindOneAndUpdate api\n- wait for immudb to get initialized\n- add test case for uncommitted tx not increasing table count\n- pass transaction to upsert function\n- check invalid search id in search request\n- add monotically increasing number to doc id generation\n- add document audit api\n- change DocumentFindOneAndUpdate to DocumentUpdate\n- return sql reader on document search\n- add order by clause in search\n- use sql statement for delete than raw query\n- add ReadN method to document reader\n- add documentReader iterator to read documents\n- remove initial swagger support\n- exclude generated code from coverage\n- exclude generated code from coverage\n- add unique search id for paginated readers\n- fix TestFloatSupport test case\n- simplified codegen\n- fix tests\n- change DeleteTableStmt to DropTableStmt\n- generate proto requests for DocumentDelete api\n- return ErrNoMoreDocuments instead of sql.ErrNoMoreRows\n- add DocumentDelete api\n- add default size for document reader lru cache\n- add lru cache for paginated readers\n- fix merge issues\n- add pagination support when fetching documents\n- fix failing verification test\n- increase test coverage for document engine\n- add bulk insert api\n- TruncateDatabase endpoint should use the same ongoing Truncator if present\n- address review comment\n- add go-acc and goveralls to ext-tools folder\n- delete columns on table deletion\n- check for column before adding index on collection update\n- add option for non unique indexes on collection\n- **ci:** improve notifications\n- **cmd/immuadmin:** flag to specify the usage of embedded values\n- **cmd/immuadmin:** add truncate cmd to immuadmin\n- **cmd/immuadmin:** modify truncation settings schema\n- **deps:** bump golang.org/x/crypto\n- **deps:** bump github.com/jaswdr/faker from 1.4.3 to 1.16.0\n- **deps:** bump securego/gosec from 2.14.0 to 2.15.0\n- **deps:** bump github.com/codenotary/immudb\n- **deps:** bump github.com/influxdata/influxdb-client-go/v2\n- **deps:** bump github.com/golang/protobuf from 1.5.2 to 1.5.3\n- **deps:** bump github.com/rogpeppe/go-internal from 1.8.0 to 1.9.0\n- **deps:** bump github.com/lib/pq from 1.10.7 to 1.10.9\n- **deps:** bump github.com/lib/pq from 1.10.2 to 1.10.7\n- **deps:** bump golang.org/x/net from 0.8.0 to 0.9.0\n- **deps:** bump github.com/rs/xid from 1.3.0 to 1.5.0\n- **deps:** bump github.com/stretchr/testify from 1.8.0 to 1.8.2\n- **deps:** bump aws-actions/configure-aws-credentials from 1 to 2\n- **deps:** bump github.com/spf13/cobra from 1.2.1 to 1.6.1\n- **deps:** bump github.com/grpc-ecosystem/grpc-gateway/v2\n- **deps:** bump google.golang.org/grpc from 1.46.2 to 1.54.0\n- **deps:** bump github.com/spf13/viper from 1.12.0 to 1.15.0\n- **embedded/ahtree:** add inline comments\n- **embedded/appendable:** fsync freebsd\n- **embedded/appendable:** automatic file creation only when appending\n- **embedded/appendable:** use fdatasync when file is preallocated\n- **embedded/appendable:** file syncing per os\n- **embedded/appendable:** support file preallocation\n- **embedded/appendable:** file syncing using fdatasync when available\n- **embedded/appendable:** minor improvements reading files\n- **embedded/appendable:** metadats with putBool\n- **embedded/document:** remove dead-code\n- **embedded/document:** add float support for doc engine\n- **embedded/document:** raw document validation\n- **embedded/document:** improve error handling\n- **embedded/document:** transactional collection update\n- **embedded/document:** support null values in indexed attributes\n- **embedded/document:** retrieval of raw document\n- **embedded/document:** move source code into dedicated files\n- **embedded/document:** use onclose callback to close the tx\n- **embedded/document:** return struct when auditing document history\n- **embedded/document:** add test to ensure key ordering in document during serialization\n- **embedded/document:** blob type not yet supported\n- **embedded/document:** catch key alredy exists  error\n- **embedded/document:** catch tx read conflict error\n- **embedded/document:** translate table already exists error\n- **embedded/document:** minor var renaming\n- **embedded/document:** fix query stmt generator and add tests\n- **embedded/document:** leverage sqlengine lazy index contraint evaluation\n- **embedded/document:** binary serialization of doc payload\n- **embedded/document:** use query limit when searching\n- **embedded/document:** wip continue with improvements\n- **embedded/document:** wip continue with improvements\n- **embedded/document:** wip continue with improvements\n- **embedded/document:** wip improvements\n- **embedded/document:** add collection deletion api support\n- **embedded/document:** minor code simplification\n- **embedded/document:** add variable length support for multiple types\n- **embedded/document:** ensure order by clauses are used when deleting and updating\n- **embedded/document:** improve error messages\n- **embedded/document:** minor code adjustments\n- **embedded/document:** transactional collection and document creation\n- **embedded/document:** improve error messages\n- **embedded/document:** possibility to specify desc order when querying document history\n- **embedded/document:** add tests for blob type\n- **embedded/document:** avoid public dependency on sql\n- **embedded/document:** add test cases for collection on doc engine\n- **embedded/document:** change querier from BinBoolExp to CmpBoolExp\n- **embedded/document:** transactional document creation\n- **embedded/document:** add document id generation\n- **embedded/document:** typo in error message\n- **embedded/htree:** allow creation of empty hash trees\n- **embedded/object:** add document abstraction\n- **embedded/object:** add collection/database statements\n- **embedded/sql:** use read-only txs whenever possible\n- **embedded/sql:** make sql engine generic for object store\n- **embedded/sql:** limit and offset boundary validation\n- **embedded/sql:** minor numeric type adjustments\n- **embedded/sql:** implicit conversion support in limit and offset clauses\n- **embedded/sql:** simplified sql tx\n- **embedded/sql:** return closed sql txs\n- **embedded/sql:** implicit conversion from varchar to int and float types\n- **embedded/sql:** upgraded row reader\n- **embedded/sql:** ddl stmts register catalog mutation\n- **embedded/sql:** snapshot reuse improvements\n- **embedded/sql:** lazy index contraint validation\n- **embedded/sql:** WIP singledb sql engine\n- **embedded/sql:** transient context\n- **embedded/sql:** validate total key length at index creation time\n- **embedded/sql:** extend max key length to 512\n- **embedded/sql:** cancellable row reader\n- **embedded/store:** add in-line documentation for store options\n- **embedded/store:** validate Eh only when integrity checks are not disabled\n- **embedded/store:** addition of a cache for values\n- **embedded/store:** consume all tx content even if integrity checks are disabled\n- **embedded/store:** optional integrity checking when reading values\n- **embedded/store:** validate Eh only when integrity checks are not disabled\n- **embedded/store:** inline comments\n- **embedded/store:** fix typo in inline comment\n- **embedded/store:** validate gets using filters\n- **embedded/store:** MVCC read-set with boundaries\n- **embedded/store:** context propagation\n- **embedded/store:** mvcc validation only if another tx was processed\n- **embedded/store:** minor changes after rebasing from master\n- **embedded/store:** simplified dualproof implementation\n- **embedded/store:** skipIntegrityCheck parameter when reading data\n- **embedded/store:** minor code improvement\n- **embedded/store:** add min limit for truncation frequency\n- **embedded/store:** use syncSnapshot to validate ongoing txs\n- **embedded/store:** unify Read and ReadBetween\n- **embedded/store:** transient context\n- **embedded/store:** tx header is returned when fully committed\n- **embedded/store:** api upgrade\n- **embedded/store:** set ctx as first argument\n- **embedded/store:** readValueAt and exportTx improvements\n- **embedded/store:** update ReadBetween\n- **embedded/store:** contextualized transactions\n- **embedded/store:** inline comments\n- **embedded/store:** snapshot reuse improvements\n- **embedded/store:** set smaller default value for indexing bulk size\n- **embedded/store:** wip mvcc validations\n- **embedded/store:** simplified indexer initialization\n- **embedded/store:** multi-tx unsafe mvcc\n- **embedded/store:** set tx as closed upon cancellation\n- **embedded/store:** wip mvcc validations\n- **embedded/store:** set ctx as first argument\n- **embedded/store:** embedded meta attribute required if version is greater than 1\n- **embedded/store:** set embedded values mode as default one\n- **embedded/store:** backward compatible embedded value mode\n- **embedded/store:** optional integrity checking when reading values\n- **embedded/store:** preallocate tx header log files\n- **embedded/store:** wip mvcc validations\n- **embedded/store:** handle eof when reading last committed tx\n- **embedded/store:** support preallocated files when reading tx data\n- **embedded/store:** wip preallocated clog\n- **embedded/store:** option to prealloc files\n- **embedded/store:** optional integrity checking\n- **embedded/store:** further in-line documentation\n- **embedded/store:** make truncation validation tolerate entryless txs\n- **embedded/store:** allow tx without entries as long as it contains metadata\n- **embedded/store:** add hashValue as fixed 32 byte size\n- **embedded/store:** add test for TxOptions\n- **embedded/store:** add min limit for truncation frequency\n- **embedded/store:** multi-tx bulk indexing\n- **embedded/store:** fix default vlog cache size and add validation for hash when reading from cache\n- **embedded/store:** safe key copy for mvcc validation\n- **embedded/store:** improve log messages when discarding precommitted transactions\n- **embedded/store:** mvcc validations\n- **embedded/store:** fix rebase issue with readValueAt for vlogcache\n- **embedded/store:** multi-timed bulk insertions\n- **embedded/store:** clog file size adjustment only when preallocation is disabled\n- **embedded/store:** added more in-line comments\n- **embedded/store:** file preallocation not enabled by default\n- **embedded/store:** propagate context usage\n- **embedded/tbtree:** parametrize snapshot creation specs\n- **embedded/tbtree:** in-line documentation\n- **embedded/tbtree:** initialize tbtree with a non-mutated leaf\n- **embedded/tbtree:** getWithPrefix\n- **embedded/tbtree:** remove unnecessary kv sorting\n- **embedded/tbtree:** add in-line documentation\n- **embedded/tbtree:** minor code improvements\n- **embedded/tbtree:** rollback not needed as updates are made in a copy\n- **embedded/tbtree:** add in-line comments\n- **embedded/tbtree:** wip reduce allocs while updating inner node\n- **embedded/tbtree:** optimized bulk insertion\n- **embedded/tbtree:** optimize snapshot renewal\n- **embedded/tbtree:** wip optimized insertion\n- **embedded/tbtree:** variable renaming after rebasing\n- **embedded/tools:** upgrade embedded tools with transient context\n- **embedded/watchers:** return context error upon cancellation\n- **embedded/watchers:** set ctx as first arg\n- **embedded/watchers:** use context instead of cancellation channel\n- **package/database:** bunch of fixes and improvements in document engine\n- **pkg:** add more tests admin truncate command\n- **pkg/api:** expose db setting to enable file preallocation\n- **pkg/api:** use ErrrIs/ErrorContains in error checks\n- **pkg/api:** rename idFieldName to documentIdFieldName\n- **pkg/api:** annotate required fields\n- **pkg/api:** use of path parameters for document-related endpoints\n- **pkg/api:** expose new store indexing options\n- **pkg/api:** document update with path parameter\n- **pkg/api:** document api improvements\n- **pkg/api:** remove bool from tx metadata conversion\n- **pkg/api:** document api improvements\n- **pkg/api:** snapshot reuse attributes\n- **pkg/api:** search api improvements\n- **pkg/api:** return txID when inserting or updating documents\n- **pkg/api:** expose MVCC read-set settings\n- **pkg/api:** remove unsupported attribute from response messages\n- **pkg/api:** revert changes in swagger spec\n- **pkg/api:** re-generated httpclient with DeleteDocument endpoint\n- **pkg/api:** singular document path for audit and proof endpoints\n- **pkg/api:** manual adjustments post-code generation\n- **pkg/api:** expose replication settings for skipping integrity checks and indexing\n- **pkg/api:** swagger gen\n- **pkg/api:** value cache settings exposed\n- **pkg/api:** annotate primitive types as required\n- **pkg/api:** endpoint renaming\n- **pkg/api:** cleaner session id header\n- **pkg/api:** minor proof request renaming\n- **pkg/api:** authorization in swagger spec\n- **pkg/api:** re-generated httpclient\n- **pkg/api:** expose support for unsafe mvcc transactions\n- **pkg/api:** expose embeddedValue database setting\n- **pkg/api:** remove generated httpclient\n- **pkg/api:** buch of implementation improvements\n- **pkg/api:** revised document and authentication apis\n- **pkg/api:** annotated required message fields\n- **pkg/api:** add tx metadata conversion\n- **pkg/api:** re-generated httpclient\n- **pkg/api:** change retention period in TruncateDatabase message to int64\n- **pkg/auth:** add document update permissions\n- **pkg/client:** minor renaming in tx options\n- **pkg/client:** move heartbeater.go to pkg/client\n- **pkg/client/cache:** improve test coverage\n- **pkg/database:** upgrade after rebasing\n- **pkg/database:** remove object store db initialisation\n- **pkg/database:** upgraded reader specs\n- **pkg/database:** add document query struct to abstract request query\n- **pkg/database:** change objectEngine to documentEngine\n- **pkg/database:** add mvcc test for truncation, parse retention period using duration\n- **pkg/database:** add more tests for truncation\n- **pkg/database:** add document store db initialisation\n- **pkg/database:** updated APIs with schema updates\n- **pkg/database:** implement GetCollection API\n- **pkg/database:** remove search through first query\n- **pkg/database:** add query parser for object to generate sql expression\n- **pkg/database:** fix truncation deletion point checks in test\n- **pkg/database:** add search document api implementation for object store\n- **pkg/database:** create document/collection from schemav2 requests\n- **pkg/database:** context propagation\n- **pkg/database:** minor document renaming\n- **pkg/database:** add and implement object db interface\n- **pkg/database:** add DocumentUpdate api\n- **pkg/database:** minor code aligments\n- **pkg/database:** add object store\n- **pkg/database:** context propagation from server to embedded layer\n- **pkg/database:** proper calculation of source tx\n- **pkg/database:** create txs with default options\n- **pkg/database:** hard limit on page size\n- **pkg/database:** check encoded value is consistent with raw document\n- **pkg/database:** document verfication\n- **pkg/database:** use _obj to hold raw document payload\n- **pkg/database:** snapshot reuse changes\n- **pkg/database:** add document engine abstraction\n- **pkg/integration:** exportTx benchmarking\n- **pkg/replication:** replicator using bidirectional streaming\n- **pkg/replication:** improve options validation\n- **pkg/replication:** skip integrity check when exporting transactions\n- **pkg/replication:** context propagation\n- **pkg/replication:** wip stream replication - only async replication working\n- **pkg/server:** multi-grpc request context propagation\n- **pkg/server:** added inline comments\n- **pkg/server:** set default replication settings\n- **pkg/server:** context propagation from grpc api to embedded package\n- **pkg/server:** upgrades after rebasing from master\n- **pkg/server:** upgrade to new insecure credentials api\n- **pkg/server:** log error when closing document reader\n- **pkg/server:** support snapshot reuse\n- **pkg/server:** close all paginated readers on close of session\n- **pkg/server:** integrate document functions with server apis\n- **pkg/server:** add pagination test for document search\n- **pkg/server:** ensure document reader is closed when swithing pages\n- **pkg/server:** minor code reuse\n- **pkg/server:** add test successful load/unload of db with truncator\n- **pkg/store:** skipIntegrityChecks parameter when reading data\n- **pkg/stream:** handle eof when sending data\n- **pkg/truncator:** return error if expiration time hasn't been met\n- **pkg/truncator:** add context to Truncate method\n- **pkg/truncator:** refactor truncator process\n- **pkg/verfication:** document verification methods\n- **pkg/verification:** strengthen proof validations\n- **pkg/verification:** minor renaming\n- **pkg/verification:** document verification using embedded identifier\n- **pkg/verification:** use proto serialization\n- **test/objects:** add tests to create collections\n- **test/objects:** use httpexpect\n- **test/objects:** add more tests to create collection\n- **test/perf:** fix version value for flag\n- **test/perf:** add immudb version to influxdb data\n- **test/perf:** add runner to results for influxdb\n- **test/perf-tests:** remove runner check\n- **test/perf-tests:** use proxy on benchmark runner\n- **test/performance:** call cleanup method\n- **test/performance-test-suite:** fix replica directory path\n- **test/performance-test-suite:** add sync benchmarks\n- **test/performance-test-suite:** changed server concrete implementation\n- **test/performance-test-suite:** replicas are able to communicate with primary\n- **test/performance-test-suite:** send results to influxdb\n- **test/performance-test-suite:** extract json from results\n- **test/performance-test-suite:** add influxdb host and toke arguments\n- **test/performance-test-suite:** use temp folders for primary, replicas and clients\n- **truncator:** add more coverage for truncator\n\n### Features\n- add vlog truncation functionality\n- **ci:** change notification\n- **embedded/document:** count documents\n- **embedded/object:** add object store to embedded pkg\n- **embedded/sql:** Initial float support\n- **embedded/sql:** limit and offset as expressions\n- **embedded/sql:** sql transaction creation with options\n- **embedded/sql:** short casting syntax\n- **embedded/sql:** wip unsafe and optimized mvcc\n- **embedded/sql:** implicit type conversion of numeric types\n- **embedded/store:** tx creation with options\n- **embedded/store:** expose GetWithPrefixAndFilters\n- **embedded/store:** embeddable values\n- **embedded/store:** unsafe mvcc mode\n- **embedded/store:** embedded values option\n- **embedded/store:** read-only transactions\n- **embedded/store:** GetWithPrefixAndFilters\n- **embedded/tbtree:** multi-timed bulk insertions\n- **pkg/api:** document proof endpoint\n- **pkg/api:** improved replace documents endpoint\n- **pkg/api:** keepOpen parameter to instruct server to maintain a document reader in memory\n- **pkg/api:** count documents endpoint\n- **pkg/client:** optional tx options are now available during the creation process\n\n\n<a name=\"v1.4.1\"></a>\n## [v1.4.1] - 2022-11-21\n### Changes\n- **pkg/server:** Add logs for activities related to users\n\n\n<a name=\"v1.4.1-RC1\"></a>\n## [v1.4.1-RC1] - 2022-11-16\n### Bug Fixes\n- Change replication-related terms in codebase\n- Change replication-related terms in tests\n- **cmd:** Rename replication flags to follow consistent convention\n- **cmd/immudb:** Better description of the `--force-admin-password` flag\n- **cmd/immudb:** Fix description of the `force-admin-password` flag\n- **embedded/appendable:** fsync parent directory\n- **embedded/appendable:** fsync parent folder in remote appedable\n- **pkg:** Rename replication-related fields in GRPC protocol\n- **pkg/client:** Delay server identity validation\n- **pkg/client/cache:** Add methods to validate server identity\n- **pkg/client/cache:** Validate server's identity\n- **pkg/server:** Remove includeDeactivated flag when querying for users\n- **pkg/server/servertest:** Add uuid to buffconn server\n- **pkg/server/servertest:** Fix resetting grpc connection\n- **test/perf-test-suite:** Avoid dumping immudb logo on perf test results file\n- **test/performance-test-suite:** Ensure results are shown after proper is finished\n- **verification:** Additional Linear proof consistency check\n- **verification:** Recreate linear advance proofs for older servers\n\n### Changes\n- **ci:** migrate deprecating set-output commands\n- **cmd/immudb:** Allow resetting sysadmin password\n- **docs/security:** Be less specific about package version in examples\n- **docs/security:** Add resources for the linear-fake vulnerability\n- **embedded/appendable:** sync directories\n- **embedded/store:** Disable asynchronous AHT generation\n- **embedded/store:** Remove AHT Wait Hub\n- **pkg/client:** Document `WithDisableIdentityCheck` option\n- **pkg/client/cache:** Describe serverIdentity parameter\n- **pkg/client/cache:** Limit the hash part of the identity file name\n- **pkg/client/state:** Cleanup mutex handling in StateService\n- **pkg/server:** Warn if sysadmin user password was not reset\n- **pkg/server:** Better warning for unchanged admin password\n- **test/performance-test-suite:** Add summary to json output\n\n### Features\n- **ci:** fix message and input\n- **ci:** add runner name to mattermost message header\n- **ci:** simplify results extraction\n- **ci:** extract performance tests into separate workflow to be reused\n- **ci:** add scheduled daily test runs and send results to Mattermost\n- **pkg/replication:** Disable server's identity check in internal replication\n\n\n<a name=\"v1.4.0\"></a>\n## [v1.4.0] - 2022-10-12\n### Bug Fixes\n- **build:** Do not publish official non-dev images on RC tags\n- **pkg/client:** replace keepAlive context from the original one to the background, avoiding parent expiration\n\n### Changes\n- Rename sync-followers to sync-acks\n- **cmd/immuclient:** include precommit state when quering status\n- **pkg/server:** Better error message when validating replication options\n\n\n<a name=\"v1.4.0-RC2\"></a>\n## [v1.4.0-RC2] - 2022-10-10\n### Bug Fixes\n- **build:** Use correct binary download links\n- **embedded/store:** edge-case calculation of precommitted tx\n- **embedded/watchers:** Fix invariant breakage in watchers\n- **embedded/watchers:** Fix invariant breakage in watchers\n- **pkg/database:** any follower can do progress due to its prefech buffer\n- **pkg/replication:** Do not crash on invalid tx metadata\n- **pkg/replication:** handle replication already closed case\n- **pkg/replication:** discard precommitted txs and continue from latest committed one\n- **pkg/replication:** solve issues when follower diverged from master\n- **wmbedded/watchers:** Correctly fix the original implementation\n\n### Changes\n- **embedded/watchers:** Simplify and document cancellation path\n- **embedded/watchers:** Simplify mutex locking code\n- **embedded/watchers:** single-point for init and cleanup\n- **pkg/database:** wait for tx when a non-existent or non-ready transaction is requested\n- **pkg/database:** add TODO comment on replication passive waiting\n- **pkg/database:** simplify follower's wait\n- **pkg/replication:** Add TX gap metrics\n- **pkg/replication:** Add basic replication metrics\n- **pkg/replication:** improve replication logging\n\n\n<a name=\"v1.4.0-RC1\"></a>\n## [v1.4.0-RC1] - 2022-10-04\n### Bug Fixes\n- **Makefile:** add fips build flag to test/fips\n- **Makefile:** remove interactive flag from dist/fips command\n- **ci:** fix regex pattern for fips binaries\n- **cmd/immuadmin:** set correct  data-type for replication-sync-followers flag\n- **embedded/store:** fix size calculation of precommitted txs\n- **embedded/store:** Fix checking for closed store when syncing TXs\n- **embedded/store:** avoid attempts to commit in wrong order\n- **embedded/store:** expose durable precommitted state\n- **embedded/store:** include allowPrecommitted into tx reader construction\n- **embedded/store:** ensure tx is released upon error\n- **embedded/store:** aht up to precommited tx\n- **github:** Update github actions after migration of Dockerfile's\n- **pkg/database:** return master commit state if failing to read follower precommitted one\n- **pkg/database:** Fix mutex lock in ExportTx\n- **pkg/database:** set follower states holder when changing replication status\n- **pkg/server:** add logs when replicator does not start\n\n### Changes\n- add dependabot config\n- Add empty line between license header and package\n- **Dockerfile.fips:** add fips build changes\n- **cmd/immuadmin:** add new replication flags\n- **cmd/immuadmin:** revert default replication-master-port\n- **cmd/immuadmin:** use default immudb port as default value for replication-master-port flag\n- **cmd/immuclient:** flag replication-sync-enabled to enable sync replication\n- **cmd/immudb:** deprecate replication-enabled towards replication-is-replica\n- **docker:** Move main Dockerfile's to build folder\n- **docker:** Simplify the main Dockerfile\n- **embedded/store:** resolve pre-committed using clogbuf\n- **embedded/store:** wip reduce allocations in exportTx\n- **embedded/store:** mutexless export-tx\n- **embedded/store:** enhanced tx discarding logic\n- **embedded/store:** wip load precommitted txs\n- **embedded/store:** method to dynamically switch to external allowance\n- **embedded/store:** wip wait for precommitted txs\n- **embedded/store:** explicit allowPrecommitted and restricted access to precommitted txs\n- **embedded/store:** minor code simplification\n- **embedded/store:** possibility to read tx header of precommitted txs\n- **embedded/store:** support for concurrent replicated precommits\n- **embedded/store:** tx parsing with sanity checks\n- **embedded/store:** handle commit case when there is nothing new to commit\n- **embedded/store:** tolerate partial data or inconsistencies when loading pre-committed txs\n- **embedded/store:** explanatory comments added\n- **embedded/store:** waits for durable precommitted txs\n- **embedded/store:** minor renaming and comment additions\n- **embedded/store:** add integrity checks when reading precommitted txs\n- **pkg/api:** currentState endpoint includes precommitted info\n- **pkg/api:** explicit sync replication setting\n- **pkg/api/schema:** reformat schema.proto file\n- **pkg/database:** minor typo in comment\n- **pkg/database:** sync exportTx\n- **pkg/database:** improve error comparison\n- **pkg/database:** follower commit progress without additional waits\n- **pkg/database:** handle special case related to sql initialization\n- **pkg/database:** disable automatic sql init on older databases\n- **pkg/integration:** add synchronous replication integration tests\n- **pkg/replication:** allowPreCommitted only with sync replication enabled\n- **pkg/replication:** speed up follower reconnection\n- **pkg/replication:** use session-based authentication\n- **pkg/replication:** handling a particular case in an optimized manner\n- **pkg/replication:** backward compatible replication\n- **pkg/replication:** check committedTxID from master\n- **pkg/replication:** wip optimize concurrency in replicators\n- **pkg/replication:** handle case when follower precommit state is up-to-date but commit state is lies behind\n- **pkg/replication:** sync replication using follower state\n- **pkg/replication:** configurable prefetchTxBufferSize and replicationCommitConcurrency\n- **pkg/replication:** improve error comparison\n- **pkg/replication:** graceful closing\n- **pkg/replication:** further progress in sync replication\n- **pkg/replication:** replicator with backward compatibility mode\n- **pkg/replicator:** wip precommitted tx discarding when follower diverged from master\n- **pkg/server:** explicit sync replication\n- **pkg/server:** handle admin user creation with sync replication enabled\n- **pkg/server:** support for systemdb with session-based auth\n- **pkg/server:** display all replication settings\n- **pkg/server:** include sync replication settings in options\n- **pkg/server:** use replication settings\n\n### Features\n- **cmd/immuadmin:** flag to set the number of sync followers\n- **cmd/immudb:** flag to set the number of sync followers for systemdb and defaultdb\n- **embedded/store:** functionality to discard precommitted txs\n- **embedded/store:** core support for sync replication\n- **pkg/api:** api extensions to support sync replication\n- **pkg/database:** wip sync replication logic\n- **pkg/replication:** mode to allow tx discarding on followers\n- **pkg/replication:** wip replicator with support for sync replication\n- **pkg/server:** sync replication logic\n- **pkg/server:** Add ability to inject custom database management object\n\n\n<a name=\"v1.3.2\"></a>\n## [v1.3.2] - 2022-08-25\n\n<a name=\"v1.3.2-RC1\"></a>\n## [v1.3.2-RC1] - 2022-08-24\n### Bug Fixes\n- access tls value in global scope within ingress annotations\n- company name in webconsole and other files\n- **build:** Fix go-acc and goveralls invocations\n- **build:** update go version to 1.18 in Dockerfiles\n- **build/RELEASING.md:** Add note about updating playground\n- **embedded:** use tmp folder for unit test cases\n- **embedded/sql:** Support single `BEGIN` statement.\n- **embedded/store:** Check precommitted state when replicating\n- **embedded/store:** Optionally preallocate Tx pools\n- **embedded/store:** Ensure ordering of transaction timestamps\n- **embedded/store:** Assign blTxID within locked tx state\n- **embedded/store:** ensure tx is released upon error\n- **embedded/store:** Improved check for replicated transaction\n- **embedded/store:** Return correct error on key length exceeded\n- **embedded/store:** Protect against simultaneous replicators\n- **embedded/store:** Reduce the amount of allocations for tx object\n- **embedded/tools/stress_tool:** Fix compilation after recent update to tx holder pool\n- **getRandomTable:** increase RNG range for table generation\n- **github:** Remove unnecessary `/test/` path when uploading perf results to s3\n- **github:** Do not use yaml anchors in github workflows\n- **pkg/client:** Invalid client state after connection refused\n- **pkg/client/clienttest:** enforce mock client to interface\n- **pkg/database:** Fix calculation of proof for VerifiableTxByID\n- **pkg/database:** Correct revision for Scan requirests\n- **server:** Show info text with a logger\n- **servertest:** Allow accessing Server object before starting the server\n- **stdlib/rows:** add colums to row response\n- **test/performance:** Cleanup test directory\n\n### Changes\n- pin google.golang.org/protobuf to v1.27.1 (currently used version for generated code).\n- Introduce separate TxHolder pools\n- update github.com/spf13/viper to v1.12.0.\n- makefile formatting.\n- update build constraint to new & future-proof syntax.\n- format tools.go.\n- deprecate ImmuClient.HealthCheck in favour of ServerInfo.\n- reimplement ImmuClient.HealthCheck using rpc ServerInfo instead of (deprecated) Health.\n- refactor TestServerInfo.\n- Update main go versin to 1.18\n- generate gRPC stubs.\n- ignore schema_grpc.pb.go in coveralls.\n- use go.mod version of github.com/grpc-ecosystem/grpc-gateway when building codegen.\n- regenerate with correct version of protoc-gen-go.\n- ignore schema_grpc.pb.go in code coverage.\n- pin github.com/pseudomuto/protoc-gen-doc to 1.4.1 (currently used version for generated code).\n- **Makefile:** Update webconsole to 1.0.16\n- **build:** Update RELEASING.md doc\n- **build:** Improve generation of build checksums\n- **cmd/immuadmin:** Add support for max-commit-concurrency option\n- **cmd/immuadmin:** Add support for read-tx-pool-size option\n- **cmd/immudb:** Add support for max-sessions command line option\n- **database/sql:** Delay txholder allocation on VerifiableSQLGet\n- **embedded/ahtree:** threshold-based sync\n- **embedded/ahtree:** use bigger default write buffer size\n- **embedded/ahtree:** improve error handling\n- **embedded/ahtree:** flushless append\n- **embedded/ahtree:** improve validations and error handling\n- **embedded/ahtree:** support newst appendable implementation\n- **embedded/ahtree:** improve error message consistency\n- **embedded/ahtree:** minor error message change\n- **embedded/appendable:** autosync when write buffer is full\n- **embedded/appendable:** autosync support in multi-appendable\n- **embedded/appendable:** flush when no more writes are done in appendable\n- **embedded/appendable:** improve explanatory comment inside sync method\n- **embedded/appendable:** improve singleapp validation and error handling\n- **embedded/appendable:** error tolerant seek\n- **embedded/appendable:** improve validations and error handling\n- **embedded/appendable:** inmem buffer offset\n- **embedded/appendable:** wip remoteapp validation\n- **embedded/appendable:** return io.EOF when offset is out of range\n- **embedded/appendable:** upgrade mocked and remote appendable based on new flushing assumptions\n- **embedded/appendable:** auto-sync options\n- **embedded/appendable:** multi-appendable shared write buffer\n- **embedded/htree:** improve error handling\n- **embedded/sql:** Remove unnecessary tx holder buffer from SQLTx\n- **embedded/store:** Better errors returned during replication error\n- **embedded/store:** aht options\n- **embedded/store:** Use dedicated error for replication conflicts\n- **embedded/store:** sync AHT before tx commit log\n- **embedded/store:** in-mem clog buffer written when synced\n- **embedded/store:** wrap internal already closed errors\n- **embedded/store:** handle appendable already close error\n- **embedded/store:** Optimize ReadTxHeader method\n- **embedded/store:** Do not write values if concurrency limit is reached\n- **embedded/store:** Add dedicated error for tx pool exhaustion\n- **embedded/store:** add TODO comment\n- **embedded/store:** parametrize write buffer size\n- **embedded/store:** wip retryable sync\n- **embedded/store:** flush-less precommit\n- **embedded/store:** multi-tx syncs\n- **embedded/store:** use smaller default buffer size\n- **embedded/store:** Add txDataReader to process transaction data\n- **embedded/store:** avoid sync waiting if there are no new transactions\n- **embedded/store:** improve error comparison with errors.Is(...)\n- **embedded/store:** wip error declaration\n- **embedded/store:** Add explicit ReadTxEntry method\n- **embedded/store:** Add explicit ReadTxHeader\n- **embedded/store:** Optimize ReadTxEntry method\n- **embedded/store:** Add txPoolOptions to setup pool parameters upon creation\n- **embedded/store:** set new default write buffer values\n- **embedded/store/txpool:** Allocate pool entries separately\n- **embedded/store/txpool:** Make txPoolOptions members private\n- **embedded/tbtree:** improve error handling\n- **embedded/tbtree:** use non-retryable sync\n- **embedded/tbtree:** define using generic errors towards errors.Is(...) usage\n- **embedded/watchers:** improve error handling\n- **github:** Update ACTIONS_SECRETS.md file\n- **github:** Allow selection of runner to run perf test\n- **github:** Run perf test suite on pull requests\n- **github:** Run performance test suite on push to master\n- **github:** Add simple documentation of `PERF_TEST_xxx` secrets\n- **github:** Install qemu using docker/setup-qemu-action\n- **github:** Allow using multiple runners for perf test suite\n- **github:** Upload perf results to AWS s3\n- **pkg/api:** Add tx pool size to GRPC and stored db options\n- **pkg/api:** milliseconds message type\n- **pkg/api:** expose aht settings\n- **pkg/api:** export syncFrequency database parameter\n- **pkg/api:** deprecate rpc Health in favour of ServerInfo.\n- **pkg/database:** Add tx pool size to db options\n- **pkg/database:** Remove txHolder from get operation\n- **pkg/database:** Do not allocate txholder for history scans\n- **pkg/database:** allocate tx buffer before doing verified writes\n- **pkg/logger:** Add memory logger\n- **pkg/logger:** add json logger\n- **pkg/server:** simplify ImmuServer.Health.\n- **pkg/server:** Add pprof option\n- **test/performance:** Add basic flags to the benchmark process\n- **test/performance:** Add separate `Write KV/s` test.\n- **test/performance:** Split benchmark list and run code\n- **test/performance:** Move test seed out of configuration\n- **test/performance:** Move random generator and key tracker to common coode\n- **test/performance:** Add CPU time / memory stats gathering\n- **test/performance:** Allow customized name for the benchmark\n- **test/performance:** Add basic IO stats\n- **test/performance:** Improve live IO display\n- **test/performance:** Better logging and output\n- **test/performance:** Correctly close random data generator\n\n### Features\n- revert usages of ServerInfo that would break backwards compatibility.\n- add test for HealthCheck.\n- **cmd/immuadmin:** expose syncFrequency and WriteBufferSize db parameters\n- **cmd/immuclient:** add info command to immuclient.\n- **pkg/api:** expose write buffer parameter\n- **pkg/api:** improve documentation of ServerInfo.\n- **pkg/api:** remove ServerInfoResponse.status field.\n- **pkg/api:** add ServerInfo rpc to deprecate Health.\n- **pkg/client:** revert WaitForHealthCheck change to maintain backwards-compatibility.\n- **pkg/client:** implement ImmuClient.ServerInfo.\n- **pkg/server:** implement ImmuServer.ServerInfo.\n\n\n<a name=\"v1.3.1\"></a>\n## [v1.3.1] - 2022-06-30\n### Bug Fixes\n- **embedded/store:** filter evaluation after valRef resolution\n\n### Changes\n- **embedded/store:** offset handling at keyreader\n\n### Features\n- **embedded/sql:** offset clause\n- **embedded/store:** offset in key scanning\n- **pkg/api:** offset attribute in scan and zscan endpoints\n\n\n<a name=\"v1.3.1-RC1\"></a>\n## [v1.3.1-RC1] - 2022-06-30\n### Bug Fixes\n- **README:** Update readme to show examples for 1.3.0 version\n- **cmd/immuadmin:** use StreamChunkSize as max chunk size during tx replication\n- **cmd/immudb:** include metrics endpoint related flags\n- **embedded/remotestorage:** Fix invalid comment\n- **embedded/remotestorage/s3:** Correctly url decode entry names\n- **embedded/remotestorage/s3:** Simplify the code for scan\n- **embedded/remotestorage/s3:** Avoid using HEAD requests\n- **embedded/remotestorage/s3:** Fix s3 object name validation\n- **embedded/sql:** Use defer to cleanup unclosed readers on error\n- **embedded/sql:** Fix snapshot leak on query initialization failure\n- **embedded/sql:** Properly close readers in joint row reader\n- **embedded/sql:** Fix reader leaks during initialization failures\n- **embedded/sql:** Fix snapshot leaks in union readers\n- **embedded/sql:** ensure timestamp is evaluated with microsecond precision\n- **pkg/client:** ensure connection is closed and session can be re-established\n- **pkg/database:** Do not panic if incorrect number of pk values is given to VerifiableSQLGet\n- **pkg/server:** Fix remote storage test after recent changes\n- **pkg/server/sessions:** Avoid deadlock when closing session manager\n- **pkg/server/sessions:** Session manager test fixes\n- **pkg/server/sessions:** Handle short buffer read when generating session id\n- **pkg/server/sessions:** Correctly start session guard\n- **pkg/server/sessions:** Use strong random source for session ID\n\n### Changes\n- Update dependencies\n- **build:** Update RELEASING.md file\n- **embedded/remotestorage:** Improve error reporting\n- **embedded/remotestorage:** More detailed errors\n- **embedded/remotestorage:** Improve testing of remotestorage\n- **embedded/remotestorage/s3:** Improved s3 object name checks\n- **embedded/sql:** Do not return error from conditional and limit readers\n- **embedded/sql:** fixed-timed tx\n- **github:** Update push action\n- **github:** Run tests with minio service\n- **github:** On macOS run client only test on pull requests\n- **github:** Run coverage tests with minio enabled\n- **github:** Update minimal supported go version to 1.15\n- **pkg/client:** Better detection of tests that require external immudb\n- **pkg/server:** Add missing copyright headers\n- **pkg/server/session:** Move options normalization into options struct\n- **pkg/server/sessions:** Improve options handling\n- **pkg/server/sessions:** Add MaxSessions option\n- **pkg/server/sessions:** Simplify session handling code\n- **remotestorage:** Add prometheus metrics for remote storage kind\n- **tools:** Remove old stream tool\n\n\n<a name=\"v1.3.0\"></a>\n## [v1.3.0] - 2022-05-23\n### Bug Fixes\n- **embedded/sql:** return invalid value when using aggregated col selector in temporal queries\n- **pkg/client:** enhance client-side validations in verified methods\n\n\n<a name=\"v1.3.0-RC1\"></a>\n## [v1.3.0-RC1] - 2022-05-20\n### Bug Fixes\n- **cmd/immuclient:** Do not crash on login prompt\n- **embedded/sql:** selector resolution using valuesRowReader\n- **embedded/sql:** continue stmt execution on handler after changing db in use\n- **embedded/sql:** increase auto_increment pk once per row\n- **embedded/sql:** typo in error message\n- **embedded/sql:** adjust named parameter parsing\n- **github:** Run sonarcloud code analysis after cove coverate\n- **pkg/database:** avoid silent returns when the scan limit is reached\n- **pkg/database:** Fix detection of incorrect revision numbers\n- **pkg/database:** Correctly interpret negative revision for getAt\n\n### Changes\n- **Dockerfile:** Add EXPOSE 5432 and IMMUDB_PGSQL_SERVER to all immudb images\n- **README.md:** Switch to github badge\n- **build:** Update the RELEASING.md documentation\n- **cmd/immuclient:** Remove unnecessary sleep for set commands\n- **cmd/immuclient:** Move history command to a separate file\n- **cmd/immuclient:** Extract separate immuclient options\n- **embedded/sql:** validate current database as first step\n- **embedded/sql:** check tx range edge cases\n- **embedded/sql:** not showing unexistent db name as part of error message\n- **embedded/sql:** fully non-transactional db creation and selection\n- **embedded/sql:** re-include ttimestamp conversions in tx periods\n- **embedded/sql:** de-duplicate error handling\n- **embedded/sql:** database selection without multidb handler is still transactional\n- **embedded/sql:** database selection as  non-transactional\n- **embedded/sql:** postpone period evaluation so to support parameters type inference\n- **embedded/sql:** param substitution in functional datasource\n- **embedded/sql:** functional-style catalog queries\n- **embedded/sql:** quoted identifiers\n- **embedded/sql:** ensure db selection is the last operation\n- **embedded/sql:** unit testing db selection\n- **embedded/sql:** include short database selection stmt\n- **embedded/sql:** ensure context propagation with multiple txs\n- **embedded/sql:** implicit time expression\n- **embedded/sql:** functional catalog api\n- **embedded/sql:** non-functional catalog access\n- **embedded/sql:** wip grammar extensions to enrich temporal queries\n- **embedded/sql:** sql tx with context\n- **embedded/sql:** multi-db handler\n- **embedded/sql:** detailed error messages\n- **embedded/store:** minor refactoring time-based tx lookup\n- **github:** Speedup push github actions\n- **grpc:** Extend Scan API with endKey, inclusiveSeek, inclusiveEnd\n- **pkg/api:** extend database creation response to indicate db already existed\n- **pkg/database:** minor error renaming\n- **pkg/database:** Rename getAt to getAtTx\n- **pkg/database:** provide query parameters during resolution\n- **pkg/database:** Add missing copyright header in scan_test.go\n- **pkg/database:** contextual sql tx\n- **pkg/database:** set multi-db handler after db initialization\n- **pkg/database:** Improved checking of KeyRequest constraints\n- **pkg/database:** databases catalog query yet unsupported\n- **pkg/database:** maintain MaxKeyScanLimit for backward compatibility\n- **pkg/integration:** Add SQL verify tests after ALTER TABLE\n- **pkg/integration:** Cleanup and restructure SQL tests\n- **pkg/server:** upgrade database method signature\n- **pkg/server:** contextual sql tx\n\n### Features\n- Add revision number when getting DB entries\n- Calculate revision number when scanning key history\n- **api/schema:** Add revision-based option to key query\n- **cmd/immuclient:** Add restore operation\n- **cmd/immuclient:** Add revision numbers when looking up key history\n- **cmd/immuclient:** Add support for revision-based get in immuclient\n- **cmd/immuclient:** Better error messages for invalid revision for restore command\n- **embedded/sql:** create database if not exists\n- **embedded/sql:** queries with temporal ranges\n- **embedded/sql:** temporal row ranges\n- **embedded/sql:** catalog queries\n- **embedded/sql:** WIP - UNION operator\n- **embedded/sql:** Implement ALTER TABLE ADD COLUMN\n- **embedded/store:** time-based tx lookup\n- **embedded/store:** ranged key update reading\n- **pkg/client:** Add revision-based get request on the go client\n- **pkg/database:** Add revision-based get request on the GRPC level\n- **pkg/server:** support database creation from sql\n- **pkg/server:** support database selection from sql stmt\n\n\n<a name=\"v1.2.4\"></a>\n## [v1.2.4] - 2022-04-28\n\n<a name=\"v1.2.4-RC1\"></a>\n## [v1.2.4-RC1] - 2022-04-27\n### Bug Fixes\n- **Dockerfile:** Fix HOME variable for podman\n- **cmd/immuclient:** upgrade not logged in error handling\n- **embedded/tbtree:** create nodes with the right number of children\n- **embedded/tbtree:** Better logging in btree flush\n- **embedded/tbtree:** Fix cleanupPercentage in SnapshotSince call\n- **embedded/tbtree:** ensure node split is evaluated\n- **embedded/tbtree:** split into multiple nodes\n- **github/push:** Fix notarization of binaries\n- **pkg/auth:** Clarify comments about token injection\n- **pkg/auth:** Do not send duplicated authorization header\n- **pkg/server:** include db name in flush index result\n\n### Changes\n- **CHANGELOG.md:** remove bogus `liist` tag entry\n- **build/RELEASING.md:** Update releasing docs\n- **cmd/immuclient:** include db name when printing current state\n- **embedded/store:** index settings validations\n- **embedded/tbtree:** ensure node size is consistent with key and value sizes\n- **embedded/tbtree:** rename function that calculates node size lower bound\n- **github:** Use smaller 5-days retention for master builds\n- **github:** Update github workflow on master / version push\n- **github:** Update github action versions\n- **github/push:** Build docker images after tests\n- **github/push:** Build, test and notarize for release/v* branches\n- **github/push:** Calcualte sha256 checksums for binaries in github\n- **github/push:** Add quick test linux-amd64 binaries\n- **github/push:** Add quick test for Mac x64 binaries\n- **github/push:** Add quick test for linux-arm64 binaries through qemu\n- **github/push:** Add quick test for linux-s390x binaries through qemu\n- **github/push:** Run stress test before notarizing binaries\n- **pkg/api:** txbyid with keepReferencesUnresolved option\n- **tools/testing:** Add stress tool\n- **tools/testing:** Add randomized key length mode for stress test tool\n\n\n<a name=\"v1.2.3\"></a>\n## [v1.2.3] - 2022-04-14\n### Bug Fixes\n- **cmd/immuadmin:** simplify logging when flushing and compacting current db\n- **pkg/database:** return key not found when resolving a deleted entry\n- **pkg/database:** Return correct error for verifiedGet on deleted entries\n\n\n<a name=\"v1.2.3-RC1\"></a>\n## [v1.2.3-RC1] - 2022-04-13\n### Bug Fixes\n- **CI/CD:** Golang compiler is not needed for building docker images\n- **CI/CD:** Use CAS for notarization\n- **embedded/store:** Ensure up-to-date index on constrained writes\n- **embedded/store:** Fix early precondition checks\n- **embedded/tbtree:** copy-on-write when increasing root ts\n- **immudb:** Fix the name of signing key env var\n- **pkg:** Fix tests after recent changes in API\n- **pkg/api:** Remove unused Sync field from IndexOptions\n- **pkg/api:** typo in kv metadata message\n- **pkg/api/schema:** Use correct id for preconditions in SetRequest\n- **pkg/auth:** Avoid unguarded read from user tokens map\n- **pkg/client:** Adopt to EncodeReference changes\n- **pkg/client:** Prevent updates with incorrect database settings\n- **pkg/client:** Use correct response for UpdateDatabaseV2\n- **pkg/client/errors:** Ensure FromErrors works with ImmuError instance\n- **pkg/client/errors:** Update the list of error codes\n- **pkg/database:** Better handling of invalid constraints\n- **pkg/database:** Improve test coverage for KV constraints\n- **pkg/database:** automatically set max score if not specified in desc order\n- **pkg/errors:** Correct GRPC error mapping for precondition failure\n- **pkg/server:** Use buffered channel for catching OS signals\n- **pkg/server:** adjust time to millis convertion\n- **pkg/server:** ensure sessions locks get released\n- **pkg/server:** override default settings with existent values\n- **pkg/server:** typo in log message\n- **tools/monitoring:** Update grafana dashboards\n\n### Changes\n- Fix typo in a comment\n- Rename Constraints to Preconditions\n- cleanup percentage as float value\n- Update copyright to 2022\n- **Dockerfile:** Improve dockerfile builds\n- **build:** improve release instructions ([#1100](https://github.com/vchain-us/immudb/issues/1100))\n- **cmd/immuadmin:** add safety flag in delete database command\n- **cmd/immuclient:** health command description\n- **embedded/ahtree:** fix error message\n- **embedded/appendable:** appendable checksum calculation\n- **embedded/appendable:** return io.EOF if there are not enough data for checksum calculation\n- **embedded/appendable:** discard capability\n- **embedded/appendable:** fix typo in error message\n- **embedded/store:** syncThld at store options\n- **embedded/store:** Add missing Copyright header\n- **embedded/store:** declare constants for all the options\n- **embedded/store:** parametrized index write buffer size\n- **embedded/store:** add synced setting in index options\n- **embedded/store:** sync aht when syncing the store\n- **embedded/store:** verbose data corruption error\n- **embedded/store:** index one tx per iteration\n- **embedded/store:** use store layer for constraint validations\n- **embedded/store:** constraint validations with deletion and expiration support\n- **embedded/store:** do not skip expired entries when indexing\n- **embedded/store:** verbose logging during compaction\n- **embedded/store:** skip expired entries during indexing\n- **embedded/store:** improve compaction logging\n- **embedded/store/options:** Simplify validation tests\n- **embedded/tbree:** only insert nodes in cache when they were mutated\n- **embedded/tbree:** use shared writeOpts\n- **embedded/tbree:** remove obsolete property\n- **embedded/tbree:** bump index version\n- **embedded/tbtree:** minOffset only for non-mutated nodes\n- **embedded/tbtree:** Add metrics for index data size\n- **embedded/tbtree:** reduce allocations when flushing\n- **embedded/tbtree:** use double for min offset calculation\n- **embedded/tbtree:** data discarding with opened and older snapshots\n- **embedded/tbtree:** improve snapshot loading and discarding\n- **embedded/tbtree:** synced flush if cleanup percentage is greater than zero\n- **embedded/tbtree:** Add more internal metrics\n- **embedded/tbtree:** reduce allocs during flush\n- **embedded/tbtree:** ensure current snapshot is synced for compaction\n- **embedded/tbtree:** validate input kv pairs before sorting\n- **embedded/tbtree:** Use KV entries count for sync threshold\n- **embedded/tbtree:** no cache update during compaction reads\n- **embedded/tbtree:** discard unreferenced data when flushing index\n- **embedded/tbtree:** discard unreferenced data\n- **embedded/tbtree:** middle node split\n- **embedded/tbtree:** min offset handling\n- **embedded/tbtree:** validate compaction target path\n- **embedded/tbtree:** positive compaction threshold\n- **embedded/tbtree:** discard unreferenced data after sync\n- **embedded/tbtree:** ensure sync on gracefully closing\n- **embedded/tbtree:** checksum-based snapshot consistency validation\n- **embedded/tbtree:** self-healing index\n- **embedded/tbtree:** set initial offsets during initialization\n- **embedded/tbtree:** validate data-format version\n- **embedded/tbtree:** Extend buckets for child node count histogram\n- **embedded/tbtree:** reduce fixed records length\n- **embedded/tbtree:** open-ranged nodes\n- **embedded/tbtree:** wip reduce node size\n- **embedded/tbtree:** use binary search during key lookups\n- **embedded/tbtree:** fully replace sync with syncThld\n- **embedded/tbtree:** rebase non-indexed on kv syncthreshold\n- **embedded/tbtree:** explicit error validation before loading\n- **embedded/tbtree:** sort kv pairs in bulkInsert\n- **makefile:** fix cas sign instructions\n- **metrics:** Add better flush / compaction metrics for btree\n- **pkg/api:** prepare flushindex endpoint for future extensions\n- **pkg/api:** use entries spec in verified and scan tx endpoints\n- **pkg/api:** parametrized index cleanup percentage\n- **pkg/api:** non-indexable entries\n- **pkg/api:** use nullable prefix in db settings message\n- **pkg/api:** add synced param to flushindex endpoint\n- **pkg/api:** change proto schema toward db loading/unloading\n- **pkg/api:** uniform v2 endpoints\n- **pkg/api:** db loading and unloading\n- **pkg/client:** optional client connection\n- **pkg/client:** synced flushing to enable physical data deletion\n- **pkg/client:** use txRequest in TxByIDWithSpec method\n- **pkg/database:** tx entries excluded by default if non-null spec is provided\n- **pkg/database:** optional tx value resolution\n- **pkg/database:** remove db name from options\n- **pkg/database:** use shared tx holder when resolving tx entries\n- **pkg/database:** parameters to resolve references at tx\n- **pkg/integration:** integrate non-indexed into grpc apis\n- **pkg/server:** Dump used db options when loading databases\n- **pkg/server:** replication options for systemdb and defaultdb\n- **pkg/server:** use syncThreshold\n- **pkg/server:** use previous store default values\n- **pkg/server:** endpoint to retrieve settings of selected database\n- **pkg/server:** log web-console error on boot\n- **pkg/server:** start/stop replicator when loading/unloading db\n- **pkg/server:** expose max opened files for btree indexing\n- **pkg/server:** minor changes\n- **pkg/server:** synced db runtime operations\n- **pkg/server:** expose flush index endpoint\n- **pkg/server:** increase default max number of active snapshots\n- **pkg/server:** tolerate failed user-created db loading\n- **pkg/server:** convert time to milliseconds\n- **pkg/serverr:** validate request in deprecated database creation endpoint\n- **stats:** Add btree cache prometheus stats\n\n### Features\n- Entries-independent constraints in GRPC api\n- Improved API for database creation and update\n- Move KV write constraints to OngoingTX member\n- Improved validation of kv constraints\n- **KV:** Add constrained KV writes for ExecAll operation\n- **KV:** Do not create unnecessary snapshots when checking KV constraints\n- **KV:** Move constraints validation to OngoingTx\n- **KV:** Add constrained KV writes for Set operation\n- **KV:** Add constrained KV writes for Reference operation\n- **embedded/cache:** dynamic cache resizing\n- **embedded/store:** Fail to write metadata if proof version does not support it\n- **embedded/store:** Add max header version used during writes\n- **embedded/store:** non-indexable entries\n- **embedded/store:** Add tests for generation of entries with metadata\n- **embedded/store:** Allow changing tx header value using GRPC api.\n- **embedded/tbtree:** decouple flush and sync by introducing syncThreshold attribute\n- **immuadmin:** Allow changing proof compatibility from immuadmin\n- **kv:** Update grpc protocol with KV set constraints\n- **pkg/api:** delete database endpoint\n- **pkg/api:** tx api with entry filtering capabilities\n- **pkg/client:** new method to fetch tx entries in a single call\n- **pkg/database:** Updated GRPC protocol for constrained writes\n- **pkg/database:** Update code for new constrained write protocol\n- **pkg/database:** add noWait attribute in get request\n- **pkg/server:** database health endpoint\n- **pkg/server:** support database loading/unloading\n- **pkg/server:** new endpoint databaseSettings\n- **pkg/server:** expose all database settings\n- **tools/monitoring:** Add immudb Grafana dashboard\n- **tools/monitoring:** added datasource selection, added instance selection, labels include instance, fixed calculations\n\n\n<a name=\"v1.2.2\"></a>\n## [v1.2.2] - 2022-01-18\n### Bug Fixes\n- registering connection in order to make possible conn recycling\n- **Dockerfile:** Add ca-certificates.crt file to immudb image\n- **client/file_cache:** Fix storing immudb state in file cache\n- **embedded/immustore:** Avoid deadlock when acquire vLog lock\n- **embedded/sql:** max key len validations\n- **embedded/sql:** consider not null flag is on for auto incremental column\n- **pkg/server:** validate if db is not replica then other replication attributes are not set\n- **pkg/stdlib:** fix last insert id generation\n\n### Changes\n- create code of conduct markdown file ([#1051](https://github.com/vchain-us/immudb/issues/1051))\n- **cmd/immuclient:** return actual login error\n- **embedded/sql:** wip client provided auto-incremental values\n- **embedded/sql:** wip client provided auto-incremental values\n- **embedded/sql:** wip client provided auto-incremental values\n- **embedded/sql:** add first and last insert pks retrivial methods\n- **embedded/sql:** change column constraints ordering\n- **metrics:** Add indexer metrics\n- **metrics:** Add more s3-related metrics\n- **pkg/database:** pre-validation of duplicated entries in execAll operation\n- **pkg/database:** temporarily disable execall validations\n- **pkg/database:** instantiate tx holder only in safe mode\n- **pkg/database:** self-contained noWait execAll\n- **pkg/database:** descriptive error messages\n- **pkg/replication:** delay replication after failure\n- **pkg/stdlib:** clean connection registration and leftovers\n\n### Features\n- **embedded/sql:** support for basic insert conflict handling\n- **s3:** Add support for AWS V4 signatures\n\n\n<a name=\"v1.2.1\"></a>\n## [v1.2.1] - 2021-12-14\n### Bug Fixes\n- fix interactive use database\n- **embedded/store:** change already closed error message\n- **embedded/store:** readonly tx entries to ensure no runtime modification\n- **embedded/store:** reserve 4bytes in buffers for nentries\n- **embedded/tbtree:** set fixed snapshot ts\n- **pkg/server/sessions:** remove transaction on read conflict error\n- **pkg/server/sessions/internal/transactions:** transaction is cleared after sqlExec error\n- **sql:** Do not panic on error during delete\n- **tx:** Remove summary from metadata\n\n### Changes\n- **embedded/store:** read-only kv metadata for committed entries\n- **embedded/store:** rw and readonly kv metadata\n- **embedded/store:** txmetdata placeholder with zero len\n- **embedded/store:** private readonly metadata is validated when reading data\n- **pkg/api:** use new kvmetadata api\n- **pkg/client:** tx read conflict error is mapped in an CodInFailedSqlTransaction\n- **pkg/server/sessions/internal/transactions:** defer only when needed\n- **pkg/stdlib:** clean tx after rollback\n- **pkg/stdlib:** fix connection creation\n- **server/sessions:** modify read conflict error message\n\n### Features\n- **pkg/stdlib:** expose tx on std lib\n\n\n<a name=\"v1.2.0\"></a>\n## [v1.2.0] - 2021-12-10\n### Bug Fixes\n- **database:** Internal consistency check on data reads\n- **database/meta:** Do not crash on history with deleted items\n- **pkg/database:** history skipping not found entries\n- **protobuf:** Fix compatibility with 1.1 version\n\n### Changes\n- **cmd/immuadmin/command:** add super user login hint\n- **embedded/sql:** use sql standard escaping with single quotes\n- **embedded/sql:** support for escaped strings\n- **embedded/store:** prevent value reading of expired entries\n- **embedded/store:** use fixed time during the lifespan of a tx\n- **embedded/store:** fix expiration error declaration\n- **embedded/store:** dedicated expiration error\n- **embedded/store:** improve metadata serialization/deserialization methods\n- **embedded/store:** validations during metadata deserialization\n- **embedded/store:** return data corrupted error when deserialization cannot proceed\n- **embedded/store:** mandatory expiration filter\n- **embedded/store:** easily extendable meta attributes\n- **embedded/store:** reduce attribute code size\n- **makefile:** remove windows binaries digital signature\n- **pkg/auth:** require admin permission to export and replicate txs\n- **pkg/integration:** remove useless compilation tag on tests\n- **pkg/server:** deprecate GetAuth and WithAuth\n- **pkg/server/sessions:** session timeout set to 2 min\n- **pkg/server/sessions:** session max inactivity time set to 3m and minor stat collecting fix\n- **pkg/server/sessions:** tuning sessions params\n\n### Features\n- **embedded/store:** logical entries expiration\n- **pkg/api:** logical entries expiration\n- **pkg/client:** expirable set\n\n\n<a name=\"v1.2.0-RC1\"></a>\n## [v1.2.0-RC1] - 2021-12-07\n### Bug Fixes\n- Update jaswdr/faker to v1.4.3 to fix build on 32-bit systems\n- **Makefile:** Fix building immudb for specific os/arch\n- **Makefile:** Use correct version of the grpc-gateway package\n- **embedded/sql:** ensure determinism and no value overlaps distinct rows\n- **embedded/sql:** fix inserting calculated null values\n- **embedded/sql:** correct max key length validation based on specified col max length\n- **embedded/sql:** fix rollback stmt\n- **embedded/sql:** normalize parameters with lower case identifiers\n- **embedded/sql:** param substitution in LIKE expression\n- **embedded/sql:** Use correct statement for subquery\n- **embedded/sql:** Do not modify value returned by colsBySelector\n- **embedded/sql:** Fix SELECT * when joining with subquery\n- **embedded/sql:** distinct row reader with limit argument\n- **embedded/store:** release lock when tx has a conflict\n- **embedded/store:** read conflict validation\n- **embedded/store:** typo in error message\n- **pkg/auth:** Fix password tests\n- **pkg/client:** fix database name saving on token service\n- **pkg/database:** sql exec on provided tx\n- **pkg/server:** fix keep alive session interceptor\n- **testing:** using pointers for job channels\n- **webconsole:** Fix html of the default missing page.\n\n### Changes\n- refining sdk client constructor and add readOnly tx guard\n- Update build/RELEASING.md documentation.\n- fix more tests\n- decoupled token service\n- token is handled internally by sdk. Remove useless code\n- remove token service from client options and fix tests\n- **cmd/immuadmin/command:** fix immuadmin token name on client creation\n- **cmd/immuclient:** deleteKeys functioin and updates after metadata-related changes\n- **cmd/immuclient:** temporary disable displaying hash in non-verified methods\n- **embeddded/tbtree:** leverage snapshot id to identify it's the current unflushed one\n- **embedded/multierr:** minor code simplification\n- **embedded/sql:** set INNER as default join type\n- **embedded/sql:** minor update after rebasing\n- **embedded/sql:** Alter index key prefixes\n- **embedded/sql:** wip rw transactions\n- **embedded/sql:** remove opt_unique rule to ensure proper error message\n- **embedded/sql:** minor code simplification\n- **embedded/sql:** kept last snapshot open\n- **embedded/sql:** Simplify row_reader key selection\n- **embedded/sql:** Better error messages when (up|in)serting data\n- **embedded/sql:** standardized datasource aliasing\n- **embedded/sql:** wip sqlTx\n- **embedded/sql:** de-duplicate tx attributes using tx header struct\n- **embedded/sql:** fix nullable values handling\n- **embedded/sql:** rollback token\n- **embedded/sql:** set parsing verbose mode when instantiating sql engine\n- **embedded/sql:** unsafe snapshot without flushing\n- **embedded/sql:** reusable index entries and ignore deleted index entries\n- **embedded/sql:** bound stmt execution to a single sqltx\n- **embedded/sql:** delay index sync until fetching row by its pk\n- **embedded/sql:** changes on tx closing\n- **embedded/sql:** leverage metadata for logical deletion\n- **embedded/sql:** use order type in scanSpecs\n- **embedded/sql:** cancel non-closed tx\n- **embedded/sql:** expose Cancel method\n- **embedded/sql:** wip interactive sqltx\n- **embedded/sql:** limit row reader\n- **embedded/sql:** return map with last inserted pks\n- **embedded/sql:** use int type for limit arg\n- **embedded/sql:** defer execution of onClose callback\n- **embedded/sql:** sql engine options and validations\n- **embedded/sql:** standard count(*)\n- **embedded/sql:** ddl stmts not counted in updatedRows\n- **embedded/sql:** method to return sql catalog\n- **embedded/sql:** non-thread safe tx\n- **embedded/sql:** use current db from ongoing tx\n- **embedded/sql:** postponing short-circuit evaluation for safetiness\n- **embedded/sql:** wip sql tx preparation\n- **embedded/store:** entryDigest calculation including key len\n- **embedded/store:** conservative read conflict validation\n- **embedded/store:** non-thread safe ongoing tx\n- **embedded/store:** wip tx header versioning\n- **embedded/store:** expose ExistKeyWithPrefix in OngoingTx\n- **embedded/store:** set header version at commit time\n- **embedded/store:** set tx as closed even on failed attempts\n- **embedded/store:** strengthen tx validations\n- **embedded/store:** GetWith method accepting filters\n- **embedded/store:** handle watchersHub closing error\n- **embedded/store:** remove currentShapshot method\n- **embedded/store:** tx header version validations and increased max number of entries\n- **embedded/store:** threadsafe tx\n- **embedded/store:** filter out entries when filter evals to true\n- **embedded/store:** ongoing tx api\n- **embedded/store:** early tx conflict checking\n- **embedded/store:** simplified ExistKeyWithPrefix in current snapshot\n- **embedded/store:** reorder tx validations\n- **embedded/tbtree:** remove ts from snapshot struct\n- **embedded/tools:** upgrade sql stress tool\n- **embedded/tools:** update stress_tool after metadata-related changes\n- **embedded/tools:** upgrade stress tool using write-only txs\n- **pkg/api:** consider nil case during tx header serialization\n- **pkg/api:** changes in specs to include new metadata records\n- **pkg/api/schema:** increase supported types when converting to sql values\n- **pkg/client:** updates after metadata-related changes\n- **pkg/client:** avoid useless tokenservice call and add tests\n- **pkg/client:** check if token is present before injecting it\n- **pkg/client:** omit deleted flag during value decoding\n- **pkg/client/clienttest:** fix immuclient mock\n- **pkg/client/tokenservice:** handlig error properly on token interceptor and fix leftovers\n- **pkg/database:** updates after metadata-related changes\n- **pkg/database:** improve readability of Database interface\n- **pkg/database:** snapshots should be up to current committed tx\n- **pkg/database:** revised locking so to ensure gracefully closing\n- **pkg/database:** implement current functionality with new tx supportt\n- **pkg/database:** return a specific error in querying\n- **pkg/database:** enforce verifiableSQLGet param validation\n- **pkg/database:** use new transaction support\n- **pkg/database:** limit query len result\n- **pkg/errors:**  invalid database name error converted to immuerror\n- **pkg/errors:** useDatabase returns notFound code when error\n- **pkg/integration:** updates after metadata-related changes\n- **pkg/server:** use upgraded database apis\n- **pkg/server:** updates after metadata-related changes\n- **pkg/server:** error when tx are not closed\n- **pkg/server/sessions:** polish logger call\n- **pkg/server/sessions:** add sessions counter debug messages\n- **pkg/stdlib:** general improvements and polishments\n- **pkg/stdlib:** remove context injection when query or exec\n- **pkg/stdlib:** improve connection handling and allow ssl mode in connection string\n- **pkg/stdlib:** fix unit testing\n- **pkg/stdlib:** handling nil pointers when converting to immudb named params\n- **pkg/stdlib:** increase pointer values handling and testing\n- **stress_tool_sql:** add sessions and transaction mode\n- **stress_tool_worker_pool:** add long running stress tool\n- **test:** test backward compatibility with previous release (v1.1.0)\n- **tsting:** add index compactor in long running stress tool\n\n### Features\n- helm chart for deploying immudb on kubernetes ([#997](https://github.com/vchain-us/immudb/issues/997))\n- **embedded/appendable:** method for reading short unsigned integer\n- **embedded/sql:** wip sqltx at engine with autocommit\n- **embedded/sql:** support for not like\n- **embedded/sql:** increased expression power in LIKE and IN clauses\n- **embedded/sql:** null values for secondary indexes\n- **embedded/sql:** engine as tx executor\n- **embedded/sql:** support value expression in like pattern\n- **embedded/sql:** create index if not exists\n- **embedded/sql:** Detect ambigous selectons on joins\n- **embedded/sql:** WIP un-restricted upsert\n- **embedded/sql:** support for IN clause\n- **embedded/sql:** delete from statement\n- **embedded/sql:** sql update statement\n- **embedded/sql:** distinct row reader\n- **embedded/store:** initial commit towards full tx support\n- **embedded/store:** wip enhanced tx support\n- **embedded/store:** included filters in key readers\n- **embedded/store:** including metadata records\n- **embedded/store:** conservative tx invalidation\n- **embedded/store:** functional constraints\n- **embedded/store:** logical key deletion api\n- **embedded/store:** keyReader in tx scope\n- **embedded/tbtree:** read as before returns history count\n- **embedded/tbtree:** implements ExistKeyWithPrefix in snapshots\n- **sql:** Add support for IS NULL / IS NOT NULL expressions\n- **sql/index-on-nulls:** Update on-disk format to support nullable values\n- **sql/timestamp:** Add timestamp support to embedded/sql\n- **sql/timestamp:** Add timestamp to protobuf definition\n- **sql/timestamp:** Add timestamp to stdlib\n- **sql/timestamp:** Add CAST from varchar and integer to timestamp\n\n\n<a name=\"v1.1.0\"></a>\n## [v1.1.0] - 2021-09-22\n### Bug Fixes\n- Minor updates to build/RELEASING.md\n- Update Dockerfile.alma maintainer field\n- **CI:** Fix building and releasing almalinux images\n- **Dockerfile:** Fix compiling version information in docker images\n- **Dockerfile.rndpass:** Fix building rndpass docker image\n- **embedded/sql:** suffix endKey when scan over all entries\n- **embedded/sql:** in-mem catalog rollback and syncing fixes\n- **embedded/sql:** exclude length from maxKey\n- **embedded/sql:** return error when joint table doest not exist\n- **embedded/sql:** support edge case of table with just an auto-increment column\n- **embedded/sql:** limit auto-increment to single-column pks\n- **embedded/sql:** take into account table aliasing during range calculations\n- **embedded/sql:** improve error handling and parameters validation\n- **embedded/sql:** adjust selector ranges calculation\n- **embedded/sql:** consider boolean type in maxKeyVal\n- **embedded/sql:** set type any to nil parameters\n- **embedded/sql:** fix table aliasing with implicit selectors\n- **embedded/sql:** enforce ordering by grouping column\n- **embedded/store:** fix constraint condition\n- **embedded/store:** error handling when setting offset fails\n- **pkg:** improve signature verification during audit\n- **pkg/stdlib:** fix driver connection releasing\n\n### Changes\n- Update RELEASING.md with documentation step.\n- remove wip warning for fully implemented features\n- Add documentation badge to README.md\n- Add documentation link at the beginning of README.md\n- Add documentation link to command line help outputs\n- Update codenotary maintainer info\n- Remove experimental S3 warning from README\n- **CI:** Build almalinux-based immudb image\n- **CI:** Explicitly require bash in gh action building docker images\n- **CI:** Use buildkit when building docker images\n- **Dockerfile:** Build a debian-based image for immudb next to the scratch one\n- **Dockerfile:** Use scratch as a base for immudb image\n- **Dockerfile:** Remove unused IMMUDB_DBNAME env var\n- **Dockerfile:** Update base docker images\n- **Makefile:** More explicit webconsole version\n- **Makefile:** Add darwin/amd64 target\n- **build.md:** Add info about removing webconsole/dist folder\n- **cmd/immuadmin:** remove replication flag shortcut\n- **cmd/immuadmin:** parse all db flags when preparing settings\n- **cmd/immuadmin:** improve flag description and rollback args spec\n- **cmd/immuclient:** display number of updated rows as result of sql exec\n- **cmd/immudb:** use common replication prefix\n- **docker:** Update generation of docker tags\n- **embedded:** leverage kv constraint to enforce upsert over auto-incremental pk requires row to already exist\n- **embedded/multierr:** enhace multi error implementation\n- **embedded/sql:** fix primary key supported types error message\n- **embedded/sql:** get rid of limited joint implementation\n- **embedded/sql:** ignore null values when encoding row\n- **embedded/sql:** include constraint only when insert occurs without auto_incremental pk\n- **embedded/sql:** wip scan optimizations based on query condition and sorting\n- **embedded/sql:** partial progress on selector range calculation\n- **embedded/sql:** partial progress on selector range calculation\n- **embedded/sql:** expose primary key index id\n- **embedded/sql:** leverage endKey to optimize indexing scanning\n- **embedded/sql:** minor code refactoring\n- **embedded/sql:** mark catalog as mutated when using auto incremental pk\n- **embedded/sql:** fix max key length validation\n- **embedded/sql:** catalog loading requires up to date data store indexing\n- **embedded/sql:** optional parenthesis when specifying single-column index\n- **embedded/sql:** disable TIMESTAMP data-type\n- **embedded/sql:** move index selection closer to data source in query statements\n- **embedded/sql:** optimize integer key mapping\n- **embedded/sql:** use plain big-endian encoding for integer values\n- **embedded/sql:** include support for int64 parameters\n- **embedded/sql:** minor refactoring to simplify code\n- **embedded/sql:** minor code simplification\n- **embedded/sql:** use int64 as value holder for INTEGER type\n- **embedded/sql:** add further validations when encoding values as keys\n- **embedded/sql:** move index spec closer to ds\n- **embedded/sql:** reserve byte to support multi-ordered indexes\n- **embedded/sql:** index prefix function\n- **embedded/sql:** use Cols as a replacement for ColsByID\n- **embedded/sql:** changed identifiers length in catalog\n- **embedded/sql:** validate non-null pk when decoding index entry\n- **embedded/sql:** limit upsert to tables without secondary indexes\n- **embedded/sql:** remove join constraints\n- **embedded/sql:** convert unmapIndexedRow into unmapRow with optional indexed value\n- **embedded/tbtree:** typo in log message\n- **embedded/tbtree:** compaction doesn't need snapshots to be closed\n- **embedded/tbtree:** return kv copies\n- **embedded/tbtree:** adjust seekKey based on prefix even when a value is set\n- **embedded/tools:** update sql stress tool with exec summary\n- **pkg/api:** changed db identifiers type\n- **pkg/api:** use fresh id in proto message\n- **pkg/api:** use a map for holding latest auto-incremental pks\n- **pkg/api:** use int64 as value holder for INTEGER type\n- **pkg/api:** use follower naming for replication credentials\n- **pkg/api:** include updated rows and last inserted pks in sql exec result\n- **pkg/api:** delete deprecated clean operation\n- **pkg/client:** changed db identifiers type\n- **pkg/client:** move unit testing to integration package to avoid circular references\n- **pkg/database:** warn about data migration needed\n- **pkg/database:** minor refactoring coding conventions\n- **pkg/database:** remove active replication options from database\n- **pkg/database:** create sql db instance if not present\n- **pkg/database:** minor adjustments based on multi-column indexing\n- **pkg/database:** update integration to exec summary\n- **pkg/database:** display as unique if there is a single-column index\n- **pkg/database:** include updated rows and last inserted pks in sql exec result\n- **pkg/database:** warn about data migration needed\n- **pkg/database:** minor renaming after rebase\n- **pkg/pgsql/server:** adds pgsql server maxMsgSize 32MB limit\n- **pkg/pgsql/server:** add a guard on payload message len\n- **pkg/replication:** handle disconnection only within a single thread\n- **pkg/replication:** use new context for each client connection\n- **pkg/replication:** use info log level for network failures\n- **pkg/server:** followers management\n- **pkg/server:** validate replication settings\n- **pkg/server:** nil tlsConfig on default options\n- **pkg/server:** change max concurrency per database to 30\n- **pkg/server:** changed default db file size and make it customizable at db creation time\n- **pkg/server:** use replica wording\n- **pkg/stdLib:** implementing golang standard sql interfaces\n- **pkg/stdlib:** remove pinger interface implementation and increase code coverage\n- **pkg/stdlib:** increase code coverage and fix blob results scan\n- **pkg/stdlib:** immuclient options identifier(uri) is used to retrieve cached connections\n- **pkg/stdlib:** simplified and hardened uri handling\n\n### Features\n- Dockerfile for almalinux based image\n- **cmd/immuadmin:** add replication flags\n- **cmd/immuadmin:** add flag to exclude commit time\n- **embedded/multierr:** implement stardard error Is & As methods\n- **embedded/sql:** wip unique multi-column indexes\n- **embedded/sql:** inner join with joint table and subqueries\n- **embedded/sql:** towards more powerful joins\n- **embedded/sql:** value expressions in row specs\n- **embedded/sql:** switch to signed INTEGER\n- **embedded/sql:** exec summary containing number of updated/inserted rows and last inserted pk per table\n- **embedded/sql:** max length on variable sized types as requirement for indexing\n- **embedded/sql:** multi-column primary keys\n- **embedded/sql:** use explicitelly specified index as preffered one\n- **embedded/sql:** expose scanSpecs when resolving a query\n- **embedded/sql:** wip unique multi-column indexing\n- **embedded/sql:** support index spec in joins\n- **embedded/sql:** wip auto-incremental integer primary keys\n- **embedded/store:** parameterized commit time\n- **embedded/store:** leverage endKey from tbtree key reader\n- **embedded/tbtree:** include endKey to instruct scan termination\n- **pkg/database:** row verification with composite primary keys\n- **pkg/follower:** follower replication\n- **pkg/pgsql/server:** add support for flush message\n- **pkg/replication:** initial active replication capabilities\n- **pkg/server:** upgrade db settings to include or exclude commit time\n- **pkg/server:** initial support for active replication of user created databases\n- **pkg/server:** systemdb and defaultdb follower replication\n\n\n<a name=\"v1.0.5\"></a>\n## [v1.0.5] - 2021-08-02\n### Bug Fixes\n- bind psql port to the same IP address as grpc interface ([#867](https://github.com/vchain-us/immudb/issues/867))\n- Update crypto, sys dependencies\n- consistent reads of recently written data\n- **embedded/ahtree:** fix the full revert corner case\n- **embedded/store:** Truncate aht before commit\n- **embedded/store:** Don't fail to open on corrupted commit log\n- **embedded/store:** revert change so to prevent nil assigments\n- **embedded/store:** handle missing error case during commit phase\n- **embedded/store:** use reserved concurrency slot for indexing\n- **embedded/tbtree:** ensure clog is the last one being synced\n- **embedded/tbtree:** garbage-less nodes log\n- **embedded/tbtree:** use padding to ensure stored snapshots are named following lex order\n- **embedded/tbtree:** flush logs containing compacted index\n- **embedded/tbtree:** ensure proper data flushing and syncing\n- **pkg/client/auditor:** fix and enhance state signature verification\n- **pkg/pgsql/server:** fix boolean and blob extended query handling\n- **pkg/pgsql/server:** hardened bind message parsing and fix leftovers\n- **pkg/pgsql/server/fmessages:** use a variable size reader to parse fe messages\n- **pkg/server:** initialize db settings if not present\n- **pkg/server:** lock userdata map read\n- **s3:** Use remote storage for index\n- **s3:** Use remote storage for new databases\n- **sql/engine:** Harden DecodeValue\n- **store/indexer:** Ensure indexer state lock is always unlocked\n\n### Changes\n- Better logging when opening databases\n- increased coverage handling failure branches ([#861](https://github.com/vchain-us/immudb/issues/861))\n- remove unused interceptors and add missing error code prefixes\n- move sqlutils package to schema\n- group user methods in a dedicated file\n- Update dependencies\n- **appendable:** Expose validation functions of appendable options\n- **appendable/multiapp:** Introduce appendableLRUCache\n- **appendable/multiapp:** Add hooks to the MultiFileAppender implementation\n- **cmd/immuclient:** fix panic in immuclient cli mode\n- **cmd/immuclient:** update error comparisson\n- **embedded:** col descriptor with attributes\n- **embedded/ahtree:** minor changes towards code redabilitiy\n- **embedded/ahtree:** minor refactoring improving readability\n- **embedded/ahtree:** auto-truncate partially written commit log\n- **embedded/cache:** Add Pop and Replace methods to LRUCache.\n- **embedded/sql:** initial type specialization in place\n- **embedded/sql:** dump catalog with a different database name\n- **embedded/sql:** Remove linter warnings\n- **embedded/sql:** explicit catalog reloading upon failed operations\n- **embedded/sql:** parameters type inference working with aggregations\n- **embedded/sql:** towards non-blocking sql initialization\n- **embedded/sql:** remove public InferParameters operations from sql statements\n- **embedded/sql:** several adjustments and completion in type inference functions\n- **embedded/sql:** cancellable wait for catalog\n- **embedded/sql:** expose InferParameters function in RowReader interface\n- **embedded/sql:** type specialization\n- **embedded/sql:** validate either named or unnamed parameters are used within the same stmt\n- **embedded/store:** tx metatada serialization/deserialization\n- **embedded/store:** minor code simplification\n- **embedded/store:** validate replicated tx against current store\n- **embedded/store:** minor refactoring improving readability\n- **embedded/store:** edge-case validation with first tx\n- **embedded/store:** auto-truncate partially written commit log\n- **embedded/tbtree:** nodes and commit prefix renaming\n- **embedded/tbtree:** auto-truncate partially written commit log\n- **embedded/tbtree:** use setOffset for historical data overwriting\n- **embedded/tbtree:** enable snapshot generation while compaction is in progress\n- **embedded/tbtree:** expose current number of snapshots\n- **embedded/tbtree:** full snapshot recovery\n- **embedded/tbtree:** warn if an error is raised while discarding snapshots\n- **pkg/api:** kept simple db creation api to guarantee backward compatibility\n- **pkg/api:** kept same attribute id in TxEntry message\n- **pkg/api:** fix typo inside a comment\n- **pkg/api:** comment on deprecated and not yet supported operations\n- **pkg/api:** remove information not required to cryptographically prove entries\n- **pkg/auth:** list of supported operations in maintenance mode\n- **pkg/database:** support the case where database tx is not the initial one due to migration\n- **pkg/database:** sql operations after catalog is created\n- **pkg/database:** single-store databases\n- **pkg/database:** method to retrieve row cursor based on a sql query stament\n- **pkg/database:** no wait for indexing during tx replication\n- **pkg/database:** use fixed database name\n- **pkg/database:** sql catalog reloading on replica\n- **pkg/database:** migrate systemdb catalog to fixed database naming\n- **pkg/database:** internal method renaming\n- **pkg/database:** sql catalog per database. migration from shared catalog store when required\n- **pkg/database:** replace fixed naming with current database\n- **pkg/database:** replace fixing naming with current database\n- **pkg/database:** expose catalog loading operation\n- **pkg/database:** catalog reloading by replicas\n- **pkg/database:** parameter inference for parsed statements\n- **pkg/database:** re-construct sql engine once catalog is ready\n- **pkg/database:** wait for sql engine initialization before closing\n- **pkg/database:** add IsReplica method\n- **pkg/database:** gracefully stop by cancelling sql initialization\n- **pkg/database:** log when a database is sucessfully opened\n- **pkg/database:** log warning about WIP feature when using replication capabilities\n- **pkg/errors:** immuerrors use an internal map to determine code from the message\n- **pkg/errors:** add more error codes and add Cod prefix to codes var names\n- **pkg/errors:** fix user operations error codes with pgsql official ones, increase coverage\n- **pkg/errors:** add comments\n- **pkg/pgsql:** increase server coverage\n- **pkg/pgsql/server:** protect  parameters description message from int16 overflown\n- **pkg/pgsql/server:** increase code coverage\n- **pkg/pgsql/server:** handle positional parameters\n- **pkg/pgsql/server:** add max parameters value size guard and move error package in a higher level to avoid cycle deps\n- **pkg/pgsql/server:** add bind message negative value size guards\n- **pkg/pgsql/server:** handle empty statements\n- **pkg/pgsql/server:** hardened INTEGER parameters conversion\n- **pkg/pgsql/server:** increase multi inserts tests number in simple and extended query\n- **pkg/pgsql/server:** some polishments in the state machine\n- **pkg/pgsql/server:** simplify query machine\n- **pkg/pgsql/server:** add a guard to check max message size and handle default case in parsing format codes in bind messages\n- **pkg/pgsql/server/fmessages:** uniform malformed bind messages\n- **pkg/server:** systemdb renaming\n- **pkg/server:** disable user mgmt operations in maintenance mode\n- **pkg/server:** move userdata lock in the inner method getLoggedInUserDataFromUsername\n- **pkg/server:** minor updates after rebasing\n- **pkg/server:** remove duplicated property\n- **pkg/server:** minor adjustments after rebasing from master branch\n- **pkg/server:** fix typo in error message\n- **pkg/server:** remove methods moved to user file\n- **pkg/stream:** inject immu errors\n- **pkg/stream:** fix namings on stream api objects\n- **pkg/stream:** use io.Reader interface\n- **pkg/stream:** use wrapped errors\n\n### Features\n- immuclient running as auditor - replace \"prometheus-port\" and \"prometheus-host\" CLI flags with \"audit-monitoring-host\" and \"audit-monitoring-port\" (int) and start a single HTTP server which exposes all the needed endpoints (GET /metrics, /initz, /readyz, /livez and /version)\n- add /healthz and /version endpoints for immudb and immuclient auditor\n- add immudb error package\n- **appendable:** Add remote s3 backend\n- **cmd/immuadmin:** update database command\n- **cmd/immuadmin:** upgrade database creation with settings\n- **cmd/immuadmin:** add flag to create database as a replica\n- **cmd/immuclient:** upgrade database creation with settings\n- **embedded/sql:** support for named positional parameters\n- **embedded/sql:** towards leveraging readers for type inference\n- **embedded/sql:** catalog dumping\n- **embedded/sql:** adding method to infer typed parameters from sql statements\n- **embedded/sql:** support for unnamed parameters\n- **embedded/store:** WIP replicatedCommit\n- **embedded/store:** passive waiting for transaction commit\n- **embedded/store:** tx export and commit replicated\n- **pkg/api:** enhanced createDatabase endpoint to specify database replication\n- **pkg/api:** new endpoint to update database settings\n- **pkg/api:** endpoints for exporting and replicating txs\n- **pkg/client:** replica creation and replication API\n- **pkg/client:** implements update database settings operation\n- **pkg/client:** deprecate CleanIndex operation\n- **pkg/database:** suppport runtime replication settings changes\n- **pkg/database:** implement passive wait for committed tx\n- **pkg/database:** parameters type inference exposed in database package\n- **pkg/database:** db as replica and replication operations\n- **pkg/error:** add improved error handling\n- **pkg/pgsql/server:** add extended query messages and inner logic\n- **pkg/server:** initial handling of database replication settings\n- **pkg/server:** replicas and replication endpoints\n- **pkg/server:** implements update database settings endpoint\n- **pkg/server:** leverage maintenance mode to recover systemdb and defaultdb databases\n- **pkg/server:** stream of committed txs\n- **pkg/server:** enable simultaneous replication of systemdb and defaultdb\n- **pkg/stream:** readFully method to read complete payload transmitted into chunks\n\n\n<a name=\"v1.0.1\"></a>\n## [v1.0.1] - 2021-06-07\n### Bug Fixes\n- go mod tidy/vendor with statik module ([#796](https://github.com/vchain-us/immudb/issues/796))\n- **cmd/immuclient:** remove warnings on sql commands in interactive mode\n- **cmd/immuclient:** improve immuclient tx and safetx error message\n- **embedded/sql:** interprete binary prefix if followed by a quote\n- **pkg/server:** always create system db (even when auth is off)\n\n### Changes\n- enable webconsole in docker image\n- remove mtls evironments var from dockerfile\n- enhance Makefile so to automatically download latest webconsole if not already present\n- README/doc updates ([#791](https://github.com/vchain-us/immudb/issues/791))\n- **embedded/store:** apply synced settings to indexing data\n- **embedded/store:** sync values once all entries are written\n- **pkg/database:** retry database selection after registration\n- **pkg/database:** auto-registration when not present in the catalog\n\n### Features\n- **embedded/sql:** support <column> <type> NULL syntax\n- **pkg/database:** enhace table description by adding nullable constraint\n- **webconsole:** default web console page ([#786](https://github.com/vchain-us/immudb/issues/786))\n\n\n<a name=\"v1.0.0\"></a>\n## [v1.0.0] - 2021-05-21\n### Bug Fixes\n- fix windows installer service and missing flags\n- make prequisites fixes introduced in [#726](https://github.com/vchain-us/immudb/issues/726) ([#732](https://github.com/vchain-us/immudb/issues/732))\n- tlsConfig is always non-nil\n- **cmd/immuclient/immuclienttest:** fix options injection in client test helper ([#749](https://github.com/vchain-us/immudb/issues/749))\n- **embedded:** ensure readers get properly closed\n- **embedded/sql:** fix selector aliasing\n- **embedded/sql:** add missing error handling\n- **embedded/sql:** close reader after loading catalog\n- **embedded/sql:** prevent side effects in conditional clauses\n- **embedded/store:** fix issue when resuming indexing\n- **embedded/store:** notified latest committed tx when opening store\n- **embedded/store:** fix indexing data race\n- **pkg/client:** row verification with nullable values\n- **pkg/client/cache:** fix lock file cache issue on windows\n- **pkg/client/cache:** clean state file when re-writing old stetes\n- **pkg/database:** use SQLPrefix when reopening database\n- **pkg/database:** unwrap parameter before calling sqlexec\n- **pkg/pgsql/server:** handle data_row message with text format\n- **pkg/server:** complete error handling\n- **pkg/server:** disable pgsql server by default and fix previous server tests\n- **pkg/sql:** columns resolved with aliases\n- **pkg/sql:** resolve shift/reduce conflict in SELECT stmt\n\n### Changes\n- move concrete class dblist to database package\n- fix makefile leftovers\n- bundle webconsole inside dist binaries\n- improved make dist script\n- reword wire compatibility\n- increase coverage and minor fix\n- make roadmap about pgsql wire more explicit ([#723](https://github.com/vchain-us/immudb/issues/723))\n- blank line needed after tag or interpreted as comment\n- add pgsql related flags\n- fix rebase leftovers\n- inject immudb user authentication\n- expose missing methods to REST ([#725](https://github.com/vchain-us/immudb/issues/725))\n- fix acronym uppercase\n- revert 3114f927adf4a9b62c4754d42da88173907a3a9f in order to allow insecure connection on grpc server\n- dblist interface is moved to database package and extended\n- **cmd/immuclient:** query result rendering\n- **cmd/immuclient:** render raw values\n- **cmd/immuclient:** add describe, list, exec and query commands to immuclient shell\n- **cmd/immudb:** add debug info env var details\n- **cmd/immudb/command:** restore missing pgsql cmd flag\n- **cmd/immudb/command:** enabled pgsql server only in command package\n- **cmd/immudb/command:** handle tls configuration errors\n- **cmd/immudb/command:** remove parsing path option in unix\n- **embedded/cache:** thread-safe lru-cache\n- **embedded/sql:** minor refactoring to expose functionality needed for row verification\n- **embedded/sql:** keep one snapshot open and close when releasing\n- **embedded/sql:** case insensitive functions\n- **embedded/sql:** move sql engine under embedded package\n- **embedded/sql:** resolve query with current snapshot if readers are still open\n- **embedded/sql:** case insensitive identifiers\n- **embedded/sql:** store non-null values and only col ids on encoded rows\n- **embedded/sql:** expose functionality needed for row verification\n- **embedded/sql:** improved nullables\n- **embedded/sql:** safer support for selected database\n- **embedded/sql:** skip tabs\n- **embedded/sql:** set 'x' as blob prefix\n- **embedded/sql:** validate table is empty before index creation\n- **embedded/store:** log during compaction\n- **embedded/store:** use indexer state to terminate indexing goroutine\n- **embedded/store:** commitWith callback using KeyIndex interface\n- **embedded/store:** pausable indexer\n- **embedded/store:** index info to return latest indexed tx\n- **embedded/tbree:** postpone reader initialization until first read\n- **embedded/tbtree:** index compaction if there is not opened snapshot, open snapshot if compaction is not in already in progress\n- **embedded/tbtree:** remove dots denoting progress when flushing is not needed\n- **embedded/tbtree:** make snapshot thread-safe\n- **embedded/watchers:** cancellable wait\n- **pkg/api:** render varchar as raw string value\n- **pkg/api:** render varchar as quoted string\n- **pkg/api:** include data needed for row verification\n- **pkg/api:** render varchar as quoted strings\n- **pkg/api:** sql api spec\n- **pkg/api/schema:** Handle tools via modules ([#726](https://github.com/vchain-us/immudb/issues/726))\n- **pkg/auth:** add SQL-related permissions\n- **pkg/auth:** perm spec for row verification endpoint\n- **pkg/client:** use  to fetch current database name\n- **pkg/client:** auto convert numeric values to uint64\n- **pkg/client:** improved sql API\n- **pkg/client:** remove deprecated operations\n- **pkg/client/cache:** release lock only if locked file is present, and wait for unlock when already present\n- **pkg/database:** ensure rowReader get closed upon completion\n- **pkg/database:** close sql engine when db gets closed\n- **pkg/database:** support index compaction with sql engine in place\n- **pkg/database:** typed-value proto conversion\n- **pkg/database:** set implicit database using `UseDatabase` method\n- **pkg/database:** support for nullable values\n- **pkg/database:** add missing copy\n- **pkg/database:** use MaxKeyScanLimit to limit query results\n- **pkg/database:** row verification against kv-entries\n- **pkg/database:** return mapped row values\n- **pkg/database:** towards prepared sql query support\n- **pkg/database:** upgrade wait for indexing api\n- **pkg/database:** upgrade ExecAll to use KeyIndex interface\n- **pkg/database:** improved parameters support\n- **pkg/database:** support multi-selected columns\n- **pkg/database:** use store-level snapshots\n- **pkg/database:** make use of UseDatabase operation\n- **pkg/embedded:** introduce Snapshot at Store level\n- **pkg/pgsql:** handle parameter status and terminate messages\n- **pkg/pgsql:** bind immudb sql engine\n- **pkg/pgsql:** handle empty response and command complete message\n- **pkg/pgsql:** fix filename format\n- **pkg/pgsql:** add pgsql server wire protocol stub\n- **pkg/pgsql:** use options flag to determine if pgsql server need to be launched\n- **pkg/pgsql/client:** add jackc/pgx pgsql client for testing purpose\n- **pkg/pgsql/server:** minor fixes and leftovers\n- **pkg/pgsql/server:** enforce reserved statements checks\n- **pkg/pgsql/server:** fix connection upgrade pgsql protocol messages\n- **pkg/pgsql/server:** remove host parameter\n- **pkg/pgsql/server:** limit number of total connections and do not stop server in case of errors\n- **pkg/pgsql/server:** add missing copyright\n- **pkg/pgsql/server:** handle version statement\n- **pkg/pgsql/server:** default error in simplequery loop has error severity\n- **pkg/pgsql/server:** add debug logging messages, split session handling in multiple files\n- **pkg/pgsql/server:** improve error handling when client message is not recognized\n- **pkg/pgsql/server:** move sysdb in session constructor\n- **pkg/pgsql/server:** protect simple query flow with a mutex\n- **pkg/pgsql/server:** handle an ssl connection request if no certificate is present on server\n- **pkg/server:** inject sqlserver in main immudb server\n- **pkg/server:** fix db mock\n- **pkg/server:** remove unused options\n- **pkg/server:** load systemdb before any other db\n- **pkg/server:** use systemdb as a shared catalog store\n- **pkg/server:** remove tls configuration in server\n- **pkg/server:** renamed server reference\n- **pkg/sql:** many internal adjustments related to name binding\n- **pkg/sql:** row reader used to close the snapshot once reading is completed\n- **pkg/sql:** refactored AggregatedValue and TypedValue interfaces\n- **pkg/sql:** unify augmented and grouped row readers\n- **pkg/sql:** support for SUM aggregations\n- **pkg/sql:** row reader to support GROUP BY behaviour\n- **pkg/sql:** grammar adjustments to support aggregated columns\n- **pkg/sql:** swap LIMIT and ORDER BY parse ordering\n- **pkg/sql:** alias overriding datasource name\n- **pkg/sql:** joint column with explicit table reference\n- **pkg/sql:** support multiple spacing between statements\n- **pkg/sql:** upgrade to new store commit api\n- **pkg/sql:** towards catalog encapsulation\n- **pkg/sql:** column descriptors in row readers\n- **pkg/sql:** improve error handling\n- **pkg/sql:** return ErrNoMoreRows when reading\n- **pkg/sql:** improved null value support\n- **pkg/sql:** order-preserving result set\n- **pkg/sql:** using new KeyReaderSpec\n- **pkg/sql:** ensure use snapshot is on the range of committed txs\n- **pkg/sql:** joins limited to INNER type and equality comparison against ref table PK\n- **pkg/sql:** add comment about nested joins\n- **pkg/sql:** use token IDENTIFIER\n- **pkg/sql:** composite readers\n- **pkg/sql:** wip multiple readers\n- **pkg/sql:** catch store indexing errors\n- **pkg/sql:** add generated sql parser\n- **pkg/sql:** make row values externally accessible\n- **pkg/sql:** remove offset param\n- **pkg/sql:** value-less indexed entries\n- **pkg/sql:** encoded value with pk entry\n- **pkg/sql:** remove alter column stmt\n- **pkg/sql:** inmem catalog with table support\n- **pkg/sql:** inmem catalog\n- **pkg/sql:** catalog construct\n- **pkg/sql:** primary key supported type validation\n- **pkg/sql:** use standardized transaction closures\n- **pkg/sql:** col selector with resolved datasource\n- **pkg/sql:** case insensitive reserved words\n- **pkg/sql:** mapping using ids, ordering and renaming support\n- **tools/stream:** upgrade stream tools dependencies\n\n### Code Refactoring\n- **pkg/server:** tls configuration is moved in command package from server\n\n### Features\n- enhance database size and number of entries metrics to support multiple databases add CORS middleware to metrics HTTP endpoints ([#756](https://github.com/vchain-us/immudb/issues/756))\n- display version at startup ([#775](https://github.com/vchain-us/immudb/issues/775))\n- CREATE TABLE IF NOT EXISTS ([#738](https://github.com/vchain-us/immudb/issues/738))\n- **cmd/immuclient:** list and describe tables\n- **cmd/immuclient:** use 'tables' to display the list of tables within selected database\n- **embedded/sql:** special case when all selectors are aggregations and there is no matching rows\n- **embedded/sql:** use snapshot as state method\n- **embedded/sql:** 'NOT NULL' constraint\n- **embedded/sql:** arithmetic expressions within where clause\n- **embedded/sql:** INSERT INTO statement\n- **embedded/sql:** LIKE operator support\n- **embedded/sql:** enhanced sql parser to support multi-lined statements\n- **embedded/store:** uniqueness constraint and de-coupled indexer\n- **embedded/store:**  operation\n- **embedded/tools:** initial SQL stress tool ([#760](https://github.com/vchain-us/immudb/issues/760))\n- **pkg/api:** sql endpoints for row verification\n- **pkg/api:** noWait mode for sql statements\n- **pkg/client:** row verification\n- **pkg/client:** towards client-side sql support\n- **pkg/database:** list and describe tables\n- **pkg/database:** towards sql support\n- **pkg/database:** row verification endpoint\n- **pkg/database:** towards integrated sql engine. handling database creation at server level\n- **pkg/pgsql:** add tls support\n- **pkg/pgsql/server:** handle nil values\n- **pkg/pgsql/server:** setup pgsqk error handling\n- **pkg/pgsql/server:** dblist is injected in pgsql server\n- **pkg/server:** row verification endpoint\n- **pkg/server:** initial integration of sql engine\n- **pkg/server:** expose  endpoint\n- **pkg/sql:** column selector alias support\n- **pkg/sql:** aggregations without row grouping\n- **pkg/sql:** towards supporting COUNT, SUM, MIN, MAX and AVG\n- **pkg/sql:** towards aggregated values support\n- **pkg/sql:** towards supporting filtered aggregations\n- **pkg/sql:** towards group by and aggregations support\n- **pkg/sql:** noWait for indexing mode\n- **pkg/sql:** improved nullable support\n- **pkg/sql:** towards GROUP BY support\n- **pkg/sql:** implements NOW() function\n- **pkg/sql:** list and describe tables\n- **pkg/sql:** LIMIT clause to determine max number of returned rows\n- **pkg/sql:** queries over older data\n- **pkg/sql:** parameters support\n- **pkg/sql:** initial parameters support\n- **pkg/sql:** towards parameter support\n- **pkg/sql:** support for SELECT * FROM queries\n- **pkg/sql:** row projection\n- **pkg/sql:** towards projected rows\n- **pkg/sql:** auto-commit multi-statement script\n- **pkg/sql:** subquery aliases\n- **pkg/sql:** support for WHERE clause\n- **pkg/sql:** towards row filtering with conditional readers\n- **pkg/sql:** support for boolean values\n- **pkg/sql:** index reloading\n- **pkg/sql:** catalog reloading\n- **pkg/sql:** ASC/DESC row sorting by any indexed column\n- **pkg/sql:** implements CREATE INDEX stmt\n- **pkg/sql:** support of foreign keys of any pk type\n- **pkg/sql:** multiple joins support\n- **pkg/sql:** col selector binding\n- **pkg/sql:** jointRowReader towards supporting joins\n- **pkg/sql:** seekable, ordered and filtered table scan\n- **pkg/sql:** ordering in descending mode\n- **pkg/sql:** towards ordering row scans\n- **pkg/sql:** towards query resolution with multiple datasources\n- **pkg/sql:** towards query processing\n- **pkg/sql:** upsert processing\n- **pkg/sql:** towards insert into statement processing\n- **pkg/sql:** table creation with primary key\n- **pkg/sql:** primary key spec\n- **pkg/sql:** initial work on sql engine\n- **pkg/sql:** multi-line scripts\n- **pkg/sql:** snapshot support\n- **pkg/sql:** support for comments\n- **pkg/sql:** support for EXISTS in subquery\n- **pkg/sql:** support for INNER, LEFT and RIGHT joins\n- **pkg/sql:** support for parameters\n- **pkg/sql:** support for system values e.g. TIME\n- **pkg/sql:** aggregated functions\n- **pkg/sql:** use colSelector instead of identifiers\n- **pkg/sql:** expressions parsing\n- **pkg/sql:** multi-db queries\n- **pkg/sql:** multi-row insertion\n- **pkg/sql:** initial support for SELECT statement\n- **pkg/sql:** transactional support\n- **pkg/sql:** support for insertions\n- **pkg/sql:** support table modifications\n- **pkg/sql:** support index creation\n- **pkg/sql:** include column specs\n- **pkg/sql:** partial grammar with multiple statements\n- **pkg/sql:** initial commit for sql support\n\n\n<a name=\"cnlc-2.2\"></a>\n## [cnlc-2.2] - 2021-04-28\n### Bug Fixes\n- update Discord invite link\n- readme typo and mascot placement ([#693](https://github.com/vchain-us/immudb/issues/693))\n- **embedded/store:** ensure done message is received\n- **pkg/client:** delete token file on logout only if the file exists\n\n### Changes\n- Add benchmark to README (based on 0.9.x) ([#706](https://github.com/vchain-us/immudb/issues/706))\n- github workflow to run stress_tool ([#714](https://github.com/vchain-us/immudb/issues/714))\n- README SDK description and links ([#717](https://github.com/vchain-us/immudb/issues/717))\n- fix immugw support\n- Add roadmap\n- remove grpc term from token expiration description\n- **embedded/store:** check latest indexed tx is not greater than latest committed one\n- **embedded/store:** use specified sync mode also for the incremental hash tree\n- **embedded/store:** defer lock releasing\n- **pkg/client/clienttest:** add VerifiedGetAt mock method\n- **pkg/database:** use newly exposed KeyReaderSpec\n\n### Features\n- add token expiration time flag\n- **embedded/store:** readAsBefore and reset reader\n- **pkg/sql:** readAsBefore operation\n\n\n<a name=\"v0.9.2\"></a>\n## [v0.9.2] - 2021-04-08\n### Bug Fixes\n- fix StreamVerifiedSet and Get and add an (integration) test for them\n- fix inclusion proofs in StreamVerifiedSet and Get\n- password reader 'inappropriate ioctl for device' from stdin ([#658](https://github.com/vchain-us/immudb/issues/658))\n- include AtTx in StreamZScan response\n- **embedded:** fix data races\n- **embedded:** use mutex to sync ops at tx lru-cache\n- **embedded/store:** sync ReadTx operation\n- **embedded/store:** fix indexing sync and error retrieval\n- **embedded/store:** ensure waitees get notified when store is restarted\n- **embedded/store:** remove checking for closed store when fetching any vlog\n- **embedded/store:** continue indexing once index is replaced with compacted index\n- **embedded/store:** set delay with duration in ms\n- **embedded/store:** ensure watchers get notified when indexing is up-to-date\n- **embedded/tbtree:** release lock when compaction thld was not reached\n- **embedded/tbtree:** insertion delay while compacting not affecting compaction\n- **embedded/tbtree:** set lastSnapshot once flushed is completed\n- **pkg/auth:** add missing stream write methods to permissions\n- **pkg/client:** fix minor leftover\n- **pkg/client:** fix security issue: if client local state became corrupted an error is returned\n- **pkg/client:** ensure dual proof verification is made when there is a previously verified state\n- **pkg/database:** wrap seekKey with prefix only when seekKey is non-empty\n- **pkg/server:** use latest snapshot when listing users\n\n### Changes\n- add max tx values length guard and remove code duplication\n- move stream service to a proper package\n- improve serverside stream error handling\n- add video streamer command\n- renaming stream methods\n- updating copyright\n- renaming stream methods, add stubs and stream service factory\n- fix binary notation\n- in server store creation max value entry is fixed to 32Mb\n- mocked server uses the inner immudb grpc server and can be gracefully stopped\n- set stream supports multiple key values\n- fixed minimum chunk size at 4096 bytes\n- refactor code quality issues\n- increase stream coverage and add a guard if key is present on a stream but no value is found\n- remove fake proveSinceTxBs key send in streamVerifiableSet\n- polish streams methods and add comments\n- **embedded:** remove unused cbuffer package\n- **embedded:** add logger\n- **embedded:** fix some typos with comments\n- **embedded:** log indexing notifications\n- **embedded:** descriptive logs on indexing and already closed errors\n- **embedded:** add logs into relevant operations\n- **embedded:** compaction and snapshot handling\n- **embedded/appendable:** thread-safe multi-appendable\n- **embedded/appendable:** sync before copying appendable content\n- **embedded/appendable:** multi-appendable fine-grained locking\n- **embedded/store:** remove duplicated logging\n- **embedded/store:** stop indexing while commiting with callback\n- **embedded/store:** leverage fine-grained locking when reading tx data\n- **embedded/store:** general improvements on snapshot management\n- **embedded/store:** log number of transactions yet to be indexed\n- **embedded/store:** use buffered channel instead of a circular buffer\n- **embedded/store:** set a limit on indexing iteration\n- **embedded/store:** set max file size to 2Gb ([#649](https://github.com/vchain-us/immudb/issues/649))\n- **embedded/store:** remove conditional locking before dumping index\n- **embedded/store:** lock-less readTx\n- **embedded/tbtree:** terminate reader if prefix won't match any more\n- **embedded/tbtree:** optimize seek position\n- **embedded/tbtree:** revert seek key setting\n- **embedded/tbtree:** sync key-history log during compaction\n- **embedded/tbtree:** sync before dumping\n- **embedded/tbtree:** optimize seek position\n- **embedded/watchers:** broadcasting optimisation\n- **embedded/watchers:** minor renaming\n- **embedded/watchers:** accept non-continuous notification\n- **pkg/client:** add a guard to check for min chunk size\n- **pkg/client:** add stream service factory on client and increase stream coverage\n- **pkg/client:** maps server error on client package\n- **pkg/client:** remove local files tests\n- **pkg/client:** add GetKeyValuesFromFiles helper method\n- **pkg/client:** integration test is skipped if immudb server is not present\n- **pkg/database:** return error while waiting for index to be up to date\n- **pkg/database:** use in-mem current snapshot in execAll operation\n- **pkg/database:** leverage lightweight waiting features of embedded store\n- **pkg/database:** return error while waiting for index to be up to date\n- **pkg/database:** ensure scan runs over fully up-to-date snapshot\n- **pkg/database:** illegal state guard is added to verifiable get and getTx methods\n- **pkg/server:** max recv msg size is set to 32M\n- **pkg/server:** add a guard to check for min chunk size\n- **pkg/server:** revert quit chan exposure\n- **pkg/server:** add server error mapper interceptor\n- **pkg/server:** add small delay for indexing to be completed\n- **pkg/server:** exposes Quit chan\n- **pkg/stream:** remove bufio.reader when not needed\n- **pkg/stream:** remove duplicated code\n- **pkg/stream:** add ErrNotEnoughDataOnStream error and ImmuServiceReceiver_StreamMock\n- **pkg/stream:** renamed stream test package\n- **pkg/stream:** add a guard to detect ErrNotEnoughDataOnStream on client side\n- **pkg/stream:** remove bufio and add ventryreceiver unit test\n- **pkg/stream:** add some comments to mesasge receiver\n- **pkg/stream:** add more corner cases guards\n- **pkg/stream/streamtest:** add dummy file generator\n- **tools:** fix copyright\n- **tools/stream:** get stream content directly from immudb\n- **tools/stream/benchmark:** add stream benchmark command\n- **tools/stream/benchmark/streamb:** add SinceTx value to getStream\n\n### Code Refactoring\n- stream kvreceiver expose Next method to iterate over key values\n- stream receiver implements reader interface\n- use of explicit messages for stream request\n- **pkg/stream:** use ParseValue func in zreceiver and remove the redundant readSmallMsg func\n- **pkg/stream:** refactor receiver to increase simplicity\n\n### Features\n- add flusher to stream data to client\n- add Stream Scan and client stream ServiceFactory\n- Add StreamVerifiedSet and StreamVerifiedGet\n- add client->server stream handler\n- increase default store max value length to 32MB\n- refactors and implement server->client stream handler\n- Remove unnecessary dependencies ([#665](https://github.com/vchain-us/immudb/issues/665))\n- add support for user, password and database flags in immuclient ([#659](https://github.com/vchain-us/immudb/issues/659))\n- chunk size is passed as argument in client and server\n- **embedded/store:** expose insertion delay while compacting\n- **embedded/store:** configurable compaction threshold to set the min number of snapshots for a compaction to be done\n- **embedded/store:** integrate watchers to support indexing synchronicity\n- **embedded/store:** tx header cache to speed up indexing\n- **embedded/tbtree:** configurable insertion delay while compaction is in progress\n- **embedded/tbtree:** automatically set seekKey based on prefixKey when it's not set\n- **embedded/watchers:** lightweight watching center\n- **embedded/watchers:** fetchable current state\n- **pkg/client:** handle illegal state error\n- **pkg/database:** non-blocking, no history compaction\n- **pkg/database:** non-blocking index compaction\n- **pkg/database:** default scan parameters using up-to-date snapshot\n- **pkg/server:** add signature on stream verifiable methods and tests\n- **pkg/stream:** add exec all stream\n\n\n<a name=\"v0.9.1\"></a>\n## [v0.9.1] - 2021-02-08\n### Bug Fixes\n- **cmd/sservice:** fix group creation linux cross command\n- **cmd/sservice:** fix services management and add permissions guard\n- **embedded/history:** read history log file to set initial offset\n- **embedded/store:** mutex on txlog\n- **embedded/store:** continued indexing\n- **embedded/store:** fix indexing sync ([#621](https://github.com/vchain-us/immudb/issues/621))\n- **embedded/store:** copy key inside TxEntry constructor\n- **embedded/tbtree:** use minkey for desc scan\n- **embedded/tbtree:** prevNode nil comparisson\n- **embedded/tbtree:** determine entry by provided seekKey\n- **embedded/tbtree:** fix key history ordering ([#619](https://github.com/vchain-us/immudb/issues/619))\n- **pkg/client:** fix verifiedGetAt\n- **pkg/client/auditor:** hide auditor password in logs\n- **pkg/client/cache:** return an error if no state is found\n- **pkg/database:** check key does not exists in latest state\n- **pkg/server:** set default settings within DefaultStoreOptions method\n\n### Changes\n- update acknowledgments\n- **cmd/sservice:** minor fixes\n- **embeddded/tbtree:** reduce mem allocs\n- **embedded:** expose store opts\n- **embedded:** refactor TxEntry\n- **embedded/store:** validates targetTx is consistent with proof len\n- **embedded/store:** sync access to commit and tx logs\n- **embedded/store:** move TxReader code to its own file\n- **embedded/store:** renamed reader as KeyReader\n- **embedded/store:** minor KeyReader renaming\n- **embedded/store:** adapt after History changes\n- **embedded/store:** use conditional locking in indexing thread\n- **embedded/store/options.go:** increase DefaultMaxKeyLen\n- **embedded/tbtree:** reduce mem consumption\n- **embedded/tbtree:** offset map per branch\n- **embedded/tbtree:** change history file extension\n- **embedded/tbtree:** history log file\n- **embedded/tbtree:** return ErrOffsetOutOfRange if invalid offset was provided\n- **embedded/tbtree:** configurable max key length\n- **pkg:** current db included in signed state\n- **pkg:** unit testing index cleanup, use selected db\n- **pkg/api:** include server uuid and db name into state message\n- **pkg/api:** history limit as int32\n- **pkg/api:** minor changes in TxScan message\n- **pkg/client:** bound reference if atTx is provided in VerifiedSetReferenceAt\n- **pkg/client:** validate returned entries from metadata\n- **pkg/client:** add state service lock and unlock capabilities\n- **pkg/client:** set bound on SetReference and ZAdd\n- **pkg/client:** strip prefix from returned keys in txById and verifiedTxById\n- **pkg/client:** use indexing specified in GetRequest\n- **pkg/database:** return empty list if offset is out of range\n- **pkg/database:** catch NoMoreEntries error and return empty list on scan and zscan operations\n- **pkg/database:** unsafe read tx inside CommitWith callback\n- **pkg/database:** initial implementation of ExecAll with CommitWith\n- **pkg/server:** include uuid and db as result of verifiable operations\n- **pkg/server:** server mock wrapping default server implementation\n- **pkg/server:** change server default options. Max key value to 10kb\n- **pkg/server:** set default max value lenght to 1Mb\n- **pkg/server:** initialize mts options\n- **pkg/server:** expose store opts\n- **pkg/server:** naming conventions\n- **pkg/server:** use server wrapper to enable post processing of results\n\n### Features\n- **cmd/immuadmin:** db index cleanup\n- **embedded:** history with offset and limit, key updates counting\n- **embedded/appendable:** check no closed and flush before copying\n- **embedded/appendable:** implements Copy function\n- **embedded/appendable:** flush and seek to start before copying\n- **embedded/store:** index cleanup\n- **embedded/store:** TxScan asc/desc order\n- **embedded/store:** commitWith callback receiving assigned txID\n- **embedded/store:** allow increasing max value size after creation time\n- **embedded/tbtree:** HistoryReader to iterate over key updates\n- **embedded/tbtree:** complete history implementation\n- **embedded/tbtree:** full dump using copy on history log\n- **embedded/tbtree:** full dump of current snapshot\n- **pkg:** index cleanup service\n- **pkg/client:** add verifiedGetSince\n- **pkg/client:** implementation of TxScan operation\n- **pkg/client:** add state file locker\n- **pkg/database:** TxScan implementation\n- **pkg/database:** support for free and bound references\n- **pkg/database:** history with offset and limit\n- **pkg/database:** KeyRequest retrieves key at a specific tx or since a given tx\n- **pkg/server:** sign new state within verifiable operations\n- **pkg/server:** use exposed synced mode\n\n\n<a name=\"v0.9.0\"></a>\n## [v0.9.0] - 2021-01-07\n### Bug Fixes\n- remove badger metrics and fix stats command\n- **cmd/immuadmin/command:** fix immuadmin stats ([#592](https://github.com/vchain-us/immudb/issues/592))\n- **pkg/database:** enable scan on fresh snapshot\n- **pkg/server:** shutdown handlers and metrics server are moved in start method\n\n### Changes\n- removing audit-signature and add serverSigningPubKey\n- remove print tree method\n- restore inmemory_cache test\n- **cmd/immuadmin:** temporary disable stats functionality\n- **pkg/api:** upgrade rest endpoints\n- **pkg/client:** implement missing methods in immuclient mock\n- **pkg/server:** temporary remove proactive corruption checker ([#595](https://github.com/vchain-us/immudb/issues/595))\n\n### Features\n- add signature verification with a submitted public key\n\n\n<a name=\"v0.9.0-RC2\"></a>\n## [v0.9.0-RC2] - 2020-12-29\n### Bug Fixes\n- **cmd/immuadmin/command:** fix unit tests\n- **cmd/immuclient:** fix unit tests\n- **embedded/tbtree:** sync GetTs to prevent data races\n- **pkg/api:** change order of validations when checking state signature\n\n### Changes\n- adapt coverage to the new server implementation\n- fix immuserver mock\n- **cmd/immuadmin:** disable stats and removed print tree command\n- **cmd/immuclient:** print verified label when executing safereference\n- **pkg/client:** update service mock to new API\n- **pkg/database:** add input validations during verifiable set\n- **pkg/database:** implements History using lock-based operation\n\n### Code Refactoring\n- uniform server and client tests\n- improving buffconn server with splitting start method in initialization and start\n\n### Features\n- **embedded/store:** implements lock-based History without requiring snapshot creation\n- **pkg/client:** update auditor implementation to new server API\n- **pkg/client:** implementation of client-side verifiedZAdd\n- **pkg/client:** implements VerifiedSetReference\n- **pkg/database:** implementation of verifiableZAdd\n- **pkg/database:** implementation of VerifiableSetReference\n\n\n<a name=\"v0.9.0-RC1\"></a>\n## [v0.9.0-RC1] - 2020-12-22\n### Bug Fixes\n- **cmd/immuclient:** print referenced key\n- **cmd/immuclient:** print referenced key\n- **embedded/store:** fix race condition\n- **embedded/store:** fix race condition\n- **embedded/store:** contemplate bad-formated proof\n- **embedded/tbtree:** fix issue when initialKey is greater than keys\n- **pkg/common:** fix leftover in index wrapper\n- **pkg/database:** lookup for referenced key when atTx is non-zero\n- **pkg/database:** working scan and zscan without pagination\n- **pkg/database:** add cyclic references validation during resolution\n- **pkg/database:** use EncodeReference in ExecAllIOps\n- **pkg/database:** referenced key lookup when atTx is non-zero\n- **pkg/database:** adjust execAll method\n- **pkg/databse:** encoding of reference and zadd\n\n### Changes\n- new proto definitions\n- proof proto definition\n- datatype conversion methods\n- inject store reader inside zscan\n- partial fix of scan test\n- remove badger and merkletree dependencies\n- **api/schema:** removed consistency method\n- **cmd:** adjusted commandline tools\n- **cmd/immuclient:** add verified operations\n- **cmd/immuclient:** add support for safe operations\n- **database:** implements ByIndex operation\n- **database:** implements safeByIndex operation\n- **database:** several fixes and unit testing adaptation\n- **database:** contemplates the case not previously verified tx\n- **database:** implements safeSet operation\n- **embedded:** rename as SnapshotSince\n- **embedded/htree:** minor changes in proof struct\n- **embedded/htree:** internal linear proof renaming\n- **embedded/store:** minor proof renaming\n- **embedded/store:** return ErrTxNotFound when attemping to read non-existent tx\n- **embedded/store:** add tx constructor with entries\n- **embedded/store:** return txMetadata when tx on commit\n- **embedded/store:** allow empty values and don't attempt to store in vlog\n- **embedded/store:** adjustments on store reader\n- **embedded/store:** add snapshotAt and adjust based on it\n- **embedded/store:** wrap keyNotFound index error\n- **embedded/store:** change tx proof method signature\n- **embedded/store:** add method to retrieve tx metadata\n- **embedded/store:** minor changes in proof struct\n- **pkg:** rename to ReferenceRequest\n- **pkg:** rename to CurrentState\n- **pkg:** several minor changes\n- **pkg:** rename to sinceTx\n- **pkg/api:** rename to Entry and ZEntry and embedded Reference\n- **pkg/api:** several improvements on grpc api\n- **pkg/api:** add copyright notice\n- **pkg/api:** new proof messages\n- **pkg/api:** add vLen property to TxEntry\n- **pkg/api:** new server proto definition\n- **pkg/api:** remove digest data type\n- **pkg/auth:** adjust permissions based on new api\n- **pkg/client:** minor renaming to improve readability\n- **pkg/client:** adjusted client providers\n- **pkg/client:** add safe method alises for backwards familiarity\n- **pkg/client:** adjusted golang client\n- **pkg/database:** fixed methods with prefix mgmt, including scan\n- **pkg/database:** minor adjustments\n- **pkg/database:** mutex for reusable txs\n- **pkg/database:** return functionality not yet implemented for VerifiableSetReference\n- **pkg/database:** remove ambiguity in references\n- **pkg/database:** zscan order with tx after key\n- **pkg/database:** wait for indexing on execAll\n- **pkg/database:** delay locking until indexing is done\n- **pkg/database:** get from snapshot or directly from store\n- **pkg/database:** add sinceTx to reference and make it handle key prefixes\n- **pkg/database:** fix get/set with prefix wrapping/unwrapping\n- **pkg/database:** implements new DB api using embedded storage\n- **pkg/ring:** remove ring pkg\n- **pkg/server:** partial use of embedded storage\n- **pkg/server:** return number of tx as db size\n- **pkg/server:** prevent logging request details\n- **pkg/server:** getBatch operation\n- **pkg/server:** implements history operation\n- **pkg/server:** proof construction in safeget operation\n- **pkg/server:** adjusted state signer\n- **pkg/server:** adjusted UUID handler\n- **pkg/server:** remove in-memory option\n- **pkg/server:** disable proactive corruption checker\n- **pkg/server:** disable cc\n- **pkg/server:** adapt implementation to new api\n- **pkg/server:** adapt to new database implementation\n- **pkg/server:** comment unimplemented GetReference method\n- **pkg/store:** moved package\n- **pkg/tbree:** reader with descOrder\n- **server:** implements safeGet\n- **server/api:** minor changes in Item element\n\n### Code Refactoring\n- **pkg/server:** add database interface and inject in server package\n- **pkg/server:** move database to new package\n\n### Features\n- partial implementation of safeGet\n- add store reader, scan and sorted sets\n- **embedded:** inclusiveSeek point when reading\n- **embedded:** add Get operation without the need of a snapshot\n- **embedded/tbtree:** use seek and prefix\n- **pkg/client:** add GetSince method\n- **pkg/client:** implements latest server API\n- **pkg/database:** complete set and get reference methods\n- **pkg/database:** uniform implementation for set, references, zadd, scan and zscan operations\n- **pkg/database:** add execAllOps\n- **pkg/database:** support for seekable scanning\n- **pkg/database:** consistent reference handling, prevent cyclic references\n- **pkg/database:** verify reference upon key resolution\n- **pkg/server:** expose store options\n\n\n<a name=\"v0.8.1\"></a>\n## [v0.8.1] - 2020-12-08\n### Bug Fixes\n- file ext removal\n- fix batchOps permission and clean sv ones\n- add permissions for the new CountAll gRPC method\n- appID parsing from filename\n- appendable extensions without dot\n- restore current offset after reading compressed data\n- encode metadata numeric fields with 64bits\n- consider the case when key was not yet inserted\n- set fileSize after reading values from metadata\n- read metadata before reading\n- pass compression settings into newly created single-file appendable\n- compression with bigger values\n- compression with multiple-files\n- return EOF when data cannot be fully read from appendables\n- set new appendable id when changing current appendable\n- typos\n- avoid duplicate index insertion in zAdd batch operation transaction\n- fix batchOps tests and minors fix for zAdd sorted set key generation\n- **embedded:** set correct offset while reading node\n- **embedded/store:** use verificatication methods for dual proof evaluation\n- **embedded/store:** release tx before linear proof generation\n- **embedded/tools:** catch ErrNoMoreEntries when iterating over txs ([#569](https://github.com/vchain-us/immudb/issues/569))\n- **pkg:** handle expired token error\n- **pkg/client:** token service is not mandatory for setup a client\n- **pkg/client:** handle rootservice error inside constructor\n- **pkg/store:** fixes issue [#532](https://github.com/vchain-us/immudb/issues/532) ([#549](https://github.com/vchain-us/immudb/issues/549))\n- **pkg/store:** fix bug on lexicographical read of multiple sets\n- **pkg/store:** move separator at the beginning of a keyset\n- **pkg/store:** fix scan and add tests for pagination\n- **pkg/store:** scan item now contains immudb index, not badger timestamp\n- **pkg/store:** fix key set generation. index reference flag (0,1 bit) is put at the end of the key to mantain lexicographical properties\n- **pkg/store:** in reference based command key is optional if index is provided. Increase code coverage\n- **pkg/store:** fix reverse history pagination\n\n### Changes\n- error naming\n- include github stars over time chart ([#509](https://github.com/vchain-us/immudb/issues/509))\n- fix naming conventions\n- export uwrap and wrap value method to be used in nimmu\n- link to immuchallenge repo ([#528](https://github.com/vchain-us/immudb/issues/528))\n- fix typo in cmd help ([#541](https://github.com/vchain-us/immudb/issues/541))\n- renaming set key generation method\n- remove *sv methods\n- update readme with SDKs urls ([#506](https://github.com/vchain-us/immudb/issues/506))\n- move set and get batch in a separate file\n- fix naming conventions and typos\n- increase testing timeout\n- add setBatch, getBatch, setBatchOps method in mock client\n- unit testing\n- close appendable hash tree on close\n- print commiting status after sync\n- root method without error\n- cbuffer pkg\n- cbuffer pkg\n- use constants for field len\n- simplify linear proof\n- remove verification during indexing\n- unify kv hash calculation\n- LinearProof verification\n- minor code change\n- multierror handling on close func\n- multierror handling on close func\n- error naming\n- improved comprehensibility of the immudb configuration file\n- unify options for appendables\n- unify naming\n- move options validations to options file\n- minor changes in append operation\n- hash tree construction\n- advances in hash tree and proof construction\n- make spec read fields public\n- implement commit log for btree and improved reduced dump\n- txi commit file ext\n- aof as default file ext\n- sync also applies to index\n- panic if set key fails\n- panic when close returns an error\n- validate clog size after setting fileSize from metadata\n- index file extensions\n- return after auto mode\n- mode as required flag\n- renamed to IndexInfo\n- random and monotonic keys\n- split code into files, index options exposed for external config\n- support for historical value tracing\n- changes on historical value tracing\n- validate hvalue when reading value from vlog\n- newTx method using store values\n- check for non-duplication within same tx\n- when txInclusion is true then txLinking is made as well\n- options validation\n- close index when closing store\n- add VERSION to metadata section\n- time-based flushing\n- renaming batchOps in ops and SetBatchOps in ExecAllOps\n- solved concurrency issues\n- changes to solve and improve concurrency\n- copy on insert and fresh snapshots\n- when compression is enabled, each append takes place into a single file\n- set fileSize based on initial value set at creation time\n- change max value length to 64Mb\n- return partially written number of bytes when write is not completed\n- reorg appendable packages\n- moved stress_tool under tools folder\n- renamed filesize flag\n- use channels for communicating data offsets\n- close txlog after completion\n- random key-value generation in stress tool\n- kv alloc inside tx prep\n- parallel IO non-exclusive yet synchorinized with store closing\n- open with appendables to facilitate parallel IO\n- spec parallel IO in stress tool\n- appendale with path\n- preparing for parallel IO\n- optimized hashtree generation\n- minor internal change on commit tx method\n- time only considering commit time\n- don't print dots if printAfter is 0\n- don't print dots if printAfter is 0\n- minor typo in error message\n- preparing for concurrency optimization\n- minor changes in stress tool\n- close commit log file\n- return EOF when available content is less than buffer size\n- make key-value struct public\n- add more batchOps tests, fixing naming typo\n- fix immudb consistency diagram\n- do not store hvalue in index\n- add more tests and remove code duplications\n- initial commit with functional implementation\n- **embedded/store:** sleep indexing thread until there are entries to be indexed\n- **embedded/store:** internal changes to use innerhash for proof generation\n- **embedded/store:** permit immediate snapshot renewals\n- **embedded/store:** sleep binary linking thread until txs are committed ([#572](https://github.com/vchain-us/immudb/issues/572))\n- **embedded/store:** return ErrNoMoreEntries when all tx has been read\n- **embedded/store:** use embedded reusable built-at-once hash tree\n- **embedded/store:** add data consistency validation during dual proof construction\n- **embedded/store:** pre-allocated tx pool used for indexing and proofs\n- **embedded/store:** pre-allocated tx pool used with dual proof\n- **embedded/store:** changed defaults\n- **pkg/api/schema:** increase code readability\n- **pkg/auth:** fix get batch permissions\n- **pkg/client:** client exposes structured values conversion tools\n- **pkg/client:** fix comment\n- **pkg/client/clienttest:** add mock service client constructor\n- **pkg/client/clienttest:** add inclusion, consistency, byIndex mock methods\n- **pkg/client/clienttest:** add missing method inside service client mock\n- **pkg/client/timestamp:** fix naming convention\n- **pkg/server:** remove ScanSV test\n- **pkg/server:** add database name server validator\n- **pkg/store:** add consistency check on zadd and safezadd index reference method and tests\n- **pkg/store:** fix comments in test\n- **pkg/store:** move reference code to a dedicated file\n- **server:** enhance namings related audit report notification\n\n### Code Refactoring\n- batch ops produces monotonic ts sequences, index is mandatory if reference key is already persisted\n- **pkg/client:** decoupled immuclient from rootService\n- **pkg/store:** get resolve reference only by key\n- **pkg/store:** add set separator. Fixes [#51](https://github.com/vchain-us/immudb/issues/51)\n\n### Features\n- inclusion and consistency verification algorithms\n- configurable max incomming msg size ([#526](https://github.com/vchain-us/immudb/issues/526))\n- extend sorted set to support multiple equals key\n- getReference is exposed throught gRPC server and in SDK\n- client supports paginated scan, zscan, history\n- enhance auditor to publish tampering details at a specified URL (optional)\n- payload and digest lru caches\n- replay missing binary linking entries\n- binary linking in-memory integration\n- root returns number of entries\n- dual proof construction and verification\n- towards linear and dual proofs\n- dual proof and liearProof against target accumulative linear hash\n- dual cryptographic linking\n- store accumulative linear hash into mutable hash tree\n- towards dual cryprographic linking\n- add ZScan pagination\n- consistency proof\n- multierr custom error wrapping multiple errors when closing the store\n- several improvements, data by index\n- towards persistent storage of mutable hash tree\n- ongoing implementation of appendable hash tree\n- add sync method\n- TxReader starts from a txID\n- IndexInfo to return up to which tx was indexed and error status of indexing task\n- add interactive mode for get/set key values\n- add method for reading value of a key within a tx\n- retrieve the list of ts at which a key was updated\n- key updates tracing to support historical reading\n- back btree with multi-appendables\n- add read numeric values\n- initial indexing\n- towards k-indexing\n- add flag to stress_tool to specify if values are random or fixed\n- add lzw compression format\n- Add awesome-go badge ([#554](https://github.com/vchain-us/immudb/issues/554))\n- data compression\n- towards data compression capabilities\n- set compression setting into value logs\n- towards data compression capabilities\n- store immutable settings into metadata section\n- add log file sizes and number of openned files per log type flags\n- enable file mgmt settings\n- multi-file appendables\n- add metadata to appendables\n- include full tx validation and fixed sync issue\n- full committed tx verification against input kv data\n- add key and value length params in stress tool\n- parallel IO support\n- optimized for concurrent committers\n- added concurrent committers to stress tool\n- add cryptographic linking verification of transactions\n- add method to retrieve number of committed txs\n- export sync mode config\n- add batchOps reference operation\n- add history pagination\n- add reverse zscan and reverse history pagination\n- rearrange badges on README ([#555](https://github.com/vchain-us/immudb/issues/555))\n- data compression support by stress tool\n- add atomic operations method\n- expose CountAll through gRPC\n- **embedded/htree:** reusable build-at-once hash tree\n- **embedded/store:** add Alh method to get last committed tx ID and alh ([#570](https://github.com/vchain-us/immudb/issues/570))\n- **pkg/client:** sdk support index reference resolving)\n- **pkg/client:** add SetAll operation for simple  multi-kv atomic insertion ([#556](https://github.com/vchain-us/immudb/issues/556))\n- **pkg/client:** sdk support execAllOps\n- **pkg/client/auditor:** enhance auditor to always send audit notification (even when no tampering was detected) if a notification URL is specified\n- **pkg/store:** reference support index resolution\n- **pkg/store:** sorted sets support multiple equal keys with same score\n- **server:** add --audit-databases optional auditor flag\n\n### Reverts\n- chore: increase testing timeout\n\n\n<a name=\"v0.8.0\"></a>\n## [v0.8.0] - 2020-09-15\n### Bug Fixes\n- **pkg/client:** setBatch creates structured values\n\n### Changes\n- update README file ([#487](https://github.com/vchain-us/immudb/issues/487))\n- switching README.md end lines to LF\n- fix immugw dependency to support new root structure\n- update readme, add immudb4j news ([#488](https://github.com/vchain-us/immudb/issues/488))\n- **cmd:** add signingKey flag\n- **cmd:** remove error suppression in config loader\n- **cmd/immutest/command:** remove immugw dependency from immutest\n- **pkg:** add kvlist validator ([#498](https://github.com/vchain-us/immudb/issues/498))\n- **pkg/server:** log uuid set and get error\n- **pkg/server:** log signer initialization in immudb start\n\n### Code Refactoring\n- wrap root hash and index in a new structure to support signature\n- move immugw in a separate repository\n- **pkg/server:** inject root signer service inside immudb server\n\n### Features\n- auditor verifies root signature\n- **pkg:** add root signer service\n- **pkg/signer:** add ecdsa signer\n\n\n<a name=\"v0.7.1\"></a>\n## [v0.7.1] - 2020-08-17\n### Bug Fixes\n- fix immudb and immugw version and mangen commands errors Without this change, while immuclient and immuadmin still worked as expected, immudb and immugw version and mangen commands were throwing the following error: ./immugw version Error: flag accessed but not defined: config Usage:   immugw version [flags]\n- fix immuclient audit-mode\n- **cmd/immuadmin/command:** fix immuadmin dbswitch\n- **pkg/client:** token service manages old token format\n\n### Code Refactoring\n- configs file are loaded in viper preRun method\n\n### Features\n- **cmd:** process launcher check if are present another istances. fixes [#168](https://github.com/vchain-us/immudb/issues/168)\n\n\n<a name=\"v0.7.0\"></a>\n## [v0.7.0] - 2020-08-10\n### Bug Fixes\n- userlist returns wrong message when logged in as immudb with single database\n- use dedicated logger for store\n- fix compilation error in corruption checker test\n- race condition in token eviction\n- chose defaultdb on user create if not in multiple db mode\n- user list showing only the superadmin user even when other user exist\n- fix multiple services config uninstall\n- skip loading databases from disk when in memory is requested\n- if custom port is <= 0 use default port for both immudb and immugw\n- fix immugw failing to start with nil pointer dereference since gRPC dial options are inherited (bug was introduced in commit a4477e2e403ab35fc9392e0a3a2d8436a5806901)\n- remove os.Exit(0) from disconnect method\n- fix DefaultPasswordReader initialization. fixes [#404](https://github.com/vchain-us/immudb/issues/404)\n- fix travis build sleep time\n- use the correct server logger and use a dedicated logger with warning level for the db store\n- **cmd/immuadmin/command:** fix user list output to support multiple databases (with permissions) for the same user\n- **pkg/auth:** if new auth token is found in outgoing context it replaced the old one\n- **pkg/client:** use database set internally database name\n- **pkg/client:** inherit dial options that came from constructor\n- **pkg/fs:** don't overwrite copy error on Close malfunction. Sync seals the operation–not Close.\n- **pkg/gw:** fix client option construction with missing homedirservice\n- **pkg/server:** added os file separator and db root path\n- **pkg/server:** avoid recursion on never ending functionality. Further improvements can be done ([#427](https://github.com/vchain-us/immudb/issues/427))\n- **pkg/server/server:** change user pass , old password check\n- **pkg/service:** restore correct config path\n- **pkg/store:** fix count method using a proper NewKeyIterator\n\n### Changes\n- refactor immuclient test\n- fix tokenService typos\n- add use database gw handler\n- spread token service usage\n- enhance immudb server messages during start\n- capitalize immudb stop log message for consistency reasons\n- remove permission leftovers and useless messages in client server protocol\n- log immudb user messages during start to file if a logfile is specified\n- use debug instead of info for some log messages that are not relevant to the user\n- versioning token filename\n- add auditor single run mode\n- fix conflicts while rebasing from master\n- remove user commands from immuclient\n- add unit tests for zip and tar\n- fix test\n- improve command ux and fix changepassword test. Closes [#370](https://github.com/vchain-us/immudb/issues/370)\n- change insert user to use safeset instead of set\n- remove useless quitToStdError and os.exit calls\n- remove sleep from tests\n- use 0.0.0.0 instead of 127.0.0.1 as default address for both immudb and immugw\n- using cobra command std out\n- move immuadmin and immuclient service managing to pkg\n- add homedir service\n- rewrite tests in order to use pkg/server/servertest\n- add codecov windows and freebsd ignore paths\n- fix typo in UninstallManPages function name\n- add coveralls.io stage\n- refactor immuadmin service to use immuos abstraction\n- add coverall badge\n- add filepath abstration, use it in immuadmin backup and enhance coverage for backup test\n- add os and filepath abstraction and use it in immuadmin backup command\n- fix codecov ignore paths\n- remove os wrapper from codecov.yml\n- fix go test cover coverall\n- fix immuclient tests\n- add empty clientTest constructor\n- user list client return a printable string\n- add unexpectedNotStructuredValue error. fixes [#402](https://github.com/vchain-us/immudb/issues/402)\n- add failfast option in test command\n- fix contributing.md styling\n- remove tests from windows CI\n- add go-acc to calculate code coverage and fix go version to 1.13\n- refactor immuclient test, place duplicated code in one place\n- add an explicit data source on terminal reader\n- TestHealthCheckFails if grpc is no fully closed\n- add options to tuning corruption checking frequency, iteration and single iteration\n- **cmd:** immugw and immudb use process launcher for detach mode\n- **cmd:** token is managed as a string. fixes [#453](https://github.com/vchain-us/immudb/issues/453)\n- **cmd:** fix typo in command messages\n- **cmd:** enhance PrintTable function to support custom table captions and use such captions in immuadmin user and database list commands\n- **cmd:** restore error handling in main method\n- **cmd/helper:** add doc comment for the PrintTable function\n- **cmd/immuadmin:** immuadmin user sub-commands use cobra, tests\n- **cmd/immuadmin/command:** remove useless auth check in print tree command\n- **cmd/immuadmin/command:** fix text alignment and case\n- **cmd/immuadmin/command:** move command line and his command helper method in a single file\n- **cmd/immuadmin/command:** automatically login the immuadmin user after forced password change is completed\n- **cmd/immuadmin/command:** remove silent errors in immuadmin\n- **cmd/immuadmin/command:** move options as dependency of commandline struct\n- **cmd/immuadmin/command:** user and database list use table printer\n- **cmd/immuclient/command:** remove useless comment\n- **cmd/immuclient/immuc:** inject homedir service as dependency\n- **cmd/immugw/command:** use general viper.BindPFlags binding instead of a verbose bindFlags solution\n- **cmd/immutest/command:** inject homedir service as dependency\n- **pkg/client/options:** add options fields and test\n- **pkg/client/timestamp:** removed unused ntp timestamp\n- **pkg/fs:** utilise filepath directory walk for copy\n- **pkg/fs:** traceable copy errors\n- **pkg/fs:** create file copy with flags from the start, in write-only mode\n- **pkg/server:** add corruption checker random indexes generator  missing dependency\n- **pkg/server:** improve tests\n- **pkg/server:** mtls test certificates system db as immuserver property improve tests\n- **pkg/server:** make DevMode default false and cleanup call to action message shwon right after immudb start\n- **pkg/server:** immudb struct implements immudbIf interface, fixes previous tests\n- **pkg/server:** add corruption checker random indexes generator dependency\n- **pkg/store/sysstore:** remove useless method\n\n### Code Refactoring\n- add immuadmin services interfaces and terminal helper\n- remove custom errors inside useDatabase and createDatabase services. Fixes [#367](https://github.com/vchain-us/immudb/issues/367)\n- handle in idiomatic way errors in changePermission grpc service. Fixes [#368](https://github.com/vchain-us/immudb/issues/368)\n- decoupled client options from server gateway constructor\n- refactor detach() method in a process launcher service\n- decouple manpage methods in a dedicated service\n- **cmd:** move database management commands from immuclient to immuadmin. Fixes [#440](https://github.com/vchain-us/immudb/issues/440)\n- **cmd/immuadmin/command:** using c.PrintfColorW instead c.PrintfColor to increase cobra.cmd integration for tests\n- **cmd/immuadmin/command:** move checkLoggedInAndConnect, connect, disconnect from server to login file\n- **cmd/immuadmin/command:** remove useless argument in Init and improve naming conventions\n\n### Features\n- add multiple databases support\n- **cmd/helper:** add table printer\n- **cmd/helper:** add PrintfColorW to decouple writer capabilities\n- **cmd/immutest:** allow immutest to run on remote server\n- **pkg/client:** add token service\n\n\n<a name=\"v0.6.2\"></a>\n## [v0.6.2] - 2020-06-15\n### Bug Fixes\n- require auth for admin commands even if auth is disabled on server, do not allow admin user to be deactivated\n- base64 decoding of passwords: now it requires the \"enc:\" prefix as base64 can not be differentiated from plain-text at runtime (e.g. \"immu\" is a valid base64 encode string)\n- only require admin password to be changed if it is \"immu\"\n- fix ldflags on dist binaries and add static compilation infos\n- **cmd/immuclient/audit:** fix base64 encoded password not working with immuclient audit-mode\n- **immuadmin:** repair password change flow right after first admin login\n- **pkg/auth:** make ListUsers require admin permissions\n- **pkg/ring:** fixes cache corruption due to a ring buffer elements overwrite  on same internal index\n- **pkg/store:** remove useless ringbuffer array\n- **pkg/store:** fix uniform cache layers size allocation with small values\n\n### Changes\n- add bug and feature request report github template\n- fix golint errors\n- githubactions add windows and build step\n- remove plain-test admin password from log outputs\n- add message (in cli help and swagger description) about base64-encoded inputs and outputs of get and set commands\n- FreeBSD section in the readme\n- fix changelog auto generation repo and releasing template\n- **pkg/server:** reduce corruption_checker resources usage\n\n### Features\n- expose through REST the following user-related actions: create, get, list, change password, set permission and deactivate\n- immuclient freebsd daemon installation\n- freebsd service install\n- read immudb default admin password from flag, config or env var\n- use immu as default admin password instead of randomly generated one\n- **immudb:** accept base64 string for admin password in flag/config/env var\n\n\n<a name=\"v0.6.1\"></a>\n## [v0.6.1] - 2020-06-09\n### Bug Fixes\n- disallow running immuadmin backup with current directory as source\n- immuadmin dump hangs indefinitely if token is invalid\n- [#283](https://github.com/vchain-us/immudb/issues/283), immudb crash on dump of empty db\n- fix corruption checker crash during immudb shoutdown\n- choose correct config for immudb, immugw installation\n- update env vars in README and Docker files ([#297](https://github.com/vchain-us/immudb/issues/297))\n- **cmd/immuadmin:** inform user that manual server restart may be needed after interrupted backup\n- **cmd/immuadmin:** validate backup dir before asking password\n- **cmd/immuclient:** add version sub-command to immuclient interractive mode\n- **cmd/immuclient:** nil pointer when audit-mode used with immudb running as daemon\n- **cmd/immutest:** add new line at the end of output message\n- **pkg/ring:** return nil on inconsistent access to buffer rings elements\n- **pkg/store:** fix visualization of not frozen nodes inside print tree command\n- **pkg/store/treestore:** fix overwriting on not freezes nodes\n\n### Changes\n- add license to tests ([#288](https://github.com/vchain-us/immudb/issues/288))\n- update statement about traditional DBs in README\n- remove immugw configs from immudb config file [#302](https://github.com/vchain-us/immudb/issues/302)\n- **cmd/immuadmin/command:** improve visualization ui in merkle tree print command\n- **cmd/immuadmin/command/service:** syntax error, fail build on windows\n- **cmd/immuclient/audit:** code cleanup and renaming\n- **pkg/store/treestore:** improve cache invalidation\n\n### Code Refactoring\n- handling of failed dump\n\n### Features\n- allow the password of immugw auditor to be base64 encoded in the config file ([#296](https://github.com/vchain-us/immudb/issues/296))\n- add auth support to immutest CLI\n- add server-side logout ([#286](https://github.com/vchain-us/immudb/issues/286))\n- **cmd/helper:** add functionalities to print colored output\n- **cmd/immuadmin:** add print tree command\n- **cmd/immutest:** add env var for tokenfile\n- **pkg:** add print tree functionality\n\n\n<a name=\"v0.6.0\"></a>\n## [v0.6.0] - 2020-05-28\n### Bug Fixes\n- rewrite user management to store user, password and permissions separately\n- readme doc, immugw start command\n- typos in immugw help\n- licence\n- modify BUILT_BY flag with user email to keep dist script functionalities in makefile\n- race condition while prefixing keys\n- various permissions-related issues\n- when fetching users, only fetch the latest version\n- admin user can change password of regular user without having to know his old password\n- use iota for permissions enum\n- immugw pid path consistency\n- SafeZAdd handler SafeZAdd tests. Fix ReferenceHandler test\n- safereference_handler, add tests [#264](https://github.com/vchain-us/immudb/issues/264)\n- safeset_handler test\n- [#260](https://github.com/vchain-us/immudb/issues/260)\n- implementation of user deactivate\n- fix immuclient windows build\n- fix bug on zadd server method\n- **cmd/helper:** fix osx build\n- **cmd/immuadmin/command/service:** fix error returned by GetDefaultConfigPath\n- **cmd/immuadmin/command/service:** fix immudb data uninstall\n- **cmd/immuclient:** Added missing documentations and renamed deprecated structures.\n- **cmd/immuclient:** Fixed wrong audit credentials error\n- **cmd/immuclient:** Added missing documentations and renamed deprecated structures.\n- **cmd/immuclient:** Fixed paths.\n- **cmd/immuclient/audit:** fix immuclient service installation\n- **cmd/immuclient/service:** fix config import\n\n### Changes\n- rename back immugw \"trust checker\" to \"auditor\"\n- improve help for immugw auditor metrics\n- rename audit(or) to trust-check(er)\n- use status.Error instead of status.Errorf for static string\n- use Sprintf instead of string concat\n- extract root service from immugw trust checker\n- rename default immudb and immugw loggers\n- turn sys keys prefixes into constants\n- remove setup release in makefile\n- service_name inside release build script  is configurable inside makefile. closes [#159](https://github.com/vchain-us/immudb/issues/159) closes [#239](https://github.com/vchain-us/immudb/issues/239)\n- remove ppc and arm target arch from makefile\n- add CD releases, certificate sign, vcn sign in makefile dist scripts\n- add dist scripts in makefile\n- fix typo in README.md\n- add changelog\n- add getByRawSafeIndex tests\n- move corruption checker inside immudb process\n- update docker files\n- immugw audit publishes -1 if empty db and -2 if error, otherwise 0 (check failed) or 1 (succeeded)\n- immugw audit publishes -1 value for result and root indexes in case the audit could not run (i.e. empty database, error etc.)\n- change immugw metrics port\n- refactoring file cache for immugw auditor\n- rename immugw trust-checker to auditor\n- move auditor package under client directory\n- **cmd:** fix corruption checker flag\n- **cmd/helper:** add path os wildcard resolver\n- **cmd/helper:** fix config path manager stub on linux\n- **cmd/helper:** remove useless var\n- **cmd/immuadmin:** path of service files and binaries are os dynamic\n- **cmd/immuclient:** add pid file management on windows\n- **immuadmin:** improve the very first login message\n\n### Code Refactoring\n- refactor safeset_handler_test\n\n### Features\n- Audit agent added to immuclient.\n- make metrics server start configurable through options to aid tests. MetricsServer must not be started as during tests because prometheus lib panis with: duplicate metrics collector registration attempted.\n- add immugw auditor\n- invalidate tokens by droping public and private keys for a specific user\n- check permissions dynamically\n- implement user permissions and admin command to set them\n- prefix user keys\n- update metrics from immugw auditor\n- **cmd/immuclient/command:** add getByRawSafeIndex method\n- **immugw:** add GET /lastaudit on metrics server\n\n\n<a name=\"v0.6.0-RC2\"></a>\n## [v0.6.0-RC2] - 2020-05-19\n### Bug Fixes\n- fix stop, improve trust checker log\n- handling immudb no connection error and comments\n- **cmd/immuadmin:** old password can not be empty when changing password\n- **cmd/immuadmin/command:** remove PID by systemd directive\n- **cmd/immuadmin/command:** do not erase data without explicit consensus. closes 165\n- **cmd/immuadmin/command/service:** fix [#188](https://github.com/vchain-us/immudb/issues/188)\n- **cmd/immuclient:** correct argument index for value in rawsafeset\n- **cmd/immutest:** rename immutestapp files to immutest\n- **pkg/server:** fix error when unlocking unlocked stores after online db restore\n- **pkg/store:** wait for pending writes in store.FlushToDisk\n\n### Changes\n- remove online backup and restore features\n- add copyrights to makefile. closes [#142](https://github.com/vchain-us/immudb/issues/142)\n- update dockerfiles\n- fix immugw dockerfile with dir property, update README\n- manage dir flag in immutc\n- add immutc makefile and remove bm from makeall\n- fix useless checks, binding address\n- use empty struct for values in map that store admin-only methods and add also Backup and Restore methods\n- fix useless viper dependency\n- fix travis build\n- **cmd:** remove useless exit call\n- **cmd/immuadmin:** add todos to use the functions from fs package in immuadmin service helpers\n- **cmd/immuadmin:** rename offline backup and restore to reflect their offline nature\n- **cmd/immuadmin:** fix typo in todo keyword\n- **cmd/immugw:** add dir property with default\n- **pkg/client:** fix ByRawSafeIndex method comment\n- **pkg/client:** add dir property with default\n- **pkg/client:** fix client contructor in tests\n- **pkg/gw:** add dir property with default, fix error messages\n- **pkg/gw:** remove useless root service dependency\n- **pkg/immuadmin:** use ReadFromTerminalYN function to get user confirmation to proceed\n- **pkg/store:** fix typo in tamper insertion order index error message\n- **server:** do not close the stores during cold Restore\n- **server:** check for null before closing stores during backup and return absolute backup path\n\n### Features\n- show build time in user timezone in version cmd output\n- set version to latest git tag\n- added interactive cli to immuclient\n- **cmd/immutc:** add trust checker command\n- **immuadmin:** add offline backup and restore option with possibility to stop and restart the server manually\n- **immuadmin:** add cold backup and restore\n- **pkg/api/schema:** add byRawSafeIndex proto definitions and related parts\n- **pkg/client:** add byRawSafeIndex client\n- **pkg/server:** add byRawSafeIndex server\n- **pkg/store:** add byRawSafeIndex methods and relateds parts\n- **pkg/tc:** add trust checker core\n\n\n<a name=\"v0.6.0-RC1\"></a>\n## [v0.6.0-RC1] - 2020-05-11\n### Bug Fixes\n- change user message when new password is identical to the old one\n- remove common package\n- use grpc interceptors for authentication\n- place password input on the same line with the password input label\n- store auth tokens in user home dir by default and other auth-related enhancements\n- fix structured values integration\n- disabling CGO to removes the need for the cross-compile dependencies\n- remove useless error. https://github.com/dgraph-io/badger/commit/c6c1e5ec7690b5e5d7b47f6ab913bae6f78df03b\n- return correct error in safeZAdd handler\n- upadating takama/daemon to fix freebsd compilation. closes [#160](https://github.com/vchain-us/immudb/issues/160)\n- split main fails in separate folders\n- fix immugw immud services in windows os\n- improving config management on linux and improved usage message\n- add immugw exec to docker image\n- wrap root_service with mutex to avoid dirty read\n- fix env vars. Switch to toml\n- prevent immuadmin users other than immu to login\n- env vars names for immudb port and address in CLIs help\n- enhance authentication and user management\n- environment variables\n- fix bug related to retrieve a versioned element by index\n- use arguments instead of flags for user create, change-password and deleted\n- fix reading user input for passwords\n- return verified item on safeset\n- code format for multiple files to comply with Go coding standards\n- **/pkg/gw:** manage 0 index value in history\n- **/pkg/gw:** manage 0 index value in safeget\n- **/pkg/gw:** fix guard\n- **cmd:** get and safeget error for non-existing key\n- **cmd:** remove short alias for tokenfile flag\n- **cmd/immu:** fix backup file opening during restore\n- **cmd/immu:** Fix newline at the end of restore/backup success message\n- **cmd/immu:** set auth header correctly\n- **cmd/immuadmin:** generate admin user if not exists also at 1st login attempt with user immu\n- **cmd/immuadmin:** verify old password immediately during change-password flow\n- **cmd/immuadmin:** fix uninstall automatic stop\n- **cmd/immuadmin/command/service:** fix windows helper import\n- **cmd/immuadmin/command/service:** fix group creation\n- **cmd/immuadmin/command/service:** fix config files in windows\n- **immuclient:** do not connect to immudb server for version or mangen commands\n- **immudb/command:** fix command test config file path\n- **immupopulate:** do not connect to immudb server for version or mangen commands\n- **pkg/api/schema:** fix typos\n- **pkg/client:** fix stream closing to complete restore\n- **pkg/client:** fix cleaning on client tests\n- **pkg/client:** fix root file management\n- **pkg/client/cache:** manage concurrent read and write ops\n- **pkg/gw:** fix hash calc for reference item\n- **pkg/gw:** fix lock release in case of errors\n- **pkg/gw:** ensure computed item's matches the proof one for safeset\n- **pkg/gw:** fix error handling in safe method overwrite\n- **pkg/gw:** manage concurrent safeset and get requests\n- **pkg/gw:** improve immugw logging\n- **pkg/gw:** use leaf computed from the item\n- **pkg/gw:** fix gw stop method\n- **pkg/gw:** refactor overwrite safe set and get request in order to use dependencies\n- **pkg/server:** correct error checking\n- **pkg/server:** improve immudb logging\n- **pkg/store:** correct health check error comparison\n- **pkg/store:** correct gRPC code for key not found error\n- **pkg/store:** badger's errors mapping\n- **pkg/store:** truncate set to true for windows\n- **pkg/store:** fix [#60](https://github.com/vchain-us/immudb/issues/60).\n\n### Changes\n- get rid of password generating library\n- update .gitignore\n- linux services are managed by immu user\n- add missing dep\n- update deps\n- simplify error during first admin login attempt\n- marshal options to JSON in String implementations\n- grpc-gateway code generation\n- Add swagger generation command\n- switch to 2.0.3 go_package patched badger version\n- simplify .gitignore\n- import badger protobuffer schema\n- rename immutestapp to immutest\n- Update makefile in order to use badeger on codenotary fork\n- fix compilation on OS X\n- Switch services default ports\n- improve configuration features on services management\n- prefix version-related variable holding common ldflags so that it matches the convention used for the other version-related variables\n- add pid params in config\n- fix typo in dump command help\n- remove default version value from immu* commands\n- change default output folder for  man pages generation\n- rename immupopulate to immutestapp\n- remove app names from ldflags in Makefile, update immudb description in help\n- Switch config format to toml\n- Fix namings conventions on immud command config properties\n- Remove man pages\n- Fix coding style\n- move token file name into options and some cleanup\n- Print immud running infos properly\n- merge code changes related to histograms and detached server options\n- refactor immuadmin and stats command to allow dependency injection of immu client\n- change label from \"latency\" to \"duration\" in immuadmin statistics\n- remove types.go from immuadmin statistics cmd\n- rename functions that update metrics\n- integrate latest changes from master branch\n- update termui transitive dependencies\n- move immuadmin metrics struct to dedicated file\n- rewrite immuadmin client to align it with latest refactorings\n- fix project name in CONTRIBUTING.md\n- Suppression of ErrObsoleteDataFormat in order to reduce breaking changes\n- fix typo in raw command usage help\n- rename backup to dump, and disable restore\n- info if starting server with empty database\n- use exact number of args 2 for set and safeset\n- Set correct data folder and show usage in config. closes [#37](https://github.com/vchain-us/immudb/issues/37)\n- instructions after make\n- update default dbname in server config\n- remove immuclient from default make target\n- protect default data folder from being inserted in repo\n- change config path in server default options\n- change default immudb data folder name from \"immudb\" to \"immudata\"\n- rename binaries and configs\n- rename test config file\n- remove codenotary badger fork requirement\n- rename command \"consistency\" to \"verify\"\n- remove codenotary badger fork requirement\n- change auth header to string\n- rename command \"verify\" to \"check-consistency\"\n- simplify auth options in immu client\n- improve login help and cleanup irelevant TODO comment\n- add host and version to swagger json\n- move server password generation to server start\n- get rid of locks on immuclient during login and user during set password\n- use all lowercase for immudb everywhere it is mentioned to the user\n- Switch config format to ini\n- **cmd:** add env vars to commands help and man\n- **cmd:** addutility to manage a y/n dialog\n- **cmd:** enhance unauthenticated message\n- **cmd/immu:** Add reference in command line\n- **cmd/immuadmin:** set titles to green and use grid width instead of terminal width to determine plots data length\n- **cmd/immuadmin:** remove duplicate dependency\n- **cmd/immuadmin:** remove log files in uninstall\n- **cmd/immuadmin:** improve code organization and help messages\n- **cmd/immuadmin:** remove unused varialble in user command\n- **cmd/immuadmin:** extract to functions the init and update of plots in visual stats\n- **cmd/immuadmin:** fix examples alignment in user help\n- **cmd/immuadmin:** remove ValidArgsFunction from user sub-command\n- **cmd/immuadmin:** improved immuadmin service ux\n- **cmd/immuadmin:** fix build on freebsd\n- **cmd/immuadmin/commands:** fix typo in error message and remove useless options\n- **cmd/immuadmin/commands:** fix empty imput and improve immugw install ux\n- **cmd/immugw:** overwrite safeZAdd default handler\n- **cmd/immugw:** Use default options values\n- **cmd/immugw:** overwrite safeReference default handler\n- **immuclient:** move pre and post run callbacks to sub-commands\n- **pkg/auth:** improve local client detection\n- **pkg/client:** add reference client command\n- **pkg/client:** add ZAdd and ZScan client methods\n- **pkg/gw:** fix default config path for immugw\n- **pkg/gw:** refactor handlers in order to use cache adapters\n- **pkg/gw:** remove useless check on path\n- **pkg/gw:** manage panic into http error\n- **pkg/server:** return descriptive error if login gets called when auth is disabled\n- **pkg/server:** keep generated keys (used to sign auth token) only in memory\n- **pkg/store:** switch to gRPC errors with codes\n\n### Code Refactoring\n- refactor  packages to expose commands\n- remove immuclient initialization from root level command\n- Removed needless allocations and function calls, Rewrote Immuclient package layout\n- config is managed properly with cobra and viper combo. closes [#44](https://github.com/vchain-us/immudb/issues/44)\n- Structured immugw and handling SIGTERM. closes [#33](https://github.com/vchain-us/immudb/issues/33)\n- pkg/tree got ported over to its own external repo codenotary/merkletree\n- **pkg/store:** prefix errors with Err\n\n### Features\n- add safeget, safeset, safereference and safezadd to the CLI client\n- add mtls to immud\n- add version to all commands\n- Add config file. Closes [#36](https://github.com/vchain-us/immudb/issues/36) closes [#37](https://github.com/vchain-us/immudb/issues/37)\n- add mtls to immugw\n- add mtls certificates generation script\n- always use the default bcrypt cost when hashing passwords\n- implement user management\n- Add capabilities to run commands in background. Closes [#136](https://github.com/vchain-us/immudb/issues/136) closes [#106](https://github.com/vchain-us/immudb/issues/106)\n- hide some of the widgets in immuadmin statistics view if the server does not provide histograms\n- add --no-histograms option to server\n- complete implementation of visual statistics in immuadmin\n- change client \"last query at\" label\n- add \"client last active at\" metric\n- add uptime to metrics\n- add immuadmin-related rules to makefile\n- create a new build process [#41](https://github.com/vchain-us/immudb/issues/41)\n- add text and visual display options to immuadmin statistics\n- Add multiroot management, Add client mtls, client refactor. closes [#50](https://github.com/vchain-us/immudb/issues/50) closes [#80](https://github.com/vchain-us/immudb/issues/80)\n- Add config file to immu\n- improve metrics\n- add immuadmin client (WiP)\n- add Prometheus-based metrics\n- Add raw safeset and safeget method\n- Add IScan and improve ScanByIndex command. Closes [#91](https://github.com/vchain-us/immudb/issues/91)\n- add insertion order index and tests. closes [#39](https://github.com/vchain-us/immudb/issues/39)\n- add current command. Closes [#88](https://github.com/vchain-us/immudb/issues/88)\n- Add structured values components\n- structured value\n- close immuadmin visual statistics also on <Escape>\n- add config item to toggle token-based auth on or off\n- add token based authentication\n- add number of RCs per client metric\n- Add config and pid file to immugw\n- **cmd:** make unauthenticated message user-friendly\n- **cmd/immu:** fix CLI output of safe commands\n- **cmd/immu:** add backup and restore commands\n- **cmd/immu:** Add ZAdd and ZScan command line methods\n- **cmd/immu:** add safeget, safeset, safereference and safezadd commands to immu CLI\n- **cmd/immu:** enhance backup and restore commands by writing/reading proto message size to/from the backup file\n- **cmd/immuadmin:** add configuration management in service command\n- **cmd/immuadmin:** add services management subcommand\n- **cmd/immud:** Add pid file parameter\n- **cmd/immugw:** add immugw command\n- **cmd/immugw:** add logger\n- **cmd/immupopulate:** add immupopulate command\n- **immuadmin:** show line charts instead of piecharts\n- **immuadmin:** add dump command\n- **pkg/api/schema:** add autogenerated grpc gw code\n- **pkg/api/schema:** add backup and restore protobuffer objects\n- **pkg/api/schema:** add safeget set patterns export\n- **pkg/api/schema:** add reference and safeReference grpc messages\n- **pkg/api/schema:** add zadd, safezadd and zscan grpc messages\n- **pkg/client:** add backup and restore and automated tests for them\n- **pkg/client:** move keys reading outside ImmuClient and also pass it context from outside\n- **pkg/client:** use dedicated structs VerifiedItem and VerifiedIndex as safe functions return type\n- **pkg/client:** add root cache service\n- **pkg/client:** add new RootService field to ImmuClient, initialize it in connectWithRetry and use it in Safe* functions\n- **pkg/client/cache:** add cache file adapter\n- **pkg/gw:** add safeset get overwrites\n- **pkg/gw:** add safeZAdd overwrite\n- **pkg/gw:** add reference and safeReference rest endpoint\n- **pkg/logger:** Add file logger\n- **pkg/server:** Add backup and restore handlers\n- **pkg/server:** add reference and safeReference handlers\n- **pkg/server:** Add pid file management\n- **pkg/server:** add ZAdd, safeZAdd and zscan handlers\n- **pkg/store:** add ZAdd, safeZAdd and ZScan methods and tests\n- **pkg/store:** add reference and safeReference methods and tests\n- **pkg/store:** Add store backup and restore methods and tests\n\n\n<a name=\"v0.0.0-20200206\"></a>\n## v0.0.0-20200206 - 2020-02-06\n### Bug Fixes\n- client dial retry and health-check retry counting\n- missing dependencies\n- address parsing\n- apply badger options in bm\n- client default options\n- typo\n- pin go 1.13 for CI\n- nil out topic on server shutdown\n- get-batch for missing keys\n- server re-start\n- protobuf codegen\n- rpc bm startup\n- **bm:** allow GC\n- **bm/rpc:** await server to be up\n- **client:** missing default options\n- **db:** correct treestore data race\n- **db:** correct cache pre-allocation\n- **db:** workaround for tree indexes when reloading\n- **db:** cannot call treestore flush on empty tree\n- **db:** correct tree cache positions calculation at boostrap\n- **db:** include key as digest input\n- **db:** correct tree width calculation at startup\n- **db:** default option for sync write\n- **db/treestore:** revert debug if condition\n- **pkg/server:** correct nil pointer dereferences\n- **pkg/server:** correct nil pointer dereference on logging\n- **pkg/store:** correct inclusion proof call\n- **pkg/store:** correct key prefix guard\n- **pkg/store:** add miss condition to limit scan result\n- **server:** avoid premature termination\n- **tools/bm:** stop on error and correct max batch size\n- **tree:** benchmark timers\n- **tree:** `at` cannot be equal to width\n- **tree:** handle missing node in mem store\n- **tree:** correct root of an empty tree\n\n### Changes\n- server refactoring\n- rename module\n- editorconfig\n- gitignore\n- gitignore immu binaries\n- gitignore vendor\n- bumps badger to v2.0.1\n- update .gitignore\n- remove stale files\n- update copyright notice\n- gitignore bm binary\n- gitignore bm binary\n- change default data dir to \"immustore\"\n- gitignore working db directory\n- nicer error reporting on client failure\n- immu client cleanup\n- client option type\n- docker cleanup\n- server options refactoring\n- trigger CI on PRs\n- move server options to type\n- bump badger to latest v2\n- remove dead client code\n- license headers\n- server options refactoring\n- client connection wording\n- license headers\n- api cleanup\n- logging cleanup + thresholds\n- more load on rpc bm\n- improved logging\n- simplified client interface\n- extract client health check error\n- client error refactoring\n- missing license headers\n- refactor rpc bms\n- add license headers\n- refactor server logging\n- move client options to type\n- strip bm binary\n- make all target\n- clean bm binary\n- improved server interface\n- rpc bm cleanup\n- minor cleanup in bench.py\n- new db constructor with options\n- **api:** add index in hash construction\n- **bm:** fine tuning\n- **bm/rpc:** print error\n- **client:** add ByIndex rpc\n- **cmd/immu:** align commands to new APIs\n- **db:** return item index\n- **db:** correct logging messages\n- **db:** default options\n- **db:** treestore improvements\n- **db:** switch to unbalanced tree test\n- **db:** add default logger\n- **db:** treestore entries discarding and ordering\n- **db:** fine tuning\n- **immu:** improve printing\n- **immu:** improved membership verification\n- **logger:** expose logging level\n- **pkg/api:** add Hash() method for Item\n- **pkg/api/schema:** get new root from proof\n- **pkg/api/schema:** relax Proof verify when no prev root\n- **pkg/api/schema:** refactor bundled proof proto message\n- **pkg/api/schema:** add Root message and CurrentRoot RPC\n- **pkg/db:** split data and tree storage\n- **pkg/store:** code improvements\n- **pkg/store:** add error for invalid root index\n- **pkg/tree:** add verification for RFC 6962 examples\n- **pkg/tree:** improve comment\n- **schema:** add index\n- **server:** add ByIndex rpc\n- **tools:** add nimmu hacking tool\n- **tools:** benchmark\n- **tools:** armonize comparison settings\n- **tools:** no logging needed for nimmu\n- **tools:** add makefile target for comparison\n- **tools:** benchmark\n- **tools/bm:** correct method signature to accomodate indexes\n- **tools/nimmu:** improve input and output\n- **tree:** correct returned value for undefined ranges\n- **tree:** clean up map store\n- **tree:** correct MTH test var naming\n- **tree:** reduce testPaths\n- **tree:** remove unnecessary int conversion\n- **tree:** add map store test\n- **tree:** add print tree helper for debugging\n- **tree:** add map backed mem store for testing\n- **tree:** add IsFrozen helper\n\n### Code Refactoring\n- change APIs according to the new schema\n- reviewed schema package\n- rname \"membership\" to \"inclusion\"\n- use []byte keys\n- \"db\" pkg renamed to \"store\"\n- logging prefixes and miscellany renamed according to immustore\n- env vars prefix renamed to IMMU_\n- rename module to immustore\n- **db:** new storing strategy\n- **db:** use Item on ByIndex API\n- **db:** use ring buffer for caching\n- **pkg/tree:** improve coverage and clean up\n- **server:** metrics prefix renamed to immud_\n- **tree:** AppendHash with side-effect\n- **tree:** testing code improvement\n- **tree:** switch to unbalanced tree\n- **tree:** reduce lookups\n- **tree:** remove unnecessary Tree struct and correct int sizes\n- **tree:** simplify Storer interface\n- **tree:** trival optimization\n\n### Features\n- extract rpc bm constructor\n- initial draft for storing the tree alongside the data\n- immu client\n- Makefile\n- basic protobuf schema\n- poc transport format\n- poc grpc server\n- poc grpc client\n- poc server wiring\n- poc client wiring\n- topic wiring\n- poc topic get\n- expose metrics\n- server topic get wiring\n- poc cli args\n- client-side performance logs\n- transport schema cleanup\n- docker\n- server options\n- client options\n- server options for dbname\n- immud command line args\n- client cli args\n- logging infrastructure\n- set stdin support\n- add healtcheck command\n- client type\n- treestore with caching\n- make bm\n- batch-set\n- no healthcheck/dial retry wait-period when set to 0\n- bm tooling\n- bm improvements (rpc-style and in-process api calls)\n- scylla comparison\n- immud health-check\n- batch get requests\n- pretty-print client options\n- client connect and wait for health-check\n- stateful client connection\n- return item index for get and set ops\n- expose dial and health-check retry configuration\n- apply env options for server\n- apply env options for client\n- server options from environment\n- client options from environment\n- client connect with closure\n- client errors extracted\n- named logger\n- bm memstats\n- CI action\n- server health-check\n- db health-check\n- set-batch bm\n- client set-batch\n- key reader\n- initial project skeleton\n- **api:** add item and item list data structure\n- **api:** add membership proof struct\n- **client:** membership command\n- **client:** add history command\n- **cmd/immu:** scan and count commands\n- **db:** add membership proof API\n- **db:** async commit option\n- **db:** add history API to get all versions of the same key\n- **db:** get item by index\n- **pkg/api/schema:** SafeGet\n- **pkg/api/schema:** consistency proof API\n- **pkg/api/schema:** add SafeSet to schema.proto\n- **pkg/api/schema:** ScanOptions\n- **pkg/api/schema:** added Scan and Count RPC\n- **pkg/client:** Scan and Count API\n- **pkg/client:** consistecy proof\n- **pkg/server:** SafeSet RPC\n- **pkg/server:** SafeGet RPC\n- **pkg/server:** consistency proof RPC\n- **pkg/server:** CurrentRoot RPC\n- **pkg/server:** Scan and Count API\n- **pkg/store:** SafeGet API\n- **pkg/store:** count API\n- **pkg/store:** consistency proof\n- **pkg/store:** SafeSet\n- **pkg/store:** CurrentRoot API\n- **pkg/store:** range scan API\n- **pkg/tree:** consistency proof\n- **pkg/tree:** Path to slice conversion\n- **pkg/tree:** consistency proof verification\n- **pkg/tree:** test case for RFC 6962 examples\n- **ring:** ring buffer\n- **schema:** add message for membership proof\n- **server:** add membership rpc\n- **server:** support for history API\n- **tree:** audit path construction\n- **tree:** membership proof verification\n- **tree:** Merkle Consistency Proof reference impl\n- **tree:** Merkle audit path reference impl\n- **tree:** Storer interface\n- **tree:** draft implementation\n- **tree:** MTH reference impl\n\n\n[Unreleased]: https://github.com/vchain-us/immudb/compare/v1.9.5...HEAD\n[v1.9.5]: https://github.com/vchain-us/immudb/compare/v1.9.4...v1.9.5\n[v1.9.4]: https://github.com/vchain-us/immudb/compare/v1.9.3...v1.9.4\n[v1.9.3]: https://github.com/vchain-us/immudb/compare/v1.9DOM.2...v1.9.3\n[v1.9DOM.2]: https://github.com/vchain-us/immudb/compare/v1.9DOM.2-RC1...v1.9DOM.2\n[v1.9DOM.2-RC1]: https://github.com/vchain-us/immudb/compare/v1.9DOM.1...v1.9DOM.2-RC1\n[v1.9DOM.1]: https://github.com/vchain-us/immudb/compare/v1.9DOM.1-RC1...v1.9DOM.1\n[v1.9DOM.1-RC1]: https://github.com/vchain-us/immudb/compare/v1.9DOM.0...v1.9DOM.1-RC1\n[v1.9DOM.0]: https://github.com/vchain-us/immudb/compare/v1.9DOM...v1.9DOM.0\n[v1.9DOM]: https://github.com/vchain-us/immudb/compare/v1.9.0-RC2...v1.9DOM\n[v1.9.0-RC2]: https://github.com/vchain-us/immudb/compare/v1.9.0-RC1...v1.9.0-RC2\n[v1.9.0-RC1]: https://github.com/vchain-us/immudb/compare/v1.5.0...v1.9.0-RC1\n[v1.5.0]: https://github.com/vchain-us/immudb/compare/v1.5.0-RC1...v1.5.0\n[v1.5.0-RC1]: https://github.com/vchain-us/immudb/compare/v1.4.1...v1.5.0-RC1\n[v1.4.1]: https://github.com/vchain-us/immudb/compare/v1.4.1-RC1...v1.4.1\n[v1.4.1-RC1]: https://github.com/vchain-us/immudb/compare/v1.4.0...v1.4.1-RC1\n[v1.4.0]: https://github.com/vchain-us/immudb/compare/v1.4.0-RC2...v1.4.0\n[v1.4.0-RC2]: https://github.com/vchain-us/immudb/compare/v1.4.0-RC1...v1.4.0-RC2\n[v1.4.0-RC1]: https://github.com/vchain-us/immudb/compare/v1.3.2...v1.4.0-RC1\n[v1.3.2]: https://github.com/vchain-us/immudb/compare/v1.3.2-RC1...v1.3.2\n[v1.3.2-RC1]: https://github.com/vchain-us/immudb/compare/v1.3.1...v1.3.2-RC1\n[v1.3.1]: https://github.com/vchain-us/immudb/compare/v1.3.1-RC1...v1.3.1\n[v1.3.1-RC1]: https://github.com/vchain-us/immudb/compare/v1.3.0...v1.3.1-RC1\n[v1.3.0]: https://github.com/vchain-us/immudb/compare/v1.3.0-RC1...v1.3.0\n[v1.3.0-RC1]: https://github.com/vchain-us/immudb/compare/v1.2.4...v1.3.0-RC1\n[v1.2.4]: https://github.com/vchain-us/immudb/compare/v1.2.4-RC1...v1.2.4\n[v1.2.4-RC1]: https://github.com/vchain-us/immudb/compare/v1.2.3...v1.2.4-RC1\n[v1.2.3]: https://github.com/vchain-us/immudb/compare/v1.2.3-RC1...v1.2.3\n[v1.2.3-RC1]: https://github.com/vchain-us/immudb/compare/v1.2.2...v1.2.3-RC1\n[v1.2.2]: https://github.com/vchain-us/immudb/compare/v1.2.1...v1.2.2\n[v1.2.1]: https://github.com/vchain-us/immudb/compare/v1.2.0...v1.2.1\n[v1.2.0]: https://github.com/vchain-us/immudb/compare/v1.2.0-RC1...v1.2.0\n[v1.2.0-RC1]: https://github.com/vchain-us/immudb/compare/v1.1.0...v1.2.0-RC1\n[v1.1.0]: https://github.com/vchain-us/immudb/compare/v1.0.5...v1.1.0\n[v1.0.5]: https://github.com/vchain-us/immudb/compare/v1.0.1...v1.0.5\n[v1.0.1]: https://github.com/vchain-us/immudb/compare/v1.0.0...v1.0.1\n[v1.0.0]: https://github.com/vchain-us/immudb/compare/cnlc-2.2...v1.0.0\n[cnlc-2.2]: https://github.com/vchain-us/immudb/compare/v0.9.2...cnlc-2.2\n[v0.9.2]: https://github.com/vchain-us/immudb/compare/v0.9.1...v0.9.2\n[v0.9.1]: https://github.com/vchain-us/immudb/compare/v0.9.0...v0.9.1\n[v0.9.0]: https://github.com/vchain-us/immudb/compare/v0.9.0-RC2...v0.9.0\n[v0.9.0-RC2]: https://github.com/vchain-us/immudb/compare/v0.9.0-RC1...v0.9.0-RC2\n[v0.9.0-RC1]: https://github.com/vchain-us/immudb/compare/v0.8.1...v0.9.0-RC1\n[v0.8.1]: https://github.com/vchain-us/immudb/compare/v0.8.0...v0.8.1\n[v0.8.0]: https://github.com/vchain-us/immudb/compare/v0.7.1...v0.8.0\n[v0.7.1]: https://github.com/vchain-us/immudb/compare/v0.7.0...v0.7.1\n[v0.7.0]: https://github.com/vchain-us/immudb/compare/v0.6.2...v0.7.0\n[v0.6.2]: https://github.com/vchain-us/immudb/compare/v0.6.1...v0.6.2\n[v0.6.1]: https://github.com/vchain-us/immudb/compare/v0.6.0...v0.6.1\n[v0.6.0]: https://github.com/vchain-us/immudb/compare/v0.6.0-RC2...v0.6.0\n[v0.6.0-RC2]: https://github.com/vchain-us/immudb/compare/v0.6.0-RC1...v0.6.0-RC2\n[v0.6.0-RC1]: https://github.com/vchain-us/immudb/compare/v0.0.0-20200206...v0.6.0-RC1\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.0986328125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\ninfo@codenotary.com.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 9.8427734375,
          "content": "<!--\n---\ntitle: \"Contributing\"\ncustom_edit_url: https://github.com/codenotary/immudb/edit/master/CONTRIBUTING.md\n---\n-->\n\n# Contributing to immudb\n​\n👍🎉 First off, thanks for taking the time to contribute! 🎉👍\n\nThe following is a set of guidelines for contributing to immudb. These are mostly guidelines, not rules. Use your best judgment, and feel free to propose changes to this document in a pull request.\n\n\n### Active Participation\n​\nOpen Source projects are maintained and backed by a **wonderful community** of users and collaborators. ​\nWe encourage you to actively participate in the development and future of immudb by contributing to the source code regularly, improving the documentation, reporting potential bugs, or testing new features.\n​\n### Channels\n​\nThere are many ways to take part in the immudb community.\n​\n1. <a href=\"https://github.com/codenotary/immudb\" rel=\"nofollow\" target=\"_blank\">Github Repositories</a>: Report bugs or create feature requests against the dedicated immudb repository.\n2. <a href=\"https://discord.gg/ThSJxNEHhZ\" rel=\"nofollow\" target=\"_blank\">Discord</a>: Join the Discord channel and chat with other developers in the immudb community.\n3. <a href=\"https://twitter.com/immudb\" rel=\"nofollow\" target=\"_blank\">Twitter</a>: Stay in touch with the progress we make and learn about the awesome things happening around immudb.\n​\n## Developer Certificate of Origin\n\nContributions to this project must be accompanied by a Developer Certificate of Origin (DCO). You retain the copyright to your contribution; this simply gives us permission to use and redistribute your contributions as part of the project.\nTherefore, with every contribution to the code, you must sign-off the following DCO:\n\nBy making a contribution to this project, I certify that:\n\n    a) The contribution was created in whole or in part by me and I have the right to submit it under the open source license indicated in the file; or\n    b) The contribution is based upon previous work that, to the best of my knowledge, is covered under an appropriate open source license and I have the right under that license to submit that work with modifications, whether created in whole or in part by me, under the same open source license (unless I am permitted to submit under a different license), as indicated in the file; or\n    c) The contribution was provided directly to me by some other person who certified (a), (b) or (c) and I have not modified it.\n    d) I understand and agree that this project and the contribution are public and that a record of the contribution (including all personal information I submit with it, including my sign-off) is maintained indefinitely and may be redistributed consistent with this project or the open source license(s) involved.\n\nYou can sign-off that you adhere to these requirements by simply adding a signed-off-by line to your commit message, as specified in the [pull request guidelines](#pull-requests).\n\n## Using the Issue Tracker\n​\nThe [issue tracker](https://github.com/codenotary/immudb/issues) is\nthe preferred channel for [bug reports](#bug-reports), [feature requests](#feature-requests),\nand [pull requests](#pull-requests), but please respect the following restrictions:\n​\n* Please **do not** use the issue tracker for personal support requests.\n​\n* Please **do not** get off track in issues. Keep the discussion on topic and\n  respect the opinions of others.\n​\n* Please **do not** post comments consisting solely of \"+1\" or \":thumbsup:\".\n  Use [GitHub's \"reactions\" feature](https://github.com/blog/2119-add-reactions-to-pull-requests-issues- and-comments) instead. We reserve the right to delete comments which violate this rule.\n​\n## Issues and Labels\n​\nOur bug tracker utilizes several labels to help organize and identify issues. For a complete look at our labels, see the [project labels page](https://github.com/codenotary/immudb/labels).\n​\n## Bug Reports\n​\nA bug is a _demonstrable problem_ that is caused by the code in the repository.\nGood bug reports are extremely helpful, so thanks!\n​\nGuidelines for bug reports:\n​\n1. Provide a clear title and description of the issue.\n2. Share the version of immudb you are using.\n3. Add code examples to demonstrate the issue. You can also provide a complete repository to reproduce the issue quickly.\n​\nA good bug report shouldn't leave others needing to chase you up for more information. Please try to be as detailed as possible in your report:\n​\n- What is your environment?\n- What steps will reproduce the issue?\n- What OS experiences the problem?\n- What would you expect to be the outcome?\n​\nAll these details will help us fix any potential bugs. Remember, fixing bugs takes time. We're doing our best!\n​\nExample:\n​\n> Short and descriptive example bug report title\n>\n> A summary of the issue and the OS environment in which it occurs. If\n> suitable, include the steps required to reproduce the bug.\n>\n> 1. This is the first step\n> 2. This is the second step\n> 3. Further steps, etc.\n>\n> `<url>` - a link to the reduced test case\n>\n> Any other information you want to share that is relevant to the issue being\n> reported. This might include the lines of code that you have identified as\n> causing the bug, and potential solutions (and your opinions on their\n> merits).\n​\n## Feature Requests\nFeature requests are welcome! When opening a feature request, it's up to *you* to make a strong case to convince the project's developers of the merits of this feature. Please provide as much detail and context as possible.\n​\nWhen adding a new feature to immudb, make sure you update the documentation as well.\n​\n### Testing\nBefore providing a pull request, be sure to test the feature you are adding. We will only approve pull requests with at least 80% of code covered by unit tests.\n​\n## Pull Requests\nGood pull requests—patches, improvements, new features are a fantastic\nhelp. They should remain focused in scope and avoid containing unrelated\ncommits.\n​\n**Please ask first** before starting on any significant pull request (e.g.\nimplementing features, refactoring code, porting to a different language),\notherwise you might spend a lot of time working on something that the\nproject's developers might not want to merge into the project.\n​\nPlease adhere to the [code guidelines](#code-guidelines) used throughout the\nproject (indentation, accurate comments, etc.) and any other requirements\n(such as [test coverage](#testing)).\n​\nAdhering to the following process is the best way to get your work\nincluded in the project:\n​\n1. [Fork](https://help.github.com/fork-a-repo/) the project, clone your fork and configure the remotes:\n​\n   ```bash\n   # Clone your fork of the repo into the current directory\n   git clone https://github.com/<your-username>/immudb.git\n   \n2. Navigate to the newly cloned directory\n\n   ```bash\n   cd immudb\n   ```\n3. Assign the original repo to a remote called \"upstream\"\n   ```\n   git remote add upstream https://github.com/codenotary/immudb.git\n   ```\n\n4. Create a new topic branch (off the main project master branch) to\n   contain your feature, change, or fix:\n​\n   ```bash\n   git checkout -b <topic-branch-name>\n   ```\n\n5. Make sure your commits are logically structured. Please adhere to these [git commit\n   message guidelines](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html). Use Git's\n   [interactive rebase feature](https://help.github.com/en/github/using-git/about-git-rebase)\nto tidy up your commits before making them public. For immudb, we follow the [conventional commits layout](https://www.conventionalcommits.org/en/v1.0.0/). This way commits are more meaningful and the autogenerated part of the readme is better structured.\n\n6. Sign-off that you adhere to the [DCO](#developer-certificate-of-origin)    by adding a signed-off-by line to your commit message, separated by a blank line from the body of the commit.\nThis is my commit message\n\n   ```bash\n   Signed-off-by: Your Name <your.email@example.org>\n   ```\n   Git even has a -s or -s –amend (in case you already have a commit) command line option to append this automatically to your existing commit message:\n   ```bash\n   $ git commit -s -m 'This is my commit message'\n   ```\n   Signed-off-by: Your Name <your.email@example.org> to the last line of each Git commit message\n\n7. Locally rebase the upstream master branch into your topic branch:\n​\n   ```bash\n   git pull --rebase upstream master\n   ```\n8. Push your topic branch up to your fork:\n​\n   ```bash\n   git push origin <topic-branch-name>\n   ```\n9. [Open a pull request](https://help.github.com/articles/using-pull-requests/)\n    with a clear title and description against the `master` branch.\n​\n​\n## Code Guidelines\n​\n### Go\n\nHere is a non-exhaustive list of documents and articles talking about Go best practices and tips & tricks. We are continuously trying to improve our code, and taking inspiration from community works helps us grow.\n\n* https://golang.org/doc/effective_go.html\n* https://github.com/golang/go/wiki/CodeReviewComments\n* https://go-proverbs.github.io/\n* https://the-zen-of-go.netlify.app/\n* https://dave.cheney.net/practical-go/presentations/qcon-china.html\n* https://github.com/bahlo/go-styleguide\n* https://github.com/Pungyeon/clean-go-article\n* https://github.com/dgryski/go-perfbook\n\nPlease note again that [code coverage](#testing) should no less than 80% and that we encourage you to minimize the use of 3rd party libraries.\n​\n### Vue\n​\nAdhere to the linting and [concepts](https://immudb.io/docs/preface/concepts) guidelines.\n​\n- Prefix immudb components with the `I` character\n- Provide multiple customization options\n- Use mixins where applicable\n​\n## Local Development\n​\nFork the repository and create a branch as specified in the [pull request guidelines](#pull-requests) above.\n​\n## License\n​\nBy contributing your code, you agree to license your contribution under the [Apache Version 2.0 License](https://github.com/codenotary/immudb/tree/master/LICENSE).\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 2.142578125,
          "content": "# Copyright 2022 Codenotary Inc. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# \thttp://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM golang:1.18 as build\nARG BUILD_ARCH=amd64\nWORKDIR /src\nCOPY go.mod go.sum /src/\nRUN go mod download -x\nCOPY . .\nRUN make clean\nRUN make prerequisites\nRUN make swagger\nRUN make swagger/dist\nRUN GOOS=linux GOARCH=${BUILD_ARCH} WEBCONSOLE=default SWAGGER=true make immudb-static immuadmin-static\nRUN mkdir /empty\n\nFROM scratch\nLABEL org.opencontainers.image.authors=\"Codenotary Inc. <info@codenotary.com>\"\n\nARG IMMU_UID=\"3322\"\nARG IMMU_GID=\"3322\"\nARG IMMUDB_HOME=\"/usr/share/immudb\"\n\nENV IMMUDB_HOME=\"${IMMUDB_HOME}\" \\\n    IMMUDB_DIR=\"/var/lib/immudb\" \\\n    IMMUDB_ADDRESS=\"0.0.0.0\" \\\n    IMMUDB_PORT=\"3322\" \\\n    IMMUDB_PIDFILE=\"\" \\\n    IMMUDB_LOGFILE=\"\" \\\n    IMMUDB_MTLS=\"false\" \\\n    IMMUDB_AUTH=\"true\" \\\n    IMMUDB_DETACHED=\"false\" \\\n    IMMUDB_DEVMODE=\"true\" \\\n    IMMUDB_MAINTENANCE=\"false\" \\\n    IMMUDB_ADMIN_PASSWORD=\"immudb\" \\\n    IMMUDB_PGSQL_SERVER=\"true\" \\\n    IMMUADMIN_TOKENFILE=\"/var/lib/immudb/admin_token\" \\\n    USER=immu \\\n    HOME=\"${IMMUDB_HOME}\"\n\nCOPY --from=build /src/immudb /usr/sbin/immudb\nCOPY --from=build /src/immuadmin /usr/local/bin/immuadmin\nCOPY --from=build --chown=\"$IMMU_UID:$IMMU_GID\" /empty \"$IMMUDB_HOME\"\nCOPY --from=build --chown=\"$IMMU_UID:$IMMU_GID\" /empty \"$IMMUDB_DIR\"\nCOPY --from=build --chown=\"$IMMU_UID:$IMMU_GID\" /empty /tmp\nCOPY --from=build \"/etc/ssl/certs/ca-certificates.crt\" \"/etc/ssl/certs/ca-certificates.crt\"\n\nEXPOSE 3322\nEXPOSE 9497\nEXPOSE 8080\nEXPOSE 5432\n\nHEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 CMD [ \"/usr/local/bin/immuadmin\", \"status\" ]\nUSER \"${IMMU_UID}:${IMMU_GID}\"\nENTRYPOINT [\"/usr/sbin/immudb\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 4.6748046875,
          "content": "License text copyright (c) 2020 MariaDB Corporation Ab, All Rights Reserved.\r\n\"Business Source License\" is a trademark of MariaDB Corporation Ab.\r\n\r\nParameters\r\n\r\nLicensor:             Codenotary, Inc.\r\nLicensed Work:        immudb Version 1.9DOM.2 or later. The Licensed Work is (c) 2024\r\n                      Codenotary, Inc.\r\nAdditional Use Grant: You may make production use of the Licensed Work, provided\r\n                      Your use does not include offering the Licensed Work to third\r\n                      parties on a hosted or embedded basis in order to compete with \r\n                      Codenotary's paid version(s) of the Licensed Work. For purposes \r\n                      of this license:\r\n\r\n                      A \"competitive offering\" is a Product that is offered to third\r\n                      parties on a paid basis, including through paid support \r\n                      arrangements, that significantly overlaps with the capabilities \r\n                      of Codenotary's paid version(s) of the Licensed Work. If Your \r\n                      Product is not a competitive offering when You first make it \r\n                      generally available, it will not become a competitive offering\r\n                      later due to Codenotary releasing a new version of the Licensed \r\n                      Work with additional capabilities. In addition, Products that \r\n                      are not provided on a paid basis are not competitive.\r\n\r\n                      \"Product\" means software that is offered to end users to manage \r\n                      in their own environments or offered as a service on a hosted \r\n                      basis.\r\n\r\n                      \"Embedded\" means including the source code or executable code \r\n                      from the Licensed Work in a competitive offering. \"Embedded\" \r\n                      also means packaging the competitive offering in such a way \r\n                      that the Licensed Work must be accessed or downloaded for the \r\n                      competitive offering to operate.\r\n\r\n                      Hosting or using the Licensed Work(s) for internal purposes \r\n                      within an organization is not considered a competitive \r\n                      offering. Codenotary considers your organization to include all \r\n                      of your affiliates under common control.\r\n\r\nChange Date:          Four years from the date the Licensed Work is published.\r\nChange License:       Apache 2.0\r\n\r\nFor information about alternative licensing arrangements for the Licensed Work,\r\nplease contact info@codenotary.com.\r\n\r\nNotice\r\n\r\nBusiness Source License 1.1\r\n\r\nTerms\r\n\r\nThe Licensor hereby grants you the right to copy, modify, create derivative\r\nworks, redistribute, and make non-production use of the Licensed Work. The\r\nLicensor may make an Additional Use Grant, above, permitting limited production use.\r\n\r\nEffective on the Change Date, or the fourth anniversary of the first publicly\r\navailable distribution of a specific version of the Licensed Work under this\r\nLicense, whichever comes first, the Licensor hereby grants you rights under\r\nthe terms of the Change License, and the rights granted in the paragraph\r\nabove terminate.\r\n\r\nIf your use of the Licensed Work does not comply with the requirements\r\ncurrently in effect as described in this License, you must purchase a\r\ncommercial license from the Licensor, its affiliated entities, or authorized\r\nresellers, or you must refrain from using the Licensed Work.\r\n\r\nAll copies of the original and modified Licensed Work, and derivative works\r\nof the Licensed Work, are subject to this License. This License applies\r\nseparately for each version of the Licensed Work and the Change Date may vary\r\nfor each version of the Licensed Work released by Licensor.\r\n\r\nYou must conspicuously display this License on each original or modified copy\r\nof the Licensed Work. If you receive the Licensed Work in original or\r\nmodified form from a third party, the terms and conditions set forth in this\r\nLicense apply to your use of that work.\r\n\r\nAny use of the Licensed Work in violation of this License will automatically\r\nterminate your rights under this License for the current and all other\r\nversions of the Licensed Work.\r\n\r\nThis License does not grant you any right in any trademark or logo of\r\nLicensor or its affiliates (provided that you may use a trademark or logo of\r\nLicensor as expressly required by this License).\r\n\r\nTO THE EXTENT PERMITTED BY APPLICABLE LAW, THE LICENSED WORK IS PROVIDED ON\r\nAN \"AS IS\" BASIS. LICENSOR HEREBY DISCLAIMS ALL WARRANTIES AND CONDITIONS,\r\nEXPRESS OR IMPLIED, INCLUDING (WITHOUT LIMITATION) WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, AND\r\nTITLE."
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 11.8154296875,
          "content": "# Copyright 2022 Codenotary Inc. All rights reserved. \t\t\t\t\t\t\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\nLicensed under the Apache License, Version 2.0 (the \"License\"); \t\t\t\\\nyou may not use this file except in compliance with the License. \t\t\t\\\nYou may obtain a copy of the License at \t\t\t\t\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\thttp://www.apache.org/licenses/LICENSE-2.0 \t\t\t\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\nUnless required by applicable law or agreed to in writing, software \t\t\\\ndistributed under the License is distributed on an \"AS IS\" BASIS, \t\t\t\\\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\t\\\nSee the License for the specific language governing permissions and \t\t\\\nlimitations under the License.\n\nexport GO111MODULE=on\n\nSHELL=/bin/bash -o pipefail\n\nVERSION=1.9.5\nDEFAULT_WEBCONSOLE_VERSION=1.0.18\nSERVICES=immudb immuadmin immuclient\nTARGETS=linux/amd64 windows/amd64 darwin/amd64 linux/s390x linux/arm64 freebsd/amd64 darwin/arm64\nSWAGGER?=false\nFIPSENABLED?=false\nSWAGGERUIVERSION=4.15.5\nSWAGGERUILINK=\"https://github.com/swagger-api/swagger-ui/archive/refs/tags/v${SWAGGERUIVERSION}.tar.gz\"\n\nPWD = $(shell pwd)\nGO ?= go\nGOPATH ?= $(shell go env GOPATH)\nDOCKER ?= docker\nPROTOC ?= protoc\nSTRIP = strip\n\n\nV_COMMIT := $(shell git rev-parse HEAD)\n#V_BUILT_BY := \"$(shell echo \"`git config user.name`<`git config user.email`>\")\"\nV_BUILT_BY := $(shell git config user.email)\nV_BUILT_AT := $(shell date +%s)\nV_LDFLAGS_SYMBOL := -s\nV_LDFLAGS_BUILD := -X \"github.com/codenotary/immudb/cmd/version.Version=${VERSION}\" \\\n\t\t\t\t\t-X \"github.com/codenotary/immudb/cmd/version.Commit=${V_COMMIT}\" \\\n\t\t\t\t\t-X \"github.com/codenotary/immudb/cmd/version.BuiltBy=${V_BUILT_BY}\"\\\n\t\t\t\t\t-X \"github.com/codenotary/immudb/cmd/version.BuiltAt=${V_BUILT_AT}\"\nV_LDFLAGS_COMMON := ${V_LDFLAGS_SYMBOL} ${V_LDFLAGS_BUILD}\nV_LDFLAGS_STATIC := ${V_LDFLAGS_COMMON} \\\n\t\t\t\t  -X github.com/codenotary/immudb/cmd/version.Static=static \\\n\t\t\t\t  -extldflags \"-static\"\nV_LDFLAGS_FIPS_BUILD = ${V_LDFLAGS_BUILD} \\\n\t\t\t\t  -X github.com/codenotary/immudb/cmd/version.FIPSEnabled=true\nV_GO_ENV_FLAGS := GOOS=$(GOOS) GOARCH=$(GOARCH)\nV_BUILD_NAME ?= \"\"\nV_BUILD_FLAG = -o $(V_BUILD_NAME)\n\nGRPC_GATEWAY_VERSION := $(shell go list -m -versions github.com/grpc-ecosystem/grpc-gateway | awk -F ' ' '{print $$NF}')\nSWAGGER_BUILDTAG=\nWEBCONSOLE_BUILDTAG=\nFIPS_BUILDTAG=\nifdef WEBCONSOLE\nWEBCONSOLE_BUILDTAG=webconsole\nendif\nifeq ($(SWAGGER),true)\nSWAGGER_BUILDTAG=swagger\nendif\nifeq ($(FIPSENABLED),true)\nFIPS_BUILDTAG=swagger\nendif\nIMMUDB_BUILD_TAGS=-tags \"$(SWAGGER_BUILDTAG) $(WEBCONSOLE_BUILDTAG) $(FIPS_BUILDTAG)\"\n\n.PHONY: all\nall: immudb immuclient immuadmin immutest\n\t@echo 'Build successful, now you can make the manuals or check the status of the database with immuadmin.'\n\n.PHONY: rebuild\nrebuild: clean build/codegen all\n\n.PHONY: webconsole\nifdef WEBCONSOLE\nwebconsole: ./webconsole/dist\n\tenv -u GOOS -u GOARCH $(GO) generate $(IMMUDB_BUILD_TAGS) ./webconsole\nelse\nwebconsole:\n\tenv -u GOOS -u GOARCH $(GO) generate $(IMMUDB_BUILD_TAGS) ./webconsole\nendif\n\n# To be called manually to update the default webconsole\n.PHONY: webconsole/default\nwebconsole/default:\n\t$(GO) generate ./webconsole\n\n.PHONY: immuclient\nimmuclient:\n\t$(V_GO_ENV_FLAGS) $(GO) build $(V_BUILD_FLAG) -v -ldflags '$(V_LDFLAGS_COMMON)' ./cmd/immuclient\n\n.PHONY: immuadmin\nimmuadmin:\n\t$(V_GO_ENV_FLAGS) $(GO) build $(V_BUILD_FLAG) -v -ldflags '$(V_LDFLAGS_COMMON)' ./cmd/immuadmin\n\n.PHONY: immudb\nimmudb: webconsole swagger\n\t$(V_GO_ENV_FLAGS) $(GO) build $(V_BUILD_FLAG) $(IMMUDB_BUILD_TAGS) -v -ldflags '$(V_LDFLAGS_COMMON)' ./cmd/immudb\n\n.PHONY: immutest\nimmutest:\n\t$(GO) build -v -ldflags '$(V_LDFLAGS_COMMON)' ./cmd/immutest\n\n.PHONY: immuclient-static\nimmuclient-static:\n\t$(V_GO_ENV_FLAGS) CGO_ENABLED=0 $(GO) build $(V_BUILD_FLAG) -a -ldflags '$(V_LDFLAGS_STATIC)' ./cmd/immuclient\n\n.PHONY: immuclient-fips\nimmuclient-fips:\n\tCGO_ENABLED=1 GOOS=linux GOARCH=amd64 $(GO) build -tags=fips -a -o immuclient -ldflags '$(V_LDFLAGS_FIPS_BUILD)' ./cmd/immuclient/fips\n\t./build/fips/check-fips.sh immuclient\n\n.PHONY: immuadmin-static\nimmuadmin-static:\n\t$(V_GO_ENV_FLAGS) CGO_ENABLED=0 $(GO) build $(V_BUILD_FLAG) -a -ldflags '$(V_LDFLAGS_STATIC)' ./cmd/immuadmin\n\n.PHONY: immuadmin-fips\nimmuadmin-fips:\n\tCGO_ENABLED=1 GOOS=linux GOARCH=amd64 $(GO) build -tags=fips -a -o immuadmin -ldflags '$(V_LDFLAGS_FIPS_BUILD)' ./cmd/immuadmin/fips\n\t./build/fips/check-fips.sh immuadmin\n\n.PHONY: immudb-static\nimmudb-static: webconsole\n\t$(V_GO_ENV_FLAGS) CGO_ENABLED=0 $(GO) build $(V_BUILD_FLAG) $(IMMUDB_BUILD_TAGS) -a -ldflags '$(V_LDFLAGS_STATIC)' ./cmd/immudb\n\n.PHONY: immudb-fips\nimmudb-fips: webconsole\n\tCGO_ENABLED=1 GOOS=linux GOARCH=amd64 WEBCONSOLE=default $(GO) build -tags=webconsole,fips -a -o immudb -ldflags '$(V_LDFLAGS_FIPS_BUILD)' ./cmd/immudb/fips\n\t./build/fips/check-fips.sh immudb\n\n.PHONY: immutest-static\nimmutest-static:\n\tCGO_ENABLED=0 $(GO) build -a -ldflags '$(V_LDFLAGS_STATIC)' ./cmd/immutest\n\n.PHONY: vendor\nvendor:\n\t$(GO) mod vendor\n\n.PHONY: test\ntest:\n\t$(GO) vet ./...\n\tLOG_LEVEL=error $(GO) test -v -failfast ./... ${GO_TEST_FLAGS}\n\n# build FIPS binary from docker image\n.PHONY: test/fips\ntest/fips:\n\t$(DOCKER) build -t fips:test-build -f build/fips/Dockerfile.build .\n\t$(DOCKER) run --rm fips:test-build -c \"GO_TEST_FLAGS='-tags fips' make test\"\n\n.PHONY: test-client\ntest-client:\n\t$(GO) test -v -failfast ./pkg/client ${GO_TEST_FLAGS}\n\n# To view coverage as HTML run: go tool cover -html=coverage.txt\n.PHONY: coverage\ncoverage:\n\tgo-acc ./... --covermode=atomic --ignore=test,immuclient,immuadmin,helper,cmdtest,sservice,version,tools,webconsole,protomodel,schema,swagger\n\tcat coverage.txt | grep -v \"schema\" | grep -v \"protomodel\" | grep -v \"swagger\" | grep -v \"webserver.go\" | grep -v \"immuclient\" | grep -v \"immuadmin\" | grep -v \"helper\" | grep -v \"cmdtest\" | grep -v \"sservice\" | grep -v \"version\" > coverage.out\n\t$(GO) tool cover -func coverage.out\n\n.PHONY: build/codegen\nbuild/codegen:\n\t$(PWD)/ext-tools/buf format -w\n\n\t$(PROTOC) -I pkg/api/schema/ pkg/api/schema/schema.proto \\\n\t  -I$(GOPATH)/pkg/mod \\\n\t  -I$(GOPATH)/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@$(GRPC_GATEWAY_VERSION) \\\n\t  -I$(GOPATH)/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@$(GRPC_GATEWAY_VERSION)/third_party/googleapis \\\n\t  --go_out=paths=source_relative:pkg/api/schema \\\n\t  --go-grpc_out=require_unimplemented_servers=false,paths=source_relative:pkg/api/schema \\\n      --grpc-gateway_out=logtostderr=true,paths=source_relative:pkg/api/schema \\\n\t  --doc_out=pkg/api/schema --doc_opt=markdown,docs.md \\\n\t  --swagger_out=logtostderr=true:pkg/api/schema \\\n\n.PHONY: build/codegenv2\nbuild/codegenv2:\n\t$(PWD)/ext-tools/buf format -w\n\n\t$(PROTOC) -I pkg/api/proto/ pkg/api/proto/authorization.proto pkg/api/proto/documents.proto \\\n\t  -I pkg/api/schema/ \\\n\t  -I$(GOPATH)/pkg/mod \\\n\t  -I$(GOPATH)/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@$(GRPC_GATEWAY_VERSION) \\\n\t  -I$(GOPATH)/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@$(GRPC_GATEWAY_VERSION)/third_party/googleapis \\\n\t  --go_out=paths=source_relative:pkg/api/protomodel \\\n\t  --go-grpc_out=require_unimplemented_servers=false,paths=source_relative:pkg/api/protomodel \\\n\t  --grpc-gateway_out=logtostderr=true,paths=source_relative:pkg/api/protomodel \\\n\t  --doc_out=pkg/api/protomodel --doc_opt=markdown,docs.md \\\n\t  --swagger_out=logtostderr=true,allow_merge=true,simple_operation_ids=true:pkg/api/openapi \\\n\n./swagger/dist:\n\trm -rf swagger/dist/\n\tcurl -L $(SWAGGERUILINK) | tar -xz -C swagger\n\tmv swagger/swagger-ui-$(SWAGGERUIVERSION)/dist/ swagger/ && rm -rf swagger/swagger-ui-$(SWAGGERUIVERSION)\n\tcp pkg/api/openapi/apidocs.swagger.json swagger/dist/apidocs.swagger.json\n\tcp pkg/api/schema/schema.swagger.json swagger/dist/schema.swagger.json\n\tcp swagger/swaggeroverrides.js swagger/dist/swagger-initializer.js\n\n.PHONY: swagger\nifeq ($(SWAGGER),true)\nswagger: ./swagger/dist\n\tenv -u GOOS -u GOARCH $(GO) generate $(IMMUDB_BUILD_TAGS) ./swagger\nelse\nswagger:\n\tenv -u GOOS -u GOARCH $(GO) generate $(IMMUDB_BUILD_TAGS) ./swagger\nendif\n\n\n.PHONY: clean\nclean:\n\trm -rf immudb immuclient immuadmin immutest ./webconsole/dist ./swagger/dist\n\n.PHONY: man\nman:\n\t$(GO) run ./cmd/immuclient mangen ./cmd/docs/man/immuclient\n\t$(GO) run ./cmd/immuadmin mangen ./cmd/docs/man/immuadmin\n\t$(GO) run ./cmd/immudb mangen ./cmd/docs/man/immudb\n\t$(GO) run ./cmd/immutest mangen ./cmd/docs/man/immutest\n\n.PHONY: prerequisites\nprerequisites:\n\t$(GO) mod tidy -compat=1.17\n\tcat tools.go | grep _ | awk -F'\"' '{print $$2}' | xargs -tI % go install %\n\n########################## releases scripts ############################################################################\n.PHONY: CHANGELOG.md\nCHANGELOG.md:\n\tgit-chglog -o CHANGELOG.md\n\n.PHONY: CHANGELOG.md.next-tag\nCHANGELOG.md.next-tag:\n\tgit-chglog -o CHANGELOG.md --next-tag v${VERSION}\n\n.PHONY: clean/dist\nclean/dist:\n\trm -Rf ./dist\n\n# WEBCONSOLE=default make dist\n# it enables by default webconsole\n.PHONY: dist\ndist: webconsole dist/binaries dist/fips\n\t@echo 'Binaries generation complete. Now vcn signature is needed.'\n\n# build FIPS binary from docker image (no arm or non-linux support)\n.PHONY: dist/fips\ndist/fips: clean\n\t$(DOCKER) build -t fips:build -f build/fips/Dockerfile.build .\n\t$(DOCKER) run -v ${PWD}:/src --user root --rm fips:build -c \"WEBCONSOLE=default make immudb-fips\"\n\tmv immudb ./dist/immudb-v${VERSION}-linux-amd64-fips\n\t$(DOCKER) run -v ${PWD}:/src --user root --rm fips:build -c \"make immuclient-fips\"\n\tmv immuclient ./dist/immuclient-v${VERSION}-linux-amd64-fips\n\t$(DOCKER) run -v ${PWD}:/src --user root --rm fips:build -c \"make immuadmin-fips\"\n\tmv immuadmin ./dist/immuadmin-v${VERSION}-linux-amd64-fips\n\n.PHONY: dist/binaries\ndist/binaries:\n\t\tmkdir -p dist; \\\n\t\tfor service in ${SERVICES}; do \\\n    \t\tfor os_arch in ${TARGETS}; do \\\n    \t\t\tgoos=`echo $$os_arch|sed 's|/.*||'`; \\\n    \t\t\tgoarch=`echo $$os_arch|sed 's|^.*/||'`; \\\n\t\t\t\tGOOS=$$goos GOARCH=$$goarch V_BUILD_NAME=./dist/$$service-v${VERSION}-$$goos-$$goarch make $$service ; \\\n    \t\tdone; \\\n\t\t\tCGO_ENABLED=0 GOOS=linux GOARCH=amd64 V_BUILD_NAME=./dist/$$service-v${VERSION}-linux-amd64-static make $$service-static ; \\\n    \t\tmv ./dist/$$service-v${VERSION}-windows-amd64 ./dist/$$service-v${VERSION}-windows-amd64.exe; \\\n    \tdone\n\n\n.PHONY: dist/winsign\ndist/winsign:\n\tfor service in ${SERVICES}; do \\\n\t\techo ${SIGNCODE_PVK_PASSWORD} | $(DOCKER) run --rm -i \\\n\t\t\t-v ${PWD}/dist:/dist \\\n\t\t\t-v ${SIGNCODE_SPC}:/certs/f.spc:ro \\\n\t\t\t-v ${SIGNCODE_PVK}:/certs/f.pvk:ro \\\n\t\t\tmono:6.8.0 signcode \\\n\t\t\t-spc /certs/f.spc -v /certs/f.pvk \\\n\t\t\t-a sha1 -$ commercial \\\n\t\t\t-n \"CodeNotary $$service\" \\\n\t\t\t-i https://codenotary.io/ \\\n\t\t\t-t http://timestamp.comodoca.com -tr 10 \\\n\t\t\tdist/$$service-v${VERSION}-windows-amd64.exe; \\\n\t\trm ./dist/$$service-v${VERSION}-windows-amd64.exe.bak -f; \\\n\tdone\n\n.PHONY: dist/sign\ndist/sign:\n\tfor f in ./dist/*; do cas n $$f; printf \"\\n\\n\"; done\n\n\n.PHONY: dist/binary.md\ndist/binary.md:\n\t@build/gen-downloads-md.sh \"${VERSION}\"\n\n./webconsole/dist:\nifeq (${WEBCONSOLE}, default)\n\t@echo \"Using webconsole version: ${DEFAULT_WEBCONSOLE_VERSION}\"\n\tcurl -L https://github.com/codenotary/immudb-webconsole/releases/download/v${DEFAULT_WEBCONSOLE_VERSION}/immudb-webconsole.tar.gz | tar -xvz -C webconsole\nelse ifeq (${WEBCONSOLE}, latest)\n\t@echo \"Using webconsole version: latest\"\n\tcurl -L https://github.com/codenotary/immudb-webconsole/releases/latest/download/immudb-webconsole.tar.gz | tar -xvz -C webconsole\nelse ifeq (${WEBCONSOLE}, 1)\n\t@echo \"The meaning of the 'WEBCONSOLE' variable has changed, please specify one of:\"\n\t@echo \"  default   - to use the default version of the webconsole for this immudb release\"\n\t@echo \"  latest    - to use the latest version of the webconsole\"\n\t@echo \"  <version> - to use a specific version of the webconsole\"\n\t@exit 1\nelse\n\t@echo \"Using webconsole version: ${WEBCONSOLE}\"\n\tcurl -L https://github.com/codenotary/immudb-webconsole/releases/download/v${WEBCONSOLE}/immudb-webconsole.tar.gz | tar -xvz -C webconsole\nendif\n\n########################## releases scripts end ########################################################################\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.73046875,
          "content": "<!--\n---\n\ntitle: \"immudb\"\n\ncustom_edit_url: https://github.com/codenotary/immudb/edit/master/README.md\n---\n\n-->\n\n# immudb <img align=\"right\" src=\"img/Black%20logo%20-%20no%20background.png\" height=\"47px\" />\n\n\n[![Documentation](https://img.shields.io/website?label=Docs&url=https%3A%2F%2Fdocs.immudb.io%2F)](https://docs.immudb.io/)\n[![Build Status](https://github.com/codenotary/immudb/actions/workflows/push.yml/badge.svg)](https://github.com/codenotary/immudb/actions/workflows/push.yml)\n[![Go Report Card](https://goreportcard.com/badge/github.com/codenotary/immudb)](https://goreportcard.com/report/github.com/codenotary/immudb)\n[![View SBOM](https://img.shields.io/badge/sbom.sh-viewSBOM-blue?link=https%3A%2F%2Fsbom.sh%2F37cbffcf-1bd3-4daf-86b7-77deb71575b7)](https://sbom.sh/37cbffcf-1bd3-4daf-86b7-77deb71575b7)\n[![Homebrew](https://img.shields.io/homebrew/v/immudb)](https://formulae.brew.sh/formula/immudb)\n\n[![Discord](https://img.shields.io/discord/831257098368319569)](https://discord.gg/EWeCbkjZVu)\n[![Immudb Careers](https://img.shields.io/badge/careers-We%20are%20hiring!-blue?style=flat)](https://www.codenotary.com/job)\n[![Artifact Hub](https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/codenotary)](https://artifacthub.io/packages/search?repo=codenotary)\n\nDon't forget to ⭐ this repo if you like immudb!\n\n[:tada: 27M pulls from docker hub!](https://hub.docker.com/r/codenotary)\n\n---\n\nDetailed documentation can be found at https://docs.immudb.io/\n\n---\n\n<img align=\"right\" src=\"img/immudb-mascot-small.png\" width=\"256px\"/>\n\nimmudb is a database with built-in cryptographic proof and verification. It tracks changes in sensitive data and the integrity of the history will be protected by the clients, without the need to trust the database. It can operate as a key-value store, as a document model database, and/or as relational database (SQL).\n\nTraditional database transactions and logs are mutable, and therefore there is no way to know for sure if your data has been compromised. immudb is immutable. You can add new versions of existing records, but never change or delete records. This lets you store critical data without fear of it being tampered.\n\nData stored in immudb is cryptographically coherent and verifiable. Unlike blockchains, immudb can handle millions of transactions per second, and can be used both as a lightweight service or embedded in your application as a library. immudb runs everywhere, on an IoT device, your notebook, a server, on-premise or in the cloud.\n\n\nWhen used as a relational data database, it supports both transactions and blobs, so there are no limits to the use cases. Developers and organizations use immudb to secure and tamper-evident log data, sensor data, sensitive data, transactions, software build recipes, rule-base data, artifacts and even video streams. [Examples of organizations using immudb today.](https://www.immudb.io)\n\n## Contents\n\n- [immudb](#immudb)\n  - [Contents](#contents)\n  - [Quickstart](#quickstart)\n    - [Getting immudb running: executable](#getting-immudb-running-executable)\n    - [Getting immudb running: docker](#getting-immudb-running-docker)\n    - [Getting immudb running: kubernetes](#getting-immudb-running-kubernetes)\n    - [Using subfolders](#using-subfolders)\n    - [Enabling Amazon S3 storage](#enabling-amazon-s3-storage)\n    - [Connecting with immuclient](#connecting-with-immuclient)\n    - [Using immudb](#using-immudb)\n      - [Real world examples](#real-world-examples)\n      - [How to integrate immudb in your application](#how-to-integrate-immudb-in-your-application)\n      - [Online demo environment](#online-demo-environment)\n  - [Tech specs](#tech-specs)\n  - [Performance figures](#performance-figures)\n  - [Roadmap](#roadmap)\n  - [Projects using immudb](#projects-using-immudb)\n  - [Contributing](#contributing)\n\n## Quickstart\n\n\n### Getting immudb running: executable\n\nYou may download the immudb binary from [the latest releases on Github](https://github.com/codenotary/immudb/releases/latest). Once you have downloaded immudb, rename it to `immudb`, make sure to mark it as executable, then run it. The following example shows how to obtain v1.9.5 for linux amd64:\n\n```bash\nwget https://github.com/codenotary/immudb/releases/download/v1.9.5/immudb-v1.9.5-linux-amd64\nmv immudb-v1.9.5-linux-amd64 immudb\nchmod +x immudb\n\n# run immudb in the foreground to see all output\n./immudb\n\n# or run immudb in the background\n./immudb -d\n```\n\n### Getting immudb running: Docker\n\nUse Docker to run immudb in a ready-to-use container:\n\n```bash\ndocker run -d --net host -it --rm --name immudb codenotary/immudb:latest\n```\n\nIf you are running the Docker image without host networking, make sure to expose ports 3322 and 9497.\n\n### Getting immudb running: Kubernetes\n\nIn kubernetes, use helm for an easy deployment: just add our repository and install immudb with these simple commands:\n\n```bash\nhelm repo add immudb https://packages.codenotary.org/helm\nhelm repo update\nhelm install immudb/immudb --generate-name\n```\n\n### Using subfolders\n\nImmudb helm chart creates a persistent volume for storing immudb database.\nThose database are now by default placed in a subdirectory.\n\nThat's for compatibility with ext4 volumes that have a `/lost+found` directory that can confuse immudb. Some volume providers,\nlike EBS or DigitalOcean, are using this kind of volumes. If we placed database directory on the root of the volume,\nthat `/lost+found` would be treated as a database. So we now create a subpath (usually `immudb`) subpath for storing that.\n\nThis is different from what we did on older (<=1.3.1) helm charts, so if you have already some volumes with data you can set\nvalue volumeSubPath to false (i.e.: `--set volumeSubPath.enabled=false`) when upgrading so that the old way is used.\n\nYou can alternatively migrate the data in a `/immudb` directory. You can use this pod as a reference for the job:\n\n```yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: migrator\nspec:\n  volumes:\n    - name: \"vol0\"\n      persistentVolumeClaim:\n        claimName: <your-claim-name-here>\n  containers:\n    - name: migrator\n      image: busybox\n      volumeMounts:\n        - mountPath: \"/data\"\n          name: \"vol0\"\n      command:\n        - sh\n        - -c\n        - |\n          mkdir -p /data/immudb\n          ls /data | grep -v -E 'immudb|lost\\+found'|while read i; do mv /data/$i /data/immudb/$i; done\n```\n\nAs said before, you can totally disable the use of subPath by setting `volumeSubPath.enabled=false`.\nYou can also tune the subfolder path using `volumeSubPath.path` value, if you prefer your data on a\ndifferent directory than the default `immudb`.\n\n### Enabling Amazon S3 storage\n\nimmudb can store its data in the Amazon S3 service (or a compatible alternative).\nThe following example shows how to run immudb with the S3 storage enabled:\n\n```bash\nexport IMMUDB_S3_STORAGE=true\nexport IMMUDB_S3_ACCESS_KEY_ID=<S3 ACCESS KEY ID>\nexport IMMUDB_S3_SECRET_KEY=<SECRET KEY>\nexport IMMUDB_S3_BUCKET_NAME=<BUCKET NAME>\nexport IMMUDB_S3_LOCATION=<AWS S3 REGION>\nexport IMMUDB_S3_PATH_PREFIX=testing-001\nexport IMMUDB_S3_ENDPOINT=\"https://${IMMUDB_S3_BUCKET_NAME}.s3.${IMMUDB_S3_LOCATION}.amazonaws.com\"\n\n./immudb\n```\n\nWhen working with the external storage, you can enable the option for the remote storage\nto be the primary source of identifier. This way, if immudb is run using ephemeral disks,\nsuch as with AWS ECS Fargate, the identifier can be taken from S3. To enable that, use:\n\n```bash\nexport IMMUDB_S3_EXTERNAL_IDENTIFIER=true\n```\n\nYou can also use the role-based credentials for more flexible and secure configuration.\nThis allows the service to be used with instance role configuration without a user entity.\nThe following example shows how to run immudb with the S3 storage enabled using AWS Roles:\n\n```bash\nexport IMMUDB_S3_STORAGE=true\nexport IMMUDB_S3_ROLE_ENABLED=true\nexport IMMUDB_S3_BUCKET_NAME=<BUCKET NAME>\nexport IMMUDB_S3_LOCATION=<AWS S3 REGION>\nexport IMMUDB_S3_PATH_PREFIX=testing-001\nexport IMMUDB_S3_ENDPOINT=\"https://${IMMUDB_S3_BUCKET_NAME}.s3.${IMMUDB_S3_LOCATION}.amazonaws.com\"\n\n./immudb\n```\n\nOptionally, you can specify the exact role immudb should be using with:\n\n```bash\nexport IMMUDB_S3_ROLE=<AWS S3 ACCESS ROLE NAME>\n```\n\nRemember, the `IMMUDB_S3_ROLE_ENABLED` parameter still should be on.\n\nYou can also easily use immudb with compatible s3 alternatives\nsuch as the [minio](https://github.com/minio/minio) server:\n\n```bash\nexport IMMUDB_S3_ACCESS_KEY_ID=minioadmin\nexport IMMUDB_S3_SECRET_KEY=minioadmin\nexport IMMUDB_S3_STORAGE=true\nexport IMMUDB_S3_BUCKET_NAME=immudb-bucket\nexport IMMUDB_S3_PATH_PREFIX=testing-001\nexport IMMUDB_S3_ENDPOINT=\"http://localhost:9000\"\n\n# Note: This spawns a temporary minio server without data persistence\ndocker run -d -p 9000:9000 minio/minio server /data\n\n# Create the bucket - this can also be done through web console at http://localhost:9000\ndocker run --net=host -it --entrypoint /bin/sh minio/mc -c \"\n  mc alias set local http://localhost:9000 minioadmin minioadmin &&\n  mc mb local/${IMMUDB_S3_BUCKET_NAME}\n\"\n\n# Run immudb instance\n./immudb\n```\n\n### Connecting with immuclient\n\nYou may download the immuclient binary from [the latest releases on Github](https://github.com/codenotary/immudb/releases/latest). Once you have downloaded immuclient, rename it to `immuclient`, make sure to mark it as executable, then run it. The following example shows how to obtain v1.5.0 for linux amd64:\n\n```bash\nwget https://github.com/codenotary/immudb/releases/download/v1.5.0/immuclient-v1.5.0-linux-amd64\nmv immuclient-v1.5.0-linux-amd64 immuclient\nchmod +x immuclient\n\n# start the interactive shell\n./immuclient\n\n# or use commands directly\n./immuclient help\n```\n\nOr just use Docker to run immuclient in a ready-to-use container. Nice and simple.\n\n```bash\ndocker run -it --rm --net host --name immuclient codenotary/immuclient:latest\n```\n\n## Using immudb\n\nLot of useful documentation and step by step guides can be found at https://docs.immudb.io/\n\n### Real world examples\n\nWe already learned about the following use cases from users:\n\n- use immudb to immutably store every update to sensitive database fields (credit card or bank account data) of an existing application database\n- store CI/CD recipes in immudb to protect build and deployment pipelines\n- store public certificates in immudb\n- use immudb as an additional hash storage for digital objects checksums\n- store log streams (i. e. audit logs) tamperproof\n- store the last known positions of submarines\n- record the location where fish was found aboard fishing trawlers\n\n### How to integrate immudb in your application\n\nWe have SDKs available for the following programming languages:\n\n1. Java [immudb4j](https://github.com/codenotary/immudb4j)\n2. Golang ([golang sdk](https://pkg.go.dev/github.com/codenotary/immudb/pkg/client), [Gorm adapter](https://github.com/codenotary/immugorm))\n3. .net [immudb4net](https://github.com/codenotary/immudb4net)\n4. Python [immudb-py](https://github.com/codenotary/immudb-py)\n5. Node.js [immudb-node](https://github.com/codenotary/immudb-node)\n\nTo get started with development, there is a [quickstart in our documentation](https://docs.immudb.io/master/immudb.html): or pick a basic running sample from [immudb-client-examples](https://github.com/codenotary/immudb-client-examples).\n\nOur [immudb Playground](https://play.codenotary.com) provides a guided environment to learn the Python SDK.\n\n<div align=\"center\">\n  <a href=\"https://play.codenotary.com\">\n    <img alt=\"immudb playground to start using immudb in an online demo environment\" src=\"img/playground2.png\"/>\n  </a>\n</div>\n\nWe've developed a \"language-agnostic SDK\" which exposes a REST API for easy consumption by any application.\n[immugw](https://github.com/codenotary/immugw) may be a convenient tool when SDKs are not available for the\nprogramming language you're using, for experimentation, or just because you prefer your app only uses REST endpoints.\n\n### Online demo environment\n\nClick here to try out the immudb web console access in an [online demo environment](https://demo.immudb.io) (username: immudb; password: immudb)\n\n<div align=\"center\">\n  <a href=\"https://demo.immudb.io\">\n    <img alt=\"Your own temporary immudb web console access to start using immudb in an online demo environment\" src=\"img/demoimmudb.png\"/>\n  </a>\n</div>\n\n## Tech specs\n\n| Topic                   | Description                                         |\n| ----------------------- | --------------------------------------------------- |\n| DB Model                | Key-Value with 3D access, Document Model, SQL       |\n| Data scheme             | schema-free                                         |\n| Implementation design   | Cryptographic commit log with parallel Merkle Tree, |\n|                         | (sync/async) indexing with extended B-tree          |\n| Implementation language | Go                                                  |\n| Server OS(s)            | BSD, Linux, OS X, Solaris, Windows, IBM z/OS        |\n| Embeddable              | Yes, optionally                                     |\n| Server APIs             | gRPC                                                |\n| Partition methods       | Sharding                                            |\n| Consistency concepts    | Immediate Consistency                               |\n| Transaction concepts    | ACID with Snapshot Isolation (SSI)                  |\n| Durability              | Yes                                                 |\n| Snapshots               | Yes                                                 |\n| High Read throughput    | Yes                                                 |\n| High Write throughput   | Yes                                                 |\n| Optimized for SSD       | Yes                                                 |\n\n## Performance figures\n\nimmudb can handle millions of writes per second. The following table shows performance of the embedded store inserting 1M entries on a machine with 4-core E3-1275v6 CPU and SSD disk:\n\n| Entries | Workers | Batch | Batches | time (s) | Entries/s |\n| ------- | ------- | ----- | ------- | -------- | --------- |\n| 1M      | 20      | 1000  | 50      | 1.061    | 1.2M /s   |\n| 1M      | 50      | 1000  | 20      | 0.543    | 1.8M /s   |\n| 1M      | 100     | 1000  | 10      | 0.615    | 1.6M /s   |\n\nYou can generate your own benchmarks using the `stress_tool` under `embedded/tools`.\n\n## Roadmap\n\nThe following topics are important to us and are planned or already being worked on:\n\n* Data pruning\n* Compression\n* compatibility with other database storage files\n* Easier API for developers\n* API compatibility with other, well-known embedded databases\n\n## Projects using immudb\n\nBelow is a list of known projects that use immudb:\n\n- [alma-sbom](https://github.com/AlmaLinux/alma-sbom) - AlmaLinux OS SBOM data management utility.\n\n- [immudb-log-audit](https://github.com/codenotary/immudb-log-audit) - A service and cli tool to store json formatted log input\n  and audit it later in immudb Vault.\n\n- [immudb-operator](https://github.com/unagex/immudb-operator) - Unagex Kubernetes Operator for immudb.\n\n- [immufluent](https://github.com/codenotary/immufluent) - Send fluentbit collected logs to immudb.\n\n- [immuvoting](https://github.com/padurean/immuvoting) - Publicly cryptographically verifiable electronic voting system powered by immudb.\n\nAre you using immudb in your project? Open a pull request to add it to the list.\n\n## Contributing\n\nWe welcome [contributors](CONTRIBUTING.md). Feel free to join the team!\n\n<a href=\"https://github.com/codenotary/immudb/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=codenotary/immudb\" />\n</a>\n\nLearn how to [build](BUILD.md) immudb components in both binary and Docker image form.\n\nTo report bugs or get help, use [GitHub's issues](https://github.com/codenotary/immudb/issues).\n\nimmudb is licensed under the [Business Source License 1.1](LICENSE).\n\nimmudb re-distributes other open-source tools and libraries - [Acknowledgements](ACKNOWLEDGEMENTS.md).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 7.00390625,
          "content": "# Security Policy\r\n\r\n## Table of contents\r\n\r\n1. Introduction\r\n2. Scope\r\n3. Supported Versions\r\n4. Reporting a Vulnerability\r\n5. Guidelines\r\n6. Test methods\r\n7. Authorization\r\n8. Questions\r\n\r\n## Introduction\r\n\r\nCodenotary, September 16th 2022\r\n\r\n*This security policy is based on [this template](https://www.cisa.gov/vulnerability-disclosure-policy-template).*\r\n\r\nCodenotary is committed to ensuring the security of the global public by protecting their information. This policy is intended to give security researchers clear guidelines for conducting vulnerability discovery activities and to convey our preferences in how to submit discovered vulnerabilities to us.\r\n\r\nThis policy is addressed to people using the immudb and / or contributing to the project. It describes **what systems and types of research** are covered under this policy, **how to send** us vulnerability reports, and **how long** we ask security researchers to wait before publicly disclosing vulnerabilities.\r\n\r\nWe encourage you to contact us to report potential vulnerabilities in our systems.\r\n\r\n## Scope\r\n\r\nThis policy applies to the following systems and services:\r\n\r\n- immudb database core application, \r\n- immuadmin and immuclient applications\r\n- golang immudb SDK\r\n\r\nSource code of the above tools [is available on GH](https://github.com/codenotary/immudb).\r\nAlso:\r\n\r\n- Java immudb SDK ([repo link](https://github.com/codenotary/immudb4j))\r\n- Python immudb SDK ([repo link](https://github.com/codenotary/immudb-py))\r\n- .Net immudb SDK ([repo link](https://github.com/codenotary/immudb4net))\r\n- Nodejs SDK ([repo link](https://github.com/codenotary/immudb-node))\r\n\r\nAny service not expressly listed above, such as any connected services, are excluded from scope and are not authorized for testing. Additionally, vulnerabilities found in systems from our vendors fall outside of this policy’s scope and should be reported directly to the vendor according to their disclosure policy (if any). If you aren’t sure whether a system is in scope or not, contact us at (immudb-security at codenotary.com) before starting your research (or at the security contact for the system’s domain name listed in the .gov WHOIS).\r\n\r\nThough we develop and maintain other internet-accessible systems or services, we ask that active research and testing only be conducted on the systems and services covered by the scope of this document. If there is a particular system not in scope that you think merits testing, please contact us to discuss it first. We will increase the scope of this policy over time.\r\n\r\nOther immudb SDK repositories that are not covered by this policy:\r\n\r\n- Ruby on rails SDK ([repo link](https://github.com/ankane/immudb-ruby))\r\n\r\n## Supported Versions\r\n\r\nOnly the latest version will be supported with security updates.\r\n\r\n## Reporting a vulnerability\r\n\r\n**IMPORTANT: Do not file public issues on GitHub for security vulnerabilities.**\r\n\r\nWe accept vulnerability reports via (immudb-security at codenotary.com). Reports may be submitted anonymously. If you share contact information, we will acknowledge receipt of your report within 3 business days.\r\n\r\nWe do not support PGP-encrypted emails.\r\n\r\nIn order to help us triage and prioritize submissions, we recommend that your reports:\r\n\r\n- Describe the location the vulnerability was discovered and the potential impact of exploitation.\r\n- Offer a detailed description of the steps needed to reproduce the vulnerability (proof of concept scripts or screenshots are helpful).\r\n- Explain how the vulnerability affects immudb usage and an estimation of the attack surface, if there is one.\r\n- List other projects or dependencies that were used in conjunction with Pinniped to produce the vulnerability.\r\n- Be in English, if possible.\r\n\r\nWhat you can expect from us:\r\n\r\n- When you choose to share your contact information with us, we commit to coordinating with you as openly and as quickly as possible.\r\n- Within 3 business days, we will acknowledge that your report has been received.\r\n- To the best of our ability, we will confirm the existence of the vulnerability to you and be as transparent as possible about what steps we are taking during the remediation process, including on issues or challenges that may delay resolution.\r\n- A public disclosure date is negotiated by the immudb team, the SDK developers and the bug submitter. We prefer to fully disclose the bug as soon as possible once a user mitigation or patch is available. It is reasonable to delay disclosure when the bug or the fix is not yet fully understood, the solution is not well-tested, or for distributor coordination. The timeframe for disclosure is from immediate (especially if it’s already publicly known) to a maximum of 90 business days.  \r\n\r\nWe will maintain an open dialogue to discuss issues.\r\n\r\n## Guidelines\r\n\r\nUnder this policy, “research” means activities in which you:\r\n\r\n- Notify us as soon as possible after you discover a real or potential security issue.\r\n- Make every effort to avoid privacy violations, degradation of user experience, disruption to production systems, and destruction or manipulation of data.\r\n- Only use exploits to the extent necessary to confirm a vulnerability’s presence. Do not use an exploit to compromise or exfiltrate data, establish persistent command line access, or use the exploit to pivot to other systems.\r\n- Provide us a reasonable amount of time to resolve the issue before you disclose it publicly.\r\n- Do not submit a high volume of low-quality reports.\r\n\r\nOnce you’ve established that a vulnerability exists or encounter any sensitive data (including personally identifiable information, financial information, or proprietary information or trade secrets of any party), **you must stop your test, notify us immediately, and not disclose this data to anyone else.**\r\n\r\n## Test methods\r\n\r\nThe following test methods are not authorized:\r\n\r\n- Network denial of service (DoS or DDoS) tests or other tests that impair access to or damage a system or data\r\n- Physical testing (e.g. office access, open doors, tailgating), social engineering (e.g. phishing, vishing), or any other non-technical vulnerability testing\r\n\r\n## Authorization\r\n\r\nIf you make a good faith effort to comply with this policy during your security research, we will consider your research to be authorized, we will work with you to understand and resolve the issue quickly, and Codenotary will not recommend or pursue legal action related to your research. Should legal action be initiated by a third party against you for activities that were conducted in accordance with this policy, we will make this authorization known.\r\n\r\n## Questions\r\n\r\nQuestions regarding this policy may be sent to immudb-security at codenotary.com. We also invite you to contact us with suggestions for improving this policy.\r\n\r\n## Document change history\r\n\r\n| Version Date | Description          |\r\n| ------- | ------------------ |\r\n| Sept. 7th 2022   | First version |\r\n| Sept. 16th 2022   | Reorganization and corrections |\r\n| October. 14th 2022   | Supported versions |\r\n| October, 18th 2022   | Commit following Conventional Commit specification |\r\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.2705078125,
          "content": "ignore:\n  - \"*windows.go\"\n  - \"*freebsd.go\"\n  - \"*windows.dist.go\"\n  - \"*freebsd.dist.go\"\n  - \"*windows*\"\n  - \"*freebsd*\"\n  - \"cmd/immuadmin/command/service/servicetest\"\n  - \"pkg/client/clienttest\"\n  - \"cmd/immuadmin/command/service/oss_unix.go\"\n  - \"cmd/immuclient/immuctest\"\n"
        },
        {
          "name": "configs",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "embedded",
          "type": "tree",
          "content": null
        },
        {
          "name": "ext-tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 4.994140625,
          "content": "module github.com/codenotary/immudb\n\ngo 1.17\n\nrequire (\n\tgithub.com/fatih/color v1.13.0\n\tgithub.com/gizak/termui/v3 v3.1.0\n\tgithub.com/gogo/protobuf v1.3.2\n\tgithub.com/golang/protobuf v1.5.3\n\tgithub.com/google/uuid v1.4.0\n\tgithub.com/grpc-ecosystem/go-grpc-middleware v1.3.0\n\tgithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0\n\tgithub.com/grpc-ecosystem/grpc-gateway v1.16.0\n\tgithub.com/grpc-ecosystem/grpc-gateway/v2 v2.17.0\n\tgithub.com/influxdata/influxdb-client-go/v2 v2.13.0\n\tgithub.com/jackc/pgx/v4 v4.16.1\n\tgithub.com/jaswdr/faker v1.16.0\n\tgithub.com/lib/pq v1.10.9\n\tgithub.com/mattn/goveralls v0.0.11\n\tgithub.com/o1egl/paseto v1.0.0\n\tgithub.com/olekukonko/tablewriter v0.0.5\n\tgithub.com/ory/go-acc v0.2.8\n\tgithub.com/peterh/liner v1.2.1\n\tgithub.com/prometheus/client_golang v1.12.2\n\tgithub.com/prometheus/client_model v0.2.0\n\tgithub.com/prometheus/common v0.32.1\n\tgithub.com/prometheus/procfs v0.7.3\n\tgithub.com/pseudomuto/protoc-gen-doc v1.4.1\n\tgithub.com/rogpeppe/go-internal v1.9.0\n\tgithub.com/rs/xid v1.5.0\n\tgithub.com/schollz/progressbar/v2 v2.15.0\n\tgithub.com/spf13/cobra v1.6.1\n\tgithub.com/spf13/pflag v1.0.5\n\tgithub.com/spf13/viper v1.15.0\n\tgithub.com/stretchr/testify v1.8.4\n\tgithub.com/takama/daemon v0.12.0\n\tgolang.org/x/crypto v0.17.0\n\tgolang.org/x/net v0.17.0\n\tgolang.org/x/sys v0.15.0\n\tgolang.org/x/tools/cmd/cover v0.1.0-deprecated\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20230822172742-b8732ec3820d\n\tgoogle.golang.org/grpc v1.57.1\n\tgoogle.golang.org/grpc/cmd/protoc-gen-go-grpc v1.1.0\n\tgoogle.golang.org/protobuf v1.32.0\n)\n\nrequire (\n\tgithub.com/Masterminds/goutils v1.1.1 // indirect\n\tgithub.com/Masterminds/semver v1.5.0 // indirect\n\tgithub.com/Masterminds/sprig v2.22.0+incompatible // indirect\n\tgithub.com/aead/chacha20 v0.0.0-20180709150244-8b13a72661da // indirect\n\tgithub.com/aead/chacha20poly1305 v0.0.0-20201124145622-1a5aba2a8b29 // indirect\n\tgithub.com/aead/poly1305 v0.0.0-20180717145839-3fee0db0b635 // indirect\n\tgithub.com/apapsch/go-jsonmerge/v2 v2.0.0 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/cespare/xxhash v1.1.0 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.2.0 // indirect\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.2 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/dgraph-io/ristretto v0.0.2 // indirect\n\tgithub.com/envoyproxy/protoc-gen-validate v0.10.1 // indirect\n\tgithub.com/fsnotify/fsnotify v1.6.0 // indirect\n\tgithub.com/ghodss/yaml v1.0.0 // indirect\n\tgithub.com/golang/glog v1.1.0 // indirect\n\tgithub.com/hashicorp/hcl v1.0.0 // indirect\n\tgithub.com/huandu/xstrings v1.3.2 // indirect\n\tgithub.com/imdario/mergo v0.3.13 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.0.1 // indirect\n\tgithub.com/influxdata/line-protocol v0.0.0-20200327222509-2487e7298839 // indirect\n\tgithub.com/jackc/chunkreader/v2 v2.0.1 // indirect\n\tgithub.com/jackc/pgconn v1.12.1 // indirect\n\tgithub.com/jackc/pgio v1.0.0 // indirect\n\tgithub.com/jackc/pgpassfile v1.0.0 // indirect\n\tgithub.com/jackc/pgproto3/v2 v2.3.0 // indirect\n\tgithub.com/jackc/pgservicefile v0.0.0-20200714003250-2b9c44734f2b // indirect\n\tgithub.com/jackc/pgtype v1.11.0 // indirect\n\tgithub.com/magiconair/properties v1.8.7 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.19 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.13 // indirect\n\tgithub.com/matttproud/golang_protobuf_extensions v1.0.1 // indirect\n\tgithub.com/mitchellh/colorstring v0.0.0-20190213212951-d06e56a500db // indirect\n\tgithub.com/mitchellh/copystructure v1.2.0 // indirect\n\tgithub.com/mitchellh/go-wordwrap v1.0.1 // indirect\n\tgithub.com/mitchellh/mapstructure v1.5.0 // indirect\n\tgithub.com/mitchellh/reflectwalk v1.0.2 // indirect\n\tgithub.com/mwitkow/go-proto-validators v0.0.0-20180403085117-0950a7990007 // indirect\n\tgithub.com/nsf/termbox-go v1.1.1 // indirect\n\tgithub.com/oapi-codegen/runtime v1.0.0 // indirect\n\tgithub.com/ory/viper v1.7.5 // indirect\n\tgithub.com/pborman/uuid v1.2.0 // indirect\n\tgithub.com/pelletier/go-toml v1.9.5 // indirect\n\tgithub.com/pelletier/go-toml/v2 v2.0.9 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/pseudomuto/protokit v0.2.1 // indirect\n\tgithub.com/rivo/uniseg v0.2.0 // indirect\n\tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n\tgithub.com/spf13/afero v1.9.3 // indirect\n\tgithub.com/spf13/cast v1.5.0 // indirect\n\tgithub.com/spf13/jwalterweatherman v1.1.0 // indirect\n\tgithub.com/subosito/gotenv v1.4.2 // indirect\n\tgolang.org/x/mod v0.9.0 // indirect\n\tgolang.org/x/term v0.15.0 // indirect\n\tgolang.org/x/text v0.14.0 // indirect\n\tgolang.org/x/tools v0.7.0 // indirect\n\tgoogle.golang.org/genproto v0.0.0-20230803162519-f966b187b2e5 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20230822172742-b8732ec3820d // indirect\n\tgopkg.in/ini.v1 v1.67.0 // indirect\n\tgopkg.in/yaml.v2 v2.4.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n\nreplace github.com/takama/daemon v0.12.0 => github.com/codenotary/daemon v0.0.0-20200507161650-3d4bcb5230f4\n\nreplace github.com/spf13/afero => github.com/spf13/afero v1.5.1\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 84.4404296875,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=\ncloud.google.com/go v0.44.1/go.mod h1:iSa0KzasP4Uvy3f1mN/7PiObzGgflwredwwASm/v6AU=\ncloud.google.com/go v0.44.2/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=\ncloud.google.com/go v0.45.1/go.mod h1:RpBamKRgapWJb87xiFSdk4g1CME7QZg3uwTez+TSTjc=\ncloud.google.com/go v0.46.3/go.mod h1:a6bKKbmY7er1mI7TEI4lsAkts/mkhTSZK8w33B4RAg0=\ncloud.google.com/go v0.50.0/go.mod h1:r9sluTvynVuxRIOHXQEHMFffphuXHOMZMycpNR5e6To=\ncloud.google.com/go v0.52.0/go.mod h1:pXajvRH/6o3+F9jDHZWQ5PbGhn+o8w9qiu/CffaVdO4=\ncloud.google.com/go v0.53.0/go.mod h1:fp/UouUEsRkN6ryDKNW/Upv/JBKnv6WDthjR6+vze6M=\ncloud.google.com/go v0.54.0/go.mod h1:1rq2OEkV3YMf6n/9ZvGWI3GWw0VoqH/1x2nd8Is/bPc=\ncloud.google.com/go v0.56.0/go.mod h1:jr7tqZxxKOVYizybht9+26Z/gUq7tiRzu+ACVAMbKVk=\ncloud.google.com/go v0.57.0/go.mod h1:oXiQ6Rzq3RAkkY7N6t3TcE6jE+CIBBbA36lwQ1JyzZs=\ncloud.google.com/go v0.62.0/go.mod h1:jmCYTdRCQuc1PHIIJ/maLInMho30T/Y0M4hTdTShOYc=\ncloud.google.com/go v0.65.0/go.mod h1:O5N8zS7uWy9vkA9vayVHs65eM1ubvY4h553ofrNHObY=\ncloud.google.com/go/bigquery v1.0.1/go.mod h1:i/xbL2UlR5RvWAURpBYZTtm/cXjCha9lbfbpx4poX+o=\ncloud.google.com/go/bigquery v1.3.0/go.mod h1:PjpwJnslEMmckchkHFfq+HTD2DmtT67aNFKH1/VBDHE=\ncloud.google.com/go/bigquery v1.4.0/go.mod h1:S8dzgnTigyfTmLBfrtrhyYhwRxG72rYxvftPBK2Dvzc=\ncloud.google.com/go/bigquery v1.5.0/go.mod h1:snEHRnqQbz117VIFhE8bmtwIDY80NLUZUMb4Nv6dBIg=\ncloud.google.com/go/bigquery v1.7.0/go.mod h1://okPTzCYNXSlb24MZs83e2Do+h+VXtc4gLoIoXIAPc=\ncloud.google.com/go/bigquery v1.8.0/go.mod h1:J5hqkt3O0uAFnINi6JXValWIb1v0goeZM77hZzJN/fQ=\ncloud.google.com/go/datastore v1.0.0/go.mod h1:LXYbyblFSglQ5pkeyhO+Qmw7ukd3C+pD7TKLgZqpHYE=\ncloud.google.com/go/datastore v1.1.0/go.mod h1:umbIZjpQpHh4hmRpGhH4tLFup+FVzqBi1b3c64qFpCk=\ncloud.google.com/go/pubsub v1.0.1/go.mod h1:R0Gpsv3s54REJCy4fxDixWD93lHJMoZTyQ2kNxGRt3I=\ncloud.google.com/go/pubsub v1.1.0/go.mod h1:EwwdRX2sKPjnvnqCa270oGRyludottCI76h+R3AArQw=\ncloud.google.com/go/pubsub v1.2.0/go.mod h1:jhfEVHT8odbXTkndysNHCcx0awwzvfOlguIAii9o8iA=\ncloud.google.com/go/pubsub v1.3.1/go.mod h1:i+ucay31+CNRpDW4Lu78I4xXG+O1r/MAHgjpRVR+TSU=\ncloud.google.com/go/storage v1.0.0/go.mod h1:IhtSnM/ZTZV8YYJWCY8RULGVqBDmpoyjwiyrjsg+URw=\ncloud.google.com/go/storage v1.5.0/go.mod h1:tpKbwo567HUNpVclU5sGELwQWBDZ8gh0ZeosJ0Rtdos=\ncloud.google.com/go/storage v1.6.0/go.mod h1:N7U0C8pVQ/+NIKOBQyamJIeKQKkZ+mxpohlUTyfDhBk=\ncloud.google.com/go/storage v1.8.0/go.mod h1:Wv1Oy7z6Yz3DshWRJFhqM/UCfaWIRTdp0RXyy7KQOVs=\ncloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9ullr3+Kg0=\ndmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\ngithub.com/Masterminds/goutils v1.1.1 h1:5nUrii3FMTL5diU80unEVvNevw1nH4+ZV4DSLVJLSYI=\ngithub.com/Masterminds/goutils v1.1.1/go.mod h1:8cTjp+g8YejhMuvIA5y2vz3BpJxksy863GQaJW2MFNU=\ngithub.com/Masterminds/semver v1.4.2/go.mod h1:MB6lktGJrhw8PrUyiEoblNEGEQ+RzHPF078ddwwvV3Y=\ngithub.com/Masterminds/semver v1.5.0 h1:H65muMkzWKEuNDnfl9d70GUjFniHKHRbFPGBuZ3QEww=\ngithub.com/Masterminds/semver v1.5.0/go.mod h1:MB6lktGJrhw8PrUyiEoblNEGEQ+RzHPF078ddwwvV3Y=\ngithub.com/Masterminds/semver/v3 v3.1.1/go.mod h1:VPu/7SZ7ePZ3QOrcuXROw5FAcLl4a0cBrbBpGY/8hQs=\ngithub.com/Masterminds/sprig v2.15.0+incompatible/go.mod h1:y6hNFY5UBTIWBxnzTeuNhlNS5hqE0NB0E6fgfo2Br3o=\ngithub.com/Masterminds/sprig v2.22.0+incompatible h1:z4yfnGrZ7netVz+0EDJ0Wi+5VZCSYp4Z0m2dk6cEM60=\ngithub.com/Masterminds/sprig v2.22.0+incompatible/go.mod h1:y6hNFY5UBTIWBxnzTeuNhlNS5hqE0NB0E6fgfo2Br3o=\ngithub.com/OneOfOne/xxhash v1.2.2 h1:KMrpdQIwFcEqXDklaen+P1axHaj9BSKzvpUUfnHldSE=\ngithub.com/OneOfOne/xxhash v1.2.2/go.mod h1:HSdplMjZKSmBqAxg5vPj2TmRDmfkzw+cTzAElWljhcU=\ngithub.com/RaveNoX/go-jsoncommentstrip v1.0.0/go.mod h1:78ihd09MekBnJnxpICcwzCMzGrKSKYe4AqU6PDYYpjk=\ngithub.com/aead/chacha20 v0.0.0-20180709150244-8b13a72661da h1:KjTM2ks9d14ZYCvmHS9iAKVt9AyzRSqNU1qabPih5BY=\ngithub.com/aead/chacha20 v0.0.0-20180709150244-8b13a72661da/go.mod h1:eHEWzANqSiWQsof+nXEI9bUVUyV6F53Fp89EuCh2EAA=\ngithub.com/aead/chacha20poly1305 v0.0.0-20170617001512-233f39982aeb/go.mod h1:UzH9IX1MMqOcwhoNOIjmTQeAxrFgzs50j4golQtXXxU=\ngithub.com/aead/chacha20poly1305 v0.0.0-20201124145622-1a5aba2a8b29 h1:1DcvRPZOdbQRg5nAHt2jrc5QbV0AGuhDdfQI6gXjiFE=\ngithub.com/aead/chacha20poly1305 v0.0.0-20201124145622-1a5aba2a8b29/go.mod h1:UzH9IX1MMqOcwhoNOIjmTQeAxrFgzs50j4golQtXXxU=\ngithub.com/aead/poly1305 v0.0.0-20180717145839-3fee0db0b635 h1:52m0LGchQBBVqJRyYYufQuIbVqRawmubW3OFGqK1ekw=\ngithub.com/aead/poly1305 v0.0.0-20180717145839-3fee0db0b635/go.mod h1:lmLxL+FV291OopO93Bwf9fQLQeLyt33VJRUg5VJ30us=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alecthomas/units v0.0.0-20190717042225-c3de453c63f4/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alecthomas/units v0.0.0-20190924025748-f65c72e2690d/go.mod h1:rBZYJk541a8SKzHPHnH3zbiI+7dagKZ0cgpgrD7Fyho=\ngithub.com/antihax/optional v1.0.0/go.mod h1:uupD/76wgC+ih3iEmQUL+0Ugr19nfwCT1kdvxnR2qWY=\ngithub.com/aokoli/goutils v1.0.1/go.mod h1:SijmP0QR8LtwsmDs8Yii5Z/S4trXFGFC2oO5g9DP+DQ=\ngithub.com/apapsch/go-jsonmerge/v2 v2.0.0 h1:axGnT1gRIfimI7gJifB699GoE/oq+F2MU7Dml6nw9rQ=\ngithub.com/apapsch/go-jsonmerge/v2 v2.0.0/go.mod h1:lvDnEdqiQrp0O42VQGgmlKpxL1AP2+08jFMw88y4klk=\ngithub.com/armon/consul-api v0.0.0-20180202201655-eb2c6b5be1b6/go.mod h1:grANhF5doyWs3UAsr3K4I6qtAmlQcZDesFNEHPZAzj8=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/bmatcuk/doublestar v1.1.1/go.mod h1:UD6OnuiIn0yFxxA2le/rnRU1G4RaI4UvFv1sNto9p6w=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/cespare/xxhash v1.1.0 h1:a6HrQnmkObjyL+Gs60czilIUGqrzKutQD6XZog3p+ko=\ngithub.com/cespare/xxhash v1.1.0/go.mod h1:XrSqR1VqqWfGrhpAt58auRo0WTKS1nRRg3ghfAqPWnc=\ngithub.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cespare/xxhash/v2 v2.1.2/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cespare/xxhash/v2 v2.2.0 h1:DC2CZ1Ep5Y4k3ZQ899DldepgrayRUGE6BBZ/cd9Cj44=\ngithub.com/cespare/xxhash/v2 v2.2.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\ngithub.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\ngithub.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cockroachdb/apd v1.1.0 h1:3LFP3629v+1aKXU5Q37mxmRxX/pIu1nijXydLShEq5I=\ngithub.com/cockroachdb/apd v1.1.0/go.mod h1:8Sl8LxpKi29FqWXR16WEFZRNSz3SoPzUzeMeY4+DwBQ=\ngithub.com/codenotary/daemon v0.0.0-20200507161650-3d4bcb5230f4 h1:5mhTmqO2f6QXPlIAGCEtCYR2MHNDLVkwaGWiSbffeQU=\ngithub.com/codenotary/daemon v0.0.0-20200507161650-3d4bcb5230f4/go.mod h1:PFDPquCi+3LI5PpAKS/8LvJBHTfkdsEXfGtANGx9hH4=\ngithub.com/coreos/bbolt v1.3.2/go.mod h1:iRUV2dpdMOn7Bo10OQBFzIJO9kkE559Wcmn+qkEiiKk=\ngithub.com/coreos/etcd v3.3.10+incompatible/go.mod h1:uF7uidLiAD3TWHmW31ZFd/JWoc32PjwdhPthX9715RE=\ngithub.com/coreos/go-semver v0.2.0/go.mod h1:nnelYz7RCh+5ahJtPPxZlU+153eP4D4r3EedlOD2RNk=\ngithub.com/coreos/go-systemd v0.0.0-20190321100706-95778dfbb74e/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=\ngithub.com/coreos/go-systemd v0.0.0-20190719114852-fd7a80b32e1f/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=\ngithub.com/coreos/pkg v0.0.0-20180928190104-399ea9e2e55f/go.mod h1:E3G3o1h8I7cfcXa63jLwjI0eiQQMgzzUDFVpN/nH/eA=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.0/go.mod h1:maD7wRr/U5Z6m/iR4s+kqSMx2CaBsrgA7czyZG/E6dU=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2 h1:p1EgwI/C7NhT0JmVkwCD2ZBK8j4aeHQX2pMHHBfMQ6w=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.7/go.mod h1:lj5s0c3V2DBrqTV7llrYr5NG6My20zk30Fl46Y7DoTY=\ngithub.com/davecgh/go-spew v0.0.0-20161028175848-04cdfd42973b/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dgraph-io/ristretto v0.0.1/go.mod h1:T40EBc7CJke8TkpiYfGGKAeFjSaxuFXhuXRyumBd6RE=\ngithub.com/dgraph-io/ristretto v0.0.2 h1:a5WaUrDa0qm0YrAAS1tUykT5El3kt62KNZZeMxQn3po=\ngithub.com/dgraph-io/ristretto v0.0.2/go.mod h1:KPxhHT9ZxKefz+PCeOGsrHpl1qZ7i70dGTu2u+Ahh6E=\ngithub.com/dgrijalva/jwt-go v3.2.0+incompatible/go.mod h1:E3ru+11k8xSBh+hMPgOLZmtrrCbhqsmaPHjLKYnJCaQ=\ngithub.com/dgryski/go-farm v0.0.0-20190423205320-6a90982ecee2 h1:tdlZCpZ/P9DhczCTSixgIKmwPv6+wP5DGjqLYw5SUiA=\ngithub.com/dgryski/go-farm v0.0.0-20190423205320-6a90982ecee2/go.mod h1:SqUrOPUnsFjfmXRMNPybcSiG0BgUW2AuFH8PAnS2iTw=\ngithub.com/dgryski/go-sip13 v0.0.0-20181026042036-e10d5fee7954/go.mod h1:vAd38F8PWV+bWy6jNmig1y/TA+kYO4g3RSRF0IAv0no=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/envoyproxy/protoc-gen-validate v0.3.0-java/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/envoyproxy/protoc-gen-validate v0.10.1 h1:c0g45+xCJhdgFGw7a5QAfdS4byAbud7miNWJ1WwEVf8=\ngithub.com/envoyproxy/protoc-gen-validate v0.10.1/go.mod h1:DRjgyB0I43LtJapqN6NiRwroiAU2PaFuvk/vjgh61ss=\ngithub.com/fatih/color v1.13.0 h1:8LOYc1KYPPmyKMuN8QV2DNRWNbLo6LZ0iLs8+mlH53w=\ngithub.com/fatih/color v1.13.0/go.mod h1:kLAiJbzzSOZDVNGyDpeOxJ47H46qBXwg5ILebYFFOfk=\ngithub.com/frankban/quicktest v1.14.3 h1:FJKSZTDHjyhriyC81FLQ0LY93eSai0ZyR/ZIkd3ZUKE=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4IgpuI1SZQ=\ngithub.com/fsnotify/fsnotify v1.6.0 h1:n+5WquG0fcWoWp6xPWfHdbskMCQaFnG6PfBrh1Ky4HY=\ngithub.com/fsnotify/fsnotify v1.6.0/go.mod h1:sl3t1tCWJFWoRz9R8WJCbQihKKwmorjAbSClcnxKAGw=\ngithub.com/ghodss/yaml v1.0.0 h1:wQHKEahhL6wmXdzwWG11gIVCkOv05bNOh+Rxn0yngAk=\ngithub.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\ngithub.com/gizak/termui/v3 v3.1.0 h1:ZZmVDgwHl7gR7elfKf1xc4IudXZ5qqfDh4wExk4Iajc=\ngithub.com/gizak/termui/v3 v3.1.0/go.mod h1:bXQEBkJpzxUAKf0+xq9MSWAvWZlE7c+aidmyFlkYTrY=\ngithub.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/kit v0.9.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/log v0.1.0/go.mod h1:zbhenjAZHb184qTLMA9ZjW7ThYL0H2mk7Q6pNt4vbaY=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=\ngithub.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/gofrs/uuid v4.0.0+incompatible h1:1SD/1F5pU8p29ybwgQSwpQk+mwdRrXCYuPhW6m+TnJw=\ngithub.com/gofrs/uuid v4.0.0+incompatible/go.mod h1:b2aQJv3Z4Fp6yNu3cdSllBxTCLRxnplIgP/c0N/04lM=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/gogo/protobuf v1.2.1/go.mod h1:hp+jE20tsWTFYpLwKvXlhS1hjn+gTNwPg2I6zVXpSg4=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/glog v1.1.0 h1:/d3pCKDPWNnvIWe0vVUpNP32qc8U3PDVxySP/y360qE=\ngithub.com/golang/glog v1.1.0/go.mod h1:pfYeQZ3JWZoXTV5sFc986z3HTpwQs9At6P4ImfuP3NQ=\ngithub.com/golang/groupcache v0.0.0-20190129154638-5b532d6fd5ef/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.2.0/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.3.1/go.mod h1:sBzyDLLjw3U8JLTeZvSv8jJB+tU5PVekmnlKIyFUx0Y=\ngithub.com/golang/mock v1.4.0/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.1/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.3/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.4/go.mod h1:l3mdAwkq5BuhzHwde/uurv3sEJeZMXNpwsxVWU71h+4=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.4/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.5/go.mod h1:6O5/vntMXwX2lRkT1hjjk0nAC1IDOTvTlVgjlRvqsdk=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/golang/protobuf v1.5.3 h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg=\ngithub.com/golang/protobuf v1.5.3/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.4.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.9 h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=\ngithub.com/google/martian/v3 v3.0.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\ngithub.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20190515194954-54271f7e092f/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20191218002539-d4f498aebedc/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200212024743-f11f1df84d12/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200229191704-1ebb73c60ed3/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200430221834-fc25d7d30c6d/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200708004538-1a94d8640e99/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\ngithub.com/google/uuid v0.0.0-20161128191214-064e2069ce9c/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.0.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.1.1/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.4.0 h1:MtMxsa51/r9yyhkyLsVeVt0B+BGQZzpQiTQ4eHZ8bc4=\ngithub.com/google/uuid v1.4.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=\ngithub.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=\ngithub.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\ngithub.com/gorilla/websocket v1.4.0/go.mod h1:E7qHFY5m1UJ88s3WnNqhKjPHQ0heANvMoAMk2YaljkQ=\ngithub.com/grpc-ecosystem/go-grpc-middleware v1.0.0/go.mod h1:FiyG127CGDf3tlThmgyCl78X/SZQqEOJBCDaAfeWzPs=\ngithub.com/grpc-ecosystem/go-grpc-middleware v1.3.0 h1:+9834+KizmvFV7pXQGSXQTsaWhq2GjuNUt0aUU0YBYw=\ngithub.com/grpc-ecosystem/go-grpc-middleware v1.3.0/go.mod h1:z0ButlSOZa5vEBq9m2m2hlwIgKw+rp3sdCBRoJY+30Y=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0 h1:Ovs26xHkKqVztRpIrF/92BcuyuQ/YW4NSIpoGtfXNho=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0/go.mod h1:8NvIoxWQoOIhqOTXgfV/d3M/q6VIi02HzZEHgUlZvzk=\ngithub.com/grpc-ecosystem/grpc-gateway v1.9.0/go.mod h1:vNeuVxBJEsws4ogUvrchl83t/GYV9WGTSLVdBhOQFDY=\ngithub.com/grpc-ecosystem/grpc-gateway v1.16.0 h1:gmcG1KaJ57LophUzW0Hy8NmPhnMZb4M0+kPpLofRdBo=\ngithub.com/grpc-ecosystem/grpc-gateway v1.16.0/go.mod h1:BDjrQk3hbvj6Nolgz8mAMFbcEtjT1g+wF4CSlocrBnw=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.17.0 h1:Rme6CE1aUTyV9WmrEPyGf1V+7W3iQzZ1DZkKnT6z9B0=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.17.0/go.mod h1:Hbb13e3/WtqQ8U5hLGkek9gJvBLasHuPFI0UEGfnQ10=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/hcl v1.0.0 h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=\ngithub.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=\ngithub.com/huandu/xstrings v1.0.0/go.mod h1:4qWG/gcEcfX4z/mBDHJ++3ReCw9ibxbsNJbcucJdbSo=\ngithub.com/huandu/xstrings v1.3.2 h1:L18LIDzqlW6xN2rEkpdV8+oL/IXWJ1APd+vsdYy4Wdw=\ngithub.com/huandu/xstrings v1.3.2/go.mod h1:y5/lhBue+AyNmUVz9RLU9xbLR0o4KIIExikq4ovT0aE=\ngithub.com/ianlancetaylor/demangle v0.0.0-20181102032728-5e5cf60278f6/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/imdario/mergo v0.3.4/go.mod h1:2EnlNZ0deacrJVfApfmtdGgDfMuh/nq6Ok1EcJh5FfA=\ngithub.com/imdario/mergo v0.3.13 h1:lFzP57bqS/wsqKssCGmtLAb8A0wKjLGrve2q3PPVcBk=\ngithub.com/imdario/mergo v0.3.13/go.mod h1:4lJ1jqUDcsbIECGy0RUJAXNIhg+6ocWgb1ALK2O4oXg=\ngithub.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\ngithub.com/inconshreveable/mousetrap v1.0.1 h1:U3uMjPSQEBMNp1lFxmllqCPM6P5u/Xq7Pgzkat/bFNc=\ngithub.com/inconshreveable/mousetrap v1.0.1/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/influxdata/influxdb-client-go/v2 v2.13.0 h1:ioBbLmR5NMbAjP4UVA5r9b5xGjpABD7j65pI8kFphDM=\ngithub.com/influxdata/influxdb-client-go/v2 v2.13.0/go.mod h1:k+spCbt9hcvqvUiz0sr5D8LolXHqAAOfPw9v/RIRHl4=\ngithub.com/influxdata/line-protocol v0.0.0-20200327222509-2487e7298839 h1:W9WBk7wlPfJLvMCdtV4zPulc4uCPrlywQOmbFOhgQNU=\ngithub.com/influxdata/line-protocol v0.0.0-20200327222509-2487e7298839/go.mod h1:xaLFMmpvUxqXtVkUJfg9QmT88cDaCJ3ZKgdZ78oO8Qo=\ngithub.com/jackc/chunkreader v1.0.0/go.mod h1:RT6O25fNZIuasFJRyZ4R/Y2BbhasbmZXF9QQ7T3kePo=\ngithub.com/jackc/chunkreader/v2 v2.0.0/go.mod h1:odVSm741yZoC3dpHEUXIqA9tQRhFrgOHwnPIn9lDKlk=\ngithub.com/jackc/chunkreader/v2 v2.0.1 h1:i+RDz65UE+mmpjTfyz0MoVTnzeYxroil2G82ki7MGG8=\ngithub.com/jackc/chunkreader/v2 v2.0.1/go.mod h1:odVSm741yZoC3dpHEUXIqA9tQRhFrgOHwnPIn9lDKlk=\ngithub.com/jackc/pgconn v0.0.0-20190420214824-7e0022ef6ba3/go.mod h1:jkELnwuX+w9qN5YIfX0fl88Ehu4XC3keFuOJJk9pcnA=\ngithub.com/jackc/pgconn v0.0.0-20190824142844-760dd75542eb/go.mod h1:lLjNuW/+OfW9/pnVKPazfWOgNfH2aPem8YQ7ilXGvJE=\ngithub.com/jackc/pgconn v0.0.0-20190831204454-2fabfa3c18b7/go.mod h1:ZJKsE/KZfsUgOEh9hBm+xYTstcNHg7UPMVJqRfQxq4s=\ngithub.com/jackc/pgconn v1.8.0/go.mod h1:1C2Pb36bGIP9QHGBYCjnyhqu7Rv3sGshaQUvmfGIB/o=\ngithub.com/jackc/pgconn v1.9.0/go.mod h1:YctiPyvzfU11JFxoXokUOOKQXQmDMoJL9vJzHH8/2JY=\ngithub.com/jackc/pgconn v1.9.1-0.20210724152538-d89c8390a530/go.mod h1:4z2w8XhRbP1hYxkpTuBjTS3ne3J48K83+u0zoyvg2pI=\ngithub.com/jackc/pgconn v1.12.1 h1:rsDFzIpRk7xT4B8FufgpCCeyjdNpKyghZeSefViE5W8=\ngithub.com/jackc/pgconn v1.12.1/go.mod h1:ZkhRC59Llhrq3oSfrikvwQ5NaxYExr6twkdkMLaKono=\ngithub.com/jackc/pgio v1.0.0 h1:g12B9UwVnzGhueNavwioyEEpAmqMe1E/BN9ES+8ovkE=\ngithub.com/jackc/pgio v1.0.0/go.mod h1:oP+2QK2wFfUWgr+gxjoBH9KGBb31Eio69xUb0w5bYf8=\ngithub.com/jackc/pgmock v0.0.0-20190831213851-13a1b77aafa2/go.mod h1:fGZlG77KXmcq05nJLRkk0+p82V8B8Dw8KN2/V9c/OAE=\ngithub.com/jackc/pgmock v0.0.0-20201204152224-4fe30f7445fd/go.mod h1:hrBW0Enj2AZTNpt/7Y5rr2xe/9Mn757Wtb2xeBzPv2c=\ngithub.com/jackc/pgmock v0.0.0-20210724152146-4ad1a8207f65 h1:DadwsjnMwFjfWc9y5Wi/+Zz7xoE5ALHsRQlOctkOiHc=\ngithub.com/jackc/pgmock v0.0.0-20210724152146-4ad1a8207f65/go.mod h1:5R2h2EEX+qri8jOWMbJCtaPWkrrNc7OHwsp2TCqp7ak=\ngithub.com/jackc/pgpassfile v1.0.0 h1:/6Hmqy13Ss2zCq62VdNG8tM1wchn8zjSGOBJ6icpsIM=\ngithub.com/jackc/pgpassfile v1.0.0/go.mod h1:CEx0iS5ambNFdcRtxPj5JhEz+xB6uRky5eyVu/W2HEg=\ngithub.com/jackc/pgproto3 v1.1.0/go.mod h1:eR5FA3leWg7p9aeAqi37XOTgTIbkABlvcPB3E5rlc78=\ngithub.com/jackc/pgproto3/v2 v2.0.0-alpha1.0.20190420180111-c116219b62db/go.mod h1:bhq50y+xrl9n5mRYyCBFKkpRVTLYJVWeCc+mEAI3yXA=\ngithub.com/jackc/pgproto3/v2 v2.0.0-alpha1.0.20190609003834-432c2951c711/go.mod h1:uH0AWtUmuShn0bcesswc4aBTWGvw0cAxIJp+6OB//Wg=\ngithub.com/jackc/pgproto3/v2 v2.0.0-rc3/go.mod h1:ryONWYqW6dqSg1Lw6vXNMXoBJhpzvWKnT95C46ckYeM=\ngithub.com/jackc/pgproto3/v2 v2.0.0-rc3.0.20190831210041-4c03ce451f29/go.mod h1:ryONWYqW6dqSg1Lw6vXNMXoBJhpzvWKnT95C46ckYeM=\ngithub.com/jackc/pgproto3/v2 v2.0.6/go.mod h1:WfJCnwN3HIg9Ish/j3sgWXnAfK8A9Y0bwXYU5xKaEdA=\ngithub.com/jackc/pgproto3/v2 v2.1.1/go.mod h1:WfJCnwN3HIg9Ish/j3sgWXnAfK8A9Y0bwXYU5xKaEdA=\ngithub.com/jackc/pgproto3/v2 v2.3.0 h1:brH0pCGBDkBW07HWlN/oSBXrmo3WB0UvZd1pIuDcL8Y=\ngithub.com/jackc/pgproto3/v2 v2.3.0/go.mod h1:WfJCnwN3HIg9Ish/j3sgWXnAfK8A9Y0bwXYU5xKaEdA=\ngithub.com/jackc/pgservicefile v0.0.0-20200714003250-2b9c44734f2b h1:C8S2+VttkHFdOOCXJe+YGfa4vHYwlt4Zx+IVXQ97jYg=\ngithub.com/jackc/pgservicefile v0.0.0-20200714003250-2b9c44734f2b/go.mod h1:vsD4gTJCa9TptPL8sPkXrLZ+hDuNrZCnj29CQpr4X1E=\ngithub.com/jackc/pgtype v0.0.0-20190421001408-4ed0de4755e0/go.mod h1:hdSHsc1V01CGwFsrv11mJRHWJ6aifDLfdV3aVjFF0zg=\ngithub.com/jackc/pgtype v0.0.0-20190824184912-ab885b375b90/go.mod h1:KcahbBH1nCMSo2DXpzsoWOAfFkdEtEJpPbVLq8eE+mc=\ngithub.com/jackc/pgtype v0.0.0-20190828014616-a8802b16cc59/go.mod h1:MWlu30kVJrUS8lot6TQqcg7mtthZ9T0EoIBFiJcmcyw=\ngithub.com/jackc/pgtype v1.8.1-0.20210724151600-32e20a603178/go.mod h1:C516IlIV9NKqfsMCXTdChteoXmwgUceqaLfjg2e3NlM=\ngithub.com/jackc/pgtype v1.11.0 h1:u4uiGPz/1hryuXzyaBhSk6dnIyyG2683olG2OV+UUgs=\ngithub.com/jackc/pgtype v1.11.0/go.mod h1:LUMuVrfsFfdKGLw+AFFVv6KtHOFMwRgDDzBt76IqCA4=\ngithub.com/jackc/pgx/v4 v4.0.0-20190420224344-cc3461e65d96/go.mod h1:mdxmSJJuR08CZQyj1PVQBHy9XOp5p8/SHH6a0psbY9Y=\ngithub.com/jackc/pgx/v4 v4.0.0-20190421002000-1b8f0016e912/go.mod h1:no/Y67Jkk/9WuGR0JG/JseM9irFbnEPbuWV2EELPNuM=\ngithub.com/jackc/pgx/v4 v4.0.0-pre1.0.20190824185557-6972a5742186/go.mod h1:X+GQnOEnf1dqHGpw7JmHqHc1NxDoalibchSk9/RWuDc=\ngithub.com/jackc/pgx/v4 v4.12.1-0.20210724153913-640aa07df17c/go.mod h1:1QD0+tgSXP7iUjYm9C1NxKhny7lq6ee99u/z+IHFcgs=\ngithub.com/jackc/pgx/v4 v4.16.1 h1:JzTglcal01DrghUqt+PmzWsZx/Yh7SC/CTQmSBMTd0Y=\ngithub.com/jackc/pgx/v4 v4.16.1/go.mod h1:SIhx0D5hoADaiXZVyv+3gSm3LCIIINTVO0PficsvWGQ=\ngithub.com/jackc/puddle v0.0.0-20190413234325-e4ced69a3a2b/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=\ngithub.com/jackc/puddle v0.0.0-20190608224051-11cab39313c9/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=\ngithub.com/jackc/puddle v1.1.3/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=\ngithub.com/jackc/puddle v1.2.1/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=\ngithub.com/jaswdr/faker v1.16.0 h1:5ZjusQbqIZwJnUymPirNKJI1yFCuozdSR9oeYPgD5Uk=\ngithub.com/jaswdr/faker v1.16.0/go.mod h1:x7ZlyB1AZqwqKZgyQlnqEG8FDptmHlncA5u2zY/yi6w=\ngithub.com/jonboulle/clockwork v0.1.0/go.mod h1:Ii8DK3G1RaLaWxj9trq07+26W01tbo22gdxWY5EU2bo=\ngithub.com/jpillora/backoff v1.0.0/go.mod h1:J/6gKK9jxlEcS3zixgDgUAsiuZ7yrSoa/FX5e0EB2j4=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.10/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.11/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=\ngithub.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=\ngithub.com/jtolds/gls v4.20.0+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=\ngithub.com/juju/gnuflag v0.0.0-20171113085948-2ce1bb71843d/go.mod h1:2PavIy+JPciBPrBUjwbNvtwB6RQlve+hkpll6QSNmOE=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/julienschmidt/httprouter v1.3.0/go.mod h1:JR6WtHb+2LUe8TCKY3cZOxFyyO8IZAc4RVcycCCAKdM=\ngithub.com/kisielk/errcheck v1.1.0/go.mod h1:EZBBE59ingxPouuu3KfxchcWSUPOHkagtvWXihfKN4Q=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.2/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.3/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/fs v0.1.0/go.mod h1:FFnZGqtBN9Gxj7eW1uZ42v5BccTP0vu6NEaFoC2HwRg=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.2.0/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/pty v1.1.8/go.mod h1:O1sed60cT9XZ5uDucP5qwvh+TE3NnUj51EiZO/lmSfw=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/lib/pq v1.0.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/lib/pq v1.1.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/lib/pq v1.2.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/lib/pq v1.10.2/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/lib/pq v1.10.9 h1:YXG7RB+JIjhP29X+OtkiDnYaXQwpS4JEWq7dtCCRUEw=\ngithub.com/lib/pq v1.10.9/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/magiconair/properties v1.8.0/go.mod h1:PppfXfuXeibc/6YijjN8zIbojt8czPbwD3XqdrwzmxQ=\ngithub.com/magiconair/properties v1.8.1/go.mod h1:PppfXfuXeibc/6YijjN8zIbojt8czPbwD3XqdrwzmxQ=\ngithub.com/magiconair/properties v1.8.7 h1:IeQXZAiQcpL9mgcAe1Nu6cX9LLw6ExEHKjN0VQdvPDY=\ngithub.com/magiconair/properties v1.8.7/go.mod h1:Dhd985XPs7jluiymwWYZ0G4Z61jb3vdS329zhj2hYo0=\ngithub.com/mattn/go-colorable v0.1.1/go.mod h1:FuOcm+DKB9mbwrcAfNl7/TZVBZ6rcnceauSikq3lYCQ=\ngithub.com/mattn/go-colorable v0.1.6/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\ngithub.com/mattn/go-colorable v0.1.9/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.5/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\ngithub.com/mattn/go-isatty v0.0.7/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\ngithub.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\ngithub.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.19 h1:JITubQf0MOLdlGRuRq+jtsDlekdYPia9ZFsB8h/APPA=\ngithub.com/mattn/go-isatty v0.0.19/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-runewidth v0.0.2/go.mod h1:LwmH8dsx7+W8Uxz3IHJYH5QSwggIsqBzpuz5H//U1FU=\ngithub.com/mattn/go-runewidth v0.0.3/go.mod h1:LwmH8dsx7+W8Uxz3IHJYH5QSwggIsqBzpuz5H//U1FU=\ngithub.com/mattn/go-runewidth v0.0.9/go.mod h1:H031xJmbD/WCDINGzjvQ9THkh0rPKHF+m2gUSrubnMI=\ngithub.com/mattn/go-runewidth v0.0.13 h1:lTGmDsbAYt5DmK6OnoV7EuIF1wEIFAcxld6ypU4OSgU=\ngithub.com/mattn/go-runewidth v0.0.13/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\ngithub.com/mattn/goveralls v0.0.11 h1:eJXea6R6IFlL1QMKNMzDvvHv/hwGrnvyig4N+0+XiMM=\ngithub.com/mattn/goveralls v0.0.11/go.mod h1:gU8SyhNswsJKchEV93xRQxX6X3Ei4PJdQk/6ZHvrvRk=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1 h1:4hp9jkHxhMHkqkrB3Ix0jegS5sx/RkqARlsWZ6pIwiU=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/mitchellh/colorstring v0.0.0-20190213212951-d06e56a500db h1:62I3jR2EmQ4l5rM/4FEfDWcRD+abF5XlKShorW5LRoQ=\ngithub.com/mitchellh/colorstring v0.0.0-20190213212951-d06e56a500db/go.mod h1:l0dey0ia/Uv7NcFFVbCLtqEBQbrT4OCwCSKTEv6enCw=\ngithub.com/mitchellh/copystructure v1.2.0 h1:vpKXTN4ewci03Vljg/q9QvCGUDttBOGBIa15WveJJGw=\ngithub.com/mitchellh/copystructure v1.2.0/go.mod h1:qLl+cE2AmVv+CoeAwDPye/v+N2HKCj9FbZEVFJRxO9s=\ngithub.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/mitchellh/go-wordwrap v0.0.0-20150314170334-ad45545899c7/go.mod h1:ZXFpozHsX6DPmq2I0TCekCxypsnAUbP2oI0UX1GXzOo=\ngithub.com/mitchellh/go-wordwrap v1.0.1 h1:TLuKupo69TCn6TQSyGxwI1EblZZEsQ0vMlAFQflz0v0=\ngithub.com/mitchellh/go-wordwrap v1.0.1/go.mod h1:R62XHJLzvMFRBbcrT7m7WgmE1eOyTSsCt+hzestvNj0=\ngithub.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/mapstructure v1.3.2/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=\ngithub.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/mitchellh/reflectwalk v1.0.2 h1:G2LzWKi524PWgd3mLHV8Y5k7s6XUvT0Gef6zxSIeXaQ=\ngithub.com/mitchellh/reflectwalk v1.0.2/go.mod h1:mSTlrgnPZtwu0c4WaC2kGObEpuNDbx0jmZXqmk4esnw=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/mwitkow/go-proto-validators v0.0.0-20180403085117-0950a7990007 h1:28i1IjGcx8AofiB4N3q5Yls55VEaitzuEPkFJEVgGkA=\ngithub.com/mwitkow/go-proto-validators v0.0.0-20180403085117-0950a7990007/go.mod h1:m2XC9Qq0AlmmVksL6FktJCdTYyLk7V3fKyp0sl1yWQo=\ngithub.com/nsf/termbox-go v0.0.0-20190121233118-02980233997d/go.mod h1:IuKpRQcYE1Tfu+oAQqaLisqDeXgjyyltCfsaoYN18NQ=\ngithub.com/nsf/termbox-go v1.1.1 h1:nksUPLCb73Q++DwbYUBEglYBRPZyoXJdrj5L+TkjyZY=\ngithub.com/nsf/termbox-go v1.1.1/go.mod h1:T0cTdVuOwf7pHQNtfhnEbzHbcNyCEcVU4YPpouCbVxo=\ngithub.com/o1egl/paseto v1.0.0 h1:bwpvPu2au176w4IBlhbyUv/S5VPptERIA99Oap5qUd0=\ngithub.com/o1egl/paseto v1.0.0/go.mod h1:5HxsZPmw/3RI2pAwGo1HhOOwSdvBpcuVzO7uDkm+CLU=\ngithub.com/oapi-codegen/runtime v1.0.0 h1:P4rqFX5fMFWqRzY9M/3YF9+aPSPPB06IzP2P7oOxrWo=\ngithub.com/oapi-codegen/runtime v1.0.0/go.mod h1:LmCUMQuPB4M/nLXilQXhHw+BLZdDb18B34OO356yJ/A=\ngithub.com/oklog/ulid v1.3.1/go.mod h1:CirwcVhetQ6Lv90oh/F+FBtV6XMibvdAFo93nm5qn4U=\ngithub.com/olekukonko/tablewriter v0.0.5 h1:P2Ga83D34wi1o9J6Wh1mRuqd4mF/x/lgBS7N7AbDhec=\ngithub.com/olekukonko/tablewriter v0.0.5/go.mod h1:hPp6KlRPjbx+hW8ykQs1w3UBbZlj6HuIJcUGPhkA7kY=\ngithub.com/opentracing/opentracing-go v1.1.0/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=\ngithub.com/ory/go-acc v0.2.8 h1:rOHHAPQjf0u7eHFGWpiXK+gIu/e0GRSJNr9pDukdNC4=\ngithub.com/ory/go-acc v0.2.8/go.mod h1:iCRZUdGb/7nqvSn8xWZkhfVrtXRZ9Wru2E5rabCjFPI=\ngithub.com/ory/viper v1.7.5 h1:+xVdq7SU3e1vNaCsk/ixsfxE4zylk1TJUiJrY647jUE=\ngithub.com/ory/viper v1.7.5/go.mod h1:ypOuyJmEUb3oENywQZRgeAMwqgOyDqwboO1tj3DjTaM=\ngithub.com/pborman/uuid v1.2.0 h1:J7Q5mO4ysT1dv8hyrUGHb9+ooztCXu1D8MY8DZYsu3g=\ngithub.com/pborman/uuid v1.2.0/go.mod h1:X/NO0urCmaxf9VXbdlT7C2Yzkj2IKimNn4k+gtPdI/k=\ngithub.com/pelletier/go-toml v1.2.0/go.mod h1:5z9KED0ma1S8pY6P1sdut58dfprrGBbd/94hg7ilaic=\ngithub.com/pelletier/go-toml v1.8.0/go.mod h1:D6yutnOGMveHEPV7VQOuvI/gXY61bv+9bAOTRnLElKs=\ngithub.com/pelletier/go-toml v1.9.5 h1:4yBQzkHv+7BHq2PQUZF3Mx0IYxG7LsP222s7Agd3ve8=\ngithub.com/pelletier/go-toml v1.9.5/go.mod h1:u1nR/EPcESfeI/szUZKdtJ0xRNbUoANCkoOuaOx1Y+c=\ngithub.com/pelletier/go-toml/v2 v2.0.9 h1:uH2qQXheeefCCkuBBSLi7jCiSmj3VRh2+Goq2N7Xxu0=\ngithub.com/pelletier/go-toml/v2 v2.0.9/go.mod h1:tJU2Z3ZkXwnxa4DPO899bsyIoywizdUvyaeZurnPPDc=\ngithub.com/peterh/liner v1.2.1 h1:O4BlKaq/LWu6VRWmol4ByWfzx6MfXc5Op5HETyIy5yg=\ngithub.com/peterh/liner v1.2.1/go.mod h1:CRroGNssyjTd/qIG2FyxByd2S8JEAZXBl4qUrZf8GS0=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/sftp v1.10.1/go.mod h1:lYOWFsE0bwd1+KfKJaKeuokY15vzFx25BLbzYYoAxZI=\ngithub.com/pmezard/go-difflib v0.0.0-20151028094244-d8ed2627bdf0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v0.9.3/go.mod h1:/TN21ttK/J9q6uSwhBd54HahCDft0ttaMvbicHlPoso=\ngithub.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=\ngithub.com/prometheus/client_golang v1.7.1/go.mod h1:PY5Wy2awLA44sXw4AOSfFBetzPP4j5+D6mVACh+pe2M=\ngithub.com/prometheus/client_golang v1.11.0/go.mod h1:Z6t4BnS23TR94PD6BsDNk8yVqroYurpAkEiz0P2BEV0=\ngithub.com/prometheus/client_golang v1.12.2 h1:51L9cDoUHVrXx4zWYlcLQIZ+d+VXHgqnYKkIuq4g/34=\ngithub.com/prometheus/client_golang v1.12.2/go.mod h1:3Z9XVyYiZYEO+YQWt3RD2R3jrbd179Rt297l4aS6nDY=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.2.0 h1:uq5h0d+GuxiXLJLNABMgp2qUWDPiLvgCzz2dUR+/W/M=\ngithub.com/prometheus/client_model v0.2.0/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/common v0.0.0-20181113130724-41aa239b4cce/go.mod h1:daVV7qP5qjZbuso7PdcryaAu0sAZbrN9i7WWcTMWvro=\ngithub.com/prometheus/common v0.4.0/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.10.0/go.mod h1:Tlit/dnDKsSWFlCLTWaA1cyBgKHSMdTB80sz/V91rCo=\ngithub.com/prometheus/common v0.26.0/go.mod h1:M7rCNAaPfAosfx8veZJCuw84e35h3Cfd9VFqTh1DIvc=\ngithub.com/prometheus/common v0.32.1 h1:hWIdL3N2HoUx3B8j3YN9mWor0qhY/NlEKZEaXxuIRh4=\ngithub.com/prometheus/common v0.32.1/go.mod h1:vu+V0TpY+O6vW9J44gczi3Ap/oXXR10b+M/gUGO4Hls=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.0-20190507164030-5867b95ac084/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.1.3/go.mod h1:lV6e/gmhEcM9IjHGsFOCxxuZ+z1YqCvr4OA4YeYWdaU=\ngithub.com/prometheus/procfs v0.6.0/go.mod h1:cz+aTbrPOrUb4q7XlbU9ygM+/jj0fzG6c1xBZuNvfVA=\ngithub.com/prometheus/procfs v0.7.3 h1:4jVXhlkAyzOScmCkXBTOLRLTz8EeU+eyjrwB/EPq0VU=\ngithub.com/prometheus/procfs v0.7.3/go.mod h1:cz+aTbrPOrUb4q7XlbU9ygM+/jj0fzG6c1xBZuNvfVA=\ngithub.com/prometheus/tsdb v0.7.1/go.mod h1:qhTCs0VvXwvX/y3TZrWD7rabWM+ijKTux40TwIPHuXU=\ngithub.com/pseudomuto/protoc-gen-doc v1.4.1 h1:aNTZq0dy0Pq2ag2v7bhNKFNgBBA8wMCoJSChhd7RciE=\ngithub.com/pseudomuto/protoc-gen-doc v1.4.1/go.mod h1:exDTOVwqpp30eV/EDPFLZy3Pwr2sn6hBC1WIYH/UbIg=\ngithub.com/pseudomuto/protokit v0.2.0/go.mod h1:2PdH30hxVHsup8KpBTOXTBeMVhJZVio3Q8ViKSAXT0Q=\ngithub.com/pseudomuto/protokit v0.2.1 h1:kCYpE3thoR6Esm0CUvd5xbrDTOZPvQPTDeyXpZfrJdk=\ngithub.com/pseudomuto/protokit v0.2.1/go.mod h1:gt7N5Rz2flBzYafvaxyIxMZC0TTF5jDZfRnw25hAAyo=\ngithub.com/rivo/uniseg v0.2.0 h1:S1pD9weZBuJdFmowNwbpi7BJ8TNftyUImj/0WQi72jY=\ngithub.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/robfig/cron v1.2.0/go.mod h1:JGuDeoQd7Z6yL4zQhZ3OPEVHB7fL6Ka6skscFHfmt2k=\ngithub.com/rogpeppe/fastuuid v0.0.0-20150106093220-6724a57986af/go.mod h1:XWv6SoW27p1b0cqNHllgS5HIMJraePCO15w5zCzIWYg=\ngithub.com/rogpeppe/fastuuid v1.2.0/go.mod h1:jVj6XXZzXRy/MSR5jhDC/2q6DgLz+nrA6LYCDYWNEvQ=\ngithub.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\ngithub.com/rogpeppe/go-internal v1.9.0 h1:73kH8U+JUqXU8lRuOHeVHaa/SZPifC7BkcraZVejAe8=\ngithub.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=\ngithub.com/rs/xid v1.2.1/go.mod h1:+uKXf+4Djp6Md1KODXJxgGQPKngRmWyn10oCKFzNHOQ=\ngithub.com/rs/xid v1.5.0 h1:mKX4bl4iPYJtEIxp6CYiUuLQ/8DYMoz0PUdtGgMFRVc=\ngithub.com/rs/xid v1.5.0/go.mod h1:trrq9SKmegXys3aeAKXMUTdJsYXVwGY3RLcfgqegfbg=\ngithub.com/rs/zerolog v1.13.0/go.mod h1:YbFCdg8HfsridGWAh22vktObvhZbQsZXe4/zB0OKkWU=\ngithub.com/rs/zerolog v1.15.0/go.mod h1:xYTKnLHcpfU2225ny5qZjxnj9NvkumZYjJHlAThCjNc=\ngithub.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/satori/go.uuid v1.2.0/go.mod h1:dA0hQrYB0VpLJoorglMZABFdXlWrHn1NEOzdhQKdks0=\ngithub.com/schollz/progressbar/v2 v2.15.0 h1:dVzHQ8fHRmtPjD3K10jT3Qgn/+H+92jhPrhmxIJfDz8=\ngithub.com/schollz/progressbar/v2 v2.15.0/go.mod h1:UdPq3prGkfQ7MOzZKlDRpYKcFqEMczbD7YmbPgpzKMI=\ngithub.com/shopspring/decimal v0.0.0-20180709203117-cd690d0c9e24/go.mod h1:M+9NzErvs504Cn4c5DxATwIqPbtswREoFCre64PpcG4=\ngithub.com/shopspring/decimal v1.2.0 h1:abSATXmQEYyShuxI4/vyW3tV1MrKAJzCZ/0zLUXYbsQ=\ngithub.com/shopspring/decimal v1.2.0/go.mod h1:DKyhrW/HYNuLGql+MJL6WCR6knT2jwCFRcu2hWCYk4o=\ngithub.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.4.1/go.mod h1:ni0Sbl8bgC9z8RoU9G6nDWqqs/fq4eDPysMBDgk/93Q=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/sirupsen/logrus v1.6.0/go.mod h1:7uNnSEd1DgxDLC74fIahvMZmmYsHGZGEOFrfsX/uA88=\ngithub.com/smartystreets/assertions v0.0.0-20180927180507-b2de0cb4f26d/go.mod h1:OnSkiWE9lh6wB0YB77sQom3nweQdgAjqCqsofrRNTgc=\ngithub.com/smartystreets/goconvey v1.6.4/go.mod h1:syvi0/a8iFYH4r/RixwvyeAJjdLS9QV7WQ/tjFTllLA=\ngithub.com/soheilhy/cmux v0.1.4/go.mod h1:IM3LyeVVIOuxMH7sFAkER9+bJ4dT7Ms6E4xg4kGIyLM=\ngithub.com/spaolacci/murmur3 v0.0.0-20180118202830-f09979ecbc72 h1:qLC7fQah7D6K1B0ujays3HV9gkFtllcxhzImRR7ArPQ=\ngithub.com/spaolacci/murmur3 v0.0.0-20180118202830-f09979ecbc72/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=\ngithub.com/spf13/afero v1.5.1 h1:VHu76Lk0LSP1x254maIu2bplkWpfBWI+B+6fdoZprcg=\ngithub.com/spf13/afero v1.5.1/go.mod h1:Ai8FlHk4v/PARR026UzYexafAt9roJ7LcLMAmO6Z93I=\ngithub.com/spf13/cast v1.3.0/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=\ngithub.com/spf13/cast v1.3.1/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=\ngithub.com/spf13/cast v1.5.0 h1:rj3WzYc11XZaIZMPKmwP96zkFEnnAmV8s6XbB2aY32w=\ngithub.com/spf13/cast v1.5.0/go.mod h1:SpXXQ5YoyJw6s3/6cMTQuxvgRl3PCJiyaX9p6b155UU=\ngithub.com/spf13/cobra v1.0.0/go.mod h1:/6GTrnGXV9HjY+aR4k0oJ5tcvakLuG6EuKReYlHNrgE=\ngithub.com/spf13/cobra v1.6.1 h1:o94oiPyS4KD1mPy2fmcYYHHfCxLqYjJOhGsCHFZtEzA=\ngithub.com/spf13/cobra v1.6.1/go.mod h1:IOw/AERYS7UzyrGinqmz6HLUo219MORXGxhbaJUqzrY=\ngithub.com/spf13/jwalterweatherman v1.0.0/go.mod h1:cQK4TGJAtQXfYWX+Ddv3mKDzgVb68N+wFjFa4jdeBTo=\ngithub.com/spf13/jwalterweatherman v1.1.0 h1:ue6voC5bR5F8YxI5S67j9i582FU4Qvo2bmqnqMYADFk=\ngithub.com/spf13/jwalterweatherman v1.1.0/go.mod h1:aNWZUN0dPAAO/Ljvb5BEdw96iTZ0EXowPYD95IqWIGo=\ngithub.com/spf13/pflag v1.0.3/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/spf13/viper v1.4.0/go.mod h1:PTJ7Z/lr49W6bUbkmS1V3by4uWynFiR9p7+dSq/yZzE=\ngithub.com/spf13/viper v1.15.0 h1:js3yy885G8xwJa6iOISGFwd+qlUo5AvyXb7CiihdtiU=\ngithub.com/spf13/viper v1.15.0/go.mod h1:fFcTBJxvhhzSJiZy8n+PeW6t8l+KeT/uTARa0jHOQLA=\ngithub.com/spkg/bom v0.0.0-20160624110644-59b7046e48ad/go.mod h1:qLr4V1qq6nMqFKkMo8ZTx3f+BZEkzsRUY10Xsm2mwU0=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.2.0/go.mod h1:qt09Ya8vawLte6SNmTgCsAVtYtaKzEcn8ATUoHMkEqE=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v0.0.0-20170130113145-4d4bfba8f1d1/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/subosito/gotenv v1.2.0/go.mod h1:N0PQaV/YGNqwC0u51sEeR/aUtSLEXKX9iv69rRypqCw=\ngithub.com/subosito/gotenv v1.4.2 h1:X1TuBLAMDFbaTAChgCBLu3DU3UPyELpnF2jjJ2cz/S8=\ngithub.com/subosito/gotenv v1.4.2/go.mod h1:ayKnFf/c6rvx/2iiLrJUk1e6plDbT3edrFNGqEflhK0=\ngithub.com/tmc/grpc-websocket-proxy v0.0.0-20190109142713-0ad062ec5ee5/go.mod h1:ncp9v5uamzpCO7NfCPTXjqaC+bZgJeR0sMTm6dMHP7U=\ngithub.com/ugorji/go v1.1.4/go.mod h1:uQMGLiO92mf5W77hV/PUCpI3pbzQx3CRekS0kk+RGrc=\ngithub.com/xiang90/probing v0.0.0-20190116061207-43a291ad63a2/go.mod h1:UETIi67q53MR2AWcXfiuqkDkRtnGDLqkBTpCHuJHxtU=\ngithub.com/xordataexchange/crypt v0.0.3-0.20170626215501-b2862e3d0a77/go.mod h1:aYKd//L2LvnjZzWKhF00oedf4jCCReLcmhLdhm1A27Q=\ngithub.com/yuin/goldmark v1.1.25/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.32/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/zenazn/goji v0.9.0/go.mod h1:7S9M489iMyHBNxwZnk9/EHS098H4/F6TATF2mIxtB1Q=\ngo.etcd.io/bbolt v1.3.2/go.mod h1:IbVyRI1SCnLcuJnV2u8VeU0CEYM7e686BmAb1XKL+uU=\ngo.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=\ngo.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=\ngo.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.3/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.4/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.uber.org/atomic v1.3.2/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=\ngo.uber.org/atomic v1.4.0/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=\ngo.uber.org/atomic v1.5.0/go.mod h1:sABNBOSYdrvTF6hTgEIbc7YasKWGhgEQZyfxyTvoXHQ=\ngo.uber.org/atomic v1.6.0/go.mod h1:sABNBOSYdrvTF6hTgEIbc7YasKWGhgEQZyfxyTvoXHQ=\ngo.uber.org/multierr v1.1.0/go.mod h1:wR5kodmAFQ0UK8QlbwjlSNy0Z68gJhDJUG5sjR94q/0=\ngo.uber.org/multierr v1.3.0/go.mod h1:VgVr7evmIr6uPjLBxg28wmKNXyqE9akIJ5XnfpiKl+4=\ngo.uber.org/multierr v1.5.0/go.mod h1:FeouvMocqHpRaaGuG9EjoKcStLC43Zu/fmqdUMPcKYU=\ngo.uber.org/tools v0.0.0-20190618225709-2cfd321de3ee/go.mod h1:vJERXedbb3MVM5f9Ejo0C68/HhF8uaILCdgjnY+goOA=\ngo.uber.org/zap v1.9.1/go.mod h1:vwi/ZaCAaUcBkycHslxD9B2zi4UTXhF60s6SWpuDF0Q=\ngo.uber.org/zap v1.10.0/go.mod h1:vwi/ZaCAaUcBkycHslxD9B2zi4UTXhF60s6SWpuDF0Q=\ngo.uber.org/zap v1.13.0/go.mod h1:zwrFLgMcdUuIBviXEYEH1YKNaOBnKXsx2IPda5bBwHM=\ngolang.org/x/crypto v0.0.0-20180501155221-613d6eafa307/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20181025213731-e84da0312774/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190411191339-88737f569e3a/go.mod h1:WFFai1msRO1wXaEeE5yQxYXgSfI8pQAWXbQop6sCtWE=\ngolang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190820162420-60c769a6c586/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200510223506-06a226fb4e37/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20201203163018-be400aefbc4c/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=\ngolang.org/x/crypto v0.0.0-20210616213533-5ff15b29337e/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.17.0 h1:r8bRNjWL3GshPW3gkd+RpvzWrZAwPS49OmTGZ/uhM4k=\ngolang.org/x/crypto v0.17.0/go.mod h1:gCAAfMLgwOJRpTjQ2zCCt2OcSfYMTeZVSRtQlPC7Nq4=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=\ngolang.org/x/exp v0.0.0-20190829153037-c13cbed26979/go.mod h1:86+5VVa7VpoJ4kLfm080zCjGlMRFzhUhsZKEZO7MGek=\ngolang.org/x/exp v0.0.0-20191030013958-a1ab85dbe136/go.mod h1:JXzH8nQsPlswgeRAPE3MuO9GYsAcnJvJ4vnMwN/5qkY=\ngolang.org/x/exp v0.0.0-20191129062945-2f5052295587/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20191227195350-da58074b4299/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200119233911-0405dc783f0a/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200207192155-f17229e696bd/go.mod h1:J/WKrq2StrnmMY6+EHIKF9dgMWnmCNThgcyBT1FY9mM=\ngolang.org/x/exp v0.0.0-20200224162631-6cc2880d07d6/go.mod h1:3jZMyOhIsHpP37uCMkUooju7aAi5cS1Q23tOzKc+0MU=\ngolang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\ngolang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190409202823-959b441ac422/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190909230951-414d861bb4ac/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20191125180803-fdd1cda4f05f/go.mod h1:5qLYkcX4OjUUV8bRuDixDT3tpyyb+LUpUlRWLxfhWrs=\ngolang.org/x/lint v0.0.0-20200130185559-910be7a94367/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20200302205851-738671d3881b/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=\ngolang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=\ngolang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=\ngolang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.1.1-0.20191107180719-034126e5016b/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.9.0 h1:KENHtAZL2y3NLMYZeHY9DW8HW8V+kQyJsY/V9JlKvCs=\ngolang.org/x/mod v0.9.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181220203305-927f97764cc3/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190501004415-9ce7a6920f09/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190503192946-f4e77d36d62c/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190522155817-f3200d17e092/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190628185345-da137c7871d7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190724013045-ca1201d0de80/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190813141303-74dc4d7220e7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20191209160850-c0dbc17a3553/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200114155413-6afb5195e5aa/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200222125558-5a598a2470a0/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200301022130-244492dfa37a/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200324143707-d3edc9973b7e/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200501053045-e0ff5e5a1de5/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200506145744-7e3656a0809f/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200513185701-a91f0712d120/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200520182314-0ba52f642ac2/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200625001655-4c5254603344/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200707034311-ab3426394381/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210525063256-abc453219eb5/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.17.0 h1:pVaXccu2ozPjCXewfr1S7xza/zcXTity9cCdXQYSjIM=\ngolang.org/x/net v0.17.0/go.mod h1:NxSsAGuq816PNPmqtQdLE42eU2Fs7NoRIZrHJAlaCOE=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20191202225959-858c2ad4c8b6/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20210514164344-f6687ab2804c/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190412183630-56d357773e84/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200317015054-43a5402ce75a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201207232520-09787c993a3a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181026203630-95b1ffbd15a5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181107165924-66b7b1311ac8/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190403152447-81d4e9dc473e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190502145724-3ef323f4f1fd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190507160741-ecd444e8653b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190606165138-5da285871e9c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190624142023-c5567b49c5d0/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190726091711-fc99dfbffb4e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190813064441-fde4db37ae7a/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191001151750-bb3f8db39f24/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191005200804-aed5e4c7ecf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191228213918-04cbcbbfeed8/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200106162015-b016eb3dc98e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200113162924-86b910548bc1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200124204421-9fbb57f87de9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200212091648-12a6c2dcc1e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200302150141-5c8b2ff67527/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200331124033-c3d80250170d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200413165638-669c56c373c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200501052902-10377860bb8e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200511232937-7e40ca221e25/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200515095857-1151b9dac4a9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200523222454-059865788121/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200615200032-f1bc736245b1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200625212154-ddb9806d33ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200803210538-64077c9b5642/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210603081109-ebe580a85c40/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220114195835-da31bd327af9/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220319134239-a9b59b0215f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220908164124-27713097b956/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.15.0 h1:h48lPFYpsTvQJZF4EKyI4aLHaev3CxivZmv7yZig9pc=\ngolang.org/x/sys v0.15.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201117132131-f5c789dd3221/go.mod h1:Nr5EML6q2oocZ2LXRh80K7BxOlk5/8JxuGnuhpl+muw=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.15.0 h1:y/Oo/a/q3IXu26lQgl04j/gjuBDOBlx7X6Om1j2CPW4=\ngolang.org/x/term v0.15.0/go.mod h1:BDl952bC7+uMoWR75FIrCDx79TPU9oHkTZ9yRbYOrX0=\ngolang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.14.0 h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/tools v0.0.0-20180221164845-07fd8470d635/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190328211700-ab21143f2384/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190425150028-36563e24a262/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190425163242-31fd60d6bfdc/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190506145303-2d16b83fe98c/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190606124116-d0a3d012864b/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190628153133-6cdbf07be9d0/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190816200558-6889da9d5479/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20190823170909-c4a336ef6a2f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20190911174233-4f2ddba30aff/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191029041327-9cc4af7d6b2c/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191029190741-b9c20aec41a5/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191113191852-77e3bb0ad9e7/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191115202509-3a792d9c32b2/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191125144606-a911d9008d1f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191130070609-6e064ea0cf2d/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191216173652-a0e659d51361/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20191227053925-7b8e75db28f4/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200103221440-774c71fcf114/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200117161641-43d50277825c/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200122220014-bf1340f18c4a/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200204074204-1cc6d1ef6c74/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200207183749-b753a1ba74fa/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200212150539-ea181f53ac56/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200224181240-023911ca70b2/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200227222343-706bc42d1f0d/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200304193943-95d2e580d8eb/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200312045724-11d5b4c81c7d/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200331025713-a30bf2db82d4/go.mod h1:Sl4aGygMT6LrqrWclx+PTx3U+LnKx/seiNR+3G19Ar8=\ngolang.org/x/tools v0.0.0-20200501065659-ab2804fb9c9d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200512131952-2bc93b1c0c88/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200515010526-7d3b6ebf133d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200618134242-20370b0cb4b2/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200729194436-6467de6f59a7/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200804011535-6c149bb5ef0d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200825202427-b303f430e36d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.7.0 h1:W4OVu8VVOaIO0yzWMNdepAulS7YfoS3Zabrm8DOXXU4=\ngolang.org/x/tools v0.7.0/go.mod h1:4pg6aUX35JBAogB10C9AtvVL+qowtN4pT3CGSQex14s=\ngolang.org/x/tools/cmd/cover v0.1.0-deprecated h1:Rwy+mWYz6loAF+LnG1jHG/JWMHRMMC2/1XX3Ejkx9lA=\ngolang.org/x/tools/cmd/cover v0.1.0-deprecated/go.mod h1:hMDiIvlpN1NoVgmjLjUJE9tMHyxHjFX7RuQ+rW12mSA=\ngolang.org/x/xerrors v0.0.0-20190410155217-1f06c39b4373/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20190513163551-3ee3066db522/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=\ngoogle.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=\ngoogle.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.9.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.13.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.14.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.15.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.17.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.18.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.19.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.20.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.22.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.24.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.28.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.29.0/go.mod h1:Lcubydp8VUV7KeIHD9z2Bys/sm/vGKnG1UHuDBSrHWM=\ngoogle.golang.org/api v0.30.0/go.mod h1:QGmEvQ87FHZNiUVJkT14jQNYJ4ZJjdRF23ZXz5138Fc=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.6.1/go.mod h1:i06prIuMbXzDqacNJfV5OdTW448YApPu5ww/cMBSeb0=\ngoogle.golang.org/appengine v1.6.5/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.6/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20181107211654-5fc9ac540362/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190801165951-fa694d86fc64/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190911173649-1774047e7e51/go.mod h1:IbNlFCBrqXvoKpeg0TB2l7cyZUmoaFKYIwrEpbDKLA8=\ngoogle.golang.org/genproto v0.0.0-20191108220845-16a3f7862a1a/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191115194625-c23dd37a84c9/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191216164720-4f79533eabd1/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191230161307-f3c370f40bfb/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200115191322-ca5a22157cba/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200122232147-0452cf42e150/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200204135345-fa8e72b47b90/go.mod h1:GmwEX6Z4W5gMy59cAlVYjN9JhxgbQH6Gn+gFDQe2lzA=\ngoogle.golang.org/genproto v0.0.0-20200212174721-66ed5ce911ce/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200224152610-e50cd9704f63/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200228133532-8c2c7df3a383/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200305110556-506484158171/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200312145019-da6875a35672/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200331122359-1ee6d9798940/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200423170343-7949de9c1215/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200430143042-b979b6f78d84/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200511104702-f5ebc3bea380/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200513103714-09dca8ec2884/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200515170657-fc4c6c6a6587/go.mod h1:YsZOwe1myG/8QRHRsmBRE1LrgQY60beZKjly0O1fX9U=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20200618031413-b414f8b61790/go.mod h1:jDfRM7FcilCzHH/e9qn6dsT145K34l5v+OpcnNgKAAA=\ngoogle.golang.org/genproto v0.0.0-20200729003335-053ba62fc06f/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200804131852-c06518451d9c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200825200019-8632dd797987/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20230803162519-f966b187b2e5 h1:L6iMMGrtzgHsWofoFcihmDEMYeDR9KN/ThbPWGrh++g=\ngoogle.golang.org/genproto v0.0.0-20230803162519-f966b187b2e5/go.mod h1:oH/ZOT02u4kWEp7oYBGYFFkCdKS/uYR9Z7+0/xuuFp8=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20230822172742-b8732ec3820d h1:DoPTO70H+bcDXcd39vOqb2viZxgqeBeSGtZ55yZU4/Q=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20230822172742-b8732ec3820d/go.mod h1:KjSP20unUpOx5kyQUFa7k4OJg0qeJ7DEZflGDu2p6Bk=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20230822172742-b8732ec3820d h1:uvYuEyMHKNt+lT4K3bN6fGswmK8qSvcreM3BwjDh+y4=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20230822172742-b8732ec3820d/go.mod h1:+Bk1OCOj40wS2hwAMA+aCW9ypzm63QTBBHp6lQ3p+9M=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=\ngoogle.golang.org/grpc v1.21.0/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=\ngoogle.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.1/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.28.0/go.mod h1:rpkK4SK4GF4Ach/+MFLZUBavHOvF2JJB5uozKKal+60=\ngoogle.golang.org/grpc v1.29.1/go.mod h1:itym6AZVZYACWQqET3MqgPpjcuV5QH3BxFS3IjizoKk=\ngoogle.golang.org/grpc v1.30.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.31.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.33.1/go.mod h1:fr5YgcSWrqhRRxogOsw7RzIpsmvOZ6IcH4kBYTpR3n0=\ngoogle.golang.org/grpc v1.57.1 h1:upNTNqv0ES+2ZOOqACwVtS3Il8M12/+Hz41RCPzAjQg=\ngoogle.golang.org/grpc v1.57.1/go.mod h1:Sd+9RMTACXwmub0zcNY2c4arhtrbBYD1AUHI/dt16Mo=\ngoogle.golang.org/grpc/cmd/protoc-gen-go-grpc v1.1.0 h1:M1YKkFIboKNieVO5DLUEVzQfGwJD30Nv2jfUgzb5UcE=\ngoogle.golang.org/grpc/cmd/protoc-gen-go-grpc v1.1.0/go.mod h1:6Kw0yEErY5E/yWrBtf03jp27GLLJujG4z/JK95pnjjw=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.24.0/go.mod h1:r/3tXBNzIEhYS9I1OUVjXDlt8tc493IdKGjtUeSXeh4=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.32.0 h1:pPC6BG5ex8PDFnkbrGU3EixyhKcQ2aDuBS36lqK/C7I=\ngoogle.golang.org/protobuf v1.32.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/inconshreveable/log15.v2 v2.0.0-20180818164646-67afb5ed74ec/go.mod h1:aPpfJ7XW+gOuirDoZ8gHhLh3kZ1B08FtV2bbmy7Jv3s=\ngopkg.in/ini.v1 v1.51.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/ini.v1 v1.57.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/ini.v1 v1.67.0 h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=\ngopkg.in/ini.v1 v1.67.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/resty.v1 v1.12.0/go.mod h1:mDo4pnntr5jdWRML875a/NmxYqAlA73dVijT2AXvQQo=\ngopkg.in/yaml.v2 v2.0.0-20170812160011-eb3733d160e7/go.mod h1:JAlM8MvJe8wmxCU4Bli9HhUf9+ttbYbLASfIpnQbh74=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.3/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.5/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190418001031-e561f6794a2a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=\nhonnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nhonnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nrsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=\nrsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=\nrsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA=\n"
        },
        {
          "name": "helm",
          "type": "tree",
          "content": null
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "sonar-project.properties",
          "type": "blob",
          "size": 0.392578125,
          "content": "sonar.projectKey=codenotary_immudb\nsonar.projectName=immudb\nsonar.projectVersion=1.1.0\nsonar.organization=codenotary\n\n\nsonar.sources=.\nsonar.exclusions=**/*_test.go,**/*test,**/*schema.pb*,**/*schema_grpc.pb*,**/*schemav2.pb*,**/*schemav2_grpc.pb*,**/statik.go,test/objectstorage_tests/**\n\nsonar.tests=.\nsonar.test.inclusions=**/*_test.go\nsonar.go.coverage.reportPaths=coverage.out\n\nsonar.verbose=true\n"
        },
        {
          "name": "swagger",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools.go",
          "type": "blob",
          "size": 0.55078125,
          "content": "//go:build tools\n\npackage tools\n\nimport (\n\t_ \"github.com/golang/protobuf/proto\"\n\t_ \"github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway\"\n\t_ \"github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger\"\n\t_ \"github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2\"\n\t_ \"github.com/mattn/goveralls\"\n\t_ \"github.com/ory/go-acc\"\n\t_ \"github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc\"\n\t_ \"golang.org/x/tools/cmd/cover\"\n\t_ \"google.golang.org/grpc\"\n\t_ \"google.golang.org/grpc/cmd/protoc-gen-go-grpc\"\n\t_ \"google.golang.org/protobuf/cmd/protoc-gen-go\"\n)\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "webconsole",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}