{
  "metadata": {
    "timestamp": 1736567452893,
    "page": 58,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rkt/rkt",
      "stars": 8820,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.17578125,
          "content": "*~\n\n.cache\n.vagrant\n*.pem\n/.config.args\n/Makefile\n/acbuild\n/autom4te.cache\n/build-rir*\n/build-rkt*\n/config.log\n/config.status\n/configure\n/dist/bash_completion\n/dist/manpages\n/tags\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.994140625,
          "content": "# Configures rkt tests at Travis CI (https://travis-ci.org).\n\nlanguage: go\nsudo: required\ndist: trusty\n\ngo:\n  - 1.6.x\n  - 1.7.x\n  - 1.8.x\n  - 1.9.x\n\nenv:\n  - TARGET=amd64 GIMME_ARCH=amd64\n  - TARGET=arm64 GIMME_ARCH=arm64 GIMME_CGO_ENABLED=1\n\naddons:\n  apt:\n    packages:\n    - cpio\n    - realpath\n    - squashfs-tools\n    - build-essential\n    - libacl1-dev\n    - libsystemd-journal-dev\n    - gcc-aarch64-linux-gnu\n    - libc6-dev-arm64-cross\n\ninstall:\n  -\n\n# Build host and fly to ensure we build stage1 init. We don't build everything\n# to avoid downloading large images.\nscript:\n  - sh autogen.sh\n\n  - test \"${TARGET}\" = \"amd64\"\n    && export CONFIGURE_ARCH=\"x86_64\"\n    && export CONFIGURE_MAKE=\"unit-check manpages bash-completion\"\n    || true\n\n  - test \"${TARGET}\" = \"arm64\"\n    && export CONFIGURE_ARCH=\"aarch64-linux-gnu\"\n    && export CONFIGURE_MAKE=\"V=2\"\n    || true\n\n  - sh configure\n        --host=$CONFIGURE_ARCH\n        --with-stage1-flavors=host,fly\n        --enable-tpm=auto\n\n  - make $CONFIGURE_MAKE\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 128.185546875,
          "content": "## 1.30.0\n\nThis release includes some small command line tweaks and adds support for CRI logging in iottymux which is required by rktlet.\nIt also fixes a number of bugs, adds a lot of new documentation, and updates some dependencies.\n\n### New features\n\n- status: added read from uuid-file ([#3860](https://github.com/rkt/rkt/pull/3860)).\n- stage0/run: relax '--hosts-entry' parser ([#3833](https://github.com/rkt/rkt/pull/3833)).\n- iottymux: store logs for kubelet in the appropriate location ([#3798](https://github.com/rkt/rkt/pull/3798)). This change is made for rktlet. iottymux will store the logs directly in the CRI format.\n- rkt: add AWS auth headerer support to `rkt config` ([#3910](https://github.com/rkt/rkt/pull/3910)).\n\n### Bugfixes\n\n- kvm: solve certain routing issues by using the same default bridge as CNI ([#3905](https://github.com/rkt/rkt/pull/3905)).\n- networking/portfwd: fix compare routeLocalnetValue ([#3897](https://github.com/rkt/rkt/pull/3897)).\n- list: add ip of non-running pods to status output ([#3857](https://github.com/rkt/rkt/pull/3857)).\n- stage1: execute pre-start/post-stop hooks as privileged ([#3844](https://github.com/rkt/rkt/pull/3844)). Even if we run the container as an unprivileged user.\n- stage1-fly/run: allow non absolute commands to be run ([#3845](https://github.com/rkt/rkt/pull/3845)).\n- rkt: prevent skipping some images in image gc ([#3858](https://github.com/rkt/rkt/pull/3858)).\n- rkt: skip parsing in case of an empty string ([#3822](https://github.com/rkt/rkt/pull/3822)). Fix issue where `rkt app add` fails with an error message like `must give only one app`, even when only one app name is given.\n\n### Build system\n\n- scripts: Add libfdt to install deps ([#3834](https://github.com/rkt/rkt/pull/3834)). libfdt-dev is needed when building kernels for architectures that support a device tree.\n- makelib: Fix go-find-directories symlink problem ([#3824](https://github.com/rkt/rkt/pull/3824)).\n- scripts: adding missing dependecies to debian dependency installer ([#3829](https://github.com/rkt/rkt/pull/3829)).\n- scripts/build-pkgs: use RPM file dependency for shadow tools ([#3904](https://github.com/rkt/rkt/pull/3904)).\n\n### Other changes\n\n- Lots of [documentation updates](https://github.com/rkt/rkt/pulls?q=is%3Apr+label%3Akind%2Fdocumentation++milestone%3Av1.30.0).\n- selinux: Update to latest ([#3818](https://github.com/rkt/rkt/pull/3818)).\n- travis: update go versions ([#3821](https://github.com/rkt/rkt/pull/3821)).\n- vendor: bump docker2aci to v0.17.1 ([#3835](https://github.com/rkt/rkt/pull/3835)). It fixes an image pulling bug for some images in GCR.\n- Fixes all the misspell ([#3870](https://github.com/rkt/rkt/pull/3870)).\n- stage1/usr_from_coreos: add new image signing subkey 0638EB2F ([#3902](https://github.com/rkt/rkt/pull/3902)).\n- tests: Use semaphore install-package ([#3827](https://github.com/rkt/rkt/pull/3827)).\n- tests: Add verbose flag to build-and-run-tests.sh ([#3819](https://github.com/rkt/rkt/pull/3819)).\n\n## 1.29.0\n\nThis release contains a number of bugfixes, new features like the ability to share the host IPC namespace, dependency updates, and build system improvements.\n\n### Bugfixes\n\n- app/add: Use the image name as a default name for app ([#3802](https://github.com/rkt/rkt/pull/3802)). Make the `--name` flag optional like stated in the help message.\n- stage1/init: activate systemd-journal-flush.service ([#3807](https://github.com/rkt/rkt/pull/3807)). It's needed to make systemd-journald write to /var/log/journal instead of /run/log/journal.\n- stage0/gc: try to avoid double overlay mounts ([#3806](https://github.com/rkt/rkt/pull/3806)). Before Linux 4.13, it used to be possible to perform double overlayfs mounts and now it's not, handle this case.\n- api: add CreatedAt to v1.Pod ([#3797](https://github.com/rkt/rkt/pull/3797)). It might happen that the pod is created but we can't get its start time so we add a CreatedAt field to the API.\n- lib: don't error out if we can't get the app exit code ([#3800](https://github.com/rkt/rkt/pull/3800)). This can happen if the pod dies but we don't have time to register the app exit code.\n- image: set the header instead of adding it ([#3796](https://github.com/rkt/rkt/pull/3796)). The go [http/client](https://golang.org/doc/go1.8#net_http) changes its behavior for redirect and header's copy since the go 1.8:\n- lib/app: check in upper/ if the pod uses overlay ([#3791](https://github.com/rkt/rkt/pull/3791)). Getting creation/start time and status of applications will fail for pods using overlay if stage1 was unmounted (e.g. when rebooting).\n- stage1: handle docker group semantics ([#3792](https://github.com/rkt/rkt/pull/3792)). Docker uses the UID as GID if you only specify the \"user\".\n- stage1: support hybrid cgroup hierarchy ([#3784](https://github.com/rkt/rkt/pull/3784)). systemd introduced the hybrid cgroup hierarchy in v233, which was breaking the host flavor of rkt.\n- pkg/keystore: ensure correct permissions on path creation ([#3780](https://github.com/rkt/rkt/pull/3780)). Allow writing to `/etc/rkt/trustedkeys` as a user in the rkt group in systems with restrictive umask.\n- networking: ensure the netns directory is mounted ([#3761](https://github.com/rkt/rkt/pull/3761)). Allows using rktnetes and rkt on the same host.\n- stage1: fix systemd version fmt in error message ([#3767](https://github.com/rkt/rkt/pull/3767)). The previous version caused cryptic error messages.\n\n### New features and UX changes\n\n- app/add: Allow to define annotations for app from CLI ([#3814](https://github.com/rkt/rkt/pull/3814)).\n- app/sandbox: Allow to define annotations for sandbox from CLI ([#3816](https://github.com/rkt/rkt/pull/3816)).\n- stage0,rkt: don't require the pod to be running to remove apps ([#3799](https://github.com/rkt/rkt/pull/3799)).\n- stage1: enable host IPC namespace ([#3787](https://github.com/rkt/rkt/pull/3787)). rkt normally creates a new IPC namespace for the pod. In order to stay in the host IPC namespace, a new option `--ipc=` was added.\n- rkt: bash completion code ([#3774](https://github.com/rkt/rkt/pull/3774)). This patch provides an implementation of the command used to generate completion code for the bash shell.\n\n### Other changes\n\n- vendor: bump docker2aci to v0.17.0 ([#3810](https://github.com/rkt/rkt/pull/3810)).\n- vendor: update pborman/uuid to v1.1 ([#3809](https://github.com/rkt/rkt/pull/3809)).\n- vendor: bump appc/spec to v0.8.11 ([#3803](https://github.com/rkt/rkt/pull/3803)).\n- rkt\\_seccomp\\_test: Fix arm64 stat tests ([#3804](https://github.com/rkt/rkt/pull/3804)).\n- build: sort stage1 manifest files ([#3808](https://github.com/rkt/rkt/pull/3808)). To ease maintenance.\n\n### Build system\n\n- build/stage1: support local systemd source for offline builds ([#3746](https://github.com/rkt/rkt/pull/3746)).\n- RPM/deb package can upgrade even if running pods ([#3766](https://github.com/rkt/rkt/pull/3766)).\n- src flavor: copy the real libnss\\_files.so.2 file from the host ([#3764](https://github.com/rkt/rkt/pull/3764)). It was copying a symbolic link instead.\n\n## 1.28.1\n\nThis is a minor bugfix release. It does not contain any changes to the rkt code, but it updates dependencies and runtime versions for bugfixes:\n\n- vendor: update go-systemd to v15 ([#3759](https://github.com/rkt/rkt/pull/3759)). rkt stopped working when running in a service with systemd v234. This update fixes it.\n- scripts: update rkt-builder version to 1.3.0 ([#3754](https://github.com/rkt/rkt/pull/3754)). This updates the default Go runtime to 1.8, fixing [#3738](https://github.com/rkt/rkt/issues/3738).\n\n\n## 1.28.0\n\nThis release contains changes to the behavior of `rkt run`, `rkt status`, and `rkt fly` to make them more consistent. Two of them need particular attention:\n\n- `rkt status` can now omit the pid field when non-existent. Use `--wait[-ready]` to ensure a pid will be available.\n- the `default[-restricted]` network is not added by default when a custom network is specified with `--net`.\n\nThere are also some improvements on documentation and tests working on arm64.\n\n### New features and UX changes\n\n- stage0/status: fix failure when systemd never runs in stage1 ([#3713](https://github.com/rkt/rkt/pull/3713)). This changes the behavior of `rkt status` when a PID is not available: instead of crashing, it will now omit the pid field. Users that need to read the PID shortly after an invocation of `rkt run` should now use the `--wait[-ready]` flag explicitly.\n- **BREAKING** network: do not automatically add `default*` networks when custom ones are specified ([#3685](https://github.com/rkt/rkt/pull/3685)).\n- stage1/fly: preserve environment between run and enter ([#3712](https://github.com/rkt/rkt/pull/3712)). Fly run now writes the app env file, and `fly enter` reads it.\n- stage1/fly: make run/enter honour uid/gid/suppGids ([#3717](https://github.com/rkt/rkt/pull/3717)). Refactored common functionality out of run.\n\n### Bugfixes\n\n- stage1/init/units: keep journald running while apps are shutting down ([#3726](https://github.com/rkt/rkt/pull/3726)). This prevents a race when apps are writing to their stdout/err (and output is being sent to stage1's journal) while shutting down. If journald terminates before the apps finish shutting down, their output will be lost.\n- tests: get functional tests working on arm64 ([#3737](https://github.com/rkt/rkt/pull/3737)). Various arch fixups to get `make check` with a coreos stage1 working on arm64 machines.\n- Fix `--user --group` on arm64 ([#3736](https://github.com/rkt/rkt/pull/3736)). Fixes issue https://github.com/rkt/rkt/issues/3714 (`rkt run --user` fails on arm64).\n\n### Other changes\n\n- docs: update CLI flags in run.md ([#3748](https://github.com/rkt/rkt/pull/3748)). Also added rkt-run options present in rkt 1.27.0 but not present in the run.md markdown.  The entries in markdown have been sorted.\n- tests/net: skip TestNetCustomBridge on semaphore ([#3740](https://github.com/rkt/rkt/pull/3740)). Reference https://github.com/rkt/rkt/issues/3739\n- doc: mention external stage1s ([#3723](https://github.com/rkt/rkt/pull/3723)). This was discussed on:\nhttps://github.com/rkt/rkt/pull/3645#issuecomment-296865635\n- rkt/pubkeys: print debug logs on discovery errors ([#3705](https://github.com/rkt/rkt/pull/3705)). Thisreorders log-printing and error-returning when pubkeys discovery\nfails, in order to print useful debugging information on error.\n- docs: correct rkt pronunciation ([#3674](https://github.com/rkt/rkt/pull/3674)). `rkt` has an icon of a rocket but previously the official pronunciation was \"rock-it\" which is incompatible with the logo. This change fixes that.\n- stage0: fix message formatting errors, stale forward-vars ([#3722](https://github.com/rkt/rkt/pull/3722)).\n\n\n## 1.27.0\n\nThis minor release contains bugfixes and other improvements related to the tests and the documentation.\n\n## New Features\n- stage1/kvm: add arm64 build ([#3690](https://github.com/rkt/rkt/pull/3690)).\n\n## Bugfixes\n- stage0: list|status --format=json panics: RuntimeApp.Mounts.AppVolume is optional ([#3699](https://github.com/rkt/rkt/pull/3699)). When it is nil, the Volume info at the Pod level (with the same name) should be used. Without this patch `rkt list --format=json` panics on a nil pointer when Apps reference Volumes from the Pod level.\n- imagestore: Fix sql resource leaks ([#3682](https://github.com/rkt/rkt/pull/3682)). When using sql queries the rows iterator needs to be closed if the entire query  result is not iterated over. Failure to close the iterator results in resource leakage.\n\n## Other changes\n- networking: change the default-restricted subnet ([#3718](https://github.com/rkt/rkt/pull/3718)). Previously, we were using 172.17/16, which conflicts with the default\nDocker networking. Change it to 172.31/16.\n- scripts/pkg: improved detection of active mounts ([#3710](https://github.com/rkt/rkt/pull/3710)). On systems which have /var/lib/rkt as a separate partition, the active mount detection in before-remove needs to not get confused by the presence of /var/lib/rkt itself as a mount.  Therefore a longer path is used for active mount detection.\n- stage1/usr_from_coreos: add new image signing sub-key EF4B4ED9 ([#3686](https://github.com/rkt/rkt/pull/3686)). See coreos/init#236.\n- scripts: skip nonexistent stage1 images when packaging ([#3687](https://github.com/rkt/rkt/pull/3687)). Not all builds will generate all stage1 images. It depends on what `./configure` flags (`--with-stage1-flavors`) were used.\n- tests: Only run race test on supported arch ([#3684](https://github.com/rkt/rkt/pull/3684)). Fixes build errors like these when run on non amd64 machines:\n- functional test: Fix manifest arch error ([#3681](https://github.com/rkt/rkt/pull/3681)). The manifest contains values for the ACI arch and OS, not the go language values.\n- Documentation updates: [#3680](https://github.com/rkt/rkt/pull/3680), [#3679](https://github.com/rkt/rkt/pull/3679), [#3700](https://github.com/rkt/rkt/pull/3700), [#3709](https://github.com/rkt/rkt/pull/3709)\n\n## 1.26.0\n\nThis minor release contains bugfixes and other improvements. It also adds better support for the arm architecture to rkt, so that you can now fetch images via autodiscovery and have the correct seccomp whitelist to run them. Also notable is the new possibilty to pass extra kernel parameters to kvm, and last but not least a significant prepare/run speedup in stage0. This also introduces stricter validation on volume names, now rejecting duplicate ones.\n\n## New Features\n- stage1: improve duplicate mount-volume detection ([#3666](https://github.com/rkt/rkt/pull/3666)). Breaking change: volumes with duplicate names are now rejected.\n- stage0/{run,prepare}: remove ondisk verification ([#3623](https://github.com/rkt/rkt/pull/3623)). For backwards compatibility, specifying 'insecure-options=ondisk' will still run without error, however it will also not do anything.\n- kvm/qemu: add extra kernel parameters ([#3644](https://github.com/rkt/rkt/pull/3644)).\n\n## Bugfixes\n- seccomp: add arch-specific syscalls on ARM ([#3636](https://github.com/rkt/rkt/pull/3636)).\n- fetch: use proper appc os/arch labels ([#3621](https://github.com/rkt/rkt/pull/3621)).\n- tests/caps: skip if overlayfs support is missing ([#3670](https://github.com/rkt/rkt/pull/3670)).\n- build/stage1: transfer user xattr data ([#3665](https://github.com/rkt/rkt/pull/3665)).\n- stage1: include <sys/sysmacros.h> for makedev function ([#3604](https://github.com/rkt/rkt/pull/3604)).\n\n## Other changes\n- Add code of conduct ([#3661](https://github.com/rkt/rkt/pull/3661)). Required by CNCF.\n- rkt list|status: app state info (i.e. exit codes) in --format=json ([#3638](https://github.com/rkt/rkt/pull/3638)).\n- integrations: add mesos ([#3624](https://github.com/rkt/rkt/pull/3624)).\n- Documentation: add container linux and tectonic as production users ([#3618](https://github.com/rkt/rkt/pull/3618)).\n- Documentation: add Gentoo to the list of distributions that have rkt ([#3613](https://github.com/rkt/rkt/pull/3613)).\n- Documentation: add some individual blog posts ([#3611](https://github.com/rkt/rkt/pull/3611)).\n- Documentation: cleanup stage1 stuff ([#3612](https://github.com/rkt/rkt/pull/3612)).\n- dist: use multi-user.target instead of default.target ([#3620](https://github.com/rkt/rkt/pull/3620)).\n- added production-users and integrations pages ([#3602](https://github.com/rkt/rkt/pull/3602)).\n- scripts: update rkt-builder version ([#3595](https://github.com/rkt/rkt/pull/3595)).\n\n## 1.25.0\n\nThis minor release contains bugfixes and other improvements related to the KVM flavour, which is now using qemu-kvm by default.\n\n## New Features:\n- Switch default kvm flavour from lkvm to qemu ([#3562](https://github.com/rkt/rkt/pull/3562)).\n\n### Bug fixes\n- stage1/kvm: Change RAM calculation, and increase minimum ([#3572](https://github.com/rkt/rkt/pull/3572)).\n- stage1: Ensure ptmx device usable by non-root for all flavours ([#3484](https://github.com/rkt/rkt/pull/3484)).\n\n## Other changes:\n- tests: fix TestNonRootReadInfo when $HOME is only accessible by current user ([#3580](https://github.com/rkt/rkt/pull/3580)).\n- glide: bump grpc to 1.0.4 ([#3584](https://github.com/rkt/rkt/pull/3584)).\n- vendor: bump docker2aci to 0.16.0 ([#3591](https://github.com/rkt/rkt/pull/3591)).\n\n## 1.24.0\n\nThis release includes experimental support for attaching to a running application's input and output. It also introduces\na more finely grained pull-policy flag.\n\n## New Features:\n- rkt: add experimental support for attachable applications ([#3396](https://github.com/rkt/rkt/pull/3396)).\n    It consists of:\n    * a new `attach` subcommand\n    * a set of per-app flags to control stdin/stdout/stderr modes\n    * a stage1 `iottymux` binary for multiplexing and attaching\n    * two new templated stage1 services, `iomux` and `ttymux`\n- run/prepare/fetch: replace --no-store and --store-only with --pull-policy ([#3554](https://github.com/rkt/rkt/pull/3554)).\n    * Replaces the `--no-store` and `--store-only` flags with a singular\n    flag `--pull-policy`.\n    * can accept one of three things, `never`, `new`, and `update`.\n    * `--no-store` has been aliased to `--pull-policy=update`\n    * `--store-only` has been aliased to `--pull-policy=never`\n\n### Bug fixes\n- image gc: don't remove images that currently running pods were made from ([#3549](https://github.com/rkt/rkt/pull/3549)).\n- stage1/fly: evaluate symlinks in mount targets ([#3570](https://github.com/rkt/rkt/pull/3570)).\n- lib/app: use runtime app mounts and appVolumes rather than mountpoints ([#3571](https://github.com/rkt/rkt/pull/3571)).\n\n## Other changes:\n- kvm/qemu: Update QEMU to v2.8.0 ([#3568](https://github.com/rkt/rkt/pull/3568)).\n- stage0/app-add: CLI args should override image ones ([#3566](https://github.com/rkt/rkt/pull/3566)).\n- lib/app: use runtime app mounts and appVolumes rather than mountpoints ([#3571](https://github.com/rkt/rkt/pull/3571)).\n- kvm/lkvm: update lkvm version to HEAD ([#3569](https://github.com/rkt/rkt/pull/3569)).\n- vendor: bump appc to v0.8.10 ([#3574](https://github.com/rkt/rkt/pull/3574)).\n- docs: ([#3552](https://github.com/rkt/rkt/pull/3552))\n\n### Build & Test:\n- tests: remove gexpect from TestAppUserGroup ([#3561](https://github.com/rkt/rkt/pull/3561)).\n- travis: remove \"gimme.local\" script ([#3556](https://github.com/rkt/rkt/pull/3556)).\n- tests: fix when $HOME is only accessible by current user ([#3559](https://github.com/rkt/rkt/pull/3559)).\n- makelib: introduce --enable-incremental-build, enabling \"go install\" ([#3553](https://github.com/rkt/rkt/pull/3553)).\n\n## 1.23.0\n\nThis release adds a lot of bugfixes around the rkt fly flavor, garbage collection, kvm, and the sandbox. The new experimental `app` subcommand now follows the semantic of CRI of not quitting prematurely if apps fail or exit. Finally docker2aci received an important update fixing issues with os/arch labels which caused issues on arm architectures, a big thanks here goes to @ybubnov for this contribution.\n\n### New features\n- sandbox: don't exit if an app fails ([#3478](https://github.com/rkt/rkt/pull/3478)). In contrast to regular `rkt run` behavior, the sandbox now does not quit if all or single apps fail or exit.\n\n### Bug fixes\n- stage1: fix incorrect splitting function ([#3541](https://github.com/rkt/rkt/pull/3541)).\n- sandbox/app-add: fix mount targets with absolute symlink targets ([#3490](https://github.com/rkt/rkt/pull/3490)).\n- namefetcher: fix nil pointer dereference ([#3536](https://github.com/rkt/rkt/pull/3536)).\n- Bump appc/docker2aci library version to 0.15.0 ([#3534](https://github.com/rkt/rkt/pull/3534)). This supports the conversion of images with various os/arch labels.\n- stage1: uid shift systemd files ([#3529](https://github.com/rkt/rkt/pull/3529)).\n- stage1/kvm/lkvm: chown files and dirs on creation ([#3485](https://github.com/rkt/rkt/pull/3485)).\n- stage1/fly: record pgid and let stop fallback to it ([#3523](https://github.com/rkt/rkt/pull/3523)).\n- common/overlay: allow data directory name with colon character ([#3505](https://github.com/rkt/rkt/pull/3505)).\n- api-service: stop erroring when a pod is running ([#3525](https://github.com/rkt/rkt/pull/3525)).\n- stage1/fly: clear FD_CLOEXEC only once ([#3521](https://github.com/rkt/rkt/pull/3521)).\n- stage1: Add hostname to /etc/hosts ([#3522](https://github.com/rkt/rkt/pull/3522)).\n- gc: avoid erroring in race to deletion ([#3515](https://github.com/rkt/rkt/pull/3515)).\n- tests/rkt_stop: Wait for 'stop' command to complete ([#3518](https://github.com/rkt/rkt/pull/3518)).\n- pkg/pod: avoid nil panic for missing pods ([#3514](https://github.com/rkt/rkt/pull/3514)).\n\n### Other changes\n- stage1: move more logic out of AppUnit ([#3496](https://github.com/rkt/rkt/pull/3496)).\n- tests: use appc schema instead of string templates ([#3520](https://github.com/rkt/rkt/pull/3520)).\n- stage1: kvm: Update kernel to 4.9.2 ([#3530](https://github.com/rkt/rkt/pull/3530)).\n- stage1: remount entire subcgroup r/w, instead of each knob ([#3494](https://github.com/rkt/rkt/pull/3494)).\n- tests: update AWS CI setup ([#3509](https://github.com/rkt/rkt/pull/3509)).\n- pkg/fileutil: helper function to get major, minor numbers of a device file ([#3500](https://github.com/rkt/rkt/pull/3500)).\n- pkg/log: correctly handle var-arg printf params ([#3516](https://github.com/rkt/rkt/pull/3516)).\n- Documentation/stop: describe --uuid-file option ([#3511](https://github.com/rkt/rkt/pull/3511)).\n\n## 1.22.0\n\nThis is a stabilization release which includes better support for environments without systemd, improvements to GC behavior in complex scenarios, and several additional fixes.\n\n### New features and UX changes\n\n- rkt/cat-manifest: add support for --uuid-file ([#3498](https://github.com/rkt/rkt/pull/3498)).\n- stage1: fallback if systemd cgroup doesn't exist ([#3507](https://github.com/rkt/rkt/pull/3507)).\n- vendor: bump gocapability ([#3493](https://github.com/rkt/rkt/pull/3493)). This change renames `sys_psacct` to `sys_pacct`.\n- stage0/app: pass debug flag to entrypoints ([#3469](https://github.com/rkt/rkt/pull/3469)).\n\n### Bug fixes\n- gc: fix cleaning mounts and files ([#3486](https://github.com/rkt/rkt/pull/3486)). This improves GC behavior in case of busy mounts and other complex scenarios.\n- mount: ensure empty volume paths exist for copy-up ([#3468](https://github.com/rkt/rkt/pull/3468)).\n- rkt stop/rm: a pod must be closed after PodFromUUIDString() ([#3492](https://github.com/rkt/rkt/pull/3492)).\n\n### Other changes\n- stage1/kvm: add a dash in kernel LOCALVERSION ([#3489](https://github.com/rkt/rkt/pull/3489)).\n- stage1/kvm: Improve QEMU Makefile rules ([#3474](https://github.com/rkt/rkt/pull/3474)).\n- pkg/pod: use IncludeMostDirs bitmask instead of constructing it ([#3506](https://github.com/rkt/rkt/pull/3506)).\n- pkg/pod: add WaitReady, dry Sandbox methods ([#3462](https://github.com/rkt/rkt/pull/3462)).\n- vendor: bump gexpect to 0.1.1 ([#3467](https://github.com/rkt/rkt/pull/3467)).\n- common: fix 'the the' duplication in comment ([#3497](https://github.com/rkt/rkt/pull/3497)).\n- docs: multiple updates ([#3479](https://github.com/rkt/rkt/pull/3479), [#3501](https://github.com/rkt/rkt/pull/3501), [#3464](https://github.com/rkt/rkt/pull/3464), [#3495](https://github.com/rkt/rkt/pull/3495)).\n\n## 1.21.0\n\nThis release includes bugfixes for the experimental CRI support, more stable integration tests, and some other interesting changes:\n\n- The `default-restricted` network changed from 172.16.28.0/24 to 172.17.0.0/26.\n- The detailed roadmap for OCI support has been finalized.\n\n\n### New features\n- Change the subnet for the default-restricted network ([#3440](https://github.com/rkt/rkt/pull/3440)), ([#3459](https://github.com/rkt/rkt/pull/3459)).\n- Prepare for writable /proc/sys, and /sys ([#3389](https://github.com/rkt/rkt/pull/3389)).\n- Documentation/proposals: add OCI Image Format roadmap ([#3425](https://github.com/rkt/rkt/pull/3425)).\n\n### Bug fixes\n- stage1: app add, status didn't work with empty vols ([#3451](https://github.com/rkt/rkt/pull/3451)).\n- stage1: properly run defer'd umounts in app add ([#3455](https://github.com/rkt/rkt/pull/3455)).\n- cri: correct 'created' timestamp ([#3399](https://github.com/rkt/rkt/pull/3399)).\n- fly: ensure the target bin directory exists before building ([#3436](https://github.com/rkt/rkt/pull/3436)).\n- rkt: misc systemd-related fixes ([#3418](https://github.com/rkt/rkt/pull/3418)).\n\n### Other changes\n- pkg/mountinfo: move mountinfo parser to its own package ([#3415](https://github.com/rkt/rkt/pull/3415)).\n- stage1: persist runtime parameters ([#3432](https://github.com/rkt/rkt/pull/3432)), ([#3450](https://github.com/rkt/rkt/pull/3450)).\n- stage1: signal supervisor readiness ([#3424](https://github.com/rkt/rkt/pull/3424)), ([#3439](https://github.com/rkt/rkt/pull/3439)).\n- sandbox: add missing flagDNSDomain and flagHostsEntries parameters ([#3430](https://github.com/rkt/rkt/pull/3430)).\n- pkg/tar: fix variable name in error ([#3433](https://github.com/rkt/rkt/pull/3433)).\n- tests: fix TestExport for the KVM+overlay case ([#3435](https://github.com/rkt/rkt/pull/3435)).\n- tests: fix some potential gexpect hangs ([#3443](https://github.com/rkt/rkt/pull/3443)).\n- tests: add smoke test for app sandbox ([#3371](https://github.com/rkt/rkt/pull/3371)).\n- tests: tentative fixes for sporadic host and kvm failures ([#3434](https://github.com/rkt/rkt/pull/3434)).\n- rkt: remove empty TODO ([#3417](https://github.com/rkt/rkt/pull/3417)).\n- Documentation updates: [#3446](https://github.com/rkt/rkt/pull/3446), ([#3421](https://github.com/rkt/rkt/pull/3421)), ([#3412](https://github.com/rkt/rkt/pull/3412)).\n\n## 1.20.0\n\nThis release contains additional bug fixes for the new experimental `app` subcommand, following the path towards the Container Runtime Interface (CRI).\nIt also adds first step towards OCI by introducing an internal concept called \"distribution points\", which will allow rkt to recognize multiple image formats internally.\nFinally the rkt fly flavor gained support for `rkt enter`.\n\n### New features and UX changes\n- stage1/fly: Add a working `rkt enter` implementation ([#3377](https://github.com/rkt/rkt/pull/3377)).\n\n### Bug fixes:\n- tests/build-and-run-test.sh: fix systemd revision parameter ([#3395](https://github.com/rkt/rkt/pull/3395)).\n- namefetcher: Use ETag in fetchVerifiedURL() ([#3374](https://github.com/rkt/rkt/pull/3374)).\n- rkt/run: validates pod manifest to make sure it contains at least one app ([#3363](https://github.com/rkt/rkt/pull/3363)).\n- rkt/app: multiple bugfixes ([#3405](https://github.com/rkt/rkt/pull/3405)).\n\n### Other changes\n- glide: deduplicate cni entries and update go-systemd ([#3372](https://github.com/rkt/rkt/pull/3372)).\n- stage0: improve list --format behavior and flags ([#3403](https://github.com/rkt/rkt/pull/3403)).\n- pkg/pod: flatten the pod state if-ladders ([#3404](https://github.com/rkt/rkt/pull/3404)).\n- tests: adjust security tests for systemd v232 ([#3401](https://github.com/rkt/rkt/pull/3401)).\n- image: export `ImageListEntry` type for image list ([#3383](https://github.com/rkt/rkt/pull/3383)).\n- glide: bump gopsutil to v2.16.10 ([#3400](https://github.com/rkt/rkt/pull/3400)).\n- stage1: update coreos base to alpha 1235.0.0 ([#3388](https://github.com/rkt/rkt/pull/3388)).\n- rkt: Implement distribution points ([#3369](https://github.com/rkt/rkt/pull/3369)). This is the implementation of the distribution concept proposed in [#2953](https://github.com/rkt/rkt/pull/2953).\n- build: add --with-stage1-systemd-revision option for src build ([#3362](https://github.com/rkt/rkt/pull/3362)).\n- remove isReallyNil() ([#3381](https://github.com/rkt/rkt/pull/3381)). This is cleanup PR, removing some reflection based code.\n- vendor: update appc/spec to 0.8.9 ([#3384](https://github.com/rkt/rkt/pull/3384)).\n- vendor: Remove direct k8s dependency ([#3312](https://github.com/rkt/rkt/pull/3312)).\n- Documentation updates: [#3366](https://github.com/rkt/rkt/pull/3366), [#3376](https://github.com/rkt/rkt/pull/3376), [#3379](https://github.com/rkt/rkt/pull/3379), [#3406](https://github.com/rkt/rkt/pull/3406), [#3410](https://github.com/rkt/rkt/pull/3410).\n\n## 1.19.0\n\nThis release contains multiple changes to rkt core, bringing it more in line with the new Container Runtime Interface (CRI) from Kubernetes.\n\nA new experimental `app` subcommand has been introduced, which allows creating a \"pod sandbox\" and dynamically mutating it at runtime. This feature is not yet completely stabilized, and is currently gated behind an experimental flag.\n\n### New features and UX changes\n- rkt: experimental support for pod sandbox ([#3318](https://github.com/rkt/rkt/pull/3318)). This PR introduces an experimental `app` subcommand and many additional app-level options.\n- rkt/image: align image selection behavior for the rm subcommand ([#3353](https://github.com/rkt/rkt/pull/3353)).\n- stage1/init: leave privileged pods without stage2 mount-ns ([#3290](https://github.com/rkt/rkt/pull/3290)).\n- stage0/image: list images output in JSON format ([#3334](https://github.com/rkt/rkt/pull/3334)).\n- stage0/arch: initial support for ppc64le platform ([#3315](https://github.com/rkt/rkt/pull/3315)).\n\n### Bug fixes:\n- gc: make sure `CNI_PATH` is same for gc and init ([#3348](https://github.com/rkt/rkt/pull/3348)).\n- gc: clean up some GC leaks ([#3317](https://github.com/rkt/rkt/pull/3317)).\n- stage0: minor wording fixes ([#3351](https://github.com/rkt/rkt/pull/3351)).\n- setup-data-dir.sh: fallback to the `mkdir/chmod`s if the rkt.conf doesn't exist ([#3335](https://github.com/rkt/rkt/pull/3335)).\n- scripts: add gpg to Debian dependencies ([#3339](https://github.com/rkt/rkt/pull/3339)).\n- kvm: fix for breaking change in Debian Sid GCC default options ([#3354](https://github.com/rkt/rkt/pull/3354)).\n- image/list: bring back field filtering in plaintext mode ([#3361](https://github.com/rkt/rkt/pull/3361)).\n\n### Other changes\n- cgroup/v1: introduce mount flags to mountFsRO ([#3350](https://github.com/rkt/rkt/pull/3350)).\n- kvm: update QEMU version to 2.7.0 ([#3341](https://github.com/rkt/rkt/pull/3341)).\n- kvm: bump kernel version to 4.8.6, updated config ([#3342](https://github.com/rkt/rkt/pull/3342)).\n- vendor: introduce kr/pretty and bump go-systemd ([#3333](https://github.com/rkt/rkt/pull/3333)).\n- vendor: update docker2aci to 0.14.0 ([#3356](https://github.com/rkt/rkt/pull/3356)).\n- tests: add the --debug option to more tests ([#3340](https://github.com/rkt/rkt/pull/3340)).\n- scripts/build-rir: bump rkt-builder version to 1.1.1 ([#3360](https://github.com/rkt/rkt/pull/3360)).\n- Documentation updates: [#3321](https://github.com/rkt/rkt/pull/3321), [#3331](https://github.com/rkt/rkt/pull/3331), [#3325](https://github.com/rkt/rkt/pull/3325).\n\n## 1.18.0\n\nThis minor release contains bugfixes, UX enhancements, and other improvements.\n\n### UX changes:\n- rkt: gate diagnostic output behind `--debug` ([#3297](https://github.com/rkt/rkt/pull/3297)).\n- rkt: Change exit codes to 254 ([#3261](https://github.com/rkt/rkt/pull/3261)).\n\n\n### Bug fixes:\n- stage1/kvm: correctly bind-mount read-only volumes ([#3304](https://github.com/rkt/rkt/pull/3304)).\n- stage0/cas: apply xattr attributes ([#3305](https://github.com/rkt/rkt/pull/3305)).\n- scripts/install-rkt: add iptables dependency ([#3309](https://github.com/rkt/rkt/pull/3309)).\n- stage0/image: set proxy if InsecureSkipVerify is set ([#3303](https://github.com/rkt/rkt/pull/3303)).\n\n### Other changes\n- vendor: update docker2aci to 0.13.0 ([#3314](https://github.com/rkt/rkt/pull/3314)). This fixes multiple fetching and conversion bugs, including two security issues.\n- scripts: update glide vendor script ([#3313](https://github.com/rkt/rkt/pull/3313)).\n- vendor: update appc/spec to v0.8.8 ([#3310](https://github.com/rkt/rkt/pull/3310)).\n- stage1: update to CoreOS 1192.0.0 (and update sanity checks) ([#3283](https://github.com/rkt/rkt/pull/3283)).\n- cgroup: introduce proper cgroup/v1, cgroup/v2 packages ([#3277](https://github.com/rkt/rkt/pull/3277)).\n- Documentation updates: ([#3281](https://github.com/rkt/rkt/pull/3281)), ([#3319](https://github.com/rkt/rkt/pull/3319)), ([#3308](https://github.com/rkt/rkt/pull/3308)).\n\n\n## 1.17.0\n\nThis is a minor release packaging rkt-api systemd service units, and fixing a bug caused by overly long lines in generated stage1 unit files.\n\n### New features and UX changes\n- dist: Add systemd rkt-api service and socket ([#3271](https://github.com/rkt/rkt/pull/3271)).\n- dist: package rkt-api unit files ([#3275](https://github.com/rkt/rkt/pull/3275)).\n\n### Bug fixes\n- stage1: break down overlong property lines ([#3279](https://github.com/rkt/rkt/pull/3279)).\n\n### Other changes\n- stage0: fix typo and some docstring style ([#3266](https://github.com/rkt/rkt/pull/3266)).\n- stage0: Create an mtab symlink if not present ([#3265](https://github.com/rkt/rkt/pull/3265)).\n- stage1: use systemd protection for kernel tunables ([#3273](https://github.com/rkt/rkt/pull/3273)).\n- Documentation updates: ([#3280](https://github.com/rkt/rkt/pull/3280), [#3263](https://github.com/rkt/rkt/pull/3263), [#3268](https://github.com/rkt/rkt/pull/3268), [#3254](https://github.com/rkt/rkt/pull/3254), [#3199](https://github.com/rkt/rkt/pull/3199), [#3256](https://github.com/rkt/rkt/pull/3256))\n\n## 1.16.0\n\nThis release contains an important bugfix for the stage1-host flavor, as well as initial internal support for cgroup2 and pod sandboxes as specified by kubernetes CRI (Container Runtime Interface).\n\n### Bug fixes\n- stage1/host: fix systemd-nspawn args ordering ([#3216](https://github.com/rkt/rkt/pull/3216)). Fixes https://github.com/rkt/rkt/issues/3215.\n\n### New features\n- rkt: support for unified cgroups (cgroup2) ([#3032](https://github.com/rkt/rkt/pull/3032)). This implements support for cgroups v2 along support for legacy version.\n- cri: initial implementation of stage1 changes ([#3218](https://github.com/rkt/rkt/pull/3218)). This PR pulls the stage1-based changes from the CRI branch back into\nmaster, leaving out the changes in stage0 (new app subcommands).\n\n### Other changes\n- doc/using-rkt-with-systemd: fix the go app example ([#3217](https://github.com/rkt/rkt/pull/3217)).\n- rkt: refactor app-level flags handling ([#3209](https://github.com/rkt/rkt/pull/3209)). This is in preparation for https://github.com/rkt/rkt/pull/3205\n- docs/distributions: rearrange, add centos ([#3212](https://github.com/rkt/rkt/pull/3212)).\n- rkt: Correct typos listed by the tool misspell ([#3208](https://github.com/rkt/rkt/pull/3208)).\n\n## 1.15.0\n\nThis relase brings some expanded DNS configuration options, beta support for QEMU, recursive volume mounts, and improved sd_notify support.\n\n### New features\n- DNS configuration improvements ([#3161](https://github.com/rkt/rkt/pull/3161)):\n    - Respect DNS results from CNI\n    - Add --dns=host mode to bind-mount the host's /etc/resolv.conf\n    - Add --dns=none mode to ignore CNI DNS\n    - Add --hosts-entry (IP=HOSTNAME) to tweak the pod's /etc/hosts\n    - Add --hosts-entry=host to bind-mount the host's /etc/hosts\n- Introduce QEMU support as an alternative KVM hypervisor ([#2952](https://github.com/rkt/rkt/pull/2952))\n- add support for recursive volume/mounts ([#2880](https://github.com/rkt/rkt/pull/2880))\n- stage1: allow sd_notify from the app in the container to the host ([#2826](https://github.com/rkt/rkt/pull/2826)).\n\n### Other changes\n- rkt-monitor: bunch of improvements ([#3093](https://github.com/rkt/rkt/pull/3093))\n- makefile/kvm: add dependency for copied files ([#3197](https://github.com/rkt/rkt/pull/3197))\n- store: refactor GetRemote ([#2975](https://github.com/rkt/rkt/pull/2975)).\n- build,stage1: include systemd dir when checking libs ([#3186](https://github.com/rkt/rkt/pull/3186))\n- tests: volumes: add missing test `volumeMountTestCasesNonRecursive` ([#3165](https://github.com/rkt/rkt/pull/3165))\n- kvm/pod: disable insecure-options=paths for kvm flavor ([#3155](https://github.com/rkt/rkt/pull/3155))\n- stage0: don't copy image annotations to pod manifest RuntimeApp annotations ([#3100](https://github.com/rkt/rkt/pull/3100))\n- stage1: shutdown.service: don't use /dev/console ([#3148](https://github.com/rkt/rkt/pull/3148))\n- build: build simple .deb and .rpm packages ([#3177](https://github.com/rkt/rkt/pull/3177)). Add a simple script to build .deb and .rpm packages. This is not a substitute for a proper distro-maintained package.\n- Documentation updates: ([#3196](https://github.com/rkt/rkt/pull/3196)) ([#3192](https://github.com/rkt/rkt/pull/3192)) ([#3187](https://github.com/rkt/rkt/pull/3187)) ([#3185](https://github.com/rkt/rkt/pull/3185)) ([#3182](https://github.com/rkt/rkt/pull/3182)) ([#3180](https://github.com/rkt/rkt/pull/3180)) ([#3166](https://github.com/rkt/rkt/pull/3166))\n- proposals/app-level-api: add rkt app sandbox subcommand ([#3147](https://github.com/rkt/rkt/pull/3147)). This adds a new subcommand `app init` to create an initial empty pod.\n\n## 1.14.0\n\nThis release updates the coreos and kvm flavors, bringing in a newer stable systemd (v231). Several fixes and cgroups-related changes landed in `api-service`, and better heuristics have been introduced to avoid using overlays in non-supported environments. Finally, `run-prepared` now honors options for insecure/privileged pods too.\n\n### New features and UX changes\n- stage1: update to CoreOS 1151.0.0 and systemd v231 ([#3122](https://github.com/rkt/rkt/pull/3122)).\n- common: fall back to non-overlay with ftype=0 ([#3105](https://github.com/rkt/rkt/pull/3105)).\n- rkt: honor insecure-options in run-prepared ([#3138](https://github.com/rkt/rkt/pull/3138)).\n\n#### Bug fixes\n- stage0: fix golint warnings ([#3099](https://github.com/rkt/rkt/pull/3099)).\n- rkt: avoid possible panic in api-server ([#3111](https://github.com/rkt/rkt/pull/3111)).\n- rkt/run: allow --set-env-file files with comments ([#3115](https://github.com/rkt/rkt/pull/3115)).\n- scripts/install-rkt: add wget as dependency ([#3124](https://github.com/rkt/rkt/pull/3124)).\n- install-rkt.sh: scripts: Fix missing files in .deb when using install-rkt.sh ([#3127](https://github.com/rkt/rkt/pull/3127)).\n- tests: check for run-prepared with insecure options ([#3139](https://github.com/rkt/rkt/pull/3139)).\n\n#### Other changes\n- seccomp/docker: update docker whitelist to include mlock ([#3126](https://github.com/rkt/rkt/pull/3126)). This updates the `@docker/default-whitelist` to include mlock-related\nsyscalls (mlock, mlock2, mlockall).\n- build: add PowerPC ([#2936](https://github.com/rkt/rkt/pull/2936)).\n- scripts: install-rkt.sh: fail install-pak on errors ([#3150](https://github.com/rkt/rkt/pull/3150)). When install-pak (called from install-rkt.sh) fails at some point\nabort packaging.\n- api_service: Rework cgroup detection ([#3072](https://github.com/rkt/rkt/pull/3072)). Use the `subcgroup` file hint provided by some stage1s rather than\nmachined registration.\n- Documentation/devel: add make images target ([#3142](https://github.com/rkt/rkt/pull/3142)). This introduces the possibility to generate graphivz based PNG images using\na new `images` make target.\n- vendor: update appc/spec to 0.8.7 ([#3143](https://github.com/rkt/rkt/pull/3143)).\n- stage1/kvm: avoid writing misleading subcgroup ([#3107](https://github.com/rkt/rkt/pull/3107)).\n- vendor: update go-systemd to v12 ([#3125](https://github.com/rkt/rkt/pull/3125)).\n- scripts: bump coreos.com/rkt/builder image version ([#3092](https://github.com/rkt/rkt/pull/3092)). This bumps rkt-builder version to 1.0.2, in order to work with\nseccomp filtering.\n- export: test export for multi-app pods ([#3075](https://github.com/rkt/rkt/pull/3075)).\n- Documentation updates: ([#3146](https://github.com/rkt/rkt/pull/3146), [#2954](https://github.com/rkt/rkt/pull/2954), [#3128](https://github.com/rkt/rkt/pull/3128), [#2953](https://github.com/rkt/rkt/pull/2953), [#3103](https://github.com/rkt/rkt/pull/3103), [#3087](https://github.com/rkt/rkt/pull/3087), [#3097](https://github.com/rkt/rkt/pull/3097), [#3096](https://github.com/rkt/rkt/pull/3096), [#3095](https://github.com/rkt/rkt/pull/3095), [#3089](https://github.com/rkt/rkt/pull/3089))\n\n## 1.13.0\n\nThis release introduces support for exporting single applications out of multi-app pods. Moreover, it adds additional support to control device manipulation inside pods. Finally all runtime security features can now be optionally disabled at the pod level via new insecure options. This version also contains multiple bugfixes and supports Go 1.7.\n\n### New features and UX changes\n\n- export: name flag for exporting multi-app pods ([#3030](https://github.com/rkt/rkt/pull/3030)).\n- stage1: limit device node creation/reading/writing with DevicePolicy= and DeviceAllow= ([#3027](https://github.com/rkt/rkt/pull/3027), [#3058](https://github.com/rkt/rkt/pull/3058)).\n- rkt: implements --insecure-options={capabilities,paths,seccomp,run-all} ([#2983](https://github.com/rkt/rkt/pull/2983)).\n\n#### Bug fixes\n\n- kvm: use a properly formatted comment for iptables chains ([#3038](https://github.com/rkt/rkt/pull/3038)). rkt was using the chain name as comment, which could lead to confusion.\n- pkg/label: supply mcsdir as function argument to InitLabels() ([#3045](https://github.com/rkt/rkt/pull/3045)).\n- api_service: improve machined call error output ([#3059](https://github.com/rkt/rkt/pull/3059)).\n- general: fix old appc/spec version in various files ([#3055](https://github.com/rkt/rkt/pull/3055)).\n- rkt/pubkey: use custom http client including timeout ([#3084](https://github.com/rkt/rkt/pull/3084)).\n- dist: remove quotes from rkt-api.service ExecStart ([#3079](https://github.com/rkt/rkt/pull/3079)).\n- build: multiple fixes ([#3042](https://github.com/rkt/rkt/pull/3042), [#3041](https://github.com/rkt/rkt/pull/3041), [#3046](https://github.com/rkt/rkt/pull/3046)).\n- configure: disable tests on host flavor with systemd <227 ([#3047](https://github.com/rkt/rkt/pull/3047)).\n\n#### Other changes\n\n- travis: add go 1.7, bump go 1.5/1.6 ([#3077](https://github.com/rkt/rkt/pull/3077)).\n- api_service: Add lru cache to cache image info ([#2910](https://github.com/rkt/rkt/pull/2910)).\n- scripts: add curl as build dependency ([#3070](https://github.com/rkt/rkt/pull/3070)).\n- vendor: use appc/spec 0.8.6 and k8s.io/kubernetes v1.3.0 ([#3063](https://github.com/rkt/rkt/pull/3063)).\n- common: use fileutil.IsExecutable() ([#3023](https://github.com/rkt/rkt/pull/3023)).\n- build: Stop printing irrelevant invalidation messages ([#3050](https://github.com/rkt/rkt/pull/3050)).\n- build: Make generating clean files simpler to do ([#3057](https://github.com/rkt/rkt/pull/3057)).\n- Documentation: misc changes ([#3053](https://github.com/rkt/rkt/pull/3053), [#2911](https://github.com/rkt/rkt/pull/2911), [#3035](https://github.com/rkt/rkt/pull/3035), [#3036](https://github.com/rkt/rkt/pull/3036), [#3037](https://github.com/rkt/rkt/pull/3037), [#2945](https://github.com/rkt/rkt/pull/2945), [#3083](https://github.com/rkt/rkt/pull/3083), [#3076](https://github.com/rkt/rkt/pull/3076), [#3033](https://github.com/rkt/rkt/pull/3033), [#3064](https://github.com/rkt/rkt/pull/3064), [#2932](https://github.com/rkt/rkt/pull/2932)).\n- functional tests: misc fixes ([#3049](https://github.com/rkt/rkt/pull/3049)).\n\n## 1.12.0\n\nThis release introduces support for seccomp filtering via two new seccomp isolators. It also gives a boost to api-service performance by introducing manifest caching. Finally it fixes several regressions related to Docker images handling.\n\n#### New features and UX changes\n\n- cli: rename `--cap-retain` and `--cap-remove` to `--caps-*` ([#2994](https://github.com/rkt/rkt/pull/2994)).\n- stage1: apply seccomp isolators ([#2753](https://github.com/rkt/rkt/pull/2753)). This introduces support for appc seccomp isolators.\n- scripts: add /etc/rkt owned by group rkt-admin in setup-data-dir.sh ([#2944](https://github.com/rkt/rkt/pull/2944)).\n- rkt: add `--caps-retain` and `--caps-remove` to prepare ([#3007](https://github.com/rkt/rkt/pull/3007)).\n- store: allow users in the rkt group to delete images ([#2961](https://github.com/rkt/rkt/pull/2961)).\n- api_service: cache pod manifest ([#2891](https://github.com/rkt/rkt/pull/2891)). Manifest caching considerably improves api-service performances.\n- store: tell the user to run as root on db update ([#2966](https://github.com/rkt/rkt/pull/2966)).\n- stage1: disabling cgroup namespace in systemd-nspawn ([#2989](https://github.com/rkt/rkt/pull/2989)). For more information see [systemd#3589](https://github.com/systemd/systemd/pull/3589).\n- fly: copy rkt-resolv.conf in the app ([#2982](https://github.com/rkt/rkt/pull/2982)).\n- store: decouple aci store and treestore implementations ([#2919](https://github.com/rkt/rkt/pull/2919)).\n- store: record ACI fetching information ([#2960](https://github.com/rkt/rkt/pull/2960)).\n\n#### Bug fixes\n- stage1/init: fix writing of /etc/machine-id ([#2977](https://github.com/rkt/rkt/pull/2977)).\n- rkt-monitor: multiple fixes ([#2927](https://github.com/rkt/rkt/pull/2927), [#2988](https://github.com/rkt/rkt/pull/2988)).\n- rkt: don't errwrap cli_apps errors ([#2958](https://github.com/rkt/rkt/pull/2958)).\n- pkg/tar/chroot: avoid errwrap in function called by multicall ([#2997](https://github.com/rkt/rkt/pull/2997)).\n- networking: apply CNI args to the default networks as well ([#2985](https://github.com/rkt/rkt/pull/2985)).\n- trust: provide InsecureSkipTLSCheck to pubkey manager ([#3016](https://github.com/rkt/rkt/pull/3016)).\n- api_service: update grpc version ([#3015](https://github.com/rkt/rkt/pull/3015)).\n- fetcher: httpcaching fixes ([#2965](https://github.com/rkt/rkt/pull/2965)).\n\n#### Other changes\n- build,stage1/init: set interpBin at build time for src flavor ([#2978](https://github.com/rkt/rkt/pull/2978)).\n- common: introduce RemoveEmptyLines() ([#3004](https://github.com/rkt/rkt/pull/3004)).\n- glide: update docker2aci to v0.12.3 ([#3026](https://github.com/rkt/rkt/pull/3026)). This fixes multiple bugs in layers ordering for Docker images.\n- glide: update go-systemd to v11 ([#2970](https://github.com/rkt/rkt/pull/2970)). This fixes a buggy corner-case in journal seeking (implicit seek to head).\n- docs: document capabilities overriding ([#2917](https://github.com/rkt/rkt/pull/2917), [#2991](https://github.com/rkt/rkt/pull/2991)).\n- issue template: add '\\n' to the end of environment output ([#3008](https://github.com/rkt/rkt/pull/3008)).\n- functional tests: multiple fixes ([#2999](https://github.com/rkt/rkt/pull/2999), [#2979](https://github.com/rkt/rkt/pull/2979), [#3014](https://github.com/rkt/rkt/pull/3014)).\n\n## 1.11.0\n\nThis release sets the ground for the new upcoming KVM qemu flavor. It adds support for exporting a pod to an ACI including all modifications. The rkt API service now also supports systemd socket activation. Finally we have diagnostics back, helping users to find out why their app failed to execute.\n\n#### New features\n- KVM: Hypervisor support for KVM flavor focusing on qemu ([#2684](https://github.com/rkt/rkt/pull/2684)). This provides a generic mechanism to use different kvm hypervisors (such as lkvm, qemu-kvm).\n- rkt: add command to export a pod to an aci ([#2889](https://github.com/rkt/rkt/pull/2889)). Adds a new `export` command to rkt which generates an ACI from a pod; saving any changes made to the pod.\n- rkt/api: detect when run as a `systemd.socket(5)` service ([#2916](https://github.com/rkt/rkt/pull/2916)). This allows rkt to run as a systemd socket-based unit.\n- rkt/stop: implement `--uuid-file` ([#2902](https://github.com/rkt/rkt/pull/2902)). So the user can use the value saved on rkt run with `--uuid-file-save`.\n\n#### Bug fixes\n- scripts/glide-update: ensure running from $GOPATH ([#2885](https://github.com/rkt/rkt/pull/2885)). glide is confused when it's not running with the rkt repository inside $GOPATH.\n- store: fix missing shared storelock acquisition on NewStore ([#2896](https://github.com/rkt/rkt/pull/2896)).\n- store,rkt: fix fd leaks ([#2906](https://github.com/rkt/rkt/pull/2906)). Close db lock on store close. If we don't do it, there's a fd leak everytime we open a new Store, even if it was closed.\n- stage1/enterexec: remove trailing `\\n` in environment variables ([#2901](https://github.com/rkt/rkt/pull/2901)). Loading environment retained the new line character (`\\n`), this produced an incorrect evaluation of the environment variables.\n- stage1/gc: skip cleaning our own cgroup ([#2914](https://github.com/rkt/rkt/pull/2914)).\n- api_service/log: fix file descriptor leak in GetLogs() ([#2930](https://github.com/rkt/rkt/pull/2930)).\n- protobuf: fix protoc-gen-go build with vendoring ([#2913](https://github.com/rkt/rkt/pull/2913)).\n- build: fix x86 builds ([#2926](https://github.com/rkt/rkt/pull/2926)). This PR fixes a minor issue which leads to x86 builds failing.\n- functional tests: add some more volume/mount tests ([#2903](https://github.com/rkt/rkt/pull/2903)).\n- stage1/init: link pod's journal in kvm flavor ([#2934](https://github.com/rkt/rkt/pull/2934)). In nspawn flavors, nspawn creates a symlink from `/var/log/journal/${machine-id}` to the pod's journal directory. In kvm we need to do the link ourselves.\n- build: Build system fixes ([#2938](https://github.com/rkt/rkt/pull/2938)). This should fix the `expr: syntax error` and useless rebuilds of network plugins.\n\n#### Other changes\n- stage1: diagnostic functionality for rkt run ([#2872](https://github.com/rkt/rkt/pull/2872)). If the app exits with `ExecMainStatus == 203`, the app's reaper runs the diagnostic tool and prints the output on stdout. systemd sets `ExecMainstatus` to EXIT_EXEC (203) when execve() fails.\n- build: add support for more architectures at configure time ([#2907](https://github.com/rkt/rkt/pull/2907)).\n- stage1: update coreos image to 1097.0.0 ([#2884](https://github.com/rkt/rkt/pull/2884)). This is needed for a recent enough version of libseccomp (2.3.0), with support for new syscalls (eg. getrandom).\n- api: By adding labels to the image itself, we don't need to pass the manifest to filter function ([#2909](https://github.com/rkt/rkt/pull/2909)). api: Add labels to pod and image type.\n- api: optionally build systemd-journal support ([#2868](https://github.com/rkt/rkt/pull/2868)). This introduces a 'sdjournal' tag and corresponding stubs in api_service, turning libsystemd headers into a soft-dependency.\n- store: simplify db locking and functions ([#2897](https://github.com/rkt/rkt/pull/2897)). Instead of having a file lock to handle inter process locking and a sync.Mutex to handle locking between multiple goroutines, just create, lock and close a new file lock at every db.Do function.\n- stage1/enterexec: Add entry to ASSCB_EXTRA_HEADERS ([#2924](https://github.com/rkt/rkt/pull/2924)). Added entry to ASSCB_EXTRA_HEADERS for better change tracking.\n- build: use rkt-builder ACI ([#2923](https://github.com/rkt/rkt/pull/2923)).\n- Add hidden 'image fetch' next to the existing 'fetch' option ([#2860](https://github.com/rkt/rkt/pull/2860)).\n- stage1: prepare-app: don't mount /sys if path already used ([#2888](https://github.com/rkt/rkt/pull/2888)). When users mount /sys or a sub-directory of /sys as a volume, prepare-app should not mount /sys: that would mask the volume provided by users.\n- build,stage1/init: set interpBin at build time to fix other architecture builds (e.g. x86) ([#2950](https://github.com/rkt/rkt/pull/2950)).\n- functional tests: re-purpose aws.sh for generating AMIs ([#2736](https://github.com/rkt/rkt/pull/2736)).\n- rkt: Add `--cpuprofile` `--memprofile` for profiling rkt ([#2887](https://github.com/rkt/rkt/pull/2887)). Adds two hidden global flags and documentation to enable profiling rkt.\n- functional test: check PATH variable for trailer `\\n` character ([#2942](https://github.com/rkt/rkt/pull/2942)).\n- functional tests: disable TestVolumeSysfs on kvm ([#2941](https://github.com/rkt/rkt/pull/2941)).\n- Documentation updates ([#2918](https://github.com/rkt/rkt/pull/2918))\n\n#### Library updates\n\n- glide: update docker2aci to v0.12.1 ([#2873](https://github.com/rkt/rkt/pull/2873)). Includes support for the docker image format v2.2 and OCI image format and allows fetching via digest.\n\n## 1.10.1\n\nThis is a minor bug fix release.\n\n#### Bug fixes\n- rkt/run: handle malformed environment files ([#2901](https://github.com/rkt/rkt/pull/2901))\n- stage1/enterexec: remove trailing `\\n` in environment variables ([#2901](https://github.com/rkt/rkt/pull/2901))\n\n## v1.10.0\nThis release introduces a number of important features and improvements:\n\n- ARM64 support\n- A new subcommand `rkt stop` to gracefully stop running pods\n- native Go vendoring with Glide\n- rkt is now packaged for openSUSE Tumbleweed and Leap\n\n#### New features\n- Add ARM64 support ([#2758](https://github.com/rkt/rkt/pull/2758)). This enables ARM64 cross-compliation, fly, and stage1-coreos.\n- Replace Godep with Glide, introduce native Go vendoring ([#2735](https://github.com/rkt/rkt/pull/2735)).\n- rkt: rkt stop ([#2438](https://github.com/rkt/rkt/pull/2438)). Cleanly stops a running pod. For systemd-nspawn, sends a SIGTERM. For kvm, executes `systemctl halt`.\n\n#### Bug fixes\n- stage1/fly: respect runtimeApp App's MountPoints ([#2852](https://github.com/rkt/rkt/pull/2852)). Fixes #2846.\n- run: fix sandbox-side metadata service to comply to appc v0.8.1 ([#2863](https://github.com/rkt/rkt/pull/2863)). Fixes #2621.\n\n#### Other changes\n- build directory layout change ([#2758](https://github.com/rkt/rkt/pull/2758)): The rkt binary and stage1 image files have been moved from the 'bin' sub-directory to the 'target/bin' sub-directory.\n- networking/kvm: add flannel default gateway parsing ([#2859](https://github.com/rkt/rkt/pull/2859)).\n- stage1/enterexec: environment file with '\\n' as separator (systemd style) ([#2839](https://github.com/rkt/rkt/pull/2839)).\n- pkg/tar: ignore global extended headers ([#2847](https://github.com/rkt/rkt/pull/2847)).\n- pkg/tar: remove errwrap ([#2848](https://github.com/rkt/rkt/pull/2848)).\n- tests: fix abuses of appc types.Isolator ([#2840](https://github.com/rkt/rkt/pull/2840)).\n- common: remove unused GetImageIDs() ([#2834](https://github.com/rkt/rkt/pull/2834)).\n- common/cgroup: add mountFsRO() helper function ([#2829](https://github.com/rkt/rkt/pull/2829)).\n- Documentation updates ([#2732](https://github.com/rkt/rkt/pull/2732), [#2869](https://github.com/rkt/rkt/pull/2869), [#2810](https://github.com/rkt/rkt/pull/2810), [#2865](https://github.com/rkt/rkt/pull/2865), [#2825](https://github.com/rkt/rkt/pull/2825), [#2841](https://github.com/rkt/rkt/pull/2841), [#2732](https://github.com/rkt/rkt/pull/2732))\n\n#### Library updates\n- glide: bump ql to v1.0.4 ([#2875](https://github.com/rkt/rkt/pull/2875)). It fixes an occassional panic when doing GC.\n- glide: bump gopsutils to 2.1 ([#2876](https://github.com/rkt/rkt/pull/2876)). To include https://github.com/shirou/gopsutil/pull/194 (this adds ARM aarch64 support)\n- vendor: update appc/spec to 0.8.5 ([#2854](https://github.com/rkt/rkt/pull/2854)).\n\n## v1.9.1\n\nThis is a minor bug fix release.\n\n#### Bug fixes\n\n- Godeps: update go-systemd ([#2837](https://github.com/rkt/rkt/pull/2837)). go-systemd v10 fixes a panic-inducing bug due to returning incorrect\nRead() length values.\n- stage1/fly: use 0755 to create mountpaths ([#2836](https://github.com/rkt/rkt/pull/2836)). This will allow any user to list the content directories. It does not\nhave any effect on the permissions on the mounted files itself.\n\n## v1.9.0\n\nThis release focuses on bug fixes and developer tooling and UX improvements.\n\n#### New features and UX changes\n\n- rkt/run: added --set-env-file switch and priorities for environments ([#2816](https://github.com/rkt/rkt/pull/2816)). --set-env-file gets an environment variables file path in the format \"VAR=VALUE\\n...\".\n- run: add --cap-retain and --cap-remove ([#2771](https://github.com/rkt/rkt/pull/2771)).\n- store: print more information on rm as non-root ([#2805](https://github.com/rkt/rkt/pull/2805)).\n- Documentation/vagrant: use rkt binary for getting started ([#2808](https://github.com/rkt/rkt/pull/2808)).\n- docs: New file in documentation - instruction for new developers in rkt ([#2639](https://github.com/rkt/rkt/pull/2639)).\n- stage0/trust: change error message if prefix/root flag missing ([#2661](https://github.com/rkt/rkt/pull/2661)).\n\n#### Bug fixes\n\n- rkt/uuid: fix match when uuid is an empty string ([#2807](https://github.com/rkt/rkt/pull/2807)).\n- rkt/api_service: fix fly pods ([#2799](https://github.com/rkt/rkt/pull/2799)).\n- api/client_example: fix panic if pod has no apps ([#2766](https://github.com/rkt/rkt/pull/2766)). Fixes the concern expressed in https://github.com/rkt/rkt/pull/2763#discussion_r66409260\n- api_service: wait until a pod regs with machined ([#2788](https://github.com/rkt/rkt/pull/2788)).\n\n#### Other changes\n\n- stage1: update coreos image to 1068.0.0 ([#2821](https://github.com/rkt/rkt/pull/2821)).\n- KVM: Update LKVM patch to mount with mmap mode ([#2795](https://github.com/rkt/rkt/pull/2795)).\n- stage1: always write /etc/machine-id ([#2440](https://github.com/rkt/rkt/pull/2440)). Prepare rkt for systemd-v230 in stage1.\n- stage1/prepare-app: always adjust /etc/hostname ([#2761](https://github.com/rkt/rkt/pull/2761)).\n\n## v1.8.0\n\nThis release focuses on stabilizing the API service, fixing multiple issues in the logging subsystem.\n\n#### New features and UX changes\n\n- api: GetLogs: improve client example with 'Follow' ([#2747](https://github.com/rkt/rkt/pull/2747)).\n- kvm: add proxy arp support to macvtap ([#2715](https://github.com/rkt/rkt/pull/2715)).\n- stage0/config: add a CLI flag to pretty print json ([#2745](https://github.com/rkt/rkt/pull/2745)).\n- stage1: make /proc/bus/ read-only ([#2743](https://github.com/rkt/rkt/pull/2743)).\n\n#### Bug fixes\n\n- api: GetLogs: use the correct type in LogsStreamWriter ([#2744](https://github.com/rkt/rkt/pull/2744)).\n- api: fix service panic on incomplete pods ([#2739](https://github.com/rkt/rkt/pull/2739)).\n- api: Fix the GetLogs() when appname is given ([#2763](https://github.com/rkt/rkt/pull/2763)).\n- pkg/selinux: various fixes ([#2723](https://github.com/rkt/rkt/pull/2723)).\n- pkg/fileutil: don't remove the cleanSrc if it equals '.' ([#2731](https://github.com/rkt/rkt/pull/2731)).\n- stage0: remove superfluous error verbs ([#2750](https://github.com/rkt/rkt/pull/2750)).\n\n#### Other changes\n\n- Godeps: bump go-systemd ([#2754](https://github.com/rkt/rkt/pull/2754)). Fixes a panic on the api-service when calling GetLogs().\n- Documentation updates ([#2756](https://github.com/rkt/rkt/pull/2756), [#2741](https://github.com/rkt/rkt/pull/2741), [#2737](https://github.com/rkt/rkt/pull/2737), [#2742](https://github.com/rkt/rkt/pull/2742), [#2730](https://github.com/rkt/rkt/pull/2730), [#2729](https://github.com/rkt/rkt/pull/2729))\n- Test improvements ([#2726](https://github.com/rkt/rkt/pull/2726)).\n\n## v1.7.0\n\nThis release introduces some new security features, including a \"no-new-privileges\" isolator and initial (partial) restrictions on /proc and /sys access.\nCgroups handling has also been improved with regards to setup and cleaning. Many bugfixes and new documentation are included too.\n\n#### New features and UX changes\n\n- stage1: implement no-new-privs linux isolator ([#2677](https://github.com/rkt/rkt/pull/2677)).\n- stage0: disable OverlayFS by default when working on ZFS ([#2600](https://github.com/rkt/rkt/pull/2600)).\n- stage1: (partially) restrict access to procfs and sysfs paths ([#2683](https://github.com/rkt/rkt/pull/2683)).\n- stage1: clean up pod cgroups on GC ([#2655](https://github.com/rkt/rkt/pull/2655)).\n- stage1/prepare-app: don't mount /sys/fs/cgroup in stage2 ([#2681](https://github.com/rkt/rkt/pull/2681)).\n- stage0: complain and abort on conflicting CLI flags ([#2666](https://github.com/rkt/rkt/pull/2666)).\n- stage1: update CoreOS image signing key ([#2659](https://github.com/rkt/rkt/pull/2659)).\n- api_service: Implement GetLogs RPC request ([#2662](https://github.com/rkt/rkt/pull/2662)).\n- networking: update to CNI v0.3.0 ([#3696](https://github.com/rkt/rkt/pull/2696)).\n\n#### Bug fixes\n\n- api: fix image size reporting ([#2501](https://github.com/rkt/rkt/pull/2501)).\n- build: fix build failures on manpages/bash-completion target due to missing GOPATH ([#2646](https://github.com/rkt/rkt/pull/2646)).\n- dist: fix \"other\" permissions so rkt list can work without root/rkt-admin ([#2698](https://github.com/rkt/rkt/pull/2698)).\n- kvm: fix logging network plugin type ([#2635](https://github.com/rkt/rkt/pull/2635)).\n- kvm: transform flannel network to allow teardown ([#2647](https://github.com/rkt/rkt/pull/2647)).\n- rkt: fix panic on rm a non-existing pod with uuid-file ([#2679](https://github.com/rkt/rkt/pull/2679)).\n- stage1/init: work around `cgroup/SCM_CREDENTIALS` race ([#2645](https://github.com/rkt/rkt/pull/2645)).\n- gc: mount stage1 on GC ([#2704](https://github.com/rkt/rkt/pull/2704)).\n- stage1: fix network files leak on GC ([#2319](https://github.com/rkt/rkt/issues/2319)).\n\n#### Other changes\n\n- deps: remove unused dependencies ([#2703](https://github.com/rkt/rkt/pull/2703)).\n- deps: appc/spec, k8s, protobuf updates ([#2697](https://github.com/rkt/rkt/pull/2697)).\n- deps: use tagged release of github.com/shirou/gopsutil ([#2705](https://github.com/rkt/rkt/pull/2705)).\n- deps: bump docker2aci to v0.11.1 ([#2719](https://github.com/rkt/rkt/pull/2719)).\n- Documentation updates ([#2620](https://github.com/rkt/rkt/pull/2620), [#2700](https://github.com/rkt/rkt/pull/2700), [#2637](https://github.com/rkt/rkt/pull/2637), [#2591](https://github.com/rkt/rkt/pull/2591), [#2651](https://github.com/rkt/rkt/pull/2651), [#2699](https://github.com/rkt/rkt/pull/2699), [#2631](https://github.com/rkt/rkt/pull/2631)).\n- Test improvements ([#2587](https://github.com/rkt/rkt/pull/2587), [#2656](https://github.com/rkt/rkt/pull/2656), [#2676](https://github.com/rkt/rkt/pull/2676), [#2554](https://github.com/rkt/rkt/pull/2554), [#2690](https://github.com/rkt/rkt/pull/2690), [#2674](https://github.com/rkt/rkt/pull/2674), [#2665](https://github.com/rkt/rkt/pull/2665), [#2649](https://github.com/rkt/rkt/pull/2649), [#2643](https://github.com/rkt/rkt/pull/2643), [#2637](https://github.com/rkt/rkt/pull/2637), [#2633](https://github.com/rkt/rkt/pull/2633)).\n\n## v1.6.0\n\nThis release focuses on security enhancements. It provides additional isolators, creating a new mount namespace per app. Also a new version of CoreOS 1032.0.0 with systemd v229 is being used in stage1.\n\n#### New features and UX changes\n\n- stage1: implement read-only rootfs ([#2624](https://github.com/rkt/rkt/pull/2624)). Using the Pod manifest readOnlyRootFS option mounts the rootfs of the app as read-only using systemd-exec unit option ReadOnlyDirectories, see [appc/spec](https://github.com/appc/spec/blob/master/spec/pods.md#pod-manifest-schema).\n- stage1: capabilities: implement both remain set and remove set ([#2589](https://github.com/rkt/rkt/pull/2589)). It follows the [Linux Isolators semantics from the App Container Executor spec](https://github.com/appc/spec/blob/master/spec/ace.md#linux-isolators), as modified by [appc/spec#600](https://github.com/appc/spec/pull/600).\n- stage1/init: create a new mount ns for each app ([#2603](https://github.com/rkt/rkt/pull/2603)). Up to this point, you could escape the app's chroot easily by using a simple program downloaded from the internet [1](http://www.unixwiz.net/techtips/chroot-practices.html). To avoid this, we now create a new mount namespace per each app.\n- api: Return the pods even when we failed getting information about them ([#2593](https://github.com/rkt/rkt/pull/2593)).\n- stage1/usr_from_coreos: use CoreOS 1032.0.0 with systemd v229 ([#2514](https://github.com/rkt/rkt/pull/2514)).\n\n#### Bug fixes\n\n- kvm: fix flannel network info ([#2625](https://github.com/rkt/rkt/pull/2625)). It wasn't saving the network information on disk.\n- stage1: Machine name wasn't being populated with the full UUID ([#2575](https://github.com/rkt/rkt/pull/2575)).\n- rkt: Some simple arg doc string fixes ([#2588](https://github.com/rkt/rkt/pull/2588)). Remove some unnecessary indefinite articles from the start of argument doc strings and fixes the arg doc string for run-prepared's --interactive flag.\n- stage1: Fix segfault in enterexec ([#2608](https://github.com/rkt/rkt/pull/2608)). This happened if rkt enter was executed without the TERM environment variable set.\n- net: fix port forwarding behavior with custom CNI ipMasq'ed networks and allow different hostPort:podPort combinations ([#2387](https://github.com/rkt/rkt/pull/2387)).\n- stage0: check and create /etc ([#2599](https://github.com/rkt/rkt/pull/2599)). Checks '/etc' before writing to '/etc/rkt-resolv.conf' and creates it with default permissions if it doesn't exist.\n\n#### Other changes\n\n- godep: update cni to v0.2.3 ([#2618](https://github.com/rkt/rkt/pull/2618)).\n- godep: update appc/spec to v0.8.1 ([#2623](https://github.com/rkt/rkt/pull/2623), [#2611](https://github.com/rkt/rkt/pull/2611)).\n- dist: Update tmpfiles to create /etc/rkt ([#2472](https://github.com/rkt/rkt/pull/2472)). By creating this directory, users can run `rkt trust` without being root, if the user is in the rkt group.\n- Invoke gofmt with simplify-code flag ([#2489](https://github.com/rkt/rkt/pull/2489)). Enables code simplification checks of gofmt.\n- Implement composable uid/gid generators ([#2510](https://github.com/rkt/rkt/pull/2510)). This cleans up the code a bit and implements uid/gid functionality for rkt fly.\n- stage1: download CoreOS over HTTPS ([#2568](https://github.com/rkt/rkt/pull/2568)).\n- Documentation updates ([#2555](https://github.com/rkt/rkt/pull/2555), [#2609](https://github.com/rkt/rkt/pull/2609), [#2605](https://github.com/rkt/rkt/pull/2605), [#2578](https://github.com/rkt/rkt/pull/2578), [#2614](https://github.com/rkt/rkt/pull/2614), [#2579](https://github.com/rkt/rkt/pull/2579), [#2570](https://github.com/rkt/rkt/pull/2570)).\n- Test improvements ([#2613](https://github.com/rkt/rkt/pull/2613), [#2566](https://github.com/rkt/rkt/pull/2566), [#2508](https://github.com/rkt/rkt/pull/2508)).\n\n## v1.5.1\n\nThis release is a minor bug fix release.\n\n#### Bug fixes\n\n- rkt: fix bug where rkt errored out if the default data directory didn't exist [#2557](https://github.com/rkt/rkt/pull/2557).\n- kvm: fix docker volume semantics ([#2558](https://github.com/rkt/rkt/pull/2558)). When a Docker image exposes a mount point that is not mounted by a host volume, Docker volume semantics expect the files in the directory to be available to the application. This was not working properly in the kvm flavor and it's fixed now.\n- kvm: fix net long names ([#2543](https://github.com/rkt/rkt/pull/2543)). Handle network names that are longer than the maximum allowed by iptables in the kvm flavor.\n\n#### Other changes\n\n- minor tests and clean-ups ([#2551](https://github.com/rkt/rkt/pull/2551)).\n\n## v1.5.0\n\nThis release switches to pure systemd for running apps within a pod. This lays the foundation to implement enhanced isolation capabilities. For example, starting with v1.5.0, apps are started with more restricted capabilities. User namespace support and the KVM stage1 are not experimental anymore. Resource usage can be benchmarked using the new rkt-monitor tool.\n\n#### New features and UX changes\n\n- stage1: replace appexec with pure systemd ([#2493](https://github.com/rkt/rkt/pull/2493)). Replace functionality implemented in appexec with equivalent systemd options. This allows restricting the capabilities granted to apps in a pod and makes enabling other security features (per-app mount namespaces, seccomp filters...) easier.\n- stage1: restrict capabilities granted to apps ([#2493](https://github.com/rkt/rkt/pull/2493)). Apps in a pod receive now a [smaller set of capabilities](https://github.com/rkt/rkt/blob/v1.5.0/stage1/init/common/pod.go#L67).\n- rkt/image: render images on fetch ([#2398](https://github.com/rkt/rkt/pull/2398)). On systems with overlay fs support, rkt was delaying rendering images to the tree store until they were about to run for the first time which caused that first run to be slow for big images. When fetching as root, render the images right away so the first run is faster.\n\n#### Bug fixes\n\n- kvm: fix mounts regression ([#2530](https://github.com/rkt/rkt/pull/2530)). Cause - AppRootfsPath called with local \"root\" value was adding\nstage1/rootfs twice. After this change this is made properly.\n- rkt/image: strip \"Authorization\" on redirects to a different host ([#2465](https://github.com/rkt/rkt/pull/2465)). We now don't pass the \"Authorization\" header if the redirect goes to a different host, it can leak sensitive information to unexpected third parties.\n- stage1/init: interpret the string \"root\" as UID/GID 0 ([#2458](https://github.com/rkt/rkt/pull/2458)). This is a special case and it should work even if the image doesn't have /etc/passwd or /etc/group.\n\n#### Improved documentation\n\n- added benchmarks folder, benchmarks for v1.4.0 ([#2520](https://github.com/rkt/rkt/pull/2520)). Added the `Documentation/benchmarks` folder which includes a README that describes how rkt-monitor works and how to use it, and a file detailing the results of running rkt-monitor on each current workload with rkt v1.4.0.\n- minor documentation fixes ([#2455](https://github.com/rkt/rkt/pull/2455), [#2528](https://github.com/rkt/rkt/pull/2528), [#2511](https://github.com/rkt/rkt/pull/2511)).\n\n#### Testing\n\n- kvm: enable functional tests for kvm ([#2007](https://github.com/rkt/rkt/pull/2007)). This includes initial support for running functional tests on the `kvm` flavor.\n\n#### Other changes\n\n- benchmarks: added rkt-monitor benchmarks ([#2324](https://github.com/rkt/rkt/pull/2324)). This includes the code for a golang binary that can start rkt and watch its resource usage and bash scripts for generating a handful of test scenarios.\n- scripts: generate a Debian Sid ACI instead of using the Docker hub image ([#2471](https://github.com/rkt/rkt/pull/2471)). This is the first step to having an official release builder.\n- pkg/sys: add SYS_SYNCFS definition for ppc64/ppc64le ([#2443](https://github.com/rkt/rkt/pull/2443)). Added missing SYS_SYNCFS definition for ppc64 and ppc64le, fixing build failures on those architectures.\n- userns: not experimental anymore ([#2486](https://github.com/rkt/rkt/pull/2486)). Although it requires doing a recursive chown for each app, user namespaces work fine and shouldn't be marked as experimental.\n- kvm: not experimental anymore ([#2485](https://github.com/rkt/rkt/pull/2485)). The kvm flavor was initially introduced in rkt v0.8.0, no reason to mark it as experimental.\n\n## v1.4.0\n\nThis release includes a number of new features and bugfixes like a new config subcommand, man page, and bash completion generation during build time.\n\n#### New features and UX changes\n\n- config: add config subcommand ([#2405](https://github.com/rkt/rkt/pull/2405)). This new subcommand prints the current rkt configuration. It can be used to get i.e. authentication credentials. See rkt's [config subcommand](https://github.com/rkt/rkt/blob/master/Documentation/subcommands/config.md) documentation.\n\n- run: add `--user`/`--group` app flags to `rkt run` and `rkt prepare` allowing to override the user and group specified in the image manifest ([#2419](https://github.com/rkt/rkt/pull/2419)).\n\n- gc: Add flag 'mark-only' to mark garbage pods without deleting them ([#2400](https://github.com/rkt/rkt/pull/2400), [#2402](https://github.com/rkt/rkt/pull/2402)). This new flag moves exited/aborted pods to the exited-garbage/garbage directory but does not delete them. A third party application can use `rkt gc --mark-only=true` to mark exited pods as garbage without deleting them.\n\n- kvm: Add support for app capabilities limitation ([#2222](https://github.com/rkt/rkt/pull/2222)). By default kvm flavor has got enabled every capability inside pod. This patch adds support for a restricted set of capabilities inside a kvm flavor of rkt.\n\n- stage1/init: return exit code 1 on error ([#2383](https://github.com/rkt/rkt/pull/2383)). On error, stage1/init was returning a non-zero value between 1 and 7. This change makes it return status code 1 only.\n\n- api: Add 'CreatedAt', 'StartedAt' in pod's info returned by api service. ([#2377](https://github.com/rkt/rkt/pull/2377)).\n\n#### Improved documentation\n\n- Minor documentation fixes ([#2413](https://github.com/rkt/rkt/pull/2413), [#2395](https://github.com/rkt/rkt/pull/2395), [#2231](https://github.com/rkt/rkt/pull/2231)).\n\n- functional tests: Add new test with systemd-proxyd ([#2257](https://github.com/rkt/rkt/pull/2257)). Adds a new test and documentation how to use systemd-proxyd with rkt pods.\n\n#### Bug fixes\n\n- kvm: refactor volumes support ([#2328](https://github.com/rkt/rkt/pull/2328)). This allows users to share regular files as volumes in addition to directories.\n\n- kvm: fix rkt status ([#2415](https://github.com/rkt/rkt/pull/2415)). Fixes a regression bug were `rkt status` was no longer reporting the pid of the pod when using the kvm flavor.\n\n- Build actool for the *build* architecture ([#2372](https://github.com/rkt/rkt/pull/2372)). Fixes a cross compilation issue with acbuild.\n\n- rkt: calculate real dataDir path ([#2399](https://github.com/rkt/rkt/pull/2399)). Fixes garbage collection when the data directory specified by `--dir` contains a symlink component.\n\n- stage1/init: fix docker volume semantics ([#2409](https://github.com/rkt/rkt/pull/2409)). Fixes a bug in docker volume semantics when rkt runs with the option `--pod-manifest`. When a Docker image exposes a mount point that is not mounted by a host volume, Docker volume semantics expect the files in the directory to be available to the application. This was partially fixed in rkt 1.3.0 via [#2315](https://github.com/rkt/rkt/pull/2315) but the bug remained when rkt runs with the option `--pod-manifest`. This is now fully fixed.\n\n- rkt/image: check that discovery labels match manifest labels ([#2311](https://github.com/rkt/rkt/pull/2311)).\n\n- store: fix multi process with multi goroutines race on db ([#2391](https://github.com/rkt/rkt/pull/2391)). This was a bug when multiple `rkt fetch` commands were executed concurrently.\n\n- kvm: fix pid vs ppid usage ([#2396](https://github.com/rkt/rkt/pull/2396)). Fixes a bug in `rkt enter` in the kvm flavor causing an infinite loop.\n\n- kvm: Fix connectivity issue in macvtap networks caused by macvlan NICs having incorrect names ([#2181](https://github.com/rkt/rkt/pull/2181)).\n\n- tests: TestRktListCreatedStarted: fix timing issue causing the test to fail on slow machines ([#2366](https://github.com/rkt/rkt/pull/2366)).\n\n- rkt/image: remove redundant quotes in an error message ([#2379](https://github.com/rkt/rkt/pull/2379)).\n\n- prepare: Support 'ondisk' verification skip as documented by [the global options](https://github.com/rkt/rkt/blob/master/Documentation/commands.md#global-options) ([#2376](https://github.com/rkt/rkt/pull/2376)). Prior to this commit, rkt prepare would check the ondisk image even if the `--insecure-options=ondisk` flag was provided. This corrects that.\n\n#### Other changes\n\n- tests: skip TestSocketProxyd when systemd-socket-proxyd is not installed ([#2436](https://github.com/rkt/rkt/pull/2436)).\n\n- tests: TestDockerVolumeSemantics: more tests with symlinks ([#2394](https://github.com/rkt/rkt/pull/2394)).\n\n- rkt: Improve build shell script used in [continuous integration](https://github.com/rkt/rkt/blob/master/tests/README.md) ([#2394](https://github.com/rkt/rkt/pull/2394)).\n\n- protobuf: generate code using a script ([#2382](https://github.com/rkt/rkt/pull/2382)).\n\n- Generate manpages ([#2373](https://github.com/rkt/rkt/pull/2373)). This adds support for generating rkt man pages using `make manpages` and the bash completion file using `make bash-completion`, see the note for packagers below.\n\n- tests/aws.sh: add test for Fedora 24 ([#2340](https://github.com/rkt/rkt/pull/2340)).\n\n#### Note for packagers\n\nFiles generated from sources are no longer checked-in the git repository. Instead, packagers should build them:\n\n- Bash completion file, generated by `make bash-completion`\n- Man pages, generated by `make manpages`\n\n## v1.3.0\n\nThis release includes a number of new features and bugfixes like the long-awaited propagation of apps' exit status.\n\n#### New features and UX changes\n\n- Propagate exit status from apps inside the pod to rkt ([#2308](https://github.com/rkt/rkt/pull/2308)). Previously, if an app exited with a non-zero exit status, rkt's exit status would still be 0. Now, if an app fails, its exit status will be propagated to the outside. While this was partially implemented in some stage1 flavors since rkt v1.1.0, it now works in the default coreos flavor.\n- Check signatures for stage1 images by default, especially useful when stage1 images are downloaded from the Internet ([#2336](https://github.com/rkt/rkt/pull/2336)).\n This doesn't affect the following cases:\n  - The stage1 image is already in the store\n  - The stage1 image is in the default directory configured at build time\n  - The stage1 image is the default one and it is in the same directory as the rkt binary\n- Allow downloading of insecure public keys with the `pubkey` insecure option ([#2278](https://github.com/rkt/rkt/pull/2278)).\n- Implement Docker volume semantics ([#2315](https://github.com/rkt/rkt/pull/2315)). Docker volumes are initialized with the files in the image if they exist, unless a host directory is mounted there. Implement that behavior in rkt when it runs a Docker converted image.\n\n#### API service\n\n- Return the cgroup when getting information about running pods and add a new cgroup filter ([#2331](https://github.com/rkt/rkt/pull/2331)).\n\n#### Bug fixes\n\n- Avoid configuring more CPUs than the host has in the kvm flavor ([#2321](https://github.com/rkt/rkt/pull/2321)).\n- Fix a bug where the proxy configuration wasn't forwarded to docker2aci ([docker2aci#147](https://github.com/appc/docker2aci/pull/147)).\n\n#### Notes\n\n- This release drops support for go1.4.\n\n## v1.2.1\n\nThis release fixes a couple of bugs we missed in 1.2.0.\n\n#### Bug fixes\n\n- Do not error out if `/dev/ptmx` or `/dev/log` exist ([#2302](https://github.com/rkt/rkt/pull/2302)).\n- Vendor a release of go-systemd instead of current master ([#2306](https://github.com/rkt/rkt/pull/2306)).\n\n## v1.2.0\n\nThis release is an incremental release with numerous bug fixes.\n\n#### New features and UX changes\n\n- Add `--hostname` option to rkt run/run-prepared ([#2251](https://github.com/rkt/rkt/pull/2251)). This option allows setting the pod host name.\n\n#### Bug fixes\n\n- Fix deadlock while exiting a lkvm rkt pod ([#2191](https://github.com/rkt/rkt/pull/2191)).\n- SELinux fixes preparating rkt to work on Fedora with SELinux enabled ([#2247](https://github.com/rkt/rkt/pull/2247) and [#2262](https://github.com/rkt/rkt/pull/2262)).\n- Fix bug that occurs for some types of on-disk image corruption, making it impossible for the user run or garbage collect them ([#2180](https://github.com/rkt/rkt/issues/2180)).\n- Fix authentication issue when fetching from a private quay.io repository ([#2248](https://github.com/rkt/rkt/issues/2248)).\n- Allow concurrent image fetching ([#2239](https://github.com/rkt/rkt/pull/2239)).\n- Fix issue mounting volumes on images if the target path includes an absolute symlink ([#2290](https://github.com/rkt/rkt/pull/2290)).\n- Clean up dangling symlinks in `/var/log/journal` on garbage collection if running on systemd hosts ([#2289](https://github.com/rkt/rkt/pull/2289)).\n\n#### Note for 3rd party stage1 builders\n\n- The stage1 command line interface is versioned now. See the [implementors guide](https://github.com/rkt/rkt/blob/master/Documentation/devel/stage1-implementors-guide.md) for more information.\n\n## v1.1.0\n\nThis release is the first incremental release since 1.0. It includes bugfixes and some UX improvements.\n\n#### New features and UX changes\n\n- Add support for non-numerical UID/GID as specified in the appc spec ([#2159](https://github.com/rkt/rkt/pull/2159)). rkt can now start apps as the user and group specified in the [image manifest](https://github.com/appc/spec/blob/master/spec/aci.md#image-manifest-schema) with three different possible formats: a numeric UID/GID, a username and group name referring to the ACI's /etc/passwd and /etc/group, or a file path in the ACI whose owner will determine the UID/GID.\n- When an application terminates with a non-zero exit status, `rkt run` should return that exit status ([#2198](https://github.com/rkt/rkt/pull/2198)). This is now fixed in the [src and host flavors](https://github.com/rkt/rkt/blob/master/Documentation/build-configure.md#--with-stage1-flavors) with [systemd >= v227](https://lists.freedesktop.org/archives/systemd-devel/2015-October/034509.html) but not yet in the shipped coreos flavor.\n- Use exit status 2 to report usage errors ([#2149](https://github.com/rkt/rkt/pull/2149)).\n- Add support for tuning pod's network via the [CNI tuning plugin](https://github.com/appc/cni/blob/master/Documentation/tuning.md) ([#2140](https://github.com/rkt/rkt/pull/2140)). For example, this allows increasing the size of the listen queue for accepting new TCP connections (`net.core.somaxconn`) in the rkt pod.\n- Keep $TERM from the host when entering a pod ([#1962](https://github.com/rkt/rkt/pull/1962)). This fixes the command \"clear\" which previously was not working.\n\n#### Bug fixes\n- Socket activation was not working if the port on the host is different from the app port as set in the image manifest ([#2137](https://github.com/rkt/rkt/pull/2137)).\n- Fix an authentication failure when fetching images from private repositories in the official Docker registry ([#2197](https://github.com/rkt/rkt/pull/2197)).\n- Set /etc/hostname in kvm pods ([#2190](https://github.com/rkt/rkt/pull/2190)).\n\n## v1.0.0\n\nThis marks the first release of rkt recommended for use in production.\nThe command-line UX and on-disk format are considered stable and safe to develop against.\nAny changes to these interfaces will be backwards compatible and subject to formal deprecation.\nThe API is not yet completely stabilized, but is functional and suitable for use by early adopters.\n\n#### New features and UX changes\n\n- Add pod creation and start times to `rkt list` and `rkt status` ([#2030](https://github.com/rkt/rkt/pull/2030)). See [`rkt list`](https://github.com/rkt/rkt/blob/master/Documentation/subcommands/list.md) and [`rkt status`](https://github.com/rkt/rkt/blob/master/Documentation/subcommands/status.md) documentation.\n- The DNS configuration can now be passed to the pod via the command line ([#2040](https://github.com/rkt/rkt/pull/2040)). See [`DNS support`](https://github.com/rkt/rkt/blob/master/Documentation/networking.md#dns-support) documentation.\n- Errors are now structured, allowing for better control of the output ([#1937](https://github.com/rkt/rkt/pull/1937)). See [Error & Output](https://github.com/rkt/rkt/blob/master/Documentation/hacking.md#errors--output) for how a developer should use it.\n- All output now uses the new log package in `pkg/log` to provide a more clean and consistent output format and more helpful debug output ([#1937](https://github.com/rkt/rkt/pull/1937)).\n- Added configuration for stage1 image. Users can drop a configuration file to `/etc/rkt/stage1.d` (or to `stage1.d` in the user configuration directory) to tell rkt to use a different stage1 image name, version and location instead of build-time defaults ([#1977](https://github.com/rkt/rkt/pull/1977)).\n- Replaced the `--stage1-image` flag with a new set of flags. `--stage1-url`, `--stage-path`, `--stage1-name` do the usual fetching from remote if the image does not exist in the store. `--stage1-hash` takes the stage1 image directly from the store. `--stage1-from-dir` works together with the default stage1 images directory and is described in the next point ([#1977](https://github.com/rkt/rkt/pull/1977)).\n- Added default stage1 images directory. User can use the newly added `--stage1-from-dir` parameter to avoid typing the full path. `--stage1-from-dir` behaves like `--stage1-path` ([#1977](https://github.com/rkt/rkt/pull/1977)).\n- Removed the deprecated `--insecure-skip-verify` flag ([#2068](https://github.com/rkt/rkt/pull/2068)).\n- Fetched keys are no longer automatically trusted by default, unless `--trust-keys-from-https` is used. Additionally, newly fetched keys have to be explicitly trusted with `rkt trust` if a previous key was trusted for the same image prefix ([#2033](https://github.com/rkt/rkt/pull/2033)).\n- Use NAT loopback to make ports forwarded in pods accessible from localhost ([#1256](https://github.com/rkt/rkt/issues/1256)).\n- Show a clearer error message when unprivileged users execute commands that require root privileges ([#2081](https://github.com/rkt/rkt/pull/2081)).\n- Add a rkt tmpfiles configuration file to make the creation of the rkt data directory on first boot easier ([#2088](https://github.com/rkt/rkt/pull/2088)).\n- Remove `rkt install` command. It was replaced with a `setup-data-dir.sh` script ([#2101](https://github.com/rkt/rkt/pull/2101).\n\n#### Bug fixes\n\n- Fix regression when authenticating to v2 Docker registries ([#2008](https://github.com/rkt/rkt/issues/2008)).\n- Don't link to libacl, but dlopen it ([#1963](https://github.com/rkt/rkt/pull/1963)). This means that rkt will not crash if libacl is not present on the host, but it will just print a warning.\n- Only suppress diagnostic messages, not error messages in stage1 ([#2111](https://github.com/rkt/rkt/pull/2111)).\n\n#### Other changes\n\n- Trusted Platform Module logging (TPM) is now enabled by default ([#1815](https://github.com/rkt/rkt/issues/1815)). This ensures that rkt benefits from security features by default. See rkt's [Build Configuration](https://github.com/rkt/rkt/blob/master/Documentation/build-configure.md#security) documentation.\n- Added long descriptions to all rkt commands ([#2098](https://github.com/rkt/rkt/issues/2098)).\n\n#### Migration\n\n- The `--stage1-image` flag was removed. Scripts using it should be updated to use one of `--stage1-url`, `--stage1-path`, `--stage1-name`, `--stage1-hash` or `--stage1-from-dir`\n- All uses of the deprecated `--insecure-skip-verify` flag should be replaced with the `--insecure-options` flag which allows user to selectively disable security features.\n- The `rkt install` command was removed in favor of the `dist/scripts/setup-data-dir.sh` script.\n\n#### Note for packagers\n\nWith this release, `rkt` RPM/dpkg packages should have the following updates:\n\n- Pass `--enable-tpm=no` to configure script, if `rkt` should not use TPM.\n- Use the `--with-default-stage1-images-directory` configure flag, if the default is not acceptable and install the built stage1 images there.\n- Distributions using systemd: install the new file `dist/init/systemd/tmpfiles.d/rkt.conf` in `/usr/lib/tmpfiles.d/rkt.conf` and then run `systemd-tmpfiles --create rkt.conf`. This can replace running `rkt install` to set the correct ownership and permissions.\n\n## v0.16.0\n\n#### New features and UX changes\n\n- Explicitly allow http connections via a new 'http' option to `--insecure-options` ([#1945](https://github.com/rkt/rkt/pull/1945)). Any data and credentials will be sent in the clear.\n- When using `bash`, `rkt` commands can be auto-completed ([#1955](https://github.com/rkt/rkt/pull/1955)).\n- The executables given on the command line via the `--exec` parameters don't need to be absolute paths anymore ([#1953](https://github.com/rkt/rkt/pull/1953)). This change reflects an update in the appc spec since [v0.7.2](https://github.com/appc/spec/releases/tag/v0.7.2). See rkt's [rkt run --exec](https://github.com/rkt/rkt/blob/master/Documentation/subcommands/run.md#overriding-executable-to-launch) documentation.\n- Add a `--full` flag to rkt fetch so it returns full hash of the image ([#1976](https://github.com/rkt/rkt/pull/1976)).\n- There is a new global flag for specifying the user configuration directory, `--user-config`. It overrides whatever is configured in system and local configuration directories. It can be useful for specifying different credentials for fetching images without putting them in a globally visible directory like `/etc/rkt`. See rkt's [Global Options](https://github.com/rkt/rkt/blob/master/Documentation/commands.md#global-options) documentation ([#1981](https://github.com/rkt/rkt/pull/1981)).\n- As a temporary fix, search for network plugins in the local configuration directory too ([#2005](https://github.com/rkt/rkt/pull/2005)).\n- Pass the environment defined in the image manifest to the application when using the fly stage1 image ([#1989](https://github.com/rkt/rkt/pull/1989)).\n\n#### Build improvements\n\n- Fix vagrant rkt build ([#1960](https://github.com/rkt/rkt/pull/1960)).\n- Switch to using unrewritten imports, this will allow rkt packages to be cleanly vendored by other projects ([#2014](https://github.com/rkt/rkt/pull/2014)).\n\n#### API service\n\n- Allow filtering images by name ([#1985](https://github.com/rkt/rkt/pull/1985)).\n\n#### Bug fixes\n\n- Fix bug where the wrong image signature was checked when using dependencies ([#1991](https://github.com/rkt/rkt/pull/1991)).\n\n#### Test improvements\n\n- A new script to run test on AWS makes it easier to test under several distributions: CentOS, Debian, Fedora, Ubuntu ([#1925](https://github.com/rkt/rkt/pull/1925)).\n- The functional tests now skip user namespace tests when user namespaces do not work ([#1947](https://github.com/rkt/rkt/pull/1947)).\n- Check that rkt is not built with go 1.5.{0,1,2} to make sure it's not vulnerable to CVE-2015-8618 ([#2006](https://github.com/rkt/rkt/pull/2006)).\n\n#### Other changes\n\n- Cleanups in the kvm stage1 ([#1895](https://github.com/rkt/rkt/pull/1895)).\n- Document stage1 filesystem layout for developers ([#1832](https://github.com/rkt/rkt/pull/1832)).\n\n#### Note for packagers\n\nWith this release, `rkt` RPM/dpkg packages should have the following updates:\n\n- Install the new file `dist/bash_completion/rkt.bash` in `/etc/bash_completion.d/`.\n\n## v0.15.0\n\nrkt v0.15.0 is an incremental release with UX improvements, bug fixes, API service enhancements and new support for Go 1.5.\n\n#### New features and UX changes\n\n- Images can now be deleted from the store by both ID and name ([#1866](https://github.com/rkt/rkt/pull/1866)). See rkt's [rkt image rm](https://github.com/rkt/rkt/blob/master/Documentation/subcommands/image.md#rkt-image-rm) documentation.\n- The journals of rkt pods can now be accessed by members of the Unix group rkt ([#1877](https://github.com/rkt/rkt/pull/1877)). See rkt's [journalctl -M](https://github.com/rkt/rkt/blob/master/Documentation/using-rkt-with-systemd.md#journalctl--m) documentation.\n\n#### Improved documentation\n\n- Mention [rkt integration in Nomad](https://github.com/rkt/rkt/blob/master/Documentation/using-rkt-with-nomad.md) ([#1884](https://github.com/rkt/rkt/pull/1884)).\n- Document [how to start the api service](https://github.com/rkt/rkt/blob/master/Documentation/subcommands/api-service.md) and add a [program example](https://github.com/rkt/rkt/blob/master/api/v1alpha/client_example.go) explaining how the api service can be used to integrate rkt with other programs ([#1915](https://github.com/rkt/rkt/pull/1915)).\n\n#### API service\n\n- Programs using rkt's API service are now provided with the size of the images stored in rkt's store ([#1916](https://github.com/rkt/rkt/pull/1916)).\n- Programs using rkt's API service are now provided with any annotations found in the [image manifest](https://github.com/appc/spec/blob/master/spec/aci.md#image-manifest-schema) and [pod manifest](https://github.com/appc/spec/blob/master/spec/pods.md#pod-manifest-schema) ([#1924](https://github.com/rkt/rkt/pull/1924)).\n- Fix a panic in the API service by making the store database thread-safe ([#1892](https://github.com/rkt/rkt/pull/1892)) and by refactoring the API service functions to get the pod state ([#1893](https://github.com/rkt/rkt/pull/1893)).\n\n#### Build improvements\n\n- Add support for building rkt with Go 1.5, which is now the preferred version. rkt can still be built with Go 1.4 as best effort ([#1907](https://github.com/rkt/rkt/pull/1907)). As part of the move to Go 1.5, rkt now has a godep-save script to support Go 1.5 ([#1857](https://github.com/rkt/rkt/pull/1857)).\n- Continuous Integration on Travis now builds with both Go 1.4.2 and Go 1.5.2. Go 1.4.3 is avoided to workaround recent problems with go vet ([#1941](https://github.com/rkt/rkt/pull/1941)).\n\n#### Bug fixes\n\n- Fix regression issue when downloading image signatures from quay.io ([#1909](https://github.com/rkt/rkt/pull/1909)).\n- Properly cleanup the tap network interface that were not cleaned up in some error cases when using the kvm stage1 ([#1921](https://github.com/rkt/rkt/pull/1921)).\n- Fix a bug in the 9p filesystem used by the kvm stage1 that were preventing `apt-get` from working propertly ([#1918](https://github.com/rkt/rkt/pull/1918)).\n\n## v0.14.0\n\nrkt v0.14.0 brings new features like resource isolators in the kvm stage1, a new stage1 flavor called *fly*, bug fixes and improved documentation.\nThe appc spec version has been updated to v0.7.4\n\n#### New features and UX changes\n\n- The data directory that rkt uses can now be configured with a config file ([#1806](https://github.com/rkt/rkt/pull/1806)). See rkt's [paths configuration](https://github.com/rkt/rkt/blob/master/Documentation/configuration.md#rktkind-paths) documentation.\n- CPU and memory resource isolators can be specified on the command line to override the limits specified in the image manifest ([#1851](https://github.com/rkt/rkt/pull/1851), [#1874](https://github.com/rkt/rkt/pull/1874)). See rkt's [overriding isolators](https://github.com/rkt/rkt/blob/master/Documentation/subcommands/run.md#overriding-isolators) documentation.\n- CPU and memory resource isolators can now be used within the kvm stage1 ([#1404](https://github.com/rkt/rkt/pull/1404))\n- The `rkt image list` command can now display the image size ([#1865](https://github.com/rkt/rkt/pull/1865)).\n- A new stage1 flavor has been added: fly; and it represents the first experimental implementation of the upcoming rkt fly feature. ([#1833](https://github.com/rkt/rkt/pull/1833))\n\n#### Build improvements\n\n- It is now possible to build rkt inside rkt ([#1681](https://github.com/rkt/rkt/pull/1681)). This should improve the reproducibility of builds. This release does not use it yet but it is planned for future releases.\n- Linux distribution packagers can override the version of stage1 during the build ([#1821](https://github.com/rkt/rkt/pull/1821)). This is needed for any Linux distributions that might carry distro-specific patches along the upstream release. See rkt's documentation about [building stage1 flavors](https://github.com/rkt/rkt/blob/master/Documentation/build-configure.md#--with-stage1-flavors-version-override).\n- Smaller build improvements with dep generation ([#1838](https://github.com/rkt/rkt/pull/1838)), error messages on `make clean` ([#1850](https://github.com/rkt/rkt/pull/1850)), dependency checks in the kvm flavor ([#1860](https://github.com/rkt/rkt/pull/1860))\n\n#### Bug fixes\n\n- rkt is now able to override the application command with `--exec` when the application manifest didn't specify any command ([#1843](https://github.com/rkt/rkt/pull/1843)).\n- In some cases, user namespaces were not working in Linux distributions without systemd, such as Ubuntu 14.04 LTS. This is fixed by creating a unique cgroup for each pod when systemd is not used ([#1844](https://github.com/rkt/rkt/pull/1844))\n- rkt's tar package didn't prefix the destination file correctly when using hard links in images. This was not a issue in rkt itself but was causing acbuild to misbehave ([#1852](https://github.com/rkt/rkt/pull/1852)).\n- ACIs with multiple dependencies can end up depending on the same base image through multiple paths. In some of those configuration with multiple dependencies, fetching the image via image discovery was not working. This is fixed and a new test ensures it will keep working ([#1822](https://github.com/rkt/rkt/pull/1822)).\n- The pod cgroups were misconfigured when systemd-devel is not installed. This was causing per-app CPU and memory isolators to be ineffective on those systems. This is now fixed but will require an additional fix for NixOS ([#1873](https://github.com/rkt/rkt/pull/1873)).\n- During the garbage collection of pods (`rkt gc`), all mounts will be umounted even when the pod is in an inconsistent state ([#1828](https://github.com/rkt/rkt/pull/1828), [#1856](https://github.com/rkt/rkt/pull/1856))\n\n#### Improved documentation\n\n- New documentation about configure flags ([#1824](https://github.com/rkt/rkt/pull/1824)). This also includes formatting and typos fixes and updates. The examples about rkt's configuration files are also clarified ([#1847](https://github.com/rkt/rkt/pull/1847)).\n- New documentation explaining [how cgroups are used by rkt](https://github.com/rkt/rkt/blob/master/Documentation/devel/cgroups.md) ([#1870](https://github.com/rkt/rkt/pull/1870)). This should make it easier for software developers to integrate rkt with monitoring software.\n\n#### API service\n\n- The API service is meant to be used by orchestration tools like Kubernetes. The performance of the API service was improved by reducing the round-trips in the ListPods and ListImages requests ([#1786](https://github.com/rkt/rkt/pull/1786)). Those requests also gained multiple filters for more flexibility ([#1853](https://github.com/rkt/rkt/pull/1853)).\n\n## v0.13.0\n\nThe primary motivation for this release is to add support for fetching images on the Docker Registry 2.0. It also includes other small improvements.\n\n- docker2aci: support Docker Registry 2.0 ([#1826](https://github.com/rkt/rkt/pull/1826))\n- always use https:// when fetching docker images ([#1837](https://github.com/rkt/rkt/pull/1837))\n- stage0: add container hash data into TPM ([#1775](https://github.com/rkt/rkt/pull/1775))\n- host flavor: fix systemd copying into stage1 for Debian packaging ([#1811](https://github.com/rkt/rkt/pull/1811))\n- clarify network error messages ([#1707](https://github.com/rkt/rkt/pull/1707))\n- documentation: add more build-time requirements ([#1834](https://github.com/rkt/rkt/pull/1834))\n\n## v0.12.0\n\nrkt v0.12.0 is an incremental release with UX improvements like fine-grained security controls and implicit generation of empty volumes, performance improvements, bug fixes and testing enhancements.\n\n#### New features and UX changes\n\n- implement `rkt cat-manifest` for pods ([#1744](https://github.com/rkt/rkt/pull/1744))\n- generate an empty volume if a required one is not provided ([#1753](https://github.com/rkt/rkt/pull/1753))\n- make disabling security features granular; `--insecure-skip-verify` is now `--insecure-options={feature(s)-to-disable}` ([#1738](https://github.com/rkt/rkt/pull/1738)). See rkt's [Global Options](https://github.com/rkt/rkt/blob/master/Documentation/commands.md#global-options) documentation.\n- allow skipping the on-disk integrity check using `--insecure-options=ondisk`. This greatly speeds up start time. ([#1804](https://github.com/rkt/rkt/pull/1804))\n- set empty volumes' permissions following the [spec](https://github.com/appc/spec/blob/master/spec/pods.md#pod-manifest-schema) ([1803](https://github.com/rkt/rkt/pull/1803))\n- flannel networking support in kvm flavor ([#1563](https://github.com/rkt/rkt/pull/1563))\n\n#### Bug fixes\n\n- store used MCS contexts on the filesystem ([#1742](https://github.com/rkt/rkt/pull/1742))\n- fix Docker images with whiteout-ed hard links ([#1653](https://github.com/rkt/rkt/pull/1653))\n- fix Docker images relying on /dev/stdout ([#1617](https://github.com/rkt/rkt/pull/1617))\n- use authentication for discovery and trust ([#1801](https://github.com/rkt/rkt/pull/1801))\n- fix build in Docker ([#1798](https://github.com/rkt/rkt/pull/1798))\n- fix kvm networking ([#1530](https://github.com/rkt/rkt/pull/1530))\n\n#### Improved testing\n\n- add functional tests for rkt api service ([#1761](https://github.com/rkt/rkt/pull/1761))\n- fix TestSocketActivation on systemd-v219 ([#1768](https://github.com/rkt/rkt/pull/1768))\n- fix the ACE validator test ([#1802](https://github.com/rkt/rkt/pull/1802))\n\n#### Other changes\n\n- Bumped appc spec to 0.7.3 ([#1800](https://github.com/rkt/rkt/pull/1800))\n\n## v0.11.0\n\nrkt v0.11.0 is an incremental release with mostly bug fixes and testing improvements.\n\n#### New features and UX changes\n\n- support resuming ACI downloads ([#1444](https://github.com/rkt/rkt/pull/1444))\n- `rkt image gc` now also removes images from the store ([#1697](https://github.com/rkt/rkt/pull/1697))\n\n#### Build\n\n- handle building multiple flavors ([#1683](https://github.com/rkt/rkt/pull/1683))\n- verbosity control ([#1685](https://github.com/rkt/rkt/pull/1685), [#1686](https://github.com/rkt/rkt/pull/1686))\n- fix bugs in `make clean` ([#1695](https://github.com/rkt/rkt/pull/1695))\n\n#### Improved testing\n\n- nicer output in tests ([#1698](https://github.com/rkt/rkt/pull/1698))\n- refactor test code ([#1709](https://github.com/rkt/rkt/pull/1709))\n- skip CI tests when the source was not modified ([#1619](https://github.com/rkt/rkt/pull/1619))\n- better output when tests fail ([#1728](https://github.com/rkt/rkt/pull/1728))\n- fix tests in `10.*` IP range ([#1736](https://github.com/rkt/rkt/pull/1736))\n- document how to run functional tests ([#1736](https://github.com/rkt/rkt/pull/1736))\n\n#### Improved documentation\n\n- add some help on how to run rkt as a daemon ([#1684](https://github.com/rkt/rkt/pull/1684))\n\n#### API service\n\n- do not return manifest in `ListPods()` and `ListImages()` ([#1688](https://github.com/rkt/rkt/pull/1688))\n\n#### Bug fixes\n\n- parameter `--mount` fixed in kvm flavour ([#1687](https://github.com/rkt/rkt/pull/1687))\n- fix rkt leaking containers in machinectl on CoreOS ([#1694](https://github.com/rkt/rkt/pull/1694), [#1704](https://github.com/rkt/rkt/pull/1704))\n- `rkt status` now returns the stage1 pid ([#1699](https://github.com/rkt/rkt/pull/1699))\n- fix crash in `rkt status` when an image is removed ([#1701](https://github.com/rkt/rkt/pull/1701))\n- fix fd leak in store ([#1716](https://github.com/rkt/rkt/pull/1716))\n- fix exec line parsing in ACI manifest ([#1652](https://github.com/rkt/rkt/pull/1652))\n- fix build on 32-bit systems ([#1729](https://github.com/rkt/rkt/pull/1729))\n\n## v0.10.0\n\nrkt v0.10.0 is an incremental release with numerous bug fixes and a few small new features and UX improvements.\n\n#### New features and UX changes\n\n- added implementation for basic API service (`rkt api-service`) ([#1508](https://github.com/rkt/rkt/pull/1508))\n- mount arbitrary volumes with `--mount` ([#1582](https://github.com/rkt/rkt/pull/1582), [#1678](https://github.com/rkt/rkt/pull/1678))\n- `--net=none` only exposes the loopback interface ([#1635](https://github.com/rkt/rkt/pull/1635))\n- better formatting for rkt help ([#1597](https://github.com/rkt/rkt/pull/1597))\n- metadata service registration (`--mds-register`) disabled by default ([#1635](https://github.com/rkt/rkt/pull/1635))\n\n#### Improved documentation\n- [compare rkt and other projects](https://github.com/rkt/rkt/blob/master/Documentation/rkt-vs-other-projects.md) ([#1588](https://github.com/rkt/rkt/pull/1588))\n- [Stage1 systemd Architecture](https://github.com/rkt/rkt/blob/master/Documentation/devel/architecture.md) ([#1631](https://github.com/rkt/rkt/pull/1631))\n- [packaging rkt in Linux distributions](https://github.com/rkt/rkt/blob/master/Documentation/packaging.md) ([#1511](https://github.com/rkt/rkt/pull/1511))\n\n#### Improved testing\n- new test for user namespaces (`--private-users`) ([#1580](https://github.com/rkt/rkt/pull/1580))\n- fix races in tests ([#1608](https://github.com/rkt/rkt/pull/1608))\n\n#### Bug fixes\n- suppress unnecessary output when `--debug` is not used ([#1557](https://github.com/rkt/rkt/pull/1557))\n- fix permission of rootfs with overlayfs ([#1607](https://github.com/rkt/rkt/pull/1607))\n- allow relative path in parameters ([#1615](https://github.com/rkt/rkt/pull/1615))\n- fix pod garbage collection failure in some cases ([#1621](https://github.com/rkt/rkt/pull/1621))\n- fix `rkt list` when an image was removed ([#1655](https://github.com/rkt/rkt/pull/1655))\n- user namespace (`--private-users`) regression with rkt group fixed ([#1654](//github.com/rkt/rkt/pull/1654))\n\n## v0.9.0\n\nrkt v0.9.0 is a significant milestone release with a number of internal and user-facing changes.\n\nThere are several notable breaking changes from the previous release:\n- The on-disk format for pod trees has changed slightly, meaning that `rkt gc` and `rkt run-prepared` may not work for pods created by previous versions of rkt. To work around this, we recommend removing the pods with an older version of rkt.\n- The `--private-net` flag has been renamed to `--net` and its semantic has changed (in particular, it is now enabled by default) - see below for details.\n- Several changes to CLI output (e.g. column names) from the `rkt list` and `rkt image list` subcommands.\n- The image fetching behaviour has changed, with the introduction of new flags to `rkt run` and `rkt fetch` and the removal of `--local` - see below for details.\n\n#### New features and UX changes\n\n###### `--private-net` --> `--net`, and networking is now private by default\nThe `--private-net` flag has been changed to `--net`, and has been now made the default behaviour. ([#1532](https://github.com/rkt/rkt/pull/1532), [#1418](https://github.com/rkt/rkt/pull/1418))\nThat is, a `rkt run` command will now by default set up a private network for the pod.\nTo achieve the previous default behaviour of the pod sharing the networking namespace of the host, use `--net=host`.\nThe flag still allows the specification of multiple networks via CNI plugins, and overriding plugin configuration on a per-network basis.\nFor more details, see the [networking documentation](Documentation/networking.md).\n\n###### New image fetching behaviour\nWhen fetching images during `rkt fetch` or `rkt run`, rkt would previously behave inconsistently for different formats (e.g when performing discovery or when retrieving a Docker image) when deciding whether to use a cached version or not.\n`rkt run` featured a `--local` flag to adjust this behaviour but it provided an unintuitive semantic and was not available to the `rkt fetch` command.\nInstead, rkt now features two new flags, `--store-only` and `--no-store`, on both the `rkt fetch` and `rkt run` commands, to provide more consistent, controllable, and predictable behaviour regarding when images should be retrieved.\nFor full details of the new behaviour see the [image fetching documentation](Documentation/image-fetching-behavior.md).\n\n###### Unprivileged users\nA number of changes were made to the permissions of rkt's internal store to facilitate unprivileged users to access information about images and pods on the system ([#1542](https://github.com/rkt/rkt/pull/1542), [#1569](https://github.com/rkt/rkt/pull/1569)).\nIn particular, the set-group-ID bit is applied to the directories touched by `rkt install` so that the `rkt` group (if it exists on the system) can retain read-access to information about pods and images.\nThis will be used by the rkt API service (targeted for the next release) so that it can run as an unprivileged user on the system.\nThis support is still considered partially experimental.\nSome tasks like `rkt image gc` remain a root-only operation.\n\n###### /etc/hosts support\nIf no `/etc/hosts` exists in an application filesystem at the time it starts running, rkt will now provide a basic default version of this file.\nIf rkt detects one already in the app's filesystem (whether through being included in an image, or a volume mounted in), it will make no changes. ([#1541](https://github.com/rkt/rkt/pull/1541))\n\n##### Other new features\n- rkt now supports setting supplementary group IDs on processes ([#1514](https://github.com/rkt/rkt/pull/1514)).\n- rkt's use of cgroups has been reworked to facilitate rkt running on a variety of operating systems like Void and older non-systemd distributions ([#1437](https://github.com/rkt/rkt/pull/1437), [#1320](https://github.com/rkt/rkt/pull/1320), [#1076](https://github.com/rkt/rkt/pull/1076), [#1042](https://github.com/rkt/rkt/pull/1042))\n- If `rkt run` is used with an image that does not have an app section, rkt will now create one if the user provides an `--exec` flag ([#1427](https://github.com/rkt/rkt/pull/1427))\n- A new `rkt image gc` command adds initial support for garbage collecting images from the store ([#1487](https://github.com/rkt/rkt/pull/1487)). This removes treeStores not referenced by any non-GCed rkt pod.\n- `rkt list` now provides more information including image version and hash ([#1559](https://github.com/rkt/rkt/pull/1559))\n- `rkt image list` output now shows shortened hash identifiers by default, and human readable date formats.\n  To use the previous output format, use the `--full` flag. ([#1455](https://github.com/rkt/rkt/pull/1455))\n- `rkt prepare` gained the `--exec` flag, which restores flag-parity with `rkt run` ([#1410](https://github.com/rkt/rkt/pull/1410))\n- lkvm stage1 backend has experimental support for `rkt enter` ([#1303](https://github.com/rkt/rkt/pull/1303))\n- rkt now supports empty volume types ([#1502](https://github.com/rkt/rkt/pull/1502))\n- An early, experimental read-only API definition has been added ([#1359](https://github.com/rkt/rkt/pull/1359), [#1518](https://github.com/rkt/rkt/pull/1518)).\n\n#### Bug fixes\n- Fixed bug in `--stage1-image` option which prevented it from using URLs ([#1524](https://github.com/rkt/rkt/pull/1524))\n- Fixed bug in `rkt trust`'s handling of `--root` ([#1494](https://github.com/rkt/rkt/pull/1494))\n- Fixed bug when decompressing xz-compressed images ([#1462](https://github.com/rkt/rkt/pull/1462), [#1224](https://github.com/rkt/rkt/pull/1224))\n- In earlier versions of rkt, hooks had an implicit timeout of 30 seconds, causing some pre-start jobs which took a long time to be killed. This implicit timeout has been removed. ([#1547](https://github.com/rkt/rkt/pull/1547))\n- When running with the lkvm stage1, rkt now sets `$HOME` if it is not already set, working around a bug in the lkvm tool ([#1447](https://github.com/rkt/rkt/pull/1447), [#1393](https://github.com/rkt/rkt/pull/1393))\n- Fixed bug preventing `run-prepared` from working if the metadata service was not available ([#1436](https://github.com/rkt/rkt/pull/1436))\n\n#### Other changes\n- Bumped appc spec to 0.7.1 ([#1543](https://github.com/rkt/rkt/pull/1543))\n- Bumped CNI and netlink dependencies ([#1476](https://github.com/rkt/rkt/pull/1476))\n- Bumped ioprogress to a version which prevents the download bar from being drawn when rkt is not drawing to a terminal ([#1423](https://github.com/rkt/rkt/pull/1423), [#1282](https://github.com/rkt/rkt/pull/1282))\n- Significantly reworked rkt's internal use of systemd to orchestrate apps, which should facilitate more granular control over pod lifecycles ([#1407](https://github.com/rkt/rkt/pull/1407))\n- Reworked rkt's handling of images with non-deterministically dependencies ([#1240](https://github.com/rkt/rkt/pull/1240), [#1198](https://github.com/rkt/rkt/pull/1198)).\n- rkt functional tests now run appc's ACE validator, which should ensure that rkt is always compliant with the specification. ([#1473](https://github.com/rkt/rkt/pull/1473))\n- A swathe of improvements to the build system\n  - `make clean` should now work\n  - Different rkt stage1 images are now built with different names ([#1406](https://github.com/rkt/rkt/pull/1406))\n  - rkt can now build on older Linux distributions (like CentOS 6) ([#1529](https://github.com/rkt/rkt/pull/1529))\n- Various internal improvements to the functional test suite to improve coverage and consolidate code\n- The \"ACI\" field header in `rkt image` output has been changed to \"IMAGE NAME\"\n- `rkt image rm` now exits with status 1 on any failure ([#1486](https://github.com/rkt/rkt/pull/1486))\n- Fixed permissions in the default stage1 image ([#1503](https://github.com/rkt/rkt/pull/1503))\n- Added documentation for `prepare` and `run-prepared` subcommands ([#1526](https://github.com/rkt/rkt/pull/1526))\n- rkt should now report more helpful errors when encountering manifests it does not understand ([#1471](https://github.com/rkt/rkt/pull/1471))\n\n\n## v0.8.1\n\nrkt v0.8.1 is an incremental release with numerous bug fixes and clean-up to the build system. It also introduces a few small new features and UX improvements.\n\n- New features and UX changes:\n  - `rkt rm` is now variadic: it can now remove multiple pods in one command, by UUID\n  - The `APPNAME` column in `rkt image list` output has been changed to the more accurate `NAME`. This involves a schema change in rkt's on-disk datastore, but this should be upgraded transparently.\n  - Headers are now sent when following HTTP redirects while trying to retrieve an image\n  - The default metadata service port number was changed from a registered/reserved IANA port to an arbitrary port in the non-dynamic range\n  - Added the ability to override arguments for network plugins\n  - rkt will now error out if someone attempts to use `--private-users` with the lkvm backend\n- Bug fixes:\n  - Fixed creation of /tmp in apps' root filesystems with correct permissions\n  - Fixed garbage collection after umounts (for example, if a system reboots before a pod is cleanly destroyed)\n  - Fixed a race in interactive mode when using the lkvm backend that could cause a deadlock or segfault\n  - Fixed bad parameter being passed to the metadata service (\"uid\" -> \"uuid\")\n  - Fixed setting of file permissions during stage1 set up\n  - Fixed a potential race condition during simultaneous `iptables` invocation\n  - Fixed ACI download progress being sent to stderr instead of stdout, now consistent with the output during retrieval of Docker images\n  - `rkt help prepare` will now show the correct default stage1 image\n  - rkt will refuse to add isolators with nil Limits, preventing a panic caused by an ambiguity in upstream appc schema\n- Other changes:\n  - Reworked the SELinux implementation to use `systemd-nspawn`'s native context-switching feature\n  - Added a workaround for a bug in Docker <1.8 when it is run on the same system as rkt (see https://github.com/rkt/rkt/issues/1210#issuecomment-132793300)\n  - Added a `rkt-xxxx-tapN` name to tap devices that rkt creates\n  - Functional tests now clean intermediate images between tests\n  - Countless improvements and cleanup to the build system\n  - Numerous documentation improvements, including splitting out all top-level `rkt` subcommands into their own documents\n\n## v0.8.0\n\nrkt 0.8.0 includes support for running containers under an LKVM hypervisor\nand experimental user namespace support.\n\nFull changelog:\n\n- Documentation improvements\n- Better integration with systemd:\n - journalctl -M\n - machinectl {reboot,poweroff}\n- Update stage1's systemd to v222\n- Add more functional tests\n- Build system improvements\n- Fix bugs with garbage-collection\n- LKVM stage1 support with network and volumes\n- Smarter image discovery: ETag and Cache-Control support\n- Add CNI DHCP plugin\n- Support systemd socket activation\n- Backup CAS database when migrating\n- Improve error messages\n- Add the ability to override ACI exec\n- Optimize rkt startup times when a stage1 is present in the store\n- Trust keys fetched via TLS by default\n- Add the ability to garbage-collect a specific pod\n- Add experimental user namespace support\n- Bugfixes\n\n## v0.7.0\n\nrkt 0.7.0 includes new subcommands for `rkt image` to manipulate images from\nthe local store.\n\nIt also has a new build system based on autotools and integration with SELinux.\n\nFull changelog:\n\n- New subcommands for `rkt image`: extract, render and export\n- Metadata service:\n  - Auth now based on tokens\n  - Registration done by default, unless --mds-register=false is passed\n- Build:\n  - Remove support for Go 1.3\n  - Replace build system with autoconf and make\n- Network: fixes for plugins related to mnt namespace\n- Signature: clearer error messages\n- Security:\n  - Support for SELinux\n  - Check signature before downloading\n- Commands: fix error messages and parameter parsing\n- Output: reduce output verbosity\n- Systemd integration: fix stop bug\n- Tests: Improve tests output\n\n## v0.6.1\n\nThe highlight of this release is the support of per-app memory and CPU\nisolators. This means that, in addition to restricting a pod's CPU and memory\nusage, individual apps inside a pod can also be restricted now.\n\nrkt 0.6.1 also includes a new CLI/subcommand framework, more functional testing\nand journalctl integration by default.\n\nFull changelog:\n\n* Updated to v0.6.1 of the appc spec\n* support per-app memory and CPU isolators\n* allow network selection to the --private-net flag which can be useful for\n  grouping certain pods together while separating others\n* move to the Cobra CLI/subcommand framework\n* per-app logging via journalctl now supported by default\n* stage1 runs an unpatched systemd v220\n* to help packagers, rkt can generate stage1 from the binaries on the host at\n  runtime\n* more functional tests\n* bugfixes\n\n## v0.5.6\n\nrkt 0.5.6 includes better integration with systemd on the host, some minor bug\nfixes and a new ipvlan network plugin.\n\n- Updated to v0.5.2 of the appc spec\n- support running from systemd unit files for top-level isolation\n- support per-app logging via journalctl. This is only supported if stage1 has\n  systemd v219 or v220\n- add ipvlan network plugin\n- new rkt subcommand: cat-manifest\n- extract ACI in a chroot to avoid malformed links modifying the host\n  filesystem\n- improve rkt error message if the user doesn't provide required volumes\n- fix rkt status when using overlayfs\n- support for some arm architectures\n- documentation improvements\n\n\n## v0.5.5\n\nrkt 0.5.5 includes a move to [cni](https://github.com/appc/cni) network\nplugins, a number of minor bug fixes and two new experimental commands for\nhandling images: `rkt images` and `rkt rmimage`.\n\nFull changelog:\n- switched to using [cni](https://github.com/appc/cni) based network plugins\n- fetch images dependencies recursively when ACIs have dependent images\n- fix the progress bar used when downloading images with no content-length\n- building the initial stage1 can now be done on various versions of systemd\n- support retrying signature downloads in the case of a 202\n- remove race in doing a rkt enter\n- various documentation fixes to getting started and other guides\n- improvements to the functional testing using a new gexpect, testing for\n  non-root apps, run context, port test, and more\n\n\n## v0.5.4\n\nrkt 0.5.4 introduces a number of new features - repository authentication,\nper-app arguments + local image signature verification, port forwarding and\nmore. Further, although we aren't yet guaranteeing API/ABI stability between\nreleases, we have added important work towards this goal including functional\ntesting and database migration code.\n\nThis release also sees the removal of the `--spawn-metadata-svc` flag to\n`rkt run`. The flag was originally provided as a convenience, making it easy\nfor users to get started with the metadata service.  In rkt v0.5.4 we removed\nit in favor of explicitly starting it via `rkt metadata-service` command.\n\nFull changelog:\n- added configuration support for repository authentication (HTTP Basic Auth,\n  OAuth, and Docker repositories). Full details in\n  `Documentation/configuration.md`\n- `rkt run` now supports per-app arguments and per-image `--signature`\n  specifications\n- `rkt run` and `rkt fetch` will now verify signatures for local image files\n- `rkt run` with `--private-net` now supports port forwarding (using\n  `--port=NAME:1234`)\n- `rkt run` now supports a `--local` flag to use only local images (i.e. no\n  discovery or remote image retrieval will be performed)\n- added initial support for running directly from a pod manifest\n- the store DB now supports migrations for future versions\n- systemd-nspawn machine names are now set to pod UUID\n- removed the `--spawn-metadata-svc` option from `rkt run`; this mode was\n  inherently racy and really only for convenience. A separate\n  `rkt metadata-service` invocation should be used instead.\n- various internal codebase refactoring: \"cas\" renamed to \"store\", tasks to\n  encapsulate image fetch operations, etc\n- bumped docker2aci to support authentication for Docker registries and fix a\n  bug when retrieving images from Google Container Registry\n- fixed a bug where `--interactive` did not work with arguments\n- garbage collection for networking is now embedded in the stage1 image\n- when rendering images into the treestore, a global syncfs() is used instead\n  of a per-file sync(). This should significantly improve performance when\n  first extracting large images\n- added extensive functional testing on semaphoreci.com/coreos/rkt\n- added a test-auth-server to facilitate testing of fetching images\n\n\n## v0.5.3\nThis release contains minor updates over v0.5.2, notably finalising the move to\npods in the latest appc spec and becoming completely name consistent on `rkt`.\n- {Container,container} changed globally to {Pod,pod}\n- {Rocket,rocket} changed globally to `rkt`\n- `rkt install` properly sets permissions for all directories\n- `rkt fetch` leverages the cas.Store TmpDir/TmpFile functions (now exported)\n  to generate temporary files for downloads\n- Pod lifecycle states are now exported for use by other packages\n- Metadata service properly synchronizes access to pod state\n\n\n## v0.5.2\n\nThis release is a minor update over v0.5.1, incorporating several bug fixes and\na couple of small new features:\n- `rkt enter` works when overlayfs is not available\n- `rkt run` now supports the `--no-overlay` option referenced (but not\n  implemented!) in the previous release\n- the appc-specified environment variables (PATH, HOME, etc) are once again set\n  correctly during `rkt run`\n- metadata-service no longer manipulates IP tables rules as it connects over a\n  unix socket by default\n- pkg/lock has been improved to also support regular (non-directory) files\n- images in the cas are now locked at runtime (as described in [#460](https://github.com/rkt/rkt/pull/460))\n\n\n## v0.5.1\n\nThis release updates Rocket to follow the latest version of the appc spec,\nv0.5.1. This involves the major change of moving to _pods_ and _Pod Manifests_\n(which enhance and supplant the previous _Container Runtime Manifest_). The\nRocket codebase has been updated across the board to reflect the schema/spec\nchange, as well as changing various terminology in other human-readable places:\nfor example, the previous ambiguous (unqualified) \"container\" is now replaced\neverywhere with \"pod\".\n\nThis release also introduces a number of key features and minor changes:\n- overlayfs support, enabled for `rkt run` by default (disable with\n  `--no-overlayfs`)\n- to facilitate overlayfs, the CAS now features a tree store which stores\n  expanded versions of images\n- the default stage1 (based on systemd) can now be built from source, instead\n  of only derived from an existing binary distribution as previously. This is\n  configurable using the new `RKT_STAGE1_USR_FROM` environment variable when\n  invoking the build script - see fdcd64947\n- the metadata service now uses a Unix socket for registration; this limits who\n  can register/unregister pods by leveraging filesystem permissions on the\n  socket\n- `rkt list` now abbreviates UUIDs by default (configurable with `--full`)\n- the ImageManifest's `readOnly` field (for volume mounts) is now overridden by\n  the rkt command line\n- a simple debug script (in scripts/debug) to facilitate easier debugging of\n  applications running under Rocket by injecting Busybox into the pod\n- documentation for the metadata service, as well as example systemd unit files\n\n\n## v0.4.2\n\n- First support for interactive containers, with the `rkt run --interactive`\n  flag. This is currently only supported if a container has one app. [#562](https://github.com/rkt/rkt/pull/562) #[601](https://github.com/rkt/rkt/pull/601)\n- Add container IP address information to `rkt list`\n- Provide `/sys` and `/dev/shm` to apps (per spec)\n- Introduce \"latest\" pattern handling for local image index\n- Implement FIFO support in tar package\n- Restore atime and mtime during tar extraction\n- Bump docker2aci dependency\n\n\n## v0.4.1\n\nThis is primarily a bug fix release with the addition of the `rkt install`\nsubcommand to help people setup a unprivileged `rkt fetch` based on unix users.\n\n- Fix marshalling error when running containers with resource isolators\n- Fixup help text on run/prepare about volumes\n- Fixup permissions in `rkt trust` created files\n- Introduce the `rkt install` subcommand\n\n\n## v0.4.0\n\nThis release is mostly a milestone release and syncs up with the latest release\nof the [appc spec](https://github.com/appc/spec/releases/tag/v0.4.0) yesterday.\n\nNote that due to the introduction of a database for indexing the local CAS,\nusers upgrading from previous versions of Rocket on a system may need to clear\ntheir local cache by removing the `cas` directory. For example, using the\nstandard Rocket setup, this would be accomplished with\n`rm -fr /var/lib/rkt/cas`.\n\nMajor changes since v0.3.2:\n- Updated to v0.4.0 of the appc spec\n- Introduced a database for indexing local images in the CAS (based on\n  github.com/cznic/ql)\n- Refactored container lifecycle to support a new \"prepared\" state, to\n- pre-allocate a container UUID without immediately running the application\n- Added support for passing arguments to apps through the `rkt run` CLI\n- Implemented ACI rendering for dependencies\n- Renamed `rkt metadatasvc` -> `rkt metadata-service`\n- Added documentation around networking, container lifecycle, and rkt commands\n\n\n## v0.3.2\n\nThis release introduces much improved documentation and a few new features.\n\nThe highlight of this release is that Rocket can now natively run Docker\nimages. To do this, it leverages the appc/docker2aci library which performs a\nstraightforward conversion between images in the Docker format and the appc\nformat.\n\nA simple example:\n\n```\n$ rkt --insecure-skip-verify run docker://redis docker://tenstartups/redis-commander\nrkt: fetching image from docker://redis\nrkt: warning: signature verification has been disabled\nDownloading layer: 511136ea3c5a64f264b78b5433614aec563103b4d4702f3ba7d4d2698e22c158\n```\n\nNote that since Docker images do not support image signature verifications, the\n`-insecure-skip-verify` must be used.\n\nAnother important change in this release is that the default location for the\nstage1 image used by `rkt run` can now be set at build time, by setting the\n`RKT_STAGE1_IMAGE` environment variable when invoking the build script. (If\nthis is not set, `rkt run` will continue with its previous behaviour of looking\nfor a stage1.aci in the same directory as the binary itself. This makes it\neasier for distributions to package Rocket and include the stage1 wherever\nthey choose (for example, `/usr/lib/rkt/stage1.aci`). For more information, see\nhttps://github.com/coreos/rocket/pull/520\n\n\n## v0.3.1\n\nThe primary motivation for this release is to resynchronise versions with the\nappc spec. To minimise confusion in the short term we intend to keep the\nmajor/minor version of Rocket aligned with the version of spec it implements;\nhence, since yesterday v0.3.0 of the appc spec was released, today Rocket\nbecomes v0.3.1. After the spec (and Rocket) reach v1.0.0, we may relax this\nrestriction.\n\nThis release also resolves an upstream bug in the appc discovery code which was\ncausing rkt trust to fail in certain cases.\n\n\n## v0.3.0\n\nThis is largely a momentum release but it does introduce a few new user-facing\nfeatures and some important changes under the hood which will be of interest to\ndevelopers and distributors.\n\nFirst, the CLI has a couple of new commands:\n- `rkt trust` can be used to easily add keys to the public keystore for ACI\n  signatures (introduced in the previous release). This supports retrieving\n  public keys directly from a URL or using discovery to locate public keys - a\n  simple example of the latter is `rkt trust --prefix coreos.com/etcd`. See the\n  commit for other examples.\n- `rkt list` is an extremely simple tool to list the containers on the system\n\nAs mentioned, v0.3.0 includes two significant changes to the Rocket build process:\n- Instead of embedding the (default) stage1 using go-bindata, Rocket now\n  consumes a stage1 in the form of an actual ACI, containing a rootfs and\n  stage1 init/exec binaries. By default, Rocket will look for a `stage1.aci` in\n  the same directory as the location of the binary itself, but the stage1 can\n  be explicitly specified with the new `-stage1-image` flag (which deprecates\n  `-stage1-init` and `-stage1-rootfs`). This makes it much more straightforward\n  to use alternative stage1 images with rkt and facilitates packing it for\n  different distributions like Fedora.\n- Rocket now vendors a copy of the appc/spec instead of depending on HEAD. This\n  means that Rocket can be built in a self-contained and reproducible way and\n  that master will no longer break in response to changes to the spec. It also\n  makes explicit the specific version of the spec against which a particular\n  release of Rocket is compiled.\n\nAs a consequence of these two changes, it is now possible to use the standard\nGo workflow to build the Rocket CLI (e.g. `go get github.com/coreos/rocket/rkt`\nwill build rkt). Note however that this does not implicitly build a stage1, so\nthat will still need to be done using the included ./build script, or some\nother way for those desiring to use a different stage1.\n\n\n## v0.2.0\n\nThis introduces countless features and improvements over v0.1.1. Highlights\ninclude several new commands (`rkt status`, `rkt enter`, `rkt gc`) and\nsignature validation.\n\n\n## v0.1.1\n\nThe most significant change in this release is that the spec has been split\ninto its own repository (https://github.com/appc/spec), and significantly\nupdated since the last release - so many of the changes were to update to match\nthe latest spec.\n\nNumerous improvements and fixes over v0.1.0:\n- Rocket builds on non-Linux (in a limited capacity)\n- Fix bug handling uncompressed images\n- More efficient image handling in CAS\n- mkrootfs now caches and GPG checks images\n- stage1 is now properly decoupled from host runtime\n- stage1 supports socket activation\n- stage1 no longer warns about timezones\n- cas now logs download progress to stdout\n- rkt run now acquires an exclusive lock on the container directory and records\n  the PID of the process\n\n\n## v0.1.0\n\n- tons of documentation improvements added\n- actool introduced along with documentation\n- image discovery introduced to rkt run and rkt fetch\n\n\n## v0.0.0\n\nInitial release.\n"
        },
        {
          "name": "CODE-OF-CONDUCT.md",
          "type": "blob",
          "size": 0.134765625,
          "content": "## Community Code of Conduct\n\nrkt follows the [CNCF Code of Conduct](https://github.com/cncf/foundation/blob/master/code-of-conduct.md).\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.77734375,
          "content": "# How to Contribute\n\nrkt is [Apache 2.0 licensed](LICENSE) and accepts contributions via\nGitHub pull requests.  This document outlines some of the conventions on\ndevelopment workflow, commit message formatting, contact points and other\nresources to make it easier to get your contribution accepted.\n\n### Certificate of Origin\n\nBy contributing to this project you agree to the Developer Certificate of\nOrigin (DCO). This document was created by the Linux Kernel community and is a\nsimple statement that you, as a contributor, have the legal right to make the\ncontribution. See the [DCO](DCO) file for details.\n\n### Email and Chat\n\nThe project has a mailing list and two discussion channels in IRC:\n- Email: [rkt-dev](https://groups.google.com/forum/#!forum/rkt-dev)\n- IRC: #[rkt](irc://irc.freenode.org:6667/#rkt) on freenode.org, for general discussion\n- IRC: #[rkt-dev](irc://irc.freenode.org:6667/#rkt-dev) on freenode.org, for development discussion\n\nPlease avoid emailing maintainers found in the MAINTAINERS file directly. They\nare very busy and read the mailing lists.\n\n### Getting Started\n\n- Fork the repository on GitHub\n- Read [`building rkt`](Documentation/hacking.md#building-rkt) for build and [`manually-running-the-tests`](tests/README.md#manually-running-the-tests) for test instructions\n- Play with the project, submit bugs, submit patches!\n\n### Contribution Flow\n\nThis is a rough outline of what a contributor's workflow looks like:\n\n- Create a topic branch from where you want to base your work (usually master).\n- Make commits of logical units.\n- Make sure your commit messages are in the proper format (see below).\n- Push your changes to a topic branch in your fork of the repository.\n- Make sure the [tests](tests/README.md#manually-running-the-tests) pass, and add any new tests as appropriate.\n- Submit a pull request to the original repository.\n- Submit a comment with the sole content \"@reviewer PTAL\" (please take a look) in GitHub\n  and replace \"@reviewer\" with the correct recipient.\n- When addressing pull request review comments add new commits to the existing pull request or,\n  if the added commits are about the same size as the previous commits,\n  squash them into the existing commits.\n- Once your PR is labelled as \"reviewed/lgtm\" squash the addressed commits in one commit.\n- If your PR addresses multiple subsystems reorganize your PR and create multiple commits per subsystem.\n- Your contribution is ready to be merged.\n\nThanks for your contributions!\n\n### Coding Style\n\nGo style in the rkt project essentially just means following the upstream conventions:\n  - [Effective Go][effectivego]\n  - [CodeReviewComments][codereview]\n  - [Godoc][godoc]\n\nIt's recommended to set a save hook in your editor of choice that runs `goimports` against your code.\n\n[effectivego]: https://golang.org/doc/effective_go.html\n[codereview]: https://github.com/golang/go/wiki/CodeReviewComments\n[godoc]: https://blog.golang.org/godoc-documenting-go-code\n\n### Documentation Style\n\nProject docs should follow the [Documentation style and formatting\nguide](https://github.com/coreos/docs/tree/master/STYLE.md). Thank you for documenting!\n\n### Format of the Commit Message\n\nWe follow a rough convention for commit messages that is designed to answer two\nquestions: what changed and why. The subject line should feature the what and\nthe body of the commit should describe the why.\n\n```\nscripts: add the test-cluster command\n\nthis uses tmux to setup a test cluster that you can easily kill and\nstart for debugging.\n\nFixes #38\n```\n\nThe format can be described more formally as follows:\n\n```\n<subsystem>: <what changed>\n<BLANK LINE>\n<why this change was made>\n<BLANK LINE>\n<footer>\n```\n\nThe first line is the subject and should be no longer than 70 characters, the\nsecond line is always blank, and other lines should be wrapped at 80 characters.\nThis allows the message to be easier to read on GitHub as well as in various\ngit tools.\n\n### Format of the Pull Request\n\nThe pull request title and the first paragraph of the pull request description\nis being used to generate the changelog of the next release.\n\nThe convention follows the same rules as for commit messages. The PR title reflects the\nwhat and the first paragraph of the PR description reflects the why.\nIn most cases one can reuse the commit title as the PR title\nand the commit messages as the PR description for the PR.\n\nIf your PR includes more commits spanning multiple subsystems one should change the PR title\nand the first paragraph of the PR description to reflect a summary of all changes involved.\n\nA large PR must be split into multiple commits, each with clear commit messages.\nIntermediate commits should compile and pass tests. Exceptions to non-compilable must have a valid reason, i.e. dependency bumps.\n\nDo not add entries in the changelog yourself. They will be overwritten when creating a new release.\n"
        },
        {
          "name": "DCO",
          "type": "blob",
          "size": 1.388671875,
          "content": "Developer Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n660 York Street, Suite 102,\nSan Francisco, CA 94110 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n"
        },
        {
          "name": "Documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.05859375,
          "content": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 0.484375,
          "content": "Alban Crequy <alban@kinvolk.io> (@alban) pkg: *\nBrandon Philips <brandon.philips@coreos.com> (@philips) pkg: *\nCasey Callendrello <casey.callendrello@coreos.com> (@squeed) pkg: *\nDerek Gonyeo <derek.gonyeo@coreos.com> (@dgonyeo) pkg: *\nEuan Kemp <euank@euank.com> (@euank) pkg: *\nIago López Galeiras <iago@kinvolk.io> (@iaguis) pkg: *\nKrzesimir Nowak <krzesimir@kinvolk.io> (@krnowak) pkg: *\nLuca Bruno <luca.bruno@coreos.com> (@lucab) pkg: *\nYifan Gu <guyifan1121@gmail.com> (@yifan-gu) pkg: *\n"
        },
        {
          "name": "Makefile.in",
          "type": "blob",
          "size": 3.38671875,
          "content": "# @configure_input@\n\n# make \"all\" a default target\nall:\n\n# install scripts\nINSTALL = @INSTALL@\n\n# binaries we need to build things\nCC := @CC@\nCXX := @CXX@\nGO := @GOBINARY@\nGOFMT := @GOFMTBINARY@\nGIT := @GIT@\nBASH := @BASH_SHELL@\nBASH_SHELL := @BASH_SHELL@\nABS_GO := @ABS_GO@\n\n# [STAGE1] build settings\n\n# selinux tags for rkt and functional tests\nRKT_TAGS := -tags \"selinux @TPM_TAGS@ @SDJOURNAL_TAGS@\"\n# stage1 build mode\n\nRKT_VERSION := @RKT_VERSION@\nRKT_ACI_ARCH := @RKT_ACI_ARCH@\nRKT_STAGE1_VERSION_OVERRIDE := @RKT_STAGE1_FLAVORS_VERSION_OVERRIDE@\n\nRKT_STAGE1_DEFAULT_NAME := @RKT_STAGE1_DEFAULT_NAME@\nRKT_STAGE1_DEFAULT_VERSION := @RKT_STAGE1_DEFAULT_VERSION@\n\nRKT_STAGE1_ALL_FLAVORS := @RKT_STAGE1_ALL_FLAVORS@\nRKT_STAGE1_FLAVORS := @RKT_STAGE1_FLAVORS@\nRKT_STAGE1_DEFAULT_FLAVOR := @RKT_STAGE1_DEFAULT_FLAVOR@\n\nRKT_STAGE1_KVM_HV := @RKT_STAGE1_KVM_HV@\nRKT_STAGE1_KVM_ALL_HV := @RKT_STAGE1_KVM_ALL_HV@\n\nRKT_STAGE1_DEFAULT_LOCATION := @RKT_STAGE1_DEFAULT_LOCATION@\nRKT_STAGE1_DEFAULT_IMAGES_DIR := @RKT_STAGE1_DEFAULT_IMAGES_DIR@\nRKT_STAGE1_DEFAULT_IMAGE_FILENAME_IN_RKT_DIRECTORY := @RKT_STAGE1_DEFAULT_IMAGE_FILENAME_IN_RKT_DIRECTORY@\n\nRKT_STAGE1_SYSTEMD_SRC := @RKT_STAGE1_SYSTEMD_SRC@\nRKT_STAGE1_SYSTEMD_VER := @RKT_STAGE1_SYSTEMD_VER@\nRKT_STAGE1_SYSTEMD_REV := @RKT_STAGE1_SYSTEMD_REV@\n\nRKT_LOCAL_COREOS_PXE_IMAGE_PATH := @RKT_LOCAL_COREOS_PXE_IMAGE_PATH@\nRKT_LOCAL_COREOS_PXE_IMAGE_SYSTEMD_VER := @RKT_LOCAL_COREOS_PXE_IMAGE_SYSTEMD_VER@\n\nRKT_STAGE1_COREOS_BOARD := @RKT_STAGE1_COREOS_BOARD@\nRKT_STAGE1_INTERPRETER := @RKT_STAGE1_INTERPRETER@\n\n# defines for enter\nRKT_DEFINES_FOR_ENTER := @RKT_DEFINES_FOR_ENTER@\n\nRKT_RUN_FUNCTIONAL_TESTS := @RKT_RUN_FUNCTIONAL_TESTS@\n\nINCREMENTAL_BUILD := @INCREMENTAL_BUILD@\n\nGOARCH := @GOARCH@\nGOARM := @GOARM@\nGOARCH_FOR_BUILD := @GOARCH_FOR_BUILD@\n\nRKT_STAGE1_DEFAULT_NAME_LDFLAGS := @RKT_STAGE1_DEFAULT_NAME_LDFLAGS@\nRKT_STAGE1_DEFAULT_VERSION_LDFLAGS := @RKT_STAGE1_DEFAULT_VERSION_LDFLAGS@\nRKT_STAGE1_DEFAULT_LOCATION_LDFLAGS := @RKT_STAGE1_DEFAULT_LOCATION_LDFLAGS@\nRKT_STAGE1_DEFAULT_IMAGE_FILENAME_LDFLAGS := @RKT_STAGE1_DEFAULT_IMAGE_FILENAME_LDFLAGS@\nRKT_STAGE1_DEFAULT_IMAGES_DIRECTORY_LDFLAGS := @RKT_STAGE1_DEFAULT_IMAGES_DIRECTORY_LDFLAGS@\nRKT_STAGE1_INTERPRETER_LDFLAGS := @RKT_STAGE1_INTERPRETER_LDFLAGS@\nRKT_VERSION_LDFLAGS := @RKT_VERSION_LDFLAGS@\nRKT_FEATURES_LDFLAGS := @RKT_FEATURES_LDFLAGS@\n\n# build-related directories and binaries\nBUILDDIR ?= $(MK_TOPLEVEL_ABS_SRCDIR)/build-@PACKAGE_TARNAME@-@PACKAGE_VERSION@\n\n# makelib/inc.mk must be included first!\ninclude makelib/inc.mk\ninclude makelib/verbosity.mk\ninclude makelib/file-ops-prolog.mk\ninclude makelib/variables.mk\ninclude makelib/misc.mk\n\nSHELL := $(BASH_SHELL)\nTOPLEVEL_STAMPS :=\nTOPLEVEL_CHECK_STAMPS :=\nTOPLEVEL_UNIT_CHECK_STAMPS :=\nTOPLEVEL_FUNCTIONAL_CHECK_STAMPS :=\nTOPLEVEL_SUBDIRS := rkt tests stage1 stage1_fly\nRKT_MONITOR_STAMPS :=\n\n$(call inc-one,tools/tools.mk)\n$(call inc-one,Documentation/devel/devel.mk)\n$(call inc-many,$(foreach sd,$(TOPLEVEL_SUBDIRS),$(sd)/$(sd).mk))\n\nall: $(TOPLEVEL_STAMPS)\n\n$(TOPLEVEL_CHECK_STAMPS): $(TOPLEVEL_STAMPS)\n\n.INTERMEDIATE: $(TOPLEVEL_CHECK_STAMPS)\n.INTERMEDIATE: $(TOPLEVEL_UNIT_CHECK_STAMPS)\n.INTERMEDIATE: $(TOPLEVEL_FUNCTIONAL_CHECK_STAMPS)\n\ncheck: $(TOPLEVEL_CHECK_STAMPS)\nunit-check: $(TOPLEVEL_UNIT_CHECK_STAMPS)\nfunctional-check: $(TOPLEVEL_FUNCTIONAL_CHECK_STAMPS)\nrkt-monitor: $(RKT_MONITOR_STAMPS)\n\ninclude makelib/file-ops-epilog.mk\n\n.PHONY: all check unit-check functional-check\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.3701171875,
          "content": "## :warning: End of project :warning:\n\n[![development](https://img.shields.io/badge/development-halted-red.svg)](https://github.com/rkt/rkt/issues/4024)\n\nThis project [has ended](https://github.com/rkt/rkt/issues/4024), and **all development/maintenance activities have halted**.\n\nAs it is free software, people are free and welcome to fork and develop the codebase on their own.\nHowever, to avoid any confusion, the original repository is archived and we recommend any further fork/development to proceed with an explicit rename and rebranding first.\n\nWe encourage all interested parties to mirror any relevant bits as we can't actively guarantee their existence in the future.\n\n---\n\n# rkt - the pod-native container engine\n\n[![godoc](https://godoc.org/github.com/rkt/rkt?status.svg)](http://godoc.org/github.com/rkt/rkt)\n[![Build Status (Travis)](https://travis-ci.org/rkt/rkt.svg?branch=master)](https://travis-ci.org/rkt/rkt)\n[![Build Status (SemaphoreCI)](https://semaphoreci.com/api/v1/rkt/rkt/branches/master/badge.svg)](https://semaphoreci.com/rkt/rkt)\n[![Go Report Card](https://goreportcard.com/badge/github.com/rkt/rkt)](https://goreportcard.com/report/github.com/rkt/rkt)\n\n![rkt Logo](logos/rkt-horizontal-color.png)\n\nrkt (pronounced like a _\"rocket\"_) is a CLI for running application containers on Linux. rkt is designed to be secure, composable, and standards-based.\n\nSome of rkt's key features and goals include:\n\n- _Pod-native_: rkt's basic unit of execution is a [pod][coreos-rkt-pod-blog], linking together resources and user applications in a self-contained environment.\n- _Security_: rkt is developed with a principle of \"secure-by-default\", and includes a number of important security features like support for [SELinux][selinux], [TPM measurement][tpm], and running app containers in [hardware-isolated VMs][kvm].\n- _Composability_: rkt is designed for first-class integration with init systems (like [systemd][systemd], upstart) and cluster orchestration tools (like [Kubernetes][kubernetes] and [Nomad][nomad]), and supports [swappable execution engines][architecture].\n- _Open standards and compatibility_: rkt implements the [appc specification][rkt-and-appc], supports the [Container Networking Interface specification][cni], and can run [Docker images][docker] and [OCI images][oci-image-spec]. Broader native support for OCI images and runtimes is [in development][rkt-oci].\n\n[coreos-rkt-pod-blog]: https://coreos.com/blog/rkt-and-kubernetes.html\n[architecture]: Documentation/devel/architecture.md\n[systemd]: Documentation/using-rkt-with-systemd.md\n[kubernetes]: Documentation/using-rkt-with-kubernetes.md\n[nomad]: Documentation/using-rkt-with-nomad.md\n[docker]: Documentation/running-docker-images.md\n[networking]: Documentation/networking.md\n[kvm]: Documentation/running-kvm-stage1.md\n[rkt-and-appc]: Documentation/app-container.md\n[cni]: https://github.com/containernetworking/cni\n[selinux]: Documentation/selinux.md\n[tpm]: Documentation/devel/tpm.md\n[oci-image-spec]: https://github.com/opencontainers/image-spec\n[rkt-oci]: https://github.com/rkt/rkt/projects/4\n\n## Project status\n\nThe rkt v1.x series provides command line user interface and on-disk data structures stability for external development. Any major changes to those primary areas will be clearly communicated, and a formal deprecation process conducted for any retired features.\n\nCheck out the [roadmap](ROADMAP.md) for more details on the future of rkt.\n\n## Trying out rkt\n\nTo get started quickly using rkt for the first time, start with the [\"trying out rkt\" document](Documentation/trying-out-rkt.md).\nAlso check [rkt support on your Linux distribution](Documentation/distributions.md).\nFor an end-to-end example of building an application from scratch and running it with rkt, check out the [getting started guide](Documentation/getting-started-guide.md).\n\n## Getting help with rkt\n\nThere are a number of different avenues for seeking help and communicating with the rkt community:\n- For bugs and feature requests (including documentation!), file an [issue][new-issue]\n- For general discussion about both using and developing rkt, join the [rkt-dev][rkt-dev] mailing list\n- For real-time discussion, join us on IRC: #[rkt-dev][irc] on freenode.org\n- For more details on rkt development plans, check out the GitHub [milestones][milestones]\n\nMost discussion about rkt development happens on GitHub via issues and pull requests.\nThe rkt developers also host a semi-regular community sync meeting open to the public.\nThis sync usually features demos, updates on the roadmap, and time for anyone from the community to ask questions of the developers or share users stories with others.\nFor more details, including how to join and recordings of previous syncs, see the [sync doc on Google Docs][sync-doc].\n\n[new-issue]: https://github.com/rkt/rkt/issues/new\n[rkt-dev]: https://groups.google.com/forum/?hl=en#!forum/rkt-dev\n[irc]: irc://irc.freenode.org:6667/#rkt-dev\n[milestones]: https://github.com/rkt/rkt/milestones\n[sync-doc]: https://docs.google.com/document/d/1NT_J5X2QErtKgd8Y3TFXNknWhJx_yOCMJnq3Iy2jPgE/edit#\n\n## Contributing to rkt\n\nrkt is an open source project and contributions are gladly welcomed!\nSee the [Hacking Guide](Documentation/hacking.md) for more information on how to build and work on rkt.\nSee [CONTRIBUTING](CONTRIBUTING.md) for details on submitting patches and the contribution workflow.\n\n## Licensing\n\nUnless otherwise noted, all code in the rkt repository is licensed under the [Apache 2.0 license](LICENSE).\nSome portions of the codebase are derived from other projects under different licenses; the appropriate information can be found in the header of those source files, as applicable.\n\n## Security disclosure\n\nIf you suspect you have found a security vulnerability in rkt, please *do not* file a GitHub issue, but instead email <security@coreos.com> with the full details, including steps to reproduce the issue.\nCoreOS is currently the primary sponsor of rkt development, and all reports are thoroughly investigated by CoreOS engineers.\nFor more information, see the [CoreOS security disclosure page](https://coreos.com/security/disclosure/).\n\n## Known issues\n\nCheck the [troubleshooting document](Documentation/troubleshooting.md).\n\n## Related Links\n\n### Integrations and Production Users\n\n- [Projects integrating with rkt](https://github.com/rkt/rkt/blob/master/Documentation/integrations.md)\n- [Production users](https://github.com/rkt/rkt/blob/master/Documentation/production-users.md)\n"
        },
        {
          "name": "ROADMAP.md",
          "type": "blob",
          "size": 1.0673828125,
          "content": "# rkt roadmap\n\nThis document defines a high level roadmap for rkt development.\nThe dates below should not be considered authoritative, but rather indicative of the projected timeline of the project.\nThe [milestones defined in GitHub](https://github.com/rkt/rkt/milestones) represent the most up-to-date state of affairs.\n\nrkt's version 1.0 release marks the command line user interface and on-disk data structures as stable and reliable for external development.\n\n## Ongoing projects\n\n### [Kubernetes CRI](https://github.com/rkt/rkt/projects/1)\n\nAdapting rkt to offer first-class implementation of the Kubernetes Container Runtime Interface.\n\n### [OCI native support](https://github.com/rkt/rkt/projects/4)\n\nSupporting OCI specs natively in rkt.\nFollowing OCI evolution and stabilization, it will become the preferred way over appc.\nHowever, rkt will continue to support the ACI image format and distribution mechanism.\nThere is currently no plans to remove that support from rkt.\n\n### Upcoming\n\nFuture tasks without a specific timeline are tracked at https://github.com/rkt/rkt/milestone/30.\n"
        },
        {
          "name": "Vagrantfile",
          "type": "blob",
          "size": 0.7724609375,
          "content": "Vagrant.configure('2') do |config|\n    config.vm.box = \"ubuntu/xenial64\" # Ubuntu 16.04\n\n    # fix issues with slow dns http://serverfault.com/a/595010\n    config.vm.provider :virtualbox do |vb, override|\n        vb.customize [\"modifyvm\", :id, \"--natdnshostresolver1\", \"on\"]\n        vb.customize [\"modifyvm\", :id, \"--natdnsproxy1\", \"on\"]\n        vb.customize [\"modifyvm\", :id, \"--memory\", \"1024\"]\n    end\n\n    config.vm.provider :libvirt do |libvirt, override|\n        libvirt.memory = 1024\n    end\n\n    config.vm.network \"private_network\", type: \"dhcp\"\n    config.vm.provision :shell, :privileged => true, :path => \"scripts/install-rkt.sh\"\n    config.vm.provision :shell, :inline => \"usermod -a -G rkt-admin ubuntu\"\n    config.vm.provision :shell, :inline => \"usermod -a -G rkt ubuntu\"\nend\n"
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.435546875,
          "content": "#!/bin/sh\n\nset -e\n\ntopdir=$(dirname $0)\ncd $topdir\n\nautoreconf --install --warnings=all --force\n\nargs=\"\"\nif [ -f \"$topdir/.config.args\" ]; then\n\targs=\"$(cat $topdir/.config.args)\"\nfi\n\necho\necho \"----------------------------------------------------------------\"\necho \"Initialized build system. For a common configuration please run:\"\necho \"----------------------------------------------------------------\"\necho\necho \"$topdir/configure $args\"\necho\n"
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.guess",
          "type": "blob",
          "size": 41.8515625,
          "content": "#! /bin/sh\n# Attempt to guess a canonical system name.\n#   Copyright 1992-2014 Free Software Foundation, Inc.\n\ntimestamp='2014-03-23'\n\n# This file is free software; you can redistribute it and/or modify it\n# under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, see <http://www.gnu.org/licenses/>.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that\n# program.  This Exception is an additional permission under section 7\n# of the GNU General Public License, version 3 (\"GPLv3\").\n#\n# Originally written by Per Bothner.\n#\n# You can get the latest version of this script from:\n# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD\n#\n# Please send patches with a ChangeLog entry to config-patches@gnu.org.\n\n\nme=`echo \"$0\" | sed -e 's,.*/,,'`\n\nusage=\"\\\nUsage: $0 [OPTION]\n\nOutput the configuration name of the system \\`$me' is run on.\n\nOperation modes:\n  -h, --help         print this help, then exit\n  -t, --time-stamp   print date of last modification, then exit\n  -v, --version      print version number, then exit\n\nReport bugs and patches to <config-patches@gnu.org>.\"\n\nversion=\"\\\nGNU config.guess ($timestamp)\n\nOriginally written by Per Bothner.\nCopyright 1992-2014 Free Software Foundation, Inc.\n\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n\nhelp=\"\nTry \\`$me --help' for more information.\"\n\n# Parse command line\nwhile test $# -gt 0 ; do\n  case $1 in\n    --time-stamp | --time* | -t )\n       echo \"$timestamp\" ; exit ;;\n    --version | -v )\n       echo \"$version\" ; exit ;;\n    --help | --h* | -h )\n       echo \"$usage\"; exit ;;\n    -- )     # Stop option processing\n       shift; break ;;\n    - )\t# Use stdin as input.\n       break ;;\n    -* )\n       echo \"$me: invalid option $1$help\" >&2\n       exit 1 ;;\n    * )\n       break ;;\n  esac\ndone\n\nif test $# != 0; then\n  echo \"$me: too many arguments$help\" >&2\n  exit 1\nfi\n\ntrap 'exit 1' 1 2 15\n\n# CC_FOR_BUILD -- compiler used by this script. Note that the use of a\n# compiler to aid in system detection is discouraged as it requires\n# temporary files to be created and, as you can see below, it is a\n# headache to deal with in a portable fashion.\n\n# Historically, `CC_FOR_BUILD' used to be named `HOST_CC'. We still\n# use `HOST_CC' if defined, but it is deprecated.\n\n# Portable tmp directory creation inspired by the Autoconf team.\n\nset_cc_for_build='\ntrap \"exitcode=\\$?; (rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null) && exit \\$exitcode\" 0 ;\ntrap \"rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null; exit 1\" 1 2 13 15 ;\n: ${TMPDIR=/tmp} ;\n { tmp=`(umask 077 && mktemp -d \"$TMPDIR/cgXXXXXX\") 2>/dev/null` && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n { test -n \"$RANDOM\" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp) ; } ||\n { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp) && echo \"Warning: creating insecure temp directory\" >&2 ; } ||\n { echo \"$me: cannot create a temporary directory in $TMPDIR\" >&2 ; exit 1 ; } ;\ndummy=$tmp/dummy ;\ntmpfiles=\"$dummy.c $dummy.o $dummy.rel $dummy\" ;\ncase $CC_FOR_BUILD,$HOST_CC,$CC in\n ,,)    echo \"int x;\" > $dummy.c ;\n\tfor c in cc gcc c89 c99 ; do\n\t  if ($c -c -o $dummy.o $dummy.c) >/dev/null 2>&1 ; then\n\t     CC_FOR_BUILD=\"$c\"; break ;\n\t  fi ;\n\tdone ;\n\tif test x\"$CC_FOR_BUILD\" = x ; then\n\t  CC_FOR_BUILD=no_compiler_found ;\n\tfi\n\t;;\n ,,*)   CC_FOR_BUILD=$CC ;;\n ,*,*)  CC_FOR_BUILD=$HOST_CC ;;\nesac ; set_cc_for_build= ;'\n\n# This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n# (ghazi@noc.rutgers.edu 1994-08-24)\nif (test -f /.attbin/uname) >/dev/null 2>&1 ; then\n\tPATH=$PATH:/.attbin ; export PATH\nfi\n\nUNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown\nUNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown\nUNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown\nUNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown\n\ncase \"${UNAME_SYSTEM}\" in\nLinux|GNU|GNU/*)\n\t# If the system lacks a compiler, then just pick glibc.\n\t# We could probably try harder.\n\tLIBC=gnu\n\n\teval $set_cc_for_build\n\tcat <<-EOF > $dummy.c\n\t#include <features.h>\n\t#if defined(__UCLIBC__)\n\tLIBC=uclibc\n\t#elif defined(__dietlibc__)\n\tLIBC=dietlibc\n\t#else\n\tLIBC=gnu\n\t#endif\n\tEOF\n\teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`\n\t;;\nesac\n\n# Note: order is significant - the case branches are not exclusive.\n\ncase \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n    *:NetBSD:*:*)\n\t# NetBSD (nbsd) targets should (where applicable) match one or\n\t# more of the tuples: *-*-netbsdelf*, *-*-netbsdaout*,\n\t# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently\n\t# switched to ELF, *-*-netbsd* would select the old\n\t# object file format.  This provides both forward\n\t# compatibility and a consistent mechanism for selecting the\n\t# object file format.\n\t#\n\t# Note: NetBSD doesn't particularly care about the vendor\n\t# portion of the name.  We always set it to \"unknown\".\n\tsysctl=\"sysctl -n hw.machine_arch\"\n\tUNAME_MACHINE_ARCH=`(/sbin/$sysctl 2>/dev/null || \\\n\t    /usr/sbin/$sysctl 2>/dev/null || echo unknown)`\n\tcase \"${UNAME_MACHINE_ARCH}\" in\n\t    armeb) machine=armeb-unknown ;;\n\t    arm*) machine=arm-unknown ;;\n\t    sh3el) machine=shl-unknown ;;\n\t    sh3eb) machine=sh-unknown ;;\n\t    sh5el) machine=sh5le-unknown ;;\n\t    *) machine=${UNAME_MACHINE_ARCH}-unknown ;;\n\tesac\n\t# The Operating System including object format, if it has switched\n\t# to ELF recently, or will in the future.\n\tcase \"${UNAME_MACHINE_ARCH}\" in\n\t    arm*|i386|m68k|ns32k|sh3*|sparc|vax)\n\t\teval $set_cc_for_build\n\t\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t\t\t| grep -q __ELF__\n\t\tthen\n\t\t    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).\n\t\t    # Return netbsd for either.  FIX?\n\t\t    os=netbsd\n\t\telse\n\t\t    os=netbsdelf\n\t\tfi\n\t\t;;\n\t    *)\n\t\tos=netbsd\n\t\t;;\n\tesac\n\t# The OS release\n\t# Debian GNU/NetBSD machines have a different userland, and\n\t# thus, need a distinct triplet. However, they do not need\n\t# kernel version information, so it can be replaced with a\n\t# suitable tag, in the style of linux-gnu.\n\tcase \"${UNAME_VERSION}\" in\n\t    Debian*)\n\t\trelease='-gnu'\n\t\t;;\n\t    *)\n\t\trelease=`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\\./'`\n\t\t;;\n\tesac\n\t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n\t# contains redundant information, the shorter form:\n\t# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.\n\techo \"${machine}-${os}${release}\"\n\texit ;;\n    *:Bitrig:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`\n\techo ${UNAME_MACHINE_ARCH}-unknown-bitrig${UNAME_RELEASE}\n\texit ;;\n    *:OpenBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`\n\techo ${UNAME_MACHINE_ARCH}-unknown-openbsd${UNAME_RELEASE}\n\texit ;;\n    *:ekkoBSD:*:*)\n\techo ${UNAME_MACHINE}-unknown-ekkobsd${UNAME_RELEASE}\n\texit ;;\n    *:SolidBSD:*:*)\n\techo ${UNAME_MACHINE}-unknown-solidbsd${UNAME_RELEASE}\n\texit ;;\n    macppc:MirBSD:*:*)\n\techo powerpc-unknown-mirbsd${UNAME_RELEASE}\n\texit ;;\n    *:MirBSD:*:*)\n\techo ${UNAME_MACHINE}-unknown-mirbsd${UNAME_RELEASE}\n\texit ;;\n    alpha:OSF1:*:*)\n\tcase $UNAME_RELEASE in\n\t*4.0)\n\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n\t\t;;\n\t*5.*)\n\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`\n\t\t;;\n\tesac\n\t# According to Compaq, /usr/sbin/psrinfo has been available on\n\t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n\t# covers most systems running today.  This code pipes the CPU\n\t# types through head -n 1, so we only detect the type of CPU 0.\n\tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n\tcase \"$ALPHA_CPU_TYPE\" in\n\t    \"EV4 (21064)\")\n\t\tUNAME_MACHINE=\"alpha\" ;;\n\t    \"EV4.5 (21064)\")\n\t\tUNAME_MACHINE=\"alpha\" ;;\n\t    \"LCA4 (21066/21068)\")\n\t\tUNAME_MACHINE=\"alpha\" ;;\n\t    \"EV5 (21164)\")\n\t\tUNAME_MACHINE=\"alphaev5\" ;;\n\t    \"EV5.6 (21164A)\")\n\t\tUNAME_MACHINE=\"alphaev56\" ;;\n\t    \"EV5.6 (21164PC)\")\n\t\tUNAME_MACHINE=\"alphapca56\" ;;\n\t    \"EV5.7 (21164PC)\")\n\t\tUNAME_MACHINE=\"alphapca57\" ;;\n\t    \"EV6 (21264)\")\n\t\tUNAME_MACHINE=\"alphaev6\" ;;\n\t    \"EV6.7 (21264A)\")\n\t\tUNAME_MACHINE=\"alphaev67\" ;;\n\t    \"EV6.8CB (21264C)\")\n\t\tUNAME_MACHINE=\"alphaev68\" ;;\n\t    \"EV6.8AL (21264B)\")\n\t\tUNAME_MACHINE=\"alphaev68\" ;;\n\t    \"EV6.8CX (21264D)\")\n\t\tUNAME_MACHINE=\"alphaev68\" ;;\n\t    \"EV6.9A (21264/EV69A)\")\n\t\tUNAME_MACHINE=\"alphaev69\" ;;\n\t    \"EV7 (21364)\")\n\t\tUNAME_MACHINE=\"alphaev7\" ;;\n\t    \"EV7.9 (21364A)\")\n\t\tUNAME_MACHINE=\"alphaev79\" ;;\n\tesac\n\t# A Pn.n version is a patched version.\n\t# A Vn.n version is a released version.\n\t# A Tn.n version is a released field test version.\n\t# A Xn.n version is an unreleased experimental baselevel.\n\t# 1.2 uses \"1.2\" for uname -r.\n\techo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`\n\t# Reset EXIT trap before exiting to avoid spurious non-zero exit code.\n\texitcode=$?\n\ttrap '' 0\n\texit $exitcode ;;\n    Alpha\\ *:Windows_NT*:*)\n\t# How do we know it's Interix rather than the generic POSIX subsystem?\n\t# Should we change UNAME_MACHINE based on the output of uname instead\n\t# of the specific Alpha model?\n\techo alpha-pc-interix\n\texit ;;\n    21064:Windows_NT:50:3)\n\techo alpha-dec-winnt3.5\n\texit ;;\n    Amiga*:UNIX_System_V:4.0:*)\n\techo m68k-unknown-sysv4\n\texit ;;\n    *:[Aa]miga[Oo][Ss]:*:*)\n\techo ${UNAME_MACHINE}-unknown-amigaos\n\texit ;;\n    *:[Mm]orph[Oo][Ss]:*:*)\n\techo ${UNAME_MACHINE}-unknown-morphos\n\texit ;;\n    *:OS/390:*:*)\n\techo i370-ibm-openedition\n\texit ;;\n    *:z/VM:*:*)\n\techo s390-ibm-zvmoe\n\texit ;;\n    *:OS400:*:*)\n\techo powerpc-ibm-os400\n\texit ;;\n    arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)\n\techo arm-acorn-riscix${UNAME_RELEASE}\n\texit ;;\n    arm*:riscos:*:*|arm*:RISCOS:*:*)\n\techo arm-unknown-riscos\n\texit ;;\n    SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)\n\techo hppa1.1-hitachi-hiuxmpp\n\texit ;;\n    Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)\n\t# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.\n\tif test \"`(/bin/universe) 2>/dev/null`\" = att ; then\n\t\techo pyramid-pyramid-sysv3\n\telse\n\t\techo pyramid-pyramid-bsd\n\tfi\n\texit ;;\n    NILE*:*:*:dcosx)\n\techo pyramid-pyramid-svr4\n\texit ;;\n    DRS?6000:unix:4.0:6*)\n\techo sparc-icl-nx6\n\texit ;;\n    DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)\n\tcase `/usr/bin/uname -p` in\n\t    sparc) echo sparc-icl-nx7; exit ;;\n\tesac ;;\n    s390x:SunOS:*:*)\n\techo ${UNAME_MACHINE}-ibm-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n\texit ;;\n    sun4H:SunOS:5.*:*)\n\techo sparc-hal-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n\texit ;;\n    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n\techo sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n\texit ;;\n    i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)\n\techo i386-pc-auroraux${UNAME_RELEASE}\n\texit ;;\n    i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)\n\teval $set_cc_for_build\n\tSUN_ARCH=\"i386\"\n\t# If there is a compiler, see if it is configured for 64-bit objects.\n\t# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.\n\t# This test works for both compilers.\n\tif [ \"$CC_FOR_BUILD\" != 'no_compiler_found' ]; then\n\t    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \\\n\t\t(CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \\\n\t\tgrep IS_64BIT_ARCH >/dev/null\n\t    then\n\t\tSUN_ARCH=\"x86_64\"\n\t    fi\n\tfi\n\techo ${SUN_ARCH}-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n\texit ;;\n    sun4*:SunOS:6*:*)\n\t# According to config.sub, this is the proper way to canonicalize\n\t# SunOS6.  Hard to guess exactly what SunOS6 will be like, but\n\t# it's likely to be more like Solaris than SunOS4.\n\techo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n\texit ;;\n    sun4*:SunOS:*:*)\n\tcase \"`/usr/bin/arch -k`\" in\n\t    Series*|S4*)\n\t\tUNAME_RELEASE=`uname -v`\n\t\t;;\n\tesac\n\t# Japanese Language versions have a version number like `4.1.3-JL'.\n\techo sparc-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`\n\texit ;;\n    sun3*:SunOS:*:*)\n\techo m68k-sun-sunos${UNAME_RELEASE}\n\texit ;;\n    sun*:*:4.2BSD:*)\n\tUNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n\ttest \"x${UNAME_RELEASE}\" = \"x\" && UNAME_RELEASE=3\n\tcase \"`/bin/arch`\" in\n\t    sun3)\n\t\techo m68k-sun-sunos${UNAME_RELEASE}\n\t\t;;\n\t    sun4)\n\t\techo sparc-sun-sunos${UNAME_RELEASE}\n\t\t;;\n\tesac\n\texit ;;\n    aushp:SunOS:*:*)\n\techo sparc-auspex-sunos${UNAME_RELEASE}\n\texit ;;\n    # The situation for MiNT is a little confusing.  The machine name\n    # can be virtually everything (everything which is not\n    # \"atarist\" or \"atariste\" at least should have a processor\n    # > m68000).  The system name ranges from \"MiNT\" over \"FreeMiNT\"\n    # to the lowercase version \"mint\" (or \"freemint\").  Finally\n    # the system name \"TOS\" denotes a system which is actually not\n    # MiNT.  But MiNT is downward compatible to TOS, so this should\n    # be no problem.\n    atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)\n\techo m68k-atari-mint${UNAME_RELEASE}\n\texit ;;\n    atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)\n\techo m68k-atari-mint${UNAME_RELEASE}\n\texit ;;\n    *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)\n\techo m68k-atari-mint${UNAME_RELEASE}\n\texit ;;\n    milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)\n\techo m68k-milan-mint${UNAME_RELEASE}\n\texit ;;\n    hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)\n\techo m68k-hades-mint${UNAME_RELEASE}\n\texit ;;\n    *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)\n\techo m68k-unknown-mint${UNAME_RELEASE}\n\texit ;;\n    m68k:machten:*:*)\n\techo m68k-apple-machten${UNAME_RELEASE}\n\texit ;;\n    powerpc:machten:*:*)\n\techo powerpc-apple-machten${UNAME_RELEASE}\n\texit ;;\n    RISC*:Mach:*:*)\n\techo mips-dec-mach_bsd4.3\n\texit ;;\n    RISC*:ULTRIX:*:*)\n\techo mips-dec-ultrix${UNAME_RELEASE}\n\texit ;;\n    VAX*:ULTRIX*:*:*)\n\techo vax-dec-ultrix${UNAME_RELEASE}\n\texit ;;\n    2020:CLIX:*:* | 2430:CLIX:*:*)\n\techo clipper-intergraph-clix${UNAME_RELEASE}\n\texit ;;\n    mips:*:*:UMIPS | mips:*:*:RISCos)\n\teval $set_cc_for_build\n\tsed 's/^\t//' << EOF >$dummy.c\n#ifdef __cplusplus\n#include <stdio.h>  /* for printf() prototype */\n\tint main (int argc, char *argv[]) {\n#else\n\tint main (argc, argv) int argc; char *argv[]; {\n#endif\n\t#if defined (host_mips) && defined (MIPSEB)\n\t#if defined (SYSTYPE_SYSV)\n\t  printf (\"mips-mips-riscos%ssysv\\n\", argv[1]); exit (0);\n\t#endif\n\t#if defined (SYSTYPE_SVR4)\n\t  printf (\"mips-mips-riscos%ssvr4\\n\", argv[1]); exit (0);\n\t#endif\n\t#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)\n\t  printf (\"mips-mips-riscos%sbsd\\n\", argv[1]); exit (0);\n\t#endif\n\t#endif\n\t  exit (-1);\n\t}\nEOF\n\t$CC_FOR_BUILD -o $dummy $dummy.c &&\n\t  dummyarg=`echo \"${UNAME_RELEASE}\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` &&\n\t  SYSTEM_NAME=`$dummy $dummyarg` &&\n\t    { echo \"$SYSTEM_NAME\"; exit; }\n\techo mips-mips-riscos${UNAME_RELEASE}\n\texit ;;\n    Motorola:PowerMAX_OS:*:*)\n\techo powerpc-motorola-powermax\n\texit ;;\n    Motorola:*:4.3:PL8-*)\n\techo powerpc-harris-powermax\n\texit ;;\n    Night_Hawk:*:*:PowerMAX_OS | Synergy:PowerMAX_OS:*:*)\n\techo powerpc-harris-powermax\n\texit ;;\n    Night_Hawk:Power_UNIX:*:*)\n\techo powerpc-harris-powerunix\n\texit ;;\n    m88k:CX/UX:7*:*)\n\techo m88k-harris-cxux7\n\texit ;;\n    m88k:*:4*:R4*)\n\techo m88k-motorola-sysv4\n\texit ;;\n    m88k:*:3*:R3*)\n\techo m88k-motorola-sysv3\n\texit ;;\n    AViiON:dgux:*:*)\n\t# DG/UX returns AViiON for all architectures\n\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n\tif [ $UNAME_PROCESSOR = mc88100 ] || [ $UNAME_PROCESSOR = mc88110 ]\n\tthen\n\t    if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx ] || \\\n\t       [ ${TARGET_BINARY_INTERFACE}x = x ]\n\t    then\n\t\techo m88k-dg-dgux${UNAME_RELEASE}\n\t    else\n\t\techo m88k-dg-dguxbcs${UNAME_RELEASE}\n\t    fi\n\telse\n\t    echo i586-dg-dgux${UNAME_RELEASE}\n\tfi\n\texit ;;\n    M88*:DolphinOS:*:*)\t# DolphinOS (SVR3)\n\techo m88k-dolphin-sysv3\n\texit ;;\n    M88*:*:R3*:*)\n\t# Delta 88k system running SVR3\n\techo m88k-motorola-sysv3\n\texit ;;\n    XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)\n\techo m88k-tektronix-sysv3\n\texit ;;\n    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)\n\techo m68k-tektronix-bsd\n\texit ;;\n    *:IRIX*:*:*)\n\techo mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`\n\texit ;;\n    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.\n\techo romp-ibm-aix     # uname -m gives an 8 hex-code CPU id\n\texit ;;               # Note that: echo \"'`uname -s`'\" gives 'AIX '\n    i*86:AIX:*:*)\n\techo i386-ibm-aix\n\texit ;;\n    ia64:AIX:*:*)\n\tif [ -x /usr/bin/oslevel ] ; then\n\t\tIBM_REV=`/usr/bin/oslevel`\n\telse\n\t\tIBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}\n\tfi\n\techo ${UNAME_MACHINE}-ibm-aix${IBM_REV}\n\texit ;;\n    *:AIX:2:3)\n\tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n\t\teval $set_cc_for_build\n\t\tsed 's/^\t\t//' << EOF >$dummy.c\n\t\t#include <sys/systemcfg.h>\n\n\t\tmain()\n\t\t\t{\n\t\t\tif (!__power_pc())\n\t\t\t\texit(1);\n\t\t\tputs(\"powerpc-ibm-aix3.2.5\");\n\t\t\texit(0);\n\t\t\t}\nEOF\n\t\tif $CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy`\n\t\tthen\n\t\t\techo \"$SYSTEM_NAME\"\n\t\telse\n\t\t\techo rs6000-ibm-aix3.2.5\n\t\tfi\n\telif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then\n\t\techo rs6000-ibm-aix3.2.4\n\telse\n\t\techo rs6000-ibm-aix3.2\n\tfi\n\texit ;;\n    *:AIX:*:[4567])\n\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n\tif /usr/sbin/lsattr -El ${IBM_CPU_ID} | grep ' POWER' >/dev/null 2>&1; then\n\t\tIBM_ARCH=rs6000\n\telse\n\t\tIBM_ARCH=powerpc\n\tfi\n\tif [ -x /usr/bin/oslevel ] ; then\n\t\tIBM_REV=`/usr/bin/oslevel`\n\telse\n\t\tIBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}\n\tfi\n\techo ${IBM_ARCH}-ibm-aix${IBM_REV}\n\texit ;;\n    *:AIX:*:*)\n\techo rs6000-ibm-aix\n\texit ;;\n    ibmrt:4.4BSD:*|romp-ibm:BSD:*)\n\techo romp-ibm-bsd4.4\n\texit ;;\n    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and\n\techo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to\n\texit ;;                             # report: romp-ibm BSD 4.3\n    *:BOSX:*:*)\n\techo rs6000-bull-bosx\n\texit ;;\n    DPX/2?00:B.O.S.:*:*)\n\techo m68k-bull-sysv3\n\texit ;;\n    9000/[34]??:4.3bsd:1.*:*)\n\techo m68k-hp-bsd\n\texit ;;\n    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)\n\techo m68k-hp-bsd4.4\n\texit ;;\n    9000/[34678]??:HP-UX:*:*)\n\tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n\tcase \"${UNAME_MACHINE}\" in\n\t    9000/31? )            HP_ARCH=m68000 ;;\n\t    9000/[34]?? )         HP_ARCH=m68k ;;\n\t    9000/[678][0-9][0-9])\n\t\tif [ -x /usr/bin/getconf ]; then\n\t\t    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`\n\t\t    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`\n\t\t    case \"${sc_cpu_version}\" in\n\t\t      523) HP_ARCH=\"hppa1.0\" ;; # CPU_PA_RISC1_0\n\t\t      528) HP_ARCH=\"hppa1.1\" ;; # CPU_PA_RISC1_1\n\t\t      532)                      # CPU_PA_RISC2_0\n\t\t\tcase \"${sc_kernel_bits}\" in\n\t\t\t  32) HP_ARCH=\"hppa2.0n\" ;;\n\t\t\t  64) HP_ARCH=\"hppa2.0w\" ;;\n\t\t\t  '') HP_ARCH=\"hppa2.0\" ;;   # HP-UX 10.20\n\t\t\tesac ;;\n\t\t    esac\n\t\tfi\n\t\tif [ \"${HP_ARCH}\" = \"\" ]; then\n\t\t    eval $set_cc_for_build\n\t\t    sed 's/^\t\t//' << EOF >$dummy.c\n\n\t\t#define _HPUX_SOURCE\n\t\t#include <stdlib.h>\n\t\t#include <unistd.h>\n\n\t\tint main ()\n\t\t{\n\t\t#if defined(_SC_KERNEL_BITS)\n\t\t    long bits = sysconf(_SC_KERNEL_BITS);\n\t\t#endif\n\t\t    long cpu  = sysconf (_SC_CPU_VERSION);\n\n\t\t    switch (cpu)\n\t\t\t{\n\t\t\tcase CPU_PA_RISC1_0: puts (\"hppa1.0\"); break;\n\t\t\tcase CPU_PA_RISC1_1: puts (\"hppa1.1\"); break;\n\t\t\tcase CPU_PA_RISC2_0:\n\t\t#if defined(_SC_KERNEL_BITS)\n\t\t\t    switch (bits)\n\t\t\t\t{\n\t\t\t\tcase 64: puts (\"hppa2.0w\"); break;\n\t\t\t\tcase 32: puts (\"hppa2.0n\"); break;\n\t\t\t\tdefault: puts (\"hppa2.0\"); break;\n\t\t\t\t} break;\n\t\t#else  /* !defined(_SC_KERNEL_BITS) */\n\t\t\t    puts (\"hppa2.0\"); break;\n\t\t#endif\n\t\t\tdefault: puts (\"hppa1.0\"); break;\n\t\t\t}\n\t\t    exit (0);\n\t\t}\nEOF\n\t\t    (CCOPTS= $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`\n\t\t    test -z \"$HP_ARCH\" && HP_ARCH=hppa\n\t\tfi ;;\n\tesac\n\tif [ ${HP_ARCH} = \"hppa2.0w\" ]\n\tthen\n\t    eval $set_cc_for_build\n\n\t    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating\n\t    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler\n\t    # generating 64-bit code.  GNU and HP use different nomenclature:\n\t    #\n\t    # $ CC_FOR_BUILD=cc ./config.guess\n\t    # => hppa2.0w-hp-hpux11.23\n\t    # $ CC_FOR_BUILD=\"cc +DA2.0w\" ./config.guess\n\t    # => hppa64-hp-hpux11.23\n\n\t    if echo __LP64__ | (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) |\n\t\tgrep -q __LP64__\n\t    then\n\t\tHP_ARCH=\"hppa2.0w\"\n\t    else\n\t\tHP_ARCH=\"hppa64\"\n\t    fi\n\tfi\n\techo ${HP_ARCH}-hp-hpux${HPUX_REV}\n\texit ;;\n    ia64:HP-UX:*:*)\n\tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n\techo ia64-hp-hpux${HPUX_REV}\n\texit ;;\n    3050*:HI-UX:*:*)\n\teval $set_cc_for_build\n\tsed 's/^\t//' << EOF >$dummy.c\n\t#include <unistd.h>\n\tint\n\tmain ()\n\t{\n\t  long cpu = sysconf (_SC_CPU_VERSION);\n\t  /* The order matters, because CPU_IS_HP_MC68K erroneously returns\n\t     true for CPU_PA_RISC1_0.  CPU_IS_PA_RISC returns correct\n\t     results, however.  */\n\t  if (CPU_IS_PA_RISC (cpu))\n\t    {\n\t      switch (cpu)\n\t\t{\n\t\t  case CPU_PA_RISC1_0: puts (\"hppa1.0-hitachi-hiuxwe2\"); break;\n\t\t  case CPU_PA_RISC1_1: puts (\"hppa1.1-hitachi-hiuxwe2\"); break;\n\t\t  case CPU_PA_RISC2_0: puts (\"hppa2.0-hitachi-hiuxwe2\"); break;\n\t\t  default: puts (\"hppa-hitachi-hiuxwe2\"); break;\n\t\t}\n\t    }\n\t  else if (CPU_IS_HP_MC68K (cpu))\n\t    puts (\"m68k-hitachi-hiuxwe2\");\n\t  else puts (\"unknown-hitachi-hiuxwe2\");\n\t  exit (0);\n\t}\nEOF\n\t$CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy` &&\n\t\t{ echo \"$SYSTEM_NAME\"; exit; }\n\techo unknown-hitachi-hiuxwe2\n\texit ;;\n    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )\n\techo hppa1.1-hp-bsd\n\texit ;;\n    9000/8??:4.3bsd:*:*)\n\techo hppa1.0-hp-bsd\n\texit ;;\n    *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)\n\techo hppa1.0-hp-mpeix\n\texit ;;\n    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )\n\techo hppa1.1-hp-osf\n\texit ;;\n    hp8??:OSF1:*:*)\n\techo hppa1.0-hp-osf\n\texit ;;\n    i*86:OSF1:*:*)\n\tif [ -x /usr/sbin/sysversion ] ; then\n\t    echo ${UNAME_MACHINE}-unknown-osf1mk\n\telse\n\t    echo ${UNAME_MACHINE}-unknown-osf1\n\tfi\n\texit ;;\n    parisc*:Lites*:*:*)\n\techo hppa1.1-hp-lites\n\texit ;;\n    C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)\n\techo c1-convex-bsd\n\texit ;;\n    C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)\n\tif getsysinfo -f scalar_acc\n\tthen echo c32-convex-bsd\n\telse echo c2-convex-bsd\n\tfi\n\texit ;;\n    C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)\n\techo c34-convex-bsd\n\texit ;;\n    C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)\n\techo c38-convex-bsd\n\texit ;;\n    C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)\n\techo c4-convex-bsd\n\texit ;;\n    CRAY*Y-MP:*:*:*)\n\techo ymp-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    CRAY*[A-Z]90:*:*:*)\n\techo ${UNAME_MACHINE}-cray-unicos${UNAME_RELEASE} \\\n\t| sed -e 's/CRAY.*\\([A-Z]90\\)/\\1/' \\\n\t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \\\n\t      -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    CRAY*TS:*:*:*)\n\techo t90-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    CRAY*T3E:*:*:*)\n\techo alphaev5-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    CRAY*SV1:*:*:*)\n\techo sv1-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    *:UNICOS/mp:*:*)\n\techo craynv-cray-unicosmp${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n\tFUJITSU_PROC=`uname -m | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`\n\tFUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`\n\techo \"${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n\texit ;;\n    5000:UNIX_System_V:4.*:*)\n\tFUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo ${UNAME_RELEASE} | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/ /_/'`\n\techo \"sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n\texit ;;\n    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\\ Embedded/OS:*:*)\n\techo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}\n\texit ;;\n    sparc*:BSD/OS:*:*)\n\techo sparc-unknown-bsdi${UNAME_RELEASE}\n\texit ;;\n    *:BSD/OS:*:*)\n\techo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}\n\texit ;;\n    *:FreeBSD:*:*)\n\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n\tcase ${UNAME_PROCESSOR} in\n\t    amd64)\n\t\techo x86_64-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;\n\t    *)\n\t\techo ${UNAME_PROCESSOR}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;\n\tesac\n\texit ;;\n    i*:CYGWIN*:*)\n\techo ${UNAME_MACHINE}-pc-cygwin\n\texit ;;\n    *:MINGW64*:*)\n\techo ${UNAME_MACHINE}-pc-mingw64\n\texit ;;\n    *:MINGW*:*)\n\techo ${UNAME_MACHINE}-pc-mingw32\n\texit ;;\n    *:MSYS*:*)\n\techo ${UNAME_MACHINE}-pc-msys\n\texit ;;\n    i*:windows32*:*)\n\t# uname -m includes \"-pc\" on this system.\n\techo ${UNAME_MACHINE}-mingw32\n\texit ;;\n    i*:PW*:*)\n\techo ${UNAME_MACHINE}-pc-pw32\n\texit ;;\n    *:Interix*:*)\n\tcase ${UNAME_MACHINE} in\n\t    x86)\n\t\techo i586-pc-interix${UNAME_RELEASE}\n\t\texit ;;\n\t    authenticamd | genuineintel | EM64T)\n\t\techo x86_64-unknown-interix${UNAME_RELEASE}\n\t\texit ;;\n\t    IA64)\n\t\techo ia64-unknown-interix${UNAME_RELEASE}\n\t\texit ;;\n\tesac ;;\n    [345]86:Windows_95:* | [345]86:Windows_98:* | [345]86:Windows_NT:*)\n\techo i${UNAME_MACHINE}-pc-mks\n\texit ;;\n    8664:Windows_NT:*)\n\techo x86_64-pc-mks\n\texit ;;\n    i*:Windows_NT*:* | Pentium*:Windows_NT*:*)\n\t# How do we know it's Interix rather than the generic POSIX subsystem?\n\t# It also conflicts with pre-2.0 versions of AT&T UWIN. Should we\n\t# UNAME_MACHINE based on the output of uname instead of i386?\n\techo i586-pc-interix\n\texit ;;\n    i*:UWIN*:*)\n\techo ${UNAME_MACHINE}-pc-uwin\n\texit ;;\n    amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)\n\techo x86_64-unknown-cygwin\n\texit ;;\n    p*:CYGWIN*:*)\n\techo powerpcle-unknown-cygwin\n\texit ;;\n    prep*:SunOS:5.*:*)\n\techo powerpcle-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n\texit ;;\n    *:GNU:*:*)\n\t# the GNU system\n\techo `echo ${UNAME_MACHINE}|sed -e 's,[-/].*$,,'`-unknown-${LIBC}`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`\n\texit ;;\n    *:GNU/*:*:*)\n\t# other systems with GNU libc and userland\n\techo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr '[A-Z]' '[a-z]'``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-${LIBC}\n\texit ;;\n    i*86:Minix:*:*)\n\techo ${UNAME_MACHINE}-pc-minix\n\texit ;;\n    aarch64:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    aarch64_be:Linux:*:*)\n\tUNAME_MACHINE=aarch64_be\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    alpha:Linux:*:*)\n\tcase `sed -n '/^cpu model/s/^.*: \\(.*\\)/\\1/p' < /proc/cpuinfo` in\n\t  EV5)   UNAME_MACHINE=alphaev5 ;;\n\t  EV56)  UNAME_MACHINE=alphaev56 ;;\n\t  PCA56) UNAME_MACHINE=alphapca56 ;;\n\t  PCA57) UNAME_MACHINE=alphapca56 ;;\n\t  EV6)   UNAME_MACHINE=alphaev6 ;;\n\t  EV67)  UNAME_MACHINE=alphaev67 ;;\n\t  EV68*) UNAME_MACHINE=alphaev68 ;;\n\tesac\n\tobjdump --private-headers /bin/sh | grep -q ld.so.1\n\tif test \"$?\" = 0 ; then LIBC=\"gnulibc1\" ; fi\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    arc:Linux:*:* | arceb:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    arm*:Linux:*:*)\n\teval $set_cc_for_build\n\tif echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t    | grep -q __ARM_EABI__\n\tthen\n\t    echo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\telse\n\t    if echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t\t| grep -q __ARM_PCS_VFP\n\t    then\n\t\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}eabi\n\t    else\n\t\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}eabihf\n\t    fi\n\tfi\n\texit ;;\n    avr32*:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    cris:Linux:*:*)\n\techo ${UNAME_MACHINE}-axis-linux-${LIBC}\n\texit ;;\n    crisv32:Linux:*:*)\n\techo ${UNAME_MACHINE}-axis-linux-${LIBC}\n\texit ;;\n    frv:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    hexagon:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    i*86:Linux:*:*)\n\techo ${UNAME_MACHINE}-pc-linux-${LIBC}\n\texit ;;\n    ia64:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    m32r*:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    m68*:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    mips:Linux:*:* | mips64:Linux:*:*)\n\teval $set_cc_for_build\n\tsed 's/^\t//' << EOF >$dummy.c\n\t#undef CPU\n\t#undef ${UNAME_MACHINE}\n\t#undef ${UNAME_MACHINE}el\n\t#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)\n\tCPU=${UNAME_MACHINE}el\n\t#else\n\t#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)\n\tCPU=${UNAME_MACHINE}\n\t#else\n\tCPU=\n\t#endif\n\t#endif\nEOF\n\teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^CPU'`\n\ttest x\"${CPU}\" != x && { echo \"${CPU}-unknown-linux-${LIBC}\"; exit; }\n\t;;\n    openrisc*:Linux:*:*)\n\techo or1k-unknown-linux-${LIBC}\n\texit ;;\n    or32:Linux:*:* | or1k*:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    padre:Linux:*:*)\n\techo sparc-unknown-linux-${LIBC}\n\texit ;;\n    parisc64:Linux:*:* | hppa64:Linux:*:*)\n\techo hppa64-unknown-linux-${LIBC}\n\texit ;;\n    parisc:Linux:*:* | hppa:Linux:*:*)\n\t# Look for CPU level\n\tcase `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in\n\t  PA7*) echo hppa1.1-unknown-linux-${LIBC} ;;\n\t  PA8*) echo hppa2.0-unknown-linux-${LIBC} ;;\n\t  *)    echo hppa-unknown-linux-${LIBC} ;;\n\tesac\n\texit ;;\n    ppc64:Linux:*:*)\n\techo powerpc64-unknown-linux-${LIBC}\n\texit ;;\n    ppc:Linux:*:*)\n\techo powerpc-unknown-linux-${LIBC}\n\texit ;;\n    ppc64le:Linux:*:*)\n\techo powerpc64le-unknown-linux-${LIBC}\n\texit ;;\n    ppcle:Linux:*:*)\n\techo powerpcle-unknown-linux-${LIBC}\n\texit ;;\n    s390:Linux:*:* | s390x:Linux:*:*)\n\techo ${UNAME_MACHINE}-ibm-linux-${LIBC}\n\texit ;;\n    sh64*:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    sh*:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    sparc:Linux:*:* | sparc64:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    tile*:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    vax:Linux:*:*)\n\techo ${UNAME_MACHINE}-dec-linux-${LIBC}\n\texit ;;\n    x86_64:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    xtensa*:Linux:*:*)\n\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n\texit ;;\n    i*86:DYNIX/ptx:4*:*)\n\t# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.\n\t# earlier versions are messed up and put the nodename in both\n\t# sysname and nodename.\n\techo i386-sequent-sysv4\n\texit ;;\n    i*86:UNIX_SV:4.2MP:2.*)\n\t# Unixware is an offshoot of SVR4, but it has its own version\n\t# number series starting with 2...\n\t# I am not positive that other SVR4 systems won't match this,\n\t# I just have to hope.  -- rms.\n\t# Use sysv4.2uw... so that sysv4* matches it.\n\techo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}\n\texit ;;\n    i*86:OS/2:*:*)\n\t# If we were able to find `uname', then EMX Unix compatibility\n\t# is probably installed.\n\techo ${UNAME_MACHINE}-pc-os2-emx\n\texit ;;\n    i*86:XTS-300:*:STOP)\n\techo ${UNAME_MACHINE}-unknown-stop\n\texit ;;\n    i*86:atheos:*:*)\n\techo ${UNAME_MACHINE}-unknown-atheos\n\texit ;;\n    i*86:syllable:*:*)\n\techo ${UNAME_MACHINE}-pc-syllable\n\texit ;;\n    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.[02]*:*)\n\techo i386-unknown-lynxos${UNAME_RELEASE}\n\texit ;;\n    i*86:*DOS:*:*)\n\techo ${UNAME_MACHINE}-pc-msdosdjgpp\n\texit ;;\n    i*86:*:4.*:* | i*86:SYSTEM_V:4.*:*)\n\tUNAME_REL=`echo ${UNAME_RELEASE} | sed 's/\\/MP$//'`\n\tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n\t\techo ${UNAME_MACHINE}-univel-sysv${UNAME_REL}\n\telse\n\t\techo ${UNAME_MACHINE}-pc-sysv${UNAME_REL}\n\tfi\n\texit ;;\n    i*86:*:5:[678]*)\n\t# UnixWare 7.x, OpenUNIX and OpenServer 6.\n\tcase `/bin/uname -X | grep \"^Machine\"` in\n\t    *486*)\t     UNAME_MACHINE=i486 ;;\n\t    *Pentium)\t     UNAME_MACHINE=i586 ;;\n\t    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;\n\tesac\n\techo ${UNAME_MACHINE}-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}\n\texit ;;\n    i*86:*:3.2:*)\n\tif test -f /usr/options/cb.name; then\n\t\tUNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`\n\t\techo ${UNAME_MACHINE}-pc-isc$UNAME_REL\n\telif /bin/uname -X 2>/dev/null >/dev/null ; then\n\t\tUNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`\n\t\t(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486\n\t\t(/bin/uname -X|grep '^Machine.*Pentium' >/dev/null) \\\n\t\t\t&& UNAME_MACHINE=i586\n\t\t(/bin/uname -X|grep '^Machine.*Pent *II' >/dev/null) \\\n\t\t\t&& UNAME_MACHINE=i686\n\t\t(/bin/uname -X|grep '^Machine.*Pentium Pro' >/dev/null) \\\n\t\t\t&& UNAME_MACHINE=i686\n\t\techo ${UNAME_MACHINE}-pc-sco$UNAME_REL\n\telse\n\t\techo ${UNAME_MACHINE}-pc-sysv32\n\tfi\n\texit ;;\n    pc:*:*:*)\n\t# Left here for compatibility:\n\t# uname -m prints for DJGPP always 'pc', but it prints nothing about\n\t# the processor, so we play safe by assuming i586.\n\t# Note: whatever this is, it MUST be the same as what config.sub\n\t# prints for the \"djgpp\" host, or else GDB configury will decide that\n\t# this is a cross-build.\n\techo i586-pc-msdosdjgpp\n\texit ;;\n    Intel:Mach:3*:*)\n\techo i386-pc-mach3\n\texit ;;\n    paragon:*:*:*)\n\techo i860-intel-osf1\n\texit ;;\n    i860:*:4.*:*) # i860-SVR4\n\tif grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then\n\t  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4\n\telse # Add other i860-SVR4 vendors below as they are discovered.\n\t  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4\n\tfi\n\texit ;;\n    mini*:CTIX:SYS*5:*)\n\t# \"miniframe\"\n\techo m68010-convergent-sysv\n\texit ;;\n    mc68k:UNIX:SYSTEM5:3.51m)\n\techo m68k-convergent-sysv\n\texit ;;\n    M680?0:D-NIX:5.3:*)\n\techo m68k-diab-dnix\n\texit ;;\n    M68*:*:R3V[5678]*:*)\n\ttest -r /sysV68 && { echo 'm68k-motorola-sysv'; exit; } ;;\n    3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0 | S7501*:*:4.0:3.0)\n\tOS_REL=''\n\ttest -r /etc/.relid \\\n\t&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t  && { echo i486-ncr-sysv4.3${OS_REL}; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n\t  && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;\n    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t  && { echo i486-ncr-sysv4; exit; } ;;\n    NCR*:*:4.2:* | MPRAS*:*:4.2:*)\n\tOS_REL='.3'\n\ttest -r /etc/.relid \\\n\t    && OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t    && { echo i486-ncr-sysv4.3${OS_REL}; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n\t    && { echo i586-ncr-sysv4.3${OS_REL}; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep pteron >/dev/null \\\n\t    && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;\n    m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)\n\techo m68k-unknown-lynxos${UNAME_RELEASE}\n\texit ;;\n    mc68030:UNIX_System_V:4.*:*)\n\techo m68k-atari-sysv4\n\texit ;;\n    TSUNAMI:LynxOS:2.*:*)\n\techo sparc-unknown-lynxos${UNAME_RELEASE}\n\texit ;;\n    rs6000:LynxOS:2.*:*)\n\techo rs6000-unknown-lynxos${UNAME_RELEASE}\n\texit ;;\n    PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.[02]*:*)\n\techo powerpc-unknown-lynxos${UNAME_RELEASE}\n\texit ;;\n    SM[BE]S:UNIX_SV:*:*)\n\techo mips-dde-sysv${UNAME_RELEASE}\n\texit ;;\n    RM*:ReliantUNIX-*:*:*)\n\techo mips-sni-sysv4\n\texit ;;\n    RM*:SINIX-*:*:*)\n\techo mips-sni-sysv4\n\texit ;;\n    *:SINIX-*:*:*)\n\tif uname -p 2>/dev/null >/dev/null ; then\n\t\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n\t\techo ${UNAME_MACHINE}-sni-sysv4\n\telse\n\t\techo ns32k-sni-sysv\n\tfi\n\texit ;;\n    PENTIUM:*:4.0*:*)\t# Unisys `ClearPath HMP IX 4000' SVR4/MP effort\n\t\t\t# says <Richard.M.Bartel@ccMail.Census.GOV>\n\techo i586-unisys-sysv4\n\texit ;;\n    *:UNIX_System_V:4*:FTX*)\n\t# From Gerald Hewes <hewes@openmarket.com>.\n\t# How about differentiating between stratus architectures? -djm\n\techo hppa1.1-stratus-sysv4\n\texit ;;\n    *:*:*:FTX*)\n\t# From seanf@swdc.stratus.com.\n\techo i860-stratus-sysv4\n\texit ;;\n    i*86:VOS:*:*)\n\t# From Paul.Green@stratus.com.\n\techo ${UNAME_MACHINE}-stratus-vos\n\texit ;;\n    *:VOS:*:*)\n\t# From Paul.Green@stratus.com.\n\techo hppa1.1-stratus-vos\n\texit ;;\n    mc68*:A/UX:*:*)\n\techo m68k-apple-aux${UNAME_RELEASE}\n\texit ;;\n    news*:NEWS-OS:6*:*)\n\techo mips-sony-newsos6\n\texit ;;\n    R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)\n\tif [ -d /usr/nec ]; then\n\t\techo mips-nec-sysv${UNAME_RELEASE}\n\telse\n\t\techo mips-unknown-sysv${UNAME_RELEASE}\n\tfi\n\texit ;;\n    BeBox:BeOS:*:*)\t# BeOS running on hardware made by Be, PPC only.\n\techo powerpc-be-beos\n\texit ;;\n    BeMac:BeOS:*:*)\t# BeOS running on Mac or Mac clone, PPC only.\n\techo powerpc-apple-beos\n\texit ;;\n    BePC:BeOS:*:*)\t# BeOS running on Intel PC compatible.\n\techo i586-pc-beos\n\texit ;;\n    BePC:Haiku:*:*)\t# Haiku running on Intel PC compatible.\n\techo i586-pc-haiku\n\texit ;;\n    x86_64:Haiku:*:*)\n\techo x86_64-unknown-haiku\n\texit ;;\n    SX-4:SUPER-UX:*:*)\n\techo sx4-nec-superux${UNAME_RELEASE}\n\texit ;;\n    SX-5:SUPER-UX:*:*)\n\techo sx5-nec-superux${UNAME_RELEASE}\n\texit ;;\n    SX-6:SUPER-UX:*:*)\n\techo sx6-nec-superux${UNAME_RELEASE}\n\texit ;;\n    SX-7:SUPER-UX:*:*)\n\techo sx7-nec-superux${UNAME_RELEASE}\n\texit ;;\n    SX-8:SUPER-UX:*:*)\n\techo sx8-nec-superux${UNAME_RELEASE}\n\texit ;;\n    SX-8R:SUPER-UX:*:*)\n\techo sx8r-nec-superux${UNAME_RELEASE}\n\texit ;;\n    Power*:Rhapsody:*:*)\n\techo powerpc-apple-rhapsody${UNAME_RELEASE}\n\texit ;;\n    *:Rhapsody:*:*)\n\techo ${UNAME_MACHINE}-apple-rhapsody${UNAME_RELEASE}\n\texit ;;\n    *:Darwin:*:*)\n\tUNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown\n\teval $set_cc_for_build\n\tif test \"$UNAME_PROCESSOR\" = unknown ; then\n\t    UNAME_PROCESSOR=powerpc\n\tfi\n\tif test `echo \"$UNAME_RELEASE\" | sed -e 's/\\..*//'` -le 10 ; then\n\t    if [ \"$CC_FOR_BUILD\" != 'no_compiler_found' ]; then\n\t\tif (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n\t\t    (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \\\n\t\t    grep IS_64BIT_ARCH >/dev/null\n\t\tthen\n\t\t    case $UNAME_PROCESSOR in\n\t\t\ti386) UNAME_PROCESSOR=x86_64 ;;\n\t\t\tpowerpc) UNAME_PROCESSOR=powerpc64 ;;\n\t\t    esac\n\t\tfi\n\t    fi\n\telif test \"$UNAME_PROCESSOR\" = i386 ; then\n\t    # Avoid executing cc on OS X 10.9, as it ships with a stub\n\t    # that puts up a graphical alert prompting to install\n\t    # developer tools.  Any system running Mac OS X 10.7 or\n\t    # later (Darwin 11 and later) is required to have a 64-bit\n\t    # processor. This is not true of the ARM version of Darwin\n\t    # that Apple uses in portable devices.\n\t    UNAME_PROCESSOR=x86_64\n\tfi\n\techo ${UNAME_PROCESSOR}-apple-darwin${UNAME_RELEASE}\n\texit ;;\n    *:procnto*:*:* | *:QNX:[0123456789]*:*)\n\tUNAME_PROCESSOR=`uname -p`\n\tif test \"$UNAME_PROCESSOR\" = \"x86\"; then\n\t\tUNAME_PROCESSOR=i386\n\t\tUNAME_MACHINE=pc\n\tfi\n\techo ${UNAME_PROCESSOR}-${UNAME_MACHINE}-nto-qnx${UNAME_RELEASE}\n\texit ;;\n    *:QNX:*:4*)\n\techo i386-pc-qnx\n\texit ;;\n    NEO-?:NONSTOP_KERNEL:*:*)\n\techo neo-tandem-nsk${UNAME_RELEASE}\n\texit ;;\n    NSE-*:NONSTOP_KERNEL:*:*)\n\techo nse-tandem-nsk${UNAME_RELEASE}\n\texit ;;\n    NSR-?:NONSTOP_KERNEL:*:*)\n\techo nsr-tandem-nsk${UNAME_RELEASE}\n\texit ;;\n    *:NonStop-UX:*:*)\n\techo mips-compaq-nonstopux\n\texit ;;\n    BS2000:POSIX*:*:*)\n\techo bs2000-siemens-sysv\n\texit ;;\n    DS/*:UNIX_System_V:*:*)\n\techo ${UNAME_MACHINE}-${UNAME_SYSTEM}-${UNAME_RELEASE}\n\texit ;;\n    *:Plan9:*:*)\n\t# \"uname -m\" is not consistent, so use $cputype instead. 386\n\t# is converted to i386 for consistency with other x86\n\t# operating systems.\n\tif test \"$cputype\" = \"386\"; then\n\t    UNAME_MACHINE=i386\n\telse\n\t    UNAME_MACHINE=\"$cputype\"\n\tfi\n\techo ${UNAME_MACHINE}-unknown-plan9\n\texit ;;\n    *:TOPS-10:*:*)\n\techo pdp10-unknown-tops10\n\texit ;;\n    *:TENEX:*:*)\n\techo pdp10-unknown-tenex\n\texit ;;\n    KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)\n\techo pdp10-dec-tops20\n\texit ;;\n    XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)\n\techo pdp10-xkl-tops20\n\texit ;;\n    *:TOPS-20:*:*)\n\techo pdp10-unknown-tops20\n\texit ;;\n    *:ITS:*:*)\n\techo pdp10-unknown-its\n\texit ;;\n    SEI:*:*:SEIUX)\n\techo mips-sei-seiux${UNAME_RELEASE}\n\texit ;;\n    *:DragonFly:*:*)\n\techo ${UNAME_MACHINE}-unknown-dragonfly`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\n\texit ;;\n    *:*VMS:*:*)\n\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n\tcase \"${UNAME_MACHINE}\" in\n\t    A*) echo alpha-dec-vms ; exit ;;\n\t    I*) echo ia64-dec-vms ; exit ;;\n\t    V*) echo vax-dec-vms ; exit ;;\n\tesac ;;\n    *:XENIX:*:SysV)\n\techo i386-pc-xenix\n\texit ;;\n    i*86:skyos:*:*)\n\techo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE}` | sed -e 's/ .*$//'\n\texit ;;\n    i*86:rdos:*:*)\n\techo ${UNAME_MACHINE}-pc-rdos\n\texit ;;\n    i*86:AROS:*:*)\n\techo ${UNAME_MACHINE}-pc-aros\n\texit ;;\n    x86_64:VMkernel:*:*)\n\techo ${UNAME_MACHINE}-unknown-esx\n\texit ;;\nesac\n\ncat >&2 <<EOF\n$0: unable to guess system type\n\nThis script, last modified $timestamp, has failed to recognize\nthe operating system you are using. It is advised that you\ndownload the most up to date version of the config scripts from\n\n  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD\nand\n  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD\n\nIf the version you run ($0) is already up to date, please\nsend the following data and any information you think might be\npertinent to <config-patches@gnu.org> in order to provide the needed\ninformation to handle your system.\n\nconfig.guess timestamp = $timestamp\n\nuname -m = `(uname -m) 2>/dev/null || echo unknown`\nuname -r = `(uname -r) 2>/dev/null || echo unknown`\nuname -s = `(uname -s) 2>/dev/null || echo unknown`\nuname -v = `(uname -v) 2>/dev/null || echo unknown`\n\n/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`\n/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`\n\nhostinfo               = `(hostinfo) 2>/dev/null`\n/bin/universe          = `(/bin/universe) 2>/dev/null`\n/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`\n/bin/arch              = `(/bin/arch) 2>/dev/null`\n/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`\n/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`\n\nUNAME_MACHINE = ${UNAME_MACHINE}\nUNAME_RELEASE = ${UNAME_RELEASE}\nUNAME_SYSTEM  = ${UNAME_SYSTEM}\nUNAME_VERSION = ${UNAME_VERSION}\nEOF\n\nexit 1\n\n# Local variables:\n# eval: (add-hook 'write-file-hooks 'time-stamp)\n# time-stamp-start: \"timestamp='\"\n# time-stamp-format: \"%:y-%02m-%02d\"\n# time-stamp-end: \"'\"\n# End:\n"
        },
        {
          "name": "config.sub",
          "type": "blob",
          "size": 34.986328125,
          "content": "#! /bin/sh\n# Configuration validation subroutine script.\n#   Copyright 1992-2014 Free Software Foundation, Inc.\n\ntimestamp='2014-07-28'\n\n# This file is free software; you can redistribute it and/or modify it\n# under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, see <http://www.gnu.org/licenses/>.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that\n# program.  This Exception is an additional permission under section 7\n# of the GNU General Public License, version 3 (\"GPLv3\").\n\n\n# Please send patches with a ChangeLog entry to config-patches@gnu.org.\n#\n# Configuration subroutine to validate and canonicalize a configuration type.\n# Supply the specified configuration type as an argument.\n# If it is invalid, we print an error message on stderr and exit with code 1.\n# Otherwise, we print the canonical config type on stdout and succeed.\n\n# You can get the latest version of this script from:\n# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD\n\n# This file is supposed to be the same for all GNU packages\n# and recognize all the CPU types, system types and aliases\n# that are meaningful with *any* GNU software.\n# Each package is responsible for reporting which valid configurations\n# it does not support.  The user should be able to distinguish\n# a failure to support a valid configuration from a meaningless\n# configuration.\n\n# The goal of this file is to map all the various variations of a given\n# machine specification into a single specification in the form:\n#\tCPU_TYPE-MANUFACTURER-OPERATING_SYSTEM\n# or in some cases, the newer four-part form:\n#\tCPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM\n# It is wrong to echo any other type of specification.\n\nme=`echo \"$0\" | sed -e 's,.*/,,'`\n\nusage=\"\\\nUsage: $0 [OPTION] CPU-MFR-OPSYS\n       $0 [OPTION] ALIAS\n\nCanonicalize a configuration name.\n\nOperation modes:\n  -h, --help         print this help, then exit\n  -t, --time-stamp   print date of last modification, then exit\n  -v, --version      print version number, then exit\n\nReport bugs and patches to <config-patches@gnu.org>.\"\n\nversion=\"\\\nGNU config.sub ($timestamp)\n\nCopyright 1992-2014 Free Software Foundation, Inc.\n\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n\nhelp=\"\nTry \\`$me --help' for more information.\"\n\n# Parse command line\nwhile test $# -gt 0 ; do\n  case $1 in\n    --time-stamp | --time* | -t )\n       echo \"$timestamp\" ; exit ;;\n    --version | -v )\n       echo \"$version\" ; exit ;;\n    --help | --h* | -h )\n       echo \"$usage\"; exit ;;\n    -- )     # Stop option processing\n       shift; break ;;\n    - )\t# Use stdin as input.\n       break ;;\n    -* )\n       echo \"$me: invalid option $1$help\"\n       exit 1 ;;\n\n    *local*)\n       # First pass through any local machine types.\n       echo $1\n       exit ;;\n\n    * )\n       break ;;\n  esac\ndone\n\ncase $# in\n 0) echo \"$me: missing argument$help\" >&2\n    exit 1;;\n 1) ;;\n *) echo \"$me: too many arguments$help\" >&2\n    exit 1;;\nesac\n\n# Separate what the user gave into CPU-COMPANY and OS or KERNEL-OS (if any).\n# Here we must recognize all the valid KERNEL-OS combinations.\nmaybe_os=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\2/'`\ncase $maybe_os in\n  nto-qnx* | linux-gnu* | linux-android* | linux-dietlibc | linux-newlib* | \\\n  linux-musl* | linux-uclibc* | uclinux-uclibc* | uclinux-gnu* | kfreebsd*-gnu* | \\\n  knetbsd*-gnu* | netbsd*-gnu* | \\\n  kopensolaris*-gnu* | \\\n  storm-chaos* | os2-emx* | rtmk-nova*)\n    os=-$maybe_os\n    basic_machine=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\1/'`\n    ;;\n  android-linux)\n    os=-linux-android\n    basic_machine=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\1/'`-unknown\n    ;;\n  *)\n    basic_machine=`echo $1 | sed 's/-[^-]*$//'`\n    if [ $basic_machine != $1 ]\n    then os=`echo $1 | sed 's/.*-/-/'`\n    else os=; fi\n    ;;\nesac\n\n### Let's recognize common machines as not being operating systems so\n### that things like config.sub decstation-3100 work.  We also\n### recognize some manufacturers as not being operating systems, so we\n### can provide default operating systems below.\ncase $os in\n\t-sun*os*)\n\t\t# Prevent following clause from handling this invalid input.\n\t\t;;\n\t-dec* | -mips* | -sequent* | -encore* | -pc532* | -sgi* | -sony* | \\\n\t-att* | -7300* | -3300* | -delta* | -motorola* | -sun[234]* | \\\n\t-unicom* | -ibm* | -next | -hp | -isi* | -apollo | -altos* | \\\n\t-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\\\n\t-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \\\n\t-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \\\n\t-apple | -axis | -knuth | -cray | -microblaze*)\n\t\tos=\n\t\tbasic_machine=$1\n\t\t;;\n\t-bluegene*)\n\t\tos=-cnk\n\t\t;;\n\t-sim | -cisco | -oki | -wec | -winbond)\n\t\tos=\n\t\tbasic_machine=$1\n\t\t;;\n\t-scout)\n\t\t;;\n\t-wrs)\n\t\tos=-vxworks\n\t\tbasic_machine=$1\n\t\t;;\n\t-chorusos*)\n\t\tos=-chorusos\n\t\tbasic_machine=$1\n\t\t;;\n\t-chorusrdb)\n\t\tos=-chorusrdb\n\t\tbasic_machine=$1\n\t\t;;\n\t-hiux*)\n\t\tos=-hiuxwe2\n\t\t;;\n\t-sco6)\n\t\tos=-sco5v6\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n\t\t;;\n\t-sco5)\n\t\tos=-sco3.2v5\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n\t\t;;\n\t-sco4)\n\t\tos=-sco3.2v4\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n\t\t;;\n\t-sco3.2.[4-9]*)\n\t\tos=`echo $os | sed -e 's/sco3.2./sco3.2v/'`\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n\t\t;;\n\t-sco3.2v[4-9]*)\n\t\t# Don't forget version if it is 3.2v4 or newer.\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n\t\t;;\n\t-sco5v6*)\n\t\t# Don't forget version if it is 3.2v4 or newer.\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n\t\t;;\n\t-sco*)\n\t\tos=-sco3.2v2\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n\t\t;;\n\t-udk*)\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n\t\t;;\n\t-isc)\n\t\tos=-isc2.2\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n\t\t;;\n\t-clix*)\n\t\tbasic_machine=clipper-intergraph\n\t\t;;\n\t-isc*)\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n\t\t;;\n\t-lynx*178)\n\t\tos=-lynxos178\n\t\t;;\n\t-lynx*5)\n\t\tos=-lynxos5\n\t\t;;\n\t-lynx*)\n\t\tos=-lynxos\n\t\t;;\n\t-ptx*)\n\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-sequent/'`\n\t\t;;\n\t-windowsnt*)\n\t\tos=`echo $os | sed -e 's/windowsnt/winnt/'`\n\t\t;;\n\t-psos*)\n\t\tos=-psos\n\t\t;;\n\t-mint | -mint[0-9]*)\n\t\tbasic_machine=m68k-atari\n\t\tos=-mint\n\t\t;;\nesac\n\n# Decode aliases for certain CPU-COMPANY combinations.\ncase $basic_machine in\n\t# Recognize the basic CPU types without company name.\n\t# Some are omitted here because they have special meanings below.\n\t1750a | 580 \\\n\t| a29k \\\n\t| aarch64 | aarch64_be \\\n\t| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] | alphapca5[67] \\\n\t| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \\\n\t| am33_2.0 \\\n\t| arc | arceb \\\n\t| arm | arm[bl]e | arme[lb] | armv[2-8] | armv[3-8][lb] | armv7[arm] \\\n\t| avr | avr32 \\\n\t| be32 | be64 \\\n\t| bfin \\\n\t| c4x | c8051 | clipper \\\n\t| d10v | d30v | dlx | dsp16xx \\\n\t| epiphany \\\n\t| fido | fr30 | frv \\\n\t| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n\t| hexagon \\\n\t| i370 | i860 | i960 | ia64 \\\n\t| ip2k | iq2000 \\\n\t| k1om \\\n\t| le32 | le64 \\\n\t| lm32 \\\n\t| m32c | m32r | m32rle | m68000 | m68k | m88k \\\n\t| maxq | mb | microblaze | microblazeel | mcore | mep | metag \\\n\t| mips | mipsbe | mipseb | mipsel | mipsle \\\n\t| mips16 \\\n\t| mips64 | mips64el \\\n\t| mips64octeon | mips64octeonel \\\n\t| mips64orion | mips64orionel \\\n\t| mips64r5900 | mips64r5900el \\\n\t| mips64vr | mips64vrel \\\n\t| mips64vr4100 | mips64vr4100el \\\n\t| mips64vr4300 | mips64vr4300el \\\n\t| mips64vr5000 | mips64vr5000el \\\n\t| mips64vr5900 | mips64vr5900el \\\n\t| mipsisa32 | mipsisa32el \\\n\t| mipsisa32r2 | mipsisa32r2el \\\n\t| mipsisa32r6 | mipsisa32r6el \\\n\t| mipsisa64 | mipsisa64el \\\n\t| mipsisa64r2 | mipsisa64r2el \\\n\t| mipsisa64r6 | mipsisa64r6el \\\n\t| mipsisa64sb1 | mipsisa64sb1el \\\n\t| mipsisa64sr71k | mipsisa64sr71kel \\\n\t| mipsr5900 | mipsr5900el \\\n\t| mipstx39 | mipstx39el \\\n\t| mn10200 | mn10300 \\\n\t| moxie \\\n\t| mt \\\n\t| msp430 \\\n\t| nds32 | nds32le | nds32be \\\n\t| nios | nios2 | nios2eb | nios2el \\\n\t| ns16k | ns32k \\\n\t| open8 | or1k | or1knd | or32 \\\n\t| pdp10 | pdp11 | pj | pjl \\\n\t| powerpc | powerpc64 | powerpc64le | powerpcle \\\n\t| pyramid \\\n\t| rl78 | rx \\\n\t| score \\\n\t| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[34]eb | sheb | shbe | shle | sh[1234]le | sh3ele \\\n\t| sh64 | sh64le \\\n\t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \\\n\t| sparcv8 | sparcv9 | sparcv9b | sparcv9v \\\n\t| spu \\\n\t| tahoe | tic4x | tic54x | tic55x | tic6x | tic80 | tron \\\n\t| ubicom32 \\\n\t| v850 | v850e | v850e1 | v850e2 | v850es | v850e2v3 \\\n\t| we32k \\\n\t| x86 | xc16x | xstormy16 | xtensa \\\n\t| z8k | z80)\n\t\tbasic_machine=$basic_machine-unknown\n\t\t;;\n\tc54x)\n\t\tbasic_machine=tic54x-unknown\n\t\t;;\n\tc55x)\n\t\tbasic_machine=tic55x-unknown\n\t\t;;\n\tc6x)\n\t\tbasic_machine=tic6x-unknown\n\t\t;;\n\tm6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x | nvptx | picochip)\n\t\tbasic_machine=$basic_machine-unknown\n\t\tos=-none\n\t\t;;\n\tm88110 | m680[12346]0 | m683?2 | m68360 | m5200 | v70 | w65 | z8k)\n\t\t;;\n\tms1)\n\t\tbasic_machine=mt-unknown\n\t\t;;\n\n\tstrongarm | thumb | xscale)\n\t\tbasic_machine=arm-unknown\n\t\t;;\n\txgate)\n\t\tbasic_machine=$basic_machine-unknown\n\t\tos=-none\n\t\t;;\n\txscaleeb)\n\t\tbasic_machine=armeb-unknown\n\t\t;;\n\n\txscaleel)\n\t\tbasic_machine=armel-unknown\n\t\t;;\n\n\t# We use `pc' rather than `unknown'\n\t# because (1) that's what they normally are, and\n\t# (2) the word \"unknown\" tends to confuse beginning users.\n\ti*86 | x86_64)\n\t  basic_machine=$basic_machine-pc\n\t  ;;\n\t# Object if more than one company name word.\n\t*-*-*)\n\t\techo Invalid configuration \\`$1\\': machine \\`$basic_machine\\' not recognized 1>&2\n\t\texit 1\n\t\t;;\n\t# Recognize the basic CPU types with company name.\n\t580-* \\\n\t| a29k-* \\\n\t| aarch64-* | aarch64_be-* \\\n\t| alpha-* | alphaev[4-8]-* | alphaev56-* | alphaev6[78]-* \\\n\t| alpha64-* | alpha64ev[4-8]-* | alpha64ev56-* | alpha64ev6[78]-* \\\n\t| alphapca5[67]-* | alpha64pca5[67]-* | arc-* | arceb-* \\\n\t| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \\\n\t| avr-* | avr32-* \\\n\t| be32-* | be64-* \\\n\t| bfin-* | bs2000-* \\\n\t| c[123]* | c30-* | [cjt]90-* | c4x-* \\\n\t| c8051-* | clipper-* | craynv-* | cydra-* \\\n\t| d10v-* | d30v-* | dlx-* \\\n\t| elxsi-* \\\n\t| f30[01]-* | f700-* | fido-* | fr30-* | frv-* | fx80-* \\\n\t| h8300-* | h8500-* \\\n\t| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \\\n\t| hexagon-* \\\n\t| i*86-* | i860-* | i960-* | ia64-* \\\n\t| ip2k-* | iq2000-* \\\n\t| k1om-* \\\n\t| le32-* | le64-* \\\n\t| lm32-* \\\n\t| m32c-* | m32r-* | m32rle-* \\\n\t| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \\\n\t| m88110-* | m88k-* | maxq-* | mcore-* | metag-* \\\n\t| microblaze-* | microblazeel-* \\\n\t| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \\\n\t| mips16-* \\\n\t| mips64-* | mips64el-* \\\n\t| mips64octeon-* | mips64octeonel-* \\\n\t| mips64orion-* | mips64orionel-* \\\n\t| mips64r5900-* | mips64r5900el-* \\\n\t| mips64vr-* | mips64vrel-* \\\n\t| mips64vr4100-* | mips64vr4100el-* \\\n\t| mips64vr4300-* | mips64vr4300el-* \\\n\t| mips64vr5000-* | mips64vr5000el-* \\\n\t| mips64vr5900-* | mips64vr5900el-* \\\n\t| mipsisa32-* | mipsisa32el-* \\\n\t| mipsisa32r2-* | mipsisa32r2el-* \\\n\t| mipsisa32r6-* | mipsisa32r6el-* \\\n\t| mipsisa64-* | mipsisa64el-* \\\n\t| mipsisa64r2-* | mipsisa64r2el-* \\\n\t| mipsisa64r6-* | mipsisa64r6el-* \\\n\t| mipsisa64sb1-* | mipsisa64sb1el-* \\\n\t| mipsisa64sr71k-* | mipsisa64sr71kel-* \\\n\t| mipsr5900-* | mipsr5900el-* \\\n\t| mipstx39-* | mipstx39el-* \\\n\t| mmix-* \\\n\t| mt-* \\\n\t| msp430-* \\\n\t| nds32-* | nds32le-* | nds32be-* \\\n\t| nios-* | nios2-* | nios2eb-* | nios2el-* \\\n\t| none-* | np1-* | ns16k-* | ns32k-* \\\n\t| open8-* \\\n\t| or1k*-* \\\n\t| orion-* \\\n\t| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \\\n\t| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* \\\n\t| pyramid-* \\\n\t| rl78-* | romp-* | rs6000-* | rx-* \\\n\t| sh-* | sh[1234]-* | sh[24]a-* | sh[24]aeb-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \\\n\t| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \\\n\t| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \\\n\t| sparclite-* \\\n\t| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | sv1-* | sx?-* \\\n\t| tahoe-* \\\n\t| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \\\n\t| tile*-* \\\n\t| tron-* \\\n\t| ubicom32-* \\\n\t| v850-* | v850e-* | v850e1-* | v850es-* | v850e2-* | v850e2v3-* \\\n\t| vax-* \\\n\t| we32k-* \\\n\t| x86-* | x86_64-* | xc16x-* | xps100-* \\\n\t| xstormy16-* | xtensa*-* \\\n\t| ymp-* \\\n\t| z8k-* | z80-*)\n\t\t;;\n\t# Recognize the basic CPU types without company name, with glob match.\n\txtensa*)\n\t\tbasic_machine=$basic_machine-unknown\n\t\t;;\n\t# Recognize the various machine names and aliases which stand\n\t# for a CPU type and a company and sometimes even an OS.\n\t386bsd)\n\t\tbasic_machine=i386-unknown\n\t\tos=-bsd\n\t\t;;\n\t3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)\n\t\tbasic_machine=m68000-att\n\t\t;;\n\t3b*)\n\t\tbasic_machine=we32k-att\n\t\t;;\n\ta29khif)\n\t\tbasic_machine=a29k-amd\n\t\tos=-udi\n\t\t;;\n\tabacus)\n\t\tbasic_machine=abacus-unknown\n\t\t;;\n\tadobe68k)\n\t\tbasic_machine=m68010-adobe\n\t\tos=-scout\n\t\t;;\n\talliant | fx80)\n\t\tbasic_machine=fx80-alliant\n\t\t;;\n\taltos | altos3068)\n\t\tbasic_machine=m68k-altos\n\t\t;;\n\tam29k)\n\t\tbasic_machine=a29k-none\n\t\tos=-bsd\n\t\t;;\n\tamd64)\n\t\tbasic_machine=x86_64-pc\n\t\t;;\n\tamd64-*)\n\t\tbasic_machine=x86_64-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tamdahl)\n\t\tbasic_machine=580-amdahl\n\t\tos=-sysv\n\t\t;;\n\tamiga | amiga-*)\n\t\tbasic_machine=m68k-unknown\n\t\t;;\n\tamigaos | amigados)\n\t\tbasic_machine=m68k-unknown\n\t\tos=-amigaos\n\t\t;;\n\tamigaunix | amix)\n\t\tbasic_machine=m68k-unknown\n\t\tos=-sysv4\n\t\t;;\n\tapollo68)\n\t\tbasic_machine=m68k-apollo\n\t\tos=-sysv\n\t\t;;\n\tapollo68bsd)\n\t\tbasic_machine=m68k-apollo\n\t\tos=-bsd\n\t\t;;\n\taros)\n\t\tbasic_machine=i386-pc\n\t\tos=-aros\n\t\t;;\n\taux)\n\t\tbasic_machine=m68k-apple\n\t\tos=-aux\n\t\t;;\n\tbalance)\n\t\tbasic_machine=ns32k-sequent\n\t\tos=-dynix\n\t\t;;\n\tblackfin)\n\t\tbasic_machine=bfin-unknown\n\t\tos=-linux\n\t\t;;\n\tblackfin-*)\n\t\tbasic_machine=bfin-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\tos=-linux\n\t\t;;\n\tbluegene*)\n\t\tbasic_machine=powerpc-ibm\n\t\tos=-cnk\n\t\t;;\n\tc54x-*)\n\t\tbasic_machine=tic54x-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tc55x-*)\n\t\tbasic_machine=tic55x-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tc6x-*)\n\t\tbasic_machine=tic6x-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tc90)\n\t\tbasic_machine=c90-cray\n\t\tos=-unicos\n\t\t;;\n\tcegcc)\n\t\tbasic_machine=arm-unknown\n\t\tos=-cegcc\n\t\t;;\n\tconvex-c1)\n\t\tbasic_machine=c1-convex\n\t\tos=-bsd\n\t\t;;\n\tconvex-c2)\n\t\tbasic_machine=c2-convex\n\t\tos=-bsd\n\t\t;;\n\tconvex-c32)\n\t\tbasic_machine=c32-convex\n\t\tos=-bsd\n\t\t;;\n\tconvex-c34)\n\t\tbasic_machine=c34-convex\n\t\tos=-bsd\n\t\t;;\n\tconvex-c38)\n\t\tbasic_machine=c38-convex\n\t\tos=-bsd\n\t\t;;\n\tcray | j90)\n\t\tbasic_machine=j90-cray\n\t\tos=-unicos\n\t\t;;\n\tcraynv)\n\t\tbasic_machine=craynv-cray\n\t\tos=-unicosmp\n\t\t;;\n\tcr16 | cr16-*)\n\t\tbasic_machine=cr16-unknown\n\t\tos=-elf\n\t\t;;\n\tcrds | unos)\n\t\tbasic_machine=m68k-crds\n\t\t;;\n\tcrisv32 | crisv32-* | etraxfs*)\n\t\tbasic_machine=crisv32-axis\n\t\t;;\n\tcris | cris-* | etrax*)\n\t\tbasic_machine=cris-axis\n\t\t;;\n\tcrx)\n\t\tbasic_machine=crx-unknown\n\t\tos=-elf\n\t\t;;\n\tda30 | da30-*)\n\t\tbasic_machine=m68k-da30\n\t\t;;\n\tdecstation | decstation-3100 | pmax | pmax-* | pmin | dec3100 | decstatn)\n\t\tbasic_machine=mips-dec\n\t\t;;\n\tdecsystem10* | dec10*)\n\t\tbasic_machine=pdp10-dec\n\t\tos=-tops10\n\t\t;;\n\tdecsystem20* | dec20*)\n\t\tbasic_machine=pdp10-dec\n\t\tos=-tops20\n\t\t;;\n\tdelta | 3300 | motorola-3300 | motorola-delta \\\n\t      | 3300-motorola | delta-motorola)\n\t\tbasic_machine=m68k-motorola\n\t\t;;\n\tdelta88)\n\t\tbasic_machine=m88k-motorola\n\t\tos=-sysv3\n\t\t;;\n\tdicos)\n\t\tbasic_machine=i686-pc\n\t\tos=-dicos\n\t\t;;\n\tdjgpp)\n\t\tbasic_machine=i586-pc\n\t\tos=-msdosdjgpp\n\t\t;;\n\tdpx20 | dpx20-*)\n\t\tbasic_machine=rs6000-bull\n\t\tos=-bosx\n\t\t;;\n\tdpx2* | dpx2*-bull)\n\t\tbasic_machine=m68k-bull\n\t\tos=-sysv3\n\t\t;;\n\tebmon29k)\n\t\tbasic_machine=a29k-amd\n\t\tos=-ebmon\n\t\t;;\n\telxsi)\n\t\tbasic_machine=elxsi-elxsi\n\t\tos=-bsd\n\t\t;;\n\tencore | umax | mmax)\n\t\tbasic_machine=ns32k-encore\n\t\t;;\n\tes1800 | OSE68k | ose68k | ose | OSE)\n\t\tbasic_machine=m68k-ericsson\n\t\tos=-ose\n\t\t;;\n\tfx2800)\n\t\tbasic_machine=i860-alliant\n\t\t;;\n\tgenix)\n\t\tbasic_machine=ns32k-ns\n\t\t;;\n\tgmicro)\n\t\tbasic_machine=tron-gmicro\n\t\tos=-sysv\n\t\t;;\n\tgo32)\n\t\tbasic_machine=i386-pc\n\t\tos=-go32\n\t\t;;\n\th3050r* | hiux*)\n\t\tbasic_machine=hppa1.1-hitachi\n\t\tos=-hiuxwe2\n\t\t;;\n\th8300hms)\n\t\tbasic_machine=h8300-hitachi\n\t\tos=-hms\n\t\t;;\n\th8300xray)\n\t\tbasic_machine=h8300-hitachi\n\t\tos=-xray\n\t\t;;\n\th8500hms)\n\t\tbasic_machine=h8500-hitachi\n\t\tos=-hms\n\t\t;;\n\tharris)\n\t\tbasic_machine=m88k-harris\n\t\tos=-sysv3\n\t\t;;\n\thp300-*)\n\t\tbasic_machine=m68k-hp\n\t\t;;\n\thp300bsd)\n\t\tbasic_machine=m68k-hp\n\t\tos=-bsd\n\t\t;;\n\thp300hpux)\n\t\tbasic_machine=m68k-hp\n\t\tos=-hpux\n\t\t;;\n\thp3k9[0-9][0-9] | hp9[0-9][0-9])\n\t\tbasic_machine=hppa1.0-hp\n\t\t;;\n\thp9k2[0-9][0-9] | hp9k31[0-9])\n\t\tbasic_machine=m68000-hp\n\t\t;;\n\thp9k3[2-9][0-9])\n\t\tbasic_machine=m68k-hp\n\t\t;;\n\thp9k6[0-9][0-9] | hp6[0-9][0-9])\n\t\tbasic_machine=hppa1.0-hp\n\t\t;;\n\thp9k7[0-79][0-9] | hp7[0-79][0-9])\n\t\tbasic_machine=hppa1.1-hp\n\t\t;;\n\thp9k78[0-9] | hp78[0-9])\n\t\t# FIXME: really hppa2.0-hp\n\t\tbasic_machine=hppa1.1-hp\n\t\t;;\n\thp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)\n\t\t# FIXME: really hppa2.0-hp\n\t\tbasic_machine=hppa1.1-hp\n\t\t;;\n\thp9k8[0-9][13679] | hp8[0-9][13679])\n\t\tbasic_machine=hppa1.1-hp\n\t\t;;\n\thp9k8[0-9][0-9] | hp8[0-9][0-9])\n\t\tbasic_machine=hppa1.0-hp\n\t\t;;\n\thppa-next)\n\t\tos=-nextstep3\n\t\t;;\n\thppaosf)\n\t\tbasic_machine=hppa1.1-hp\n\t\tos=-osf\n\t\t;;\n\thppro)\n\t\tbasic_machine=hppa1.1-hp\n\t\tos=-proelf\n\t\t;;\n\ti370-ibm* | ibm*)\n\t\tbasic_machine=i370-ibm\n\t\t;;\n\ti*86v32)\n\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n\t\tos=-sysv32\n\t\t;;\n\ti*86v4*)\n\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n\t\tos=-sysv4\n\t\t;;\n\ti*86v)\n\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n\t\tos=-sysv\n\t\t;;\n\ti*86sol2)\n\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n\t\tos=-solaris2\n\t\t;;\n\ti386mach)\n\t\tbasic_machine=i386-mach\n\t\tos=-mach\n\t\t;;\n\ti386-vsta | vsta)\n\t\tbasic_machine=i386-unknown\n\t\tos=-vsta\n\t\t;;\n\tiris | iris4d)\n\t\tbasic_machine=mips-sgi\n\t\tcase $os in\n\t\t    -irix*)\n\t\t\t;;\n\t\t    *)\n\t\t\tos=-irix4\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tisi68 | isi)\n\t\tbasic_machine=m68k-isi\n\t\tos=-sysv\n\t\t;;\n\tm68knommu)\n\t\tbasic_machine=m68k-unknown\n\t\tos=-linux\n\t\t;;\n\tm68knommu-*)\n\t\tbasic_machine=m68k-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\tos=-linux\n\t\t;;\n\tm88k-omron*)\n\t\tbasic_machine=m88k-omron\n\t\t;;\n\tmagnum | m3230)\n\t\tbasic_machine=mips-mips\n\t\tos=-sysv\n\t\t;;\n\tmerlin)\n\t\tbasic_machine=ns32k-utek\n\t\tos=-sysv\n\t\t;;\n\tmicroblaze*)\n\t\tbasic_machine=microblaze-xilinx\n\t\t;;\n\tmingw64)\n\t\tbasic_machine=x86_64-pc\n\t\tos=-mingw64\n\t\t;;\n\tmingw32)\n\t\tbasic_machine=i686-pc\n\t\tos=-mingw32\n\t\t;;\n\tmingw32ce)\n\t\tbasic_machine=arm-unknown\n\t\tos=-mingw32ce\n\t\t;;\n\tminiframe)\n\t\tbasic_machine=m68000-convergent\n\t\t;;\n\t*mint | -mint[0-9]* | *MiNT | *MiNT[0-9]*)\n\t\tbasic_machine=m68k-atari\n\t\tos=-mint\n\t\t;;\n\tmips3*-*)\n\t\tbasic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`\n\t\t;;\n\tmips3*)\n\t\tbasic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`-unknown\n\t\t;;\n\tmonitor)\n\t\tbasic_machine=m68k-rom68k\n\t\tos=-coff\n\t\t;;\n\tmorphos)\n\t\tbasic_machine=powerpc-unknown\n\t\tos=-morphos\n\t\t;;\n\tmoxiebox)\n\t\tbasic_machine=moxie-unknown\n\t\tos=-moxiebox\n\t\t;;\n\tmsdos)\n\t\tbasic_machine=i386-pc\n\t\tos=-msdos\n\t\t;;\n\tms1-*)\n\t\tbasic_machine=`echo $basic_machine | sed -e 's/ms1-/mt-/'`\n\t\t;;\n\tmsys)\n\t\tbasic_machine=i686-pc\n\t\tos=-msys\n\t\t;;\n\tmvs)\n\t\tbasic_machine=i370-ibm\n\t\tos=-mvs\n\t\t;;\n\tnacl)\n\t\tbasic_machine=le32-unknown\n\t\tos=-nacl\n\t\t;;\n\tncr3000)\n\t\tbasic_machine=i486-ncr\n\t\tos=-sysv4\n\t\t;;\n\tnetbsd386)\n\t\tbasic_machine=i386-unknown\n\t\tos=-netbsd\n\t\t;;\n\tnetwinder)\n\t\tbasic_machine=armv4l-rebel\n\t\tos=-linux\n\t\t;;\n\tnews | news700 | news800 | news900)\n\t\tbasic_machine=m68k-sony\n\t\tos=-newsos\n\t\t;;\n\tnews1000)\n\t\tbasic_machine=m68030-sony\n\t\tos=-newsos\n\t\t;;\n\tnews-3600 | risc-news)\n\t\tbasic_machine=mips-sony\n\t\tos=-newsos\n\t\t;;\n\tnecv70)\n\t\tbasic_machine=v70-nec\n\t\tos=-sysv\n\t\t;;\n\tnext | m*-next )\n\t\tbasic_machine=m68k-next\n\t\tcase $os in\n\t\t    -nextstep* )\n\t\t\t;;\n\t\t    -ns2*)\n\t\t      os=-nextstep2\n\t\t\t;;\n\t\t    *)\n\t\t      os=-nextstep3\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tnh3000)\n\t\tbasic_machine=m68k-harris\n\t\tos=-cxux\n\t\t;;\n\tnh[45]000)\n\t\tbasic_machine=m88k-harris\n\t\tos=-cxux\n\t\t;;\n\tnindy960)\n\t\tbasic_machine=i960-intel\n\t\tos=-nindy\n\t\t;;\n\tmon960)\n\t\tbasic_machine=i960-intel\n\t\tos=-mon960\n\t\t;;\n\tnonstopux)\n\t\tbasic_machine=mips-compaq\n\t\tos=-nonstopux\n\t\t;;\n\tnp1)\n\t\tbasic_machine=np1-gould\n\t\t;;\n\tneo-tandem)\n\t\tbasic_machine=neo-tandem\n\t\t;;\n\tnse-tandem)\n\t\tbasic_machine=nse-tandem\n\t\t;;\n\tnsr-tandem)\n\t\tbasic_machine=nsr-tandem\n\t\t;;\n\top50n-* | op60c-*)\n\t\tbasic_machine=hppa1.1-oki\n\t\tos=-proelf\n\t\t;;\n\topenrisc | openrisc-*)\n\t\tbasic_machine=or32-unknown\n\t\t;;\n\tos400)\n\t\tbasic_machine=powerpc-ibm\n\t\tos=-os400\n\t\t;;\n\tOSE68000 | ose68000)\n\t\tbasic_machine=m68000-ericsson\n\t\tos=-ose\n\t\t;;\n\tos68k)\n\t\tbasic_machine=m68k-none\n\t\tos=-os68k\n\t\t;;\n\tpa-hitachi)\n\t\tbasic_machine=hppa1.1-hitachi\n\t\tos=-hiuxwe2\n\t\t;;\n\tparagon)\n\t\tbasic_machine=i860-intel\n\t\tos=-osf\n\t\t;;\n\tparisc)\n\t\tbasic_machine=hppa-unknown\n\t\tos=-linux\n\t\t;;\n\tparisc-*)\n\t\tbasic_machine=hppa-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\tos=-linux\n\t\t;;\n\tpbd)\n\t\tbasic_machine=sparc-tti\n\t\t;;\n\tpbb)\n\t\tbasic_machine=m68k-tti\n\t\t;;\n\tpc532 | pc532-*)\n\t\tbasic_machine=ns32k-pc532\n\t\t;;\n\tpc98)\n\t\tbasic_machine=i386-pc\n\t\t;;\n\tpc98-*)\n\t\tbasic_machine=i386-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tpentium | p5 | k5 | k6 | nexgen | viac3)\n\t\tbasic_machine=i586-pc\n\t\t;;\n\tpentiumpro | p6 | 6x86 | athlon | athlon_*)\n\t\tbasic_machine=i686-pc\n\t\t;;\n\tpentiumii | pentium2 | pentiumiii | pentium3)\n\t\tbasic_machine=i686-pc\n\t\t;;\n\tpentium4)\n\t\tbasic_machine=i786-pc\n\t\t;;\n\tpentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)\n\t\tbasic_machine=i586-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tpentiumpro-* | p6-* | 6x86-* | athlon-*)\n\t\tbasic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tpentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)\n\t\tbasic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tpentium4-*)\n\t\tbasic_machine=i786-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tpn)\n\t\tbasic_machine=pn-gould\n\t\t;;\n\tpower)\tbasic_machine=power-ibm\n\t\t;;\n\tppc | ppcbe)\tbasic_machine=powerpc-unknown\n\t\t;;\n\tppc-* | ppcbe-*)\n\t\tbasic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tppcle | powerpclittle | ppc-le | powerpc-little)\n\t\tbasic_machine=powerpcle-unknown\n\t\t;;\n\tppcle-* | powerpclittle-*)\n\t\tbasic_machine=powerpcle-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tppc64)\tbasic_machine=powerpc64-unknown\n\t\t;;\n\tppc64-* | ppc64p7-*) basic_machine=powerpc64-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tppc64le | powerpc64little | ppc64-le | powerpc64-little)\n\t\tbasic_machine=powerpc64le-unknown\n\t\t;;\n\tppc64le-* | powerpc64little-*)\n\t\tbasic_machine=powerpc64le-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tps2)\n\t\tbasic_machine=i386-ibm\n\t\t;;\n\tpw32)\n\t\tbasic_machine=i586-unknown\n\t\tos=-pw32\n\t\t;;\n\trdos | rdos64)\n\t\tbasic_machine=x86_64-pc\n\t\tos=-rdos\n\t\t;;\n\trdos32)\n\t\tbasic_machine=i386-pc\n\t\tos=-rdos\n\t\t;;\n\trom68k)\n\t\tbasic_machine=m68k-rom68k\n\t\tos=-coff\n\t\t;;\n\trm[46]00)\n\t\tbasic_machine=mips-siemens\n\t\t;;\n\trtpc | rtpc-*)\n\t\tbasic_machine=romp-ibm\n\t\t;;\n\ts390 | s390-*)\n\t\tbasic_machine=s390-ibm\n\t\t;;\n\ts390x | s390x-*)\n\t\tbasic_machine=s390x-ibm\n\t\t;;\n\tsa29200)\n\t\tbasic_machine=a29k-amd\n\t\tos=-udi\n\t\t;;\n\tsb1)\n\t\tbasic_machine=mipsisa64sb1-unknown\n\t\t;;\n\tsb1el)\n\t\tbasic_machine=mipsisa64sb1el-unknown\n\t\t;;\n\tsde)\n\t\tbasic_machine=mipsisa32-sde\n\t\tos=-elf\n\t\t;;\n\tsei)\n\t\tbasic_machine=mips-sei\n\t\tos=-seiux\n\t\t;;\n\tsequent)\n\t\tbasic_machine=i386-sequent\n\t\t;;\n\tsh)\n\t\tbasic_machine=sh-hitachi\n\t\tos=-hms\n\t\t;;\n\tsh5el)\n\t\tbasic_machine=sh5le-unknown\n\t\t;;\n\tsh64)\n\t\tbasic_machine=sh64-unknown\n\t\t;;\n\tsparclite-wrs | simso-wrs)\n\t\tbasic_machine=sparclite-wrs\n\t\tos=-vxworks\n\t\t;;\n\tsps7)\n\t\tbasic_machine=m68k-bull\n\t\tos=-sysv2\n\t\t;;\n\tspur)\n\t\tbasic_machine=spur-unknown\n\t\t;;\n\tst2000)\n\t\tbasic_machine=m68k-tandem\n\t\t;;\n\tstratus)\n\t\tbasic_machine=i860-stratus\n\t\tos=-sysv4\n\t\t;;\n\tstrongarm-* | thumb-*)\n\t\tbasic_machine=arm-`echo $basic_machine | sed 's/^[^-]*-//'`\n\t\t;;\n\tsun2)\n\t\tbasic_machine=m68000-sun\n\t\t;;\n\tsun2os3)\n\t\tbasic_machine=m68000-sun\n\t\tos=-sunos3\n\t\t;;\n\tsun2os4)\n\t\tbasic_machine=m68000-sun\n\t\tos=-sunos4\n\t\t;;\n\tsun3os3)\n\t\tbasic_machine=m68k-sun\n\t\tos=-sunos3\n\t\t;;\n\tsun3os4)\n\t\tbasic_machine=m68k-sun\n\t\tos=-sunos4\n\t\t;;\n\tsun4os3)\n\t\tbasic_machine=sparc-sun\n\t\tos=-sunos3\n\t\t;;\n\tsun4os4)\n\t\tbasic_machine=sparc-sun\n\t\tos=-sunos4\n\t\t;;\n\tsun4sol2)\n\t\tbasic_machine=sparc-sun\n\t\tos=-solaris2\n\t\t;;\n\tsun3 | sun3-*)\n\t\tbasic_machine=m68k-sun\n\t\t;;\n\tsun4)\n\t\tbasic_machine=sparc-sun\n\t\t;;\n\tsun386 | sun386i | roadrunner)\n\t\tbasic_machine=i386-sun\n\t\t;;\n\tsv1)\n\t\tbasic_machine=sv1-cray\n\t\tos=-unicos\n\t\t;;\n\tsymmetry)\n\t\tbasic_machine=i386-sequent\n\t\tos=-dynix\n\t\t;;\n\tt3e)\n\t\tbasic_machine=alphaev5-cray\n\t\tos=-unicos\n\t\t;;\n\tt90)\n\t\tbasic_machine=t90-cray\n\t\tos=-unicos\n\t\t;;\n\ttile*)\n\t\tbasic_machine=$basic_machine-unknown\n\t\tos=-linux-gnu\n\t\t;;\n\ttx39)\n\t\tbasic_machine=mipstx39-unknown\n\t\t;;\n\ttx39el)\n\t\tbasic_machine=mipstx39el-unknown\n\t\t;;\n\ttoad1)\n\t\tbasic_machine=pdp10-xkl\n\t\tos=-tops20\n\t\t;;\n\ttower | tower-32)\n\t\tbasic_machine=m68k-ncr\n\t\t;;\n\ttpf)\n\t\tbasic_machine=s390x-ibm\n\t\tos=-tpf\n\t\t;;\n\tudi29k)\n\t\tbasic_machine=a29k-amd\n\t\tos=-udi\n\t\t;;\n\tultra3)\n\t\tbasic_machine=a29k-nyu\n\t\tos=-sym1\n\t\t;;\n\tv810 | necv810)\n\t\tbasic_machine=v810-nec\n\t\tos=-none\n\t\t;;\n\tvaxv)\n\t\tbasic_machine=vax-dec\n\t\tos=-sysv\n\t\t;;\n\tvms)\n\t\tbasic_machine=vax-dec\n\t\tos=-vms\n\t\t;;\n\tvpp*|vx|vx-*)\n\t\tbasic_machine=f301-fujitsu\n\t\t;;\n\tvxworks960)\n\t\tbasic_machine=i960-wrs\n\t\tos=-vxworks\n\t\t;;\n\tvxworks68)\n\t\tbasic_machine=m68k-wrs\n\t\tos=-vxworks\n\t\t;;\n\tvxworks29k)\n\t\tbasic_machine=a29k-wrs\n\t\tos=-vxworks\n\t\t;;\n\tw65*)\n\t\tbasic_machine=w65-wdc\n\t\tos=-none\n\t\t;;\n\tw89k-*)\n\t\tbasic_machine=hppa1.1-winbond\n\t\tos=-proelf\n\t\t;;\n\txbox)\n\t\tbasic_machine=i686-pc\n\t\tos=-mingw32\n\t\t;;\n\txps | xps100)\n\t\tbasic_machine=xps100-honeywell\n\t\t;;\n\txscale-* | xscalee[bl]-*)\n\t\tbasic_machine=`echo $basic_machine | sed 's/^xscale/arm/'`\n\t\t;;\n\tymp)\n\t\tbasic_machine=ymp-cray\n\t\tos=-unicos\n\t\t;;\n\tz8k-*-coff)\n\t\tbasic_machine=z8k-unknown\n\t\tos=-sim\n\t\t;;\n\tz80-*-coff)\n\t\tbasic_machine=z80-unknown\n\t\tos=-sim\n\t\t;;\n\tnone)\n\t\tbasic_machine=none-none\n\t\tos=-none\n\t\t;;\n\n# Here we handle the default manufacturer of certain CPU types.  It is in\n# some cases the only manufacturer, in others, it is the most popular.\n\tw89k)\n\t\tbasic_machine=hppa1.1-winbond\n\t\t;;\n\top50n)\n\t\tbasic_machine=hppa1.1-oki\n\t\t;;\n\top60c)\n\t\tbasic_machine=hppa1.1-oki\n\t\t;;\n\tromp)\n\t\tbasic_machine=romp-ibm\n\t\t;;\n\tmmix)\n\t\tbasic_machine=mmix-knuth\n\t\t;;\n\trs6000)\n\t\tbasic_machine=rs6000-ibm\n\t\t;;\n\tvax)\n\t\tbasic_machine=vax-dec\n\t\t;;\n\tpdp10)\n\t\t# there are many clones, so DEC is not a safe bet\n\t\tbasic_machine=pdp10-unknown\n\t\t;;\n\tpdp11)\n\t\tbasic_machine=pdp11-dec\n\t\t;;\n\twe32k)\n\t\tbasic_machine=we32k-att\n\t\t;;\n\tsh[1234] | sh[24]a | sh[24]aeb | sh[34]eb | sh[1234]le | sh[23]ele)\n\t\tbasic_machine=sh-unknown\n\t\t;;\n\tsparc | sparcv8 | sparcv9 | sparcv9b | sparcv9v)\n\t\tbasic_machine=sparc-sun\n\t\t;;\n\tcydra)\n\t\tbasic_machine=cydra-cydrome\n\t\t;;\n\torion)\n\t\tbasic_machine=orion-highlevel\n\t\t;;\n\torion105)\n\t\tbasic_machine=clipper-highlevel\n\t\t;;\n\tmac | mpw | mac-mpw)\n\t\tbasic_machine=m68k-apple\n\t\t;;\n\tpmac | pmac-mpw)\n\t\tbasic_machine=powerpc-apple\n\t\t;;\n\t*-unknown)\n\t\t# Make sure to match an already-canonicalized machine name.\n\t\t;;\n\t*)\n\t\techo Invalid configuration \\`$1\\': machine \\`$basic_machine\\' not recognized 1>&2\n\t\texit 1\n\t\t;;\nesac\n\n# Here we canonicalize certain aliases for manufacturers.\ncase $basic_machine in\n\t*-digital*)\n\t\tbasic_machine=`echo $basic_machine | sed 's/digital.*/dec/'`\n\t\t;;\n\t*-commodore*)\n\t\tbasic_machine=`echo $basic_machine | sed 's/commodore.*/cbm/'`\n\t\t;;\n\t*)\n\t\t;;\nesac\n\n# Decode manufacturer-specific aliases for certain operating systems.\n\nif [ x\"$os\" != x\"\" ]\nthen\ncase $os in\n\t# First match some system type aliases\n\t# that might get confused with valid system types.\n\t# -solaris* is a basic system type, with this one exception.\n\t-auroraux)\n\t\tos=-auroraux\n\t\t;;\n\t-solaris1 | -solaris1.*)\n\t\tos=`echo $os | sed -e 's|solaris1|sunos4|'`\n\t\t;;\n\t-solaris)\n\t\tos=-solaris2\n\t\t;;\n\t-svr4*)\n\t\tos=-sysv4\n\t\t;;\n\t-unixware*)\n\t\tos=-sysv4.2uw\n\t\t;;\n\t-gnu/linux*)\n\t\tos=`echo $os | sed -e 's|gnu/linux|linux-gnu|'`\n\t\t;;\n\t# First accept the basic system types.\n\t# The portable systems comes first.\n\t# Each alternative MUST END IN A *, to match a version number.\n\t# -sysv* is not here because it comes later, after sysvr4.\n\t-gnu* | -bsd* | -mach* | -minix* | -genix* | -ultrix* | -irix* \\\n\t      | -*vms* | -sco* | -esix* | -isc* | -aix* | -cnk* | -sunos | -sunos[34]*\\\n\t      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -auroraux* | -solaris* \\\n\t      | -sym* | -kopensolaris* | -plan9* \\\n\t      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \\\n\t      | -aos* | -aros* \\\n\t      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \\\n\t      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \\\n\t      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \\\n\t      | -bitrig* | -openbsd* | -solidbsd* \\\n\t      | -ekkobsd* | -kfreebsd* | -freebsd* | -riscix* | -lynxos* \\\n\t      | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \\\n\t      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \\\n\t      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \\\n\t      | -chorusos* | -chorusrdb* | -cegcc* \\\n\t      | -cygwin* | -msys* | -pe* | -psos* | -moss* | -proelf* | -rtems* \\\n\t      | -mingw32* | -mingw64* | -linux-gnu* | -linux-android* \\\n\t      | -linux-newlib* | -linux-musl* | -linux-uclibc* \\\n\t      | -uxpv* | -beos* | -mpeix* | -udk* | -moxiebox* \\\n\t      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \\\n\t      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \\\n\t      | -storm-chaos* | -tops10* | -tenex* | -tops20* | -its* \\\n\t      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \\\n\t      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \\\n\t      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \\\n\t      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* | -tirtos*)\n\t# Remember, each alternative MUST END IN *, to match a version number.\n\t\t;;\n\t-qnx*)\n\t\tcase $basic_machine in\n\t\t    x86-* | i*86-*)\n\t\t\t;;\n\t\t    *)\n\t\t\tos=-nto$os\n\t\t\t;;\n\t\tesac\n\t\t;;\n\t-nto-qnx*)\n\t\t;;\n\t-nto*)\n\t\tos=`echo $os | sed -e 's|nto|nto-qnx|'`\n\t\t;;\n\t-sim | -es1800* | -hms* | -xray | -os68k* | -none* | -v88r* \\\n\t      | -windows* | -osx | -abug | -netware* | -os9* | -beos* | -haiku* \\\n\t      | -macos* | -mpw* | -magic* | -mmixware* | -mon960* | -lnews*)\n\t\t;;\n\t-mac*)\n\t\tos=`echo $os | sed -e 's|mac|macos|'`\n\t\t;;\n\t-linux-dietlibc)\n\t\tos=-linux-dietlibc\n\t\t;;\n\t-linux*)\n\t\tos=`echo $os | sed -e 's|linux|linux-gnu|'`\n\t\t;;\n\t-sunos5*)\n\t\tos=`echo $os | sed -e 's|sunos5|solaris2|'`\n\t\t;;\n\t-sunos6*)\n\t\tos=`echo $os | sed -e 's|sunos6|solaris3|'`\n\t\t;;\n\t-opened*)\n\t\tos=-openedition\n\t\t;;\n\t-os400*)\n\t\tos=-os400\n\t\t;;\n\t-wince*)\n\t\tos=-wince\n\t\t;;\n\t-osfrose*)\n\t\tos=-osfrose\n\t\t;;\n\t-osf*)\n\t\tos=-osf\n\t\t;;\n\t-utek*)\n\t\tos=-bsd\n\t\t;;\n\t-dynix*)\n\t\tos=-bsd\n\t\t;;\n\t-acis*)\n\t\tos=-aos\n\t\t;;\n\t-atheos*)\n\t\tos=-atheos\n\t\t;;\n\t-syllable*)\n\t\tos=-syllable\n\t\t;;\n\t-386bsd)\n\t\tos=-bsd\n\t\t;;\n\t-ctix* | -uts*)\n\t\tos=-sysv\n\t\t;;\n\t-nova*)\n\t\tos=-rtmk-nova\n\t\t;;\n\t-ns2 )\n\t\tos=-nextstep2\n\t\t;;\n\t-nsk*)\n\t\tos=-nsk\n\t\t;;\n\t# Preserve the version number of sinix5.\n\t-sinix5.*)\n\t\tos=`echo $os | sed -e 's|sinix|sysv|'`\n\t\t;;\n\t-sinix*)\n\t\tos=-sysv4\n\t\t;;\n\t-tpf*)\n\t\tos=-tpf\n\t\t;;\n\t-triton*)\n\t\tos=-sysv3\n\t\t;;\n\t-oss*)\n\t\tos=-sysv3\n\t\t;;\n\t-svr4)\n\t\tos=-sysv4\n\t\t;;\n\t-svr3)\n\t\tos=-sysv3\n\t\t;;\n\t-sysvr4)\n\t\tos=-sysv4\n\t\t;;\n\t# This must come after -sysvr4.\n\t-sysv*)\n\t\t;;\n\t-ose*)\n\t\tos=-ose\n\t\t;;\n\t-es1800*)\n\t\tos=-ose\n\t\t;;\n\t-xenix)\n\t\tos=-xenix\n\t\t;;\n\t-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)\n\t\tos=-mint\n\t\t;;\n\t-aros*)\n\t\tos=-aros\n\t\t;;\n\t-zvmoe)\n\t\tos=-zvmoe\n\t\t;;\n\t-dicos*)\n\t\tos=-dicos\n\t\t;;\n\t-nacl*)\n\t\t;;\n\t-none)\n\t\t;;\n\t*)\n\t\t# Get rid of the `-' at the beginning of $os.\n\t\tos=`echo $os | sed 's/[^-]*-//'`\n\t\techo Invalid configuration \\`$1\\': system \\`$os\\' not recognized 1>&2\n\t\texit 1\n\t\t;;\nesac\nelse\n\n# Here we handle the default operating systems that come with various machines.\n# The value should be what the vendor currently ships out the door with their\n# machine or put another way, the most popular os provided with the machine.\n\n# Note that if you're going to try to match \"-MANUFACTURER\" here (say,\n# \"-sun\"), then you have to tell the case statement up towards the top\n# that MANUFACTURER isn't an operating system.  Otherwise, code above\n# will signal an error saying that MANUFACTURER isn't an operating\n# system, and we'll never get to this point.\n\ncase $basic_machine in\n\tscore-*)\n\t\tos=-elf\n\t\t;;\n\tspu-*)\n\t\tos=-elf\n\t\t;;\n\t*-acorn)\n\t\tos=-riscix1.2\n\t\t;;\n\tarm*-rebel)\n\t\tos=-linux\n\t\t;;\n\tarm*-semi)\n\t\tos=-aout\n\t\t;;\n\tc4x-* | tic4x-*)\n\t\tos=-coff\n\t\t;;\n\tc8051-*)\n\t\tos=-elf\n\t\t;;\n\thexagon-*)\n\t\tos=-elf\n\t\t;;\n\ttic54x-*)\n\t\tos=-coff\n\t\t;;\n\ttic55x-*)\n\t\tos=-coff\n\t\t;;\n\ttic6x-*)\n\t\tos=-coff\n\t\t;;\n\t# This must come before the *-dec entry.\n\tpdp10-*)\n\t\tos=-tops20\n\t\t;;\n\tpdp11-*)\n\t\tos=-none\n\t\t;;\n\t*-dec | vax-*)\n\t\tos=-ultrix4.2\n\t\t;;\n\tm68*-apollo)\n\t\tos=-domain\n\t\t;;\n\ti386-sun)\n\t\tos=-sunos4.0.2\n\t\t;;\n\tm68000-sun)\n\t\tos=-sunos3\n\t\t;;\n\tm68*-cisco)\n\t\tos=-aout\n\t\t;;\n\tmep-*)\n\t\tos=-elf\n\t\t;;\n\tmips*-cisco)\n\t\tos=-elf\n\t\t;;\n\tmips*-*)\n\t\tos=-elf\n\t\t;;\n\tor32-*)\n\t\tos=-coff\n\t\t;;\n\t*-tti)\t# must be before sparc entry or we get the wrong os.\n\t\tos=-sysv3\n\t\t;;\n\tsparc-* | *-sun)\n\t\tos=-sunos4.1.1\n\t\t;;\n\t*-be)\n\t\tos=-beos\n\t\t;;\n\t*-haiku)\n\t\tos=-haiku\n\t\t;;\n\t*-ibm)\n\t\tos=-aix\n\t\t;;\n\t*-knuth)\n\t\tos=-mmixware\n\t\t;;\n\t*-wec)\n\t\tos=-proelf\n\t\t;;\n\t*-winbond)\n\t\tos=-proelf\n\t\t;;\n\t*-oki)\n\t\tos=-proelf\n\t\t;;\n\t*-hp)\n\t\tos=-hpux\n\t\t;;\n\t*-hitachi)\n\t\tos=-hiux\n\t\t;;\n\ti860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)\n\t\tos=-sysv\n\t\t;;\n\t*-cbm)\n\t\tos=-amigaos\n\t\t;;\n\t*-dg)\n\t\tos=-dgux\n\t\t;;\n\t*-dolphin)\n\t\tos=-sysv3\n\t\t;;\n\tm68k-ccur)\n\t\tos=-rtu\n\t\t;;\n\tm88k-omron*)\n\t\tos=-luna\n\t\t;;\n\t*-next )\n\t\tos=-nextstep\n\t\t;;\n\t*-sequent)\n\t\tos=-ptx\n\t\t;;\n\t*-crds)\n\t\tos=-unos\n\t\t;;\n\t*-ns)\n\t\tos=-genix\n\t\t;;\n\ti370-*)\n\t\tos=-mvs\n\t\t;;\n\t*-next)\n\t\tos=-nextstep3\n\t\t;;\n\t*-gould)\n\t\tos=-sysv\n\t\t;;\n\t*-highlevel)\n\t\tos=-bsd\n\t\t;;\n\t*-encore)\n\t\tos=-bsd\n\t\t;;\n\t*-sgi)\n\t\tos=-irix\n\t\t;;\n\t*-siemens)\n\t\tos=-sysv4\n\t\t;;\n\t*-masscomp)\n\t\tos=-rtu\n\t\t;;\n\tf30[01]-fujitsu | f700-fujitsu)\n\t\tos=-uxpv\n\t\t;;\n\t*-rom68k)\n\t\tos=-coff\n\t\t;;\n\t*-*bug)\n\t\tos=-coff\n\t\t;;\n\t*-apple)\n\t\tos=-macos\n\t\t;;\n\t*-atari*)\n\t\tos=-mint\n\t\t;;\n\t*)\n\t\tos=-none\n\t\t;;\nesac\nfi\n\n# Here we handle the case where we know the os, and the CPU type, but not the\n# manufacturer.  We pick the logical manufacturer.\nvendor=unknown\ncase $basic_machine in\n\t*-unknown)\n\t\tcase $os in\n\t\t\t-riscix*)\n\t\t\t\tvendor=acorn\n\t\t\t\t;;\n\t\t\t-sunos*)\n\t\t\t\tvendor=sun\n\t\t\t\t;;\n\t\t\t-cnk*|-aix*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\t-beos*)\n\t\t\t\tvendor=be\n\t\t\t\t;;\n\t\t\t-hpux*)\n\t\t\t\tvendor=hp\n\t\t\t\t;;\n\t\t\t-mpeix*)\n\t\t\t\tvendor=hp\n\t\t\t\t;;\n\t\t\t-hiux*)\n\t\t\t\tvendor=hitachi\n\t\t\t\t;;\n\t\t\t-unos*)\n\t\t\t\tvendor=crds\n\t\t\t\t;;\n\t\t\t-dgux*)\n\t\t\t\tvendor=dg\n\t\t\t\t;;\n\t\t\t-luna*)\n\t\t\t\tvendor=omron\n\t\t\t\t;;\n\t\t\t-genix*)\n\t\t\t\tvendor=ns\n\t\t\t\t;;\n\t\t\t-mvs* | -opened*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\t-os400*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\t-ptx*)\n\t\t\t\tvendor=sequent\n\t\t\t\t;;\n\t\t\t-tpf*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\t-vxsim* | -vxworks* | -windiss*)\n\t\t\t\tvendor=wrs\n\t\t\t\t;;\n\t\t\t-aux*)\n\t\t\t\tvendor=apple\n\t\t\t\t;;\n\t\t\t-hms*)\n\t\t\t\tvendor=hitachi\n\t\t\t\t;;\n\t\t\t-mpw* | -macos*)\n\t\t\t\tvendor=apple\n\t\t\t\t;;\n\t\t\t-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)\n\t\t\t\tvendor=atari\n\t\t\t\t;;\n\t\t\t-vos*)\n\t\t\t\tvendor=stratus\n\t\t\t\t;;\n\t\tesac\n\t\tbasic_machine=`echo $basic_machine | sed \"s/unknown/$vendor/\"`\n\t\t;;\nesac\n\necho $basic_machine$os\nexit\n\n# Local variables:\n# eval: (add-hook 'write-file-hooks 'time-stamp)\n# time-stamp-start: \"timestamp='\"\n# time-stamp-format: \"%:y-%02m-%02d\"\n# time-stamp-end: \"'\"\n# End:\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 44.552734375,
          "content": "AC_PREREQ([2.63])\nAC_INIT([rkt], [1.30.0+git], [https://github.com/rkt/rkt/issues])\n\nAC_PROG_CC\nAC_PROG_CXX\n\nAC_DEFUN([RKT_CHECK_PROG],\n         [AS_VAR_IF([$1], [],\n                    [AC_CHECK_PROG($@)],[:])])\n\nAC_DEFUN([RKT_REQ_PROG],\n         [AS_VAR_IF([$1], [],\n                    [AC_CHECK_PROG($@)\n                     AS_VAR_IF([$1], [$3], [:], AC_MSG_ERROR([*** $2 not found]))],\n                    [:])])\n\nAC_DEFUN([RKT_REQ_ABS_PROG],\n         [AS_VAR_IF([$1], [],\n                    [AC_PATH_PROG($@)\n                     AS_IF([test \"x$]$1[\" = 'x'], [AC_MSG_ERROR([*** $2 not found])])],\n                    [:])])\n\ndnl We assume having bash in lots of places, so check it in the\ndnl beginning.\nRKT_REQ_ABS_PROG([BASH_SHELL], [bash])\ndnl for git suffix\nRKT_REQ_PROG([GIT],[git],[git])\n\ndnl this will be printed in configure summary and by rkt version\nRKT_FEATURES=\"\"\nRKT_ADD_FEATURE() {\n    RKT_FEATURES=`AS_ECHO([\"${RKT_FEATURES} $1\"]) | sed -e 's/^ \\+//'`\n}\ndnl if version ends with +git, append a short git-hash.\nAS_IF([test `expr match 'AC_PACKAGE_VERSION' '.*+git$'` -gt 0],\n      dnl version has +git suffix, ignore errors (not a git repo)\n      [RKT_VERSION=\"AC_PACKAGE_VERSION`git rev-parse --short HEAD 2>/dev/null``git diff-index --quiet HEAD 2>/dev/null || AS_ECHO([\"-dirty\"])`\"],\n      dnl version has no +git suffix\n      [RKT_VERSION=\"AC_PACKAGE_VERSION\"])\n\nAC_CANONICAL_HOST\nAC_CANONICAL_BUILD\n\nAS_CASE([${host_cpu}],\n        [aarch64],             [RKT_ACI_ARCH=aarch64; GOARCH=arm64;],\n        [armv6l],              [RKT_ACI_ARCH=armv6l;  GOARCH=arm; GOARM=6;],\n        [armv7l],              [RKT_ACI_ARCH=armv7l;  GOARCH=arm; GOARM=7;],\n        [i?86 | x86],          [RKT_ACI_ARCH=i386;    GOARCH=386;],\n        [powerpc | powerpc64], [RKT_ACI_ARCH=ppc64;   GOARCH=ppc64;],\n        [powerpc64le],         [RKT_ACI_ARCH=ppc64le; GOARCH=ppc64le;],\n        [x86_64],              [RKT_ACI_ARCH=amd64;   GOARCH=amd64;],\n        [AC_MSG_ERROR([*** unsupported host arch specified: ${host_cpu}])])\n\n#### FLAGS\n\n## STAGE1 - detailed setup\n\nAC_ARG_WITH(stage1-default-name,\n            [AS_HELP_STRING([--with-stage1-default-name],\n                            [default name of stage1, default: 'coreos.com/rkt/stage1-${flavor}'])],\n            [RKT_STAGE1_DEFAULT_NAME=\"${withval}\"],\n            [RKT_STAGE1_DEFAULT_NAME=auto])\n\nAC_ARG_WITH(stage1-default-version,\n            [AS_HELP_STRING([--with-stage1-default-version],\n                            [default version of stage1, default: same as rkt version])],\n            [RKT_STAGE1_DEFAULT_VERSION=\"${withval}\"],\n            [RKT_STAGE1_DEFAULT_VERSION=auto])\n\n## STAGE1 - flavor setup\n\nAC_ARG_WITH([stage1-default-flavor],\n            [AS_HELP_STRING([--with-stage1-default-flavor],\n                            [stage1 flavor that will be loaded by default; has to be listed in --with-stage1-flavors, default: first from the stage1 flavors list])],\n            [RKT_STAGE1_DEFAULT_FLAVOR=\"${withval}\"],\n            [RKT_STAGE1_DEFAULT_FLAVOR=auto])\n\n## STAGE1 - common setup\n\nAC_ARG_WITH([stage1-flavors],\n            [AS_HELP_STRING([--with-stage1-flavors],\n                            [comma-separated list of stage1 flavors; choose from 'src', 'coreos', 'host', 'kvm', 'fly'; default: 'coreos,kvm,fly'])],\n            [RKT_STAGE1_FLAVORS=\"${withval}\"],\n            [RKT_STAGE1_FLAVORS=auto])\n\nAC_ARG_WITH([stage1-flavors-version-override],\n            [AS_HELP_STRING([--with-stage1-flavors-version-override],\n                            [override the version of stage1 with a custom one; it also changes the default stage1 version in flavor setup])],\n            [RKT_STAGE1_FLAVORS_VERSION_OVERRIDE=\"${withval}\"],\n            [RKT_STAGE1_FLAVORS_VERSION_OVERRIDE=auto])\n\nAC_ARG_WITH(stage1-default-location,\n            [AS_HELP_STRING([--with-stage1-default-location],\n                            [default location of stage1, default: none])],\n            [RKT_STAGE1_DEFAULT_LOCATION=\"${withval}\"],\n            [RKT_STAGE1_DEFAULT_LOCATION=auto])\n\nAC_ARG_WITH(stage1-default-images-directory,\n            [AS_HELP_STRING([--with-stage1-default-images-directory],\n                            [default directory for stage1 images, default: LIBDIR/rkt/stage1-images])],\n            [RKT_STAGE1_DEFAULT_IMAGES_DIR=\"${withval}\"],\n            [RKT_STAGE1_DEFAULT_IMAGES_DIR=auto])\n\n# STAGE1 - systemd src and version for src flavor\n\nAC_ARG_WITH([stage1-systemd-src],\n            [AS_HELP_STRING([--with-stage1-systemd-src],\n                            [URL to a systemd Git repository or path to a local systemd source directory, used in 'src' stage1 flavor (default: 'https://github.com/systemd/systemd.git')])],\n            [RKT_STAGE1_SYSTEMD_SRC=\"${withval}\"],\n            [RKT_STAGE1_SYSTEMD_SRC='auto'])\n\nAC_ARG_WITH([stage1-systemd-version],\n            [AS_HELP_STRING([--with-stage1-systemd-version],\n                            [systemd version to build, used in 'src' stage1 flavor (default: 'v229', should be in format 'v<number>', like v229)])],\n            [RKT_STAGE1_SYSTEMD_VER=\"${withval}\"],\n            [RKT_STAGE1_SYSTEMD_VER='auto'])\n\nAC_ARG_WITH([stage1-systemd-revision],\n            [AS_HELP_STRING([--with-stage1-systemd-revision],\n                            [systemd revision to check out to build, used in 'src' stage1 flavor when --with-stage1-systemd-src is a Git repository (default: the same value as --with-stage1-systemd-version)])],\n            [RKT_STAGE1_SYSTEMD_REV=\"${withval}\"],\n            [RKT_STAGE1_SYSTEMD_REV='auto'])\n\n# STAGE1 - kvm hypervisor. lkvm or/and qemu can be chosen\nAC_ARG_WITH([stage1-kvm-hypervisors],\n            [AS_HELP_STRING([--with-stage1-kvm-hypervisors],\n                            [select hypervisors for kvm flavor; build stage1 aci for each of them. select \"lkvm\", \"qemu\" or both (default: 'qemu')])],\n            [RKT_STAGE1_KVM_HV=\"${withval}\"],\n            [RKT_STAGE1_KVM_HV='qemu'])\n\n## STAGE1 - path to coreos pxe and its systemd version for kvm and coreos flavors\n\nAC_ARG_WITH([coreos-local-pxe-image-path],\n            [AS_HELP_STRING([--with-coreos-local-pxe-image-path],\n                            [path to local CoreOS PXE image, used in 'coreos' and 'kvm' stage1 flavors (default: empty) (the GPG signature of this file will not be checked!)])],\n            [RKT_LOCAL_COREOS_PXE_IMAGE_PATH=\"${withval}\"],\n            [RKT_LOCAL_COREOS_PXE_IMAGE_PATH=\"\"])\n\nAC_ARG_WITH([coreos-local-pxe-image-systemd-version],\n            [AS_HELP_STRING([--with-coreos-local-pxe-image-systemd-version],\n                            [version of systemd in local CoreOS PXE image, used in 'coreos' and 'kvm' stage1 flavors (should be in format 'v<number>', like v229)])],\n            [RKT_LOCAL_COREOS_PXE_IMAGE_SYSTEMD_VER=\"${withval}\"],\n            [RKT_LOCAL_COREOS_PXE_IMAGE_SYSTEMD_VER=])\n\nRKT_STAGE1_COREOS_BOARD=${GOARCH}-usr;\n\n## Functional tests\n\nAC_ARG_ENABLE([functional-tests],\n              [AS_HELP_STRING([--enable-functional-tests],\n                              [enable functional tests on make check (linux only, uses sudo, default: 'no', use 'auto' to enable if possible, for host stage1 flavor systemd version 227 or higher on host is required)])],\n              [RKT_RUN_FUNCTIONAL_TESTS=\"${enableval}\"],\n              [RKT_RUN_FUNCTIONAL_TESTS=\"no\"])\n\n## Incremental build\n\nAC_ARG_ENABLE([incremental-build],\n              [AS_HELP_STRING([--enable-incremental-build],\n                              [enable incremental build. Note: this does not work for cross compile builds.])],\n              [INCREMENTAL_BUILD=\"${enableval}\"],\n              [INCREMENTAL_BUILD=\"no\"])\n## TPM\n\nAC_ARG_ENABLE([tpm],\n              [AS_HELP_STRING([--enable-tpm],\n                              [enable logging to TPM, use 'auto' to enable it if the required development files are found, default: 'yes'])],\n              [RKT_ENABLE_TPM=\"${enableval}\"],\n              [RKT_ENABLE_TPM=\"yes\"])\n\n## Systemd-journal support on host\n\nAC_ARG_ENABLE([sdjournal],\n              [AS_HELP_STRING([--enable-sdjournal],\n                              [enable systemd-journal features on host, use 'auto' to enable it if the required development files are found, default: 'yes'])],\n              [RKT_ENABLE_SDJOURNAL=\"${enableval}\"],\n              [RKT_ENABLE_SDJOURNAL=\"yes\"])\n\n## insecure go\n\nAC_ARG_ENABLE([insecure-go],\n              [AS_HELP_STRING([--enable-insecure-go],\n                              [allow building rkt with go having known security issues, default: no])],\n              [RKT_INSECURE_GO=\"${enableval}\"],\n              [RKT_INSECURE_GO=\"no\"])\n\n#### CHECKING\n\n## STAGE1 - initial verification and setup\n\ndnl There are two kinds of setup - flavor and detailed. A flavor setup\ndnl is when we specify a default flavor. A detailed setup is when we\ndnl specify a default name and version instead.\nAS_IF([test \"x${RKT_STAGE1_DEFAULT_FLAVOR}\" != 'xauto' -a '(' \"x${RKT_STAGE1_DEFAULT_NAME}\" != 'xauto' -o \"x${RKT_STAGE1_DEFAULT_VERSION}\" != 'xauto' ')'],\n              dnl Passed both --with-stage1-default-flavor and\n              dnl --with-stage1-default-{name,version} - bail out,\n              dnl they are mutually exclusive.\n              [AC_MSG_ERROR([*** --with-stage1-default-flavor and --with-stage1-default-{name,version} flags are mutually exclusive; use either default flavor or specific default name and version])],\n      [test \"x${RKT_STAGE1_DEFAULT_FLAVOR}\" = 'xauto' -a \"x${RKT_STAGE1_DEFAULT_NAME}\" = 'xauto' -a \"x${RKT_STAGE1_DEFAULT_VERSION}\" = 'xauto'],\n              dnl Passed neither --with-stage1-default-flavor nor\n              dnl --with-stage1-default-{name,version} - default to\n              dnl flavor setup.\n              [RKT_STAGE1_SETUP_KIND=flavor],\n      [test \"x${RKT_STAGE1_DEFAULT_FLAVOR}\" != 'xauto'],\n              dnl Passed --with-stage1-default-flavor flag - default\n              dnl to flavor setup.\n              [RKT_STAGE1_SETUP_KIND=flavor],\n      [test \"x${RKT_STAGE1_DEFAULT_NAME}\" != 'xauto' -o \"x${RKT_STAGE1_DEFAULT_VERSION}\" != 'xauto'],\n              dnl Passed one or both from\n              dnl --with-stage1-default-{name,version} - default to\n              dnl detailed setup.\n              [RKT_STAGE1_SETUP_KIND=detailed])\n\nAS_CASE([${RKT_STAGE1_SETUP_KIND}],\n        [detailed],\n                  dnl Detailed setup - do not build any flavor unless\n                  dnl explicitly asked for it and make sure that both\n                  dnl name and version were passed.\n                  [AS_VAR_IF([RKT_STAGE1_FLAVORS],[auto],\n                             [RKT_STAGE1_FLAVORS=''])\n                   RKT_STAGE1_DEFAULT_FLAVOR=''\n                   AS_IF([test \"x${RKT_STAGE1_DEFAULT_NAME}\" = 'xauto' -o \"x${RKT_STAGE1_DEFAULT_VERSION}\" = 'xauto'],\n                         [AC_MSG_ERROR([*** Both --with-stage1-default-name and --with-stage1-default-version must be specified])])],\n        [flavor],\n                  dnl The flavor setup - build coreos and kvm flavors\n                  dnl and set the first flavor in the list as a\n                  dnl default unless specified.\n                  [AS_VAR_IF([RKT_STAGE1_FLAVORS],[auto],\n                             [RKT_STAGE1_FLAVORS='coreos,kvm,fly'])\n                   AS_VAR_IF([RKT_STAGE1_DEFAULT_FLAVOR],[auto],\n                             [RKT_STAGE1_DEFAULT_FLAVOR=`AS_ECHO([${RKT_STAGE1_FLAVORS}]) | cut -d, -f1`])\n                   RKT_STAGE1_DEFAULT_NAME=''\n                   RKT_STAGE1_DEFAULT_VERSION=''],\n        [AC_MSG_ERROR([*** Unknown setup kind, should not happen])])\n\n## Stage1 flavor version override verification\n\nAS_VAR_IF([RKT_STAGE1_FLAVORS_VERSION_OVERRIDE], [auto],\n          dnl no override, no checking\n          [RKT_STAGE1_FLAVORS_VERSION_OVERRIDE=''],\n          dnl check if we override the version, even if we build no flavors at all\n          [AS_VAR_IF([RKT_STAGE1_FLAVORS], [],\n                     [AC_MSG_WARN([* Overriding stage1 version, but no stage1 flavors are built])])])\n\n## Stage1 default image directory\n\ndnl Normally it is autoconf which sets prefix and exec_prefix\ndnl variables to some default values if they were NONE, but that\ndnl happens way too late, so we need to do it ourselves right now.\nAS_VAR_IF([prefix],[NONE],\n          [prefix=\"${ac_default_prefix}\"])\nAS_VAR_IF([exec_prefix],[NONE],\n          [exec_prefix=\"${prefix}\"])\nAS_VAR_IF([RKT_STAGE1_DEFAULT_IMAGES_DIR],[auto],\n          dnl Calling eval makes sure that ${libdir} is expanded.\n          dnl autoconf defines it as '${eprefix}/lib' - note the\n          dnl single quotes, which make ${eprefix} to be not\n          dnl expanded. There is some rationale behind all this, but\n          dnl we need no features coming from unexpanded variables.\n          [eval RKT_STAGE1_DEFAULT_IMAGES_DIR=\"${libdir}/rkt/stage1-images\"])\nAS_CASE([${RKT_STAGE1_DEFAULT_IMAGES_DIR}],\n        [/*],\n                dnl alright, the path is absolute\n                [:],\n        [AC_MSG_ERROR([*** Path to the stage1 images directory must be absolute])])\n\n## Built stage1 flavors and hypervisors verification\n\ndnl a list of all flavors\nRKT_STAGE1_ALL_FLAVORS=coreos,kvm,host,src,fly\n\ndnl a list of all kvm hypervisors\nRKT_STAGE1_KVM_ALL_HV=lkvm,qemu\n\ndnl RKT_IS_VALID_FLAVOR checks if $1 is a valid flavor, $2 is an\ndnl additional string to an error message.\nAC_DEFUN([RKT_IS_VALID_FLAVOR],\n         [AS_CASE([$1],\n                  dnl Correct flavor, nothing to do.\n                  [coreos|kvm|host|src|fly],\n                          [],\n                  dnl Bogus flavor, bail out.\n                  [AC_MSG_ERROR([*** Unknown stage1 flavor \"$1\" $2])])])\n\ndnl RKT_IS_VALID_HYPERVISOR checks if $1 is a valid kvm hypervisor, $2 is an\ndnl additional string to an error message.\nAC_DEFUN([RKT_IS_VALID_HYPERVISOR],\n         [AS_CASE([$1],\n                  dnl Correct hypervisor, nothing to do.\n                  [lkvm|qemu],\n                          [],\n                  dnl Bogus hypervisor, bail out.\n                  [AC_MSG_ERROR([*** Unknown stage1 kvm hypervisor \"$1\" $2])])])\n\ndnl RKT_ITERATE iterates all comma-separated values stored in\ndnl $1 using an iterator variable $2 and executes body $3.\nAC_DEFUN([RKT_ITERATE],\n         [for $2 in `AS_ECHO([\"$1\"]) | tr ',' ' '`\n          do\n              :\n              $3\n          done])\n\ndnl RKT_IF_HAS_VALUE checks if the comma-separated list of values in\ndnl $1 contains any value in the comma-separated list of values in\ndnl $2; if yes, executes $3, otherwise - $4.\nAC_DEFUN([RKT_IF_HAS_VALUE],\n         [value_found=0\n          RKT_ITERATE([$2],[value],\n                              [AS_IF([AS_ECHO([\",$1,\"]) | grep --silent \",${value},\"],\n                                     [value_found=1\n                                      break])])\n          AS_IF([test ${value_found} -eq 1],[:;$3],[:;$4])])\n\ndnl common deps for flavors using CoreOS PXE image; not checking for\ndnl gpg - it will be checked when we will actually download the image\ndnl from the network\nAC_DEFUN([RKT_COMMON_COREOS_PROGS],\n         [RKT_REQ_PROG([CAT],[cat],[cat])\n          RKT_REQ_PROG([COMM],[comm],[comm])\n          RKT_REQ_PROG([CPIO],[cpio],[cpio])\n          RKT_REQ_PROG([GZIP],[gzip],[gzip])\n          RKT_REQ_PROG([MD5SUM],[md5sum],[md5sum])\n          RKT_REQ_PROG([MKTEMP],[mktemp],[mktemp])\n          RKT_REQ_PROG([SORT],[sort],[sort])\n          RKT_REQ_PROG([TOUCH],[touch],[touch])\n          RKT_REQ_PROG([UNSQUASHFS],[unsquashfs],[unsquashfs])\n          RKT_REQ_PROG([WGET],[wget],[wget])])\n\ndnl Validate passed flavors to build - make sure that valid flavors\ndnl were passed and each flavor was specified only once. Also, do some\ndnl basic program checks for each requested flavor.\nRKT_SPECIFIED_FLAVORS=''\nRKT_ITERATE([${RKT_STAGE1_FLAVORS}],[flavor],\n                    [RKT_IS_VALID_FLAVOR([${flavor}],[in --with-stage1-flavors])\n                     RKT_IF_HAS_VALUE([${RKT_SPECIFIED_FLAVORS}],[${flavor}],\n                                       [AC_MSG_ERROR([*** \"${flavor}\" flavor specified twice in --with-stage1-flavors])])\n                     RKT_SPECIFIED_FLAVORS=\"${RKT_SPECIFIED_FLAVORS},${flavor}\"\n                     AS_CASE([${flavor}],\n                             [src],\n                                     [AC_MSG_NOTICE([will build systemd from source, make sure that all its build requirements are fulfilled])],\n                             [coreos],\n                                     [RKT_COMMON_COREOS_PROGS],\n                             [kvm],\n                                     [AC_MSG_NOTICE([will build linux kernel and kvm hypervisors (${RKT_STAGE1_KVM_HV}) from source, make sure that all their build requirements are fulfilled])\n                                      RKT_COMMON_COREOS_PROGS\n                                      RKT_REQ_PROG([PATCH],[patch],[patch])\n                                      RKT_REQ_PROG([TAR],[tar],[tar])\n                                      RKT_REQ_PROG([XZ],[xz],[xz])\n                                      AC_CHECK_HEADER([openssl/bio.h],\n                                                      [],\n                                                      [AC_MSG_ERROR([** No development headers for openssl found])],\n                                                      [AC_INCLUDES_DEFAULT])],\n                             [host],\n                                     [],\n                             [fly],\n                                     [AC_MSG_WARN([* fly is an experimental stage1 implementation with almost no isolation and less features])],\n                             [AC_MSG_ERROR([*** Unhandled flavor \"${flavor}\", should not happen])])])\n\n\nAS_VAR_IF([RKT_SPECIFIED_FLAVORS],[],\n          dnl no flavors specified, no checks\n          [],\n          dnl some flavor are specified, do some checks for stuff needed by any flavor\n          [AC_LANG_PUSH([C])\n           AC_CHECK_HEADER([acl/libacl.h],\n                           [],\n                           [AC_MSG_ERROR([*** No development headers for libacl found])],\n                           [AC_INCLUDES_DEFAULT])\n           AC_CHECK_HEADER([dlfcn.h],\n                           [],\n                           [AC_MSG_ERROR([*** No development headers for libdl found])],\n                           [AC_INCLUDES_DEFAULT])\n           # check for static libc\n           SAVE_LDFLAGS=\"$LDFLAGS\"\n           LDFLAGS=\"-static $LDFLAGS\"\n           AC_CHECK_LIB([c], [printf],\n                        dnl static libc is there\n                        [:],\n                        dnl static libc is not there\n                        [AC_MSG_ERROR([*** No static libc found. Try to install glibc-static or libc6-dev.])])\n           LDFLAGS=\"$SAVE_LDFLAGS\"\n\n           # check for setns syscall, drop it in 2020 (centos 6.7 support ends\n           # then).\n           AC_MSG_CHECKING([whether C library provides setns function])\n           AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n                                             #define _GNU_SOURCE\n                                             #include <sched.h>\n                                           ]], [[(void)setns(0, 0);]])],\n                          [AC_MSG_RESULT([yes])],\n                          [AC_MSG_RESULT([no])\n                           AC_MSG_CHECKING([whether Linux kernel headers provide __NR_setns macro])\n                           AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n                                                             #include <linux/unistd.h>\n                                                           ]], [[(void)syscall(__NR_setns,0,0);]])],\n                                          [AC_MSG_RESULT([yes])\n                                           RKT_DEFINES_FOR_ENTER=-DNO_SETNS_AVAILABLE],\n                                          [AC_MSG_RESULT([no])\n                                           AC_MSG_ERROR([*** Neither setns function nor __NR_setns macro are available - either both glibc and kernel are too old or their development headers are not installed])])])\n\n           AC_LANG_POP([C])])\n\ndnl Validate passed default flavor, it should be one of the built\ndnl stage1 flavors\n\nAS_VAR_IF([RKT_STAGE1_SETUP_KIND],['flavor'],\n          [RKT_IS_VALID_FLAVOR([${RKT_STAGE1_DEFAULT_FLAVOR}],[in --with-stage1-default-flavor])\n           RKT_IF_HAS_VALUE([${RKT_STAGE1_FLAVORS}],[${RKT_STAGE1_DEFAULT_FLAVOR}],\n                             dnl valid default flavor, alright\n                             [],\n                             dnl not a part of built flavors, bail out\n                             [AC_MSG_ERROR([*** --with-stage1-default-flavor should use one of flavors from --with-stage1-flavors (${RKT_STAGE1_FLAVORS})])])])\n\n## Options specific for src flavor\n\n# Process systemd src repo and version for src flavor.\nRKT_IF_HAS_VALUE([${RKT_STAGE1_FLAVORS}],[src],\n                  dnl we are building src flavor\n                  [AS_VAR_IF([RKT_STAGE1_SYSTEMD_SRC], [auto],\n                             dnl systemd source not specified, use default\n                             [RKT_STAGE1_SYSTEMD_SRC='https://github.com/systemd/systemd.git'],\n                             dnl systemd source specified, use it\n                             [:])\n                   AS_VAR_IF([RKT_STAGE1_SYSTEMD_VER], [auto],\n                             dnl systemd version not specified, use default\n                             [RKT_STAGE1_SYSTEMD_VER='v999'],\n                             dnl systemd version specified, use it\n                             [:])\n                   AS_VAR_IF([RKT_STAGE1_SYSTEMD_REV], [auto],\n                             dnl systemd revision not specified, use default\n                             [RKT_STAGE1_SYSTEMD_REV=\"master\"],\n                             dnl systemd revision specified, use it\n                             [:])],\n                  dnl we are not building src flavor\n                  [AS_VAR_IF([RKT_STAGE1_SYSTEMD_SRC], [auto],\n                             dnl systemd source not specified, alright, zero the value just in case\n                             [RKT_STAGE1_SYSTEMD_SRC=''],\n                             dnl systemd source specified, warn about it being ignored\n                             [AC_MSG_WARN([* --with-stage1-systemd-src is ignored, src flavor is not built])])\n                   AS_VAR_IF([RKT_STAGE1_SYSTEMD_REV], [auto],\n                             dnl systemd source not specified, alright, zero the value just in case\n                             [RKT_STAGE1_SYSTEMD_REV=''],\n                             dnl systemd source specified, warn about it being ignored\n                             [AC_MSG_WARN([* --with-stage1-systemd-revision is ignored, src flavor is not built])])\n                   AS_VAR_IF([RKT_STAGE1_SYSTEMD_VER], [auto],\n                             dnl systemd version not specified, alright, zero the value just in case\n                             [RKT_STAGE1_SYSTEMD_VER=''],\n                             dnl systemd version specified, warn about it being ignored\n                             [AC_MSG_WARN([* --with-stage1-systemd-version is ignored, src flavor is not built])])])\n\ndnl Warn if version is HEAD, just use master.\nAS_VAR_IF([RKT_STAGE1_SYSTEMD_VER], [HEAD],\n          [AC_MSG_WARN([* 'HEAD' is not a systemd version, setting it to 'master' instead])\n           RKT_STAGE1_SYSTEMD_VER='master'])\n\n## Options specific for kvm flavor\n\nRKT_SPECIFIED_HYPERVISORS=''\nRKT_IF_HAS_VALUE([${RKT_STAGE1_FLAVORS}],[kvm],\n          [RKT_ITERATE([${RKT_STAGE1_KVM_HV}],[hypervisor],\n                     [RKT_IS_VALID_HYPERVISOR([${hypervisor}],[in --with-stage1-kvm-hypervisors])\n                      RKT_IF_HAS_VALUE([${RKT_SPECIFIED_HYPERVISORS}],[${hypervisor}],\n                                [AC_MSG_ERROR([*** \"${hypervisor}\" hypervisor specified twice in --with-stage1-kvm-hypervisors])])\n                                RKT_SPECIFIED_HYPERVISORS=\"${RKT_SPECIFIED_HYPERVISORS},${hypervisor}\"\n                                AS_CASE([${hypervisor}],\n                                          [lkvm],\n                                                    [AC_MSG_NOTICE([including lkvm...])],\n                                          [qemu],\n                                                    [AC_MSG_NOTICE([including qemu...])],\n                                          [AC_MSG_ERROR([*** Unhandled hypervisor \"${hypervisor}\". should not happen])])])])\n\n## Options specific to coreos/kvm flavors\n\n# Process local CoreOS PXE image path and its systemd version for\n# coreos/kvm flavors.\nRKT_IF_HAS_VALUE([${RKT_STAGE1_FLAVORS}],[coreos,kvm],\n                  dnl for kvm and coreos check if both pxe image path and\n                  dnl systemd version are specified or neither\n                  [AS_VAR_IF([RKT_LOCAL_COREOS_PXE_IMAGE_PATH], [],\n                             dnl no local coreos pxe image path specified\n                             [AS_VAR_IF([RKT_LOCAL_COREOS_PXE_IMAGE_SYSTEMD_VER],[],\n                                        dnl no version specified, alright, keep quiet\n                                        [:],\n                                        dnl version specified, warn about it being ignored\n                                        [AC_MSG_WARN([* --with-coreos-local-pxe-image-systemd-version is ignored, because --with-coreos-local-pxe-image-path was not specified])\n                                         RKT_LOCAL_COREOS_PXE_IMAGE_SYSTEMD_VER=''])\n                              dnl gpg is required for signature\n                              dnl verification\n                              RKT_REQ_PROG([GPG],[gpg],[gpg])],\n                             dnl local coreos pxe image path specified\n                             [AS_VAR_IF([RKT_LOCAL_COREOS_PXE_IMAGE_SYSTEMD_VER],[],\n                                        dnl no version specified, bail out, version is required\n                                        [AC_MSG_ERROR([*** No systemd version for local CoreOS PXE image specified, use --with-coreos-local-pxe-image-systemd-version])],\n                                        dnl version specified, alright, keep quiet\n                                        [:])])],\n                  dnl for other flavors just warn if either is specified\n                  [AS_VAR_IF([RKT_LOCAL_COREOS_PXE_IMAGE_PATH], [],\n                             dnl empty value, alright\n                             [:],\n                             dnl not empty, warn about it, zero it just in case\n                             [AC_MSG_WARN([* --with-coreos-local-pxe-image-path is ignored by ${RKT_STAGE1_DEFAULT_FLAVOR} stage1 flavor])\n                              RKT_LOCAL_COREOS_PXE_IMAGE_PATH=''])\n                   AS_VAR_IF([RKT_LOCAL_COREOS_PXE_IMAGE_SYSTEMD_VER], [],\n                             dnl empty value, alright\n                             [:],\n                             dnl not empty, warn about it, zero it just in case\n                             [AC_MSG_WARN([* --with-coreos-local-pxe-image-systemd-version is ignored by ${RKT_STAGE1_DEFAULT_FLAVOR} stage1 flavor])\n                              RKT_LOCAL_COREOS_PXE_IMAGE_SYSTEMD_VER=''])])\n\n## Setup default name, version, location and a filename in rkt dir,\n## take version override into account for flavored setup\n\n# This will be set to something like stage1-coreos.aci, so rkt will\n# know what to look for in the rkt directory if default stage1 image\n# location is empty.\nRKT_STAGE1_DEFAULT_IMAGE_FILENAME_IN_RKT_DIRECTORY=''\n\ndnl Validate a default stage1 image location - check whether the\ndnl location is either a URL with supported scheme (docker, https,\ndnl http or file) or an absolute path. If it is the latter, get a\ndnl filename which will be used by rkt to load the stage1 image file\ndnl from the same directory if the image in the default location is\ndnl absent.\nAS_CASE([${RKT_STAGE1_DEFAULT_LOCATION}],\n        [auto],\n                dnl no location passed at all, nix it\n                [RKT_STAGE1_DEFAULT_LOCATION=''],\n        [docker://|https://|http://|file://],\n                dnl alright, a probably valid URL\n                [:],\n        [/*],\n                dnl alright, an absolute path, let's get a filename\n                [RKT_STAGE1_DEFAULT_IMAGE_FILENAME_IN_RKT_DIRECTORY=`basename ${RKT_STAGE1_DEFAULT_LOCATION}`],\n        dnl wrong default stage1 image location\n        [AC_MSG_ERROR([*** Default stage1 image path is neither a valid URL (with docker://, https://, http:// or file:// scheme) nor an absolute path])])\n\nAS_CASE([${RKT_STAGE1_SETUP_KIND}],\n        [detailed],\n                  dnl detailed setup - not much to do, default name\n                  dnl and version are already specified, warn if\n                  dnl default location was not specified\n                  [AS_VAR_IF([RKT_STAGE1_DEFAULT_LOCATION],[],\n                             [AC_MSG_WARN([* It may be necessary to pass --stage1-{url,path,name,hash,from-dir} flag to run rkt])])],\n        [flavor],\n                  dnl flavor setup - set the default name and version,\n                  dnl set the location if not specified\n                  [AS_CASE([${RKT_STAGE1_DEFAULT_FLAVOR}],\n                                   dnl for src flavor, we also append systemd version to stage1 name\n                                   [src],\n                                           [RKT_STAGE1_DEFAULT_NAME=\"coreos.com/rkt/stage1-${RKT_STAGE1_DEFAULT_FLAVOR}-${RKT_STAGE1_SYSTEMD_VER}\"],\n                                   dnl other flavors get only flavor name\n                                   [RKT_STAGE1_DEFAULT_NAME=\"coreos.com/rkt/stage1-${RKT_STAGE1_DEFAULT_FLAVOR}\"])\n                   AS_VAR_IF([RKT_STAGE1_FLAVORS_VERSION_OVERRIDE], [],\n                             [RKT_STAGE1_DEFAULT_VERSION=\"${RKT_VERSION}\"],\n                             [RKT_STAGE1_DEFAULT_VERSION=\"${RKT_STAGE1_FLAVORS_VERSION_OVERRIDE}\"])\n                   AS_VAR_IF([RKT_STAGE1_DEFAULT_LOCATION],[],\n                             [RKT_STAGE1_DEFAULT_IMAGE_FILENAME_IN_RKT_DIRECTORY=\"stage1-${RKT_STAGE1_DEFAULT_FLAVOR}.aci\"])],\n        [AC_MSG_ERROR([*** Unknown setup kind, should not happen])])\n\n## Functional tests\n\ndnl Check for gpg - required by functional tests. Note that this does\ndnl not bail out here if it is not found.\nRKT_CHECK_PROG([GPG],[gpg],[gpg])\n\nAS_IF([test \"x${RKT_RUN_FUNCTIONAL_TESTS}\" = 'xyes' -o \"x${RKT_RUN_FUNCTIONAL_TESTS}\" = 'xauto'],\n      [AC_MSG_CHECKING([whether functional tests can be run])\n       rkt_functional_tests_msg=''\n       AS_CASE([${host}],\n               [*-*-linux*],\n                       dnl we are on linux, checks can continue\n                       [],\n               dnl non-linux host\n               [rkt_functional_tests_msg='Functional tests are supported only under linux'])\n      AS_VAR_IF([rkt_functional_tests_msg],[],\n                dnl we are on linux host; check if we have default\n                dnl flavor set\n                [AS_VAR_IF([RKT_STAGE1_SETUP_KIND],[flavor],\n                           dnl we have flavor setup, checks can\n                           dnl continue\n                           [:],\n                           [rkt_functional_tests_msg='Currently functional tests cannot be run on 3rd party stage1 images'])])\n      AS_VAR_IF([rkt_functional_tests_msg],[],\n                dnl we have a default flavor, check some special\n                dnl prerequisites for host flavor\n                [AS_VAR_IF([RKT_STAGE1_DEFAULT_FLAVOR], [host],\n                           dnl checking if we are running systemd as init, -.mount is a mount unit for /.\n                           [AS_IF([systemctl 2>/dev/null | grep --silent -e '-\\.mount'],\n                                  dnl systemd runs as init\n                                  [sdv=`systemctl --version | head -1 | sed -e 's/^systemd \\(@<:@0-9@:>@*\\)$/\\1/'`\n                                   AS_IF([test ${sdv} -lt 227],\n                                         [rkt_functional_tests_msg=\"Cannot run functional tests with ${RKT_STAGE1_DEFAULT_FLAVOR} stage1 flavor - systemd version on host is lower than 227 (currently running ${sdv})\"])],\n                                  dnl systemd is not an init\n                                  [rkt_functional_tests_msg=\"Cannot run functional tests with ${RKT_STAGE1_DEFAULT_FLAVOR} stage1 flavor - no systemd on host\"])])])\n      dnl gpg is required for functional tests\n      AS_VAR_IF([GPG],[gpg],\n                dnl gpg found, alright\n                [:],\n                dnl gpg not found, running functional tests is impossible\n                [rkt_functional_tests_msg='Cannot run functional tests - no gpg found'])\n      AS_VAR_IF([rkt_functional_tests_msg], [],\n                 dnl no message, tests can be run\n                 [RKT_RUN_FUNCTIONAL_TESTS=yes\n                  AC_MSG_RESULT([yes])],\n                 dnl message available, tests will not be run\n                 [AC_MSG_RESULT([no])\n                  AS_VAR_IF([RKT_RUN_FUNCTIONAL_TESTS], [auto],\n                            dnl functional tests are optional, so only print an info\n                            [RKT_RUN_FUNCTIONAL_TESTS=no\n                             AC_MSG_NOTICE([${rkt_functional_tests_msg}])],\n                            dnl functional tests are required, so bail out\n                            [AC_MSG_ERROR([*** ${rkt_functional_tests_msg}])])])])\n\n\n## Miscellaneous stuff\n\n# Check if arch is supported for coreos/kvm flavor.\nAS_CASE([${RKT_ACI_ARCH}],\n        dnl supported arches\n        [aarch64 | amd64], [],\n        dnl unsupported arches\n        [RKT_IF_HAS_VALUE([${RKT_STAGE1_FLAVORS}], [coreos,kvm,src],\n                           [AC_MSG_ERROR([*** ${RKT_ACI_ARCH}: no arch support for stage1 flavors {coreos,kvm,src}])],\n                           [AC_MSG_WARN([* ${RKT_ACI_ARCH}: unsupported arch])])])\n\n# Set the path to the interpreter binary for coreos flavor.\nRKT_IF_HAS_VALUE([${RKT_STAGE1_FLAVORS}], [coreos],\n                  [AS_CASE([${RKT_ACI_ARCH}],\n                           [aarch64],\n                                    [RKT_STAGE1_INTERPRETER=\"/usr/lib/ld-linux-aarch64.so.1\"],\n                           [amd64],\n                                    [RKT_STAGE1_INTERPRETER=\"/usr/lib/ld-linux-x86-64.so.2\"])])\n\n# Set the path to the interpreter binary for src flavor.\nRKT_IF_HAS_VALUE([${RKT_STAGE1_FLAVORS}], [src],\n                  [AS_CASE([${RKT_ACI_ARCH}],\n                           [aarch64],\n                                    [RKT_STAGE1_INTERPRETER=\"/lib64/ld-linux-aarch64.so.1\"],\n                           [amd64],\n                                    [RKT_STAGE1_INTERPRETER=\"/lib64/ld-linux-x86-64.so.2\"])])\n\n\n# cross_compiling is a standard autoconf variable.  See the autoconf manual for\n# details.\nAS_VAR_IF([cross_compiling], [no],\n          dnl no crosscompilation\n          [GOARCH_FOR_BUILD=${GOARCH_FOR_BUILD:-${GOARCH}}],\n          dnl we do crosscompilation\n          [AC_MSG_CHECKING([build golang arch])\n           AS_VAR_IF([GOARCH_FOR_BUILD], [],\n                     [AS_CASE([${build_cpu}],\n                              [x86_64],\n                                      [GOARCH_FOR_BUILD=\"amd64\"],\n                              [aarch64],\n                                      [GOARCH_FOR_BUILD=\"arm64\"],\n                              [powerpc | powerpc64],\n                                      [GOARCH_FOR_BUILD=\"ppc64\"],\n                              [powerpc64le],\n                                      [GOARCH_FOR_BUILD=\"ppc64le\"],\n                              [AC_MSG_RESULT([unknown]); AC_MSG_ERROR([*** Unknown build cpu: ${build_cpu}.  Set GOARCH_FOR_BUILD variable.])])\n                      AC_MSG_RESULT([${GOARCH_FOR_BUILD}])],\n                     [AC_MSG_RESULT([user supplied ${GOARCH_FOR_BUILD}])])])\n\nAC_LANG_PUSH([C])\n\n# check for libc generally\nAC_CHECK_LIB([c], [fork],\n             dnl libc is there\n             [:],\n             dnl libc is not there\n             [AC_MSG_ERROR([*** No libc found. Try to install glibc-devel or libc6-dev.])])\n\n# Check whether we can build TPM support code\nAC_CHECK_HEADER(trousers/tss.h, [HAVE_TPM=yes], [HAVE_TPM=no], [AC_INCLUDES_DEFAULT])\n\nTPM_TAGS=''\nAS_CASE([${RKT_ENABLE_TPM}],\n        [no],\n                dnl nothing to do\n                [:],\n        [auto],\n                [AS_VAR_IF([HAVE_TPM],[yes],\n                           [TPM_TAGS=tpm\n                            RKT_ENABLE_TPM=yes],\n                           [RKT_ENABLE_TPM=no])],\n        [yes],\n                [AS_VAR_IF([HAVE_TPM],[no],\n                           [AC_MSG_ERROR([*** TPM is enabled, but could not find required development files])])\n                 TPM_TAGS=tpm],\n        [AC_MSG_ERROR([*** Invalid value passed to --enable-tpm, should be either 'yes', 'no' or 'auto'])])\nAS_CASE([${RKT_ENABLE_TPM}],\n        [no],\n                [RKT_ADD_FEATURE '-TPM'],\n        [yes],\n                [RKT_ADD_FEATURE '+TPM'])\n\n# Check whether we have libsystemd-journal (for go-systemd/sdjournal)\nAC_CHECK_HEADER([systemd/sd-journal.h], [HAVE_SDJOURNAL=yes], [HAVE_SDJOURNAL=no], [AC_INCLUDES_DEFAULT])\n\nSDJOURNAL_TAGS=''\nAS_CASE([${RKT_ENABLE_SDJOURNAL}],\n        [no],\n                dnl nothing to do\n                [:],\n        [auto],\n                [AS_VAR_IF([HAVE_SDJOURNAL],[yes],\n                           [SDJOURNAL_TAGS=sdjournal\n                            RKT_ENABLE_SDJOURNAL=yes],\n                           [RKT_ENABLE_SDJOURNAL=no])],\n        [yes],\n                [AS_VAR_IF([HAVE_SDJOURNAL],[no],\n                           [AC_MSG_ERROR([*** Host systemd-journal support enabled, but could not find required development files])])\n                 SDJOURNAL_TAGS=sdjournal],\n        [AC_MSG_ERROR([*** Invalid value passed to --enable-sdjournal, should be either 'yes', 'no' or 'auto'])])\nAS_CASE([${RKT_ENABLE_SDJOURNAL}],\n        [no],\n                [RKT_ADD_FEATURE '-SDJOURNAL'],\n        [yes],\n                [RKT_ADD_FEATURE '+SDJOURNAL'])\n\nAC_LANG_POP([C])\n\nAC_PROG_INSTALL\nRKT_REQ_PROG([FILE],[file],[file])\nRKT_REQ_PROG([GOBINARY],[go],[go])\nRKT_REQ_PROG([GOFMTBINARY],[gofmt],[gofmt])\nRKT_REQ_ABS_PROG([ABS_GO], [go])\n\n#### LINKER FLAGS\n\ndnl Digits regexp class. Square brackets are used by m4 for quoting,\ndnl so to get literal square brackets, m4 provides ugly @<:@ and @:>@\ndnl for [ and ].\nm4_define([DIGITS],[@<:@0-9@:>@])\nm4_define([ALNUM],[@<:@a-z0-9@:>@])\n\ndnl Detect go version. Successfully parse versions like \"go1.5\",\ndnl \"go1.5.3\", \"go1.6rc1\", \"devel +66330d8 Wed Jan 13 23:40:13 2016\ndnl +0000\".\nGO_VERSION_OUTPUT=`\"${ABS_GO}\" version`\nGO_VERSION=`AS_ECHO([\"${GO_VERSION_OUTPUT}\"]) | sed -e 's/^go version \\(.*\\) ALNUM*\\/ALNUM*$/\\1/'`\nAS_CASE([$GO_VERSION],\n        [devel*],\n                [AC_MSG_WARN([* Using development version of go, all bets are off])],\n        [go*],\n                [GO_VERSION=`AS_ECHO([\"${GO_VERSION}\"]) | sed -e 's/^go\\(.*\\)/\\1/'`\n                 GO_MAJOR=`AS_ECHO([\"${GO_VERSION}\"]) | grep -o '^DIGITS\\+'`\n                 GO_MINOR=`AS_ECHO([\"${GO_VERSION}\"]) | grep -o '^DIGITS\\+\\.DIGITS\\+' | grep -o 'DIGITS\\+$'`\n                 GO_MICRO=`AS_ECHO([\"${GO_VERSION}\"]) | grep -o '^DIGITS\\+\\.DIGITS\\+\\.DIGITS\\+' | sed -e 's/^DIGITS*\\.DIGITS*\\.\\(DIGITS*\\).*/\\1/'`\n                 AS_VAR_IF([GO_MICRO],[],\n                           [GO_MICRO=0])\n\n                 GO_BEST_MAJOR=1\n                 GO_BEST_MINOR=5\n                 AC_MSG_CHECKING([whether we have go ${GO_BEST_MAJOR}.${GO_BEST_MINOR} or newer])\n                 AS_IF([test \"${GO_MAJOR}\" -gt \"${GO_BEST_MAJOR}\" || test \"${GO_MAJOR}\" -eq \"${GO_BEST_MAJOR}\" -a \"${GO_MINOR}\" -ge \"${GO_BEST_MINOR}\"],\n                       [AC_MSG_RESULT([yes])],\n                       [AC_MSG_RESULT([no])\n                        AC_MSG_ERROR([*** go is too old (${GO_VERSION})])])\n\n                 AC_MSG_CHECKING([whether we have a go version without CVE-2015-8618])\n                 AS_IF([test \"${GO_MAJOR}\" -eq \"1\" -a \"${GO_MINOR}\" -eq \"5\" -a \"${GO_MICRO}\" -lt \"3\"],\n                       [AC_MSG_RESULT([no])\n                        insecure_go_warning=\"go version is vulnerable to CVE-2015-8618 (${GO_VERSION})\"\n                        AS_VAR_IF([RKT_INSECURE_GO],[no],\n                                  [AC_MSG_ERROR([*** ${insecure_go_warning}])],\n                                  [AC_MSG_WARN([* ${insecure_go_warning}])])],\n                       [AC_MSG_RESULT([yes])])],\n        [AC_MSG_ERROR([*** Could not parse the output of go version])])\nRKT_STAGE1_DEFAULT_NAME_LDFLAGS=\"-X 'main.buildDefaultStage1Name=${RKT_STAGE1_DEFAULT_NAME}'\"\nRKT_STAGE1_DEFAULT_VERSION_LDFLAGS=\"-X 'main.buildDefaultStage1Version=${RKT_STAGE1_DEFAULT_VERSION}'\"\nRKT_STAGE1_DEFAULT_LOCATION_LDFLAGS=\"-X 'main.buildDefaultStage1ImageLoc=${RKT_STAGE1_DEFAULT_LOCATION}'\"\nRKT_STAGE1_DEFAULT_IMAGE_FILENAME_LDFLAGS=\"-X 'main.buildDefaultStage1ImageInRktDir=${RKT_STAGE1_DEFAULT_IMAGE_FILENAME_IN_RKT_DIRECTORY}'\"\nRKT_STAGE1_DEFAULT_IMAGES_DIRECTORY_LDFLAGS=\"-X 'main.buildDefaultStage1ImagesDir=${RKT_STAGE1_DEFAULT_IMAGES_DIR}'\"\nRKT_STAGE1_INTERPRETER_LDFLAGS=\"-X 'main.interpBin=${RKT_STAGE1_INTERPRETER}'\"\nRKT_VERSION_LDFLAGS=\"-X 'github.com/rkt/rkt/version.Version=${RKT_VERSION}'\"\nRKT_FEATURES_LDFLAGS=\"-X 'main.rktFeatures=${RKT_FEATURES}'\"\n\n#### SUBSTITUTIONS\n\nAC_SUBST(RKT_VERSION)\nAC_SUBST(RKT_ACI_ARCH)\nAC_SUBST(RKT_STAGE1_FLAVORS_VERSION_OVERRIDE)\n\nAC_SUBST(RKT_STAGE1_DEFAULT_NAME)\nAC_SUBST(RKT_STAGE1_DEFAULT_VERSION)\n\nAC_SUBST(RKT_STAGE1_ALL_FLAVORS)\nAC_SUBST(RKT_STAGE1_FLAVORS)\nAC_SUBST(RKT_STAGE1_DEFAULT_FLAVOR)\n\nAC_SUBST(RKT_STAGE1_DEFAULT_LOCATION)\nAC_SUBST(RKT_STAGE1_DEFAULT_IMAGES_DIR)\nAC_SUBST(RKT_STAGE1_DEFAULT_IMAGE_FILENAME_IN_RKT_DIRECTORY)\n\nAC_SUBST(RKT_STAGE1_SYSTEMD_SRC)\nAC_SUBST(RKT_STAGE1_SYSTEMD_VER)\nAC_SUBST(RKT_STAGE1_SYSTEMD_REV)\n\nAC_SUBST(RKT_LOCAL_COREOS_PXE_IMAGE_PATH)\nAC_SUBST(RKT_LOCAL_COREOS_PXE_IMAGE_SYSTEMD_VER)\n\nAC_SUBST(RKT_STAGE1_COREOS_BOARD)\nAC_SUBST(RKT_STAGE1_INTERPRETER)\n\nAC_SUBST(RKT_RUN_FUNCTIONAL_TESTS)\nAC_SUBST(INCREMENTAL_BUILD)\n\nAC_SUBST(GOARCH)\nAC_SUBST(GOARM)\nAC_SUBST(GOARCH_FOR_BUILD)\n\nAC_SUBST(RKT_STAGE1_DEFAULT_NAME_LDFLAGS)\nAC_SUBST(RKT_STAGE1_DEFAULT_VERSION_LDFLAGS)\nAC_SUBST(RKT_STAGE1_DEFAULT_LOCATION_LDFLAGS)\nAC_SUBST(RKT_STAGE1_DEFAULT_IMAGE_FILENAME_LDFLAGS)\nAC_SUBST(RKT_STAGE1_DEFAULT_IMAGES_DIRECTORY_LDFLAGS)\nAC_SUBST(RKT_STAGE1_INTERPRETER_LDFLAGS)\nAC_SUBST(RKT_VERSION_LDFLAGS)\nAC_SUBST(RKT_FEATURES_LDFLAGS)\n\nAC_SUBST(RKT_STAGE1_KVM_ALL_HV)\nAC_SUBST(RKT_STAGE1_KVM_HV)\nAC_SUBST(TPM_TAGS)\nAC_SUBST(SDJOURNAL_TAGS)\n\nAC_SUBST(RKT_DEFINES_FOR_ENTER)\n\n#### FILE GENERATION AND REPORTING\n\nAC_CONFIG_FILES([Makefile])\nAC_OUTPUT\n\nAC_MSG_RESULT([\n        AC_PACKAGE_NAME ${RKT_VERSION}\n\n        stage1 setup\n\n        type:                                   '${RKT_STAGE1_SETUP_KIND}'\n        default stage1 location:                '${RKT_STAGE1_DEFAULT_LOCATION}'\n        default stage1 images directory:        '${RKT_STAGE1_DEFAULT_IMAGES_DIR}'])\n\nAS_CASE([${RKT_STAGE1_SETUP_KIND}],\n        [flavor],\n                [AC_MSG_RESULT([\n        built stage1 flavors:                   '${RKT_STAGE1_FLAVORS}'\n        default stage1 flavor:                  '${RKT_STAGE1_DEFAULT_FLAVOR}'\n        implied default stage1 name:            '${RKT_STAGE1_DEFAULT_NAME}'])\n                 AS_VAR_IF([RKT_STAGE1_FLAVORS_VERSION_OVERRIDE], [],\n                           [AC_MSG_RESULT([dnl\n        implied default stage1 version:         '${RKT_STAGE1_DEFAULT_VERSION}'])],\n                           [AC_MSG_RESULT([dnl\n        overridden default stage1 version:      '${RKT_STAGE1_DEFAULT_VERSION}'])])],\n        [detailed],\n                [AC_MSG_RESULT([\n        default stage1 name:                    '${RKT_STAGE1_DEFAULT_NAME}'\n        default stage1 version:                 '${RKT_STAGE1_DEFAULT_VERSION}'])],\n        [AC_MSG_ERROR([*** Unknown setup kind, should not happen])])\n\nRKT_IF_HAS_VALUE([${RKT_STAGE1_FLAVORS}], [coreos,kvm],\n                  [AC_MSG_RESULT([\n        coreos/kvm flavor specific build parameters\n\n        local CoreOS PXE image path:            '${RKT_LOCAL_COREOS_PXE_IMAGE_PATH}'\n        local CoreOS PXE image systemd version: '${RKT_LOCAL_COREOS_PXE_IMAGE_SYSTEMD_VER}'\n        stage1 CoreOS board:                    '${RKT_STAGE1_COREOS_BOARD}'])])\n\nRKT_IF_HAS_VALUE([${RKT_STAGE1_FLAVORS}], [src],\n                  [AC_MSG_RESULT([\n        src flavor specific build parameters\n\n        systemd source:                         '${RKT_STAGE1_SYSTEMD_SRC}'\n        systemd Git revision:                   '${RKT_STAGE1_SYSTEMD_REV}'\n        systemd version:                        '${RKT_STAGE1_SYSTEMD_VER}'])])\n\nRKT_IF_HAS_VALUE([${RKT_STAGE1_FLAVORS}], [kvm],\n                  [AC_MSG_RESULT([\n        kvm flavor specific build parameters\n\n        hypervisors:                            '${RKT_STAGE1_KVM_HV}'])])\n\nRKT_IF_HAS_VALUE([${RKT_STAGE1_FLAVORS}], [coreos,src],\n                  [AC_MSG_RESULT([\n        coreos flavor specific build parameters\n\n        interpreter:                            '${RKT_STAGE1_INTERPRETER}'])])\n\n\nAC_MSG_RESULT([\n        other build parameters\n\n        functional tests enabled:               '${RKT_RUN_FUNCTIONAL_TESTS}'\n        incremental build:                      '${INCREMENTAL_BUILD}'\n        features:                               '${RKT_FEATURES}'\n        ACI arch:                               '${RKT_ACI_ARCH}'\n        go version:                             '${GO_VERSION}'\n        go arch:                                '${GOARCH}'])\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "glide.lock",
          "type": "blob",
          "size": 8.8974609375,
          "content": "hash: 1a955b0303fbf7d88c8f32a17036a2ecb48c30ce42ce1771a025445126198986\nupdated: 2018-04-13T16:23:44.423828285Z\nimports:\n- name: github.com/appc/docker2aci\n  version: 1bfc43596cd2fdca46e9ddb33cfe7d56f87644ab\n  subpackages:\n  - lib\n  - lib/common\n  - lib/internal\n  - lib/internal/backend/file\n  - lib/internal/backend/repository\n  - lib/internal/docker\n  - lib/internal/tarball\n  - lib/internal/types\n  - lib/internal/typesV2\n  - lib/internal/util\n  - pkg/log\n- name: github.com/appc/goaci\n  version: ba7b591f930783c0ab75f5bbfd6ff65c7bd011bf\n  subpackages:\n  - proj2aci\n- name: github.com/appc/spec\n  version: cbe99b7160b1397bf89f9c8bb1418f69c9424049\n  subpackages:\n  - ace\n  - aci\n  - actool\n  - discovery\n  - pkg/acirenderer\n  - pkg/device\n  - pkg/tarheader\n  - schema\n  - schema/common\n  - schema/lastditch\n  - schema/types\n  - schema/types/resource\n- name: github.com/aws/aws-sdk-go\n  version: 13a12060f716145019378a10e2806c174356b857\n  subpackages:\n  - aws\n  - aws/awserr\n  - aws/awsutil\n  - aws/client/metadata\n  - aws/credentials\n  - aws/request\n  - private/protocol/rest\n  - private/signer/v4\n- name: github.com/containernetworking/cni\n  version: 5c3c17164270150467498a32c71436c7cd5501be\n  subpackages:\n  - pkg/invoke\n  - pkg/ip\n  - pkg/ipam\n  - pkg/ns\n  - pkg/skel\n  - pkg/testutils\n  - pkg/types\n  - pkg/utils\n  - pkg/utils/hwaddr\n  - pkg/utils/sysctl\n  - plugins/ipam/dhcp\n  - plugins/ipam/host-local\n  - plugins/ipam/host-local/backend\n  - plugins/ipam/host-local/backend/disk\n  - plugins/main/bridge\n  - plugins/main/ipvlan\n  - plugins/main/macvlan\n  - plugins/main/ptp\n  - plugins/meta/flannel\n  - plugins/meta/tuning\n- name: github.com/coreos/gexpect\n  version: 8d6e05eaaeb840725b2c2aba77483919659bb95e\n- name: github.com/coreos/go-iptables\n  version: fbb73372b87f6e89951c2b6b31470c2c9d5cfae3\n  subpackages:\n  - iptables\n- name: github.com/coreos/go-semver\n  version: 294930c1e79c64e7dbe360054274fdad492c8cf5\n  subpackages:\n  - semver\n- name: github.com/coreos/go-systemd\n  version: d2196463941895ee908e13531a23a39feb9e1243\n  subpackages:\n  - activation\n  - daemon\n  - dbus\n  - sdjournal\n  - unit\n  - util\n- name: github.com/coreos/go-tspi\n  version: 03955c59fff97f9e38e7e32c68ac4db21a2aea2b\n  subpackages:\n  - tpmclient\n  - tspiconst\n  - verification\n- name: github.com/coreos/ioprogress\n  version: e7fc03058804de5488baed8df5b89f3924b9ec9a\n- name: github.com/coreos/pkg\n  version: 7f080b6c11ac2d2347c3cd7521e810207ea1a041\n  subpackages:\n  - dlopen\n  - progressutil\n- name: github.com/cpuguy83/go-md2man\n  version: 71acacd42f85e5e82f70a55327789582a5200a90\n  subpackages:\n  - md2man\n- name: github.com/cznic/b\n  version: e2e747ce049fb910cff6b1fd7ad8faf3900939d5\n- name: github.com/cznic/bufs\n  version: 3dcccbd7064a1689f9c093a988ea11ac00e21f51\n- name: github.com/cznic/fileutil\n  version: 21ae57c9dce724a15e88bd9cd46d5668f3e880a5\n- name: github.com/cznic/mathutil\n  version: 250d0b9d3304c5ea0c4cfc7d9efc7ee528b81f3b\n- name: github.com/cznic/ql\n  version: 2cbfdfc32e5e9575be5176b1f6f21d6445003617\n  subpackages:\n  - driver\n  - vendored/github.com/camlistore/go4/lock\n  - vendored/github.com/cznic/exp/lldb\n- name: github.com/cznic/sortutil\n  version: d4401851b4c370f979b842fa1e45e0b3b718b391\n- name: github.com/cznic/strutil\n  version: 97bc31f80ac4c9fa9c5dc5fea74c383858988ea2\n- name: github.com/cznic/zappy\n  version: 47331054e4f96186e3ff772877c0443909368a45\n- name: github.com/d2g/dhcp4\n  version: f0e4d29ff0231dce36e250b2ed9ff08412584bca\n- name: github.com/d2g/dhcp4client\n  version: bed07e1bc5b85f69c6f0fd73393aa35ec68ed892\n- name: github.com/davecgh/go-spew\n  version: 5215b55f46b2b919f50a1df0eaa5886afe4e3b3d\n  subpackages:\n  - spew\n- name: github.com/docker/distribution\n  version: 5db89f0ca68677abc5eefce8f2a0a772c98ba52d\n  subpackages:\n  - digest\n  - digestset\n  - reference\n- name: github.com/dustin/go-humanize\n  version: c20a8bde38c8f5ba06f6600edf473705c96829d1\n- name: github.com/go-ini/ini\n  version: 12f418cc7edc5a618a51407b7ac1f1f512139df3\n- name: github.com/go-ole/go-ole\n  version: 572eabb84c424e76a0d39d31510dd7dfd62f70b2\n  subpackages:\n  - oleutil\n- name: github.com/go4org/go4\n  version: 03efcb870d84809319ea509714dd6d19a1498483\n  subpackages:\n  - errorutil\n- name: github.com/godbus/dbus\n  version: a1b8ba5163b7f041b22761461eabd02b70d1f824\n  subpackages:\n  - introspect\n- name: github.com/gogo/protobuf\n  version: 4168943e65a2802828518e95310aeeed6d84c4e5\n  subpackages:\n  - proto\n- name: github.com/golang/protobuf\n  version: 8ee79997227bf9b34611aee7946ae64735e6fd93\n  subpackages:\n  - proto\n  - protoc-gen-go\n  - protoc-gen-go/descriptor\n  - protoc-gen-go/generator\n  - protoc-gen-go/grpc\n  - protoc-gen-go/internal/grpc\n  - protoc-gen-go/plugin\n- name: github.com/google/btree\n  version: f06e229e679911bb31a04e07ac891115822e37c3\n- name: github.com/gorilla/context\n  version: 50c25fb3b2b3b3cc724e9b6ac75fb44b3bccd0da\n- name: github.com/gorilla/mux\n  version: e444e69cbd2e2e3e0749a2f3c717cec491552bbf\n- name: github.com/hashicorp/errwrap\n  version: 7554cd9344cec97297fa6649b055a8c98c2a1e55\n- name: github.com/hashicorp/golang-lru\n  version: a0d98a5f288019575c6d1f4bb1573fef2d1fcdc4\n  subpackages:\n  - simplelru\n- name: github.com/hydrogen18/stoppableListener\n  version: 2eebd04b47ff393f4bc50b7fcacf8f048994c6fd\n- name: github.com/inconshreveable/mousetrap\n  version: 76626ae9c91c4f2a10f34cad8ce83ea42c93bb75\n- name: github.com/jmespath/go-jmespath\n  version: 0b12d6b521d83fc7f755e7cfc1b1fbdd35a01a74\n- name: github.com/jonboulle/clockwork\n  version: 2eee05ed794112d45db504eb05aa693efd2b8b09\n- name: github.com/kballard/go-shellquote\n  version: e5c918b80c17694cbc49aab32a759f9a40067f5d\n- name: github.com/klauspost/compress\n  version: 006acde2c5d283d2f8b8aa03d8f0cd2891c680cf\n  subpackages:\n  - flate\n- name: github.com/klauspost/cpuid\n  version: 09cded8978dc9e80714c4d85b0322337b0a1e5e0\n- name: github.com/klauspost/crc32\n  version: 19b0b332c9e4516a6370a0456e6182c3b5036720\n- name: github.com/klauspost/pgzip\n  version: 95e8170c5d4da28db9c64dfc9ec3138ea4466fd4\n- name: github.com/kr/pretty\n  version: cfb55aafdaf3ec08f0db22699ab822c50091b1c4\n- name: github.com/kr/pty\n  version: f7ee69f31298ecbe5d2b349c711e2547a617d398\n- name: github.com/opencontainers/go-digest\n  version: 21dfd564fd89c944783d00d069f33e3e7123c448\n- name: github.com/opencontainers/image-spec\n  version: 6e820ec55259e89ccd7092f3131c63e8419a349b\n  subpackages:\n  - specs-go\n  - specs-go/v1\n- name: github.com/opencontainers/selinux\n  version: 4a2974bf1ee960774ffd517717f1f45325af0206\n  subpackages:\n  - go-selinux\n  - go-selinux/label\n- name: github.com/pborman/uuid\n  version: e790cca94e6cc75c7064b1332e63811d4aae1a53\n- name: github.com/peterbourgon/diskv\n  version: 937c5a91d7fb1477fa6d2bb71410b2ae7a0f2143\n- name: github.com/PuerkitoBio/purell\n  version: 0bcb03f4b4d0a9428594752bd2a3b9aa0a9d4bd4\n- name: github.com/PuerkitoBio/urlesc\n  version: 5bd2802263f21d8788851d5305584c82a5c75d7e\n- name: github.com/russross/blackfriday\n  version: 300106c228d52c8941d4b3de6054a6062a86dda3\n- name: github.com/shirou/gopsutil\n  version: 1516eb9ddc5e61ba58874047a98f8b44b5e585e8\n  subpackages:\n  - cpu\n  - host\n  - internal/common\n  - load\n  - mem\n  - net\n  - process\n- name: github.com/shirou/w32\n  version: 3c9377fc6748f222729a8270fe2775d149a249ad\n- name: github.com/shurcooL/sanitized_anchor_name\n  version: 10ef21a441db47d8b13ebcc5fd2310f636973c77\n- name: github.com/spf13/cobra\n  version: 4c05eb1145f16d0e6bb4a3e1b6d769f4713cb41f\n  subpackages:\n  - doc\n- name: github.com/spf13/pflag\n  version: 08b1a584251b5b62f458943640fc8ebd4d50aaa5\n- name: github.com/StackExchange/wmi\n  version: f3e2bae1e0cb5aef83e319133eabfee30013a4a5\n- name: github.com/syndtr/gocapability\n  version: e7cb7fa329f456b3855136a2642b197bad7366ba\n  subpackages:\n  - capability\n- name: github.com/vishvananda/netlink\n  version: ecf47fd5739b3d2c3daf7c89c4b9715a2605c21b\n  subpackages:\n  - nl\n- name: go4.org\n  version: 03efcb870d84809319ea509714dd6d19a1498483\n  subpackages:\n  - errorutil\n- name: golang.org/x/crypto\n  version: a7ead6ddf06233883deca151dffaef2effbf498f\n  subpackages:\n  - cast5\n  - openpgp\n  - openpgp/armor\n  - openpgp/elgamal\n  - openpgp/errors\n  - openpgp/packet\n  - openpgp/s2k\n  - ssh/terminal\n- name: golang.org/x/net\n  version: 6a513affb38dc9788b449d59ffed099b8de18fa0\n  subpackages:\n  - context\n  - html\n  - html/atom\n  - http2\n  - http2/hpack\n  - idna\n  - internal/timeseries\n  - lex/httplex\n  - trace\n- name: golang.org/x/sys\n  version: b44883b474ffefa37335017174e397412b633a4f\n  subpackages:\n  - unix\n- name: golang.org/x/text\n  version: 7922cc490dd5a7dbaa7fd5d6196b49db59ac042f\n  subpackages:\n  - transform\n  - unicode/norm\n  - width\n- name: golang.org/x/tools\n  version: 27e692e6ec36d8f48be794f32553e1400c70dbf2\n  subpackages:\n  - go/vcs\n- name: google.golang.org/grpc\n  version: 777daa17ff9b5daef1cfdf915088a2ada3332bf0\n  subpackages:\n  - codes\n  - credentials\n  - grpclog\n  - internal\n  - metadata\n  - naming\n  - peer\n  - stats\n  - tap\n  - transport\n- name: gopkg.in/inf.v0\n  version: 3887ee99ecf07df5b447e9b00d9c0b2adaa9f3e4\ntestImports:\n- name: github.com/kr/text\n  version: 7cafcd837844e784b526369c9bce262804aebc60\n"
        },
        {
          "name": "glide.yaml",
          "type": "blob",
          "size": 7.3935546875,
          "content": "package: github.com/rkt/rkt\nimport:\n- package: github.com/StackExchange/wmi\n  version: f3e2bae1e0cb5aef83e319133eabfee30013a4a5\n- package: github.com/appc/docker2aci\n  version: v0.17.2\n  subpackages:\n  - lib\n  - lib/common\n  - lib/internal\n  - lib/internal/backend/file\n  - lib/internal/backend/repository\n  - lib/internal/docker\n  - lib/internal/tarball\n  - lib/internal/types\n  - lib/internal/util\n  - pkg/log\n- package: github.com/appc/goaci\n  version: v0.1.0\n  subpackages:\n  - proj2aci\n- package: github.com/appc/spec\n  version: v0.8.11\n  subpackages:\n  - ace\n  - aci\n  - actool\n  - discovery\n  - pkg/acirenderer\n  - pkg/device\n  - pkg/tarheader\n  - schema\n  - schema/common\n  - schema/lastditch\n  - schema/types\n- package: github.com/aws/aws-sdk-go\n  version: v1.1.7\n  subpackages:\n  - aws\n  - aws/awserr\n  - aws/awsutil\n  - aws/client/metadata\n  - aws/credentials\n  - aws/request\n  - private/protocol/rest\n  - private/signer/v4\n- package: github.com/containernetworking/cni\n  version: v0.3.0\n  subpackages:\n  - pkg/invoke\n  - pkg/ip\n  - pkg/ipam\n  - pkg/ns\n  - pkg/skel\n  - pkg/testutils\n  - pkg/types\n  - pkg/utils\n  - pkg/utils/sysctl\n  - pkg/utils/hwaddr\n  - plugins/ipam/dhcp\n  - plugins/ipam/host-local\n  - plugins/ipam/host-local/backend\n  - plugins/ipam/host-local/backend/disk\n  - plugins/main/bridge\n  - plugins/main/ipvlan\n  - plugins/main/macvlan\n  - plugins/main/ptp\n  - plugins/meta/flannel\n  - plugins/meta/tuning\n- package: github.com/coreos/gexpect\n  version: v0.1.1\n- package: github.com/coreos/go-iptables\n  version: v0.1.0\n  subpackages:\n  - iptables\n- package: github.com/coreos/go-semver\n  version: v0.1.0\n  subpackages:\n  - semver\n- package: github.com/coreos/go-systemd\n  version: v15\n  subpackages:\n  - activation\n  - daemon\n  - dbus\n  - sdjournal\n  - unit\n  - util\n- package: github.com/coreos/go-tspi\n  version: v0.1.1\n  subpackages:\n  - tpmclient\n  - tspiconst\n  - verification\n- package: github.com/coreos/ioprogress\n  version: e7fc03058804de5488baed8df5b89f3924b9ec9a\n- package: github.com/coreos/pkg\n  version: v2\n  subpackages:\n  - dlopen\n  - progressutil\n- package: github.com/cpuguy83/go-md2man\n  version: v1.0.4\n  subpackages:\n  - md2man\n- package: github.com/cznic/b\n  version: e2e747ce049fb910cff6b1fd7ad8faf3900939d5\n- package: github.com/cznic/bufs\n  version: 3dcccbd7064a1689f9c093a988ea11ac00e21f51\n- package: github.com/cznic/fileutil\n  version: 21ae57c9dce724a15e88bd9cd46d5668f3e880a5\n- package: github.com/cznic/mathutil\n  version: 250d0b9d3304c5ea0c4cfc7d9efc7ee528b81f3b\n- package: github.com/cznic/ql\n  version: v1.0.4\n  subpackages:\n  - driver\n- package: github.com/cznic/sortutil\n  version: d4401851b4c370f979b842fa1e45e0b3b718b391\n- package: github.com/cznic/strutil\n  version: 97bc31f80ac4c9fa9c5dc5fea74c383858988ea2\n- package: github.com/cznic/zappy\n  version: 47331054e4f96186e3ff772877c0443909368a45\n- package: github.com/d2g/dhcp4\n  version: f0e4d29ff0231dce36e250b2ed9ff08412584bca\n- package: github.com/d2g/dhcp4client\n  version: bed07e1bc5b85f69c6f0fd73393aa35ec68ed892\n- package: github.com/docker/distribution\n  version: 5db89f0ca68677abc5eefce8f2a0a772c98ba52d\n  subpackages:\n  - digest\n  - reference\n- package: github.com/dustin/go-humanize\n  version: c20a8bde38c8f5ba06f6600edf473705c96829d1\n- package: github.com/go-ini/ini\n  version: v1.11.0\n- package: github.com/go-ole/go-ole\n  version: 572eabb84c424e76a0d39d31510dd7dfd62f70b2\n  subpackages:\n  - oleutil\n- package: github.com/godbus/dbus\n  version: a1b8ba5163b7f041b22761461eabd02b70d1f824\n  subpackages:\n  - introspect\n- package: github.com/gogo/protobuf\n  version: v0.2\n  subpackages:\n  - proto\n- package: github.com/golang/protobuf\n  version: 8ee79997227bf9b34611aee7946ae64735e6fd93\n  subpackages:\n  - proto\n  - protoc-gen-go\n  - protoc-gen-go/descriptor\n  - protoc-gen-go/generator\n  - protoc-gen-go/internal/grpc\n  - protoc-gen-go/plugin\n  - protoc-gen-go/grpc\n- package: github.com/google/btree\n  version: f06e229e679911bb31a04e07ac891115822e37c3\n- package: github.com/gorilla/context\n  version: 50c25fb3b2b3b3cc724e9b6ac75fb44b3bccd0da\n- package: github.com/gorilla/mux\n  version: e444e69cbd2e2e3e0749a2f3c717cec491552bbf\n- package: github.com/hashicorp/errwrap\n  version: 7554cd9344cec97297fa6649b055a8c98c2a1e55\n- package: github.com/hydrogen18/stoppableListener\n  version: 2eebd04b47ff393f4bc50b7fcacf8f048994c6fd\n- package: github.com/inconshreveable/mousetrap\n  version: 76626ae9c91c4f2a10f34cad8ce83ea42c93bb75\n- package: github.com/jmespath/go-jmespath\n  version: 0b12d6b521d83fc7f755e7cfc1b1fbdd35a01a74\n- package: github.com/kballard/go-shellquote\n  version: e5c918b80c17694cbc49aab32a759f9a40067f5d\n- package: github.com/kr/pty\n  version: f7ee69f31298ecbe5d2b349c711e2547a617d398\n- package: github.com/opencontainers/selinux\n  version: 4a2974bf1ee960774ffd517717f1f45325af0206\n  subpackages:\n  - go-selinux\n  - go-selinux/label\n- package: github.com/pborman/uuid\n  version: v1.1\n- package: github.com/peterbourgon/diskv\n  version: v2.0.0\n- package: github.com/russross/blackfriday\n  version: 300106c228d52c8941d4b3de6054a6062a86dda3\n- package: github.com/shirou/gopsutil\n  version: v2.16.10\n  subpackages:\n  - cpu\n  - host\n  - internal/common\n  - load\n  - mem\n  - net\n  - process\n- package: github.com/shirou/w32\n  version: 3c9377fc6748f222729a8270fe2775d149a249ad\n- package: github.com/shurcooL/sanitized_anchor_name\n  version: 10ef21a441db47d8b13ebcc5fd2310f636973c77\n- package: github.com/spf13/cobra\n  version: 4c05eb1145f16d0e6bb4a3e1b6d769f4713cb41f\n  subpackages:\n  - doc\n- package: github.com/spf13/pflag\n  version: 08b1a584251b5b62f458943640fc8ebd4d50aaa5\n- package: github.com/syndtr/gocapability\n  version: e7cb7fa329f456b3855136a2642b197bad7366ba\n  subpackages:\n  - capability\n- package: github.com/vishvananda/netlink\n  version: ecf47fd5739b3d2c3daf7c89c4b9715a2605c21b\n  subpackages:\n  - nl\n- package: github.com/go4org/go4\n  version: 03efcb870d84809319ea509714dd6d19a1498483\n  subpackages:\n  - errorutil\n- package: golang.org/x/crypto\n  version: a7ead6ddf06233883deca151dffaef2effbf498f\n  subpackages:\n  - cast5\n  - openpgp\n  - openpgp/armor\n  - openpgp/elgamal\n  - openpgp/errors\n  - openpgp/packet\n  - openpgp/s2k\n  - ssh/terminal\n- package: golang.org/x/net\n  version: 6a513affb38dc9788b449d59ffed099b8de18fa0\n  subpackages:\n  - context\n  - html\n  - html/atom\n  - http2\n  - http2/hpack\n  - internal/timeseries\n  - trace\n- package: golang.org/x/sys\n  version: b44883b474ffefa37335017174e397412b633a4f\n  subpackages:\n  - unix\n- package: golang.org/x/tools\n  version: 27e692e6ec36d8f48be794f32553e1400c70dbf2\n  subpackages:\n  - go/vcs\n- package: google.golang.org/grpc\n  version: v1.0.4\n  subpackages:\n  - codes\n  - credentials\n  - grpclog\n  - metadata\n  - naming\n  - peer\n  - transport\n  - internal\n  - tap\n  - stats\n- package: gopkg.in/inf.v0\n  version: v0.9.0\n- package: github.com/klauspost/pgzip\n  version: v1.0\n- package: github.com/klauspost/compress\n  version: v1.0\n  subpackages:\n  - flate\n- package: github.com/klauspost/crc32\n  version: v1.0\n- package: github.com/klauspost/cpuid\n  version: v1.0\n- package: github.com/jonboulle/clockwork\n  version: v0.1.0\n- package: github.com/davecgh/go-spew\n  version: 5215b55f46b2b919f50a1df0eaa5886afe4e3b3d\n  subpackages:\n  - spew\n- package: github.com/hashicorp/golang-lru\n  version: a0d98a5f288019575c6d1f4bb1573fef2d1fcdc4\n- package: github.com/kr/pretty\n  version: cfb55aafdaf3ec08f0db22699ab822c50091b1c4\n- package: github.com/PuerkitoBio/purell\n  version: v1.1.0\n- package: github.com/PuerkitoBio/urlesc\n  version: 5bd2802263f21d8788851d5305584c82a5c75d7e\n"
        },
        {
          "name": "install-sh",
          "type": "blob",
          "size": 13.6689453125,
          "content": "#!/bin/sh\n# install - install a program, script, or datafile\n\nscriptversion=2011-11-20.07; # UTC\n\n# This originates from X11R5 (mit/util/scripts/install.sh), which was\n# later released in X11R6 (xc/config/util/install.sh) with the\n# following copyright and license.\n#\n# Copyright (C) 1994 X Consortium\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to\n# deal in the Software without restriction, including without limitation the\n# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n# sell copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n# X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\n# AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNEC-\n# TION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n#\n# Except as contained in this notice, the name of the X Consortium shall not\n# be used in advertising or otherwise to promote the sale, use or other deal-\n# ings in this Software without prior written authorization from the X Consor-\n# tium.\n#\n#\n# FSF changes to this file are in the public domain.\n#\n# Calling this script install-sh is preferred over install.sh, to prevent\n# 'make' implicit rules from creating a file called install from it\n# when there is no Makefile.\n#\n# This script is compatible with the BSD install script, but was written\n# from scratch.\n\nnl='\n'\nIFS=\" \"\"\t$nl\"\n\n# set DOITPROG to echo to test this script\n\n# Don't use :- since 4.3BSD and earlier shells don't like it.\ndoit=${DOITPROG-}\nif test -z \"$doit\"; then\n  doit_exec=exec\nelse\n  doit_exec=$doit\nfi\n\n# Put in absolute file names if you don't have them in your path;\n# or use environment vars.\n\nchgrpprog=${CHGRPPROG-chgrp}\nchmodprog=${CHMODPROG-chmod}\nchownprog=${CHOWNPROG-chown}\ncmpprog=${CMPPROG-cmp}\ncpprog=${CPPROG-cp}\nmkdirprog=${MKDIRPROG-mkdir}\nmvprog=${MVPROG-mv}\nrmprog=${RMPROG-rm}\nstripprog=${STRIPPROG-strip}\n\nposix_glob='?'\ninitialize_posix_glob='\n  test \"$posix_glob\" != \"?\" || {\n    if (set -f) 2>/dev/null; then\n      posix_glob=\n    else\n      posix_glob=:\n    fi\n  }\n'\n\nposix_mkdir=\n\n# Desired mode of installed file.\nmode=0755\n\nchgrpcmd=\nchmodcmd=$chmodprog\nchowncmd=\nmvcmd=$mvprog\nrmcmd=\"$rmprog -f\"\nstripcmd=\n\nsrc=\ndst=\ndir_arg=\ndst_arg=\n\ncopy_on_change=false\nno_target_directory=\n\nusage=\"\\\nUsage: $0 [OPTION]... [-T] SRCFILE DSTFILE\n   or: $0 [OPTION]... SRCFILES... DIRECTORY\n   or: $0 [OPTION]... -t DIRECTORY SRCFILES...\n   or: $0 [OPTION]... -d DIRECTORIES...\n\nIn the 1st form, copy SRCFILE to DSTFILE.\nIn the 2nd and 3rd, copy all SRCFILES to DIRECTORY.\nIn the 4th, create DIRECTORIES.\n\nOptions:\n     --help     display this help and exit.\n     --version  display version info and exit.\n\n  -c            (ignored)\n  -C            install only if different (preserve the last data modification time)\n  -d            create directories instead of installing files.\n  -g GROUP      $chgrpprog installed files to GROUP.\n  -m MODE       $chmodprog installed files to MODE.\n  -o USER       $chownprog installed files to USER.\n  -s            $stripprog installed files.\n  -t DIRECTORY  install into DIRECTORY.\n  -T            report an error if DSTFILE is a directory.\n\nEnvironment variables override the default commands:\n  CHGRPPROG CHMODPROG CHOWNPROG CMPPROG CPPROG MKDIRPROG MVPROG\n  RMPROG STRIPPROG\n\"\n\nwhile test $# -ne 0; do\n  case $1 in\n    -c) ;;\n\n    -C) copy_on_change=true;;\n\n    -d) dir_arg=true;;\n\n    -g) chgrpcmd=\"$chgrpprog $2\"\n\tshift;;\n\n    --help) echo \"$usage\"; exit $?;;\n\n    -m) mode=$2\n\tcase $mode in\n\t  *' '* | *'\t'* | *'\n'*\t  | *'*'* | *'?'* | *'['*)\n\t    echo \"$0: invalid mode: $mode\" >&2\n\t    exit 1;;\n\tesac\n\tshift;;\n\n    -o) chowncmd=\"$chownprog $2\"\n\tshift;;\n\n    -s) stripcmd=$stripprog;;\n\n    -t) dst_arg=$2\n\t# Protect names problematic for 'test' and other utilities.\n\tcase $dst_arg in\n\t  -* | [=\\(\\)!]) dst_arg=./$dst_arg;;\n\tesac\n\tshift;;\n\n    -T) no_target_directory=true;;\n\n    --version) echo \"$0 $scriptversion\"; exit $?;;\n\n    --)\tshift\n\tbreak;;\n\n    -*)\techo \"$0: invalid option: $1\" >&2\n\texit 1;;\n\n    *)  break;;\n  esac\n  shift\ndone\n\nif test $# -ne 0 && test -z \"$dir_arg$dst_arg\"; then\n  # When -d is used, all remaining arguments are directories to create.\n  # When -t is used, the destination is already specified.\n  # Otherwise, the last argument is the destination.  Remove it from $@.\n  for arg\n  do\n    if test -n \"$dst_arg\"; then\n      # $@ is not empty: it contains at least $arg.\n      set fnord \"$@\" \"$dst_arg\"\n      shift # fnord\n    fi\n    shift # arg\n    dst_arg=$arg\n    # Protect names problematic for 'test' and other utilities.\n    case $dst_arg in\n      -* | [=\\(\\)!]) dst_arg=./$dst_arg;;\n    esac\n  done\nfi\n\nif test $# -eq 0; then\n  if test -z \"$dir_arg\"; then\n    echo \"$0: no input file specified.\" >&2\n    exit 1\n  fi\n  # It's OK to call 'install-sh -d' without argument.\n  # This can happen when creating conditional directories.\n  exit 0\nfi\n\nif test -z \"$dir_arg\"; then\n  do_exit='(exit $ret); exit $ret'\n  trap \"ret=129; $do_exit\" 1\n  trap \"ret=130; $do_exit\" 2\n  trap \"ret=141; $do_exit\" 13\n  trap \"ret=143; $do_exit\" 15\n\n  # Set umask so as not to create temps with too-generous modes.\n  # However, 'strip' requires both read and write access to temps.\n  case $mode in\n    # Optimize common cases.\n    *644) cp_umask=133;;\n    *755) cp_umask=22;;\n\n    *[0-7])\n      if test -z \"$stripcmd\"; then\n\tu_plus_rw=\n      else\n\tu_plus_rw='% 200'\n      fi\n      cp_umask=`expr '(' 777 - $mode % 1000 ')' $u_plus_rw`;;\n    *)\n      if test -z \"$stripcmd\"; then\n\tu_plus_rw=\n      else\n\tu_plus_rw=,u+rw\n      fi\n      cp_umask=$mode$u_plus_rw;;\n  esac\nfi\n\nfor src\ndo\n  # Protect names problematic for 'test' and other utilities.\n  case $src in\n    -* | [=\\(\\)!]) src=./$src;;\n  esac\n\n  if test -n \"$dir_arg\"; then\n    dst=$src\n    dstdir=$dst\n    test -d \"$dstdir\"\n    dstdir_status=$?\n  else\n\n    # Waiting for this to be detected by the \"$cpprog $src $dsttmp\" command\n    # might cause directories to be created, which would be especially bad\n    # if $src (and thus $dsttmp) contains '*'.\n    if test ! -f \"$src\" && test ! -d \"$src\"; then\n      echo \"$0: $src does not exist.\" >&2\n      exit 1\n    fi\n\n    if test -z \"$dst_arg\"; then\n      echo \"$0: no destination specified.\" >&2\n      exit 1\n    fi\n    dst=$dst_arg\n\n    # If destination is a directory, append the input filename; won't work\n    # if double slashes aren't ignored.\n    if test -d \"$dst\"; then\n      if test -n \"$no_target_directory\"; then\n\techo \"$0: $dst_arg: Is a directory\" >&2\n\texit 1\n      fi\n      dstdir=$dst\n      dst=$dstdir/`basename \"$src\"`\n      dstdir_status=0\n    else\n      # Prefer dirname, but fall back on a substitute if dirname fails.\n      dstdir=`\n\t(dirname \"$dst\") 2>/dev/null ||\n\texpr X\"$dst\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t     X\"$dst\" : 'X\\(//\\)[^/]' \\| \\\n\t     X\"$dst\" : 'X\\(//\\)$' \\| \\\n\t     X\"$dst\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n\techo X\"$dst\" |\n\t    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t\t   s//\\1/\n\t\t   q\n\t\t }\n\t\t /^X\\(\\/\\/\\)[^/].*/{\n\t\t   s//\\1/\n\t\t   q\n\t\t }\n\t\t /^X\\(\\/\\/\\)$/{\n\t\t   s//\\1/\n\t\t   q\n\t\t }\n\t\t /^X\\(\\/\\).*/{\n\t\t   s//\\1/\n\t\t   q\n\t\t }\n\t\t s/.*/./; q'\n      `\n\n      test -d \"$dstdir\"\n      dstdir_status=$?\n    fi\n  fi\n\n  obsolete_mkdir_used=false\n\n  if test $dstdir_status != 0; then\n    case $posix_mkdir in\n      '')\n\t# Create intermediate dirs using mode 755 as modified by the umask.\n\t# This is like FreeBSD 'install' as of 1997-10-28.\n\tumask=`umask`\n\tcase $stripcmd.$umask in\n\t  # Optimize common cases.\n\t  *[2367][2367]) mkdir_umask=$umask;;\n\t  .*0[02][02] | .[02][02] | .[02]) mkdir_umask=22;;\n\n\t  *[0-7])\n\t    mkdir_umask=`expr $umask + 22 \\\n\t      - $umask % 100 % 40 + $umask % 20 \\\n\t      - $umask % 10 % 4 + $umask % 2\n\t    `;;\n\t  *) mkdir_umask=$umask,go-w;;\n\tesac\n\n\t# With -d, create the new directory with the user-specified mode.\n\t# Otherwise, rely on $mkdir_umask.\n\tif test -n \"$dir_arg\"; then\n\t  mkdir_mode=-m$mode\n\telse\n\t  mkdir_mode=\n\tfi\n\n\tposix_mkdir=false\n\tcase $umask in\n\t  *[123567][0-7][0-7])\n\t    # POSIX mkdir -p sets u+wx bits regardless of umask, which\n\t    # is incompatible with FreeBSD 'install' when (umask & 300) != 0.\n\t    ;;\n\t  *)\n\t    tmpdir=${TMPDIR-/tmp}/ins$RANDOM-$$\n\t    trap 'ret=$?; rmdir \"$tmpdir/d\" \"$tmpdir\" 2>/dev/null; exit $ret' 0\n\n\t    if (umask $mkdir_umask &&\n\t\texec $mkdirprog $mkdir_mode -p -- \"$tmpdir/d\") >/dev/null 2>&1\n\t    then\n\t      if test -z \"$dir_arg\" || {\n\t\t   # Check for POSIX incompatibilities with -m.\n\t\t   # HP-UX 11.23 and IRIX 6.5 mkdir -m -p sets group- or\n\t\t   # other-writable bit of parent directory when it shouldn't.\n\t\t   # FreeBSD 6.1 mkdir -m -p sets mode of existing directory.\n\t\t   ls_ld_tmpdir=`ls -ld \"$tmpdir\"`\n\t\t   case $ls_ld_tmpdir in\n\t\t     d????-?r-*) different_mode=700;;\n\t\t     d????-?--*) different_mode=755;;\n\t\t     *) false;;\n\t\t   esac &&\n\t\t   $mkdirprog -m$different_mode -p -- \"$tmpdir\" && {\n\t\t     ls_ld_tmpdir_1=`ls -ld \"$tmpdir\"`\n\t\t     test \"$ls_ld_tmpdir\" = \"$ls_ld_tmpdir_1\"\n\t\t   }\n\t\t }\n\t      then posix_mkdir=:\n\t      fi\n\t      rmdir \"$tmpdir/d\" \"$tmpdir\"\n\t    else\n\t      # Remove any dirs left behind by ancient mkdir implementations.\n\t      rmdir ./$mkdir_mode ./-p ./-- 2>/dev/null\n\t    fi\n\t    trap '' 0;;\n\tesac;;\n    esac\n\n    if\n      $posix_mkdir && (\n\tumask $mkdir_umask &&\n\t$doit_exec $mkdirprog $mkdir_mode -p -- \"$dstdir\"\n      )\n    then :\n    else\n\n      # The umask is ridiculous, or mkdir does not conform to POSIX,\n      # or it failed possibly due to a race condition.  Create the\n      # directory the slow way, step by step, checking for races as we go.\n\n      case $dstdir in\n\t/*) prefix='/';;\n\t[-=\\(\\)!]*) prefix='./';;\n\t*)  prefix='';;\n      esac\n\n      eval \"$initialize_posix_glob\"\n\n      oIFS=$IFS\n      IFS=/\n      $posix_glob set -f\n      set fnord $dstdir\n      shift\n      $posix_glob set +f\n      IFS=$oIFS\n\n      prefixes=\n\n      for d\n      do\n\ttest X\"$d\" = X && continue\n\n\tprefix=$prefix$d\n\tif test -d \"$prefix\"; then\n\t  prefixes=\n\telse\n\t  if $posix_mkdir; then\n\t    (umask=$mkdir_umask &&\n\t     $doit_exec $mkdirprog $mkdir_mode -p -- \"$dstdir\") && break\n\t    # Don't fail if two instances are running concurrently.\n\t    test -d \"$prefix\" || exit 1\n\t  else\n\t    case $prefix in\n\t      *\\'*) qprefix=`echo \"$prefix\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"`;;\n\t      *) qprefix=$prefix;;\n\t    esac\n\t    prefixes=\"$prefixes '$qprefix'\"\n\t  fi\n\tfi\n\tprefix=$prefix/\n      done\n\n      if test -n \"$prefixes\"; then\n\t# Don't fail if two instances are running concurrently.\n\t(umask $mkdir_umask &&\n\t eval \"\\$doit_exec \\$mkdirprog $prefixes\") ||\n\t  test -d \"$dstdir\" || exit 1\n\tobsolete_mkdir_used=true\n      fi\n    fi\n  fi\n\n  if test -n \"$dir_arg\"; then\n    { test -z \"$chowncmd\" || $doit $chowncmd \"$dst\"; } &&\n    { test -z \"$chgrpcmd\" || $doit $chgrpcmd \"$dst\"; } &&\n    { test \"$obsolete_mkdir_used$chowncmd$chgrpcmd\" = false ||\n      test -z \"$chmodcmd\" || $doit $chmodcmd $mode \"$dst\"; } || exit 1\n  else\n\n    # Make a couple of temp file names in the proper directory.\n    dsttmp=$dstdir/_inst.$$_\n    rmtmp=$dstdir/_rm.$$_\n\n    # Trap to clean up those temp files at exit.\n    trap 'ret=$?; rm -f \"$dsttmp\" \"$rmtmp\" && exit $ret' 0\n\n    # Copy the file name to the temp name.\n    (umask $cp_umask && $doit_exec $cpprog \"$src\" \"$dsttmp\") &&\n\n    # and set any options; do chmod last to preserve setuid bits.\n    #\n    # If any of these fail, we abort the whole thing.  If we want to\n    # ignore errors from any of these, just make sure not to ignore\n    # errors from the above \"$doit $cpprog $src $dsttmp\" command.\n    #\n    { test -z \"$chowncmd\" || $doit $chowncmd \"$dsttmp\"; } &&\n    { test -z \"$chgrpcmd\" || $doit $chgrpcmd \"$dsttmp\"; } &&\n    { test -z \"$stripcmd\" || $doit $stripcmd \"$dsttmp\"; } &&\n    { test -z \"$chmodcmd\" || $doit $chmodcmd $mode \"$dsttmp\"; } &&\n\n    # If -C, don't bother to copy if it wouldn't change the file.\n    if $copy_on_change &&\n       old=`LC_ALL=C ls -dlL \"$dst\"\t2>/dev/null` &&\n       new=`LC_ALL=C ls -dlL \"$dsttmp\"\t2>/dev/null` &&\n\n       eval \"$initialize_posix_glob\" &&\n       $posix_glob set -f &&\n       set X $old && old=:$2:$4:$5:$6 &&\n       set X $new && new=:$2:$4:$5:$6 &&\n       $posix_glob set +f &&\n\n       test \"$old\" = \"$new\" &&\n       $cmpprog \"$dst\" \"$dsttmp\" >/dev/null 2>&1\n    then\n      rm -f \"$dsttmp\"\n    else\n      # Rename the file to the real destination.\n      $doit $mvcmd -f \"$dsttmp\" \"$dst\" 2>/dev/null ||\n\n      # The rename failed, perhaps because mv can't rename something else\n      # to itself, or perhaps because mv is so ancient that it does not\n      # support -f.\n      {\n\t# Now remove or move aside any old file at destination location.\n\t# We try this two ways since rm can't unlink itself on some\n\t# systems and the destination file might be busy for other\n\t# reasons.  In this case, the final cleanup might fail but the new\n\t# file should still install successfully.\n\t{\n\t  test ! -f \"$dst\" ||\n\t  $doit $rmcmd -f \"$dst\" 2>/dev/null ||\n\t  { $doit $mvcmd -f \"$dst\" \"$rmtmp\" 2>/dev/null &&\n\t    { $doit $rmcmd -f \"$rmtmp\" 2>/dev/null; :; }\n\t  } ||\n\t  { echo \"$0: cannot unlink or rename $dst\" >&2\n\t    (exit 1); exit 1\n\t  }\n\t} &&\n\n\t# Now rename the file to the real destination.\n\t$doit $mvcmd \"$dsttmp\" \"$dst\"\n      }\n    fi || exit 1\n\n    trap '' 0\n  fi\ndone\n\n# Local variables:\n# eval: (add-hook 'write-file-hooks 'time-stamp)\n# time-stamp-start: \"scriptversion=\"\n# time-stamp-format: \"%:y-%02m-%02d.%02H\"\n# time-stamp-time-zone: \"UTC\"\n# time-stamp-end: \"; # UTC\"\n# End:\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "logos",
          "type": "tree",
          "content": null
        },
        {
          "name": "makelib",
          "type": "tree",
          "content": null
        },
        {
          "name": "networking",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "rkt",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "stage0",
          "type": "tree",
          "content": null
        },
        {
          "name": "stage1",
          "type": "tree",
          "content": null
        },
        {
          "name": "stage1_fly",
          "type": "tree",
          "content": null
        },
        {
          "name": "store",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        },
        {
          "name": "version",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}