{
  "metadata": {
    "timestamp": 1736567423039,
    "page": 28,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "noisetorch/NoiseTorch",
      "stars": 9446,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.283203125,
          "content": "# EditorConfig is awesome: https://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n# Unix-style newlines with a newline ending every file\n[*]\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\ncharset = utf-8\n\n[{*.go,Makefile}]\nindent_style = tab\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0615234375,
          "content": "bin/\nlicenses.go\n.vscode\n*.sublime-workspace\n*.sublime-project\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.17578125,
          "content": "[submodule \"c/rnnoise\"]\n\tpath = c/rnnoise\n\turl = https://github.com/noisetorch/rnnoise\n[submodule \"c/c-ringbuf\"]\n\tpath = c/c-ringbuf\n\turl = https://github.com/noisetorch/c-ringbuf\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 35.2421875,
          "content": "NoiseTorch (c) 2020-2021 lawl (github.com/lawl)\nNoiseTorch-ng (c) 2022 NoiseTorch Community (https://github.com/noisetorch)\n\nThis software is distributed under the GNU General Public License Version 3 (\"GPLv3\").\n\nIn accordance with Section 7, subsection `c` of the GPLv3 the following additional term(s) apply:\n\n  * Conveying modified versions of the program \"NoiseTorch\" must be marked as modified in a reasonable way.\n    Modified versions may not be conveyed to others under the name \"NoiseTorch\".\n    Package names, source code, user interfaces and other visible appearances of the program name should make it obvious for users\n    and potential users that the modified version differs from the original version of NoiseTorch it is based upon.\n\n  * The above term does not apply to this program's name (\"NoiseTorch-ng\") as it is a different name.\n    You may convey modified versions of this program under the name \"NoiseTorch-ng\".\n\n\n\n                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.25390625,
          "content": "NAME_SUFFIX=\nUPDATE_URL=https://github.com/noisetorch/NoiseTorch/releases/download/\nWEBSITE_URL=https://github.com/noisetorch/NoiseTorch\n\nUPDATE_PUBKEY=Md2rdsS+b6W0trgcqa5lAWP978Zj0sFmubJ252OPKwc=\nVERSION := $(shell git describe --tags)\n\ndev: rnnoise\n\tmkdir -p bin/\n\tgo generate\n\tgo build -ldflags '-X main.nameSuffix=${NAME_SUFFIX}_(dev) -X main.version=${VERSION} -X main.websiteURL=${WEBSITE_URL}' -o bin/noisetorch\nrelease: rnnoise\n\tmkdir -p bin/\n\tmkdir -p tmp/\n\n\tmkdir -p tmp/.local/share/icons/hicolor/256x256/apps/\n\tcp assets/icon/noisetorch.png tmp/.local/share/icons/hicolor/256x256/apps/\n\n\tmkdir -p tmp/.local/share/applications/\n\tcp assets/noisetorch.desktop tmp/.local/share/applications/\n\n\tmkdir -p tmp/.local/bin/\n\tgo generate\n\tCGO_ENABLED=0 GOOS=linux go build -trimpath -tags release -a -ldflags '-s -w -extldflags \"-static\" -X main.nameSuffix=${NAME_SUFFIX} -X main.version=${VERSION} -X main.distribution=official -X main.updateURL=${UPDATE_URL} -X main.publicKeyString=${UPDATE_PUBKEY} -X main.websiteURL=${WEBSITE_URL}' .\n\tmv noisetorch tmp/.local/bin/\n\tcd tmp/; \\\n\ttar cvzf ../bin/NoiseTorch_x64_${VERSION}.tgz .\n\trm -rf tmp/\n\tgo run scripts/signer.go -s -f bin/NoiseTorch_x64_${VERSION}.tgz\nrnnoise:\n\tgit submodule update --init --recursive\n\t$(MAKE) -C c/ladspa\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.2109375,
          "content": "<h1 align=\"center\"> NoiseTorch-ng</h1>\n<h3 align=\"center\"> Noise Supression Application for PulseAudio or Pipewire</h3>\n<p align=\"center\"><img src=\"https://raw.githubusercontent.com/noisetorch/NoiseTorch/master/assets/icon/noisetorch.png\" width=\"100\" height=\"100\"></p> \n\n\n<div align=\"center\">\n    \n  <a href=\"\">[![Licence][licence]][licence-url]</a>\n  <a href=\"\">[![Latest][version]][version-url]</a>\n    \n</div>\n\n[licence]: https://img.shields.io/badge/License-GPLv3-blue.svg\n[licence-url]: https://www.gnu.org/licenses/gpl-3.0\n[version]: https://img.shields.io/github/v/release/noisetorch/NoiseTorch?label=Latest&style=flat\n[version-url]: https://github.com/noisetorch/NoiseTorch/releases\n[stars-shield]: https://img.shields.io/github/stars/noisetorch/NoiseTorch?maxAge=2592000\n[stars-url]: https://github.com/noisetorch/NoiseTorch/stargazers/\n\nNoiseTorch-ng is an easy to use open source application for Linux with PulseAudio or PipeWire. It creates a virtual microphone that suppresses noise in any application using [RNNoise](https://github.com/xiph/rnnoise). Use whichever conferencing or VOIP application you like and simply select the filtered Virtual Microphone as input to torch the sound of your mechanical keyboard, computer fans, trains and the likes.\n\nDon't forget to leave a star ⭐ if this sounds useful to you! \n\n## Regarding the recent security incident\n\nDue to a suspected security breach of the update server and code repository, there's\n been a concerted effort by the NoiseTorch community to ensure the source code and\n binaries are free from malicious code.\n \n > No malicious code has been found.\n \n You can read more about the audit that was done [here](https://github.com/noisetorch/NoiseTorch/discussions/275)\n and [here](https://github.com/noisetorch/NoiseTorch/discussions/264).\n Updates will now be retrieved from the project's releases page to avoid any risk\n of this reoccurring. We thank everyone for their trust and the love that they've\n shown towards the project in this unpleasant time. \n\n## Screenshot\n\n![](https://i.imgur.com/T2wH0bl.png)\n\nThen simply select \"Filtered\" as your microphone in any application. OBS, Mumble, Discord, anywhere.\n\n![](https://i.imgur.com/nimi7Ne.png)\n\n## Demo\n\nLinux For Everyone has a good demo video [here](https://www.youtube.com/watch?v=DzN9rYNeeIU).\n\n## Features\n* Two click setup of your virtual denoising microphone\n* A single, small, statically linked, self-contained binary\n\n## Download & Install\n\n[Download the latest release from GitHub](https://github.com/noisetorch/NoiseTorch/releases).\n\nUnpack the `tgz` file, into your home directory.\n\n    tar -C $HOME -h -xzf NoiseTorch_x64_v0.12.2.tgz\n\nThis will unpack the application, icon and desktop entry to the correct place.  \nDepending on your desktop environment you may need to wait for it to rescan for applications, or tell it to do a refresh now.\n\nWith gnome this can be done with:\n\n    gtk-update-icon-cache\n\nYou now have a `noisetorch` binary and desktop entry on your system.\n\nGive it the required permissions with `setcap`:\n\n    sudo setcap 'CAP_SYS_RESOURCE=+ep' ~/.local/bin/noisetorch\n\nIf NoiseTorch-ng doesn't start after installation, you may also have to make sure that `~/.local/bin` is in your PATH. On most distributions e.g. Ubuntu, this should be the case by default. If it's not, make sure to append\n\n```\nif [ -d \"$HOME/.local/bin\" ] ; then\n    PATH=\"$HOME/.local/bin:$PATH\"\nfi\n```\n\nto your `~/.profile`. If you do already have that, you may have to log in and out for it to actually apply if this is the first time you're using `~/.local/bin`.\n\n#### Uninstall\n\n    rm ~/.local/bin/noisetorch\n    rm ~/.local/share/applications/noisetorch.desktop\n    rm ~/.local/share/icons/hicolor/256x256/apps/noisetorch.png \n\n## Troubleshooting\n\nPlease see the [Troubleshooting](https://github.com/noisetorch/NoiseTorch/wiki/Troubleshooting) section in the wiki.\n\n## Usage\n\nSelect the microphone you want to denoise, and click \"Load\", NoiseTorch-ng will create a virtual microphone called \"Filtered Microphone\" that you can select in any application. Output filtering works the same way, simply output the applications you want to filter to \"Filtered Headphones\".\n\nWhen you're done using it, simply click \"Unload\" to remove it again, until you need it next time.\n\nThe slider \"Voice Activation Threshold\" under settings, allows you to choose how strict NoiseTorch-ng should be in only allowing your microphone to send sounds when it detects voice.. Generally you want this up as high as possible. With a decent microphone, you can turn this to the maximum of 95%. If you cut out during talking, slowly lower this strictness until you find a value that works for you.\n\nIf you set this to 0%, NoiseTorch-ng will still dampen noise, but not deactivate your microphone if it doesn't detect voice.\n\nPlease keep in mind that you will need to reload NoiseTorch-ng for these changes to apply.\n\nOnce NoiseTorch-ng has been loaded, feel free to close the window, the virtual microphone will continue working until you explicitly unload it. The NoiseTorch-ng process is not required anymore once it has been loaded.\n\n## FAQs\n\n### Latency\n\nNoiseTorch-ng may introduce a small amount of latency for microphone filtering. The amount of inherent latency introduced by noise supression is 10ms, this is very low and should not be a problem. Additionally PulseAudio currently introduces a variable amount of latency that depends on your system. Lowering this latency [requires a change in PulseAudio](https://gitlab.freedesktop.org/pulseaudio/pulseaudio/-/issues/120).\n\nOutput filtering currently introduces something on the order of ~100ms with pulseaudio. This should still be fine for regular conferences, VOIPing and gaming. Maybe not for competitive gaming teams.\n\n### Alternatives\n\n- [noise-suppression-for-voice](https://github.com/werman/noise-suppression-for-voice): Denoising software which uses rnnoise. More complex to configure but offers more options. Requires more use of the terminal.\n\n- [Easy Effects](https://github.com/wwmm/easyeffects): Package which offers a large number of different audio effects such as echo cancellation or noise removal. More complex to configure and only supports PipeWire. Denoising uses rnnoise.\n\n## Building from source\n\nInstall the Go compiler from [golang.org](https://golang.org/). And make sure you have a working C++ compiler.\n\n```shell\n git clone https://github.com/noisetorch/NoiseTorch # Clone the repository\n cd NoiseTorch # cd into the cloned repository\n make # build it\n```\n\nTo install it:\n\n```shell\nmkdir -p  ~/.local/bin\ncp ./bin/noisetorch ~/.local/bin/\ncp ./assets/noisetorch.desktop ~/.local/share/applications\ncp ./assets/icon/noisetorch.png ~/.local/share/icons/hicolor/256x256/apps\n```\n\n## Special thanks to\n\n* [@lawl](https://github.com/lawl) Creator of NoiseTorch\n* [xiph.org](https://xiph.org)/[Mozilla's](https://mozilla.org) excellent [RNNoise](https://jmvalin.ca/demo/rnnoise/).\n* [@werman](https://github.com/werman/)'s [noise-suppression-for-voice](https://github.com/werman/noise-suppression-for-voice/) for the inspiration\n* [@aarzilli](https://github.com/aarzilli/)'s [nucular](https://github.com/aarzilli/nucular) GUI toolkit for Go.\n* [Sallee Design](https://www.salleedesign.com) (info@salleedesign.com)'s Microphone Icon under [CC BY 4.0](https://creativecommons.org/licenses/by/4.0/)\n\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "c",
          "type": "tree",
          "content": null
        },
        {
          "name": "capability.go",
          "type": "blob",
          "size": 1.7216796875,
          "content": "// This file is part of the program \"NoiseTorch-ng\".\n// Please see the LICENSE file for copyright information.\n\npackage main\n\nimport (\n\t\"log\"\n\t\"os\"\n\t\"os/exec\"\n\n\t\"github.com/syndtr/gocapability/capability\"\n)\n\nfunc getCurrentCaps() *capability.Capabilities {\n\tcaps, err := capability.NewPid2(0)\n\tif err != nil {\n\t\tlog.Fatalf(\"Could not get self caps: %+v\\n\", err)\n\t}\n\n\terr = caps.Load()\n\tif err != nil {\n\t\tlog.Fatalf(\"Could not load self caps: %+v\\n\", err)\n\t}\n\n\treturn &caps\n}\n\nfunc getSelfFileCaps() *capability.Capabilities {\n\tself, err := os.Executable()\n\tlog.Printf(\"Getting caps for: %s\\n\", self)\n\tif err != nil {\n\t\tlog.Fatalf(\"Could not get path to own executable: %+v\\n\", err)\n\t}\n\tcaps, err := capability.NewFile2(self)\n\tif err != nil {\n\t\tlog.Fatalf(\"Could not get file caps: %+v\\n\", err)\n\t}\n\n\terr = caps.Load()\n\tif err != nil {\n\t\tlog.Fatalf(\"Could not load file caps: %+v\\n\", err)\n\t}\n\n\treturn &caps\n}\n\nfunc hasCapSysResource(caps *capability.Capabilities) bool {\n\treturn (*caps).Get(capability.EFFECTIVE, capability.CAP_SYS_RESOURCE)\n}\n\nfunc makeBinarySetcapped() error {\n\tfileCaps := *getSelfFileCaps()\n\tif !hasCapSysResource(&fileCaps) {\n\t\tfileCaps.Set(capability.EFFECTIVE|capability.PERMITTED|capability.INHERITABLE, capability.CAP_SYS_RESOURCE)\n\t\terr := fileCaps.Apply(capability.EFFECTIVE | capability.PERMITTED | capability.INHERITABLE)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc pkexecSetcapSelf() error {\n\tself, err := os.Executable()\n\tif err != nil {\n\t\tlog.Fatalf(\"Couldn't find path to own binary\\n\")\n\t\treturn err\n\t}\n\n\tcmd := exec.Command(\"pkexec\", self, \"-setcap\")\n\tlog.Printf(\"Calling: %s\\n\", cmd.String())\n\terr = cmd.Run()\n\tif err != nil {\n\t\tlog.Printf(\"Couldn't setcap self as root: %v\\n\", err)\n\t\treturn err\n\t}\n\n\treturn nil\n}\n"
        },
        {
          "name": "cli.go",
          "type": "blob",
          "size": 4.7978515625,
          "content": "// This file is part of the program \"NoiseTorch-ng\".\n// Please see the LICENSE file for copyright information.\n\npackage main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"os\"\n\t\"strings\"\n\n\t\"github.com/blang/semver/v4\"\n\t\"github.com/noisetorch/pulseaudio\"\n)\n\ntype CLIOpts struct {\n\tdoLog       bool\n\tsetcap      bool\n\tsinkName    string\n\tunload      bool\n\tloadInput   bool\n\tloadOutput  bool\n\tthreshold   int\n\tlist        bool\n\tcheckUpdate bool\n}\n\nfunc parseCLIOpts() CLIOpts {\n\tvar opt CLIOpts\n\tflag.BoolVar(&opt.doLog, \"log\", false, \"Print debugging output to stdout\")\n\tflag.BoolVar(&opt.setcap, \"setcap\", false, \"for internal use only\")\n\tflag.StringVar(&opt.sinkName, \"s\", \"\", \"Use the specified source/sink device ID\")\n\tflag.BoolVar(&opt.loadInput, \"i\", false, \"Load supressor for input. If no source device ID is specified the default pulse audio source is used.\")\n\tflag.BoolVar(&opt.loadOutput, \"o\", false, \"Load supressor for output. If no source device ID is specified the default pulse audio source is used.\")\n\tflag.BoolVar(&opt.unload, \"u\", false, \"Unload supressor\")\n\tflag.IntVar(&opt.threshold, \"t\", -1, \"Voice activation threshold\")\n\tflag.BoolVar(&opt.list, \"l\", false, \"List available PulseAudio devices\")\n\tflag.BoolVar(&opt.checkUpdate, \"c\", false, \"Check if update is available (but do not update)\")\n\tflag.Parse()\n\n\treturn opt\n}\n\nfunc doCLI(opt CLIOpts, config *config, librnnoise string) {\n\tif opt.checkUpdate {\n\t\tlatestRelease, err := getLatestRelease()\n\t\tif err == nil {\n\t\t\tlatestVersion, _ := semver.Make(strings.TrimLeft(latestRelease, \"v\"))\n\t\t\tcurrentVersion, _ := semver.Make(strings.TrimLeft(version, \"v\"))\n\t\t\tif currentVersion.Compare(latestVersion) == -1 {\n\t\t\t\tfmt.Println(\"New version available: \" + latestRelease)\n\t\t\t} else {\n\t\t\t\tfmt.Println(\"No update available\")\n\t\t\t}\n\t\t} else {\n\t\t\tfmt.Println(\"Cannot look for updates right now.\")\n\t\t}\n\t\tcleanupExit(librnnoise, 0)\n\t}\n\n\tif opt.setcap {\n\t\terr := makeBinarySetcapped()\n\t\tif err != nil {\n\t\t\tcleanupExit(librnnoise, 1)\n\t\t}\n\t\tcleanupExit(librnnoise, 0)\n\t}\n\n\tpaClient, err := pulseaudio.NewClient()\n\tif err != nil {\n\t\tfmt.Fprintf(os.Stderr, \"Couldn't create pulseaudio client: %v\\n\", err)\n\t\tcleanupExit(librnnoise, 1)\n\t}\n\tdefer paClient.Close()\n\n\tctx := ntcontext{}\n\n\tinfo, err := serverInfo(paClient)\n\tif err != nil {\n\t\tfmt.Fprintf(os.Stderr, \"Couldn't fetch audio server info: %s\\n\", err)\n\t}\n\tctx.serverInfo = info\n\n\tctx.config = config\n\tctx.librnnoise = librnnoise\n\n\tctx.paClient = paClient\n\n\tif opt.list {\n\t\tfmt.Println(\"Sources:\")\n\t\tsources := getSources(&ctx, paClient)\n\t\tfor i := range sources {\n\t\t\tfmt.Printf(\"\\tDevice Name: %s\\n\\tDevice ID: %s\\n\\n\", sources[i].Name, sources[i].ID)\n\t\t}\n\n\t\tfmt.Println(\"Sinks:\")\n\t\tsinks := getSinks(&ctx, paClient)\n\t\tfor i := range sinks {\n\t\t\tfmt.Printf(\"\\tDevice Name: %s\\n\\tDevice ID: %s\\n\\n\", sinks[i].Name, sinks[i].ID)\n\t\t}\n\n\t\tcleanupExit(librnnoise, 0)\n\t}\n\n\tif opt.threshold > 0 {\n\t\tif opt.threshold > 95 {\n\t\t\tfmt.Fprintf(os.Stderr, \"Threshold of '%d' too high, setting to maximum of 95.\\n\", opt.threshold)\n\t\t\tctx.config.Threshold = 95\n\t\t} else {\n\t\t\tctx.config.Threshold = opt.threshold\n\t\t}\n\t}\n\n\tif opt.unload {\n\t\terr := unloadSupressor(&ctx)\n\t\tif err != nil {\n\t\t\tfmt.Fprintf(os.Stderr, \"Error unloading PulseAudio Module: %+v\\n\", err)\n\t\t\tcleanupExit(librnnoise, 1)\n\t\t}\n\t\tcleanupExit(librnnoise, 0)\n\t}\n\n\tif opt.loadInput {\n\t\tsources := getSources(&ctx, paClient)\n\n\t\tif opt.sinkName == \"\" {\n\t\t\tdefaultSource, err := getDefaultSourceID(paClient)\n\t\t\tif err != nil {\n\t\t\t\tfmt.Fprintf(os.Stderr, \"No source specified to load and failed to load default source: %+v\\n\", err)\n\t\t\t\tcleanupExit(librnnoise, 1)\n\t\t\t}\n\t\t\topt.sinkName = defaultSource\n\t\t}\n\t\tfor i := range sources {\n\t\t\tif sources[i].ID == opt.sinkName {\n\t\t\t\tsources[i].checked = true\n\t\t\t\terr := loadSupressor(&ctx, &sources[i], &device{})\n\t\t\t\tif err != nil {\n\t\t\t\t\tfmt.Fprintf(os.Stderr, \"Error loading PulseAudio Module: %+v\\n\", err)\n\t\t\t\t\tcleanupExit(librnnoise, 1)\n\t\t\t\t}\n\t\t\t\tcleanupExit(librnnoise, 0)\n\t\t\t}\n\t\t}\n\t\tfmt.Fprintf(os.Stderr, \"PulseAudio source not found: %s\\n\", opt.sinkName)\n\t\tcleanupExit(librnnoise, 1)\n\n\t}\n\tif opt.loadOutput {\n\t\tsinks := getSinks(&ctx, paClient)\n\n\t\tif opt.sinkName == \"\" {\n\t\t\tdefaultSink, err := getDefaultSinkID(paClient)\n\t\t\tif err != nil {\n\t\t\t\tfmt.Fprintf(os.Stderr, \"No sink specified to load and failed to load default sink: %+v\\n\", err)\n\t\t\t\tcleanupExit(librnnoise, 1)\n\t\t\t}\n\t\t\topt.sinkName = defaultSink\n\t\t}\n\t\tfor i := range sinks {\n\t\t\tif sinks[i].ID == opt.sinkName {\n\t\t\t\tsinks[i].checked = true\n\t\t\t\terr := loadSupressor(&ctx, &device{}, &sinks[i])\n\t\t\t\tif err != nil {\n\t\t\t\t\tfmt.Fprintf(os.Stderr, \"Error loading PulseAudio Module: %+v\\n\", err)\n\t\t\t\t\tcleanupExit(librnnoise, 1)\n\t\t\t\t}\n\t\t\t\tcleanupExit(librnnoise, 0)\n\t\t\t}\n\t\t}\n\t\tfmt.Fprintf(os.Stderr, \"PulseAudio sink not found: %s\\n\", opt.sinkName)\n\t\tcleanupExit(librnnoise, 1)\n\n\t}\n\n}\n\nfunc cleanupExit(librnnoise string, exitCode int) {\n\tremoveLib(librnnoise)\n\tos.Exit(exitCode)\n}\n"
        },
        {
          "name": "config.go",
          "type": "blob",
          "size": 2.6201171875,
          "content": "// This file is part of the program \"NoiseTorch-ng\".\n// Please see the LICENSE file for copyright information.\n\npackage main\n\nimport (\n\t\"bytes\"\n\t\"log\"\n\t\"os\"\n\t\"path/filepath\"\n\n\t\"github.com/BurntSushi/toml\"\n)\n\ntype config struct {\n\tThreshold             int\n\tDisplayMonitorSources bool\n\tEnableUpdates         bool\n\tFilterInput           bool\n\tFilterOutput          bool\n\tLastUsedInput         string\n\tLastUsedOutput        string\n}\n\nconst configFile = \"config.toml\"\n\nfunc initializeConfigIfNot() {\n\tlog.Println(\"Checking if config needs to be initialized\")\n\n\t// if you're a package maintainer and you mess with this, we have a problem.\n\t// Unless you set -tags release on the build the updater is *not* compiled in anymore. DO NOT MESS WITH THIS!\n\t// This isn't and never was the proper location to disable the updater.\n\tconf := config{\n\t\tThreshold:             95,\n\t\tDisplayMonitorSources: false,\n\t\tEnableUpdates:         true,\n\t\tFilterInput:           true,\n\t\tFilterOutput:          false,\n\t\tLastUsedInput:         \"\",\n\t\tLastUsedOutput:        \"\"}\n\n\tconfigdir := configDir()\n\tok, err := exists(configdir)\n\tif err != nil {\n\t\tlog.Fatalf(\"Couldn't check if config directory exists: %v\\n\", err)\n\t}\n\tif !ok {\n\t\terr = os.MkdirAll(configdir, 0700)\n\t\tif err != nil {\n\t\t\tlog.Fatalf(\"Couldn't create config directory: %v\\n\", err)\n\t\t}\n\t}\n\ttomlfile := filepath.Join(configdir, configFile)\n\tok, err = exists(tomlfile)\n\tif err != nil {\n\t\tlog.Fatalf(\"Couldn't check if config file exists: %v\\n\", err)\n\t}\n\tif !ok {\n\t\tlog.Println(\"Initializing config\")\n\t\twriteConfig(&conf)\n\t}\n}\n\nfunc readConfig() *config {\n\tf := filepath.Join(configDir(), configFile)\n\tconfig := config{}\n\tif _, err := toml.DecodeFile(f, &config); err != nil {\n\t\tlog.Fatalf(\"Couldn't read config file: %v\\n\", err)\n\t}\n\n\treturn &config\n}\n\nfunc writeConfig(conf *config) {\n\tf := filepath.Join(configDir(), configFile)\n\tvar buffer bytes.Buffer\n\tif err := toml.NewEncoder(&buffer).Encode(&conf); err != nil {\n\t\tlog.Fatalf(\"Couldn't write config file: %v\\n\", err)\n\t}\n\tos.WriteFile(f, buffer.Bytes(), 0644)\n}\n\nfunc configDir() string {\n\treturn filepath.Join(xdgOrFallback(\"XDG_CONFIG_HOME\", filepath.Join(os.Getenv(\"HOME\"), \".config\")), \"noisetorch\")\n}\n\nfunc exists(path string) (bool, error) {\n\t_, err := os.Stat(path)\n\tif err == nil {\n\t\treturn true, nil\n\t}\n\tif os.IsNotExist(err) {\n\t\treturn false, nil\n\t}\n\treturn false, err\n}\n\nfunc xdgOrFallback(xdg string, fallback string) string {\n\tdir := os.Getenv(xdg)\n\tif dir != \"\" {\n\t\tif ok, err := exists(dir); ok && err == nil {\n\t\t\tlog.Printf(\"Resolved $%s to '%s'\\n\", xdg, dir)\n\t\t\treturn dir\n\t\t}\n\n\t}\n\n\tlog.Printf(\"Couldn't resolve $%s falling back to '%s'\\n\", xdg, fallback)\n\treturn fallback\n}\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.89453125,
          "content": "module noisetorch\n\ngo 1.16\n\nrequire (\n\tgioui.org v0.0.0-20220105104929-8d8aeef66bef // indirect\n\tgithub.com/BurntSushi/toml v1.3.2\n\tgithub.com/BurntSushi/xgb v0.0.0-20210121224620-deaf085860bc // indirect\n\tgithub.com/BurntSushi/xgbutil v0.0.0-20190907113008-ad855c713046\n\tgithub.com/aarzilli/nucular v0.0.0-20210408133902-d3dd7b05a80a\n\tgithub.com/blang/semver/v4 v4.0.0\n\tgithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20211213063430-748e38ca8aec // indirect\n\tgithub.com/golang/freetype v0.0.0-20170609003504-e2365dfdc4a0 // indirect\n\tgithub.com/hashicorp/golang-lru v0.5.4 // indirect\n\tgithub.com/noisetorch/pulseaudio v0.0.0-20220603053345-9303200c3861\n\tgithub.com/syndtr/gocapability v0.0.0-20200815063812-42c35b437635\n\tgolang.org/x/crypto v0.14.0\n\tgolang.org/x/exp v0.0.0-20220104160115-025e73f80486 // indirect\n\tgolang.org/x/image v0.5.0 // indirect\n\tgolang.org/x/mobile v0.0.0-20220104184238-4a8be17bd2e3 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 47.8056640625,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ndmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\ndmitri.shuralyov.com/gpu/mtl v0.0.0-20201218220906-28db891af037 h1:+PdD6GLKejR9DizMAKT5DpSAkKswvZrurk1/eEt9+pw=\ndmitri.shuralyov.com/gpu/mtl v0.0.0-20201218220906-28db891af037/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\ngioui.org v0.0.0-20210407072325-abd6e8f9cdd4/go.mod h1:RSH6KIUZ0p2xy5zHDxgAM4zumjgTw83q2ge/PI+yyw8=\ngioui.org v0.0.0-20220105104929-8d8aeef66bef h1:vjBKFl76dewHkdOnlEt09daV4/E/oHHnMA4rV7eGH+E=\ngioui.org v0.0.0-20220105104929-8d8aeef66bef/go.mod h1:yoWOxPng6WkDpsud+NRmkoftmyWn3rkKsYGEcWHpjTI=\ngioui.org/cpu v0.0.0-20210808092351-bfe733dd3334/go.mod h1:A8M0Cn5o+vY5LTMlnRoK3O5kG+rH0kWfJjeKd9QpBmQ=\ngioui.org/cpu v0.0.0-20210817075930-8d6a761490d2 h1:AGDDxsJE1RpcXTAxPG2B4jrwVUJGFDjINIPi1jtO6pc=\ngioui.org/cpu v0.0.0-20210817075930-8d6a761490d2/go.mod h1:A8M0Cn5o+vY5LTMlnRoK3O5kG+rH0kWfJjeKd9QpBmQ=\ngioui.org/shader v1.0.6 h1:cvZmU+eODFR2545X+/8XucgZdTtEjR3QWW6W65b0q5Y=\ngioui.org/shader v1.0.6/go.mod h1:mWdiME581d/kV7/iEhLmUgUK5iZ09XR5XpduXzbePVM=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/toml v1.3.2 h1:o7IhLm0Msx3BaB+n3Ag7L8EVlByGnpq14C4YWiu/gL8=\ngithub.com/BurntSushi/toml v1.3.2/go.mod h1:CxXYINrC8qIiEnFrOxCa7Jy5BFHlXnUU2pbicEuybxQ=\ngithub.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\ngithub.com/BurntSushi/xgb v0.0.0-20210121224620-deaf085860bc h1:7D+Bh06CRPCJO3gr2F7h1sriovOZ8BMhca2Rg85c2nk=\ngithub.com/BurntSushi/xgb v0.0.0-20210121224620-deaf085860bc/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\ngithub.com/BurntSushi/xgbutil v0.0.0-20190907113008-ad855c713046 h1:O/r2Sj+8QcMF7V5IcmiE2sMFV2q3J47BEirxbXJAdzA=\ngithub.com/BurntSushi/xgbutil v0.0.0-20190907113008-ad855c713046/go.mod h1:uw9h2sd4WWHOPdJ13MQpwK5qYWKYDumDqxWWIknEQ+k=\ngithub.com/Knetic/govaluate v3.0.1-0.20171022003610-9aa49832a739+incompatible/go.mod h1:r7JcOSlj0wfOMncg0iLm8Leh48TZaKVeNIfJntJ2wa0=\ngithub.com/Shopify/sarama v1.19.0/go.mod h1:FVkBWblsNy7DGZRfXLU0O9RCGt5g3g3yEuWXgklEdEo=\ngithub.com/Shopify/toxiproxy v2.1.4+incompatible/go.mod h1:OXgGpZ6Cli1/URJOF1DMxUHB2q5Ap20/P/eIdh4G0pI=\ngithub.com/VividCortex/gohistogram v1.0.0/go.mod h1:Pf5mBqqDxYaXu3hDrrU+w6nw50o/4+TcAqDqk/vUH7g=\ngithub.com/aarzilli/nucular v0.0.0-20210408133902-d3dd7b05a80a h1:wHqsWSIZY+TaNApVMZpMKkcBEUmxXCSpT+YKrk3bxnc=\ngithub.com/aarzilli/nucular v0.0.0-20210408133902-d3dd7b05a80a/go.mod h1:lluRCgvXjI+vUUV2Jc07GMFCBLVc/GQx8NaUPgXY+R0=\ngithub.com/afex/hystrix-go v0.0.0-20180502004556-fa1af6a1f4f5/go.mod h1:SkGFH1ia65gfNATL8TAiHDNxPzPdmEL5uirI2Uyuz6c=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alecthomas/units v0.0.0-20190717042225-c3de453c63f4/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/apache/thrift v0.12.0/go.mod h1:cp2SuWMxlEZw2r+iP2GNCdIi4C1qmUzdZFSVb+bacwQ=\ngithub.com/apache/thrift v0.13.0/go.mod h1:cp2SuWMxlEZw2r+iP2GNCdIi4C1qmUzdZFSVb+bacwQ=\ngithub.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e/go.mod h1:3U/XgcO3hCbHZ8TKRvWD2dDTCfh9M9ya+I9JpbB7O8o=\ngithub.com/armon/go-metrics v0.0.0-20180917152333-f0300d1749da/go.mod h1:Q73ZrmVTwzkszR9V5SSuryQ31EELlFMUz1kKyl939pY=\ngithub.com/armon/go-radix v0.0.0-20180808171621-7fddfc383310/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=\ngithub.com/aryann/difflib v0.0.0-20170710044230-e206f873d14a/go.mod h1:DAHtR1m6lCRdSC2Tm3DSWRPvIPr6xNKyeHdqDQSQT+A=\ngithub.com/aws/aws-lambda-go v1.13.3/go.mod h1:4UKl9IzQMoD+QF79YdCuzCwp8VbmG4VAQwij/eHl5CU=\ngithub.com/aws/aws-sdk-go v1.27.0/go.mod h1:KmX6BPdI08NWTb3/sm4ZGu5ShLoqVDhKgpiN924inxo=\ngithub.com/aws/aws-sdk-go-v2 v0.18.0/go.mod h1:JWVYvqSMppoMJC0x5wdwiImzgXTI9FuZwxzkQq9wy+g=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/bgentry/speakeasy v0.1.0/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=\ngithub.com/blang/semver/v4 v4.0.0 h1:1PFHFE6yCCTv8C1TeyNNarDzntLi7wMI5i/pzqYIsAM=\ngithub.com/blang/semver/v4 v4.0.0/go.mod h1:IbckMUScFkM3pff0VJDNKRiT6TG/YpiHIM2yvyW5YoQ=\ngithub.com/casbin/casbin/v2 v2.1.2/go.mod h1:YcPU1XXisHhLzuxH9coDNf2FbKpjGlbCg3n9yuLkIJQ=\ngithub.com/cenkalti/backoff v2.2.1+incompatible/go.mod h1:90ReRw6GdpyfrHakVjL/QHaoyV4aDUVVkXQJJJ3NXXM=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/clbanning/x2j v0.0.0-20191024224557-825249438eec/go.mod h1:jMjuTZXRI4dUb/I5gc9Hdhagfvm9+RyrPryS/auMzxE=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cockroachdb/datadriven v0.0.0-20190809214429-80d97fb3cbaa/go.mod h1:zn76sxSg3SzpJ0PPJaLDCu+Bu0Lg3sKTORVIj19EIF8=\ngithub.com/codahale/hdrhistogram v0.0.0-20161010025455-3a0bb77429bd/go.mod h1:sE/e/2PUdi/liOCUjSTXgM1o87ZssimdTWN964YiIeI=\ngithub.com/coreos/go-semver v0.2.0/go.mod h1:nnelYz7RCh+5ahJtPPxZlU+153eP4D4r3EedlOD2RNk=\ngithub.com/coreos/go-systemd v0.0.0-20180511133405-39ca1b05acc7/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=\ngithub.com/coreos/go-systemd v0.0.0-20190321100706-95778dfbb74e/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=\ngithub.com/coreos/pkg v0.0.0-20160727233714-3ac0863d7acf/go.mod h1:E3G3o1h8I7cfcXa63jLwjI0eiQQMgzzUDFVpN/nH/eA=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.0-20190314233015-f79a8a8ca69d/go.mod h1:maD7wRr/U5Z6m/iR4s+kqSMx2CaBsrgA7czyZG/E6dU=\ngithub.com/creack/pty v1.1.7/go.mod h1:lj5s0c3V2DBrqTV7llrYr5NG6My20zk30Fl46Y7DoTY=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dgrijalva/jwt-go v3.2.0+incompatible/go.mod h1:E3ru+11k8xSBh+hMPgOLZmtrrCbhqsmaPHjLKYnJCaQ=\ngithub.com/dustin/go-humanize v0.0.0-20171111073723-bb3d318650d4/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=\ngithub.com/eapache/go-resiliency v1.1.0/go.mod h1:kFI+JgMyC7bLPUVY133qvEBtVayf5mFgVsvEsIPBvNs=\ngithub.com/eapache/go-xerial-snappy v0.0.0-20180814174437-776d5712da21/go.mod h1:+020luEh2TKB4/GOp8oxxtq0Daoen/Cii55CzbTV6DU=\ngithub.com/eapache/queue v1.1.0/go.mod h1:6eCeP0CKFpHLu8blIFXhExK/dRa7WDZfr6jVFPTqq+I=\ngithub.com/edsrzf/mmap-go v1.0.0/go.mod h1:YO35OhQPt3KJa3ryjFM5Bs14WD66h8eGKpfaBNrHW5M=\ngithub.com/envoyproxy/go-control-plane v0.6.9/go.mod h1:SBwIajubJHhxtWwsL9s8ss4safvEdbitLhGGK48rN6g=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/fatih/color v1.7.0/go.mod h1:Zm6kSWBoL9eyXnKyktHP6abPY2pDugNf5KwzbycvMj4=\ngithub.com/franela/goblin v0.0.0-20200105215937-c9ffbefa60db/go.mod h1:7dvUGVsVBjqR7JHJk0brhHOZYGmfBYOrK0ZhYMEtBr4=\ngithub.com/franela/goreq v0.0.0-20171204163338-bcd34c9993f8/go.mod h1:ZhphrRTfi2rbfLwlschooIH4+wKKDR4Pdxhh+TRoA20=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\ngithub.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1 h1:QbL/5oDUmRBzO9/Z7Seo6zf912W/a6Sr4Eu0G/3Jho0=\ngithub.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20211213063430-748e38ca8aec h1:3FLiRYO6PlQFDpUU7OEFlWgjGD1jnBIVSJ5SYRWk+9c=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20211213063430-748e38ca8aec/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/kit v0.9.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/kit v0.10.0/go.mod h1:xUsJbQ/Fp4kEt7AFgCuvyX4a71u8h9jB8tj/ORgOZ7o=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=\ngithub.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=\ngithub.com/go-logr/logr v0.4.0/go.mod h1:z6/tIYblkpsD+a4lm/fGIIU9mZ+XfAiaFtq7xTgseGU=\ngithub.com/go-sql-driver/mysql v1.4.0/go.mod h1:zAC/RDZ24gD3HViQzih4MyKcchzm+sOG5ZlKdlhCg5w=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/gogo/googleapis v1.1.0/go.mod h1:gf4bu3Q80BeJ6H1S1vYPm8/ELATdvryBaNFGgqEef3s=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/gogo/protobuf v1.2.0/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/gogo/protobuf v1.2.1/go.mod h1:hp+jE20tsWTFYpLwKvXlhS1hjn+gTNwPg2I6zVXpSg4=\ngithub.com/golang/freetype v0.0.0-20161208064710-d9be45aaf745/go.mod h1:E/TSTwGwJL78qG/PmXZO1EjYhfJinVAhrmmHX6Z8B9k=\ngithub.com/golang/freetype v0.0.0-20170609003504-e2365dfdc4a0 h1:DACJavvAHhabrF08vX0COfcOBJRhZ8lUbR+ZWIs0Y5g=\ngithub.com/golang/freetype v0.0.0-20170609003504-e2365dfdc4a0/go.mod h1:E/TSTwGwJL78qG/PmXZO1EjYhfJinVAhrmmHX6Z8B9k=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20160516000752-02826c3e7903/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/snappy v0.0.0-20180518054509-2e65f85255db/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\ngithub.com/google/uuid v1.0.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\ngithub.com/gorilla/context v1.1.1/go.mod h1:kBGZzfjB9CEq2AlWe17Uuf7NDRt0dE0s8S51q0aT7Yg=\ngithub.com/gorilla/mux v1.6.2/go.mod h1:1lud6UwP+6orDFRuTfBEV8e9/aOM/c4fVVCaMa2zaAs=\ngithub.com/gorilla/mux v1.7.3/go.mod h1:1lud6UwP+6orDFRuTfBEV8e9/aOM/c4fVVCaMa2zaAs=\ngithub.com/gorilla/websocket v0.0.0-20170926233335-4201258b820c/go.mod h1:E7qHFY5m1UJ88s3WnNqhKjPHQ0heANvMoAMk2YaljkQ=\ngithub.com/grpc-ecosystem/go-grpc-middleware v1.0.1-0.20190118093823-f849b5445de4/go.mod h1:FiyG127CGDf3tlThmgyCl78X/SZQqEOJBCDaAfeWzPs=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0/go.mod h1:8NvIoxWQoOIhqOTXgfV/d3M/q6VIi02HzZEHgUlZvzk=\ngithub.com/grpc-ecosystem/grpc-gateway v1.9.5/go.mod h1:vNeuVxBJEsws4ogUvrchl83t/GYV9WGTSLVdBhOQFDY=\ngithub.com/hashicorp/consul/api v1.3.0/go.mod h1:MmDNSzIMUjNpY/mQ398R4bk2FnqQLoPndWW5VkKPlCE=\ngithub.com/hashicorp/consul/sdk v0.3.0/go.mod h1:VKf9jXwCTEY1QZP2MOLRhb5i/I/ssyNV1vwHyQBF0x8=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-cleanhttp v0.5.1/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=\ngithub.com/hashicorp/go-immutable-radix v1.0.0/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-msgpack v0.5.3/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=\ngithub.com/hashicorp/go-multierror v1.0.0/go.mod h1:dHtQlpGsu+cZNNAkkCN/P3hoUDHhCYQXV3UM06sGGrk=\ngithub.com/hashicorp/go-rootcerts v1.0.0/go.mod h1:K6zTfqpRlCUIjkwsN4Z+hiSfzSTQa6eBIzfwKfwNnHU=\ngithub.com/hashicorp/go-sockaddr v1.0.0/go.mod h1:7Xibr9yA9JjQq1JpNB2Vw7kxv8xerXegt+ozgdvDeDU=\ngithub.com/hashicorp/go-syslog v1.0.0/go.mod h1:qPfqrKkXGihmCqbJM2mZgkZGvKG1dFdvsLplgctolz4=\ngithub.com/hashicorp/go-uuid v1.0.0/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.1/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-version v1.2.0/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=\ngithub.com/hashicorp/go.net v0.0.1/go.mod h1:hjKkEWcCURg++eb33jQU7oqQcI9XDCnUzHA0oac0k90=\ngithub.com/hashicorp/golang-lru v0.0.0-20160813221303-0a025b7e63ad/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.4 h1:YDjusn29QI/Das2iO9M0BHnIbxPeyuCHsjMW+lJfyTc=\ngithub.com/hashicorp/golang-lru v0.5.4/go.mod h1:iADmTwqILo4mZ8BN3D2Q6+9jd8WM5uGBxy+E8yxSoD4=\ngithub.com/hashicorp/logutils v1.0.0/go.mod h1:QIAnNjmIWmVIIkWDTG1z5v++HQmx9WQRO+LraFDTW64=\ngithub.com/hashicorp/mdns v1.0.0/go.mod h1:tL+uN++7HEJ6SQLQ2/p+z2pH24WQKWjBPkE0mNTz8vQ=\ngithub.com/hashicorp/memberlist v0.1.3/go.mod h1:ajVTdAv/9Im8oMAAj5G31PhhMCZJV2pPBoIllUwCN7I=\ngithub.com/hashicorp/serf v0.8.2/go.mod h1:6hOLApaqBFA1NXqRQAsxw9QxuDEvNxSQRwA/JwenrHc=\ngithub.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\ngithub.com/hudl/fargo v1.3.0/go.mod h1:y3CKSmjA+wD2gak7sUSXTAoopbhU08POFhmITJgmKTg=\ngithub.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\ngithub.com/influxdata/influxdb1-client v0.0.0-20191209144304-8bf82d3c094d/go.mod h1:qj24IKcXYK6Iy9ceXlo3Tc+vtHo9lIhSX5JddghvEPo=\ngithub.com/jmespath/go-jmespath v0.0.0-20180206201540-c2b33e8439af/go.mod h1:Nht3zPeWKUH0NzdCt2Blrr5ys8VGpn0CEB0cQHVjt7k=\ngithub.com/jonboulle/clockwork v0.1.0/go.mod h1:Ii8DK3G1RaLaWxj9trq07+26W01tbo22gdxWY5EU2bo=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.7/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.8/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/jtolds/gls v4.20.0+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/kisielk/errcheck v1.1.0/go.mod h1:EZBBE59ingxPouuu3KfxchcWSUPOHkagtvWXihfKN4Q=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/lightstep/lightstep-tracer-common/golang/gogo v0.0.0-20190605223551-bc2310a04743/go.mod h1:qklhhLq1aX+mtWk9cPHPzaBjWImj5ULL6C7HFJtXQMM=\ngithub.com/lightstep/lightstep-tracer-go v0.18.1/go.mod h1:jlF1pusYV4pidLvZ+XD0UBX0ZE6WURAspgAczcDHrL4=\ngithub.com/lyft/protoc-gen-validate v0.0.13/go.mod h1:XbGvPuh87YZc5TdIa2/I4pLk0QoUACkjt2znoq26NVQ=\ngithub.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=\ngithub.com/mattn/go-isatty v0.0.3/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=\ngithub.com/mattn/go-isatty v0.0.4/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=\ngithub.com/mattn/go-runewidth v0.0.2/go.mod h1:LwmH8dsx7+W8Uxz3IHJYH5QSwggIsqBzpuz5H//U1FU=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/miekg/dns v1.0.14/go.mod h1:W1PPwlIAgtquWBMBEV9nkV9Cazfe8ScdGz/Lj7v3Nrg=\ngithub.com/mitchellh/cli v1.0.0/go.mod h1:hNIlj7HEI86fIcpObd7a0FcrxTWetlwJDGcceTlRvqc=\ngithub.com/mitchellh/go-homedir v1.0.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/mitchellh/go-testing-interface v1.0.0/go.mod h1:kRemZodwjscx+RGhAo8eIhFbs2+BFgRtFPeD/KE+zxI=\ngithub.com/mitchellh/gox v0.4.0/go.mod h1:Sd9lOJ0+aimLBi73mGofS1ycjY8lL3uZM3JPS42BGNg=\ngithub.com/mitchellh/iochan v1.0.0/go.mod h1:JwYml1nuB7xOzsp52dPpHFffvOCDupsG0QubkSMEySY=\ngithub.com/mitchellh/mapstructure v0.0.0-20160808181253-ca63d7c062ee/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/nats-io/jwt v0.3.0/go.mod h1:fRYCDE99xlTsqUzISS1Bi75UBJ6ljOJQOAAu5VglpSg=\ngithub.com/nats-io/jwt v0.3.2/go.mod h1:/euKqTS1ZD+zzjYrY7pseZrTtWQSjujC7xjPc8wL6eU=\ngithub.com/nats-io/nats-server/v2 v2.1.2/go.mod h1:Afk+wRZqkMQs/p45uXdrVLuab3gwv3Z8C4HTBu8GD/k=\ngithub.com/nats-io/nats.go v1.9.1/go.mod h1:ZjDU1L/7fJ09jvUSRVBR2e7+RnLiiIQyqyzEE/Zbp4w=\ngithub.com/nats-io/nkeys v0.1.0/go.mod h1:xpnFELMwJABBLVhffcfd1MZx6VsNRFpEugbxziKVo7w=\ngithub.com/nats-io/nkeys v0.1.3/go.mod h1:xpnFELMwJABBLVhffcfd1MZx6VsNRFpEugbxziKVo7w=\ngithub.com/nats-io/nuid v1.0.1/go.mod h1:19wcPz3Ph3q0Jbyiqsd0kePYG7A95tJPxeL+1OSON2c=\ngithub.com/noisetorch/pulseaudio v0.0.0-20220603053345-9303200c3861 h1:Xng5X+MlNK7Y/Ede75B86wJgaFMFvuey1K4Suh9k2E4=\ngithub.com/noisetorch/pulseaudio v0.0.0-20220603053345-9303200c3861/go.mod h1:/zosM8PSkhuVyfJ9c/qzBhPSm3k06m9U4y4SDfH0jeA=\ngithub.com/oklog/oklog v0.3.2/go.mod h1:FCV+B7mhrz4o+ueLpx+KqkyXRGMWOYEvfiXtdGtbWGs=\ngithub.com/oklog/run v1.0.0/go.mod h1:dlhp/R75TPv97u0XWUtDeV/lRKWPKSdTuV0TZvrmrQA=\ngithub.com/olekukonko/tablewriter v0.0.0-20170122224234-a0225b3f23b5/go.mod h1:vsDQFd/mU46D+Z4whnwzcISnGGzXWMclvtLoiIKAKIo=\ngithub.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.7.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/gomega v1.4.3/go.mod h1:ex+gbHU/CVuBBDIJjb2X0qEXbFg53c61hWP/1CpauHY=\ngithub.com/op/go-logging v0.0.0-20160315200505-970db520ece7/go.mod h1:HzydrMdWErDVzsI23lYNej1Htcns9BCg93Dk0bBINWk=\ngithub.com/opentracing-contrib/go-observer v0.0.0-20170622124052-a52f23424492/go.mod h1:Ngi6UdF0k5OKD5t5wlmGhe/EDKPoUM3BXZSSfIuJbis=\ngithub.com/opentracing/basictracer-go v1.0.0/go.mod h1:QfBfYuafItcjQuMwinw9GhYKwFXS9KnPs5lxoYwgW74=\ngithub.com/opentracing/opentracing-go v1.0.2/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=\ngithub.com/opentracing/opentracing-go v1.1.0/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=\ngithub.com/openzipkin-contrib/zipkin-go-opentracing v0.4.5/go.mod h1:/wsWhb9smxSfWAKL3wpBW7V8scJMt8N8gnaMCS9E/cA=\ngithub.com/openzipkin/zipkin-go v0.1.6/go.mod h1:QgAqvLzwWbR/WpD4A3cGpPtJrZXNIiJc5AZX7/PBEpw=\ngithub.com/openzipkin/zipkin-go v0.2.1/go.mod h1:NaW6tEwdmWMaCDZzg8sh+IBNOxHMPnhQw8ySjnjRyN4=\ngithub.com/openzipkin/zipkin-go v0.2.2/go.mod h1:NaW6tEwdmWMaCDZzg8sh+IBNOxHMPnhQw8ySjnjRyN4=\ngithub.com/pact-foundation/pact-go v1.0.4/go.mod h1:uExwJY4kCzNPcHRj+hCR/HBbOOIwwtUjcrb0b5/5kLM=\ngithub.com/pascaldekloe/goe v0.0.0-20180627143212-57f6aae5913c/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=\ngithub.com/pborman/uuid v1.2.0/go.mod h1:X/NO0urCmaxf9VXbdlT7C2Yzkj2IKimNn4k+gtPdI/k=\ngithub.com/performancecopilot/speed v3.0.0+incompatible/go.mod h1:/CLtqpZ5gBg1M9iaPbIdPPGyKcA8hKdoy6hAWba7Yac=\ngithub.com/pierrec/lz4 v1.0.2-0.20190131084431-473cd7ce01a1/go.mod h1:3/3N9NVKO0jef7pBehbT1qWhCMrIgbYNnFAZCqQ5LRc=\ngithub.com/pierrec/lz4 v2.0.5+incompatible/go.mod h1:pdkljMzZIN41W+lC3N2tnIh5sFi+IEE17M5jbnwPHcY=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/profile v1.2.1/go.mod h1:hJw3o1OdXxsrSjjVksARp5W95eeEaEfptyVZyv6JUPA=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/posener/complete v1.1.1/go.mod h1:em0nMJCgc9GFtwrmVmEMR/ZL6WyhyjMBndrE9hABlRI=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v0.9.3-0.20190127221311-3c4408c8b829/go.mod h1:p2iRAGwDERtqlqzRXnrOVns+ignqQo//hLXqYxZYVNs=\ngithub.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=\ngithub.com/prometheus/client_golang v1.3.0/go.mod h1:hJaj2vgQTGQmVCsAACORcieXFeDPbaTKGT+JTgUa3og=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190115171406-56726106282f/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.1.0/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/common v0.2.0/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.7.0/go.mod h1:DjGbpBbp5NYNiECxcL/VnbXCCaQpKd3tt26CguLLsqA=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.0-20190117184657-bf6a532e95b1/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.0.8/go.mod h1:7Qr8sr6344vo1JqZ6HhLceV9o3AJ1Ff+GxbHq6oeK9A=\ngithub.com/rcrowley/go-metrics v0.0.0-20181016184325-3113b8401b8a/go.mod h1:bCqnVzQkZxMG4s8nGwiZ5l3QUCyqpo9Y+/ZMZ9VjZe4=\ngithub.com/rogpeppe/fastuuid v0.0.0-20150106093220-6724a57986af/go.mod h1:XWv6SoW27p1b0cqNHllgS5HIMJraePCO15w5zCzIWYg=\ngithub.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\ngithub.com/rs/xid v1.2.1/go.mod h1:+uKXf+4Djp6Md1KODXJxgGQPKngRmWyn10oCKFzNHOQ=\ngithub.com/rs/zerolog v1.21.0/go.mod h1:ZPhntP/xmq1nnND05hhpAh2QMhSsA4UN3MGZ6O2J3hM=\ngithub.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=\ngithub.com/samuel/go-zookeeper v0.0.0-20190923202752-2cc03de413da/go.mod h1:gi+0XIa01GRL2eRQVjQkKGqKF3SF9vZR/HnPullcV2E=\ngithub.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529/go.mod h1:DxrIzT+xaE7yg65j358z/aeFdxmN0P9QXhEzd20vsDc=\ngithub.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/sirupsen/logrus v1.8.1/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/smartystreets/assertions v0.0.0-20180927180507-b2de0cb4f26d/go.mod h1:OnSkiWE9lh6wB0YB77sQom3nweQdgAjqCqsofrRNTgc=\ngithub.com/smartystreets/goconvey v1.6.4/go.mod h1:syvi0/a8iFYH4r/RixwvyeAJjdLS9QV7WQ/tjFTllLA=\ngithub.com/soheilhy/cmux v0.1.4/go.mod h1:IM3LyeVVIOuxMH7sFAkER9+bJ4dT7Ms6E4xg4kGIyLM=\ngithub.com/sony/gobreaker v0.4.1/go.mod h1:ZKptC7FHNvhBz7dN2LGjPVBz2sZJmc0/PkyDJOjmxWY=\ngithub.com/spf13/cobra v0.0.3/go.mod h1:1l0Ry5zgKvJasoi3XT1TypsSe7PqH0Sj9dhYf7v3XqQ=\ngithub.com/spf13/pflag v1.0.1/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=\ngithub.com/streadway/amqp v0.0.0-20190404075320-75d898a42a94/go.mod h1:AZpEONHx3DKn8O/DFsRAY58/XVQiIPMTMB1SddzLXVw=\ngithub.com/streadway/amqp v0.0.0-20190827072141-edfb9018d271/go.mod h1:AZpEONHx3DKn8O/DFsRAY58/XVQiIPMTMB1SddzLXVw=\ngithub.com/streadway/handy v0.0.0-20190108123426-d5acb3125c2a/go.mod h1:qNTQ5P5JnDBl6z3cMAg/SywNDC5ABu5ApDIw6lUbRmI=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/syndtr/gocapability v0.0.0-20200815063812-42c35b437635 h1:kdXcSzyDtseVEc4yCz2qF8ZrQvIDBJLl4S1c3GCXmoI=\ngithub.com/syndtr/gocapability v0.0.0-20200815063812-42c35b437635/go.mod h1:hkRG7XYTFWNJGYcbNJQlaLq0fg1yr4J4t/NcTQtrfww=\ngithub.com/tmc/grpc-websocket-proxy v0.0.0-20170815181823-89b8d40f7ca8/go.mod h1:ncp9v5uamzpCO7NfCPTXjqaC+bZgJeR0sMTm6dMHP7U=\ngithub.com/urfave/cli v1.20.0/go.mod h1:70zkFmudgCuE/ngEzBv17Jvp/497gISqfk5gWijbERA=\ngithub.com/urfave/cli v1.22.1/go.mod h1:Gos4lmkARVdJ6EkW0WaNv/tZAAMe9V7XWyB60NtXRu0=\ngithub.com/xiang90/probing v0.0.0-20190116061207-43a291ad63a2/go.mod h1:UETIi67q53MR2AWcXfiuqkDkRtnGDLqkBTpCHuJHxtU=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.4.0/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngithub.com/yuin/goldmark v1.4.1/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngo.etcd.io/bbolt v1.3.3/go.mod h1:IbVyRI1SCnLcuJnV2u8VeU0CEYM7e686BmAb1XKL+uU=\ngo.etcd.io/etcd v0.0.0-20191023171146-3cf2f69b5738/go.mod h1:dnLIgRNXwCJa5e+c6mIZCrds/GIG4ncV9HhK5PX7jPg=\ngo.opencensus.io v0.20.1/go.mod h1:6WKK9ahsWS3RSO+PY9ZHZUfv2irvY6gN279GOPZjmmk=\ngo.opencensus.io v0.20.2/go.mod h1:6WKK9ahsWS3RSO+PY9ZHZUfv2irvY6gN279GOPZjmmk=\ngo.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opentelemetry.io/otel v0.20.0/go.mod h1:Y3ugLH2oa81t5QO+Lty+zXf8zC9L26ax4Nzoxm/dooo=\ngo.opentelemetry.io/otel/metric v0.20.0/go.mod h1:598I5tYlH1vzBjn+BTuhzTCSb/9debfNp6R3s7Pr1eU=\ngo.opentelemetry.io/otel/oteltest v0.20.0/go.mod h1:L7bgKf9ZB7qCwT9Up7i9/pn0PWIa9FqQ2IQ8LoxiGnw=\ngo.opentelemetry.io/otel/sdk v0.20.0/go.mod h1:g/IcepuwNsoiX5Byy2nNV0ySUF1em498m7hBWC279Yc=\ngo.opentelemetry.io/otel/trace v0.20.0/go.mod h1:6GjCW8zgDjwGHGa6GkyeB8+/5vjT16gUEi0Nf1iBdgw=\ngo.uber.org/atomic v1.3.2/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=\ngo.uber.org/atomic v1.5.0/go.mod h1:sABNBOSYdrvTF6hTgEIbc7YasKWGhgEQZyfxyTvoXHQ=\ngo.uber.org/atomic v1.6.0/go.mod h1:sABNBOSYdrvTF6hTgEIbc7YasKWGhgEQZyfxyTvoXHQ=\ngo.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/multierr v1.1.0/go.mod h1:wR5kodmAFQ0UK8QlbwjlSNy0Z68gJhDJUG5sjR94q/0=\ngo.uber.org/multierr v1.3.0/go.mod h1:VgVr7evmIr6uPjLBxg28wmKNXyqE9akIJ5XnfpiKl+4=\ngo.uber.org/multierr v1.5.0/go.mod h1:FeouvMocqHpRaaGuG9EjoKcStLC43Zu/fmqdUMPcKYU=\ngo.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=\ngo.uber.org/tools v0.0.0-20190618225709-2cfd321de3ee/go.mod h1:vJERXedbb3MVM5f9Ejo0C68/HhF8uaILCdgjnY+goOA=\ngo.uber.org/zap v1.10.0/go.mod h1:vwi/ZaCAaUcBkycHslxD9B2zi4UTXhF60s6SWpuDF0Q=\ngo.uber.org/zap v1.13.0/go.mod h1:zwrFLgMcdUuIBviXEYEH1YKNaOBnKXsx2IPda5bBwHM=\ngo.uber.org/zap v1.16.0/go.mod h1:MA8QOfq0BHJwdXa996Y4dYkAqRKB8/1K1QMMZVaNZjQ=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20181029021203-45a5f77698d3/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190701094942-4def268fd1a4/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.14.0 h1:wBqGXzWJW6m1XrIKlAH0Hs1JJ7+9KBwnIO8v66Q9cHc=\ngolang.org/x/crypto v0.14.0/go.mod h1:MVFd36DqK4CsrnJYDkBA3VC4m2GkXAM0PvzMCn4JQf4=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190731235908-ec7cb31e5a56/go.mod h1:JhuoJpWY28nO4Vef9tZUw9qufEGTyX1+7lmHxV5q5G4=\ngolang.org/x/exp v0.0.0-20191002040644-a1355ae1e2c3/go.mod h1:NOZ3BPKG0ec/BKJQgnvsSFpcKLM5xXVWnvZS97DWHgE=\ngolang.org/x/exp v0.0.0-20191224044220-1fea468a75e9/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20210722180016-6781d3edade3/go.mod h1:DVyR6MI7P4kEQgvZJSj1fQGrWIi2RzIrfYWycwheUAc=\ngolang.org/x/exp v0.0.0-20220104160115-025e73f80486 h1:gpEOK9kxNqVPOaZayQV2bzetZplXWakHeirk1bXKu2s=\ngolang.org/x/exp v0.0.0-20220104160115-025e73f80486/go.mod h1:b9TAUYHmRtqA6klRHApnXMnj+OyLce4yF5cZCUbk2ps=\ngolang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\ngolang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/image v0.0.0-20200618115811-c13761719519/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/image v0.0.0-20210628002857-a66eb6448b8d/go.mod h1:023OzeP/+EPmXeapQh35lcL3II3LrY8Ic+EFFKVhULM=\ngolang.org/x/image v0.5.0 h1:5JMiNunQeQw++mMOz48/ISeNu3Iweh/JaZU8ZLqHRrI=\ngolang.org/x/image v0.5.0/go.mod h1:FVC7BI/5Ym8R25iw5OLsgshdUBbT1h5jZTpA+mvAdZ4=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=\ngolang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=\ngolang.org/x/mobile v0.0.0-20201217150744-e6ae53a27f4f/go.mod h1:skQtrUTUwhdJvXM/2KKJzY8pDgNr9I/FOMqDVRPBUS4=\ngolang.org/x/mobile v0.0.0-20220104184238-4a8be17bd2e3 h1:A6xMk9ozH8+K90r7CpnP00jZ92Io02pQ/XLd55pZuf0=\ngolang.org/x/mobile v0.0.0-20220104184238-4a8be17bd2e3/go.mod h1:pe2sM7Uk+2Su1y7u/6Z8KJ24D7lepUjFZbhFOrmDfuQ=\ngolang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=\ngolang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.1.1-0.20191209134235-331c550502dd/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.5.1/go.mod h1:5OXOZSfqPIIbmVBIIKWRFfZjPR0E5r58TLhUjH0a2Ro=\ngolang.org/x/mod v0.6.0-dev.0.20211013180041-c96bc1413d57/go.mod h1:3p9vT2HGsQu2K1YbXdKPJLVgG5VJdoTa1poYQBtP1AY=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181023162649-9b4f9f5ad519/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181201002055-351d144fa1fc/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181220203305-927f97764cc3/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190125091013-d26f9f9a57f3/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190813141303-74dc4d7220e7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210805182204-aaa1db679c0d/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20211015210444-4f30a5c0130f/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20180823144017-11551d06cbcc/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181026203630-95b1ffbd15a5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181107165924-66b7b1311ac8/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181122145206-62eef0e2fa9b/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190502145724-3ef323f4f1fd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190726091711-fc99dfbffb4e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190826190057-c7b8b68b1456/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191220142924-d4481acd189f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210304124612-50617c2ba197/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210809222454-d867a43fc93e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211019181941-9d821ace8654/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.13.0 h1:Af8nKPmuFypiUBjVoU9V20FiaFXOcuZI21p0ycVYYGE=\ngolang.org/x/sys v0.13.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=\ngolang.org/x/term v0.13.0/go.mod h1:LTmsnFJwVN6bCy1rVCoS+qHT1HhALEFxKncY3WNNh4U=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.13.0 h1:ablQoSUd0tRdKxZewP80B+BaqeKJuVhuRxj/dkrun3k=\ngolang.org/x/text v0.13.0/go.mod h1:TvPlkZtksWOMsz7fbANvkp4WM8x/WCo/om8BMLbz+aE=\ngolang.org/x/time v0.0.0-20180412165947-fbb02b2291d2/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/tools v0.0.0-20180221164845-07fd8470d635/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20180828015842-6cd1fcedba52/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190328211700-ab21143f2384/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190927191325-030b2cf1153e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191029041327-9cc4af7d6b2c/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191029190741-b9c20aec41a5/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200103221440-774c71fcf114/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200117012304-6edc0a871e69/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=\ngolang.org/x/tools v0.1.8-0.20211022200916-316ba0b74098/go.mod h1:LGqMHiF4EqQNHR1JncWGqT5BVaXmza+X+BDGol+dOxo=\ngolang.org/x/tools v0.1.8-0.20211029000441-d6a9af8af023/go.mod h1:nABZi5QlRsZVlzPpHl034qft6wpY4eDcsTt5AaioBiU=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/api v0.3.1/go.mod h1:6wY9I6uQWHQ8EM57III9mq/AjF+i8G65rmVagqKMtkk=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.2.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190530194941-fb225487d101/go.mod h1:z3L6/3dTEVtUr6QSP8miRzeRqwQOioJ9I66odjN4I7s=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/grpc v1.17.0/go.mod h1:6QZJwpn2B+Zp71q/5VxRsJ6NXXVCE5NRUHRo+f3cWCs=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.20.0/go.mod h1:chYK+tFQF0nDUGJgXMSgLCQk3phJEuONr2DCgLDdAQM=\ngoogle.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=\ngoogle.golang.org/grpc v1.21.0/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=\ngoogle.golang.org/grpc v1.22.1/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.23.1/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/cheggaaa/pb.v1 v1.0.25/go.mod h1:V/YB90LKu/1FcN3WVnfiiE5oMCibMjukxqG/qStrOgw=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=\ngopkg.in/gcfg.v1 v1.2.3/go.mod h1:yesOnuUOFQAhST5vPY4nbZsb/huCgGGXlipJsBn0b3o=\ngopkg.in/resty.v1 v1.12.0/go.mod h1:mDo4pnntr5jdWRML875a/NmxYqAlA73dVijT2AXvQQo=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\ngopkg.in/warnings.v0 v0.1.2/go.mod h1:jksf8JmL6Qr/oQM2OXTHunEvvTAsrWBLb6OOjuVWRNI=\ngopkg.in/yaml.v2 v2.0.0-20170812160011-eb3733d160e7/go.mod h1:JAlM8MvJe8wmxCU4Bli9HhUf9+ttbYbLASfIpnQbh74=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20180728063816-88497007e858/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=\nhonnef.co/go/tools v0.1.3/go.mod h1:NgwopIslSNH47DimFoV78dnkksY2EFtX0ajyb3K/las=\nsigs.k8s.io/yaml v1.1.0/go.mod h1:UJmg0vDUVViEyp3mgSv9WPwZCDxu4rQW1olrI1uml+o=\nsourcegraph.com/sourcegraph/appdash v0.0.0-20190731080439-ebfcffb1b5c0/go.mod h1:hI742Nqp5OhwiqlzhgfbWU4mW4yO10fP+LoT9WOswdU=\n"
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 8.9453125,
          "content": "// This file is part of the program \"NoiseTorch-ng\".\n// Please see the LICENSE file for copyright information.\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"image\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n\t\"regexp\"\n\t\"strconv\"\n\t\"strings\"\n\t\"time\"\n\n\t\"github.com/BurntSushi/xgbutil\"\n\t\"github.com/BurntSushi/xgbutil/ewmh\"\n\t\"github.com/BurntSushi/xgbutil/icccm\"\n\t\"github.com/aarzilli/nucular/font\"\n\n\t\"github.com/noisetorch/pulseaudio\"\n\n\t_ \"embed\"\n\n\t\"github.com/aarzilli/nucular\"\n\t\"github.com/aarzilli/nucular/style\"\n)\n\n//go:generate go run scripts/embedlicenses.go\n\n//go:embed c/ladspa/rnnoise_ladspa.so\nvar libRNNoise []byte\n\ntype device struct {\n\tID             string\n\tName           string\n\tisMonitor      bool\n\tchecked        bool\n\tdynamicLatency bool\n\trate           uint32\n}\n\nvar appName = \"NoiseTorch-ng\"\n\nvar nameSuffix = \"\"         // will be changed by build\nvar version = \"unknown\"     // ditto\nvar distribution = \"custom\" // ditto\nvar updateURL = \"\"          // ditto\nvar publicKeyString = \"\"    // ditto\nvar websiteURL = \"\"         // ditto\n\nfunc main() {\n\tif nameSuffix != \"\" {\n\t\tappName += strings.Replace(nameSuffix, \"_\", \" \", -1)\n\t}\n\n\topt := parseCLIOpts()\n\n\tif opt.doLog {\n\t\tlog.SetOutput(os.Stdout)\n\t} else {\n\t\tlog.SetOutput(io.Discard)\n\t}\n\tlog.Printf(\"Application starting. Version: %s (%s)\\n\", version, distribution)\n\tlog.Printf(\"CAP_SYS_RESOURCE: %t\\n\", hasCapSysResource(getCurrentCaps()))\n\n\tinitializeConfigIfNot()\n\trnnoisefile := dumpLib()\n\tdefer removeLib(rnnoisefile)\n\n\tctx := ntcontext{}\n\tctx.config = readConfig()\n\tctx.librnnoise = rnnoisefile\n\n\tdoCLI(opt, ctx.config, ctx.librnnoise)\n\n\tif ctx.config.EnableUpdates {\n\t\tgo updateCheck(&ctx)\n\t}\n\n\tctx.haveCapabilities = hasCapSysResource(getCurrentCaps())\n\tctx.capsMismatch = hasCapSysResource(getCurrentCaps()) != hasCapSysResource(getSelfFileCaps())\n\n\tresetUI(&ctx)\n\n\twnd := nucular.NewMasterWindowSize(0, appName, image.Point{600, 400}, func(w *nucular.Window) {\n\t\tupdatefn(&ctx, w)\n\t})\n\n\tctx.masterWindow = &wnd\n\t(*ctx.masterWindow).Changed()\n\n\tgo paConnectionWatchdog(&ctx)\n\n\tstyle := style.FromTheme(style.DarkTheme, 2.0)\n\tstyle.Font = font.DefaultFont(16, 1)\n\twnd.SetStyle(style)\n\n\t//this is a disgusting hack that searches for the noisetorch window\n\t//and then fixes up the WM_CLASS attribute so it displays\n\t//properly in the taskbar\n\tgo fixWindowClass()\n\twnd.Main()\n\n}\n\nfunc dumpLib() string {\n\tf, err := os.CreateTemp(\"\", \"librnnoise-*.so\")\n\tif err != nil {\n\t\tlog.Fatalf(\"Couldn't open temp file for librnnoise\\n\")\n\t}\n\tf.Write(libRNNoise)\n\tlog.Printf(\"Wrote temp librnnoise to: %s\\n\", f.Name())\n\treturn f.Name()\n}\n\nfunc removeLib(file string) {\n\terr := os.Remove(file)\n\tif err != nil {\n\t\tlog.Printf(\"Couldn't delete temp librnnoise: %v\\n\", err)\n\t}\n\tlog.Printf(\"Deleted temp librnnoise: %s\\n\", file)\n}\n\nfunc getSources(ctx *ntcontext, client *pulseaudio.Client) []device {\n\tsources, err := client.Sources()\n\tif err != nil {\n\t\tlog.Printf(\"Couldn't fetch sources from pulseaudio\\n\")\n\t}\n\n\toutputs := make([]device, 0)\n\tfor i := range sources {\n\t\tif strings.Contains(sources[i].Name, \"nui_\") || strings.Contains(sources[i].Name, \"Filtered\") {\n\t\t\tcontinue\n\t\t}\n\n\t\tvar inp device\n\n\t\tinp.ID = sources[i].Name\n\t\tif ctx.serverInfo.servertype == servertype_pulse {\n\t\t\tinp.Name = sources[i].PropList[\"device.description\"]\n\t\t} else {\n\t\t\tinp.Name = sources[i].Description\n\t\t}\n\t\tinp.isMonitor = (sources[i].MonitorSourceIndex != 0xffffffff)\n\t\tinp.rate = sources[i].SampleSpec.Rate\n\n\t\t//PA_SOURCE_DYNAMIC_LATENCY = 0x0040U\n\t\tinp.dynamicLatency = sources[i].Flags&uint32(0x0040) != 0\n\n\t\toutputs = append(outputs, inp)\n\t}\n\n\treturn outputs\n}\n\nfunc getSinks(ctx *ntcontext, client *pulseaudio.Client) []device {\n\tsources, err := client.Sinks()\n\tif err != nil {\n\t\tlog.Printf(\"Couldn't fetch sources from pulseaudio\\n\")\n\t}\n\n\tinputs := make([]device, 0)\n\tfor i := range sources {\n\t\tif strings.Contains(sources[i].Name, \"nui_\") || strings.Contains(sources[i].Name, \"Filtered\") {\n\t\t\tcontinue\n\t\t}\n\n\t\tlog.Printf(\"Output %s, %+v\\n\", sources[i].Name, sources[i])\n\n\t\tvar inp device\n\n\t\tinp.ID = sources[i].Name\n\t\tif ctx.serverInfo.servertype == servertype_pulse {\n\t\t\tinp.Name = sources[i].PropList[\"device.description\"]\n\t\t} else {\n\t\t\tinp.Name = sources[i].Description\n\t\t}\n\t\tinp.rate = sources[i].SampleSpec.Rate\n\n\t\t// PA_SINK_DYNAMIC_LATENCY = 0x0080U\n\t\tinp.dynamicLatency = sources[i].Flags&uint32(0x0080) != 0\n\n\t\tinputs = append(inputs, inp)\n\t}\n\n\treturn inputs\n}\n\nfunc paConnectionWatchdog(ctx *ntcontext) {\n\tfor {\n\t\tif ctx.paClient.Connected() {\n\t\t\ttime.Sleep(500 * time.Millisecond)\n\t\t\tcontinue\n\t\t}\n\n\t\tctx.views.Push(connectView)\n\t\t(*ctx.masterWindow).Changed()\n\n\t\tpaClient, err := pulseaudio.NewClient()\n\t\tif err != nil {\n\t\t\tlog.Printf(\"Couldn't create pulseaudio client: %v\\n\", err)\n\t\t\tfmt.Fprintf(os.Stderr, \"Couldn't create pulseaudio client: %v\\n\", err)\n\t\t}\n\n\t\tinfo, err := serverInfo(paClient)\n\t\tif err != nil {\n\t\t\tlog.Printf(\"Couldn't fetch audio server info: %s\\n\", err)\n\t\t}\n\t\tctx.serverInfo = info\n\n\t\tlog.Printf(\"Connected to audio server. Server name '%s'\\n\", info.name)\n\n\t\tctx.paClient = paClient\n\t\tgo updateNoiseSupressorLoaded(ctx)\n\n\t\tctx.inputList = preselectDevice(ctx, getSources(ctx, paClient), ctx.config.LastUsedInput, getDefaultSourceID)\n\t\tctx.outputList = preselectDevice(ctx, getSinks(ctx, paClient), ctx.config.LastUsedOutput, getDefaultSinkID)\n\n\t\tresetUI(ctx)\n\t\t(*ctx.masterWindow).Changed()\n\n\t\ttime.Sleep(500 * time.Millisecond)\n\t}\n}\n\nfunc serverInfo(paClient *pulseaudio.Client) (audioserverinfo, error) {\n\tinfo, err := paClient.ServerInfo()\n\tif err != nil {\n\t\tlog.Printf(\"Couldn't fetch pulse server info: %v\\n\", err)\n\t\tfmt.Fprintf(os.Stderr, \"Couldn't fetch pulse server info: %v\\n\", err)\n\t}\n\n\tpkgname := info.PackageName\n\tlog.Printf(\"Audioserver package name: %s\\n\", pkgname)\n\tlog.Printf(\"Audioserver package version: %s\\n\", info.PackageVersion)\n\tisPipewire := strings.Contains(pkgname, \"PipeWire\")\n\n\tvar servername string\n\tvar servertype uint\n\tvar major, minor, patch int\n\tvar versionRegex *regexp.Regexp\n\tvar versionString string\n\n\tvar outdatedPipeWire bool\n\n\tif isPipewire {\n\t\tservername = \"PipeWire\"\n\t\tservertype = servertype_pipewire\n\t\tversionRegex = regexp.MustCompile(`.*?on PipeWire (\\d+)\\.(\\d+)\\.(\\d+).*?`)\n\t\tversionString = pkgname\n\t\tlog.Printf(\"Detected PipeWire\\n\")\n\t} else {\n\t\tservername = \"PulseAudio\"\n\t\tservertype = servertype_pulse\n\t\tversionRegex = regexp.MustCompile(`.*?(\\d+)\\.(\\d+)\\.?(\\d+)?.*?`)\n\t\tversionString = info.PackageVersion\n\t\tlog.Printf(\"Detected PulseAudio\\n\")\n\t}\n\n\tres := versionRegex.FindStringSubmatch(versionString)\n\tif len(res) != 4 {\n\t\tlog.Printf(\"couldn't parse server version, regexp didn't match version: %s\\n\", versionString)\n\t\treturn audioserverinfo{servertype: servertype}, nil\n\t}\n\t// the server version did not match the standard `major.minor.patch` pattern\n\t// setting the patch version to default 0\n\tif res[3] == \"\" {\n\t\tres[3] = \"0\"\n\t}\n\tmajor, err = strconv.Atoi(res[1])\n\tif err != nil {\n\t\treturn audioserverinfo{servertype: servertype}, err\n\t}\n\tminor, err = strconv.Atoi(res[2])\n\tif err != nil {\n\t\treturn audioserverinfo{servertype: servertype}, err\n\t}\n\tpatch, err = strconv.Atoi(res[3])\n\tif err != nil {\n\t\treturn audioserverinfo{servertype: servertype}, err\n\t}\n\tif isPipewire && major <= 0 && minor <= 3 && patch < 28 {\n\t\tlog.Printf(\"pipewire version %d.%d.%d too old.\\n\", major, minor, patch)\n\t\toutdatedPipeWire = true\n\t}\n\n\treturn audioserverinfo{\n\t\tservertype:       servertype,\n\t\tname:             servername,\n\t\tmajor:            major,\n\t\tminor:            minor,\n\t\tpatch:            patch,\n\t\toutdatedPipeWire: outdatedPipeWire}, nil\n}\n\nfunc preselectDevice(ctx *ntcontext, devices []device, preselectID string,\n\tfallbackFunc func(client *pulseaudio.Client) (string, error)) []device {\n\n\tdeviceExists := false\n\tfor _, input := range devices {\n\t\tdeviceExists = deviceExists || input.ID == preselectID\n\t}\n\n\tif !deviceExists {\n\t\tdefaultDevice, err := fallbackFunc(ctx.paClient)\n\t\tif err != nil {\n\t\t\tlog.Printf(\"Failed to load default device: %+v\\n\", err)\n\t\t} else {\n\t\t\tpreselectID = defaultDevice\n\t\t}\n\t}\n\tfor i := range devices {\n\t\tif devices[i].ID == preselectID {\n\t\t\tdevices[i].checked = true\n\t\t}\n\t}\n\treturn devices\n}\n\nfunc getDefaultSourceID(client *pulseaudio.Client) (string, error) {\n\tserver, err := client.ServerInfo()\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\treturn server.DefaultSource, nil\n}\n\nfunc getDefaultSinkID(client *pulseaudio.Client) (string, error) {\n\tserver, err := client.ServerInfo()\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\treturn server.DefaultSink, nil\n}\n\n// this is disgusting\nfunc fixWindowClass() {\n\txu, err := xgbutil.NewConn()\n\tdefer xu.Conn().Close()\n\tif err != nil {\n\t\tlog.Printf(\"Couldn't create XU xdg conn: %+v\\n\", err)\n\t\treturn\n\t}\n\tfor i := 0; i < 100; i++ {\n\t\twnds, _ := ewmh.ClientListGet(xu)\n\t\tfor _, w := range wnds {\n\t\t\tn, _ := ewmh.WmNameGet(xu, w)\n\t\t\tif n == appName {\n\t\t\t\t_, err := icccm.WmClassGet(xu, w)\n\t\t\t\t//if we have *NO* WM_CLASS, then the above call errors. We *want* to make sure this errors\n\t\t\t\tif err == nil {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\tclass := icccm.WmClass{}\n\t\t\t\tclass.Class = appName\n\t\t\t\tclass.Instance = appName\n\t\t\t\ticccm.WmClassSet(xu, w, &class)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t}\n\t\ttime.Sleep(100 * time.Millisecond)\n\t}\n\n}\n"
        },
        {
          "name": "module.go",
          "type": "blob",
          "size": 13.55078125,
          "content": "// This file is part of the program \"NoiseTorch-ng\".\n// Please see the LICENSE file for copyright information.\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"strings\"\n\n\t\"github.com/noisetorch/pulseaudio\"\n)\n\nconst (\n\tloaded = iota\n\tunloaded\n\tinconsistent\n)\n\n// the ugly and (partially) repeated strings are unforunately difficult to avoid, as it's what pulse audio expects\n\nfunc updateNoiseSupressorLoaded(ctx *ntcontext) {\n\tc := ctx.paClient\n\tupd, err := c.Updates()\n\tif err != nil {\n\t\tfmt.Printf(\"Error listening for updates: %v\\n\", err)\n\t}\n\n\tfor {\n\t\tctx.noiseSupressorState, ctx.virtualDeviceInUse = supressorState(ctx)\n\t\tif !c.Connected() {\n\t\t\tbreak\n\t\t}\n\n\t\t<-upd\n\t}\n}\n\nfunc supressorState(ctx *ntcontext) (int, bool) {\n\t//perform some checks to see if it looks like the noise supressor is loaded\n\tc := ctx.paClient\n\tvar inpLoaded, outLoaded, inputInc, outputInc bool\n\tvar virtualDeviceInUse bool = false\n\tif ctx.config.FilterInput {\n\t\tif ctx.serverInfo.servertype == servertype_pipewire {\n\t\t\tmodule, ladspasource, err := findModule(c, \"module-ladspa-source\", \"source_name='Filtered Microphone\")\n\t\t\tif err != nil {\n\t\t\t\tlog.Printf(\"Couldn't fetch module list to check for module-ladspa-source: %v\\n\", err)\n\t\t\t}\n\t\t\tvirtualDeviceInUse = virtualDeviceInUse || (module.NUsed != 0)\n\t\t\tinpLoaded = ladspasource\n\t\t\tinputInc = false\n\t\t} else {\n\t\t\t_, nullsink, err := findModule(c, \"module-null-sink\", \"sink_name=nui_mic_denoised_out\")\n\t\t\tif err != nil {\n\t\t\t\tlog.Printf(\"Couldn't fetch module list to check for module-null-sink: %v\\n\", err)\n\t\t\t}\n\t\t\t_, ladspasink, err := findModule(c, \"module-ladspa-sink\", \"sink_name=nui_mic_raw_in sink_master=nui_mic_denoised_out\")\n\t\t\tif err != nil {\n\t\t\t\tlog.Printf(\"Couldn't fetch module list to check for module-ladspa-sink: %v\\n\", err)\n\t\t\t}\n\t\t\t_, loopback, err := findModule(c, \"module-loopback\", \"sink=nui_mic_raw_in\")\n\t\t\tif err != nil {\n\t\t\t\tlog.Printf(\"Couldn't fetch module list to check for module-loopback: %v\\n\", err)\n\t\t\t}\n\t\t\tmodule, remap, err := findModule(c, \"module-remap-source\", \"master=nui_mic_denoised_out.monitor source_name=nui_mic_remap\")\n\t\t\tif err != nil {\n\t\t\t\tlog.Printf(\"Couldn't fetch module list to check for module-remap-source: %v\\n\", err)\n\t\t\t}\n\n\t\t\tvirtualDeviceInUse = virtualDeviceInUse || (module.NUsed != 0)\n\n\t\t\tif nullsink && ladspasink && loopback && remap {\n\t\t\t\tinpLoaded = true\n\t\t\t} else if nullsink || ladspasink || loopback || remap {\n\t\t\t\tinputInc = true\n\t\t\t}\n\t\t}\n\t} else {\n\t\tinpLoaded = true\n\t}\n\n\tif ctx.config.FilterOutput {\n\t\tif ctx.serverInfo.servertype == servertype_pipewire {\n\t\t\tmodule, ladspasink, err := findModule(c, \"module-ladspa-sink\", \"sink_name='Filtered Headphones'\")\n\t\t\tif err != nil {\n\t\t\t\tlog.Printf(\"Couldn't fetch module list to check for module-ladspa-sink: %v\\n\", err)\n\t\t\t}\n\t\t\tvirtualDeviceInUse = virtualDeviceInUse || (module.NUsed != 0)\n\t\t\toutLoaded = ladspasink\n\t\t\toutputInc = false\n\t\t} else {\n\t\t\t_, out, err := findModule(c, \"module-null-sink\", \"sink_name=nui_out_out_sink\")\n\t\t\tif err != nil {\n\t\t\t\tlog.Printf(\"Couldn't fetch module list to check for output module-ladspa-sink: %v\\n\", err)\n\t\t\t}\n\t\t\t_, lad, err := findModule(c, \"module-ladspa-sink\", \"sink_name=nui_out_ladspa\")\n\t\t\tif err != nil {\n\t\t\t\tlog.Printf(\"Couldn't fetch module list to check for output module-ladspa-sink: %v\\n\", err)\n\t\t\t}\n\t\t\t_, loop, err := findModule(c, \"module-loopback\", \"source=nui_out_out_sink.monitor\")\n\t\t\tif err != nil {\n\t\t\t\tlog.Printf(\"Couldn't fetch module list to check for output module-ladspa-sink: %v\\n\", err)\n\t\t\t}\n\t\t\tmodule, outin, err := findModule(c, \"module-null-sink\", \"sink_name=nui_out_in_sink\")\n\t\t\tif err != nil {\n\t\t\t\tlog.Printf(\"Couldn't fetch module list to check for output module-ladspa-sink: %v\\n\", err)\n\t\t\t}\n\t\t\tvirtualDeviceInUse = virtualDeviceInUse || (module.NUsed != 0)\n\t\t\t_, loop2, err := findModule(c, \"module-loopback\", \"source=nui_out_in_sink.monitor\")\n\t\t\tif err != nil {\n\t\t\t\tlog.Printf(\"Couldn't fetch module list to check for output module-ladspa-sink: %v\\n\", err)\n\t\t\t}\n\n\t\t\toutLoaded = out && lad && loop && outin && loop2\n\t\t\toutputInc = out || lad || loop || outin || loop2\n\t\t}\n\t} else {\n\t\toutLoaded = true\n\t}\n\n\tif (inpLoaded || !ctx.config.FilterInput) && (outLoaded || !ctx.config.FilterOutput) && !inputInc {\n\t\treturn loaded, virtualDeviceInUse\n\t}\n\n\tif (inpLoaded && ctx.config.FilterInput) || (outLoaded && ctx.config.FilterOutput) || inputInc || outputInc {\n\t\treturn inconsistent, virtualDeviceInUse\n\t}\n\n\treturn unloaded, virtualDeviceInUse\n}\n\nfunc loadSupressor(ctx *ntcontext, inp *device, out *device) error {\n\tif ctx.serverInfo.servertype == servertype_pulse {\n\t\tlog.Printf(\"Querying pulse rlimit\\n\")\n\t\tpid, err := getPulsePid()\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\tlim, err := getRlimit(pid)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tlog.Printf(\"Rlimit: %+v. Trying to remove.\\n\", lim)\n\n\t\tremoveRlimit(pid)\n\n\t\tdefer setRlimit(pid, &lim) // lowering RLIMIT doesn't require root\n\n\t\tnewLim, err := getRlimit(pid)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tlog.Printf(\"Rlimit: %+v\\n\", newLim)\n\t}\n\n\tif inp.checked {\n\t\tvar err error\n\t\tif ctx.serverInfo.servertype == servertype_pipewire {\n\t\t\terr = loadPipeWireInput(ctx, inp)\n\t\t} else {\n\t\t\terr = loadPulseInput(ctx, inp)\n\t\t}\n\t\tif err != nil {\n\t\t\tlog.Printf(\"Error loading input: %v\\n\", err)\n\t\t\treturn err\n\t\t}\n\t}\n\n\tif out.checked {\n\t\tvar err error\n\t\tif ctx.serverInfo.servertype == servertype_pipewire {\n\t\t\terr = loadPipeWireOutput(ctx, out)\n\t\t} else {\n\t\t\terr = loadPulseOutput(ctx, out)\n\t\t}\n\t\tif err != nil {\n\t\t\tlog.Printf(\"Error loading output: %v\\n\", err)\n\t\t\treturn err\n\t\t}\n\t}\n\n\treturn nil\n}\n\nfunc loadModule(ctx *ntcontext, module, args string) (uint32, error) {\n\tidx, err := ctx.paClient.LoadModule(module, args)\n\n\t//14 = module initialisation failed\n\tif paErr, ok := err.(*pulseaudio.Error); ok && paErr.Code == 14 {\n\t\tresetUI(ctx)\n\t\tctx.views.Push(makeErrorView(ctx, fmt.Sprintf(\"Could not load module '%s'. This is likely a problem with your system or distribution.\", module)))\n\t}\n\treturn idx, err\n}\n\nfunc loadPipeWireInput(ctx *ntcontext, inp *device) error {\n\tlog.Printf(\"Loading supressor for pipewire\\n\")\n\tidx, err := loadModule(ctx, \"module-ladspa-source\",\n\t\tfmt.Sprintf(\"source_name='Filtered Microphone for %s' master=%s \"+\n\t\t\t\"rate=48000 channels=1 \"+\n\t\t\t\"label=nt-filter plugin=%s control=%d\", inp.Name, inp.ID, ctx.librnnoise, ctx.config.Threshold))\n\n\tif err != nil {\n\t\treturn err\n\t}\n\tlog.Printf(\"Loaded ladspa source as idx: %d\\n\", idx)\n\treturn nil\n}\n\nfunc loadPipeWireOutput(ctx *ntcontext, out *device) error {\n\tlog.Printf(\"Loading supressor for pipewire\\n\")\n\tidx, err := loadModule(ctx, \"module-ladspa-sink\",\n\t\tfmt.Sprintf(\"sink_name='Filtered Headphones' master=%s \"+\n\t\t\t\"rate=48000 channels=1 \"+\n\t\t\t\"label=nt-filter plugin=%s control=%d\", out.ID, ctx.librnnoise, ctx.config.Threshold))\n\n\tif err != nil {\n\t\treturn err\n\t}\n\tlog.Printf(\"Loaded ladspa source as idx: %d\\n\", idx)\n\treturn nil\n}\n\nfunc loadPulseInput(ctx *ntcontext, inp *device) error {\n\tlog.Printf(\"Loading supressor for pulse\\n\")\n\tidx, err := loadModule(ctx, \"module-null-sink\", \"sink_name=nui_mic_denoised_out rate=48000\")\n\tif err != nil {\n\t\treturn err\n\t}\n\tlog.Printf(\"Loaded null sink as idx: %d\\n\", idx)\n\n\tidx, err = loadModule(ctx, \"module-ladspa-sink\",\n\t\tfmt.Sprintf(\"sink_name=nui_mic_raw_in sink_master=nui_mic_denoised_out \"+\n\t\t\t\"label=nt-filter plugin=%s control=%d\", ctx.librnnoise, ctx.config.Threshold))\n\tif err != nil {\n\t\treturn err\n\t}\n\tlog.Printf(\"Loaded ladspa sink as idx: %d\\n\", idx)\n\n\tif inp.dynamicLatency {\n\t\tidx, err = loadModule(ctx, \"module-loopback\",\n\t\t\tfmt.Sprintf(\"source=%s sink=nui_mic_raw_in channels=1 latency_msec=1 source_dont_move=true sink_dont_move=true\", inp.ID))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tlog.Printf(\"Loaded loopback as idx: %d\\n\", idx)\n\t} else {\n\t\tidx, err = loadModule(ctx, \"module-loopback\",\n\t\t\tfmt.Sprintf(\"source=%s sink=nui_mic_raw_in channels=1 latency_msec=50 source_dont_move=true sink_dont_move=true adjust_time=1\", inp.ID))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tlog.Printf(\"Loaded fixed latency loopback as idx: %d\\n\", idx)\n\t}\n\n\tidx, err = loadModule(ctx, \"module-remap-source\", fmt.Sprintf(`master=nui_mic_denoised_out.monitor `+\n\t\t`source_name=nui_mic_remap source_properties=\"device.description='Filtered Microphone for %s'\"`, inp.Name))\n\tif err != nil {\n\t\treturn err\n\t}\n\tlog.Printf(\"Loaded remap source as idx: %d\\n\", idx)\n\treturn nil\n}\n\nfunc loadPulseOutput(ctx *ntcontext, out *device) error {\n\t_, err := loadModule(ctx, \"module-null-sink\", `sink_name=nui_out_out_sink`)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t_, err = loadModule(ctx, \"module-null-sink\", `sink_name=nui_out_in_sink sink_properties=\"device.description='Filtered Headphones'\"`)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t_, err = loadModule(ctx, \"module-ladspa-sink\", fmt.Sprintf(`sink_name=nui_out_ladspa sink_master=nui_out_out_sink `+\n\t\t`label=nt-filter channels=1 plugin=%s control=%d rate=%d`,\n\t\tctx.librnnoise, ctx.config.Threshold, 48000))\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t_, err = loadModule(ctx, \"module-loopback\",\n\t\tfmt.Sprintf(\"source=nui_out_out_sink.monitor sink=%s channels=2 latency_msec=50 source_dont_move=true sink_dont_move=true\", out.ID))\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t_, err = loadModule(ctx, \"module-loopback\",\n\t\tfmt.Sprintf(\"source=nui_out_in_sink.monitor sink=nui_out_ladspa channels=1 latency_msec=50 source_dont_move=true sink_dont_move=true\"))\n\tif err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n\nfunc unloadSupressor(ctx *ntcontext) error {\n\tif ctx.serverInfo.servertype == servertype_pipewire {\n\t\treturn unloadSupressorPipeWire(ctx)\n\t} else {\n\t\treturn unloadSupressorPulse(ctx)\n\t}\n}\n\nfunc unloadSupressorPipeWire(ctx *ntcontext) error {\n\tlog.Printf(\"Unloading modules for pipewire\\n\")\n\n\tlog.Printf(\"Searching for module-ladspa-source\\n\")\n\tc := ctx.paClient\n\tm, found, err := findModule(c, \"module-ladspa-source\", \"source_name='Filtered Microphone\")\n\tif err != nil {\n\t\treturn err\n\t}\n\tif found {\n\t\tlog.Printf(\"Found module-ladspa-source at id [%d], sending unload command\\n\", m.Index)\n\t\tc.UnloadModule(m.Index)\n\t}\n\n\tlog.Printf(\"Searching for module-ladspa-sink\\n\")\n\tm, found, err = findModule(c, \"module-ladspa-sink\", \"sink_name='Filtered Headphones'\")\n\tif err != nil {\n\t\treturn err\n\t}\n\tif found {\n\t\tlog.Printf(\"Found module-ladspa-sink at id [%d], sending unload command\\n\", m.Index)\n\t\tc.UnloadModule(m.Index)\n\t}\n\treturn nil\n}\n\nfunc unloadSupressorPulse(ctx *ntcontext) error {\n\tlog.Printf(\"Unloading modules for pulseaudio\\n\")\n\n\tif pid, err := getPulsePid(); err == nil {\n\t\tif lim, err := getRlimit(pid); err == nil {\n\t\t\tlog.Printf(\"Trying to remove rlimit. Limit is: %+v\\n\", lim)\n\t\t\tremoveRlimit(pid)\n\t\t\tnewLim, _ := getRlimit(pid)\n\t\t\tlog.Printf(\"Rlimit: %+v\\n\", newLim)\n\t\t\tdefer setRlimit(pid, &lim)\n\t\t}\n\n\t}\n\n\tlog.Printf(\"Searching for null-sink\\n\")\n\tc := ctx.paClient\n\tm, found, err := findModule(c, \"module-null-sink\", \"sink_name=nui_mic_denoised_out\")\n\tif err != nil {\n\t\treturn err\n\t}\n\tif found {\n\t\tlog.Printf(\"Found null-sink at id [%d], sending unload command\\n\", m.Index)\n\t\tc.UnloadModule(m.Index)\n\t}\n\n\tlog.Printf(\"Searching for ladspa-sink\\n\")\n\tm, found, err = findModule(c, \"module-ladspa-sink\", \"sink_name=nui_mic_raw_in sink_master=nui_mic_denoised_out\")\n\tif err != nil {\n\t\treturn err\n\t}\n\tif found {\n\t\tlog.Printf(\"Found ladspa-sink at id [%d], sending unload command\\n\", m.Index)\n\t\tc.UnloadModule(m.Index)\n\t}\n\n\tlog.Printf(\"Searching for loopback\\n\")\n\tm, found, err = findModule(c, \"module-loopback\", \"sink=nui_mic_raw_in\")\n\tif err != nil {\n\t\treturn err\n\t}\n\tif found {\n\t\tlog.Printf(\"Found loopback at id [%d], sending unload command\\n\", m.Index)\n\t\tc.UnloadModule(m.Index)\n\t}\n\n\tlog.Printf(\"Searching for remap-source\\n\")\n\tm, found, err = findModule(c, \"module-remap-source\", \"master=nui_mic_denoised_out.monitor source_name=nui_mic_remap\")\n\tif err != nil {\n\t\treturn err\n\t}\n\tif found {\n\t\tlog.Printf(\"Found remap source at id [%d], sending unload command\\n\", m.Index)\n\t\tc.UnloadModule(m.Index)\n\t}\n\n\tlog.Printf(\"Searching for output module-null-sink\\n\")\n\tm, found, err = findModule(c, \"module-null-sink\", \"sink_name=nui_out_out_sink\")\n\tif err != nil {\n\t\treturn err\n\t}\n\tif found {\n\t\tlog.Printf(\"Found output null sink at id [%d], sending unload command\\n\", m.Index)\n\t\tc.UnloadModule(m.Index)\n\t}\n\n\tlog.Printf(\"Searching for output module-null-sink\\n\")\n\tm, found, err = findModule(c, \"module-null-sink\", \"sink_name=nui_out_in_sink\")\n\tif err != nil {\n\t\treturn err\n\t}\n\tif found {\n\t\tlog.Printf(\"Found output null sink at id [%d], sending unload command\\n\", m.Index)\n\t\tc.UnloadModule(m.Index)\n\t}\n\n\tlog.Printf(\"Searching for output module-ladspa-sink\\n\")\n\tm, found, err = findModule(c, \"module-ladspa-sink\", \"sink_name=nui_out_ladspa\")\n\tif err != nil {\n\t\treturn err\n\t}\n\tif found {\n\t\tlog.Printf(\"Found output ladspa sink at id [%d], sending unload command\\n\", m.Index)\n\t\tc.UnloadModule(m.Index)\n\t}\n\n\tlog.Printf(\"Searching for output module-loopback\\n\")\n\tm, found, err = findModule(c, \"module-loopback\", \"source=nui_out_out_sink.monitor\")\n\tif err != nil {\n\t\treturn err\n\t}\n\tif found {\n\t\tlog.Printf(\"Found output loopback at id [%d], sending unload command\\n\", m.Index)\n\t\tc.UnloadModule(m.Index)\n\t}\n\n\tlog.Printf(\"Searching for output module-loopback\\n\")\n\tm, found, err = findModule(c, \"module-loopback\", \"source=nui_out_in_sink.monitor\")\n\tif err != nil {\n\t\treturn err\n\t}\n\tif found {\n\t\tlog.Printf(\"Found output loopback at id [%d], sending unload command\\n\", m.Index)\n\t\tc.UnloadModule(m.Index)\n\t}\n\n\treturn nil\n}\n\n// Finds a module by exactly matching the module name, and checking if the second string is a substring of the argument\nfunc findModule(c *pulseaudio.Client, name string, argMatch string) (module pulseaudio.Module, found bool, err error) {\n\tlst, err := c.ModuleList()\n\n\tif err != nil {\n\t\treturn pulseaudio.Module{}, false, err\n\t}\n\tfor _, m := range lst {\n\t\tif m.Name == name && strings.Contains(m.Argument, argMatch) {\n\t\t\treturn m, true, nil\n\t\t}\n\t}\n\n\treturn pulseaudio.Module{}, false, nil\n}\n"
        },
        {
          "name": "rlimit.go",
          "type": "blob",
          "size": 1.3193359375,
          "content": "// This file is part of the program \"NoiseTorch-ng\".\n// Please see the LICENSE file for copyright information.\n\npackage main\n\nimport (\n\t\"log\"\n\t\"os\"\n\t\"strconv\"\n\t\"strings\"\n\t\"syscall\"\n\t\"unsafe\"\n\n\t\"github.com/noisetorch/pulseaudio\"\n)\n\nconst rlimitRTTime = 15\n\nfunc getPulsePid() (int, error) {\n\tpulsepidfile, err := pulseaudio.RuntimePath(\"pid\")\n\tif err != nil {\n\t\treturn 0, err\n\t}\n\tpidbuf, err := os.ReadFile(pulsepidfile)\n\tif err != nil {\n\t\treturn 0, err\n\t}\n\tpid, err := strconv.Atoi(strings.TrimSpace(string(pidbuf)))\n\tif err != nil {\n\t\treturn 0, err\n\t}\n\treturn pid, nil\n}\n\nfunc getRlimit(pid int) (syscall.Rlimit, error) {\n\tvar res syscall.Rlimit\n\terr := pRlimit(pid, rlimitRTTime, nil, &res)\n\treturn res, err\n}\n\nfunc setRlimit(pid int, new *syscall.Rlimit) error {\n\tvar junk syscall.Rlimit\n\terr := pRlimit(pid, rlimitRTTime, new, &junk)\n\treturn err\n}\n\nfunc removeRlimit(pid int) {\n\tconst MaxUint = ^uint64(0)\n\tnew := syscall.Rlimit{Cur: MaxUint, Max: MaxUint}\n\terr := setRlimit(pid, &new)\n\tif err != nil {\n\t\tlog.Printf(\"Couldn't set rlimit with caps\\n\")\n\t}\n}\n\nfunc pRlimit(pid int, limit uintptr, new *syscall.Rlimit, old *syscall.Rlimit) error {\n\t_, _, errno := syscall.RawSyscall6(syscall.SYS_PRLIMIT64,\n\t\tuintptr(pid),\n\t\tlimit,\n\t\tuintptr(unsafe.Pointer(new)),\n\t\tuintptr(unsafe.Pointer(old)), 0, 0)\n\tif errno != 0 {\n\t\treturn errno\n\t}\n\treturn nil\n}\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "ui.go",
          "type": "blob",
          "size": 12.7626953125,
          "content": "// This file is part of the program \"NoiseTorch-ng\".\n// Please see the LICENSE file for copyright information.\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"image/color\"\n\t\"log\"\n\t\"os\"\n\t\"os/exec\"\n\t\"syscall\"\n\t\"time\"\n\n\t\"github.com/aarzilli/nucular\"\n\t\"github.com/aarzilli/nucular/label\"\n\t\"github.com/noisetorch/pulseaudio\"\n)\n\ntype ntcontext struct {\n\tinputList                []device\n\toutputList               []device\n\tnoiseSupressorState      int\n\tpaClient                 *pulseaudio.Client\n\tlibrnnoise               string\n\tsourceListColdWidthIndex int\n\tconfig                   *config\n\tlicenseTextArea          nucular.TextEditor\n\tmasterWindow             *nucular.MasterWindow\n\tupdate                   updateui\n\treloadRequired           bool\n\thaveCapabilities         bool\n\tcapsMismatch             bool\n\tviews                    *ViewStack\n\tserverInfo               audioserverinfo\n\tvirtualDeviceInUse       bool\n}\n\n//TODO pull some of these strucs out of UI, they don't belong here\ntype audioserverinfo struct {\n\tservertype       uint\n\tname             string\n\tmajor            int\n\tminor            int\n\tpatch            int\n\toutdatedPipeWire bool\n}\n\nconst (\n\tservertype_pulse = iota\n\tservertype_pipewire\n)\n\nvar green = color.RGBA{34, 187, 69, 255}\nvar red = color.RGBA{255, 70, 70, 255}\nvar orange = color.RGBA{255, 140, 0, 255}\nvar lightBlue = color.RGBA{173, 216, 230, 255}\n\nconst notice = \"NoiseTorch Next Gen (stylized NoiseTorch-ng) is a continuation of the NoiseTorch\\nproject after it was abandoned by its original author. Please do not confuse\\nboth programs. You may convey modified versions of this program under its name.\"\n\nfunc updatefn(ctx *ntcontext, w *nucular.Window) {\n\tcurrView := ctx.views.Peek()\n\tcurrView(ctx, w)\n}\n\nfunc mainView(ctx *ntcontext, w *nucular.Window) {\n\n\tw.MenubarBegin()\n\n\tw.Row(10).Dynamic(1)\n\tif w := w.Menu(label.TA(\"About\", \"LC\"), 120, nil); w != nil {\n\t\tw.Row(10).Dynamic(1)\n\t\tif w.MenuItem(label.T(\"Licenses\")) {\n\t\t\tctx.views.Push(licenseView)\n\t\t}\n\t\tw.Row(10).Dynamic(1)\n\t\tif w.MenuItem(label.T(\"Website\")) {\n\t\t\texec.Command(\"xdg-open\", websiteURL).Run()\n\t\t}\n\t\tif w.MenuItem(label.T(\"Version\")) {\n\t\t\tctx.views.Push(versionView)\n\t\t}\n\t}\n\n\tw.MenubarEnd()\n\n\tw.Row(15).Dynamic(1)\n\n\tif ctx.noiseSupressorState == loaded {\n\t\tif ctx.virtualDeviceInUse {\n\t\t\tw.LabelColored(\"Filtering active\", \"RC\", green)\n\t\t} else {\n\t\t\tw.LabelColored(\"Filtering unconfigured\", \"RC\", lightBlue)\n\t\t}\n\t} else if ctx.noiseSupressorState == unloaded {\n\t\t_, inpOk := inputSelection(ctx)\n\t\t_, outOk := outputSelection(ctx)\n\t\tif validConfiguration(ctx, inpOk, outOk) {\n\t\t\tw.LabelColored(\"Filtering inactive\", \"RC\", red)\n\t\t} else {\n\t\t\tw.LabelColored(\"Filtering unconfigured\", \"RC\", lightBlue)\n\t\t}\n\t} else if ctx.noiseSupressorState == inconsistent {\n\t\tw.LabelColored(\"Inconsistent state, please unload first.\", \"RC\", orange)\n\t}\n\n\tif ctx.serverInfo.servertype == servertype_pipewire {\n\t\tw.Row(20).Dynamic(1)\n\t\tw.Label(\"Running in PipeWire mode. PipeWire support is currently alpha quality. Please report bugs.\", \"LC\")\n\t}\n\n\tif ctx.update.available && !ctx.update.triggered {\n\t\tw.Row(20).Ratio(0.9, 0.1)\n\t\tw.LabelColored(\"Update available! Click to install version: \"+ctx.update.serverVersion, \"LC\", green)\n\t\tif w.ButtonText(\"Update\") {\n\t\t\tctx.update.triggered = true\n\t\t\tgo update(ctx)\n\t\t\t(*ctx.masterWindow).Changed()\n\t\t}\n\t}\n\n\tif ctx.update.triggered {\n\t\tw.Row(20).Dynamic(1)\n\t\tw.Label(ctx.update.updatingText, \"CC\")\n\t}\n\n\tif w.TreePush(nucular.TreeTab, \"Settings\", true) {\n\t\tw.Row(15).Dynamic(2)\n\t\tif w.CheckboxText(\"Display Monitor Sources\", &ctx.config.DisplayMonitorSources) {\n\t\t\tctx.sourceListColdWidthIndex++ //recompute the with because of new elements\n\t\t\tgo writeConfig(ctx.config)\n\t\t}\n\n\t\tw.Spacing(1)\n\n\t\tw.Row(25).Ratio(0.5, 0.45, 0.05)\n\t\tw.Label(\"Voice Activation Threshold\", \"LC\")\n\t\tif w.Input().Mouse.HoveringRect(w.LastWidgetBounds) {\n\t\t\tw.Tooltip(\"If you have a decent microphone, you can usually turn this all the way up.\")\n\t\t}\n\t\tif w.SliderInt(0, &ctx.config.Threshold, 95, 1) {\n\t\t\tgo writeConfig(ctx.config)\n\t\t\tctx.reloadRequired = true\n\t\t}\n\t\tw.Label(fmt.Sprintf(\"%d%%\", ctx.config.Threshold), \"RC\")\n\n\t\tif ctx.reloadRequired {\n\t\t\tw.Row(20).Dynamic(1)\n\t\t\tw.LabelColored(\"Reloading the filter(s) is required to apply these changes.\", \"LC\", orange)\n\t\t}\n\n\t\tw.Row(15).Dynamic(2)\n\t\tif w.CheckboxText(\"Filter Microphone\", &ctx.config.FilterInput) {\n\t\t\tctx.sourceListColdWidthIndex++ //recompute the with because of new elements\n\t\t\tgo writeConfig(ctx.config)\n\t\t\tgo (func() { ctx.noiseSupressorState, _ = supressorState(ctx) })()\n\t\t}\n\n\t\tif w.CheckboxText(\"Filter Headphones\", &ctx.config.FilterOutput) {\n\t\t\tctx.sourceListColdWidthIndex++ //recompute the with because of new elements\n\t\t\tgo writeConfig(ctx.config)\n\t\t\tgo (func() { ctx.noiseSupressorState, _ = supressorState(ctx) })()\n\t\t}\n\n\t\tw.TreePop()\n\t}\n\tif ctx.config.FilterInput && w.TreePush(nucular.TreeTab, \"Select Microphone\", true) {\n\t\tw.Row(15).Dynamic(1)\n\t\tw.Label(\"Select an input device below:\", \"LC\")\n\n\t\tfor i := range ctx.inputList {\n\t\t\tel := &ctx.inputList[i]\n\n\t\t\tif el.isMonitor && !ctx.config.DisplayMonitorSources {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tw.Row(15).Static()\n\t\t\tw.LayoutFitWidth(0, 0)\n\t\t\tif w.CheckboxText(\"\", &el.checked) {\n\t\t\t\tensureOnlyOneInputSelected(&ctx.inputList, el)\n\t\t\t}\n\n\t\t\tw.LayoutFitWidth(ctx.sourceListColdWidthIndex, 0)\n\t\t\tif el.dynamicLatency {\n\t\t\t\tw.Label(el.Name, \"LC\")\n\t\t\t} else {\n\t\t\t\tw.LabelColored(\"(incompatible?) \"+el.Name, \"LC\", orange)\n\t\t\t}\n\t\t}\n\n\t\tw.TreePop()\n\t}\n\n\tif ctx.config.FilterOutput && w.TreePush(nucular.TreeTab, \"Select Headphones\", true) {\n\t\tw.Row(15).Dynamic(1)\n\t\tw.Label(\"Select an output device below:\", \"LC\")\n\n\t\tfor i := range ctx.outputList {\n\t\t\tel := &ctx.outputList[i]\n\n\t\t\tif el.isMonitor && !ctx.config.DisplayMonitorSources {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tw.Row(15).Static()\n\t\t\tw.LayoutFitWidth(0, 0)\n\t\t\tif w.CheckboxText(\"\", &el.checked) {\n\t\t\t\tensureOnlyOneInputSelected(&ctx.outputList, el)\n\t\t\t}\n\n\t\t\tw.LayoutFitWidth(ctx.sourceListColdWidthIndex, 0)\n\t\t\tif el.dynamicLatency {\n\t\t\t\tw.Label(el.Name, \"LC\")\n\t\t\t} else {\n\t\t\t\tw.LabelColored(\"(incompatible?) \"+el.Name, \"LC\", orange)\n\t\t\t}\n\t\t}\n\n\t\tw.TreePop()\n\t}\n\n\tw.Row(15).Dynamic(1)\n\tw.Spacing(1)\n\n\tw.Row(25).Dynamic(2)\n\tif ctx.noiseSupressorState != unloaded {\n\t\tif w.ButtonText(\"Unload Filter(s)\") {\n\t\t\tctx.reloadRequired = false\n\t\t\tif ctx.virtualDeviceInUse {\n\t\t\t\tconfirm := makeConfirmView(ctx,\n\t\t\t\t\t\"Virtual Device in Use\",\n\t\t\t\t\t\"Some applications may behave weirdly when you remove a device they're currently using\",\n\t\t\t\t\t\"Unload\",\n\t\t\t\t\t\"Go back\",\n\t\t\t\t\tfunc() { uiUnloadFilters(ctx) },\n\t\t\t\t\tfunc() {})\n\t\t\t\tctx.views.Push(confirm)\n\t\t\t} else {\n\t\t\t\tgo uiUnloadFilters(ctx)\n\t\t\t}\n\t\t}\n\t} else {\n\t\tw.Spacing(1)\n\t}\n\ttxt := \"Load Filter(s)\"\n\tif ctx.noiseSupressorState == loaded {\n\t\ttxt = \"Reload Filter(s)\"\n\t}\n\n\tinp, inpOk := inputSelection(ctx)\n\tout, outOk := outputSelection(ctx)\n\tif validConfiguration(ctx, inpOk, outOk) {\n\t\tif w.ButtonText(txt) {\n\t\t\tctx.reloadRequired = false\n\n\t\t\tif ctx.virtualDeviceInUse {\n\t\t\t\tconfirm := makeConfirmView(ctx,\n\t\t\t\t\t\"Virtual Device in Use\",\n\t\t\t\t\t\"Some applications may behave weirdly when you reload a device they're currently using\",\n\t\t\t\t\t\"Reload\",\n\t\t\t\t\t\"Go back\",\n\t\t\t\t\tfunc() { uiReloadFilters(ctx, inp, out) },\n\t\t\t\t\tfunc() {})\n\t\t\t\tctx.views.Push(confirm)\n\t\t\t} else {\n\t\t\t\tgo uiReloadFilters(ctx, inp, out)\n\t\t\t}\n\t\t}\n\t} else {\n\t\tw.Spacing(1)\n\t}\n\n}\n\nfunc uiUnloadFilters(ctx *ntcontext) {\n\tctx.views.Push(loadingView)\n\tif err := unloadSupressor(ctx); err != nil {\n\t\tlog.Println(err)\n\t}\n\t//wait until PA reports it has actually loaded it, timeout at 10s\n\tfor i := 0; i < 20; i++ {\n\t\tif state, _ := supressorState(ctx); state != unloaded {\n\t\t\ttime.Sleep(time.Millisecond * 500)\n\t\t}\n\t}\n\tctx.views.Pop()\n\t(*ctx.masterWindow).Changed()\n}\n\nfunc uiReloadFilters(ctx *ntcontext, inp, out device) {\n\tctx.views.Push(loadingView)\n\tif ctx.noiseSupressorState == loaded {\n\t\tif err := unloadSupressor(ctx); err != nil {\n\t\t\tlog.Println(err)\n\t\t}\n\t}\n\tif err := loadSupressor(ctx, &inp, &out); err != nil {\n\t\tlog.Println(err)\n\t}\n\n\t//wait until PA reports it has actually loaded it, timeout at 10s\n\tfor i := 0; i < 20; i++ {\n\t\tif state, _ := supressorState(ctx); state != loaded {\n\t\t\ttime.Sleep(time.Millisecond * 500)\n\t\t}\n\t}\n\tctx.config.LastUsedInput = inp.ID\n\tctx.config.LastUsedOutput = out.ID\n\tgo writeConfig(ctx.config)\n\tctx.views.Pop()\n\t(*ctx.masterWindow).Changed()\n}\n\nfunc ensureOnlyOneInputSelected(inps *[]device, current *device) {\n\tif !current.checked {\n\t\treturn\n\t}\n\tfor i := range *inps {\n\t\tel := &(*inps)[i]\n\t\tel.checked = false\n\t}\n\tcurrent.checked = true\n}\n\nfunc inputSelection(ctx *ntcontext) (device, bool) {\n\tif !ctx.config.FilterInput {\n\t\treturn device{}, false\n\t}\n\n\tfor _, in := range ctx.inputList {\n\t\tif in.checked && (!in.isMonitor || ctx.config.DisplayMonitorSources) {\n\t\t\treturn in, true\n\t\t}\n\t}\n\treturn device{}, false\n}\n\nfunc outputSelection(ctx *ntcontext) (device, bool) {\n\tif !ctx.config.FilterOutput {\n\t\treturn device{}, false\n\t}\n\n\tfor _, out := range ctx.outputList {\n\t\tif out.checked {\n\t\t\treturn out, true\n\t\t}\n\t}\n\treturn device{}, false\n}\n\nfunc validConfiguration(ctx *ntcontext, inpOk bool, outOk bool) bool {\n\treturn (!ctx.config.FilterInput || (ctx.config.FilterInput && inpOk)) &&\n\t\t(!ctx.config.FilterOutput || (ctx.config.FilterOutput && outOk)) &&\n\t\t(ctx.config.FilterInput || ctx.config.FilterOutput) &&\n\t\tctx.noiseSupressorState != inconsistent\n}\n\nfunc loadingView(ctx *ntcontext, w *nucular.Window) {\n\tw.Row(50).Dynamic(1)\n\tw.Label(\"Working...\", \"CB\")\n\tw.Row(50).Dynamic(1)\n\tw.Label(\"(this may take a few seconds)\", \"CB\")\n}\n\nfunc licenseView(ctx *ntcontext, w *nucular.Window) {\n\tw.Row(40).Dynamic(1) // space above notice\n\tw.Label(notice, \"CB\")\n\tw.Row(40).Dynamic(1)  // space below notice\n\tw.Row(255).Dynamic(1) // space for license text area\n\tfield := &ctx.licenseTextArea\n\tfield.Flags |= nucular.EditMultiline\n\tif len(field.Buffer) < 1 {\n\t\tfield.Buffer = []rune(licenseString) // nolint\n\t}\n\tfield.Edit(w)\n\n\tw.Row(20).Dynamic(2)\n\tw.Spacing(1)\n\tif w.ButtonText(\"OK\") {\n\t\tctx.views.Pop()\n\t}\n}\n\nfunc versionView(ctx *ntcontext, w *nucular.Window) {\n\tw.Row(50).Dynamic(1)\n\tw.Label(\"Version\", \"CB\")\n\tw.Row(50).Dynamic(1)\n\tw.Label(notice, \"CB\")\n\tw.Row(50).Dynamic(1)\n\tw.Label(fmt.Sprintf(\"%s (%s)\", version, distribution), \"CB\")\n\tw.Row(50).Dynamic(1)\n\tw.Spacing(1)\n\tw.Row(20).Dynamic(2)\n\tw.Spacing(1)\n\tif w.ButtonText(\"OK\") {\n\t\tctx.views.Pop()\n\t}\n}\n\nfunc connectView(ctx *ntcontext, w *nucular.Window) {\n\tw.Row(50).Dynamic(1)\n\tw.Label(\"Connecting to pulseaudio...\", \"CB\")\n}\n\nfunc capabilitiesView(ctx *ntcontext, w *nucular.Window) {\n\tw.Row(15).Dynamic(1)\n\tw.Label(\"This program does not have the capabilities to function properly.\", \"CB\")\n\tw.Row(15).Dynamic(1)\n\tw.Label(\"We require CAP_SYS_RESOURCE. If that doesn't mean anything to you, don't worry. I'll fix it for you.\", \"CB\")\n\tif ctx.capsMismatch {\n\t\tw.Row(15).Dynamic(1)\n\t\tw.LabelColored(\"Warning: File has CAP_SYS_RESOURCE but our process doesn't.\", \"CB\", orange)\n\t\tw.Row(15).Dynamic(1)\n\t\tw.LabelColored(\"Check if your filesystem has nosuid set or check the troubleshooting page.\", \"CB\", orange)\n\t}\n\tw.Row(40).Dynamic(1)\n\tw.Row(25).Dynamic(1)\n\tif w.ButtonText(\"Grant capability (requires root)\") {\n\t\terr := pkexecSetcapSelf()\n\t\tif err != nil {\n\t\t\tctx.views.Push(makeErrorView(ctx, err.Error()))\n\t\t\treturn\n\t\t}\n\t\tself, err := os.Executable()\n\t\tif err != nil {\n\t\t\tctx.views.Push(makeErrorView(ctx, err.Error()))\n\t\t\treturn\n\t\t}\n\t\terr = syscall.Exec(self, []string{\"\"}, os.Environ())\n\t\tif err != nil {\n\t\t\tctx.views.Push(makeErrorView(ctx, err.Error()))\n\t\t\treturn\n\t\t}\n\t}\n}\n\nfunc makeErrorView(ctx *ntcontext, errorMsg string) ViewFunc {\n\treturn func(ctx *ntcontext, w *nucular.Window) {\n\t\tw.Row(15).Dynamic(1)\n\t\tw.Label(\"Error\", \"CB\")\n\t\tw.Row(15).Dynamic(1)\n\t\tw.Label(errorMsg, \"CB\")\n\t\tw.Row(40).Dynamic(1)\n\t\tw.Row(25).Dynamic(1)\n\t\tif w.ButtonText(\"OK\") {\n\t\t\tctx.views.Pop()\n\t\t\treturn\n\t\t}\n\t}\n}\n\nfunc makeFatalErrorView(ctx *ntcontext, errorMsg string) ViewFunc {\n\treturn func(ctx *ntcontext, w *nucular.Window) {\n\t\tw.Row(15).Dynamic(1)\n\t\tw.Label(\"Fatal Error\", \"CB\")\n\t\tw.Row(15).Dynamic(1)\n\t\tw.Label(errorMsg, \"CB\")\n\t\tw.Row(40).Dynamic(1)\n\t\tw.Row(25).Dynamic(1)\n\t\tif w.ButtonText(\"Quit\") {\n\t\t\tos.Exit(1)\n\t\t\treturn\n\t\t}\n\t}\n}\n\nfunc makeConfirmView(ctx *ntcontext, title, text, confirmText, denyText string, confirmfunc, denyfunc func()) ViewFunc {\n\treturn func(ctx *ntcontext, w *nucular.Window) {\n\t\tw.Row(15).Dynamic(1)\n\t\tw.Label(title, \"CB\")\n\t\tw.Row(15).Dynamic(1)\n\t\tw.Label(text, \"CB\")\n\t\tw.Row(40).Dynamic(1)\n\t\tw.Row(25).Dynamic(2)\n\t\tif w.ButtonText(denyText) {\n\t\t\tctx.views.Pop()\n\t\t\tgo denyfunc()\n\t\t\treturn\n\t\t}\n\t\tif w.ButtonText(confirmText) {\n\t\t\tctx.views.Pop()\n\t\t\tgo confirmfunc()\n\t\t\treturn\n\t\t}\n\t}\n}\n\nfunc resetUI(ctx *ntcontext) {\n\tctx.views = NewViewStack()\n\tctx.views.Push(mainView)\n\n\tif !ctx.haveCapabilities {\n\t\tctx.views.Push(capabilitiesView)\n\t}\n\n\tif ctx.serverInfo.outdatedPipeWire {\n\t\tctx.views.Push(makeFatalErrorView(ctx,\n\t\t\tfmt.Sprintf(\"Your PipeWire version is too old. Detected %d.%d.%d. Require at least 0.3.28.\",\n\t\t\t\tctx.serverInfo.major, ctx.serverInfo.minor, ctx.serverInfo.patch)))\n\t}\n}\n"
        },
        {
          "name": "untar.go",
          "type": "blob",
          "size": 5.28515625,
          "content": "/*\nCopyright (c) 2009 The Go Authors. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n// This is yoinked from https://github.com/golang/build/blob/master/internal/untar/untar.go\n// which is unfortunately an internal package we can't import, but it's exactly what we need.\n// So just copy paste it.\n\npackage main\n\nimport (\n\t\"archive/tar\"\n\t\"compress/gzip\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n\t\"path\"\n\t\"path/filepath\"\n\t\"strings\"\n\t\"time\"\n)\n\n// TODO(bradfitz): this was copied from x/build/cmd/buildlet/buildlet.go\n// but there were some buildlet-specific bits in there, so the code is\n// forked for now.  Unfork and add some opts arguments here, so the\n// buildlet can use this code somehow.\n\n// Untar reads the gzip-compressed tar file from r and writes it into dir.\nfunc Untar(r io.Reader, dir string) error {\n\treturn untar(r, dir)\n}\n\nfunc untar(r io.Reader, dir string) (err error) {\n\tt0 := time.Now()\n\tnFiles := 0\n\tmadeDir := map[string]bool{}\n\tdefer func() {\n\t\ttd := time.Since(t0)\n\t\tif err == nil {\n\t\t\tlog.Printf(\"extracted tarball into %s: %d files, %d dirs (%v)\", dir, nFiles, len(madeDir), td)\n\t\t} else {\n\t\t\tlog.Printf(\"error extracting tarball into %s after %d files, %d dirs, %v: %v\", dir, nFiles, len(madeDir), td, err)\n\t\t}\n\t}()\n\tzr, err := gzip.NewReader(r)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"requires gzip-compressed body: %v\", err)\n\t}\n\ttr := tar.NewReader(zr)\n\tloggedChtimesError := false\n\tfor {\n\t\tf, err := tr.Next()\n\t\tif err == io.EOF {\n\t\t\tbreak\n\t\t}\n\t\tif err != nil {\n\t\t\tlog.Printf(\"tar reading error: %v\", err)\n\t\t\treturn fmt.Errorf(\"tar error: %v\", err)\n\t\t}\n\t\tif !validRelPath(f.Name) {\n\t\t\treturn fmt.Errorf(\"tar contained invalid name error %q\", f.Name)\n\t\t}\n\t\trel := filepath.FromSlash(f.Name)\n\t\tabs := filepath.Join(dir, rel)\n\n\t\tfi := f.FileInfo()\n\t\tmode := fi.Mode()\n\t\tswitch {\n\t\tcase mode.IsRegular():\n\t\t\t// Make the directory. This is redundant because it should\n\t\t\t// already be made by a directory entry in the tar\n\t\t\t// beforehand. Thus, don't check for errors; the next\n\t\t\t// write will fail with the same error.\n\t\t\tdir := filepath.Dir(abs)\n\t\t\tif !madeDir[dir] {\n\t\t\t\tif err := os.MkdirAll(filepath.Dir(abs), 0755); err != nil {\n\t\t\t\t\treturn err\n\t\t\t\t}\n\t\t\t\tmadeDir[dir] = true\n\t\t\t}\n\t\t\twf, err := os.OpenFile(abs, os.O_RDWR|os.O_CREATE|os.O_TRUNC, mode.Perm())\n\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tn, err := io.Copy(wf, tr)\n\t\t\tif closeErr := wf.Close(); closeErr != nil && err == nil {\n\t\t\t\terr = closeErr\n\t\t\t}\n\t\t\tif err != nil {\n\t\t\t\treturn fmt.Errorf(\"error writing to %s: %v\", abs, err)\n\t\t\t}\n\t\t\tif n != f.Size {\n\t\t\t\treturn fmt.Errorf(\"only wrote %d bytes to %s; expected %d\", n, abs, f.Size)\n\t\t\t}\n\t\t\tmodTime := f.ModTime\n\t\t\tif modTime.After(t0) {\n\t\t\t\t// Clamp modtimes at system time. See\n\t\t\t\t// golang.org/issue/19062 when clock on\n\t\t\t\t// buildlet was behind the gitmirror server\n\t\t\t\t// doing the git-archive.\n\t\t\t\tmodTime = t0\n\t\t\t}\n\t\t\tif !modTime.IsZero() {\n\t\t\t\tif err := os.Chtimes(abs, modTime, modTime); err != nil && !loggedChtimesError {\n\t\t\t\t\t// benign error. Gerrit doesn't even set the\n\t\t\t\t\t// modtime in these, and we don't end up relying\n\t\t\t\t\t// on it anywhere (the gomote push command relies\n\t\t\t\t\t// on digests only), so this is a little pointless\n\t\t\t\t\t// for now.\n\t\t\t\t\tlog.Printf(\"error changing modtime: %v (further Chtimes errors suppressed)\", err)\n\t\t\t\t\tloggedChtimesError = true // once is enough\n\t\t\t\t}\n\t\t\t}\n\t\t\tnFiles++\n\t\tcase mode.IsDir():\n\t\t\tif err := os.MkdirAll(abs, 0755); err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tmadeDir[abs] = true\n\t\tdefault:\n\t\t\treturn fmt.Errorf(\"tar file entry %s contained unsupported file type %v\", f.Name, mode)\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc validRelativeDir(dir string) bool {\n\tif strings.Contains(dir, `\\`) || path.IsAbs(dir) {\n\t\treturn false\n\t}\n\tdir = path.Clean(dir)\n\tif strings.HasPrefix(dir, \"../\") || strings.HasSuffix(dir, \"/..\") || dir == \"..\" {\n\t\treturn false\n\t}\n\treturn true\n}\n\nfunc validRelPath(p string) bool {\n\tif p == \"\" || strings.Contains(p, `\\`) || strings.HasPrefix(p, \"/\") || strings.Contains(p, \"../\") {\n\t\treturn false\n\t}\n\treturn true\n}\n"
        },
        {
          "name": "update.go",
          "type": "blob",
          "size": 5.634765625,
          "content": "// This file is part of the program \"NoiseTorch-ng\".\n// Please see the LICENSE file for copyright information.\n\npackage main\n\nimport (\n\t\"bytes\"\n\t\"crypto/ed25519\"\n\t\"encoding/base64\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"net/http\"\n\t\"os\"\n\t\"strings\"\n\t\"time\"\n\n\t\"github.com/blang/semver/v4\"\n)\n\ntype github_release struct {\n\tAssets    []interface{} `json:\"assets\"`\n\tAssetsURL string        `json:\"assets_url\"`\n\tAuthor    struct {\n\t\tAvatarURL         string `json:\"avatar_url\"`\n\t\tEventsURL         string `json:\"events_url\"`\n\t\tFollowersURL      string `json:\"followers_url\"`\n\t\tFollowingURL      string `json:\"following_url\"`\n\t\tGistsURL          string `json:\"gists_url\"`\n\t\tGravatarID        string `json:\"gravatar_id\"`\n\t\tHTMLURL           string `json:\"html_url\"`\n\t\tID                int64  `json:\"id\"`\n\t\tLogin             string `json:\"login\"`\n\t\tNodeID            string `json:\"node_id\"`\n\t\tOrganizationsURL  string `json:\"organizations_url\"`\n\t\tReceivedEventsURL string `json:\"received_events_url\"`\n\t\tReposURL          string `json:\"repos_url\"`\n\t\tSiteAdmin         bool   `json:\"site_admin\"`\n\t\tStarredURL        string `json:\"starred_url\"`\n\t\tSubscriptionsURL  string `json:\"subscriptions_url\"`\n\t\tType              string `json:\"type\"`\n\t\tURL               string `json:\"url\"`\n\t} `json:\"author\"`\n\tBody        string `json:\"body\"`\n\tCreatedAt   string `json:\"created_at\"`\n\tDraft       bool   `json:\"draft\"`\n\tHTMLURL     string `json:\"html_url\"`\n\tID          int64  `json:\"id\"`\n\tName        string `json:\"name\"`\n\tNodeID      string `json:\"node_id\"`\n\tPrerelease  bool   `json:\"prerelease\"`\n\tPublishedAt string `json:\"published_at\"`\n\tReactions   struct {\n\t\tPlusOne    int64  `json:\"+1\"`\n\t\tMinusOne   int64  `json:\"-1\"`\n\t\tConfused   int64  `json:\"confused\"`\n\t\tEyes       int64  `json:\"eyes\"`\n\t\tHeart      int64  `json:\"heart\"`\n\t\tHooray     int64  `json:\"hooray\"`\n\t\tLaugh      int64  `json:\"laugh\"`\n\t\tRocket     int64  `json:\"rocket\"`\n\t\tTotalCount int64  `json:\"total_count\"`\n\t\tURL        string `json:\"url\"`\n\t} `json:\"reactions\"`\n\tTagName         string `json:\"tag_name\"`\n\tTarballURL      string `json:\"tarball_url\"`\n\tTargetCommitish string `json:\"target_commitish\"`\n\tUploadURL       string `json:\"upload_url\"`\n\tURL             string `json:\"url\"`\n\tZipballURL      string `json:\"zipball_url\"`\n}\n\ntype updateui struct {\n\tserverVersion string\n\tavailable     bool\n\ttriggered     bool\n\tupdatingText  string\n}\n\nvar latestRelease string\nvar releaseError error\n\nfunc init() {\n\tif !updateable() {\n\t\treturn\n\t}\n\n\tlatestRelease, releaseError = getLatestRelease()\n}\n\nfunc updateable() bool {\n\treturn updateURL != \"\" && publicKeyString != \"\" && releaseError == nil\n}\n\nfunc updateCheck(ctx *ntcontext) {\n\tif !updateable() {\n\t\treturn\n\t}\n\tlog.Println(\"Checking for updates\")\n\n\tvar latestVersion, _ = semver.Make(strings.TrimLeft(latestRelease, \"v\"))\n\tvar currentVersion, _ = semver.Make(strings.TrimLeft(version, \"v\"))\n\n\tctx.update.serverVersion = latestRelease\n\tif currentVersion.Compare(latestVersion) == -1 {\n\t\tctx.update.available = true\n\t}\n}\n\nfunc update(ctx *ntcontext) {\n\tif !updateable() {\n\t\treturn\n\t}\n\tsig, err := fetchFile(\"NoiseTorch_x64_\" + latestRelease + \".tgz.sig\")\n\tif err != nil {\n\t\tlog.Println(\"Couldn't fetch signature\", err)\n\t\tctx.update.updatingText = \"Update failed!\"\n\t\t(*ctx.masterWindow).Changed()\n\t\treturn\n\t}\n\n\ttgz, err := fetchFile(\"NoiseTorch_x64_\" + latestRelease + \".tgz\")\n\tif err != nil {\n\t\tlog.Println(\"Couldn't fetch tgz\", err)\n\t\tctx.update.updatingText = \"Update failed!\"\n\t\t(*ctx.masterWindow).Changed()\n\t\treturn\n\t}\n\n\tverified := ed25519.Verify(publickey(), tgz, sig)\n\n\tlog.Printf(\"VERIFIED UPDATE: %t\\n\", verified)\n\n\tif !verified {\n\t\tlog.Printf(\"SIGNATURE VERIFICATION FAILED, ABORTING UPDATE!\\n\")\n\t\tctx.update.updatingText = \"Update failed!\"\n\t\t(*ctx.masterWindow).Changed()\n\t\treturn\n\t}\n\n\tuntar(bytes.NewReader(tgz), os.Getenv(\"HOME\"))\n\tpkexecSetcapSelf()\n\n\tlog.Printf(\"Update installed!\\n\")\n\tctx.update.updatingText = \"Update installed! (Restart the program to apply)\"\n\t(*ctx.masterWindow).Changed()\n}\n\nfunc fetchFile(file string) ([]byte, error) {\n\tresp, err := http.Get(updateURL + \"/\" + latestRelease + \"/\" + file)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tif resp.StatusCode != http.StatusOK {\n\t\treturn nil, fmt.Errorf(\"received on 200 status code when fetching %s. Status: %s\", file, resp.Status)\n\t}\n\tbody, err := io.ReadAll(resp.Body)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn body, nil\n}\n\nfunc publickey() []byte {\n\tpub, err := base64.StdEncoding.DecodeString(publicKeyString)\n\tif err != nil { // Should only happen when distributor ships an invalid public key\n\t\tlog.Fatalf(\"Error while reading public key: %s\\nContact the distribution '%s' about this error.\\n\", err, distribution)\n\t\tos.Exit(1)\n\t}\n\treturn pub\n}\n\nfunc getLatestRelease() (string, error) {\n\turl := \"https://api.github.com/repos/noisetorch/NoiseTorch/releases/latest\"\n\n\thttpclient := http.Client{\n\t\tTimeout: time.Second * 2, // Timeout after 2 seconds\n\t}\n\n\treq, err := http.NewRequest(http.MethodGet, url, nil)\n\tif err != nil {\n\t\tlog.Println(\"Could not create http requester\", err)\n\t\treturn \"\", err\n\t}\n\n\treq.Header.Set(\"User-Agent\", \"NoiseTorch/\"+version)\n\n\tres, err := httpclient.Do(req)\n\tif err != nil {\n\t\tlog.Println(\"Couldn't fetch latest release\", err)\n\t\t// Return an empty string when the latest release is unknown\n\t\treturn \"\", err\n\t}\n\n\tif res.Body != nil {\n\t\tdefer res.Body.Close()\n\t}\n\n\tbody, readErr := io.ReadAll(res.Body)\n\tif readErr != nil {\n\t\tlog.Fatal(readErr)\n\t}\n\n\tvar latest_release github_release\n\n\terr = json.Unmarshal(body, &latest_release)\n\tif err != nil {\n\t\tlog.Println(\"Reading JSON for latest_release failed\", err)\n\t\t// Return an empty string when the JSON is something unexpected, for example: when rate limited\n\t\treturn \"\", err\n\t}\n\n\treturn latest_release.TagName, nil\n}\n"
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        },
        {
          "name": "views.go",
          "type": "blob",
          "size": 0.7841796875,
          "content": "// This file is part of the program \"NoiseTorch-ng\".\n// Please see the LICENSE file for copyright information.\n\npackage main\n\nimport (\n\t\"log\"\n\n\t\"github.com/aarzilli/nucular\"\n)\n\ntype ViewFunc func(ctx *ntcontext, w *nucular.Window)\n\ntype ViewStack struct {\n\titems []ViewFunc\n}\n\nfunc NewViewStack() *ViewStack {\n\treturn &ViewStack{make([]ViewFunc, 0)}\n}\n\nfunc (v *ViewStack) Push(f ViewFunc) {\n\tv.items = append(v.items, f)\n}\n\nfunc (v *ViewStack) Pop() ViewFunc {\n\tif len(v.items) == 0 {\n\t\tlog.Fatal(\"Tried to Pop an empty ViewStack\")\n\t}\n\n\titem := v.items[len(v.items)-1]\n\n\t// The last item gets removed\n\tv.items = v.items[:len(v.items)-1]\n\n\treturn item\n}\n\nfunc (v *ViewStack) Peek() ViewFunc {\n\tif len(v.items) == 0 {\n\t\tlog.Fatal(\"Tried to Peek an empty ViewStack\")\n\t}\n\n\treturn v.items[len(v.items)-1]\n}\n"
        }
      ]
    }
  ]
}