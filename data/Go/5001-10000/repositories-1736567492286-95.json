{
  "metadata": {
    "timestamp": 1736567492286,
    "page": 95,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "linuxkit/linuxkit",
      "stars": 8338,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1064453125,
          "content": "**/vendor/** linguist-vendored\nkernel/config-* linguist-language=text\nkernel_config-* linguist-language=text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1748046875,
          "content": "*.log\nDockerfile.media\n/bin\n*.swp\n*.img\n*.tag\n*.iso\n*.raw\n*.vhd\n*.vmdk\n*.vmdk.lck\n*.tar\n*.tar.xz\n*.gz\n*.vhdx\n*.efi\n*.qcow2\n*-kernel\n*-cmdline\n*-state\nartifacts/*\ntools/alpine/iid\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 3.4453125,
          "content": "# Tip for finding duplicates (besides scanning the output of AUTHORS for name\n# duplicates that aren't also email duplicates): scan the output of:\n#   git log --format='%aE - %aN' | sort -uf\n#\n# For explanation on this file format: man git-shortlog\n\nAlice Frosi <alice@linux.vnet.ibm.com> <alice@linux.vnet.ibm.comx>\nAlice Frosi <alice@linux.vnet.ibm.com> <afrosi@de.ibm.com>\nAmir Chaudhry <amir.chaudhry@docker.com> <amirmc@gmail.com>\nAnil Madhavapeddy <anil.madhavapeddy@docker.com> <anil@recoil.org>\nDan Finneran <dan@thebsdbox.co.uk> <dan@dev.fnnrn.me>\nDan Finneran <dan@thebsdbox.co.uk> <daniel.finneran@gmail.com>\nDan Finneran <dan@thebsdbox.co.uk>\nDavid Protasowski <dprotaso@gmail.com>\nDavid Scott <dave.scott@docker.com> <dave.scott@unikernel.com>\nDavid Scott <dave.scott@docker.com> <dave@recoil.org>\nDavid Scott <dave.scott@docker.com> <djs55@users.noreply.github.com>\nDavid Scott <dave.scott@docker.com>\nDave Tucker <dt@docker.com> <dave@dtucker.co.uk>\nDavid Gageot <david.gageot@docker.com> <david@gageot.net>\nDavid Sheets <david.sheets@docker.com> <dsheets@docker.com>\nDavid Sheets <david.sheets@docker.com> <sheets@alum.mit.edu>\nEric Briand <eric.briand@gmail.com>\nIan Campbell <ian.campbell@docker.com> <ijc25@users.noreply.github.com>\nIan Campbell <ian.campbell@docker.com> <ijc@docker.com>\nIan Campbell <ian.campbell@docker.com> <ijc@users.noreply.github.com>\nIan Campbell <ian.campbell@docker.com> <ijc@lxdeb01.marist.edu>\nIsaac Rodman <isaac@eyz.us> <isaac.rodman@healthtrio.com>\nIsaac Rodman <isaac@eyz.us>\nIstvan Szukacs <l1x@users.noreply.github.com>\nJames McCoy <james@mcy.email>\nJeff Wu <jeff.wu.junfei@gmail.com> <JeffWuBJ@users.noreply.github.com>\nJeremy Yallop <yallop@docker.com> <yallop@gmail.com>\nJustin Cormack <justin.cormack@docker.com> <justin.cormack@unikernel.com>\nJustin Cormack <justin.cormack@docker.com> <justin@specialbusservice.com>\nJustin Barrick <jbarrick@cloudflare.com>\nKen Cochrane <ken.cochrane@docker.com> <KenCochrane@gmail.com>\nMagnus Skjegstad <magnus.skjegstad@docker.com> <magnus@skjegstad.com>\nMarten Cassel <marten.cassel@gmail.com> <mcpop28@hotmail.com>\nMindy Preston <mindy.preston@docker.com> <meetup@yomimono.org>\nMinJae Kwon <mingrammer@gmail.com>\nNathan Dautenhahn <ndd@rice.edu> <ndd@seas.upenn.edu>\nNathan Dautenhahn <ndd@rice.edu> <ndd@cis.upenn.edu>\nNathan LeClaire <nathan.leclaire@docker.com> <nathan.leclaire@gmail.com>\nNathan LeClaire <nathan.leclaire@docker.com> <nathanleclaire@gmail.com>\nNiclas Mietz <niclas@mietz.io>\nPierre Gayvallet <pierre.gayvallet@docker.com> <pierre.gayvallet@gmail.com>\nRadu Matei <matei.radu94@gmail.com>\nRiyaz Faizullabhoy <riyaz.faizullabhoy@docker.com> <riyazdf@berkeley.edu>\nRiyaz Faizullabhoy <riyaz.faizullabhoy@docker.com> <riyazdf@gmail.com>\nRobin Winkelewski <w9ncontact@gmail.com>\nRolf Neugebauer <rn@rneugeba.io> <rneugeba@users.noreply.github.com>\nRolf Neugebauer <rn@rneugeba.io> <rn@users.noreply.github.com>\nRolf Neugebauer <rn@rneugeba.io> <rolf.neugebauer@gmail.com>\nRolf Neugebauer <rn@rneugeba.io> <rolf.neugebauer@docker.com>\nSebastiaan van Stijn <sebastiaan.vanstijn@docker.com> <github@gone.nl>\nSimon Ferquel <simon.ferquel@docker.com> <simon.ferquel@hotmail.fr>\nThomas Gazagnaire <thomas.gazagnaire@docker.com> <thomas@gazagnaire.com>\nThomas Gazagnaire <thomas.gazagnaire@docker.com> <thomas@gazagnaire.org>\nTiejun Chen <tiejun.china@gmail.com> <tiejunc@vmware.com>\nVincent Demeester <Vincent.Demeester@docker.com> <vincent@sbr.pm>\nVincent Demeester <Vincent.Demeester@docker.com> <vdemeester@docker.com>\n"
        },
        {
          "name": "ADOPTERS.md",
          "type": "blob",
          "size": 1.1806640625,
          "content": "## LinuxKit Adopters\n\n_This list is currently under construction. Please add your use cases to this with a PR. Thanks!_\n\n# Production Users\n\n**_[Docker Desktop](https://www.docker.com/products/docker-desktop)_** - Docker Desktop for Mac and Windows uses LinuxKit to provide an embedded, invisible virtual machine in order to run Linux containers and to run Kubernetes. There are currently millions of active users.\n\n**_[TagHub](https://www.taghub.net)_** - TagHub is a SaaS product for doing asset management. We use LinuxKit to have small and secure linux nodes powering our multi-cloud infrastructure. TagHub is made by [Smart Management](http://www.smartm.no/).\n\n# Projects Using LinuxKit\n\n**_[LinuxKit Nix](https://github.com/nix-community/linuxkit-nix)_** aims to provide a Linux Nix VM for macOS.\n\n**_[cfdev](https://github.com/cloudfoundry-incubator/cfdev)_** A fast and easy local Cloud Foundry experience on native hypervisors, powered by LinuxKit with VPNKit\n\n**_[dm-linuxkit](https://github.com/dotmesh-io/dm-linuxkit)_** A dotmesh controller for LinuxKit persistent storage management.\n\n**_[Linux Foundation Edge EVE](https://github.com/lf-edge/eve)_** Edge Virtualization Engine Operating System\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 6.201171875,
          "content": "# This file lists all individuals having contributed content to the repository.\n# For how it is generated, see `scripts/generate-authors.sh`.\n\nAjeet Singh Raina, Docker Captain, {Code} Catalysts, Dell EMC R&D <ajeetraina@gmail.com>\nAkihiro Suda <suda.akihiro@lab.ntt.co.jp>\nAlan Raison <alanraison@users.noreply.github.com>\nAlex Ellis <alexellis2@gmail.com>\nAlex Johnson <hello@alex-johnson.net>\nAlex Szakaly <alex.szakaly@gmail.com>\nAlexander Slesarev <alex.slesarev@nudatasecurity.com>\nAlice Frosi <alice@linux.vnet.ibm.com>\nAmir Chaudhry <amir.chaudhry@docker.com>\nAnil Madhavapeddy <anil.madhavapeddy@docker.com>\nArthur Lutz <arthur.lutz@logilab.fr>\nAsbjorn Enge <asbjorn@hanafjedle.net>\nAvi Deitcher <avi@deitcher.net>\nAymen EL AMRI <aymen@eralabs.io>\nBen Allen <bsallen@alcf.anl.gov>\nBill Kerr <bill@generalbill.com>\nBjörn Ingeson <bjorn.ingeson@gmail.com>\nBrice Figureau <brice-puppet@daysofwonder.com>\nCarlton-Semple <carlton.semple@ibm.com>\nChanwit Kaewkasi <chanwit@gmail.com>\nChristian Wuerdig <christian.wuerdig@gmail.com>\nClovis Durand <cd.clovel19@gmail.com>\nCraig Ingram <cingram@heroku.com>\nDamiano Donati <damiano.donati@gmail.com>\nDan Finneran <dan@thebsdbox.co.uk>\nDaniel Caminada <daniel.caminada@ergon.ch>\nDaniel Dean <daniel@razorsecure.com>\nDaniel Hiltgen <daniel.hiltgen@docker.com>\nDaniel Nephin <dnephin@gmail.com>\nDave Freitag <dcfreita@us.ibm.com>\nDave Tucker <dt@docker.com>\nDavid Gageot <david.gageot@docker.com>\nDavid Manouchehri <david.manouchehri@riseup.net>\nDavid Protasowski <dprotaso@gmail.com>\nDavid Scott <dave.scott@docker.com>\nDavid Sheets <david.sheets@docker.com>\nDennis Chen <dennis.chen@arm.com>\nDieter Reuter <dieter.reuter@me.com>\nDominic White <singe-github@singe.za.net>\nduraki <duraki@linuxmail.org>\nEdward Vielmetti <edward.vielmetti@gmail.com>\nEmily Casey <ecasey@pivotal.io>\nEric Briand <eric.briand@gmail.com>\nEvan Hazlett <ejhazlett@gmail.com>\nFederico Pellegatta <12744504+federico-pellegatta@users.noreply.github.com>\nFrench Ben <frenchben@docker.com>\nFrédéric Dalleau <frederic.dalleau@docker.com>\nfunctor <meehow@gmail.com>\nGabriel Chabot <gabriel.chabot@qarnot-computing.com>\nGarth Bushell <garth.bushell@oracle.com>\nGeorge Papanikolaou <g3orge.app@gmail.com>\nGerben Geijteman <gerben@isset.nl>\nGianluca Arbezzano <gianarb92@gmail.com>\nGuillaume Rose <guillaume.rose@docker.com>\nHans van den Bogert <hansbogert@gmail.com>\nhyperized <gerben@hyperized.net>\nIan Campbell <ian.campbell@docker.com>\nIlya Dmitrichenko <errordeveloper@gmail.com>\nIsaac Rodman <isaac@eyz.us>\nIstvan Szukacs <l1x@users.noreply.github.com>\nIvan Markin <sw@nogoegst.net>\nJames McCoy <james@mcy.email>\nJason A. Donenfeld <Jason@zx2c4.com>\nJeff Wu <jeff.wu.junfei@gmail.com>\nJeffrey Hogan <jeff.hogan1@gmail.com>\nJeremy Yallop <yallop@docker.com>\nJes Ferrier <jes.ferrier@gmail.com>\nJesse Adametz <jesseadametz@gmail.com>\nJohannes Würbach <johannes.wuerbach@googlemail.com>\nJohn Albietz <inthecloud247@gmail.com>\nJose Carlos Venegas Munoz <jose.carlos.venegas.munoz@intel.com>\nJustin Barrick <jbarrick@cloudflare.com>\nJustin Cormack <justin.cormack@docker.com>\nJustin Ko <justin.ko@oracle.com>\nJustin Terry (VM) <juterry@microsoft.com>\nKarol Woźniak <wozniakk@gmail.com>\nKen Cochrane <ken.cochrane@docker.com>\nKrister Johansen <krister.johansen@oracle.com>\nKrisztian Horvath <keyki.kk@gmail.com>\nKunal Kushwaha <kushwaha_kunal_v7@lab.ntt.co.jp>\nLiqdfire <liqdfire@gmail.com>\nLorenzo Fontana <lo@linux.com>\nLoïc Pottier <lpottier@isi.edu>\nLuke Hodkinson <furious.luke@gmail.com>\nMadhu Venugopal <madhu@docker.com>\nMagnus Skjegstad <magnus.skjegstad@docker.com>\nMarco Mariani <marco.mariani@alterway.fr>\nMarcus van Dam <marcus@marcusvandam.nl>\nMario Loriedo <mario.loriedo@gmail.com>\nmarten <marten.cassel@gmail.com>\nMathieu Champlon <mathieu.champlon@docker.com>\nMathieu Pasquet <mathieu.pasquet@alterway.fr>\nMatt Bajor <matt.bajor@workday.com>\nMatt Bentley <matt.bentley@docker.com>\nMatt Johnson <matjohn2@cisco.com>\nMichael Aldridge <aldridge.mac@gmail.com>\nMichel Courtine <michel.courtine@docker.com>\nMickaël Salaün <mic@digikod.net>\nMindy Preston <mindy.preston@docker.com>\nMinJae Kwon <mingrammer@gmail.com>\nNatanael Copa <natanael.copa@docker.com>\nNathan Dautenhahn <ndd@rice.edu>\nNathan LeClaire <nathan.leclaire@docker.com>\nNick Jones <nick@dischord.org>\nNiclas Mietz <niclas@mietz.io>\nNico Di Rocco <dirocco.nico@gmail.com>\nOlaf Bergner <olaf.bergner@gmx.de>\nOlaf Flebbe <of@oflebbe.de>\nOmar Ramadan <omar.ramadan93@gmail.com>\nPatrik Cyvoct <patrik@ptrk.io>\nPetr Fedchenkov <giggsoff@gmail.com>\nPhil Estes <estesp@linux.vnet.ibm.com>\nPierre Gayvallet <pierre.gayvallet@docker.com>\nPratik Mallya <mallya@us.ibm.com>\nPreston Holmes <preston@ptone.com>\nRadu Matei <matei.radu94@gmail.com>\nRichard Connon <richard@connon.me.uk>\nRichard Mortier <mort@cantab.net>\nRiyaz Faizullabhoy <riyaz.faizullabhoy@docker.com>\nRobb Kistler <robb.kistler@docker.com>\nRobin Winkelewski <w9ncontact@gmail.com>\nRolf Neugebauer <rn@rneugeba.io>\nRoman Shaposhnik <rvs@zededa.com>\nRui Lopes <rgl@ruilopes.com>\nRyoga Saito <proelbtn@gmail.com>\nSachi King <nakato@nakato.io>\nsalman aljammaz <s@aljmz.com>\nschrotthaufen <schrotthaufen@invalid.invalid>\nScott Coulton <scott.coulton@puppet.com>\nSebastiaan van Stijn <sebastiaan.vanstijn@docker.com>\nsethp <seth.pellegrino@gmail.com>\nSimarpreet Singh <simar@linux.com>\nSimon Ferquel <simon.ferquel@docker.com>\nSimon Fridlund <simon@fridlund.email>\nSotiris Salloumis <sotiris.salloumis@gmail.com>\nSteeve Morin <steeve.morin@gmail.com>\nStefan Bourlon <stefan.bourlon@ca.com>\nStephen J Day <stephen.day@docker.com>\nSteve Hiehn <shiehn@pivotal.io>\nSukchan Lee <acetcom@gmail.com>\nTheo Koulouris <theo.koulouris@hpe.com>\nThomas Conte <thomas@conte.com>\nThomas Gazagnaire <thomas.gazagnaire@docker.com>\nThomas Leonard <thomas.leonard@docker.com>\nThomas Shaw <tomwillfixit@users.noreply.github.com>\nTiago Pires <tandrepires@gmail.com>\nTiejun Chen <tiejun.china@gmail.com>\nTim Potter <tpot@hpe.com>\nTobias Gesellchen <tobias@gesellix.de>\nTobias Klauser <tklauser@distanz.ch>\nTomas Knappek <tomas.knappek@gmail.com>\nTristan Slominski <tristan.slominski@gmail.com>\nTycho Andersen <tycho@docker.com>\nVincent Demeester <Vincent.Demeester@docker.com>\nYoann Ricordel <yoann.ricordel@qarnot-computing.com>\nZachery Hostens <zacheryph@gmail.com>\nzimbatm <zimbatm@zimbatm.com>\nzlim <zlim.lnx@gmail.com>\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.984375,
          "content": "# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/).\n\n## [v0.8] - 2020-05-10\n### Added\n\n- Removed dependency on external `notary` and `manifest-tool` binaries for package builds\n- Risc-V support for `binfmt`\n- Support for GPT partitions\n- `metadata` package support for Digital Ocean and Hetzner as well as loading from a file\n- Support for `/sys/fs/bpf` in `init`\n- Github Actions for CI\n\n### Changed\n- `alpine` base updated to 3.11\n- `containerd` updated to v1.3.4\n- `runc` updated to v1.0.0-rc9\n- `binfmt` updated to qemu 4.2\n- `node_exporter` updated to  v0.18.1\n- `cadvisor` updated to v0.36.0\n- WireGuard updated to 1.0.20200319\n- Improved CDROM support and fixes to GCP and Scaleway providers in the `metadata` package\n- Improved creation of `swap` files\n- Improved RPI3 build\n\n### Removed\n- Containerized `qemu`\n- Windows binary from release\n\n## [v0.7] - 2019-04-17\n### Added\n- Reproducible `linuxkit build` for some output formats\n- Support uncompressed kernels, e.g., for crosvm and firecracker.\n- Support encrypted disks via `dm-crypt`\n- New `bpftrace` package\n- Support for USB devices in `qemu`\n\n### Changed\n- Alpine base updated to 3.9\n- `containerd` updated to v1.2.6\n- WireGuard updated to 0.0.20190227\n- Updated Docker base API level\n- VirtualBox improvements (multiple drives and network adapters)\n- Fixed Windows path handling in `linuxkit`\n- GCP: Improve error checking/handling\n\n### Removed\n\n\n## [v0.6] - 2018-07-26\n### Added\n- `linuxkit build` now works with private repositories and registries.\n- `linuxkit pkg build` can build packages with sources outside the package directory.\n- New `kernel+iso` format for `linuxkit build`.\n\n### Changed\n- `containerd` updated to v1.1.2.\n- WireGuard updated to 0.0.20180718.\n- Fixed SSH key handling on GCP.\n- Changed name of logfiles when memlogd/logwrite is used.\n- `moby/tool` code merged back into `linuxkit/linuxkit`\n- Smaller `mkimage-*` packages.\n\n### Removed\n\n\n\n## [v0.5] - 2018-07-10\n### Added\n- New logging support with log rotation.\n- Scaleway provider.\n- Support for v4.17.x kernels.\n- Kernel source are now included in the kernel packages.\n- Improved documentation about debugging LinuxKit.\n\n### Changed\n- Switched to Alpine Linux 3.8 as the base.\n- `containerd` updated to v1.1.1.\n- `pkg/cadvisor` updated to v0.30.2\n- `pkg/node_exporter` updated to 0.16.0\n- WireGuard updated to 0.0.20180708.\n- Linux firmware binaries update to latest.\n- Improved support for building on Windows.\n- Improved support for AWS/GCP metadata.\n- Better handling of reboot/poweroff.\n\n### Removed\n- Support for v4.16.x. kernels as they have been EOLed.\n\n\n## [v0.4] - 2018-05-12\n### Added\n- Support for v4.16.x kernels.\n- Support for MPLS, USB_STORAGE, and SCTP support in the kernel config.\n- Support for creating and booting from squashfs root filesystems.\n- Super experimental support for crosvm.\n- Support for compiling with go 1.10.\n- Adjusted hyperkit support to be compatible with soon to be released Docker for Mac changes.\n\n### Changed\n- `containerd` updated to v1.1.0.\n- WireGuard updated to 0.0.20180420.\n- Intel CPU microcode update to 20180425.\n\n### Removed\n- Support for v4.15.x. kernels as they have been EOLed.\n- `perf` support for 4.9.x kernels (the compile broke).\n\n\n## [v0.3] - 2018-04-05\n### Added\n- Initial `s390x` support.\n- Support for RealTime Linux kernels (`-rt`) on `x86_64` and `arm64`.\n- Support for booting of `qcow2` disks via EFI.\n- Support for CEPH filesystems in the kernel.\n- Logging for `onboot` containers to `/var/log`\n- Changelog file.\n\n### Changed\n- Switched the default kernel to 4.14.x.\n- Update to `containerd` v1.0.3.\n- Update to `notary` v0.6.0.\n- Update WireGuard to 0.0.20180304.\n\n### Removed\n- Removed support for 4.4.x and 4.9.x kernels for `arm64`.\n\n\n## [v0.2] - 2018-01-25\n- Almost everything\n\n\n## [v0.1] - 2017-??-??\n- Sometime in 2017 we did a mini v0.1 release but we seem to have lost any trace of it :)\n\n\n## [v0.0] - 2017-04-18\n- Initial open sourcing of LinuxKit\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 11.3603515625,
          "content": "# Contributing to LinuxKit\n\nWant to hack on this project? Awesome! Here are instructions to get you started.\n\nAdditional information can be found in the docs:\n[issue triage](https://github.com/linuxkit/linuxkit/blob/master/docs/issue-triage.md),\n and [review process](https://github.com/linuxkit/linuxkit/blob/master/docs/reviewing.md).\n\n## Reporting security issues\n\nThe LinuxKit maintainers take security seriously. If you discover a security\nissue, please bring it to their attention right away!\n\nPlease **DO NOT** file a public issue, instead send your report privately to\n[security@docker.com](mailto:security@docker.com).\n\nSecurity reports are greatly appreciated and we will publicly thank you for it.\nWe also like to send gifts&mdash;if you're into Docker schwag, make sure to let\nus know. We currently do not offer a paid security bounty program, but are not\nruling it out in the future.\n\n## Reporting other issues\n\nA great way to contribute to the project is to send a detailed report when you\nencounter an issue. We always appreciate a well-written, thorough bug report,\nand will thank you for it!\n\nCheck that [our issue database](https://github.com/linuxkit/linuxkit/issues)\ndoesn't already include that problem or suggestion before submitting an issue.\nIf you find a match, you can use the \"subscribe\" button to get notified on\nupdates. Do *not* leave random \"+1\" or \"I have this too\" comments, as they\nonly clutter the discussion, and don't help resolving it. However, if you\nhave ways to reproduce the issue or have additional information that may help\nresolving the issue, please leave a comment.\n\nAlso include the steps required to reproduce the problem if possible and\napplicable. This information will help us review and fix your issue faster.\nWhen sending lengthy log-files, consider posting them as a gist (https://gist.github.com).\nDon't forget to remove sensitive data from your logfiles before posting (you can\nreplace those parts with \"REDACTED\").\n\n## Quick contribution tips and guidelines\n\nThis section gives the experienced contributor some tips and guidelines.\n\n### Pull requests are always welcome\n\nNot sure if that typo is worth a pull request? Found a bug and know how to fix\nit? Do it! We will appreciate it. Any significant improvement should be\ndocumented as [a GitHub issue](https://github.com/linuxkit/linuxkit/issues) before\nanybody starts working on it.\n\nWe are always thrilled to receive pull requests. We do our best to process them\nquickly. If your pull request is not accepted on the first try, don't get\ndiscouraged! Our contributor's guide explains [the review process we\nuse for simple changes](https://docs.docker.com/opensource/workflow/make-a-contribution/).\n\n### Design and cleanup proposals\n\nYou can propose new designs for existing features. You can also design\nentirely new features. We really appreciate contributors who want to refactor or\notherwise cleanup our project. For information on making these types of\ncontributions, see [the advanced contribution\nsection](https://docs.docker.com/opensource/workflow/advanced-contributing/) in\nthe contributors guide.\n\nWe try hard to keep LinuxKit lean and focused. LinuxKit can't do everything for\neverybody. This means that we might decide against incorporating a new feature.\nHowever, there might be a way to implement that feature *on top of* LinuxKit.\n\n### Commit Messages\n\nCommit messages must start with a capitalized and short summary (max. 50 chars)\nwritten in the imperative, followed by an optional, more detailed explanatory\ntext which is separated from the summary by an empty line.\n\nCommit messages should follow best practices, including explaining the context\nof the problem and how it was solved, including in caveats or follow up changes\nrequired. They should tell the story of the change and provide readers\nunderstanding of what led to it.\n\nIf you're lost about what this even means, please see [How to Write a Git\nCommit Message](http://chris.beams.io/posts/git-commit/) for a start.\n\nIn practice, the best approach to maintaining a nice commit message is to\nleverage a `git add -p` and `git commit --amend` to formulate a solid\nchangeset. This allows one to piece together a change, as information becomes\navailable.\n\nIf you squash a series of commits, don't just submit that. Re-write the commit\nmessage, as if the series of commits was a single stroke of brilliance.\n\nThat said, there is no requirement to have a single commit for a PR, as long as\neach commit tells the story. For example, if there is a feature that requires a\npackage, it might make sense to have the package in a separate commit then have\na subsequent commit that uses it.\n\nRemember, you're telling part of the story with the commit message. Don't make\nyour chapter weird.\n\n\n### Review\n\nCode review comments may be added to your pull request. Discuss, then make the\nsuggested modifications and push additional commits to your feature branch. Post\na comment after pushing. New commits show up in the pull request automatically,\nbut the reviewers are notified only when you comment.\n\nPull requests must be cleanly rebased on top of master without multiple branches\nmixed into the PR.\n\n**Git tip**: If your PR no longer merges cleanly, use `rebase master` in your\nfeature branch to update your pull request rather than `merge master`.\n\nBefore you make a pull request, squash your commits into logical units of work\nusing `git rebase -i` and `git push -f`. A logical unit of work is a consistent\nset of patches that should be reviewed together: for example, upgrading the\nversion of a vendored dependency and taking advantage of its now available new\nfeature constitute two separate units of work. Implementing a new function and\ncalling it in another file constitute a single logical unit of work. The very\nhigh majority of submissions should have a single commit, so if in doubt: squash\ndown to one.\n\nAfter every commit, [make sure the test suite passes]\n(https://docs.docker.com/opensource/project/test-and-docs/). Include documentation\nchanges in the same pull request so that a revert would remove all traces of\nthe feature or fix.\n\nInclude an issue reference like `Closes #XXXX` or `Fixes #XXXX` in commits that\nclose an issue. Including references automatically closes the issue on a merge.\n\n### Merge approval\n\nDocker maintainers use LGTM (Looks Good To Me) in comments or GitHub approval\non the code review to indicate acceptance.\n\nA change requires at least one LGTM from a maintainers of each component\naffected. A list of maintainers can be found in the [MAINTAINERS](MAINTAINERS)\nfile.\n\n### Community Guidelines and Code of Conduct\n\nWhen contributing to this project, we expect you to respect our community\nguidelines and [code of conduct](https://github.com/docker/code-of-conduct)\n\nWe want to keep the community awesome, growing and collaborative. We need your\nhelp to keep it that way. To help with this we've come up with some general\nguidelines for the community as a whole:\n\n* Be nice: Be courteous, respectful and polite to fellow community members:\n  no regional, racial, gender, or other abuse will be tolerated. We like\n  nice people way better than mean ones!\n\n* Encourage diversity and participation: Make everyone in our community feel\n  welcome, regardless of their background and the extent of their\n  contributions, and do everything possible to encourage participation in\n  our community.\n\n* Keep it legal: Basically, don't get us in trouble. Share only content that\n  you own, do not share private or sensitive information, and don't break\n  the law.\n\n* Stay on topic: Make sure that you are posting to the correct channel and\n  avoid off-topic discussions. Remember when you update an issue or respond\n  to an email you are potentially sending to a large number of people. Please\n  consider this before you update. Also remember that nobody likes spam.\n\n* Don't send email to the maintainers: There's no need to send email to the\n  maintainers to ask them to investigate an issue or to take a look at a\n  pull request. Instead of sending an email, GitHub mentions should be\n  used to ping maintainers to review a pull request, a proposal or an\n  issue.\n\n### Guideline violations — 3 strikes method\n\nThe point of this section is not to find opportunities to punish people, but we\ndo need a fair way to deal with people who are making our community suck.\n\n1. First occurrence: We'll give you a friendly, but public reminder that the\n   behavior is inappropriate according to our guidelines.\n\n2. Second occurrence: We will send you a private message with a warning that\n   any additional violations will result in removal from the community.\n\n3. Third occurrence: Depending on the violation, we may need to delete or ban\n   your account.\n\n**Notes:**\n\n* Obvious spammers are banned on first occurrence. If we don't do this, we'll\n  have spam all over the place.\n\n* Violations are forgiven after 6 months of good behavior, and we won't hold a\n  grudge.\n\n* People who commit minor infractions will get some education, rather than\n  hammering them in the 3 strikes process.\n\n* The rules apply equally to everyone in the community, no matter how much\n  you've contributed.\n\n* Extreme violations of a threatening, abusive, destructive or illegal nature\n  will be addressed immediately and are not subject to 3 strikes or forgiveness.\n\n* Contact abuse@docker.com to report abuse or appeal violations. In the case of\n  appeals, we know that mistakes happen, and we'll work with you to come up with a\n  fair solution if there has been a misunderstanding.\n\n### Sign your work\n\nThe sign-off is a simple line at the end of the explanation for the patch. Your\nsignature certifies that you wrote the patch or otherwise have the right to pass\nit on as an open-source patch. The rules are pretty simple: if you can certify\nthe below (from [developercertificate.org](http://developercertificate.org/)):\n\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n1 Letterman Drive\nSuite D4700\nSan Francisco, CA, 94129\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\nThen you just add a line to every git commit message:\n\n    Signed-off-by: Joe Smith <joe.smith@email.com>\n\nUse your real name (sorry, no pseudonyms or anonymous contributions.)\n\nIf you set your `user.name` and `user.email` git configs, you can sign your\ncommit automatically with `git commit -s`.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.5126953125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        https://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   Copyright 2015-2017 Docker, Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       https://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 6.822265625,
          "content": "# Project maintainers file\n#\n# This file describes who runs the linuxkit/linuxkit project and how.\n# This is a living document - if you see something out of date or missing, speak up!\n#\n# It is structured to be consumable by both humans and programs.\n# To extract its contents programmatically, use any TOML-compliant parser.\n#\n# This file is compiled into the MAINTAINERS file in docker/opensource.\n#\n\n[Rules]\n\n        [Rules.maintainers]\n\n        title = \"What is a maintainer?\"\n\n        text = \"\"\"\nThere are different types of maintainers, with different\nresponsibilities, but all maintainers have 3 things in common:\n\n1) They share responsibility in the project's success.\n2) They have made a long-term, recurring time investment to improve\n   the project.\n3) They spend that time doing whatever needs to be done, not\n   necessarily what is the most interesting or fun.\n\nMaintainers are often under-appreciated, because their work is harder\nto appreciate.  It's easy to appreciate a really cool and technically\nadvanced feature. It's harder to appreciate the absence of bugs, the\nslow but steady improvement in stability, or the reliability of a\nrelease process. But those things distinguish a good project from a\ngreat one.\n\"\"\"\n\n        [Rules.adding-maintainers]\n\n        title = \"How are maintainers added?\"\n\n        text = \"\"\"\nMaintainers are first and foremost contributors that have shown they\nare committed to the long term success of a project. Contributors\nwanting to become maintainers are expected to be deeply involved in\ncontributing code, pull request review, and triage of issues in the\nproject for more than three months.\n\nJust contributing does not make you a maintainer, it is about building\ntrust with the current maintainers of the project and being a person\nthat they can depend on and trust to make decisions in the best\ninterest of the project.\n\nPeriodically, the existing maintainers curate a list of contributors\nthat have shown regular activity on the project over the prior\nmonths. From this list, maintainer candidates are selected.\n\nAfter a candidate has been announced, the existing maintainers are\ngiven five business days to discuss the candidate, raise objections\nand cast their vote. Candidates must be approved by at least 66% of\nthe current maintainers by adding their vote on the slack\nchannel. Only maintainers of the repository that the candidate is\nproposed for are allowed to vote.\n\nIf a candidate is approved, a maintainer will contact the candidate to\ninvite the candidate to open a pull request that adds the contributor\nto the MAINTAINERS file. The candidate becomes a maintainer once the\npull request is merged.\n\"\"\"\n\n        [Rules.stepping-down-policy]\n\n        title = \"Stepping down policy\"\n\n        text = \"\"\"\nLife priorities, interests, and passions can change. If you're a\nmaintainer but feel you must remove yourself from the list, inform\nother maintainers that you intend to step down, and if possible, help\nfind someone to pick up your work.  At the very least, ensure your\nwork can be continued where you left off.\n\nAfter you've informed other maintainers, create a pull request to\nremove yourself from the MAINTAINERS file.\n\"\"\"\n\n        [Rules.inactive-maintainers]\n\n        title = \"Removal of inactive maintainers\"\n\n        text = \"\"\"\nSimilar to the procedure for adding new maintainers, existing\nmaintainers can be removed from the list if they do not show\nsignificant activity on the project. Periodically, the maintainers\nreview the list of maintainers and their activity over the last three\nmonths.\n\nIf a maintainer has shown insufficient activity over this period, a\nneutral person will contact the maintainer to ask if they want to\ncontinue being a maintainer. If the maintainer decides to step down as\na maintainer, they open a pull request to be removed from the\nMAINTAINERS file.\n\nIf the maintainer wants to remain a maintainer, but is unable to\nperform the required duties they can be removed with a vote of at\nleast 66% of the current maintainers.  The voting period is five\nbusiness days. Issues related to a maintainer's performance should be\ndiscussed with them among the other maintainers so that they are not\nsurprised by a pull request removing them.\n\"\"\"\n\n        [Rules.DCO]\n\n        title = \"Helping contributors with the DCO\"\n\n        text = \"\"\"\nThe [DCO or `Sign your work`](\nhttps://github.com/linuxkit/linuxkit/blob/master/CONTRIBUTING.md#sign-your-work)\nrequirement is not intended as a roadblock or speed bump.\n\nSome LinuxKit contributors are not as familiar with `git`, or have\nused a web based editor, and thus asking them to `git commit --amend\n-s` is not the best way forward.\n\nIn this case, maintainers can update the commits based on clause (c)\nof the DCO.  The most trivial way for a contributor to allow the\nmaintainer to do this, is to add a DCO signature in a pull requests's\ncomment, or a maintainer can simply note that the change is\nsufficiently trivial that it does not substantially change the\nexisting contribution - i.e., a spelling change.\n\nWhen you add someone's DCO, please also add your own to keep a log.\n\"\"\"\n\n        [Rules.\"no direct push\"]\n\n        title = \"I'm a maintainer. Should I make pull requests too?\"\n\n        text = \"\"\"\nYes. Nobody should ever push to master directly. All changes should be\nmade through a pull request.\n\"\"\"\n\n        [Rules.tsc]\n\n        title = \"Conflict Resolution and technical disputes\"\n\n        text = \"\"\"\nLinuxKit defers to the [Technical Steering\nCommittee](https://github.com/moby/tsc) for escalations and resolution\non disputes for technical matters.\"\n\"\"\"\n\n        [Rules.meta]\n\n        title = \"How is this process changed?\"\n\n        text = \"Just like everything else: by making a pull request :)\"\n\n\n# Current project organization\n[Org]\n\t[Org.\"Core maintainers\"]\n\t\tpeople = [\n\t\t\t\"dave-tucker\",\n\t\t\t\"deitch\",\n\t\t\t\"djs55\",\n\t\t\t\"ijc\",\n\t\t\t\"justincormack\",\n\t\t\t\"rn\",\n\t\t]\n\n\t[Org.Alumni]\n\n\t# This list contains maintainers that are no longer active on the project.\n\t# It is thanks to these people that the project has become what it is today.\n\t# Thank you!\n\n\t\tpeople = [\n\t\t\t\"riyazdf\",\n\t\t]\n\n[people]\n\n# A reference list of all people associated with the project.\n# All other sections should refer to people by their canonical key\n# in the people section.\n\n\t# ADD YOURSELF HERE IN ALPHABETICAL ORDER\n\t[People.dave-tucker]\n\tName = \"Dave Tucker\"\n\tEmail = \"dave@dtucker.co.uk\"\n\tGithub = \"dave-tucker\"\n\n\t[People.deitch]\n\tName = \"Avi Deitcher\"\n\tEmail = \"avi@atomicinc.com\"\n\tGitHub = \"deitch\"\n\n\t[People.djs55]\n\tName = \"David Scott\"\n\tEmail = \"dave@recoil.org\"\n\tGithub = \"djs55\"\n\n\t[People.ijc]\n\tName = \"Ian Campbell\"\n\tEmail = \"ian.campbell@docker.com\"\n\tGitHub = \"ijc\"\n\n\t[people.justincormack]\n\tName = \"Justin Cormack\"\n\tEmail = \"justin.cormack@docker.com\"\n\tGitHub = \"justincormack\"\n\n\t[people.riyazdf]\n\tName = \"Riyaz Faizullabhoy\"\n\tEmail = \"riyaz@docker.com\"\n\tGitHub = \"riyazdf\"\n\n\t[people.rn]\n\tName = \"Rolf Neugebauer\"\n\tEmail = \"rn@rneugeba.io\"\n\tGitHub = \"rn\"\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 4,
          "content": "VERSION=\"v0.8+\"\n\n# test suite to run, blank for all\nTEST_SUITE ?=\nTEST_SHARD ?=\n\nGO_COMPILE=linuxkit/go-compile:c97703655e8510b7257ffc57f25e40337b0f0813\n\nifeq ($(OS),Windows_NT)\nLINUXKIT?=$(CURDIR)/bin/linuxkit.exe\nRTF?=bin/rtf.exe\nGOOS?=windows\nelse\nLINUXKIT?=$(CURDIR)/bin/linuxkit\nRTF?=bin/rtf\nGOOS?=$(shell uname -s | tr '[:upper:]' '[:lower:]')\nendif\nifneq ($(GOOS),linux)\nCROSS+=-e GOOS=$(GOOS)\nendif\nifneq ($(GOARCH),amd64)\nCROSS+=-e GOARCH=$(GOARCH)\nendif\n\nPREFIX?=/usr/local\n\nLOCAL_TARGET?=$(CURDIR)/bin/linuxkit\n\nexport VERSION GO_COMPILE GOOS GOARCH LOCAL_TARGET LINUXKIT\n\n.DELETE_ON_ERROR:\n\n.PHONY: default all\ndefault: linuxkit $(RTF)\nall: default\n\nRTF_COMMIT=b74a4f7c78e5cddcf7e6d2e6be7be312b9f645fc\nRTF_CMD=github.com/linuxkit/rtf/cmd\nRTF_VERSION=0.0\n$(RTF): tmp_rtf_bin.tar | bin\n\ttar -C $(dir $(RTF)) -xf $<\n\trm $<\n\ttouch $@\n\ntmp_rtf_bin.tar: Makefile\n\tdocker run --rm --log-driver=none -e http_proxy=$(http_proxy) -e https_proxy=$(https_proxy) $(CROSS) $(GO_COMPILE) --clone-path github.com/linuxkit/rtf --clone https://github.com/linuxkit/rtf.git --commit $(RTF_COMMIT) --package github.com/linuxkit/rtf --ldflags \"-X $(RTF_CMD).GitCommit=$(RTF_COMMIT) -X $(RTF_CMD).Version=$(RTF_VERSION)\" -o $(notdir $(RTF)) > $@\n\n# Manifest tool for multi-arch images\nMT_COMMIT=bfbd11963b8e0eb5f6e400afaebeaf39820b4e90\nMT_REPO=https://github.com/estesp/manifest-tool\nbin/manifest-tool: tmp_mt_bin.tar | bin\n\ttar xf $<\n\trm $<\n\ttouch $@\n\ntmp_mt_bin.tar: Makefile\n\tdocker run --rm --log-driver=none -e http_proxy=$(http_proxy) -e https_proxy=$(https_proxy) $(CROSS) $(GO_COMPILE) --clone-path github.com/estesp/manifest-tool --clone $(MT_REPO) --commit $(MT_COMMIT) --package github.com/estesp/manifest-tool --ldflags \"-X main.gitCommit=$(MT_COMMIT)\" -o bin/manifest-tool > $@\n\n.PHONY: linuxkit\nlinuxkit: bin\n\tmake -C ./src/cmd/linuxkit\n\n.PHONY: test-cross\ntest-cross:\n\tmake -C ./src/cmd/linuxkit test-cross\n\n.PHONY: local local-%\nlocal:\n\tmake -C ./src/cmd/linuxkit local\n\nlocal-%:\n\tmake -C ./src/cmd/linuxkit $@\n\nbin:\n\tmkdir -p $@\n\ninstall:\n\tcp -R bin/* $(PREFIX)/bin\n\nsign:\n\tcodesign --entitlements linuxkit.entitlements --force -s - $(PREFIX)/bin/linuxkit\n\n.PHONY: test\ntest:\n\t$(MAKE) -C test TEST_SUITE=$(TEST_SUITE) TEST_SHARD=$(TEST_SHARD)\n\n.PHONY: ci ci-tag ci-pr\nci: test-cross\n\t$(MAKE)\n\t$(MAKE) install\n\t$(MAKE) -C test all\n\t$(MAKE) -C pkg build\n\nci-tag: test-cross\n\t$(MAKE)\n\t$(MAKE) install\n\t$(MAKE) -C test all\n\t$(MAKE) -C pkg build\n\nci-pr: test-cross\n\t$(MAKE)\n\t$(MAKE) install\n\t$(MAKE) -C test pr\n\t$(MAKE) -C pkg build\n\n.PHONY: clean\nclean:\n\trm -rf bin *.log *-kernel *-cmdline *-state *.img *.iso *.gz *.qcow2 *.vhd *.vmx *.vmdk *.tar *.raw\n\nupdate-package-tags:\nifneq ($(LK_RELEASE),)\n\t$(eval tags := $(shell cd pkg; make show-tag | cut -d ':' -f1))\n\t$(eval image := :$(LK_RELEASE))\nelse\n\t$(eval tags := $(shell cd pkg; make show-tag))\n\t$(eval image := )\nendif\n\tfor img in $(tags); do \\\n\t\t./scripts/update-component-sha.sh --image $${img}$(image); \\\n\tdone\n\n.PHONY: build-targets-all build-targets-linux build-targets-windows build-targets-macos checksum-targets\n\nbuild-targets-all: build-targets-linux build-targets-windows build-targets-macos\n\nbuild-targets-linux: bin\n\t$(MAKE) GOOS=linux GOARCH=arm64 LOCAL_TARGET=$(CURDIR)/bin/linuxkit-linux-arm64 local-build\n\tfile bin/linuxkit-linux-arm64\n\t$(MAKE) GOOS=linux GOARCH=amd64 LOCAL_TARGET=$(CURDIR)/bin/linuxkit-linux-amd64 local-build\n\tfile bin/linuxkit-linux-amd64\n\t$(MAKE) GOOS=linux GOARCH=s390x LOCAL_TARGET=$(CURDIR)/bin/linuxkit-linux-s390x local-build\n\tfile bin/linuxkit-linux-s390x\n\nbuild-targets-windows: bin\n\t$(MAKE) GOOS=windows GOARCH=amd64 LOCAL_TARGET=$(CURDIR)/bin/linuxkit-windows-amd64.exe local-build\n\tfile bin/linuxkit-windows-amd64.exe\n\nbuild-targets-macos: bin\n\t$(MAKE) GOOS=darwin GOARCH=arm64 LOCAL_TARGET=$(CURDIR)/bin/linuxkit-darwin-arm64 local-build\n\tfile bin/linuxkit-darwin-arm64\n\t$(MAKE) GOOS=darwin GOARCH=amd64 LOCAL_TARGET=$(CURDIR)/bin/linuxkit-darwin-amd64 local-build\n\tfile bin/linuxkit-darwin-amd64\n\nchecksum-targets: bin\n\tcd bin && openssl sha256 -r linuxkit-* | tr -d '*' > checksums.txt\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.544921875,
          "content": "Copyright 2015-2017 Docker, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.9482421875,
          "content": "# LinuxKit\n\n[![CircleCI](https://circleci.com/gh/linuxkit/linuxkit.svg?style=svg)](https://circleci.com/gh/linuxkit/linuxkit)\n\nLinuxKit, a toolkit for building custom minimal, immutable Linux distributions.\n\n- Secure defaults without compromising usability\n- Everything is replaceable and customisable\n- Immutable infrastructure applied to building Linux distributions\n- Completely stateless, but persistent storage can be attached\n- Easy tooling, with easy iteration\n- Built with containers, for running containers\n- Designed to create [reproducible builds](./docs/reproducible-builds.md) [WIP]\n- Designed for building and running clustered applications, including but not limited to container orchestration such as Docker or Kubernetes\n- Designed from the experience of building Docker Editions, but redesigned as a general-purpose toolkit\n- Designed to be managed by external tooling, such as [Infrakit](https://github.com/docker/infrakit) (renamed to [deploykit](https://github.com/docker/deploykit) which has been archived in 2019) or similar tools\n- Includes a set of longer-term collaborative projects in various stages of development to innovate on kernel and userspace changes, particularly around security\n\nLinuxKit currently supports the `x86_64`, `arm64`, and `s390x` architectures on a variety of platforms, both as virtual machines and baremetal (see [below](#booting-and-testing) for details).\n\n## Subprojects\n\n- [LinuxKit kubernetes](https://github.com/linuxkit/kubernetes) aims to build minimal and immutable Kubernetes images. (previously `projects/kubernetes` in this repository).\n- [LinuxKit LCOW](https://github.com/linuxkit/lcow) LinuxKit images and utilities for Microsoft's Linux Containers on Windows.\n- [linux](https://github.com/linuxkit/linux) A copy of the Linux stable tree with branches LinuxKit kernels.\n- [virtsock](https://github.com/linuxkit/virtsock) A `go` library and test utilities for `virtio` and Hyper-V sockets.\n- [rtf](https://github.com/linuxkit/rtf) A regression test framework used for the LinuxKit CI tests (and other projects).\n- [homebrew](https://github.com/linuxkit/homebrew-linuxkit) Homebrew packages for the `linuxkit` tool.\n\n## Getting Started\n\n### Build the `linuxkit` tool\n\nLinuxKit uses the `linuxkit` tool for building, pushing and running VM images.\n\nSimple build instructions: use `make` to build. This will build the tool in `bin/`. Add this\nto your `PATH` or copy it to somewhere in your `PATH` eg `sudo cp bin/* /usr/local/bin/`. Or you can use `sudo make install`.\n\nIf you already have `go` installed you can use `go install github.com/linuxkit/linuxkit/src/cmd/linuxkit@latest` to install the `linuxkit` tool.\n\nOn MacOS there is a `brew tap` available. Detailed instructions are at [linuxkit/homebrew-linuxkit](https://github.com/linuxkit/homebrew-linuxkit),\nthe short summary is\n```\nbrew tap linuxkit/linuxkit\nbrew install --HEAD linuxkit\n```\n\nBuild requirements from source using a container\n- GNU `make`\n- Docker\n- optionally `qemu`\n\nFor a local build using `make local`\n- `go`\n- `make`\n- `go get -u golang.org/x/lint/golint`\n- `go get -u github.com/gordonklaus/ineffassign`\n\n### Building images\n\nOnce you have built the tool, use\n\n```\nlinuxkit build linuxkit.yml\n```\nto build the example configuration. You can also specify different output formats, eg `linuxkit build --format raw-bios linuxkit.yml` to\noutput a raw BIOS bootable disk image, or `linuxkit build --format iso-efi linuxkit.yml` to output an EFI bootable ISO image. See `linuxkit build -help` for more information.\n\n### Booting and Testing\n\nYou can use `linuxkit run <name>` or `linuxkit run <name>.<format>` to\nexecute the image you created with `linuxkit build <name>.yml`.  This\nwill use a suitable backend for your platform or you can choose one,\nfor example VMWare.  See `linuxkit run --help`.\n\nCurrently supported platforms are:\n- Local hypervisors\n  - [Virtualization.Framework (macOS)](docs/platform-virtualization-framework.md) `[x86_64, arm64]`\n  - [HyperKit (macOS)](docs/platform-hyperkit.md) `[x86_64]`\n  - [Hyper-V (Windows)](docs/platform-hyperv.md) `[x86_64]`\n  - [qemu (macOS, Linux, Windows)](docs/platform-qemu.md) `[x86_64, arm64, s390x]`\n  - [VMware (macOS, Windows)](docs/platform-vmware.md) `[x86_64]`\n- Cloud based platforms:\n  - [Amazon Web Services](docs/platform-aws.md) `[x86_64]`\n  - [Google Cloud](docs/platform-gcp.md) `[x86_64]`\n  - [Microsoft Azure](docs/platform-azure.md) `[x86_64]`\n  - [OpenStack](docs/platform-openstack.md) `[x86_64]`\n  - [Scaleway](docs/platform-scaleway.md) `[x86_64]`\n- Baremetal:\n  - [deploy.equinix.com](docs/platform-equinixmetal.md) `[x86_64, arm64]`\n  - [Raspberry Pi Model 3b](docs/platform-rpi3.md)  `[arm64]`\n\n\n#### Running the Tests\n\nThe test suite uses [`rtf`](https://github.com/linuxkit/rtf) To\ninstall this you should use `make bin/rtf && make install`. You will\nalso need to install `expect` on your system as some tests use it.\n\nTo run the test suite:\n\n```\ncd test\nrtf -v run -x\n```\n\nThis will run the tests and put the results in a the `_results` directory!\n\nRun control is handled using labels and with pattern matching.\nTo run add a label you may use:\n\n```\nrtf -v -l slow run -x\n```\n\nTo run tests that match the pattern `linuxkit.examples` you would use the following command:\n\n```\nrtf -v run -x linuxkit.examples\n```\n\n## Building your own customised image\n\nTo customise, copy or modify the [`linuxkit.yml`](linuxkit.yml) to your own `file.yml` or use one of the [examples](examples/) and then run `linuxkit build file.yml` to\ngenerate its specified output. You can run the output with `linuxkit run file`.\n\nThe yaml file specifies a kernel and base init system, a set of containers that are built into the generated image and started at boot time. You can specify the type\nof artifact to build eg `linuxkit build -format vhd linuxkit.yml`.\n\nIf you want to build your own packages, see this [document](docs/packages.md).\n\n### Yaml Specification\n\nThe yaml format specifies the image to be built:\n\n- `kernel` specifies a kernel Docker image, containing a kernel and a filesystem tarball, eg containing modules. The example kernels are built from `kernel/`\n- `init` is the base `init` process Docker image, which is unpacked as the base system, containing `init`, `containerd`, `runc` and a few tools. Built from `pkg/init/`\n- `onboot` are the system containers, executed sequentially in order. They should terminate quickly when done.\n- `services` is the system services, which normally run for the whole time the system is up\n- `files` are additional files to add to the image\n\nFor a more detailed overview of the options see [yaml documentation](docs/yaml.md)\n\n## Architecture and security\n\nThere is an [overview of the architecture](docs/architecture.md) covering how the system works.\n\nThere is an [overview of the security considerations and direction](docs/security.md) covering the security design of the system.\n\n## Roadmap\n\nThis project was extensively reworked from the code we are shipping in Docker Editions, and the result is not yet production quality. The plan is to return to production\nquality during Q3 2017, and rebase the Docker Editions on this open source project during this quarter. We plan to start making stable releases on this timescale.\n\nThis is an open project without fixed judgements, open to the community to set the direction. The guiding principles are:\n- Security informs design\n- Infrastructure as code: immutable, manageable with code\n- Sensible, secure, and well-tested defaults\n- An open, pluggable platform for diverse use cases\n- Easy to use and participate in the project\n- Built with containers, for portability and reproducibility\n- Run with system containers, for isolation and extensibility\n- A base for robust products\n\n## Development reports\n\nThere are monthly [development reports](reports/) summarising the work carried out each month.\n\n## Adopters\n\nWe maintain an incomplete list of [adopters](ADOPTERS.md). Please open a PR if you are using LinuxKit in production or in your project, or both.\n\n## FAQ\n\nSee [FAQ](docs/faq.md).\n\nReleased under the [Apache 2.0 license](LICENSE).\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "kernel",
          "type": "tree",
          "content": null
        },
        {
          "name": "linuxkit-template.yml",
          "type": "blob",
          "size": 0.896484375,
          "content": "kernel:\n  image: linuxkit/kernel:6.6.13\n  cmdline: \"console=tty0 console=ttyS0 console=ttyAMA0\"\ninit:\n  - \"@pkg:./pkg/init\"\n  - \"@pkg:./pkg/runc\"\n  - \"@pkg:./pkg/containerd\"\n  - \"@pkg:./pkg/ca-certificates\"\nonboot:\n  - name: sysctl\n    image: \"@pkg:./pkg/sysctl\"\n  - name: dhcpcd\n    image: \"@pkg:./pkg/dhcpcd\"\n    command: [\"/sbin/dhcpcd\", \"--nobackground\", \"-f\", \"/dhcpcd.conf\", \"-1\"]\nonshutdown:\n  - name: shutdown\n    image: busybox:latest\n    command: [\"/bin/echo\", \"so long and thanks for all the fish\"]\nservices:\n  - name: getty\n    image: \"@pkg:./pkg/getty\"\n    env:\n     - INSECURE=true\n  - name: rngd\n    image: \"@pkg:./pkg/rngd\"\n  - name: nginx\n    image: nginx:1.19.5-alpine\n    capabilities:\n     - CAP_NET_BIND_SERVICE\n     - CAP_CHOWN\n     - CAP_SETUID\n     - CAP_SETGID\n     - CAP_DAC_OVERRIDE\n    binds:\n     - /etc/resolv.conf:/etc/resolv.conf\nfiles:\n  - path: etc/linuxkit-config\n    metadata: yaml\n"
        },
        {
          "name": "linuxkit.yml",
          "type": "blob",
          "size": 1.185546875,
          "content": "kernel:\n  image: linuxkit/kernel:6.6.13\n  cmdline: \"console=tty0 console=ttyS0 console=ttyAMA0\"\ninit:\n  - linuxkit/init:c9a1adb982eb4074c01a34ce43860b6df24c252d\n  - linuxkit/runc:bcd6268ea2d45dc7c6b43ca82d00dd01e7105f17\n  - linuxkit/containerd:d33b20080a2f88e833680dc8563b5a03a13a297e\n  - linuxkit/ca-certificates:e1688f69167c991bf5be1be809fd68685a4a4a9a\nonboot:\n  - name: sysctl\n    image: linuxkit/sysctl:0c5861d22fac133d5bf679e763a1df14ad927de2\n  - name: dhcpcd\n    image: linuxkit/dhcpcd:c1f461bd40fabb1f3bb77348ab52abad8393bdb3\n    command: [\"/sbin/dhcpcd\", \"--nobackground\", \"-f\", \"/dhcpcd.conf\", \"-1\"]\nonshutdown:\n  - name: shutdown\n    image: busybox:latest\n    command: [\"/bin/echo\", \"so long and thanks for all the fish\"]\nservices:\n  - name: getty\n    image: linuxkit/getty:42bfdda2fef25c9fd84a58bb88de1496a7cafcda\n    env:\n     - INSECURE=true\n  - name: rngd\n    image: linuxkit/rngd:9812bcbb096ae21650a32a1517a5903efd8ff40b\n  - name: nginx\n    image: nginx:1.19.5-alpine\n    capabilities:\n     - CAP_NET_BIND_SERVICE\n     - CAP_CHOWN\n     - CAP_SETUID\n     - CAP_SETGID\n     - CAP_DAC_OVERRIDE\n    binds:\n     - /etc/resolv.conf:/etc/resolv.conf\nfiles:\n  - path: etc/linuxkit-config\n    metadata: yaml\n"
        },
        {
          "name": "logo",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "poule.yml",
          "type": "blob",
          "size": 0.4150390625,
          "content": "# Add a \"status/0-triage\" to every newly opened pull request.\n- triggers:\n      pull_request: [ opened ]\n  operations:\n      - type:       label\n        filters: {\n            ~labels: [ \"status/0-triage\", \"status/1-design-review\", \"status/2-code-review\", \"status/3-docs-review\", \"status/4-merge\" ],\n        }\n        settings: {\n            patterns: {\n                status/0-triage:     [ \".*\" ],\n            }\n        }\n"
        },
        {
          "name": "projects",
          "type": "tree",
          "content": null
        },
        {
          "name": "reports",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "sigs",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}