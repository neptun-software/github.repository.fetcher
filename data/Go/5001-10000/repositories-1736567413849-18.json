{
  "metadata": {
    "timestamp": 1736567413849,
    "page": 18,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "gravitl/netmaker",
      "stars": 9648,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.03515625,
          "content": "config/dnsconfig/\ndata/\n/.git\n/*.tar"
        },
        {
          "name": ".fpm",
          "type": "blob",
          "size": 0.2041015625,
          "content": "--name netclient \n--license sspl \n--depends wireguard-tools \n--description \"Netmaker's netclient agent and CLI\" \n--url \"https//:github.com/gravitl/netmaker\" \n--maintainer \"info@gravitl.com\" \n--vendor Gravitl\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4833984375,
          "content": "netmaker\nnetmaker-arm\nnetmaker-arm64\nnetmaker-32\nnetmaker-amd64\ncli/nmctl\nnetclient/netclient\nnetclient/netclient.syso\nnetclient/build\nnetclient/build/\n!netclient/build/netclient.service\nnetclient/files/netclient\nnetclient/netclient-amd64\nnetclient/netclient-arm\nnetclient/netclient-arm64\nnetclient/netclient-32\nnetclient/netclient32\nnetclient/netclient.exe\nconfig/dnsconfig/\ncontrollers/config/dnsconfig/\ncontrollers/data/\ndata/\n.vscode/\n.idea/\nnetmaker.exe\nnetmaker.code-workspace\ndist/\nnmctl\n"
        },
        {
          "name": ".goreleaser.prerelease.yaml",
          "type": "blob",
          "size": 0.6318359375,
          "content": "before:\n  hooks:\n    # You may remove this if you don't use go modules.\n    - go mod tidy\nbuilds:\n  - main: ./\n    env:\n      - CGO_ENABLED=1\n    ldflags:\n      - -s -w\n    targets:\n      - linux_amd64\n    binary: '{{ .ProjectName }}'\n\n  - main: ./cli\n    id: 'nmctl'\n    env:\n      - CGO_ENABLED=0\n    ldflags:\n      - -s -w\n    targets:\n      - linux_amd64\n      - linux_arm64\n      - darwin_amd64\n      - darwin_arm64\n      - windows_amd64\n    binary: 'nmctl'\narchives:\n  - format: binary\n    name_template: '{{ .Binary }}-{{ .Os }}-{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}-{{ . }}{{ end }}'\nrelease:\n  prerelease: true\n    \n"
        },
        {
          "name": ".goreleaser.update.yaml",
          "type": "blob",
          "size": 0.05078125,
          "content": "builds:\n  - skip: true\nrelease:\n  prerelease: false\n"
        },
        {
          "name": ".goreleaser.yaml",
          "type": "blob",
          "size": 0.6328125,
          "content": "before:\n  hooks:\n    # You may remove this if you don't use go modules.\n    - go mod tidy\nbuilds:\n  - main: ./\n    env:\n      - CGO_ENABLED=1\n    ldflags:\n      - -s -w\n    targets:\n      - linux_amd64\n    binary: '{{ .ProjectName }}'\n\n  - main: ./cli\n    id: 'nmctl'\n    env:\n      - CGO_ENABLED=0\n    ldflags:\n      - -s -w\n    targets:\n      - linux_amd64\n      - linux_arm64\n      - darwin_amd64\n      - darwin_arm64\n      - windows_amd64\n    binary: 'nmctl'\narchives:\n  - format: binary\n    name_template: '{{ .Binary }}-{{ .Os }}-{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}-{{ . }}{{ end }}'\nrelease:\n  prerelease: false\n    \n"
        },
        {
          "name": ".swaggo",
          "type": "blob",
          "size": 0.06640625,
          "content": "// Replace all time.Duration with int64\nreplace time.Duration int64\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.6533203125,
          "content": "# How to contribute to Netmaker\n\nHey! We're glad you're here. We need your help making Netmaker as great as it can be.\n\nIf you haven't already, come chat with us in [Discord](https://discord.gg/zRb9Vfhk8A). We can help you find the right thing to work on.\n\nBefore you start contributing, take a moment to check here if it makes sense.\n\n#### **Did you find a bug?**\n\n* Search on on GitHub under [Issues](https://github.com/gravitl/netmaker/issues) to make sure the bug was not already discovered.\n\n* If you don't find an open issue that addresses the problem, you can [open a new one](https://github.com/gravitl/netmaker/issues/new). \n\n* If you're creating a new issue, include a **title and clear description**, as much relevant information as possible **including logs**, and an explanation/output demonstrating expected behavior vs. actual behavior. Make sure to specify the **version of netmaker/netclient.** If it's a server issue, describe the environment where the server is running. If it's a client issue, give us the operating system and any relevant environment factors (CGNAT, 4g router, etc).\n\n* Respond to team queries in a timely manner, since stale issues will be closed.\n\n#### **Did you write a patch that fixes a bug?**\n\n* Open a new GitHub pull request with the patch **against the 'develop' branch**.\n\n* The PR should clearly describe the problem and solution. Include an issue number if possible.\n\n* Make sure to add comments for any new functions\n\n#### **Did you fix whitespace, format code, or make a purely cosmetic patch?**\n\nCosmetic changes that do not add substantial useability, stability, functionality, or testability to the code base will not be accepted. The calculation is simple. If it will take more time to merge and test than it took you to make and submit the code, it is likely not worthwhile (execptions exist of course for critical errors with easy fixes).\n\n#### **Do you want to add a new feature to Netmaker?**\n\n* Once again, join the [Discord](https://discord.gg/zRb9Vfhk8A)! Bring it up there and we can discuss. Even if you do not know what you want to build, but you want to build something, we can help you choose something from the roadmap.\n\n#### **Do you want to contribute to Netmaker documentation?**\n\n* Make sure your documentation compiles correctly\n\n* You will need [sphinx](https://www.sphinx-doc.org/en/master/usage/installation.html) and the [material theme](https://github.com/bashtage/sphinx-material/) to run the documentation locally.\n\n* Once the above plugins are installed, you can navigate to the **docs** directory and run **make html**\n\n* View the compiled files (start with index.html under _build) in your browser and make sure your changes look correct before submitting.\n\n\n## Submitting Changes\n\n* Please label your branch using our convention: **purpose_version_thing-you-did**. Purpose is either feature, bugfix, or hotfix.\n\n* Examples: feature_v0.9.5_widget, bugfix_v0.8.2_ipv6-changes\n\n* Please open a [Pull Request](https://github.com/gravitl/netmaker/compare/develop...master?expand=1) against the develop branch with your branch which clearly describes everything you've done and references any related GitHub issues. \n\n* You will need to sign the CLA in order for us to accept your changes (a bot should appear asking you to sign)\n\n* Please respond to any feedback in a timely manner. Stale PR's will be closed periodically.\n\n## Coding conventions\n\nTake a look around the code to get a feel for how we're doing things.\n\n* Use private functions where possible\n* Use the custom loggers for log messages\n* Comment any new public functions\n\n\n\n\n## Thanks for taking the time to read this! You're awesome, and we look forward to working with you!\n  \n-The Netmaker Team\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.4306640625,
          "content": "#first stage - builder\nFROM gravitl/go-builder:1.23.0 AS builder\nARG tags \nWORKDIR /app\nCOPY . .\n\nRUN GOOS=linux CGO_ENABLED=1 go build -ldflags=\"-s -w \" -tags ${tags} .\n# RUN go build -tags=ee . -o netmaker main.go\nFROM alpine:3.21.0\n\n# add a c lib\n# set the working directory\nWORKDIR /root/\nRUN mkdir -p /etc/netclient/config\nCOPY --from=builder /app/netmaker .\nCOPY --from=builder /app/config config\nEXPOSE 8081\nENTRYPOINT [\"./netmaker\"]\n"
        },
        {
          "name": "Dockerfile-quick",
          "type": "blob",
          "size": 0.2890625,
          "content": "#first stage - builder\nFROM alpine:3.21.0\nARG version \nWORKDIR /app\nCOPY ./netmaker /root/netmaker\nENV GO111MODULE=auto\n\n# add a c lib\nRUN apk add gcompat iptables wireguard-tools\n# set the working directory\nWORKDIR /root/\nRUN mkdir -p /etc/netclient/config\nEXPOSE 8081\nENTRYPOINT [\"./netmaker\"]\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 11.396484375,
          "content": "Copyright (c) 2023 Netmaker,Inc.\n\nPortions of this software are licensed as follows:\n\n* All content that resides under the \"pro/\" directory of this repository, if that directory exists, is licensed under the license defined in \"pro/LICENSE\".\n* All third party components incorporated into the Netmaker Software are licensed under the original license provided by the owner of the applicable component.\n* Content outside of the above mentioned directories or restrictions above is available under the \"Apache Version 2.0\" license as defined below.\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [2023] Netmaker,Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.29296875,
          "content": "\n<p align=\"center\">\n  <a href=\"https://netmaker.io\">\n  <img src=\"https://raw.githubusercontent.com/gravitl/netmaker-docs/master/images/netmaker-github/netmaker-teal.png\" width=\"50%\"><break/>\n  </a>\n</p>\n\n<p align=\"center\">\n<a href=\"https://runacap.com/ross-index/annual-2022/\" target=\"_blank\" rel=\"noopener\">\n    <img src=\"https://runacap.com/wp-content/uploads/2023/02/Annual_ROSS_badge_white_2022.svg\" alt=\"ROSS Index - Fastest Growing Open-Source Startups | Runa Capital\" width=\"17%\" />\n</a>  \n<a href=\"https://www.ycombinator.com/companies/netmaker/\" target=\"_blank\" rel=\"noopener\">\n    <img src=\"https://raw.githubusercontent.com/gravitl/netmaker-docs/master/images/netmaker-github/y-combinator.png\" alt=\"Y-Combinator\" width=\"16%\" />\n</a>  \n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/gravitl/netmaker/releases\">\n    <img src=\"https://img.shields.io/badge/Version-0.30.0-informational?style=flat-square\" />\n  </a>\n  <a href=\"https://hub.docker.com/r/gravitl/netmaker/tags\">\n    <img src=\"https://img.shields.io/docker/pulls/gravitl/netmaker?label=downloads\" />\n  </a>  \n  <a href=\"https://goreportcard.com/report/github.com/gravitl/netmaker\">\n    <img src=\"https://goreportcard.com/badge/github.com/gravitl/netmaker\" />\n  </a>\n  <a href=\"https://twitter.com/intent/follow?screen_name=netmaker_io\">\n    <img src=\"https://img.shields.io/twitter/follow/netmaker_io?label=follow&style=social\" />\n  </a>\n  <a href=\"https://www.youtube.com/channel/UCach3lJY_xBV7rGrbUSvkZQ\">\n    <img src=\"https://img.shields.io/youtube/channel/views/UCach3lJY_xBV7rGrbUSvkZQ?style=social\" />\n  </a>\n  <a href=\"https://reddit.com/r/netmaker\">\n    <img src=\"https://img.shields.io/reddit/subreddit-subscribers/netmaker?label=%2Fr%2Fnetmaker&style=social\" />\n  </a>  \n  <a href=\"https://discord.gg/zRb9Vfhk8A\">\n    <img src=\"https://img.shields.io/discord/825071750290210916?color=%09%237289da&label=chat\" />\n  </a> \n</p>\n\n# WireGuard<sup>®</sup> automation from homelab to enterprise\n\n| Create                                    | Manage                                  | Automate                                |\n|-------------------------------------------|-----------------------------------------|-----------------------------------------|\n| :heavy_check_mark: WireGuard Networks     | :heavy_check_mark: Admin UI             | :heavy_check_mark: Linux                |\n| :heavy_check_mark: Remote Access Gateways | :heavy_check_mark: OAuth                | :heavy_check_mark: Docker              |\n| :heavy_check_mark: Mesh VPNs              | :heavy_check_mark: Private DNS          | :heavy_check_mark: Mac                  |\n| :heavy_check_mark: Site-to-Site           | :heavy_check_mark: Access Control Lists | :heavy_check_mark: Windows              |\n\n# Try Netmaker SaaS  \n\nIf you're looking for a managed service, you can get started with just a few clicks, visit [netmaker.io](https://account.netmaker.io) to create your netmaker server.  \n\n# Self-Hosted Open Source Quick Start  \n\nThese are the instructions for deploying a Netmaker server on your cloud VM as quickly as possible. For more detailed instructions, visit the [Install Docs](https://docs.netmaker.io/docs/server-installation/quick-install#quick-install-script).  \n\n1. Get a cloud VM with Ubuntu 24.04 and a public IP.\n2. Allow inbound traffic on port 443 TCP and UDP to the VM firewall in cloud security settings, and for simplicity, allow outbound on All TCP and All UDP.\n3. (recommended) Prepare DNS - Set a wildcard subdomain in your DNS settings for Netmaker, e.g. *.netmaker.example.com, which points to your VM's public IP.\n4. Run the script to setup open source version of Netmaker: \n\n`sudo wget -qO /root/nm-quick.sh https://raw.githubusercontent.com/gravitl/netmaker/master/scripts/nm-quick.sh && sudo chmod +x /root/nm-quick.sh && sudo /root/nm-quick.sh`\n\n**<pre>To Install Self-Hosted PRO Version - https://docs.netmaker.io/docs/server-installation/netmaker-professional-setup</pre>** \n\n\n\n<p float=\"left\" align=\"middle\">\n<img src=\"https://raw.githubusercontent.com/gravitl/netmaker-docs/master/images/netmaker-github/readme.gif\" />\n</p>\n\nAfter installing Netmaker, check out the [Walkthrough](https://itnext.io/getting-started-with-netmaker-a-wireguard-virtual-networking-platform-3d563fbd87f0) and [Getting Started](https://docs.netmaker.io/docs/getting-started) guides to learn more about configuring networks. Or, check out some of our other [Tutorials](https://www.netmaker.io/blog) for different use cases, including Kubernetes.\n\n# Get Support\n\n- [Discord](https://discord.gg/zRb9Vfhk8A)\n\n- [Reddit](https://reddit.com/r/netmaker)\n\n- [Learning Resources](https://netmaker.io/blog)\n\n# Why Netmaker + WireGuard?\n\n- Netmaker automates virtual networks between data centres, clouds, and edge devices, so you don't have to.\n\n- Kernel WireGuard offers maximum speed, performance, and security. \n\n- Netmaker is built to scale from small businesses to enterprises. \n\n- Netmaker with WireGuard can be highly customized for peer-to-peer, site-to-site, Kubernetes, and more.\n\n# Community Projects\n\n- [Netmaker + Traefik Proxy](https://github.com/bsherman/netmaker-traefik)\n\n- [OpenWRT Netclient Packager](https://github.com/sbilly/netmaker-openwrt)\n\n- [Golang GUI](https://github.com/mattkasun/netmaker-gui)\n\n- [CoreDNS Plugin](https://github.com/gravitl/netmaker-coredns-plugin)\n\n- [Multi-Cluster K8S Plugin](https://github.com/gravitl/netmak8s)\n\n- [Terraform Provider](https://github.com/madacluster/netmaker-terraform-provider)\n\n- [VyOS Integration](https://github.com/kylechase/vyos-netmaker)\n\n- [Netmaker K3S](https://github.com/geragcp/netmaker-k3s)\n\n- [Run Netmaker + Netclient with Podman](https://github.com/agorgl/nm-setup)\n\n## Disclaimer\n [WireGuard](https://wireguard.com/) is a registered trademark of Jason A. Donenfeld.\n\n## License\n\nNetmaker's source code and all artifacts in this repository are freely available.\nAll content that resides under the \"pro/\" directory of this repository, if that\ndirectory exists, is licensed under the license defined in \"pro/LICENSE\".\nAll third party components incorporated into the Netmaker Software are licensed\nunder the original license provided by the owner of the applicable component.\nContent outside of the above mentioned directories or restrictions above is\navailable under the \"Apache Version 2.0\" license as defined below.\nAll details for the licenses used can be found here: [LICENSE.md](./LICENSE.md).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.462890625,
          "content": "# Security Policy\n\nNetmaker is reliant on secure networking. If you find a vulnerability or bug please report it.\nDepending on complexity or severity, the Gravitl team may compensate (aka. bug bounty) the reporter. \nHowever, there is no official bug bounty program up yet for the Netmaker project.\n\n## Supported Versions\n- We currently are only able to support work on the latest version(s)\n\n## Reporting a Vulnerability\n\nPlease report security issues to `info@netmaker.io`\n"
        },
        {
          "name": "auth",
          "type": "tree",
          "content": null
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "compose",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "controllers",
          "type": "tree",
          "content": null
        },
        {
          "name": "database",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev.yaml",
          "type": "blob",
          "size": 0.6181640625,
          "content": "server:\n  corednsaddr: \"\"\n  apiconn: \"api.ping.clustercat.com:443\"\n  apihost: \"\"\n  apiport: \"8081\"\n  mqhost: \"localhost\"\n  masterkey: \"secretkey\"\n  dnskey: \"\"\n  allowedorigin: \"*\"\n  nodeid: \"netmaker\"\n  restbackend: \"on\"\n  messagequeuebackend: \"on\"\n  dnsmode: \"on\"\n  disableremoteipcheck: \"\"\n  grpcssl: \"on\"\n  version: \"\"\n  sqlconn: \"\"\n  platform: \"\"\n  database: \"sqlite\"\n  verbosity: 3\n  authprovider: \"\"\n  clientid: \"\"\n  clientsecret: \"\"\n  frontendurl: \"\"\n  displaykeys: \"\"\n  azuretenant: \"\"\n  telemetry: \"\"\n  manageiptables: \"off\"\n  portforwardservices: \"\"\n  hostnetwork: \"off\"\n  mqport: \"\"\n  server: \"broker.ping.clustercat.com\"\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "functions",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 2.337890625,
          "content": "module github.com/gravitl/netmaker\n\ngo 1.23\n\nrequire (\n\tgithub.com/blang/semver v3.5.1+incompatible\n\tgithub.com/eclipse/paho.mqtt.golang v1.4.3\n\tgithub.com/go-playground/validator/v10 v10.23.0\n\tgithub.com/golang-jwt/jwt/v4 v4.5.1\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/gorilla/handlers v1.5.2\n\tgithub.com/gorilla/mux v1.8.1\n\tgithub.com/lib/pq v1.10.9\n\tgithub.com/mattn/go-sqlite3 v1.14.24\n\tgithub.com/rqlite/gorqlite v0.0.0-20240122221808-a8a425b1a6aa\n\tgithub.com/seancfoley/ipaddress-go v1.7.0\n\tgithub.com/skip2/go-qrcode v0.0.0-20200617195104-da1b6568686e\n\tgithub.com/stretchr/testify v1.10.0\n\tgithub.com/txn2/txeh v1.5.5\n\tgo.uber.org/automaxprocs v1.6.0\n\tgolang.org/x/crypto v0.30.0\n\tgolang.org/x/net v0.27.0 // indirect\n\tgolang.org/x/oauth2 v0.24.0\n\tgolang.org/x/sys v0.28.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgolang.zx2c4.com/wireguard/wgctrl v0.0.0-20221104135756-97bc4ad4a1cb\n\tgopkg.in/yaml.v3 v3.0.1\n)\n\nrequire (\n\tfilippo.io/edwards25519 v1.1.0\n\tgithub.com/c-robinson/iplib v1.0.8\n\tgithub.com/posthog/posthog-go v1.2.24\n)\n\nrequire (\n\tgithub.com/coreos/go-oidc/v3 v3.9.0\n\tgithub.com/gorilla/websocket v1.5.3\n\tgolang.org/x/exp v0.0.0-20230522175609-2e198f4a06a1\n)\n\nrequire (\n\tgithub.com/goombaio/namegenerator v0.0.0-20181006234301-989e774b106e\n\tgithub.com/guumaster/tablewriter v0.0.10\n\tgithub.com/matryer/is v1.4.1\n\tgithub.com/olekukonko/tablewriter v0.0.5\n\tgithub.com/spf13/cobra v1.8.1\n\tgopkg.in/mail.v2 v2.3.1\n)\n\nrequire (\n\tcloud.google.com/go/compute/metadata v0.3.0 // indirect\n\tgithub.com/gabriel-vasile/mimetype v1.4.3 // indirect\n\tgithub.com/go-jose/go-jose/v3 v3.0.3 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/kr/text v0.2.0 // indirect\n\tgithub.com/rivo/uniseg v0.2.0 // indirect\n\tgithub.com/seancfoley/bintree v1.3.1 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgopkg.in/alexcesaro/quotedprintable.v3 v3.0.0-20150716171945-2caba252f4dc // indirect\n)\n\nrequire (\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.3 // indirect\n\tgithub.com/go-playground/locales v0.14.1 // indirect\n\tgithub.com/go-playground/universal-translator v0.18.1 // indirect\n\tgithub.com/hashicorp/go-version v1.7.0\n\tgithub.com/leodido/go-urn v1.4.0 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.13 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgolang.org/x/sync v0.10.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 14.453125,
          "content": "cloud.google.com/go/compute/metadata v0.3.0 h1:Tz+eQXMEqDIKRsmY3cHTL6FVaynIjX2QxYC4trgAKZc=\ncloud.google.com/go/compute/metadata v0.3.0/go.mod h1:zFmK7XCadkQkj6TtorcaGlCW1hT1fIilQDwofLpJ20k=\nfilippo.io/edwards25519 v1.1.0 h1:FNf4tywRC1HmFuKW5xopWpigGjJKiJSV0Cqo0cJWDaA=\nfilippo.io/edwards25519 v1.1.0/go.mod h1:BxyFTGdWcka3PhytdK4V28tE5sGfRvvvRV7EaN4VDT4=\ngithub.com/blang/semver v3.5.1+incompatible h1:cQNTCjp13qL8KC3Nbxr/y2Bqb63oX6wdnnjpJbkM4JQ=\ngithub.com/blang/semver v3.5.1+incompatible/go.mod h1:kRBLl5iJ+tD4TcOOxsy/0fnwebNt5EWlYSAyrTnjyyk=\ngithub.com/c-robinson/iplib v1.0.8 h1:exDRViDyL9UBLcfmlxxkY5odWX5092nPsQIykHXhIn4=\ngithub.com/c-robinson/iplib v1.0.8/go.mod h1:i3LuuFL1hRT5gFpBRnEydzw8R6yhGkF4szNDIbF8pgo=\ngithub.com/coreos/go-oidc/v3 v3.9.0 h1:0J/ogVOd4y8P0f0xUh8l9t07xRP/d8tccvjHl2dcsSo=\ngithub.com/coreos/go-oidc/v3 v3.9.0/go.mod h1:rTKz2PYwftcrtoCzV5g5kvfJoWcm0Mk8AF8y1iAQro4=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/eclipse/paho.mqtt.golang v1.4.3 h1:2kwcUGn8seMUfWndX0hGbvH8r7crgcJguQNCyp70xik=\ngithub.com/eclipse/paho.mqtt.golang v1.4.3/go.mod h1:CSYvoAlsMkhYOXh/oKyxa8EcBci6dVkLCbo5tTC1RIE=\ngithub.com/felixge/httpsnoop v1.0.3 h1:s/nj+GCswXYzN5v2DpNMuMQYe+0DDwt5WVCU6CWBdXk=\ngithub.com/felixge/httpsnoop v1.0.3/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/gabriel-vasile/mimetype v1.4.3 h1:in2uUcidCuFcDKtdcBxlR0rJ1+fsokWf+uqxgUFjbI0=\ngithub.com/gabriel-vasile/mimetype v1.4.3/go.mod h1:d8uq/6HKRL6CGdk+aubisF/M5GcPfT7nKyLpA0lbSSk=\ngithub.com/go-jose/go-jose/v3 v3.0.3 h1:fFKWeig/irsp7XD2zBxvnmA/XaRWp5V3CBsZXJF7G7k=\ngithub.com/go-jose/go-jose/v3 v3.0.3/go.mod h1:5b+7YgP7ZICgJDBdfjZaIt+H/9L9T/YQrVfLAMboGkQ=\ngithub.com/go-playground/assert/v2 v2.2.0 h1:JvknZsQTYeFEAhQwI4qEt9cyV5ONwRHC+lYKSsYSR8s=\ngithub.com/go-playground/assert/v2 v2.2.0/go.mod h1:VDjEfimB/XKnb+ZQfWdccd7VUvScMdVu0Titje2rxJ4=\ngithub.com/go-playground/locales v0.14.1 h1:EWaQ/wswjilfKLTECiXz7Rh+3BjFhfDFKv/oXslEjJA=\ngithub.com/go-playground/locales v0.14.1/go.mod h1:hxrqLVvrK65+Rwrd5Fc6F2O76J/NuW9t0sjnWqG1slY=\ngithub.com/go-playground/universal-translator v0.18.1 h1:Bcnm0ZwsGyWbCzImXv+pAJnYK9S473LQFuzCbDbfSFY=\ngithub.com/go-playground/universal-translator v0.18.1/go.mod h1:xekY+UJKNuX9WP91TpwSH2VMlDf28Uj24BCp08ZFTUY=\ngithub.com/go-playground/validator/v10 v10.23.0 h1:/PwmTwZhS0dPkav3cdK9kV1FsAmrL8sThn8IHr/sO+o=\ngithub.com/go-playground/validator/v10 v10.23.0/go.mod h1:dbuPbCMFw/DrkbEynArYaCwl3amGuJotoKCe95atGMM=\ngithub.com/golang-jwt/jwt/v4 v4.5.1 h1:JdqV9zKUdtaa9gdPlywC3aeoEsR681PlKC+4F5gQgeo=\ngithub.com/golang-jwt/jwt/v4 v4.5.1/go.mod h1:m21LjoU+eqJr34lmDMbreY2eSTRJ1cv77w39/MY0Ch0=\ngithub.com/google/go-cmp v0.5.9 h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/goombaio/namegenerator v0.0.0-20181006234301-989e774b106e h1:XmA6L9IPRdUr28a+SK/oMchGgQy159wvzXA5tJ7l+40=\ngithub.com/goombaio/namegenerator v0.0.0-20181006234301-989e774b106e/go.mod h1:AFIo+02s+12CEg8Gzz9kzhCbmbq6JcKNrhHffCGA9z4=\ngithub.com/gorilla/handlers v1.5.2 h1:cLTUSsNkgcwhgRqvCNmdbRWG0A3N4F+M2nWKdScwyEE=\ngithub.com/gorilla/handlers v1.5.2/go.mod h1:dX+xVpaxdSw+q0Qek8SSsl3dfMk3jNddUkMzo0GtH0w=\ngithub.com/gorilla/mux v1.8.1 h1:TuBL49tXwgrFYWhqrNgrUNEY92u81SPhu7sTdzQEiWY=\ngithub.com/gorilla/mux v1.8.1/go.mod h1:AKf9I4AEqPTmMytcMc0KkNouC66V3BtZ4qD5fmWSiMQ=\ngithub.com/gorilla/websocket v1.5.3 h1:saDtZ6Pbx/0u+bgYQ3q96pZgCzfhKXGPqt7kZ72aNNg=\ngithub.com/gorilla/websocket v1.5.3/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/guumaster/tablewriter v0.0.10 h1:A0HD94yMdt4usgxBjoEceNeE0XMJ027euoHAzsPqBQs=\ngithub.com/guumaster/tablewriter v0.0.10/go.mod h1:p4FRFhyfo0UD9ZLmMRbbJooTUsxo6b80qZTERVDWrH8=\ngithub.com/hashicorp/go-version v1.7.0 h1:5tqGy27NaOTB8yJKUZELlFAS/LTKJkrmONwQKeRZfjY=\ngithub.com/hashicorp/go-version v1.7.0/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/kr/pretty v0.1.0 h1:L/CwN0zerZDmRFUapSPitk6f+Q3+0za1rQkzVuMiMFI=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/leodido/go-urn v1.4.0 h1:WT9HwE9SGECu3lg4d/dIA+jxlljEa1/ffXKmRjqdmIQ=\ngithub.com/leodido/go-urn v1.4.0/go.mod h1:bvxc+MVxLKB4z00jd1z+Dvzr47oO32F/QSNjSBOlFxI=\ngithub.com/lib/pq v1.10.9 h1:YXG7RB+JIjhP29X+OtkiDnYaXQwpS4JEWq7dtCCRUEw=\ngithub.com/lib/pq v1.10.9/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/matryer/is v1.4.1 h1:55ehd8zaGABKLXQUe2awZ99BD/PTc2ls+KV/dXphgEQ=\ngithub.com/matryer/is v1.4.1/go.mod h1:8I/i5uYgLzgsgEloJE1U6xx5HkBQpAZvepWuujKwMRU=\ngithub.com/mattn/go-runewidth v0.0.9/go.mod h1:H031xJmbD/WCDINGzjvQ9THkh0rPKHF+m2gUSrubnMI=\ngithub.com/mattn/go-runewidth v0.0.10/go.mod h1:RAqKPSqVFrSLVXbA8x7dzmKdmGzieGRCM46jaSJTDAk=\ngithub.com/mattn/go-runewidth v0.0.13 h1:lTGmDsbAYt5DmK6OnoV7EuIF1wEIFAcxld6ypU4OSgU=\ngithub.com/mattn/go-runewidth v0.0.13/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\ngithub.com/mattn/go-sqlite3 v1.14.24 h1:tpSp2G2KyMnnQu99ngJ47EIkWVmliIizyZBfPrBWDRM=\ngithub.com/mattn/go-sqlite3 v1.14.24/go.mod h1:Uh1q+B4BYcTPb+yiD3kU8Ct7aC0hY9fxUwlHK0RXw+Y=\ngithub.com/olekukonko/tablewriter v0.0.5 h1:P2Ga83D34wi1o9J6Wh1mRuqd4mF/x/lgBS7N7AbDhec=\ngithub.com/olekukonko/tablewriter v0.0.5/go.mod h1:hPp6KlRPjbx+hW8ykQs1w3UBbZlj6HuIJcUGPhkA7kY=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/posthog/posthog-go v1.2.24 h1:A+iG4saBJemo++VDlcWovbYf8KFFNUfrCoJtsc40RPA=\ngithub.com/posthog/posthog-go v1.2.24/go.mod h1:uYC2l1Yktc8E+9FAHJ9QZG4vQf/NHJPD800Hsm7DzoM=\ngithub.com/prashantv/gostub v1.1.0 h1:BTyx3RfQjRHnUWaGF9oQos79AlQ5k8WNktv7VGvVH4g=\ngithub.com/prashantv/gostub v1.1.0/go.mod h1:A5zLQHz7ieHGG7is6LLXLz7I8+3LZzsrV0P1IAHhP5U=\ngithub.com/rivo/uniseg v0.1.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rivo/uniseg v0.2.0 h1:S1pD9weZBuJdFmowNwbpi7BJ8TNftyUImj/0WQi72jY=\ngithub.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rqlite/gorqlite v0.0.0-20240122221808-a8a425b1a6aa h1:hxMLFbj+F444JAS5nUQxTDZwUxwCRqg3WkNqhiDzXrM=\ngithub.com/rqlite/gorqlite v0.0.0-20240122221808-a8a425b1a6aa/go.mod h1:xF/KoXmrRyahPfo5L7Szb5cAAUl53dMWBh9cMruGEZg=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/seancfoley/bintree v1.3.1 h1:cqmmQK7Jm4aw8gna0bP+huu5leVOgHGSJBEpUx3EXGI=\ngithub.com/seancfoley/bintree v1.3.1/go.mod h1:hIUabL8OFYyFVTQ6azeajbopogQc2l5C/hiXMcemWNU=\ngithub.com/seancfoley/ipaddress-go v1.7.0 h1:vWp3SR3k+HkV3aKiNO2vEe6xbVxS0x/Ixw6hgyP238s=\ngithub.com/seancfoley/ipaddress-go v1.7.0/go.mod h1:TQRZgv+9jdvzHmKoPGBMxyiaVmoI0rYpfEk8Q/sL/Iw=\ngithub.com/skip2/go-qrcode v0.0.0-20200617195104-da1b6568686e h1:MRM5ITcdelLK2j1vwZ3Je0FKVCfqOLp5zO6trqMLYs0=\ngithub.com/skip2/go-qrcode v0.0.0-20200617195104-da1b6568686e/go.mod h1:XV66xRDqSt+GTGFMVlhk3ULuV0y9ZmzeVGR4mloJI3M=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/txn2/txeh v1.5.5 h1:UN4e/lCK5HGw/gGAi2GCVrNKg0GTCUWs7gs5riaZlz4=\ngithub.com/txn2/txeh v1.5.5/go.mod h1:qYzGG9kCzeVEI12geK4IlanHWY8X4uy/I3NcW7mk8g4=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngo.uber.org/automaxprocs v1.6.0 h1:O3y2/QNTOdbF+e/dpXNNW7Rx2hZ4sTIPyybbxyNqTUs=\ngo.uber.org/automaxprocs v1.6.0/go.mod h1:ifeIMSnPZuznNm6jmdzmU3/bfk01Fe2fotchwEFJ8r8=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.19.0/go.mod h1:Iy9bg/ha4yyC70EfRS8jz+B6ybOBKMaSxLj6P6oBDfU=\ngolang.org/x/crypto v0.30.0 h1:RwoQn3GkWiMkzlX562cLB7OxWvjH1L8xutO2WoJcRoY=\ngolang.org/x/crypto v0.30.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20230522175609-2e198f4a06a1 h1:k/i9J1pBpvlfR+9QsetwPyERsqu1GIbi967PQMq3Ivc=\ngolang.org/x/exp v0.0.0-20230522175609-2e198f4a06a1/go.mod h1:V1LtkGg67GoY2N1AnLN78QLrzxkLyJw7RJb1gzOOz9w=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=\ngolang.org/x/net v0.27.0 h1:5K3Njcw06/l2y9vpGCSdcxWOYHOUk3dVNGDXN+FvAys=\ngolang.org/x/net v0.27.0/go.mod h1:dDi0PyhWNoiUOrAS8uXv/vnScO4wnHQO4mj9fn/RytE=\ngolang.org/x/oauth2 v0.24.0 h1:KTBBxWqUa0ykRPLtV69rRto9TLXcqYkeswu48x/gvNE=\ngolang.org/x/oauth2 v0.24.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=\ngolang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.zx2c4.com/wireguard/wgctrl v0.0.0-20221104135756-97bc4ad4a1cb h1:9aqVcYEDHmSNb0uOWukxV5lHV09WqiSiCuhEgWNETLY=\ngolang.zx2c4.com/wireguard/wgctrl v0.0.0-20221104135756-97bc4ad4a1cb/go.mod h1:mQqgjkW8GQQcJQsbBvK890TKqUK1DfKWkuBGbOkuMHQ=\ngopkg.in/alexcesaro/quotedprintable.v3 v3.0.0-20150716171945-2caba252f4dc h1:2gGKlE2+asNV9m7xrywl36YYNnBG5ZQ0r/BOOxqPpmk=\ngopkg.in/alexcesaro/quotedprintable.v3 v3.0.0-20150716171945-2caba252f4dc/go.mod h1:m7x9LTH6d71AHyAX77c9yqWCCa3UKHcVEj9y7hAtKDk=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127 h1:qIbj1fsPNlZgppZ+VLlY7N33q108Sa+fhmuc+sWQYwY=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/mail.v2 v2.3.1 h1:WYFn/oANrAGP2C0dcV6/pbkPzv8yGzqTjPmTeO7qoXk=\ngopkg.in/mail.v2 v2.3.1/go.mod h1:htwXN1Qh09vZJ1NVKxQqHPBaCBbzKhp5GzuJEA4VJWw=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "k8s",
          "type": "tree",
          "content": null
        },
        {
          "name": "logger",
          "type": "tree",
          "content": null
        },
        {
          "name": "logic",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 6.19140625,
          "content": "// -build ee\npackage main\n\nimport (\n\t\"context\"\n\t\"flag\"\n\t\"fmt\"\n\t\"os\"\n\t\"os/signal\"\n\t\"path/filepath\"\n\t\"runtime/debug\"\n\t\"sync\"\n\t\"syscall\"\n\n\t\"github.com/gravitl/netmaker/config\"\n\tcontroller \"github.com/gravitl/netmaker/controllers\"\n\t\"github.com/gravitl/netmaker/database\"\n\t\"github.com/gravitl/netmaker/functions\"\n\t\"github.com/gravitl/netmaker/logger\"\n\t\"github.com/gravitl/netmaker/logic\"\n\t\"github.com/gravitl/netmaker/migrate\"\n\t\"github.com/gravitl/netmaker/models\"\n\t\"github.com/gravitl/netmaker/mq\"\n\t\"github.com/gravitl/netmaker/netclient/ncutils\"\n\t\"github.com/gravitl/netmaker/servercfg\"\n\t\"github.com/gravitl/netmaker/serverctl\"\n\t_ \"go.uber.org/automaxprocs\"\n\t\"golang.org/x/exp/slog\"\n)\n\nvar version = \"v0.30.0\"\n\n//\t@title\t\t\tNetMaker\n//\t@version\t\t0.30.0\n//\t@description\tNetMaker API Docs\n//\t@tag.name\t    APIUsage\n//\t@tag.description.markdown\n//\t@tag.name\t    Authentication\n//\t@tag.description.markdown\n//\t@tag.name\t    Pricing\n//\t@tag.description.markdown\n//  @host      api.demo.netmaker.io\n\n// Start DB Connection and start API Request Handler\nfunc main() {\n\tabsoluteConfigPath := flag.String(\"c\", \"\", \"absolute path to configuration file\")\n\tflag.Parse()\n\tsetupConfig(*absoluteConfigPath)\n\tservercfg.SetVersion(version)\n\tfmt.Println(models.RetrieveLogo()) // print the logo\n\tinitialize()                       // initial db and acls\n\tlogic.SetAllocatedIpMap()\n\tdefer logic.ClearAllocatedIpMap()\n\tsetGarbageCollection()\n\tsetVerbosity()\n\tif servercfg.DeployedByOperator() && !servercfg.IsPro {\n\t\tlogic.SetFreeTierLimits()\n\t}\n\tdefer database.CloseDB()\n\tctx, stop := signal.NotifyContext(context.Background(), syscall.SIGTERM, os.Interrupt)\n\tdefer stop()\n\tvar waitGroup sync.WaitGroup\n\tstartControllers(&waitGroup, ctx) // start the api endpoint and mq and stun\n\tstartHooks()\n\t<-ctx.Done()\n\twaitGroup.Wait()\n}\n\nfunc setupConfig(absoluteConfigPath string) {\n\tif len(absoluteConfigPath) > 0 {\n\t\tcfg, err := config.ReadConfig(absoluteConfigPath)\n\t\tif err != nil {\n\t\t\tlogger.Log(0, fmt.Sprintf(\"failed parsing config at: %s\", absoluteConfigPath))\n\t\t\treturn\n\t\t}\n\t\tconfig.Config = cfg\n\t}\n}\n\nfunc startHooks() {\n\terr := logic.TimerCheckpoint()\n\tif err != nil {\n\t\tlogger.Log(1, \"Timer error occurred: \", err.Error())\n\t}\n\tlogic.EnterpriseCheck()\n}\n\nfunc initialize() { // Client Mode Prereq Check\n\tvar err error\n\n\tif servercfg.GetMasterKey() == \"\" {\n\t\tlogger.Log(0, \"warning: MASTER_KEY not set, this could make account recovery difficult\")\n\t}\n\n\tif servercfg.GetNodeID() == \"\" {\n\t\tlogger.FatalLog(\"error: must set NODE_ID, currently blank\")\n\t}\n\n\tif err = database.InitializeDatabase(); err != nil {\n\t\tlogger.FatalLog(\"Error connecting to database: \", err.Error())\n\t}\n\tlogger.Log(0, \"database successfully connected\")\n\n\t//initialize cache\n\t_, _ = logic.GetNetworks()\n\t_, _ = logic.GetAllNodes()\n\t_, _ = logic.GetAllHosts()\n\t_, _ = logic.GetAllExtClients()\n\t_ = logic.ListAcls()\n\t_, _ = logic.GetAllEnrollmentKeys()\n\n\tmigrate.Run()\n\n\tlogic.SetJWTSecret()\n\tlogic.InitialiseRoles()\n\tlogic.IntialiseGroups()\n\terr = serverctl.SetDefaults()\n\tif err != nil {\n\t\tlogger.FatalLog(\"error setting defaults: \", err.Error())\n\t}\n\n\tif servercfg.IsDNSMode() {\n\t\terr := functions.SetDNSDir()\n\t\tif err != nil {\n\t\t\tlogger.FatalLog(err.Error())\n\t\t}\n\t}\n\n\tif servercfg.IsMessageQueueBackend() {\n\t\tif err = mq.ServerStartNotify(); err != nil {\n\t\t\tlogger.Log(0, \"error occurred when notifying nodes of startup\", err.Error())\n\t\t}\n\t}\n}\n\nfunc startControllers(wg *sync.WaitGroup, ctx context.Context) {\n\tif servercfg.IsDNSMode() {\n\t\terr := logic.SetDNS()\n\t\tif err != nil {\n\t\t\tlogger.Log(0, \"error occurred initializing DNS: \", err.Error())\n\t\t}\n\t}\n\n\t//Run Rest Server\n\tif servercfg.IsRestBackend() {\n\t\tif !servercfg.DisableRemoteIPCheck() && servercfg.GetAPIHost() == \"127.0.0.1\" {\n\t\t\terr := servercfg.SetHost()\n\t\t\tif err != nil {\n\t\t\t\tlogger.FatalLog(\"Unable to Set host. Exiting...\", err.Error())\n\t\t\t}\n\t\t}\n\t\twg.Add(1)\n\t\tgo controller.HandleRESTRequests(wg, ctx)\n\t}\n\t//Run MessageQueue\n\tif servercfg.IsMessageQueueBackend() {\n\t\twg.Add(1)\n\t\tgo runMessageQueue(wg, ctx)\n\t}\n\n\tif !servercfg.IsRestBackend() && !servercfg.IsMessageQueueBackend() {\n\t\tlogger.Log(\n\t\t\t0,\n\t\t\t\"No Server Mode selected, so nothing is being served! Set Rest mode (REST_BACKEND) or MessageQueue (MESSAGEQUEUE_BACKEND) to 'true'.\",\n\t\t)\n\t}\n\n\twg.Add(1)\n\tgo logic.StartHookManager(ctx, wg)\n}\n\n// Should we be using a context vice a waitgroup????????????\nfunc runMessageQueue(wg *sync.WaitGroup, ctx context.Context) {\n\tdefer wg.Done()\n\tbrokerHost, _ := servercfg.GetMessageQueueEndpoint()\n\tlogger.Log(0, \"connecting to mq broker at\", brokerHost)\n\tmq.SetupMQTT(true)\n\tif mq.IsConnected() {\n\t\tlogger.Log(0, \"connected to MQ Broker\")\n\t} else {\n\t\tlogger.FatalLog(\"error connecting to MQ Broker\")\n\t}\n\tdefer mq.CloseClient()\n\tgo mq.Keepalive(ctx)\n\tgo func() {\n\t\tpeerUpdate := make(chan *models.Node)\n\t\tgo logic.ManageZombies(ctx, peerUpdate)\n\t\tgo logic.DeleteExpiredNodes(ctx, peerUpdate)\n\t\tfor nodeUpdate := range peerUpdate {\n\t\t\tif nodeUpdate == nil {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tnode := nodeUpdate\n\t\t\tnode.Action = models.NODE_DELETE\n\t\t\tnode.PendingDelete = true\n\t\t\tif err := mq.NodeUpdate(node); err != nil {\n\t\t\t\tlogger.Log(\n\t\t\t\t\t0,\n\t\t\t\t\t\"failed to send peer update for deleted node: \",\n\t\t\t\t\tnode.ID.String(),\n\t\t\t\t\terr.Error(),\n\t\t\t\t)\n\t\t\t}\n\t\t\tif err := logic.DeleteNode(node, true); err != nil {\n\t\t\t\tslog.Error(\n\t\t\t\t\t\"error deleting expired node\",\n\t\t\t\t\t\"nodeid\",\n\t\t\t\t\tnode.ID.String(),\n\t\t\t\t\t\"error\",\n\t\t\t\t\terr.Error(),\n\t\t\t\t)\n\t\t\t}\n\t\t\tgo mq.PublishDeletedNodePeerUpdate(node)\n\t\t}\n\t}()\n\t<-ctx.Done()\n\tlogger.Log(0, \"Message Queue shutting down\")\n}\n\nfunc setVerbosity() {\n\tverbose := int(servercfg.GetVerbosity())\n\tlogger.Verbosity = verbose\n\tlogLevel := &slog.LevelVar{}\n\treplace := func(groups []string, a slog.Attr) slog.Attr {\n\t\tif a.Key == slog.SourceKey {\n\t\t\ta.Value = slog.StringValue(filepath.Base(a.Value.String()))\n\t\t}\n\t\treturn a\n\t}\n\tlogger := slog.New(\n\t\tslog.NewJSONHandler(\n\t\t\tos.Stderr,\n\t\t\t&slog.HandlerOptions{AddSource: true, ReplaceAttr: replace, Level: logLevel},\n\t\t),\n\t)\n\tslog.SetDefault(logger)\n\tswitch verbose {\n\tcase 4:\n\t\tlogLevel.Set(slog.LevelDebug)\n\tcase 3:\n\t\tlogLevel.Set(slog.LevelInfo)\n\tcase 2:\n\t\tlogLevel.Set(slog.LevelWarn)\n\tdefault:\n\t\tlogLevel.Set(slog.LevelError)\n\t}\n}\n\nfunc setGarbageCollection() {\n\t_, gcset := os.LookupEnv(\"GOGC\")\n\tif !gcset {\n\t\tdebug.SetGCPercent(ncutils.DEFAULT_GC_PERCENT)\n\t}\n}\n"
        },
        {
          "name": "main_ee.go",
          "type": "blob",
          "size": 0.146484375,
          "content": "//go:build ee\n// +build ee\n\npackage main\n\nimport (\n\t\"github.com/gravitl/netmaker/pro\"\n\t_ \"go.uber.org/automaxprocs\"\n)\n\nfunc init() {\n\tpro.InitPro()\n}\n"
        },
        {
          "name": "migrate",
          "type": "tree",
          "content": null
        },
        {
          "name": "models",
          "type": "tree",
          "content": null
        },
        {
          "name": "mq",
          "type": "tree",
          "content": null
        },
        {
          "name": "netclient",
          "type": "tree",
          "content": null
        },
        {
          "name": "nginx",
          "type": "tree",
          "content": null
        },
        {
          "name": "pro",
          "type": "tree",
          "content": null
        },
        {
          "name": "release.md",
          "type": "blob",
          "size": 0.8837890625,
          "content": "# Netmaker v0.30.0\n\n## Whats New ✨\n- Advanced ACL Rules - port, protocol and traffic direction\n- Reduced Firewall Requirements To One Single Port (443 udp/tcp)\n- Option to Turn off STUN or specify custom stun servers\n- Improved Connectivity Status Indicator with real-time troubleshooting help.\n\n## What's Fixed/Improved 🛠\n- Metrics Data\n- Optimised MQ message size\n- FailOver Stability Fixes\n- Scalability Fixes\n- Duplicate Node IP check on update\n\n## Known Issues 🐞\n\n- IPv6 DNS Entries Are Not Working.\n- Stale Peer On The Interface, When Forced Removed From Multiple Networks At Once.\n- WireGuard DNS issue on most flavours of Ubuntu 24.04 and some other newer Linux distributions. The issue is affecting the Remote Access Client (RAC) and the plain WireGuard external clients. Workaround can be found here https://help.netmaker.io/en/articles/9612016-extclient-rac-dns-issue-on-ubuntu-24-04.\n\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "servercfg",
          "type": "tree",
          "content": null
        },
        {
          "name": "serverctl",
          "type": "tree",
          "content": null
        },
        {
          "name": "swagger.yaml",
          "type": "blob",
          "size": 86.7685546875,
          "content": "definitions:\n  acls.ACL:\n    additionalProperties:\n      format: int32\n      type: integer\n    type: object\n  acls.ACLContainer:\n    additionalProperties:\n      $ref: '#/definitions/acls.ACL'\n    type: object\n  config.ServerConfig:\n    properties:\n      IsEE:\n        type: string\n      allowedEmailDomains:\n        type: string\n      allowedOrigin:\n        type: string\n      apiconnString:\n        type: string\n      apihost:\n        type: string\n      apiport:\n        type: string\n      authProvider:\n        type: string\n      azureTenant:\n        type: string\n      basicAuth:\n        type: string\n      broker:\n        type: string\n      brokerType:\n        type: string\n      cacheEnabled:\n        type: string\n      clientID:\n        type: string\n      clientSecret:\n        type: string\n      coreDNSAddr:\n        type: string\n      database:\n        type: string\n      defaultDomain:\n        type: string\n      deployedByOperator:\n        type: boolean\n      disableRemoteIPCheck:\n        type: string\n      displayKeys:\n        type: string\n      dnskey:\n        type: string\n      dnsmode:\n        type: string\n      egressesLimit:\n        type: integer\n      email_sender_addr:\n        type: string\n      email_sender_password:\n        type: string\n      email_sender_user:\n        type: string\n      emqxRestEndpoint:\n        type: string\n      endpoint_detection:\n        type: boolean\n      environment:\n        type: string\n      frontendURL:\n        type: string\n      hostNetwork:\n        type: string\n      ingressesLimit:\n        type: integer\n      jwtValidityDuration:\n        format: int64\n        type: integer\n      licenseValue:\n        type: string\n      machinesLimit:\n        type: integer\n      manageDNS:\n        type: boolean\n      masterKey:\n        type: string\n      messageQueueBackend:\n        type: string\n      metricInterval:\n        type: string\n      metricsExporter:\n        type: string\n      mqpassword:\n        type: string\n      mquserName:\n        type: string\n      netclientAutoUpdate:\n        type: string\n      netclientEndpointDetection:\n        type: string\n      netmakerTenantID:\n        type: string\n      networksLimit:\n        type: integer\n      nodeID:\n        type: string\n      oidcissuer:\n        type: string\n      platform:\n        type: string\n      publicIPService:\n        type: string\n      publicIp:\n        type: string\n      racAutoDisable:\n        type: boolean\n      restBackend:\n        type: string\n      server:\n        type: string\n      serverBrokerEndpoint:\n        type: string\n      smtp_host:\n        type: string\n      smtp_port:\n        type: integer\n      sqlconn:\n        type: string\n      stun:\n        type: boolean\n      stunList:\n        type: string\n      stunPort:\n        type: integer\n      stunServers:\n        type: string\n      telemetry:\n        type: string\n      turnApiServer:\n        type: string\n      turnPassword:\n        type: string\n      turnPort:\n        type: integer\n      turnServer:\n        type: string\n      turnUserName:\n        type: string\n      useTurn:\n        type: boolean\n      usersLimit:\n        type: integer\n      verbosity:\n        type: integer\n      version:\n        type: string\n    type: object\n  models.APIEnrollmentKey:\n    properties:\n      expiration:\n        format: int64\n        type: integer\n      groups:\n        items:\n          type: string\n        type: array\n      networks:\n        items:\n          type: string\n        type: array\n      relay:\n        type: string\n      tags:\n        items:\n          type: string\n        type: array\n      type:\n        $ref: '#/definitions/models.KeyType'\n      unlimited:\n        type: boolean\n      uses_remaining:\n        type: integer\n    required:\n    - tags\n    type: object\n  models.AclRule:\n    properties:\n      allowed:\n        type: boolean\n      allowed_ports:\n        items:\n          type: string\n        type: array\n      allowed_protocols:\n        allOf:\n        - $ref: '#/definitions/models.Protocol'\n        description: tcp, udp, etc.\n      direction:\n        allOf:\n        - $ref: '#/definitions/models.AllowedTrafficDirection'\n        description: single or two-way\n      id:\n        type: string\n      ip_list:\n        items:\n          $ref: '#/definitions/net.IPNet'\n        type: array\n      ip6_list:\n        items:\n          $ref: '#/definitions/net.IPNet'\n        type: array\n    type: object\n  models.AllowedTrafficDirection:\n    enum:\n    - 0\n    - 1\n    type: integer\n    x-enum-varnames:\n    - TrafficDirectionUni\n    - TrafficDirectionBi\n  models.ApiHost:\n    properties:\n      autoupdate:\n        type: boolean\n      debug:\n        type: boolean\n      defaultinterface:\n        type: string\n      endpointip:\n        type: string\n      endpointipv6:\n        type: string\n      firewallinuse:\n        type: string\n      id:\n        type: string\n      interfaces:\n        items:\n          $ref: '#/definitions/models.ApiIface'\n        type: array\n      isdefault:\n        type: boolean\n      isstatic:\n        type: boolean\n      isstaticport:\n        type: boolean\n      listenport:\n        type: integer\n      macaddress:\n        type: string\n      mtu:\n        type: integer\n      name:\n        type: string\n      nat_type:\n        type: string\n      nodes:\n        items:\n          type: string\n        type: array\n      os:\n        type: string\n      persistentkeepalive:\n        type: integer\n      publickey:\n        type: string\n      verbosity:\n        type: integer\n      version:\n        type: string\n      wg_public_listen_port:\n        type: integer\n    type: object\n  models.ApiIface:\n    properties:\n      addressString:\n        type: string\n      name:\n        type: string\n    type: object\n  models.ApiNode:\n    properties:\n      additional_rag_ips:\n        items:\n          type: string\n        type: array\n      address:\n        type: string\n      address6:\n        type: string\n      allowedips:\n        items:\n          type: string\n        type: array\n      connected:\n        type: boolean\n      defaultacl:\n        description: == PRO ==\n        type: string\n      dnson:\n        type: boolean\n      egressgatewaynatenabled:\n        type: boolean\n      egressgatewayranges:\n        items:\n          type: string\n        type: array\n      expdatetime:\n        format: int64\n        type: integer\n      fail_over_peers:\n        additionalProperties:\n          type: object\n        type: object\n      failed_over_by:\n        type: string\n      hostid:\n        minLength: 5\n        type: string\n      id:\n        minLength: 5\n        type: string\n      inet_node_req:\n        $ref: '#/definitions/models.InetNodeReq'\n      ingressdns:\n        type: string\n      ingressmtu:\n        type: integer\n      ingresspersistentkeepalive:\n        type: integer\n      internetgw_node_id:\n        type: string\n      is_fail_over:\n        type: boolean\n      is_static:\n        type: boolean\n      is_user_node:\n        type: boolean\n      isegressgateway:\n        type: boolean\n      isingressgateway:\n        type: boolean\n      isinternetgateway:\n        type: boolean\n      isrelay:\n        type: boolean\n      isrelayed:\n        type: boolean\n      lastcheckin:\n        format: int64\n        type: integer\n      lastmodified:\n        format: int64\n        type: integer\n      lastpeerupdate:\n        format: int64\n        type: integer\n      localaddress:\n        type: string\n      metadata:\n        type: string\n      network:\n        type: string\n      networkrange:\n        type: string\n      networkrange6:\n        type: string\n      pendingdelete:\n        type: boolean\n      relayedby:\n        type: string\n      relaynodes:\n        items:\n          type: string\n        type: array\n      server:\n        type: string\n      static_node:\n        $ref: '#/definitions/models.ExtClient'\n      status:\n        $ref: '#/definitions/models.NodeStatus'\n      tags:\n        additionalProperties:\n          type: object\n        type: object\n    required:\n    - hostid\n    - id\n    type: object\n  models.AuthParams:\n    properties:\n      id:\n        type: string\n      macaddress:\n        type: string\n      password:\n        type: string\n    type: object\n  models.DNSEntry:\n    properties:\n      address:\n        type: string\n      address6:\n        type: string\n      name:\n        maxLength: 192\n        minLength: 1\n        type: string\n      network:\n        type: string\n    required:\n    - name\n    type: object\n  models.EgressGatewayRequest:\n    properties:\n      natenabled:\n        type: string\n      netid:\n        type: string\n      nodeid:\n        type: string\n      ranges:\n        items:\n          type: string\n        type: array\n    type: object\n  models.EgressInfo:\n    properties:\n      egress_gateway_cfg:\n        $ref: '#/definitions/models.EgressGatewayRequest'\n      egress_gw_addr:\n        $ref: '#/definitions/net.IPNet'\n      egress_gw_addr6:\n        $ref: '#/definitions/net.IPNet'\n      egress_id:\n        type: string\n      network:\n        $ref: '#/definitions/net.IPNet'\n      network6:\n        $ref: '#/definitions/net.IPNet'\n    type: object\n  models.EgressNetworkRoutes:\n    properties:\n      egress_gw_addr:\n        $ref: '#/definitions/net.IPNet'\n      egress_gw_addr6:\n        $ref: '#/definitions/net.IPNet'\n      egress_ranges:\n        items:\n          type: string\n        type: array\n      node_addr:\n        $ref: '#/definitions/net.IPNet'\n      node_addr6:\n        $ref: '#/definitions/net.IPNet'\n    type: object\n  models.EnrollmentKey:\n    properties:\n      default:\n        type: boolean\n      expiration:\n        type: string\n      groups:\n        items:\n          type: string\n        type: array\n      networks:\n        items:\n          type: string\n        type: array\n      relay:\n        type: string\n      tags:\n        items:\n          type: string\n        type: array\n      token:\n        description: B64 value of EnrollmentToken\n        type: string\n      type:\n        $ref: '#/definitions/models.KeyType'\n      unlimited:\n        type: boolean\n      uses_remaining:\n        type: integer\n      value:\n        type: string\n    type: object\n  models.ErrorResponse:\n    properties:\n      code:\n        type: integer\n      message:\n        type: string\n    type: object\n  models.ExtClient:\n    properties:\n      address:\n        type: string\n      address6:\n        type: string\n      allowed_ips:\n        items:\n          type: string\n        type: array\n      clientid:\n        type: string\n      country:\n        type: string\n      deniednodeacls:\n        additionalProperties:\n          type: object\n        type: object\n      device_name:\n        type: string\n      dns:\n        type: string\n      enabled:\n        type: boolean\n      extraallowedips:\n        items:\n          type: string\n        type: array\n      ingressgatewayendpoint:\n        type: string\n      ingressgatewayid:\n        type: string\n      lastmodified:\n        format: int64\n        type: integer\n      network:\n        type: string\n      os:\n        type: string\n      ownerid:\n        type: string\n      postdown:\n        type: string\n      postup:\n        type: string\n      privatekey:\n        type: string\n      public_endpoint:\n        type: string\n      publickey:\n        type: string\n      remote_access_client_id:\n        description: unique ID (MAC address) of RAC machine\n        type: string\n      tags:\n        additionalProperties:\n          type: object\n        type: object\n    type: object\n  models.FailOverMeReq:\n    properties:\n      node_id:\n        type: string\n    type: object\n  models.FwRule:\n    properties:\n      allow:\n        type: boolean\n      allowed_ports:\n        items:\n          type: string\n        type: array\n      allowed_protocols:\n        allOf:\n        - $ref: '#/definitions/models.Protocol'\n        description: tcp, udp, etc.\n      dst_ip:\n        $ref: '#/definitions/net.IPNet'\n      src_ip:\n        $ref: '#/definitions/net.IPNet'\n    type: object\n  models.FwUpdate:\n    properties:\n      acl_rules:\n        additionalProperties:\n          $ref: '#/definitions/models.AclRule'\n        type: object\n      allow_all:\n        type: boolean\n      egress_info:\n        additionalProperties:\n          $ref: '#/definitions/models.EgressInfo'\n        type: object\n      ingress_info:\n        additionalProperties:\n          $ref: '#/definitions/models.IngressInfo'\n        type: object\n      is_egress_gw:\n        type: boolean\n      is_ingress_gw:\n        type: boolean\n      networks:\n        items:\n          $ref: '#/definitions/net.IPNet'\n        type: array\n    type: object\n  models.Host:\n    properties:\n      autoupdate:\n        type: boolean\n      daemoninstalled:\n        type: boolean\n      debug:\n        type: boolean\n      defaultinterface:\n        type: string\n      endpointip:\n        items:\n          type: integer\n        type: array\n      endpointipv6:\n        items:\n          type: integer\n        type: array\n      firewallinuse:\n        type: string\n      hostpass:\n        type: string\n      id:\n        type: string\n      interface:\n        type: string\n      interfaces:\n        items:\n          $ref: '#/definitions/models.Iface'\n        type: array\n      ipforwarding:\n        type: boolean\n      isdefault:\n        type: boolean\n      isdocker:\n        type: boolean\n      isk8s:\n        type: boolean\n      isstatic:\n        type: boolean\n      isstaticport:\n        type: boolean\n      listenport:\n        type: integer\n      macaddress:\n        items:\n          type: integer\n        type: array\n      mtu:\n        type: integer\n      name:\n        type: string\n      nat_type:\n        type: string\n      nodes:\n        items:\n          type: string\n        type: array\n      os:\n        type: string\n      persistentkeepalive:\n        format: int64\n        type: integer\n      publickey:\n        items:\n          type: integer\n        type: array\n      traffickeypublic:\n        items:\n          type: integer\n        type: array\n      turn_endpoint:\n        $ref: '#/definitions/netip.AddrPort'\n      verbosity:\n        type: integer\n      version:\n        type: string\n      wg_public_listen_port:\n        type: integer\n    type: object\n  models.HostInfoMap:\n    additionalProperties:\n      $ref: '#/definitions/models.HostNetworkInfo'\n    type: object\n  models.HostMqAction:\n    enum:\n    - UPGRADE\n    - SIGNAL_HOST\n    - UPDATE_HOST\n    - DELETE_HOST\n    - JOIN_HOST_TO_NETWORK\n    - ACK\n    - REQ_ACK\n    - CHECK_IN\n    - UPDATE_KEYS\n    - REQ_PULL\n    - SIGNAL_PULL\n    - UPDATE_METRICS\n    type: string\n    x-enum-varnames:\n    - Upgrade\n    - SignalHost\n    - UpdateHost\n    - DeleteHost\n    - JoinHostToNetwork\n    - Acknowledgement\n    - RequestAck\n    - CheckIn\n    - UpdateKeys\n    - RequestPull\n    - SignalPull\n    - UpdateMetrics\n  models.HostNetworkInfo:\n    properties:\n      interfaces:\n        items:\n          $ref: '#/definitions/models.Iface'\n        type: array\n      is_static:\n        type: boolean\n      is_static_port:\n        type: boolean\n      listen_port:\n        type: integer\n    type: object\n  models.HostPull:\n    properties:\n      change_default_gw:\n        type: boolean\n      default_gw_ip:\n        items:\n          type: integer\n        type: array\n      egress_network_routes:\n        items:\n          $ref: '#/definitions/models.EgressNetworkRoutes'\n        type: array\n      endpoint_detection:\n        type: boolean\n      fw_update:\n        $ref: '#/definitions/models.FwUpdate'\n      host:\n        $ref: '#/definitions/models.Host'\n      host_network_info:\n        $ref: '#/definitions/models.HostInfoMap'\n      is_inet_gw:\n        type: boolean\n      nodes:\n        items:\n          $ref: '#/definitions/models.Node'\n        type: array\n      peer_ids:\n        $ref: '#/definitions/models.PeerMap'\n      peers:\n        items:\n          $ref: '#/definitions/wgtypes.PeerConfig'\n        type: array\n      server_config:\n        $ref: '#/definitions/models.ServerConfig'\n    type: object\n  models.HostUpdate:\n    properties:\n      action:\n        $ref: '#/definitions/models.HostMqAction'\n      host:\n        $ref: '#/definitions/models.Host'\n      newMetrics:\n        $ref: '#/definitions/models.Metrics'\n      node:\n        $ref: '#/definitions/models.Node'\n      signal:\n        $ref: '#/definitions/models.Signal'\n    type: object\n  models.IDandAddr:\n    properties:\n      address:\n        type: string\n      host_id:\n        type: string\n      id:\n        type: string\n      is_extclient:\n        type: boolean\n      isserver:\n        type: string\n      listen_port:\n        type: integer\n      name:\n        type: string\n      network:\n        type: string\n    type: object\n  models.Iface:\n    properties:\n      address:\n        $ref: '#/definitions/net.IPNet'\n      addressString:\n        type: string\n      name:\n        type: string\n    type: object\n  models.InetNodeReq:\n    properties:\n      inet_node_client_ids:\n        items:\n          type: string\n        type: array\n    type: object\n  models.IngressGwUsers:\n    properties:\n      network:\n        type: string\n      node_id:\n        type: string\n      users:\n        items:\n          $ref: '#/definitions/models.ReturnUser'\n        type: array\n    type: object\n  models.IngressInfo:\n    properties:\n      allow_all:\n        type: boolean\n      egress_ranges:\n        items:\n          $ref: '#/definitions/net.IPNet'\n        type: array\n      egress_ranges6:\n        items:\n          $ref: '#/definitions/net.IPNet'\n        type: array\n      ingress_id:\n        type: string\n      network:\n        $ref: '#/definitions/net.IPNet'\n      network6:\n        $ref: '#/definitions/net.IPNet'\n      rules:\n        items:\n          $ref: '#/definitions/models.FwRule'\n        type: array\n      static_node_ips:\n        items:\n          items:\n            type: integer\n          type: array\n        type: array\n    type: object\n  models.KeyType:\n    enum:\n    - 0\n    - 1\n    - 2\n    - 3\n    type: integer\n    x-enum-varnames:\n    - Undefined\n    - TimeExpiration\n    - Uses\n    - Unlimited\n  models.Metric:\n    properties:\n      actualuptime:\n        format: int64\n        type: integer\n      connected:\n        type: boolean\n      lasttotalreceived:\n        format: int64\n        type: integer\n      lasttotalsent:\n        format: int64\n        type: integer\n      latency:\n        format: int64\n        type: integer\n      node_name:\n        type: string\n      percentup:\n        type: number\n      totalreceived:\n        format: int64\n        type: integer\n      totalsent:\n        format: int64\n        type: integer\n      totaltime:\n        format: int64\n        type: integer\n      uptime:\n        format: int64\n        type: integer\n    type: object\n  models.Metrics:\n    properties:\n      connectivity:\n        additionalProperties:\n          $ref: '#/definitions/models.Metric'\n        type: object\n      network:\n        type: string\n      node_id:\n        type: string\n      node_name:\n        type: string\n    type: object\n  models.Network:\n    properties:\n      addressrange:\n        type: string\n      addressrange6:\n        type: string\n      allowmanualsignup:\n        type: string\n      defaultacl:\n        type: string\n      defaultinterface:\n        maxLength: 35\n        minLength: 1\n        type: string\n      defaultkeepalive:\n        maximum: 1000\n        type: integer\n      defaultlistenport:\n        maximum: 65535\n        minimum: 1024\n        type: integer\n      defaultmtu:\n        type: integer\n      defaultpostdown:\n        type: string\n      defaultudpholepunch:\n        type: string\n      isipv4:\n        type: string\n      isipv6:\n        type: string\n      netid:\n        maxLength: 32\n        minLength: 1\n        type: string\n      networklastmodified:\n        format: int64\n        type: integer\n      nodelimit:\n        type: integer\n      nodeslastmodified:\n        format: int64\n        type: integer\n    required:\n    - netid\n    type: object\n  models.NetworkID:\n    enum:\n    - all_networks\n    type: string\n    x-enum-varnames:\n    - AllNetworks\n  models.Node:\n    properties:\n      action:\n        type: string\n      additional_rag_ips:\n        items:\n          type: number\n        type: array\n      address:\n        $ref: '#/definitions/net.IPNet'\n      address6:\n        $ref: '#/definitions/net.IPNet'\n      connected:\n        type: boolean\n      defaultacl:\n        description: == PRO ==\n        type: string\n      dnson:\n        type: boolean\n      egressgatewaynatenabled:\n        type: boolean\n      egressgatewayranges:\n        items:\n          type: string\n        type: array\n      egressgatewayrequest:\n        $ref: '#/definitions/models.EgressGatewayRequest'\n      expdatetime:\n        type: string\n      fail_over_peers:\n        additionalProperties:\n          type: object\n        type: object\n      failed_over_by:\n        type: string\n      hostid:\n        type: string\n      id:\n        type: string\n      inet_node_req:\n        $ref: '#/definitions/models.InetNodeReq'\n      ingressdns:\n        type: string\n      ingressgatewayrange:\n        type: string\n      ingressgatewayrange6:\n        type: string\n      ingressmtu:\n        type: integer\n      ingresspersistentkeepalive:\n        type: integer\n      internetgw_node_id:\n        type: string\n      is_fail_over:\n        type: boolean\n      is_static:\n        type: boolean\n      is_user_node:\n        type: boolean\n      isegressgateway:\n        type: boolean\n      isingressgateway:\n        type: boolean\n      isinternetgateway:\n        type: boolean\n      isrelay:\n        type: boolean\n      isrelayed:\n        type: boolean\n      lastcheckin:\n        type: string\n      lastmodified:\n        type: string\n      lastpeerupdate:\n        type: string\n      localaddress:\n        $ref: '#/definitions/net.IPNet'\n      metadata:\n        type: string\n      network:\n        type: string\n      networkrange:\n        type: integer\n      networkrange6:\n        type: number\n      node_status:\n        $ref: '#/definitions/models.NodeStatus'\n      ownerid:\n        type: string\n      pendingdelete:\n        type: boolean\n      relayedby:\n        type: string\n      relaynodes:\n        items:\n          type: string\n        type: array\n      server:\n        type: string\n      static_node:\n        $ref: '#/definitions/models.ExtClient'\n      tags:\n        additionalProperties:\n          type: object\n        type: object\n    type: object\n  models.NodeGet:\n    properties:\n      host:\n        $ref: '#/definitions/models.Host'\n      host_peers:\n        items:\n          $ref: '#/definitions/wgtypes.PeerConfig'\n        type: array\n      node:\n        $ref: '#/definitions/models.Node'\n      peerids:\n        $ref: '#/definitions/models.PeerMap'\n      peers:\n        items:\n          $ref: '#/definitions/wgtypes.PeerConfig'\n        type: array\n      serverconfig:\n        $ref: '#/definitions/models.ServerConfig'\n    type: object\n  models.NodeStatus:\n    enum:\n    - online\n    - offline\n    - warning\n    - error\n    - unknown\n    type: string\n    x-enum-varnames:\n    - OnlineSt\n    - OfflineSt\n    - WarningSt\n    - ErrorSt\n    - UnKnown\n  models.PeerMap:\n    additionalProperties:\n      $ref: '#/definitions/models.IDandAddr'\n    type: object\n  models.Protocol:\n    enum:\n    - all\n    - udp\n    - tcp\n    - icmp\n    type: string\n    x-enum-varnames:\n    - ALL\n    - UDP\n    - TCP\n    - ICMP\n  models.RegisterResponse:\n    properties:\n      requested_host:\n        $ref: '#/definitions/models.Host'\n      server_config:\n        $ref: '#/definitions/models.ServerConfig'\n    type: object\n  models.RelayRequest:\n    properties:\n      netid:\n        type: string\n      nodeid:\n        type: string\n      relayaddrs:\n        items:\n          type: string\n        type: array\n    type: object\n  models.ReturnUser:\n    properties:\n      auth_type:\n        type: string\n      isadmin:\n        type: boolean\n      issuperadmin:\n        type: boolean\n      last_login_time:\n        type: string\n      network_roles:\n        additionalProperties:\n          additionalProperties:\n            type: object\n          type: object\n        type: object\n      platform_role_id:\n        $ref: '#/definitions/models.UserRoleID'\n      remote_gw_ids:\n        additionalProperties:\n          type: object\n        description: deprecated\n        type: object\n      user_group_ids:\n        additionalProperties:\n          type: object\n        type: object\n      username:\n        type: string\n    type: object\n  models.RsrcPermissionScope:\n    properties:\n      create:\n        type: boolean\n      delete:\n        type: boolean\n      read:\n        type: boolean\n      self_only:\n        type: boolean\n      update:\n        type: boolean\n      vpn_access:\n        type: boolean\n    type: object\n  models.ServerConfig:\n    properties:\n      Is_EE:\n        type: boolean\n      api:\n        type: string\n      apiport:\n        type: string\n      broker:\n        type: string\n      brokerType:\n        type: string\n      coreDNSAddr:\n        type: string\n      defaultDomain:\n        type: string\n      dnsmode:\n        type: string\n      manageDNS:\n        type: boolean\n      metricInterval:\n        type: string\n      mqpassword:\n        type: string\n      mqport:\n        type: string\n      mquserName:\n        type: string\n      server:\n        type: string\n      stun:\n        type: boolean\n      stunServers:\n        type: string\n      trafficKey:\n        items:\n          type: integer\n        type: array\n      version:\n        type: string\n    type: object\n  models.Signal:\n    properties:\n      action:\n        $ref: '#/definitions/models.SignalAction'\n      from_host_id:\n        type: string\n      from_host_pubkey:\n        type: string\n      from_node_id:\n        type: string\n      is_pro:\n        type: boolean\n      reply:\n        type: boolean\n      server:\n        type: string\n      timestamp:\n        type: integer\n      to_host_id:\n        type: string\n      to_host_pubkey:\n        type: string\n      to_node_id:\n        type: string\n    type: object\n  models.SignalAction:\n    enum:\n    - CONNECTION_NEGOTIATION\n    - RELAY_ME\n    type: string\n    x-enum-varnames:\n    - ConnNegotiation\n    - RelayME\n  models.SuccessResponse:\n    properties:\n      code:\n        type: integer\n      message:\n        type: string\n      response: {}\n    type: object\n  models.User:\n    properties:\n      auth_type:\n        type: string\n      external_identity_provider_id:\n        type: string\n      isadmin:\n        description: deprecated\n        type: boolean\n      issuperadmin:\n        description: deprecated\n        type: boolean\n      last_login_time:\n        type: string\n      network_roles:\n        additionalProperties:\n          additionalProperties:\n            type: object\n          type: object\n        type: object\n      password:\n        minLength: 5\n        type: string\n      platform_role_id:\n        $ref: '#/definitions/models.UserRoleID'\n      remote_gw_ids:\n        additionalProperties:\n          type: object\n        description: deprecated\n        type: object\n      user_group_ids:\n        additionalProperties:\n          type: object\n        type: object\n      username:\n        maxLength: 40\n        minLength: 3\n        type: string\n    required:\n    - password\n    type: object\n  models.UserAuthParams:\n    properties:\n      password:\n        type: string\n      username:\n        type: string\n    type: object\n  models.UserRemoteGws:\n    properties:\n      allowed_endpoints:\n        items:\n          type: string\n        type: array\n      connected:\n        type: boolean\n      gw_client:\n        $ref: '#/definitions/models.ExtClient'\n      gw_listen_port:\n        type: integer\n      gw_name:\n        type: string\n      gw_peer_public_key:\n        type: string\n      is_internet_gateway:\n        type: boolean\n      metadata:\n        type: string\n      network:\n        type: string\n      network_addresses:\n        items:\n          type: string\n        type: array\n      remote_access_gw_id:\n        type: string\n    type: object\n  models.UserRoleID:\n    enum:\n    - super-admin\n    - admin\n    - service-user\n    - platform-user\n    - network-admin\n    - network-user\n    type: string\n    x-enum-varnames:\n    - SuperAdminRole\n    - AdminRole\n    - ServiceUser\n    - PlatformUser\n    - NetworkAdmin\n    - NetworkUser\n  models.UserRolePermissionTemplate:\n    properties:\n      default:\n        type: boolean\n      deny_dashboard_access:\n        type: boolean\n      full_access:\n        type: boolean\n      global_level_access:\n        additionalProperties:\n          additionalProperties:\n            $ref: '#/definitions/models.RsrcPermissionScope'\n          type: object\n        type: object\n      id:\n        $ref: '#/definitions/models.UserRoleID'\n      meta_data:\n        type: string\n      name:\n        type: string\n      network_id:\n        $ref: '#/definitions/models.NetworkID'\n      network_level_access:\n        additionalProperties:\n          additionalProperties:\n            $ref: '#/definitions/models.RsrcPermissionScope'\n          type: object\n        type: object\n    type: object\n  net.IPNet:\n    properties:\n      ip:\n        description: network number\n        items:\n          type: integer\n        type: array\n      mask:\n        description: network mask\n        items:\n          format: int32\n          type: integer\n        type: array\n    type: object\n  net.UDPAddr:\n    properties:\n      ip:\n        items:\n          type: integer\n        type: array\n      port:\n        type: integer\n      zone:\n        description: IPv6 scoped addressing zone\n        type: string\n    type: object\n  netip.AddrPort:\n    type: object\n  wgtypes.PeerConfig:\n    properties:\n      allowedIPs:\n        description: |-\n          AllowedIPs specifies a list of allowed IP addresses in CIDR notation\n          for this peer.\n        items:\n          $ref: '#/definitions/net.IPNet'\n        type: array\n      endpoint:\n        allOf:\n        - $ref: '#/definitions/net.UDPAddr'\n        description: Endpoint specifies the endpoint of this peer entry, if not nil.\n      persistentKeepaliveInterval:\n        description: |-\n          PersistentKeepaliveInterval specifies the persistent keepalive interval\n          for this peer, if not nil.\n\n          A non-nil value of 0 will clear the persistent keepalive interval.\n        format: int64\n        type: integer\n      presharedKey:\n        description: |-\n          PresharedKey specifies a peer's preshared key configuration, if not nil.\n\n          A non-nil, zero-value Key will clear the preshared key.\n        items:\n          type: integer\n        type: array\n      publicKey:\n        description: |-\n          PublicKey specifies the public key of this peer.  PublicKey is a\n          mandatory field for all PeerConfigs.\n        items:\n          type: integer\n        type: array\n      remove:\n        description: |-\n          Remove specifies if the peer with this public key should be removed\n          from a device's peer list.\n        type: boolean\n      replaceAllowedIPs:\n        description: |-\n          ReplaceAllowedIPs specifies if the allowed IPs specified in this peer\n          configuration should replace any existing ones, instead of appending them\n          to the allowed IPs list.\n        type: boolean\n      updateOnly:\n        description: |-\n          UpdateOnly specifies that an operation will only occur on this peer\n          if the peer already exists as part of the interface.\n        type: boolean\n    type: object\nhost: api.demo.netmaker.io\ninfo:\n  contact: {}\n  description: NetMaker API Docs\n  title: NetMaker\n  version: 0.30.0\npaths:\n  /api/dns:\n    get:\n      consumes:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            items:\n              $ref: '#/definitions/models.DNSEntry'\n            type: array\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Get all DNS entries\n      tags:\n      - DNS\n  /api/dns/{network}:\n    get:\n      consumes:\n      - application/json\n      parameters:\n      - description: Network identifier\n        in: path\n        name: network\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            items:\n              $ref: '#/definitions/models.DNSEntry'\n            type: array\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Gets node DNS entries associated with a network\n      tags:\n      - DNS\n  /api/dns/{network}/{domain}:\n    delete:\n      consumes:\n      - application/json\n      parameters:\n      - description: Network identifier\n        in: path\n        name: network\n        required: true\n        type: string\n      - description: Domain Name\n        in: path\n        name: domain\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            items:\n              $ref: '#/definitions/models.DNSEntry'\n            type: array\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Delete a DNS entry\n      tags:\n      - DNS\n  /api/dns/adm/{network}:\n    get:\n      consumes:\n      - application/json\n      parameters:\n      - description: Network identifier\n        in: path\n        name: network\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            items:\n              $ref: '#/definitions/models.DNSEntry'\n            type: array\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Get all DNS entries associated with the network\n      tags:\n      - DNS\n    post:\n      consumes:\n      - application/json\n      parameters:\n      - description: Network identifier\n        in: path\n        name: network\n        required: true\n        type: string\n      - description: DNS entry details\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/models.DNSEntry'\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.DNSEntry'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Create a new DNS entry\n      tags:\n      - DNS\n  /api/dns/adm/{network}/custom:\n    get:\n      consumes:\n      - application/json\n      parameters:\n      - description: Network identifier\n        in: path\n        name: network\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            items:\n              $ref: '#/definitions/models.DNSEntry'\n            type: array\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Gets custom DNS entries associated with a network\n      tags:\n      - DNS\n  /api/dns/adm/{network}/sync:\n    post:\n      consumes:\n      - application/json\n      responses:\n        \"200\":\n          description: DNS Sync completed successfully\n          schema:\n            type: string\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Sync DNS entries for a given network\n      tags:\n      - DNS\n  /api/dns/adm/pushdns:\n    post:\n      consumes:\n      - application/json\n      responses:\n        \"200\":\n          description: DNS Pushed to CoreDNS\n          schema:\n            type: string\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Push DNS entries to nameserver\n      tags:\n      - DNS\n  /api/emqx/hosts:\n    delete:\n      responses:\n        \"200\":\n          description: deleted hosts data on emqx\n          schema:\n            type: string\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Deletes all EMQX hosts\n      tags:\n      - Hosts\n  /api/extclients:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.ExtClient'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth2: []\n      summary: Fetches All Remote Access Clients across all networks\n      tags:\n      - Remote Access Client\n  /api/extclients/{network}:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.ExtClient'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth2: []\n      summary: Get all remote access client associated with network\n      tags:\n      - Remote Access Client\n  /api/extclients/{network}/{clientid}:\n    delete:\n      responses:\n        \"200\":\n          description: OK\n        \"403\":\n          description: Forbidden\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth2: []\n      summary: Delete an individual remote access client\n      tags:\n      - Remote Access Client\n    get:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.ExtClient'\n        \"403\":\n          description: Forbidden\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth2: []\n      summary: Get an individual remote access client\n      tags:\n      - Remote Access Client\n    put:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.ExtClient'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"403\":\n          description: Forbidden\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth2: []\n      summary: Update an individual remote access client\n      tags:\n      - Remote Access Client\n  /api/extclients/{network}/{clientid}/{type}:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.ExtClient'\n        \"403\":\n          description: Forbidden\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth2: []\n      summary: Get an individual remote access client\n      tags:\n      - Remote Access Client\n  /api/extclients/{network}/{nodeid}:\n    post:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"403\":\n          description: Forbidden\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth2: []\n      summary: Create an individual remote access client\n      tags:\n      - Remote Access Client\n  /api/getip:\n    get:\n      responses:\n        \"200\":\n          description: The public IP address.\n          schema:\n            type: string\n        \"400\":\n          description: Invalid IP address or no IP found.\n          schema:\n            type: string\n      security:\n      - oauth2: []\n      summary: Get the current public IP address.\n      tags:\n      - IP Service\n  /api/hosts:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            items:\n              $ref: '#/definitions/models.ApiHost'\n            type: array\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: List all hosts\n      tags:\n      - Hosts\n  /api/hosts/{hostid}:\n    delete:\n      parameters:\n      - description: Host ID\n        in: path\n        name: hostid\n        required: true\n        type: string\n      - description: Force delete\n        in: query\n        name: force\n        type: boolean\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.ApiHost'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Deletes a Netclient host from Netmaker server\n      tags:\n      - Hosts\n    put:\n      parameters:\n      - description: Host ID\n        in: path\n        name: hostid\n        required: true\n        type: string\n      - description: New host data\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/models.ApiHost'\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.ApiHost'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Updates a Netclient host on Netmaker server\n      tags:\n      - Hosts\n  /api/hosts/{hostid}/keys:\n    put:\n      parameters:\n      - description: Host ID\n        in: path\n        name: hostid\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Update keys for a host\n      tags:\n      - Hosts\n  /api/hosts/{hostid}/networks/{network}:\n    delete:\n      parameters:\n      - description: Host ID\n        in: path\n        name: hostid\n        required: true\n        type: string\n      - description: Network name\n        in: path\n        name: network\n        required: true\n        type: string\n      - description: Force delete\n        in: query\n        name: force\n        type: boolean\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: To Remove Host from Network\n      tags:\n      - Hosts\n    post:\n      parameters:\n      - description: Host ID\n        in: path\n        name: hostid\n        required: true\n        type: string\n      - description: Network name\n        in: path\n        name: network\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: To Add Host To Network\n      tags:\n      - Hosts\n  /api/hosts/{hostid}/sync:\n    post:\n      parameters:\n      - description: Host ID\n        in: path\n        name: hostid\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Requests a host to pull\n      tags:\n      - Hosts\n  /api/hosts/{hostid}/upgrade:\n    put:\n      parameters:\n      - description: Host ID\n        in: path\n        name: hostid\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: passed message to upgrade host\n          schema:\n            type: string\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Upgrade a host\n      tags:\n      - Hosts\n  /api/hosts/adm/authenticate:\n    post:\n      consumes:\n      - application/json\n      parameters:\n      - description: Authentication parameters\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/models.AuthParams'\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.SuccessResponse'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"401\":\n          description: Unauthorized\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: To Fetch Auth Token for a Host\n      tags:\n      - Auth\n  /api/hosts/keys:\n    put:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Update keys for all hosts\n      tags:\n      - Hosts\n  /api/networks:\n    get:\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.Network'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Lists all networks\n      tags:\n      - Networks\n    post:\n      parameters:\n      - description: Network details\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/models.Network'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.Network'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Create a network\n      tags:\n      - Networks\n  /api/networks/{networkname}:\n    delete:\n      parameters:\n      - description: Network name\n        in: path\n        name: networkname\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.SuccessResponse'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"403\":\n          description: Forbidden\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Delete a network\n      tags:\n      - Networks\n    get:\n      parameters:\n      - description: Network name\n        in: path\n        name: networkname\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.Network'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Get a network\n      tags:\n      - Networks\n    put:\n      parameters:\n      - description: Network name\n        in: path\n        name: networkname\n        required: true\n        type: string\n      - description: Network details\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/models.Network'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.Network'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Update network settings\n      tags:\n      - Networks\n  /api/networks/{networkname}/acls:\n    get:\n      parameters:\n      - description: Network name\n        in: path\n        name: networkname\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/acls.ACLContainer'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Get a network ACL (Access Control List)\n      tags:\n      - Networks\n    put:\n      parameters:\n      - description: Network name\n        in: path\n        name: networkname\n        required: true\n        type: string\n      - description: ACL container\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/acls.ACLContainer'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/acls.ACLContainer'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Update a network ACL (Access Control List)\n      tags:\n      - Networks\n  /api/networks/{networkname}/acls/v2:\n    put:\n      parameters:\n      - description: Network name\n        in: path\n        name: networkname\n        required: true\n        type: string\n      - description: ACL container\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/acls.ACLContainer'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/acls.ACLContainer'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Update a network ACL (Access Control List)\n      tags:\n      - Networks\n  /api/nodes:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            items:\n              $ref: '#/definitions/models.ApiNode'\n            type: array\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Get all nodes across all networks\n      tags:\n      - Nodes\n  /api/nodes/{network}/{nodeid}:\n    delete:\n      responses:\n        \"200\":\n          description: Node deleted.\n          schema:\n            type: string\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth2: []\n      summary: Delete an individual node\n      tags:\n      - Nodes\n    get:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.NodeGet'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth2: []\n      summary: Get an individual node\n      tags:\n      - Nodes\n    put:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.ApiNode'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth2: []\n      summary: Update an individual node\n      tags:\n      - Nodes\n  /api/nodes/{network}/{nodeid}/creategateway:\n    post:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.ApiNode'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth2: []\n      summary: Create an egress gateway\n      tags:\n      - Nodes\n  /api/nodes/{network}/{nodeid}/createingress:\n    post:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.ApiNode'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth2: []\n      summary: Create an remote access gateway\n      tags:\n      - Nodes\n  /api/nodes/{network}/{nodeid}/createrelay:\n    post:\n      consumes:\n      - application/json\n      parameters:\n      - description: Network ID\n        in: path\n        name: network\n        required: true\n        type: string\n      - description: Node ID\n        in: path\n        name: nodeid\n        required: true\n        type: string\n      - description: Relay request parameters\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/models.RelayRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.ApiNode'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Create a relay\n      tags:\n      - PRO\n  /api/nodes/{network}/{nodeid}/deletegateway:\n    delete:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.ApiNode'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth2: []\n      summary: Delete an egress gateway\n      tags:\n      - Nodes\n  /api/nodes/{network}/{nodeid}/deleteingress:\n    delete:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.ApiNode'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth2: []\n      summary: Delete an remote access gateway\n      tags:\n      - Nodes\n  /api/nodes/{network}/{nodeid}/deleterelay:\n    delete:\n      consumes:\n      - application/json\n      parameters:\n      - description: Network ID\n        in: path\n        name: network\n        required: true\n        type: string\n      - description: Node ID\n        in: path\n        name: nodeid\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.ApiNode'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Remove a relay\n      tags:\n      - PRO\n  /api/nodes/{network}/{nodeid}/inet_gw:\n    delete:\n      parameters:\n      - description: Network ID\n        in: path\n        name: network\n        required: true\n        type: string\n      - description: Node ID\n        in: path\n        name: nodeid\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.Node'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Delete an internet gateway\n      tags:\n      - PRO\n    post:\n      consumes:\n      - application/json\n      parameters:\n      - description: Network ID\n        in: path\n        name: network\n        required: true\n        type: string\n      - description: Node ID\n        in: path\n        name: nodeid\n        required: true\n        type: string\n      - description: Internet gateway request\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/models.InetNodeReq'\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.Node'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Create an internet gateway\n      tags:\n      - PRO\n    put:\n      consumes:\n      - application/json\n      parameters:\n      - description: Network ID\n        in: path\n        name: network\n        required: true\n        type: string\n      - description: Node ID\n        in: path\n        name: nodeid\n        required: true\n        type: string\n      - description: Internet gateway request\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/models.InetNodeReq'\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.Node'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Update an internet gateway\n      tags:\n      - PRO\n  /api/nodes/{network}/{nodeid}/ingress/users:\n    get:\n      consumes:\n      - application/json\n      parameters:\n      - description: Ingress Gateway ID\n        in: path\n        name: ingress_id\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            items:\n              $ref: '#/definitions/models.IngressGwUsers'\n            type: array\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: List users attached to an remote access gateway\n      tags:\n      - PRO\n  /api/nodes/adm/{network}:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            items:\n              $ref: '#/definitions/models.Node'\n            type: array\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Gets all nodes associated with network including pending nodes\n      tags:\n      - Nodes\n  /api/server/getconfig:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/config.ServerConfig'\n      security:\n      - oauth2: []\n      summary: Get the server configuration\n      tags:\n      - Server\n  /api/server/getserverinfo:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.ServerConfig'\n      security:\n      - oauth2: []\n      summary: Get the server information\n      tags:\n      - Server\n  /api/server/status:\n    get:\n      responses: {}\n      security:\n      - oauth2: []\n      summary: Get the server status\n      tags:\n      - Server\n  /api/users/{username}:\n    delete:\n      parameters:\n      - description: Username of the user to delete\n        in: path\n        name: username\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Delete a user\n      tags:\n      - Users\n    get:\n      parameters:\n      - description: Username of the user to fetch\n        in: path\n        name: username\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.User'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Get an individual user\n      tags:\n      - Users\n    post:\n      parameters:\n      - description: Username of the user to create\n        in: path\n        name: username\n        required: true\n        type: string\n      - description: User details\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/models.User'\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.User'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"403\":\n          description: Forbidden\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Create a user\n      tags:\n      - Users\n    put:\n      parameters:\n      - description: Username of the user to update\n        in: path\n        name: username\n        required: true\n        type: string\n      - description: User details\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/models.User'\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.User'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"403\":\n          description: Forbidden\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Update a user\n      tags:\n      - Users\n  /api/users/{username}/remote_access_gw:\n    get:\n      parameters:\n      - description: Username to fetch all the gateways with access\n        in: path\n        name: username\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            additionalProperties:\n              items:\n                $ref: '#/definitions/models.UserRemoteGws'\n              type: array\n            type: object\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Get Users Remote Access Gw.\n      tags:\n      - Users\n  /api/users/{username}/remote_access_gw/{remote_access_gateway_id}:\n    delete:\n      consumes:\n      - application/json\n      parameters:\n      - description: Username\n        in: path\n        name: username\n        required: true\n        type: string\n      - description: Remote Access Gateway ID\n        in: path\n        name: remote_access_gateway_id\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.ReturnUser'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Remove user from a remote access gateway\n      tags:\n      - PRO\n    post:\n      consumes:\n      - application/json\n      parameters:\n      - description: Username\n        in: path\n        name: username\n        required: true\n        type: string\n      - description: Remote Access Gateway ID\n        in: path\n        name: remote_access_gateway_id\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.ReturnUser'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Attach user to a remote access gateway\n      tags:\n      - PRO\n  /api/users/adm/authenticate:\n    post:\n      consumes:\n      - application/json\n      parameters:\n      - description: Authentication parameters\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/models.UserAuthParams'\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.SuccessResponse'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"401\":\n          description: Unauthorized\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Authenticate a user to retrieve an authorization token\n      tags:\n      - Auth\n  /api/users/adm/createsuperadmin:\n    post:\n      parameters:\n      - description: User details\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/models.User'\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.User'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Create a super admin\n      tags:\n      - Users\n  /api/users/adm/hassuperadmin:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: boolean\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Check if the server has a super admin\n      tags:\n      - Users\n  /api/users/adm/transfersuperadmin/{username}:\n    post:\n      parameters:\n      - description: Username of the user to transfer super admin role\n        in: path\n        name: username\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.User'\n        \"403\":\n          description: Forbidden\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Transfer super admin role to another admin user\n      tags:\n      - Users\n  /api/users_pending:\n    delete:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Delete all pending users\n      tags:\n      - Users\n    get:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            items:\n              $ref: '#/definitions/models.User'\n            type: array\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Get all pending users\n      tags:\n      - Users\n  /api/users_pending/user/{username}:\n    delete:\n      parameters:\n      - description: Username of the pending user to delete\n        in: path\n        name: username\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Delete a pending user\n      tags:\n      - Users\n    post:\n      parameters:\n      - description: Username of the pending user to approve\n        in: path\n        name: username\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Approve a pending user\n      tags:\n      - Users\n  /api/v1/acls:\n    delete:\n      consumes:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            items:\n              $ref: '#/definitions/models.SuccessResponse'\n            type: array\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Delete Acl\n      tags:\n      - ACL\n    get:\n      consumes:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            items:\n              $ref: '#/definitions/models.SuccessResponse'\n            type: array\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: List Acls in a network\n      tags:\n      - ACL\n    post:\n      consumes:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            items:\n              $ref: '#/definitions/models.SuccessResponse'\n            type: array\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Create Acl\n      tags:\n      - ACL\n    put:\n      consumes:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            items:\n              $ref: '#/definitions/models.SuccessResponse'\n            type: array\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Update Acl\n      tags:\n      - ACL\n  /api/v1/acls/policy_types:\n    get:\n      consumes:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            items:\n              $ref: '#/definitions/models.SuccessResponse'\n            type: array\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: List Acl Policy types\n      tags:\n      - ACL\n  /api/v1/enrollment-keys:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            items:\n              $ref: '#/definitions/models.EnrollmentKey'\n            type: array\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Lists all EnrollmentKeys for admins\n      tags:\n      - EnrollmentKeys\n    post:\n      parameters:\n      - description: Enrollment Key parameters\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/models.APIEnrollmentKey'\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.EnrollmentKey'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Creates an EnrollmentKey for hosts to register with server and join\n        networks\n      tags:\n      - EnrollmentKeys\n  /api/v1/enrollment-keys/{keyid}:\n    delete:\n      parameters:\n      - description: Enrollment Key ID\n        in: path\n        name: keyid\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Deletes an EnrollmentKey from Netmaker server\n      tags:\n      - EnrollmentKeys\n    put:\n      parameters:\n      - description: Enrollment Key ID\n        in: path\n        name: keyid\n        required: true\n        type: string\n      - description: Enrollment Key parameters\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/models.APIEnrollmentKey'\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.EnrollmentKey'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Updates an EnrollmentKey. Updates are only limited to the relay to\n        use\n      tags:\n      - EnrollmentKeys\n  /api/v1/fallback/host/{hostid}:\n    put:\n      parameters:\n      - description: Host ID\n        in: path\n        name: hostid\n        required: true\n        type: string\n      - description: Host update data\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/models.HostUpdate'\n      responses:\n        \"200\":\n          description: updated host data\n          schema:\n            type: string\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Updates a Netclient host on Netmaker server\n      tags:\n      - Hosts\n  /api/v1/host:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.HostPull'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Used by clients for \"pull\" command\n      tags:\n      - Hosts\n  /api/v1/host/{hostid}/signalpeer:\n    post:\n      parameters:\n      - description: Host ID\n        in: path\n        name: hostid\n        required: true\n        type: string\n      - description: Signal data\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/models.Signal'\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.Signal'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Send signal to peer\n      tags:\n      - Hosts\n  /api/v1/host/register/{token}:\n    post:\n      parameters:\n      - description: Enrollment Key Token\n        in: path\n        name: token\n        required: true\n        type: string\n      - description: Host registration parameters\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/models.Host'\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.RegisterResponse'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Handles a Netclient registration with server and add nodes accordingly\n      tags:\n      - EnrollmentKeys\n  /api/v1/legacy/nodes:\n    delete:\n      responses:\n        \"200\":\n          description: Wiped all legacy nodes.\n          schema:\n            type: string\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth2: []\n      summary: Delete all legacy nodes from DB.\n      tags:\n      - Nodes\n  /api/v1/networks/stats:\n    get:\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.SuccessResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      security:\n      - oauth: []\n      summary: Lists all networks with stats\n      tags:\n      - Networks\n  /api/v1/node/{network}/failover/reset:\n    post:\n      parameters:\n      - description: Network ID\n        in: path\n        name: network\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.SuccessResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Reset failover for a network\n      tags:\n      - PRO\n  /api/v1/node/{nodeid}/failover:\n    delete:\n      parameters:\n      - description: Node ID\n        in: path\n        name: nodeid\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.Node'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Delete failover node\n      tags:\n      - PRO\n    get:\n      parameters:\n      - description: Node ID\n        in: path\n        name: nodeid\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.Node'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"404\":\n          description: Not Found\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Get failover node\n      tags:\n      - PRO\n    post:\n      parameters:\n      - description: Node ID\n        in: path\n        name: nodeid\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.Node'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Create failover node\n      tags:\n      - PRO\n  /api/v1/node/{nodeid}/failover_me:\n    post:\n      consumes:\n      - application/json\n      parameters:\n      - description: Node ID\n        in: path\n        name: nodeid\n        required: true\n        type: string\n      - description: Failover request\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/models.FailOverMeReq'\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.SuccessResponse'\n        \"400\":\n          description: Bad Request\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Failover me\n      tags:\n      - PRO\n  /api/v1/tags:\n    delete:\n      consumes:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            items:\n              $ref: '#/definitions/models.SuccessResponse'\n            type: array\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Delete Tag\n      tags:\n      - TAG\n    get:\n      consumes:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            items:\n              $ref: '#/definitions/models.SuccessResponse'\n            type: array\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: List Tags in a network\n      tags:\n      - TAG\n    post:\n      consumes:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            items:\n              $ref: '#/definitions/models.SuccessResponse'\n            type: array\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Create Tag\n      tags:\n      - TAG\n    put:\n      consumes:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            items:\n              $ref: '#/definitions/models.SuccessResponse'\n            type: array\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Update Tag\n      tags:\n      - TAG\n  /api/v1/user/group:\n    delete:\n      parameters:\n      - description: group id required to delete the role\n        in: query\n        name: group_id\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Delete user group.\n      tags:\n      - Users\n  /api/v1/user/role:\n    delete:\n      parameters:\n      - description: roleid required to delete the role\n        in: query\n        name: role_id\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Delete user role permission template.\n      tags:\n      - Users\n    get:\n      parameters:\n      - description: roleid required to get the role details\n        in: query\n        name: role_id\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.UserRolePermissionTemplate'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Get user role permission template.\n      tags:\n      - Users\n    post:\n      parameters:\n      - description: user role template\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/models.UserRolePermissionTemplate'\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.UserRolePermissionTemplate'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Create user role permission template.\n      tags:\n      - Users\n    put:\n      parameters:\n      - description: user role template\n        in: body\n        name: body\n        required: true\n        schema:\n          $ref: '#/definitions/models.UserRolePermissionTemplate'\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/models.UserRolePermissionTemplate'\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: Update user role permission template.\n      tags:\n      - Users\n  /api/v1/user/roles:\n    get:\n      parameters:\n      - description: roleid required to get the role details\n        in: query\n        name: role_id\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            items:\n              $ref: '#/definitions/models.UserRolePermissionTemplate'\n            type: array\n        \"500\":\n          description: Internal Server Error\n          schema:\n            $ref: '#/definitions/models.ErrorResponse'\n      summary: lists all user roles.\n      tags:\n      - Users\n  /meshclient/files/{filename}:\n    get:\n      responses:\n        \"200\":\n          description: file\n          schema:\n            type: body\n        \"404\":\n          description: 404 not found\n          schema:\n            type: string\n      summary: Retrieve a file from the file server\n      tags:\n      - Meshclient\nswagger: \"2.0\"\ntags:\n- description: |\n    Most actions that can be performed via API can be performed via UI. We recommend managing your networks using the official netmaker-ui project. However, Netmaker can also be run without the UI, and all functions can be achieved via API calls. If your use case requires using Netmaker without the UI or you need to do some troubleshooting/advanced configuration, using the API directly may help.\n  name: APIUsage\n- description: |\n    API calls are primarily authenticated using a user authentication token. This token should be included in the header as follows:\n\n    -H \"Authorization: Bearer <YOUR_AUTH_TOKEN>\"\n\n    To obtain YOUR_AUTH_TOKEN:\n    Call the api/users/adm/authenticate endpoint (see documentation below for details).\n\n    Note: While a MasterKey exists (configurable via env var or config file), it should be considered a backup option, used only when server access is lost. By default, this key is \"secret key,\" but it's crucial to change this and keep it secure in your instance.\n\n    For more information on configuration and security best practices, refer to the [Netmaker documentation](https://docs.netmaker.io/).\n  name: Authentication\n- description: |\n    Check out our [Pricing](https://www.netmaker.io/pricing). And Feel Free to [Contact Us](https://www.netmaker.io/contact) if you have any questions or need some clarifications.\n  name: Pricing\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tls",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "validation",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}