{
  "metadata": {
    "timestamp": 1736567685564,
    "page": 267,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "projectcalico/calico",
      "stars": 6126,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6484375,
          "content": ".go-pkg-cache/\nreport/\nbin/\n*.created*\n*.pyc\n.idea\n.vscode\nvendor/\nartifacts/\npostrelease-checks.xml\ncrypto/tmp\n\n/* Produced as part of release */\nrelease/release\nnode/windows-packaging/CalicoWindows/confd/config-bgp.ps1\nnode/windows-packaging/CalicoWindows/confd/config-bgp.psm1\nnode/windows-packaging/nssm.zip\nnode/windows-packaging/nssm.exe\n_output\nbuilder.coverprofile\n*.log\n*.pprof\n.release-*.*\n\n/* Created by local kind cluster */\nhack/test/kind/kind\nhack/test/kind/kind-v*\nhack/test/kind/.*updated*\nhack/test/kind/kubectl\nhack/test/kind/kubectl-v*\nhack/test/kind/*kubeconfig.yaml\npod2daemon/node-driver-registrar/\n\n/networking-calico/upper-constraints*.txt\n"
        },
        {
          "name": ".semaphore",
          "type": "tree",
          "content": null
        },
        {
          "name": "AUTHORS.md",
          "type": "blob",
          "size": 38.80078125,
          "content": "# Calico authors\n\nThis file is auto-generated based on contribution records reported\nby GitHub for the core repositories within the projectcalico/ organization. It is ordered alphabetically.\n\n| Name   | Email  |\n|--------|--------|\n| Aalaesar                                 | aalaesar@gmail.com  |\n| Aaron Roydhouse                          | aaron@roydhouse.com  |\n| Abhijeet Kasurde                         | akasurde@redhat.com  |\n| Abhinav Dahiya                           | abhinav.dahiya@coreos.com  |\n| Abhishek Jaisingh                        | abhi2254015@gmail.com  |\n| Adam Hoheisel                            | adam.hoheisel99@gmail.com  |\n| Adam Leskis                              | leskis@gmail.com  |\n| Adam Szecówka                            | adam.szecowka@sap.com  |\n| ahrkrak                                  | andrew.randall@gmail.com  |\n| Alan                                     | zg.zhu@daocloud.io  |\n| Alban Crequy                             | alban@kinvolk.io  |\n| Albert Vaca                              | albertvaka@gmail.com  |\n| Alejo Carballude                         | alejocarballude@gmail.com  |\n| Aleksandr Didenko                        | adidenko@mirantis.com  |\n| Aleksandr Dubinsky                       | almson@users.noreply.github.com  |\n| Alessandro Rossi                         | 4215912+kubealex@users.noreply.github.com  |\n| Alex Altair                              | alexanderaltair@gmail.com  |\n| Alex Chan                                | github@alexwlchan.fastmail.co.uk  |\n| Alex Hersh                               | alexander.hersh@metaswitch.com  |\n| Alex Nauda                               | alex@alexnauda.com  |\n| Alex O Regan                             | alexsoregan@gmail.com  |\n| Alex Pollitt                             | lxpollitt@users.noreply.github.com  |\n| Alex Rowley                              | rowleyaj@gmail.com  |\n| Alexander Brand                          | alexbrand09@gmail.com  |\n| Alexander Gama Espinosa                  | algamaes@microsoft.com  |\n| Alexander Golovko                        | alexandro@ankalagon.ru  |\n| Alexander Saprykin                       | asaprykin@mirantis.com  |\n| Alexander Varshavsky                     | alex.varshavsky@tigera.io  |\n| Alexey Magdich                           | itechart.aliaksei.mahdzich@tigera.io  |\n| Alexey Makhov                            | makhov.alex@gmail.com  |\n| Alexey Medvedchikov                      | alexey.medvedchikov@gmail.com  |\n| alexeymagdich-tigera                     | 56426143+alexeymagdich-tigera@users.noreply.github.com  |\n| alexhersh                                | hersh.a@husky.neu.edu  |\n| Alina Militaru                           | alina@tigera.io  |\n| Aloys Augustin                           | aloaugus@cisco.com  |\n| Aloÿs                                    | aloys.augustin@polytechnique.org  |\n| Amim Knabben                             | amim.knabben@gmail.com  |\n| amq                                      | amq@users.noreply.github.com  |\n| Anatoly Popov                            | aensidhe@users.noreply.github.com  |\n| Anders Janmyr                            | anders@janmyr.com  |\n| Andreas Jaeger                           | aj@suse.com  |\n| Andrei Nistor                            | andrei_nistor@smart-x.net  |\n| Andrew Donald Kennedy                    | andrew.international@gmail.com  |\n| Andrew Gaffney                           | andrew@agaffney.org  |\n| Andy Randall                             | andy@tigera.io  |\n| Anthony ARNAUD                           | aarnaud@eidosmontreal.com  |\n| Anthony BESCOND                          | anthony.bescond@kiln.fi  |\n| Anthony T                                | 25327116+anthonytwh@users.noreply.github.com  |\n| Anton Antonov                            | anton.synd.antonov@gmail.com  |\n| Anton Klokau                             | anton.klokau@gmail.com  |\n| anton-klokau                             | 54411589+anton-klokau@users.noreply.github.com  |\n| Antony Guinard                           | antony@tigera.io  |\n| Aram Alipoor                             | aram.alipoor@gmail.com  |\n| arikachen                                | eaglesora@gmail.com  |\n| Armon Dadgar                             | armon.dadgar@gmail.com  |\n| Artem Panchenko                          | apanchenko@mirantis.com  |\n| Artem Roma                               | aroma@mirantis.com  |\n| Artem Rymarchik                          | artemrymarchik@gmail.com  |\n| Artyom Rymarchik                         | artsiom.rymarchyk@itechart-group.com  |\n| Arundhati Surpur                         | arundhati@nectechnologies.in  |\n| Ashley Reese                             | ashley@victorianfox.com  |\n| asincu                                   | alinamilitaru@Alinas-MacBook-Pro.local  |\n| Atkins                                   | atkinschang@gmail.com  |\n| Avi Deitcher                             | avi@deitcher.net  |\n| Ayoub Elhamdani                          | a.elhamdani90@gmail.com  |\n| Barbara McKercher                        | barbara@tigera.io  |\n| bartek-lopatka                           | 54111388+bartek-lopatka@users.noreply.github.com  |\n| Bassam Tabbara                           | bassam@symform.com  |\n| Behnam Shobiri                           | behnam.shobeiri@gmail.com  |\n| Behnam-Shobiri                           | Behnam.shobeiri@gmail.com  |\n| Ben Schwartz                             | benschw@gmail.com  |\n| Benjamin                                 | info@diffus.org  |\n| Benjamin S. Allen                        | bsallen@alcf.anl.gov  |\n| Bertrand Lallau                          | bertrand.lallau@gmail.com  |\n| Bill Hathaway                            | bill.hathaway@gmail.com  |\n| Bill Maxwell                             | bill@rancher.com  |\n| Billie Cleek                             | bcleek@monsooncommerce.com  |\n| bingshen.wbs                             | bingshen.wbs@alibaba-inc.com  |\n| bjhaid                                   | abejideayodele@gmail.com  |\n| Blake Covarrubias                        | blake.covarrubias@gmail.com  |\n| Blucher                                  | yfg44fox@126.com  |\n| bmckercher123                            | 48458529+bmckercher123@users.noreply.github.com  |\n| Bogdan Dobrelya                          | bdobrelia@mirantis.com  |\n| Brad Beam                                | brad.beam@b-rad.info  |\n| Brad Behle                               | behle@us.ibm.com  |\n| Brendan Creane                           | brendan@tigera.io  |\n| Brian Ketelsen                           | bketelsen@gmail.com  |\n| Brian Kim                                | brian@tigera.io  |\n| Brian McMahon                            | brianmcmahon135@gmail.com  |\n| briansan                                 | bkimstunnaboss@gmail.com  |\n| Brook-Roberts                            | brook.roberts@metaswitch.com  |\n| Bryan Reese                              | bryan.mreese@gmail.com  |\n| Cao Shufeng                              | caosf.fnst@cn.fujitsu.com  |\n| Cao Xuan Hoang                           | hoangcx@vn.fujitsu.com  |\n| Carlos Alberto                           | euprogramador@gmail.com  |\n| Casey D                                  | casey.davenport@metaswitch.com  |\n| Casey Davenport                          | davenport.cas@gmail.com  |\n| Cezar Sa Espinola                        | cezarsa@gmail.com  |\n| Chakravarthy Gopi                        | cgopi@us.ibm.com  |\n| Chance Zibolski                          | chance.zibolski@gmail.com  |\n| Chen Donghui                             | chendh521@gmail.com  |\n| Chengwei Yang                            | yangchengwei@qiyi.com  |\n| chenqijun                                | chenqijun@corp.netease.com  |\n| Chris Armstrong                          | chris@opdemand.com  |\n| Chris Church                             | chris.church@gmail.com  |\n| Chris Hoge                               | chris@hogepodge.com  |\n| Chris McNabb                             | raizyr@gmail.com  |\n| Chris Tomkins                            | chris.tomkins@tigera.io  |\n| Christian Klauser                        | christianklauser@outlook.com  |\n| Christian Simon                          | simon@swine.de  |\n| Christopher                              | chris.tauchen@tigera.io  |\n| Christopher Grim                         | christopher.grim@gmail.com  |\n| Christopher LIJLENSTOLPE                 | github@cdl.asgaard.org  |\n| Christopher LILJENSTOLPE                 | cdl@asgaard.org  |\n| cinience                                 | cinience@qq.com  |\n| Ciprian Hacman                           | ciprian@hakman.dev  |\n| Clement Laforet                          | sheepkiller@cotds.org  |\n| Cody McCain                              | cody@tigera.io  |\n| Cookie                                   | luckymrwang@163.com  |\n| Cory Benfield                            | lukasaoz@gmail.com  |\n| crandl201                                | christopher_randles@cable.comcast.com  |\n| Cristian Vrabie                          | cristian.vrabie@gmail.com  |\n| Cyclinder                                | qifeng.guo@daocloud.io  |\n| Dalton Hubble                            | dghubble@gmail.com  |\n| Dan                                      | djosborne@users.noreply.github.com  |\n| Dan (Turk)                               | dan@projectcalico.org  |\n| Dan Bond                                 | pm@danbond.io  |\n| Dan O'Brien                              | dobrien.nj@gmail.com  |\n| Dan Osborne                              | djosborne10@gmail.com  |\n| Daniel Hoherd                            | daniel.hoherd@gmail.com  |\n| Daniel Megyesi                           | daniel.megyesi@liligo.com  |\n| Dario Nieuwenhuis                        | dirbaio@dirbaio.net  |\n| Darren Chin                              | dc@darrench.in  |\n| Dave Hay                                 | david_hay@uk.ibm.com  |\n| Dave Langridge                           | dave@calico.com  |\n| David Haupt                              | dhaupt@redhat.com  |\n| David Igou                               | igou.david@gmail.com  |\n| David J. Wilder                          | wilder@us.ibm.com  |\n| David Tesar                              | david.tesar@microsoft.com  |\n| Denis Iskandarov                         | d.iskandarov@gmail.com  |\n| depay                                    | depay19@163.com  |\n| derek mcquay                             | derek@tigera.io  |\n| Derk Muenchhausen                        | derk@muenchhausen.de  |\n| Didier Durand                            | durand.didier@gmail.com  |\n| Dominic DeMarco                          | ddemarc@us.ibm.com  |\n| Doug Collier                             | doug@tigera.io  |\n| Doug Davis                               | duglin@users.noreply.github.com  |\n| Doug Hellmann                            | doug@doughellmann.com  |\n| Doug Wiegley                             | dwiegley@salesforce.com  |\n| Dries Harnie                             | dries+github@harnie.be  |\n| du                                       | du@njtech.edu.cn  |\n| Duan Jiong                               | djduanjiong@gmail.com  |\n| Duong Ha-Quang                           | duonghq@vn.fujitsu.com  |\n| Dylan Pindur                             | dylanpindur@gmail.com  |\n| Ed Harrison                              | eepyaich@users.noreply.github.com  |\n| Edbert                                   | ecandra@protonmail.com  |\n| Elson Rodriguez                          | elson.rodriguez@gmail.com  |\n| emanic                                   | emily@tigera.io  |\n| Emma Gordon                              | emma@projectcalico.org  |\n| EmmEff                                   | mikef17@gmail.com  |\n| Eran Reshef                              | eran.reshef@arm.com  |\n| Eric Anderson                            | anderson@stackengine.com  |\n| Eric Barch                               | ericb@ericbarch.com  |\n| Eric Hoffmann                            | 31017077+2ffs2nns@users.noreply.github.com  |\n| Erik Stidham                             | estidham@gmail.com  |\n| Ernest Wong                              | chuwon@microsoft.com  |\n| Ernesto Jiménez                         | me@ernesto-jimenez.com  |\n| Ethan Chu                                | xychu2008@gmail.com  |\n| Eugen Mayer                              | 136934+EugenMayer@users.noreply.github.com  |\n| F41gh7                                   | info@fght.net  |\n| Fabian Ruff                              | fabian@progra.de  |\n| Fahad Arshad                             | fahadaliarshad@gmail.com  |\n| fcuello-fudo                             | 51087976+fcuello-fudo@users.noreply.github.com  |\n| Feilong Wang                             | flwang@catalyst.net.nz  |\n| fen4o                                    | martin.vladev@gmail.com  |\n| Fernando Alvarez                         | methadato@gmail.com  |\n| Fernando Cainelli                        | fernando.cainelli@gmail.com  |\n| Fionera                                  | fionera@fionera.de  |\n| Flavio Percoco                           | flaper87@gmail.com  |\n| Foivos Filippopoulos                     | foivosfilip@gmail.com  |\n| frank                                    | frank@tigera.io  |\n| Frank Greco Jr                           | frankgreco@northwesternmutual.com  |\n| François PICOT                           | fpicot@users.noreply.github.com  |\n| Fredrik Steen                            | stone4x4@gmail.com  |\n| freecaykes                               | edbert@tigera.io  |\n| frnkdny                                  | frank.danyo@gmail.com  |\n| fumihiko kakuma                          | kakuma@valinux.co.jp  |\n| Gabriel Monroy                           | gabriel@opdemand.com  |\n| Gaurav                                   | 48036489+realgaurav@users.noreply.github.com  |\n| Gaurav Khatri                            | gaurav@tigera.io  |\n| Gaurav Sinha                             | gaurav.sinha@tigera.io  |\n| Gautam K                                 | gautam.nitheesh@gmail.com  |\n| gdziwoki                                 | gdziwoki@gmail.com  |\n| gengchc2                                 | geng.changcai2@zte.com.cn  |\n| Gerard Hickey                            | hickey@kinetic-compute.com  |\n| Giancarlo Rubio                          | gianrubio@gmail.com  |\n| Gianluca                                 | 52940363+gianlucam76@users.noreply.github.com  |\n| Gianluca Mardente                        | gianluca@tigera.io  |\n| Gobinath Krishnamoorthy                  | gobinath@tigera.io  |\n| Guang Ya Liu                             | gyliu513@gmail.com  |\n| Guangming Wang                           | guangming.wang@daocloud.io  |\n| Guillaume LECERF                         | glecerf@gmail.com  |\n| guirish                                  | guirish  |\n| gunboe                                   | guntherboeckmann@gmail.com  |\n| Gunjan \"Grass-fed Rabbit\" Patel          | patelgunjan5@gmail.com  |\n| GuyTempleton                             | guy.templeton@skyscanner.net  |\n| Hagen Kuehn                              | hagen.kuehn@quater.io  |\n| halfcrazy                                | hackzhuyan@gmail.com  |\n| Hanamantagoud                            | hanamantagoud.v.kandagal@est.tech  |\n| hanamantagoudvk                          | 68010010+hanamantagoudvk@users.noreply.github.com  |\n| hedi bouattour                           | hbouatto@cisco.com  |\n| Helen Chang                              | c6h3un@gmail.com  |\n| Henry Gessau                             | gessau@gmail.com  |\n| huang.zhiping                            | huang.zhiping@99cloud.net  |\n| Huanle Han                               | hanhuanle@caicloud.io  |\n| Hui Kang                                 | kangh@us.ibm.com  |\n| Huo Qi Feng                              | huoqif@cn.ibm.com  |\n| Iago López Galeiras                      | iago@kinvolk.io  |\n| ialidzhikov                              | i.alidjikov@gmail.com  |\n| Ian Wienand                              | iwienand@redhat.com  |\n| Icarus9913                               | icaruswu66@qq.com  |\n| Igor Kapkov                              | igasgeek@me.com  |\n| Ihar Hrachyshka                          | ihrachys@redhat.com  |\n| ijumps                                   | “bigerjump@gmail.com”  |\n| ISHIDA Wataru                            | ishida.wataru@lab.ntt.co.jp  |\n| Ivar Larsson                             | ivar@bloglovin.com  |\n| IWAMOTO Toshihiro                        | iwamoto@valinux.co.jp  |\n| J. Grizzard                              | jgrizzard@box.com  |\n| Jack Kleeman                             | jackkleeman@gmail.com  |\n| Jacob Hayes                              | jacob.r.hayes@gmail.com  |\n| Jade Chunnananda                         | jade.jch@gmail.com  |\n| Jak                                      | 44370243+jak-sdk@users.noreply.github.com  |\n| James E. Blair                           | jeblair@redhat.com  |\n| James Lucktaylor                         | jlucktay@users.noreply.github.com  |\n| James Pollard                            | james@leapyear.io  |\n| James Sturtevant                         | jsturtevant@gmail.com  |\n| Jamie                                    | 91jme@users.noreply.github.com  |\n| Jan Brauer                               | jan@jimdo.com  |\n| Jan Ivar Beddari                         | code@beddari.net  |\n| janonymous                               | janonymous.codevulture@gmail.com  |\n| jay vyas                                 | jvyas@vmware.com  |\n| Jean-Sebastien Mouret                    | js.mouret@gmail.com  |\n| Jeff Schroeder                           | jeffschroeder@computer.org  |\n| Jenkins                                  | jenkins@review.openstack.org  |\n| Jens Henrik Hertz                        | jens@treatwell.nl  |\n| Jesper Dangaard Brouer                   | brouer@redhat.com  |\n| Jiawei Huang                             | jiawei@tigera.io  |\n| Jimmy McCrory                            | jimmy.mccrory@gmail.com  |\n| jinglinax@163.com                        | jinglinax@163.com  |\n| jmjoy                                    | 918734043@qq.com  |\n| Joanna Solmon                            | joanna.solmon@gmail.com  |\n| Joel Bastos                              | kintoandar@users.noreply.github.com  |\n| Johan Fleury                             | jfleury+github@arcaik.net  |\n| Johannes M. Scheuermann                  | joh.scheuer@gmail.com  |\n| Johannes Scheerer                        | johannes.scheerer@sap.com  |\n| johanneswuerbach                         | johannes.wuerbach@googlemail.com  |\n| John Engelman                            | john.r.engelman@gmail.com  |\n| jolestar                                 | jolestar@gmail.com  |\n| Jonah Back                               | jonah@jonahback.com  |\n| Jonathan Boulle                          | jonathanboulle@gmail.com  |\n| Jonathan M. Wilbur                       | jonathan@wilbur.space  |\n| Jonathan Palardy                         | jonathan.palardy@gmail.com  |\n| Jonathan Sabo                            | jonathan@sabo.io  |\n| Jonathan Sokolowski                      | jonathan.sokolowski@gmail.com  |\n| jose-bigio                               | jose.bigio@docker.com  |\n| Joseph Gu                                | aceralon@outlook.com  |\n| Josh Conant                              | deathbeforedishes@gmail.com  |\n| Josh Lucas                               | josh.lucas@tigera.io  |\n| joshti                                   | 56737865+joshti@users.noreply.github.com  |\n| Joshua Allard                            | josh@tigera.io  |\n| joshuactm                                | joshua.colvin@ticketmaster.com  |\n| Julien Dehee                             | PrFalken@users.noreply.github.com  |\n| Jussi Nummelin                           | jussi.nummelin@digia.com  |\n| Justin                                   | justin@tigera.io  |\n| Justin Burnham                           | justin@jburnham.net  |\n| Justin Cattle                            | j@ocado.com  |\n| Justin Nauman                            | justin.r.nauman+github@gmail.com  |\n| Justin Pacheco                           | jpacheco39@bloomberg.net  |\n| Justin Sievenpiper                       | justin@sievenpiper.co  |\n| JW Bell                                  | bjwbell@gmail.com  |\n| Kamil Madac                              | kamil.madac@gmail.com  |\n| Karl Matthias                            | karl.matthias@gonitro.com  |\n| Karthik Gaekwad                          | karthik.gaekwad@gmail.com  |\n| Karthik Krishnan Ramasubramanian         | mail@karthikkrishnan.me  |\n| Kashif Saadat                            | kashifsaadat@gmail.com  |\n| Kelsey Hightower                         | kelsey.hightower@gmail.com  |\n| Ketan Kulkarni                           | ketkulka@gmail.com  |\n| Kevin Benton                             | blak111@gmail.com  |\n| Kevin Lynch                              | klynch@gmail.com  |\n| Kiran Divekar                            | calsoft.kiran.divekar@tigera.io  |\n| Kirill Buev                              | kirill.buev@pm.me  |\n| Kris Gambirazzi                          | kris.gambirazzi@transferwise.com  |\n| Krzesimir Nowak                          | krzesimir@kinvolk.io  |\n| Krzysztof Cieplucha                      | krisiasty@users.noreply.github.com  |\n| l1b0k                                    | libokang.dev@gmail.com  |\n| Lance Robson                             | lancelot.robson@gmail.com  |\n| Lancelot Robson                          | lancelot.robson@metaswitch.com  |\n| Lars Ekman                               | lars.g.ekman@est.tech  |\n| Laurence Man                             | laurence@tigera.io  |\n| Le Hou                                   | houl7@chinaunicom.cn  |\n| Lee Briggs                               | lbriggs@apptio.com  |\n| Leo Ochoa                                | leo8a@users.noreply.github.com  |\n| Li-zhigang                               | li.zhigang3@zte.com.cn  |\n| libby kent                               | viskcode@gmail.com  |\n| lilintan                                 | lintan.li@easystack.cn  |\n| LinYushen                                | linyushen@qiniu.com  |\n| lippertmarkus                            | lippertmarkus@gmx.de  |\n| LittleBoy18                              | 2283985296@qq.com  |\n| liubog2008                               | liubog2008@gmail.com  |\n| Liz Rice                                 | liz@lizrice.com  |\n| llr                                      | nightmeng@gmail.com  |\n| Logan Davis                              | 38335829+logand22@users.noreply.github.com  |\n| Logan V                                  | logan2211@gmail.com  |\n| lou-lan                                  | loulan@loulan.me  |\n| Luiz Filho                               | luizbafilho@gmail.com  |\n| Luke Mino-Altherr                        | luke.mino-altherr@metaswitch.com  |\n| luobily                                  | luobily@gmail.com  |\n| Luthfi Anandra                           | luthfi.anandra@gmail.com  |\n| Lv Jiawei                                | lvjiawei@cmss.chinamobile.com  |\n| maao                                     | maao@cmss.chinamobile.com  |\n| Manjunath A Kumatagi                     | mkumatag@in.ibm.com  |\n| Manuel Buil                              | mbuil@suse.com  |\n| Marga Millet                             | marga.sfo@gmail.com  |\n| Marius Grigaitis                         | marius.grigaitis@home24.de  |\n| Mark Fermor                              | markfermor@holidayextras.com  |\n| Mark Petrovic                            | mspetrovic@gmail.com  |\n| markruler                                | csu0414@gmail.com  |\n| Marlin Cremers                           | marlinc@marlinc.nl  |\n| Marshall Ford                            | inbox@marshallford.me  |\n| Martijn Koster                           | mak-github@greenhills.co.uk  |\n| Martin Evgeniev                          | suizman@users.noreply.github.com  |\n| marvin-tigera                            | marvin-tigera@users.noreply.github.com  |\n| Mat Meredith                             | matthew.meredith@metaswitch.net  |\n| Mateusz Gozdek                           | mgozdek@microsoft.com  |\n| Mathias Lafeldt                          | mathias.lafeldt@gmail.com  |\n| Matt                                     | matt@projectcalico.org  |\n| Matt Boersma                             | matt@opdemand.com  |\n| Matt Dupre                               | matthewdupre@users.noreply.github.com  |\n| Matt Kelly                               | Matthew.Joseph.Kelly@gmail.com  |\n| Matt Leung                               | mleung975@gmail.com  |\n| Matthew                                  | mfisher@engineyard.com  |\n| Matthew Fenwick                          | mfenwick100@gmail.com  |\n| Matthew Fisher                           | matthewf@opdemand.com  |\n| Max Kudosh                               | max_kudosh@hotmail.com  |\n| Max S                                    | maxstr@users.noreply.github.com  |\n| Max Stritzinger                          | mstritzinger@bloomberg.net  |\n| Maxim Ivanov                             | ivanov.maxim@gmail.com  |\n| Maximilian Bischoff                      | maximilian.bischoff@inovex.de  |\n| Mayo                                     | mayocream39@yahoo.co.jp  |\n| Mazdak Nasab                             | mazdak@tigera.io  |\n| mchtech                                  | michu_an@126.com  |\n| meeee                                    | michael+git@frister.net  |\n| meijin                                   | meijin@tiduyun.com  |\n| melissaml                                | ma.lei@99cloud.net  |\n| Michael Dong                             | michael.dong@vrviu.com  |\n| Michael Stowe                            | me@mikestowe.com  |\n| Michael Vierling                         | michael@tigera.io  |\n| Micheal Waltz                            | ecliptik@gmail.com  |\n| Mikalai Kastsevich                       | kostevich-kolya@mail.ru  |\n| Mike Kostersitz                          | mikek@microsoft.com  |\n| Mike Palmer                              | mike@mikepalmer.net  |\n| Mike Scherbakov                          | mihgen@gmail.com  |\n| Mike Spreitzer                           | mspreitz@us.ibm.com  |\n| Mike Stephen                             | mike.stephen@tigera.io  |\n| Mike Stowe                               | mikestowe@Mikes-MBP.sfo.tigera.io  |\n| mikev                                    | mvierling@gmail.com  |\n| Miouge1                                  | Miouge1@users.noreply.github.com  |\n| ml                                       | 6209465+ml-@users.noreply.github.com  |\n| mlbarrow                                 | michael@barrow.me  |\n| MofeLee                                  | mofe@me.com  |\n| Mohamed                                  | mohamed.elzarei@motius.de  |\n| Molnigt                                  | jan.munkhammar@safespring.com  |\n| Monty Taylor                             | mordred@inaugust.com  |\n| Mridul Gain                              | mridulgain@gmail.com  |\n| Muhammad Saghir                          | msagheer92@gmail.com  |\n| Muhammet Arslan                          | muhammet.arsln@gmail.com  |\n| Murali Paluru                            | leodotcloud@gmail.com  |\n| Mészáros Mihály                          | misi@majd.eu  |\n| Nate Taylor                              | ntaylor1781@gmail.com  |\n| Nathan Fritz                             | fritzy@netflint.net  |\n| Nathan Skrzypczak                        | nathan.skrzypczak@gmail.com  |\n| Nathan Wouda                             | nwouda@users.noreply.github.com  |\n| Neil Jerram                              | nj@metaswitch.com  |\n| Nic Doye                                 | nic@worldofnic.org  |\n| Nick Bartos                              | nick@pistoncloud.com  |\n| Nick Wood                                | nwood@microsoft.com  |\n| Nikkau                                   | nikkau@nikkau.net  |\n| Nirman Narang                            | narang@us.ibm.com  |\n| njuptlzf                                 | njuptlzf@163.com  |\n| Noah Treuhaft                            | noah.treuhaft@docker.com  |\n| nohajc                                   | nohajc@gmail.com  |\n| nuczzz                                   | 33566732+nuczzz@users.noreply.github.com  |\n| nuxeric                                  | 48699932+nuxeric@users.noreply.github.com  |\n| Oded Lazar                               | odedlaz@gmail.com  |\n| oldtree2k                                | oldtree2k@users.noreply.github.com  |\n| Olivier Bourdon                          | obourdon@mirantis.com  |\n| Onong Tayeng                             | onong.tayeng@gmail.com  |\n| OpenDev Sysadmins                        | openstack-infra@lists.openstack.org  |\n| Otto Sulin                               | otto.sulin@gmail.com  |\n| Owen Tuz                                 | owen@segfault.re  |\n| pasanw                                   | pasanweerasinghe@gmail.com  |\n| Patrick Marques                          | pmarques@users.noreply.github.com  |\n| Patrik Lundin                            | patrik@sigterm.se  |\n| Paul Tiplady                             | symmetricone@gmail.com  |\n| Pavel Khusainov                          | pkhusainov@mz.com  |\n| Pedro Coutinho                           | pedro@tigera.io  |\n| Penkey Suresh                            | penkeysuresh@users.noreply.github.com  |\n| penkeysuresh                             | penkeysuresh@gmail.com  |\n| peter                                    | peterkellyonline@gmail.com  |\n| Peter Kelly                              | 659713+petercork@users.noreply.github.com  |\n| Peter Nordquist                          | peter.nordquist@pnnl.gov  |\n| Peter Salanki                            | peter@salanki.st  |\n| Peter White                              | peter.white@metaswitch.com  |\n| Phil Kates                               | me@philkates.com  |\n| Philip Southam                           | philip.southam@jpl.nasa.gov  |\n| Phu Kieu                                 | pkieu@jpl.nasa.gov  |\n| Pierre Grimaud                           | grimaud.pierre@gmail.com  |\n| Pike.SZ.fish                             | pikeszfish@gmail.com  |\n| Prayag Verma                             | prayag.verma@gmail.com  |\n| Pushkar Joglekar                         | pjoglekar@vmware.com  |\n| PythonSyntax1                            | 51872355+PythonSyntax1@users.noreply.github.com  |\n| Qiu Yu                                   | qiuyu@ebaysf.com  |\n| Rafael                                   | rafael@tigera.io  |\n| Rafal Borczuch                           | rafalq.b+github@gmail.com  |\n| Rafe Colton                              | r.colton@modcloth.com  |\n| Rahul Krishna Upadhyaya                  | rakrup@gmail.com  |\n| rao yunkun                               | yunkunrao@gmail.com  |\n| Renan Gonçalves                          | renan.saddam@gmail.com  |\n| Rene Dekker                              | rene@tigera.io  |\n| Rene Kaufmann                            | kaufmann.r@gmail.com  |\n| Reza R                                   | 54559947+frozenprocess@users.noreply.github.com  |\n| Ricardo Katz                             | rikatz@users.noreply.github.com  |\n| Ricardo Pchevuzinske Katz                | ricardo.katz@serpro.gov.br  |\n| Richard Kovacs                           | kovacsricsi@gmail.com  |\n| Richard Laughlin                         | richardwlaughlin@gmail.com  |\n| Richard Marshall                         | richard.marshall@ask.com  |\n| Ripta Pasay                              | ripta@users.noreply.github.com  |\n| Rob Brockbank                            | robbrockbank@gmail.com  |\n| Rob Terhaar                              | robbyt@robbyt.net  |\n| Robert Brockbank                         | rob.brockbank@metswitch.com  |\n| Robert Coleman                           | github@robert.net.nz  |\n| Roberto Alcantara                        | roberto@eletronica.org  |\n| Robin Müller                             | robin.mueller@outlook.de  |\n| Rodrigo Barbieri                         | rodrigo.barbieri2010@gmail.com  |\n| Roman Danko                              | elcomtik@users.noreply.github.com  |\n| Roman Sokolkov                           | roman@giantswarm.io  |\n| Ronnie P. Thomas                         | rpthms@users.noreply.github.com  |\n| Roshani Rathi                            | rrroshani227@gmail.com  |\n| roshanirathi                             | 42164609+roshanirathi@users.noreply.github.com  |\n| Rui Chen                                 | rchen@meetup.com  |\n| rushtehrani                              | r@inven.io  |\n| Rustam Zagirov                           | stammru@gmail.com  |\n| Ryan Zhang                               | ryan.zhang@docker.com  |\n| rymarchikbot                             | 43807162+rymarchikbot@users.noreply.github.com  |\n| Saeid Askari                             | askari.saeed@gmail.com  |\n| Satish Matti                             | smatti@google.com  |\n| Satoru Takeuchi                          | sat@cybozu.co.jp  |\n| Saurabh Mohan                            | saurabh@tigera.io  |\n| Sean Kilgore                             | logikal@users.noreply.github.com  |\n| Sedef                                    | ssavas@vmware.com  |\n| Semaphore Automatic Update               | tom@tigera.io  |\n| Sergey Kulanov                           | skulanov@mirantis.com  |\n| Sergey Melnik                            | sergey.melnik@commercetools.de  |\n| Seth                                     | sethpmccombs@gmail.com  |\n| Seth Malaki                              | seth@tigera.io  |\n| Shatrugna Sadhu                          | shatrugna.sadhu@gmail.com  |\n| Shaun Crampton                           | smc@metaswitch.com  |\n| shouheng.lei                             | shouheng.lei@easystack.cn  |\n| Simão Reis                              | smnrsti@gmail.com  |\n| SONG JIANG                               | song@tigera.io  |\n| SongmingYan                              | yan.songming@zte.com.cn  |\n| spdfnet                                  | 32593931+spdfnet@users.noreply.github.com  |\n| Spike Curtis                             | spike@tigera.io  |\n| squ94wk                                  | squ94wk@googlemail.com  |\n| sridhar                                  | sridhar@tigera.io  |\n| sridhartigera                            | 63839878+sridhartigera@users.noreply.github.com  |\n| Sriram Yagnaraman                        | sriram.yagnaraman@est.tech  |\n| Stanislav Yotov                          | 29090864+svyotov@users.noreply.github.com  |\n| Stanislav-Galchynski                     | Stanislav.Galchynski@itechart-group.com  |\n| Stefan Breunig                           | stefan.breunig@xing.com  |\n| Stefan Bueringer                         | sbueringer@gmail.com  |\n| Stephen Schlie                           | schlie@tigera.io  |\n| Steve Gao                                | steve@tigera.io  |\n| Stéphane Cottin                          | stephane.cottin@vixns.com  |\n| Suraiya Hameed                           | 22776421+Suraiya-Hameed@users.noreply.github.com  |\n| Suraj Narwade                            | surajnarwade353@gmail.com  |\n| svInfra17                                | vinayak@infracloud.io  |\n| Szymon Pyżalski                          | spyzalski@mirantis.com  |\n| TAKAHASHI Shuuji                         | shuuji3@gmail.com  |\n| Tamal Saha                               | tamal@appscode.com  |\n| Tathagata Chowdhury                      | calsoft.tathagata.chowdhury@tigera.io  |\n| tathagatachowdhury                       | tathagata.chowdhury@calsoftinc.com  |\n| Teller-Ulam                              | 2749404+Teller-Ulam@users.noreply.github.com  |\n| Thijs Scheepers                          | tscheepers@users.noreply.github.com  |\n| Thilo Fromm                              | thilo@kinvolk.io  |\n| Thomas Lohner                            | tl@scale.sc  |\n| Tim Bart                                 | tim@pims.me  |\n| Tim Briggs                               | timothydbriggs@gmail.com  |\n| Timo Beckers                             | timo.beckers@klarrio.com  |\n| Todd Nine                                | tnine@apigee.com  |\n| Tom Denham                               | tom@tomdee.co.uk  |\n| Tom Pointon                              | tom@teepeestudios.net  |\n| Tomas Hruby                              | tomas@tigera.io  |\n| Tomas Mazak                              | tomas@valec.net  |\n| Tommaso Pozzetti                         | tommypozzetti@hotmail.it  |\n| tonic                                    | tonicbupt@gmail.com  |\n| ToroNZ                                   | tomasmaggio@gmail.com  |\n| Trapier Marshall                         | trapier.marshall@docker.com  |\n| Trevor Tao                               | trevor.tao@arm.com  |\n| Trond Hasle Amundsen                     | t.h.amundsen@usit.uio.no  |\n| turekt                                   | 32360115+turekt@users.noreply.github.com  |\n| tuti                                     | tuti@tigera.io  |\n| Tyler Stachecki                          | tstachecki@bloomberg.net  |\n| Uwe Dauernheim                           | uwe@dauernheim.net  |\n| Uwe Krueger                              | uwe.krueger@sap.com  |\n| vagrant                                  | vagrant@mesos.vm  |\n| Valentin Ouvrard                         | valentin.ouvrard@nautile.sarl  |\n| Viacheslav Vasilyev                      | avoidik@gmail.com  |\n| Vieri                                    | 15050873171@163.com  |\n| Vincent Schwarzer                        | vincent.schwarzer@yahoo.de  |\n| Vivek Thrivikraman                       | vivek.thrivikraman@est.tech  |\n| wangwengang                              | wangwengang@inspur.com  |\n| Wei Kin Huang                            | weikin.huang04@gmail.com  |\n| Wei.ZHAO                                 | zhaowei@qiyi.com  |\n| weizhouBlue                              | 45163302+weizhouBlue@users.noreply.github.com  |\n| Wietse Muizelaar                         | wmuizelaar@bol.com  |\n| Will Rouesnel                            | w.rouesnel@gmail.com  |\n| Wouter Schoot                            | wouter@schoot.org  |\n| wuranbo                                  | wuranbo@gmail.com  |\n| wwgfhf                                   | 51694849+wwgfhf@users.noreply.github.com  |\n| Xiang Dai                                | 764524258@qq.com  |\n| Xiang Liu                                | lx1036@126.com  |\n| xieyanker                                | xjsisnice@gmail.com  |\n| Xin He                                   | he_xinworld@126.com  |\n| YAMAMOTO Takashi                         | yamamoto@midokura.com  |\n| Yan Zhu                                  | yanzhu@alauda.io  |\n| yang59324                                | yang59324@163.com  |\n| yanyan8566                               | 62531742+yanyan8566@users.noreply.github.com  |\n| yassan                                   | yassan0627@gmail.com  |\n| Yecheng Fu                               | cofyc.jackson@gmail.com  |\n| Yi He                                    | yi.he@arm.com  |\n| Yi Tao                                   | yitao@qiniu.com  |\n| ymyang                                   | yangym9@lenovo.com  |\n| Yongkun Gui                              | ygui@google.com  |\n| Yuji Azama                               | yuji.azama@gmail.com  |\n| zealic                                   | zealic@gmail.com  |\n| zhangjie                                 | zhangjie0619@yeah.net  |\n| zhouxinyong                              | zhouxinyong@inspur.com  |\n| Zopanix                                  | zopanix@gmail.com  |\n| Zuul                                     | zuul@review.openstack.org  |\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.765625,
          "content": "# Contributing to the Calico Codebase\n\nThanks for considering contributing to Calico! This document outlines the canonical procedure for contributing new features\nand bugfixes to Calico. Following these steps will help ensure that your contribution gets merged quickly and\nefficiently.\n\n## Overview\n\n### Is this a new feature?\n\nIf you'd like to add a new feature to Calico, please first open an issue describing the desired functionality. A Calico\nmaintainer will work with you to come up with the correct design for the new feature. Once you've agreed on a design, you can then\nstart contributing code to the relevant Calico repositories using the development process described below.\n\nRemember, agreeing on a design in advance will greatly increase the chance that your PR will be accepted, and minimize the amount of time required\nfor both you and your reviewer!\n\n### Is this a simple bug fix?\n\nSimple bug fixes can just be raised as a pull request. Make sure you describe the bug in the pull request description,\nand please try to reproduce the bug in a unit test. This will help ensure the bug stays fixed!\n\n### Writing, testing, and building the code\n\nFor more detailed information on the development process for Calico, see the [developer guide](DEVELOPER_GUIDE.md).\n\n### PR process\n\nOnce you've agreed on a design for your bugfix or new feature, development against the Calico codebase should be done using the following steps:\n\n1. [Create a personal fork][fork] of the repository.\n1. Pull the latest code from the **master** branch and create a feature branch off of this in your fork.\n1. Implement your feature. Commits are cheap in Git; try to split up your code into many. It makes reviewing easier as well as for saner merging.\n1. Make sure that existing tests are passing, and that you've written new tests for any new functionality. Each directory has its own suite of tests.\n1. Push your feature branch to your fork on GitHub.\n1. [Create a pull request][pulls] using GitHub, from your fork and branch to projectcalico `master`.\n    1. If you haven't already done so, you will need to agree to our contributor agreement. See [below](#contributor-agreements).\n    1. Opening a pull request will automatically run your changes through our CI. Make sure all pre-submit tests pass so that a maintainer can merge your contribution.\n1. Await review from a maintainer.\n1. When you receive feedback:\n    1. Address code review issues on your feature branch.\n    1. Push the changes to your fork's feature branch on GitHub _in a new commit - do not squash!_ This automatically updates the pull request.\n    1. If necessary, make a top-level comment along the lines of “Please re-review”, notifying your reviewer, and repeat the above.\n    1. Once all the requested changes have been made, your reviewer may ask you to squash your commits. If so, combine the commits into one with a single descriptive message.\n    1. Once your PR has been approved and the commits have been squashed, your reviewer will merge the PR. If you have the necessary permissions, you may merge the PR yourself.\n\n#### Patching an older release\n\nIf your contribution is intended for an older release, the change will need to be cherry-picked into the appropriate release branch after it has been reviewed\nand merged into master. **To make sure this happens, apply the `cherry-pick-candidate` label to the pull request or ask your reviewer to do so.**\n\nOnce your reviewer agrees the patch is valid for cherry-picking, perform the following steps to create the cherry-pick PR.\n\n1. Check out the release branch corresponding to your target release, for example: `git fetch upstream; git checkout release-v2.5`.\n1. Create the cherry-pick branch based off of the target branch, for example: `git checkout -b cherry-pick-pr12345-v2.5 release-v2.5`\n1. Cherry-pick the commit to your new branch: `git cherry-pick [ORIGINAL_COMMIT_HASH]`\n1. Push the branch to your fork and create a PR against the appropriate `release-vX.Y` branch.\n   - Title the PR `[release-vX.Y] cherry-pick: ORIGINAL_TITLE`\n   - In the description, provide a link to the original PR so it can be traced more easily.\n   - Make sure the pull request is in the correct GitHub milestone for the next vX.Y.Z release.\n   - Make sure to write a release note, and apply the `release-note-required` label to the PR.\n1. Notify your original reviewer on the PR.\n1. Once your PR is merged, remove the `cherry-pick-candidate` label from the original PR and replace it with `cherry-pick-completed`.\n\n### Release notes and documentation\n\nMost PRs warrant release notes - any bug fixes or new features that users may be interested in. If you are unsure if your PR warrants\na release note in the description, ask your reviewer.\n\nYou or your reviewer should make sure that your PR has the correct labels and milestone set.\n\nEvery PR needs one `docs-*` label.\n\n- `docs-pr-required`: This change requires a change to the documentation that has not been completed yet.\n- `docs-completed`: This change has all necessary documentation completed.\n- `docs-not-required`: This change has no user-facing impact and requires no docs.\n\nEvery PR needs one `release-note-*` label.\n\n- `release-note-required`: This PR has user-facing changes. Most PRs should have this label.\n- `release-note-not-required`: This PR has no user-facing changes.\n\nOther optional labels:\n\n- `cherry-pick-candidate`: This PR should be cherry-picked to an earlier release. For bug fixes only.\n- `needs-operator-pr`: This PR is related to install and requires a corresponding change to the operator.\n\n## Contributor Agreements\n\nWe need you to sign our Contributor License Agreement before we can accept your\ncontribution. You will be prompted to do this as part of the PR process\non GitHub.\n\n[fork]: https://help.github.com/articles/fork-a-repo/\n[pulls]: https://help.github.com/articles/creating-a-pull-request/\n"
        },
        {
          "name": "CONTRIBUTING_DOCS.md",
          "type": "blob",
          "size": 0.12890625,
          "content": "# Contributing to Calico documentation\n\nWe moved the Calico docs site to [a new docs repository](https://github.com/tigera/docs).\n\n\n"
        },
        {
          "name": "DEVELOPER_GUIDE.md",
          "type": "blob",
          "size": 3.978515625,
          "content": "# Developer guide\n\nThis document describes how to set up a development environment for Calico, as well as how to build and test development code.\n\nAdditional developer docs can be found in [hack/docs](hack/docs).\n\n## Prerequisites:\n\nThese build instructions assume you have a Linux build environment with:\n\n-  Docker\n-  git\n-  make\n\n## Building Calico\n\n### Building all of Calico\n\nTo build all of Calico, run the following command from the root of the repository.\n\n```\nmake image\n```\n\nThis will produce several container images and may take some time, so you likely want to build the specific image / images that you are working on instead.\n\nThe build uses the go package cache and local vendor caching to increase build speed. To perform a clean build, use the `clean` target.\n\n```\nmake clean image\n```\n\n### Build a specific image\n\nTo build just one image, you can run the same command in a particular sub-directory.\n\nFor example, to build `calico/node`, run the following:\n\n```\nmake -C node image\n```\n\n### Building a specific architecture\n\nBy default, images will be produced for the build machine's architecture. To cross-compile, pass the `ARCH` environment variable. For example, to\nbuild for arm64, run the following:\n\n```\nmake image ARCH=arm64\n```\n\n### Updating Calico helm chart and manifests\n\nThe Calico helm charts can be found in the `charts/` directory. After making changes to the templates in the chart,\nmake sure to run `make gen-manifests` to update the `manifests/` directory, which is largely auto-generated based on the helm chart.\n\n### Makefile target reference\n\nThe following are the standard `Makefile` targets that are in every project directory.\n\n* `make build`: build the binary for the current architecture. Normally will be in `bin/` or `dist/` and named `NAME-ARCH`, e.g. `felix-arm64` or `typha-amd64`. If there are multiple OSes available, then named `NAME-OS-ARCH`, e.g. `calicoctl-darwin-amd64`.\n* `make build ARCH=<ARCH>`: build the binary for the given `ARCH`. Output binary will be in `bin/` or `dist/` and follows the naming convention listed above.\n* `make build-all`: build binaries for all supported architectures. Output binaries will be in `bin/` or `dist/` and follow the naming convention listed above.\n* `make image`: create a docker image for the current architecture. It will be named `NAME:latest-ARCH`, e.g. `calico/felix:latest-amd64` or `calico/typha:latest-s390x`. If multiple operating systems are available, will be named `NAME:latest-OS-ARCH`, e.g. `calico/ctl:latest-linux-ppc64le`\n* `make image ARCH=<ARCH>`: create a docker image for the given `ARCH`. Images will be named according to the convention listed above.\n* `make image-all`: create docker images for all supported architectures. Images will be named according to the convention listed above in `make image`.\n* `make test`: run all tests\n* `make ci`: run all CI steps for build and test, likely other targets. **WARNING:** It is **not** recommended to run `make ci` locally, as the actions it takes may be destructive.\n* `make cd`: run all CD steps, normally pushing images out to registries. **WARNING:** It is **not** recommended to run `make cd` locally, as the actions it takes may be destructive, e.g. pushing out images. For your safety, it only will work if you run `make cd CONFIRM=true`, which only should be run by the proper CI system.\n\n## Running automated tests\n\n### Running the unit tests\n\nEach directory has its own set of automated tests that live in-tree and can be run without the need to deploy an end-to-end Kubernetes system. The easiest\nway to run the tests is to submit a PR with your changes, which will trigger a build on the CI system.\n\nIf you'd like to run them locally we recommend running each directory's test suite individually,\nsince running the tests for the entire codebase can take a _very_ long time. Use the `test` target in a particular directory to run that\ndirectory's tests.\n\n```\nmake test\n```\n\nFor information on how to run a subset of a directory's tests, refer to the documentation and Makefile in that directory.\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 10.4619140625,
          "content": "Apache License\nVersion 2.0, January 2004\nhttp://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n   Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n   stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n   that You distribute, all copyright, patent, trademark, and\n   attribution notices from the Source form of the Work,\n   excluding those notices that do not pertain to any part of\n   the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n   distribution, then any Derivative Works that You distribute must\n   include a readable copy of the attribution notices contained\n   within such NOTICE file, excluding those notices that do not\n   pertain to any part of the Derivative Works, in at least one\n   of the following places: within a NOTICE text file distributed\n   as part of the Derivative Works; within the Source form or\n   documentation, if provided along with the Derivative Works; or,\n   within a display generated by the Derivative Works, if and\n   wherever such third-party notices normally appear. The contents\n   of the NOTICE file are for informational purposes only and\n   do not modify the License. You may add Your own attribution\n   notices within Derivative Works that You distribute, alongside\n   or as an addendum to the NOTICE text from the Work, provided\n   that such additional attribution notices cannot be construed\n   as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\nCopyright 2016 The Kubernetes Authors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 7.5244140625,
          "content": "PACKAGE_NAME = github.com/projectcalico/calico\n\ninclude metadata.mk\ninclude lib.Makefile\n\nDOCKER_RUN := mkdir -p ./.go-pkg-cache bin $(GOMOD_CACHE) && \\\n\tdocker run --rm \\\n\t\t--net=host \\\n\t\t--init \\\n\t\t$(EXTRA_DOCKER_ARGS) \\\n\t\t-e LOCAL_USER_ID=$(LOCAL_USER_ID) \\\n\t\t-e GOCACHE=/go-cache \\\n\t\t$(GOARCH_FLAGS) \\\n\t\t-e GOPATH=/go \\\n\t\t-e OS=$(BUILDOS) \\\n\t\t-e GOOS=$(BUILDOS) \\\n\t\t-e GOFLAGS=$(GOFLAGS) \\\n\t\t-v $(CURDIR):/go/src/github.com/projectcalico/calico:rw \\\n\t\t-v $(CURDIR)/.go-pkg-cache:/go-cache:rw \\\n\t\t-w /go/src/$(PACKAGE_NAME)\n\nclean:\n\t$(MAKE) -C api clean\n\t$(MAKE) -C apiserver clean\n\t$(MAKE) -C app-policy clean\n\t$(MAKE) -C calicoctl clean\n\t$(MAKE) -C cni-plugin clean\n\t$(MAKE) -C confd clean\n\t$(MAKE) -C felix clean\n\t$(MAKE) -C kube-controllers clean\n\t$(MAKE) -C libcalico-go clean\n\t$(MAKE) -C node clean\n\t$(MAKE) -C pod2daemon clean\n\t$(MAKE) -C key-cert-provisioner clean\n\t$(MAKE) -C typha clean\n\t$(MAKE) -C release clean\n\trm -rf ./bin\n\nci-preflight-checks:\n\t$(MAKE) check-dockerfiles\n\t$(MAKE) check-language\n\t$(MAKE) generate\n\t$(MAKE) fix-all\n\t$(MAKE) check-dirty\n\ncheck-dockerfiles:\n\t./hack/check-dockerfiles.sh\n\ncheck-language:\n\t./hack/check-language.sh\n\ngenerate:\n\t$(MAKE) gen-semaphore-yaml\n\t$(MAKE) -C api gen-files\n\t$(MAKE) -C libcalico-go gen-files\n\t$(MAKE) -C felix gen-files\n\t$(MAKE) -C app-policy protobuf\n\t$(MAKE) gen-manifests\n\ngen-manifests: bin/helm\n\tcd ./manifests && \\\n\t\tOPERATOR_VERSION=$(OPERATOR_VERSION) \\\n\t\tCALICO_VERSION=$(CALICO_VERSION) \\\n\t\t./generate.sh\n\n# Get operator CRDs from the operator repo, OPERATOR_BRANCH must be set\nget-operator-crds: var-require-all-OPERATOR_BRANCH\n\t@echo ================================================================\n\t@echo === Pulling new operator CRDs from branch $(OPERATOR_BRANCH) ===\n\t@echo ================================================================\n\tcd ./charts/tigera-operator/crds/ && \\\n\tfor file in operator.tigera.io_*.yaml; do echo \"downloading $$file from operator repo\" && curl -fsSL https://raw.githubusercontent.com/tigera/operator/$(OPERATOR_BRANCH)/pkg/crds/operator/$${file%_crd.yaml}.yaml -o $${file}; done\n\ngen-semaphore-yaml:\n\tcd .semaphore && ./generate-semaphore-yaml.sh\n\n# Build the tigera-operator helm chart.\nchart: bin/tigera-operator-$(GIT_VERSION).tgz\nbin/tigera-operator-$(GIT_VERSION).tgz: bin/helm $(shell find ./charts/tigera-operator -type f)\n\tbin/helm package ./charts/tigera-operator \\\n\t--destination ./bin/ \\\n\t--version $(GIT_VERSION) \\\n\t--app-version $(GIT_VERSION)\n\n# Build all Calico images for the current architecture.\nimage:\n\t$(MAKE) -C pod2daemon image IMAGETAG=$(GIT_VERSION) VALIDARCHES=$(ARCH)\n\t$(MAKE) -C key-cert-provisioner image IMAGETAG=$(GIT_VERSION) VALIDARCHES=$(ARCH)\n\t$(MAKE) -C calicoctl image IMAGETAG=$(GIT_VERSION) VALIDARCHES=$(ARCH)\n\t$(MAKE) -C cni-plugin image IMAGETAG=$(GIT_VERSION) VALIDARCHES=$(ARCH)\n\t$(MAKE) -C apiserver image IMAGETAG=$(GIT_VERSION) VALIDARCHES=$(ARCH)\n\t$(MAKE) -C kube-controllers image IMAGETAG=$(GIT_VERSION) VALIDARCHES=$(ARCH)\n\t$(MAKE) -C app-policy image IMAGETAG=$(GIT_VERSION) VALIDARCHES=$(ARCH)\n\t$(MAKE) -C typha image IMAGETAG=$(GIT_VERSION) VALIDARCHES=$(ARCH)\n\t$(MAKE) -C node image IMAGETAG=$(GIT_VERSION) VALIDARCHES=$(ARCH)\n\n###############################################################################\n# Run local e2e smoke test against the checked-out code\n# using a local kind cluster.\n###############################################################################\nE2E_FOCUS ?= \"sig-network.*Conformance\"\nADMINPOLICY_SUPPORTED_FEATURES ?= \"AdminNetworkPolicy,BaselineAdminNetworkPolicy\"\nADMINPOLICY_UNSUPPORTED_FEATURES ?= \"\"\ne2e-test:\n\t$(MAKE) -C e2e build\n\t$(MAKE) -C node kind-k8st-setup\n\tKUBECONFIG=$(KIND_KUBECONFIG) ./e2e/bin/k8s/e2e.test -ginkgo.focus=$(E2E_FOCUS)\n\tKUBECONFIG=$(KIND_KUBECONFIG) ./e2e/bin/adminpolicy/e2e.test \\\n\t  -exempt-features=$(ADMINPOLICY_UNSUPPORTED_FEATURES) \\\n\t  -supported-features=$(ADMINPOLICY_SUPPORTED_FEATURES)\n\ne2e-test-adminpolicy:\n\t$(MAKE) -C e2e build\n\t$(MAKE) -C node kind-k8st-setup\n\tKUBECONFIG=$(KIND_KUBECONFIG) ./e2e/bin/adminpolicy/e2e.test \\\n\t  -exempt-features=$(ADMINPOLICY_UNSUPPORTED_FEATURES) \\\n\t  -supported-features=$(ADMINPOLICY_SUPPORTED_FEATURES)\n\n###############################################################################\n# Release logic below\n###############################################################################\n# Build the release tool.\nrelease/bin/release: $(shell find ./release -type f -name '*.go')\n\t$(MAKE) -C release\n\n# Install ghr for publishing to github.\nbin/ghr:\n\t$(DOCKER_RUN) -e GOBIN=/go/src/$(PACKAGE_NAME)/bin/ $(CALICO_BUILD) go install github.com/tcnksm/ghr@$(GHR_VERSION)\n\n# Build a release.\nrelease: release/bin/release\n\t@release/bin/release release build\n\n# Publish an already built release.\nrelease-publish: release/bin/release bin/ghr\n\t@release/bin/release release publish\n\n# Create a release branch.\ncreate-release-branch: release/bin/release\n\t@release/bin/release branch cut -git-publish\n\n# Test the release code\nrelease-test:\n\t$(DOCKER_RUN) $(CALICO_BUILD) ginkgo -cover -r release/pkg\n\n# Currently our openstack builds either build *or* build and publish,\n# hence why we have two separate jobs here that do almost the same thing.\nbuild-openstack: bin/yq\n\t$(eval VERSION=$(shell bin/yq '.version' charts/calico/values.yaml))\n\t$(info Building openstack packages for version $(VERSION))\n\t$(MAKE) -C release/packaging release VERSION=$(VERSION)\n\npublish-openstack: bin/yq\n\t$(eval VERSION=$(shell bin/yq '.version' charts/calico/values.yaml))\n\t$(info Publishing openstack packages for version $(VERSION))\n\t$(MAKE) -C release/packaging release-publish VERSION=$(VERSION)\n\n## Kicks semaphore job which syncs github released helm charts with helm index file\n.PHONY: helm-index\nhelm-index:\n\t@echo \"Triggering semaphore workflow to update helm index.\"\n\tSEMAPHORE_PROJECT_ID=30f84ab3-1ea9-4fb0-8459-e877491f3dea \\\n\t\t\t     SEMAPHORE_WORKFLOW_BRANCH=master \\\n\t\t\t     SEMAPHORE_WORKFLOW_FILE=../releases/calico/helmindex/update_helm.yml \\\n\t\t\t     $(MAKE) semaphore-run-workflow\n\n# Creates the tar file used for installing Calico on OpenShift.\nbin/ocp.tgz: manifests/ocp/ bin/yq\n\ttar czvf $@ -C manifests/ ocp\n\n## Generates release notes for the given version.\n.PHONY: release-notes\nrelease-notes:\n\t@$(MAKE) -C release release-notes\n\n## Update the AUTHORS.md file.\nupdate-authors:\nifndef GITHUB_TOKEN\n\t$(error GITHUB_TOKEN must be set)\nendif\n\t@echo \"# Calico authors\" > AUTHORS.md\n\t@echo \"\" >> AUTHORS.md\n\t@echo \"This file is auto-generated based on commit records reported\" >> AUTHORS.md\n\t@echo \"by git for the projectcalico/calico repository. It is ordered alphabetically.\" >> AUTHORS.md\n\t@echo \"\" >> AUTHORS.md\n\t@docker run -ti --rm --net=host \\\n\t\t-v $(REPO_ROOT):/code \\\n\t\t-w /code \\\n\t\t-e GITHUB_TOKEN=$(GITHUB_TOKEN) \\\n\t\tpython:3 \\\n\t\tbash -c '/usr/local/bin/python release/get-contributors.py >> /code/AUTHORS.md'\n\n###############################################################################\n# Post-release validation\n###############################################################################\nPOSTRELEASE_IMAGE=calico/postrelease\nPOSTRELEASE_IMAGE_CREATED=.calico.postrelease.created\n$(POSTRELEASE_IMAGE_CREATED):\n\tcd hack/postrelease && docker build -t $(POSTRELEASE_IMAGE) .\n\ttouch $@\n\npostrelease-checks: $(POSTRELEASE_IMAGE_CREATED)\n\t$(DOCKER_RUN) \\\n\t\t-v /var/run/docker.sock:/var/run/docker.sock \\\n\t\t-e VERSION=$(VERSION) \\\n\t\t-e FLANNEL_VERSION=$(FLANNEL_VERSION) \\\n\t\t-e VPP_VERSION=$(VPP_VERSION) \\\n\t\t-e OPERATOR_VERSION=$(OPERATOR_VERSION) \\\n\t\t$(POSTRELEASE_IMAGE) \\\n\t\tsh -c \"nosetests hack/postrelease -e \"$(EXCLUDE_REGEX)\" -s -v --with-xunit --xunit-file='postrelease-checks.xml' --with-timer $(EXTRA_NOSE_ARGS)\"\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.4072265625,
          "content": "[![Go Report Card](https://goreportcard.com/badge/github.com/projectcalico/calico)](https://goreportcard.com/report/github.com/projectcalico/calico)\n[![ArtifactHub](https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/tigera-operator)](https://artifacthub.io/packages/helm/projectcalico/tigera-operator)\n[![License](https://img.shields.io/badge/license-Apache-blue.svg)](calico/LICENSE)\n[![GoPkg](https://pkg.go.dev/badge/k8s.io/kubernetes.svg)](https://pkg.go.dev/github.com/projectcalico/api)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/6064/badge)](https://bestpractices.coreinfrastructure.org/projects/6064)\n\n<div align=center>\n<h1>Calico</h1>\n<h2>\n<a href=\"https://projectcalico.docs.tigera.io/getting-started/kubernetes/quickstart\">Quickstart</a> |\n<a href=\"https://projectcalico.docs.tigera.io\">Docs</a> |\n<a href=\"CONTRIBUTING.md\">Contribute</a> |\n<a href=\"https://slack.projectcalico.org\">Slack</a> |\n<a href=\"https://github.com/projectcalico/calico/releases\">Releases</a>\n</h2>\n</div>\n\n## 🐾 Welcome to Project Calico!\n\nProject Calico, created and maintained by [Tigera][tigera], is an open-source project with an active development and user community. Calico Open Source has grown to be the most widely adopted solution for container networking and security, powering 8M+ nodes daily across 166 countries.\n\n## 🌟 Why use Calico?\n\n- **Data Plane Choice**: eBPF, standard Linux, Windows, and VPP — versatility in network solutions.\n- **Interoperability**: Works across multiple distros, multiple clouds, bare metal, and VMs.\n- **Optimized Performance**: Engineered for high speed and low CPU usage, maximizing your cluster investments.\n- **Scalable Architecture**: Grows seamlessly with your Kubernetes clusters without sacrificing performance.\n- **Advanced Security**: Get granular access controls and WireGuard encryption.\n- **Kubernetes Networking Policy Support**: Continually defining excellence in Kubernetes network policy standards and support.\n- **Vibrant Contributor Community**: Over 200 contributors from a wide array of global companies.\n- **Flexible networking**: An array of networking tools at your disposal, including BGP, VXLAN, service advertisement, and more.\n\n<div align=center>\n<img src=\"https://www.tigera.io/app/uploads/2024/02/Ecosystem_shrunken_2023.svg\">\n</div>\n\n## 🤝 Join the Calico Community\n\n- [Calico Big Cats][big-cats]: Become an ambassador and share your journey\n- [Community Meetings][community-meetings]: Engage and contribute\n- [Contribute on GitHub][first-issues]: Start with 'good first issues'\n- [Connect on Slack][slack]: Join the conversation with fellow contributors and our developers\n\n## 💡 Contributing to Project Calico\n\n- [Get Started with Project Calico][get-started]\n- [Repositories][repos]\n- [Contribute to our docs][docs-contrib]\n- Documentation: [Dive into our training and resources][resources]\n- [Make Calico better][issues]\n\n## 🛠️ Projects We Maintain\n\n- [Calico Golang API][api]\n- [Calico operator][operator]\n- [VPP dataplane][vpp]\n- [Calico BIRD][bird]\n\n## 📢 Stay Connected\n\n- Subscribe: [Join our newsletter][news]\n- [YouTube channel for updates & tutorials][youtube]\n- [Technical Blog][blog]\n- [Careers][join]: Passionate about open source? Join our team.\n\n[tigera]: https://www.tigera.io/\n[big-cats]: https://www.tigera.io/project-calico/calico-big-cats-ambassador-program/#meet-calico-big-cats\n[community-meetings]: https://calendar.google.com/calendar/u/0/embed?src=tigera.io_uunmavdev5ndovf0hc4frtl0i0@group.calendar.google.com\n[first-issues]: https://github.com/projectcalico/calico/labels/good%20first%20issue\n[slack]: https://slack.projectcalico.org/\n[get-started]: https://docs.tigera.io/calico/latest/about\n[repos]: https://github.com/orgs/projectcalico/repositories\n[docs-contrib]: https://github.com/projectcalico/calico/blob/master/CONTRIBUTING_DOCS.md\n[resources]: https://docs.tigera.io/calico/latest/about/training-resources\n[issues]: https://github.com/projectcalico/calico/issues\n[api]: https://github.com/projectcalico/api\n[operator]: https://github.com/tigera/operator\n[vpp]: https://github.com/projectcalico/vpp-dataplane\n[news]: https://www.tigera.io/project-calico/#:~:text=Join%20Calico%20Open%20Source%20community%20newsletter\n[youtube]: https://www.youtube.com/channel/UCFpTnXDNcBoXI4gqCDmegFA\n[blog]: https://www.tigera.io/blog/?_sft_category=technical-blog\n[join]: https://www.tigera.io/careers/\n[bird]: https://github.com/projectcalico/bird\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.9541015625,
          "content": "# Security Policy\n\n## Supported Versions\n\nThe Tigera team generally support the most recent two minor versions\nof Project Calico on a rolling basis.  Support for older versions is on a \ncase-by-case basis.  For example, at the time of writing, \nCalico v3.26.x and v3.25.x are supported.  When v3.27.0 is released,\nautomatic support for v3.25.x is dropped.\n\n## Reporting a Vulnerability\n\nPlease follow responsible disclosure best practices and [Tigera's Vulnerability Disclosure Policy](https://www.tigera.io/vulnerability-disclosure/) when submitting\nsecurity vulnerabilities.  **Do not** create a GitHub issue or pull \nrequest because those are immediately public. Instead:\n\n*  Email [psirt@projectcalico.org](psirt@projectcalico.org).\n*  Report a private [security advisory](https://github.com/projectcalico/calico/security/advisories)\n  through the GitHub interface.\n\nPlease include as much information as possible, including the\naffected version(s) and steps to reproduce.\n"
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "apiserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "app-policy",
          "type": "tree",
          "content": null
        },
        {
          "name": "calico",
          "type": "tree",
          "content": null
        },
        {
          "name": "calicoctl",
          "type": "tree",
          "content": null
        },
        {
          "name": "charts",
          "type": "tree",
          "content": null
        },
        {
          "name": "cni-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "confd",
          "type": "tree",
          "content": null
        },
        {
          "name": "crypto",
          "type": "tree",
          "content": null
        },
        {
          "name": "devstack",
          "type": "blob",
          "size": 0.025390625,
          "content": "networking-calico/devstack"
        },
        {
          "name": "e2e",
          "type": "tree",
          "content": null
        },
        {
          "name": "felix",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 18.1181640625,
          "content": "module github.com/projectcalico/calico\n\ngo 1.23.2\n\nrequire (\n\tgithub.com/BurntSushi/toml v1.4.0\n\tgithub.com/Masterminds/semver/v3 v3.3.1\n\tgithub.com/Microsoft/hcsshim v0.12.6\n\tgithub.com/apparentlymart/go-cidr v1.1.0\n\tgithub.com/aws/aws-sdk-go-v2 v1.32.6\n\tgithub.com/aws/aws-sdk-go-v2/config v1.28.6\n\tgithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.21\n\tgithub.com/aws/aws-sdk-go-v2/service/ec2 v1.197.0\n\tgithub.com/aws/smithy-go v1.22.1\n\tgithub.com/bits-and-blooms/bitset v1.19.1\n\tgithub.com/buger/jsonparser v1.1.1\n\tgithub.com/container-storage-interface/spec v1.9.0\n\tgithub.com/containernetworking/cni v1.2.3\n\tgithub.com/containernetworking/plugins v1.5.1\n\tgithub.com/coreos/go-semver v0.3.1\n\tgithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc\n\tgithub.com/docker/distribution v2.8.2+incompatible\n\tgithub.com/docker/docker v27.4.0+incompatible\n\tgithub.com/docopt/docopt-go v0.0.0-20180111231733-ee0de3bc6815\n\tgithub.com/envoyproxy/go-control-plane v0.13.1\n\tgithub.com/fsnotify/fsnotify v1.8.0\n\tgithub.com/go-ini/ini v1.67.0\n\tgithub.com/go-logr/logr v1.4.2\n\tgithub.com/gofrs/flock v0.12.1\n\tgithub.com/golang/snappy v0.0.4\n\tgithub.com/google/btree v1.1.3\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/google/go-github/v53 v53.2.0\n\tgithub.com/google/gopacket v1.1.19\n\tgithub.com/google/netstack v0.0.0-20191123085552-55fcc16cd0eb\n\tgithub.com/google/safetext v0.0.0-20230106111101-7156a760e523\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/gruntwork-io/terratest v0.48.0\n\tgithub.com/ishidawataru/sctp v0.0.0-20230406120618-7ff4192f6ff2\n\tgithub.com/joho/godotenv v1.5.1\n\tgithub.com/json-iterator/go v1.1.12\n\tgithub.com/juju/clock v1.1.1\n\tgithub.com/juju/errors v1.0.0\n\tgithub.com/juju/mutex v0.0.0-20180619145857-d21b13acf4bf\n\tgithub.com/kardianos/osext v0.0.0-20190222173326-2bc1f35cddc0\n\tgithub.com/kelseyhightower/envconfig v1.4.0\n\tgithub.com/kelseyhightower/memkv v0.1.1\n\tgithub.com/libp2p/go-reuseport v0.4.0\n\tgithub.com/mcuadros/go-version v0.0.0-20190830083331-035f6764e8d2\n\tgithub.com/mipearson/rfw v0.0.0-20170619235010-6f0a6f3266ba\n\tgithub.com/natefinch/atomic v1.0.1\n\tgithub.com/nmrshll/go-cp v0.0.0-20180115193924-61436d3b7cfa\n\tgithub.com/olekukonko/tablewriter v0.0.5\n\tgithub.com/onsi/ginkgo v1.16.5\n\tgithub.com/onsi/ginkgo/v2 v2.22.0\n\tgithub.com/onsi/gomega v1.36.1\n\tgithub.com/patrickmn/go-cache v2.1.0+incompatible\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/projectcalico/api v0.0.0-00010101000000-000000000000\n\tgithub.com/projectcalico/go-json v0.0.0-20161128004156-6219dc7339ba\n\tgithub.com/projectcalico/go-yaml-wrapper v0.0.0-20191112210931-090425220c54\n\tgithub.com/prometheus/client_golang v1.20.5\n\tgithub.com/prometheus/client_model v0.6.1\n\tgithub.com/prometheus/common v0.61.0\n\tgithub.com/prometheus/procfs v0.15.1\n\tgithub.com/safchain/ethtool v0.5.9\n\tgithub.com/shirou/gopsutil/v4 v4.24.11\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/skeema/knownhosts v1.3.0\n\tgithub.com/slack-go/slack v0.15.0\n\tgithub.com/spf13/cobra v1.8.1\n\tgithub.com/spf13/pflag v1.0.5\n\tgithub.com/spf13/viper v1.19.0\n\tgithub.com/stretchr/testify v1.10.0\n\tgithub.com/tchap/go-patricia/v2 v2.3.1\n\tgithub.com/termie/go-shutil v0.0.0-20140729215957-bcacb06fecae\n\tgithub.com/urfave/cli/v2 v2.27.5\n\tgithub.com/vishvananda/netlink v1.2.1-beta.2.0.20240703200800-b54f85093f4a\n\tgo.etcd.io/etcd/api/v3 v3.5.17\n\tgo.etcd.io/etcd/client/pkg/v3 v3.5.17\n\tgo.etcd.io/etcd/client/v2 v2.305.17\n\tgo.etcd.io/etcd/client/v3 v3.5.17\n\tgolang.org/x/crypto v0.31.0\n\tgolang.org/x/net v0.33.0\n\tgolang.org/x/sync v0.10.0\n\tgolang.org/x/sys v0.28.0\n\tgolang.org/x/text v0.21.0\n\tgolang.org/x/time v0.8.0\n\tgolang.zx2c4.com/wireguard/wgctrl v0.0.0-20200324154536-ceff61240acf\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241104194629-dd2ea8efbc28\n\tgoogle.golang.org/grpc v1.69.0\n\tgoogle.golang.org/protobuf v1.35.2\n\tgopkg.in/go-playground/validator.v9 v9.30.2\n\tgopkg.in/natefinch/lumberjack.v2 v2.2.1\n\tgopkg.in/yaml.v2 v2.4.0\n\tk8s.io/api v0.31.4\n\tk8s.io/apiextensions-apiserver v0.31.4\n\tk8s.io/apimachinery v0.31.4\n\tk8s.io/apiserver v0.31.4\n\tk8s.io/client-go v0.31.4\n\tk8s.io/component-base v0.31.4\n\tk8s.io/klog/v2 v2.130.1\n\tk8s.io/kube-aggregator v0.31.4\n\tk8s.io/kube-openapi v0.0.0-20240430033511-f0e62f92d13f\n\tk8s.io/kubernetes v1.31.4\n\tk8s.io/utils v0.0.0-20240711033017-18e509b52bc8\n\tmodernc.org/memory v1.8.0\n\tsigs.k8s.io/controller-runtime v0.19.3\n\tsigs.k8s.io/kind v0.25.0\n\tsigs.k8s.io/knftables v0.0.18\n\tsigs.k8s.io/network-policy-api v0.1.5\n\tsigs.k8s.io/yaml v1.4.0\n)\n\nrequire (\n\tfilippo.io/edwards25519 v1.1.0 // indirect\n\tgithub.com/JeffAshton/win_pdh v0.0.0-20161109143554-76bb4ee9f0ab // indirect\n\tgithub.com/Microsoft/go-winio v0.6.2 // indirect\n\tgithub.com/NYTimes/gziphandler v1.1.1 // indirect\n\tgithub.com/ProtonMail/go-crypto v0.0.0-20230217124315-7d5c6f04bbb8 // indirect\n\tgithub.com/alessio/shellescape v1.4.2 // indirect\n\tgithub.com/alexflint/go-filemutex v1.3.0 // indirect\n\tgithub.com/antlr4-go/antlr/v4 v4.13.0 // indirect\n\tgithub.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e // indirect\n\tgithub.com/asaskevich/govalidator v0.0.0-20190424111038-f61b66f89f4a // indirect\n\tgithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.6.7 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/credentials v1.17.47 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/feature/s3/manager v1.17.41 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.25 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.25 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/ini v1.8.1 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/v4a v1.3.24 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/acm v1.30.6 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/autoscaling v1.51.0 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/cloudwatchlogs v1.44.0 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/dynamodb v1.37.1 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/ecr v1.36.6 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/ecs v1.52.0 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/iam v1.38.1 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.1 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/checksum v1.4.5 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/endpoint-discovery v1.10.5 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.6 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.18.5 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/kms v1.37.6 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/lambda v1.69.0 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/rds v1.91.0 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/route53 v1.46.2 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/s3 v1.69.0 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/secretsmanager v1.34.6 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sns v1.33.6 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sqs v1.37.1 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/ssm v1.56.0 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sso v1.24.7 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.28.6 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sts v1.33.2 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/blang/semver/v4 v4.0.0 // indirect\n\tgithub.com/boombuler/barcode v1.0.1 // indirect\n\tgithub.com/cenkalti/backoff/v4 v4.3.0 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/checkpoint-restore/go-criu/v5 v5.3.0 // indirect\n\tgithub.com/cilium/ebpf v0.11.0 // indirect\n\tgithub.com/cloudflare/circl v1.3.9 // indirect\n\tgithub.com/cncf/xds/go v0.0.0-20240905190251-b4127c9b8d78 // indirect\n\tgithub.com/containerd/cgroups v1.1.0 // indirect\n\tgithub.com/containerd/cgroups/v3 v3.0.3 // indirect\n\tgithub.com/containerd/console v1.0.4 // indirect\n\tgithub.com/containerd/errdefs v0.1.0 // indirect\n\tgithub.com/containerd/log v0.1.0 // indirect\n\tgithub.com/containerd/ttrpc v1.2.5 // indirect\n\tgithub.com/coreos/go-iptables v0.7.0 // indirect\n\tgithub.com/coreos/go-systemd/v22 v22.5.0 // indirect\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.5 // indirect\n\tgithub.com/cyphar/filepath-securejoin v0.2.4 // indirect\n\tgithub.com/distribution/reference v0.6.0 // indirect\n\tgithub.com/docker/go-connections v0.5.0 // indirect\n\tgithub.com/docker/go-units v0.5.0 // indirect\n\tgithub.com/ebitengine/purego v0.8.1 // indirect\n\tgithub.com/emicklei/go-restful/v3 v3.11.0 // indirect\n\tgithub.com/envoyproxy/protoc-gen-validate v1.1.0 // indirect\n\tgithub.com/euank/go-kmsg-parser v2.0.0+incompatible // indirect\n\tgithub.com/evanphx/json-patch/v5 v5.9.0 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/fxamacker/cbor/v2 v2.7.0 // indirect\n\tgithub.com/ghodss/yaml v1.0.0 // indirect\n\tgithub.com/go-errors/errors v1.4.2 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/go-ole/go-ole v1.2.6 // indirect\n\tgithub.com/go-openapi/jsonpointer v0.19.6 // indirect\n\tgithub.com/go-openapi/jsonreference v0.20.2 // indirect\n\tgithub.com/go-openapi/swag v0.22.4 // indirect\n\tgithub.com/go-playground/locales v0.12.1 // indirect\n\tgithub.com/go-playground/universal-translator v0.0.0-20170327191703-71201497bace // indirect\n\tgithub.com/go-sql-driver/mysql v1.8.1 // indirect\n\tgithub.com/go-task/slim-sprig/v3 v3.0.0 // indirect\n\tgithub.com/godbus/dbus/v5 v5.1.0 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/golang/mock v1.6.0 // indirect\n\tgithub.com/golang/protobuf v1.5.4 // indirect\n\tgithub.com/gonvenience/bunt v1.3.5 // indirect\n\tgithub.com/gonvenience/neat v1.3.12 // indirect\n\tgithub.com/gonvenience/term v1.0.2 // indirect\n\tgithub.com/gonvenience/text v1.0.7 // indirect\n\tgithub.com/gonvenience/wrap v1.1.2 // indirect\n\tgithub.com/gonvenience/ytbx v1.4.4 // indirect\n\tgithub.com/google/cadvisor v0.49.0 // indirect\n\tgithub.com/google/cel-go v0.20.1 // indirect\n\tgithub.com/google/gnostic-models v0.6.8 // indirect\n\tgithub.com/google/go-querystring v1.1.0 // indirect\n\tgithub.com/google/gofuzz v1.2.0 // indirect\n\tgithub.com/google/pprof v0.0.0-20241029153458-d1b30febd7db // indirect\n\tgithub.com/gorilla/websocket v1.5.3 // indirect\n\tgithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0 // indirect\n\tgithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 // indirect\n\tgithub.com/gruntwork-io/go-commons v0.8.0 // indirect\n\tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n\tgithub.com/hashicorp/go-multierror v1.1.1 // indirect\n\tgithub.com/hashicorp/hcl v1.0.0 // indirect\n\tgithub.com/homeport/dyff v1.6.0 // indirect\n\tgithub.com/imdario/mergo v0.3.12 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/jackc/pgpassfile v1.0.0 // indirect\n\tgithub.com/jackc/pgservicefile v0.0.0-20240606120523-5a60cdf6a761 // indirect\n\tgithub.com/jackc/pgx/v5 v5.7.1 // indirect\n\tgithub.com/jackc/puddle/v2 v2.2.2 // indirect\n\tgithub.com/jmespath/go-jmespath v0.4.0 // indirect\n\tgithub.com/josharian/intern v1.0.0 // indirect\n\tgithub.com/karrick/godirwalk v1.17.0 // indirect\n\tgithub.com/klauspost/compress v1.17.11 // indirect\n\tgithub.com/kylelemons/godebug v1.1.0 // indirect\n\tgithub.com/leodido/go-urn v0.0.0-20181204092800-a67a23e1c1af // indirect\n\tgithub.com/libopenstorage/openstorage v1.0.0 // indirect\n\tgithub.com/lithammer/dedent v1.1.0 // indirect\n\tgithub.com/lucasb-eyer/go-colorful v1.2.0 // indirect\n\tgithub.com/lufia/plan9stats v0.0.0-20211012122336-39d0f177ccd0 // indirect\n\tgithub.com/magiconair/properties v1.8.7 // indirect\n\tgithub.com/mailru/easyjson v0.7.7 // indirect\n\tgithub.com/mattn/go-ciede2000 v0.0.0-20170301095244-782e8c62fec3 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.9 // indirect\n\tgithub.com/mattn/go-zglob v0.0.2-0.20190814121620-e3c945676326 // indirect\n\tgithub.com/mdlayher/genetlink v1.0.0 // indirect\n\tgithub.com/mdlayher/netlink v1.1.0 // indirect\n\tgithub.com/mistifyio/go-zfs v2.1.2-0.20190413222219-f784269be439+incompatible // indirect\n\tgithub.com/mitchellh/go-homedir v1.1.0 // indirect\n\tgithub.com/mitchellh/go-ps v1.0.0 // indirect\n\tgithub.com/mitchellh/hashstructure v1.1.0 // indirect\n\tgithub.com/mitchellh/mapstructure v1.5.0 // indirect\n\tgithub.com/moby/docker-image-spec v1.3.1 // indirect\n\tgithub.com/moby/spdystream v0.4.0 // indirect\n\tgithub.com/moby/sys/mountinfo v0.7.1 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/mohae/deepcopy v0.0.0-20170603005431-491d3605edfb // indirect\n\tgithub.com/mrunalp/fileutils v0.5.1 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/mxk/go-flowrate v0.0.0-20140419014527-cca7078d478f // indirect\n\tgithub.com/nxadm/tail v1.4.8 // indirect\n\tgithub.com/opencontainers/go-digest v1.0.0 // indirect\n\tgithub.com/opencontainers/image-spec v1.1.0 // indirect\n\tgithub.com/opencontainers/runc v1.1.14 // indirect\n\tgithub.com/opencontainers/runtime-spec v1.2.0 // indirect\n\tgithub.com/opencontainers/selinux v1.11.0 // indirect\n\tgithub.com/pelletier/go-toml v1.9.5 // indirect\n\tgithub.com/pelletier/go-toml/v2 v2.2.2 // indirect\n\tgithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 // indirect\n\tgithub.com/power-devops/perfstat v0.0.0-20210106213030-5aafc221ea8c // indirect\n\tgithub.com/pquerna/otp v1.4.0 // indirect\n\tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n\tgithub.com/sagikazarmark/locafero v0.4.0 // indirect\n\tgithub.com/sagikazarmark/slog-shim v0.1.0 // indirect\n\tgithub.com/seccomp/libseccomp-golang v0.10.0 // indirect\n\tgithub.com/sergi/go-diff v1.3.1 // indirect\n\tgithub.com/sourcegraph/conc v0.3.0 // indirect\n\tgithub.com/spf13/afero v1.11.0 // indirect\n\tgithub.com/spf13/cast v1.6.0 // indirect\n\tgithub.com/stoewer/go-strcase v1.2.0 // indirect\n\tgithub.com/stretchr/objx v0.5.2 // indirect\n\tgithub.com/subosito/gotenv v1.6.0 // indirect\n\tgithub.com/syndtr/gocapability v0.0.0-20200815063812-42c35b437635 // indirect\n\tgithub.com/texttheater/golang-levenshtein v1.0.1 // indirect\n\tgithub.com/tklauser/go-sysconf v0.3.12 // indirect\n\tgithub.com/tklauser/numcpus v0.6.1 // indirect\n\tgithub.com/urfave/cli v1.22.16 // indirect\n\tgithub.com/virtuald/go-ordered-json v0.0.0-20170621173500-b18e6e673d74 // indirect\n\tgithub.com/vishvananda/netns v0.0.4 // indirect\n\tgithub.com/x448/float16 v0.8.4 // indirect\n\tgithub.com/xrash/smetrics v0.0.0-20240521201337-686a1a2994c1 // indirect\n\tgithub.com/yusufpapurcu/wmi v1.2.4 // indirect\n\tgo.opencensus.io v0.24.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/github.com/emicklei/go-restful/otelrestful v0.46.1 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.54.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0 // indirect\n\tgo.opentelemetry.io/otel v1.31.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.27.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.21.0 // indirect\n\tgo.opentelemetry.io/otel/metric v1.31.0 // indirect\n\tgo.opentelemetry.io/otel/sdk v1.31.0 // indirect\n\tgo.opentelemetry.io/otel/trace v1.31.0 // indirect\n\tgo.opentelemetry.io/proto/otlp v1.3.1 // indirect\n\tgo.uber.org/multierr v1.11.0 // indirect\n\tgo.uber.org/zap v1.26.0 // indirect\n\tgolang.org/x/exp v0.0.0-20240719175910-8a7402abbf56 // indirect\n\tgolang.org/x/oauth2 v0.24.0 // indirect\n\tgolang.org/x/term v0.27.0 // indirect\n\tgolang.org/x/tools v0.26.0 // indirect\n\tgolang.zx2c4.com/wireguard v0.0.20200121 // indirect\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20241104194629-dd2ea8efbc28 // indirect\n\tgopkg.in/evanphx/json-patch.v4 v4.12.0 // indirect\n\tgopkg.in/go-playground/assert.v1 v1.2.1 // indirect\n\tgopkg.in/inf.v0 v0.9.1 // indirect\n\tgopkg.in/ini.v1 v1.67.0 // indirect\n\tgopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n\tk8s.io/cloud-provider v0.31.4 // indirect\n\tk8s.io/component-helpers v0.31.4 // indirect\n\tk8s.io/controller-manager v0.31.4 // indirect\n\tk8s.io/cri-api v0.31.4 // indirect\n\tk8s.io/cri-client v0.31.4 // indirect\n\tk8s.io/csi-translation-lib v0.31.4 // indirect\n\tk8s.io/dynamic-resource-allocation v0.31.4 // indirect\n\tk8s.io/kms v0.31.4 // indirect\n\tk8s.io/kube-scheduler v0.31.4 // indirect\n\tk8s.io/kubectl v0.31.4 // indirect\n\tk8s.io/kubelet v0.31.4 // indirect\n\tk8s.io/mount-utils v0.31.4 // indirect\n\tk8s.io/pod-security-admission v0.31.4 // indirect\n\tsigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.30.3 // indirect\n\tsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd // indirect\n\tsigs.k8s.io/structured-merge-diff/v4 v4.4.1 // indirect\n)\n\nreplace (\n\tgithub.com/projectcalico/api => ./api\n\n\tk8s.io/api => k8s.io/api v0.31.4\n\tk8s.io/apiextensions-apiserver => k8s.io/apiextensions-apiserver v0.31.4\n\tk8s.io/apimachinery => k8s.io/apimachinery v0.31.4\n\tk8s.io/apiserver => k8s.io/apiserver v0.31.4\n\tk8s.io/cli-runtime => k8s.io/cli-runtime v0.31.4\n\tk8s.io/client-go => k8s.io/client-go v0.31.4\n\tk8s.io/cloud-provider => k8s.io/cloud-provider v0.31.4\n\tk8s.io/cluster-bootstrap => k8s.io/cluster-bootstrap v0.31.4\n\tk8s.io/code-generator => k8s.io/code-generator v0.31.4\n\tk8s.io/component-base => k8s.io/component-base v0.31.4\n\tk8s.io/component-helpers => k8s.io/component-helpers v0.31.4\n\tk8s.io/controller-manager => k8s.io/controller-manager v0.31.4\n\tk8s.io/cri-api => k8s.io/cri-api v0.31.4\n\tk8s.io/csi-translation-lib => k8s.io/csi-translation-lib v0.31.4\n\tk8s.io/endpointslice => k8s.io/endpointslice v0.31.4\n\tk8s.io/kube-aggregator => k8s.io/kube-aggregator v0.31.4\n\tk8s.io/kube-controller-manager => k8s.io/kube-controller-manager v0.31.4\n\tk8s.io/kube-proxy => k8s.io/kube-proxy v0.31.4\n\tk8s.io/kube-scheduler => k8s.io/kube-scheduler v0.31.4\n\tk8s.io/kubectl => k8s.io/kubectl v0.31.4\n\tk8s.io/kubelet => k8s.io/kubelet v0.31.4\n\n\t// Need replacements for all the k8s subsidiary projects that are pulled in indirectly because\n\t// the kubernets repo pulls them in via a replacement to its own vendored copies, which doesn't work for\n\t// transient imports.\n\tk8s.io/kubernetes => k8s.io/kubernetes v1.31.4\n\tk8s.io/metrics => k8s.io/metrics v0.31.4\n\tk8s.io/mount-utils => k8s.io/mount-utils v0.31.4\n\tk8s.io/pod-security-admission => k8s.io/pod-security-admission v0.31.4\n\tk8s.io/sample-apiserver => k8s.io/sample-apiserver v0.31.4\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 92.6630859375,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\nfilippo.io/edwards25519 v1.1.0 h1:FNf4tywRC1HmFuKW5xopWpigGjJKiJSV0Cqo0cJWDaA=\nfilippo.io/edwards25519 v1.1.0/go.mod h1:BxyFTGdWcka3PhytdK4V28tE5sGfRvvvRV7EaN4VDT4=\ngithub.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161 h1:L/gRVlceqvL25UVaW/CKtUDjefjrs0SPonmDGUVOYP0=\ngithub.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/toml v1.4.0 h1:kuoIxZQy2WRRk1pttg9asf+WVv6tWQuBNVmK8+nqPr0=\ngithub.com/BurntSushi/toml v1.4.0/go.mod h1:ukJfTF/6rtPPRCnwkur4qwRxa8vTRFBF0uk2lLoLwho=\ngithub.com/JeffAshton/win_pdh v0.0.0-20161109143554-76bb4ee9f0ab h1:UKkYhof1njT1/xq4SEg5z+VpTgjmNeHwPGRQl7takDI=\ngithub.com/JeffAshton/win_pdh v0.0.0-20161109143554-76bb4ee9f0ab/go.mod h1:3VYc5hodBMJ5+l/7J4xAyMeuM2PNuepvHlGs8yilUCA=\ngithub.com/MakeNowJust/heredoc v1.0.0 h1:cXCdzVdstXyiTqTvfqk9SDHpKNjxuom+DOlyEeQ4pzQ=\ngithub.com/MakeNowJust/heredoc v1.0.0/go.mod h1:mG5amYoWBHf8vpLOuehzbGGw0EHxpZZ6lCpQ4fNJ8LE=\ngithub.com/Masterminds/semver/v3 v3.3.1 h1:QtNSWtVZ3nBfk8mAOu/B6v7FMJ+NHTIgUPi7rj+4nv4=\ngithub.com/Masterminds/semver/v3 v3.3.1/go.mod h1:4V+yj/TJE1HU9XfppCwVMZq3I84lprf4nC11bSS5beM=\ngithub.com/Microsoft/go-winio v0.6.2 h1:F2VQgta7ecxGYO8k3ZZz3RS8fVIXVxONVUPlNERoyfY=\ngithub.com/Microsoft/go-winio v0.6.2/go.mod h1:yd8OoFMLzJbo9gZq8j5qaps8bJ9aShtEA8Ipt1oGCvU=\ngithub.com/Microsoft/hcsshim v0.12.6 h1:qEnZjoHXv+4/s0LmKZWE0/AiZmMWEIkFfWBSf1a0wlU=\ngithub.com/Microsoft/hcsshim v0.12.6/go.mod h1:ZABCLVcvLMjIkzr9rUGcQ1QA0p0P3Ps+d3N1g2DsFfk=\ngithub.com/NYTimes/gziphandler v1.1.1 h1:ZUDjpQae29j0ryrS0u/B8HZfJBtBQHjqw2rQ2cqUQ3I=\ngithub.com/NYTimes/gziphandler v1.1.1/go.mod h1:n/CVRwUEOgIxrgPvAQhUUr9oeUtvrhMomdKFjzJNB0c=\ngithub.com/ProtonMail/go-crypto v0.0.0-20230217124315-7d5c6f04bbb8 h1:wPbRQzjjwFc0ih8puEVAOFGELsn1zoIIYdxvML7mDxA=\ngithub.com/ProtonMail/go-crypto v0.0.0-20230217124315-7d5c6f04bbb8/go.mod h1:I0gYDMZ6Z5GRU7l58bNFSkPTFN6Yl12dsUlAZ8xy98g=\ngithub.com/alessio/shellescape v1.4.2 h1:MHPfaU+ddJ0/bYWpgIeUnQUqKrlJ1S7BfEYPM4uEoM0=\ngithub.com/alessio/shellescape v1.4.2/go.mod h1:PZAiSCk0LJaZkiCSkPv8qIobYglO3FPpyFjDCtHLS30=\ngithub.com/alexflint/go-filemutex v1.3.0 h1:LgE+nTUWnQCyRKbpoceKZsPQbs84LivvgwUymZXdOcM=\ngithub.com/alexflint/go-filemutex v1.3.0/go.mod h1:U0+VA/i30mGBlLCrFPGtTe9y6wGQfNAWPBTekHQ+c8A=\ngithub.com/antlr4-go/antlr/v4 v4.13.0 h1:lxCg3LAv+EUK6t1i0y1V6/SLeUi0eKEKdhQAlS8TVTI=\ngithub.com/antlr4-go/antlr/v4 v4.13.0/go.mod h1:pfChB/xh/Unjila75QW7+VU4TSnWnnk9UTnmpPaOR2g=\ngithub.com/apparentlymart/go-cidr v1.1.0 h1:2mAhrMoF+nhXqxTzSZMUzDHkLjmIHC+Zzn4tdgBZjnU=\ngithub.com/apparentlymart/go-cidr v1.1.0/go.mod h1:EBcsNrHc3zQeuaeCeCtQruQm+n9/YjEn/vI25Lg7Gwc=\ngithub.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e h1:QEF07wC0T1rKkctt1RINW/+RMTVmiwxETico2l3gxJA=\ngithub.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e/go.mod h1:3U/XgcO3hCbHZ8TKRvWD2dDTCfh9M9ya+I9JpbB7O8o=\ngithub.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5 h1:0CwZNZbxp69SHPdPJAN/hZIm0C4OItdklCFmMRWYpio=\ngithub.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5/go.mod h1:wHh0iHkYZB8zMSxRWpUBQtwG5a7fFgvEO+odwuTv2gs=\ngithub.com/asaskevich/govalidator v0.0.0-20190424111038-f61b66f89f4a h1:idn718Q4B6AGu/h5Sxe66HYVdqdGu2l9Iebqhi/AEoA=\ngithub.com/asaskevich/govalidator v0.0.0-20190424111038-f61b66f89f4a/go.mod h1:lB+ZfQJz7igIIfQNfa7Ml4HSf2uFQQRzpGGRXenZAgY=\ngithub.com/aws/aws-sdk-go-v2 v1.32.6 h1:7BokKRgRPuGmKkFMhEg/jSul+tB9VvXhcViILtfG8b4=\ngithub.com/aws/aws-sdk-go-v2 v1.32.6/go.mod h1:P5WJBrYqqbWVaOxgH0X/FYYD47/nooaPOZPlQdmiN2U=\ngithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.6.7 h1:lL7IfaFzngfx0ZwUGOZdsFFnQ5uLvR0hWqqhyE7Q9M8=\ngithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.6.7/go.mod h1:QraP0UcVlQJsmHfioCrveWOC1nbiWUl3ej08h4mXWoc=\ngithub.com/aws/aws-sdk-go-v2/config v1.28.6 h1:D89IKtGrs/I3QXOLNTH93NJYtDhm8SYa9Q5CsPShmyo=\ngithub.com/aws/aws-sdk-go-v2/config v1.28.6/go.mod h1:GDzxJ5wyyFSCoLkS+UhGB0dArhb9mI+Co4dHtoTxbko=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.17.47 h1:48bA+3/fCdi2yAwVt+3COvmatZ6jUDNkDTIsqDiMUdw=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.17.47/go.mod h1:+KdckOejLW3Ks3b0E3b5rHsr2f9yuORBum0WPnE5o5w=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.21 h1:AmoU1pziydclFT/xRV+xXE/Vb8fttJCLRPv8oAkprc0=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.21/go.mod h1:AjUdLYe4Tgs6kpH4Bv7uMZo7pottoyHMn4eTcIcneaY=\ngithub.com/aws/aws-sdk-go-v2/feature/s3/manager v1.17.41 h1:hqcxMc2g/MwwnRMod9n6Bd+t+9Nf7d5qRg7RaXKPd6o=\ngithub.com/aws/aws-sdk-go-v2/feature/s3/manager v1.17.41/go.mod h1:d1eH0VrttvPmrCraU68LOyNdu26zFxQFjrVSb5vdhog=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.25 h1:s/fF4+yDQDoElYhfIVvSNyeCydfbuTKzhxSXDXCPasU=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.25/go.mod h1:IgPfDv5jqFIzQSNbUEMoitNooSMXjRSDkhXv8jiROvU=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.25 h1:ZntTCl5EsYnhN/IygQEUugpdwbhdkom9uHcbCftiGgA=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.25/go.mod h1:DBdPrgeocww+CSl1C8cEV8PN1mHMBhuCDLpXezyvWkE=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.8.1 h1:VaRN3TlFdd6KxX1x3ILT5ynH6HvKgqdiXoTxAF4HQcQ=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.8.1/go.mod h1:FbtygfRFze9usAadmnGJNc8KsP346kEe+y2/oyhGAGc=\ngithub.com/aws/aws-sdk-go-v2/internal/v4a v1.3.24 h1:JX70yGKLj25+lMC5Yyh8wBtvB01GDilyRuJvXJ4piD0=\ngithub.com/aws/aws-sdk-go-v2/internal/v4a v1.3.24/go.mod h1:+Ln60j9SUTD0LEwnhEB0Xhg61DHqplBrbZpLgyjoEHg=\ngithub.com/aws/aws-sdk-go-v2/service/acm v1.30.6 h1:fDg0RlN30Xf/yYzEUL/WXqhmgFsjVb/I3230oCfyI5w=\ngithub.com/aws/aws-sdk-go-v2/service/acm v1.30.6/go.mod h1:zRR6jE3v/TcbfO8C2P+H0Z+kShiKKVaVyoIl8NQRjyg=\ngithub.com/aws/aws-sdk-go-v2/service/autoscaling v1.51.0 h1:1KzQVZi7OTixxaVJ8fWaJAUBjme+iQ3zBOCZhE4RgxQ=\ngithub.com/aws/aws-sdk-go-v2/service/autoscaling v1.51.0/go.mod h1:I1+/2m+IhnK5qEbhS3CrzjeiVloo9sItE/2K+so0fkU=\ngithub.com/aws/aws-sdk-go-v2/service/cloudwatchlogs v1.44.0 h1:OREVd94+oXW5a+3SSUAo4K0L5ci8cucCLu+PSiek8OU=\ngithub.com/aws/aws-sdk-go-v2/service/cloudwatchlogs v1.44.0/go.mod h1:Qbr4yfpNqVNl69l/GEDK+8wxLf/vHi0ChoiSDzD7thU=\ngithub.com/aws/aws-sdk-go-v2/service/dynamodb v1.37.1 h1:vucMirlM6D+RDU8ncKaSZ/5dGrXNajozVwpmWNPn2gQ=\ngithub.com/aws/aws-sdk-go-v2/service/dynamodb v1.37.1/go.mod h1:fceORfs010mNxZbQhfqUjUeHlTwANmIT4mvHamuUaUg=\ngithub.com/aws/aws-sdk-go-v2/service/ec2 v1.197.0 h1:Bo20e0LV3Qbkr7yZVGuOxvWbf9Vf3nqss5WyerHr6Ic=\ngithub.com/aws/aws-sdk-go-v2/service/ec2 v1.197.0/go.mod h1:00zqVNJFK6UASrTnuvjJHJuaqUdkVz5tW8Ip+VhzuNg=\ngithub.com/aws/aws-sdk-go-v2/service/ecr v1.36.6 h1:zg+3FGHA0PBs0KM25qE/rOf2o5zsjNa1g/Qq83+SDI0=\ngithub.com/aws/aws-sdk-go-v2/service/ecr v1.36.6/go.mod h1:ZSq54Z9SIsOTf1Efwgw1msilSs4XVEfVQiP9nYVnKpM=\ngithub.com/aws/aws-sdk-go-v2/service/ecs v1.52.0 h1:7/vgFWplkusJN/m+3QOa+W9FNRqa8ujMPNmdufRaJpg=\ngithub.com/aws/aws-sdk-go-v2/service/ecs v1.52.0/go.mod h1:dPTOvmjJQ1T7Q+2+Xs2KSPrMvx+p0rpyV+HsQVnUK4o=\ngithub.com/aws/aws-sdk-go-v2/service/iam v1.38.1 h1:hfkzDZHBp9jAT4zcd5mtqckpU4E3Ax0LQaEWWk1VgN8=\ngithub.com/aws/aws-sdk-go-v2/service/iam v1.38.1/go.mod h1:u36ahDtZcQHGmVm/r+0L1sfKX4fzLEMdCqiKRKkUMVM=\ngithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.1 h1:iXtILhvDxB6kPvEXgsDhGaZCSC6LQET5ZHSdJozeI0Y=\ngithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.1/go.mod h1:9nu0fVANtYiAePIBh2/pFUSwtJ402hLnp854CNoDOeE=\ngithub.com/aws/aws-sdk-go-v2/service/internal/checksum v1.4.5 h1:gvZOjQKPxFXy1ft3QnEyXmT+IqneM9QAUWlM3r0mfqw=\ngithub.com/aws/aws-sdk-go-v2/service/internal/checksum v1.4.5/go.mod h1:DLWnfvIcm9IET/mmjdxeXbBKmTCm0ZB8p1za9BVteM8=\ngithub.com/aws/aws-sdk-go-v2/service/internal/endpoint-discovery v1.10.5 h1:3Y457U2eGukmjYjeHG6kanZpDzJADa2m0ADqnuePYVQ=\ngithub.com/aws/aws-sdk-go-v2/service/internal/endpoint-discovery v1.10.5/go.mod h1:CfwEHGkTjYZpkQ/5PvcbEtT7AJlG68KkEvmtwU8z3/U=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.6 h1:50+XsN70RS7dwJ2CkVNXzj7U2L1HKP8nqTd3XWEXBN4=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.6/go.mod h1:WqgLmwY7so32kG01zD8CPTJWVWM+TzJoOVHwTg4aPug=\ngithub.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.18.5 h1:P1doBzv5VEg1ONxnJss1Kh5ZG/ewoIE4MQtKKc6Crgg=\ngithub.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.18.5/go.mod h1:NOP+euMW7W3Ukt28tAxPuoWao4rhhqJD3QEBk7oCg7w=\ngithub.com/aws/aws-sdk-go-v2/service/kms v1.37.6 h1:CZImQdb1QbU9sGgJ9IswhVkxAcjkkD1eQTMA1KHWk+E=\ngithub.com/aws/aws-sdk-go-v2/service/kms v1.37.6/go.mod h1:YJDdlK0zsyxVBxGU48AR/Mi8DMrGdc1E3Yij4fNrONA=\ngithub.com/aws/aws-sdk-go-v2/service/lambda v1.69.0 h1:BXt75frE/FYtAmEDBJRBa2HexOw+oAZWZl6QknZEFgg=\ngithub.com/aws/aws-sdk-go-v2/service/lambda v1.69.0/go.mod h1:guz2K3x4FKSdDaoeB+TPVgJNU9oj2gftbp5cR8ela1A=\ngithub.com/aws/aws-sdk-go-v2/service/rds v1.91.0 h1:eqHz3Uih+gb0vLE5Cc4Xf733vOxsxDp6GFUUVQU4d7w=\ngithub.com/aws/aws-sdk-go-v2/service/rds v1.91.0/go.mod h1:h2jc7IleH3xHY7y+h8FH7WAZcz3IVLOB6/jXotIQ/qU=\ngithub.com/aws/aws-sdk-go-v2/service/route53 v1.46.2 h1:wmt05tPp/CaRZpPV5B4SaJ5TwkHKom07/BzHoLdkY1o=\ngithub.com/aws/aws-sdk-go-v2/service/route53 v1.46.2/go.mod h1:d+K9HESMpGb1EU9/UmmpInbGIUcAkwmcY6ZO/A3zZsw=\ngithub.com/aws/aws-sdk-go-v2/service/s3 v1.69.0 h1:Q2ax8S21clKOnHhhr933xm3JxdJebql+R7aNo7p7GBQ=\ngithub.com/aws/aws-sdk-go-v2/service/s3 v1.69.0/go.mod h1:ralv4XawHjEMaHOWnTFushl0WRqim/gQWesAMF6hTow=\ngithub.com/aws/aws-sdk-go-v2/service/secretsmanager v1.34.6 h1:1KDMKvOKNrpD667ORbZ/+4OgvUoaok1gg/MLzrHF9fw=\ngithub.com/aws/aws-sdk-go-v2/service/secretsmanager v1.34.6/go.mod h1:DmtyfCfONhOyVAJ6ZMTrDSFIeyCBlEO93Qkfhxwbxu0=\ngithub.com/aws/aws-sdk-go-v2/service/sns v1.33.6 h1:lEUtRHICiXsd7VRwRjXaY7MApT2X4Ue0Mrwe6XbyBro=\ngithub.com/aws/aws-sdk-go-v2/service/sns v1.33.6/go.mod h1:SODr0Lu3lFdT0SGsGX1TzFTapwveBrT5wztVoYtppm8=\ngithub.com/aws/aws-sdk-go-v2/service/sqs v1.37.1 h1:39WvSrVq9DD6UHkD+fx5x19P5KpRQfNdtgReDVNbelc=\ngithub.com/aws/aws-sdk-go-v2/service/sqs v1.37.1/go.mod h1:3gwPzC9LER/BTQdQZ3r6dUktb1rSjABF1D3Sr6nS7VU=\ngithub.com/aws/aws-sdk-go-v2/service/ssm v1.56.0 h1:mADKqoZaodipGgiZfuAjtlcr4IVBtXPZKVjkzUZCCYM=\ngithub.com/aws/aws-sdk-go-v2/service/ssm v1.56.0/go.mod h1:l9qF25TzH95FhcIak6e4vt79KE4I7M2Nf59eMUVjj6c=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.24.7 h1:rLnYAfXQ3YAccocshIH5mzNNwZBkBo+bP6EhIxak6Hw=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.24.7/go.mod h1:ZHtuQJ6t9A/+YDuxOLnbryAmITtr8UysSny3qcyvJTc=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.28.6 h1:JnhTZR3PiYDNKlXy50/pNeix9aGMo6lLpXwJ1mw8MD4=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.28.6/go.mod h1:URronUEGfXZN1VpdktPSD1EkAL9mfrV+2F4sjH38qOY=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.33.2 h1:s4074ZO1Hk8qv65GqNXqDjmkf4HSQqJukaLuuW0TpDA=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.33.2/go.mod h1:mVggCnIWoM09jP71Wh+ea7+5gAp53q+49wDFs1SW5z8=\ngithub.com/aws/smithy-go v1.22.1 h1:/HPHZQ0g7f4eUeK6HKglFz8uwVfZKgoI25rb/J+dnro=\ngithub.com/aws/smithy-go v1.22.1/go.mod h1:irrKGvNn1InZwb2d7fkIRNucdfwR8R+Ts3wxYa/cJHg=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/bgentry/speakeasy v0.1.0/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=\ngithub.com/bits-and-blooms/bitset v1.19.1 h1:mv2yVhy96D2CuskLPXnc58oJNMs5PCWjAZuyYU0p12M=\ngithub.com/bits-and-blooms/bitset v1.19.1/go.mod h1:7hO7Gc7Pp1vODcmWvKMRA9BNmbv6a/7QIWpPxHddWR8=\ngithub.com/blang/semver/v4 v4.0.0 h1:1PFHFE6yCCTv8C1TeyNNarDzntLi7wMI5i/pzqYIsAM=\ngithub.com/blang/semver/v4 v4.0.0/go.mod h1:IbckMUScFkM3pff0VJDNKRiT6TG/YpiHIM2yvyW5YoQ=\ngithub.com/boombuler/barcode v1.0.1-0.20190219062509-6c824513bacc/go.mod h1:paBWMcWSl3LHKBqUq+rly7CNSldXjb2rDl3JlRe0mD8=\ngithub.com/boombuler/barcode v1.0.1 h1:NDBbPmhS+EqABEs5Kg3n/5ZNjy73Pz7SIV+KCeqyXcs=\ngithub.com/boombuler/barcode v1.0.1/go.mod h1:paBWMcWSl3LHKBqUq+rly7CNSldXjb2rDl3JlRe0mD8=\ngithub.com/buger/jsonparser v1.1.1 h1:2PnMjfWD7wBILjqQbt530v576A/cAbQvEW9gGIpYMUs=\ngithub.com/buger/jsonparser v1.1.1/go.mod h1:6RYKKt7H4d4+iWqouImQ9R2FZql3VbhNgx27UK13J/0=\ngithub.com/bwesterb/go-ristretto v1.2.0/go.mod h1:fUIoIZaG73pV5biE2Blr2xEzDoMj7NFEuV9ekS419A0=\ngithub.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=\ngithub.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/chai2010/gettext-go v1.0.2 h1:1Lwwip6Q2QGsAdl/ZKPCwTe9fe0CjlUbqj5bFNSjIRk=\ngithub.com/chai2010/gettext-go v1.0.2/go.mod h1:y+wnP2cHYaVj19NZhYKAwEMH2CI1gNHeQQ+5AjwawxA=\ngithub.com/checkpoint-restore/go-criu/v5 v5.3.0 h1:wpFFOoomK3389ue2lAb0Boag6XPht5QYpipxmSNL4d8=\ngithub.com/checkpoint-restore/go-criu/v5 v5.3.0/go.mod h1:E/eQpaFtUKGOOSEBZgmKAcn+zUUwWxqcaKZlF54wK8E=\ngithub.com/cilium/ebpf v0.11.0 h1:V8gS/bTCCjX9uUnkUFUpPsksM8n1lXBAvHcpiFk1X2Y=\ngithub.com/cilium/ebpf v0.11.0/go.mod h1:WE7CZAnqOL2RouJ4f1uyNhqr2P4CCvXFIqdRDUgWsVs=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cloudflare/circl v1.1.0/go.mod h1:prBCrKB9DV4poKZY1l9zBXg2QJY7mvgRvtMxxK7fi4I=\ngithub.com/cloudflare/circl v1.3.9 h1:QFrlgFYf2Qpi8bSpVPK1HBvWpx16v/1TZivyo7pGuBE=\ngithub.com/cloudflare/circl v1.3.9/go.mod h1:PDRU+oXvdD7KCtgKxW95M5Z8BpSCJXQORiZFnBQS5QU=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cncf/xds/go v0.0.0-20240905190251-b4127c9b8d78 h1:QVw89YDxXxEe+l8gU8ETbOasdwEV+avkR75ZzsVV9WI=\ngithub.com/cncf/xds/go v0.0.0-20240905190251-b4127c9b8d78/go.mod h1:W+zGtBO5Y1IgJhy4+A9GOqVhqLpfZi+vwmdNXUehLA8=\ngithub.com/container-storage-interface/spec v1.9.0 h1:zKtX4STsq31Knz3gciCYCi1SXtO2HJDecIjDVboYavY=\ngithub.com/container-storage-interface/spec v1.9.0/go.mod h1:ZfDu+3ZRyeVqxZM0Ds19MVLkN2d1XJ5MAfi1L3VjlT0=\ngithub.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=\ngithub.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=\ngithub.com/containerd/cgroups/v3 v3.0.3 h1:S5ByHZ/h9PMe5IOQoN7E+nMc2UcLEM/V48DGDJ9kip0=\ngithub.com/containerd/cgroups/v3 v3.0.3/go.mod h1:8HBe7V3aWGLFPd/k03swSIsGjZhHI2WzJmticMgVuz0=\ngithub.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=\ngithub.com/containerd/console v1.0.4/go.mod h1:YynlIjWYF8myEu6sdkwKIvGQq+cOckRm6So2avqoYAk=\ngithub.com/containerd/errdefs v0.1.0 h1:m0wCRBiu1WJT/Fr+iOoQHMQS/eP5myQ8lCv4Dz5ZURM=\ngithub.com/containerd/errdefs v0.1.0/go.mod h1:YgWiiHtLmSeBrvpw+UfPijzbLaB77mEG1WwJTDETIV0=\ngithub.com/containerd/log v0.1.0 h1:TCJt7ioM2cr/tfR8GPbGf9/VRAX8D2B4PjzCpfX540I=\ngithub.com/containerd/log v0.1.0/go.mod h1:VRRf09a7mHDIRezVKTRCrOq78v577GXq3bSa3EhrzVo=\ngithub.com/containerd/ttrpc v1.2.5 h1:IFckT1EFQoFBMG4c3sMdT8EP3/aKfumK1msY+Ze4oLU=\ngithub.com/containerd/ttrpc v1.2.5/go.mod h1:YCXHsb32f+Sq5/72xHubdiJRQY9inL4a4ZQrAbN1q9o=\ngithub.com/containerd/typeurl v1.0.2 h1:Chlt8zIieDbzQFzXzAeBEF92KhExuE4p9p92/QmY7aY=\ngithub.com/containerd/typeurl v1.0.2/go.mod h1:9trJWW2sRlGub4wZJRTW83VtbOLS6hwcDZXTn6oPz9s=\ngithub.com/containernetworking/cni v1.2.3 h1:hhOcjNVUQTnzdRJ6alC5XF+wd9mfGIUaj8FuJbEslXM=\ngithub.com/containernetworking/cni v1.2.3/go.mod h1:DuLgF+aPd3DzcTQTtp/Nvl1Kim23oFKdm2okJzBQA5M=\ngithub.com/containernetworking/plugins v1.5.1 h1:T5ji+LPYjjgW0QM+KyrigZbLsZ8jaX+E5J/EcKOE4gQ=\ngithub.com/containernetworking/plugins v1.5.1/go.mod h1:MIQfgMayGuHYs0XdNudf31cLLAC+i242hNm6KuDGqCM=\ngithub.com/coreos/go-iptables v0.7.0 h1:XWM3V+MPRr5/q51NuWSgU0fqMad64Zyxs8ZUoMsamr8=\ngithub.com/coreos/go-iptables v0.7.0/go.mod h1:Qe8Bv2Xik5FyTXwgIbLAnv2sWSBmvWdFETJConOQ//Q=\ngithub.com/coreos/go-semver v0.3.1 h1:yi21YpKnrx1gt5R+la8n5WgS0kCrsPp33dmEyHReZr4=\ngithub.com/coreos/go-semver v0.3.1/go.mod h1:irMmmIw/7yzSRPWryHsK7EYSg09caPQL03VsM8rvUec=\ngithub.com/coreos/go-systemd/v22 v22.5.0 h1:RrqgGjYQKalulkV8NGVIfkXQf6YYmOyiJKk8iXXhfZs=\ngithub.com/coreos/go-systemd/v22 v22.5.0/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.0-20190314233015-f79a8a8ca69d/go.mod h1:maD7wRr/U5Z6m/iR4s+kqSMx2CaBsrgA7czyZG/E6dU=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.5 h1:ZtcqGrnekaHpVLArFSe4HK5DoKx1T0rq2DwVB0alcyc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.5/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/cyphar/filepath-securejoin v0.2.4 h1:Ugdm7cg7i6ZK6x3xDF1oEu1nfkyfH53EtKeQYTC3kyg=\ngithub.com/cyphar/filepath-securejoin v0.2.4/go.mod h1:aPGpWjXOXUn2NCNjFvBE6aRxGGx79pTxQpKOJNYHHl4=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/distribution/reference v0.6.0 h1:0IXCQ5g4/QMHHkarYzh5l+u8T3t73zM5QvfrDyIgxBk=\ngithub.com/distribution/reference v0.6.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=\ngithub.com/docker/distribution v2.8.2+incompatible h1:T3de5rq0dB1j30rp0sA2rER+m322EBzniBPB6ZIzuh8=\ngithub.com/docker/distribution v2.8.2+incompatible/go.mod h1:J2gT2udsDAN96Uj4KfcMRqY0/ypR+oyYUYmja8H+y+w=\ngithub.com/docker/docker v27.4.0+incompatible h1:I9z7sQ5qyzO0BfAb9IMOawRkAGxhYsidKiTMcm0DU+A=\ngithub.com/docker/docker v27.4.0+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\ngithub.com/docker/go-connections v0.5.0 h1:USnMq7hx7gwdVZq1L49hLXaFtUdTADjXGp+uj1Br63c=\ngithub.com/docker/go-connections v0.5.0/go.mod h1:ov60Kzw0kKElRwhNs9UlUHAE/F9Fe6GLaXnqyDdmEXc=\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/docopt/docopt-go v0.0.0-20180111231733-ee0de3bc6815 h1:bWDMxwH3px2JBh6AyO7hdCn/PkvCZXii8TGj7sbtEbQ=\ngithub.com/docopt/docopt-go v0.0.0-20180111231733-ee0de3bc6815/go.mod h1:WwZ+bS3ebgob9U8Nd0kOddGdZWjyMGR8Wziv+TBNwSE=\ngithub.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=\ngithub.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=\ngithub.com/ebitengine/purego v0.8.1 h1:sdRKd6plj7KYW33EH5As6YKfe8m9zbN9JMrOjNVF/BE=\ngithub.com/ebitengine/purego v0.8.1/go.mod h1:iIjxzd6CiRiOG0UyXP+V1+jWqUXVjPKLAI0mRfJZTmQ=\ngithub.com/emicklei/go-restful/v3 v3.11.0 h1:rAQeMHw1c7zTmncogyy8VvRZwtkmkZ4FxERmMY4rD+g=\ngithub.com/emicklei/go-restful/v3 v3.11.0/go.mod h1:6n3XBCmQQb25CM2LCACGz8ukIrRry+4bhvbpWn3mrbc=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/go-control-plane v0.13.1 h1:vPfJZCkob6yTMEgS+0TwfTUfbHjfy/6vOJ8hUWX/uXE=\ngithub.com/envoyproxy/go-control-plane v0.13.1/go.mod h1:X45hY0mufo6Fd0KW3rqsGvQMw58jvjymeCzBU3mWyHw=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/envoyproxy/protoc-gen-validate v1.1.0 h1:tntQDh69XqOCOZsDz0lVJQez/2L6Uu2PdjCQwWCJ3bM=\ngithub.com/envoyproxy/protoc-gen-validate v1.1.0/go.mod h1:sXRDRVmzEbkM7CVcM06s9shE/m23dg3wzjl0UWqJ2q4=\ngithub.com/euank/go-kmsg-parser v2.0.0+incompatible h1:cHD53+PLQuuQyLZeriD1V/esuG4MuU0Pjs5y6iknohY=\ngithub.com/euank/go-kmsg-parser v2.0.0+incompatible/go.mod h1:MhmAMZ8V4CYH4ybgdRwPr2TU5ThnS43puaKEMpja1uw=\ngithub.com/evanphx/json-patch/v5 v5.9.0 h1:kcBlZQbplgElYIlo/n1hJbls2z/1awpXxpRi0/FOJfg=\ngithub.com/evanphx/json-patch/v5 v5.9.0/go.mod h1:VNkHZ/282BpEyt/tObQO8s5CMPmYYq14uClGH4abBuQ=\ngithub.com/exponent-io/jsonpath v0.0.0-20151013193312-d6023ce2651d h1:105gxyaGwCFad8crR9dcMQWvV9Hvulu6hwUh4tWPJnM=\ngithub.com/exponent-io/jsonpath v0.0.0-20151013193312-d6023ce2651d/go.mod h1:ZZMPRZwes7CROmyNKgQzC3XPs6L/G2EJLHddWejkmf4=\ngithub.com/fatih/camelcase v1.0.0 h1:hxNvNX/xYBp0ovncs8WyWZrOrpBNub/JfaMvbURyft8=\ngithub.com/fatih/camelcase v1.0.0/go.mod h1:yN2Sb0lFhZJUdVvtELVWefmrXpuZESvPmqwoZc+/fpc=\ngithub.com/fatih/color v1.9.0/go.mod h1:eQcE1qtQxscV5RaZvpXrrb8Drkc3/DdQ+uUYCNjL+zU=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/frankban/quicktest v1.14.6 h1:7Xjx+VpznH+oBnejlPUj8oUpdxnVs4f8XU8WnHkI4W8=\ngithub.com/frankban/quicktest v1.14.6/go.mod h1:4ptaffx2x8+WTWXmUCuVU6aPUX1/Mz7zb5vbUoiM6w0=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4IgpuI1SZQ=\ngithub.com/fsnotify/fsnotify v1.8.0 h1:dAwr6QBTBZIkG8roQaJjGof0pp0EeF+tNV7YBP3F/8M=\ngithub.com/fsnotify/fsnotify v1.8.0/go.mod h1:8jBTzvmWwFyi3Pb8djgCCO5IBqzKJ/Jwo8TRcHyHii0=\ngithub.com/fxamacker/cbor/v2 v2.7.0 h1:iM5WgngdRBanHcxugY4JySA0nk1wZorNOpTgCMedv5E=\ngithub.com/fxamacker/cbor/v2 v2.7.0/go.mod h1:pxXPTn3joSm21Gbwsv0w9OSA2y1HFR9qXEeXQVeNoDQ=\ngithub.com/ghodss/yaml v1.0.0 h1:wQHKEahhL6wmXdzwWG11gIVCkOv05bNOh+Rxn0yngAk=\ngithub.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\ngithub.com/go-errors/errors v1.0.1/go.mod h1:f4zRHt4oKfwPJE5k8C9vpYG+aDHdBFUsgrm6/TyX73Q=\ngithub.com/go-errors/errors v1.4.2 h1:J6MZopCL4uSllY1OfXM374weqZFFItUbrImctkmUxIA=\ngithub.com/go-errors/errors v1.4.2/go.mod h1:sIVyrIiJhuEF+Pj9Ebtd6P/rEYROXFi3BopGUQ5a5Og=\ngithub.com/go-ini/ini v1.67.0 h1:z6ZrTEZqSWOTyH2FlglNbNgARyHG8oLW9gMELqKr06A=\ngithub.com/go-ini/ini v1.67.0/go.mod h1:ByCAeIL28uOIIG0E3PJtZPDL8WnHpFKFOtgjp+3Ies8=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-logr/zapr v1.3.0 h1:XGdV8XW8zdwFiwOA2Dryh1gj2KRQyOOoNmBy4EplIcQ=\ngithub.com/go-logr/zapr v1.3.0/go.mod h1:YKepepNBd1u/oyhd/yQmtjVXmm9uML4IXUgMOwR8/Gg=\ngithub.com/go-ole/go-ole v1.2.6 h1:/Fpf6oFPoeFik9ty7siob0G6Ke8QvQEuVcuChpwXzpY=\ngithub.com/go-ole/go-ole v1.2.6/go.mod h1:pprOEPIfldk/42T2oK7lQ4v4JSDwmV0As9GaiUsvbm0=\ngithub.com/go-openapi/jsonpointer v0.19.6 h1:eCs3fxoIi3Wh6vtgmLTOjdhSpiqphQ+DaPn38N2ZdrE=\ngithub.com/go-openapi/jsonpointer v0.19.6/go.mod h1:osyAmYz/mB/C3I+WsTTSgw1ONzaLJoLCyoi6/zppojs=\ngithub.com/go-openapi/jsonreference v0.20.2 h1:3sVjiK66+uXK/6oQ8xgcRKcFgQ5KXa2KvnJRumpMGbE=\ngithub.com/go-openapi/jsonreference v0.20.2/go.mod h1:Bl1zwGIM8/wsvqjsOQLJ/SH+En5Ap4rVB5KVcIDZG2k=\ngithub.com/go-openapi/swag v0.22.3/go.mod h1:UzaqsxGiab7freDnrUUra0MwWfN/q7tE4j+VcZ0yl14=\ngithub.com/go-openapi/swag v0.22.4 h1:QLMzNJnMGPRNDCbySlcj1x01tzU8/9LTTL9hZZZogBU=\ngithub.com/go-openapi/swag v0.22.4/go.mod h1:UzaqsxGiab7freDnrUUra0MwWfN/q7tE4j+VcZ0yl14=\ngithub.com/go-playground/locales v0.12.1 h1:2FITxuFt/xuCNP1Acdhv62OzaCiviiE4kotfhkmOqEc=\ngithub.com/go-playground/locales v0.12.1/go.mod h1:IUMDtCfWo/w/mtMfIE/IG2K+Ey3ygWanZIBtBW0W2TM=\ngithub.com/go-playground/universal-translator v0.0.0-20170327191703-71201497bace h1:vfBaUX49VsqTxXGADDIWvTPvaU4AbQyX/yENHE0f7AY=\ngithub.com/go-playground/universal-translator v0.0.0-20170327191703-71201497bace/go.mod h1:1AnU7NaIRDWWzGEKwgtJRd2xk99HeFyHw3yid4rvQIY=\ngithub.com/go-sql-driver/mysql v1.8.1 h1:LedoTUt/eveggdHS9qUFC1EFSa8bU2+1pZjSRpvNJ1Y=\ngithub.com/go-sql-driver/mysql v1.8.1/go.mod h1:wEBSXgmK//2ZFJyE+qWnIsVGmvmEKlqwuVSjsCm7DZg=\ngithub.com/go-task/slim-sprig v0.0.0-20210107165309-348f09dbbbc0/go.mod h1:fyg7847qk6SyHyPtNmDHnmrv/HOrqktSC+C9fM+CJOE=\ngithub.com/go-task/slim-sprig/v3 v3.0.0 h1:sUs3vkvUymDpBKi3qH1YSqBQk9+9D/8M2mN1vB6EwHI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0/go.mod h1:W848ghGpv3Qj3dhTPRyJypKRiqCdHZiAzKg9hl15HA8=\ngithub.com/go-test/deep v1.0.4 h1:u2CU3YKy9I2pmu9pX0eq50wCgjfGIt539SqR7FbHiho=\ngithub.com/go-test/deep v1.0.4/go.mod h1:wGDj63lr65AM2AQyKZd/NYHGb0R+1RLqB8NKt3aSFNA=\ngithub.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/godbus/dbus/v5 v5.1.0 h1:4KLkAxT3aOY8Li4FRJe/KvhoNFFxo0m6fNuFUO8QJUk=\ngithub.com/godbus/dbus/v5 v5.1.0/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/gofrs/flock v0.12.1 h1:MTLVXXHf8ekldpJk3AKicLij9MdwOWkZ+a/jHHZby9E=\ngithub.com/gofrs/flock v0.12.1/go.mod h1:9zxTsyu5xtJ9DK+1tFZyibEV7y3uwDxPPfbxeeHCoD0=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang-jwt/jwt/v4 v4.5.0 h1:7cYmW1XlMY7h7ii7UhUyChSgS5wUJEnm9uZVTGqOWzg=\ngithub.com/golang-jwt/jwt/v4 v4.5.0/go.mod h1:m21LjoU+eqJr34lmDMbreY2eSTRJ1cv77w39/MY0Ch0=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.6.0 h1:ErTB+efbowRARo13NNdxyJji2egdxLGQhRaY+DUumQc=\ngithub.com/golang/mock v1.6.0/go.mod h1:p6yTPP+5HYm5mzsMV8JkE6ZKdX+/wYM6Hr+LicevLPs=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/golang/snappy v0.0.4 h1:yAGX7huGHXlcLOEtBnF4w7FQwA26wojNCwOYAEhLjQM=\ngithub.com/golang/snappy v0.0.4/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/gonvenience/bunt v1.3.5 h1:wSQquifvwEWtzn27k1ngLfeLaStyt0k1b/K6TrlCNAs=\ngithub.com/gonvenience/bunt v1.3.5/go.mod h1:7ApqkVBEWvX04oJ28Q2WeI/BvJM6VtukaJAU/q/pTs8=\ngithub.com/gonvenience/neat v1.3.12 h1:xwIyRbJcG9LgcDYys+HHLH9DqqHeQsUpS5CfBUeskbs=\ngithub.com/gonvenience/neat v1.3.12/go.mod h1:8OljAIgPelN0uPPO94VBqxK+Kz98d6ZFwHDg5o/PfkE=\ngithub.com/gonvenience/term v1.0.2 h1:qKa2RydbWIrabGjR/fegJwpW5m+JvUwFL8mLhHzDXn0=\ngithub.com/gonvenience/term v1.0.2/go.mod h1:wThTR+3MzWtWn7XGVW6qQ65uaVf8GHED98KmwpuEQeo=\ngithub.com/gonvenience/text v1.0.7 h1:YmIqmgTwxnACYCG59DykgMbomwteYyNhAmEUEJtPl14=\ngithub.com/gonvenience/text v1.0.7/go.mod h1:OAjH+mohRszffLY6OjgQcUXiSkbrIavooFpfIt1ZwAs=\ngithub.com/gonvenience/wrap v1.1.2 h1:xPKxNwL1HCguwyM+HlP/1CIuc9LRd7k8RodLwe9YTZA=\ngithub.com/gonvenience/wrap v1.1.2/go.mod h1:GiryBSXoI3BAAhbWD1cZVj7RZmtiu0ERi/6R6eJfslI=\ngithub.com/gonvenience/ytbx v1.4.4 h1:jQopwyaLsVGuwdxSiN4WkXjsEaFNPJ3V4lUj7eyEpzo=\ngithub.com/gonvenience/ytbx v1.4.4/go.mod h1:w37+MKCPcCMY/jpPNmEklD4xKqrOAVBO6kIWW2+uI6M=\ngithub.com/google/btree v1.1.3 h1:CVpQJjYgC4VbzxeGVHfvZrv1ctoYCAI8vbl07Fcxlyg=\ngithub.com/google/btree v1.1.3/go.mod h1:qOPhT0dTNdNzV6Z/lhRX0YXUafgPLFUh+gZMl761Gm4=\ngithub.com/google/cadvisor v0.49.0 h1:1PYeiORXmcFYi609M4Qvq5IzcvcVaWgYxDt78uH8jYA=\ngithub.com/google/cadvisor v0.49.0/go.mod h1:s6Fqwb2KiWG6leCegVhw4KW40tf9f7m+SF1aXiE8Wsk=\ngithub.com/google/cel-go v0.20.1 h1:nDx9r8S3L4pE61eDdt8igGj8rf5kjYR3ILxWIpWNi84=\ngithub.com/google/cel-go v0.20.1/go.mod h1:kWcIzTsPX0zmQ+H3TirHstLLf9ep5QTsZBN9u4dOYLg=\ngithub.com/google/gnostic-models v0.6.8 h1:yo/ABAfM5IMRsS1VnXjTBvUb61tFIHozhlYvRgGre9I=\ngithub.com/google/gnostic-models v0.6.8/go.mod h1:5n7qKqH0f5wFt+aWF8CW6pZLLNOfYuF5OpfBSENuI8U=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.6/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.7/go.mod h1:n+brtR0CgQNWTVd5ZUFpTBC8YFBDLK/h/bpaJ8/DtOE=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-github/v53 v53.2.0 h1:wvz3FyF53v4BK+AsnvCmeNhf8AkTaeh2SoYu/XUvTtI=\ngithub.com/google/go-github/v53 v53.2.0/go.mod h1:XhFRObz+m/l+UCm9b7KSIC3lT3NWSXGt7mOsAWEloao=\ngithub.com/google/go-querystring v1.1.0 h1:AnCroh3fv4ZBgVIf1Iwtovgjaw/GiKJo8M8yD/fhyJ8=\ngithub.com/google/go-querystring v1.1.0/go.mod h1:Kcdr2DB4koayq7X8pmAG4sNG59So17icRSOU623lUBU=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/gofuzz v1.2.0 h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=\ngithub.com/google/gofuzz v1.2.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/gopacket v1.1.19 h1:ves8RnFZPGiFnTS0uPQStjwru6uO6h+nlr9j6fL7kF8=\ngithub.com/google/gopacket v1.1.19/go.mod h1:iJ8V8n6KS+z2U1A8pUwu8bW5SyEMkXJB8Yo/Vo+TKTo=\ngithub.com/google/netstack v0.0.0-20191123085552-55fcc16cd0eb h1:/YcrD0GSdU5gtckXHVjSEd0Y6VgboNW7VYyImZS3y6g=\ngithub.com/google/netstack v0.0.0-20191123085552-55fcc16cd0eb/go.mod h1:r/rILWg3r1Qy9G1IFMhsqWLq2GjwuYoTuPgG7ckMAjk=\ngithub.com/google/pprof v0.0.0-20241029153458-d1b30febd7db h1:097atOisP2aRj7vFgYQBbFN4U4JNXUNYpxael3UzMyo=\ngithub.com/google/pprof v0.0.0-20241029153458-d1b30febd7db/go.mod h1:vavhavw2zAxS5dIdcRluK6cSGGPlZynqzFM8NdvU144=\ngithub.com/google/safetext v0.0.0-20230106111101-7156a760e523 h1:i4NsbmB9pD5+Ggp5GZKyvYY6MkjvPE8CIMlkvXFF8gA=\ngithub.com/google/safetext v0.0.0-20230106111101-7156a760e523/go.mod h1:mJNEy0r5YPHC7ChQffpOszlGB4L1iqjXWpIEKcFpr9s=\ngithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510 h1:El6M4kTTCOh6aBiKaUGG7oYTSPP8MxqL4YI3kZKwcP4=\ngithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510/go.mod h1:pupxD2MaaD3pAXIBCelhxNneeOaAeabZDe5s4K6zSpQ=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gorilla/mux v1.8.1 h1:TuBL49tXwgrFYWhqrNgrUNEY92u81SPhu7sTdzQEiWY=\ngithub.com/gorilla/mux v1.8.1/go.mod h1:AKf9I4AEqPTmMytcMc0KkNouC66V3BtZ4qD5fmWSiMQ=\ngithub.com/gorilla/websocket v1.4.2/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/gorilla/websocket v1.5.3 h1:saDtZ6Pbx/0u+bgYQ3q96pZgCzfhKXGPqt7kZ72aNNg=\ngithub.com/gorilla/websocket v1.5.3/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/gregjones/httpcache v0.0.0-20180305231024-9cad4c3443a7 h1:pdN6V1QBWetyv/0+wjACpqVH+eVULgEjkurDLq3goeM=\ngithub.com/gregjones/httpcache v0.0.0-20180305231024-9cad4c3443a7/go.mod h1:FecbI9+v66THATjSRHfNgh1IVFe/9kFxbXtjV0ctIMA=\ngithub.com/grpc-ecosystem/go-grpc-middleware v1.3.0 h1:+9834+KizmvFV7pXQGSXQTsaWhq2GjuNUt0aUU0YBYw=\ngithub.com/grpc-ecosystem/go-grpc-middleware v1.3.0/go.mod h1:z0ButlSOZa5vEBq9m2m2hlwIgKw+rp3sdCBRoJY+30Y=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0 h1:Ovs26xHkKqVztRpIrF/92BcuyuQ/YW4NSIpoGtfXNho=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0/go.mod h1:8NvIoxWQoOIhqOTXgfV/d3M/q6VIi02HzZEHgUlZvzk=\ngithub.com/grpc-ecosystem/grpc-gateway v1.16.0 h1:gmcG1KaJ57LophUzW0Hy8NmPhnMZb4M0+kPpLofRdBo=\ngithub.com/grpc-ecosystem/grpc-gateway v1.16.0/go.mod h1:BDjrQk3hbvj6Nolgz8mAMFbcEtjT1g+wF4CSlocrBnw=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 h1:bkypFPDjIYGfCYD5mRBvpqxfYX1YCS1PXdKYWi8FsN0=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0/go.mod h1:P+Lt/0by1T8bfcF3z737NnSbmxQAppXMRziHUxPOC8k=\ngithub.com/gruntwork-io/go-commons v0.8.0 h1:k/yypwrPqSeYHevLlEDmvmgQzcyTwrlZGRaxEM6G0ro=\ngithub.com/gruntwork-io/go-commons v0.8.0/go.mod h1:gtp0yTtIBExIZp7vyIV9I0XQkVwiQZze678hvDXof78=\ngithub.com/gruntwork-io/terratest v0.48.0 h1:OoqJYAnBxejInn7TPizFGJNMCFvPHbiWNS3hGFKdHhA=\ngithub.com/gruntwork-io/terratest v0.48.0/go.mod h1:U2EQW4Odlz75XJUH16Kqkr9c93p+ZZtkpVez7GkZFa4=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=\ngithub.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\ngithub.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\ngithub.com/hashicorp/hcl v1.0.0 h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=\ngithub.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=\ngithub.com/homeport/dyff v1.6.0 h1:AN+ikld0Fy+qx34YE7655b/bpWuxS6cL9k852pE2GUc=\ngithub.com/homeport/dyff v1.6.0/go.mod h1:FlAOFYzeKvxmU5nTrnG+qrlJVWpsFew7pt8L99p5q8k=\ngithub.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\ngithub.com/imdario/mergo v0.3.12 h1:b6R2BslTbIEToALKP7LxUvijTsNI9TAe80pLWN2g/HU=\ngithub.com/imdario/mergo v0.3.12/go.mod h1:jmQim1M+e3UYxmgPu/WyfjB3N3VflVyUjjjwH0dnCYA=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/ishidawataru/sctp v0.0.0-20230406120618-7ff4192f6ff2 h1:i2fYnDurfLlJH8AyyMOnkLHnHeP8Ff/DDpuZA/D3bPo=\ngithub.com/ishidawataru/sctp v0.0.0-20230406120618-7ff4192f6ff2/go.mod h1:co9pwDoBCm1kGxawmb4sPq0cSIOOWNPT4KnHotMP1Zg=\ngithub.com/jackc/pgpassfile v1.0.0 h1:/6Hmqy13Ss2zCq62VdNG8tM1wchn8zjSGOBJ6icpsIM=\ngithub.com/jackc/pgpassfile v1.0.0/go.mod h1:CEx0iS5ambNFdcRtxPj5JhEz+xB6uRky5eyVu/W2HEg=\ngithub.com/jackc/pgservicefile v0.0.0-20240606120523-5a60cdf6a761 h1:iCEnooe7UlwOQYpKFhBabPMi4aNAfoODPEFNiAnClxo=\ngithub.com/jackc/pgservicefile v0.0.0-20240606120523-5a60cdf6a761/go.mod h1:5TJZWKEWniPve33vlWYSoGYefn3gLQRzjfDlhSJ9ZKM=\ngithub.com/jackc/pgx/v5 v5.7.1 h1:x7SYsPBYDkHDksogeSmZZ5xzThcTgRz++I5E+ePFUcs=\ngithub.com/jackc/pgx/v5 v5.7.1/go.mod h1:e7O26IywZZ+naJtWWos6i6fvWK+29etgITqrqHLfoZA=\ngithub.com/jackc/puddle/v2 v2.2.2 h1:PR8nw+E/1w0GLuRFSmiioY6UooMp6KJv0/61nB7icHo=\ngithub.com/jackc/puddle/v2 v2.2.2/go.mod h1:vriiEXHvEE654aYKXXjOvZM39qJ0q+azkZFrfEOc3H4=\ngithub.com/jmespath/go-jmespath v0.4.0 h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=\ngithub.com/jmespath/go-jmespath v0.4.0/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1 h1:shLQSRRSCCPj3f2gpwzGwWFoC7ycTf1rcQZHOlsJ6N8=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1/go.mod h1:L3OGu8Wl2/fWfCI6z80xFu9LTZmf1ZRjMHUOPmWr69U=\ngithub.com/joho/godotenv v1.5.1 h1:7eLL/+HRGLY0ldzfGMeQkb7vMd0as4CfYvUVzLqw0N0=\ngithub.com/joho/godotenv v1.5.1/go.mod h1:f4LDr5Voq0i2e/R5DDNOoa2zzDfwtkZa6DnEwAbqwq4=\ngithub.com/jonboulle/clockwork v0.2.2 h1:UOGuzwb1PwsrDAObMuhUnj0p5ULPj8V/xJ7Kx9qUBdQ=\ngithub.com/jonboulle/clockwork v0.2.2/go.mod h1:Pkfl5aHPm1nk2H9h0bjmnJD/BcgbGXUBGnn1kMkgxc8=\ngithub.com/josharian/intern v1.0.0 h1:vlS4z54oSdjm0bgjRigI+G1HpF+tI+9rE5LLzOg8HmY=\ngithub.com/josharian/intern v1.0.0/go.mod h1:5DoeVV0s6jJacbCEi61lwdGj/aVlrQvzHFFd8Hwg//Y=\ngithub.com/jsimonetti/rtnetlink v0.0.0-20190606172950-9527aa82566a/go.mod h1:Oz+70psSo5OFh8DBl0Zv2ACw7Esh6pPUphlvZG9x7uw=\ngithub.com/jsimonetti/rtnetlink v0.0.0-20200117123717-f846d4f6c1f4 h1:nwOc1YaOrYJ37sEBrtWZrdqzK22hiJs3GpDmP3sR2Yw=\ngithub.com/jsimonetti/rtnetlink v0.0.0-20200117123717-f846d4f6c1f4/go.mod h1:WGuG/smIU4J/54PblvSbh+xvCZmpJnFgr3ds6Z55XMQ=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/juju/clock v1.1.1 h1:NvgHG9DQmOpBevgt6gzkyimdWBooLXDy1cQn89qJzBI=\ngithub.com/juju/clock v1.1.1/go.mod h1:HIBvJ8kiV/n7UHwKuCkdYL4l/MDECztHR2sAvWDxxf0=\ngithub.com/juju/collections v0.0.0-20200605021417-0d0ec82b7271 h1:4R626WTwa7pRYQFiIRLVPepMhm05eZMEx+wIurRnMLc=\ngithub.com/juju/collections v0.0.0-20200605021417-0d0ec82b7271/go.mod h1:5XgO71dV1JClcOJE+4dzdn4HrI5LiyKd7PlVG6eZYhY=\ngithub.com/juju/errors v1.0.0 h1:yiq7kjCLll1BiaRuNY53MGI0+EQ3rF6GB+wvboZDefM=\ngithub.com/juju/errors v1.0.0/go.mod h1:B5x9thDqx0wIMH3+aLIMP9HjItInYWObRovoCFM5Qe8=\ngithub.com/juju/loggo v0.0.0-20210728185423-eebad3a902c4 h1:NO5tuyw++EGLnz56Q8KMyDZRwJwWO8jQnj285J3FOmY=\ngithub.com/juju/loggo v0.0.0-20210728185423-eebad3a902c4/go.mod h1:NIXFioti1SmKAlKNuUwbMenNdef59IF52+ZzuOmHYkg=\ngithub.com/juju/mgo/v2 v2.0.0-20210302023703-70d5d206e208 h1:/WiCm+Vpj87e4QWuWwPD/bNE9kDrWCLvPBHOQNcG2+A=\ngithub.com/juju/mgo/v2 v2.0.0-20210302023703-70d5d206e208/go.mod h1:0OChplkvPTZ174D2FYZXg4IB9hbEwyHkD+zT+/eK+Fg=\ngithub.com/juju/mutex v0.0.0-20180619145857-d21b13acf4bf h1:2d3cilQly1OpAfZcn4QRuwDOdVoHsM4cDTkcKbmO760=\ngithub.com/juju/mutex v0.0.0-20180619145857-d21b13acf4bf/go.mod h1:Y3oOzHH8CQ0Ppt0oCKJ2JFO81/EsWenH5AEqigLH+yY=\ngithub.com/juju/retry v0.0.0-20180821225755-9058e192b216 h1:/eQL7EJQKFHByJe3DeE8Z36yqManj9UY5zppDoQi4FU=\ngithub.com/juju/retry v0.0.0-20180821225755-9058e192b216/go.mod h1:OohPQGsr4pnxwD5YljhQ+TZnuVRYpa5irjugL1Yuif4=\ngithub.com/juju/testing v0.0.0-20220203020004-a0ff61f03494 h1:XEDzpuZb8Ma7vLja3+5hzUqVTvAqm5Y+ygvnDs5iTMM=\ngithub.com/juju/testing v0.0.0-20220203020004-a0ff61f03494/go.mod h1:rUquetT0ALL48LHZhyRGvjjBH8xZaZ8dFClulKK5wK4=\ngithub.com/juju/utils/v3 v3.0.0-20220130232349-cd7ecef0e94a h1:5ZWDCeCF0RaITrZGemzmDFIhjR/MVSvBUqgSyaeTMbE=\ngithub.com/juju/utils/v3 v3.0.0-20220130232349-cd7ecef0e94a/go.mod h1:LzwbbEN7buYjySp4nqnti6c6olSqRXUk6RkbSUUP1n8=\ngithub.com/juju/version/v2 v2.0.0-20211007103408-2e8da085dc23 h1:wtEPbidt1VyHlb8RSztU6ySQj29FLsOQiI9XiJhXDM4=\ngithub.com/juju/version/v2 v2.0.0-20211007103408-2e8da085dc23/go.mod h1:Ljlbryh9sYaUSGXucslAEDf0A2XUSGvDbHJgW8ps6nc=\ngithub.com/kardianos/osext v0.0.0-20190222173326-2bc1f35cddc0 h1:iQTw/8FWTuc7uiaSepXwyf3o52HaUYcV+Tu66S3F5GA=\ngithub.com/kardianos/osext v0.0.0-20190222173326-2bc1f35cddc0/go.mod h1:1NbS8ALrpOvjt0rHPNLyCIeMtbizbir8U//inJ+zuB8=\ngithub.com/karrick/godirwalk v1.17.0 h1:b4kY7nqDdioR/6qnbHQyDvmA17u5G1cZ6J+CZXwSWoI=\ngithub.com/karrick/godirwalk v1.17.0/go.mod h1:j4mkqPuvaLI8mp1DroR3P6ad7cyYd4c1qeJ3RV7ULlk=\ngithub.com/kelseyhightower/envconfig v1.4.0 h1:Im6hONhd3pLkfDFsbRgu68RDNkGF1r3dvMUtDTo2cv8=\ngithub.com/kelseyhightower/envconfig v1.4.0/go.mod h1:cccZRl6mQpaq41TPp5QxidR+Sa3axMbJDNb//FQX6Gg=\ngithub.com/kelseyhightower/memkv v0.1.1 h1:O7n2MB8cdrwb4UmyyXS2tVETc2DR7KlJRihRgNh4zqc=\ngithub.com/kelseyhightower/memkv v0.1.1/go.mod h1:uIeINg0Dy2aioPWSdga9VnueJjfSvul2dW7o758NxO4=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/compress v1.17.11 h1:In6xLpyWOi1+C7tXUUWv2ot1QvBjxevKAaI6IXrJmUc=\ngithub.com/klauspost/compress v1.17.11/go.mod h1:pMDklpSncoRMuLFrf1W9Ss9KT+0rH90U12bZKk7uwG0=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/leodido/go-urn v0.0.0-20181204092800-a67a23e1c1af h1:EhEGUQX36JFkvSWzrwGjjTJxrx7atfJdxv8cxFzmaB0=\ngithub.com/leodido/go-urn v0.0.0-20181204092800-a67a23e1c1af/go.mod h1:+cyI34gQWZcE1eQU7NVgKkkzdXDQHr1dBMtdAPozLkw=\ngithub.com/libopenstorage/openstorage v1.0.0 h1:GLPam7/0mpdP8ZZtKjbfcXJBTIA/T1O6CBErVEFEyIM=\ngithub.com/libopenstorage/openstorage v1.0.0/go.mod h1:Sp1sIObHjat1BeXhfMqLZ14wnOzEhNx2YQedreMcUyc=\ngithub.com/libp2p/go-reuseport v0.4.0 h1:nR5KU7hD0WxXCJbmw7r2rhRYruNRl2koHw8fQscQm2s=\ngithub.com/libp2p/go-reuseport v0.4.0/go.mod h1:ZtI03j/wO5hZVDFo2jKywN6bYKWLOy8Se6DrI2E1cLU=\ngithub.com/liggitt/tabwriter v0.0.0-20181228230101-89fcab3d43de h1:9TO3cAIGXtEhnIaL+V+BEER86oLrvS+kWobKpbJuye0=\ngithub.com/liggitt/tabwriter v0.0.0-20181228230101-89fcab3d43de/go.mod h1:zAbeS9B/r2mtpb6U+EI2rYA5OAXxsYw6wTamcNW+zcE=\ngithub.com/lithammer/dedent v1.1.0 h1:VNzHMVCBNG1j0fh3OrsFRkVUwStdDArbgBWoPAffktY=\ngithub.com/lithammer/dedent v1.1.0/go.mod h1:jrXYCQtgg0nJiN+StA2KgR7w6CiQNv9Fd/Z9BP0jIOc=\ngithub.com/lucasb-eyer/go-colorful v1.2.0 h1:1nnpGOrhyZZuNyfu1QjKiUICQ74+3FNCN69Aj6K7nkY=\ngithub.com/lucasb-eyer/go-colorful v1.2.0/go.mod h1:R4dSotOR9KMtayYi1e77YzuveK+i7ruzyGqttikkLy0=\ngithub.com/lufia/plan9stats v0.0.0-20211012122336-39d0f177ccd0 h1:6E+4a0GO5zZEnZ81pIr0yLvtUWk2if982qA3F3QD6H4=\ngithub.com/lufia/plan9stats v0.0.0-20211012122336-39d0f177ccd0/go.mod h1:zJYVVT2jmtg6P3p1VtQj7WsuWi/y4VnjVBn7F8KPB3I=\ngithub.com/magiconair/properties v1.8.7 h1:IeQXZAiQcpL9mgcAe1Nu6cX9LLw6ExEHKjN0VQdvPDY=\ngithub.com/magiconair/properties v1.8.7/go.mod h1:Dhd985XPs7jluiymwWYZ0G4Z61jb3vdS329zhj2hYo0=\ngithub.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=\ngithub.com/mailru/easyjson v0.7.7/go.mod h1:xzfreul335JAWq5oZzymOObrkdz5UnU4kGfJJLY9Nlc=\ngithub.com/mattn/go-ciede2000 v0.0.0-20170301095244-782e8c62fec3 h1:BXxTozrOU8zgC5dkpn3J6NTRdoP+hjok/e+ACr4Hibk=\ngithub.com/mattn/go-ciede2000 v0.0.0-20170301095244-782e8c62fec3/go.mod h1:x1uk6vxTiVuNt6S5R2UYgdhpj3oKojXvOXauHZ7dEnI=\ngithub.com/mattn/go-colorable v0.1.4/go.mod h1:U0ppj6V5qS13XJ6of8GYAs25YV2eR4EVcfRqFIhoBtE=\ngithub.com/mattn/go-isatty v0.0.8/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\ngithub.com/mattn/go-isatty v0.0.11/go.mod h1:PhnuNfih5lzO57/f3n+odYbM4JtupLOxQOAqxQCu2WE=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-runewidth v0.0.9 h1:Lm995f3rfxdpd6TSmuVCHVb/QhupuXlYr8sCI/QdE+0=\ngithub.com/mattn/go-runewidth v0.0.9/go.mod h1:H031xJmbD/WCDINGzjvQ9THkh0rPKHF+m2gUSrubnMI=\ngithub.com/mattn/go-zglob v0.0.1/go.mod h1:9fxibJccNxU2cnpIKLRRFA7zX7qhkJIQWBb449FYHOo=\ngithub.com/mattn/go-zglob v0.0.2-0.20190814121620-e3c945676326 h1:ofNAzWCcyTALn2Zv40+8XitdzCgXY6e9qvXwN9W0YXg=\ngithub.com/mattn/go-zglob v0.0.2-0.20190814121620-e3c945676326/go.mod h1:9fxibJccNxU2cnpIKLRRFA7zX7qhkJIQWBb449FYHOo=\ngithub.com/mcuadros/go-version v0.0.0-20190830083331-035f6764e8d2 h1:YocNLcTBdEdvY3iDK6jfWXvEaM5OCKkjxPKoJRdB3Gg=\ngithub.com/mcuadros/go-version v0.0.0-20190830083331-035f6764e8d2/go.mod h1:76rfSfYPWj01Z85hUf/ituArm797mNKcvINh1OlsZKo=\ngithub.com/mdlayher/genetlink v1.0.0 h1:OoHN1OdyEIkScEmRgxLEe2M9U8ClMytqA5niynLtfj0=\ngithub.com/mdlayher/genetlink v1.0.0/go.mod h1:0rJ0h4itni50A86M2kHcgS85ttZazNt7a8H2a2cw0Gc=\ngithub.com/mdlayher/netlink v0.0.0-20190409211403-11939a169225/go.mod h1:eQB3mZE4aiYnlUsyGGCOpPETfdQq4Jhsgf1fk3cwQaA=\ngithub.com/mdlayher/netlink v1.0.0/go.mod h1:KxeJAFOFLG6AjpyDkQ/iIhxygIUKD+vcwqcnu43w/+M=\ngithub.com/mdlayher/netlink v1.1.0 h1:mpdLgm+brq10nI9zM1BpX1kpDbh3NLl3RSnVq6ZSkfg=\ngithub.com/mdlayher/netlink v1.1.0/go.mod h1:H4WCitaheIsdF9yOYu8CFmCgQthAPIWZmcKp9uZHgmY=\ngithub.com/mikioh/ipaddr v0.0.0-20190404000644-d465c8ab6721 h1:RlZweED6sbSArvlE924+mUcZuXKLBHA35U7LN621Bws=\ngithub.com/mikioh/ipaddr v0.0.0-20190404000644-d465c8ab6721/go.mod h1:Ickgr2WtCLZ2MDGd4Gr0geeCH5HybhRJbonOgQpvSxc=\ngithub.com/mipearson/rfw v0.0.0-20170619235010-6f0a6f3266ba h1:IcYRolrKyyT0xX/j6mHzigZnwEN7NCzaaUBL2E75V7A=\ngithub.com/mipearson/rfw v0.0.0-20170619235010-6f0a6f3266ba/go.mod h1:cktvQyh8cOIjSrvwci34qvQq2seh3CvrJNn3qqH//CE=\ngithub.com/mistifyio/go-zfs v2.1.2-0.20190413222219-f784269be439+incompatible h1:aKW/4cBs+yK6gpqU3K/oIwk9Q/XICqd3zOX/UFuvqmk=\ngithub.com/mistifyio/go-zfs v2.1.2-0.20190413222219-f784269be439+incompatible/go.mod h1:8AuVvqP/mXw1px98n46wfvcGfQ4ci2FwoAjKYxuo3Z4=\ngithub.com/mitchellh/go-homedir v1.1.0 h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=\ngithub.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/mitchellh/go-ps v1.0.0 h1:i6ampVEEF4wQFF+bkYfwYgY+F/uYJDktmvLPf7qIgjc=\ngithub.com/mitchellh/go-ps v1.0.0/go.mod h1:J4lOc8z8yJs6vUwklHw2XEIiT4z4C40KtWVN3nvg8Pg=\ngithub.com/mitchellh/go-wordwrap v1.0.1 h1:TLuKupo69TCn6TQSyGxwI1EblZZEsQ0vMlAFQflz0v0=\ngithub.com/mitchellh/go-wordwrap v1.0.1/go.mod h1:R62XHJLzvMFRBbcrT7m7WgmE1eOyTSsCt+hzestvNj0=\ngithub.com/mitchellh/hashstructure v1.1.0 h1:P6P1hdjqAAknpY/M1CGipelZgp+4y9ja9kmUZPXP+H0=\ngithub.com/mitchellh/hashstructure v1.1.0/go.mod h1:xUDAozZz0Wmdiufv0uyhnHkUTN6/6d8ulp4AwfLKrmA=\ngithub.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=\ngithub.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/moby/docker-image-spec v1.3.1 h1:jMKff3w6PgbfSa69GfNg+zN/XLhfXJGnEx3Nl2EsFP0=\ngithub.com/moby/docker-image-spec v1.3.1/go.mod h1:eKmb5VW8vQEh/BAr2yvVNvuiJuY6UIocYsFu/DxxRpo=\ngithub.com/moby/spdystream v0.4.0 h1:Vy79D6mHeJJjiPdFEL2yku1kl0chZpJfZcPpb16BRl8=\ngithub.com/moby/spdystream v0.4.0/go.mod h1:xBAYlnt/ay+11ShkdFKNAG7LsyK/tmNBVvVOwrfMgdI=\ngithub.com/moby/sys/mountinfo v0.7.1 h1:/tTvQaSJRr2FshkhXiIpux6fQ2Zvc4j7tAhMTStAG2g=\ngithub.com/moby/sys/mountinfo v0.7.1/go.mod h1:IJb6JQeOklcdMU9F5xQ8ZALD+CUr5VlGpwtX+VE0rpI=\ngithub.com/moby/term v0.5.0 h1:xt8Q1nalod/v7BqbG21f8mQPqH+xAaC9C3N3wfWbVP0=\ngithub.com/moby/term v0.5.0/go.mod h1:8FzsFHVUBGZdbDsJw/ot+X+d5HLUbvklYLJ9uGfcI3Y=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/mohae/deepcopy v0.0.0-20170603005431-491d3605edfb h1:e+l77LJOEqXTIQihQJVkA6ZxPOUmfPM5e4H7rcpgtSk=\ngithub.com/mohae/deepcopy v0.0.0-20170603005431-491d3605edfb/go.mod h1:TaXosZuwdSHYgviHp1DAtfrULt5eUgsSMsZf+YrPgl8=\ngithub.com/monochromegane/go-gitignore v0.0.0-20200626010858-205db1a8cc00 h1:n6/2gBQ3RWajuToeY6ZtZTIKv2v7ThUy5KKusIT0yc0=\ngithub.com/monochromegane/go-gitignore v0.0.0-20200626010858-205db1a8cc00/go.mod h1:Pm3mSP3c5uWn86xMLZ5Sa7JB9GsEZySvHYXCTK4E9q4=\ngithub.com/morikuni/aec v1.0.0 h1:nP9CBfwrvYnBRgY6qfDQkygYDmYwOilePFkwzv4dU8A=\ngithub.com/morikuni/aec v1.0.0/go.mod h1:BbKIizmSmc5MMPqRYbxO4ZU0S0+P200+tUnFx7PXmsc=\ngithub.com/mrunalp/fileutils v0.5.1 h1:F+S7ZlNKnrwHfSwdlgNSkKo67ReVf8o9fel6C3dkm/Q=\ngithub.com/mrunalp/fileutils v0.5.1/go.mod h1:M1WthSahJixYnrXQl/DFQuteStB1weuxD2QJNHXfbSQ=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/mxk/go-flowrate v0.0.0-20140419014527-cca7078d478f h1:y5//uYreIhSUg3J1GEMiLbxo1LJaP8RfCpH6pymGZus=\ngithub.com/mxk/go-flowrate v0.0.0-20140419014527-cca7078d478f/go.mod h1:ZdcZmHo+o7JKHSa8/e818NopupXU1YMK5fe1lsApnBw=\ngithub.com/natefinch/atomic v1.0.1 h1:ZPYKxkqQOx3KZ+RsbnP/YsgvxWQPGxjC0oBt2AhwV0A=\ngithub.com/natefinch/atomic v1.0.1/go.mod h1:N/D/ELrljoqDyT3rZrsUmtsuzvHkeB/wWjHV22AZRbM=\ngithub.com/nmrshll/go-cp v0.0.0-20180115193924-61436d3b7cfa h1:/SRdH7jdcIW6WBtZO1BlpI+6TxqpOiMqLZJ10Uhk0k0=\ngithub.com/nmrshll/go-cp v0.0.0-20180115193924-61436d3b7cfa/go.mod h1:/Uh/WFiWYXoTKVsM302U10XnogAldY7up/xErXmt1FA=\ngithub.com/nxadm/tail v1.4.4/go.mod h1:kenIhsEOeOJmVchQTgglprH7qJGnHDVpk1VPCcaMI8A=\ngithub.com/nxadm/tail v1.4.8 h1:nPr65rt6Y5JFSKQO7qToXr7pePgD6Gwiw05lkbyAQTE=\ngithub.com/nxadm/tail v1.4.8/go.mod h1:+ncqLTQzXmGhMZNUePPaPqPvBxHAIsmXswZKocGu+AU=\ngithub.com/olekukonko/tablewriter v0.0.5 h1:P2Ga83D34wi1o9J6Wh1mRuqd4mF/x/lgBS7N7AbDhec=\ngithub.com/olekukonko/tablewriter v0.0.5/go.mod h1:hPp6KlRPjbx+hW8ykQs1w3UBbZlj6HuIJcUGPhkA7kY=\ngithub.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.12.1/go.mod h1:zj2OWP4+oCPe1qIXoGWkgMRwljMUYCdkwsT2108oapk=\ngithub.com/onsi/ginkgo v1.16.5 h1:8xi0RTUf59SOSfEtZMvwTvXYMzG4gV23XVHOZiXNtnE=\ngithub.com/onsi/ginkgo v1.16.5/go.mod h1:+E8gABHa3K6zRBolWtd+ROzc/U5bkGt0FwiG042wbpU=\ngithub.com/onsi/ginkgo/v2 v2.22.0 h1:Yed107/8DjTr0lKCNt7Dn8yQ6ybuDRQoMGrNFKzMfHg=\ngithub.com/onsi/ginkgo/v2 v2.22.0/go.mod h1:7Du3c42kxCUegi0IImZ1wUQzMBVecgIHjR1C+NkhLQo=\ngithub.com/onsi/gomega v1.7.1/go.mod h1:XdKZgCCFLUoM/7CFJVPcG8C1xQ1AJ0vpAezJrB7JYyY=\ngithub.com/onsi/gomega v1.10.1/go.mod h1:iN09h71vgCQne3DLsj+A5owkum+a2tYe+TOCB1ybHNo=\ngithub.com/onsi/gomega v1.36.1 h1:bJDPBO7ibjxcbHMgSCoo4Yj18UWbKDlLwX1x9sybDcw=\ngithub.com/onsi/gomega v1.36.1/go.mod h1:PvZbdDc8J6XJEpDK4HCuRBm8a6Fzp9/DmhC9C7yFlog=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.1.0 h1:8SG7/vwALn54lVB/0yZ/MMwhFrPYtpEHQb2IpWsCzug=\ngithub.com/opencontainers/image-spec v1.1.0/go.mod h1:W4s4sFTMaBeK1BQLXbG4AdM2szdn85PY75RI83NrTrM=\ngithub.com/opencontainers/runc v1.1.14 h1:rgSuzbmgz5DUJjeSnw337TxDbRuqjs6iqQck/2weR6w=\ngithub.com/opencontainers/runc v1.1.14/go.mod h1:E4C2z+7BxR7GHXp0hAY53mek+x49X1LjPNeMTfRGvOA=\ngithub.com/opencontainers/runtime-spec v1.2.0 h1:z97+pHb3uELt/yiAWD691HNHQIF07bE7dzrbT927iTk=\ngithub.com/opencontainers/runtime-spec v1.2.0/go.mod h1:jwyrGlmzljRJv/Fgzds9SsS/C5hL+LL3ko9hs6T5lQ0=\ngithub.com/opencontainers/selinux v1.11.0 h1:+5Zbo97w3Lbmb3PeqQtpmTkMwsW5nRI3YaLpt7tQ7oU=\ngithub.com/opencontainers/selinux v1.11.0/go.mod h1:E5dMC3VPuVvVHDYmi78qvhJp8+M586T4DlDRYpFkyec=\ngithub.com/patrickmn/go-cache v2.1.0+incompatible h1:HRMgzkcYKYpi3C8ajMPV8OFXaaRUnok+kx1WdO15EQc=\ngithub.com/patrickmn/go-cache v2.1.0+incompatible/go.mod h1:3Qf8kWWT7OJRJbdiICTKqZju1ZixQ/KpMGzzAfe6+WQ=\ngithub.com/pelletier/go-toml v1.9.5 h1:4yBQzkHv+7BHq2PQUZF3Mx0IYxG7LsP222s7Agd3ve8=\ngithub.com/pelletier/go-toml v1.9.5/go.mod h1:u1nR/EPcESfeI/szUZKdtJ0xRNbUoANCkoOuaOx1Y+c=\ngithub.com/pelletier/go-toml/v2 v2.2.2 h1:aYUidT7k73Pcl9nb2gScu7NSrKCSHIDE89b3+6Wq+LM=\ngithub.com/pelletier/go-toml/v2 v2.2.2/go.mod h1:1t835xjRzz80PqgE6HHgN2JOsmgYu/h4qDAS4n929Rs=\ngithub.com/peterbourgon/diskv v2.0.1+incompatible h1:UBdAOUP5p4RWqPBg048CAvpKN+vxiaj6gdUUzhl4XmI=\ngithub.com/peterbourgon/diskv v2.0.1+incompatible/go.mod h1:uqqh8zWWbv1HBMNONnaR/tNboyR3/BZd58JJSHlUSCU=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10 h1:GFCKgmp0tecUJ0sJuv4pzYCqS9+RGSn52M3FUwPs+uo=\ngithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10/go.mod h1:t/avpk3KcrXxUnYOhZhMXJlSEyie6gQbtLq5NM3loB8=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/power-devops/perfstat v0.0.0-20210106213030-5aafc221ea8c h1:ncq/mPwQF4JjgDlrVEn3C11VoGHZN7m8qihwgMEtzYw=\ngithub.com/power-devops/perfstat v0.0.0-20210106213030-5aafc221ea8c/go.mod h1:OmDBASR4679mdNQnz2pUhc2G8CO2JrUAVFDRBDP/hJE=\ngithub.com/pquerna/otp v1.4.0 h1:wZvl1TIVxKRThZIBiwOOHOGP/1+nZyWBil9Y2XNEDzg=\ngithub.com/pquerna/otp v1.4.0/go.mod h1:dkJfzwRKNiegxyNb54X/3fLwhCynbMspSyWKnvi1AEg=\ngithub.com/projectcalico/go-json v0.0.0-20161128004156-6219dc7339ba h1:aaF2byUCZhzszHsfPEr2M3qcU4ibtD/yk/il2R7T1PU=\ngithub.com/projectcalico/go-json v0.0.0-20161128004156-6219dc7339ba/go.mod h1:q8EdCgBdMQzgiX/uk4GXLWLk+gIHd1a7mWUAamJKDb4=\ngithub.com/projectcalico/go-yaml-wrapper v0.0.0-20191112210931-090425220c54 h1:Jt2Pic9dxgJisekm8q2WV9FaWxUJhhRfwHSP640drww=\ngithub.com/projectcalico/go-yaml-wrapper v0.0.0-20191112210931-090425220c54/go.mod h1:UgC0aTQ2KMDxlX3lU/stndk7DMUBJqzN40yFiILHgxc=\ngithub.com/prometheus/client_golang v1.20.5 h1:cxppBPuYhUnsO6yo/aoRol4L7q7UFfdm+bR9r+8l63Y=\ngithub.com/prometheus/client_golang v1.20.5/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=\ngithub.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=\ngithub.com/prometheus/common v0.61.0 h1:3gv/GThfX0cV2lpO7gkTUwZru38mxevy90Bj8YFSRQQ=\ngithub.com/prometheus/common v0.61.0/go.mod h1:zr29OCN/2BsJRaFwG8QOBr41D6kkchKbpeNH7pAjb/s=\ngithub.com/prometheus/procfs v0.15.1 h1:YagwOFzUgYfKKHX6Dr+sHT7km/hxC76UB0learggepc=\ngithub.com/prometheus/procfs v0.15.1/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=\ngithub.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec h1:W09IVJc94icq4NjY3clb7Lk8O1qJ8BdBEF8z0ibU0rE=\ngithub.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec/go.mod h1:qqbHyh8v60DhA7CoWK5oRCqLrMHRGoxYCSS9EjAz6Eo=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/safchain/ethtool v0.5.9 h1://6RvaOKFf3nQ0rl5+8zBbE4/72455VC9Jq61pfq67E=\ngithub.com/safchain/ethtool v0.5.9/go.mod h1:w8oSsZeowyRaM7xJJBAbubzzrOkwO8TBgPSEqPP/5mg=\ngithub.com/sagikazarmark/locafero v0.4.0 h1:HApY1R9zGo4DBgr7dqsTH/JJxLTTsOt7u6keLGt6kNQ=\ngithub.com/sagikazarmark/locafero v0.4.0/go.mod h1:Pe1W6UlPYUk/+wc/6KFhbORCfqzgYEpgQ3O5fPuL3H4=\ngithub.com/sagikazarmark/slog-shim v0.1.0 h1:diDBnUNK9N/354PgrxMywXnAwEr1QZcOr6gto+ugjYE=\ngithub.com/sagikazarmark/slog-shim v0.1.0/go.mod h1:SrcSrq8aKtyuqEI1uvTDTK1arOWRIczQRv+GVI1AkeQ=\ngithub.com/seccomp/libseccomp-golang v0.10.0 h1:aA4bp+/Zzi0BnWZ2F1wgNBs5gTpm+na2rWM6M9YjLpY=\ngithub.com/seccomp/libseccomp-golang v0.10.0/go.mod h1:JA8cRccbGaA1s33RQf7Y1+q9gHmZX1yB/z9WDN1C6fg=\ngithub.com/sergi/go-diff v1.3.1 h1:xkr+Oxo4BOQKmkn/B9eMK0g5Kg/983T9DqqPHwYqD+8=\ngithub.com/sergi/go-diff v1.3.1/go.mod h1:aMJSSKb2lpPvRNec0+w3fl7LP9IOFzdc9Pa4NFbPK1I=\ngithub.com/shirou/gopsutil/v4 v4.24.11 h1:WaU9xqGFKvFfsUv94SXcUPD7rCkU0vr/asVdQOBZNj8=\ngithub.com/shirou/gopsutil/v4 v4.24.11/go.mod h1:s4D/wg+ag4rG0WO7AiTj2BeYCRhym0vM7DHbZRxnIT8=\ngithub.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/skeema/knownhosts v1.3.0 h1:AM+y0rI04VksttfwjkSTNQorvGqmwATnvnAHpSgc0LY=\ngithub.com/skeema/knownhosts v1.3.0/go.mod h1:sPINvnADmT/qYH1kfv+ePMmOBTH6Tbl7b5LvTDjFK7M=\ngithub.com/slack-go/slack v0.15.0 h1:LE2lj2y9vqqiOf+qIIy0GvEoxgF1N5yLGZffmEZykt0=\ngithub.com/slack-go/slack v0.15.0/go.mod h1:hlGi5oXA+Gt+yWTPP0plCdRKmjsDxecdHxYQdlMQKOw=\ngithub.com/soheilhy/cmux v0.1.5 h1:jjzc5WVemNEDTLwv9tlmemhC73tI08BNOIGwBOo10Js=\ngithub.com/soheilhy/cmux v0.1.5/go.mod h1:T7TcVDs9LWfQgPlPsdngu6I6QIoyIFZDDC6sNE1GqG0=\ngithub.com/sourcegraph/conc v0.3.0 h1:OQTbbt6P72L20UqAkXXuLOj79LfEanQ+YQFNpLA9ySo=\ngithub.com/sourcegraph/conc v0.3.0/go.mod h1:Sdozi7LEKbFPqYX2/J+iBAM6HpqSLTASQIKqDmF7Mt0=\ngithub.com/spf13/afero v1.11.0 h1:WJQKhtpdm3v2IzqG8VMqrr6Rf3UYpEF239Jy9wNepM8=\ngithub.com/spf13/afero v1.11.0/go.mod h1:GH9Y3pIexgf1MTIWtNGyogA5MwRIDXGUr+hbWNoBjkY=\ngithub.com/spf13/cast v1.6.0 h1:GEiTHELF+vaR5dhz3VqZfFSzZjYbgeKDpBxQVS4GYJ0=\ngithub.com/spf13/cast v1.6.0/go.mod h1:ancEpBxwJDODSW/UG4rDrAqiKolqNNh2DX3mk86cAdo=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/spf13/viper v1.19.0 h1:RWq5SEjt8o25SROyN3z2OrDB9l7RPd3lwTWU8EcEdcI=\ngithub.com/spf13/viper v1.19.0/go.mod h1:GQUN9bilAbhU/jgc1bKs99f/suXKeUMct8Adx5+Ntkg=\ngithub.com/stoewer/go-strcase v1.2.0 h1:Z2iHWqGXH00XYgqDmNgQbIBxf3wrNq0F3feEy0ainaU=\ngithub.com/stoewer/go-strcase v1.2.0/go.mod h1:IBiWB2sKIp3wVVQ3Y035++gc+knqhUQag1KpM8ahLw8=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2 h1:xuMeJ0Sdp5ZMRXx/aWO6RZxdr3beISkG5/G/aIRr3pY=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/subosito/gotenv v1.6.0 h1:9NlTDc1FTs4qu0DDq7AEtTPNw6SVm7uBMsUCUjABIf8=\ngithub.com/subosito/gotenv v1.6.0/go.mod h1:Dk4QP5c2W3ibzajGcXpNraDfq2IrhjMIvMSWPKKo0FU=\ngithub.com/syndtr/gocapability v0.0.0-20200815063812-42c35b437635 h1:kdXcSzyDtseVEc4yCz2qF8ZrQvIDBJLl4S1c3GCXmoI=\ngithub.com/syndtr/gocapability v0.0.0-20200815063812-42c35b437635/go.mod h1:hkRG7XYTFWNJGYcbNJQlaLq0fg1yr4J4t/NcTQtrfww=\ngithub.com/tchap/go-patricia/v2 v2.3.1 h1:6rQp39lgIYZ+MHmdEq4xzuk1t7OdC35z/xm0BGhTkes=\ngithub.com/tchap/go-patricia/v2 v2.3.1/go.mod h1:VZRHKAb53DLaG+nA9EaYYiaEx6YztwDlLElMsnSHD4k=\ngithub.com/termie/go-shutil v0.0.0-20140729215957-bcacb06fecae h1:vgGSvdW5Lqg+I1aZOlG32uyE6xHpLdKhZzcTEktz5wM=\ngithub.com/termie/go-shutil v0.0.0-20140729215957-bcacb06fecae/go.mod h1:quDq6Se6jlGwiIKia/itDZxqC5rj6/8OdFyMMAwTxCs=\ngithub.com/texttheater/golang-levenshtein v1.0.1 h1:+cRNoVrfiwufQPhoMzB6N0Yf/Mqajr6t1lOv8GyGE2U=\ngithub.com/texttheater/golang-levenshtein v1.0.1/go.mod h1:PYAKrbF5sAiq9wd+H82hs7gNaen0CplQ9uvm6+enD/8=\ngithub.com/tklauser/go-sysconf v0.3.12 h1:0QaGUFOdQaIVdPgfITYzaTegZvdCjmYO52cSFAEVmqU=\ngithub.com/tklauser/go-sysconf v0.3.12/go.mod h1:Ho14jnntGE1fpdOqQEEaiKRpvIavV0hSfmBq8nJbHYI=\ngithub.com/tklauser/numcpus v0.6.1 h1:ng9scYS7az0Bk4OZLvrNXNSAO2Pxr1XXRAPyjhIx+Fk=\ngithub.com/tklauser/numcpus v0.6.1/go.mod h1:1XfjsgE2zo8GVw7POkMbHENHzVg3GzmoZ9fESEdAacY=\ngithub.com/tmc/grpc-websocket-proxy v0.0.0-20220101234140-673ab2c3ae75 h1:6fotK7otjonDflCTK0BCfls4SPy3NcCVb5dqqmbRknE=\ngithub.com/tmc/grpc-websocket-proxy v0.0.0-20220101234140-673ab2c3ae75/go.mod h1:KO6IkyS8Y3j8OdNO85qEYBsRPuteD+YciPomcXdrMnk=\ngithub.com/urfave/cli v1.22.2/go.mod h1:Gos4lmkARVdJ6EkW0WaNv/tZAAMe9V7XWyB60NtXRu0=\ngithub.com/urfave/cli v1.22.16 h1:MH0k6uJxdwdeWQTwhSO42Pwr4YLrNLwBtg1MRgTqPdQ=\ngithub.com/urfave/cli v1.22.16/go.mod h1:EeJR6BKodywf4zciqrdw6hpCPk68JO9z5LazXZMn5Po=\ngithub.com/urfave/cli/v2 v2.27.5 h1:WoHEJLdsXr6dDWoJgMq/CboDmyY/8HMMH1fTECbih+w=\ngithub.com/urfave/cli/v2 v2.27.5/go.mod h1:3Sevf16NykTbInEnD0yKkjDAeZDS0A6bzhBH5hrMvTQ=\ngithub.com/virtuald/go-ordered-json v0.0.0-20170621173500-b18e6e673d74 h1:JwtAtbp7r/7QSyGz8mKUbYJBg2+6Cd7OjM8o/GNOcVo=\ngithub.com/virtuald/go-ordered-json v0.0.0-20170621173500-b18e6e673d74/go.mod h1:RmMWU37GKR2s6pgrIEB4ixgpVCt/cf7dnJv3fuH1J1c=\ngithub.com/vishvananda/netlink v1.2.1-beta.2.0.20240703200800-b54f85093f4a h1:n9iF7t9sLw43CwPLvPZkCfsFEGvoR2A63W8OEjuQqJ4=\ngithub.com/vishvananda/netlink v1.2.1-beta.2.0.20240703200800-b54f85093f4a/go.mod h1:whJevzBpTrid75eZy99s3DqCmy05NfibNaF2Ol5Ox5A=\ngithub.com/vishvananda/netns v0.0.0-20200728191858-db3c7e526aae/go.mod h1:DD4vA1DwXk04H54A1oHXtwZmA0grkVMdPxx/VGLCah0=\ngithub.com/vishvananda/netns v0.0.4 h1:Oeaw1EM2JMxD51g9uhtC0D7erkIjgmj8+JZc26m1YX8=\ngithub.com/vishvananda/netns v0.0.4/go.mod h1:SpkAiCQRtJ6TvvxPnOSyH3BMl6unz3xZlaprSwhNNJM=\ngithub.com/x448/float16 v0.8.4 h1:qLwI1I70+NjRFUR3zs1JPUCgaCXSh3SW62uAKT1mSBM=\ngithub.com/x448/float16 v0.8.4/go.mod h1:14CWIYCyZA/cWjXOioeEpHeN/83MdbZDRQHoFcYsOfg=\ngithub.com/xiang90/probing v0.0.0-20190116061207-43a291ad63a2 h1:eY9dn8+vbi4tKz5Qo6v2eYzo7kUS51QINcR5jNpbZS8=\ngithub.com/xiang90/probing v0.0.0-20190116061207-43a291ad63a2/go.mod h1:UETIi67q53MR2AWcXfiuqkDkRtnGDLqkBTpCHuJHxtU=\ngithub.com/xlab/treeprint v1.2.0 h1:HzHnuAF1plUN2zGlAFHbSQP2qJ0ZAD3XF5XD7OesXRQ=\ngithub.com/xlab/treeprint v1.2.0/go.mod h1:gj5Gd3gPdKtR1ikdDK6fnFLdmIS0X30kTTuNd/WEJu0=\ngithub.com/xrash/smetrics v0.0.0-20240521201337-686a1a2994c1 h1:gEOO8jv9F4OT7lGCjxCBTO/36wtF6j2nSip77qHd4x4=\ngithub.com/xrash/smetrics v0.0.0-20240521201337-686a1a2994c1/go.mod h1:Ohn+xnUBiLI6FVj/9LpzZWtj1/D6lUovWYBkxHVV3aM=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngithub.com/yusufpapurcu/wmi v1.2.4 h1:zFUKzehAFReQwLys1b/iSMl+JQGSCSjtVqQn9bBrPo0=\ngithub.com/yusufpapurcu/wmi v1.2.4/go.mod h1:SBZ9tNy3G9/m5Oi98Zks0QjeHVDvuK0qfxQmPyzfmi0=\ngo.etcd.io/bbolt v1.3.10 h1:+BqfJTcCzTItrop8mq/lbzL8wSGtj94UO/3U31shqG0=\ngo.etcd.io/bbolt v1.3.10/go.mod h1:bK3UQLPJZly7IlNmV7uVHJDxfe5aK9Ll93e/74Y9oEQ=\ngo.etcd.io/etcd/api/v3 v3.5.17 h1:cQB8eb8bxwuxOilBpMJAEo8fAONyrdXTHUNcMd8yT1w=\ngo.etcd.io/etcd/api/v3 v3.5.17/go.mod h1:d1hvkRuXkts6PmaYk2Vrgqbv7H4ADfAKhyJqHNLJCB4=\ngo.etcd.io/etcd/client/pkg/v3 v3.5.17 h1:XxnDXAWq2pnxqx76ljWwiQ9jylbpC4rvkAeRVOUKKVw=\ngo.etcd.io/etcd/client/pkg/v3 v3.5.17/go.mod h1:4DqK1TKacp/86nJk4FLQqo6Mn2vvQFBmruW3pP14H/w=\ngo.etcd.io/etcd/client/v2 v2.305.17 h1:ajFukQfI//xY5VuSeuUw4TJ4WnNR2kAFfV/P0pDdPMs=\ngo.etcd.io/etcd/client/v2 v2.305.17/go.mod h1:EttKgEgvwikmXN+b7pkEWxDZr6sEaYsqCiS3k4fa/Vg=\ngo.etcd.io/etcd/client/v3 v3.5.17 h1:o48sINNeWz5+pjy/Z0+HKpj/xSnBkuVhVvXkjEXbqZY=\ngo.etcd.io/etcd/client/v3 v3.5.17/go.mod h1:j2d4eXTHWkT2ClBgnnEPm/Wuu7jsqku41v9DZ3OtjQo=\ngo.etcd.io/etcd/pkg/v3 v3.5.13 h1:st9bDWNsKkBNpP4PR1MvM/9NqUPfvYZx/YXegsYEH8M=\ngo.etcd.io/etcd/pkg/v3 v3.5.13/go.mod h1:N+4PLrp7agI/Viy+dUYpX7iRtSPvKq+w8Y14d1vX+m0=\ngo.etcd.io/etcd/raft/v3 v3.5.13 h1:7r/NKAOups1YnKcfro2RvGGo2PTuizF/xh26Z2CTAzA=\ngo.etcd.io/etcd/raft/v3 v3.5.13/go.mod h1:uUFibGLn2Ksm2URMxN1fICGhk8Wu96EfDQyuLhAcAmw=\ngo.etcd.io/etcd/server/v3 v3.5.13 h1:V6KG+yMfMSqWt+lGnhFpP5z5dRUj1BDRJ5k1fQ9DFok=\ngo.etcd.io/etcd/server/v3 v3.5.13/go.mod h1:K/8nbsGupHqmr5MkgaZpLlH1QdX1pcNQLAkODy44XcQ=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.opentelemetry.io/contrib/instrumentation/github.com/emicklei/go-restful/otelrestful v0.46.1 h1:6l13V1yADBiPaUz+tExvNHHO2jF9RbxZsmea3POmlmc=\ngo.opentelemetry.io/contrib/instrumentation/github.com/emicklei/go-restful/otelrestful v0.46.1/go.mod h1:lqAQ/iU6CDKDWb73W3wNIit+0uL8EIqli8CdBdnThVo=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.54.0 h1:r6I7RJCN86bpD/FQwedZ0vSixDpwuWREjW9oRMsmqDc=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.54.0/go.mod h1:B9yO6b04uB80CzjedvewuqDhxJxi11s7/GtiGa8bAjI=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0 h1:TT4fX+nBOA/+LUkobKGW1ydGcn+G3vRw9+g5HwCphpk=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0/go.mod h1:L7UH0GbB0p47T4Rri3uHjbpCFYrVrwc1I25QhNPiGK8=\ngo.opentelemetry.io/contrib/propagators/b3 v1.21.1 h1:WPYiUgmw3+b7b3sQ1bFBFAf0q+Di9dvNc3AtYfnT4RQ=\ngo.opentelemetry.io/contrib/propagators/b3 v1.21.1/go.mod h1:EmzokPoSqsYMBVK4nRnhsfm5mbn8J1eDuz/U1UaQaWg=\ngo.opentelemetry.io/otel v1.31.0 h1:NsJcKPIW0D0H3NgzPDHmo0WW6SptzPdqg/L1zsIm2hY=\ngo.opentelemetry.io/otel v1.31.0/go.mod h1:O0C14Yl9FgkjqcCZAsE053C13OaddMYr/hz6clDkEJE=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0 h1:3Q/xZUyC1BBkualc9ROb4G8qkH90LXEIICcs5zv1OYY=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0/go.mod h1:s75jGIWA9OfCMzF0xr+ZgfrB5FEbbV7UuYo32ahUiFI=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.27.0 h1:qFffATk0X+HD+f1Z8lswGiOQYKHRlzfmdJm0wEaVrFA=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.27.0/go.mod h1:MOiCmryaYtc+V0Ei+Tx9o5S1ZjA7kzLucuVuyzBZloQ=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.21.0 h1:digkEZCJWobwBqMwC0cwCq8/wkkRy/OowZg5OArWZrM=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.21.0/go.mod h1:/OpE/y70qVkndM0TrxT4KBoN3RsFZP0QaofcfYrj76I=\ngo.opentelemetry.io/otel/metric v1.31.0 h1:FSErL0ATQAmYHUIzSezZibnyVlft1ybhy4ozRPcF2fE=\ngo.opentelemetry.io/otel/metric v1.31.0/go.mod h1:C3dEloVbLuYoX41KpmAhOqNriGbA+qqH6PQ5E5mUfnY=\ngo.opentelemetry.io/otel/sdk v1.31.0 h1:xLY3abVHYZ5HSfOg3l2E5LUj2Cwva5Y7yGxnSW9H5Gk=\ngo.opentelemetry.io/otel/sdk v1.31.0/go.mod h1:TfRbMdhvxIIr/B2N2LQW2S5v9m3gOQ/08KsbbO5BPT0=\ngo.opentelemetry.io/otel/sdk/metric v1.31.0 h1:i9hxxLJF/9kkvfHppyLL55aW7iIJz4JjxTeYusH7zMc=\ngo.opentelemetry.io/otel/sdk/metric v1.31.0/go.mod h1:CRInTMVvNhUKgSAMbKyTMxqOBC0zgyxzW55lZzX43Y8=\ngo.opentelemetry.io/otel/trace v1.31.0 h1:ffjsj1aRouKewfr85U2aGagJ46+MvodynlQ1HYdmJys=\ngo.opentelemetry.io/otel/trace v1.31.0/go.mod h1:TXZkRk7SM2ZQLtR6eoAWQFIHPvzQ06FJAsO1tJg480A=\ngo.opentelemetry.io/proto/otlp v1.3.1 h1:TrMUixzpM0yuc/znrFTP9MMRh8trP93mkCiDVeXrui0=\ngo.opentelemetry.io/proto/otlp v1.3.1/go.mod h1:0X1WI4de4ZsLrrJNLAQbFeLCm3T7yBkR0XqQ7niQU+8=\ngo.starlark.net v0.0.0-20230525235612-a134d8f9ddca h1:VdD38733bfYv5tUZwEIskMM93VanwNIi5bIKnDrJdEY=\ngo.starlark.net v0.0.0-20230525235612-a134d8f9ddca/go.mod h1:jxU+3+j+71eXOW14274+SmmuW82qJzl6iZSeqEtTGds=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\ngo.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=\ngo.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=\ngo.uber.org/zap v1.26.0 h1:sI7k6L95XOKS281NhVKOFCUNIvv9e0w4BF8N3u+tCRo=\ngo.uber.org/zap v1.26.0/go.mod h1:dtElttAiwGvoJ/vj4IwHBS/gXsEu/pZ50mUIRWuG0so=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191002192127-34f69633bfdc/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200204104054-c9f3fb736b72/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20240719175910-8a7402abbf56 h1:2dVuKD2vS7b0QIHQbpyTISPd0LeHDbnYEryqj5Q1ug8=\ngolang.org/x/exp v0.0.0-20240719175910-8a7402abbf56/go.mod h1:M4RDyNAINzryxdtnbRXRL/OHtkFuWGRjvuhBJpk2IlY=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20200302205851-738671d3881b/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190827160401-ba9fcec4b297/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20191003171128-d98b1b443823/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20191007182048-72f939374954/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200520004742-59133d7f0dd7/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=\ngolang.org/x/net v0.33.0 h1:74SYHlV8BIgHIFC/LrYkOGIwL19eTYXQ5wc6TBuO36I=\ngolang.org/x/net v0.33.0/go.mod h1:HXLR5J+9DxmrqMwG9qjGCxZ+zKXxBru04zlTvWlWuN4=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.24.0 h1:KTBBxWqUa0ykRPLtV69rRto9TLXcqYkeswu48x/gvNE=\ngolang.org/x/oauth2 v0.24.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190411185658-b44545bcd369/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190826190057-c7b8b68b1456/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190904154756-749cb33beabd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190916202348-b4ddaad3f8a3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191003212358-c178f38b412c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191005200804-aed5e4c7ecf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191008105621-543471e840be/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191120155948-bd437916bb0e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200217220822-9197077df867/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201204225414-ed752295db88/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210112080510-489259a85091/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211007075335-d3039528d8ac/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.10.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.11.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.16.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.27.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.27.0 h1:WP60Sv1nlK1T6SupCHbXzSaN0b9wUmsPoRS9b61A23Q=\ngolang.org/x/term v0.27.0/go.mod h1:iMsnZpn0cago0GOrHO2+Y7u7JPn5AylBrcoWkElMTSM=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.8.0 h1:9i3RxcPv3PZnitoVGMPDKZSq1xW1gK1Xy3ArNOGZfEg=\ngolang.org/x/time v0.8.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20201224043029-2b0845dc783e/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.1/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.26.0 h1:v/60pFQmzmT9ExmjDv2gGIfi3OqfKoEP6I5+umXlbnQ=\ngolang.org/x/tools v0.26.0/go.mod h1:TPVVj70c7JJ3WCazhD8OdXcZg/og+b9+tH/KxylGwH0=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.zx2c4.com/wireguard v0.0.20200121 h1:vcswa5Q6f+sylDfjqyrVNNrjsFUUbPsgAQTBCAg/Qf8=\ngolang.zx2c4.com/wireguard v0.0.20200121/go.mod h1:P2HsVp8SKwZEufsnezXZA4GRX/T49/HlU7DGuelXsU4=\ngolang.zx2c4.com/wireguard/wgctrl v0.0.0-20200324154536-ceff61240acf h1:rWUZHukj3poXegPQMZOXgxjTGIBe3mLNHNVvL5DsHus=\ngolang.zx2c4.com/wireguard/wgctrl v0.0.0-20200324154536-ceff61240acf/go.mod h1:UdS9frhv65KTfwxME1xE8+rHYoFpbm36gOud1GhBe9c=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20241113202542-65e8d215514f h1:zDoHYmMzMacIdjNe+P2XiTmPsLawi/pCbSPfxt6lTfw=\ngoogle.golang.org/genproto v0.0.0-20241113202542-65e8d215514f/go.mod h1:Q5m6g8b5KaFFzsQFIGdJkSJDGeJiybVenoYFMMa3ohI=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241104194629-dd2ea8efbc28 h1:M0KvPgPmDZHPlbRbaNU1APr28TvwvvdUPlSv7PUvy8g=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241104194629-dd2ea8efbc28/go.mod h1:dguCy7UOdZhTvLzDyt15+rOrawrpM4q7DD9dQ1P11P4=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241104194629-dd2ea8efbc28 h1:XVhgTWWV3kGQlwJHR3upFWZeTsei6Oks1apkZSeonIE=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241104194629-dd2ea8efbc28/go.mod h1:GX3210XPVPUjJbTUbvwI8f2IpZDMZuPJWDzDuebbviI=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.69.0 h1:quSiOM1GJPmPH5XtU+BCoVXcDVJJAzNcoyfC2cCjGkI=\ngoogle.golang.org/grpc v1.69.0/go.mod h1:vyjdE6jLBI76dgpDojsFGNaHlxdjXN9ghpnd2o7JGZ4=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.27.1/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.35.2 h1:8Ar7bF+apOIoThw1EdZl0p1oWvMqTHmpA2fRTyZO8io=\ngoogle.golang.org/protobuf v1.35.2/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/evanphx/json-patch.v4 v4.12.0 h1:n6jtcsulIzXPJaxegRbvFNNrZDjbij7ny3gmSPG+6V4=\ngopkg.in/evanphx/json-patch.v4 v4.12.0/go.mod h1:p8EYWUEYMpynmqDbY58zCKCFZw8pRWMG4EsWvDvM72M=\ngopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=\ngopkg.in/go-playground/assert.v1 v1.2.1 h1:xoYuJVE7KT85PYWrN730RguIQO0ePzVRfFMXadIrXTM=\ngopkg.in/go-playground/assert.v1 v1.2.1/go.mod h1:9RXL0bg/zibRAgZUYszZSwO/z8Y/a8bDuhia5mkpMnE=\ngopkg.in/go-playground/validator.v9 v9.30.2 h1:icxYLlYflpazIV3ufMoNB9h9SYMQ37DZ8CTwkU4pnOs=\ngopkg.in/go-playground/validator.v9 v9.30.2/go.mod h1:+c9/zcJMFNgbLvly1L1V+PpxWdVbfP1avr/N00E2vyQ=\ngopkg.in/inf.v0 v0.9.1 h1:73M5CoZyi3ZLMOyDlQh031Cx6N9NDJ2Vvfl76EDAgDc=\ngopkg.in/inf.v0 v0.9.1/go.mod h1:cWUDdTG/fYaXco+Dcufb5Vnc6Gp2YChqWtbxRZE0mXw=\ngopkg.in/ini.v1 v1.67.0 h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=\ngopkg.in/ini.v1 v1.67.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/natefinch/lumberjack.v2 v2.2.1 h1:bBRl1b0OH9s/DuPhuXpNl+VtCaJXFZ5/uEFST95x9zc=\ngopkg.in/natefinch/lumberjack.v2 v2.2.1/go.mod h1:YD8tP3GAjkrDg1eZH7EGmyESg/lsYskCTPBJVb9jqSc=\ngopkg.in/square/go-jose.v2 v2.6.0 h1:NGk74WTnPKBNUhNzQX7PYcTLUjoq7mzKk2OKbvwk2iI=\ngopkg.in/square/go-jose.v2 v2.6.0/go.mod h1:M9dMgbHiYLoDGQrXy7OpJDJWiKiU//h+vD76mk0e1AI=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngotest.tools/v3 v3.5.1 h1:EENdUnS3pdur5nybKYIh2Vfgc8IUNBjxDPSjtiJcOzU=\ngotest.tools/v3 v3.5.1/go.mod h1:isy3WKz7GK6uNw/sbHzfKBLvlvXwUyV06n6brMxxopU=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nk8s.io/api v0.31.4 h1:I2QNzitPVsPeLQvexMEsj945QumYraqv9m74isPDKhM=\nk8s.io/api v0.31.4/go.mod h1:d+7vgXLvmcdT1BCo79VEgJxHHryww3V5np2OYTr6jdw=\nk8s.io/apiextensions-apiserver v0.31.4 h1:FxbqzSvy92Ca9DIs5jqot883G0Ln/PGXfm/07t39LS0=\nk8s.io/apiextensions-apiserver v0.31.4/go.mod h1:hIW9YU8UsqZqIWGG99/gsdIU0Ar45Qd3A12QOe/rvpg=\nk8s.io/apimachinery v0.31.4 h1:8xjE2C4CzhYVm9DGf60yohpNUh5AEBnPxCryPBECmlM=\nk8s.io/apimachinery v0.31.4/go.mod h1:rsPdaZJfTfLsNJSQzNHQvYoTmxhoOEofxtOsF3rtsMo=\nk8s.io/apiserver v0.31.4 h1:JbtnTaXVYEAYIHJil6Wd74Wif9sd8jVcBw84kwEmp7o=\nk8s.io/apiserver v0.31.4/go.mod h1:JJjoTjZ9PTMLdIFq7mmcJy2B9xLN3HeAUebW6xZyIP0=\nk8s.io/cli-runtime v0.31.4 h1:iczCWiyXaotW+hyF5cWP8RnEYBCzZfJUF6otJ2m9mw0=\nk8s.io/cli-runtime v0.31.4/go.mod h1:0/pRzAH7qc0hWx40ut1R4jLqiy2w/KnbqdaAI2eFG8U=\nk8s.io/client-go v0.31.4 h1:t4QEXt4jgHIkKKlx06+W3+1JOwAFU/2OPiOo7H92eRQ=\nk8s.io/client-go v0.31.4/go.mod h1:kvuMro4sFYIa8sulL5Gi5GFqUPvfH2O/dXuKstbaaeg=\nk8s.io/cloud-provider v0.31.4 h1:Oo6m0M2rbCjP9y+1VrZv1HZM6gQnKlpoma5F4CBUj/A=\nk8s.io/cloud-provider v0.31.4/go.mod h1:hESI9ZE73PSinPglQsfUWMG2+BSavvJgLm0qVqs02mU=\nk8s.io/cluster-bootstrap v0.31.4 h1:/jLYowVtnU3OCkEUOsiqWduBsHJyz8CrW3aHjyB5t/8=\nk8s.io/cluster-bootstrap v0.31.4/go.mod h1:J36a0uLKbTAYcJuf4k0oxcGvtA5iGGJFYqmnH+aaVTM=\nk8s.io/component-base v0.31.4 h1:wCquJh4ul9O8nNBSB8N/o8+gbfu3BVQkVw9jAUY/Qtw=\nk8s.io/component-base v0.31.4/go.mod h1:G4dgtf5BccwiDT9DdejK0qM6zTK0jwDGEKnCmb9+u/s=\nk8s.io/component-helpers v0.31.4 h1:pqokuXozyWVrVBMmx0AMcKqNWqXhR00OZvpAE5hG5NM=\nk8s.io/component-helpers v0.31.4/go.mod h1:Ddq5GYRK/1uNoPNgJh9N5osPutvBweQEcIG6b8kcvgQ=\nk8s.io/controller-manager v0.31.4 h1:cimcf024HJnSQsH60+vYWN7uP59gORefuSEMADxUE/o=\nk8s.io/controller-manager v0.31.4/go.mod h1:yPOuxohpbBEHHNmkcbAkOJ4P99ewo6rb03mhGUxszOs=\nk8s.io/cri-api v0.31.4 h1:UXUkhXXaTQH+ZPTrjtsY5M7MJ0cdeTLi9HmMeJfa1EY=\nk8s.io/cri-api v0.31.4/go.mod h1:Po3TMAYH/+KrZabi7QiwQI4a692oZcUOUThd/rqwxrI=\nk8s.io/cri-client v0.31.4 h1:mA70Ff3GnFedZX0ObF38kPHes8Iv7tiQirh961wKaCA=\nk8s.io/cri-client v0.31.4/go.mod h1:s4GmpQvR2X061p7TESE8xju7Au4WTbNYDz1+BySxzgI=\nk8s.io/csi-translation-lib v0.31.4 h1:DaOKDvr69j1dd7uAEpEvbttBIKxl2PK4UNmoWbVRKc8=\nk8s.io/csi-translation-lib v0.31.4/go.mod h1:BOsJkKE+yGXvXI2p0ICwI/YBL+oWqa7Vp8jTyPtlxUY=\nk8s.io/dynamic-resource-allocation v0.31.4 h1:W9yRCA1V4vUhprqrwNoRk5/HCJcw3g5pTRraCZr/QuE=\nk8s.io/dynamic-resource-allocation v0.31.4/go.mod h1:OsV+qFALV9PyRQHl7u+nNuLz1BBUmA7BuS8XIWFjbR4=\nk8s.io/klog/v2 v2.130.1 h1:n9Xl7H1Xvksem4KFG4PYbdQCQxqc/tTUyrgXaOhHSzk=\nk8s.io/klog/v2 v2.130.1/go.mod h1:3Jpz1GvMt720eyJH1ckRHK1EDfpxISzJ7I9OYgaDtPE=\nk8s.io/kms v0.31.4 h1:DVk9T1PHxG7IUMfWs1sDhBTbzGnM7lhMJO8lOzOzTIs=\nk8s.io/kms v0.31.4/go.mod h1:OZKwl1fan3n3N5FFxnW5C4V3ygrah/3YXeJWS3O6+94=\nk8s.io/kube-aggregator v0.31.4 h1:4hWVeNo4vLWstckMCo223cb9j7cCt7KD6b+RhQ8hTNE=\nk8s.io/kube-aggregator v0.31.4/go.mod h1:R1wXjopE/VgW947R1axTzwEmyuatUp/a2lKn/ZGo2yo=\nk8s.io/kube-openapi v0.0.0-20240430033511-f0e62f92d13f h1:0LQagt0gDpKqvIkAMPaRGcXawNMouPECM1+F9BVxEaM=\nk8s.io/kube-openapi v0.0.0-20240430033511-f0e62f92d13f/go.mod h1:S9tOR0FxgyusSNR+MboCuiDpVWkAifZvaYI1Q2ubgro=\nk8s.io/kube-scheduler v0.31.4 h1:K1+C7ezdTjfm/RxGCYznjAemqxk/pCTNZJmznClsEko=\nk8s.io/kube-scheduler v0.31.4/go.mod h1:+U3+HVAeJV5okJJ7Y0xk4+vl9l4YFORjYN1VHpCEDqk=\nk8s.io/kubectl v0.31.4 h1:c8Af8xd1VjyoKyWMW0xHv2+tYxEjne8s6OOziMmaD10=\nk8s.io/kubectl v0.31.4/go.mod h1:0E0rpXg40Q57wRE6LB9su+4tmwx1IzZrmIEvhQPk0i4=\nk8s.io/kubelet v0.31.4 h1:6TokbMv+HnFG7Oe9tVS/J0VPGdC4GnsQZXuZoo7Ixi8=\nk8s.io/kubelet v0.31.4/go.mod h1:8ZM5LZyANoVxUtmayUxD/nsl+6GjREo7kSanv8AoL4U=\nk8s.io/kubernetes v1.31.4 h1:VQDX52gTQnq8C/jCo48AQuDsWbWMh9XXxhQRDYjgakw=\nk8s.io/kubernetes v1.31.4/go.mod h1:9xmT2buyTYj8TRKwRae7FcuY8k5+xlxv7VivvO0KKfs=\nk8s.io/mount-utils v0.31.4 h1:9aWJ5BpJvs6fdIo36wWIuCC6ZMNllUT0JSFsVNJloFI=\nk8s.io/mount-utils v0.31.4/go.mod h1:HV/VYBUGqYUj4vt82YltzpWvgv8FPg0G9ItyInT3NPU=\nk8s.io/pod-security-admission v0.31.4 h1:9AAXFtyBoMijBh+K/6cbbfJmBpUUbD6gOwWV7vmP6iQ=\nk8s.io/pod-security-admission v0.31.4/go.mod h1:rc6AXwbawaNi9mQkthTNQmgSkbOCw23EC/eFN8gur/8=\nk8s.io/sample-apiserver v0.31.4 h1:B4AkywNn6/NdbNylTQ38xQabCJlhPH35yyHGSr6Lkyg=\nk8s.io/sample-apiserver v0.31.4/go.mod h1:hl3m+V2oPDqDOROqy+AMesXa0veI+tohVlHX7vkYMUg=\nk8s.io/utils v0.0.0-20240711033017-18e509b52bc8 h1:pUdcCO1Lk/tbT5ztQWOBi5HBgbBP1J8+AsQnQCKsi8A=\nk8s.io/utils v0.0.0-20240711033017-18e509b52bc8/go.mod h1:OLgZIPagt7ERELqWJFomSt595RzquPNLL48iOWgYOg0=\nmodernc.org/mathutil v1.6.0 h1:fRe9+AmYlaej+64JsEEhoWuAYBkOtQiMEU7n/XgfYi4=\nmodernc.org/mathutil v1.6.0/go.mod h1:Ui5Q9q1TR2gFm0AQRqQUaBWFLAhQpCwNcuhBOSedWPo=\nmodernc.org/memory v1.8.0 h1:IqGTL6eFMaDZZhEWwcREgeMXYwmW83LYW8cROZYkg+E=\nmodernc.org/memory v1.8.0/go.mod h1:XPZ936zp5OMKGWPqbD3JShgd/ZoQ7899TUuQqxY+peU=\nsigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.30.3 h1:2770sDpzrjjsAtVhSeUFseziht227YAWYHLGNM8QPwY=\nsigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.30.3/go.mod h1:Ve9uj1L+deCXFrPOk1LpFXqTg7LCFzFso6PA48q/XZw=\nsigs.k8s.io/controller-runtime v0.19.3 h1:XO2GvC9OPftRst6xWCpTgBZO04S2cbp0Qqkj8bX1sPw=\nsigs.k8s.io/controller-runtime v0.19.3/go.mod h1:j4j87DqtsThvwTv5/Tc5NFRyyF/RF0ip4+62tbTSIUM=\nsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd h1:EDPBXCAspyGV4jQlpZSudPeMmr1bNJefnuqLsRAsHZo=\nsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd/go.mod h1:B8JuhiUyNFVKdsE8h686QcCxMaH6HrOAZj4vswFpcB0=\nsigs.k8s.io/kind v0.25.0 h1:ugUvgesHKKA0yKmD6QtYTiEev+kPUpGxdTPbMGf8VTU=\nsigs.k8s.io/kind v0.25.0/go.mod h1:t7ueEpzPYJvHA8aeLtI52rtFftNgUYUaCwvxjk7phfw=\nsigs.k8s.io/knftables v0.0.18 h1:6Duvmu0s/HwGifKrtl6G3AyAPYlWiZqTgS8bkVMiyaE=\nsigs.k8s.io/knftables v0.0.18/go.mod h1:f/5ZLKYEUPUhVjUCg6l80ACdL7CIIyeL0DxfgojGRTk=\nsigs.k8s.io/kustomize/api v0.17.2 h1:E7/Fjk7V5fboiuijoZHgs4aHuexi5Y2loXlVOAVAG5g=\nsigs.k8s.io/kustomize/api v0.17.2/go.mod h1:UWTz9Ct+MvoeQsHcJ5e+vziRRkwimm3HytpZgIYqye0=\nsigs.k8s.io/kustomize/kyaml v0.17.1 h1:TnxYQxFXzbmNG6gOINgGWQt09GghzgTP6mIurOgrLCQ=\nsigs.k8s.io/kustomize/kyaml v0.17.1/go.mod h1:9V0mCjIEYjlXuCdYsSXvyoy2BTsLESH7TlGV81S282U=\nsigs.k8s.io/network-policy-api v0.1.5 h1:xyS7VAaM9EfyB428oFk7WjWaCK6B129i+ILUF4C8l6E=\nsigs.k8s.io/network-policy-api v0.1.5/go.mod h1:D7Nkr43VLNd7iYryemnj8qf0N/WjBzTZDxYA+g4u1/Y=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.1 h1:150L+0vs/8DA78h1u02ooW1/fFq/Lwr+sGiqlzvrtq4=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.1/go.mod h1:N8hJocpFajUSSeSJ9bOZ77VzejKZaXsTtZo4/u7Io08=\nsigs.k8s.io/yaml v1.4.0 h1:Mk1wCc2gy/F0THH0TAp1QYyJNzRm2KCLy3o5ASXVI5E=\nsigs.k8s.io/yaml v1.4.0/go.mod h1:Ejl7/uTz7PSA4eKMyQCUTnhZYNmLIl+5c2lQPGR2BPY=\n"
        },
        {
          "name": "hack",
          "type": "tree",
          "content": null
        },
        {
          "name": "key-cert-provisioner",
          "type": "tree",
          "content": null
        },
        {
          "name": "kube-controllers",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib.Makefile",
          "type": "blob",
          "size": 72.271484375,
          "content": "# Disable built-in rules\n.SUFFIXES:\n\n# Shortcut targets\ndefault: build\n\n## Build binary for current platform\nall: build\n\n## Run the tests for the current platform/architecture\ntest: ut fv st\n\n###############################################################################\n# Both native and cross architecture builds are supported.\n# The target architecture is select by setting the ARCH variable.\n# When ARCH is undefined it is set to the detected host architecture.\n# When ARCH differs from the host architecture a crossbuild will be performed.\n# This variable is only set if ARCHES is not set\nARCHES ?= $(patsubst docker-image/Dockerfile.%,%,$(wildcard docker-image/Dockerfile.*))\n\n# Some repositories keep their Dockerfile(s) in the root directory instead of in\n# the 'docker-image' subdir. Make sure ARCHES gets filled in either way.\nifeq ($(ARCHES),)\n\tARCHES=$(patsubst Dockerfile.%,%,$(wildcard Dockerfile.*))\nendif\n\n# If architectures cannot infer from Dockerfiles, set default supported architecture.\nifeq ($(ARCHES),)\n\tARCHES=amd64 arm64 ppc64le s390x\nendif\n\n# list of arches *not* to build when doing *-all\nEXCLUDEARCH?=\nVALIDARCHES = $(filter-out $(EXCLUDEARCH),$(ARCHES))\n\n# BUILDARCH is the host architecture\n# ARCH is the target architecture\n# we need to keep track of them separately\n# Note: OS is always set on Windows\nifeq ($(OS),Windows_NT)\nBUILDARCH = x86_64\nBUILDOS = x86_64\nelse\nBUILDARCH ?= $(shell uname -m)\nBUILDOS ?= $(shell uname -s | tr A-Z a-z)\nendif\n\n# canonicalized names for host architecture\nifeq ($(BUILDARCH),aarch64)\n\tBUILDARCH=arm64\nendif\nifeq ($(BUILDARCH),x86_64)\n\tBUILDARCH=amd64\nendif\n\n# unless otherwise set, I am building for my own architecture, i.e. not cross-compiling\nARCH ?= $(BUILDARCH)\n\n# canonicalized names for target architecture\nifeq ($(ARCH),aarch64)\n\toverride ARCH=arm64\nendif\nifeq ($(ARCH),x86_64)\n\toverride ARCH=amd64\nendif\n\n# detect the local outbound ip address\nLOCAL_IP_ENV?=$(shell ip route get 8.8.8.8 | head -1 | awk '{print $$7}')\n\nLATEST_IMAGE_TAG?=latest\n\n# these macros create a list of valid architectures for pushing manifests\ncomma := ,\ndouble_quote := $(shell echo '\"')\n\n## Targets used when cross building.\n.PHONY: native register\nnative:\nifneq ($(BUILDARCH),$(ARCH))\n\t@echo \"Target $(MAKECMDGOALS)\" is not supported when cross building! && false\nendif\n\n# Enable binfmt adding support for miscellaneous binary formats.\n# This is only needed when running non-native binaries.\nregister:\nifneq ($(BUILDARCH),$(ARCH))\n\tdocker run --rm --privileged multiarch/qemu-user-static:register || true\nendif\n\n# If this is a release, also tag and push additional images.\nifeq ($(RELEASE),true)\nPUSH_IMAGES+=$(RELEASE_IMAGES)\nendif\n\nDOCKERHUB_REGISTRY ?=registry.hub.docker.com\n# filter-registry filters out registries we don't want to include when tagging / pushing docker images. For instance,\n# we don't include the registry name when pushing to docker hub because that registry is the default.\nfilter-registry ?= $(if $(filter-out $(1),$(DOCKERHUB_REGISTRY)),$(1)/)\n\n# Convenience function to get the first dev image repo in the list.\nDEV_REGISTRY ?= $(firstword $(DEV_REGISTRIES))\n\n# remove from the list to push to manifest any registries that do not support multi-arch\nMANIFEST_REGISTRIES         ?= $(DEV_REGISTRIES)\n\nPUSH_MANIFEST_IMAGES := $(foreach registry,$(MANIFEST_REGISTRIES),$(foreach image,$(BUILD_IMAGES),$(call filter-registry,$(registry))$(image)))\n\n# location of docker credentials to push manifests\nDOCKER_CONFIG ?= $(HOME)/.docker/config.json\n\n# If a repository still relies on vendoring, it must set GOMOD_VENDOR to \"true\".\n# If that's not the case and we're running in CI, set -mod=readonly to prevent builds\n# from being flagged as dirty due to updates in go.mod or go.sum _except_ for:\n# - for local builds, which _require_ a change to go.mod.\n# - the targets 'commit-pin-updates' and  'golangci-lint' which require\n#   updating go.mod and/or go.sum\nSKIP_GOMOD_READONLY_FLAG =\nifeq ($(MAKECMDGOALS),commit-pin-updates)\n\tSKIP_GOMOD_READONLY_FLAG = yes\nendif\nifeq ($(MAKECMDGOALS),golangci-lint)\n\tSKIP_GOMOD_READONLY_FLAG = yes\nendif\n\nifeq ($(GOMOD_VENDOR),true)\n\tGOFLAGS?=\"-mod=vendor\"\nelse\nifeq ($(CI),true)\nifndef SKIP_GOMOD_READONLY_FLAG\n\tGOFLAGS?=\"-mod=readonly\"\nendif\nendif\nendif\n\n# For building, we use the go-build image for the *host* architecture, even if the target is different\n# the one for the host should contain all the necessary cross-compilation tools\n# we do not need to use the arch since go-build:v0.15 now is multi-arch manifest\nGO_BUILD_IMAGE ?= calico/go-build\nCALICO_BUILD    = $(GO_BUILD_IMAGE):$(GO_BUILD_VER)\n\n\n# We use BoringCrypto as FIPS validated cryptography in order to allow users to run in FIPS Mode (amd64 only).\nifeq ($(ARCH), $(filter $(ARCH),amd64))\nGOEXPERIMENT?=boringcrypto\nTAGS?=boringcrypto,osusergo,netgo\nCGO_ENABLED?=1\nelse\nCGO_ENABLED?=0\nendif\n\n# Build a binary with boring crypto support.\n# This function expects you to pass in two arguments:\n#   1st arg: path/to/input/package(s)\n#   2nd arg: path/to/output/binary\n# Only when arch = amd64 it will use boring crypto to build the binary.\n# Uses LDFLAGS, CGO_LDFLAGS, CGO_CFLAGS when set.\n# Tests that the resulting binary contains boringcrypto symbols.\ndefine build_cgo_boring_binary\n\t$(DOCKER_RUN) \\\n\t\t-e CGO_ENABLED=1 \\\n\t\t-e CGO_CFLAGS=$(CGO_CFLAGS) \\\n\t\t-e CGO_LDFLAGS=$(CGO_LDFLAGS) \\\n\t\t$(CALICO_BUILD) \\\n\t\tsh -c '$(GIT_CONFIG_SSH) GOEXPERIMENT=boringcrypto go build -o $(2) -tags fipsstrict -v -buildvcs=false -ldflags \"$(LDFLAGS)\" $(1) \\\n\t\t\t&& go tool nm $(2) | grep '_Cfunc__goboringcrypto_' 1> /dev/null'\nendef\n\n# Use this when building binaries that need cgo, but have no crypto and therefore would not contain any boring symbols.\ndefine build_cgo_binary\n\t$(DOCKER_RUN) \\\n\t\t-e CGO_ENABLED=1 \\\n\t\t-e CGO_CFLAGS=$(CGO_CFLAGS) \\\n\t\t-e CGO_LDFLAGS=$(CGO_LDFLAGS) \\\n\t\t$(CALICO_BUILD) \\\n\t\tsh -c '$(GIT_CONFIG_SSH) go build -o $(2) -v -buildvcs=false -ldflags \"$(LDFLAGS)\" $(1)'\nendef\n\n# For binaries that do not require boring crypto.\ndefine build_binary\n\t$(DOCKER_RUN) \\\n\t\t-e CGO_ENABLED=0 \\\n\t\t$(CALICO_BUILD) \\\n\t\tsh -c '$(GIT_CONFIG_SSH) go build -o $(2) -v -buildvcs=false -ldflags \"$(LDFLAGS)\" $(1)'\nendef\n\n# For windows builds that do not require cgo.\ndefine build_windows_binary\n\t$(DOCKER_RUN) \\\n\t\t-e CGO_ENABLED=0 \\\n\t\t-e GOARCH=amd64 \\\n\t\t-e GOOS=windows \\\n\t\t$(CALICO_BUILD) \\\n\t\tsh -c '$(GIT_CONFIG_SSH) go build -o $(2) -v -buildvcs=false -ldflags \"$(LDFLAGS)\" $(1)'\nendef\n\n# Images used in build / test across multiple directories.\nETCD_IMAGE ?= quay.io/coreos/etcd:$(ETCD_VERSION)-$(ARCH)\nifeq ($(BUILDARCH),amd64)\n\t# *-amd64 tagged images for etcd are not available until v3.5.0\n\tETCD_IMAGE = quay.io/coreos/etcd:$(ETCD_VERSION)\nendif\nUBI_IMAGE ?= registry.access.redhat.com/ubi8/ubi-minimal:$(UBI_VERSION)\n\nifeq ($(GIT_USE_SSH),true)\n\tGIT_CONFIG_SSH ?= git config --global url.\"ssh://git@github.com/\".insteadOf \"https://github.com/\";\nendif\n\n# Get version from git. We allow setting this manually for the hashrelease process.\nGIT_VERSION ?= $(shell git describe --tags --dirty --always --abbrev=12)\n\n# Figure out version information.  To support builds from release tarballs, we default to\n# <unknown> if this isn't a git checkout.\nGIT_COMMIT:=$(shell git rev-parse HEAD || echo '<unknown>')\nBUILD_ID:=$(shell git rev-parse HEAD || uuidgen | sed 's/-//g')\n\n# Lazily set the git version we embed into the binaries we build. We want the\n# git tag at the time we build the binary.\n# Variables elsewhere that depend on this (such as LDFLAGS) must also be lazy.\nGIT_DESCRIPTION=$(shell git describe --tags --dirty --always --abbrev=12 || echo '<unknown>')\n\n# Calculate a timestamp for any build artifacts.\nifneq ($(OS),Windows_NT)\nDATE:=$(shell date -u +'%FT%T%z')\nendif\n\n# Figure out the users UID/GID.  These are needed to run docker containers\n# as the current user and ensure that files built inside containers are\n# owned by the current user.\nifneq ($(OS),Windows_NT)\nLOCAL_USER_ID:=$(shell id -u)\nLOCAL_GROUP_ID:=$(shell id -g)\nendif\n\nifeq (\"$(LOCAL_USER_ID)\", \"0\")\n# The build needs to run as root.\nEXTRA_DOCKER_ARGS+=-e RUN_AS_ROOT='true'\nendif\n\n# Allow the ssh auth sock to be mapped into the build container.\nifdef SSH_AUTH_SOCK\n\tEXTRA_DOCKER_ARGS += -v $(SSH_AUTH_SOCK):/ssh-agent --env SSH_AUTH_SOCK=/ssh-agent\nendif\n\n# Volume-mount gopath into the build container to cache go module's packages. If the environment is using multiple\n# comma-separated directories for gopath, use the first one, as that is the default one used by go modules.\nifneq ($(GOPATH),)\n\t# If the environment is using multiple comma-separated directories for gopath, use the first one, as that\n\t# is the default one used by go modules.\n\tGOMOD_CACHE = $(shell echo $(GOPATH) | cut -d':' -f1)/pkg/mod\nelse\n\t# If gopath is empty, default to $(HOME)/go.\n\tGOMOD_CACHE = $(HOME)/go/pkg/mod\nendif\n\nEXTRA_DOCKER_ARGS += -v $(GOMOD_CACHE):/go/pkg/mod:rw\n\n# Define go architecture flags to support arm variants\nGOARCH_FLAGS :=-e GOARCH=$(ARCH)\n\n# Location of certificates used in UTs.\nREPO_ROOT := $(shell git rev-parse --show-toplevel)\nCERTS_PATH := $(REPO_ROOT)/hack/test/certs\n\nQEMU_IMAGE ?= calico/qemu-user-static:latest\n\n# DOCKER_BUILD is the base build command used for building all images.\nDOCKER_BUILD=docker buildx build --load --platform=linux/$(ARCH) --pull \\\n\t     --build-arg QEMU_IMAGE=$(QEMU_IMAGE) \\\n\t     --build-arg UBI_IMAGE=$(UBI_IMAGE) \\\n\t     --build-arg GIT_VERSION=$(GIT_VERSION)\n\nDOCKER_RUN := mkdir -p ../.go-pkg-cache bin $(GOMOD_CACHE) && \\\n\tdocker run --rm \\\n\t\t--net=host \\\n\t\t--init \\\n\t\t$(EXTRA_DOCKER_ARGS) \\\n\t\t-e LOCAL_USER_ID=$(LOCAL_USER_ID) \\\n\t\t-e GOCACHE=/go-cache \\\n\t\t$(GOARCH_FLAGS) \\\n\t\t-e GOPATH=/go \\\n\t\t-e OS=$(BUILDOS) \\\n\t\t-e GOOS=$(BUILDOS) \\\n\t\t-e GOFLAGS=$(GOFLAGS) \\\n\t\t-v $(REPO_ROOT):/go/src/github.com/projectcalico/calico:rw \\\n\t\t-v $(REPO_ROOT)/.go-pkg-cache:/go-cache:rw \\\n\t\t-w /go/src/$(PACKAGE_NAME)\n\nDOCKER_GO_BUILD := $(DOCKER_RUN) $(CALICO_BUILD)\n\n# A target that does nothing but it always stale, used to force a rebuild on certain targets based on some non-file criteria.\n.PHONY: force-rebuild\nforce-rebuild:\n\n###############################################################################\n# Updating pins\n#   the repo importing this Makefile _must_ define the update-pins target\n#   for example:\n#     update-pins: update-libcalico-pin update-typha-pin\n###############################################################################\nPIN_BRANCH?=$(shell git rev-parse --abbrev-ref HEAD)\n\n# The docker entrypoint script might echo output that could be included in the output of the following command, so this\n# prefixes the commit tag with \"commit-tag:\" so can reliable get the commit tag from the output.\ndefine get_remote_version\n\t$(shell $(DOCKER_RUN) $(CALICO_BUILD) sh -c '$(GIT_CONFIG_SSH) echo \"commit-tag:$$(git ls-remote https://$(1) $(2) | cut -f1)\"' | awk -F \"commit-tag:\" '{print $$2}')\nendef\n\n# update_pin updates the given package's version to the latest available in the specified repo and branch.\n# $(1) should be the name of the package, $(2) and $(3) the repository and branch from which to update it.\n# If $(4) is specified it's treated as the module version and use in the go get -d command.\ndefine update_pin\n\t$(eval new_ver := $(call get_remote_version,$(2),$(3)))\n\t$(eval repo := $(if $(4),$(1)/$(4),$(1)))\n\n\t$(DOCKER_RUN) -i $(CALICO_BUILD) sh -c '\\\n\t\tif [ ! -z \"$(new_ver)\" ]; then \\\n\t\t\t$(GIT_CONFIG_SSH) \\\n\t\t\tgo get -d $(repo)@$(new_ver); \\\n\t\t\tgo mod tidy; \\\n\t\tfi'\nendef\n\n# update_replace_pin updates the given package's version to the latest available in the specified repo and branch.\n# This routine can only be used for packages being replaced in go.mod, such as private versions of open-source packages.\n# $(1) should be the name of the package, $(2) and $(3) the repository and branch from which to update it. If $(4) is\n# specified it's treated as the module version and use in the go mod edit -replace command.\ndefine update_replace_pin\n\t$(eval new_ver := $(call get_remote_version,$(2),$(3)))\n\t$(eval original_repo := $(if $(4),$(1)/$(4),$(1)))\n\t$(eval replace_repo := $(if $(4),$(2)/$(4),$(2)))\n\n\t$(DOCKER_RUN) -i $(CALICO_BUILD) sh -c '\\\n\t\tif [ ! -z \"$(new_ver)\" ]; then \\\n\t\t\t$(GIT_CONFIG_SSH) \\\n\t\t\tgo mod edit -replace $(original_repo)=$(replace_repo)@$(new_ver); \\\n\t\t\tgo mod tidy; \\\n\t\tfi'\nendef\n\nGIT_REMOTE?=origin\nAPI_BRANCH?=$(PIN_BRANCH)\nAPI_REPO?=github.com/projectcalico/calico/api\nBASE_API_REPO?=github.com/projectcalico/calico/api\nAPISERVER_BRANCH?=$(PIN_BRANCH)\nAPISERVER_REPO?=github.com/projectcalico/calico/apiserver\nTYPHA_BRANCH?=$(PIN_BRANCH)\nTYPHA_REPO?=github.com/projectcalico/calico/typha\nLIBCALICO_BRANCH?=$(PIN_BRANCH)\nLIBCALICO_REPO?=github.com/projectcalico/calico/libcalico-go\nCONFD_BRANCH?=$(PIN_BRANCH)\nCONFD_REPO?=github.com/projectcalico/calico/confd\nFELIX_BRANCH?=$(PIN_BRANCH)\nFELIX_REPO?=github.com/projectcalico/calico/felix\nCNI_BRANCH?=$(PIN_BRANCH)\nCNI_REPO?=github.com/projectcalico/calico/cni-plugin\n\nupdate-api-pin:\n\t$(call update_pin,$(API_REPO),$(API_REPO),$(API_BRANCH))\n\nreplace-api-pin:\n\t$(call update_replace_pin,$(BASE_API_REPO),$(API_REPO),$(API_BRANCH))\n\nupdate-apiserver-pin:\n\t$(call update_pin,github.com/projectcalico/calico/apiserver,$(APISERVER_REPO),$(APISERVER_BRANCH))\n\nreplace-apiserver-pin:\n\t$(call update_replace_pin,github.com/projectcalico/calico/apiserver,$(APISERVER_REPO),$(APISERVER_BRANCH))\n\nupdate-typha-pin:\n\t$(call update_pin,github.com/projectcalico/calico/typha,$(TYPHA_REPO),$(TYPHA_BRANCH))\n\nreplace-typha-pin:\n\t$(call update_replace_pin,github.com/projectcalico/calico/typha,$(TYPHA_REPO),$(TYPHA_BRANCH))\n\nupdate-libcalico-pin:\n\t$(call update_pin,github.com/projectcalico/calico/libcalico-go,$(LIBCALICO_REPO),$(LIBCALICO_BRANCH))\n\nreplace-libcalico-pin:\n\t$(call update_replace_pin,github.com/projectcalico/calico/libcalico-go,$(LIBCALICO_REPO),$(LIBCALICO_BRANCH))\n\nupdate-confd-pin:\n\t$(call update_replace_pin,github.com/kelseyhightower/confd,$(CONFD_REPO),$(CONFD_BRANCH))\n\nupdate-felix-pin:\n\t$(call update_pin,github.com/projectcalico/calico/felix,$(FELIX_REPO),$(FELIX_BRANCH))\n\nreplace-felix-pin:\n\t$(call update_replace_pin,github.com/projectcalico/calico/felix,$(FELIX_REPO),$(FELIX_BRANCH))\n\nupdate-cni-plugin-pin:\n\t$(call update_pin,github.com/projectcalico/calico/cni-plugin,$(CNI_REPO),$(CNI_BRANCH))\n\nreplace-cni-pin:\n\t$(call update_replace_pin,github.com/projectcalico/calico/cni-plugin,$(CNI_REPO),$(CNI_BRANCH))\n\ngit-status:\n\tgit status --porcelain\n\ngit-config:\nifdef CONFIRM\n\tgit config --global user.name \"marvin-tigera\"\n\tgit config --global user.email \"marvin@projectcalico.io\"\nendif\n\ngit-commit:\n\tgit diff --quiet HEAD || git commit -m \"Semaphore Automatic Update\" go.mod go.sum $(EXTRA_FILES_TO_COMMIT)\n\n###############################################################################\n# External resource affecting macros\n# The following macros affect resources outside of the local environment that\n# they're run in, i.e. pushing to docker or github. If CONFIM is not defined,\n# then the commands are just printed, instead of run.\n#\n# The <command>-cmd macro should never be run directly, it's used to define\n# the command the macro runs but depending on whether CONFIRM is defined the\n# command may be printed or run.\n#\n# You can redefine <command>-cmd to have the targets in this makefile use a\n# different implementation.\n###############################################################################\n\nifdef LOCAL_CRANE\nCRANE_CMD         = bash -c $(double_quote)crane\nelse\nCRANE_CMD         = docker run -t --entrypoint /bin/sh -v $(DOCKER_CONFIG):/root/.docker/config.json $(CALICO_BUILD) -c \\\n                    $(double_quote)crane\nendif\n\nGIT_CMD           = git\nDOCKER_CMD        = docker\n\nifdef CONFIRM\nCRANE         = $(CRANE_CMD)\nGIT           = $(GIT_CMD)\nDOCKER        = $(DOCKER_CMD)\nelse\nCRANE         = echo [DRY RUN] $(CRANE_CMD)\nGIT           = echo [DRY RUN] $(GIT_CMD)\nDOCKER        = echo [DRY RUN] $(DOCKER_CMD)\nendif\n\ncommit-and-push-pr:\n\t$(GIT) add $(GIT_COMMIT_FILES)\n\t$(GIT) commit -m $(GIT_COMMIT_MESSAGE)\n\t$(GIT) push $(GIT_REMOTE) $(GIT_PR_BRANCH_HEAD)\n\n###############################################################################\n# GitHub API helpers\n#   Helper macros and targets to help with communicating with the github API\n###############################################################################\nGIT_COMMIT_MESSAGE?=\"Automatic Pin Updates\"\nGIT_PR_BRANCH_BASE?=$(SEMAPHORE_GIT_BRANCH)\nPIN_UPDATE_BRANCH?=semaphore-auto-pin-updates-$(GIT_PR_BRANCH_BASE)\nGIT_PR_BRANCH_HEAD?=$(PIN_UPDATE_BRANCH)\nGIT_PIN_UPDATE_COMMIT_FILES?=go.mod go.sum\nGIT_PIN_UPDATE_COMMIT_EXTRA_FILES?=$(GIT_COMMIT_EXTRA_FILES)\nGIT_COMMIT_FILES?=$(GIT_PIN_UPDATE_COMMIT_FILES) $(GIT_PIN_UPDATE_COMMIT_EXTRA_FILES)\n\n# Call the github API. $(1) is the http method type for the https request, $(2) is the repo slug, and is $(3) is for json\n# data (if omitted then no data is set for the request). If GITHUB_API_EXIT_ON_FAILURE is set then the macro exits with 1\n# on failure. On success, the ENV variable GITHUB_API_RESPONSE will contain the response from github\ndefine github_call_api\n\t$(eval CMD := curl -f -X$(1) \\\n\t\t-H \"Content-Type: application/json\"\\\n\t\t-H \"Authorization: token ${GITHUB_TOKEN}\"\\\n\t\thttps://api.github.com/repos/$(2) $(if $(3),--data '$(3)',))\n\t$(eval GITHUB_API_RESPONSE := $(shell $(CMD) | sed -e 's/#/\\\\\\#/g'))\n\t$(if $(GITHUB_API_EXIT_ON_FAILURE), $(if $(GITHUB_API_RESPONSE),,exit 1),)\nendef\n\n# Create the pull request. $(1) is the repo slug, $(2) is the title, $(3) is the head branch and $(4) is the base branch.\n# If the call was successful then the ENV variable PR_NUMBER will contain the pull request number of the created pull request.\ndefine github_pr_create\n\t$(eval JSON := {\"title\": \"$(2)\", \"head\": \"$(3)\", \"base\": \"$(4)\"})\n\t$(call github_call_api,POST,$(1)/pulls,$(JSON))\n\t$(eval PR_NUMBER := $(filter-out null,$(shell echo '$(GITHUB_API_RESPONSE)' | jq '.number')))\nendef\n\n# Create a comment on a pull request. $(1) is the repo slug, $(2) is the pull request number, and $(3) is the comment\n# body.\ndefine github_pr_add_comment\n\t$(eval JSON := {\"body\":\"$(3)\"})\n\t$(call github_call_api,POST,$(1)/issues/$(2)/comments,$(JSON))\nendef\n\n# List pull open pull requests for a head and base. $(1) is the repo slug, $(2) is the branch head, $(3) is the branch base,\n# and $(4) is the state.\ndefine github_pr_list\n\t$(eval QUERY := $(if $(2),head=$(2),)$(if $(3),\\&base=$(3))$(if $(4),\\&state=$(4),))\n\t$(call github_call_api,GET,$(1)/pulls?$(QUERY),)\nendef\n\n# Check if there is a pull request with head GIT_PR_BRANCH_HEAD and base GIT_PR_BRANCH_BASE for the repo with slug\n# GIT_REPO_SLUG. If there is a PR that exists the PR_EXISTS will be set to 0, otherwise it is set to 1.\ncheck-if-pin-update-pr-exists:\nifndef ORGANIZATION\n\t@echo \"ORGANIZATION must be set for the project.\"\n\texit 1\nendif\n\t$(call github_pr_list,$(GIT_REPO_SLUG),$(ORGANIZATION):$(GIT_PR_BRANCH_HEAD),$(GIT_PR_BRANCH_BASE),open)\n\t$(eval PR_EXISTS := $(if $(filter-out 0,$(shell echo '$(GITHUB_API_RESPONSE)' | jq '. | length')),0,1))\n\n###############################################################################\n# Auto pin update targets\n#   Targets updating the pins\n###############################################################################\nGITHUB_API_EXIT_ON_FAILURE?=1\n\n## Update dependency pins to their latest changeset, committing and pushing it.\n## DEPRECATED This will be removed along with associated helper functions in future releases. Use the trigger-auto-pin-update-process\n## to create PR with the pin updates.\n.PHONY: commit-pin-updates\ncommit-pin-updates: update-pins git-status git-config git-commit ci git-push\n\n# Creates and checks out the branch defined by GIT_PR_BRANCH_HEAD. It attempts to delete the branch from the local and\n# remote repositories. Requires CONFIRM to be set, otherwise it fails with an error.\ncreate-pin-update-head: var-require-one-of-CONFIRM-DRYRUN\nifeq ($(shell git rev-parse --abbrev-ref HEAD),$(GIT_PR_BRANCH_HEAD))\n\t@echo \"Current branch is pull request head, cannot set it up.\"\n\texit 1\nendif\n\t-git branch -D $(GIT_PR_BRANCH_HEAD)\n\t-$(GIT) push $(GIT_REMOTE) --delete $(GIT_PR_BRANCH_HEAD)\n\tgit checkout -b $(GIT_PR_BRANCH_HEAD)\n\ncreate-pin-update-pr:\n\t$(call github_pr_create,$(GIT_REPO_SLUG),[$(GIT_PR_BRANCH_BASE)] Semaphore Auto Pin Update,$(GIT_PR_BRANCH_HEAD),$(GIT_PR_BRANCH_BASE))\n\techo 'Created pin update pull request $(PR_NUMBER)'\n\n# Add the \"/merge-when-ready\" comment to enable the \"merge when ready\" functionality, i.e. when the pull request is passing\n# the tests and approved merge it. The PR_NUMBER is set by the dependent target\nset-merge-when-ready-on-pin-update-pr:\n\t$(call github_pr_add_comment,$(GIT_REPO_SLUG),$(PR_NUMBER),/merge-when-ready delete-branch)\n\techo \"Added '/merge-when-ready' comment command to pull request $(PR_NUMBER)\"\n\n# Call the update-pins target with the GIT_PR_BRANCH_BASE as the PIN_BRANCH\ntrigger-pin-updates:\n\tPIN_BRANCH=$(GIT_PR_BRANCH_BASE) $(MAKE) update-pins\n\n# POST_PIN_UPDATE_TARGETS is used to specify targets that should be run after the pins have been updated to run targets\n# that modify files that are tied to the dependencies. An example would be generated files that would changed based on\n# a dependency update. This target would likely need to be used in tandem with GIT_PIN_UPDATE_COMMIT_EXTRA_FILES so the\n# update files are committed with the pin update.\nPOST_PIN_UPDATE_TARGETS ?=\n\n# Trigger the auto pin update process. This involves updating the pins, committing and pushing them to github, creating\n# a pull request, and add the \"/merge-when-ready\" comment command. If there is already a pin update PR for the base\n# branch the pin update is not done and the target will exit.\ntrigger-auto-pin-update-process: check-if-pin-update-pr-exists\n\t$(if $(filter $(PR_EXISTS),0),echo \"A pull request for head '$(GIT_PR_BRANCH_HEAD)' and base '$(GIT_PR_BRANCH_BASE)' already exists.\",\\\n\t\t$(MAKE) trigger-auto-pin-update-process-wrapped)\n\ntrigger-auto-pin-update-process-wrapped: create-pin-update-head trigger-pin-updates $(POST_PIN_UPDATE_TARGETS)\n\t$(if $(shell git diff --quiet HEAD $(GIT_COMMIT_FILES) || echo \"true\"),\\\n\t\t$(MAKE) commit-and-push-pr create-pin-update-pr set-merge-when-ready-on-pin-update-pr,echo \"Pins are up to date\")\n\n###############################################################################\n# Static checks\n#   repos can specify additional checks by setting LOCAL_CHECKS\n###############################################################################\n.PHONY: static-checks\n## Run static source code checks (lint, formatting, ...)\nstatic-checks: $(LOCAL_CHECKS)\n\t$(MAKE) golangci-lint\n\nLINT_ARGS ?= --max-issues-per-linter 0 --max-same-issues 0 --timeout 8m\n\n.PHONY: golangci-lint\ngolangci-lint: $(GENERATED_FILES)\n\t$(DOCKER_RUN) $(CALICO_BUILD) sh -c '$(GIT_CONFIG_SSH) golangci-lint run $(LINT_ARGS)'\n\nREPO_DIR=$(shell if [ -e hack/format-changed-files.sh ]; then echo '.'; else echo '..'; fi )\n\n.PHONY: fix-changed go-fmt-changed goimports-changed\n# Format changed files only.\nfix-changed go-fmt-changed goimports-changed:\n\t$(DOCKER_RUN) -e release_prefix=$(RELEASE_BRANCH_PREFIX)-v \\\n\t              -e git_repo_slug=$(GIT_REPO_SLUG) $(CALICO_BUILD) $(REPO_DIR)/hack/format-changed-files.sh\n\n.PHONY: fix-all go-fmt-all goimports-all\nfix-all go-fmt-all goimports-all:\n\t$(DOCKER_RUN) $(CALICO_BUILD) $(REPO_DIR)/hack/format-all-files.sh\n\n.PHONY: pre-commit\npre-commit:\n\t$(DOCKER_RUN) $(CALICO_BUILD) git-hooks/pre-commit-in-container\n\n.PHONY: install-git-hooks\ninstall-git-hooks:\n\t./install-git-hooks\n\n.PHONY: check-module-path-tigera-api\ncheck-module-path-tigera-api:\n\t@echo \"Checking the repo importing tigera/api and not importing projectcalico/api\"\n\t@IMPORT_TIGERA_API=$$($(DOCKER_GO_BUILD) sh -c 'go list -m github.com/tigera/api > /dev/null 2>&1 && echo yes || echo no'); \\\n\techo Is tigera/api imported? $$IMPORT_TIGERA_API; \\\n\tif [ \"$$IMPORT_TIGERA_API\" != \"yes\" ]; then \\\n\t     echo \"Error: This repo should import tigera/api module.\"; \\\n\t     false; \\\n\tfi\n\t@IMPORT_PROJECTCALICO_API=$$($(DOCKER_GO_BUILD) sh -c 'go list -m github.com/projectcalico/calico/api > /dev/null 2>&1 && echo yes || echo no'); \\\n\techo Is projectcalico/api imported? $$IMPORT_PROJECTCALICO_API; \\\n\tif [ \"$$IMPORT_PROJECTCALICO_API\" != \"no\" ]; then \\\n\t     echo \"Error: This repo should NOT import projectcalico/api module.\"; \\\n\t     false; \\\n\tfi\n\n.PHONY: check-module-path-projectcalico-api\ncheck-module-path-projectcalico-api:\n\t@echo \"Checking the repo importing projectcalico/api and not importing tigera/api\"\n\t@IMPORT_PROJECTCALICO_API=$$($(DOCKER_GO_BUILD) sh -c 'go list -m github.com/projectcalico/calico/api > /dev/null 2>&1 && echo yes || echo no'); \\\n\techo Is projectcalico/api imported? $$IMPORT_PROJECTCALICO_API; \\\n\tif [ \"$$IMPORT_PROJECTCALICO_API\" != \"yes\" ]; then \\\n\t     echo \"Error: This repo should import projectcalico/api module.\"; \\\n\t     false; \\\n\tfi\n\t@IMPORT_TIGERA_API=$$($(DOCKER_GO_BUILD) sh -c 'go list -m github.com/tigera/api > /dev/null 2>&1 && echo yes || echo no'); \\\n\techo Is tigera/api imported? $$IMPORT_TIGERA_API; \\\n\tif [ \"$$IMPORT_TIGERA_API\" != \"no\" ]; then \\\n\t     echo \"Error: This repo should NOT import tigera/api module.\"; \\\n\t     false; \\\n\tfi\n\n###############################################################################\n# go mod helpers\n###############################################################################\nmod-download:\n\t-$(DOCKER_RUN) $(CALICO_BUILD) sh -c '$(GIT_CONFIG_SSH) go mod download'\n\nmod-tidy:\n\t-$(DOCKER_RUN) $(CALICO_BUILD) sh -c '$(GIT_CONFIG_SSH) go mod tidy'\n\n###############################################################################\n# Semaphore helpers\n###############################################################################\n\n# This semaphore project IDs are defined here because you cannot easily look them up in the semaphore API. This gives\n# us a single place to define these values, then projects can reference the readable ENV variable when they need a semaphore\n# project ID.\nSEMAPHORE_API_PROJECT_ID=9625623e-bfc5-435f-9c22-74f9cd8622fc\nSEMAPHORE_API_TIGERA_PROJECT_ID=48d23719-405f-4827-b58a-7de0598a6bf5\nSEMAPHORE_ANOMALY_DETECTION_JOBS_PROJECT_ID=e506a098-3e89-4802-8165-c59b2a95f8ae\nSEMAPHORE_API_SERVER_PROJECT_ID=6e4eb5b2-0150-4624-968d-f96a1cd9c37d\nSEMAPHORE_API_SERVER_OSS_PROJECT_ID=10f6c7c1-7eaa-4e75-a9d1-83e5426158b1\nSEMAPHORE_APP_POLICY_PRIVATE_PROJECT_ID=fa098f05-b2d2-4cf6-ac83-aa1e38e95670\nSEMAPHORE_APP_POLICY_PROJECT_ID=bc654d5c-bb68-4b00-9d02-289291762b1d\nSEMAPHORE_BIRD_PROJECT_ID=c1cc5eaf-873b-4113-a85e-a555361413e6\nSEMAPHORE_CC_PORTAL=2b3f9721-a851-4a97-981f-0cb81f93ddd0\nSEMAPHORE_CALICO_PRIVATE_PROJECT_ID=8a309869-f767-49dc-924f-fa927edbf657\nSEMAPHORE_CALICO_PROJECT_ID=828e6de6-ed4b-49c7-9cb5-ac1246d454de\nSEMAPHORE_CALICO_USAGE_PROJECT_ID=29f53c2b-8266-4873-879d-19b65960b3fd\nSEMAPHORE_CALICOCTL_PRIVATE_PROJECT_ID=8d885379-6a1b-4fc8-aa45-dc0cfb87894a\nSEMAPHORE_CALICOCTL_PROJECT_ID=193ce75a-7a47-4c9f-b966-f25c83e62213\nSEMAPHORE_CALICOQ_PROJECT_ID=dc79e0e9-a7b3-40f5-8dc2-2818210ee0a9\nSEMAPHORE_CLOUD_CONTROLLERS_PRIVATE_PROJECT_ID=f70e6c08-887b-481d-9591-68e243b32b32\nSEMAPHORE_CNI_PLUGIN_PRIVATE_PROJECT_ID=f2c02a84-5fcd-49ed-b4cb-a6273409f0de\nSEMAPHORE_CNI_PLUGIN_PROJECT_ID=741ec781-5dbb-4494-ba90-ec6831a9b176\nSEMAPHORE_COMPLIANCE_PROJECT_ID=958a9147-ec94-4e99-b4c8-de7857653bb9\nSEMAPHORE_CONFD_PROJECT_ID=4c6b815f-d42c-4436-aafa-651fbaf5859e\nSEMAPHORE_CONFD_PRIVATE_PROJECT_ID=d3a7649a-3a39-45bf-95e9-fd6df3d0a7b1\nSEMAPHORE_CURATOR_PROJECT_ID=c391dcff-6933-40e7-a6d1-1dcf7e6e231d\nSEMAPHORE_DEEP_PACKET_INSPECTION_PROJECT_ID=81c0981e-979c-4741-8143-22166384afa1\nSEMAPHORE_DEXIDP_DOCKER_PROJECT_ID=ee618372-35c8-4f83-bd05-d3a96ac2b276\nSEMAPHORE_EGRESS_GATEWAY_PROJECT_ID=f01056ec-75f9-46a0-9ae2-6fc5e391136c\nSEMAPHORE_ELASTICSEARCH_DOCKER_PROJECT_ID=0a3a5bf6-19e4-4210-a3fa-15fc857596ac\nSEMAPHORE_ELASTICSEARCH_METRICS_PROJECT_ID=306b29c0-aa86-4b76-9c3e-c78a327e7d83\nSEMAPHORE_ENVOY_DOCKER_PROJECT_ID=b8db000b-c2c4-44cd-a22d-51df73dfdcba\nSEMAPHORE_ES_PROXY_IMAGE_PROJECT_ID=bc7ee48d-0051-4ceb-961d-03659463ada4\nSEMAPHORE_ES_GATEWAY_PROJECT_ID=3c01c819-532b-4ccc-8305-5dd45c10bf93\nSEMAPHORE_FELIX_PRIVATE_PROJECT_ID=e439cca4-156c-4d23-b611-002601440ad0\nSEMAPHORE_FELIX_PROJECT_ID=48267e65-4acc-4f27-a88f-c3df0e8e2c3b\nSEMAPHORE_FIREWALL_INTEGRATION_PROJECT_ID=d4307a31-1e46-4622-82e2-886165b77008\nSEMAPHORE_FLUENTD_DOCKER_PROJECT_ID=50383fb9-d234-461a-ae00-23e18b7cd5b8\nSEMAPHORE_HONEYPOD_CONTROLLER_PROJECT_ID=c010a63a-ac85-48b4-9077-06188408eaee\nSEMAPHORE_HONEYPOD_RECOMMENDATION_PROJECT_ID=f07f5fd4-b15a-4ded-ae1e-04801ae4d99a\nSEMAPHORE_INGRESS_COLLECTOR_PROJECT_ID=cf7947e4-a886-404d-ac6a-c3f3ac1a7b93\nSEMAPHORE_INTRUSION_DETECTION_PROJECT_ID=2beffe81-b05a-41e0-90ce-e0d847dee2ee\nSEMAPHORE_KEY_CERT_PROVISIONER_PROJECT_ID=9efb25f3-8c5d-4f22-aab5-4a1f5519bc7c\nSEMAPHORE_KUBE_CONTROLLERS_PRIVATE_PROJECT_ID=0b8651d0-6c5d-4076-ab1d-25b120d0f670\nSEMAPHORE_KUBE_CONTROLLERS_PROJECT_ID=d688e2ce-8c4a-4402-ba54-3aaa0eb53e5e\nSEMAPHORE_KUBECTL_CALICO_PROJECT_ID=37d7cb2b-62b0-4178-9424-de766f2de59b\nSEMAPHORE_KIBANA_DOCKER_PROJECT_ID=eaafdbad-4546-4582-b8fa-cea05a80a04d\nSEMAPHORE_LIBCALICO_GO_PRIVATE_PROJECT_ID=72fa12b5-5ad5-43ae-b0ac-17f9f7c71030\nSEMAPHORE_LIBCALICO_GO_PROJECT_ID=ce3e6bed-1fb6-4501-80e5-2121a266a386\nSEMAPHORE_LICENSE_AGENT_PROJECT_ID=beb13609-8ee0-461a-a08b-dab86af1c128\nSEMAPHORE_LICENSING_PROJECT_ID=344f1cf0-0c3f-4fa3-b89b-3c35127b3054\nSEMAPHORE_L7_COLLECTOR_PROJECT_ID=b02e7bbf-39ee-4c0c-a6f6-793cdf89daa7\nSEMAPHORE_LMA_PROJECT_ID=5130e1d3-d9cd-4270-9e62-57f98d34495e\nSEMAPHORE_MANAGER_PROJECT_ID=325ca49d-5111-4b07-a54f-dc0c7ec538bb\nSEMAPHORE_NETWORKING_CALICO_PROJECT_ID=0a7883cb-b727-4113-948d-b95cb00df6b6\nSEMAPHORE_NODE_PRIVATE_PROJECT_ID=edd8246c-7116-473a-81c8-7a3bbbc07228\nSEMAPHORE_NODE_PROJECT_ID=980a06a4-9d43-43f8-aedd-a3bfad258de6\nSEMAPHORE_OPERATOR_PROJECT_ID=8343e619-cc44-4be4-a9d7-21963ebc1c8f\nSEMAPHORE_PACKETCAPTURE_API_PROJECT_ID=f505b00c-57c3-4859-8b97-ff4095b5ab25\nSEMAPHORE_PERFORMANCE_HOTSPOTS_PROJECT_ID=6a343a02-0acf-4c52-9cc7-24ee51377e32\nSEMAPHORE_POD2DAEMON_PROJECT_ID=eb2eea4f-c185-408e-9837-da0d231428fb\nSEMAPHORE_PROMETHEUS_SERVICE_PROJECT_ID=d5b7ed99-8966-46cc-90f2-9027c428db48\nSEMAPHORE_SKIMBLE_PROJECT_ID=35171baf-8daf-4725-882f-c301851a6e1d\nSEMAPHORE_TS_QUERYSERVER_PROJECT_ID=5dbe4688-0c21-40fb-89f7-a2d64c17401b\nSEMAPHORE_TYPHA_PROJECT_ID=c2ea3f0a-58a0-427a-9ed5-6eff8d6543b3\nSEMAPHORE_TYPHA_PRIVATE_PROJECT_ID=51e84cb9-0f38-408a-a113-0f5ca71844d7\nSEMAPHORE_VOLTRON_PROJECT_ID=9d239362-9594-4c84-8983-868ee19ebd41\n\nSEMAPHORE_WORKFLOW_BRANCH?=master\n\n# Sends a request to the semaphore API to run the request workflow. It requires setting the SEMAPHORE_API_TOKEN, SEMAPHORE_PROJECT_ID,\n# SEMAPHORE_WORKFLOW_BRANCH, and SEMAPHORE_WORKFLOW_FILE ENV variables.\nsemaphore-run-workflow:\n\t$(eval CMD := curl -f -X POST \\\n\t\t-H \"Authorization: Token $(SEMAPHORE_API_TOKEN)\" \\\n\t\t-d \"project_id=$(SEMAPHORE_PROJECT_ID)&reference=$(SEMAPHORE_WORKFLOW_BRANCH)&commit_sha=$(SEMAPHORE_COMMIT_SHA)&pipeline_file=.semaphore/$(SEMAPHORE_WORKFLOW_FILE)\" \\\n\t\t\"https://tigera.semaphoreci.com/api/v1alpha/plumber-workflows\")\n\t$(eval SEMAPHORE_API_RESPONSE := $(shell $(CMD) | jq -R '.' | sed -e 's/#/\\\\\\#/g'))\n\t$(if $(SEMAPHORE_API_RESPONSE),,exit 1)\n\t$(eval WORKFLOW_ID := $(shell echo $(SEMAPHORE_API_RESPONSE) | jq -r '.workflow_id'))\n\t@echo Semaphore workflow successfully created here https://tigera.semaphoreci.com/workflows/$(WORKFLOW_ID)\n\n# This is a helpful wrapper of the semaphore-run-workflow target to run the update_pins workflow file for a project.\nsemaphore-run-auto-pin-update-workflow:\n\tSEMAPHORE_WORKFLOW_FILE=update_pins.yml $(MAKE) semaphore-run-workflow\n\t@echo Successfully triggered the semaphore pin update workflow\n\n# This target triggers the 'semaphore-run-auto-pin-update-workflow' target for every SEMAPHORE_PROJECT_ID in the list of\n# SEMAPHORE_AUTO_PIN_UPDATE_PROJECT_IDS.\nsemaphore-run-auto-pin-update-workflows:\n\tfor ID in $(SEMAPHORE_AUTO_PIN_UPDATE_PROJECT_IDS); do\\\n\t\tSEMAPHORE_WORKFLOW_BRANCH=$(SEMAPHORE_GIT_BRANCH) SEMAPHORE_PROJECT_ID=$$ID $(MAKE) semaphore-run-auto-pin-update-workflow; \\\n\tdone\n\n###############################################################################\n# Mock helpers\n###############################################################################\n# Helper targets for testify mock generation\n\n# Generate testify mocks in the build container.\ngen-mocks:\n\t$(DOCKER_RUN) $(CALICO_BUILD) sh -c '$(MAKE) mockery-run'\n\n# Run mockery for each path in MOCKERY_FILE_PATHS. The the generated mocks are\n# created in package and in test files. Look here for more information https://github.com/vektra/mockery\nmockery-run:\n\tfor FILE_PATH in $(MOCKERY_FILE_PATHS); do\\\n\t\tDIR=$$(dirname $$FILE_PATH); \\\n\t\tINTERFACE_NAME=$$(basename $$FILE_PATH); \\\n\t\tmockery --dir $$DIR --name $$INTERFACE_NAME --inpackage; \\\n\tdone\n\n###############################################################################\n# Docker helpers\n###############################################################################\n# Helper targets working with docker images.\n\n# docker-compress takes the docker image specified by IMAGE_NAME and compresses all the layers into a single one. This is\n# done by exporting the given image then re importing it with the given IMAGE_NAME.\n#\n# When a docker image is exported all of the instructions are lost (i.e. ENTRYPOINT, ENV, ...), so before the image is\n# compressed the target inspects the image and pulls out the instructions. Each instruction that is pulled out is converted\n# into a change directive, or change directives, of the format \"--change 'INSTRUCTION <instruction>\". These directives\n# are given to the docker import command so the instructions can be re added to the compressed image.\n#\n# NOTE: This target does not attempt to copy every instruction from the original image to the compressed one. Any user of\n# this target should ensure that any required instructions are copied over by this target.\ndocker-compress:\n\t$(eval JSONOBJ := \"$(shell docker inspect $(IMAGE_NAME) | jq '.[0].Config' | jq -R '.' | sed -e 's/#/\\\\\\#/g' ) \")\n#\tRe add the entry point.\n\t$(eval CHANGE := $(CHANGE)$(shell echo $(JSONOBJ) | jq -r \\\n\t\t\"if has(\\\"Entrypoint\\\") and .Entrypoint != \\\"\\\" then \\\" --change 'ENTRYPOINT \\(.Entrypoint)'\\\" else \\\"\\\" end\"\\\n\t))\n#\tRe add the command.\n\t$(eval CHANGE := $(CHANGE)$(shell echo $(JSONOBJ) | jq -r \\\n\t\t\"if has(\\\"Cmd\\\") and .Cmd != \\\"\\\" then \\\" --change 'CMD \\(.Cmd)'\\\" else \\\"\\\" end\"\\\n\t))\n#\tRe add the working directory.\n\t$(eval CHANGE := $(CHANGE)$(shell echo $(JSONOBJ) | jq -r \\\n\t\t\"if has(\\\"WorkingDir\\\") and .WorkingDir != \\\"\\\" then \\\" --change 'WORKDIR \\(.WorkingDir)'\\\" else \\\"\\\" end\"\\\n\t))\n#\tRe add the user.\n\t$(eval CHANGE := $(CHANGE)$(shell echo $(JSONOBJ) | jq -r \\\n\t\t\"if has(\\\"User\\\") and .User != \\\"\\\" then \\\" --change 'USER \\(.User)'\\\" else \\\"\\\" end\"\\\n\t))\n#\tRe add the environment variables. .Env is an array of strings so add a \"--change 'ENV <value>'\" for each value in\n#\tthe array.\n\t$(eval CHANGE := $(CHANGE)$(shell echo $(JSONOBJ) | jq -r \\\n\t\t\"if has(\\\"Env\\\") and (.Env | length) > 0 then .Env | map(\\\" --change 'ENV \\(.)'\\\") | join(\\\"\\\") else \\\"\\\" end\"\\\n\t))\n#\tRe add the labels. .Labels is a map of label names to label values, so add a \"--change 'LABEL <key> <value>'\" for\n#\teach map entry.\n\t$(eval CHANGE := $(CHANGE)$(shell echo $(JSONOBJ) | jq -r \\\n\t\t\"if has(\\\"Labels\\\") and (.Labels | length) > 0 then .Labels | to_entries | map(\\\" --change 'LABEL \\(.key) \\(.value)'\\\") | join(\\\"\\\") else \\\"\\\" end\"\\\n\t))\n#\tRe add the exposed ports. .ExposedPorts is a map, but we're only interested in the keys of the map so for each key\n#\tadd \"--change EXPOSE <key>\".\n\t$(eval CHANGE := $(CHANGE)$(shell echo $(JSONOBJ) | jq -r \\\n\t\t\"if has(\\\"ExposedPorts\\\") and (.ExposedPorts | length) > 0 then .ExposedPorts | keys | map(\\\" --change 'EXPOSE \\(.)'\\\") | join(\\\"\\\") else \\\"\\\" end\"\\\n\t))\n\t$(eval CONTAINER_ID := $(shell docker run -d -it --entrypoint /bin/true $(IMAGE_NAME) /bin/true))\n\tdocker export $(CONTAINER_ID) | docker import $(CHANGE) - $(IMAGE_NAME)\n\n###############################################################################\n# Image building and pushing\n###############################################################################\n\n###############################################################################\n# we want to be able to run the same recipe on multiple targets keyed on the image name\n# to do that, we would use the entire image name, e.g. calico/node:abcdefg, as the stem, or '%', in the target\n# however, make does **not** allow the usage of invalid filename characters - like / and : - in a stem, and thus errors out\n# to get around that, we \"escape\" those characters by converting all : to --- and all / to ___ , so that we can use them\n# in the target, we then unescape them back\nescapefs = $(subst :,---,$(subst /,___,$(1)))\nunescapefs = $(subst ---,:,$(subst ___,/,$(1)))\n\n# retag-build-images-with-registries retags the build / arch images specified by BUILD_IMAGES and VALIDARCHES with\n# the registries specified by DEV_REGISTRIES. The end tagged images are of the format\n# $(REGISTRY)/$(BUILD_IMAGES):<tag>-$(ARCH).\nretag-build-images-with-registries: $(addprefix retag-build-images-with-registry-,$(call escapefs,$(DEV_REGISTRIES)))\n\n# retag-build-images-with-registry-% retags the build / arch images specified by BUILD_IMAGES and VALIDARCHES with\n# the registry specified by $*.\nretag-build-images-with-registry-%:\n\t$(MAKE) $(addprefix retag-build-image-with-registry-,$(call escapefs,$(BUILD_IMAGES))) REGISTRY=$(call unescapefs,$*)\n\n# retag-build-image-with-registry-% retags the build arch images specified by $* and VALIDARCHES with the\n# registry specified by REGISTRY.\nretag-build-image-with-registry-%: var-require-all-REGISTRY-BUILD_IMAGES\n\t$(MAKE) -j12 $(addprefix retag-build-image-arch-with-registry-,$(VALIDARCHES)) BUILD_IMAGE=$(call unescapefs,$*)\n\n# retag-build-image-arch-with-registry-% retags the build / arch image specified by $* and BUILD_IMAGE with the\n# registry specified by REGISTRY.\nretag-build-image-arch-with-registry-%: var-require-all-REGISTRY-BUILD_IMAGE-IMAGETAG\n\tdocker tag $(BUILD_IMAGE):$(LATEST_IMAGE_TAG)-$* $(call filter-registry,$(REGISTRY))$(BUILD_IMAGE):$(IMAGETAG)-$*\n\t$(if $(filter $*,amd64),\\\n\t\tdocker tag $(BUILD_IMAGE):$(LATEST_IMAGE_TAG)-$(ARCH) $(REGISTRY)/$(BUILD_IMAGE):$(IMAGETAG),\\\n\t\t$(NOECHO) $(NOOP)\\\n\t)\n\n# push-images-to-registries pushes the build / arch images specified by BUILD_IMAGES and VALIDARCHES to the registries\n# specified by DEV_REGISTRY.\npush-images-to-registries: $(addprefix push-images-to-registry-,$(call escapefs,$(DEV_REGISTRIES)))\n\n# push-images-to-registry-% pushes the build / arch images specified by BUILD_IMAGES and VALIDARCHES to the registry\n# specified by %*.\npush-images-to-registry-%:\n\t$(MAKE) $(addprefix push-image-to-registry-,$(call escapefs,$(BUILD_IMAGES))) REGISTRY=$(call unescapefs,$*)\n\n# push-image-to-registry-% pushes the build / arch images specified by $* and VALIDARCHES to the registry\n# specified by REGISTRY.\npush-image-to-registry-%:\n\t$(MAKE) -j6 $(addprefix push-image-arch-to-registry-,$(VALIDARCHES)) BUILD_IMAGE=$(call unescapefs,$*)\n\n# push-image-arch-to-registry-% pushes the build / arch image specified by $* and BUILD_IMAGE to the registry\n# specified by REGISTRY.\npush-image-arch-to-registry-%:\n# If the registry we want to push to doesn't not support manifests don't push the ARCH image.\n\t$(DOCKER) push --quiet $(call filter-registry,$(REGISTRY))$(BUILD_IMAGE):$(IMAGETAG)-$*\n\t$(if $(filter $*,amd64),\\\n\t\t$(DOCKER) push $(REGISTRY)/$(BUILD_IMAGE):$(IMAGETAG),\\\n\t\t$(NOECHO) $(NOOP)\\\n\t)\n\n# push multi-arch manifest where supported.\npush-manifests: var-require-all-IMAGETAG  $(addprefix sub-manifest-,$(call escapefs,$(PUSH_MANIFEST_IMAGES)))\nsub-manifest-%:\n\t$(DOCKER) manifest create $(call unescapefs,$*):$(IMAGETAG) $(addprefix --amend ,$(addprefix $(call unescapefs,$*):$(IMAGETAG)-,$(VALIDARCHES)))\n\t$(DOCKER) manifest push --purge $(call unescapefs,$*):$(IMAGETAG)\n\npush-manifests-with-tag: var-require-one-of-CONFIRM-DRYRUN var-require-all-BRANCH_NAME\n\t$(MAKE) push-manifests IMAGETAG=$(if $(IMAGETAG_PREFIX),$(IMAGETAG_PREFIX)-)$(BRANCH_NAME) EXCLUDEARCH=\"$(EXCLUDEARCH)\"\n\t$(MAKE) push-manifests IMAGETAG=$(if $(IMAGETAG_PREFIX),$(IMAGETAG_PREFIX)-)$(GIT_VERSION) EXCLUDEARCH=\"$(EXCLUDEARCH)\"\n\n# cd-common tags and pushes images with the branch name and git version. This target uses PUSH_IMAGES, BUILD_IMAGE,\n# and BRANCH_NAME env variables to figure out what to tag and where to push it to.\ncd-common: var-require-one-of-CONFIRM-DRYRUN var-require-all-BRANCH_NAME\n\t$(MAKE) retag-build-images-with-registries push-images-to-registries IMAGETAG=$(if $(IMAGETAG_PREFIX),$(IMAGETAG_PREFIX)-)$(BRANCH_NAME) EXCLUDEARCH=\"$(EXCLUDEARCH)\"\n\t$(MAKE) retag-build-images-with-registries push-images-to-registries IMAGETAG=$(if $(IMAGETAG_PREFIX),$(IMAGETAG_PREFIX)-)$(shell git describe --tags --dirty --long --always --abbrev=12) EXCLUDEARCH=\"$(EXCLUDEARCH)\"\n\n###############################################################################\n# Release targets and helpers\n#\n# The following targets and macros are used to help start and cut releases.\n# At high level, this involves:\n# - Creating release branches\n# - Adding empty commits to start next release, and updating the 'dev' tag\n# - Adding 'release' tag to the commit that will be release\n# - Creating an empty commit for the next potential patch release, and updating\n#   the dev tag on that commit\n# - Copying images for the released commit over to the release registries, and\n#   re tagging those images with the release tag\n#\n# The following definitions will be helpful in understanding this process:\n# - 'dev' tag: A git tag of the form of `v3.8.0-calient-0.dev-36-g3a618e61c2d3`\n#   that every commit has. The start of the dev tag, i.e. v3.8.0, is the\n#   the release that this commit will go into.\n# - 'release' tag: A git tag of the form of `v3.8.0`. The commit that a release\n#   is cut from will have this tag, i.e. you can find the commit that release\n#   3.8 uses by finding the commit with the tag v3.8.0.\n# - 'dev' image: The image that is created for every commit that is merged to\n#   master or a release branch. This image is tagged with the dev tag, i.e.\n#   if commit 3a618e61c2d3 is on master or a release branch, there will be\n#   an image for that commit in the dev registry with the tag\n#   `v3.8.0-calient-0.dev-36-g3a618e61c2d3`.\n# - 'release' image: The public image the customers will use to install our\n#   our product. Producing this is the goal of cutting the release. This image\n#   will be in the release registries, and will be tagged with the release tag,\n#   i.e. the release image for release 3.8 will have the v3.8.0 tag, or if it's\n#   a patch release it will be v3.8.<patch version>\n###############################################################################\nfetch-all:\n\tgit fetch --all -q\n\n# git-dev-tag retrieves the dev tag for the current commit (the one are dev images are tagged with).\ngit-dev-tag = $(shell git describe --tags --long --always --abbrev=12 --match \"*dev*\")\n# git-release-tag-from-dev-tag gets the release version from the current commits dev tag.\ngit-release-tag-from-dev-tag = $(shell echo $(call git-dev-tag) | grep -P -o \"^v\\d*.\\d*.\\d*\")\n# git-release-tag-for-current-commit gets the release tag for the current commit if there is one.\ngit-release-tag-for-current-commit = $(shell git describe --tags --exact-match --exclude \"*dev*\")\n\n# release-branch-for-tag finds the latest branch that corresponds to the given tag.\nrelease-branch-for-tag = $(firstword $(shell git --no-pager branch --format='%(refname:short)' --contains $1 | grep -P \"^release\"))\n# commit-for-tag finds the latest commit that corresponds to the given tag.\ncommit-for-tag = $(shell git rev-list -n 1 $1)\ngit-commit-for-remote-tag = $(shell git ls-remote -q --tags $(GIT_REMOTE) $1 | awk '{print $$1}')\n# current-branch gets the name of the branch for the current commit.\ncurrent-branch = $(shell git rev-parse --abbrev-ref HEAD)\n\n# RELEASE_BRANCH_BASE is used when creating a release branch to confirm the correct base is being used. It's\n# configurable so that a dry run can be done from a PR branch.\nRELEASE_BRANCH_BASE ?=master\n\n# var-set-% checks if there is a non empty variable for the value describe by %. If FAIL_NOT_SET is set, then var-set-%\n# fails with an error message. If FAIL_NOT_SET is not set, then var-set-% appends a 1 to VARSET if the variable isn't\n# set.\nvar-set-%:\n\t$(if $($*),$(eval VARSET+=1),$(if $(FAIL_NOT_SET),$(error $* is required but not set),))\n\n# var-require is used to check if one or all of the variables are set in REQUIRED_VARS, and fails if not. The variables\n# in REQUIRE_VARS are hyphen separated.\n#\n# If FAIL_NOT_SET is set, then all variables described in REQUIRED_VARS must be set for var-require to not fail,\n# otherwise only one variable needs to be set for var-require to not fail.\nvar-require: $(addprefix var-set-,$(subst -, ,$(REQUIRED_VARS)))\n\t$(if $(VARSET),,$(error one of $(subst -, ,$(REQUIRED_VARS)) is not set or empty, but at least one is required))\n\n# var-require-all-% checks if the there are non empty variables set for the hyphen separated values in %, and fails if\n# there isn't a non empty variable for each given value. For instance, to require FOO and BAR both must be set you would\n# call var-require-all-FOO-BAR.\nvar-require-all-%:\n\t$(MAKE) var-require REQUIRED_VARS=$* FAIL_NOT_SET=true\n\n# var-require-one-of-% checks if the there are non empty variables set for the hyphen separated values in %, and fails\n# there isn't a non empty variable for at least one of the given values. For instance, to require either FOO or BAR both\n# must be set you would call var-require-all-FOO-BAR.\nvar-require-one-of-%:\n\t$(MAKE) var-require REQUIRED_VARS=$*\n\n# sem-cut-release triggers the cut-release pipeline (or test-cut-release if CONFIRM is not specified) in semaphore to\n# cut the release. The pipeline is triggered for the current commit, and the branch it's triggered on is calculated\n# from the RELEASE_VERSION, CNX, and OS variables given.\n#\n# Before the pipeline is triggered, this target validates that the expected release will be cut using the\n# RELEASE_TAG (optional and defaults to the current tag) and RELEASE_VERSION (required) variables. The RELEASE_TAG\n# should be the dev tag that the release is cut from, and RELEASE_VERSION should be the version expected to be released.\n# This target verifies that the current commit is tagged with the RELEASE_TAG and that cutting this commit will result\n# in RELEASE_VERSION being cut.\nsem-cut-release: var-require-one-of-CONFIRM-DRYRUN var-require-all-RELEASE_VERSION var-require-one-of-CNX-OS\nifndef RELEASE_TAG\n\t$(eval RELEASE_TAG = $(call git-dev-tag))\nelse\n\t$(eval RELEASE_TAG_COMMIT = $(call commit-for-tag,$(RELEASE_TAG)))\n\t$(if $(filter-out $(RELEASE_TAG_COMMIT),$(GIT_COMMIT)),\\\n\t\techo Current commit is not tagged with $(RELEASE_TAG) && exit 1)\nendif\n\t$(eval CURRENT_RELEASE_VERSION = $(call git-release-tag-from-dev-tag))\n\t$(if $(filter-out $(CURRENT_RELEASE_VERSION),$(RELEASE_VERSION)),\\\n\t\techo Given release version $(RELEASE_VERSION) does not match current commit release version $(CURRENT_RELEASE_VERSION). && exit 1)\n\n\t$(eval RELEASE_BRANCH = release-$(if $CNX,calient-,)$(shell echo \"$(RELEASE_VERSION)\" | awk -F  \".\" '{print $$1\".\"$$2}'))\n\t$(eval WORKFLOW_FILE = $(if $(CONFIRM),cut-release.yml,test-cut-release.yml))\n\n\t@echo Cutting release for $(RELEASE_VERSION) from dev tag $(RELEASE_TAG) \\(commit $(GIT_COMMIT)\\)\n\tSEMAPHORE_WORKFLOW_BRANCH=$(RELEASE_BRANCH) SEMAPHORE_COMMIT_SHA=$(GIT_COMMIT) SEMAPHORE_WORKFLOW_FILE=$(WORKFLOW_FILE) $(MAKE) semaphore-run-workflow\n\n# cut-release uses the dev tags on the current commit to cut the release, more specifically cut-release does the\n# following:\n# - Calculates the release tag from the dev tag on the commit\n# - tags the current commit with the release tag then pushes that tag to github\n# - retags the build images (specified by BUILD_IMAGES) in the dev registries (specified DEV_REGISTRIES) with the\n#\trelease tag\n# - copies the build images (specified by BUILD_IMAGES) from the first dev registry to the release registries (specified\n#\tby RELEASE_REGISTRIES) and retags those images with the release tag\n# - tags an empty commit at the head of the release branch with the next patch release dev tag and pushed that to github\ncut-release: var-require-one-of-CONFIRM-DRYRUN\n\t$(MAKE) cut-release-wrapped RELEASE=true\n\ncut-release-wrapped: var-require-one-of-CONFIRM-DRYRUN\n\t$(eval DEV_TAG = $(call git-dev-tag))\n\t$(eval RELEASE_TAG = $(call git-release-tag-from-dev-tag))\n\t$(eval RELEASE_BRANCH = $(call release-branch-for-tag,$(DEV_TAG)))\nifdef EXPECTED_RELEASE_TAG\n\t$(if $(filter-out $(RELEASE_TAG),$(EXPECTED_RELEASE_TAG)),\\\n\t\t@echo \"Failed to verify release tag$(comma) expected release version is $(EXPECTED_RELEASE_TAG)$(comma) actual is $(RELEASE_TAG).\"\\\n\t\t&& exit 1)\nendif\n\t$(eval NEXT_RELEASE_VERSION = $(shell echo \"$(call git-release-tag-from-dev-tag)\" | awk '{ split($0,tag,\"-\"); if (tag[2] ~ /^1\\./) { split(tag[2],subver,\".\"); print tag[1]\"-\"subver[1]+1\".0\" } else { split(tag[1],ver,\".\"); print ver[1]\".\"ver[2]\".\"ver[3]+1 } }'))\nifndef IMAGE_ONLY\n\t$(MAKE) maybe-tag-release maybe-push-release-tag\\\n\t\tRELEASE_TAG=$(RELEASE_TAG) BRANCH=$(RELEASE_BRANCH) DEV_TAG=$(DEV_TAG)\nendif\nifdef BUILD_IMAGES\n\t$(eval IMAGE_DEV_TAG = $(if $(IMAGETAG_PREFIX),$(IMAGETAG_PREFIX)-)$(DEV_TAG))\n\t$(eval IMAGE_RELEASE_TAG = $(if $(IMAGETAG_PREFIX),$(IMAGETAG_PREFIX)-)$(RELEASE_TAG))\n\t$(MAKE) release-dev-images\\\n\t\tRELEASE_TAG=$(IMAGE_RELEASE_TAG) BRANCH=$(RELEASE_BRANCH) DEV_TAG=$(IMAGE_DEV_TAG)\nendif\nifndef IMAGE_ONLY\n\t$(MAKE) maybe-dev-tag-next-release maybe-push-next-release-dev-tag\\\n\t\tNEXT_RELEASE_VERSION=$(NEXT_RELEASE_VERSION) BRANCH=$(RELEASE_BRANCH) DEV_TAG=$(DEV_TAG)\nendif\n\n# maybe-tag-release calls the tag-release target only if the current commit is not tagged with the tag in RELEASE_TAG.\n# If the current commit is already tagged with the value in RELEASE_TAG then this is a NOOP.\nmaybe-tag-release: var-require-all-RELEASE_TAG\n\t$(if $(filter-out $(call git-release-tag-for-current-commit),$(RELEASE_TAG)),\\\n\t\t$(MAKE) tag-release,\\\n\t\t@echo \"Current commit already tagged with $(RELEASE_TAG)\")\n\n# tag-release tags the current commit with an annotated tag with the value in RELEASE_TAG. This target throws an error\n# if the current branch is not master.\ntag-release: var-require-one-of-CONFIRM-DRYRUN var-require-all-DEV_TAG_SUFFIX-RELEASE_TAG\n\t$(if $(filter-out $(RELEASE_BRANCH_BASE),$(call current-branch)),,$(error tag-release cannot be called on $(RELEASE_BRANCH_BASE)))\n\tgit tag -a $(RELEASE_TAG) -m \"Release $(RELEASE_TAG)\"\n\n# maybe-push-release-tag calls the push-release-tag target only if the tag in RELEASE_TAG is not already pushed to\n# github. If the tag is pushed to github then this is a NOOP.\n# TODO should we check the commit tagged in remote is the current commit? Probably yes... that could catch some annoying problems that would be hard to find if they happened...\nmaybe-push-release-tag: var-require-all-RELEASE_TAG\n\t$(if $(shell git ls-remote -q --tags $(GIT_REMOTE) $(RELEASE_TAG)),\\\n\t\t@echo Release $(RELEASE_TAG) already in github,\\\n\t\t$(MAKE) push-release-tag)\n\n# push-release-tag pushes the tag in RELEASE_TAG to github. If the current commit is not tagged with this tag then this\n# target fails.\npush-release-tag: var-require-one-of-CONFIRM-DRYRUN var-require-all-DEV_TAG_SUFFIX-RELEASE_TAG\n\t$(if $(call git-release-tag-for-current-commit),,$(error Commit does not have a release tag))\n\t$(GIT) push $(GIT_REMOTE) $(RELEASE_TAG)\n\n# maybe-dev-tag-next-release calls the dev-tag-next-release-target only if the tag NEXT_RELEASE_VERSION-DEV_TAG_SUFFIX\n# doesn't exist locally. If the tag does exist then this is a NOOP.\nmaybe-dev-tag-next-release: var-require-all-NEXT_RELEASE_VERSION-DEV_TAG_SUFFIX\n\t$(if $(shell git rev-parse --verify -q \"$(NEXT_RELEASE_VERSION)-$(DEV_TAG_SUFFIX)\"),\\\n\t\techo \"Tag for next release $(NEXT_RELEASE_VERSION) already exists$(comma) not creating.\",\\\n\t\t$(MAKE) dev-tag-next-release)\n\n# dev-tag-next-release creates a new commit empty commit at the head of BRANCH and tags it with\n# NEXT_RELEASE_VERSION-DEV_TAG_SUFFIX.\ndev-tag-next-release: var-require-one-of-CONFIRM-DRYRUN var-require-all-NEXT_RELEASE_VERSION-DEV_TAG_SUFFIX-BRANCH\n\tgit checkout $(BRANCH)\n\t$(GIT) pull $(GIT_REMOTE) $(BRANCH)\n\tgit commit --allow-empty -m \"Begin development on $(NEXT_RELEASE_VERSION)\"\n\tgit tag $(NEXT_RELEASE_VERSION)-$(DEV_TAG_SUFFIX)\n\n# maybe-push-next-release-dev-tag calls the push-next-release-dev-tag target if the tag\n# NEXT_RELEASE_VERSION-DEV_TAG_SUFFIX doesn't exist remotely. If the tag exists remotely then this is a NOOP.\nmaybe-push-next-release-dev-tag: var-require-one-of-CONFIRM-DRYRUN var-require-all-NEXT_RELEASE_VERSION-DEV_TAG_SUFFIX\n\t$(if $(shell git ls-remote --tags $(GIT_REMOTE) $(NEXT_RELEASE_VERSION)-$(DEV_TAG_SUFFIX)),\\\n\t\techo \"Dev tag for next release $(NEXT_RELEASE_VERSION) already pushed to github.\",\\\n\t\t$(MAKE) push-next-release-dev-tag)\n\n# push-next-release-dev-tag pushes the tag NEXT_RELEASE_VERSION-DEV_TAG_SUFFIX and the current branch to github. If\n# the current branch is not the head of the branch then this target fails.\npush-next-release-dev-tag: var-require-one-of-CONFIRM-DRYRUN var-require-all-NEXT_RELEASE_VERSION-DEV_TAG_SUFFIX\n\t# The next release commit should always be at the head of a release branch.\n\t$(if $(filter-out HEAD,$(call current-branch)),,\\\n\t\t$(error \"Refusing to push commit for next release while in a detached state.\"))\n\t$(GIT) push $(GIT_REMOTE) $(call current-branch)\n\t$(GIT) push $(GIT_REMOTE) $(NEXT_RELEASE_VERSION)-$(DEV_TAG_SUFFIX)\n\n# release-dev-images releases the dev images by calling the release-tag-dev-image-% and publish-dev-image-% on each\n# value in BUILD_IMAGES. This results in retagging all the dev images with the release tag and copying the dev images\n# over to the release registries.\nifndef SKIP_DEV_IMAGE_RETAG\nRELEASE_DEV_IMAGES_RETAG_TARGETS ?= $(addprefix release-retag-dev-images-in-registry-,$(call escapefs, $(DEV_REGISTRIES)))\nendif\n\nRELEASE_DEV_IMAGES_TARGETS ?= $(addprefix release-dev-images-to-registry-,$(call escapefs, $(RELEASE_REGISTRIES)))\nrelease-dev-images: var-require-one-of-CONFIRM-DRYRUN var-require-all-BUILD_IMAGES $(RELEASE_DEV_IMAGES_RETAG_TARGETS) $(RELEASE_DEV_IMAGES_TARGETS)\n\n# release-retag-dev-images-in-registry-% retags all the build / arch images specified by BUILD_IMAGES and VALIDARCHES in\n# the registry specified by $* with the release tag specified by RELEASE_TAG.\nrelease-retag-dev-images-in-registry-%:\n\t$(MAKE) $(addprefix release-retag-dev-image-in-registry-,$(call escapefs, $(BUILD_IMAGES))) DEV_REGISTRY=$(call unescapefs,$*)\n\n# release-retag-dev-image-in-registry-% retags the build image specified by $* in the dev registry specified by\n# DEV_REGISTRY with the release tag specified by RELEASE_TAG. If DEV_REGISTRY is in the list of registries specified by\n# RELEASE_REGISTRIES then the retag is not done\nrelease-retag-dev-image-in-registry-%:\n\t$(if $(filter-out $(RELEASE_REGISTRIES),$(DEV_REGISTRY)),\\\n\t\t$(CRANE) cp $(DEV_REGISTRY)/$(call unescapefs,$*):$(DEV_TAG) $(DEV_REGISTRY)/$(call unescapefs,$*):$(RELEASE_TAG))$(double_quote)\n\n# release-dev-images-to-registry-% copies and retags all the build / arch images specified by BUILD_IMAGES and\n# VALIDARCHES from the registry specified by DEV_REGISTRY to the registry specified by RELEASE_REGISTRY using the tag\n# specified by DEV_TAG and RELEASE_TAG.\nrelease-dev-images-to-registry-%:\n\t$(MAKE) $(addprefix release-dev-image-to-registry-,$(call escapefs, $(BUILD_IMAGES))) RELEASE_REGISTRY=$(call unescapefs,$*)\n\n# release-dev-image-to-registry-% copies the build image and build arch images specified by $* and VALIDARCHES from\n# the dev repo specified by DEV_TAG and RELEASE.\nrelease-dev-image-to-registry-%:\n\t$(if $(SKIP_MANIFEST_RELEASE),,\\\n\t\t$(CRANE) cp $(DEV_REGISTRY)/$(call unescapefs,$*):$(DEV_TAG) $(RELEASE_REGISTRY)/$(call unescapefs,$*):$(RELEASE_TAG))$(double_quote)\n\t$(if $(SKIP_ARCH_RELEASE),,\\\n\t\t$(MAKE) $(addprefix release-dev-image-arch-to-registry-,$(VALIDARCHES)) BUILD_IMAGE=$(call unescapefs,$*))\n\n# release-dev-image-to-registry-% copies the build arch image specified by BUILD_IMAGE and ARCH from the dev repo\n# specified by DEV_TAG and RELEASE.\nrelease-dev-image-arch-to-registry-%:\n\t$(CRANE) cp $(DEV_REGISTRY)/$(BUILD_IMAGE):$(DEV_TAG)-$* $(RELEASE_REGISTRY)/$(BUILD_IMAGE):$(RELEASE_TAG)-$*$(double_quote)\n\n# release-prereqs checks that the environment is configured properly to create a release.\n.PHONY: release-prereqs\nrelease-prereqs:\nifndef VERSION\n\t$(error VERSION is undefined - run using make release VERSION=vX.Y.Z)\nendif\n\n# Check if the codebase is dirty or not.\ncheck-dirty:\n\t@if [ \"$$(git --no-pager diff --stat)\" != \"\" ]; then \\\n\techo \"The following files are dirty\"; git --no-pager diff; exit 1; fi\n\nbin/yq:\n\tmkdir -p bin\n\t$(eval TMP := $(shell mktemp -d))\n\tcurl -sSf -L --retry 5 -o $(TMP)/yq4.tar.gz https://github.com/mikefarah/yq/releases/download/v4.34.2/yq_linux_$(BUILDARCH).tar.gz\n\ttar -zxvf $(TMP)/yq4.tar.gz -C $(TMP)\n\tmv $(TMP)/yq_linux_$(BUILDARCH) bin/yq\n\n###############################################################################\n# Common functions for launching a local Kubernetes control plane.\n###############################################################################\n## Kubernetes apiserver used for tests\nAPISERVER_NAME := calico-local-apiserver\nrun-k8s-apiserver: stop-k8s-apiserver run-etcd\n\tdocker run --detach --net=host \\\n\t\t--name $(APISERVER_NAME) \\\n\t\t-v $(REPO_ROOT):/go/src/github.com/projectcalico/calico \\\n\t\t-v $(CERTS_PATH):/home/user/certs \\\n\t\t-e KUBECONFIG=/home/user/certs/kubeconfig \\\n\t\t$(CALICO_BUILD) kube-apiserver \\\n\t\t--etcd-servers=http://$(LOCAL_IP_ENV):2379 \\\n\t\t--service-cluster-ip-range=10.101.0.0/16,fd00:96::/112 \\\n\t\t--authorization-mode=RBAC \\\n\t\t--service-account-key-file=/home/user/certs/service-account.pem \\\n\t\t--service-account-signing-key-file=/home/user/certs/service-account-key.pem \\\n\t\t--service-account-issuer=https://localhost:443 \\\n\t\t--api-audiences=kubernetes.default \\\n\t\t--client-ca-file=/home/user/certs/ca.pem \\\n\t\t--tls-cert-file=/home/user/certs/kubernetes.pem \\\n\t\t--tls-private-key-file=/home/user/certs/kubernetes-key.pem \\\n\t\t--enable-priority-and-fairness=false \\\n\t\t--max-mutating-requests-inflight=0 \\\n\t\t--max-requests-inflight=0\n\n\t# Wait until the apiserver is accepting requests.\n\twhile ! docker exec $(APISERVER_NAME) kubectl get nodes; do echo \"Waiting for apiserver to come up...\"; sleep 2; done\n\n\t# Wait until we can configure a cluster role binding which allows anonymous auth.\n\twhile ! docker exec $(APISERVER_NAME) kubectl create \\\n\t\tclusterrolebinding anonymous-admin \\\n\t\t--clusterrole=cluster-admin \\\n\t\t--user=system:anonymous 2>/dev/null ; \\\n\t\tdo echo \"Waiting for $(APISERVER_NAME) to come up\"; \\\n\t\tsleep 1; \\\n\t\tdone\n\n\t# Create CustomResourceDefinition (CRD) for Calico resources\n\twhile ! docker exec $(APISERVER_NAME) kubectl \\\n\t\tapply -f /go/src/github.com/projectcalico/calico/libcalico-go/config/crd/; \\\n\t\tdo echo \"Trying to create CRDs\"; \\\n\t\tsleep 1; \\\n\t\tdone\n\n# Stop Kubernetes apiserver\nstop-k8s-apiserver:\n\t@-docker rm -f $(APISERVER_NAME)\n\n# Run a local Kubernetes controller-manager in a docker container, useful for tests.\nCONTROLLER_MANAGER_NAME := calico-local-controller-manager\nrun-k8s-controller-manager: stop-k8s-controller-manager run-k8s-apiserver\n\tdocker run --detach --net=host \\\n\t\t--name $(CONTROLLER_MANAGER_NAME) \\\n\t\t-v $(CERTS_PATH):/home/user/certs \\\n\t\t$(CALICO_BUILD) kube-controller-manager \\\n\t\t--master=https://127.0.0.1:6443 \\\n\t\t--kubeconfig=/home/user/certs/kube-controller-manager.kubeconfig \\\n\t\t--min-resync-period=3m \\\n\t\t--allocate-node-cidrs=true \\\n\t\t--cluster-cidr=192.168.0.0/16 \\\n\t\t--v=5 \\\n\t\t--service-account-private-key-file=/home/user/certs/service-account-key.pem \\\n\t\t--root-ca-file=/home/user/certs/ca.pem\n\n## Stop Kubernetes controller manager\nstop-k8s-controller-manager:\n\t@-docker rm -f $(CONTROLLER_MANAGER_NAME)\n\n###############################################################################\n# Common functions for create a local kind cluster.\n###############################################################################\nKIND_DIR := $(REPO_ROOT)/hack/test/kind\nKIND ?= $(KIND_DIR)/kind\nKUBECTL ?= $(KIND_DIR)/kubectl\n\n# Different tests may require different kind configurations.\nKIND_CONFIG ?= $(KIND_DIR)/kind.config\nKIND_NAME = $(basename $(notdir $(KIND_CONFIG)))\nKIND_KUBECONFIG?=$(KIND_DIR)/$(KIND_NAME)-kubeconfig.yaml\n\nkind-cluster-create: $(REPO_ROOT)/.$(KIND_NAME).created\n$(REPO_ROOT)/.$(KIND_NAME).created: $(KUBECTL) $(KIND)\n\t# First make sure any previous cluster is deleted\n\t$(MAKE) kind-cluster-destroy\n\n\t# Create a kind cluster.\n\t$(KIND) create cluster \\\n\t\t--config $(KIND_CONFIG) \\\n\t\t--kubeconfig $(KIND_KUBECONFIG) \\\n\t\t--name $(KIND_NAME) \\\n\t\t--image kindest/node:$(KINDEST_NODE_VERSION)\n\n\t# Wait for controller manager to be running and healthy, then create Calico CRDs.\n\twhile ! KUBECONFIG=$(KIND_KUBECONFIG) $(KUBECTL) get serviceaccount default; do echo \"Waiting for default serviceaccount to be created...\"; sleep 2; done\n\twhile ! KUBECONFIG=$(KIND_KUBECONFIG) $(KUBECTL) create -f $(REPO_ROOT)/libcalico-go/config/crd; do echo \"Waiting for CRDs to be created\"; sleep 2; done\n\ttouch $@\n\nkind-cluster-destroy: $(KIND) $(KUBECTL)\n\t-$(KUBECTL) --kubeconfig=$(KIND_KUBECONFIG) drain kind-control-plane kind-worker kind-worker2 kind-worker3 --ignore-daemonsets --force\n\t-$(KIND) delete cluster --name $(KIND_NAME)\n\trm -f $(KIND_KUBECONFIG)\n\trm -f $(REPO_ROOT)/.$(KIND_NAME).created\n\n$(KIND)-$(KIND_VERSION):\n\tmkdir -p $(KIND_DIR)/$(KIND_VERSION)\n\t$(DOCKER_GO_BUILD) sh -c \"GOBIN=/go/src/github.com/projectcalico/calico/hack/test/kind/$(KIND_VERSION) go install sigs.k8s.io/kind@$(KIND_VERSION)\"\n\tmv $(KIND_DIR)/$(KIND_VERSION)/kind $(KIND_DIR)/kind-$(KIND_VERSION)\n\trm -r $(KIND_DIR)/$(KIND_VERSION)\n\n$(KIND_DIR)/.kind-updated-$(KIND_VERSION): $(KIND)-$(KIND_VERSION)\n\trm -f $(KIND_DIR)/.kind-updated-*\n\tcd $(KIND_DIR) && ln -fs kind-$(KIND_VERSION) kind\n\ttouch $@\n\n.PHONY: kind\nkind: $(KIND)\n\t@echo \"kind: $(KIND)\"\n$(KIND): $(KIND_DIR)/.kind-updated-$(KIND_VERSION)\n\n$(KUBECTL)-$(K8S_VERSION):\n\tmkdir -p $(KIND_DIR)\n\tcurl -fsSL --retry 5 https://dl.k8s.io/release/$(K8S_VERSION)/bin/linux/$(ARCH)/kubectl -o $@\n\tchmod +x $@\n\n$(KIND_DIR)/.kubectl-updated-$(K8S_VERSION): $(KUBECTL)-$(K8S_VERSION)\n\trm -f $(KIND_DIR)/.kubectl-updated-*\n\tcd $(KIND_DIR) && ln -fs kubectl-$(K8S_VERSION) kubectl\n\ttouch $@\n\n.PHONY: kubectl\nkubectl: $(KUBECTL)\n\t@echo \"kubectl: $(KUBECTL)\"\n$(KUBECTL): $(KIND_DIR)/.kubectl-updated-$(K8S_VERSION)\n\nbin/helm-$(HELM_VERSION):\n\tmkdir -p bin\n\t$(eval TMP := $(shell mktemp -d))\n\tcurl -sSf -L --retry 5 -o $(TMP)/helm3.tar.gz https://get.helm.sh/helm-$(HELM_VERSION)-linux-$(ARCH).tar.gz\n\ttar -zxvf $(TMP)/helm3.tar.gz -C $(TMP)\n\tmv $(TMP)/linux-$(ARCH)/helm bin/helm-$(HELM_VERSION)\n\nbin/.helm-updated-$(HELM_VERSION): bin/helm-$(HELM_VERSION)\n\t# Remove old marker files so that bin/helm will be stale if we switch\n\t# branches and the helm version changes.\n\trm -f bin/.helm-updated-*\n\tcd bin && ln -fs helm-$(HELM_VERSION) helm\n\ttouch $@\n\n.PHONY: helm\nhelm: bin/helm\n\t@echo \"helm: $^\"\nbin/helm: bin/.helm-updated-$(HELM_VERSION)\n\n###############################################################################\n# Common functions for launching a local etcd instance.\n###############################################################################\n## Run etcd as a container (calico-etcd)\n# TODO: We shouldn't need to tear this down every time it is called.\n# TODO: We shouldn't need to enable the v2 API, but some of our test code still relies on it.\n.PHONY: run-etcd stop-etcd\nrun-etcd: stop-etcd\n\tdocker run --detach \\\n\t\t--net=host \\\n\t\t--entrypoint=/usr/local/bin/etcd \\\n\t\t--name calico-etcd $(ETCD_IMAGE) \\\n\t\t--enable-v2 \\\n\t\t--advertise-client-urls \"http://$(LOCAL_IP_ENV):2379,http://127.0.0.1:2379,http://$(LOCAL_IP_ENV):4001,http://127.0.0.1:4001\" \\\n\t\t--listen-client-urls \"http://0.0.0.0:2379,http://0.0.0.0:4001\"\n\nstop-etcd:\n\t@-docker rm -f calico-etcd\n\n###############################################################################\n# Helpers\n###############################################################################\n## Help\n.PHONY: help\nhelp:\n\t$(info Available targets)\n\t@echo\n\t@awk '/^[a-zA-Z\\-\\_\\%0-9\\/]+:/ {                                  \\\n\t   nb = sub( /^## /, \"\", helpMsg );                               \\\n\t   if(nb == 0) {                                                  \\\n\t      helpMsg = $$0;                                              \\\n\t      nb = sub( /^[^:]*:.* ## /, \"\", helpMsg );                   \\\n\t   }                                                              \\\n\t   if (nb)                                                        \\\n\t      printf \"\\033[1;31m%-\" width \"s\\033[0m %s\\n\", $$1, helpMsg;  \\\n\t}                                                                 \\\n\t{ helpMsg = $$0 }'                                                \\\n\twidth=30                                                          \\\n\t$(MAKEFILE_LIST)\n\t@echo\n\t@echo \"-----------------------------------------------------------\"\n\t@echo \"Building for $(BUILDOS)-$(ARCH) INSTALL_FLAG=$(INSTALL_FLAG)\"\n\t@echo\n\t@echo \"ARCH (target):\t\t$(ARCH)\"\n\t@echo \"OS (target):\t\t$(BUILDOS)\"\n\t@echo \"BUILDARCH (host):\t$(BUILDARCH)\"\n\t@echo \"CALICO_BUILD:\t\t$(CALICO_BUILD)\"\n\t@echo \"-----------------------------------------------------------\"\n\n###############################################################################\n# Common functions for building windows images.\n###############################################################################\n\n# When running on semaphore, just copy the docker config, otherwise run\n# 'docker-credential-gcr configure-docker' as well.\nifdef SEMAPHORE\nDOCKER_CREDENTIAL_CMD = cp /root/.docker/config.json_host /root/.docker/config.json\nelse\nDOCKER_CREDENTIAL_CMD = cp /root/.docker/config.json_host /root/.docker/config.json && \\\n\t\t\t\t\t\tdocker-credential-gcr configure-docker\nendif\n\n# This needs the $(WINDOWS_DIST)/bin/docker-credential-gcr binary in $PATH and\n# also the local ~/.config/gcloud dir to be able to push to gcr.io.  It mounts\n# $(DOCKER_CONFIG) and copies it so that it can be written to on the container,\n# but not have any effect on the host config.\nCRANE_BINDMOUNT_CMD := \\\n\tdocker run --rm \\\n\t\t--net=host \\\n\t\t--init \\\n\t\t--entrypoint /bin/sh \\\n\t\t-e LOCAL_USER_ID=$(LOCAL_USER_ID) \\\n\t\t-v $(CURDIR):/go/src/$(PACKAGE_NAME):rw \\\n\t\t-v $(DOCKER_CONFIG):/root/.docker/config.json_host:ro \\\n\t\t-e PATH=$${PATH}:/go/src/$(PACKAGE_NAME)/$(WINDOWS_DIST)/bin \\\n\t\t-v $(HOME)/.config/gcloud:/root/.config/gcloud \\\n\t\t-w /go/src/$(PACKAGE_NAME) \\\n\t\t$(CALICO_BUILD) -c $(double_quote)$(DOCKER_CREDENTIAL_CMD) && crane\n\nDOCKER_MANIFEST_CMD := docker manifest\n\nifdef CONFIRM\nCRANE_BINDMOUNT = $(CRANE_BINDMOUNT_CMD)\nDOCKER_MANIFEST = $(DOCKER_MANIFEST_CMD)\nelse\nCRANE_BINDMOUNT = echo [DRY RUN] $(CRANE_BINDMOUNT_CMD)\nDOCKER_MANIFEST = echo [DRY RUN] $(DOCKER_MANIFEST_CMD)\nendif\n\n# Clean up the docker builder used to create Windows image tarballs.\n.PHONY: clean-windows-builder\nclean-windows-builder:\n\t-docker buildx rm calico-windows-builder\n\n# Set up the docker builder used to create Windows image tarballs.\n.PHONY: setup-windows-builder\nsetup-windows-builder: clean-windows-builder\n\tdocker buildx create --name=calico-windows-builder --use --platform windows/amd64\n\n# FIXME: Use WINDOWS_HPC_VERSION and image instead of nanoserver and WINDOWS_VERSIONS when containerd v1.6 is EOL'd\n# .PHONY: image-windows release-windows\n# NOTE: WINDOWS_IMAGE_REQS must be defined with the requirements to build the windows\n# image. These must be added as reqs to 'image-windows' (originally defined in\n# lib.Makefile) on the specific package Makefile otherwise they are not correctly\n# recognized.\n# # Build Windows image with tag and possibly push it to $DEV_REGISTRIES\n# image-windows-with-tag: var-require-all-WINDOWS_IMAGE-WINDOWS_DIST-WINDOWS_IMAGE_REQS-IMAGETAG\n# \tpush=\"$${PUSH:-false}\"; \\\n# \tfor registry in $(DEV_REGISTRIES); do \\\n# \t\techo Building and pushing Windows image to $${registry}; \\\n# \t\timage=\"$${registry}/$(WINDOWS_IMAGE):$(IMAGETAG)\"; \\\n# \t\tdocker buildx build \\\n# \t\t\t--platform windows/amd64 \\\n# \t\t\t--output=type=image,push=$${push} \\\n# \t\t\t-t $${image} \\\n# \t\t\t--pull \\\n# \t\t\t--no-cache \\\n# \t\t\t--build-arg GIT_VERSION=$(GIT_VERSION) \\\n# \t\t\t--build-arg WINDOWS_HPC_VERSION=$(WINDOWS_HPC_VERSION) \\\n# \t\t\t-f Dockerfile-windows .; \\\n# \tdone ;\n\n# image-windows: var-require-all-BRANCH_NAME\n# \t$(MAKE) image-windows-with-tag PUSH=$(PUSH) IMAGETAG=$(if $(IMAGETAG_PREFIX),$(IMAGETAG_PREFIX)-)$(BRANCH_NAME)\n# \t$(MAKE) image-windows-with-tag PUSH=$(PUSH) IMAGETAG=$(if $(IMAGETAG_PREFIX),$(IMAGETAG_PREFIX)-)$(shell git describe --tags --dirty --long --always --abbrev=12)\n\n# # Build and push Windows image\n# release-windows: var-require-one-of-CONFIRM-DRYRUN release-prereqs clean-windows\n# \t$(MAKE) image-windows PUSH=true\n\n# Windows image pushing is different because we do not build docker images directly.\n# Since the build machine is linux, we output the images to a tarball. (We can\n# produce images but there will be no output because docker images\n# built for Windows cannot be loaded on linux.)\n#\n# The resulting image tarball is then pushed to registries during cd/release.\n# The image tarballs are located in WINDOWS_DIST and have files names\n# with the format 'node-windows-v3.21.0-2-abcdef-20H2.tar'.\n#\n# In addition to pushing the individual images, we also create the manifest\n# directly using 'docker manifest'. This is possible because Semaphore is using\n# a recent enough docker CLI version (20.10.0)\n#\n# - Create the manifest with 'docker manifest create' using the list of all images.\n# - For each windows version, 'docker manifest annotate' its image with \"os.image: <windows_version>\".\n#   <windows_version> is the version string that looks like, e.g. 10.0.19041.1288.\n#   Setting os.image in the manifest is required for Windows hosts to load the\n#   correct image in manifest.\n# - Finally we push the manifest, \"purging\" the local manifest.\n\n$(WINDOWS_DIST)/$(WINDOWS_IMAGE)-$(GIT_VERSION)-%.tar: windows-sub-image-$*\n\nDOCKER_CREDENTIAL_VERSION=\"2.1.18\"\nDOCKER_CREDENTIAL_OS=\"linux\"\nDOCKER_CREDENTIAL_ARCH=\"amd64\"\n$(WINDOWS_DIST)/bin/docker-credential-gcr:\n\t-mkdir -p $(WINDOWS_DIST)/bin\n\tcurl -fsSL  --retry 5 \"https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v$(DOCKER_CREDENTIAL_VERSION)/docker-credential-gcr_$(DOCKER_CREDENTIAL_OS)_$(DOCKER_CREDENTIAL_ARCH)-$(DOCKER_CREDENTIAL_VERSION).tar.gz\" -o docker-credential-gcr.tar.gz\n\ttar xzf docker-credential-gcr.tar.gz --to-stdout docker-credential-gcr | tee $@ > /dev/null && chmod +x $@\n\trm -f docker-credential-gcr.tar.gz\n\n.PHONY: docker-credential-gcr-binary\ndocker-credential-gcr-binary: var-require-all-WINDOWS_DIST-DOCKER_CREDENTIAL_VERSION-DOCKER_CREDENTIAL_OS-DOCKER_CREDENTIAL_ARCH $(WINDOWS_DIST)/bin/docker-credential-gcr\n\n# NOTE: WINDOWS_IMAGE_REQS must be defined with the requirements to build the windows\n# image. These must be added as reqs to 'image-windows' (originally defined in\n# lib.Makefile) on the specific package Makefile otherwise they are not correctly\n# recognized.\nwindows-sub-image-%: var-require-all-GIT_VERSION-WINDOWS_IMAGE-WINDOWS_DIST-WINDOWS_IMAGE_REQS\n\t# ensure dir for windows image tars exits\n\t-mkdir -p $(WINDOWS_DIST)\n\tdocker buildx build \\\n\t\t--platform windows/amd64 \\\n\t\t--output=type=docker,dest=$(CURDIR)/$(WINDOWS_DIST)/$(WINDOWS_IMAGE)-$(GIT_VERSION)-$*.tar \\\n\t\t--pull \\\n\t\t-t $(WINDOWS_IMAGE):latest \\\n\t\t--build-arg GIT_VERSION=$(GIT_VERSION) \\\n\t\t--build-arg=WINDOWS_VERSION=$* \\\n\t\t-f Dockerfile-windows .\n\n.PHONY: image-windows release-windows release-windows-with-tag\nimage-windows: setup-windows-builder var-require-all-WINDOWS_VERSIONS\n\tfor version in $(WINDOWS_VERSIONS); do \\\n\t\t$(MAKE) windows-sub-image-$${version}; \\\n\tdone;\n\nrelease-windows-with-tag: var-require-one-of-CONFIRM-DRYRUN var-require-all-IMAGETAG-DEV_REGISTRIES image-windows docker-credential-gcr-binary\n\tfor registry in $(DEV_REGISTRIES); do \\\n\t\techo Pushing Windows images to $${registry}; \\\n\t\tall_images=\"\"; \\\n\t\tmanifest_image=\"$${registry}/$(WINDOWS_IMAGE):$(IMAGETAG)\"; \\\n\t\tfor win_ver in $(WINDOWS_VERSIONS); do \\\n\t\t\timage_tar=\"$(WINDOWS_DIST)/$(WINDOWS_IMAGE)-$(GIT_VERSION)-$${win_ver}.tar\"; \\\n\t\t\timage=\"$${registry}/$(WINDOWS_IMAGE):$(IMAGETAG)-windows-$${win_ver}\"; \\\n\t\t\techo Pushing image $${image} ...; \\\n\t\t\t$(CRANE_BINDMOUNT) push $${image_tar} $${image}$(double_quote) & \\\n\t\t\tall_images=\"$${all_images} $${image}\"; \\\n\t\tdone; \\\n\t\twait; \\\n\t\t$(DOCKER_MANIFEST) create --amend $${manifest_image} $${all_images}; \\\n\t\tfor win_ver in $(WINDOWS_VERSIONS); do \\\n\t\t\tversion=$$(docker manifest inspect mcr.microsoft.com/windows/nanoserver:$${win_ver} | grep \"os.version\" | head -n 1 | awk -F\\\" '{print $$4}'); \\\n\t\t\timage=\"$${registry}/$(WINDOWS_IMAGE):$(IMAGETAG)-windows-$${win_ver}\"; \\\n\t\t\t$(DOCKER_MANIFEST) annotate --os windows --arch amd64 --os-version $${version} $${manifest_image} $${image}; \\\n\t\tdone; \\\n\t\t$(DOCKER_MANIFEST) push --purge $${manifest_image}; \\\n\tdone;\n\nrelease-windows: var-require-one-of-CONFIRM-DRYRUN var-require-all-DEV_REGISTRIES-WINDOWS_IMAGE var-require-one-of-VERSION-BRANCH_NAME\n\tdescribe_tag=$(if $(IMAGETAG_PREFIX),$(IMAGETAG_PREFIX)-)$(shell git describe --tags --dirty --long --always --abbrev=12); \\\n\trelease_tag=$(if $(VERSION),$(VERSION),$(if $(IMAGETAG_PREFIX),$(IMAGETAG_PREFIX)-)$(BRANCH_NAME)); \\\n\t$(MAKE) release-windows-with-tag IMAGETAG=$${describe_tag}; \\\n\tfor registry in $(DEV_REGISTRIES); do \\\n\t\t$(CRANE_BINDMOUNT) cp $${registry}/$(WINDOWS_IMAGE):$${describe_tag} $${registry}/$(WINDOWS_IMAGE):$${release_tag}$(double_quote); \\\n\tdone;\n"
        },
        {
          "name": "libcalico-go",
          "type": "tree",
          "content": null
        },
        {
          "name": "licenses",
          "type": "tree",
          "content": null
        },
        {
          "name": "manifests",
          "type": "tree",
          "content": null
        },
        {
          "name": "metadata.mk",
          "type": "blob",
          "size": 2.2158203125,
          "content": "#################################################################################################\n# This file contains Makefile configuration parameters and metadata for this branch.\n#################################################################################################\n\n# The version of github.com/projectcalico/go-build to use.\nGO_BUILD_VER=v0.95\n# Env var to ACK Ginkgo deprecation warnings, may need updating with go-build.\nACK_GINKGO=ACK_GINKGO_DEPRECATIONS=1.16.5\n\n# Version of Kubernetes to use for tests, bitnami/kubectl, and kubectl binary release.\nK8S_VERSION=v1.31.4\n\n# Version of various tools used in the build and tests.\nCOREDNS_VERSION=1.5.2\nETCD_VERSION=v3.5.6\nGHR_VERSION=v0.17.0\nHELM_VERSION=v3.11.3\nKINDEST_NODE_VERSION=v1.31.4\nKIND_VERSION=v0.25.0\nPROTOC_VER=v0.1\nUBI_VERSION=8.10\n\n# Configuration for Semaphore/Github integration.  This needs to be set\n# differently for a forked repo.\nORGANIZATION = projectcalico\nGIT_REPO = calico\n\n# Part of the git remote that is common to git and HTTP representations.\n# Used to auto-detect the right remote.\nGIT_REPO_SLUG ?= $(ORGANIZATION)/$(GIT_REPO)\n\n# Configure git to access repositories using SSH.\nGIT_USE_SSH = true\n\n# The version of BIRD to use for calico/node builds and confd tests.\nBIRD_VERSION=v0.3.3-211-g9111ec3c\n\n# DEV_REGISTRIES configures the container image registries which are built from this\n# repository. By default, just build images with calico/. Allow this variable to be overridden,\n# as both CI/CD and the release tooling will override this to build publishable images.\nDEV_REGISTRIES ?= calico\n\n# The directory for windows image tarballs\nWINDOWS_DIST = dist/windows\n\n# FIXME: Use WINDOWS_HPC_VERSION and remove WINDOWS_VERSIONS when containerd v1.6 is EOL'd\n# The Windows HPC container version used as base for Calico Windows images\nWINDOWS_HPC_VERSION ?= v1.0.0\n# The Windows versions used as base for Calico Windows images\nWINDOWS_VERSIONS ?= 1809 ltsc2022\n\n# The CNI plugin and flannel code that will be cloned and rebuilt with this repo's go-build image\n# whenever the cni-plugin image is created.\nCNI_VERSION=master\nFLANNEL_VERSION=main\n\n# The libbpf version to use\nLIBBPF_VERSION=v1.4.6\n\n# The operator branch corresponding to this branch.\nOPERATOR_BRANCH=master\n\n"
        },
        {
          "name": "networking-calico",
          "type": "tree",
          "content": null
        },
        {
          "name": "node",
          "type": "tree",
          "content": null
        },
        {
          "name": "pod2daemon",
          "type": "tree",
          "content": null
        },
        {
          "name": "process",
          "type": "tree",
          "content": null
        },
        {
          "name": "release",
          "type": "tree",
          "content": null
        },
        {
          "name": "typha",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}