{
  "metadata": {
    "timestamp": 1736567458794,
    "page": 64,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "sosedoff/pgweb",
      "stars": 8708,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0205078125,
          "content": ".github\nbin/\n./pgweb\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0166015625,
          "content": "bindata.go -diff\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0517578125,
          "content": ".DS_Store\n.idea\n.env\n.envrc\npgweb\nbin\ntmp/\ncover.out\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 18.5263671875,
          "content": "## Changelog\n\nCurrent [release](https://github.com/sosedoff/pgweb/releases) is `0.16.2`.\n\n## 0.16.2 - 2024-11-02\n\n- `FIX` Build a new Docker image with PostgreSQL 17 support\n- `FIX` Run CI against PostgreSQL 17, GH-758\n- `FIX` Rename master to main branch, GH-750\n\n## 0.16.1 - 2024-09-07\n\n- `FIX` Remove linux/arm/v5 from docker release action, GH-742\n\n## 0.16.0 - 2024-06-04\n\n- `NEW` Allow database stats downloads, GH-738\n- `NEW` Add analyze table action, GH-737\n- `NEW` Bump postgres version used in docker compose to 15, GH-729\n- `NEW` Build on Go 1.22, GH-726\n- `FIX` SSH tunnel cleanup and parse fixup, GH-731\n- `FIX` Drop linux/arm/v5 from docker build, GH-728\n- `FIX` Propagate CGO_ENABLED environment variable to docker build, GH-724\n\n## 0.15.0 - 2024-03-14\n\n- `NEW` Add support for a bookmarks-only mode, GH-716\n- `FIX` Fix missing indexes by quoting schema/table name to ::regclass, GH-711\n- `FIX` Continue on parseJSON error, GH-708\n\n## 0.14.3 - 2024-01-28\n\n- `NEW` Allow retrying a connection on startup, GH-695\n- `NEW` Allow setting readonly mode in bookmarks, GH-707\n- `FIX` Add UPDATE to list of restricted keywords in read-only mode, GH-697\n\n## 0.14.2 - 2023-10-29\n\n- `NEW` Execute tests using PostgreSQL 16, GH-691\n- `FIX` Unclosed database sessions and tunnels, GH-688\n- `FIX` Use pg_table_size for table stats query, GH-685\n- `FIX` Use `HasSuffix` to correctly determine URL prefix, GH-684\n\n## 0.14.1 - 2023-06-17\n\n- `NEW` Add process start time metric, GH-675\n- `NEW` Configure pgweb user for docker container, GH-674\n- `NEW` Updated dockerfile, GH-645\n- `FIX` Fix typo in the healthy metric, GH-657\n- `NEW` Use entrypoint instead of cmd in in dockerfile, GH-654\n\n## 0.14.0 - 2023-02-21\n\n- `FIX` History page query loading fixup, GH-632\n- `NEW` Display cell content via context menu, GH-634\n- `NEW` Handle support/permissions errors in info call, GH-635\n- `NEW` Show error message when API calls fail, GH-636\n- `NEW` Add bookmark options to load username/password from env vars, GH-638\n- `NEW` Add context menu to display database tables stats, GH-639\n- `NEW` Added Local Queries feature, GH-641\n- `FIX` Ensure that objects are sorted by schema and name, GH-648\n- `FIX` Fetch local queries on db connect, GH-650\n\n## 0.13.1 - 2022-12-27\n\n- Fix connect flow when `~/.pgweb/bookmarks` directory is not available, GH-631\n\n## 0.13.0 - 2022-12-25\n\n- Add support for .pgpass file, GH-617\n- Request logging additions (request id, forwarded user), GH-618\n- Establish connections using bookmark ID only, GH-619\n- Display empty schemas on the sidebar, GH-621\n- Configure timeout and retries when testing connection status, GH-623\n- Setup basic prom metrics endpoint, GH-624\n- Add default connect_timeout option to connection string, GH-626\n- Add duration_ms to log entries, GH-628\n- Add query execution stats to api endpoint, GH-629\n\n## 0.12.0 - 2022-12-13\n\n- Deprecate usage of Gox for binary builds, GH-571\n- Add netcat install in dockerfile to provide a way to healthcheck, GH-572\n- Install latest postgres client in docker image, GH-577\n- Add support for `PGWEB_` prefix environment variables, GH-585\n- Fix export URL generation, refactor export code, GH-588\n- Add logrus-based request logger, GH-589\n- Configure logger for connect backend, GH-591\n- Set LDFLAGS for make build/release commands, GH-592\n- Add internal sessions manager, GH-593\n- Include index size on the index list view, GH-595\n- Fix flaky backend connection test, GH-596\n- Add ability to view and copy views/materialized views definitions, GH-594\n- Enable dev assets mode with PGWEB_ASSETS_DEVMODE env var, GH-597\n- Make query input box resizable, GH-599\n- Deprecate Heroku demo deployments and switch to Fly, GH-600\n- Handle returning values in update/delete queries, GH-601\n- Fix panic with invalid time marshaling, GH-602\n- Configure logging level and format, GH-605\n- Use go embed to load queries from static files, GH-607\n- Switch go build target to 1.19, GH-603\n- Add support for user functions, GH-608\n- Implement global query timeout option, GH-609\n- Switch windows tests from Appveyor to Github Actions, GH-611\n- Fix activity endpoint panic when server version is not detected, GH-612\n\n## 0.11.12 - 2022-07-05\n\n- Update base docker image (alpine), update deps, GH-558\n- Refactor docker images building, include ARM, GH-568\n\n## 0.11.11 - 2022-03-29\n\n- Auto-detect the query from the query source based on user selection, GH-547\n- Added binary codec base58 as well as improving the help for --binary-codec flag, GH-548\n- Change binary codec back to none, GH-555\n\n## 0.11.10 - 2022-01-20\n\n- Removes alert on column copy value, GH-536\n- Migrate test suite to Github Action, GH-540\n- Serialize binary bytea cols into hex/base64, GH-537\n- Include build time into version string, GH-541\n- Explain analyze dropdown button, GH-532\n- Switch to go 1.17, GH-543\n- Use HTTP 302 status code for successful backend redirect, GH-544\n- Add connect backend tests, GH-546\n\n## 0.11.9 - 2021-11-08\n\n- Releases are built on Go 1.17\n- Build time correction, GH-521\n- Fix broken assets URL path prefix, GH-525\n- Update docker build image to alpine:3.14, GH-522\n- Upgrade gin dependency to v1.7.4, GH-527\n- Add FreeBSD startup script, GH-520\n\n## 0.11.8 - 2021-07-07\n\n- Releases are built with Go 1.16\n- Add ARM64 v7 build target, GH-497\n- Switch to Go modules for dependency management, GH-509\n- Switch to Go embed for static assets management, GH-510\n- Add Darwin/ARM64 build target (Apple Silicon), GH-513\n\n## 0.11.7 - 2020-10-18\n\n- Releases are built with Go 1.15\n- Show results row context menu on custom query results, GH-457\n- Do not terminate if local authentication failed on start, GH-463\n- Do not show other databases if session is locked, GH-470\n- Strip debug information from binary to reduce size, GH-489\n- Disable autocomplete on database search field, GH-492\n- Improve windows connection error matching during start, GH-493\n\n## 0.11.6 - 2020-02-19\n\n- Add CLI options for SSL key, cert and root certs, GH-452\n- Remove double click action on cell, GH-455\n\n## 0.11.5 - 2019-12-16\n\n- Add basic SQL keyword autocompletion, GH-443\n- SSH Private Key handling update (encrypted keys are supported now), GH-445\n- Include Go version into `pgweb --version` output, GH-447\n- Fix long table name bug in the sidebar, GH-448\n- Add SQL objects (table,views,etc) autocompletion, GH-449\n- Include Go version into info API endpoint, GH-450\n\n## 0.11.4 - 2019-10-05\n\n- Fix SQL export filename, GH-438\n- Update Docker image to alpine:3.10, GH-439\n- Drop unsupported pg_dump options from connection string, GH-441\n- Misc code cleanup and formatting, GH-442\n\n## 0.11.3 - 2019-07-24\n\n- Misc: add script to update homebrew formula version, GH-423\n- Destructive keyword restriction in read-only mode, GH-421\n- Make database object searchable in sidebar, GH-434\n- Update lib/pg to 1.1.1, GH-435\n\n## 0.11.2 - 2019-02-15\n\n- Fix table row estimation query for camelcase schemas, GH-414\n\n## 0.11.1 - 2019-01-28\n\n- Typo fixes\n- Add Base64 javascript encoder/decoder to replace deprecated window.atob call, GH-405\n- Fix startup error when DATABASE_URL is set, GH-406\n- Fix user auto detection when USER env var is not set, GH-408\n- Switch bindata dependency to use maintained fork: github.com/go-bindata/go-bindata, GH-409\n\n## 0.11.0 - 2018-12-24\n\n- Tweak sidebar database object counters styles, GH-400\n- Do not exit with error if local server is not running, GH-399\n- Fix SSH host verification check, GH-398\n- Scope activity list to current database only, GH-397\n- Show current release version and check for updates, GH-396\n- Force switch back to default connection settings view, GH-395\n- Fix row count estimation bug, GH-394\n- Print out failed query SQL and args with --debug flag, GH-393\n\n## 0.10.0 - 2018-11-28\n\n- Fixes relation not found errors when dealing with table names that have uppercase characters, GH-356\n- Dockerfile updates, GH-357\n- Check if pg_dump is available before running database export, GH-358\n- Improvements to CockroachDB integration, GH-365\n- Add EstimatedTableRowsCount to avoid count in large tables, GH-366\n- Automatically set table filter option to 'equals' if its not set, GH-370\n- Dependencies update and switch to dep, GH-375\n- Add column context menu item to get numeric stats, GH-377\n- Fix issues with connection string builder, GH-378\n- Include rows count to numeric stats view on table column, GH-379\n- Make localhost to be a default db host, GH-380\n- Clear out connection settings/bookmark on login screen when running in session/connect mode\n- Add table row context menu with actions, GH-381\n- Allow settings url prefix with URL_PREFIX env var, GH-387\n- Fix JSON marshal panic when dealing with NaN values, GH-388\n- Fix startup behavior when user did not provide a database name, GH-389\n\n## 0.9.12 - 2018-04-23\n\n- Add link to view database connection string format on login page\n- Include constraint name under \"constraints\" tab, GH-343\n- Misc CI and config changes\n\n## 0.9.11 - 2017-12-07\n\n- Fix ssl mode for the connection url in the bookmarks, GH-320\n- Add support for CORS, GH-321\n- Fix custom query results counter for empty queries, GH-322\n- Reorganize the table context menu, GH-323\n- Disable database connection string text field autocomplete, GH-327\n- Add db prefix to the table export files, GH-329\n- Add database view context menu with export actions, GH-330\n\n## 0.9.10 - 2017-11-03\n\n- Make idle connection timeout configurable, [GH-282]\n- Fix panics when sshinfo is not set on bookmarks, [GH-296]\n- Dot now allow using startup bookmark in multi-session mode, [GH-300]\n- Add ability to copy table name from the sidebar, [GH-301]\n\n## 0.9.9 - 2017-09-28\n\n- Automatically format JSON data exports, GH-255\n- Update Docker image to alpine:3.6, GH-256\n- Print out PostgreSQL server version on start in a single-session mode, GH-264\n- Record last query timestamp for the client connection, GH-265\n- Add context menu for table headers in browse mode (copy name, see unique values), GH-268\n- Add ability to export current database dump, GH-270\n- Automatically open pgweb in browser on start if its already running, GH-272\n- Connect to the database with credentials provided by a third-party backend, GH-266\n- Automatically close idle sessions (no activity in 1 hour), GH-275\n- Allow connecting via SSH with a custom private key and other fixes, GH-277\n- Add options to disable SSH connections, GH-279\n\n## 0.9.8 - 2017-08-04\n\n- Fixed error checking in the API, GH-234\n- Fixed activity tab to support PG 9.x versions, GH-237\n- Remember sort column and order for pagination, GH-240\n- Use `sslmode=disable` for bookmarks without sslmode option, GH-244\n- Javascript fixes for IE9-11, GH-245\n- Require confirmation for the disconnect, GH-246\n- Clean the results table on manual disconnect\n\n## 0.9.7 - 2017-04-04\n\n- Fixed issue with locked session and empty db url, GH-206\n- Fixed path rewrite on DB change, GH-212\n- Upgraded dependencies, GH-217\n- Added ability to specify bookmarks path, GH-218\n- Added counter for the number of rows from a custom SQL query, GH-224\n- Added new behavior for removing table rows view on custom SQL query page, GH-225\n\n## 0.9.6 - 2016-11-18\n\n- Fixed bug in query base64-encoding, GH-186\n- Fixed rows pagination visibility bug, GH-190\n- Fixed issue with query order escaping, GH-191\n- Fixed invalid query selection for explain command, GH-198\n- Fixed issue with empty sidebar, now it shows empty state, GH-202\n- Added new flag --readonly to enable read only transaction mode, GH-193\n- Added ability to kill any running query, GH-194\n- Added session database connection locking, GH-195\n- Added ability to switch between databases, GH-196\n- Added feature to keep last selected tab when switching between tables, GH-197\n- Added new flag --bookmark (-b) to specify server connection from bookmark, GH-201\n\n## 0.9.5 - 2016-10-01\n\n- Only view schema with USAGE privileges, GH-167\n- Fixed broken export to CSV/JSON/XML if hashmark in URL, GH-175\n- Added example service configuration for systemd, GH-177\n- Allow setting auth user and pass using variables\n\n## 0.9.4 - 2016-07-29\n\n- Fixes CSV/JSON/XML export buttons when pgweb is running with url prefix, GH-170\n\n## 0.9.3 - 2016-06-30\n\n- Uses Go 1.6 for development, GH-155\n- Fixes timestamp formatting in CSV export, GH-163\n- Included PostgreSQL 9.6 for integration testing\n- Switches docker image to Alpine to reduce image size\n- Adds support for ARMv5\n\n## 0.9.2 - 2016-03-01\n\n- Fixes bug with unsafe base64 encoded sql queries\n- Fixes issue with session id not being included in multi-session mode\n- Fixes visual issue with long table names in sidebar\n- Fixes visual issue with a scrollbar in table information widget\n- Fixes issue with database connection form being reset by clicking on 'cancel' button\n- Adds ability to close connection\n- Adds display message for number of affected rows for update/delete queries, GH-133\n- Adds web server url prefix as a CLI option, GH-135\n\n## 0.9.1 - 2016-01-25\n\n- Fixes bug with tables context menu\n- Fixes JS bug when query returns no rows\n- Fixes bug with switching between different connection modes\n- Adds AJAX timeout to 5s\n- Adds sidebar reload action on any CREATE/DROP action\n\n## 0.9.0 - 2016-01-19\n\n- Add support for multiple schemas. GH-112\n- Add support for native ssh tunnes. GH-114\n- Add materialized views to list of schema objects\n- Adds a few design tweaks and cleanups\n- Fixes bug with nil result set when fetching rows\n\n## 0.8.0 - 2016-01-11\n\n- Fixes bug with bigint conversions in javascript. Now bigints are encoded as strings. GH-109\n- Adds pagination and simple column filtering to table rows browser. GH-110\n- Adds ability to use pgweb with multiple database sessions. GH-111\n- Adds a few design tweaks and cleanups\n\n## 0.7.0 - 2016-01-05\n\n- Adds sequences to the sidebar panel - GH-100\n- Adds table constrains view - GH-104\n- Adds ability to export table and query rows as JSON/XML - GH-107\n- Updates to UI theme and SQL editor\n\n## 0.6.3 - 2015-08-16\n\n- Adds PostgreSQL password escaping in web ui, GH-96\n- Adds base64 query encoding for CSV export, GH-95\n- Adds automatic saving of last executed query to localStorage\n- Adds request middleware to log incoming form params in debug mode\n\n## 0.6.2 - 2015-07-15\n\n- Adds ability to specify connection strings prefixed by `postgresql://`, [GH-92]\n- Updates configuration for Heroku, [GH-89], [GH-90]\n- Updates postgresql library dependency to latest, [GH-91]\n- Fixes password field to not display plaintext passwords, [GH-87]\n\n## 0.6.1 - 2015-06-18\n\n- This release is repackage-release targeted to fix binary downloads\n\n## 0.6.0 - 2015-05-31\n\n- Adds ability to execute only selected SQL query in run command view, [GH-85]\n- Adds ability to delete/truncate table via context many on sidebar view\n- Adds ability to export table contents to CSV via context menu on sidebar view\n- Changes sidebar color scheme to a lighter and better looking one\n\n## 0.5.3 - 2015-05-06\n\n- Changes default server port from 8080 to 8081 to avoil conflict with RethinkDB\n- Changes styles for table rows and connection settings window\n- Adds highlighting styles for columns with sort order\n- Adds git sha into program version output\n- Add new endpoint /api/info to get build details\n\n## 0.5.2 - 2015-04-13\n\n- Adds a new endpoint /activity that returns active queries\n- Adds tab to view active queries\n- Adds column sorting when browsing table contents\n- Fixes SQL query view when switching to table structure view\n\n## 0.5.1 - 2015-02-23\n\n- Upgrades Gin framework dependency to 0.5.0\n- Fixes server crash if another pgweb server is running\n\n## 0.5.0 - 2015-01-13\n\n- Adds Go 1.4 support\n- Adds connection string printing in debug mode\n- Adds initial bookmarks support\n- Adds /api prefix for all API calls\n- Adds makefile usage task\n- Adds windows CI to verify build process\n- Adds example sql database to codebase\n- Adds timestamped filenames when exporting results to CSV [GH-75]\n- Adds connection checking on each request to prevent api panics\n- Adds timestamps to query history records\n- Adds current database name to the sidebar\n- Adds button to refresh tables list to the sidebar\n- Updates all application dependencies\n- Changes /api/info endpoint to /api/connection\n- Fixes issues with connection string/options parsing\n- Fixes capitalized column names in table view\n- Fixes connection string validation in /api/connect endpoint\n\n## 0.4.1 - 2014-12-01\n\n- Adds pgweb version on start [GH-65]\n- Adds user detection from OS environment\n- Adds simple memory profiles with --debug option\n- Adds the session user and search path in connection info [GH-67]\n- Adds table list reloading after CREATE/DROP TABLE queries [GH-69]\n- Adds font awesome icons for the sidebar\n- Removes query recording for internal queries [GH-67]\n- Fixes default sslmode. Its not longer set to \"disable\"\n- Fixes cells cropping on table indexes view\n- Fixes connection URL generation using web interface\n- Fixes SQL statements for table row count [GH-67]\n- Fixes /tables JSON response if database does not have any tables\n\n## 0.4.0 - 2014-11-11\n\n- Adds query escaping when exporting results to CSV [GH-38]\n- Adds keyboard shortcut (ctrl+e, command+e on mac) for query explain action\n- Adds HTTP basic authentication with --auth-user and --auth-pass flags\n- Adds -skip-open/-s flag to disable automatic browser launch\n- Adds --bind option to specify server listen hostname/ip\n- Adds ssl mode parameters to url if ssl flag is set and not defined in the url\n- Adds dependency management with Godep\n- Adds Docker support\n- Adds Heroku support\n- Adds ability to connect to databases with no tables\n- Adds precompiled assets into repository to simplify development\n- Adds a connection details view\n- Adds a new interface to specify connection settings or make a new connection\n- Adds page favicon\n- Adds ability to present cell data as text area by double clicking on it\n- Fixes styles for query explain results\n- Fixes sidebar navigation scrolling styles [GH-12]\n- Fixes sidebar table name styles to support long names\n\n## 0.3.1 - 2014-10-28\n\n- Adds proper exit code when printing version via -v/--version flag\n- Adds --version and --debug long flag names\n- Adds double quotes for table name when fetching table contents\n- Adds support for DATABASE_URL environment variable if no --url is set\n- Adds proper usage of jQuery .prop method\n- Adds --pass flag to specify connection password\n- Fixes --ssl flag usage, previous value was hardcoded\n\n## 0.3.0 - 2014-10-26\n\n- Renamed `make deps` to `make setup` and fix issues with bootstrapping\n- Removed hardcoded url for CSV export, it now detects application host:port\n- Improved query history view table styles\n- Moved table information view to the sidebar\n- Added --listen flag to specify web server port, still defaults to 8080\n\n## 0.2.0 - 2014-10-23\n\n- Design tweaks\n- Automatically opens browser on OSX systems\n- Adds query explain functionality\n- Adds export to CSV\n\n## 0.1.0 - 2014-10-14\n\n- Initial release\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.265625,
          "content": "- Fork repository\n- Create a new git branch\n- Make changes\n- Run tests: `make test`\n- Run tests against all supported PostreSQL versions: `make test-all` (optional)\n- If you change frontend code (js/css) make sure to rebuild assets: `make assets`\n- Open a new pull request"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.69140625,
          "content": "# ------------------------------------------------------------------------------\n# Builder Stage\n# ------------------------------------------------------------------------------\nFROM golang:1.22-bullseye AS build\n\n# Set default build argument for CGO_ENABLED\nARG CGO_ENABLED=0\nENV CGO_ENABLED ${CGO_ENABLED}\n\nWORKDIR /build\n\nRUN git config --global --add safe.directory /build\nCOPY go.mod go.sum ./\nRUN go mod download\nCOPY Makefile main.go ./\nCOPY static/ static/\nCOPY pkg/ pkg/\nCOPY .git/ .\nRUN make build\n\n# ------------------------------------------------------------------------------\n# Fetch signing key\n# ------------------------------------------------------------------------------\nFROM debian:bullseye-slim AS keyring\nADD https://www.postgresql.org/media/keys/ACCC4CF8.asc keyring.asc\nRUN apt-get update && \\\n    apt-get install -qq --no-install-recommends gpg\nRUN gpg -o keyring.pgp --dearmor keyring.asc\n\n# ------------------------------------------------------------------------------\n# Release Stage\n# ------------------------------------------------------------------------------\nFROM debian:bullseye-slim\n\nARG keyring=/usr/share/keyrings/postgresql-archive-keyring.pgp\nCOPY --from=keyring /keyring.pgp $keyring\nRUN . /etc/os-release && \\\n    echo \"deb [signed-by=${keyring}] http://apt.postgresql.org/pub/repos/apt/ ${VERSION_CODENAME}-pgdg main\" > /etc/apt/sources.list.d/pgdg.list && \\\n    apt-get update && \\\n    apt-get install -qq --no-install-recommends ca-certificates openssl netcat curl postgresql-client\n\nCOPY --from=build /build/pgweb /usr/bin/pgweb\n\nRUN useradd --uid 1000 --no-create-home --shell /bin/false pgweb\nUSER pgweb\n\nEXPOSE 8081\nENTRYPOINT [\"/usr/bin/pgweb\", \"--bind=0.0.0.0\", \"--listen=8081\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0830078125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014-2024 Dan Sosedoff <dan.sosedoff@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.0693359375,
          "content": "PKG = github.com/sosedoff/pgweb\nGIT_COMMIT ?= $(shell git rev-parse --short=8 HEAD)\nBUILD_TIME ?= $(shell date -u +\"%Y-%m-%dT%H:%M:%SZ\" | tr -d '\\n')\nGO_VERSION ?= $(shell go version | awk {'print $$3'})\n\nDOCKER_RELEASE_TAG = \"sosedoff/pgweb:$(shell git describe --abbrev=0 --tags | sed 's/v//')\"\nDOCKER_LATEST_TAG = \"sosedoff/pgweb:latest\"\n\nLDFLAGS = -s -w\nLDFLAGS += -X $(PKG)/pkg/command.GitCommit=$(GIT_COMMIT)\nLDFLAGS += -X $(PKG)/pkg/command.BuildTime=$(BUILD_TIME)\nLDFLAGS += -X $(PKG)/pkg/command.GoVersion=$(GO_VERSION)\n\nusage:\n\t@echo \"\"\n\t@echo \"Task                 : Description\"\n\t@echo \"-----------------    : -------------------\"\n\t@echo \"make dev             : Generate development build\"\n\t@echo \"make build           : Generate production build for current OS\"\n\t@echo \"make release         : Generate binaries for all supported OSes\"\n\t@echo \"make test            : Execute test suite\"\n\t@echo \"make test-all        : Execute test suite on multiple PG versions\"\n\t@echo \"make lint            : Execute code linter\"\n\t@echo \"make clean           : Remove all build files and reset assets\"\n\t@echo \"make docker          : Build docker image\"\n\t@echo \"make docker-release  : Build and tag docker image\"\n\t@echo \"make docker-push     : Push docker images to registry\"\n\t@echo \"\"\n\ntest:\n\tgo test -v -race -cover ./pkg/...\n\ntest-all:\n\t@./script/test_all.sh\n\t@./script/test_cockroach.sh\n\nlint:\n\tgolangci-lint run\n\ndev:\n\tgo build\n\t@echo \"You can now execute ./pgweb\"\n\nbuild:\n\tgo build -ldflags '${LDFLAGS}'\n\t@echo \"You can now execute ./pgweb\"\n\ninstall:\n\tgo install -ldflags '${LDFLAGS}'\n\t@echo \"You can now execute pgweb\"\n\nrelease: clean\n\t@echo \"Building binaries...\"\n\t@LDFLAGS='${LDFLAGS}' ./script/build_all.sh\n\nclean:\n\t@echo \"Removing all artifacts\"\n\t@rm -rf ./pgweb ./bin/*\n\ndocker:\n\tdocker build --no-cache -t pgweb .\n\ndocker-run:\n\tdocker run --rm -p 8081:8081 -it pgweb\n\ndocker-release:\n\tdocker build --no-cache -t $(DOCKER_RELEASE_TAG) .\n\tdocker tag $(DOCKER_RELEASE_TAG) $(DOCKER_LATEST_TAG)\n\tdocker images $(DOCKER_RELEASE_TAG)\n\ndocker-push:\n\tdocker push $(DOCKER_RELEASE_TAG)\n\tdocker push $(DOCKER_LATEST_TAG)\n"
        },
        {
          "name": "Procfile",
          "type": "blob",
          "size": 0.1044921875,
          "content": "web: pgweb --url=$DATABASE_URL --listen=$PORT --bind=0.0.0.0 --auth-user=$AUTH_USER --auth-pass=$AUTH_PASS\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.0556640625,
          "content": "# pgweb\n\nSimple web-based and cross platform PostgreSQL database explorer.\n\n[![Release](https://img.shields.io/github/release/sosedoff/pgweb.svg?label=Release)](https://github.com/sosedoff/pgweb/releases)\n[![Linux Build](https://github.com/sosedoff/pgweb/actions/workflows/checks.yml/badge.svg)](https://github.com/sosedoff/pgweb/actions?query=branch%3Amain)\n[![Go Report Card](https://goreportcard.com/badge/github.com/sosedoff/pgweb)](https://goreportcard.com/report/github.com/sosedoff/pgweb)\n[![GoDoc](https://godoc.org/github.com/sosedoff/pgweb?status.svg)](https://godoc.org/github.com/sosedoff/pgweb)\n[![Docker Pulls](https://img.shields.io/docker/pulls/sosedoff/pgweb.svg)](https://hub.docker.com/r/sosedoff/pgweb/)\n\n## Overview\n\nPgweb is a web-based database explorer for PostgreSQL, written in Go, and works\non Mac, Linux and Windows machines. Distributed as a simple binary with zero dependencies.\nVery easy to use and packs just the right amount of features.\n\n[See application screenshots](SCREENS.md)\n\n## Features\n\n- Cross-platform: Mac/Linux/Windows (64bit).\n- Simple installation (distributed as a single binary).\n- Zero dependencies.\n- Works with PostgreSQL 9.1+.\n- Supports native SSH tunnels.\n- Multiple database sessions.\n- Execute and analyze custom SQL queries.\n- Table and query data export to CSV/JSON/XML.\n- Query history.\n- Server bookmarks.\n\nVisit [WIKI](https://github.com/sosedoff/pgweb/wiki) for more details.\n\n## Demo\n\nVisit https://pgweb-demo.fly.dev/ to see Pgweb in action.\n\n## Installation\n\n- [Precompiled binaries](https://github.com/sosedoff/pgweb/releases) for supported operating systems are available.\n- [More installation options](https://github.com/sosedoff/pgweb/wiki/Installation)\n\n## Usage\n\nStart server:\n\n```\npgweb\n```\n\nYou can also provide connection flags:\n\n```\npgweb --host localhost --user myuser --db mydb\n```\n\nConnection URL scheme is also supported:\n\n```\npgweb --url postgres://user:password@host:port/database?sslmode=[mode]\npgweb --url \"postgres:///database?host=/absolute/path/to/unix/socket/dir\"\n```\n\n### Multiple database sessions\n\nTo enable multiple database sessions in pgweb, start the server with:\n\n```\npgweb --sessions\n```\n\nOr set environment variable:\n\n```\nPGWEB_SESSIONS=1 pgweb\n```\n\n## Testing\n\nBefore running tests, make sure you have PostgreSQL server running on `localhost:5432`\ninterface. Also, you must have `postgres` user that could create new databases\nin your local environment. Pgweb server should not be running at the same time.\n\nExecute test suite:\n\n```\nmake test\n```\n\nIf you're using Docker locally, you might also run pgweb test suite against\nall supported PostgreSQL version with a single command:\n\n```\nmake test-all\n```\n\n## Contribute\n\n- Fork this repository\n- Create a new feature branch for a new functionality or bugfix\n- Commit your changes\n- Execute test suite\n- Push your code and open a new pull request\n- Use [issues](https://github.com/sosedoff/pgweb/issues) for any questions\n- Check [wiki](https://github.com/sosedoff/pgweb/wiki) for extra documentation\n\n## License\n\nThe MIT License (MIT). See [LICENSE](LICENSE) file for more details.\n"
        },
        {
          "name": "SCREENS.md",
          "type": "blob",
          "size": 0.1787109375,
          "content": "# Screenshots\n\n### Connect\n<img src=\"screenshots/connect.png\" />\n\n### Browse table rows\n<img src=\"screenshots/browse.png\" />\n\n### Write SQL queries\n<img src=\"screenshots/query.png\" />"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose-pg.yml",
          "type": "blob",
          "size": 0.8388671875,
          "content": "---\nversion: \"3.9\"\n\nx-base: &base\n  environment: &env\n    POSTGRES_DB: pgweb\n    POSTGRES_PASSWORD: pgweb\n    POSTGRES_USER: pgweb\n  healthcheck:\n    test: pg_isready -U pgweb -h 127.0.0.1\n    interval: 5s\n\nservices:\n  postgres16:\n    <<: *base\n    image: postgres:16\n    ports:\n      - 5433:5432\n  postgres15:\n    <<: *base\n    image: postgres:15\n    ports:\n      - 5433:5432\n  postgres14:\n    <<: *base\n    image: postgres:14\n    ports:\n      - 5434:5432\n  postgres13:\n    <<: *base\n    image: postgres:13\n    ports:\n      - 5435:5432\n  postgres12:\n    <<: *base\n    image: postgres:12\n    ports:\n      - 5436:5432\n  postgres11:\n    <<: *base\n    image: postgres:11\n    ports:\n      - 5437:5432\n  postgres10:\n    <<: *base\n    image: postgres:10\n    ports:\n      - 5438:5432\n  postgres9.6:\n    <<: *base\n    image: postgres:9.6\n    ports:\n      - 5439:5432\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.8515625,
          "content": "---\nversion: \"3.9\"\n\nservices:\n  postgres:\n    container_name: pgweb-postgres\n    image: postgres:15\n    ports:\n      - 5433:5432\n    volumes:\n      - data:/var/lib/postgresql/data\n    environment:\n      POSTGRES_DB: pgweb\n      POSTGRES_PASSWORD: pgweb\n      POSTGRES_USER: pgweb\n    healthcheck:\n      test: pg_isready -U pgweb -h 127.0.0.1\n      interval: 5s\n    networks:\n      - pgweb\n\n  pgweb:\n    container_name: pgweb\n    image: sosedoff/pgweb:latest\n    build: .\n    environment:\n      PGWEB_DATABASE_URL: postgres://pgweb:pgweb@pgweb-postgres:5432/pgweb?sslmode=disable\n    ports:\n      - 8081:8081\n    networks:\n      - pgweb\n    depends_on:\n      postgres:\n        condition: service_healthy\n    healthcheck:\n      test: [\"CMD\", \"nc\", \"-vz\", \"127.0.0.1\", \"8081\"]\n      interval: 5s\n\nvolumes:\n  data:\n    name: pgweb_postgres\n\nnetworks:\n  pgweb:\n    name: pgweb\n"
        },
        {
          "name": "fly.toml",
          "type": "blob",
          "size": 0.64453125,
          "content": "app = \"pgweb-demo\"\nkill_signal = \"SIGINT\"\nkill_timeout = 5\n\n[processes]\n  web = \"pgweb --sessions --bind=0.0.0.0 --metrics --idle-timeout=30\"\n\n[[services]]\n  http_checks = []\n  internal_port = 8081\n  processes = [\"web\"]\n  protocol = \"tcp\"\n  script_checks = []\n\n  [services.concurrency]\n    hard_limit = 25\n    soft_limit = 20\n    type = \"connections\"\n\n  [[services.ports]]\n    force_https = true\n    handlers = [\"http\"]\n    port = 80\n\n  [[services.ports]]\n    handlers = [\"tls\", \"http\"]\n    port = 443\n\n  [[services.tcp_checks]]\n    grace_period = \"1s\"\n    interval = \"15s\"\n    restart_limit = 0\n    timeout = \"2s\"\n\n[metrics]\n  port = 8081\n  path = \"/metrics\"\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 2.3173828125,
          "content": "module github.com/sosedoff/pgweb\n\ngo 1.22\n\nrequire (\n\tgithub.com/BurntSushi/toml v1.1.0\n\tgithub.com/ScaleFT/sshkeys v0.0.0-20200327173127-6142f742bca5\n\tgithub.com/gin-gonic/gin v1.9.1\n\tgithub.com/jackc/pgpassfile v1.0.0\n\tgithub.com/jessevdk/go-flags v1.5.0\n\tgithub.com/jmoiron/sqlx v1.3.5\n\tgithub.com/lib/pq v1.10.5\n\tgithub.com/mitchellh/go-homedir v1.1.0\n\tgithub.com/mr-tron/base58 v1.2.0\n\tgithub.com/prometheus/client_golang v1.14.0\n\tgithub.com/sirupsen/logrus v1.9.0\n\tgithub.com/stretchr/testify v1.8.3\n\tgithub.com/tuvistavie/securerandom v0.0.0-20140719024926-15512123a948\n\tgolang.org/x/crypto v0.9.0\n)\n\nrequire (\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/bytedance/sonic v1.9.1 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.2.0 // indirect\n\tgithub.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/dchest/bcrypt_pbkdf v0.0.0-20150205184540-83f37f9c154a // indirect\n\tgithub.com/gabriel-vasile/mimetype v1.4.2 // indirect\n\tgithub.com/gin-contrib/sse v0.1.0 // indirect\n\tgithub.com/go-playground/locales v0.14.1 // indirect\n\tgithub.com/go-playground/universal-translator v0.18.1 // indirect\n\tgithub.com/go-playground/validator/v10 v10.14.0 // indirect\n\tgithub.com/goccy/go-json v0.10.2 // indirect\n\tgithub.com/golang/protobuf v1.5.2 // indirect\n\tgithub.com/json-iterator/go v1.1.12 // indirect\n\tgithub.com/klauspost/cpuid/v2 v2.2.4 // indirect\n\tgithub.com/kr/pretty v0.3.1 // indirect\n\tgithub.com/leodido/go-urn v1.2.4 // indirect\n\tgithub.com/mattn/go-isatty v0.0.19 // indirect\n\tgithub.com/matttproud/golang_protobuf_extensions v1.0.4 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/pelletier/go-toml/v2 v2.0.8 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/prometheus/client_model v0.3.0 // indirect\n\tgithub.com/prometheus/common v0.39.0 // indirect\n\tgithub.com/prometheus/procfs v0.8.0 // indirect\n\tgithub.com/twitchyliquid64/golang-asm v0.15.1 // indirect\n\tgithub.com/ugorji/go/codec v1.2.11 // indirect\n\tgolang.org/x/arch v0.3.0 // indirect\n\tgolang.org/x/net v0.10.0 // indirect\n\tgolang.org/x/sys v0.8.0 // indirect\n\tgolang.org/x/text v0.9.0 // indirect\n\tgoogle.golang.org/protobuf v1.30.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 13.4775390625,
          "content": "github.com/BurntSushi/toml v1.1.0 h1:ksErzDEI1khOiGPgpwuI7x2ebx/uXQNw7xJpn9Eq1+I=\ngithub.com/BurntSushi/toml v1.1.0/go.mod h1:CxXYINrC8qIiEnFrOxCa7Jy5BFHlXnUU2pbicEuybxQ=\ngithub.com/ScaleFT/sshkeys v0.0.0-20200327173127-6142f742bca5 h1:VauE2GcJNZFun2Och6tIT2zJZK1v6jxALQDA9BIji/E=\ngithub.com/ScaleFT/sshkeys v0.0.0-20200327173127-6142f742bca5/go.mod h1:gxOHeajFfvGQh/fxlC8oOKBe23xnnJTif00IFFbiT+o=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/bytedance/sonic v1.5.0/go.mod h1:ED5hyg4y6t3/9Ku1R6dU/4KyJ48DZ4jPhfY1O2AihPM=\ngithub.com/bytedance/sonic v1.9.1 h1:6iJ6NqdoxCDr6mbY8h18oSO+cShGSMRGCEo7F2h0x8s=\ngithub.com/bytedance/sonic v1.9.1/go.mod h1:i736AoUSYt75HyZLoJW9ERYxcy6eaN6h4BZXU064P/U=\ngithub.com/cespare/xxhash/v2 v2.2.0 h1:DC2CZ1Ep5Y4k3ZQ899DldepgrayRUGE6BBZ/cd9Cj44=\ngithub.com/cespare/xxhash/v2 v2.2.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/chenzhuoyu/base64x v0.0.0-20211019084208-fb5309c8db06/go.mod h1:DH46F32mSOjUmXrMHnKwZdA8wcEefY7UVqBKYGjpdQY=\ngithub.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311 h1:qSGYFH7+jGhDF8vLC+iwCD4WpbV1EBDSzWkJODFLams=\ngithub.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311/go.mod h1:b583jCggY9gE99b6G5LEC39OIiVsWj+R97kbl5odCEk=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dchest/bcrypt_pbkdf v0.0.0-20150205184540-83f37f9c154a h1:saTgr5tMLFnmy/yg3qDTft4rE5DY2uJ/cCxCe3q0XTU=\ngithub.com/dchest/bcrypt_pbkdf v0.0.0-20150205184540-83f37f9c154a/go.mod h1:Bw9BbhOJVNR+t0jCqx2GC6zv0TGBsShs56Y3gfSCvl0=\ngithub.com/gabriel-vasile/mimetype v1.4.2 h1:w5qFW6JKBz9Y393Y4q372O9A7cUSequkh1Q7OhCmWKU=\ngithub.com/gabriel-vasile/mimetype v1.4.2/go.mod h1:zApsH/mKG4w07erKIaJPFiX0Tsq9BFQgN3qGY5GnNgA=\ngithub.com/gin-contrib/sse v0.1.0 h1:Y/yl/+YNO8GZSjAhjMsSuLt29uWRFHdHYUb5lYOV9qE=\ngithub.com/gin-contrib/sse v0.1.0/go.mod h1:RHrZQHXnP2xjPF+u1gW/2HnVO7nvIa9PG3Gm+fLHvGI=\ngithub.com/gin-gonic/gin v1.9.1 h1:4idEAncQnU5cB7BeOkPtxjfCSye0AAm1R0RVIqJ+Jmg=\ngithub.com/gin-gonic/gin v1.9.1/go.mod h1:hPrL7YrpYKXt5YId3A/Tnip5kqbEAP+KLuI3SUcPTeU=\ngithub.com/go-playground/assert/v2 v2.2.0 h1:JvknZsQTYeFEAhQwI4qEt9cyV5ONwRHC+lYKSsYSR8s=\ngithub.com/go-playground/locales v0.14.1 h1:EWaQ/wswjilfKLTECiXz7Rh+3BjFhfDFKv/oXslEjJA=\ngithub.com/go-playground/locales v0.14.1/go.mod h1:hxrqLVvrK65+Rwrd5Fc6F2O76J/NuW9t0sjnWqG1slY=\ngithub.com/go-playground/universal-translator v0.18.1 h1:Bcnm0ZwsGyWbCzImXv+pAJnYK9S473LQFuzCbDbfSFY=\ngithub.com/go-playground/universal-translator v0.18.1/go.mod h1:xekY+UJKNuX9WP91TpwSH2VMlDf28Uj24BCp08ZFTUY=\ngithub.com/go-playground/validator/v10 v10.14.0 h1:vgvQWe3XCz3gIeFDm/HnTIbj6UGmg/+t63MyGU2n5js=\ngithub.com/go-playground/validator/v10 v10.14.0/go.mod h1:9iXMNT7sEkjXb0I+enO7QXmzG6QCsPWY4zveKFVRSyU=\ngithub.com/go-sql-driver/mysql v1.6.0 h1:BCTh4TKNUYmOmMUcQ3IipzF5prigylS7XXjEkfCHuOE=\ngithub.com/go-sql-driver/mysql v1.6.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=\ngithub.com/goccy/go-json v0.10.2 h1:CrxCmQqYDkv1z7lO7Wbh2HN93uovUHgrECaO5ZrCXAU=\ngithub.com/goccy/go-json v0.10.2/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.5/go.mod h1:6O5/vntMXwX2lRkT1hjjk0nAC1IDOTvTlVgjlRvqsdk=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.2 h1:ROPKBNFfQgOUMifHyP+KYbvpjbdoFNs+aK7DXlji0Tw=\ngithub.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.8 h1:e6P7q2lk1O+qJJb4BtCQXlK8vWEO8V1ZeuEdJNOqZyg=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/jackc/pgpassfile v1.0.0 h1:/6Hmqy13Ss2zCq62VdNG8tM1wchn8zjSGOBJ6icpsIM=\ngithub.com/jackc/pgpassfile v1.0.0/go.mod h1:CEx0iS5ambNFdcRtxPj5JhEz+xB6uRky5eyVu/W2HEg=\ngithub.com/jessevdk/go-flags v1.5.0 h1:1jKYvbxEjfUl0fmqTCOfonvskHHXMjBySTLW4y9LFvc=\ngithub.com/jessevdk/go-flags v1.5.0/go.mod h1:Fw0T6WPc1dYxT4mKEZRfG5kJhaTDP9pj1c2EWnYs/m4=\ngithub.com/jmoiron/sqlx v1.3.5 h1:vFFPA71p1o5gAeqtEAwLU4dnX2napprKtHr7PYIcN3g=\ngithub.com/jmoiron/sqlx v1.3.5/go.mod h1:nRVWtLre0KfCLJvgxzCsLVMogSvQ1zNJtpYr2Ccp0mQ=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/klauspost/cpuid/v2 v2.0.9/go.mod h1:FInQzS24/EEf25PyTYn52gqo7WaD8xa0213Md/qVLRg=\ngithub.com/klauspost/cpuid/v2 v2.2.4 h1:acbojRNwl3o09bUq+yDCtZFc1aiwaAAxtcn8YkZXnvk=\ngithub.com/klauspost/cpuid/v2 v2.2.4/go.mod h1:RVVoqg1df56z8g3pUjL/3lE5UfnlrJX8tyFgg4nqhuY=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/leodido/go-urn v1.2.4 h1:XlAE/cm/ms7TE/VMVoduSpNBoyc2dOxHs5MZSwAN63Q=\ngithub.com/leodido/go-urn v1.2.4/go.mod h1:7ZrI8mTSeBSHl/UaRyKQW1qZeMgak41ANeCNaVckg+4=\ngithub.com/lib/pq v1.2.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/lib/pq v1.10.5 h1:J+gdV2cUmX7ZqL2B0lFcW0m+egaHC2V3lpO8nWxyYiQ=\ngithub.com/lib/pq v1.10.5/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/mattn/go-isatty v0.0.19 h1:JITubQf0MOLdlGRuRq+jtsDlekdYPia9ZFsB8h/APPA=\ngithub.com/mattn/go-isatty v0.0.19/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-sqlite3 v1.14.6 h1:dNPt6NO46WmLVt2DLNpwczCmdV5boIZ6g/tlDrlRUbg=\ngithub.com/mattn/go-sqlite3 v1.14.6/go.mod h1:NyWgC/yNuGj7Q9rpYnZvas74GogHl5/Z4A/KQRfk6bU=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.4 h1:mmDVorXM7PCGKw94cs5zkfA9PSy5pEvNWRP0ET0TIVo=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.4/go.mod h1:BSXmuO+STAnVfrANrmjBb36TMTDstsz7MSK+HVaYKv4=\ngithub.com/mitchellh/go-homedir v1.1.0 h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=\ngithub.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/mr-tron/base58 v1.2.0 h1:T/HDJBh4ZCPbU39/+c3rRvE0uKBQlU27+QI8LJ4t64o=\ngithub.com/mr-tron/base58 v1.2.0/go.mod h1:BinMc/sQntlIE1frQmRFPUoPA1Zkr8VRgBdjWI2mNwc=\ngithub.com/pelletier/go-toml/v2 v2.0.8 h1:0ctb6s9mE31h0/lhu+J6OPmVeDxJn+kYnJc2jZR9tGQ=\ngithub.com/pelletier/go-toml/v2 v2.0.8/go.mod h1:vuYfssBdrU2XDZ9bYydBu6t+6a6PYNcZljzZR9VXg+4=\ngithub.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_golang v1.14.0 h1:nJdhIvne2eSX/XRAFV9PcvFFRbrjbcTUj0VP62TMhnw=\ngithub.com/prometheus/client_golang v1.14.0/go.mod h1:8vpkKitgIVNcqrRBWh1C4TIUQgYNtG/XQE4E/Zae36Y=\ngithub.com/prometheus/client_model v0.3.0 h1:UBgGFHqYdG/TPFD1B1ogZywDqEkwp3fBMvqdiQ7Xew4=\ngithub.com/prometheus/client_model v0.3.0/go.mod h1:LDGWKZIo7rky3hgvBe+caln+Dr3dPggB5dvjtD7w9+w=\ngithub.com/prometheus/common v0.39.0 h1:oOyhkDq05hPZKItWVBkJ6g6AtGxi+fy7F4JvUV8uhsI=\ngithub.com/prometheus/common v0.39.0/go.mod h1:6XBZ7lYdLCbkAVhwRsWTZn+IN5AB9F/NXd5w0BbEX0Y=\ngithub.com/prometheus/procfs v0.8.0 h1:ODq8ZFEaYeCaZOJlZZdJA2AbQR98dSHSM1KW/You5mo=\ngithub.com/prometheus/procfs v0.8.0/go.mod h1:z7EfXMXOkbkqb9IINtpCn86r/to3BnA0uaxHdg830/4=\ngithub.com/rogpeppe/go-internal v1.9.0 h1:73kH8U+JUqXU8lRuOHeVHaa/SZPifC7BkcraZVejAe8=\ngithub.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=\ngithub.com/sirupsen/logrus v1.9.0 h1:trlNQbNUG3OdDrDil03MCb1H2o9nJ1x4/5LYw7byDE0=\ngithub.com/sirupsen/logrus v1.9.0/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.2/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.3 h1:RP3t2pwF7cMEbC1dqtB6poj3niw/9gnV4Cjg5oW5gtY=\ngithub.com/stretchr/testify v1.8.3/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/tuvistavie/securerandom v0.0.0-20140719024926-15512123a948 h1:yL0l/u242MzDP6D0B5vGC+wxm5WRY+alQZy+dJk3bFI=\ngithub.com/tuvistavie/securerandom v0.0.0-20140719024926-15512123a948/go.mod h1:a06d/M1pxWi51qiSrfGMHaEydtuXT06nha8N2aNQuXk=\ngithub.com/twitchyliquid64/golang-asm v0.15.1 h1:SU5vSMR7hnwNxj24w34ZyCi/FmDZTkS4MhqMhdFk5YI=\ngithub.com/twitchyliquid64/golang-asm v0.15.1/go.mod h1:a1lVb/DtPvCB8fslRZhAngC2+aY1QWCk3Cedj/Gdt08=\ngithub.com/ugorji/go/codec v1.2.11 h1:BMaWp1Bb6fHwEtbplGBGJ498wD+LKlNSl25MjdZY4dU=\ngithub.com/ugorji/go/codec v1.2.11/go.mod h1:UNopzCgEMSXjBc6AOMqYvWC1ktqTAfzJZUZgYf6w6lg=\ngolang.org/x/arch v0.0.0-20210923205945-b76863e36670/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=\ngolang.org/x/arch v0.3.0 h1:02VY4/ZcO/gBOH6PUaoiptASxtXU10jazRCP865E97k=\ngolang.org/x/arch v0.3.0/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20200323165209-0ec3e9974c59/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.9.0 h1:LF6fAI+IutBocDJ2OT0Q1g8plpYljMZ4+lty+dsqw3g=\ngolang.org/x/crypto v0.9.0/go.mod h1:yrmDGqONDYtNj3tH8X9dzUun2m2lzPa9ngI6/RUPGR0=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.10.0 h1:X2//UzNDwYmtCLn7To6G58Wr6f5ahEAQgKNzv9Y951M=\ngolang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200219091948-cb0a6d8edb6c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20220704084225-05e143d24a9e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.8.0 h1:EBmGv8NaZBZTWvrbjNoL6HVt+IVy3QDQpJs7VRIw3tU=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/term v0.8.0 h1:n5xxQn2i3PC0yLAbjTpNT85q/Kgzcr2gIoX9OrJUols=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.9.0 h1:2sjJmO8cDvYveuX97RDLsxlyUxLl+GHoLxBiRdHllBE=\ngolang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.30.0 h1:kPPoIgf3TsEvrm0PFe15JQ+570QVxYzEvvHqChK+cng=\ngoogle.golang.org/protobuf v1.30.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nrsc.io/pdf v0.1.1/go.mod h1:n8OzWcQ6Sp37PL01nO98y4iUCRdTGarVfzxY20ICaU4=\n"
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 0.087890625,
          "content": "package main\n\nimport (\n\t\"github.com/sosedoff/pgweb/pkg/cli\"\n)\n\nfunc main() {\n\tcli.Run()\n}\n"
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        },
        {
          "name": "static",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}