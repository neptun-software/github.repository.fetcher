{
  "metadata": {
    "timestamp": 1736567631730,
    "page": 213,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "go-echarts/go-echarts",
      "stars": 6701,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2587890625,
          "content": "# Binaries for programs and plugins\n*.exe\n*.exe~\n*.dll\n*.so\n*.dylib\n\n# Test binary, build with `go test -c`\n*.test\n\n# Output of the go coverage tool, specifically when used with LiteIDE\n*.out\n\n# IDE\n.idea/\n.vscode/\nexamples/\ngo-echarts-pipeline/\nsnapshot-chromedp/\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.138671875,
          "content": "sudo: true\nlanguage: go\ngo:\n  - 1.13.x\n  - 1.14.x\n  - 1.15.x\ngo_import_path: github.com/go-echarts/go-echarts/v2\nscript:\n  - go test -v ./...\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.048828125,
          "content": "MIT License\n\nCopyright (c) 2019~now chenjiandongx\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.8095703125,
          "content": "<p align=\"center\">\n\t<img src=\"https://user-images.githubusercontent.com/19553554/52535979-c0d0e680-2d8f-11e9-85c8-2e9f659e7c6f.png\" width=300 height=300 />\n</p>\n\n<h1 align=\"center\">go-echarts</h1>\n<p align=\"center\">\n    <em>üé® The adorable charts library for Golang.</em>\n</p>\n\n<p align=\"center\">\n    <a href=\"https://github.com/go-echarts/go-echarts/actions/workflows/ci.yml\" style=\"text-decoration: none;\">\n        <img src=\"https://github.com/go-echarts/go-echarts/actions/workflows/ci.yml/badge.svg\" alt=\"Build Status\">\n    </a>\n    <a href=\"https://goreportcard.com/report/github.com/go-echarts/go-echarts\" style=\"text-decoration: none;\">\n        <img src=\"https://goreportcard.com/badge/github.com/go-echarts/go-echarts\" alt=\"Go Report Card\">\n    </a>\n\t<a href=\"https://github.com/go-echarts/go-echarts/pulls\" style=\"text-decoration: none;\">\n        <img src=\"https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat\" alt=\"Contributions welcome\">\n    </a>\n    <a href=\"https://opensource.org/licenses/MIT\" style=\"text-decoration: none;\">\n        <img src=\"https://img.shields.io/badge/License-MIT-brightgreen.svg\" alt=\"MIT License\">\n    </a>\n    <a href=\"https://pkg.go.dev/github.com/go-echarts/go-echarts/v2\" style=\"text-decoration: none;\">\n        <img src=\"https://godoc.org/github.com/go-echarts/go-echarts?status.svg\" alt=\"GoDoc\">\n    </a>\n    <a href=\"https://echarts.apache.org/\" style=\"text-decoration: none;\">\n        <img src=\"https://img.shields.io/badge/echarts-_v5.4.3-orange\" alt=\"echartsVersion\">\n    </a>\n    <a href=\"https://go-echarts.github.io/go-echarts\" style=\"text-decoration: none;\">\n        <img src=\"https://img.shields.io/badge/docs-_handbook-blue\" alt=\"handbook\">\n    </a>\n</p>\n\n> If a language can be used to build web scrapers, it definitely needs to provide a graceful data visualization\n> library. --- by dongdong.\n\nIn the Golang ecosystem, there are not many choices for data visualization libraries.  \nThe development of [go-echarts](https://github.com/go-echarts/go-echarts) aims to\nprovide a simple yet powerful data visualization library for Golang.   \n[Apache ECharts](https://echarts.apache.org/) is an awesome charting and visualization library,\nit supports adorable chart types and various interactive features.\nand there have many program languages interactive with Echarts, such as [pyecharts](https://github.com/pyecharts/pyecharts),\nwhich `go-echarts` learns and has evolved a lot from, and the [echarts4j](https://github.com/Koooooo-7/echarts4j) either.\n\n[‰∏≠Êñá README](README_CN.md)\n\n### üî∞ Installation\n\nClassic way to get go-echarts\n\n```shell\n# this may be not a good choice to use v2 go-echarts without gomod(GO111MODULE=off), the \n# next generation version management system \n# Technically, you could use go-echarts in the way below, if you have a better workaround, please let us know....\n\n$ go get -u github.com/go-echarts/go-echarts/...\n$ cd $go-echarts-project\n$ mkdir v2 && mv charts components datasets opts render templates types v2\n```\n\nUse gomod style\n\n```shell\n$ go get -u github.com/go-echarts/go-echarts/v2/...\n```\n\nOR\n\n```shell\n# go.mod\n\nrequire github.com/go-echarts/go-echarts/v2\n```\n\n### ‚è≥ Version\n\nThe go-echarts project is being developed under v2 version and the active codebase is on the master branch.\n\nv1 and v2 are incompatible which means that you cannot upgrade go-echarts from v1 to v2 smoothly. But I think it is\nworth trying that new version.\n\nEspecially, when there contains mino changes (usually in enhancement), we will release the `rc` version before a\nstandard release.\nSo, if you upgrade your projects cross the `rc` versions, maybe need little adjust, and I believe it is worthy to do.\n\n### ‚ú® Features\n\n* Clean and comprehensive API.\n* Visualize your data in 25+ different ways.\n* Highly configurable chart options.\n* Detailed documentation and a rich collection of examples.\n* Visualize your geographical data with 400+ maps.\n\n### üìù Usage\n\nIt's easy to get started with go-echarts with the [handbook](https://go-echarts.github.io/go-echarts), [go-echarts/examples](https://github.com/go-echarts/examples)\nand [GoDocs](https://pkg.go.dev/github.com/go-echarts/go-echarts/v2).\n\nIn this example, we create a simple bar chart with only a few lines of code.\n\n```golang\npackage main\n\nimport (\n\t\"math/rand\"\n\t\"os\"\n\n\t\"github.com/go-echarts/go-echarts/v2/charts\"\n\t\"github.com/go-echarts/go-echarts/v2/opts\"\n)\n\n// generate random data for bar chart\nfunc generateBarItems() []opts.BarData {\n\titems := make([]opts.BarData, 0)\n\tfor i := 0; i < 7; i++ {\n\t\titems = append(items, opts.BarData{Value: rand.Intn(300)})\n\t}\n\treturn items\n}\n\nfunc main() {\n\t// create a new bar instance\n\tbar := charts.NewBar()\n\t// set some global options like Title/Legend/ToolTip or anything else\n\tbar.SetGlobalOptions(charts.WithTitleOpts(opts.Title{\n\t\tTitle:    \"My first bar chart generated by go-echarts\",\n\t\tSubtitle: \"It's extremely easy to use, right?\",\n\t}))\n\n\t// Put data into instance\n\tbar.SetXAxis([]string{\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"}).\n\t\tAddSeries(\"Category A\", generateBarItems()).\n\t\tAddSeries(\"Category B\", generateBarItems())\n\t// Where the magic happens\n\tf, _ := os.Create(\"bar.html\")\n\tbar.Render(f)\n}\n```\n\nAnd the generated bar.html is rendered as below. Isn't that coolÔºÅ\n\n![](https://user-images.githubusercontent.com/19553554/98435974-5094f780-2112-11eb-81f6-b31d68f4d535.png)\n\nOf course we can also start a listening web server with net/http.\n\n```golang\npackage main\n\nimport (\n\t\"math/rand\"\n\t\"net/http\"\n\n\t\"github.com/go-echarts/go-echarts/v2/charts\"\n\t\"github.com/go-echarts/go-echarts/v2/opts\"\n\t\"github.com/go-echarts/go-echarts/v2/types\"\n)\n\n// generate random data for line chart\nfunc generateLineItems() []opts.LineData {\n\titems := make([]opts.LineData, 0)\n\tfor i := 0; i < 7; i++ {\n\t\titems = append(items, opts.LineData{Value: rand.Intn(300)})\n\t}\n\treturn items\n}\n\nfunc httpserver(w http.ResponseWriter, _ *http.Request) {\n\t// create a new line instance\n\tline := charts.NewLine()\n\t// set some global options like Title/Legend/ToolTip or anything else\n\tline.SetGlobalOptions(\n\t\tcharts.WithInitializationOpts(opts.Initialization{Theme: types.ThemeWesteros}),\n\t\tcharts.WithTitleOpts(opts.Title{\n\t\t\tTitle:    \"Line example in Westeros theme\",\n\t\t\tSubtitle: \"Line chart rendered by the http server this time\",\n\t\t}))\n\n\t// Put data into instance\n\tline.SetXAxis([]string{\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"}).\n\t\tAddSeries(\"Category A\", generateLineItems()).\n\t\tAddSeries(\"Category B\", generateLineItems()).\n\t\tSetSeriesOptions(charts.WithLineChartOpts(opts.LineChart{Smooth: opts.Bool(true)}))\n\tline.Render(w)\n}\n\nfunc main() {\n\thttp.HandleFunc(\"/\", httpserver)\n\thttp.ListenAndServe(\":8081\", nil)\n}\n```\n\n![image](https://user-images.githubusercontent.com/19553554/98436642-044cb600-2118-11eb-9f35-784948a92cb5.png)\n\n### üîñ Gallery\n\n<div align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/19553554/52197440-843a5200-289a-11e9-8601-3ce8d945b04a.gif\" width=\"33%\" alt=\"bar\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52360729-ad640980-2a77-11e9-84e2-feff7e11aea5.gif\" width=\"33%\" alt=\"boxplot\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52535290-4b611800-2d87-11e9-8bf2-b43a54a3bda8.png\" width=\"33%\" alt=\"effectScatter\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52332816-ac5eb800-2a36-11e9-8227-3538976f447d.gif\" width=\"33%\" alt=\"funnel\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52332988-0b243180-2a37-11e9-9db8-eb6b8c86a0de.png\" width=\"33%\" alt=\"gague\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52344575-133f9980-2a56-11e9-93e0-568e484936ce.gif\" width=\"33%\" alt=\"geo\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52727805-f7f20280-2ff0-11e9-91ab-cd99848e3127.gif\" width=\"33%\" alt=\"graph\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52345115-6534ef00-2a57-11e9-80cd-9cbfed252139.gif\" width=\"33%\" alt=\"heatmap\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52345490-4a16af00-2a58-11e9-9b43-7bbc86aa05b6.gif\" width=\"33%\" alt=\"kline\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52346064-b7770f80-2a59-11e9-9e03-6dae3a8c637d.gif\" width=\"33%\" alt=\"line\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52347117-248ba480-2a5c-11e9-8402-5a94054dca50.gif\" width=\"33%\" alt=\"liquid\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52347915-0a52c600-2a5e-11e9-8039-41268238576c.gif\" width=\"33%\" alt=\"map\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52535013-e48e2f80-2d83-11e9-8886-ac0d2122d6af.png\" width=\"33%\" alt=\"parallel\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52348202-bb596080-2a5e-11e9-84a7-60732be0743a.gif\" width=\"33%\" alt=\"pie\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52533994-932b7380-2d76-11e9-93b4-0de3132eb941.gif\" width=\"33%\" alt=\"radar\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52348431-420e3d80-2a5f-11e9-8cab-7b415592dc77.gif\" width=\"33%\" alt=\"scatter\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52348737-01fb8a80-2a60-11e9-94ac-dacbd7b58811.png\" width=\"33%\" alt=\"wordCloud\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52433989-4f075b80-2b49-11e9-9979-ef32c2d17c96.gif\" width=\"33%\" alt=\"bar3D\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52464826-4baab900-2bb7-11e9-8299-776f5ee43670.gif\" width=\"33%\" alt=\"line3D\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52802261-8d0cfe00-30ba-11e9-8ae7-ae0773770a59.gif\" width=\"33%\" alt=\"sankey\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52464647-aee81b80-2bb6-11e9-864e-c544392e523a.gif\" width=\"33%\" alt=\"scatter3D\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52465183-a55fb300-2bb8-11e9-8c10-4519c4e3f758.gif\" width=\"33%\" alt=\"surface3D\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52798246-7ebae400-30b2-11e9-8489-6c10339c3429.gif\" width=\"33%\" alt=\"themeRiver\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52349544-c2ce3900-2a61-11e9-82af-28aaaaae0d67.gif\" width=\"33%\" alt=\"overlap\"/>\n</div>\n\nFor more information, please refer to [handbook](https://go-echarts.github.io/go-echarts/), [go-echarts/examples](https://github.com/go-echarts/examples) and\nthe [GoDoc](https://pkg.go.dev/github.com/go-echarts/go-echarts/v2).\n\n### üí° Contribution\n\ngo-echarts is an open source project and built on the top of other open-source projects.\nWelcome all the kinds of contributions. No matter it is for typo fix, bug fix or big new features.\nPlease do not hesitate to ask a question or send a pull request.\n\nWe strongly value documentation and integration with other projects, so we are very glad to accept improvements for\nthese\naspects.\n\n### ‚ù§Ô∏è Contributors\n\n![contributors](https://contrib.rocks/image?repo=go-echarts/go-echarts)\n\n### üìÉ License\n\nMIT [¬©go-echarts](https://github.com/go-echarts/go-echarts/blob/master/LICENSE)\n"
        },
        {
          "name": "README_CN.md",
          "type": "blob",
          "size": 9.3994140625,
          "content": "<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/19553554/52535979-c0d0e680-2d8f-11e9-85c8-2e9f659e7c6f.png\" width=300 height=300 />\n</p>\n\n<h1 align=\"center\">go-echarts</h1>\n<p align=\"center\">\n    <em>üé® The adorable charts library for Golang.</em>\n</p>\n\n<p align=\"center\">\n    <a href=\"https://github.com/go-echarts/go-echarts/actions/workflows/ci.yml\">\n        <img src=\"https://github.com/go-echarts/go-echarts/actions/workflows/ci.yml/badge.svg\" alt=\"Build Status\">\n    </a>\n    <a href=\"https://goreportcard.com/report/github.com/go-echarts/go-echarts\">\n        <img src=\"https://goreportcard.com/badge/github.com/go-echarts/go-echarts\" alt=\"Go Report Card\">\n    </a>\n\t<a href=\"https://github.com/go-echarts/go-echarts/pulls\">\n        <img src=\"https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat\" alt=\"Contributions welcome\">\n    </a>\n    <a href=\"https://opensource.org/licenses/MIT\">\n        <img src=\"https://img.shields.io/badge/License-MIT-brightgreen.svg\" alt=\"MIT License\">\n    </a>\n        <a href=\"https://pkg.go.dev/github.com/go-echarts/go-echarts/v2\">\n        <img src=\"https://godoc.org/github.com/go-echarts/go-echarts?status.svg\" alt=\"GoDoc\">\n    </a>\n    <a href=\"https://echarts.apache.org/\">\n        <img src=\"https://img.shields.io/badge/echarts-_v5.4.3-orange\" alt=\"echartsVersion\">\n    </a>\n</p>\n\n> Â¶ÇÊûú‰∏ÄÈó®ËØ≠Ë®ÄÂèØ‰ª•Áî®Êù•ÂÜôÁà¨Ëô´ÔºåÈÇ£‰πàÂÆÉÂ∞±ÈúÄË¶Å‰∏Ä‰∏™‰ºòÈõÖÁöÑÊï∞ÊçÆÂèØËßÜÂåñÂ∫ì„ÄÇ --- by dongdong\n\nÂú® Golang ËøôÈó®ËØ≠Ë®Ä‰∏≠ÔºåÁõÆÂâçÊï∞ÊçÆÂèØËßÜÂåñÁöÑÁ¨¨‰∏âÊñπÂ∫ìËøòÊòØÁâπÂà´Â∞ëÔºå[go-echarts](https://github.com/go-echarts/go-echarts)\nÁöÑÂºÄÂèëÂ∞±ÊòØ‰∏∫‰∫ÜÂ°´Ë°•ËøôÈÉ®ÂàÜÁöÑÁ©∫Èöô„ÄÇ  \n[Apache ECharts](http://echarts.apache.org/) ÊòØÈùûÂ∏∏‰ºòÁßÄÁöÑÂèØËßÜÂåñÂõæË°®Â∫ìÔºåÂá≠ÂÄüÁùÄËâØÂ•ΩÁöÑ‰∫§‰∫íÊÄßÔºåÁ≤æÂ∑ßÁöÑÂõæË°®ËÆæËÆ°ÔºåÂæóÂà∞‰∫Ü‰ºóÂ§öÂºÄÂèëËÄÖÁöÑËÆ§ÂèØ„ÄÇ\n‰πüÊúâÂÖ∂‰ªñËØ≠Ë®Ä‰∏∫ÂÖ∂ÂÆûÁé∞‰∫ÜÁõ∏Â∫îËØ≠Ë®ÄÁâàÊú¨ÁöÑÊé•Âè£ÔºåÂ¶Ç Python ÁöÑ [pyecharts](https://github.com/pyecharts/pyecharts)Ôºå\ngo-echarts ‰πü‰ªé pyecharts ÂÄüÈâ¥‰∫Ü‰∏Ä‰∫õËÆæËÆ°ÊÄùÊÉ≥„ÄÇ\n\n### üî∞ ÂÆâË£Ö\n\nGOPATH\n\n```shell\n$ go get -u github.com/go-echarts/go-echarts/...\n\n# Âõ†‰∏∫ gomod ÁöÑÁâπÊÆäÁöÑÁâàÊú¨ÁÆ°ÁêÜÊñπÂºèÔºå‰ΩøÁî® go get ÊñπÂºèÂπ∂‰∏çËÉΩÁõ¥Êé•‰ΩøÁî® v2 go-echarts üê∂\n# ‰∏çËøáÂèØ‰ª•ÈÄöËøá‰ª•‰∏ãÊñπÊ≥ï‰ΩøÁî®Êñ∞ÁâàÊú¨...\n$ cd $go-echarts-project\n$ mkdir v2 && mv charts components datasets opts render templates types v2\n```\n\nGoMod\n\n```shell\nrequire github.com/go-echarts/go-echarts/v2\n```\n\n### ‚è≥ ÁâàÊú¨\n\ngo-echarts Áé∞Âú®Êúâ v1 Âíå v2 ‰∏§‰∏™Â§ßÁâàÊú¨Ôºåv1 ÁâàÊú¨ÁöÑ‰ª£Á†Å‰Ωç‰∫é v1 ÂàÜÊîØ‰∏ãÔºåv2 ‰ª£Á†Å‰Ωç‰∫é master ÂàÜÊîØ‰∏ã„ÄÇ‰∏§‰∏™Â§ßÁâàÊú¨ÊòØ‰∏çÂÖºÂÆπÁöÑÔºå‰∏î v1\n‰∏ç‰ºöÂÜçÁª¥Êä§‰∫ÜÔºåÊâÄ‰ª•Ê¨¢Ëøé‰ΩøÁî® v2 ÁâàÊú¨„ÄÇ\n\nÁâπÂà´ÁöÑÔºåÂΩìÊúâ‰∏Ä‰∫õÂ∞èÁöÑÊîπÂä®Êó∂ÔºàÈÄöÂ∏∏ÂÅöÁöÑÈÉ®ÂàÜÈáçÊûÑÔºâ‰ºöÂÖàÂèëÂ∏ÉrcÁâàÊú¨ÔºåË°®Á§∫ËøôÊòØ‰∏Ä‰∏™ÂæÖÂèëÂ∏ÉÁöÑÊñ∞ÁöÑÂèØËÉΩÊúâÂ∞èÊîπÂä®ÁöÑÁâàÊú¨ÔºàÈùûbreakingÔºâ„ÄÇ\nÂ¶ÇÊûúË∑®rcÁâàÊú¨ÂØπÂ∑≤ÊúâÁöÑÈ°πÁõÆÁõ¥Êé•ÂçáÁ∫ßÊó∂ÔºåÂèØËÉΩÈúÄË¶ÅÂ∞èË∞ÉÊï¥‰∏Ä‰∏ã‰ª£Á†Å„ÄÇ\n\n### ‚ú® ÁâπÊÄß\n\n* ÁÆÄÊ¥ÅÁöÑ API ËÆæËÆ°Ôºå‰ΩøÁî®Â¶Ç‰∏ùÊªëËà¨ÊµÅÁïÖ\n* ÂõäÊã¨‰∫Ü **25+** ÁßçÂ∏∏ËßÅÂõæË°®ÔºåÂ∫îÊúâÂ∞ΩÊúâ\n* È´òÂ∫¶ÁÅµÊ¥ªÁöÑÈÖçÁΩÆÈ°πÔºåÂèØËΩªÊùæÊê≠ÈÖçÂá∫Á≤æÁæéÁöÑÂõæË°®\n* ËØ¶ÁªÜÁöÑÊñáÊ°£ÂíåÁ§∫‰æãÔºåÂ∏ÆÂä©ÂºÄÂèëËÄÖÊõ¥Âø´ÁöÑ‰∏äÊâãÈ°πÁõÆ\n* Â§öËææ **400+** Âú∞ÂõæÔºå‰∏∫Âú∞ÁêÜÊï∞ÊçÆÂèØËßÜÂåñÊèê‰æõÂº∫ÊúâÂäõÁöÑÊîØÊåÅ\n\n### üìù ‰ΩøÁî®\n\n‰ΩøÁî®`go-echarts`\nÂèØ‰ª•ÂèÇËÄÉ[handbook](https://go-echarts.github.io/go-echarts), [go-echarts/examples](https://github.com/go-echarts/examples)\nÂíå [GoDocs](https://pkg.go.dev/github.com/go-echarts/go-echarts/v2).  \n‰ªÖÈúÄË¶ÅÂá†Ë°åÊ†∏ÂøÉ‰ª£Á†ÅÂ∞±ÂèØÁîªÂá∫ÁæéËßÇÁöÑÂõæË°®\n\n```golang\npackage main\n\nimport (\n\t\"math/rand\"\n\t\"os\"\n\n\t\"github.com/go-echarts/go-echarts/v2/charts\"\n\t\"github.com/go-echarts/go-echarts/v2/opts\"\n)\n\n// generate random data for bar chart\nfunc generateBarItems() []opts.BarData {\n\titems := make([]opts.BarData, 0)\n\tfor i := 0; i < 7; i++ {\n\t\titems = append(items, opts.BarData{Value: rand.Intn(300)})\n\t}\n\treturn items\n}\n\nfunc main() {\n\t// create a new bar instance\n\tbar := charts.NewBar()\n\t// set some global options like Title/Legend/ToolTip or anything else\n\tbar.SetGlobalOptions(charts.WithTitleOpts(opts.Title{\n\t\tTitle:    \"My first bar chart generated by go-echarts\",\n\t\tSubtitle: \"It's extremely easy to use, right?\",\n\t}))\n\n\t// Put data into instance\n\tbar.SetXAxis([]string{\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"}).\n\t\tAddSeries(\"Category A\", generateBarItems()).\n\t\tAddSeries(\"Category B\", generateBarItems())\n\t// Where the magic happens\n\tf, _ := os.Create(\"bar.html\")\n\tbar.Render(f)\n}\n```\n\n`Render` ÊñπÊ≥ïÂ∞Ü‰ºöÂ∞ÜÊ∏≤ÊüìÁªìÊûú‰øùÂ≠ò‰∏∫ bar.html Êñá‰ª∂\n\n![](https://user-images.githubusercontent.com/19553554/98435974-5094f780-2112-11eb-81f6-b31d68f4d535.png)\n\nÂΩìÁÑ∂‰πüÂèØ‰ª•‰ΩøÁî®ÂêØÂä® http ÊúçÂä°Â∞ÜÂõæË°®Áõ¥Êé•Ê∏≤ÊüìÂá∫Êù•\n\n```golang\npackage main\n\nimport (\n\t\"math/rand\"\n\t\"net/http\"\n\n\t\"github.com/go-echarts/go-echarts/v2/charts\"\n\t\"github.com/go-echarts/go-echarts/v2/opts\"\n\t\"github.com/go-echarts/go-echarts/v2/types\"\n)\n\n// generate random data for line chart\nfunc generateLineItems() []opts.LineData {\n\titems := make([]opts.LineData, 0)\n\tfor i := 0; i < 7; i++ {\n\t\titems = append(items, opts.LineData{Value: rand.Intn(300)})\n\t}\n\treturn items\n}\n\nfunc httpserver(w http.ResponseWriter, _ *http.Request) {\n\t// create a new line instance\n\tline := charts.NewLine()\n\t// set some global options like Title/Legend/ToolTip or anything else\n\tline.SetGlobalOptions(\n\t\tcharts.WithInitializationOpts(opts.Initialization{Theme: types.ThemeWesteros}),\n\t\tcharts.WithTitleOpts(opts.Title{\n\t\t\tTitle:    \"Line example in Westeros theme\",\n\t\t\tSubtitle: \"Line chart rendered by the http server this time\",\n\t\t}))\n\n\t// Put data into instance\n\tline.SetXAxis([]string{\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"}).\n\t\tAddSeries(\"Category A\", generateLineItems()).\n\t\tAddSeries(\"Category B\", generateLineItems()).\n\t\tSetSeriesOptions(charts.WithLineChartOpts(opts.LineChart{Smooth: opts.Bool(true)}))\n\tline.Render(w)\n}\n\nfunc main() {\n\thttp.HandleFunc(\"/\", httpserver)\n\thttp.ListenAndServe(\":8081\", nil)\n}\n```\n\n![image](https://user-images.githubusercontent.com/19553554/98436642-044cb600-2118-11eb-9f35-784948a92cb5.png)\n\n### üîñ Gallery\n\n<div align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/19553554/52197440-843a5200-289a-11e9-8601-3ce8d945b04a.gif\" width=\"33%\" alt=\"bar\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52360729-ad640980-2a77-11e9-84e2-feff7e11aea5.gif\" width=\"33%\" alt=\"boxplot\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52535290-4b611800-2d87-11e9-8bf2-b43a54a3bda8.png\" width=\"33%\" alt=\"effectScatter\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52332816-ac5eb800-2a36-11e9-8227-3538976f447d.gif\" width=\"33%\" alt=\"funnel\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52332988-0b243180-2a37-11e9-9db8-eb6b8c86a0de.png\" width=\"33%\" alt=\"gague\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52344575-133f9980-2a56-11e9-93e0-568e484936ce.gif\" width=\"33%\" alt=\"geo\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52727805-f7f20280-2ff0-11e9-91ab-cd99848e3127.gif\" width=\"33%\" alt=\"graph\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52345115-6534ef00-2a57-11e9-80cd-9cbfed252139.gif\" width=\"33%\" alt=\"heatmap\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52345490-4a16af00-2a58-11e9-9b43-7bbc86aa05b6.gif\" width=\"33%\" alt=\"kline\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52346064-b7770f80-2a59-11e9-9e03-6dae3a8c637d.gif\" width=\"33%\" alt=\"line\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52347117-248ba480-2a5c-11e9-8402-5a94054dca50.gif\" width=\"33%\" alt=\"liquid\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52347915-0a52c600-2a5e-11e9-8039-41268238576c.gif\" width=\"33%\" alt=\"map\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52535013-e48e2f80-2d83-11e9-8886-ac0d2122d6af.png\" width=\"33%\" alt=\"parallel\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52348202-bb596080-2a5e-11e9-84a7-60732be0743a.gif\" width=\"33%\" alt=\"pie\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52533994-932b7380-2d76-11e9-93b4-0de3132eb941.gif\" width=\"33%\" alt=\"radar\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52348431-420e3d80-2a5f-11e9-8cab-7b415592dc77.gif\" width=\"33%\" alt=\"scatter\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52348737-01fb8a80-2a60-11e9-94ac-dacbd7b58811.png\" width=\"33%\" alt=\"wordCloud\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52433989-4f075b80-2b49-11e9-9979-ef32c2d17c96.gif\" width=\"33%\" alt=\"bar3D\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52464826-4baab900-2bb7-11e9-8299-776f5ee43670.gif\" width=\"33%\" alt=\"line3D\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52802261-8d0cfe00-30ba-11e9-8ae7-ae0773770a59.gif\" width=\"33%\" alt=\"sankey\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52464647-aee81b80-2bb6-11e9-864e-c544392e523a.gif\" width=\"33%\" alt=\"scatter3D\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52465183-a55fb300-2bb8-11e9-8c10-4519c4e3f758.gif\" width=\"33%\" alt=\"surface3D\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52798246-7ebae400-30b2-11e9-8489-6c10339c3429.gif\" width=\"33%\" alt=\"themeRiver\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52349544-c2ce3900-2a61-11e9-82af-28aaaaae0d67.gif\" width=\"33%\" alt=\"overlap\"/>\n</div>\n\n### üìÉ License\n\nMIT [¬©go-echarts](https://github.com/go-echarts/go-echarts/blob/master/LICENSE)\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.8359375,
          "content": "#!/bin/bash\n\nversion=\"v2.2.3\"\n\nfunction pre_check() {\n  info=$(diff -u <(echo -n) <(format))\n  if [ -n \"$info\" ]; then\n    echo \">> Make sure you have formatted the codebase before committing.\"\n    echo \">> Use 'git status' command to show what have changed.\"\n    exit 1\n  fi\n}\n\nfunction format() {\n    # go install mvdan.cc/gofumpt@latest\n    go fmt ./... && ls -d */ | xargs goimports -w\n}\n\nfunction test() {\n    go test -v ./...\n}\n\nfunction release() {\n    pre_check\n\n    echo \">> Building tag...\"\n    git tag -a $version -m \"Release: $version\"\n\n    echo \">> Pushing tag to the remote....\"\n    git push origin $version\n}\n\nfunction help() {\n    echo \"$0 [format|test|release]\"\n}\n\nif [ \"$1\" == \"\" ]; then\n    help\nelif [ \"$1\" == \"format\" ];then\n    format\nelif [ \"$1\" == \"test\" ];then\n    test\nelif [ \"$1\" == \"release\" ];then\n    release\nelse\n    help\nfi\n"
        },
        {
          "name": "charts",
          "type": "tree",
          "content": null
        },
        {
          "name": "components",
          "type": "tree",
          "content": null
        },
        {
          "name": "datasets",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "event",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.341796875,
          "content": "module github.com/go-echarts/go-echarts/v2\n\ngo 1.18\n\nrequire github.com/stretchr/testify v1.6.0\n\nrequire (\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/kr/pretty v0.1.0 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127 // indirect\n\tgopkg.in/yaml.v3 v3.0.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 1.626953125,
          "content": "github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/kr/pretty v0.1.0 h1:L/CwN0zerZDmRFUapSPitk6f+Q3+0za1rQkzVuMiMFI=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.6.0 h1:jlIyCplCJFULU/01vCkhKuTyc3OorI3bJFuw6obfgho=\ngithub.com/stretchr/testify v1.6.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127 h1:qIbj1fsPNlZgppZ+VLlY7N33q108Sa+fhmuc+sWQYwY=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0 h1:hjy8E9ON/egN1tAYqKb61G10WtihqetD4sz2H+8nIeA=\ngopkg.in/yaml.v3 v3.0.0/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "opts",
          "type": "tree",
          "content": null
        },
        {
          "name": "render",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "types",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}