{
  "metadata": {
    "timestamp": 1736567838018,
    "page": 420,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjQyOA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "docker/cli",
      "stars": 5035,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.2158203125,
          "content": "/build/\n/cli/winresources/versioninfo.json\n/cli/winresources/*.syso\n/man/man*/\n/man/vendor/\n/man/go.sum\n/docs/yaml/\n/docs/vendor/\n/docs/go.sum\nprofile.out\n\n# top-level go.mod is not meant to be checked in\n/go.mod\n/go.sum\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3212890625,
          "content": "* text=auto\n\nDockerfile* linguist-language=Dockerfile\nvendor.mod linguist-language=Go-Module\nvendor.sum linguist-language=Go-Checksums\n\n*.go -text diff=golang\n\n# scripts directory contains shell scripts\n# without extensions, so we need to force\nscripts/** text=auto eol=lf\n\n# shell scripts should always have LF\n*.sh text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.337890625,
          "content": "# if you want to ignore files created by your editor/tools,\n# consider a global .gitignore https://help.github.com/articles/ignoring-files\n*.exe\n*.exe~\n*.orig\n.*.swp\n.DS_Store\nThumbs.db\n.editorconfig\n/build/\n/cli/winresources/versioninfo.json\n/cli/winresources/*.syso\nprofile.out\n\n# top-level go.mod is not meant to be checked in\n/go.mod\n/go.sum\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 7.1845703125,
          "content": "linters:\n  enable:\n    - bodyclose\n    - copyloopvar   # Detects places where loop variables are copied.\n    - depguard\n    - dogsled\n    - dupword       # Detects duplicate words.\n    - durationcheck\n    - errchkjson\n    - gocritic      # Metalinter; detects bugs, performance, and styling issues.\n    - gocyclo\n    - gofumpt       # Detects whether code was gofumpt-ed.\n    - goimports\n    - gosec         # Detects security problems.\n    - gosimple\n    - govet\n    - ineffassign\n    - lll\n    - misspell      # Detects commonly misspelled English words in comments.\n    - nakedret\n    - nilerr        # Detects code that returns nil even if it checks that the error is not nil.\n    - nolintlint    # Detects ill-formed or insufficient nolint directives.\n    - perfsprint    # Detects fmt.Sprintf uses that can be replaced with a faster alternative.\n    - prealloc      # Detects slice declarations that could potentially be pre-allocated.\n    - predeclared   # Detects code that shadows one of Go's predeclared identifiers\n    - reassign\n    - revive        # Metalinter; drop-in replacement for golint.\n    - staticcheck\n    - stylecheck    # Replacement for golint\n    - tenv          # Detects using os.Setenv instead of t.Setenv.\n    - thelper       # Detects test helpers without t.Helper().\n    - tparallel     # Detects inappropriate usage of t.Parallel().\n    - typecheck\n    - unconvert     # Detects unnecessary type conversions.\n    - unparam\n    - unused\n    - usestdlibvars\n    - wastedassign\n\n  disable:\n    - errcheck\n\nrun:\n  # prevent golangci-lint from deducting the go version to lint for through go.mod,\n  # which causes it to fallback to go1.17 semantics.\n  go: \"1.23.4\"\n  timeout: 5m\n\nlinters-settings:\n  depguard:\n    rules:\n      main:\n        deny:\n          - pkg: \"github.com/containerd/containerd/errdefs\"\n            desc: The containerd errdefs package was migrated to a separate module. Use github.com/containerd/errdefs instead.\n          - pkg: \"github.com/containerd/containerd/log\"\n            desc: The containerd log package was migrated to a separate module. Use github.com/containerd/log instead.\n          - pkg: \"github.com/containerd/containerd/pkg/userns\"\n            desc: Use github.com/moby/sys/userns instead.\n          - pkg: \"github.com/containerd/containerd/platforms\"\n            desc: The containerd platforms package was migrated to a separate module. Use github.com/containerd/platforms instead.\n          - pkg: \"github.com/docker/docker/pkg/system\"\n            desc: This package should not be used unless strictly necessary.\n          - pkg: \"io/ioutil\"\n            desc: The io/ioutil package has been deprecated, see https://go.dev/doc/go1.16#ioutil\n  gocyclo:\n    min-complexity: 16\n  gosec:\n    excludes:\n      - G104 # G104: Errors unhandled; (TODO: reduce unhandled errors, or explicitly ignore)\n      - G113 # G113: Potential uncontrolled memory consumption in Rat.SetString (CVE-2022-23772); (only affects go < 1.16.14. and go < 1.17.7)\n      - G115 # G115: integer overflow conversion; (TODO: verify these: https://github.com/docker/cli/issues/5584)\n      - G306 # G306: Expect WriteFile permissions to be 0600 or less (too restrictive; also flags \"0o644\" permissions)\n      - G307 # G307: Deferring unsafe method \"*os.File\" on type \"Close\" (also EXC0008); (TODO: evaluate these and fix where needed: G307: Deferring unsafe method \"*os.File\" on type \"Close\")\n  govet:\n    enable:\n      - shadow\n    settings:\n      shadow:\n        strict: true\n  lll:\n    line-length: 200\n  nakedret:\n    command: nakedret\n    pattern: ^(?P<path>.*?\\\\.go):(?P<line>\\\\d+)\\\\s*(?P<message>.*)$\n\n  revive:\n    rules:\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#import-shadowing\n      - name: import-shadowing\n        severity: warning\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#empty-block\n      - name: empty-block\n        severity: warning\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#empty-lines\n      - name: empty-lines\n        severity: warning\n        disabled: false\n      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#use-any\n      - name: use-any\n        severity: warning\n        disabled: false\n\nissues:\n  # The default exclusion rules are a bit too permissive, so copying the relevant ones below\n  exclude-use-default: false\n\n  # This option has been defined when Go modules was not existed and when the\n  # golangci-lint core was different, this is not something we still recommend.\n  exclude-dirs-use-default: false\n\n  exclude:\n    - parameter .* always receives\n\n  exclude-files:\n    - cli/compose/schema/bindata.go\n    - .*generated.*\n\n  exclude-rules:\n    # We prefer to use an \"exclude-list\" so that new \"default\" exclusions are not\n    # automatically inherited. We can decide whether or not to follow upstream\n    # defaults when updating golang-ci-lint versions.\n    # Unfortunately, this means we have to copy the whole exclusion pattern, as\n    # (unlike the \"include\" option), the \"exclude\" option does not take exclusion\n    # ID's.\n    #\n    # These exclusion patterns are copied from the default excluses at:\n    # https://github.com/golangci/golangci-lint/blob/v1.44.0/pkg/config/issues.go#L10-L104\n    #\n    # The default list of exclusions can be found at:\n    # https://golangci-lint.run/usage/false-positives/#default-exclusions\n\n    # EXC0001\n    - text: \"Error return value of .((os\\\\.)?std(out|err)\\\\..*|.*Close|.*Flush|os\\\\.Remove(All)?|.*print(f|ln)?|os\\\\.(Un)?Setenv). is not checked\"\n      linters:\n        - errcheck\n    # EXC0003\n    - text: \"func name will be used as test\\\\.Test.* by other packages, and that stutters; consider calling this\"\n      linters:\n        - revive\n    # EXC0006\n    - text: \"Use of unsafe calls should be audited\"\n      linters:\n        - gosec\n    # EXC0007\n    - text: \"Subprocess launch(ed with variable|ing should be audited)\"\n      linters:\n        - gosec\n    # EXC0009\n    - text: \"(Expect directory permissions to be 0750 or less|Expect file permissions to be 0600 or less)\"\n      linters:\n        - gosec\n    # EXC0010\n    - text: \"Potential file inclusion via variable\"\n      linters:\n        - gosec\n\n    # TODO: make sure all packages have a description. Currently, there's 67 packages without.\n    - text: \"package-comments: should have a package comment\"\n      linters:\n        - revive\n    # FIXME temporarily suppress these (see https://github.com/gotestyourself/gotest.tools/issues/272)\n    - text: \"SA1019: (assert|cmp|is)\\\\.ErrorType is deprecated\"\n      linters:\n        - staticcheck\n    # Exclude some linters from running on tests files.\n    - path: _test\\.go\n      linters:\n        - errcheck\n        - gosec\n    - text: \"ST1000: at least one file in a package should have a package comment\"\n      linters:\n        - stylecheck\n\n    # Allow \"err\" and \"ok\" vars to shadow existing declarations, otherwise we get too many false positives.\n    - text: '^shadow: declaration of \"(err|ok)\" shadows declaration'\n      linters:\n        - govet\n\n\n  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.\n  max-issues-per-linter: 0\n\n  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.\n  max-same-issues: 0\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 31.900390625,
          "content": "# Generate AUTHORS: scripts/docs/generate-authors.sh\n\n# Tip for finding duplicates (besides scanning the output of AUTHORS for name\n# duplicates that aren't also email duplicates): scan the output of:\n#   git log --format='%aE - %aN' | sort -uf\n#\n# For explanation on this file format: man git-shortlog\n\n<lmscrewy@gmail.com> <1674195+squeegels@users.noreply.github.com>\nAaron L. Xu <liker.xu@foxmail.com>\nAaron Lehmann <alehmann@netflix.com>\nAaron Lehmann <alehmann@netflix.com> <aaron.lehmann@docker.com>\nAbhinandan Prativadi <abhi@docker.com>\nAce Tang <aceapril@126.com>\nAdrien Gallouët <adrien@gallouet.fr> <angt@users.noreply.github.com>\nAhmed Kamal <email.ahmedkamal@googlemail.com>\nAhmet Alp Balkan <ahmetb@microsoft.com> <ahmetalpbalkan@gmail.com>\nAJ Bowen <aj@soulshake.net>\nAJ Bowen <aj@soulshake.net> <aj@gandi.net>\nAJ Bowen <aj@soulshake.net> <amy@gandi.net>\nAkihiro Matsushima <amatsusbit@gmail.com> <amatsus@users.noreply.github.com>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp> <suda.akihiro@lab.ntt.co.jp>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp> <suda.kyoto@gmail.com>\nAlano Terblanche <alano.terblanche@docker.com>\nAlano Terblanche <alano.terblanche@docker.com> <18033717+Benehiko@users.noreply.github.com>\nAlbin Kerouanton <albinker@gmail.com>\nAlbin Kerouanton <albinker@gmail.com> <557933+akerouanton@users.noreply.github.com>\nAlbin Kerouanton <albinker@gmail.com> <albin@akerouanton.name>\nAleksa Sarai <asarai@suse.de>\nAleksa Sarai <asarai@suse.de> <asarai@suse.com>\nAleksa Sarai <asarai@suse.de> <cyphar@cyphar.com>\nAleksandrs Fadins <aleks@s-ko.net>\nAlessandro Boch <aboch@tetrationanalytics.com> <aboch@docker.com>\nAlex Chen <alexchenunix@gmail.com> <root@localhost.localdomain>\nAlex Ellis <alexellis2@gmail.com>\nAlexander Chneerov <achneerov@gmail.com>\nAlexander Larsson <alexl@redhat.com> <alexander.larsson@gmail.com>\nAlexander Morozov <lk4d4math@gmail.com>\nAlexander Morozov <lk4d4math@gmail.com> <lk4d4@docker.com>\nAlexandre Beslic <alexandre.beslic@gmail.com> <abronan@docker.com>\nAlexis Couvreur <alexiscouvreur.pro@gmail.com>\nAlicia Lauerman <alicia@eta.im> <allydevour@me.com>\nAllen Sun <allensun.shl@alibaba-inc.com> <allen.sun@daocloud.io>\nAllen Sun <allensun.shl@alibaba-inc.com> <shlallen1990@gmail.com>\nAndrew Weiss <andrew.weiss@docker.com> <andrew.weiss@microsoft.com>\nAndrew Weiss <andrew.weiss@docker.com> <andrew.weiss@outlook.com>\nAndré Martins  <aanm90@gmail.com> <martins@noironetworks.com>\nAndy Rothfusz <github@developersupport.net> <github@metaliveblog.com>\nAndy Smith <github@anarkystic.com>\nAnkush Agarwal <ankushagarwal11@gmail.com> <ankushagarwal@users.noreply.github.com>\nAntonio Murdaca <antonio.murdaca@gmail.com> <amurdaca@redhat.com>\nAntonio Murdaca <antonio.murdaca@gmail.com> <me@runcom.ninja>\nAntonio Murdaca <antonio.murdaca@gmail.com> <runcom@linux.com>\nAntonio Murdaca <antonio.murdaca@gmail.com> <runcom@redhat.com>\nAntonio Murdaca <antonio.murdaca@gmail.com> <runcom@users.noreply.github.com>\nAnuj Bahuguna <anujbahuguna.dev@gmail.com>\nAnuj Bahuguna <anujbahuguna.dev@gmail.com> <abahuguna@fiberlink.com>\nAnusha Ragunathan <anusha.ragunathan@docker.com> <anusha@docker.com>\nAo Li <la9249@163.com>\nArko Dasgupta <arko@tetrate.io>\nArko Dasgupta <arko@tetrate.io> <arko.dasgupta@docker.com>\nArko Dasgupta <arko@tetrate.io> <arkodg@users.noreply.github.com>\nArnaud Porterie <icecrime@gmail.com>\nArnaud Porterie <icecrime@gmail.com> <arnaud.porterie@docker.com>\nArthur Gautier <baloo@gandi.net> <superbaloo+registrations.github@superbaloo.net>\nArthur Peka <arthur.peka@outlook.com> <arthrp@users.noreply.github.com>\nAvi Miller <avi.miller@oracle.com> <avi.miller@gmail.com>\nBen Bonnefoy <frenchben@docker.com>\nBen Golub <ben.golub@dotcloud.com>\nBen Toews <mastahyeti@gmail.com> <mastahyeti@users.noreply.github.com>\nBenjamin Nater <me@bn4t.me>\nBenoit Chesneau <bchesneau@gmail.com>\nBhiraj Butala <abhiraj.butala@gmail.com>\nBhumika Bayani <bhumikabayani@gmail.com>\nBilal Amarni <bilal.amarni@gmail.com> <bamarni@users.noreply.github.com>\nBill Wang <ozbillwang@gmail.com> <SydOps@users.noreply.github.com>\nBin Liu <liubin0329@gmail.com>\nBin Liu <liubin0329@gmail.com> <liubin0329@users.noreply.github.com>\nBingshen Wang <bingshen.wbs@alibaba-inc.com>\nBjorn Neergaard <bjorn.neergaard@docker.com>\nBjorn Neergaard <bjorn.neergaard@docker.com> <bjorn@neersighted.com>\nBjorn Neergaard <bjorn.neergaard@docker.com> <bneergaard@mirantis.com>\nBoaz Shuster <ripcurld.github@gmail.com>\nBrad Baker <brad@brad.fi>\nBrad Baker <brad@brad.fi> <88946291+brdbkr@users.noreply.github.com>\nBrandon Philips <brandon.philips@coreos.com> <brandon@ifup.co>\nBrandon Philips <brandon.philips@coreos.com> <brandon@ifup.org>\nBrent Salisbury <brent.salisbury@docker.com> <brent@docker.com>\nBrian Goff <cpuguy83@gmail.com>\nBrian Goff <cpuguy83@gmail.com> <bgoff@cpuguy83-mbp.home>\nBrian Goff <cpuguy83@gmail.com> <bgoff@cpuguy83-mbp.local>\nBrian Tracy <brian.tracy33@gmail.com>\nCalvin Liu <flycalvin@qq.com>\nCarlos de Paula <me@carlosedp.com>\nChad Faragher <wyckster@hotmail.com>\nChander Govindarajan <chandergovind@gmail.com>\nChao Wang <wangchao.fnst@cn.fujitsu.com> <chaowang@localhost.localdomain>\nCharles Hooper <charles.hooper@dotcloud.com> <chooper@plumata.com>\nChen Chao <cc272309126@gmail.com>\nChen Chuanliang <chen.chuanliang@zte.com.cn>\nChen Mingjie <chenmingjie0828@163.com>\nChen Qiu <cheney-90@hotmail.com>\nChen Qiu <cheney-90@hotmail.com> <21321229@zju.edu.cn>\nChris Chinchilla <chris@chrischinchilla.com>\nChris Chinchilla <chris@chrischinchilla.com> <chris.ward@docker.com>\nChris Dias <cdias@microsoft.com>\nChris McKinnel <chris.mckinnel@tangentlabs.co.uk>\nChristopher Biscardi <biscarch@sketcht.com>\nChristopher Crone <christopher.crone@docker.com>\nChristopher Latham <sudosurootdev@gmail.com>\nChristy Norman <christy@linux.vnet.ibm.com>\nChun Chen <ramichen@tencent.com> <chenchun.feed@gmail.com>\nComical Derskeal <27731088+derskeal@users.noreply.github.com>\nCorbin Coleman <corbin.coleman@docker.com>\nCory Bennet <cbennett@netflix.com>\nCraig Osterhout <craig.osterhout@docker.com>\nCristian Staretu <cristian.staretu@gmail.com>\nCristian Staretu <cristian.staretu@gmail.com> <unclejack@users.noreply.github.com>\nCristian Staretu <cristian.staretu@gmail.com> <unclejacksons@gmail.com>\nCUI Wei <ghostplant@qq.com> cuiwei13 <cuiwei13@pku.edu.cn>\nDaehyeok Mun <daehyeok@gmail.com>\nDaehyeok Mun <daehyeok@gmail.com> <daehyeok@daehyeok-ui-MacBook-Air.local>\nDaehyeok Mun <daehyeok@gmail.com> <daehyeok@daehyeokui-MacBook-Air.local>\nDaisuke Ito <itodaisuke00@gmail.com>\nDan Feldman <danf@jfrog.com>\nDanial Gharib <danial.mail.gh@gmail.com>\nDaniel Dao <dqminh@cloudflare.com>\nDaniel Dao <dqminh@cloudflare.com> <dqminh89@gmail.com>\nDaniel Garcia <daniel@danielgarcia.info>\nDaniel Gasienica <daniel@gasienica.ch> <dgasienica@zynga.com>\nDaniel Goosen <daniel.goosen@surveysampling.com> <djgoosen@users.noreply.github.com>\nDaniel Grunwell <mwgrunny@gmail.com>\nDaniel J Walsh <dwalsh@redhat.com>\nDaniel Mizyrycki <daniel.mizyrycki@dotcloud.com> <daniel@dotcloud.com>\nDaniel Mizyrycki <daniel.mizyrycki@dotcloud.com> <mzdaniel@glidelink.net>\nDaniel Mizyrycki <daniel.mizyrycki@dotcloud.com> <root@vagrant-ubuntu-12.10.vagrantup.com>\nDaniel Nephin <dnephin@docker.com> <dnephin@gmail.com>\nDaniel Norberg <dano@spotify.com> <daniel.norberg@gmail.com>\nDaniel Watkins <daniel@daniel-watkins.co.uk>\nDanny Yates <danny@codeaholics.org> <Danny.Yates@mailonline.co.uk>\nDarren Shepherd <darren.s.shepherd@gmail.com> <darren@rancher.com>\nDattatraya Kumbhar <dattatraya.kumbhar@gslab.com>\nDave Goodchild <buddhamagnet@gmail.com>\nDave Henderson <dhenderson@gmail.com> <Dave.Henderson@ca.ibm.com>\nDave Tucker <dt@docker.com> <dave@dtucker.co.uk>\nDavid Alvarez <david.alvarez@flyeralarm.com>\nDavid Alvarez <david.alvarez@flyeralarm.com> <busilezas@gmail.com>\nDavid Karlsson <david.karlsson@docker.com>\nDavid Karlsson <david.karlsson@docker.com> <35727626+dvdksn@users.noreply.github.com>\nDavid M. Karr <davidmichaelkarr@gmail.com>\nDavid Sheets <dsheets@docker.com> <sheets@alum.mit.edu>\nDavid Sissitka <me@dsissitka.com>\nDavid Williamson <david.williamson@docker.com> <davidwilliamson@users.noreply.github.com>\nDerek McGowan <derek@mcg.dev>\nDerek McGowan <derek@mcg.dev> <derek@mcgstyle.net>\nDeshi Xiao <dxiao@redhat.com> <dsxiao@dataman-inc.com>\nDeshi Xiao <dxiao@redhat.com> <xiaods@gmail.com>\nDiego Siqueira <dieg0@live.com>\nDiogo Monica <diogo@docker.com> <diogo.monica@gmail.com>\nDominik Braun <dominik.braun@nbsp.de>\nDominik Braun <dominik.braun@nbsp.de> <Dominik.Braun@nbsp.de>\nDominik Honnef <dominik@honnef.co> <dominikh@fork-bomb.org>\nDoug Davis <dug@us.ibm.com> <duglin@users.noreply.github.com>\nDoug Tangren <d.tangren@gmail.com>\nDrew Erny <derny@mirantis.com>\nDrew Erny <derny@mirantis.com> <drew.erny@docker.com>\nElan Ruusamäe <glen@pld-linux.org>\nElan Ruusamäe <glen@pld-linux.org> <glen@delfi.ee>\nElango Sivanandam <elango.siva@docker.com>\nEric G. Noriega <enoriega@vizuri.com> <egnoriega@users.noreply.github.com>\nEric Hanchrow <ehanchrow@ine.com> <eric.hanchrow@gmail.com>\nEric Rosenberg <ehaydenr@gmail.com> <ehaydenr@users.noreply.github.com>\nErica Windisch <erica@windisch.us> <eric@windisch.us>\nErica Windisch <erica@windisch.us> <ewindisch@docker.com>\nErik Hollensbe <github@hollensbe.org> <erik+github@hollensbe.org>\nErwin van der Koogh <info@erronis.nl>\nEuan Kemp <euan.kemp@coreos.com> <euank@amazon.com>\nEugen Krizo <eugen.krizo@gmail.com>\nEvan Hazlett <ejhazlett@gmail.com> <ehazlett@users.noreply.github.com>\nEvelyn Xu <evelynhsu21@gmail.com>\nEvgeny Shmarnev <shmarnev@gmail.com>\nFaiz Khan <faizkhan00@gmail.com>\nFelix Hupfeld <felix@quobyte.com> <quofelix@users.noreply.github.com>\nFelix Ruess <felix.ruess@gmail.com> <felix.ruess@roboception.de>\nFeng Yan <fy2462@gmail.com>\nFengtu Wang <wangfengtu@huawei.com> <wangfengtu@huawei.com>\nFrancisco Carriedo <fcarriedo@gmail.com>\nFrank Rosquin <frank.rosquin+github@gmail.com> <frank.rosquin@gmail.com>\nFrederick F. Kautz IV <fkautz@redhat.com> <fkautz@alumni.cmu.edu>\nGabriel Gore <gabgore@cisco.com>\nGabriel Gore <gabgore@cisco.com> <gabriel59kg@gmail.com>\nGabriel Nicolas Avellaneda <avellaneda.gabriel@gmail.com>\nGaetan de Villele <gdevillele@gmail.com>\nGang Qiao <qiaohai8866@gmail.com> <1373319223@qq.com>\nGeorge Kontridze <george@bugsnag.com>\nGerwim Feiken <g.feiken@tfe.nl> <gerwim@gmail.com>\nGiampaolo Mancini <giampaolo@trampolineup.com>\nGopikannan Venugopalsamy <gopikannan.venugopalsamy@gmail.com>\nGou Rao <gou@portworx.com> <gourao@users.noreply.github.com>\nGraeme Wiebe <graeme.wiebe@gmail.com>\nGraeme Wiebe <graeme.wiebe@gmail.com> <79593869+TheRealGramdalf@users.noreply.github.com>\nGreg Stephens <greg@udon.org>\nGuillaume J. Charmes <guillaume.charmes@docker.com> <charmes.guillaume@gmail.com>\nGuillaume J. Charmes <guillaume.charmes@docker.com> <guillaume.charmes@dotcloud.com>\nGuillaume J. Charmes <guillaume.charmes@docker.com> <guillaume@charmes.net>\nGuillaume J. Charmes <guillaume.charmes@docker.com> <guillaume@docker.com>\nGuillaume J. Charmes <guillaume.charmes@docker.com> <guillaume@dotcloud.com>\nGuillaume Le Floch <glfloch@gmail.com>\nGuillaume Tardif <guillaume.tardif@gmail.com>\nGurjeet Singh <gurjeet@singh.im> <singh.gurjeet@gmail.com>\nGustav Sinder <gustav.sinder@gmail.com>\nGünther Jungbluth <gunther@gameslabs.net>\nHakan Özler <hakan.ozler@kodcu.com>\nHao Shu Wei <haosw@cn.ibm.com>\nHao Shu Wei <haosw@cn.ibm.com> <haoshuwei1989@163.com>\nHarald Albers <github@albersweb.de> <albers@users.noreply.github.com>\nHarold Cooper <hrldcpr@gmail.com>\nHarry Zhang <harryz@hyper.sh> <harryzhang@zju.edu.cn>\nHarry Zhang <harryz@hyper.sh> <resouer@163.com>\nHarry Zhang <harryz@hyper.sh> <resouer@gmail.com>\nHarry Zhang <resouer@163.com>\nHarshal Patil <harshal.patil@in.ibm.com> <harche@users.noreply.github.com>\nHelen Xie <chenjg@harmonycloud.cn>\nHollie Teal <hollie@docker.com>\nHollie Teal <hollie@docker.com> <hollie.teal@docker.com>\nHollie Teal <hollie@docker.com> <hollietealok@users.noreply.github.com>\nHu Keping <hukeping@huawei.com>\nHugo Gabriel Eyherabide <hugogabriel.eyherabide@gmail.com>\nHuu Nguyen <huu@prismskylabs.com> <whoshuu@gmail.com>\nHyzhou Zhy <hyzhou.zhy@alibaba-inc.com>\nHyzhou Zhy <hyzhou.zhy@alibaba-inc.com> <1187766782@qq.com>\nIan Campbell <ian.campbell@docker.com>\nIan Campbell <ian.campbell@docker.com> <ijc@docker.com>\nIlya Khlopotov <ilya.khlopotov@gmail.com>\nJack Laxson <jackjrabbit@gmail.com>\nJacob Atzen <jacob@jacobatzen.dk> <jatzen@gmail.com>\nJacob Tomlinson <jacob@tom.linson.uk> <jacobtomlinson@users.noreply.github.com>\nJaivish Kothari <janonymous.codevulture@gmail.com>\nJake Lambert <jake.lambert@volusion.com>\nJake Lambert <jake.lambert@volusion.com> <32850427+jake-lambert-volusion@users.noreply.github.com>\nJamie Hannaford <jamie@limetree.org> <jamie.hannaford@rackspace.com>\nJean Lecordier  <jeanlecordier@hotmail.fr>\nJean-Baptiste Barth <jeanbaptiste.barth@gmail.com>\nJean-Baptiste Dalido <jeanbaptiste@appgratis.com>\nJean-Pierre Huynh <jean-pierre.huynh@ounet.fr> <jp@moogsoft.com>\nJean-Tiare Le Bigot <jt@yadutaf.fr> <admin@jtlebi.fr>\nJeff Anderson <jeff@docker.com> <jefferya@programmerq.net>\nJeff Nickoloff <jeff.nickoloff@gmail.com> <jeff@allingeek.com>\nJeroen Franse <jeroenfranse@gmail.com>\nJessica Frazelle <jess@oxide.computer>\nJessica Frazelle <jess@oxide.computer> <acidburn@docker.com>\nJessica Frazelle <jess@oxide.computer> <acidburn@google.com>\nJessica Frazelle <jess@oxide.computer> <acidburn@microsoft.com>\nJessica Frazelle <jess@oxide.computer> <jess@docker.com>\nJessica Frazelle <jess@oxide.computer> <jess@mesosphere.com>\nJessica Frazelle <jess@oxide.computer> <jessfraz@google.com>\nJessica Frazelle <jess@oxide.computer> <jfrazelle@users.noreply.github.com>\nJessica Frazelle <jess@oxide.computer> <me@jessfraz.com>\nJessica Frazelle <jess@oxide.computer> <princess@docker.com>\nJim Chen <njucjc@gmail.com>\nJim Galasyn <jim.galasyn@docker.com>\nJiuyue Ma <majiuyue@huawei.com>\nJoey Geiger <jgeiger@gmail.com>\nJoffrey F <joffrey@docker.com>\nJoffrey F <joffrey@docker.com> <f.joffrey@gmail.com>\nJoffrey F <joffrey@docker.com> <joffrey@dotcloud.com>\nJohan Euphrosine <proppy@google.com> <proppy@aminche.com>\nJohn Harris <john@johnharris.io>\nJohn Howard <github@lowenna.com>\nJohn Howard <github@lowenna.com> <jhoward@microsoft.com>\nJohn Howard <github@lowenna.com> <jhoward@ntdev.microsoft.com>\nJohn Howard <github@lowenna.com> <jhowardmsft@users.noreply.github.com>\nJohn Howard <github@lowenna.com> <John.Howard@microsoft.com>\nJohn Howard <github@lowenna.com> <john.howard@microsoft.com>\nJohn Stephens <johnstep@docker.com> <johnstep@users.noreply.github.com>\nJonathan A. Sternberg <jonathansternberg@gmail.com>\nJonathan A. Sternberg <jonathansternberg@gmail.com> <jonathan.sternberg@docker.com>\nJordan Arentsen <blissdev@gmail.com>\nJordan Jennings <jjn2009@gmail.com> <jjn2009@users.noreply.github.com>\nJorit Kleine-Möllhoff <joppich@bricknet.de> <joppich@users.noreply.github.com>\nJose Diaz-Gonzalez <email@josediazgonzalez.com>\nJose Diaz-Gonzalez <email@josediazgonzalez.com> <jose@seatgeek.com>\nJose Diaz-Gonzalez <email@josediazgonzalez.com> <josegonzalez@users.noreply.github.com>\nJosh Eveleth <joshe@opendns.com> <jeveleth@users.noreply.github.com>\nJosh Hawn <josh.hawn@docker.com> <jlhawn@berkeley.edu>\nJosh Horwitz <horwitz@addthis.com> <horwitzja@gmail.com>\nJosh Soref <jsoref@gmail.com> <jsoref@users.noreply.github.com>\nJosh Wilson <josh.wilson@fivestars.com> <jcwilson@users.noreply.github.com>\nJoyce Jang <mail@joycejang.com>\nJulien Bordellier <julienbordellier@gmail.com> <git@julienbordellier.com>\nJulien Bordellier <julienbordellier@gmail.com> <me@julienbordellier.com>\nJustin Cormack <justin.cormack@docker.com>\nJustin Cormack <justin.cormack@docker.com> <justin.cormack@unikernel.com>\nJustin Cormack <justin.cormack@docker.com> <justin@specialbusservice.com>\nJustin Simonelis <justin.p.simonelis@gmail.com> <justin.simonelis@PTS-JSIMON2.toronto.exclamation.com>\nJérôme Petazzoni <jerome.petazzoni@docker.com> <jerome.petazzoni@dotcloud.com>\nJérôme Petazzoni <jerome.petazzoni@docker.com> <jerome.petazzoni@gmail.com>\nJérôme Petazzoni <jerome.petazzoni@docker.com> <jp@enix.org>\nK. Heller <pestophagous@gmail.com> <pestophagous@users.noreply.github.com>\nKai Qiang Wu (Kennan) <wkq5325@gmail.com>\nKai Qiang Wu (Kennan) <wkq5325@gmail.com> <wkqwu@cn.ibm.com>\nKamil Domański <kamil@domanski.co>\nKamjar Gerami <kami.gerami@gmail.com>\nKat Samperi <kat.samperi@gmail.com> <kizzie@users.noreply.github.com>\nKathryn Spiers <kathryn@spiers.me>\nKathryn Spiers <kathryn@spiers.me> <kyle@Spiers.me>\nKathryn Spiers <kathryn@spiers.me> <Kyle@Spiers.me>\nKelton Bassingthwaite <KeltonBassingthwaite@gmail.com>\nKelton Bassingthwaite <KeltonBassingthwaite@gmail.com> <github@bassingthwaite.org>\nKen Cochrane <kencochrane@gmail.com> <KenCochrane@gmail.com>\nKen Herner <kherner@progress.com> <chosenken@gmail.com>\nKenfe-Mickaël Laventure <mickael.laventure@gmail.com>\nKevin Alvarez <github@crazymax.dev>\nKevin Alvarez <github@crazymax.dev> <crazy-max@users.noreply.github.com>\nKevin Feyrer <kevin.feyrer@btinternet.com> <kevinfeyrer@users.noreply.github.com>\nKevin Kern <kaiwentan@harmonycloud.cn>\nKevin Meredith <kevin.m.meredith@gmail.com>\nKevin Woblick <mail@kovah.de>\nKir Kolyshkin <kolyshkin@gmail.com>\nKir Kolyshkin <kolyshkin@gmail.com> <kir@openvz.org>\nKir Kolyshkin <kolyshkin@gmail.com> <kolyshkin@users.noreply.github.com>\nKonrad Kleine <konrad.wilhelm.kleine@gmail.com> <kwk@users.noreply.github.com>\nKonstantin Gribov <grossws@gmail.com>\nKonstantin Pelykh <kpelykh@zettaset.com>\nKotaro Yoshimatsu <kotaro.yoshimatsu@gmail.com>\nKunal Kushwaha <kushwaha_kunal_v7@lab.ntt.co.jp> <kunal.kushwaha@gmail.com>\nKyle Mitofsky <Kylemit@gmail.com>\nLajos Papp <lajos.papp@sequenceiq.com> <lalyos@yahoo.com>\nLei Jitang <leijitang@huawei.com>\nLei Jitang <leijitang@huawei.com> <leijitang@gmail.com>\nLi Fu Bang <lifubang@acmcoder.com>\nLiang Mingqiang <mqliang.zju@gmail.com>\nLiang-Chi Hsieh <viirya@gmail.com>\nLiao Qingwei <liaoqingwei@huawei.com>\nLinus Heckemann <lheckemann@twig-world.com>\nLinus Heckemann <lheckemann@twig-world.com> <anonymouse2048@gmail.com>\nLokesh Mandvekar <lsm5@fedoraproject.org> <lsm5@redhat.com>\nLorenzo Fontana <lo@linux.com> <fontanalorenzo@me.com>\nLouis Opter <kalessin@kalessin.fr>\nLouis Opter <kalessin@kalessin.fr> <louis@dotcloud.com>\nLuca Favatella <luca.favatella@erlang-solutions.com> <lucafavatella@users.noreply.github.com>\nLuke Marsden <me@lukemarsden.net> <luke@digital-crocus.com>\nLyn <energylyn@zju.edu.cn>\nLynda O'Leary <lyndaoleary29@gmail.com>\nLynda O'Leary <lyndaoleary29@gmail.com> <lyndaoleary@hotmail.com>\nMa Müller <mueller-ma@users.noreply.github.com>\nMaciej Kalisz <maciej.d.kalisz@gmail.com>\nMaciej Kalisz <maciej.d.kalisz@gmail.com> <mdkalish@users.noreply.github.com>\nMadhan Raj Mookkandy <MadhanRaj.Mookkandy@microsoft.com> <madhanm@microsoft.com>\nMadhu Venugopal <madhu@socketplane.io> <madhu@docker.com>\nMageee <fangpuyi@foxmail.com> <21521230.zju.edu.cn>\nMansi Nahar <mmn4185@rit.edu> <mansi.nahar@macbookpro-mansinahar.local>\nMansi Nahar <mmn4185@rit.edu> <mansinahar@users.noreply.github.com>\nMarc Abramowitz <marc@marc-abramowitz.com> <msabramo@gmail.com>\nMarcelo Horacio Fortino <info@fortinux.com> <fortinux@users.noreply.github.com>\nMarco Spiess <marco.spiess@hotmail.de>\nMarcus Linke <marcus.linke@gmx.de>\nMarianna Tessel <mtesselh@gmail.com>\nMarius Ileana <marius.ileana@gmail.com>\nMark Oates <fl0yd@me.com>\nMarkan Patel <mpatel678@gmail.com>\nMarkus Kortlang <hyp3rdino@googlemail.com> <markus.kortlang@lhsystems.com>\nMarsh Macy <marsma@microsoft.com>\nMartin Redmond <redmond.martin@gmail.com> <martin@tinychat.com>\nMartin Redmond <redmond.martin@gmail.com> <xgithub@redmond5.com>\nMary Anthony <mary.anthony@docker.com> <mary@docker.com>\nMary Anthony <mary.anthony@docker.com> <moxieandmore@gmail.com>\nMary Anthony <mary.anthony@docker.com> moxiegirl <mary@docker.com>\nMateusz Major <apkd@users.noreply.github.com>\nMatt Bentley <matt.bentley@docker.com> <mbentley@mbentley.net>\nMatt Schurenko <matt.schurenko@gmail.com>\nMatt Williams <mattyw@me.com>\nMatt Williams <mattyw@me.com> <gh@mattyw.net>\nMatthew Heon <mheon@redhat.com> <mheon@mheonlaptop.redhat.com>\nMatthew Mosesohn <raytrac3r@gmail.com>\nMatthew Mueller <mattmuelle@gmail.com>\nMatthias Kühnle <git.nivoc@neverbox.com> <kuehnle@online.de>\nMauricio Garavaglia <mauricio@medallia.com> <mauriciogaravaglia@gmail.com>\nMichael Crosby <crosbymichael@gmail.com>\nMichael Crosby <crosbymichael@gmail.com> <crosby.michael@gmail.com>\nMichael Crosby <crosbymichael@gmail.com> <michael@crosbymichael.com>\nMichael Crosby <crosbymichael@gmail.com> <michael@docker.com>\nMichael Crosby <crosbymichael@gmail.com> <michael@thepasture.io>\nMichael Hudson-Doyle <michael.hudson@canonical.com> <michael.hudson@linaro.org>\nMichael Huettermann <michael@huettermann.net>\nMichael Käufl <docker@c.michael-kaeufl.de> <michael-k@users.noreply.github.com>\nMichael Spetsiotis <michael_spets@hotmail.com>\nMichal Minář <miminar@redhat.com>\nMiguel Angel Alvarez Cabrerizo <doncicuto@gmail.com> <30386061+doncicuto@users.noreply.github.com>\nMiguel Angel Fernández <elmendalerenda@gmail.com>\nMihai Borobocea <MihaiBorob@gmail.com> <MihaiBorobocea@gmail.com>\nMike Casas <mkcsas0@gmail.com> <mikecasas@users.noreply.github.com>\nMike Dalton <mikedalton@github.com>\nMike Dalton <mikedalton@github.com> <19153140+mikedalton@users.noreply.github.com>\nMike Goelzer <mike.goelzer@docker.com> <mgoelzer@docker.com>\nMilind Chawre <milindchawre@gmail.com>\nMisty Stanley-Jones <misty@docker.com> <misty@apache.org>\nMohit Soni <mosoni@ebay.com> <mohitsoni1989@gmail.com>\nMoorthy RS <rsmoorthy@gmail.com> <rsmoorthy@users.noreply.github.com>\nMorten Hekkvang <morten.hekkvang@sbab.se>\nMorten Hekkvang <morten.hekkvang@sbab.se> <morten.hekkvang@tele2.com>\nMoysés Borges <moysesb@gmail.com>\nMoysés Borges <moysesb@gmail.com> <moyses.furtado@wplex.com.br>\nNace Oroz <orkica@gmail.com>\nNathan LeClaire <nathan.leclaire@docker.com> <nathan.leclaire@gmail.com>\nNathan LeClaire <nathan.leclaire@docker.com> <nathanleclaire@gmail.com>\nNeil Horman <nhorman@tuxdriver.com> <nhorman@hmswarspite.think-freely.org>\nNick Russo <nicholasjamesrusso@gmail.com> <nicholasrusso@icloud.com>\nNick Santos <nick.santos@docker.com>\nNick Santos <nick.santos@docker.com> <nick@tilt.dev>\nNicolas Borboën <ponsfrilus@gmail.com> <ponsfrilus@users.noreply.github.com>\nNicolas De Loof <nicolas.deloof@gmail.com>\nNigel Poulton <nigelpoulton@hotmail.com>\nNik Nyby <nikolas@gnu.org> <nnyby@columbia.edu>\nNolan Darilek <nolan@thewordnerd.info>\nO.S. Tezer <ostezer@gmail.com>\nO.S. Tezer <ostezer@gmail.com> <ostezer@users.noreply.github.com>\nOh Jinkyun <tintypemolly@gmail.com> <tintypemolly@Ohui-MacBook-Pro.local>\nOliver Pomeroy <oppomeroy@gmail.com>\nOuyang Liduo <oyld0210@163.com>\nPatrick Stapleton <github@gdi2290.com>\nPaul Liljenberg <liljenberg.paul@gmail.com> <letters@paulnotcom.se>\nPavel Tikhomirov <ptikhomirov@virtuozzo.com> <ptikhomirov@parallels.com>\nPawel Konczalski <mail@konczalski.de>\nPaweł Pokrywka <pepawel@users.noreply.github.com>\nPer Lundberg <perlun@gmail.com>\nPer Lundberg <perlun@gmail.com> <per.lundberg@ecraft.com>\nPer Lundberg <perlun@gmail.com> <per.lundberg@hibox.tv>\nPeter Choi <phkchoi89@gmail.com> <reikani@Peters-MacBook-Pro.local>\nPeter Dave Hello <hsu@peterdavehello.org> <PeterDaveHello@users.noreply.github.com>\nPeter Hsu <shhsu@microsoft.com>\nPeter Jaffe <pjaffe@nevo.com>\nPeter Nagy <xificurC@gmail.com> <pnagy@gratex.com>\nPeter Waller <p@pwaller.net> <peter@scraperwiki.com>\nPhil Estes <estesp@gmail.com>\nPhil Estes <estesp@gmail.com> <estesp@amazon.com>\nPhil Estes <estesp@gmail.com> <estesp@linux.vnet.ibm.com>\nPhilip Alexander Etling <paetling@gmail.com>\nPhilipp Gillé <philipp.gille@gmail.com> <philippgille@users.noreply.github.com>\nQiang Huang <h.huangqiang@huawei.com>\nQiang Huang <h.huangqiang@huawei.com> <qhuang@10.0.2.15>\nRay Tsang <rayt@google.com> <saturnism@users.noreply.github.com>\nRenaud Gaubert <rgaubert@nvidia.com> <renaud.gaubert@gmail.com>\nRob Murray <rob.murray@docker.com>\nRob Murray <rob.murray@docker.com> <148866618+robmry@users.noreply.github.com>\nRobert Terhaar <rterhaar@atlanticdynamic.com> <robbyt@users.noreply.github.com>\nRoberto G. Hashioka <roberto.hashioka@docker.com> <roberto_hashioka@hotmail.com>\nRoberto Muñoz Fernández <robertomf@gmail.com> <roberto.munoz.fernandez.contractor@bbva.com>\nRoch Feuillade <roch.feuillade@pandobac.com>\nRoch Feuillade <roch.feuillade@pandobac.com> <46478807+rochfeu@users.noreply.github.com>\nRoman Dudin <katrmr@gmail.com> <decadent@users.noreply.github.com>\nRoss Boucher <rboucher@gmail.com>\nRui JingAn <quiterace@gmail.com>\nRunshen Zhu <runshen.zhu@gmail.com>\nRyan Stelly <ryan.stelly@live.com>\nSakeven Jiang <jc5930@sina.cn>\nSamarth Shah <samashah@microsoft.com>\nSandeep Bansal <sabansal@microsoft.com>\nSandeep Bansal <sabansal@microsoft.com> <msabansal@microsoft.com>\nSandro Jäckel <sandro.jaeckel@gmail.com>\nSargun Dhillon <sargun@netflix.com> <sargun@sargun.me>\nSaurabh Kumar <saurabhkumar0184@gmail.com>\nSean Lee <seanlee@tw.ibm.com> <scaleoutsean@users.noreply.github.com>\nSebastiaan van Stijn <github@gone.nl> <sebastiaan@ws-key-sebas3.dpi1.dpi>\nSebastiaan van Stijn <github@gone.nl> <thaJeztah@users.noreply.github.com>\nShaun Kaasten <shaunk@gmail.com>\nShawn Landden <shawn@churchofgit.com> <shawnlandden@gmail.com>\nShengbo Song <thomassong@tencent.com>\nShengbo Song <thomassong@tencent.com> <mymneo@163.com>\nShih-Yuan Lee <fourdollars@gmail.com>\nShishir Mahajan <shishir.mahajan@redhat.com> <smahajan@redhat.com>\nShukui Yang <yangshukui@huawei.com>\nShuwei Hao <haosw@cn.ibm.com>\nShuwei Hao <haosw@cn.ibm.com> <haoshuwei24@gmail.com>\nSidhartha Mani <sidharthamn@gmail.com>\nSilvin Lubecki <silvin.lubecki@docker.com>\nSilvin Lubecki <silvin.lubecki@docker.com> <31478878+silvin-lubecki@users.noreply.github.com>\nSjoerd Langkemper <sjoerd-github@linuxonly.nl> <sjoerd@byte.nl>\nSolomon Hykes <solomon@docker.com> <s@docker.com>\nSolomon Hykes <solomon@docker.com> <solomon.hykes@dotcloud.com>\nSolomon Hykes <solomon@docker.com> <solomon@dotcloud.com>\nSoshi Katsuta <soshi.katsuta@gmail.com>\nSoshi Katsuta <soshi.katsuta@gmail.com> <katsuta_soshi@cyberagent.co.jp>\nSpring Lee <xi.shuai@outlook.com>\nSridhar Ratnakumar <sridharr@activestate.com>\nSridhar Ratnakumar <sridharr@activestate.com> <github@srid.name>\nSrini Brahmaroutu <srbrahma@us.ibm.com> <sbrahma@us.ibm.com>\nSrinivasan Srivatsan <srinivasan.srivatsan@hpe.com> <srinsriv@users.noreply.github.com>\nStefan Berger <stefanb@linux.vnet.ibm.com>\nStefan Berger <stefanb@linux.vnet.ibm.com> <stefanb@us.ibm.com>\nStefan J. Wernli <swernli@microsoft.com> <swernli@ntdev.microsoft.com>\nStefan S. <tronicum@user.github.com>\nStefan Scherer <stefan.scherer@docker.com>\nStefan Scherer <stefan.scherer@docker.com> <scherer_stefan@icloud.com>\nStephen Day <stevvooe@gmail.com>\nStephen Day <stevvooe@gmail.com> <stephen.day@docker.com>\nStephen Day <stevvooe@gmail.com> <stevvooe@users.noreply.github.com>\nSteve Desmond <steve@vtsv.ca> <stevedesmond-ca@users.noreply.github.com>\nSteve Richards <steve.richards@docker.com> stevejr <>\nSun Gengze <690388648@qq.com>\nSun Jianbo <wonderflow.sun@gmail.com>\nSun Jianbo <wonderflow.sun@gmail.com> <wonderflow@zju.edu.cn>\nSunny Gogoi <indiasuny000@gmail.com>\nSunny Gogoi <indiasuny000@gmail.com> <me@darkowlzz.space>\nSven Dowideit <SvenDowideit@home.org.au>\nSven Dowideit <SvenDowideit@home.org.au> <sven@t440s.home.gateway>\nSven Dowideit <SvenDowideit@home.org.au> <SvenDowideit@docker.com>\nSven Dowideit <SvenDowideit@home.org.au> <SvenDowideit@fosiki.com>\nSven Dowideit <SvenDowideit@home.org.au> <SvenDowideit@home.org.au>\nSven Dowideit <SvenDowideit@home.org.au> <SvenDowideit@users.noreply.github.com>\nSven Dowideit <SvenDowideit@home.org.au> <¨SvenDowideit@home.org.au¨>\nSylvain Bellemare <sylvain@ascribe.io>\nSylvain Bellemare <sylvain@ascribe.io> <sylvain.bellemare@ezeep.com>\nTakeshi Koenuma <t.koenuma2@gmail.com>\nTangi Colin <tangicolin@gmail.com>\nTeiva Harsanyi <t.harsanyi@thebeat.co>\nTejesh Mehta <tejesh.mehta@gmail.com> <tj@init.me>\nTeppei Fukuda <knqyf263@gmail.com>\nThatcher Peskens <thatcher@docker.com>\nThatcher Peskens <thatcher@docker.com> <thatcher@dotcloud.com>\nThatcher Peskens <thatcher@docker.com> <thatcher@gmx.net>\nThomas Gazagnaire <thomas@gazagnaire.org> <thomas@gazagnaire.com>\nThomas Krzero <thomas.kovatchitch@gmail.com>\nThomas Léveil <thomasleveil@gmail.com>\nThomas Léveil <thomasleveil@gmail.com> <thomasleveil@users.noreply.github.com>\nThomas Riccardi <thomas@deepomatic.com>\nThomas Riccardi <thomas@deepomatic.com> <riccardi@systran.fr>\nTibor Vass <teabee89@gmail.com> <tibor@docker.com>\nTibor Vass <teabee89@gmail.com> <tiborvass@users.noreply.github.com>\nTim Bart <tim@fewagainstmany.com>\nTim Bosse <taim@bosboot.org> <maztaim@users.noreply.github.com>\nTim Ruffles <oi@truffles.me.uk> <timruffles@googlemail.com>\nTim Terhorst <mynamewastaken+git@gmail.com>\nTim Welsh <timothy.welsh@docker.com>\nTim Welsh <timothy.welsh@docker.com> <84401379+twelsh-aw@users.noreply.github.com>\nTim Zju <21651152@zju.edu.cn>\nTimothy Hobbs <timothyhobbs@seznam.cz>\nToli Kuznets <toli@docker.com>\nTom Barlow <tomwbarlow@gmail.com>\nTom Milligan <code@tommilligan.net>\nTom Milligan <code@tommilligan.net> <tommilligan@users.noreply.github.com>\nTom Sweeney <tsweeney@redhat.com>\nTomas Bäckman <larstomas@gmail.com>\nTomas Bäckman <larstomas@gmail.com> <11527327+larstomas@users.noreply.github.com>\nTõnis Tiigi <tonistiigi@gmail.com>\nTrishna Guha <trishnaguha17@gmail.com>\nTristan Carel <tristan@cogniteev.com>\nTristan Carel <tristan@cogniteev.com> <tristan.carel@gmail.com>\nUlrich Bareth <ulrich.bareth@gmail.com>\nUlrich Bareth <ulrich.bareth@gmail.com> <usb79@users.noreply.github.com>\nUlysses Souza <ulysses.souza@docker.com>\nUlysses Souza <ulysses.souza@docker.com> <ulyssessouza@gmail.com>\nUmesh Yadav <umesh4257@gmail.com>\nUmesh Yadav <umesh4257@gmail.com> <dungeonmaster18@users.noreply.github.com>\nVictor Lyuboslavsky <victor@victoreda.com>\nVictor Vieux <victor.vieux@docker.com> <dev@vvieux.com>\nVictor Vieux <victor.vieux@docker.com> <victor.vieux@dotcloud.com>\nVictor Vieux <victor.vieux@docker.com> <victor@docker.com>\nVictor Vieux <victor.vieux@docker.com> <victor@dotcloud.com>\nVictor Vieux <victor.vieux@docker.com> <victorvieux@gmail.com>\nVictor Vieux <victor.vieux@docker.com> <vieux@docker.com>\nViktor Vojnovski <viktor.vojnovski@amadeus.com> <vojnovski@gmail.com>\nVincent Batts <vbatts@redhat.com> <vbatts@hashbangbash.com>\nVincent Bernat <Vincent.Bernat@exoscale.ch> <bernat@luffy.cx>\nVincent Bernat <Vincent.Bernat@exoscale.ch> <vincent@bernat.im>\nVincent Demeester <vincent.demeester@docker.com> <vincent+github@demeester.fr>\nVincent Demeester <vincent.demeester@docker.com> <vincent@demeester.fr>\nVincent Demeester <vincent.demeester@docker.com> <vincent@sbr.pm>\nVishnu Kannan <vishnuk@google.com>\nVladimir Rutsky <altsysrq@gmail.com> <iamironbob@gmail.com>\nWalter Stanish <walter@pratyeka.org>\nWang Guoliang <liangcszzu@163.com>\nWang Jie <wangjie5@chinaskycloud.com>\nWang Lei <wanglei@tenxcloud.com>\nWang Ping <present.wp@icloud.com>\nWang Xing <hzwangxing@corp.netease.com> <root@localhost>\nWang Yuexiao <wang.yuexiao@zte.com.cn>\nWayne Chang <wayne@neverfear.org>\nWayne Song <wsong@docker.com> <wsong@users.noreply.github.com>\nWei Wu <wuwei4455@gmail.com> cizixs <cizixs@163.com>\nWenjun Tang <tangwj2@lenovo.com> <dodia@163.com>\nWewang Xiaorenfine <wang.xiaoren@zte.com.cn>\nWill Weaver <monkey@buildingbananas.com>\nXianglin Gao <xlgao@zju.edu.cn>\nXianlu Bird <xianlubird@gmail.com>\nXiaoyu Zhang <zhang.xiaoyu33@zte.com.cn>\nXuecong Liao <satorulogic@gmail.com>\nYamasaki Masahide <masahide.y@gmail.com>\nYao Zaiyong <yaozaiyong@hotmail.com>\nYassine Tijani <yasstij11@gmail.com>\nYazhong Liu <yorkiefixer@gmail.com>\nYestin Sun <sunyi0804@gmail.com> <yestin.sun@polyera.com>\nYi EungJun <eungjun.yi@navercorp.com> <semtlenori@gmail.com>\nYing Li <ying.li@docker.com>\nYing Li <ying.li@docker.com> <cyli@twistedmatrix.com>\nYong Tang <yong.tang.github@outlook.com> <yongtang@users.noreply.github.com>\nYosef Fertel <yfertel@gmail.com> <frosforever@users.noreply.github.com>\nYu Changchun <yuchangchun1@huawei.com>\nYu Chengxia <yuchengxia@huawei.com>\nYu Peng <yu.peng36@zte.com.cn>\nYu Peng <yu.peng36@zte.com.cn> <yupeng36@zte.com.cn>\nYue Zhang <zy675793960@yeah.net>\nZachary Jaffee <zjaffee@us.ibm.com> <zij@case.edu>\nZachary Jaffee <zjaffee@us.ibm.com> <zjaffee@apache.org>\nZhangHang <stevezhang2014@gmail.com>\nZhenkun Bi <bi.zhenkun@zte.com.cn>\nZhou Hao <zhouhao@cn.fujitsu.com>\nZhoulin Xie <zhoulin.xie@daocloud.io>\nZhu Kunjia <zhu.kunjia@zte.com.cn>\nZou Yu <zouyu7@huawei.com>\nАлександр Менщиков <__Singleton__@hackerdom.ru>\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 34.0322265625,
          "content": "# File @generated by scripts/docs/generate-authors.sh. DO NOT EDIT.\n# This file lists all contributors to the repository.\n# See scripts/docs/generate-authors.sh to make modifications.\n\nA. Lester Buck III <github-reg@nbolt.com>\nAanand Prasad <aanand.prasad@gmail.com>\nAaron L. Xu <liker.xu@foxmail.com>\nAaron Lehmann <alehmann@netflix.com>\nAaron.L.Xu <likexu@harmonycloud.cn>\nAbdur Rehman <abdur_rehman@mentor.com>\nAbhinandan Prativadi <abhi@docker.com>\nAbin Shahab <ashahab@altiscale.com>\nAbreto FU <public@abreto.email>\nAce Tang <aceapril@126.com>\nAddam Hardy <addam.hardy@gmail.com>\nAdolfo Ochagavía <aochagavia92@gmail.com>\nAdrian Plata <adrian.plata@docker.com>\nAdrien Duermael <adrien@duermael.com>\nAdrien Folie <folie.adrien@gmail.com>\nAdyanth Hosavalike <ahosavalike@ucsd.edu>\nAhmet Alp Balkan <ahmetb@microsoft.com>\nAidan Feldman <aidan.feldman@gmail.com>\nAidan Hobson Sayers <aidanhs@cantab.net>\nAJ Bowen <aj@soulshake.net>\nAkhil Mohan <akhil.mohan@mayadata.io>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp>\nAkim Demaille <akim.demaille@docker.com>\nAlan Thompson <cloojure@gmail.com>\nAlano Terblanche <alano.terblanche@docker.com>\nAlbert Callarisa <shark234@gmail.com>\nAlberto Roura <mail@albertoroura.com>\nAlbin Kerouanton <albinker@gmail.com>\nAleksa Sarai <asarai@suse.de>\nAleksander Piotrowski <apiotrowski312@gmail.com>\nAlessandro Boch <aboch@tetrationanalytics.com>\nAlex Couture-Beil <alex@earthly.dev>\nAlex Mavrogiannis <alex.mavrogiannis@docker.com>\nAlex Mayer <amayer5125@gmail.com>\nAlexander Boyd <alex@opengroove.org>\nAlexander Chneerov <achneerov@gmail.com>\nAlexander Larsson <alexl@redhat.com>\nAlexander Morozov <lk4d4math@gmail.com>\nAlexander Ryabov <i@sepa.spb.ru>\nAlexandre González <agonzalezro@gmail.com>\nAlexey Igrychev <alexey.igrychev@flant.com>\nAlexis Couvreur <alexiscouvreur.pro@gmail.com>\nAlfred Landrum <alfred.landrum@docker.com>\nAli Rostami <rostami.ali@gmail.com>\nAlicia Lauerman <alicia@eta.im>\nAllen Sun <allensun.shl@alibaba-inc.com>\nAlvin Deng <alvin.q.deng@utexas.edu>\nAmen Belayneh <amenbelayneh@gmail.com>\nAmey Shrivastava <72866602+AmeyShrivastava@users.noreply.github.com>\nAmir Goldstein <amir73il@aquasec.com>\nAmit Krishnan <amit.krishnan@oracle.com>\nAmit Shukla <amit.shukla@docker.com>\nAmy Lindburg <amy.lindburg@docker.com>\nAnca Iordache <anca.iordache@docker.com>\nAnda Xu <anda.xu@docker.com>\nAndrea Luzzardi <aluzzardi@gmail.com>\nAndreas Köhler <andi5.py@gmx.net>\nAndres G. Aragoneses <knocte@gmail.com>\nAndres Leon Rangel <aleon1220@gmail.com>\nAndrew France <andrew@avito.co.uk>\nAndrew Hsu <andrewhsu@docker.com>\nAndrew Macpherson <hopscotch23@gmail.com>\nAndrew McDonnell <bugs@andrewmcdonnell.net>\nAndrew Po <absourd.noise@gmail.com>\nAndrew-Zipperer <atzipperer@gmail.com>\nAndrey Petrov <andrey.petrov@shazow.net>\nAndrii Berehuliak <berkusandrew@gmail.com>\nAndré Martins <aanm90@gmail.com>\nAndy Goldstein <agoldste@redhat.com>\nAndy Rothfusz <github@developersupport.net>\nAnil Madhavapeddy <anil@recoil.org>\nAnkush Agarwal <ankushagarwal11@gmail.com>\nAnne Henmi <anne.henmi@docker.com>\nAnton Polonskiy <anton.polonskiy@gmail.com>\nAntonio Murdaca <antonio.murdaca@gmail.com>\nAntonis Kalipetis <akalipetis@gmail.com>\nAnusha Ragunathan <anusha.ragunathan@docker.com>\nAo Li <la9249@163.com>\nArash Deshmeh <adeshmeh@ca.ibm.com>\nArko Dasgupta <arko@tetrate.io>\nArnaud Porterie <icecrime@gmail.com>\nArnaud Rebillout <elboulangero@gmail.com>\nArthur Peka <arthur.peka@outlook.com>\nAshly Mathew <ashly.mathew@sap.com>\nAshwini Oruganti <ashwini.oruganti@gmail.com>\nAslam Ahemad <aslamahemad@gmail.com>\nAzat Khuyiyakhmetov <shadow_uz@mail.ru>\nBardia Keyoumarsi <bkeyouma@ucsc.edu>\nBarnaby Gray <barnaby@pickle.me.uk>\nBastiaan Bakker <bbakker@xebia.com>\nBastianHofmann <bastianhofmann@me.com>\nBen Bodenmiller <bbodenmiller@gmail.com>\nBen Bonnefoy <frenchben@docker.com>\nBen Creasy <ben@bencreasy.com>\nBen Firshman <ben@firshman.co.uk>\nBenjamin Boudreau <boudreau.benjamin@gmail.com>\nBenjamin Böhmke <benjamin@boehmke.net>\nBenjamin Nater <me@bn4t.me>\nBenoit Sigoure <tsunanet@gmail.com>\nBhumika Bayani <bhumikabayani@gmail.com>\nBill Wang <ozbillwang@gmail.com>\nBin Liu <liubin0329@gmail.com>\nBingshen Wang <bingshen.wbs@alibaba-inc.com>\nBishal Das <bishalhnj127@gmail.com>\nBjorn Neergaard <bjorn.neergaard@docker.com>\nBoaz Shuster <ripcurld.github@gmail.com>\nBoban Acimovic <boban.acimovic@gmail.com>\nBogdan Anton <contact@bogdananton.ro>\nBoris Pruessmann <boris@pruessmann.org>\nBrad Baker <brad@brad.fi>\nBradley Cicenas <bradley.cicenas@gmail.com>\nBrandon Mitchell <git@bmitch.net>\nBrandon Philips <brandon.philips@coreos.com>\nBrent Salisbury <brent.salisbury@docker.com>\nBret Fisher <bret@bretfisher.com>\nBrian (bex) Exelbierd <bexelbie@redhat.com>\nBrian Goff <cpuguy83@gmail.com>\nBrian Tracy <brian.tracy33@gmail.com>\nBrian Wieder <brian@4wieders.com>\nBruno Sousa <bruno.sousa@docker.com>\nBryan Bess <squarejaw@bsbess.com>\nBryan Boreham <bjboreham@gmail.com>\nBryan Murphy <bmurphy1976@gmail.com>\nbryfry <bryon.fryer@gmail.com>\nCalvin Liu <flycalvin@qq.com>\nCameron Spear <cameronspear@gmail.com>\nCao Weiwei <cao.weiwei30@zte.com.cn>\nCarlo Mion <mion00@gmail.com>\nCarlos Alexandro Becker <caarlos0@gmail.com>\nCarlos de Paula <me@carlosedp.com>\nCasey Korver <casey@korver.dev>\nCe Gao <ce.gao@outlook.com>\nCedric Davies <cedricda@microsoft.com>\nCezar Sa Espinola <cezarsa@gmail.com>\nChad Faragher <wyckster@hotmail.com>\nChao Wang <wangchao.fnst@cn.fujitsu.com>\nCharles Chan <charleswhchan@users.noreply.github.com>\nCharles Law <claw@conduce.com>\nCharles Smith <charles.smith@docker.com>\nCharlie Drage <charlie@charliedrage.com>\nCharlotte Mach <charlotte.mach@fs.lmu.de>\nChaYoung You <yousbe@gmail.com>\nChee Hau Lim <cheehau.lim@mobimeo.com>\nChen Chuanliang <chen.chuanliang@zte.com.cn>\nChen Hanxiao <chenhanxiao@cn.fujitsu.com>\nChen Mingjie <chenmingjie0828@163.com>\nChen Qiu <cheney-90@hotmail.com>\nChris Chinchilla <chris@chrischinchilla.com>\nChris Couzens <ccouzens@gmail.com>\nChris Gavin <chris@chrisgavin.me>\nChris Gibson <chris@chrisg.io>\nChris McKinnel <chrismckinnel@gmail.com>\nChris Snow <chsnow123@gmail.com>\nChris Vermilion <christopher.vermilion@gmail.com>\nChris Weyl <cweyl@alumni.drew.edu>\nChristian Persson <saser@live.se>\nChristian Stefanescu <st.chris@gmail.com>\nChristophe Robin <crobin@nekoo.com>\nChristophe Vidal <kriss@krizalys.com>\nChristopher Biscardi <biscarch@sketcht.com>\nChristopher Crone <christopher.crone@docker.com>\nChristopher Jones <tophj@linux.vnet.ibm.com>\nChristopher Petito <47751006+krissetto@users.noreply.github.com>\nChristopher Petito <chrisjpetito@gmail.com>\nChristopher Svensson <stoffus@stoffus.com>\nChristy Norman <christy@linux.vnet.ibm.com>\nChun Chen <ramichen@tencent.com>\nClinton Kitson <clintonskitson@gmail.com>\nCoenraad Loubser <coenraad@wish.org.za>\nColin Hebert <hebert.colin@gmail.com>\nCollin Guarino <collin.guarino@gmail.com>\nColm Hally <colmhally@gmail.com>\nComical Derskeal <27731088+derskeal@users.noreply.github.com>\nConner Crosby <conner@cavcrosby.tech>\nCorey Farrell <git@cfware.com>\nCorey Quon <corey.quon@docker.com>\nCory Bennet <cbennett@netflix.com>\nCory Snider <csnider@mirantis.com>\nCraig Osterhout <craig.osterhout@docker.com>\nCraig Wilhite <crwilhit@microsoft.com>\nCristian Staretu <cristian.staretu@gmail.com>\nDaehyeok Mun <daehyeok@gmail.com>\nDafydd Crosby <dtcrsby@gmail.com>\nDaisuke Ito <itodaisuke00@gmail.com>\ndalanlan <dalanlan925@gmail.com>\nDamien Nadé <github@livna.org>\nDan Cotora <dan@bluevision.ro>\nDanial Gharib <danial.mail.gh@gmail.com>\nDaniel Artine <daniel.artine@ufrj.br>\nDaniel Cassidy <mail@danielcassidy.me.uk>\nDaniel Dao <dqminh@cloudflare.com>\nDaniel Farrell <dfarrell@redhat.com>\nDaniel Gasienica <daniel@gasienica.ch>\nDaniel Goosen <daniel.goosen@surveysampling.com>\nDaniel Helfand <dhelfand@redhat.com>\nDaniel Hiltgen <daniel.hiltgen@docker.com>\nDaniel J Walsh <dwalsh@redhat.com>\nDaniel Nephin <dnephin@docker.com>\nDaniel Norberg <dano@spotify.com>\nDaniel Watkins <daniel@daniel-watkins.co.uk>\nDaniel Zhang <jmzwcn@gmail.com>\nDaniil Nikolenko <qoo2p5@gmail.com>\nDanny Berger <dpb587@gmail.com>\nDarren Shepherd <darren.s.shepherd@gmail.com>\nDarren Stahl <darst@microsoft.com>\nDattatraya Kumbhar <dattatraya.kumbhar@gslab.com>\nDave Goodchild <buddhamagnet@gmail.com>\nDave Henderson <dhenderson@gmail.com>\nDave Tucker <dt@docker.com>\nDavid Alvarez <david.alvarez@flyeralarm.com>\nDavid Beitey <david@davidjb.com>\nDavid Calavera <david.calavera@gmail.com>\nDavid Cramer <davcrame@cisco.com>\nDavid Dooling <dooling@gmail.com>\nDavid Gageot <david@gageot.net>\nDavid Karlsson <david.karlsson@docker.com>\nDavid le Blanc <systemmonkey42@users.noreply.github.com>\nDavid Lechner <david@lechnology.com>\nDavid Scott <dave@recoil.org>\nDavid Sheets <dsheets@docker.com>\nDavid Williamson <david.williamson@docker.com>\nDavid Xia <dxia@spotify.com>\nDavid Young <yangboh@cn.ibm.com>\nDeng Guangxing <dengguangxing@huawei.com>\nDenis Defreyne <denis@soundcloud.com>\nDenis Gladkikh <denis@gladkikh.email>\nDenis Ollier <larchunix@users.noreply.github.com>\nDennis Docter <dennis@d23.nl>\ndependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\nDerek McGowan <derek@mcg.dev>\nDes Preston <despreston@gmail.com>\nDeshi Xiao <dxiao@redhat.com>\nDharmit Shah <shahdharmit@gmail.com>\nDhawal Yogesh Bhanushali <dbhanushali@vmware.com>\nDieter Reuter <dieter.reuter@me.com>\nDima Stopel <dima@twistlock.com>\nDimitry Andric <d.andric@activevideo.com>\nDing Fei <dingfei@stars.org.cn>\nDiogo Monica <diogo@docker.com>\nDjordje Lukic <djordje.lukic@docker.com>\nDmitriy Fishman <fishman.code@gmail.com>\nDmitry Gusev <dmitry.gusev@gmail.com>\nDmitry Smirnov <onlyjob@member.fsf.org>\nDmitry V. Krivenok <krivenok.dmitry@gmail.com>\nDominik Braun <dominik.braun@nbsp.de>\nDon Kjer <don.kjer@gmail.com>\nDong Chen <dongluo.chen@docker.com>\nDongGeon Lee <secmatth1996@gmail.com>\nDoug Davis <dug@us.ibm.com>\nDrew Erny <derny@mirantis.com>\nEd Costello <epc@epcostello.com>\nEd Morley <501702+edmorley@users.noreply.github.com>\nElango Sivanandam <elango.siva@docker.com>\nEli Uriegas <eli.uriegas@docker.com>\nEli Uriegas <seemethere101@gmail.com>\nElias Faxö <elias.faxo@tre.se>\nElliot Luo <956941328@qq.com>\nEric Bode <eric.bode@foundries.io>\nEric Curtin <ericcurtin17@gmail.com>\nEric Engestrom <eric@engestrom.ch>\nEric G. Noriega <enoriega@vizuri.com>\nEric Rosenberg <ehaydenr@gmail.com>\nEric Sage <eric.david.sage@gmail.com>\nEric-Olivier Lamey <eo@lamey.me>\nErica Windisch <erica@windisch.us>\nErik Hollensbe <github@hollensbe.org>\nErik Humphrey <erik.humphrey@carleton.ca>\nErik St. Martin <alakriti@gmail.com>\nEssam A. Hassan <es.hassan187@gmail.com>\nEthan Haynes <ethanhaynes@alumni.harvard.edu>\nEuan Kemp <euank@euank.com>\nEugene Yakubovich <eugene.yakubovich@coreos.com>\nEvan Allrich <evan@unguku.com>\nEvan Hazlett <ejhazlett@gmail.com>\nEvan Krall <krall@yelp.com>\nEvan Lezar <elezar@nvidia.com>\nEvelyn Xu <evelynhsu21@gmail.com>\nEverett Toews <everett.toews@rackspace.com>\nFabio Falci <fabiofalci@gmail.com>\nFabrizio Soppelsa <fsoppelsa@mirantis.com>\nFelix Geyer <debfx@fobos.de>\nFelix Hupfeld <felix@quobyte.com>\nFelix Rabe <felix@rabe.io>\nfezzik1620 <fezzik1620@users.noreply.github.com>\nFilip Jareš <filipjares@gmail.com>\nFlavio Crisciani <flavio.crisciani@docker.com>\nFlorian Klein <florian.klein@free.fr>\nForest Johnson <fjohnson@peoplenetonline.com>\nFoysal Iqbal <foysal.iqbal.fb@gmail.com>\nFrançois Scala <francois.scala@swiss-as.com>\nFred Lifton <fred.lifton@docker.com>\nFrederic Hemberger <mail@frederic-hemberger.de>\nFrederick F. Kautz IV <fkautz@redhat.com>\nFrederik Nordahl Jul Sabroe <frederikns@gmail.com>\nFrieder Bluemle <frieder.bluemle@gmail.com>\nGabriel Gore <gabgore@cisco.com>\nGabriel Nicolas Avellaneda <avellaneda.gabriel@gmail.com>\nGabriela Georgieva <gabriela.georgieva@docker.com>\nGaetan de Villele <gdevillele@gmail.com>\nGang Qiao <qiaohai8866@gmail.com>\nGary Schaetz <gary@schaetzkc.com>\nGenki Takiuchi <genki@s21g.com>\nGeorge MacRorie <gmacr31@gmail.com>\nGeorge Margaritis <gmargaritis@protonmail.com>\nGeorge Xie <georgexsh@gmail.com>\nGianluca Borello <g.borello@gmail.com>\nGildas Cuisinier <gildas.cuisinier@gcuisinier.net>\nGio d'Amelio <giodamelio@gmail.com>\nGleb Stsenov <gleb.stsenov@gmail.com>\nGoksu Toprak <goksu.toprak@docker.com>\nGou Rao <gou@portworx.com>\nGovind Rai <raigovind93@gmail.com>\nGrace Choi <grace.54109@gmail.com>\nGraeme Wiebe <graeme.wiebe@gmail.com>\nGrant Reaber <grant.reaber@gmail.com>\nGreg Pflaum <gpflaum@users.noreply.github.com>\nGsealy <jiaojingwei1001@hotmail.com>\nGuilhem Lettron <guilhem+github@lettron.fr>\nGuillaume J. Charmes <guillaume.charmes@docker.com>\nGuillaume Le Floch <glfloch@gmail.com>\nGuillaume Tardif <guillaume.tardif@gmail.com>\ngwx296173 <gaojing3@huawei.com>\nGünther Jungbluth <gunther@gameslabs.net>\nHakan Özler <hakan.ozler@kodcu.com>\nHao Zhang <21521210@zju.edu.cn>\nHarald Albers <github@albersweb.de>\nHarold Cooper <hrldcpr@gmail.com>\nHarry Zhang <harryz@hyper.sh>\nHe Simei <hesimei@zju.edu.cn>\nHector S <hfsam88@gmail.com>\nHelen Xie <chenjg@harmonycloud.cn>\nHenning Sprang <henning.sprang@gmail.com>\nHenry N <henrynmail-github@yahoo.de>\nHernan Garcia <hernandanielg@gmail.com>\nHongbin Lu <hongbin034@gmail.com>\nHu Keping <hukeping@huawei.com>\nHuayi Zhang <irachex@gmail.com>\nHugo Chastel <Hugo-C@users.noreply.github.com>\nHugo Gabriel Eyherabide <hugogabriel.eyherabide@gmail.com>\nhuqun <huqun@zju.edu.cn>\nHuu Nguyen <huu@prismskylabs.com>\nHyzhou Zhy <hyzhou.zhy@alibaba-inc.com>\nIain Samuel McLean Elder <iain@isme.es>\nIan Campbell <ian.campbell@docker.com>\nIan Philpot <ian.philpot@microsoft.com>\nIgnacio Capurro <icapurrofagian@gmail.com>\nIlya Dmitrichenko <errordeveloper@gmail.com>\nIlya Khlopotov <ilya.khlopotov@gmail.com>\nIlya Sotkov <ilya@sotkov.com>\nIoan Eugen Stan <eu@ieugen.ro>\nIsabel Jimenez <contact.isabeljimenez@gmail.com>\nIvan Grcic <igrcic@gmail.com>\nIvan Grund <ivan.grund@gmail.com>\nIvan Markin <sw@nogoegst.net>\nJacob Atzen <jacob@jacobatzen.dk>\nJacob Tomlinson <jacob@tom.linson.uk>\nJacopo Rigoli <rigoli.jacopo@gmail.com>\nJaivish Kothari <janonymous.codevulture@gmail.com>\nJake Lambert <jake.lambert@volusion.com>\nJake Sanders <jsand@google.com>\nJake Stokes <contactjake@developerjake.com>\nJakub Panek <me@panekj.dev>\nJames Nesbitt <james.nesbitt@wunderkraut.com>\nJames Turnbull <james@lovedthanlost.net>\nJamie Hannaford <jamie@limetree.org>\nJan Koprowski <jan.koprowski@gmail.com>\nJan Pazdziora <jpazdziora@redhat.com>\nJan-Jaap Driessen <janjaapdriessen@gmail.com>\nJana Radhakrishnan <mrjana@docker.com>\nJared Hocutt <jaredh@netapp.com>\nJasmine Hegman <jasmine@jhegman.com>\nJason Hall <jason@chainguard.dev>\nJason Heiss <jheiss@aput.net>\nJason Plum <jplum@devonit.com>\nJay Kamat <github@jgkamat.33mail.com>\nJean Lecordier <jeanlecordier@hotmail.fr>\nJean Rouge <rougej+github@gmail.com>\nJean-Christophe Sirot <jean-christophe.sirot@docker.com>\nJean-Pierre Huynh <jean-pierre.huynh@ounet.fr>\nJeff Lindsay <progrium@gmail.com>\nJeff Nickoloff <jeff.nickoloff@gmail.com>\nJeff Silberman <jsilberm@gmail.com>\nJennings Zhang <jenni_zh@protonmail.com>\nJeremy Chambers <jeremy@thehipbot.com>\nJeremy Unruh <jeremybunruh@gmail.com>\nJeremy Yallop <yallop@docker.com>\nJeroen Franse <jeroenfranse@gmail.com>\nJesse Adametz <jesseadametz@gmail.com>\nJessica Frazelle <jess@oxide.computer>\nJezeniel Zapanta <jpzapanta22@gmail.com>\nJian Zhang <zhangjian.fnst@cn.fujitsu.com>\nJie Luo <luo612@zju.edu.cn>\nJilles Oldenbeuving <ojilles@gmail.com>\nJim Chen <njucjc@gmail.com>\nJim Galasyn <jim.galasyn@docker.com>\nJim Lin <b04705003@ntu.edu.tw>\nJimmy Leger <jimmy.leger@gmail.com>\nJimmy Song <rootsongjc@gmail.com>\njimmyxian <jimmyxian2004@yahoo.com.cn>\nJintao Zhang <zhangjintao9020@gmail.com>\nJoao Fernandes <joao.fernandes@docker.com>\nJoe Abbey <joe.abbey@gmail.com>\nJoe Doliner <jdoliner@pachyderm.io>\nJoe Gordon <joe.gordon0@gmail.com>\nJoel Handwell <joelhandwell@gmail.com>\nJoey Geiger <jgeiger@gmail.com>\nJoffrey F <joffrey@docker.com>\nJohan Euphrosine <proppy@google.com>\nJohannes 'fish' Ziemke <github@freigeist.org>\nJohn Feminella <jxf@jxf.me>\nJohn Harris <john@johnharris.io>\nJohn Howard <github@lowenna.com>\nJohn Howard <howardjohn@google.com>\nJohn Laswell <john.n.laswell@gmail.com>\nJohn Maguire <jmaguire@duosecurity.com>\nJohn Mulhausen <john@docker.com>\nJohn Starks <jostarks@microsoft.com>\nJohn Stephens <johnstep@docker.com>\nJohn Tims <john.k.tims@gmail.com>\nJohn V. Martinez <jvmatl@gmail.com>\nJohn Willis <john.willis@docker.com>\nJon Johnson <jonjohnson@google.com>\nJon Zeolla <zeolla@gmail.com>\nJonatas Baldin <jonatas.baldin@gmail.com>\nJonathan A. Sternberg <jonathansternberg@gmail.com>\nJonathan Boulle <jonathanboulle@gmail.com>\nJonathan Lee <jonjohn1232009@gmail.com>\nJonathan Lomas <jonathan@floatinglomas.ca>\nJonathan McCrohan <jmccrohan@gmail.com>\nJonathan Warriss-Simmons <misterws@diogenes.ws>\nJonh Wendell <jonh.wendell@redhat.com>\nJordan Jennings <jjn2009@gmail.com>\nJorge Vallecillo <jorgevallecilloc@gmail.com>\nJose J. Escobar <53836904+jescobar-docker@users.noreply.github.com>\nJoseph Kern <jkern@semafour.net>\nJosh Bodah <jb3689@yahoo.com>\nJosh Chorlton <jchorlton@gmail.com>\nJosh Hawn <josh.hawn@docker.com>\nJosh Horwitz <horwitz@addthis.com>\nJosh Soref <jsoref@gmail.com>\nJulian <gitea+julian@ic.thejulian.uk>\nJulien Barbier <write0@gmail.com>\nJulien Kassar <github@kassisol.com>\nJulien Maitrehenry <julien.maitrehenry@me.com>\nJustas Brazauskas <brazauskasjustas@gmail.com>\nJustin Chadwell <me@jedevc.com>\nJustin Cormack <justin.cormack@docker.com>\nJustin Simonelis <justin.p.simonelis@gmail.com>\nJustyn Temme <justyntemme@gmail.com>\nJyrki Puttonen <jyrkiput@gmail.com>\nJérémie Drouet <jeremie.drouet@gmail.com>\nJérôme Petazzoni <jerome.petazzoni@docker.com>\nJörg Thalheim <joerg@higgsboson.tk>\nKai Blin <kai@samba.org>\nKai Qiang Wu (Kennan) <wkq5325@gmail.com>\nKara Alexandra <kalexandra@us.ibm.com>\nKareem Khazem <karkhaz@karkhaz.com>\nKarthik Nayak <Karthik.188@gmail.com>\nKat Samperi <kat.samperi@gmail.com>\nKathryn Spiers <kathryn@spiers.me>\nKatie McLaughlin <katie@glasnt.com>\nKe Xu <leonhartx.k@gmail.com>\nKei Ohmura <ohmura.kei@gmail.com>\nKeith Hudgins <greenman@greenman.org>\nKelton Bassingthwaite <KeltonBassingthwaite@gmail.com>\nKen Cochrane <kencochrane@gmail.com>\nKen ICHIKAWA <ichikawa.ken@jp.fujitsu.com>\nKenfe-Mickaël Laventure <mickael.laventure@gmail.com>\nKevin Alvarez <github@crazymax.dev>\nKevin Burke <kev@inburke.com>\nKevin Feyrer <kevin.feyrer@btinternet.com>\nKevin Kern <kaiwentan@harmonycloud.cn>\nKevin Kirsche <Kev.Kirsche+GitHub@gmail.com>\nKevin Meredith <kevin.m.meredith@gmail.com>\nKevin Richardson <kevin@kevinrichardson.co>\nKevin Woblick <mail@kovah.de>\nkhaled souf <khaled.souf@gmail.com>\nKim Eik <kim@heldig.org>\nKir Kolyshkin <kolyshkin@gmail.com>\nKirill A. Korinsky <kirill@korins.ky>\nKotaro Yoshimatsu <kotaro.yoshimatsu@gmail.com>\nKrasi Georgiev <krasi@vip-consult.solutions>\nKris-Mikael Krister <krismikael@protonmail.com>\nKun Zhang <zkazure@gmail.com>\nKunal Kushwaha <kushwaha_kunal_v7@lab.ntt.co.jp>\nKyle Mitofsky <Kylemit@gmail.com>\nLachlan Cooper <lachlancooper@gmail.com>\nLai Jiangshan <jiangshanlai@gmail.com>\nLars Kellogg-Stedman <lars@redhat.com>\nLaura Brehm <laurabrehm@hey.com>\nLaura Frank <ljfrank@gmail.com>\nLaurent Erignoux <lerignoux@gmail.com>\nLee Gaines <eightlimbed@gmail.com>\nLei Jitang <leijitang@huawei.com>\nLennie <github@consolejunkie.net>\nLeo Gallucci <elgalu3@gmail.com>\nLeonid Skorospelov <leosko94@gmail.com>\nLewis Daly <lewisdaly@me.com>\nLi Fu Bang <lifubang@acmcoder.com>\nLi Yi <denverdino@gmail.com>\nLi Yi <weiyuan.yl@alibaba-inc.com>\nLiang-Chi Hsieh <viirya@gmail.com>\nLihua Tang <lhtang@alauda.io>\nLily Guo <lily.guo@docker.com>\nLin Lu <doraalin@163.com>\nLinus Heckemann <lheckemann@twig-world.com>\nLiping Xue <lipingxue@gmail.com>\nLiron Levin <liron@twistlock.com>\nliwenqi <vikilwq@zju.edu.cn>\nlixiaobing10051267 <li.xiaobing1@zte.com.cn>\nLloyd Dewolf <foolswisdom@gmail.com>\nLorenzo Fontana <lo@linux.com>\nLouis Opter <kalessin@kalessin.fr>\nLuca Favatella <luca.favatella@erlang-solutions.com>\nLuca Marturana <lucamarturana@gmail.com>\nLucas Chan <lucas-github@lucaschan.com>\nLuis Henrique Mulinari <luis.mulinari@gmail.com>\nLuka Hartwig <mail@lukahartwig.de>\nLukas Heeren <lukas-heeren@hotmail.com>\nLukasz Zajaczkowski <Lukasz.Zajaczkowski@ts.fujitsu.com>\nLydell Manganti <LydellManganti@users.noreply.github.com>\nLénaïc Huard <lhuard@amadeus.com>\nMa Shimiao <mashimiao.fnst@cn.fujitsu.com>\nMabin <bin.ma@huawei.com>\nMaciej Kalisz <maciej.d.kalisz@gmail.com>\nMadhav Puri <madhav.puri@gmail.com>\nMadhu Venugopal <madhu@socketplane.io>\nMadhur Batra <madhurbatra097@gmail.com>\nMalte Janduda <mail@janduda.net>\nManjunath A Kumatagi <mkumatag@in.ibm.com>\nMansi Nahar <mmn4185@rit.edu>\nmapk0y <mapk0y@gmail.com>\nMarc Bihlmaier <marc.bihlmaier@reddoxx.com>\nMarc Cornellà <hello@mcornella.com>\nMarco Mariani <marco.mariani@alterway.fr>\nMarco Spiess <marco.spiess@hotmail.de>\nMarco Vedovati <mvedovati@suse.com>\nMarcus Martins <marcus@docker.com>\nMarianna Tessel <mtesselh@gmail.com>\nMarius Ileana <marius.ileana@gmail.com>\nMarius Meschter <marius@meschter.me>\nMarius Sturm <marius@graylog.com>\nMark Oates <fl0yd@me.com>\nMarsh Macy <marsma@microsoft.com>\nMartin Mosegaard Amdisen <martin.amdisen@praqma.com>\nMary Anthony <mary.anthony@docker.com>\nMason Fish <mason.fish@docker.com>\nMason Malone <mason.malone@gmail.com>\nMateusz Major <apkd@users.noreply.github.com>\nMathias Duedahl <64321057+Lussebullen@users.noreply.github.com>\nMathieu Champlon <mathieu.champlon@docker.com>\nMathieu Rollet <matletix@gmail.com>\nMatt Gucci <matt9ucci@gmail.com>\nMatt Robenolt <matt@ydekproductions.com>\nMatteo Orefice <matteo.orefice@bites4bits.software>\nMatthew Heon <mheon@redhat.com>\nMatthieu Hauglustaine <matt.hauglustaine@gmail.com>\nMauro Porras P <mauroporrasp@gmail.com>\nMax Shytikov <mshytikov@gmail.com>\nMax-Julian Pogner <max-julian@pogner.at>\nMaxime Petazzoni <max@signalfuse.com>\nMaximillian Fan Xavier <maximillianfx@gmail.com>\nMei ChunTao <mei.chuntao@zte.com.cn>\nMelroy van den Berg <melroy@melroy.org>\nMetal <2466052+tedhexaflow@users.noreply.github.com>\nMicah Zoltu <micah@newrelic.com>\nMichael A. Smith <michael@smith-li.com>\nMichael Bridgen <mikeb@squaremobius.net>\nMichael Crosby <crosbymichael@gmail.com>\nMichael Friis <friism@gmail.com>\nMichael Irwin <mikesir87@gmail.com>\nMichael Käufl <docker@c.michael-kaeufl.de>\nMichael Prokop <github@michael-prokop.at>\nMichael Scharf <github@scharf.gr>\nMichael Spetsiotis <michael_spets@hotmail.com>\nMichael Steinert <mike.steinert@gmail.com>\nMichael West <mwest@mdsol.com>\nMichal Minář <miminar@redhat.com>\nMichał Czeraszkiewicz <czerasz@gmail.com>\nMiguel Angel Alvarez Cabrerizo <doncicuto@gmail.com>\nMihai Borobocea <MihaiBorob@gmail.com>\nMihuleacc Sergiu <mihuleac.sergiu@gmail.com>\nMike Brown <brownwm@us.ibm.com>\nMike Casas <mkcsas0@gmail.com>\nMike Dalton <mikedalton@github.com>\nMike Danese <mikedanese@google.com>\nMike Dillon <mike@embody.org>\nMike Goelzer <mike.goelzer@docker.com>\nMike MacCana <mike.maccana@gmail.com>\nmikelinjie <294893458@qq.com>\nMikhail Vasin <vasin@cloud-tv.ru>\nMilind Chawre <milindchawre@gmail.com>\nMindaugas Rukas <momomg@gmail.com>\nMiroslav Gula <miroslav.gula@naytrolabs.com>\nMisty Stanley-Jones <misty@docker.com>\nMohammad Banikazemi <mb@us.ibm.com>\nMohammed Aaqib Ansari <maaquib@gmail.com>\nMohini Anne Dsouza <mohini3917@gmail.com>\nMoorthy RS <rsmoorthy@gmail.com>\nMorgan Bauer <mbauer@us.ibm.com>\nMorten Hekkvang <morten.hekkvang@sbab.se>\nMorten Linderud <morten@linderud.pw>\nMoysés Borges <moysesb@gmail.com>\nMozi <29089388+pzhlkj6612@users.noreply.github.com>\nMrunal Patel <mrunalp@gmail.com>\nmuicoder <muicoder@gmail.com>\nMurukesh Mohanan <murukesh.mohanan@gmail.com>\nMuthukumar R <muthur@gmail.com>\nMáximo Cuadros <mcuadros@gmail.com>\nMårten Cassel <marten.cassel@gmail.com>\nNace Oroz <orkica@gmail.com>\nNahum Shalman <nshalman@omniti.com>\nNalin Dahyabhai <nalin@redhat.com>\nNao YONASHIRO <owan.orisano@gmail.com>\nNassim 'Nass' Eddequiouaq <eddequiouaq.nassim@gmail.com>\nNatalie Parker <nparker@omnifone.com>\nNate Brennand <nate.brennand@clever.com>\nNathan Hsieh <hsieh.nathan@gmail.com>\nNathan LeClaire <nathan.leclaire@docker.com>\nNathan McCauley <nathan.mccauley@docker.com>\nNeil Peterson <neilpeterson@outlook.com>\nNick Adcock <nick.adcock@docker.com>\nNick Santos <nick.santos@docker.com>\nNick Sieger <nick@nicksieger.com>\nNico Stapelbroek <nstapelbroek@gmail.com>\nNicola Kabar <nicolaka@gmail.com>\nNicolas Borboën <ponsfrilus@gmail.com>\nNicolas De Loof <nicolas.deloof@gmail.com>\nNikhil Chawla <chawlanikhil24@gmail.com>\nNikolas Garofil <nikolas.garofil@uantwerpen.be>\nNikolay Milovanov <nmil@itransformers.net>\nNir Soffer <nsoffer@redhat.com>\nNishant Totla <nishanttotla@gmail.com>\nNIWA Hideyuki <niwa.niwa@nifty.ne.jp>\nNoah Treuhaft <noah.treuhaft@docker.com>\nO.S. Tezer <ostezer@gmail.com>\nOded Arbel <oded@geek.co.il>\nOdin Ugedal <odin@ugedal.com>\nohmystack <jun.jiang02@ele.me>\nOKA Naoya <git@okanaoya.com>\nOliver Pomeroy <oppomeroy@gmail.com>\nOlle Jonsson <olle.jonsson@gmail.com>\nOlli Janatuinen <olli.janatuinen@gmail.com>\nOscar Wieman <oscrx@icloud.com>\nOtto Kekäläinen <otto@seravo.fi>\nOvidio Mallo <ovidio.mallo@gmail.com>\nPascal Borreli <pascal@borreli.com>\nPatrick Böänziger <patrick.baenziger@bsi-software.com>\nPatrick Daigle <114765035+pdaig@users.noreply.github.com>\nPatrick Hemmer <patrick.hemmer@gmail.com>\nPatrick Lang <plang@microsoft.com>\nPaul <paul9869@gmail.com>\nPaul Kehrer <paul.l.kehrer@gmail.com>\nPaul Lietar <paul@lietar.net>\nPaul Mulders <justinkb@gmail.com>\nPaul Seyfert <pseyfert.mathphys@gmail.com>\nPaul Weaver <pauweave@cisco.com>\nPavel Pospisil <pospispa@gmail.com>\nPaweł Gronowski <pawel.gronowski@docker.com>\nPaweł Pokrywka <pepawel@users.noreply.github.com>\nPaweł Szczekutowicz <pszczekutowicz@gmail.com>\nPeeyush Gupta <gpeeyush@linux.vnet.ibm.com>\nPer Lundberg <perlun@gmail.com>\nPeter Dave Hello <hsu@peterdavehello.org>\nPeter Edge <peter.edge@gmail.com>\nPeter Hsu <shhsu@microsoft.com>\nPeter Jaffe <pjaffe@nevo.com>\nPeter Kehl <peter.kehl@gmail.com>\nPeter Nagy <xificurC@gmail.com>\nPeter Salvatore <peter@psftw.com>\nPeter Waller <p@pwaller.net>\nPhil Estes <estesp@gmail.com>\nPhilip Alexander Etling <paetling@gmail.com>\nPhilipp Gillé <philipp.gille@gmail.com>\nPhilipp Schmied <pschmied@schutzwerk.com>\nPhong Tran <tran.pho@northeastern.edu>\npidster <pid@pidster.com>\nPieter E Smit <diepes@github.com>\npixelistik <pixelistik@users.noreply.github.com>\nPratik Karki <prertik@outlook.com>\nPrayag Verma <prayag.verma@gmail.com>\nPreston Cowley <preston.cowley@sony.com>\nPure White <daniel48@126.com>\nQiang Huang <h.huangqiang@huawei.com>\nQinglan Peng <qinglanpeng@zju.edu.cn>\nQQ喵 <gqqnb2005@gmail.com>\nqudongfang <qudongfang@gmail.com>\nRaghavendra K T <raghavendra.kt@linux.vnet.ibm.com>\nRahul Kadyan <hi@znck.me>\nRahul Zoldyck <rahulzoldyck@gmail.com>\nRavi Shekhar Jethani <rsjethani@gmail.com>\nRay Tsang <rayt@google.com>\nReficul <xuzhenglun@gmail.com>\nRemy Suen <remy.suen@gmail.com>\nRenaud Gaubert <rgaubert@nvidia.com>\nRicardo N Feliciano <FelicianoTech@gmail.com>\nRich Moyse <rich@moyse.us>\nRichard Chen Zheng <58443436+rchenzheng@users.noreply.github.com>\nRichard Mathie <richard.mathie@amey.co.uk>\nRichard Scothern <richard.scothern@gmail.com>\nRick Wieman <git@rickw.nl>\nRitesh H Shukla <sritesh@vmware.com>\nRiyaz Faizullabhoy <riyaz.faizullabhoy@docker.com>\nRob Gulewich <rgulewich@netflix.com>\nRob Murray <rob.murray@docker.com>\nRobert Wallis <smilingrob@gmail.com>\nRobin Naundorf <r.naundorf@fh-muenster.de>\nRobin Speekenbrink <robin@kingsquare.nl>\nRoch Feuillade <roch.feuillade@pandobac.com>\nRodolfo Ortiz <rodolfo.ortiz@definityfirst.com>\nRogelio Canedo <rcanedo@mappy.priv>\nRohan Verma <hello@rohanverma.net>\nRoland Kammerer <roland.kammerer@linbit.com>\nRoman Dudin <katrmr@gmail.com>\nRory Hunter <roryhunter2@gmail.com>\nRoss Boucher <rboucher@gmail.com>\nRubens Figueiredo <r.figueiredo.52@gmail.com>\nRui Cao <ruicao@alauda.io>\nRui JingAn <quiterace@gmail.com>\nRyan Belgrave <rmb1993@gmail.com>\nRyan Detzel <ryan.detzel@gmail.com>\nRyan Stelly <ryan.stelly@live.com>\nRyan Wilson-Perkin <ryanwilsonperkin@gmail.com>\nRyan Zhang <ryan.zhang@docker.com>\nSainath Grandhi <sainath.grandhi@intel.com>\nSakeven Jiang <jc5930@sina.cn>\nSally O'Malley <somalley@redhat.com>\nSam Neirinck <sam@samneirinck.com>\nSam Thibault <sam.thibault@docker.com>\nSamarth Shah <samashah@microsoft.com>\nSambuddha Basu <sambuddhabasu1@gmail.com>\nSami Tabet <salph.tabet@gmail.com>\nSamuel Cochran <sj26@sj26.com>\nSamuel Karp <skarp@amazon.com>\nSandro Jäckel <sandro.jaeckel@gmail.com>\nSanthosh Manohar <santhosh@docker.com>\nSargun Dhillon <sargun@netflix.com>\nSaswat Bhattacharya <sas.saswat@gmail.com>\nSaurabh Kumar <saurabhkumar0184@gmail.com>\nScott Brenner <scott@scottbrenner.me>\nScott Collier <emailscottcollier@gmail.com>\nSean Christopherson <sean.j.christopherson@intel.com>\nSean Rodman <srodman7689@gmail.com>\nSebastiaan van Stijn <github@gone.nl>\nSergey Tryuber <Sergeant007@users.noreply.github.com>\nSerhat Gülçiçek <serhat25@gmail.com>\nSevki Hasirci <s@sevki.org>\nShaun Kaasten <shaunk@gmail.com>\nSheng Yang <sheng@yasker.org>\nShijiang Wei <mountkin@gmail.com>\nShishir Mahajan <shishir.mahajan@redhat.com>\nShoubhik Bose <sbose78@gmail.com>\nShukui Yang <yangshukui@huawei.com>\nSian Lerk Lau <kiawin@gmail.com>\nSidhartha Mani <sidharthamn@gmail.com>\nsidharthamani <sid@rancher.com>\nSilvin Lubecki <silvin.lubecki@docker.com>\nSimei He <hesimei@zju.edu.cn>\nSimon Ferquel <simon.ferquel@docker.com>\nSimon Heimberg <simon.heimberg@heimberg-ea.ch>\nSindhu S <sindhus@live.in>\nSlava Semushin <semushin@redhat.com>\nSolomon Hykes <solomon@docker.com>\nSong Gao <song@gao.io>\nSpencer Brown <spencer@spencerbrown.org>\nSpring Lee <xi.shuai@outlook.com>\nsqueegels <lmscrewy@gmail.com>\nSrini Brahmaroutu <srbrahma@us.ibm.com>\nStefan S. <tronicum@user.github.com>\nStefan Scherer <stefan.scherer@docker.com>\nStefan Weil <sw@weilnetz.de>\nStephane Jeandeaux <stephane.jeandeaux@gmail.com>\nStephen Day <stevvooe@gmail.com>\nStephen Rust <srust@blockbridge.com>\nSteve Durrheimer <s.durrheimer@gmail.com>\nSteve Richards <steve.richards@docker.com>\nSteven Burgess <steven.a.burgess@hotmail.com>\nStoica-Marcu Floris-Andrei <floris.sm@gmail.com>\nSubhajit Ghosh <isubuz.g@gmail.com>\nSun Jianbo <wonderflow.sun@gmail.com>\nSune Keller <absukl@almbrand.dk>\nSungwon Han <sungwon.han@navercorp.com>\nSunny Gogoi <indiasuny000@gmail.com>\nSven Dowideit <SvenDowideit@home.org.au>\nSylvain Baubeau <sbaubeau@redhat.com>\nSébastien HOUZÉ <cto@verylastroom.com>\nT K Sourabh <sourabhtk37@gmail.com>\nTAGOMORI Satoshi <tagomoris@gmail.com>\ntaiji-tech <csuhqg@foxmail.com>\nTakeshi Koenuma <t.koenuma2@gmail.com>\nTakuya Noguchi <takninnovationresearch@gmail.com>\nTaylor Jones <monitorjbl@gmail.com>\nTeiva Harsanyi <t.harsanyi@thebeat.co>\nTejaswini Duggaraju <naduggar@microsoft.com>\nTengfei Wang <tfwang@alauda.io>\nTeppei Fukuda <knqyf263@gmail.com>\nThatcher Peskens <thatcher@docker.com>\nThibault Coupin <thibault.coupin@gmail.com>\nThomas Gazagnaire <thomas@gazagnaire.org>\nThomas Krzero <thomas.kovatchitch@gmail.com>\nThomas Leonard <thomas.leonard@docker.com>\nThomas Léveil <thomasleveil@gmail.com>\nThomas Riccardi <thomas@deepomatic.com>\nThomas Swift <tgs242@gmail.com>\nTianon Gravi <admwiggin@gmail.com>\nTianyi Wang <capkurmagati@gmail.com>\nTibor Vass <teabee89@gmail.com>\nTim Dettrick <t.dettrick@uq.edu.au>\nTim Hockin <thockin@google.com>\nTim Sampson <tim@sampson.fi>\nTim Smith <timbot@google.com>\nTim Waugh <twaugh@redhat.com>\nTim Welsh <timothy.welsh@docker.com>\nTim Wraight <tim.wraight@tangentlabs.co.uk>\ntimfeirg <kkcocogogo@gmail.com>\nTimothy Hobbs <timothyhobbs@seznam.cz>\nTobias Bradtke <webwurst@gmail.com>\nTobias Gesellchen <tobias@gesellix.de>\nTodd Whiteman <todd.whiteman@joyent.com>\nTom Denham <tom@tomdee.co.uk>\nTom Fotherby <tom+github@peopleperhour.com>\nTom Klingenberg <tklingenberg@lastflood.net>\nTom Milligan <code@tommilligan.net>\nTom X. Tobin <tomxtobin@tomxtobin.com>\nTomas Bäckman <larstomas@gmail.com>\nTomas Tomecek <ttomecek@redhat.com>\nTomasz Kopczynski <tomek@kopczynski.net.pl>\nTomáš Hrčka <thrcka@redhat.com>\nTony Abboud <tdabboud@hotmail.com>\nTõnis Tiigi <tonistiigi@gmail.com>\nTrapier Marshall <trapier.marshall@docker.com>\nTravis Cline <travis.cline@gmail.com>\nTristan Carel <tristan@cogniteev.com>\nTycho Andersen <tycho@docker.com>\nTycho Andersen <tycho@tycho.ws>\nuhayate <uhayate.gong@daocloud.io>\nUlrich Bareth <ulrich.bareth@gmail.com>\nUlysses Souza <ulysses.souza@docker.com>\nUmesh Yadav <umesh4257@gmail.com>\nVaclav Struhar <struharv@gmail.com>\nValentin Lorentz <progval+git@progval.net>\nVardan Pogosian <vardan.pogosyan@gmail.com>\nVenkateswara Reddy Bukkasamudram <bukkasamudram@outlook.com>\nVeres Lajos <vlajos@gmail.com>\nVictor Vieux <victor.vieux@docker.com>\nVictoria Bialas <victoria.bialas@docker.com>\nViktor Stanchev <me@viktorstanchev.com>\nVille Skyttä <ville.skytta@iki.fi>\nVimal Raghubir <vraghubir0418@gmail.com>\nVincent Batts <vbatts@redhat.com>\nVincent Bernat <Vincent.Bernat@exoscale.ch>\nVincent Demeester <vincent.demeester@docker.com>\nVincent Woo <me@vincentwoo.com>\nVishnu Kannan <vishnuk@google.com>\nVivek Goyal <vgoyal@redhat.com>\nWang Jie <wangjie5@chinaskycloud.com>\nWang Lei <wanglei@tenxcloud.com>\nWang Long <long.wanglong@huawei.com>\nWang Ping <present.wp@icloud.com>\nWang Xing <hzwangxing@corp.netease.com>\nWang Yuexiao <wang.yuexiao@zte.com.cn>\nWang Yumu <37442693@qq.com>\nWataru Ishida <ishida.wataru@lab.ntt.co.jp>\nWayne Song <wsong@docker.com>\nWen Cheng Ma <wenchma@cn.ibm.com>\nWenzhi Liang <wenzhi.liang@gmail.com>\nWes Morgan <cap10morgan@gmail.com>\nWewang Xiaorenfine <wang.xiaoren@zte.com.cn>\nWilliam Henry <whenry@redhat.com>\nXianglin Gao <xlgao@zju.edu.cn>\nXiaodong Liu <liuxiaodong@loongson.cn>\nXiaodong Zhang <a4012017@sina.com>\nXiaoxi He <xxhe@alauda.io>\nXinbo Weng <xihuanbo_0521@zju.edu.cn>\nXuecong Liao <satorulogic@gmail.com>\nYan Feng <yanfeng2@huawei.com>\nYanqiang Miao <miao.yanqiang@zte.com.cn>\nYassine Tijani <yasstij11@gmail.com>\nYi EungJun <eungjun.yi@navercorp.com>\nYing Li <ying.li@docker.com>\nYong Tang <yong.tang.github@outlook.com>\nYosef Fertel <yfertel@gmail.com>\nYu Peng <yu.peng36@zte.com.cn>\nYuan Sun <sunyuan3@huawei.com>\nYucheng Wu <wyc123wyc@gmail.com>\nYue Zhang <zy675793960@yeah.net>\nYunxiang Huang <hyxqshk@vip.qq.com>\nZachary Romero <zacromero3@gmail.com>\nZander Mackie <zmackie@gmail.com>\nzebrilee <zebrilee@gmail.com>\nZeel B Patel <patel_zeel@iitgn.ac.in>\nZhang Kun <zkazure@gmail.com>\nZhang Wei <zhangwei555@huawei.com>\nZhang Wentao <zhangwentao234@huawei.com>\nZhangHang <stevezhang2014@gmail.com>\nzhenghenghuo <zhenghenghuo@zju.edu.cn>\nZhiwei Liang <zliang@akamai.com>\nZhou Hao <zhouhao@cn.fujitsu.com>\nZhoulin Xie <zhoulin.xie@daocloud.io>\nZhu Guihua <zhugh.fnst@cn.fujitsu.com>\nZhuo Zhi <h.dwwwwww@gmail.com>\nÁlex González <agonzalezro@gmail.com>\nÁlvaro Lázaro <alvaro.lazaro.g@gmail.com>\nÁtila Camurça Alves <camurca.home@gmail.com>\nАлександр Менщиков <__Singleton__@hackerdom.ru>\n徐俊杰 <paco.xu@daocloud.io>\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 16.37109375,
          "content": "# Contributing to Docker\n\nThis page contains information about reporting issues as well as some tips and\nguidelines useful to experienced open source contributors. Finally, make sure\nyou read our [community guidelines](#docker-community-guidelines) before you\nstart participating.\n\n## Topics\n\n* [Reporting Security Issues](#reporting-security-issues)\n* [Design and Cleanup Proposals](#design-and-cleanup-proposals)\n* [Reporting Issues](#reporting-other-issues)\n* [Quick Contribution Tips and Guidelines](#quick-contribution-tips-and-guidelines)\n* [Community Guidelines](#docker-community-guidelines)\n\n## Reporting security issues\n\nThe Docker maintainers take security seriously. If you discover a security\nissue, bring it to their attention right away!\n\n**DO NOT** file a public issue, instead send your report privately to\n[security@docker.com](mailto:security@docker.com).\n\nSecurity reports are greatly appreciated and we will publicly thank you for it.\nWe also like to send gifts&mdash;if you're into Docker schwag, make sure to let\nus know. We currently do not offer a paid security bounty program, but are not\nruling it out in the future.\n\n\n## Reporting other issues\n\nA great way to contribute to the project is to send a detailed report when you\nencounter an issue. We always appreciate a well-written, thorough bug report,\nand will thank you for it!\n\nCheck that [our issue database](https://github.com/docker/cli/issues)\ndoesn't already include that problem or suggestion before submitting an issue.\nIf you find a match, you can use the \"subscribe\" button to get notified on\nupdates. Do *not* leave random \"+1\" or \"I have this too\" comments, as they\nonly clutter the discussion, and don't help resolving it. However, if you\nhave ways to reproduce the issue or have additional information that may help\nresolving the issue, leave a comment.\n\nWhen reporting issues, always include:\n\n* The output of `docker version`.\n* The output of `docker info`.\n\nAlso include the steps required to reproduce the problem if possible and\napplicable. This information will help us review and fix your issue faster.\nWhen sending lengthy log-files, consider posting them as a gist (https://gist.github.com).\nDon't forget to remove sensitive data from your logfiles before posting (you can\nreplace those parts with \"REDACTED\").\n\n## Quick contribution tips and guidelines\n\nThis section gives the experienced contributor some tips and guidelines.\n\n### Pull requests are always welcome\n\nNot sure if that typo is worth a pull request? Found a bug and know how to fix\nit? Do it! We will appreciate it. Any significant improvement should be\ndocumented as [a GitHub issue](https://github.com/docker/cli/issues) before\nanybody starts working on it.\n\nWe are always thrilled to receive pull requests. We do our best to process them\nquickly. If your pull request is not accepted on the first try,\ndon't get discouraged! Our contributor's guide explains [the review process we\nuse for simple changes](https://github.com/docker/docker/blob/master/project/REVIEWING.md).\n\n### Talking to other Docker users and contributors\n\n<table class=\"tg\">\n  <col width=\"45%\">\n  <col width=\"65%\">\n  <tr>\n    <td>Forums</td>\n    <td>\n      A public forum for users to discuss questions and explore current design patterns and\n      best practices about Docker and related projects in the Docker Ecosystem. To participate,\n      just log in with your Docker Hub account on <a href=\"https://forums.docker.com\" target=\"_blank\">https://forums.docker.com</a>.\n    </td>\n  </tr>\n  <tr>\n    <td>Community Slack</td>\n    <td>\n      The Docker Community has a dedicated Slack chat to discuss features and issues.  You can sign-up <a href=\"https://dockr.ly/comm-slack\" target=\"_blank\">with this link</a>.\n    </td>\n  </tr>\n  <tr>\n    <td>Twitter</td>\n    <td>\n      You can follow <a href=\"https://twitter.com/docker/\" target=\"_blank\">Docker's Twitter feed</a>\n      to get updates on our products. You can also tweet us questions or just\n      share blogs or stories.\n    </td>\n  </tr>\n  <tr>\n    <td>Stack Overflow</td>\n    <td>\n      Stack Overflow has over 17000 Docker questions listed. We regularly\n      monitor <a href=\"https://stackoverflow.com/search?tab=newest&q=docker\" target=\"_blank\">Docker questions</a>\n      and so do many other knowledgeable Docker users.\n    </td>\n  </tr>\n</table>\n\n\n### Conventions\n\nFork the repository and make changes on your fork in a feature branch:\n\n- If it's a bug fix branch, name it XXXX-something where XXXX is the number of\n    the issue. \n- If it's a feature branch, create an enhancement issue to announce\n    your intentions, and name it XXXX-something where XXXX is the number of the\n    issue.\n\nSubmit unit tests for your changes. Go has a great test framework built in; use\nit! Take a look at existing tests for inspiration. [Run the full test\nsuite](README.md) on your branch before\nsubmitting a pull request.\n\nUpdate the documentation when creating or modifying features. Test your\ndocumentation changes for clarity, concision, and correctness, as well as a\nclean documentation build. See our contributors guide for [our style\nguide](https://docs.docker.com/contribute/style/grammar/) and instructions on [building\nthe documentation](https://docs.docker.com/contribute/).\n\nWrite clean code. Universally formatted code promotes ease of writing, reading,\nand maintenance. Always run `gofmt -s -w file.go` on each changed file before\ncommitting your changes. Most editors have plug-ins that do this automatically.\n\nPull request descriptions should be as clear as possible and include a reference\nto all the issues that they address.\n\nCommit messages must be written in the imperative mood (max. 72 chars), followed\nby an optional, more detailed explanatory text usually expanding on\nwhy the work is necessary. The explanatory text should be separated by an\nempty line.\n\nThe commit message *could* have a prefix scoping the change, however this is\nnot enforced. Common prefixes are `docs: <message>`, `vendor: <message>`,\n`chore: <message>` or the package/area related to the change such as `pkg/foo: <message>`\nor `telemetry: <message>`.\n\nA standard commit.\n```\nFix the exploding flux capacitor\n\nA call to function A causes the flux capacitor to blow up every time\nthe sun and the moon align.\n```\n\nUsing a package as prefix.\n```\npkg/foo: prevent panic in flux capacitor\n\nCalling function A causes the flux capacitor to blow up every time\nthe sun and the moon align.\n```\n\nUpdating a specific vendored package.\n```\nvendor: github.com/docker/docker 6ac445c42bad (master, v28.0-dev)\n```\n\nFixing a broken docs link.\n```\ndocs: fix style/lint issues in deprecated.md\n```\n\nCode review comments may be added to your pull request. Discuss, then make the\nsuggested modifications and push additional commits to your feature branch. Post\na comment after pushing. New commits show up in the pull request automatically,\nbut the reviewers are notified only when you comment.\n\nPull requests must be cleanly rebased on top of master without multiple branches\nmixed into the PR.\n\n**Git tip**: If your PR no longer merges cleanly, use `rebase master` in your\nfeature branch to update your pull request rather than `merge master`.\n\nBefore you make a pull request, squash your commits into logical units of work\nusing `git rebase -i` and `git push -f`. A logical unit of work is a consistent\nset of patches that should be reviewed together: for example, upgrading the\nversion of a vendored dependency and taking advantage of its now available new\nfeature constitute two separate units of work. Implementing a new function and\ncalling it in another file constitute a single logical unit of work. The very\nhigh majority of submissions should have a single commit, so if in doubt: squash\ndown to one.\n\nAfter every commit, make sure the test suite passes. Include documentation\nchanges in the same pull request so that a revert would remove all traces of\nthe feature or fix.\n\nInclude an issue reference like `Closes #XXXX` or `Fixes #XXXX` in the pull request\ndescription that close an issue. Including references automatically closes the issue\non a merge.\n\nDo not add yourself to the `AUTHORS` file, as it is regenerated regularly\nfrom the Git history.\n\nSee the [Coding Style](#coding-style) for further guidelines.\n\n### Merge approval\n\nDocker maintainers use LGTM (Looks Good To Me) in comments on the code review to\nindicate acceptance.\n\nA change requires LGTMs from an absolute majority of the maintainers of each\ncomponent affected. For example, if a change affects `docs/` and `registry/`, it\nneeds an absolute majority from the maintainers of `docs/` AND, separately, an\nabsolute majority of the maintainers of `registry/`.\n\nFor more details, see the [MAINTAINERS](MAINTAINERS) page.\n\n### Sign your work\n\nThe sign-off is a simple line at the end of the explanation for the patch. Your\nsignature certifies that you wrote the patch or otherwise have the right to pass\nit on as an open-source patch. The rules are pretty simple: if you can certify\nthe below (from [developercertificate.org](https://developercertificate.org):\n\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n660 York Street, Suite 102,\nSan Francisco, CA 94110 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\nThen you just add a line to every git commit message:\n\n    Signed-off-by: Joe Smith <joe.smith@email.com>\n\nUse your real name (sorry, no pseudonyms or anonymous contributions.)\n\nIf you set your `user.name` and `user.email` git configs, you can sign your\ncommit automatically with `git commit -s`.\n\n### How can I become a maintainer?\n\nThe procedures for adding new maintainers are explained in the \nglobal [MAINTAINERS](https://github.com/docker/opensource/blob/master/MAINTAINERS)\nfile in the [https://github.com/docker/opensource/](https://github.com/docker/opensource/)\nrepository.\n\nDon't forget: being a maintainer is a time investment. Make sure you\nwill have time to make yourself available. You don't have to be a\nmaintainer to make a difference on the project!\n\n## Docker community guidelines\n\nWe want to keep the Docker community awesome, growing and collaborative. We need\nyour help to keep it that way. To help with this we've come up with some general\nguidelines for the community as a whole:\n\n* Be nice: Be courteous, respectful and polite to fellow community members:\n  no regional, racial, gender, or other abuse will be tolerated. We like\n  nice people way better than mean ones!\n\n* Encourage diversity and participation: Make everyone in our community feel\n  welcome, regardless of their background and the extent of their\n  contributions, and do everything possible to encourage participation in\n  our community.\n\n* Keep it legal: Basically, don't get us in trouble. Share only content that\n  you own, do not share private or sensitive information, and don't break\n  the law.\n\n* Stay on topic: Make sure that you are posting to the correct channel and\n  avoid off-topic discussions. Remember when you update an issue or respond\n  to an email you are potentially sending to a large number of people. Consider\n  this before you update. Also remember that nobody likes spam.\n\n* Don't send email to the maintainers: There's no need to send email to the\n  maintainers to ask them to investigate an issue or to take a look at a\n  pull request. Instead of sending an email, GitHub mentions should be\n  used to ping maintainers to review a pull request, a proposal or an\n  issue.\n\n### Guideline violations — 3 strikes method\n\nThe point of this section is not to find opportunities to punish people, but we\ndo need a fair way to deal with people who are making our community suck.\n\n1. First occurrence: We'll give you a friendly, but public reminder that the\n   behavior is inappropriate according to our guidelines.\n\n2. Second occurrence: We will send you a private message with a warning that\n   any additional violations will result in removal from the community.\n\n3. Third occurrence: Depending on the violation, we may need to delete or ban\n   your account.\n\n**Notes:**\n\n* Obvious spammers are banned on first occurrence. If we don't do this, we'll\n  have spam all over the place.\n\n* Violations are forgiven after 6 months of good behavior, and we won't hold a\n  grudge.\n\n* People who commit minor infractions will get some education, rather than\n  hammering them in the 3 strikes process.\n\n* The rules apply equally to everyone in the community, no matter how much\n    you've contributed.\n\n* Extreme violations of a threatening, abusive, destructive or illegal nature\n    will be addressed immediately and are not subject to 3 strikes or forgiveness.\n\n* Contact abuse@docker.com to report abuse or appeal violations. In the case of\n    appeals, we know that mistakes happen, and we'll work with you to come up with a\n    fair solution if there has been a misunderstanding.\n\n## Coding Style\n\nUnless explicitly stated, we follow all coding guidelines from the Go\ncommunity. While some of these standards may seem arbitrary, they somehow seem\nto result in a solid, consistent codebase.\n\nIt is possible that the code base does not currently comply with these\nguidelines. We are not looking for a massive PR that fixes this, since that\ngoes against the spirit of the guidelines. All new contributions should make a\nbest effort to clean up and make the code base better than they left it.\nObviously, apply your best judgement. Remember, the goal here is to make the\ncode base easier for humans to navigate and understand. Always keep that in\nmind when nudging others to comply.\n\nThe rules:\n\n1. All code should be formatted with `gofumpt` (preferred) or `gofmt -s`.\n2. All code should pass the default levels of\n   [`golint`](https://github.com/golang/lint).\n3. All code should follow the guidelines covered in [Effective Go](https://go.dev/doc/effective_go)\n   and [Go Code Review Comments](https://github.com/golang/go/wiki/CodeReviewComments).\n4. Comment the code. Tell us the why, the history and the context.\n5. Document _all_ declarations and methods, even private ones. Declare\n   expectations, caveats and anything else that may be important. If a type\n   gets exported, having the comments already there will ensure it's ready.\n6. Variable name length should be proportional to its context and no longer.\n   `noCommaALongVariableNameLikeThisIsNotMoreClearWhenASimpleCommentWouldDo`.\n   In practice, short methods will have short variable names and globals will\n   have longer names.\n7. No underscores in package names. If you need a compound name, step back,\n   and re-examine why you need a compound name. If you still think you need a\n   compound name, lose the underscore.\n8. No utils or helpers packages. If a function is not general enough to\n   warrant its own package, it has not been written generally enough to be a\n   part of a util package. Just leave it unexported and well-documented.\n9. All tests should run with `go test` and outside tooling should not be\n   required. No, we don't need another unit testing framework. Assertion\n   packages are acceptable if they provide _real_ incremental value.\n10. Even though we call these \"rules\" above, they are actually just\n    guidelines. Since you've read all the rules, you now know that.\n\nIf you are having trouble getting into the mood of idiomatic Go, we recommend\nreading through [Effective Go](https://go.dev/doc/effective_go). The\n[Go Blog](https://go.dev/blog/) is also a great resource. Drinking the\nkool-aid is a lot easier than going thirsty.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 4.8369140625,
          "content": "# syntax=docker/dockerfile:1\n\nARG BASE_VARIANT=alpine\nARG ALPINE_VERSION=3.20\nARG BASE_DEBIAN_DISTRO=bookworm\n\nARG GO_VERSION=1.23.4\nARG XX_VERSION=1.6.1\nARG GOVERSIONINFO_VERSION=v1.4.1\nARG GOTESTSUM_VERSION=v1.10.0\nARG BUILDX_VERSION=0.18.0\nARG COMPOSE_VERSION=v2.30.3\n\nFROM --platform=$BUILDPLATFORM tonistiigi/xx:${XX_VERSION} AS xx\n\nFROM --platform=$BUILDPLATFORM golang:${GO_VERSION}-alpine${ALPINE_VERSION} AS build-base-alpine\nENV GOTOOLCHAIN=local\nCOPY --link --from=xx / /\nRUN apk add --no-cache bash clang lld llvm file git\nWORKDIR /go/src/github.com/docker/cli\n\nFROM build-base-alpine AS build-alpine\nARG TARGETPLATFORM\n# gcc is installed for libgcc only\nRUN xx-apk add --no-cache musl-dev gcc\n\nFROM --platform=$BUILDPLATFORM golang:${GO_VERSION}-${BASE_DEBIAN_DISTRO} AS build-base-debian\nENV GOTOOLCHAIN=local\nCOPY --link --from=xx / /\nRUN apt-get update && apt-get install --no-install-recommends -y bash clang lld llvm file\nWORKDIR /go/src/github.com/docker/cli\n\nFROM build-base-debian AS build-debian\nARG TARGETPLATFORM\nRUN xx-apt-get install --no-install-recommends -y libc6-dev libgcc-12-dev pkgconf\n\nFROM build-base-${BASE_VARIANT} AS goversioninfo\nARG GOVERSIONINFO_VERSION\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    GOBIN=/out GO111MODULE=on CGO_ENABLED=0 go install \"github.com/josephspurrier/goversioninfo/cmd/goversioninfo@${GOVERSIONINFO_VERSION}\"\n\nFROM build-base-${BASE_VARIANT} AS gotestsum\nARG GOTESTSUM_VERSION\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    GOBIN=/out GO111MODULE=on CGO_ENABLED=0 go install \"gotest.tools/gotestsum@${GOTESTSUM_VERSION}\" \\\n    && /out/gotestsum --version\n\nFROM build-${BASE_VARIANT} AS build\n# GO_LINKMODE defines if static or dynamic binary should be produced\nARG GO_LINKMODE=static\n# GO_BUILDTAGS defines additional build tags\nARG GO_BUILDTAGS\n# GO_STRIP strips debugging symbols if set\nARG GO_STRIP\n# CGO_ENABLED manually sets if cgo is used\nARG CGO_ENABLED\n# VERSION sets the version for the produced binary\nARG VERSION\n# PACKAGER_NAME sets the company that produced the windows binary\nARG PACKAGER_NAME\nCOPY --link --from=goversioninfo /out/goversioninfo /usr/bin/goversioninfo\nRUN --mount=type=bind,target=.,ro \\\n    --mount=type=cache,target=/root/.cache \\\n    --mount=type=tmpfs,target=cli/winresources \\\n    # override the default behavior of go with xx-go\n    xx-go --wrap && \\\n    # export GOCACHE=$(go env GOCACHE)/$(xx-info)$([ -f /etc/alpine-release ] && echo \"alpine\") && \\\n    TARGET=/out ./scripts/build/binary && \\\n    xx-verify $([ \"$GO_LINKMODE\" = \"static\" ] && echo \"--static\") /out/docker\n\nFROM build-${BASE_VARIANT} AS test\nCOPY --link --from=gotestsum /out/gotestsum /usr/bin/gotestsum\nENV GO111MODULE=auto\nRUN --mount=type=bind,target=.,rw \\\n    --mount=type=cache,target=/root/.cache \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    gotestsum -- -coverprofile=/tmp/coverage.txt $(go list ./... | grep -vE '/vendor/|/e2e/')\n\nFROM scratch AS test-coverage\nCOPY --from=test /tmp/coverage.txt /coverage.txt\n\nFROM build-${BASE_VARIANT} AS build-plugins\nARG GO_LINKMODE=static\nARG GO_BUILDTAGS\nARG GO_STRIP\nARG CGO_ENABLED\nARG VERSION\nRUN --mount=ro --mount=type=cache,target=/root/.cache \\\n    xx-go --wrap && \\\n    TARGET=/out ./scripts/build/plugins e2e/cli-plugins/plugins/*\n\nFROM build-base-alpine AS e2e-base-alpine\nRUN apk add --no-cache build-base curl openssl openssh-client\n\nFROM build-base-debian AS e2e-base-debian\nRUN apt-get update && apt-get install -y build-essential curl openssl openssh-client\n\nFROM docker/buildx-bin:${BUILDX_VERSION}   AS buildx\nFROM docker/compose-bin:${COMPOSE_VERSION} AS compose\n\nFROM e2e-base-${BASE_VARIANT} AS e2e\nARG NOTARY_VERSION=v0.6.1\nADD --chmod=0755 https://github.com/theupdateframework/notary/releases/download/${NOTARY_VERSION}/notary-Linux-amd64 /usr/local/bin/notary\nCOPY --link e2e/testdata/notary/root-ca.cert /usr/share/ca-certificates/notary.cert\nRUN echo 'notary.cert' >> /etc/ca-certificates.conf && update-ca-certificates\nCOPY --link --from=gotestsum /out/gotestsum /usr/bin/gotestsum\nCOPY --link --from=build /out ./build/\nCOPY --link --from=build-plugins /out ./build/\nCOPY --link --from=buildx  /buildx         /usr/libexec/docker/cli-plugins/docker-buildx\nCOPY --link --from=compose /docker-compose /usr/libexec/docker/cli-plugins/docker-compose\nCOPY --link . .\nENV DOCKER_BUILDKIT=1\nENV PATH=/go/src/github.com/docker/cli/build:$PATH\nCMD ./scripts/test/e2e/entry\n\nFROM build-base-${BASE_VARIANT} AS dev\nCOPY --link . .\n\nFROM scratch AS plugins\nCOPY --from=build-plugins /out .\n\nFROM scratch AS bin-image-linux\nCOPY --from=build /out/docker /docker\nFROM scratch AS bin-image-darwin\nCOPY --from=build /out/docker /docker\nFROM scratch AS bin-image-windows\nCOPY --from=build /out/docker /docker.exe\n\nFROM bin-image-${TARGETOS} AS bin-image\n\nFROM scratch AS binary\nCOPY --from=build /out .\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.5126953125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        https://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   Copyright 2013-2017 Docker, Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       https://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 4.0400390625,
          "content": "# Docker maintainers file\n#\n# This file describes who runs the docker/cli project and how.\n# This is a living document - if you see something out of date or missing, speak up!\n#\n# It is structured to be consumable by both humans and programs.\n# To extract its contents programmatically, use any TOML-compliant\n# parser.\n#\n# This file is compiled into the MAINTAINERS file in docker/opensource.\n#\n[Org]\n\n\t[Org.\"Core maintainers\"]\n\n\t# The Core maintainers are the ghostbusters of the project: when there's a problem others\n\t# can't solve, they show up and fix it with bizarre devices and weaponry.\n\t# They have final say on technical implementation and coding style.\n\t# They are ultimately responsible for quality in all its forms: usability polish,\n\t# bugfixes, performance, stability, etc. When ownership  can cleanly be passed to\n\t# a subsystem, they are responsible for doing so and holding the\n\t# subsystem maintainers accountable. If ownership is unclear, they are the de facto owners.\n\n\t\tpeople = [\n\t\t\t\"albers\",\n\t\t\t\"cpuguy83\",\n\t\t\t\"rumpl\",\n\t\t\t\"silvin-lubecki\",\n\t\t\t\"stevvooe\",\n\t\t\t\"thajeztah\",\n\t\t\t\"tibor\",\n\t\t\t\"tonistiigi\",\n\t\t\t\"vdemeester\",\n\t\t\t\"vieux\",\n\t\t]\n\n\t[Org.Curators]\n\n\t# The curators help ensure that incoming issues and pull requests are properly triaged and\n\t# that our various contribution and reviewing processes are respected. With their knowledge of\n\t# the repository activity, they can also guide contributors to relevant material or\n\t# discussions.\n\t#\n\t# They are neither code nor docs reviewers, so they are never expected to merge. They can\n\t# however:\n\t# - close an issue or pull request when it's an exact duplicate\n\t# - close an issue or pull request when it's inappropriate or off-topic\n\n\t\tpeople = [\n\t\t\t\"bsousaa\",\n\t\t\t\"neersighted\",\n\t\t\t\"programmerq\",\n\t\t\t\"sam-thibault\",\n\t\t\t\"vvoland\"\n\t\t]\n\n\t[Org.Alumni]\n\n\t# This list contains maintainers that are no longer active on the project.\n\t# It is thanks to these people that the project has become what it is today.\n\t# Thank you!\n\n\t\tpeople = [\n\t\t\t# Before becoming a maintainer, Daniel Nephin was a core contributor\n \t\t\t# to \"Fig\" (now known as Docker Compose). As a maintainer for both the\n \t\t\t# Engine and Docker CLI, Daniel contributed many features, among which\n \t\t\t# the `docker stack` commands, allowing users to deploy their Docker\n \t\t\t# Compose projects as a Swarm service.\n \t\t\t\"dnephin\",\n\t\t]\n\n[people]\n\n# A reference list of all people associated with the project.\n# All other sections should refer to people by their canonical key\n# in the people section.\n\n\t# ADD YOURSELF HERE IN ALPHABETICAL ORDER\n\n\t[people.albers]\n\tName = \"Harald Albers\"\n\tEmail = \"github@albersweb.de\"\n\tGitHub = \"albers\"\n\n\t[people.bsousaa]\n\tName = \"Bruno de Sousa\"\n\tEmail = \"bruno.sousa@docker.com\"\n\tGitHub = \"bsousaa\"\n\n\t[people.cpuguy83]\n\tName = \"Brian Goff\"\n\tEmail = \"cpuguy83@gmail.com\"\n\tGitHub = \"cpuguy83\"\n\n\t[people.dnephin]\n\tName = \"Daniel Nephin\"\n\tEmail = \"dnephin@gmail.com\"\n\tGitHub = \"dnephin\"\n\n\t[people.neersighted]\n\tName = \"Bjorn Neergaard\"\n\tEmail = \"bneergaard@mirantis.com\"\n\tGitHub = \"neersighted\"\n\n\t[people.programmerq]\n\tName = \"Jeff Anderson\"\n\tEmail = \"jeff@docker.com\"\n\tGitHub = \"programmerq\"\n\n\t[people.rumpl]\n\tName = \"Djordje Lukic\"\n\tEmail = \"djordje.lukic@docker.com\"\n\tGitHub = \"rumpl\"\n\n\t[people.sam-thibault]\n\tName = \"Sam Thibault\"\n\tEmail = \"sam.thibault@docker.com\"\n\tGitHub = \"sam-thibault\"\n\n\t[people.silvin-lubecki]\n\tName = \"Silvin Lubecki\"\n\tEmail = \"silvin.lubecki@docker.com\"\n\tGitHub = \"silvin-lubecki\"\n\n\t[people.stevvooe]\n\tName = \"Stephen Day\"\n\tEmail = \"stevvooe@gmail.com\"\n\tGitHub = \"stevvooe\"\n\n\t[people.thajeztah]\n\tName = \"Sebastiaan van Stijn\"\n\tEmail = \"github@gone.nl\"\n\tGitHub = \"thaJeztah\"\n\n\t[people.tibor]\n\tName = \"Tibor Vass\"\n\tEmail = \"tibor@docker.com\"\n\tGitHub = \"tiborvass\"\n\n\t[people.tonistiigi]\n\tName = \"Tõnis Tiigi\"\n\tEmail = \"tonis@docker.com\"\n\tGitHub = \"tonistiigi\"\n\n\t[people.vdemeester]\n\tName = \"Vincent Demeester\"\n\tEmail = \"vincent@sbr.pm\"\n\tGitHub = \"vdemeester\"\n\n\t[people.vieux]\n\tName = \"Victor Vieux\"\n\tEmail = \"vieux@docker.com\"\n\tGitHub = \"vieux\"\n\n\t[people.vvoland]\n\tName = \"Paweł Gronowski\"\n\tEmail = \"pawel.gronowski@docker.com\"\n\tGitHub = \"vvoland\"\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.1103515625,
          "content": "#\n# github.com/docker/cli\n#\n\n# Sets the name of the company that produced the windows binary.\nPACKAGER_NAME ?=\n\n# The repository doesn't have a go.mod, but \"go list\", and \"gotestsum\"\n# expect to be run from a module.\nGO111MODULE=auto\nexport GO111MODULE\n\nall: binary\n\n_:=$(shell ./scripts/warn-outside-container $(MAKECMDGOALS))\n\n.PHONY: dev\ndev: ## start a build container in interactive mode for in-container development\n\t@if [ -n \"${DISABLE_WARN_OUTSIDE_CONTAINER}\" ]; then \\\n\t\techo \"you are already in the dev container\"; \\\n\telse \\\n\t\t$(MAKE) -f docker.Makefile dev; \\\n\tfi\n\n.PHONY: shell\nshell: dev ## alias for dev\n\n.PHONY: clean\nclean: ## remove build artifacts\n\trm -rf ./build/* man/man[1-9] docs/yaml\n\n.PHONY: test\ntest: test-unit ## run tests\n\n.PHONY: test-unit\ntest-unit: ## run unit tests, to change the output format use: GOTESTSUM_FORMAT=(dots|short|standard-quiet|short-verbose|standard-verbose) make test-unit\n\tgotestsum -- $${TESTDIRS:-$(shell go list ./... | grep -vE '/vendor/|/e2e/')} $(TESTFLAGS)\n\n.PHONY: test-coverage\ntest-coverage: ## run test coverage\n\tmkdir -p $(CURDIR)/build/coverage\n\tgotestsum -- $(shell go list ./... | grep -vE '/vendor/|/e2e/') -coverprofile=$(CURDIR)/build/coverage/coverage.txt\n\n.PHONY: lint\nlint: ## run all the lint tools\n\tgolangci-lint run\n\n.PHONY: shellcheck\nshellcheck: ## run shellcheck validation\n\tfind scripts/ contrib/completion/bash -type f | grep -v scripts/winresources | grep -v '.*.ps1' | xargs shellcheck\n\n.PHONY: fmt\nfmt: ## run gofumpt (if present) or gofmt\n\t@if command -v gofumpt > /dev/null; then \\\n\t\tgofumpt -w -d -lang=1.23 . ; \\\n\telse \\\n\t\tgo list -f {{.Dir}} ./... | xargs gofmt -w -s -d ; \\\n\tfi\n\n.PHONY: binary\nbinary: ## build executable for Linux\n\t./scripts/build/binary\n\n.PHONY: dynbinary\ndynbinary: ## build dynamically linked binary\n\tGO_LINKMODE=dynamic ./scripts/build/binary\n\n.PHONY: plugins\nplugins: ## build example CLI plugins\n\t./scripts/build/plugins\n\n.PHONY: vendor\nvendor: ## update vendor with go modules\n\trm -rf vendor\n\t./scripts/vendor update\n\n.PHONY: validate-vendor\nvalidate-vendor: ## validate vendor\n\t./scripts/vendor validate\n\n.PHONY: mod-outdated\nmod-outdated: ## check outdated dependencies\n\t./scripts/vendor outdated\n\n.PHONY: authors\nauthors: ## generate AUTHORS file from git history\n\tscripts/docs/generate-authors.sh\n\n.PHONY: completion\ncompletion: binary\ncompletion: /etc/bash_completion.d/docker\ncompletion: ## generate and install the completion scripts\n\n.PHONY: /etc/bash_completion.d/docker\n/etc/bash_completion.d/docker: ## generate and install the bash-completion script\n\tmkdir -p /etc/bash_completion.d\n\tdocker completion bash > /etc/bash_completion.d/docker\n\n.PHONY: manpages\nmanpages: ## generate man pages from go source and markdown\n\tscripts/docs/generate-man.sh\n\n.PHONY: mddocs\nmddocs: ## generate markdown files from go source\n\tscripts/docs/generate-md.sh\n\n.PHONY: yamldocs\nyamldocs: ## generate documentation YAML files consumed by docs repo\n\tscripts/docs/generate-yaml.sh\n\n.PHONY: help\nhelp: ## print this help\n\t@awk 'BEGIN {FS = \":.*?## \"} /^[a-zA-Z0-9_-]+:.*?## / {gsub(\"\\\\\\\\n\",sprintf(\"\\n%22c\",\"\"), $$2);printf \"\\033[36m%-20s\\033[0m %s\\n\", $$1, $$2}' $(MAKEFILE_LIST)\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.6201171875,
          "content": "Docker\nCopyright 2012-2017 Docker, Inc.\n\nThis product includes software developed at Docker, Inc. (https://www.docker.com).\n\nThis product contains software (https://github.com/creack/pty) developed\nby Keith Rarick, licensed under the MIT License.\n\nThe following is courtesy of our legal counsel:\n\n\nUse and transfer of Docker may be subject to certain restrictions by the\nUnited States and other governments.\nIt is your responsibility to ensure that your use and/or transfer does not\nviolate applicable laws.\n\nFor more information, see https://www.bis.doc.gov\n\nSee also https://www.apache.org/dev/crypto.html and/or seek legal counsel.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.1953125,
          "content": "# Docker CLI\n\n[![PkgGoDev](https://pkg.go.dev/badge/github.com/docker/cli)](https://pkg.go.dev/github.com/docker/cli)\n[![Build Status](https://img.shields.io/github/actions/workflow/status/docker/cli/build.yml?branch=master&label=build&logo=github)](https://github.com/docker/cli/actions?query=workflow%3Abuild)\n[![Test Status](https://img.shields.io/github/actions/workflow/status/docker/cli/test.yml?branch=master&label=test&logo=github)](https://github.com/docker/cli/actions?query=workflow%3Atest)\n[![Go Report Card](https://goreportcard.com/badge/github.com/docker/cli)](https://goreportcard.com/report/github.com/docker/cli)\n[![OpenSSF Scorecard](https://api.scorecard.dev/projects/github.com/docker/cli/badge)](https://scorecard.dev/viewer/?uri=github.com/docker/cli)\n[![Codecov](https://img.shields.io/codecov/c/github/docker/cli?logo=codecov)](https://codecov.io/gh/docker/cli)\n\n## About\n\nThis repository is the home of the Docker CLI.\n\n## Development\n\n`docker/cli` is developed using Docker.\n\nBuild CLI from source:\n\n```shell\ndocker buildx bake\n```\n\nBuild binaries for all supported platforms:\n\n```shell\ndocker buildx bake cross\n```\n\nBuild for a specific platform:\n\n```shell\ndocker buildx bake --set binary.platform=linux/arm64 \n```\n\nBuild dynamic binary for glibc or musl:\n\n```shell\nUSE_GLIBC=1 docker buildx bake dynbinary \n```\n\nRun all linting:\n\n```shell\ndocker buildx bake lint shellcheck\n```\n\nRun test:\n\n```shell\ndocker buildx bake test\n```\n\nList all the available targets:\n\n```shell\nmake help\n```\n\n### In-container development environment\n\nStart an interactive development environment:\n\n```shell\nmake -f docker.Makefile shell\n```\n\n## Legal\n\n*Brought to you courtesy of our legal counsel. For more context,\nsee the [NOTICE](https://github.com/docker/cli/blob/master/NOTICE) document in this repo.*\n\nUse and transfer of Docker may be subject to certain restrictions by the\nUnited States and other governments.\n\nIt is your responsibility to ensure that your use and/or transfer does not\nviolate applicable laws.\n\nFor more information, see https://www.bis.doc.gov\n\n## Licensing\n\ndocker/cli is licensed under the Apache License, Version 2.0. See\n[LICENSE](https://github.com/docker/docker/blob/master/LICENSE) for the full\nlicense text.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.830078125,
          "content": "# Security Policy\n\nThe maintainers of the Docker CLI take security seriously. If you discover\na security issue, please bring it to their attention right away!\n\n## Reporting a Vulnerability\n\nPlease **DO NOT** file a public issue, instead send your report privately\nto [security@docker.com](mailto:security@docker.com).\n\nReporter(s) can expect a response within 72 hours, acknowledging the issue was\nreceived.\n\n## Review Process\n\nAfter receiving the report, an initial triage and technical analysis is\nperformed to confirm the report and determine its scope. We may request\nadditional information in this stage of the process.\n\nOnce a reviewer has confirmed the relevance of the report, a draft security\nadvisory will be created on GitHub. The draft advisory will be used to discuss\nthe issue with maintainers, the reporter(s), and where applicable, other\naffected parties under embargo.\n\nIf the vulnerability is accepted, a timeline for developing a patch, public\ndisclosure, and patch release will be determined. If there is an embargo period\non public disclosure before the patch release, the reporter(s) are expected to\nparticipate in the discussion of the timeline and abide by agreed upon dates\nfor public disclosure.\n\n## Accreditation\n\nSecurity reports are greatly appreciated and we will publicly thank you,\nalthough we will keep your name confidential if you request it. We also like to\nsend gifts - if you're into swag, make sure to let us know. We do not currently\noffer a paid security bounty program at this time.\n\n## Supported Versions\n\nThis project uses long-lived branches to maintain releases, and follows\nthe maintenance cycle of the Moby project.\nRefer to [BRANCHES-AND-TAGS.md](https://github.com/moby/moby/blob/master/project/BRANCHES-AND-TAGS.md)\nin the default branch of the moby repository to learn about the current\nmaintenance status of each branch.\n"
        },
        {
          "name": "TESTING.md",
          "type": "blob",
          "size": 2.90625,
          "content": "# Testing\n\nThe following guidelines summarize the testing policy for docker/cli.\n\n## Unit Test Suite\n\nAll code changes should have unit test coverage.\n\nError cases should be tested with unit tests.\n\nBug fixes should be covered by new unit tests or additional assertions in\nexisting unit tests.\n\n### Details\n\nThe unit test suite follows the standard Go testing convention. Tests are\nlocated in the package directory in `_test.go` files.\n\nUnit tests should be named using the convention:\n\n```\nTest<Function Name><Test Case Name>\n```\n\n[Table tests](https://github.com/golang/go/wiki/TableDrivenTests) should be used\nwhere appropriate, but may not be appropriate in all cases.\n\nAssertions should be made using\n[gotest.tools/assert](https://godoc.org/gotest.tools/assert).\n\nFakes, and testing utilities can be found in\n[internal/test](https://godoc.org/github.com/docker/cli/internal/test) and\n[gotest.tools](https://godoc.org/gotest.tools).\n\n## End-to-End Test Suite\n\nThe end-to-end test suite tests a cli binary against a real API backend.\n\n### Guidelines\n\nEach feature (subcommand) should have a single end-to-end test for \nthe success case. The test should include all (or most) flags/options supported\nby that feature.\n\nIn some rare cases a couple additional end-to-end tests may be written for a\nsufficiently complex and critical feature (ex: `container run`, `service \ncreate`, `service update`, and `docker build` may have ~3-5 cases each).\n\nIn some rare cases a sufficiently critical error paths may have a single\nend-to-end test case.\n\nIn all other cases the behaviour should be covered by unit tests.\n\nIf a code change adds a new flag, that flag should be added to the existing \n\"success case\" end-to-end test.\n\nIf a code change fixes a bug, that bug fix should be covered either by adding \nassertions to the existing end-to-end test, or with one or more unit test.\n\n### Details\n\nThe end-to-end test suite is located in\n[./e2e](https://github.com/docker/cli/tree/master/e2e). Each directory in `e2e`\ncorresponds to a directory in `cli/command` and contains the tests for that\nsubcommand. Files in each directory should be named `<command>_test.go` where\ncommand is the basename of the command (ex: the test for `docker stack deploy`\nis found in `e2e/stack/deploy_test.go`).\n\nTests should be named using the convention:\n\n```\nTest<Command Basename>[<Test Case Name>]\n```\n\nwhere the test case name is only required when there are multiple test cases for\na single command.\n\nEnd-to-end test should run the `docker` binary using\n[gotestyourself/icmd](https://godoc.org/github.com/gotestyourself/gotestyourself/icmd)\nand make assertions about the exit code, stdout, stderr, and local file system.\n\nAny Docker image or registry operations should use `registry:5000/<image name>`\nto communicate with the local instance of the registry. To load \nadditional fixture images to the registry see\n[scripts/test/e2e/run](https://github.com/docker/cli/blob/master/scripts/test/e2e/run).\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.0107421875,
          "content": "27.3.1-dev\n"
        },
        {
          "name": "cli-plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.4267578125,
          "content": "comment:\n  layout: header, changes, diff, sunburst\ncoverage:\n  status:\n    patch:\n      default:\n        target: 50%\n        only_pulls: true\n    # project will give us the diff in the total code coverage between a commit\n    # and its parent\n    project:\n      default:\n        target: auto\n        threshold: \"15%\"\n    changes: false\nignore:\n  - \"**/internal/test\"\n  - \"vendor/*\"\n  - \"cli/compose/schema/bindata.go\"\n  - \".*generated.*\""
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-bake.hcl",
          "type": "blob",
          "size": 3.7958984375,
          "content": "variable \"GO_VERSION\" {\n    default = \"1.23.4\"\n}\nvariable \"VERSION\" {\n    default = \"\"\n}\nvariable \"USE_GLIBC\" {\n    default = \"\"\n}\nvariable \"STRIP_TARGET\" {\n    default = \"\"\n}\nvariable \"IMAGE_NAME\" {\n    default = \"docker-cli\"\n}\n\n# Sets the name of the company that produced the windows binary.\nvariable \"PACKAGER_NAME\" {\n    default = \"\"\n}\n\ntarget \"_common\" {\n    args = {\n        GO_VERSION = GO_VERSION\n        BUILDKIT_CONTEXT_KEEP_GIT_DIR = 1\n    }\n}\n\ntarget \"_platforms\" {\n    platforms = [\n        \"darwin/amd64\",\n        \"darwin/arm64\",\n        \"linux/amd64\",\n        \"linux/arm/v6\",\n        \"linux/arm/v7\",\n        \"linux/arm64\",\n        \"linux/ppc64le\",\n        \"linux/riscv64\",\n        \"linux/s390x\",\n        \"windows/amd64\",\n        \"windows/arm64\"\n    ]\n}\n\ngroup \"default\" {\n    targets = [\"binary\"]\n}\n\ntarget \"binary\" {\n    inherits = [\"_common\"]\n    target = \"binary\"\n    platforms = [\"local\"]\n    output = [\"build\"]\n    args = {\n        BASE_VARIANT = USE_GLIBC == \"1\" ? \"debian\" : \"alpine\"\n        VERSION = VERSION\n        PACKAGER_NAME = PACKAGER_NAME\n        GO_STRIP = STRIP_TARGET\n    }\n}\n\ntarget \"dynbinary\" {\n    inherits = [\"binary\"]\n    args = {\n        GO_LINKMODE = \"dynamic\"\n    }\n}\n\ntarget \"plugins\" {\n    inherits = [\"_common\"]\n    target = \"plugins\"\n    platforms = [\"local\"]\n    output = [\"build\"]\n    args = {\n        BASE_VARIANT = USE_GLIBC == \"1\" ? \"debian\" : \"alpine\"\n        VERSION = VERSION\n        GO_STRIP = STRIP_TARGET\n    }\n}\n\ntarget \"cross\" {\n    inherits = [\"binary\", \"_platforms\"]\n}\n\ntarget \"dynbinary-cross\" {\n    inherits = [\"dynbinary\", \"_platforms\"]\n}\n\ntarget \"plugins-cross\" {\n    inherits = [\"plugins\", \"_platforms\"]\n}\n\ntarget \"lint\" {\n    inherits = [\"_common\"]\n    dockerfile = \"./dockerfiles/Dockerfile.lint\"\n    target = \"lint\"\n    output = [\"type=cacheonly\"]\n}\n\ntarget \"shellcheck\" {\n    inherits = [\"_common\"]\n    dockerfile = \"./dockerfiles/Dockerfile.shellcheck\"\n    target = \"shellcheck\"\n    output = [\"type=cacheonly\"]\n}\n\ntarget \"validate-vendor\" {\n    inherits = [\"_common\"]\n    dockerfile = \"./dockerfiles/Dockerfile.vendor\"\n    target = \"validate\"\n    output = [\"type=cacheonly\"]\n}\n\ntarget \"update-vendor\" {\n    inherits = [\"_common\"]\n    dockerfile = \"./dockerfiles/Dockerfile.vendor\"\n    target = \"update\"\n    output = [\".\"]\n}\n\ntarget \"mod-outdated\" {\n    inherits = [\"_common\"]\n    dockerfile = \"./dockerfiles/Dockerfile.vendor\"\n    target = \"outdated\"\n    no-cache-filter = [\"outdated\"]\n    output = [\"type=cacheonly\"]\n}\n\ntarget \"validate-authors\" {\n    inherits = [\"_common\"]\n    dockerfile = \"./dockerfiles/Dockerfile.authors\"\n    target = \"validate\"\n    output = [\"type=cacheonly\"]\n}\n\ntarget \"update-authors\" {\n    inherits = [\"_common\"]\n    dockerfile = \"./dockerfiles/Dockerfile.authors\"\n    target = \"update\"\n    output = [\".\"]\n}\n\ntarget \"test\" {\n    inherits = [\"_common\"]\n    target = \"test\"\n    output = [\"type=cacheonly\"]\n}\n\ntarget \"test-coverage\" {\n    inherits = [\"_common\"]\n    target = \"test-coverage\"\n    output = [\"build/coverage\"]\n}\n\ntarget \"e2e-image\" {\n    inherits = [\"_common\"]\n    target = \"e2e\"\n    output = [\"type=docker\"]\n    tags = [\"${IMAGE_NAME}\"]\n    args = {\n        BASE_VARIANT = USE_GLIBC == \"1\" ? \"debian\" : \"alpine\"\n        VERSION = VERSION\n    }\n}\n\ntarget \"e2e-gencerts\" {\n    inherits = [\"_common\"]\n    dockerfile = \"./e2e/testdata/Dockerfile.gencerts\"\n    output = [\"./e2e/testdata\"]\n}\n\ntarget \"docker-metadata-action\" {\n  tags = [\"cli-bin:local\"]\n}\n\ntarget \"bin-image\" {\n  inherits = [\"binary\", \"docker-metadata-action\"]\n  target = \"bin-image\"\n  output = [\"type=docker\"]\n}\n\ntarget \"bin-image-cross\" {\n  inherits = [\"bin-image\"]\n  output = [\"type=image\"]\n  platforms = [\n    \"darwin/amd64\",\n    \"darwin/arm64\",\n    \"linux/amd64\",\n    \"linux/arm/v6\",\n    \"linux/arm/v7\",\n    \"linux/arm64\",\n    \"linux/ppc64le\",\n    \"linux/s390x\",\n    \"windows/amd64\",\n    \"windows/arm64\"\n  ]\n}\n"
        },
        {
          "name": "docker.Makefile",
          "type": "blob",
          "size": 5.13671875,
          "content": "#\n# github.com/docker/cli\n#\n# Makefile for developing using Docker\n#\n\n# Overridable env vars\nDOCKER_CLI_MOUNTS ?= -v \"$(CURDIR)\":/go/src/github.com/docker/cli\nDOCKER_CLI_CONTAINER_NAME ?=\nDOCKER_CLI_GO_BUILD_CACHE ?= y\n\n# Sets the name of the company that produced the windows binary.\nPACKAGER_NAME ?=\n\nDEV_DOCKER_IMAGE_NAME = docker-cli-dev$(IMAGE_TAG)\nE2E_IMAGE_NAME = docker-cli-e2e\nENGINE_VERSION ?=\nCACHE_VOLUME_NAME := docker-cli-dev-cache\nifeq ($(DOCKER_CLI_GO_BUILD_CACHE),y)\nDOCKER_CLI_MOUNTS += -v \"$(CACHE_VOLUME_NAME):/root/.cache/go-build\"\nendif\nVERSION = $(shell cat VERSION)\nENVVARS = -e VERSION=$(VERSION) -e GITCOMMIT -e PLATFORM -e TESTFLAGS -e TESTDIRS -e GOOS -e GOARCH -e GOARM -e ENGINE_VERSION\n\n# Some Dockerfiles use features that are only supported with BuildKit enabled\nexport DOCKER_BUILDKIT=1\n\n# build docker image (dockerfiles/Dockerfile.build)\n.PHONY: build_docker_image\nbuild_docker_image:\n\t# build dockerfile from stdin so that we don't send the build-context; source is bind-mounted in the development environment\n\tcat ./dockerfiles/Dockerfile.dev | docker build ${DOCKER_BUILD_ARGS} --build-arg=GO_VERSION -t $(DEV_DOCKER_IMAGE_NAME) -\n\nDOCKER_RUN_NAME_OPTION := $(if $(DOCKER_CLI_CONTAINER_NAME),--name $(DOCKER_CLI_CONTAINER_NAME),)\nDOCKER_RUN := docker run --rm $(ENVVARS) $(DOCKER_CLI_MOUNTS) $(DOCKER_RUN_NAME_OPTION)\n\n.PHONY: binary\nbinary: ## build executable\n\tPACKAGER_NAME=$(PACKAGER_NAME) docker buildx bake binary\n\nbuild: binary ## alias for binary\n\nplugins: ## build the CLI plugin examples\n\tdocker buildx bake plugins\n\nplugins-cross: ## build the CLI plugin examples for all platforms\n\tdocker buildx bake plugins-cross\n\n.PHONY: clean\nclean: build_docker_image ## clean build artifacts\n\t$(DOCKER_RUN) $(DEV_DOCKER_IMAGE_NAME) make clean\n\tdocker volume rm -f $(CACHE_VOLUME_NAME)\n\n.PHONY: cross\ncross:\n\tPACKAGER_NAME=$(PACKAGER_NAME) docker buildx bake cross\n\n.PHONY: dynbinary\ndynbinary: ## build dynamically linked binary\n\tUSE_GLIBC=1 PACKAGER_NAME=$(PACKAGER_NAME)  docker buildx bake dynbinary\n\n.PHONY: dev\ndev: build_docker_image ## start a build container in interactive mode for in-container development\n\t$(DOCKER_RUN) -it \\\n\t\t--mount type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock \\\n\t\t$(DEV_DOCKER_IMAGE_NAME)\n\nshell: dev ## alias for dev\n\n.PHONY: lint\nlint: ## run linters\n\tdocker buildx bake lint\n\n.PHONY: shellcheck\nshellcheck: ## run shellcheck validation\n\tdocker buildx bake shellcheck\n\n.PHONY: fmt\nfmt: ## run gofumpt\n\t$(DOCKER_RUN) $(DEV_DOCKER_IMAGE_NAME) make fmt\n\n.PHONY: vendor\nvendor: ## update vendor with go modules\n\t$(eval $@_TMP_OUT := $(shell mktemp -d -t dockercli-output.XXXXXXXXXX))\n\tdocker buildx bake --set \"*.output=$($@_TMP_OUT)\" update-vendor\n\trm -rf ./vendor\n\tcp -R \"$($@_TMP_OUT)\"/out/* .\n\trm -rf $($@_TMP_OUT)/*\n\n.PHONY: validate-vendor\nvalidate-vendor: ## validate vendor\n\tdocker buildx bake validate-vendor\n\n.PHONY: mod-outdated\nmod-outdated: ## check outdated dependencies\n\tdocker buildx bake mod-outdated\n\n.PHONY: authors\nauthors: ## generate AUTHORS file from git history\n\tdocker buildx bake update-authors\n\n.PHONY: manpages\nmanpages: build_docker_image ## generate man pages from go source and markdown\n\t$(DOCKER_RUN) -it $(DEV_DOCKER_IMAGE_NAME) make manpages\n\n.PHONY: mddocs\nmddocs: build_docker_image ## generate markdown files from go source\n\t$(DOCKER_RUN) -it $(DEV_DOCKER_IMAGE_NAME) make mddocs\n\n.PHONY: yamldocs\nyamldocs: build_docker_image ## generate documentation YAML files consumed by docs repo\n\t$(DOCKER_RUN) -it $(DEV_DOCKER_IMAGE_NAME) make yamldocs\n\n.PHONY: test ## run unit and e2e tests\ntest: test-unit test-e2e\n\n.PHONY: test-unit\ntest-unit: ## run unit tests\n\tdocker buildx bake test\n\n.PHONY: test-coverage\ntest-coverage: ## run test with coverage\n\tdocker buildx bake test-coverage\n\n.PHONY: build-e2e-image\nbuild-e2e-image:\n\tmkdir -p $(CURDIR)/build/coverage\n\tIMAGE_NAME=$(E2E_IMAGE_NAME) VERSION=$(VERSION) docker buildx bake e2e-image\n\n.PHONY: test-e2e\ntest-e2e: test-e2e-non-experimental test-e2e-experimental test-e2e-connhelper-ssh ## run all e2e tests\n\n.PHONY: test-e2e-experimental\ntest-e2e-experimental: build-e2e-image # run experimental e2e tests\n\tdocker run --rm $(ENVVARS) -e DOCKERD_EXPERIMENTAL=1 \\\n\t\t--mount type=bind,src=$(CURDIR)/build/coverage,dst=/tmp/coverage \\\n\t\t--mount type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock \\\n\t\t$(E2E_IMAGE_NAME)\n\n.PHONY: test-e2e-non-experimental\ntest-e2e-non-experimental: build-e2e-image # run non-experimental e2e tests\n\tdocker run --rm $(ENVVARS) \\\n\t\t--mount type=bind,src=$(CURDIR)/build/coverage,dst=/tmp/coverage \\\n\t\t--mount type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock \\\n\t\t$(E2E_IMAGE_NAME)\n\n.PHONY: test-e2e-connhelper-ssh\ntest-e2e-connhelper-ssh: build-e2e-image # run experimental SSH-connection helper e2e tests\n\tdocker run --rm $(ENVVARS) -e DOCKERD_EXPERIMENTAL=1 -e TEST_CONNHELPER=ssh \\\n\t\t--mount type=bind,src=$(CURDIR)/build/coverage,dst=/tmp/coverage \\\n\t\t--mount type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock \\\n\t\t$(E2E_IMAGE_NAME)\n\n.PHONY: help\nhelp: ## print this help\n\t@awk 'BEGIN {FS = \":.*?## \"} /^[a-zA-Z0-9_-]+:.*?## / {gsub(\"\\\\\\\\n\",sprintf(\"\\n%22c\",\"\"), $$2);printf \"\\033[36m%-20s\\033[0m %s\\n\", $$1, $$2}' $(MAKEFILE_LIST)\n"
        },
        {
          "name": "dockerfiles",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "e2e",
          "type": "tree",
          "content": null
        },
        {
          "name": "experimental",
          "type": "tree",
          "content": null
        },
        {
          "name": "hack",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "opts",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "service",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor.mod",
          "type": "blob",
          "size": 4.7041015625,
          "content": "module github.com/docker/cli\n\n// 'vendor.mod' enables use of 'go mod vendor' to managed 'vendor/' directory.\n// There is no 'go.mod' file, as that would imply opting in for all the rules\n// around SemVer, which this repo cannot abide by as it uses CalVer.\n\ngo 1.22.0\n\nrequire (\n\tdario.cat/mergo v1.0.1\n\tgithub.com/containerd/platforms v0.2.1\n\tgithub.com/creack/pty v1.1.21\n\tgithub.com/distribution/reference v0.6.0\n\tgithub.com/docker/cli-docs-tool v0.8.0\n\tgithub.com/docker/distribution v2.8.3+incompatible\n\tgithub.com/docker/docker v27.0.2-0.20250108165300-50212d215ba7+incompatible // master (v-next)\n\tgithub.com/docker/docker-credential-helpers v0.8.2\n\tgithub.com/docker/go-connections v0.5.0\n\tgithub.com/docker/go-units v0.5.0\n\tgithub.com/fvbommel/sortorder v1.1.0\n\tgithub.com/go-jose/go-jose/v4 v4.0.4\n\tgithub.com/go-viper/mapstructure/v2 v2.2.1\n\tgithub.com/gogo/protobuf v1.3.2\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510\n\tgithub.com/mattn/go-runewidth v0.0.15\n\tgithub.com/moby/patternmatcher v0.6.0\n\tgithub.com/moby/swarmkit/v2 v2.0.0-20250103191802-8c1959736554\n\tgithub.com/moby/sys/capability v0.4.0\n\tgithub.com/moby/sys/sequential v0.6.0\n\tgithub.com/moby/sys/signal v0.7.1\n\tgithub.com/moby/term v0.5.2\n\tgithub.com/morikuni/aec v1.0.0\n\tgithub.com/opencontainers/go-digest v1.0.0\n\tgithub.com/opencontainers/image-spec v1.1.0\n\tgithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/spf13/cobra v1.8.1\n\tgithub.com/spf13/pflag v1.0.5\n\tgithub.com/theupdateframework/notary v0.7.1-0.20210315103452-bf96a202a09a\n\tgithub.com/tonistiigi/go-rosetta v0.0.0-20220804170347-3f4430f2d346\n\tgithub.com/xeipuuv/gojsonschema v1.2.0\n\tgo.opentelemetry.io/otel v1.28.0\n\tgo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.28.0\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.28.0\n\tgo.opentelemetry.io/otel/metric v1.28.0\n\tgo.opentelemetry.io/otel/sdk v1.28.0\n\tgo.opentelemetry.io/otel/sdk/metric v1.28.0\n\tgo.opentelemetry.io/otel/trace v1.28.0\n\tgolang.org/x/sync v0.10.0\n\tgolang.org/x/sys v0.28.0\n\tgolang.org/x/term v0.27.0\n\tgolang.org/x/text v0.21.0\n\tgopkg.in/yaml.v2 v2.4.0\n\tgotest.tools/v3 v3.5.1\n\ttags.cncf.io/container-device-interface v0.8.0\n)\n\nrequire (\n\tgithub.com/AdaLogics/go-fuzz-headers v0.0.0-20240806141605-e8a1dd7889d6 // indirect\n\tgithub.com/Azure/go-ansiterm v0.0.0-20250102033503-faa5f7b0171c // indirect\n\tgithub.com/Microsoft/go-winio v0.6.2 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/cenkalti/backoff/v4 v4.3.0 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/containerd/log v0.1.0 // indirect\n\tgithub.com/docker/go v1.5.1-1.0.20160303222718-d30aec9fd63c // indirect\n\tgithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c // indirect\n\tgithub.com/docker/go-metrics v0.0.1 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/go-logr/logr v1.4.2 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/golang/protobuf v1.5.4 // indirect\n\tgithub.com/google/uuid v1.6.0 // indirect\n\tgithub.com/gorilla/mux v1.8.1 // indirect\n\tgithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/klauspost/compress v1.17.11 // indirect\n\tgithub.com/miekg/pkcs11 v1.1.1 // indirect\n\tgithub.com/moby/docker-image-spec v1.3.1 // indirect\n\tgithub.com/moby/sys/symlink v0.3.0 // indirect\n\tgithub.com/moby/sys/user v0.3.0 // indirect\n\tgithub.com/moby/sys/userns v0.1.0 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/prometheus/client_golang v1.20.5 // indirect\n\tgithub.com/prometheus/client_model v0.6.1 // indirect\n\tgithub.com/prometheus/common v0.55.0 // indirect\n\tgithub.com/prometheus/procfs v0.15.1 // indirect\n\tgithub.com/rivo/uniseg v0.2.0 // indirect\n\tgithub.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb // indirect\n\tgithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415 // indirect\n\tgo.etcd.io/etcd/raft/v3 v3.5.16 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.28.0 // indirect\n\tgo.opentelemetry.io/proto/otlp v1.3.1 // indirect\n\tgolang.org/x/crypto v0.31.0 // indirect\n\tgolang.org/x/net v0.33.0 // indirect\n\tgolang.org/x/time v0.6.0 // indirect\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20241007155032-5fefd90f89a9 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241007155032-5fefd90f89a9 // indirect\n\tgoogle.golang.org/grpc v1.67.1 // indirect\n\tgoogle.golang.org/protobuf v1.35.2 // indirect\n)\n"
        },
        {
          "name": "vendor.sum",
          "type": "blob",
          "size": 38.3837890625,
          "content": "dario.cat/mergo v1.0.1 h1:Ra4+bf83h2ztPIQYNP99R6m+Y7KfnARDfID+a+vLl4s=\ndario.cat/mergo v1.0.1/go.mod h1:uNxQE+84aUszobStD9th8a29P2fMDhsBdgRYvZOxGmk=\ngithub.com/AdaLogics/go-fuzz-headers v0.0.0-20240806141605-e8a1dd7889d6 h1:He8afgbRMd7mFxO99hRNu+6tazq8nFF9lIwo9JFroBk=\ngithub.com/AdaLogics/go-fuzz-headers v0.0.0-20240806141605-e8a1dd7889d6/go.mod h1:8o94RPi1/7XTJvwPpRSzSUedZrtlirdB3r9Z20bi2f8=\ngithub.com/Azure/go-ansiterm v0.0.0-20250102033503-faa5f7b0171c h1:udKWzYgxTojEKWjV8V+WSxDXJ4NFATAsZjh8iIbsQIg=\ngithub.com/Azure/go-ansiterm v0.0.0-20250102033503-faa5f7b0171c/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=\ngithub.com/BurntSushi/toml v0.3.1 h1:WXkYYl6Yr3qBf1K79EBnL4mak0OimBfB0XUf9Vl28OQ=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/Microsoft/go-winio v0.6.2 h1:F2VQgta7ecxGYO8k3ZZz3RS8fVIXVxONVUPlNERoyfY=\ngithub.com/Microsoft/go-winio v0.6.2/go.mod h1:yd8OoFMLzJbo9gZq8j5qaps8bJ9aShtEA8Ipt1oGCvU=\ngithub.com/Shopify/logrus-bugsnag v0.0.0-20170309145241-6dbc35f2c30d h1:hi6J4K6DKrR4/ljxn6SF6nURyu785wKMuQcjt7H3VCQ=\ngithub.com/Shopify/logrus-bugsnag v0.0.0-20170309145241-6dbc35f2c30d/go.mod h1:HI8ITrYtUY+O+ZhtlqUnD8+KwNPOyugEhfP9fdUIaEQ=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/bitly/go-hostpool v0.1.0/go.mod h1:4gOCgp6+NZnVqlKyZ/iBZFTAJKembaVENUpMkpg42fw=\ngithub.com/bitly/go-simplejson v0.5.0/go.mod h1:cXHtHw4XUPsvGaxgjIAn8PhEWG9NfngEKAMDJEczWVA=\ngithub.com/bmizerany/assert v0.0.0-20160611221934-b7ed37b82869/go.mod h1:Ekp36dRnpXw/yCqJaO+ZrUyxD+3VXMFFr56k5XYrpB4=\ngithub.com/bugsnag/bugsnag-go v1.0.5 h1:NIoY2u+am1/GRgUZa+ata8UUrRBuCK4pLq0/lcvMF7M=\ngithub.com/bugsnag/bugsnag-go v1.0.5/go.mod h1:2oa8nejYd4cQ/b0hMIopN0lCRxU0bueqREvZLWFrtK8=\ngithub.com/bugsnag/osext v0.0.0-20130617224835-0dd3f918b21b h1:otBG+dV+YK+Soembjv71DPz3uX/V/6MMlSyD9JBQ6kQ=\ngithub.com/bugsnag/osext v0.0.0-20130617224835-0dd3f918b21b/go.mod h1:obH5gd0BsqsP2LwDJ9aOkm/6J86V6lyAXCoQWGw3K50=\ngithub.com/bugsnag/panicwrap v0.0.0-20151223152923-e2c28503fcd0 h1:nvj0OLI3YqYXer/kZD8Ri1aaunCxIEsOst1BVJswV0o=\ngithub.com/bugsnag/panicwrap v0.0.0-20151223152923-e2c28503fcd0/go.mod h1:D/8v3kj0zr8ZAKg1AQ6crr+5VwKN5eIywRkfhyM/+dE=\ngithub.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=\ngithub.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cloudflare/cfssl v0.0.0-20180223231731-4e2dcbde5004/go.mod h1:yMWuSON2oQp+43nFtAV/uvKQIFpSPerB57DCt9t8sSA=\ngithub.com/cloudflare/cfssl v1.6.4 h1:NMOvfrEjFfC63K3SGXgAnFdsgkmiq4kATme5BfcqrO8=\ngithub.com/cloudflare/cfssl v1.6.4/go.mod h1:8b3CQMxfWPAeom3zBnGJ6sd+G1NkL5TXqmDXacb+1J0=\ngithub.com/containerd/log v0.1.0 h1:TCJt7ioM2cr/tfR8GPbGf9/VRAX8D2B4PjzCpfX540I=\ngithub.com/containerd/log v0.1.0/go.mod h1:VRRf09a7mHDIRezVKTRCrOq78v577GXq3bSa3EhrzVo=\ngithub.com/containerd/platforms v0.2.1 h1:zvwtM3rz2YHPQsF2CHYM8+KtB5dvhISiXh5ZpSBQv6A=\ngithub.com/containerd/platforms v0.2.1/go.mod h1:XHCb+2/hzowdiut9rkudds9bE5yJ7npe7dG/wG+uFPw=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/creack/pty v1.1.21 h1:1/QdRyBaHHJP61QkWMXlOIBfsgdDeeKfK8SYVUWJKf0=\ngithub.com/creack/pty v1.1.21/go.mod h1:MOBLtS5ELjhRRrroQr9kyvTxUAFNvYEK993ew/Vr4O4=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/denisenkom/go-mssqldb v0.0.0-20191128021309-1d7a30a10f73/go.mod h1:xbL0rPBG9cCiLr28tMa8zpbdarY27NDyej4t/EjAShU=\ngithub.com/distribution/reference v0.6.0 h1:0IXCQ5g4/QMHHkarYzh5l+u8T3t73zM5QvfrDyIgxBk=\ngithub.com/distribution/reference v0.6.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=\ngithub.com/docker/cli-docs-tool v0.8.0 h1:YcDWl7rQJC3lJ7WVZRwSs3bc9nka97QLWfyJQli8yJU=\ngithub.com/docker/cli-docs-tool v0.8.0/go.mod h1:8TQQ3E7mOXoYUs811LiPdUnAhXrcVsBIrW21a5pUbdk=\ngithub.com/docker/distribution v2.7.1+incompatible/go.mod h1:J2gT2udsDAN96Uj4KfcMRqY0/ypR+oyYUYmja8H+y+w=\ngithub.com/docker/distribution v2.8.3+incompatible h1:AtKxIZ36LoNK51+Z6RpzLpddBirtxJnzDrHLEKxTAYk=\ngithub.com/docker/distribution v2.8.3+incompatible/go.mod h1:J2gT2udsDAN96Uj4KfcMRqY0/ypR+oyYUYmja8H+y+w=\ngithub.com/docker/docker v27.0.2-0.20250108165300-50212d215ba7+incompatible h1:d2wmwnGBWKKlr7JBS6SD/1O3DRvZATLQg4tbgk0rzvo=\ngithub.com/docker/docker v27.0.2-0.20250108165300-50212d215ba7+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\ngithub.com/docker/docker-credential-helpers v0.8.2 h1:bX3YxiGzFP5sOXWc3bTPEXdEaZSeVMrFgOr3T+zrFAo=\ngithub.com/docker/docker-credential-helpers v0.8.2/go.mod h1:P3ci7E3lwkZg6XiHdRKft1KckHiO9a2rNtyFbZ/ry9M=\ngithub.com/docker/go v1.5.1-1.0.20160303222718-d30aec9fd63c h1:lzqkGL9b3znc+ZUgi7FlLnqjQhcXxkNM/quxIjBVMD0=\ngithub.com/docker/go v1.5.1-1.0.20160303222718-d30aec9fd63c/go.mod h1:CADgU4DSXK5QUlFslkQu2yW2TKzFZcXq/leZfM0UH5Q=\ngithub.com/docker/go-connections v0.4.0/go.mod h1:Gbd7IOopHjR8Iph03tsViu4nIes5XhDvyHbTtUxmeec=\ngithub.com/docker/go-connections v0.5.0 h1:USnMq7hx7gwdVZq1L49hLXaFtUdTADjXGp+uj1Br63c=\ngithub.com/docker/go-connections v0.5.0/go.mod h1:ov60Kzw0kKElRwhNs9UlUHAE/F9Fe6GLaXnqyDdmEXc=\ngithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c h1:+pKlWGMw7gf6bQ+oDZB4KHQFypsfjYlq/C4rfL7D3g8=\ngithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c/go.mod h1:Uw6UezgYA44ePAFQYUehOuCzmy5zmg/+nl2ZfMWGkpA=\ngithub.com/docker/go-metrics v0.0.0-20180209012529-399ea8c73916/go.mod h1:/u0gXw0Gay3ceNrsHubL3BtdOL2fHf93USgMTe0W5dI=\ngithub.com/docker/go-metrics v0.0.1 h1:AgB/0SvBxihN0X8OR4SjsblXkbMvalQ8cjmtKQ2rQV8=\ngithub.com/docker/go-metrics v0.0.1/go.mod h1:cG1hvH2utMXtqgqqYE9plW6lDxS3/5ayHzueweSI3Vw=\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/docker/libtrust v0.0.0-20160708172513-aabc10ec26b7 h1:UhxFibDNY/bfvqU5CAUmr9zpesgbU6SWc8/B4mflAE4=\ngithub.com/docker/libtrust v0.0.0-20160708172513-aabc10ec26b7/go.mod h1:cyGadeNEkKy96OOhEzfZl+yxihPEzKnqJwvfuSUqbZE=\ngithub.com/dvsekhvalnov/jose2go v0.0.0-20170216131308-f21a8cedbbae/go.mod h1:7BvyPhdbLxMXIYTFPLsyJRFMsKmOZnQmzh6Gb+uquuM=\ngithub.com/erikstmartin/go-testdb v0.0.0-20160219214506-8d10e4a1bae5/go.mod h1:a2zkGnVExMxdzMo3M0Hi/3sEU+cWnZpSni0O6/Yb/P0=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/fvbommel/sortorder v1.1.0 h1:fUmoe+HLsBTctBDoaBwpQo5N+nrCp8g/BjKb/6ZQmYw=\ngithub.com/fvbommel/sortorder v1.1.0/go.mod h1:uk88iVf1ovNn1iLfgUVU2F9o5eO30ui720w+kxuqRs0=\ngithub.com/go-jose/go-jose/v4 v4.0.4 h1:VsjPI33J0SB9vQM6PLmNjoHqMQNGPiZ0rHL7Ni7Q6/E=\ngithub.com/go-jose/go-jose/v4 v4.0.4/go.mod h1:NKb5HO1EZccyMpiZNbdUw/14tiXNyUJh188dfnMCAfc=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-sql-driver/mysql v1.5.0 h1:ozyZYNQW3x3HtqT1jira07DN2PArx2v7/mN66gGcHOs=\ngithub.com/go-sql-driver/mysql v1.5.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-viper/mapstructure/v2 v2.2.1 h1:ZAaOCxANMuZx5RCeg0mBdEZk7DZasvvZIxtHqx8aGss=\ngithub.com/go-viper/mapstructure/v2 v2.2.1/go.mod h1:oJDH3BJKyqBA2TXFhDsKDGDTlndYOZ6rGS0BRZIxGhM=\ngithub.com/gogo/protobuf v1.0.0/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang-sql/civil v0.0.0-20190719163853-cb61b32ac6fe/go.mod h1:8vg3r2VgvsThLBIFL93Qb5yWzgyZWhEmBwUJWevAkK0=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.4/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/certificate-transparency-go v1.0.10-0.20180222191210-5ab67e519c93/go.mod h1:QeJfpSbVSfYc7RgB3gJFj9cbuQMMchQxrWXz8Ruopmg=\ngithub.com/google/certificate-transparency-go v1.1.4 h1:hCyXHDbtqlr/lMXU0D4WgbalXL0Zk4dSWWMbPV8VrqY=\ngithub.com/google/certificate-transparency-go v1.1.4/go.mod h1:D6lvbfwckhNrbM9WVl1EVeMOyzC19mpIjMOI4nxBHtQ=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510 h1:El6M4kTTCOh6aBiKaUGG7oYTSPP8MxqL4YI3kZKwcP4=\ngithub.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510/go.mod h1:pupxD2MaaD3pAXIBCelhxNneeOaAeabZDe5s4K6zSpQ=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gorilla/mux v1.7.0/go.mod h1:1lud6UwP+6orDFRuTfBEV8e9/aOM/c4fVVCaMa2zaAs=\ngithub.com/gorilla/mux v1.8.1 h1:TuBL49tXwgrFYWhqrNgrUNEY92u81SPhu7sTdzQEiWY=\ngithub.com/gorilla/mux v1.8.1/go.mod h1:AKf9I4AEqPTmMytcMc0KkNouC66V3BtZ4qD5fmWSiMQ=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 h1:bkypFPDjIYGfCYD5mRBvpqxfYX1YCS1PXdKYWi8FsN0=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0/go.mod h1:P+Lt/0by1T8bfcF3z737NnSbmxQAppXMRziHUxPOC8k=\ngithub.com/hailocab/go-hostpool v0.0.0-20160125115350-e80d13ce29ed h1:5upAirOpQc1Q53c0bnx2ufif5kANL7bfZWcc6VJWJd8=\ngithub.com/hailocab/go-hostpool v0.0.0-20160125115350-e80d13ce29ed/go.mod h1:tMWxXQ9wFIaZeTI9F+hmhFiGpFmhOHzyShyFUhRm0H4=\ngithub.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\ngithub.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/jinzhu/gorm v0.0.0-20170222002820-5409931a1bb8 h1:CZkYfurY6KGhVtlalI4QwQ6T0Cu6iuY3e0x5RLu96WE=\ngithub.com/jinzhu/gorm v0.0.0-20170222002820-5409931a1bb8/go.mod h1:Vla75njaFJ8clLU1W44h34PjIkijhjHIYnZxMqCdxqo=\ngithub.com/jinzhu/inflection v0.0.0-20170102125226-1c35d901db3d h1:jRQLvyVGL+iVtDElaEIDdKwpPqUIZJfzkNLV34htpEc=\ngithub.com/jinzhu/inflection v0.0.0-20170102125226-1c35d901db3d/go.mod h1:h+uFLlag+Qp1Va5pdKtLDYj+kHp5pxUVkryuEj+Srlc=\ngithub.com/jinzhu/now v1.1.1/go.mod h1:d3SSVoowX0Lcu0IBviAWJpolVfI5UJVZZ7cO71lE/z8=\ngithub.com/jmoiron/sqlx v1.3.3 h1:j82X0bf7oQ27XeqxicSZsTU5suPwKElg3oyxNn43iTk=\ngithub.com/jmoiron/sqlx v1.3.3/go.mod h1:2BljVx/86SuTyjE+aPYlHCTNvZrnJXghYGpNiXLBMCQ=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.7/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/juju/loggo v0.0.0-20190526231331-6e530bcce5d8/go.mod h1:vgyd7OREkbtVEN/8IXZe5Ooef3LQePvuBm9UWj6ZL8U=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/compress v1.17.11 h1:In6xLpyWOi1+C7tXUUWv2ot1QvBjxevKAaI6IXrJmUc=\ngithub.com/klauspost/compress v1.17.11/go.mod h1:pMDklpSncoRMuLFrf1W9Ss9KT+0rH90U12bZKk7uwG0=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/lib/pq v1.9.0/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/magiconair/properties v1.5.3 h1:C8fxWnhYyME3n0klPOhVM7PtYUB3eV1W3DeFmN3j53Y=\ngithub.com/magiconair/properties v1.5.3/go.mod h1:PppfXfuXeibc/6YijjN8zIbojt8czPbwD3XqdrwzmxQ=\ngithub.com/mattn/go-runewidth v0.0.15 h1:UNAjwbU9l54TA3KzvqLGxwWjHmMgBUVhBiTjelZgg3U=\ngithub.com/mattn/go-runewidth v0.0.15/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\ngithub.com/mattn/go-sqlite3 v1.6.0/go.mod h1:FPy6KqzDD04eiIsT53CuJW3U88zkxoIYsOqkbpncsNc=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/miekg/pkcs11 v1.0.3/go.mod h1:XsNlhZGX73bx86s2hdc/FuaLm2CPZJemRLMA+WTFxgs=\ngithub.com/miekg/pkcs11 v1.1.1 h1:Ugu9pdy6vAYku5DEpVWVFPYnzV+bxB+iRdbuFSu7TvU=\ngithub.com/miekg/pkcs11 v1.1.1/go.mod h1:XsNlhZGX73bx86s2hdc/FuaLm2CPZJemRLMA+WTFxgs=\ngithub.com/mitchellh/mapstructure v1.0.0 h1:vVpGvMXJPqSDh2VYHF7gsfQj8Ncx+Xw5Y1KHeTRY+7I=\ngithub.com/mitchellh/mapstructure v1.0.0/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/moby/docker-image-spec v1.3.1 h1:jMKff3w6PgbfSa69GfNg+zN/XLhfXJGnEx3Nl2EsFP0=\ngithub.com/moby/docker-image-spec v1.3.1/go.mod h1:eKmb5VW8vQEh/BAr2yvVNvuiJuY6UIocYsFu/DxxRpo=\ngithub.com/moby/patternmatcher v0.6.0 h1:GmP9lR19aU5GqSSFko+5pRqHi+Ohk1O69aFiKkVGiPk=\ngithub.com/moby/patternmatcher v0.6.0/go.mod h1:hDPoyOpDY7OrrMDLaYoY3hf52gNCR/YOUYxkhApJIxc=\ngithub.com/moby/swarmkit/v2 v2.0.0-20250103191802-8c1959736554 h1:DMHJbgyNZWyrPKYjCYt2IxEO7KA0eSd4fo6KQsv2W84=\ngithub.com/moby/swarmkit/v2 v2.0.0-20250103191802-8c1959736554/go.mod h1:mTTGIAz/59OGZR5Qe+QByIe3Nxc+sSuJkrsStFhr6Lg=\ngithub.com/moby/sys/capability v0.4.0 h1:4D4mI6KlNtWMCM1Z/K0i7RV1FkX+DBDHKVJpCndZoHk=\ngithub.com/moby/sys/capability v0.4.0/go.mod h1:4g9IK291rVkms3LKCDOoYlnV8xKwoDTpIrNEE35Wq0I=\ngithub.com/moby/sys/sequential v0.6.0 h1:qrx7XFUd/5DxtqcoH1h438hF5TmOvzC/lspjy7zgvCU=\ngithub.com/moby/sys/sequential v0.6.0/go.mod h1:uyv8EUTrca5PnDsdMGXhZe6CCe8U/UiTWd+lL+7b/Ko=\ngithub.com/moby/sys/signal v0.7.1 h1:PrQxdvxcGijdo6UXXo/lU/TvHUWyPhj7UOpSo8tuvk0=\ngithub.com/moby/sys/signal v0.7.1/go.mod h1:Se1VGehYokAkrSQwL4tDzHvETwUZlnY7S5XtQ50mQp8=\ngithub.com/moby/sys/symlink v0.3.0 h1:GZX89mEZ9u53f97npBy4Rc3vJKj7JBDj/PN2I22GrNU=\ngithub.com/moby/sys/symlink v0.3.0/go.mod h1:3eNdhduHmYPcgsJtZXW1W4XUJdZGBIkttZ8xKqPUJq0=\ngithub.com/moby/sys/user v0.3.0 h1:9ni5DlcW5an3SvRSx4MouotOygvzaXbaSrc/wGDFWPo=\ngithub.com/moby/sys/user v0.3.0/go.mod h1:bG+tYYYJgaMtRKgEmuueC0hJEAZWwtIbZTB+85uoHjs=\ngithub.com/moby/sys/userns v0.1.0 h1:tVLXkFOxVu9A64/yh59slHVv9ahO9UIev4JZusOLG/g=\ngithub.com/moby/sys/userns v0.1.0/go.mod h1:IHUYgu/kao6N8YZlp9Cf444ySSvCmDlmzUcYfDHOl28=\ngithub.com/moby/term v0.5.2 h1:6qk3FJAFDs6i/q3W/pQ97SX192qKfZgGjCQqfCJkgzQ=\ngithub.com/moby/term v0.5.2/go.mod h1:d3djjFCrjnB+fl8NJux+EJzu0msscUP+f8it8hPkFLc=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/morikuni/aec v1.0.0 h1:nP9CBfwrvYnBRgY6qfDQkygYDmYwOilePFkwzv4dU8A=\ngithub.com/morikuni/aec v1.0.0/go.mod h1:BbKIizmSmc5MMPqRYbxO4ZU0S0+P200+tUnFx7PXmsc=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=\ngithub.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.12.0/go.mod h1:oUhWkIvk5aDxtKvDDuw8gItl8pKl42LzjC9KZE0HfGg=\ngithub.com/onsi/gomega v1.7.1/go.mod h1:XdKZgCCFLUoM/7CFJVPcG8C1xQ1AJ0vpAezJrB7JYyY=\ngithub.com/onsi/gomega v1.9.0/go.mod h1:Ho0h+IUsWyvy1OpqCwxlQ/21gkhVunqlU8fDGcoTdcA=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.0.1/go.mod h1:BtxoFyWECRxE4U/7sNtV5W15zMzWCbyJoFRP3s7yZA0=\ngithub.com/opencontainers/image-spec v1.1.0 h1:8SG7/vwALn54lVB/0yZ/MMwhFrPYtpEHQb2IpWsCzug=\ngithub.com/opencontainers/image-spec v1.1.0/go.mod h1:W4s4sFTMaBeK1BQLXbG4AdM2szdn85PY75RI83NrTrM=\ngithub.com/opentracing/opentracing-go v1.1.0 h1:pWlfV3Bxv7k65HYwkikxat0+s3pV4bsqf19k25Ur8rU=\ngithub.com/opentracing/opentracing-go v1.1.0/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=\ngithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c h1:+mdjkGKdHQG3305AYmdv1U2eRNDiU2ErMBj1gwrq8eQ=\ngithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c/go.mod h1:7rwL4CYBLnjLxUqIJNnCWiEdr3bn6IUYi15bNlnbCCU=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_golang v0.9.0-pre1.0.20180209125602-c332b6f63c06/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=\ngithub.com/prometheus/client_golang v1.1.0/go.mod h1:I1FGZT9+L76gKKOs5djB6ezCbFQP1xR9D75/vuwEF3g=\ngithub.com/prometheus/client_golang v1.20.5 h1:cxppBPuYhUnsO6yo/aoRol4L7q7UFfdm+bR9r+8l63Y=\ngithub.com/prometheus/client_golang v1.20.5/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=\ngithub.com/prometheus/client_model v0.0.0-20171117100541-99fa1f4be8e5/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=\ngithub.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=\ngithub.com/prometheus/common v0.0.0-20180110214958-89604d197083/go.mod h1:daVV7qP5qjZbuso7PdcryaAu0sAZbrN9i7WWcTMWvro=\ngithub.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.6.0/go.mod h1:eBmuwkDJBwy6iBfxCBob6t6dR6ENT/y+J+Zk0j9GMYc=\ngithub.com/prometheus/common v0.55.0 h1:KEi6DK7lXW/m7Ig5i47x0vRzuBsHuvJdi5ee6Y3G1dc=\ngithub.com/prometheus/common v0.55.0/go.mod h1:2SECS4xJG1kd8XF9IcM1gMX6510RAEL65zxzNImwdc8=\ngithub.com/prometheus/procfs v0.0.0-20180125133057-cb4147076ac7/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.0.3/go.mod h1:4A/X28fw3Fc593LaREMrKMqOKvUAntwMDaekg4FpcdQ=\ngithub.com/prometheus/procfs v0.15.1 h1:YagwOFzUgYfKKHX6Dr+sHT7km/hxC76UB0learggepc=\ngithub.com/prometheus/procfs v0.15.1/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=\ngithub.com/rivo/uniseg v0.2.0 h1:S1pD9weZBuJdFmowNwbpi7BJ8TNftyUImj/0WQi72jY=\ngithub.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sirupsen/logrus v1.0.6/go.mod h1:pMByvHTf9Beacp5x1UXfOR9xyW/9antXMhjMPG0dEzc=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.8.1/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/spf13/cast v0.0.0-20150508191742-4d07383ffe94 h1:JmfC365KywYwHB946TTiQWEb8kqPY+pybPLoGE9GgVk=\ngithub.com/spf13/cast v0.0.0-20150508191742-4d07383ffe94/go.mod h1:r2rcYCSwa1IExKTDiTfzaxqT2FNHs8hODu4LnUfgKEg=\ngithub.com/spf13/cobra v0.0.1/go.mod h1:1l0Ry5zgKvJasoi3XT1TypsSe7PqH0Sj9dhYf7v3XqQ=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/jwalterweatherman v0.0.0-20141219030609-3d60171a6431 h1:XTHrT015sxHyJ5FnQ0AeemSspZWaDq7DoTRW0EVsDCE=\ngithub.com/spf13/jwalterweatherman v0.0.0-20141219030609-3d60171a6431/go.mod h1:cQK4TGJAtQXfYWX+Ddv3mKDzgVb68N+wFjFa4jdeBTo=\ngithub.com/spf13/pflag v1.0.0/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/spf13/viper v0.0.0-20150530192845-be5ff3e4840c h1:2EejZtjFjKJGk71ANb+wtFK5EjUzUkEM3R0xnp559xg=\ngithub.com/spf13/viper v0.0.0-20150530192845-be5ff3e4840c/go.mod h1:A8kyI5cUJhb8N+3pkfONlcEcZbueH6nhAm0Fq7SrnBM=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.2.0/go.mod h1:qt09Ya8vawLte6SNmTgCsAVtYtaKzEcn8ATUoHMkEqE=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/theupdateframework/notary v0.7.1-0.20210315103452-bf96a202a09a h1:tlJ7tGUHvcvL1v3yR6NcCc9nOqh2L+CG6HWrYQtwzQ0=\ngithub.com/theupdateframework/notary v0.7.1-0.20210315103452-bf96a202a09a/go.mod h1:Y94A6rPp2OwNfP/7vmf8O2xx2IykP8pPXQ1DLouGnEw=\ngithub.com/tonistiigi/go-rosetta v0.0.0-20220804170347-3f4430f2d346 h1:TvtdmeYsYEij78hS4oxnwikoiLdIrgav3BA+CbhaDAI=\ngithub.com/tonistiigi/go-rosetta v0.0.0-20220804170347-3f4430f2d346/go.mod h1:xKQhd7snlzKFuUi1taTGWjpRE8iFTA06DeacYi3CVFQ=\ngithub.com/weppos/publicsuffix-go v0.15.1-0.20210511084619-b1f36a2d6c0b h1:FsyNrX12e5BkplJq7wKOLk0+C6LZ+KGXvuEcKUYm5ss=\ngithub.com/weppos/publicsuffix-go v0.15.1-0.20210511084619-b1f36a2d6c0b/go.mod h1:HYux0V0Zi04bHNwOHy4cXJVz/TQjYonnF6aoYhj+3QE=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb h1:zGWFAtiMcyryUHoUjUJX0/lt1H2+i2Ka2n+D3DImSNo=\ngithub.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=\ngithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415 h1:EzJWgHovont7NscjpAxXsDA8S8BMYve8Y5+7cuRE7R0=\ngithub.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415/go.mod h1:GwrjFmJcFw6At/Gs6z4yjiIwzuJ1/+UwLxMQDVQXShQ=\ngithub.com/xeipuuv/gojsonschema v1.2.0 h1:LhYJRs+L4fBtjZUfuSZIKGeVu0QRy8e5Xi7D17UxZ74=\ngithub.com/xeipuuv/gojsonschema v1.2.0/go.mod h1:anYRn/JVcOK2ZgGU+IjEV4nwlhoK5sQluxsYJ78Id3Y=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/zmap/zcrypto v0.0.0-20210511125630-18f1e0152cfc h1:zkGwegkOW709y0oiAraH/3D8njopUR/pARHv4tZZ6pw=\ngithub.com/zmap/zcrypto v0.0.0-20210511125630-18f1e0152cfc/go.mod h1:FM4U1E3NzlNMRnSUTU3P1UdukWhYGifqEsjk9fn7BCk=\ngithub.com/zmap/zlint/v3 v3.1.0 h1:WjVytZo79m/L1+/Mlphl09WBob6YTGljN5IGWZFpAv0=\ngithub.com/zmap/zlint/v3 v3.1.0/go.mod h1:L7t8s3sEKkb0A2BxGy1IWrxt1ZATa1R4QfJZaQOD3zU=\ngo.etcd.io/etcd/raft/v3 v3.5.16 h1:zBXA3ZUpYs1AwiLGPafYAKKl/CORn/uaxYDwlNwndAk=\ngo.etcd.io/etcd/raft/v3 v3.5.16/go.mod h1:P4UP14AxofMJ/54boWilabqqWoW9eLodl6I5GdGzazI=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0 h1:4K4tsIXefpVJtvA/8srF4V4y0akAoPHkIslgAkjixJA=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0/go.mod h1:jjdQuTGVsXV4vSs+CJ2qYDeDPf9yIJV23qlIzBm73Vg=\ngo.opentelemetry.io/otel v1.28.0 h1:/SqNcYk+idO0CxKEUOtKQClMK/MimZihKYMruSMViUo=\ngo.opentelemetry.io/otel v1.28.0/go.mod h1:q68ijF8Fc8CnMHKyzqL6akLO46ePnjkgfIMIjUIX9z4=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.28.0 h1:U2guen0GhqH8o/G2un8f/aG/y++OuW6MyCo6hT9prXk=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.28.0/go.mod h1:yeGZANgEcpdx/WK0IvvRFC+2oLiMS2u4L/0Rj2M2Qr0=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0 h1:3Q/xZUyC1BBkualc9ROb4G8qkH90LXEIICcs5zv1OYY=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0/go.mod h1:s75jGIWA9OfCMzF0xr+ZgfrB5FEbbV7UuYo32ahUiFI=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.28.0 h1:R3X6ZXmNPRR8ul6i3WgFURCHzaXjHdm0karRG/+dj3s=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.28.0/go.mod h1:QWFXnDavXWwMx2EEcZsf3yxgEKAqsxQ+Syjp+seyInw=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.28.0 h1:j9+03ymgYhPKmeXGk5Zu+cIZOlVzd9Zv7QIiyItjFBU=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.28.0/go.mod h1:Y5+XiUG4Emn1hTfciPzGPJaSI+RpDts6BnCIir0SLqk=\ngo.opentelemetry.io/otel/metric v1.28.0 h1:f0HGvSl1KRAU1DLgLGFjrwVyismPlnuU6JD6bOeuA5Q=\ngo.opentelemetry.io/otel/metric v1.28.0/go.mod h1:Fb1eVBFZmLVTMb6PPohq3TO9IIhUisDsbJoL/+uQW4s=\ngo.opentelemetry.io/otel/sdk v1.28.0 h1:b9d7hIry8yZsgtbmM0DKyPWMMUMlK9NEKuIG4aBqWyE=\ngo.opentelemetry.io/otel/sdk v1.28.0/go.mod h1:oYj7ClPUA7Iw3m+r7GeEjz0qckQRJK2B8zjcZEfu7Pg=\ngo.opentelemetry.io/otel/sdk/metric v1.28.0 h1:OkuaKgKrgAbYrrY0t92c+cC+2F6hsFNnCQArXCKlg08=\ngo.opentelemetry.io/otel/sdk/metric v1.28.0/go.mod h1:cWPjykihLAPvXKi4iZc1dpER3Jdq2Z0YLse3moQUCpg=\ngo.opentelemetry.io/otel/trace v1.28.0 h1:GhQ9cUuQGmNDd5BTCP2dAvv75RdMxEfTmYejp+lkx9g=\ngo.opentelemetry.io/otel/trace v1.28.0/go.mod h1:jPyXzNPg6da9+38HEwElrQiHlVMTnVfM3/yv2OlIHaI=\ngo.opentelemetry.io/proto/otlp v1.3.1 h1:TrMUixzpM0yuc/znrFTP9MMRh8trP93mkCiDVeXrui0=\ngo.opentelemetry.io/proto/otlp v1.3.1/go.mod h1:0X1WI4de4ZsLrrJNLAQbFeLCm3T7yBkR0XqQ7niQU+8=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190325154230-a5d413f7728c/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200302210943-78000ba7a073/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20201117144127-c1f2f97bffc9/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.33.0 h1:74SYHlV8BIgHIFC/LrYkOGIwL19eTYXQ5wc6TBuO36I=\ngolang.org/x/net v0.33.0/go.mod h1:HXLR5J+9DxmrqMwG9qjGCxZ+zKXxBru04zlTvWlWuN4=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190801041406-cbf593c0f2f3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191120155948-bd437916bb0e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210616094352-59db8d763f22/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201117132131-f5c789dd3221/go.mod h1:Nr5EML6q2oocZ2LXRh80K7BxOlk5/8JxuGnuhpl+muw=\ngolang.org/x/term v0.27.0 h1:WP60Sv1nlK1T6SupCHbXzSaN0b9wUmsPoRS9b61A23Q=\ngolang.org/x/term v0.27.0/go.mod h1:iMsnZpn0cago0GOrHO2+Y7u7JPn5AylBrcoWkElMTSM=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.6.0 h1:eTDhh4ZXt5Qf0augr54TN6suAUudPcawVZeIAPU7D4U=\ngolang.org/x/time v0.6.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241007155032-5fefd90f89a9 h1:T6rh4haD3GVYsgEfWExoCZA2o2FmbNyKpTuAxbEFPTg=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241007155032-5fefd90f89a9/go.mod h1:wp2WsuBYj6j8wUdo3ToZsdxxixbvQNAHqVJrTgi5E5M=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241007155032-5fefd90f89a9 h1:QCqS/PdaHTSWGvupk2F/ehwHtGc0/GYkT+3GAcR1CCc=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241007155032-5fefd90f89a9/go.mod h1:GX3210XPVPUjJbTUbvwI8f2IpZDMZuPJWDzDuebbviI=\ngoogle.golang.org/grpc v1.0.5/go.mod h1:yo6s7OP7yaDglbqo1J04qKzAhqBH6lvTonzMVmEdcZw=\ngoogle.golang.org/grpc v1.67.1 h1:zWnc1Vrcno+lHZCOofnIMvycFcc0QRGIzm9dhnDX68E=\ngoogle.golang.org/grpc v1.67.1/go.mod h1:1gLDyUQU7CTLJI90u3nXZ9ekeghjeM7pTDZlqFNg2AA=\ngoogle.golang.org/protobuf v1.35.2 h1:8Ar7bF+apOIoThw1EdZl0p1oWvMqTHmpA2fRTyZO8io=\ngoogle.golang.org/protobuf v1.35.2/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/airbrake/gobrake.v2 v2.0.9/go.mod h1:/h5ZAUhDkGaJfjzjKLSjv6zCL6O0LLBxU4K+aSYdM/U=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/cenkalti/backoff.v2 v2.2.1 h1:eJ9UAg01/HIHG987TwxvnzK2MgxXq97YY6rYDpY9aII=\ngopkg.in/cenkalti/backoff.v2 v2.2.1/go.mod h1:S0QdOvT2AlerfSBkp0O+dk+bbIMaNbEmVk876gPCthU=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=\ngopkg.in/gemnasium/logrus-airbrake-hook.v2 v2.1.2/go.mod h1:Xk6kEKp8OKb+X14hQBKWaSkCsqBpgog8nAV2xsGOxlo=\ngopkg.in/rethinkdb/rethinkdb-go.v6 v6.2.1 h1:d4KQkxAaAiRY2h5Zqis161Pv91A37uZyJOx73duwUwM=\ngopkg.in/rethinkdb/rethinkdb-go.v6 v6.2.1/go.mod h1:WbjuEoo1oadwzQ4apSDU+JTvmllEHtsNHS6y7vFc7iw=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngotest.tools/v3 v3.5.1 h1:EENdUnS3pdur5nybKYIh2Vfgc8IUNBjxDPSjtiJcOzU=\ngotest.tools/v3 v3.5.1/go.mod h1:isy3WKz7GK6uNw/sbHzfKBLvlvXwUyV06n6brMxxopU=\nk8s.io/klog/v2 v2.90.1 h1:m4bYOKall2MmOiRaR1J+We67Do7vm9KiQVlT96lnHUw=\nk8s.io/klog/v2 v2.90.1/go.mod h1:y1WjHnz7Dj687irZUWR/WLkLc5N1YHtjLdmgWjndZn0=\ntags.cncf.io/container-device-interface v0.8.0 h1:8bCFo/g9WODjWx3m6EYl3GfUG31eKJbaggyBDxEldRc=\ntags.cncf.io/container-device-interface v0.8.0/go.mod h1:Apb7N4VdILW0EVdEMRYXIDVRZfNJZ+kmEUss2kRRQ6Y=\n"
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}