{
  "metadata": {
    "timestamp": 1736567598343,
    "page": 183,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "aceld/zinx",
      "stars": 7165,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.02734375,
          "content": "*.aspx linguist-language=Go\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3212890625,
          "content": ".idea\n.vscode\n\n/zinx_app_demo/mmo_game/game_client/client_Data/\n/zinx_app_demt/mmo_game/mmo_game_log/\n*.log\n\n### bin\nexamples/zinx_server/zinx_server\nexamples/zinx_server/server\nexamples/zinx_client/client\n\n.DS_Store\n\n\nlog\n\n/examples/zinx_websocket/minicode/node_modules\n/examples/zinx_websocket/minicode/miniprogram_npm\n\nrebase\n"
        },
        {
          "name": ".golangci.yaml",
          "type": "blob",
          "size": 0.3251953125,
          "content": "run:\n  timeout: 30m\n  skip-dirs:\n  - examples\n\nlinters:\n  disable-all: true\n  enable:\n  #- unused\n  - ineffassign\n  - goimports\n  - gofmt\n  - misspell\n  - unparam\n  - unconvert\n  - govet\n  # - errcheck\n  - staticcheck\n\nlinters-settings:\n  staticcheck:\n    go: \"1.17\"\n    checks:\n    - \"all\"\n    - \"-SA1019\"\n\n  unused:\n    go: \"1.17\"\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0478515625,
          "content": "MIT License\n\nCopyright (c) 2024 Aceld(刘丹冰)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.068359375,
          "content": "\n.PHONY: build\n\nSERVICE := zinx\nCUR_PWD := $(shell pwd)\n\nSERVER_DEMO_PATH := $(CUR_PWD)/examples/zinx_server\nCLIENT_DEMO_PATH := $(CUR_PWD)/examples/zinx_client\nSERVER_DEMO_BIN := $(SERVER_DEMO_PATH)/server\nCLIENT_DEMO_BIN := $(CLIENT_DEMO_PATH)/client\n\nAUTHOR := $(shell git log --pretty=format:\"%an\"|head -n 1)\nVERSION := $(shell git rev-list HEAD | head -1)\nBUILD_INFO := $(shell git log --pretty=format:\"%s\" | head -1)\nBUILD_DATE := $(shell date +%Y-%m-%d\\ %H:%M:%S)\n\nexport GO111MODULE=on\n\nLD_FLAGS='-X \"$(SERVICE)/version.TAG=$(TAG)\" -X \"$(SERVICE)/version.VERSION=$(VERSION)\" -X \"$(SERVICE)/version.AUTHOR=$(AUTHOR)\" -X \"$(SERVICE)/version.BUILD_INFO=$(BUILD_INFO)\" -X \"$(SERVICE)/version.BUILD_DATE=$(BUILD_DATE)\"'\n\nTEST_FILES := znet/acceptdelay_test.go znet/acceptdelay.go\n\ndefault: build\n\nbuild:\n\tgo build  -ldflags $(LD_FLAGS) -gcflags \"-N\"  -o $(SERVER_DEMO_BIN) $(SERVER_DEMO_PATH)/main.go\n\tgo build  -ldflags $(LD_FLAGS) -gcflags \"-N\"  -o $(CLIENT_DEMO_BIN) $(CLIENT_DEMO_PATH)/main.go\n\ntest:\n\tgo test -v -cover $(TEST_FILES)\nclean:\n\trm $(SERVER_DEMO_BIN)\n\trm $(CLIENT_DEMO_BIN)\n"
        },
        {
          "name": "README-CN.md",
          "type": "blob",
          "size": 12.3486328125,
          "content": "# <img width=\"80px\" src=\"https://s2.ax1x.com/2019/10/09/u4yHo9.png\" /> \n\n[English](README.md) | 简体中文\n\n[![License](https://img.shields.io/badge/License-MIT-black.svg)](LICENSE)\n[![Discord](https://img.shields.io/badge/zinx-Discord在线社区-blue.svg)](https://discord.gg/xQ8Xxfyfcz)\n[![Gitter](https://img.shields.io/badge/zinx-Gitter在线交流-green.svg)](https://gitter.im/zinx_go/community)\n[![zinx tutorial](https://img.shields.io/badge/Zinx教程-YuQue-red.svg)](https://www.yuque.com/aceld/npyr8s/bgftov)\n[![Original Book of Zinx](https://img.shields.io/badge/原创书籍-YuQue-black.svg)](https://www.yuque.com/aceld)\n\nZinx 是一个基于Golang的轻量级并发服务器框架\n\n## 开发者文档\n\n[ < Zinx Wiki : English > ](https://github.com/aceld/zinx/wiki)\n\n[ < Zinx 文档 : 简体中文> ](https://www.yuque.com/aceld/tsgooa/sbvzgczh3hqz8q3l)\n\n> **说明**:目前zinx已经在很多企业进行开发使用，具体使用领域包括:后端模块的消息中转、长连接游戏服务器、Web框架中的消息处理插件等。zinx的定位是代码简洁，让更多的开发者迅速的了解框架的内脏细节并且可以快速基于zinx DIY(二次开发)一款适合自己企业场景的模块。\n\n---\n## zinx源码地址\n| platform | Entry | \n| ---- | ---- | \n|Github| https://github.com/aceld/zinx |\n|Gitcode|https://gitcode.com/aceld/zinx|\n|Gitee|https://gitee.com/Aceld/zinx|\n\n### 官网\nhttp://zinx.me\n\n---\n\n## 在线开发教程\n\n### 文字教程\n\n| platform | Entry | \n| ---- | ---- | \n| <img src=\"https://user-images.githubusercontent.com/7778936/236784004-b6d99e26-b1ab-4bc3-988e-7a46108b85fe.png\" width = \"100\" height = \"100\" alt=\"\" align=center />| [Zinx Framework tutorial-Lightweight server based on Golang](https://dev.to/aceld/1building-basic-services-with-zinx-framework-296e)| \n|<img src=\"https://user-images.githubusercontent.com/7778936/236784168-6528a9b8-d37b-4b02-a37c-b9988d7508d8.jpeg\" width = \"100\" height = \"100\" alt=\"\" align=center />|[《Golang轻量级并发服务器框架zinx》](https://www.yuque.com/aceld)|\n\n\n### 视频教程\n\n| platform | online video | \n| ---- | ---- | \n| <img src=\"https://s1.ax1x.com/2022/09/22/xFePUK.png\" width = \"100\" height = \"100\" alt=\"\" align=center />| [![zinx-BiliBili](https://s2.ax1x.com/2019/10/13/uv340S.jpg)](https://www.bilibili.com/video/av71067087)| \n| <img src=\"https://s1.ax1x.com/2022/09/22/xFesxJ.png\" width = \"100\" height = \"80\" alt=\"\" align=center />  | [![zinx-BiliBili](https://s2.ax1x.com/2019/10/13/uv340S.jpg)](https://www.douyin.com/video/6983301202939333891) |\n| <img src=\"https://s1.ax1x.com/2022/09/23/xkQcng.png\" width = \"100\" height = \"100\" alt=\"\" align=center />| [![zinx-youtube](https://s2.ax1x.com/2019/10/14/KSurCR.jpg)](https://www.youtube.com/watch?v=U95iF-HMWsU&list=PL_GrAPKmuajzeNI8HBTi-k5NQO1g0rM-A)| \n\n    \n## 一、写在前面\n\n我们为什么要做Zinx，Golang目前在服务器的应用框架很多，但是应用在游戏领域或者其他长连接的领域的轻量级企业框架甚少。\n\n设计Zinx的目的是我们可以通过Zinx框架来了解基于Golang编写一个TCP服务器的整体轮廓，让更多的Golang爱好者能深入浅出的去学习和认识这个领域。\n\nZinx框架的项目制作采用编码和学习教程同步进行，将开发的全部递进和迭代思维带入教程中，而不是一下子给大家一个非常完整的框架去学习，让很多人一头雾水，不知道该如何学起。\n\n教程会一个版本一个版本迭代，每个版本的添加功能都是微小的，让一个服务框架小白，循序渐进的曲线方式了解服务器框架的领域。\n\n当然，最后希望Zinx会有更多的人加入，给我们提出宝贵的意见，让Zinx成为真正的解决企业的服务器框架！在此感谢您的关注！\n\n\n\n\n## 二、初探Zinx架构\n![Zinx框架](https://user-images.githubusercontent.com/7778936/220058446-0ad45112-2225-4b71-b0d8-69a7f3cee5ca.jpg)\n\n![流程图](https://github.com/wenyoufu/testaaaaaa/blob/abc8a50078a86aed37e8af6082d1d867bc165c32/%E6%9C%AA%E5%91%BD%E5%90%8D%E6%B5%81%E7%A8%8B%E5%9B%BE%20(1).jpg?raw=true)\n![zinx-start](https://user-images.githubusercontent.com/7778936/126594039-98dddd10-ec6a-4881-9e06-a09ec34f1af7.gif)\n\n\n\n## 三、Zinx开发接口文档\n\n\n### （1）快速开始\n\n[<Zinx的Tcp调试工具>](https://github.com/xxl6097/tcptest)\n\n**版本**\nGolang 1.17+\n\nDownLoad zinx Source\n\n```bash\n$go get github.com/aceld/zinx\n```\n\n> note: Golang Version 1.17+\n\n#### Zinx-Server\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/aceld/zinx/ziface\"\n\t\"github.com/aceld/zinx/znet\"\n)\n\n// PingRouter MsgId=1的路由\ntype PingRouter struct {\n\tznet.BaseRouter\n}\n\n//Ping Handle MsgId=1的路由处理方法\nfunc (r *PingRouter) Handle(request ziface.IRequest) {\n\t//读取客户端的数据\n\tfmt.Println(\"recv from client : msgId=\", request.GetMsgID(), \", data=\", string(request.GetData()))\n}\n\nfunc main() {\n\t//1 创建一个server服务\n\ts := znet.NewServer()\n\n\t//2 配置路由\n\ts.AddRouter(1, &PingRouter{})\n\n\t//3 启动服务\n\ts.Serve()\n}\n\n```\n\nRun Server\n\n```bash\n$ go run server.go\n```\n\n```bash\n                                        \n              ██                        \n              ▀▀                        \n ████████   ████     ██▄████▄  ▀██  ██▀ \n     ▄█▀      ██     ██▀   ██    ████   \n   ▄█▀        ██     ██    ██    ▄██▄   \n ▄██▄▄▄▄▄  ▄▄▄██▄▄▄  ██    ██   ▄█▀▀█▄  \n ▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀  ▀▀    ▀▀  ▀▀▀  ▀▀▀ \n                                        \n┌──────────────────────────────────────────────────────┐\n│ [Github] https://github.com/aceld                    │\n│ [tutorial] https://www.yuque.com/aceld/npyr8s/bgftov │\n└──────────────────────────────────────────────────────┘\n[Zinx] Version: V1.0, MaxConn: 12000, MaxPacketSize: 4096\n===== Zinx Global Config =====\nTCPServer: <nil>\nHost: 0.0.0.0\nTCPPort: 8999\nName: ZinxServerApp\nVersion: V1.0\nMaxPacketSize: 4096\nMaxConn: 12000\nWorkerPoolSize: 10\nMaxWorkerTaskLen: 1024\nMaxMsgChanLen: 1024\nConfFilePath: /Users/Aceld/go/src/zinx-usage/quick_start/conf/zinx.json\nLogDir: /Users/Aceld/go/src/zinx-usage/quick_start/log\nLogFile: \nLogIsolationLevel: 0\nHeartbeatMax: 10\n==============================\n2023/03/09 18:39:49 [INFO]msghandler.go:61: Add api msgID = 1\n2023/03/09 18:39:49 [INFO]server.go:112: [START] Server name: ZinxServerApp,listenner at IP: 0.0.0.0, Port 8999 is starting\n2023/03/09 18:39:49 [INFO]msghandler.go:66: Worker ID = 0 is started.\n2023/03/09 18:39:49 [INFO]msghandler.go:66: Worker ID = 1 is started.\n2023/03/09 18:39:49 [INFO]msghandler.go:66: Worker ID = 3 is started.\n2023/03/09 18:39:49 [INFO]msghandler.go:66: Worker ID = 2 is started.\n2023/03/09 18:39:49 [INFO]msghandler.go:66: Worker ID = 4 is started.\n2023/03/09 18:39:49 [INFO]msghandler.go:66: Worker ID = 6 is started.\n2023/03/09 18:39:49 [INFO]msghandler.go:66: Worker ID = 7 is started.\n2023/03/09 18:39:49 [INFO]msghandler.go:66: Worker ID = 8 is started.\n2023/03/09 18:39:49 [INFO]msghandler.go:66: Worker ID = 9 is started.\n2023/03/09 18:39:49 [INFO]msghandler.go:66: Worker ID = 5 is started.\n2023/03/09 18:39:49 [INFO]server.go:134: [START] start Zinx server  ZinxServerApp succ, now listenning...\n\n```\n\n\n\n#### Zinx-Client\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/aceld/zinx/ziface\"\n\t\"github.com/aceld/zinx/znet\"\n\t\"time\"\n)\n\n//客户端自定义业务\nfunc pingLoop(conn ziface.IConnection) {\n\tfor {\n\t\terr := conn.SendMsg(1, []byte(\"Ping...Ping...Ping...[FromClient]\"))\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tbreak\n\t\t}\n\n\t\ttime.Sleep(1 * time.Second)\n\t}\n}\n\n//创建连接的时候执行\nfunc onClientStart(conn ziface.IConnection) {\n\tfmt.Println(\"onClientStart is Called ... \")\n\tgo pingLoop(conn)\n}\n\nfunc main() {\n\t//创建Client客户端\n\tclient := znet.NewClient(\"127.0.0.1\", 8999)\n\n\t//设置连接建立成功后的钩子函数\n\tclient.SetOnConnStart(onClientStart)\n\n\t//启动客户端\n\tclient.Start()\n\n\t//防止进程退出，等待中断信号\n\tselect {}\n}\n\n```\n\nRun Client\n\n```bash\n$ go run client.go \n2023/03/09 19:04:54 [INFO]client.go:73: [START] Zinx Client LocalAddr: 127.0.0.1:55294, RemoteAddr: 127.0.0.1:8999\n2023/03/09 19:04:54 [INFO]connection.go:354: ZINX CallOnConnStart....\n```\n\nTerminal of Zinx Print:\n```bash\nrecv from client : msgId= 1 , data= Ping...Ping...Ping...[FromClient]\nrecv from client : msgId= 1 , data= Ping...Ping...Ping...[FromClient]\nrecv from client : msgId= 1 , data= Ping...Ping...Ping...[FromClient]\nrecv from client : msgId= 1 , data= Ping...Ping...Ping...[FromClient]\nrecv from client : msgId= 1 , data= Ping...Ping...Ping...[FromClient]\nrecv from client : msgId= 1 , data= Ping...Ping...Ping...[FromClient]\n...\n```\n\n\n### （2）Zinx配置文件\n```json\n{\n  \"Name\":\"zinx v-0.10 demoApp\",\n  \"Host\":\"0.0.0.0\",\n  \"TCPPort\":9090,\n  \"MaxConn\":3,\n  \"WorkerPoolSize\":10,\n  \"LogDir\": \"./mylog\",\n  \"LogFile\":\"app.log\",\n  \"LogSaveDays\":15,\n  \"LogCons\": true,\n  \"LogIsolationLevel\":0\n}\n```\n\n`Name`:服务器应用名称\n\n`Host`:服务器IP\n\n`TcpPort`:服务器监听端口\n\n`MaxConn`:允许的客户端连接最大数量\n\n`WorkerPoolSize`:工作任务池最大工作Goroutine数量\n\n`LogDir`: 日志文件夹\n\n`LogFile`: 日志文件名称(如果不提供，则日志信息打印到Stderr)\n\n`LogIsolationLevel`: 日志隔离级别 0：全开, 1：关debug, 2：关debug/info, 3：关debug/info/warn \n\n---\n\n#### 开发者\n| **Zinx**                                               | **开发者**  |\n|--------------------------------------------------------| ----  | \n| [zinx](https://github.com/aceld/zinx)                  |刘丹冰([@aceld](https://github.com/aceld)) 张超([@zhngcho](https://github.com/zhngcho)) 高智辉Roger([@adsian](https://github.com/adsian)) 胡贵建([@huguijian](https://github.com/huguijian)) 张继瑀([@kstwoak](https://github.com/kstwoak)) 夏小力([@xxl6097](https://github.com/xxl6097)) 李志成([@clukboy](https://github.com/clukboy)）姚承政([@hcraM41](https://github.com/hcraM41)）李国杰([@LI-GUOJIE](https://github.com/LI-GUOJIE)）余喆宁([@YanHeDoki](https://github.com/YanHeDoki)）|\n| [moke-kit(微服务框架)](https://github.com/GStones/moke-kit) |GStones([@GStones](https://github.com/GStones))|\n| [zinx(C++)](https://github.com/marklion/zinx)          |刘洋([@marklion](https://github.com/marklion))|\n| [zinx(Lua)](https://github.com/huqitt/zinx-lua)        |胡琪([@huqitt](https://github.com/huqitt))|\n| [ginx(Java)](https://github.com/ModuleCode/ginx)       |ModuleCode([@ModuleCode](https://github.com/ModuleCode))|\n\n---\n\n感谢所有为zinx贡献的开发者\n\n\n<a href=\"https://github.com/aceld/zinx/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=aceld/zinx\" />\n</a>    \n\n\n---\n### 关于作者：\n\n作者：`Aceld(刘丹冰)`\n\n`mail`:\n[danbing.at@gmail.com](mailto:danbing.at@gmail.com)\n\n`github`:\n[https://github.com/aceld](https://github.com/aceld)\n\n`原创书籍`:\n[https://www.yuque.com/aceld](https://www.yuque.com/aceld)\n\n\n### 加入Zinx技术社区\n\n| platform | Entry | \n| ---- | ---- | \n| <img src=\"https://user-images.githubusercontent.com/7778936/236775008-6bd488e3-249a-4d43-8885-7e3889e11e2d.png\" width = \"100\" height = \"100\" alt=\"\" align=center />| https://discord.gg/xQ8Xxfyfcz| \n| <img src=\"https://user-images.githubusercontent.com/7778936/236775137-5381f8a6-f534-49c4-8628-e52bf245c3bc.jpeg\" width = \"100\" height = \"100\" alt=\"\" align=center />  | 加微信: `ace_ld`  或扫二维码，备注`zinx`即可。</br><img src=\"https://user-images.githubusercontent.com/7778936/236781258-2f0371bd-5797-49e8-a74c-680e9f15843d.png\" width = \"150\" height = \"150\" alt=\"\" align=center /> |\n|<img src=\"https://user-images.githubusercontent.com/7778936/236778547-9cdadfb6-0f62-48ac-851a-b940389038d0.jpeg\" width = \"100\" height = \"100\" alt=\"\" align=center />|<img src=\"https://s1.ax1x.com/2020/07/07/UFyUdx.th.jpg\" height = \"150\"  alt=\"\" align=center /> **WeChat Public Account** |\n|<img src=\"https://user-images.githubusercontent.com/7778936/236779000-70f16c8f-0eec-4b5f-9faa-e1d5229a43e0.png\" width = \"100\" height = \"100\" alt=\"\" align=center />|<img src=\"https://s1.ax1x.com/2020/07/07/UF6Y9S.th.png\" width = \"150\" height = \"150\" alt=\"\" align=center /> **QQ Group** |\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.6083984375,
          "content": "# <img width=\"80px\" src=\"https://s2.ax1x.com/2019/10/09/u4yHo9.png\" />\nEnglish | [简体中文](README-CN.md)\n\n[![License](https://img.shields.io/badge/License-MIT-black.svg)](LICENSE)\n[![Discord](https://img.shields.io/badge/zinx-Discord-blue.svg)](https://discord.gg/xQ8Xxfyfcz)\n[![Gitter](https://img.shields.io/badge/zinx-Gitter-green.svg)](https://gitter.im/zinx_go/community) \n[![zinx tutorial](https://img.shields.io/badge/ZinxTutorial-YuQue-red.svg)](https://www.yuque.com/aceld/npyr8s/bgftov) \n[![Original Book of Zinx](https://img.shields.io/badge/OriginalBook-YuQue-black.svg)](https://www.yuque.com/aceld)\n\nZinx is a lightweight concurrent server framework based on Golang.\n\n##  Document \n\n[ < Zinx Wiki : English > ](https://github.com/aceld/zinx/wiki)\n\n[ < Zinx 文档 : 简体中文> ](https://www.yuque.com/aceld/tsgooa/sbvzgczh3hqz8q3l)\n\n\n> **Note**: \n> Zinx has been widely used in many enterprises for development purposes, including message forwarding for backend modules, long-linked game servers, and message handling plugins for web frameworks. \n> Zinx is positioned as a framework with concise code that allows developers to quickly understand the internal details of the framework and easily customize it based on their own enterprise scenarios.\n\n---\n## Source of Zinx\n| platform | Entry | \n| ---- | ---- | \n|Github| https://github.com/aceld/zinx |\n|Gitcode|https://gitcode.com/aceld/zinx|\n|Gitee|https://gitee.com/Aceld/zinx|\n\n### Website\nhttp://zinx.me\n\n---\n## Online Tutorial\n\n| platform | Entry | \n| ---- | ---- | \n| <img src=\"https://user-images.githubusercontent.com/7778936/236784004-b6d99e26-b1ab-4bc3-988e-7a46108b85fe.png\" width = \"100\" height = \"100\" alt=\"\" align=center />| [Zinx Framework tutorial-Lightweight server based on Golang](https://dev.to/aceld/1building-basic-services-with-zinx-framework-296e)| \n|<img src=\"https://user-images.githubusercontent.com/7778936/236784168-6528a9b8-d37b-4b02-a37c-b9988d7508d8.jpeg\" width = \"100\" height = \"100\" alt=\"\" align=center />|[《Golang轻量级并发服务器框架zinx》](https://www.yuque.com/aceld)|\n\n\n## Online Tutorial Video\n\n| platform | online video | \n| ---- | ---- | \n| <img src=\"https://s1.ax1x.com/2022/09/22/xFePUK.png\" width = \"100\" height = \"100\" alt=\"\" align=center />| [![zinx-BiliBili](https://s2.ax1x.com/2019/10/13/uv340S.jpg)](https://www.bilibili.com/video/av71067087)| \n| <img src=\"https://s1.ax1x.com/2022/09/22/xFeRVx.png\" width = \"100\" height = \"100\" alt=\"\" align=center />  | [![zinx-BiliBili](https://s2.ax1x.com/2019/10/13/uv340S.jpg)](https://www.douyin.com/video/6983301202939333891) |\n| <img src=\"https://s1.ax1x.com/2022/09/23/xkQcng.png\" width = \"100\" height = \"100\" alt=\"\" align=center />| [![zinx-youtube](https://s2.ax1x.com/2019/10/14/KSurCR.jpg)](https://www.youtube.com/watch?v=U95iF-HMWsU&list=PL_GrAPKmuajzeNI8HBTi-k5NQO1g0rM-A)| \n\n\n## I. One word that has been said before\n\nWhy did we create Zinx? Although there are many Golang application frameworks for servers, there are few lightweight enterprise frameworks applied in the gaming or other long-linked fields.\n\nThe purpose of designing Zinx is to provide a complete outline of how to write a TCP server based on Golang, so that more Golang enthusiasts can learn and understand this field in a straightforward manner.\n\nThe development of the Zinx framework project is synchronized with the creation of learning tutorials, and all the incremental and iterative thinking involved in the development process is incorporated into the tutorials. This approach avoids overwhelming beginners with a complete framework that they may find difficult to grasp all at once.\n\nThe tutorials will be iterated version by version, with each version adding small increments of functionality, allowing a beginner to gradually and comprehensively learn about the field of server frameworks.\n\nOf course, we hope that more people will join Zinx and provide us with valuable feedback, enabling Zinx to become a truly enterprise-level server framework. Thank you for your attention!\n\n\n\n## II. Zinx architecture\n![Zinx框架](https://user-images.githubusercontent.com/7778936/220058446-0ad45112-2225-4b71-b0d8-69a7f3cee5ca.jpg)\n\n![流程图](https://raw.githubusercontent.com/wenyoufu/testaaaaaa/master/%E6%B5%81%E7%A8%8B%E5%9B%BE-en.jpg)\n![zinx-start](https://user-images.githubusercontent.com/7778936/126594039-98dddd10-ec6a-4881-9e06-a09ec34f1af7.gif)\n\n\n\n## III. Zinx development API documentation\n\n\n### (1) QuickStart\n\n[<Zinx's TCP Debugging Tool>](https://github.com/xxl6097/tcptest)\n\nDownLoad zinx Source\n\n```bash\n$go get github.com/aceld/zinx\n```\n\n> note: Golang Version 1.17+\n\n#### Zinx-Server\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/aceld/zinx/ziface\"\n\t\"github.com/aceld/zinx/znet\"\n)\n\n// PingRouter MsgId=1 \ntype PingRouter struct {\n\tznet.BaseRouter\n}\n\n//Ping Handle MsgId=1\nfunc (r *PingRouter) Handle(request ziface.IRequest) {\n\t//read client data\n\tfmt.Println(\"recv from client : msgId=\", request.GetMsgID(), \", data=\", string(request.GetData()))\n}\n\nfunc main() {\n\t//1 Create a server service\n\ts := znet.NewServer()\n\n\t//2 configure routing\n\ts.AddRouter(1, &PingRouter{})\n\n\t//3 start service\n\ts.Serve()\n}\n```\n\nRun Server\n\n```bash\n$ go run server.go\n```\n\n```bash\n                                        \n              ██                        \n              ▀▀                        \n ████████   ████     ██▄████▄  ▀██  ██▀ \n     ▄█▀      ██     ██▀   ██    ████   \n   ▄█▀        ██     ██    ██    ▄██▄   \n ▄██▄▄▄▄▄  ▄▄▄██▄▄▄  ██    ██   ▄█▀▀█▄  \n ▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀  ▀▀    ▀▀  ▀▀▀  ▀▀▀ \n                                        \n┌──────────────────────────────────────────────────────┐\n│ [Github] https://github.com/aceld                    │\n│ [tutorial] https://www.yuque.com/aceld/npyr8s/bgftov │\n└──────────────────────────────────────────────────────┘\n[Zinx] Version: V1.0, MaxConn: 12000, MaxPacketSize: 4096\n===== Zinx Global Config =====\nHost: 0.0.0.0\nTCPPort: 8999\nName: ZinxServerApp\nVersion: V1.0\nMaxPacketSize: 4096\nMaxConn: 12000\nWorkerPoolSize: 10\nMaxWorkerTaskLen: 1024\nMaxMsgChanLen: 1024\nConfFilePath: /Users/Aceld/go/src/zinx-usage/quick_start/conf/zinx.json\nLogDir: /Users/Aceld/go/src/zinx-usage/quick_start/log\nLogFile: \nLogIsolationLevel: 0\nHeartbeatMax: 10\n==============================\n2023/03/09 18:39:49 [INFO]msghandler.go:61: Add api msgID = 1\n2023/03/09 18:39:49 [INFO]server.go:112: [START] Server name: ZinxServerApp,listenner at IP: 0.0.0.0, Port 8999 is starting\n2023/03/09 18:39:49 [INFO]msghandler.go:66: Worker ID = 0 is started.\n2023/03/09 18:39:49 [INFO]msghandler.go:66: Worker ID = 1 is started.\n2023/03/09 18:39:49 [INFO]msghandler.go:66: Worker ID = 3 is started.\n2023/03/09 18:39:49 [INFO]msghandler.go:66: Worker ID = 2 is started.\n2023/03/09 18:39:49 [INFO]msghandler.go:66: Worker ID = 4 is started.\n2023/03/09 18:39:49 [INFO]msghandler.go:66: Worker ID = 6 is started.\n2023/03/09 18:39:49 [INFO]msghandler.go:66: Worker ID = 7 is started.\n2023/03/09 18:39:49 [INFO]msghandler.go:66: Worker ID = 8 is started.\n2023/03/09 18:39:49 [INFO]msghandler.go:66: Worker ID = 9 is started.\n2023/03/09 18:39:49 [INFO]msghandler.go:66: Worker ID = 5 is started.\n2023/03/09 18:39:49 [INFO]server.go:134: [START] start Zinx server  ZinxServerApp succ, now listenning...\n\n```\n\n\n\n#### Zinx-Client\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/aceld/zinx/ziface\"\n\t\"github.com/aceld/zinx/znet\"\n\t\"time\"\n)\n\n//Client custom business\nfunc pingLoop(conn ziface.IConnection) {\n\tfor {\n\t\terr := conn.SendMsg(1, []byte(\"Ping...Ping...Ping...[FromClient]\"))\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tbreak\n\t\t}\n\n\t\ttime.Sleep(1 * time.Second)\n\t}\n}\n\n//Executed when a connection is created\nfunc onClientStart(conn ziface.IConnection) {\n\tfmt.Println(\"onClientStart is Called ... \")\n\tgo pingLoop(conn)\n}\n\nfunc main() {\n\t//Create a client client\n\tclient := znet.NewClient(\"127.0.0.1\", 8999)\n\n\t//Set the hook function after the link is successfully established\n\tclient.SetOnConnStart(onClientStart)\n\n\t//start the client\n\tclient.Start()\n\n\t//Prevent the process from exiting, waiting for an interrupt signal\n\tselect {}\n}\n```\n\nRun Client\n\n```bash\n$ go run client.go \n2023/03/09 19:04:54 [INFO]client.go:73: [START] Zinx Client LocalAddr: 127.0.0.1:55294, RemoteAddr: 127.0.0.1:8999\n2023/03/09 19:04:54 [INFO]connection.go:354: ZINX CallOnConnStart....\n```\n\nTerminal of Zinx Print:\n```bash\nrecv from client : msgId= 1 , data= Ping...Ping...Ping...[FromClient]\nrecv from client : msgId= 1 , data= Ping...Ping...Ping...[FromClient]\nrecv from client : msgId= 1 , data= Ping...Ping...Ping...[FromClient]\nrecv from client : msgId= 1 , data= Ping...Ping...Ping...[FromClient]\nrecv from client : msgId= 1 , data= Ping...Ping...Ping...[FromClient]\nrecv from client : msgId= 1 , data= Ping...Ping...Ping...[FromClient]\n...\n```\n\n\n### (2) Zinx configuration file\n```json\n{\n  \"Name\":\"zinx v-0.10 demoApp\",\n  \"Host\":\"0.0.0.0\",\n  \"TCPPort\":9090,\n  \"MaxConn\":3,\n  \"WorkerPoolSize\":10,\n  \"LogDir\": \"./mylog\",\n  \"LogFile\":\"app.log\",\n  \"LogSaveDays\":15,\n  \"LogCons\": true,\n  \"LogIsolationLevel\":0\n}\n```\n\n`Name`:Server Application Name\n\n`Host`:Server IP\n\n`TcpPort`:Server listening port\n\n`MaxConn`:Maximum number of client links allowed\n\n`WorkerPoolSize`:Maximum number of working Goroutines in the work task pool\n\n`LogDir`: Log folder\n\n`LogFile`: Log file name (if not provided, log information is printed to Stderr)\n\n`LogIsolationLevel`: Log Isolation Level -0: Full On 1: Off debug 2: Off debug/info 3: Off debug/info/warn\n\n---\n\n\n#### Developers\n\n| **Zinx**                                                       | **Authors**  |\n|----------------------------------------------------------------| ----  | \n| [zinx](https://github.com/aceld/zinx)                          |刘丹冰([@aceld](https://github.com/aceld)) 张超([@zhngcho](https://github.com/zhngcho)) 高智辉Roger([@adsian](https://github.com/adsian)) 胡贵建([@huguijian](https://github.com/huguijian)) 张继瑀([@kstwoak](https://github.com/kstwoak)) 夏小力([@xxl6097](https://github.com/xxl6097)) 李志成([@clukboy](https://github.com/clukboy)）姚承政([@hcraM41](https://github.com/hcraM41)）李国杰([@LI-GUOJIE](https://github.com/LI-GUOJIE)）余喆宁([@YanHeDoki](https://github.com/YanHeDoki)）|\n| [moke-kit(Microservices)](https://github.com/GStones/moke-kit) |GStones([@GStones](https://github.com/GStones))|\n| [zinx(C++)](https://github.com/marklion/zinx)                  |刘洋([@marklion](https://github.com/marklion))|\n| [zinx(Lua)](https://github.com/huqitt/zinx-lua)                |胡琪([@huqitt](https://github.com/huqitt))|\n| [ginx(Java)](https://github.com/ModuleCode/ginx)               |ModuleCode([@ModuleCode](https://github.com/ModuleCode))|\n\n---\n\nThanks to all the developers who contributed to Zinx!\n\n<a href=\"https://github.com/aceld/zinx/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=aceld/zinx\" />\n</a>    \n\n\n---\n\n### About the author\n\n`name`：`Aceld(刘丹冰)`\n\n`mail`:\n[danbing.at@gmail.com](mailto:danbing.at@gmail.com)\n\n`github`:\n[https://github.com/aceld](https://github.com/aceld)\n\n`original work`:\n[https://www.yuque.com/aceld](https://www.yuque.com/aceld)\n\n### Join the Zinx community \n\n| platform | Entry | \n| ---- | ---- | \n| <img src=\"https://user-images.githubusercontent.com/7778936/236775008-6bd488e3-249a-4d43-8885-7e3889e11e2d.png\" width = \"100\" height = \"100\" alt=\"\" align=center />| https://discord.gg/xQ8Xxfyfcz| \n| <img src=\"https://user-images.githubusercontent.com/7778936/236775137-5381f8a6-f534-49c4-8628-e52bf245c3bc.jpeg\" width = \"100\" height = \"100\" alt=\"\" align=center />  | 加微信: `ace_ld`  或扫二维码，备注`zinx`即可。</br><img src=\"https://user-images.githubusercontent.com/7778936/236781258-2f0371bd-5797-49e8-a74c-680e9f15843d.png\" width = \"150\" height = \"150\" alt=\"\" align=center /> |\n|<img src=\"https://user-images.githubusercontent.com/7778936/236778547-9cdadfb6-0f62-48ac-851a-b940389038d0.jpeg\" width = \"100\" height = \"100\" alt=\"\" align=center />|<img src=\"https://s1.ax1x.com/2020/07/07/UFyUdx.th.jpg\" height = \"150\"  alt=\"\" align=center /> **WeChat Public Account** |\n|<img src=\"https://user-images.githubusercontent.com/7778936/236779000-70f16c8f-0eec-4b5f-9faa-e1d5229a43e0.png\" width = \"100\" height = \"100\" alt=\"\" align=center />|<img src=\"https://github.com/aceld/zinx/assets/7778936/461b409f-6337-48a8-826b-a7a746aaee31\" width = \"150\" height = \"150\" alt=\"\" align=center /> **QQ Group** |\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.916015625,
          "content": "module github.com/aceld/zinx\n\ngo 1.17\n\nrequire (\n\tgithub.com/gorilla/websocket v1.5.0\n\tgithub.com/stretchr/testify v1.8.1\n\tgithub.com/xtaci/kcp-go v5.4.20+incompatible\n\tgolang.org/x/net v0.33.0 // indirect\n\tgoogle.golang.org/protobuf v1.33.0 // indirect\n)\n\nrequire github.com/golang/protobuf v1.5.0\n\nrequire (\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/klauspost/cpuid/v2 v2.1.1 // indirect\n\tgithub.com/klauspost/reedsolomon v1.11.8 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/templexxx/cpufeat v0.0.0-20180724012125-cef66df7f161 // indirect\n\tgithub.com/templexxx/xor v0.0.0-20191217153810-f85b25db303b // indirect\n\tgithub.com/tjfoc/gmsm v1.4.1 // indirect\n\tgithub.com/xtaci/lossyconn v0.0.0-20200209145036-adba10fffc37 // indirect\n\tgolang.org/x/crypto v0.31.0 // indirect\n\tgolang.org/x/sys v0.28.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 16.7119140625,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.0 h1:LUVKkCeviFUMKqHa4tXIIij/lbhnMbP7Fn5wKdKkRh4=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5 h1:Khx7svrCpmxxtHBq5j2mp/xVjsi8hQMfNLvJFAlrGgU=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/gorilla/websocket v1.5.0 h1:PPwGk2jz7EePpoHN/+ClbZu8SPxiqlu12wZP/3sWmnc=\ngithub.com/gorilla/websocket v1.5.0/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/klauspost/cpuid/v2 v2.1.1 h1:t0wUqjowdm8ezddV5k0tLWVklVuvLJpoHeb4WBdydm0=\ngithub.com/klauspost/cpuid/v2 v2.1.1/go.mod h1:RVVoqg1df56z8g3pUjL/3lE5UfnlrJX8tyFgg4nqhuY=\ngithub.com/klauspost/reedsolomon v1.11.8 h1:s8RpUW5TK4hjr+djiOpbZJB4ksx+TdYbRH7vHQpwPOY=\ngithub.com/klauspost/reedsolomon v1.11.8/go.mod h1:4bXRN+cVzMdml6ti7qLouuYi32KHJ5MGv0Qd8a47h6A=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1 h1:w7B6lhMri9wdJUVmEZPGGhZzrYTPvgJArz7wNPgYKsk=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/templexxx/cpufeat v0.0.0-20180724012125-cef66df7f161 h1:89CEmDvlq/F7SJEOqkIdNDGJXrQIhuIx9D2DBXjavSU=\ngithub.com/templexxx/cpufeat v0.0.0-20180724012125-cef66df7f161/go.mod h1:wM7WEvslTq+iOEAMDLSzhVuOt5BRZ05WirO+b09GHQU=\ngithub.com/templexxx/xor v0.0.0-20191217153810-f85b25db303b h1:fj5tQ8acgNUr6O8LEplsxDhUIe2573iLkJc+PqnzZTI=\ngithub.com/templexxx/xor v0.0.0-20191217153810-f85b25db303b/go.mod h1:5XA7W9S6mni3h5uvOC75dA3m9CCCaS83lltmc0ukdi4=\ngithub.com/tjfoc/gmsm v1.4.1 h1:aMe1GlZb+0bLjn+cKTPEvvn9oUEBlJitaZiiBwsbgho=\ngithub.com/tjfoc/gmsm v1.4.1/go.mod h1:j4INPkHWMrhJb38G+J6W4Tw0AbuN8Thu3PbdVYhVcTE=\ngithub.com/xtaci/kcp-go v5.4.20+incompatible h1:TN1uey3Raw0sTz0Fg8GkfM0uH3YwzhnZWQ1bABv5xAg=\ngithub.com/xtaci/kcp-go v5.4.20+incompatible/go.mod h1:bN6vIwHQbfHaHtFpEssmWsN45a+AZwO7eyRCmEIbtvE=\ngithub.com/xtaci/lossyconn v0.0.0-20200209145036-adba10fffc37 h1:EWU6Pktpas0n8lLQwDsRyZfmkPeRbdgPtW609es+/9E=\ngithub.com/xtaci/lossyconn v0.0.0-20200209145036-adba10fffc37/go.mod h1:HpMP7DB2CyokmAh4lp0EQnnWhmycP/TvwBGzvuie+H0=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20201012173705-84dcc777aaee/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.13.0/go.mod h1:y6Z2r+Rw4iayiXXAIxJIDAJ1zMW4yaTpebo8fPOliYc=\ngolang.org/x/crypto v0.19.0/go.mod h1:Iy9bg/ha4yyC70EfRS8jz+B6ybOBKMaSxLj6P6oBDfU=\ngolang.org/x/crypto v0.21.0/go.mod h1:0BP7YvVV9gBbVKyeTG0Gyn+gZm94bibOW5BjDEYAOMs=\ngolang.org/x/crypto v0.23.0/go.mod h1:CKFgDieR+mRhux2Lsu27y0fO304Db0wZe70UKqHu0v8=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.12.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=\ngolang.org/x/mod v0.15.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/mod v0.17.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201010224723-4f7140c49acb/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=\ngolang.org/x/net v0.15.0/go.mod h1:idbUs1IY1+zTqbi8yxTbhexhEEk5ur9LInksu6HrEpk=\ngolang.org/x/net v0.21.0/go.mod h1:bIjVDfnllIU7BJ2DNgfnXvpSvtn8VRwhlsaeUTyUS44=\ngolang.org/x/net v0.23.0 h1:7EYJ93RZ9vYSZAIb2x3lnuvqO5zneoD6IvWjuhfxjTs=\ngolang.org/x/net v0.23.0/go.mod h1:JKghWKKOSdJwpW2GEx0Ja7fmaKnMsbu+MWVZTokSYmg=\ngolang.org/x/net v0.25.0 h1:d/OCCoBEUq33pjydKrGQhw7IlUPI2Oylr+8qLx49kac=\ngolang.org/x/net v0.25.0/go.mod h1:JkAGAh7GEvH74S6FOH42FLoXpXbE/aqXSrIQjXgsiwM=\ngolang.org/x/net v0.33.0 h1:74SYHlV8BIgHIFC/LrYkOGIwL19eTYXQ5wc6TBuO36I=\ngolang.org/x/net v0.33.0/go.mod h1:HXLR5J+9DxmrqMwG9qjGCxZ+zKXxBru04zlTvWlWuN4=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.3.0/go.mod h1:FU7BRWz2tNW+3quACPkgCx/L+uEAv1htQ0V83Z9Rj+Y=\ngolang.org/x/sync v0.6.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sync v0.7.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220704084225-05e143d24a9e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.12.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.18.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.20.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/telemetry v0.0.0-20240228155512-f48c80bd79b2/go.mod h1:TeRTkGYfJXctD9OcfyVLyj2J3IxLnKwHJR8f4D8a3YE=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=\ngolang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=\ngolang.org/x/term v0.12.0/go.mod h1:owVbMEjm3cBLCHdkQu9b1opXd4ETQWc3BhuQGKgXgvU=\ngolang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=\ngolang.org/x/term v0.18.0/go.mod h1:ILwASektA3OnRv7amZ1xhE/KTR+u50pbXfZ03+6Nx58=\ngolang.org/x/term v0.20.0/go.mod h1:8UkIAJTvZgivsXaD6/pH6U9ecQzZ45awqEOzuCvwpFY=\ngolang.org/x/term v0.27.0/go.mod h1:iMsnZpn0cago0GOrHO2+Y7u7JPn5AylBrcoWkElMTSM=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=\ngolang.org/x/text v0.13.0/go.mod h1:TvPlkZtksWOMsz7fbANvkp4WM8x/WCo/om8BMLbz+aE=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/text v0.15.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=\ngolang.org/x/tools v0.13.0/go.mod h1:HvlwmtVNQAhOuCjW7xxvovg8wbNq7LwfXh/k7wXUl58=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d/go.mod h1:aiJjzUbINMkxbQROHiO6hDPo2LHcIPhhQsa9DLh0yGk=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543 h1:E7g+9GITq07hpfrRu66IVDexMakfv52eLZ2CXBWiKr4=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.31.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.33.0 h1:uNO2rsAINq/JlFpSdYEKIZ0uKD/R9cpdv0T+yoGwGmI=\ngoogle.golang.org/protobuf v1.33.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405 h1:yhCVgyC4o1eVCa2tZl7eS0r+SDo693bJlVdllGtEeKM=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\n"
        },
        {
          "name": "logo",
          "type": "tree",
          "content": null
        },
        {
          "name": "zasync_op",
          "type": "tree",
          "content": null
        },
        {
          "name": "zconf",
          "type": "tree",
          "content": null
        },
        {
          "name": "zdecoder",
          "type": "tree",
          "content": null
        },
        {
          "name": "ziface",
          "type": "tree",
          "content": null
        },
        {
          "name": "zinterceptor",
          "type": "tree",
          "content": null
        },
        {
          "name": "zinx_app_demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "zlog",
          "type": "tree",
          "content": null
        },
        {
          "name": "znet",
          "type": "tree",
          "content": null
        },
        {
          "name": "znotify",
          "type": "tree",
          "content": null
        },
        {
          "name": "zpack",
          "type": "tree",
          "content": null
        },
        {
          "name": "ztimer",
          "type": "tree",
          "content": null
        },
        {
          "name": "zutils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}