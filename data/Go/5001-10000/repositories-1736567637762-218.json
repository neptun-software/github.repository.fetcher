{
  "metadata": {
    "timestamp": 1736567637762,
    "page": 218,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "docker/machine",
      "stars": 6637,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0302734375,
          "content": "docker-machine*\n*.log\nbin\ncover"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0302734375,
          "content": "*.log\n*.iml\n.idea/\n/bin/\ncover\n"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 0.8623046875,
          "content": "image: docker\n\nstages:\n- validate\n- build\n\nservices:\n- docker:dind\n\nvariables:\n  USE_CONTAINER: \"true\"\n  DOCKER_HOST: tcp://docker:2375\n  DOCKER_DRIVER: overlay\n\nbefore_script:\n- apk add -U make bash\n\n.build_base: &build_base\n  stage: build\n  before_script:\n  - apk add -U make bash\n  - export TARGET_OS=$(echo $CI_JOB_NAME | cut -d ' ' -f 1)\n  - export TARGET_ARCH=$(echo $CI_JOB_NAME | cut -d ' ' -f 2)\n  after_script:\n  - \"[[ \\\"$(find bin -type f -name docker-machine*)\\\" != \\\"\\\" ]]\"\n  artifacts:\n    paths:\n    - bin/\n    expire_in: 1 week\n  tags:\n  - docker\n  - privileged\n\n.build_validate: &build_validate\n  <<: *build_base\n  stage: validate\n  script: make build validate\n\n.build_x: &build_x\n  <<: *build_base\n  script: make build-x\n\ndarwin amd64: *build_x\nlinux amd64: *build_validate\nopenbsd amd64: *build_x\nwindows amd64: *build_x\nlinux arm: *build_x\nlinux arm64: *build_x\n\n"
        },
        {
          "name": ".godir",
          "type": "blob",
          "size": 0.025390625,
          "content": "github.com/docker/machine\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.537109375,
          "content": "sudo: required\ndist: trusty\nlanguage: bash\nservices: docker\nenv:\n  matrix:\n    - TARGET_OS=darwin TARGET_ARCH=amd64 TARGETS=\"build-x\"\n    - TARGET_OS=linux TARGET_ARCH=amd64 TARGETS=\"build validate\"\n    - TARGET_OS=openbsd TARGET_ARCH=amd64 TARGETS=\"build-x\"\n    - TARGET_OS=windows TARGET_ARCH=amd64 TARGETS=\"build-x\"\n    - TARGET_OS=linux TARGET_ARCH=arm TARGETS=\"build-x\"\n    - TARGET_OS=linux TARGET_ARCH=arm64 TARGETS=\"build-x\"\nscript:\n    - USE_CONTAINER=true make \"$TARGETS\"\n    - \"[[ \\\"$(find bin -type f -name docker-machine*)\\\" != \\\"\\\" ]]\"\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 28.4287109375,
          "content": "# Changelog\n\n# 0.16.0 (2018-11-08)\n\n### General\n\n- The default storage driver has been updated to `overlay2` for several systems\n- Improved error reporting for the `ssh` subcommand when using the `--native-ssh` flag\n\n### Drivers\n\n**amazonec2**\n\n- Improved handling of VPC errors\n\n**openstack**\n\n- Machine removal no longer fails upon attempting to delete a non-existing keypair\n\n# 0.15.0 (2018-06-12)\n\n## General\n\n- `docker-machine` can now be installed using `go install`.\n- Now built with go 1.10\n- Added keep-alive to SSH connections (#4450)\n\n## Drivers\n\n### amazonec2\n\n- Updated default AMIs to mitigate Meltdown and Spectre\n- Added `--amazonec2-security-group-readonly` flag to prevent mutating security groups\n\n### exoscale\n\n- Updated driver to v0.9.23\n\n### hyperv\n\n- Fixed Hyper-V pre-create issues (#4426)\n- Added the ability to disable Hyper-V dynamic memory management during VM creation (`--hyperv-disable-dynamic-memory`)\n\n### vmwarefusion\n\n- Improved shell checks (#4491)\n\n\n# 0.14.0 (2018-03-06)\n\n## General\n\n* Added `--client-certs` flag to the `docker-machine regenerate-certs` command.\n* Improved OpenBSD support\n* Fixed a bug with `scp` commands issued from a Windows host.\n* Enabled progress output by default for `scp` commands using `rsync`\n* Added `--quiet` flag to `scp` to suppress progress output\n* Machine now uses the `ss` command to detect connectivity when `netstat` is unavailable\n* Added bash completion for `docker-machine mount`\n* Improved provisioning resilience on Debian-based hosts\n\n## Drivers\n\n`amazonec2`\n* Added support for `eu-west-3` region\n* Upon failure, the `create` command now ensures dangling resources are cleaned up before exiting\n* Machine creation no longer fails when waiting on spot instance readiness\n\n`digitalocean`\n* Added `--digitalocean-monitoring` flag\n* Increased the default droplet size\n\n`exoscale`\n* Updated driver library\n* Several improvements and fixes to the default machine template\n* Added support for user-provided SSH key (`--exoscale-ssh-key`)\n* Added support for arbitrary disk size\n\n`google`\n* Enabled disk auto-deletion on newly created machines\n* Fixed a bug preventing the removal of a machine if it had already been removed remotely.\n* Added support for fully qualified network and subnetwork names\n\n`hyperv`\n* Fixed potential cmdlet collision with VMWare powercli\n* Fixed a bug with virtual switch selection\n* Machine now correctly detects if the user is a Hyper-V administrator when using a localized version of Windows\n\n`openstack`\n* Added `--openstack-config-drive` flag\n* Fixed an issue causing some user-uploaded keypairs to be removed when removing the associated machine.\n* Fixed a bug preventing the removal of a machine if it had already been removed remotely.\n\n`virtualbox`\n* Added OpenBSD support\n\n`vmwarefusion`\n* Improved error detection and reporting when creating a new instance\n\n`vmwarevsphere`\n* Added  `--vmwarevsphere-folder` flag\n\n\n# 0.13.0 (2017-10-12)\n\nGeneral\n\n- Added new `docker-machine mount` command for mounting machine directories over SSHFS\n- Improved some logging messages\n- Fixed a bug with the `scp` command when using an identity file.\n- Fixed a parsing error that caused the boot2docker ISO cache to malfunction, forcing a new download everytime.\n\nDrivers\n\n- `azure`\n  - `docker-machine rm` now also cleans up the associated storage account if it has no remaining storage containers.\n  - The creation process will no longer recreate the associated subnet if it already it exists.\n- `exoscale`\n  - Updated driver\n  - Removed default `docker-machine` affinity group if no other affinity group was specified\n- `virtualbox`\n  - Fixed a bug where the machine would sometimes be assigned an invalid IP address at creation time.\n- `vmwaresphere`\n  - Added support for multiple networks\n\n# 0.12.2 (2017-7-12)\n\nGeneral\n\n* The `scp` sub-command now allows to provide an optional `user@` to the address.\n* Fixed bash completion on OS X\n\nDrivers\n\n* `amazonec2`\n  * Updated default AMIs to the latest version of Ubuntu 16.04 LTS\n  * Fixed a bug preventing proper machine removal\n* `vmwarevsphere`\n  * Creating VMs on a DRS-enabled cluster should now work properly\n  * Fixed a bug that prevented provisioning\n* `vmwarefusion`\n  * Fixed a bug that prevented provisioning\n* `exoscale`\n  * Updated library\n\n# 0.12.1 (2017-6-30)\n\nGeneral\n\n- Fixed an issue with the version comparison function that prevented machines created with Engine 17.06.0 from starting properly.\n\n# 0.12.0 (2017-6-5)\n\nGeneral\n\n- Various bash completion improvements\n- Bump Go to version 1.8.3\n\nDrivers\n\n- `openstack`\n    - Enable `HTTP_PROXY`\n- `digitalocean`\n    - Add support for tagging\n- `virtualbox`\n    - Scope DHCP address range based on CIDR\n- `generic`\n    - Increase default timeout\n- `google`\n    - Add subnetwork support\n\nProvisioners\n\n- Remove restriction on `--engine-install-url` in default-to-boot2docker drivers (`virtualbox`, `vmwarefusion`, etc.)\n- Reduce provisioning time of SUSE/openSUSE systems\n\n# 0.11.0 (2017-4-25)\n\nGeneral\n\n- Various bugfixes and updated library dependencies\n- new `docker-machine scp --delta` to invoke `rsync` behind the scenes for more efficient transfer\n\nDrivers\n\n- `digitalocean`\n  - Add support for tagging DigitalOcean instances.\n- `google`\n  - Add support for subnetworks\n\n# 0.10.0 (2017-2-27)\n\nGeneral\n\n- Various improvements to shell tab completion\n- Add support for compiling on ARM64 architecture\n\nDrivers\n\n- Make `virtualbox` default driver\n- `amazonec2`\n    - Update AMIs to latest version of Ubuntu 16.04 LTS\n- `virtualbox`\n    - Fix parsing of `--virtualbox-share-folder` on Windows\n- `google`\n    - Add `--google-open-port` flag to specify additional ports to open\n\nProvisioners\n\n- Machine now uses systemd drop-in files instead of over-writing the system units\n- Add support for upgrade to new Docker versioning scheme\n- Use `dockerd` only in Docker versions where it is available\n- Support multiple architectures in SUSE provisioner\n\n# 0.9.0 (2017-1-17)\n\nGeneral\n- On Windows, the `COMPOSE_CONVERT_WINDOWS_PATHS` environment variable is now set by `docker-machine env` to improve Compose usability.\n- Docker Machine can now be built on FreeBSD\n- `docker-machine scp` non-22 port support\n- `scp` supports SSH agent\n- Bump Go version to 1.7.4\n\nDrivers\n- `amazonec2`\n  - Credentials can now be loaded from IAM instance profiles\n  - Add `--amazonec2-userdata` flag\n  - Add `--amazonec2-block-duration-minutes` flag\n  - Add support for `us-east-2` (Ohio)\n  - Update base images to Ubuntu 16.04\n- `azure`\n  - Add `--azure-dns` flag for specifying DNS names\n  - Add `--azure-storage-type` flag\n  - Allow using vnets from another resource group\n  - Add AzureGermanCloud support\n  - Add support for custom data\n  - Support Service Principal authentication\n  - Update base images to Ubuntu 16.04\n- `digitalocean`\n  - Add ability to speicify the private SSH key path\n- `gce`\n  - Update base images to Ubuntu 16.04\n- `virtualbox`\n  - Shared folder location can be specified instead of \"hardcoded\" to `C:\\Users` or `/Users`\n- `openstack`\n  - Add support for `OS_CACERT`\n\nProvisioners\n- OpenSUSE provisioner refactored to use properly supported 3rd party code\n\n\n# 0.8.2 (2016-8-26)\n\n- Update Go version to 1.7.1\n\n# 0.8.1 (2016-8-20)\n\nProvisioners\n- Fix issue with generated systemd service file on RedHat family distros\nDrivers\n- `azure`\n    - Bump Ubuntu image to 16.04\n    - Update docs with updated default parameters\n    - Change logging slightly\n\n# 0.8.0 (2016-6-14)\n\nGeneral\n- Fix issue with plugin heartbeat log repeating on disconnect\n- Add `tcsh` support to `env --shell`\n- Add `zsh` completion scripts\n- Bump Go version to 1.6.2\n\nDrivers\n- `amazonec2`\n    - Workaround to prevent orphaned SSH keys\n- `virtualbox`\n    - Add option for VM UI type (`--virtualbox-ui-type`)\n- `vmwarefusion`\n    - Fix CPU option inconsistency\n- `openstack`\n    - Expose user data parameter (`--openstack-user-data-file`)\n- `generic`\n    - Copy public key to created Machine directory\n\nProvisioners\n- Add Oracle Enterprise Linux support\n- Fix port binding of Swarm master\n- Add ability to create a manager instance which does not get scheduled on\n- Introduce `--swarm-join-opt` to pass options to agent nodes\n- Various SSH-related fixes\n- Fix state for upgrade path\n\n# 0.7.0 (2016-4-13)\n\nGeneral\n- `DRIVER` environment variable now supported to supply value for `create --driver` flag\n- Update to Go 1.6.1\n- SSH client has been refactored\n- RC versions of Machine will now create and upgrade to boot2docker RCs instead\n  of stable versions if available\n\nDrivers\n- `azure`\n    - Driver has been completely re-written to use resource templates and a significantly easier-to-use authentication model\n- `digitalocean`\n    - New `--digitalocean-ssh-key-fingerprint` for using existing SSH keys instead of creating new ones\n- `virtualbox`\n    - Fix issue with `bootlocal.sh`\n    - New `--virtualbox-nictype` flag to set driver for NAT network\n    - More robust host-only interface collision detection\n    - Add support for running VirtualBox on a Windows 32 bit host\n    - Change default DNS passthrough handling\n- `amazonec2`\n    - Specifying multiple security groups to use is now supported\n- `exoscale`\n    - Add support for user-data\n- `hyperv`\n    - Machines can now be created by a non-administrator\n- `rackspace`\n    - New `--rackspace-active-timeout` parameter\n- `vmwarefusion`\n    - Bind mount shared folder directory by default\n- `google`\n    - New `--google-use-internal-ip-only` parameter\n\nProvisioners\n- General\n    - Support for specifying Docker engine port in some cases\n- CentOS\n    - Now defaults to using upstream `get.docker.com` script instead of custom RPMs.\n- boot2docker\n    - More robust eth* interface detection\n- Swarm\n    - Add `--swarm-experimental` parameter to enable experimental Swarm features\n\n\n# 0.6.0 (2016-02-04)\n\n+ Fix SSH wait before provisioning issue\n\n# 0.6.0-rc4 (2016-02-03)\n\nGeneral\n\n+ `env`\n    + Fix shell auto detection\n\nDrivers\n\n+ `exoscale`\n    + Fix configuration of exoscale endpoint\n\n# 0.6.0-rc3 (2016-02-01)\n\n- Exit with code 3 if error is during pre-create check\n\n# 0.6.0-rc2 (2016-01-28)\n\n- Fix issue creating Swarms\n- Fix `ls` header issue\n- Add code to wait for Docker daemon before returning from `start` / `restart`\n- Start porting integration tests to Go from BATS\n- Add Appveyor for Windows tests\n- Update CoreOS provisioner to use `docker daemon`\n- Various documentation and error message fixes\n- Add ability to create GCE machine using existing VM\n\n# 0.6.0-rc1 (2016-01-18)\n\nGeneral\n\n- Update to Go 1.5.3\n- Short form of command invocations is now supported\n    - `docker-machine start`, `docker-machine stop` and others will now use\n      `default` as the machine name argument if one is not specified\n- Fix issue with panics in drivers\n- Machine now returns exit code 3 if the pre-create check fails.\n    - This is potentially useful for scripting `docker-machine`.\n- `docker-machine provision` command added to allow re-running of provisioning\n  on instances.\n    - This allows users to re-run provisioning if it fails during `create`\n      instead of needing to completely start over.\n\nProvisioning\n\n- Most provisioners now use `docker daemon` instead of `docker -d`\n- Swarm masters now run with replication enabled\n- If `/var/lib` is a BTRFS partition, `btrfs` will now be used as the storage\n  driver for the instance\n\nDrivers\n\n- Amazon EC2\n    - Default VPC will be used automatically if none is specified\n    - Credentials are now be read from the conventional `~/.aws/credentials`\n      file automatically\n    - Fix a few issues such as nil pointer dereferences\n- VMware Fusion\n    - Try to get IP from multiple DHCP lease files\n- OpenStack\n    - Only derive tenant ID if tenant name is supplied\n\n# 0.5.6 (2016-01-11)\n\nGeneral\n\n- `create`\n  - Set swarm master to advertise on port 3376\n  - Fix swarm restart policy\n  - Stop asking for ssh key passwords interactively\n- `env`\n  - Improve documentation\n  - Fix bash on windows\n  - Automatic shell detection on Windows\n- `help`\n  - Don't show the full path to `docker-machine.exe` on windows\n- `ls`\n  - Allow custom format\n  - Improve documentation\n- `restart`\n  - Improve documentation\n- `rm`\n  - Improve documentation\n  - Better user experience when removing multiple hosts\n- `version`\n  - Don't show the full path to `docker-machine.exe` on windows\n- `start`, `stop`, `restart`, `kill`\n  - Better logs and homogeneous behaviour across all drivers\n\nBuild\n\n- Introduce CI tests for external binary compatibility\n- Add amazon EC2 integration test\n\nMisc\n\n- Improve BugSnags reports: better shell detection, better windows version detection\n- Update DockerClient dependency\n- Improve bash-completion script\n- Improve documentation for bash-completion\n\nDrivers\n\n- Amazon EC2\n  - Improve documentation\n  - Support optional tags\n  - Option to create EbsOptimized instances\n- Google\n  - Fix remove when instance is stopped\n- Openstack\n  - Flags to import and reuse existing nova keypairs\n- VirtualBox\n  - Fix multiple bugs related to host-only adapters\n  - Retry commands when `VBoxManage` is not ready\n  - Reject VirtualBox versions older that 4.3\n  - Fail with a clear message when Hyper-v installation prevents VirtualBox from working\n  - Print a warning for Boot2Docker v1.9.1, which is known to have an issue with AUFS\n- Vmware Fusion\n  - Support soft links in VM paths\n\nLibmachine\n\n- Fix code sample that uses libmachine\n- libmachine can be used in external applications\n\n\n# 0.5.5 (2015-12-28)\n\nGeneral\n\n- `env`\n  - Better error message if swarm is down\n  - Add quotes to command if there are spaces in the path\n  - Fix Powershell env hints\n  - Default to cmd shell on windows\n  - Detect fish shell\n- `scp`\n  - Ignore empty ssh key\n- `stop`, `start`, `kill`\n  - Add feedback to the user\n- `rm`\n  - Now works when `config.json` is not found\n- `ssh`\n  - Disable ControlPath\n  - Log which SSH client is used\n- `ls`\n  - Listing is now faster by reducing calls to the driver\n  - Shows if the active machine is a swarm cluster\n\nBuild\n\n- Automate 90% of the release process\n- Upgrade to Go 1.5.2\n- Don't build 32bits binaries for Linux and OSX\n- Prevent makefile from defaulting to using containers\n\nMisc\n\n- Update docker-machine version\n- Updated the bash completion with new options added\n- Bugsnag: Retrieve windows version on non-English OS\n\nDrivers\n\n- Amazon EC2\n  - Convert API calls to official SDK\n  - Make DeviceName configurable\n- Digital Ocean\n  - Custom SSH port support\n- Generic\n  - Don't support `kill` since `stop` is not supported\n- Google\n  - Coreos provisionning\n- Hyper-V\n  - Lot's of code simplifications\n  - Pre-Check that the user is an Administrator\n  - Pre-Check that the virtual switch exists\n  - Add Environment variables for each flag\n  - Fix how Powershell is detected\n  - VSwitch name should be saved to config.json\n  - Add a flag to set the CPU count\n  - Close handle after copying boot2docker.iso into vm folder - will otherwise keep hyper-v from starting vm\n  - Update Boot2Docker cache in PreCreateCheck phase\n- OpenStack\n - Filter floating IPs by tenant ID\n- Virtualbox\n  - Reject duplicate hostonlyifs Name/IP with clear message\n  - Detect when hostonlyif can't be created. Point to known working version of VirtualBox\n  - Don't create the VM if no hardware virtualization is available and add a flag to force create\n  - Add `VBox.log` to bugsnag crashreport\n  - Update Boot2Docker cache in PreCreateCheck phase\n  - Detect Incompatibility with Hyper-v\n- VSphere\n - Rewrite driver to work with govmomi instead of wrapping govc\n- All\n  - Change host restart to use the driver implementation\n  - Fix truncated logs\n  - Increase heartbeat interval and timeout\n\nProvisioners\n\n- Download latest Boot2Docker if it is out-of-date\n- Add swarm config to coreos\n- All provisioners now honor `engine-install-url`\n\n# 0.5.4 (2015-12-28)\n\nThis is a patch release to fix a regression with STDOUT/STDERR behavior (#2587).\n\n# 0.5.3 (2015-12-14)\n\n**Please note**: With this release Machine will be reverting back to distribution in a single binary, which is more efficient on bandwidth and hard disk space. All the core driver plugins are now included in the main binary. You will want to delete the old driver binaries that you might have in your path.\n\ne.g.:\n\n```console\n$ rm /usr/local/bin/docker-machine-driver-{amazonec2,azure,digitalocean,exoscale,generic,google,hyperv,none,openstack,rackspace,softlayer,virtualbox,vmwarefusion,vmwarevcloudair,vmwarevsphere}\n```\n\nNon-core driver plugins should still work as intended (in externally distributed binaries of the form `docker-machine-driver-name`.  Please report any issues you encounter them with externally loaded plugins.\n\nGeneral\n\n- Optionally report crashes to Bugsnag to help us improve docker-machine\n- Fix multiple nil dereferences in `docker-machine ls` command\n- Improve the build and CI\n- `docker-machine env` now supports emacs\n- Run Swarm containers in provisioning step using Docker API instead of SSH/shell\n- Show docker daemon version in `docker-machine ls`\n- `docker-machine ls` can filter by engine label\n- `docker-machine ls` filters are case insensitive\n- `--timeout` flag for `docker-machine ls`\n- Logs use `logrus` library\n- Swarm container network is now `host`\n- Added advertise flag to Swarm manager template\n- Fix `help` flag for `docker-machine ssh`\n- Add confirmation `-y` flag to `docker-machine rm`\n- Fix `docker-machine config` for fish\n- Embed all core drivers in `docker-machine` binary to reduce the bundle from 120M to 15M\n\nDrivers\n\n- Generic\n\t- Support password protected ssh keys though ssh-agent\n\t- Support DNS names\n- Virtualbox\n\t- Show a warning if virtualbox is too old\n\t- Recognize yet another Hardware Virtualization issue pattern\n\t- Fix Hardware Virtualization on Linux/AMD\n\t- Add the `--virtualbox-host-dns-resolver` flag\n\t- Allow virtualbox DNSProxy override\n- Google\n\t- Open firewall port for Swarm when needed\n- VMware Fusion\n\t- Explicitly set umask before invoking vmrun in vmwarefusion\n\t- Activate the plugin only on OSX\n\t- Add id/gid option to mount when using vmhgfs\n\t- Fix for vSphere driver boot2docker ISO issues\n- Digital Ocean\n\t- Support for creating Droplets with Cloud-init User Data\n- Openstack\n\t- Sanitize keynames by replacing dots with underscores\n- All\n\t- Most base images are now set to `Ubuntu 15.10`\n\t- Fix compatibility with drivers developed with docker-machine 0.5.0\n\t- Better error report for broken/incompatible drivers\n\t- Don't break `config.json` configuration when the disk is full\n\nProvisioners\n\n- Increase timeout for installing boot2docker\n- Support `Ubuntu 15.10`\n\nMisc\n\n- Improve the documentation\n- Update known drivers list\n\n# 0.5.2 (2015-11-30)\n\nGeneral\n\n-   Bash autocompletion and helpers fixed\n-   Remove `RawDriver` from `config.json` - Driver parameters can now be edited\n    directly again in this file.\n-   Change fish `env` variable setting to be global\n-   Add `docker-machine version` command\n-   Move back to normal `codegangsta/cli` upstream\n-   `--tls-san` flag for extra SANs\n\nDrivers\n\n-   Fix `GetURL` IPv6 compatibility\n-   Add documentation page for available 3rd party drivers\n-   VirtualBox\n    -   Support for shared folders and virtualization detection on Linux hosts\n    -   Improved detection of invalid host-only interface settings\n-   Google\n    -   Update default images\n-   VMware Fusion\n    -   Add option to disable shared folder\n-   Generic\n    -   New environment variables for flags\n\nProvisioners\n\n-   Support for Ubuntu >=15.04.  This means Ubuntu machines can be created which\n    work with `overlay` driver of lib network.\n-   Fix issue with current netstat / daemon availability checking\n\n# 0.5.1 (2015-11-16)\n\n-   Fixed boot2docker VM import regression\n-   Fix regression breaking `docker-machine env -u` to unset environment variables\n-   Enhanced virtualization capability detection and `VBoxManage` path detection\n-   Properly lock VirtualBox access when running several commands concurrently\n-   Allow plugins to write to STDOUT without `--debug` enabled\n-   Fix Rackspace driver regression\n-   Support colons in `docker-machine scp` filepaths\n-   Pass environment variables for provisioned Engines to Swarm as well\n-   Various enhancements around boot2docker ISO upgrade (progress bar, increased timeout)\n\n# 0.5.0 (2015-11-1)\n\n-   General\n    -   Add pluggable driver model\n    -   Clean up code to be more modular and reusable in `libmachine`\n    -   Add `--github-api-token` for situations where users are getting rate limited\n        by GitHub attempting to get the current `boot2docker.iso` version\n    -   Various enhancements around the Makefile and build toolchain (still an active WIP)\n    -   Disable SSH multiplex explicitly in commands run with the \"External\" client\n    -   Show \"-\" for \"inactive\" machines instead of nothing\n    -   Make daemon status detection more robust\n-   Provisioners\n    -   New CoreOS, SUSE, and Arch Linux provisioners\n    -   Fixes around package installation / upgrade code on Debian and Ubuntu\n-   CLI\n    -   Support for regular expression pattern matching and matching by names in `ls --filter`\n    -   `--no-proxy` flag for `env` (sets `NO_PROXY` in addition to other environment variables)\n-   Drivers\n    -   `openstack`\n        -   `--openstack-ip-version` parameter\n        -   `--openstack-active-timeout` parameter\n    -   `google`\n        -   fix destructive behavior of `start` / `stop`\n    -   `hyperv`\n        -   fix issues with PowerShell\n    -   `vmwarefusion`\n        -   some issues with shared folders fixed\n        -   `--vmwarefusion-configdrive-url` option for configuration via `cloud-init`\n    -   `amazonec2`\n        -   `--amazonec2-use-private-address` option to use private networking\n    -   `virtualbox`\n        -   Enhancements around robustness of the created host-only network\n        -   Fix IPv6 network mask prefix parsing\n        -   `--virtualbox-no-share` option to disable the automatic home directory mount\n        -   `--virtualbox-hostonly-nictype` and `--virtualbox-hostonly-nicpromisc` for controlling settings around the created hostonly NIC\n\n# 0.4.1 (2015-08)\n\n-   Fixes `upgrade` functionality on Debian based systems\n-   Fixes `upgrade` functionality on Ubuntu based systems\n\n# 0.4.0 (2015-08-11)\n\n## Updates\n\n-   HTTP Proxy support for Docker Engine\n-   RedHat distros now use Docker Yum repositories\n-   Ability to set environment variables in the Docker Engine\n-   Internal libmachine updates for stability\n\n## Drivers\n\n-   Google:\n    -   Preemptible instances\n    -   Static IP support\n\n## Fixes\n\n-   Swarm Discovery Flag is verified\n-   Timeout added to `ls` command to prevent hangups\n-   SSH command failure now reports information about error\n-   Configuration migration updates\n\n# 0.3.0 (2015-06-18)\n\n## Features\n\n-   Engine option configuration (ability to configure all engine options)\n-   Swarm option configuration (ability to configure all swarm options)\n-   New Provisioning system to allow for greater flexibility and stability for installing and configuring Docker\n-   New Provisioners\n    -   Rancher OS\n    -   RedHat Enterprise Linux 7.0+ (experimental)\n    -   Fedora 21+ (experimental)\n    -   Debian 8+ (experimental)\n-   PowerShell support (configure Windows Docker CLI)\n-   Command Prompt (cmd.exe) support (configure Windows Docker CLI)\n-   Filter command help by driver\n-   Ability to import Boot2Docker instances\n-   Boot2Docker CLI migration guide (experimental)\n-   Format option for `inspect` command\n-   New logging output format to improve readability and display across platforms\n-   Updated \"active\" machine concept - now is implicit according to `DOCKER_HOST` environment variable.  Note: this removes the implicit \"active\" machine and can no longer be specified with the `active` command.  You change the \"active\" host by using the `env` command instead.\n-   Specify Swarm version (`--swarm-image` flag)\n\n## Drivers\n\n-   New: Exoscale Driver\n-   New: Generic Driver (provision any host with supported base OS and SSH)\n-   Amazon EC2\n    -   SSH user is configurable\n    -   Support for Spot instances\n    -   Add option to use private address only\n    -   Base AMI updated to 20150417\n-   Google\n    -   Support custom disk types\n    -   Updated base image to v20150316\n-   Openstack\n    -   Support for Keystone v3 domains\n-   Rackspace\n    -   Misc fixes including environment variable for Flavor Id and stability\n-   Softlayer\n    -   Enable local disk as provisioning option\n    -   Fixes for SSH access errors\n    -   Fixed bug where public IP would always be returned when requesting private\n    -   Add support for specifying public and private VLAN IDs\n-   VirtualBox\n    -   Use Intel network interface driver (adds great stability)\n    -   Stability fixes for NAT access\n    -   Use DNS pass through\n    -   Default CPU to single core for improved performance\n    -   Enable shared folder support for Windows hosts\n-   VMware Fusion\n    -   Boot2Docker ISO updated\n    -   Shared folder support\n\n## Fixes\n\n-   Provisioning improvements to ensure Docker is available\n-   SSH improvements for provisioning stability\n-   Fixed SSH key generation bug on Windows\n-   Help formatting for improved readability\n\n## Breaking Changes\n\n-   \"Short-Form\" name reference no longer supported Instead of \"docker-machine \" implying the active host you must now use docker-machine\n-   VMware shared folders require Boot2Docker 1.7\n\n## Special Thanks\n\nWe would like to thank all contributors.  Machine would not be where it is\nwithout you.  We would also like to give special thanks to the following\ncontributors for outstanding contributions to the project:\n\n-   @frapposelli for VMware updates and fixes\n-   @hairyhenderson for several improvements to Softlayer driver, inspect formatting and lots of fixes\n-   @ibuildthecloud for rancher os provisioning\n-   @sthulb for portable SSH library                                              \n-   @vincentbernat for exoscale                                                   \n-   @zchee for Amazon updates and great doc updates\n\n# 0.2.0 (2015-04-16)\n\nCore Stability and Driver Updates\n\n## Core\n\n-   Support for system proxy environment\n-   New command to regenerate TLS certificates\n    -   Note: this will restart the Docker engine to apply\n-   Updates to driver operations (create, start, stop, etc) for better reliability\n-   New internal `libmachine` package for internal api (not ready for public usage)\n-   Updated Driver Interface\n    -   [Driver Spec](https://github.com/docker/machine/blob/master/docs/DRIVER_SPEC.md)\n    -   Removed host provisioning from Drivers to enable a more consistent install\n    -   Removed SSH commands from each Driver for more consistent operations\n-   Swarm: machine now uses Swarm default binpacking strategy\n\n## Driver Updates\n\n-   All drivers updated to new Driver interface\n-   Amazon EC2\n    -   Better checking for subnets on creation\n    -   Support for using Private IPs in VPC\n    -   Fixed bug with duplicate security group authorization with Swarm\n    -   Support for IAM instance profile\n    -   Fixed bug where IP was not properly detected upon stop\n-   DigitalOcean\n    -   IPv6 support\n    -   Backup option\n    -   Private Networking\n-   Openstack / Rackspace\n    -   Gophercloud updated to latest version\n    -   New insecure flag to disable TLS (use with caution)\n-   Google\n    -   Google source image updated\n    -   Ability to specify auth token via file\n-   VMware Fusion\n    -   Paravirtualized driver for disk (pvscsi)\n    -   Enhanced paravirtualized NIC (vmxnet3)\n    -   Power option updates\n    -   SSH keys persistent across reboots\n    -   Stop now gracefully stops VM\n    -   vCPUs now match host CPUs\n-   SoftLayer\n    -   Fixed provision bug where `curl` was not present\n-   VirtualBox\n    -   Correct power operations with Saved VM state\n    -   Fixed bug where image option was ignored\n\n## CLI\n\n-   Auto-regeneration of TLS certificates when TLS error is detected\n    -   Note: this will restart the Docker engine to apply\n-   Minor UI updates including improved sorting and updated command docs\n-   Bug with `config` and `env` with spaces fixed\n    -   Note: you now must use `eval $(docker-machine env machine)` to load environment settings\n-   Updates to better support `fish` shell\n-   Use `--tlsverify` for both `config` and `env` commands\n-   Commands now use eval for better interoperability with shell\n\n## Testing\n\n-   New integration test framework (bats)\n\n# 0.1.0 (2015-02-26)\n\nInitial beta release.\n\n-   Provision Docker Engines using multiple drivers\n-   Provide light management for the machines\n    -   Create, Start, Stop, Restart, Kill, Remove, SSH\n-   Configure the Docker Engine for secure communication (TLS)\n-   Easily switch target machine for fast configuration of Docker Engine client\n-   Provision Swarm clusters (experimental)\n\n## Included drivers\n\n-   Amazon EC2\n-   Digital Ocean\n-   Google\n-   Microsoft Azure\n-   Microsoft Hyper-V\n-   Openstack\n-   Rackspace\n-   VirtualBox\n-   VMware Fusion\n-   VMware vCloud Air\n-   VMware vSphere\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 8.5419921875,
          "content": "# Contributing to machine\n\n[![GoDoc](https://godoc.org/github.com/docker/machine?status.png)](https://godoc.org/github.com/docker/machine)\n[![Build Status](https://travis-ci.org/docker/machine.svg?branch=master)](https://travis-ci.org/docker/machine)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/github/docker/machine?svg=true)](https://ci.appveyor.com/project/dmp42/machine-fp5u5)\n[![Coverage Status](https://coveralls.io/repos/docker/machine/badge.svg?branch=master&service=github)](https://coveralls.io/github/docker/machine?branch=master)\n\nWant to hack on Machine? Awesome! Here are instructions to get you\nstarted.\n\nMachine is a part of the [Docker](https://www.docker.com) project, and follows\nthe same rules and principles. If you're already familiar with the way\nDocker does things, you'll feel right at home.\n\nOtherwise, please read [Docker's contributions\nguidelines](https://github.com/docker/docker/blob/master/CONTRIBUTING.md).\n\n# Building\n\nThe requirements to build Machine are:\n\n1.  A running instance of Docker or a Golang 1.10 development environment\n2.  The `bash` shell\n3.  [Make](https://www.gnu.org/software/make/)\n\n## Build using Docker containers\n\nTo build the `docker-machine` binary using containers, simply run:\n\n    $ export USE_CONTAINER=true\n    $ make build\n\n## Local Go development environment\n\nMake sure the source code directory is under a correct directory structure;\nExample of cloning and preparing the correct environment `GOPATH`:\n\n    $ mkdir docker-machine\n    $ cd docker-machine\n    $ export GOPATH=\"$PWD\"\n    $ go get github.com/docker/machine\n    $ cd src/github.com/docker/machine\n\nIf you want to use your existing workspace, make sure your `GOPATH` is set to\nthe directory that contains your `src` directory, e.g.:\n\n    $ export GOPATH=/home/yourname/work\n    $ mkdir -p $GOPATH/src/github.com/docker\n    $ cd $GOPATH/src/github.com/docker && git clone git@github.com:docker/machine.git\n    $ cd machine\n\nAt this point, simply run:\n\n    $ make build\n\n## Built binary\n\nAfter the build is complete a `bin/docker-machine` binary will be created.\n\nYou may call:\n\n    $ make clean\n\nto clean-up build results.\n\n## Tests and validation\n\nWe use the usual `go` tools for this, to run those commands you need at least the linter which you can\ninstall with `go get -u golang.org/x/lint/golint`\n\nTo run basic validation (dco, fmt), and the project unit tests, call:\n\n    $ make test\n\nIf you want more indepth validation (vet, lint), and all tests with race detection, call:\n\n    $ make validate\n\nIf you make a pull request, it is highly encouraged that you submit tests for\nthe code that you have added or modified in the same pull request.\n\n## Code Coverage\n\nTo generate an html code coverage report of the Machine codebase, run:\n\n    make coverage-serve\n\nAnd navigate to <http://localhost:8000> (hit `CTRL+C` to stop the server).\n\n### Native build\n\nAlternatively, if you are building natively, you can simply run:\n\n    make coverage-html\n\n\n## List of all targets\n\n### High-level targets\n\n    make clean\n    make build\n    make test\n    make validate\n\n### Advanced build targets\n\nBuild for all supported OSes and architectures (binaries will be in the `bin` project subfolder):\n\n    make build-x\n\nBuild for a specific list of OSes and architectures:\n\n    TARGET_OS=linux TARGET_ARCH=\"amd64 arm\" make build-x\n\nYou can further control build options through the following environment variables:\n\n    DEBUG=true # enable debug build\n    STATIC=true # build static (note: when cross-compiling, the build is always static)\n    VERBOSE=true # verbose output\n    PREFIX=folder # put binaries in another folder (not the default `./bin`)\n\nScrub build results:\n\n    make build-clean\n\n### Coverage targets\n\n    make coverage-html\n    make coverage-serve\n    make coverage-send\n    make coverage-generate\n    make coverage-clean\n\n### Tests targets\n\n    make test-short\n    make test-long\n    make test-integration\n\n### Validation targets\n\n    make fmt\n    make vet\n    make lint\n    make dco\n\n### Managing dependencies\n\nWhen you make a fresh copy of the repo, all the dependencies are in `vendor/` directory for the build to work.\nThis project uses [golang/dep](https://github.com/golang/dep) as vendor management tool. Please refer to `dep` documentation\nfor further details.\n\n4. Verify the changes in your repo, commit and submit a pull request\n\n## Integration Tests\n\n### Setup\n\nWe use [BATS](https://github.com/sstephenson/bats) for integration testing, so,\nfirst make sure to [install it](https://github.com/sstephenson/bats#installing-bats-from-source).\n\n### Basic Usage\n\nYou first need to build, calling `make build`.\n\nYou can then invoke integration tests calling `DRIVER=foo make test-integration TESTSUITE`, where `TESTSUITE` is\none of the `test/integration` subfolder, and `foo` is the specific driver you want to test.\n\nExamples:\n\n```console\n$ DRIVER=virtualbox make test-integration test/integration/core/core-commands.bats\n ✓ virtualbox: machine should not exist\n ✓ virtualbox: create\n ✓ virtualbox: ls\n ✓ virtualbox: run busybox container\n ✓ virtualbox: url\n ✓ virtualbox: ip\n ✓ virtualbox: ssh\n ✓ virtualbox: docker commands with the socket should work\n ✓ virtualbox: stop\n ✓ virtualbox: machine should show stopped after stop\n ✓ virtualbox: machine should now allow upgrade when stopped\n ✓ virtualbox: start\n ✓ virtualbox: machine should show running after start\n ✓ virtualbox: kill\n ✓ virtualbox: machine should show stopped after kill\n ✓ virtualbox: restart\n ✓ virtualbox: machine should show running after restart\n\n17 tests, 0 failures\nCleaning up machines...\nSuccessfully removed bats-virtualbox-test\n```\n\nTo invoke a directory of tests recursively:\n\n```console\n$ DRIVER=virtualbox make test-integration test/integration/core/\n...\n```\n\n### Extra Create Arguments\n\nIn some cases, for instance to test the creation of a specific base OS (e.g.\nRHEL) as opposed to the default with the common tests, you may want to run\ncommon tests with different create arguments than you get out of the box.\n\nKeep in mind that Machine supports environment variables for many of these\nflags.  So, for instance, you could run the command (substituting, of course,\nthe proper secrets):\n\n    $ DRIVER=amazonec2 \\\n      AWS_VPC_ID=vpc-xxxxxxx \\\n      AWS_SECRET_ACCESS_KEY=yyyyyyyyyyyyy \\\n      AWS_ACCESS_KEY_ID=zzzzzzzzzzzzzzzz \\\n      AWS_AMI=ami-12663b7a \\\n      AWS_SSH_USER=ec2-user \\\n      make test-integration test/integration/core\n\nin order to run the core tests on Red Hat Enterprise Linux on Amazon.\n\n### Layout\n\nThe `test/integration` directory is laid out to divide up tests based on the\nareas which the test.  If you are uncertain where to put yours, we are happy to\nguide you.\n\nAt the time of writing, there is:\n\n1.  A `core` directory which contains tests that are applicable to all drivers.\n2.  A `drivers` directory which contains tests that are applicable only to\n    specific drivers with sub-directories for each provider.\n3.  A `cli` directory which is meant for testing functionality of the command\n    line interface, without much regard for driver-specific details.\n\n### Guidelines\n\nThe best practices for writing integration tests on Docker Machine are still a\nwork in progress, but here are some general guidelines from the maintainers:\n\n1.  Ideally, each test file should have only one concern.\n2.  Tests generally should not spin up more than one machine unless the test is\n    deliberately testing something which involves multiple machines, such as an `ls`\n    test which involves several machines, or a test intended to create and check\n    some property of a Swarm cluster.\n3.  BATS will print the output of commands executed during a test if the test\n    fails.  This can be useful, for instance to dump the magic `$output` variable\n    that BATS provides and/or to get debugging information.\n4.  It is not strictly needed to clean up the machines as part of the test.  The\n    BATS wrapper script has a hook to take care of cleaning up all created machines\n    after each test.\n\n# Drivers\n\nDocker Machine has several included drivers that supports provisioning hosts\nin various providers.  If you wish to contribute a driver, we ask the following\nto ensure we keep the driver in a consistent and stable state:\n\n-   Address issues filed against this driver in a timely manner\n-   Review PRs for the driver\n-   Be responsible for maintaining the infrastructure to run unit tests\n    and integration tests on the new supported environment\n-   Participate in a weekly driver maintainer meeting\n\n\nNote: even if those are met does not guarantee a driver will be accepted.\nIf you have questions, please do not hesitate to contact us on IRC.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.419921875,
          "content": "FROM golang:1.12.9\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n                openssh-client \\\n                rsync \\\n                fuse \\\n                sshfs \\\n        && rm -rf /var/lib/apt/lists/*\n\nRUN go get  golang.org/x/lint/golint \\\n            github.com/mattn/goveralls \\\n            golang.org/x/tools/cover\n\nENV USER root\nWORKDIR /go/src/github.com/docker/machine\n\nCOPY . ./\nRUN mkdir bin\n"
        },
        {
          "name": "Gopkg.lock",
          "type": "blob",
          "size": 14.26953125,
          "content": "# This file is autogenerated, do not edit; changes may be undone by the next 'dep ensure'.\n\n\n[[projects]]\n  digest = \"1:1c1c2c5c3cd554a489b36c951d1267e1be7f1deb16b63908f35fdbc3b926af59\"\n  name = \"github.com/Azure/azure-sdk-for-go\"\n  packages = [\n    \"arm/compute\",\n    \"arm/network\",\n    \"arm/resources/resources\",\n    \"arm/resources/subscriptions\",\n    \"arm/storage\",\n    \"storage\",\n  ]\n  pruneopts = \"UT\"\n  revision = \"91f3d4a4d024e3c0d4d9412916d05cf84504a616\"\n  version = \"v5.0.0-beta\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:6da51e5ec493ad2b44cb04129e2d0a068c8fb9bd6cb5739d199573558696bb94\"\n  name = \"github.com/Azure/go-ansiterm\"\n  packages = [\n    \".\",\n    \"winterm\",\n  ]\n  pruneopts = \"UT\"\n  revision = \"d6e3b3328b783f23731bc4d058875b0371ff8109\"\n\n[[projects]]\n  digest = \"1:7119b0c081a1995d08827e697a94447a922dd57ec4b55962c91cc64c81f363a3\"\n  name = \"github.com/Azure/go-autorest\"\n  packages = [\n    \"autorest\",\n    \"autorest/azure\",\n    \"autorest/date\",\n    \"autorest/to\",\n    \"autorest/validation\",\n  ]\n  pruneopts = \"UT\"\n  revision = \"0781901f19f1e7db3034d97ec57af753db0bf808\"\n  version = \"v7.2.1\"\n\n[[projects]]\n  digest = \"1:3e3787c889e4c6600e320ae16abfde18cac2c1f96948180be584665a35ee3ec2\"\n  name = \"github.com/aws/aws-sdk-go\"\n  packages = [\n    \"aws\",\n    \"aws/awserr\",\n    \"aws/awsutil\",\n    \"aws/client\",\n    \"aws/client/metadata\",\n    \"aws/corehandlers\",\n    \"aws/credentials\",\n    \"aws/credentials/ec2rolecreds\",\n    \"aws/credentials/endpointcreds\",\n    \"aws/credentials/stscreds\",\n    \"aws/defaults\",\n    \"aws/ec2metadata\",\n    \"aws/request\",\n    \"aws/session\",\n    \"aws/signer/v4\",\n    \"private/endpoints\",\n    \"private/protocol\",\n    \"private/protocol/ec2query\",\n    \"private/protocol/query\",\n    \"private/protocol/query/queryutil\",\n    \"private/protocol/rest\",\n    \"private/protocol/xml/xmlutil\",\n    \"private/waiter\",\n    \"service/ec2\",\n    \"service/sts\",\n  ]\n  pruneopts = \"UT\"\n  revision = \"ddfd17ec06eee10c24c5c474633273fd034afdda\"\n  version = \"v1.4.10\"\n\n[[projects]]\n  digest = \"1:676da826460e2bef9b36b2b1fe93fc73c781937d2c70ca459e41c9f3277d2c55\"\n  name = \"github.com/bugsnag/bugsnag-go\"\n  packages = [\n    \".\",\n    \"errors\",\n  ]\n  pruneopts = \"UT\"\n  revision = \"02e952891c52fbcb15f113d90633897355783b6e\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:3c8a443f16dd3c3639c7650c19af5b1a0686402f1949dafd18352d15239d9b05\"\n  name = \"github.com/bugsnag/osext\"\n  packages = [\".\"]\n  pruneopts = \"UT\"\n  revision = \"0dd3f918b21bec95ace9dc86c7e70266cfc5c702\"\n\n[[projects]]\n  digest = \"1:a99e9f7f0ef9aecfcfafc43152d4c928471ad16335b7141aa1347be6d76db1c2\"\n  name = \"github.com/bugsnag/panicwrap\"\n  packages = [\".\"]\n  pruneopts = \"UT\"\n  revision = \"aceac81c6e2f55f23844821679a0553b545e91df\"\n  version = \"1.1.0\"\n\n[[projects]]\n  digest = \"1:f50c858ba1549c39fedde09546274f73991a1525870bd2ab575d35b956d2d246\"\n  name = \"github.com/cenkalti/backoff\"\n  packages = [\".\"]\n  pruneopts = \"UT\"\n  revision = \"9831e1e25c874e0a0601b6dc43641071414eec7a\"\n\n[[projects]]\n  digest = \"1:af8559c18ec5d3a1a388dedaa0e790437bb99917845e37a2e4533767b02c3961\"\n  name = \"github.com/codegangsta/cli\"\n  packages = [\".\"]\n  pruneopts = \"UT\"\n  revision = \"0302d3914d2a6ad61404584cdae6e6dbc9c03599\"\n\n[[projects]]\n  digest = \"1:620bade21ddf8256869717861431d52650c7e40bc56bdcd3d5ec3da63e7573b0\"\n  name = \"github.com/davecgh/go-spew\"\n  packages = [\"spew\"]\n  pruneopts = \"UT\"\n  revision = \"5215b55f46b2b919f50a1df0eaa5886afe4e3b3d\"\n\n[[projects]]\n  digest = \"1:02630c70b55ecda2dcb85805170923d8389c632487568ccffadc5482e8a191ed\"\n  name = \"github.com/dgrijalva/jwt-go\"\n  packages = [\".\"]\n  pruneopts = \"UT\"\n  revision = \"24c63f56522a87ec5339cc3567883f1039378fdb\"\n\n[[projects]]\n  digest = \"1:b41bcd468fe0882b4cd1591274dc6d007dc3c947758f34807c83200899637e4f\"\n  name = \"github.com/digitalocean/godo\"\n  packages = [\".\"]\n  pruneopts = \"UT\"\n  revision = \"d59ed2fe842bbb3cbee91c9df8bb7659dc9ee86f\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:5c709df1e94c6dbee6fdd9699b11e3cdfa06870b1e828e9311e4e879b2ae6a4a\"\n  name = \"github.com/docker/docker\"\n  packages = [\n    \"pkg/term\",\n    \"pkg/term/windows\",\n  ]\n  pruneopts = \"UT\"\n  revision = \"093424bec097cdf51154255226cf999d6824633b\"\n\n[[projects]]\n  digest = \"1:fe12e1ba38626f7f147bd12a8f1f2e9e24d259b4258fb81a2c27e2a705c04b25\"\n  name = \"github.com/docker/go-units\"\n  packages = [\".\"]\n  pruneopts = \"UT\"\n  revision = \"0bbddae09c5a5419a8c6dcdd7ff90da3d450393b\"\n\n[[projects]]\n  digest = \"1:7515ee368d2554cccaecdb552cf602e7a555139ffe45aad7500294fc14bcf2e1\"\n  name = \"github.com/exoscale/egoscale\"\n  packages = [\".\"]\n  pruneopts = \"UT\"\n  revision = \"432a702ab7d709538572f9a2a42eaf0ca0691698\"\n  version = \"v0.9.23\"\n\n[[projects]]\n  digest = \"1:ad48c8fd2fb8c747d8798f19890f70b18091196274a773550a9e5dffa9e165d1\"\n  name = \"github.com/go-ini/ini\"\n  packages = [\".\"]\n  pruneopts = \"UT\"\n  revision = \"03e0e7d51a13a91c765d8d0161246bc14a38001a\"\n\n[[projects]]\n  digest = \"1:922ab7a624d8398c8e986beefc25052b26e02a8ac6bba5dc507bda11adbd878b\"\n  name = \"github.com/golang/protobuf\"\n  packages = [\"proto\"]\n  pruneopts = \"UT\"\n  revision = \"3c84672111d91bb5ac31719e112f9f7126a0e26e\"\n\n[[projects]]\n  digest = \"1:5235d8c3e7894393db3e5b1947818966b41e5ae8a5fa5d9c42f6586975894d01\"\n  name = \"github.com/google/go-querystring\"\n  packages = [\"query\"]\n  pruneopts = \"UT\"\n  revision = \"30f7a39f4a218feb5325f3aebc60c32a572a8274\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:67214f4b22f886c6bc60830382255e3b345d3e1c5aef07d64fe6931aee8baedd\"\n  name = \"github.com/intel-go/cpuid\"\n  packages = [\".\"]\n  pruneopts = \"UT\"\n  revision = \"1a4a6f06a1c643c8fbd339bd61d980960627d09e\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:5c3444689562053b027ef3b96372e306adbe0d7d109b6cdd48d01eb80f8bab14\"\n  name = \"github.com/jinzhu/copier\"\n  packages = [\".\"]\n  pruneopts = \"UT\"\n  revision = \"7e38e58719c33e0d44d585c4ab477a30f8cb82dd\"\n\n[[projects]]\n  digest = \"1:b87714e57a511d88f307aba7d5b63522da12bed0a050889c81272fc50f71100e\"\n  name = \"github.com/jmespath/go-jmespath\"\n  packages = [\".\"]\n  pruneopts = \"UT\"\n  revision = \"3433f3ea46d9f8019119e7dd41274e112a2359a9\"\n  version = \"0.2.2\"\n\n[[projects]]\n  digest = \"1:481d1ca274189bb298947b76bb522b7e2ee494b7ca3206c705c008a02b5124cf\"\n  name = \"github.com/mitchellh/mapstructure\"\n  packages = [\".\"]\n  pruneopts = \"UT\"\n  revision = \"740c764bc6149d3f1806231418adb9f52c11bcbf\"\n\n[[projects]]\n  digest = \"1:0028cb19b2e4c3112225cd871870f2d9cf49b9b4276531f03438a88e94be86fe\"\n  name = \"github.com/pmezard/go-difflib\"\n  packages = [\"difflib\"]\n  pruneopts = \"UT\"\n  revision = \"792786c7400a136282c1664665ae0a8db921c6c2\"\n  version = \"v1.0.0\"\n\n[[projects]]\n  digest = \"1:89249eaf359dc2b64431f1d37a8da136ee3714852f9f5bf4bad4a41f160fcac4\"\n  name = \"github.com/rackspace/gophercloud\"\n  packages = [\n    \".\",\n    \"openstack\",\n    \"openstack/compute/v2/extensions/floatingip\",\n    \"openstack/compute/v2/extensions/keypairs\",\n    \"openstack/compute/v2/extensions/startstop\",\n    \"openstack/compute/v2/flavors\",\n    \"openstack/compute/v2/images\",\n    \"openstack/compute/v2/servers\",\n    \"openstack/identity/v2/tenants\",\n    \"openstack/identity/v2/tokens\",\n    \"openstack/identity/v3/tokens\",\n    \"openstack/networking/v2/extensions/layer3/floatingips\",\n    \"openstack/networking/v2/networks\",\n    \"openstack/networking/v2/ports\",\n    \"openstack/utils\",\n    \"pagination\",\n    \"rackspace\",\n    \"rackspace/identity/v2/tokens\",\n    \"testhelper\",\n    \"testhelper/client\",\n  ]\n  pruneopts = \"UT\"\n  revision = \"ce0f487f6747ab43c4e4404722df25349385bebd\"\n\n[[projects]]\n  digest = \"1:26409dfc790d25c654c75f396bd0329a10fc487c389ff7837733aea23bfc7880\"\n  name = \"github.com/samalba/dockerclient\"\n  packages = [\".\"]\n  pruneopts = \"UT\"\n  revision = \"f661dd4754aa5c52da85d04b5871ee0e11f4b59c\"\n\n[[projects]]\n  digest = \"1:5622116f2c79239f2d25d47b881e14f96a8b8c17b63b8a8326a38ee1a332b007\"\n  name = \"github.com/sirupsen/logrus\"\n  packages = [\".\"]\n  pruneopts = \"UT\"\n  revision = \"d682213848ed68c0a260ca37d6dd5ace8423f5ba\"\n  version = \"v1.0.4\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:d72aa3b5f0cf546d1ee54079b31a17f6d3495157a2aaf0d2d7c00954370915df\"\n  name = \"github.com/skarademir/naturalsort\"\n  packages = [\".\"]\n  pruneopts = \"UT\"\n  revision = \"69a5d87bef620f77ee8508db30c846b3b84b111e\"\n\n[[projects]]\n  digest = \"1:9bf0f8c6684cd6cb34d838c6f8a07043d6c48be79ffe271cae99633990f8d786\"\n  name = \"github.com/stretchr/objx\"\n  packages = [\".\"]\n  pruneopts = \"UT\"\n  revision = \"1a9d0bb9f541897e62256577b352fdbc1fb4fd94\"\n\n[[projects]]\n  digest = \"1:ce346aa04e3c6989aa128ec6778fb4dff403e3077d48e5204c96704f35efe2e0\"\n  name = \"github.com/stretchr/testify\"\n  packages = [\n    \"assert\",\n    \"mock\",\n  ]\n  pruneopts = \"UT\"\n  revision = \"1f4a1643a57e798696635ea4c126e9127adb7d3c\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:595e123593925253dd02152777ddb8cd42300c4f61e783e163b053802547c47c\"\n  name = \"github.com/tent/http-link-go\"\n  packages = [\".\"]\n  pruneopts = \"UT\"\n  revision = \"ac974c61c2f990f4115b119354b5e0b47550e888\"\n\n[[projects]]\n  digest = \"1:0f79aac7325bae1fd3c5b3013d886a212a3a81471a8381058d1f6a455bc158a6\"\n  name = \"github.com/vmware/govcloudair\"\n  packages = [\n    \".\",\n    \"types/v56\",\n  ]\n  pruneopts = \"UT\"\n  revision = \"66a23eaabc61518f91769939ff541886fe1dceef\"\n  version = \"v0.0.2\"\n\n[[projects]]\n  digest = \"1:46a5783efbdb552f34f2fcac90f3b0bbe790a169153706be69bf22dabdcbf337\"\n  name = \"github.com/vmware/govmomi\"\n  packages = [\n    \".\",\n    \"find\",\n    \"guest\",\n    \"list\",\n    \"object\",\n    \"property\",\n    \"session\",\n    \"task\",\n    \"vim25\",\n    \"vim25/debug\",\n    \"vim25/methods\",\n    \"vim25/mo\",\n    \"vim25/progress\",\n    \"vim25/soap\",\n    \"vim25/types\",\n    \"vim25/xml\",\n  ]\n  pruneopts = \"UT\"\n  revision = \"9051bd6b44125d9472e0c148b5965692ab283d4a\"\n  version = \"v0.6.2\"\n\n[[projects]]\n  digest = \"1:c520e4d4fc9976e4da44ee0a3bdd5a45e8a206a72c1ccd2089f3d184f5eb942a\"\n  name = \"golang.org/x/crypto\"\n  packages = [\n    \"curve25519\",\n    \"ed25519\",\n    \"ed25519/internal/edwards25519\",\n    \"ssh\",\n    \"ssh/terminal\",\n  ]\n  pruneopts = \"UT\"\n  revision = \"51714a8c4ac1764f07ab4127d7f739351ced4759\"\n\n[[projects]]\n  digest = \"1:8e965c5396cf5304c8a3473adfd4a70c0a2a15df6a1448492f3472b50414779e\"\n  name = \"golang.org/x/net\"\n  packages = [\n    \"context\",\n    \"context/ctxhttp\",\n  ]\n  pruneopts = \"UT\"\n  revision = \"4f2fc6c1e69d41baf187332ee08fbd2b296f21ed\"\n\n[[projects]]\n  digest = \"1:5b9c174f7602d8927abd72ed7095e16249fd87da044a7f9d9f8f6cb9f737719a\"\n  name = \"golang.org/x/oauth2\"\n  packages = [\n    \".\",\n    \"google\",\n    \"internal\",\n    \"jws\",\n    \"jwt\",\n  ]\n  pruneopts = \"UT\"\n  revision = \"442624c9ec9243441e83b374a9e22ac549b5c51d\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:524ca168039a413c2a3aded9989f201e869d9d888cbc8e274268f30f66a984cc\"\n  name = \"golang.org/x/sys\"\n  packages = [\n    \"unix\",\n    \"windows\",\n    \"windows/registry\",\n  ]\n  pruneopts = \"UT\"\n  revision = \"37707fdb30a5b38865cfb95e5aab41707daec7fd\"\n\n[[projects]]\n  branch = \"master\"\n  digest = \"1:ee95e00dab6de32d68fa8743b99f11edbac3bc9e65e0261cafb8750b313a14bb\"\n  name = \"google.golang.org/api\"\n  packages = [\n    \"compute/v1\",\n    \"gensupport\",\n    \"googleapi\",\n    \"googleapi/internal/uritemplates\",\n  ]\n  pruneopts = \"UT\"\n  revision = \"87a2f5c77b3602f3ae7c8dca6d76f9c2b9bc0957\"\n\n[[projects]]\n  digest = \"1:08250caf23d0b98c5aec610449d7a8b5c8f7809a55f1ecaa612a0f1b790ecb5d\"\n  name = \"google.golang.org/appengine\"\n  packages = [\n    \".\",\n    \"internal\",\n    \"internal/app_identity\",\n    \"internal/base\",\n    \"internal/datastore\",\n    \"internal/log\",\n    \"internal/modules\",\n    \"internal/remote_api\",\n    \"internal/urlfetch\",\n    \"urlfetch\",\n  ]\n  pruneopts = \"UT\"\n  revision = \"6a436539be38c296a8075a871cc536686b458371\"\n\n[[projects]]\n  digest = \"1:0b8b0eb3466e09a0aa705b86fa1bd25e8562395cc4034a2dceb297f3ef65e8d3\"\n  name = \"google.golang.org/cloud\"\n  packages = [\n    \"compute/metadata\",\n    \"internal\",\n  ]\n  pruneopts = \"UT\"\n  revision = \"975617b05ea8a58727e6c1a06b6161ff4185a9f2\"\n\n[solve-meta]\n  analyzer-name = \"dep\"\n  analyzer-version = 1\n  input-imports = [\n    \"github.com/Azure/azure-sdk-for-go/arm/compute\",\n    \"github.com/Azure/azure-sdk-for-go/arm/network\",\n    \"github.com/Azure/azure-sdk-for-go/arm/resources/resources\",\n    \"github.com/Azure/azure-sdk-for-go/arm/resources/subscriptions\",\n    \"github.com/Azure/azure-sdk-for-go/arm/storage\",\n    \"github.com/Azure/azure-sdk-for-go/storage\",\n    \"github.com/Azure/go-autorest/autorest\",\n    \"github.com/Azure/go-autorest/autorest/azure\",\n    \"github.com/Azure/go-autorest/autorest/to\",\n    \"github.com/aws/aws-sdk-go/aws\",\n    \"github.com/aws/aws-sdk-go/aws/awserr\",\n    \"github.com/aws/aws-sdk-go/aws/credentials\",\n    \"github.com/aws/aws-sdk-go/aws/session\",\n    \"github.com/aws/aws-sdk-go/service/ec2\",\n    \"github.com/bugsnag/bugsnag-go\",\n    \"github.com/codegangsta/cli\",\n    \"github.com/digitalocean/godo\",\n    \"github.com/docker/docker/pkg/term\",\n    \"github.com/exoscale/egoscale\",\n    \"github.com/intel-go/cpuid\",\n    \"github.com/rackspace/gophercloud\",\n    \"github.com/rackspace/gophercloud/openstack\",\n    \"github.com/rackspace/gophercloud/openstack/compute/v2/extensions/floatingip\",\n    \"github.com/rackspace/gophercloud/openstack/compute/v2/extensions/keypairs\",\n    \"github.com/rackspace/gophercloud/openstack/compute/v2/extensions/startstop\",\n    \"github.com/rackspace/gophercloud/openstack/compute/v2/flavors\",\n    \"github.com/rackspace/gophercloud/openstack/compute/v2/images\",\n    \"github.com/rackspace/gophercloud/openstack/compute/v2/servers\",\n    \"github.com/rackspace/gophercloud/openstack/identity/v2/tenants\",\n    \"github.com/rackspace/gophercloud/openstack/networking/v2/extensions/layer3/floatingips\",\n    \"github.com/rackspace/gophercloud/openstack/networking/v2/networks\",\n    \"github.com/rackspace/gophercloud/openstack/networking/v2/ports\",\n    \"github.com/rackspace/gophercloud/pagination\",\n    \"github.com/rackspace/gophercloud/rackspace\",\n    \"github.com/samalba/dockerclient\",\n    \"github.com/skarademir/naturalsort\",\n    \"github.com/stretchr/testify/assert\",\n    \"github.com/stretchr/testify/mock\",\n    \"github.com/vmware/govcloudair\",\n    \"github.com/vmware/govmomi\",\n    \"github.com/vmware/govmomi/find\",\n    \"github.com/vmware/govmomi/guest\",\n    \"github.com/vmware/govmomi/object\",\n    \"github.com/vmware/govmomi/vim25/mo\",\n    \"github.com/vmware/govmomi/vim25/soap\",\n    \"github.com/vmware/govmomi/vim25/types\",\n    \"golang.org/x/crypto/ssh\",\n    \"golang.org/x/crypto/ssh/terminal\",\n    \"golang.org/x/net/context\",\n    \"golang.org/x/oauth2\",\n    \"golang.org/x/oauth2/google\",\n    \"golang.org/x/sys/windows/registry\",\n    \"google.golang.org/api/compute/v1\",\n    \"google.golang.org/api/googleapi\",\n  ]\n  solver-name = \"gps-cdcl\"\n  solver-version = 1\n"
        },
        {
          "name": "Gopkg.toml",
          "type": "blob",
          "size": 0.72265625,
          "content": "[[constraint]]\n  name = \"github.com/Azure/azure-sdk-for-go\"\n  version = \"5.0.0-beta\"\n\n[[constraint]]\n  name = \"github.com/Azure/go-autorest\"\n  version = \"7.2.1\"\n\n[[constraint]]\n  name = \"github.com/aws/aws-sdk-go\"\n  version = \"1.4.10\"\n\n[[constraint]]\n  branch = \"master\"\n  name = \"github.com/docker/docker\"\n\n[[constraint]]\n  name = \"github.com/exoscale/egoscale\"\n  version = \"0.9.23\"\n\n[[constraint]]\n  branch = \"master\"\n  name = \"github.com/skarademir/naturalsort\"\n\n[[constraint]]\n  name = \"github.com/vmware/govcloudair\"\n  version = \"0.0.2\"\n\n[[constraint]]\n  name = \"github.com/vmware/govmomi\"\n  version = \"0.6.2\"\n\n[[constraint]]\n  name = \"github.com/intel-go/cpuid\"\n  branch = \"master\"\n\n[prune]\n  go-tests = true\n  unused-packages = true\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.505859375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   Copyright 2014 Docker, Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 0.8974609375,
          "content": "# Machine maintainers file\n#\n# This file describes who runs the docker/machine project and how.\n# This is a living document - if you see something out of date or missing, speak up!\n#\n# It is structured to be consumable by both humans and programs.\n# To extract its contents programmatically, use any TOML-compliant parser.\n#\n# This file is compiled into the MAINTAINERS file in docker/opensource.\n#\n[Org]\n\t[Org.\"Core maintainers\"]\n\t\tpeople = [\n\t\t\t\"jeanlaurent\",\n\t\t]\n\n\t[Org.Alumni]\n\t\tpeople = [\n\t\t\t\"shin-\",\n\t\t]\n[people]\n\n# A reference list of all people associated with the project.\n# All other sections should refer to people by their canonical key\n# in the people section.\n\n\t# ADD YOURSELF HERE IN ALPHABETICAL ORDER\n\n\t[people.jeanlaurent]\n\tName = \"Jean-Laurent de Morlhon\"\n\tEmail = \"jeanlaurent@docker.com\"\n\tGitHub = \"jeanlaurent\"\n\n\t[people.shin-]\n\tName = \"Joffrey F\"\n\tEmail = \"f.joffrey@gmail.com\"\n\tGitHub = \"shin-\"\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.4814453125,
          "content": "# Plain make targets if not requested inside a container\nifneq (,$(findstring test-integration,$(MAKECMDGOALS)))\n\tinclude Makefile.inc\n\tinclude mk/main.mk\nelse ifneq ($(USE_CONTAINER), true)\n\tinclude Makefile.inc\n\tinclude mk/main.mk\nelse\n# Otherwise, with docker, swallow all targets and forward into a container\nDOCKER_BUILD_DONE := \"\"\n\ntest: .DEFAULT\n\n.DEFAULT:\n\t@test ! -z \"$(DOCKER_BUILD_DONE)\" || ./script/build_in_container.sh $(MAKECMDGOALS)\n\t$(eval DOCKER_BUILD_DONE := \"done\")\n\nendif\n"
        },
        {
          "name": "Makefile.inc",
          "type": "blob",
          "size": 0.80859375,
          "content": "# Project name, used to name the binaries\nPKG_NAME := docker-machine\n\n# If true, disable optimizations and does NOT strip the binary\nDEBUG ?=\n# If true, \"build\" will produce a static binary (cross compile always produce static build regardless)\nSTATIC ?=\n# If true, turn on verbose output for build\nVERBOSE ?=\n# Build tags\nBUILDTAGS ?=\n# Adjust number of parallel builds (XXX not used)\nPARALLEL ?= -1\n# Coverage default directory\nCOVERAGE_DIR ?= cover\n# Whether to perform targets inside a docker container, or natively on the host\nUSE_CONTAINER ?=\n\n# List of cross compilation targets\nifeq ($(TARGET_OS),)\n  TARGET_OS := darwin linux windows\nendif\n\nifeq ($(TARGET_ARCH),)\n  TARGET_ARCH := amd64 arm arm64 386\nendif\n\n# Output prefix, defaults to local directory if not specified\nifeq ($(PREFIX),)\n  PREFIX := $(shell pwd)\nendif\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.267578125,
          "content": "# Docker Machine\n\n![](https://docs.docker.com/machine/img/logo.png)\n\nMachine lets you create Docker hosts on your computer, on cloud providers, and\ninside your own data center. It creates servers, installs Docker on them, then\nconfigures the Docker client to talk to them.\n\nIt works a bit like this:\n\n```console\n$ docker-machine create -d virtualbox default\nRunning pre-create checks...\nCreating machine...\n(default) Creating VirtualBox VM...\n(default) Creating SSH key...\n(default) Starting VM...\nWaiting for machine to be running, this may take a few minutes...\nMachine is running, waiting for SSH to be available...\nDetecting operating system of created instance...\nDetecting the provisioner...\nProvisioning with boot2docker...\nCopying certs to the local machine directory...\nCopying certs to the remote machine...\nSetting Docker configuration on the remote daemon...\nChecking connection to Docker...\nDocker is up and running!\nTo see how to connect Docker to this machine, run: docker-machine env default\n\n$ docker-machine ls\nNAME      ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER   ERRORS\ndefault   -        virtualbox   Running   tcp://192.168.99.188:2376           v1.9.1\n\n$ eval \"$(docker-machine env default)\"\n\n$ docker run busybox echo hello world\nUnable to find image 'busybox:latest' locally\n511136ea3c5a: Pull complete\ndf7546f9f060: Pull complete\nea13149945cb: Pull complete\n4986bf8c1536: Pull complete\nhello world\n```\n\nIn addition to local VMs, you can create and manage cloud servers:\n\n```console\n$ docker-machine create -d digitalocean --digitalocean-access-token=secret staging\nCreating SSH key...\nCreating Digital Ocean droplet...\nTo see how to connect Docker to this machine, run: docker-machine env staging\n\n$ docker-machine ls\nNAME      ACTIVE   DRIVER         STATE     URL                         SWARM   DOCKER   ERRORS\ndefault   -        virtualbox     Running   tcp://192.168.99.188:2376           v1.9.1\nstaging   -        digitalocean   Running   tcp://203.0.113.81:2376             v1.9.1\n```\n\n## Installation and documentation\n\nFull documentation [is available here](https://docs.docker.com/machine/).\n\n## Contributing\n\nWant to hack on Machine? Please start with the [Contributing Guide](https://github.com/docker/machine/blob/master/CONTRIBUTING.md).\n\n## Driver Plugins\n\nIn addition to the core driver plugins bundled alongside Docker Machine, users\ncan make and distribute their own plugin for any virtualization technology or\ncloud provider.  To browse the list of known Docker Machine plugins, please [see\nthis document in our\ndocs repo](https://github.com/docker/docker.github.io/blob/master/machine/AVAILABLE_DRIVER_PLUGINS.md).\n\n## Troubleshooting\n\nDocker Machine tries to do the right thing in a variety of scenarios but\nsometimes things do not go according to plan.  Here is a quick troubleshooting\nguide which may help you to resolve of the issues you may be seeing.\n\nNote that some of the suggested solutions are only available on the Docker\nMachine master branch.  If you need them, consider compiling Docker Machine from\nsource.\n#### `docker-machine` hangs\n\nA common issue with Docker Machine is that it will hang when attempting to start\nup the virtual machine.  Since starting the machine is part of the `create`\nprocess, `create` is often where these types of errors show up.\n\nA hang could be due to a variety of factors, but the most common suspect is\nnetworking.  Consider the following:\n\n-   Are you using a VPN?  If so, try disconnecting and see if creation will\n    succeed without the VPN.  Some VPN software aggressively controls routes and\n    you may need to [manually add the route](https://github.com/docker/machine/issues/1500#issuecomment-121134958).\n-   Are you connected to a proxy server, corporate or otherwise?  If so, take a\n    look at the `--no-proxy` flag for `env` and at [setting environment variables\n    for the created Docker Engine](https://docs.docker.com/machine/reference/create/#specifying-configuration-options-for-the-created-docker-engine).\n-   Are there a lot of host-only interfaces listed by the command `VBoxManage list\n    hostonlyifs`?  If so, this has sometimes been known to cause bugs.  Consider\n    removing the ones you are not using (`VBoxManage hostonlyif remove name`) and\n    trying machine creation again.\n\nWe are keenly aware of this as an issue and working towards a set of solutions\nwhich is robust for all users, so please give us feedback and/or report issues,\nworkarounds, and desired workflows as you discover them.\n\n#### Machine creation errors out before finishing\n\nIf you see messages such as \"exit status 1\" creating machines with VirtualBox,\nthis frequently indicates that there is an issue with VirtualBox itself.  Please\n[file an issue](https://github.com/docker/machine/issues/new) and include a link\nto a [Github Gist](https://gist.github.com/) with the output of the VirtualBox\nlog (usually located at\n`$HOME/.docker/machine/machines/machinename/machinename/Logs/VBox.log`), as well\nas the output of running the Docker Machine command which is failing with the\nglobal `--debug` flag enabled.  This will help us to track down which versions\nof VirtualBox are failing where, and under which conditions.\n\nIf you see messages such as \"exit status 255\", this frequently indicates there\nhas been an issue with SSH.  Please investigate your SSH configuration if you\nhave one, and/or [file an issue](https://github.com/docker/machine/issues).\n\n#### \"You may be getting rate limited by Github\" error message\n\nIn order to `create` or `upgrade` virtual machines running Docker, Docker\nMachine will check the Github API for the latest release of the [boot2docker\noperating system](https://github.com/boot2docker/boot2docker).  The Github API\nallows for a small number of unauthenticated requests from a given client, but\nif you share an IP address with many other users (e.g. in an office), you may\nget rate limited by their API, and Docker Machine will error out with messages\nindicating this.\n\nIn order to work around this issue, you can [generate a\ntoken](https://help.github.com/articles/creating-an-access-token-for-command-line-use/)\nand pass it to Docker Machine using the global `--github-api-token` flag like\nso:\n\n```console\n$ docker-machine --github-api-token=token create -d virtualbox newbox\n```\n\nThis should eliminate any issues you've been experiencing with rate limiting.\n"
        },
        {
          "name": "ROADMAP.md",
          "type": "blob",
          "size": 1.7880859375,
          "content": "# Machine Roadmap\n\nMachine currently works really well for development and test environments. The\ngoal is to make it work better for provisioning and managing production\nenvironments.\n\nThis is not a simple task -- production is inherently far more complex than\ndevelopment -- but there are three things which are big steps towards that goal:\n**client/server architecture**, **swarm integration** and **flexible\nprovisioning**.\n\n(Note: this document is a high-level overview of where we are taking Machine.\nFor what is coming in specific releases, see our [upcoming\nmilestones](https://github.com/docker/machine/milestones).)\n\n### Docker Engine / Swarm Configuration\n\nCurrently there are only a few things that can be configured in the Docker Engine and Swarm.  This will enable more operations such as Engine labels and Swarm strategies.\n\n### Boot2Docker Migration Support\n\nCurrently both Machine and Boot2Docker provider similar functionality.  This will enable users to migrate from boot2docker to machine.\n\n### Expand Provisioner\n\nMachine currently supports running Boot2Docker for \"local\" providers and Ubuntu for \"remote\" providers.  This will expand the provisioning capabilities to include other base operating systems such as Red Hat-like distributions and possibly other \"just enough\" operating systems.\n\n### Windows Experience\n\nCurrently, the Machine on Windows experience is not as good as the Mac / Linux.  There is no \"recommended\" path to use Machine and there are several inconsistencies on Windows such as logging and output formatting.\n\n# Project Planning\n\nAn [Open-Source Planning Process](https://github.com/docker/machine/wiki/Open-Source-Planning-Process) is used to define the Roadmap. [Project Pages](https://github.com/docker/machine/wiki) define the goals for each Milestone and identify current progress.\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.306640625,
          "content": "version: \"{build}\"\n\nskip_tags: true\n\nos: Windows Server 2012 R2\n\nenvironment:\n  GOPATH: c:\\gopath\n\nclone_folder: c:\\gopath\\src\\github.com\\docker\\machine\n\nbuild_script:\n  - go build -i -o ./bin/docker-machine.exe ./cmd/docker-machine\n\ntest_script:\n  - powershell -Command go test -v ./libmachine/shell\n\ndeploy: off\n"
        },
        {
          "name": "circle.yml",
          "type": "blob",
          "size": 0.8662109375,
          "content": "machine:\n  pre:\n    - bash < <(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/1.0.22/binscripts/gvm-installer)\n\n  post:\n    - gvm install go1.7 -B --name=stable\n\n  environment:\n    CHECKOUT: /home/ubuntu/$CIRCLE_PROJECT_REPONAME\n    BASE_DIR: src/github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME\n    BASE_STABLE: ../../../$HOME/.gvm/pkgsets/stable/global/$BASE_DIR\n    GO15VENDOREXPERIMENT: 1\n\ndependencies:\n  override:\n    - >\n      gvm use stable &&\n      mkdir -p \"$(dirname $BASE_STABLE)\" &&\n      cp -R \"$CHECKOUT\" \"$BASE_STABLE\"\n\ntest:\n  pre:\n    - gvm use stable && make build:\n        pwd: $BASE_STABLE\n    - gvm use stable && go get github.com/docker/docker-machine-driver-ci-test\n\n  override:\n    - gvm use stable && PATH=../../../../bin:$PATH DRIVER=ci-test go test -v github.com/docker/machine/its/...:\n        pwd: $BASE_STABLE\n        timeout: 600\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "commands",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc.go",
          "type": "blob",
          "size": 0.2158203125,
          "content": "// Package machine defines interfaces to manage a variety of docker instances\n// deployed on different backends (VMs, baremetal).\n// The goal is to allow users get from zero to docker as fast as possible.\npackage machine\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "drivers",
          "type": "tree",
          "content": null
        },
        {
          "name": "experimental",
          "type": "tree",
          "content": null
        },
        {
          "name": "its",
          "type": "tree",
          "content": null
        },
        {
          "name": "libmachine",
          "type": "tree",
          "content": null
        },
        {
          "name": "mk",
          "type": "tree",
          "content": null
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        },
        {
          "name": "version",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}