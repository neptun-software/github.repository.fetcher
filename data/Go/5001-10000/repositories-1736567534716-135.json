{
  "metadata": {
    "timestamp": 1736567534716,
    "page": 135,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "bitnami-labs/sealed-secrets",
      "stars": 7825,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0390625,
          "content": "vendor_jsonnet/ linguist-generated=true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.7109375,
          "content": "# Binaries for programs and plugins\n*.exe\n*.dll\n*.so\n*.dylib\n\n# Test binary, build with `go test -c`\n*.test\n\n# Output of the go coverage tool, specifically when used with LiteIDE\n*.out\n\n# Project-local glide cache, RE: https://github.com/Masterminds/glide/issues/736\n.glide/\n\n# Project-local vscode config\n.vscode/\n\n/controller\n/kubeseal\n/kubeseal-arm\n/kubeseal-arm64\n\n/controller.image\n/controller.image.*\n/kubeseal.image\n/kubeseal.image.*\n/pushed.controller.image.*\n/pushed.kubeseal.image.*\n/controller-manifest-*\n/push-controller-image\n/*-static\n/*-static-*\n/controller.yaml\n/controller-norbac.yaml\n/controller-podmonitor.yaml\n/docker/controller\n*.iml\n.idea\n\n# GoReleaser output dir\ndist/\n\n# Vendor folder\nvendor/\nreport.xml\n"
        },
        {
          "name": ".golangci.yaml",
          "type": "blob",
          "size": 12.8642578125,
          "content": "# Inspired by https://gist.github.com/maratori/47a4d00457a92aa426dbd48a18776322\n\n# output configuration options\noutput:\n  # Format: colored-line-number|line-number|json|tab|checkstyle|code-climate|junit-xml|github-actions\n  # Default: colored-line-number\n  format: checkstyle:report.xml,colored-line-number:stdout\n\n# Options for analysis running.\nrun:\n  # Timeout for analysis, e.g. 30s, 5m.\n  # Default: 1m\n  timeout: 5m\n\n# This file contains only configs which differ from defaults.\n# All possible options can be found here https://github.com/golangci/golangci-lint/blob/master/.golangci.reference.yml\nlinters-settings:\n  cyclop:\n    # The maximal code complexity to report.\n    # Default: 10\n    max-complexity: 30\n    # The maximal average package complexity.\n    # If it's higher than 0.0 (float) the check is enabled\n    # Default: 0.0\n    package-average: 10.0\n\n  errcheck:\n    # Report about not checking of errors in type assertions: `a := b.(MyStruct)`.\n    # Such cases aren't reported by default.\n    # Default: false\n    check-type-assertions: true\n\n    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`.\n    # Such cases aren't reported by default.\n    # Default: false\n    check-blank: true\n\n  exhaustive:\n    # Program elements to check for exhaustiveness.\n    # Default: [ switch ]\n    check:\n      - switch\n      - map\n\n  exhaustruct:\n    # List of regular expressions to exclude struct packages and names from check.\n    # Default: []\n    exclude:\n      # std libs\n      - \"^net/http.Client$\"\n      - \"^net/http.Cookie$\"\n      - \"^net/http.Request$\"\n      - \"^net/http.Response$\"\n      - \"^net/http.Server$\"\n      - \"^net/http.Transport$\"\n      - \"^net/url.URL$\"\n      - \"^os/exec.Cmd$\"\n      - \"^reflect.StructField$\"\n      # public libs (add more if needed)\n\n  funlen:\n    # Checks the number of lines in a function.\n    # If lower than 0, disable the check.\n    # Default: 60\n    lines: 100\n    # Checks the number of statements in a function.\n    # If lower than 0, disable the check.\n    # Default: 40\n    statements: 50\n\n  gocognit:\n    # Minimal code complexity to report.\n    # Default: 30 (but we recommend 10-20)\n    min-complexity: 20\n\n  goconst:\n    # Minimal length of string constant.\n    # Default: 3\n    min-len: 2\n    # Minimum occurrences of constant string count to trigger issue.\n    # Default: 3\n    min-occurrences: 2\n    # Search also for duplicated numbers.\n    # Default: false\n    numbers: true\n    # Minimum value, only works with goconst.numbers\n    # Default: 3\n    min: 2\n\n  gocritic:\n    # Settings passed to gocritic.\n    # The settings key is the name of a supported gocritic checker.\n    # The list of supported checkers can be find in https://go-critic.github.io/overview.\n    settings:\n      captLocal:\n        # Whether to restrict checker to params only.\n        # Default: true\n        paramsOnly: false\n      underef:\n        # Whether to skip (*x).method() calls where x is a pointer receiver.\n        # Default: true\n        skipRecvDeref: false\n\n  gomnd:\n    # List of function patterns to exclude from analysis.\n    # Values always ignored: `time.Date`,\n    # `strconv.FormatInt`, `strconv.FormatUint`, `strconv.FormatFloat`,\n    # `strconv.ParseInt`, `strconv.ParseUint`, `strconv.ParseFloat`.\n    # Default: []\n    ignored-functions:\n      - os.Chmod\n      - os.Mkdir\n      - os.MkdirAll\n      - os.OpenFile\n      - os.WriteFile\n      - math.*\n      - http.StatusText\n\n  govet:\n    # Enable all analyzers.\n    # Default: false\n    enable-all: true\n\n    # Disable analyzers by name.\n    # Run `go tool vet help` to see all analyzers.\n    # Default: []\n    disable:\n      - fieldalignment # too strict, it warns about struct fields that are not aligned by size\n\n    # Settings per analyzer.\n    settings:\n      shadow:\n        # Whether to be strict about shadowing; can be noisy.\n        # Default: false\n        strict: true\n\n  nakedret:\n    # Make an issue if func has more lines of code than this setting, and it has naked returns.\n    # Default: 30\n    max-func-lines: 0\n\n  nestif:\n    # Minimal complexity of if statements to report.\n    # Default: 5\n    min-complexity: 4\n\n  nolintlint:\n    # Exclude following linters from requiring an explanation.\n    # Default: []\n    allow-no-explanation: [funlen, gocognit, lll]\n    # Enable to require an explanation of nonzero length after each nolint directive.\n    # Default: false\n    require-explanation: true\n    # Enable to require nolint directives to mention the specific linter being suppressed.\n    # Default: false\n    require-specific: true\n\n  lll:\n    # Max line length, lines longer will be reported.\n    # '\\t' is counted as 1 character by default, and can be changed with the tab-width option.\n    # Default: 120.\n    line-length: 240\n\n  rowserrcheck:\n    # database/sql is always checked\n    # Default: []\n    packages:\n      - github.com/jmoiron/sqlx\n\n  tenv:\n    # The option `all` will run against whole test files (`_test.go`) regardless of method/function signatures.\n    # Otherwise, only methods that take `*testing.T`, `*testing.B`, and `testing.TB` as arguments are checked.\n    # Default: false\n    all: true\n\n  varnamelen:\n    # The minimum length of a variable's name that is considered \"long\".\n    # Variable names that are at least this long will be ignored.\n    # Default: 3\n    min-name-length: 2\n    # Check method receivers.\n    # Default: false\n    # Ignore \"ok\" variables that hold the bool return value of a type assertion.\n    # Default: false\n    ignore-type-assert-ok: true\n    # Ignore \"ok\" variables that hold the bool return value of a map index.\n    # Default: false\n    ignore-map-index-ok: true\n    # Ignore \"ok\" variables that hold the bool return value of a channel receive.\n    # Default: false\n    ignore-chan-recv-ok: true\n\n  godot:\n    # Check periods at the end of sentences.\n    period: false\n\nlinters:\n  disable-all: true\n  enable:\n    #- errcheck # checking for unchecked errors, these unchecked errors can be critical bugs in some cases\n    - gosimple # specializes in simplifying a code\n    #- govet # reports suspicious constructs, such as Printf calls whose arguments do not align with the format string\n    - ineffassign # detects when assignments to existing variables are not used\n    - staticcheck # is a go vet on steroids, applying a ton of static analysis checks\n    - typecheck # like the front-end of a Go compiler, parses and type-checks Go code\n    - unused # checks for unused constants, variables, functions and types\n    - asasalint # checks for pass []any as any in variadic func(...any)\n    - asciicheck # checks that your code does not contain non-ASCII identifiers\n    - bidichk # checks for dangerous unicode character sequences\n    - bodyclose # checks whether HTTP response body is closed successfully\n    #- cyclop # checks function and package cyclomatic complexity\n    #- dupl # tool for code clone detection\n    - durationcheck # checks for two durations multiplied together\n    - errname # checks that sentinel errors are prefixed with the Err and error types are suffixed with the Error\n    #- errorlint # finds code that will cause problems with the error wrapping scheme introduced in Go 1.13\n    #- execinquery # checks query string in Query function which reads your Go src files and warning it finds\n    - exhaustive # checks exhaustiveness of enum switch statements\n    - exportloopref # checks for pointers to enclosing loop variables\n    #- forbidigo # forbids identifiers\n    #- funlen # tool for detection of long functions\n    #- gochecknoinits # checks that no init functions are present in Go code\n    #- gocognit # computes and checks the cognitive complexity of functions\n    #- goconst # finds repeated strings that could be replaced by a constant\n    #- gocritic # provides diagnostics that check for bugs, performance and style issues\n    #- gocyclo # computes and checks the cyclomatic complexity of functions\n    - godot # checks if comments end in a period\n    - goimports # in addition to fixing imports, goimports also formats your code in the same style as gofmt\n    #- gomnd # detects magic numbers\n    - gomoddirectives # manages the use of 'replace', 'retract', and 'excludes' directives in go.mod\n    - gomodguard # allow and block lists linter for direct Go module dependencies. This is different from depguard where there are different block types for example version constraints and module recommendations\n    - goprintffuncname # checks that printf-like functions are named with f at the end\n    #- gosec # inspects source code for security problems\n    #- lll # reports long lines\n    - loggercheck # checks key value pairs for common logger libraries (kitlog,klog,logr,zap)\n    #- makezero # finds slice declarations with non-zero initial length\n    - nakedret # finds naked returns in functions greater than a specified function length\n    #- nestif # reports deeply nested if statements\n    #- nilerr # finds the code that returns nil even if it checks that the error is not nil\n    - nilnil # checks that there is no simultaneous return of nil error and an invalid value\n    #- noctx # finds sending http request without context.Context\n    - nolintlint # reports ill-formed or insufficient nolint directives\n    #- nonamedreturns # reports all named returns\n    - nosprintfhostport # checks for misuse of Sprintf to construct a host with port in a URL\n    #- predeclared # finds code that shadows one of Go's predeclared identifiers\n    - promlinter # checks Prometheus metrics naming via promlint\n    - reassign # checks that package variables are not reassigned\n    #- revive # fast, configurable, extensible, flexible, and beautiful linter for Go, drop-in replacement of golint\n    - rowserrcheck # checks whether Err of rows is checked successfully\n    - sqlclosecheck # checks that sql.Rows and sql.Stmt are closed\n    #- stylecheck # is a replacement for golint\n    - tenv # detects using os.Setenv instead of t.Setenv since Go1.17\n    - testableexamples # checks if examples are testable (have an expected output)\n    #- testpackage # makes you use a separate _test package\n    - tparallel # detects inappropriate usage of t.Parallel() method in your Go test codes\n    - unconvert # removes unnecessary type conversions\n    #- unparam # reports unused function parameters\n    - usestdlibvars # detects the possibility to use variables/constants from the Go standard library\n    - wastedassign # finds wasted assignment statements\n    - whitespace # detects leading and trailing whitespace\n\n    ## you may want to enable\n    - decorder # checks declaration order and count of types, constants, variables and functions\n    #- gci # controls golang package import order and makes it always deterministic\n    - goheader # checks is file header matches to pattern\n    - interfacebloat # checks the number of methods inside an interface\n    #- prealloc # [premature optimization, but can be used in some cases] finds slice declarations that could potentially be preallocated\n    #- varnamelen # [great idea, but too many false positives] checks that the length of a variable's name matches its scope\n    #- wrapcheck # checks that errors returned from external packages are wrapped\n    #- containedctx # detects struct contained context.Context field\n    - contextcheck # [too many false positives] checks the function whether use a non-inherited context\n    - dogsled # checks assignments with too many blank identifiers (e.g. x, _, _, _, := f())\n    #- dupword # [useless without config] checks for duplicate words in the source code\n    - errchkjson # [don't see profit + I'm against of omitting errors like in the first example https://github.com/breml/errchkjson] checks types passed to the json encoding functions. Reports unsupported types and optionally reports occasions, where the check for the returned error can be omitted\n    #- goerr113 # [too strict] checks the errors handling expressions\n    - grouper # analyzes expression groups\n    - importas # enforces consistent import aliases\n    - maintidx # measures the maintainability index of each function\n    - misspell # [useless] finds commonly misspelled English words in comments\n    #- nlreturn # [too strict and mostly code is not more readable] checks for a new line before return and branch statements to increase code clarity\n    #- paralleltest # [too many false positives] detects missing usage of t.Parallel() method in your Go test\n    - tagliatelle # checks the struct tags\n    #- thelper # detects golang test helpers without t.Helper() call and checks the consistency of test helpers\n    #- wsl # [too strict and mostly code is not more readable] whitespace linter forces you to use empty lines\n\n    ## disabled\n    # - exhaustruct # [highly recommend to enable] checks if all structure fields are initialized\n    # - godox # detects FIXME, TODO and other comment keywords\n    # - gochecknoglobals # checks that no global variables exist\n    # - ireturn # accept interfaces, return concrete types\n\nissues:\n  # Maximum count of issues with the same text.\n  # Set to 0 to disable.\n  # Default: 3\n  max-same-issues: 0\n"
        },
        {
          "name": ".goreleaser.yml",
          "type": "blob",
          "size": 3.3154296875,
          "content": "project_name: sealed-secrets\nenv:\n  - CGO_ENABLED=0\nbuilds:\n  - binary: controller\n    id: controller\n    main: ./cmd/controller\n    ldflags:\n      - -X main.VERSION={{ .Version }}\n    targets:\n      - darwin_amd64\n      - darwin_arm64\n      - linux_amd64\n      - linux_arm64\n      - linux_arm\n      - windows_amd64\n  - binary: kubeseal\n    id: kubeseal\n    main: ./cmd/kubeseal\n    ldflags:\n      - -X main.VERSION={{ .Version }}\n    targets:\n      - darwin_amd64\n      - darwin_arm64\n      - linux_amd64\n      - linux_arm64\n      - linux_arm\n      - windows_amd64\narchives:\n  - builds:\n      - kubeseal\n    name_template: \"kubeseal-{{ .Version }}-{{ .Os }}-{{ .Arch }}\"\nchecksum:\n  algorithm: sha256\nchangelog:\n  sort: asc\n  filters:\n    exclude:\n      - '^docs:'\n      - '^helm:'\n      - '^integration:'\n      - '^vendor_jsonnet:'\nsigns:\n  - cmd: cosign\n    stdin: '{{ .Env.COSIGN_PASSWORD }}'\n    output: true\n    artifacts: all\n    args:\n      - 'sign-blob'\n      - '--key=/tmp/cosign.key'\n      - '--output-signature=${signature}'\n      - '--yes'\n      - '${artifact}'\nrelease:\n  name_template: \"{{ .ProjectName }}-v{{ .Version }}\"\n  header: |\n    ## v{{ .Version }} ({{ .Date }})\n\n    New v{{ .Version }} release!\n  footer: |\n    ## Installation Instructions\n\n    ### Cluster-side\n\n    Install the SealedSecret CRD and server-side controller into the `kube-system` namespace:\n\n    ```sh\n    kubectl apply -f https://github.com/bitnami-labs/sealed-secrets/releases/download/v{{ .Version }}/controller.yaml\n    ```\n\n    ### Client-side\n\n    Install the client-side tool into `/usr/local/bin/`:\n\n    **Linux x86_64:**\n    ```sh\n    curl -OL \"https://github.com/bitnami-labs/sealed-secrets/releases/download/v{{ .Version }}/kubeseal-{{ .Version }}-linux-amd64.tar.gz\"\n    tar -xvzf kubeseal-{{ .Version }}-linux-amd64.tar.gz kubeseal\n    sudo install -m 755 kubeseal /usr/local/bin/kubeseal\n    ```\n\n    **macOS:**\n    The `kubeseal` client is available on [homebrew](https://formulae.brew.sh/formula/kubeseal):\n\n    ```sh\n    brew install kubeseal\n    ```\n\n    **MacPorts:**\n\n    The `kubeseal` client is available on [MacPorts](https://ports.macports.org/port/kubeseal/summary):\n\n    ```sh\n    port install kubeseal\n    ```\n\n    #### Nixpkgs\n\n    The `kubeseal` client is available on [Nixpkgs](https://search.nixos.org/packages?channel=unstable&show=kubeseal&from=0&size=50&sort=relevance&type=packages&query=kubeseal): (**DISCLAIMER**: Not maintained by bitnami-labs)\n\n    ```sh\n    nix-env -iA nixpkgs.kubeseal\n    ```\n\n    **Other OS/Arch:**\n    Binaries for other OS/arch combinations are attached to this release below.\n\n    If you just want the latest client tool, it can be installed into\n    `$GOPATH/bin` with:\n\n    ```sh\n    go install github.com/bitnami-labs/sealed-secrets/cmd/kubeseal@main\n    ```\n\n    You can specify a release tag or a commit SHA instead of `main`.\n\n    The `go install` command will place the `kubeseal` binary at `$GOPATH/bin`:\n\n    ```sh\n    $(go env GOPATH)/bin/kubeseal\n    ```\n\n    ## Release Notes\n\n    Please read the [RELEASE_NOTES](https://github.com/bitnami-labs/sealed-secrets/blob/main/RELEASE-NOTES.md) which contain among other things important information for those upgrading from previous releases.\n    ## Thanks!\n\n  extra_files:\n    - glob: ./controller.yaml\n    - glob: ./controller-norbac.yaml\n    - glob: ./.github/workflows/cosign.pub\n"
        },
        {
          "name": ".vib",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.1103515625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nsealed-secrets.pdl@broadcom.com.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.7255859375,
          "content": "# Contributing Guidelines\n\nContributions are welcome via GitHub Pull Requests. This document outlines the process to help get your contribution accepted.\n\nAny type of contribution is welcome; from new features, bug fixes, or documentation improvements. However, VMware/Bitnami will review the proposals and perform a triage over them. By doing so, we will ensure that the most valuable contributions for the community will be implemented in due time.\n\n## How to Contribute\n\n1. Fork this repository, develop, and test your changes.\n2. Submit a pull request.\n\n### Technical Requirements\n\nWhen submitting a PR make sure that it:\n\n- Must pass CI jobs for linting and test the changes on top of different k8s platforms.\n- Must follow [Golang best practices](https://go.dev/doc/effective_go).\n- Is signed off with the line `Signed-off-by: <Your-Name> <Your-email>`. See [related GitHub blogpost about signing off](https://github.blog/changelog/2022-06-08-admins-can-require-sign-off-on-web-based-commits/).\n  > Note: Signing off on a commit is different than signing a commit, such as with a GPG key.\n\n### PR Approval\n\n1. Changes are manually reviewed by VMware/Bitnami team members.\n2. When the PR passes all tests, the PR is merged by the reviewer(s) in the GitHub `main` branch.\n\n### Release process\n\nThe release process is based upon periodic release trains.\n\n#### Schedule\n\nReleases happen monthly. A release train \"leaves\" on the 15th of each month, or the closest working date to that.\n \n#### Creation\n\nFirst of all, prepare the release notes as usual, and merge them.\n\nOnce the release notes are ready, a release train is launched by *branching* from `main` to `release/vX.Y.Z`.\n\n#### Validation\n\nThe `release/vX.Y.Z` branch will go through the release CI. GoReleaser requires a tag to build a release, so one will be produced automatically from the release branch name `vX.Y.Z`.\n\nIf anything fails the release branch is dropped, the issue fixed in `main` and a new release train is started on a new branch.\n\n#### Tracking\n\nOnce the release passes all validations and is published, it is merged into `released`.\n\nNote that currently the release process is done in 2 steps, first the container images, then the chart using them. Both events must be merged in the `released` branch.\n\n#### Hot-fixing releases\n\nIf there is a need to urgently fix a show-stopper issue in the latest released version. There is no need to wait for the next release train for a new release to happen.\n\nUnless there is a strong reason not to, a fix can be merged into `main` directly, followed by a regular release process.\n\nIf doing the fix in main is a \"no go\" for some reason, for instance, a new change already in `main` makes the bug to be urgently fixed even worse, then the fix must happen from the latest released code to proceed ASAP:\n\n* Create a `hotfix/YYYYMMDD` branch as a copy of `released`. The `YYYYMMDD` suffix is an ISO-8601 timestamp, for tracking purposes.\n* Branch off `hotfix/YYYYMMDD` to work on the fix. As a regular PR, you might name the fix branch with a descriptive name for the bug being fixed.\n* Once the fix is approved and tested as successful, merge into `hotfix/YYYYMMDD`.\n* Push `hostfix/YYYYMMDD` as a `release/vX.Y.Z` to kick off a release train.\n* If the release fails for any reason, fix it in `hostfix/YYYYMMDD`, merge and push another `release/vX.Y.Z'` branch.\n* Once a hotfix release completes successfully, merge the `release/vX.Y.Z` as `released` as per normal procedure.\n* *Backport the hotfix into the `main` including the tests added to detected regressions* of that bug going forward.\n* Finally, `hotfix/YYYYMMDD` can be kept around for tracking or historical purposes.\n\nNote that, in either case, the release notes must clarify this was a hotfix our of the regular release train schedule.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS.md",
          "type": "blob",
          "size": 0.9853515625,
          "content": "# Sealed Secrets Maintainers\n\n## Maintainers\n\n| Maintainer         | GitHub ID                                           |                              Affiliation |\n| ------------------ | --------------------------------------------------- | ---------------------------------------: |\n| Alvaro Neira Ayuso | [alvneiayu](https://github.com/alvneiayu)           | [VMware](https://www.github.com/vmware/) |\n| Alejandro Moreno   | [alemorcuq](https://github.com/alemorcuq)           | [VMware](https://www.github.com/vmware/) |\n| Alfredo Garcia     | [agarcia-oss](https://github.com/agarcia-oss)       | [VMware](https://www.github.com/vmware/) |\n\n## Emeritus Maintainers\n\n- Angus Lees ([anguslees](https://github.com/anguslees))\n- Marko Mikulicic ([mkmik](https://github.com/mkmik))\n- Juan Ariza ([juan131](https://github.com/juan131))\n- Jose Vazquez ([josvazg](https://github.com/josvazg))\n\n---\n\nFull list of [Sealed Secrets contributors](https://github.com/bitnami-labs/sealed-secrets/graphs/contributors).\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 4.6748046875,
          "content": "GO = go\nGOTESTSUM = gotestsum\nGOFMT = gofmt\nGOLANGCILINT=golangci-lint -vv\nGOSEC=gosec\n\nexport GO111MODULE = on\nGO_FLAGS =\n\nKUBECFG = kubecfg\nDOCKER = docker\nGINKGO = ginkgo -p\nCONTROLLER_GEN ?= go run sigs.k8s.io/controller-tools/cmd/controller-gen@latest\n\nREGISTRY ?= docker.io\nCONTROLLER_IMAGE = $(REGISTRY)/bitnami/sealed-secrets-controller:latest\nKUBESEAL_IMAGE = $(REGISTRY)/bitnami/sealed-secrets-kubeseal:latest\nINSECURE_REGISTRY = false # useful for local registry\nIMAGE_PULL_POLICY =\nKUBECONFIG ?= $(HOME)/.kube/config\n\nGO_PACKAGES = ./...\nGO_FILES := $(shell find $(shell $(GO) list -f '{{.Dir}}' $(GO_PACKAGES)) -name \\*.go)\n\nCOMMIT = $(shell git rev-parse HEAD)\nTAG = $(shell git describe --exact-match --abbrev=0 --tags '$(COMMIT)' 2> /dev/null || true)\nDIRTY = $(shell git diff --shortstat 2> /dev/null | tail -n1)\n\n# Use a tag if set, otherwise use the commit hash\nifeq ($(TAG),)\nVERSION := $(COMMIT)\nelse\nVERSION := $(TAG)\nendif\n\nGOOS = $(shell go env GOOS)\nGOARCH = $(shell go env GOARCH)\n\n# Check for changed files\nifneq ($(DIRTY),)\nVERSION := $(VERSION)+dirty\nendif\n\nGO_LD_FLAGS = -X main.VERSION=$(VERSION)\n\nall: controller kubeseal\n\ngenerate:\n\t$(GO) mod vendor\n\t./hack/update-codegen.sh\n\trm -rf vendor\n\nmanifests:\n\t$(CONTROLLER_GEN) crd:generateEmbeddedObjectMeta=true paths=\"./pkg/apis/...\" output:stdout | tail -n +2 > helm/sealed-secrets/crds/bitnami.com_sealedsecrets.yaml\n\tyq '.spec.versions[0].schema' < helm/sealed-secrets/crds/bitnami.com_sealedsecrets.yaml > schema-v1alpha1.yaml\n\ncontroller: $(GO_FILES)\n\t$(GO) build -o $@ $(GO_FLAGS) -ldflags \"$(GO_LD_FLAGS)\" ./cmd/controller\n\nkubeseal: $(GO_FILES)\n\t$(GO) build -o $@ $(GO_FLAGS) -ldflags \"$(GO_LD_FLAGS)\" ./cmd/kubeseal\n\ndefine binary\n$(1)-static-$(2)-$(3): $(GO_FILES)\n\tGOOS=$(2) GOARCH=$(3) CGO_ENABLED=0 $(GO) build -o $$@ -installsuffix cgo $(GO_FLAGS) -ldflags \"$(GO_LD_FLAGS)\" ./cmd/$(1)\nendef\n\ndefine binaries\n$(call binary,controller,$1,$2)\n$(call binary,kubeseal,$1,$2)\nendef\n\n$(eval $(call binaries,linux,amd64))\n$(eval $(call binaries,linux,arm64))\n$(eval $(call binaries,linux,arm))\n$(eval $(call binaries,darwin,amd64))\n$(eval $(call binary,kubeseal,windows,amd64))\n\ncontroller-static: controller-static-$(GOOS)-$(GOARCH)\n\tcp $< $@\n\nkubeseal-static: kubeseal-static-$(GOOS)-$(GOARCH)\n\tcp $< $@\n\n\ndefine image\n$(1).image.$(3)-$(4): docker/$(1).Dockerfile $(1)-static-$(3)-$(4)\n\tmkdir -p dist/$(1)_$(3)_$(4)\n\tcp $(1)-static-$(3)-$(4) dist/$(1)_$(3)_$(4)/$(1)\n\t$(DOCKER) build --build-arg TARGETARCH=$(4) -t $(2)-$(3)-$(4) -f docker/$(1).Dockerfile .\n\t@echo $(2)-$(3)-$(4) >$$@.tmp\n\t@mv $$@.tmp $$@\nendef\n\ndefine images\n$(call image,controller,${CONTROLLER_IMAGE},$1,$2)\n$(call image,kubeseal,${KUBESEAL_IMAGE},$1,$2)\nendef\n\n$(eval $(call images,linux,amd64))\n$(eval $(call images,linux,arm64))\n$(eval $(call images,linux,arm))\n\n%.yaml: %.jsonnet\n\t$(KUBECFG) show -V CONTROLLER_IMAGE=$(CONTROLLER_IMAGE) -V IMAGE_PULL_POLICY=$(IMAGE_PULL_POLICY) -o yaml $< > $@.tmp\n\tmv $@.tmp $@\n\ncontroller.yaml: controller.jsonnet controller-norbac.jsonnet schema-v1alpha1.yaml kube-fixes.libsonnet\n\ncontroller-norbac.yaml: controller-norbac.jsonnet schema-v1alpha1.yaml kube-fixes.libsonnet\n\ncontroller-podmonitor.yaml: controller.jsonnet controller-norbac.jsonnet schema-v1alpha1.yaml kube-fixes.libsonnet\n\ntest:\n\t$(GOTESTSUM) $(GO_FLAGS) --junitfile report.xml --format testname -- \"-coverprofile=coverage.out\" $(GO_PACKAGES)\n\nintegrationtest: kubeseal controller\n\t# Assumes a k8s cluster exists, with controller already installed\n\t$(GINKGO) -tags 'integration' integration -- -kubeconfig $(KUBECONFIG) -kubeseal-bin $(abspath $<) -controller-bin $(abspath $(word 2,$^))\n\nvet:\n\t# known issue:\n\t# pkg/client/clientset/versioned/fake/clientset_generated.go:46: literal copies lock value from fakePtr\n\t$(GO) vet $(GO_FLAGS) -copylocks=false $(GO_PACKAGES)\n\nfmt:\n\t$(GOFMT) -s -w $(GO_FILES)\n\nlint:\n\t $(GOLANGCILINT) run --enable goimports --timeout=5m\n\nlint-gosec:\n\t $(GOSEC) -r -severity low -exclude-generated\n\nclean:\n\t$(RM) ./controller ./kubeseal\n\t$(RM) *-static*\n\t$(RM) controller*.yaml\n\t$(RM) controller.image*\n\ncheck-k8s:\n\tscripts/check-k8s\n\npush-controller: clean check-k8s controller.image.$(OS)-$(ARCH)\n\tdocker tag $(CONTROLLER_IMAGE)-$(OS)-$(ARCH) $(CONTROLLER_IMAGE)\nifeq ($(REGISTRY),docker.io)\n  echo \"Skip push: docker.io registry means minikube\"\nelse\n\tdocker push $(CONTROLLER_IMAGE)\nendif\n\napply-controller-manifests: clean check-k8s controller.yaml\n\tkubectl apply -f controller.yaml\n\tkubectl rollout status deployment sealed-secrets-controller -n kube-system\n\ncontroller-tests: test push-controller apply-controller-manifests clean integrationtest\n\n.PHONY: all kubeseal controller test clean vet fmt lint-gosec\n\n.PHONY: controllertests check-k8s push-controller apply-controller-manifests\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 42.58984375,
          "content": "# \"Sealed Secrets\" for Kubernetes\n\n[![](https://img.shields.io/badge/install-docs-brightgreen.svg)](#Installation)\n[![](https://img.shields.io/github/release/bitnami-labs/sealed-secrets.svg)](https://github.com/bitnami-labs/sealed-secrets/releases/latest)\n[![](https://img.shields.io/homebrew/v/kubeseal)](https://formulae.brew.sh/formula/kubeseal)\n[![Build Status](https://github.com/bitnami-labs/sealed-secrets/actions/workflows/ci.yml/badge.svg)](https://github.com/bitnami-labs/sealed-secrets/actions/workflows/ci.yml)\n[![](https://img.shields.io/github/v/release/bitnami-labs/sealed-secrets?include_prereleases&label=helm&sort=semver)](https://github.com/bitnami-labs/sealed-secrets/releases)\n[![Download Status](https://img.shields.io/docker/pulls/bitnami/sealed-secrets-controller.svg)](https://hub.docker.com/r/bitnami/sealed-secrets-controller)\n[![Go Report Card](https://goreportcard.com/badge/github.com/bitnami-labs/sealed-secrets)](https://goreportcard.com/report/github.com/bitnami-labs/sealed-secrets)\n![Downloads](https://img.shields.io/github/downloads/bitnami-labs/sealed-secrets/total.svg)\n\n**Problem:** \"I can manage all my K8s config in git, except Secrets.\"\n\n**Solution:** Encrypt your Secret into a SealedSecret, which *is* safe\nto store - even inside a public repository. The SealedSecret can be\ndecrypted only by the controller running in the target cluster and\nnobody else (not even the original author) is able to obtain the\noriginal Secret from the SealedSecret.\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Overview](#overview)\n  - [SealedSecrets as templates for secrets](#sealedsecrets-as-templates-for-secrets)\n  - [Public key / Certificate](#public-key--certificate)\n  - [Scopes](#scopes)\n- [Installation](#installation)\n  - [Controller](#controller)\n    - [Kustomize](#kustomize)\n    - [Helm Chart](#helm-chart)\n  - [Kubeseal](#kubeseal)\n    - [Homebrew](#homebrew)\n    - [MacPorts](#macports)\n    - [Linux](#linux)\n    - [Installation from source](#installation-from-source)\n- [Upgrade](#upgrade)\n- [Usage](#usage)\n  - [Managing existing secrets](#managing-existing-secrets)\n  - [Patching existing secrets](#patching-existing-secrets)\n  - [Update existing secrets](#update-existing-secrets)\n  - [Raw mode (experimental)](#raw-mode-experimental)\n  - [Validate a Sealed Secret](#validate-a-sealed-secret)\n- [Secret Rotation](#secret-rotation)\n  - [Sealing key renewal](#sealing-key-renewal)\n  - [User secret rotation](#user-secret-rotation)\n  - [Early key renewal](#early-key-renewal)\n  - [Common misconceptions about key renewal](#common-misconceptions-about-key-renewal)\n  - [Manual key management (advanced)](#manual-key-management-advanced)\n  - [Re-encryption (advanced)](#re-encryption-advanced)\n- [Details (advanced)](#details-advanced)\n  - [Crypto](#crypto)\n- [Developing](#developing)\n- [FAQ](#faq)\n  - [Will you still be able to decrypt if you no longer have access to your cluster?](#will-you-still-be-able-to-decrypt-if-you-no-longer-have-access-to-your-cluster)\n  - [How can I do a backup of my SealedSecrets?](#how-can-i-do-a-backup-of-my-sealedsecrets)\n  - [Can I decrypt my secrets offline with a backup key?](#can-i-decrypt-my-secrets-offline-with-a-backup-key)\n  - [What flags are available for kubeseal?](#what-flags-are-available-for-kubeseal)\n  - [How do I update parts of JSON/YAML/TOML/.. file encrypted with sealed secrets?](#how-do-i-update-parts-of-jsonyamltoml-file-encrypted-with-sealed-secrets)\n  - [Can I bring my own (pre-generated) certificates?](#can-i-bring-my-own-pre-generated-certificates)\n  - [How to use kubeseal if the controller is not running within the `kube-system` namespace?](#how-to-use-kubeseal-if-the-controller-is-not-running-within-the-kube-system-namespace)\n  - [How to verify the images?](#how-to-verify-the-images)\n  - [How to use one controller for a subset of namespaces](#How-to-use-one-controller-for-a-subset-of-namespaces)\n  - [Can I configure the controller unseal retries](#can-i-configure-the-controller-unseal-retries)\n\n- [Community](#community)\n  - [Related projects](#related-projects)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Overview\n\nSealed Secrets is composed of two parts:\n\n- A cluster-side controller / operator\n- A client-side utility: `kubeseal`\n\nThe `kubeseal` utility uses asymmetric crypto to encrypt secrets that only the controller can decrypt.\n\nThese encrypted secrets are encoded in a `SealedSecret` resource, which you can see as a recipe for creating\na secret. Here is how it looks:\n\n```yaml\napiVersion: bitnami.com/v1alpha1\nkind: SealedSecret\nmetadata:\n  name: mysecret\n  namespace: mynamespace\nspec:\n  encryptedData:\n    foo: AgBy3i4OJSWK+PiTySYZZA9rO43cGDEq.....\n```\n\nOnce unsealed this will produce a secret equivalent to this:\n\n```yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: mysecret\n  namespace: mynamespace\ndata:\n  foo: YmFy  # <- base64 encoded \"bar\"\n```\n\nThis normal [kubernetes secret](https://kubernetes.io/docs/concepts/configuration/secret/) will appear in the cluster\nafter a few seconds you can use it as you would use any secret that you would have created directly (e.g. reference it from a `Pod`).\n\nJump to the [Installation](#installation) section to get up and running.\n\nThe [Usage](#usage) section explores in more detail how you craft `SealedSecret` resources.\n\n### SealedSecrets as templates for secrets\n\nThe previous example only focused on the encrypted secret items themselves, but the relationship between a `SealedSecret` custom resource and the `Secret` it unseals into is similar in many ways (but not in all of them) to the familiar `Deployment` vs `Pod`.\n\nIn particular, the annotations and labels of a `SealedSecret` resource are not the same as the annotations of the `Secret` that gets generated out of it.\n\nTo capture this distinction, the `SealedSecret` object has a `template` section which encodes all the fields you want the controller to put in the unsealed `Secret`.\n\nThe [Sprig function library](https://masterminds.github.io/sprig/) is available in addition to the default Go Text Template functions.\n\nThe `metadata` block is copied as is (the `ownerReference` field will be updated [unless disabled](#seal-secret-which-can-skip-set-owner-references)).\n\nOther secret fields are handled individually. The `type` and `immutable` fields are copied, and the `data` field can be used to [template complex values](docs/examples/config-template) on the `Secret`. All other fields are currently ignored.\n\n```yaml\napiVersion: bitnami.com/v1alpha1\nkind: SealedSecret\nmetadata:\n  name: mysecret\n  namespace: mynamespace\n  annotations:\n    \"kubectl.kubernetes.io/last-applied-configuration\": ....\nspec:\n  encryptedData:\n    .dockerconfigjson: AgBy3i4OJSWK+PiTySYZZA9rO43cGDEq.....\n  template:\n    type: kubernetes.io/dockerconfigjson\n    immutable: true\n    # this is an example of labels and annotations that will be added to the output secret\n    metadata:\n      labels:\n        \"jenkins.io/credentials-type\": usernamePassword\n      annotations:\n        \"jenkins.io/credentials-description\": credentials from Kubernetes\n```\n\nThe controller would unseal that into something like:\n\n```yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: mysecret\n  namespace: mynamespace\n  labels:\n    \"jenkins.io/credentials-type\": usernamePassword\n  annotations:\n    \"jenkins.io/credentials-description\": credentials from Kubernetes\n  ownerReferences:\n  - apiVersion: bitnami.com/v1alpha1\n    controller: true\n    kind: SealedSecret\n    name: mysecret\n    uid: 5caff6a0-c9ac-11e9-881e-42010aac003e\ntype: kubernetes.io/dockerconfigjson\nimmutable: true\ndata:\n  .dockerconfigjson: ewogICJjcmVk...\n```\n\nAs you can see, the generated `Secret` resource is a \"dependent object\" of the `SealedSecret` and as such\nit will be updated and deleted whenever the `SealedSecret` object gets updated or deleted.\n\n### Public key / Certificate\n\nThe key certificate (public key portion) is used for sealing secrets,\nand needs to be available wherever `kubeseal` is going to be\nused. The certificate is not secret information, although you need to\nensure you are using the correct one.\n\n`kubeseal` will fetch the certificate from the controller at runtime\n(requires secure access to the Kubernetes API server), which is\nconvenient for interactive use, but it's known to be brittle when users\nhave clusters with special configurations such as [private GKE clusters](docs/GKE.md#private-gke-clusters) that have\nfirewalls between control plane and nodes.\n\nAn alternative workflow\nis to store the certificate somewhere (e.g. local disk) with\n`kubeseal --fetch-cert >mycert.pem`,\nand use it offline with `kubeseal --cert mycert.pem`.\nThe certificate is also printed to the controller log on startup.\n\nSince v0.9.x certificates get automatically renewed every 30 days. It's good practice that you and your team\nupdate your offline certificate periodically. To help you with that, since v0.9.2 `kubeseal` accepts URLs too. You can set up your internal automation to publish certificates somewhere you trust.\n\n```bash\nkubeseal --cert https://your.intranet.company.com/sealed-secrets/your-cluster.cert\n```\n\nIt also recognizes the `SEALED_SECRETS_CERT` env var. (pro-tip: see also [direnv](https://github.com/direnv/direnv)).\n\n> **NOTE**: we are working on providing key management mechanisms that offload the encryption to HSM based modules or managed cloud crypto solutions such as KMS.\n\n### Scopes\n\nSealedSecrets are from the POV of an end user a \"write only\" device.\n\nThe idea is that the SealedSecret can be decrypted only by the controller running in the target cluster and\nnobody else (not even the original author) is able to obtain the original Secret from the SealedSecret.\n\nThe user may or may not have direct access to the target cluster.\nMore specifically, the user might or might not have access to the Secret unsealed by the controller.\n\nThere are many ways to configure RBAC on k8s, but it's quite common to forbid low-privilege users\nfrom reading Secrets. It's also common to give users one or more namespaces where they have higher privileges,\nwhich would allow them to create and read secrets (and/or create deployments that can reference those secrets).\n\nEncrypted `SealedSecret` resources are designed to be safe to be looked at without gaining any knowledge about the secrets it conceals. This implies that we cannot allow users to read a SealedSecret meant for a namespace they wouldn't have access to\nand just push a copy of it in a namespace where they can read secrets from.\n\nSealed-secrets thus behaves *as if* each namespace had its own independent encryption key and thus once you\nseal a secret for a namespace, it cannot be moved in another namespace and decrypted there.\n\nWe don't technically use an independent private key for each namespace, but instead we *include* the namespace name\nduring the encryption process, effectively achieving the same result.\n\nFurthermore, namespaces are not the only level at which RBAC configurations can decide who can see which secret. In fact, it's possible that users can access a secret called `foo` in a given namespace but not any other secret in the same namespace. We cannot thus by default let users freely rename `SealedSecret` resources otherwise a malicious user would be able to decrypt any SealedSecret for that namespace by just renaming it to overwrite the one secret user does have access to. We use the same mechanism used to include the namespace in the encryption key to also include the secret name.\n\nThat said, there are many scenarios where you might not care about this level of protection. For example, the only people who have access to your clusters are either admins or they cannot read any `Secret` resource at all. You might have a use case for moving a sealed secret to other namespaces (e.g. you might not know the namespace name upfront), or you might not know the name of the secret (e.g. it could contain a unique suffix based on the hash of the contents etc).\n\nThese are the possible scopes:\n\n- `strict` (default): the secret must be sealed with exactly the same *name* and *namespace*. These attributes become *part of the encrypted data* and thus changing name and/or namespace would lead to \"decryption error\".\n- `namespace-wide`: you can freely *rename* the sealed secret within a given namespace.\n- `cluster-wide`: the secret can be unsealed in *any* namespace and can be given *any* name.\n\nIn contrast to the restrictions of *name* and *namespace*, secret *items* (i.e. JSON object keys like `spec.encryptedData.my-key`) can be renamed at will without losing the ability to decrypt the sealed secret.\n\nThe scope is selected with the `--scope` flag:\n\n```bash\nkubeseal --scope cluster-wide <secret.yaml >sealed-secret.json\n```\n\nIt's also possible to request a scope via annotations in the input secret you pass to `kubeseal`:\n\n- `sealedsecrets.bitnami.com/namespace-wide: \"true\"` -> for `namespace-wide`\n- `sealedsecrets.bitnami.com/cluster-wide: \"true\"` -> for `cluster-wide`\n\nThe lack of any of such annotations means `strict` mode. If both are set, `cluster-wide` takes precedence.\n\n> NOTE: Next release will consolidate this into a single `sealedsecrets.bitnami.com/scope` annotation.\n\n## Installation\n\nSee https://github.com/bitnami-labs/sealed-secrets/releases for the latest release and detailed installation instructions.\n\nCloud platform specific notes and instructions:\n\n- [GKE](docs/GKE.md)\n\n### Controller\n\nOnce you deploy the manifest it will create the `SealedSecret` resource\nand install the controller into `kube-system` namespace, create a service\naccount and necessary RBAC roles.\n\nAfter a few moments, the controller will start, generate a key pair,\nand be ready for operation. If it does not, check the controller logs.\n\n#### Kustomize\n\nThe official controller manifest installation mechanism is just a YAML file.\n\nIn some cases you might need to apply your own customizations, like set a custom namespace or set some env variables.\n\n`kubectl` has native support for that, see [kustomize](https://kustomize.io/).\n\n#### Helm Chart\n\nThe Sealed Secrets helm chart is now officially supported and hosted in this GitHub repo.\n\n```bash\nhelm repo add sealed-secrets https://bitnami-labs.github.io/sealed-secrets\n```\n\n> NOTE: The versioning scheme of the helm chart differs from the versioning scheme of the sealed secrets project itself.\n\nOriginally the helm chart was maintained by the community and the first version adopted a major version of 1 while the\nsealed secrets project itself is still at major 0.\nThis is ok because the version of the helm chart itself is not meant to be necessarily the version of the app itself.\nHowever this is confusing, so our current versioning rule is:\n\n1. The `SealedSecret` controller version scheme: 0.X.Y\n2. The helm chart version scheme: 1.X.Y-rZ\n\nThere can be thus multiple revisions of the helm chart, with fixes that apply only to the helm chart without\naffecting the static YAML manifests or the controller image itself.\n\n> NOTE: The helm chart readme still contains a deprecation notice, but it no longer reflects reality and will be removed upon the next release.\n\n> NOTE: The helm chart by default installs the controller with the name `sealed-secrets`, while the `kubeseal` command line interface (CLI) tries to access the controller with the name `sealed-secrets-controller`. You can explicitly pass `--controller-name` to the CLI:\n\n```bash\nkubeseal --controller-name sealed-secrets <args>\n```\n\nAlternatively, you can set `fullnameOverride` when installing the chart to override the name. Note also that `kubeseal` assumes that the controller is installed within the `kube-system` namespace by default. So if you want to use the `kubeseal` CLI without having to pass the expected controller name and namespace you should install the Helm Chart like this:\n\n```bash\nhelm install sealed-secrets -n kube-system --set-string fullnameOverride=sealed-secrets-controller sealed-secrets/sealed-secrets\n```\n\n##### Helm Chart on a restricted environment\n\nIn some companies you might be given access only to a single namespace, not a full cluster.\n\nOne of the most restrictive environments you can encounter is:\n- A `namespace` was allocated to you with some `service account`.\n- You do not have access to the rest of the cluster, not even cluster CRDs.\n- You may not even be able to create further service accounts or roles in your namespace.\n- You are required to include resource limits in all your deployments.\n\nEven with these restrictions you can still install the sealed secrets Helm Chart, there is only one pre-requisite:\n- *The cluster must already have the sealed secrets CRDs installed*.\n\nOnce your admins installed the CRDs, if they were not there already, you can install the chart by preparing a YAML config file such as this:\n\n```shell\nserviceAccount:\n  create: false\n  name: {allocated-service-account}\nrbac:\n  create: false\n  clusterRole: false\nresources:\n  limits:\n    cpu: 150m\n    memory: 256Mi\n```\n\nNote that:\n- No service accounts are created, instead the one allocated to you will be used.\n  - `{allocated-service-account}` is the name of the `service account` you were allocated on the cluster.\n- No RBAC roles are created neither in the namespace nor the cluster.\n- Resource limits must be specified.\n  - The limits are samples that should work, but you might want to review them in your particular setup.\n\nOnce that file is ready, if you named it `config.yaml` you now can install the sealed secrets Helm Chart like this:\n\n```shell\nhelm install sealed-secrets -n {allocated-namespace} sealed-secrets/sealed-secrets --skip-crds -f config.yaml\n```\n\nWhere `{allocated-namespace}` is the name of the `namespace` you were allocated in the cluster.\n\n### Kubeseal\n\n#### Homebrew\n\nThe `kubeseal` client is also available on [homebrew](https://formulae.brew.sh/formula/kubeseal):\n\n```bash\nbrew install kubeseal\n```\n\n#### MacPorts\n\nThe `kubeseal` client is also available on [MacPorts](https://ports.macports.org/port/kubeseal/summary):\n\n```bash\nport install kubeseal\n```\n\n#### Nixpkgs\n\nThe `kubeseal` client is also available on [Nixpkgs](https://search.nixos.org/packages?channel=unstable&show=kubeseal&from=0&size=50&sort=relevance&type=packages&query=kubeseal): (**DISCLAIMER**: Not maintained by bitnami-labs)\n\n```bash\nnix-env -iA nixpkgs.kubeseal\n```\n\n#### Linux\n\nThe `kubeseal` client can be installed on Linux, using the below commands:\n\n```bash\nKUBESEAL_VERSION='' # Set this to, for example, KUBESEAL_VERSION='0.23.0'\ncurl -OL \"https://github.com/bitnami-labs/sealed-secrets/releases/download/v${KUBESEAL_VERSION:?}/kubeseal-${KUBESEAL_VERSION:?}-linux-amd64.tar.gz\"\ntar -xvzf kubeseal-${KUBESEAL_VERSION:?}-linux-amd64.tar.gz kubeseal\nsudo install -m 755 kubeseal /usr/local/bin/kubeseal\n```\n\nIf you have `curl` and `jq` installed on your machine, you can get the version dynamically this way. This can be useful for environments used in automation and such.\n\n```\n# Fetch the latest sealed-secrets version using GitHub API\nKUBESEAL_VERSION=$(curl -s https://api.github.com/repos/bitnami-labs/sealed-secrets/tags | jq -r '.[0].name' | cut -c 2-)\n\n# Check if the version was fetched successfully\nif [ -z \"$KUBESEAL_VERSION\" ]; then\n    echo \"Failed to fetch the latest KUBESEAL_VERSION\"\n    exit 1\nfi\n\ncurl -OL \"https://github.com/bitnami-labs/sealed-secrets/releases/download/v${KUBESEAL_VERSION}/kubeseal-${KUBESEAL_VERSION}-linux-amd64.tar.gz\"\ntar -xvzf kubeseal-${KUBESEAL_VERSION}-linux-amd64.tar.gz kubeseal\nsudo install -m 755 kubeseal /usr/local/bin/kubeseal\n```\n\nwhere `KUBESEAL_VERSION` is the [version tag](https://github.com/bitnami-labs/sealed-secrets/tags) of the kubeseal release you want to use. For example: `v0.18.0`.\n\n#### Installation from source\n\nIf you just want the latest client tool, it can be installed into\n`$GOPATH/bin` with:\n\n```bash\ngo install github.com/bitnami-labs/sealed-secrets/cmd/kubeseal@main\n```\n\nYou can specify a release tag or a commit SHA instead of `main`.\n\nThe `go install` command will place the `kubeseal` binary at `$GOPATH/bin`:\n\n```bash\n$(go env GOPATH)/bin/kubeseal\n```\n\n## Upgrade\n\nDon't forget to check the [release notes](RELEASE-NOTES.md) for guidance about\npossible breaking changes when you upgrade the client tool\nand/or the controller.\n\n### Supported Versions\nCurrently, only the latest version of Sealed Secrets is supported for production environments.\n\n### Compatibility with Kubernetes versions\nThe Sealed Secrets controller ensures compatibility with different versions of Kubernetes by relying on a stable Kubernetes API. Typically, Kubernetes versions above 1.16 are considered compatible. However, we officially support the [currently recommended Kubernetes versions](https://kubernetes.io/releases/). Additionally, versions above 1.24 undergo thorough verification through our CI process with every release.\n\n## Usage\n\n```bash\n# Create a json/yaml-encoded Secret somehow:\n# (note use of `--dry-run` - this is just a local file!)\necho -n bar | kubectl create secret generic mysecret --dry-run=client --from-file=foo=/dev/stdin -o json >mysecret.json\n\n# This is the important bit:\nkubeseal -f mysecret.json -w mysealedsecret.json\n\n# At this point mysealedsecret.json is safe to upload to Github,\n# post on Twitter, etc.\n\n# Eventually:\nkubectl create -f mysealedsecret.json\n\n# Profit!\nkubectl get secret mysecret\n```\n\nNote the `SealedSecret` and `Secret` must have **the same namespace and\nname**. This is a feature to prevent other users on the same cluster\nfrom re-using your sealed secrets. See the [Scopes](#scopes) section for more info.\n\n`kubeseal` reads the namespace from the input secret, accepts an explicit `--namespace` argument, and uses\nthe `kubectl` default namespace (in that order). Any labels,\nannotations, etc on the original `Secret` are preserved, but not\nautomatically reflected in the `SealedSecret`.\n\nBy design, this scheme *does not authenticate the user*. In other\nwords, *anyone* can create a `SealedSecret` containing any `Secret`\nthey like (provided the namespace/name matches). It is up to your\nexisting config management workflow, cluster RBAC rules, etc to ensure\nthat only the intended `SealedSecret` is uploaded to the cluster. The\nonly change from existing Kubernetes is that the *contents* of the\n`Secret` are now hidden while outside the cluster.\n\n### Managing existing secrets\n\nIf you want the Sealed Secrets controller to manage an existing `Secret`, you can annotate your `Secret` with the `sealedsecrets.bitnami.com/managed: \"true\"` annotation. The existing `Secret` will be overwritten when unsealing a `SealedSecret` with the same name and namespace, and the `SealedSecret` will take ownership of the `Secret` (so that when the `SealedSecret` is deleted the `Secret` will also be deleted).\n\n### Patching existing secrets\n\n> New in v0.23.0\n\nThere are some use cases in which you don't want to replace the whole `Secret` but just add or modify some keys from the existing `Secret`. For this, you can annotate your `Secret` with `sealedsecrets.bitnami.com/patch: \"true\"`. Using this annotation will make sure that secret keys, labels and annotations in the `Secret` that are not present in the `SealedSecret` won't be deleted, and those present in the `SealedSecret` will be added to the `Secret` (secret keys, labels and annotations that exist both in the `Secret` and the `SealedSecret` will be modified by the `SealedSecret`).\n\nThis annotation does not make the `SealedSecret` take ownership of the `Secret`. You can add both the `patch` and `managed` annotations to obtain the patching behavior while also taking ownership of the `Secret`.\n\n### Seal secret which can skip set owner references\n\nIf you want `SealedSecret` and the `Secret` to be independent, which mean when you delete the `SealedSecret` the `Secret` won't disappear with it, then you have to annotate that Secret with the annotation `sealedsecrets.bitnami.com/skip-set-owner-references: \"true\"` ahead of applying the Usage steps. You still may also add `sealedsecrets.bitnami.com/managed: \"true\"` to your `Secret` so that your secret will be updated when `SealedSecret` is updated.\n\n### Update existing secrets\n\nIf you want to add or update existing sealed secrets without having the cleartext for the other items,\nyou can just copy&paste the new encrypted data items and merge it into an existing sealed secret.\n\nYou must take care of sealing the updated items with a compatible name and namespace (see note about scopes above).\n\nYou can use the `--merge-into` command to update an existing sealed secrets if you don't want to copy&paste:\n\n```bash\necho -n bar | kubectl create secret generic mysecret --dry-run=client --from-file=foo=/dev/stdin -o json \\\n  | kubeseal > mysealedsecret.json\necho -n baz | kubectl create secret generic mysecret --dry-run=client --from-file=bar=/dev/stdin -o json \\\n  | kubeseal --merge-into mysealedsecret.json\n```\n\n### Raw mode (experimental)\n\nCreating temporary Secret with the `kubectl` command, only to throw it away once piped to `kubeseal` can\nbe a quite unfriendly user experience. We're working on an overhaul of the CLI experience. In the meantime,\nwe offer an alternative mode where kubeseal only cares about encrypting a value to stdout, and it's your responsibility to put it inside a `SealedSecret` resource (not unlike any of the other k8s resources).\n\nIt can also be useful as a building block for editor/IDE integrations.\n\nThe downside is that you have to be careful to be consistent with the sealing scope, the namespace and the name.\n\nSee [Scopes](#scopes)\n\n`strict` scope (default):\n\n```console\n$ echo -n foo | kubeseal --raw --namespace bar --name mysecret\nAgBChHUWLMx...\n```\n\n`namespace-wide` scope:\n\n```console\n$ echo -n foo | kubeseal --raw --namespace bar --scope namespace-wide\nAgAbbFNkM54...\n```\nInclude the `sealedsecrets.bitnami.com/namespace-wide` annotation in the `SealedSecret`\n```yaml\nmetadata:\n  annotations:\n    sealedsecrets.bitnami.com/namespace-wide: \"true\"\n```\n\n`cluster-wide` scope:\n\n```console\n$ echo -n foo | kubeseal --raw --scope cluster-wide\nAgAjLKpIYV+...\n```\nInclude the `sealedsecrets.bitnami.com/cluster-wide` annotation in the `SealedSecret`\n```yaml\nmetadata:\n  annotations:\n    sealedsecrets.bitnami.com/cluster-wide: \"true\"\n```\n\n### Validate a Sealed Secret\n\nIf you want to validate an existing sealed secret, `kubeseal` has the flag `--validate` to help you.\n\nGiving a file named `sealed-secrets.yaml` containing the following sealed secret:\n\n```yaml\napiVersion: bitnami.com/v1alpha1\nkind: SealedSecret\nmetadata:\n  name: mysecret\n  namespace: mynamespace\nspec:\n  encryptedData:\n    foo: AgBy3i4OJSWK+PiTySYZZA9rO43cGDEq.....\n```\n\nYou can validate if the sealed secret was properly created or not:\n\n```console\n$ cat sealed-secrets.yaml | kubeseal --validate\n```\n\nIn case of an invalid sealed secret, `kubeseal` will show:\n\n```console\n$ cat sealed-secrets.yaml | kubeseal --validate\nerror: unable to decrypt sealed secret\n```\n\n## Secret Rotation\n\nYou should always rotate your secrets. But since your secrets are encrypted with another secret,\nyou need to understand how these two layers relate to take the right decisions.\n\nTL;DR:\n\n> If a *sealing* private key is compromised, you need to follow the instructions below in \"Early key renewal\"\n> section before rotating any of your actual secret values.\n>\n> SealedSecret key renewal and re-encryption features are **not a substitute** for periodical rotation of your actual secret values.\n\n### Sealing key renewal\n\nSealing keys are automatically renewed every 30 days. Which means a new sealing key is created and appended to the set of active sealing keys the controller can use to unseal `SealedSecret` resources.\n\nThe most recently created sealing key is the one used to seal new secrets when you use `kubeseal` and it's the one whose certificate is downloaded when you use `kubeseal --fetch-cert`.\n\nThe renewal time of 30 days is a reasonable default, but it can be tweaked as needed\nwith the `--key-renew-period=<value>` flag for the command in the pod template of the `SealedSecret` controller. The `value` field can be given as golang\nduration flag (eg: `720h30m`). Assuming that you've installed Sealed Secrets into the `kube-system` namespace, use the following command to edit the Deployment controller, and add the `--key-renew-period` parameter. Once you close your text editor, and the Deployment controller has been modified, a new Pod will be automatically created to replace the old Pod.\n\n```\nkubectl edit deployment/sealed-secrets-controller --namespace=kube-system\n```\n\nA value of `0` will deactivate automatic key renewal. Of course, you may have a valid use case for deactivating automatic sealing key renewal but experience has shown that new users often tend to jump to conclusions that they want control over key renewal, before fully understanding how sealed secrets work. Read more about this in the [common misconceptions](#common-misconceptions-about-key-renewal) section below.\n\n> Unfortunately, you cannot use e.g. \"d\" as a unit for days because that's not supported by the Go stdlib. Instead of hitting your face with a palm, take this as an opportunity to meditate on the [falsehoods programmers believe about time](https://infiniteundo.com/post/25326999628/falsehoods-programmers-believe-about-time).\n\nA common misunderstanding is that key renewal is often thought of as a form of key rotation, where the old key is not only obsolete but actually bad and that you thus want to get rid of it.\nIt doesn't help that this feature has been historically called \"key rotation\", which can add to the confusion.\n\nSealed secrets are not automatically rotated and old keys are not deleted\nwhen new keys are generated. Old `SealedSecret` resources can be still decrypted (that's because old sealing keys are not deleted).\n\n### User secret rotation\n\nThe *sealing key* renewal and SealedSecret rotation are **not a substitute** for rotating your actual secrets.\n\nA core value proposition of this tool is:\n\n> Encrypt your Secret into a SealedSecret, which *is* safe to store - even inside a public repository.\n\nIf you store anything in a version control storage, and in a public one in particular, you must assume\nyou cannot ever delete that information.\n\n*If* a sealing key somehow leaks out of the cluster you must consider all your `SealedSecret` resources\nencrypted with that key as compromised. No amount of sealing key rotation in the cluster or even re-encryption of existing SealedSecrets files can change that.\n\nThe best practice is to periodically rotate all your actual secrets (e.g. change the password) **and** craft new\n`SealedSecret` resources with those new secrets.\n\nBut if the `SealedSecret` controller was not renewing the *sealing key* that rotation would be moot,\nsince the attacker could just decrypt the new secrets as well. Thus, you need to do both: periodically renew the sealing key and rotate your actual secrets!\n\n### Early key renewal\n\nIf you know or suspect a *sealing key* has been compromised you should renew the key ASAP before you\nstart sealing your new rotated secrets, otherwise you'll be giving attackers access to your new secrets as well.\n\nA key can be generated early by passing the current timestamp to the controller into a flag called `--key-cutoff-time` or an env var called `SEALED_SECRETS_KEY_CUTOFF_TIME`. The expected format is RFC1123, you can generate it with the `date -R` unix command.\n\n### Common misconceptions about key renewal\n\nSealed secrets sealing keys are not access control keys (e.g. a password). They are more like the GPG key you might use to read encrypted mail sent to you. Let's continue with the email analogy for a bit:\n\nImagine you have reasons to believe your private GPG key might have been compromised. You'd have more to lose than to gain if the first thing you do is just delete your private key. All the previous emails sent with that key are no longer accessible to you (unless you have a decrypted copy of those emails), nor are new emails sent by your friends whom you have not yet managed to tell to use the new key.\n\nSure, the content of those encrypted emails is not secure, as an attacker might now be able to decrypt them, but what's done is done. Your sudden loss of the ability to read those emails surely doesn't undo the damage. If anything, it's worse because you no longer know for sure what secret the attacker got to know. What you really want to do is to make sure that your friend stops using your old key and that from now on all further communication is encrypted with a new key pair (i.e. your friend must know about that new key).\n\nThe same logic applies to SealedSecrets. The ultimate goal is to secure your actual \"user\" secrets. The \"sealing\" secrets are just a mechanism, an \"envelope\". If a secret is leaked there is no going back, what's done is done.\n\nYou first need to ensure that new secrets don't get encrypted with that old compromised key (in the email analogy above that's: create a new key pair and give all your friends your new public key).\n\nThe second logical step is to neutralize the damage, which depends on the nature of the secret. A simple example is a database password: if you accidentally leak your database password, the thing you're supposed to do is simply to change your database password (on the database; and revoke the old one!) *and* update the `SealedSecret` resource with the new password (i.e. running `kubeseal` again).\n\nBoth steps are described in the previous sections, albeit in a less verbose way. There is no shame in reading them again, now that you have a more in-depth grasp of the underlying rationale.\n\n### Manual key management (advanced)\n\nThe `SealedSecret` controller and the associated workflow are designed to keep old sealing keys around and periodically add new ones. You should not delete old keys unless you know what you're doing.\n\nThat said, if you want you can manually manage (create, move, delete) *sealing keys*. They are just normal k8s secrets living in the same namespace where the `SealedSecret` controller lives (usually `kube-system`, but it's configurable).\n\nThere are advanced use cases that you can address by creative management of the sealing keys.\nFor example, you can share the same sealing key among a few clusters so that you can apply exactly the same sealed secret in multiple clusters.\nSince sealing keys are just normal k8s secrets you can even use sealed secrets themselves and use a GitOps workflow to manage your sealing keys (useful when you want to share the same key among different clusters)!\n\nLabeling a *sealing key* secret with anything other than `active` effectively deletes\nthe key from the `SealedSecret` controller, but it is still available in k8s for\nmanual encryption/decryption if need be.\n\n**NOTE** `SealedSecret` controller currently does not automatically pick up manually created, deleted or relabeled sealing keys. An admin must restart the controller before the effect will apply.\n\n### Re-encryption (advanced)\n\nBefore you can get rid of some old sealing keys you need to re-encrypt your SealedSecrets with the latest private key.\n\n```bash\nkubeseal --re-encrypt <my_sealed_secret.json >tmp.json \\\n  && mv tmp.json my_sealed_secret.json\n```\n\nThe invocation above will produce a new sealed secret file freshly encrypted with\nthe latest key, without making the secrets leave the cluster to the client. You can then save that file\nin your version control system (`kubeseal --re-encrypt` doesn't update the in-cluster object).\n\nCurrently, old keys are not garbage collected automatically.\n\nIt's a good idea to periodically re-encrypt your SealedSecrets. But as mentioned above, don't lull yourself in a false sense of security: you must assume the old version of the `SealedSecret` resource (the one encrypted with a key you think of as dead) is still potentially around and accessible to attackers. I.e. re-encryption is not a substitute for periodically rotating your actual secrets.\n\n## Details (advanced)\n\nThis controller adds a new `SealedSecret` custom resource. The\ninteresting part of a `SealedSecret` is a base64-encoded\nasymmetrically encrypted `Secret`.\n\nThe controller maintains a set of private/public key pairs as kubernetes\nsecrets. Keys are labeled with `sealedsecrets.bitnami.com/sealed-secrets-key`\nand identified in the label as either `active` or `compromised`. On startup,\nThe sealed secrets controller will...\n\n1. Search for these keys and add them to its local store if they are\nlabeled as active.\n2. Create a new key\n3. Start the key rotation cycle\n\n### Crypto\n\nMore details about crypto can be found [here](docs/developer/crypto.md).\n\n## Developing\n\nDeveloping guidelines can be found [in the Developer Guide](docs/developer/README.md).\n\n## FAQ\n\n### Can I encrypt multiple secrets at once, in one YAML / JSON file?\n\nYes, you can! Drop as many secrets as you like in one file. Make sure to separate them via `---` for YAML and as extra, single objects in JSON.\n\n### Will you still be able to decrypt if you no longer have access to your cluster?\n\nNo, the private keys are only stored in the Secret managed by the controller (unless you have some other backup of your k8s objects). There are no backdoors - without that private key used to encrypt a given SealedSecrets, you can't decrypt it. If you can't get to the Secrets with the encryption keys, and you also can't get to the decrypted versions of your Secrets live in the cluster, then you will need to regenerate new passwords for everything, seal them again with a new sealing key, etc.\n\n### How can I do a backup of my SealedSecrets?\n\nIf you do want to make a backup of the encryption private keys, it's easy to do from an account with suitable access:\n\n```bash\nkubectl get secret -n kube-system -l sealedsecrets.bitnami.com/sealed-secrets-key -o yaml >main.key\n\necho \"---\" >> main.key\nkubectl get secret -n kube-system sealed-secrets-key -o yaml >>main.key\n```\n\n> NOTE: You need the second statement only if you ever installed sealed-secrets older than version 0.9.x on your cluster.\n\n> NOTE: This file will contain the controller's public + private keys and should be kept omg-safe!\n\n> NOTE: After sealing key renewal you should recreate your backup. Otherwise, your backup won't be able to decrypt new sealed secrets.\n\nTo restore from a backup after some disaster, just put that secrets back before starting the controller - or if the controller was already started, replace the newly-created secrets and restart the controller:\n\n* For Helm deployment:\n    ```bash\n    kubectl apply -f main.key\n    kubectl delete pod -n kube-system -l app.kubernetes.io/name=sealed-secrets\n    ```\n\n* For deployment via `controller.yaml` manifest\n    ```bash\n    kubectl apply -f main.key\n    kubectl delete pod -n kube-system -l name=sealed-secrets-controller\n    ```\n\n### Can I decrypt my secrets offline with a backup key?\n\nWhile treating sealed-secrets as long term storage system for secrets is not the recommended use case, some people\ndo have a legitimate requirement for being able to recover secrets when the k8s cluster is down and restoring a backup into a new `SealedSecret` controller deployment is not practical.\n\nIf you have backed up one or more of your private keys (see previous question), you can use the `kubeseal --recovery-unseal --recovery-private-key file1.key,file2.key,...` command to decrypt a sealed secrets file.\n\n### What flags are available for kubeseal?\n\nYou can check the flags available using `kubeseal --help`.\n\n### How do I update parts of JSON/YAML/TOML/.. file encrypted with sealed secrets?\n\nA kubernetes `Secret` resource contains multiple items, basically a flat map of key/value pairs.\nSealedSecrets operate at that level, and does not care what you put in the values. In other words\nit cannot make sense of any structured configuration file you might have put in a secret and thus\ncannot help you update individual fields in it.\n\nSince this is a common problem, especially when dealing with legacy applications, we do offer an [example](docs/examples/config-template) of a possible workaround.\n\n### Can I bring my own (pre-generated) certificates?\n\nYes, you can provide the controller with your own certificates, and it will consume them.\nPlease check [here](docs/bring-your-own-certificates.md) for a workaround.\n\n### How to use kubeseal if the controller is not running within the `kube-system` namespace?\n\nIf you installed the controller in a different namespace than the default `kube-system`, you need to provide this namespace\nto the `kubeseal` commandline tool. There are two options:\n\n1. You can specify the namespace via the command line option `--controller-namespace <namespace>`:\n\n  ```bash\nkubeseal --controller-namespace sealed-secrets <mysecret.json >mysealedsecret.json\n```\n\n2. Via the environment variable `SEALED_SECRETS_CONTROLLER_NAMESPACE`:\n\n  ```bash\nexport SEALED_SECRETS_CONTROLLER_NAMESPACE=sealed-secrets\nkubeseal <mysecret.json >mysealedsecret.json\n```\n\n### How to verify the images?\n\nOur images are being signed using [cosign](https://github.com/sigstore/cosign). The signatures have been saved in our [GitHub Container Registry](https://ghcr.io/bitnami-labs/sealed-secrets-controller/signs).\n\n> Images up to and including v0.20.2 were signed using Cosign v1. Newer images are signed with Cosign v2.\n\nIt is pretty simple to verify the images:\n\n```bash\n# export the COSIGN_VARIABLE setting up the GitHub container registry signs path\nexport COSIGN_REPOSITORY=ghcr.io/bitnami-labs/sealed-secrets-controller/signs\n\n# verify the image uploaded in GHCR\ncosign verify --key .github/workflows/cosign.pub ghcr.io/bitnami-labs/sealed-secrets-controller:latest\n\n# verify the image uploaded in Dockerhub\ncosign verify --key .github/workflows/cosign.pub docker.io/bitnami/sealed-secrets-controller:latest\n```\n\n### How to use one controller for a subset of namespaces\n\nIf you want to use one controller for more than one namespace, but not all namespaces, you can provide additional namespaces using the command line flag `--additional-namespaces=<namespace1>,<namespace2>,<...>`. Make sure you provide appropriate roles and rolebindings in the target namespaces, so the controller can manage the secrets in there.\n\n### Can I configure the Controller unseal retries?\n\nThe answer is yes, you can configure the number of retries in your controller using the flag `--max-unseal-retries`. This flag allows you to configure the number of maximum retries to unseal your Sealed Secrets.\n\n## Community\n\n- [#sealed-secrets on Kubernetes Slack](https://kubernetes.slack.com/messages/sealed-secrets)\n\nClick [here](http://slack.k8s.io) to sign up to the Kubernetes Slack org.\n\n### Related projects\n\n- `kubeseal-convert`: [https://github.com/EladLeev/kubeseal-convert](https://github.com/EladLeev/kubeseal-convert)\n- Visual Studio Code extension: [https://marketplace.visualstudio.com/items?itemName=codecontemplator.kubeseal](https://marketplace.visualstudio.com/items?itemName=codecontemplator.kubeseal)\n- WebSeal: generates secrets in the browser: [https://socialgouv.github.io/webseal](https://socialgouv.github.io/webseal)\n- HybridEncrypt TypeScript implementation: [https://github.com/SocialGouv/aes-gcm-rsa-oaep](https://github.com/SocialGouv/aes-gcm-rsa-oaep)\n- [DEPRACATED] Sealed Secrets Operator: [https://github.com/disposab1e/sealed-secrets-operator-helm](https://github.com/disposab1e/sealed-secrets-operator-helm)\n"
        },
        {
          "name": "RELEASE-NOTES.md",
          "type": "blob",
          "size": 60.5263671875,
          "content": "# Release Notes\n\nLatest release:\n\n[![](https://img.shields.io/github/release/bitnami-labs/sealed-secrets.svg)](https://github.com/bitnami-labs/sealed-secrets/releases/latest)\n\n## v0.27.3\n\n- Bump k8s.io/apimachinery from 0.31.2 to 0.31.3 ([#1642](https://github.com/bitnami-labs/sealed-secrets/pull/1642))\n- Bump k8s.io/code-generator from 0.31.2 to 0.31.3 ([#1643](https://github.com/bitnami-labs/sealed-secrets/pull/1643))\n- Bump github.com/onsi/gomega from 1.35.1 to 1.36.0 ([#1645](https://github.com/bitnami-labs/sealed-secrets/pull/1645))\n- re-introduce install instructions with to releases ([#1649](https://github.com/bitnami-labs/sealed-secrets/pull/1649))\n- Properly error out when input file doesn't exist ([#1640](https://github.com/bitnami-labs/sealed-secrets/pull/1640))\n- Bump github.com/onsi/ginkgo/v2 from 2.21.0 to 2.22.0 ([#1641](https://github.com/bitnami-labs/sealed-secrets/pull/1641))\n- Bump golang.org/x/crypto from 0.28.0 to 0.29.0 ([#1635](https://github.com/bitnami-labs/sealed-secrets/pull/1635))\n- Configure max retries ([#1633](https://github.com/bitnami-labs/sealed-secrets/pull/1633))\n- Label \"app.kubernetes.io/instance\" in the Prometheus metric ([#1620](https://github.com/bitnami-labs/sealed-secrets/pull/1620))\n- Bump github.com/onsi/gomega from 1.34.2 to 1.35.1 ([#1624](https://github.com/bitnami-labs/sealed-secrets/pull/1624))\n- Adding keyttl and keycutofftime options to helm chart ([#1610](https://github.com/bitnami-labs/sealed-secrets/pull/1610))\n- Bump github.com/onsi/ginkgo/v2 from 2.20.2 to 2.21.0 ([#1623](https://github.com/bitnami-labs/sealed-secrets/pull/1623))\n\n## v0.27.2\n\n- feature: Show error if there's no secret to encode ([#1580](https://github.com/bitnami-labs/sealed-secrets/pull/1580))\n- feature: allow container port configuration ([#1606](https://github.com/bitnami-labs/sealed-secrets/pull/1606))\n- chore: Update go version to 1.22.8 ([#1621](https://github.com/bitnami-labs/sealed-secrets/pull/1621))\n- chore: Update the TCSP settings for helm testing ([#1608](https://github.com/bitnami-labs/sealed-secrets/pull/1608))\n- chore: Redirect external site to the GitHub Repository ([#1589](https://github.com/bitnami-labs/sealed-secrets/pull/1589))\n- chore: Update dependencies (Several automatic PRs)\n\n## v0.27.1\n\n- chore: Update dependencies ([#1565](https://github.com/bitnami-labs/sealed-secrets/pull/1565))\n- chore: Bump golang.org/x/crypto from 0.24.0 to 0.25.0 ([#1561](https://github.com/bitnami-labs/sealed-secrets/pull/1561))\n- chore: Bump k8s.io/klog/v2 from 2.130.0 to 2.130.1 ([#1558](https://github.com/bitnami-labs/sealed-secrets/pull/1558))\n- chore: Improve release process ([#1559](https://github.com/bitnami-labs/sealed-secrets/pull/1559))\n\n## v0.27.0\n\n- feature: loadbalancerclass ([#1545](https://github.com/bitnami-labs/sealed-secrets/pull/1545))\n- Add sprig function library for templating ([#1542](https://github.com/bitnami-labs/sealed-secrets/pull/1542))\n- Update install instructions for consistent HTTP request package ([#1546](https://github.com/bitnami-labs/sealed-secrets/pull/1546))\n- Bump k8s.io/client-go from 0.30.1 to 0.30.2 ([#1552](https://github.com/bitnami-labs/sealed-secrets/pull/1552))\n- Bump k8s.io/klog/v2 from 2.120.1 to 2.130.0 ([#1551](https://github.com/bitnami-labs/sealed-secrets/pull/1551))\n- Bump k8s.io/code-generator from 0.30.1 to 0.30.2 ([#1550](https://github.com/bitnami-labs/sealed-secrets/pull/1550))\n- Bump golang.org/x/crypto from 0.23.0 to 0.24.0 ([#1544](https://github.com/bitnami-labs/sealed-secrets/pull/1544))\n- Bump github.com/onsi/ginkgo/v2 from 2.17.3 to 2.19.0 ([#1540](https://github.com/bitnami-labs/sealed-secrets/pull/1540))\n\n## v0.26.3\n\n### Changelog\n\n- fix: code generation ([#1536](https://github.com/bitnami-labs/sealed-secrets/pull/1536))\n- fix: show field name in error message when base64 decoding fails ([#1519](https://github.com/bitnami-labs/sealed-secrets/pull/1519))\n- helm: Set `GOMAXPROCS` and `GOMEMLIMIT` environment variables ([#1528](https://github.com/bitnami-labs/sealed-secrets/pull/1528))\n- docs: mention limitation of backup with key renewal ([#1533](https://github.com/bitnami-labs/sealed-secrets/pull/1533))\n- chore: update dependencies ([#1535](https://github.com/bitnami-labs/sealed-secrets/pull/1535))\n- chore: Bump k8s.io/code-generator from 0.30.0 to 0.30.1 ([#1529](https://github.com/bitnami-labs/sealed-secrets/pull/1529))\n- chore: Bump k8s.io/client-go from 0.30.0 to 0.30.1 ([#1532](https://github.com/bitnami-labs/sealed-secrets/pull/1532))\n- chore: Bump github.com/onsi/ginkgo/v2 from 2.17.2 to 2.17.3 ([#1527](https://github.com/bitnami-labs/sealed-secrets/pull/1527))\n- chore: Bump github.com/prometheus/client_golang from 1.19.0 to 1.19.1 ([#1526](https://github.com/bitnami-labs/sealed-secrets/pull/1526))\n- chore: Bump k8s.io/code-generator from 0.29.3 to 0.30.0 ([#1513](https://github.com/bitnami-labs/sealed-secrets/pull/1513))\n- chore: Update dependencies ([#1524](https://github.com/bitnami-labs/sealed-secrets/pull/1524))\n- chore: Bump github.com/onsi/gomega from 1.33.0 to 1.33.1 ([#1522](https://github.com/bitnami-labs/sealed-secrets/pull/1522))\n- chore: Bump github.com/onsi/ginkgo/v2 from 2.17.1 to 2.17.2 ([#1520](https://github.com/bitnami-labs/sealed-secrets/pull/1520))\n- chore: Bump github.com/onsi/gomega from 1.32.0 to 1.33.0 ([#1512](https://github.com/bitnami-labs/sealed-secrets/pull/1512))\n- chore: increase vib timeout ([#1509](https://github.com/bitnami-labs/sealed-secrets/pull/1509))\n- chore: fix publish-release workflow ([#1508](https://github.com/bitnami-labs/sealed-secrets/pull/1508))\n- chore: Bump golang.org/x/crypto from 0.21.0 to 0.22.0 ([#1505](https://github.com/bitnami-labs/sealed-secrets/pull/1505))\n\n## v0.26.2\n\n### Changelog\n\n- fix: update dependencies and version for CVE-2023-45288 ([#1501](https://github.com/bitnami-labs/sealed-secrets/pull/1501))\n- fix(helm): role binding annotations ([#1494](https://github.com/bitnami-labs/sealed-secrets/pull/1494))\n- chore: update cosign version ([#1495](https://github.com/bitnami-labs/sealed-secrets/pull/1495))\n- chore: Bump github.com/onsi/ginkgo/v2 from 2.16.0 to 2.17.1 ([#1497](https://github.com/bitnami-labs/sealed-secrets/pull/1497))\n- chore: Bump k8s.io/client-go from 0.29.2 to 0.29.3 ([#1486](https://github.com/bitnami-labs/sealed-secrets/pull/1486))\n- chore: Bump k8s.io/code-generator from 0.29.2 to 0.29.3 ([#1488](https://github.com/bitnami-labs/sealed-secrets/pull/1488))\n- chore: Bump github.com/onsi/gomega from 1.31.1 to 1.32.0 ([#1489](https://github.com/bitnami-labs/sealed-secrets/pull/1489))\n- chore: Bump k8s.io/apimachinery from 0.29.2 to 0.29.3 ([#1490](https://github.com/bitnami-labs/sealed-secrets/pull/1490))\n- chore: Update security contact and other references DL to the new team one ([#1500](https://github.com/bitnami-labs/sealed-secrets/pull/1500))\n\n## v0.26.1\n\n### Changelog\n\n- fix: panic when patching empty secret ([#1474](https://github.com/bitnami-labs/sealed-secrets/pull/1474))\n- fix: Modify LastUpdateTime when the Sealed Secrets is being updated ([#1475](https://github.com/bitnami-labs/sealed-secrets/pull/1475))\n- fix: Bring back private keys logging ([#1481](https://github.com/bitnami-labs/sealed-secrets/pull/1481))\n- fix: missing common annotations in the helm chart ([#1471](https://github.com/bitnami-labs/sealed-secrets/pull/1471))\n- fix: Add metrics port to allow ingress traffic in the netpols ([#1473](https://github.com/bitnami-labs/sealed-secrets/pull/1473))\n- chore: Bump google.golang.org/protobuf from 1.32.0 to 1.33.0 ([#1480](https://github.com/bitnami-labs/sealed-secrets/pull/1480))\n- chore: Bump golang.org/x/crypto from 0.20.0 to 0.21.0 ([#1477](https://github.com/bitnami-labs/sealed-secrets/pull/1477))\n- chore: Bump github.com/onsi/ginkgo/v2 from 2.15.0 to 2.16.0 ([#1478](https://github.com/bitnami-labs/sealed-secrets/pull/1478))\n- chore: Bump github.com/prometheus/client_golang from 1.18.0 to 1.19.0 ([#1476](https://github.com/bitnami-labs/sealed-secrets/pull/1476))\n- chore: Bump golang.org/x/crypto from 0.19.0 to 0.20.0 ([#1472](https://github.com/bitnami-labs/sealed-secrets/pull/1472))\n- chore: Bump k8s.io/code-generator from 0.29.1 to 0.29.2 ([#1467](https://github.com/bitnami-labs/sealed-secrets/pull/1467))\n\n## v0.26.0\n\n### Changelog\n\n- feat: Implement structured logging ([#1438](https://github.com/bitnami-labs/sealed-secrets/pull/1438))\n- feat: [helm] add rbac.proxier config ([#1451](https://github.com/bitnami-labs/sealed-secrets/pull/1451))\n- docs: Add clarity around template Secret fields ([#1456](https://github.com/bitnami-labs/sealed-secrets/pull/1456))\n- docs: [helm] adding disable keyrenewperiod comment ([#1455](https://github.com/bitnami-labs/sealed-secrets/pull/1455))\n- chore: Update Go version and dependencies ([#1460](https://github.com/bitnami-labs/sealed-secrets/pull/1460))\n- chore: Bump golang.org/x/crypto from 0.18.0 to 0.19.0 ([#1458](https://github.com/bitnami-labs/sealed-secrets/pull/1458))\n- chore: Bump k8s.io/client-go from 0.29.0 to 0.29.1 ([#1452](https://github.com/bitnami-labs/sealed-secrets/pull/1452))\n- chore: Bump k8s.io/code-generator from 0.29.0 to 0.29.1 ([#1441](https://github.com/bitnami-labs/sealed-secrets/pull/1441))\n- chore: Bump k8s.io/api from 0.29.0 to 0.29.1 ([#1443](https://github.com/bitnami-labs/sealed-secrets/pull/1443))\n- chore: Bump k8s.io/klog/v2 from 2.120.0 to 2.120.1 ([#1439](https://github.com/bitnami-labs/sealed-secrets/pull/1439))\n- chore: Bump github.com/onsi/gomega from 1.30.0 to 1.31.1 ([#1440](https://github.com/bitnami-labs/sealed-secrets/pull/1440))\n\n## v0.25.0\n\n### Changelog\n\n- feat: support immutable secrets ([#1395](https://github.com/bitnami-labs/sealed-secrets/pull/1395))\n- Update dependencies ([#1411](https://github.com/bitnami-labs/sealed-secrets/pull/1411))\n- Support fetching certificate URL via proxy environment variables ([#1419](https://github.com/bitnami-labs/sealed-secrets/pull/1419))\n- Bump github.com/onsi/ginkgo/v2 from 2.13.2 to 2.14.0 ([#1432](https://github.com/bitnami-labs/sealed-secrets/pull/1432)\n- Bump k8s.io/klog/v2 from 2.110.1 to 2.120.0 ([#1431](https://github.com/bitnami-labs/sealed-secrets/pull/1431))\n- Bump golang.org/x/crypto from 0.17.0 to 0.18.0 ([#1425](https://github.com/bitnami-labs/sealed-secrets/pull/1425))\n- Bump github.com/prometheus/client_golang from 1.17.0 to 1.18.0 ([#1421](https://github.com/bitnami-labs/sealed-secrets/pull/1421))\n- Bump k8s.io/code-generator from 0.28.4 to 0.29.0 ([#1406](https://github.com/bitnami-labs/sealed-secrets/pull/1406))\n- Bump golang.org/x/crypto from 0.16.0 to 0.17.0 ([#1405](https://github.com/bitnami-labs/sealed-secrets/pull/1405))\n\n## v0.24.5\n\n### Changelog\n\n- feat: Helm - Add sources ([#1383](https://github.com/bitnami-labs/sealed-secrets/pull/1383))\n- Update golang to the latest tooling version ([#1398](https://github.com/bitnami-labs/sealed-secrets/pull/1398))\n- Bump github.com/onsi/ginkgo/v2 from 2.13.1 to 2.13.2 ([#1397](https://github.com/bitnami-labs/sealed-secrets/pull/1397))\n- Bump golang.org/x/crypto from 0.15.0 to 0.16.0 ([#1394](https://github.com/bitnami-labs/sealed-secrets/pull/1394))\n- Bump k8s.io/code-generator from 0.28.3 to 0.28.4  ([#1390](https://github.com/bitnami-labs/sealed-secrets/pull/1390))\n- Bump k8s.io/client-go from 0.28.3 to 0.28.4  ([#1389](https://github.com/bitnami-labs/sealed-secrets/pull/1389))\n- Bump k8s.io/client-go from 0.28.3 to 0.28.4  ([#1389](https://github.com/bitnami-labs/sealed-secrets/pull/1389))\n\n## v0.24.4\n\n### Changelog\n\n- kubeseal: write help message to stdout ([#1377](https://github.com/bitnami-labs/sealed-secrets/pull/1377))\n- fix: Set up LastTransitionTime in case that it is empty ([#1370](https://github.com/bitnami-labs/sealed-secrets/pull/1370))\n- Bump github.com/onsi/gomega from 1.29.0 to 1.30.0 ([#1376](https://github.com/bitnami-labs/sealed-secrets/pull/1376))\n- Bump golang.org/x/crypto from 0.14.0 to 0.15.0 ([#1375](https://github.com/bitnami-labs/sealed-secrets/pull/1375))\n- Bump github.com/onsi/ginkgo/v2 from 2.13.0 to 2.13.1 ([#1374](https://github.com/bitnami-labs/sealed-secrets/pull/1374))\n- Bump k8s.io/klog/v2 from 2.100.1 to 2.110.1 ([#1367](https://github.com/bitnami-labs/sealed-secrets/pull/1367))\n\n## v0.24.3\n\n### Changelog\n\n- fix a bug that kept a sealed secret's generation and observedgeneration out of sync ([#1360](https://github.com/bitnami-labs/sealed-secrets/pull/1360))\n- fix: add pdb ([#1340](https://github.com/bitnami-labs/sealed-secrets/pull/1340))\n- Bump k8s.io/code-generator from 0.28.2 to 0.28.3 ([#1358](https://github.com/bitnami-labs/sealed-secrets/pull/1340))\n- Bump github.com/onsi/gomega from 1.28.1 to 1.29.0 ([#1357](https://github.com/bitnami-labs/sealed-secrets/pull/1357))\n- Bump github.com/mattn/go-isatty from 0.0.19 to 0.0.20 ([#1353](https://github.com/bitnami-labs/sealed-secrets/pull/1353))\n- Bump github.com/onsi/gomega from 1.28.0 to 1.28.1 ([#1351](https://github.com/bitnami-labs/sealed-secrets/pull/1351))\n- Bump k8s.io/client-go from 0.28.2 to 0.28.3 ([#1350](https://github.com/bitnami-labs/sealed-secrets/pull/1350))\n- Bump k8s.io/api from 0.28.2 to 0.28.3 ([#1349](https://github.com/bitnami-labs/sealed-secrets/pull/1349))\n- Bump github.com/google/go-cmp from 0.5.9 to 0.6.0 ([#1348](https://github.com/bitnami-labs/sealed-secrets/pull/1348))\n\n## v0.24.2\n\n### Changelog\n\n- Fix issue where sealed secrets status is not updated if sealed secret…  ([#1295](https://github.com/bitnami-labs/sealed-secrets/pull/1295))\n- Bump golang.org/x/crypto from 0.13.0 to 0.14.0([#1341](https://github.com/bitnami-labs/sealed-secrets/pull/1341))\n- Bump github.com/onsi/ginkgo/v2 from 2.12.1 to 2.13.0 ([#1342](https://github.com/bitnami-labs/sealed-secrets/pull/1342))\n- Bump golang.org/x/net from 0.14.0 to 0.17.0 ([#1344](https://github.com/bitnami-labs/sealed-secrets/pull/1344))\n\n## v0.24.1\n\n### Changelog\n\n- fix: remove trailing dashes for multidoc yaml ([#1335](https://github.com/bitnami-labs/sealed-secrets/pull/1335))\n\n## v0.24.0\n\n### Changelog\n\n- feat: multidoc support for yaml and json ([#1304](https://github.com/bitnami-labs/sealed-secrets/pull/1304))\n- Delete repeating warning message ([#1303](https://github.com/bitnami-labs/sealed-secrets/pull/1303))\n- Add dashboard configmap annotations ([#1302](https://github.com/bitnami-labs/sealed-secrets/pull/1302))\n- Update the golang version to the latest available one ([#1318](https://github.com/bitnami-labs/sealed-secrets/pull/1318))\n- Update Linux installation process on README to have a way to dynamically get kubeseal version number ([#1294](https://github.com/bitnami-labs/sealed-secrets/pull/1294))\n- Bump golang.org/x/crypto from 0.12.0 to 0.13.0 ([#1319](https://github.com/bitnami-labs/sealed-secrets/pull/1319))\n- Bump github.com/onsi/ginkgo/v2 from 2.11.0 to 2.12.0 ([#1310](https://github.com/bitnami-labs/sealed-secrets/pull/1310))\n- Bump k8s.io/client-go from 0.28.0 to 0.28.1 ([#1308](https://github.com/bitnami-labs/sealed-secrets/pull/1308))\n- Bump k8s.io/code-generator from 0.28.0 to 0.28.1 ([#1307](https://github.com/bitnami-labs/sealed-secrets/pull/1307))\n- Bump k8s.io/code-generator from 0.27.4 to 0.28.0 ([#1300](https://github.com/bitnami-labs/sealed-secrets/pull/1300))\n- Bump k8s.io/client-go from 0.27.4 to 0.28.0 ([#1297](https://github.com/bitnami-labs/sealed-secrets/pull/1297))\n\n## v0.23.1\n\n### Changelog\n\n- securityContext adjusted ([#1261](https://github.com/bitnami-labs/sealed-secrets/pull/1261))\n- allow changing the default revisionHistoryLimit ([#1286](https://github.com/bitnami-labs/sealed-secrets/pull/1286))\n- Bump k8s.io/client-go from 0.27.3 to 0.27.4 ([#1277](https://github.com/bitnami-labs/sealed-secrets/pull/1277))\n- Bump k8s.io/code-generator from 0.27.3 to 0.27.4 ([#1278](https://github.com/bitnami-labs/sealed-secrets/pull/1278))\n- Bump github.com/onsi/gomega from 1.27.8 to 1.27.10 ([#1279](https://github.com/bitnami-labs/sealed-secrets/pull/1279))\n- Bump k8s.io/api from 0.27.3 to 0.27.4 ([#1281](https://github.com/bitnami-labs/sealed-secrets/pull/1281))\n- Bump golang.org/x/crypto from 0.11.0 to 0.12.0 ([#1287](https://github.com/bitnami-labs/sealed-secrets/pull/1287)\n\n## v0.23.0\n\n### Changelog\n\n- Add option for custom annotations and labels on sealing keypairs ([#1250](https://github.com/bitnami-labs/sealed-secrets/pull/1250))\n- Add option to patch secrets instead of clobbering them ([#1259](https://github.com/bitnami-labs/sealed-secrets/pull/1259))\n- Improve CLI UX error message while service is not found ([#1256](https://github.com/bitnami-labs/sealed-secrets/pull/1256))\n- Add namespaced roles support to Helm chart ([#1240](https://github.com/bitnami-labs/sealed-secrets/pull/1240))\n- add --log-info-stdout to chart ([#1238](https://github.com/bitnami-labs/sealed-secrets/pull/1238))\n- Fix networkpolicy port + add egress ([#1243](https://github.com/bitnami-labs/sealed-secrets/pull/1243))\n- Create index for Sealed Secrets public documentation ([#1264](https://github.com/bitnami-labs/sealed-secrets/pull/1264))\n- Getting started page ([#1253](https://github.com/bitnami-labs/sealed-secrets/pull/1253))\n- Create a FAQ document for Sealed Secrets public documentation ([#1269](https://github.com/bitnami-labs/sealed-secrets/pull/1269))\n- Create a cryptography document for Sealed Secrets public documentation ([#1267](https://github.com/bitnami-labs/sealed-secrets/pull/1267))\n- Validate existing Sealed Secrets document ([#1266](https://github.com/bitnami-labs/sealed-secrets/pull/1266))\n- added support policy to readme ([#1265](https://github.com/bitnami-labs/sealed-secrets/pull/1265))\n- Add missing document seperator ([#1260](https://github.com/bitnami-labs/sealed-secrets/pull/1260))\n- Enable full linter support for golangci-lint ([#1262](https://github.com/bitnami-labs/sealed-secrets/pull/1262))\n- Update minikube K8S versions ([#1251](https://github.com/bitnami-labs/sealed-secrets/pull/1251))\n- Bump github.com/onsi/ginkgo/v2 from 2.10.0 to 2.11.0 ([#1254](https://github.com/bitnami-labs/sealed-secrets/pull/1254))\n- Bump k8s.io/code-generator from 0.27.2 to 0.27.3 ([#1255](https://github.com/bitnami-labs/sealed-secrets/pull/1255))\n- Bump golang.org/x/crypto from 0.10.0 to 0.11.0 ([#1268](https://github.com/bitnami-labs/sealed-secrets/pull/1268))\n- Bump github.com/prometheus/client_golang from 1.15.1 to 1.16.0 ([#1247](https://github.com/bitnami-labs/sealed-secrets/pull/1247))\n- Bump golang.org/x/crypto from 0.9.0 to 0.10.0 ([#1248](https://github.com/bitnami-labs/sealed-secrets/pull/1248))\n- Bump k8s.io/client-go from 0.27.2 to 0.27.3 ([#1244](https://github.com/bitnami-labs/sealed-secrets/pull/1244))\n\n## v0.22.0\n\n### Changelog\n\n- Feature allow to skip set owner references ([#1200](https://github.com/bitnami-labs/sealed-secrets/pull/1200))\n- Add additionalPrinterColumns for status and age ([#1217](https://github.com/bitnami-labs/sealed-secrets/pull/1217))\n- Add replicas default value to the deployment manifest ([#1219](https://github.com/bitnami-labs/sealed-secrets/pull/1219))\n- Create SECURITY.md ([#1226](https://github.com/bitnami-labs/sealed-secrets/pull/1226))\n- Fix doc generated code directory ([#1227](https://github.com/bitnami-labs/sealed-secrets/pull/1227))\n- Update generated code ([#1228](https://github.com/bitnami-labs/sealed-secrets/pull/1228))\n- Update maintainers list ([#1237](https://github.com/bitnami-labs/sealed-secrets/pull/1237))\n- Bump github.com/onsi/ginkgo/v2 from 2.9.4 to 2.9.5 ([#1215](https://github.com/bitnami-labs/sealed-secrets/pull/1215))\n- Bump golang.org/x/crypto from 0.8.0 to 0.9.0 ([#1216](https://github.com/bitnami-labs/sealed-secrets/pull/1216))\n- Bump k8s.io/apimachinery from 0.27.1 to 0.27.2 ([#1221](https://github.com/bitnami-labs/sealed-secrets/pull/1221))\n- Bump k8s.io/client-go from 0.27.1 to 0.27.2 ([#1222](https://github.com/bitnami-labs/sealed-secrets/pull/1222))\n- Bump github.com/mattn/go-isatty from 0.0.18 to 0.0.19 ([#1223](https://github.com/bitnami-labs/sealed-secrets/pull/1223))\n- Bump k8s.io/code-generator from 0.27.1 to 0.27.2 ([#1225](https://github.com/bitnami-labs/sealed-secrets/pull/1225))\n- Bump github.com/onsi/gomega from 1.27.6 to 1.27.7 ([#1229](https://github.com/bitnami-labs/sealed-secrets/pull/1229))\n- Bump github.com/onsi/ginkgo/v2 from 2.9.5 to 2.9.7 ([#1231](https://github.com/bitnami-labs/sealed-secrets/pull/1231))\n- Bump github.com/onsi/gomega from 1.27.7 to 1.27.8 ([#1234](https://github.com/bitnami-labs/sealed-secrets/pull/1234))\n- Bump github.com/onsi/ginkgo/v2 from 2.9.7 to 2.10.0 ([#1235](https://github.com/bitnami-labs/sealed-secrets/pull/1235))\n\n## v0.21.0\n\n### Changelog\n\n- Enable logging info to stdout([#1195](https://github.com/bitnami-labs/sealed-secrets/pull/1195))\n- Bump github.com/prometheus/client_golang from 1.15.0 to 1.15.1 ([#1204](https://github.com/bitnami-labs/sealed-secrets/pull/1204))\n- Bump github.com/onsi/ginkgo/v2 from 2.9.2 to 2.9.4 ([#1203](https://github.com/bitnami-labs/sealed-secrets/pull/1203))\n- Bump k8s.io/klog/v2 from 2.90.1 to 2.100.1 ([#1201](https://github.com/bitnami-labs/sealed-secrets/pull/1201))\n- Bump k8s.io/code-generator from 0.26.3 to 0.27.1 ([#1188](https://github.com/bitnami-labs/sealed-secrets/pull/1188)) \n- Bump k8s.io/client-go from 0.26.3 to 0.27.1 ([#1187](https://github.com/bitnami-labs/sealed-secrets/pull/1187)) \n- Bump github.com/prometheus/client_golang from 1.14.0 to 1.15.0 ([#1189](https://github.com/bitnami-labs/sealed-secrets/pull/1189)) \n\n## v0.20.5\n\n### Changelog\n\n- Generate embedded ObjectMeta in CRD ([#1177](https://github.com/bitnami-labs/sealed-secrets/pull/1177))\n- Sign images using Cosign v2 ([#1176](https://github.com/bitnami-labs/sealed-secrets/pull/1176))\n- ReProcess only on spec changes ([#1174](https://github.com/bitnami-labs/sealed-secrets/pull/1174))\n- Upgrade sealed secrets to Go 1.20 ([#1173](https://github.com/bitnami-labs/sealed-secrets/pull/1173))\n- Fix cosign command for goreleaser ([#1180](https://github.com/bitnami-labs/sealed-secrets/pull/1180))\n- Fix kubeseal image sign for cosign v2 ([#1182](https://github.com/bitnami-labs/sealed-secrets/pull/1182))\n- Remove automountServiceAccountToken parameter ([#1162](https://github.com/bitnami-labs/sealed-secrets/pull/1162))\n- Verify chart with secret recreation disabled ([#1163](https://github.com/bitnami-labs/sealed-secrets/pull/1163))\n- Bump golang.org/x/crypto from 0.7.0 to 0.8.0 ([#1175](https://github.com/bitnami-labs/sealed-secrets/pull/1175))\n- Bump github.com/onsi/gomega from 1.27.5 to 1.27.6 ([#1169](https://github.com/bitnami-labs/sealed-secrets/pull/1169))\n- Bump github.com/onsi/gomega from 1.27.4 to 1.27.5 ([#1168](https://github.com/bitnami-labs/sealed-secrets/pull/1168))\n- Bump github.com/mattn/go-isatty from 0.0.17 to 0.0.18 ([#1167](https://github.com/bitnami-labs/sealed-secrets/pull/1167))\n- Bump github.com/onsi/ginkgo/v2 from 2.9.1 to 2.9.2 ([#1166](https://github.com/bitnami-labs/sealed-secrets/pull/1166))\n- Bump k8s.io/apimachinery from 0.26.2 to 0.26.3 ([#1160](https://github.com/bitnami-labs/sealed-secrets/pull/1160))\n- Bump k8s.io/code-generator from 0.26.2 to 0.26.3 ([#1159](https://github.com/bitnami-labs/sealed-secrets/pull/1159))\n- Bump k8s.io/api from 0.26.2 to 0.26.3 ([#1158](https://github.com/bitnami-labs/sealed-secrets/pull/1158))\n- Bump k8s.io/client-go from 0.26.2 to 0.26.3 ([#1157](https://github.com/bitnami-labs/sealed-secrets/pull/1157))\n- Update VIB release tag format ([#1165](https://github.com/bitnami-labs/sealed-secrets/pull/1165))\n- Update VIB action ([#1164](https://github.com/bitnami-labs/sealed-secrets/pull/1164))\n- Include dockerhub pull statistics in the project README ([#1172](https://github.com/bitnami-labs/sealed-secrets/pull/1172))\n\n## v0.20.4\n\nIncomplete release\n\n## v0.20.3\n\nIncomplete release\n\n## v0.20.2\n\n### Changelog\n\n- Fix panic when skip recreate is enabled ([#1152](https://github.com/bitnami-labs/sealed-secrets/pull/1152))\n\n## v0.20.1\n\n### Changelog\n\n- Parametrize cluster role name ([#1141](https://github.com/bitnami-labs/sealed-secrets/pull/1141))\n- Allow automountServiceAccountToken to be set to false ([#1128](https://github.com/bitnami-labs/sealed-secrets/pull/1128))\n- Allow to disable secret auto-recreation ([#1118](https://github.com/bitnami-labs/sealed-secrets/pull/1118))\n- Bump github.com/onsi/gomega from 1.27.2 to 1.27.4 ([#1143](https://github.com/bitnami-labs/sealed-secrets/pull/1143))\n- Bump k8s.io/client-go from 0.26.1 to 0.26.2 ([#1136](https://github.com/bitnami-labs/sealed-secrets/pull/1136))\n- Bump k8s.io/code-generator from 0.26.1 to 0.26.2 ([#1137](https://github.com/bitnami-labs/sealed-secrets/pull/1137))\n- Bump k8s.io/api from 0.26.1 to 0.26.2 ([#1135](https://github.com/bitnami-labs/sealed-secrets/pull/1135))\n- Bump github.com/onsi/gomega from 1.27.1 to 1.27.2 ([#1134](https://github.com/bitnami-labs/sealed-secrets/pull/1134))\n- Bump k8s.io/apimachinery from 0.26.1 to 0.26.2 ([#1133](https://github.com/bitnami-labs/sealed-secrets/pull/1133))\n- Bump k8s.io/klog/v2 from 2.90.0 to 2.90.1 ([#1132](https://github.com/bitnami-labs/sealed-secrets/pull/1132))\n- Bump github.com/onsi/ginkgo/v2 from 2.8.3 to 2.9.0 ([#1131](https://github.com/bitnami-labs/sealed-secrets/pull/1131))\n- Bump golang.org/x/crypto from 0.6.0 to 0.7.0 ([#1130](https://github.com/bitnami-labs/sealed-secrets/pull/1130))\n- Ensure vib runs only when PR is approved ([#1121](https://github.com/bitnami-labs/sealed-secrets/pull/1121))\n- Run VIB Helm chart validations on push to main ([#1140](https://github.com/bitnami-labs/sealed-secrets/pull/1140))\n- Update parameters table ([#1139](https://github.com/bitnami-labs/sealed-secrets/pull/1139))\n- Update docs ([#1127](https://github.com/bitnami-labs/sealed-secrets/pull/1127))\n\n## v0.20.0\n\nIncomplete release\n\n## v0.19.5\n\n### Changelog\n\n- Automated controller test on Openshift platforms (using ([VMware Image Builder](https://tanzu.vmware.com/image-builder)) ([#1107](https://github.com/bitnami-labs/sealed-secrets/pull/1107)).\n- We now generate a Carvel package distribution of the controller ([#1104](https://github.com/bitnami-labs/sealed-secrets/pull/1104)).\n- Bump golang.org/x/crypto from 0.5.0 to 0.6.0 ([#1108](https://github.com/bitnami-labs/sealed-secrets/pull/1108)).\n- Bump github.com/onsi/gomega from 1.25.0 to 1.26.0 ([#1103](https://github.com/bitnami-labs/sealed-secrets/pull/1103)).\n- Bump k8s.io/code-generator from 0.26.0 to 0.26.1 ([#1102](https://github.com/bitnami-labs/sealed-secrets/pull/1102)).\n- Bump github.com/onsi/ginkgo/v2 from 2.7.0 to 2.8.0 ([#1101](https://github.com/bitnami-labs/sealed-secrets/pull/1101)).\n- Bump k8s.io/api from 0.26.0 to 0.26.1 ([#1097](https://github.com/bitnami-labs/sealed-secrets/pull/1097)).\n- Bump k8s.io/client-go from 0.26.0 to 0.26.1  ([#1096](https://github.com/bitnami-labs/sealed-secrets/pull/1096)).\n- Bump k8s.io/klog/v2 from 2.80.1 to 2.90.0 ([#1094](https://github.com/bitnami-labs/sealed-secrets/pull/1094)).\n- Bump k8s.io/apimachinery from 0.26.0 to 0.26.1 ([#1093](https://github.com/bitnami-labs/sealed-secrets/pull/1093)).\n\n## v0.19.4\n\n### Changelog\n\n- Bump github.com/onsi/ginkgo/v2 from 2.6.1 to 2.7.0 ([#1086](https://github.com/bitnami-labs/sealed-secrets/pull/1086)).\n- Bump golang.org/x/crypto from 0.4.0 to 0.5.0 ([#1085](https://github.com/bitnami-labs/sealed-secrets/pull/1085)).\n- Bump github.com/mattn/go-isatty from 0.0.16 to 0.0.17 ([#1083](https://github.com/bitnami-labs/sealed-secrets/pull/1083)).\n- Bump github.com/onsi/gomega from 1.24.1 to 1.24.2 ([#1079](https://github.com/bitnami-labs/sealed-secrets/pull/1079)).\n- Bump k8s.io/code-generator from 0.25.4 to 0.26.0 ([#1078](https://github.com/bitnami-labs/sealed-secrets/pull/1078)).\n- Bump github.com/onsi/ginkgo/v2 from 2.6.0 to 2.6.1 ([#1077](https://github.com/bitnami-labs/sealed-secrets/pull/1077)).\n\n## v0.19.3\n\n### Changelog\n\n- Update to Go 1.19.4 ([#1073](https://github.com/bitnami-labs/sealed-secrets/pull/1073)).\n- Bump k8s.io/client-go from 0.25.4 to 0.26.0 ([#1071](https://github.com/bitnami-labs/sealed-secrets/pull/1071)).\n- Bump golang.org/x/crypto from 0.3.0 to 0.4.0 ([#1072](https://github.com/bitnami-labs/sealed-secrets/pull/1072)).\n- Bump github.com/onsi/ginkgo/v2 from 2.5.1 to 2.6.0 ([#1069](https://github.com/bitnami-labs/sealed-secrets/pull/1069)).\n- Bump k8s.io/api from 0.25.4 to 0.26.0 ([#1068](https://github.com/bitnami-labs/sealed-secrets/pull/1068)).\n- Bump golang.org/x/crypto from 0.2.0 to 0.3.0 ([#1063](https://github.com/bitnami-labs/sealed-secrets/pull/1063)).\n- Bump k8s.io/client-go from 0.25.3 to 0.25.4 ([#1062](https://github.com/bitnami-labs/sealed-secrets/pull/1062)).\n- Bump github.com/onsi/ginkgo/v2 from 2.5.0 to 2.5.1 ([#1061](https://github.com/bitnami-labs/sealed-secrets/pull/1061)).\n\n## v0.19.2\n\n### Changelog\n\n- Distinguish std & k8s errors ([#1046](https://github.com/bitnami-labs/sealed-secrets/pull/1046)).\n- Fix empty Group Version Kind ([#1044](https://github.com/bitnami-labs/sealed-secrets/pull/1044)).\n- Regenerate code - detected some dummy changes ([#1033](https://github.com/bitnami-labs/sealed-secrets/pull/1033)).\n- Decouple the kubeseal CLI from the kubeseal library ([#1030](https://github.com/bitnami-labs/sealed-secrets/pull/1030)).\n- Remove namespaceFn ([#1029](https://github.com/bitnami-labs/sealed-secrets/pull/1029)).\n\n## v0.19.1\n\n### Changelog\n\n- Fix release dockerhub container image name([#1014](https://github.com/bitnami-labs/sealed-secrets/pull/1014)).\n\n## v0.19.0\n\n### Changelog\n\n- FEATURE: Support to recreate a deleted secret generated by the controller([#963](https://github.com/bitnami-labs/sealed-secrets/pull/963)).\n- Update `golang.org/x/text` fixing CVE-2022-32149 ([#1008](https://github.com/bitnami-labs/sealed-secrets/pull/1008)).\n- Expired certificate error now prints expiration date in kubeseal([#986](https://github.com/bitnami-labs/sealed-secrets/pull/986)).\n\n## v0.18.5\n\n### Changelog\n\n- Fix `controller.yaml` having no image reference ([#977](https://github.com/bitnami-labs/sealed-secrets/pull/977))\n\n## v0.18.4\n\n### Changelog\n\n- Upgrade Go version, dependencies and fix CVE-2022-27664 ([#960](https://github.com/bitnami-labs/sealed-secrets/pull/960))\n- Move `kubeseal` to its own package ([#939](https://github.com/bitnami-labs/sealed-secrets/pull/939))\n- Several refactors to the `controller` ([#940](https://github.com/bitnami-labs/sealed-secrets/pull/940) & [#947](https://github.com/bitnami-labs/sealed-secrets/pull/947))\n- Generate a proper schema for the CRD ([#941](https://github.com/bitnami-labs/sealed-secrets/pull/941), [#957](https://github.com/bitnami-labs/sealed-secrets/pull/957), [#964](https://github.com/bitnami-labs/sealed-secrets/pull/964), [#966](https://github.com/bitnami-labs/sealed-secrets/pull/966) & [#970](https://github.com/bitnami-labs/sealed-secrets/pull/970))\n- Publish `kubeseal` in a container image ([#921](https://github.com/bitnami-labs/sealed-secrets/pull/921))\n\n## v0.18.3\n\nIncomplete release\n\n## v0.18.2\n\n### Changelog\n\n- Replace ioutil with io or os ([#895](https://github.com/bitnami-labs/sealed-secrets/pull/895))\n- Remove CLI global variables and refactor flag handling ([#901](https://github.com/bitnami-labs/sealed-secrets/pull/901) & [#920](https://github.com/bitnami-labs/sealed-secrets/pull/920))\n- Upgrade Go version, dependencies and tooling ([#904](https://github.com/bitnami-labs/sealed-secrets/pull/904) & [#905](https://github.com/bitnami-labs/sealed-secrets/pull/905))\n\n## v0.18.1\n\n### Changelog\n\n- Add flags to set the rate limit for the verify endpoint ([#873](https://github.com/bitnami-labs/sealed-secrets/pull/873))\n\n## v0.18.0\n\n### Changelog\n\n- Add capability to watch multiple namespaces ([#572](https://github.com/bitnami-labs/sealed-secrets/pull/572))\n- Bump `gopkg.in/yaml.v3` to avoid CVE-2022-28948 ([#852](https://github.com/bitnami-labs/sealed-secrets/pull/852))\n- Bump `prometheus/client_golang` and `crypto` dependencies to avoid CVE-2022-21698 and CVE-2022-27191 ([#831](https://github.com/bitnami-labs/sealed-secrets/pull/831))\n- Sign container images with cosign ([#810](https://github.com/bitnami-labs/sealed-secrets/pull/810) and [#851](https://github.com/bitnami-labs/sealed-secrets/pull/851))\n\n## v0.17.5\n\n### Changelog\n\n- Switch to dockerhub([#823](https://github.com/bitnami-labs/sealed-secrets/pull/823))\n- Sign the release using cosign ([#814](https://github.com/bitnami-labs/sealed-secrets/pull/814))\n\n## v0.17.4\n\n### Changelog\n\n- Fix linter errors running golangci-lint ([#751](https://github.com/bitnami-labs/sealed-secrets/pull/751))([#771](https://github.com/bitnami-labs/sealed-secrets/pull/771))\n- Added kubeseal support for darwin/arm64 ([#752](https://github.com/bitnami-labs/sealed-secrets/pull/752))\n- Bump prometheus/client_golang dependency to avoid CVE-2022-21698 ([#783](https://github.com/bitnami-labs/sealed-secrets/pull/783))\n\n## v0.17.3\n\n### Changelog\n\n- Unseal templates even when encryptedData is empty ([#653](https://github.com/bitnami-labs/sealed-secrets/pull/653))\n- Add new RBAC rules to make Sealed Secret compatible with K8s environments with RBAC enabled ([#715](https://github.com/bitnami-labs/sealed-secrets/pull/715))\n- Allow re-encrypt/validate functionalities to work with named ports defined in the Sealed Secret service ([#726](https://github.com/bitnami-labs/sealed-secrets/pull/726))\n- Fix verbose logging ([#727](https://github.com/bitnami-labs/sealed-secrets/pull/727))\n\n## v0.17.2\n\n### Changelog\n\n- Fix issue fetching the certificate when the Sealed Secrets service has a named port ([#648](https://github.com/bitnami-labs/sealed-secrets/pull/648))\n- Drop support for Go < 1.16 and bump client-go version ([#705](https://github.com/bitnami-labs/sealed-secrets/pull/705))\n\n## v0.17.1\n\n### Changelog\n\n- Binaries to emit the proper version ([#683](https://github.com/bitnami-labs/sealed-secrets/pull/683))\n- Re-enable publishing K8s manifests in GH releases ([#678](https://github.com/bitnami-labs/sealed-secrets/issues/678))\n\n## v0.17.0\n\n### Announcements\n\nThis release finally turns on the `update-status` feature flag that was introduced back in v0.12.0. The feature is considered stable (if it doesn't work for you, you can deactivate it by setting `SEALED_SECRETS_UPDATE_STATUS=0` in the controller manifest).\n\n### Changelog\n\n- Update rbac api version to `rbac.authorization.k8s.io/v1` ([#602](https://github.com/bitnami-labs/sealed-secrets/issues/602))\n- Enable `--update-status` by default ([#583](https://github.com/bitnami-labs/sealed-secrets/pull/583))\n\n## v0.16.0\n\n### Changelog\n\n- Add ability to template arbitrary data keys within resulting secrets ([#445](https://github.com/bitnami-labs/sealed-secrets/issues/445))\n- Fix status CRD in controller.yaml (backport from helm chart) ([#567](https://github.com/bitnami-labs/sealed-secrets/issues/567))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/26?closed=1\n\n## v0.15.0\n\nThis release contains a couple of fixes in the controller and manifests.\n\nNotable mention: You can give the `--update-status` (also available as env var `SEALED_SECRETS_UPDATE_STATUS=1`) feature flag another try. We'll turn it on by default in ~~the next release~~ v0.17.0.\n\n### Changelog\n\n- Remove '{}' in CRD schema properties so that ArgoCD doesn't get confused ([#529](https://github.com/bitnami-labs/sealed-secrets/issues/529))\n- Fix bug in status updates ([#223](https://github.com/bitnami-labs/sealed-secrets/issues/223))\n- Add label-selector to filter Sealed Secrets ([#521](https://github.com/bitnami-labs/sealed-secrets/issues/521))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/28?closed=1\n\n## v0.14.1\n\n### Changelog\n\n- Fixed `condition_info` prometheus metric disappearance ([#504](https://github.com/bitnami-labs/sealed-secrets/issues/504))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/27?closed=1\n\n## v0.14.0\n\n### Changelog\n\n- Updated CustomResourceDefinition to apiextensions.k8s.io/v1 ([#490](https://github.com/bitnami-labs/sealed-secrets/issues/490))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/19?closed=1\n\n## v0.13.1\n\n### Changelog\n\n- Make it easier to upgrade from ancient (pre v0.9.0) controllers ([#466](https://github.com/bitnami-labs/sealed-secrets/issues/466))\n- Prometheus: add namespace to unseal error metric ([#463](https://github.com/bitnami-labs/sealed-secrets/issues/463))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/17?closed=1\n\n## v0.12.6\n\n# Announcements\n\nThis release contains a fix for [CVE-2020-14040](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-14040), which could have opened the possibility for an attacker to cause a DoS on the sealed-secret controller (provided the attacker can cause the controller to process a malicious sealed secret resource).\n\n### Changelog\n\n- Fix CVE-2020-14040 ([#456](https://github.com/bitnami-labs/sealed-secrets/issues/456))\n- Don't require a namespace when using --raw and cluster-wide scope ([#451](https://github.com/bitnami-labs/sealed-secrets/issues/451))\n- Unregister Prometheus Gauges associated to removed SealedSecrets conditions ([#422](https://github.com/bitnami-labs/sealed-secrets/issues/422))\n- Add -f and -w flags as an alternative to stdin/out ([#439](https://github.com/bitnami-labs/sealed-secrets/issues/439))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/24?closed=1\n\n## v0.12.5\n\n### Changelog\n\n- Add `condition_info` metric to expose SealedSecrets status ([#421](https://github.com/bitnami-labs/sealed-secrets/issues/421))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/23?closed=1\n\n## v0.12.4\n\n### Announcements\n\nThe binaries in this release have been rebuilt with the Go 1.14.3 toolchain. No other changes in binaries nor k8s manifests.\n\n### Changelog\n\n- Build with latest Go 1.14.x version ([#411](https://github.com/bitnami-labs/sealed-secrets/issues/411))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/22?closed=1\n\n## v0.12.3\n\n### Announcements\n\nThis release contains only a change in the `kubeseal` binary since v0.12.2. No controller nor k8s manifest changes.\n\n### Changelog\n\n- Fix `--merge-into` file permissions on Windows ([#407](https://github.com/bitnami-labs/sealed-secrets/issues/407))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/21?closed=1\n\n## v0.12.2\n\n### Announcements\n\nThis release contains important changes in manifests since v0.12.1.\nIt also contains a minor fix in kubeseal client.\n\nPreviously, users upgrading to v0.12.x from previous versions would experience:\n\n```\nThe Deployment \"sealed-secrets-controller\" is invalid: spec.selector: Invalid value: v1.LabelSelector{MatchLabels:map[string]string{\"app.kubernetes.io/managed-by\":\"jsonnet\", \"app.kubernetes.io/name\":\"kubeseal\", \"app.kubernetes.io/part-of\":\"kubeseal\", \"app.kubernetes.io/version\":\"v0.12.1\", \"name\":\"sealed-secrets-controller\"}, MatchExpressions:[]v1.LabelSelectorRequirement(nil)}: field is immutable\n```\n\nThis was caused by a bug in our official yaml manifests introduced in v0.12.0. Users of the Helm chart were unaffected.\n\nBy reverting this issue we're are going to cause the same bad experience for users who did perform a clean install of v0.12.x.\nHowever, we believe such users are a minority.\n\n### Changelog\n\n- Revert \"Add recommended labels\" ([#404](https://github.com/bitnami-labs/sealed-secrets/issues/404))\n- remove kubeconfig deps from recovery-unseal ([#394](https://github.com/bitnami-labs/sealed-secrets/issues/394))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/19?closed=1\n\n## v0.12.1\n\n### Announcements\n\nThis release contains changes in `kubeseal` and `controller` binaries but no changes in manifests since v0.12.0.\n\nThis release is a fixup release that turns off the status update feature introduced in v0.12.0. Several users have reported\na severe bug (an infinite feedback loop where the controller kept updating SealedSecrets and consuming lots of CPU).\n\nIn order to turn it back on you need to manually pass the `--update-status` flag to the *controller* (or pass the `SEALED_SECRETS_UPDATE_STATUS=1` env var)\n\n### Changelog\n\n- Make it easier to use --raw from stdin ([#386](https://github.com/bitnami-labs/sealed-secrets/issues/386))\n- Deactivate status updates unless a feature flag is explicitly passed ([#388](https://github.com/bitnami-labs/sealed-secrets/issues/388))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/18?closed=1\n\n## v0.12.0\n\n### Announcements\n\nThis release contains changes in `kubeseal` and `controller` binaries as well as a minor change to the k8s manifest (see [#381](https://github.com/bitnami-labs/sealed-secrets/issues/381)); keep that in mind if you don't rely on the official k8s manifests, including the community-maintained Helm chart.\n\n# Status field\n\nNow the Sealed Secrets controller updates the `Status` field of the `SealedSecrets` resources.\nThis makes it easier for automation like ArgoCD to detect whether (and when) the controller has reacted to changes in the SealedSecret resources and produced a Secret. It also shows an error message in case it fails (many users are not familiar with k8s events and they may find it easier to see the error message in the status).\n\n# Prometheus\n\nThe Sealed Secrets controller now exports prometheus metrics. See also [contrib/prometheus-mixin](contrib/prometheus-mixin) and `controller-podmonitor.yaml`.\n\n### Changelog\n\n- Update Status field ([#346](https://github.com/bitnami-labs/sealed-secrets/issues/346))\n- Add prometheus metrics ([#177](https://github.com/bitnami-labs/sealed-secrets/issues/177))\n- Upgrade k8s client-go to v0.16.8 ([#380](https://github.com/bitnami-labs/sealed-secrets/issues/380))\n- kubeseal no longer emits empty `status: {}` field ([#383](https://github.com/bitnami-labs/sealed-secrets/issues/383))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/16?closed=1\n\n## v0.11.0\n\n### Announcements\n\nThis release contains only changes in kubeseal binary (no k8s manifest changes required).\n\n### For those who choose the name and namespace after sealing the secret\n\nCreating secrets with namespace-wide and cluster-wide scopes is now easier as it no longer requires manually adding annotations in the input Secret before passing it to `kubeseal`. This was often the root cause of many support requests. Now all you need to do is to:\n\n```\n$ kubeseal --scope namespace-wide <input-secret.yaml >output-sealed-secret.json\n```\n\n### Changelog\n\n- Honour --scope flag ([#371](https://github.com/bitnami-labs/sealed-secrets/issues/371))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/15?closed=1\n\n## v0.10.0\n\n### Announcements\n\nThis release supports the ARM 32 bit and 64 bit architectures, both on the client and the controller sides.\n\nWe also end the silly streak of patch level releases that actually contained features. We'll try to bump the minor version on every release except true hotfixes.\n\n### Changelog\n\n- Provide multi-arch Container image for Sealed Secrets controller ([#349](https://github.com/bitnami-labs/sealed-secrets/issues/349))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/2?closed=1\n\n## v0.9.8\n\n### Announcements\n\nThis release contains only changes in Linux `kubeseal-arm` and `kubeseal-arm64` binaries. There are no changes in the docker images, nor in the `x86_64` binaries for any of the supported OS.\n\n### Changelog\n\n- Fix bad release of Linux ARM7 and ARM64 binaries ([#362](https://github.com/bitnami-labs/sealed-secrets/issues/362))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/14?closed=1\n\n## v0.9.7\n\n### Announcements\n\nThis release contains  changes in `kubeseal` and `controller` binaries as well as a minor change to the k8s manifest (see [#338](https://github.com/bitnami-labs/sealed-secrets/issues/338)); keep that in mind if you don't rely on the official k8s manifests, including the community-maintained Helm chart.\n\n### Allow overwriting existing secrets\n\nBy default, the sealed-secrets controller doesn't unseal a SealedSecret over an existing Secret resource (i.e. a resource that has not been created by the sealed-secrets controller in the first place).\n\nThis is an important safeguard, not only to catch accidental overwrites due to typos etc, but also as a security measure: the sealed-secrets controller can create/update Secret resources even if the user who has the RBAC rights to create the SealedSecret resource doesn't have the right to create/update a Secret resource. We didn't want the sealed-secret controller to give its users more effective rights than what they would otherwise have without the sealed-secrets controller. A simple way to achieve that was permit only updates (overwrites) to Secret resources that were already owned by the sealed-secrets controller (which also seemed a sensible thing to do since it protects from accidental overwrites).\n\nHowever, this behavior gets in the way when you're just starting to use SealedSecrets and want to migrate your existing Secrets into SealedSecrets.\n\nYou now can just annotate your `Secret`s with `sealedsecrets.bitnami.com/managed: true` thus indicating that they can be safely overwritten by the sealed-secrets controller. This doesn't loosen our security model since you'd have to have RBAC rights to annotate the existing secrets (e.g. with `kubectl annotate`) or you can ask your friendly admins to do it on your behalf.\n\n### Changelog\n\n- Release includes ARMv7 and ARM64 binaries (although no docker images yet) ([#173](https://github.com/bitnami-labs/sealed-secrets/issues/173))\n- Set `fsGroup` to `nobody` in order to support `BoundServiceAccountTokenVolume` ([#338](https://github.com/bitnami-labs/sealed-secrets/issues/338))\n- Add `--force-empty-data` flag to allow (un)sealing an empty secret ([#334](https://github.com/bitnami-labs/sealed-secrets/issues/334))\n- Avoid forcing the default namespace when sealing a cluster-wide secret ([#323](https://github.com/bitnami-labs/sealed-secrets/issues/323))\n- Introduce the `sealedsecrets.bitnami.com/managed: true` annotation which controls overwriting existing secrets ([#331](https://github.com/bitnami-labs/sealed-secrets/issues/331))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/13?closed=1\n\n## v0.9.6\n\n### Announcements\n\nThis release contains only changes in `kubeseal` and `controller` binaries (no k8s manifest changes required).\n\n### Preliminary support for running multiple controllers\n\nIt always been possible in theory to run multiple controller instance in multiple namespaces,\neach with their own sealing encryption keys and thus each able to unseal secrets intended for it.\nHowever, doing so created a lot of noise in the logs, since each controller wouldn't know which\nsecrets are meant to be decryptable, but failed to decrypt, and which it ought to ignore.\n\nSince v0.9.6 you can reduce this noise by setting the `--all-namespaces` flag to false (also via the env var `SEALED_SECRETS_ALL_NAMESPACES=false`).\n\n### Changelog\n\n- Give an option to search only the current namespace ([#316](https://github.com/bitnami-labs/sealed-secrets/issues/316))\n- Support parsing multiple private keys in --recovery-private-key ([#325](https://github.com/bitnami-labs/sealed-secrets/issues/325))\n- Add klog flags so we can troubleshoot k8s client ([#320](https://github.com/bitnami-labs/sealed-secrets/issues/320))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/12?closed=1\n\n## v0.9.5\n\n### Announcements\n\nThis release contains only changes in `kubeseal` binary (no k8s manifest changes required).\n\n### Changelog\n\n- Improve error reporting in case of missing kubeconfig when inferring namespace ([#313](https://github.com/bitnami-labs/sealed-secrets/issues/313))\n- Teach kubeseal to decrypt using backed up secrets ([#312](https://github.com/bitnami-labs/sealed-secrets/issues/312))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/11?closed=1\n\n## v0.9.4\n\n### Announcements\n\nThis release contains only changes in `kubeseal` and `controller` binaries (no k8s manifest changes required).\n\n### Changelog\n\n- Remove tty warning in `--fetch-cert` (regression caused by #303 released in v0.9.3) ([#306](https://github.com/bitnami-labs/sealed-secrets/issues/306))\n- Implement `--recovery-unseal` to help with disaster recovery ([#307](https://github.com/bitnami-labs/sealed-secrets/issues/307))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/10?closed=1\n\n## v0.9.3\n\n### Announcements\n\nThis release contains only changes in `kubeseal` and `controller` binaries (no k8s manifest changes required).\n\n### Changelog\n\n- Implement `--key-cutoff-time` ([#299](https://github.com/bitnami-labs/sealed-secrets/issues/299))\n- Warn if stdin is a terminal ([#303](https://github.com/bitnami-labs/sealed-secrets/issues/303))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/9?closed=1\n\n## v0.9.2\n\n### Announcements\n\nThis release contains only changes in `kubeseal` and `controller` binaries (no k8s manifest changes required).\n\n### Periodic key renewal and offline certificates\n\nA few people have raised concerns of how will automatic key+certificate renewal affect the offline signing workflow.\nFirst, a clarification: nothing changed. You can keep using your old certificates; it's just that if you do, you won't benefit from the additional security given from the periodic key renewal.\n\nIn order to simplify the workflow for those who do want to benefit from the key renewal, but at the same time\ncannot access the target cluster (while not being completely offline), we offer a little feature that will help: `--cert` has learned to accept http(s) URLs. You can point it to a place where you serve up-to-date certificates for your clusters (tip/idea: you can expose the controller's cert.pem files with an Ingress).\n\n### Changelog\n\n- Accept URLs in `--cert` ([#281](https://github.com/bitnami-labs/sealed-secrets/issues/281))\n- Improve logs/events in case of decryption error ([#274](https://github.com/bitnami-labs/sealed-secrets/issues/274))\n- Reduce likelihood of name/namespace mismatch when using `--merge-into` ([#286](https://github.com/bitnami-labs/sealed-secrets/issues/286))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/8?closed=1\n\n## v0.9.1\n\n- Make manifests compatible with k8s 1.16.x ([#269](https://github.com/bitnami-labs/sealed-secrets/issues/269))\n- Fix non-strict scopes with --raw ([#276](https://github.com/bitnami-labs/sealed-secrets/issues/276))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/7?closed=1\n\n## v0.9.0\n\n## Announcement\n\n### Private key renewal\n\nThis release turns on an important security feature: a new private key will be now created every 30 days by default.\nExisting sealed-secrets resources will still be decrypted until the keys are manually phased out.\n\nYou can read more about this feature and the problem of **secret rotation** and how it interacts with Sealed Secrets in this [README section](https://github.com/bitnami-labs/sealed-secrets#secret-rotation) or in the original GH issue #137.\n\nThis feature alone is not technically a breaking change for people who use the offline workflow with `kubeseal --cert`, since old keys are not rotated out automatically. Users would be required to update their offline certs only when they purge old keys manually (we might introduce automatic purging in the future).\n\nThat said, to reap the benefits of key renewal, users of the offline workflow are encouraged to update their offline certificates every time a new key is generated (by default every 30 days).\n\n### Pre-v0.7.0 clients\n\nIf you are using kubeseal clients older than v0.7.0, please upgrade. Since this release the controller\nwill no longer accept the \"v1\" format of the encrypted \"data\" field and instead it will only support the\n\"encryptedData\" field.\n\nIf you have old sealed secret resources lying around, you can easily upgrade them by invoking:\n\n```bash\nkubeseal --re-encrypt <old.yaml >new.yaml\n```\n\n### Update items\n\nSince version v0.7.0 it was possible to update individual items in the `encryptedData` field of the Sealed Secret resource, but you had to manually copy&paste the encrypted items into an existing resource file. The required steps were never spelled out in the documentation and to be fair it always felt quite awkward.\n\nNow `kubectl` has learned how to update an existing secret, whilst preserving the same general operation principles, namely staying out of the business of actually crafting the secret itself (`kubectl create secret ...` and its various flags like `--from-file`, `--from-literal`, etc). Example:\n\n```bash\n$ kubectl create secret generic mysecret --dry-run -o json --from-file=foo=/tmp/foo \\\n  | kubeseal >sealed.json\n$ kubectl create secret generic mysecret --dry-run -o json --from-file=bar=/tmp/bar \\\n  | kubeseal --merge-into sealed.json\n```\n\n### Changelog\n\n- Doc improvements.\n- Rename \"key rotation\" to \"key renewal\" since the terminology was confusing.\n- Key renewal is enabled by default every 30 days ([#236](https://github.com/bitnami-labs/sealed-secrets/issues/236))\n- You can now use env vars such as SEALED_SECRETS_FOO_BAR to customize the controller ([#234](https://github.com/bitnami-labs/sealed-secrets/issues/234))\n- Deactivating by default deprecated \"v1\" encrypted data format (used by pre-v0.7.0 clients) ([#235](https://github.com/bitnami-labs/sealed-secrets/issues/235))\n- Fix RBAC rules for /v1/rotate and /v1/validate fixing #166 for good ([#249](https://github.com/bitnami-labs/sealed-secrets/issues/249))\n- Implement the --merge-into command ([#253](https://github.com/bitnami-labs/sealed-secrets/issues/253))\n- Add the `-o` alias for `--format` ([#261](https://github.com/bitnami-labs/sealed-secrets/issues/261))\n- Add the `--raw` command for only encrypting single items ([#257](https://github.com/bitnami-labs/sealed-secrets/issues/257))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/1?closed=1\n\n## v0.8.3\n\n### Announcements\n\nThis release contains a fix for a possible secret leak that can happen when sealing existing secrets that have been retrieved from a cluster (e.g. with `kubectl get`) where they have been created with `kubectl apply` (as opposed to `kubectl create`).\nThis potential problem has been introduced v0.8.0 when kubeseal learned how to preserve annotations and labels.\n\nPlease check your existing sealed secret sources for any annotation `kubectl.kubernetes.io/last-applied-configuration`, because that annotation would contain your original secrets in clear.\n\nThis release strips this annotation (and a similar annotation created by the `kubecfg` tool)\n\n### Changelog\n\nFixes in this release:\n\n- Round-tripping secrets can leak clear-text in last-applied-configuration ([#227](https://github.com/bitnami-labs/sealed-secrets/issues/227))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/6?closed=1\n\n## v0.8.2\n\nFixes in this release:\n\n- Endless loop in controller on invalid base64 encrypted data bug ([#201](https://github.com/bitnami-labs/sealed-secrets/issues/201))\n- Fix RBAC for /v1/cert.pem public key in isolated namespaces, removes most use cases for offline sealing with `--cert` ([#208](https://github.com/bitnami-labs/sealed-secrets/issues/208),[#166](https://github.com/bitnami-labs/sealed-secrets/issues/166))\n- Accept and seal stringData into secret ([#221](https://github.com/bitnami-labs/sealed-secrets/issues/221))\n- Fix a couple of blockers for enabling (still experimental) key rotation ([#185](https://github.com/bitnami-labs/sealed-secrets/issues/185), [#219](https://github.com/bitnami-labs/sealed-secrets/issues/219), [#218](https://github.com/bitnami-labs/sealed-secrets/issues/218))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/5?closed=1\n\n## v0.8.1\n\nFixes in this release:\n\n- Solve kubectl auth issues with clusters using `client.authentication.k8s.io/v1beta1` config by upgrading to client-go v12.0.0 ([#183](https://github.com/bitnami-labs/sealed-secrets/issues/183))\n- Fix controller crash when writing logs due to read-only root FS ([#200](https://github.com/bitnami-labs/sealed-secrets/issues/200))\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/4?closed=1\n\n## v0.8.0\n\nThe main improvements in this release are:\n\n- support for annotations and labels ([#92](https://github.com/bitnami-labs/sealed-secrets/issues/92))\n- support for secrets rotation opt-in ([#137](https://github.com/bitnami-labs/sealed-secrets/issues/137))\n- fix bug with OwnerReferences handling ([#127](https://github.com/bitnami-labs/sealed-secrets/issues/127))\n- EKS support; client-go version bump to release-7.0 ([#110](https://github.com/bitnami-labs/sealed-secrets/issues/110))\n- Instructions to run on GKE when user is not cluster-admin ([#111](https://github.com/bitnami-labs/sealed-secrets/issues/111))\n- Windows binary of kubeseal ([#85](https://github.com/bitnami-labs/sealed-secrets/issues/85))\n- Internal codebase modernization (e.g. switch to Go modules)\n\nThe full Changelog is maintained in https://github.com/bitnami-labs/sealed-secrets/milestone/3?closed=1\n\nMany thanks for all the folks who contributed to this release!\n\n## v0.7.0\n\nBig change for this release is the switch to **per-key encrypted values**.\n\n- (\"Keys\" as in \"object key/value\", not as in \"encryption key\".  English is hard.)*\n- Previously we generated a single big encrypted blob for each Secret, now we encrypt each value in the Secret separately, with the keys in plain text. This allows:\n  - Existing keys can now be renamed and deleted without re-encrypting the value(s).\n  - New keys/values can be added to the SealedSecret without re-encrypting (or even having access to!) the existing values.\n  - Note that (as before) the encrypted values are still tied to the namespace/name of the enclosing Secret/SealedSecret, so can't be moved to another Secret.\n   (The [cluster-wide annotation](https://github.com/bitnami-labs/sealed-secrets/blob/bda0af6a6a8abebc9ff359dd2e5e22d54cb40798/pkg/apis/sealed-secrets/v1alpha1/types.go#L16)  _does_ allow this, with the corresponding caveats, as before)\n- The `kubeseal` tool does not yet have an option to output _just_ a single value, but you can safely mix+match the individual values from `kubeseal` output with an existing SealedSecret.  Improving `kubeseal` support for this feature is still an open action item.\n- Existing/older \"all-in-one\" SealedSecrets are declared deprecated, but will continue to be supported by the controller for the foreseeable future.  New invocations of the `kubeseal` tool now produce per-key encrypted output - if you need to produce the older format, just use an older `kubeseal`.  Please raise a github issue if you have a use-case that requires supporting \"all-in-one\" SealedSecrets going forward.\n- Note the CRD schema used for server-side validation in k8s >=1.9 has been temporarily removed, because it was unable to support the new per-key structure correctly (see [kubernetes/kubernetes#59485](https://github.com/kubernetes/kubernetes/issues/59485)).\n- Huge thanks to @sullerandras for the code and his persistence in getting this merged!\n\n## v0.6.0\n\n- Support \"cluster wide\" secrets, that are not restricted to the original namespace\n  - Set `sealedsecrets.bitnami.com/cluster-wide: \"true\"` annotation\n  - Warning: cluster-wide SealedSecrets can be decrypted by anyone who can create a SealedSecret in your cluster\n- Move to client-go v5.0\n- Move to bitnami-labs github org\n- Fix bug in schema validation for k8s 1.9\n\n## v0.5.1\n\n**Note:** this version moves TPR/CRD definition into a separate file.  To install, you need `controller.yaml` *and* either `sealedsecret-tpr.yaml` or `sealedsecret-crd.yaml`\n\n- Add CRD definition and TPR->CRD migration documentation\n- Add `kubeseal --fetch-cert` to dump server cert to stdout, for later offline use with `kubeseal --cert`\n- Better sanitization of input object to `kubeseal`\n\n(v0.5.1 fixes a travis/github release issue with v0.5.0)\n\n## v0.5.0\n\n## v0.4.0\n\n- controller: deployment security hardening: non-root uid and read-only rootfs\n- `kubeseal`: Include oidc and gcp auth provider plugins\n- `kubeseal`: Add support for YAML output\n\n## v0.3.1\n\n- Add `controller-norbac.yaml` to the release build. This is `controller.yaml` without RBAC rules and related service account - for environments where RBAC is not yet supported, [like Azure](https://github.com/Azure/acs-engine/issues/680).\n- Fix missing controller RBAC ClusterRoleBinding in v0.3.0\n\n## v0.3.0\n\nRename everything to better represent project scope.  Better to do this early (now) and apologies for the disruption.\n\n- Rename repo and golang import path -> `bitnami/sealed-secrets`\n- Rename cli tool -> `kubeseal`\n- Rename `SealedSecret` apiGroup -> `bitnami.com`\n\n## v0.2.1\n\n- Fix invalid field `resourceName` in v0.2.0 controller.yaml (thanks @Globegitter)\n\n## v0.2.0\n\n- Client tool has better defaults, and can fetch the certificate automatically from the controller.\n- Improve release process to include pre-built Linux and OSX x86-64 binaries.\n\n## v0.1.0\n\nBasic functionality is complete.\n\n## v0.0.1\n\n- Clean up controller.jsonnet\n- Switch to quay.io (docker hub doesn't offer robot accounts??)\n- Add deploy section to .travis.yml\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 6.2294921875,
          "content": "# Security Release Process\n\nThe community has adopted this security disclosure and response policy to ensure we responsibly handle critical issues.\n\n## Supported Versions\n\nFor a list of support versions that this project will potentially create security fixes for, please refer to the [Releases page](https://github.com/bitnami-labs/sealed-secrets/blob/main/CONTRIBUTING.md#release-process) on this project's GitHub and/or project related documentation on release cadence and support.\n\n## Reporting a Vulnerability - Private Disclosure Process\n\nSecurity is of the highest importance and all security vulnerabilities or suspected security vulnerabilities should be reported to this project privately, to minimize attacks against current users  before they are fixed. Vulnerabilities will be investigated and patched on the next patch (or minor) release as soon as possible. This information could be kept entirely internal to the project.\n\nIf you know of a publicly disclosed security vulnerability for this project, please **IMMEDIATELY** contact the [maintainers](mailto:sealed-secrets.pdl@broadcom.com) of this project privately. The use of encrypted email is encouraged.\n\n>**IMPORTANT:** Do not file public issues on GitHub for security vulnerabilities\n\nTo report a vulnerability or a security-related issue, please contact the maintainers with enough details through one of the following channels:\n\n* Directly via the team email addresses (sealed-secrets.pdl@broadcom.com)\n* Open a [GitHub Security Advisory](https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability). This allows for anyone to report security vulnerabilities directly and privately to the maintainers via GitHub. Note that this option may not be present for every repository.\n\nThe report will be fielded by the [maintainers](https://github.com/bitnami-labs/sealed-secrets/blob/main/MAINTAINERS.md) who have committer and release permissions. Feedback will be sent within 3 business days, including a detailed plan to investigate the issue and any potential workarounds to perform in the meantime.\n\nDo not report non-security-impacting bugs through this channel. Use GitHub issues for all non-security-impacting bugs.\n\n## Proposed Report Content\n\nProvide a descriptive title and in the description of the report include the following information:\n\n* Basic identity information, such as your name and your affiliation or company.\n* Detailed steps to reproduce the vulnerability  (POC scripts, screenshots, and logs are all helpful to us).\n* Description of the effects of the vulnerability on this project and the related hardware and software configurations, so that the maintainers can reproduce it.\n* How the vulnerability affects this project's usage and an estimation of the attack surface, if there is one.\n* List other projects or dependencies that were used in conjunction with this project to produce the vulnerability.\n\n## When to report a vulnerability\n\n* When you think this project has a potential security vulnerability.\n* When you suspect a potential vulnerability but you are unsure that it impacts this project.\n* When you know of or suspect a potential vulnerability on another project that is used by this project.\n\n## Patch, Release, and Disclosure\n\nThe maintainers will respond to vulnerability reports as follows:\n\n1. The maintainers will investigate the vulnerability and determine its effects and criticality.\n2. If the issue is not deemed to be a vulnerability, the maintainers will follow up with a detailed reason for rejection.\n3. The maintainers will initiate a conversation with the reporter within 3 business days.\n4. If a vulnerability is acknowledged and the timeline for a fix is determined, the maintainers will work on a plan to communicate with the appropriate community, including identifying mitigating steps that affected users can take to protect themselves until the fix is rolled out.\n5. The maintainers will also create a [Security Advisory](https://docs.github.com/en/code-security/repository-security-advisories/publishing-a-repository-security-advisory) using the [CVSS Calculator](https://www.first.org/cvss/calculator/3.0), if it is not created yet.  The maintainers make the final call on the calculated CVSS; it is better to move quickly than making the CVSS perfect. Issues may also be reported to [Mitre](https://cve.mitre.org/) using this [scoring calculator](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator). The draft advisory will initially be set to private.\n6. The maintainers will work on fixing the vulnerability and perform internal testing before preparing to roll out the fix.\n7. Once the fix is confirmed, the maintainers will patch the vulnerability in the next patch or minor release, and backport a patch release into all earlier supported releases.\n\n## Public Disclosure Process\n\nThe maintainers publish the public advisory to this project's community via GitHub. In most cases, additional communication via Slack, Twitter, mailing lists, blog, and other channels will assist in educating the project's users and rolling out the patched release to affected users.\n\nThe maintainers will also publish any mitigating steps users can take until the fix can be applied to their instances. This project's distributors will handle creating and publishing their own security advisories.\n\n## Confidentiality, integrity and availability\n\nWe consider vulnerabilities leading to the compromise of data confidentiality, elevation of privilege, or integrity to be our highest priority concerns. Availability, in particular in areas relating to DoS and resource exhaustion, is also a serious security concern. The maintainer team takes all vulnerabilities, potential vulnerabilities, and suspected vulnerabilities seriously and will investigate them in an urgent and expeditious manner.\n\nNote that we do not currently consider the default settings for this project to be secure-by-default. It is necessary for operators to explicitly configure settings, role based access control, and other resource related features in this project to provide a hardened environment. We will not act on any security disclosure that relates to a lack of safe defaults. Over time, we will work towards improved safe-by-default configuration, taking into account backwards compatibility.\n"
        },
        {
          "name": "carvel",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "controller-norbac.jsonnet",
          "type": "blob",
          "size": 2.7001953125,
          "content": "// Minimal required deployment for a functional controller.\n\nlocal kubecfg = import 'kubecfg.libsonnet';\n\nlocal namespace = 'kube-system';\n\n{\n  kube:: (import 'vendor_jsonnet/kube-libsonnet/kube.libsonnet'),\n  local kube = self.kube + import 'kube-fixes.libsonnet',\n\n  controllerImage:: std.extVar('CONTROLLER_IMAGE'),\n  imagePullPolicy:: local ext = std.extVar('IMAGE_PULL_POLICY'); if ext == '' then\n    if std.endsWith($.controllerImage, ':latest') then 'Always' else 'IfNotPresent'\n  else ext,\n\n  crd: kube.CustomResourceDefinition('bitnami.com', 'v1alpha1', 'SealedSecret') {\n    spec+: {\n      versions_+: {\n        v1alpha1+: {\n          served: true,\n          storage: true,\n          subresources: {\n            status: {},\n          },\n          schema: kubecfg.parseYaml(importstr 'schema-v1alpha1.yaml')[0],\n        },\n      },\n    },\n  },\n\n  namespace:: { metadata+: { namespace: namespace } },\n\n  service: kube.Service('sealed-secrets-controller') + $.namespace {\n    target_pod: $.controller.spec.template,\n  },\n\n  service_metrics: kube.Service('sealed-secrets-controller-metrics') + $.namespace {\n    local service = self,\n    target_pod: $.controller.spec.template,\n    spec: {\n      selector: service.target_pod.metadata.labels,\n      ports: [\n        {\n          port: 8081,\n          targetPort: 8081,\n        },\n      ],\n      type: \"ClusterIP\",\n    },\n  },\n\n  controller: kube.Deployment('sealed-secrets-controller') + $.namespace {\n    spec+: {\n      template+: {\n        spec+: {\n          securityContext+: {\n            fsGroup: 65534,\n            runAsNonRoot: true,\n            runAsUser: 1001,\n            seccompProfile+: {\n              type: 'RuntimeDefault',\n            }\n          },\n          containers_+: {\n            controller: kube.Container('sealed-secrets-controller') {\n              image: $.controllerImage,\n              imagePullPolicy: $.imagePullPolicy,\n              command: ['controller'],\n              readinessProbe: {\n                httpGet: { path: '/healthz', port: 'http' },\n              },\n              livenessProbe: self.readinessProbe,\n              ports_+: {\n                http: { containerPort: 8080 },\n                metrics: { containerPort: 8081 },\n              },\n              securityContext+: {\n                allowPrivilegeEscalation: false,\n                capabilities+: {\n                  drop: [ 'ALL' ],\n                },\n                readOnlyRootFilesystem: true,\n              },\n              volumeMounts_+: {\n                tmp: {\n                  mountPath: '/tmp',\n                },\n              },\n            },\n          },\n          volumes_+: {\n            tmp: {\n              emptyDir: {},\n            },\n          },\n        },\n      },\n    },\n  },\n}\n"
        },
        {
          "name": "controller-podmonitor.jsonnet",
          "type": "blob",
          "size": 0.904296875,
          "content": "// Prometheus Pod Monitor manifest\n// ref: https://github.com/prometheus-operator/prometheus-operator#customresourcedefinitions\n\nlocal controller = import 'controller.jsonnet';\n\ncontroller {\n  podMonitor: {\n    apiVersion: 'monitoring.coreos.com/v1',\n    kind: 'PodMonitor',\n    metadata: {\n      name: 'sealed-secrets-controller',\n      namespace: $.namespace.metadata.namespace,\n      labels: {\n        name: 'sealed-secrets-controller',\n      },\n    },\n    spec: {\n      jobLabel: 'name',\n      selector: {\n        matchLabels: {\n          name: 'sealed-secrets-controller',\n        },\n      },\n      namespaceSelector: {\n        matchNames: [\n          $.namespace.metadata.namespace,\n        ],\n      },\n      podMetricsEndpoints: [\n        {\n          honorLabels: true,  // prefer controller metric namespace\n          port: 'http',\n          interval: '30s',\n        },\n      ],\n      sampleLimit: 1000,\n    },\n  },\n}\n"
        },
        {
          "name": "controller.jsonnet",
          "type": "blob",
          "size": 3.1201171875,
          "content": "// This is the recommended cluster deployment of sealed-secrets.\n// See controller-norbac.jsonnet for the bare minimum functionality.\n\nlocal controller = import 'controller-norbac.jsonnet';\n\ncontroller {\n  local kube = self.kube,\n\n  account: kube.ServiceAccount('sealed-secrets-controller') + $.namespace,\n\n  unsealerRole: kube.ClusterRole('secrets-unsealer') {\n    rules: [\n      {\n        apiGroups: ['bitnami.com'],\n        resources: ['sealedsecrets'],\n        verbs: ['get', 'list', 'watch'],\n      },\n      {\n        apiGroups: ['bitnami.com'],\n        resources: ['sealedsecrets/status'],\n        verbs: ['update'],\n      },\n      {\n        apiGroups: [''],\n        resources: ['secrets'],\n        verbs: ['get', 'list', 'create', 'update', 'delete', 'watch'],\n      },\n      {\n        apiGroups: [''],\n        resources: ['events'],\n        verbs: ['create', 'patch'],\n      },\n      {\n        apiGroups: [''],\n        resources: ['namespaces'],\n        verbs: ['get'],\n      },\n    ],\n  },\n\n  unsealKeyRole: kube.Role('sealed-secrets-key-admin') + $.namespace {\n    rules: [\n      {\n        apiGroups: [''],\n        resources: ['secrets'],\n        // Can't limit create by resource name as keys are produced on the fly\n        verbs: ['create', 'list'],\n      },\n    ],\n  },\n\n  serviceProxierRole: kube.Role('sealed-secrets-service-proxier') + $.namespace {\n    rules: [\n      {\n        apiGroups: [\n          '',\n        ],\n        resources: [\n          'services',\n        ],\n        resourceNames: [\n          'sealed-secrets-controller',\n        ],\n        // kubeseal dynamically obtains the service port name so later on\n        // can access the service using a proxy\n        verbs: [\n          'get',\n        ],\n      },\n      {\n        apiGroups: [\n          '',\n        ],\n        resources: [\n          'services/proxy',\n        ],\n        resourceNames: [\n          'http:sealed-secrets-controller:',  // kubeseal uses net.JoinSchemeNamePort when crafting proxy subresource URLs\n          'http:sealed-secrets-controller:http',\n          'sealed-secrets-controller',  // but often services are referred by name only, let's not make it unnecessarily cryptic\n        ],\n        verbs: [\n          'create',  // rotate and validate endpoints expect POST, see https://kubernetes.io/docs/reference/access-authn-authz/authorization/#determine-the-request-verb\n          'get',\n        ],\n      },\n    ],\n  },\n\n  unsealerBinding: kube.ClusterRoleBinding('sealed-secrets-controller') {\n    roleRef_: $.unsealerRole,\n    subjects_+: [$.account],\n  },\n\n  unsealKeyBinding: kube.RoleBinding('sealed-secrets-controller') + $.namespace {\n    roleRef_: $.unsealKeyRole,\n    subjects_+: [$.account],\n  },\n\n  serviceProxierBinding: kube.RoleBinding('sealed-secrets-service-proxier') + $.namespace {\n    roleRef_: $.serviceProxierRole,\n    // kube.libsonnet assumes object here have a namespace, but system groups don't\n    // thus are not supposed to use the magic \"_\" here.\n    subjects+: [kube.Group('system:authenticated')],\n  },\n\n  controller+: {\n    spec+: {\n      template+: {\n        spec+: {\n          serviceAccountName: $.account.metadata.name,\n        },\n      },\n    },\n  },\n}\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "githooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 3.421875,
          "content": "module github.com/bitnami-labs/sealed-secrets\n\ngo 1.23.4\n\nrequire (\n\tgithub.com/Masterminds/sprig/v3 v3.3.0\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/google/renameio v0.1.0\n\tgithub.com/mattn/go-isatty v0.0.20\n\tgithub.com/mkmik/multierror v0.4.0\n\tgithub.com/onsi/ginkgo/v2 v2.22.2\n\tgithub.com/onsi/gomega v1.36.2\n\tgithub.com/prometheus/client_golang v1.20.5\n\tgithub.com/spf13/pflag v1.0.5\n\tgithub.com/throttled/throttled v2.2.5+incompatible\n\tgolang.org/x/crypto v0.32.0\n\tgopkg.in/yaml.v2 v2.4.0\n\tk8s.io/api v0.32.0\n\tk8s.io/apimachinery v0.32.0\n\tk8s.io/client-go v0.32.0\n\tk8s.io/code-generator v0.32.0\n\tk8s.io/klog v1.0.0\n\tk8s.io/klog/v2 v2.130.1\n\tk8s.io/utils v0.0.0-20241104100929-3ea5e8cea738\n)\n\nrequire (\n\tdario.cat/mergo v1.0.1 // indirect\n\tgithub.com/Masterminds/goutils v1.1.1 // indirect\n\tgithub.com/Masterminds/semver/v3 v3.3.0 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc // indirect\n\tgithub.com/emicklei/go-restful/v3 v3.12.1 // indirect\n\tgithub.com/fxamacker/cbor/v2 v2.7.0 // indirect\n\tgithub.com/go-logr/logr v1.4.2 // indirect\n\tgithub.com/go-openapi/jsonpointer v0.21.0 // indirect\n\tgithub.com/go-openapi/jsonreference v0.21.0 // indirect\n\tgithub.com/go-openapi/swag v0.23.0 // indirect\n\tgithub.com/go-task/slim-sprig/v3 v3.0.0 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang/protobuf v1.5.4 // indirect\n\tgithub.com/gomodule/redigo v2.0.0+incompatible // indirect\n\tgithub.com/google/gnostic-models v0.6.8 // indirect\n\tgithub.com/google/gofuzz v1.2.0 // indirect\n\tgithub.com/google/pprof v0.0.0-20241210010833-40e02aabc2ad // indirect\n\tgithub.com/google/uuid v1.6.0 // indirect\n\tgithub.com/hashicorp/golang-lru v1.0.2 // indirect\n\tgithub.com/huandu/xstrings v1.5.0 // indirect\n\tgithub.com/josharian/intern v1.0.0 // indirect\n\tgithub.com/json-iterator/go v1.1.12 // indirect\n\tgithub.com/klauspost/compress v1.17.9 // indirect\n\tgithub.com/mailru/easyjson v0.7.7 // indirect\n\tgithub.com/mitchellh/copystructure v1.2.0 // indirect\n\tgithub.com/mitchellh/reflectwalk v1.0.2 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/prometheus/client_model v0.6.1 // indirect\n\tgithub.com/prometheus/common v0.55.0 // indirect\n\tgithub.com/prometheus/procfs v0.15.1 // indirect\n\tgithub.com/shopspring/decimal v1.4.0 // indirect\n\tgithub.com/spf13/cast v1.7.0 // indirect\n\tgithub.com/x448/float16 v0.8.4 // indirect\n\tgolang.org/x/mod v0.22.0 // indirect\n\tgolang.org/x/net v0.33.0 // indirect\n\tgolang.org/x/oauth2 v0.23.0 // indirect\n\tgolang.org/x/sync v0.10.0 // indirect\n\tgolang.org/x/sys v0.29.0 // indirect\n\tgolang.org/x/term v0.28.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgolang.org/x/time v0.7.0 // indirect\n\tgolang.org/x/tools v0.28.0 // indirect\n\tgoogle.golang.org/protobuf v1.36.1 // indirect\n\tgopkg.in/evanphx/json-patch.v4 v4.12.0 // indirect\n\tgopkg.in/inf.v0 v0.9.1 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n\tk8s.io/gengo/v2 v2.0.0-20240911193312-2b36238f13e9 // indirect\n\tk8s.io/kube-openapi v0.0.0-20241105132330-32ad38e42d3f // indirect\n\tsigs.k8s.io/json v0.0.0-20241010143419-9aa6b5e7a4b3 // indirect\n\tsigs.k8s.io/structured-merge-diff/v4 v4.4.2 // indirect\n\tsigs.k8s.io/yaml v1.4.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 18.232421875,
          "content": "dario.cat/mergo v1.0.1 h1:Ra4+bf83h2ztPIQYNP99R6m+Y7KfnARDfID+a+vLl4s=\ndario.cat/mergo v1.0.1/go.mod h1:uNxQE+84aUszobStD9th8a29P2fMDhsBdgRYvZOxGmk=\ngithub.com/Masterminds/goutils v1.1.1 h1:5nUrii3FMTL5diU80unEVvNevw1nH4+ZV4DSLVJLSYI=\ngithub.com/Masterminds/goutils v1.1.1/go.mod h1:8cTjp+g8YejhMuvIA5y2vz3BpJxksy863GQaJW2MFNU=\ngithub.com/Masterminds/semver/v3 v3.3.0 h1:B8LGeaivUe71a5qox1ICM/JLl0NqZSW5CHyL+hmvYS0=\ngithub.com/Masterminds/semver/v3 v3.3.0/go.mod h1:4V+yj/TJE1HU9XfppCwVMZq3I84lprf4nC11bSS5beM=\ngithub.com/Masterminds/sprig/v3 v3.3.0 h1:mQh0Yrg1XPo6vjYXgtf5OtijNAKJRNcTdOOGZe3tPhs=\ngithub.com/Masterminds/sprig/v3 v3.3.0/go.mod h1:Zy1iXRYNqNLUolqCpL4uhk6SHUMAOSCzdgBfDb35Lz0=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/emicklei/go-restful/v3 v3.12.1 h1:PJMDIM/ak7btuL8Ex0iYET9hxM3CI2sjZtzpL63nKAU=\ngithub.com/emicklei/go-restful/v3 v3.12.1/go.mod h1:6n3XBCmQQb25CM2LCACGz8ukIrRry+4bhvbpWn3mrbc=\ngithub.com/frankban/quicktest v1.14.6 h1:7Xjx+VpznH+oBnejlPUj8oUpdxnVs4f8XU8WnHkI4W8=\ngithub.com/frankban/quicktest v1.14.6/go.mod h1:4ptaffx2x8+WTWXmUCuVU6aPUX1/Mz7zb5vbUoiM6w0=\ngithub.com/fxamacker/cbor/v2 v2.7.0 h1:iM5WgngdRBanHcxugY4JySA0nk1wZorNOpTgCMedv5E=\ngithub.com/fxamacker/cbor/v2 v2.7.0/go.mod h1:pxXPTn3joSm21Gbwsv0w9OSA2y1HFR9qXEeXQVeNoDQ=\ngithub.com/go-logr/logr v0.1.0/go.mod h1:ixOQHD9gLJUVQQ2ZOR7zLEifBX6tGkNJF4QyIY7sIas=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-openapi/jsonpointer v0.21.0 h1:YgdVicSA9vH5RiHs9TZW5oyafXZFc6+2Vc1rr/O9oNQ=\ngithub.com/go-openapi/jsonpointer v0.21.0/go.mod h1:IUyH9l/+uyhIYQ/PXVA41Rexl+kOkAPDdXEYns6fzUY=\ngithub.com/go-openapi/jsonreference v0.21.0 h1:Rs+Y7hSXT83Jacb7kFyjn4ijOuVGSvOdF2+tg1TRrwQ=\ngithub.com/go-openapi/jsonreference v0.21.0/go.mod h1:LmZmgsrTkVg9LG4EaHeY8cBDslNPMo06cago5JNLkm4=\ngithub.com/go-openapi/swag v0.23.0 h1:vsEVJDUo2hPJ2tu0/Xc+4noaxyEffXNIs3cOULZ+GrE=\ngithub.com/go-openapi/swag v0.23.0/go.mod h1:esZ8ITTYEsH1V2trKHjAN8Ai7xHb8RV+YSZ577vPjgQ=\ngithub.com/go-task/slim-sprig/v3 v3.0.0 h1:sUs3vkvUymDpBKi3qH1YSqBQk9+9D/8M2mN1vB6EwHI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0/go.mod h1:W848ghGpv3Qj3dhTPRyJypKRiqCdHZiAzKg9hl15HA8=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/gomodule/redigo v2.0.0+incompatible h1:K/R+8tc58AaqLkqG2Ol3Qk+DR/TlNuhuh457pBFPtt0=\ngithub.com/gomodule/redigo v2.0.0+incompatible/go.mod h1:B4C85qUVwatsJoIUNIfCRsp7qO0iAmpGFZ4EELWSbC4=\ngithub.com/google/gnostic-models v0.6.8 h1:yo/ABAfM5IMRsS1VnXjTBvUb61tFIHozhlYvRgGre9I=\ngithub.com/google/gnostic-models v0.6.8/go.mod h1:5n7qKqH0f5wFt+aWF8CW6pZLLNOfYuF5OpfBSENuI8U=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/gofuzz v1.2.0 h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=\ngithub.com/google/gofuzz v1.2.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/pprof v0.0.0-20241210010833-40e02aabc2ad h1:a6HEuzUHeKH6hwfN/ZoQgRgVIWFJljSWa/zetS2WTvg=\ngithub.com/google/pprof v0.0.0-20241210010833-40e02aabc2ad/go.mod h1:vavhavw2zAxS5dIdcRluK6cSGGPlZynqzFM8NdvU144=\ngithub.com/google/renameio v0.1.0 h1:GOZbcHa3HfsPKPlmyPyN2KEohoMXOhdMbHrvbpl2QaA=\ngithub.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/hashicorp/golang-lru v1.0.2 h1:dV3g9Z/unq5DpblPpw+Oqcv4dU/1omnb4Ok8iPY6p1c=\ngithub.com/hashicorp/golang-lru v1.0.2/go.mod h1:iADmTwqILo4mZ8BN3D2Q6+9jd8WM5uGBxy+E8yxSoD4=\ngithub.com/huandu/xstrings v1.5.0 h1:2ag3IFq9ZDANvthTwTiqSSZLjDc+BedvHPAp5tJy2TI=\ngithub.com/huandu/xstrings v1.5.0/go.mod h1:y5/lhBue+AyNmUVz9RLU9xbLR0o4KIIExikq4ovT0aE=\ngithub.com/josharian/intern v1.0.0 h1:vlS4z54oSdjm0bgjRigI+G1HpF+tI+9rE5LLzOg8HmY=\ngithub.com/josharian/intern v1.0.0/go.mod h1:5DoeVV0s6jJacbCEi61lwdGj/aVlrQvzHFFd8Hwg//Y=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/compress v1.17.9 h1:6KIumPrER1LHsvBVuDa0r5xaG0Es51mhhB9BQB2qeMA=\ngithub.com/klauspost/compress v1.17.9/go.mod h1:Di0epgTjJY877eYKx5yC51cX2A2Vl2ibi7bDH9ttBbw=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=\ngithub.com/mailru/easyjson v0.7.7/go.mod h1:xzfreul335JAWq5oZzymOObrkdz5UnU4kGfJJLY9Nlc=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mitchellh/copystructure v1.2.0 h1:vpKXTN4ewci03Vljg/q9QvCGUDttBOGBIa15WveJJGw=\ngithub.com/mitchellh/copystructure v1.2.0/go.mod h1:qLl+cE2AmVv+CoeAwDPye/v+N2HKCj9FbZEVFJRxO9s=\ngithub.com/mitchellh/reflectwalk v1.0.2 h1:G2LzWKi524PWgd3mLHV8Y5k7s6XUvT0Gef6zxSIeXaQ=\ngithub.com/mitchellh/reflectwalk v1.0.2/go.mod h1:mSTlrgnPZtwu0c4WaC2kGObEpuNDbx0jmZXqmk4esnw=\ngithub.com/mkmik/multierror v0.4.0 h1:TcH9HTFK/X1JJLOnWYp0b6mKQJuVUGwS9aFFGBfYaH8=\ngithub.com/mkmik/multierror v0.4.0/go.mod h1:pz+UajC3ELc35PsCPVL69CAji3J/YNRuyI4rOYdCwPY=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/onsi/ginkgo/v2 v2.22.2 h1:/3X8Panh8/WwhU/3Ssa6rCKqPLuAkVY2I0RoyDLySlU=\ngithub.com/onsi/ginkgo/v2 v2.22.2/go.mod h1:oeMosUL+8LtarXBHu/c0bx2D/K9zyQ6uX3cTyztHwsk=\ngithub.com/onsi/gomega v1.36.2 h1:koNYke6TVk6ZmnyHrCXba/T/MoLBXFjeC1PtvYgw0A8=\ngithub.com/onsi/gomega v1.36.2/go.mod h1:DdwyADRjrc825LhMEkD76cHR5+pUnjhUN8GlHlRPHzY=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_golang v1.20.5 h1:cxppBPuYhUnsO6yo/aoRol4L7q7UFfdm+bR9r+8l63Y=\ngithub.com/prometheus/client_golang v1.20.5/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=\ngithub.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=\ngithub.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=\ngithub.com/prometheus/common v0.55.0 h1:KEi6DK7lXW/m7Ig5i47x0vRzuBsHuvJdi5ee6Y3G1dc=\ngithub.com/prometheus/common v0.55.0/go.mod h1:2SECS4xJG1kd8XF9IcM1gMX6510RAEL65zxzNImwdc8=\ngithub.com/prometheus/procfs v0.15.1 h1:YagwOFzUgYfKKHX6Dr+sHT7km/hxC76UB0learggepc=\ngithub.com/prometheus/procfs v0.15.1/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/shopspring/decimal v1.4.0 h1:bxl37RwXBklmTi0C79JfXCEBD1cqqHt0bbgBAGFp81k=\ngithub.com/shopspring/decimal v1.4.0/go.mod h1:gawqmDU56v4yIKSwfBSFip1HdCCXN8/+DMd9qYNcwME=\ngithub.com/spf13/cast v1.7.0 h1:ntdiHjuueXFgm5nzDRdOS4yfT43P5Fnud6DH50rz/7w=\ngithub.com/spf13/cast v1.7.0/go.mod h1:ancEpBxwJDODSW/UG4rDrAqiKolqNNh2DX3mk86cAdo=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/throttled/throttled v2.2.5+incompatible h1:65UB52X0qNTYiT0Sohp8qLYVFwZQPDw85uSa65OljjQ=\ngithub.com/throttled/throttled v2.2.5+incompatible/go.mod h1:0BjlrEGQmvxps+HuXLsyRdqpSRvJpq0PNIsOtqP9Nos=\ngithub.com/x448/float16 v0.8.4 h1:qLwI1I70+NjRFUR3zs1JPUCgaCXSh3SW62uAKT1mSBM=\ngithub.com/x448/float16 v0.8.4/go.mod h1:14CWIYCyZA/cWjXOioeEpHeN/83MdbZDRQHoFcYsOfg=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.32.0 h1:euUpcYgM8WcP71gNpTqQCn6rC2t6ULUPiOzfWaXVVfc=\ngolang.org/x/crypto v0.32.0/go.mod h1:ZnnJkOaASj8g0AjIduWNlq2NRxL0PlBrbKVyZ6V/Ugc=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.22.0 h1:D4nJWe9zXqHOmWqj4VMOJhvzj7bEZg4wEYa759z1pH4=\ngolang.org/x/mod v0.22.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.33.0 h1:74SYHlV8BIgHIFC/LrYkOGIwL19eTYXQ5wc6TBuO36I=\ngolang.org/x/net v0.33.0/go.mod h1:HXLR5J+9DxmrqMwG9qjGCxZ+zKXxBru04zlTvWlWuN4=\ngolang.org/x/oauth2 v0.23.0 h1:PbgcYx2W7i4LvjJWEbf0ngHV6qJYr86PkAV3bXdLEbs=\ngolang.org/x/oauth2 v0.23.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.29.0 h1:TPYlXGxvx1MGTn2GiZDhnjPA9wZzZeGKHHmKhHYvgaU=\ngolang.org/x/sys v0.29.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.28.0 h1:/Ts8HFuMR2E6IP/jlo7QVLZHggjKQbhu/7H0LJFr3Gg=\ngolang.org/x/term v0.28.0/go.mod h1:Sw/lC2IAUZ92udQNf3WodGtn4k/XoLyZoh8v/8uiwek=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.7.0 h1:ntUhktv3OPE6TgYxXWv9vKvUSJyIFJlyohwbkEwPrKQ=\ngolang.org/x/time v0.7.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.28.0 h1:WuB6qZ4RPCQo5aP3WdKZS7i595EdWqWR8vqJTlwTVK8=\ngolang.org/x/tools v0.28.0/go.mod h1:dcIOrVd3mfQKTgrDVQHqCPMWy6lnhfhtX3hLXYVLfRw=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/protobuf v1.36.1 h1:yBPeRvTftaleIgM3PZ/WBIZ7XM/eEYAaEyCwvyjq/gk=\ngoogle.golang.org/protobuf v1.36.1/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/evanphx/json-patch.v4 v4.12.0 h1:n6jtcsulIzXPJaxegRbvFNNrZDjbij7ny3gmSPG+6V4=\ngopkg.in/evanphx/json-patch.v4 v4.12.0/go.mod h1:p8EYWUEYMpynmqDbY58zCKCFZw8pRWMG4EsWvDvM72M=\ngopkg.in/inf.v0 v0.9.1 h1:73M5CoZyi3ZLMOyDlQh031Cx6N9NDJ2Vvfl76EDAgDc=\ngopkg.in/inf.v0 v0.9.1/go.mod h1:cWUDdTG/fYaXco+Dcufb5Vnc6Gp2YChqWtbxRZE0mXw=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nk8s.io/api v0.32.0 h1:OL9JpbvAU5ny9ga2fb24X8H6xQlVp+aJMFlgtQjR9CE=\nk8s.io/api v0.32.0/go.mod h1:4LEwHZEf6Q/cG96F3dqR965sYOfmPM7rq81BLgsE0p0=\nk8s.io/apimachinery v0.32.0 h1:cFSE7N3rmEEtv4ei5X6DaJPHHX0C+upp+v5lVPiEwpg=\nk8s.io/apimachinery v0.32.0/go.mod h1:GpHVgxoKlTxClKcteaeuF1Ul/lDVb74KpZcxcmLDElE=\nk8s.io/client-go v0.32.0 h1:DimtMcnN/JIKZcrSrstiwvvZvLjG0aSxy8PxN8IChp8=\nk8s.io/client-go v0.32.0/go.mod h1:boDWvdM1Drk4NJj/VddSLnx59X3OPgwrOo0vGbtq9+8=\nk8s.io/code-generator v0.32.0 h1:s0lNN8VSWny8LBz5t5iy7MCdgwdOhdg7vAGVxvS+VWU=\nk8s.io/code-generator v0.32.0/go.mod h1:b7Q7KMZkvsYFy72A79QYjiv4aTz3GvW0f1T3UfhFq4s=\nk8s.io/gengo/v2 v2.0.0-20240911193312-2b36238f13e9 h1:si3PfKm8dDYxgfbeA6orqrtLkvvIeH8UqffFJDl0bz4=\nk8s.io/gengo/v2 v2.0.0-20240911193312-2b36238f13e9/go.mod h1:EJykeLsmFC60UQbYJezXkEsG2FLrt0GPNkU5iK5GWxU=\nk8s.io/klog v1.0.0 h1:Pt+yjF5aB1xDSVbau4VsWe+dQNzA0qv1LlXdC2dF6Q8=\nk8s.io/klog v1.0.0/go.mod h1:4Bi6QPql/J/LkTDqv7R/cd3hPo4k2DG6Ptcz060Ez5I=\nk8s.io/klog/v2 v2.130.1 h1:n9Xl7H1Xvksem4KFG4PYbdQCQxqc/tTUyrgXaOhHSzk=\nk8s.io/klog/v2 v2.130.1/go.mod h1:3Jpz1GvMt720eyJH1ckRHK1EDfpxISzJ7I9OYgaDtPE=\nk8s.io/kube-openapi v0.0.0-20241105132330-32ad38e42d3f h1:GA7//TjRY9yWGy1poLzYYJJ4JRdzg3+O6e8I+e+8T5Y=\nk8s.io/kube-openapi v0.0.0-20241105132330-32ad38e42d3f/go.mod h1:R/HEjbvWI0qdfb8viZUeVZm0X6IZnxAydC7YU42CMw4=\nk8s.io/utils v0.0.0-20241104100929-3ea5e8cea738 h1:M3sRQVHv7vB20Xc2ybTt7ODCeFj6JSWYFzOFnYeS6Ro=\nk8s.io/utils v0.0.0-20241104100929-3ea5e8cea738/go.mod h1:OLgZIPagt7ERELqWJFomSt595RzquPNLL48iOWgYOg0=\nsigs.k8s.io/json v0.0.0-20241010143419-9aa6b5e7a4b3 h1:/Rv+M11QRah1itp8VhT6HoVx1Ray9eB4DBr+K+/sCJ8=\nsigs.k8s.io/json v0.0.0-20241010143419-9aa6b5e7a4b3/go.mod h1:18nIHnGi6636UCz6m8i4DhaJ65T6EruyzmoQqI2BVDo=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.2 h1:MdmvkGuXi/8io6ixD5wud3vOLwc1rj0aNqRlpuvjmwA=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.2/go.mod h1:N8f93tFZh9U6vpxwRArLiikrE5/2tiu1w1AGfACIGE4=\nsigs.k8s.io/yaml v1.4.0 h1:Mk1wCc2gy/F0THH0TAp1QYyJNzRm2KCLy3o5ASXVI5E=\nsigs.k8s.io/yaml v1.4.0/go.mod h1:Ejl7/uTz7PSA4eKMyQCUTnhZYNmLIl+5c2lQPGR2BPY=\n"
        },
        {
          "name": "hack",
          "type": "tree",
          "content": null
        },
        {
          "name": "helm",
          "type": "tree",
          "content": null
        },
        {
          "name": "integration",
          "type": "tree",
          "content": null
        },
        {
          "name": "jsonnetfile.json",
          "type": "blob",
          "size": 0.3095703125,
          "content": "{\n    \"dependencies\": [\n        {\n            \"name\": \"kube-libsonnet\",\n            \"source\": {\n                \"git\": {\n                    \"remote\": \"https://github.com/bitnami-labs/kube-libsonnet\",\n                    \"subdir\": \"\"\n                }\n            },\n            \"version\": \"master\"\n        }\n    ]\n}\n"
        },
        {
          "name": "jsonnetfile.lock.json",
          "type": "blob",
          "size": 0.3427734375,
          "content": "{\n    \"dependencies\": [\n        {\n            \"name\": \"kube-libsonnet\",\n            \"source\": {\n                \"git\": {\n                    \"remote\": \"https://github.com/bitnami-labs/kube-libsonnet\",\n                    \"subdir\": \"\"\n                }\n            },\n            \"version\": \"7df1459e6d890d54eb96ea3df70d7c84b8b3fb0e\"\n        }\n    ]\n}\n"
        },
        {
          "name": "kube-fixes.libsonnet",
          "type": "blob",
          "size": 0.619140625,
          "content": "{\n  CustomResourceDefinition(group, version, kind): {\n    local this = self,\n    apiVersion: 'apiextensions.k8s.io/v1',\n    kind: 'CustomResourceDefinition',\n    metadata+: {\n      name: this.spec.names.plural + '.' + this.spec.group,\n    },\n    spec: {\n      scope: 'Namespaced',\n      group: group,\n      versions_:: {\n        [version]: {\n          served: true,\n          storage: true,\n        },\n      },\n      versions: $.mapToNamedList(self.versions_),\n      names: {\n        kind: kind,\n        singular: $.toLower(self.kind),\n        plural: self.singular + 's',\n        listKind: self.kind + 'List',\n      },\n    },\n  },\n}\n"
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "schema-v1alpha1.yaml",
          "type": "blob",
          "size": 4.890625,
          "content": "openAPIV3Schema:\n  description: |-\n    SealedSecret is the K8s representation of a \"sealed Secret\" - a\n    regular k8s Secret that has been sealed (encrypted) using the\n    controller's key.\n  properties:\n    apiVersion:\n      description: |-\n        APIVersion defines the versioned schema of this representation of an object.\n        Servers should convert recognized schemas to the latest internal value, and\n        may reject unrecognized values.\n        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n      type: string\n    kind:\n      description: |-\n        Kind is a string value representing the REST resource this object represents.\n        Servers may infer this from the endpoint the client submits requests to.\n        Cannot be updated.\n        In CamelCase.\n        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n      type: string\n    metadata:\n      type: object\n    spec:\n      description: SealedSecretSpec is the specification of a SealedSecret.\n      properties:\n        data:\n          description: Data is deprecated and will be removed eventually. Use per-value EncryptedData instead.\n          format: byte\n          type: string\n        encryptedData:\n          additionalProperties:\n            type: string\n          type: object\n          x-kubernetes-preserve-unknown-fields: true\n        template:\n          description: |-\n            Template defines the structure of the Secret that will be\n            created from this sealed secret.\n          properties:\n            data:\n              additionalProperties:\n                type: string\n              description: Keys that should be templated using decrypted data.\n              nullable: true\n              type: object\n            immutable:\n              description: |-\n                Immutable, if set to true, ensures that data stored in the Secret cannot\n                be updated (only object metadata can be modified).\n                If not set to true, the field can be modified at any time.\n                Defaulted to nil.\n              type: boolean\n            metadata:\n              description: |-\n                Standard object's metadata.\n                More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n              nullable: true\n              properties:\n                annotations:\n                  additionalProperties:\n                    type: string\n                  type: object\n                finalizers:\n                  items:\n                    type: string\n                  type: array\n                labels:\n                  additionalProperties:\n                    type: string\n                  type: object\n                name:\n                  type: string\n                namespace:\n                  type: string\n              type: object\n              x-kubernetes-preserve-unknown-fields: true\n            type:\n              description: Used to facilitate programmatic handling of secret data.\n              type: string\n          type: object\n      required:\n        - encryptedData\n      type: object\n    status:\n      description: SealedSecretStatus is the most recently observed status of the SealedSecret.\n      properties:\n        conditions:\n          description: Represents the latest available observations of a sealed secret's current state.\n          items:\n            description: SealedSecretCondition describes the state of a sealed secret at a certain point.\n            properties:\n              lastTransitionTime:\n                description: Last time the condition transitioned from one status to another.\n                format: date-time\n                type: string\n              lastUpdateTime:\n                description: The last time this condition was updated.\n                format: date-time\n                type: string\n              message:\n                description: A human readable message indicating details about the transition.\n                type: string\n              reason:\n                description: The reason for the condition's last transition.\n                type: string\n              status:\n                description: |-\n                  Status of the condition for a sealed secret.\n                  Valid values for \"Synced\": \"True\", \"False\", or \"Unknown\".\n                type: string\n              type:\n                description: |-\n                  Type of condition for a sealed secret.\n                  Valid value: \"Synced\"\n                type: string\n            required:\n              - status\n              - type\n            type: object\n          type: array\n        observedGeneration:\n          description: ObservedGeneration reflects the generation most recently observed by the sealed-secrets controller.\n          format: int64\n          type: integer\n      type: object\n  required:\n    - spec\n  type: object\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "site",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor_jsonnet",
          "type": "tree",
          "content": null
        },
        {
          "name": "versions.env",
          "type": "blob",
          "size": 0.052734375,
          "content": "GO_VERSION=1.23.4\nGO_VERSION_LIST=\"[\\\"$GO_VERSION\\\"]\"\n"
        }
      ]
    }
  ]
}