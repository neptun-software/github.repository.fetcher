{
  "metadata": {
    "timestamp": 1736567444369,
    "page": 49,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dinedal/textql",
      "stars": 9076,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".SRCINFO",
          "type": "blob",
          "size": 0.28515625,
          "content": "pkgbase = textql-git\n\tpkgdesc = Execute SQL against structured text like CSV or TSV\n\tpkgver = 2.0.3\n\tpkgrel = 1\n\turl = https://github.com/dinedal/textql\n\tarch = x86_64\n\tarch = i686\n\tlicense = MIT\n\tmakedepends = git\n\tdepends = go\n\toptions = !strip\n\toptions = !emptydirs\n\npkgname = textql-git\n\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0205078125,
          "content": "vendor/\nglide\nbuild/\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.091796875,
          "content": "os: linux\narch:\n - amd64\n - ppc64le\nlanguage: go\nsudo: false\n\ngo:\n  - '1.13.x'\n\ninstall: make\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.216796875,
          "content": "FROM golang:1.10\n\n# install sqlite3 for option \"-console\"\nRUN apt-get update && apt-get install -y sqlite3\n\nWORKDIR /go/src/app\nCOPY . .\n\nRUN go get -d -v ./...\nRUN go install -v ./...\n\nWORKDIR /tmp\n\nENTRYPOINT [\"textql\"]\n"
        },
        {
          "name": "Dockerfile.alpine",
          "type": "blob",
          "size": 0.310546875,
          "content": "FROM golang:1.10-alpine3.7 AS build\n\n# \"build-base\" for gcc\nRUN apk update && apk add git && apk add build-base\nWORKDIR /go/src/app\nCOPY . .\n\nRUN go get -d -v ./...\nRUN go install -v ./...\n\nFROM alpine:3.7\nRUN apk add --update-cache sqlite\nCOPY --from=build /go/bin/textql /usr/bin\nWORKDIR /tmp\nENTRYPOINT [\"textql\"]\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.056640625,
          "content": "MIT License\n-----------\n\nCopyright (c) 2014, Paul Bergeron\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.4990234375,
          "content": ".PHONY: all test clean man godep fast release install\n\nall: textql\n\ntextql: test\n\tgo build -ldflags \"-X main.VERSION=`cat VERSION` -s\" -o ./build/textql ./textql/main.go\n\nfast:\n\tgo build -i -ldflags \"-X main.VERSION=`cat VERSION`-dev -s\" -o ./build/textql ./textql/main.go\n\ntest:\n\tgo test ./...\n\nclean:\n\trm -fr ./build\n\nrelease: textql\n\tgit tag -a `cat VERSION`\n\tgit push origin `cat VERSION`\n\ninstall: test\n\tgo install -ldflags \"-X main.VERSION=`cat VERSION` -s\" ./textql/main.go\n\nman:\n\tronn man/textql.1.ronn\n"
        },
        {
          "name": "PKGBUILD",
          "type": "blob",
          "size": 0.958984375,
          "content": "# Maintainer: Aniket-Pradhan aniket17133@iiitd.ac.in\n# Owner/Cofntributer: Paul Bergeron https://github.com/dinedal\n\npkgname=textql-git\npkgver=2.0.3\npkgrel=1\npkgdesc=\"Execute SQL against structured text like CSV or TSV\"\narch=('x86_64' 'i686')\nurl=\"https://github.com/dinedal/textql\"\nlicense=('MIT')\ndepends=('go')\nmakedepends=('git')\noptions=('!strip' '!emptydirs')\n_gourl=github.com/dinedal/textql\n\nbuild() {\n  GOPATH=\"$srcdir\" go get -v -u ${_gourl}/...\n}\n\ncheck() {\n  echo $GOPATH\n  echo $srcdir\n  GOPATH=\"$GOPATH:$srcdir\" go test -v ${_gourl}/...\n}\n\npackage() {\n  mkdir -p \"$pkgdir/usr/bin\"\n  install -p -m755 \"$srcdir/bin/\"* \"$pkgdir/usr/bin\"\n\n  mkdir -p \"$pkgdir/$GOPATH\"\n  cp -Rv --preserve=timestamps \"$srcdir/\"{src,pkg} \"$pkgdir/$GOPATH\"\n\n  for f in LICENSE COPYING LICENSE.* COPYING.*; do\n    if [ -e \"$srcdir/src/$_gourl/$f\" ]; then\n      install -Dm644 \"$srcdir/src/$_gourl/$f\" \\\n        \"$pkgdir/usr/share/licenses/$pkgname/$f\"\n    fi\n  done\n}\n\n# vim:set ts=2 sw=2 et:\n"
        },
        {
          "name": "Readme.md",
          "type": "blob",
          "size": 5.0537109375,
          "content": "# TextQL\n\n[![Build Status](https://travis-ci.org/dinedal/textql.svg)](https://travis-ci.org/dinedal/textql) [![Go Report Card](http://goreportcard.com/badge/dinedal/textql)](http://goreportcard.com/report/dinedal/textql)\n\nAllows you to easily execute SQL against structured text like CSV or TSV.\n\nExample session:\n\n![textql_usage_session](https://raw.github.com/dinedal/textql/master/textql_usage.gif)\n\n## Major changes!\n\nIn the time since the initial release of textql, I've made some improvements as well as made the project much more modular. There've also been additional performance tweaks and added functionality, but this comes at the cost of breaking the original command-line flags and changing the install command.\n\n### Changes since v1\n\nAdditions:\n\n- Numeric values are automatically recognized in more cases.\n- Date / Time / DateTime values are automatically recognized in reasonable formats. See [Time Strings](https://www.sqlite.org/lang_datefunc.html) for a list for accepted formats, and how to convert from other formats.\n- Added join support! Multiple files / directories can be loaded by listing them at the end of the command.\n- Directories are read by reading each file inside, and this is non-recursive.\n- You can list as many files / directories as you like.\n- Added flag '-output-file' to save output directly to a file.\n- Added flag '-output-dlm' to modify the output delimiter.\n- Added \"short SQL\" syntax.\n  - For the case of a single table, the `FROM [table]` can be dropped from the query.\n  - For simple selects, the `SELECT` keyword can be dropped from the query.\n  - This means the v1 command `textql -sql \"select * from tbl\" -source some_file.csv` can be shortened to `textql -sql \"*\" some_file.csv`\n\nChanges:\n\n- The flag '-outputHeader' was renamed to '-output-header'.\n\nRemovals:\n\n- Dropped the ability to override table names. This makes less sense after the automatic tablename generation based on filename, joins, and shorter SQL syntax changes.\n- Removed '-source', any files / paths at the end of the command are used, as well as piped-in data.\n\nBug fixes:\n\n- Writing to a directory no longer fails silently.\n\n## Key differences between textql and sqlite importing\n\n- sqlite import will not accept stdin, breaking unix pipes. textql will happily do so.\n- textql supports quote-escaped delimiters, sqlite does not.\n- textql leverages the sqlite in-memory database feature as much as possible and only touches disk if asked.\n\n## Is it any good?\n\n[Yes](https://news.ycombinator.com/item?id=3067434)\n\n## Requirements\n\n- Go 1.4 or later\n\n## Install\n\n**Latest release on Homebrew (OS X)**\n\n```bash\nbrew install textql\n```\n\n**Build from source**\n\n```bash\ngo get -u github.com/dinedal/textql/...\n```\n\n## Docker\n\nFirst build the image.\n\n```bash\ndocker build -t textql .\n```\n\nNow use that image mounting your current directory into the container.\n\n```bash\ndocker run --rm -it -v $(pwd):/tmp textql [rest_of_command]\n```\n\n### Alias\n\nYou can add the following alias to your system to provide quick access to TextQL:\n\n```bash\nalias textql='docker run --rm -it -v $(pwd):/tmp textql '\n```\n\n## AUR\n\n**Using an AUR-Helper**\n\n```bash\nyaourt textql-git\n```\n\n**Building from PKGBUILD**\nFirst clone the repository.\n```bash\nmakepkg -cs\n```\nThen install the package using pacman or your favorite Package Manager\n\n\n## Usage\n\n```bash\n  textql [-console] [-save-to path path] [-output-file path] [-output-dlm delimter] [-output-header] [-pretty] [-quiet] [-header] [-dlm delimter] [-sql sql_statements] [path ...]\n\n  -console\n        After all statements are run, open SQLite3 REPL with this data\n  -dlm string\n        Input delimiter character between fields -dlm=tab for tab, -dlm=0x## to specify a character code in hex (default \",\")\n  -header\n        Treat input files as having the first row as a header row\n  -output-dlm string\n        Output delimiter character between fields -output-dlm=tab for tab, -dlm=0x## to specify a character code in hex (default \",\")\n  -output-file file\n        Filename to write output to, if empty no output is written (default \"stdout\")\n  -output-header\n        Display column names in output\n  -quiet\n        Suppress logging\n  -pretty\n        Pretty print output\n  -save-to file\n        SQLite3 db is left on disk at this file\n  -sql string\n        SQL Statement(s) to run on the data\n  -version\n        Print version and exit\n```\n\n## I want stdev, average, other functions\n\nJust follow the install directions at [go-sqlite3-extension-functions](https://github.com/dinedal/go-sqlite3-extension-functions) and textql will automatically load this library.\n\nFull function list:\n\n- Math: acos, asin, atan, atn2, atan2, acosh, asinh, atanh, difference, degrees, radians, cos, sin, tan, cot, cosh, sinh, tanh, coth, exp, log, log10, power, sign, sqrt, square, ceil, floor, pi.\n- String: replicate, charindex, leftstr, rightstr, ltrim, rtrim, trim, replace, reverse, proper, padl, padr, padc, strfilter.\n- Aggregate: stdev, variance, mode, median, lower_quartile, upper_quartile\n\n## License\n\nNew MIT License - Copyright (c) 2015, 2016 Paul Bergeron [http://pauldbergeron.com/](http://pauldbergeron.com/)\n\nSee LICENSE for details\n"
        },
        {
          "name": "TODO.txt",
          "type": "blob",
          "size": 28.3251953125,
          "content": "Install is really complex with vitess dep. Find a way to fix it?\n\n~ go get -u github.com/dinedal/textql/...\n# github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test\ngo/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test/input_int.go:7: MyType redeclared in this block\n    previous declaration at go/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test/input_custom.go:7\ngo/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test/input_map.go:7: MyType redeclared in this block\n    previous declaration at go/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test/input_int.go:7\ngo/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test/input_mixed.go:11: MyType redeclared in this block\n    previous declaration at go/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test/input_map.go:7\ngo/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test/input_private.go:7: MyType redeclared in this block\n    previous declaration at go/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test/input_mixed.go:11\ngo/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test/input_ptr.go:7: MyType redeclared in this block\n    previous declaration at go/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test/input_private.go:7\ngo/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test/input_simple.go:9: MyType redeclared in this block\n    previous declaration at go/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test/input_ptr.go:7\ngo/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test/input_slice.go:7: MyType redeclared in this block\n    previous declaration at go/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test/input_simple.go:9\ngo/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test/input_tag.go:7: MyType redeclared in this block\n    previous declaration at go/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test/input_slice.go:7\ngo/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test/output_int.go:29: (*MyType).UnmarshalBson redeclared in this block\n    previous declaration at go/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test/output_custom.go:42\ngo/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test/output_map.go:18: (*MyType).MarshalBson redeclared in this block\n    previous declaration at go/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test/output_custom.go:19\ngo/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/data/test/bson_test/output_map.go:18: too many errors\n# pkg-config --cflags gomysql\nPackage gomysql was not found in the pkg-config search path.\nPerhaps you should add the directory containing `gomysql.pc'\nto the PKG_CONFIG_PATH environment variable\nNo package 'gomysql' found\npkg-config: exit status 1\n# launchpad.net/gozk/zookeeper\ngo/src/launchpad.net/gozk/zookeeper/zk.go:15:10: fatal error: 'zookeeper.h' file not found\n#include <zookeeper.h>\n         ^\n1 error generated.\n# github.com/youtube/vitess/go/stats/influxdbbackend\ngo/src/github.com/youtube/vitess/go/stats/influxdbbackend/influxdb_backend.go:40: undefined: client.ClientConfig\ngo/src/github.com/youtube/vitess/go/stats/influxdbbackend/influxdb_backend.go:60: undefined: client.Series\ngo/src/github.com/youtube/vitess/go/stats/influxdbbackend/influxdb_backend.go:62: undefined: client.Series\ngo/src/github.com/youtube/vitess/go/stats/influxdbbackend/influxdb_backend.go:73: backend.client.WriteSeries undefined (type *client.Client has no field or method WriteSeries)\n# github.com/youtube/vitess/go/terminal\ngo/src/github.com/youtube/vitess/go/terminal/tty.go:16: undefined: syscall.TCGETS\n# pkg-config --cflags gomysql\nPackage gomysql was not found in the pkg-config search path.\nPerhaps you should add the directory containing `gomysql.pc'\nto the PKG_CONFIG_PATH environment variable\nNo package 'gomysql' found\npkg-config: exit status 1\n# github.com/dinedal/textql/vendor/github.com/youtube/vitess/go/stats/influxdbbackend\ngo/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/go/stats/influxdbbackend/influxdb_backend.go:40: undefined: client.ClientConfig\ngo/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/go/stats/influxdbbackend/influxdb_backend.go:60: undefined: client.Series\ngo/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/go/stats/influxdbbackend/influxdb_backend.go:62: undefined: client.Series\ngo/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/go/stats/influxdbbackend/influxdb_backend.go:73: backend.client.WriteSeries undefined (type *client.Client has no field or method WriteSeries)\n# github.com/dinedal/textql/vendor/github.com/youtube/vitess/go/terminal\ngo/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/go/terminal/tty.go:16: undefined: syscall.TCGETS\n# github.com/dinedal/textql/vendor/github.com/youtube/vitess/third_party/go/launchpad.net/gozk/zookeeper\ngo/src/github.com/dinedal/textql/vendor/github.com/youtube/vitess/third_party/go/launchpad.net/gozk/zookeeper/zk.go:15:10: fatal error: 'zookeeper.h' file not found\n#include <zookeeper.h>\n         ^\n1 error generated.\n\n\n\nFix all the below:\n\n\nGofmt formats Go programs. We run gofmt -s on your code, where -s is for the \"simplify\" command\n\n/github.com/dinedal/textql/outputs/csv.go\n/github.com/dinedal/textql/storage/sqlite_test.go\n\nGocyclo calculates cyclomatic complexities of functions in Go source code. The cyclomatic complexity of a function is calculated according to the following rules: 1 is the base complexity of a function +1 for each 'if', 'for', 'case', '&&' or '||'\n\n/github.com/dinedal/textql/cmd/textql.go\nLine 106: 24 main main repos/src/github.com/dinedal/textql/cmd/textql.go:106:1\n/github.com/dinedal/textql/sqlparser/parsed_query.go\nLine 53: 18 sqlparser EncodeValue repos/src/github.com/dinedal/textql/sqlparser/parsed_query.go:53:1\n/github.com/dinedal/textql/sqlparser/sql.go\n/github.com/dinedal/textql/sqlparser/token.go\nLine 141: 31 sqlparser (*Tokenizer).Scan repos/src/github.com/dinedal/textql/sqlparser/token.go:141:1\nLine 297: 16 sqlparser (*Tokenizer).scanNumber repos/src/github.com/dinedal/textql/sqlparser/token.go:297:1\n/github.com/dinedal/textql/sqlparser/tracked_buffer.go\nLine 40: 18 sqlparser (*TrackedBuffer).Myprintf repos/src/github.com/dinedal/textql/sqlparser/tracked_buffer.go:40:1\ngofmt\n89%\ngolint\n10%\nGolint is a linter for Go source code.\n\n/github.com/dinedal/textql/cmd/textql.go\nLine 18: exported type CommandLineOptions should have comment or be unexported\nLine 32: exported var VERSION should have comment or be unexported\nLine 34: exported function NewCommandLineOptions should have comment or be unexported\nLine 52: exported method CommandLineOptions.GetCommands should have comment or be unexported\nLine 52: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 56: exported method CommandLineOptions.GetSourceFiles should have comment or be unexported\nLine 56: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 60: exported method CommandLineOptions.GetDelimiter should have comment or be unexported\nLine 60: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 64: exported method CommandLineOptions.GetHeader should have comment or be unexported\nLine 64: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 68: exported method CommandLineOptions.GetOutputHeader should have comment or be unexported\nLine 68: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 72: exported method CommandLineOptions.GetOutputDelimiter should have comment or be unexported\nLine 72: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 76: exported method CommandLineOptions.GetOutputFile should have comment or be unexported\nLine 76: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 80: exported method CommandLineOptions.GetSaveTo should have comment or be unexported\nLine 80: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 84: exported method CommandLineOptions.GetConsole should have comment or be unexported\nLine 84: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 88: exported method CommandLineOptions.GetVersion should have comment or be unexported\nLine 88: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 92: exported method CommandLineOptions.GetQuiet should have comment or be unexported\nLine 92: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 96: exported method CommandLineOptions.Usage should have comment or be unexported\nLine 96: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 133: can probably use \"var inputSources []string\" instead\n/github.com/dinedal/textql/inputs/csv.go\nLine 21: exported type CSVInputOptions should have comment or be unexported\nLine 27: exported function NewCSVInput should have comment or be unexported\nLine 27: exported func NewCSVInput returns unexported type *inputs.csvInput, which can be annoying to use\nLine 49: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 53: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 57: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 84: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 106: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\n/github.com/dinedal/textql/inputs/input.go\nLine 3: exported type Input should have comment or be unexported\n/github.com/dinedal/textql/outputs/csv.go\nLine 18: exported type CSVOutputOptions should have comment or be unexported\nLine 24: exported function NewCSVOutput should have comment or be unexported\nLine 24: exported func NewCSVOutput returns unexported type *outputs.csvOutput, which can be annoying to use\nLine 35: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 53: should omit 2nd value from range; this loop is equivalent to `for i := range ...`\n/github.com/dinedal/textql/outputs/output.go\nLine 5: exported type Output should have comment or be unexported\n/github.com/dinedal/textql/sqlparser/analyzer.go\nLine 50: comment on exported function HasINClause should be of the form \"HasINClause ...\"\n/github.com/dinedal/textql/sqlparser/ast.go\nLine 56: exported method Union.IStatement should have comment or be unexported\nLine 57: exported method Select.IStatement should have comment or be unexported\nLine 58: exported method Insert.IStatement should have comment or be unexported\nLine 59: exported method Update.IStatement should have comment or be unexported\nLine 60: exported method Delete.IStatement should have comment or be unexported\nLine 61: exported method Set.IStatement should have comment or be unexported\nLine 62: exported method DDL.IStatement should have comment or be unexported\nLine 63: exported method Other.IStatement should have comment or be unexported\nLine 73: exported method Select.ISelectStatement should have comment or be unexported\nLine 74: exported method Union.ISelectStatement should have comment or be unexported\nLine 92: don't use ALL_CAPS in Go names; use CamelCase\nLine 97: don't use ALL_CAPS in Go names; use CamelCase\nLine 98: don't use ALL_CAPS in Go names; use CamelCase\nLine 101: exported method Select.Format should have comment or be unexported\nLine 117: don't use ALL_CAPS in Go names; use CamelCase\nLine 118: don't use ALL_CAPS in Go names; use CamelCase\nLine 119: don't use ALL_CAPS in Go names; use CamelCase\nLine 120: don't use ALL_CAPS in Go names; use CamelCase\nLine 121: don't use ALL_CAPS in Go names; use CamelCase\nLine 124: exported method Union.Format should have comment or be unexported\nLine 137: exported method Insert.Format should have comment or be unexported\nLine 149: exported method Select.IInsertRows should have comment or be unexported\nLine 150: exported method Union.IInsertRows should have comment or be unexported\nLine 151: exported method Values.IInsertRows should have comment or be unexported\nLine 163: exported method Update.Format should have comment or be unexported\nLine 178: exported method Delete.Format should have comment or be unexported\nLine 190: exported method Set.Format should have comment or be unexported\nLine 204: don't use ALL_CAPS in Go names; use CamelCase\nLine 204: exported const AST_CREATE should have comment (or a comment on this block) or be unexported\nLine 205: don't use ALL_CAPS in Go names; use CamelCase\nLine 206: don't use ALL_CAPS in Go names; use CamelCase\nLine 207: don't use ALL_CAPS in Go names; use CamelCase\nLine 210: exported method DDL.Format should have comment or be unexported\nLine 226: exported method Other.Format should have comment or be unexported\nLine 233: exported method Comments.Format should have comment or be unexported\nLine 242: exported method SelectExprs.Format should have comment or be unexported\nLine 256: exported method StarExpr.ISelectExpr should have comment or be unexported\nLine 257: exported method NonStarExpr.ISelectExpr should have comment or be unexported\nLine 264: exported method StarExpr.Format should have comment or be unexported\nLine 277: exported method NonStarExpr.Format should have comment or be unexported\nLine 290: exported method Columns.Format should have comment or be unexported\nLine 300: exported method TableExprs.Format should have comment or be unexported\nLine 314: exported method AliasedTableExpr.ITableExpr should have comment or be unexported\nLine 315: exported method ParenTableExpr.ITableExpr should have comment or be unexported\nLine 316: exported method JoinTableExpr.ITableExpr should have comment or be unexported\nLine 326: exported method AliasedTableExpr.Format should have comment or be unexported\nLine 343: exported method TableName.ISimpleTableExpr should have comment or be unexported\nLine 344: exported method Subquery.ISimpleTableExpr should have comment or be unexported\nLine 351: exported method TableName.Format should have comment or be unexported\nLine 364: exported method ParenTableExpr.Format should have comment or be unexported\nLine 378: don't use ALL_CAPS in Go names; use CamelCase\nLine 379: don't use ALL_CAPS in Go names; use CamelCase\nLine 380: don't use ALL_CAPS in Go names; use CamelCase\nLine 381: don't use ALL_CAPS in Go names; use CamelCase\nLine 382: don't use ALL_CAPS in Go names; use CamelCase\nLine 383: don't use ALL_CAPS in Go names; use CamelCase\nLine 386: exported method JoinTableExpr.Format should have comment or be unexported\nLine 400: don't use ALL_CAPS in Go names; use CamelCase\nLine 400: exported const AST_USE should have comment (or a comment on this block) or be unexported\nLine 401: don't use ALL_CAPS in Go names; use CamelCase\nLine 402: don't use ALL_CAPS in Go names; use CamelCase\nLine 405: exported method IndexHints.Format should have comment or be unexported\nLine 423: don't use ALL_CAPS in Go names; use CamelCase\nLine 424: don't use ALL_CAPS in Go names; use CamelCase\nLine 436: exported method Where.Format should have comment or be unexported\nLine 451: don't use ALL_CAPS in Go names; use CamelCase\nLine 463: exported method From.Format should have comment or be unexported\nLine 476: exported method AndExpr.IExpr should have comment or be unexported\nLine 477: exported method OrExpr.IExpr should have comment or be unexported\nLine 478: exported method NotExpr.IExpr should have comment or be unexported\nLine 479: exported method ParenBoolExpr.IExpr should have comment or be unexported\nLine 480: exported method ComparisonExpr.IExpr should have comment or be unexported\nLine 481: exported method RangeCond.IExpr should have comment or be unexported\nLine 482: exported method NullCheck.IExpr should have comment or be unexported\nLine 483: exported method ExistsExpr.IExpr should have comment or be unexported\nLine 484: exported method KeyrangeExpr.IExpr should have comment or be unexported\nLine 485: exported method StrVal.IExpr should have comment or be unexported\nLine 486: exported method NumVal.IExpr should have comment or be unexported\nLine 487: exported method ValArg.IExpr should have comment or be unexported\nLine 488: exported method NullVal.IExpr should have comment or be unexported\nLine 489: exported method ColName.IExpr should have comment or be unexported\nLine 490: exported method ValTuple.IExpr should have comment or be unexported\nLine 491: exported method Subquery.IExpr should have comment or be unexported\nLine 492: exported method ListArg.IExpr should have comment or be unexported\nLine 493: exported method BinaryExpr.IExpr should have comment or be unexported\nLine 494: exported method UnaryExpr.IExpr should have comment or be unexported\nLine 495: exported method FuncExpr.IExpr should have comment or be unexported\nLine 496: exported method CaseExpr.IExpr should have comment or be unexported\nLine 504: exported method AndExpr.IBoolExpr should have comment or be unexported\nLine 505: exported method OrExpr.IBoolExpr should have comment or be unexported\nLine 506: exported method NotExpr.IBoolExpr should have comment or be unexported\nLine 507: exported method ParenBoolExpr.IBoolExpr should have comment or be unexported\nLine 508: exported method ComparisonExpr.IBoolExpr should have comment or be unexported\nLine 509: exported method RangeCond.IBoolExpr should have comment or be unexported\nLine 510: exported method NullCheck.IBoolExpr should have comment or be unexported\nLine 511: exported method ExistsExpr.IBoolExpr should have comment or be unexported\nLine 512: exported method KeyrangeExpr.IBoolExpr should have comment or be unexported\nLine 519: exported method AndExpr.Format should have comment or be unexported\nLine 528: exported method OrExpr.Format should have comment or be unexported\nLine 537: exported method NotExpr.Format should have comment or be unexported\nLine 546: exported method ParenBoolExpr.Format should have comment or be unexported\nLine 558: don't use ALL_CAPS in Go names; use CamelCase\nLine 559: don't use ALL_CAPS in Go names; use CamelCase\nLine 560: don't use ALL_CAPS in Go names; use CamelCase\nLine 561: don't use ALL_CAPS in Go names; use CamelCase\nLine 562: don't use ALL_CAPS in Go names; use CamelCase\nLine 563: don't use ALL_CAPS in Go names; use CamelCase\nLine 564: don't use ALL_CAPS in Go names; use CamelCase\nLine 565: don't use ALL_CAPS in Go names; use CamelCase\nLine 566: don't use ALL_CAPS in Go names; use CamelCase\nLine 567: don't use ALL_CAPS in Go names; use CamelCase\nLine 568: don't use ALL_CAPS in Go names; use CamelCase\nLine 571: exported method ComparisonExpr.Format should have comment or be unexported\nLine 584: don't use ALL_CAPS in Go names; use CamelCase\nLine 585: don't use ALL_CAPS in Go names; use CamelCase\nLine 588: exported method RangeCond.Format should have comment or be unexported\nLine 600: don't use ALL_CAPS in Go names; use CamelCase\nLine 601: don't use ALL_CAPS in Go names; use CamelCase\nLine 604: exported method NullCheck.Format should have comment or be unexported\nLine 613: exported method ExistsExpr.Format should have comment or be unexported\nLine 622: exported method KeyrangeExpr.Format should have comment or be unexported\nLine 632: exported method StrVal.IValExpr should have comment or be unexported\nLine 633: exported method NumVal.IValExpr should have comment or be unexported\nLine 634: exported method ValArg.IValExpr should have comment or be unexported\nLine 635: exported method NullVal.IValExpr should have comment or be unexported\nLine 636: exported method ColName.IValExpr should have comment or be unexported\nLine 637: exported method ValTuple.IValExpr should have comment or be unexported\nLine 638: exported method Subquery.IValExpr should have comment or be unexported\nLine 639: exported method ListArg.IValExpr should have comment or be unexported\nLine 640: exported method BinaryExpr.IValExpr should have comment or be unexported\nLine 641: exported method UnaryExpr.IValExpr should have comment or be unexported\nLine 642: exported method FuncExpr.IValExpr should have comment or be unexported\nLine 643: exported method CaseExpr.IValExpr should have comment or be unexported\nLine 648: exported method StrVal.Format should have comment or be unexported\nLine 656: exported method NumVal.Format should have comment or be unexported\nLine 663: exported method ValArg.Format should have comment or be unexported\nLine 670: exported method NullVal.Format should have comment or be unexported\nLine 679: exported method ColName.Format should have comment or be unexported\nLine 702: exported method ValTuple.IColTuple should have comment or be unexported\nLine 703: exported method Subquery.IColTuple should have comment or be unexported\nLine 704: exported method ListArg.IColTuple should have comment or be unexported\nLine 709: exported method ValTuple.Format should have comment or be unexported\nLine 717: exported method ValExprs.Format should have comment or be unexported\nLine 730: exported method Subquery.Format should have comment or be unexported\nLine 737: exported method ListArg.Format should have comment or be unexported\nLine 749: don't use ALL_CAPS in Go names; use CamelCase\nLine 750: don't use ALL_CAPS in Go names; use CamelCase\nLine 751: don't use ALL_CAPS in Go names; use CamelCase\nLine 752: don't use ALL_CAPS in Go names; use CamelCase\nLine 753: don't use ALL_CAPS in Go names; use CamelCase\nLine 754: don't use ALL_CAPS in Go names; use CamelCase\nLine 755: don't use ALL_CAPS in Go names; use CamelCase\nLine 756: don't use ALL_CAPS in Go names; use CamelCase\nLine 759: exported method BinaryExpr.Format should have comment or be unexported\nLine 771: don't use ALL_CAPS in Go names; use CamelCase\nLine 772: don't use ALL_CAPS in Go names; use CamelCase\nLine 773: don't use ALL_CAPS in Go names; use CamelCase\nLine 776: exported method UnaryExpr.Format should have comment or be unexported\nLine 787: exported method FuncExpr.Format should have comment or be unexported\nLine 815: exported method FuncExpr.IsAggregate should have comment or be unexported\nLine 826: exported method CaseExpr.Format should have comment or be unexported\nLine 846: exported method When.Format should have comment or be unexported\nLine 853: exported method GroupBy.Format should have comment or be unexported\nLine 864: exported method OrderBy.Format should have comment or be unexported\nLine 880: don't use ALL_CAPS in Go names; use CamelCase\nLine 881: don't use ALL_CAPS in Go names; use CamelCase\nLine 884: exported method Order.Format should have comment or be unexported\nLine 893: exported method Limit.Format should have comment or be unexported\nLine 950: exported method Values.Format should have comment or be unexported\nLine 964: exported method ValTuple.IRowTuple should have comment or be unexported\nLine 965: exported method Subquery.IRowTuple should have comment or be unexported\nLine 970: exported method UpdateExprs.Format should have comment or be unexported\nLine 984: exported method UpdateExpr.Format should have comment or be unexported\nLine 991: exported method OnDup.Format should have comment or be unexported\n/github.com/dinedal/textql/sqlparser/parsed_query.go\nLine 20: exported type ParsedQuery should have comment or be unexported\nLine 25: exported type EncoderFunc should have comment or be unexported\nLine 27: exported method ParsedQuery.GenerateQuery should have comment or be unexported\nLine 49: exported method ParsedQuery.MarshalJSON should have comment or be unexported\nLine 53: exported function EncodeValue should have comment or be unexported\nLine 102: exported type TupleEqualityList should have comment or be unexported\nLine 107: exported method TupleEqualityList.Encode should have comment or be unexported\nLine 156: exported function FetchBindVar should have comment or be unexported\n/github.com/dinedal/textql/sqlparser/sql.go\n/github.com/dinedal/textql/sqlparser/token.go\nLine 15: exported const EOFCHAR should have comment or be unexported\nLine 172: if block ends with a return statement, so drop this else and outdent its block\nLine 190: if block ends with a return statement, so drop this else and outdent its block\nLine 214: if block ends with a return statement, so drop this else and outdent its block\nLine 221: if block ends with a return statement, so drop this else and outdent its block\nLine 249: var keywordId should be keywordID\nLine 417: exported method Tokenizer.ConsumeNext should have comment or be unexported\n/github.com/dinedal/textql/sqlparser/tracked_buffer.go\nLine 25: exported function NewTrackedBuffer should have comment or be unexported\nLine 101: exported method TrackedBuffer.ParsedQuery should have comment or be unexported\nLine 105: exported method TrackedBuffer.HasBindVars should have comment or be unexported\n/github.com/dinedal/textql/storage/sqlite.go\nLine 20: struct field connId should be connID\nLine 24: exported type SQLite3Options should have comment or be unexported\nLine 27: should omit type []*sqlite3.SQLiteConn from declaration of var sqlite3conn; it will be inferred from the right-hand side\nLine 28: should omit type *regexp.Regexp from declaration of var allWhiteSpace; it will be inferred from the right-hand side\nLine 29: should omit type *regexp.Regexp from declaration of var tableNameCheckRegEx; it will be inferred from the right-hand side\nLine 42: exported function NewSQLite3Storage should have comment or be unexported\nLine 42: exported func NewSQLite3Storage returns unexported type *storage.sqlite3Storage, which can be annoying to use\nLine 52: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 69: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 97: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 135: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 160: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 165: can probably use \"var vals []interface{}\" instead\nLine 184: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 199: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\nLine 207: var backupConnId should be backupConnID\nLine 234: receiver name should be a reflection of its identity; don't use generic names such as \"me\", \"this\", or \"self\"\n/github.com/dinedal/textql/storage/sqlite_test.go\nLine 188: should omit 2nd value from range; this loop is equivalent to `for i := range ...`\n/github.com/dinedal/textql/storage/storage.go\nLine 9: exported type Storage should have comment or be unexported\n/github.com/dinedal/textql/test_util/test_util.go\nLine 1: don't use an underscore in package name\nLine 8: exported function OpenFileFromString should have comment or be unexported\n/github.com/dinedal/textql/util/file_helpers.go\nLine 12: exported function IsPathDir should have comment or be unexported\nLine 30: exported function OpenFileOrStdDev should have comment or be unexported\nLine 65: exported function CleanPath should have comment or be unexported\nLine 94: exported function RewindFile should have comment or be unexported\nLine 102: exported function IsThereDataOnStdin should have comment or be unexported\nLine 111: if block ends with a return statement, so drop this else and outdent its block\nLine 116: exported function AllFilesInDirectory should have comment or be unexported\nLine 119: can probably use \"var result []string\" instead\n/github.com/dinedal/textql/util/seperator_helpers.go\nLine 10: exported function DetermineSeparator should have comment or be unexported\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.005859375,
          "content": "2.0.3\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.21875,
          "content": "module github.com/dinedal/textql\n\ngo 1.13\n\nrequire (\n\tgithub.com/mattn/go-runewidth v0.0.2 // indirect\n\tgithub.com/mattn/go-sqlite3 v2.0.3+incompatible\n\tgithub.com/olekukonko/tablewriter v0.0.0-20180506121414-d4647c9c7a84\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 8.15625,
          "content": "github.com/BurntSushi/toml v0.3.1 h1:WXkYYl6Yr3qBf1K79EBnL4mak0OimBfB0XUf9Vl28OQ=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/edsrzf/mmap-go v0.0.0-20170320065105-0bce6a688712 h1:aaQcKT9WumO6JEJcRyTqFVq4XUZiUcKR2/GI31TOcz8=\ngithub.com/edsrzf/mmap-go v0.0.0-20170320065105-0bce6a688712/go.mod h1:YO35OhQPt3KJa3ryjFM5Bs14WD66h8eGKpfaBNrHW5M=\ngithub.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/mattn/go-runewidth v0.0.2 h1:UnlwIPBGaTZfPQ6T1IGzPI0EkYAQmT9fAEJ/poFC63o=\ngithub.com/mattn/go-runewidth v0.0.2/go.mod h1:LwmH8dsx7+W8Uxz3IHJYH5QSwggIsqBzpuz5H//U1FU=\ngithub.com/mattn/go-sqlite3 v1.9.0 h1:pDRiWfl+++eC2FEFRy6jXmQlvp4Yh3z1MJKg4UeYM/4=\ngithub.com/mattn/go-sqlite3 v1.9.0/go.mod h1:FPy6KqzDD04eiIsT53CuJW3U88zkxoIYsOqkbpncsNc=\ngithub.com/mattn/go-sqlite3 v2.0.3+incompatible h1:gXHsfypPkaMZrKbD5209QV9jbUTJKjyR5WD3HYQSd+U=\ngithub.com/mattn/go-sqlite3 v2.0.3+incompatible/go.mod h1:FPy6KqzDD04eiIsT53CuJW3U88zkxoIYsOqkbpncsNc=\ngithub.com/olekukonko/tablewriter v0.0.0-20180506121414-d4647c9c7a84 h1:fiKJgB4JDUd43CApkmCeTSQlWjtTtABrU2qsgbuP0BI=\ngithub.com/olekukonko/tablewriter v0.0.0-20180506121414-d4647c9c7a84/go.mod h1:vsDQFd/mU46D+Z4whnwzcISnGGzXWMclvtLoiIKAKIo=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/remyoudompheng/bigfft v0.0.0-20170806203942-52369c62f446 h1:/NRJ5vAYoqz+7sG51ubIDHXeWO8DlTSrToPu6q11ziA=\ngithub.com/remyoudompheng/bigfft v0.0.0-20170806203942-52369c62f446/go.mod h1:uYEyJGbgTkfkS4+E/PavXkNJcbFIpEtjt2B0KDQ5+9M=\ngithub.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\ngithub.com/sergi/go-diff v1.0.0 h1:Kpca3qRNrduNnOQeazBd0ysaKrUJiIuISHxogkT9RPQ=\ngithub.com/sergi/go-diff v1.0.0/go.mod h1:0CfEIISq7TuYL3j771MWULgwwjU+GofnZX9QAmXWZgo=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngitlab.com/cznic/ebnf2y v1.0.0/go.mod h1:jx14dqOldV2pRvSi8HASTB/k5fkIv2TwjYAp5py0MTs=\ngitlab.com/cznic/golex v1.0.0/go.mod h1:vkWdDgqbbThjRHoOLU7yNPgMxaubAkwnvF/4zeG8cvU=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/exp v0.0.0-20190411193353-0480eff6dd7c/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=\ngolang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\ngolang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=\ngolang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee h1:WG0RUwxtNT4qqaXX3DPA8zHFNm/D9xaBpxzHt1WcA/E=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58 h1:8gQV6CLnAEikrhgkHFbMAEhagSSnXWGV915qUMm9mrU=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20200130224948-02f1738cbe39 h1:5ERHXLQfA0b8cHOwaOfWaaGekrA4+Ka/N74zilLnsIk=\ngolang.org/x/tools v0.0.0-20200130224948-02f1738cbe39/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200131211209-ecb101ed6550 h1:3Kc3/T5DQ/majKzDmb+0NzmbXFhKLaeDTp3KqVPV5Eo=\ngolang.org/x/tools/gopls v0.3.0 h1:l9KKK1/n6CIbfgaUvHBWAvCfOxcl1N+KSOK79OlPIao=\ngolang.org/x/tools/gopls v0.3.0/go.mod h1:vvBkm7WBjHNudDeK7Sg7HeR+sKt6yp5TD/4NQaTZzRs=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898 h1:/atklqdjdhuosWIl6AIbOeHJjicWYPqR9bpxqxYG2pA=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\nhonnef.co/go/tools v0.0.1-2019.2.3 h1:3JgtbtFHMiCmsznwGVTUWbgGov+pVqnlf1dEJTNAXeM=\nhonnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=\nmodernc.org/b v1.0.0 h1:vpvqeyp17ddcQWF29Czawql4lDdABCDRbXRAS4+aF2o=\nmodernc.org/b v1.0.0/go.mod h1:uZWcZfRj1BpYzfN9JTerzlNUnnPsV9O2ZA8JsRcubNg=\nmodernc.org/db v1.0.0 h1:2c6NdCfaLnshSvY7OU09cyAY0gYXUZj4lmg5ItHyucg=\nmodernc.org/db v1.0.0/go.mod h1:kYD/cO29L/29RM0hXYl4i3+Q5VojL31kTUVpVJDw0s8=\nmodernc.org/ebnfutil v1.0.0/go.mod h1:+2n/OnQXoild9pzrPa/2wmVtR+ufWjB/0fYkc0BV9sc=\nmodernc.org/file v1.0.0 h1:9/PdvjVxd5+LcWUQIfapAWRGOkDLK90rloa8s/au06A=\nmodernc.org/file v1.0.0/go.mod h1:uqEokAEn1u6e+J45e54dsEA/pw4o7zLrA2GwyntZzjw=\nmodernc.org/fileutil v1.0.0 h1:Z1AFLZwl6BO8A5NldQg/xTSjGLetp+1Ubvl4alfGx8w=\nmodernc.org/fileutil v1.0.0/go.mod h1:JHsWpkrk/CnVV1H/eGlFf85BEpfkrp56ro8nojIq9Q8=\nmodernc.org/golex v1.0.0 h1:wWpDlbK8ejRfSyi0frMyhilD3JBvtcx2AdGDnU+JtsE=\nmodernc.org/golex v1.0.0/go.mod h1:b/QX9oBD/LhixY6NDh+IdGv17hgB+51fET1i2kPSmvk=\nmodernc.org/internal v1.0.0 h1:XMDsFDcBDsibbBnHB2xzljZ+B1yrOVLEFkKL2u15Glw=\nmodernc.org/internal v1.0.0/go.mod h1:VUD/+JAkhCpvkUitlEOnhpVxCgsBI90oTzSCRcqQVSM=\nmodernc.org/lex v1.0.0/go.mod h1:G6rxMTy3cH2iA0iXL/HRRv4Znu8MK4higxph/lE7ypk=\nmodernc.org/lexer v1.0.0/go.mod h1:F/Dld0YKYdZCLQ7bD0USbWL4YKCyTDRDHiDTOs0q0vk=\nmodernc.org/lldb v1.0.0 h1:6vjDJxQEfhlOLwl4bhpwIz00uyFK4EmSYcbwqwbynsc=\nmodernc.org/lldb v1.0.0/go.mod h1:jcRvJGWfCGodDZz8BPwiKMJxGJngQ/5DrRapkQnLob8=\nmodernc.org/mathutil v1.0.0 h1:93vKjrJopTPrtTNpZ8XIovER7iCIH1QU7wNbOQXC60I=\nmodernc.org/mathutil v1.0.0/go.mod h1:wU0vUrJsVWBZ4P6e7xtFJEhFSNsfRLJ8H458uRjg03k=\nmodernc.org/ql v1.0.1 h1:pwGOhUbl75KRiGEUUotORpnBlI0whDEb/koIqZOGI7k=\nmodernc.org/ql v1.0.1/go.mod h1:Fj1ylcVyzcu/fgWZTrvBO9j/aEUg/ixLFnGtmzh7quI=\nmodernc.org/sortutil v1.0.0 h1:SUTM1sCR0Ldpv7dbB/KCPC2zHHsZ1KrSkhmGmmV22CQ=\nmodernc.org/sortutil v1.0.0/go.mod h1:1QO0q8IlIlmjBIwm6t/7sof874+xCfZouyqZMLIAtxM=\nmodernc.org/strutil v1.0.0 h1:XVFtQwFVwc02Wk+0L/Z/zDDXO81r5Lhe6iMKmGX3KhE=\nmodernc.org/strutil v1.0.0/go.mod h1:lstksw84oURvj9y3tn8lGvRxyRC1S2+g5uuIzNfIOBs=\nmodernc.org/zappy v1.0.0 h1:dPVaP+3ueIUv4guk8PuZ2wiUGcJ1WUVvIheeSSTD0yk=\nmodernc.org/zappy v1.0.0/go.mod h1:hHe+oGahLVII/aTTyWK/b53VDHMAGCBYYeZ9sn83HC4=\nmvdan.cc/xurls/v2 v2.1.0 h1:KaMb5GLhlcSX+e+qhbRJODnUUBvlw01jt4yrjFIHAuA=\nmvdan.cc/xurls/v2 v2.1.0/go.mod h1:5GrSd9rOnKOpZaji1OZLYL/yeAAtGDlo/cFe+8K5n8E=\n"
        },
        {
          "name": "inputs",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "outputs",
          "type": "tree",
          "content": null
        },
        {
          "name": "snapcraft.yaml",
          "type": "blob",
          "size": 0.431640625,
          "content": "name: textql\nversion: '1.0'\nsummary: Execute SQL against structured text like CSV or TSV \ndescription: |\n  Execute SQL against structured text like CSV or TSV.\ngrade: stable\nconfinement: strict\nbase: core18\nparts:\n  textql:\n    plugin: go\n    source: https://github.com/dinedal/textql.git\n    go-importpath: github.com/dinedal/textql\n    build-packages:\n      - build-essential\napps:\n  textql:\n    command: bin/textql\n    plugs:\n      - home\n"
        },
        {
          "name": "sqlparser",
          "type": "tree",
          "content": null
        },
        {
          "name": "storage",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_util",
          "type": "tree",
          "content": null
        },
        {
          "name": "textql",
          "type": "tree",
          "content": null
        },
        {
          "name": "textql_usage.gif",
          "type": "blob",
          "size": 793.533203125,
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}