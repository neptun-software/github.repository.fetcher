{
  "metadata": {
    "timestamp": 1736567803892,
    "page": 389,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "keploy/keploy",
      "stars": 5241,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cz.toml",
          "type": "blob",
          "size": 0.0986328125,
          "content": "[tool]\n[tool.commitizen]\nname = \"cz_conventional_commits\"\nversion = \"0.2.4\"\ntag_format = \"v$version\"\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.814453125,
          "content": "# Binaries for programs and plugins\n*.exe\n*.exe~\n*.dll\n*.so\n*.dylib\n\n# Test binary, built with `go test -c`\n*.test\n\n# Ignore the server binary output by `go build` but not any folders with the name server\n/server\n!/server/\n\n# Ignore the config and log files\nkeploy-config.yaml\nkeploy.yml\nkeploy-logs.txt\n\n\n# Output of the go coverage tool, specifically when used with LiteIDE\n*.out\n.deploy.sh\n\n### Go Patch ###\n/vendor/\n/Godeps/\n\n# Dependency directories (remove the comment below to include it)\n# vendor/\n.idea/\nweb/public/*\n!web/public/README.md\n!web/public/index.html\n\n\n.vscode\n.env\nui\n\ncoverage.tmp.txt\ncoverage.txt\ntest-reports\n.DS_Store\n._.DS_Store\n**/.DS_Store\n**/._.DS_Store\n\n#Ignore the zip files\n*.zip\n\n#Ignore the test reports\ntest-reports\n\n#Ignore the c and header files\n*.c\n*.h\n\n# Ignore the debug_bin\n__debug_bin*\nkeploy"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 1.501953125,
          "content": "# This is the configuration for golangci-lint for the restic project.\n#\n# A sample config with all settings is here:\n# https://github.com/golangci/golangci-lint/blob/master/.golangci.example.yml\n\nlinters:\n  # only enable the linters listed below\n  disable-all: true\n  enable:\n    # make sure all errors returned by functions are handled\n    - errcheck\n\n    # find unused code\n    - deadcode\n\n    # show how code can be simplified\n    - gosimple\n\n    # # make sure code is formatted\n    - gofmt\n\n    # examine code and report suspicious constructs, such as Printf calls whose\n    # arguments do not align with the format string\n    - govet\n\n    # make sure names and comments are used according to the conventions\n    - revive\n\n    # detect when assignments to existing variables are not used\n    - ineffassign\n\n    # run static analysis and find errors\n    - staticcheck\n\n    # find unused variables, functions, structs, types, etc.\n    - unused\n\n    # find unused struct fields\n    - structcheck\n\n    # find unused global variables\n    - varcheck\n\n    # parse and typecheck code\n    - typecheck\n\nissues:\n  # don't use the default exclude rules, this hides (among others) ignored\n  # errors from Close() calls\n  exclude-use-default: false\n\n  # list of things to not warn about\n  exclude:\n    # revive: do not warn about missing comments for exported stuff\n    - exported (function|method|var|type|const) .* should have comment or be unexported\n    # revive: ignore constants in all caps\n    - don't use ALL_CAPS in Go names; use CamelCase"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.130859375,
          "content": "repos:\n- hooks:\n  - id: commitizen\n    stages:\n    - commit-msg\n  repo: https://github.com/commitizen-tools/commitizen\n  rev: v2.21.2\n"
        },
        {
          "name": ".releaserc.json",
          "type": "blob",
          "size": 0.3525390625,
          "content": "{\n  \"branches\": [\"main\"],\n  \"repositoryUrl\": \"git@github.com:keploy/keploy.git\",\n  \"plugins\": [\n    \"@semantic-release/commit-analyzer\",\n    \"@semantic-release/release-notes-generator\",\n    \"@semantic-release/github\",\n    [\"@semantic-release/exec\", {\n      \"prepareCmd\" : \"set-version ${nextRelease.version}\",\n      \"publishCmd\" : \"publish-package\"\n    }]\n  ]\n}"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.2685546875,
          "content": "cff-version: 1.2.0\ntitle: 'Keploy: No code API testing platform. Create unit tests and data mocks from API calls.'\nmessage: 'To cite Keploy in publications use:'\ntype: software\nauthor: Keploy Inc\nrepository-code: 'https://github.com/keploy/keploy'\nlicense: Apache License 2.0"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.8544921875,
          "content": "# Contributor Code of Conduct for Keploy\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Expected Behavior\n\nThe following behaviors are expected and requested of all community members:\n\n * Act authentically and participate actively in the community to help maintain a positive and productive environment.\n * Show consideration and respect in all your actions and speech. Avoid any behavior that is demeaning, discriminatory, or harassing.\n * Seek collaboration as an initial step instead of conflict.\n * Refrain from demeaning, discriminatory, or harassing behavior and speech.\n * Report any unsafe situations, distress or violations of the code of conduct to the maintainers through [Slack](https://join.slack.com/t/keploy/shared_invite/zt-2poflru6f-_VAuvQfCBT8fDWv1WwSbkw).\n* Practice empathy and kindness towards other community members.\n* Respect diverse opinions, perspectives, and experiences.\n* Give and receive constructive feedback in a gracious manner.\n* Take responsibility for your actions and apologize for mistakes. Use them as learning opportunities.\n* Prioritize the well-being and success of the community as a whole over individual gain.\n\nExamples of unacceptable behavior include:\n\n* Violence, threats of violence or any language that incites violence towards any individual or group is prohibited.\n * Discriminatory jokes and language, such as those based on gender, race, sexual orientation, religion, ability, or any other characteristic, is strictly forbidden.\n * Displaying or sharing sexually explicit or violent content is prohibited.\n * Any form of harassment, including but not limited to \"doxing\" (posting or threatening to post other people's personally identifying information) is prohibited.\n * Personal insults, particularly those related to gender, sexual orientation, race, religion, or disability.\n* Publishing any personal information of others without their explicit consent is strictly forbidden.\n* Using sexualized language or imagery, or making any sexual advances towards another person is prohibited.\n* Harassment, whether it be public or private, will not be tolerated.\n\n## Enforcement Responsibilities\n\nOrganizations' maintainers are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nThey have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces related to Keploy, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nsupport@keploy.io.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Contact info\n\n* [Slack](https://join.slack.com/t/keploy/shared_invite/zt-2poflru6f-_VAuvQfCBT8fDWv1WwSbkw)\n* [Mail](hello@keploy.io)\n\n## Support 🙏 \n\nThis project needs a ⭐️ from you. Don't forget to leave a star ⭐️\n\n## Happy Contributions !!\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.6318359375,
          "content": "# Contributing to Keploy\n\nThank you for your interest in Keploy and for taking the time to contribute to this project. 🙌 Keploy is a project by developers for developers and there are a lot of ways you can contribute.\n\nIf you don't know where to start contributing, ask us on our [Slack channel](https://join.slack.com/t/keploy/shared_invite/zt-2poflru6f-_VAuvQfCBT8fDWv1WwSbkw).\n\n## Code of conduct\n\nContributors are expected to adhere to the [Code of Conduct](CODE_OF_CONDUCT.md).\n\n## Prerequisites for the contributors\n\nContributors should have knowledge of git, go, and markdown for most projects since the project work heavily depends on them.\nWe encourage Contributors to set up Keploy for local development and play around with the code and tests to get more comfortable with the project. \n\nSections\n\n- <a name=\"contributing\"> General Contribution Flow</a>\n  - <a name=\"#commit-signing\">Developer Certificate of Origin</a>\n- <a name=\"contributing-keploy\">Keploy Contribution Flow</a>\n  - <a name=\"keploy-server\">Keploy Server</a>\n  - <a name=\"keploy-docs\">Keploy Documentation</a>\n\n# <a name=\"contributing\">General Contribution Flow</a>\n\n## <a name=\"commit-signing\">Signing-off on Commits (Developer Certificate of Origin)</a>\n\nTo contribute to this project, you must agree to the Developer Certificate of\nOrigin (DCO) for each commit you make. The DCO is a simple statement that you,\nas a contributor, have the legal right to make the contribution.\n\nSee the [DCO](https://developercertificate.org) file for the full text of what you must agree to\nand how it works [here](https://github.com/probot/dco#how-it-works).\nTo signify that you agree to the DCO for contributions, you simply add a line to each of your\ngit commit messages:\n\n```\nSigned-off-by: Jane Smith <jane.smith@example.com>\n```\n\nIn most cases, you can add this signoff to your commit automatically with the\n`-s` or `--signoff` flag to `git commit`. You must use your real name and a reachable email\naddress (sorry, no pseudonyms or anonymous contributions). An example of signing off on a commit:\n\n```\n$ commit -s -m “my commit message w/signoff”\n```\n\nTo ensure all your commits are signed, you may choose to add this alias to your global `.gitconfig`:\n\n_~/.gitconfig_\n\n```\n[alias]\n  amend = commit -s --amend\n  cm = commit -s -m\n  commit = commit -s\n```\n\n# How to contribute ?\n\nWe encourage contributions from the community.\n\n**Create a [GitHub issue](https://github.com/keploy/keploy/issues) for any changes beyond typos and small fixes.**\n\nWe review GitHub issues and PRs on a regular schedule.\n\nTo ensure that each change is relevant and properly peer reviewed, please adhere to best practices for open-source contributions.\nThis means that if you are outside the Keploy organization, you must fork the repository and create PRs from branches on your own fork.\nThe README in GitHub's [first-contributions repo](https://github.com/firstcontributions/first-contributions) provides an example.\n\n## ## How to set up the docs website locally?\n\n1. Fork the repository\n\n<br/>\n\n2. Clone the repository with the following command. Replace the <GITHUB_USERNAME> with your username\n\n```sh\ngit clone https://github.com/<GITHUB_USERNAME>/keploy.git\n```\n\n<br/>\n\n3. Go into the directory containing the project and edit the changes.\n\n\nWhen we merge your PR, a new build automatically occurs and your changes publish to [https://keploy.io](https://github.com/keploy/keploy).\n\n## <a name=\"contributing-keploy\">Keploy Contribution Flow</a>\n\nKeploy is written in `Go` (Golang) and leverages Go Modules. Relevant coding style guidelines are the [Go Code Review Comments](https://code.google.com/p/go-wiki/wiki/CodeReviewComments) and the _Formatting and style_ section of Peter Bourgon's [Go: Best\nPractices for Production Environments](https://peter.bourgon.org/go-in-production/#formatting-and-style).\n\nThere are many ways in which you can contribute to Keploy.\n\n###  <a name=\"keploy-server\">Keploy Server</a>\n\n#### Report a Bug\nReport all issues through GitHub Issues using the [Report a Bug](https://github.com/keploy/keploy/issues/new?assignees=&labels=&template=bug_report.md&title=) template.\nTo help resolve your issue as quickly as possible, read the template and provide all the requested information.\n\n#### Feature request\nWe welcome all feature requests, whether it's to add new functionality to an existing extension or to offer an idea for a brand new extension.\nFile your feature request through GitHub Issues using the [Feature Request](https://github.com/keploy/keploy/issues/new?assignees=&labels=&template=feature_request.md&title=) template.\n\n#### Close a Bug\nWe welcome contributions that help make keploy bug free & improve the experience of our users. You can also find issues tagged [Good First Issues](https://github.com/keploy/keploy/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22).\n\n###  <a name=\"keploy-docs\">Keploy Documentation</a>\n\nThe Keploy documentation site uses Docusaurus 2, which is a static website generator, you can make changes locally without previewing them in the browser.\n\nIn the process of shipping features quickly, we may forget to keep our docs up to date. You can help by suggesting improvements to our documentation using the [Documentation Improvement](https://github.com/keploy/docs/issues) template. \n\nPlease refer to [Keploy Docs Contributing Guide](https://github.com/keploy/docs/blob/main/CONTRIBUTING.md#-how-to-set-up-the-docs-website-locally) for setting up your development environment and the follow [Keploy Style Guide](https://github.com/keploy/docs/blob/main/STYLE.md).\n\n\n# Contact\n\nFeel free to join [slack](https://join.slack.com/t/keploy/shared_invite/zt-2poflru6f-_VAuvQfCBT8fDWv1WwSbkw) to start a conversation with us.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.6630859375,
          "content": "# === Build Stage ===\nFROM golang:1.22 AS build\n\n# Set the working directory\nWORKDIR /app\n\n# Define build arguments for ldflags\nARG SENTRY_DSN_DOCKER\nARG VERSION\n\n# Copy the Go module files and download dependencies\nCOPY go.mod go.sum /app/\nRUN go mod download\n\n# Copy the contents of the current directory into the build container\nCOPY . /app\n\n# Build the keploy binary\nRUN go build -tags=viper_bind_struct -ldflags=\"-X main.dsn=$SENTRY_DSN_DOCKER -X main.version=$VERSION -X main.apiServerURI=$SERVER_URL -X main.gitHubClientID=$GITTHUB_APP_CLIENT_ID\" -o keploy .\n\n# === Runtime Stage ===\nFROM debian:bookworm-slim\n\nENV KEPLOY_INDOCKER=true\n\n# Update the package lists and install required packages\nRUN apt-get update\nRUN apt-get install -y ca-certificates curl sudo && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install Docker engine\nRUN curl -fsSL https://get.docker.com -o get-docker.sh && \\\n    sh get-docker.sh && \\\n    rm get-docker.sh\n\n# Install docker-compose to PATH\n# Install specific version of Docker Compose plugin (v2.29.1)\nRUN mkdir -p /usr/lib/docker/cli-plugins && \\\n    curl -SL \"https://github.com/docker/compose/releases/download/v2.29.1/docker-compose-linux-$(uname -m)\" -o /usr/lib/docker/cli-plugins/docker-compose && \\\n    chmod +x /usr/lib/docker/cli-plugins/docker-compose\n\n# Copy the keploy binary and the entrypoint script from the build container\nCOPY --from=build /app/keploy /app/keploy\nCOPY --from=build /app/entrypoint.sh /app/entrypoint.sh\n\n# windows comapatibility\nRUN sed -i 's/\\r$//' /app/entrypoint.sh\n\n# Make the entrypoint.sh file executable\nRUN chmod +x /app/entrypoint.sh\n\n# Set the entrypoint\nENTRYPOINT [\"/app/entrypoint.sh\", \"/app/keploy\"]"
        },
        {
          "name": "HACKTOBERFEST_GUIDE.md",
          "type": "blob",
          "size": 3.5654296875,
          "content": "<p align=\"center\">\n\n<h1 align=\"center\">Celebrate\nOpen Source with Hacktoberfest 2023</h1>\n\n![image](https://github.com/keploy/docs/blob/main/static/img/hacktoberfest-2023.png?raw=true)\n\n <p align=\"center\">𝑶𝒏𝒆 𝒄𝒐𝒏𝒕𝒓𝒊𝒃𝒖𝒕𝒊𝒐𝒏 𝒂𝒕 𝒂 𝒕𝒊𝒎𝒆</p>\n\n</p>\n\n---\n\n\n## Our Journey with Hacktoberfest ❤️\n\n[Hacktoberfest](https://hacktoberfest.com/) is an initiative that matters very deeply to us. We launched the first iteration of Keploy as a mere open-source project in December 2021. Hacktoberfest 2022 was truly a game-changer for us, as we saw over 200 contributions from some lovely members of the open-source community that October.\n\nThere are many different ways you can contribute to [Keploy](https://keploy.io). If you’ve ever wanted to contribute to open-source now is your chance!\n\nAll backgrounds and skill levels are encouraged to participate. [Learn How to Contribute?](https://opensource.guide/how-to-contribute)\n\n# About Keploy\n\nKeploy is a next-gen E2E testing tool that provides an easy way to capture and generate tests(KTests) and data-mocks(KMocks) from real API calls. It automatically generates mocks and stubs, making the testing process simpler and more efficient.\n\n**- Automatically Mocks Dependencies** <br/>\n**- Zero Code Change Integration** <br/>\n**- Language-Agnostic Support** <br/>\n**- Native Docker/Kubernetes Support** <br/>\n**- Asynchronous Processes Support** <br/>\n\n<div align=\"center\">\n\n[<kbd><br><b> ⭐ Star and try Out Keploy ➜ </b><br></kbd>](https://keploy.io)\n\n</div>\n\n___\n\n### Learn more about projects and contributing\n\n👨🏻‍💻 <a href=\"https://github.com/Keploy/Keploy/issues?q=is%3Aissue+is%3Aopen+label%3AHACKTOBERFEST2023\">**Code Contribubtion**</a> \n\nCode contributions are a great way to get involved in supporting open source, and learn new skills. Here are some examples of ways you can contribute to open-source projects:\n\n- 👉 Bug fixes :- If you'd like to break and build software, fix a current issue reported by the community and be a hero!\n\n- 👉 Implement features :- You can choose from a carefully curated selection of Hacktoberfest requests that have been made by community members.\n\n- 👉 Build a demo app :- Build a demo app with Keploy and share it with the community.\n\n\n📝 **Low Code and No-Code Contribution**\n\nYou can choose from a carefully curated selection of Hacktoberfest requests that have been made by community members.\n\n- Technical documentation\n- User experience testing\n- Case studies\n- Technical blog post or tutorial\n- Translating to Other Languages\n- Give Talks or presentations\n- Organize event with community\n\n# Community Support\n\nThe open source community needs you. Do you have what it takes to join the community and build a better future? We’re here to help you.\n\n<p align=\"center\">\n  <a href=\"https://twitter.com/keployio\" target=\"_blank\"><img src=\"https://img.shields.io/badge/Twitter-1D9BF0.svg?style=for-the-badge&logo=Twitter&logoColor=white\"></a>\n  \t&nbsp;\n   <a href=\"https://www.linkedin.com/company/keploy/\" target=\"_blank\"><img src=\"https://img.shields.io/badge/LinkedIn-0A66C2.svg?style=for-the-badge&logo=LinkedIn&logoColor=white\"></a>\n  \t&nbsp;\n   <a href=\"https://community.keploy.io/\" target=\"_blank\"><img src=\"https://img.shields.io/badge/Blog-0A0A0A.svg?style=for-the-badge&logo=rss&logoColor=white\"></a>\n  \t&nbsp;\n   <a href=\"https://join.slack.com/t/keploy/shared_invite/zt-2poflru6f-_VAuvQfCBT8fDWv1WwSbkw\" target=\"_blank\"><img src=\"https://img.shields.io/badge/Slack-4A154B?style=for-the-badge&logo=slack&logoColor=white\"></a>\n  \t&nbsp;\n</p>\n\n<div align=\"center\">\n "
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.07421875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2022 Keploy Inc\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README-UnitGen.md",
          "type": "blob",
          "size": 14.93359375,
          "content": "<p align=\"center\">\n  <img align=\"center\" src=\"https://docs.keploy.io/img/keploy-logo-dark.svg?s=200&v=4\" height=\"40%\" width=\"40%\"  alt=\"keploy logo\"/>\n</p>\n<h3 align=\"center\">\n<b>\n⚡️ Generate unit tests with LLMs, that actually works  ⚡️\n</b>\n</h3 >\n<p align=\"center\">\n🌟 The must-have tool for developers in the AI-Gen era 🌟\n</p>\n\n---\n\n<h4 align=\"center\">\n\n   <a href=\"https://twitter.com/Keploy_io\">\n    <img src=\"https://img.shields.io/badge/follow-%40keployio-1DA1F2?logo=twitter&style=social\" alt=\"Keploy Twitter\" />\n  </a>\n\n<a href=\"https://github.com/Keploy/Keploy/issues\">\n    <img src=\"https://img.shields.io/github/stars/keploy/keploy?color=%23EAC54F&logo=github&label=Help us reach 4k stars! Now at:\" alt=\"Help us reach 4k stars!\" />\n  </a>\n\n  <a href=\"https://landscape.cncf.io/?item=app-definition-and-development--continuous-integration-delivery--keploy\">\n    <img src=\"https://img.shields.io/badge/CNCF%20Landscape-5699C6?logo=cncf&style=social\" alt=\"Keploy CNCF Landscape\" />\n  </a>\n\n[![Slack](https://img.shields.io/badge/Slack-4A154B?style=for-the-badge&logo=slack&logoColor=white)](https://join.slack.com/t/keploy/shared_invite/zt-2poflru6f-_VAuvQfCBT8fDWv1WwSbkw)\n[![LinkedIn](https://img.shields.io/badge/linkedin-%230077B5.svg?style=for-the-badge&logo=linkedin&logoColor=white)](https://www.linkedin.com/company/keploy/)\n[![Twitter](https://img.shields.io/badge/Twitter-%231DA1F2.svg?style=for-the-badge&logo=Twitter&logoColor=white)](https://twitter.com/Keployio)\n\n</h4>\n\n---\n\nKeploy-gen uses LLMs to understand code semantics and generates meaningful **unit tests**. It's inspired by the [Automated Unit Test Improvement using LLM at Meta](https://arxiv.org/pdf/2402.09171).\n\n### Objectives\n\n- **Automate unit test generation (UTG)**: Quickly generate comprehensive unit tests and reduce the redundant manual effort.\n\n- **Improve edge cases**: Extend and improve the scope of tests to cover more complex scenarios that are often missed manually.\n\n- **Boost test coverage**: As codebase grows, ensuring exhaustive coverage should become feasible.\n\n## Core Components\n\n| **Phase**                     | **Activities**                                                                                    | **Tools/Technologies**                   |\n| ----------------------------- | ------------------------------------------------------------------------------------------------- | ---------------------------------------- |\n| **Code Analysis**             | Analyze the code structure and dependencies.                                                      | Static analysis tools, LLMs              |\n| **Prompt Engineering**        | Generation of targeted prompts to guide the LLM in producing relevant tests.                      | LLMs, Custom scripts                     |\n| **Iterative Test Refinement** | Cyclic process of refining tests by running them, analyzing coverage, and incorporating feedback. | Testing frameworks (e.g., JUnit, pytest) |\n\n### Process Overview\n\nReferred from [Meta's research](https://arxiv.org/pdf/2402.09171), TestGen-LLM top level architecture.\n\n<img src=\"https://s3.us-west-2.amazonaws.com/keploy.io/meta-llm-process-overview.png\" width=\"90%\" alt=\"Test refinement process of unit test generator\"/>\n\n## Prerequisites\n\n**AI model Setup** - Set the environment variable **API_KEY**.\n```\nexport API_KEY=xxxx\n```\n\n**API_KEY** can be from either of one these:\n- **OpenAI's GPT-4o** directly **[preferred]**.\n\n- Alternative LLMs via [litellm](https://github.com/BerriAI/litellm?tab=readme-ov-file#quick-start-proxy---cli).\n\n- Azure OpenAI\n\n## Installation\n\nInstall Keploy locally by running the following command:\n\n#### ➡ Linux/Mac\n\n```shell\n curl --silent -O -L https://keploy.io/install.sh && source install.sh\n```\n\n#### ➡  Windows\n\n- [Download](https://github.com/keploy/keploy/releases/latest/download/keploy_windows_amd64.tar.gz) and **move the keploy.exe file** to `C:\\Windows\\System32`\n\n### ![NodeJS](https://img.shields.io/badge/node.js-6DA55F?style=for-the-badge&logo=node.js&logoColor=white)   ➡     Running with Node.js/TypeScript applications\n\n- Ensure you've set the API key, as mentioned in pre-requisites above:\n\n  ```shell\n  export API_KEY=xxxx\n  ```\n\n- Ensure **Cobertura** formatted coverage reports, edit `jest.config.js` or `package.json`:\n  <br/>\n\n  ```json\n  // package.json\n  \"jest\": {\n        \"coverageReporters\": [\"text\", \"cobertura\"],\n      }\n  ```\n  or  \n\n  ```javascript\n    // jest.config.js\n    module.exports = {\n      coverageReporters: [\"text\", \"cobertura\"],\n    };\n  ```\n\n#### Generating Unit Tests\n\n- Run the following command in the root of your application. \n  <br/>\n\n  - **For Single Test File:** If you prefer to test a smaller section of your application or to control costs, consider generating tests for a single source and its corresponding test file:\n\n    ```shell\n     keploy gen --sourceFilePath=\"<path to source file>\" --testFilePath=\"<path to test file for above source file>\" --testCommand=\"npm test\" --coverageReportPath=\"<path to coverage.xml>\"\n    ```\n\n    <br/>\n\n  - **For Entire Application** use the following command to generate tests across:\n\n    ⚠️ **Warning:** Executing this command will generate unit tests for all files in the application. Depending on the size of the codebase, this process may take between 20 minutes to an hour and will incur costs related to LLM usage.\n\n    ```bash\n    keploy gen --testCommand=\"npm test\" --testDir=\"test\" --coverageReportPath=\"<path to coverage.xml>\"\n    ```\n\n  🎉 You should see improved test cases and code-coverage. ✅ Enjoy coding with enhanced unit test coverage! 🫰\n\n### ![Go](https://img.shields.io/badge/go-%2300ADD8.svg?style=for-the-badge&logo=go&logoColor=white) → Running with Golang applications\n\n- Ensure you've set the API key, as mentioned in pre-requisites above:\n\n  ```shell\n  export API_KEY=xxxx\n  ```\n\n- To ensure **Cobertura** formatted coverage reports, add:\n  ```bash\n   go install github.com/axw/gocov/gocov@v1.1.0\n   go install github.com/AlekSi/gocov-xml@v1.1.0\n  ```\n#### Generating Unit Tests\n- Run the following command in the root of your application.\n  <br/>\n\n  - **For Single Test File:** If you prefer to test a smaller section of your application or to control costs, consider generating tests for a single source and its corresponding test file:\n\n    ```shell\n    keploy gen --sourceFilePath=\"<path to source file>\" --testFilePath=\"<path to test file for above source file>\" --testCommand=\"go test -v ./... -coverprofile=coverage.out && gocov convert coverage.out | gocov-xml > coverage.xml\" --coverageReportPath=\"<path to coverage.xml>\"\n    ```\n\n    <br/>\n\n  - **For Entire Application** use the following command to generate tests across:\n\n    ⚠️ **Warning:** Executing this command will generate unit tests for all files in the application. Depending on the size of the codebase, this process may take between 20 minutes to an hour and will incur costs related to LLM usage.\n\n    ```bash\n    keploy gen --testDir=\".\" --testCommand=\"go test -v ./... -coverprofile=coverage.out && gocov convert coverage.out | gocov-xml > coverage.xml\" --coverageReportPath=\"<path to coverage.xml>\"\n    ```\n\n    🎉 You should see improved test cases and code-coverage. ✅ Enjoy coding with enhanced unit test coverage! 🫰\n\n### → Setup for Other Languages\n\n- Ensure you've set the API key, as mentioned in pre-requisites above:\n\n  ```shell\n  export API_KEY=xxxx\n  ```\n\n- Ensure that your unit test report format is **Cobertura**(it's very common).\n- Generate tests using keploy-gen:\n  ```bash\n  keploy gen --sourceFilePath=\"<path to source code file>\" --testFilePath=\"<path to existing unit test file>\" --testCommand=\"<cmd to execute unit tests>\" --coverageReportPath=\"<path to cobertura-coverage.xml>\"\n  ```\n\n## Configuration\n\nConfigure Keploy using command-line flags:\n\n```bash\n\n  --sourceFilePath \"\"\n  --testFilePath \"\"\n  --coverageReportPath \"coverage.xml\"\n  --testCommand \"\"\n  --coverageFormat \"cobertura\"\n  --expectedCoverage 100\n  --maxIterations 5\n  --testDir \"\"\n  --llmBaseUrl \"https://api.openai.com/v1\"\n  --model \"gpt-4o\"\n  --llmApiVersion \"\n```\n\n- `sourceFilePath`: Path to the source file for which tests are to be generated.\n- `testFilePath`: Path where the generated tests will be saved.\n- `coverageReportPath`: Path to generate the coverage report.\n- `testCommand` (required): Command to execute tests and generate the coverage report.\n- `coverageFormat`: Type of the coverage report (default \"cobertura\").\n- `expectedCoverage`: Desired coverage percentage (default 100%).\n- `maxIterations`: Maximum number of iterations for refining tests (default 5).\n- `testDir`: Directory where tests will be written.\n- `llmBaseUrl`: Base url of the llm.\n- `model`: Specifies the AI model to use (default \"gpt-4o\").\n- `llmApiVersion`: API version of the llm if any (default \"\")\n\n# Frequently Asked Questions\n\n1. What is Keploy's Unit Test Generator (UTG)? <br>\n    - Keploy's UTG automates the creation of unit tests based on code semantics, enhancing test coverage and reliability.\n\n2. Does Keploy send your private data to any cloud server for test generation?<br>\n    - No, Keploy does not send any user code to remote systems, except when using the unit test generation feature. When using the UT gen feature, only the source code and the unit test code will be sent to the Large Language Model (LLM) you are using. By default, Keploy uses - litellm to support vast number of LLM backends. Yes, if your organization has its own LLM(a private one), you can use it with Keploy. This ensures that data is not sent to any external systems.\n\n3. How does Keploy contribute to improving unit test   coverage?<br>\n    - By providing a zero code platform for automated testing, Keploy empowers developers to scale up their unit test coverage without extensive coding knowledge. This integration enhances testing reports, ultimately boosting confidence in the product's quality.\n\n4. Is Keploy cost-effective for automated unit testing?<br>\n   - Yes, Keploy optimizes costs by automating repetitive testing tasks and improving overall test efficiency.\n\n5. How does Keploy generate coverage reports?<br>\n    - Keploy generates detailed Cobertura format reports, offering insights into test effectiveness and code quality.\n\n6. Can Keploy handle large codebases efficiently?<br>\n   - Yes, Keploy is designed to handle large codebases efficiently, though processing time may vary based on project size and complexity.\n\n# 🙋🏻‍♀️ Questions? 🙋🏻‍♂️\n\nReach out to us. We're here to answer!\n\n[![Slack](https://img.shields.io/badge/Slack-4A154B?style=for-the-badge&logo=slack&logoColor=white)](https://join.slack.com/t/keploy/shared_invite/zt-2poflru6f-_VAuvQfCBT8fDWv1WwSbkw)\n[![LinkedIn](https://img.shields.io/badge/linkedin-%230077B5.svg?style=for-the-badge&logo=linkedin&logoColor=white)](https://www.linkedin.com/company/keploy/)\n[![YouTube](https://img.shields.io/badge/YouTube-%23FF0000.svg?style=for-the-badge&logo=YouTube&logoColor=white)](https://www.youtube.com/channel/UC6OTg7F4o0WkmNtSoob34lg)\n[![Twitter](https://img.shields.io/badge/Twitter-%231DA1F2.svg?style=for-the-badge&logo=Twitter&logoColor=white)](https://twitter.com/Keployio)\n\n\n# 📝 Sample QuickStarts\n- ![Go](https://img.shields.io/badge/go-%2300ADD8.svg?style=for-the-badge&logo=go&logoColor=white) : Try a unit-gen on [Mux-SQL](https://github.com/keploy/samples-go/tree/main/mux-sql#create-unit-testcase-with-keploy) app\n\n- ![Node](https://img.shields.io/badge/node.js-6DA55F?style=for-the-badge&logo=node&logoColor=white) : Try a unit-gen on [Express-Mongoose](https://github.com/keploy/samples-typescript/tree/main/express-mongoose#create-unit-testcase-with-keploy) app\n\n## 🌐 Language Support\n\n![Go](https://img.shields.io/badge/go-%2300ADD8.svg?style=for-the-badge&logo=go&logoColor=white)\n![NodeJS](https://img.shields.io/badge/node.js-6DA55F?style=for-the-badge&logo=node.js&logoColor=white)\n\nOther language may be supported, we've not tested them yet. If your **coverage reports** are of **Cobertura format** then you should be able to use keploy-gen in any language.\n\n## Dev Support\n\nKeploy-gen is not just a project but an attempt to make developers life easier testing applications.\nIt aims to simplify the creation and maintenance of tests, ensuring high coverage, and adapts to the complexity of modern software development.\n\n#### Prompt Generation\n\nReferred from [Meta's research](https://arxiv.org/pdf/2402.09171), the four primary prompts used in the deployment for the December 2023 Instagram and Facebook app test-a-thons\n\n| Prompt Name           | Template                                                                                                                                                                                                                                                                                                                                                                                         |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| extend_test           | Here is a Kotlin unit test class: {`existing_test_class`}. Write an extended version of the test class that includes additional tests to cover some extra corner cases.                                                                                                                                                                                                                          |\n| extend_coverage       | Here is a Kotlin unit test class and the class that it tests: {`existing_test_class`} {`class_under_test`}. Write an extended version of the test class that includes additional unit tests that will increase the test coverage of the class under test.                                                                                                                                        |\n| corner_cases          | Here is a Kotlin unit test class and the class that it tests: {`existing_test_class`} {`class_under_test`}. Write an extended version of the test class that includes additional unit tests that will cover corner cases missed by the original and will increase the test coverage of the class under test.                                                                                     |\n| statement_to_complete | Here is a Kotlin class under test {`class_under_test`} This class under test can be tested with this Kotlin unit test class {`existing_test_class`}. Here is an extended version of the unit test class that includes additional unit test cases that will cover methods, edge cases, corner cases, and other features of the class under test that were missed by the original unit test class: |\n\nLimitation: This project currently doesn't generate quality fresh tests if there are no existing tests to learn from.\n\nEnjoy coding with enhanced unit test coverage! 🫰\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.6640625,
          "content": "\n<p align=\"center\">\n  <img align=\"center\" src=\"https://docs.keploy.io/img/keploy-logo-dark.svg?s=200&v=4\" height=\"40%\" width=\"40%\"  alt=\"keploy logo\"/>\n</p>\n<h3 align=\"center\">\n<b>\n⚡️ API tests faster than unit tests, from user traffic ⚡️\n</b>\n</h3 >\n<p align=\"center\">\n🌟 The must-have tool for developers in the AI-Gen era 🌟\n</p>\n\n---\n\n<h4 align=\"center\">\n\n   <a href=\"https://twitter.com/Keploy_io\">\n    <img src=\"https://img.shields.io/badge/follow-%40keployio-1DA1F2?logo=twitter&style=social\" alt=\"Keploy Twitter\" />\n  </a>\n\n<a href=\"https://github.com/Keploy/Keploy/issues\">\n    <img src=\"https://img.shields.io/github/stars/keploy/keploy?color=%23EAC54F&logo=github&label=Help us reach 4k stars! Now at:\" alt=\"Help us reach 4k stars!\" />\n  </a>\n\n  <a href=\"https://landscape.cncf.io/?item=app-definition-and-development--continuous-integration-delivery--keploy\">\n    <img src=\"https://img.shields.io/badge/CNCF%20Landscape-5699C6?logo=cncf&style=social\" alt=\"Keploy CNCF Landscape\" />\n  </a>\n\n[![Slack](https://img.shields.io/badge/Slack-4A154B?style=for-the-badge&logo=slack&logoColor=white)](https://join.slack.com/t/keploy/shared_invite/zt-2poflru6f-_VAuvQfCBT8fDWv1WwSbkw)\n[![LinkedIn](https://img.shields.io/badge/linkedin-%230077B5.svg?style=for-the-badge&logo=linkedin&logoColor=white)](https://www.linkedin.com/company/keploy/)\n[![YouTube](https://img.shields.io/badge/YouTube-%23FF0000.svg?style=for-the-badge&logo=YouTube&logoColor=white)](https://www.youtube.com/channel/UC6OTg7F4o0WkmNtSoob34lg)\n[![Twitter](https://img.shields.io/badge/Twitter-%231DA1F2.svg?style=for-the-badge&logo=Twitter&logoColor=white)](https://twitter.com/Keployio)\n\n\n</h4>\n\n\n[Keploy](https://keploy.io) is **developer-centric** API testing tool that creates **tests along with built-in-mocks**, faster than unit tests.\n\nKeploy not only records API calls, but also records database calls and replays them during testing, making it **easy to use, powerful, and extensible**.\n\n<img src=\"https://raw.githubusercontent.com/keploy/docs/main/static/gif/record-tc.gif\" width=\"60%\" alt=\"Convert API calls to test cases\"/>\n\n> 🐰 **Fun fact:** Keploy uses itself for testing! Check out our swanky coverage badge: [![Coverage Status](https://coveralls.io/repos/github/keploy/keploy/badge.svg?branch=main&kill_cache=1)](https://coveralls.io/github/keploy/keploy?branch=main&kill_cache=1) &nbsp;\n\n## 🚨 Here for  [Unit Test Generator](README-UnitGen.md) (ut-gen)? \nKeploy has newly launched the world's first unit test generator(ut-gen) implementation of [Meta LLM research paper](https://arxiv.org/pdf/2402.09171), it understands code semantics and generates meaningful unit tests, aiming to:\n\n- **Automate unit test generation (UTG)**: Quickly generate comprehensive unit tests and reduce redundant manual effort.\n\n- **Improve edge cases**: Extend and improve the scope of automated tests to cover more complex scenarios, often missed manually.\n\n- **Boost test coverage**: As codebases grow, ensuring exhaustive coverage should become feasible, aligning with our mission.\n\n### 📜 Follow [Unit Test Generator README](README-UnitGen.md)! ✅\n\n## 📘 Documentation!\nBecome a Keploy pro with **[Keploy Documentation](https://keploy.io/docs/)**.\n\n<img src=\"https://raw.githubusercontent.com/keploy/docs/main/static/gif/record-replay.gif\" width=\"100%\" alt=\"Record Replay Testing\"/>\n\n# 🚀 Quick Installation (API test generator)\n\nIntegrate Keploy by installing the agent locally. No code-changes required.\n\n```shell\ncurl --silent -O -L https://keploy.io/install.sh && source install.sh\n```\n\n##  🎬 Recording Testcases\n\nStart your app with Keploy to convert API calls as Tests and Mocks/Stubs.\n\n```zsh\nkeploy record -c \"CMD_TO_RUN_APP\" \n```\nFor example, if you're using a simple Python app the `CMD_TO_RUN_APP` would resemble to `python main.py`, for  Golang `go run main.go`, for java `java -jar xyz.jar`, for node `npm start`..\n\n```zsh\nkeploy record -c \"python main.py\"\n```\n\n## 🧪 Running Tests\nShut down the databases, redis, kafka or any other services your application uses. Keploy doesn't need those during test.\n```zsh\nkeploy test -c \"CMD_TO_RUN_APP\" --delay 10\n```\n\n## ✅ Test Coverage Integration\nTo integrate with your unit-testing library and see combine test coverage, follow this [test-coverage guide](https://keploy.io/docs/server/sdk-installation/go/).\n\n> ####  **If You Had Fun:** Please leave a 🌟 star on this repo! It's free and will bring a smile. 😄 👏\n\n## One-Click Setup 🚀\n\nSetup and run keploy quickly, with no local machine installation required:\n\n[![GitHub Codescape](https://img.shields.io/badge/GH%20codespace-3670A0?style=for-the-badge&logo=github&logoColor=fff)]([https://github.dev/Sonichigo/mux-sql](https://github.dev/Sonichigo/mux-sql))\n\n## 🤔 Questions?\nReach out to us. We're here to help!\n\n[![Slack](https://img.shields.io/badge/Slack-4A154B?style=for-the-badge&logo=slack&logoColor=white)](https://join.slack.com/t/keploy/shared_invite/zt-2poflru6f-_VAuvQfCBT8fDWv1WwSbkw)\n[![LinkedIn](https://img.shields.io/badge/linkedin-%230077B5.svg?style=for-the-badge&logo=linkedin&logoColor=white)](https://www.linkedin.com/company/keploy/)\n[![YouTube](https://img.shields.io/badge/YouTube-%23FF0000.svg?style=for-the-badge&logo=YouTube&logoColor=white)](https://www.youtube.com/channel/UC6OTg7F4o0WkmNtSoob34lg)\n[![Twitter](https://img.shields.io/badge/Twitter-%231DA1F2.svg?style=for-the-badge&logo=Twitter&logoColor=white)](https://twitter.com/Keployio)\n\n\n## 🌐 Language Support\nFrom Go's gopher 🐹 to Python's snake 🐍, we support:\n\n![Go](https://img.shields.io/badge/go-%2300ADD8.svg?style=for-the-badge&logo=go&logoColor=white)\n![Java](https://img.shields.io/badge/java-%23ED8B00.svg?style=for-the-badge&logo=java&logoColor=white)\n![NodeJS](https://img.shields.io/badge/node.js-6DA55F?style=for-the-badge&logo=node.js&logoColor=white)\n![Rust](https://img.shields.io/badge/Rust-darkred?style=for-the-badge&logo=rust&logoColor=white)\n![C#](https://img.shields.io/badge/csharp-purple?style=for-the-badge&logo=csharp&logoColor=white)\n![Python](https://img.shields.io/badge/python-3670A0?style=for-the-badge&logo=python&logoColor=ffdd54)\n\n## 🫰 Keploy Adopters 🧡\n\nSo you and your organisation are using Keploy? That’s great. Please add yourselves to [**this list,**](https://github.com/orgs/keploy/discussions/1765) and we'll send you goodies! 💖\n\n\nWe are happy and proud to have you all as part of our community! 💖\n\n## 🎩 How's the Magic Happen?\nKeploy proxy captures and replays **ALL** (CRUD operations, including non-idempotent APIs) of your app's network interactions.\n\n\nTake a journey to **[How Keploy Works?](https://keploy.io/docs/keploy-explained/how-keploy-works/)** to discover the tricks behind the curtain!\n\nHere are Keploy's core features: 🛠\n\n- ♻️ **Combined Test Coverage:** Merge your Keploy Tests with your fave testing libraries(JUnit, go-test, py-test, jest) to see a combined test coverage.\n\n\n- 🤖 **EBPF Instrumentation:** Keploy uses EBPF like a secret sauce to make integration code-less, language-agnostic, and oh-so-lightweight.\n\n\n- 🌐 **CI/CD Integration:** Run tests with mocks anywhere you like—locally on the CLI, in your CI pipeline (Jenkins, Github Actions..) , or even across a Kubernetes cluster.\n\n\n- 📽️ **Record-Replay Complex Flows:** Keploy can record and replay complex, distributed API flows as mocks and stubs. It's like having a time machine for your tests—saving you tons of time!\n\n\n- 🎭 **Multi-Purpose Mocks:** You can also use keploy Mocks, as server Tests!\n\n\n## 👨🏻‍💻 Let's Build Together! 👩🏻‍💻\nWhether you're a newbie coder or a wizard 🧙‍♀️, your perspective is golden. Take a peek at our:\n\n📜 [Contribution Guidelines](https://github.com/keploy/keploy/blob/main/CONTRIBUTING.md)\n\n❤️ [Code of Conduct](https://github.com/keploy/keploy/blob/main/CODE_OF_CONDUCT.md)\n\n\n## 🐲 Current Limitations!\n- **Unit Testing:** While Keploy is designed to run alongside unit testing frameworks (Go test, JUnit..) and can add to the overall code coverage, it still generates integration tests.\n- **Production Lands**: Keploy is currently focused on generating tests for developers. These tests can be captured from any environment, but we have not tested it on high volume production environments. This would need robust deduplication to avoid too many redundant tests being captured. We do have ideas on building a robust deduplication system [#27](https://github.com/keploy/keploy/issues/27)\n\n## ✨ Resources!\n🤔 [FAQs](https://keploy.io/docs/keploy-explained/faq/)\n\n🕵️‍️ [Why Keploy](https://keploy.io/docs/keploy-explained/why-keploy/)\n\n⚙️ [Installation Guide](https://keploy.io/docs/application-development/)\n\n📖 [Contribution Guide](https://keploy.io/docs/keploy-explained/contribution-guide/)\n"
        },
        {
          "name": "READMEes-Es.md",
          "type": "blob",
          "size": 15.4140625,
          "content": "<p align=\"center\">\n  <img align=\"center\" src=\"https://docs.keploy.io/img/keploy-logo-dark.svg?s=200&v=4\" height=\"40%\" width=\"40%\"  alt=\"keploy logo\"/>\n</p>\n<h3 align=\"center\">\n<b>\n⚡️ Backend tests faster than unit-tests, from user traffic ⚡️\n</b>\n</h3 >\n<p align=\"center\">\n🌟 The must-have tool for developers in the AI-Gen era 🌟\n</p>\n\n---\n\n<h4 align=\"center\">\n\n  <a href=\"CODE_OF_CONDUCT.md\" alt=\"Contributions welcome\">\n    <img src=\"https://img.shields.io/badge/Contributions-Welcome-brightgreen?logo=github\" /></a>\n  <a href=\"https://github.com/keploy/keploy/actions\" alt=\"Tests\">\n  <a href=\"https://goreportcard.com/report/github.com/keploy/keploy\" alt=\"Go Report Card\">\n    <img src=\"https://goreportcard.com/badge/github.com/keploy/keploy\" /></a>\n  <a href=\"https://join.slack.com/t/keploy/shared_invite/zt-2poflru6f-_VAuvQfCBT8fDWv1WwSbkw\" alt=\"Slack\">\n    <img src=\".github/slack.svg\" /></a>\n  <a href=\"https://keploy.io/docs\" alt=\"Docs\">\n    <img src=\".github/docs.svg\" /></a>\n   <a href=\"https://github.com/Keploy/Keploy/blob/main/LICENSE\">\n    <img src=\"https://img.shields.io/badge/Licence-Apache-blue\" alt=\"Keploy is released under the Apache License\">\n  </a>\n  <a href=\"https://keploy.io/\"><img src=\"https://img.shields.io/website?url=https://keploy.io/&up_message=Keploy&up_color=%232635F1&label=Accelerator&down_color=%232635F1&down_message=Keploy\"></a>\n  <a href=\"https://github.com/keploy/keploy/releases\">\n    <img title=\"Release\" src=\"https://img.shields.io/github/v/release/keploy/keploy?logo=github\"/>\n  </a>\n  <a href=\"https://github.com/Keploy/Keploy/releases\">\n    <img title=\"Release date\" src=\"https://img.shields.io/github/release-date/Keploy/Keploy?logo=github\"/>\n  </a>\n  <a href=\"https://github.com/Keploy/Keploy/graphs/contributors\">\n    <img title=\"Contributors\" src=\"https://img.shields.io/github/contributors/Keploy/Keploy?logo=github\"/>\n  </a>\n  <a href=\"https://github.com/Keploy/Keploy/pulls?q=is%3Apr+is%3Aclosed\">\n    <img title=\"Pull Requests\" src=\"https://img.shields.io/github/issues-pr-closed/Keploy/Keploy?logo=github\"/>\n  </a>\n  <a href=\"https://github.com/Keploy/Keploy/pulls?q=is%3Apr+is%3Aclosed\">\n    <img title=\"Release Build\" src=\"https://img.shields.io/github/actions/workflow/status/Keploy/Keploy/release.yml?logo=github&label=Release Build\"/>\n  </a>\n  <a href=\"https://github.com/Keploy/Keploy/blob/main/CONTRIBUTING.md\">\n    <img src=\"https://img.shields.io/badge/PRs-Welcome-brightgreen?logo=github\" alt=\"PRs welcome!\" />\n  </a>\n  <a href=\"https://github.com/Keploy/Keploy/issues\">\n    <img src=\"https://img.shields.io/github/stars/keploy/keploy?color=%23EAC54F&logo=github&label=Help us reach 4k stars! Now at:\" alt=\"Help us reach 1k stars!\" />\n  </a>\n  <a href=\"https://Keploy.io/docs\">\n    <img src=\"https://img.shields.io/badge/Join-Community!-orange\" alt=\"Join our Community!\" />\n  </a>\n  \n  <a href=\"https://twitter.com/Keploy_io\">\n    <img src=\"https://img.shields.io/badge/follow-%40keployio-1DA1F2?logo=twitter&style=social\" alt=\"Keploy Twitter\" />\n  </a>\n</h4>\n\n## 🎤 Presentando Keploy 🐰\nKeploy es una herramienta de prueba de backend centrada en el **desarrollador**. Realiza pruebas de backend con **mocks incorporados**, más rápido que las pruebas unitarias, a partir del tráfico del usuario, lo que lo hace **fácil de usar, potente y extensible**. 🛠\n\n¿Listo para la magia? Aquí están las características principales de Keploy:\n\n- ♻️ **Cobertura de prueba combinada:** Fusiona tus pruebas de Keploy con tus bibliotecas de pruebas favoritas (junit, go-test, py-test, jest) para ver una cobertura de prueba combinada.\n\n- 🤖 **Instrumentación EBPF:** Keploy utiliza EBPF como un ingrediente secreto para hacer que la integración sea sin código, independiente del lenguaje y muy ligera.\n\n- 🌐 **Integración CI/CD:** Ejecuta pruebas con mocks donde quieras, ya sea localmente en la CLI, en tu canal de integración continua o incluso en un clúster de Kubernetes. ¡Es prueba donde la necesitas!\n\n- 🎭 **Mocks multipropósito:** Úsalos en pruebas existentes, como pruebas de servidor o simplemente para impresionar a tus amigos.\n\n- 📽️ **Grabación y reproducción de flujos complejos:** Keploy puede grabar y reproducir flujos de API complejos y distribuidos como mocks y stubs. Es como tener una máquina del tiempo para tus pruebas, ¡ahorrándote mucho tiempo!\n\n![Generar caso de prueba a partir de una llamada API](https://raw.githubusercontent.com/keploy/docs/main/static/gif/how-keploy-works.gif)\n\n> 🐰 **Dato curioso:** ¡Keploy se utiliza a sí mismo para realizar pruebas! Echa un vistazo a nuestra elegante insignia de cobertura: [![Estado de cobertura](https://coveralls.io/repos/github/keploy/keploy/badge.svg?branch=main&kill_cache=1)](https://coveralls.io/github/keploy/keploy?branch=main&kill_cache=1) &nbsp;\n\n## 🌐 Soporte de idiomas\nDesde el gopher de Go 🐹 hasta la serpiente de Python 🐍, ofrecemos soporte para:\n\n![Go](https://img.shields.io/badge/go-%2300ADD8.svg?style=for-the-badge&logo=go&logoColor=white)\n![Java](https://img.shields.io/badge/java-%23ED8B00.svg?style=for-the-badge&logo=java&logoColor=white)\n![NodeJS](https://img.shields.io/badge/node.js-6DA55F?style=for-the-badge&logo=node.js&logoColor=white)\n![Python](https://img.shields.io/badge/python-3670A0?style=for-the-badge&logo=python&logoColor=ffdd54)\n\n## 🎩 ¿Cómo funciona la magia?\nNuestro mágico 🧙‍♂️ proxy de Keploy captura y reproduce **TODAS** las interacciones de red de tu aplicación (operaciones CRUD, incluyendo APIs no idempotentes).\n\nRealiza un viaje a **[¿Cómo funciona Keploy?](https://docs.keploy.io/docs/keploy-explained/how-keploy-works)** para descubrir los trucos detrás del telón.\n\n![Generar caso de prueba a partir de una llamada API](https://raw.githubusercontent.com/keploy/docs/main/static/gif/record-replay.gif)\n\n## 📘 ¡Aprende más!\nConviértete en un profesional de Keploy con nuestra **[Documentación](https://docs.keploy.io/)**.\n\n# Instalación rápida\n\nUsando **Binario** (<img src=\"https://th.bing.com/th/id/R.7802b52b7916c00014450891496fe04a?rik=r8GZM4o2Ch1tHQ&riu=http%3a%2f%2f1000logos.net%2fwp-content%2fuploads%2f2017%2f03%2fLINUX-LOGO.png&ehk=5m0lBvAd%2bzhvGg%2fu4i3%2f4EEHhF4N0PuzR%2fBmC1lFzfw%3d&risl=&pid=ImgRaw&r=0\" width=\"20\" height=\"20\"> Linux</img> / <img src=\"https://cdn.freebiesupply.com/logos/large/2x/microsoft-windows-22-logo-png-transparent.png\" width=\"20\" height=\"20\"> WSL</img>)\n-\n\nKeploy se puede utilizar en Linux nativamente y a través de WSL en Windows.\n\n### Descarga el binario de Keploy.\n\n```zsh\ncurl --silent --location \"https://github.com/keploy/keploy/releases/latest/download/keploy_linux_amd64.tar.gz\" | tar xz -C /tmp\n\nsudo mkdir -p /usr/local/bin && sudo mv /tmp/keploy /usr/local/bin && keploy\n\n<details>\n<summary> <strong> Arquitectura ARM </strong> </summary>\ncurl --silent --location \"https://github.com/keploy/keploy/releases/latest/download/keploy_linux_arm64.tar.gz\" | tar xz -C /tmp\n\nsudo mkdir-p /usr/local/bin && sudo mv /tmp/keploy /usr/local/bin && keploy\n</details>\n\n### Captura de casos de prueba\nPara iniciar la grabación de llamadas a la API, ejecuta este comando en tu terminal donde normalmente ejecutas tu aplicación. Si necesitas configurar variables de entorno, hazlo de la manera habitual:\n\n```zsh\nsudo -E env PATH=$PATH keploy record -c \"CMD_PARA_EJECUTAR_LA_APP\"\n```\n\nPor ejemplo, si estás utilizando un programa sencillo de Golang, el comando se vería así:\n\n```zsh\nsudo -E env PATH=$PATH keploy record -c \"CMD_PARA_EJECUTAR_LA_APP\"\n```\n\n### Ejecución de casos de prueba\n\nPara ejecutar los casos de prueba y generar un informe de cobertura de pruebas, utiliza este comando en la terminal donde normalmente ejecutas tu aplicación. Si necesitas configurar variables de entorno, hazlo de la manera habitual:\n\n```zsh  \nsudo -E env PATH=$PATH keploy test -c \"CMD_PARA_EJECUTAR_LA_APP\" --delay 10\n ```\n\n Por ejemplo, si estás utilizando un framework de Golang, el comando sería:\n\n ```zsh\n sudo -E env PATH=$PATH keploy test -c \"go run main.go\" --delay 10\n ```\n\n<img src=\"https://cdn4.iconfinder.com/data/icons/logos-and-brands/512/97_Docker_logo_logos-512.png\" width=\"20\" height=\"20\"> Instalación de Docker </img>\n\nKeploy se puede utilizar en <img src=\"https://th.bing.com/th/id/R.7802b52b7916c00014450891496fe04a?rik=r8GZM4o2Ch1tHQ&riu=http%3a%2f%2f1000logos.net%2fwp-content%2fuploads%2f2017%2f03%2fLINUX-LOGO.png&ehk=5m0lBvAd%2bzhvGg%2fu4i3%2f4EEHhF4N0PuzR%2fBmC1lFzfw%3d&risl=&pid=ImgRaw&r=0\" width=\"10\" height=\"10\"> Linux</img> y <img src=\"https://cdn.freebiesupply.com/logos/large/2x/microsoft-windows-22-logo-png-transparent.png\" width=\"10\" height=\"10\"> Windows</img> a través de Docker.\n\n> **️ Nota:** <img src=\"https://www.pngplay.com/wp-content/uploads/3/Apple-Logo-Transparent-Images.png\" width=\"15\" height=\"15\"> MacOS</img> necesitan instalar [Colima](https://github.com/abiosoft/colima#installation). <img src=\"https://cdn.freebiesupply.com/logos/large/2x/microsoft-windows-22-logo-png-transparent.png\" width=\"10\" height=\"10\"/>Usuarios de Windows necesitan installar [WSL](https://learn.microsoft.com/en-us/windows/wsl/install#install-wsl-command).\n\n### Creación de alias\n\nCreemos un alias para Keploy:\n\n```shell\nalias keploy='sudo docker run --pull always --name keploy-v2 -p 16789:16789 --privileged --pid=host -it -v $(pwd):$(pwd) -w $(pwd) -v /sys/fs/cgroup:/sys/fs/cgroup -v /sys/kernel/debug:/sys/kernel/debug -v /sys/fs/bpf:/sys/fs/bpf -v /var/run/docker.sock:/var/run/docker.sock --rm ghcr.io/keploy/keploy'\n```\n\n### Grabación de Casos de Prueba y Datos Simulados\n\nAquí tienes algunos puntos a considerar antes de la grabación:\n- Si estás ejecutando mediante **docker-compose**, asegúrate de incluir el `<NOMBRE_DEL_CONTENEDOR>` en el servicio de tu aplicación en el archivo docker-compose.yaml [como se muestra aquí](https://github.com/keploy/samples-python/blob/9d6cf40da2eb75f6e035bedfb30e54564785d5c9/flask-mongo/docker-compose.yml#L14).\n- Debes ejecutar los contenedores en una red, si no es así, asegúrate de que todos tus contenedores estén en la misma red con la propiedad externa activada - [como se muestra aquí](https://github.com/keploy/samples-python/blob/9d6cf40da2eb75f6e035bedfb30e54564785d5c9/flask-mongo/docker-compose.yml#L24). Reemplaza el **nombre de la red** (bandera `--network`) por tu red personalizada si la cambiaste anteriormente, como la red <backend> en el ejemplo dado.\n- `Docker_CMD_to_run_user_container` se refiere al **comando de Docker para iniciar** la aplicación.\n\nUtiliza el alias de keploy que creamos para capturar casos de prueba. **Ejecuta** el siguiente comando dentro del **directorio raíz** de tu aplicación.\n\n```shell\nkeploy record -c \"Docker_CMD_to_run_user_container --network <network_name>\" --containerName \"<container_name>\"\n```\n\nRealiza llamadas API utilizando herramientas como [Hoppscotch](https://hoppscotch.io/), [Postman](https://www.postman.com/) o comandos cURL.\n\nKeploy capturará las llamadas API que hayas realizado, generando suites de pruebas que comprenden **casos de prueba (KTests) y simulaciones de datos (KMocks)** en formato `YAML`.\n\n### Ejecución de Casos de Prueba\n\nAhora, utiliza el alias keployV2 que creamos para ejecutar los casos de prueba. Sigue estos pasos en el **directorio raíz** de tu aplicación.\n\nCuando utilices **docker-compose** para iniciar la aplicación, es importante asegurarse de que el parámetro `--containerName` coincida con el nombre del contenedor en tu archivo `docker-compose.yaml`.\n\n```shell\nkeploy test -c \"Docker_CMD_to_run_user_container --network <network_name>\" --containerName \"<container_name>\" --delay 20\n```\n\n## 🤔 Preguntas?\n¡Contáctanos! Estamos aquí para ayudarte.\n\n[![Slack](https://img.shields.io/badge/Slack-4A154B?style=for-the-badge&logo=slack&logoColor=white)](https://join.slack.com/t/keploy/shared_invite/zt-2poflru6f-_VAuvQfCBT8fDWv1WwSbkw)\n[![LinkedIn](https://img.shields.io/badge/linkedin-%230077B5.svg?style=for-the-badge&logo=linkedin&logoColor=white)](https://www.linkedin.com/company/keploy/)\n[![YouTube](https://img.shields.io/badge/YouTube-%23FF0000.svg?style=for-the-badge&logo=YouTube&logoColor=white)](https://www.youtube.com/channel/UC6OTg7F4o0WkmNtSoob34lg)\n[![Twitter](https://img.shields.io/badge/Twitter-%231DA1F2.svg?style=for-the-badge&logo=Twitter&logoColor=white)](https://twitter.com/Keployio)\n\n## 💖 ¡Construyamos Juntos!\nYa seas un principiante o un mago 🧙‍♀️ en la programación, tu perspectiva es valiosa. Echa un vistazo a nuestras:\n\n📜 [Directrices de Contribución](https://github.com/keploy/keploy/blob/main/CONTRIBUTING.md)\n\n❤️ [Código de Conducta](https://github.com/keploy/keploy/blob/main/CODE_OF_CONDUCT.md)\n\n## 🌟 Características\n\n### **🚀 Exporta, mantiene y muestra pruebas y simulaciones!**\n\n<img src=\"https://raw.githubusercontent.com/keploy/docs/main/static/gif/record-tc.gif\" width=\"90%\"  alt=\"Genera Casos de Prueba desde Llamadas API\"/>\n\n### **🤝 Saluda a los populares frameworks de pruebas - Go-Test, JUnit, Py-Test, Jest y más!**\n\n<img src=\"https://raw.githubusercontent.com/keploy/docs/main/static/gif/replay-tc.gif\" width=\"90%\"  alt=\"Genera Casos de Prueba desde Llamadas API\"/>\n\n### **🕵️ Detecta ruido con precisión de cirujano!**\nFiltra campos ruidosos en las respuestas de las API como (marcas de tiempo, valores aleatorios) para asegurar pruebas de alta calidad.\n\n### **📊 ¡Saluda a una mayor cobertura!**\nKeploy se asegura de que no se generen casos de prueba redundantes.\n\n## 🐲 Los Desafíos que Enfrentamos!\n- **Pruebas Unitarias:** Aunque Keploy está diseñado para funcionar junto con los marcos de pruebas unitarias (Go test, JUnit, etc.) y puede contribuir a la cobertura de código general, todavía genera pruebas de extremo a extremo (E2E).\n- **Entornos de Producción:** Keploy actualmente se centra en generar pruebas para desarrolladores. Estas pruebas se pueden capturar desde cualquier entorno, pero no las hemos probado en entornos de producción de alto volumen. Esto requeriría una sólida deduplicación para evitar la captura de pruebas redundantes en exceso. Tenemos ideas para construir un sistema de deduplicación sólido [#27](https://github.com/keploy/keploy/issues/27)\n\n## ✨ Recursos!\n🤔 [Preguntas Frecuentes](https://docs.keploy.io/docs/keploy-explained/faq)\n\n🕵️‍️ [¿Por Qué Keploy?](https://docs.keploy.io/docs/keploy-explained/why-keploy)\n\n⚙️ [Guía de Instalación](https://docs.keploy.io/docs/server/server-installation)\n\n📖 [Guía de Contribución](https://docs.keploy.io/docs/devtools/server-contrib-guide/)\n\n## 🌟 Salón de Contribuyentes\n<p>\n  <img src=\"https://api.vaunt.dev/v1/github/entities/keploy/repositories/keploy/contributors?format=svg&limit=18\" width=\"100%\"  alt=\"contribuyentes\"/>\n</p>\n\n### Premios Disponibles\n\n| Nombre | Icono | Descripción |\n| ---- | ---- | ----------- |\n| Creador de Documentos | <img src=\"https://raw.githubusercontent.com/sonichigo/keploy/main/.vaunt/badge/docs_hero.png\" width=\"150\" alt=\"icono-de-docs\" /> | ¡Premiado por ayudar a mejorar la documentación de Keploy! |\n| Cada Bit Cuenta | <img src=\"https://raw.githubusercontent.com/sonichigo/keploy/main/.vaunt/badge/commit_hero.png\" width=\"150\" alt=\"icono-de-commit\"/> | ¡Ningún commit es demasiado pequeño! |\n| Héroe de Solicitudes de Extracción | <img src=\"https://raw.githubusercontent.com/sonichigo/keploy/main/.vaunt/badge/pull_request_hero.png\" width=\"150\" alt=\"icono-de-PR-hero\" /> | ¡Eres un héroe de solicitudes de extracción, sigue así! |\n| Cercano| <img src=\"https://raw.githubusercontent.com/sonichigo/keploy/main/.vaunt/badge/closer.png\" width=\"150\" alt=\"icono-de-closer\" /> | ¡Solo los cercanos consiguen café! |\n"
        },
        {
          "name": "READMEja-JP.md",
          "type": "blob",
          "size": 10.4111328125,
          "content": "<p align=\"center\">\n  <img align=\"center\" src=\"https://docs.keploy.io/img/keploy-logo-dark.svg?s=200&v=4\" height=\"40%\" width=\"40%\"  alt=\"keploy logo\"/>\n</p>\n<h3 align=\"center\">\n<b>\n⚡️ ユーザートラフィックからのユニットテストよりも速いAPIテスト ⚡️\n</b>\n</h3 >\n<p align=\"center\">\n🌟 AI-Gen時代の開発者に必須のツール 🌟\n</p>\n\n---\n\n<h4 align=\"center\">\n\n   <a href=\"https://twitter.com/Keploy_io\">\n    <img src=\"https://img.shields.io/badge/follow-%40keployio-1DA1F2?logo=twitter&style=social\" alt=\"Keploy Twitter\" />\n  </a>\n\n<a href=\"https://github.com/Keploy/Keploy/issues\">\n    <img src=\"https://img.shields.io/github/stars/keploy/keploy?color=%23EAC54F&logo=github&label=Help us reach 4k stars! Now at:\" alt=\"Help us reach 4k stars!\" />\n  </a>\n\n  <a href=\"https://landscape.cncf.io/?item=app-definition-and-development--continuous-integration-delivery--keploy\">\n    <img src=\"https://img.shields.io/badge/CNCF%20Landscape-5699C6?logo=cncf&style=social\" alt=\"Keploy CNCF Landscape\" />\n  </a>\n\n[![Slack](https://img.shields.io/badge/Slack-4A154B?style=for-the-badge&logo=slack&logoColor=white)](https://join.slack.com/t/keploy/shared_invite/zt-2poflru6f-_VAuvQfCBT8fDWv1WwSbkw)\n[![LinkedIn](https://img.shields.io/badge/linkedin-%230077B5.svg?style=for-the-badge&logo=linkedin&logoColor=white)](https://www.linkedin.com/company/keploy/)\n[![YouTube](https://img.shields.io/badge/YouTube-%23FF0000.svg?style=for-the-badge&logo=YouTube&logoColor=white)](https://www.youtube.com/channel/UC6OTg7F4o0WkmNtSoob34lg)\n[![Twitter](https://img.shields.io/badge/Twitter-%231DA1F2.svg?style=for-the-badge&logo=Twitter&logoColor=white)](https://twitter.com/Keployio)\n\n</h4>\n\n\n[Keploy](https://keploy.io) は、**開発者中心**のAPIテストツールで、**組み込みモック**を使用してユニットテストよりも速くテストを作成します。\n\nKeployはAPI呼び出しだけでなく、データベース呼び出しも記録し、テスト中に再生するため、**使いやすく、強力で、拡張性があります**。\n\n<img src=\"https://raw.githubusercontent.com/keploy/docs/main/static/gif/record-tc.gif\" width=\"60%\" alt=\"Convert API calls to test cases\"/>\n\n> 🐰 **面白い事実:** Keployは自分自身をテストに使用しています！私たちの素晴らしいカバレッジバッジをチェックしてください: [![Coverage Status](https://coveralls.io/repos/github/keploy/keploy/badge.svg?branch=main&kill_cache=1)](https://coveralls.io/github/keploy/keploy?branch=main&kill_cache=1) &nbsp;\n\n## 🚨 [ユニットテストジェネレーター](README-UnitGen.md) (ut-gen) のためにここにいますか？\nKeployは、[Meta LLM研究論文](https://arxiv.org/pdf/2402.09171)の世界初のユニットテストジェネレーター(ut-gen)実装を新たに発表しました。これはコードのセマンティクスを理解し、意味のあるユニットテストを生成します。目指すのは：\n\n- **ユニットテスト生成の自動化 (UTG)**: 包括的なユニットテストを迅速に生成し、冗長な手動作業を削減します。\n\n- **エッジケースの改善**: 自動テストの範囲を拡張し、手動で見逃されがちな複雑なシナリオをカバーします。\n\n- **テストカバレッジの向上**: コードベースが成長するにつれて、徹底的なカバレッジを確保することが可能になります。\n\n### 📜 [ユニットテストジェネレーター README](README-UnitGen.md) をフォローしてください！ ✅\n\n## 📘 ドキュメント！\n**[Keploy Documentation](https://keploy.io/docs/)** でKeployのプロフェッショナルになりましょう。\n\n<img src=\"https://raw.githubusercontent.com/keploy/docs/main/static/gif/record-replay.gif\" width=\"100%\" alt=\"Record Replay Testing\"/>\n\n# 🚀 クイックインストール (APIテストジェネレーター)\n\nエージェントをローカルにインストールしてKeployを統合します。コード変更は不要です。\n\n```shell\ncurl --silent -O -L https://keploy.io/install.sh && source install.sh\n```\n\n##  🎬 テストケースの記録\n\nAPI呼び出しをテストとモック/スタブに変換するために、Keployを使用してアプリを開始します。\n\n```zsh\nkeploy record -c \"CMD_TO_RUN_APP\" \n```\n例えば、シンプルなPythonアプリを使用している場合、`CMD_TO_RUN_APP`は`python main.py`、Golangの場合は`go run main.go`、Javaの場合は`java -jar xyz.jar`、Nodeの場合は`npm start`のようになります。\n\n```zsh\nkeploy record -c \"python main.py\"\n```\n\n## 🧪 テストの実行\nデータベース、Redis、Kafka、またはアプリケーションが使用する他のサービスをシャットダウンします。Keployはテスト中にそれらを必要としません。\n```zsh\nkeploy test -c \"CMD_TO_RUN_APP\" --delay 10\n```\n\n## ✅ テストカバレッジの統合\nユニットテストライブラリと統合して、結合テストカバレッジを表示するには、この[テストカバレッジガイド](https://keploy.io/docs/server/sdk-installation/go/)に従ってください。\n\n> ####  **楽しんでいただけましたか:** このリポジトリに🌟スターを残してください！無料で笑顔をもたらします。😄 👏\n\n## ワンクリックセットアップ 🚀\n\nローカルマシンのインストールなしでKeployを迅速にセットアップして実行します：\n\n[![GitHub Codescape](https://img.shields.io/badge/GH%20codespace-3670A0?style=for-the-badge&logo=github&logoColor=fff)]([https://github.dev/Sonichigo/mux-sql](https://github.dev/Sonichigo/mux-sql))\n\n## 🤔 質問がありますか？\n私たちに連絡してください。お手伝いします！\n\n[![Slack](https://img.shields.io/badge/Slack-4A154B?style=for-the-badge&logo=slack&logoColor=white)](https://join.slack.com/t/keploy/shared_invite/zt-2poflru6f-_VAuvQfCBT8fDWv1WwSbkw)\n[![LinkedIn](https://img.shields.io/badge/linkedin-%230077B5.svg?style=for-the-badge&logo=linkedin&logoColor=white)](https://www.linkedin.com/company/keploy/)\n[![YouTube](https://img.shields.io/badge/YouTube-%23FF0000.svg?style=for-the-badge&logo=YouTube&logoColor=white)](https://www.youtube.com/channel/UC6OTg7F4o0WkmNtSoob34lg)\n[![Twitter](https://img.shields.io/badge/Twitter-%231DA1F2.svg?style=for-the-badge&logo=Twitter&logoColor=white)](https://twitter.com/Keployio)\n\n\n## 🌐 言語サポート\nGoのゴーファー 🐹 からPythonのスネーク 🐍 まで、以下の言語をサポートしています：\n\n![Go](https://img.shields.io/badge/go-%2300ADD8.svg?style=for-the-badge&logo=go&logoColor=white)\n![Java](https://img.shields.io/badge/java-%23ED8B00.svg?style=for-the-badge&logo=java&logoColor=white)\n![NodeJS](https://img.shields.io/badge/node.js-6DA55F?style=for-the-badge&logo=node.js&logoColor=white)\n![Rust](https://img.shields.io/badge/Rust-darkred?style=for-the-badge&logo=rust&logoColor=white)\n![C#](https://img.shields.io/badge/csharp-purple?style=for-the-badge&logo=csharp&logoColor=white)\n![Python](https://img.shields.io/badge/python-3670A0?style=for-the-badge&logo=python&logoColor=ffdd54)\n\n## 🫰 Keployの採用者 🧡\n\nあなたとあなたの組織がKeployを使用しているのですか？それは素晴らしいことです。 [**このリスト**](https://github.com/orgs/keploy/discussions/1765) に追加してください。グッズをお送りします！💖\n\n私たちは、あなたたち全員が私たちのコミュニティの一員であることを誇りに思います！💖\n\n## 🎩 魔法はどのように起こるのか？\nKeployプロキシは、アプリの**すべての**ネットワークインタラクション（CRUD操作、非冪等なAPIを含む）をキャプチャして再生します。\n\n**[Keployの仕組み](https://keploy.io/docs/keploy-explained/how-keploy-works/)** の旅に出て、カーテンの裏にあるトリックを発見してください！\n\nここにKeployの主な機能があります: 🛠\n\n- ♻️ **結合テストカバレッジ:** Keployテストをお気に入りのテストライブラリ（JUnit、go-test、py-test、jest）と統合して、結合テストカバレッジを表示します。\n\n- 🤖 **EBPFインストルメンテーション:** KeployはEBPFを使用して、コードレス、言語非依存、非常に軽量な統合を実現します。\n\n- 🌐 **CI/CD統合:** テストをローカルCLI、CIパイプライン（Jenkins、Github Actions..）、またはKubernetesクラスター全体で実行します。\n\n- 📽️ **複雑なフローの記録と再生:** Keployは、複雑で分散したAPIフローをモックとスタブとして記録して再生できます。これは、テストのためのタイムマシンを持っているようなもので、たくさんの時間を節約できます！\n\n- 🎭 **多目的モック:** Keployモックをサーバーテストとしても使用できます！\n\n## 👨🏻‍💻 一緒に構築しましょう！ 👩🏻‍💻\n初心者のコーダーでもウィザードでも 🧙‍♀️、あなたの視点は貴重です。以下をチェックしてください：\n\n📜 [貢献ガイドライン](https://github.com/keploy/keploy/blob/main/CONTRIBUTING.md)\n\n❤️ [行動規範](https://github.com/keploy/keploy/blob/main/CODE_OF_CONDUCT.md)\n\n\n## 🐲 現在の制限事項！\n- **ユニットテスト:** Keployはユニットテストフレームワーク（Go test、JUnit..）と一緒に実行するように設計されており、全体的なコードカバレッジに追加することができますが、それでも統合テストを生成します。\n- **プロダクション環境:** Keployは現在、開発者向けのテスト生成に焦点を当てています。これらのテストは任意の環境からキャプチャできますが、高ボリュームのプロダクション環境ではテストしていません。これは、過剰な冗長テストのキャプチャを避けるために堅牢な重複排除が必要です。堅牢な重複排除システムの構築についてのアイデアがあります [#27](https://github.com/keploy/keploy/issues/27)\n\n## ✨ リソース！\n🤔 [FAQ](https://keploy.io/docs/keploy-explained/faq/)\n\n🕵️‍️ [なぜKeploy](https://keploy.io/docs/keploy-explained/why-keploy/)\n\n⚙️ [インストールガイド](https://keploy.io/docs/application-development/)\n\n📖 [貢献ガイド](https://keploy.io/docs/keploy-explained/contribution-guide/)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.5244140625,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nWe value security for the project very highly. We encourage all users to report any vulnerabilities they discover to us.\nIf you find a security vulnerability in the Keploy project, please report it responsibly by sending an email to hello@keploy.io\n\nAt this juncture, we don't have a bug bounty program. We are a small team trying to solve a big problem. We urge you to report any vulnerabilities responsibly\nso that we can continue building a secure application for the entire community."
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "entrypoint.sh",
          "type": "blob",
          "size": 0.1181640625,
          "content": "#!/bin/sh\n\nif ! mountpoint -q /sys/kernel/debug; then\n  sudo mount -t debugfs debugfs /sys/kernel/debug\nfi\n\nsudo -E \"$@\"\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 5.52734375,
          "content": "module go.keploy.io/server/v2\n\ngo 1.22.0\n\nreplace github.com/jackc/pgproto3/v2 => github.com/keploy/pgproto3/v2 v2.0.5\n\nrequire (\n\tgithub.com/Microsoft/go-winio v0.6.1 // indirect\n\tgithub.com/cilium/ebpf v0.13.2\n\tgithub.com/cloudflare/cfssl v1.6.4\n\tgithub.com/docker/distribution v2.8.2+incompatible // indirect\n\tgithub.com/docker/docker v24.0.4+incompatible\n\tgithub.com/docker/go-connections v0.4.0 // indirect\n\tgithub.com/docker/go-units v0.5.0 // indirect\n\tgithub.com/fatih/color v1.17.0\n\tgithub.com/k0kubun/pp/v3 v3.2.0\n\tgithub.com/miekg/dns v1.1.55\n\tgithub.com/moby/term v0.5.0 // indirect\n\tgithub.com/morikuni/aec v1.0.0 // indirect\n\tgithub.com/olekukonko/tablewriter v0.0.5\n\tgithub.com/opencontainers/go-digest v1.0.0 // indirect\n\tgithub.com/opencontainers/image-spec v1.0.2 // indirect\n\tgithub.com/spf13/cobra v1.8.0\n\tgo.mongodb.org/mongo-driver v1.11.6\n\tgo.uber.org/zap v1.26.0\n\tgolang.org/x/crypto v0.24.0 // indirect\n\tgolang.org/x/sys v0.21.0\n\tgoogle.golang.org/protobuf v1.34.1 // indirect\n)\n\nrequire (\n\tgithub.com/containerd/log v0.1.0 // indirect\n\tgithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc // indirect\n\tgithub.com/fsnotify/fsnotify v1.7.0 // indirect\n\tgithub.com/getkin/kin-openapi v0.126.0\n\tgithub.com/go-errors/errors v1.4.2 // indirect\n\tgithub.com/go-ole/go-ole v1.2.6 // indirect\n\tgithub.com/go-openapi/jsonpointer v0.21.0 // indirect\n\tgithub.com/go-openapi/jsonreference v0.20.2 // indirect\n\tgithub.com/go-openapi/swag v0.23.0 // indirect\n\tgithub.com/golang/protobuf v1.5.4 // indirect\n\tgithub.com/google/certificate-transparency-go v1.2.1 // indirect\n\tgithub.com/google/gnostic-models v0.6.8 // indirect\n\tgithub.com/hashicorp/hcl v1.0.0 // indirect\n\tgithub.com/invopop/yaml v0.3.1 // indirect\n\tgithub.com/josharian/intern v1.0.0 // indirect\n\tgithub.com/magiconair/properties v1.8.7 // indirect\n\tgithub.com/mailru/easyjson v0.7.7 // indirect\n\tgithub.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826 // indirect\n\tgithub.com/pelletier/go-toml/v2 v2.2.2 // indirect\n\tgithub.com/power-devops/perfstat v0.0.0-20210106213030-5aafc221ea8c // indirect\n\tgithub.com/sagikazarmark/locafero v0.4.0 // indirect\n\tgithub.com/sagikazarmark/slog-shim v0.1.0 // indirect\n\tgithub.com/sirupsen/logrus v1.9.3 // indirect\n\tgithub.com/sourcegraph/conc v0.3.0 // indirect\n\tgithub.com/spf13/afero v1.11.0 // indirect\n\tgithub.com/spf13/cast v1.6.0 // indirect\n\tgithub.com/subosito/gotenv v1.6.0 // indirect\n\tgithub.com/tidwall/gjson v1.17.1 // indirect\n\tgithub.com/tidwall/match v1.1.1 // indirect\n\tgithub.com/tidwall/pretty v1.2.1 // indirect\n\tgithub.com/tidwall/sjson v1.2.5 // indirect\n\tgithub.com/youmark/pkcs8 v0.0.0-20201027041543-1326539a0a0a // indirect\n\tgithub.com/yusufpapurcu/wmi v1.2.4 // indirect\n\tgolang.org/x/exp v0.0.0-20240103183307-be819d1f06fc // indirect\n\tgopkg.in/ini.v1 v1.67.0 // indirect\n\tk8s.io/kube-openapi v0.0.0-20231010175941-2dd684a91f00 // indirect\n\tsigs.k8s.io/yaml v1.4.0 // indirect\n)\n\nrequire (\n\tgopkg.in/yaml.v3 v3.0.1\n\tgotest.tools/v3 v3.5.0 // indirect\n)\n\nrequire (\n\tgithub.com/go-logr/logr v1.4.1 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang/snappy v0.0.4 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/jackc/chunkreader/v2 v2.0.0 // indirect\n\tgithub.com/jackc/pgio v1.0.0 // indirect\n\tgithub.com/jmoiron/sqlx v1.3.3 // indirect\n\tgithub.com/klauspost/compress v1.17.7 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.15 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/protocolbuffers/protoscope v0.0.0-20221109213918-8e7a6aafa2c9\n\tgithub.com/rivo/uniseg v0.4.4 // indirect\n\tgithub.com/spf13/pflag v1.0.5\n\tgithub.com/weppos/publicsuffix-go v0.15.1-0.20210511084619-b1f36a2d6c0b // indirect\n\tgithub.com/zmap/zcrypto v0.0.0-20210511125630-18f1e0152cfc // indirect\n\tgithub.com/zmap/zlint/v3 v3.1.0 // indirect\n\tgo.uber.org/multierr v1.11.0 // indirect\n\tgolang.org/x/mod v0.17.0 // indirect\n\tgolang.org/x/net v0.26.0\n\tgolang.org/x/text v0.16.0\n\tgolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d // indirect\n\tk8s.io/klog/v2 v2.120.1 // indirect\n)\n\nrequire (\n\tfacette.io/natsort v0.0.0-20181210072756-2cd4dd1e2dcb\n\tgithub.com/7sDream/geko v0.1.1\n\tgithub.com/agnivade/levenshtein v1.1.1\n\tgithub.com/charmbracelet/glamour v0.6.0\n\tgithub.com/denisbrodbeck/machineid v1.0.1\n\tgithub.com/emirpasic/gods v1.18.1\n\tgithub.com/getsentry/sentry-go v0.28.1\n\tgithub.com/golang-jwt/jwt/v4 v4.5.0\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/jackc/pgproto3/v2 v2.3.2\n\tgithub.com/keploy/jsonDiff v1.0.4\n\tgithub.com/shirou/gopsutil/v3 v3.24.3\n\tgithub.com/spf13/viper v1.19.0\n\tgithub.com/wI2L/jsondiff v0.5.0\n\tgithub.com/xdg-go/pbkdf2 v1.0.0\n\tgithub.com/xdg-go/scram v1.1.1\n\tgithub.com/xdg-go/stringprep v1.0.4\n\tgolang.org/x/sync v0.7.0\n\tgolang.org/x/term v0.21.0\n\tgopkg.in/yaml.v2 v2.4.0\n\tsigs.k8s.io/kustomize/kyaml v0.17.2\n)\n\nrequire github.com/perimeterx/marshmallow v1.1.5 // indirect\n\nrequire (\n\tgithub.com/alecthomas/chroma v0.10.0 // indirect\n\tgithub.com/aymanbagabas/go-osc52 v1.0.3 // indirect\n\tgithub.com/aymerick/douceur v0.2.0 // indirect\n\tgithub.com/dlclark/regexp2 v1.4.0 // indirect\n\tgithub.com/gorilla/css v1.0.1 // indirect\n\tgithub.com/lucasb-eyer/go-colorful v1.2.0 // indirect\n\tgithub.com/microcosm-cc/bluemonday v1.0.27 // indirect\n\tgithub.com/mitchellh/mapstructure v1.5.0 // indirect\n\tgithub.com/moby/moby v26.0.2+incompatible\n\tgithub.com/muesli/reflow v0.3.0 // indirect\n\tgithub.com/muesli/termenv v0.13.0 // indirect\n\tgithub.com/yuin/goldmark v1.5.2 // indirect\n\tgithub.com/yuin/goldmark-emoji v1.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 37.3544921875,
          "content": "facette.io/natsort v0.0.0-20181210072756-2cd4dd1e2dcb h1:1pSweJFeR3Pqx7uoelppkzeegfUBXL6I2FFAbfXw570=\nfacette.io/natsort v0.0.0-20181210072756-2cd4dd1e2dcb/go.mod h1:npRYmtaITVom7rcSo+pRURltHSG2r4TQM1cdqJ2dUB0=\ngithub.com/7sDream/geko v0.1.1 h1:Ms9RVcUJDPsUuRlk3T3sGmSGAMuttqh2/3okZ4yWUpU=\ngithub.com/7sDream/geko v0.1.1/go.mod h1:NcSQXSUpcoqNP8BkOLP2TsinxRVjnMkDYCKl9L1Czxk=\ngithub.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1 h1:UQHMgLO+TxOElx5B5HZ4hJQsoJ/PvUvKRhJHDQXO8P8=\ngithub.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=\ngithub.com/Microsoft/go-winio v0.6.1 h1:9/kr64B9VUZrLm5YYwbGtUJnMgqWVOdUAXu6Migciow=\ngithub.com/Microsoft/go-winio v0.6.1/go.mod h1:LRdKpFKfdobln8UmuiYcKPot9D2v6svN5+sAH+4kjUM=\ngithub.com/agnivade/levenshtein v1.1.1 h1:QY8M92nrzkmr798gCo3kmMyqXFzdQVpxLlGPRBij0P8=\ngithub.com/agnivade/levenshtein v1.1.1/go.mod h1:veldBMzWxcCG2ZvUTKD2kJNRdCk5hVbJomOvKkmgYbo=\ngithub.com/alecthomas/chroma v0.10.0 h1:7XDcGkCQopCNKjZHfYrNLraA+M7e0fMiJ/Mfikbfjek=\ngithub.com/alecthomas/chroma v0.10.0/go.mod h1:jtJATyUxlIORhUOFNA9NZDWGAQ8wpxQQqNSB4rjA/1s=\ngithub.com/arbovm/levenshtein v0.0.0-20160628152529-48b4e1c0c4d0 h1:jfIu9sQUG6Ig+0+Ap1h4unLjW6YQJpKZVmUzxsD4E/Q=\ngithub.com/arbovm/levenshtein v0.0.0-20160628152529-48b4e1c0c4d0/go.mod h1:t2tdKJDJF9BV14lnkjHmOQgcvEKgtqs5a1N3LNdJhGE=\ngithub.com/aymanbagabas/go-osc52 v1.0.3 h1:DTwqENW7X9arYimJrPeGZcV0ln14sGMt3pHZspWD+Mg=\ngithub.com/aymanbagabas/go-osc52 v1.0.3/go.mod h1:zT8H+Rk4VSabYN90pWyugflM3ZhpTZNC7cASDfUCdT4=\ngithub.com/aymerick/douceur v0.2.0 h1:Mv+mAeH1Q+n9Fr+oyamOlAkUNPWPlA8PPGR0QAaYuPk=\ngithub.com/aymerick/douceur v0.2.0/go.mod h1:wlT5vV2O3h55X9m7iVYN0TBM0NH/MmbLnd30/FjWUq4=\ngithub.com/charmbracelet/glamour v0.6.0 h1:wi8fse3Y7nfcabbbDuwolqTqMQPMnVPeZhDM273bISc=\ngithub.com/charmbracelet/glamour v0.6.0/go.mod h1:taqWV4swIMMbWALc0m7AfE9JkPSU8om2538k9ITBxOc=\ngithub.com/cilium/ebpf v0.13.2 h1:uhLimLX+jF9BTPPvoCUYh/mBeoONkjgaJ9w9fn0mRj4=\ngithub.com/cilium/ebpf v0.13.2/go.mod h1:DHp1WyrLeiBh19Cf/tfiSMhqheEiK8fXFZ4No0P1Hso=\ngithub.com/cloudflare/cfssl v1.6.4 h1:NMOvfrEjFfC63K3SGXgAnFdsgkmiq4kATme5BfcqrO8=\ngithub.com/cloudflare/cfssl v1.6.4/go.mod h1:8b3CQMxfWPAeom3zBnGJ6sd+G1NkL5TXqmDXacb+1J0=\ngithub.com/containerd/log v0.1.0 h1:TCJt7ioM2cr/tfR8GPbGf9/VRAX8D2B4PjzCpfX540I=\ngithub.com/containerd/log v0.1.0/go.mod h1:VRRf09a7mHDIRezVKTRCrOq78v577GXq3bSa3EhrzVo=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.3/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/denisbrodbeck/machineid v1.0.1 h1:geKr9qtkB876mXguW2X6TU4ZynleN6ezuMSRhl4D7AQ=\ngithub.com/denisbrodbeck/machineid v1.0.1/go.mod h1:dJUwb7PTidGDeYyUBmXZ2GphQBbjJCrnectwCyxcUSI=\ngithub.com/dgryski/trifles v0.0.0-20200323201526-dd97f9abfb48 h1:fRzb/w+pyskVMQ+UbP35JkH8yB7MYb4q/qhBarqZE6g=\ngithub.com/dgryski/trifles v0.0.0-20200323201526-dd97f9abfb48/go.mod h1:if7Fbed8SFyPtHLHbg49SI7NAdJiC5WIA09pe59rfAA=\ngithub.com/dlclark/regexp2 v1.4.0 h1:F1rxgk7p4uKjwIQxBs9oAXe5CqrXlCduYEJvrF4u93E=\ngithub.com/dlclark/regexp2 v1.4.0/go.mod h1:2pZnwuY/m+8K6iRw6wQdMtk+rH5tNGR1i55kozfMjCc=\ngithub.com/docker/distribution v2.8.2+incompatible h1:T3de5rq0dB1j30rp0sA2rER+m322EBzniBPB6ZIzuh8=\ngithub.com/docker/distribution v2.8.2+incompatible/go.mod h1:J2gT2udsDAN96Uj4KfcMRqY0/ypR+oyYUYmja8H+y+w=\ngithub.com/docker/docker v24.0.4+incompatible h1:s/LVDftw9hjblvqIeTiGYXBCD95nOEEl7qRsRrIOuQI=\ngithub.com/docker/docker v24.0.4+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\ngithub.com/docker/go-connections v0.4.0 h1:El9xVISelRB7BuFusrZozjnkIM5YnzCViNKohAFqRJQ=\ngithub.com/docker/go-connections v0.4.0/go.mod h1:Gbd7IOopHjR8Iph03tsViu4nIes5XhDvyHbTtUxmeec=\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\ngithub.com/emirpasic/gods v1.18.1 h1:FXtiHYKDGKCW2KzwZKx0iC0PQmdlorYgdFG9jPXJ1Bc=\ngithub.com/emirpasic/gods v1.18.1/go.mod h1:8tpGGwCnJ5H4r6BWwaV6OrWmMoPhUl5jm/FMNAnJvWQ=\ngithub.com/fatih/color v1.17.0 h1:GlRw1BRJxkpqUCBKzKOw098ed57fEsKeNjpTe3cSjK4=\ngithub.com/fatih/color v1.17.0/go.mod h1:YZ7TlrGPkiz6ku9fK3TLD/pl3CpsiFyu8N92HLgmosI=\ngithub.com/frankban/quicktest v1.14.6 h1:7Xjx+VpznH+oBnejlPUj8oUpdxnVs4f8XU8WnHkI4W8=\ngithub.com/frankban/quicktest v1.14.6/go.mod h1:4ptaffx2x8+WTWXmUCuVU6aPUX1/Mz7zb5vbUoiM6w0=\ngithub.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=\ngithub.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=\ngithub.com/getkin/kin-openapi v0.126.0 h1:c2cSgLnAsS0xYfKsgt5oBV6MYRM/giU8/RtwUY4wyfY=\ngithub.com/getkin/kin-openapi v0.126.0/go.mod h1:7mONz8IwmSRg6RttPu6v8U/OJ+gr+J99qSFNjPGSQqw=\ngithub.com/getsentry/sentry-go v0.28.1 h1:zzaSm/vHmGllRM6Tpx1492r0YDzauArdBfkJRtY6P5k=\ngithub.com/getsentry/sentry-go v0.28.1/go.mod h1:1fQZ+7l7eeJ3wYi82q5Hg8GqAPgefRq+FP/QhafYVgg=\ngithub.com/go-errors/errors v1.4.2 h1:J6MZopCL4uSllY1OfXM374weqZFFItUbrImctkmUxIA=\ngithub.com/go-errors/errors v1.4.2/go.mod h1:sIVyrIiJhuEF+Pj9Ebtd6P/rEYROXFi3BopGUQ5a5Og=\ngithub.com/go-logr/logr v1.4.1 h1:pKouT5E8xu9zeFC39JXRDukb6JFQPXM5p5I91188VAQ=\ngithub.com/go-logr/logr v1.4.1/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-ole/go-ole v1.2.6 h1:/Fpf6oFPoeFik9ty7siob0G6Ke8QvQEuVcuChpwXzpY=\ngithub.com/go-ole/go-ole v1.2.6/go.mod h1:pprOEPIfldk/42T2oK7lQ4v4JSDwmV0As9GaiUsvbm0=\ngithub.com/go-openapi/jsonpointer v0.19.6/go.mod h1:osyAmYz/mB/C3I+WsTTSgw1ONzaLJoLCyoi6/zppojs=\ngithub.com/go-openapi/jsonpointer v0.21.0 h1:YgdVicSA9vH5RiHs9TZW5oyafXZFc6+2Vc1rr/O9oNQ=\ngithub.com/go-openapi/jsonpointer v0.21.0/go.mod h1:IUyH9l/+uyhIYQ/PXVA41Rexl+kOkAPDdXEYns6fzUY=\ngithub.com/go-openapi/jsonreference v0.20.2 h1:3sVjiK66+uXK/6oQ8xgcRKcFgQ5KXa2KvnJRumpMGbE=\ngithub.com/go-openapi/jsonreference v0.20.2/go.mod h1:Bl1zwGIM8/wsvqjsOQLJ/SH+En5Ap4rVB5KVcIDZG2k=\ngithub.com/go-openapi/swag v0.22.3/go.mod h1:UzaqsxGiab7freDnrUUra0MwWfN/q7tE4j+VcZ0yl14=\ngithub.com/go-openapi/swag v0.23.0 h1:vsEVJDUo2hPJ2tu0/Xc+4noaxyEffXNIs3cOULZ+GrE=\ngithub.com/go-openapi/swag v0.23.0/go.mod h1:esZ8ITTYEsH1V2trKHjAN8Ai7xHb8RV+YSZ577vPjgQ=\ngithub.com/go-quicktest/qt v1.101.0 h1:O1K29Txy5P2OK0dGo59b7b0LR6wKfIhttaAhHUyn7eI=\ngithub.com/go-quicktest/qt v1.101.0/go.mod h1:14Bz/f7NwaXPtdYEgzsx46kqSxVwTbzVZsDC26tQJow=\ngithub.com/go-sql-driver/mysql v1.5.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=\ngithub.com/go-test/deep v1.0.8 h1:TDsG77qcSprGbC6vTN8OuXp5g+J+b5Pcguhf7Zt61VM=\ngithub.com/go-test/deep v1.0.8/go.mod h1:5C2ZWiW0ErCdrYzpqxLbTX7MG14M9iiw8DgHncVwcsE=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang-jwt/jwt/v4 v4.5.0 h1:7cYmW1XlMY7h7ii7UhUyChSgS5wUJEnm9uZVTGqOWzg=\ngithub.com/golang-jwt/jwt/v4 v4.5.0/go.mod h1:m21LjoU+eqJr34lmDMbreY2eSTRJ1cv77w39/MY0Ch0=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/golang/snappy v0.0.1/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/golang/snappy v0.0.4 h1:yAGX7huGHXlcLOEtBnF4w7FQwA26wojNCwOYAEhLjQM=\ngithub.com/golang/snappy v0.0.4/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/google/certificate-transparency-go v1.2.1 h1:4iW/NwzqOqYEEoCBEFP+jPbBXbLqMpq3CifMyOnDUME=\ngithub.com/google/certificate-transparency-go v1.2.1/go.mod h1:bvn/ytAccv+I6+DGkqpvSsEdiVGramgaSC6RD3tEmeE=\ngithub.com/google/gnostic-models v0.6.8 h1:yo/ABAfM5IMRsS1VnXjTBvUb61tFIHozhlYvRgGre9I=\ngithub.com/google/gnostic-models v0.6.8/go.mod h1:5n7qKqH0f5wFt+aWF8CW6pZLLNOfYuF5OpfBSENuI8U=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.6/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.2.0 h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=\ngithub.com/google/gofuzz v1.2.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gorilla/css v1.0.0/go.mod h1:Dn721qIggHpt4+EFCcTLTU/vk5ySda2ReITrtgBl60c=\ngithub.com/gorilla/css v1.0.1 h1:ntNaBIghp6JmvWnxbZKANoLyuXTPZ4cAMlo6RyhlbO8=\ngithub.com/gorilla/css v1.0.1/go.mod h1:BvnYkspnSzMmwRK+b8/xgNPLiIuNZr6vbZBTPQ2A3b0=\ngithub.com/hashicorp/hcl v1.0.0 h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=\ngithub.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/invopop/yaml v0.3.1 h1:f0+ZpmhfBSS4MhG+4HYseMdJhoeeopbSKbq5Rpeelso=\ngithub.com/invopop/yaml v0.3.1/go.mod h1:PMOp3nn4/12yEZUFfmOuNHJsZToEEOwoWsT+D81KkeA=\ngithub.com/jackc/chunkreader/v2 v2.0.0 h1:DUwgMQuuPnS0rhMXenUtZpqZqrR/30NWY+qQvTpSvEs=\ngithub.com/jackc/chunkreader/v2 v2.0.0/go.mod h1:odVSm741yZoC3dpHEUXIqA9tQRhFrgOHwnPIn9lDKlk=\ngithub.com/jackc/pgio v1.0.0 h1:g12B9UwVnzGhueNavwioyEEpAmqMe1E/BN9ES+8ovkE=\ngithub.com/jackc/pgio v1.0.0/go.mod h1:oP+2QK2wFfUWgr+gxjoBH9KGBb31Eio69xUb0w5bYf8=\ngithub.com/jmoiron/sqlx v1.3.3 h1:j82X0bf7oQ27XeqxicSZsTU5suPwKElg3oyxNn43iTk=\ngithub.com/jmoiron/sqlx v1.3.3/go.mod h1:2BljVx/86SuTyjE+aPYlHCTNvZrnJXghYGpNiXLBMCQ=\ngithub.com/josharian/intern v1.0.0 h1:vlS4z54oSdjm0bgjRigI+G1HpF+tI+9rE5LLzOg8HmY=\ngithub.com/josharian/intern v1.0.0/go.mod h1:5DoeVV0s6jJacbCEi61lwdGj/aVlrQvzHFFd8Hwg//Y=\ngithub.com/k0kubun/pp/v3 v3.2.0 h1:h33hNTZ9nVFNP3u2Fsgz8JXiF5JINoZfFq4SvKJwNcs=\ngithub.com/k0kubun/pp/v3 v3.2.0/go.mod h1:ODtJQbQcIRfAD3N+theGCV1m/CBxweERz2dapdz1EwA=\ngithub.com/keploy/jsonDiff v1.0.4 h1:5O6QhK9hlFxxgVplOZ0s1uwzrKm+rVQttnGPw+2k/MU=\ngithub.com/keploy/jsonDiff v1.0.4/go.mod h1:wUuLbVs3Oe3mIQ61C7G88bppP//ArLtoDU0S9Awwv+s=\ngithub.com/keploy/pgproto3/v2 v2.0.5 h1:8spdNKZ+nOnHVxiimDsqulBRN6viPXPghkA7xppnzJ8=\ngithub.com/keploy/pgproto3/v2 v2.0.5/go.mod h1:WfJCnwN3HIg9Ish/j3sgWXnAfK8A9Y0bwXYU5xKaEdA=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/compress v1.13.6/go.mod h1:/3/Vjq9QcHkK5uEr5lBEmyoZ1iFhe47etQ6QUkpK6sk=\ngithub.com/klauspost/compress v1.17.7 h1:ehO88t2UGzQK66LMdE8tibEd1ErmzZjNEqWkjLAKQQg=\ngithub.com/klauspost/compress v1.17.7/go.mod h1:Di0epgTjJY877eYKx5yC51cX2A2Vl2ibi7bDH9ttBbw=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/lib/pq v1.2.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/lucasb-eyer/go-colorful v1.2.0 h1:1nnpGOrhyZZuNyfu1QjKiUICQ74+3FNCN69Aj6K7nkY=\ngithub.com/lucasb-eyer/go-colorful v1.2.0/go.mod h1:R4dSotOR9KMtayYi1e77YzuveK+i7ruzyGqttikkLy0=\ngithub.com/lufia/plan9stats v0.0.0-20211012122336-39d0f177ccd0/go.mod h1:zJYVVT2jmtg6P3p1VtQj7WsuWi/y4VnjVBn7F8KPB3I=\ngithub.com/magiconair/properties v1.8.7 h1:IeQXZAiQcpL9mgcAe1Nu6cX9LLw6ExEHKjN0VQdvPDY=\ngithub.com/magiconair/properties v1.8.7/go.mod h1:Dhd985XPs7jluiymwWYZ0G4Z61jb3vdS329zhj2hYo0=\ngithub.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=\ngithub.com/mailru/easyjson v0.7.7/go.mod h1:xzfreul335JAWq5oZzymOObrkdz5UnU4kGfJJLY9Nlc=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-runewidth v0.0.9/go.mod h1:H031xJmbD/WCDINGzjvQ9THkh0rPKHF+m2gUSrubnMI=\ngithub.com/mattn/go-runewidth v0.0.12/go.mod h1:RAqKPSqVFrSLVXbA8x7dzmKdmGzieGRCM46jaSJTDAk=\ngithub.com/mattn/go-runewidth v0.0.14/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\ngithub.com/mattn/go-runewidth v0.0.15 h1:UNAjwbU9l54TA3KzvqLGxwWjHmMgBUVhBiTjelZgg3U=\ngithub.com/mattn/go-runewidth v0.0.15/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\ngithub.com/mattn/go-sqlite3 v1.14.6/go.mod h1:NyWgC/yNuGj7Q9rpYnZvas74GogHl5/Z4A/KQRfk6bU=\ngithub.com/microcosm-cc/bluemonday v1.0.21/go.mod h1:ytNkv4RrDrLJ2pqlsSI46O6IVXmZOBBD4SaJyDwwTkM=\ngithub.com/microcosm-cc/bluemonday v1.0.27 h1:MpEUotklkwCSLeH+Qdx1VJgNqLlpY2KXwXFM08ygZfk=\ngithub.com/microcosm-cc/bluemonday v1.0.27/go.mod h1:jFi9vgW+H7c3V0lb6nR74Ib/DIB5OBs92Dimizgw2cA=\ngithub.com/miekg/dns v1.1.55 h1:GoQ4hpsj0nFLYe+bWiCToyrBEJXkQfOOIvFGFy0lEgo=\ngithub.com/miekg/dns v1.1.55/go.mod h1:uInx36IzPl7FYnDcMeVWxj9byh7DutNykX4G9Sj60FY=\ngithub.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=\ngithub.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/moby/moby v26.0.2+incompatible h1:t41TD3nRvK8E6bZFJdKrmNlH8Xe3epTmdNXf/mnfLKk=\ngithub.com/moby/moby v26.0.2+incompatible/go.mod h1:fDXVQ6+S340veQPv35CzDahGBmHsiclFwfEygB/TWMc=\ngithub.com/moby/term v0.5.0 h1:xt8Q1nalod/v7BqbG21f8mQPqH+xAaC9C3N3wfWbVP0=\ngithub.com/moby/term v0.5.0/go.mod h1:8FzsFHVUBGZdbDsJw/ot+X+d5HLUbvklYLJ9uGfcI3Y=\ngithub.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826 h1:RWengNIwukTxcDr9M+97sNutRR1RKhG96O6jWumTTnw=\ngithub.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826/go.mod h1:TaXosZuwdSHYgviHp1DAtfrULt5eUgsSMsZf+YrPgl8=\ngithub.com/monochromegane/go-gitignore v0.0.0-20200626010858-205db1a8cc00 h1:n6/2gBQ3RWajuToeY6ZtZTIKv2v7ThUy5KKusIT0yc0=\ngithub.com/monochromegane/go-gitignore v0.0.0-20200626010858-205db1a8cc00/go.mod h1:Pm3mSP3c5uWn86xMLZ5Sa7JB9GsEZySvHYXCTK4E9q4=\ngithub.com/montanaflynn/stats v0.0.0-20171201202039-1bf9dbcd8cbe h1:iruDEfMl2E6fbMZ9s0scYfZQ84/6SPL6zC8ACM2oIL0=\ngithub.com/montanaflynn/stats v0.0.0-20171201202039-1bf9dbcd8cbe/go.mod h1:wL8QJuTMNUDYhXwkmfOly8iTdp5TEcJFWZD2D7SIkUc=\ngithub.com/morikuni/aec v1.0.0 h1:nP9CBfwrvYnBRgY6qfDQkygYDmYwOilePFkwzv4dU8A=\ngithub.com/morikuni/aec v1.0.0/go.mod h1:BbKIizmSmc5MMPqRYbxO4ZU0S0+P200+tUnFx7PXmsc=\ngithub.com/mreiferson/go-httpclient v0.0.0-20160630210159-31f0106b4474/go.mod h1:OQA4XLvDbMgS8P0CevmM4m9Q3Jq4phKUzcocxuGJ5m8=\ngithub.com/muesli/reflow v0.3.0 h1:IFsN6K9NfGtjeggFP+68I4chLZV2yIKsXJFNZ+eWh6s=\ngithub.com/muesli/reflow v0.3.0/go.mod h1:pbwTDkVPibjO2kyvBQRBxTWEEGDGq0FlB1BIKtnHY/8=\ngithub.com/muesli/termenv v0.13.0 h1:wK20DRpJdDX8b7Ek2QfhvqhRQFZ237RGRO0RQ/Iqdy0=\ngithub.com/muesli/termenv v0.13.0/go.mod h1:sP1+uffeLaEYpyOTb8pLCUctGcGLnoFjSn4YJK5e2bc=\ngithub.com/olekukonko/tablewriter v0.0.5 h1:P2Ga83D34wi1o9J6Wh1mRuqd4mF/x/lgBS7N7AbDhec=\ngithub.com/olekukonko/tablewriter v0.0.5/go.mod h1:hPp6KlRPjbx+hW8ykQs1w3UBbZlj6HuIJcUGPhkA7kY=\ngithub.com/op/go-logging v0.0.0-20160315200505-970db520ece7/go.mod h1:HzydrMdWErDVzsI23lYNej1Htcns9BCg93Dk0bBINWk=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.0.2 h1:9yCKha/T5XdGtO0q9Q9a6T5NUCsTn/DrBg0D7ufOcFM=\ngithub.com/opencontainers/image-spec v1.0.2/go.mod h1:BtxoFyWECRxE4U/7sNtV5W15zMzWCbyJoFRP3s7yZA0=\ngithub.com/pelletier/go-toml/v2 v2.2.2 h1:aYUidT7k73Pcl9nb2gScu7NSrKCSHIDE89b3+6Wq+LM=\ngithub.com/pelletier/go-toml/v2 v2.2.2/go.mod h1:1t835xjRzz80PqgE6HHgN2JOsmgYu/h4qDAS4n929Rs=\ngithub.com/perimeterx/marshmallow v1.1.5 h1:a2LALqQ1BlHM8PZblsDdidgv1mWi1DgC2UmX50IvK2s=\ngithub.com/perimeterx/marshmallow v1.1.5/go.mod h1:dsXbUu8CRzfYP5a87xpp0xq9S3u0Vchtcl8we9tYaXw=\ngithub.com/pingcap/errors v0.11.4 h1:lFuQV/oaUMGcD2tqt+01ROSmJs75VG1ToEOkZIZ4nE4=\ngithub.com/pingcap/errors v0.11.4/go.mod h1:Oi8TUi2kEtXXLMJk9l1cGmz20kV3TaQ0usTwv5KuLY8=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/power-devops/perfstat v0.0.0-20210106213030-5aafc221ea8c h1:ncq/mPwQF4JjgDlrVEn3C11VoGHZN7m8qihwgMEtzYw=\ngithub.com/power-devops/perfstat v0.0.0-20210106213030-5aafc221ea8c/go.mod h1:OmDBASR4679mdNQnz2pUhc2G8CO2JrUAVFDRBDP/hJE=\ngithub.com/protocolbuffers/protoscope v0.0.0-20221109213918-8e7a6aafa2c9 h1:arwj11zP0yJIxIRiDn22E0H8PxfF7TsTrc2wIPFIsf4=\ngithub.com/protocolbuffers/protoscope v0.0.0-20221109213918-8e7a6aafa2c9/go.mod h1:SKZx6stCn03JN3BOWTwvVIO2ajMkb/zQdTceXYhKw/4=\ngithub.com/rivo/uniseg v0.1.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rivo/uniseg v0.4.4 h1:8TfxU8dW6PdqD27gjM8MVNuicgxIjxpm4K7x4jp8sis=\ngithub.com/rivo/uniseg v0.4.4/go.mod h1:FN3SvrM+Zdj16jyLfmOkMNblXMcoc8DfTHruCPUcx88=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sagikazarmark/locafero v0.4.0 h1:HApY1R9zGo4DBgr7dqsTH/JJxLTTsOt7u6keLGt6kNQ=\ngithub.com/sagikazarmark/locafero v0.4.0/go.mod h1:Pe1W6UlPYUk/+wc/6KFhbORCfqzgYEpgQ3O5fPuL3H4=\ngithub.com/sagikazarmark/slog-shim v0.1.0 h1:diDBnUNK9N/354PgrxMywXnAwEr1QZcOr6gto+ugjYE=\ngithub.com/sagikazarmark/slog-shim v0.1.0/go.mod h1:SrcSrq8aKtyuqEI1uvTDTK1arOWRIczQRv+GVI1AkeQ=\ngithub.com/shirou/gopsutil/v3 v3.24.3 h1:eoUGJSmdfLzJ3mxIhmOAhgKEKgQkeOwKpz1NbhVnuPE=\ngithub.com/shirou/gopsutil/v3 v3.24.3/go.mod h1:JpND7O217xa72ewWz9zN2eIIkPWsDN/3pl0H8Qt0uwg=\ngithub.com/shoenig/go-m1cpu v0.1.6/go.mod h1:1JJMcUBvfNwpq05QDQVAnx3gUHr9IYF7GNg9SUEw2VQ=\ngithub.com/shoenig/test v0.6.4/go.mod h1:byHiCGXqrVaflBLAMq/srcZIHynQPQgeyvkvXnjqq0k=\ngithub.com/sirupsen/logrus v1.3.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.7.0/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/sourcegraph/conc v0.3.0 h1:OQTbbt6P72L20UqAkXXuLOj79LfEanQ+YQFNpLA9ySo=\ngithub.com/sourcegraph/conc v0.3.0/go.mod h1:Sdozi7LEKbFPqYX2/J+iBAM6HpqSLTASQIKqDmF7Mt0=\ngithub.com/spf13/afero v1.11.0 h1:WJQKhtpdm3v2IzqG8VMqrr6Rf3UYpEF239Jy9wNepM8=\ngithub.com/spf13/afero v1.11.0/go.mod h1:GH9Y3pIexgf1MTIWtNGyogA5MwRIDXGUr+hbWNoBjkY=\ngithub.com/spf13/cast v1.6.0 h1:GEiTHELF+vaR5dhz3VqZfFSzZjYbgeKDpBxQVS4GYJ0=\ngithub.com/spf13/cast v1.6.0/go.mod h1:ancEpBxwJDODSW/UG4rDrAqiKolqNNh2DX3mk86cAdo=\ngithub.com/spf13/cobra v1.8.0 h1:7aJaZx1B85qltLMc546zn58BxxfZdR/W22ej9CFoEf0=\ngithub.com/spf13/cobra v1.8.0/go.mod h1:WXLWApfZ71AjXPya3WOlMsY9yMs7YeiHhFVlvLyhcho=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/spf13/viper v1.19.0 h1:RWq5SEjt8o25SROyN3z2OrDB9l7RPd3lwTWU8EcEdcI=\ngithub.com/spf13/viper v1.19.0/go.mod h1:GQUN9bilAbhU/jgc1bKs99f/suXKeUMct8Adx5+Ntkg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/subosito/gotenv v1.6.0 h1:9NlTDc1FTs4qu0DDq7AEtTPNw6SVm7uBMsUCUjABIf8=\ngithub.com/subosito/gotenv v1.6.0/go.mod h1:Dk4QP5c2W3ibzajGcXpNraDfq2IrhjMIvMSWPKKo0FU=\ngithub.com/tidwall/gjson v1.14.2/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=\ngithub.com/tidwall/gjson v1.17.1 h1:wlYEnwqAHgzmhNUFfw7Xalt2JzQvsMx2Se4PcoFCT/U=\ngithub.com/tidwall/gjson v1.17.1/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=\ngithub.com/tidwall/match v1.1.1 h1:+Ho715JplO36QYgwN9PGYNhgZvoUSc9X2c80KVTi+GA=\ngithub.com/tidwall/match v1.1.1/go.mod h1:eRSPERbgtNPcGhD8UCthc6PmLEQXEWd3PRB5JTxsfmM=\ngithub.com/tidwall/pretty v1.0.0/go.mod h1:XNkn88O1ChpSDQmQeStsy+sBenx6DDtFZJxhVysOjyk=\ngithub.com/tidwall/pretty v1.2.0/go.mod h1:ITEVvHYasfjBbM0u2Pg8T2nJnzm8xPwvNhhsoaGGjNU=\ngithub.com/tidwall/pretty v1.2.1 h1:qjsOFOWWQl+N3RsoF5/ssm1pHmJJwhjlSbZ51I6wMl4=\ngithub.com/tidwall/pretty v1.2.1/go.mod h1:ITEVvHYasfjBbM0u2Pg8T2nJnzm8xPwvNhhsoaGGjNU=\ngithub.com/tidwall/sjson v1.2.5 h1:kLy8mja+1c9jlljvWTlSazM7cKDRfJuR/bOJhcY5NcY=\ngithub.com/tidwall/sjson v1.2.5/go.mod h1:Fvgq9kS/6ociJEDnK0Fk1cpYF4FIW6ZF7LAe+6jwd28=\ngithub.com/tklauser/go-sysconf v0.3.12/go.mod h1:Ho14jnntGE1fpdOqQEEaiKRpvIavV0hSfmBq8nJbHYI=\ngithub.com/tklauser/numcpus v0.6.1/go.mod h1:1XfjsgE2zo8GVw7POkMbHENHzVg3GzmoZ9fESEdAacY=\ngithub.com/ugorji/go/codec v1.2.7 h1:YPXUKf7fYbp/y8xloBqZOw2qaVggbfwMlI8WM3wZUJ0=\ngithub.com/ugorji/go/codec v1.2.7/go.mod h1:WGN1fab3R1fzQlVQTkfxVtIBhWDRqOviHU95kRgeqEY=\ngithub.com/wI2L/jsondiff v0.5.0 h1:RRMTi/mH+R2aXcPe1VYyvGINJqQfC3R+KSEakuU1Ikw=\ngithub.com/wI2L/jsondiff v0.5.0/go.mod h1:qqG6hnK0Lsrz2BpIVCxWiK9ItsBCpIZQiv0izJjOZ9s=\ngithub.com/weppos/publicsuffix-go v0.13.1-0.20210123135404-5fd73613514e/go.mod h1:HYux0V0Zi04bHNwOHy4cXJVz/TQjYonnF6aoYhj+3QE=\ngithub.com/weppos/publicsuffix-go v0.15.1-0.20210511084619-b1f36a2d6c0b h1:FsyNrX12e5BkplJq7wKOLk0+C6LZ+KGXvuEcKUYm5ss=\ngithub.com/weppos/publicsuffix-go v0.15.1-0.20210511084619-b1f36a2d6c0b/go.mod h1:HYux0V0Zi04bHNwOHy4cXJVz/TQjYonnF6aoYhj+3QE=\ngithub.com/xdg-go/pbkdf2 v1.0.0 h1:Su7DPu48wXMwC3bs7MCNG+z4FhcyEuz5dlvchbq0B0c=\ngithub.com/xdg-go/pbkdf2 v1.0.0/go.mod h1:jrpuAogTd400dnrH08LKmI/xc1MbPOebTwRqcT5RDeI=\ngithub.com/xdg-go/scram v1.1.1 h1:VOMT+81stJgXW3CpHyqHN3AXDYIMsx56mEFrB37Mb/E=\ngithub.com/xdg-go/scram v1.1.1/go.mod h1:RaEWvsqvNKKvBPvcKeFjrG2cJqOkHTiyTpzz23ni57g=\ngithub.com/xdg-go/stringprep v1.0.3/go.mod h1:W3f5j4i+9rC0kuIEJL0ky1VpHXQU3ocBgklLGvcBnW8=\ngithub.com/xdg-go/stringprep v1.0.4 h1:XLI/Ng3O1Atzq0oBs3TWm+5ZVgkq2aqdlvP9JtoZ6c8=\ngithub.com/xdg-go/stringprep v1.0.4/go.mod h1:mPGuuIYwz7CmR2bT9j4GbQqutWS1zV24gijq1dTyGkM=\ngithub.com/xlab/treeprint v1.2.0 h1:HzHnuAF1plUN2zGlAFHbSQP2qJ0ZAD3XF5XD7OesXRQ=\ngithub.com/xlab/treeprint v1.2.0/go.mod h1:gj5Gd3gPdKtR1ikdDK6fnFLdmIS0X30kTTuNd/WEJu0=\ngithub.com/youmark/pkcs8 v0.0.0-20181117223130-1be2e3e5546d/go.mod h1:rHwXgn7JulP+udvsHwJoVG1YGAP6VLg4y9I5dyZdqmA=\ngithub.com/youmark/pkcs8 v0.0.0-20201027041543-1326539a0a0a h1:fZHgsYlfvtyqToslyjUt3VOPF4J7aK/3MPcK7xp3PDk=\ngithub.com/youmark/pkcs8 v0.0.0-20201027041543-1326539a0a0a/go.mod h1:ul22v+Nro/R083muKhosV54bj5niojjWZvU8xrevuH4=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngithub.com/yuin/goldmark v1.5.2 h1:ALmeCk/px5FSm1MAcFBAsVKZjDuMVj8Tm7FFIlMJnqU=\ngithub.com/yuin/goldmark v1.5.2/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngithub.com/yuin/goldmark-emoji v1.0.1 h1:ctuWEyzGBwiucEqxzwe0SOYDXPAucOrE9NQC18Wa1os=\ngithub.com/yuin/goldmark-emoji v1.0.1/go.mod h1:2w1E6FEWLcDQkoTE+7HU6QF1F6SLlNGjRIBbIZQFqkQ=\ngithub.com/yusufpapurcu/wmi v1.2.4 h1:zFUKzehAFReQwLys1b/iSMl+JQGSCSjtVqQn9bBrPo0=\ngithub.com/yusufpapurcu/wmi v1.2.4/go.mod h1:SBZ9tNy3G9/m5Oi98Zks0QjeHVDvuK0qfxQmPyzfmi0=\ngithub.com/zmap/rc2 v0.0.0-20131011165748-24b9757f5521/go.mod h1:3YZ9o3WnatTIZhuOtot4IcUfzoKVjUHqu6WALIyI0nE=\ngithub.com/zmap/zcertificate v0.0.0-20180516150559-0e3d58b1bac4/go.mod h1:5iU54tB79AMBcySS0R2XIyZBAVmeHranShAFELYx7is=\ngithub.com/zmap/zcrypto v0.0.0-20210123152837-9cf5beac6d91/go.mod h1:R/deQh6+tSWlgI9tb4jNmXxn8nSCabl5ZQsBX9//I/E=\ngithub.com/zmap/zcrypto v0.0.0-20210511125630-18f1e0152cfc h1:zkGwegkOW709y0oiAraH/3D8njopUR/pARHv4tZZ6pw=\ngithub.com/zmap/zcrypto v0.0.0-20210511125630-18f1e0152cfc/go.mod h1:FM4U1E3NzlNMRnSUTU3P1UdukWhYGifqEsjk9fn7BCk=\ngithub.com/zmap/zlint/v3 v3.1.0 h1:WjVytZo79m/L1+/Mlphl09WBob6YTGljN5IGWZFpAv0=\ngithub.com/zmap/zlint/v3 v3.1.0/go.mod h1:L7t8s3sEKkb0A2BxGy1IWrxt1ZATa1R4QfJZaQOD3zU=\ngo.mongodb.org/mongo-driver v1.11.6 h1:XM7G6PjiGAO5betLF13BIa5TlLUUE3uJ/2Ox3Lz1K+o=\ngo.mongodb.org/mongo-driver v1.11.6/go.mod h1:G9TgswdsWjX4tmDA5zfs2+6AEPpYJwqblyjsfuh8oXY=\ngo.uber.org/goleak v1.2.0 h1:xqgm/S+aQvhWFTtR0XK3Jvg7z8kGV8P4X14IzwN3Eqk=\ngo.uber.org/goleak v1.2.0/go.mod h1:XJYK+MuIchqpmGmUSAzotztawfKvYLUIgg7guXrwVUo=\ngo.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=\ngo.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=\ngo.uber.org/zap v1.26.0 h1:sI7k6L95XOKS281NhVKOFCUNIvv9e0w4BF8N3u+tCRo=\ngo.uber.org/zap v1.26.0/go.mod h1:dtElttAiwGvoJ/vj4IwHBS/gXsEu/pZ50mUIRWuG0so=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200302210943-78000ba7a073/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20201124201722-c8d3bf9c5392/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.0.0-20220622213112-05595931fe9d/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\ngolang.org/x/crypto v0.24.0 h1:mnl8DM0o513X8fdIkmyFE/5hTYxbwYOjDS/+rK6qpRI=\ngolang.org/x/crypto v0.24.0/go.mod h1:Z1PMYSOR5nyMcyAVAIQSKCDwalqy85Aqn1x3Ws4L5DM=\ngolang.org/x/exp v0.0.0-20240103183307-be819d1f06fc h1:ao2WRsKSzW6KuUY9IWPwWahcHCgR0s52IfwutMfEbdM=\ngolang.org/x/exp v0.0.0-20240103183307-be819d1f06fc/go.mod h1:iRJReGqOEeBhDZGkGbynYwcHlctCvnjTYIamk7uXpHI=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.17.0 h1:zY54UmvipHiNd+pm+m0x9KhZ9hl1/7QNMyxXbc6ICqA=\ngolang.org/x/mod v0.17.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20211112202133-69e39bad7dc2/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.0.0-20221002022538-bcab6841153b/go.mod h1:YDH+HFinaLZZlnHAfSS6ZXJJ9M9t4Dl22yv3iI2vPwk=\ngolang.org/x/net v0.26.0 h1:soB7SVo0PWrY4vPW/+ay0jKDNScG2X9wFeYlXIvJsOQ=\ngolang.org/x/net v0.26.0/go.mod h1:5YKkiSynbBIh3p6iOc/vibscux0x38BZDkn8sCUPxHE=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.7.0 h1:YsImfSBoP9QPYL0xyKJPq0gcaJdG3rInoqxTWbfQu9M=\ngolang.org/x/sync v0.7.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190916202348-b4ddaad3f8a3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201126233918-771906719818/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201204225414-ed752295db88/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220728004956-3c1f35247d10/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.11.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.18.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/sys v0.21.0 h1:rF+pYz3DAGSQAxAu1CbC7catZg4ebC4UIeIhKxBZvws=\ngolang.org/x/sys v0.21.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201117132131-f5c789dd3221/go.mod h1:Nr5EML6q2oocZ2LXRh80K7BxOlk5/8JxuGnuhpl+muw=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.21.0 h1:WVXCp+/EBEHOj53Rvu+7KiT/iElMrO8ACK16SMZ3jaA=\ngolang.org/x/term v0.21.0/go.mod h1:ooXLefLobQVslOqselCNF4SxFAaoS6KujMbsGzSDmX0=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.3.8/go.mod h1:E6s5w1FMmriuDzIBO73fBruAKo1PCIq6d2Q6DHfQ8WQ=\ngolang.org/x/text v0.16.0 h1:a94ExnEXNtEwYLGJSIUxnWoxoRz/ZcCsV63ROupILh4=\ngolang.org/x/text v0.16.0/go.mod h1:GhwF1Be+LQoKShO3cGOHzqOgRrGaYc9AvblQOmPVHnI=\ngolang.org/x/time v0.5.0 h1:o7cqy6amK/52YcAKIPlM3a+Fpj35zvRj2TP+e1xFSfk=\ngolang.org/x/time v0.5.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d h1:vU5i/LfpvrRCpgM/VPfJLg5KjxD3E+hfT1SH+d9zLwg=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d/go.mod h1:aiJjzUbINMkxbQROHiO6hDPo2LHcIPhhQsa9DLh0yGk=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/protobuf v1.34.1 h1:9ddQBjfCyZPOHPUiPxpYESBLc+T8P3E+Vo4IbKZgFWg=\ngoogle.golang.org/protobuf v1.34.1/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/ini.v1 v1.67.0 h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=\ngopkg.in/ini.v1 v1.67.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngotest.tools/v3 v3.5.0 h1:Ljk6PdHdOhAb5aDMWXjDLMMhph+BpztA4v1QdqEW2eY=\ngotest.tools/v3 v3.5.0/go.mod h1:isy3WKz7GK6uNw/sbHzfKBLvlvXwUyV06n6brMxxopU=\nk8s.io/klog/v2 v2.120.1 h1:QXU6cPEOIslTGvZaXvFWiP9VKyeet3sawzTOvdXb4Vw=\nk8s.io/klog/v2 v2.120.1/go.mod h1:3Jpz1GvMt720eyJH1ckRHK1EDfpxISzJ7I9OYgaDtPE=\nk8s.io/kube-openapi v0.0.0-20231010175941-2dd684a91f00 h1:aVUu9fTY98ivBPKR9Y5w/AuzbMm96cd3YHRTU83I780=\nk8s.io/kube-openapi v0.0.0-20231010175941-2dd684a91f00/go.mod h1:AsvuZPBlUDVuCdzJ87iajxtXuR9oktsTctW/R9wwouA=\nsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd h1:EDPBXCAspyGV4jQlpZSudPeMmr1bNJefnuqLsRAsHZo=\nsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd/go.mod h1:B8JuhiUyNFVKdsE8h686QcCxMaH6HrOAZj4vswFpcB0=\nsigs.k8s.io/kustomize/kyaml v0.17.2 h1:+AzvoJUY0kq4QAhH/ydPHHMRLijtUKiyVyh7fOSshr0=\nsigs.k8s.io/kustomize/kyaml v0.17.2/go.mod h1:9V0mCjIEYjlXuCdYsSXvyoy2BTsLESH7TlGV81S282U=\nsigs.k8s.io/yaml v1.4.0 h1:Mk1wCc2gy/F0THH0TAp1QYyJNzRm2KCLy3o5ASXVI5E=\nsigs.k8s.io/yaml v1.4.0/go.mod h1:Ejl7/uTz7PSA4eKMyQCUTnhZYNmLIl+5c2lQPGR2BPY=\n"
        },
        {
          "name": "gon.json",
          "type": "blob",
          "size": 0.3232421875,
          "content": "{\n    \"source\" : [\"./dist/keploy-mac-universal_darwin_all/keploy\"],\n    \"bundle_id\" : \"io.keploy.server\",\n    \"apple_id\": {\n        \"username\" : \"shubhamkjain@outlook.com\"\n    },\n    \"sign\" :{\n        \"application_identity\" : \"Developer ID Application: Shubham Jain\"\n    },\n    \"zip\" :{\n        \"output_path\" : \"keploy.zip\"\n    }\n}"
        },
        {
          "name": "goreleaser.yaml",
          "type": "blob",
          "size": 1.251953125,
          "content": "# GoReleaser configuration\narchives:\n -\n    name_template: \"{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}\"\n\nbuilds:\n  - binary: keploy\n    id: keploy\n    main: ./main.go\n    ldflags:\n      - -s -w -X main.dsn={{.Env.SENTRY_DSN_BINARY}}\n      - -s -w -X main.version={{.Version}}\n      - -s -w -X main.apiServerURI={{.Env.SERVER_URL}}\n      - -s -w -X main.gitHubClientID={{.Env.GITTHUB_APP_CLIENT_ID}}\n    env:\n      - CGO_ENABLED=0\n    goos:\n      - linux\n      - darwin\n      - windows\n    goarch:\n      - amd64\n      - arm64\n    tags:\n      - viper_bind_struct\n\n  # - binary: keploy\n  #   id: keploy-macos\n  #   main: ./cli/server/main.go\n  #   env:\n  #     - CGO_ENABLED=0\n  #   goos:\n  #     - darwin\n  #   goarch:\n  #     - amd64\n  #     - arm64\n\nuniversal_binaries:\n-\n  # ID of resulting universal binary.\n  #\n  # Defaults to the project name.\n  id: keploy-mac-universal\n\n  # IDs to use to filter the built binaries.\n  #\n  # Defaults to the `id` field.\n  # Since: v1.3.\n  ids:\n    - keploy\n\n  # Whether to remove the previous single-arch binaries from the artifact list.\n  # If left as false, your end release might have both several macOS archives:\n  # amd64, arm64 and all.\n  #\n  # Defaults to false.\n  replace: true\n  hooks:\n    post: gon -log-level=info -log-json ./gon.json\n\n"
        },
        {
          "name": "keploy.sh",
          "type": "blob",
          "size": 9.91015625,
          "content": "#!/bin/bash\n\ninstallKeploy (){\n    version=\"latest\"\n    IS_CI=false\n    NO_ROOT=false\n    PLATFORM=\"$(basename \"$SHELL\")\"\n    for arg in \"$@\"\n    do\n        case $arg in\n            -isCI)\n                IS_CI=true\n                shift\n            ;;\n            -v)\n                if [[ \"$2\" =~ ^v[0-9]+.* ]]; then\n                    version=\"$2\"\n                    shift 2 \n                else\n                    echo \"Invalid version format. Please use '-v v<semver>'.\"\n                    return 1 \n                fi\n            ;;\n            -noRoot)\n                NO_ROOT=true\n                shift 1\n            ;;\n            -platform)\n                PLATFORM=\"$2\"\n                shift 2\n            ;;\n            *)\n            ;;\n        esac\n    done\n    if [ \"$version\" != \"latest\" ]; then\n        echo \"Installing Keploy version: $version......\"\n    fi\n\n    move_keploy_binary() {\n        # Check if NO_ROOT is set to true\n        if [ \"$NO_ROOT\" = \"true\" ]; then\n            # Move without sudo\n            target_dir=\"$HOME/.keploy/bin\"\n            source_dir=\"/tmp/keploy\"  # Default source directory\n\n            # Create the target directory in the user's home directory\n            mkdir -p \"$target_dir\"\n            if [ $? -ne 0 ]; then\n                echo \"Error: Failed to create directory $target_dir\"\n                exit 1\n            fi\n\n            # Check if the OS is macOS (Darwin) to set the correct source path\n            OS_NAME=$(uname)  # Get the operating system name\n            if [ \"$OS_NAME\" = \"Darwin\" ]; then\n                source_dir=\"/tmp/keploy/keploy\"  # Set source directory to the binary inside the extracted folder\n            fi\n\n            # Move the keploy binary to the user's home directory bin\n            if [ -f \"$source_dir\" ]; then\n                mv \"$source_dir\" \"$target_dir/keploy\"\n                if [ $? -ne 0 ]; then\n                    echo \"Error: Failed to move the keploy binary from $source_dir to $target_dir\"\n                    exit 1\n                fi\n            else\n                echo \"Error: $source_dir does not exist.\"\n                exit 1\n            fi\n\n            # Make sure the binary is executable\n            chmod +x \"$target_dir/keploy\"\n            if [ $? -ne 0 ]; then\n                echo \"Error: Failed to make the keploy binary executable\"\n                exit 1\n            fi\n        else\n            source_dir=\"/tmp/keploy\"\n            OS_NAME=$(uname)  # Get the operating system name\n            if [ \"$OS_NAME\" = \"Darwin\" ]; then\n                source_dir=\"/tmp/keploy/keploy\"  # Set source directory to the binary inside the extracted folder\n            fi\n            sudo mkdir -p /usr/local/bin && sudo mv \"$source_dir\" /usr/local/bin/keploy\n        fi\n        set_alias\n    }\n\n    install_keploy_darwin_all() {\n        if [ \"$version\" != \"latest\" ]; then\n            download_url=\"https://github.com/keploy/keploy/releases/download/$version/keploy_darwin_all.tar.gz\"\n        else\n            download_url=\"https://github.com/keploy/keploy/releases/latest/download/keploy_darwin_all.tar.gz\"\n        fi\n        # macOS tar does not support --overwrite option so we need to remove the directory first\n        # to avoid the \"File exists\" error\n        rm -rf /tmp/keploy\n        mkdir -p /tmp/keploy\n        curl --silent --location \"$download_url\" | tar xz -C /tmp/keploy/\n        move_keploy_binary\n        delete_keploy_alias\n    }\n\n    install_keploy_arm() {\n        if [ \"$version\" != \"latest\" ]; then\n            download_url=\"https://github.com/keploy/keploy/releases/download/$version/keploy_linux_arm64.tar.gz\"\n        else\n            download_url=\"https://github.com/keploy/keploy/releases/latest/download/keploy_linux_arm64.tar.gz\"\n        fi\n        curl --silent --location \"$download_url\" | tar xz --overwrite -C /tmp \n        move_keploy_binary\n    }\n\n\n    install_keploy_amd() {        \n        if [ \"$version\" != \"latest\" ]; then\n            download_url=\"https://github.com/keploy/keploy/releases/download/$version/keploy_linux_amd64.tar.gz\"\n        else\n            download_url=\"https://github.com/keploy/keploy/releases/latest/download/keploy_linux_amd64.tar.gz\"\n        fi\n        curl --silent --location \"$download_url\" | tar xz --overwrite -C /tmp\n        move_keploy_binary\n    }\n\n    append_to_rc() {\n        last_byte=$(tail -c 1 $2)\n        if [[ \"$last_byte\" != \"\" ]]; then\n            echo -e \"\\n$1\" >> $2\n        else\n            echo \"$1\" >> $2\n        fi\n        source $2\n    }\n\n    update_path() {\n        PATH_CMD=\"export PATH=\\\"\\$HOME/.keploy/bin:\\$PATH\\\"\"\n        rc_file=\"$1\"\n        if [ -f \"$rc_file\" ]; then\n            if ! grep -q \"$PATH_CMD\" \"$rc_file\"; then\n                append_to_rc \"$PATH_CMD\" \"$rc_file\"\n            fi\n        else\n            export PATH=\"$PATH_CMD\"\n        fi\n    }\n\n    # Get the alias to set and set it\n    set_alias() {\n        current_shell=\"$PLATFORM\"\n        if [ \"$NO_ROOT\" = \"true\" ]; then\n            # Just update the PATH in .zshrc or .bashrc, no alias needed\n            if [[ \"$current_shell\" = \"zsh\" || \"$current_shell\" = \"-zsh\" ]]; then\n                update_path \"$HOME/.zshrc\"\n            elif [[ \"$current_shell\" = \"bash\" || \"$current_shell\" = \"-bash\" ]]; then\n                update_path \"$HOME/.bashrc\"\n            else\n                update_path \"$HOME/.profile\"\n            fi\n        else\n            ALIAS_CMD=\"alias keploy='sudo -E env PATH=\\\"\\$PATH\\\" keploy'\"\n            # Handle zsh or bash for non-macOS systems\n            if [[ \"$current_shell\" = \"zsh\" || \"$current_shell\" = \"-zsh\" ]]; then\n                if [ -f \"$HOME/.zshrc\" ]; then\n                    if grep -q \"alias keploy=\" \"$HOME/.zshrc\"; then\n                        sed -i '/alias keploy/d' \"$HOME/.zshrc\"\n                    fi\n                    append_to_rc \"$ALIAS_CMD\" ~/.zshrc\n                else\n                    alias keploy=\"$ALIAS_CMD\"\n                fi\n            elif [[ \"$current_shell\" = \"bash\" || \"$current_shell\" = \"-bash\" ]]; then\n                if [ -f \"$HOME/.bashrc\" ]; then\n                    if grep -q \"alias keploy=\" \"$HOME/.bashrc\"; then\n                        sed -i '/alias keploy/d' \"$HOME/.bashrc\"\n                    fi\n                    append_to_rc \"$ALIAS_CMD\" ~/.bashrc\n                else\n                    alias keploy=\"$ALIAS_CMD\"\n                fi\n            else\n                if [ -f \"$HOME/.profile\" ]; then\n                    if grep -q \"alias keploy=\" \"$HOME/.profile\"; then\n                        sed -i '/alias keploy/d' \"$HOME/.profile\"\n                    fi\n                    append_to_rc \"$ALIAS_CMD\" ~/.profile\n                else\n                    alias keploy=\"$ALIAS_CMD\"\n                fi\n            fi\n\n        fi\n    \n    }\n\n    delete_keploy_alias() {\n        current_shell=\"$PLATFORM\"\n        shell_rc_file=\"\"\n        # Determine the shell configuration file based on the current shell\n        if [[ \"$current_shell\" = \"zsh\" || \"$current_shell\" = \"-zsh\" ]]; then\n            shell_rc_file=\"$HOME/.zshrc\"\n        elif [[ \"$current_shell\" = \"bash\" || \"$current_shell\" = \"-bash\" ]]; then\n            shell_rc_file=\"$HOME/.bashrc\"\n        else\n            echo \"Unsupported shell: $current_shell\"\n            return\n        fi\n        # Delete alias from the shell configuration file if it exists\n        if [ -f \"$shell_rc_file\" ]; then\n            if grep -q \"alias keploy=\" \"$shell_rc_file\"; then\n                if [[ \"$(uname)\" = \"Darwin\" ]]; then\n                    sed -i '' '/alias keploy/d' \"$shell_rc_file\"\n                else\n                    sed -i '/alias keploy/d' \"$shell_rc_file\"\n                fi\n            fi\n        fi\n        # Unset the alias in the current shell session if it exists\n        if alias keploy &>/dev/null; then\n            unalias keploy\n        fi\n    }\n\n    cleanup_tmp() {\n        # Remove extracted files /tmp directory\n        tmp_files=(\"LICENSE\" \"README.md\" \"READMEes-Es.md\" \"README-UnitGen.md\")\n        for file in \"${tmp_files[@]}\"; do\n            if [ -f \"/tmp/$file\" ]; then\n                if [ \"$NO_ROOT\" = \"true\" ]; then\n                    rm -rf \"/tmp/$file\"\n                else\n                    sudo rm -rf \"/tmp/$file\"\n                fi\n                \n            fi\n        done\n    }\n\n    ARCH=$(uname -m)\n    \n    OS_NAME=\"$(uname -s)\"\n    if [ \"$OS_NAME\" = \"Darwin\" ]; then\n        NO_ROOT=true\n    fi\n\n    if [ \"$IS_CI\" = false ]; then\n        OS_NAME=\"$(uname -s)\"\n        if [ \"$OS_NAME\" = \"Darwin\" ]; then\n            cleanup_tmp\n            install_keploy_darwin_all\n            return\n        elif [ \"$OS_NAME\" = \"Linux\" ]; then\n             if [ \"$NO_ROOT\" = false ]; then\n                if ! mountpoint -q /sys/kernel/debug; then\n                    sudo mount -t debugfs debugfs /sys/kernel/debug\n                fi\n            fi\n            if [ \"$ARCH\" = \"x86_64\" ]; then\n                cleanup_tmp\n                install_keploy_amd\n            elif [ \"$ARCH\" = \"aarch64\" ]; then\n                cleanup_tmp\n                install_keploy_arm\n            else\n                echo \"Unsupported architecture: $ARCH\"\n                return\n            fi\n        elif [[ \"$OS_NAME\" == MINGW32_NT* ]]; then\n            echo \"\\e]8;; https://pureinfotech.com/install-windows-subsystem-linux-2-windows-10\\aWindows not supported please run on WSL2\\e]8;;\\a\"\n        elif [[ \"$OS_NAME\" == MINGW64_NT* ]]; then\n            echo \"\\e]8;; https://pureinfotech.com/install-windows-subsystem-linux-2-windows-10\\aWindows not supported please run on WSL2\\e]8;;\\a\"\n        else\n            echo \"Unknown OS, install Linux to run Keploy\"\n        fi\n    else\n        if [ \"$ARCH\" = \"x86_64\" ]; then\n            cleanup_tmp\n            install_keploy_amd\n        elif [ \"$ARCH\" = \"aarch64\" ]; then\n            cleanup_tmp\n            install_keploy_arm\n        else\n            echo \"Unsupported architecture: $ARCH\"\n            return\n        fi\n    fi\n}\n\ninstallKeploy \"$@\"\n\nif command -v keploy &> /dev/null; then\n    keploy example\n    cleanup_tmp\n    rm -rf keploy.sh\n    rm -rf install.sh\nfi"
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 3.517578125,
          "content": "// Package main is the entry point for the keploy application.\npackage main\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"os\"\n\t\"strings\"\n\n\t\"go.keploy.io/server/v2/cli\"\n\t\"go.keploy.io/server/v2/cli/provider\"\n\t\"go.keploy.io/server/v2/config\"\n\t\"go.keploy.io/server/v2/pkg/platform/auth\"\n\tuserDb \"go.keploy.io/server/v2/pkg/platform/yaml/configdb/user\"\n\t\"go.keploy.io/server/v2/utils\"\n\t\"go.keploy.io/server/v2/utils/log\"\n\t//pprof for debugging\n\t//_ \"net/http/pprof\"\n)\n\n// version is the version of the server and will be injected during build by ldflags, same with dsn\n// see https://goreleaser.com/customization/build/\n\nvar version string\nvar dsn string\nvar apiServerURI = \"http://localhost:8083\"\nvar gitHubClientID = \"Iv23liFBvIVhL29i9BAp\"\n\nfunc main() {\n\t// Uncomment the following code to enable pprof for debugging\n\t// go func() {\n\t// \tfmt.Println(\"Starting pprof server for debugging...\")\n\t// \terr := http.ListenAndServe(\"localhost:6060\", nil)\n\t// \tif err != nil {\n\t// \t\tfmt.Println(\"Failed to start the pprof server for debugging\", err)\n\t// \t\treturn\n\t// \t}\n\t// }()\n\tsetVersion()\n\tctx := utils.NewCtx()\n\tstart(ctx)\n\tos.Exit(utils.ErrCode)\n}\n\nfunc setVersion() {\n\tif version == \"\" {\n\t\tversion = \"2-dev\"\n\t}\n\tutils.Version = version\n\tutils.VersionIdenitfier = \"version\"\n}\n\nfunc start(ctx context.Context) {\n\tlogger, err := log.New()\n\tif err != nil {\n\t\tfmt.Println(\"Failed to start the logger for the CLI\", err)\n\t\treturn\n\t}\n\tdefer func() {\n\t\tif err := utils.DeleteFileIfNotExists(logger, \"keploy-logs.txt\"); err != nil {\n\t\t\tutils.LogError(logger, err, \"Failed to delete Keploy Logs\")\n\t\t\treturn\n\t\t}\n\t\tif err := utils.DeleteFileIfNotExists(logger, \"docker-compose-tmp.yaml\"); err != nil {\n\t\t\tutils.LogError(logger, err, \"Failed to delete Temporary Docker Compose\")\n\t\t\treturn\n\t\t}\n\t}()\n\tdefer utils.Recover(logger)\n\n\t// The 'umask' command is commonly used in various operating systems to regulate the permissions of newly created files.\n\t// These 'umask' values subtract from the permissions assigned by the process, effectively lowering the permissions.\n\t// For example, if a file is created with permissions '777' and the 'umask' is '022', the resulting permissions will be '755',\n\t// reducing certain permissions for security purposes.\n\t// Setting 'umask' to '0' ensures that 'keploy' can precisely control the permissions of the files it creates.\n\t// However, it's important to note that this approach may not work in scenarios involving mounted volumes,\n\t// as the 'umask' is set by the host system, and cannot be overridden by 'keploy' or individual processes.\n\toldMask := utils.SetUmask()\n\tdefer utils.RestoreUmask(oldMask)\n\n\tif dsn != \"\" {\n\t\tutils.SentryInit(logger, dsn)\n\t\t//logger = utils.ModifyToSentryLogger(ctx, logger, sentry.CurrentHub().Client(), configDb)\n\t}\n\tconf := config.New()\n\tconf.APIServerURL = apiServerURI\n\tconf.GitHubClientID = gitHubClientID\n\tuserDb := userDb.New(logger, conf)\n\tconf.InstallationID, err = userDb.GetInstallationID(ctx)\n\tif err != nil {\n\t\terrMsg := \"failed to get installation id\"\n\t\tutils.LogError(logger, err, errMsg)\n\t\tos.Exit(1)\n\t}\n\tauth := auth.New(conf.APIServerURL, conf.InstallationID, logger, conf.GitHubClientID)\n\n\tsvcProvider := provider.NewServiceProvider(logger, conf, auth)\n\tcmdConfigurator := provider.NewCmdConfigurator(logger, conf)\n\trootCmd := cli.Root(ctx, logger, svcProvider, cmdConfigurator)\n\tif err := rootCmd.Execute(); err != nil {\n\t\tif strings.HasPrefix(err.Error(), \"unknown command\") || strings.HasPrefix(err.Error(), \"unknown shorthand\") {\n\t\t\tfmt.Println(\"Error: \", err.Error())\n\t\t\tfmt.Println(\"Run 'keploy --help' for usage.\")\n\t\t\tos.Exit(1)\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "oss-pledge.json",
          "type": "blob",
          "size": 0.6796875,
          "content": "{\n  \"name\": \"Keploy Inc\",\n  \"description\": \"Keploy is an open-source, zero-code testing tool that makes API and microservices testing simplify and helps developers boost code coverage. As an open-source project itself, we use a lot of open-source projects and we think it's fit to give it back to community.\",\n  \"urlLearnMore\": \"https://keploy.io/blog/community/introducing-the-keploy-oss-fund\",\n  \"urlSquareLogoWithBackground\": \"https://avatars.githubusercontent.com/u/92252339\",\n  \"annualReports\": [\n    {\n      \"url\": \"https://keploy.io/blog/community/introducing-the-keploy-oss-fund\",\n      \"dateYearEnding\": \"2024-12-31\",\n      \"averageNumberOfDevs\": 12,\n      \"payments\": 12500\n    }\n  ]\n}\n"
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 0.0830078125,
          "content": "{\n  \"name\": \"keploy\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {}\n}\n"
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}