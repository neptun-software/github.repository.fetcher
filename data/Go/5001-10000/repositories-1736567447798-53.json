{
  "metadata": {
    "timestamp": 1736567447798,
    "page": 53,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "prasmussen/gdrive",
      "stars": 8983,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1171875,
          "content": "# Ignore bin folder and drive binary\n_release/bin\n\n# vim files\n.*.sw[a-z]\n*.un~\nSession.vim\n.netrwhist\ngdrive\ngdrive.sh\n"
        },
        {
          "name": "Godeps",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.052734375,
          "content": "The MIT License\n\nCopyright (c) 2013 Petter Rasmussen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 37.3857421875,
          "content": "## IMPORTANT\nThis repository is not maintained anymore. [Gdrive 3](https://github.com/glotlabs/gdrive) is its successor.\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n## Prerequisites\nNone, binaries are statically linked.\nIf you want to compile from source you need the [go toolchain](http://golang.org/doc/install).\nVersion 1.5 or higher.\n\n## Installation\n### With [Homebrew](http://brew.sh) on Mac\n```\nbrew install gdrive\n```\n### Other\nDownload `gdrive` from one of the [links in the latest release](https://github.com/prasmussen/gdrive/releases).\nThe first time gdrive is launched (i.e. run `gdrive about` in your\nterminal not just `gdrive`), you will be prompted for a verification code.\nThe code is obtained by following the printed url and authenticating with the\ngoogle account for the drive you want access to. This will create a token file\ninside the .gdrive folder in your home directory. Note that anyone with access\nto this file will also have access to your google drive.\nIf you want to manage multiple drives you can use the global `--config` flag\nor set the environment variable `GDRIVE_CONFIG_DIR`.\nExample: `GDRIVE_CONFIG_DIR=\"/home/user/.gdrive-secondary\" gdrive list`\nYou will be prompted for a new verification code if the folder does not exist.\n\n## Compile from source\n```bash\ngo get github.com/prasmussen/gdrive\n```\nThe gdrive binary should now be available at `$GOPATH/bin/gdrive`\n\n\n### Syncing\nGdrive supports basic syncing. It only syncs one way at the time and works\nmore like rsync than e.g. dropbox. Files that are synced to google drive\nare tagged with an appProperty so that the files on drive can be traversed\nfaster. This means that you can't upload files with `gdrive upload` into\na sync directory as the files would be missing the sync tag, and would be\nignored by the sync commands.\nThe current implementation is slow and uses a lot of memory if you are\nsyncing many files. Currently only one file is uploaded at the time,\nthe speed can be improved in the future by uploading several files concurrently.\nTo learn more see usage and the examples below.\n\n### Service Account\nFor server to server communication, where user interaction is not a viable option, \nis it possible to use a service account, as described in this [Google document](https://developers.google.com/identity/protocols/OAuth2ServiceAccount).\nIf you want to use a service account, instead of being interactively prompted for\nauthentication, you need to use the `--service-account <serviceAccountCredentials>` \nglobal option, where `serviceAccountCredentials` is a file in JSON format obtained\nthrough the Google API Console, and its location is relative to the config dir. \n\n#### .gdriveignore\nPlacing a .gdriveignore in the root of your sync directory can be used to\nskip certain files from being synced. .gdriveignore follows the same\nrules as [.gitignore](https://git-scm.com/docs/gitignore), except that gdrive only reads the .gdriveignore file in the root of the sync directory, not ones in any subdirectories.\n\n\n## Usage\n```\ngdrive [global] list [options]                                 List files\ngdrive [global] download [options] <fileId>                    Download file or directory\ngdrive [global] download query [options] <query>               Download all files and directories matching query\ngdrive [global] upload [options] <path>                        Upload file or directory\ngdrive [global] upload - [options] <name>                      Upload file from stdin\ngdrive [global] update [options] <fileId> <path>               Update file, this creates a new revision of the file\ngdrive [global] info [options] <fileId>                        Show file info\ngdrive [global] mkdir [options] <name>                         Create directory\ngdrive [global] share [options] <fileId>                       Share file or directory\ngdrive [global] share list <fileId>                            List files permissions\ngdrive [global] share revoke <fileId> <permissionId>           Revoke permission\ngdrive [global] delete [options] <fileId>                      Delete file or directory\ngdrive [global] sync list [options]                            List all syncable directories on drive\ngdrive [global] sync content [options] <fileId>                List content of syncable directory\ngdrive [global] sync download [options] <fileId> <path>        Sync drive directory to local directory\ngdrive [global] sync upload [options] <path> <fileId>          Sync local directory to drive\ngdrive [global] changes [options]                              List file changes\ngdrive [global] revision list [options] <fileId>               List file revisions\ngdrive [global] revision download [options] <fileId> <revId>   Download revision\ngdrive [global] revision delete <fileId> <revId>               Delete file revision\ngdrive [global] import [options] <path>                        Upload and convert file to a google document, see 'about import' for available conversions\ngdrive [global] export [options] <fileId>                      Export a google document\ngdrive [global] about [options]                                Google drive metadata, quota usage\ngdrive [global] about import                                   Show supported import formats\ngdrive [global] about export                                   Show supported export formats\ngdrive version                                                 Print application version\ngdrive help                                                    Print help\ngdrive help <command>                                          Print command help\ngdrive help <command> <subcommand>                             Print subcommand help\n```\n\n#### List files\n```\ngdrive [global] list [options]\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n\noptions:\n  -m, --max <maxFiles>       Max files to list, default: 30\n  -q, --query <query>        Default query: \"trashed = false and 'me' in owners\". See https://developers.google.com/drive/search-parameters\n  --order <sortOrder>        Sort order. See https://godoc.org/google.golang.org/api/drive/v3#FilesListCall.OrderBy\n  --name-width <nameWidth>   Width of name column, default: 40, minimum: 9, use 0 for full width\n  --absolute                 Show absolute path to file (will only show path from first parent)\n  --no-header                Dont print the header\n  --bytes                    Size in bytes\n```\n\nList file in subdirectory\n\n\n```\n./gdrive list --query \" 'IdOfTheParentFolder' in parents\"\n```\n\n#### Download file or directory\n```\ngdrive [global] download [options] <fileId>\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n  \noptions:\n  -f, --force           Overwrite existing file\n  -r, --recursive       Download directory recursively, documents will be skipped\n  --path <path>         Download path\n  --delete              Delete remote file when download is successful\n  --no-progress         Hide progress\n  --stdout              Write file content to stdout\n  --timeout <timeout>   Set timeout in seconds, use 0 for no timeout. Timeout is reached when no data is transferred in set amount of seconds, default: 300\n```\n\n#### Download all files and directories matching query\n```\ngdrive [global] download query [options] <query>\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n  \noptions:\n  -f, --force       Overwrite existing file\n  -r, --recursive   Download directories recursively, documents will be skipped\n  --path <path>     Download path\n  --no-progress     Hide progress\n```\n\n#### Upload file or directory\n```\ngdrive [global] upload [options] <path>\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n  \noptions:\n  -r, --recursive               Upload directory recursively\n  -p, --parent <parent>         Parent id, used to upload file to a specific directory, can be specified multiple times to give many parents\n  --name <name>                 Filename\n  --description <description>   File description\n  --no-progress                 Hide progress\n  --mime <mime>                 Force mime type\n  --share                       Share file\n  --delete                      Delete local file when upload is successful\n  --timeout <timeout>           Set timeout in seconds, use 0 for no timeout. Timeout is reached when no data is transferred in set amount of seconds, default: 300\n  --chunksize <chunksize>       Set chunk size in bytes, default: 8388608\n```\n\n#### Upload file from stdin\n```\ngdrive [global] upload - [options] <name>\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n  \noptions:\n  -p, --parent <parent>         Parent id, used to upload file to a specific directory, can be specified multiple times to give many parents\n  --chunksize <chunksize>       Set chunk size in bytes, default: 8388608\n  --description <description>   File description\n  --mime <mime>                 Force mime type\n  --share                       Share file\n  --timeout <timeout>           Set timeout in seconds, use 0 for no timeout. Timeout is reached when no data is transferred in set amount of seconds, default: 300\n  --no-progress                 Hide progress\n```\n\n#### Update file, this creates a new revision of the file\n```\ngdrive [global] update [options] <fileId> <path>\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n  \noptions:\n  -p, --parent <parent>         Parent id, used to upload file to a specific directory, can be specified multiple times to give many parents\n  --name <name>                 Filename\n  --description <description>   File description\n  --no-progress                 Hide progress\n  --mime <mime>                 Force mime type\n  --timeout <timeout>           Set timeout in seconds, use 0 for no timeout. Timeout is reached when no data is transferred in set amount of seconds, default: 300\n  --chunksize <chunksize>       Set chunk size in bytes, default: 8388608\n```\n\n#### Show file info\n```\ngdrive [global] info [options] <fileId>\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n  \noptions:\n  --bytes   Show size in bytes\n```\n\n#### Create directory\n```\ngdrive [global] mkdir [options] <name>\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n  \noptions:\n  -p, --parent <parent>         Parent id of created directory, can be specified multiple times to give many parents\n  --description <description>   Directory description\n```\n\n#### Share file or directory\n```\ngdrive [global] share [options] <fileId>\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n  \noptions:\n  --role <role>     Share role: owner/writer/commenter/reader, default: reader\n  --type <type>     Share type: user/group/domain/anyone, default: anyone\n  --email <email>   The email address of the user or group to share the file with. Requires 'user' or 'group' as type\n  --discoverable    Make file discoverable by search engines\n  --revoke          Delete all sharing permissions (owner roles will be skipped)\n```\n\n#### List files permissions\n```\ngdrive [global] share list <fileId>\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n```\n\n#### Revoke permission\n```\ngdrive [global] share revoke <fileId> <permissionId>\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n```\n\n#### Delete file or directory\n```\ngdrive [global] delete [options] <fileId>\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n  \noptions:\n  -r, --recursive   Delete directory and all it's content\n```\n\n#### List all syncable directories on drive\n```\ngdrive [global] sync list [options]\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n  \noptions:\n  --no-header   Dont print the header\n```\n\n#### List content of syncable directory\n```\ngdrive [global] sync content [options] <fileId>\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n  \noptions:\n  --order <sortOrder>        Sort order. See https://godoc.org/google.golang.org/api/drive/v3#FilesListCall.OrderBy\n  --path-width <pathWidth>   Width of path column, default: 60, minimum: 9, use 0 for full width\n  --no-header                Dont print the header\n  --bytes                    Size in bytes\n```\n\n#### Sync drive directory to local directory\n```\ngdrive [global] sync download [options] <fileId> <path>\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n  \noptions:\n  --keep-remote         Keep remote file when a conflict is encountered\n  --keep-local          Keep local file when a conflict is encountered\n  --keep-largest        Keep largest file when a conflict is encountered\n  --delete-extraneous   Delete extraneous local files\n  --dry-run             Show what would have been transferred\n  --no-progress         Hide progress\n  --timeout <timeout>   Set timeout in seconds, use 0 for no timeout. Timeout is reached when no data is transferred in set amount of seconds, default: 300\n```\n\n#### Sync local directory to drive\n```\ngdrive [global] sync upload [options] <path> <fileId>\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n  \noptions:\n  --keep-remote             Keep remote file when a conflict is encountered\n  --keep-local              Keep local file when a conflict is encountered\n  --keep-largest            Keep largest file when a conflict is encountered\n  --delete-extraneous       Delete extraneous remote files\n  --dry-run                 Show what would have been transferred\n  --no-progress             Hide progress\n  --timeout <timeout>       Set timeout in seconds, use 0 for no timeout. Timeout is reached when no data is transferred in set amount of seconds, default: 300\n  --chunksize <chunksize>   Set chunk size in bytes, default: 8388608\n```\n\n#### List file changes\n```\ngdrive [global] changes [options]\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n  \noptions:\n  -m, --max <maxChanges>     Max changes to list, default: 100\n  --since <pageToken>        Page token to start listing changes from\n  --now                      Get latest page token\n  --name-width <nameWidth>   Width of name column, default: 40, minimum: 9, use 0 for full width\n  --no-header                Dont print the header\n```\n\n#### List file revisions\n```\ngdrive [global] revision list [options] <fileId>\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n  \noptions:\n  --name-width <nameWidth>   Width of name column, default: 40, minimum: 9, use 0 for full width\n  --no-header                Dont print the header\n  --bytes                    Size in bytes\n```\n\n#### Download revision\n```\ngdrive [global] revision download [options] <fileId> <revId>\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n  \noptions:\n  -f, --force           Overwrite existing file\n  --no-progress         Hide progress\n  --stdout              Write file content to stdout\n  --path <path>         Download path\n  --timeout <timeout>   Set timeout in seconds, use 0 for no timeout. Timeout is reached when no data is transferred in set amount of seconds, default: 300\n```\n\n#### Delete file revision\n```\ngdrive [global] revision delete <fileId> <revId>\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n```\n\n#### Upload and convert file to a google document, see 'about import' for available conversions\n```\ngdrive [global] import [options] <path>\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n  \noptions:\n  -p, --parent <parent>   Parent id, used to upload file to a specific directory, can be specified multiple times to give many parents\n  --no-progress           Hide progress\n```\n\n#### Export a google document\n```\ngdrive [global] export [options] <fileId>\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n  \noptions:\n  -f, --force     Overwrite existing file\n  --mime <mime>   Mime type of exported file\n  --print-mimes   Print available mime types for given file\n```\n\n#### Google drive metadata, quota usage\n```\ngdrive [global] about [options]\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n  \noptions:\n  --bytes   Show size in bytes\n```\n\n#### Show supported import formats\n```\ngdrive [global] about import\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n```\n\n#### Show supported export formats\n```\ngdrive [global] about export\n\nglobal:\n  -c, --config <configDir>         Application path, default: /Users/<user>/.gdrive\n  --refresh-token <refreshToken>   Oauth refresh token used to get access token (for advanced users)\n  --access-token <accessToken>     Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\n  --service-account <accountFile>  Oauth service account filename, used for server to server communication without user interaction (file is relative to config dir)\n```\n\n\n## Examples\n#### List files\n```\n$ gdrive list\nId                             Name                    Type   Size     Created\n0B3X9GlR6EmbnZ3gyeGw4d3ozbUk   drive-windows-x64.exe   bin    6.6 MB   2015-07-18 16:43:58\n0B3X9GlR6EmbnTXlSc1FqV1dvSTQ   drive-windows-386.exe   bin    5.2 MB   2015-07-18 16:43:53\n0B3X9GlR6EmbnVjIzMDRqck1aekE   drive-osx-x64           bin    6.5 MB   2015-07-18 16:43:50\n0B3X9GlR6EmbnbEpXdlhza25zT1U   drive-osx-386           bin    5.2 MB   2015-07-18 16:43:41\n0B3X9GlR6Embnb095MGxEYmJhY2c   drive-linux-x64         bin    6.5 MB   2015-07-18 16:43:38\n```\n\n#### List largest files\n```\n$ gdrive list --query \"name contains 'gdrive'\" --order \"quotaBytesUsed desc\" -m 3\nId                             Name                     Type   Size     Created\n0B3X9GlR6EmbnZXpDRG1xblM2LTg   gdrive-linux-mips64      bin    8.5 MB   2016-02-22 21:07:04\n0B3X9GlR6EmbnNW5CTV8xdFkxTjg   gdrive-linux-mips64le    bin    8.5 MB   2016-02-22 21:07:07\n0B3X9GlR6EmbnZ1NGS25FdEVlWEk   gdrive-osx-x64           bin    8.3 MB   2016-02-21 20:22:13\n```\n\n#### Upload file\n```\n$ gdrive upload gdrive-osx-x64\nUploading gdrive-osx-x64\nUploaded 0B3X9GlR6EmbnZ1NGS25FdEVlWEk at 3.8 MB/s, total 8.3 MB\n```\n\n#### Make directory\n```\n$ gdrive mkdir gdrive-bin\nDirectory 0B3X9GlR6EmbnY1RLVTk5VUtOVkk created\n```\n\n#### Upload file to directory\n```\n$ gdrive upload --parent 0B3X9GlR6EmbnY1RLVTk5VUtOVkk gdrive-osx-x64\nUploading gdrive-osx-x64\nUploaded 0B3X9GlR6EmbnNTk0SkV0bm5Hd0E at 2.5 MB/s, total 8.3 MB\n```\n\n#### Download file\n```\n$ gdrive download 0B3X9GlR6EmbnZ1NGS25FdEVlWEk\nDownloading gdrive-osx-x64 -> gdrive-osx-x64\nDownloaded 0B3X9GlR6EmbnZ1NGS25FdEVlWEk at 8.3 MB/s, total 8.3 MB\n```\n\n#### Share a file\n```\n$ gdrive share 0B3X9GlR6EmbnNTk0SkV0bm5Hd0E\nGranted reader permission to anyone\n```\n\n#### Pipe content directly to google drive\n```\n$ echo \"Hello World\" | gdrive upload - hello.txt\nUploading hello.txt\nUploaded 0B3X9GlR6EmbnaXVrOUpIcWlUS0E at 8.0 B/s, total 12.0 B\n```\n\n#### Print file to stdout\n```\n$ gdrive download --stdout 0B3X9GlR6EmbnaXVrOUpIcWlUS0E\nHello World\n```\n\n#### Get file info\n```\n$ gdrive info 0B3X9GlR6EmbnNTk0SkV0bm5Hd0E\nId: 0B3X9GlR6EmbnNTk0SkV0bm5Hd0E\nName: gdrive-osx-x64\nPath: gdrive-bin/gdrive-osx-x64\nMime: application/octet-stream\nSize: 8.3 MB\nCreated: 2016-02-21 20:47:04\nModified: 2016-02-21 20:47:04\nMd5sum: b607f29231a3b2d16098c4212516470f\nShared: True\nParents: 0B3X9GlR6EmbnY1RLVTk5VUtOVkk\nViewUrl: https://drive.google.com/file/d/0B3X9GlR6EmbnNTk0SkV0bm5Hd0E/view?usp=drivesdk\nDownloadUrl: https://docs.google.com/uc?id=0B3X9GlR6EmbnNTk0SkV0bm5Hd0E&export=download\n```\n\n#### Update file (create new revision)\n```\n$ gdrive update 0B3X9GlR6EmbnNTk0SkV0bm5Hd0E gdrive-osx-x64\nUploading gdrive-osx-x64\nUpdated 0B3X9GlR6EmbnNTk0SkV0bm5Hd0E at 2.0 MB/s, total 8.3 MB\n```\n\n#### List file revisions\n```\n$ gdrive revision list 0B3X9GlR6EmbnNTk0SkV0bm5Hd0E\nId                                                    Name             Size     Modified              KeepForever\n0B3X9GlR6EmbnOFlHSTZQNWJWMGN2ckZucC9VaEUwczV1cUNrPQ   gdrive-osx-x64   8.3 MB   2016-02-21 20:47:04   False\n0B3X9GlR6EmbndVEwMlZCUldGWUlPb2lTS25rOFo1L2t6c2ZVPQ   gdrive-osx-x64   8.3 MB   2016-02-21 21:12:09   False\n```\n\n#### Download revision\n```\n$ gdrive revision download 0B3X9GlR6EmbnNTk0SkV0bm5Hd0E 0B3X9GlR6EmbnOFlHSTZQNWJWMGN2ckZucC9VaEUwczV1cUNrPQ\nDownloading gdrive-osx-x64 -> gdrive-osx-x64\nDownload complete, rate: 8.3 MB/s, total size: 8.3 MB\n```\n\n#### Export google doc as docx\n```\n$ gdrive export --mime application/vnd.openxmlformats-officedocument.wordprocessingml.document 1Kt5A8X7X2RQrEi5t6Y9W1LayRc4hyrFiG63y2dIJEvk\nExported 'foo.docx' with mime type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n```\n\n#### Import csv as google spreadsheet\n```\n$ gdrive import foo.csv\nImported 1mTl3DjIvap4tpTX_oMkDcbDT8ShtiGJRlozTfkXpeko with mime type: 'application/vnd.google-apps.spreadsheet'\n```\n\n#### Syncing directory to drive\n```\n# Create directory on drive\n$ gdrive mkdir drive-bin\nDirectory 0B3X9GlR6EmbnOEd6cEh6bU9XZWM created\n\n# Sync to drive\n$ gdrive sync upload _release/bin 0B3X9GlR6EmbnOEd6cEh6bU9XZWM\nStarting sync...\nCollecting local and remote file information...\nFound 32 local files and 0 remote files\n\n6 remote directories are missing\n[0001/0006] Creating directory drive-bin/bsd\n[0002/0006] Creating directory drive-bin/linux\n[0003/0006] Creating directory drive-bin/osx\n[0004/0006] Creating directory drive-bin/plan9\n[0005/0006] Creating directory drive-bin/solaris\n[0006/0006] Creating directory drive-bin/windows\n\n26 remote files are missing\n[0001/0026] Uploading bsd/gdrive-dragonfly-x64 -> drive-bin/bsd/gdrive-dragonfly-x64\n[0002/0026] Uploading bsd/gdrive-freebsd-386 -> drive-bin/bsd/gdrive-freebsd-386\n[0003/0026] Uploading bsd/gdrive-freebsd-arm -> drive-bin/bsd/gdrive-freebsd-arm\n[0004/0026] Uploading bsd/gdrive-freebsd-x64 -> drive-bin/bsd/gdrive-freebsd-x64\n[0005/0026] Uploading bsd/gdrive-netbsd-386 -> drive-bin/bsd/gdrive-netbsd-386\n[0006/0026] Uploading bsd/gdrive-netbsd-arm -> drive-bin/bsd/gdrive-netbsd-arm\n[0007/0026] Uploading bsd/gdrive-netbsd-x64 -> drive-bin/bsd/gdrive-netbsd-x64\n[0008/0026] Uploading bsd/gdrive-openbsd-386 -> drive-bin/bsd/gdrive-openbsd-386\n[0009/0026] Uploading bsd/gdrive-openbsd-arm -> drive-bin/bsd/gdrive-openbsd-arm\n[0010/0026] Uploading bsd/gdrive-openbsd-x64 -> drive-bin/bsd/gdrive-openbsd-x64\n[0011/0026] Uploading linux/gdrive-linux-386 -> drive-bin/linux/gdrive-linux-386\n[0012/0026] Uploading linux/gdrive-linux-arm -> drive-bin/linux/gdrive-linux-arm\n[0013/0026] Uploading linux/gdrive-linux-arm64 -> drive-bin/linux/gdrive-linux-arm64\n[0014/0026] Uploading linux/gdrive-linux-mips64 -> drive-bin/linux/gdrive-linux-mips64\n[0015/0026] Uploading linux/gdrive-linux-mips64le -> drive-bin/linux/gdrive-linux-mips64le\n[0016/0026] Uploading linux/gdrive-linux-ppc64 -> drive-bin/linux/gdrive-linux-ppc64\n[0017/0026] Uploading linux/gdrive-linux-ppc64le -> drive-bin/linux/gdrive-linux-ppc64le\n[0018/0026] Uploading linux/gdrive-linux-x64 -> drive-bin/linux/gdrive-linux-x64\n[0019/0026] Uploading osx/gdrive-osx-386 -> drive-bin/osx/gdrive-osx-386\n[0020/0026] Uploading osx/gdrive-osx-arm -> drive-bin/osx/gdrive-osx-arm\n[0021/0026] Uploading osx/gdrive-osx-x64 -> drive-bin/osx/gdrive-osx-x64\n[0022/0026] Uploading plan9/gdrive-plan9-386 -> drive-bin/plan9/gdrive-plan9-386\n[0023/0026] Uploading plan9/gdrive-plan9-x64 -> drive-bin/plan9/gdrive-plan9-x64\n[0024/0026] Uploading solaris/gdrive-solaris-x64 -> drive-bin/solaris/gdrive-solaris-x64\n[0025/0026] Uploading windows/gdrive-windows-386.exe -> drive-bin/windows/gdrive-windows-386.exe\n[0026/0026] Uploading windows/gdrive-windows-x64.exe -> drive-bin/windows/gdrive-windows-x64.exe\nSync finished in 1m18.891946279s\n\n# Add new local file\n$ echo \"google drive binaries\" > _release/bin/readme.txt\n\n# Sync again\n$ gdrive sync upload _release/bin 0B3X9GlR6EmbnOEd6cEh6bU9XZWM\nStarting sync...\nCollecting local and remote file information...\nFound 33 local files and 32 remote files\n\n1 remote files are missing\n[0001/0001] Uploading readme.txt -> drive-bin/readme.txt\nSync finished in 2.201339535s\n\n# Modify local file\n$ echo \"for all platforms\" >> _release/bin/readme.txt\n\n# Sync again\n$ gdrive sync upload _release/bin 0B3X9GlR6EmbnOEd6cEh6bU9XZWM\nStarting sync...\nCollecting local and remote file information...\nFound 33 local files and 33 remote files\n\n1 local files has changed\n[0001/0001] Updating readme.txt -> drive-bin/readme.txt\nSync finished in 1.890244258s\n```\n\n#### List content of sync directory\n```\n$ gdrive sync content 0B3X9GlR6EmbnOEd6cEh6bU9XZWM\nId                             Path                             Type   Size     Modified\n0B3X9GlR6EmbnMldxMFV1UGVMTlE   bsd                              dir             2016-02-21 22:54:00\n0B3X9GlR6EmbnM05sQ3hVUnJnOXc   bsd/gdrive-dragonfly-x64         bin    7.8 MB   2016-02-21 22:54:14\n0B3X9GlR6EmbnVy1KXzA4dlU5RVE   bsd/gdrive-freebsd-386           bin    6.1 MB   2016-02-21 22:54:18\n0B3X9GlR6Embnb29QQkFtSlRiZnc   bsd/gdrive-freebsd-arm           bin    6.1 MB   2016-02-21 22:54:20\n0B3X9GlR6EmbnMkFQYVpSaHhHTXM   bsd/gdrive-freebsd-x64           bin    7.8 MB   2016-02-21 22:54:23\n0B3X9GlR6EmbnVmJRMl9hUDloVU0   bsd/gdrive-netbsd-386            bin    6.1 MB   2016-02-21 22:54:25\n0B3X9GlR6EmbnLVlTZWpxOEF4Q2s   bsd/gdrive-netbsd-arm            bin    6.1 MB   2016-02-21 22:54:28\n0B3X9GlR6EmbnOENUZmh3anJmNG8   bsd/gdrive-netbsd-x64            bin    7.8 MB   2016-02-21 22:54:30\n0B3X9GlR6EmbnWTRoQ2ZVQXRfQlU   bsd/gdrive-openbsd-386           bin    6.1 MB   2016-02-21 22:54:32\n0B3X9GlR6EmbncEtlN3ZuQ0VUWms   bsd/gdrive-openbsd-arm           bin    6.1 MB   2016-02-21 22:54:35\n0B3X9GlR6EmbnMlFLY1ptNEFyZWc   bsd/gdrive-openbsd-x64           bin    7.8 MB   2016-02-21 22:54:38\n0B3X9GlR6EmbncGtSajQyNzloVEE   linux                            dir             2016-02-21 22:54:01\n0B3X9GlR6EmbnMWVudkJmb1NZdmM   linux/gdrive-linux-386           bin    6.1 MB   2016-02-21 22:54:40\n0B3X9GlR6Embnbnpla1R2VHV5T2M   linux/gdrive-linux-arm           bin    6.1 MB   2016-02-21 22:54:42\n0B3X9GlR6EmbnM0s2cU1YWkNJSjA   linux/gdrive-linux-arm64         bin    7.7 MB   2016-02-21 22:54:45\n0B3X9GlR6EmbnNU9NNi1TdDc4S2c   linux/gdrive-linux-mips64        bin    8.5 MB   2016-02-21 22:54:47\n0B3X9GlR6EmbnSmdQNjRKZ2dWV1U   linux/gdrive-linux-mips64le      bin    8.5 MB   2016-02-21 22:54:50\n0B3X9GlR6EmbnS0g0OVgxMHY5Z3c   linux/gdrive-linux-ppc64         bin    7.8 MB   2016-02-21 22:54:52\n0B3X9GlR6EmbneVp6ZXRpR3FhWlU   linux/gdrive-linux-ppc64le       bin    7.8 MB   2016-02-21 22:54:54\n0B3X9GlR6EmbnczdJT195dFVxdU0   linux/gdrive-linux-x64           bin    7.8 MB   2016-02-21 22:54:57\n0B3X9GlR6EmbnTXZXeDRnSDdVS1E   osx                              dir             2016-02-21 22:54:02\n0B3X9GlR6EmbnWnRheXJNR0pUMU0   osx/gdrive-osx-386               bin    6.6 MB   2016-02-21 22:54:59\n0B3X9GlR6EmbnRzNqMWFXdDR1Rms   osx/gdrive-osx-arm               bin    6.6 MB   2016-02-21 22:55:01\n0B3X9GlR6EmbnaDlVWTZDd0JIeEU   osx/gdrive-osx-x64               bin    8.3 MB   2016-02-21 22:55:04\n0B3X9GlR6EmbnWW84UFBvbHlURXM   plan9                            dir             2016-02-21 22:54:02\n0B3X9GlR6EmbnTmc0a2RNdDZDRUU   plan9/gdrive-plan9-386           bin    5.8 MB   2016-02-21 22:55:07\n0B3X9GlR6EmbnT1pYZ2p4Sk9FVFk   plan9/gdrive-plan9-x64           bin    7.4 MB   2016-02-21 22:55:10\n0B3X9GlR6EmbnbnZnXzlYVHoxdk0   readme.txt                       bin    40.0 B   2016-02-21 22:59:56\n0B3X9GlR6EmbnSWF1QUlta3RnaGc   solaris                          dir             2016-02-21 22:54:03\n0B3X9GlR6EmbnaWFOV0YxSGs5Znc   solaris/gdrive-solaris-x64       bin    7.7 MB   2016-02-21 22:55:13\n0B3X9GlR6EmbnNE5ySkEzbWQ4Qms   windows                          dir             2016-02-21 22:54:03\n0B3X9GlR6EmbnX1RIT2w1TWZYWFU   windows/gdrive-windows-386.exe   bin    6.1 MB   2016-02-21 22:55:15\n0B3X9GlR6EmbndmVMU05POGRPS3c   windows/gdrive-windows-x64.exe   bin    7.8 MB   2016-02-21 22:55:18\n```\n"
        },
        {
          "name": "_release",
          "type": "tree",
          "content": null
        },
        {
          "name": "auth",
          "type": "tree",
          "content": null
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "compare.go",
          "type": "blob",
          "size": 1.6689453125,
          "content": "package main\n\nimport (\n\t\"encoding/json\"\n\t\"github.com/prasmussen/gdrive/drive\"\n\t\"os\"\n)\n\nconst MinCacheFileSize = 5 * 1024 * 1024\n\ntype Md5Comparer struct{}\n\nfunc (self Md5Comparer) Changed(local *drive.LocalFile, remote *drive.RemoteFile) bool {\n\treturn remote.Md5() != md5sum(local.AbsPath())\n}\n\ntype CachedFileInfo struct {\n\tSize     int64  `json:\"size\"`\n\tModified int64  `json:\"modified\"`\n\tMd5      string `json:\"md5\"`\n}\n\nfunc NewCachedMd5Comparer(path string) CachedMd5Comparer {\n\tcache := map[string]*CachedFileInfo{}\n\n\tf, err := os.Open(path)\n\tif err == nil {\n\t\tjson.NewDecoder(f).Decode(&cache)\n\t}\n\tf.Close()\n\treturn CachedMd5Comparer{path, cache}\n}\n\ntype CachedMd5Comparer struct {\n\tpath  string\n\tcache map[string]*CachedFileInfo\n}\n\nfunc (self CachedMd5Comparer) Changed(local *drive.LocalFile, remote *drive.RemoteFile) bool {\n\treturn remote.Md5() != self.md5(local)\n}\n\nfunc (self CachedMd5Comparer) md5(local *drive.LocalFile) string {\n\t// See if file exist in cache\n\tcached, found := self.cache[local.AbsPath()]\n\n\t// If found and modification time and size has not changed, return cached md5\n\tif found && local.Modified().UnixNano() == cached.Modified && local.Size() == cached.Size {\n\t\treturn cached.Md5\n\t}\n\n\t// Calculate new md5 sum\n\tmd5 := md5sum(local.AbsPath())\n\n\t// Cache file info if file meets size criteria\n\tif local.Size() > MinCacheFileSize {\n\t\tself.cacheAdd(local, md5)\n\t\tself.persist()\n\t}\n\n\treturn md5\n}\n\nfunc (self CachedMd5Comparer) cacheAdd(lf *drive.LocalFile, md5 string) {\n\tself.cache[lf.AbsPath()] = &CachedFileInfo{\n\t\tSize:     lf.Size(),\n\t\tModified: lf.Modified().UnixNano(),\n\t\tMd5:      md5,\n\t}\n}\n\nfunc (self CachedMd5Comparer) persist() {\n\twriteJson(self.path, self.cache)\n}\n"
        },
        {
          "name": "drive",
          "type": "tree",
          "content": null
        },
        {
          "name": "gdrive.go",
          "type": "blob",
          "size": 26.9326171875,
          "content": "package main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com/prasmussen/gdrive/cli\"\n)\n\nconst Name = \"gdrive\"\nconst Version = \"2.1.1\"\n\nconst DefaultMaxFiles = 30\nconst DefaultMaxChanges = 100\nconst DefaultNameWidth = 40\nconst DefaultPathWidth = 60\nconst DefaultUploadChunkSize = 8 * 1024 * 1024\nconst DefaultTimeout = 5 * 60\nconst DefaultQuery = \"trashed = false and 'me' in owners\"\nconst DefaultShareRole = \"reader\"\nconst DefaultShareType = \"anyone\"\n\nvar DefaultConfigDir = GetDefaultConfigDir()\n\nfunc main() {\n\tglobalFlags := []cli.Flag{\n\t\tcli.StringFlag{\n\t\t\tName:         \"configDir\",\n\t\t\tPatterns:     []string{\"-c\", \"--config\"},\n\t\t\tDescription:  fmt.Sprintf(\"Application path, default: %s\", DefaultConfigDir),\n\t\t\tDefaultValue: DefaultConfigDir,\n\t\t},\n\t\tcli.StringFlag{\n\t\t\tName:        \"refreshToken\",\n\t\t\tPatterns:    []string{\"--refresh-token\"},\n\t\t\tDescription: \"Oauth refresh token used to get access token (for advanced users)\",\n\t\t},\n\t\tcli.StringFlag{\n\t\t\tName:        \"accessToken\",\n\t\t\tPatterns:    []string{\"--access-token\"},\n\t\t\tDescription: \"Oauth access token, only recommended for short-lived requests because of short lifetime (for advanced users)\",\n\t\t},\n\t\tcli.StringFlag{\n\t\t\tName:        \"serviceAccount\",\n\t\t\tPatterns:    []string{\"--service-account\"},\n\t\t\tDescription: \"Oauth service account filename, used for server to server communication without user interaction (filename path is relative to config dir)\",\n\t\t},\n\t}\n\n\thandlers := []*cli.Handler{\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] list [options]\",\n\t\t\tDescription: \"List files\",\n\t\t\tCallback:    listHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t\tcli.NewFlagGroup(\"options\",\n\t\t\t\t\tcli.IntFlag{\n\t\t\t\t\t\tName:         \"maxFiles\",\n\t\t\t\t\t\tPatterns:     []string{\"-m\", \"--max\"},\n\t\t\t\t\t\tDescription:  fmt.Sprintf(\"Max files to list, default: %d\", DefaultMaxFiles),\n\t\t\t\t\t\tDefaultValue: DefaultMaxFiles,\n\t\t\t\t\t},\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:         \"query\",\n\t\t\t\t\t\tPatterns:     []string{\"-q\", \"--query\"},\n\t\t\t\t\t\tDescription:  fmt.Sprintf(`Default query: \"%s\". See https://developers.google.com/drive/search-parameters`, DefaultQuery),\n\t\t\t\t\t\tDefaultValue: DefaultQuery,\n\t\t\t\t\t},\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:        \"sortOrder\",\n\t\t\t\t\t\tPatterns:    []string{\"--order\"},\n\t\t\t\t\t\tDescription: \"Sort order. See https://godoc.org/google.golang.org/api/drive/v3#FilesListCall.OrderBy\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.IntFlag{\n\t\t\t\t\t\tName:         \"nameWidth\",\n\t\t\t\t\t\tPatterns:     []string{\"--name-width\"},\n\t\t\t\t\t\tDescription:  fmt.Sprintf(\"Width of name column, default: %d, minimum: 9, use 0 for full width\", DefaultNameWidth),\n\t\t\t\t\t\tDefaultValue: DefaultNameWidth,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"absPath\",\n\t\t\t\t\t\tPatterns:    []string{\"--absolute\"},\n\t\t\t\t\t\tDescription: \"Show absolute path to file (will only show path from first parent)\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"skipHeader\",\n\t\t\t\t\t\tPatterns:    []string{\"--no-header\"},\n\t\t\t\t\t\tDescription: \"Dont print the header\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"sizeInBytes\",\n\t\t\t\t\t\tPatterns:    []string{\"--bytes\"},\n\t\t\t\t\t\tDescription: \"Size in bytes\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] download [options] <fileId>\",\n\t\t\tDescription: \"Download file or directory\",\n\t\t\tCallback:    downloadHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t\tcli.NewFlagGroup(\"options\",\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"force\",\n\t\t\t\t\t\tPatterns:    []string{\"-f\", \"--force\"},\n\t\t\t\t\t\tDescription: \"Overwrite existing file\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"skip\",\n\t\t\t\t\t\tPatterns:    []string{\"-s\", \"--skip\"},\n\t\t\t\t\t\tDescription: \"Skip existing files\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"recursive\",\n\t\t\t\t\t\tPatterns:    []string{\"-r\", \"--recursive\"},\n\t\t\t\t\t\tDescription: \"Download directory recursively, documents will be skipped\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:        \"path\",\n\t\t\t\t\t\tPatterns:    []string{\"--path\"},\n\t\t\t\t\t\tDescription: \"Download path\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"delete\",\n\t\t\t\t\t\tPatterns:    []string{\"--delete\"},\n\t\t\t\t\t\tDescription: \"Delete remote file when download is successful\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"noProgress\",\n\t\t\t\t\t\tPatterns:    []string{\"--no-progress\"},\n\t\t\t\t\t\tDescription: \"Hide progress\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"stdout\",\n\t\t\t\t\t\tPatterns:    []string{\"--stdout\"},\n\t\t\t\t\t\tDescription: \"Write file content to stdout\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.IntFlag{\n\t\t\t\t\t\tName:         \"timeout\",\n\t\t\t\t\t\tPatterns:     []string{\"--timeout\"},\n\t\t\t\t\t\tDescription:  fmt.Sprintf(\"Set timeout in seconds, use 0 for no timeout. Timeout is reached when no data is transferred in set amount of seconds, default: %d\", DefaultTimeout),\n\t\t\t\t\t\tDefaultValue: DefaultTimeout,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] download query [options] <query>\",\n\t\t\tDescription: \"Download all files and directories matching query\",\n\t\t\tCallback:    downloadQueryHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t\tcli.NewFlagGroup(\"options\",\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"force\",\n\t\t\t\t\t\tPatterns:    []string{\"-f\", \"--force\"},\n\t\t\t\t\t\tDescription: \"Overwrite existing file\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"skip\",\n\t\t\t\t\t\tPatterns:    []string{\"-s\", \"--skip\"},\n\t\t\t\t\t\tDescription: \"Skip existing files\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"recursive\",\n\t\t\t\t\t\tPatterns:    []string{\"-r\", \"--recursive\"},\n\t\t\t\t\t\tDescription: \"Download directories recursively, documents will be skipped\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:        \"path\",\n\t\t\t\t\t\tPatterns:    []string{\"--path\"},\n\t\t\t\t\t\tDescription: \"Download path\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"noProgress\",\n\t\t\t\t\t\tPatterns:    []string{\"--no-progress\"},\n\t\t\t\t\t\tDescription: \"Hide progress\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] upload [options] <path>\",\n\t\t\tDescription: \"Upload file or directory\",\n\t\t\tCallback:    uploadHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t\tcli.NewFlagGroup(\"options\",\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"recursive\",\n\t\t\t\t\t\tPatterns:    []string{\"-r\", \"--recursive\"},\n\t\t\t\t\t\tDescription: \"Upload directory recursively\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.StringSliceFlag{\n\t\t\t\t\t\tName:        \"parent\",\n\t\t\t\t\t\tPatterns:    []string{\"-p\", \"--parent\"},\n\t\t\t\t\t\tDescription: \"Parent id, used to upload file to a specific directory, can be specified multiple times to give many parents\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:        \"name\",\n\t\t\t\t\t\tPatterns:    []string{\"--name\"},\n\t\t\t\t\t\tDescription: \"Filename\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:        \"description\",\n\t\t\t\t\t\tPatterns:    []string{\"--description\"},\n\t\t\t\t\t\tDescription: \"File description\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"noProgress\",\n\t\t\t\t\t\tPatterns:    []string{\"--no-progress\"},\n\t\t\t\t\t\tDescription: \"Hide progress\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:        \"mime\",\n\t\t\t\t\t\tPatterns:    []string{\"--mime\"},\n\t\t\t\t\t\tDescription: \"Force mime type\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"share\",\n\t\t\t\t\t\tPatterns:    []string{\"--share\"},\n\t\t\t\t\t\tDescription: \"Share file\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"delete\",\n\t\t\t\t\t\tPatterns:    []string{\"--delete\"},\n\t\t\t\t\t\tDescription: \"Delete local file when upload is successful\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.IntFlag{\n\t\t\t\t\t\tName:         \"timeout\",\n\t\t\t\t\t\tPatterns:     []string{\"--timeout\"},\n\t\t\t\t\t\tDescription:  fmt.Sprintf(\"Set timeout in seconds, use 0 for no timeout. Timeout is reached when no data is transferred in set amount of seconds, default: %d\", DefaultTimeout),\n\t\t\t\t\t\tDefaultValue: DefaultTimeout,\n\t\t\t\t\t},\n\t\t\t\t\tcli.IntFlag{\n\t\t\t\t\t\tName:         \"chunksize\",\n\t\t\t\t\t\tPatterns:     []string{\"--chunksize\"},\n\t\t\t\t\t\tDescription:  fmt.Sprintf(\"Set chunk size in bytes, default: %d\", DefaultUploadChunkSize),\n\t\t\t\t\t\tDefaultValue: DefaultUploadChunkSize,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] upload - [options] <name>\",\n\t\t\tDescription: \"Upload file from stdin\",\n\t\t\tCallback:    uploadStdinHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t\tcli.NewFlagGroup(\"options\",\n\t\t\t\t\tcli.StringSliceFlag{\n\t\t\t\t\t\tName:        \"parent\",\n\t\t\t\t\t\tPatterns:    []string{\"-p\", \"--parent\"},\n\t\t\t\t\t\tDescription: \"Parent id, used to upload file to a specific directory, can be specified multiple times to give many parents\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.IntFlag{\n\t\t\t\t\t\tName:         \"chunksize\",\n\t\t\t\t\t\tPatterns:     []string{\"--chunksize\"},\n\t\t\t\t\t\tDescription:  fmt.Sprintf(\"Set chunk size in bytes, default: %d\", DefaultUploadChunkSize),\n\t\t\t\t\t\tDefaultValue: DefaultUploadChunkSize,\n\t\t\t\t\t},\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:        \"description\",\n\t\t\t\t\t\tPatterns:    []string{\"--description\"},\n\t\t\t\t\t\tDescription: \"File description\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:        \"mime\",\n\t\t\t\t\t\tPatterns:    []string{\"--mime\"},\n\t\t\t\t\t\tDescription: \"Force mime type\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"share\",\n\t\t\t\t\t\tPatterns:    []string{\"--share\"},\n\t\t\t\t\t\tDescription: \"Share file\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.IntFlag{\n\t\t\t\t\t\tName:         \"timeout\",\n\t\t\t\t\t\tPatterns:     []string{\"--timeout\"},\n\t\t\t\t\t\tDescription:  fmt.Sprintf(\"Set timeout in seconds, use 0 for no timeout. Timeout is reached when no data is transferred in set amount of seconds, default: %d\", DefaultTimeout),\n\t\t\t\t\t\tDefaultValue: DefaultTimeout,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"noProgress\",\n\t\t\t\t\t\tPatterns:    []string{\"--no-progress\"},\n\t\t\t\t\t\tDescription: \"Hide progress\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] update [options] <fileId> <path>\",\n\t\t\tDescription: \"Update file, this creates a new revision of the file\",\n\t\t\tCallback:    updateHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t\tcli.NewFlagGroup(\"options\",\n\t\t\t\t\tcli.StringSliceFlag{\n\t\t\t\t\t\tName:        \"parent\",\n\t\t\t\t\t\tPatterns:    []string{\"-p\", \"--parent\"},\n\t\t\t\t\t\tDescription: \"Parent id, used to upload file to a specific directory, can be specified multiple times to give many parents\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:        \"name\",\n\t\t\t\t\t\tPatterns:    []string{\"--name\"},\n\t\t\t\t\t\tDescription: \"Filename\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:        \"description\",\n\t\t\t\t\t\tPatterns:    []string{\"--description\"},\n\t\t\t\t\t\tDescription: \"File description\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"noProgress\",\n\t\t\t\t\t\tPatterns:    []string{\"--no-progress\"},\n\t\t\t\t\t\tDescription: \"Hide progress\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:        \"mime\",\n\t\t\t\t\t\tPatterns:    []string{\"--mime\"},\n\t\t\t\t\t\tDescription: \"Force mime type\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.IntFlag{\n\t\t\t\t\t\tName:         \"timeout\",\n\t\t\t\t\t\tPatterns:     []string{\"--timeout\"},\n\t\t\t\t\t\tDescription:  fmt.Sprintf(\"Set timeout in seconds, use 0 for no timeout. Timeout is reached when no data is transferred in set amount of seconds, default: %d\", DefaultTimeout),\n\t\t\t\t\t\tDefaultValue: DefaultTimeout,\n\t\t\t\t\t},\n\t\t\t\t\tcli.IntFlag{\n\t\t\t\t\t\tName:         \"chunksize\",\n\t\t\t\t\t\tPatterns:     []string{\"--chunksize\"},\n\t\t\t\t\t\tDescription:  fmt.Sprintf(\"Set chunk size in bytes, default: %d\", DefaultUploadChunkSize),\n\t\t\t\t\t\tDefaultValue: DefaultUploadChunkSize,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] info [options] <fileId>\",\n\t\t\tDescription: \"Show file info\",\n\t\t\tCallback:    infoHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t\tcli.NewFlagGroup(\"options\",\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"sizeInBytes\",\n\t\t\t\t\t\tPatterns:    []string{\"--bytes\"},\n\t\t\t\t\t\tDescription: \"Show size in bytes\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] mkdir [options] <name>\",\n\t\t\tDescription: \"Create directory\",\n\t\t\tCallback:    mkdirHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t\tcli.NewFlagGroup(\"options\",\n\t\t\t\t\tcli.StringSliceFlag{\n\t\t\t\t\t\tName:        \"parent\",\n\t\t\t\t\t\tPatterns:    []string{\"-p\", \"--parent\"},\n\t\t\t\t\t\tDescription: \"Parent id of created directory, can be specified multiple times to give many parents\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:        \"description\",\n\t\t\t\t\t\tPatterns:    []string{\"--description\"},\n\t\t\t\t\t\tDescription: \"Directory description\",\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] share [options] <fileId>\",\n\t\t\tDescription: \"Share file or directory\",\n\t\t\tCallback:    shareHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t\tcli.NewFlagGroup(\"options\",\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:         \"role\",\n\t\t\t\t\t\tPatterns:     []string{\"--role\"},\n\t\t\t\t\t\tDescription:  fmt.Sprintf(\"Share role: owner/writer/commenter/reader, default: %s\", DefaultShareRole),\n\t\t\t\t\t\tDefaultValue: DefaultShareRole,\n\t\t\t\t\t},\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:         \"type\",\n\t\t\t\t\t\tPatterns:     []string{\"--type\"},\n\t\t\t\t\t\tDescription:  fmt.Sprintf(\"Share type: user/group/domain/anyone, default: %s\", DefaultShareType),\n\t\t\t\t\t\tDefaultValue: DefaultShareType,\n\t\t\t\t\t},\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:        \"email\",\n\t\t\t\t\t\tPatterns:    []string{\"--email\"},\n\t\t\t\t\t\tDescription: \"The email address of the user or group to share the file with. Requires 'user' or 'group' as type\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:        \"domain\",\n\t\t\t\t\t\tPatterns:    []string{\"--domain\"},\n\t\t\t\t\t\tDescription: \"The name of Google Apps domain. Requires 'domain' as type\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"discoverable\",\n\t\t\t\t\t\tPatterns:    []string{\"--discoverable\"},\n\t\t\t\t\t\tDescription: \"Make file discoverable by search engines\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"revoke\",\n\t\t\t\t\t\tPatterns:    []string{\"--revoke\"},\n\t\t\t\t\t\tDescription: \"Delete all sharing permissions (owner roles will be skipped)\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] share list <fileId>\",\n\t\t\tDescription: \"List files permissions\",\n\t\t\tCallback:    shareListHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] share revoke <fileId> <permissionId>\",\n\t\t\tDescription: \"Revoke permission\",\n\t\t\tCallback:    shareRevokeHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] delete [options] <fileId>\",\n\t\t\tDescription: \"Delete file or directory\",\n\t\t\tCallback:    deleteHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t\tcli.NewFlagGroup(\"options\",\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"recursive\",\n\t\t\t\t\t\tPatterns:    []string{\"-r\", \"--recursive\"},\n\t\t\t\t\t\tDescription: \"Delete directory and all it's content\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] sync list [options]\",\n\t\t\tDescription: \"List all syncable directories on drive\",\n\t\t\tCallback:    listSyncHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t\tcli.NewFlagGroup(\"options\",\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"skipHeader\",\n\t\t\t\t\t\tPatterns:    []string{\"--no-header\"},\n\t\t\t\t\t\tDescription: \"Dont print the header\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] sync content [options] <fileId>\",\n\t\t\tDescription: \"List content of syncable directory\",\n\t\t\tCallback:    listRecursiveSyncHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t\tcli.NewFlagGroup(\"options\",\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:        \"sortOrder\",\n\t\t\t\t\t\tPatterns:    []string{\"--order\"},\n\t\t\t\t\t\tDescription: \"Sort order. See https://godoc.org/google.golang.org/api/drive/v3#FilesListCall.OrderBy\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.IntFlag{\n\t\t\t\t\t\tName:         \"pathWidth\",\n\t\t\t\t\t\tPatterns:     []string{\"--path-width\"},\n\t\t\t\t\t\tDescription:  fmt.Sprintf(\"Width of path column, default: %d, minimum: 9, use 0 for full width\", DefaultPathWidth),\n\t\t\t\t\t\tDefaultValue: DefaultPathWidth,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"skipHeader\",\n\t\t\t\t\t\tPatterns:    []string{\"--no-header\"},\n\t\t\t\t\t\tDescription: \"Dont print the header\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"sizeInBytes\",\n\t\t\t\t\t\tPatterns:    []string{\"--bytes\"},\n\t\t\t\t\t\tDescription: \"Size in bytes\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] sync download [options] <fileId> <path>\",\n\t\t\tDescription: \"Sync drive directory to local directory\",\n\t\t\tCallback:    downloadSyncHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t\tcli.NewFlagGroup(\"options\",\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"keepRemote\",\n\t\t\t\t\t\tPatterns:    []string{\"--keep-remote\"},\n\t\t\t\t\t\tDescription: \"Keep remote file when a conflict is encountered\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"keepLocal\",\n\t\t\t\t\t\tPatterns:    []string{\"--keep-local\"},\n\t\t\t\t\t\tDescription: \"Keep local file when a conflict is encountered\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"keepLargest\",\n\t\t\t\t\t\tPatterns:    []string{\"--keep-largest\"},\n\t\t\t\t\t\tDescription: \"Keep largest file when a conflict is encountered\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"deleteExtraneous\",\n\t\t\t\t\t\tPatterns:    []string{\"--delete-extraneous\"},\n\t\t\t\t\t\tDescription: \"Delete extraneous local files\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"dryRun\",\n\t\t\t\t\t\tPatterns:    []string{\"--dry-run\"},\n\t\t\t\t\t\tDescription: \"Show what would have been transferred\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"noProgress\",\n\t\t\t\t\t\tPatterns:    []string{\"--no-progress\"},\n\t\t\t\t\t\tDescription: \"Hide progress\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.IntFlag{\n\t\t\t\t\t\tName:         \"timeout\",\n\t\t\t\t\t\tPatterns:     []string{\"--timeout\"},\n\t\t\t\t\t\tDescription:  fmt.Sprintf(\"Set timeout in seconds, use 0 for no timeout. Timeout is reached when no data is transferred in set amount of seconds, default: %d\", DefaultTimeout),\n\t\t\t\t\t\tDefaultValue: DefaultTimeout,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] sync upload [options] <path> <fileId>\",\n\t\t\tDescription: \"Sync local directory to drive\",\n\t\t\tCallback:    uploadSyncHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t\tcli.NewFlagGroup(\"options\",\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"keepRemote\",\n\t\t\t\t\t\tPatterns:    []string{\"--keep-remote\"},\n\t\t\t\t\t\tDescription: \"Keep remote file when a conflict is encountered\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"keepLocal\",\n\t\t\t\t\t\tPatterns:    []string{\"--keep-local\"},\n\t\t\t\t\t\tDescription: \"Keep local file when a conflict is encountered\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"keepLargest\",\n\t\t\t\t\t\tPatterns:    []string{\"--keep-largest\"},\n\t\t\t\t\t\tDescription: \"Keep largest file when a conflict is encountered\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"deleteExtraneous\",\n\t\t\t\t\t\tPatterns:    []string{\"--delete-extraneous\"},\n\t\t\t\t\t\tDescription: \"Delete extraneous remote files\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"dryRun\",\n\t\t\t\t\t\tPatterns:    []string{\"--dry-run\"},\n\t\t\t\t\t\tDescription: \"Show what would have been transferred\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"noProgress\",\n\t\t\t\t\t\tPatterns:    []string{\"--no-progress\"},\n\t\t\t\t\t\tDescription: \"Hide progress\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.IntFlag{\n\t\t\t\t\t\tName:         \"timeout\",\n\t\t\t\t\t\tPatterns:     []string{\"--timeout\"},\n\t\t\t\t\t\tDescription:  fmt.Sprintf(\"Set timeout in seconds, use 0 for no timeout. Timeout is reached when no data is transferred in set amount of seconds, default: %d\", DefaultTimeout),\n\t\t\t\t\t\tDefaultValue: DefaultTimeout,\n\t\t\t\t\t},\n\t\t\t\t\tcli.IntFlag{\n\t\t\t\t\t\tName:         \"chunksize\",\n\t\t\t\t\t\tPatterns:     []string{\"--chunksize\"},\n\t\t\t\t\t\tDescription:  fmt.Sprintf(\"Set chunk size in bytes, default: %d\", DefaultUploadChunkSize),\n\t\t\t\t\t\tDefaultValue: DefaultUploadChunkSize,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] changes [options]\",\n\t\t\tDescription: \"List file changes\",\n\t\t\tCallback:    listChangesHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t\tcli.NewFlagGroup(\"options\",\n\t\t\t\t\tcli.IntFlag{\n\t\t\t\t\t\tName:         \"maxChanges\",\n\t\t\t\t\t\tPatterns:     []string{\"-m\", \"--max\"},\n\t\t\t\t\t\tDescription:  fmt.Sprintf(\"Max changes to list, default: %d\", DefaultMaxChanges),\n\t\t\t\t\t\tDefaultValue: DefaultMaxChanges,\n\t\t\t\t\t},\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:         \"pageToken\",\n\t\t\t\t\t\tPatterns:     []string{\"--since\"},\n\t\t\t\t\t\tDescription:  fmt.Sprintf(\"Page token to start listing changes from\"),\n\t\t\t\t\t\tDefaultValue: \"1\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"now\",\n\t\t\t\t\t\tPatterns:    []string{\"--now\"},\n\t\t\t\t\t\tDescription: fmt.Sprintf(\"Get latest page token\"),\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.IntFlag{\n\t\t\t\t\t\tName:         \"nameWidth\",\n\t\t\t\t\t\tPatterns:     []string{\"--name-width\"},\n\t\t\t\t\t\tDescription:  fmt.Sprintf(\"Width of name column, default: %d, minimum: 9, use 0 for full width\", DefaultNameWidth),\n\t\t\t\t\t\tDefaultValue: DefaultNameWidth,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"skipHeader\",\n\t\t\t\t\t\tPatterns:    []string{\"--no-header\"},\n\t\t\t\t\t\tDescription: \"Dont print the header\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] revision list [options] <fileId>\",\n\t\t\tDescription: \"List file revisions\",\n\t\t\tCallback:    listRevisionsHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t\tcli.NewFlagGroup(\"options\",\n\t\t\t\t\tcli.IntFlag{\n\t\t\t\t\t\tName:         \"nameWidth\",\n\t\t\t\t\t\tPatterns:     []string{\"--name-width\"},\n\t\t\t\t\t\tDescription:  fmt.Sprintf(\"Width of name column, default: %d, minimum: 9, use 0 for full width\", DefaultNameWidth),\n\t\t\t\t\t\tDefaultValue: DefaultNameWidth,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"skipHeader\",\n\t\t\t\t\t\tPatterns:    []string{\"--no-header\"},\n\t\t\t\t\t\tDescription: \"Dont print the header\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"sizeInBytes\",\n\t\t\t\t\t\tPatterns:    []string{\"--bytes\"},\n\t\t\t\t\t\tDescription: \"Size in bytes\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] revision download [options] <fileId> <revId>\",\n\t\t\tDescription: \"Download revision\",\n\t\t\tCallback:    downloadRevisionHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t\tcli.NewFlagGroup(\"options\",\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"force\",\n\t\t\t\t\t\tPatterns:    []string{\"-f\", \"--force\"},\n\t\t\t\t\t\tDescription: \"Overwrite existing file\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"noProgress\",\n\t\t\t\t\t\tPatterns:    []string{\"--no-progress\"},\n\t\t\t\t\t\tDescription: \"Hide progress\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"stdout\",\n\t\t\t\t\t\tPatterns:    []string{\"--stdout\"},\n\t\t\t\t\t\tDescription: \"Write file content to stdout\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:        \"path\",\n\t\t\t\t\t\tPatterns:    []string{\"--path\"},\n\t\t\t\t\t\tDescription: \"Download path\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.IntFlag{\n\t\t\t\t\t\tName:         \"timeout\",\n\t\t\t\t\t\tPatterns:     []string{\"--timeout\"},\n\t\t\t\t\t\tDescription:  fmt.Sprintf(\"Set timeout in seconds, use 0 for no timeout. Timeout is reached when no data is transferred in set amount of seconds, default: %d\", DefaultTimeout),\n\t\t\t\t\t\tDefaultValue: DefaultTimeout,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] revision delete <fileId> <revId>\",\n\t\t\tDescription: \"Delete file revision\",\n\t\t\tCallback:    deleteRevisionHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] import [options] <path>\",\n\t\t\tDescription: \"Upload and convert file to a google document, see 'about import' for available conversions\",\n\t\t\tCallback:    importHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t\tcli.NewFlagGroup(\"options\",\n\t\t\t\t\tcli.StringSliceFlag{\n\t\t\t\t\t\tName:        \"parent\",\n\t\t\t\t\t\tPatterns:    []string{\"-p\", \"--parent\"},\n\t\t\t\t\t\tDescription: \"Parent id, used to upload file to a specific directory, can be specified multiple times to give many parents\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"noProgress\",\n\t\t\t\t\t\tPatterns:    []string{\"--no-progress\"},\n\t\t\t\t\t\tDescription: \"Hide progress\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:        \"mime\",\n\t\t\t\t\t\tPatterns:    []string{\"--mime\"},\n\t\t\t\t\t\tDescription: \"Mime type of imported file\",\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] export [options] <fileId>\",\n\t\t\tDescription: \"Export a google document\",\n\t\t\tCallback:    exportHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t\tcli.NewFlagGroup(\"options\",\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"force\",\n\t\t\t\t\t\tPatterns:    []string{\"-f\", \"--force\"},\n\t\t\t\t\t\tDescription: \"Overwrite existing file\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t\tcli.StringFlag{\n\t\t\t\t\t\tName:        \"mime\",\n\t\t\t\t\t\tPatterns:    []string{\"--mime\"},\n\t\t\t\t\t\tDescription: \"Mime type of exported file\",\n\t\t\t\t\t},\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"printMimes\",\n\t\t\t\t\t\tPatterns:    []string{\"--print-mimes\"},\n\t\t\t\t\t\tDescription: \"Print available mime types for given file\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] about [options]\",\n\t\t\tDescription: \"Google drive metadata, quota usage\",\n\t\t\tCallback:    aboutHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t\tcli.NewFlagGroup(\"options\",\n\t\t\t\t\tcli.BoolFlag{\n\t\t\t\t\t\tName:        \"sizeInBytes\",\n\t\t\t\t\t\tPatterns:    []string{\"--bytes\"},\n\t\t\t\t\t\tDescription: \"Show size in bytes\",\n\t\t\t\t\t\tOmitValue:   true,\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] about import\",\n\t\t\tDescription: \"Show supported import formats\",\n\t\t\tCallback:    aboutImportHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"[global] about export\",\n\t\t\tDescription: \"Show supported export formats\",\n\t\t\tCallback:    aboutExportHandler,\n\t\t\tFlagGroups: cli.FlagGroups{\n\t\t\t\tcli.NewFlagGroup(\"global\", globalFlags...),\n\t\t\t},\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"version\",\n\t\t\tDescription: \"Print application version\",\n\t\t\tCallback:    printVersion,\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"help\",\n\t\t\tDescription: \"Print help\",\n\t\t\tCallback:    printHelp,\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"help <command>\",\n\t\t\tDescription: \"Print command help\",\n\t\t\tCallback:    printCommandHelp,\n\t\t},\n\t\t&cli.Handler{\n\t\t\tPattern:     \"help <command> <subcommand>\",\n\t\t\tDescription: \"Print subcommand help\",\n\t\t\tCallback:    printSubCommandHelp,\n\t\t},\n\t}\n\n\tcli.SetHandlers(handlers)\n\n\tif ok := cli.Handle(os.Args[1:]); !ok {\n\t\tExitF(\"No valid arguments given, use '%s help' to see available commands\", Name)\n\t}\n}\n"
        },
        {
          "name": "handlers_drive.go",
          "type": "blob",
          "size": 12.2275390625,
          "content": "package main\n\nimport (\n\t\"fmt\"\n\t\"io\"\n\t\"io/ioutil\"\n\t\"net/http\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"time\"\n\n\t\"github.com/prasmussen/gdrive/auth\"\n\t\"github.com/prasmussen/gdrive/cli\"\n\t\"github.com/prasmussen/gdrive/drive\"\n)\n\nconst ClientId = \"367116221053-7n0vf5akeru7on6o2fjinrecpdoe99eg.apps.googleusercontent.com\"\nconst ClientSecret = \"1qsNodXNaWq1mQuBjUjmvhoO\"\nconst TokenFilename = \"token_v2.json\"\nconst DefaultCacheFileName = \"file_cache.json\"\n\nfunc listHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\terr := newDrive(args).List(drive.ListFilesArgs{\n\t\tOut:         os.Stdout,\n\t\tMaxFiles:    args.Int64(\"maxFiles\"),\n\t\tNameWidth:   args.Int64(\"nameWidth\"),\n\t\tQuery:       args.String(\"query\"),\n\t\tSortOrder:   args.String(\"sortOrder\"),\n\t\tSkipHeader:  args.Bool(\"skipHeader\"),\n\t\tSizeInBytes: args.Bool(\"sizeInBytes\"),\n\t\tAbsPath:     args.Bool(\"absPath\"),\n\t})\n\tcheckErr(err)\n}\n\nfunc listChangesHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\terr := newDrive(args).ListChanges(drive.ListChangesArgs{\n\t\tOut:        os.Stdout,\n\t\tPageToken:  args.String(\"pageToken\"),\n\t\tMaxChanges: args.Int64(\"maxChanges\"),\n\t\tNow:        args.Bool(\"now\"),\n\t\tNameWidth:  args.Int64(\"nameWidth\"),\n\t\tSkipHeader: args.Bool(\"skipHeader\"),\n\t})\n\tcheckErr(err)\n}\n\nfunc downloadHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\tcheckDownloadArgs(args)\n\terr := newDrive(args).Download(drive.DownloadArgs{\n\t\tOut:       os.Stdout,\n\t\tId:        args.String(\"fileId\"),\n\t\tForce:     args.Bool(\"force\"),\n\t\tSkip:      args.Bool(\"skip\"),\n\t\tPath:      args.String(\"path\"),\n\t\tDelete:    args.Bool(\"delete\"),\n\t\tRecursive: args.Bool(\"recursive\"),\n\t\tStdout:    args.Bool(\"stdout\"),\n\t\tProgress:  progressWriter(args.Bool(\"noProgress\")),\n\t\tTimeout:   durationInSeconds(args.Int64(\"timeout\")),\n\t})\n\tcheckErr(err)\n}\n\nfunc downloadQueryHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\terr := newDrive(args).DownloadQuery(drive.DownloadQueryArgs{\n\t\tOut:       os.Stdout,\n\t\tQuery:     args.String(\"query\"),\n\t\tForce:     args.Bool(\"force\"),\n\t\tSkip:      args.Bool(\"skip\"),\n\t\tRecursive: args.Bool(\"recursive\"),\n\t\tPath:      args.String(\"path\"),\n\t\tProgress:  progressWriter(args.Bool(\"noProgress\")),\n\t})\n\tcheckErr(err)\n}\n\nfunc downloadSyncHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\tcachePath := filepath.Join(args.String(\"configDir\"), DefaultCacheFileName)\n\terr := newDrive(args).DownloadSync(drive.DownloadSyncArgs{\n\t\tOut:              os.Stdout,\n\t\tProgress:         progressWriter(args.Bool(\"noProgress\")),\n\t\tPath:             args.String(\"path\"),\n\t\tRootId:           args.String(\"fileId\"),\n\t\tDryRun:           args.Bool(\"dryRun\"),\n\t\tDeleteExtraneous: args.Bool(\"deleteExtraneous\"),\n\t\tTimeout:          durationInSeconds(args.Int64(\"timeout\")),\n\t\tResolution:       conflictResolution(args),\n\t\tComparer:         NewCachedMd5Comparer(cachePath),\n\t})\n\tcheckErr(err)\n}\n\nfunc downloadRevisionHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\terr := newDrive(args).DownloadRevision(drive.DownloadRevisionArgs{\n\t\tOut:        os.Stdout,\n\t\tFileId:     args.String(\"fileId\"),\n\t\tRevisionId: args.String(\"revId\"),\n\t\tForce:      args.Bool(\"force\"),\n\t\tStdout:     args.Bool(\"stdout\"),\n\t\tPath:       args.String(\"path\"),\n\t\tProgress:   progressWriter(args.Bool(\"noProgress\")),\n\t\tTimeout:    durationInSeconds(args.Int64(\"timeout\")),\n\t})\n\tcheckErr(err)\n}\n\nfunc uploadHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\tcheckUploadArgs(args)\n\terr := newDrive(args).Upload(drive.UploadArgs{\n\t\tOut:         os.Stdout,\n\t\tProgress:    progressWriter(args.Bool(\"noProgress\")),\n\t\tPath:        args.String(\"path\"),\n\t\tName:        args.String(\"name\"),\n\t\tDescription: args.String(\"description\"),\n\t\tParents:     args.StringSlice(\"parent\"),\n\t\tMime:        args.String(\"mime\"),\n\t\tRecursive:   args.Bool(\"recursive\"),\n\t\tShare:       args.Bool(\"share\"),\n\t\tDelete:      args.Bool(\"delete\"),\n\t\tChunkSize:   args.Int64(\"chunksize\"),\n\t\tTimeout:     durationInSeconds(args.Int64(\"timeout\")),\n\t})\n\tcheckErr(err)\n}\n\nfunc uploadStdinHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\terr := newDrive(args).UploadStream(drive.UploadStreamArgs{\n\t\tOut:         os.Stdout,\n\t\tIn:          os.Stdin,\n\t\tName:        args.String(\"name\"),\n\t\tDescription: args.String(\"description\"),\n\t\tParents:     args.StringSlice(\"parent\"),\n\t\tMime:        args.String(\"mime\"),\n\t\tShare:       args.Bool(\"share\"),\n\t\tChunkSize:   args.Int64(\"chunksize\"),\n\t\tTimeout:     durationInSeconds(args.Int64(\"timeout\")),\n\t\tProgress:    progressWriter(args.Bool(\"noProgress\")),\n\t})\n\tcheckErr(err)\n}\n\nfunc uploadSyncHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\tcachePath := filepath.Join(args.String(\"configDir\"), DefaultCacheFileName)\n\terr := newDrive(args).UploadSync(drive.UploadSyncArgs{\n\t\tOut:              os.Stdout,\n\t\tProgress:         progressWriter(args.Bool(\"noProgress\")),\n\t\tPath:             args.String(\"path\"),\n\t\tRootId:           args.String(\"fileId\"),\n\t\tDryRun:           args.Bool(\"dryRun\"),\n\t\tDeleteExtraneous: args.Bool(\"deleteExtraneous\"),\n\t\tChunkSize:        args.Int64(\"chunksize\"),\n\t\tTimeout:          durationInSeconds(args.Int64(\"timeout\")),\n\t\tResolution:       conflictResolution(args),\n\t\tComparer:         NewCachedMd5Comparer(cachePath),\n\t})\n\tcheckErr(err)\n}\n\nfunc updateHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\terr := newDrive(args).Update(drive.UpdateArgs{\n\t\tOut:         os.Stdout,\n\t\tId:          args.String(\"fileId\"),\n\t\tPath:        args.String(\"path\"),\n\t\tName:        args.String(\"name\"),\n\t\tDescription: args.String(\"description\"),\n\t\tParents:     args.StringSlice(\"parent\"),\n\t\tMime:        args.String(\"mime\"),\n\t\tProgress:    progressWriter(args.Bool(\"noProgress\")),\n\t\tChunkSize:   args.Int64(\"chunksize\"),\n\t\tTimeout:     durationInSeconds(args.Int64(\"timeout\")),\n\t})\n\tcheckErr(err)\n}\n\nfunc infoHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\terr := newDrive(args).Info(drive.FileInfoArgs{\n\t\tOut:         os.Stdout,\n\t\tId:          args.String(\"fileId\"),\n\t\tSizeInBytes: args.Bool(\"sizeInBytes\"),\n\t})\n\tcheckErr(err)\n}\n\nfunc importHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\terr := newDrive(args).Import(drive.ImportArgs{\n\t\tMime:     args.String(\"mime\"),\n\t\tOut:      os.Stdout,\n\t\tPath:     args.String(\"path\"),\n\t\tParents:  args.StringSlice(\"parent\"),\n\t\tProgress: progressWriter(args.Bool(\"noProgress\")),\n\t})\n\tcheckErr(err)\n}\n\nfunc exportHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\terr := newDrive(args).Export(drive.ExportArgs{\n\t\tOut:        os.Stdout,\n\t\tId:         args.String(\"fileId\"),\n\t\tMime:       args.String(\"mime\"),\n\t\tPrintMimes: args.Bool(\"printMimes\"),\n\t\tForce:      args.Bool(\"force\"),\n\t})\n\tcheckErr(err)\n}\n\nfunc listRevisionsHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\terr := newDrive(args).ListRevisions(drive.ListRevisionsArgs{\n\t\tOut:         os.Stdout,\n\t\tId:          args.String(\"fileId\"),\n\t\tNameWidth:   args.Int64(\"nameWidth\"),\n\t\tSizeInBytes: args.Bool(\"sizeInBytes\"),\n\t\tSkipHeader:  args.Bool(\"skipHeader\"),\n\t})\n\tcheckErr(err)\n}\n\nfunc mkdirHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\terr := newDrive(args).Mkdir(drive.MkdirArgs{\n\t\tOut:         os.Stdout,\n\t\tName:        args.String(\"name\"),\n\t\tDescription: args.String(\"description\"),\n\t\tParents:     args.StringSlice(\"parent\"),\n\t})\n\tcheckErr(err)\n}\n\nfunc shareHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\terr := newDrive(args).Share(drive.ShareArgs{\n\t\tOut:          os.Stdout,\n\t\tFileId:       args.String(\"fileId\"),\n\t\tRole:         args.String(\"role\"),\n\t\tType:         args.String(\"type\"),\n\t\tEmail:        args.String(\"email\"),\n\t\tDomain:       args.String(\"domain\"),\n\t\tDiscoverable: args.Bool(\"discoverable\"),\n\t})\n\tcheckErr(err)\n}\n\nfunc shareListHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\terr := newDrive(args).ListPermissions(drive.ListPermissionsArgs{\n\t\tOut:    os.Stdout,\n\t\tFileId: args.String(\"fileId\"),\n\t})\n\tcheckErr(err)\n}\n\nfunc shareRevokeHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\terr := newDrive(args).RevokePermission(drive.RevokePermissionArgs{\n\t\tOut:          os.Stdout,\n\t\tFileId:       args.String(\"fileId\"),\n\t\tPermissionId: args.String(\"permissionId\"),\n\t})\n\tcheckErr(err)\n}\n\nfunc deleteHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\terr := newDrive(args).Delete(drive.DeleteArgs{\n\t\tOut:       os.Stdout,\n\t\tId:        args.String(\"fileId\"),\n\t\tRecursive: args.Bool(\"recursive\"),\n\t})\n\tcheckErr(err)\n}\n\nfunc listSyncHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\terr := newDrive(args).ListSync(drive.ListSyncArgs{\n\t\tOut:        os.Stdout,\n\t\tSkipHeader: args.Bool(\"skipHeader\"),\n\t})\n\tcheckErr(err)\n}\n\nfunc listRecursiveSyncHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\terr := newDrive(args).ListRecursiveSync(drive.ListRecursiveSyncArgs{\n\t\tOut:         os.Stdout,\n\t\tRootId:      args.String(\"fileId\"),\n\t\tSkipHeader:  args.Bool(\"skipHeader\"),\n\t\tPathWidth:   args.Int64(\"pathWidth\"),\n\t\tSizeInBytes: args.Bool(\"sizeInBytes\"),\n\t\tSortOrder:   args.String(\"sortOrder\"),\n\t})\n\tcheckErr(err)\n}\n\nfunc deleteRevisionHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\terr := newDrive(args).DeleteRevision(drive.DeleteRevisionArgs{\n\t\tOut:        os.Stdout,\n\t\tFileId:     args.String(\"fileId\"),\n\t\tRevisionId: args.String(\"revId\"),\n\t})\n\tcheckErr(err)\n}\n\nfunc aboutHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\terr := newDrive(args).About(drive.AboutArgs{\n\t\tOut:         os.Stdout,\n\t\tSizeInBytes: args.Bool(\"sizeInBytes\"),\n\t})\n\tcheckErr(err)\n}\n\nfunc aboutImportHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\terr := newDrive(args).AboutImport(drive.AboutImportArgs{\n\t\tOut: os.Stdout,\n\t})\n\tcheckErr(err)\n}\n\nfunc aboutExportHandler(ctx cli.Context) {\n\targs := ctx.Args()\n\terr := newDrive(args).AboutExport(drive.AboutExportArgs{\n\t\tOut: os.Stdout,\n\t})\n\tcheckErr(err)\n}\n\nfunc getOauthClient(args cli.Arguments) (*http.Client, error) {\n\tif args.String(\"refreshToken\") != \"\" && args.String(\"accessToken\") != \"\" {\n\t\tExitF(\"Access token not needed when refresh token is provided\")\n\t}\n\n\tif args.String(\"refreshToken\") != \"\" {\n\t\treturn auth.NewRefreshTokenClient(ClientId, ClientSecret, args.String(\"refreshToken\")), nil\n\t}\n\n\tif args.String(\"accessToken\") != \"\" {\n\t\treturn auth.NewAccessTokenClient(ClientId, ClientSecret, args.String(\"accessToken\")), nil\n\t}\n\n\tconfigDir := getConfigDir(args)\n\n\tif args.String(\"serviceAccount\") != \"\" {\n\t\tserviceAccountPath := ConfigFilePath(configDir, args.String(\"serviceAccount\"))\n\t\tserviceAccountClient, err := auth.NewServiceAccountClient(serviceAccountPath)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t\treturn serviceAccountClient, nil\n\t}\n\n\ttokenPath := ConfigFilePath(configDir, TokenFilename)\n\treturn auth.NewFileSourceClient(ClientId, ClientSecret, tokenPath, authCodePrompt)\n}\n\nfunc getConfigDir(args cli.Arguments) string {\n\t// Use dir from environment var if present\n\tif os.Getenv(\"GDRIVE_CONFIG_DIR\") != \"\" {\n\t\treturn os.Getenv(\"GDRIVE_CONFIG_DIR\")\n\t}\n\treturn args.String(\"configDir\")\n}\n\nfunc newDrive(args cli.Arguments) *drive.Drive {\n\toauth, err := getOauthClient(args)\n\tif err != nil {\n\t\tExitF(\"Failed getting oauth client: %s\", err.Error())\n\t}\n\n\tclient, err := drive.New(oauth)\n\tif err != nil {\n\t\tExitF(\"Failed getting drive: %s\", err.Error())\n\t}\n\n\treturn client\n}\n\nfunc authCodePrompt(url string) func() string {\n\treturn func() string {\n\t\tfmt.Println(\"Authentication needed\")\n\t\tfmt.Println(\"Go to the following url in your browser:\")\n\t\tfmt.Printf(\"%s\\n\\n\", url)\n\t\tfmt.Print(\"Enter verification code: \")\n\n\t\tvar code string\n\t\tif _, err := fmt.Scan(&code); err != nil {\n\t\t\tfmt.Printf(\"Failed reading code: %s\", err.Error())\n\t\t}\n\t\treturn code\n\t}\n}\n\nfunc progressWriter(discard bool) io.Writer {\n\tif discard {\n\t\treturn ioutil.Discard\n\t}\n\treturn os.Stderr\n}\n\nfunc durationInSeconds(seconds int64) time.Duration {\n\treturn time.Second * time.Duration(seconds)\n}\n\nfunc conflictResolution(args cli.Arguments) drive.ConflictResolution {\n\tkeepLocal := args.Bool(\"keepLocal\")\n\tkeepRemote := args.Bool(\"keepRemote\")\n\tkeepLargest := args.Bool(\"keepLargest\")\n\n\tif (keepLocal && keepRemote) || (keepLocal && keepLargest) || (keepRemote && keepLargest) {\n\t\tExitF(\"Only one conflict resolution flag can be given\")\n\t}\n\n\tif keepLocal {\n\t\treturn drive.KeepLocal\n\t}\n\n\tif keepRemote {\n\t\treturn drive.KeepRemote\n\t}\n\n\tif keepLargest {\n\t\treturn drive.KeepLargest\n\t}\n\n\treturn drive.NoResolution\n}\n\nfunc checkUploadArgs(args cli.Arguments) {\n\tif args.Bool(\"recursive\") && args.Bool(\"delete\") {\n\t\tExitF(\"--delete is not allowed for recursive uploads\")\n\t}\n\n\tif args.Bool(\"recursive\") && args.Bool(\"share\") {\n\t\tExitF(\"--share is not allowed for recursive uploads\")\n\t}\n}\n\nfunc checkDownloadArgs(args cli.Arguments) {\n\tif args.Bool(\"recursive\") && args.Bool(\"delete\") {\n\t\tExitF(\"--delete is not allowed for recursive downloads\")\n\t}\n}\n"
        },
        {
          "name": "handlers_meta.go",
          "type": "blob",
          "size": 2.119140625,
          "content": "package main\n\nimport (\n\t\"fmt\"\n\t\"github.com/prasmussen/gdrive/cli\"\n\t\"os\"\n\t\"runtime\"\n\t\"strings\"\n\t\"text/tabwriter\"\n)\n\nfunc printVersion(ctx cli.Context) {\n\tfmt.Printf(\"%s: %s\\n\", Name, Version)\n\tfmt.Printf(\"Golang: %s\\n\", runtime.Version())\n\tfmt.Printf(\"OS/Arch: %s/%s\\n\", runtime.GOOS, runtime.GOARCH)\n}\n\nfunc printHelp(ctx cli.Context) {\n\tw := new(tabwriter.Writer)\n\tw.Init(os.Stdout, 0, 0, 3, ' ', 0)\n\n\tfmt.Fprintf(w, \"%s usage:\\n\\n\", Name)\n\n\tfor _, h := range ctx.Handlers() {\n\t\tfmt.Fprintf(w, \"%s %s\\t%s\\n\", Name, h.Pattern, h.Description)\n\t}\n\n\tw.Flush()\n}\n\nfunc printCommandHelp(ctx cli.Context) {\n\targs := ctx.Args()\n\tprintCommandPrefixHelp(ctx, args.String(\"command\"))\n}\n\nfunc printSubCommandHelp(ctx cli.Context) {\n\targs := ctx.Args()\n\tprintCommandPrefixHelp(ctx, args.String(\"command\"), args.String(\"subcommand\"))\n}\n\nfunc printCommandPrefixHelp(ctx cli.Context, prefix ...string) {\n\thandler := getHandler(ctx.Handlers(), prefix)\n\n\tif handler == nil {\n\t\tExitF(\"Command not found\")\n\t}\n\n\tw := new(tabwriter.Writer)\n\tw.Init(os.Stdout, 0, 0, 3, ' ', 0)\n\n\tfmt.Fprintf(w, \"%s\\n\", handler.Description)\n\tfmt.Fprintf(w, \"%s %s\\n\", Name, handler.Pattern)\n\tfor _, group := range handler.FlagGroups {\n\t\tfmt.Fprintf(w, \"\\n%s:\\n\", group.Name)\n\t\tfor _, flag := range group.Flags {\n\t\t\tboolFlag, isBool := flag.(cli.BoolFlag)\n\t\t\tif isBool && boolFlag.OmitValue {\n\t\t\t\tfmt.Fprintf(w, \"  %s\\t%s\\n\", strings.Join(flag.GetPatterns(), \", \"), flag.GetDescription())\n\t\t\t} else {\n\t\t\t\tfmt.Fprintf(w, \"  %s <%s>\\t%s\\n\", strings.Join(flag.GetPatterns(), \", \"), flag.GetName(), flag.GetDescription())\n\t\t\t}\n\t\t}\n\t}\n\n\tw.Flush()\n}\n\nfunc getHandler(handlers []*cli.Handler, prefix []string) *cli.Handler {\n\tfor _, h := range handlers {\n\t\tpattern := stripOptionals(h.SplitPattern())\n\n\t\tif len(prefix) > len(pattern) {\n\t\t\tcontinue\n\t\t}\n\n\t\tif equal(prefix, pattern[:len(prefix)]) {\n\t\t\treturn h\n\t\t}\n\t}\n\n\treturn nil\n}\n\n// Strip optional groups (<...>) from pattern\nfunc stripOptionals(pattern []string) []string {\n\tnewArgs := []string{}\n\n\tfor _, arg := range pattern {\n\t\tif strings.HasPrefix(arg, \"[\") && strings.HasSuffix(arg, \"]\") {\n\t\t\tcontinue\n\t\t}\n\t\tnewArgs = append(newArgs, arg)\n\t}\n\treturn newArgs\n}\n"
        },
        {
          "name": "util.go",
          "type": "blob",
          "size": 1.2763671875,
          "content": "package main\n\nimport (\n\t\"crypto/md5\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"runtime\"\n)\n\nfunc GetDefaultConfigDir() string {\n\treturn filepath.Join(Homedir(), \".gdrive\")\n}\n\nfunc ConfigFilePath(basePath, name string) string {\n\treturn filepath.Join(basePath, name)\n}\n\nfunc Homedir() string {\n\tif runtime.GOOS == \"windows\" {\n\t\treturn os.Getenv(\"APPDATA\")\n\t}\n\treturn os.Getenv(\"HOME\")\n}\n\nfunc equal(a, b []string) bool {\n\tif a == nil && b == nil {\n\t\treturn true\n\t}\n\n\tif a == nil || b == nil {\n\t\treturn false\n\t}\n\n\tif len(a) != len(b) {\n\t\treturn false\n\t}\n\n\tfor i := range a {\n\t\tif a[i] != b[i] {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}\n\nfunc ExitF(format string, a ...interface{}) {\n\tfmt.Fprintf(os.Stderr, format, a...)\n\tfmt.Println(\"\")\n\tos.Exit(1)\n}\n\nfunc checkErr(err error) {\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(1)\n\t}\n}\n\nfunc writeJson(path string, data interface{}) error {\n\ttmpFile := path + \".tmp\"\n\tf, err := os.Create(tmpFile)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\terr = json.NewEncoder(f).Encode(data)\n\tf.Close()\n\tif err != nil {\n\t\tos.Remove(tmpFile)\n\t\treturn err\n\t}\n\n\treturn os.Rename(tmpFile, path)\n}\n\nfunc md5sum(path string) string {\n\th := md5.New()\n\tf, err := os.Open(path)\n\tif err != nil {\n\t\treturn \"\"\n\t}\n\tdefer f.Close()\n\n\tio.Copy(h, f)\n\treturn fmt.Sprintf(\"%x\", h.Sum(nil))\n}\n"
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}