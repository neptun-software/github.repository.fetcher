{
  "metadata": {
    "timestamp": 1736567744955,
    "page": 331,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "gogo/protobuf",
      "stars": 5667,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0927734375,
          "content": "._*\n*.js\n*.js.map\n\n# Conformance test output and transient files.\nconformance/failing_tests.txt"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.5380859375,
          "content": "Walter Schulze\t<awalterschulze@gmail.com>\tWalter Schulze <walter@vastech.co.za>\nWalter Schulze\t<awalterschulze@gmail.com>\t<walter@vastech.co.za>\nWalter Schulze\t<awalterschulze@gmail.com>  awalterschulze <awalterschulze@gmail.com>\nWalter Schulze\t<awalterschulze@gmail.com>\tawalterschulze@gmail.com <awalterschulze@gmail.com>\nJohn Tuley\t\t<john@tuley.org>\t\t\t<jtuley@pivotal.io>\nAnton Povarov \t<anton.povarov@gmail.com>\t<antoxa@corp.badoo.com>\nDenis Smirnov \t<denis.smirnov.91@gmail.com> dennwc\nDongYun Kang    <ceram1000@gmail.com>\t\t<ceram1000@gmail.com>"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.4990234375,
          "content": "apt:\n  update: true\n\nenv:\n  - PROTOBUF_VERSION=2.6.1\n  - PROTOBUF_VERSION=3.0.2\n  - PROTOBUF_VERSION=3.14.0\n\nbefore_install:\n  - HOME=/home/travis ./install-protobuf.sh\n  - PATH=/home/travis/bin:$PATH protoc --version\n\nscript:\n  - PATH=/home/travis/bin:$PATH make buildserverall\n  - echo $TRAVIS_GO_VERSION\n  - if [[ \"$PROTOBUF_VERSION\" == \"3.14.0\" ]] && [[ \"$TRAVIS_GO_VERSION\" == \"1.15.x\" ]]; then ! git status --porcelain | read || (git status; git diff; exit 1); fi\n\nlanguage: go\n\ngo:\n  - 1.12.x\n  - 1.15.x\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.548828125,
          "content": "# This is the official list of GoGo authors for copyright purposes.\n# This file is distinct from the CONTRIBUTORS file, which\n# lists people.  For example, employees are listed in CONTRIBUTORS,\n# but not in AUTHORS, because the employer holds the copyright.\n\n# Names should be added to this file as one of\n#     Organization's name\n#     Individual's name <submission email address>\n#     Individual's name <submission email address> <email2> <emailN>\n\n# Please keep the list sorted.\n\nSendgrid, Inc\nVastech SA (PTY) LTD\nWalter Schulze <awalterschulze@gmail.com>\n"
        },
        {
          "name": "CONTRIBUTORS",
          "type": "blob",
          "size": 0.8251953125,
          "content": "Anton Povarov <anton.povarov@gmail.com>\nBrian Goff <cpuguy83@gmail.com>\nClayton Coleman <ccoleman@redhat.com>\nDenis Smirnov <denis.smirnov.91@gmail.com>\nDongYun Kang <ceram1000@gmail.com>\nDwayne Schultz <dschultz@pivotal.io>\nGeorg Apitz <gapitz@pivotal.io>\nGustav Paul <gustav.paul@gmail.com>\nJohan Brandhorst <johan.brandhorst@gmail.com>\nJohn Shahid <jvshahid@gmail.com>\nJohn Tuley <john@tuley.org>\nLaurent <laurent@adyoulike.com>\nPatrick Lee <patrick@dropbox.com>\nPeter Edge <peter.edge@gmail.com>\nRoger Johansson <rogeralsing@gmail.com>\nSam Nguyen <sam.nguyen@sendgrid.com>\nSergio Arbeo <serabe@gmail.com>\nStephen J Day <stephen.day@docker.com>\nTamir Duberstein <tamird@gmail.com>\nTodd Eisenberger <teisenberger@dropbox.com>\nTormod Erevik Lea <tormodlea@gmail.com>\nVyacheslav Kim <kane@sendgrid.com>\nWalter Schulze <awalterschulze@gmail.com>\n"
        },
        {
          "name": "GOLANG_CONTRIBUTORS",
          "type": "blob",
          "size": 0.212890625,
          "content": "The contributors to the Go protobuf repository:\n\n# This source code was written by the Go contributors.\n# The master list of contributors is in the main Go distribution,\n# visible at http://tip.golang.org/CONTRIBUTORS."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.6416015625,
          "content": "Copyright (c) 2013, The GoGo Authors. All rights reserved.\n\nProtocol Buffers for Go with Gadgets\n\nGo support for Protocol Buffers - Google's data interchange format\n\nCopyright 2010 The Go Authors.  All rights reserved.\nhttps://github.com/golang/protobuf\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n    * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 5.9697265625,
          "content": "# Protocol Buffers for Go with Gadgets\n#\n# Copyright (c) 2013, The GoGo Authors. All rights reserved.\n# http://github.com/gogo/protobuf\n#\n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions are\n# met:\n#\n#     * Redistributions of source code must retain the above copyright\n# notice, this list of conditions and the following disclaimer.\n#     * Redistributions in binary form must reproduce the above\n# copyright notice, this list of conditions and the following disclaimer\n# in the documentation and/or other materials provided with the\n# distribution.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nGO_VERSION:=$(shell go version)\nBENCHLIST?=all\n\n# Skip known issues from purego tests\n# https://github.com/gogo/protobuf/issues/447\n# https://github.com/gogo/protobuf/issues/448\nSKIPISSUE:=\"/jsonpb|/test/casttype/|/test/oneof/combos/\"\n\n.PHONY: nuke regenerate tests clean install gofmt vet contributors\n\nall: clean install regenerate install tests errcheck vet\n\nbuildserverall: clean install regenerate install tests vet js purego\n\ninstall:\n\tgo install ./proto\n\tgo install ./gogoproto\n\tgo install ./jsonpb\n\tgo install ./protoc-gen-gogo\n\tgo install ./protoc-gen-gofast\n\tgo install ./protoc-gen-gogofast\n\tgo install ./protoc-gen-gogofaster\n\tgo install ./protoc-gen-gogoslick\n\tgo install ./protoc-gen-gostring\n\tgo install ./protoc-min-version\n\tgo install ./protoc-gen-combo\n\tgo install ./gogoreplace\n\nclean:\n\tgo clean ./...\n\nnuke:\n\tgo clean -i -cache ./...\n\ngofmt:\n\tgofmt -l -s -w .\n\nregenerate:\n\tmake -C protoc-gen-gogo regenerate\n\tmake -C gogoproto regenerate\n\tmake -C proto/test_proto regenerate\n\tmake -C proto/proto3_proto regenerate\n\tmake -C jsonpb/jsonpb_test_proto regenerate\n\tmake -C conformance regenerate\n\tmake -C protobuf regenerate\n\tmake -C test regenerate\n\tmake -C test/example regenerate\n\tmake -C test/unrecognized regenerate\n\tmake -C test/group regenerate\n\tmake -C test/unrecognizedgroup regenerate\n\tmake -C test/enumstringer regenerate\n\tmake -C test/unmarshalmerge regenerate\n\tmake -C test/moredefaults regenerate\n\tmake -C test/issue8 regenerate\n\tmake -C test/enumprefix regenerate\n\tmake -C test/enumcustomname regenerate\n\tmake -C test/packed regenerate\n\tmake -C test/protosize regenerate\n\tmake -C test/tags regenerate\n\tmake -C test/oneof regenerate\n\tmake -C test/oneof3 regenerate\n\tmake -C test/theproto3 regenerate\n\tmake -C test/mapdefaults regenerate\n\tmake -C test/mapsproto2 regenerate\n\tmake -C test/issue42order regenerate\n\tmake -C proto generate-test-pbs\n\tmake -C test/importdedup regenerate\n\tmake -C test/importduplicate regenerate\n\tmake -C test/custombytesnonstruct regenerate\n\tmake -C test/required regenerate\n\tmake -C test/casttype regenerate\n\tmake -C test/castvalue regenerate\n\tmake -C vanity/test regenerate\n\tmake -C test/sizeunderscore regenerate\n\tmake -C test/issue34 regenerate\n\tmake -C test/empty-issue70 regenerate\n\tmake -C test/indeximport-issue72 regenerate\n\tmake -C test/fuzztests regenerate\n\tmake -C test/oneofembed regenerate\n\tmake -C test/asymetric-issue125 regenerate\n\tmake -C test/filedotname regenerate\n\tmake -C test/nopackage regenerate\n\tmake -C test/types regenerate\n\tmake -C test/proto3extension regenerate\n\tmake -C test/stdtypes regenerate\n\tmake -C test/data regenerate\n\tmake -C test/typedecl regenerate\n\tmake -C test/issue260 regenerate\n\tmake -C test/issue261 regenerate\n\tmake -C test/issue262 regenerate\n\tmake -C test/issue312 regenerate\n\tmake -C test/enumdecl regenerate\n\tmake -C test/typedecl_all regenerate\n\tmake -C test/enumdecl_all regenerate\n\tmake -C test/int64support regenerate\n\tmake -C test/issue322 regenerate\n\tmake -C test/issue330 regenerate\n\tmake -C test/importcustom-issue389 regenerate\n\tmake -C test/merge regenerate\n\tmake -C test/cachedsize regenerate\n\tmake -C test/deterministic regenerate\n\tmake -C test/issue438 regenerate\n\tmake -C test/issue444 regenerate\n\tmake -C test/issue449 regenerate\n\tmake -C test/xxxfields regenerate\n\tmake -C test/issue435 regenerate\n\tmake -C test/issue411 regenerate\n\tmake -C test/issue498 regenerate\n\tmake -C test/issue503 regenerate\n\tmake -C test/issue530 regenerate\n\tmake -C test/issue617 regenerate\n\tmake -C test/issue620 regenerate\n\tmake -C test/protobuffer regenerate\n\tmake -C test/issue630 regenerate\n\n\tmake gofmt\n\ntests:\n\tgo build ./test/enumprefix\n\tgo test ./...\n\t(cd test/stdtypes && make test)\n\nvet:\n\tgo get golang.org/x/tools/go/analysis/passes/shadow/cmd/shadow\n\tgo vet ./...\n\tgo vet -vettool=$(shell which shadow) ./...\n\nerrcheck:\n\tgo get github.com/kisielk/errcheck\n\terrcheck ./test/...\n\ndrone:\n\tsudo apt-get install protobuf-compiler\n\t(cd $(GOPATH)/src/github.com/gogo/protobuf && make buildserverall)\n\ntestall:\n\tgo get -u github.com/golang/protobuf/proto\n\tmake -C protoc-gen-gogo test\n\tmake -C vanity/test test\n\tmake -C test/registration test\n\tmake -C conformance test\n\tmake -C test/issue427 test\n\tmake tests\n\nbench:\n\tgo get golang.org/x/tools/cmd/benchcmp\n\t(cd test/mixbench && go build .)\n\t./test/mixbench/mixbench -benchlist \"${BENCHLIST}\"\n\ncontributors:\n\tgit log --format='%aN <%aE>' | sort -fu > CONTRIBUTORS\n\njs:\nifeq (go1.12, $(findstring go1.12, $(GO_VERSION)))\n\tgo get -u github.com/gopherjs/gopherjs\n\tgopherjs build github.com/gogo/protobuf/protoc-gen-gogo\nendif\n\npurego:\n\tgo test -tags purego $$(go list ./... | grep -Ev $(SKIPISSUE))\n\nupdate:\n\t(cd protobuf && make update)\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 11.943359375,
          "content": "Protocol Buffers for Go with Gadgets\n\nGoGoProtobuf http://github.com/gogo/protobuf extends\nGoProtobuf http://github.com/golang/protobuf\n\nCopyright (c) 2013, The GoGo Authors. All rights reserved.\n\n\n# Go support for Protocol Buffers\n\nGoogle's data interchange format.\nCopyright 2010 The Go Authors.\nhttps://github.com/golang/protobuf\n\nThis package and the code it generates requires at least Go 1.6.\n\nThis software implements Go bindings for protocol buffers.  For\ninformation about protocol buffers themselves, see\n\thttps://developers.google.com/protocol-buffers/\n\n## Installation ##\n\nTo use this software, you must:\n- Install the standard C++ implementation of protocol buffers from\n\thttps://developers.google.com/protocol-buffers/\n- Of course, install the Go compiler and tools from\n\thttps://golang.org/\n  See\n\thttps://golang.org/doc/install\n  for details or, if you are using gccgo, follow the instructions at\n\thttps://golang.org/doc/install/gccgo\n- Grab the code from the repository and install the `proto` package.\n  The simplest way is to run `go get -u github.com/golang/protobuf/protoc-gen-go`.\n  The compiler plugin, `protoc-gen-go`, will be installed in `$GOPATH/bin`\n  unless `$GOBIN` is set. It must be in your `$PATH` for the protocol\n  compiler, `protoc`, to find it.\n- If you need a particular version of `protoc-gen-go` (e.g., to match your\n  `proto` package version), one option is\n  ```shell\n  GIT_TAG=\"v1.2.0\" # change as needed\n  go get -d -u github.com/golang/protobuf/protoc-gen-go\n  git -C \"$(go env GOPATH)\"/src/github.com/golang/protobuf checkout $GIT_TAG\n  go install github.com/golang/protobuf/protoc-gen-go\n  ```\n\nThis software has two parts: a 'protocol compiler plugin' that\ngenerates Go source files that, once compiled, can access and manage\nprotocol buffers; and a library that implements run-time support for\nencoding (marshaling), decoding (unmarshaling), and accessing protocol\nbuffers.\n\nThere is support for gRPC in Go using protocol buffers.\nSee the note at the bottom of this file for details.\n\nThere are no insertion points in the plugin.\n\nGoGoProtobuf provides extensions for protocol buffers and GoProtobuf\nsee http://github.com/gogo/protobuf/gogoproto/doc.go\n\n## Using protocol buffers with Go ##\n\nOnce the software is installed, there are two steps to using it.\nFirst you must compile the protocol buffer definitions and then import\nthem, with the support library, into your program.\n\nTo compile the protocol buffer definition, run protoc with the --gogo_out\nparameter set to the directory you want to output the Go code to.\n\n\tprotoc --gogo_out=. *.proto\n\nThe generated files will be suffixed .pb.go.  See the Test code below\nfor an example using such a file.\n\n## Packages and input paths ##\n\nThe protocol buffer language has a concept of \"packages\" which does not\ncorrespond well to the Go notion of packages. In generated Go code,\neach source `.proto` file is associated with a single Go package. The\nname and import path for this package is specified with the `go_package`\nproto option:\n\n\toption go_package = \"github.com/gogo/protobuf/types\";\n\nThe protocol buffer compiler will attempt to derive a package name and\nimport path if a `go_package` option is not present, but it is\nbest to always specify one explicitly.\n\nThere is a one-to-one relationship between source `.proto` files and\ngenerated `.pb.go` files, but any number of `.pb.go` files may be\ncontained in the same Go package.\n\nThe output name of a generated file is produced by replacing the\n`.proto` suffix with `.pb.go` (e.g., `foo.proto` produces `foo.pb.go`).\nHowever, the output directory is selected in one of two ways.  Let\nus say we have `inputs/x.proto` with a `go_package` option of\n`github.com/golang/protobuf/p`. The corresponding output file may\nbe:\n\n- Relative to the import path:\n\n\tprotoc --gogo_out=. inputs/x.proto\n\t# writes ./github.com/gogo/protobuf/p/x.pb.go\n\n  (This can work well with `--gogo_out=$GOPATH`.)\n\n- Relative to the input file:\n\n\tprotoc --gogo_out=paths=source_relative:. inputs/x.proto\n\t# generate ./inputs/x.pb.go\n\n## Generated code ##\n\nThe package comment for the proto library contains text describing\nthe interface provided in Go for protocol buffers. Here is an edited\nversion.\n\nIf you are using any gogo.proto extensions you will need to specify the\nproto_path to include the descriptor.proto and gogo.proto.\ngogo.proto is located in github.com/gogo/protobuf/gogoproto\nThis should be fine, since your import is the same.\ndescriptor.proto is located in either github.com/gogo/protobuf/protobuf\nor code.google.com/p/protobuf/trunk/src/\nIts import is google/protobuf/descriptor.proto so it might need some help.\n\n\tprotoc --gogo_out=. -I=.:github.com/gogo/protobuf/protobuf *.proto\n\n==========\n\nThe proto package converts data structures to and from the\nwire format of protocol buffers.  It works in concert with the\nGo source code generated for .proto files by the protocol compiler.\n\nA summary of the properties of the protocol buffer interface\nfor a protocol buffer variable v:\n\n  - Names are turned from camel_case to CamelCase for export.\n  - There are no methods on v to set fields; just treat\n  \tthem as structure fields.\n  - There are getters that return a field's value if set,\n\tand return the field's default value if unset.\n\tThe getters work even if the receiver is a nil message.\n  - The zero value for a struct is its correct initialization state.\n\tAll desired fields must be set before marshaling.\n  - A Reset() method will restore a protobuf struct to its zero state.\n  - Non-repeated fields are pointers to the values; nil means unset.\n\tThat is, optional or required field int32 f becomes F *int32.\n  - Repeated fields are slices.\n  - Helper functions are available to aid the setting of fields.\n\tHelpers for getting values are superseded by the\n\tGetFoo methods and their use is deprecated.\n\t\tmsg.Foo = proto.String(\"hello\") // set field\n  - Constants are defined to hold the default values of all fields that\n\thave them.  They have the form Default_StructName_FieldName.\n\tBecause the getter methods handle defaulted values,\n\tdirect use of these constants should be rare.\n  - Enums are given type names and maps from names to values.\n\tEnum values are prefixed with the enum's type name. Enum types have\n\ta String method, and a Enum method to assist in message construction.\n  - Nested groups and enums have type names prefixed with the name of\n  \tthe surrounding message type.\n  - Extensions are given descriptor names that start with E_,\n\tfollowed by an underscore-delimited list of the nested messages\n\tthat contain it (if any) followed by the CamelCased name of the\n\textension field itself.  HasExtension, ClearExtension, GetExtension\n\tand SetExtension are functions for manipulating extensions.\n  - Oneof field sets are given a single field in their message,\n\twith distinguished wrapper types for each possible field value.\n  - Marshal and Unmarshal are functions to encode and decode the wire format.\n\nWhen the .proto file specifies `syntax=\"proto3\"`, there are some differences:\n\n  - Non-repeated fields of non-message type are values instead of pointers.\n  - Enum types do not get an Enum method.\n\nConsider file test.proto, containing\n\n```proto\n\tsyntax = \"proto2\";\n\tpackage example;\n\n\tenum FOO { X = 17; };\n\n\tmessage Test {\n\t  required string label = 1;\n\t  optional int32 type = 2 [default=77];\n\t  repeated int64 reps = 3;\n\t}\n```\n\nTo create and play with a Test object from the example package,\n\n```go\n\tpackage main\n\n\timport (\n\t\t\"log\"\n\n\t\t\"github.com/gogo/protobuf/proto\"\n\t\t\"path/to/example\"\n\t)\n\n\tfunc main() {\n\t\ttest := &example.Test{\n\t\t\tLabel: proto.String(\"hello\"),\n\t\t\tType:  proto.Int32(17),\n\t\t\tReps:  []int64{1, 2, 3},\n\t\t}\n\t\tdata, err := proto.Marshal(test)\n\t\tif err != nil {\n\t\t\tlog.Fatal(\"marshaling error: \", err)\n\t\t}\n\t\tnewTest := &example.Test{}\n\t\terr = proto.Unmarshal(data, newTest)\n\t\tif err != nil {\n\t\t\tlog.Fatal(\"unmarshaling error: \", err)\n\t\t}\n\t\t// Now test and newTest contain the same data.\n\t\tif test.GetLabel() != newTest.GetLabel() {\n\t\t\tlog.Fatalf(\"data mismatch %q != %q\", test.GetLabel(), newTest.GetLabel())\n\t\t}\n\t\t// etc.\n\t}\n```\n\n\n## Parameters ##\n\nTo pass extra parameters to the plugin, use a comma-separated\nparameter list separated from the output directory by a colon:\n\n\n\tprotoc --gogo_out=plugins=grpc,import_path=mypackage:. *.proto\n\n- `paths=(import | source_relative)` - specifies how the paths of\n  generated files are structured. See the \"Packages and imports paths\"\n  section above. The default is `import`.\n- `plugins=plugin1+plugin2` - specifies the list of sub-plugins to\n  load. The only plugin in this repo is `grpc`.\n- `Mfoo/bar.proto=quux/shme` - declares that foo/bar.proto is\n  associated with Go package quux/shme.  This is subject to the\n  import_prefix parameter.\n\nThe following parameters are deprecated and should not be used:\n\n- `import_prefix=xxx` - a prefix that is added onto the beginning of\n  all imports.\n- `import_path=foo/bar` - used as the package if no input files\n  declare `go_package`. If it contains slashes, everything up to the\n  rightmost slash is ignored.\n\n## gRPC Support ##\n\nIf a proto file specifies RPC services, protoc-gen-go can be instructed to\ngenerate code compatible with gRPC (http://www.grpc.io/). To do this, pass\nthe `plugins` parameter to protoc-gen-go; the usual way is to insert it into\nthe --go_out argument to protoc:\n\n\tprotoc --gogo_out=plugins=grpc:. *.proto\n\n## Compatibility ##\n\nThe library and the generated code are expected to be stable over time.\nHowever, we reserve the right to make breaking changes without notice for the\nfollowing reasons:\n\n- Security. A security issue in the specification or implementation may come to\n  light whose resolution requires breaking compatibility. We reserve the right\n  to address such security issues.\n- Unspecified behavior.  There are some aspects of the Protocol Buffers\n  specification that are undefined.  Programs that depend on such unspecified\n  behavior may break in future releases.\n- Specification errors or changes. If it becomes necessary to address an\n  inconsistency, incompleteness, or change in the Protocol Buffers\n  specification, resolving the issue could affect the meaning or legality of\n  existing programs.  We reserve the right to address such issues, including\n  updating the implementations.\n- Bugs.  If the library has a bug that violates the specification, a program\n  that depends on the buggy behavior may break if the bug is fixed.  We reserve\n  the right to fix such bugs.\n- Adding methods or fields to generated structs.  These may conflict with field\n  names that already exist in a schema, causing applications to break.  When the\n  code generator encounters a field in the schema that would collide with a\n  generated field or method name, the code generator will append an underscore\n  to the generated field or method name.\n- Adding, removing, or changing methods or fields in generated structs that\n  start with `XXX`.  These parts of the generated code are exported out of\n  necessity, but should not be considered part of the public API.\n- Adding, removing, or changing unexported symbols in generated code.\n\nAny breaking changes outside of these will be announced 6 months in advance to\nprotobuf@googlegroups.com.\n\nYou should, whenever possible, use generated code created by the `protoc-gen-go`\ntool built at the same commit as the `proto` package.  The `proto` package\ndeclares package-level constants in the form `ProtoPackageIsVersionX`.\nApplication code and generated code may depend on one of these constants to\nensure that compilation will fail if the available version of the proto library\nis too old.  Whenever we make a change to the generated code that requires newer\nlibrary support, in the same commit we will increment the version number of the\ngenerated code and declare a new package-level constant whose name incorporates\nthe latest version number.  Removing a compatibility constant is considered a\nbreaking change and would be subject to the announcement policy stated above.\n\nThe `protoc-gen-go/generator` package exposes a plugin interface,\nwhich is used by the gRPC code generation. This interface is not\nsupported and is subject to incompatible changes without notice.\n"
        },
        {
          "name": "Readme.md",
          "type": "blob",
          "size": 12.3466796875,
          "content": "[GoGo Protobuf is Deprecated](https://twitter.com/awalterschulze/status/1584553056100057088)\n\n# [[Deprecated](https://twitter.com/awalterschulze/status/1584553056100057088)] Protocol Buffers for Go with Gadgets\n\n<a href=\"https://www.youtube.com/watch?v=HTIltI0NuNg&list=PLYwF9EIrl42T3ml_ANaNifOuTQtLxaZgQ&index=3\" target=\"_blank\">\n <img src=\"https://img.youtube.com/vi/HTIltI0NuNg/maxres1.jpg\" alt=\"Watch the video\" width=\"480\" border=\"10\" />\n</a>\n\n[![Build Status](https://github.com/gogo/protobuf/workflows/Continuous%20Integration/badge.svg)](https://github.com/gogo/protobuf/actions)\n[![GoDoc](https://godoc.org/github.com/gogo/protobuf?status.svg)](http://godoc.org/github.com/gogo/protobuf)\n\ngogoprotobuf is a fork of <a href=\"https://github.com/golang/protobuf\">golang/protobuf</a> with extra code generation features.\n\nThis code generation is used to achieve:\n\n  - fast marshalling and unmarshalling\n  - more canonical Go structures\n  - goprotobuf compatibility\n  - less typing by optionally generating extra helper code\n  - peace of mind by optionally generating test and benchmark code\n  - other serialization formats\n\nKeeping track of how up to date gogoprotobuf is relative to golang/protobuf is done in this\n<a href=\"https://github.com/gogo/protobuf/issues/191\">issue</a>\n\n## Release v1.3.0\n\nThe project has updated to release v1.3.0. Check out the release notes <a href=\"https://github.com/gogo/protobuf/releases/tag/v1.3.0\">here</a>.\n\nWith this new release comes a new internal library version. This means any newly generated *pb.go files generated with the v1.3.0 library will not be compatible with the old library version (v1.2.1). However, current *pb.go files (generated with v1.2.1) should still work with the new library.\n\nPlease make sure you manage your dependencies correctly when upgrading your project. If you are still using v1.2.1 and you update your dependencies, one of which could include a new *pb.go (generated with v1.3.0), you could get a compile time error.\n\nOur upstream repo, golang/protobuf, also had to go through this process in order to update their library version.\nHere is a link explaining <a href=\"https://github.com/golang/protobuf/issues/763#issuecomment-442434870\">hermetic builds</a>.\n\n\n## Users\n\nThese projects use gogoprotobuf:\n\n  - <a href=\"http://godoc.org/github.com/coreos/etcd\">etcd</a> - <a href=\"https://blog.gopheracademy.com/advent-2015/etcd-distributed-key-value-store-with-grpc-http2/\">blog</a> - <a href=\"https://github.com/coreos/etcd/blob/master/etcdserver/etcdserverpb/etcdserver.proto\">sample proto file</a>\n  - <a href=\"https://www.spacemonkey.com/\">spacemonkey</a> - <a href=\"https://www.spacemonkey.com/blog/posts/go-space-monkey\">blog</a>\n  - <a href=\"http://badoo.com\">badoo</a> - <a href=\"https://github.com/badoo/lsd/blob/32061f501c5eca9c76c596d790b450501ba27b2f/proto/lsd.proto\">sample proto file</a>\n  - <a href=\"https://github.com/mesos/mesos-go\">mesos-go</a> - <a href=\"https://github.com/mesos/mesos-go/blob/f9e5fb7c2f50ab5f23299f26b6b07c5d6afdd252/api/v0/mesosproto/authentication.proto\">sample proto file</a>\n  - <a href=\"https://github.com/mozilla-services/heka\">heka</a> - <a href=\"https://github.com/mozilla-services/heka/commit/eb72fbf7d2d28249fbaf8d8dc6607f4eb6f03351\">the switch from golang/protobuf to gogo/protobuf when it was still on code.google.com</a>\n  - <a href=\"https://github.com/cockroachdb/cockroach\">cockroachdb</a> - <a href=\"https://github.com/cockroachdb/cockroach/blob/651d54d393e391a30154e9117ab4b18d9ee6d845/roachpb/metadata.proto\">sample proto file</a>\n  - <a href=\"https://github.com/jbenet/go-ipfs\">go-ipfs</a> - <a href=\"https://github.com/ipfs/go-ipfs/blob/2b6da0c024f28abeb16947fb452787196a6b56a2/merkledag/pb/merkledag.proto\">sample proto file</a>\n  - <a href=\"https://github.com/philhofer/rkive\">rkive-go</a> - <a href=\"https://github.com/philhofer/rkive/blob/e5dd884d3ea07b341321073882ae28aa16dd11be/rpbc/riak_dt.proto\">sample proto file</a>\n  - <a href=\"https://www.dropbox.com\">dropbox</a>\n  - <a href=\"https://srclib.org/\">srclib</a> - <a href=\"https://github.com/sourcegraph/srclib/blob/6538858f0c410cac5c63440317b8d009e889d3fb/graph/def.proto\">sample proto file</a>\n  - <a href=\"http://www.adyoulike.com/\">adyoulike</a>\n  - <a href=\"http://www.cloudfoundry.org/\">cloudfoundry</a> - <a href=\"https://github.com/cloudfoundry/bbs/blob/d673710b8c4211037805129944ee4c5373d6588a/models/events.proto\">sample proto file</a>\n  - <a href=\"http://kubernetes.io/\">kubernetes</a> - <a href=\"https://github.com/kubernetes/kubernetes/tree/88d8628137f94ee816aaa6606ae8cd045dee0bff/cmd/libs/go2idl\">go2idl built on top of gogoprotobuf</a>\n  - <a href=\"https://dgraph.io/\">dgraph</a> - <a href=\"https://github.com/dgraph-io/dgraph/releases/tag/v0.4.3\">release notes</a> - <a href=\"https://discuss.dgraph.io/t/gogoprotobuf-is-extremely-fast/639\">benchmarks</a></a>\n  - <a href=\"https://github.com/centrifugal/centrifugo\">centrifugo</a> - <a href=\"https://forum.golangbridge.org/t/centrifugo-real-time-messaging-websocket-or-sockjs-server-v1-5-0-released/2861\">release notes</a> - <a href=\"https://medium.com/@fzambia/centrifugo-protobuf-inside-json-outside-21d39bdabd68#.o3icmgjqd\">blog</a>\n  - <a href=\"https://github.com/docker/swarmkit\">docker swarmkit</a> - <a href=\"https://github.com/docker/swarmkit/blob/63600e01af3b8da2a0ed1c9fa6e1ae4299d75edb/api/objects.proto\">sample proto file</a>\n  - <a href=\"https://nats.io/\">nats.io</a> - <a href=\"https://github.com/nats-io/go-nats-streaming/blob/master/pb/protocol.proto\">go-nats-streaming</a>\n  - <a href=\"https://github.com/pingcap/tidb\">tidb</a> - Communication between <a href=\"https://github.com/pingcap/tipb/blob/master/generate-go.sh#L4\">tidb</a> and <a href=\"https://github.com/pingcap/kvproto/blob/master/generate_go.sh#L3\">tikv</a>\n  - <a href=\"https://github.com/AsynkronIT/protoactor-go\">protoactor-go</a> - <a href=\"https://github.com/AsynkronIT/protoactor-go/blob/master/protobuf/protoc-gen-protoactor/main.go\">vanity command</a> that also generates actors from service definitions\n  - <a href=\"https://containerd.io/\">containerd</a> - <a href=\"https://github.com/containerd/containerd/tree/master/cmd/protoc-gen-gogoctrd\">vanity command with custom field names</a> that conforms to the golang convention.\n  - <a href=\"https://github.com/heroiclabs/nakama\">nakama</a>\n  - <a href=\"https://github.com/src-d/proteus\">proteus</a>\n  - <a href=\"https://github.com/go-graphite\">carbonzipper stack</a>\n  - <a href=\"https://sendgrid.com/\">sendgrid</a>\n  - <a href=\"https://github.com/zero-os/0-stor\">zero-os/0-stor</a>\n  - <a href=\"https://github.com/spacemeshos/go-spacemesh\">go-spacemesh</a>\n  - <a href=\"https://github.com/weaveworks/cortex\">cortex</a> - <a href=\"https://github.com/weaveworks/cortex/blob/fee02a59729d3771ef888f7bf0fd050e1197c56e/pkg/ingester/client/cortex.proto\">sample proto file</a>\n  - <a href=\"http://skywalking.apache.org/\">Apache SkyWalking APM</a> - Istio telemetry receiver based on Mixer bypass protocol\n  - <a href=\"https://github.com/hyperledger/burrow\">Hyperledger Burrow</a> - a permissioned DLT framework\n  - <a href=\"https://github.com/iov-one/weave\">IOV Weave</a> - a blockchain framework - <a href=\"https://github.com/iov-one/weave/tree/23f9856f1e316f93cb3d45d92c4c6a0c4810f6bf/spec/gogo\">sample proto files</a>\n\nPlease let us know if you are using gogoprotobuf by posting on our <a href=\"https://groups.google.com/forum/#!topic/gogoprotobuf/Brw76BxmFpQ\">GoogleGroup</a>.\n\n### Mentioned\n\n  - <a href=\"http://www.slideshare.net/albertstrasheim/serialization-in-go\">Cloudflare - go serialization talk - Albert Strasheim</a>\n  - <a href=\"https://youtu.be/4xB46Xl9O9Q?t=557\">GopherCon 2014 Writing High Performance Databases in Go by Ben Johnson</a>\n  - <a href=\"https://github.com/alecthomas/go_serialization_benchmarks\">alecthomas' go serialization benchmarks</a>\n  - <a href=\"http://agniva.me/go/2017/11/18/gogoproto.html\">Go faster with gogoproto - Agniva De Sarker</a>\n  - <a href=\"https://www.youtube.com/watch?v=CY9T020HLP8\">Evolution of protobuf (Gource Visualization) - Landon Wilkins</a>\n  - <a href=\"https://fosdem.org/2018/schedule/event/gopherjs/\">Creating GopherJS Apps with gRPC-Web - Johan Brandhorst</a>\n  - <a href=\"https://jbrandhorst.com/post/gogoproto/\">So you want to use GoGo Protobuf - Johan Brandhorst</a>\n  - <a href=\"https://jbrandhorst.com/post/grpc-errors/\">Advanced gRPC Error Usage - Johan Brandhorst</a>\n  - <a href=\"https://www.udemy.com/grpc-golang/?couponCode=GITHUB10\">gRPC Golang Course on Udemy - Stephane Maarek</a>\n  \n## Preparing for GopherCon UK 2022\n\n<a href=\"https://www.youtube.com/watch?v=8kL7_KTsIoc\" target=\"_blank\">\n <img src=\"https://img.youtube.com/vi/8kL7_KTsIoc/maxres3.jpg\" alt=\"Preparing for GopherCon UK 2022 video\" width=\"480\" border=\"10\" />\n</a>\n\n## Getting Started\n\nThere are several ways to use gogoprotobuf, but for all you need to install go and protoc.\nAfter that you can choose:\n\n  - Speed\n  - More Speed and more generated code\n  - Most Speed and most customization\n\n### Installation\n\nTo install it, you must first have Go (at least version 1.6.3 or 1.9 if you are using gRPC) installed (see [http://golang.org/doc/install](http://golang.org/doc/install)).\nLatest patch versions of 1.12 and 1.15 are continuously tested.\n\nNext, install the standard protocol buffer implementation from [https://github.com/google/protobuf](https://github.com/google/protobuf).\nMost versions from 2.3.1 should not give any problems, but 2.6.1, 3.0.2 and 3.14.0 are continuously tested.\n\n### Speed\n\nInstall the protoc-gen-gofast binary\n\n    go get github.com/gogo/protobuf/protoc-gen-gofast\n\nUse it to generate faster marshaling and unmarshaling go code for your protocol buffers.\n\n    protoc --gofast_out=. myproto.proto\n\nThis does not allow you to use any of the other gogoprotobuf [extensions](https://github.com/gogo/protobuf/blob/master/extensions.md).\n\n### More Speed and more generated code\n\nFields without pointers cause less time in the garbage collector.\nMore code generation results in more convenient methods.\n\nOther binaries are also included:\n\n    protoc-gen-gogofast (same as gofast, but imports gogoprotobuf)\n    protoc-gen-gogofaster (same as gogofast, without XXX_unrecognized, less pointer fields)\n    protoc-gen-gogoslick (same as gogofaster, but with generated string, gostring and equal methods)\n\nInstalling any of these binaries is easy.  Simply run:\n\n    go get github.com/gogo/protobuf/proto\n    go get github.com/gogo/protobuf/{binary}\n    go get github.com/gogo/protobuf/gogoproto\n\nThese binaries allow you to use gogoprotobuf [extensions](https://github.com/gogo/protobuf/blob/master/extensions.md). You can also use your own binary.\n\nTo generate the code, you also need to set the include path properly.\n\n    protoc -I=. -I=$GOPATH/src -I=$GOPATH/src/github.com/gogo/protobuf/protobuf --{binary}_out=. myproto.proto\n\nTo use proto files from \"google/protobuf\" you need to add additional args to protoc.\n\n    protoc -I=. -I=$GOPATH/src -I=$GOPATH/src/github.com/gogo/protobuf/protobuf --{binary}_out=\\\n    Mgoogle/protobuf/any.proto=github.com/gogo/protobuf/types,\\\n    Mgoogle/protobuf/duration.proto=github.com/gogo/protobuf/types,\\\n    Mgoogle/protobuf/struct.proto=github.com/gogo/protobuf/types,\\\n    Mgoogle/protobuf/timestamp.proto=github.com/gogo/protobuf/types,\\\n    Mgoogle/protobuf/wrappers.proto=github.com/gogo/protobuf/types:. \\\n    myproto.proto\n\nNote that in the protoc command, {binary} does not contain the initial prefix of \"protoc-gen\".\n\n### Most Speed and most customization\n\nCustomizing the fields of the messages to be the fields that you actually want to use removes the need to copy between the structs you use and structs you use to serialize.\ngogoprotobuf also offers more serialization formats and generation of tests and even more methods.\n\nPlease visit the [extensions](https://github.com/gogo/protobuf/blob/master/extensions.md) page for more documentation.\n\nInstall protoc-gen-gogo:\n\n    go get github.com/gogo/protobuf/proto\n    go get github.com/gogo/protobuf/jsonpb\n    go get github.com/gogo/protobuf/protoc-gen-gogo\n    go get github.com/gogo/protobuf/gogoproto\n\n## GRPC\n\nIt works the same as golang/protobuf, simply specify the plugin.\nHere is an example using gofast:\n\n    protoc --gofast_out=plugins=grpc:. my.proto\n\nSee [https://github.com/gogo/grpc-example](https://github.com/gogo/grpc-example) for an example of using gRPC with gogoprotobuf and the wider grpc-ecosystem.\n\n\n## License\nThis software is licensed under the 3-Clause BSD License\n(\"BSD License 2.0\", \"Revised BSD License\", \"New BSD License\", or \"Modified BSD License\").\n\n\n"
        },
        {
          "name": "bench.md",
          "type": "blob",
          "size": 15.025390625,
          "content": "# Benchmarks\n\n## How to reproduce\n\nFor a comparison run:\n\n    make bench\n\nfollowed by [benchcmp](http://code.google.com/p/go/source/browse/misc/benchcmp benchcmp) on the resulting files:\n\n    $GOROOT/misc/benchcmp $GOPATH/src/github.com/gogo/protobuf/test/mixbench/marshal.txt $GOPATH/src/github.com/gogo/protobuf/test/mixbench/marshaler.txt\n    $GOROOT/misc/benchcmp $GOPATH/src/github.com/gogo/protobuf/test/mixbench/unmarshal.txt $GOPATH/src/github.com/gogo/protobuf/test/mixbench/unmarshaler.txt\n\nBenchmarks ran on Revision:  11c56be39364\n\nJune 2013\n\nProcessor 2,66 GHz Intel Core i7 \n\nMemory 8 GB 1067 MHz DDR3 \n\n## Marshaler\n\n<table>\n<tr><td>benchmark</td><td>old ns/op</td><td>new ns/op</td><td>delta</td></tr>\n<tr><td>BenchmarkNidOptNativeProtoMarshal</td><td>2656</td><td>889</td><td>-66.53%</td></tr>\n<tr><td>BenchmarkNinOptNativeProtoMarshal</td><td>2651</td><td>1015</td><td>-61.71%</td></tr>\n<tr><td>BenchmarkNidRepNativeProtoMarshal</td><td>42661</td><td>12519</td><td>-70.65%</td></tr>\n<tr><td>BenchmarkNinRepNativeProtoMarshal</td><td>42306</td><td>12354</td><td>-70.80%</td></tr>\n<tr><td>BenchmarkNidRepPackedNativeProtoMarshal</td><td>34148</td><td>11902</td><td>-65.15%</td></tr>\n<tr><td>BenchmarkNinRepPackedNativeProtoMarshal</td><td>33375</td><td>11969</td><td>-64.14%</td></tr>\n<tr><td>BenchmarkNidOptStructProtoMarshal</td><td>7148</td><td>3727</td><td>-47.86%</td></tr>\n<tr><td>BenchmarkNinOptStructProtoMarshal</td><td>6956</td><td>3481</td><td>-49.96%</td></tr>\n<tr><td>BenchmarkNidRepStructProtoMarshal</td><td>46551</td><td>19492</td><td>-58.13%</td></tr>\n<tr><td>BenchmarkNinRepStructProtoMarshal</td><td>46715</td><td>19043</td><td>-59.24%</td></tr>\n<tr><td>BenchmarkNidEmbeddedStructProtoMarshal</td><td>5231</td><td>2050</td><td>-60.81%</td></tr>\n<tr><td>BenchmarkNinEmbeddedStructProtoMarshal</td><td>4665</td><td>2000</td><td>-57.13%</td></tr>\n<tr><td>BenchmarkNidNestedStructProtoMarshal</td><td>181106</td><td>103604</td><td>-42.79%</td></tr>\n<tr><td>BenchmarkNinNestedStructProtoMarshal</td><td>182053</td><td>102069</td><td>-43.93%</td></tr>\n<tr><td>BenchmarkNidOptCustomProtoMarshal</td><td>1209</td><td>310</td><td>-74.36%</td></tr>\n<tr><td>BenchmarkNinOptCustomProtoMarshal</td><td>1435</td><td>277</td><td>-80.70%</td></tr>\n<tr><td>BenchmarkNidRepCustomProtoMarshal</td><td>4126</td><td>763</td><td>-81.51%</td></tr>\n<tr><td>BenchmarkNinRepCustomProtoMarshal</td><td>3972</td><td>769</td><td>-80.64%</td></tr>\n<tr><td>BenchmarkNinOptNativeUnionProtoMarshal</td><td>973</td><td>303</td><td>-68.86%</td></tr>\n<tr><td>BenchmarkNinOptStructUnionProtoMarshal</td><td>1536</td><td>521</td><td>-66.08%</td></tr>\n<tr><td>BenchmarkNinEmbeddedStructUnionProtoMarshal</td><td>2327</td><td>884</td><td>-62.01%</td></tr>\n<tr><td>BenchmarkNinNestedStructUnionProtoMarshal</td><td>2070</td><td>743</td><td>-64.11%</td></tr>\n<tr><td>BenchmarkTreeProtoMarshal</td><td>1554</td><td>838</td><td>-46.07%</td></tr>\n<tr><td>BenchmarkOrBranchProtoMarshal</td><td>3156</td><td>2012</td><td>-36.25%</td></tr>\n<tr><td>BenchmarkAndBranchProtoMarshal</td><td>3183</td><td>1996</td><td>-37.29%</td></tr>\n<tr><td>BenchmarkLeafProtoMarshal</td><td>965</td><td>606</td><td>-37.20%</td></tr>\n<tr><td>BenchmarkDeepTreeProtoMarshal</td><td>2316</td><td>1283</td><td>-44.60%</td></tr>\n<tr><td>BenchmarkADeepBranchProtoMarshal</td><td>2719</td><td>1492</td><td>-45.13%</td></tr>\n<tr><td>BenchmarkAndDeepBranchProtoMarshal</td><td>4663</td><td>2922</td><td>-37.34%</td></tr>\n<tr><td>BenchmarkDeepLeafProtoMarshal</td><td>1849</td><td>1016</td><td>-45.05%</td></tr>\n<tr><td>BenchmarkNilProtoMarshal</td><td>439</td><td>76</td><td>-82.53%</td></tr>\n<tr><td>BenchmarkNidOptEnumProtoMarshal</td><td>514</td><td>152</td><td>-70.43%</td></tr>\n<tr><td>BenchmarkNinOptEnumProtoMarshal</td><td>550</td><td>158</td><td>-71.27%</td></tr>\n<tr><td>BenchmarkNidRepEnumProtoMarshal</td><td>647</td><td>207</td><td>-68.01%</td></tr>\n<tr><td>BenchmarkNinRepEnumProtoMarshal</td><td>662</td><td>213</td><td>-67.82%</td></tr>\n<tr><td>BenchmarkTimerProtoMarshal</td><td>934</td><td>271</td><td>-70.99%</td></tr>\n<tr><td>BenchmarkMyExtendableProtoMarshal</td><td>608</td><td>185</td><td>-69.57%</td></tr>\n<tr><td>BenchmarkOtherExtenableProtoMarshal</td><td>1112</td><td>332</td><td>-70.14%</td></tr>\n</table>\n\n<table>\n<tr><td>benchmark</td><td>old MB/s</td><td>new MB/s</td><td>speedup</td></tr>\n<tr><td>BenchmarkNidOptNativeProtoMarshal</td><td>126.86</td><td>378.86</td><td>2.99x</td></tr>\n<tr><td>BenchmarkNinOptNativeProtoMarshal</td><td>114.27</td><td>298.42</td><td>2.61x</td></tr>\n<tr><td>BenchmarkNidRepNativeProtoMarshal</td><td>164.25</td><td>561.20</td><td>3.42x</td></tr>\n<tr><td>BenchmarkNinRepNativeProtoMarshal</td><td>166.10</td><td>568.23</td><td>3.42x</td></tr>\n<tr><td>BenchmarkNidRepPackedNativeProtoMarshal</td><td>99.10</td><td>283.97</td><td>2.87x</td></tr>\n<tr><td>BenchmarkNinRepPackedNativeProtoMarshal</td><td>101.30</td><td>282.31</td><td>2.79x</td></tr>\n<tr><td>BenchmarkNidOptStructProtoMarshal</td><td>176.83</td><td>339.07</td><td>1.92x</td></tr>\n<tr><td>BenchmarkNinOptStructProtoMarshal</td><td>163.59</td><td>326.57</td><td>2.00x</td></tr>\n<tr><td>BenchmarkNidRepStructProtoMarshal</td><td>178.84</td><td>427.49</td><td>2.39x</td></tr>\n<tr><td>BenchmarkNinRepStructProtoMarshal</td><td>178.70</td><td>437.69</td><td>2.45x</td></tr>\n<tr><td>BenchmarkNidEmbeddedStructProtoMarshal</td><td>124.24</td><td>317.56</td><td>2.56x</td></tr>\n<tr><td>BenchmarkNinEmbeddedStructProtoMarshal</td><td>132.03</td><td>307.99</td><td>2.33x</td></tr>\n<tr><td>BenchmarkNidNestedStructProtoMarshal</td><td>192.91</td><td>337.86</td><td>1.75x</td></tr>\n<tr><td>BenchmarkNinNestedStructProtoMarshal</td><td>192.44</td><td>344.45</td><td>1.79x</td></tr>\n<tr><td>BenchmarkNidOptCustomProtoMarshal</td><td>29.77</td><td>116.03</td><td>3.90x</td></tr>\n<tr><td>BenchmarkNinOptCustomProtoMarshal</td><td>22.29</td><td>115.38</td><td>5.18x</td></tr>\n<tr><td>BenchmarkNidRepCustomProtoMarshal</td><td>35.14</td><td>189.80</td><td>5.40x</td></tr>\n<tr><td>BenchmarkNinRepCustomProtoMarshal</td><td>36.50</td><td>188.40</td><td>5.16x</td></tr>\n<tr><td>BenchmarkNinOptNativeUnionProtoMarshal</td><td>32.87</td><td>105.39</td><td>3.21x</td></tr>\n<tr><td>BenchmarkNinOptStructUnionProtoMarshal</td><td>66.40</td><td>195.76</td><td>2.95x</td></tr>\n<tr><td>BenchmarkNinEmbeddedStructUnionProtoMarshal</td><td>93.24</td><td>245.26</td><td>2.63x</td></tr>\n<tr><td>BenchmarkNinNestedStructUnionProtoMarshal</td><td>57.49</td><td>160.06</td><td>2.78x</td></tr>\n<tr><td>BenchmarkTreeProtoMarshal</td><td>137.64</td><td>255.12</td><td>1.85x</td></tr>\n<tr><td>BenchmarkOrBranchProtoMarshal</td><td>137.80</td><td>216.10</td><td>1.57x</td></tr>\n<tr><td>BenchmarkAndBranchProtoMarshal</td><td>136.64</td><td>217.89</td><td>1.59x</td></tr>\n<tr><td>BenchmarkLeafProtoMarshal</td><td>214.48</td><td>341.53</td><td>1.59x</td></tr>\n<tr><td>BenchmarkDeepTreeProtoMarshal</td><td>95.85</td><td>173.03</td><td>1.81x</td></tr>\n<tr><td>BenchmarkADeepBranchProtoMarshal</td><td>82.73</td><td>150.78</td><td>1.82x</td></tr>\n<tr><td>BenchmarkAndDeepBranchProtoMarshal</td><td>96.72</td><td>153.98</td><td>1.59x</td></tr>\n<tr><td>BenchmarkDeepLeafProtoMarshal</td><td>117.34</td><td>213.41</td><td>1.82x</td></tr>\n<tr><td>BenchmarkNidOptEnumProtoMarshal</td><td>3.89</td><td>13.16</td><td>3.38x</td></tr>\n<tr><td>BenchmarkNinOptEnumProtoMarshal</td><td>1.82</td><td>6.30</td><td>3.46x</td></tr>\n<tr><td>BenchmarkNidRepEnumProtoMarshal</td><td>12.36</td><td>38.50</td><td>3.11x</td></tr>\n<tr><td>BenchmarkNinRepEnumProtoMarshal</td><td>12.08</td><td>37.53</td><td>3.11x</td></tr>\n<tr><td>BenchmarkTimerProtoMarshal</td><td>73.81</td><td>253.87</td><td>3.44x</td></tr>\n<tr><td>BenchmarkMyExtendableProtoMarshal</td><td>13.15</td><td>43.08</td><td>3.28x</td></tr>\n<tr><td>BenchmarkOtherExtenableProtoMarshal</td><td>24.28</td><td>81.09</td><td>3.34x</td></tr>\n</table>\n\n## Unmarshaler\n\n<table>\n<tr><td>benchmark</td><td>old ns/op</td><td>new ns/op</td><td>delta</td></tr>\n<tr><td>BenchmarkNidOptNativeProtoUnmarshal</td><td>2521</td><td>1006</td><td>-60.10%</td></tr>\n<tr><td>BenchmarkNinOptNativeProtoUnmarshal</td><td>2529</td><td>1750</td><td>-30.80%</td></tr>\n<tr><td>BenchmarkNidRepNativeProtoUnmarshal</td><td>49067</td><td>35299</td><td>-28.06%</td></tr>\n<tr><td>BenchmarkNinRepNativeProtoUnmarshal</td><td>47990</td><td>35456</td><td>-26.12%</td></tr>\n<tr><td>BenchmarkNidRepPackedNativeProtoUnmarshal</td><td>26456</td><td>23950</td><td>-9.47%</td></tr>\n<tr><td>BenchmarkNinRepPackedNativeProtoUnmarshal</td><td>26499</td><td>24037</td><td>-9.29%</td></tr>\n<tr><td>BenchmarkNidOptStructProtoUnmarshal</td><td>6803</td><td>3873</td><td>-43.07%</td></tr>\n<tr><td>BenchmarkNinOptStructProtoUnmarshal</td><td>6786</td><td>4154</td><td>-38.79%</td></tr>\n<tr><td>BenchmarkNidRepStructProtoUnmarshal</td><td>56276</td><td>31970</td><td>-43.19%</td></tr>\n<tr><td>BenchmarkNinRepStructProtoUnmarshal</td><td>48750</td><td>31832</td><td>-34.70%</td></tr>\n<tr><td>BenchmarkNidEmbeddedStructProtoUnmarshal</td><td>4556</td><td>1973</td><td>-56.69%</td></tr>\n<tr><td>BenchmarkNinEmbeddedStructProtoUnmarshal</td><td>4485</td><td>1975</td><td>-55.96%</td></tr>\n<tr><td>BenchmarkNidNestedStructProtoUnmarshal</td><td>223395</td><td>135844</td><td>-39.19%</td></tr>\n<tr><td>BenchmarkNinNestedStructProtoUnmarshal</td><td>226446</td><td>134022</td><td>-40.82%</td></tr>\n<tr><td>BenchmarkNidOptCustomProtoUnmarshal</td><td>1859</td><td>300</td><td>-83.86%</td></tr>\n<tr><td>BenchmarkNinOptCustomProtoUnmarshal</td><td>1486</td><td>402</td><td>-72.95%</td></tr>\n<tr><td>BenchmarkNidRepCustomProtoUnmarshal</td><td>8229</td><td>1669</td><td>-79.72%</td></tr>\n<tr><td>BenchmarkNinRepCustomProtoUnmarshal</td><td>8253</td><td>1649</td><td>-80.02%</td></tr>\n<tr><td>BenchmarkNinOptNativeUnionProtoUnmarshal</td><td>840</td><td>307</td><td>-63.45%</td></tr>\n<tr><td>BenchmarkNinOptStructUnionProtoUnmarshal</td><td>1395</td><td>639</td><td>-54.19%</td></tr>\n<tr><td>BenchmarkNinEmbeddedStructUnionProtoUnmarshal</td><td>2297</td><td>1167</td><td>-49.19%</td></tr>\n<tr><td>BenchmarkNinNestedStructUnionProtoUnmarshal</td><td>1820</td><td>889</td><td>-51.15%</td></tr>\n<tr><td>BenchmarkTreeProtoUnmarshal</td><td>1521</td><td>720</td><td>-52.66%</td></tr>\n<tr><td>BenchmarkOrBranchProtoUnmarshal</td><td>2669</td><td>1385</td><td>-48.11%</td></tr>\n<tr><td>BenchmarkAndBranchProtoUnmarshal</td><td>2667</td><td>1420</td><td>-46.76%</td></tr>\n<tr><td>BenchmarkLeafProtoUnmarshal</td><td>1171</td><td>584</td><td>-50.13%</td></tr>\n<tr><td>BenchmarkDeepTreeProtoUnmarshal</td><td>2065</td><td>1081</td><td>-47.65%</td></tr>\n<tr><td>BenchmarkADeepBranchProtoUnmarshal</td><td>2695</td><td>1178</td><td>-56.29%</td></tr>\n<tr><td>BenchmarkAndDeepBranchProtoUnmarshal</td><td>4055</td><td>1918</td><td>-52.70%</td></tr>\n<tr><td>BenchmarkDeepLeafProtoUnmarshal</td><td>1758</td><td>865</td><td>-50.80%</td></tr>\n<tr><td>BenchmarkNilProtoUnmarshal</td><td>564</td><td>63</td><td>-88.79%</td></tr>\n<tr><td>BenchmarkNidOptEnumProtoUnmarshal</td><td>762</td><td>73</td><td>-90.34%</td></tr>\n<tr><td>BenchmarkNinOptEnumProtoUnmarshal</td><td>764</td><td>163</td><td>-78.66%</td></tr>\n<tr><td>BenchmarkNidRepEnumProtoUnmarshal</td><td>1078</td><td>447</td><td>-58.53%</td></tr>\n<tr><td>BenchmarkNinRepEnumProtoUnmarshal</td><td>1071</td><td>479</td><td>-55.28%</td></tr>\n<tr><td>BenchmarkTimerProtoUnmarshal</td><td>1128</td><td>362</td><td>-67.91%</td></tr>\n<tr><td>BenchmarkMyExtendableProtoUnmarshal</td><td>808</td><td>217</td><td>-73.14%</td></tr>\n<tr><td>BenchmarkOtherExtenableProtoUnmarshal</td><td>1233</td><td>517</td><td>-58.07%</td></tr>\n</table>\n\n<table>\n<tr><td>benchmark</td><td>old MB/s</td><td>new MB/s</td><td>speedup</td></tr>\n<tr><td>BenchmarkNidOptNativeProtoUnmarshal</td><td>133.67</td><td>334.98</td><td>2.51x</td></tr>\n<tr><td>BenchmarkNinOptNativeProtoUnmarshal</td><td>119.77</td><td>173.08</td><td>1.45x</td></tr>\n<tr><td>BenchmarkNidRepNativeProtoUnmarshal</td><td>143.23</td><td>199.12</td><td>1.39x</td></tr>\n<tr><td>BenchmarkNinRepNativeProtoUnmarshal</td><td>146.07</td><td>198.16</td><td>1.36x</td></tr>\n<tr><td>BenchmarkNidRepPackedNativeProtoUnmarshal</td><td>127.80</td><td>141.04</td><td>1.10x</td></tr>\n<tr><td>BenchmarkNinRepPackedNativeProtoUnmarshal</td><td>127.55</td><td>140.78</td><td>1.10x</td></tr>\n<tr><td>BenchmarkNidOptStructProtoUnmarshal</td><td>185.79</td><td>326.31</td><td>1.76x</td></tr>\n<tr><td>BenchmarkNinOptStructProtoUnmarshal</td><td>167.68</td><td>273.66</td><td>1.63x</td></tr>\n<tr><td>BenchmarkNidRepStructProtoUnmarshal</td><td>147.88</td><td>260.39</td><td>1.76x</td></tr>\n<tr><td>BenchmarkNinRepStructProtoUnmarshal</td><td>171.20</td><td>261.97</td><td>1.53x</td></tr>\n<tr><td>BenchmarkNidEmbeddedStructProtoUnmarshal</td><td>142.86</td><td>329.42</td><td>2.31x</td></tr>\n<tr><td>BenchmarkNinEmbeddedStructProtoUnmarshal</td><td>137.33</td><td>311.83</td><td>2.27x</td></tr>\n<tr><td>BenchmarkNidNestedStructProtoUnmarshal</td><td>154.97</td><td>259.47</td><td>1.67x</td></tr>\n<tr><td>BenchmarkNinNestedStructProtoUnmarshal</td><td>154.32</td><td>258.42</td><td>1.67x</td></tr>\n<tr><td>BenchmarkNidOptCustomProtoUnmarshal</td><td>19.36</td><td>119.66</td><td>6.18x</td></tr>\n<tr><td>BenchmarkNinOptCustomProtoUnmarshal</td><td>21.52</td><td>79.50</td><td>3.69x</td></tr>\n<tr><td>BenchmarkNidRepCustomProtoUnmarshal</td><td>17.62</td><td>86.86</td><td>4.93x</td></tr>\n<tr><td>BenchmarkNinRepCustomProtoUnmarshal</td><td>17.57</td><td>87.92</td><td>5.00x</td></tr>\n<tr><td>BenchmarkNinOptNativeUnionProtoUnmarshal</td><td>38.07</td><td>104.12</td><td>2.73x</td></tr>\n<tr><td>BenchmarkNinOptStructUnionProtoUnmarshal</td><td>73.08</td><td>159.54</td><td>2.18x</td></tr>\n<tr><td>BenchmarkNinEmbeddedStructUnionProtoUnmarshal</td><td>94.00</td><td>185.92</td><td>1.98x</td></tr>\n<tr><td>BenchmarkNinNestedStructUnionProtoUnmarshal</td><td>65.35</td><td>133.75</td><td>2.05x</td></tr>\n<tr><td>BenchmarkTreeProtoUnmarshal</td><td>141.28</td><td>297.13</td><td>2.10x</td></tr>\n<tr><td>BenchmarkOrBranchProtoUnmarshal</td><td>162.56</td><td>313.96</td><td>1.93x</td></tr>\n<tr><td>BenchmarkAndBranchProtoUnmarshal</td><td>163.06</td><td>306.15</td><td>1.88x</td></tr>\n<tr><td>BenchmarkLeafProtoUnmarshal</td><td>176.72</td><td>354.19</td><td>2.00x</td></tr>\n<tr><td>BenchmarkDeepTreeProtoUnmarshal</td><td>107.50</td><td>205.30</td><td>1.91x</td></tr>\n<tr><td>BenchmarkADeepBranchProtoUnmarshal</td><td>83.48</td><td>190.88</td><td>2.29x</td></tr>\n<tr><td>BenchmarkAndDeepBranchProtoUnmarshal</td><td>110.97</td><td>234.60</td><td>2.11x</td></tr>\n<tr><td>BenchmarkDeepLeafProtoUnmarshal</td><td>123.40</td><td>250.73</td><td>2.03x</td></tr>\n<tr><td>BenchmarkNidOptEnumProtoUnmarshal</td><td>2.62</td><td>27.16</td><td>10.37x</td></tr>\n<tr><td>BenchmarkNinOptEnumProtoUnmarshal</td><td>1.31</td><td>6.11</td><td>4.66x</td></tr>\n<tr><td>BenchmarkNidRepEnumProtoUnmarshal</td><td>7.42</td><td>17.88</td><td>2.41x</td></tr>\n<tr><td>BenchmarkNinRepEnumProtoUnmarshal</td><td>7.47</td><td>16.69</td><td>2.23x</td></tr>\n<tr><td>BenchmarkTimerProtoUnmarshal</td><td>61.12</td><td>190.34</td><td>3.11x</td></tr>\n<tr><td>BenchmarkMyExtendableProtoUnmarshal</td><td>9.90</td><td>36.71</td><td>3.71x</td></tr>\n<tr><td>BenchmarkOtherExtenableProtoUnmarshal</td><td>21.90</td><td>52.13</td><td>2.38x</td></tr>\n</table>"
        },
        {
          "name": "codec",
          "type": "tree",
          "content": null
        },
        {
          "name": "conformance",
          "type": "tree",
          "content": null
        },
        {
          "name": "custom_types.md",
          "type": "blob",
          "size": 2.67578125,
          "content": "# Custom types\n\nCustom types is a gogo protobuf extensions that allows for using a custom\nstruct type to decorate the underlying structure of the protocol message.\n\n# How to use\n\n## Defining the protobuf message\n\n```proto\nmessage CustomType {\n  optional ProtoType Field = 1 [(gogoproto.customtype) = \"T\"];\n}\n\nmessage ProtoType {\n  optional string Field = 1;\n}\n```\n\nor alternatively you can declare the field type in the protocol message to be\n`bytes`:\n\n```proto\nmessage BytesCustomType {\n  optional bytes Field = 1 [(gogoproto.customtype) = \"T\"];\n}\n```\n\nThe downside of using `bytes` is that it makes it harder to generate protobuf\ncode in other languages. In either case, it is the user responsibility to\nensure that the custom type marshals and unmarshals to the expected wire\nformat. That is, in the first example, gogo protobuf will not attempt to ensure\nthat the wire format of `ProtoType` and `T` are wire compatible.\n\n## Custom type method signatures\n\nThe custom type must define the following methods with the given\nsignatures. Assuming the custom type is called `T`:\n\n```go\nfunc (t T) Marshal() ([]byte, error) {}\nfunc (t *T) MarshalTo(data []byte) (n int, err error) {}\nfunc (t *T) Unmarshal(data []byte) error {}\nfunc (t *T) Size() int {}\n\nfunc (t T) MarshalJSON() ([]byte, error) {}\nfunc (t *T) UnmarshalJSON(data []byte) error {}\n\n// only required if the compare option is set\nfunc (t T) Compare(other T) int {}\n// only required if the equal option is set\nfunc (t T) Equal(other T) bool {}\n// only required if populate option is set\nfunc NewPopulatedT(r randyThetest) *T {}\n```\n\nCheck [t.go](test/t.go) for a full example\n\n# Warnings and issues\n\n`Warning about customtype: It is your responsibility to test all cases of your marshaling, unmarshaling and size methods implemented for your custom type.`\n\nIssues with customtype include:\n  * <a href=\"https://github.com/gogo/protobuf/issues/199\">A Bytes method is not allowed.<a/>\n  * <a href=\"https://github.com/gogo/protobuf/issues/132\">Defining a customtype as a fake proto message is broken.</a>\n  * <a href=\"https://github.com/gogo/protobuf/issues/147\">proto.Clone is broken.</a>\n  * <a href=\"https://github.com/gogo/protobuf/issues/125\">Using a proto message as a customtype is not allowed.</a>\n  * <a href=\"https://github.com/gogo/protobuf/issues/200\">cusomtype of type map can not UnmarshalText</a>\n  * <a href=\"https://github.com/gogo/protobuf/issues/201\">customtype of type struct cannot jsonpb unmarshal</a>\n  * <a href=\"https://github.com/gogo/protobuf/issues/477\">Customtype field does not get a generated 'getter' method</a>\n  * <a href=\"https://github.com/gogo/protobuf/issues/478\">Repeated customtype fields generate slices without pointer to the custom type </a>\n"
        },
        {
          "name": "extensions.md",
          "type": "blob",
          "size": 16.6357421875,
          "content": "# gogoprotobuf Extensions\n\nHere is an [example.proto](https://github.com/gogo/protobuf/blob/master/test/example/example.proto) which uses most of the gogoprotobuf code generation plugins.\n\nPlease also look at the example [Makefile](https://github.com/gogo/protobuf/blob/master/test/example/Makefile) which shows how to specify the `descriptor.proto` and `gogo.proto` in your proto_path\n\nThe documentation at [http://godoc.org/github.com/gogo/protobuf/gogoproto](http://godoc.org/github.com/gogo/protobuf/gogoproto) describes the extensions made to goprotobuf in more detail.\n\nAlso see [http://godoc.org/github.com/gogo/protobuf/plugin/](http://godoc.org/github.com/gogo/protobuf/plugin/) for documentation of each of the extensions which have their own plugins.\n\n# Fast Marshalling and Unmarshalling\n\nGenerating a `Marshal`, `MarshalTo`, `Size` (or `ProtoSize`) and `Unmarshal` method for a struct results in faster marshalling and unmarshalling than when using reflect.\n\nSee [BenchComparison](https://github.com/gogo/protobuf/blob/master/bench.md) for a comparison between reflect and generated code used for marshalling and unmarshalling.\n\n<table>\n<tr><td><b>Name</b></td><td><b>Option</b></td><td><b>Type</b></td><td><b>Description</b></td><td><b>Default</b></td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/plugin/marshalto\">marshaler</a></td><td>Message</td><td>bool</td><td>if true, a Marshal and MarshalTo method is generated for the specific message</td><td>false</td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/plugin/size\">sizer</a></td><td>Message</td><td>bool</td><td>if true, a Size method is generated for the specific message</td><td>false</td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/plugin/unmarshal\">unmarshaler</a></td><td> Message </td><td> bool </td><td> if true, an Unmarshal method is generated for the specific message </td><td> false</td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/plugin/size\">protosizer</a></td><td>Message</td><td>bool</td><td>if true, a ProtoSize method is generated for the specific message</td><td>false</td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/plugin/marshalto\"> unsafe_marshaler</a> (deprecated) </td><td> Message </td><td> bool </td><td> if true, a Marshal and MarshalTo method is generated. </td><td> false</td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/plugin/unmarshal\">unsafe_unmarshaler</a> (deprecated) </td><td> Message </td><td> bool </td><td> if true, an Unmarshal method is generated. </td><td> false</td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/plugin/marshalto\">stable_marshaler</a></td><td> Message </td><td> bool </td><td> if true, a Marshal and MarshalTo method is generated for the specific message, but unlike marshaler the output is guaranteed to be deterministic, at the sacrifice of some speed</td><td> false </td></tr>\n<tr><td>typedecl (beta)</td><td> Message </td><td> bool </td><td> if false, type declaration of the message is excluded from the generated output. Requires the marshaler and unmarshaler to be generated.</td><td> true </td></tr>\n</table>\n\n# More Canonical Go Structures\n\nLots of times working with a goprotobuf struct will lead you to a place where you create another struct that is easier to work with and then have a function to copy the values between the two structs.\n\nYou might also find that basic structs that started their life as part of an API need to be sent over the wire. With gob, you could just send it. With goprotobuf, you need to make a new struct.\n\n`gogoprotobuf` tries to fix these problems with the nullable, embed, customtype, customname, casttype, castkey and castvalue field extensions.\n\n<table>\n<tr><td><b>Name</b></td><td><b>Option</b></td><td><b>Type</b></td><td><b>Description</b></td><td><b>Default</b></td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/gogoproto\">nullable</a></td><td> Field </td><td> bool </td><td> if false, a field is generated without a pointer (see warning below). </td><td> true </td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/gogoproto\">embed</a></td><td> Field </td><td> bool </td><td> if true, the field is generated as an embedded field. </td><td> false </td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/gogoproto\">customtype</a> </td><td> Field </td><td> string </td><td> It works with the Marshal and Unmarshal methods, to allow you to have your own types in your struct, but marshal to bytes. For example, custom.Uuid or custom.Fixed128. For more information please refer to the <a href=\"custom_types.md\">CustomTypes</a> document </td><td> goprotobuf type </td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/gogoproto\"> customname</a> (beta) </td><td> Field </td><td> string </td><td> Changes the generated fieldname. This is especially useful when generated methods conflict with fieldnames. </td><td> goprotobuf field name </td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/gogoproto\"> casttype</a> (beta) </td><td> Field </td><td> string </td><td> Changes the generated field type. It assumes that this type is castable to the original goprotobuf field type.  It currently does not support maps, structs or enums. </td><td> goprotobuf field type </td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/gogoproto\"> castkey </a> (beta) </td><td> Field </td><td> string </td><td> Changes the generated fieldtype for a map key.  All generated code assumes that this type is castable to the protocol buffer field type.  Only supported on maps. </td><td> goprotobuf field type </td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/gogoproto\"> castvalue </a> (beta) </td><td> Field </td><td> string </td><td> Changes the generated fieldtype for a map value.  All generated code assumes that this type is castable to the protocol buffer field type.  Only supported on maps. </td><td> goprotobuf field type </td></tr>\n<tr><td>enum_customname  (beta)</td><td> Enum </td><td> string </td><td>Sets the type name of an enum. If goproto_enum_prefix is enabled, this value will be used as a prefix when generating enum values.</td><td>goprotobuf enum type name. Helps with golint issues.</td></tr>\n<tr><td>enumdecl (beta)</td><td> Enum </td><td> bool </td><td> if false, type declaration of the enum is excluded from the generated output. Requires the marshaler and unmarshaler to be generated. </td><td> true </td></tr>\n<tr><td>enumvalue_customname (beta) </td><td> Enum Value </td><td> string </td><td>Changes the generated enum name.  Helps with golint issues.</td><td>goprotobuf enum value name</td></tr>\n<tr><td><a href=\"https://github.com/gogo/protobuf/blob/master/test/types/types.proto\">stdtime</a></td><td> Timestamp Field </td><td> bool </td><td>Changes the Well Known Timestamp Type to time.Time</td><td>Timestamp</td></tr>\n<tr><td><a href=\"https://github.com/gogo/protobuf/blob/master/test/types/types.proto\">stdduration</a></td><td> Duration Field </td><td> bool </td><td>Changes the Well Known Duration Type to time.Duration</td><td>Duration</td></tr>\n</table>\n\n`Warning about nullable: according to the Protocol Buffer specification, you should be able to tell whether a field is set or unset. With the option nullable=false this feature is lost, since your non-nullable fields will always be set.`\n\n# Goprotobuf Compatibility\n\nGogoprotobuf is compatible with Goprotobuf, because it is compatible with protocol buffers (see the section on tests below).\n\nGogoprotobuf generates the same code as goprotobuf if no extensions are used.\n\nThe enumprefix, getters and stringer extensions can be used to remove some of the unnecessary code generated by goprotobuf.\n\n<table>\n<tr><td><b>Name</b></td><td><b>Option</b></td><td><b>Type</b></td><td><b>Description</b></td><td><b>Default</b></td></tr>\n<tr><td> gogoproto_import </td><td> File </td><td> bool </td><td> if false, the generated code imports github.com/golang/protobuf/proto instead of github.com/gogo/protobuf/proto. </td><td> true </td></tr>\n<tr><td> goproto_enum_prefix </td><td> Enum </td><td> bool </td><td> if false, generates the enum constant names without the messagetype prefix </td><td> true </td></tr>\n<tr><td> goproto_getters </td><td> Message </td><td> bool </td><td> if false, the message is generated without get methods, this is useful when you would rather want to use face </td><td> true </td></tr>\n<tr><td> goproto_stringer </td><td> Message </td><td> bool </td><td> if false, the message is generated without the default string method, this is useful for rather using stringer </td><td> true </td></tr>\n<tr><td> goproto_enum_stringer (experimental) </td><td> Enum </td><td> bool </td><td> if false, the enum is generated without the default string method, this is useful for rather using enum_stringer </td><td> true </td></tr>\n<tr><td> goproto_extensions_map (beta) </td><td> Message </td><td> bool </td><td> if false, the extensions field is generated as type []byte instead of type map[int32]proto.Extension </td><td> true </td></tr>\n<tr><td> goproto_unrecognized (beta) </td><td> Message </td><td> bool </td><td>if false, XXX_unrecognized field is not generated. This is useful to reduce GC pressure at the cost of losing information about unrecognized fields. </td><td> true </td></tr>\n<tr><td> goproto_unkeyed (alpha) </td><td> Message </td><td> bool </td><td>if false, XXX_unkeyed field is not generated. </td><td> true </td></tr>\n<tr><td> goproto_sizecache (alpha) </td><td> Message </td><td> bool </td><td>if false, XXX_sizecache field is not generated. </td><td> true </td></tr>\n<tr><td> goproto_registration (beta) </td><td> File </td><td> bool </td><td>if true, the generated files will register all messages and types against both gogo/protobuf and golang/protobuf. This is necessary when using third-party packages which read registrations from golang/protobuf (such as the grpc-gateway). </td><td> false </td></tr>\n<tr><td> message_name </td><td> Message </td><td> bool </td><td>if true, a `XXX_MessageName()` method is generated that returns the message's name.  This is useful for grpc-gateway compatibility.</td><td> false </td></tr>\n</table>\n\n# Less Typing\n\nThe Protocol Buffer language is very parseable and extra code can be easily generated for structures.\n\nHelper methods, functions and interfaces can be generated by triggering certain extensions like gostring.\n\n<table>\n<tr><td><b>Name</b></td><td><b>Option</b></td><td><b>Type</b></td><td><b>Description</b></td><td><b>Default</b></td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/plugin/gostring\">gostring</a></td><td> Message </td><td> bool </td><td> if true, a `GoString` method is generated. This returns a string representing valid go code to reproduce the current state of the struct. </td><td> false </td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/plugin/union\"> onlyone</a> </td><td> Message </td><td> bool </td><td> if true, all fields must be nullable and only one of the fields may be set, like a union. Two methods are generated: `GetValue() interface{}` and `SetValue(v interface{}) (set bool)`. These provide easier interaction with a union. </td><td> false </td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/plugin/equal\"> equal</a></td><td> Message </td><td> bool </td><td> if true, an Equal method is generated </td><td> false </td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/plugin/compare\"> compare</a></td><td> Message </td><td> bool </td><td> if true, a Compare method is generated.  This is very useful for quickly implementing sort on a list of protobuf structs </td><td> false </td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/plugin/equal\"> verbose_equal</a> </td><td> Message </td><td> bool </td><td> if true, a verbose equal method is generated for the message. This returns an error which describes the exact element which is not equal to the exact element in the other struct. </td><td> false </td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/plugin/stringer\"> stringer</a> </td><td> Message </td><td> bool </td><td> if true, a String method is generated for the message. </td><td> false </td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/plugin/face\">face</a> </td><td> Message </td><td> bool </td><td> if true, a function will be generated which can convert a structure which satisfies an interface (face) to the specified structure. This interface contains getters for each of the fields in the struct. The specified struct is also generated with the getters. This allows it to satisfy its own face. </td><td> false </td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/plugin/description\"> description</a> (beta) </td><td> Message </td><td> bool </td><td> if true, a Description method is generated for the message. </td><td> false </td></tr>\n<tr><td> <a href=\"http://godoc.org/github.com/gogo/protobuf/plugin/populate\"> populate</a> </td><td> Message </td><td> bool </td><td> if true, a `NewPopulated<MessageName>` function is generated. This is necessary for  generated tests. </td><td> false </td></tr>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/plugin/enumstringer\"> enum_stringer</a> (experimental) </td><td> Enum </td><td> bool </td><td> if true, a String method is generated for an Enum </td><td> false </td></tr>\n</table>\n\nIssues with Compare include:\n  * <a href=\"https://github.com/gogo/protobuf/issues/221\">Oneof is not supported yet</a>\n  * <a href=\"https://github.com/gogo/protobuf/issues/230\">Not all Well Known Types are supported yet</a>\n  * <a href=\"https://github.com/gogo/protobuf/issues/231\">Maps are not supported</a>\n\n# Peace of Mind\n\nTest and Benchmark generation is done with the following extensions:\n\n<table>\n<tr><td><a href=\"http://godoc.org/github.com/gogo/protobuf/plugin/testgen\">testgen</a> </td><td> Message </td><td> bool </td><td> if true, tests are generated for proto, json and prototext marshalling as well as for some of the other enabled plugins </td><td> false </td></tr>\n<tr><td> benchgen </td><td> Message </td><td> bool </td><td> if true, benchmarks are generated for proto, json and prototext marshalling as well as for some of the other enabled plugins </td><td> false </td></tr>\n</table>\n\n# More Serialization Formats\n\nOther serialization formats like xml and json typically use reflect to marshal and unmarshal structured data.  Manipulating these structs into something other than the default Go requires editing tags.  The following extensions provide ways of editing these tags for the generated protobuf structs.\n\n<table>\n<tr><td><a href=\"https://github.com/gogo/protobuf/blob/master/test/tags/tags.proto\">jsontag</a> (beta) </td><td> Field </td><td> string </td><td> if set, the json tag value between the double quotes is replaced with this string </td><td> fieldname </td></tr>\n<tr><td><a href=\"https://github.com/gogo/protobuf/blob/master/test/tags/tags.proto\">moretags</a> (beta) </td><td> Field </td><td> string </td><td> if set, this string is appended to the tag string </td><td> empty </td></tr>\n</table>\n\n<a href=\"https://groups.google.com/forum/#!topic/gogoprotobuf/xmFnqAS6MIc\">Here is a longer explanation of jsontag and moretags</a>\n\n# File Options\n\nEach of the boolean message and enum extensions also have a file extension:\n\n  * `marshaler_all`\n  * `sizer_all`\n  * `protosizer_all`\n  * `unmarshaler_all`\n  * `unsafe_marshaler_all`\n  * `unsafe_unmarshaler_all`\n  * `stable_marshaler_all`\n  * `goproto_enum_prefix_all`\n  * `goproto_getters_all`\n  * `goproto_stringer_all`\n  * `goproto_enum_stringer_all`\n  * `goproto_extensions_map_all`\n  * `goproto_unrecognized_all`\n  * `goproto_unkeyed_all`\n  * `goproto_sizecache_all`\n  * `gostring_all`\n  * `onlyone_all`\n  * `equal_all`\n  * `compare_all`\n  * `verbose_equal_all`\n  * `stringer_all`\n  * `enum_stringer_all`\n  * `face_all`\n  * `description_all`\n  * `populate_all`\n  * `testgen_all`\n  * `benchgen_all`\n  * `enumdecl_all`\n  * `typedecl_all`\n  * `messagename_all`\n\nEach of these are the same as their Message Option counterparts, except they apply to all messages in the file.  Their Message option counterparts can also be used to overwrite their effect.\n\n# Tests\n\n  * The normal barrage of tests are run with: `make tests`\n  * A few weird tests: `make testall`\n  * Tests for compatibility with [golang/protobuf](https://github.com/golang/protobuf) are handled by a different project [harmonytests](https://github.com/gogo/harmonytests), since it requires goprotobuf.\n  * Cross version tests are made with [Travis CI](https://travis-ci.org/gogo/protobuf).\n  * GRPC Tests are also handled by a different project [grpctests](https://github.com/gogo/grpctests), since it depends on a lot of grpc libraries.\n  * Thanks to [go-fuzz](https://github.com/dvyukov/go-fuzz/) we have proper [fuzztests](https://github.com/gogo/fuzztests).\n\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.2099609375,
          "content": "module github.com/gogo/protobuf\n\ngo 1.15\n\nrequire (\n\tgithub.com/kisielk/errcheck v1.5.0 // indirect\n\tgithub.com/kisielk/gotool v1.0.0 // indirect\n\tgolang.org/x/tools v0.0.0-20210106214847-113979e3529a // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 4.337890625,
          "content": "github.com/kisielk/errcheck v1.1.0 h1:ZqfnKyx9KGpRcW04j5nnPDgRgoXUeLh2YFBeFzphcA0=\ngithub.com/kisielk/errcheck v1.1.0/go.mod h1:EZBBE59ingxPouuu3KfxchcWSUPOHkagtvWXihfKN4Q=\ngithub.com/kisielk/errcheck v1.2.0 h1:reN85Pxc5larApoH1keMBiu2GWtPqXQ1nc9gx+jOU+E=\ngithub.com/kisielk/errcheck v1.2.0/go.mod h1:/BMXB+zMLi60iA8Vv6Ksmxu/1UDYcXs4uQLJ+jE2L00=\ngithub.com/kisielk/errcheck v1.5.0 h1:e8esj/e4R+SAOwFwN+n3zr0nYeCyeweozKfO23MvHzY=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0 h1:AV2c/EiW3KqPNT9ZKl07ehoAGi4C5/01Cfbblndcapg=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/mod v0.2.0 h1:KU7oHjnv3XNWfa5COkzUifxZmxp1TyI7ImMXqFxLwvQ=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0 h1:RM4zey1++hCTbCVQfnWeKs9/IEsaBLA8vTkd0WVtmH4=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/tools v0.0.0-20180221164845-07fd8470d635 h1:2eB4G6bDQDeP69ZXbOKC00S2Kf6TIiRS+DzfKsKeQU0=\ngolang.org/x/tools v0.0.0-20180221164845-07fd8470d635/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20181030221726-6c7e314b6563 h1:NIou6eNFigscvKJmsbyez16S2cIS6idossORlFtSt2E=\ngolang.org/x/tools v0.0.0-20181030221726-6c7e314b6563/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f h1:tuwaIjfUa6eI6REiNueIxvNm1popyPUnqWga83S7U0o=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a h1:CB3a9Nez8M13wwlr/E2YtwoU+qYHKfC+JrDa45RXXoQ=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543 h1:E7g+9GITq07hpfrRu66IVDexMakfv52eLZ2CXBWiKr4=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1 h1:go1bK/D/BFZV2I8cIQd1NKEZ+0owSTG1fDTci4IqFcE=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\n"
        },
        {
          "name": "gogoproto",
          "type": "tree",
          "content": null
        },
        {
          "name": "gogoreplace",
          "type": "tree",
          "content": null
        },
        {
          "name": "install-protobuf.sh",
          "type": "blob",
          "size": 0.6181640625,
          "content": "#!/usr/bin/env bash\n\nset -ex\n\ndie() {\n    echo \"$@\" >&2\n    exit 1\n}\n\ncd ${HOME}\n\ncase \"$PROTOBUF_VERSION\" in\n2*)\n    basename=protobuf-$PROTOBUF_VERSION\n    wget https://github.com/google/protobuf/releases/download/v$PROTOBUF_VERSION/$basename.tar.gz\n    tar xzf $basename.tar.gz\n    cd protobuf-$PROTOBUF_VERSION\n    ./configure --prefix=${HOME} && make -j2 && make install\n    ;;\n3*)\n    basename=protoc-$PROTOBUF_VERSION-linux-x86_64\n    wget https://github.com/google/protobuf/releases/download/v$PROTOBUF_VERSION/$basename.zip\n    unzip $basename.zip\n    ;;\n*)\n    die \"unknown protobuf version: $PROTOBUF_VERSION\"\n    ;;\nesac\n"
        },
        {
          "name": "io",
          "type": "tree",
          "content": null
        },
        {
          "name": "jsonpb",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "proto",
          "type": "tree",
          "content": null
        },
        {
          "name": "protobuf",
          "type": "tree",
          "content": null
        },
        {
          "name": "protoc-gen-combo",
          "type": "tree",
          "content": null
        },
        {
          "name": "protoc-gen-gofast",
          "type": "tree",
          "content": null
        },
        {
          "name": "protoc-gen-gogo",
          "type": "tree",
          "content": null
        },
        {
          "name": "protoc-gen-gogofast",
          "type": "tree",
          "content": null
        },
        {
          "name": "protoc-gen-gogofaster",
          "type": "tree",
          "content": null
        },
        {
          "name": "protoc-gen-gogoslick",
          "type": "tree",
          "content": null
        },
        {
          "name": "protoc-gen-gogotypes",
          "type": "tree",
          "content": null
        },
        {
          "name": "protoc-gen-gostring",
          "type": "tree",
          "content": null
        },
        {
          "name": "protoc-min-version",
          "type": "tree",
          "content": null
        },
        {
          "name": "sortkeys",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "types",
          "type": "tree",
          "content": null
        },
        {
          "name": "vanity",
          "type": "tree",
          "content": null
        },
        {
          "name": "version",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}