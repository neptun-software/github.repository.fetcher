{
  "metadata": {
    "timestamp": 1736567770457,
    "page": 353,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kubernetes/kube-state-metrics",
      "stars": 5504,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5009765625,
          "content": "/kube-state-metrics\ndocumented_metrics\ncode_metrics\n\n# E2e tests output\n/log\n*.bak\n\n# Created by https://www.gitignore.io/api/go\n\n### Go ###\n# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\nvendor\n\n# Folders\n_obj\n_test\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\n*.test\n*.prof\n\n*.iml\n.idea/\n\n# Generated CLI help file\nhelp.txt\n\n# jsonnet dependency management\n/scripts/vendor\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 0.67578125,
          "content": "run:\n  timeout: 10m\n\nlinters:\n  disable-all: true\n  enable:\n    - gocritic\n    - gocyclo\n    - gofmt\n    - goimports\n    - gosec\n    - gosimple\n    - govet\n    - ineffassign\n    - misspell\n    - promlinter\n    - revive\n    - staticcheck\n    - unconvert\n    - unused\n\nlinters-settings:\n  goimports:\n    local-prefixes: k8s.io/kube-state-metrics,k8s.io/kube-state-metrics/v2\n\nissues:\n  exclude-use-default: false\n  exclude-rules:\n    # We don't check metrics naming in the tests.\n    - path: _test\\.go\n      linters:\n        - promlinter\n    # TODO(mrueg) Improve error handling\n    - text: \"G104:\"\n      linters:\n        - gosec\n    - text: \"package-comments:\"\n      linters:\n        - revive\n"
        },
        {
          "name": ".markdownlint-cli2.jsonc",
          "type": "blob",
          "size": 0.9677734375,
          "content": "{\n  \"globs\": [\n    \"**/*.md\"\n  ],\n  // ToDo: Following rules can't be fixed automatically. They should be enabled when fixed.\n  \"config\": {\n    \"MD004\": {\n      \"style\": \"asterisk\"\n    },\n    \"MD013\": false, // https://github.com/markdownlint/markdownlint/blob/main/docs/RULES.md#md013---line-length\n    \"MD024\": false, // https://github.com/markdownlint/markdownlint/blob/main/docs/RULES.md#md024---multiple-headers-with-the-same-content\n    \"MD033\": false, // https://github.com/markdownlint/markdownlint/blob/main/docs/RULES.md#md033---inline-html\n    \"MD036\": false, // https://github.com/markdownlint/markdownlint/blob/main/docs/RULES.md#md036---emphasis-used-instead-of-a-header\n    \"MD040\": false, // https://github.com/markdownlint/markdownlint/blob/main/docs/RULES.md#md040---fenced-code-blocks-should-have-a-language-specified\n    \"MD041\": false // https://github.com/markdownlint/markdownlint/blob/main/docs/RULES.md#md041---first-line-in-file-should-be-a-top-level-header \n  }\n}\n"
        },
        {
          "name": ".openvex",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 41.5283203125,
          "content": "## v2.14.0 / 2024-11-08\n\n### Note\n\n* This release builds with Golang `v1.23.3`\n* This release builds with `k8s.io/client-go`: `v0.31.2`\n* This release removes `kube_endpoint_address_not_ready` and `kube_endpoint_address_available` which have been deprecated in 2022. Please use `kube_endpoint_address`as a replacement.\n\n* [BUGFIX] Use --track-unscheduled-pods to select unscheduled pods in Daemonset sharding by @CatherineF-dev in <https://github.com/kubernetes/kube-state-metrics/pull/2388>\n* [BUGFIX] Install tools so VERSION gets set by @mrueg in <https://github.com/kubernetes/kube-state-metrics/pull/2456>\n* [BUGFIX] Syntax errors in kube-state-metrics.libsonnet by @jeffmccune in <https://github.com/kubernetes/kube-state-metrics/pull/2454>\n* [BUGFIX] Set kube_job_status_failed metric even when there are no job.Status.Conditions present by @richabanker in <https://github.com/kubernetes/kube-state-metrics/pull/2485>\n* [BUGFIX] de-duplication of custom resource metrics by @bartlettc22 in <https://github.com/kubernetes/kube-state-metrics/pull/2502>\n* [BUGFIX] Configure sharding every time MetricsHandler.Run runs by @wallee94 in <https://github.com/kubernetes/kube-state-metrics/pull/2478>\n* [BUGFIX] Panic in `util.GVRFromType` for core objects by @L3n41c in <https://github.com/kubernetes/kube-state-metrics/pull/2535>\n* [BUGFIX] Big memory value overflow by @leiwingqueen in <https://github.com/kubernetes/kube-state-metrics/pull/2540>\n* [BUGFIX] Expose empty labels by @mrueg in <https://github.com/kubernetes/kube-state-metrics/pull/2539>\n* [BUGFIX] CustomResourceMetrics: Convert status condition Unknown to a valid value by @Haleygo in <https://github.com/kubernetes/kube-state-metrics/pull/2536>\n* [CHANGE] Remove deprecated endpoint address metric by @mrueg in <https://github.com/kubernetes/kube-state-metrics/pull/2527>\n* [FEATURE] Add new metric kube_job_status_suspended by @Indresh2410 in <https://github.com/kubernetes/kube-state-metrics/pull/2542>\n* [FEATURE] Move endpoint ports into address metric by @mrueg in <https://github.com/kubernetes/kube-state-metrics/pull/2503>\n* [ENHANCEMENT] Use concurrent map when storing metrics by @rarruda in <https://github.com/kubernetes/kube-state-metrics/pull/2510>\n\n## v2.13.0 / 2024-07-18\n\n### Note\n\n* This release builds with Golang `v1.22.5`.\n* This release builds with `k8s.io/client-go`: `v0.30.3`.\n* This release adds read and write timeouts for requests. The defaults might have an impact on scrapes that take a long time.\n\n* [BUGFIX]  Pod autosharding: transition from labelselector to fieldselector by @pkoutsovasilis in <https://github.com/kubernetes/kube-state-metrics/pull/2347>\n* [ENHANCEMENT] Add automatic detection of memory limits by @SuperQ in <https://github.com/kubernetes/kube-state-metrics/pull/2447>\n* [FEATURE] Add `readyz` endpoint by @rexagod in <https://github.com/kubernetes/kube-state-metrics/pull/2442>\n* [FEATURE] Add `livez` endpoint by @rexagod in <https://github.com/kubernetes/kube-state-metrics/pull/2418>\n* [FEATURE] Add kube_persistentvolume_volume_mode metric by @ricardoapl in <https://github.com/kubernetes/kube-state-metrics/pull/2370>\n* [FEATURE] Add read and write timeouts by @Pokom in <https://github.com/kubernetes/kube-state-metrics/pull/2412>\n\n## v2.12.0 / 2024-04-02\n\n### Note\n\n* This release addresses a critical issue where scraping the exposition data for certain types caused metrics-backends to crash: <https://github.com/kubernetes/kube-state-metrics/issues/2248>.\n* This release builds with `k8s.io/client-go`: `v0.29.3`.\n\n* [BUGFIX] Fallback to `gauge` for `protobuf`-based negotiations by @rexagod in <https://github.com/kubernetes/kube-state-metrics/pull/2270>\n* [ENHANCEMENT] Add `kube_pod_container_status_last_terminated_timestamp`by @tetianakravchenko in <https://github.com/kubernetes/kube-state-metrics/pull/2291>\n* [FEATURE] Allow prefixing expandable paths by @rexagod in <https://github.com/kubernetes/kube-state-metrics/pull/2052>\n\n## v2.11.0 / 2024-03-04\n\n### Note\n\nThis release builds with Golang `v1.21.8`.\n\n* [ENHANCEMENT] Add OpenSSF Scorecard to README by @dalehenries in <https://github.com/kubernetes/kube-state-metrics/pull/2277>\n* [ENHANCEMENT] Generate OpenVX data for every release by @shafeeqes in <https://github.com/kubernetes/kube-state-metrics/pull/2276>\n* [ENHANCEMENT] Add restartPolicy to `kube_pod_init_container_info` metric by @changhyuni in <https://github.com/kubernetes/kube-state-metrics/pull/2240>\n* [FEATURE] Add `kube_node_status_addresses` metric by @stonith in <https://github.com/kubernetes/kube-state-metrics/pull/2252>\n* [FEATURE] Add namespace label to `endpointslice` metrics by @mrueg in <https://github.com/kubernetes/kube-state-metrics/pull/2266>\n* [FEATURE] Add opt-in `kube_persistentvolume_csi_attributes` metric by @machadovilaca in <https://github.com/kubernetes/kube-state-metrics/pull/2133>\n* [FEATURE] Add new metric `kube_pod_scheduler` metric by @adinhodovic in <https://github.com/kubernetes/kube-state-metrics/pull/2222>\n* [FEATURE] Support filtering annotations allow-list by `*` by @xonvanetta in <https://github.com/kubernetes/kube-state-metrics/pull/2234>\n* [ENHANCEMENT] Support scraping pod metrics that are still in scheduling status and have no assigned nodes by @mickeyzzc in <https://github.com/kubernetes/kube-state-metrics/pull/2217>\n* [FEATURE] Add backend resource info for `kube_ingress_path` by @rohitphatak in <https://github.com/kubernetes/kube-state-metrics/pull/2109>\n\n## v2.10.1 / 2023-10-09\n\n### Note\n\n* This release addresses a regression introduced in [#2105](https://github.com/kubernetes/kube-state-metrics/pull/2105).\n\n* [BUGFIX] Remove FieldSelector from non-namespaced resources by @mrueg and @dgrisonnet in [#2190](https://github.com/kubernetes/kube-state-metrics/pull/2190)\n* [ENHANCEMENT] Bump Go to v1.20.8\n\n## v2.10.0 / 2023-08-31\n\n### Note\n\n* Label and annotation metrics aren't exposed by default anymore to reduce the memory usage of the default configuration of kube-state-metrics. Before this change, they used to only include the name and namespace of the objects which is not relevant to users not opting in these metrics.\n\n* [BUGFIX] Log no _info suffix in name only once per reading the configuration for custommetrics by @chrischdi in <https://github.com/kubernetes/kube-state-metrics/pull/2157>\n* [BUGFIX] Don't crash on non-existent valueFrom path values by @chihshenghuang in <https://github.com/kubernetes/kube-state-metrics/pull/2140>\n* [BUGFIX] Index out of range in metrics_store.SanitizeHeaders by @mrueg in <https://github.com/kubernetes/kube-state-metrics/pull/2166>\n* [BUGFIX] Always extract the headers but only write it when we have custommetrics by @chrischdi in <https://github.com/kubernetes/kube-state-metrics/pull/2154>\n* [BUGFIX] Add filtering for Lease metrics by @ntoofu in <https://github.com/kubernetes/kube-state-metrics/pull/2122>\n* [FEATURE] Implement kube_pod_status_initialized_time by @opeco17 in <https://github.com/kubernetes/kube-state-metrics/pull/2148>\n* [FEATURE] Disable labels and annotations metrics when metric-annotations-… by @opeco17 in <https://github.com/kubernetes/kube-state-metrics/pull/2145>\n* [FEATURE] Add webhooks client config service metrics by @dgrisonnet in <https://github.com/kubernetes/kube-state-metrics/pull/2114>\n* [FEATURE] Support kube_persistentvolumeclaim_deletion_timestamp by @maxime1907 in <https://github.com/kubernetes/kube-state-metrics/pull/2074>\n* [FEATURE] Support kube_persistentvolume_deletion_timestamp by @maxime1907 in <https://github.com/kubernetes/kube-state-metrics/pull/2075>\n* [FEATURE] Adds new metric `kube_pod_service_account` by @swarup-stripe in <https://github.com/kubernetes/kube-state-metrics/pull/2096>\n* [FEATURE] Add volumemode to PVC info metric by @machadovilaca in <https://github.com/kubernetes/kube-state-metrics/pull/2134>\n* [FEATURE] Enable metric-annotations-allowlist and metric-labels-allowlist for ResourceQuota by @opeco17 in <https://github.com/kubernetes/kube-state-metrics/pull/2175>\n* [FEATURE] Allow field KV general matching by @rexagod in <https://github.com/kubernetes/kube-state-metrics/pull/2067>\n* [FEATURE] Support hot reload for kubeconfig by @opeco17 in <https://github.com/kubernetes/kube-state-metrics/pull/2144>\n* [FEATURE] Add support for endpoint topology routing hints by @MarkSRobinson in <https://github.com/kubernetes/kube-state-metrics/pull/2090>\n\n## v2.9.2 / 2023-05-30\n\nThis release does not incorporate any user-facing changes. Re-running release procedures as the process for the previous release failed. Changes are listed in v2.9.0.\n\n## v2.9.1 / 2023-05-29\n\nThis release does not incorporate any user-facing changes. Re-running release procedures as the process for the previous release failed. Changes are listed in v2.9.0.\n\n## v2.9.0 / 2023-05-23\n\nThe changes mentioned below are only the user-facing ones. For a list of the complete set of changes, refer the changelog associated with the release tag.\n\n### Note\n\n* The deprecated experimental VerticalPodAutoscaler metrics are no longer supported, and have been removed. We recommend to use CustomResourceState metrics to gather metrics from custom resources like the Vertical Pod Autoscaler.\n* #2004 regulated label names to adhere with [OTel-Prometheus standards](https://github.com/open-telemetry/opentelemetry-specification/blob/8946dfc6a2302f78b0224fcc3f4dfb816a7bb1f4/specification/compatibility/prometheus_and_openmetrics.md?plain=1#L224-L229), so existing label names that do not follow the same may be replaced by the ones that do. Please refer to the PR for more details.\n\n* [BUGFIX] Adhere to OTel-Prometheus standard for labels #2004 @rexagod\n* [BUGFIX] Respect relative paths for label resolutions #2007 @rexagod\n* [BUGFIX] Support LabelsFromPath functionality for Info-typed metrics #2048 @murphd40\n* [CHANGE] Remove VerticalPodAutoscaler #2017 @mrueg\n* [ENHANCEMENT] Add StatefulSet Start Ordinal metrics for KEP-3335 #1959 @pwschuurman\n* [ENHANCEMENT] Add namespace label to `kube_lease_renew_time` #2073 @A-Hilaly\n* [ENHANCEMENT] Add parameters for PodSecurity #2042 @jcpunk\n* [ENHANCEMENT] Add support for multi cluster prometheus alerts #2058 @jkroepke\n* [ENHANCEMENT] Don't crash on non-existent path values #1998 @rexagod\n* [ENHANCEMENT] Only use OpenMetrics and Text in contentType #2024 @CatherineF-dev\n* [ENHANCEMENT] Update go version to 1.20.4 #2056 @RamakrishnanArun\n* [FEATURE] Add support for variable VKs in CRS config #1851 @rexagod\n* [FEATURE] Support quantities and percentages #1989 @mrueg\n* [FEATURE] Use prometheus/exporter-toolkit landing page #2034 @mrueg\n\n## v2.8.2 / 2023-03-17\n\n* [BUGFIX]      Only use OpenMetrics and Text in contentType #2024 @CatherineF-dev\n\n## v2.8.1 / 2023-02-22\n\n* [BUGFIX]      Don't crash on non-existent paths @rexagod #1998\n* [BUGFIX]      Fix public Builder compatibility with BuilderInterface @clamoriniere #1994\n\n## v2.8.0 / 2023-02-10\n\nNote: The `--version` flag was removed as `kube-state-metrics version` also provides the same information. See #1956\n\nNote: Experimental CustomResourceState changed their labels for better usability. See #1942\nkube_crd_uptime{group=\"myteam.io\", kind=\"Foo\", version=\"v1\"} -> kube_customresource_uptime{customresource_group=\"myteam.io\", customresource_kind=\"Foo\", customresource_version=\"v1\"}\n\n* [CHANGE]       Prefix Group, Version and Kind labels for CustomResourceState Metrics #1942 @bavarianbidi\n* [CHANGE]       Fix empty string for \"owner_\\*\" dimensions #1923 @pawcykca\n* [CHANGE]       Remove broken --version flag, replace by version command #1956 @bjorand\n* [FEATURE]      Add metrics for EndpointSlices #1910 @mrueg\n* [FEATURE]      Add metrics for config file changes #1916 @mrueg\n* [FEATURE]      Add metrics for CustomResource State config file change #1928 @mrueg\n* [FEATURE]      Reload Kube-State-Metrics on CustomResourceState config file change #1930 @mrueg\n* [FEATURE]      Make CustomResourceState metrics type dynamic #1930 @rexagod\n* [FEATURE]      Add kube_pod_status_qos_class to pod metrics #1932 @frezes\n* [FEATURE]      Add kube_pod_status_ready_time and kube_pod_status_containers_ready_time metrics #1938 @ryanrolds\n* [FEATURE]      Enrich UserAgent with more information about kube-state-metrics #1960 @mrueg\n* [FEATURE]      Convert True/False to 1.0/0.0 values in CustomResourceState metrics #1963 @jabdoa2\n* [FEATURE]      Expose metrics in OpenMetrics format #1974 @mrueg\n* [BUGFIX]       Handle unit length `valueFrom` values #1958 @rexagod\n* [ENHANCEMENT]  Build with kubernetes 1.26 #1933 @mrueg\n\n## v2.7.0 / 2022-11-25\n\nNote: Experimental VerticalPodAutoscaler metrics are considered deprecated in this release and will be removed in v2.9.0.\nPlease use CustomResourceStateMetrics to gather metrics from VPA resources. See: #1718\n\nNote: Experimental CustomResourceState changed their naming convention for better usability.\nThe name of the CRD used to be interpolated into the name of the metric which made it impossible to aggregate a CRD across different versions.\nThis was changed to have the GVK information represented as labels:\nkube_myteam_io_v1_Foo_uptime -> kube_crd_uptime{group=\"myteam.io\", kind=\"Foo\", version=\"v1\"}\nSee: #1847\n\n* [CHANGE]      Deprecate VerticalPodAutoscaler metrics #1835 @rexagod\n* [CHANGE]      Recommend kube-scheduler metrics for container resource limits and requests #1849 @rexagod\n* [FEATURE]     Add experimental kube_pod_container_status_last_terminated_exitcode metric #1752 @ssabo\n* [FEATURE]     Introduce custom-resources-only flag #1813 @bavarianbidi\n* [FEATURE]     Allow allowlist filtering by wildcard key #1823 @rexagod\n* [FEATURE]     Add ContainerResourceSourceType to hpa spec and target metrics #1831 @whitebear009\n* [FEATURE]     Represent group, version and kind of a resource as labels #1850 @rexagod\n* [FEATURE]     Sharding metrics per node via fieldSelector #1864 @CatherineF-dev\n* [FEATURE]     Add experimental StatefulSet retention policy metrics #1876 @mattcary\n* [FEATURE]     Allow labelFromKey field for all applicable metric types #1880 @rexagod\n* [FEATURE]     Introduce Viper, allow hot-reload on config change #1827 @rexagod\n* [FEATURE]     Introduce Cobra, allow configuration via environment variables #1834 @rexagod\n* [FEATURE]     Add experimental kube_node_deletion_timestamp metric #1890 @rexagod\n* [FEATURE]     Support autoscaling/v2 resources for HorizontalPodAutoscaler #1906 @JoaoBraveCoding\n* [FEATURE]     Add IngressClass metrics #1905 @kaitoii11\n* [ENHANCEMENT] Import Kubernetes metrics stability framework #1844 @CatherineF-dev\n* [ENHANCEMENT] Promote kube_pod_container_status_waiting_reason and kube_deployment_status_replicas_ready to stable #1821 @CatherineF-dev\n* [ENHANCEMENT] Build with Kubernetes 1.25 and go 1.19 #1819 @mrueg\n* [BUGFIX]      Handle singular labels in allowlist #1826 @rexagod\n* [BUGFIX]      Do not expose ingress path metric when service is nil #1841 @evir35\n* [BUGFIX]      Allow lease metrics to be exported across all namespaces #1845 @lantingchiang\n\n## v2.6.0 / 2022-08-26\n\n* [FEATURE]     Add local storage labels to kube_persistentvolume_info #1814 @nabokihms\n* [FEATURE]     Add support for StateSet and Info metrics for Custom-Resource State #1777 @chrischdi\n* [FEATURE]     Add support for Rolebinding resource metrics #1799 @kaitoii11\n* [FEATURE]     Add new kube_horizontalpodautoscaler_status_target_metric #1725 @tanguyfalconnet\n* [FEATURE]     Add support for Role and Clusterrole resource metrics #1759 @kaitoii11\n* [FEATURE]     Add support for the ServiceAccount resource metrics #1773 @Serializator\n* [FEATURE]     Add metric for pod tolerations #1769 @Serializator\n* [FEATURE]     Add new kube_endpoint_address metric #1761 @bavarianbidi\n* [FEATURE]     Support reading the timestamp fields of custom resources #1766 @dontan001\n* [ENHANCEMENT] Migrate to structured logging #1807 @dmpe\n* [ENHANCEMENT] Switch registry vanity domain from k8s.gcr.io to registry.k8s.io #1750 @mrueg\n* [ENHANCEMENT] Graduate new endpoint metrics to stable #1812 @bavarianbidi\n* [BUGFIX]      Fix label name for kube_pod_nodeselector #1756 @yosshi825\n* [BUGFIX]      Fix Custom-Resource State Metrics not to contain underscores #1754 @chrischdi\n* [BUGFIX]      Fix kube_node_status_allocatable unit doc #1760 @jumbosushi\n\n## v2.5.0 / 2022-06-03\n\n* [FEATURE]     Add experimental Custom-Resource State Metrics #1710 @iamnoah\n* [FEATURE]     Add kube_pod_ips metric #1740 @bjschafer\n* [FEATURE]     Add kube_pod_nodeselector metric #1675 @geojaz\n* [FEATURE]     Add CSIPersistentVolumeSource to persistent volume metric #1727 @luke-sprig\n* [FEATURE]     Add kube_cronjob_status_last_successful_time metric #1732 @splitice\n* [FEATURE]     Add kube_persistentvolumeclaim_created metric #1741 @aidan-ogorman-dev\n* [ENHANCEMENT] Build with Go 1.18 #1726, #1745 @mrueg\n* [ENHANCEMENT] Bump kubernetes 1.24 and other go dependencies #1726, #1743 @mrueg\n* [ENHANCEMENT] Update x/crypto to mitigate CVE-2022-27191 #1721 @pgvishnuram\n* [BUGFIX]      Assert that newlines in comma separated arguments are ignored #1706 @sthaha\n* [BUGFIX]      Fix potential panic in pod store #1723 @mfojtik\n* [BUGFIX]      Fix potential panic in internal store #1731 @jan--f\n* [BUGFIX]      Properly initialize KSM Server test #1699 @fpetkovski\n\n## v2.4.2 / 2022-02-10\n\n* [BUGFIX]  Publish images with with the correct tag\n\n## v2.4.1 / 2022-02-10\n\n* [FEATURE]     Add `ingressclass` label to `kube_ingress_info` metric #1652 @adammw\n* [FEATURE]     Extend KSM library to support custom resource metrics #1644 @Garrybest\n* [ENHANCEMENT] Use apiVersion `v1` for `PodDisruptionBudget` and `CronJob` resources #1491 @bison\n* [ENHANCEMENT] Optimize slice allocations #1676 @sherifabdlnaby\n* [BUGFIX]      Use plural form of resource name in `allowlist` for PodDisruptionBudget #1653 @arajkumar\n\n## v2.3.0 / 2021-12-09\n\n* [FEATURE]     Add a `--namespace-denylist` command line flag to exclude metrics from certain namespaces #1596 #1595 @mallow111\n* [FEATURE]     Add `kube_*_labels` and `kube_*_annotations` metrics for Pod Disruption Budgets #1623 @arajkumar\n* [FEATURE]     Add a Kustomization file for deploying KSM in authosharding mode #1603 @karancode\n* [FEATURE]     Expose a metric for the number of ports in endpoint objects #1571 @bavarianbidi\n* [FEATURE]     Add a command line flag for opt-in metrics #1643 @Serializator\n* [FEATURE]     Add `kube_horizontalpodautoscaler_info` metric #1648 @Serializator\n* [ENHANCEMENT] Update Go to 1.17.4 #1649 @fpetkovski\n* [ENHANCEMENT] Update Kubernetes to 1.23 #1649 @fpetkovski\n* [BUGFIX]      Report the correct architecture for arm64 images #1629 @Serializator\n\n## v2.2.4 / 2021-11-08\n\n* [BUGFIX] Fix BuilderInterface and BuildStoresFunc to allow using KSM as a library #1618 @ahmed-mez\n\n## v2.2.3 / 2021-10-13\n\n* [BUGFIX] Fix the image build job. Reverts #1602\n\n## v2.2.2 / 2021-10-13\n\n* [BUGFIX]  Downgrade latest allowed go version to 1.16.9 #1601 @mrueg\n* [BUGFIX]  Fix CI variable names used for building KSM images @mrueg\n\n## v2.2.1 / 2021-09-24\n\n* [FEATURE] Add the kube_persistentvolumeclaim_annotations metric which exposes annotations on PVCs #1566 @arajkumar\n* [BUGFIX]  Revert the accidentally removed kube_persistentvolumeclaim_labels metric #1566 @arajkumar\n* [BUGFIX]  Filter annotations in metrics based on `--metric-annotations-allowlist` instead of `--metric-labels-allowlist` for\nCronJob, Daemonset, HPA and Ingress resources #1580 @midnw\n* [BUGFIX]  Avoid panicking when VPA objects have no targetRef #1584 @nabokihms\n\n## v2.2.0 / 2021-08-24\n\n* [FEATURE] Add --use-apiserver-cache flag to set resourceVersion=0 for ListWatch requests #1548\n* [FEATURE] Introduce metrics for Kubernetes object annotations #1468\n* [FEATURE] Introduce start time metric for containers in terminated state #1519\n* [FEATURE] Introduce metrics for cronjob job history limits #1535\n* [FEATURE] Add system_uuid dimension to kube_node_info metric #1535\n* [FEATURE] Add available replica metric for statefulsets #1532\n* [FEATURE] Add ready replica metric for deployments #1534\n* [CHANGE]  Update go clients for Kubernetes to support 1.22 #1545\n* [CHANGE]  Use new promlint package and update prometheus cli to 2.28.1 #1531\n\n## v2.1.1 / 2021-07-28\n\n* [CHANGE] go.mod: Update and minimize dependencies #1529\n* [CHANGE] Use BuilderInterface instead of internal/store.Builder in metricshandler #1537\n* [CHANGE] Add WithAllowLabels to public BuilderInterface #1514\n* [BUGFIX] Fixes a bug where KSM did not export any metrics when it had no permissions for resources in at least one namespace #1499\n\n## v2.1.0 / 2021-06-04\n\n* [CHANGE] Update go version and dependencies #1493\n\n## v2.1.0-rc.0 / 2021-05-20\n\n* [FEATURE] Add support for native TLS #1354\n* [FEATURE] Add wildcard option to metric-labels-allowlist #1403\n* [FEATURE] Add build info metric #1332\n* [CHANGE] Add \"uid\" label to every pod metric #1304\n* [CHANGE] Add resourceVersion to CronJob metrics #1447\n* [CHANGE] Update go version and dependencies #1474\n* [CHANGE] Bump client-go and friends to v0.21 (Kubernetes v1.21) #1463\n* [CHANGE] Replace deprecated use of ioutil #1458\n* [BUGFIX] Fix builder.Builder WithMetrics signature #1455\n* [BUGFIX] Fix pod-metric missing reasons #1287\n* [BUGFIX] Fix multiListWatch resourceVersion mismatch if watch reconnected #1377\n\n## v2.0.0 / 2021-04-13\n\n* [CHANGE] Update go version and dependencies #1440\n\n## v2.0.0-rc.1 / 2021-03-26\n\n* [CHANGE] Rename --labels-metric-allow-list to --metric-labels-allowlist #1424\n* [CHANGE] Remove deprecated Kubernetes APIs #1423\n* [CHANGE] go.mod: Update Dependencies #1419\n* [CHANGE] Remove vendor folder #1419\n* [CHANGE] `k8s.gcr.io/kube-state-metrics/kube-state-metrics` becomes the authoritative registry\nLocation on quay.io will not be updated anymore. Previously pushed images will be kept around to avoid breaking existing deployments.\n\n## v2.0.0-rc.0 / 2021-03-04\n\n* [CHANGE] internal/store/pod.go: Only create waiting_reason series if pods are in waiting state #1378\n* [CHANGE] internal/store/pod.go: Only create terminated_reason series if pods are in terminated state #1381\n* [CHANGE] internal/store/pod.go: Only create last_terminated containers series if containers are terminated state #1397\n* [FEATURE] Bump client-go and friends to v0.20 (kubernetes v1.20) #1328\n* [FEATURE] Bump go version to 1.16+ #1399\n* [BUGFIX] Fix gzip writer #1372\n* [BUGFIX] fix labels-metric-allow-list documentation #1404\n* [BUGFIX] Propagate resource version when sharded #1402\n\n## v2.0.0-beta / 2020-12-04\n\nPromotion to beta release after a period of no bugs.\n\n## v2.0.0-alpha.3 / 2020-11-19\n\n* [BUGFIX] Fix container resource limits metrics, which got dropped #1293\n* [BUGFIX] Adjust and refactor allowing labels to work for Kubernetes labels metrics #1301\nNote this is a breaking change, if you were using --labels-allow-list, look at the PR details for more information.\n\n## v2.0.0-alpha.2 / 2020-10-27\n\n* [CHANGE] Migrate ingress and certificates to new stable APIs #1260\n* [CHANGE] Revert \"Rework resource metrics\" #1278\nTo better align with future Kubernetes resource metrics, the changes to resource metrics were reverted, new metrics are:\nkube_pod_container_resource_requests and kube_pod_container_resource_limits\n* [FEATURE] Added the job failure reason in kube_job_status_failed metric #1214\n* [FEATURE] feat(persistentvolume): claimRef info to labels (kube_persistentvolume_claim_ref) #1244\n* [FEATURE] pod: add gauge for runtimeclass handler (kube_pod_runtimeclass_name_info) #1276\n\n## v2.0.0-alpha.1 / 2020-10-06\n\n* [CHANGE] Update go module path to k8s.io/kube-state-metrics/v2 #1238\n* [CHANGE] Bump klog to v2 and client-go to 1.19 #1250\n* [FEATURE] Add iscsi initiator name to persistentvolume_info #1235\n* [BUGFIX] Added Namespace to Rolebinding Jsonnet #1233\n* [BUGFIX] Reference closure scoped family generator #1240\n\n## v2.0.0-alpha / 2020-09-16\n\nNOTE: This is a major new alpha 2.0 release with breaking changes and removed metrics. See details below!\n\n* [CHANGE] Apply boundaries to metrics and allow via flag (--labels-allow-list) what labels to include #1125\n* [CHANGE] Update DaemonSet updated_number_scheduled metric name to be consistent #1181\nMetric was changed from kube_daemonset_updated_number_scheduled to kube_daemonset_status_updated_number_scheduled\n* [CHANGE] Rework resource metrics #1168\nMetrics kube_pod_container_resource_requests, kube_pod_container_resource_limits, kube_pod_overhead, kube_pod_init_container_resource_limits, kube_pod_init_container_resource_requests changed\n* [CHANGE] Convert k8s labels to snake case #1165\n* [CHANGE] Mutatingwebhookconfiguration.go: Switch to v1 #1144\n* [CHANGE] v2: Rename storage class labels reclaimPolicy to reclaim_policy and volumeBindingMode to volume_binding_mode #1107\n* [CHANGE] v2: Renamed --namespace flag to --namespaces #1098\n* [CHANGE] Rename kube_pod_deleted to kube_pod_deletion_timestamp #1079\n* [CHANGE] v2: Rename collector flag to resource flag #1006\n--resources is the new flag\n* [CHANGE] Remove non-identifying labels from pod metrics #1009\n* [CHANGE] v2: Remove deprecated stable metrics #1004\nNote that some of these were replaced with EXPERIMENTAL resource metrics. See #1168 for more details.\n  `kube_pod_container_resource_requests` and `kube_pod_container_resource_limits` are the replacements with `resource` labels\n  representing the resource name and `unit` labels representing the resource unit.\n  * kube_pod_container_resource_requests_cpu_cores\n  * kube_pod_container_resource_limits_cpu_cores\n  * kube_pod_container_resource_requests_memory_bytes\n  * kube_pod_container_resource_limits_memory_bytes\n  * `kube_node_status_capacity` and `kube_node_status_allocatable` are the replacements with `resource` labels\n  representing the resource name and `unit` labels representing the resource unit.\n  * kube_node_status_capacity_pods\n  * kube_node_status_capacity_cpu_cores\n  * kube_node_status_capacity_memory_bytes\n  * kube_node_status_allocatable_pods\n  * kube_node_status_allocatable_cpu_cores\n  * kube_node_status_allocatable_memory_bytes\n* [CHANGE] Rename black-/whitelist to allow/deny-list #1045\nNew flags are --metric-allowlist and --metric-denylist\n* [CHANGE] Update telemetry port to 8081 #1049\n* [CHANGE] v2: Rename hpa metrics to use full horizontalpodautoscaler #1003\nAll metrics with prefix of kube_hpa_ were renamed to kube_horizontalpodautoscaler_\n* [CHANGE] v2: change metrics port to 8080, telemetry port to 8081 #1005\n* [FEATURE] Add http request metric for kube-state-metrics main /metrics #1218  \n* [FEATURE] Add fc/iscsi/nfs identifier tags to persistentvolume_info metric #1208\n* [FEATURE] Adds new pod metric kube_pod_container_state_started #1183\n* [FEATURE] Add observedGeneration metric (kube_daemonset_status_observed_generation) for DaemonSets #1178\n* [FEATURE] Add internal_ip to node_info #1172\n* [FEATURE] Avoid conflicts when mapping Kubernetes labels to Prometheus labels #1156\n* [FEATURE] Add aws/gce volume id to kube_persistentvolume_info #1146\n* [FEATURE] Add UnexpectedAdmissionError to kube_pod_status_reason metric #1145\n* [FEATURE] Add init container requests (kube_pod_init_container_resource_requests) #1123\n* [FEATURE] Add host_network to kube_pod_info #1100\n* [FEATURE] Add kube_replicationcontroller_owner #1058\n* [FEATURE] Pod: add gauges for pod overhead (kube_pod_overhead) #1053\n* [FEATURE] Add \"Terminating\" status in kube_pod_status_phase metrics #1013\n* [FEATURE] Add lease collector metrics #1038\n* [ENHANCEMENT] Add DeprecatedVersion to struct FamilyGenerator and func NewFamilyGenerator #1160\n* [ENHANCEMENT] Add security context to deployment and statefulset #1034\n* [BUGFIX] Fix VolumeAttachment API version mismatch: expected v1 but watching v1beta1 #1136\n* [BUGFIX] Fix various CI issues (kube_volumeattachment_info nodeName -> node label rename) #1117\n* [BUGFIX] Fix maxUnavailable to round down instead up #1076\n\n## v1.9.7 / 2020-05-24\n\n* [BUGFIX] internal/store/mutatingwebhookconfiguration.go: Switch to v1 #1144\n\n## v1.9.6 / 2020-05-06\n\n* [BUGFIX] Fix VolumeAttachment API version mismatch: expected v1 but watching v1beta1 #1136\n\n## v1.9.5 / 2020-02-20\n\n* [BUGFIX] Switch to using only v1 client of validatingwebhookconfiguration #1052\n\n## v1.9.4 / 2020-02-03\n\n* [BUGFIX] Fix VolumeAttachment api version to be used (was v1beta1, should have been v1). #1043\n* [BUGFIX] Fix MutatingWebhookConfiguration api version to be used (was v1beta1, should have been v1). #1043\n* [BUGFIX] Fix ValidatingWebhookConfiguration api version to be used (was v1beta1, should have been v1). #1043\n* [BUGFIX] Use the correct for NetworkPolicy reflector. #1042\n\n## v1.9.3 / 2020-01-22\n\n* [CHANGE] Remove experimental hpa metrics kube_hpa_status_current_metrics_average_utilization and kube_hpa_status_current_metrics_average_value #1030\n\n## v1.9.2 / 2020-01-13\n\n* [BUGFIX] Fix segfault with External metrics #1023\n\n## v1.9.1 / 2020-01-10\n\n* [BUGFIX] Fix segfault in hpa metrics #1019\n* [BUGFIX] Fix nil panics when parsing hpa memory current metrics #1014\n\n## v1.9.0 / 2019-12-20\n\nAfter a testing period of 7 days, there were no additional bugs found or features introduced.\n\n## v1.9.0-rc.1 / 2019-12-12\n\n* [BUGFIX] Move resource version from metric label to metric number value #997\n\n## v1.9.0-rc.0 / 2019-12-04\n\n* [CHANGE] Add tools as go modules #927\n* [FEATURE] Add `kube_hpa_spec_target_metric` metric. #966\n* [FEATURE] Add hpa stats for current utilization and average value. #961\n* [FEATURE] Add `kube_namespace_status_condition` metric. #949\n* [FEATURE] Add `kube_persistentvolumeclaim_status_condition` and `kube_persistentvolumeclaim_status_phase` metrics #952\n* [FEATURE] Add `kube_networkpolicy_*` metrics #893\n* [FEATURE] Add `kube_volumeattachment_*` metrics #946\n* [FEATURE] add `kube_mutatingwebhookconfiguration_*`, `kube_validatingwebhookconfiguration_*` metrics #914\n* [ENHANCEMENT] Add `pod_cidr` label to the `kube_node_info` metric. #963\n* [ENHANCEMENT] Generate all manifests from jsonnet #908\n* [ENHANCEMENT] Add kube-state-metrics alerting rules. #962\n* [ENHANCEMENT] Add \"Evicted\" to the set of container terminated reasons. #968\n* [BUGFIX] Add check for ReclaimPolicy, VolumeBindingMode storageclass metrics. #929\n* [BUGFIX] Use single MultiListerWatcher for single store to fix missing metrics when watching multiple namespaces. #969\n* [BUGFIX] Fix nil panics parsing HPA CPU current metrics. #993\n\n## v1.8.0 / 2019-10-01\n\nAfter a testing period of 7 days, there were no additional bugs found or features introduced.\n\n## v1.8.0-rc.1 / 2019-09-24\n\n* [CHANGE] Pin go version to go mod artifact file #882\n* [BUGFIX] Correct mapping of hpa condition status labels  #890\n\n## v1.8.0-rc.0 / 2019-09-10\n\n* [FEATURE] Introduce sharding (and experimental auto-sharding) #613\n* [FEATURE] Add `kube_pod_status_unschedulable metric` #835\n* [CHANGE] Makefile: Remove tmpdir after container build #867\n* [ENHANCEMENT] Add metrics about kube-state-metric's interaction with the Kubernetes API. #866\n* [FEATURE] Add `kube_node_role metric` #877\n* [ENHANCEMENT] Add support for Darwin OS in e2e test #879\n\n## v1.7.2 / 2019-08-05\n\n* [CHANGE] Revert \"add `kube_*_annotations metrics` for all objects\" #859\n* [CHANGE] Remove `kube_namespace_annotations` metric #859\n\n## v1.7.1 / 2019-07-18\n\n* [BUGFIX] Fix crash due to missing ingress http block. #831\n* [BUGFIX] Add nil guard checks when querying VPA objects. #832\n\n## v1.7.0 / 2019-07-17\n\nAfter a testing period of 7 days, there were no additional bugs found or features introduced.\n\n## v1.7.0-rc.1 / 2019-07-10\n\n* [BUGFIX] Use the appsv1 apigroup when building the reflector for replicasets. #816\n\n## v1.7.0-rc.0 / 2019-07-10\n\n* [CHANGE] Use appsv1 apigroup for ReplicaSet. #804\n* [CHANGE] Use distroless/static as base image to further reduce image size. #748\n* [CHANGE] Return standardized text for health endpoint. #767\n* [ENHANCEMENT] Add DeadlineExceeded pod termination reason. #740\n* [ENHANCEMENT] Add CreateContainerError and InvalidImageName waiting reasons. #763\n* [FEATURE] Add Pod init container metrics. #762\n* [FEATURE] Add Metrics About StorageClass. #777\n* [FEATURE] Allow black/white- listing of metrics by regex. #773\n* [FEATURE] Add metrics for VerticalPodAutoscaler objects (experimental and disabled by default). #791\n* [FEATURE] Add (experimental) `kube_*_annotations` metrics. #770\n\n## v1.6.0 / 2019-05-06\n\nAfter a testing period of 10 days (release candidate 2), there were no\nadditional bugs found, thus releasing the stable version v1.6.0.\n\n* [FEATURE] Add `kube_replicaset_labels` to replicaset collector (#638).\n* [FEATURE] Add ingresses collector (#640).\n* [FEATURE] Add certificate signing request collector (#650).\n* [FEATURE] Add `kube_persistentvolumeclaim_access_mode` metric (#673).\n* [FEATURE] Add `kube_persistentvolume_capacity` metric (#674).\n* [FEATURE] Add `kube_job_owner` metric (#681).\n* [ENHANCEMENT] Add `priority_class` label to `kube_pod_info` metric (#713).\n* [BUGFIX] Bump addon-resizer patch version reducing resource consumption (#724).\n* [BUGFIX] Use k8s.io/api/apps/v1 for DaemonSet, Deployment and StatefulSet reflector (#720).\n\n## v1.5.0 / 2019-01-10\n\nAfter a testing period of 30 days, there were no additional bugs found or features introduced. Due to no bugs being reported over an in total 41 days period, we feel no more pre-releases are necessary for a stable release.\n\nThis release's focus was a large architectural change in order to improve performance and resource usage of kube-state-metrics drastically. Special thanks to @mxinden for his hard work on this! See the changelog of the pre-releases for more detailed information and related pull requests.\n\nAn additional change has been requested to be listed in the release notes:\n\n* [CHANGE] Due to removal of the surrounding mechanism the `ksm_resources_per_scrape` and `ksm_scrape_error_total` metrics no longer exists.\n\n## v1.5.0-beta.0 / 2018-12-11\n\nAfter a testing period of 11 days, there were no additional bugs found or features introduced.\n\n## v1.5.0-alpha.0 / 2018-11-30\n\n* [CHANGE] Disable gzip compression of kube-state-metrics responses by default. Can be re-enabled via `--enable-gzip-encoding`. See #563 for more details.\n* [FEATURE] Add `kube_replicaset_owner` metric (#520).\n* [FEATURE] Add `kube_pod_container_status_last_terminated_reason` metric (#535).\n* [FEATURE] Add `stateful_set_status.{current,update}_revision` metric (#545).\n* [FEATURE] Add pod disruption budget collector (#551).\n* [FEATURE] Make kube-state-metrics usable as a library (#575).\n* [FEATURE] Add `kube_service_spec_external_ip` metric and add `external_name` and `load_balancer_ip` label to `kube_service_info` metric (#571).\n* [ENHANCEMENT] Add uid info in `kube_pod_info` metric (#508).\n* [ENHANCEMENT] Update addon-resizer to 1.8.3 and increase resource limits (#552).\n* [ENHANCEMENT] Improve metric caching and rendering performance (#498).\n* [ENHANCEMENT] Adding CreateContainerConfigError as possible reason for container not starting (#578).\n\n## v1.4.0 / 2018-08-22\n\nAfter a testing period of 16 days, there were no additional bugs found or features introduced.\n\n## v1.4.0-rc.0 / 2018-08-06\n\n* [CHANGE] `kube_job_status_start_time` and `kube_job_status_completion_time` metric types changed from counter to gauge.\n* [CHANGE] `job` label to `job_name` as this collides with the Prometheus `job` label.\n* [FEATURE] Allow white- and black-listing metrics to be exposed.\n* [FEATURE] Add `kube_node_status_capacity` and `kube_node_status_allocatable` metrics.\n* [FEATURE] Add `kube_pod_status_scheduled_time` metric.\n* [FEATURE] Add `kube_pod_container_status_waiting_reason` and `kube_pod_container_status_terminated_reason` metrics.\n* [ENHANCEMENT] Add generic resource metrics for Pods, `kube_pod_container_resource_requests` and `kube_pod_container_resource_limits`. This deprecates the old resource metrics for Pods.\n* [ENHANCEMENT] Prefer protobuf over json when communicating with the Kubernetes API.\n* [ENHANCEMENT] Add dynamic volume support.\n* [ENHANCEMENT] Properly set kube-state-metrics user agent when performing requests against the Kubernetes API.\n* [BUGFIX] Fix incrorrect HPA metric labels.\n\n## v1.3.1 / 2018-04-12\n\n* [BUGFIX] Use Go 1.10.1 fixing TLS and memory issues.\n* [BUGFIX] Fix Pod unknown state.\n\n## v1.3.0 / 2018-04-04\n\nAfter a testing period of 12 days, there were no additional bugs found or features introduced.\n\n## v1.3.0-rc.0 / 2018-03-23\n\n* [CHANGE] Removed `--in-cluster` flag in [#371](https://github.com/kubernetes/kube-state-metrics/pull/371).\n  Users can no longer specify `--apiserver` with `--in-cluster=true`. To\n  emulate this behaviour in future releases, set the `KUBERNETES_SERVICE_HOST`\n  environment variable to the value of the `--apiserver` argument.\n* [FEATURE] Allow to specify multiple namespace.\n* [FEATURE] Add `kube_pod_completion_time`, `kube_pod_spec_volumes_persistentvolumeclaims_info`, and `kube_pod_spec_volumes_persistentvolumeclaims_readonly` metrics to the Pod collector.\n* [FEATURE] Add `kube_node_spec_taint` metric.\n* [FEATURE] Add `kube_namespace_annotations` metric.\n* [FEATURE] Add `kube_deployment_spec_strategy_rollingupdate_max_surge` metric.\n* [FEATURE] Add `kube_persistentvolume_labels` metric.\n* [FEATURE] Add `kube_persistentvolumeclaim_lables` metric.\n* [FEATURE] Add `kube_daemonset_labels` metric.\n* [FEATURE] Add Secret metrics.\n* [FEATURE] Add ConfigMap metrics.\n* [ENHANCEMENT] Add additional reasons to `kube_pod_container_status_waiting_reason` metric.\n* [BUGFIX] Fix namespacing of HPA.\n* [BUGFIX] Fix namespacing of PersistentVolumes.\n* [BUGFIX] Fix CronJob tab parsing.\n\n## v1.2.0 / 2018-01-15\n\nAfter a testing period of 10 days, there were no additional bugs found or features introduced.\n\n## v1.2.0-rc.0 / 2018-01-05\n\n* [CHANGE] The CronJob collector now expects the version to be v1beta1.\n* [FEATURE] Add `Endpoints` metrics collector.\n* [FEATURE] Add `PersistentVolume` metrics collector.\n* [FEATURE] Add `HorizontalPodAutoscaler` metrics collector.\n* [FEATURE] Add `kube_pod_container_status_terminated_reason` metric.\n* [FEATURE] Add `kube_job_labels` metric.\n* [FEATURE] Add `kube_cronjob_labels` metric.\n* [FEATURE] Add `kube_service_spec_type` metric.\n* [FEATURE] Add `kube_statefulset_status_replicas_current` metric.\n* [FEATURE] Add `kube_statefulset_status_replicas_ready` metric.\n* [FEATURE] Add `kube_statefulset_status_replicas_updated` metric.\n* [ENHANCEMENT] Allow specifying the host/IP kube-state-metrics binds to.\n* [ENHANCEMENT] Add `volumename` label to `kube_persistentvolumeclaim_info` metric.\n* [ENHANCEMENT] Add `cluster_ip` label to `kube_service_info` metric.\n* [ENHANCEMENT] Print version on startup and useful debug information at runtime.\n* [ENHANCEMENT] Add metrics for kube-state-metrics itself. For separation purposes this listens on a separate host/IP and port, both configurable respectively.\n\n## v1.1.0 / 2017-10-19\n\nAfter a testing period of one week, there were no additional bugs found or features introduced.\n\n## v1.1.0-rc.0 / 2017-10-12\n\n* [FEATURE] Add `kube_pod_container_status_waiting_reason` metric.\n* [FEATURE] Add `kube_node_status_capacity_nvidia_gpu_cards` and `kube_node_status_allocatable_nvidia_gpu_cards` metrics.\n* [FEATURE] Add `kube_persistentvolumeclaim_info`, `kube_persistentvolumeclaim_status_phase` and `kube_persistentvolumeclaim_resource_requests_storage_bytes` metrics.\n* [FEATURE] Add `kube_cronjob_created` metric.\n* [FEATURE] Add `kube_namespace_status_phase`, `kube_namespace_labels` and `kube_namespace_created` metrics.\n* [FEATURE] Add `*_created` metrics for all available collectors and resources.\n* [FEATURE] Add ability to specify glog flags.\n* [FEATURE] Add ability to limit kube-state-metrics objects to single namespace.\n* [ENHANCEMENT] Bump client-go to 5.0 release branch.\n* [ENHANCEMENT] Add pprof endpoints for profiling.\n* [ENHANCEMENT] Log resources and API versions used when collecting metrics from objects.\n* [ENHANCEMENT] Log number of resources used to generate metrics off of.\n* [ENHANCEMENT] Improve a usage message for collectors flag.\n* [BUGFIX] Fix Job start time nil panic.\n\n## v1.0.1 / 2017-08-24\n\n* [BUGFIX] Fix nil pointer panic when pods have an owner without controllers.\n\n## v1.0.0 / 2017-08-09\n\nAfter a testing period of one week, there were no additional bugs found or features introduced.\n\n## v1.0.0-rc.1 / 2017-08-02\n\n* [CHANGE] Remove `kube_node_status_ready`, `kube_node_status_out_of_disk`, `kube_node_status_memory_pressure`, `kube_node_status_disk_pressure`, and `kube_node_status_network_unavailable` metrics in favor of one generic `kube_node_status_condition` metric.\n* [CHANGE] Flatten created by label on `kube_pod_info` metric.\n* [FEATURE] Add `kube_pod_start_time` metric.\n* [FEATURE] Add PersistentVolumeClaim metrics.\n* [FEATURE] Add StatefulSet metrics.\n* [FEATURE] Add Job and CronJob metrics.\n* [FEATURE] Add label metrics for deployments.\n* [FEATURE] Add `kube_pod_owner` metrics.\n* [ENHANCEMENT] Add `provider_id` label to `kube_node_info` metric.\n* [BUGFIX] Fix various nil pointer panics.\n\n## v0.5.0 / 2017-05-03\n\n* [FEATURE] Add label metrics for Pods, Nodes and Services.\n* [FEATURE] Expose number of ready Pods for DaemonSets.\n* [FEATURE] Add LimitRange metrics.\n* [FEATURE] Add ReplicationController metrics.\n* [ENHANCEMENT] Add NodeMemoryPressure, NodeDiskPressure, NodeNetworkUnavailable condition metrics.\n* [ENHANCEMENT] Add `created_by` label to `kube_pod_info` metric.\n\n## v0.4.1 / 2017-02-10\n\n* [BUGFIX] fix panic if max unavailable if rolling update is unset\n\n## v0.4.0 / 2017-02-07\n\n* [FEATURE] Add replicaset metrics\n* [FEATURE] Add resourcequota metrics\n* [FEATURE] Add daemonset metrics\n* [FEATURE] Add resource limit and request metrics for pod containers\n* [FEATURE] Add node name label to `kube_pod_info` metric\n* [FEATURE] Add rolling update metrics for deployments\n* [ENHANCEMENT] Allow disabling collectors\n* [ENHANCEMENT] Improve in cluster vs non in cluster configuration\n\n## v0.3.0 / 2016-10-18\n\n* [FEATURE] Add pod metrics: `kube_pod_status_scheduled`, `kube_pod_container_requested_cpu_cores` and `kube_pod_container_requested_memory_bytes`\n* [FEATURE] Add deployment metric `kube_deployment_metadata_generation`\n* [FEATURE] Add node metric `kube_node_spec_unschedulable`\n* [CHANGE] Rename `kube_node_status_allocateable_*` to `kube_node_status_allocatable_*`\n\n## v0.2.0 / 2016-09-14\n\n* [CHANGE] Prefix all metrics with `kube_`\n* [CHANGE] Make metric collection synchronous\n* [FEATURE] Add a number of node/pod/deployment metrics\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.1474609375,
          "content": "# Contributing Guidelines\n\nWelcome to Kubernetes. We are excited about the prospect of you joining our [community](https://github.com/kubernetes/community)! The Kubernetes community abides by the CNCF [code of conduct](https://github.com/cncf/foundation/blob/master/code-of-conduct.md). Here is an excerpt:\n\n_As contributors and maintainers of this project, and in the interest of fostering an open and welcoming community, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities._\n\n## Getting Started\n\nWe have full documentation on how to get started contributing here:\n\n### Semantic Commit Messages\n\nWe use [semantic commit messages](https://www.conventionalcommits.org/en/v1.0.0/) in this repository.\n\nThey follow this format: `<type>[optional scope]: <description>`\n\nExamples for commit messages following this are:\n\n`feat: allow provided config object to extend other configs`\n\nYou can also include a scope within parenthesis:\n\n`fix(scope): Prevent wrong calculation of storage`\n\nHere's a list of types that we use:\n\n| Type | Explanation |\n|---|---|\n| feat | A new feature |\n| fix | A bug fix |\n| docs | Documentation only changes |\n| style | Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc) |\n| refactor | A code change that neither fixes a bug nor adds a feature |\n| perf |  A code change that improves performance |\n| test | Adding missing tests or correcting existing tests |\n| build |Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm) |\n| ci | Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs) |\n| chore | Other changes that don't modify src or test files |\n| revert | Reverts a previous commit |\n\n### Further Information\n\n* [Contributor License Agreement](https://git.k8s.io/community/CLA.md) Kubernetes projects require that you sign a Contributor License Agreement (CLA) before we can accept your pull requests\n* [Kubernetes Contributor Guide](http://git.k8s.io/community/contributors/guide) - Main contributor documentation, or you can just jump directly to the [contributing section](http://git.k8s.io/community/contributors/guide#contributing)\n* [Contributor Cheat Sheet](https://git.k8s.io/community/contributors/guide/contributor-cheatsheet/README.md) - Common resources for existing developers\n\n## Mentorship\n\n* [Mentoring Initiatives](https://git.k8s.io/community/mentoring) - We have a diverse set of mentorship programs available that are always looking for volunteers!\n\n## Contact Information\n\n* [Join Slack](http://slack.k8s.io) to sign up and join the Kubernetes Slack. Please make sure to read our [Slack Guidelines](https://github.com/kubernetes/community/blob/master/communication/slack-guidelines.md) before participating.\n* The [kube-state-metrics slack channel](https://kubernetes.slack.com/messages/CJJ529RUY) provides an effective communication platform to reach out to members and other users of the project. It offers an alternative to submitting a GitHub issue for when you have questions and issues.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.455078125,
          "content": "ARG GOVERSION=1.23\nARG GOARCH\nFROM golang:${GOVERSION} AS builder\nARG GOARCH\nENV GOARCH=${GOARCH}\nWORKDIR /go/src/k8s.io/kube-state-metrics/\nCOPY . /go/src/k8s.io/kube-state-metrics/\n\nRUN make install-tools && make build-local\n\nFROM gcr.io/distroless/static-debian12:latest-${GOARCH}\nCOPY --from=builder /go/src/k8s.io/kube-state-metrics/kube-state-metrics /\n\nUSER nobody\n\nENTRYPOINT [\"/kube-state-metrics\", \"--port=8080\", \"--telemetry-port=8081\"]\n\nEXPOSE 8080 8081\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINER.md",
          "type": "blob",
          "size": 1.85546875,
          "content": "# Maintaining kube-state-metrics\n\nkube-state-metrics is welcoming contributions from the community. If you are interested in intensifying your contributions and becoming a maintainer, this doc describes the necessary steps.\n\nAs part of the Kubernetes project, we use the community membership process as described [here](https://github.com/kubernetes/community/blob/master/community-membership.md). We do not adhere strictly to the numbers of contributions and reviews. Still as becoming a maintainer is a trust-based process and we desire positive outcomes for the project, we look for a long-term interest and engagement.\n\n## Adding a new reviewer\n\n* Ensure the new reviewer is a member of the [kubernetes organization](https://github.com/kubernetes/org/blob/main/config/kubernetes/org.yaml).\n* Add the new reviewer to the [OWNERS](OWNERS) file to be able to review pull requests.\n* Add the new reviewer to the [kube-state-metrics-maintainers group](https://github.com/kubernetes/org/blob/main/config/kubernetes/sig-instrumentation/teams.yaml), to gain write access to the kube-state-metrics repository (e.g. for creating new releases).\n\n## Adding a new approver\n\n* Ensure the new approver is already a reviewer in the [OWNERS](OWNERS) file.\n* Add the new approver to the [OWNERS](OWNERS) file to be able to approve pull requests.\n* Add the new approver to the [SECURITY_CONTACTS](SECURITY_CONTACTS) file to be able to get notified on security related incidents.\n* Add the new approver to the [kube-state-metrics-admin group](https://github.com/kubernetes/org/blob/main/config/kubernetes/sig-instrumentation/teams.yaml), to get admin access to the kube-state-metrics repository.\n* Add the new approver to the k8s.io [OWNERS](https://github.com/kubernetes/k8s.io/blob/main/k8s.gcr.io/images/k8s-staging-kube-state-metrics/OWNERS) file to be able to approve image promotion from the staging registry.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 7.9990234375,
          "content": "FLAGS =\nTESTENVVAR =\nREGISTRY ?= gcr.io/k8s-staging-kube-state-metrics\nTAG_PREFIX = v\nVERSION = $(shell gomplate -d config=./data.yaml --in '{{ (datasource \"config\").version }}')\nTAG ?= $(TAG_PREFIX)$(VERSION)\nLATEST_RELEASE_BRANCH := release-$(shell echo $(VERSION) | grep -ohE \"[0-9]+.[0-9]+\")\nBRANCH = $(strip $(shell git rev-parse --abbrev-ref HEAD))\nDOCKER_CLI ?= docker\nPROMTOOL_CLI ?= promtool\nPKGS = $(shell go list ./... | grep -v /vendor/ | grep -v /tests/e2e)\nARCH ?= $(shell go env GOARCH)\nBUILD_DATE = $(shell date -u +'%Y-%m-%dT%H:%M:%SZ')\nGIT_COMMIT ?= $(shell git rev-parse --short HEAD)\nOS ?= $(shell uname -s | tr A-Z a-z)\nALL_ARCH = amd64 arm arm64 ppc64le s390x\nPKG = github.com/prometheus/common\nPROMETHEUS_VERSION = 2.55.1\nGO_VERSION = 1.23.3\nIMAGE = $(REGISTRY)/kube-state-metrics\nMULTI_ARCH_IMG = $(IMAGE)-$(ARCH)\nUSER ?= $(shell id -u -n)\nHOST ?= $(shell hostname)\nMARKDOWNLINT_CLI2_VERSION = 0.15.0\n\n\nexport DOCKER_CLI_EXPERIMENTAL=enabled\n\nvalidate-modules:\n\t@echo \"- Verifying that the dependencies have expected content...\"\n\tgo mod verify\n\t@echo \"- Checking for any unused/missing packages in go.mod...\"\n\tgo mod tidy\n\t@git diff --exit-code -- go.sum go.mod\n\nlicensecheck:\n\t@echo \">> checking license header\"\n\t@licRes=$$(for file in $$(find . -type f -iname '*.go' ! -path './vendor/*') ; do \\\n               awk 'NR<=5' $$file | grep -Eq \"(Copyright|generated|GENERATED)\" || echo $$file; \\\n       done); \\\n       if [ -n \"$${licRes}\" ]; then \\\n               echo \"license header checking failed:\"; echo \"$${licRes}\"; \\\n               exit 1; \\\n       fi\n\nlint: shellcheck licensecheck lint-markdown-format\n\tgolangci-lint run\n\nlint-fix: fix-markdown-format\n\tgolangci-lint run --fix -v\n\n\ndoccheck: generate validate-template\n\t@echo \"- Checking if the generated documentation is up to date...\"\n\t@git diff --exit-code\n\t@echo \"- Checking if the documentation is in sync with the code...\"\n\t@grep -rhoE '\\| kube_[^ |]+' docs/metrics/* --exclude=README.md | sed -E 's/\\| //g' | sort -u > documented_metrics\n\t@find internal/store -type f -not -name '*_test.go' -exec sed -nE 's/.*\"(kube_[^\"]+)\".*/\\1/p' {} \\; | sort -u > code_metrics\n\t@diff -u0 code_metrics documented_metrics || (echo \"ERROR: Metrics with - are present in code but missing in documentation, metrics with + are documented but not found in code.\"; exit 1)\n\t@echo OK\n\t@rm -f code_metrics documented_metrics\n\t@echo \"- Checking for orphan documentation files\"\n\t@cd docs; for doc in $$(find metrics/* -name '*.md' | sed 's/.*\\///'); do if [ \"$$doc\" != \"README.md\" ] && ! grep -q \"$$doc\" *.md; then echo \"ERROR: No link to documentation file $${doc} detected\"; exit 1; fi; done\n\t@echo OK\n\nbuild-local:\n\tGOOS=$(OS) GOARCH=$(ARCH) CGO_ENABLED=0 go build -ldflags \"-s -w -X ${PKG}/version.Version=${TAG} -X ${PKG}/version.Revision=${GIT_COMMIT} -X ${PKG}/version.Branch=${BRANCH} -X ${PKG}/version.BuildUser=${USER}@${HOST} -X ${PKG}/version.BuildDate=${BUILD_DATE}\" -o kube-state-metrics\n\nbuild: kube-state-metrics\n\nkube-state-metrics:\n\t# Need to update git setting to prevent failing builds due to https://github.com/docker-library/golang/issues/452\n\t${DOCKER_CLI} run --rm -v \"${PWD}:/go/src/k8s.io/kube-state-metrics\" -w /go/src/k8s.io/kube-state-metrics -e GOOS=$(OS) -e GOARCH=$(ARCH) golang:${GO_VERSION} git config --global --add safe.directory \"*\" && make build-local\n\ntest-unit:\n\tGOOS=$(shell uname -s | tr A-Z a-z) GOARCH=$(ARCH) $(TESTENVVAR) go test --race $(FLAGS) $(PKGS)\n\ntest-rules:\n\t${PROMTOOL_CLI} test rules tests/rules/alerts-test.yaml\n\nshellcheck:\n\t${DOCKER_CLI} run -v \"${PWD}:/mnt\" koalaman/shellcheck:stable $(shell find . -type f -name \"*.sh\" -not -path \"*vendor*\")\n\nlint-markdown-format:\n\t${DOCKER_CLI} run -v \"${PWD}:/workdir\" davidanson/markdownlint-cli2:v${MARKDOWNLINT_CLI2_VERSION} --config .markdownlint-cli2.jsonc\n\nfix-markdown-format:\n\t${DOCKER_CLI} run -v \"${PWD}:/workdir\" davidanson/markdownlint-cli2:v${MARKDOWNLINT_CLI2_VERSION} --fix --config .markdownlint-cli2.jsonc\n\ngenerate-template:\n\tgomplate -d config=./data.yaml --file README.md.tpl > README.md\n\nvalidate-template: generate-template\n\tgit diff --no-ext-diff --quiet --exit-code README.md\n\n# Runs benchmark tests on the current git ref and the last release and compares\n# the two.\ntest-benchmark-compare:\n\t@git fetch\n\t./tests/compare_benchmarks.sh main 2\n\t./tests/compare_benchmarks.sh ${LATEST_RELEASE_BRANCH} 2\n\nall: all-container\n\n# Container build for multiple architectures as defined in ALL_ARCH\n\ncontainer: container-$(ARCH)\n\ncontainer-%:\n\t${DOCKER_CLI} build --pull -t $(IMAGE)-$*:$(TAG) --build-arg GOVERSION=$(GO_VERSION) --build-arg GOARCH=$* .\n\nsub-container-%:\n\t$(MAKE) --no-print-directory ARCH=$* container\n\nall-container: $(addprefix sub-container-,$(ALL_ARCH))\n\n# Container push, push is the target to push for multiple architectures as defined in ALL_ARCH\n\npush: $(addprefix sub-push-,$(ALL_ARCH)) push-multi-arch;\n\nsub-push-%: container-% do-push-% ;\n\ndo-push-%:\n\t${DOCKER_CLI} push $(IMAGE)-$*:$(TAG)\n\npush-multi-arch:\n\t${DOCKER_CLI} manifest create --amend $(IMAGE):$(TAG) $(shell echo $(ALL_ARCH) | sed -e \"s~[^ ]*~$(IMAGE)\\-&:$(TAG)~g\")\n\t@for arch in $(ALL_ARCH); do ${DOCKER_CLI} manifest annotate --arch $${arch} $(IMAGE):$(TAG) $(IMAGE)-$${arch}:$(TAG); done\n\t${DOCKER_CLI} manifest push --purge $(IMAGE):$(TAG)\n\nclean:\n\trm -f kube-state-metrics\n\tgit clean -Xfd .\n\ne2e:\n\t./tests/e2e.sh\n\ngenerate: build-local generate-template\n\t@echo \">> generating docs\"\n\t@./scripts/generate-help-text.sh\n\tembedmd -w `find . -path ./vendor -prune -o -name \"*.md\" -print`\n\nvalidate-manifests: examples\n\t@git diff --exit-code\n\nmixin: examples/prometheus-alerting-rules/alerts.yaml\n\nexamples/prometheus-alerting-rules/alerts.yaml: jsonnet $(shell find jsonnet | grep \".libsonnet\") scripts/mixin.jsonnet scripts/vendor\n\tmkdir -p examples/prometheus-alerting-rules\n\tjsonnet -J scripts/vendor scripts/mixin.jsonnet | gojsontoyaml > examples/prometheus-alerting-rules/alerts.yaml\n\nexamples: examples/standard examples/autosharding examples/daemonsetsharding mixin\n\nexamples/standard: jsonnet $(shell find jsonnet | grep \".libsonnet\") scripts/standard.jsonnet scripts/vendor\n\tmkdir -p examples/standard\n\tjsonnet -J scripts/vendor -m examples/standard --ext-str version=\"$(VERSION)\" scripts/standard.jsonnet | xargs -I{} sh -c 'cat {} | gojsontoyaml > `echo {} | sed \"s/\\(.\\)\\([A-Z]\\)/\\1-\\2/g\" | tr \"[:upper:]\" \"[:lower:]\"`.yaml' -- {}\n\tfind examples -type f ! -name '*.yaml' -delete\n\nexamples/autosharding: jsonnet $(shell find jsonnet | grep \".libsonnet\") scripts/autosharding.jsonnet scripts/vendor\n\tmkdir -p examples/autosharding\n\tjsonnet -J scripts/vendor -m examples/autosharding --ext-str version=\"$(VERSION)\" scripts/autosharding.jsonnet | xargs -I{} sh -c 'cat {} | gojsontoyaml > `echo {} | sed \"s/\\(.\\)\\([A-Z]\\)/\\1-\\2/g\" | tr \"[:upper:]\" \"[:lower:]\"`.yaml' -- {}\n\tfind examples -type f ! -name '*.yaml' -delete\n\nexamples/daemonsetsharding: jsonnet $(shell find jsonnet | grep \".libsonnet\") scripts/daemonsetsharding.jsonnet scripts/vendor\n\tmkdir -p examples/daemonsetsharding\n\tjsonnet -J scripts/vendor -m examples/daemonsetsharding --ext-str version=\"$(VERSION)\" scripts/daemonsetsharding.jsonnet | xargs -I{} sh -c 'cat {} | gojsontoyaml > `echo {} | sed \"s/\\(.\\)\\([A-Z]\\)/\\1-\\2/g\" | tr \"[:upper:]\" \"[:lower:]\"`.yaml' -- {}\n\tfind examples -type f ! -name '*.yaml' -delete\n\nscripts/vendor: scripts/jsonnetfile.json scripts/jsonnetfile.lock.json\n\tcd scripts && jb install\n\ninstall-tools:\n\t@echo Installing tools from tools.go\n\tgrep '^\\s*_' tools/tools.go | awk '{print $$2}' | xargs -tI % go install -mod=readonly -modfile=tools/go.mod %\n\ninstall-promtool:\n\t@echo Installing promtool\n\t@wget -qO- \"https://github.com/prometheus/prometheus/releases/download/v${PROMETHEUS_VERSION}/prometheus-${PROMETHEUS_VERSION}.${OS}-${ARCH}.tar.gz\" |\\\n\ttar xvz --strip-components=1 prometheus-${PROMETHEUS_VERSION}.${OS}-${ARCH}/promtool\n\n.PHONY: all build build-local all-push all-container container container-* do-push-* sub-push-* push push-multi-arch test-unit test-rules test-benchmark-compare clean e2e validate-modules shellcheck licensecheck lint lint-fix generate generate-template validate-template embedmd\n"
        },
        {
          "name": "OWNERS",
          "type": "blob",
          "size": 0.2197265625,
          "content": "reviewers:\n  - CatherineF-dev\n  - dgrisonnet\n  - logicalhan\n  - mrueg\n  - rexagod\napprovers:\n  - dgrisonnet\n  - mrueg\n  - rexagod\nemeritus_approvers:\n  - LiliC\n  - andyxning\n  - brancz\n  - tariq1890\n  - zouyee\n  - fpetkovski\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 24.0693359375,
          "content": "# Overview\n\n[![Build Status](https://github.com/kubernetes/kube-state-metrics/workflows/continuous-integration/badge.svg)](https://github.com/kubernetes/kube-state-metrics/actions)\n[![Go Report Card](https://goreportcard.com/badge/github.com/kubernetes/kube-state-metrics)](https://goreportcard.com/report/github.com/kubernetes/kube-state-metrics)\n[![Go Reference](https://pkg.go.dev/badge/github.com/kubernetes/kube-state-metrics.svg)](https://pkg.go.dev/github.com/kubernetes/kube-state-metrics)\n[![govulncheck](https://github.com/kubernetes/kube-state-metrics/actions/workflows/govulncheck.yml/badge.svg)](https://github.com/kubernetes/kube-state-metrics/actions/workflows/govulncheck.yml)\n[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/8696/badge)](https://www.bestpractices.dev/projects/8696)\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/kubernetes/kube-state-metrics/badge)](https://api.securityscorecards.dev/projects/github.com/kubernetes/kube-state-metrics)\n\nkube-state-metrics (KSM) is a simple service that listens to the Kubernetes API\nserver and generates metrics about the state of the objects. (See examples in\nthe Metrics section below.) It is not focused on the health of the individual\nKubernetes components, but rather on the health of the various objects inside,\nsuch as deployments, nodes and pods.\n\nkube-state-metrics is about generating metrics from Kubernetes API objects\nwithout modification. This ensures that features provided by kube-state-metrics\nhave the same grade of stability as the Kubernetes API objects themselves. In\nturn, this means that kube-state-metrics in certain situations may not show the\nexact same values as kubectl, as kubectl applies certain heuristics to display\ncomprehensible messages. kube-state-metrics exposes raw data unmodified from the\nKubernetes API, this way users have all the data they require and perform\nheuristics as they see fit.\n\nThe metrics are exported on the HTTP endpoint `/metrics` on the listening port\n(default 8080). They are served as plaintext. They are designed to be consumed\neither by Prometheus itself or by a scraper that is compatible with scraping a\nPrometheus client endpoint. You can also open `/metrics` in a browser to see\nthe raw metrics. Note that the metrics exposed on the `/metrics` endpoint\nreflect the current state of the Kubernetes cluster. When Kubernetes objects\nare deleted they are no longer visible on the `/metrics` endpoint.\n\n> [!NOTE]\n> This README is generated from a [template](./README.md.tpl). Please make your changes there and run `make generate-template`.\n\n## Table of Contents\n\n* [Versioning](#versioning)\n  * [Kubernetes Version](#kubernetes-version)\n  * [Compatibility matrix](#compatibility-matrix)\n  * [Resource group version compatibility](#resource-group-version-compatibility)\n  * [Container Image](#container-image)\n* [Metrics Documentation](#metrics-documentation)\n  * [Conflict resolution in label names](#conflict-resolution-in-label-names)\n* [Kube-state-metrics self metrics](#kube-state-metrics-self-metrics)\n* [Resource recommendation](#resource-recommendation)\n* [Latency](#latency)\n* [A note on costing](#a-note-on-costing)\n* [kube-state-metrics vs. metrics-server](#kube-state-metrics-vs-metrics-server)\n* [Scaling kube-state-metrics](#scaling-kube-state-metrics)\n  * [Resource recommendation](#resource-recommendation)\n  * [Horizontal sharding](#horizontal-sharding)\n    * [Automated sharding](#automated-sharding)\n  * [Daemonset sharding for pod metrics](#daemonset-sharding-for-pod-metrics)\n* [Setup](#setup)\n  * [Building the Docker container](#building-the-docker-container)\n* [Usage](#usage)\n  * [Kubernetes Deployment](#kubernetes-deployment)\n  * [Limited privileges environment](#limited-privileges-environment)\n  * [Helm Chart](#helm-chart)\n  * [Development](#development)\n  * [Developer Contributions](#developer-contributions)\n  * [Community](#community)\n\n### Versioning\n\n#### Kubernetes Version\n\nkube-state-metrics uses [`client-go`](https://github.com/kubernetes/client-go) to talk with\nKubernetes clusters. The supported Kubernetes cluster version is determined by `client-go`.\nThe compatibility matrix for client-go and Kubernetes cluster can be found\n[here](https://github.com/kubernetes/client-go#compatibility-matrix).\nAll additional compatibility is only best effort, or happens to still/already be supported.\n\n#### Compatibility matrix\n\nAt most, 5 kube-state-metrics and 5 [kubernetes releases](https://github.com/kubernetes/kubernetes/releases) will be recorded below.\nGenerally, it is recommended to use the latest release of kube-state-metrics. If you run a very recent version of Kubernetes, you might want to use an unreleased version to have the full range of supported resources. If you run an older version of Kubernetes, you might need to run an older version in order to have full support for all resources. Be aware, that the maintainers will only support the latest release. Older versions might be supported by interested users of the community.\n\n| kube-state-metrics | Kubernetes client-go Version |\n|--------------------|:----------------------------:|\n| **v2.10.1**        | v1.27                        |\n| **v2.11.0**        | v1.28                        |\n| **v2.12.0**        | v1.29                        |\n| **v2.13.0**        | v1.30                        |\n| **v2.14.0**        | v1.31                        |\n| **main**           | v1.31                        |\n\n#### Resource group version compatibility\n\nResources in Kubernetes can evolve, i.e., the group version for a resource may change from alpha to beta and finally GA\nin different Kubernetes versions. For now, kube-state-metrics will only use the oldest API available in the latest\nrelease.\n\n#### Container Image\n\nThe latest container image can be found at:\n\n* `registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.14.0` (arch: `amd64`, `arm`, `arm64`, `ppc64le` and `s390x`)\n* View all multi-architecture images at [here](https://explore.ggcr.dev/?image=registry.k8s.io%2Fkube-state-metrics%2Fkube-state-metrics:v2.14.0)\n\n### Metrics Documentation\n\nAny resources and metrics based on alpha Kubernetes APIs are excluded from any stability guarantee,\nwhich may be changed at any given release.\n\nSee the [`docs`](docs) directory for more information on the exposed metrics.\n\n#### Conflict resolution in label names\n\nThe `*_labels` family of metrics exposes Kubernetes labels as Prometheus labels.\nAs [Kubernetes](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set)\nis more liberal than\n[Prometheus](https://prometheus.io/docs/concepts/data_model/#metric-names-and-labels)\nin terms of allowed characters in label names,\nwe automatically convert unsupported characters to underscores.\nFor example, `app.kubernetes.io/name` becomes `label_app_kubernetes_io_name`.\n\nThis conversion can create conflicts when multiple Kubernetes labels like\n`foo-bar` and `foo_bar` would be converted to the same Prometheus label `label_foo_bar`.\n\nKube-state-metrics automatically adds a suffix `_conflictN` to resolve this conflict,\nso it converts the above labels to\n`label_foo_bar_conflict1` and `label_foo_bar_conflict2`.\n\nIf you'd like to have more control over how this conflict is resolved,\nyou might want to consider addressing this issue on a different level of the stack,\ne.g. by standardizing Kubernetes labels using an\n[Admission Webhook](https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/)\nthat ensures that there are no possible conflicts.\n\n### Kube-state-metrics self metrics\n\nkube-state-metrics exposes its own general process metrics under `--telemetry-host` and `--telemetry-port` (default 8081).\n\nkube-state-metrics also exposes list and watch success and error metrics. These can be used to calculate the error rate of list or watch resources.\nIf you encounter those errors in the metrics, it is most likely a configuration or permission issue, and the next thing to investigate would be looking\nat the logs of kube-state-metrics.\n\nExample of the above mentioned metrics:\n\n```\nkube_state_metrics_list_total{resource=\"*v1.Node\",result=\"success\"} 1\nkube_state_metrics_list_total{resource=\"*v1.Node\",result=\"error\"} 52\nkube_state_metrics_watch_total{resource=\"*v1beta1.Ingress\",result=\"success\"} 1\n```\n\nkube-state-metrics also exposes some http request metrics, examples of those are:\n\n```\nhttp_request_duration_seconds_bucket{handler=\"metrics\",method=\"get\",le=\"2.5\"} 30\nhttp_request_duration_seconds_bucket{handler=\"metrics\",method=\"get\",le=\"5\"} 30\nhttp_request_duration_seconds_bucket{handler=\"metrics\",method=\"get\",le=\"10\"} 30\nhttp_request_duration_seconds_bucket{handler=\"metrics\",method=\"get\",le=\"+Inf\"} 30\nhttp_request_duration_seconds_sum{handler=\"metrics\",method=\"get\"} 0.021113919999999998\nhttp_request_duration_seconds_count{handler=\"metrics\",method=\"get\"} 30\n```\n\nkube-state-metrics also exposes build and configuration metrics:\n\n```\nkube_state_metrics_build_info{branch=\"main\",goversion=\"go1.15.3\",revision=\"6c9d775d\",version=\"v2.0.0-beta\"} 1\nkube_state_metrics_shard_ordinal{shard_ordinal=\"0\"} 0\nkube_state_metrics_total_shards 1\n```\n\n`kube_state_metrics_build_info` is used to expose version and other build information. For more usage about the info pattern,\nplease check the blog post [here](https://www.robustperception.io/exposing-the-software-version-to-prometheus).\nSharding metrics expose `--shard` and `--total-shards` flags and can be used to validate\nrun-time configuration, see [`/examples/prometheus-alerting-rules`](./examples/prometheus-alerting-rules).\n\nkube-state-metrics also exposes metrics about it config file and the Custom Resource State config file:\n\n```\nkube_state_metrics_config_hash{filename=\"crs.yml\",type=\"customresourceconfig\"} 2.38272279311849e+14\nkube_state_metrics_config_hash{filename=\"config.yml\",type=\"config\"} 2.65285922340846e+14\nkube_state_metrics_last_config_reload_success_timestamp_seconds{filename=\"crs.yml\",type=\"customresourceconfig\"} 1.6704882592037103e+09\nkube_state_metrics_last_config_reload_success_timestamp_seconds{filename=\"config.yml\",type=\"config\"} 1.6704882592035313e+09\nkube_state_metrics_last_config_reload_successful{filename=\"crs.yml\",type=\"customresourceconfig\"} 1\nkube_state_metrics_last_config_reload_successful{filename=\"config.yml\",type=\"config\"} 1\n```\n\n### Scaling kube-state-metrics\n\n#### Resource recommendation\n\nResource usage for kube-state-metrics changes with the Kubernetes objects (Pods/Nodes/Deployments/Secrets etc.) size of the cluster.\nTo some extent, the Kubernetes objects in a cluster are in direct proportion to the node number of the cluster.\n\nAs a general rule, you should allocate:\n\n* 250MiB memory\n* 0.1 cores\n\nNote that if CPU limits are set too low, kube-state-metrics' internal queues will not be able to be worked off quickly enough, resulting in increased memory consumption as the queue length grows. If you experience problems resulting from high memory allocation or CPU throttling, try increasing the CPU limits.\n\n### Latency\n\nIn a 100 node cluster scaling test the latency numbers were as follows:\n\n```\n\"Perc50\": 259615384 ns,\n\"Perc90\": 475000000 ns,\n\"Perc99\": 906666666 ns.\n```\n\n### A note on costing\n\nBy default, kube-state-metrics exposes several metrics for events across your cluster. If you have a large number of frequently-updating resources on your cluster, you may find that a lot of data is ingested into these metrics. This can incur high costs on some cloud providers. Please take a moment to [configure what metrics you'd like to expose](docs/developer/cli-arguments.md), as well as consult the documentation for your Kubernetes environment in order to avoid unexpectedly high costs.\n\n### kube-state-metrics vs. metrics-server\n\nThe [metrics-server](https://github.com/kubernetes-incubator/metrics-server)\nis a project that has been inspired by\n[Heapster](https://github.com/kubernetes-retired/heapster) and is implemented\nto serve the goals of core metrics pipelines in [Kubernetes monitoring\narchitecture](https://github.com/kubernetes/design-proposals-archive/blob/main/instrumentation/monitoring_architecture.md).\nIt is a cluster level component which periodically scrapes metrics from all\nKubernetes nodes served by Kubelet through Metrics API. The metrics are\naggregated, stored in memory and served in [Metrics API\nformat](https://git.k8s.io/metrics/pkg/apis/metrics/v1alpha1/types.go). The\nmetrics-server stores the latest values only and is not responsible for\nforwarding metrics to third-party destinations.\n\nkube-state-metrics is focused on generating completely new metrics from\nKubernetes' object state (e.g. metrics based on deployments, replica sets,\netc.). It holds an entire snapshot of Kubernetes state in memory and\ncontinuously generates new metrics based off of it. And just like the\nmetrics-server it too is not responsible for exporting its metrics anywhere.\n\nHaving kube-state-metrics as a separate project also enables access to these\nmetrics from monitoring systems such as Prometheus.\n\n### Horizontal sharding\n\nIn order to shard kube-state-metrics horizontally, some automated sharding capabilities have been implemented. It is configured with the following flags:\n\n* `--shard` (zero indexed)\n* `--total-shards`\n\nSharding is done by taking an md5 sum of the Kubernetes Object's UID and performing a modulo operation on it with the total number of shards. Each shard decides whether the object is handled by the respective instance of kube-state-metrics or not. Note that this means all instances of kube-state-metrics, even if sharded, will have the network traffic and the resource consumption for unmarshaling objects for all objects, not just the ones they are responsible for. To optimize this further, the Kubernetes API would need to support sharded list/watch capabilities. In the optimal case, memory consumption for each shard will be 1/n compared to an unsharded setup. Typically, kube-state-metrics needs to be memory and latency optimized in order for it to return its metrics rather quickly to Prometheus. One way to reduce the latency between kube-state-metrics and the kube-apiserver is to run KSM with the `--use-apiserver-cache` flag. In addition to reducing the latency, this option will also lead to a reduction in the load on etcd.\n\nSharding should be used carefully and additional monitoring should be set up in order to ensure that sharding is set up and functioning as expected (eg. instances for each shard out of the total shards are configured).\n\n#### Automated sharding\n\nAutomatic sharding allows each shard to discover its nominal position when deployed in a StatefulSet which is useful for automatically configuring sharding. This is an experimental feature and may be broken or removed without notice.\n\nTo enable automated sharding, kube-state-metrics must be run by a `StatefulSet` and the pod name and namespace must be handed to the kube-state-metrics process via the `--pod` and `--pod-namespace` flags. Example manifests demonstrating the autosharding functionality can be found in [`/examples/autosharding`](./examples/autosharding).\n\nThis way of deploying shards is useful when you want to manage KSM shards through a single Kubernetes resource (a single `StatefulSet` in this case) instead of having one `Deployment` per shard. The advantage can be especially significant when deploying a high number of shards.\n\nThe downside of using an auto-sharded setup comes from the rollout strategy supported by `StatefulSet`s. When managed by a `StatefulSet`, pods are replaced one at a time with each pod first getting terminated and then recreated. Besides such rollouts being slower, they will also lead to short downtime for each shard. If a Prometheus scrape happens during a rollout, it can miss some of the metrics exported by kube-state-metrics.\n\n### Daemonset sharding for pod metrics\n\nFor pod metrics, they can be sharded per node with the following flag:\n\n* `--node=$(NODE_NAME)`\n\nEach kube-state-metrics pod uses FieldSelector (spec.nodeName) to watch/list pod metrics only on the same node.\n\nA daemonset kube-state-metrics example:\n\n```\napiVersion: apps/v1\nkind: DaemonSet\nspec:\n  template:\n    spec:\n      containers:\n      - image: registry.k8s.io/kube-state-metrics/kube-state-metrics:IMAGE_TAG\n        name: kube-state-metrics\n        args:\n        - --resource=pods\n        - --node=$(NODE_NAME)\n        env:\n        - name: NODE_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n```\n\nTo track metrics for unassigned pods, you need to add an additional deployment and set `--track-unscheduled-pods`, as shown in the following example:\n\n```\napiVersion: apps/v1\nkind: Deployment\nspec:\n  template:\n    spec:\n      containers:\n      - image: registry.k8s.io/kube-state-metrics/kube-state-metrics:IMAGE_TAG\n        name: kube-state-metrics\n        args:\n        - --resources=pods\n        - --track-unscheduled-pods\n```\n\nOther metrics can be sharded via [Horizontal sharding](#horizontal-sharding).\n\n### Setup\n\nInstall this project to your `$GOPATH` using `go get`:\n\n```\ngo get k8s.io/kube-state-metrics\n```\n\n#### Building the Docker container\n\nSimply run the following command in this root folder, which will create a\nself-contained, statically-linked binary and build a Docker image:\n\n```\nmake container\n```\n\n### Usage\n\nSimply build and run kube-state-metrics inside a Kubernetes pod which has a\nservice account token that has read-only access to the Kubernetes cluster.\n\n#### For users of prometheus-operator/kube-prometheus stack\n\nThe ([`kube-prometheus`](https://github.com/prometheus-operator/kube-prometheus/)) stack installs kube-state-metrics as one of its [components](https://github.com/prometheus-operator/kube-prometheus#kube-prometheus); you do not need to install kube-state-metrics if you're using the kube-prometheus stack.\n\nIf you want to revise the default configuration for kube-prometheus, for example to enable non-default metrics, have a look at [Customizing Kube-Prometheus](https://github.com/prometheus-operator/kube-prometheus/blob/main/docs/customizing.md).\n\n#### Kubernetes Deployment\n\nTo deploy this project, you can simply run `kubectl apply -f examples/standard` and a Kubernetes service and deployment will be created. (Note: Adjust the apiVersion of some resource if your kubernetes cluster's version is not 1.8+, check the yaml file for more information).\n\nTo have Prometheus discover kube-state-metrics instances it is advised to create a specific Prometheus scrape config for kube-state-metrics that picks up both metrics endpoints. Annotation based discovery is discouraged as only one of the endpoints would be able to be selected, plus kube-state-metrics in most cases has special authentication and authorization requirements as it essentially grants read access through the metrics endpoint to most information available to it.\n\n**Note:** Google Kubernetes Engine (GKE) Users - GKE has strict role permissions that will prevent the kube-state-metrics roles and role bindings from being created. To work around this, you can give your GCP identity the cluster-admin role by running the following one-liner:\n\n```\nkubectl create clusterrolebinding cluster-admin-binding --clusterrole=cluster-admin --user=$(gcloud info --format='value(config.account)')\n```\n\nNote that your GCP identity is case sensitive but `gcloud info` as of Google Cloud SDK 221.0.0 is not. This means that if your IAM member contains capital letters, the above one-liner may not work for you. If you have 403 forbidden responses after running the above command and `kubectl apply -f examples/standard`, check the IAM member associated with your account at <https://console.cloud.google.com/iam-admin/iam?project=PROJECT_ID>. If it contains capital letters, you may need to set the --user flag in the command above to the case-sensitive role listed at <https://console.cloud.google.com/iam-admin/iam?project=PROJECT_ID>.\n\nAfter running the above, if you see `Clusterrolebinding \"cluster-admin-binding\" created`, then you are able to continue with the setup of this service.\n\n#### Healthcheck Endpoints\n\nThe following healthcheck endpoints are available (`self` refers to the telemetry port, while `main` refers to the exposition port):\n\n* `/healthz` (exposed on `main`): Returns a 200 status code if the application is running. We recommend to use this for the startup probe.\n* `/livez` (exposed on `main`): Returns a 200 status code if the application is not affected by an outage of the Kubernetes API Server. We recommend to using this for the liveness probe.\n* `/readyz` (exposed on `self`): Returns a 200 status code if the application is ready to accept requests and expose metrics. We recommend using this for the readiness probe.\n\nNote that it is discouraged to use the telemetry metrics endpoint for any probe when proxying the exposition data.\n\n#### Limited privileges environment\n\nIf you want to run kube-state-metrics in an environment where you don't have cluster-reader role, you can:\n\n* create a serviceaccount\n\n```yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: kube-state-metrics\n  namespace: your-namespace-where-kube-state-metrics-will-deployed\n```\n\n* give it `view` privileges on specific namespaces (using roleBinding) (*note: you can add this roleBinding to all the NS you want your serviceaccount to access*)\n\n```yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: kube-state-metrics\n  namespace: project1\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: view\nsubjects:\n  - kind: ServiceAccount\n    name: kube-state-metrics\n    namespace: your-namespace-where-kube-state-metrics-will-deployed\n```\n\n* then specify a set of namespaces (using the `--namespaces` option) and a set of kubernetes objects (using the `--resources`) that your serviceaccount has access to in the `kube-state-metrics` deployment configuration\n\n```yaml\nspec:\n  template:\n    spec:\n      containers:\n      - name: kube-state-metrics\n        args:\n          - '--resources=pods'\n          - '--namespaces=project1'\n```\n\nFor the full list of arguments available, see the documentation in [docs/developer/cli-arguments.md](./docs/developer/cli-arguments.md)\n\n#### Helm Chart\n\nStarting from the kube-state-metrics chart `v2.13.3` (kube-state-metrics image `v1.9.8`), the official [Helm chart](https://artifacthub.io/packages/helm/prometheus-community/kube-state-metrics/) is maintained in [prometheus-community/helm-charts](https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-state-metrics). Starting from kube-state-metrics chart `v3.0.0` only kube-state-metrics images of `v2.0.0 +` are supported.\n\n#### Development\n\nWhen developing, test a metric dump against your local Kubernetes cluster by running:\n\n> Users can override the apiserver address in KUBE-CONFIG file with `--apiserver` command line.\n\n```\ngo install\nkube-state-metrics --port=8080 --telemetry-port=8081 --kubeconfig=<KUBE-CONFIG> --apiserver=<APISERVER>\n```\n\nThen curl the metrics endpoint\n\n```\ncurl localhost:8080/metrics\n```\n\nTo run the e2e tests locally see the documentation in [tests/README.md](./tests/README.md).\n\n#### Developer Contributions\n\nWhen developing, there are certain code patterns to follow to better your contributing experience and likelihood of e2e and other ci tests to pass. To learn more about them, see the documentation in [docs/developer/guide.md](./docs/developer/guide.md).\n\n#### Community\n\nThis project is sponsored by [SIG Instrumentation](https://github.com/kubernetes/community/tree/master/sig-instrumentation).\n\nThere is also a channel for [#kube-state-metrics](https://kubernetes.slack.com/archives/CJJ529RUY) on Kubernetes' Slack.\n\nYou can also join the SIG Instrumentation [mailing list](https://groups.google.com/forum/#!forum/kubernetes-sig-instrumentation).\nThis will typically add invites for the following meetings to your calendar, in which topics around kube-state-metrics can be discussed.\n\n* Regular SIG Meeting: [Thursdays at 9:30 PT (Pacific Time)](https://zoom.us/j/5342565819?pwd=RlVsK21NVnR1dmE3SWZQSXhveHZPdz09) (biweekly). [Convert to your timezone](http://www.thetimezoneconverter.com/?t=9:30&tz=PT%20%28Pacific%20Time%29).\n* Regular Triage Meeting: [Thursdays at 9:30 PT (Pacific Time)](https://zoom.us/j/5342565819?pwd=RlVsK21NVnR1dmE3SWZQSXhveHZPdz09) (biweekly - alternating with regular meeting). [Convert to your timezone](http://www.thetimezoneconverter.com/?t=9:30&tz=PT%20%28Pacific%20Time%29).\n"
        },
        {
          "name": "README.md.tpl",
          "type": "blob",
          "size": 24.20703125,
          "content": "# Overview\n\n[![Build Status](https://github.com/kubernetes/kube-state-metrics/workflows/continuous-integration/badge.svg)](https://github.com/kubernetes/kube-state-metrics/actions)\n[![Go Report Card](https://goreportcard.com/badge/github.com/kubernetes/kube-state-metrics)](https://goreportcard.com/report/github.com/kubernetes/kube-state-metrics)\n[![Go Reference](https://pkg.go.dev/badge/github.com/kubernetes/kube-state-metrics.svg)](https://pkg.go.dev/github.com/kubernetes/kube-state-metrics)\n[![govulncheck](https://github.com/kubernetes/kube-state-metrics/actions/workflows/govulncheck.yml/badge.svg)](https://github.com/kubernetes/kube-state-metrics/actions/workflows/govulncheck.yml)\n[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/8696/badge)](https://www.bestpractices.dev/projects/8696)\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/kubernetes/kube-state-metrics/badge)](https://api.securityscorecards.dev/projects/github.com/kubernetes/kube-state-metrics)\n\nkube-state-metrics (KSM) is a simple service that listens to the Kubernetes API\nserver and generates metrics about the state of the objects. (See examples in\nthe Metrics section below.) It is not focused on the health of the individual\nKubernetes components, but rather on the health of the various objects inside,\nsuch as deployments, nodes and pods.\n\nkube-state-metrics is about generating metrics from Kubernetes API objects\nwithout modification. This ensures that features provided by kube-state-metrics\nhave the same grade of stability as the Kubernetes API objects themselves. In\nturn, this means that kube-state-metrics in certain situations may not show the\nexact same values as kubectl, as kubectl applies certain heuristics to display\ncomprehensible messages. kube-state-metrics exposes raw data unmodified from the\nKubernetes API, this way users have all the data they require and perform\nheuristics as they see fit.\n\nThe metrics are exported on the HTTP endpoint `/metrics` on the listening port\n(default 8080). They are served as plaintext. They are designed to be consumed\neither by Prometheus itself or by a scraper that is compatible with scraping a\nPrometheus client endpoint. You can also open `/metrics` in a browser to see\nthe raw metrics. Note that the metrics exposed on the `/metrics` endpoint\nreflect the current state of the Kubernetes cluster. When Kubernetes objects\nare deleted they are no longer visible on the `/metrics` endpoint.\n\n> [!NOTE]\n> This README is generated from a [template](./README.md.tpl). Please make your changes there and run `make generate-template`.\n\n## Table of Contents\n\n* [Versioning](#versioning)\n  * [Kubernetes Version](#kubernetes-version)\n  * [Compatibility matrix](#compatibility-matrix)\n  * [Resource group version compatibility](#resource-group-version-compatibility)\n  * [Container Image](#container-image)\n* [Metrics Documentation](#metrics-documentation)\n  * [Conflict resolution in label names](#conflict-resolution-in-label-names)\n* [Kube-state-metrics self metrics](#kube-state-metrics-self-metrics)\n* [Resource recommendation](#resource-recommendation)\n* [Latency](#latency)\n* [A note on costing](#a-note-on-costing)\n* [kube-state-metrics vs. metrics-server](#kube-state-metrics-vs-metrics-server)\n* [Scaling kube-state-metrics](#scaling-kube-state-metrics)\n  * [Resource recommendation](#resource-recommendation)\n  * [Horizontal sharding](#horizontal-sharding)\n    * [Automated sharding](#automated-sharding)\n  * [Daemonset sharding for pod metrics](#daemonset-sharding-for-pod-metrics)\n* [Setup](#setup)\n  * [Building the Docker container](#building-the-docker-container)\n* [Usage](#usage)\n  * [Kubernetes Deployment](#kubernetes-deployment)\n  * [Limited privileges environment](#limited-privileges-environment)\n  * [Helm Chart](#helm-chart)\n  * [Development](#development)\n  * [Developer Contributions](#developer-contributions)\n  * [Community](#community)\n\n### Versioning\n\n#### Kubernetes Version\n\nkube-state-metrics uses [`client-go`](https://github.com/kubernetes/client-go) to talk with\nKubernetes clusters. The supported Kubernetes cluster version is determined by `client-go`.\nThe compatibility matrix for client-go and Kubernetes cluster can be found\n[here](https://github.com/kubernetes/client-go#compatibility-matrix).\nAll additional compatibility is only best effort, or happens to still/already be supported.\n\n#### Compatibility matrix\n\nAt most, 5 kube-state-metrics and 5 [kubernetes releases](https://github.com/kubernetes/kubernetes/releases) will be recorded below.\nGenerally, it is recommended to use the latest release of kube-state-metrics. If you run a very recent version of Kubernetes, you might want to use an unreleased version to have the full range of supported resources. If you run an older version of Kubernetes, you might need to run an older version in order to have full support for all resources. Be aware, that the maintainers will only support the latest release. Older versions might be supported by interested users of the community.\n\n| kube-state-metrics | Kubernetes client-go Version |\n|--------------------|:----------------------------:|\n{{ define \"compat-matrix\" -}}\n{{- range . -}}\n| **{{ .version }}**{{ strings.Repeat (conv.ToInt (math.Sub 15 (len .version))) \" \" }}| v{{ .kubernetes }}                        |\n{{ end -}}\n{{- end -}}\n{{ template \"compat-matrix\" (datasource \"config\").compat }}\n#### Resource group version compatibility\n\nResources in Kubernetes can evolve, i.e., the group version for a resource may change from alpha to beta and finally GA\nin different Kubernetes versions. For now, kube-state-metrics will only use the oldest API available in the latest\nrelease.\n\n#### Container Image\n\nThe latest container image can be found at:\n{{ define \"get-latest-release\" -}}\n{{ (index . (math.Sub (len .) 2)).version -}}\n{{ end }}\n* `registry.k8s.io/kube-state-metrics/kube-state-metrics:{{ template \"get-latest-release\" (datasource \"config\").compat }}` (arch: `amd64`, `arm`, `arm64`, `ppc64le` and `s390x`)\n* View all multi-architecture images at [here](https://explore.ggcr.dev/?image=registry.k8s.io%2Fkube-state-metrics%2Fkube-state-metrics:{{ template \"get-latest-release\" (datasource \"config\").compat -}})\n\n### Metrics Documentation\n\nAny resources and metrics based on alpha Kubernetes APIs are excluded from any stability guarantee,\nwhich may be changed at any given release.\n\nSee the [`docs`](docs) directory for more information on the exposed metrics.\n\n#### Conflict resolution in label names\n\nThe `*_labels` family of metrics exposes Kubernetes labels as Prometheus labels.\nAs [Kubernetes](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set)\nis more liberal than\n[Prometheus](https://prometheus.io/docs/concepts/data_model/#metric-names-and-labels)\nin terms of allowed characters in label names,\nwe automatically convert unsupported characters to underscores.\nFor example, `app.kubernetes.io/name` becomes `label_app_kubernetes_io_name`.\n\nThis conversion can create conflicts when multiple Kubernetes labels like\n`foo-bar` and `foo_bar` would be converted to the same Prometheus label `label_foo_bar`.\n\nKube-state-metrics automatically adds a suffix `_conflictN` to resolve this conflict,\nso it converts the above labels to\n`label_foo_bar_conflict1` and `label_foo_bar_conflict2`.\n\nIf you'd like to have more control over how this conflict is resolved,\nyou might want to consider addressing this issue on a different level of the stack,\ne.g. by standardizing Kubernetes labels using an\n[Admission Webhook](https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/)\nthat ensures that there are no possible conflicts.\n\n### Kube-state-metrics self metrics\n\nkube-state-metrics exposes its own general process metrics under `--telemetry-host` and `--telemetry-port` (default 8081).\n\nkube-state-metrics also exposes list and watch success and error metrics. These can be used to calculate the error rate of list or watch resources.\nIf you encounter those errors in the metrics, it is most likely a configuration or permission issue, and the next thing to investigate would be looking\nat the logs of kube-state-metrics.\n\nExample of the above mentioned metrics:\n\n```\nkube_state_metrics_list_total{resource=\"*v1.Node\",result=\"success\"} 1\nkube_state_metrics_list_total{resource=\"*v1.Node\",result=\"error\"} 52\nkube_state_metrics_watch_total{resource=\"*v1beta1.Ingress\",result=\"success\"} 1\n```\n\nkube-state-metrics also exposes some http request metrics, examples of those are:\n\n```\nhttp_request_duration_seconds_bucket{handler=\"metrics\",method=\"get\",le=\"2.5\"} 30\nhttp_request_duration_seconds_bucket{handler=\"metrics\",method=\"get\",le=\"5\"} 30\nhttp_request_duration_seconds_bucket{handler=\"metrics\",method=\"get\",le=\"10\"} 30\nhttp_request_duration_seconds_bucket{handler=\"metrics\",method=\"get\",le=\"+Inf\"} 30\nhttp_request_duration_seconds_sum{handler=\"metrics\",method=\"get\"} 0.021113919999999998\nhttp_request_duration_seconds_count{handler=\"metrics\",method=\"get\"} 30\n```\n\nkube-state-metrics also exposes build and configuration metrics:\n\n```\nkube_state_metrics_build_info{branch=\"main\",goversion=\"go1.15.3\",revision=\"6c9d775d\",version=\"v2.0.0-beta\"} 1\nkube_state_metrics_shard_ordinal{shard_ordinal=\"0\"} 0\nkube_state_metrics_total_shards 1\n```\n\n`kube_state_metrics_build_info` is used to expose version and other build information. For more usage about the info pattern,\nplease check the blog post [here](https://www.robustperception.io/exposing-the-software-version-to-prometheus).\nSharding metrics expose `--shard` and `--total-shards` flags and can be used to validate\nrun-time configuration, see [`/examples/prometheus-alerting-rules`](./examples/prometheus-alerting-rules).\n\nkube-state-metrics also exposes metrics about it config file and the Custom Resource State config file:\n\n```\nkube_state_metrics_config_hash{filename=\"crs.yml\",type=\"customresourceconfig\"} 2.38272279311849e+14\nkube_state_metrics_config_hash{filename=\"config.yml\",type=\"config\"} 2.65285922340846e+14\nkube_state_metrics_last_config_reload_success_timestamp_seconds{filename=\"crs.yml\",type=\"customresourceconfig\"} 1.6704882592037103e+09\nkube_state_metrics_last_config_reload_success_timestamp_seconds{filename=\"config.yml\",type=\"config\"} 1.6704882592035313e+09\nkube_state_metrics_last_config_reload_successful{filename=\"crs.yml\",type=\"customresourceconfig\"} 1\nkube_state_metrics_last_config_reload_successful{filename=\"config.yml\",type=\"config\"} 1\n```\n\n### Scaling kube-state-metrics\n\n#### Resource recommendation\n\nResource usage for kube-state-metrics changes with the Kubernetes objects (Pods/Nodes/Deployments/Secrets etc.) size of the cluster.\nTo some extent, the Kubernetes objects in a cluster are in direct proportion to the node number of the cluster.\n\nAs a general rule, you should allocate:\n\n* 250MiB memory\n* 0.1 cores\n\nNote that if CPU limits are set too low, kube-state-metrics' internal queues will not be able to be worked off quickly enough, resulting in increased memory consumption as the queue length grows. If you experience problems resulting from high memory allocation or CPU throttling, try increasing the CPU limits.\n\n### Latency\n\nIn a 100 node cluster scaling test the latency numbers were as follows:\n\n```\n\"Perc50\": 259615384 ns,\n\"Perc90\": 475000000 ns,\n\"Perc99\": 906666666 ns.\n```\n\n### A note on costing\n\nBy default, kube-state-metrics exposes several metrics for events across your cluster. If you have a large number of frequently-updating resources on your cluster, you may find that a lot of data is ingested into these metrics. This can incur high costs on some cloud providers. Please take a moment to [configure what metrics you'd like to expose](docs/developer/cli-arguments.md), as well as consult the documentation for your Kubernetes environment in order to avoid unexpectedly high costs.\n\n### kube-state-metrics vs. metrics-server\n\nThe [metrics-server](https://github.com/kubernetes-incubator/metrics-server)\nis a project that has been inspired by\n[Heapster](https://github.com/kubernetes-retired/heapster) and is implemented\nto serve the goals of core metrics pipelines in [Kubernetes monitoring\narchitecture](https://github.com/kubernetes/design-proposals-archive/blob/main/instrumentation/monitoring_architecture.md).\nIt is a cluster level component which periodically scrapes metrics from all\nKubernetes nodes served by Kubelet through Metrics API. The metrics are\naggregated, stored in memory and served in [Metrics API\nformat](https://git.k8s.io/metrics/pkg/apis/metrics/v1alpha1/types.go). The\nmetrics-server stores the latest values only and is not responsible for\nforwarding metrics to third-party destinations.\n\nkube-state-metrics is focused on generating completely new metrics from\nKubernetes' object state (e.g. metrics based on deployments, replica sets,\netc.). It holds an entire snapshot of Kubernetes state in memory and\ncontinuously generates new metrics based off of it. And just like the\nmetrics-server it too is not responsible for exporting its metrics anywhere.\n\nHaving kube-state-metrics as a separate project also enables access to these\nmetrics from monitoring systems such as Prometheus.\n\n### Horizontal sharding\n\nIn order to shard kube-state-metrics horizontally, some automated sharding capabilities have been implemented. It is configured with the following flags:\n\n* `--shard` (zero indexed)\n* `--total-shards`\n\nSharding is done by taking an md5 sum of the Kubernetes Object's UID and performing a modulo operation on it with the total number of shards. Each shard decides whether the object is handled by the respective instance of kube-state-metrics or not. Note that this means all instances of kube-state-metrics, even if sharded, will have the network traffic and the resource consumption for unmarshaling objects for all objects, not just the ones they are responsible for. To optimize this further, the Kubernetes API would need to support sharded list/watch capabilities. In the optimal case, memory consumption for each shard will be 1/n compared to an unsharded setup. Typically, kube-state-metrics needs to be memory and latency optimized in order for it to return its metrics rather quickly to Prometheus. One way to reduce the latency between kube-state-metrics and the kube-apiserver is to run KSM with the `--use-apiserver-cache` flag. In addition to reducing the latency, this option will also lead to a reduction in the load on etcd.\n\nSharding should be used carefully and additional monitoring should be set up in order to ensure that sharding is set up and functioning as expected (eg. instances for each shard out of the total shards are configured).\n\n#### Automated sharding\n\nAutomatic sharding allows each shard to discover its nominal position when deployed in a StatefulSet which is useful for automatically configuring sharding. This is an experimental feature and may be broken or removed without notice.\n\nTo enable automated sharding, kube-state-metrics must be run by a `StatefulSet` and the pod name and namespace must be handed to the kube-state-metrics process via the `--pod` and `--pod-namespace` flags. Example manifests demonstrating the autosharding functionality can be found in [`/examples/autosharding`](./examples/autosharding).\n\nThis way of deploying shards is useful when you want to manage KSM shards through a single Kubernetes resource (a single `StatefulSet` in this case) instead of having one `Deployment` per shard. The advantage can be especially significant when deploying a high number of shards.\n\nThe downside of using an auto-sharded setup comes from the rollout strategy supported by `StatefulSet`s. When managed by a `StatefulSet`, pods are replaced one at a time with each pod first getting terminated and then recreated. Besides such rollouts being slower, they will also lead to short downtime for each shard. If a Prometheus scrape happens during a rollout, it can miss some of the metrics exported by kube-state-metrics.\n\n### Daemonset sharding for pod metrics\n\nFor pod metrics, they can be sharded per node with the following flag:\n\n* `--node=$(NODE_NAME)`\n\nEach kube-state-metrics pod uses FieldSelector (spec.nodeName) to watch/list pod metrics only on the same node.\n\nA daemonset kube-state-metrics example:\n\n```\napiVersion: apps/v1\nkind: DaemonSet\nspec:\n  template:\n    spec:\n      containers:\n      - image: registry.k8s.io/kube-state-metrics/kube-state-metrics:IMAGE_TAG\n        name: kube-state-metrics\n        args:\n        - --resource=pods\n        - --node=$(NODE_NAME)\n        env:\n        - name: NODE_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n```\n\nTo track metrics for unassigned pods, you need to add an additional deployment and set `--track-unscheduled-pods`, as shown in the following example:\n\n```\napiVersion: apps/v1\nkind: Deployment\nspec:\n  template:\n    spec:\n      containers:\n      - image: registry.k8s.io/kube-state-metrics/kube-state-metrics:IMAGE_TAG\n        name: kube-state-metrics\n        args:\n        - --resources=pods\n        - --track-unscheduled-pods\n```\n\nOther metrics can be sharded via [Horizontal sharding](#horizontal-sharding).\n\n### Setup\n\nInstall this project to your `$GOPATH` using `go get`:\n\n```\ngo get k8s.io/kube-state-metrics\n```\n\n#### Building the Docker container\n\nSimply run the following command in this root folder, which will create a\nself-contained, statically-linked binary and build a Docker image:\n\n```\nmake container\n```\n\n### Usage\n\nSimply build and run kube-state-metrics inside a Kubernetes pod which has a\nservice account token that has read-only access to the Kubernetes cluster.\n\n#### For users of prometheus-operator/kube-prometheus stack\n\nThe ([`kube-prometheus`](https://github.com/prometheus-operator/kube-prometheus/)) stack installs kube-state-metrics as one of its [components](https://github.com/prometheus-operator/kube-prometheus#kube-prometheus); you do not need to install kube-state-metrics if you're using the kube-prometheus stack.\n\nIf you want to revise the default configuration for kube-prometheus, for example to enable non-default metrics, have a look at [Customizing Kube-Prometheus](https://github.com/prometheus-operator/kube-prometheus/blob/main/docs/customizing.md).\n\n#### Kubernetes Deployment\n\nTo deploy this project, you can simply run `kubectl apply -f examples/standard` and a Kubernetes service and deployment will be created. (Note: Adjust the apiVersion of some resource if your kubernetes cluster's version is not 1.8+, check the yaml file for more information).\n\nTo have Prometheus discover kube-state-metrics instances it is advised to create a specific Prometheus scrape config for kube-state-metrics that picks up both metrics endpoints. Annotation based discovery is discouraged as only one of the endpoints would be able to be selected, plus kube-state-metrics in most cases has special authentication and authorization requirements as it essentially grants read access through the metrics endpoint to most information available to it.\n\n**Note:** Google Kubernetes Engine (GKE) Users - GKE has strict role permissions that will prevent the kube-state-metrics roles and role bindings from being created. To work around this, you can give your GCP identity the cluster-admin role by running the following one-liner:\n\n```\nkubectl create clusterrolebinding cluster-admin-binding --clusterrole=cluster-admin --user=$(gcloud info --format='value(config.account)')\n```\n\nNote that your GCP identity is case sensitive but `gcloud info` as of Google Cloud SDK 221.0.0 is not. This means that if your IAM member contains capital letters, the above one-liner may not work for you. If you have 403 forbidden responses after running the above command and `kubectl apply -f examples/standard`, check the IAM member associated with your account at <https://console.cloud.google.com/iam-admin/iam?project=PROJECT_ID>. If it contains capital letters, you may need to set the --user flag in the command above to the case-sensitive role listed at <https://console.cloud.google.com/iam-admin/iam?project=PROJECT_ID>.\n\nAfter running the above, if you see `Clusterrolebinding \"cluster-admin-binding\" created`, then you are able to continue with the setup of this service.\n\n#### Healthcheck Endpoints\n\nThe following healthcheck endpoints are available (`self` refers to the telemetry port, while `main` refers to the exposition port):\n\n* `/healthz` (exposed on `main`): Returns a 200 status code if the application is running. We recommend to use this for the startup probe.\n* `/livez` (exposed on `main`): Returns a 200 status code if the application is not affected by an outage of the Kubernetes API Server. We recommend to using this for the liveness probe.\n* `/readyz` (exposed on `self`): Returns a 200 status code if the application is ready to accept requests and expose metrics. We recommend using this for the readiness probe.\n\nNote that it is discouraged to use the telemetry metrics endpoint for any probe when proxying the exposition data.\n\n#### Limited privileges environment\n\nIf you want to run kube-state-metrics in an environment where you don't have cluster-reader role, you can:\n\n* create a serviceaccount\n\n```yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: kube-state-metrics\n  namespace: your-namespace-where-kube-state-metrics-will-deployed\n```\n\n* give it `view` privileges on specific namespaces (using roleBinding) (*note: you can add this roleBinding to all the NS you want your serviceaccount to access*)\n\n```yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: kube-state-metrics\n  namespace: project1\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: view\nsubjects:\n  - kind: ServiceAccount\n    name: kube-state-metrics\n    namespace: your-namespace-where-kube-state-metrics-will-deployed\n```\n\n* then specify a set of namespaces (using the `--namespaces` option) and a set of kubernetes objects (using the `--resources`) that your serviceaccount has access to in the `kube-state-metrics` deployment configuration\n\n```yaml\nspec:\n  template:\n    spec:\n      containers:\n      - name: kube-state-metrics\n        args:\n          - '--resources=pods'\n          - '--namespaces=project1'\n```\n\nFor the full list of arguments available, see the documentation in [docs/developer/cli-arguments.md](./docs/developer/cli-arguments.md)\n\n#### Helm Chart\n\nStarting from the kube-state-metrics chart `v2.13.3` (kube-state-metrics image `v1.9.8`), the official [Helm chart](https://artifacthub.io/packages/helm/prometheus-community/kube-state-metrics/) is maintained in [prometheus-community/helm-charts](https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-state-metrics). Starting from kube-state-metrics chart `v3.0.0` only kube-state-metrics images of `v2.0.0 +` are supported.\n\n#### Development\n\nWhen developing, test a metric dump against your local Kubernetes cluster by running:\n\n> Users can override the apiserver address in KUBE-CONFIG file with `--apiserver` command line.\n\n```\ngo install\nkube-state-metrics --port=8080 --telemetry-port=8081 --kubeconfig=<KUBE-CONFIG> --apiserver=<APISERVER>\n```\n\nThen curl the metrics endpoint\n\n```\ncurl localhost:8080/metrics\n```\n\nTo run the e2e tests locally see the documentation in [tests/README.md](./tests/README.md).\n\n#### Developer Contributions\n\nWhen developing, there are certain code patterns to follow to better your contributing experience and likelihood of e2e and other ci tests to pass. To learn more about them, see the documentation in [docs/developer/guide.md](./docs/developer/guide.md).\n\n#### Community\n\nThis project is sponsored by [SIG Instrumentation](https://github.com/kubernetes/community/tree/master/sig-instrumentation).\n\nThere is also a channel for [#kube-state-metrics](https://kubernetes.slack.com/archives/CJJ529RUY) on Kubernetes' Slack.\n\nYou can also join the SIG Instrumentation [mailing list](https://groups.google.com/forum/#!forum/kubernetes-sig-instrumentation).\nThis will typically add invites for the following meetings to your calendar, in which topics around kube-state-metrics can be discussed.\n\n* Regular SIG Meeting: [Thursdays at 9:30 PT (Pacific Time)](https://zoom.us/j/5342565819?pwd=RlVsK21NVnR1dmE3SWZQSXhveHZPdz09) (biweekly). [Convert to your timezone](http://www.thetimezoneconverter.com/?t=9:30&tz=PT%20%28Pacific%20Time%29).\n* Regular Triage Meeting: [Thursdays at 9:30 PT (Pacific Time)](https://zoom.us/j/5342565819?pwd=RlVsK21NVnR1dmE3SWZQSXhveHZPdz09) (biweekly - alternating with regular meeting). [Convert to your timezone](http://www.thetimezoneconverter.com/?t=9:30&tz=PT%20%28Pacific%20Time%29).\n"
        },
        {
          "name": "RELEASE.md",
          "type": "blob",
          "size": 2.5673828125,
          "content": "# How to cut a new release\n\n## Branch management and versioning strategy\n\nWe use [Semantic Versioning](http://semver.org/).\n\nWe maintain a separate branch for each minor release, named `release-<major>.<minor>`, e.g. `release-1.1`, `release-2.0`.\n\nThe usual flow is to merge new features and changes into the main branch and to merge bug fixes into the latest release branch. Bug fixes are then merged into main from the latest release branch. The main branch should always contain all commits from the latest release branch.\n\nIf a bug fix got accidentally merged into main, cherry-pick commits have to be created in the latest release branch, which then have to be merged back into main. Try to avoid that situation.\n\nMaintaining the release branches for older minor releases happens on a best effort basis.\n\n## Prepare your release\n\n* Update the [data.yaml](data.yaml)\n  * Update the compat list\n  * Update the version key to refer to your new release\n* Run `make examples`, which will re-generate all example manifests to use the new version.\n* Make a PR to update:\n  * Run `make generate`, which will update the compatibility matrix in README.md\n  * Changelog entry\n    * Only include user relevant changes\n    * Entries in the [`CHANGELOG.md`](CHANGELOG.md) are meant to be in this order:\n\n    ```\n    [CHANGE]\n    [FEATURE]\n    [ENHANCEMENT]\n    [BUGFIX]\n    ```\n\n    * All lines should be full sentences\n  * kube-state-metrics image tag used in Kubernetes deployment yaml config.\n* Cut the new release branch, e.g. `release-1.2`, or merge/cherry-pick changes onto the minor release branch you intend to tag the release on\n* Cut the new release tag, e.g. `v1.2.0-rc.0`\n* Create a new **pre-release** on github\n* New images are automatically built and pushed to `gcr.io/k8s-staging-kube-state-metrics/kube-state-metrics`\n* Promote image by sending a PR to [kubernetes/k8s.io](https://github.com/kubernetes/k8s.io) repository. Follow the [example PR](https://github.com/kubernetes/k8s.io/pull/3798). Use [kpromo pr](https://github.com/kubernetes-sigs/promo-tools/blob/main/docs/promotion-pull-requests.md) to update the manifest files in this repository, e.g. `kpromo pr --fork=$YOURNAME -i --project=kube-state-metrics -t=v2.5.0`\n* Create a PR to merge the changes of this release back into the main branch.\n* Once the PR to promote the image is merged, mark the pre-release as a regular release.\n\n## Stable release\n\nFirst a release candidate (e.g. `v1.2.0-rc.0`) should be cut. If after a period of 7 days no bugs or issues were reported after publishing the release candidate, a stable release (e.g. `v1.2.0`) can be cut.\n"
        },
        {
          "name": "SECURITY-INSIGHTS.yml",
          "type": "blob",
          "size": 2.173828125,
          "content": "# Refer: https://github.com/ossf/security-insights-spec/blob/main/specification.md#specification\nheader:\n  schema-version: \"1.0.0\"\n  expiration-date: \"2024-12-15T19:10:00.000Z\"\n  project-url: https://github.com/kubernetes/kube-state-metrics\n  changelog: https://github.com/kubernetes/kube-state-metrics/blob/main/CHANGELOG.md\n  license: https://github.com/kubernetes/kube-state-metrics/blob/main/LICENSE\nproject-lifecycle:\n  status: active\n  bug-fixes-only: false\n  core-maintainers:\n    - github:dgrisonnet\n    - github:mrueg\n    - github:rexagod\n  release-process: https://github.com/kubernetes/kube-state-metrics/blob/main/RELEASE.md\ncontribution-policy:\n  accepts-pull-requests: true\n  accepts-automated-pull-requests: true\n  contributing-policy: https://github.com/kubernetes/kube-state-metrics/blob/main/CONTRIBUTING.md\n  code-of-conduct: https://github.com/kubernetes/kube-state-metrics/blob/main/code-of-conduct.md\ndistribution-points:\n  - https://github.com/kubernetes/kube-state-metrics/releases\n  - https://github.com/kubernetes/k8s.io/blob/main/registry.k8s.io/images/k8s-staging-kube-state-metrics/images.yaml\nsecurity-contacts:\n  - type: website\n    value: https://github.com/kubernetes/kube-state-metrics/blob/main/SECURITY_CONTACTS\nvulnerability-reporting:\n  accepts-vulnerability-reports: true\n  security-policy: https://github.com/kubernetes/kube-state-metrics/blob/main/SECURITY.md\ndependencies:\n  third-party-packages: true\n  dependencies-lists:\n    - https://github.com/kubernetes/kube-state-metrics/blob/main/go.mod\n    - https://github.com/kubernetes/kube-state-metrics/blob/main/Dockerfile\n  env-dependencies-policy:\n    policy-url: https://github.com/kubernetes/kube-state-metrics/blob/main/docs/dependencies-policy.md\ndocumentation:\n    - https://github.com/kubernetes/kube-state-metrics/tree/main/docs\nsecurity-testing:\n- tool-type: dast\n  tool-name: govulncheck\n  tool-version: latest\n  tool-url: https://go.googlesource.com/vuln\n  tool-rulesets:\n  - built-in\n  integration:\n    ci: true\n  comment: |\n    Detects vulnerabilities as a result of the affected call-paths being invoked directly in the repository, while reducing false positives by ignoring dormant call-paths for package dependencies.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.0439453125,
          "content": "# Security Policy\n\n## Security Announcements\n\nJoin the [kubernetes-security-announce] group for security and vulnerability announcements.\n\nYou can also subscribe to an RSS feed of the above using [this link][kubernetes-security-announce-rss].\n\n## Reporting a Vulnerability\n\nInstructions for reporting a vulnerability can be found on the\n[Kubernetes Security and Disclosure Information] page.\n\n## Supported Versions\n\nInformation about supported Kubernetes versions can be found on the\n[Kubernetes version and version skew support policy] page on the Kubernetes website.\n\n[kubernetes-security-announce]: https://groups.google.com/forum/#!forum/kubernetes-security-announce\n[kubernetes-security-announce-rss]: https://groups.google.com/forum/feed/kubernetes-security-announce/msgs/rss_v2_0.xml?num=50\n[Kubernetes version and version skew support policy]: https://kubernetes.io/docs/setup/release/version-skew-policy/#supported-versions\n[Kubernetes Security and Disclosure Information]: https://kubernetes.io/docs/reference/issues-security/security/#report-a-vulnerability\n"
        },
        {
          "name": "SECURITY_CONTACTS",
          "type": "blob",
          "size": 0.5302734375,
          "content": "# Defined below are the security contacts for this repo.\n#\n# They are the contact point for the Product Security Committee to reach out\n# to for triaging and handling of incoming issues.\n#\n# The below names agree to abide by the\n# [Embargo Policy](https://git.k8s.io/security/private-distributors-list.md#embargo-policy)\n# and will be removed and replaced if they violate that agreement.\n#\n# DO NOT REPORT SECURITY VULNERABILITIES DIRECTLY TO THESE NAMES, FOLLOW THE\n# INSTRUCTIONS AT https://kubernetes.io/security/\n\ndgrisonnet\nmrueg\nrexagod\n"
        },
        {
          "name": "cloudbuild.yaml",
          "type": "blob",
          "size": 0.310546875,
          "content": "# See https://cloud.google.com/cloud-build/docs/build-config\ntimeout: 2700s\noptions:\n  substitution_option: ALLOW_LOOSE\nsteps:\n  - name: 'gcr.io/k8s-staging-test-infra/gcb-docker-gcloud:v20241111-71c32dbdcc'\n    entrypoint: make\n    env:\n    - TAG=$_PULL_BASE_REF\n    - GIT_COMMIT=$_PULL_BASE_SHA\n    args:\n    - push\n"
        },
        {
          "name": "code-of-conduct.md",
          "type": "blob",
          "size": 0.14453125,
          "content": "# Kubernetes Community Code of Conduct\n\nPlease refer to our [Kubernetes Community Code of Conduct](https://git.k8s.io/community/code-of-conduct.md)\n"
        },
        {
          "name": "data.yaml",
          "type": "blob",
          "size": 0.4677734375,
          "content": "# The purpose of this config is to keep all versions in a single file and make them machine accessible\n\n# Marks the latest release\nversion: \"2.14.0\"\n\n# List at max 5 releases here + the main branch\ncompat:\n  - version: \"v2.10.1\"\n    kubernetes: \"1.27\"\n  - version: \"v2.11.0\"\n    kubernetes: \"1.28\"\n  - version: \"v2.12.0\"\n    kubernetes: \"1.29\"\n  - version: \"v2.13.0\"\n    kubernetes: \"1.30\"\n  - version: \"v2.14.0\"\n    kubernetes: \"1.31\"\n  - version: \"main\"\n    kubernetes: \"1.31\"\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 3.9755859375,
          "content": "module k8s.io/kube-state-metrics/v2\n\ngo 1.23.0\n\nrequire (\n\tgithub.com/KimMachineGun/automemlimit v0.7.0\n\tgithub.com/dgryski/go-jump v0.0.0-20211018200510-ba001c3ffce0\n\tgithub.com/fsnotify/fsnotify v1.8.0\n\tgithub.com/go-logr/logr v1.4.2\n\tgithub.com/gobuffalo/flect v1.0.3\n\tgithub.com/google/go-cmp v0.6.0\n\tgithub.com/oklog/run v1.1.0\n\tgithub.com/prometheus/client_golang v1.20.5\n\tgithub.com/prometheus/client_model v0.6.1\n\tgithub.com/prometheus/common v0.61.0\n\tgithub.com/prometheus/exporter-toolkit v0.13.2\n\tgithub.com/robfig/cron/v3 v3.0.1\n\tgithub.com/spf13/cobra v1.8.1\n\tgithub.com/spf13/viper v1.19.0\n\tgithub.com/stretchr/testify v1.10.0\n\tgopkg.in/yaml.v3 v3.0.1\n\tk8s.io/api v0.31.3\n\tk8s.io/apimachinery v0.31.3\n\tk8s.io/client-go v0.31.3\n\tk8s.io/component-base v0.31.3\n\tk8s.io/klog/v2 v2.130.1\n\tk8s.io/sample-controller v0.31.3\n\tk8s.io/utils v0.0.0-20241104163129-6fe5fd82f078\n)\n\nrequire (\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/blang/semver/v4 v4.0.0 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/coreos/go-systemd/v22 v22.5.0 // indirect\n\tgithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc // indirect\n\tgithub.com/emicklei/go-restful/v3 v3.11.0 // indirect\n\tgithub.com/fxamacker/cbor/v2 v2.7.0 // indirect\n\tgithub.com/go-openapi/jsonpointer v0.19.6 // indirect\n\tgithub.com/go-openapi/jsonreference v0.20.2 // indirect\n\tgithub.com/go-openapi/swag v0.22.4 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang/protobuf v1.5.4 // indirect\n\tgithub.com/google/gnostic-models v0.6.8 // indirect\n\tgithub.com/google/gofuzz v1.2.0 // indirect\n\tgithub.com/google/uuid v1.6.0 // indirect\n\tgithub.com/hashicorp/hcl v1.0.0 // indirect\n\tgithub.com/imdario/mergo v0.3.6 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/josharian/intern v1.0.0 // indirect\n\tgithub.com/jpillora/backoff v1.0.0 // indirect\n\tgithub.com/json-iterator/go v1.1.12 // indirect\n\tgithub.com/klauspost/compress v1.17.9 // indirect\n\tgithub.com/magiconair/properties v1.8.7 // indirect\n\tgithub.com/mailru/easyjson v0.7.7 // indirect\n\tgithub.com/mdlayher/socket v0.4.1 // indirect\n\tgithub.com/mdlayher/vsock v1.2.1 // indirect\n\tgithub.com/mitchellh/mapstructure v1.5.0 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f // indirect\n\tgithub.com/pbnjay/memory v0.0.0-20210728143218-7b4eea64cf58 // indirect\n\tgithub.com/pelletier/go-toml/v2 v2.2.2 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 // indirect\n\tgithub.com/prometheus/procfs v0.15.1 // indirect\n\tgithub.com/sagikazarmark/locafero v0.4.0 // indirect\n\tgithub.com/sagikazarmark/slog-shim v0.1.0 // indirect\n\tgithub.com/sourcegraph/conc v0.3.0 // indirect\n\tgithub.com/spf13/afero v1.11.0 // indirect\n\tgithub.com/spf13/cast v1.6.0 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgithub.com/subosito/gotenv v1.6.0 // indirect\n\tgithub.com/x448/float16 v0.8.4 // indirect\n\tgo.uber.org/multierr v1.11.0 // indirect\n\tgolang.org/x/crypto v0.31.0 // indirect\n\tgolang.org/x/exp v0.0.0-20230905200255-921286631fa9 // indirect\n\tgolang.org/x/net v0.32.0 // indirect\n\tgolang.org/x/oauth2 v0.24.0 // indirect\n\tgolang.org/x/sync v0.10.0 // indirect\n\tgolang.org/x/sys v0.28.0 // indirect\n\tgolang.org/x/term v0.27.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgolang.org/x/time v0.5.0 // indirect\n\tgoogle.golang.org/protobuf v1.35.2 // indirect\n\tgopkg.in/evanphx/json-patch.v4 v4.12.0 // indirect\n\tgopkg.in/inf.v0 v0.9.1 // indirect\n\tgopkg.in/ini.v1 v1.67.0 // indirect\n\tgopkg.in/yaml.v2 v2.4.0 // indirect\n\tk8s.io/kube-openapi v0.0.0-20240228011516-70dd3763d340 // indirect\n\tsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd // indirect\n\tsigs.k8s.io/structured-merge-diff/v4 v4.4.1 // indirect\n\tsigs.k8s.io/yaml v1.4.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 22.0595703125,
          "content": "github.com/KimMachineGun/automemlimit v0.7.0 h1:7G06p/dMSf7G8E6oq+f2uOPuVncFyIlDI/pBWK49u88=\ngithub.com/KimMachineGun/automemlimit v0.7.0/go.mod h1:QZxpHaGOQoYvFhv/r4u3U0JTC2ZcOwbSr11UZF46UBM=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/blang/semver/v4 v4.0.0 h1:1PFHFE6yCCTv8C1TeyNNarDzntLi7wMI5i/pzqYIsAM=\ngithub.com/blang/semver/v4 v4.0.0/go.mod h1:IbckMUScFkM3pff0VJDNKRiT6TG/YpiHIM2yvyW5YoQ=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/coreos/go-systemd/v22 v22.5.0 h1:RrqgGjYQKalulkV8NGVIfkXQf6YYmOyiJKk8iXXhfZs=\ngithub.com/coreos/go-systemd/v22 v22.5.0/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dgryski/go-jump v0.0.0-20211018200510-ba001c3ffce0 h1:0wH6nO9QEa02Qx8sIQGw6ieKdz+BXjpccSOo9vXNl4U=\ngithub.com/dgryski/go-jump v0.0.0-20211018200510-ba001c3ffce0/go.mod h1:4hKCXuwrJoYvHZxJ86+bRVTOMyJ0Ej+RqfSm8mHi6KA=\ngithub.com/emicklei/go-restful/v3 v3.11.0 h1:rAQeMHw1c7zTmncogyy8VvRZwtkmkZ4FxERmMY4rD+g=\ngithub.com/emicklei/go-restful/v3 v3.11.0/go.mod h1:6n3XBCmQQb25CM2LCACGz8ukIrRry+4bhvbpWn3mrbc=\ngithub.com/frankban/quicktest v1.14.6 h1:7Xjx+VpznH+oBnejlPUj8oUpdxnVs4f8XU8WnHkI4W8=\ngithub.com/frankban/quicktest v1.14.6/go.mod h1:4ptaffx2x8+WTWXmUCuVU6aPUX1/Mz7zb5vbUoiM6w0=\ngithub.com/fsnotify/fsnotify v1.8.0 h1:dAwr6QBTBZIkG8roQaJjGof0pp0EeF+tNV7YBP3F/8M=\ngithub.com/fsnotify/fsnotify v1.8.0/go.mod h1:8jBTzvmWwFyi3Pb8djgCCO5IBqzKJ/Jwo8TRcHyHii0=\ngithub.com/fxamacker/cbor/v2 v2.7.0 h1:iM5WgngdRBanHcxugY4JySA0nk1wZorNOpTgCMedv5E=\ngithub.com/fxamacker/cbor/v2 v2.7.0/go.mod h1:pxXPTn3joSm21Gbwsv0w9OSA2y1HFR9qXEeXQVeNoDQ=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-openapi/jsonpointer v0.19.6 h1:eCs3fxoIi3Wh6vtgmLTOjdhSpiqphQ+DaPn38N2ZdrE=\ngithub.com/go-openapi/jsonpointer v0.19.6/go.mod h1:osyAmYz/mB/C3I+WsTTSgw1ONzaLJoLCyoi6/zppojs=\ngithub.com/go-openapi/jsonreference v0.20.2 h1:3sVjiK66+uXK/6oQ8xgcRKcFgQ5KXa2KvnJRumpMGbE=\ngithub.com/go-openapi/jsonreference v0.20.2/go.mod h1:Bl1zwGIM8/wsvqjsOQLJ/SH+En5Ap4rVB5KVcIDZG2k=\ngithub.com/go-openapi/swag v0.22.3/go.mod h1:UzaqsxGiab7freDnrUUra0MwWfN/q7tE4j+VcZ0yl14=\ngithub.com/go-openapi/swag v0.22.4 h1:QLMzNJnMGPRNDCbySlcj1x01tzU8/9LTTL9hZZZogBU=\ngithub.com/go-openapi/swag v0.22.4/go.mod h1:UzaqsxGiab7freDnrUUra0MwWfN/q7tE4j+VcZ0yl14=\ngithub.com/go-task/slim-sprig/v3 v3.0.0 h1:sUs3vkvUymDpBKi3qH1YSqBQk9+9D/8M2mN1vB6EwHI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0/go.mod h1:W848ghGpv3Qj3dhTPRyJypKRiqCdHZiAzKg9hl15HA8=\ngithub.com/gobuffalo/flect v1.0.3 h1:xeWBM2nui+qnVvNM4S3foBhCAL2XgPU+a7FdpelbTq4=\ngithub.com/gobuffalo/flect v1.0.3/go.mod h1:A5msMlrHtLqh9umBSnvabjsMrCcCpAyzglnDvkbYKHs=\ngithub.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/gnostic-models v0.6.8 h1:yo/ABAfM5IMRsS1VnXjTBvUb61tFIHozhlYvRgGre9I=\ngithub.com/google/gnostic-models v0.6.8/go.mod h1:5n7qKqH0f5wFt+aWF8CW6pZLLNOfYuF5OpfBSENuI8U=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/gofuzz v1.2.0 h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=\ngithub.com/google/gofuzz v1.2.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/pprof v0.0.0-20240525223248-4bfdf5a9a2af h1:kmjWCqn2qkEml422C2Rrd27c3VGxi6a/6HNq8QmHRKM=\ngithub.com/google/pprof v0.0.0-20240525223248-4bfdf5a9a2af/go.mod h1:K1liHPHnj73Fdn/EKuT8nrFqBihUSKXoLYU0BuatOYo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/hashicorp/hcl v1.0.0 h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=\ngithub.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=\ngithub.com/imdario/mergo v0.3.6 h1:xTNEAn+kxVO7dTZGu0CegyqKZmoWFI0rF8UxjlB2d28=\ngithub.com/imdario/mergo v0.3.6/go.mod h1:2EnlNZ0deacrJVfApfmtdGgDfMuh/nq6Ok1EcJh5FfA=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/josharian/intern v1.0.0 h1:vlS4z54oSdjm0bgjRigI+G1HpF+tI+9rE5LLzOg8HmY=\ngithub.com/josharian/intern v1.0.0/go.mod h1:5DoeVV0s6jJacbCEi61lwdGj/aVlrQvzHFFd8Hwg//Y=\ngithub.com/jpillora/backoff v1.0.0 h1:uvFg412JmmHBHw7iwprIxkPMI+sGQ4kzOWsMeHnm2EA=\ngithub.com/jpillora/backoff v1.0.0/go.mod h1:J/6gKK9jxlEcS3zixgDgUAsiuZ7yrSoa/FX5e0EB2j4=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/compress v1.17.9 h1:6KIumPrER1LHsvBVuDa0r5xaG0Es51mhhB9BQB2qeMA=\ngithub.com/klauspost/compress v1.17.9/go.mod h1:Di0epgTjJY877eYKx5yC51cX2A2Vl2ibi7bDH9ttBbw=\ngithub.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/magiconair/properties v1.8.7 h1:IeQXZAiQcpL9mgcAe1Nu6cX9LLw6ExEHKjN0VQdvPDY=\ngithub.com/magiconair/properties v1.8.7/go.mod h1:Dhd985XPs7jluiymwWYZ0G4Z61jb3vdS329zhj2hYo0=\ngithub.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=\ngithub.com/mailru/easyjson v0.7.7/go.mod h1:xzfreul335JAWq5oZzymOObrkdz5UnU4kGfJJLY9Nlc=\ngithub.com/mdlayher/socket v0.4.1 h1:eM9y2/jlbs1M615oshPQOHZzj6R6wMT7bX5NPiQvn2U=\ngithub.com/mdlayher/socket v0.4.1/go.mod h1:cAqeGjoufqdxWkD7DkpyS+wcefOtmu5OQ8KuoJGIReA=\ngithub.com/mdlayher/vsock v1.2.1 h1:pC1mTJTvjo1r9n9fbm7S1j04rCgCzhCOS5DY0zqHlnQ=\ngithub.com/mdlayher/vsock v1.2.1/go.mod h1:NRfCibel++DgeMD8z/hP+PPTjlNJsdPOmxcnENvE+SE=\ngithub.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=\ngithub.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f h1:KUppIJq7/+SVif2QVs3tOP0zanoHgBEVAwHxUSIzRqU=\ngithub.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/oklog/run v1.1.0 h1:GEenZ1cK0+q0+wsJew9qUg/DyD8k3JzYsZAi5gYi2mA=\ngithub.com/oklog/run v1.1.0/go.mod h1:sVPdnTZT1zYwAJeCMu2Th4T21pA3FPOQRfWjQlk7DVU=\ngithub.com/onsi/ginkgo/v2 v2.19.0 h1:9Cnnf7UHo57Hy3k6/m5k3dRfGTMXGvxhHFvkDTCTpvA=\ngithub.com/onsi/ginkgo/v2 v2.19.0/go.mod h1:rlwLi9PilAFJ8jCg9UE1QP6VBpd6/xj3SRC0d6TU0To=\ngithub.com/onsi/gomega v1.33.1 h1:dsYjIxxSR755MDmKVsaFQTE22ChNBcuuTWgkUDSubOk=\ngithub.com/onsi/gomega v1.33.1/go.mod h1:U4R44UsT+9eLIaYRB2a5qajjtQYn0hauxvRm16AVYg0=\ngithub.com/pbnjay/memory v0.0.0-20210728143218-7b4eea64cf58 h1:onHthvaw9LFnH4t2DcNVpwGmV9E1BkGknEliJkfwQj0=\ngithub.com/pbnjay/memory v0.0.0-20210728143218-7b4eea64cf58/go.mod h1:DXv8WO4yhMYhSNPKjeNKa5WY9YCIEBRbNzFFPJbWO6Y=\ngithub.com/pelletier/go-toml/v2 v2.2.2 h1:aYUidT7k73Pcl9nb2gScu7NSrKCSHIDE89b3+6Wq+LM=\ngithub.com/pelletier/go-toml/v2 v2.2.2/go.mod h1:1t835xjRzz80PqgE6HHgN2JOsmgYu/h4qDAS4n929Rs=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_golang v1.20.5 h1:cxppBPuYhUnsO6yo/aoRol4L7q7UFfdm+bR9r+8l63Y=\ngithub.com/prometheus/client_golang v1.20.5/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=\ngithub.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=\ngithub.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=\ngithub.com/prometheus/common v0.61.0 h1:3gv/GThfX0cV2lpO7gkTUwZru38mxevy90Bj8YFSRQQ=\ngithub.com/prometheus/common v0.61.0/go.mod h1:zr29OCN/2BsJRaFwG8QOBr41D6kkchKbpeNH7pAjb/s=\ngithub.com/prometheus/exporter-toolkit v0.13.2 h1:Z02fYtbqTMy2i/f+xZ+UK5jy/bl1Ex3ndzh06T/Q9DQ=\ngithub.com/prometheus/exporter-toolkit v0.13.2/go.mod h1:tCqnfx21q6qN1KA4U3Bfb8uWzXfijIrJz3/kTIqMV7g=\ngithub.com/prometheus/procfs v0.15.1 h1:YagwOFzUgYfKKHX6Dr+sHT7km/hxC76UB0learggepc=\ngithub.com/prometheus/procfs v0.15.1/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=\ngithub.com/robfig/cron/v3 v3.0.1 h1:WdRxkvbJztn8LMz/QEvLN5sBU+xKpSqwwUO1Pjr4qDs=\ngithub.com/robfig/cron/v3 v3.0.1/go.mod h1:eQICP3HwyT7UooqI/z+Ov+PtYAWygg1TEWWzGIFLtro=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sagikazarmark/locafero v0.4.0 h1:HApY1R9zGo4DBgr7dqsTH/JJxLTTsOt7u6keLGt6kNQ=\ngithub.com/sagikazarmark/locafero v0.4.0/go.mod h1:Pe1W6UlPYUk/+wc/6KFhbORCfqzgYEpgQ3O5fPuL3H4=\ngithub.com/sagikazarmark/slog-shim v0.1.0 h1:diDBnUNK9N/354PgrxMywXnAwEr1QZcOr6gto+ugjYE=\ngithub.com/sagikazarmark/slog-shim v0.1.0/go.mod h1:SrcSrq8aKtyuqEI1uvTDTK1arOWRIczQRv+GVI1AkeQ=\ngithub.com/sourcegraph/conc v0.3.0 h1:OQTbbt6P72L20UqAkXXuLOj79LfEanQ+YQFNpLA9ySo=\ngithub.com/sourcegraph/conc v0.3.0/go.mod h1:Sdozi7LEKbFPqYX2/J+iBAM6HpqSLTASQIKqDmF7Mt0=\ngithub.com/spf13/afero v1.11.0 h1:WJQKhtpdm3v2IzqG8VMqrr6Rf3UYpEF239Jy9wNepM8=\ngithub.com/spf13/afero v1.11.0/go.mod h1:GH9Y3pIexgf1MTIWtNGyogA5MwRIDXGUr+hbWNoBjkY=\ngithub.com/spf13/cast v1.6.0 h1:GEiTHELF+vaR5dhz3VqZfFSzZjYbgeKDpBxQVS4GYJ0=\ngithub.com/spf13/cast v1.6.0/go.mod h1:ancEpBxwJDODSW/UG4rDrAqiKolqNNh2DX3mk86cAdo=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/spf13/viper v1.19.0 h1:RWq5SEjt8o25SROyN3z2OrDB9l7RPd3lwTWU8EcEdcI=\ngithub.com/spf13/viper v1.19.0/go.mod h1:GQUN9bilAbhU/jgc1bKs99f/suXKeUMct8Adx5+Ntkg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/subosito/gotenv v1.6.0 h1:9NlTDc1FTs4qu0DDq7AEtTPNw6SVm7uBMsUCUjABIf8=\ngithub.com/subosito/gotenv v1.6.0/go.mod h1:Dk4QP5c2W3ibzajGcXpNraDfq2IrhjMIvMSWPKKo0FU=\ngithub.com/x448/float16 v0.8.4 h1:qLwI1I70+NjRFUR3zs1JPUCgaCXSh3SW62uAKT1mSBM=\ngithub.com/x448/float16 v0.8.4/go.mod h1:14CWIYCyZA/cWjXOioeEpHeN/83MdbZDRQHoFcYsOfg=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngo.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=\ngo.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20230905200255-921286631fa9 h1:GoHiUyI/Tp2nVkLI2mCxVkOjsbSXD66ic0XW0js0R9g=\ngolang.org/x/exp v0.0.0-20230905200255-921286631fa9/go.mod h1:S2oDrQGGwySpoQPVqRShND87VCbxmc6bL1Yd2oYrm6k=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.32.0 h1:ZqPmj8Kzc+Y6e0+skZsuACbx+wzMgo5MQsJh9Qd6aYI=\ngolang.org/x/net v0.32.0/go.mod h1:CwU0IoeOlnQQWJ6ioyFrfRuomB8GKF6KbYXZVyeXNfs=\ngolang.org/x/oauth2 v0.24.0 h1:KTBBxWqUa0ykRPLtV69rRto9TLXcqYkeswu48x/gvNE=\ngolang.org/x/oauth2 v0.24.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.27.0 h1:WP60Sv1nlK1T6SupCHbXzSaN0b9wUmsPoRS9b61A23Q=\ngolang.org/x/term v0.27.0/go.mod h1:iMsnZpn0cago0GOrHO2+Y7u7JPn5AylBrcoWkElMTSM=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.5.0 h1:o7cqy6amK/52YcAKIPlM3a+Fpj35zvRj2TP+e1xFSfk=\ngolang.org/x/time v0.5.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d h1:vU5i/LfpvrRCpgM/VPfJLg5KjxD3E+hfT1SH+d9zLwg=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d/go.mod h1:aiJjzUbINMkxbQROHiO6hDPo2LHcIPhhQsa9DLh0yGk=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/protobuf v1.35.2 h1:8Ar7bF+apOIoThw1EdZl0p1oWvMqTHmpA2fRTyZO8io=\ngoogle.golang.org/protobuf v1.35.2/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/evanphx/json-patch.v4 v4.12.0 h1:n6jtcsulIzXPJaxegRbvFNNrZDjbij7ny3gmSPG+6V4=\ngopkg.in/evanphx/json-patch.v4 v4.12.0/go.mod h1:p8EYWUEYMpynmqDbY58zCKCFZw8pRWMG4EsWvDvM72M=\ngopkg.in/inf.v0 v0.9.1 h1:73M5CoZyi3ZLMOyDlQh031Cx6N9NDJ2Vvfl76EDAgDc=\ngopkg.in/inf.v0 v0.9.1/go.mod h1:cWUDdTG/fYaXco+Dcufb5Vnc6Gp2YChqWtbxRZE0mXw=\ngopkg.in/ini.v1 v1.67.0 h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=\ngopkg.in/ini.v1 v1.67.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nk8s.io/api v0.31.3 h1:umzm5o8lFbdN/hIXbrK9oRpOproJO62CV1zqxXrLgk8=\nk8s.io/api v0.31.3/go.mod h1:UJrkIp9pnMOI9K2nlL6vwpxRzzEX5sWgn8kGQe92kCE=\nk8s.io/apimachinery v0.31.3 h1:6l0WhcYgasZ/wk9ktLq5vLaoXJJr5ts6lkaQzgeYPq4=\nk8s.io/apimachinery v0.31.3/go.mod h1:rsPdaZJfTfLsNJSQzNHQvYoTmxhoOEofxtOsF3rtsMo=\nk8s.io/client-go v0.31.3 h1:CAlZuM+PH2cm+86LOBemaJI/lQ5linJ6UFxKX/SoG+4=\nk8s.io/client-go v0.31.3/go.mod h1:2CgjPUTpv3fE5dNygAr2NcM8nhHzXvxB8KL5gYc3kJs=\nk8s.io/component-base v0.31.3 h1:DMCXXVx546Rfvhj+3cOm2EUxhS+EyztH423j+8sOwhQ=\nk8s.io/component-base v0.31.3/go.mod h1:xME6BHfUOafRgT0rGVBGl7TuSg8Z9/deT7qq6w7qjIU=\nk8s.io/klog/v2 v2.130.1 h1:n9Xl7H1Xvksem4KFG4PYbdQCQxqc/tTUyrgXaOhHSzk=\nk8s.io/klog/v2 v2.130.1/go.mod h1:3Jpz1GvMt720eyJH1ckRHK1EDfpxISzJ7I9OYgaDtPE=\nk8s.io/kube-openapi v0.0.0-20240228011516-70dd3763d340 h1:BZqlfIlq5YbRMFko6/PM7FjZpUb45WallggurYhKGag=\nk8s.io/kube-openapi v0.0.0-20240228011516-70dd3763d340/go.mod h1:yD4MZYeKMBwQKVht279WycxKyM84kkAx2DPrTXaeb98=\nk8s.io/sample-controller v0.31.3 h1:SYyFIRr9kzAnoO8ZkAF+jMlIuwJmdGdS0PBPHnSG2zw=\nk8s.io/sample-controller v0.31.3/go.mod h1:CQj0ImWhr+0VQGfdmg4zufGE00LnWtGxvGHKoGSTuPI=\nk8s.io/utils v0.0.0-20241104163129-6fe5fd82f078 h1:jGnCPejIetjiy2gqaJ5V0NLwTpF4wbQ6cZIItJCSHno=\nk8s.io/utils v0.0.0-20241104163129-6fe5fd82f078/go.mod h1:OLgZIPagt7ERELqWJFomSt595RzquPNLL48iOWgYOg0=\nsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd h1:EDPBXCAspyGV4jQlpZSudPeMmr1bNJefnuqLsRAsHZo=\nsigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd/go.mod h1:B8JuhiUyNFVKdsE8h686QcCxMaH6HrOAZj4vswFpcB0=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.1 h1:150L+0vs/8DA78h1u02ooW1/fFq/Lwr+sGiqlzvrtq4=\nsigs.k8s.io/structured-merge-diff/v4 v4.4.1/go.mod h1:N8hJocpFajUSSeSJ9bOZ77VzejKZaXsTtZo4/u7Io08=\nsigs.k8s.io/yaml v1.4.0 h1:Mk1wCc2gy/F0THH0TAp1QYyJNzRm2KCLy3o5ASXVI5E=\nsigs.k8s.io/yaml v1.4.0/go.mod h1:Ejl7/uTz7PSA4eKMyQCUTnhZYNmLIl+5c2lQPGR2BPY=\n"
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "jsonnet",
          "type": "tree",
          "content": null
        },
        {
          "name": "kustomization.yaml",
          "type": "blob",
          "size": 0.2236328125,
          "content": "namespace: kube-system\n\nresources:\n- examples/standard/cluster-role-binding.yaml\n- examples/standard/cluster-role.yaml\n- examples/standard/deployment.yaml\n- examples/standard/service-account.yaml\n- examples/standard/service.yaml\n"
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 1.1328125,
          "content": "/*\nCopyright 2015 The Kubernetes Authors All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage main\n\nimport (\n\t\"github.com/spf13/cobra\"\n\t\"k8s.io/klog/v2\"\n\n\t\"k8s.io/kube-state-metrics/v2/internal\"\n\t\"k8s.io/kube-state-metrics/v2/pkg/options\"\n)\n\nfunc main() {\n\topts := options.NewOptions()\n\tcmd := options.InitCommand\n\tcmd.Run = func(_ *cobra.Command, _ []string) {\n\t\tinternal.RunKubeStateMetricsWrapper(opts)\n\t}\n\topts.AddFlags(cmd)\n\tif err := opts.Parse(); err != nil {\n\t\tklog.FlushAndExit(klog.ExitFlushTimeout, 1)\n\t}\n\tif err := opts.Validate(); err != nil {\n\t\tklog.ErrorS(err, \"Validating options error\")\n\t\tklog.FlushAndExit(klog.ExitFlushTimeout, 1)\n\t}\n}\n"
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}