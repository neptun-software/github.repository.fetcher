{
  "metadata": {
    "timestamp": 1736567517516,
    "page": 118,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kubernetes-sigs/kubebuilder",
      "stars": 8051,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5029296875,
          "content": ".idea/\n.vscode/\nWORKSPACE\n.DS_Store\n# don't check in the build output of the book\ndocs/book/book/\n\n# ignore auto-generated dir by `mdbook serve`\ndocs/book/src/docs\n\n# Editor temp files\n*~\n\\#*#\n*.swp\n\n# Skip bazel dirs\n/bazel-*\n\n# skip bin dirs\n**/bin\n**/testbin\n\n# skip .out files (coverage tests)\n*.out\n\n# skip testdata go.sum, since it may have\n# different result depending on go version\n/testdata/**/go.sum\n/docs/book/src/simple-external-plugin-tutorial/testdata/sampleexternalplugin/v1/bin\n/testdata/**legacy**\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 2.1357421875,
          "content": "run:\n  timeout: 5m\n  allow-parallel-runners: true\n\nissues:\n  # don't skip warning about doc comments\n  # don't exclude the default set of lint\n  exclude-use-default: false\n  # restore some of the defaults\n  # (fill in the rest as needed)\n  exclude-rules:\n    - linters: [gosec]\n      path: \"test/e2e/*\"\n    - path: \"hack/docs/*\"\n      linters:\n        - lll\n        - gosec\n\nlinters-settings:\n  govet:\n    enable-all: true\n    disable:\n      - fieldalignment\n      - shadow\n  nolintlint:\n    allow-unused: false\n  revive:\n    rules:\n      # The following rules are recommended https://github.com/mgechev/revive#recommended-configuration\n      - name: blank-imports\n      - name: context-as-argument\n      - name: context-keys-type\n      - name: dot-imports\n        arguments:\n          # dot import should be ONLY allowed for ginkgo testing packages\n          - allowedPackages:\n              - \"github.com/onsi/ginkgo/v2\"\n              - \"github.com/onsi/gomega\"\n      - name: error-return\n      - name: error-strings\n      - name: error-naming\n      - name: exported\n      - name: if-return\n      - name: increment-decrement\n      - name: var-naming\n      - name: var-declaration\n      - name: package-comments\n        disabled: true  # TODO: Investigate if it should be enabled. Disabled for now due to many findings.\n      - name: range\n      - name: receiver-naming\n      - name: time-naming\n      - name: unexported-return\n      - name: indent-error-flow\n      - name: errorf\n      - name: empty-block\n      - name: superfluous-else\n      - name: unused-parameter\n      - name: unreachable-code\n      - name: redefines-builtin-id\n      #\n      # Rules in addition to the recommended configuration above.\n      #\n      - name: bool-literal-in-expr\n      - name: constant-logical-expr\n      - name: comment-spacings\n\nlinters:\n  disable-all: true\n  enable:\n    - dupl\n    - errcheck\n    - copyloopvar\n    - ginkgolinter\n    - goconst\n    - gocyclo\n    - gofmt\n    - goimports\n    - gosimple\n    - govet\n    - ineffassign\n    - lll\n    - misspell\n    - nolintlint\n    - nakedret\n    - prealloc\n    - revive\n    - staticcheck\n    - typecheck\n    - unconvert\n    - unparam\n    - unused\n\n"
        },
        {
          "name": "BUILD.bazel",
          "type": "blob",
          "size": 0.8515625,
          "content": "#  Copyright 2018 The Kubernetes Authors.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n\n# gazelle:proto disable\nload(\"@io_bazel_rules_go//go:def.bzl\", \"gazelle\")\n\ngazelle(\n    name = \"gazelle\",\n    command = \"fix\",\n    prefix = \"sigs.k8s.io/kubebuilder\",\n    external = \"vendored\",\n    args = [\n        \"-build_file_name\",\n        \"BUILD,BUILD.bazel\",\n    ],\n)\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 12.6201171875,
          "content": "# Contributing guidelines\n\nThis document describes how to contribute to the project.\n\n## Sign the CLA\n\nKubernetes projects require that you sign a Contributor License Agreement (CLA) before we can accept your pull requests.\n\nPlease see https://git.k8s.io/community/CLA.md for more info.\n\n## Prerequisites\n\n- [go](https://golang.org/dl/) version v1.23+.\n- [docker](https://docs.docker.com/install/) version 17.03+.\n- [kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl/) version v1.11.3+.\n- [kustomize](https://github.com/kubernetes-sigs/kustomize/blob/master/site/content/en/docs/Getting%20started/installation.md) v3.1.0+\n- Access to a Kubernetes v1.11.3+ cluster.\n\n## Contributing steps\n\n1. Submit an issue describing your proposed change to the repo in question.\n1. The [repo owners](OWNERS) will respond to your issue promptly.\n1. If your proposed change is accepted, and you haven't already done so, sign a Contributor License Agreement (see details above).\n1. Fork the desired repo, develop and test your code changes.\n1. Submit a pull request.\n\nIn addition to the above steps, we adhere to the following best practices to maintain consistency and efficiency in our project:\n\n- **Single Commit per PR:** Each Pull Request (PR) should contain only one commit. This approach simplifies tracking changes and makes the history more readable.\n- **One Issue per PR:** Each PR should address a single specific issue or need. This helps in streamlining our workflow and makes it easier to identify and resolve problems such as revert the changes if required.\n\nFor more detailed guidelines, refer to the [Kubernetes Contributor Guide][k8s-contrubutiong-guide].\n\n## How to build kubebuilder locally\n\nNote that, by building the kubebuilder from the source code we are allowed to test the changes made locally.\n\n1. Run the following command to clone your fork of the project locally in the dir /src/sigs.k8s.io/kubebuilder\n\n```\n$ git clone git@github.com:<user>/kubebuilder.git $GOPATH/src/sigs.k8s.io/kubebuilder\n```\n\n1. Ensure you activate module support before continue (`$ export GO111MODULE=on`)\n1. Run the command `make install` to create a bin with the source code\n\n**NOTE** In order to check the local environment run `make test-unit`.\n\n## What to do before submitting a pull request\n\n1. Run the script `make generate` to update/generate the mock data used in the e2e test in `$GOPATH/src/sigs.k8s.io/kubebuilder/testdata/`\n1. Run `make test-unit test-e2e-local`\n\n- e2e tests use [`kind`][kind] and [`setup-envtest`][setup-envtest]. If you want to bring your own binaries, place them in `$(go env GOPATH)/bin`.\n\n**IMPORTANT:** The `make generate` is very helpful. By using it, you can check if good part of the commands still working successfully after the changes. Also, note that its usage is a prerequisite to submit a PR.\n\nFollowing the targets that can be used to test your changes locally.\n\n| Command             | Description                                                   | Is called in the CI? |\n| ------------------- | ------------------------------------------------------------- | -------------------- |\n| make test-unit      | Runs go tests                                                 | no                   |\n| make test           | Runs tests in shell (`./test.sh`)                             | yes                  |\n| make lint           | Run [golangci][golangci] lint checks                          | yes                  |\n| make lint-fix       | Run [golangci][golangci] to automatically perform fixes       | no                   |\n| make test-coverage  | Run coveralls to check the % of code covered by tests         | yes                  |\n| make check-testdata | Checks if the testdata dir is updated with the latest changes | yes                  |\n| make test-e2e-local | Runs the CI e2e tests locally                                 | no                   |\n\n**NOTE** `make lint` requires a local installation of `golangci-lint`. More info: https://github.com/golangci/golangci-lint#install\n\n### Running e2e tests locally\n\nSee that you can run `test-e2e-local` to setup Kind and run e2e tests locally.\nAnother option is by manually starting up Kind and configuring it and then,\nyou can for example via your IDEA debug the e2e tests.\n\nTo manually setup run:\n\n```shell\n# To generate an Kubebuilder local binary with your changes\nmake install\n# To create the cluster and configure a CNI which supports NetworkPolicy\nkind create cluster --config ./test/e2e/kind-config.yaml\nkubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml\n```\n\nNow, you can for example, run in debug mode the `test/e2e/v4/e2e_suite_test.go`:\n\n![example](https://github.com/kubernetes-sigs/kubebuilder/assets/7708031/277d26d5-c94d-41f0-8f02-1381458ef750)\n\n### Test Plugin\n\nIf your intended PR creates a new plugin, make sure the PR also provides test cases. Testing should include:\n\n1. `e2e tests` to validate the behavior of the proposed plugin.\n2. `sample projects` to verify the scaffolded output from the plugin.\n\n#### 1. Plugin E2E Tests\n\nAll the plugins provided by Kubebuilder should be validated through `e2e-tests` across multiple platforms.\n\nCurrent Kubebuilder provides the testing framework that includes testing code based on [ginkgo](https://github.com/onsi/ginkgo), [Github Actions](https://github.com/Kavinjsir/kubebuilder/blob/docs%2Ftest-plugin/.github/workflows/testdata.yml) for unit tests, and multiple env tests driven by [test-infra](https://github.com/kubernetes/test-infra/blob/master/config/jobs/kubernetes-sigs/kubebuilder/kubebuilder-presubmits.yaml).\n\nTo fully test the proposed plugin:\n\n1. Create a new package(folder) under `test/e2e/<your-plugin>`.\n2. Create [e2e_suite_test.go](https://github.com/kubernetes-sigs/kubebuilder/blob/v3.7.0/test/e2e/v4/e2e_suite_test.go), which imports the necessary testing framework.\n3. Create `generate_test.go` ([ref](https://github.com/kubernetes-sigs/kubebuilder/blob/v3.7.0/test/e2e/v4/generate_test.go)). That should:\n   - Introduce/Receive a `TextContext` instance\n   - Trigger the plugin's bound subcommands. See [Init](https://github.com/kubernetes-sigs/kubebuilder/blob/v3.7.0/test/e2e/utils/test_context.go#L213), [CreateAPI](https://github.com/kubernetes-sigs/kubebuilder/blob/v3.6.0/test/e2e/utils/test_context.go#L222)\n   - Use [PluginUtil](https://pkg.go.dev/sigs.k8s.io/kubebuilder/v4/pkg/plugin/util) to verify the scaffolded outputs. See [InsertCode](https://github.com/kubernetes-sigs/kubebuilder/blob/v3.7.0/pkg/plugin/util/util.go#L67), [ReplaceInFile](https://github.com/kubernetes-sigs/kubebuilder/blob/v3.6.0/pkg/plugin/util/util.go#L196), [UncommendCode](https://github.com/kubernetes-sigs/kubebuilder/blob/v3.6.0/pkg/plugin/util/util.go#L86)\n4. Create `plugin_cluster_test.go` ([ref](https://github.com/kubernetes-sigs/kubebuilder/blob/v3.7.0/test/e2e/v4/plugin_cluster_test.go)). That should:\n\n   - 4.1. Setup testing environment, e.g:\n\n     - Cleanup environment, create temp dir. See [Prepare](https://github.com/kubernetes-sigs/kubebuilder/blob/v3.7.0/test/e2e/utils/test_context.go#L97)\n     - If your test will cover the provided features then, ensure that you install prerequisites CRDs: See [InstallCertManager](https://github.com/kubernetes-sigs/kubebuilder/blob/v3.7.0/test/e2e/utils/test_context.go#L138), [InstallPrometheusManager](https://github.com/kubernetes-sigs/kubebuilder/blob/v3.6.0/test/e2e/utils/test_context.go#L171)\n\n   - 4.2. Run the function from `generate_test.go`.\n\n   - 4.3. Further make sure the scaffolded output works, e.g:\n\n     - Execute commands in your `Makefile`. See [Make](https://github.com/kubernetes-sigs/kubebuilder/blob/v3.7.0/test/e2e/utils/test_context.go#L240)\n     - Temporary load image of the testing controller. See [LoadImageToKindCluster](https://github.com/kubernetes-sigs/kubebuilder/blob/v3.7.0/test/e2e/utils/test_context.go#L283)\n     - Call Kubectl to validate running resources. See [utils.Kubectl](https://pkg.go.dev/sigs.k8s.io/kubebuilder/v4/test/e2e/utils#Kubectl)\n\n   - 4.4. Delete temporary resources after testing exited, e.g:\n     - Uninstall prerequisites CRDs: See [UninstallPrometheusOperManager](https://github.com/kubernetes-sigs/kubebuilder/blob/v3.7.0/test/e2e/utils/test_context.go#L183)\n     - Delete temp dir. See [Destroy](https://github.com/kubernetes-sigs/kubebuilder/blob/v3.7.0/test/e2e/utils/test_context.go#L255)\n\n5. Add the command in [test/e2e/plugin](https://github.com/kubernetes-sigs/kubebuilder/blob/v3.7.0/test/e2e/setup.sh#L65) to run your testing code:\n\n```shell\ngo test $(dirname \"$0\")/<your-plugin-test-folder> $flags -timeout 30m\n```\n\n#### 2. Sample Projects from the Plugin\n\nIt is also necessary to test consistency of the proposed plugin across different env and the integration with other plugins.\n\nThis is performed by generating sample projects based on the plugins. The CI workflow defined in Github Action would validate the availability and the consistency.\n\nSee:\n\n- [test/testdata/generated.sh](https://github.com/kubernetes-sigs/kubebuilder/blob/v3.7.0/test/testdata/generate.sh#L144)\n- [make generate](https://github.com/kubernetes-sigs/kubebuilder/blob/v3.7.0/Makefile#L70)\n\n## PR Process\n\nSee [VERSIONING.md](VERSIONING.md) for a full description. TL;DR:\n\nEvery PR should be annotated with an icon indicating whether it's\na:\n\n- Breaking change: :warning: (`:warning:`)\n- Non-breaking feature: :sparkles: (`:sparkles:`)\n- Patch fix: :bug: (`:bug:`)\n- Docs: :book: (`:book:`)\n- Infra/Tests/Other: :seedling: (`:seedling:`)\n- No release note: :ghost: (`:ghost:`)\n\nUse :ghost: (no release note) only for the PRs that change or revert unreleased\nchanges, which don't deserve a release note. Please don't abuse it.\n\nYou can also use the equivalent emoji directly, since GitHub doesn't\nrender the `:xyz:` aliases in PR titles.\n\nIf the PR is \"plugin\" scoped, you may also append the responding plugin names in the prefix.\n[For instance](https://github.com/kubernetes-sigs/kubebuilder/commit/0b36d0c4021bbf52f29d5a990157466761ec180c):\n\n```\n🐛 (kustomize/v2-alpha): Fix typo issue in the labels added to the manifests\n```\n\nIndividual commits should not be tagged separately, but will generally be\nassumed to match the PR. For instance, if you have a bugfix in with\na breaking change, it's generally encouraged to submit the bugfix\nseparately, but if you must put them in one PR, mark the commit\nseparately.\n\n## Where the CI Tests are configured\n\n1. See the [action files](.github/workflows) to check its tests, and the scripts used on it.\n2. Note that the prow tests used in the CI are configured in [kubernetes-sigs/kubebuilder/kubebuilder-presubmits.yaml](https://github.com/kubernetes/test-infra/blob/master/config/jobs/kubernetes-sigs/kubebuilder/kubebuilder-presubmits.yaml).\n3. Check that all scripts used by the CI are defined in the project.\n4. Notice that our policy to test the project is to run against k8s version N-2. So that the old version should be removed when there is a new k8s version available.\n\n## How to contribute to docs\n\nThe docs are published off of three branches:\n\n- `book-v4`: [book.kubebuilder.io](https://book.kubebuilder.io) -- current docs\n- `book-v3`: [book-v3.book.kubebuilder.io](https://book-v3.book.kubebuilder.io) -- legacy docs\n- `book-v2`: [book-v2.book.kubebuilder.io](https://book-v2.book.kubebuilder.io) -- legacy docs\n- `book-v1`: [book-v1.book.kubebuilder.io](https://book-v1.book.kubebuilder.io) -- legacy docs\n- `master`: [master.book.kubebuilder.io](https://master.book.kubebuilder.io) -- \"nightly\" docs\n\nSee [VERSIONING.md](VERSIONING.md#book-releases) for more information.\n\nThere are certain writing style guidelines for Kubernetes documentation, checkout [style guide](https://kubernetes.io/docs/contribute/style/style-guide/) for more information.\n\n### How to preview the changes performed in the docs\n\nCheck the CI job after to do the Pull Request and then, click on in the `Details` of `netlify/kubebuilder/deploy-preview`\n\n## Community, discussion and support\n\nLearn how to engage with the Kubernetes community on the [community page](http://kubernetes.io/community/).\n\nYou can reach the maintainers of this project at:\n\n- [Slack](http://slack.k8s.io/)\n- [Mailing List](https://groups.google.com/forum/#!forum/kubebuilder)\n\n## Becoming a reviewer or approver\n\nContributors may eventually become official reviewers or approvers in\nKubebuilder and the related repositories. See\n[CONTRIBUTING-ROLES.md](docs/CONTRIBUTING-ROLES.md) for more information.\n\n## Code of conduct\n\nParticipation in the Kubernetes community is governed by the [Kubernetes Code of Conduct](code-of-conduct.md).\n\n[golangci]: https://github.com/golangci/golangci-lint\n[kind]: https://kind.sigs.k8s.io/#installation-and-usage\n[setup-envtest]: https://book.kubebuilder.io/reference/envtest\n[k8s-contrubutiong-guide]: https://www.kubernetes.dev/docs/guide/contributing/\n"
        },
        {
          "name": "DESIGN.md",
          "type": "blob",
          "size": 5.73046875,
          "content": "# Kubebuilder Design Principles\n\nThis lays out some of the guiding design principles behind the Kubebuilder\nproject and its various components.\n\n## Overarching\n\n* **Libraries Over Code Generation**: Generated code is messy to maintain,\n  hard for humans to change and understand, and hard to update.  Library\n  code is easy to update (just increase your dependency version), easier\n  to version using existing mechanisms, and more concise.\n\n* **Copy-pasting is bad**: Copy-pasted code suffers from similar problems\n  as code generation, except more acutely.  Copy-pasted code is nearly\n  impossible to easy update, and frequently suffers from bugs and\n  misunderstandings.  If something is being copy-pasted, it should\n  refactored into a library component or remote\n  [kustomize](https://sigs.k8s.io/kustomize) base.\n\n* **Common Cases Should Be Easy**: The 80-90% common cases should be\n  simple and easy for users to understand.\n\n* **Uncommon Cases Should Be Possible**: There shouldn't be situations\n  where it's downright impossible to do something within\n  controller-runtime or controller-tools. It may take extra digging or\n  coding, and it may involve interoperating with lower-level components,\n  but it should be possible without unreasonable friction.\n\n## Kubebuilder\n\n* **Kubebuilder Has Opinions**: Kubebuilder exists as an opinionated\n  project generator.  It should strive to give users a reasonable project\n  layout that's simple enough to understand when getting started, but\n  provides room to grow.  It might not match everyone's opinions, but it\n  should strive to be useful to most.\n\n* **Batteries Included**: Kubebuilder projects should contain enough\n  deployment information to reasonably develop and run the scaffolded\n  project.  This includes testing, deployment files, and development\n  infrastructure to go from code to running containers.\n\n## controller-tools and controller-runtime\n\n* **Sufficient But Composable**: controller-tools and controller-runtime\n  should be sufficient for building a custom controller by hand.  While\n  scaffolding and additional libraries may make life easier, building\n  without should be as painless as possible.  That being said, they should\n  strive to be usable as building blocks for higher-level libraries as\n  well.\n\n* **Self-Sufficient Docs**: controller-tools and controller-runtime should\n  strive to have self-sufficient docs (i.e. documentation that doesn't\n  require reading other libraries' documentation for common use cases).\n  Examples should be plentiful.\n\n* **Contained Arcana**: Developers should not need to be experts in\n  Kubernetes API machinery to develop controllers, but those familiar with\n  Kubernetes API machinery should not feel out of place.  Abstractions\n  should be intuitive to new users but feel familiar to experienced ones.\n  Abstractions should embrace the concepts of Kubernetes (e.g. declarative\n  idempotent reconcilers) while simplifying the details.\n\n## controller-runtime\n\n* **Abstractions Should Be Layered**: Abstractions should be built on top\n  of lower layers, such that advanced users can write custom logic while\n  still working within the existing model.  For instance, the controller\n  builder is built on top of the event, source, and handler helpers, which\n  are in turn built for use with the event, source, and handler\n  interfaces.\n\n* **Repetitive Stress Injuries Are Bad**:\n  When possible, commonly used pieces should be exposed in a way that\n  enables clear, concise code.  This includes aliasing groups of\n  functionality under \"alias\" or \"prelude\" packages to avoid having 40\n  lines of imports, including common idioms as flexible helpers, and\n  infering resource information from the user's object types in client\n  code.\n\n* **A Little Bit of Magic Goes a Long Way**: In absence of generics,\n  reflection is acceptable, especially when it leads to clearer, conciser\n  code.  However, when possible interfaces that use reflection should be\n  designed to avoid requiring the end-developer to use type assertions,\n  string splitting, which are error-prone and repetitive.  These should be\n  dealt with inside controller-runtime internals.\n\n* **Defaults Over Constructors**: When not a huge performance impact,\n  favor auto-defaulting and `Options` structs over constructors.\n  Constructors quickly become unclear due to lack of names associated\n  with values, and don't work well with optional values.\n\n## Development\n\n* **Words Are Better Than Letters**: Don't abbreviate variable names\n  unless it's blindingly obvious what they are (e.g. `ctx` for `Context`).\n  Single- and double-letter method receivers are acceptable, but single-\n  and double-letter variables quickly become confusing the longer a code\n  block gets.\n\n* **Well-commented code**: Code should be commented and given Godocs, even\n  private methods and functions. It may *seem* obvious what they do at the\n  time and why, but you might forget, and others will certainly come along.\n\n* **Test Behaviors**: Test cases should be comprehensible as sets of\n  expected behaviors.  Test cases read without code (e.g. just using `It`,\n  `Describe`, `Context`, and `By` lines) should still be able to explain\n  what's required of the tested interface. Testing behaviors makes\n  internal refactors easier, and makes reading tests easier.\n\n* **Real Components Over Mocks**: Avoid mocks and recording actions. Mocks\n  tend to be brittle and gradually become more complicated over time (e.g.\n  fake client implementations tend to grow into poorly-written, incomplete\n  API servers).  Recording of actions tends to lead to brittle tests that\n  requires changes during refactors.  Instead, test that the end desired\n  state is correct.  Test the way the world should be, without caring how\n  it got there, and provide easy ways to set up the real components so\n  that mocks aren't required.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.08984375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 6.9072265625,
          "content": "#!/usr/bin/env bash\n\n#  Copyright 2023 The Kubernetes Authors.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n\n#\n# Makefile with some common workflow for dev, build and test\n#\nexport GOPROXY?=https://proxy.golang.org/\n\n# Get the currently used golang install path (in GOPATH/bin, unless GOBIN is set)\nifeq (,$(shell go env GOBIN))\nGOBIN=$(shell go env GOPATH)/bin\nelse\nGOBIN=$(shell go env GOBIN)\nendif\n\n##@ General\n\n# The help target prints out all targets with their descriptions organized\n# beneath their categories. The categories are represented by '##@' and the\n# target descriptions by '##'. The awk command is responsible for reading the\n# entire set of makefiles included in this invocation, looking for lines of the\n# file as xyz: ## something, and then pretty-format the target and help. Then,\n# if there's a line with ##@ something, that gets pretty-printed as a category.\n# More info on the usage of ANSI control characters for terminal formatting:\n# https://en.wikipedia.org/wiki/ANSI_escape_code#SGR_parameters\n# More info on the awk command:\n# http://linuxcommand.org/lc3_adv_awk.php\n\n.PHONY: help\nhelp: ## Display this help\n\t@awk 'BEGIN {FS = \":.*##\"; printf \"\\nUsage:\\n  make \\033[36m<target>\\033[0m\\n\"} /^[a-zA-Z_0-9-]+:.*?##/ { printf \"  \\033[36m%-15s\\033[0m %s\\n\", $$1, $$2 } /^##@/ { printf \"\\n\\033[1m%s\\033[0m\\n\", substr($$0, 5) } ' $(MAKEFILE_LIST)\n\n##@ Build\n\nLD_FLAGS=-ldflags \" \\\n    -X main.kubeBuilderVersion=$(shell git describe --tags --dirty --broken) \\\n    -X main.goos=$(shell go env GOOS) \\\n    -X main.goarch=$(shell go env GOARCH) \\\n    -X main.gitCommit=$(shell git rev-parse HEAD) \\\n    -X main.buildDate=$(shell date -u +'%Y-%m-%dT%H:%M:%SZ') \\\n    \"\n.PHONY: build\nbuild: ## Build the project locally\n\tgo build $(LD_FLAGS) -o bin/kubebuilder ./cmd\n\n.PHONY: install\ninstall: build ## Build and install the binary with the current source code. Use it to test your changes locally.\n\trm -f $(GOBIN)/kubebuilder\n\tcp ./bin/kubebuilder $(GOBIN)/kubebuilder\n\n##@ Development\n\n.PHONY: generate\ngenerate: generate-testdata generate-docs ## Update/generate all mock data. You should run this commands to update the mock data after your changes.\n\tgo mod tidy\n\tmake remove-spaces\n\n.PHONY: remove-spaces\nremove-spaces:\n\t@echo \"Removing trailing spaces\"\n\t@bash -c ' \\\n\t\tif [[ \"$$(uname)\" == \"Linux\" ]]; then \\\n\t\t\tfind . -type f -name \"*.md\" -exec sed -i \"s/[[:space:]]*$$//\" {} + || true; \\\n\t\telse \\\n\t\t\tfind . -type f -name \"*.md\" -exec sed -i \"\" \"s/[[:space:]]*$$//\" {} + || true; \\\n\t\tfi'\n\n.PHONY: generate-testdata\ngenerate-testdata: ## Update/generate the testdata in $GOPATH/src/sigs.k8s.io/kubebuilder\n\tchmod -R +w testdata/\n\trm -rf testdata/\n\t./test/testdata/generate.sh\n\n.PHONY: generate-docs\ngenerate-docs: ## Update/generate the docs\n\t./hack/docs/generate.sh\n\n.PHONY: generate-charts\ngenerate-charts: build ## Re-generate the helm chart testdata only\n\trm -rf testdata/project-v4-with-plugins/dist/chart\n\t(cd testdata/project-v4-with-plugins && ../../bin/kubebuilder edit --plugins=helm/v1-alpha)\n\n.PHONY: check-docs\ncheck-docs: ## Run the script to ensure that the docs are updated\n\t./hack/docs/check.sh\n\n.PHONY: lint\nlint: golangci-lint yamllint ## Run golangci-lint linter & yamllint\n\t$(GOLANGCI_LINT) run\n\n.PHONY: lint-fix\nlint-fix: golangci-lint ## Run golangci-lint linter and perform fixes\n\t$(GOLANGCI_LINT) run --fix\n\n.PHONY: lint-config\nlint-config: golangci-lint ## Verify golangci-lint linter configuration\n\t$(GOLANGCI_LINT) config verify\n\n.PHONY: yamllint\nyamllint:\n\t@files=$$(find testdata -name '*.yaml' ! -path 'testdata/*/dist/*'); \\\n    \tdocker run --rm $$(tty -s && echo \"-it\" || echo) -v $(PWD):/data cytopia/yamllint:latest $$files -d \"{extends: relaxed, rules: {line-length: {max: 120}}}\" --no-warnings\n\nGOLANGCI_LINT = $(shell pwd)/bin/golangci-lint\ngolangci-lint:\n\t@[ -f $(GOLANGCI_LINT) ] || { \\\n\tset -e ;\\\n\tcurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(shell dirname $(GOLANGCI_LINT)) v1.62.2 ;\\\n\t}\n\n.PHONY: apidiff\napidiff: go-apidiff ## Run the go-apidiff to verify any API differences compared with origin/master\n\t$(GOBIN)/go-apidiff master --compare-imports --print-compatible --repo-path=.\n\n.PHONY: go-apidiff\ngo-apidiff:\n\tgo install github.com/joelanford/go-apidiff@v0.6.1\n\n##@ Tests\n\n.PHONY: test\ntest: test-unit test-integration test-testdata test-book test-license ## Run the unit and integration tests (used in the CI)\n\n.PHONY: test-unit\nTEST_PKGS := ./pkg/... ./test/e2e/utils/...\ntest-unit: ## Run the unit tests\n\tgo test -race $(TEST_PKGS)\n\n.PHONY: test-coverage\ntest-coverage: ## Run unit tests creating the output to report coverage\n\t- rm -rf *.out  # Remove all coverage files if exists\n\tgo test -race -failfast -tags=integration -coverprofile=coverage-all.out -coverpkg=\"./pkg/cli/...,./pkg/config/...,./pkg/internal/...,./pkg/machinery/...,./pkg/model/...,./pkg/plugin/...,./pkg/plugins/golang\" $(TEST_PKGS)\n\n.PHONY: test-integration\ntest-integration: ## Run the integration tests\n\t./test/integration.sh\n\n.PHONY: check-testdata\ncheck-testdata: ## Run the script to ensure that the testdata is updated\n\t./test/testdata/check.sh\n\n.PHONY: test-testdata\ntest-testdata: ## Run the tests of the testdata directory\n\t./test/testdata/test.sh\n\n.PHONY: test-e2e-local\ntest-e2e-local: ## Run the end-to-end tests locally\n\t## To keep the same kind cluster between test runs, use `SKIP_KIND_CLEANUP=1 make test-e2e-local`\n\t./test/e2e/local.sh\n\n.PHONY: test-e2e-ci\ntest-e2e-ci: ## Run the end-to-end tests (used in the CI)`\n\t./test/e2e/ci.sh\n\n.PHONY: test-book\ntest-book: ## Run the cronjob tutorial's unit tests to make sure we don't break it\n\tcd ./docs/book/src/cronjob-tutorial/testdata/project && make test\n\tcd ./docs/book/src/multiversion-tutorial/testdata/project && make test\n\tcd ./docs/book/src/getting-started/testdata/project && make test\n\n.PHONY: test-license\ntest-license:  ## Run the license check\n\t./test/check-license.sh\n\n.PHONY: test-spaces\ntest-spaces:  ## Run the trailing spaces check\n\t./test/check_spaces.sh\n\n## TODO: Remove me when go/v4 plugin be removed\n## Deprecated\n.PHONY: test-legacy\ntest-legacy:  ## Run the tests to validate legacy path for webhooks\n\trm -rf  ./testdata/**legacy**/\n\t./test/testdata/legacy-webhook-path.sh\n\n.PHONY: install-helm\ninstall-helm: ## Install the latest version of Helm locally\n\t@curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash\n\n.PHONY: helm-lint\nhelm-lint: install-helm ## Lint the Helm chart in testdata\n\thelm lint testdata/project-v4-with-plugins/dist/chart\n"
        },
        {
          "name": "OWNERS",
          "type": "blob",
          "size": 0.22265625,
          "content": "# See the OWNERS docs: https://git.k8s.io/community/contributors/guide/owners.md\n\napprovers:\n  - kubebuilder-admins\n  - kubebuilder-approvers\nreviewers:\n  - kubebuilder-admins\n  - kubebuilder-reviewers\n  - kubebuilder-approvers\n"
        },
        {
          "name": "OWNERS_ALIASES",
          "type": "blob",
          "size": 0.8115234375,
          "content": "# See the OWNERS docs: https://git.k8s.io/community/contributors/guide/owners.md\n\naliases:\n  # active folks who can be contacted to perform admin-related\n  # tasks on the repo, or otherwise approve any PRs.\n  kubebuilder-admins:\n    - camilamacedo86\n    - varshaprasad96\n\n  # non-admin folks who can approve any PRs in the repo\n  kubebuilder-approvers:\n    - Kavinjsir\n\n  # folks who can review and LGTM any PRs in the repo (doesn't include\n  # approvers & admins -- those count too via the OWNERS file)\n  kubebuilder-reviewers:\n    - rashmigottipati\n\n  # folks who may have context on ancient history,\n  # but are no longer directly involved\n  kubebuilder-emeritus-approvers:\n  - adirio\n  - directxman12\n  - droot\n  - estroz\n  - jmrodri\n  - joelanford\n  - mengqiy\n  - pwittrock\n\n  kubebuilder-emeritus-reviewers:\n  - everettraven\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.28125,
          "content": "> ⚠️ **IMPORTANT NOTICE:** Images under `gcr.io/kubebuilder/` Will Be Unavailable Soon\n>\n> **If your project uses `gcr.io/kubebuilder/kube-rbac-proxy`** it will be affected.\n> Your project may fail to work if the image cannot be pulled. **You must move as soon as possible**, sometime from early 2025, the GCR will go away.\n>\n> The usage of the project [kube-rbac-proxy](https://github.com/brancz/kube-rbac-proxy) was discontinued from Kubebuilder\n> and replaced for similar protection using `authn/authz` via Controller-Runtime's feature [WithAuthenticationAndAuthorization](https://pkg.go.dev/sigs.k8s.io/controller-runtime@v0.18.4/pkg/metrics/filters#WithAuthenticationAndAuthorization).\n>\n> For more information and guidance see the discussion https://github.com/kubernetes-sigs/kubebuilder/discussions/3907\n\n[![Lint](https://github.com/kubernetes-sigs/kubebuilder/actions/workflows/lint.yml/badge.svg)](https://github.com/kubernetes-sigs/kubebuilder/actions/workflows/lint.yml)\n[![Unit tests](https://github.com/kubernetes-sigs/kubebuilder/actions/workflows/unit-tests.yml/badge.svg)](https://github.com/kubernetes-sigs/kubebuilder/actions/workflows/unit-tests.yml)\n[![Go Report Card](https://goreportcard.com/badge/sigs.k8s.io/kubebuilder)](https://goreportcard.com/report/sigs.k8s.io/kubebuilder)\n[![Coverage Status](https://coveralls.io/repos/github/kubernetes-sigs/kubebuilder/badge.svg?branch=master)](https://coveralls.io/github/kubernetes-sigs/kubebuilder?branch=master)\n[![Latest release](https://badgen.net/github/release/kubernetes-sigs/kubebuilder)](https://github.com/kubernetes-sigs/kubebuilder/releases)\n\n## Kubebuilder\n\nKubebuilder is a framework for building Kubernetes APIs using [custom resource definitions (CRDs)](https://kubernetes.io/docs/tasks/access-kubernetes-api/extend-api-custom-resource-definitions).\n\nSimilar to web development frameworks such as *Ruby on Rails* and *SpringBoot*,\nKubebuilder increases velocity and reduces the complexity managed by\ndevelopers for rapidly building and publishing Kubernetes APIs in Go.\nIt builds on top of the canonical techniques used to build the core Kubernetes APIs to provide simple abstractions that reduce boilerplate and toil.\n\nKubebuilder does **not** exist as an example to *copy-paste*, but instead provides powerful libraries and tools\nto simplify building and publishing Kubernetes APIs from scratch. It\nprovides a plugin architecture allowing users to take advantage of optional helpers\nand features. To learn more about this see the [Plugin section][plugin-section].\n\nKubebuilder is developed on top of the [controller-runtime][controller-runtime] and [controller-tools][controller-tools] libraries.\n\n### Kubebuilder is also a library\n\nKubebuilder is extensible and can be used as a library in other projects.\n[Operator-SDK][operator-sdk] is a good example of a project that uses Kubebuilder as a library.\n[Operator-SDK][operator-sdk] uses the plugin feature to include non-Go operators _e.g. operator-sdk's Ansible and Helm-based language Operators_.\n\nTo learn more see [how to create your own plugins][your-own-plugins].\n\n### Installation\n\nIt is strongly recommended that you use a released version. Release binaries are available on the [releases](https://github.com/kubernetes-sigs/kubebuilder/releases) page.\nFollow the [instructions](https://book.kubebuilder.io/quick-start.html#installation) to install Kubebuilder.\n\n## Getting Started\n\nSee the [Getting Started](https://book.kubebuilder.io/quick-start.html) documentation.\n\n![Quick Start](docs/gif/kb-demo.v3.11.1.svg)\n\nAlso, ensure that you check out the [Deploy Image](./docs/book/src/plugins/available/deploy-image-plugin-v1-alpha.md)\nPlugin. This plugin allows users to scaffold API/Controllers to deploy and manage an\nOperand (image) on the cluster following the guidelines and best practices. It abstracts the\ncomplexities of achieving this goal while allowing users to customize the generated code.\n\n## Documentation\n\nCheck out the Kubebuilder [book](https://book.kubebuilder.io).\n\n## Resources\n\n- Kubebuilder Book: [book.kubebuilder.io](https://book.kubebuilder.io)\n- GitHub Repo: [kubernetes-sigs/kubebuilder](https://github.com/kubernetes-sigs/kubebuilder)\n- Slack channel: [#kubebuilder](https://kubernetes.slack.com/messages/#kubebuilder)\n- Google Group: [kubebuilder@googlegroups.com](https://groups.google.com/forum/#!forum/kubebuilder)\n- Design Documents: [designs](designs/)\n- Plugin: [plugins][plugin-section]\n\n## Motivation\n\nBuilding Kubernetes tools and APIs involves making a lot of decisions and writing a lot of boilerplate.\n\nIn order to facilitate easily building Kubernetes APIs and tools using the canonical approach, this framework\nprovides a collection of Kubernetes development tools to minimize toil.\n\nKubebuilder attempts to facilitate the following developer workflow for building APIs\n\n1. Create a new project directory\n2. Create one or more resource APIs as CRDs and then add fields to the resources\n3. Implement reconcile loops in controllers and watch additional resources\n4. Test by running against a cluster (self-installs CRDs and starts controllers automatically)\n5. Update bootstrapped integration tests to test new fields and business logic\n6. Build and publish a container from the provided Dockerfile\n\n## Scope\n\nBuilding APIs using CRDs, Controllers and Admission Webhooks.\n\n## Philosophy\n\nSee [DESIGN.md](DESIGN.md) for the guiding principles of the various Kubebuilder projects.\n\nTL;DR:\n\nProvide clean library abstractions with clear and well exampled godocs.\n\n- Prefer using go *interfaces* and *libraries* over relying on *code generation*\n- Prefer using *code generation* over *1 time init* of stubs\n- Prefer *1 time init* of stubs over forked and modified boilerplate\n- Never fork and modify boilerplate\n\n## Techniques\n\n- Provide higher level libraries on top of low level client libraries\n  - Protect developers from breaking changes in low level libraries\n  - Start minimal and provide progressive discovery of functionality\n  - Provide sane defaults and allow users to override when they exist\n- Provide code generators to maintain common boilerplate that can't be addressed by interfaces\n  - Driven off of `// +` comments\n- Provide bootstrapping commands to initialize new packages\n\n## Versioning and Releasing\n\nSee [VERSIONING.md](VERSIONING.md).\n\n## Troubleshooting\n\n- ### Bugs and Feature Requests:\n  If you have what looks like a bug, or you would like to make a feature request, please use the [Github issue tracking system.](https://github.com/kubernetes-sigs/kubebuilder/issues)\nBefore you file an issue, please search existing issues to see if your issue is already covered.\n\n- ### Slack\n  For realtime discussion,  you can join the [#kubebuilder](https://slack.k8s.io/#kubebuilder) slack channel. Slack requires registration, but the Kubernetes team is open invitation to anyone to register here. Feel free to come and ask any questions.\n\n## Contributing\n\nContributions are greatly appreciated. The maintainers actively manage the issues list, and try to highlight issues suitable for newcomers.\nThe project follows the typical GitHub pull request model. See [CONTRIBUTING.md](CONTRIBUTING.md) for more details.\nBefore starting any work, please either comment on an existing issue, or file a new one.\n\n## Operating Systems Supported\n\nCurrently, Kubebuilder officially supports macOS and Linux platforms. If you are using a Windows OS, you may encounter issues.\nContributions towards supporting Windows are welcome.\n\n## Versions Compatibility and Supportability\n\nProjects created by Kubebuilder contain a `Makefile` that installs tools at versions defined during project creation. The main tools included are:\n\n- [kustomize](https://github.com/kubernetes-sigs/kustomize)\n- [controller-gen](https://github.com/kubernetes-sigs/controller-tools)\n- [setup-envtest](https://github.com/kubernetes-sigs/controller-runtime/tree/main/tools/setup-envtest)\n\nAdditionally, these projects include a `go.mod` file specifying dependency versions.\nKubebuilder relies on [controller-runtime](https://github.com/kubernetes-sigs/controller-runtime) and its Go and Kubernetes dependencies.\nTherefore, the versions defined in the `Makefile` and `go.mod` files are the ones that have been tested, supported, and recommended.\n\nEach minor version of Kubebuilder is tested with a specific minor version of client-go.\nWhile a Kubebuilder minor version *may* be compatible with other client-go minor versions,\nor other tools this compatibility is not guaranteed, supported, or tested.\n\nThe minimum Go version required by Kubebuilder is determined by the highest minimum\nGo version required by its dependencies. This is usually aligned with the minimum\nGo version required by the corresponding `k8s.io/*` dependencies.\n\nCompatible `k8s.io/*` versions, client-go versions, and minimum Go versions can be found in the `go.mod`\nfile scaffolded for each project for each [tag release](https://github.com/kubernetes-sigs/kubebuilder/tags).\n\n**Example:** For the `4.1.1` release, the minimum Go version compatibility is `1.22`.\nYou can refer to the samples in the testdata directory of the tag released [v4.1.1](https://github.com/kubernetes-sigs/kubebuilder/tree/v4.1.1/testdata),\nsuch as the [go.mod](https://github.com/kubernetes-sigs/kubebuilder/blob/v4.1.1/testdata/project-v4/go.mod#L3) file for `project-v4`. You can also check the tools versions supported and\ntested for this release by examining the [Makefile](https://github.com/kubernetes-sigs/kubebuilder/blob/v4.1.1/testdata/project-v4/Makefile#L160-L165).\n\n## Community Meetings\n\nThe following meetings happen biweekly:\n\n- Kubebuilder Meeting\n\nYou are more than welcome to attend. For further info join to [kubebuilder@googlegroups.com](https://groups.google.com/g/kubebuilder).\nEvery month, our team meets on the first Thursday at 11:00 PT (Pacific Time) to discuss our progress and plan for the upcoming weeks.\nPlease note that we have been syncing more frequently offline via Slack lately. However, if you add a topic to the agenda, we will hold the meeting as scheduled.\nAdditionally, we can use this channel to demonstrate new features.\n\n[operator-sdk]: https://github.com/operator-framework/operator-sdk\n[plugin-section]: https://book.kubebuilder.io/plugins/plugins.html\n[controller-runtime]: https://github.com/kubernetes-sigs/controller-runtime\n[your-own-plugins]: https://book.kubebuilder.io/plugins/extending\n[controller-tools]: https://github.com/kubernetes-sigs/controller-tools\n"
        },
        {
          "name": "RELEASE.md",
          "type": "blob",
          "size": 7.1220703125,
          "content": "# Release Process\n\nThe Kubebuilder Project is released on an as-needed basis. The process is as follows:\n\n**Note:** Releases are done from the `release-MAJOR.MINOR` branches. For PATCH releases it is not required\nto create a new branch. Instead, you will just need to ensure that all major fixes are cherry-picked into the respective\n`release-MAJOR.MINOR` branch. To know more about versioning check https://semver.org/.\n\n**Note:** Before `3.5.*` release this project was released based on `MAJOR`. A change to the\nprocess was done to ensure that we have an aligned process under the org (similar to `controller-runtime` and\n`controller-tools`) and to make it easier to produce patch releases.\n\n## How to do a release\n\n### Create the new branch and the release tag\n\n1. Create a new branch `git checkout -b release-<MAJOR.MINOR>` from master\n2. Push the new branch to the remote repository\n\n### Now, let's generate the changelog\n\n1. Create the changelog from the new branch `release-<MAJOR.MINOR>` (`git checkout release-<MAJOR.MINOR>`).\n   You will need to use the [kubebuilder-release-tools][kubebuilder-release-tools] to generate release notes. See [here][release-notes-generation]\n\n> **Note**\n> - You will need to have checkout locally from the remote repository the previous branch\n> - Also, ensure that you fetch all tags from the remote `git fetch --all --tags`\n> - Also, if you face issues to generate the release notes you might want to able to sort it out by running i.e.:\n> `go run sigs.k8s.io/kubebuilder-release-tools/notes --use-upstream=false --from=v3.11.0 --branch=release-X`\n\n\n### Draft a new release from GitHub\n\n1. Create a new tag with the correct version from the new `release-<MAJOR.MINOR>` branch\n2. Verify the Release Github Action. It should build the assets and publish in the draft release\n3. You also need to manually add the changelog generated above on the release page and publish it. Now, the code source is released !\n\n### Update the website docs (https://book.kubebuilder.io/quick-start.html)\n\n1. Push a PR to update the `book-v3` branch with the changes of the latest release branch created (`release-<MAJOR.MINOR>`)\n2. Ping in the [Kubebuilder Slack channel](https://kubernetes.slack.com/archives/CAR30FCJZ) and ask for reviews.\n\n### When the release be done and the website update: Announce the new release:\n\n1. Announce the new release on the Slack channel, i.e:\n\n````\n:announce: Kubebuilder v3.5.0 has been released!\nThis release includes a Kubernetes dependency bump to v1.24.\nFor more info, see the release page: https://github.com/kubernetes-sigs/kubebuilder/releases/tag/v3.5.0\n :tada:  Thanks to all our contributors!\n````\n\n2. Announce the new release via email is sent to `kubebuilder@googlegroups.com` with the subject `[ANNOUNCE] Kubebuilder $VERSION is released`\n\n\n## HEAD releases\n\nThe binaries releases for HEAD are available here:\n\n- [kubebuilder-release-master-head-darwin-amd64.tar.gz](https://storage.googleapis.com/kubebuilder-release/kubebuilder-release-master-head-darwin-amd64.tar.gz)\n- [kubebuilder-release-master-head-linux-amd64.tar.gz](https://storage.googleapis.com/kubebuilder-release/kubebuilder-release-master-head-linux-amd64.tar.gz)\n\n## How the releases are configured\n\nThe releases occur in an account in the Google Cloud (See [here](https://console.cloud.google.com/cloud-build/builds?project=kubebuilder)) using Cloud Build.\n\n### To build the Kubebuilder CLI binaries:\n\nA trigger GitHub action [release](.github/workflows/release.yml) is trigged when a new tag is pushed.\nThis action will caall the job [./build/.goreleaser.yml](./build/.goreleaser.yml).\n\n###  (Deprecated) - To build the Kubebuilder-tools: (Artifacts required to use ENV TEST)\n\n> We no longer build the artifacts and the promotion of those is deprecated. For more info\nsee: https://github.com/kubernetes-sigs/kubebuilder/discussions/4082\n\nKubebuilder projects requires artifacts which are used to do test with ENV TEST (when we call `make test` target)\nThese artifacts can be checked in the service page: https://storage.googleapis.com/kubebuilder-tools\n\nThe build is made from the branch [tools-releases](https://github.com/kubernetes-sigs/kubebuilder/tree/tools-releases) and the trigger will call the `build/cloudbuild_tools.yaml` passing\nas argument the architecture and the SO that should be used, e.g:\n\n<img width=\"553\" alt=\"Screenshot 2022-04-30 at 10 15 41\" src=\"https://user-images.githubusercontent.com/7708031/166099666-ae9cd2df-73fe-47f6-a987-464f63df9a19.png\">\n\nFor further information see the [README](https://github.com/kubernetes-sigs/kubebuilder/blob/tools-releases/README.md).\n\n### (Deprecated) - To build the `kube-rbac-proxy` images:\n\n> We no longer build the images and the promotion of those images is deprecated. For more info\nsee: https://github.com/kubernetes-sigs/kubebuilder/discussions/3907\n\nThese images are built from the project [brancz/kube-rbac-proxy](https://github.com/brancz/kube-rbac-proxy).\nThe projects built with Kubebuilder creates a side container with `kube-rbac-proxy` to protect the Manager.\n\nThese images are can be checked in the consolse, see [here](https://console.cloud.google.com/gcr/images/kubebuilder/GLOBAL/kube-rbac-proxy).\n\nThe project `kube-rbac-proxy` is in the process to be donated to the k8s org. However, it is going on for a long time and then,\nwe have no ETA for that to occur. When that occurs we can automate this process. But until there we need to generate these images\nby bumping the versions/tags released by `kube-rbac-proxy` on the branch\n[kube-rbac-proxy-releases](https://github.com/kubernetes-sigs/kubebuilder/tree/kube-rbac-proxy-releases)\nthen the `build/cloudbuild_kube-rbac-proxy.yaml` will generate the images.\n\nTo check an example, see the pull request [#2578](https://github.com/kubernetes-sigs/kubebuilder/pull/2578).\n\n**Note**: we cannot use the images produced by the project `kube-rbac-proxy` because we need to ensure\nto Kubebuilder users that these images will be available.\n\n### (Deprecated) - To build the `gcr.io/kubebuilder/pr-verifier` images:\n\n> We are working on to move all out from GCP Kubebuilder project. For further information see: https://github.com/kubernetes/k8s.io/issues/2647#issuecomment-2111182864\n\nThese images are used to verify the PR title and description. They are built from [kubernetes-sigs/kubebuilder-release-tools](https://github.com/kubernetes-sigs/kubebuilder-release-tools/).\nIn Kubebuilder, we have been using this project via the GitHub action [.github/workflows/verify.yml](.github/workflows/verify.yml)\nand not the image, see:\n\n```yaml\n  verify:\n    name: Verify PR contents\n    runs-on: ubuntu-latest\n    steps:\n    - name: Verifier action\n      id: verifier\n      uses: kubernetes-sigs/kubebuilder-release-tools@v0.1.1\n      with:\n        github_token: ${{ secrets.GITHUB_TOKEN }}\n```\n\nHowever, the image should still be built and maintained since other projects under the org might be using them.\n\n[kubebuilder-release-tools]: https://github.com/kubernetes-sigs/kubebuilder-release-tools\n[release-notes-generation]: https://github.com/kubernetes-sigs/kubebuilder-release-tools/blob/master/README.md#release-notes-generation\n[release-process]: https://github.com/kubernetes-sigs/kubebuilder/blob/master/VERSIONING.md#releasing\n"
        },
        {
          "name": "SECURITY_CONTACTS",
          "type": "blob",
          "size": 0.5927734375,
          "content": "# Defined below are the security contacts for this repo.\n#\n# They are the contact point for the Product Security Team to reach out\n# to for triaging and handling of incoming issues.\n#\n# The below names agree to abide by the\n# [Embargo Policy](https://github.com/kubernetes/sig-release/blob/master/security-release-process-documentation/security-release-process.md#embargo-policy)\n# and will be removed and replaced if they violate that agreement.\n#\n# DO NOT REPORT SECURITY VULNERABILITIES DIRECTLY TO THESE NAMES, FOLLOW THE\n# INSTRUCTIONS AT https://kubernetes.io/security/\n\ncamilamacedo86\nvarshaprasad96\n"
        },
        {
          "name": "VERSIONING.md",
          "type": "blob",
          "size": 2.3779296875,
          "content": "# Versioning and Releasing for Kubebuilder\n\nWe (mostly) follow the [common Kubebuilder versioning\nguidelines][guidelines], and use the corresponding tooling and PR process\ndescribed there.\n\nFor the purposes of the aforementioned guidelines, Kubebuilder counts as\na \"CLI project\".\n\n[guidelines]: https://sigs.k8s.io/kubebuilder-release-tools/VERSIONING.md\n\n## Compatibility\n\nNote that we generally do not support older release branches, except in\nextreme circumstances.\n\nBear in mind that changes to scaffolding generally constitute breaking\nchanges -- see [below](#understanding-the-versions) for more details.\n\n## Releasing\n\nWhen releasing, you'll need to:\n\n- to update references in [the build directory](build/) to the latest\n  version of the [envtest tools](#tools-releases) **before tagging the\n  release.**\n\n- reset the book branch: see [below](#book-releases)\n\nYou may also want to check that the book is generating the marker docs off\nthe latest controller-tools release.  That info is stored in\n[docs/book/install-and-build.sh](/docs/book/install-and-build.sh).\n\n## Book Releases\n\nThe book's main version (https://book.kubebuilder.io) is published off of\nthe [book-v3][book-branch] (a version built off the main branch can be\nfound at https://master.book.kubebuilder.io).\n\nDocs changes that aren't specific to a new feature should be\ncherry-picked to the aforementioned branch to get them to be published.\nThe cherry-picks will automatically be published to the book once their PR\nmerges.\n\n**When you publish a Kubebuilder release**, be sure to also submit a PR\nthat merges the main branch into [book-v3][book-branch], so that it\ndescribes the latest changes in the new release.\n\n[book-branch]: https://github.com/kubernetes-sigs/kubebuilder/tree/tools-releases\n\n## Tools Releases\n\nIn order to update the [envtest tools][envtest-ref], you'll need to do an\nupdate to the [tools-releases branch][tools-branch].  Simply submit a PR\nagainst that branch that changes all references to the current version to\nthe desired next version.  Once the PR is merged, Google Cloud Build will\ntake care of building and publishing the artifacts.\n\n[envtest-ref]: https://book.kubebuilder.io/reference/artifacts.html\n[tools-branch]: https://github.com/kubernetes-sigs/kubebuilder/tree/tools-releases\n[kb-releases]:https://github.com/kubernetes-sigs/kubebuilder/releases\n[cli-plugins-versioning]:docs/book/src/plugins/extending#plugin-versioning\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "code-of-conduct.md",
          "type": "blob",
          "size": 0.1435546875,
          "content": "# Kubernetes Community Code of Conduct\n\nPlease refer to our [Kubernetes Community Code of Conduct](https://git.k8s.io/community/code-of-conduct.md)"
        },
        {
          "name": "designs",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc.go",
          "type": "blob",
          "size": 0.7109375,
          "content": "/*\nCopyright 2020 The Kubernetes Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n//go:generate go run github.com/markbates/pkger/cmd/pkger\n\n// Package kubebuilder contains pkged files compiled into the\n// go binaries.\npackage kubebuilder\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.203125,
          "content": "module sigs.k8s.io/kubebuilder/v4\n\ngo 1.23.0\n\ngodebug default=go1.23\n\nrequire (\n\tgithub.com/gobuffalo/flect v1.0.3\n\tgithub.com/onsi/ginkgo/v2 v2.22.2\n\tgithub.com/onsi/gomega v1.36.2\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/spf13/afero v1.12.0\n\tgithub.com/spf13/cobra v1.8.1\n\tgithub.com/spf13/pflag v1.0.5\n\tgolang.org/x/text v0.21.0\n\tgolang.org/x/tools v0.29.0\n\tsigs.k8s.io/yaml v1.4.0\n)\n\nrequire (\n\tgithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc // indirect\n\tgithub.com/go-logr/logr v1.4.2 // indirect\n\tgithub.com/go-task/slim-sprig/v3 v3.0.0 // indirect\n\tgithub.com/google/go-cmp v0.6.0 // indirect\n\tgithub.com/google/pprof v0.0.0-20241210010833-40e02aabc2ad // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/kr/pretty v0.3.1 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 // indirect\n\tgithub.com/rogpeppe/go-internal v1.12.0 // indirect\n\tgithub.com/stretchr/testify v1.9.0 // indirect\n\tgolang.org/x/mod v0.22.0 // indirect\n\tgolang.org/x/net v0.34.0 // indirect\n\tgolang.org/x/sync v0.10.0 // indirect\n\tgolang.org/x/sys v0.29.0 // indirect\n\tgopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 6.70703125,
          "content": "github.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-task/slim-sprig/v3 v3.0.0 h1:sUs3vkvUymDpBKi3qH1YSqBQk9+9D/8M2mN1vB6EwHI=\ngithub.com/go-task/slim-sprig/v3 v3.0.0/go.mod h1:W848ghGpv3Qj3dhTPRyJypKRiqCdHZiAzKg9hl15HA8=\ngithub.com/gobuffalo/flect v1.0.3 h1:xeWBM2nui+qnVvNM4S3foBhCAL2XgPU+a7FdpelbTq4=\ngithub.com/gobuffalo/flect v1.0.3/go.mod h1:A5msMlrHtLqh9umBSnvabjsMrCcCpAyzglnDvkbYKHs=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/pprof v0.0.0-20241210010833-40e02aabc2ad h1:a6HEuzUHeKH6hwfN/ZoQgRgVIWFJljSWa/zetS2WTvg=\ngithub.com/google/pprof v0.0.0-20241210010833-40e02aabc2ad/go.mod h1:vavhavw2zAxS5dIdcRluK6cSGGPlZynqzFM8NdvU144=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/onsi/ginkgo/v2 v2.22.2 h1:/3X8Panh8/WwhU/3Ssa6rCKqPLuAkVY2I0RoyDLySlU=\ngithub.com/onsi/ginkgo/v2 v2.22.2/go.mod h1:oeMosUL+8LtarXBHu/c0bx2D/K9zyQ6uX3cTyztHwsk=\ngithub.com/onsi/gomega v1.36.2 h1:koNYke6TVk6ZmnyHrCXba/T/MoLBXFjeC1PtvYgw0A8=\ngithub.com/onsi/gomega v1.36.2/go.mod h1:DdwyADRjrc825LhMEkD76cHR5+pUnjhUN8GlHlRPHzY=\ngithub.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/spf13/afero v1.12.0 h1:UcOPyRBYczmFn6yvphxkn9ZEOY65cpwGKb5mL36mrqs=\ngithub.com/spf13/afero v1.12.0/go.mod h1:ZTlWwG4/ahT8W7T0WQ5uYmjI9duaLQGy3Q2OAl4sk/4=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngolang.org/x/mod v0.22.0 h1:D4nJWe9zXqHOmWqj4VMOJhvzj7bEZg4wEYa759z1pH4=\ngolang.org/x/mod v0.22.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.34.0 h1:Mb7Mrk043xzHgnRM88suvJFwzVrRfHEHJEl5/71CKw0=\ngolang.org/x/net v0.34.0/go.mod h1:di0qlW3YNM5oh6GqDGQr92MyTozJPmybPK4Ev/Gm31k=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.29.0 h1:TPYlXGxvx1MGTn2GiZDhnjPA9wZzZeGKHHmKhHYvgaU=\ngolang.org/x/sys v0.29.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/tools v0.29.0 h1:Xx0h3TtM9rzQpQuR4dKLrdglAmCEN5Oi+P74JdhdzXE=\ngolang.org/x/tools v0.29.0/go.mod h1:KMQVMRsVxU6nHCFXrBPhDB8XncLNLM0lIy/F14RP588=\ngoogle.golang.org/protobuf v1.36.1 h1:yBPeRvTftaleIgM3PZ/WBIZ7XM/eEYAaEyCwvyjq/gk=\ngoogle.golang.org/protobuf v1.36.1/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nsigs.k8s.io/yaml v1.4.0 h1:Mk1wCc2gy/F0THH0TAp1QYyJNzRm2KCLy3o5ASXVI5E=\nsigs.k8s.io/yaml v1.4.0/go.mod h1:Ejl7/uTz7PSA4eKMyQCUTnhZYNmLIl+5c2lQPGR2BPY=\n"
        },
        {
          "name": "hack",
          "type": "tree",
          "content": null
        },
        {
          "name": "netlify.toml",
          "type": "blob",
          "size": 3.9130859375,
          "content": "[build]\n    base = \"docs/book\"\n    command = \"GO_VERSION=1.23.0 ./install-and-build.sh\"\n    publish = \"docs/book/book\"\n    functions = \"docs/book/functions\"\n\n# TODO(directxman12): I don't know why, but this (functions) stanza is in the\n# docs and local `netlify dev`, but the above one (under build) is used by the\n# online version :-/\n\n# used to handle the split between v2 and v3+ download links\n[functions]\n    # relative to base directory\n    directory = \"functions\"\n\n# Standard Netlify redirects\n[[redirects]]\n    from = \"https://kubebuilder.netlify.com/*\"\n    to = \"https://book.kubebuilder.io/:splat\"\n    status = 301\n    force = true\n\n# HTTP-to-HTTPS rules\n[[redirects]]\n    from = \"http://go.kubebuilder.io/*\"\n    to = \"https://go.kubebuilder.io/:splat\"\n    status = 301\n    force = true\n\n[[redirects]]\n    from = \"http://kubebuilder.netlify.com/*\"\n    to = \"http://book.kubebuilder.io/:splat\"\n    status = 301\n    force = true\n\n# kubebuilder binary (v3+) and tarball (< v3) redirects.\n[[redirects]]\n    from = \"https://go.kubebuilder.io/dl/*\"\n    to = \"https://go.kubebuilder.io/releases/:splat\"\n    status = 301\n    force = true\n\n[[redirects]]\n    from = \"https://go.kubebuilder.io/releases\"\n    to = \"https://github.com/kubernetes-sigs/kubebuilder/releases\"\n    status = 302\n    force = true\n\n# Development branch redirect.\n[[redirects]]\n    from = \"https://go.kubebuilder.io/releases/master/:os/:arch\"\n    to = \"https://storage.googleapis.com/kubebuilder-release/kubebuilder_master_:os_:arch.tar.gz\"\n    status = 302\n    force = true\n\n# Latest redirects.\n[[redirects]]\n    from = \"https://go.kubebuilder.io/releases/latest\"\n    to = \"https://github.com/kubernetes-sigs/kubebuilder/releases/latest\"\n    status = 302\n    force = true\n\n[[redirects]]\n    from = \"https://go.kubebuilder.io/releases/latest/:os\"\n    to = \"https://go.kubebuilder.io/releases/latest/:os/amd64\"\n    status = 302\n    force = true\n\n[[redirects]]\n    from = \"https://go.kubebuilder.io/releases/latest/:os/:arch\"\n    to = \"https://github.com/kubernetes-sigs/kubebuilder/releases/latest/download/kubebuilder_:os_:arch\"\n    status = 302\n    force = true\n\n# general release redirects\n[[redirects]]\n    from = \"https://go.kubebuilder.io/releases/:version\"\n    to = \"https://github.com/kubernetes-sigs/kubebuilder/releases/v:version\"\n    status = 302\n    force = true\n\n[[redirects]]\n    from = \"https://go.kubebuilder.io/releases/:version/:os\"\n    to = \"https://go.kubebuilder.io/releases/:version/:os/amd64\"\n    status = 302\n    force = true\n\n# release download redirect\n[[redirects]]\n    from = \"https://go.kubebuilder.io/releases/:version/:os/:arch\"\n    # I don't quite know why, but netlify (or at least the dev mode) *insists*\n    # on eating every other query parameter, so just use paths instead\n    to = \"/.netlify/functions/handle-version/releases/:version/:os/:arch\"\n    # 200 --> don't redirect to the function then to whereever it says,\n    # just pretend like the function is mounted directly here\n    status = 200\n    force = true\n\n# Tools redirects.\n[[redirects]]\n    from = \"https://go.kubebuilder.io/test-tools\"\n    to = \"https://storage.googleapis.com/kubebuilder-tools\"\n    status = 302\n    force = true\n\n[[redirects]]\n    from = \"https://go.kubebuilder.io/test-tools/:k8sversion\"\n    to = \"https://storage.googleapis.com/kubebuilder-tools/?prefix=kubebuilder-tools-:k8sversion\"\n    status = 302\n    force = true\n\n[[redirects]]\n    from = \"https://go.kubebuilder.io/test-tools/:k8sversion/:os\"\n    to = \"https://storage.googleapis.com/kubebuilder-tools/kubebuilder-tools-:k8sversion-:os-amd64.tar.gz\"\n    status = 302\n    force = true\n\n[[redirects]]\n    from = \"https://go.kubebuilder.io/test-tools/:k8sversion/:os/:arch\"\n    to = \"https://storage.googleapis.com/kubebuilder-tools/kubebuilder-tools-:k8sversion-:os-:arch.tar.gz\"\n    status = 302\n    force = true\n\n# custom 404 handling -- this may need to be last -- netlify docs are unclear\n[[redirects]]\n    from = \"/*\"\n    to = \"/404.html\"\n    status = 404\n"
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "roadmap",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "test.sh",
          "type": "blob",
          "size": 0.705078125,
          "content": "#!/usr/bin/env bash\n\n# Copyright 2018 The Kubernetes Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# prow calls this file currently, but we can just use `make test` to test\n# the set of things we want.\nmake test\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_e2e.sh",
          "type": "blob",
          "size": 0.611328125,
          "content": "#!/usr/bin/env bash\n\n# Copyright 2018 The Kubernetes Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n./test/e2e/ci.sh\n"
        },
        {
          "name": "testdata",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}