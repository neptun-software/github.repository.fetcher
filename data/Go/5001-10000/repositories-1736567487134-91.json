{
  "metadata": {
    "timestamp": 1736567487134,
    "page": 91,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kelseyhightower/confd",
      "stars": 8369,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0146484375,
          "content": "bin\nvendor\npkg\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0107421875,
          "content": "bin/\n.idea/"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 2.1845703125,
          "content": "language: go\ngo:\n  - 1.x\n  - tip\nenv:\n  - VAULT_ADDR='http://127.0.0.1:8200' CONSUL_VERSION=0.9.3 ETCD_VERSION=3.3.1 DYNAMODB_VERSION=2017-02-16 VAULT_VERSION=0.10.1 ZOOKEEPER_VERSION=3.4.10 RANCHER_VERSION=0.6.0\nservices:\n  - redis\nbefore_install:\n  # install consul\n  - wget https://releases.hashicorp.com/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_linux_amd64.zip\n  - unzip consul_${CONSUL_VERSION}_linux_amd64.zip\n  - sudo mv consul /bin/\n  - consul agent -server -bootstrap-expect 1 -data-dir /tmp/consul -bind 127.0.0.1 &\n  # install etcd\n  - wget https://github.com/coreos/etcd/releases/download/v${ETCD_VERSION}/etcd-v${ETCD_VERSION}-linux-amd64.tar.gz\n  - tar xzf etcd-v${ETCD_VERSION}-linux-amd64.tar.gz\n  - sudo mv etcd-v${ETCD_VERSION}-linux-amd64/etcd /bin/\n  - sudo mv etcd-v${ETCD_VERSION}-linux-amd64/etcdctl /bin/\n  - unset ETCD_VERSION\n  - etcd &\n  # install DynamoDB\n  - sudo pip install awscli\n  - mkdir /tmp/dynamodb\n  - wget -O - https://s3-us-west-2.amazonaws.com/dynamodb-local/dynamodb_local_${DYNAMODB_VERSION}.tar.gz | tar xz --directory /tmp/dynamodb\n  - java -Djava.library.path=/tmp/dynamodb/DynamoDBLocal_lib -jar /tmp/dynamodb/DynamoDBLocal.jar -inMemory &\n  # Install rancher metadata\n  - wget https://github.com/rancher/rancher-metadata/releases/download/v${RANCHER_VERSION}/rancher-metadata.tar.gz\n  - mkdir -p ./rancher-metadata\n  - tar xzf rancher-metadata.tar.gz --strip-components=1 -C ./rancher-metadata\n  - sudo mv ./rancher-metadata/bin/rancher-metadata /bin/\n  # Install vault\n  - wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip\n  - unzip vault_${VAULT_VERSION}_linux_amd64.zip\n  - sudo mv vault /bin/\n  - vault server -dev &\n  # Install zookeeper\n  - wget http://www.eu.apache.org/dist/zookeeper/zookeeper-${ZOOKEEPER_VERSION}/zookeeper-${ZOOKEEPER_VERSION}.tar.gz\n  - tar xzf zookeeper-${ZOOKEEPER_VERSION}.tar.gz\n  - mkdir /tmp/zookeeper && cp integration/zookeeper/zoo.cfg zookeeper-${ZOOKEEPER_VERSION}/conf/zoo.cfg\n  - zookeeper-${ZOOKEEPER_VERSION}/bin/zkServer.sh start\n  # Run AWS SSM mocking server\n  - go run ./integration/ssm/main.go &\ninstall:\n  - make build\n  - sudo make install\nscript:\n  - make test\n  - make integration\n"
        },
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 6.037109375,
          "content": "### v0.16.0\n\n28f72608 Release arm64 binaries\n4528af01 Add option to specify auth backend mount path in Vault\nb51998d6 new etcdv3 implementation\nfa37c993 isFileExist() was not defined in windows\na23aa1c7 Update Vault Kubernetes authentication doc\n9b0ce8e6 Fix vendor name for logrus\nccc17eb5 fix fileStat close when open failed on windows\ne3864219 add parseBool to template_funcs\n94bf80e7 Add Kubernetes auth for Vault backend\n304efb5a Add AppRole authN for Vault backend\nfb208461 Redis Backend Updates: WatchPrefix Support, Hash Support, Standard Redis Key Naming Convention\n36d874f5 Fix bug with multiple watches for etcdv3\n1fd12493 backend/etcd: add scheme to srv discovered endpoints\na88c922a Vault TLS certificates auth method\nb77b9232 Add atoi function to template funcs and test\n\n### v0.15.0\n\n0c4cb29e Don't pass empty prefix to zookeeper nodeWalk\n5d6e2790 Update template.md - added forgotten verb\n19d6514d remove fmt.Println\n802e6a11 Added windows cmd support\n59001ca3 Fix handling of absent parameters for ssm backend\n8419c708 AWS SSM - don't treat \"ParameterNotFound\" as a fatal error\n0a09632a Add support for consul BasicAuth\nadf8d486 Fix panic during Consul client creation\n027be91f Update docker Multi-Stage build\n376d3f99 fix etcdv3 client watch: reuse previous watch to avoid memory leak\nf711530d fix(confd): etcd curl err when make integration\n\n### v0.14.0\n\n95ba861f Replace godep with dep\ncb53644c Template integration with https://github.com/xordataexchange/crypt provided values\n6da43945 add go version and git commit sha1 to version string\n8f052819 yaml/json file backend\n61652a2c Add AWS SSM Parameter Store backend\n\n### v0.13.0\n\n181e3e3 Update dependencies\n509268d Remove StackEngine backend\n3a61969 Add further installation instructions\ndd47bbb Introducing WaitPrefix for the Rancher backend\n35ffe8f Adding nested key support to Vault backend v2\nf1833a6 ETCD V3 support\n89c59d4 Feature new template func add\n2b080af added some additional text/template sorting methods\nfbea3b9 Fixes #562 by not adding the URL scheme to the node at DNS lookup time\nab93ff1 Windows support\n695e62e add trimSuffix template function\n3049df8 Add base64 encode/decode template helpers\n485b31c improved etcd watch support\n8528d3c added support to specify a redis database (in the connection string)\n\n### v0.12.0\n\n5f3f79d Change etcd node port because the official port of etcd is 2379\n9073dae Fix typo in docs\n0ea1edb Remove unnecessary loop in Consul backend.\ndbbee0a Fix travis configuration to use latest dynamoDB binary\nad5f74f Fix typo in quick-start-guide.md\n7ac1091 Upgrade Dockerfile to use latest stable Alpine which has Go 1.6\n20b3d37 add env backend integration tests\nc6622ed updated template docs\n9d57489 Specify default Vault backend node\nb34d223 Add simple redis example since one was missing from quickstart\n32d46e5 Fix typo in template-resources.md\n7c89004 Fix up Rancher metadata service description and links\n2a54c58 Fix missing braces and extra parenthesis on formatted datatime example\n6e198db Fix DynamoDB credentials handling\n705f2ee Fix dynamodb nil pointers\ne48e48f Use SVG for the build image\n6bb3c21 Add file exists function to template functions\n57b649d zookeeper watch support\n59da585 extended getenv & map template functions\nd423123 updated README for vault\ne60c2e2 Add support for redis password authentication\nf3a02e7 Adding example goreman Procfile for etcd\naae4190 updated Dockerfile.build.alpine\ncf62311 update some docs\n54f715c Add lookupSRV function.\n7afb8d6 fixed broken etcd watch support\n5a5af59 switched to new etcd client\n5d2955a Remove gb install\n1577855 Fix typos in docs/tomcat-sample.md\nd133c25 Added support for Vault backend\n071e6ab IP dns resolving function for templates\nccf2486 redis: try to recover from closed connections\n66a31bf Add support for etcd BasicAuth\nd9ea46c Added documentation for stackengine as a backend\na1dee21 add -sync-only flag\nc615c18 update checklist\n233ac99 Add more debugging output for onetime and env.\nd7f835d Create tomcat-sample.md\n\n### v0.11.0\n\n46d3c69 load template resources every interval\n6b01b27 Add Rancher Metadata backend\nbec0b60 link to the right command-line-flags doc\nbe20ca7 Fix typo in templates.md\n745cf2b add default node for zookeeper backend\n0dd4c53 Add StackEngine backend support\nf446ce4 Load AWS credentials through a provider chain\nf206b47 Add strings.Replace support\n\n### v0.10.0\n\n70cf76a move contrib to root dir\n34a0ff7 Updating README.md to include new backends\nfee8361 Fix broken links to documentation\nd9d4cb1 Use the gb tool for dep management and building.\n1ef34cb template: don't crash on template error\n7531530 Log command output on error\nfed32fe Draft: Support for DynamoDB\n7f59d50 Use correct application name for ZooKeeper example\n03a7c7e feat: add strings.Contains support\n6307c26 change opdemand emails to engine yard\n5350113 client cert config from environment variables\nb6f414e Adding better support for Consul, enabling SSL/TLS client config\ne94151b update release checklist\nce4eb5c bump to v1.0.0-dev\n503d745 remove --quiet, --debug and --verbose\nc9cefaf random doc fixes\n\n### v0.9.0\n\n8888b7a Add maintainers file\n431e31b add release checklist document\nf782957 bump etcd to v2.0.9 for integration tests\n1b2d669 *feature) add recursive get toml files.\n94fc0a6 allow override of BIN_DIR\n7cce514 log that we're skipping config file to debug\n6e0cbfc Enable watch from the config file\n0410cbd bump version to 0.8.0\nc7f53e1 add go 1.4 to travis.ci version matrix\n7a2e2f4 Add toUpper, toLower support\n4a8e079 Fix \"The event in requested index is outdated and cleared\" error\n211a5cb add --log-level flag\n0a0858c fix godeps\n821cd61 properly format error messages\n2ad79d6 general integration test nitpicks\n913eb2e hook up etcd integration tests\n2ad2fd4 Improved docs for how to use go templates to traverse json\n7b4f06a hook up consul integration tests to travis\nae640bf hook up redis integration tests\n828d568 remove unused service templates\n7d374e6 remove unused log_test\n68eb9ad Add simple redis support\nb4c103c Revert \"Added jsonGet support to template_funcs\"\n1e08562 Added jsonGet support to template_funcs\nf84b57d add scripts for building, installing and testing confd\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.44921875,
          "content": "# Contributing to Confd\n\nWant to hack on Confd? Awesome! Here are instructions to get you started. They are probably not\nperfect, please let us know if anything feels wrong or incomplete.\n\n# Who are the Maintainers?\n\n## BDFL\n\nConfd follows the timeless, highly efficient and totally unfair system known as [Benevolent dictator\nfor life](http://en.wikipedia.org/wiki/Benevolent_Dictator_for_Life).\n\nKelsey Hightower - the creator of Confd - serves as the project's BDFL. Kelsey serves as the final\narbiter of any disputes and has the final say on project direction.\n\n## Core Maintainers\n\nCore maintainers are exceptionally knowledgeable about Confd. Core maintainers are responsible for\nthe following:\n\n - respond to github issues, review and merge pull requests\n - help shape confd's roadmap\n - actively participate in feature development and general maintenance\n - answer and help users in #confd\n - interview and recruit new members as contributing maintainers\n\nPull requests which are considered minor or \"showstoppers\" can be merged with at least one core maintainer's\nLGTM, otherwise they need approval from the BDFL.\n\n### Who assigns maintainers?\n\nKelsey.\n\n### How can I become a maintainer?\n\n - make yourself useful by contributing code, bugfixes, support etc.\n - volunteer on the irc channel\n\nDon't forget: being a maintainer is a time investment. Make sure you will have time to make\nyourself available. You don't have to be a maintainer to make a difference on the project!\n"
        },
        {
          "name": "Dockerfile.build.alpine",
          "type": "blob",
          "size": 0.181640625,
          "content": "FROM golang:1.10.2-alpine\n\nRUN apk add --no-cache make git\nRUN mkdir -p /go/src/github.com/kelseyhightower/confd && \\\n  ln -s /go/src/github.com/kelseyhightower/confd /app\n\nWORKDIR /app\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.03515625,
          "content": "Copyright (c) 2013 Kelsey Hightower\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 0.27734375,
          "content": "Chris Armstrong <carmstrong@engineyard.com> (@carmstrong)\nGabriel Monroy <gmonroy@engineyard.com> (@gabrtv)\nKelsey Hightower <kelsey.hightower@gmail.com> (@kelseyhightower)\nMatthew Fisher <mfisher@engineyard.com> (@bacongobbler)\nOleksandr Kushchenko <gearok@gmail.com> (@okushchenko)\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.287109375,
          "content": ".PHONY: build install clean test integration dep release\nVERSION=`egrep -o '[0-9]+\\.[0-9a-z.\\-]+' version.go`\nGIT_SHA=`git rev-parse --short HEAD || echo`\n\nbuild:\n\t@echo \"Building confd...\"\n\t@mkdir -p bin\n\t@go build -ldflags \"-X main.GitSHA=${GIT_SHA}\" -o bin/confd .\n\ninstall:\n\t@echo \"Installing confd...\"\n\t@install -c bin/confd /usr/local/bin/confd\n\nclean:\n\t@rm -f bin/*\n\ntest:\n\t@echo \"Running tests...\"\n\t@go test `go list ./... | grep -v vendor/`\n\nintegration:\n\t@echo \"Running integration tests...\"\n\t@for i in `find ./integration -name test.sh`; do \\\n\t\techo \"Running $$i\"; \\\n\t\tbash $$i || exit 1; \\\n\t\tbash integration/expect/check.sh || exit 1; \\\n\t\trm /tmp/confd-*; \\\n\tdone\n\ndep:\n\t@dep ensure\n\nrelease:\n\t@docker build -q -t confd_builder -f Dockerfile.build.alpine .\n\t@for platform in darwin linux windows; do \\\n\t\tif [ $$platform == windows ]; then extension=.exe; fi; \\\n\t\tdocker run -it --rm -v ${PWD}:/app -e \"GOOS=$$platform\" -e \"GOARCH=amd64\" -e \"CGO_ENABLED=0\" confd_builder go build -ldflags=\"-s -w -X main.GitSHA=${GIT_SHA}\" -o bin/confd-${VERSION}-$$platform-amd64$$extension; \\\n\tdone\n\t@docker run -it --rm -v ${PWD}:/app -e \"GOOS=linux\" -e \"GOARCH=arm64\" -e \"CGO_ENABLED=0\" confd_builder go build -ldflags=\"-s -w -X main.GitSHA=${GIT_SHA}\" -o bin/confd-${VERSION}-linux-arm64;\n\t@upx bin/confd-${VERSION}-*\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.220703125,
          "content": "# confd\n\n[![Build Status](https://travis-ci.org/kelseyhightower/confd.svg?branch=master)](https://travis-ci.org/kelseyhightower/confd)\n\n`confd` is a lightweight configuration management tool focused on:\n\n* keeping local configuration files up-to-date using data stored in [etcd](https://github.com/coreos/etcd),\n  [consul](http://consul.io), [dynamodb](http://aws.amazon.com/dynamodb/), [redis](http://redis.io),\n  [vault](https://vaultproject.io), [zookeeper](https://zookeeper.apache.org), [aws ssm parameter store](https://aws.amazon.com/ec2/systems-manager/) or env vars and processing [template resources](docs/template-resources.md).\n* reloading applications to pick up new config file changes\n\n## Project Status\n\n`confd` is currently being cleaned up to build on later versions of Go and moving to adopt native support for [Go modules](https://go.dev/blog/using-go-modules). As part of this work the following major changes are being made:\n\n* The `etcd` and `etcdv3` backend are going to be merged. etcd v2 has been deprecated and both backend will now use etcdv3 client libraries.\n* The `cget`, `cgets`, `cgetv`, and `cgetvs` templates function have been removed due to an unmaintained dependency `github.com/xordataexchange/crypt/encoding/secconf`. We need to rethink encryption in the core project and rely only on the standard library going forward. In the meanwhile these template function will not work and if support is required you will need to stick with an older version of confd.\n\n## Community\n\n* IRC: `#confd` on Freenode\n* Mailing list: [Google Groups](https://groups.google.com/forum/#!forum/confd-users)\n* Website: [www.confd.io](http://www.confd.io)\n\n## Building\n\nGo 1.10 is required to build confd, which uses the new vendor directory.\n\n```\n$ mkdir -p $GOPATH/src/github.com/kelseyhightower\n$ git clone https://github.com/kelseyhightower/confd.git $GOPATH/src/github.com/kelseyhightower/confd\n$ cd $GOPATH/src/github.com/kelseyhightower/confd\n$ make\n```\n\nYou should now have confd in your `bin/` directory:\n\n```\n$ ls bin/\nconfd\n```\n\n## Getting Started\n\nBefore we begin be sure to [download and install confd](docs/installation.md).\n\n* [quick start guide](docs/quick-start-guide.md)\n\n## Next steps\n\nCheck out the [docs directory](docs) for more docs.\n"
        },
        {
          "name": "backends",
          "type": "tree",
          "content": null
        },
        {
          "name": "confd.go",
          "type": "blob",
          "size": 1.4375,
          "content": "package main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"os\"\n\t\"os/signal\"\n\t\"runtime\"\n\t\"syscall\"\n\n\t\"github.com/kelseyhightower/confd/backends\"\n\t\"github.com/kelseyhightower/confd/log\"\n\t\"github.com/kelseyhightower/confd/resource/template\"\n)\n\nfunc main() {\n\tflag.Parse()\n\tif config.PrintVersion {\n\t\tfmt.Printf(\"confd %s (Git SHA: %s, Go Version: %s)\\n\", Version, GitSHA, runtime.Version())\n\t\tos.Exit(0)\n\t}\n\tif err := initConfig(); err != nil {\n\t\tlog.Fatal(err.Error())\n\t}\n\n\tlog.Info(\"Starting confd\")\n\n\tstoreClient, err := backends.New(config.BackendsConfig)\n\tif err != nil {\n\t\tlog.Fatal(err.Error())\n\t}\n\n\tconfig.TemplateConfig.StoreClient = storeClient\n\tif config.OneTime {\n\t\tif err := template.Process(config.TemplateConfig); err != nil {\n\t\t\tlog.Fatal(err.Error())\n\t\t}\n\t\tos.Exit(0)\n\t}\n\n\tstopChan := make(chan bool)\n\tdoneChan := make(chan bool)\n\terrChan := make(chan error, 10)\n\n\tvar processor template.Processor\n\tswitch {\n\tcase config.Watch:\n\t\tprocessor = template.WatchProcessor(config.TemplateConfig, stopChan, doneChan, errChan)\n\tdefault:\n\t\tprocessor = template.IntervalProcessor(config.TemplateConfig, stopChan, doneChan, errChan, config.Interval)\n\t}\n\n\tgo processor.Process()\n\n\tsignalChan := make(chan os.Signal, 1)\n\tsignal.Notify(signalChan, syscall.SIGINT, syscall.SIGTERM)\n\tfor {\n\t\tselect {\n\t\tcase err := <-errChan:\n\t\t\tlog.Error(err.Error())\n\t\tcase s := <-signalChan:\n\t\t\tlog.Info(fmt.Sprintf(\"Captured %v. Exiting...\", s))\n\t\t\tclose(doneChan)\n\t\tcase <-doneChan:\n\t\t\tos.Exit(0)\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "config.go",
          "type": "blob",
          "size": 7.6533203125,
          "content": "package main\n\nimport (\n\t\"errors\"\n\t\"flag\"\n\t\"fmt\"\n\t\"net\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strconv\"\n\t\"strings\"\n\n\t\"github.com/BurntSushi/toml\"\n\t\"github.com/kelseyhightower/confd/backends\"\n\t\"github.com/kelseyhightower/confd/log\"\n\t\"github.com/kelseyhightower/confd/resource/template\"\n)\n\ntype TemplateConfig = template.Config\ntype BackendsConfig = backends.Config\n\n// A Config structure is used to configure confd.\ntype Config struct {\n\tTemplateConfig\n\tBackendsConfig\n\tInterval     int    `toml:\"interval\"`\n\tSRVDomain    string `toml:\"srv_domain\"`\n\tSRVRecord    string `toml:\"srv_record\"`\n\tLogLevel     string `toml:\"log-level\"`\n\tWatch        bool   `toml:\"watch\"`\n\tPrintVersion bool\n\tConfigFile   string\n\tOneTime      bool\n}\n\nvar config Config\n\nfunc init() {\n\tflag.StringVar(&config.AuthToken, \"auth-token\", \"\", \"Auth bearer token to use\")\n\tflag.StringVar(&config.Backend, \"backend\", \"etcd\", \"backend to use\")\n\tflag.BoolVar(&config.BasicAuth, \"basic-auth\", false, \"Use Basic Auth to authenticate (only used with -backend=consul and -backend=etcd)\")\n\tflag.StringVar(&config.ClientCaKeys, \"client-ca-keys\", \"\", \"client ca keys\")\n\tflag.StringVar(&config.ClientCert, \"client-cert\", \"\", \"the client cert\")\n\tflag.StringVar(&config.ClientKey, \"client-key\", \"\", \"the client key\")\n\tflag.BoolVar(&config.ClientInsecure, \"client-insecure\", false, \"Allow connections to SSL sites without certs (only used with -backend=etcd)\")\n\tflag.StringVar(&config.ConfDir, \"confdir\", \"/etc/confd\", \"confd conf directory\")\n\tflag.StringVar(&config.ConfigFile, \"config-file\", \"/etc/confd/confd.toml\", \"the confd config file\")\n\tflag.Var(&config.YAMLFile, \"file\", \"the YAML file to watch for changes (only used with -backend=file)\")\n\tflag.StringVar(&config.Filter, \"filter\", \"*\", \"files filter (only used with -backend=file)\")\n\tflag.IntVar(&config.Interval, \"interval\", 600, \"backend polling interval\")\n\tflag.BoolVar(&config.KeepStageFile, \"keep-stage-file\", false, \"keep staged files\")\n\tflag.StringVar(&config.LogLevel, \"log-level\", \"\", \"level which confd should log messages\")\n\tflag.Var(&config.BackendNodes, \"node\", \"list of backend nodes\")\n\tflag.BoolVar(&config.Noop, \"noop\", false, \"only show pending changes\")\n\tflag.BoolVar(&config.OneTime, \"onetime\", false, \"run once and exit\")\n\tflag.StringVar(&config.Prefix, \"prefix\", \"\", \"key path prefix\")\n\tflag.BoolVar(&config.PrintVersion, \"version\", false, \"print version and exit\")\n\tflag.StringVar(&config.Scheme, \"scheme\", \"http\", \"the backend URI scheme for nodes retrieved from DNS SRV records (http or https)\")\n\tflag.StringVar(&config.SRVDomain, \"srv-domain\", \"\", \"the name of the resource record\")\n\tflag.StringVar(&config.SRVRecord, \"srv-record\", \"\", \"the SRV record to search for backends nodes. Example: _etcd-client._tcp.example.com\")\n\tflag.BoolVar(&config.SyncOnly, \"sync-only\", false, \"sync without check_cmd and reload_cmd\")\n\tflag.StringVar(&config.AuthType, \"auth-type\", \"\", \"Vault auth backend type to use (only used with -backend=vault)\")\n\tflag.StringVar(&config.AppID, \"app-id\", \"\", \"Vault app-id to use with the app-id backend (only used with -backend=vault and auth-type=app-id)\")\n\tflag.StringVar(&config.UserID, \"user-id\", \"\", \"Vault user-id to use with the app-id backend (only used with -backend=value and auth-type=app-id)\")\n\tflag.StringVar(&config.RoleID, \"role-id\", \"\", \"Vault role-id to use with the AppRole, Kubernetes backends (only used with -backend=vault and either auth-type=app-role or auth-type=kubernetes)\")\n\tflag.StringVar(&config.SecretID, \"secret-id\", \"\", \"Vault secret-id to use with the AppRole backend (only used with -backend=vault and auth-type=app-role)\")\n\tflag.StringVar(&config.Path, \"path\", \"\", \"Vault mount path of the auth method (only used with -backend=vault)\")\n\tflag.StringVar(&config.Table, \"table\", \"\", \"the name of the DynamoDB table (only used with -backend=dynamodb)\")\n\tflag.StringVar(&config.Separator, \"separator\", \"\", \"the separator to replace '/' with when looking up keys in the backend, prefixed '/' will also be removed (only used with -backend=redis)\")\n\tflag.StringVar(&config.Username, \"username\", \"\", \"the username to authenticate as (only used with vault and etcd backends)\")\n\tflag.StringVar(&config.Password, \"password\", \"\", \"the password to authenticate with (only used with vault and etcd backends)\")\n\tflag.BoolVar(&config.Watch, \"watch\", false, \"enable watch support\")\n}\n\n// initConfig initializes the confd configuration by first setting defaults,\n// then overriding settings from the confd config file, then overriding\n// settings from environment variables, and finally overriding\n// settings from flags set on the command line.\n// It returns an error if any.\nfunc initConfig() error {\n\t_, err := os.Stat(config.ConfigFile)\n\tif os.IsNotExist(err) {\n\t\tlog.Debug(\"Skipping confd config file.\")\n\t} else {\n\t\tlog.Debug(\"Loading \" + config.ConfigFile)\n\t\tconfigBytes, err := os.ReadFile(config.ConfigFile)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\t_, err = toml.Decode(string(configBytes), &config)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\n\t// Update config from environment variables.\n\tprocessEnv()\n\n\tif config.LogLevel != \"\" {\n\t\tlog.SetLevel(config.LogLevel)\n\t}\n\n\tif config.SRVDomain != \"\" && config.SRVRecord == \"\" {\n\t\tconfig.SRVRecord = fmt.Sprintf(\"_%s._tcp.%s.\", config.Backend, config.SRVDomain)\n\t}\n\n\t// Update BackendNodes from SRV records.\n\tif config.Backend != \"env\" && config.SRVRecord != \"\" {\n\t\tlog.Info(\"SRV record set to \" + config.SRVRecord)\n\t\tsrvNodes, err := getBackendNodesFromSRV(config.SRVRecord)\n\t\tif err != nil {\n\t\t\treturn errors.New(\"Cannot get nodes from SRV records \" + err.Error())\n\t\t}\n\n\t\tswitch config.Backend {\n\t\tcase \"etcd\":\n\t\t\tvsm := make([]string, len(srvNodes))\n\t\t\tfor i, v := range srvNodes {\n\t\t\t\tvsm[i] = config.Scheme + \"://\" + v\n\t\t\t}\n\t\t\tsrvNodes = vsm\n\t\t}\n\n\t\tconfig.BackendNodes = srvNodes\n\t}\n\tif len(config.BackendNodes) == 0 {\n\t\tswitch config.Backend {\n\t\tcase \"consul\":\n\t\t\tconfig.BackendNodes = []string{\"127.0.0.1:8500\"}\n\t\tcase \"etcd\":\n\t\t\tpeerstr := os.Getenv(\"ETCDCTL_PEERS\")\n\t\t\tif len(peerstr) > 0 {\n\t\t\t\tconfig.BackendNodes = strings.Split(peerstr, \",\")\n\t\t\t} else {\n\t\t\t\tconfig.BackendNodes = []string{\"http://127.0.0.1:4001\"}\n\t\t\t}\n\t\tcase \"etcdv3\":\n\t\t\tconfig.BackendNodes = []string{\"127.0.0.1:2379\"}\n\t\tcase \"redis\":\n\t\t\tconfig.BackendNodes = []string{\"127.0.0.1:6379\"}\n\t\tcase \"vault\":\n\t\t\tconfig.BackendNodes = []string{\"http://127.0.0.1:8200\"}\n\t\tcase \"zookeeper\":\n\t\t\tconfig.BackendNodes = []string{\"127.0.0.1:2181\"}\n\t\t}\n\t}\n\t// Initialize the storage client\n\tlog.Info(\"Backend set to \" + config.Backend)\n\n\tif config.Watch {\n\t\tunsupportedBackends := map[string]bool{\n\t\t\t\"dynamodb\": true,\n\t\t\t\"ssm\":      true,\n\t\t}\n\n\t\tif unsupportedBackends[config.Backend] {\n\t\t\tlog.Info(fmt.Sprintf(\"Watch is not supported for backend %s. Exiting...\", config.Backend))\n\t\t\tos.Exit(1)\n\t\t}\n\t}\n\n\tif config.Backend == \"dynamodb\" && config.Table == \"\" {\n\t\treturn errors.New(\"no DynamoDB table configured\")\n\t}\n\tconfig.ConfigDir = filepath.Join(config.ConfDir, \"conf.d\")\n\tconfig.TemplateDir = filepath.Join(config.ConfDir, \"templates\")\n\treturn nil\n}\n\nfunc getBackendNodesFromSRV(record string) ([]string, error) {\n\tnodes := make([]string, 0)\n\n\t// Ignore the CNAME as we don't need it.\n\t_, addrs, err := net.LookupSRV(\"\", \"\", record)\n\tif err != nil {\n\t\treturn nodes, err\n\t}\n\tfor _, srv := range addrs {\n\t\thost := strings.TrimRight(srv.Target, \".\")\n\t\tport := strconv.FormatUint(uint64(srv.Port), 10)\n\t\tnodes = append(nodes, net.JoinHostPort(host, port))\n\t}\n\treturn nodes, nil\n}\n\nfunc processEnv() {\n\tcakeys := os.Getenv(\"CONFD_CLIENT_CAKEYS\")\n\tif len(cakeys) > 0 && config.ClientCaKeys == \"\" {\n\t\tconfig.ClientCaKeys = cakeys\n\t}\n\n\tcert := os.Getenv(\"CONFD_CLIENT_CERT\")\n\tif len(cert) > 0 && config.ClientCert == \"\" {\n\t\tconfig.ClientCert = cert\n\t}\n\n\tkey := os.Getenv(\"CONFD_CLIENT_KEY\")\n\tif len(key) > 0 && config.ClientKey == \"\" {\n\t\tconfig.ClientKey = key\n\t}\n}\n"
        },
        {
          "name": "config_test.go",
          "type": "blob",
          "size": 0.716796875,
          "content": "package main\n\nimport (\n\t\"reflect\"\n\t\"testing\"\n\n\t\"github.com/kelseyhightower/confd/log\"\n)\n\nfunc TestInitConfigDefaultConfig(t *testing.T) {\n\tlog.SetLevel(\"warn\")\n\twant := Config{\n\t\tBackendsConfig: BackendsConfig{\n\t\t\tBackend:      \"etcd\",\n\t\t\tBackendNodes: []string{\"http://127.0.0.1:4001\"},\n\t\t\tScheme:       \"http\",\n\t\t\tFilter:       \"*\",\n\t\t},\n\t\tTemplateConfig: TemplateConfig{\n\t\t\tConfDir:     \"/etc/confd\",\n\t\t\tConfigDir:   \"/etc/confd/conf.d\",\n\t\t\tTemplateDir: \"/etc/confd/templates\",\n\t\t\tNoop:        false,\n\t\t},\n\t\tConfigFile: \"/etc/confd/confd.toml\",\n\t\tInterval:   600,\n\t}\n\tif err := initConfig(); err != nil {\n\t\tt.Errorf(err.Error())\n\t}\n\tif !reflect.DeepEqual(want, config) {\n\t\tt.Errorf(\"initConfig() = %v, want %v\", config, want)\n\t}\n}\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 2.861328125,
          "content": "module github.com/kelseyhightower/confd\n\ngo 1.19\n\nrequire (\n\tgithub.com/BurntSushi/toml v1.3.2\n\tgithub.com/aws/aws-sdk-go v1.48.16\n\tgithub.com/fsnotify/fsnotify v1.7.0\n\tgithub.com/garyburd/redigo v1.6.4\n\tgithub.com/hashicorp/consul/api v1.26.1\n\tgithub.com/hashicorp/vault/api v1.10.0\n\tgithub.com/kelseyhightower/memkv v0.1.1\n\tgithub.com/samuel/go-zookeeper v0.0.0-20201211165307-7117e9ea2414\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgo.etcd.io/etcd/client/v3 v3.5.11\n\tgopkg.in/yaml.v2 v2.4.0\n)\n\nrequire (\n\tgithub.com/armon/go-metrics v0.4.1 // indirect\n\tgithub.com/cenkalti/backoff/v3 v3.2.2 // indirect\n\tgithub.com/coreos/go-semver v0.3.1 // indirect\n\tgithub.com/coreos/go-systemd/v22 v22.5.0 // indirect\n\tgithub.com/fatih/color v1.16.0 // indirect\n\tgithub.com/go-jose/go-jose/v3 v3.0.1 // indirect\n\tgithub.com/go-test/deep v1.1.0 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang/protobuf v1.5.3 // indirect\n\tgithub.com/hashicorp/errwrap v1.1.0 // indirect\n\tgithub.com/hashicorp/go-cleanhttp v0.5.2 // indirect\n\tgithub.com/hashicorp/go-hclog v1.6.1 // indirect\n\tgithub.com/hashicorp/go-immutable-radix v1.3.1 // indirect\n\tgithub.com/hashicorp/go-multierror v1.1.1 // indirect\n\tgithub.com/hashicorp/go-retryablehttp v0.7.5 // indirect\n\tgithub.com/hashicorp/go-rootcerts v1.0.2 // indirect\n\tgithub.com/hashicorp/go-secure-stdlib/parseutil v0.1.8 // indirect\n\tgithub.com/hashicorp/go-secure-stdlib/strutil v0.1.2 // indirect\n\tgithub.com/hashicorp/go-sockaddr v1.0.6 // indirect\n\tgithub.com/hashicorp/go-version v1.6.0 // indirect\n\tgithub.com/hashicorp/golang-lru v1.0.2 // indirect\n\tgithub.com/hashicorp/hcl v1.0.1-vault-5 // indirect\n\tgithub.com/hashicorp/serf v0.10.1 // indirect\n\tgithub.com/jmespath/go-jmespath v0.4.0 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/mitchellh/go-homedir v1.1.0 // indirect\n\tgithub.com/mitchellh/mapstructure v1.5.0 // indirect\n\tgithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e // indirect\n\tgithub.com/ryanuber/go-glob v1.0.0 // indirect\n\tgo.etcd.io/etcd/api/v3 v3.5.11 // indirect\n\tgo.etcd.io/etcd/client/pkg/v3 v3.5.11 // indirect\n\tgo.uber.org/multierr v1.11.0 // indirect\n\tgo.uber.org/zap v1.26.0 // indirect\n\tgolang.org/x/crypto v0.16.0 // indirect\n\tgolang.org/x/exp v0.0.0-20231206192017-f3f8817b8deb // indirect\n\tgolang.org/x/net v0.19.0 // indirect\n\tgolang.org/x/sys v0.15.0 // indirect\n\tgolang.org/x/text v0.14.0 // indirect\n\tgolang.org/x/time v0.5.0 // indirect\n\tgoogle.golang.org/genproto v0.0.0-20231127180814-3a041ad873d4 // indirect\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20231127180814-3a041ad873d4 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20231127180814-3a041ad873d4 // indirect\n\tgoogle.golang.org/grpc v1.59.0 // indirect\n\tgoogle.golang.org/protobuf v1.31.0 // indirect\n\tgopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 30.1162109375,
          "content": "github.com/BurntSushi/toml v1.3.2 h1:o7IhLm0Msx3BaB+n3Ag7L8EVlByGnpq14C4YWiu/gL8=\ngithub.com/BurntSushi/toml v1.3.2/go.mod h1:CxXYINrC8qIiEnFrOxCa7Jy5BFHlXnUU2pbicEuybxQ=\ngithub.com/DataDog/datadog-go v3.2.0+incompatible/go.mod h1:LButxg5PwREeZtORoXG3tL4fMGNddJ+vMq1mwgfaqoQ=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alecthomas/units v0.0.0-20190717042225-c3de453c63f4/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e/go.mod h1:3U/XgcO3hCbHZ8TKRvWD2dDTCfh9M9ya+I9JpbB7O8o=\ngithub.com/armon/go-metrics v0.0.0-20180917152333-f0300d1749da/go.mod h1:Q73ZrmVTwzkszR9V5SSuryQ31EELlFMUz1kKyl939pY=\ngithub.com/armon/go-metrics v0.4.1 h1:hR91U9KYmb6bLBYLQjyM+3j+rcd/UhE+G78SFnF8gJA=\ngithub.com/armon/go-metrics v0.4.1/go.mod h1:E6amYzXo6aW1tqzoZGT755KkbgrJsSdpwZ+3JqfkOG4=\ngithub.com/armon/go-radix v0.0.0-20180808171621-7fddfc383310/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=\ngithub.com/armon/go-radix v1.0.0/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=\ngithub.com/aws/aws-sdk-go v1.48.16 h1:mcj2/9J/MJ55Dov+ocMevhR8Jv6jW/fAxbrn4a1JFc8=\ngithub.com/aws/aws-sdk-go v1.48.16/go.mod h1:LF8svs817+Nz+DmiMQKTO3ubZ/6IaTpq3TjupRn3Eqk=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/bgentry/speakeasy v0.1.0/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=\ngithub.com/cenkalti/backoff/v3 v3.2.2 h1:cfUAAO3yvKMYKPrvhDuHSwQnhZNk/RMHKdZqKTxfm6M=\ngithub.com/cenkalti/backoff/v3 v3.2.2/go.mod h1:cIeZDE3IrqwwJl6VUwCN6trj1oXrTS4rc0ij+ULvLYs=\ngithub.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/circonus-labs/circonus-gometrics v2.3.1+incompatible/go.mod h1:nmEj6Dob7S7YxXgwXpfOuvO54S+tGdZdw9fuRZt25Ag=\ngithub.com/circonus-labs/circonusllhist v0.1.3/go.mod h1:kMXHVDlOchFAehlya5ePtbp5jckzBHf4XRpQvBOLI+I=\ngithub.com/coreos/go-semver v0.3.1 h1:yi21YpKnrx1gt5R+la8n5WgS0kCrsPp33dmEyHReZr4=\ngithub.com/coreos/go-semver v0.3.1/go.mod h1:irMmmIw/7yzSRPWryHsK7EYSg09caPQL03VsM8rvUec=\ngithub.com/coreos/go-systemd/v22 v22.5.0 h1:RrqgGjYQKalulkV8NGVIfkXQf6YYmOyiJKk8iXXhfZs=\ngithub.com/coreos/go-systemd/v22 v22.5.0/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=\ngithub.com/fatih/color v1.7.0/go.mod h1:Zm6kSWBoL9eyXnKyktHP6abPY2pDugNf5KwzbycvMj4=\ngithub.com/fatih/color v1.9.0/go.mod h1:eQcE1qtQxscV5RaZvpXrrb8Drkc3/DdQ+uUYCNjL+zU=\ngithub.com/fatih/color v1.13.0/go.mod h1:kLAiJbzzSOZDVNGyDpeOxJ47H46qBXwg5ILebYFFOfk=\ngithub.com/fatih/color v1.16.0 h1:zmkK9Ngbjj+K0yRhTVONQh1p/HknKYSlNT+vZCzyokM=\ngithub.com/fatih/color v1.16.0/go.mod h1:fL2Sau1YI5c0pdGEVCbKQbLXB6edEj1ZgiY4NijnWvE=\ngithub.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=\ngithub.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=\ngithub.com/garyburd/redigo v1.6.4 h1:LFu2R3+ZOPgSMWMOL+saa/zXRjw0ID2G8FepO53BGlg=\ngithub.com/garyburd/redigo v1.6.4/go.mod h1:rTb6epsqigu3kYKBnaF028A7Tf/Aw5s0cqA47doKKqw=\ngithub.com/go-jose/go-jose/v3 v3.0.1 h1:pWmKFVtt+Jl0vBZTIpz/eAKwsm6LkIxDVVbFHKkchhA=\ngithub.com/go-jose/go-jose/v3 v3.0.1/go.mod h1:RNkWWRld676jZEYoV3+XK8L2ZnNSvIsxFMht0mSX+u8=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/kit v0.9.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-test/deep v1.1.0 h1:WOcxcdHcvdgThNXjw0t76K42FXTU7HpNQWHpA2HHNlg=\ngithub.com/go-test/deep v1.1.0/go.mod h1:5C2ZWiW0ErCdrYzpqxLbTX7MG14M9iiw8DgHncVwcsE=\ngithub.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.3 h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg=\ngithub.com/golang/protobuf v1.5.3/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.0.1 h1:gK4Kx5IaGY9CD5sPJ36FHiBJ6ZXl0kilRiiCj+jdYp4=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.9 h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/hashicorp/consul/api v1.26.1 h1:5oSXOO5fboPZeW5SN+TdGFP/BILDgBm19OrPZ/pICIM=\ngithub.com/hashicorp/consul/api v1.26.1/go.mod h1:B4sQTeaSO16NtynqrAdwOlahJ7IUDZM9cj2420xYL8A=\ngithub.com/hashicorp/consul/sdk v0.15.0 h1:2qK9nDrr4tiJKRoxPGhm6B7xJjLVIQqkjiab2M4aKjU=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=\ngithub.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-cleanhttp v0.5.0/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=\ngithub.com/hashicorp/go-cleanhttp v0.5.2 h1:035FKYIWjmULyFRBKPs8TBQoi0x6d9G4xc9neXJWAZQ=\ngithub.com/hashicorp/go-cleanhttp v0.5.2/go.mod h1:kO/YDlP8L1346E6Sodw+PrpBSV4/SoxCXGY6BqNFT48=\ngithub.com/hashicorp/go-hclog v0.9.2/go.mod h1:5CU+agLiy3J7N7QjHK5d05KxGsuXiQLrjA0H7acj2lQ=\ngithub.com/hashicorp/go-hclog v1.6.1 h1:pa92nu9bPoAqI7p+uPDCIWGAibUdlCi6TYWJEQQkLf8=\ngithub.com/hashicorp/go-hclog v1.6.1/go.mod h1:W4Qnvbt70Wk/zYJryRzDRU/4r0kIg0PVHBcfoyhpF5M=\ngithub.com/hashicorp/go-immutable-radix v1.0.0/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-immutable-radix v1.3.1 h1:DKHmCUm2hRBK510BaiZlwvpD40f8bJFeZnpfm2KLowc=\ngithub.com/hashicorp/go-immutable-radix v1.3.1/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-msgpack v0.5.3/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=\ngithub.com/hashicorp/go-msgpack v0.5.5 h1:i9R9JSrqIz0QVLz3sz+i3YJdT7TTSLcfLLzJi9aZTuI=\ngithub.com/hashicorp/go-multierror v1.0.0/go.mod h1:dHtQlpGsu+cZNNAkkCN/P3hoUDHhCYQXV3UM06sGGrk=\ngithub.com/hashicorp/go-multierror v1.1.0/go.mod h1:spPvp8C1qA32ftKqdAHm4hHTbPw+vmowP0z+KUhOZdA=\ngithub.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=\ngithub.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=\ngithub.com/hashicorp/go-retryablehttp v0.5.3/go.mod h1:9B5zBasrRhHXnJnui7y6sL7es7NDiJgTc6Er0maI1Xs=\ngithub.com/hashicorp/go-retryablehttp v0.7.5 h1:bJj+Pj19UZMIweq/iie+1u5YCdGrnxCT9yvm0e+Nd5M=\ngithub.com/hashicorp/go-retryablehttp v0.7.5/go.mod h1:Jy/gPYAdjqffZ/yFGCFV2doI5wjtH1ewM9u8iYVjtX8=\ngithub.com/hashicorp/go-rootcerts v1.0.2 h1:jzhAVGtqPKbwpyCPELlgNWhE1znq+qwJtW5Oi2viEzc=\ngithub.com/hashicorp/go-rootcerts v1.0.2/go.mod h1:pqUvnprVnM5bf7AOirdbb01K4ccR319Vf4pU3K5EGc8=\ngithub.com/hashicorp/go-secure-stdlib/parseutil v0.1.8 h1:iBt4Ew4XEGLfh6/bPk4rSYmuZJGizr6/x/AEizP0CQc=\ngithub.com/hashicorp/go-secure-stdlib/parseutil v0.1.8/go.mod h1:aiJI+PIApBRQG7FZTEBx5GiiX+HbOHilUdNxUZi4eV0=\ngithub.com/hashicorp/go-secure-stdlib/strutil v0.1.2 h1:kes8mmyCpxJsI7FTwtzRqEy9CdjCtrXrXGuOpxEA7Ts=\ngithub.com/hashicorp/go-secure-stdlib/strutil v0.1.2/go.mod h1:Gou2R9+il93BqX25LAKCLuM+y9U2T4hlwvT1yprcna4=\ngithub.com/hashicorp/go-sockaddr v1.0.0/go.mod h1:7Xibr9yA9JjQq1JpNB2Vw7kxv8xerXegt+ozgdvDeDU=\ngithub.com/hashicorp/go-sockaddr v1.0.6 h1:RSG8rKU28VTUTvEKghe5gIhIQpv8evvNpnDEyqO4u9I=\ngithub.com/hashicorp/go-sockaddr v1.0.6/go.mod h1:uoUUmtwU7n9Dv3O4SNLeFvg0SxQ3lyjsj6+CCykpaxI=\ngithub.com/hashicorp/go-syslog v1.0.0/go.mod h1:qPfqrKkXGihmCqbJM2mZgkZGvKG1dFdvsLplgctolz4=\ngithub.com/hashicorp/go-uuid v1.0.0/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.1/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.3 h1:2gKiV6YVmrJ1i2CKKa9obLvRieoRGviZFL26PcT/Co8=\ngithub.com/hashicorp/go-version v1.6.0 h1:feTTfFNnjP967rlCxM/I9g701jU+RN74YKx2mOkIeek=\ngithub.com/hashicorp/go-version v1.6.0/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v1.0.2 h1:dV3g9Z/unq5DpblPpw+Oqcv4dU/1omnb4Ok8iPY6p1c=\ngithub.com/hashicorp/golang-lru v1.0.2/go.mod h1:iADmTwqILo4mZ8BN3D2Q6+9jd8WM5uGBxy+E8yxSoD4=\ngithub.com/hashicorp/hcl v1.0.1-vault-5 h1:kI3hhbbyzr4dldA8UdTb7ZlVVlI2DACdCfz31RPDgJM=\ngithub.com/hashicorp/hcl v1.0.1-vault-5/go.mod h1:XYhtn6ijBSAj6n4YqAaf7RBPS4I06AItNorpy+MoQNM=\ngithub.com/hashicorp/logutils v1.0.0/go.mod h1:QIAnNjmIWmVIIkWDTG1z5v++HQmx9WQRO+LraFDTW64=\ngithub.com/hashicorp/mdns v1.0.4/go.mod h1:mtBihi+LeNXGtG8L9dX59gAEa12BDtBQSp4v/YAJqrc=\ngithub.com/hashicorp/memberlist v0.5.0 h1:EtYPN8DpAURiapus508I4n9CzHs2W+8NZGbmmR/prTM=\ngithub.com/hashicorp/memberlist v0.5.0/go.mod h1:yvyXLpo0QaGE59Y7hDTsTzDD25JYBZ4mHgHUZ8lrOI0=\ngithub.com/hashicorp/serf v0.10.1 h1:Z1H2J60yRKvfDYAOZLd2MU0ND4AH/WDz7xYHDWQsIPY=\ngithub.com/hashicorp/serf v0.10.1/go.mod h1:yL2t6BqATOLGc5HF7qbFkTfXoPIY0WZdWHfEvMqbG+4=\ngithub.com/hashicorp/vault/api v1.10.0 h1:/US7sIjWN6Imp4o/Rj1Ce2Nr5bki/AXi9vAW3p2tOJQ=\ngithub.com/hashicorp/vault/api v1.10.0/go.mod h1:jo5Y/ET+hNyz+JnKDt8XLAdKs+AM0G5W0Vp1IrFI8N8=\ngithub.com/jmespath/go-jmespath v0.4.0 h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=\ngithub.com/jmespath/go-jmespath v0.4.0/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1 h1:shLQSRRSCCPj3f2gpwzGwWFoC7ycTf1rcQZHOlsJ6N8=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1/go.mod h1:L3OGu8Wl2/fWfCI6z80xFu9LTZmf1ZRjMHUOPmWr69U=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.9/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/kelseyhightower/memkv v0.1.1 h1:O7n2MB8cdrwb4UmyyXS2tVETc2DR7KlJRihRgNh4zqc=\ngithub.com/kelseyhightower/memkv v0.1.1/go.mod h1:uIeINg0Dy2aioPWSdga9VnueJjfSvul2dW7o758NxO4=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=\ngithub.com/mattn/go-colorable v0.1.4/go.mod h1:U0ppj6V5qS13XJ6of8GYAs25YV2eR4EVcfRqFIhoBtE=\ngithub.com/mattn/go-colorable v0.1.6/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\ngithub.com/mattn/go-colorable v0.1.9/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\ngithub.com/mattn/go-colorable v0.1.12/go.mod h1:u5H1YNBxpqRaxsYJYSkiCWKzEfiAb1Gb520KVy5xxl4=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.3/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=\ngithub.com/mattn/go-isatty v0.0.8/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\ngithub.com/mattn/go-isatty v0.0.11/go.mod h1:PhnuNfih5lzO57/f3n+odYbM4JtupLOxQOAqxQCu2WE=\ngithub.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\ngithub.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/miekg/dns v1.1.26/go.mod h1:bPDLeHnStXmXAq1m/Ch/hvfNHr14JKNPMBo3VZKjuso=\ngithub.com/miekg/dns v1.1.41 h1:WMszZWJG0XmzbK9FEmzH2TVcqYzFesusSIB41b8KHxY=\ngithub.com/miekg/dns v1.1.41/go.mod h1:p6aan82bvRIyn+zDIv9xYNUpwa73JcSh9BKwknJysuI=\ngithub.com/mitchellh/cli v1.1.0/go.mod h1:xcISNoH86gajksDmfB23e/pu+B+GeFRMYmoHXxx3xhI=\ngithub.com/mitchellh/go-homedir v1.1.0 h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=\ngithub.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/mitchellh/mapstructure v0.0.0-20160808181253-ca63d7c062ee/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=\ngithub.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e h1:fD57ERR4JtEqsWbfPhv4DMiApHyliiK5xCTNVSPiaAs=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=\ngithub.com/pascaldekloe/goe v0.0.0-20180627143212-57f6aae5913c/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=\ngithub.com/pascaldekloe/goe v0.1.0 h1:cBOtyMzM9HTpWjXfbbunk26uA6nG3a8n06Wieeh0MwY=\ngithub.com/pascaldekloe/goe v0.1.0/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=\ngithub.com/posener/complete v1.1.1/go.mod h1:em0nMJCgc9GFtwrmVmEMR/ZL6WyhyjMBndrE9hABlRI=\ngithub.com/posener/complete v1.2.3/go.mod h1:WZIdtGGp+qx0sLrYKtIRAruyNpv6hFCicSgv7Sy7s/s=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=\ngithub.com/prometheus/client_golang v1.4.0/go.mod h1:e9GMxYsXl05ICDXkRhurwBS4Q3OK1iX/F2sw+iXX5zU=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.2.0/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.9.1/go.mod h1:yhUN8i9wzaXS3w1O07YhxHEBxD+W35wd8bs7vj7HSQ4=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.0.8/go.mod h1:7Qr8sr6344vo1JqZ6HhLceV9o3AJ1Ff+GxbHq6oeK9A=\ngithub.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=\ngithub.com/ryanuber/go-glob v1.0.0 h1:iQh3xXAumdQ+4Ufa5b25cRpC5TYKlno6hsv6Cb3pkBk=\ngithub.com/ryanuber/go-glob v1.0.0/go.mod h1:807d1WSdnB0XRJzKNil9Om6lcp/3a0v4qIHxIXzX/Yc=\ngithub.com/samuel/go-zookeeper v0.0.0-20201211165307-7117e9ea2414 h1:AJNDS0kP60X8wwWFvbLPwDuojxubj9pbfK7pjHw0vKg=\ngithub.com/samuel/go-zookeeper v0.0.0-20201211165307-7117e9ea2414/go.mod h1:gi+0XIa01GRL2eRQVjQkKGqKF3SF9vZR/HnPullcV2E=\ngithub.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529 h1:nn5Wsu0esKSJiIVhscUtVbo7ada43DJhG55ua/hjS5I=\ngithub.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529/go.mod h1:DxrIzT+xaE7yg65j358z/aeFdxmN0P9QXhEzd20vsDc=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.5.0 h1:1zr/of2m5FGMsad5YfcqgdqdWrIhu+EBEJRhR1U7z/c=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.2/go.mod h1:R6va5+xMeoiuVRoj+gSkQ7d3FALtqAAGI1FQKckRals=\ngithub.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=\ngithub.com/tv42/httpunix v0.0.0-20150427012821-b75d8614f926/go.mod h1:9ESjWnEqriFuLhtthL60Sar/7RFoluCcXsuvEwTV5KM=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngo.etcd.io/etcd/api/v3 v3.5.11 h1:B54KwXbWDHyD3XYAwprxNzTe7vlhR69LuBgZnMVvS7E=\ngo.etcd.io/etcd/api/v3 v3.5.11/go.mod h1:Ot+o0SWSyT6uHhA56al1oCED0JImsRiU9Dc26+C2a+4=\ngo.etcd.io/etcd/client/pkg/v3 v3.5.11 h1:bT2xVspdiCj2910T0V+/KHcVKjkUrCZVtk8J2JF2z1A=\ngo.etcd.io/etcd/client/pkg/v3 v3.5.11/go.mod h1:seTzl2d9APP8R5Y2hFL3NVlD6qC/dOT+3kvrqPyTas4=\ngo.etcd.io/etcd/client/v3 v3.5.11 h1:ajWtgoNSZJ1gmS8k+icvPtqsqEav+iUorF7b0qozgUU=\ngo.etcd.io/etcd/client/v3 v3.5.11/go.mod h1:a6xQUEqFJ8vztO1agJh/KQKOMfFI8og52ZconzcDJwE=\ngo.uber.org/goleak v1.2.0 h1:xqgm/S+aQvhWFTtR0XK3Jvg7z8kGV8P4X14IzwN3Eqk=\ngo.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=\ngo.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=\ngo.uber.org/zap v1.26.0 h1:sI7k6L95XOKS281NhVKOFCUNIvv9e0w4BF8N3u+tCRo=\ngo.uber.org/zap v1.26.0/go.mod h1:dtElttAiwGvoJ/vj4IwHBS/gXsEu/pZ50mUIRWuG0so=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190911031432-227b76d455e7/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190923035154-9ee001bba392/go.mod h1:/lpIB1dKB+9EgE3H3cr1v9wB50oz8l4C4h62xy7jSTY=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.16.0 h1:mMMrFzRSCF0GvB7Ne27XVtVAaXLrPmgPC7/v0tkwHaY=\ngolang.org/x/crypto v0.16.0/go.mod h1:gCAAfMLgwOJRpTjQ2zCCt2OcSfYMTeZVSRtQlPC7Nq4=\ngolang.org/x/exp v0.0.0-20231206192017-f3f8817b8deb h1:c0vyKkb6yr3KR7jEfJaOSv4lG7xPkbN6r52aJz1d8a8=\ngolang.org/x/exp v0.0.0-20231206192017-f3f8817b8deb/go.mod h1:iRJReGqOEeBhDZGkGbynYwcHlctCvnjTYIamk7uXpHI=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190923162816-aa69164e4478/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210410081132-afb366fc7cd1/go.mod h1:9tjilg8BloeKEkVJvy7fQ90B1CfIiPueXVOjqfkSzI8=\ngolang.org/x/net v0.19.0 h1:zTwKpTd2XuCqf8huc7Fo2iSy+4RHPd10s4KzeTnVr1c=\ngolang.org/x/net v0.19.0/go.mod h1:CfAk/cbD4CthTvqiEl8NpboMuiuOYsAr/7NOjZJtv1U=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20180823144017-11551d06cbcc/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190922100055-0a153f010e69/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190924154521-2837fb4f24fe/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210303074136-134d130e1a04/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210927094055-39ccf1dd6fa6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220503163025-988cb79eb6c6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220728004956-3c1f35247d10/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.15.0 h1:h48lPFYpsTvQJZF4EKyI4aLHaev3CxivZmv7yZig9pc=\ngolang.org/x/sys v0.15.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.14.0 h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngolang.org/x/time v0.5.0 h1:o7cqy6amK/52YcAKIPlM3a+Fpj35zvRj2TP+e1xFSfk=\ngolang.org/x/time v0.5.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190907020128-2ca718005c18/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/genproto v0.0.0-20231127180814-3a041ad873d4 h1:W12Pwm4urIbRdGhMEg2NM9O3TWKjNcxQhs46V0ypf/k=\ngoogle.golang.org/genproto v0.0.0-20231127180814-3a041ad873d4/go.mod h1:5RBcpGRxr25RbDzY5w+dmaqpSEvl8Gwl1x2CICf60ic=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20231127180814-3a041ad873d4 h1:ZcOkrmX74HbKFYnpPY8Qsw93fC29TbJXspYKaBkSXDQ=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20231127180814-3a041ad873d4/go.mod h1:k2dtGpRrbsSyKcNPKKI5sstZkrNCZwpU/ns96JoHbGg=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20231127180814-3a041ad873d4 h1:DC7wcm+i+P1rN3Ff07vL+OndGg5OhNddHyTA+ocPqYE=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20231127180814-3a041ad873d4/go.mod h1:eJVxU6o+4G1PSczBr85xmyvSNYAKvAYgkub40YGomFM=\ngoogle.golang.org/grpc v1.59.0 h1:Z5Iec2pjwb+LEOqzpB2MR12/eKFhDPhuqW91O+4bwUk=\ngoogle.golang.org/grpc v1.59.0/go.mod h1:aUPDwccQo6OTjy7Hct4AfBPD1GptF4fyUjIkQ9YtF98=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.31.0 h1:g0LDEJHgrBl9N9r17Ru3sqWhkIx2NB67okBHPwC7hs8=\ngoogle.golang.org/protobuf v1.31.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f h1:BLraFXnmrev5lT+xlilqcH8XK9/i0At2xKjWk4p6zsU=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.5/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "integration",
          "type": "tree",
          "content": null
        },
        {
          "name": "log",
          "type": "tree",
          "content": null
        },
        {
          "name": "resource",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        },
        {
          "name": "version.go",
          "type": "blob",
          "size": 0.171875,
          "content": "package main\n\nconst Version = \"0.17.0-dev\"\n\n// We want to replace this variable at build time with \"-ldflags -X main.GitSHA=xxx\", where const is not supported.\nvar GitSHA = \"\"\n"
        }
      ]
    }
  ]
}