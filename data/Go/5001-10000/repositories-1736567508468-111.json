{
  "metadata": {
    "timestamp": 1736567508468,
    "page": 111,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "appleboy/gorush",
      "stars": 8142,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.01171875,
          "content": "*\n!release/\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.404296875,
          "content": "# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n_obj\n_test\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\n*.test\n*.prof\n\ngin-bin\nkey.pem\n.DS_Store\ngorush/log/*.log\ngorush.db\n.cover\n*.db*\ncoverage.txt\ndist\ncustom\nrelease\ncoverage.txt\nnode_modules\nconfig.yml\ndist/\n.idea"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 0.537109375,
          "content": "linters:\n  enable-all: false\n  disable-all: true\n  fast: false\n  enable:\n    - bodyclose\n    - dogsled\n    - dupl\n    - errcheck\n    - exhaustive\n    - gochecknoinits\n    - goconst\n    - gocritic\n    - gocyclo\n    - gofmt\n    - goimports\n    - goprintffuncname\n    - gosec\n    - gosimple\n    - govet\n    - ineffassign\n    - lll\n    - misspell\n    - nakedret\n    - noctx\n    - nolintlint\n    - staticcheck\n    - stylecheck\n    - typecheck\n    - unconvert\n    - unparam\n    - unused\n    - whitespace\n    - gofumpt\n    - copyloopvar\n\nrun:\n  timeout: 3m\n"
        },
        {
          "name": ".goreleaser.yaml",
          "type": "blob",
          "size": 2.27734375,
          "content": "version: 2\n\nbefore:\n  hooks:\n    - go mod tidy\n\nbuilds:\n  - env:\n      - CGO_ENABLED=0\n    goos:\n      - darwin\n      - linux\n      - windows\n      - freebsd\n    goarch:\n      - \"386\"\n      - amd64\n      - arm\n      - arm64\n    goarm:\n      - \"5\"\n      - \"6\"\n      - \"7\"\n    ignore:\n      - goos: darwin\n        goarch: arm\n      - goos: darwin\n        goarch: ppc64le\n      - goos: darwin\n        goarch: s390x\n      - goos: windows\n        goarch: ppc64le\n      - goos: windows\n        goarch: s390x\n      - goos: windows\n        goarch: arm\n        goarm: \"5\"\n      - goos: windows\n        goarch: arm\n        goarm: \"6\"\n      - goos: windows\n        goarch: arm\n        goarm: \"7\"\n      - goos: windows\n        goarch: arm64\n      - goos: freebsd\n        goarch: ppc64le\n      - goos: freebsd\n        goarch: s390x\n      - goos: freebsd\n        goarch: arm\n        goarm: \"5\"\n      - goos: freebsd\n        goarch: arm\n        goarm: \"6\"\n      - goos: freebsd\n        goarch: arm\n        goarm: \"7\"\n      - goos: freebsd\n        goarch: arm64\n    flags:\n      - -trimpath\n    ldflags:\n      - -s -w\n      - -X main.version={{.Version}}\n      - -X main.commit={{.ShortCommit}}\n    binary: >-\n      {{ .ProjectName }}-\n      {{- if .IsSnapshot }}{{ .Branch }}-\n      {{- else }}{{- .Version }}-{{ end }}\n      {{- .Os }}-\n      {{- if eq .Arch \"amd64\" }}amd64\n      {{- else if eq .Arch \"amd64_v1\" }}amd64\n      {{- else if eq .Arch \"386\" }}386\n      {{- else }}{{ .Arch }}{{ end }}\n      {{- if .Arm }}-{{ .Arm }}{{ end }}\n    no_unique_dist_dir: true\n\narchives:\n  - format: binary\n    name_template: \"{{ .Binary }}\"\n    allow_different_binary_count: true\n\nchecksum:\n  name_template: \"checksums.txt\"\n\nsnapshot:\n  version_template: \"{{ incpatch .Version }}\"\n\nchangelog:\n  use: github\n  groups:\n    - title: Features\n      regexp: \"^.*feat[(\\\\w)]*:+.*$\"\n      order: 0\n    - title: \"Bug fixes\"\n      regexp: \"^.*fix[(\\\\w)]*:+.*$\"\n      order: 1\n    - title: \"Enhancements\"\n      regexp: \"^.*chore[(\\\\w)]*:+.*$\"\n      order: 2\n    - title: \"Refactor\"\n      regexp: \"^.*refactor[(\\\\w)]*:+.*$\"\n      order: 3\n    - title: \"Build process updates\"\n      regexp: ^.*?(build|ci)(\\(.+\\))??!?:.+$\n      order: 4\n    - title: \"Documentation updates\"\n      regexp: ^.*?docs?(\\(.+\\))??!?:.+$\n      order: 4\n    - title: Others\n      order: 999\n"
        },
        {
          "name": ".hadolint.yaml",
          "type": "blob",
          "size": 0.01953125,
          "content": "ignored:\n  - DL3018\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0498046875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016 Bo-Yi Wu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 5.8232421875,
          "content": "DIST := dist\nEXECUTABLE := gorush\n\nGO ?= go\nDEPLOY_ACCOUNT := appleboy\nDEPLOY_IMAGE := $(EXECUTABLE)\nGOFMT ?= gofumpt -l -s -extra\n\nTARGETS ?= linux darwin windows\nARCHS ?= amd64\nGOFILES := $(shell find . -name \"*.go\" -type f)\nTAGS ?= sqlite\nLDFLAGS ?= -X main.version=$(VERSION) -X main.commit=$(COMMIT)\n\nPROTOC_GEN_GO=v1.28\nPROTOC_GEN_GO_GRPC=v1.2\n\nifneq ($(shell uname), Darwin)\n\tEXTLDFLAGS = -extldflags \"-static\" $(null)\nelse\n\tEXTLDFLAGS =\nendif\n\nifneq ($(DRONE_TAG),)\n\tVERSION ?= $(DRONE_TAG)\nelse\n\tVERSION ?= $(shell git describe --tags --always || git rev-parse --short HEAD)\nendif\n\nCOMMIT ?= $(shell git rev-parse --short HEAD)\n\n.PHONY: all\nall: build\n\n## help: print this help message\n.PHONY: help\nhelp:\n\t@echo 'Usage:'\n\t@sed -n 's/^##//p' ${MAKEFILE_LIST} | column -t -s ':' | sed -e 's/^/ /'\n\n## init: check the environment variables\ninit:\nifeq ($(FCM_CREDENTIAL),)\n\t@echo \"Missing FCM_CREDENTIAL Parameter\"\n\t@exit 1\nendif\nifeq ($(FCM_TEST_TOKEN),)\n\t@echo \"Missing FCM_TEST_TOKEN Parameter\"\n\t@exit 1\nendif\n\t@echo \"Already set FCM_CREDENTIAL and endif global variable.\"\n\n## install: install the gorush binary\n.PHONY: install\ninstall: $(GOFILES)\n\t$(GO) install -v -tags '$(TAGS)' -ldflags '$(EXTLDFLAGS)-s -w $(LDFLAGS)'\n\t@echo \"\\n==>\\033[32m Installed gorush to ${GOPATH}/bin/gorush\\033[m\"\n\n## build: build the gorush binary\n.PHONY: build\nbuild: $(EXECUTABLE)\n\n.PHONY: $(EXECUTABLE)\n$(EXECUTABLE): $(GOFILES)\n\t$(GO) build -v -tags '$(TAGS)' -ldflags '$(EXTLDFLAGS)-s -w $(LDFLAGS)' -o release/$@\n\n## test: run the tests\n.PHONY: test\ntest: init\n\t@$(GO) test -v -cover -tags $(TAGS) -coverprofile coverage.txt ./... && echo \"\\n==>\\033[32m Ok\\033[m\\n\" || exit 1\n\n## build_linux_amd64: build the gorush binary for linux amd64\nbuild_linux_amd64:\n\tCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -tags '$(TAGS)' -ldflags '$(EXTLDFLAGS)-s -w $(LDFLAGS)' -o release/linux/amd64/$(DEPLOY_IMAGE)\n\n## build_linux_i386: build the gorush binary for linux i386\nbuild_linux_i386:\n\tCGO_ENABLED=0 GOOS=linux GOARCH=386 go build -a -tags '$(TAGS)' -ldflags '$(EXTLDFLAGS)-s -w $(LDFLAGS)' -o release/linux/i386/$(DEPLOY_IMAGE)\n\n## build_linux_arm64: build the gorush binary for linux arm64\nbuild_linux_arm64:\n\tCGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -a -tags '$(TAGS)' -ldflags '$(EXTLDFLAGS)-s -w $(LDFLAGS)' -o release/linux/arm64/$(DEPLOY_IMAGE)\n\n## build_linux_arm: build the gorush binary for linux arm\nbuild_linux_arm:\n\tCGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=7 go build -a -tags '$(TAGS)' -ldflags '$(EXTLDFLAGS)-s -w $(LDFLAGS)' -o release/linux/arm/$(DEPLOY_IMAGE)\n\n## build_linux_lambda: build the gorush binary for linux lambda\nbuild_linux_lambda:\n\tCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -tags 'lambda' -ldflags '$(EXTLDFLAGS)-s -w $(LDFLAGS)' -o release/linux/lambda/$(DEPLOY_IMAGE)\n\n## build_darwin_amd64: build the gorush binary for darwin amd64\nbuild_darwin_amd64:\n\tCGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -a -tags '$(TAGS)' -ldflags '$(EXTLDFLAGS)-s -w $(LDFLAGS)' -o release/darwin/amd64/$(DEPLOY_IMAGE)\n\n## build_darwin_i386: build the gorush binary for darwin i386\nbuild_darwin_i386:\n\tCGO_ENABLED=0 GOOS=darwin GOARCH=386 go build -a -tags '$(TAGS)' -ldflags '$(EXTLDFLAGS)-s -w $(LDFLAGS)' -o release/darwin/i386/$(DEPLOY_IMAGE)\n\n## build_darwin_arm64: build the gorush binary for darwin arm64\nbuild_darwin_arm64:\n\tCGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -a -tags '$(TAGS)' -ldflags '$(EXTLDFLAGS)-s -w $(LDFLAGS)' -o release/darwin/arm64/$(DEPLOY_IMAGE)\n\n## build_darwin_arm: build the gorush binary for darwin arm\nbuild_darwin_arm:\n\tCGO_ENABLED=0 GOOS=darwin GOARCH=arm GOARM=7 go build -a -tags '$(TAGS)' -ldflags '$(EXTLDFLAGS)-s -w $(LDFLAGS)' -o release/darwin/arm/$(DEPLOY_IMAGE)\n\n## build_darwin_lambda: build the gorush binary for darwin lambda\nbuild_darwin_lambda:\n\tCGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -a -tags 'lambda' -ldflags '$(EXTLDFLAGS)-s -w $(LDFLAGS)' -o release/darwin/lambda/$(DEPLOY_IMAGE)\n\n## clean: cleans up the project directory\n#   Cleans up the project directory by performing the following actions:\n#   - Runs `go clean` with the `-modcache`, `-x`, and `-i` flags to clean the module cache and remove installed packages.\n#   - Deletes all files named `coverage.txt` in the project directory and its subdirectories.\n#   - Deletes all files with the `.tar.gz` extension in the project directory and its subdirectories.\n#   - Deletes all files with the `.db` extension in the project directory and its subdirectories.\n#   - Removes the `release`, `dist`, and `.cover` directories if they exist.\nclean:\n\t$(GO) clean -modcache -x -i ./...\n\tfind . -name coverage.txt -delete\n\tfind . -name *.tar.gz -delete\n\tfind . -name *.db -delete\n\t-rm -rf release dist .cover\n\n## proto_install: install the protoc-gen-go and protoc-gen-go-grpc\n.PHONY: proto_install\nproto_install:\n\t$(GO) install google.golang.org/protobuf/cmd/protoc-gen-go@$(PROTOC_GEN_GO)\n\t$(GO) install google.golang.org/grpc/cmd/protoc-gen-go-grpc@$(PROTOC_GEN_GO_GRPC)\n\n## generate_proto_js: generate the proto file for nodejs\ngenerate_proto_js:\n\tnpm install grpc-tools\n\tprotoc -I rpc/proto rpc/proto/gorush.proto --js_out=import_style=commonjs,binary:rpc/example/node/ --grpc_out=rpc/example/node/ --plugin=protoc-gen-grpc=\"node_modules/.bin/grpc_tools_node_protoc_plugin\"\n\n## generate_proto_go: generate the proto file for golang\ngenerate_proto_go:\n\tprotoc -I rpc/proto rpc/proto/gorush.proto --go_out=rpc/proto --go-grpc_out=require_unimplemented_servers=false:rpc/proto\n\n## generate_proto: generate the proto file for golang and nodejs\ngenerate_proto: generate_proto_go generate_proto_js\n\n## air: install air for hot reload\n.PHONY: air\nair:\n\t@hash air > /dev/null 2>&1; if [ $$? -ne 0 ]; then \\\n\t\t$(GO) install github.com/cosmtrek/air@latest; \\\n\tfi\n\n## dev: run the air for hot reload\n.PHONY: dev\ndev: air\n\tair --build.cmd \"make\" --build.bin release/gorush\n\n## version: print the version\nversion:\n\t@echo $(VERSION)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 49.4482421875,
          "content": "# gorush\n\nA push notification micro server using [Gin](https://github.com/gin-gonic/gin) framework written in Go (Golang) and see the [demo app](https://github.com/appleboy/flutter-gorush).\n\n[![Run Lint and Testing](https://github.com/appleboy/gorush/actions/workflows/testing.yml/badge.svg)](https://github.com/appleboy/gorush/actions/workflows/testing.yml)\n[![GoDoc](https://godoc.org/github.com/appleboy/gorush?status.svg)](https://pkg.go.dev/github.com/appleboy/gorush)\n[![codecov](https://codecov.io/gh/appleboy/gorush/branch/master/graph/badge.svg)](https://codecov.io/gh/appleboy/gorush)\n[![Go Report Card](https://goreportcard.com/badge/github.com/appleboy/gorush)](https://goreportcard.com/report/github.com/appleboy/gorush)\n[![codebeat badge](https://codebeat.co/badges/0a4eff2d-c9ac-46ed-8fd7-b59942983390)](https://codebeat.co/projects/github-com-appleboy-gorush)\n[![Docker Pulls](https://img.shields.io/docker/pulls/appleboy/gorush.svg)](https://hub.docker.com/r/appleboy/gorush/)\n[![Netlify Status](https://api.netlify.com/api/v1/badges/8ab14c9f-44fd-4d9a-8bba-f73f76d253b1/deploy-status)](https://app.netlify.com/sites/gorush/deploys)\n[![Financial Contributors on Open Collective](https://opencollective.com/gorush/all/badge.svg?label=financial+contributors)](https://opencollective.com/gorush)\n\n## Contents\n\n- [gorush](#gorush)\n  - [Contents](#contents)\n  - [Support Platform](#support-platform)\n  - [Features](#features)\n  - [Memory Usage](#memory-usage)\n  - [Basic Usage](#basic-usage)\n    - [Install from homebrew](#install-from-homebrew)\n    - [Download a binary](#download-a-binary)\n    - [Install from source](#install-from-source)\n      - [Prerequisite Tools](#prerequisite-tools)\n      - [Fetch from GitHub](#fetch-from-github)\n    - [Command Usage](#command-usage)\n    - [Send Android notification](#send-android-notification)\n    - [Send Huawei (HMS) notification](#send-huawei-hms-notification)\n    - [Send iOS notification](#send-ios-notification)\n    - [Send Android or iOS notifications using Firebase Cloud Messaging](#send-android-or-ios-notifications-using-firebase-cloud-messaging)\n  - [Run gorush web server](#run-gorush-web-server)\n  - [Web API](#web-api)\n    - [GET /api/stat/go](#get-apistatgo)\n    - [GET /api/stat/app](#get-apistatapp)\n    - [GET /sys/stats](#get-sysstats)\n    - [GET /metrics](#get-metrics)\n    - [POST /api/push](#post-apipush)\n    - [Request body](#request-body)\n    - [iOS alert payload](#ios-alert-payload)\n    - [iOS sound payload](#ios-sound-payload)\n    - [Android notification payload](#android-notification-payload)\n    - [Huawei notification](#huawei-notification)\n    - [iOS Example](#ios-example)\n    - [Android Example](#android-example)\n    - [Huawei Example](#huawei-example)\n    - [Response body](#response-body)\n  - [Run gRPC service](#run-grpc-service)\n  - [Run gorush in Docker](#run-gorush-in-docker)\n  - [Run gorush in Kubernetes](#run-gorush-in-kubernetes)\n    - [Quick Start](#quick-start)\n    - [Create the Service Controller for AWS ELB](#create-the-service-controller-for-aws-elb)\n    - [Ingress Controller for AWS ALB](#ingress-controller-for-aws-alb)\n    - [Clean up the gorush](#clean-up-the-gorush)\n  - [Run gorush in AWS Lambda](#run-gorush-in-aws-lambda)\n    - [Build gorush binary](#build-gorush-binary)\n    - [Deploy gorush application](#deploy-gorush-application)\n    - [Without an AWS account](#without-an-aws-account)\n  - [Stargazers over time](#stargazers-over-time)\n  - [License](#license)\n\n## Support Platform\n\n- [APNS](https://developer.apple.com/documentation/usernotifications)\n- [FCM](https://firebase.google.com/)\n- [HMS](https://developer.huawei.com/consumer/en/hms/)\n\n[A live server on Netlify](https://gorush.netlify.app/) and get notification token on [Firebase Cloud Messaging web](https://fcm-demo-88b40.web.app/). You can use the token to send a notification to the device.\n\n```bash\ncurl -X POST \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"notifications\": [\n    {\n      \"tokens\": [\n        \"your_device_token\"\n      ],\n      \"platform\": 2,\n      \"title\": \"Test Title\",\n      \"message\": \"Test Message\"\n    }\n  ]\n}' \\\n  https://gorush.netlify.app/api/push\n```\n\n## Features\n\n- Support [Firebase Cloud Messaging](https://firebase.google.com/docs/cloud-messaging) using [go-fcm](https://github.com/appleboy/go-fcm) library for Android.\n- Support [HTTP/2](https://http2.github.io/) Apple Push Notification Service using [apns2](https://github.com/sideshow/apns2) library.\n- Support [HMS Push Service](https://developer.huawei.com/consumer/en/hms/huawei-pushkit) using [go-hms-push](https://github.com/msalihkarakasli/go-hms-push) library for Huawei Devices.\n- Support [YAML](https://github.com/go-yaml/yaml) configuration.\n- Support command line to send single Android or iOS notification.\n- Support Web API to send push notification.\n- Support [HTTP/2](https://http2.github.io/) or HTTP/1.1 protocol.\n- Support notification queue and multiple workers.\n- Support `/api/stat/app` show notification success and failure counts.\n- Support `/api/config` show your [YAML](https://en.wikipedia.org/wiki/YAML) config.\n- Support store app stat to memory, [Redis](http://redis.io/), [BoltDB](https://github.com/boltdb/bolt), [BuntDB](https://github.com/tidwall/buntdb), [LevelDB](https://github.com/syndtr/goleveldb) or [BadgerDB](https://github.com/dgraph-io/badger).\n- Support `p8`, `p12` or `pem` format of iOS certificate file.\n- Support `/sys/stats` show response time, status code count, etc.\n- Support for HTTP, HTTPS or SOCKS5 proxy.\n- Support retry send notification if server response is fail.\n- Support expose [prometheus](https://prometheus.io/) metrics.\n- Support install TLS certificates from [Let's Encrypt](https://letsencrypt.org/) automatically.\n- Support send notification through [RPC](https://en.wikipedia.org/wiki/Remote_procedure_call) protocol, we use [gRPC](https://grpc.io/) as default framework.\n- Support running in Docker, [Kubernetes](https://kubernetes.io/) or [AWS Lambda](https://aws.amazon.com/lambda) ([Native Support in Golang](https://aws.amazon.com/blogs/compute/announcing-go-support-for-aws-lambda/))\n- Support graceful shutdown that workers and queue have been sent to APNs/FCM before shutdown service.\n- Support different Queue as backend like [NSQ](https://nsq.io/), [NATS](https://nats.io/) or [Redis streams](https://redis.io/docs/manual/data-types/streams/), defaut engine is local [Channel](https://tour.golang.org/concurrency/2).\n\nSee the default [YAML config example](config/testdata/config.yml):\n\n```yaml\ncore:\n  enabled: true # enable httpd server\n  address: \"\" # ip address to bind (default: any)\n  shutdown_timeout: 30 # default is 30 second\n  port: \"8088\" # ignore this port number if auto_tls is enabled (listen 443).\n  worker_num: 0 # default worker number is runtime.NumCPU()\n  queue_num: 0 # default queue number is 8192\n  max_notification: 100\n  # set true if you need get error message from fail push notification in API response.\n  # It only works when the queue engine is local.\n  sync: false\n  # set webhook url if you need get error message asynchronously from fail push notification in API response.\n  feedback_hook_url: \"\"\n  feedback_timeout: 10 # default is 10 second\n  feedback_header:\n  mode: \"release\"\n  ssl: false\n  cert_path: \"cert.pem\"\n  key_path: \"key.pem\"\n  cert_base64: \"\"\n  key_base64: \"\"\n  http_proxy: \"\"\n  pid:\n    enabled: false\n    path: \"gorush.pid\"\n    override: true\n  auto_tls:\n    enabled: false # Automatically install TLS certificates from Let's Encrypt.\n    folder: \".cache\" # folder for storing TLS certificates\n    host: \"\" # which domains the Let's Encrypt will attempt\n\ngrpc:\n  enabled: false # enable gRPC server\n  port: 9000\n\napi:\n  push_uri: \"/api/push\"\n  stat_go_uri: \"/api/stat/go\"\n  stat_app_uri: \"/api/stat/app\"\n  config_uri: \"/api/config\"\n  sys_stat_uri: \"/sys/stats\"\n  metric_uri: \"/metrics\"\n  health_uri: \"/healthz\"\n\nandroid:\n  enabled: true\n  key_path: \"\" # path to fcm key file\n  credential: \"\" # fcm credential data\n  max_retry: 0 # resend fail notification, default value zero is disabled\n\nhuawei:\n  enabled: false\n  appsecret: \"YOUR_APP_SECRET\"\n  appid: \"YOUR_APP_ID\"\n  max_retry: 0 # resend fail notification, default value zero is disabled\n\nqueue:\n  engine: \"local\" # support \"local\", \"nsq\", \"nats\" and \"redis\" default value is \"local\"\n  nsq:\n    addr: 127.0.0.1:4150\n    topic: gorush\n    channel: gorush\n  nats:\n    addr: 127.0.0.1:4222\n    subj: gorush\n    queue: gorush\n  redis:\n    addr: 127.0.0.1:6379\n    group: gorush\n    consumer: gorush\n    stream_name: gorush\n\nios:\n  enabled: false\n  key_path: \"\"\n  key_base64: \"\" # load iOS key from base64 input\n  key_type: \"pem\" # could be pem, p12 or p8 type\n  password: \"\" # certificate password, default as empty string.\n  production: false\n  max_concurrent_pushes: 100 # just for push ios notification\n  max_retry: 0 # resend fail notification, default value zero is disabled\n  key_id: \"\" # KeyID from developer account (Certificates, Identifiers & Profiles -> Keys)\n  team_id: \"\" # TeamID from developer account (View Account -> Membership)\n\nlog:\n  format: \"string\" # string or json\n  access_log: \"stdout\" # stdout: output to console, or define log path like \"log/access_log\"\n  access_level: \"debug\"\n  error_log: \"stderr\" # stderr: output to console, or define log path like \"log/error_log\"\n  error_level: \"error\"\n  hide_token: true\n  hide_messages: false\n\nstat:\n  engine: \"memory\" # support memory, redis, boltdb, buntdb or leveldb\n  redis:\n    cluster: false\n    addr: \"localhost:6379\" # if cluster is true, you may set this to \"localhost:6379,localhost:6380,localhost:6381\"\n    username: \"\"\n    password: \"\"\n    db: 0\n  boltdb:\n    path: \"bolt.db\"\n    bucket: \"gorush\"\n  buntdb:\n    path: \"bunt.db\"\n  leveldb:\n    path: \"level.db\"\n  badgerdb:\n    path: \"badger.db\"\n```\n\n## Memory Usage\n\nMemory average usage: **28Mb** (the total bytes of memory obtained from the OS.)\n\n![memory usage](screenshot/memory.png)\n\nTest Command (We use [bat](https://github.com/astaxie/bat) as default cli tool.):\n\n```sh\nfor i in {1..9999999}; do bat -b.N=1000 -b.C=100 POST localhost:8088/api/push notifications:=@notification.json; sleep 1;  done\n```\n\n## Basic Usage\n\nHow to send push notification using `gorush` command? (Android or iOS)\n\n### Install from homebrew\n\n```sh\nbrew tap appleboy/tap\nbrew install gorush\n```\n\n### Download a binary\n\nThe pre-compiled binaries can be downloaded from [release page](https://github.com/appleboy/gorush/releases).\n\nWith `Go` installed\n\n```sh\ngo install github.com/appleboy/gorush\n```\n\nOn linux\n\n```sh\nwget https://github.com/appleboy/gorush/releases/download/v1.18.9/gorush-1.18.9-linux-amd64 -O gorush\n```\n\nOn macOS (Intel amd64)\n\n```sh\nwget -c https://github.com/appleboy/gorush/releases/download/v1.18.9/gorush-1.18.9-darwin-amd64 -O gorush\n```\n\nOn macOS (Apple arm64)\n\n```sh\nwget -c https://github.com/appleboy/gorush/releases/download/v1.18.9/gorush-1.18.9-darwin-arm64 -O gorush\n```\n\n### Install from source\n\n#### Prerequisite Tools\n\n- [Git](http://git-scm.com/)\n- [Go (at least Go 1.22)](https://go.dev/dl/)\n\n#### Fetch from GitHub\n\nGorush uses the Go Modules support built into Go 1.11 to build. The easiest way to get started is to clone Gorush in a directory outside of the GOPATH, as in the following example:\n\n```sh\nmkdir $HOME/src\ncd $HOME/src\ngit clone https://github.com/appleboy/gorush.git\ncd gorush\ngo install\n```\n\nor you can use the `go get` command to install the latest or specific version.\n\n**Note**: such go get installation aren't guaranteed to work. We recommend using binary installation.\n\n```sh\n# install stable version\ngo install github.com/appleboy/gorush\n\n# install latest version\ngo install github.com/appleboy/gorush@master\n```\n\n### Command Usage\n\n```sh\n  ________                              .__\n /  _____/   ____ _______  __ __  ______|  |__\n/   \\  ___  /  _ \\\\_  __ \\|  |  \\/  ___/|  |  \\\n\\    \\_\\  \\(  <_> )|  | \\/|  |  /\\___ \\ |   Y  \\\n \\______  / \\____/ |__|   |____//____  >|___|  /\n        \\/                           \\/      \\/\n\nUsage: gorush [options]\n\nServer Options:\n    -A, --address <address>          Address to bind (default: any)\n    -p, --port <port>                Use port for clients (default: 8088)\n    -c, --config <file>              Configuration file path\n    -m, --message <message>          Notification message\n    -t, --token <token>              Notification token\n    -e, --engine <engine>            Storage engine (memory, redis ...)\n    --title <title>                  Notification title\n    --proxy <proxy>                  Proxy URL\n    --pid <pid path>                 Process identifier path\n    --redis-addr <redis addr>        Redis addr (default: localhost:6379)\n    --ping                           healthy check command for container\niOS Options:\n    -i, --key <file>                 certificate key file path\n    -P, --password <password>        certificate key password\n    --ios                            enabled iOS (default: false)\n    --production                     iOS production mode (default: false)\nAndroid Options:\n    --fcm-key <fcm_key_path>         FCM Key Path\n    --android                        enabled android (default: false)\nHuawei Options:\n    -hk, --hmskey <hms_key>          HMS App Secret\n    -hid, --hmsid <hms_id>           HMS App ID\n    --huawei                         enabled huawei (default: false)\nCommon Options:\n    --topic <topic>                  iOS, Android or Huawei topic message\n    -h, --help                       Show this message\n    -V, --version                    Show version\n```\n\n### Send Android notification\n\nTo authenticate a service account and authorize it to access Firebase services, you must generate a private key file in JSON format.\n\n1. In the Firebase console, open **Settings** > [Service Accounts](https://console.firebase.google.com/project/_/settings/serviceaccounts/adminsdk?_gl=1*1eqxjfp*_ga*MTQ0NjI5MTQ2MS4xNzA4NjA3MzU0*_ga_CW55HF8NVT*MTcxNzgxNDMyNi4xMS4xLjE3MTc4MTUyMzguNjAuMC4w).\n2. Click **Generate New Private Key**, then confirm by clicking **Generate Key**.\n3. Securely store the JSON file containing the key.\n\nWhen authorizing via a service account, you have two choices for providing the credentials to your application. You can either set the **GOOGLE_APPLICATION_CREDENTIALS** environment variable, or you can explicitly pass the path to the service account key in code. The first option is more secure and is strongly recommended.\n\nSend single notification with the following command.\n\n```bash\ngorush -android -m \"your message\" --fcm-key \"FCM Credentials Key Path\" -t \"device token\"\n\n# or set GOOGLE_APPLICATION_CREDENTIALS environment variable\nexport GOOGLE_APPLICATION_CREDENTIALS=\"FCM Credentials Key Path\"\ngorush -android -m \"your message\" -t \"device token\"\n```\n\nSend messages to topics.\n\n```bash\ngorush --android --topic \"foo-bar\" \\\n  -m \"This is a Firebase Cloud Messaging Topic Message\" \\\n  --fcm-key \"FCM Credentials Key Path\"\n```\n\n- `-m`: Notification message.\n- `--fcm-key`: [Firebase Cloud Messaging Provide credentials manually](https://firebase.google.com/docs/cloud-messaging/auth-server#provide-credentials-manually)\n- `-t`: Device token.\n- `--title`: Notification title.\n- `--topic`: Send messages to topics. note: don't add device token.\n- `--proxy`: Set `http`, `https` or `socks5` proxy url.\n\n### Send Huawei (HMS) notification\n\nSend single notification with the following command.\n\n```bash\ngorush -huawei -title \"Gorush with HMS\" -m \"your message\" -hk \"API Key\" -hid \"App ID\" -t \"Device token\"\n```\n\nSend messages to topics.\n\n```bash\ngorush --huawei --topic \"foo-bar\" \\\n  -title \"Gorush with HMS\" \\\n  -m \"This is a Huawei Mobile Services Topic Message\" \\\n  -hk \"API Key\" \\\n  -hid \"App ID\"\n```\n\n- `-m`: Notification message.\n- `-hk`: [Huawei Mobile Services](https://developer.huawei.com/consumer/en/doc/development/HMS-Guides/Preparations) api secret key\n- `-t`: Device token.\n- `--title`: Notification title.\n- `--topic`: Send messages to topics. note: don't add device token.\n- `--proxy`: Set `http`, `https` or `socks5` proxy url.\n\n### Send iOS notification\n\nSend single notification with the following command.\n\n```bash\n$ gorush -ios -m \"your message\" -i \"your certificate path\" \\\n  -t \"device token\" --topic \"apns topic\"\n```\n\n- `-m`: Notification message.\n- `-i`: Apple Push Notification Certificate path (`pem` or `p12` file).\n- `-t`: Device token.\n- `--title`: Notification title.\n- `--topic`: The topic of the remote notification.\n- `--password`: The certificate password.\n\nThe default endpoint is APNs development. Please add `-production` flag for APNs production push endpoint.\n\n```bash\n$ gorush -ios -m \"your message\" -i \"your certificate path\" \\\n  -t \"device token\" \\\n  -production\n```\n\n### Send Android or iOS notifications using Firebase Cloud Messaging\n\nSend single notification with the following command:\n\n```bash\ngorush -android -m \"your message\" \\\n  --fcm-key \"FCM Credentials Key Path\" \\\n  -t \"Device token\"\n```\n\n## Run gorush web server\n\nPlease make sure your [config.yml](config/testdata/config.yml) exist. Default port is `8088`.\n\n```bash\n# for default config\n$ gorush\n# for custom config file\n$ gorush -c config.yml\n```\n\nGet go status of api server using [httpie](https://github.com/httpie/cli) tool:\n\n```bash\n# install httpie\nbrew install httpie\n# get go status\nhttp -v --json GET http://localhost:8088/api/stat/go\n```\n\n## Web API\n\nGorush support the following API.\n\n- **GET** `/api/stat/go` Golang cpu, memory, gc, etc information. Thanks for [golang-stats-api-handler](https://github.com/fukata/golang-stats-api-handler).\n- **GET** `/api/stat/app` show notification success and failure counts.\n- **GET** `/api/config` show server yml config file.\n- **POST** `/api/push` push ios, android or huawei notifications.\n\n### GET /api/stat/go\n\nGolang cpu, memory, gc, etc information. Response with `200` http status code.\n\n```json\n{\n  \"time\": 1460686815848046600,\n  \"go_version\": \"go1.6.1\",\n  \"go_os\": \"darwin\",\n  \"go_arch\": \"amd64\",\n  \"cpu_num\": 4,\n  \"goroutine_num\": 15,\n  \"gomaxprocs\": 4,\n  \"cgo_call_num\": 1,\n  \"memory_alloc\": 7455192,\n  \"memory_total_alloc\": 8935464,\n  \"memory_sys\": 12560632,\n  \"memory_lookups\": 17,\n  \"memory_mallocs\": 31426,\n  \"memory_frees\": 11772,\n  \"memory_stack\": 524288,\n  \"heap_alloc\": 7455192,\n  \"heap_sys\": 8912896,\n  \"heap_idle\": 909312,\n  \"heap_inuse\": 8003584,\n  \"heap_released\": 0,\n  \"heap_objects\": 19654,\n  \"gc_next\": 9754725,\n  \"gc_last\": 1460686815762559700,\n  \"gc_num\": 2,\n  \"gc_per_second\": 0,\n  \"gc_pause_per_second\": 0,\n  \"gc_pause\": [0.326576, 0.227096]\n}\n```\n\n### GET /api/stat/app\n\nShow success or failure counts information of notification.\n\n```json\n{\n  \"version\": \"v1.6.2\",\n  \"busy_workers\": 0,\n  \"success_tasks\": 32,\n  \"failure_tasks\": 49,\n  \"submitted_tasks\": 81,\n  \"total_count\": 81,\n  \"ios\": {\n    \"push_success\": 19,\n    \"push_error\": 38\n  },\n  \"android\": {\n    \"push_success\": 10,\n    \"push_error\": 10\n  },\n  \"huawei\": {\n    \"push_success\": 3,\n    \"push_error\": 1\n  }\n}\n```\n\n### GET /sys/stats\n\nShow response time, status code count, etc.\n\n```json\n{\n  \"pid\": 80332,\n  \"uptime\": \"1m42.428010614s\",\n  \"uptime_sec\": 102.428010614,\n  \"time\": \"2016-06-26 12:27:11.675973571 +0800 CST\",\n  \"unixtime\": 1466915231,\n  \"status_code_count\": {},\n  \"total_status_code_count\": {\n    \"200\": 5\n  },\n  \"count\": 0,\n  \"total_count\": 5,\n  \"total_response_time\": \"10.422441ms\",\n  \"total_response_time_sec\": 0.010422441000000001,\n  \"average_response_time\": \"2.084488ms\",\n  \"average_response_time_sec\": 0.0020844880000000002\n}\n```\n\n### GET /metrics\n\nSupport expose [prometheus](https://prometheus.io/) metrics.\n\n![metrics screenshot](screenshot/metrics.png)\n\n### POST /api/push\n\nSimple send iOS notification example, the `platform` value is `1`:\n\n```json\n{\n  \"notifications\": [\n    {\n      \"tokens\": [\"token_a\", \"token_b\"],\n      \"platform\": 1,\n      \"message\": \"Hello World iOS!\"\n    }\n  ]\n}\n```\n\nSimple send Android notification example, the `platform` value is `2`:\n\n```json\n{\n  \"notifications\": [\n    {\n      \"tokens\": [\"token_a\", \"token_b\"],\n      \"platform\": 2,\n      \"message\": \"Hello World Android!\"\n    }\n  ]\n}\n```\n\nSimple send Huawei notification example, the `platform` value is `3`:\n\n```json\n{\n  \"notifications\": [\n    {\n      \"tokens\": [\"token_a\", \"token_b\"],\n      \"platform\": 3,\n      \"title\": \"Gorush with HMS\",\n      \"message\": \"Hello World Huawei!\"\n    }\n  ]\n}\n```\n\nSimple send notification on Android and iOS devices using Firebase, the `platform` value is `2`:\n\n```json\n{\n  \"notifications\": [\n    {\n      \"tokens\": [\"token_a\", \"token_b\"],\n      \"platform\": 2,\n      \"message\": \"This notification will go to iOS and Android platform via Firebase!\"\n    }\n  ]\n}\n```\n\nSend notification with custom sound on iOS devices, **volume must be in the interval [0, 1]**:\n\n```json\n{\n  \"notifications\": [\n    {\n      \"tokens\": [\"token_a\", \"token_b\"],\n      \"title\": \"Hello World iOS!\",\n      \"message\": \"Hello World iOS!\",\n      \"platform\": 2,\n      \"apns\": {\n        \"payload\": {\n          \"aps\": {\n            \"sound\": {\n              \"name\": \"default\",\n              \"critical\": 1,\n              \"volume\": 0.1\n            }\n          }\n        }\n      }\n    }\n  ]\n}\n```\n\nSend multiple notifications as below:\n\n```json\n{\n  \"notifications\": [\n    {\n      \"tokens\": [\"token_a\", \"token_b\"],\n      \"platform\": 1,\n      \"message\": \"Hello World iOS!\"\n    },\n    {\n      \"tokens\": [\"token_a\", \"token_b\"],\n      \"platform\": 2,\n      \"message\": \"Hello World Android!\"\n    },\n    {\n      \"tokens\": [\"token_a\", \"token_b\"],\n      \"platform\": 3,\n      \"message\": \"Hello World Huawei!\",\n      \"title\": \"Gorush with HMS\"\n    },\n    .....\n  ]\n}\n```\n\nSee more example about [iOS](#ios-example), [Android](#android-example) or [Huawei](#huawei-example)\n\n### Request body\n\nThe Request body must have a notifications array. The following is a parameter table for each notification.\n\n| name                    | type         | description                                                                                       | required | note                                                          |\n| ----------------------- | ------------ | ------------------------------------------------------------------------------------------------- | -------- | ------------------------------------------------------------- |\n| notif_id                | string       | A unique string that identifies the notification for async feedback                               | -        |                                                               |\n| tokens                  | string array | device tokens                                                                                     | o        |                                                               |\n| platform                | int          | platform(iOS,Android)                                                                             | o        | 1=iOS, 2=Android (Firebase), 3=Huawei (HMS)                   |\n| message                 | string       | message for notification                                                                          | -        |                                                               |\n| title                   | string       | notification title                                                                                | -        |                                                               |\n| priority                | string       | Sets the priority of the message.                                                                 | -        | `normal` or `high`                                            |\n| content_available       | bool         | data messages wake the app by default.                                                            | -        |                                                               |\n| sound                   | interface{}  | sound type                                                                                        | -        |                                                               |\n| data                    | string array | extensible partition                                                                              | -        | only Android and IOS                                          |\n| huawei_data             | string       | JSON object as string to extensible partition partition                                           | -        | only Huawei. See the [detail](#huawei-notification)           |\n| retry                   | int          | retry send notification if fail response from server. Value must be small than `max_retry` field. | -        |                                                               |\n| topic                   | string       | send messages to topics                                                                           |          |                                                               |\n| image                   | string       | image url to show in notification                                                                 | -        | only Android and Huawei                                       |\n| to                      | string       | The value must be a registration token, notification key, or topic.                               | -        | only Android                                                  |\n| collapse_key            | string       | a key for collapsing notifications                                                                | -        | only Android                                                  |\n| huawei_collapse_key     | int          | a key integer for collapsing notifications                                                        | -        | only Huawei See the [detail](#huawei-notification)            |\n| delay_while_idle        | bool         | a flag for device idling                                                                          | -        | only Android                                                  |\n| time_to_live            | uint         | expiration of message kept on FCM storage                                                         | -        | only Android                                                  |\n| huawei_ttl              | string       | expiration of message kept on HMS storage                                                         | -        | only Huawei See the [detail](#huawei-notification)            |\n| restricted_package_name | string       | the package name of the application                                                               | -        | only Android                                                  |\n| dry_run                 | bool         | allows developers to test a request without actually sending a message                            | -        | only Android                                                  |\n| notification            | string array | payload of a FCM message                                                                          | -        | only Android. See the [detail](#android-notification-payload) |\n| huawei_notification     | string array | payload of a HMS message                                                                          | -        | only Huawei. See the [detail](#huawei-notification)           |\n| app_id                  | string       | hms app id                                                                                        | -        | only Huawei. See the [detail](#huawei-notification)           |\n| bi_tag                  | string       | Tag of a message in a batch delivery task                                                         | -        | only Huawei. See the [detail](#huawei-notification)           |\n| fast_app_target         | int          | State of a mini program when a quick app sends a data message.                                    | -        | only Huawei. See the [detail](#huawei-notification)           |\n| expiration              | int          | expiration for notification                                                                       | -        | only iOS                                                      |\n| apns_id                 | string       | A canonical UUID that identifies the notification                                                 | -        | only iOS                                                      |\n| collapse_id             | string       | An identifier you use to coalesce multiple notifications into a single notification for the user  | -        | only iOS                                                      |\n| push_type               | string       | The type of the notification. The value of this header is alert or background.                    | -        | only iOS                                                      |\n| badge                   | int          | badge count                                                                                       | -        | only iOS                                                      |\n| category                | string       | the UIMutableUserNotificationCategory object                                                      | -        | only iOS                                                      |\n| alert                   | string array | payload of a iOS message                                                                          | -        | only iOS. See the [detail](#ios-alert-payload)                |\n| mutable_content         | bool         | enable Notification Service app extension.                                                        | -        | only iOS(10.0+).                                              |\n| name                    | string       | sets the name value on the aps sound dictionary.                                                  | -        | only iOS                                                      |\n| volume                  | float32      | sets the volume value on the aps sound dictionary.                                                | -        | only iOS                                                      |\n| interruption_level      | string       | defines the interruption level for the push notification.                                         | -        | only iOS(15.0+)                                               |\n| content-state           | string array | dynamic and custom content for live-activity notification.                                        | -        | only iOS(16.1+)                                               |\n| timestamp               | int          | the UNIX time when sending the remote notification that updates or ends a Live Activity           | -        | only iOS(16.1+)                                               |\n| event                   | string       | describes whether you update or end an ongoing Live Activity                                      | -        | only iOS(16.1+)                                               |\n| stale-date              | int          | the date which a Live Activity becomes stale, or out of date                                      | -        | only iOS(16.1+)                                               |\n| dismissal-date          | int          | the UNIX time -timestamp- which a Live Activity will end and will be removed                      | -        | only iOS(16.1+)                                               |\n\n### iOS alert payload\n\n| name           | type             | description                                                                                      | required | note |\n| -------------- | ---------------- | ------------------------------------------------------------------------------------------------ | -------- | ---- |\n| title          | string           | Apple Watch & Safari display this string as part of the notification interface.                  | -        |      |\n| body           | string           | The text of the alert message.                                                                   | -        |      |\n| subtitle       | string           | Apple Watch & Safari display this string as part of the notification interface.                  | -        |      |\n| action         | string           | The label of the action button. This one is required for Safari Push Notifications.              | -        |      |\n| action-loc-key | string           | If a string is specified, the system displays an alert that includes the Close and View buttons. | -        |      |\n| launch-image   | string           | The filename of an image file in the app bundle, with or without the filename extension.         | -        |      |\n| loc-args       | array of strings | Variable string values to appear in place of the format specifiers in loc-key.                   | -        |      |\n| loc-key        | string           | A key to an alert-message string in a Localizable.strings file for the current localization.     | -        |      |\n| title-loc-args | array of strings | Variable string values to appear in place of the format specifiers in title-loc-key.             | -        |      |\n| title-loc-key  | string           | The key to a title string in the Localizable.strings file for the current localization.          | -        |      |\n\nSee more detail about [APNs Remote Notification Payload](https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/PayloadKeyReference.html).\n\n### iOS sound payload\n\n| name     | type    | description                                          | required | note |\n| -------- | ------- | ---------------------------------------------------- | -------- | ---- |\n| name     | string  | sets the name value on the aps sound dictionary.     | -        |      |\n| volume   | float32 | sets the volume value on the aps sound dictionary.   | -        |      |\n| critical | int     | sets the critical value on the aps sound dictionary. | -        |      |\n\nrequest format:\n\n```json\n{\n  \"sound\": {\n    \"critical\": 1,\n    \"name\": \"default\",\n    \"volume\": 2.0\n  }\n}\n```\n\n### Android notification payload\n\n| name           | type   | description                                                                                               | required | note |\n| -------------- | ------ | --------------------------------------------------------------------------------------------------------- | -------- | ---- |\n| icon           | string | Indicates notification icon.                                                                              | -        |      |\n| tag            | string | Indicates whether each notification message results in a new entry on the notification center on Android. | -        |      |\n| color          | string | Indicates color of the icon, expressed in #rrggbb format                                                  | -        |      |\n| click_action   | string | The action associated with a user click on the notification.                                              | -        |      |\n| body_loc_key   | string | Indicates the key to the body string for localization.                                                    | -        |      |\n| body_loc_args  | string | Indicates the string value to replace format specifiers in body string for localization.                  | -        |      |\n| title_loc_key  | string | Indicates the key to the title string for localization.                                                   | -        |      |\n| title_loc_args | string | Indicates the string value to replace format specifiers in title string for localization.                 | -        |      |\n\nSee more detail about [Firebase Cloud Messaging HTTP Protocol reference](https://firebase.google.com/docs/cloud-messaging/http-server-ref#send-downstream).\n\n### Huawei notification\n\n1. app_id: app id from huawei developer console\n2. bi_tag:\n3. fast_app_target:\n4. huawei_data: mapped to data\n5. huawei_notification: mapped to notification\n6. huawei_ttl: mapped to ttl\n7. huawei_collapse_key: mapped to collapse_key\n\nSee more detail about [Huawei Mobulse Services Push API reference](https://developer.huawei.com/consumer/en/doc/development/HMS-References/push-sendapi).\n\n### iOS Example\n\nSend normal notification.\n\n```json\n{\n  \"notifications\": [\n    {\n      \"tokens\": [\"token_a\", \"token_b\"],\n      \"platform\": 1,\n      \"message\": \"Hello World iOS!\"\n    }\n  ]\n}\n```\n\nThe following payload asks the system to display an alert with a Close button and a single action button.The title and body keys provide the contents of the alert. The “PLAY” string is used to retrieve a localized string from the appropriate Localizable.strings file of the app. The resulting string is used by the alert as the title of an action button. This payload also asks the system to badge the app’s icon with the number 5.\n\n```json\n{\n  \"notifications\": [\n    {\n      \"tokens\": [\"token_a\", \"token_b\"],\n      \"platform\": 1,\n      \"badge\": 5,\n      \"alert\": {\n        \"title\": \"Game Request\",\n        \"body\": \"Bob wants to play poker\",\n        \"action-loc-key\": \"PLAY\"\n      }\n    }\n  ]\n}\n```\n\nThe following payload specifies that the device should display an alert message, plays a sound, and badges the app’s icon.\n\n```json\n{\n  \"notifications\": [\n    {\n      \"tokens\": [\"token_a\", \"token_b\"],\n      \"platform\": 1,\n      \"message\": \"You got your emails.\",\n      \"badge\": 9,\n      \"sound\": {\n        \"critical\": 1,\n        \"name\": \"default\",\n        \"volume\": 1.0\n      }\n    }\n  ]\n}\n```\n\nAdd other fields which user defined via `data` field.\n\n```json\n{\n  \"notifications\": [\n    {\n      \"tokens\": [\"token_a\", \"token_b\"],\n      \"platform\": 1,\n      \"message\": \"Hello World iOS!\",\n      \"data\": {\n        \"key1\": \"welcome\",\n        \"key2\": 2\n      }\n    }\n  ]\n}\n```\n\nSupport send notification from different environment. See the detail of [issue](https://github.com/appleboy/gorush/issues/246).\n\n```diff\n{\n  \"notifications\": [\n    {\n      \"tokens\": [\"token_a\", \"token_b\"],\n      \"platform\": 1,\n+     \"production\": true,\n      \"message\": \"Hello World iOS Production!\"\n    },\n    {\n      \"tokens\": [\"token_a\", \"token_b\"],\n      \"platform\": 1,\n+     \"development\": true,\n      \"message\": \"Hello World iOS Sandbox!\"\n    }\n  ]\n}\n```\n\n### Android Example\n\nSend normal notification.\n\n```json\n{\n  \"notifications\": [\n    {\n      \"tokens\": [\"token_a\", \"token_b\"],\n      \"platform\": 2,\n      \"message\": \"Hello World Android!\",\n      \"title\": \"You got message\"\n    }\n  ]\n}\n```\n\nAdd `notification` payload.\n\n```json\n{\n  \"notifications\": [\n    {\n      \"tokens\": [\"token_a\", \"token_b\"],\n      \"platform\": 2,\n      \"message\": \"Hello World Android!\",\n      \"title\": \"You got message\",\n      \"notification\": {\n        \"icon\": \"myicon\",\n        \"color\": \"#112244\"\n      }\n    }\n  ]\n}\n```\n\nAdd other fields which user defined via `data` field.\n\n```json\n{\n  \"notifications\": [\n    {\n      \"tokens\": [\"token_a\", \"token_b\"],\n      \"platform\": 2,\n      \"message\": \"Hello World Android!\",\n      \"title\": \"You got message\",\n      \"data\": {\n        \"Nick\": \"Mario\",\n        \"body\": \"great match!\",\n        \"Room\": \"PortugalVSDenmark\"\n      }\n    }\n  ]\n}\n```\n\nSend messages to topic\n\n```json\n{\n  \"notifications\": [\n    {\n      \"topic\": \"highScores\",\n      \"platform\": 2,\n      \"message\": \"This is a Firebase Cloud Messaging Topic Message\"\n    }\n  ]\n}\n```\n\n### Huawei Example\n\nSend normal notification.\n\n```json\n{\n  \"notifications\": [\n    {\n      \"tokens\": [\"token_a\", \"token_b\"],\n      \"platform\": 3,\n      \"message\": \"Hello World Huawei!\",\n      \"title\": \"You got message\"\n    }\n  ]\n}\n```\n\nAdd `notification` payload.\n\n```json\n{\n  \"notifications\": [\n    {\n      \"tokens\": [\"token_a\", \"token_b\"],\n      \"platform\": 3,\n      \"message\": \"Hello World Huawei!\",\n      \"title\": \"You got message\",\n      \"huawei_notification\": {\n        \"icon\": \"myicon\",\n        \"color\": \"#112244\"\n      }\n    }\n  ]\n}\n```\n\nAdd other fields which user defined via `huawei_data` field.\n\n```json\n{\n  \"notifications\": [\n    {\n      \"tokens\": [\"token_a\", \"token_b\"],\n      \"platform\": 3,\n      \"huawei_data\": \"{'title' : 'Mario','message' : 'great match!', 'Room' : 'PortugalVSDenmark'}\"\n    }\n  ]\n}\n```\n\nSend messages to topics\n\n```json\n{\n  \"notifications\": [\n    {\n      \"topic\": \"foo-bar\",\n      \"platform\": 3,\n      \"message\": \"This is a Huawei Mobile Services Topic Message\",\n      \"title\": \"You got message\"\n    }\n  ]\n}\n```\n\n### Response body\n\nError response message table:\n\n| status code | message                                    |\n| ----------- | ------------------------------------------ |\n| 400         | Missing `notifications` field.             |\n| 400         | Notifications field is empty.              |\n| 400         | Number of notifications(50) over limit(10) |\n\nSuccess response:\n\n```json\n{\n  \"counts\": 60,\n  \"logs\": [],\n  \"success\": \"ok\"\n}\n```\n\nIf you need error logs from sending fail notifications, please set a `feedback_hook_url` and `feedback_header` for custom header. The server with send the failing logs asynchronously to your API as `POST` requests.\n\n```diff\ncore:\n  port: \"8088\" # ignore this port number if auto_tls is enabled (listen 443).\n  worker_num: 0 # default worker number is runtime.NumCPU()\n  queue_num: 0 # default queue number is 8192\n  max_notification: 100\n  sync: false\n- feedback_hook_url: \"\"\n+ feedback_hook_url: \"https://exemple.com/api/hook\"\n+ feedback_header:\n+   - x-gorush-token:4e989115e09680f44a645519fed6a976\n```\n\nYou can also switch to **sync** mode by setting the `sync` value as `true` on yaml config. It only works when the queue engine is local.\n\n```diff\ncore:\n  port: \"8088\" # ignore this port number if auto_tls is enabled (listen 443).\n  worker_num: 0 # default worker number is runtime.NumCPU()\n  queue_num: 0 # default queue number is 8192\n  max_notification: 100\n- sync: false\n+ sync: true\n```\n\nSee the following error format.\n\n```json\n{\n  \"counts\": 60,\n  \"logs\": [\n    {\n      \"type\": \"failed-push\",\n      \"platform\": \"android\",\n      \"token\": \"*******\",\n      \"message\": \"Hello World Android!\",\n      \"error\": \"InvalidRegistration\"\n    },\n    {\n      \"type\": \"failed-push\",\n      \"platform\": \"ios\",\n      \"token\": \"*****\",\n      \"message\": \"Hello World iOS1111!\",\n      \"error\": \"Post https://api.push.apple.com/3/device/bbbbb: remote error: tls: revoked certificate\"\n    },\n    {\n      \"type\": \"failed-push\",\n      \"platform\": \"ios\",\n      \"token\": \"*******\",\n      \"message\": \"Hello World iOS222!\",\n      \"error\": \"Post https://api.push.apple.com/3/device/token_b: remote error: tls: revoked certificate\"\n    }\n  ],\n  \"success\": \"ok\"\n}\n```\n\n## Run gRPC service\n\nGorush support [gRPC](https://grpc.io/) service. You can enable the gRPC in `config.yml`, default as disabled. Enable the gRPC server:\n\n```sh\nGORUSH_GRPC_ENABLED=true GORUSH_GRPC_PORT=3000 gorush\n```\n\nThe following example code to send single notification in Go.\n\n```go\npackage main\n\nimport (\n  \"context\"\n  \"log\"\n\n  \"github.com/appleboy/gorush/rpc/proto\"\n\n  structpb \"github.com/golang/protobuf/ptypes/struct\"\n  \"google.golang.org/grpc\"\n)\n\nconst (\n  address = \"localhost:9000\"\n)\n\nfunc main() {\n  // Set up a connection to the server.\n  conn, err := grpc.NewClient(address, grpc.WithInsecure())\n  if err != nil {\n    log.Fatalf(\"did not connect: %v\", err)\n  }\n  defer conn.Close()\n  c := proto.NewGorushClient(conn)\n\n  r, err := c.Send(context.Background(), &proto.NotificationRequest{\n    Platform: 2,\n    Tokens:   []string{\"1234567890\"},\n    Message:  \"test message\",\n    Badge:    1,\n    Category: \"test\",\n    Sound:    \"test\",\n    Priority: proto.NotificationRequest_HIGH,\n    Alert: &proto.Alert{\n      Title:    \"Test Title\",\n      Body:     \"Test Alert Body\",\n      Subtitle: \"Test Alert Sub Title\",\n      LocKey:   \"Test loc key\",\n      LocArgs:  []string{\"test\", \"test\"},\n    },\n    Data: &structpb.Struct{\n      Fields: map[string]*structpb.Value{\n        \"key1\": {\n          Kind: &structpb.Value_StringValue{StringValue: \"welcome\"},\n        },\n        \"key2\": {\n          Kind: &structpb.Value_NumberValue{NumberValue: 2},\n        },\n      },\n    },\n  })\n  if err != nil {\n    log.Println(\"could not greet: \", err)\n  }\n\n  if r != nil {\n    log.Printf(\"Success: %t\\n\", r.Success)\n    log.Printf(\"Count: %d\\n\", r.Counts)\n  }\n}\n```\n\nSee the Node.js example and see more detail from [README](rpc/example/node/README.md):\n\n```js\nvar messages = require(\"./gorush_pb\");\nvar services = require(\"./gorush_grpc_pb\");\n\nvar grpc = require(\"grpc\");\n\nfunction main() {\n  var client = new services.GorushClient(\n    \"localhost:9000\",\n    grpc.credentials.createInsecure()\n  );\n  var request = new messages.NotificationRequest();\n  var alert = new messages.Alert();\n  request.setPlatform(2);\n  request.setTokensList([\"1234567890\"]);\n  request.setMessage(\"Hello!!\");\n  request.setTitle(\"hello2\");\n  request.setBadge(2);\n  request.setCategory(\"mycategory\");\n  request.setSound(\"sound\");\n  alert.setTitle(\"title\");\n  request.setAlert(alert);\n  request.setThreadid(\"threadID\");\n  request.setContentavailable(false);\n  request.setMutablecontent(false);\n  client.send(request, function (err, response) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log(\"Success:\", response.getSuccess());\n      console.log(\"Counts:\", response.getCounts());\n    }\n  });\n}\n\nmain();\n```\n\nGRPC Health Checking example: See [document](https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n```go\npackage main\n\nimport (\n  \"context\"\n  \"log\"\n\n  \"github.com/appleboy/gorush/rpc/proto\"\n\n  structpb \"github.com/golang/protobuf/ptypes/struct\"\n  \"google.golang.org/grpc\"\n)\n\nconst (\n  address = \"localhost:9000\"\n)\n\nfunc main() {\n  // Set up a connection to the server.\n  conn, err := grpc.NewClient(address, grpc.WithInsecure())\n  if err != nil {\n    log.Fatalf(\"did not connect: %v\", err)\n  }\n  defer conn.Close()\n  c := proto.NewGorushClient(conn)\n\n  r, err := c.Send(context.Background(), &proto.NotificationRequest{\n    Platform: 2,\n    Tokens:   []string{\"1234567890\"},\n    Message:  \"test message\",\n    Badge:    1,\n    Category: \"test\",\n    Sound:    \"test\",\n    Priority: proto.NotificationRequest_HIGH,\n    Alert: &proto.Alert{\n      Title:    \"Test Title\",\n      Body:     \"Test Alert Body\",\n      Subtitle: \"Test Alert Sub Title\",\n      LocKey:   \"Test loc key\",\n      LocArgs:  []string{\"test\", \"test\"},\n    },\n    Data: &structpb.Struct{\n      Fields: map[string]*structpb.Value{\n        \"key1\": {\n          Kind: &structpb.Value_StringValue{StringValue: \"welcome\"},\n        },\n        \"key2\": {\n          Kind: &structpb.Value_NumberValue{NumberValue: 2},\n        },\n      },\n    },\n  })\n  if err != nil {\n    log.Println(\"could not greet: \", err)\n  }\n\n  if r != nil {\n    log.Printf(\"Success: %t\\n\", r.Success)\n    log.Printf(\"Count: %d\\n\", r.Counts)\n  }\n}\n```\n\n## Run gorush in Docker\n\nSet up `gorush` in the cloud in under 5 minutes with zero knowledge of Golang or Linux shell using our [gorush Docker image](https://hub.docker.com/r/appleboy/gorush/).\n\n```bash\ndocker pull appleboy/gorush\ndocker run --name gorush -p 80:8088 appleboy/gorush\n```\n\nRun `gorush` with your own config file.\n\n```bash\ndocker pull appleboy/gorush\ndocker run --name gorush -v ${PWD}/config.yml:/home/gorush/config.yml -p 80:8088 appleboy/gorush\n```\n\nTesting your gorush server using [httpie](https://github.com/jkbrzt/httpie) command.\n\n```bash\nhttp -v --verify=no --json GET http://your.docker.host/api/stat/go\n```\n\n![statue screenshot](screenshot/status.png)\n\n## Run gorush in Kubernetes\n\n### Quick Start\n\nCreate namespace as `gorush` as `gorush` and then your configuration map:\n\n```sh\nkubectl create -f k8s/gorush-namespace.yaml\nkubectl create -f k8s/gorush-configmap.yaml\n```\n\nCreate redis service:\n\n```sh\nkubectl create -f k8s/gorush-redis-deployment.yaml\nkubectl create -f k8s/gorush-redis-service.yaml\n```\n\nCreate gorush deployment controller provides declarative updates for Pods and ReplicaSets:\n\n```sh\nkubectl create -f k8s/gorush-deployment.yaml\n```\n\n### Create the Service Controller for AWS ELB\n\n```sh\nkubectl create -f k8s/gorush-service.yaml\n```\n\n### Ingress Controller for AWS ALB\n\nUpdate the following in `k8s/gorush-service.yaml`\n\n```diff\n-  type: LoadBalancer\n-  # type: NodePort\n+  # type: LoadBalancer\n+  type: NodePort\n```\n\nThen start the AWS ALB by the follwong command.\n\n```sh\nkubectl create -f k8s/gorush-service.yaml\nkubectl create -f k8s/gorush-aws-alb-ingress.yaml\n```\n\n### Clean up the gorush\n\n```sh\nkubectl delete -f k8s\n```\n\n## Run gorush in AWS Lambda\n\n![lambda](./screenshot/lambda.png)\n\nAWS excited to [announce Go as a supported language for AWS Lambda](https://aws.amazon.com/blogs/compute/announcing-go-support-for-aws-lambda/). You’re going to create an application that uses an [API Gateway](https://aws.amazon.com/apigateway) event source to create a simple Hello World RESTful API.\n\n### Build gorush binary\n\nDownload source code first.\n\n```sh\ngit clone https://github.com/appleboy/gorush.git\ncd gorush && make build_linux_lambda\n```\n\nyou can see the binary file in `release/linux/lambda/` folder\n\n### Deploy gorush application\n\nwe need to build a binary that will run on Linux, and ZIP it up into a deployment package.\n\n```sh\nzip deployment.zip release/linux/lambda/gorush\n```\n\nUpload the `deployment.zip` via web UI or you can try the [drone-lambda](https://github.com/appleboy/drone-lambda) as the following command. it will zip your binary file and upload to AWS Lambda automatically.\n\n```sh\n$ AWS_ACCESS_KEY_ID=YOUR_AWS_ACCESS_KEY_ID \\\n  AWS_SECRET_ACCESS_KEY=YOUR_AWS_SECRET_ACCESS_KEY \\\n  drone-lambda --region ap-southeast-1 \\\n  --function-name gorush \\\n  --source release/linux/lambda/gorush\n```\n\n### Without an AWS account\n\nOr you can deploy gorush to alternative solution like [netlify functions](https://docs.netlify.com/functions/overview/). [Netlify](https://www.netlify.com/) lets you deploy serverless Lambda functions without an AWS account, and with function management handled directly within Netlify. Please see the netlify.toml file:\n\n```toml\n[build]\ncommand = \"make build_linux_lambda\"\nfunctions = \"release/linux/lambda\"\n\n[build.environment]\nGO111MODULE = \"on\"\nGO_IMPORT_PATH = \"github.com/appleboy/gorush\"\nGO_VERSION = \"1.21.11\"\n\n[[redirects]]\nfrom = \"/*\"\nstatus = 200\nto = \"/.netlify/functions/gorush/:splat\"\n```\n\n## Stargazers over time\n\n[![Stargazers over time](https://starchart.cc/appleboy/gorush.svg)](https://starchart.cc/appleboy/gorush)\n\n## License\n\nCopyright 2019 Bo-Yi Wu [@appleboy](https://twitter.com/appleboy).\n\nLicensed under the MIT License.\n"
        },
        {
          "name": "certificate",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc.go",
          "type": "blob",
          "size": 1.3603515625,
          "content": "// A push notification server using Gin framework written in Go (Golang).\n//\n// Details about the gorush project are found in github page:\n//\n//\thttps://github.com/appleboy/gorush\n//\n// The pre-compiled binaries can be downloaded from release page.\n//\n// Send Android notification\n//\n//\t$ gorush -android -m=\"your message\" --fcm-key=\"FCM Key Path\" -t=\"Device token\"\n//\n// Send iOS notification\n//\n//\t$ gorush -ios -m=\"your message\" -i=\"API Key\" -t=\"Device token\"\n//\n// The default endpoint is APNs development. Please add -production flag for APNs production push endpoint.\n//\n//\t$ gorush -ios -m=\"your message\" -i=\"API Key\" -t=\"Device token\" -production\n//\n// Run gorush web server\n//\n//\t$ gorush -c config.yml\n//\n// Get go status of api server using httpie tool:\n//\n//\t$ http -v --verify=no --json GET https://localhost:8088/api/stat/go\n//\n// Simple send iOS notification example, the platform value is 1:\n//\n//\t{\n//\t  \"notifications\": [\n//\t    {\n//\t      \"tokens\": [\"token_a\", \"token_b\"],\n//\t      \"platform\": 1,\n//\t      \"message\": \"Hello World iOS!\"\n//\t    }\n//\t  ]\n//\t}\n//\n// Simple send Android notification example, the platform value is 2:\n//\n//\t{\n//\t  \"notifications\": [\n//\t    {\n//\t      \"tokens\": [\"token_a\", \"token_b\"],\n//\t      \"platform\": 2,\n//\t      \"message\": \"Hello World Android!\"\n//\t    }\n//\t  ]\n//\t}\n//\n// For more details, see the documentation and example.\npackage main\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.251953125,
          "content": "version: '3'\n\nservices:\n  gorush:\n    image: appleboy/gorush\n    restart: always\n    ports:\n      - \"8088:8088\"\n      - \"9000:9000\"\n    logging:\n      options:\n        max-size: \"100k\"\n        max-file: \"3\"\n    environment:\n      - GORUSH_CORE_QUEUE_NUM=512\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 7.556640625,
          "content": "module github.com/appleboy/gorush\n\ngo 1.22.7\n\nrequire (\n\tfirebase.google.com/go/v4 v4.15.1\n\tgithub.com/apex/gateway v1.1.2\n\tgithub.com/appleboy/gin-status-api v1.1.0\n\tgithub.com/appleboy/go-fcm v1.2.2\n\tgithub.com/appleboy/go-hms-push v1.0.1\n\tgithub.com/appleboy/gofight/v2 v2.2.0\n\tgithub.com/appleboy/graceful v1.1.1\n\tgithub.com/asdine/storm/v3 v3.2.1\n\tgithub.com/buger/jsonparser v1.1.1\n\tgithub.com/dgraph-io/badger/v4 v4.2.0\n\tgithub.com/gin-contrib/logger v1.1.0\n\tgithub.com/gin-gonic/gin v1.10.0\n\tgithub.com/golang-queue/nats v0.1.0\n\tgithub.com/golang-queue/nsq v0.2.0\n\tgithub.com/golang-queue/queue v0.1.4-0.20221230133718-0314ef173f98\n\tgithub.com/golang-queue/redisdb-stream v0.1.0\n\tgithub.com/golang/protobuf v1.5.4\n\tgithub.com/grpc-ecosystem/go-grpc-middleware v1.4.0\n\tgithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0\n\tgithub.com/json-iterator/go v1.1.12\n\tgithub.com/mattn/go-isatty v0.0.20\n\tgithub.com/mitchellh/mapstructure v1.5.0\n\tgithub.com/prometheus/client_golang v1.19.0\n\tgithub.com/redis/go-redis/v9 v9.7.0\n\tgithub.com/rs/zerolog v1.32.0\n\tgithub.com/sideshow/apns2 v0.25.0\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/spf13/viper v1.18.2\n\tgithub.com/stretchr/testify v1.10.0\n\tgithub.com/syndtr/goleveldb v1.0.0\n\tgithub.com/thoas/stats v0.0.0-20190407194641-965cb2de1678\n\tgithub.com/tidwall/buntdb v1.3.1\n\tgo.opencensus.io v0.24.0\n\tgo.uber.org/atomic v1.11.0\n\tgolang.org/x/crypto v0.32.0\n\tgolang.org/x/net v0.34.0\n\tgolang.org/x/sync v0.10.0\n\tgoogle.golang.org/grpc v1.68.0\n\tgoogle.golang.org/protobuf v1.35.2\n)\n\nrequire (\n\tcel.dev/expr v0.18.0 // indirect\n\tcloud.google.com/go v0.116.0 // indirect\n\tcloud.google.com/go/auth v0.13.0 // indirect\n\tcloud.google.com/go/auth/oauth2adapt v0.2.6 // indirect\n\tcloud.google.com/go/compute/metadata v0.6.0 // indirect\n\tcloud.google.com/go/firestore v1.17.0 // indirect\n\tcloud.google.com/go/iam v1.2.2 // indirect\n\tcloud.google.com/go/longrunning v0.6.3 // indirect\n\tcloud.google.com/go/monitoring v1.21.2 // indirect\n\tcloud.google.com/go/storage v1.47.0 // indirect\n\tgithub.com/GoogleCloudPlatform/opentelemetry-operations-go/detectors/gcp v1.25.0 // indirect\n\tgithub.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/metric v0.49.0 // indirect\n\tgithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/resourcemapping v0.49.0 // indirect\n\tgithub.com/MicahParks/keyfunc v1.9.0 // indirect\n\tgithub.com/appleboy/com v0.2.1 // indirect\n\tgithub.com/aws/aws-lambda-go v1.46.0 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/bytedance/sonic v1.11.6 // indirect\n\tgithub.com/bytedance/sonic/loader v0.1.1 // indirect\n\tgithub.com/census-instrumentation/opencensus-proto v0.4.1 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/cloudwego/base64x v0.1.4 // indirect\n\tgithub.com/cloudwego/iasm v0.2.0 // indirect\n\tgithub.com/cncf/xds/go v0.0.0-20240905190251-b4127c9b8d78 // indirect\n\tgithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc // indirect\n\tgithub.com/dgraph-io/ristretto v0.1.1 // indirect\n\tgithub.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f // indirect\n\tgithub.com/dustin/go-humanize v1.0.1 // indirect\n\tgithub.com/envoyproxy/go-control-plane v0.13.1 // indirect\n\tgithub.com/envoyproxy/protoc-gen-validate v1.1.0 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/fsnotify/fsnotify v1.7.0 // indirect\n\tgithub.com/fukata/golang-stats-api-handler v1.0.0 // indirect\n\tgithub.com/gabriel-vasile/mimetype v1.4.3 // indirect\n\tgithub.com/gin-contrib/sse v0.1.0 // indirect\n\tgithub.com/go-logr/logr v1.4.2 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/go-playground/locales v0.14.1 // indirect\n\tgithub.com/go-playground/universal-translator v0.18.1 // indirect\n\tgithub.com/go-playground/validator/v10 v10.20.0 // indirect\n\tgithub.com/goccy/go-json v0.10.4 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang-jwt/jwt/v4 v4.5.1 // indirect\n\tgithub.com/golang/glog v1.2.2 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20241129210726-2c02b8208cf8 // indirect\n\tgithub.com/golang/snappy v0.0.4 // indirect\n\tgithub.com/google/flatbuffers v24.3.7+incompatible // indirect\n\tgithub.com/google/s2a-go v0.1.8 // indirect\n\tgithub.com/google/uuid v1.6.0 // indirect\n\tgithub.com/googleapis/enterprise-certificate-proxy v0.3.4 // indirect\n\tgithub.com/googleapis/gax-go/v2 v2.14.0 // indirect\n\tgithub.com/hashicorp/hcl v1.0.0 // indirect\n\tgithub.com/klauspost/compress v1.17.11 // indirect\n\tgithub.com/klauspost/cpuid/v2 v2.2.7 // indirect\n\tgithub.com/leodido/go-urn v1.4.0 // indirect\n\tgithub.com/magiconair/properties v1.8.7 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect\n\tgithub.com/modern-go/reflect2 v1.0.2 // indirect\n\tgithub.com/nats-io/nats.go v1.38.0 // indirect\n\tgithub.com/nats-io/nkeys v0.4.9 // indirect\n\tgithub.com/nats-io/nuid v1.0.1 // indirect\n\tgithub.com/nsqio/go-nsq v1.1.0 // indirect\n\tgithub.com/onsi/ginkgo v1.16.5 // indirect\n\tgithub.com/onsi/gomega v1.24.1 // indirect\n\tgithub.com/pelletier/go-toml/v2 v2.2.2 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 // indirect\n\tgithub.com/prometheus/client_model v0.6.0 // indirect\n\tgithub.com/prometheus/common v0.50.0 // indirect\n\tgithub.com/prometheus/procfs v0.13.0 // indirect\n\tgithub.com/sagikazarmark/locafero v0.4.0 // indirect\n\tgithub.com/sagikazarmark/slog-shim v0.1.0 // indirect\n\tgithub.com/sourcegraph/conc v0.3.0 // indirect\n\tgithub.com/spf13/afero v1.11.0 // indirect\n\tgithub.com/spf13/cast v1.6.0 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgithub.com/subosito/gotenv v1.6.0 // indirect\n\tgithub.com/tidwall/btree v1.7.0 // indirect\n\tgithub.com/tidwall/gjson v1.17.1 // indirect\n\tgithub.com/tidwall/grect v0.1.4 // indirect\n\tgithub.com/tidwall/match v1.1.1 // indirect\n\tgithub.com/tidwall/pretty v1.2.1 // indirect\n\tgithub.com/tidwall/rtred v0.1.2 // indirect\n\tgithub.com/tidwall/tinyqueue v0.1.1 // indirect\n\tgithub.com/twitchyliquid64/golang-asm v0.15.1 // indirect\n\tgithub.com/ugorji/go/codec v1.2.12 // indirect\n\tgo.etcd.io/bbolt v1.3.10 // indirect\n\tgo.opentelemetry.io/contrib/detectors/gcp v1.32.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.57.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.57.0 // indirect\n\tgo.opentelemetry.io/otel v1.32.0 // indirect\n\tgo.opentelemetry.io/otel/metric v1.32.0 // indirect\n\tgo.opentelemetry.io/otel/sdk v1.32.0 // indirect\n\tgo.opentelemetry.io/otel/sdk/metric v1.32.0 // indirect\n\tgo.opentelemetry.io/otel/trace v1.32.0 // indirect\n\tgo.uber.org/multierr v1.11.0 // indirect\n\tgolang.org/x/arch v0.8.0 // indirect\n\tgolang.org/x/exp v0.0.0-20240314144324-c7f7c6466f7f // indirect\n\tgolang.org/x/oauth2 v0.25.0 // indirect\n\tgolang.org/x/sys v0.29.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgolang.org/x/time v0.8.0 // indirect\n\tgoogle.golang.org/api v0.212.0 // indirect\n\tgoogle.golang.org/appengine/v2 v2.0.6 // indirect\n\tgoogle.golang.org/genproto v0.0.0-20241118233622-e639e219e697 // indirect\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20241118233622-e639e219e697 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241206012308-a4fef0638583 // indirect\n\tgoogle.golang.org/grpc/stats/opentelemetry v0.0.0-20241028142157-ada6787961b3 // indirect\n\tgopkg.in/ini.v1 v1.67.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n\nreplace github.com/msalihkarakasli/go-hms-push => github.com/spawn2kill/go-hms-push v0.0.0-20211125124117-e20af53b1304\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 55.40625,
          "content": "cel.dev/expr v0.18.0 h1:CJ6drgk+Hf96lkLikr4rFf19WrU0BOWEihyZnI2TAzo=\ncel.dev/expr v0.18.0/go.mod h1:MrpN08Q+lEBs+bGYdLxxHkZoUSsCp0nSKTs0nTymJgw=\ncloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.116.0 h1:B3fRrSDkLRt5qSHWe40ERJvhvnQwdZiHu0bJOpldweE=\ncloud.google.com/go v0.116.0/go.mod h1:cEPSRWPzZEswwdr9BxE6ChEn01dWlTaF05LiC2Xs70U=\ncloud.google.com/go/auth v0.13.0 h1:8Fu8TZy167JkW8Tj3q7dIkr2v4cndv41ouecJx0PAHs=\ncloud.google.com/go/auth v0.13.0/go.mod h1:COOjD9gwfKNKz+IIduatIhYJQIc0mG3H102r/EMxX6Q=\ncloud.google.com/go/auth/oauth2adapt v0.2.6 h1:V6a6XDu2lTwPZWOawrAa9HUK+DB2zfJyTuciBG5hFkU=\ncloud.google.com/go/auth/oauth2adapt v0.2.6/go.mod h1:AlmsELtlEBnaNTL7jCj8VQFLy6mbZv0s4Q7NGBeQ5E8=\ncloud.google.com/go/compute/metadata v0.6.0 h1:A6hENjEsCDtC1k8byVsgwvVcioamEHvZ4j01OwKxG9I=\ncloud.google.com/go/compute/metadata v0.6.0/go.mod h1:FjyFAW1MW0C203CEOMDTu3Dk1FlqW3Rga40jzHL4hfg=\ncloud.google.com/go/firestore v1.17.0 h1:iEd1LBbkDZTFsLw3sTH50eyg4qe8eoG6CjocmEXO9aQ=\ncloud.google.com/go/firestore v1.17.0/go.mod h1:69uPx1papBsY8ZETooc71fOhoKkD70Q1DwMrtKuOT/Y=\ncloud.google.com/go/iam v1.2.2 h1:ozUSofHUGf/F4tCNy/mu9tHLTaxZFLOUiKzjcgWHGIA=\ncloud.google.com/go/iam v1.2.2/go.mod h1:0Ys8ccaZHdI1dEUilwzqng/6ps2YB6vRsjIe00/+6JY=\ncloud.google.com/go/logging v1.12.0 h1:ex1igYcGFd4S/RZWOCU51StlIEuey5bjqwH9ZYjHibk=\ncloud.google.com/go/logging v1.12.0/go.mod h1:wwYBt5HlYP1InnrtYI0wtwttpVU1rifnMT7RejksUAM=\ncloud.google.com/go/longrunning v0.6.3 h1:A2q2vuyXysRcwzqDpMMLSI6mb6o39miS52UEG/Rd2ng=\ncloud.google.com/go/longrunning v0.6.3/go.mod h1:k/vIs83RN4bE3YCswdXC5PFfWVILjm3hpEUlSko4PiI=\ncloud.google.com/go/monitoring v1.21.2 h1:FChwVtClH19E7pJ+e0xUhJPGksctZNVOk2UhMmblmdU=\ncloud.google.com/go/monitoring v1.21.2/go.mod h1:hS3pXvaG8KgWTSz+dAdyzPrGUYmi2Q+WFX8g2hqVEZU=\ncloud.google.com/go/storage v1.47.0 h1:ajqgt30fnOMmLfWfu1PWcb+V9Dxz6n+9WKjdNg5R4HM=\ncloud.google.com/go/storage v1.47.0/go.mod h1:Ks0vP374w0PW6jOUameJbapbQKXqkjGd/OJRp2fb9IQ=\ncloud.google.com/go/trace v1.11.2 h1:4ZmaBdL8Ng/ajrgKqY5jfvzqMXbrDcBsUGXOT9aqTtI=\ncloud.google.com/go/trace v1.11.2/go.mod h1:bn7OwXd4pd5rFuAnTrzBuoZ4ax2XQeG3qNgYmfCy0Io=\nfirebase.google.com/go/v4 v4.15.1 h1:tR2dzKw1MIfCfG2bhAyxa5KQ57zcE7iFKmeYClET6ZM=\nfirebase.google.com/go/v4 v4.15.1/go.mod h1:eunxbsh4UXI2rA8po3sOiebvWYuW0DVxAdZFO0I6wdY=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/DataDog/zstd v1.4.1 h1:3oxKN3wbHibqx897utPC2LTQU4J+IHWWJO+glkAkpFM=\ngithub.com/DataDog/zstd v1.4.1/go.mod h1:1jcaCB/ufaK+sKp1NBhlGmpz41jOoPQ35bpF36t7BBo=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/detectors/gcp v1.25.0 h1:3c8yed4lgqTt+oTQ+JNMDo+F4xprBf+O/il4ZC0nRLw=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/detectors/gcp v1.25.0/go.mod h1:obipzmGjfSjam60XLwGfqUkJsfiheAl+TUjG+4yzyPM=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/metric v0.49.0 h1:o90wcURuxekmXrtxmYWTyNla0+ZEHhud6DI1ZTxd1vI=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/metric v0.49.0/go.mod h1:6fTWu4m3jocfUZLYF5KsZC1TUfRvEjs7lM4crme/irw=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/cloudmock v0.49.0 h1:jJKWl98inONJAr/IZrdFQUWcwUO95DLY1XMD1ZIut+g=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/cloudmock v0.49.0/go.mod h1:l2fIqmwB+FKSfvn3bAD/0i+AXAxhIZjTK2svT/mgUXs=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/resourcemapping v0.49.0 h1:GYUJLfvd++4DMuMhCFLgLXvFwofIxh/qOwoGuS/LTew=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/resourcemapping v0.49.0/go.mod h1:wRbFgBQUVm1YXrvWKofAEmq9HNJTDphbAaJSSX01KUI=\ngithub.com/MicahParks/keyfunc v1.9.0 h1:lhKd5xrFHLNOWrDc4Tyb/Q1AJ4LCzQ48GVJyVIID3+o=\ngithub.com/MicahParks/keyfunc v1.9.0/go.mod h1:IdnCilugA0O/99dW+/MkvlyrsX8+L8+x95xuVNtM5jw=\ngithub.com/Sereal/Sereal v0.0.0-20190618215532-0b8ac451a863 h1:BRrxwOZBolJN4gIwvZMJY1tzqBvQgpaZiQRuIDD40jM=\ngithub.com/Sereal/Sereal v0.0.0-20190618215532-0b8ac451a863/go.mod h1:D0JMgToj/WdxCgd30Kc1UcA9E+WdZoJqeVOuYW7iTBM=\ngithub.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20201120081800-1786d5ef83d4/go.mod h1:OMCwj8VM1Kc9e19TLln2VL61YJF0x1XFtfdL4JdbSyE=\ngithub.com/apex/gateway v1.1.2 h1:OWyLov8eaau8YhkYKkRuOAYqiUhpBJalBR1o+3FzX+8=\ngithub.com/apex/gateway v1.1.2/go.mod h1:AMTkVbz5u5Hvd6QOGhhg0JUrNgCcLVu3XNJOGntdoB4=\ngithub.com/appleboy/com v0.2.1 h1:dHAHauX3eYDuheAahI83HIGFxpi0SEb2ZAu9EZ9hbUM=\ngithub.com/appleboy/com v0.2.1/go.mod h1:kByEI3/vzI5GM1+O5QdBHLsXaOsmFsJcOpCSgASi4sg=\ngithub.com/appleboy/gin-status-api v1.1.0 h1:zoXePlNxk/Aa3Jmh8TI2xX0KTF8iET/QwOM065pcrok=\ngithub.com/appleboy/gin-status-api v1.1.0/go.mod h1:qUmpFERWhlzRX4Hx+fEznIio8gXAXEDpEnb0Ald1d+g=\ngithub.com/appleboy/go-fcm v1.2.2 h1:8BUNgMQ26aXLVe/z8LPIB6n8QOIiEwOhsXl8eUfn8tY=\ngithub.com/appleboy/go-fcm v1.2.2/go.mod h1:5DjSZiFvZeFVpCEKjDRlzACcc8eBzHz+5wAznZCYJjw=\ngithub.com/appleboy/go-hms-push v1.0.1 h1:55v173UvjgZgmaj/D+X+y82WLuA+xl4SYHCF8Zb5WtM=\ngithub.com/appleboy/go-hms-push v1.0.1/go.mod h1:JZzS7XUOFTUV8y+MAnDjOIv0LCZmLmVpJj//Q9t0XBw=\ngithub.com/appleboy/gofight/v2 v2.1.2/go.mod h1:frW+U1QZEdDgixycTj4CygQ48yLTUhplt43+Wczp3rw=\ngithub.com/appleboy/gofight/v2 v2.2.0 h1:uqQ3wzTlF1ma+r4jRCQ4cygCjrGZyZEBMBCjT/t9zRw=\ngithub.com/appleboy/gofight/v2 v2.2.0/go.mod h1:USTV3UbA5kHBs4I91EsPi+6PIVZAx3KLorYjvtON91A=\ngithub.com/appleboy/graceful v1.1.1 h1:vYqfpBdyEFztXofmw9iL8aohnxbcE+2Nq2j67SCoMBo=\ngithub.com/appleboy/graceful v1.1.1/go.mod h1:gjCrWFsKhOX2N6jNY0QyQhK+WE8Z3TFSen4fExHg3wk=\ngithub.com/asdine/storm/v3 v3.2.1 h1:I5AqhkPK6nBZ/qJXySdI7ot5BlXSZ7qvDY1zAn5ZJac=\ngithub.com/asdine/storm/v3 v3.2.1/go.mod h1:LEpXwGt4pIqrE/XcTvCnZHT5MgZCV6Ub9q7yQzOFWr0=\ngithub.com/aws/aws-lambda-go v1.17.0/go.mod h1:FEwgPLE6+8wcGBTe5cJN3JWurd1Ztm9zN4jsXsjzKKw=\ngithub.com/aws/aws-lambda-go v1.46.0 h1:UWVnvh2h2gecOlFhHQfIPQcD8pL/f7pVCutmFl+oXU8=\ngithub.com/aws/aws-lambda-go v1.46.0/go.mod h1:dpMpZgvWx5vuQJfBt0zqBha60q7Dd7RfgJv23DymV8A=\ngithub.com/benbjohnson/clock v1.1.0/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/bsm/ginkgo/v2 v2.12.0 h1:Ny8MWAHyOepLGlLKYmXG4IEkioBysk6GpaRTLC8zwWs=\ngithub.com/bsm/ginkgo/v2 v2.12.0/go.mod h1:SwYbGRRDovPVboqFv0tPTcG1sN61LM1Z4ARdbAV9g4c=\ngithub.com/bsm/gomega v1.27.10 h1:yeMWxP2pV2fG3FgAODIY8EiRE3dy0aeFYt4l7wh6yKA=\ngithub.com/bsm/gomega v1.27.10/go.mod h1:JyEr/xRbxbtgWNi8tIEVPUYZ5Dzef52k01W3YH0H+O0=\ngithub.com/buger/jsonparser v0.0.0-20191204142016-1a29609e0929/go.mod h1:tgcrVJ81GPSF0mz+0nu1Xaz0fazGPrmmJfJtxjbHhUQ=\ngithub.com/buger/jsonparser v1.1.1 h1:2PnMjfWD7wBILjqQbt530v576A/cAbQvEW9gGIpYMUs=\ngithub.com/buger/jsonparser v1.1.1/go.mod h1:6RYKKt7H4d4+iWqouImQ9R2FZql3VbhNgx27UK13J/0=\ngithub.com/bytedance/sonic v1.11.6 h1:oUp34TzMlL+OY1OUWxHqsdkgC/Zfc85zGqw9siXjrc0=\ngithub.com/bytedance/sonic v1.11.6/go.mod h1:LysEHSvpvDySVdC2f87zGWf6CIKJcAvqab1ZaiQtds4=\ngithub.com/bytedance/sonic/loader v0.1.1 h1:c+e5Pt1k/cy5wMveRDyk2X4B9hF4g7an8N3zCYjJFNM=\ngithub.com/bytedance/sonic/loader v0.1.1/go.mod h1:ncP89zfokxS5LZrJxl5z0UJcsk4M4yY2JpfqGeCtNLU=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/census-instrumentation/opencensus-proto v0.4.1 h1:iKLQ0xPNFxR/2hzXZMrBo8f1j86j5WHzznCCQxV/b8g=\ngithub.com/census-instrumentation/opencensus-proto v0.4.1/go.mod h1:4T9NM4+4Vw91VeyqjLS6ao50K5bOcLKN6Q42XnYaRYw=\ngithub.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cloudwego/base64x v0.1.4 h1:jwCgWpFanWmN8xoIUHa2rtzmkd5J2plF/dnLS6Xd/0Y=\ngithub.com/cloudwego/base64x v0.1.4/go.mod h1:0zlkT4Wn5C6NdauXdJRhSKRlJvmclQ1hhJgA0rcu/8w=\ngithub.com/cloudwego/iasm v0.2.0 h1:1KNIy1I1H9hNNFEEH3DVnI4UujN+1zjpuk6gwHLTssg=\ngithub.com/cloudwego/iasm v0.2.0/go.mod h1:8rXZaNYT2n95jn+zTI1sDr+IgcD2GVs0nlbbQPiEFhY=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cncf/xds/go v0.0.0-20240905190251-b4127c9b8d78 h1:QVw89YDxXxEe+l8gU8ETbOasdwEV+avkR75ZzsVV9WI=\ngithub.com/cncf/xds/go v0.0.0-20240905190251-b4127c9b8d78/go.mod h1:W+zGtBO5Y1IgJhy4+A9GOqVhqLpfZi+vwmdNXUehLA8=\ngithub.com/coreos/go-systemd/v22 v22.5.0/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.0-20190314233015-f79a8a8ca69d/go.mod h1:maD7wRr/U5Z6m/iR4s+kqSMx2CaBsrgA7czyZG/E6dU=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dgraph-io/badger/v4 v4.2.0 h1:kJrlajbXXL9DFTNuhhu9yCx7JJa4qpYWxtE8BzuWsEs=\ngithub.com/dgraph-io/badger/v4 v4.2.0/go.mod h1:qfCqhPoWDFJRx1gp5QwwyGo8xk1lbHUxvK9nK0OGAak=\ngithub.com/dgraph-io/ristretto v0.1.1 h1:6CWw5tJNgpegArSHpNHJKldNeq03FQCwYvfMVWajOK8=\ngithub.com/dgraph-io/ristretto v0.1.1/go.mod h1:S1GPSBCYCIhmVNfcth17y2zZtQT6wzkzgwUve0VDWWA=\ngithub.com/dgryski/go-farm v0.0.0-20190423205320-6a90982ecee2 h1:tdlZCpZ/P9DhczCTSixgIKmwPv6+wP5DGjqLYw5SUiA=\ngithub.com/dgryski/go-farm v0.0.0-20190423205320-6a90982ecee2/go.mod h1:SqUrOPUnsFjfmXRMNPybcSiG0BgUW2AuFH8PAnS2iTw=\ngithub.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f h1:lO4WD4F/rVNCu3HqELle0jiPLLBs70cWOduZpkS1E78=\ngithub.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f/go.mod h1:cuUVRXasLTGF7a8hSLbxyZXjz+1KgoB3wDUb6vlszIc=\ngithub.com/dustin/go-humanize v1.0.0/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=\ngithub.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=\ngithub.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/go-control-plane v0.13.1 h1:vPfJZCkob6yTMEgS+0TwfTUfbHjfy/6vOJ8hUWX/uXE=\ngithub.com/envoyproxy/go-control-plane v0.13.1/go.mod h1:X45hY0mufo6Fd0KW3rqsGvQMw58jvjymeCzBU3mWyHw=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/envoyproxy/protoc-gen-validate v1.1.0 h1:tntQDh69XqOCOZsDz0lVJQez/2L6Uu2PdjCQwWCJ3bM=\ngithub.com/envoyproxy/protoc-gen-validate v1.1.0/go.mod h1:sXRDRVmzEbkM7CVcM06s9shE/m23dg3wzjl0UWqJ2q4=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/frankban/quicktest v1.14.6 h1:7Xjx+VpznH+oBnejlPUj8oUpdxnVs4f8XU8WnHkI4W8=\ngithub.com/frankban/quicktest v1.14.6/go.mod h1:4ptaffx2x8+WTWXmUCuVU6aPUX1/Mz7zb5vbUoiM6w0=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4IgpuI1SZQ=\ngithub.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=\ngithub.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=\ngithub.com/fukata/golang-stats-api-handler v1.0.0 h1:N6M25vhs1yAvwGBpFY6oBmMOZeJdcWnvA+wej8pKeko=\ngithub.com/fukata/golang-stats-api-handler v1.0.0/go.mod h1:1sIi4/rHq6s/ednWMZqTmRq3765qTUSs/c3xF6lj8J8=\ngithub.com/gabriel-vasile/mimetype v1.4.3 h1:in2uUcidCuFcDKtdcBxlR0rJ1+fsokWf+uqxgUFjbI0=\ngithub.com/gabriel-vasile/mimetype v1.4.3/go.mod h1:d8uq/6HKRL6CGdk+aubisF/M5GcPfT7nKyLpA0lbSSk=\ngithub.com/gin-contrib/logger v1.1.0 h1:dP/HkfjUy9nFcyBolgXcStpgUrYToAfSs/GsVIe0l5Y=\ngithub.com/gin-contrib/logger v1.1.0/go.mod h1:onbSPF8qkdvedG2DDUPSTmq1HiQH5yGa7BXq+m3yQ3A=\ngithub.com/gin-contrib/sse v0.1.0 h1:Y/yl/+YNO8GZSjAhjMsSuLt29uWRFHdHYUb5lYOV9qE=\ngithub.com/gin-contrib/sse v0.1.0/go.mod h1:RHrZQHXnP2xjPF+u1gW/2HnVO7nvIa9PG3Gm+fLHvGI=\ngithub.com/gin-gonic/gin v1.5.0/go.mod h1:Nd6IXA8m5kNZdNEHMBd93KT+mdY3+bewLgRvmCsR2Do=\ngithub.com/gin-gonic/gin v1.10.0 h1:nTuyha1TYqgedzytsKYqna+DfLos46nTv2ygFy86HFU=\ngithub.com/gin-gonic/gin v1.10.0/go.mod h1:4PMNQiOhvDRa013RKVbsiNwoyezlm2rm0uX/T7kzp5Y=\ngithub.com/go-kit/log v0.1.0/go.mod h1:zbhenjAZHb184qTLMA9ZjW7ThYL0H2mk7Q6pNt4vbaY=\ngithub.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-playground/assert/v2 v2.2.0 h1:JvknZsQTYeFEAhQwI4qEt9cyV5ONwRHC+lYKSsYSR8s=\ngithub.com/go-playground/assert/v2 v2.2.0/go.mod h1:VDjEfimB/XKnb+ZQfWdccd7VUvScMdVu0Titje2rxJ4=\ngithub.com/go-playground/locales v0.12.1/go.mod h1:IUMDtCfWo/w/mtMfIE/IG2K+Ey3ygWanZIBtBW0W2TM=\ngithub.com/go-playground/locales v0.14.1 h1:EWaQ/wswjilfKLTECiXz7Rh+3BjFhfDFKv/oXslEjJA=\ngithub.com/go-playground/locales v0.14.1/go.mod h1:hxrqLVvrK65+Rwrd5Fc6F2O76J/NuW9t0sjnWqG1slY=\ngithub.com/go-playground/universal-translator v0.16.0/go.mod h1:1AnU7NaIRDWWzGEKwgtJRd2xk99HeFyHw3yid4rvQIY=\ngithub.com/go-playground/universal-translator v0.18.1 h1:Bcnm0ZwsGyWbCzImXv+pAJnYK9S473LQFuzCbDbfSFY=\ngithub.com/go-playground/universal-translator v0.18.1/go.mod h1:xekY+UJKNuX9WP91TpwSH2VMlDf28Uj24BCp08ZFTUY=\ngithub.com/go-playground/validator/v10 v10.20.0 h1:K9ISHbSaI0lyB2eWMPJo+kOS/FBExVwjEviJTixqxL8=\ngithub.com/go-playground/validator/v10 v10.20.0/go.mod h1:dbuPbCMFw/DrkbEynArYaCwl3amGuJotoKCe95atGMM=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/go-task/slim-sprig v0.0.0-20210107165309-348f09dbbbc0/go.mod h1:fyg7847qk6SyHyPtNmDHnmrv/HOrqktSC+C9fM+CJOE=\ngithub.com/goccy/go-json v0.10.4 h1:JSwxQzIqKfmFX1swYPpUThQZp/Ka4wzJdK0LWVytLPM=\ngithub.com/goccy/go-json v0.10.4/go.mod h1:oq7eo15ShAhp70Anwd5lgX2pLfOS3QCiwU/PULtXL6M=\ngithub.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang-jwt/jwt/v4 v4.4.1/go.mod h1:m21LjoU+eqJr34lmDMbreY2eSTRJ1cv77w39/MY0Ch0=\ngithub.com/golang-jwt/jwt/v4 v4.4.2/go.mod h1:m21LjoU+eqJr34lmDMbreY2eSTRJ1cv77w39/MY0Ch0=\ngithub.com/golang-jwt/jwt/v4 v4.5.1 h1:JdqV9zKUdtaa9gdPlywC3aeoEsR681PlKC+4F5gQgeo=\ngithub.com/golang-jwt/jwt/v4 v4.5.1/go.mod h1:m21LjoU+eqJr34lmDMbreY2eSTRJ1cv77w39/MY0Ch0=\ngithub.com/golang-queue/nats v0.1.0 h1:b8W+YVHlbgUL2QW/I+YEng0Fnyc4kMzhwIz5AK00nqw=\ngithub.com/golang-queue/nats v0.1.0/go.mod h1:tzbcibEqeZrz+NBQuMca37M2l3Kqyw36bH2DZyvelCY=\ngithub.com/golang-queue/nsq v0.2.0 h1:l/QvA/PNWLE+ARpCTDgHjlXoxqqc/1z6F+Qj4y8+sMw=\ngithub.com/golang-queue/nsq v0.2.0/go.mod h1:mPORoiVbH63NnyrAtFlX3+peHbtb3oJm2LAnd5+9BKA=\ngithub.com/golang-queue/queue v0.1.4-0.20221230133718-0314ef173f98 h1:T2DoUcMWZr6uSUQAr5wCEzOiwHB1zJOiATAZ4BUAefg=\ngithub.com/golang-queue/queue v0.1.4-0.20221230133718-0314ef173f98/go.mod h1:8P7IgwdxwKh0/W1I9yCuQQGI8OHIuc7fIHi4OYr1COU=\ngithub.com/golang-queue/redisdb-stream v0.1.0 h1:Qu+okTgPFOhN64WQDH+2+DeQp9LUQMGql6TLy6mM0q4=\ngithub.com/golang-queue/redisdb-stream v0.1.0/go.mod h1:fNrufkoQlUbTF7DBwba6rUtCs380QjFUG1eVeQCazsU=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/glog v1.2.2 h1:1+mZ9upx1Dh6FmUTFR1naJ77miKiXgALjWOZ3NVFPmY=\ngithub.com/golang/glog v1.2.2/go.mod h1:6AhwSGph0fcJtXVM/PEHPqZlFeoLxhs7/t5UDAwmO+w=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20241129210726-2c02b8208cf8 h1:f+oWsMOmNPc8JmEHVZIycC7hBoQxHH9pNKQORJNozsQ=\ngithub.com/golang/groupcache v0.0.0-20241129210726-2c02b8208cf8/go.mod h1:wcDNUvekVysuuOpQKo3191zZyTpiI6se1N1ULghS0sw=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.6.0 h1:ErTB+efbowRARo13NNdxyJji2egdxLGQhRaY+DUumQc=\ngithub.com/golang/mock v1.6.0/go.mod h1:p6yTPP+5HYm5mzsMV8JkE6ZKdX+/wYM6Hr+LicevLPs=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/golang/snappy v0.0.0-20180518054509-2e65f85255db/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/golang/snappy v0.0.1/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/golang/snappy v0.0.4 h1:yAGX7huGHXlcLOEtBnF4w7FQwA26wojNCwOYAEhLjQM=\ngithub.com/golang/snappy v0.0.4/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/google/flatbuffers v24.3.7+incompatible h1:BxGUkIQnOciBu33bd5BdvqY8Qvo0O/GR4SPhh7x9Ed0=\ngithub.com/google/flatbuffers v24.3.7+incompatible/go.mod h1:1AeVuKshWv4vARoZatz6mlQ0JxURH0Kv5+zNeJKJCa8=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/martian/v3 v3.3.3 h1:DIhPTQrbPkgs2yJYdXU/eNACCG5DVQjySNRNlflZ9Fc=\ngithub.com/google/martian/v3 v3.3.3/go.mod h1:iEPrYcgCF7jA9OtScMFQyAlZZ4YXTKEtJ1E6RWzmBA0=\ngithub.com/google/s2a-go v0.1.8 h1:zZDs9gcbt9ZPLV0ndSyQk6Kacx2g/X+SKYovpnz3SMM=\ngithub.com/google/s2a-go v0.1.8/go.mod h1:6iNWHTpQ+nfNRN5E00MSdfDwVesa8hhS32PhPO8deJA=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.4 h1:XYIDZApgAnrN1c855gTgghdIA6Stxb52D5RnLI1SLyw=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.4/go.mod h1:YKe7cfqYXjKGpGvmSg28/fFvhNzinZQm8DGnaburhGA=\ngithub.com/googleapis/gax-go/v2 v2.14.0 h1:f+jMrjBPl+DL9nI4IQzLUxMq7XrAqFYB7hBPqMNIe8o=\ngithub.com/googleapis/gax-go/v2 v2.14.0/go.mod h1:lhBCnjdLrWRaPvLWhmc8IS24m9mr07qSYnHncrgo+zk=\ngithub.com/grpc-ecosystem/go-grpc-middleware v1.4.0 h1:UH//fgunKIs4JdUbpDl1VZCDaL56wXCB/5+wF6uHfaI=\ngithub.com/grpc-ecosystem/go-grpc-middleware v1.4.0/go.mod h1:g5qyo/la0ALbONm6Vbp88Yd8NsDy6rZz+RcrMPxvld8=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0 h1:Ovs26xHkKqVztRpIrF/92BcuyuQ/YW4NSIpoGtfXNho=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0/go.mod h1:8NvIoxWQoOIhqOTXgfV/d3M/q6VIi02HzZEHgUlZvzk=\ngithub.com/hashicorp/hcl v1.0.0 h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=\ngithub.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=\ngithub.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\ngithub.com/json-iterator/go v1.1.7/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/klauspost/compress v1.17.11 h1:In6xLpyWOi1+C7tXUUWv2ot1QvBjxevKAaI6IXrJmUc=\ngithub.com/klauspost/compress v1.17.11/go.mod h1:pMDklpSncoRMuLFrf1W9Ss9KT+0rH90U12bZKk7uwG0=\ngithub.com/klauspost/cpuid/v2 v2.0.9/go.mod h1:FInQzS24/EEf25PyTYn52gqo7WaD8xa0213Md/qVLRg=\ngithub.com/klauspost/cpuid/v2 v2.2.7 h1:ZWSB3igEs+d0qvnxR/ZBzXVmxkgt8DdzP6m9pfuVLDM=\ngithub.com/klauspost/cpuid/v2 v2.2.7/go.mod h1:Lcz8mBdAVJIBVzewtcLocK12l3Y+JytZYpaMropDUws=\ngithub.com/knz/go-libedit v1.10.1/go.mod h1:MZTVkCWyz0oBc7JOWP3wNAzd002ZbM/5hgShxwh4x8M=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/leodido/go-urn v1.1.0/go.mod h1:+cyI34gQWZcE1eQU7NVgKkkzdXDQHr1dBMtdAPozLkw=\ngithub.com/leodido/go-urn v1.4.0 h1:WT9HwE9SGECu3lg4d/dIA+jxlljEa1/ffXKmRjqdmIQ=\ngithub.com/leodido/go-urn v1.4.0/go.mod h1:bvxc+MVxLKB4z00jd1z+Dvzr47oO32F/QSNjSBOlFxI=\ngithub.com/magiconair/properties v1.8.7 h1:IeQXZAiQcpL9mgcAe1Nu6cX9LLw6ExEHKjN0VQdvPDY=\ngithub.com/magiconair/properties v1.8.7/go.mod h1:Dhd985XPs7jluiymwWYZ0G4Z61jb3vdS329zhj2hYo0=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.9/go.mod h1:YNRxwqDuOph6SZLI9vUUz6OYw3QyUt7WiY2yME+cCiQ=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.19/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=\ngithub.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/nats-io/nats.go v1.38.0 h1:A7P+g7Wjp4/NWqDOOP/K6hfhr54DvdDQUznt5JFg9XA=\ngithub.com/nats-io/nats.go v1.38.0/go.mod h1:IGUM++TwokGnXPs82/wCuiHS02/aKrdYUQkU8If6yjw=\ngithub.com/nats-io/nkeys v0.4.9 h1:qe9Faq2Gxwi6RZnZMXfmGMZkg3afLLOtrU+gDZJ35b0=\ngithub.com/nats-io/nkeys v0.4.9/go.mod h1:jcMqs+FLG+W5YO36OX6wFIFcmpdAns+w1Wm6D3I/evE=\ngithub.com/nats-io/nuid v1.0.1 h1:5iA8DT8V7q8WK2EScv2padNa/rTESc1KdnPw4TC2paw=\ngithub.com/nats-io/nuid v1.0.1/go.mod h1:19wcPz3Ph3q0Jbyiqsd0kePYG7A95tJPxeL+1OSON2c=\ngithub.com/nsqio/go-nsq v1.1.0 h1:PQg+xxiUjA7V+TLdXw7nVrJ5Jbl3sN86EhGCQj4+FYE=\ngithub.com/nsqio/go-nsq v1.1.0/go.mod h1:vKq36oyeVXgsS5Q8YEO7WghqidAVXQlcFxzQbQTuDEY=\ngithub.com/nxadm/tail v1.4.4/go.mod h1:kenIhsEOeOJmVchQTgglprH7qJGnHDVpk1VPCcaMI8A=\ngithub.com/nxadm/tail v1.4.8 h1:nPr65rt6Y5JFSKQO7qToXr7pePgD6Gwiw05lkbyAQTE=\ngithub.com/nxadm/tail v1.4.8/go.mod h1:+ncqLTQzXmGhMZNUePPaPqPvBxHAIsmXswZKocGu+AU=\ngithub.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.7.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.12.1/go.mod h1:zj2OWP4+oCPe1qIXoGWkgMRwljMUYCdkwsT2108oapk=\ngithub.com/onsi/ginkgo v1.16.5 h1:8xi0RTUf59SOSfEtZMvwTvXYMzG4gV23XVHOZiXNtnE=\ngithub.com/onsi/ginkgo v1.16.5/go.mod h1:+E8gABHa3K6zRBolWtd+ROzc/U5bkGt0FwiG042wbpU=\ngithub.com/onsi/gomega v1.4.3/go.mod h1:ex+gbHU/CVuBBDIJjb2X0qEXbFg53c61hWP/1CpauHY=\ngithub.com/onsi/gomega v1.7.1/go.mod h1:XdKZgCCFLUoM/7CFJVPcG8C1xQ1AJ0vpAezJrB7JYyY=\ngithub.com/onsi/gomega v1.10.1/go.mod h1:iN09h71vgCQne3DLsj+A5owkum+a2tYe+TOCB1ybHNo=\ngithub.com/onsi/gomega v1.24.1 h1:KORJXNNTzJXzu4ScJWssJfJMnJ+2QJqhoQSRwNlze9E=\ngithub.com/onsi/gomega v1.24.1/go.mod h1:3AOiACssS3/MajrniINInwbfOOtfZvplPzuRSmvt1jM=\ngithub.com/opentracing/opentracing-go v1.1.0/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=\ngithub.com/pelletier/go-toml/v2 v2.2.2 h1:aYUidT7k73Pcl9nb2gScu7NSrKCSHIDE89b3+6Wq+LM=\ngithub.com/pelletier/go-toml/v2 v2.2.2/go.mod h1:1t835xjRzz80PqgE6HHgN2JOsmgYu/h4qDAS4n929Rs=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10 h1:GFCKgmp0tecUJ0sJuv4pzYCqS9+RGSn52M3FUwPs+uo=\ngithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10/go.mod h1:t/avpk3KcrXxUnYOhZhMXJlSEyie6gQbtLq5NM3loB8=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_golang v1.19.0 h1:ygXvpU1AoN1MhdzckN+PyD9QJOSD4x7kmXYlnfbA6JU=\ngithub.com/prometheus/client_golang v1.19.0/go.mod h1:ZRM9uEAypZakd+q/x7+gmsvXdURP+DABIEIjnmDdp+k=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.6.0 h1:k1v3CzpSRUTrKMppY35TLwPvxHqBu0bYgxZzqGIgaos=\ngithub.com/prometheus/client_model v0.6.0/go.mod h1:NTQHnmxFpouOD0DpvP4XujX3CdOAGQPoaGhyTchlyt8=\ngithub.com/prometheus/common v0.50.0 h1:YSZE6aa9+luNa2da6/Tik0q0A5AbR+U003TItK57CPQ=\ngithub.com/prometheus/common v0.50.0/go.mod h1:wHFBCEVWVmHMUpg7pYcOm2QUR/ocQdYSJVQJKnHc3xQ=\ngithub.com/prometheus/procfs v0.13.0 h1:GqzLlQyfsPbaEHaQkO7tbDlriv/4o5Hudv6OXHGKX7o=\ngithub.com/prometheus/procfs v0.13.0/go.mod h1:cd4PFCR54QLnGKPaKGA6l+cfuNXtht43ZKY6tow0Y1g=\ngithub.com/redis/go-redis/v9 v9.7.0 h1:HhLSs+B6O021gwzl+locl0zEDnyNkxMtf/Z3NNBMa9E=\ngithub.com/redis/go-redis/v9 v9.7.0/go.mod h1:f6zhXITC7JUJIlPEiBOTXxJgPLdZcA93GewI7inzyWw=\ngithub.com/rogpeppe/go-internal v1.10.0 h1:TMyTOH3F/DB16zRVcYyreMH6GnZZrwQVAoYjRBZyWFQ=\ngithub.com/rogpeppe/go-internal v1.10.0/go.mod h1:UQnix2H7Ngw/k4C5ijL5+65zddjncjaFoBhdsK/akog=\ngithub.com/rs/xid v1.5.0/go.mod h1:trrq9SKmegXys3aeAKXMUTdJsYXVwGY3RLcfgqegfbg=\ngithub.com/rs/zerolog v1.32.0 h1:keLypqrlIjaFsbmJOBdB/qvyF8KEtCWHwobLp5l/mQ0=\ngithub.com/rs/zerolog v1.32.0/go.mod h1:/7mN4D5sKwJLZQ2b/znpjC3/GQWY/xaDXUM0kKWRHss=\ngithub.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sagikazarmark/locafero v0.4.0 h1:HApY1R9zGo4DBgr7dqsTH/JJxLTTsOt7u6keLGt6kNQ=\ngithub.com/sagikazarmark/locafero v0.4.0/go.mod h1:Pe1W6UlPYUk/+wc/6KFhbORCfqzgYEpgQ3O5fPuL3H4=\ngithub.com/sagikazarmark/slog-shim v0.1.0 h1:diDBnUNK9N/354PgrxMywXnAwEr1QZcOr6gto+ugjYE=\ngithub.com/sagikazarmark/slog-shim v0.1.0/go.mod h1:SrcSrq8aKtyuqEI1uvTDTK1arOWRIczQRv+GVI1AkeQ=\ngithub.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=\ngithub.com/sideshow/apns2 v0.25.0 h1:XOzanncO9MQxkb03T/2uU2KcdVjYiIf0TMLzec0FTW4=\ngithub.com/sideshow/apns2 v0.25.0/go.mod h1:7Fceu+sL0XscxrfLSkAoH6UtvKefq3Kq1n4W3ayQZqE=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/sourcegraph/conc v0.3.0 h1:OQTbbt6P72L20UqAkXXuLOj79LfEanQ+YQFNpLA9ySo=\ngithub.com/sourcegraph/conc v0.3.0/go.mod h1:Sdozi7LEKbFPqYX2/J+iBAM6HpqSLTASQIKqDmF7Mt0=\ngithub.com/spf13/afero v1.11.0 h1:WJQKhtpdm3v2IzqG8VMqrr6Rf3UYpEF239Jy9wNepM8=\ngithub.com/spf13/afero v1.11.0/go.mod h1:GH9Y3pIexgf1MTIWtNGyogA5MwRIDXGUr+hbWNoBjkY=\ngithub.com/spf13/cast v1.6.0 h1:GEiTHELF+vaR5dhz3VqZfFSzZjYbgeKDpBxQVS4GYJ0=\ngithub.com/spf13/cast v1.6.0/go.mod h1:ancEpBxwJDODSW/UG4rDrAqiKolqNNh2DX3mk86cAdo=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/spf13/viper v1.18.2 h1:LUXCnvUvSM6FXAsj6nnfc8Q2tp1dIgUfY9Kc8GsSOiQ=\ngithub.com/spf13/viper v1.18.2/go.mod h1:EKmWIqdnk5lOcmR72yw6hS+8OPYcwD0jteitLMVB+yk=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/subosito/gotenv v1.6.0 h1:9NlTDc1FTs4qu0DDq7AEtTPNw6SVm7uBMsUCUjABIf8=\ngithub.com/subosito/gotenv v1.6.0/go.mod h1:Dk4QP5c2W3ibzajGcXpNraDfq2IrhjMIvMSWPKKo0FU=\ngithub.com/syndtr/goleveldb v1.0.0 h1:fBdIW9lB4Iz0n9khmH8w27SJ3QEJ7+IgjPEwGSZiFdE=\ngithub.com/syndtr/goleveldb v1.0.0/go.mod h1:ZVVdQEZoIme9iO1Ch2Jdy24qqXrMMOU6lpPAyBWyWuQ=\ngithub.com/thoas/stats v0.0.0-20190407194641-965cb2de1678 h1:kFej3rMKjbzysHYvLmv5iOlbRymDMkNJxbovYb/iP0c=\ngithub.com/thoas/stats v0.0.0-20190407194641-965cb2de1678/go.mod h1:GkZsNBOco11YY68OnXUARbSl26IOXXAeYf6ZKmSZR2M=\ngithub.com/tidwall/assert v0.1.0 h1:aWcKyRBUAdLoVebxo95N7+YZVTFF/ASTr7BN4sLP6XI=\ngithub.com/tidwall/assert v0.1.0/go.mod h1:QLYtGyeqse53vuELQheYl9dngGCJQ+mTtlxcktb+Kj8=\ngithub.com/tidwall/btree v1.7.0 h1:L1fkJH/AuEh5zBnnBbmTwQ5Lt+bRJ5A8EWecslvo9iI=\ngithub.com/tidwall/btree v1.7.0/go.mod h1:twD9XRA5jj9VUQGELzDO4HPQTNJsoWWfYEL+EUQ2cKY=\ngithub.com/tidwall/buntdb v1.3.1 h1:HKoDF01/aBhl9RjYtbaLnvX9/OuenwvQiC3OP1CcL4o=\ngithub.com/tidwall/buntdb v1.3.1/go.mod h1:lZZrZUWzlyDJKlLQ6DKAy53LnG7m5kHyrEHvvcDmBpU=\ngithub.com/tidwall/gjson v1.12.1/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=\ngithub.com/tidwall/gjson v1.17.1 h1:wlYEnwqAHgzmhNUFfw7Xalt2JzQvsMx2Se4PcoFCT/U=\ngithub.com/tidwall/gjson v1.17.1/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=\ngithub.com/tidwall/grect v0.1.4 h1:dA3oIgNgWdSspFzn1kS4S/RDpZFLrIxAZOdJKjYapOg=\ngithub.com/tidwall/grect v0.1.4/go.mod h1:9FBsaYRaR0Tcy4UwefBX/UDcDcDy9V5jUcxHzv2jd5Q=\ngithub.com/tidwall/lotsa v1.0.2 h1:dNVBH5MErdaQ/xd9s769R31/n2dXavsQ0Yf4TMEHHw8=\ngithub.com/tidwall/lotsa v1.0.2/go.mod h1:X6NiU+4yHA3fE3Puvpnn1XMDrFZrE9JO2/w+UMuqgR8=\ngithub.com/tidwall/match v1.1.1 h1:+Ho715JplO36QYgwN9PGYNhgZvoUSc9X2c80KVTi+GA=\ngithub.com/tidwall/match v1.1.1/go.mod h1:eRSPERbgtNPcGhD8UCthc6PmLEQXEWd3PRB5JTxsfmM=\ngithub.com/tidwall/pretty v1.2.0/go.mod h1:ITEVvHYasfjBbM0u2Pg8T2nJnzm8xPwvNhhsoaGGjNU=\ngithub.com/tidwall/pretty v1.2.1 h1:qjsOFOWWQl+N3RsoF5/ssm1pHmJJwhjlSbZ51I6wMl4=\ngithub.com/tidwall/pretty v1.2.1/go.mod h1:ITEVvHYasfjBbM0u2Pg8T2nJnzm8xPwvNhhsoaGGjNU=\ngithub.com/tidwall/rtred v0.1.2 h1:exmoQtOLvDoO8ud++6LwVsAMTu0KPzLTUrMln8u1yu8=\ngithub.com/tidwall/rtred v0.1.2/go.mod h1:hd69WNXQ5RP9vHd7dqekAz+RIdtfBogmglkZSRxCHFQ=\ngithub.com/tidwall/tinyqueue v0.1.1 h1:SpNEvEggbpyN5DIReaJ2/1ndroY8iyEGxPYxoSaymYE=\ngithub.com/tidwall/tinyqueue v0.1.1/go.mod h1:O/QNHwrnjqr6IHItYrzoHAKYhBkLI67Q096fQP5zMYw=\ngithub.com/tj/assert v0.0.3 h1:Df/BlaZ20mq6kuai7f5z2TvPFiwC3xaWJSDQNiIS3Rk=\ngithub.com/tj/assert v0.0.3/go.mod h1:Ne6X72Q+TB1AteidzQncjw9PabbMp4PBMZ1k+vd1Pvk=\ngithub.com/twitchyliquid64/golang-asm v0.15.1 h1:SU5vSMR7hnwNxj24w34ZyCi/FmDZTkS4MhqMhdFk5YI=\ngithub.com/twitchyliquid64/golang-asm v0.15.1/go.mod h1:a1lVb/DtPvCB8fslRZhAngC2+aY1QWCk3Cedj/Gdt08=\ngithub.com/ugorji/go v1.1.7/go.mod h1:kZn38zHttfInRq0xu/PH0az30d+z6vm202qpg1oXVMw=\ngithub.com/ugorji/go/codec v1.1.7/go.mod h1:Ax+UKWsSmolVDwsd+7N3ZtXu+yMGCf907BLYF3GoBXY=\ngithub.com/ugorji/go/codec v1.2.12 h1:9LC83zGrHhuUA9l16C9AHXAqEV/2wBQ4nkvumAE65EE=\ngithub.com/ugorji/go/codec v1.2.12/go.mod h1:UNopzCgEMSXjBc6AOMqYvWC1ktqTAfzJZUZgYf6w6lg=\ngithub.com/urfave/cli/v2 v2.1.1/go.mod h1:SE9GqnLQmjVa0iPEY0f1w3ygNIYcIJ0OKPMoW2caLfQ=\ngithub.com/vmihailenco/msgpack v4.0.4+incompatible h1:dSLoQfGFAo3F6OoNhwUmLwVgaUXK79GlxNBwueZn0xI=\ngithub.com/vmihailenco/msgpack v4.0.4+incompatible/go.mod h1:fy3FlTQTDXWkZ7Bh6AcGMlsjHatGryHQYUTf1ShIgkk=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngo.etcd.io/bbolt v1.3.4/go.mod h1:G5EMThwa9y8QZGBClrRx5EY+Yw9kAhnjy3bSjsnlVTQ=\ngo.etcd.io/bbolt v1.3.10 h1:+BqfJTcCzTItrop8mq/lbzL8wSGtj94UO/3U31shqG0=\ngo.etcd.io/bbolt v1.3.10/go.mod h1:bK3UQLPJZly7IlNmV7uVHJDxfe5aK9Ll93e/74Y9oEQ=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.opentelemetry.io/contrib/detectors/gcp v1.32.0 h1:P78qWqkLSShicHmAzfECaTgvslqHxblNE9j62Ws1NK8=\ngo.opentelemetry.io/contrib/detectors/gcp v1.32.0/go.mod h1:TVqo0Sda4Cv8gCIixd7LuLwW4EylumVWfhjZJjDD4DU=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.57.0 h1:qtFISDHKolvIxzSs0gIaiPUPR0Cucb0F2coHC7ZLdps=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.57.0/go.mod h1:Y+Pop1Q6hCOnETWTW4NROK/q1hv50hM7yDaUTjG8lp8=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.57.0 h1:DheMAlT6POBP+gh8RUH19EOTnQIor5QE0uSRPtzCpSw=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.57.0/go.mod h1:wZcGmeVO9nzP67aYSLDqXNWK87EZWhi7JWj1v7ZXf94=\ngo.opentelemetry.io/otel v1.32.0 h1:WnBN+Xjcteh0zdk01SVqV55d/m62NJLJdIyb4y/WO5U=\ngo.opentelemetry.io/otel v1.32.0/go.mod h1:00DCVSB0RQcnzlwyTfqtxSm+DRr9hpYrHjNGiBHVQIg=\ngo.opentelemetry.io/otel/exporters/stdout/stdoutmetric v1.29.0 h1:WDdP9acbMYjbKIyJUhTvtzj601sVJOqgWdUxSdR/Ysc=\ngo.opentelemetry.io/otel/exporters/stdout/stdoutmetric v1.29.0/go.mod h1:BLbf7zbNIONBLPwvFnwNHGj4zge8uTCM/UPIVW1Mq2I=\ngo.opentelemetry.io/otel/metric v1.32.0 h1:xV2umtmNcThh2/a/aCP+h64Xx5wsj8qqnkYZktzNa0M=\ngo.opentelemetry.io/otel/metric v1.32.0/go.mod h1:jH7CIbbK6SH2V2wE16W05BHCtIDzauciCRLoc/SyMv8=\ngo.opentelemetry.io/otel/sdk v1.32.0 h1:RNxepc9vK59A8XsgZQouW8ue8Gkb4jpWtJm9ge5lEG4=\ngo.opentelemetry.io/otel/sdk v1.32.0/go.mod h1:LqgegDBjKMmb2GC6/PrTnteJG39I8/vJCAP9LlJXEjU=\ngo.opentelemetry.io/otel/sdk/metric v1.32.0 h1:rZvFnvmvawYb0alrYkjraqJq0Z4ZUJAiyYCU9snn1CU=\ngo.opentelemetry.io/otel/sdk/metric v1.32.0/go.mod h1:PWeZlq0zt9YkYAp3gjKZ0eicRYvOh1Gd+X99x6GHpCQ=\ngo.opentelemetry.io/otel/trace v1.32.0 h1:WIC9mYrXf8TmY/EXuULKc8hR17vE+Hjv2cssQDe03fM=\ngo.opentelemetry.io/otel/trace v1.32.0/go.mod h1:+i4rkvCraA+tG6AzwloGaCtkx53Fa+L+V8e9a7YvhT8=\ngo.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/atomic v1.11.0 h1:ZvwS0R+56ePWxUNi+Atn9dWONBPp/AUETXlHW0DxSjE=\ngo.uber.org/atomic v1.11.0/go.mod h1:LUxbIzbOniOlMKjJjyPfpl4v+PKK2cNJn91OQbhoJI0=\ngo.uber.org/goleak v1.1.10/go.mod h1:8a7PlsEVH3e/a/GLqe5IIrQx6GzcnRmZEufDUTk4A7A=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\ngo.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=\ngo.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=\ngo.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=\ngo.uber.org/zap v1.18.1/go.mod h1:xg/QME4nWcxGxrpdeYfq7UvYrLh66cuVKdrbD1XF/NI=\ngolang.org/x/arch v0.0.0-20210923205945-b76863e36670/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=\ngolang.org/x/arch v0.8.0 h1:3wRIsP3pM4yUptoR96otTUOXI367OS0+c9eeRi9doIc=\ngolang.org/x/arch v0.8.0/go.mod h1:FEVrYAQjsQXMVJ1nsMoVVXPZg6p2JE2mx8psSWTDQys=\ngolang.org/x/crypto v0.0.0-20170512130425-ab89591268e0/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.32.0 h1:euUpcYgM8WcP71gNpTqQCn6rC2t6ULUPiOzfWaXVVfc=\ngolang.org/x/crypto v0.32.0/go.mod h1:ZnnJkOaASj8g0AjIduWNlq2NRxL0PlBrbKVyZ6V/Ugc=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20240314144324-c7f7c6466f7f h1:3CW0unweImhOzd5FmYuRsD4Y4oQFKZIjAnKbjV4WIrw=\ngolang.org/x/exp v0.0.0-20240314144324-c7f7c6466f7f/go.mod h1:CxmFvTBINI24O/j8iY7H1xHzx2i4OsyguNBmN/uPtqc=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20191105084925-a882066a44e0/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200520004742-59133d7f0dd7/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20220403103023-749bd193bc2b/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.34.0 h1:Mb7Mrk043xzHgnRM88suvJFwzVrRfHEHJEl5/71CKw0=\ngolang.org/x/net v0.34.0/go.mod h1:di0qlW3YNM5oh6GqDGQr92MyTozJPmybPK4Ev/Gm31k=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.25.0 h1:CY4y7XT9v0cRI9oupztF8AgiIu99L/ksR/Xp/6jrZ70=\ngolang.org/x/oauth2 v0.25.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190813064441-fde4db37ae7a/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190904154756-749cb33beabd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191005200804-aed5e4c7ecf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191120155948-bd437916bb0e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210112080510-489259a85091/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211025201205-69cdffdb9359/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20221010170243-090e33056c14/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.12.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.29.0 h1:TPYlXGxvx1MGTn2GiZDhnjPA9wZzZeGKHHmKhHYvgaU=\ngolang.org/x/sys v0.29.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.3.8/go.mod h1:E6s5w1FMmriuDzIBO73fBruAKo1PCIq6d2Q6DHfQ8WQ=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.8.0 h1:9i3RxcPv3PZnitoVGMPDKZSq1xW1gK1Xy3ArNOGZfEg=\ngolang.org/x/time v0.8.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20191108193012-7d206e10da11/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20201224043029-2b0845dc783e/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/api v0.212.0 h1:BcRj3MJfHF3FYD29rk7u9kuu1SyfGqfHcA0hSwKqkHg=\ngoogle.golang.org/api v0.212.0/go.mod h1:gICpLlpp12/E8mycRMzgy3SQ9cFh2XnVJ6vJi/kQbvI=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.6.5/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.8 h1:IhEN5q69dyKagZPYMSdIjS2HqprW324FRQZJcGqPAsM=\ngoogle.golang.org/appengine v1.6.8/go.mod h1:1jJ3jBArFh5pcgW8gCtRJnepW8FzD1V44FJffLiz/Ds=\ngoogle.golang.org/appengine/v2 v2.0.6 h1:LvPZLGuchSBslPBp+LAhihBeGSiRh1myRoYK4NtuBIw=\ngoogle.golang.org/appengine/v2 v2.0.6/go.mod h1:WoEXGoXNfa0mLvaH5sV3ZSGXwVmy8yf7Z1JKf3J3wLI=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20200423170343-7949de9c1215/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20241118233622-e639e219e697 h1:ToEetK57OidYuqD4Q5w+vfEnPvPpuTwedCNVohYJfNk=\ngoogle.golang.org/genproto v0.0.0-20241118233622-e639e219e697/go.mod h1:JJrvXBWRZaFMxBufik1a4RpFw4HhgVtBBWQeQgUj2cc=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241118233622-e639e219e697 h1:pgr/4QbFyktUv9CtQ/Fq4gzEE6/Xs7iCXbktaGzLHbQ=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241118233622-e639e219e697/go.mod h1:+D9ySVjN8nY8YCVjc5O7PZDIdZporIDY3KaGfJunh88=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241206012308-a4fef0638583 h1:IfdSdTcLFy4lqUQrQJLkLt1PB+AsqVz6lwkWPzWEz10=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241206012308-a4fef0638583/go.mod h1:5uTbfoYQed2U9p3KIj2/Zzm02PYhndfdmML0qC3q3FU=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.29.1/go.mod h1:itym6AZVZYACWQqET3MqgPpjcuV5QH3BxFS3IjizoKk=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.68.0 h1:aHQeeJbo8zAkAa3pRzrVjZlbz6uSfeOXlJNQM0RAbz0=\ngoogle.golang.org/grpc v1.68.0/go.mod h1:fmSPC5AsjSBCK54MyHRx48kpOti1/jRfOlwEWywNjWA=\ngoogle.golang.org/grpc/stats/opentelemetry v0.0.0-20241028142157-ada6787961b3 h1:hUfOButuEtpc0UvYiaYRbNwxVYr0mQQOWq6X8beJ9Gc=\ngoogle.golang.org/grpc/stats/opentelemetry v0.0.0-20241028142157-ada6787961b3/go.mod h1:jzYlkSMbKypzuu6xoAEijsNVo9ZeDF1u/zCfFgsx7jg=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.30.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=\ngoogle.golang.org/protobuf v1.35.2 h1:8Ar7bF+apOIoThw1EdZl0p1oWvMqTHmpA2fRTyZO8io=\ngoogle.golang.org/protobuf v1.35.2/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=\ngopkg.in/go-playground/assert.v1 v1.2.1/go.mod h1:9RXL0bg/zibRAgZUYszZSwO/z8Y/a8bDuhia5mkpMnE=\ngopkg.in/go-playground/validator.v9 v9.29.1/go.mod h1:+c9/zcJMFNgbLvly1L1V+PpxWdVbfP1avr/N00E2vyQ=\ngopkg.in/ini.v1 v1.67.0 h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=\ngopkg.in/ini.v1 v1.67.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20200605160147-a5ece683394c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nnullprogram.com/x/optparse v1.0.0/go.mod h1:KdyPE+Igbe0jQUrVfMqDMeJQIJZEuyV7pjYmp6pbG50=\nrsc.io/pdf v0.1.1/go.mod h1:n8OzWcQ6Sp37PL01nO98y4iUCRdTGarVfzxY20ICaU4=\n"
        },
        {
          "name": "helm",
          "type": "tree",
          "content": null
        },
        {
          "name": "k8s",
          "type": "tree",
          "content": null
        },
        {
          "name": "logx",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 13.203125,
          "content": "package main\n\nimport (\n\t\"context\"\n\t\"flag\"\n\t\"fmt\"\n\t\"log\"\n\t\"net\"\n\t\"net/http\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strconv\"\n\t\"time\"\n\n\t\"github.com/appleboy/gorush/config\"\n\t\"github.com/appleboy/gorush/core\"\n\t\"github.com/appleboy/gorush/logx\"\n\t\"github.com/appleboy/gorush/notify\"\n\t\"github.com/appleboy/gorush/router\"\n\t\"github.com/appleboy/gorush/rpc\"\n\t\"github.com/appleboy/gorush/status\"\n\n\t\"github.com/appleboy/graceful\"\n\t\"github.com/golang-queue/nats\"\n\t\"github.com/golang-queue/nsq\"\n\t\"github.com/golang-queue/queue\"\n\tqcore \"github.com/golang-queue/queue/core\"\n\tredisdb \"github.com/golang-queue/redisdb-stream\"\n)\n\n//nolint:gocyclo\nfunc main() {\n\topts := config.ConfYaml{}\n\n\tvar (\n\t\tping        bool\n\t\tshowVersion bool\n\t\tconfigFile  string\n\t\ttopic       string\n\t\tmessage     string\n\t\ttoken       string\n\t\ttitle       string\n\t)\n\n\tflag.BoolVar(&showVersion, \"version\", false, \"Print version information.\")\n\tflag.BoolVar(&showVersion, \"V\", false, \"Print version information.\")\n\tflag.StringVar(&configFile, \"c\", \"\", \"Configuration file path.\")\n\tflag.StringVar(&configFile, \"config\", \"\", \"Configuration file path.\")\n\tflag.StringVar(&opts.Core.PID.Path, \"pid\", \"\", \"PID file path.\")\n\tflag.StringVar(&opts.Ios.KeyPath, \"i\", \"\", \"iOS certificate key file path\")\n\tflag.StringVar(&opts.Ios.KeyPath, \"key\", \"\", \"iOS certificate key file path\")\n\tflag.StringVar(&opts.Ios.KeyID, \"key-id\", \"\", \"iOS Key ID for P8 token\")\n\tflag.StringVar(&opts.Ios.TeamID, \"team-id\", \"\", \"iOS Team ID for P8 token\")\n\tflag.StringVar(&opts.Ios.Password, \"P\", \"\", \"iOS certificate password for gorush\")\n\tflag.StringVar(&opts.Ios.Password, \"password\", \"\", \"iOS certificate password for gorush\")\n\tflag.StringVar(&opts.Android.KeyPath, \"fcm-key\", \"\", \"FCM key path configuration for gorush\")\n\tflag.StringVar(&opts.Huawei.AppSecret, \"hk\", \"\", \"Huawei api key configuration for gorush\")\n\tflag.StringVar(&opts.Huawei.AppSecret, \"hmskey\", \"\", \"Huawei api key configuration for gorush\")\n\tflag.StringVar(&opts.Huawei.AppID, \"hid\", \"\", \"HMS app id configuration for gorush\")\n\tflag.StringVar(&opts.Huawei.AppID, \"hmsid\", \"\", \"HMS app id configuration for gorush\")\n\tflag.StringVar(&opts.Core.Address, \"A\", \"\", \"address to bind\")\n\tflag.StringVar(&opts.Core.Address, \"address\", \"\", \"address to bind\")\n\tflag.StringVar(&opts.Core.Port, \"p\", \"\", \"port number for gorush\")\n\tflag.StringVar(&opts.Core.Port, \"port\", \"\", \"port number for gorush\")\n\tflag.StringVar(&token, \"t\", \"\", \"token string\")\n\tflag.StringVar(&token, \"token\", \"\", \"token string\")\n\tflag.StringVar(&opts.Stat.Engine, \"e\", \"\", \"store engine\")\n\tflag.StringVar(&opts.Stat.Engine, \"engine\", \"\", \"store engine\")\n\tflag.StringVar(&opts.Stat.Redis.Addr, \"redis-addr\", \"\", \"redis addr\")\n\tflag.StringVar(&message, \"m\", \"\", \"notification message\")\n\tflag.StringVar(&message, \"message\", \"\", \"notification message\")\n\tflag.StringVar(&title, \"title\", \"\", \"notification title\")\n\tflag.BoolVar(&opts.Android.Enabled, \"android\", false, \"send android notification\")\n\tflag.BoolVar(&opts.Huawei.Enabled, \"huawei\", false, \"send huawei notification\")\n\tflag.BoolVar(&opts.Ios.Enabled, \"ios\", false, \"send ios notification\")\n\tflag.BoolVar(&opts.Ios.Production, \"production\", false, \"production mode in iOS\")\n\tflag.StringVar(&topic, \"topic\", \"\", \"apns topic in iOS\")\n\tflag.StringVar(&opts.Core.HTTPProxy, \"proxy\", \"\", \"http proxy url\")\n\tflag.BoolVar(&ping, \"ping\", false, \"ping server\")\n\n\tflag.Usage = usage\n\tflag.Parse()\n\n\trouter.SetVersion(version)\n\trouter.SetCommit(commit)\n\n\t// Show version and exit\n\tif showVersion {\n\t\trouter.PrintGoRushVersion()\n\t\tos.Exit(0)\n\t}\n\n\t// set default parameters.\n\tcfg, err := config.LoadConf(configFile)\n\tif err != nil {\n\t\tlog.Printf(\"Load yaml config file error: '%v'\", err)\n\n\t\treturn\n\t}\n\n\t// Initialize push slots for concurrent iOS pushes\n\tnotify.MaxConcurrentIOSPushes = make(chan struct{}, cfg.Ios.MaxConcurrentPushes)\n\n\tif opts.Ios.KeyPath != \"\" {\n\t\tcfg.Ios.KeyPath = opts.Ios.KeyPath\n\t}\n\n\tif opts.Ios.KeyID != \"\" {\n\t\tcfg.Ios.KeyID = opts.Ios.KeyID\n\t}\n\n\tif opts.Ios.TeamID != \"\" {\n\t\tcfg.Ios.TeamID = opts.Ios.TeamID\n\t}\n\n\tif opts.Ios.Password != \"\" {\n\t\tcfg.Ios.Password = opts.Ios.Password\n\t}\n\n\tif opts.Android.KeyPath != \"\" {\n\t\tcfg.Android.KeyPath = opts.Android.KeyPath\n\t}\n\n\tif opts.Huawei.AppSecret != \"\" {\n\t\tcfg.Huawei.AppSecret = opts.Huawei.AppSecret\n\t}\n\n\tif opts.Huawei.AppID != \"\" {\n\t\tcfg.Huawei.AppID = opts.Huawei.AppID\n\t}\n\n\tif opts.Stat.Engine != \"\" {\n\t\tcfg.Stat.Engine = opts.Stat.Engine\n\t}\n\n\tif opts.Stat.Redis.Addr != \"\" {\n\t\tcfg.Stat.Redis.Addr = opts.Stat.Redis.Addr\n\t}\n\n\t// overwrite server port and address\n\tif opts.Core.Port != \"\" {\n\t\tcfg.Core.Port = opts.Core.Port\n\t}\n\tif opts.Core.Address != \"\" {\n\t\tcfg.Core.Address = opts.Core.Address\n\t}\n\n\tif err = logx.InitLog(\n\t\tcfg.Log.AccessLevel,\n\t\tcfg.Log.AccessLog,\n\t\tcfg.Log.ErrorLevel,\n\t\tcfg.Log.ErrorLog,\n\t); err != nil {\n\t\tlog.Fatalf(\"can't load log module, error: %v\", err)\n\t}\n\n\tif opts.Core.HTTPProxy != \"\" {\n\t\tcfg.Core.HTTPProxy = opts.Core.HTTPProxy\n\t}\n\n\tif cfg.Core.HTTPProxy != \"\" {\n\t\terr = notify.SetProxy(cfg.Core.HTTPProxy)\n\t\tif err != nil {\n\t\t\tlogx.LogError.Fatalf(\"Set Proxy error: %v\", err)\n\t\t}\n\t}\n\n\tg := graceful.NewManager(\n\t\tgraceful.WithLogger(logx.QueueLogger()),\n\t)\n\n\tif ping {\n\t\tif err := pinger(g.ShutdownContext(), cfg); err != nil {\n\t\t\tlogx.LogError.Fatal(err)\n\t\t}\n\t\treturn\n\t}\n\n\t// send android notification\n\tif opts.Android.Enabled {\n\t\tcfg.Android.Enabled = opts.Android.Enabled\n\t\treq := &notify.PushNotification{\n\t\t\tPlatform: core.PlatFormAndroid,\n\t\t\tMessage:  message,\n\t\t\tTitle:    title,\n\t\t}\n\n\t\t// send message to single device\n\t\tif token != \"\" {\n\t\t\treq.To = token\n\t\t}\n\n\t\t// send topic message\n\t\tif topic != \"\" {\n\t\t\treq.Topic = topic\n\t\t}\n\n\t\tif err := status.InitAppStatus(cfg); err != nil {\n\t\t\treturn\n\t\t}\n\n\t\tif _, err := notify.PushToAndroid(g.ShutdownContext(), req, cfg); err != nil {\n\t\t\treturn\n\t\t}\n\n\t\treturn\n\t}\n\n\t// send huawei notification\n\tif opts.Huawei.Enabled {\n\t\tcfg.Huawei.Enabled = opts.Huawei.Enabled\n\t\treq := &notify.PushNotification{\n\t\t\tPlatform: core.PlatFormHuawei,\n\t\t\tMessage:  message,\n\t\t\tTitle:    title,\n\t\t}\n\n\t\t// send message to single device\n\t\tif token != \"\" {\n\t\t\treq.Tokens = []string{token}\n\t\t}\n\n\t\t// send topic message\n\t\tif topic != \"\" {\n\t\t\treq.To = topic\n\t\t}\n\n\t\terr := notify.CheckMessage(req)\n\t\tif err != nil {\n\t\t\tlogx.LogError.Fatal(err)\n\t\t}\n\n\t\tif err := status.InitAppStatus(cfg); err != nil {\n\t\t\treturn\n\t\t}\n\n\t\tif _, err := notify.PushToHuawei(g.ShutdownContext(), req, cfg); err != nil {\n\t\t\treturn\n\t\t}\n\n\t\treturn\n\t}\n\n\t// send ios notification\n\tif opts.Ios.Enabled {\n\t\tif opts.Ios.Production {\n\t\t\tcfg.Ios.Production = opts.Ios.Production\n\t\t}\n\n\t\tcfg.Ios.Enabled = opts.Ios.Enabled\n\t\treq := &notify.PushNotification{\n\t\t\tPlatform: core.PlatFormIos,\n\t\t\tMessage:  message,\n\t\t\tTitle:    title,\n\t\t}\n\n\t\t// send message to single device\n\t\tif token != \"\" {\n\t\t\treq.Tokens = []string{token}\n\t\t}\n\n\t\t// send topic message\n\t\tif topic != \"\" {\n\t\t\treq.Topic = topic\n\t\t}\n\n\t\terr := notify.CheckMessage(req)\n\t\tif err != nil {\n\t\t\tlogx.LogError.Fatal(err)\n\t\t}\n\n\t\tif err := status.InitAppStatus(cfg); err != nil {\n\t\t\treturn\n\t\t}\n\n\t\tif err := notify.InitAPNSClient(g.ShutdownContext(), cfg); err != nil {\n\t\t\treturn\n\t\t}\n\n\t\tif _, err := notify.PushToIOS(g.ShutdownContext(), req, cfg); err != nil {\n\t\t\treturn\n\t\t}\n\n\t\treturn\n\t}\n\n\tif err = notify.CheckPushConf(cfg); err != nil {\n\t\tlogx.LogError.Fatal(err)\n\t}\n\n\tif opts.Core.PID.Path != \"\" {\n\t\tcfg.Core.PID.Path = opts.Core.PID.Path\n\t\tcfg.Core.PID.Enabled = true\n\t\tcfg.Core.PID.Override = true\n\t}\n\n\tif err = createPIDFile(cfg); err != nil {\n\t\tlogx.LogError.Fatal(err)\n\t}\n\n\tif err = status.InitAppStatus(cfg); err != nil {\n\t\tlogx.LogError.Fatal(err)\n\t}\n\n\tvar w qcore.Worker\n\tswitch core.Queue(cfg.Queue.Engine) {\n\tcase core.LocalQueue:\n\t\tw = queue.NewConsumer(\n\t\t\tqueue.WithQueueSize(int(cfg.Core.QueueNum)),\n\t\t\tqueue.WithFn(notify.Run(cfg)),\n\t\t\tqueue.WithLogger(logx.QueueLogger()),\n\t\t)\n\tcase core.NSQ:\n\t\tw = nsq.NewWorker(\n\t\t\tnsq.WithAddr(cfg.Queue.NSQ.Addr),\n\t\t\tnsq.WithTopic(cfg.Queue.NSQ.Topic),\n\t\t\tnsq.WithChannel(cfg.Queue.NSQ.Channel),\n\t\t\tnsq.WithMaxInFlight(int(cfg.Core.WorkerNum)),\n\t\t\tnsq.WithRunFunc(notify.Run(cfg)),\n\t\t\tnsq.WithLogger(logx.QueueLogger()),\n\t\t)\n\tcase core.NATS:\n\t\tw = nats.NewWorker(\n\t\t\tnats.WithAddr(cfg.Queue.NATS.Addr),\n\t\t\tnats.WithSubj(cfg.Queue.NATS.Subj),\n\t\t\tnats.WithQueue(cfg.Queue.NATS.Queue),\n\t\t\tnats.WithRunFunc(notify.Run(cfg)),\n\t\t\tnats.WithLogger(logx.QueueLogger()),\n\t\t)\n\tcase core.Redis:\n\t\tw = redisdb.NewWorker(\n\t\t\tredisdb.WithAddr(cfg.Queue.Redis.Addr),\n\t\t\tredisdb.WithStreamName(cfg.Queue.Redis.StreamName),\n\t\t\tredisdb.WithGroup(cfg.Queue.Redis.Group),\n\t\t\tredisdb.WithConsumer(cfg.Queue.Redis.Consumer),\n\t\t\tredisdb.WithMaxLength(cfg.Core.QueueNum),\n\t\t\tredisdb.WithRunFunc(notify.Run(cfg)),\n\t\t\tredisdb.WithLogger(logx.QueueLogger()),\n\t\t)\n\tdefault:\n\t\tlogx.LogError.Fatalf(\"we don't support queue engine: %s\", cfg.Queue.Engine)\n\t}\n\n\tq := queue.NewPool(\n\t\tint(cfg.Core.WorkerNum),\n\t\tqueue.WithWorker(w),\n\t\tqueue.WithLogger(logx.QueueLogger()),\n\t)\n\n\tg.AddShutdownJob(func() error {\n\t\t// logx.LogAccess.Info(\"close the queue system, current queue usage: \", q.Usage())\n\t\t// stop queue system and wait job completed\n\t\tq.Release()\n\t\t// close the connection with storage\n\t\tlogx.LogAccess.Info(\"close the storage connection: \", cfg.Stat.Engine)\n\t\tif err := status.StatStorage.Close(); err != nil {\n\t\t\tlogx.LogError.Fatal(\"can't close the storage connection: \", err.Error())\n\t\t}\n\t\treturn nil\n\t})\n\n\tif cfg.Ios.Enabled {\n\t\tif err = notify.InitAPNSClient(g.ShutdownContext(), cfg); err != nil {\n\t\t\tlogx.LogError.Fatal(err)\n\t\t}\n\t}\n\n\tif cfg.Android.Enabled {\n\t\tif _, err = notify.InitFCMClient(g.ShutdownContext(), cfg); err != nil {\n\t\t\tlogx.LogError.Fatal(err)\n\t\t}\n\t}\n\n\tif cfg.Huawei.Enabled {\n\t\tif _, err = notify.InitHMSClient(cfg, cfg.Huawei.AppSecret, cfg.Huawei.AppID); err != nil {\n\t\t\tlogx.LogError.Fatal(err)\n\t\t}\n\t}\n\n\tg.AddRunningJob(func(ctx context.Context) error {\n\t\treturn router.RunHTTPServer(ctx, cfg, q)\n\t})\n\n\tg.AddRunningJob(func(ctx context.Context) error {\n\t\treturn rpc.RunGRPCServer(ctx, cfg)\n\t})\n\n\t<-g.Done()\n}\n\n// Version control for notify.\nvar (\n\tversion = \"No Version Provided\"\n\tcommit  = \"No Commit Provided\"\n)\n\nvar usageStr = `\n  ________                              .__\n /  _____/   ____ _______  __ __  ______|  |__\n/   \\  ___  /  _ \\\\_  __ \\|  |  \\/  ___/|  |  \\\n\\    \\_\\  \\(  <_> )|  | \\/|  |  /\\___ \\ |   Y  \\\n \\______  / \\____/ |__|   |____//____  >|___|  /\n        \\/                           \\/      \\/\n\nUsage: gorush [options]\n\nServer Options:\n    -A, --address <address>          Address to bind (default: any)\n    -p, --port <port>                Use port for clients (default: 8088)\n    -c, --config <file>              Configuration file path\n    -m, --message <message>          Notification message\n    -t, --token <token>              Notification token\n    -e, --engine <engine>            Storage engine (memory, redis ...)\n    --title <title>                  Notification title\n    --proxy <proxy>                  Proxy URL\n    --pid <pid path>                 Process identifier path\n    --redis-addr <redis addr>        Redis addr (default: localhost:6379)\n    --ping                           healthy check command for container\niOS Options:\n    -i, --key <file>                 certificate key file path\n    -P, --password <password>        certificate key password\n    --ios                            enabled iOS (default: false)\n    --production                     iOS production mode (default: false)\nAndroid Options:\n    --fcm-key <fcm_key_path>         FCM Credentials Key Path\n    --android                        enabled android (default: false)\nHuawei Options:\n    -hk, --hmskey <hms_key>          HMS App Secret\n    -hid, --hmsid <hms_id>           HMS App ID\n    --huawei                         enabled huawei (default: false)\nCommon Options:\n    --topic <topic>                  iOS, Android or Huawei topic message\n    -h, --help                       Show this message\n    -V, --version                    Show version\n`\n\n// usage will print out the flag options for the server.\nfunc usage() {\n\tfmt.Printf(\"%s\\n\", usageStr)\n}\n\n// handles pinging the endpoint and returns an error if the\n// agent is in an unhealthy state.\nfunc pinger(ctx context.Context, cfg *config.ConfYaml) error {\n\ttransport := &http.Transport{\n\t\tDial: (&net.Dialer{\n\t\t\tTimeout: 5 * time.Second,\n\t\t}).Dial,\n\t\tTLSHandshakeTimeout: 5 * time.Second,\n\t}\n\tclient := &http.Client{\n\t\tTimeout:   time.Second * 10,\n\t\tTransport: transport,\n\t}\n\treq, _ := http.NewRequestWithContext(\n\t\tctx,\n\t\thttp.MethodGet,\n\t\t\"http://localhost:\"+cfg.Core.Port+cfg.API.HealthURI,\n\t\tnil,\n\t)\n\tresp, err := client.Do(req)\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer resp.Body.Close()\n\tif resp.StatusCode != http.StatusOK {\n\t\treturn fmt.Errorf(\"server returned non-200 status code\")\n\t}\n\treturn nil\n}\n\nfunc createPIDFile(cfg *config.ConfYaml) error {\n\tif !cfg.Core.PID.Enabled {\n\t\treturn nil\n\t}\n\n\tpidPath := cfg.Core.PID.Path\n\t_, err := os.Stat(pidPath)\n\tif os.IsNotExist(err) || cfg.Core.PID.Override {\n\t\tcurrentPid := os.Getpid()\n\t\tif err := os.MkdirAll(filepath.Dir(pidPath), os.ModePerm); err != nil {\n\t\t\treturn fmt.Errorf(\"can't create PID folder on %v\", err)\n\t\t}\n\n\t\tfile, err := os.Create(pidPath)\n\t\tif err != nil {\n\t\t\treturn fmt.Errorf(\"can't create PID file: %v\", err)\n\t\t}\n\t\tdefer file.Close()\n\t\tif _, err := file.WriteString(strconv.FormatInt(int64(currentPid), 10)); err != nil {\n\t\t\treturn fmt.Errorf(\"can't write PID information on %s: %v\", pidPath, err)\n\t\t}\n\t} else {\n\t\treturn fmt.Errorf(\"%s already exists\", pidPath)\n\t}\n\treturn nil\n}\n"
        },
        {
          "name": "metric",
          "type": "tree",
          "content": null
        },
        {
          "name": "netlify.toml",
          "type": "blob",
          "size": 0.2626953125,
          "content": "[build]\ncommand = \"make build_linux_lambda\"\nfunctions = \"release/linux/lambda\"\n\n[build.environment]\nGO111MODULE = \"on\"\nGO_IMPORT_PATH = \"github.com/appleboy/gorush\"\nGO_VERSION = \"1.21.11\"\n\n[[redirects]]\nfrom = \"/*\"\nstatus = 200\nto = \"/.netlify/functions/gorush/:splat\"\n"
        },
        {
          "name": "notify",
          "type": "tree",
          "content": null
        },
        {
          "name": "router",
          "type": "tree",
          "content": null
        },
        {
          "name": "rpc",
          "type": "tree",
          "content": null
        },
        {
          "name": "screenshot",
          "type": "tree",
          "content": null
        },
        {
          "name": "status",
          "type": "tree",
          "content": null
        },
        {
          "name": "storage",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}