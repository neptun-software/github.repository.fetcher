{
  "metadata": {
    "timestamp": 1736567701327,
    "page": 285,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ouqiang/gocron",
      "stars": 5931,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.025390625,
          "content": ".git\nweb/vue/node_modules\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0791015625,
          "content": "*.js linguist-language=go\n*.css linguist-language=go\n*.html linguist-language=go\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.416015625,
          "content": "# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n_obj\n_test\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\n*.test\n*.prof\n\n.DS_Store\n.idea\nlog\ndata\nconf\nprofile/*\n/gocron\n/gocron-node\n/bin\n/web/public/static\n/web/public/index.html\n/gocron-package\n/gocron-node-package\n\nnode_modules\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.744140625,
          "content": "FROM golang:1.15-alpine as builder\n\nRUN apk update \\\n    && apk add --no-cache git ca-certificates make bash yarn nodejs\n\nRUN go env -w GO111MODULE=on && \\\n    go env -w GOPROXY=https://goproxy.cn,direct\n\nWORKDIR /app\n\nRUN git clone https://github.com/ouqiang/gocron.git \\\n    && cd gocron \\\n    && yarn config set ignore-engines true \\\n    && make install-vue \\\n    && make build-vue \\\n    && make statik \\\n    && CGO_ENABLED=0 make gocron\n\nFROM alpine:3.12\n\nRUN apk add --no-cache ca-certificates tzdata \\\n    && addgroup -S app \\\n    && adduser -S -g app app\n\nRUN cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n\nWORKDIR /app\n\nCOPY --from=builder /app/gocron/bin/gocron .\n\nRUN chown -R app:app ./\n\nEXPOSE 5920\n\nUSER app\n\nENTRYPOINT [\"/app/gocron\", \"web\"]\n"
        },
        {
          "name": "Dockerfile.release",
          "type": "blob",
          "size": 0.28125,
          "content": "FROM alpine:3.7\n\nRUN apk add --no-cache ca-certificates tzdata \\\n    && addgroup -S app \\\n    && adduser -S -g app app\n\nRUN cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n\nWORKDIR /app\n\nCOPY gocron .\n\nRUN chown -R app:app ./\n\nEXPOSE 5920\n\nUSER app\n\nENTRYPOINT [\"/app/gocron\", \"web\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0400390625,
          "content": "MIT License\n\nCopyright (c) 2017 qiang.ou\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.001953125,
          "content": "# gocron - 定时任务管理系统\n[![Downloads](https://img.shields.io/github/downloads/ouqiang/gocron/total.svg)](https://github.com/ouqiang/gocron/releases)\n[![license](https://img.shields.io/github/license/mashape/apistatus.svg?maxAge=2592000)](https://github.com/ouqiang/gocron/blob/master/LICENSE)\n[![Release](https://img.shields.io/github/release/ouqiang/gocron.svg?label=Release)](https://github.com/ouqiang/gocron/releases)\n\n# 项目简介\n使用Go语言开发的轻量级定时任务集中调度和管理系统, 用于替代Linux-crontab [查看文档](https://github.com/ouqiang/gocron/wiki)\n\n原有的延时任务拆分为独立项目[延迟队列](https://github.com/ouqiang/delay-queue)  \n\n## 功能特性\n* Web界面管理定时任务\n* crontab时间表达式, 精确到秒\n* 任务执行失败可重试\n* 任务执行超时, 强制结束\n* 任务依赖配置, A任务完成后再执行B任务\n* 账户权限控制\n* 任务类型\n    * shell任务\n    > 在任务节点上执行shell命令, 支持任务同时在多个节点上运行\n    * HTTP任务\n    > 访问指定的URL地址, 由调度器直接执行, 不依赖任务节点\n* 查看任务执行结果日志\n* 任务执行结果通知, 支持邮件、Slack、Webhook\n\n### 截图\n![流程图](https://raw.githubusercontent.com/ouqiang/gocron/master/assets/screenshot/scheduler.png)\n![任务](https://raw.githubusercontent.com/ouqiang/gocron/master/assets/screenshot/task.png)\n![Slack](https://raw.githubusercontent.com/ouqiang/gocron/master/assets/screenshot/notification.png)\n    \n### 支持平台\n> Windows、Linux、Mac OS\n\n### 环境要求\n>  MySQL\n\n\n## 下载\n[releases](https://github.com/ouqiang/gocron/releases)  \n\n[版本升级](https://github.com/ouqiang/gocron/wiki/版本升级)\n\n## 安装\n\n###  二进制安装\n1. 解压压缩包   \n2. `cd 解压目录`   \n3. 启动        \n* 调度器启动        \n  * Windows: `gocron.exe web`   \n  * Linux、Mac OS:  `./gocron web`\n* 任务节点启动, 默认监听0.0.0.0:5921\n  * Windows:  `gocron-node.exe`\n  * Linux、Mac OS:  `./gocron-node`\n4. 浏览器访问 http://localhost:5920\n\n### 源码安装\n\n- 安装Go 1.11+\n- `go get -d github.com/ouqiang/gocron`\n- `export GO111MODULE=on` \n- 编译 `make`\n- 启动\n    * gocron `./bin/gocron web`\n    * gocron-node `./bin/gocron-node`\n\n\n### docker\n\n```shell\ndocker run --name gocron --link mysql:db -p 5920:5920 -d ouqg/gocron\n```\n\n配置: /app/conf/app.ini\n\n日志: /app/log/cron.log\n\n镜像不包含gocron-node, gocron-node需要和具体业务一起构建\n\n\n### 开发\n\n1. 安装Go1.9+, Node.js, Yarn\n2. 安装前端依赖 `make install-vue`\n3. 启动gocron, gocron-node `make run`\n4. 启动node server `make run-vue`, 访问地址 http://localhost:8080\n\n访问http://localhost:8080, API请求会转发给gocron\n\n`make` 编译\n\n`make run` 编译并运行\n\n`make package` 打包 \n> 生成当前系统的压缩包 gocron-v1.5-darwin-amd64.tar.gz gocron-node-v1.5-darwin-amd64.tar.gz\n\n`make package-all` 生成Windows、Linux、Mac的压缩包\n\n### 命令\n\n* gocron\n    * -v 查看版本\n\n* gocron web\n    * --host 默认0.0.0.0\n    * -p 端口, 指定端口, 默认5920\n    * -e 指定运行环境, dev|test|prod, dev模式下可查看更多日志信息, 默认prod\n    * -h 查看帮助\n* gocron-node\n    * -allow-root *nix平台允许以root用户运行\n    * -s ip:port 监听地址  \n    * -enable-tls 开启TLS    \n    * -ca-file   CA证书文件   \n    * -cert-file 证书文件  \n    * -key-file  私钥文件\n    * -h 查看帮助\n    * -v 查看版本\n\n## To Do List\n- [x] 版本升级\n- [x] 批量开启、关闭、删除任务\n- [x] 调度器与任务节点通信支持https\n- [x] 任务分组\n- [x] 多用户\n- [x] 权限控制\n\n## 程序使用的组件\n* Web框架 [Macaron](http://go-macaron.com/)\n* 定时任务调度 [Cron](https://github.com/robfig/cron)\n* ORM [Xorm](https://github.com/go-xorm/xorm)\n* UI框架 [Element UI](https://github.com/ElemeFE/element)\n* 依赖管理 [Govendor](https://github.com/kardianos/govendor)\n* RPC框架 [gRPC](https://github.com/grpc/grpc)\n\n## 反馈\n提交[issue](https://github.com/ouqiang/gocron/issues/new)\n\n## ChangeLog\n\nv1.5\n--------\n* 前端使用Vue+ElementUI重构\n* 任务通知\n    * 新增WebHook通知\n    * 自定义通知模板\n    * 匹配任务执行结果关键字发送通知\n* 任务列表页显示任务下次执行时间\n\nv1.4\n--------\n* HTTP任务支持POST请求\n* 后台手动停止运行中的shell任务\n* 任务执行失败重试间隔时间支持用户自定义\n* 修复API接口调用报403错误\n\nv1.3\n--------\n* 支持多用户登录\n* 增加用户权限控制\n\n\nv1.2.2\n--------\n* 用户登录页增加图形验证码\n* 支持从旧版本升级\n* 任务批量开启、关闭、删除\n* 调度器与任务节点支持HTTPS双向认证\n* 修复任务列表页总记录数显示错误\n\nv1.1\n--------\n\n* 任务可同时在多个节点上运行\n* *nix平台默认禁止以root用户运行任务节点\n* 子任务命令中增加预定义占位符, 子任务可根据主任务运行结果执行相应操作\n* 删除守护进程模块\n* Web访问日志输出到终端\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.6455078125,
          "content": "module github.com/ouqiang/gocron\n\ngo 1.12\n\nrequire (\n\tgithub.com/Tang-RoseChild/mahonia v0.0.0-20131226213531-0eef680515cc\n\tgithub.com/Unknwon/com v0.0.0-20190321035513-0fed4efef755 // indirect\n\tgithub.com/cihub/seelog v0.0.0-20170130134532-f561c5e57575\n\tgithub.com/dgrijalva/jwt-go v3.2.0+incompatible\n\tgithub.com/go-gomail/gomail v0.0.0-20160411212932-81ebce5c23df\n\tgithub.com/go-macaron/binding v0.0.0-20170611065819-ac54ee249c27\n\tgithub.com/go-macaron/gzip v0.0.0-20160222043647-cad1c6580a07\n\tgithub.com/go-macaron/inject v0.0.0-20160627170012-d8a0b8677191 // indirect\n\tgithub.com/go-macaron/toolbox v0.0.0-20180818072302-a77f45a7ce90\n\tgithub.com/go-sql-driver/mysql v1.4.1\n\tgithub.com/go-xorm/builder v0.3.4 // indirect\n\tgithub.com/go-xorm/core v0.6.2\n\tgithub.com/go-xorm/xorm v0.7.1\n\tgithub.com/golang/protobuf v1.3.1\n\tgithub.com/jakecoffman/cron v0.0.0-20190106200828-7e2009c226a5\n\tgithub.com/klauspost/compress v1.5.0 // indirect\n\tgithub.com/klauspost/cpuid v1.2.1 // indirect\n\tgithub.com/lib/pq v1.1.1\n\tgithub.com/ouqiang/goutil v1.1.1\n\tgithub.com/rakyll/statik v0.1.6\n\tgithub.com/sirupsen/logrus v1.4.2\n\tgithub.com/urfave/cli v1.20.0\n\tgolang.org/x/crypto v0.0.0-20190530122614-20be4c3c3ed5 // indirect\n\tgolang.org/x/net v0.0.0-20190522155817-f3200d17e092\n\tgolang.org/x/sync v0.0.0-20181108010431-42b317875d0f // indirect\n\tgolang.org/x/text v0.3.2 // indirect\n\tgoogle.golang.org/genproto v0.0.0-20190530194941-fb225487d101 // indirect\n\tgoogle.golang.org/grpc v1.21.0\n\tgopkg.in/alexcesaro/quotedprintable.v3 v3.0.0-20150716171945-2caba252f4dc // indirect\n\tgopkg.in/gomail.v2 v2.0.0-20160411212932-81ebce5c23df // indirect\n\tgopkg.in/ini.v1 v1.42.0\n\tgopkg.in/macaron.v1 v1.3.2\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 14.7626953125,
          "content": "cloud.google.com/go v0.26.0 h1:e0WKqKTd5BnrG8aKH3J3h+QvEIQtSUcf2n5UZ5ZgLtQ=\ncloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/Tang-RoseChild/mahonia v0.0.0-20131226213531-0eef680515cc h1:7QGNag2vwx98HBiQ8A9M2PWO0ws/xNU6eZVlAbvIWZw=\ngithub.com/Tang-RoseChild/mahonia v0.0.0-20131226213531-0eef680515cc/go.mod h1:Dl60+a8Tcs+dl3UbHuY54vuwwXo6JJ22RwnDGZ+0U+o=\ngithub.com/Unknwon/com v0.0.0-20190321035513-0fed4efef755 h1:1B7wb36fHLSwZfHg6ngZhhtIEHQjiC5H4p7qQGBEffg=\ngithub.com/Unknwon/com v0.0.0-20190321035513-0fed4efef755/go.mod h1:voKvFVpXBJxdIPeqjoJuLK+UVcRlo/JLjeToGxPYu68=\ngithub.com/cihub/seelog v0.0.0-20170130134532-f561c5e57575 h1:kHaBemcxl8o/pQ5VM1c8PVE1PubbNx3mjUr09OqWGCs=\ngithub.com/cihub/seelog v0.0.0-20170130134532-f561c5e57575/go.mod h1:9d6lWj8KzO/fd/NrVaLscBKmPigpZpn5YawRPw+e3Yo=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cockroachdb/apd v1.1.0 h1:3LFP3629v+1aKXU5Q37mxmRxX/pIu1nijXydLShEq5I=\ngithub.com/cockroachdb/apd v1.1.0/go.mod h1:8Sl8LxpKi29FqWXR16WEFZRNSz3SoPzUzeMeY4+DwBQ=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/denisenkom/go-mssqldb v0.0.0-20181014144952-4e0d7dc8888f h1:WH0w/R4Yoey+04HhFxqZ6VX6I0d7RMyw5aXQ9UTvQPs=\ngithub.com/denisenkom/go-mssqldb v0.0.0-20181014144952-4e0d7dc8888f/go.mod h1:xN/JuLBIz4bjkxNmByTiV1IbhfnYb6oo99phBn4Eqhc=\ngithub.com/dgrijalva/jwt-go v3.2.0+incompatible h1:7qlOGliEKZXTDg6OTjfoBKDXWrumCAMpl/TFQ4/5kLM=\ngithub.com/dgrijalva/jwt-go v3.2.0+incompatible/go.mod h1:E3ru+11k8xSBh+hMPgOLZmtrrCbhqsmaPHjLKYnJCaQ=\ngithub.com/go-gomail/gomail v0.0.0-20160411212932-81ebce5c23df h1:Bao6dhmbTA1KFVxmJ6nBoMuOJit2yjEgLJpIMYpop0E=\ngithub.com/go-gomail/gomail v0.0.0-20160411212932-81ebce5c23df/go.mod h1:GJr+FCSXshIwgHBtLglIg9M2l2kQSi6QjVAngtzI08Y=\ngithub.com/go-macaron/binding v0.0.0-20170611065819-ac54ee249c27 h1:ieTTL9+RAtpcMaskwWNN19Vdrsl4X+k2CWsQijWNsAU=\ngithub.com/go-macaron/binding v0.0.0-20170611065819-ac54ee249c27/go.mod h1:u+H6rwW+HQwUL+w5uaEJSpIlVZDye1o9MB4Su0JfRfM=\ngithub.com/go-macaron/gzip v0.0.0-20160222043647-cad1c6580a07 h1:YSIA98PevNf1NtCa/J6cz7gjzpz99WVAOa9Eg0klKps=\ngithub.com/go-macaron/gzip v0.0.0-20160222043647-cad1c6580a07/go.mod h1://cJFfDp/70L0oTNAMB+M8Jd0rpuIx/55iARuJ6StwE=\ngithub.com/go-macaron/inject v0.0.0-20160627170012-d8a0b8677191 h1:NjHlg70DuOkcAMqgt0+XA+NHwtu66MkTVVgR4fFWbcI=\ngithub.com/go-macaron/inject v0.0.0-20160627170012-d8a0b8677191/go.mod h1:VFI2o2q9kYsC4o7VP1HrEVosiZZTd+MVT3YZx4gqvJw=\ngithub.com/go-macaron/toolbox v0.0.0-20180818072302-a77f45a7ce90 h1:3wYKrRg9IjUMfaf3H0Hh7M5Li9ge79Y7aw2yujHa2jQ=\ngithub.com/go-macaron/toolbox v0.0.0-20180818072302-a77f45a7ce90/go.mod h1:Ut/NmkIMGVYlEdJBzEZgWVWG5ZpYS9BLmUgXfAgi+qM=\ngithub.com/go-sql-driver/mysql v1.4.0/go.mod h1:zAC/RDZ24gD3HViQzih4MyKcchzm+sOG5ZlKdlhCg5w=\ngithub.com/go-sql-driver/mysql v1.4.1 h1:g24URVg0OFbNUTx9qqY1IRZ9D9z3iPyi5zKhQZpNwpA=\ngithub.com/go-sql-driver/mysql v1.4.1/go.mod h1:zAC/RDZ24gD3HViQzih4MyKcchzm+sOG5ZlKdlhCg5w=\ngithub.com/go-xorm/builder v0.3.2/go.mod h1:v8mE3MFBgtL+RGFNfUnAMUqqfk/Y4W5KuwCFQIEpQLk=\ngithub.com/go-xorm/builder v0.3.4 h1:FxkeGB4Cggdw3tPwutLCpfjng2jugfkg6LDMrd/KsoY=\ngithub.com/go-xorm/builder v0.3.4/go.mod h1:KxkQkNN1DpPKTedxXyTQcmH+rXfvk4LZ9SOOBoZBAxw=\ngithub.com/go-xorm/core v0.6.0/go.mod h1:d8FJ9Br8OGyQl12MCclmYBuBqqxsyeedpXciV5Myih8=\ngithub.com/go-xorm/core v0.6.2 h1:EJLcSxf336POJr670wKB55Mah9f93xzvGYzNRgnT8/Y=\ngithub.com/go-xorm/core v0.6.2/go.mod h1:bwPIfLdm/FzWgVUH8WPVlr+uJhscvNGFcaZKXsI3n2c=\ngithub.com/go-xorm/sqlfiddle v0.0.0-20180821085327-62ce714f951a h1:9wScpmSP5A3Bk8V3XHWUcJmYTh+ZnlHVyc+A4oZYS3Y=\ngithub.com/go-xorm/sqlfiddle v0.0.0-20180821085327-62ce714f951a/go.mod h1:56xuuqnHyryaerycW3BfssRdxQstACi0Epw/yC5E2xM=\ngithub.com/go-xorm/xorm v0.7.1 h1:Kj7mfuqctPdX60zuxP6EoEut0f3E6K66H6hcoxiHUMc=\ngithub.com/go-xorm/xorm v0.7.1/go.mod h1:EHS1htMQFptzMaIHKyzqpHGw6C9Rtug75nsq6DA9unI=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b h1:VKtxabqXZkF25pY9ekfRL6a582T4P37/31XEstQ5p58=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1 h1:YF8+flBXS5eO826T4nzqPrxfhQThhXl0YzfuUPu4SBg=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/google/go-cmp v0.2.0 h1:+dTQ8DZQJz0Mb/HjFlkptS1FeQ4cWSnN941F8aEG4SQ=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/gopherjs/gopherjs v0.0.0-20181103185306-d547d1d9531e h1:JKmoR8x90Iww1ks85zJ1lfDGgIiMDuIptTOhJq+zKyg=\ngithub.com/gopherjs/gopherjs v0.0.0-20181103185306-d547d1d9531e/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\ngithub.com/jackc/fake v0.0.0-20150926172116-812a484cc733 h1:vr3AYkKovP8uR8AvSGGUK1IDqRa5lAAvEkZG1LKaCRc=\ngithub.com/jackc/fake v0.0.0-20150926172116-812a484cc733/go.mod h1:WrMFNQdiFJ80sQsxDoMokWK1W5TQtxBFNpzWTD84ibQ=\ngithub.com/jackc/pgx v3.2.0+incompatible h1:0Vihzu20St42/UDsvZGdNE6jak7oi/UOeMzwMPHkgFY=\ngithub.com/jackc/pgx v3.2.0+incompatible/go.mod h1:0ZGrqGqkRlliWnWB4zKnWtjbSWbGkVEFm4TeybAXq+I=\ngithub.com/jakecoffman/cron v0.0.0-20190106200828-7e2009c226a5 h1:kCvm3G3u+eTRbjfLPyfsfznJtraYEfZer/UvQ6CaQhI=\ngithub.com/jakecoffman/cron v0.0.0-20190106200828-7e2009c226a5/go.mod h1:6DM2KNNK69jRu0lAHmYK9LYxmqpNjYHOaNp/ZxttD4U=\ngithub.com/jtolds/gls v4.2.1+incompatible h1:fSuqC+Gmlu6l/ZYAoZzx2pyucC8Xza35fpRVWLVmUEE=\ngithub.com/jtolds/gls v4.2.1+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=\ngithub.com/klauspost/compress v1.5.0 h1:iDac0ZKbmSA4PRrRuXXjZL8C7UoJan8oBYxXkMzEQrI=\ngithub.com/klauspost/compress v1.5.0/go.mod h1:RyIbtBH6LamlWaDj8nUwkbUhJ87Yi3uG0guNDohfE1A=\ngithub.com/klauspost/cpuid v1.2.1 h1:vJi+O/nMdFt0vqm8NZBI6wzALWdA2X+egi0ogNyrC/w=\ngithub.com/klauspost/cpuid v1.2.1/go.mod h1:Pj4uuM528wm8OyEC2QMXAi2YiTZ96dNQPGgoMS4s3ek=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1 h1:mweAR1A6xJ3oS2pRaGiHgQ4OO8tzTaLawm8vnODuwDk=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/pretty v0.1.0 h1:L/CwN0zerZDmRFUapSPitk6f+Q3+0za1rQkzVuMiMFI=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/lib/pq v1.0.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/lib/pq v1.1.1 h1:sJZmqHoEaY7f+NPP8pgLB/WxulyR3fewgCM2qaSlBb4=\ngithub.com/lib/pq v1.1.1/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/mattn/go-sqlite3 v1.9.0/go.mod h1:FPy6KqzDD04eiIsT53CuJW3U88zkxoIYsOqkbpncsNc=\ngithub.com/mattn/go-sqlite3 v1.10.0 h1:jbhqpg7tQe4SupckyijYiy0mJJ/pRyHvXf7JdWK860o=\ngithub.com/mattn/go-sqlite3 v1.10.0/go.mod h1:FPy6KqzDD04eiIsT53CuJW3U88zkxoIYsOqkbpncsNc=\ngithub.com/ouqiang/goutil v1.1.1 h1:r5EKn1jw6vBnj0sLrk3XWeQGxG5ftjGQ3ftuiiO2DYE=\ngithub.com/ouqiang/goutil v1.1.1/go.mod h1:QrB1Ky4uGqcixxOx55MXweI3IA6nDZ0NtLMXbMfkur4=\ngithub.com/pkg/errors v0.8.0 h1:WdK/asTD0HN+q6hsWO3/vpuAkAr+tw6aNJNDFFf0+qw=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/rakyll/statik v0.1.6 h1:uICcfUXpgqtw2VopbIncslhAmE5hwc4g20TEyEENBNs=\ngithub.com/rakyll/statik v0.1.6/go.mod h1:OEi9wJV/fMUAGx1eNjq75DKDsJVuEv1U0oYdX6GX8Zs=\ngithub.com/satori/go.uuid v1.2.0 h1:0uYX9dsZ2yD7q2RtLRtPSdGDWzjeM3TbMJP9utgA0ww=\ngithub.com/satori/go.uuid v1.2.0/go.mod h1:dA0hQrYB0VpLJoorglMZABFdXlWrHn1NEOzdhQKdks0=\ngithub.com/shopspring/decimal v0.0.0-20180709203117-cd690d0c9e24 h1:pntxY8Ary0t43dCZ5dqY4YTJCObLY1kIXl0uzMv+7DE=\ngithub.com/shopspring/decimal v0.0.0-20180709203117-cd690d0c9e24/go.mod h1:M+9NzErvs504Cn4c5DxATwIqPbtswREoFCre64PpcG4=\ngithub.com/sirupsen/logrus v1.4.2 h1:SPIRibHv4MatM3XXNO2BJeFLZwZ2LvZgfQ5+UNI2im4=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/smartystreets/assertions v0.0.0-20190116191733-b6c0e53d7304 h1:Jpy1PXuP99tXNrhbq2BaPz9B+jNAvH1JPQQpG/9GCXY=\ngithub.com/smartystreets/assertions v0.0.0-20190116191733-b6c0e53d7304/go.mod h1:OnSkiWE9lh6wB0YB77sQom3nweQdgAjqCqsofrRNTgc=\ngithub.com/smartystreets/goconvey v0.0.0-20181108003508-044398e4856c h1:Ho+uVpkel/udgjbwB5Lktg9BtvJSh2DT0Hi6LPSyI2w=\ngithub.com/smartystreets/goconvey v0.0.0-20181108003508-044398e4856c/go.mod h1:XDJAKZRPZ1CvBcN2aX5YOUTYGHki24fSF0Iv48Ibg0s=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0 h1:TivCn/peBQ7UY8ooIcPgZFpTNSz0Q2U6UrFlUfqbe0Q=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/urfave/cli v1.20.0 h1:fDqGv3UG/4jbVl/QkFwEdddtEDjh/5Ov6X+0B/3bPaw=\ngithub.com/urfave/cli v1.20.0/go.mod h1:70zkFmudgCuE/ngEzBv17Jvp/497gISqfk5gWijbERA=\ngithub.com/ziutek/mymysql v1.5.4 h1:GB0qdRGsTwQSBVYuVShFBKaXSnSnYYC2d9knnE1LHFs=\ngithub.com/ziutek/mymysql v1.5.4/go.mod h1:LMSpPZ6DbqWFxNCHW77HeMg9I646SAhApZ/wKdgO/C0=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190530122614-20be4c3c3ed5 h1:8dUaAV7K4uHsF56JQWkprecIQKdPHtR9jCHF5nB8uzc=\ngolang.org/x/crypto v0.0.0-20190530122614-20be4c3c3ed5/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190522155817-f3200d17e092 h1:4QSRKanuywn15aTZvI/mIDEgPQpswuFndXpOj3rKEco=\ngolang.org/x/net v0.0.0-20190522155817-f3200d17e092/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d h1:+R4KGOnez64A81RvjARKc4UT5/tI9ujCIVX+P5KiHuI=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894 h1:Cz4ceDQGXuKRnVBDTS23GTn/pU5OE2C0WrNTOYK1Uuc=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2 h1:tW2bmiBqwgJj/UpqtC8EpXEZVYOwU0yG4iWbprSVAcs=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0 h1:/wp5JvzpHIxhs/dumFmF7BXTf3Z+dd4uXta4kVyO508=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190530194941-fb225487d101 h1:wuGevabY6r+ivPNagjUXGGxF+GqgMd+dBhjsxW4q9u4=\ngoogle.golang.org/genproto v0.0.0-20190530194941-fb225487d101/go.mod h1:z3L6/3dTEVtUr6QSP8miRzeRqwQOioJ9I66odjN4I7s=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.21.0 h1:G+97AoqBnmZIT91cLG/EkCoK9NSelj64P8bOHHNmGn0=\ngoogle.golang.org/grpc v1.21.0/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=\ngopkg.in/alexcesaro/quotedprintable.v3 v3.0.0-20150716171945-2caba252f4dc h1:2gGKlE2+asNV9m7xrywl36YYNnBG5ZQ0r/BOOxqPpmk=\ngopkg.in/alexcesaro/quotedprintable.v3 v3.0.0-20150716171945-2caba252f4dc/go.mod h1:m7x9LTH6d71AHyAX77c9yqWCCa3UKHcVEj9y7hAtKDk=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127 h1:qIbj1fsPNlZgppZ+VLlY7N33q108Sa+fhmuc+sWQYwY=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/gomail.v2 v2.0.0-20160411212932-81ebce5c23df h1:n7WqCuqOuCbNr617RXOY0AWRXxgwEyPp2z+p0+hgMuE=\ngopkg.in/gomail.v2 v2.0.0-20160411212932-81ebce5c23df/go.mod h1:LRQQ+SO6ZHR7tOkpBDuZnXENFzX8qRjMDMyPD6BRkCw=\ngopkg.in/ini.v1 v1.42.0 h1:7N3gPTt50s8GuLortA00n8AqRTk75qOP98+mTPpgzRk=\ngopkg.in/ini.v1 v1.42.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/macaron.v1 v1.3.2 h1:AvWIaPmwBUA87/OWzePkoxeaw6YJWDfBt1pDFPBnLf8=\ngopkg.in/macaron.v1 v1.3.2/go.mod h1:PrsiawTWAGZs6wFbT5hlr7SQ2Ns9h7cUVtcUu4lQOVo=\ngopkg.in/stretchr/testify.v1 v1.2.2/go.mod h1:QI5V/q6UbPmuhtm10CaFZxED9NreB8PnFYN9JcR6TxU=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\n"
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "k8s-deploy",
          "type": "tree",
          "content": null
        },
        {
          "name": "makefile",
          "type": "blob",
          "size": 1.0517578125,
          "content": "GO111MODULE=on\n\n.PHONY: build\nbuild: gocron node\n\n.PHONY: build-race\nbuild-race: enable-race build\n\n.PHONY: run\nrun: build kill\n\t./bin/gocron-node &\n\t./bin/gocron web -e dev\n\n.PHONY: run-race\nrun-race: enable-race run\n\n.PHONY: kill\nkill:\n\t-killall gocron-node\n\n.PHONY: gocron\ngocron:\n\tgo build $(RACE) -o bin/gocron ./cmd/gocron\n\n.PHONY: node\nnode:\n\tgo build $(RACE) -o bin/gocron-node ./cmd/node\n\n.PHONY: test\ntest:\n\tgo test $(RACE) ./...\n\n.PHONY: test-race\ntest-race: enable-race test\n\n.PHONY: enable-race\nenable-race:\n\t$(eval RACE = -race)\n\n.PHONY: package\npackage: build-vue statik\n\tbash ./package.sh\n\n.PHONY: package-all\npackage-all: build-vue statik\n\tbash ./package.sh -p 'linux darwin windows'\n\n.PHONY: build-vue\nbuild-vue:\n\tcd web/vue && yarn run build\n\tcp -r web/vue/dist/* web/public/\n\n.PHONY: install-vue\ninstall-vue:\n\tcd web/vue && yarn install\n\n.PHONY: run-vue\nrun-vue:\n\tcd web/vue && yarn run dev\n\n.PHONY: statik\nstatik:\n\tgo get github.com/rakyll/statik\n\tgo generate ./...\n\n.PHONY: lint\n\tgolangci-lint run\n\n.PHONY: clean\nclean:\n\trm bin/gocron\n\trm bin/gocron-node\n"
        },
        {
          "name": "package.sh",
          "type": "blob",
          "size": 4.3076171875,
          "content": "#!/usr/bin/env bash\n \n# 生成压缩包 xx.tar.gz或xx.zip\n# 使用 ./package.sh -a amd664 -p linux -v v2.0.0\n \n# 任何命令返回非0值退出\nset -o errexit\n# 使用未定义的变量退出\nset -o nounset\n# 管道中任一命令执行失败退出\nset -o pipefail\n\neval $(go env)\n\n# 二进制文件名\nBINARY_NAME=''\n# main函数所在文件\nMAIN_FILE=\"\"\n \n# 提取git最新tag作为应用版本\nVERSION=''\n# 最新git commit id\nGIT_COMMIT_ID=''\n \n# 外部输入的系统\nINPUT_OS=()\n# 外部输入的架构\nINPUT_ARCH=()\n# 未指定OS，默认值\nDEFAULT_OS=${GOHOSTOS}\n# 未指定ARCH,默认值\nDEFAULT_ARCH=${GOHOSTARCH}\n# 支持的系统\nSUPPORT_OS=(linux darwin windows)\n# 支持的架构\nSUPPORT_ARCH=(386 amd64)\n \n# 编译参数\nLDFLAGS=''\n# 需要打包的文件\nINCLUDE_FILE=()\n# 打包文件生成目录\nPACKAGE_DIR=''\n# 编译文件生成目录\nBUILD_DIR=''\n \n# 获取git 最新tag name\ngit_latest_tag() {\n    local COMMIT_ID=\"\"\n    local TAG_NAME=\"\"\n    COMMIT_ID=`git rev-list --tags --max-count=1`\n    TAG_NAME=`git describe --tags \"${COMMIT_ID}\"`\n \n    echo ${TAG_NAME}\n}\n \n# 获取git 最新commit id\ngit_latest_commit() {\n    echo \"$(git rev-parse --short HEAD)\"\n}\n \n# 打印信息\nprint_message() {\n    echo \"$1\"\n}\n \n# 打印信息后推出\nprint_message_and_exit() {\n    if [[ -n $1 ]]; then\n        print_message \"$1\"\n    fi\n    exit 1\n}\n \n# 设置系统、CPU架构\nset_os_arch() {\n    if [[ ${#INPUT_OS[@]} = 0 ]];then\n        INPUT_OS=(\"${DEFAULT_OS}\")\n    fi\n \n    if [[ ${#INPUT_ARCH[@]} = 0 ]];then\n        INPUT_ARCH=(\"${DEFAULT_ARCH}\")\n    fi\n \n    for OS in \"${INPUT_OS[@]}\"; do\n        if [[  ! \"${SUPPORT_OS[*]}\" =~ ${OS} ]]; then\n            print_message_and_exit \"不支持的系统${OS}\"\n        fi\n    done\n \n    for ARCH in \"${INPUT_ARCH[@]}\";do\n        if [[ ! \"${SUPPORT_ARCH[*]}\" =~ ${ARCH} ]]; then\n            print_message_and_exit \"不支持的CPU架构${ARCH}\"\n        fi\n    done\n}\n \n# 初始化\ninit() {\n    set_os_arch\n \n    if [[ -z \"${VERSION}\" ]];then\n        VERSION=`git_latest_tag`\n    fi\n    GIT_COMMIT_ID=`git_latest_commit`\n    LDFLAGS=\"-w -X 'main.AppVersion=${VERSION}' -X 'main.BuildDate=`date '+%Y-%m-%d %H:%M:%S'`' -X 'main.GitCommit=${GIT_COMMIT_ID}'\"\n \n    PACKAGE_DIR=${BINARY_NAME}-package\n    BUILD_DIR=${BINARY_NAME}-build\n \n    if [[ -d ${BUILD_DIR} ]];then\n        rm -rf ${BUILD_DIR}\n    fi\n    if [[ -d ${PACKAGE_DIR} ]];then\n        rm -rf ${PACKAGE_DIR}\n    fi\n \n    mkdir -p ${BUILD_DIR}\n    mkdir -p ${PACKAGE_DIR}\n}\n \n# 编译\nbuild() {\n    local FILENAME=''\n    for OS in \"${INPUT_OS[@]}\";do\n        for ARCH in \"${INPUT_ARCH[@]}\";do\n            if [[ \"${OS}\" = \"windows\"  ]];then\n                FILENAME=${BINARY_NAME}.exe\n            else\n                FILENAME=${BINARY_NAME}\n            fi\n            env CGO_ENABLED=0 GOOS=${OS} GOARCH=${ARCH} go build -ldflags \"${LDFLAGS}\" -o ${BUILD_DIR}/${BINARY_NAME}-${OS}-${ARCH}/${FILENAME} ${MAIN_FILE}\n        done\n    done\n}\n \n# 打包\npackage_binary() {\n    cd ${BUILD_DIR}\n \n    for OS in \"${INPUT_OS[@]}\";do\n        for ARCH in \"${INPUT_ARCH[@]}\";do\n        package_file ${BINARY_NAME}-${OS}-${ARCH}\n        if [[ \"${OS}\" = \"windows\" ]];then\n            zip -rq ../${PACKAGE_DIR}/${BINARY_NAME}-${VERSION}-${OS}-${ARCH}.zip ${BINARY_NAME}-${OS}-${ARCH}\n        else\n            tar czf ../${PACKAGE_DIR}/${BINARY_NAME}-${VERSION}-${OS}-${ARCH}.tar.gz ${BINARY_NAME}-${OS}-${ARCH}\n        fi\n        done\n    done\n \n    cd ${OLDPWD}\n}\n \n# 打包文件\npackage_file() {\n    if [[ \"${#INCLUDE_FILE[@]}\" = \"0\" ]];then\n        return\n    fi\n    for item in \"${INCLUDE_FILE[@]}\"; do\n            cp -r ../${item} $1\n    done\n}\n \n# 清理\nclean() {\n    if [[ -d ${BUILD_DIR} ]];then\n        rm -rf ${BUILD_DIR}\n    fi\n}\n \n# 运行\nrun() {\n    init\n    build\n    package_binary\n    clean\n}\n\npackage_gocron() {\n    BINARY_NAME='gocron'\n    MAIN_FILE=\"./cmd/gocron/gocron.go\"\n    INCLUDE_FILE=()\n\n\n    run\n}\n\npackage_gocron_node() {\n    BINARY_NAME='gocron-node'\n    MAIN_FILE=\"./cmd/node/node.go\"\n    INCLUDE_FILE=()\n\n    run\n}\n \n# p 平台 linux darwin windows\n# a 架构 386 amd64\n# v 版本号  默认取git最新tag\nwhile getopts \"p:a:v:\" OPT;\ndo\n    case ${OPT} in\n    p) IPS=',' read -r -a INPUT_OS <<< \"${OPTARG}\"\n    ;;\n    a) IPS=',' read -r -a INPUT_ARCH <<< \"${OPTARG}\"\n    ;;\n    v) VERSION=$OPTARG\n    ;;\n    *)\n    ;;\n    esac\ndone\n \npackage_gocron\npackage_gocron_node\n\n"
        },
        {
          "name": "web",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}