{
  "metadata": {
    "timestamp": 1736567782370,
    "page": 366,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ThreeDotsLabs/wild-workouts-go-ddd-example",
      "stars": 5431,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".e2e.ci.env",
          "type": "blob",
          "size": 0.171875,
          "content": "TRAINER_HTTP_ADDR=trainer-http:3000\nTRAINER_GRPC_ADDR=trainer-grpc:3000\nTRAININGS_HTTP_ADDR=trainings-http:3000\nUSERS_GRPC_ADDR=users-grpc:3000\nUSERS_HTTP_ADDR=users-http:3000\n"
        },
        {
          "name": ".e2e.env",
          "type": "blob",
          "size": 0.1591796875,
          "content": "TRAINER_HTTP_ADDR=localhost:3000\nTRAINER_GRPC_ADDR=localhost:3010\nTRAININGS_HTTP_ADDR=localhost:3001\nUSERS_GRPC_ADDR=localhost:3020\nUSERS_HTTP_ADDR=localhost:3002\n"
        },
        {
          "name": ".env",
          "type": "blob",
          "size": 0.533203125,
          "content": "GCP_PROJECT=threedotslabs-cloudnative\n\nPORT=3000\n\nFIRESTORE_PROJECT_ID=threedotslabs-cloudnative\nFIRESTORE_EMULATOR_HOST=firestore:8787\n# env used by karhoo/firestore-emulator container\nGCP_PROJECT_ID=threedotslabs-cloudnative\n\nTRAINER_GRPC_ADDR=trainer-grpc:3000\nUSERS_GRPC_ADDR=users-grpc:3000\nGRPC_NO_TLS=1\n\nCORS_ALLOWED_ORIGINS=http://localhost:8080\n\n#SERVICE_ACCOUNT_FILE=/service-account-file.json\nMOCK_AUTH=true\nLOCAL_ENV=true\n\nMYSQL_ADDR=localhost\nMYSQL_DATABASE=db\nMYSQL_USER=user\nMYSQL_PASSWORD=password\nMYSQL_RANDOM_ROOT_PASSWORD=true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0634765625,
          "content": "# this repo is about Go, not JavaScript\nweb/** linguist-vendored\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6298828125,
          "content": "# Created by .ignore support plugin (hsz.mobi)\n### Go template\n# Binaries for programs and plugins\n*.exe\n*.exe~\n*.dll\n*.so\n*.dylib\n\n# Test binary, built with `go test -c`\n*.test\n\n# Output of the go coverage tool, specifically when used with LiteIDE\n*.out\n\n# Dependency directories (remove the comment below to include it)\nvendor/\n\n# Tools\n.idea\n\n.terraform\n*.tfstate\n*.tfstate.*backup\nterraform/.env\nterraform/cloud-builders-community\n\n/web/src/repositories/clients/*\n!/web/src/repositories/clients/trainer/src/\n!/web/src/repositories/clients/trainings/src/\n!/web/src/repositories/clients/users/src/\n\n/service-account-file.json\n\n.go/\n.go-cache/\n"
        },
        {
          "name": ".test.ci.env",
          "type": "blob",
          "size": 0.23046875,
          "content": "FIRESTORE_EMULATOR_HOST=firestore-component-tests:8787\nMYSQL_ADDR=mysql\n\nTRAINER_HTTP_ADDR=localhost:5000\nTRAINER_GRPC_ADDR=localhost:5010\nTRAININGS_HTTP_ADDR=localhost:5001\nUSERS_HTTP_ADDR=localhost:5002\nUSERS_GRPC_ADDR=localhost:5020\n"
        },
        {
          "name": ".test.env",
          "type": "blob",
          "size": 0.21875,
          "content": "FIRESTORE_EMULATOR_HOST=localhost:8788\nMYSQL_ADDR=localhost\n\nTRAINER_HTTP_ADDR=localhost:6000\nTRAINER_GRPC_ADDR=localhost:6010\nTRAININGS_HTTP_ADDR=localhost:6001\nUSERS_HTTP_ADDR=localhost:6002\nUSERS_GRPC_ADDR=localhost:6020\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.046875,
          "content": "MIT License\n\nCopyright (c) 2021 Three Dots Labs\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.9775390625,
          "content": "include .env\nexport\n\n.PHONY: openapi\nopenapi: openapi_http openapi_js\n\n.PHONY: openapi_http\nopenapi_http:\n\t@./scripts/openapi-http.sh trainer internal/trainer/ports ports\n\t@./scripts/openapi-http.sh trainings internal/trainings/ports ports\n\t@./scripts/openapi-http.sh users internal/users main\n\n.PHONY: openapi_js\nopenapi_js:\n\t@./scripts/openapi-js.sh trainer\n\t@./scripts/openapi-js.sh trainings\n\t@./scripts/openapi-js.sh users\n\n.PHONY: proto\nproto:\n\t@./scripts/proto.sh trainer\n\t@./scripts/proto.sh users\n\n.PHONY: lint\nlint:\n\t@go-cleanarch\n\t@./scripts/lint.sh common\n\t@./scripts/lint.sh trainer\n\t@./scripts/lint.sh trainings\n\t@./scripts/lint.sh users\n\n.PHONY: fmt\nfmt:\n\tgoimports -l -w internal/\n\n.PHONY: mycli\nmycli:\n\tmycli -u ${MYSQL_USER} -p ${MYSQL_PASSWORD} ${MYSQL_DATABASE}\n\n.PHONY: c4\nc4:\n\tcd tools/c4 && go mod tidy && sh generate.sh\n\ntest:\n\t@./scripts/test.sh common .e2e.env\n\t@./scripts/test.sh trainer .test.env\n\t@./scripts/test.sh trainings .test.env\n\t@./scripts/test.sh users .test.env\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.9501953125,
          "content": "# Wild Workouts\n\nWild Workouts is an **example Go DDD** project that we created to show how to build Go applications that areÂ **easy to develop, maintain, and fun to work with, especially in the long term!**\n\n*The idea for this series, is to apply DDD by refactoring. This process is in progress! Please check articles, to know the current progress.*\n\nNo application is perfect from the beginning. With over a dozen coming articles, we will uncover what issues you can find in the current implementation. We will also show how to fix these issues and achieve clean implementation by refactoring.\n\n### Articles\n\n#### \"Too modern\" application\n\n1. [**Too modern Go application? Building a serverless application with Google Cloud Run and Firebase**](https://threedots.tech/post/serverless-cloud-run-firebase-modern-go-application/?utm_source=github.com) _[[v1.0]](https://github.com/ThreeDotsLabs/wild-workouts-go-ddd-example/releases/tag/v1.0)_\n2. [**A complete Terraform setup of a serverless application on Google Cloud Run and Firebase**](https://threedots.tech/post/complete-setup-of-serverless-application/?utm_source=github.com) _[[v1.1]](https://github.com/ThreeDotsLabs/wild-workouts-go-ddd-example/releases/tag/v1.1)_\n3. [**Robust gRPC communication on Google Cloud Run (but not only!)**](https://threedots.tech/post/robust-grpc-google-cloud-run/?utm_source=github.com) _[[v1.2]](https://github.com/ThreeDotsLabs/wild-workouts-go-ddd-example/releases/tag/v1.2)_\n4. [**You should not build your own authentication. Let Firebase do it for you.**](https://threedots.tech/post/firebase-cloud-run-authentication/?utm_source=github.com) _[[v1.3]](https://github.com/ThreeDotsLabs/wild-workouts-go-ddd-example/releases/tag/v1.3)_\n\n#### Refactoring\n\n5. [**Business Applications in Go: Things to know about DRY**](https://threedots.tech/post/things-to-know-about-dry/?utm_source=github.com) _[[v2.0]](https://github.com/ThreeDotsLabs/wild-workouts-go-ddd-example/releases/tag/v2.0)_\n6. [**When microservices in Go are not enough: introduction to DDD Lite**](https://threedots.tech/post/ddd-lite-in-go-introduction/?utm_source=github.com) _[[v2.1]](https://github.com/ThreeDotsLabs/wild-workouts-go-ddd-example/releases/tag/v2.1)_\n7. [**Repository pattern: painless way to simplify your Go service logic**](https://threedots.tech/post/repository-pattern-in-go/?utm_source=github.com) _[[v2.2]](https://github.com/ThreeDotsLabs/wild-workouts-go-ddd-example/releases/tag/v2.2)_\n8. [**4 practical principles of high-quality database integration tests in Go**](https://threedots.tech/post/database-integration-testing/?utm_source=github.com) _[[v2.3]](https://github.com/ThreeDotsLabs/wild-workouts-go-ddd-example/releases/tag/v2.3)_\n9. [**Introducing Clean Architecture by refactoring a Go project**](https://threedots.tech/post/introducing-clean-architecture/?utm_source=github.com) _[[v2.4]](https://github.com/ThreeDotsLabs/wild-workouts-go-ddd-example/releases/tag/v2.4)_\n10. [**Introducing basic CQRS by refactoring**](https://threedots.tech/post/basic-cqrs-in-go/?utm_source=github.com) _[[v2.5]](https://github.com/ThreeDotsLabs/wild-workouts-go-ddd-example/releases/tag/v2.5)_\n11. [**Combining DDD, CQRS, and Clean Architecture**](https://threedots.tech/post/ddd-cqrs-clean-architecture-combined/?utm_source=github.com)\n12. [**Microservices test architecture. Can you sleep well without end-to-end tests?**](https://threedots.tech/post/microservices-test-architecture/?utm_source=github.com) _[[v2.6]](https://github.com/ThreeDotsLabs/wild-workouts-go-ddd-example/releases/tag/v2.6)_\n13. [**Repository secure by design: how to sleep better without fear of security vulnerabilities**](https://threedots.tech/post/repository-secure-by-design/?utm_source=github.com)\n14. [**Running integration tests on Google Cloud Build using docker-compose**](https://threedots.tech/post/running-integration-tests-on-google-cloud-build/?utm_source=github.com) _[[v2.7]](https://github.com/ThreeDotsLabs/wild-workouts-go-ddd-example/releases/tag/v2.7)_\n15. *More articles are on the way!*\n\n### Community\n\nWe're building a Discord community focused on modern business applications. It's the place to discuss hard topics, request a review, or ask if something's not clear. [Come join us!](https://discord.gg/kTVsGjPYDn)\n\n### Directories\n\n- [api](api/) OpenAPI and gRPC definitions\n- [docker](docker/) Dockerfiles\n- [internal](internal/) application code\n- [scripts](scripts/) deployment and development scripts\n- [terraform](terraform/) - infrastructure definition\n- [web](web/) - frontend JavaScript code\n\n### Live Demo\n\nThe example application is available at [https://threedotslabs-wildworkouts.web.app/](https://threedotslabs-wildworkouts.web.app/).\n\n### Running locally\n\n```go\n> docker-compose up\n\n# ...\n\nweb_1             |  INFO  Starting development server...\nweb_1             |  DONE  Compiled successfully in 6315ms11:18:26 AM\nweb_1             |\nweb_1             |\nweb_1             |   App running at:\nweb_1             |   - Local:   http://localhost:8080/\nweb_1             |\nweb_1             |   It seems you are running Vue CLI inside a container.\nweb_1             |   Access the dev server via http://localhost:<your container's external mapped port>/\nweb_1             |\nweb_1             |   Note that the development build is not optimized.\nweb_1             |   To create a production build, run yarn build.\n```\n\n### Google Cloud Deployment\n\n```go\n> cd terraform/\n> make\n\nFill all required parameters:\n\tproject [current: wild-workouts project]:       # <----- put your Wild Workouts Google Cloud project name here (it will be created) \n\tuser [current: email@gmail.com]:                # <----- put your Google (Gmail, G-suite etc.) e-mail here\n\tbilling_account [current: My billing account]:  # <----- your billing account name, can be found here https://console.cloud.google.com/billing\n\tregion [current: europe-west1]: \n\tfirebase_location [current: europe-west]: \n\n# it may take a couple of minutes...\n\nThe setup is almost done!\n\nNow you need to enable Email/Password provider in the Firebase console.\nTo do this, visit https://console.firebase.google.com/u/0/project/[your-project]/authentication/providers\n\nYou can also downgrade the subscription plan to Spark (it's set to Blaze by default).\nThe Spark plan is completely free and has all features needed for running this project.\n\nCongratulations! Your project should be available at: https://[your-project].web.app\n\nIf it's not, check if the build finished successfully: https://console.cloud.google.com/cloud-build/builds?project=[your-project]\n\nIf you need help, feel free to contact us at https://threedots.tech\n```\n\n### Screenshots\n\n![Wild Workouts login](https://threedots.tech/media/serverless-cloud-run-firebase-modern-go-app/login.png \"Logo Title Text 1\")\n![Wild Workouts trainer's schedule](https://threedots.tech/media/serverless-cloud-run-firebase-modern-go-app/schedule.png \"Logo Title Text 1\")\n![Wild Workouts schedule training](https://threedots.tech/media/serverless-cloud-run-firebase-modern-go-app/new-training.png \"Logo Title Text 1\")\n"
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "cloudbuild.yaml",
          "type": "blob",
          "size": 3.3193359375,
          "content": "steps:\n- id: common-lint\n  name: golang\n  entrypoint: ./scripts/lint.sh\n  args: ['common', '-install']\n- id: trainer-lint\n  name: golang\n  entrypoint: ./scripts/lint.sh\n  args: ['trainer', '-install']\n- id: trainings-lint\n  name: golang\n  entrypoint: ./scripts/lint.sh\n  args: ['trainings', '-install']\n- id: users-lint\n  name: golang\n  entrypoint: ./scripts/lint.sh\n  args: ['users', '-install']\n\n- id: trainer-docker\n  name: gcr.io/cloud-builders/docker\n  entrypoint: ./scripts/build-docker.sh\n  args: [\"trainer\", \"$PROJECT_ID\"]\n  waitFor: [trainer-lint]\n- id: trainings-docker\n  name: gcr.io/cloud-builders/docker\n  entrypoint: ./scripts/build-docker.sh\n  args: [\"trainings\", \"$PROJECT_ID\"]\n  waitFor: [trainings-lint]\n- id: users-docker\n  name: gcr.io/cloud-builders/docker\n  entrypoint: ./scripts/build-docker.sh\n  args: [\"users\", \"$PROJECT_ID\"]\n  waitFor: [users-lint]\n\n- id: docker-compose\n  name: 'docker/compose:1.19.0'\n  args: ['-f', 'docker-compose.yml', '-f', 'docker-compose.ci.yml', 'up', '-d']\n  env:\n    - 'PROJECT_ID=$PROJECT_ID'\n  waitFor: [trainer-docker, trainings-docker, users-docker]\n\n- id: common-tests\n  name: golang\n  entrypoint: ./scripts/test.sh\n  args: [\"common\", \".test.ci.env\"]\n  waitFor: [docker-compose]\n- id: trainer-tests\n  name: golang\n  entrypoint: ./scripts/test.sh\n  args: [\"trainer\", \".test.ci.env\"]\n  waitFor: [docker-compose]\n- id: trainings-tests\n  name: golang\n  entrypoint: ./scripts/test.sh\n  args: [\"trainings\", \".test.ci.env\"]\n  waitFor: [docker-compose]\n- id: users-tests\n  name: golang\n  entrypoint: ./scripts/test.sh\n  args: [\"users\", \".test.ci.env\"]\n  waitFor: [docker-compose]\n- id: e2e-tests\n  name: golang\n  entrypoint: ./scripts/test.sh\n  args: [\"common\", \".e2e.ci.env\"]\n  waitFor: [trainer-tests, trainings-tests, users-tests]\n\n- id: docker-compose-down\n  name: 'docker/compose:1.19.0'\n  args: ['-f', 'docker-compose.yml', '-f', 'docker-compose.ci.yml', 'down']\n  env:\n    - 'PROJECT_ID=$PROJECT_ID'\n  waitFor: [e2e-tests]\n\n- id: trainer-http-deploy\n  name: gcr.io/cloud-builders/gcloud\n  entrypoint: ./scripts/deploy.sh\n  args: [trainer, http, \"$PROJECT_ID\"]\n  waitFor: [e2e-tests]\n- id: trainer-grpc-deploy\n  name: gcr.io/cloud-builders/gcloud\n  entrypoint: ./scripts/deploy.sh\n  args: [trainer, grpc, \"$PROJECT_ID\"]\n  waitFor: [e2e-tests]\n- id: trainings-http-deploy\n  name: gcr.io/cloud-builders/gcloud\n  entrypoint: ./scripts/deploy.sh\n  args: [trainings, http, \"$PROJECT_ID\"]\n  waitFor: [e2e-tests]\n- id: users-http-deploy\n  name: gcr.io/cloud-builders/gcloud\n  entrypoint: ./scripts/deploy.sh\n  args: [users, http, \"$PROJECT_ID\"]\n  waitFor: [e2e-tests]\n- id: users-grpc-deploy\n  name: gcr.io/cloud-builders/gcloud\n  entrypoint: ./scripts/deploy.sh\n  args: [users, grpc, \"$PROJECT_ID\"]\n  waitFor: [e2e-tests]\n\n- id: web-deps\n  name: node:12.16.2\n  entrypoint: yarn\n  args: [install]\n  dir: web\n  waitFor: ['-']\n- id: openapi-js\n  name: openapitools/openapi-generator-cli:v4.3.0\n  entrypoint: \"./scripts/openapi-js.sh\"\n  waitFor: ['-']\n- id: web-build\n  name: node:12.16.2\n  entrypoint: yarn\n  args: [build]\n  dir: web\n  waitFor: [web-deps, openapi-js]\n- name: gcr.io/$PROJECT_ID/firebase\n  args: ['deploy', '--project=$PROJECT_ID']\n  dir: web\n  waitFor: [web-build]\n\noptions:\n  env:\n  - 'GO111MODULE=on'\n  machineType: 'N1_HIGHCPU_8'\n\nimages:\n- 'gcr.io/$PROJECT_ID/trainer'\n- 'gcr.io/$PROJECT_ID/trainings'\n- 'gcr.io/$PROJECT_ID/users'\n"
        },
        {
          "name": "docker-compose.ci.yml",
          "type": "blob",
          "size": 0.3623046875,
          "content": "version: \"3\"\nservices:\n  trainer-http:\n    image: \"gcr.io/${PROJECT_ID}/trainer\"\n\n  trainer-grpc:\n    image: \"gcr.io/${PROJECT_ID}/trainer\"\n\n  trainings-http:\n    image: \"gcr.io/${PROJECT_ID}/trainings\"\n\n  users-http:\n    image: \"gcr.io/${PROJECT_ID}/users\"\n\n  users-grpc:\n    image: \"gcr.io/${PROJECT_ID}/users\"\nnetworks:\n  default:\n    external:\n      name: cloudbuild\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 2.8046875,
          "content": "version: '3.8'\nname: 'wild-workouts'\nservices:\n  web:\n    build:\n      context: docker/web\n      dockerfile: Dockerfile\n    working_dir: /web\n    volumes:\n      - ./web:/web\n      - /web/node_modules/\n    ports:\n      - \"127.0.0.1:8080:8080\"\n\n  trainer-http:\n    build:\n      context: docker/app\n    volumes:\n      - ./internal:/internal\n      - ./.go/pkg:/go/pkg\n      - ./.go-cache:/go-cache\n#      - ./service-account-file.json:$SERVICE_ACCOUNT_FILE\n    working_dir: /internal/trainer\n    ports:\n      - \"127.0.0.1:3000:$PORT\"\n    env_file:\n      - .env\n    environment:\n      SERVER_TO_RUN: http\n      GOCACHE: /go-cache\n    depends_on:\n      - firestore\n\n  trainer-grpc:\n    build:\n      context: docker/app\n    volumes:\n      - ./internal:/internal\n      - ./.go/pkg:/go/pkg\n      - ./.go-cache:/go-cache\n#      - ./service-account-file.json:$SERVICE_ACCOUNT_FILE\n    working_dir: /internal/trainer\n    ports:\n      - \"127.0.0.1:3010:$PORT\"\n    env_file:\n      - .env\n    environment:\n      SERVER_TO_RUN: grpc\n      GOCACHE: /go-cache\n    depends_on:\n      - firestore\n\n  trainings-http:\n    build:\n      context: docker/app\n    volumes:\n      - ./internal:/internal\n      - ./.go/pkg:/go/pkg\n      - ./.go-cache:/go-cache\n#      - ./service-account-file.json:$SERVICE_ACCOUNT_FILE\n    working_dir: /internal/trainings\n    ports:\n      - \"127.0.0.1:3001:$PORT\"\n    env_file:\n      - .env\n    environment:\n      GOCACHE: /go-cache\n    depends_on:\n      - firestore\n\n  users-http:\n    build:\n      context: docker/app\n    volumes:\n      - ./internal:/internal\n      - ./.go/pkg:/go/pkg\n      - ./.go-cache:/go-cache\n#      - ./service-account-file.json:$SERVICE_ACCOUNT_FILE\n    working_dir: /internal/users\n    ports:\n      - \"127.0.0.1:3002:$PORT\"\n    environment:\n      SERVER_TO_RUN: http\n      GOCACHE: /go-cache\n    env_file:\n      - .env\n    depends_on:\n      - firestore\n\n  users-grpc:\n    build:\n      context: docker/app\n    volumes:\n      - ./internal:/internal\n      - ./.go/pkg:/go/pkg\n      - ./.go-cache:/go-cache\n#      - ./service-account-file.json:$SERVICE_ACCOUNT_FILE\n    working_dir: /internal/users\n    ports:\n      - \"127.0.0.1:3020:$PORT\"\n    environment:\n      SERVER_TO_RUN: grpc\n      GOCACHE: /go-cache\n    env_file:\n      - .env\n    depends_on:\n      - firestore\n\n  firestore:\n    build:\n      context: docker/firestore-emulator\n    env_file:\n      - .env\n    ports:\n      - \"127.0.0.1:8787:8787\"\n      - \"127.0.0.1:4000:4000\"\n    restart: unless-stopped\n\n  firestore-component-tests:\n    build:\n      context: docker/firestore-emulator\n    env_file:\n      - .env\n    ports:\n      - \"127.0.0.1:8788:8787\"\n    restart: unless-stopped\n\n  mysql:\n    image: mariadb:10\n    env_file:\n      - .env\n    volumes:\n      - ./sql/schema.sql:/docker-entrypoint-initdb.d/schema.sql\n    ports:\n      - \"127.0.0.1:3306:3306\"\n    restart: unless-stopped\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "sql",
          "type": "tree",
          "content": null
        },
        {
          "name": "terraform",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "web",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}