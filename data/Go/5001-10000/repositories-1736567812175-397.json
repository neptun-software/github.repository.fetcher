{
  "metadata": {
    "timestamp": 1736567812175,
    "page": 397,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "google/git-appraise",
      "stars": 5138,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0078125,
          "content": "*~\nbin/\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.36328125,
          "content": "sudo: false\nlanguage: go\nbefore_install:\n  - git config --global user.email \"user@example.com\"\n  - git fetch --unshallow\n  - git fetch origin +refs/notes/devtools/*:refs/notes/devtools/*\n  - git fetch origin +refs/heads/master:refs/heads/master\nbefore_script:\n  - if grep \"os/exec\" `find ./ -name '*.go'`; then echo \"Use the execabs package instead of exec\" && exit 1; fi\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.4130859375,
          "content": "Want to contribute? Great! First, read this page (including the small print at the end).\n\n### Before you contribute\nBefore we can use your code, you must sign the\n[Google Individual Contributor License Agreement](https://developers.google.com/open-source/cla/individual?csw=1)\n(CLA), which you can do online. The CLA is necessary mainly because you own the\ncopyright to your changes, even after your contribution becomes part of our\ncodebase.  Therefore, we need your permission to use and distribute your code.\nWe also need to be sure of various other thingsâ€”for instance that you'll tell\nus if you know that your code infringes on other people's patents. You don't\nhave to sign the CLA until after you've submitted your code for review and a\nmember has approved it, but you must do it before we can put your code into our\ncodebase. Before you start working on a larger contribution, you should get in\ntouch with us first through the issue tracker with your idea so that we can\nhelp out and possibly guide you. Coordinating up front avoids frustrations later.\n\n### Code reviews\nAll submissions, including submissions by project members, require review. You\nmay use a Github pull request to start such a review, but the review itself\nwill be conducted using this tool.\n\n### The small print\nContributions made by corporations are covered by a different agreement than\nthe one above, the Software Grant and Corporate Contributor License Agreement."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.2216796875,
          "content": "# Distributed Code Review For Git\n[![Build Status](https://travis-ci.org/google/git-appraise.svg?branch=master)](https://travis-ci.org/google/git-appraise)\n\nThis repo contains a command line tool for performing code reviews on git\nrepositories.\n\n## Overview\n\nThis tool is a *distributed* code review system for git repos.\n\nBy \"distributed\", we mean that code reviews are stored inside of the repository\nas git objects. Every developer on your team has their own copy of the review\nhistory that they can push or pull. When pulling, updates from the remote\nrepo are automatically merged by the tool.\n\nThis design removes the need for any sort of server-side setup. As a result,\nthis tool can work with any git hosting provider, and the only setup required\nis installing the client on your workstation.\n\n## Installation\n\nAssuming you have the [Go tools installed](https://golang.org/doc/install), run\nthe following command:\n\n    go install github.com/google/git-appraise/git-appraise@latest\n\nThen, either make sure that `${GOPATH}/bin` is in your PATH, or explicitly add the\n\"appraise\" git alias by running the following command.\n\n    git config --global alias.appraise '!'\"${GOPATH}/bin/git-appraise\"\n\n#### Windows:\n\n    git config --global alias.appraise \"!%GOPATH%/bin/git-appraise.exe\"\n\n## Requirements\n\nThis tool expects to run in an environment with the following attributes:\n\n1.  The git command line tool is installed, and included in the PATH.\n2.  The tool is run from within a git repo.\n3.  The git command line tool is configured with the credentials it needs to\n    push to and pull from the remote repos.\n\n## Usage\n\nRequesting a code review:\n\n    git appraise request\n\nPushing code reviews to a remote:\n\n    git appraise push [<remote>]\n\nPulling code reviews from a remote:\n\n    git appraise pull [<remote>]\n\nListing open code reviews:\n\n    git appraise list\n\nShowing the status of the current review, including comments:\n\n    git appraise show\n\nShowing the diff of a review:\n\n    git appraise show --diff [--diff-opts \"<diff-options>\"] [<review-hash>]\n\nCommenting on a review:\n\n    git appraise comment -m \"<message>\" [-f <file> [-l <line>]] [<review-hash>]\n\nAccepting the changes in a review:\n\n    git appraise accept [-m \"<message>\"] [<review-hash>]\n\nSubmitting the current review:\n\n    git appraise submit [--merge | --rebase]\n\nA more detailed getting started doc is available [here](docs/tutorial.md).\n\n## Metadata\n\nThe code review data is stored in [git-notes](https://git-scm.com/docs/git-notes),\nusing the formats described below. Each item stored is written as a single\nline of JSON, and is written with at most one such item per line. This allows\nthe git notes to be automatically merged using the \"cat\\_sort\\_uniq\" strategy.\n\nSince these notes are not in a human-friendly form, all of the refs used to\ntrack them start with the prefix \"refs/notes/devtools\". This helps make it\nclear that these are meant to be read and written by automated tools.\n\nWhen a field named \"v\" appears in one of these notes, it is used to denote\nthe version of the metadata format being used. If that field is missing, then\nit defaults to the value 0, which corresponds to this initial version of the\nformats.\n\n### Code Review Requests\n\nCode review requests are stored in the \"refs/notes/devtools/reviews\" ref, and\nannotate the first revision in a review. They must conform to the\n[request schema](schema/request.json).\n\nIf there are multiple requests for a single commit, then they are sorted by\ntimestamp and the final request is treated as the current one. This sorting\nshould be done in a stable manner, so that if there are multiple requests\nwith the same timestamp, then the last such request in the note is treated\nas the current one.\n\nThis design allows a user to update a review request by re-running the\n`git appraise request` command.\n\n### Continuous Integration Status\n\nContinuous integration build and test results are stored in the\n\"refs/notes/devtools/ci\" ref, and annotate the revision that was built and\ntested. They must conform to the [ci schema](schema/ci.json).\n\n### Robot Comments\n\nRobot comments are comments generated by static analysis tools. These are\nstored in the \"refs/notes/devtools/analyses\" ref, and annotate the revision.\nThey must conform to the [analysis schema](schema/analysis.json).\n\n### Review Comments\n\nReview comments are comments that were written by a person rather than by a\nmachine. These are stored in the \"refs/notes/devtools/discuss\" ref, and\nannotate the first revision in the review. They must conform to the\n[comment schema](schema/comment.json).\n\n## Integrations\n\n### Libraries\n\n  - [Go (use git-appraise itself)](https://github.com/google/git-appraise/blob/master/review/review.go)\n  - [Rust](https://github.com/Nemo157/git-appraise-rs)\n\n### Graphical User Interfaces\n\n  - [Git-Appraise-Web](https://github.com/google/git-appraise-web)\n\n### Plugins\n\n  - [Eclipse](https://github.com/google/git-appraise-eclipse)\n  - [Jenkins](https://github.com/jenkinsci/google-git-notes-publisher-plugin)\n\n### Mirrors to other systems\n\n  - [GitHub Pull Requests](https://github.com/google/git-pull-request-mirror)\n  - [Phabricator Revisions](https://github.com/google/git-phabricator-mirror)\n\n## Contributing\n\nPlease see [the CONTRIBUTING file](CONTRIBUTING.md) for information on contributing to Git Appraise.\n"
        },
        {
          "name": "commands",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "git-appraise",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.10546875,
          "content": "module github.com/google/git-appraise\n\ngo 1.18\n\nrequire golang.org/x/sys v0.0.0-20220406163625-3f8b81556e12\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 0.2021484375,
          "content": "golang.org/x/sys v0.0.0-20220406163625-3f8b81556e12 h1:QyVthZKMsyaQwBTJE04jdNN0Pp5Fn9Qga0mrgxyERQM=\ngolang.org/x/sys v0.0.0-20220406163625-3f8b81556e12/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\n"
        },
        {
          "name": "repository",
          "type": "tree",
          "content": null
        },
        {
          "name": "review",
          "type": "tree",
          "content": null
        },
        {
          "name": "schema",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}