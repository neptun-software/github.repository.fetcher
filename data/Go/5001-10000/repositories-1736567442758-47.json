{
  "metadata": {
    "timestamp": 1736567442758,
    "page": 47,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "distribution/distribution",
      "stars": 9142,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0048828125,
          "content": "bin/\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5009765625,
          "content": "# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n_obj\n_test\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\n*.test\n*.prof\n\n# never checkin from the bin file (for now)\nbin/*\n\n# Test key files\n*.pem\n\n# Cover profiles\n*.out\n\n# Editor/IDE specific files.\n*.sublime-project\n*.sublime-workspace\n.idea/*\n\ntests/miniodata\n\n# Docs\n**/.hugo_build.lock\ndocs/resources\ndocs/public\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 0.5029296875,
          "content": "linters:\n  enable:\n    - staticcheck\n    - unconvert\n    - gofmt\n    - goimports\n    - revive\n    - ineffassign\n    - govet\n    - unused\n    - misspell\n    - bodyclose\n    - prealloc\n    - errcheck\n    - tparallel\n\nlinters-settings:\n  revive:\n    rules:\n      # TODO(thaJeztah): temporarily disabled the \"unused-parameter\" check.\n      # It produces many warnings, and some of those may need to be looked at.\n      - name: unused-parameter\n        disabled: true\n\nissues:\n  deadline: 2m\n  exlude-dirs:\n    - vendor\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 10.4384765625,
          "content": "Aaron Lehmann <alehmann@netflix.com>\nAaron Lehmann <alehmann@netflix.com> <aaron.lehmann@docker.com>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp> <suda.akihiro@lab.ntt.co.jp>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp> <suda.kyoto@gmail.com>\nAlexander Morozov <lk4d4math@gmail.com>\nAlexander Morozov <lk4d4math@gmail.com> <lk4d4@docker.com>\nAnders Ingemann <aim@orbit.online>\nAndrew Meredith <andymeredith@gmail.com>\nAndrew Meredith <andymeredith@gmail.com> <kendru@users.noreply.github.com>\nAndrey Smirnov <andrey.smirnov@siderolabs.com>\nAndrii Soldatenko <andrii.soldatenko@gmail.com>\nAndrii Soldatenko <andrii.soldatenko@gmail.com> <andrii.soldatenko@dynatrace.com>\nAnkur Kothiwal <ankur.kothiwal@cern.com>\nAnthony Ramahay <thewolt@gmail.com>\nAntonio Murdaca <antonio.murdaca@gmail.com>\nAntonio Murdaca <antonio.murdaca@gmail.com> <amurdaca@redhat.com>\nAntonio Murdaca <antonio.murdaca@gmail.com> <me@runcom.ninja>\nAntonio Murdaca <antonio.murdaca@gmail.com> <runcom@linux.com>\nAntonio Murdaca <antonio.murdaca@gmail.com> <runcom@redhat.com>\nAntonio Murdaca <antonio.murdaca@gmail.com> <runcom@users.noreply.github.com>\nAustin Vazquez <macedonv@amazon.com>\nBenjamin Schanzel <benjamin.schanzel@bmw.de>\nBrian Bland <brian.t.bland@gmail.com>\nBrian Bland <brian.t.bland@gmail.com> <brian.bland@docker.com>\nBrian Bland <brian.t.bland@gmail.com> <r4nd0m1n4t0r@gmail.com>\nChad Faragher <wyckster@hotmail.com>\nChun-Hung Hsiao <chhsiao@google.com>\nCory Snider <csnider@mirantis.com>\nCrazyMax <github@crazymax.dev>\nCrazyMax <github@crazymax.dev> <1951866+crazy-max@users.noreply.github.com>\nCrazyMax <github@crazymax.dev> <crazy-max@users.noreply.github.com>\nCristian Staretu <cristian.staretu@gmail.com>\nCristian Staretu <cristian.staretu@gmail.com> <unclejack@users.noreply.github.com>\nCristian Staretu <cristian.staretu@gmail.com> <unclejacksons@gmail.com>\nDaniel Nephin <dnephin@gmail.com>\nDaniel Nephin <dnephin@gmail.com> <dnephin@docker.com>\nDavid Karlsson <david.karlsson@docker.com>\nDavid Karlsson <david.karlsson@docker.com> <35727626+dvdksn@users.noreply.github.com>\nDavid Wu <dwu7401@gmail.com>\nDavid Wu <dwu7401@gmail.com> <david.wu@docker.com>\nDerek McGowan <derek@mcg.dev>\nDerek McGowan <derek@mcg.dev> <derek@mcgstyle.net>\nDimitar Kostadinov <dimitar.kostadinov@sap.com>\nDoug Davis <dug@us.ibm.com>\nDoug Davis <dug@us.ibm.com> <duglin@users.noreply.github.com>\nEmmanuel Ferdman <emmanuelferdman@gmail.com>\nEng Zer Jun <engzerjun@gmail.com>\nEric Yang <windfarer@gmail.com>\nEric Yang <windfarer@gmail.com> <Windfarer@users.noreply.github.com>\nEric Yang <windfarer@gmail.com> <qizhao.yang@daocloud.io>\nErica Windisch <erica@windisch.us>\nErica Windisch <erica@windisch.us> <eric@windisch.us>\nFlavian Missi <fmissi@redhat.com>\nGuillaume J. Charmes <charmes.guillaume@gmail.com>\nGuillaume J. Charmes <charmes.guillaume@gmail.com> <guillaume.charmes@dotcloud.com>\nGuillaume J. Charmes <charmes.guillaume@gmail.com> <guillaume@charmes.net>\nGuillaume J. Charmes <charmes.guillaume@gmail.com> <guillaume@docker.com>\nGuillaume J. Charmes <charmes.guillaume@gmail.com> <guillaume@dotcloud.com>\nHayley Swimelar <hswimelar@gmail.com>\nIsmail Alidzhikov <i.alidjikov@gmail.com>\nJaime Martinez <jmartinez@gitlab.com>\nJames Hewitt <james.hewitt@uk.ibm.com>\nJan-Otto Kröpke <github@jkroepke.de>\nJessica Frazelle <jess@oxide.computer>\nJessica Frazelle <jess@oxide.computer> <acidburn@docker.com>\nJessica Frazelle <jess@oxide.computer> <acidburn@google.com>\nJessica Frazelle <jess@oxide.computer> <acidburn@microsoft.com>\nJessica Frazelle <jess@oxide.computer> <jess@docker.com>\nJessica Frazelle <jess@oxide.computer> <jess@mesosphere.com>\nJessica Frazelle <jess@oxide.computer> <jessfraz@google.com>\nJessica Frazelle <jess@oxide.computer> <jfrazelle@users.noreply.github.com>\nJessica Frazelle <jess@oxide.computer> <me@jessfraz.com>\nJessica Frazelle <jess@oxide.computer> <princess@docker.com>\nJoao Fernandes <joaofnfernandes@gmail.com>\nJoao Fernandes <joaofnfernandes@gmail.com> <joao.fernandes@docker.com>\nJoão Pereira <484633+joaodrp@users.noreply.github.com>\nJoffrey F <joffrey@docker.com>\nJoffrey F <joffrey@docker.com> <f.joffrey@gmail.com>\nJoffrey F <joffrey@docker.com> <joffrey@dotcloud.com>\nJohan Euphrosine <proppy@google.com>\nJohan Euphrosine <proppy@google.com> <proppy@aminche.com>\nJohn Howard <github@lowenna.com>\nJohn Howard <github@lowenna.com> <jhoward@microsoft.com>\nJose D. Gomez R <jose.gomez@suse.com>\nJosh Hawn <jlhawn@berkeley.edu>\nJosh Hawn <jlhawn@berkeley.edu> <josh.hawn@docker.com>\nJoyce Brum <joycebrumu.u@gmail.com>\nJoyce Brum <joycebrumu.u@gmail.com> <joycebrum@google.com>\nJustin Cormack <justin.cormack@docker.com>\nJustin Cormack <justin.cormack@docker.com> <justin.cormack@unikernel.com>\nJustin Cormack <justin.cormack@docker.com> <justin@specialbusservice.com>\nKirat Singh <kirat.singh@gmail.com>\nKirat Singh <kirat.singh@gmail.com> <kirat.singh@beacon.io>\nKirat Singh <kirat.singh@gmail.com> <kirat.singh@wsq.io>\nkrynju <krystian.gulinski@juliahub.com>\nKyle Squizzato <ksquizz@gmail.com>\nLiang Zheng <zhengliang0901@gmail.com>\nLuca Bruno <lucab@debian.org>\nLuca Bruno <lucab@debian.org> <luca.bruno@coreos.com>\nMahmoud Kandil <47168819+MahmoudKKandil@users.noreply.github.com>\nManish Tomar <manish.tomar@docker.com>\nManish Tomar <manish.tomar@docker.com> <manishtomar@users.noreply.github.com>\nMaria Bermudez <bermudez.mt@gmail.com>\nMaria Bermudez <bermudez.mt@gmail.com> <bermudezmt@users.noreply.github.com>\nMarkus Thömmes <markusthoemmes@me.com>\nMatheus Macabu <macabu.matheus@gmail.com>\nMatt Linville <matt@linville.me>\nMatt Linville <matt@linville.me> <misty@apache.org>\nMatt Linville <matt@linville.me> <misty@docker.com>\nMichael Crosby <crosbymichael@gmail.com>\nMichael Crosby <crosbymichael@gmail.com> <crosby.michael@gmail.com>\nMichael Crosby <crosbymichael@gmail.com> <michael@crosbymichael.com>\nMichael Crosby <crosbymichael@gmail.com> <michael@docker.com>\nMichael Crosby <crosbymichael@gmail.com> <michael@thepasture.io>\nMichal Minar <miminar@redhat.com>\nMichal Minar <miminar@redhat.com> Michal Minář <miminar@redhat.com>\nMike Brown <brownwm@us.ibm.com>\nMike Brown <brownwm@us.ibm.com> <mikebrow@users.noreply.github.com>\nMikel Rychliski <mikel@mikelr.com>\nMikhail f. Shiryaev <mr.felixoid@gmail.com>\nMilos Gajdos <milosthegajdos@gmail.com>\nMilos Gajdos <milosthegajdos@gmail.com> <1392526+milosgajdos@users.noreply.github.com>\nMilos Gajdos <milosthegajdos@gmail.com> <milosgajdos83@gmail.com>\nNikita Tarasov <nikita@mygento.ru>\nNikita Tarasov <nikita@mygento.ru> <luckyraul@users.noreply.github.com>\nOleg Bulatov <oleg@bulatov.me>\nOleg Bulatov <oleg@bulatov.me> <obulatov@redhat.com>\nOlivier Gambier <olivier@docker.com>\nOlivier Gambier <olivier@docker.com> <dmp42@users.noreply.github.com>\nOmer Cohen <git@omer.io>\nOmer Cohen <git@omer.io> <git@omerc.net>\nPaul Meyer <49727155+katexochen@users.noreply.github.com>\nPer Lundberg <perlun@gmail.com>\nPer Lundberg <perlun@gmail.com> <per.lundberg@ecraft.com>\nPeter Dave Hello <hsu@peterdavehello.org>\nPeter Dave Hello <hsu@peterdavehello.org> <PeterDaveHello@users.noreply.github.com>\nPhil Estes <estesp@gmail.com>\nPhil Estes <estesp@gmail.com> <estesp@amazon.com>\nPhil Estes <estesp@gmail.com> <estesp@linux.vnet.ibm.com>\nPratik <pratikgparikh@gmail.com>\nRichard Scothern <richard.scothern@gmail.com>\nRichard Scothern <richard.scothern@gmail.com> <richard.scothern@docker.com>\nRober Morales-Chaparro <rober.morales@rstor.io>\nRober Morales-Chaparro <rober.morales@rstor.io> <rober@rstor.io>\nRobin Ketelbuters <robin.ketelbuters@gmail.com>\nSebastiaan van Stijn <github@gone.nl>\nSebastiaan van Stijn <github@gone.nl> <moby@example.com>\nSebastiaan van Stijn <github@gone.nl> <sebastiaan@ws-key-sebas3.dpi1.dpi>\nSebastiaan van Stijn <github@gone.nl> <thaJeztah@users.noreply.github.com>\nSharif Nassar <sharif@mrwacky.com>\nSharif Nassar <sharif@mrwacky.com> <mrwacky42@users.noreply.github.com>\nSolomon Hykes <solomon@dagger.io>\nSolomon Hykes <solomon@dagger.io> <s@docker.com>\nSolomon Hykes <solomon@dagger.io> <solomon.hykes@dotcloud.com>\nSolomon Hykes <solomon@dagger.io> <solomon@docker.com>\nSolomon Hykes <solomon@dagger.io> <solomon@dotcloud.com>\nStephen Day <stevvooe@gmail.com>\nStephen Day <stevvooe@gmail.com> <stephen.day@docker.com>\nStephen Day <stevvooe@gmail.com> <stevvooe@users.noreply.github.com>\nSteven Kalt <SKalt@users.noreply.github.com>\nSven Dowideit <SvenDowideit@home.org.au>\nSven Dowideit <SvenDowideit@home.org.au> <SvenDowideit@users.noreply.github.com>\nSylvain DESGRAIS <sylvain.desgrais@gmail.com>\nTadeusz Dudkiewicz <tadeusz.dudkiewicz@rtbhouse.com>\nThomas Way <thomas@6f.io>\nTibor <tiborcasteleijn@gmail.com>\nTibor Vass <teabee89@gmail.com>\nTibor Vass <teabee89@gmail.com> <tibor@docker.com>\nTibor Vass <teabee89@gmail.com> <tiborvass@users.noreply.github.com>\nVictor Barbu <git.zqk3n@vicb.cc>\nVictor Vieux <victorvieux@gmail.com>\nVictor Vieux <victorvieux@gmail.com> <dev@vvieux.com>\nVictor Vieux <victorvieux@gmail.com> <victor.vieux@docker.com>\nVictor Vieux <victorvieux@gmail.com> <victor.vieux@dotcloud.com>\nVictor Vieux <victorvieux@gmail.com> <victor@docker.com>\nVictor Vieux <victorvieux@gmail.com> <victor@dotcloud.com>\nVictor Vieux <victorvieux@gmail.com> <victorvieux@gmail.com>\nVictor Vieux <victorvieux@gmail.com> <vieux@docker.com>\nVictoria Bialas <victoria.bialas@docker.com>\nVictoria Bialas <victoria.bialas@docker.com> <londoncalling@users.noreply.github.com>\nVincent Batts <vbatts@redhat.com>\nVincent Batts <vbatts@redhat.com> <vbatts@hashbangbash.com>\nVincent Demeester <vincent.demeester@docker.com>\nVincent Demeester <vincent.demeester@docker.com> <vincent+github@demeester.fr>\nVincent Demeester <vincent.demeester@docker.com> <vincent@demeester.fr>\nVincent Demeester <vincent.demeester@docker.com> <vincent@sbr.pm>\nVincent Giersch <vincent@giersch.fr>\nVincent Giersch <vincent@giersch.fr> <vincent.giersch@ovh.net>\nvitshev <vitali.shevchenko@gmail.com>\nWang Yan <wangyan@vmware.com>\nWen-Quan Li <legendarilylwq@gmail.com>\nWen-Quan Li <legendarilylwq@gmail.com> <wenquan.li@hp.com>\nWen-Quan Li <legendarilylwq@gmail.com> <wenquan.li@hpe.com>\nYu Wang <yuwa@microsoft.com>\nYu Wang <yuwa@microsoft.com> Yu Wang (UC) <yuwa@microsoft.com>\nbaojiangnan <baojiangnan@meituan.com>\nbaojiangnan <baojiangnan@meituan.com> <baojn1998@163.com>\nerezrokah <erezrokah@users.noreply.github.com>\ngoodactive <goodactive@qq.com>\ngotgelf <gotgelf@gmail.com>\nguoguangwu <guoguangwug@gmail.com>\nharche <p.harshal@gmail.com>\nharche <p.harshal@gmail.com> <harche@users.noreply.github.com>\nicefed <zlwangel@gmail.com>\noliver-goetz <o.goetz@sap.com>\ntomoya-kawaguchi <yamo7yamoto@gmail.com>\nxiaoxiangxianzi <zhaoyizheng@outlook.com>\n"
        },
        {
          "name": "ADOPTERS.md",
          "type": "blob",
          "size": 0.4609375,
          "content": "Docker Hub https://hub.docker.com/\n\nGitLab Container Registry https://docs.gitlab.com/ee/user/packages/container_registry/\n\nGitHub Container Registry https://docs.github.com/en/free-pro-team@latest/packages/guides/about-github-container-registry\n\nHarbor, CNCF Graduated project https://goharbor.io/\n\nVMware Harbor Registry https://docs.pivotal.io/partners/vmware-harbor/index.html\n\nDigitalOcean Container Registry https://www.digitalocean.com/products/container-registry/\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 20.8466796875,
          "content": "# This file lists all individuals having contributed content to the repository.\n# For how it is generated, see dockerfiles/authors.Dockerfile.\n\na-palchikov <deemok@gmail.com>\nAaron Lehmann <alehmann@netflix.com>\nAaron Schlesinger <aschlesinger@deis.com>\nAaron Vinson <avinson.public@gmail.com>\nAdam Dobrawy <ad-m@users.noreply.github.com>\nAdam Duke <adam.v.duke@gmail.com>\nAdam Enger <adamenger@gmail.com>\nAdam Kaplan <adam.kaplan@redhat.com>\nAdam Wolfe Gordon <awg@digitalocean.com>\nAdamKorcz <adam@adalogics.com>\nAdrian Mouat <adrian.mouat@gmail.com>\nAdrian Plata <adrian.plata@docker.com>\nAdrien Duermael <adrien@duermael.com>\nAhmet Alp Balkan <ahmetalpbalkan@gmail.com>\nAidan Hobson Sayers <aidanhs@cantab.net>\nAkihiro Suda <akihiro.suda.cz@hco.ntt.co.jp>\nAleksejs Sinicins <monder@monder.cc>\nAlex <aleksandrosansan@gmail.com>\nAlex Chan <alex.chan@metaswitch.com>\nAlex Elman <aelman@indeed.com>\nAlex Laties <agl@tumblr.com>\nAlexander Larsson <alexl@redhat.com>\nAlexander Morozov <lk4d4math@gmail.com>\nAlexey Gladkov <gladkov.alexey@gmail.com>\nAlfonso Acosta <fons@syntacticsugar.consulting>\nallencloud <allen.sun@daocloud.io>\nAlvin Feng <alvin4feng@yahoo.com>\namitshukla <ashukla73@hotmail.com>\nAmy Lindburg <amy.lindburg@docker.com>\nAnders Ingemann <aim@orbit.online>\nAndreas Hassing <andreas@famhassing.dk>\nAndrew Bulford <andrew.bulford@redmatter.com>\nAndrew Hsu <andrewhsu@acm.org>\nAndrew Lavery <laverya@umich.edu>\nAndrew Leung <anwleung@gmail.com>\nAndrew Lively <andrew.lively2@gmail.com>\nAndrew Meredith <andymeredith@gmail.com>\nAndrew T Nguyen <andrew.nguyen@docker.com>\nAndrews Medina <andrewsmedina@gmail.com>\nAndrey Kostov <kostov.andrey@gmail.com>\nAndrey Smirnov <andrey.smirnov@siderolabs.com>\nAndrii Soldatenko <andrii.soldatenko@gmail.com>\nAndy Goldstein <agoldste@redhat.com>\nandyzhangx <xiazhang@microsoft.com>\nAnian Z <ziegler@sicony.de>\nAnil Belur <askb23@gmail.com>\nAnis Elleuch <vadmeste@gmail.com>\nAnkur Kothiwal <ankur.kothiwal@cern.com>\nAnkush Agarwal <ankushagarwal11@gmail.com>\nAnne Henmi <41210220+ahh-docker@users.noreply.github.com>\nAnthony Ramahay <thewolt@gmail.com>\nAnton Tiurin <noxiouz@yandex.ru>\nAntonio Mercado <amercado@thinknode.com>\nAntonio Murdaca <antonio.murdaca@gmail.com>\nAntonio Ojea <antonio.ojea.garcia@gmail.com>\nAnusha Ragunathan <anusha@docker.com>\nArien Holthuizen <aholthuizen@schubergphilis.com>\nArko Dasgupta <arkodg@users.noreply.github.com>\nArnaud Porterie <arnaud.porterie@docker.com>\nArthur Baars <arthur@semmle.com>\nArthur Gautier <baloo@gandi.net>\nAsuka Suzuki <hello@tanksuzuki.com>\nAustin Vazquez <macedonv@amazon.com>\nAvi Miller <avi.miller@oracle.com>\nAviral Takkar <aviral26@users.noreply.github.com>\nAyose Cazorla <ayosec@gmail.com>\nBadZen <dave.trombley@gmail.com>\nbaojiangnan <baojiangnan@meituan.com>\nBen Bodenmiller <bbodenmiller@hotmail.com>\nBen De St Paer-Gotch <bende@outlook.com>\nBen Emamian <ben@ictace.com>\nBen Firshman <ben@firshman.co.uk>\nBen Kochie <superq@gmail.com>\nBen Manuel <ben.manuel@procore.com>\nBenjamin Schanzel <benjamin.schanzel@bmw.de>\nBhavin Gandhi <bhavin192@users.noreply.github.com>\nBill <NonCreature0714@users.noreply.github.com>\nbin liu <liubin0329@gmail.com>\nBouke van der Bijl <me@bou.ke>\nBracken Dawson <abdawson@gmail.com>\nBrandon Mitchell <git@bmitch.net>\nBrandon Philips <brandon@ifup.co>\nBrett Higgins <brhiggins@arbor.net>\nBrian Bland <brian.t.bland@gmail.com>\nBrian Goff <cpuguy83@gmail.com>\nburnettk <burnettk@gmail.com>\nCaleb Spare <cespare@gmail.com>\nCarson A <ca@carsonoid.net>\nCezar Sa Espinola <cezarsa@gmail.com>\nChad Faragher <wyckster@hotmail.com>\nChaos John <chaosjohn.yjh@icloud.com>\nCharles Smith <charles.smith@docker.com>\nCheng Zheng <chengzheng.apply@gmail.com>\nchlins <chenyuzh@vmware.com>\nChris Aniszczyk <caniszczyk@gmail.com>\nChris Dillon <squarism@gmail.com>\nChris K. Wong <chriskw.xyz@gmail.com>\nChris Patterson <chrispat@github.com>\nChristopher Yeleighton <ne01026@shark.2a.pl>\nChristy Perez <christy@linux.vnet.ibm.com>\nChuanying Du <cydu@google.com>\nChun-Hung Hsiao <chhsiao@google.com>\nClayton Coleman <ccoleman@redhat.com>\nCollin Shoop <cshoop@digitalocean.com>\nCorey Quon <corey.quon@gmail.com>\nCory Snider <csnider@mirantis.com>\nCrazyMax <github@crazymax.dev>\ncressie176 <github@stephen-cresswell.net>\nCristian Staretu <cristian.staretu@gmail.com>\ncui fliter <imcusg@gmail.com>\ncuiwei13 <cuiwei13@pku.edu.cn>\ncyli <cyli@twistedmatrix.com>\nDaehyeok Mun <daehyeok@gmail.com>\nDaisuke Fujita <dtanshi45@gmail.com>\nDamien Mathieu <dmathieu@salesforce.com>\nDan Fredell <furtchet@gmail.com>\nDan Walsh <dwalsh@redhat.com>\nDaniel Helfand <helfand.4@gmail.com>\nDaniel Huhn <daniel@danielhuhn.de>\nDaniel Menet <membership@sontags.ch>\nDaniel Mizyrycki <mzdaniel@glidelink.net>\nDaniel Nephin <dnephin@gmail.com>\nDaniel, Dao Quang Minh <dqminh89@gmail.com>\nDanila Fominykh <dancheg97@fmnx.su>\nDarren Shepherd <darren@rancher.com>\nDave <david.warshaw@gmail.com>\nDave Trombley <dave.trombley@gmail.com>\nDave Tucker <dt@docker.com>\nDavid Calavera <david.calavera@gmail.com>\nDavid Justice <david@devigned.com>\nDavid Karlsson <david.karlsson@docker.com>\nDavid Lawrence <david.lawrence@docker.com>\nDavid Luu <david@davidluu.info>\nDavid Mackey <tdmackey@booleanhaiku.com>\nDavid van der Spek <vanderspek.david@gmail.com>\nDavid Verhasselt <david@crowdway.com>\nDavid Wu <dwu7401@gmail.com>\nDavid Xia <dxia@spotify.com>\nDawn W Docker <dawn.wood@users.noreply.github.com>\nddelange <14880945+ddelange@users.noreply.github.com>\nDejan Golja <dejan@golja.org>\nDenis Andrejew <da.colonel@gmail.com>\ndependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\nDerek <crq@kernel.org>\nDerek McGowan <derek@mcg.dev>\nDeshi Xiao <xiaods@gmail.com>\nDimitar Kostadinov <dimitar.kostadinov@sap.com>\nDiogo Mónica <diogo.monica@gmail.com>\nDJ Enriquez <dj.enriquez@infospace.com>\nDjibril Koné <kone.djibril@gmail.com>\ndmp <dmp@loaner.local>\nDon Bowman <don@agilicus.com>\nDon Kjer <don.kjer@gmail.com>\nDonald Huang <don.hcd@gmail.com>\nDoug Davis <dug@us.ibm.com>\ndrornir <drornir@users.noreply.github.com>\nduanhongyi <duanhongyi@doopai.com>\nducksecops <daniel@ducksecops.uk>\nE. M. Bray <erik.m.bray@gmail.com>\nEdgar Lee <edgar.lee@docker.com>\nElliot Pahl <elliot.pahl@gmail.com>\nelsanli(李楠) <elsanli@tencent.com>\nElton Stoneman <elton@sixeyed.com>\nEmmanuel Briney <emmanuel.briney@docker.com>\nEmmanuel Ferdman <emmanuelferdman@gmail.com>\nEng Zer Jun <engzerjun@gmail.com>\nEohyung Lee <liquidnuker@gmail.com>\nerezrokah <erezrokah@users.noreply.github.com>\nEric Yang <windfarer@gmail.com>\nErica Windisch <erica@windisch.us>\nErik Hollensbe <github@hollensbe.org>\nEtki <etki@etki.me>\nEugene Lubarsky <eug48@users.noreply.github.com>\neyjhb <eyjhbb@gmail.com>\neyjhbb@gmail.com <eyjhbb@gmail.com>\nFabio Berchtold <jamesclonk@jamesclonk.ch>\nFabio Falci <fabiofalci@gmail.com>\nFabio Huser <fabio@fh1.ch>\nfarmerworking <farmerworking@gmail.com>\nfate-grand-order <chenjg@harmonycloud.cn>\nFelix Bünemann <buenemann@louis.info>\nFelix Yan <felixonmars@archlinux.org>\nFeng Honglin <tifayuki@gmail.com>\nFernando Mayo Fernandez <fernando@undefinedlabs.com>\nFlavian Missi <fmissi@redhat.com>\nFlorentin Raud <florentin.raud@gmail.com>\nforkbomber <forkbomber@users.noreply.github.com>\nFrank Chen <frankchn@gmail.com>\nFrederick F. Kautz IV <fkautz@alumni.cmu.edu>\nGabor Nagy <mail@aigeruth.hu>\ngabriell nascimento <gabriell@bluesoft.com.br>\nGaetan <gdevillele@gmail.com>\ngary schaetz <gary@schaetzkc.com>\ngbarr01 <gwendolynne.barr@docker.com>\nGeoffrey Hausheer <rc2012@pblue.org>\nghodsizadeh <mehdi.ghodsizadeh@gmail.com>\nGiovanni Toraldo <giovanni.toraldo@eng.it>\nGladkov Alexey <agladkov@redhat.com>\nGleb M Borisov <borisov.gleb@gmail.com>\nGleb Schukin <gschukin@ptsecurity.com>\nglefloch <glfloch@gmail.com>\nGlyn Owen Hanmer <1295698+glynternet@users.noreply.github.com>\ngoodactive <goodactive@qq.com>\ngotgelf <gotgelf@gmail.com>\nGrachev Mikhail <work@mgrachev.com>\nGrant Watters <grant.watters@docker.com>\nGreg Rebholz <gregrebholz@gmail.com>\nGuillaume J. Charmes <charmes.guillaume@gmail.com>\nGuillaume Rose <guillaume.rose@docker.com>\nguoguangwu <guoguangwug@gmail.com>\nGábor Lipták <gliptak@gmail.com>\nharche <p.harshal@gmail.com>\nhasheddan <georgedanielmangum@gmail.com>\nHayley Swimelar <hswimelar@gmail.com>\nHelen-xie <xieyulin821@harmonycloud.cn>\nHenri Gomez <henri.gomez@gmail.com>\nHonglin Feng <tifayuki@gmail.com>\nHu Keping <hukeping@huawei.com>\nHua Wang <wanghua.humble@gmail.com>\nHuKeping <hukeping@huawei.com>\nHuu Nguyen <whoshuu@gmail.com>\nIan Babrou <ibobrik@gmail.com>\niasoon <ilion.beyst@gmail.com>\nicefed <zlwangel@gmail.com>\nigayoso <igayoso@gmail.com>\nIgor Dolzhikov <bluesriverz@gmail.com>\nIgor Morozov <igmorv@gmail.com>\nIhor Dvoretskyi <ihor@linux.com>\nIlion Beyst <ilion.beyst@gmail.com>\nIna Panova <ipanova@redhat.com>\nIrene Diez <idiez@redhat.com>\nIsmail Alidzhikov <i.alidjikov@gmail.com>\nJack Baines <jack.baines@uk.ibm.com>\nJack Griffin <jackpg14@gmail.com>\nJacob Atzen <jatzen@gmail.com>\nJaime Martinez <jmartinez@gitlab.com>\nJake Moshenko <jake@devtable.com>\nJakob Ackermann <das7pad@outlook.com>\nJakub Mikulas <jakub@mikul.as>\nJames Findley <jfindley@fastmail.com>\nJames Hewitt <james.hewitt@uk.ibm.com>\nJames Lal <james@lightsofapollo.com>\nJan-Otto Kröpke <github@jkroepke.de>\nJason Freidman <jason.freidman@gmail.com>\nJason Heiss <jheiss@aput.net>\nJavier Palomo Almena <javier.palomo.almena@gmail.com>\njdolitsky <393494+jdolitsky@users.noreply.github.com>\nJeff Nickoloff <jeff@allingeek.com>\nJeffrey van Gogh <jvg@google.com>\njerae-duffin <83294991+jerae-duffin@users.noreply.github.com>\nJeremy THERIN <jtherin@scaleway.com>\nJesse Brown <jabrown85@gmail.com>\nJesse Haka <haka.jesse@gmail.com>\nJessica Frazelle <jess@oxide.computer>\njhaohai <jhaohai@foxmail.com>\nJianqing Wang <tsing@jianqing.org>\nJihoon Chung <jihoon@gmail.com>\nJim Galasyn <jim.galasyn@docker.com>\nJoao Fernandes <joaofnfernandes@gmail.com>\nJoffrey F <joffrey@docker.com>\nJohan Euphrosine <proppy@google.com>\nJohn Howard <github@lowenna.com>\nJohn Mulhausen <john@docker.com>\nJohn Starks <jostarks@microsoft.com>\nJon Johnson <jonjohnson@google.com>\nJon Poler <jonathan.poler@apcera.com>\nJonas Hecht <jonas.hecht@codecentric.de>\nJonathan Boulle <jonathanboulle@gmail.com>\nJonathan Lee <jonjohn1232009@gmail.com>\nJonathan Rudenberg <jonathan@titanous.com>\nJordan Liggitt <jliggitt@redhat.com>\nJose D. Gomez R <jose.gomez@suse.com>\nJosh Chorlton <josh.chorlton@docker.com>\nJosh Dolitsky <josh@dolit.ski>\nJosh Hawn <jlhawn@berkeley.edu>\nJosiah Kiehl <jkiehl@riotgames.com>\nJoyce Brum <joycebrumu.u@gmail.com>\nJoão Pereira <484633+joaodrp@users.noreply.github.com>\nJulien Bordellier <1444415+jstoja@users.noreply.github.com>\nJulien Fernandez <julien.fernandez@gmail.com>\nJustas Brazauskas <brazauskasjustas@gmail.com>\nJustin Cormack <justin.cormack@docker.com>\nJustin I. Nevill <JustinINevill@users.noreply.github.com>\nJustin Santa Barbara <justin@fathomdb.com>\nkaiwentan <kaiwentan@harmonycloud.cn>\nKe Xu <leonhartx.k@gmail.com>\nKeerthan Mala <kmala@engineyard.com>\nKelsey Hightower <kelsey.hightower@gmail.com>\nKen Cochrane <KenCochrane@gmail.com>\nKenneth Lim <kennethlimcp@gmail.com>\nKenny Leung <kleung@google.com>\nKevin Lin <kevin@kelda.io>\nKevin Robatel <kevinrob2@gmail.com>\nKira <me@imkira.com>\nKirat Singh <kirat.singh@gmail.com>\nkrynju <krystian.gulinski@juliahub.com>\nKyle Squizzato <ksquizz@gmail.com>\nKyle Squizzato <kyle@replicated.com>\nL-Hudson <44844738+L-Hudson@users.noreply.github.com>\nLachlan Cooper <lachlancooper@gmail.com>\nLaura Brehm <laurabrehm@hey.com>\nLei Jitang <leijitang@huawei.com>\nLenny Linux <tippexs91@googlemail.com>\nLeonardo Azize Martins <lazize@users.noreply.github.com>\nleonstrand <leonstrand@gmail.com>\nLi Yi <denverdino@gmail.com>\nLiam White <liamwhite@uk.ibm.com>\nLiang Zheng <zhengliang0901@gmail.com>\nlibo.huang <huanglibo2010@gmail.com>\nLingFaKe <lingfake@huawei.com>\nLiron Levin <liron@twistlock.com>\nlisong <lisong@cdsunrise.net>\nLittlemoon917 <18084421+Littlemoon917@users.noreply.github.com>\nLiu Hua <sdu.liu@huawei.com>\nliuchang0812 <liuchang0812@gmail.com>\nliyongxin <yxli@alauda.io>\nLloyd Ramey <lnr0626@gmail.com>\nlostsquirrel <lostsquirreli@hotmail.com>\nLouis Kottmann <louis.kottmann@gmail.com>\nLuca Bruno <lucab@debian.org>\nLucas França de Oliveira <lucasfdo@palantir.com>\nLucas Santos <lhs.santoss@gmail.com>\nLuis Lobo Borobia <luislobo@gmail.com>\nLuke Carpenter <x@rubynerd.net>\nMa Shimiao <mashimiao.fnst@cn.fujitsu.com>\nMahmoud Kandil <47168819+MahmoudKKandil@users.noreply.github.com>\nMakoto Oda <truth_jp_4133@yahoo.co.jp>\nmallchin <mallchin@mac.com>\nManish Tomar <manish.tomar@docker.com>\nMarco Hennings <marco.hennings@freiheit.com>\nMarcus Martins <marcus@docker.com>\nMaria Bermudez <bermudez.mt@gmail.com>\nMark Sagi-Kazar <mark.sagikazar@gmail.com>\nMarkus Thömmes <markusthoemmes@me.com>\nMary Anthony <mary@docker.com>\nMasataka Mizukoshi <m.mizukoshi.wakuwaku@gmail.com>\nMatheus Macabu <macabu.matheus@gmail.com>\nMatin Rahmanian <itsmatinx@gmail.com>\nMATSUMOTO TAKEAKI <takeaki.matsumoto@linecorp.com>\nMatt Bentley <mbentley@mbentley.net>\nMatt Duch <matt@learnmetrics.com>\nMatt Linville <matt@linville.me>\nMatt Moore <mattmoor@google.com>\nMatt Robenolt <matt@ydekproductions.com>\nMatt Tescher <matthew.tescher@docker.com>\nMatthew Balvanz <matthew.balvanz@workiva.com>\nMatthew Green <greenmr@live.co.uk>\nMatthew Riley <mattdr@google.com>\nMaurice Sotzny <ailuridae@users.noreply.github.com>\nMeaglith Ma <genedna@gmail.com>\nMichael Bonfils <bonfils.michael@protonmail.com>\nMichael Crosby <crosbymichael@gmail.com>\nMichael Prokop <mika@grml.org>\nMichael Vetter <jubalh@iodoru.org>\nMichal Fojtik <mfojtik@redhat.com>\nMichal Gebauer <mishak@mishak.net>\nMichal Guerquin <michalg@allenai.org>\nMichal Minar <miminar@redhat.com>\nMike Brown <brownwm@us.ibm.com>\nMike Lundy <mike@fluffypenguin.org>\nMike Truman <miketruman42@gmail.com>\nMikel Rychliski <mikel@mikelr.com>\nMikhail f. Shiryaev <mr.felixoid@gmail.com>\nMilos Gajdos <milosthegajdos@gmail.com>\nMiquel Sabaté <msabate@suse.com>\nmlmhl <409107750@qq.com>\nMonika Katiyar <monika@jeavio.com>\nMorgan Bauer <mbauer@us.ibm.com>\nmoxiegirl <mary@docker.com>\nmqliang <mqliang.zju@gmail.com>\nMuesli <solom.emmanuel@gmail.com>\nNan Monnand Deng <monnand@gmail.com>\nNat Zimmermann <ntzm@users.noreply.github.com>\nNathan Sullivan <nathan@nightsys.net>\nNaveed Jamil <naveed.jamil@tenpearl.com>\nNeil Wilson <neil@aldur.co.uk>\nnevermosby <robolwq@qq.com>\nNghia Tran <tcnghia@gmail.com>\nNicolas De Loof <nicolas.deloof@gmail.com>\nNikita Tarasov <nikita@mygento.ru>\nning xie <andy.xning@gmail.com>\nNishant Totla <nishanttotla@gmail.com>\nNoah Treuhaft <noah.treuhaft@docker.com>\nNovak Ivanovski <novakivanovski@gmail.com>\nNuutti Kotivuori <nuutti.kotivuori@poplatek.fi>\nNycholas de Oliveira e Oliveira <nycholas@gmail.com>\nOilbeater <liumengxinfly@gmail.com>\nOleg Bulatov <oleg@bulatov.me>\nolegburov <oleg.burov@outlook.com>\noliver-goetz <o.goetz@sap.com>\nOlivier <o+github@gambier.email>\nOlivier Gambier <olivier@docker.com>\nOlivier Jacques <olivier.jacques@hp.com>\nollypom <oppomeroy@gmail.com>\nOmer Cohen <git@omer.io>\nOscar Caballero <ocaballero@opensistemas.com>\nOwen W. Taylor <otaylor@fishsoup.net>\npaigehargrave <Paige.hargrave@docker.com>\nParth Mehrotra <parth@mehrotra.me>\nPascal Borreli <pascal@borreli.com>\nPatrick Devine <patrick.devine@docker.com>\nPatrick Easters <peasters@redhat.com>\nPaul Cacheux <paul.cacheux@datadoghq.com>\nPaul Meyer <49727155+katexochen@users.noreply.github.com>\nPavel Antonov <ddc67cd@gmail.com>\nPaweł Gronowski <pawel.gronowski@docker.com>\nPer Lundberg <perlun@gmail.com>\nPeter Choi <reikani@Peters-MacBook-Pro.local>\nPeter Dave Hello <hsu@peterdavehello.org>\nPeter Kokot <peterkokot@gmail.com>\nPhil Estes <estesp@gmail.com>\nPhilip Misiowiec <philip@atlashealth.com>\nPierre-Yves Ritschard <pyr@spootnik.org>\nPieter Scheffers <pieter.scheffers@gmail.com>\nPratik <pratikgparikh@gmail.com>\nQiang Huang <h.huangqiang@huawei.com>\nQiao Anran <qiaoanran@gmail.com>\nRadon Rosborough <radon.neon@gmail.com>\nRandy Barlow <randy@electronsweatshop.com>\nRaphaël Enrici <raphael@root-42.com>\nRicardo Maraschini <ricardo.maraschini@gmail.com>\nRichard Scothern <richard.scothern@gmail.com>\nRick Wieman <git@rickw.nl>\nRik Nijessen <rik@keefo.nl>\nRiyaz Faizullabhoy <riyaz.faizullabhoy@docker.com>\nRober Morales-Chaparro <rober.morales@rstor.io>\nRobert Kaussow <mail@geeklabor.de>\nRobert Steward <speaktorob@users.noreply.github.com>\nRoberto G. Hashioka <roberto.hashioka@docker.com>\nRobin Ketelbuters <robin.ketelbuters@gmail.com>\nRodolfo Carvalho <rhcarvalho@gmail.com>\nROY <qqbuby@gmail.com>\nRui Cao <ruicao@alauda.io>\nruicao <ruicao@alauda.io>\nRusty Conover <rusty@luckydinosaur.com>\nRyan Abrams <rdabrams@gmail.com>\nRyan Thomas <rthomas@atlassian.com>\nsakeven <jc5930@sina.cn>\nSam Alba <sam.alba@gmail.com>\nSamuel Karp <skarp@amazon.com>\nsangluo <sangluo@pinduoduo.com>\nSantiago Torres <torresariass@gmail.com>\nSargun Dhillon <sargun@sargun.me>\nsayboras <sayboras@yahoo.com>\nSean Boran <Boran@users.noreply.github.com>\nSean P. Kane <spkane00@gmail.com>\nSebastiaan van Stijn <github@gone.nl>\nSebastien Coavoux <s.coavoux@free.fr>\nSerge Dubrouski <sergeyfd@gmail.com>\nSevki Hasirci <sevki@cloudflare.com>\nSharif Nassar <sharif@mrwacky.com>\nShawn Chen <chen8132@gmail.com>\nShawn Falkner-Horine <dreadpirateshawn@gmail.com>\nShawnpku <chen8132@gmail.com>\nShengjing Zhu <zhsj@debian.org>\nShiela M Parker <smp13@live.com>\nShishir Mahajan <shishir.mahajan@redhat.com>\nShreyas Karnik <karnik.shreyas@gmail.com>\nSilvin Lubecki <31478878+silvin-lubecki@users.noreply.github.com>\nSimon <crydotsnakegithub@gmail.com>\nSimon Thulbourn <simon+github@thulbourn.com>\nSimone Locci <simone.locci@eng.it>\nSmasherr <soundcracker@gmail.com>\nSolomon Hykes <solomon@dagger.io>\nSora Morimoto <sora@morimoto.io>\nspacexnice <yaoyao.xyy@alibaba-inc.com>\nSpencer Rinehart <anubis@overthemonkey.com>\nsrajmane <31947381+srajmane@users.noreply.github.com>\nSrini Brahmaroutu <srbrahma@us.ibm.com>\nStan Hu <stanhu@gmail.com>\nStefan Lörwald <10850250+stefanloerwald@users.noreply.github.com>\nStefan Majewsky <stefan.majewsky@sap.com>\nStefan Nica <snica@suse.com>\nStefan Weil <sw@weilnetz.de>\nStephen Day <stevvooe@gmail.com>\nSteve Lasker <stevenlasker@hotmail.com>\nSteven Hanna <stevenhanna6@gmail.com>\nSteven Kalt <SKalt@users.noreply.github.com>\nSteven Taylor <steven.taylor@me.com>\nstonezdj <stonezdj@gmail.com>\nsun jian <cnhttpd@gmail.com>\nSungho Moon <sungho.moon@navercorp.com>\nSven Dowideit <SvenDowideit@home.org.au>\nSylvain Baubeau <sbaubeau@redhat.com>\nSylvain DESGRAIS <sylvain.desgrais@gmail.com>\nsyntaxkim <40621244+syntaxkim@users.noreply.github.com>\nT N <tnir@users.noreply.github.com>\nt-eimizu <t-eimizu@aim.ac>\nTadeusz Dudkiewicz <tadeusz.dudkiewicz@rtbhouse.com>\nTariq Ibrahim <tariq181290@gmail.com>\nTaylorKanper <tony_kanper@hotmail.com>\nTed Reed <ted.reed@gmail.com>\nTerin Stock <terinjokes@gmail.com>\ntgic <farmer1992@gmail.com>\nThomas Berger <loki@lokis-chaos.de>\nThomas Sjögren <konstruktoid@users.noreply.github.com>\nThomas Way <thomas@6f.io>\nTianon Gravi <admwiggin@gmail.com>\nTibor <tiborcasteleijn@gmail.com>\nTibor Vass <teabee89@gmail.com>\ntifayuki <tifayuki@gmail.com>\nTiger Kaovilai <tkaovila@redhat.com>\nTobias Fuhrimann <mastertinner@users.noreply.github.com>\nTobias Schwab <tobias.schwab@dynport.de>\nTom Hayward <thayward@infoblox.com>\nTom Hu <tomhu1096@gmail.com>\ntomoya-kawaguchi <yamo7yamoto@gmail.com>\nTonis Tiigi <tonistiigi@gmail.com>\nTony Holdstock-Brown <tony@docker.com>\nTosone <i@tosone.cn>\nTrapier Marshall <trapier@users.noreply.github.com>\nTrevor Pounds <trevor.pounds@gmail.com>\nTrevor Wood <Trevor.G.Wood@gmail.com>\nTroels Thomsen <troels@thomsen.io>\nuhayate <uhayate.gong@daocloud.io>\nUsha Mandya <47779042+usha-mandya@users.noreply.github.com>\nUsha Mandya <usha.mandya@docker.com>\nVaidas Jablonskis <jablonskis@gmail.com>\nVega Chou <VegeChou@users.noreply.github.com>\nVeres Lajos <vlajos@gmail.com>\nVictor Barbu <git.zqk3n@vicb.cc>\nVictor Vieux <victorvieux@gmail.com>\nVictoria Bialas <victoria.bialas@docker.com>\nVidar <vl@ez.no>\nViktor Stanchev <me@viktorstanchev.com>\nVincent Batts <vbatts@redhat.com>\nVincent Demeester <vincent.demeester@docker.com>\nVincent Giersch <vincent@giersch.fr>\nVishesh Jindal <vishesh92@gmail.com>\nvitshev <vitali.shevchenko@gmail.com>\nVitshev <vitshev@tracto.ai>\nW. Trevor King <wking@tremily.us>\nWang Jie <wangjie5@chinaskycloud.com>\nWang Yan <wangyan@vmware.com>\nWassim Dhif <wassimdhif@gmail.com>\nwayne <wayne.warren.s@gmail.com>\nWei Fu <fuweid89@gmail.com>\nWei Meng <wemeng@microsoft.com>\nweiyuan.yl <weiyuan.yl@alibaba-inc.com>\nWen-Quan Li <legendarilylwq@gmail.com>\nWenkai Yin <yinw@vmware.com>\nwilliam wei <1342247033@qq.com>\nxg.song <xg.song@venusource.com>\nxiaoxiangxianzi <zhaoyizheng@outlook.com>\nxiekeyang <xiekeyang@huawei.com>\nXueshan Feng <xueshan.feng@gmail.com>\nYann ROBERT <yann.robert@anantaplex.fr>\nYannick Fricke <YannickFricke@users.noreply.github.com>\nyaoyao.xyy <yaoyao.xyy@alibaba-inc.com>\nyixi zhang <yixi@memsql.com>\nYong Tang <yong.tang.github@outlook.com>\nYong Wen Chua <lawliet89@users.noreply.github.com>\nYongxin Li <yxli@alauda.io>\nYu Wang <yuwa@microsoft.com>\nyuexiao-wang <wang.yuexiao@zte.com.cn>\nYuJie <390282283@qq.com>\nyuzou <zouyu7@huawei.com>\nZhang Wei <zhangwei555@huawei.com>\nzhipengzuo <zuozhipeng@baidu.com>\nzhouhaibing089 <zhouhaibing089@gmail.com>\nzounengren <zounengren@cmss.chinamobile.com>\n姜继忠 <jizhong.jiangjz@alibaba-inc.com>\n"
        },
        {
          "name": "BUILDING.md",
          "type": "blob",
          "size": 5.21484375,
          "content": "\n# Building the registry source\n\n## Use-case\n\nThis is useful if you intend to actively work on the registry.\n\n### Alternatives\n\nMost people should use prebuilt images, for example, the [Registry docker image](https://hub.docker.com/r/library/registry/) provided by Docker.\n\nPeople looking for advanced operational use cases might consider rolling their own image with a custom Dockerfile inheriting `FROM registry:2`.\n\nThe latest updates to `main` branch are automatically pushed to [distribution Docker Hub repository](https://hub.docker.com/r/distribution/distribution) and tagged with `edge` tag.\n\n### Gotchas\n\nYou are expected to know your way around with `go` & `git`.\n\nIf you are a casual user with no development experience, and no preliminary knowledge of Go, building from source is probably not a good solution for you.\n\n## Configure the development environment\n\nThe first prerequisite of properly building distribution targets is to have a Go\ndevelopment environment setup. Please follow [How to Write Go Code](https://go.dev/doc/code) for proper setup.\n\nNext, fetch the code from the repository using git:\n\n    git clone https://github.com/distribution/distribution\n    cd distribution\n\nIf you are planning to create a pull request with changes, you may want to clone directly from your [fork](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/about-forks).\n\n## Build and run from source\n\nFirst, build the binaries:\n\n    $ make\n    + bin/registry\n    + bin/digest\n    + bin/registry-api-descriptor-template\n    + binaries\n\nNow create the directory for the registry data (this might require you to set permissions properly)\n\n    mkdir -p /var/lib/registry\n\n... or alternatively `export REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/somewhere` if you want to store data into another location.\n\nThe `registry`\nbinary can then be run with the following:\n\n    $ ./bin/registry --version\n    ./bin/registry github.com/distribution/distribution/v3 v2.7.0-1993-g8857a194\n\nThe registry can be run with a development config using the following\nincantation:\n\n    $ ./bin/registry serve cmd/registry/config-dev.yml\n    INFO[0000] debug server listening :5001\n    WARN[0000] No HTTP secret provided - generated random secret. This may cause problems with uploads if multiple registries are behind a load-balancer. To provide a shared secret, fill in http.secret in the configuration file or set the REGISTRY_HTTP_SECRET environment variable.  environment=development go.version=go1.18.3 instance.id=e837df62-a66c-4e04-a014-b063546e82e0 service=registry version=v2.7.0-1993-g8857a194\n    INFO[0000] endpoint local-5003 disabled, skipping        environment=development go.version=go1.18.3 instance.id=e837df62-a66c-4e04-a014-b063546e82e0 service=registry version=v2.7.0-1993-g8857a194\n    INFO[0000] endpoint local-8083 disabled, skipping        environment=development go.version=go1.18.3 instance.id=e837df62-a66c-4e04-a014-b063546e82e0 service=registry version=v2.7.0-1993-g8857a194\n    INFO[0000] using inmemory blob descriptor cache          environment=development go.version=go1.18.3 instance.id=e837df62-a66c-4e04-a014-b063546e82e0 service=registry version=v2.7.0-1993-g8857a194\n    INFO[0000] providing prometheus metrics on /metrics\n    INFO[0000] listening on [::]:5000                        environment=development go.version=go1.18.3 instance.id=e837df62-a66c-4e04-a014-b063546e82e0 service=registry version=v2.7.0-1993-g8857a194\n\nIf it is working, one should see the above log messages.\n\n### Build reference\n\nThe regular `go` commands, such as `go test`, should work per package.\n\nA `Makefile` has been provided as a convenience to support repeatable builds.\n\nRun `make` to build the binaries:\n\n    $ make\n    + bin/registry\n    + bin/digest\n    + bin/registry-api-descriptor-template\n    + binaries\n\nThe above provides a repeatable build using the contents of the vendor\ndirectory. We can verify this worked by running\nthe registry binary generated in the \"./bin\" directory:\n\n    $ ./bin/registry --version\n    ./bin/registry github.com/distribution/distribution v2.0.0-alpha.2-80-g16d8b2c.m\n\nRun `make test` to run all of the tests.\n\nRun `make validate` to run the validators, including the linter and vendor validation. You must have docker with the buildx plugin installed to run the validators.\n\n### Optional build tags\n\nOptional [build tags](http://golang.org/pkg/go/build/) can be provided using\nthe environment variable `BUILDTAGS`.\n\n<dl>\n<dt>noresumabledigest</dt>\n<dd>Compiles without resumable digest support</dd>\n</dl>\n\n### Local cloud storage environment\n\nYou can run an S3 API compatible storage locally with [minio](https://min.io/).\n\nYou must have a [docker compose](https://docs.docker.com/compose/) compatible tool installed on your workstation.\n\nStart the local cloud environment:\n```\nmake start-cloud-storage\n```\nThere is a sample registry configuration file that lets you point the registry to the started storage:\n```\nAWS_ACCESS_KEY=distribution \\\n        AWS_SECRET_KEY=password \\\n        AWS_REGION=us-east-1 \\\n        S3_BUCKET=images-local \\\n        S3_ENCRYPT=false \\\n        REGION_ENDPOINT=http://127.0.0.1:9000 \\\n        S3_SECURE=false \\\n./bin/registry serve tests/conf-local-cloud.yml\n```\nStop the local storage when done:\n```\nmake stop-cloud-storage\n```\n"
        },
        {
          "name": "CODE-OF-CONDUCT.md",
          "type": "blob",
          "size": 0.2470703125,
          "content": "# Code of Conduct\n\nWe follow the [CNCF Code of Conduct](https://github.com/cncf/foundation/blob/main/code-of-conduct.md).\n\nPlease contact the [CNCF Code of Conduct Committee](mailto:conduct@cncf.io) in order to report violations of the Code of Conduct.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.837890625,
          "content": "# Contributing to the registry\n\n## Before reporting an issue...\n\n### If your problem is with...\n\n - automated builds or your [Docker Hub](https://hub.docker.com/) account\n   - Report it to [Hub Support](https://hub.docker.com/support/)\n - Distributions of Docker for desktop or Linux\n    - Report [Mac Desktop issues](https://github.com/docker/for-mac)\n    - Report [Windows Desktop issues](https://github.com/docker/for-win)\n    - Report [Linux issues](https://github.com/docker/for-linux)\n\n### If you...\n\n - need help setting up your registry\n - can't figure out something\n - are not sure what's going on or what your problem is\n\nPlease ask first in the [#distribution](https://cloud-native.slack.com/archives/C01GVR8SY4R) channel on CNCF community slack.\n[Click here for an invite to the CNCF community slack](https://slack.cncf.io/)\n\n### Reporting security issues\n\nThe maintainers take security seriously. If you discover a security\nissue, please bring it to their attention right away!\n\nPlease **DO NOT** file a public issue, instead send your report privately to\n[cncf-distribution-security@lists.cncf.io](mailto:cncf-distribution-security@lists.cncf.io).\n\n## Reporting an issue properly\n\nBy following these simple rules you will get better and faster feedback on your issue.\n\n - search the bugtracker for an already reported issue\n\n### If you found an issue that describes your problem:\n\n - please read other user comments first, and confirm this is the same issue: a given error condition might be indicative of different problems - you may also find a workaround in the comments\n - please refrain from adding \"same thing here\" or \"+1\" comments\n - you don't need to comment on an issue to get notified of updates: just hit the \"subscribe\" button\n - comment if you have some new, technical and relevant information to add to the case\n - __DO NOT__ comment on closed issues or merged PRs. If you think you have a related problem, open up a new issue and reference the PR or issue.\n\n### If you have not found an existing issue that describes your problem:\n\n 1. create a new issue, with a succinct title that describes your issue:\n   - bad title: \"It doesn't work with my docker\"\n   - good title: \"Private registry push fail: 400 error with E_INVALID_DIGEST\"\n 2. copy the output of (or similar for other container tools):\n   - `docker version`\n   - `docker info`\n   - `docker exec <registry-container> registry --version`\n 3. copy the command line you used to launch your Registry\n 4. restart your docker daemon in debug mode (add `-D` to the daemon launch arguments)\n 5. reproduce your problem and get your docker daemon logs showing the error\n 6. if relevant, copy your registry logs that show the error\n 7. provide any relevant detail about your specific Registry configuration (e.g., storage backend used)\n 8. indicate if you are using an enterprise proxy, Nginx, or anything else between you and your Registry\n\n## Contributing Code\n\nContributions should be made via pull requests. Pull requests will be reviewed\nby one or more maintainers or reviewers and merged when acceptable.\n\nYou should follow the basic GitHub workflow:\n\n 1. Use your own [fork](https://help.github.com/en/articles/about-forks)\n 2. Create your [change](https://github.com/containerd/project/blob/master/CONTRIBUTING.md#successful-changes)\n 3. Test your code\n 4. [Commit](https://github.com/containerd/project/blob/master/CONTRIBUTING.md#commit-messages) your work, always [sign your commits](https://github.com/containerd/project/blob/master/CONTRIBUTING.md#commit-messages)\n 5. Push your change to your fork and create a [Pull Request](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request-from-a-fork)\n\nRefer to [containerd's contribution guide](https://github.com/containerd/project/blob/master/CONTRIBUTING.md#successful-changes)\nfor tips on creating a successful contribution.\n\n## Sign your work\n\nThe sign-off is a simple line at the end of the explanation for the patch. Your\nsignature certifies that you wrote the patch or otherwise have the right to pass\nit on as an open-source patch. The rules are pretty simple: if you can certify\nthe below (from [developercertificate.org](http://developercertificate.org/)):\n\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n660 York Street, Suite 102,\nSan Francisco, CA 94110 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\nThen you just add a line to every git commit message:\n\n    Signed-off-by: Joe Smith <joe.smith@email.com>\n\nUse your real name (sorry, no pseudonyms or anonymous contributions.)\n\nIf you set your `user.name` and `user.email` git configs, you can sign your\ncommit automatically with `git commit -s`.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 2.3095703125,
          "content": "# syntax=docker/dockerfile:1\n\nARG GO_VERSION=1.23.4\nARG ALPINE_VERSION=3.21\nARG XX_VERSION=1.6.1\n\nFROM --platform=$BUILDPLATFORM tonistiigi/xx:${XX_VERSION} AS xx\nFROM --platform=$BUILDPLATFORM golang:${GO_VERSION}-alpine${ALPINE_VERSION} AS base\nCOPY --from=xx / /\nRUN apk add --no-cache bash coreutils file git\nENV GO111MODULE=auto\nENV CGO_ENABLED=0\nWORKDIR /src\n\nFROM base AS version\nARG PKG=github.com/distribution/distribution/v3\nRUN --mount=target=. \\\n  VERSION=$(git describe --match 'v[0-9]*' --dirty='.m' --always --tags) REVISION=$(git rev-parse HEAD)$(if ! git diff --no-ext-diff --quiet --exit-code; then echo .m; fi); \\\n  echo \"-X ${PKG}/version.version=${VERSION#v} -X ${PKG}/version.revision=${REVISION} -X ${PKG}/version.mainpkg=${PKG}\" | tee /tmp/.ldflags; \\\n  echo -n \"${VERSION}\" | tee /tmp/.version;\n\nFROM base AS build\nARG TARGETPLATFORM\nARG LDFLAGS=\"-s -w\"\nARG BUILDTAGS=\"\"\nRUN --mount=type=bind,target=/src \\\n    --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=target=/go/pkg/mod,type=cache \\\n    --mount=type=bind,source=/tmp/.ldflags,target=/tmp/.ldflags,from=version \\\n      set -x ; xx-go build -tags \"${BUILDTAGS}\" -trimpath -ldflags \"$(cat /tmp/.ldflags) ${LDFLAGS}\" -o /usr/bin/registry ./cmd/registry \\\n      && xx-verify --static /usr/bin/registry\n\nFROM scratch AS binary\nCOPY --from=build /usr/bin/registry /\n\nFROM base AS releaser\nARG TARGETOS\nARG TARGETARCH\nARG TARGETVARIANT\nWORKDIR /work\nRUN --mount=from=binary,target=/build \\\n    --mount=type=bind,target=/src \\\n    --mount=type=bind,source=/tmp/.version,target=/tmp/.version,from=version \\\n      VERSION=$(cat /tmp/.version) \\\n      && mkdir -p /out \\\n      && cp /build/registry /src/README.md /src/LICENSE . \\\n      && tar -czvf \"/out/registry_${VERSION#v}_${TARGETOS}_${TARGETARCH}${TARGETVARIANT}.tar.gz\" * \\\n      && sha256sum -z \"/out/registry_${VERSION#v}_${TARGETOS}_${TARGETARCH}${TARGETVARIANT}.tar.gz\" | awk '{ print $1 }' > \"/out/registry_${VERSION#v}_${TARGETOS}_${TARGETARCH}${TARGETVARIANT}.tar.gz.sha256\"\n\nFROM scratch AS artifact\nCOPY --from=releaser /out /\n\nFROM alpine:${ALPINE_VERSION}\nRUN apk add --no-cache ca-certificates\nCOPY cmd/registry/config-dev.yml /etc/distribution/config.yml\nCOPY --from=binary /registry /bin/registry\nVOLUME [\"/var/lib/registry\"]\nEXPOSE 5000\nENTRYPOINT [\"registry\"]\nCMD [\"serve\", \"/etc/distribution/config.yml\"]\n"
        },
        {
          "name": "GOVERNANCE.md",
          "type": "blob",
          "size": 6.7490234375,
          "content": "# distribution/distribution Project Governance\n\nDistribution [Code of Conduct](./CODE-OF-CONDUCT.md) can be found here.\n\nFor specific guidance on practical contribution steps please\nsee our [CONTRIBUTING.md](./CONTRIBUTING.md) guide.\n\n## Maintainership\n\nThere are different types of maintainers, with different responsibilities, but\nall maintainers have 3 things in common:\n\n1) They share responsibility in the project's success.\n2) They have made a long-term, recurring time investment to improve the project.\n3) They spend that time doing whatever needs to be done, not necessarily what\nis the most interesting or fun.\n\nMaintainers are often under-appreciated, because their work is harder to appreciate.\nIt's easy to appreciate a really cool and technically advanced feature. It's harder\nto appreciate the absence of bugs, the slow but steady improvement in stability,\nor the reliability of a release process. But those things distinguish a good\nproject from a great one.\n\n## Reviewers\n\nA reviewer is a core role within the project.\nThey share in reviewing issues and pull requests and their LGTM counts towards the\nrequired LGTM count to merge a code change into the project.\n\nReviewers are part of the organization but do not have write access.\nBecoming a reviewer is a core aspect in the journey to becoming a maintainer.\n\n## Adding maintainers\n\nMaintainers are first and foremost contributors that have shown they are\ncommitted to the long term success of a project. Contributors wanting to become\nmaintainers are expected to be deeply involved in contributing code, pull\nrequest review, and triage of issues in the project for more than three months.\n\nJust contributing does not make you a maintainer, it is about building trust\nwith the current maintainers of the project and being a person that they can\ndepend on and trust to make decisions in the best interest of the project.\n\nPeriodically, the existing maintainers curate a list of contributors that have\nshown regular activity on the project over the prior months. From this list,\nmaintainer candidates are selected and proposed in a pull request or a\nmaintainers communication channel.\n\nAfter a candidate has been announced to the maintainers, the existing\nmaintainers are given five business days to discuss the candidate, raise\nobjections and cast their vote. Votes may take place on the communication\nchannel or via pull request comment. Candidates must be approved by at least 66%\nof the current maintainers by adding their vote on the mailing list. The\nreviewer role has the same process but only requires 33% of current maintainers.\nOnly maintainers of the repository that the candidate is proposed for are\nallowed to vote.\n\nIf a candidate is approved, a maintainer will contact the candidate to invite\nthe candidate to open a pull request that adds the contributor to the\nMAINTAINERS file. The voting process may take place inside a pull request if a\nmaintainer has already discussed the candidacy with the candidate and a\nmaintainer is willing to be a sponsor by opening the pull request. The candidate\nbecomes a maintainer once the pull request is merged.\n\n## Stepping down policy\n\nLife priorities, interests, and passions can change. If you're a maintainer but\nfeel you must remove yourself from the list, inform other maintainers that you\nintend to step down, and if possible, help find someone to pick up your work.\nAt the very least, ensure your work can be continued where you left off.\n\nAfter you've informed other maintainers, create a pull request to remove\nyourself from the MAINTAINERS file.\n\n## Removal of inactive maintainers\n\nSimilar to the procedure for adding new maintainers, existing maintainers can\nbe removed from the list if they do not show significant activity on the\nproject. Periodically, the maintainers review the list of maintainers and their\nactivity over the last three months.\n\nIf a maintainer has shown insufficient activity over this period, a neutral\nperson will contact the maintainer to ask if they want to continue being\na maintainer. If the maintainer decides to step down as a maintainer, they\nopen a pull request to be removed from the MAINTAINERS file.\n\nIf the maintainer wants to remain a maintainer, but is unable to perform the\nrequired duties they can be removed with a vote of at least 66% of the current\nmaintainers. In this case, maintainers should first propose the change to\nmaintainers via the maintainers communication channel, then open a pull request\nfor voting. The voting period is five business days. The voting pull request\nshould not come as a surpise to any maintainer and any discussion related to\nperformance must not be discussed on the pull request.\n\n## How are decisions made?\n\nCNCF distribution is an open-source project with an open design philosophy.\nThis means that the repository is the source of truth for EVERY aspect of the\nproject, including its philosophy, design, road map, and APIs. *If it's part of\nthe project, it's in the repo. If it's in the repo, it's part of the project.*\n\nAs a result, all decisions can be expressed as changes to the repository. An\nimplementation change is a change to the source code. An API change is a change\nto the API specification. A philosophy change is a change to the philosophy\nmanifesto, and so on.\n\nAll decisions affecting distribution, big and small, follow the same 3 steps:\n\n* Step 1: Open a pull request. Anyone can do this.\n\n* Step 2: Discuss the pull request. Anyone can do this.\n\n* Step 3: Merge or refuse the pull request. Who does this depends on the nature\nof the pull request and which areas of the project it affects.\n\n## Helping contributors with the DCO\n\nThe [DCO or `Sign your work`](./CONTRIBUTING.md#sign-your-work)\nrequirement is not intended as a roadblock or speed bump.\n\nSome contributors are not as familiar with `git`, or have used a web\nbased editor, and thus asking them to `git commit --amend -s` is not the best\nway forward.\n\nIn this case, maintainers can update the commits based on clause (c) of the DCO.\nThe most trivial way for a contributor to allow the maintainer to do this, is to\nadd a DCO signature in a pull requests's comment, or a maintainer can simply\nnote that the change is sufficiently trivial that it does not substantially\nchange the existing contribution - i.e., a spelling change.\n\nWhen you add someone's DCO, please also add your own to keep a log.\n\n## I'm a maintainer. Should I make pull requests too?\n\nYes. Nobody should ever push to master directly. All changes should be\nmade through a pull request.\n\n## Conflict Resolution\n\nIf you have a technical dispute that you feel has reached an impasse with a\nsubset of the community, any contributor may open an issue, specifically\ncalling for a resolution vote of the current core maintainers to resolve the\ndispute. The same voting quorums required (2/3) for adding and removing\nmaintainers will apply to conflict resolution.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0595703125,
          "content": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 1.087890625,
          "content": "# Distribution project maintainers & reviewers\n#\n# See GOVERNANCE.md for maintainer versus reviewer roles\n#\n# MAINTAINERS (cncf-distribution-maintainers@lists.cncf.io)\n# GitHub ID, Name, Email address\n\"chrispat\",\"Chris Patterson\",\"chrispat@github.com\"\n\"clarkbw\",\"Bryan Clark\",\"clarkbw@github.com\"\n\"corhere\",\"Cory Snider\",\"csnider@mirantis.com\"\n\"deleteriousEffect\",\"Hayley Swimelar\",\"hswimelar@gitlab.com\"\n\"heww\",\"He Weiwei\",\"hweiwei@vmware.com\"\n\"joaodrp\",\"João Pereira\",\"jpereira@gitlab.com\"\n\"justincormack\",\"Justin Cormack\",\"justin.cormack@docker.com\"\n\"squizzi\",\"Kyle Squizzato\",\"ksquizz@gmail.com\"\n\"milosgajdos\",\"Milos Gajdos\",\"milosthegajdos@gmail.com\"\n\"sargun\",\"Sargun Dhillon\",\"sargun@sargun.me\"\n\"wy65701436\",\"Wang Yan\",\"wangyan@vmware.com\"\n\"stevelasker\",\"Steve Lasker\",\"steve.lasker@microsoft.com\"\n#\n# REVIEWERS\n# GitHub ID, Name, Email address\n\"dmcgowan\",\"Derek McGowan\",\"derek@mcgstyle.net\"\n\"stevvooe\",\"Stephen Day\",\"stevvooe@gmail.com\"\n\"thajeztah\",\"Sebastiaan van Stijn\",\"github@gone.nl\"\n\"DavidSpek\", \"David van der Spek\", \"vanderspek.david@gmail.com\"\n\"Jamstah\", \"James Hewitt\", \"james.hewitt@gmail.com\"\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 6.03125,
          "content": ".DEFAULT_GOAL := help\n\n# Root directory of the project (absolute path).\nROOTDIR=$(dir $(abspath $(lastword $(MAKEFILE_LIST))))\n\n# Used to populate version variable in main package.\nVERSION ?= $(shell git describe --match 'v[0-9]*' --dirty='.m' --always)\nREVISION ?= $(shell git rev-parse HEAD)$(shell if ! git diff --no-ext-diff --quiet --exit-code; then echo .m; fi)\n\n# default compose command\nCOMPOSE ?= docker compose\n\nPKG=github.com/distribution/distribution/v3\n\n# Project packages.\nPACKAGES=$(shell go list -tags \"${BUILDTAGS}\" ./... | grep -v /vendor/)\nINTEGRATION_PACKAGE=${PKG}\nCOVERAGE_PACKAGES=$(filter-out ${PKG}/registry/storage/driver/%,${PACKAGES})\n\nIMAGE_REPO ?= distribution/distribution\nIMAGE_TAG ?= latest\nIMAGE_NAME ?= $(IMAGE_REPO):$(IMAGE_TAG)\n\n# Project binaries.\nCOMMANDS=registry digest registry-api-descriptor-template\n\n# Allow turning off function inlining and variable registerization\nifeq (${DISABLE_OPTIMIZATION},true)\n\tGO_GCFLAGS=-gcflags \"-N -l\"\n\tVERSION:=\"$(VERSION)-noopt\"\nendif\n\nWHALE = \"+\"\n\n# Go files\n#\nTESTFLAGS_RACE=\nGOFILES=$(shell find . -type f -name '*.go')\nGO_TAGS=$(if $(BUILDTAGS),-tags \"$(BUILDTAGS)\",)\nGO_LDFLAGS=-ldflags '-extldflags \"-Wl,-z,now\" -s -w -X $(PKG)/version.version=$(VERSION) -X $(PKG)/version.revision=$(REVISION) -X $(PKG)/version.mainpkg=$(PKG) $(EXTRA_LDFLAGS)'\n\nBINARIES=$(addprefix bin/,$(COMMANDS))\n\n# Flags passed to `go test`\nTESTFLAGS ?= -v $(TESTFLAGS_RACE)\nTESTFLAGS_PARALLEL ?= 8\n\n.PHONY: all build binaries clean test test-race test-full integration test-coverage validate lint validate-git validate-vendor vendor mod-outdated image validate-authors authors\n.DEFAULT: all\n\n.PHONY: FORCE\nFORCE:\n\n##@ Build\n\n# This only needs to be generated by hand when cutting full releases.\nversion/version.go:\n\t@echo \"$(WHALE) $@\"\n\t./version/version.sh > $@\n\nbin/%: cmd/% FORCE ## build individual binary\n\t@echo \"$(WHALE) $@${BINARY_SUFFIX}\"\n\t@go build -buildmode=pie ${GO_GCFLAGS} ${GO_BUILD_FLAGS} -o $@${BINARY_SUFFIX} ${GO_LDFLAGS} --ldflags '-extldflags \"-Wl,-z,now\" -s' ${GO_TAGS}  ./$<\n\nbinaries: $(BINARIES) ## build binaries\n\t@echo \"$(WHALE) $@\"\n\nbuild: ## build go packages\n\t@echo \"$(WHALE) $@\"\n\t@go build -buildmode=pie ${GO_GCFLAGS} ${GO_BUILD_FLAGS} ${GO_LDFLAGS} --ldflags '-extldflags \"-Wl,-z,now\" -s' ${GO_TAGS} $(PACKAGES)\n\nimage: ## build docker image IMAGE_NAME=<name>\n\tdocker buildx bake --set \"*.tags=${IMAGE_NAME}\" image-local\n\nclean: ## clean up binaries\n\t@echo \"$(WHALE) $@\"\n\t@rm -f $(BINARIES)\n\nvendor: ## update vendor\n\t$(eval $@_TMP_OUT := $(shell mktemp -d -t buildx-output.XXXXXXXXXX))\n\tdocker buildx bake --set \"*.output=$($@_TMP_OUT)\" update-vendor\n\trm -rf ./vendor\n\tcp -R \"$($@_TMP_OUT)\"/out/* .\n\trm -rf $($@_TMP_OUT)/*\n\nmod-outdated: ## check outdated dependencies\n\tdocker buildx bake $@\n\nauthors: ## generate authors\n\tdocker buildx bake $@\n\n##@ Test\n\ntest: ## run tests, except integration test with test.short\n\t@echo \"$(WHALE) $@\"\n\t@go test ${GO_TAGS} -test.short ${TESTFLAGS} $(filter-out ${INTEGRATION_PACKAGE},${PACKAGES})\n\ntest-race: ## run tests, except integration test with test.short and race\n\t@echo \"$(WHALE) $@\"\n\t@go test ${GO_TAGS} -race -test.short ${TESTFLAGS} $(filter-out ${INTEGRATION_PACKAGE},${PACKAGES})\n\ntest-full: ## run tests, except integration tests\n\t@echo \"$(WHALE) $@\"\n\t@go test ${GO_TAGS} ${TESTFLAGS} $(filter-out ${INTEGRATION_PACKAGE},${PACKAGES})\n\nintegration: ## run integration tests\n\t@echo \"$(WHALE) $@\"\n\t@go test ${TESTFLAGS} -parallel ${TESTFLAGS_PARALLEL} ${INTEGRATION_PACKAGE}\n\ntest-coverage: ## run unit tests and generate test coverprofiles\n\t@echo \"$(WHALE) $@\"\n\t@rm -f coverage.txt\n\t@go test ${GO_TAGS} -i ${TESTFLAGS} $(filter-out ${INTEGRATION_PACKAGE},${COVERAGE_PACKAGES}) 2> /dev/null\n\t@( for pkg in $(filter-out ${INTEGRATION_PACKAGE},${COVERAGE_PACKAGES}); do \\\n\t\tgo test ${GO_TAGS} ${TESTFLAGS} \\\n\t\t\t-cover \\\n\t\t\t-coverprofile=profile.out \\\n\t\t\t-covermode=atomic $$pkg || exit; \\\n\t\tif [ -f profile.out ]; then \\\n\t\t\tcat profile.out >> coverage.txt; \\\n\t\t\trm profile.out; \\\n\t\tfi; \\\n\tdone )\n\n.PHONY: test-cloud-storage\ntest-cloud-storage: start-cloud-storage run-s3-tests stop-cloud-storage ## run cloud storage driver tests\n\n.PHONY: start-cloud-storage\nstart-cloud-storage: ## start local cloud storage (minio)\n\t$(COMPOSE) -f tests/docker-compose-storage.yml up minio minio-init -d\n\n.PHONY: stop-cloud-storage\nstop-cloud-storage: ## stop local cloud storage (minio)\n\t$(COMPOSE) -f tests/docker-compose-storage.yml down\n\n.PHONY: reset-cloud-storage\nreset-cloud-storage: ## reset (stop, delete, start) local cloud storage (minio)\n\t$(COMPOSE) -f tests/docker-compose-storage.yml down\n\t@mkdir -p tests/miniodata/distribution\n\t@rm -rf tests/miniodata/distribution/* tests/miniodata/.minio.sys\n\t$(COMPOSE) -f tests/docker-compose-storage.yml up minio minio-init -d\n\n.PHONY: run-s3-tests\nrun-s3-tests: start-cloud-storage ## run S3 storage driver integration tests\n\tAWS_ACCESS_KEY=distribution \\\n\tAWS_SECRET_KEY=password \\\n\tAWS_REGION=us-east-1 \\\n\tS3_BUCKET=images-local \\\n\tS3_ENCRYPT=false \\\n\tREGION_ENDPOINT=http://127.0.0.1:9000 \\\n\tS3_SECURE=false \\\n\tS3_ACCELERATE=false \\\n\tAWS_S3_FORCE_PATH_STYLE=true \\\n\tgo test ${TESTFLAGS} -count=1 ./registry/storage/driver/s3-aws/...\n\n.PHONY: start-e2e-s3-env\nstart-e2e-s3-env: ## starts E2E S3 storage test environment (S3, Redis, registry)\n\t$(COMPOSE) -f tests/docker-compose-e2e-cloud-storage.yml up -d\n\n.PHONY: stop-e2e-s3-env\nstop-e2e-s3-env: ## stops E2E S3 storage test environment (S3, Redis, registry)\n\t$(COMPOSE) -f tests/docker-compose-e2e-cloud-storage.yml down\n\n##@ Validate\n\nlint: ## run all linters\n\tdocker buildx bake $@\n\nvalidate: ## run all validators\n\tdocker buildx bake $@\n\nvalidate-git: ## validate git\n\tdocker buildx bake $@\n\nvalidate-vendor: ## validate vendor\n\tdocker buildx bake $@\n\nvalidate-authors: ## validate authors\n\tdocker buildx bake $@\n\n.PHONY: help\nhelp:\n\t@awk 'BEGIN {FS = \":.*##\"; printf \"\\nUsage:\\n  make \\033[36m\\033[0m\\n\"} /^[a-zA-Z0-9_\\/%-]+:.*?##/ { printf \"  \\033[36m%-27s\\033[0m %s\\n\", $$1, $$2 } /^##@/ { printf \"\\n\\033[1m%s\\033[0m\\n\", substr($$0, 5) } ' $(MAKEFILE_LIST)\n\t@echo \"\"\n\t@echo \"Go binaries:   $(BINARIES)\"\n\t@echo \"Docker image: $(IMAGE_NAME)\"\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.05078125,
          "content": "<p align=\"center\">\n<img style=\"align: center; padding-left: 10px; padding-right: 10px; padding-bottom: 10px;\" width=\"238px\" height=\"238px\" src=\"./distribution-logo.svg\" />\n</p>\n\n[![Build Status](https://github.com/distribution/distribution/workflows/build/badge.svg?branch=main&event=push)](https://github.com/distribution/distribution/actions/workflows/build.yml?query=workflow%3Abuild)\n[![GoDoc](https://img.shields.io/badge/go.dev-reference-007d9c?logo=go&logoColor=white&style=flat-square)](https://pkg.go.dev/github.com/distribution/distribution)\n[![License: Apache-2.0](https://img.shields.io/badge/License-Apache--2.0-blue.svg)](LICENSE)\n[![codecov](https://codecov.io/gh/distribution/distribution/branch/main/graph/badge.svg)](https://codecov.io/gh/distribution/distribution)\n[![FOSSA Status](https://app.fossa.com/api/projects/custom%2B162%2Fgithub.com%2Fdistribution%2Fdistribution.svg?type=shield)](https://app.fossa.com/projects/custom%2B162%2Fgithub.com%2Fdistribution%2Fdistribution?ref=badge_shield)\n[![OCI Conformance](https://github.com/distribution/distribution/workflows/conformance/badge.svg)](https://github.com/distribution/distribution/actions?query=workflow%3Aconformance)\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/distribution/distribution/badge)](https://securityscorecards.dev/viewer/?uri=github.com/distribution/distribution)\n\nThe toolset to pack, ship, store, and deliver content.\n\nThis repository's main product is the Open Source Registry implementation\nfor storing and distributing container images and other content using the\n[OCI Distribution Specification](https://github.com/opencontainers/distribution-spec).\nThe goal of this project is to provide a simple, secure, and scalable base\nfor building a large scale registry solution or running a simple private registry.\nIt is a core library for many registry operators including Docker Hub, GitHub Container Registry,\nGitLab Container Registry and DigitalOcean Container Registry, as well as the CNCF Harbor\nProject, and VMware Harbor Registry.\n\nThis repository contains the following components:\n\n|**Component**       |Description                                                                                                                                                                                         |\n|--------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **registry**       | An implementation of the [OCI Distribution Specification](https://github.com/opencontainers/distribution-spec).                                                                                                 |\n| **libraries**      | A rich set of libraries for interacting with distribution components. Please see [godoc](https://pkg.go.dev/github.com/distribution/distribution) for details. **Note**: The interfaces for these libraries are **unstable**. |\n| **documentation**  | Full documentation is available at [https://distribution.github.io/distribution](https://distribution.github.io/distribution/).\n\n### How does this integrate with Docker, containerd, and other OCI client?\n\nClients implement against the OCI specification and communicate with the\nregistry using HTTP. This project contains a client implementation which\nis currently in use by Docker, however, it is deprecated for the\n[implementation in containerd](https://github.com/containerd/containerd/tree/master/remotes/docker)\nand will not support new features.\n\n### What are the long term goals of the Distribution project?\n\nThe _Distribution_ project has the further long term goal of providing a\nsecure tool chain for distributing content. The specifications, APIs and tools\nshould be as useful with Docker as they are without.\n\nOur goal is to design a professional grade and extensible content distribution\nsystem that allow users to:\n\n* Enjoy an efficient, secured and reliable way to store, manage, package and\n  exchange content\n* Hack/roll their own on top of healthy open-source components\n* Implement their own home made solution through good specs, and solid\n  extensions mechanism.\n\n## Contribution\n\nPlease see [CONTRIBUTING.md](CONTRIBUTING.md) for details on how to contribute\nissues, fixes, and patches to this project. If you are contributing code, see\nthe instructions for [building a development environment](BUILDING.md).\n\n## Communication\n\nFor async communication and long running discussions please use issues and pull requests on the github repo.\nThis will be the best place to discuss design and implementation.\n\nFor sync communication we have a #distribution channel in the [CNCF Slack](https://slack.cncf.io/)\nthat everyone is welcome to join and chat about development.\n\n## Licenses\n\nThe distribution codebase is released under the [Apache 2.0 license](LICENSE).\nThe README.md file, and files in the \"docs\" folder are licensed under the\nCreative Commons Attribution 4.0 International License. You may obtain a\ncopy of the license, titled CC-BY-4.0, at http://creativecommons.org/licenses/by/4.0/.\n"
        },
        {
          "name": "ROADMAP.md",
          "type": "blob",
          "size": 0.8955078125,
          "content": "# Roadmap\n\nThe Distribution project aims to support the following use cases\n\n1. A library to support building highly scalable and reliable container registries,\nthat can be customised for different backends and use cases. This is used by many\nof the largest registry operators, including Docker Hub, GitHub, GitLab, Harbor\nand Digital Ocean.\n2. A reference implementation of the OCI registry standards, and an easy way to\nexperiment with new propsals in the registry space as these standards change.\n3. Distributed registry tools, such as caching registries and local registries\nthat can be used within clusters for performance and locality use cases.\n\nAs every container application needs at least one registry as part of its infrastructure,\nand more cloud native artifacts are using registries as the basis of their distribution,\nhaving a widely used and supported open source registry is important for innovation.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.6640625,
          "content": "# Security Policy\n\n## Supported Versions\n\nThese versions are currently receiving security updates.\n\n| Version      | Supported          | Notes |\n| ------------ | ------------------ | ----- |\n| 3.0.x (main) | :white_check_mark: | This is the next major version and has not yet been released. |\n| 2.8.x        | :white_check_mark: | This is the latest released version. |\n| < 2.8        | :x:                | |\n\n## Reporting a Vulnerability\n\nThe maintainers take security seriously. If you discover a security issue, please bring it to their attention right away!\n\nPlease DO NOT file a public issue, instead send your report privately to cncf-distribution-security@lists.cncf.io.\n"
        },
        {
          "name": "blobs.go",
          "type": "blob",
          "size": 8.3359375,
          "content": "package distribution\n\nimport (\n\t\"context\"\n\t\"errors\"\n\t\"fmt\"\n\t\"io\"\n\t\"net/http\"\n\t\"time\"\n\n\t\"github.com/distribution/reference\"\n\t\"github.com/opencontainers/go-digest\"\n\tv1 \"github.com/opencontainers/image-spec/specs-go/v1\"\n)\n\nvar (\n\t// ErrBlobExists returned when blob already exists\n\tErrBlobExists = errors.New(\"blob exists\")\n\n\t// ErrBlobDigestUnsupported when blob digest is an unsupported version.\n\tErrBlobDigestUnsupported = errors.New(\"unsupported blob digest\")\n\n\t// ErrBlobUnknown when blob is not found.\n\tErrBlobUnknown = errors.New(\"unknown blob\")\n\n\t// ErrBlobUploadUnknown returned when upload is not found.\n\tErrBlobUploadUnknown = errors.New(\"blob upload unknown\")\n\n\t// ErrBlobInvalidLength returned when the blob has an expected length on\n\t// commit, meaning mismatched with the descriptor or an invalid value.\n\tErrBlobInvalidLength = errors.New(\"blob invalid length\")\n)\n\n// ErrBlobInvalidDigest returned when digest check fails.\ntype ErrBlobInvalidDigest struct {\n\tDigest digest.Digest\n\tReason error\n}\n\nfunc (err ErrBlobInvalidDigest) Error() string {\n\treturn fmt.Sprintf(\"invalid digest for referenced layer: %v, %v\",\n\t\terr.Digest, err.Reason)\n}\n\n// ErrBlobMounted returned when a blob is mounted from another repository\n// instead of initiating an upload session.\ntype ErrBlobMounted struct {\n\tFrom       reference.Canonical\n\tDescriptor v1.Descriptor\n}\n\nfunc (err ErrBlobMounted) Error() string {\n\treturn fmt.Sprintf(\"blob mounted from: %v to: %v\",\n\t\terr.From, err.Descriptor)\n}\n\n// Descriptor describes targeted content. Used in conjunction with a blob\n// store, a descriptor can be used to fetch, store and target any kind of\n// blob. The struct also describes the wire protocol format. Fields should\n// only be added but never changed.\n//\n// Descriptor is an alias for [v1.Descriptor].\ntype Descriptor = v1.Descriptor\n\n// BlobStatter makes blob descriptors available by digest. The service may\n// provide a descriptor of a different digest if the provided digest is not\n// canonical.\ntype BlobStatter interface {\n\t// Stat provides metadata about a blob identified by the digest. If the\n\t// blob is unknown to the describer, ErrBlobUnknown will be returned.\n\tStat(ctx context.Context, dgst digest.Digest) (v1.Descriptor, error)\n}\n\n// BlobDeleter enables deleting blobs from storage.\ntype BlobDeleter interface {\n\tDelete(ctx context.Context, dgst digest.Digest) error\n}\n\n// BlobEnumerator enables iterating over blobs from storage\ntype BlobEnumerator interface {\n\tEnumerate(ctx context.Context, ingester func(dgst digest.Digest) error) error\n}\n\n// BlobDescriptorService manages metadata about a blob by digest. Most\n// implementations will not expose such an interface explicitly. Such mappings\n// should be maintained by interacting with the BlobIngester. Hence, this is\n// left off of BlobService and BlobStore.\ntype BlobDescriptorService interface {\n\tBlobStatter\n\n\t// SetDescriptor assigns the descriptor to the digest. The provided digest and\n\t// the digest in the descriptor must map to identical content but they may\n\t// differ on their algorithm. The descriptor must have the canonical\n\t// digest of the content and the digest algorithm must match the\n\t// annotators canonical algorithm.\n\t//\n\t// Such a facility can be used to map blobs between digest domains, with\n\t// the restriction that the algorithm of the descriptor must match the\n\t// canonical algorithm (ie sha256) of the annotator.\n\tSetDescriptor(ctx context.Context, dgst digest.Digest, desc v1.Descriptor) error\n\n\t// Clear enables descriptors to be unlinked\n\tClear(ctx context.Context, dgst digest.Digest) error\n}\n\n// BlobDescriptorServiceFactory creates middleware for BlobDescriptorService.\ntype BlobDescriptorServiceFactory interface {\n\tBlobAccessController(svc BlobDescriptorService) BlobDescriptorService\n}\n\n// BlobProvider describes operations for getting blob data.\ntype BlobProvider interface {\n\t// Get returns the entire blob identified by digest along with the descriptor.\n\tGet(ctx context.Context, dgst digest.Digest) ([]byte, error)\n\n\t// Open provides an [io.ReadSeekCloser] to the blob identified by the provided\n\t// descriptor. If the blob is not known to the service, an error is returned.\n\tOpen(ctx context.Context, dgst digest.Digest) (io.ReadSeekCloser, error)\n}\n\n// BlobServer can serve blobs via http.\ntype BlobServer interface {\n\t// ServeBlob attempts to serve the blob, identified by dgst, via http. The\n\t// service may decide to redirect the client elsewhere or serve the data\n\t// directly.\n\t//\n\t// This handler only issues successful responses, such as 2xx or 3xx,\n\t// meaning it serves data or issues a redirect. If the blob is not\n\t// available, an error will be returned and the caller may still issue a\n\t// response.\n\t//\n\t// The implementation may serve the same blob from a different digest\n\t// domain. The appropriate headers will be set for the blob, unless they\n\t// have already been set by the caller.\n\tServeBlob(ctx context.Context, w http.ResponseWriter, r *http.Request, dgst digest.Digest) error\n}\n\n// BlobIngester ingests blob data.\ntype BlobIngester interface {\n\t// Put inserts the content p into the blob service, returning a descriptor\n\t// or an error.\n\tPut(ctx context.Context, mediaType string, p []byte) (v1.Descriptor, error)\n\n\t// Create allocates a new blob writer to add a blob to this service. The\n\t// returned handle can be written to and later resumed using an opaque\n\t// identifier. With this approach, one can Close and Resume a BlobWriter\n\t// multiple times until the BlobWriter is committed or cancelled.\n\tCreate(ctx context.Context, options ...BlobCreateOption) (BlobWriter, error)\n\n\t// Resume attempts to resume a write to a blob, identified by an id.\n\tResume(ctx context.Context, id string) (BlobWriter, error)\n}\n\n// BlobCreateOption is a general extensible function argument for blob creation\n// methods. A BlobIngester may choose to honor any or none of the given\n// BlobCreateOptions, which can be specific to the implementation of the\n// BlobIngester receiving them.\n// TODO (brianbland): unify this with ManifestServiceOption in the future\ntype BlobCreateOption interface {\n\tApply(interface{}) error\n}\n\n// CreateOptions is a collection of blob creation modifiers relevant to general\n// blob storage intended to be configured by the BlobCreateOption.Apply method.\ntype CreateOptions struct {\n\tMount struct {\n\t\tShouldMount bool\n\t\tFrom        reference.Canonical\n\t\t// Stat allows to pass precalculated descriptor to link and return.\n\t\t// Blob access check will be skipped if set.\n\t\tStat *v1.Descriptor\n\t}\n}\n\n// BlobWriter provides a handle for inserting data into a blob store.\n// Instances should be obtained from BlobWriteService.Writer and\n// BlobWriteService.Resume. If supported by the store, a writer can be\n// recovered with the id.\ntype BlobWriter interface {\n\tio.WriteCloser\n\tio.ReaderFrom\n\n\t// Size returns the number of bytes written to this blob.\n\tSize() int64\n\n\t// ID returns the identifier for this writer. The ID can be used with the\n\t// Blob service to later resume the write.\n\tID() string\n\n\t// StartedAt returns the time this blob write was started.\n\tStartedAt() time.Time\n\n\t// Commit completes the blob writer process. The content is verified\n\t// against the provided provisional descriptor, which may result in an\n\t// error. Depending on the implementation, written data may be validated\n\t// against the provisional descriptor fields. If MediaType is not present,\n\t// the implementation may reject the commit or assign \"application/octet-\n\t// stream\" to the blob. The returned descriptor may have a different\n\t// digest depending on the blob store, referred to as the canonical\n\t// descriptor.\n\tCommit(ctx context.Context, provisional v1.Descriptor) (canonical v1.Descriptor, err error)\n\n\t// Cancel ends the blob write without storing any data and frees any\n\t// associated resources. Any data written thus far will be lost. Cancel\n\t// implementations should allow multiple calls even after a commit that\n\t// result in a no-op. This allows use of Cancel in a defer statement,\n\t// increasing the assurance that it is correctly called.\n\tCancel(ctx context.Context) error\n}\n\n// BlobService combines the operations to access, read and write blobs. This\n// can be used to describe remote blob services.\ntype BlobService interface {\n\tBlobStatter\n\tBlobProvider\n\tBlobIngester\n}\n\n// BlobStore represent the entire suite of blob related operations. Such an\n// implementation can access, read, write, delete and serve blobs.\ntype BlobStore interface {\n\tBlobService\n\tBlobServer\n\tBlobDeleter\n}\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "configuration",
          "type": "tree",
          "content": null
        },
        {
          "name": "digestset",
          "type": "tree",
          "content": null
        },
        {
          "name": "distribution-logo.svg",
          "type": "blob",
          "size": 8.564453125,
          "content": "<svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 564.27793 654.82002\"><defs><style>.cls-1{fill:#416ba9;}.cls-2{fill:#74c3d5;}</style></defs><path class=\"cls-1\" d=\"M17.48582,567.55941c0-3.66375,2.2168-4.91716,4.91609-4.91716H36.66877c18.70153,0,28.24476,9.06127,28.24476,33.64387,0,22.26771-7.51889,35.57065-27.95526,35.57065H22.40191c-2.69929,0-4.91609-1.25341-4.91609-4.91609Zm20.33987,49.741c7.61539,0,10.60365-6.94043,10.60365-20.72586,0-15.13429-3.85568-19.376-10.70015-19.376H33.97v40.10182Z\"/><path class=\"cls-1\" d=\"M72.43613,567.55941c0-3.66375,2.21681-4.91716,4.9161-4.91716h6.36251c2.69876,0,4.91609,1.25341,4.91609,4.91716v59.38127c0,3.66268-2.21733,4.91609-4.91609,4.91609H77.35223c-2.69929,0-4.9161-1.25341-4.9161-4.91609Z\"/><path class=\"cls-1\" d=\"M99.718,613.05875l5.78405-1.06042c4.33764-.77092,4.53063,1.15692,5.78352,3.85674a6.70953,6.70953,0,0,0,6.5555,3.95218c3.56672,0,6.26548-1.83134,6.26548-5.59158,0-12.82046-27.6663-11.08561-27.6663-34.31724,0-10.79718,7.80839-18.1236,20.43637-18.1236,11.08614,0,16.96615,4.8196,20.05091,12.918.96445,2.31277,1.44641,4.7231-2.98826,5.59052l-5.20559,1.06042c-3.95218.77092-4.33764-1.06042-6.073-3.66269a6.39679,6.39679,0,0,0-5.49456-3.08475c-3.18125,0-5.20559,1.83134-5.20559,4.7231,0,12.24252,27.56981,10.60418,27.56981,33.73931,0,12.532-8.77231,19.66545-22.36422,19.66545-11.47159,0-17.93007-4.43467-20.82236-14.07387C95.57286,616.24,95.1874,613.92617,99.718,613.05875Z\"/><path class=\"cls-1\" d=\"M154.86187,576.62068h-8.09735c-3.66321,0-4.91662-2.21734-4.91662-4.91716v-4.14411c0-2.69983,1.25341-4.91716,4.91662-4.91716H179.058c3.66321,0,4.91609,2.21733,4.91609,4.91716v4.14411c0,2.69982-1.25288,4.91716-4.91609,4.91716h-8.09788v50.32c0,3.66268-2.21681,4.91609-4.9161,4.91609h-6.266c-2.69876,0-4.9161-1.25341-4.9161-4.91609Z\"/><path class=\"cls-1\" d=\"M189.76022,567.55941c0-3.66375,2.21681-4.91716,4.9161-4.91716h16.2912c15.13481,0,23.03969,5.68808,23.03969,20.05144,0,8.38684-3.27775,13.68787-8.29034,16.77369l9.35076,27.76173c1.34938,4.04974-.96445,4.62766-3.37425,4.62766h-8.67581c-2.89176,0-4.53063-1.92783-5.30208-4.7231L211.546,605.92532h-5.68755v21.01536c0,3.66268-2.2168,4.91609-4.91609,4.91609h-6.266c-2.69929,0-4.9161-1.25341-4.9161-4.91609Zm20.14688,25.35246c4.14517,0,7.61592-1.6394,7.61592-8.57984,0-7.61486-3.37425-8.19384-7.22993-8.19384h-4.43467v16.77368Z\"/><path class=\"cls-1\" d=\"M241.91422,567.55941c0-3.66375,2.2168-4.91716,4.91609-4.91716h6.36251c2.69876,0,4.9161,1.25341,4.9161,4.91716v59.38127c0,3.66268-2.21734,4.91609-4.9161,4.91609h-6.36251c-2.69929,0-4.91609-1.25341-4.91609-4.91609Z\"/><path class=\"cls-1\" d=\"M267.75024,567.55941c0-3.66375,2.2168-4.91716,4.91609-4.91716h14.94182c16.77316,0,24.09958,5.49508,24.09958,18.31659,0,6.94044-3.08475,11.953-8.96477,14.5553v.193c6.74744,2.31384,10.41065,7.13343,10.41065,15.80977,0,16.58069-11.3751,20.33987-25.449,20.33987H272.66633c-2.69929,0-4.91609-1.25341-4.91609-4.91609Zm20.72533,22.5572c4.33817,0,6.84447-2.12083,6.84447-7.32642,0-4.91716-2.79579-6.36251-6.84447-6.36251h-4.9161v13.68893Zm.386,27.95473c5.88,0,7.90436-2.40926,7.90436-7.80785,0-5.88-3.18126-7.80786-7.80839-7.80786h-5.39806v15.61571Z\"/><path class=\"cls-1\" d=\"M320.09776,567.55941c0-3.66375,2.21733-4.91716,4.91662-4.91716h6.362c2.69929,0,4.91663,1.25341,4.91663,4.91716v43.282c0,5.78457,2.3133,8.38684,6.748,8.38684,4.43413,0,7.13343-2.60227,7.13343-8.38684v-43.282c0-3.66375,2.21733-4.91716,4.91609-4.91716H361.26c2.6993,0,4.91663,1.25341,4.91663,4.91716v41.06573c0,15.80871-7.13343,24.00256-23.42516,24.00256-16.0982,0-22.6537-8.19385-22.6537-24.00256Z\"/><path class=\"cls-1\" d=\"M384.59236,576.62068H376.495c-3.66322,0-4.91663-2.21734-4.91663-4.91716v-4.14411c0-2.69983,1.25341-4.91716,4.91663-4.91716h32.29343c3.66321,0,4.91609,2.21733,4.91609,4.91716v4.14411c0,2.69982-1.25288,4.91716-4.91609,4.91716H400.6911v50.32c0,3.66268-2.21734,4.91609-4.91663,4.91609h-6.266c-2.69929,0-4.9161-1.25341-4.9161-4.91609Z\"/><path class=\"cls-1\" d=\"M419.49071,567.55941c0-3.66375,2.21681-4.91716,4.9161-4.91716h6.36251c2.69876,0,4.91609,1.25341,4.91609,4.91716v59.38127c0,3.66268-2.21733,4.91609-4.91609,4.91609h-6.36251c-2.69929,0-4.9161-1.25341-4.9161-4.91609Z\"/><path class=\"cls-1\" d=\"M443.20536,597.34654c0-21.30485,5.59106-35.57171,24.48505-35.57171s24.48505,14.26686,24.48505,35.57171c0,22.07472-6.84394,35.37766-24.485,35.37766S443.20536,619.42126,443.20536,597.34654Zm32.48643,0c0-16.29226-2.12083-22.26877-8.00138-22.26877-5.88,0-8.00085,5.97651-8.00085,22.26877,0,17.06212,2.4098,22.17121,8.00085,22.17121C473.378,619.51775,475.69179,614.40866,475.69179,597.34654Z\"/><path class=\"cls-1\" d=\"M499.69859,567.55941c0-3.66375,2.2168-4.91716,4.9161-4.91716h6.941a7.56728,7.56728,0,0,1,6.84394,4.43467l13.207,29.88363h.19247V567.55941c0-3.66375,2.21733-4.91716,4.91662-4.91716h4.62714c2.69876,0,4.91609,1.25341,4.91609,4.91716v59.38127c0,3.66268-2.21733,4.91609-4.91609,4.91609h-5.68756c-2.98878,0-4.72363-1.83134-5.977-4.43466L514.15792,593.5863h-.19247v33.35438c0,3.66268-2.21733,4.91609-4.91663,4.91609h-4.43413c-2.6993,0-4.9161-1.25341-4.9161-4.91609Z\"/><g id=\"F1L4Xu\"><path class=\"cls-2\" d=\"M461.28162,365.26377c14.626-14.99573,31.51073-27.88581,43.901-45.3001,23.6055-33.17709,21.5881-53.98611-9.08528-79.89549-5.54727-4.68571-8.18237-7.96252-5.187-15.251,2.57641-6.26934,3.76528-13.21711,4.83156-19.981,5.90314-37.44659-11.00082-60.70078-48.64828-63.33267-13.137-.91842-16.45015-5.43062-19.21754-16.935-9.30387-38.67663-34.59038-53.67167-74.13662-44.585-10.18443,2.3401-17.05741,2.2529-24.8593-6.77926-30.175-34.93317-59.58084-35.22646-91.95222-.348-9.64337,10.39025-15.6225,11.83918-28.62783,5.4055-32.90341-16.27713-59.8387-3.10046-69.78437,35.47712-4.6848,18.17164-11.36854,26.3489-30.24471,30.1582-31.33028,6.32259-44.78933,33.5759-35.57532,69.531,3.76252,14.68215,4.6826,23.43655-10.28992,33.26423-22.74913,14.93216-25.22052,35.33713-11.0953,59.39875a163.06863,163.06863,0,0,0,18.46085,24.68707c6.40258,7.28037,13.94521,13.55817,19.80434,21.482C65.25053,338.04809,43.116,321.28746,27.8598,297.29993c-17.05057-26.80876-13.40609-48.15088,13.33187-65.26212,13.64688-8.73344,14.87507-15.92347,10.65871-30.93464-12.7269-45.31048,5.12054-71.29348,52.09339-78.34017,9.12234-1.36851,13.24368-4.37134,14.93358-13.09156a120.37358,120.37358,0,0,1,6.91928-23.66458C140.26672,51.59355,166.89048,40.64934,200.93587,56.76c12.995,6.14933,20.16447,5.77862,30.68022-5.2998C268.21035,12.90788,301.23887,13.957,336.089,53.95609c7.03437,8.07364,13.32723,7.58749,21.51782,5.54845,49.26567-12.26462,82.34232,9.66738,86.80352,52.02378.85563,8.12375,4.89151,12.49189,13.59822,11.06745a9.08058,9.08058,0,0,1,2.06083.01162c48.42775,3.32745,67.90447,29.37216,55.65225,76.28488-3.68675,14.11627-5.266,23.35647,9.83168,33.3918,24.025,15.96919,26.43605,40.908,10.89058,67.22194C523.519,321.384,492.3391,349.49056,461.28162,365.26377Z\"/><path class=\"cls-2\" d=\"M222.21166,412.15994c-43.3335,8.71069-88.628,7.98395-130.77907,28.38523,94.59324,34.57588,265.86321,39.32494,381.28659.87883-20.80256-13.03877-43.25235-15.46757-64.96771-19.52875-21.46582-4.01455-43.21049-6.53754-65.22855-9.773,2.32155-9.0906,5.71941-13.26155,14.6818-11.53506,34.9755,6.73747,70.6065,10.43856,104.30053,22.96341,8.18218,3.04152,18.89124,4.40911,19.86455,15.15614,1.09622,12.10448-6.10692,24.09739-16.79915,25.67409-30.25013,4.46064-56.38559,26.36212-84.9133,26.506-28.47048.14371-52.82989-.52977-79.492,14.17476-20.18156,11.13047-46.332,2.83194-64.16335-15.45408-6.83775-7.01216-11.13794-6.37864-19.02114-2.85829-23.91278,10.67842-47.24546,8.5124-67.31614-8.79886-7.10279-6.12627-13.27536-7.629-22.06165-6.68907a44.08867,44.08867,0,0,1-27.74743-5.86122C89.8179,459.38315,82.0507,451.437,82.898,439.18832c.77048-11.13889,11.49627-12.35089,19.55689-15.40536,33.62848-12.74306,69.18754-16.82889,104.26785-23.14551C215.75685,399.01074,219.15407,403.38339,222.21166,412.15994Z\"/></g><rect class=\"cls-1\" x=\"157.9184\" y=\"278.28554\" width=\"63.75238\" height=\"63.75238\"/><rect class=\"cls-1\" x=\"241.008\" y=\"278.28554\" width=\"63.75238\" height=\"63.75238\"/><rect class=\"cls-1\" x=\"157.9184\" y=\"361.37514\" width=\"63.75238\" height=\"63.75238\"/><rect class=\"cls-1\" x=\"367.09657\" y=\"153.06724\" width=\"63.75176\" height=\"63.75177\" transform=\"translate(-13.91822 336.28471) rotate(-45)\"/><polygon class=\"cls-1\" points=\"239.799 221.785 239.799 222.389 296.3 250.79 325.004 193.987 268.201 165.284 239.799 221.785\"/><rect class=\"cls-1\" x=\"341.49858\" y=\"264.8759\" width=\"63.75384\" height=\"63.75383\" transform=\"translate(-59.8512 496.2174) rotate(-63.19922)\"/><rect class=\"cls-1\" x=\"157.9184\" y=\"195.19594\" width=\"63.75238\" height=\"63.75238\"/><rect class=\"cls-1\" x=\"241.008\" y=\"361.37514\" width=\"63.75238\" height=\"63.75238\"/><rect class=\"cls-1\" x=\"324.39973\" y=\"361.37514\" width=\"63.75238\" height=\"63.75238\"/></svg>"
        },
        {
          "name": "doc.go",
          "type": "blob",
          "size": 0.3056640625,
          "content": "// Package distribution will define the interfaces for the components of\n// docker distribution. The goal is to allow users to reliably package, ship\n// and store content related to container images.\n//\n// This is currently a work in progress. More details are available in the\n// README.md.\npackage distribution\n"
        },
        {
          "name": "docker-bake.hcl",
          "type": "blob",
          "size": 2.3154296875,
          "content": "group \"default\" {\n  targets = [\"image-local\"]\n}\n\ngroup \"validate\" {\n  targets = [\"lint\", \"validate-git\", \"validate-vendor\"]\n}\n\ntarget \"lint\" {\n  dockerfile = \"./dockerfiles/lint.Dockerfile\"\n  output = [\"type=cacheonly\"]\n}\n\nvariable \"COMMIT_RANGE\" {\n  default = \"\"\n}\ntarget \"validate-git\" {\n  dockerfile = \"./dockerfiles/git.Dockerfile\"\n  target = \"validate\"\n  args = {\n    COMMIT_RANGE = COMMIT_RANGE\n    BUILDKIT_CONTEXT_KEEP_GIT_DIR = 1\n  }\n  output = [\"type=cacheonly\"]\n}\n\ntarget \"validate-vendor\" {\n  dockerfile = \"./dockerfiles/vendor.Dockerfile\"\n  target = \"validate\"\n  output = [\"type=cacheonly\"]\n}\n\ntarget \"update-vendor\" {\n  dockerfile = \"./dockerfiles/vendor.Dockerfile\"\n  target = \"update\"\n  output = [\".\"]\n}\n\ntarget \"mod-outdated\" {\n  dockerfile = \"./dockerfiles/vendor.Dockerfile\"\n  target = \"outdated\"\n  no-cache-filter = [\"outdated\"]\n  output = [\"type=cacheonly\"]\n}\n\ntarget \"binary\" {\n  target = \"binary\"\n  output = [\"./bin\"]\n}\n\ntarget \"artifact\" {\n  target = \"artifact\"\n  output = [\"./bin\"]\n}\n\ntarget \"artifact-all\" {\n  inherits = [\"artifact\"]\n  platforms = [\n    \"linux/amd64\",\n    \"linux/arm/v6\",\n    \"linux/arm/v7\",\n    \"linux/arm64\",\n    \"linux/ppc64le\",\n    \"linux/s390x\",\n    \"linux/riscv64\"\n  ]\n}\n\n// Special target: https://github.com/docker/metadata-action#bake-definition\ntarget \"docker-metadata-action\" {\n  tags = [\"registry:local\"]\n}\n\ntarget \"image\" {\n  inherits = [\"docker-metadata-action\"]\n}\n\ntarget \"image-local\" {\n  inherits = [\"image\"]\n  output = [\"type=docker\"]\n}\n\ntarget \"image-all\" {\n  inherits = [\"image\"]\n  platforms = [\n    \"linux/amd64\",\n    \"linux/arm/v6\",\n    \"linux/arm/v7\",\n    \"linux/arm64\",\n    \"linux/ppc64le\",\n    \"linux/s390x\",\n    \"linux/riscv64\"\n  ]\n}\n\ntarget \"_common_docs\" {\n  dockerfile = \"./dockerfiles/docs.Dockerfile\"\n}\n\ntarget \"docs-export\" {\n  inherits = [\"_common_docs\"]\n  target = \"out\"\n  output = [\"type=local,dest=build/docs\"]\n}\n\ntarget \"docs-image\" {\n  inherits = [\"_common_docs\"]\n  target = \"server\"\n  output = [\"type=docker\"]\n  tags = [\"registry-docs:local\"]\n}\n\ntarget \"docs-test\" {\n  inherits = [\"_common_docs\"]\n  target = \"test\"\n  output = [\"type=cacheonly\"]\n}\n\ntarget \"authors\" {\n  dockerfile = \"./dockerfiles/authors.Dockerfile\"\n  target = \"update\"\n  output = [\".\"]\n}\n\ntarget \"validate-authors\" {\n  dockerfile = \"./dockerfiles/authors.Dockerfile\"\n  target = \"validate\"\n  output = [\"type=cacheonly\"]\n}\n"
        },
        {
          "name": "dockerfiles",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "errors.go",
          "type": "blob",
          "size": 3.4267578125,
          "content": "package distribution\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com/opencontainers/go-digest\"\n)\n\n// ErrAccessDenied is returned when an access to a requested resource is\n// denied.\nvar ErrAccessDenied = errors.New(\"access denied\")\n\n// ErrManifestNotModified is returned when a conditional manifest GetByTag\n// returns nil due to the client indicating it has the latest version\nvar ErrManifestNotModified = errors.New(\"manifest not modified\")\n\n// ErrUnsupported is returned when an unimplemented or unsupported action is\n// performed\nvar ErrUnsupported = errors.New(\"operation unsupported\")\n\n// ErrSchemaV1Unsupported is returned when a client tries to upload a schema v1\n// manifest but the registry is configured to reject it\nvar ErrSchemaV1Unsupported = errors.New(\"manifest schema v1 unsupported\")\n\n// ErrTagUnknown is returned if the given tag is not known by the tag service\ntype ErrTagUnknown struct {\n\tTag string\n}\n\nfunc (err ErrTagUnknown) Error() string {\n\treturn fmt.Sprintf(\"unknown tag=%s\", err.Tag)\n}\n\n// ErrRepositoryUnknown is returned if the named repository is not known by\n// the registry.\ntype ErrRepositoryUnknown struct {\n\tName string\n}\n\nfunc (err ErrRepositoryUnknown) Error() string {\n\treturn fmt.Sprintf(\"unknown repository name=%s\", err.Name)\n}\n\n// ErrRepositoryNameInvalid should be used to denote an invalid repository\n// name. Reason may set, indicating the cause of invalidity.\ntype ErrRepositoryNameInvalid struct {\n\tName   string\n\tReason error\n}\n\nfunc (err ErrRepositoryNameInvalid) Error() string {\n\treturn fmt.Sprintf(\"repository name %q invalid: %v\", err.Name, err.Reason)\n}\n\n// ErrManifestUnknown is returned if the manifest is not known by the\n// registry.\ntype ErrManifestUnknown struct {\n\tName string\n\tTag  string\n}\n\nfunc (err ErrManifestUnknown) Error() string {\n\treturn fmt.Sprintf(\"unknown manifest name=%s tag=%s\", err.Name, err.Tag)\n}\n\n// ErrManifestUnknownRevision is returned when a manifest cannot be found by\n// revision within a repository.\ntype ErrManifestUnknownRevision struct {\n\tName     string\n\tRevision digest.Digest\n}\n\nfunc (err ErrManifestUnknownRevision) Error() string {\n\treturn fmt.Sprintf(\"unknown manifest name=%s revision=%s\", err.Name, err.Revision)\n}\n\n// ErrManifestUnverified is returned when the registry is unable to verify\n// the manifest.\ntype ErrManifestUnverified struct{}\n\nfunc (ErrManifestUnverified) Error() string {\n\treturn \"unverified manifest\"\n}\n\n// ErrManifestVerification provides a type to collect errors encountered\n// during manifest verification. Currently, it accepts errors of all types,\n// but it may be narrowed to those involving manifest verification.\ntype ErrManifestVerification []error\n\nfunc (errs ErrManifestVerification) Error() string {\n\tparts := make([]string, 0, len(errs))\n\tfor _, err := range errs {\n\t\tparts = append(parts, err.Error())\n\t}\n\n\treturn fmt.Sprintf(\"errors verifying manifest: %v\", strings.Join(parts, \",\"))\n}\n\n// ErrManifestBlobUnknown returned when a referenced blob cannot be found.\ntype ErrManifestBlobUnknown struct {\n\tDigest digest.Digest\n}\n\nfunc (err ErrManifestBlobUnknown) Error() string {\n\treturn fmt.Sprintf(\"unknown blob %v on manifest\", err.Digest)\n}\n\n// ErrManifestNameInvalid should be used to denote an invalid manifest\n// name. Reason may set, indicating the cause of invalidity.\ntype ErrManifestNameInvalid struct {\n\tName   string\n\tReason error\n}\n\nfunc (err ErrManifestNameInvalid) Error() string {\n\treturn fmt.Sprintf(\"manifest name %q invalid: %v\", err.Name, err.Reason)\n}\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 6.185546875,
          "content": "module github.com/distribution/distribution/v3\n\ngo 1.22.7\n\ntoolchain go1.23.4\n\nrequire (\n\tcloud.google.com/go/storage v1.45.0\n\tgithub.com/AdaLogics/go-fuzz-headers v0.0.0-20221103172237-443f56ff4ba8\n\tgithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.11.1\n\tgithub.com/Azure/azure-sdk-for-go/sdk/azidentity v1.6.0\n\tgithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob v1.0.0\n\tgithub.com/aws/aws-sdk-go v1.55.5\n\tgithub.com/bshuster-repo/logrus-logstash-hook v1.0.0\n\tgithub.com/coreos/go-systemd/v22 v22.5.0\n\tgithub.com/distribution/reference v0.6.0\n\tgithub.com/docker/docker-credential-helpers v0.8.2\n\tgithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c\n\tgithub.com/docker/go-metrics v0.0.1\n\tgithub.com/go-jose/go-jose/v4 v4.0.2\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/gorilla/handlers v1.5.2\n\tgithub.com/gorilla/mux v1.8.1\n\tgithub.com/hashicorp/golang-lru/arc/v2 v2.0.5\n\tgithub.com/klauspost/compress v1.17.11\n\tgithub.com/mitchellh/mapstructure v1.5.0\n\tgithub.com/opencontainers/go-digest v1.0.0\n\tgithub.com/opencontainers/image-spec v1.1.0\n\tgithub.com/redis/go-redis/extra/redisotel/v9 v9.0.5\n\tgithub.com/redis/go-redis/v9 v9.1.0\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/spf13/cobra v1.8.0\n\tgithub.com/stretchr/testify v1.9.0\n\tgo.opentelemetry.io/contrib/exporters/autoexport v0.57.0\n\tgo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.57.0\n\tgo.opentelemetry.io/otel v1.32.0\n\tgo.opentelemetry.io/otel/exporters/stdout/stdouttrace v1.32.0\n\tgo.opentelemetry.io/otel/sdk v1.32.0\n\tgo.opentelemetry.io/otel/trace v1.32.0\n\tgolang.org/x/crypto v0.31.0\n\tgolang.org/x/net v0.33.0\n\tgolang.org/x/oauth2 v0.23.0\n\tgolang.org/x/sync v0.10.0\n\tgoogle.golang.org/api v0.197.0\n\tgopkg.in/yaml.v2 v2.4.0\n)\n\nrequire (\n\tcel.dev/expr v0.16.1 // indirect\n\tcloud.google.com/go v0.115.1 // indirect\n\tcloud.google.com/go/auth v0.9.3 // indirect\n\tcloud.google.com/go/auth/oauth2adapt v0.2.4 // indirect\n\tcloud.google.com/go/compute/metadata v0.5.1 // indirect\n\tcloud.google.com/go/iam v1.2.1 // indirect\n\tcloud.google.com/go/monitoring v1.21.0 // indirect\n\tgithub.com/Azure/azure-sdk-for-go/sdk/internal v1.8.0 // indirect\n\tgithub.com/AzureAD/microsoft-authentication-library-for-go v1.2.2 // indirect\n\tgithub.com/GoogleCloudPlatform/opentelemetry-operations-go/detectors/gcp v1.24.1 // indirect\n\tgithub.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/metric v0.48.1 // indirect\n\tgithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/resourcemapping v0.48.1 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/cenkalti/backoff/v4 v4.3.0 // indirect\n\tgithub.com/census-instrumentation/opencensus-proto v0.4.1 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.3.0 // indirect\n\tgithub.com/cncf/xds/go v0.0.0-20240905190251-b4127c9b8d78 // indirect\n\tgithub.com/cyphar/filepath-securejoin v0.2.4 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f // indirect\n\tgithub.com/envoyproxy/go-control-plane v0.13.0 // indirect\n\tgithub.com/envoyproxy/protoc-gen-validate v1.1.0 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.4 // indirect\n\tgithub.com/go-logr/logr v1.4.2 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/golang-jwt/jwt/v5 v5.2.1 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/google/s2a-go v0.1.8 // indirect\n\tgithub.com/googleapis/enterprise-certificate-proxy v0.3.4 // indirect\n\tgithub.com/googleapis/gax-go/v2 v2.13.0 // indirect\n\tgithub.com/grpc-ecosystem/grpc-gateway/v2 v2.23.0 // indirect\n\tgithub.com/hashicorp/golang-lru/v2 v2.0.5 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/jmespath/go-jmespath v0.4.0 // indirect\n\tgithub.com/kylelemons/godebug v1.1.0 // indirect\n\tgithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect\n\tgithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c // indirect\n\tgithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/prometheus/client_golang v1.20.5 // indirect; updated to latest\n\tgithub.com/prometheus/client_model v0.6.1 // indirect\n\tgithub.com/prometheus/common v0.60.1 // indirect\n\tgithub.com/prometheus/procfs v0.15.1 // indirect\n\tgithub.com/redis/go-redis/extra/rediscmd/v9 v9.0.5 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgo.opencensus.io v0.24.0 // indirect\n\tgo.opentelemetry.io/contrib/bridges/prometheus v0.57.0 // indirect\n\tgo.opentelemetry.io/contrib/detectors/gcp v1.29.0 // indirect\n\tgo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.54.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlplog/otlploggrpc v0.8.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlplog/otlploghttp v0.8.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.32.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.32.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.32.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.32.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.32.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/prometheus v0.54.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/stdout/stdoutlog v0.8.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/stdout/stdoutmetric v1.32.0 // indirect\n\tgo.opentelemetry.io/otel/log v0.8.0 // indirect\n\tgo.opentelemetry.io/otel/metric v1.32.0 // indirect\n\tgo.opentelemetry.io/otel/sdk/log v0.8.0 // indirect\n\tgo.opentelemetry.io/otel/sdk/metric v1.32.0 // indirect\n\tgo.opentelemetry.io/proto/otlp v1.3.1 // indirect\n\tgolang.org/x/sys v0.28.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgolang.org/x/time v0.6.0 // indirect\n\tgoogle.golang.org/genproto v0.0.0-20240903143218-8af14fe29dc1 // indirect\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20241104194629-dd2ea8efbc28 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241104194629-dd2ea8efbc28 // indirect\n\tgoogle.golang.org/grpc v1.68.0 // indirect\n\tgoogle.golang.org/grpc/stats/opentelemetry v0.0.0-20240907200651-3ffb98b2c93a // indirect\n\tgoogle.golang.org/protobuf v1.35.1 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 39,
          "content": "cel.dev/expr v0.16.1 h1:NR0+oFYzR1CqLFhTAqg3ql59G9VfN8fKq1TCHJ6gq1g=\ncel.dev/expr v0.16.1/go.mod h1:AsGA5zb3WruAEQeQng1RZdGEXmBj0jvMWh6l5SnNuC8=\ncloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.115.1 h1:Jo0SM9cQnSkYfp44+v+NQXHpcHqlnRJk2qxh6yvxxxQ=\ncloud.google.com/go v0.115.1/go.mod h1:DuujITeaufu3gL68/lOFIirVNJwQeyf5UXyi+Wbgknc=\ncloud.google.com/go/auth v0.9.3 h1:VOEUIAADkkLtyfr3BLa3R8Ed/j6w1jTBmARx+wb5w5U=\ncloud.google.com/go/auth v0.9.3/go.mod h1:7z6VY+7h3KUdRov5F1i8NDP5ZzWKYmEPO842BgCsmTk=\ncloud.google.com/go/auth/oauth2adapt v0.2.4 h1:0GWE/FUsXhf6C+jAkWgYm7X9tK8cuEIfy19DBn6B6bY=\ncloud.google.com/go/auth/oauth2adapt v0.2.4/go.mod h1:jC/jOpwFP6JBxhB3P5Rr0a9HLMC/Pe3eaL4NmdvqPtc=\ncloud.google.com/go/compute/metadata v0.5.1 h1:NM6oZeZNlYjiwYje+sYFjEpP0Q0zCan1bmQW/KmIrGs=\ncloud.google.com/go/compute/metadata v0.5.1/go.mod h1:C66sj2AluDcIqakBq/M8lw8/ybHgOZqin2obFxa/E5k=\ncloud.google.com/go/iam v1.2.1 h1:QFct02HRb7H12J/3utj0qf5tobFh9V4vR6h9eX5EBRU=\ncloud.google.com/go/iam v1.2.1/go.mod h1:3VUIJDPpwT6p/amXRC5GY8fCCh70lxPygguVtI0Z4/g=\ncloud.google.com/go/logging v1.11.0 h1:v3ktVzXMV7CwHq1MBF65wcqLMA7i+z3YxbUsoK7mOKs=\ncloud.google.com/go/logging v1.11.0/go.mod h1:5LDiJC/RxTt+fHc1LAt20R9TKiUTReDg6RuuFOZ67+A=\ncloud.google.com/go/longrunning v0.6.1 h1:lOLTFxYpr8hcRtcwWir5ITh1PAKUD/sG2lKrTSYjyMc=\ncloud.google.com/go/longrunning v0.6.1/go.mod h1:nHISoOZpBcmlwbJmiVk5oDRz0qG/ZxPynEGs1iZ79s0=\ncloud.google.com/go/monitoring v1.21.0 h1:EMc0tB+d3lUewT2NzKC/hr8cSR9WsUieVywzIHetGro=\ncloud.google.com/go/monitoring v1.21.0/go.mod h1:tuJ+KNDdJbetSsbSGTqnaBvbauS5kr3Q/koy3Up6r+4=\ncloud.google.com/go/storage v1.45.0 h1:5av0QcIVj77t+44mV4gffFC/LscFRUhto6UBMB5SimM=\ncloud.google.com/go/storage v1.45.0/go.mod h1:wpPblkIuMP5jCB/E48Pz9zIo2S/zD8g+ITmxKkPCITE=\ncloud.google.com/go/trace v1.11.0 h1:UHX6cOJm45Zw/KIbqHe4kII8PupLt/V5tscZUkeiJVI=\ncloud.google.com/go/trace v1.11.0/go.mod h1:Aiemdi52635dBR7o3zuc9lLjXo3BwGaChEjCa3tJNmM=\ngithub.com/AdaLogics/go-fuzz-headers v0.0.0-20221103172237-443f56ff4ba8 h1:d+pBUmsteW5tM87xmVXHZ4+LibHRFn40SPAoZJOg2ak=\ngithub.com/AdaLogics/go-fuzz-headers v0.0.0-20221103172237-443f56ff4ba8/go.mod h1:i9fr2JpcEcY/IHEvzCM3qXUZYOQHgR89dt4es1CgMhc=\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.11.1 h1:E+OJmp2tPvt1W+amx48v1eqbjDYsgN+RzP4q16yV5eM=\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.11.1/go.mod h1:a6xsAQUZg+VsS3TJ05SRp524Hs4pZ/AeFSr5ENf0Yjo=\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity v1.6.0 h1:U2rTu3Ef+7w9FHKIAXM6ZyqF3UOWJZ12zIm8zECAFfg=\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity v1.6.0/go.mod h1:9kIvujWAA58nmPmWB1m23fyWic1kYZMxD9CxaWn4Qpg=\ngithub.com/Azure/azure-sdk-for-go/sdk/internal v1.8.0 h1:jBQA3cKT4L2rWMpgE7Yt3Hwh2aUj8KXjIGLxjHeYNNo=\ngithub.com/Azure/azure-sdk-for-go/sdk/internal v1.8.0/go.mod h1:4OG6tQ9EOP/MT0NMjDlRzWoVFxfu9rN9B2X+tlSVktg=\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob v1.0.0 h1:u/LLAOFgsMv7HmNL4Qufg58y+qElGOt5qv0z1mURkRY=\ngithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob v1.0.0/go.mod h1:2e8rMJtl2+2j+HXbTBwnyGpm5Nou7KhvSfxOq8JpTag=\ngithub.com/AzureAD/microsoft-authentication-library-for-go v1.2.2 h1:XHOnouVk1mxXfQidrMEnLlPk9UMeRtyBTnEFtxkV0kU=\ngithub.com/AzureAD/microsoft-authentication-library-for-go v1.2.2/go.mod h1:wP83P5OoQ5p6ip3ScPr0BAq0BvuPAvacpEuSzyouqAI=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/detectors/gcp v1.24.1 h1:pB2F2JKCj1Znmp2rwxxt1J0Fg0wezTMgWYk5Mpbi1kg=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/detectors/gcp v1.24.1/go.mod h1:itPGVDKf9cC/ov4MdvJ2QZ0khw4bfoo9jzwTJlaxy2k=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/metric v0.48.1 h1:UQ0AhxogsIRZDkElkblfnwjc3IaltCm2HUMvezQaL7s=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/metric v0.48.1/go.mod h1:jyqM3eLpJ3IbIFDTKVz2rF9T/xWGW0rIriGwnz8l9Tk=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/cloudmock v0.48.1 h1:oTX4vsorBZo/Zdum6OKPA4o7544hm6smoRv1QjpTwGo=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/cloudmock v0.48.1/go.mod h1:0wEl7vrAD8mehJyohS9HZy+WyEOaQO2mJx86Cvh93kM=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/resourcemapping v0.48.1 h1:8nn+rsCvTq9axyEh382S0PFLBeaFwNsT43IrPWzctRU=\ngithub.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/resourcemapping v0.48.1/go.mod h1:viRWSEhtMZqz1rhwmOVKkWl6SwmVowfL9O2YR5gI2PE=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/aws/aws-sdk-go v1.55.5 h1:KKUZBfBoyqy5d3swXyiC7Q76ic40rYcbqH7qjh59kzU=\ngithub.com/aws/aws-sdk-go v1.55.5/go.mod h1:eRwEWoyTWFMVYVQzKMNHWP5/RV4xIUGMQfXQHfHkpNU=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/bshuster-repo/logrus-logstash-hook v1.0.0 h1:e+C0SB5R1pu//O4MQ3f9cFuPGoOVeF2fE4Og9otCc70=\ngithub.com/bshuster-repo/logrus-logstash-hook v1.0.0/go.mod h1:zsTqEiSzDgAa/8GZR7E1qaXrhYNDKBYy5/dWPTIflbk=\ngithub.com/bsm/ginkgo/v2 v2.7.0/go.mod h1:AiKlXPm7ItEHNc/2+OkrNG4E0ITzojb9/xWzvQ9XZ9w=\ngithub.com/bsm/ginkgo/v2 v2.9.5 h1:rtVBYPs3+TC5iLUVOis1B9tjLTup7Cj5IfzosKtvTJ0=\ngithub.com/bsm/ginkgo/v2 v2.9.5/go.mod h1:SwYbGRRDovPVboqFv0tPTcG1sN61LM1Z4ARdbAV9g4c=\ngithub.com/bsm/gomega v1.26.0 h1:LhQm+AFcgV2M0WyKroMASzAzCAJVpAxQXv4SaI9a69Y=\ngithub.com/bsm/gomega v1.26.0/go.mod h1:JyEr/xRbxbtgWNi8tIEVPUYZ5Dzef52k01W3YH0H+O0=\ngithub.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=\ngithub.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/census-instrumentation/opencensus-proto v0.4.1 h1:iKLQ0xPNFxR/2hzXZMrBo8f1j86j5WHzznCCQxV/b8g=\ngithub.com/census-instrumentation/opencensus-proto v0.4.1/go.mod h1:4T9NM4+4Vw91VeyqjLS6ao50K5bOcLKN6Q42XnYaRYw=\ngithub.com/cespare/xxhash/v2 v2.2.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=\ngithub.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cncf/xds/go v0.0.0-20240905190251-b4127c9b8d78 h1:QVw89YDxXxEe+l8gU8ETbOasdwEV+avkR75ZzsVV9WI=\ngithub.com/cncf/xds/go v0.0.0-20240905190251-b4127c9b8d78/go.mod h1:W+zGtBO5Y1IgJhy4+A9GOqVhqLpfZi+vwmdNXUehLA8=\ngithub.com/coreos/go-systemd/v22 v22.5.0 h1:RrqgGjYQKalulkV8NGVIfkXQf6YYmOyiJKk8iXXhfZs=\ngithub.com/coreos/go-systemd/v22 v22.5.0/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.3/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/cyphar/filepath-securejoin v0.2.3/go.mod h1:aPGpWjXOXUn2NCNjFvBE6aRxGGx79pTxQpKOJNYHHl4=\ngithub.com/cyphar/filepath-securejoin v0.2.4 h1:Ugdm7cg7i6ZK6x3xDF1oEu1nfkyfH53EtKeQYTC3kyg=\ngithub.com/cyphar/filepath-securejoin v0.2.4/go.mod h1:aPGpWjXOXUn2NCNjFvBE6aRxGGx79pTxQpKOJNYHHl4=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f h1:lO4WD4F/rVNCu3HqELle0jiPLLBs70cWOduZpkS1E78=\ngithub.com/dgryski/go-rendezvous v0.0.0-20200823014737-9f7001d12a5f/go.mod h1:cuUVRXasLTGF7a8hSLbxyZXjz+1KgoB3wDUb6vlszIc=\ngithub.com/distribution/reference v0.6.0 h1:0IXCQ5g4/QMHHkarYzh5l+u8T3t73zM5QvfrDyIgxBk=\ngithub.com/distribution/reference v0.6.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=\ngithub.com/docker/docker-credential-helpers v0.8.2 h1:bX3YxiGzFP5sOXWc3bTPEXdEaZSeVMrFgOr3T+zrFAo=\ngithub.com/docker/docker-credential-helpers v0.8.2/go.mod h1:P3ci7E3lwkZg6XiHdRKft1KckHiO9a2rNtyFbZ/ry9M=\ngithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c h1:+pKlWGMw7gf6bQ+oDZB4KHQFypsfjYlq/C4rfL7D3g8=\ngithub.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c/go.mod h1:Uw6UezgYA44ePAFQYUehOuCzmy5zmg/+nl2ZfMWGkpA=\ngithub.com/docker/go-metrics v0.0.1 h1:AgB/0SvBxihN0X8OR4SjsblXkbMvalQ8cjmtKQ2rQV8=\ngithub.com/docker/go-metrics v0.0.1/go.mod h1:cG1hvH2utMXtqgqqYE9plW6lDxS3/5ayHzueweSI3Vw=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/go-control-plane v0.13.0 h1:HzkeUz1Knt+3bK+8LG1bxOO/jzWZmdxpwC51i202les=\ngithub.com/envoyproxy/go-control-plane v0.13.0/go.mod h1:GRaKG3dwvFoTg4nj7aXdZnvMg4d7nvT/wl9WgVXn3Q8=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/envoyproxy/protoc-gen-validate v1.1.0 h1:tntQDh69XqOCOZsDz0lVJQez/2L6Uu2PdjCQwWCJ3bM=\ngithub.com/envoyproxy/protoc-gen-validate v1.1.0/go.mod h1:sXRDRVmzEbkM7CVcM06s9shE/m23dg3wzjl0UWqJ2q4=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/go-jose/go-jose/v4 v4.0.2 h1:R3l3kkBds16bO7ZFAEEcofK0MkrAJt3jlJznWZG0nvk=\ngithub.com/go-jose/go-jose/v4 v4.0.2/go.mod h1:WVf9LFMHh/QVrmqrOfqun0C45tMe3RoiKJMPvgWwLfY=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=\ngithub.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/golang-jwt/jwt/v5 v5.2.1 h1:OuVbFODueb089Lh128TAcimifWaLhJwVflnrgM17wHk=\ngithub.com/golang-jwt/jwt/v5 v5.2.1/go.mod h1:pqrtFR0X4osieyHYxtmOUWsAWrfe1Q5UVIyoH402zdk=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/martian/v3 v3.3.3 h1:DIhPTQrbPkgs2yJYdXU/eNACCG5DVQjySNRNlflZ9Fc=\ngithub.com/google/martian/v3 v3.3.3/go.mod h1:iEPrYcgCF7jA9OtScMFQyAlZZ4YXTKEtJ1E6RWzmBA0=\ngithub.com/google/s2a-go v0.1.8 h1:zZDs9gcbt9ZPLV0ndSyQk6Kacx2g/X+SKYovpnz3SMM=\ngithub.com/google/s2a-go v0.1.8/go.mod h1:6iNWHTpQ+nfNRN5E00MSdfDwVesa8hhS32PhPO8deJA=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.4 h1:XYIDZApgAnrN1c855gTgghdIA6Stxb52D5RnLI1SLyw=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.4/go.mod h1:YKe7cfqYXjKGpGvmSg28/fFvhNzinZQm8DGnaburhGA=\ngithub.com/googleapis/gax-go/v2 v2.13.0 h1:yitjD5f7jQHhyDsnhKEBU52NdvvdSeGzlAnDPT0hH1s=\ngithub.com/googleapis/gax-go/v2 v2.13.0/go.mod h1:Z/fvTZXF8/uw7Xu5GuslPw+bplx6SS338j1Is2S+B7A=\ngithub.com/gorilla/handlers v1.5.2 h1:cLTUSsNkgcwhgRqvCNmdbRWG0A3N4F+M2nWKdScwyEE=\ngithub.com/gorilla/handlers v1.5.2/go.mod h1:dX+xVpaxdSw+q0Qek8SSsl3dfMk3jNddUkMzo0GtH0w=\ngithub.com/gorilla/mux v1.8.1 h1:TuBL49tXwgrFYWhqrNgrUNEY92u81SPhu7sTdzQEiWY=\ngithub.com/gorilla/mux v1.8.1/go.mod h1:AKf9I4AEqPTmMytcMc0KkNouC66V3BtZ4qD5fmWSiMQ=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.23.0 h1:ad0vkEBuk23VJzZR9nkLVG0YAoN9coASF1GusYX6AlU=\ngithub.com/grpc-ecosystem/grpc-gateway/v2 v2.23.0/go.mod h1:igFoXX2ELCW06bol23DWPB5BEWfZISOzSP5K2sbLea0=\ngithub.com/hashicorp/golang-lru/arc/v2 v2.0.5 h1:l2zaLDubNhW4XO3LnliVj0GXO3+/CGNJAg1dcN2Fpfw=\ngithub.com/hashicorp/golang-lru/arc/v2 v2.0.5/go.mod h1:ny6zBSQZi2JxIeYcv7kt2sH2PXJtirBN7RDhRpxPkxU=\ngithub.com/hashicorp/golang-lru/v2 v2.0.5 h1:wW7h1TG88eUIJ2i69gaE3uNVtEPIagzhGvHgwfx2Vm4=\ngithub.com/hashicorp/golang-lru/v2 v2.0.5/go.mod h1:QeFd9opnmA6QUJc5vARoKUSoFhyfM2/ZepoAG6RGpeM=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/jmespath/go-jmespath v0.4.0 h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=\ngithub.com/jmespath/go-jmespath v0.4.0/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1 h1:shLQSRRSCCPj3f2gpwzGwWFoC7ycTf1rcQZHOlsJ6N8=\ngithub.com/jmespath/go-jmespath/internal/testify v1.5.1/go.mod h1:L3OGu8Wl2/fWfCI6z80xFu9LTZmf1ZRjMHUOPmWr69U=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.7/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/klauspost/compress v1.17.11 h1:In6xLpyWOi1+C7tXUUWv2ot1QvBjxevKAaI6IXrJmUc=\ngithub.com/klauspost/compress v1.17.11/go.mod h1:pMDklpSncoRMuLFrf1W9Ss9KT+0rH90U12bZKk7uwG0=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=\ngithub.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=\ngithub.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\ngithub.com/opencontainers/image-spec v1.1.0 h1:8SG7/vwALn54lVB/0yZ/MMwhFrPYtpEHQb2IpWsCzug=\ngithub.com/opencontainers/image-spec v1.1.0/go.mod h1:W4s4sFTMaBeK1BQLXbG4AdM2szdn85PY75RI83NrTrM=\ngithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c h1:+mdjkGKdHQG3305AYmdv1U2eRNDiU2ErMBj1gwrq8eQ=\ngithub.com/pkg/browser v0.0.0-20240102092130-5ac0b6a4141c/go.mod h1:7rwL4CYBLnjLxUqIJNnCWiEdr3bn6IUYi15bNlnbCCU=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10 h1:GFCKgmp0tecUJ0sJuv4pzYCqS9+RGSn52M3FUwPs+uo=\ngithub.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10/go.mod h1:t/avpk3KcrXxUnYOhZhMXJlSEyie6gQbtLq5NM3loB8=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=\ngithub.com/prometheus/client_golang v1.1.0/go.mod h1:I1FGZT9+L76gKKOs5djB6ezCbFQP1xR9D75/vuwEF3g=\ngithub.com/prometheus/client_golang v1.20.5 h1:cxppBPuYhUnsO6yo/aoRol4L7q7UFfdm+bR9r+8l63Y=\ngithub.com/prometheus/client_golang v1.20.5/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=\ngithub.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=\ngithub.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.6.0/go.mod h1:eBmuwkDJBwy6iBfxCBob6t6dR6ENT/y+J+Zk0j9GMYc=\ngithub.com/prometheus/common v0.60.1 h1:FUas6GcOw66yB/73KC+BOZoFJmbo/1pojoILArPAaSc=\ngithub.com/prometheus/common v0.60.1/go.mod h1:h0LYf1R1deLSKtD4Vdg8gy4RuOvENW2J/h19V5NADQw=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.0.3/go.mod h1:4A/X28fw3Fc593LaREMrKMqOKvUAntwMDaekg4FpcdQ=\ngithub.com/prometheus/procfs v0.15.1 h1:YagwOFzUgYfKKHX6Dr+sHT7km/hxC76UB0learggepc=\ngithub.com/prometheus/procfs v0.15.1/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=\ngithub.com/redis/go-redis/extra/rediscmd/v9 v9.0.5 h1:EaDatTxkdHG+U3Bk4EUr+DZ7fOGwTfezUiUJMaIcaho=\ngithub.com/redis/go-redis/extra/rediscmd/v9 v9.0.5/go.mod h1:fyalQWdtzDBECAQFBJuQe5bzQ02jGd5Qcbgb97Flm7U=\ngithub.com/redis/go-redis/extra/redisotel/v9 v9.0.5 h1:EfpWLLCyXw8PSM2/XNJLjI3Pb27yVE+gIAfeqp8LUCc=\ngithub.com/redis/go-redis/extra/redisotel/v9 v9.0.5/go.mod h1:WZjPDy7VNzn77AAfnAfVjZNvfJTYfPetfZk5yoSTLaQ=\ngithub.com/redis/go-redis/v9 v9.0.5/go.mod h1:WqMKv5vnQbRuZstUwxQI195wHy+t4PuXDOjzMvcuQHk=\ngithub.com/redis/go-redis/v9 v9.1.0 h1:137FnGdk+EQdCbye1FW+qOEcY5S+SpY9T0NiuqvtfMY=\ngithub.com/redis/go-redis/v9 v9.1.0/go.mod h1:urWj3He21Dj5k4TK1y59xH8Uj6ATueP8AH1cY3lZl4c=\ngithub.com/rogpeppe/go-internal v1.13.1 h1:KvO1DLK/DRN07sQ1LQKScxyZJuNnedQ5/wKSR38lUII=\ngithub.com/rogpeppe/go-internal v1.13.1/go.mod h1:uMEvuHeurkdAXX61udpOXGD/AzZDWNMNyH2VO9fmH0o=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.8.1/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/spf13/cobra v1.8.0 h1:7aJaZx1B85qltLMc546zn58BxxfZdR/W22ej9CFoEf0=\ngithub.com/spf13/cobra v1.8.0/go.mod h1:WXLWApfZ71AjXPya3WOlMsY9yMs7YeiHhFVlvLyhcho=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.opentelemetry.io/contrib/bridges/prometheus v0.57.0 h1:UW0+QyeyBVhn+COBec3nGhfnFe5lwB0ic1JBVjzhk0w=\ngo.opentelemetry.io/contrib/bridges/prometheus v0.57.0/go.mod h1:ppciCHRLsyCio54qbzQv0E4Jyth/fLWDTJYfvWpcSVk=\ngo.opentelemetry.io/contrib/detectors/gcp v1.29.0 h1:TiaiXB4DpGD3sdzNlYQxruQngn5Apwzi1X0DRhuGvDQ=\ngo.opentelemetry.io/contrib/detectors/gcp v1.29.0/go.mod h1:GW2aWZNwR2ZxDLdv8OyC2G8zkRoQBuURgV7RPQgcPoU=\ngo.opentelemetry.io/contrib/exporters/autoexport v0.57.0 h1:jmTVJ86dP60C01K3slFQa2NQ/Aoi7zA+wy7vMOKD9H4=\ngo.opentelemetry.io/contrib/exporters/autoexport v0.57.0/go.mod h1:EJBheUMttD/lABFyLXhce47Wr6DPWYReCzaZiXadH7g=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.54.0 h1:r6I7RJCN86bpD/FQwedZ0vSixDpwuWREjW9oRMsmqDc=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.54.0/go.mod h1:B9yO6b04uB80CzjedvewuqDhxJxi11s7/GtiGa8bAjI=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.57.0 h1:DheMAlT6POBP+gh8RUH19EOTnQIor5QE0uSRPtzCpSw=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.57.0/go.mod h1:wZcGmeVO9nzP67aYSLDqXNWK87EZWhi7JWj1v7ZXf94=\ngo.opentelemetry.io/otel v1.32.0 h1:WnBN+Xjcteh0zdk01SVqV55d/m62NJLJdIyb4y/WO5U=\ngo.opentelemetry.io/otel v1.32.0/go.mod h1:00DCVSB0RQcnzlwyTfqtxSm+DRr9hpYrHjNGiBHVQIg=\ngo.opentelemetry.io/otel/exporters/otlp/otlplog/otlploggrpc v0.8.0 h1:WzNab7hOOLzdDF/EoWCt4glhrbMPVMOO5JYTmpz36Ls=\ngo.opentelemetry.io/otel/exporters/otlp/otlplog/otlploggrpc v0.8.0/go.mod h1:hKvJwTzJdp90Vh7p6q/9PAOd55dI6WA6sWj62a/JvSs=\ngo.opentelemetry.io/otel/exporters/otlp/otlplog/otlploghttp v0.8.0 h1:S+LdBGiQXtJdowoJoQPEtI52syEP/JYBUpjO49EQhV8=\ngo.opentelemetry.io/otel/exporters/otlp/otlplog/otlploghttp v0.8.0/go.mod h1:5KXybFvPGds3QinJWQT7pmXf+TN5YIa7CNYObWRkj50=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.32.0 h1:j7ZSD+5yn+lo3sGV69nW04rRR0jhYnBwjuX3r0HvnK0=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.32.0/go.mod h1:WXbYJTUaZXAbYd8lbgGuvih0yuCfOFC5RJoYnoLcGz8=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.32.0 h1:t/Qur3vKSkUCcDVaSumWF2PKHt85pc7fRvFuoVT8qFU=\ngo.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.32.0/go.mod h1:Rl61tySSdcOJWoEgYZVtmnKdA0GeKrSqkHC1t+91CH8=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.32.0 h1:IJFEoHiytixx8cMiVAO+GmHR6Frwu+u5Ur8njpFO6Ac=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.32.0/go.mod h1:3rHrKNtLIoS0oZwkY2vxi+oJcwFRWdtUyRII+so45p8=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.32.0 h1:9kV11HXBHZAvuPUZxmMWrH8hZn/6UnHX4K0mu36vNsU=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.32.0/go.mod h1:JyA0FHXe22E1NeNiHmVp7kFHglnexDQ7uRWDiiJ1hKQ=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.32.0 h1:cMyu9O88joYEaI47CnQkxO1XZdpoTF9fEnW2duIddhw=\ngo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.32.0/go.mod h1:6Am3rn7P9TVVeXYG+wtcGE7IE1tsQ+bP3AuWcKt/gOI=\ngo.opentelemetry.io/otel/exporters/prometheus v0.54.0 h1:rFwzp68QMgtzu9PgP3jm9XaMICI6TsofWWPcBDKwlsU=\ngo.opentelemetry.io/otel/exporters/prometheus v0.54.0/go.mod h1:QyjcV9qDP6VeK5qPyKETvNjmaaEc7+gqjh4SS0ZYzDU=\ngo.opentelemetry.io/otel/exporters/stdout/stdoutlog v0.8.0 h1:CHXNXwfKWfzS65yrlB2PVds1IBZcdsX8Vepy9of0iRU=\ngo.opentelemetry.io/otel/exporters/stdout/stdoutlog v0.8.0/go.mod h1:zKU4zUgKiaRxrdovSS2amdM5gOc59slmo/zJwGX+YBg=\ngo.opentelemetry.io/otel/exporters/stdout/stdoutmetric v1.32.0 h1:SZmDnHcgp3zwlPBS2JX2urGYe/jBKEIT6ZedHRUyCz8=\ngo.opentelemetry.io/otel/exporters/stdout/stdoutmetric v1.32.0/go.mod h1:fdWW0HtZJ7+jNpTKUR0GpMEDP69nR8YBJQxNiVCE3jk=\ngo.opentelemetry.io/otel/exporters/stdout/stdouttrace v1.32.0 h1:cC2yDI3IQd0Udsux7Qmq8ToKAx1XCilTQECZ0KDZyTw=\ngo.opentelemetry.io/otel/exporters/stdout/stdouttrace v1.32.0/go.mod h1:2PD5Ex6z8CFzDbTdOlwyNIUywRr1DN0ospafJM1wJ+s=\ngo.opentelemetry.io/otel/log v0.8.0 h1:egZ8vV5atrUWUbnSsHn6vB8R21G2wrKqNiDt3iWertk=\ngo.opentelemetry.io/otel/log v0.8.0/go.mod h1:M9qvDdUTRCopJcGRKg57+JSQ9LgLBrwwfC32epk5NX8=\ngo.opentelemetry.io/otel/metric v1.32.0 h1:xV2umtmNcThh2/a/aCP+h64Xx5wsj8qqnkYZktzNa0M=\ngo.opentelemetry.io/otel/metric v1.32.0/go.mod h1:jH7CIbbK6SH2V2wE16W05BHCtIDzauciCRLoc/SyMv8=\ngo.opentelemetry.io/otel/sdk v1.32.0 h1:RNxepc9vK59A8XsgZQouW8ue8Gkb4jpWtJm9ge5lEG4=\ngo.opentelemetry.io/otel/sdk v1.32.0/go.mod h1:LqgegDBjKMmb2GC6/PrTnteJG39I8/vJCAP9LlJXEjU=\ngo.opentelemetry.io/otel/sdk/log v0.8.0 h1:zg7GUYXqxk1jnGF/dTdLPrK06xJdrXgqgFLnI4Crxvs=\ngo.opentelemetry.io/otel/sdk/log v0.8.0/go.mod h1:50iXr0UVwQrYS45KbruFrEt4LvAdCaWWgIrsN3ZQggo=\ngo.opentelemetry.io/otel/sdk/metric v1.32.0 h1:rZvFnvmvawYb0alrYkjraqJq0Z4ZUJAiyYCU9snn1CU=\ngo.opentelemetry.io/otel/sdk/metric v1.32.0/go.mod h1:PWeZlq0zt9YkYAp3gjKZ0eicRYvOh1Gd+X99x6GHpCQ=\ngo.opentelemetry.io/otel/trace v1.32.0 h1:WIC9mYrXf8TmY/EXuULKc8hR17vE+Hjv2cssQDe03fM=\ngo.opentelemetry.io/otel/trace v1.32.0/go.mod h1:+i4rkvCraA+tG6AzwloGaCtkx53Fa+L+V8e9a7YvhT8=\ngo.opentelemetry.io/proto/otlp v1.3.1 h1:TrMUixzpM0yuc/znrFTP9MMRh8trP93mkCiDVeXrui0=\ngo.opentelemetry.io/proto/otlp v1.3.1/go.mod h1:0X1WI4de4ZsLrrJNLAQbFeLCm3T7yBkR0XqQ7niQU+8=\ngo.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=\ngo.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.33.0 h1:74SYHlV8BIgHIFC/LrYkOGIwL19eTYXQ5wc6TBuO36I=\ngolang.org/x/net v0.33.0/go.mod h1:HXLR5J+9DxmrqMwG9qjGCxZ+zKXxBru04zlTvWlWuN4=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.23.0 h1:PbgcYx2W7i4LvjJWEbf0ngHV6qJYr86PkAV3bXdLEbs=\ngolang.org/x/oauth2 v0.23.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190801041406-cbf593c0f2f3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.6.0 h1:eTDhh4ZXt5Qf0augr54TN6suAUudPcawVZeIAPU7D4U=\ngolang.org/x/time v0.6.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/api v0.197.0 h1:x6CwqQLsFiA5JKAiGyGBjc2bNtHtLddhJCE2IKuhhcQ=\ngoogle.golang.org/api v0.197.0/go.mod h1:AuOuo20GoQ331nq7DquGHlU6d+2wN2fZ8O0ta60nRNw=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20240903143218-8af14fe29dc1 h1:BulPr26Jqjnd4eYDVe+YvyR7Yc2vJGkO5/0UxD0/jZU=\ngoogle.golang.org/genproto v0.0.0-20240903143218-8af14fe29dc1/go.mod h1:hL97c3SYopEHblzpxRL4lSs523++l8DYxGM1FQiYmb4=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241104194629-dd2ea8efbc28 h1:M0KvPgPmDZHPlbRbaNU1APr28TvwvvdUPlSv7PUvy8g=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241104194629-dd2ea8efbc28/go.mod h1:dguCy7UOdZhTvLzDyt15+rOrawrpM4q7DD9dQ1P11P4=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241104194629-dd2ea8efbc28 h1:XVhgTWWV3kGQlwJHR3upFWZeTsei6Oks1apkZSeonIE=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241104194629-dd2ea8efbc28/go.mod h1:GX3210XPVPUjJbTUbvwI8f2IpZDMZuPJWDzDuebbviI=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.68.0 h1:aHQeeJbo8zAkAa3pRzrVjZlbz6uSfeOXlJNQM0RAbz0=\ngoogle.golang.org/grpc v1.68.0/go.mod h1:fmSPC5AsjSBCK54MyHRx48kpOti1/jRfOlwEWywNjWA=\ngoogle.golang.org/grpc/stats/opentelemetry v0.0.0-20240907200651-3ffb98b2c93a h1:UIpYSuWdWHSzjwcAFRLjKcPXFZVVLXGEM23W+NWqipw=\ngoogle.golang.org/grpc/stats/opentelemetry v0.0.0-20240907200651-3ffb98b2c93a/go.mod h1:9i1T9n4ZinTUZGgzENMi8MDDgbGC5mqTS75JAv6xN3A=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.35.1 h1:m3LfL6/Ca+fqnjnlqQXNpFPABW1UD7mjh8KO2mKFytA=\ngoogle.golang.org/protobuf v1.35.1/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\n"
        },
        {
          "name": "health",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "manifest",
          "type": "tree",
          "content": null
        },
        {
          "name": "manifests.go",
          "type": "blob",
          "size": 3.4833984375,
          "content": "package distribution\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"mime\"\n\n\t\"github.com/opencontainers/go-digest\"\n\tv1 \"github.com/opencontainers/image-spec/specs-go/v1\"\n)\n\n// Manifest represents a registry object specifying a set of\n// references and an optional target\ntype Manifest interface {\n\t// References returns a list of objects which make up this manifest.\n\t// A reference is anything which can be represented by a\n\t// Descriptor. These can consist of layers, resources or other\n\t// manifests.\n\t//\n\t// While no particular order is required, implementations should return\n\t// them from highest to lowest priority. For example, one might want to\n\t// return the base layer before the top layer.\n\tReferences() []v1.Descriptor\n\n\t// Payload provides the serialized format of the manifest, in addition to\n\t// the media type.\n\tPayload() (mediaType string, payload []byte, err error)\n}\n\n// ManifestService describes operations on manifests.\ntype ManifestService interface {\n\t// Exists returns true if the manifest exists.\n\tExists(ctx context.Context, dgst digest.Digest) (bool, error)\n\n\t// Get retrieves the manifest specified by the given digest\n\tGet(ctx context.Context, dgst digest.Digest, options ...ManifestServiceOption) (Manifest, error)\n\n\t// Put creates or updates the given manifest returning the manifest digest\n\tPut(ctx context.Context, manifest Manifest, options ...ManifestServiceOption) (digest.Digest, error)\n\n\t// Delete removes the manifest specified by the given digest. Deleting\n\t// a manifest that doesn't exist will return ErrManifestNotFound\n\tDelete(ctx context.Context, dgst digest.Digest) error\n}\n\n// ManifestEnumerator enables iterating over manifests\ntype ManifestEnumerator interface {\n\t// Enumerate calls ingester for each manifest.\n\tEnumerate(ctx context.Context, ingester func(digest.Digest) error) error\n}\n\n// Describable is an interface for descriptors.\n//\n// Implementations of Describable are generally objects which can be\n// described, not simply descriptors.\ntype Describable interface {\n\t// Descriptor returns the descriptor.\n\tDescriptor() v1.Descriptor\n}\n\n// ManifestMediaTypes returns the supported media types for manifests.\nfunc ManifestMediaTypes() (mediaTypes []string) {\n\tfor t := range mappings {\n\t\tif t != \"\" {\n\t\t\tmediaTypes = append(mediaTypes, t)\n\t\t}\n\t}\n\treturn\n}\n\n// UnmarshalFunc implements manifest unmarshalling a given MediaType\ntype UnmarshalFunc func([]byte) (Manifest, v1.Descriptor, error)\n\nvar mappings = make(map[string]UnmarshalFunc)\n\n// UnmarshalManifest looks up manifest unmarshal functions based on\n// MediaType\nfunc UnmarshalManifest(ctHeader string, p []byte) (Manifest, v1.Descriptor, error) {\n\t// Need to look up by the actual media type, not the raw contents of\n\t// the header. Strip semicolons and anything following them.\n\tvar mediaType string\n\tif ctHeader != \"\" {\n\t\tvar err error\n\t\tmediaType, _, err = mime.ParseMediaType(ctHeader)\n\t\tif err != nil {\n\t\t\treturn nil, v1.Descriptor{}, err\n\t\t}\n\t}\n\n\tunmarshalFunc, ok := mappings[mediaType]\n\tif !ok {\n\t\tunmarshalFunc, ok = mappings[\"\"]\n\t\tif !ok {\n\t\t\treturn nil, v1.Descriptor{}, fmt.Errorf(\"unsupported manifest media type and no default available: %s\", mediaType)\n\t\t}\n\t}\n\n\treturn unmarshalFunc(p)\n}\n\n// RegisterManifestSchema registers an UnmarshalFunc for a given schema type.  This\n// should be called from specific\nfunc RegisterManifestSchema(mediaType string, u UnmarshalFunc) error {\n\tif _, ok := mappings[mediaType]; ok {\n\t\treturn fmt.Errorf(\"manifest media type registration would overwrite existing: %s\", mediaType)\n\t}\n\tmappings[mediaType] = u\n\treturn nil\n}\n"
        },
        {
          "name": "metrics",
          "type": "tree",
          "content": null
        },
        {
          "name": "notifications",
          "type": "tree",
          "content": null
        },
        {
          "name": "project",
          "type": "tree",
          "content": null
        },
        {
          "name": "registry.go",
          "type": "blob",
          "size": 3.884765625,
          "content": "package distribution\n\nimport (\n\t\"context\"\n\n\t\"github.com/distribution/reference\"\n)\n\n// Scope defines the set of items that match a namespace.\ntype Scope interface {\n\t// Contains returns true if the name belongs to the namespace.\n\tContains(name string) bool\n}\n\ntype fullScope struct{}\n\nfunc (f fullScope) Contains(string) bool {\n\treturn true\n}\n\n// GlobalScope represents the full namespace scope which contains\n// all other scopes.\nvar GlobalScope = Scope(fullScope{})\n\n// Namespace represents a collection of repositories, addressable by name.\n// Generally, a namespace is backed by a set of one or more services,\n// providing facilities such as registry access, trust, and indexing.\ntype Namespace interface {\n\t// Scope describes the names that can be used with this Namespace. The\n\t// global namespace will have a scope that matches all names. The scope\n\t// effectively provides an identity for the namespace.\n\tScope() Scope\n\n\t// Repository should return a reference to the named repository. The\n\t// registry may or may not have the repository but should always return a\n\t// reference.\n\tRepository(ctx context.Context, name reference.Named) (Repository, error)\n\n\t// Repositories fills 'repos' with a lexicographically sorted catalog of repositories\n\t// up to the size of 'repos' and returns the value 'n' for the number of entries\n\t// which were filled.  'last' contains an offset in the catalog, and 'err' will be\n\t// set to io.EOF if there are no more entries to obtain.\n\tRepositories(ctx context.Context, repos []string, last string) (n int, err error)\n\n\t// Blobs returns a blob enumerator to access all blobs\n\tBlobs() BlobEnumerator\n\n\t// BlobStatter returns a BlobStatter to control\n\tBlobStatter() BlobStatter\n}\n\n// RepositoryEnumerator describes an operation to enumerate repositories\ntype RepositoryEnumerator interface {\n\tEnumerate(ctx context.Context, ingester func(string) error) error\n}\n\n// RepositoryRemover removes given repository\ntype RepositoryRemover interface {\n\tRemove(ctx context.Context, name reference.Named) error\n}\n\n// ManifestServiceOption is a function argument for Manifest Service methods\ntype ManifestServiceOption interface {\n\tApply(ManifestService) error\n}\n\n// WithTag allows a tag to be passed into Put\nfunc WithTag(tag string) ManifestServiceOption {\n\treturn WithTagOption{tag}\n}\n\n// WithTagOption holds a tag\ntype WithTagOption struct{ Tag string }\n\n// Apply conforms to the ManifestServiceOption interface\nfunc (o WithTagOption) Apply(m ManifestService) error {\n\t// no implementation\n\treturn nil\n}\n\n// WithManifestMediaTypes lists the media types the client wishes\n// the server to provide.\nfunc WithManifestMediaTypes(mediaTypes []string) ManifestServiceOption {\n\treturn WithManifestMediaTypesOption{mediaTypes}\n}\n\n// WithManifestMediaTypesOption holds a list of accepted media types\ntype WithManifestMediaTypesOption struct{ MediaTypes []string }\n\n// Apply conforms to the ManifestServiceOption interface\nfunc (o WithManifestMediaTypesOption) Apply(m ManifestService) error {\n\t// no implementation\n\treturn nil\n}\n\n// Repository is a named collection of manifests and layers.\ntype Repository interface {\n\t// Named returns the name of the repository.\n\tNamed() reference.Named\n\n\t// Manifests returns a reference to this repository's manifest service.\n\t// with the supplied options applied.\n\tManifests(ctx context.Context, options ...ManifestServiceOption) (ManifestService, error)\n\n\t// Blobs returns a reference to this repository's blob service.\n\tBlobs(ctx context.Context) BlobStore\n\n\t// TODO(stevvooe): The above BlobStore return can probably be relaxed to\n\t// be a BlobService for use with clients. This will allow such\n\t// implementations to avoid implementing ServeBlob.\n\n\t// Tags returns a reference to this repositories tag service\n\tTags(ctx context.Context) TagService\n}\n\n// TODO(stevvooe): Must add close methods to all these. May want to change the\n// way instances are created to better reflect internal dependency\n// relationships.\n"
        },
        {
          "name": "registry",
          "type": "tree",
          "content": null
        },
        {
          "name": "releases",
          "type": "tree",
          "content": null
        },
        {
          "name": "tags.go",
          "type": "blob",
          "size": 1.421875,
          "content": "package distribution\n\nimport (\n\t\"context\"\n\n\t\"github.com/opencontainers/go-digest\"\n\tv1 \"github.com/opencontainers/image-spec/specs-go/v1\"\n)\n\n// TagService provides access to information about tagged objects.\ntype TagService interface {\n\t// Get retrieves the descriptor identified by the tag. Some\n\t// implementations may differentiate between \"trusted\" tags and\n\t// \"untrusted\" tags. If a tag is \"untrusted\", the mapping will be returned\n\t// as an ErrTagUntrusted error, with the target descriptor.\n\tGet(ctx context.Context, tag string) (v1.Descriptor, error)\n\n\t// Tag associates the tag with the provided descriptor, updating the\n\t// current association, if needed.\n\tTag(ctx context.Context, tag string, desc v1.Descriptor) error\n\n\t// Untag removes the given tag association\n\tUntag(ctx context.Context, tag string) error\n\n\t// All returns the set of tags managed by this tag service\n\tAll(ctx context.Context) ([]string, error)\n\n\t// Lookup returns the set of tags referencing the given digest.\n\tLookup(ctx context.Context, digest v1.Descriptor) ([]string, error)\n}\n\n// TagManifestsProvider provides method to retrieve the digests of manifests that a tag historically\n// pointed to\ntype TagManifestsProvider interface {\n\t// ManifestDigests returns set of digests that this tag historically pointed to. This also\n\t// includes currently linked digest. There is no ordering guaranteed\n\tManifestDigests(ctx context.Context, tag string) ([]digest.Digest, error)\n}\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "testutil",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracing",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        },
        {
          "name": "version",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}