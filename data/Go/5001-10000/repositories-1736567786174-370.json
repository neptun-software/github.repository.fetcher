{
  "metadata": {
    "timestamp": 1736567786174,
    "page": 370,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "marcel-dempers/docker-development-youtube-series",
      "stars": 5382,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.373046875,
          "content": "c#/src/bin/\nc#/src/obj/\nnode_modules/\n__pycache__/\n*.pem\n*.csr\n# terraform\n.terraform\n*.tfstate\n*.tfstate.*\nsecurity/letsencrypt/introduction/certs/**\nkubernetes/shipa/installs/shipa-helm-chart-1.1.1/\nmessaging/kafka/data/*\nkubernetes/portainer/volume*\nkubernetes/rancher/volume/*\nkubernetes/portainer/business/volume*\n\n#ignore postgres data for sample and database tutorials\npgdata"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.404296875,
          "content": "# The Ultimate Engineer Toolbox <img src=\"https://www.shareicon.net/data/128x128/2017/04/11/883708_media_512x512.png\" alt=\"YouTube\" width=\"5%\" height=\"5%\"> :hammer::wrench:\r\n\r\nA Collection of tools, hands-on walkthroughs with source code. <br/>\r\nThe Ultimate Swiss Army knife for DevOps, Developers and Platform Engineers\r\n\r\n<br/>\r\n\r\n\r\n| Steps  | Playlist :tv: | Source :octocat: | \r\n|---|---|---|\r\n| [Learn Kubernetes](./kubernetes/README.md) :snowflake: | <a href=\"https://www.youtube.com/playlist?list=PLHq1uqvAteVvUEdqaBeMK2awVThNujwMd\" title=\"Kubernetes\"><img src=\"https://i.ytimg.com/vi/8h4FoWK7tIA/hqdefault.jpg\" width=\"50%\" alt=\"Kubernetes Guide\" /></a>  | [source](./kubernetes/readme.md)   | \r\n| Learn about CI/CD tools :whale: | <a href=\"https://www.youtube.com/playlist?list=PLHq1uqvAteVsSsrnZimHEf7NJ1MlRhQUj\" title=\"CI/CD\"><img src=\"https://i.ytimg.com/vi/myCcJJ_Fk10/hqdefault.jpg\" width=\"50%\" alt=\"CI/CD Guide\" /></a>  |   |   |   |\r\n| Deploy Kubernetes to the cloud :partly_sunny: | <a href=\"https://www.youtube.com/playlist?list=PLHq1uqvAteVsUhzNBkn-rPzXtPNpJu1-k\" title=\"Cloud K8s\"><img src=\"https://i.ytimg.com/vi/3jA9EfkSAUU/hqdefault.jpg\" width=\"50%\" alt=\"Cloud Guide\" /></a>  | [source](./kubernetes/cloud/readme.md)  | \r\n| Monitoring Kubernetes :mag: | <a href=\"https://www.youtube.com/playlist?list=PLHq1uqvAteVuEXCrRkPFWLXRKWNLOVUHn\" title=\"Cloud K8s\"><img src=\"https://i.ytimg.com/vi/5o37CGlNLr8/hqdefault.jpg\" width=\"50%\" alt=\"Cloud Guide\" /></a>   | [source](./monitoring/prometheus/kubernetes/readme.md)  | \r\n| Guide to Logging :page_with_curl: | <a href=\"https://www.youtube.com/playlist?list=PLHq1uqvAteVvfDxFW50Mdezk0xum-tyHT\" title=\"Cloud K8s\"><img src=\"https://i.ytimg.com/vi/MMVdkzeQ848/hqdefault.jpg\" width=\"50%\" alt=\"Cloud Guide\" /></a>   | [source](./monitoring/logging/readme.md)  |  \r\n| Guide to ServiceMesh :globe_with_meridians: | <a href=\"https://www.youtube.com/playlist?list=PLHq1uqvAteVsmxHpGsMjTOROn3i99lzTA\" title=\"Cloud K8s\"><img src=\"https://i.ytimg.com/vi/rVNPnHeGYBE/hqdefault.jpg\" width=\"50%\" alt=\"Cloud Guide\" /></a>   | [source](./kubernetes/servicemesh/readme.md)  |\r\n\r\n\r\n## Docker Development Basics\r\n\r\n\r\n| Step :heavy_check_mark:  | Video :movie_camera: | Source Code :octocat: |\r\n|---|---|---|\r\n| Working with `Dockerfiles` <br/>(.NET, Golang, Python, NodeJS) | <a href=\"https://youtu.be/wyjNpxLRmLg\" title=\"Docker 1\"><img src=\"https://i.ytimg.com/vi/wyjNpxLRmLg/hqdefault.jpg\" width=\"50%\" alt=\"Docker 1\" /></a>  | [source](https://github.com/marcel-dempers/docker-development-youtube-series/tree/part1)  |\r\n| Working with code <br/>(.NET, Golang, Python, NodeJS) | <a href=\"https://youtu.be/EdmKENqnQUw\" title=\"Docker 1\"><img src=\"https://i.ytimg.com/vi/EdmKENqnQUw/hqdefault.jpg\" width=\"50%\" alt=\"Docker 1\" /></a>  | [source](https://github.com/marcel-dempers/docker-development-youtube-series/tree/part2)  |\r\n| Docker Multistage explained  | <a href=\"https://youtu.be/2lQ7WrwpZfI\" title=\"Docker 1\"><img src=\"https://i.ytimg.com/vi/2lQ7WrwpZfI/hqdefault.jpg\" width=\"50%\" alt=\"Docker 1\" /></a>  | [source](https://github.com/marcel-dempers/docker-development-youtube-series/tree/part3)  |\r\n| Debugging Go in Docker  | <a href=\"https://youtu.be/kToyI16IFxs\" title=\"Docker 1\"><img src=\"https://i.ytimg.com/vi/kToyI16IFxs/hqdefault.jpg\" width=\"50%\" alt=\"Docker 1\" /></a> | [source](https://github.com/marcel-dempers/docker-development-youtube-series/tree/master/golang)  |\r\n| Debugging .NET in Docker  | <a href=\"https://youtu.be/ds2bud0ZYTY\" title=\"Docker 1\"><img src=\"https://i.ytimg.com/vi/ds2bud0ZYTY/hqdefault.jpg\" width=\"50%\" alt=\"Docker 1\" /></a>  | [source](https://github.com/marcel-dempers/docker-development-youtube-series/tree/part5)  |\r\n| Debugging Python in Docker  | <a href=\"https://youtu.be/b78Tg-YmJZI\" title=\"Docker 1\"><img src=\"https://i.ytimg.com/vi/b78Tg-YmJZI/hqdefault.jpg\" width=\"50%\" alt=\"Docker 1\" /></a>  | [source](https://github.com/marcel-dempers/docker-development-youtube-series/tree/debugging-python)  |\r\n| Debugging NodeJS in Docker  | <a href=\"https://youtu.be/ktvgr9VZ4dc\" title=\"Docker 1\"><img src=\"https://i.ytimg.com/vi/ktvgr9VZ4dc/hqdefault.jpg\" width=\"50%\" alt=\"Docker 1\" /></a>  | [source](https://github.com/marcel-dempers/docker-development-youtube-series/tree/master/nodejs)  |\r\n\r\n## Engineering Toolbox :hammer::wrench:\r\n\r\n\r\nCheckout the toolbox [website](https://marceldempers.dev/toolbox)\r\n\r\n<a href=\"https://marceldempers.dev/toolbox\" title=\"toolbox 1\"><img src=\"./toolbox.png\" alt=\"toolbox 1\" /></a>\r\n"
        },
        {
          "name": "ai",
          "type": "tree",
          "content": null
        },
        {
          "name": "apache",
          "type": "tree",
          "content": null
        },
        {
          "name": "argo",
          "type": "tree",
          "content": null
        },
        {
          "name": "c#",
          "type": "tree",
          "content": null
        },
        {
          "name": "deno",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yaml",
          "type": "blob",
          "size": 2.4951171875,
          "content": "version: \"3.4\"\nservices:\n  csharp: #docker run --rm -it -v ${PWD}:/work -w /work -p 5000:5000 aimvector/csharp:1.0.0 /bin/sh\n    container_name: csharp\n    image: aimvector/csharp:1.0.0\n    build:\n      context: ./c#\n      target: debug\n    volumes:\n    - ./c#/src/:/work/\n    ports:\n      - 5000:5000\n  golang: #docker run --rm -it -v ${PWD}:/go/src/work -v ${PWD}/golang/configs/:/configs -v ${PWD}/golang/secrets/:/secrets  -p 5001:5000 -p 2345:2345 --security-opt \"seccomp:unconfined\" aimvector/golang:1.0.0\n    container_name: golang\n    image: aimvector/golang:1.0.0\n    build: \n      context: ./golang\n      target: prod\n    volumes:\n    - ./golang/configs:/configs/\n    - ./golang/secrets:/secrets/\n    - ./golang/src/:/go/src/work/\n    ports:\n      - 5001:5000\n      - 2345:2345\n    security_opt:\n      - \"seccomp:unconfined\"\n  python: #docker run --rm -it -v ${PWD}:/work -w /work -p 5003:5000 aimvector/python:1.0.0 /bin/sh\n    container_name: python\n    image: aimvector/python:1.0.0\n    build:\n      context: ./python\n      target: debug\n    #working_dir: /work      #comment out for build.target:prod\n    #entrypoint: /bin/sh     #comment out for build.target:prod\n    #stdin_open: true        #comment out for build.target:prod\n    #tty: true               #comment out for build.target:prod\n    volumes:\n    - ./python/src/:/work\n    ports:\n      - 5003:5000\n      - 5678:5678\n  nodejs: #docker run --rm -it -v ${PWD}:/work -w /work -p 5002:5000 aimvector/nodejs:1.0.0 /bin/sh\n    container_name: nodejs\n    image: aimvector/nodejs:1.0.0\n    build:\n      context: ./nodejs\n      target: debug\n    #working_dir: /work      #comment out for build.target:prod\n    #entrypoint: /bin/sh     #comment out for build.target:prod\n    #stdin_open: true        #comment out for build.target:prod\n    #tty: true               #comment out for build.target:prod\n    volumes:\n    - ./nodejs/src/:/work/src/\n    ports:\n      - 5002:5000\n      - 9229:9229            #debug port\n  spring-java: #docker run --rm -it -v ${PWD}:/work -w /work -p 5002:5000 aimvector/nodejs:1.0.0 /bin/sh\n    container_name: spring-java\n    image: aimvector/spring-java:1.0.0\n    build:\n      context: ./springboot/java/\n      target: debug\n    working_dir: /work/src/      #comment out for build.target:prod\n    entrypoint: /bin/sh     #comment out for build.target:prod\n    stdin_open: true        #comment out for build.target:prod\n    tty: true               #comment out for build.target:prod\n    volumes:\n    - ./springboot/java/:/work/src/\n    ports:\n      - 9999:8080\n"
        },
        {
          "name": "drone-ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "github",
          "type": "tree",
          "content": null
        },
        {
          "name": "golang",
          "type": "tree",
          "content": null
        },
        {
          "name": "hashicorp",
          "type": "tree",
          "content": null
        },
        {
          "name": "jenkins",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes",
          "type": "tree",
          "content": null
        },
        {
          "name": "messaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "monitoring",
          "type": "tree",
          "content": null
        },
        {
          "name": "nodejs",
          "type": "tree",
          "content": null
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "security",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot",
          "type": "tree",
          "content": null
        },
        {
          "name": "storage",
          "type": "tree",
          "content": null
        },
        {
          "name": "toolbox.png",
          "type": "blob",
          "size": 180.744140625,
          "content": null
        },
        {
          "name": "tracing",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}