{
  "metadata": {
    "timestamp": 1736567627357,
    "page": 208,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "volatiletech/sqlboiler",
      "stars": 6782,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1484375,
          "content": "/sqlboiler\n/sqlboiler-psql\n/sqlboiler-mysql\n/sqlboiler-mssql\n/cmd/sqlboiler/sqlboiler\nsqlboiler.toml\nmodels/\ntestschema.sql\n.cover\n*.sqlite3\nissue*.sql\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 10.6728515625,
          "content": "# Changelog\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic\nVersioning](http://semver.org/spec/v2.0.0.html).\n\n## [4.18.0] - 2025-01-03\n\n### Added\n\n- Added `--no-schema` option scaffolding. (thanks @morganhein)\n\n### Fixed\n\n- Revert change to `DeleteAll` method. The change causes incorrect changes on tables with multi-column primary keys\n\n## [4.17.1] - 2024-11-11\n\n### Fixed\n\n- Update the version constant to prevent inaccurate warnings about the version mismatch\n\n## [4.17.0] - 2024-11-10\n\n### Added\n\n- Add MySQL unix socket support (thanks @c9s)\n- Implement (Un-)marshalText for Decimal and NullDecimal (thanks @MJacred)\n- Add version checking flags to make sure CLI and project runtime versions are the same (thanks @090809)\n- Add SIMILAR TO method for Postgres (thanks @090809)\n- Skip code generation for replaced enum types using the flag `--skip-replaced-enum-types` (thanks @MJacred)\n\n### Fixed\n\n- Fix compilation errors with TIMESTAMP columns in sqlite3 driver (thanks @hirasawayuki)\n- Fix issue scanning `column_full_type` when `column_type` is NULL (thanks @mattdbush)\n- Fix performance issue with `DeleteAll` by using a `WHERE IN` instead of `WHERE OR` (thanks @jakeiotechsys)\n- Use renamed created column in `Update` method (thanks @glerchundi)\n- Fix comment position in first column of table (thanks @hizzuu)\n- Count from subquery if query uses HAVING or GROUP BY. This is because aggregate functions are run for each group separately, but we need to return the count of returned rows. (thanks @renom)\n- Fix output filenames that contain a forward slash or backslash. Replace with an underscore (thanks @MJacred)\n\n## [4.16.2] - 2024-02-12\n\n### Fixed\n\n- Replace `rand.seed` method to support golang 1.20 (thanks @pbr0ck3r)\n- Fix issue with invalid template generation on ignored struct tags (thanks @090809)\n\n## [4.16.1] - 2024-01-20\n\n### Fixed\n\n- Fix an issue caused in the last release where column names were double quoted (thanks @eirikbell)\n\n## [4.16.0] - 2024-01-16\n\n### Added\n\n- Add `Ordinal` function to enum types (thanks @EmiPhil)\n- Add ability to extend upsert expression with options (thanks @atzedus)\n- Add support for different case style for different struct tags (thanks @c9s)\n\n### Changed\n\n- Improve loads by using maps for deduplication (thanks @nicowolf91)\n- Return all columns not in both insert and update columns when doing upsert (thanks @adsa95)\n\n### Fixed\n\n- Composite foreign keys are now ignored to prevent generating invalid code (thanks @paulo-raca)\n- Ignore cross-schema foreign keys to prevent invalid code gen (thanks @caleblloyd)\n- Fix data race when registring hooks (thanks @nejtr0n)\n- Fix types.JSON.MarshalJSON to handle nil values (thanks @agis)\n- Properly quote column names in psql upsert (thanks @Flo4604)\n- Use aliased field name for `LastInsertID` (thanks @motemen)\n- Fix panic with nil pointers in structs to bind (thanks @stephenafamo)\n- Use `sync.Map` for unique columns to prevent concurrent write and read (thanks @Maxibond)\n\n## [4.15.0] - 2023-08-18\n\n### Added\n\n- Add LIKE and ILIKE Operators (thanks @jerrysalonen)\n- Allow defining foreign key relationships in config file (thanks @chrisngyn)\n\n### Fixed\n\n- Fix missing types import on non nullable char column in postgres driver (thanks @Ebbele)\n- Fix struct len check for columns whitelist and blacklist in sqlite driver (thanks @oscar-refacton)\n- Properly clean name before title casing (thanks @MJacred)\n- Fix parsing pgeo point in scientific notation format (thanks @zhongduo)\n- Downgrade decimal version before decompose interface (thanks @zhongduo)\n- Fix UPSERT query to respect conflict_target in postgres driver (thanks @agis)\n- Fix column type conversion in SQLite3 driver, specifically, columns with types such as `FLOAT(2, 1)` or `TYNYINT(1)` (thanks @Jumpaku)\n\n### Security\n\n- When writing comments, also split comments by `\\r` since several dialects also recognise this as a new line character\n\n## [v4.14.2] - 2023-03-21\n\n### Fixed\n\n- Fix qm.WithDeleted helper with a custom soft delete column (thanks @lopezator)\n- Skipping empty values from the update list (thanks @bvigar)\n\n## [v4.14.1] - 2023-01-31\n\n### Fixed\n\n- Fix composite key handling in sqlite3 driver (thanks @vortura)\n- Use correct executor for relationship test when `no-context` is true\n\n## [v4.14.0] - 2022-12-14\n\n### Added\n\n- Allow calling struct.Exists() without having to pass on PK fields (thanks @MJacred)\n\n### Changed\n\n- Stop using deprecated methods from io/ioutil (thanks @stefafafan)\n\n### Fixed\n\n- Fixed correct hooks when loading relationships to-one (thanks @parnic)\n\n## [v4.13.0] - 2022-08-28\n\n### Added\n\n- Generate IN/NIN whereHelpers for nullable types (thanks @fdegiuli)\n\n### Fixed\n\n- Fixed concurrent map writes in psql driver (thanks @pavel-krush)\n- Force title case for enum null prefix (thanks @optiman)\n\n## [v4.12.0] - 2022-07-26\n\n### Added\n\n- Fetch column and table info in parallel (thanks @pavel-krush)\n- Generate IN/NIN methods for enum type query helpers (thanks @optiman)\n- Improve psql performance by isolating uniqueness query (thanks @peterldowns)\n- Support for psql materialized view (thanks @severedsea)\n- Support loading model relationships when binding to a struct with embedded model (thanks @optiman)\n\n### Fixed\n\n- Fix panic when missing primary key in table (thanks @zapo)\n- Fix some SQLite tests by enabling shared cache (thanks @gabe565)\n- Fix(sqlite3): narrows `column.AutoGenerated` to columns with INT PKs (thanks @pbedat)\n- Fix `auto-columns.deleted` not replace the default `deleted_at` column name (thanks @shivaluma)\n- Trim whitespace for column comments (thanks @arp242)\n\n## [v4.11.0] - 2022-04-25\n\n### Added\n\n- Add getter methods to relationship structs\n  (thanks @fsaintjacques)\n\n### Changed\n\n- When title casing UPPER_SNAKE_CASE strings, underscores are not removed for readablity.\n\n### Fixed\n\n- Fix panic when a column referrring a foreign key is ignored\n  (thanks @zapo)\n- Fix one single point in paths and polygons\n  (thanks @saulortega)\n\n## [v4.10.2] - 2022-04-15\n\n### Fixed\n\n- Fix performance issue when scanning pgeo point (thanks @ivokanchev)\n\n## [v4.10.1] - 2022-04-15\n\n### Fixed\n\n- Properly assign new query object in models.Pural()\n\n## [v4.10.0] - 2022-04-15\n\n### Added\n\n- Add config options to allow user defined rules for inflections\n\n### Fixed\n\n- Don't generate test suites for views\n- Properly assign new query object in models.Pural()\n- Fix false negatives for enum values\n- Strip non alphanumeric characters when title casing.\n\n## [v4.9.2] - 2022-04-11\n\n### Fixed\n\n- Use correct column alias during soft delete\n- Use a default \"table.\\*\" for model queries\n\n## [v4.9.1] - 2022-04-08\n\n### Fixed\n\n- Fixes issue with column name quotinc in many-to-many eager load\n- Properly honor `--no-back-referencing` in relationship setops\n- Retract `v4.9.0` due to issues with the commit tagging and the generated code showing `v4.8.6`\n\n## [v4.9.0] - 2022-04-04\n\n### Added\n\n- Add `AllEnum()` function to retrieve a slice of all valid values of an enum type\n- Add `DefaultTemplates` to `boilingcore.Config` to change the base template files to use for generation\n- Add `CustomTemplateFuncs` to `boilingcore.Config` to supply additional functions that can be used in templates (thanks @ccakes)\n\n### Fixed\n\n- Fixes issues with detecting enum values that contain uppercases\n- Properly wrap column names in quotes when loading many-to-many relationships (thanks @bryanmcgrane)\n- Removes duplicated `deleted_at IS NULL` clause in relationship queries (thanks @ktakenaka)\n\n## [v4.8.6] - 2022-01-29\n\n### Added\n\n- Add missing function `func (modelQuery) DeleteAllGP(...)` (thanks @parnic)\n\n### Fixed\n\n- Fixed issue with generation of both nullable and non-nullable enum types (thanks @optiman)\n\n## [v4.8.5] - 2022-01-28\n\n### Added\n\n- Do not generate a template file if the content is empty\n- Add function `drivers.RegisterBinaryFromCmdArg()` to extract binary registration\n\n### Fixed\n\n- Fix panic on zero value of `types.NullDecimal`\n- `driver.Value()` for zero `types.Decimal` is now \"0\".\n\n## [v4.8.4] - 2022-01-27\n\n### Added\n\n- Add new --always-wrap-errors flag that does not unwrap sql.ErrNoRows\n  so it can retain the stack trace. This supports the best practice of using\n  errors.Is() anyway and will eventually become the default behavior in\n  a breaking v5 (thanks @jhnj)\n- Add support for \\* as a wildcard for white/blacklisting columns. See readme\n  for details (thanks @Yoshiji)\n- Add missing function `func (modelQuery) UpdateAllGP(...)` (thanks @MeanSquaredError)\n- Add support for generated columns\n- Add support for database views\n- Add a `_model` suffix to the generated file for tables names that end with\n  `_test` or `_goos` or `_goarch` since Go treats such files specially.\n- Add `C` in front of model column attributes that begin with a number since a struct\n  field cannot begin with a number in Go\n- Add **sqlite3** driver to the main repo using the CGo-free port\n\n### Changes\n\n- Modify the `--add-enum-types` flag to also use the generated types in the model\n  fields (thanks @optiman)\n- Mark nullable columns as having a default in Postgres driver\n- Bump MySQL version used for testing to 8.0\n\n### Fixed\n\n- Fix panic when a column referrring a foreign key is ignored\n  (thanks @zapo)\n- Fix bug with using the zero value of the decimal type for a nullable column\n  (thanks @hongshaoyang)\n\n## [v4.8.3] - 2021-11-16\n\n### Fixed\n\n- Fix bad use of titlecase in mysql enum name generation\n\n## [v4.8.2] - 2021-11-16\n\n### Fixed\n\n- Fix regression in enum name generation\n\n## [v4.8.1] - 2021-11-14\n\n### Fixed\n\n- Fix a regression in the soft delete test template generation introduced in\n  4.8.1\n\n## [v4.8.0] - 2021-11-14\n\n### Added\n\n- Add `--add-enum-types` to create distinct enum types instead of strings\n  (thanks @stephenamo)\n\n### Fixed\n\n- Fix a regression in soft delete generation introduced in 4.7.1\n  (thanks @stephenamo)\n\n## [v4.7.1] - 2021-09-30\n\n### Changed\n\n- Change template locations to templates/{main,test}. This unfortunate move\n  is necessary to preserve old behavior.\n\n### Fixed\n\n- Revert change to boilingcore.New() both in behavior and function signature\n\n## [v4.7.0] - 2021-09-26\n\n### Added\n\n- Add configuration for overriding custom timestamp column names\n  (thanks @stephanafamo)\n- Add support for arguments to order by (thanks @emwalker and @alexdor)\n- Add support for comments to mysql (thanks @Wuvist)\n\n### Fixed\n\n- Fix CVEs in transitive dependencies by bumping cobra & viper\n- Fix inconsistent generation of IsNull/IsNotNull where helpers for types that\n  appear both as null and not null in the database.\n- JSON unmarshalling null into types.NullDecimal will no longer panic. String\n  and format have been overridden to return \"nil\" when the underlying decimal\n  is nil instead of crashing.\n\n### Removed\n\n- Removed bindata in favor of go:embed. This is not a breaking change as there\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.017578125,
          "content": "# Contributing\n\nThanks for your interest in contributing to SQLBoiler!\n\nWe have a very lightweight process and aim to keep it that way.\nRead the sections for the piece you're interested in and go from\nthere.\n\nIf you need quick communication we're usually on [Slack](https://sqlboiler.from-the.cloud).\n\n# New Code / Features\n\n## Small Change\n\n#### TLDR\n\n1. Open PR against **master** branch with explanation\n1. Participate in Github Code Review\n\n#### Long version\n\nFor code that requires little to no discussion, please just open a pull request with some\nexplanation against the **master** branch. \n\n## Bigger Change\n\n#### TLDR\n\n1. Start proposal of idea in Github issue\n1. After design concensus, open PR with the work against the **master** branch\n1. Participate in Github Code Review\n\n#### Long version\n\nIf however you're working on something bigger, it's usually better to check with us on the idea\nbefore starting on a pull request, just so there's no time wasted in redoing/refactoring or being\noutright rejected because the PR is at odds with the design. The best way to accomplish this is to\nopen an issue to discuss it. It can always start as a Slack conversation but should eventually end\nup as an issue to avoid penalizing the rest of the users for not being on Slack. Once we agree on\nthe way to do something, then open the PR against the **master** branch and we'll commence code review\nwith the Github code review tools. Then it will be merged into master, and later go out in a release.\n\n## Developer getting started\n\n1. Add a [Configuration files](https://github.com/volatiletech/sqlboiler#configuration).\n1. Write your changes\n1. Generate executable. Run again if you have changed anything in core code or driver code.\n   ```\n   ./boil.sh build all\n   ```\n\n1. Also Move sqlboiler-[driver] built to the bin of gopath if you have changed the driver code.\n\n1. Generate your models from existing tables\n\n   ```\n   ./boil.sh gen [driver]\n   ```\n\n1. You may need to install following package before able to run the tests.\n\n   ```\n   go get -u github.com/volatiletech/null\n   ```\n\n1. Test the output\n\n   ```\n   ./boil.sh test\n   ```\n\n\n# Bugs\n\nIssues should be filed on Github, simply use the template provided and fill in detail. If there's\nmore information you feel you should give use your best judgement and add it in, the more the better.\nSee the section below for information on providing database schemas.\n\nBugs that have responses from contributors but no action from those who opened them after a time\nwill be closed with the comment: \"Stale\"\n\n## Schemas\n\nA database schema can help us fix generation issues very quickly. However not everyone is willing to part\nwith their database schema for various reasons and that's fine. Instead of providing the schema please\nthen provide a subset of your database (you can munge the names so as to be unrecognizable) that can\nhelp us reproduce the problem.\n\n_Note:_ Your schema information is included in the output from `--debug`, so be careful giving this\ninformation out publicly on a Github issue if you're sensitive about this.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.482421875,
          "content": "Copyright (c) 2020 Volatile Technologies Inc. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n* Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above\n  copyright notice, this list of conditions and the following disclaimer\n  in the documentation and/or other materials provided with the\n  distribution.\n* Neither the name of Vattle or Volatile Technologies Inc. nor the\n  names of its contributors may be used to endorse or promote products\n  derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 82.576171875,
          "content": "![sqlboiler logo](https://i.imgur.com/lMXUTPE.png)\n\n[![License](https://img.shields.io/badge/license-BSD-blue.svg)](https://github.com/volatiletech/sqlboiler/blob/master/LICENSE)\n[![GoDoc](https://img.shields.io/badge/godoc-reference-5272B4)](https://pkg.go.dev/mod/github.com/volatiletech/sqlboiler/v4)\n[![Slack](https://img.shields.io/badge/slack-%23general-lightgrey.svg)](https://sqlboiler.from-the.cloud)\n![ActionsCI](https://github.com/volatiletech/sqlboiler/workflows/test/badge.svg)\n[![Go Report Card](https://goreportcard.com/badge/volatiletech/sqlboiler)](http://goreportcard.com/report/volatiletech/sqlboiler)\n\n# Maintenance Mode\n\nThis package is currently in maintenance mode, which means:\n\n1. It generally does not accept new features.\n2. It does accept bug fixes and version compatability changes provided by the community.\n3. Maintainers usually do not resolve reported issues.\n4. Community members are encouraged to help each other with reported issues.\n\n## Alternatives\n\nIf looking for an actively maintained alternative, consider the following:\n\n### 1. Bob - <https://github.com/stephenafamo/bob>\n\nBob is very similar to SQLBoiler. It was directly inspired by SQLBoiler and was created by a maintainer of SQLBoiler.\n\nA comparison can be found here: <https://bob.stephenafamo.com/vs/sqlboiler/>.\n\n### 2. sqlc - <https://github.com/sqlc-dev/sqlc>\n\n`sqlc` is a command line tool that generates type-safe code from SQL.  \nIt is not an ORM but for many use cases it can be a good alternative to SQLBoiler.\n\n# About SQLBoiler\n\nSQLBoiler is a tool to generate a Go ORM tailored to your database schema.\n\nIt is a \"database-first\" ORM as opposed to \"code-first\" (like gorm/gorp).\nThat means you must first create your database schema. Please use something\nlike [sql-migrate](https://github.com/rubenv/sql-migrate)\nor some other migration tool to manage this part of the database's life-cycle.\n\n# Note on versions\n\nv1, v2, and v3 are no longer maintained.\n\nv3 is the last GOPATH-compatible version.\n\nv4 has no real breaking changes between v3 and itself other than Go modules\nand is the only maintained version. Note this does not work with GOPATH\nprojects.\n\n## Why another ORM\n\nWhile attempting to migrate a legacy Rails database, we realized how much ActiveRecord benefited us in terms of development velocity.\nComing over to the Go `database/sql` package after using ActiveRecord feels extremely repetitive, super long-winded and down-right boring.\nBeing Go veterans we knew the state of ORMs was shaky, and after a quick review we found what our fears confirmed. Most packages out\nthere are code-first, reflect-based and have a very weak story around relationships between models. So with that we set out with these goals:\n\n- Work with existing databases: Don't be the tool to define the schema, that's better left to other tools.\n- ActiveRecord-like productivity: Eliminate all sql boilerplate, have relationships as a first-class concept.\n- Go-like feel: Work with normal structs, call functions, no hyper-magical struct tags, small interfaces.\n- Go-like performance: [Benchmark](#benchmarks) and optimize the hot-paths, perform like hand-rolled `sql.DB` code.\n\nWe believe with SQLBoiler and our database-first code-generation approach we've been able to successfully meet all of these goals. On top\nof that SQLBoiler also confers the following benefits:\n\n- The models package is type safe. This means no chance of random panics due to passing in the wrong type. No need for interface{}.\n- Our types closely correlate to your database column types. This is expanded by our extended null package which supports nearly all Go data types.\n- A system that is easy to debug. Your ORM is tailored to your schema, the code paths should be easy to trace since it's not all buried in reflect.\n- Auto-completion provides work-flow efficiency gains.\n\n# Table of Contents\n\n- [SQLBoiler](#sqlboiler)\n  - [Why another ORM](#why-another-orm)\n  - [About SQL Boiler](#about-sql-boiler)\n    - [Features](#features)\n    - [Missing Features](#missing-features)\n    - [Supported Databases](#supported-databases)\n    - [A Small Taste](#a-small-taste)\n  - [Requirements &amp; Pro Tips](#requirements--pro-tips)\n    - [Requirements](#requirements)\n    - [Pro Tips](#pro-tips)\n  - [Getting started](#getting-started)\n    - [Videos](#videos)\n    - [Download](#download)\n    - [Configuration](#configuration)\n    - [Initial Generation](#initial-generation)\n    - [Regeneration](#regeneration)\n    - [Controlling Version](#controlling-version)\n    - [Controlling Generation](#controlling-generation)\n      - [Aliases](#aliases)\n      - [Types](#types)\n      - [Imports](#imports)\n      - [Templates](#templates)\n    - [Extending Generated Models](#extending-generated-models)\n  - [Diagnosing Problems](#diagnosing-problems)\n  - [Features &amp; Examples](#features--examples)\n    - [Automatic CreatedAt/UpdatedAt](#automatic-createdatupdatedat)\n      - [Skipping Automatic Timestamps](#skipping-automatic-timestamps)\n      - [Overriding Automatic Timestamps](#overriding-automatic-timestamps)\n    - [Query Building](#query-building)\n    - [Query Mod System](#query-mod-system)\n    - [Function Variations](#function-variations)\n    - [Finishers](#finishers)\n    - [Raw Query](#raw-query)\n    - [Binding](#binding)\n    - [Relationships](#relationships)\n    - [Hooks](#hooks)\n      - [Skipping Hooks](#skipping-hooks)\n    - [Transactions](#transactions)\n    - [Debug Logging](#debug-logging)\n    - [Select](#select)\n    - [Find](#find)\n    - [Insert](#insert)\n    - [Update](#update)\n    - [Delete](#delete)\n    - [Upsert](#upsert)\n    - [Reload](#reload)\n    - [Exists](#exists)\n    - [Enums](#enums)\n    - [Constants](#constants)\n  - [FAQ](#faq)\n    - [Won't compiling models for a huge database be very slow?](#wont-compiling-models-for-a-huge-database-be-very-slow)\n    - [Missing imports for generated package](#missing-imports-for-generated-package)\n    - [How should I handle multiple schemas](#how-should-i-handle-multiple-schemas)\n    - [How do I use the types.BytesArray for Postgres bytea arrays?](#how-do-i-use-typesbytesarray-for-postgres-bytea-arrays)\n    - [Why aren't my time.Time or null.Time fields working in MySQL?](#why-arent-my-timetime-or-nulltime-fields-working-in-mysql)\n    - [Where is the homepage?](#where-is-the-homepage)\n    - [Why are the auto-generated tests failing?](#why-are-the-auto-generated-tests-failing)\n- [Benchmarks](#benchmarks)\n- [Third-Party Extensions](#third-party-extensions)\n\n## About SQL Boiler\n\n### Features\n\n- Full model generation\n- Extremely fast code generation\n- High performance through generation & intelligent caching\n- Uses boil.Executor (simple interface, sql.DB, sqlx.DB etc. compatible)\n- Uses context.Context\n- Easy workflow (models can always be regenerated, full auto-complete)\n- Strongly typed querying (usually no converting or binding to pointers)\n- Hooks (Before/After Create/Select/Update/Delete/Upsert)\n- Automatic CreatedAt/UpdatedAt\n- Automatic DeletedAt\n- Table and column whitelist/blacklist\n- Relationships/Associations\n- Eager loading (recursive)\n- Custom struct tags\n- Transactions\n- Raw SQL fallback\n- Compatibility tests (Run against your own DB schema)\n- Debug logging\n- Basic multiple schema support (no cross-schema support)\n- 1d arrays, json, hstore & more\n- Enum types\n- Out of band driver support\n- Support for database views\n- Supports generated/computed columns\n\n### Missing features\n\n- Multi-column foreign key support\n- Materialized view support\n  - Only postgresql is supported\n\n### Supported Databases\n\n| Database          | Driver Location                                                                                     |\n| ----------------- | --------------------------------------------------------------------------------------------------- |\n| PostgreSQL        | [https://github.com/volatiletech/sqlboiler/v4/drivers/sqlboiler-psql](drivers/sqlboiler-psql)       |\n| MySQL             | [https://github.com/volatiletech/sqlboiler/v4/drivers/sqlboiler-mysql](drivers/sqlboiler-mysql)     |\n| MSSQLServer 2012+ | [https://github.com/volatiletech/sqlboiler/v4/drivers/sqlboiler-mssql](drivers/sqlboiler-mssql)     |\n| SQLite3           | [https://github.com/volatiletech/sqlboiler/v4/drivers/sqlboiler-sqlite3](drivers/sqlboiler-sqlite3) |\n| CockroachDB       | https://github.com/glerchundi/sqlboiler-crdb                                                        |\n\n**Note:** SQLBoiler supports out of band driver support so you can make your own\n\nWe are seeking contributors for other database engines.\n\n### A Small Taste\n\nFor a comprehensive list of available operations and examples please see [Features & Examples](#features--examples).\n\n```go\nimport (\n  // Import this so we don't have to use qm.Limit etc.\n  . \"github.com/volatiletech/sqlboiler/v4/queries/qm\"\n)\n\n// Open handle to database like normal\ndb, err := sql.Open(\"postgres\", \"dbname=fun user=abc\")\nif err != nil {\n  return err\n}\n\n// If you don't want to pass in db to all generated methods\n// you can use boil.SetDB to set it globally, and then use\n// the G variant methods like so (--add-global-variants to enable)\nboil.SetDB(db)\nusers, err := models.Users().AllG(ctx)\n\n// Query all users\nusers, err := models.Users().All(ctx, db)\n\n// Panic-able if you like to code that way (--add-panic-variants to enable)\nusers := models.Users().AllP(db)\n\n// More complex query\nusers, err := models.Users(Where(\"age > ?\", 30), Limit(5), Offset(6)).All(ctx, db)\n\n// Ultra complex query\nusers, err := models.Users(\n  Select(\"id\", \"name\"),\n  InnerJoin(\"credit_cards c on c.user_id = users.id\"),\n  Where(\"age > ?\", 30),\n  AndIn(\"c.kind in ?\", \"visa\", \"mastercard\"),\n  Or(\"email like ?\", `%aol.com%`),\n  GroupBy(\"id\", \"name\"),\n  Having(\"count(c.id) > ?\", 2),\n  Limit(5),\n  Offset(6),\n).All(ctx, db)\n\n// Use any \"boil.Executor\" implementation (*sql.DB, *sql.Tx, data-dog mock db)\n// for any query.\ntx, err := db.BeginTx(ctx, nil)\nif err != nil {\n  return err\n}\nusers, err := models.Users().All(ctx, tx)\n\n// Relationships\nuser, err := models.Users().One(ctx, db)\nif err != nil {\n  return err\n}\nmovies, err := user.FavoriteMovies().All(ctx, db)\n\n// Eager loading\nusers, err := models.Users(Load(\"FavoriteMovies\")).All(ctx, db)\nif err != nil {\n  return err\n}\nfmt.Println(len(users.R.FavoriteMovies))\n```\n\n## Requirements & Pro Tips\n\n### Requirements\n\n- Go 1.13, older Go versions are not supported.\n- Join tables should use a _composite primary key_.\n  - For join tables to be used transparently for relationships your join table must have\n    a _composite primary key_ that encompasses both foreign table foreign keys and\n    no other columns in the table. For example, on a join table named\n    `user_videos` you should have: `primary key(user_id, video_id)`, with both\n    `user_id` and `video_id` being foreign key columns to the users and videos\n    tables respectively and there are no other columns on this table.\n- MySQL 5.6.30 minimum; ssl-mode option is not supported for earlier versions.\n- For MySQL if using the `github.com/go-sql-driver/mysql` driver, please activate\n  [time.Time parsing](https://github.com/go-sql-driver/mysql#timetime-support) when making your\n  MySQL database connection. SQLBoiler uses `time.Time` and `null.Time` to represent time in\n  it's models and without this enabled any models with `DATE`/`DATETIME` columns will not work.\n\n### Pro Tips\n\n- SQLBoiler generates type safe identifiers for table names, table column names,\n  a table's relationship names and type-safe where clauses. You should use these\n  instead of strings due to the ability to catch more errors at compile time\n  when your database schema changes. See [Constants](#constants) for details.\n- It's highly recommended to use transactions where sqlboiler will be doing\n  multiple database calls (relationship setops with insertions for example) for\n  both performance and data integrity.\n- Foreign key column names should end with `_id`.\n  - Foreign key column names in the format `x_id` will generate clearer method names.\n    It is advisable to use this naming convention whenever it makes sense for your database schema.\n- If you never plan on using the hooks functionality you can disable generation of this\n  feature using the `--no-hooks` flag. This will save you some binary size.\n\n## Getting started\n\n#### Videos\n\nIf you like learning via a video medium, sqlboiler has a number of screencasts\navailable.\n\n_NOTE:_ These videos predate modules (v4), the installation/import paths will be\ndifferent though everything else should remain similar.\n\n[SQLBoiler: Getting Started](https://www.youtube.com/watch?v=y5utRS9axfg)\n\n[SQLBoiler: What's New in v3](https://www.youtube.com/watch?v=-B-OPsYRZJA)\n\n[SQLBoiler: Advanced Queries and Relationships](https://www.youtube.com/watch?v=iiJuM9NR8No)\n\n[Old (v2): SQLBoiler Screencast #1: How to get started](https://www.youtube.com/watch?v=fKmRemtmi0Y)\n\n#### Download\n\nFirst you have to install the code generator binaries. There's the main binary\nand then a separate driver binary (select the right one for your database).\n\nBe very careful when installing, there's confusion in the Go ecosystem and\nknowing what are the right commands to run for which Go version can be tricky.\nEnsure you don't forget any /v suffixes or you'll end up on an old version.\n\n```shell\n# Go 1.16 and above:\ngo install github.com/volatiletech/sqlboiler/v4@latest\ngo install github.com/volatiletech/sqlboiler/v4/drivers/sqlboiler-psql@latest\n\n# Go 1.15 and below:\n# Install sqlboiler v4 and the postgresql driver (mysql, mssql, sqlite3 also available)\n# NOTE: DO NOT run this inside another Go module (like your project) as it will\n# pollute your go.mod with a bunch of stuff you don't want and your binary\n# will not get installed.\nGO111MODULE=on go get -u -t github.com/volatiletech/sqlboiler/v4\nGO111MODULE=on go get github.com/volatiletech/sqlboiler/v4/drivers/sqlboiler-psql\n```\n\nTo install `sqlboiler` as a dependency in your project use the commands below\ninside of your go module's directory tree. This will install the dependencies\ninto your `go.mod` file at the correct version.\n\n```shell\n# Do not forget the trailing /v4 and /v8 in the following commands\ngo get github.com/volatiletech/sqlboiler/v4\n# Assuming you're going to use the null package for its additional null types\ngo get github.com/volatiletech/null/v8\n```\n\n#### Configuration\n\nCreate a configuration file. Because the project uses\n[viper](https://github.com/spf13/viper), TOML, JSON and YAML are all usable\nbut only TOML is supported. Environment variables are also able to be used.\n\nThe configuration file should be named `sqlboiler.toml` and is searched for in\nthe following directories in this order:\n\n- `./`\n- `$XDG_CONFIG_HOME/sqlboiler/`\n- `$HOME/.config/sqlboiler/`\n\nWe will assume TOML for the rest of the documentation.\n\n##### Database Driver Configuration\n\nThe configuration for a specific driver (in these examples we'll use `psql`)\nmust all be prefixed by the driver name. You must use a configuration file or\nenvironment variables for configuring the database driver; there are no\ncommand-line options for providing driver-specific configuration.\n\nIn the configuration file for postgresql for example you would do:\n\n```toml\n[psql]\ndbname = \"your_database_name\"\n```\n\nWhen you use an environment variable it must also be prefixed by the driver\nname:\n\n```sh\nPSQL_DBNAME=\"your_database_name\"\n```\n\nThe values that exist for the drivers:\n\n| Name        | Required | Postgres Default | MySQL Default | MSSQL Default |\n| ----------- | -------- | ---------------- | ------------- | ------------- |\n| schema      | no       | \"public\"         | none          | \"dbo\"         |\n| dbname      | yes      | none             | none          | none          |\n| host        | yes      | none             | none          | none          |\n| port        | no       | 5432             | 3306          | 1433          |\n| user        | yes      | none             | none          | none          |\n| pass        | no       | none             | none          | none          |\n| sslmode     | no       | \"require\"        | \"true\"        | \"true\"        |\n| unix-socket | no       | N/A              | \"\"            | N/A           |\n| whitelist   | no       | []               | []            | []            |\n| blacklist   | no       | []               | []            | []            |\n\nExample of whitelist/blacklist:\n\n```toml\n[psql]\n# Removes migrations table, the name column from the addresses table, and\n# secret_col of any table from being generated. Foreign keys that reference tables\n# or columns that are no longer generated because of whitelists or blacklists may\n# cause problems.\nblacklist = [\"migrations\", \"addresses.name\", \"*.secret_col\"]\n```\n\n##### Generic config options\n\nYou can also pass in these top level configuration values if you would prefer\nnot to pass them through the command line or environment variables:\n\n| Name                      | Defaults |\n| ------------------------- | -------- |\n| pkgname                   | \"models\" |\n| output                    | \"models\" |\n| tag                       | []       |\n| debug                     | false    |\n| add-global-variants       | false    |\n| add-panic-variants        | false    |\n| add-enum-types            | false    |\n| enum-null-prefix          | \"Null\"   |\n| no-context                | false    |\n| no-hooks                  | false    |\n| no-tests                  | false    |\n| no-auto-timestamps        | false    |\n| no-rows-affected          | false    |\n| no-driver-templates       | false    |\n| tag-ignore                | []       |\n| strict-verify-mod-version | false    |\n\n##### Full Example\n\n```toml\noutput   = \"my_models\"\nwipe     = true\nno-tests = true\nadd-enum-types = true\n\n[psql]\n  dbname = \"dbname\"\n  host   = \"localhost\"\n  port   = 5432\n  user   = \"dbusername\"\n  pass   = \"dbpassword\"\n  schema = \"myschema\"\n  blacklist = [\"migrations\", \"other\"]\n\n[mysql]\n  dbname  = \"dbname\"\n  host    = \"localhost\"\n  port    = 3306\n  user    = \"dbusername\"\n  pass    = \"dbpassword\"\n  sslmode = \"false\"\n  tinyint_as_int = true\n\n[mssql]\n  dbname  = \"dbname\"\n  host    = \"localhost\"\n  port    = 1433\n  user    = \"dbusername\"\n  pass    = \"dbpassword\"\n  sslmode = \"disable\"\n  schema  = \"notdbo\"\n```\n\n#### Initial Generation\n\nAfter creating a configuration file that points at the database we want to\ngenerate models for, we can invoke the sqlboiler command line utility.\n\n```text\nSQL Boiler generates a Go ORM from template files, tailored to your database schema.\nComplete documentation is available at http://github.com/volatiletech/sqlboiler\n\nUsage:\n  sqlboiler [flags] <driver>\n\nExamples:\nsqlboiler psql\n\nFlags:\n      --add-global-variants        Enable generation for global variants\n      --add-panic-variants         Enable generation for panic variants\n      --add-soft-deletes           Enable soft deletion by updating deleted_at timestamp\n      --add-enum-types             Enable generation of types for enums\n      --enum-null-prefix           Name prefix of nullable enum types (default \"Null\")\n  -c, --config string              Filename of config file to override default lookup\n  -d, --debug                      Debug mode prints stack traces on error\n  -h, --help                       help for sqlboiler\n      --no-auto-timestamps         Disable automatic timestamps for created_at/updated_at\n      --no-back-referencing        Disable back referencing in the loaded relationship structs\n      --no-context                 Disable context.Context usage in the generated code\n      --no-driver-templates        Disable parsing of templates defined by the database driver\n      --no-hooks                   Disable hooks feature for your models\n      --no-rows-affected           Disable rows affected in the generated API\n      --no-tests                   Disable generated go test files\n  -o, --output string              The name of the folder to output to (default \"models\")\n  -p, --pkgname string             The name you wish to assign to your generated package (default \"models\")\n      --struct-tag-casing string   Decides the casing for go structure tag names. camel, title, alias or snake (default \"snake\")\n  -t, --tag strings                Struct tags to be included on your models in addition to json, yaml, toml\n      --tag-ignore strings         List of column names that should have tags values set to '-' (ignored during parsing)\n      --templates strings          A templates directory, overrides the embedded template folders in sqlboiler\n      --version                    Print the version\n      --strict-verify-mod-version  Prevent code generation, if project version of sqlboiler not match with executable\n      --wipe                       Delete the output folder (rm -rf) before generation to ensure sanity\n```\n\nFollow the steps below to do some basic model generation. Once you've generated\nyour models, you can run the compatibility tests which will exercise the entirety\nof the generated code. This way you can ensure that your database is compatible\nwith SQLBoiler. If you find there are some failing tests, please check the\n[Diagnosing Problems](#diagnosing-problems) section.\n\n```sh\n# Generate our models and exclude the migrations table\n# When passing 'psql' here, it looks for a binary called\n# 'sqlboiler-psql' in your CWD and PATH. You can also pass\n# an absolute path to a driver if you desire.\nsqlboiler psql\n\n# Run the generated tests\ngo test ./models\n```\n\n_Note: No `mysqldump` or `pg_dump` equivalent for Microsoft SQL Server, so generated tests must be supplemented by `tables_schema.sql` with `CREATE TABLE ...` queries_\n\nYou can use `go generate` for SQLBoiler if you want to to make it easy to\nrun the command for your application:\n\n```go\n//go:generate sqlboiler --flags-go-here psql\n```\n\nIt's important to not modify anything in the output folder, which brings us to\nthe next topic: regeneration.\n\n#### Regeneration\n\nWhen regenerating the models it's recommended that you completely delete the\ngenerated directory in a build script or use the `--wipe` flag in SQLBoiler.\nThe reasons for this are that sqlboiler doesn't try to diff your files in any\nsmart way, it simply writes the files it's going to write whether they're there\nor not and doesn't delete any files that were added by you or previous runs of\nSQLBoiler. In the best case this can cause compilation errors, in the worst case\nthis may leave extraneous and unusable code that was generated against tables\nthat are no longer in the database.\n\nThe bottom line is that this tool should always produce the same result from\nthe same source. And the intention is to always regenerate from a pure state.\nThe only reason the `--wipe` flag isn't defaulted to on is because we don't\nlike programs that `rm -rf` things on the filesystem without being asked to.\n\n#### Controlling Version\n\nWhen sqlboiler is used on a regular basis, sometimes problems arise on the\ndevelopers' side that the version they are using does not match the version\nspecified in the project.\n\nSqlboiler will warn, if version in project and executable mismatch.\nSqlboiler can also fail to prevent code generation, when\n`--strict-verify-mod-version` flag (or aliased version in toml) is enabled.\n\n#### Controlling Generation\n\nThe templates get executed in a specific way each time. There's a variety of\nconfiguration options on the command line/config file that can control what\nfeatures are turned on or off.\n\nIn addition to the command line flags there are a few features that are only\navailable via the config file and can use some explanation.\n\n##### Aliases\n\nIn sqlboiler, names are automatically generated for you. If you name your\ndatabase entities properly you will likely have descriptive names generated in\nthe end. However in the case where the names in your database are bad AND\nunchangeable, or sqlboiler's inference doesn't understand the names you do have\n(even though they are good and correct) you can use aliases to change the name\nof your tables, columns and relationships in the generated Go code.\n\n_Note: It is not required to provide all parts of all names. Anything left out\nwill be inferred as it was in the past._\n\n```toml\n# Although team_names works fine without configuration, we use it here for illustrative purposes\n[aliases.tables.team_names]\nup_plural     = \"TeamNames\"\nup_singular   = \"TeamName\"\ndown_plural   = \"teamNames\"\ndown_singular = \"teamName\"\n\n  # Columns can also be aliased.\n  [aliases.tables.team_names.columns]\n  team_name = \"OurTeamName\"\n```\n\nWhen creating aliases for relationships, it's important to know how sqlboiler\nnames relationships. For a given table the foreign key name is used as a unique\nidentifier to refer to a given relationship. If you are going to be aliasing\nrelationships it's **highly recommended** that you name your foreign keys\nexplicitly in your database or the auto-generated names could one day\nchange/break your aliases.\n\nEach relationship has a **local** and a **foreign** function name. The function name will\nbe inserted into your generated code as a function to retrieve relationship data as\nwell as refer to the relationship in a few other places. **local** means \"the function name\nthat refers to the table with the foreign key on it\" and conversely **foreign**\nmeans \"the function that refers to the table the foreign key points to\".\n\nFor example - let's have a `videos -> users` many to one relationship that looks\nlike this:\n\n```text\nThe tables and their columns:\n\n| videos  | users |\n|---------|-------|\n| user_id | id    |\n\nOur foreign key:\nvideos_user_id_fkey: videos.user_id -> users.id\n```\n\nIn this example `local` (how we refer to the table with the foreign key) is\ngoing to be inferred as `Videos`. We're going to override that below to be\n`AuthoredVideos`.\n\nConversely `foreign` (how we refer to the table the foreign key points to) is\ngoing to be inferred as `User`, which we'd like to rename to `Author` to suit\nour domain language a bit better.\n\nWith the configuration snippet below we can use the following relationship\nhelper functions off of the respective models: `video.Author` and\n`user.AuthoredVideos` which make a bit more sense than the inferred names when\nwe see it in the code for our domain. Note the use of the foreign key name to\nrefer to the relationship in the configuration key.\n\n```toml\n[aliases.tables.videos.relationships.videos_author_id_fkey]\n# The local side would originally be inferred as AuthorVideos, which\n# is probably good enough to not want to mess around with this feature, avoid it where possible.\nlocal   = \"AuthoredVideos\"\n# Even if left unspecified, the foreign side would have been inferred correctly\n# due to the proper naming of the foreign key column.\nforeign = \"Author\"\n```\n\nIn a many-to-many relationship it's a bit more complicated. Let's look at an\nexample relationship between `videos <-> tags` with a join table in the middle.\nImagine if the join table didn't exist, and instead both of the id columns in\nthe join table were slapped on to the tables themselves. You'd have\n`videos.tag_id` and `tags.video_id`. Using a similar method to the above (local\nis the name with which we refer to the side that has the foreign key)\nwe can rename the relationships. To change `Videos.Tags` to `Videos.Rags`\nwe can use the example below.\n\nKeep in mind that naming ONE side of the many-to-many relationship is sufficient\nas the other side will be automatically mirrored, though you can specify both if\nyou so choose.\n\n```toml\n[aliases.tables.video_tags.relationships.fk_video_id]\nlocal   = \"Rags\"\nforeign = \"Videos\"\n```\n\nThe above definition will specify `Rags` as the name of the property with which\na given `Video` entity will be able to access all of it's tags. If we look the\nother way around - a single `Tag` entity will refer to all videos that have that\nspecific tag with the `Videos` property.\n\nThere is an alternative syntax available for those who are challenged by the key\nsyntax of toml or challenged by viper lowercasing all of your keys. Instead of\nusing a regular table in toml, use an array of tables, and add a name field to\neach object. The only one that changes past that is columns, which now has to\nhave a new field called `alias`.\n\n```toml\n[[aliases.tables]]\nname          = \"team_names\"\nup_plural     = \"TeamNames\"\nup_singular   = \"TeamName\"\ndown_plural   = \"teamNames\"\ndown_singular = \"teamName\"\n\n  [[aliases.tables.columns]]\n  name  = \"team_name\"\n  alias = \"OurTeamName\"\n\n  [[aliases.tables.relationships]]\n  name    = \"fk_video_id\"\n  local   = \"Rags\"\n  foreign = \"Videos\"\n```\n\n##### Custom Struct Tag Case\n\nSometimes you might want to customize the case style for different purpose, for example, use camel case for json format and use snake case for yaml,\nYou may create a section named `[struct-tag-cases]` to define these custom case for each different format:\n\n```toml\n[struct-tag-cases]\ntoml = \"snake\"\nyaml = \"camel\"\njson = \"camel\"\nboil = \"alias\"\n```\n\nBy default, the snake case will be used, so you can just setup only few formats:\n\n```toml\n[struct-tag-cases]\njson = \"camel\"\n```\n\n##### Foreign Keys\n\nYou can add foreign keys not defined in the database to your models using the following configuration:\n\n```toml\n[foreign_keys.jet_pilots_fkey]\ntable = \"jets\"\ncolumn = \"pilot_id\"\nforeign_table = \"pilots\"\nforeign_column = \"id\"\n\n[foreign_keys.pilot_language_pilots_fkey]\ntable = \"pilot_languages\"\ncolumn = \"pilot_id\"\nforeign_table = \"pilots\"\nforeign_column = \"id\"\n\n[foreign_keys.pilot_language_languages_fkey]\ntable = \"pilot_languages\"\ncolumn = \"language_id\"\nforeign_table = \"languages\"\nforeign_column = \"id\"\n```\n\n##### Inflections\n\nWith inflections, you can control the rules sqlboiler uses to generates singular/plural variants. This is useful if a certain word or suffix is used multiple times and you do not want to create aliases for every instance.\n\n```toml\n[inflections.plural]\n# Rules to convert a suffix to its plural form\nium = \"ia\"\n\n[inflections.plural_exact]\n# Rules to convert an exact word to its plural form\nstadium = \"stadia\"\n\n[inflections.singular]\n# Rules to convert a suffix to its singular form\nia = \"ium\"\n\n[inflections.singular_exact]\n# Rules to convert an exact word to its singular form\nstadia = \"stadium\"\n\n[inflections.irregular]\n# The singular -> plural mapping of an exact word that doen't follow conventional rules\nradius = \"radii\"\n```\n\n##### Types\n\nThere exists the ability to override types that the driver has inferred.\nThe way to accomplish this is through the config file.\n\n```toml\n[[types]]\n  # The match is a drivers.Column struct, and matches on almost all fields.\n  # Notable exception for the unique bool. Matches are done\n  # with \"logical and\" meaning it must match all specified matchers.\n  # Boolean values are only checked if all the string specifiers match first,\n  # and they must always match.\n  #\n  # Not shown here: db_type is the database type and a very useful matcher\n  # We can also whitelist tables for this replace by adding to the types.match:\n  # tables = ['users', 'videos']\n  #\n  # Note there is precedence for types.match, more specific things should appear\n  # further down in the config as once a matching rule is found it is executed\n  # immediately.\n  [types.match]\n    type = \"null.String\"\n    nullable = true\n\n  # The replace is what we replace the strings with. You cannot modify any\n  # boolean values in here. But we could change the Go type (the most useful thing)\n  # or the DBType or FullDBType etc. if for some reason we needed to.\n  [types.replace]\n    type = \"mynull.String\"\n\n  # These imports specified here overwrite the definition of the type's \"based_on_type\"\n  # list. The type entry that is replaced is the replaced type's \"type\" field.\n  # In the above example it would add an entry for mynull.String, if we did not\n  # change the type in our replacement, it would overwrite the null.String entry.\n  [types.imports]\n    third_party = ['\"github.com/me/mynull\"']\n```\n\n##### Imports\n\nImports are overridable by the user. This can be used in conjunction with\nreplacing the templates for extreme cases. Typically this should be avoided.\n\nNote that specifying any section of the imports completely overwrites that\nsection. It's also true that the driver can still specify imports and those\nwill be merged in to what is provided here.\n\n```toml\n[imports.all]\n  standard = ['\"context\"']\n  third_party = ['\"github.com/my/package\"']\n\n# Changes imports for the boil_queries file\n[imports.singleton.\"boil_queries\"]\n  standard = ['\"context\"']\n  third_party = ['\"github.com/my/package\"']\n\n# Same syntax as all\n[imports.test]\n\n# Same syntax as singleton\n[imports.test_singleton]\n\n# Changes imports when a model contains null.Int32\n[imports.based_on_type.string]\n  standard = ['\"context\"']\n  third_party = ['\"github.com/my/package\"']\n```\n\nWhen defining maps it's possible to use an alternative syntax since\nviper automatically lowercases all configuration keys (same as aliases).\n\n```toml\n[[imports.singleton]]\n  name = \"boil_queries\"\n  third_party = ['\"github.com/my/package\"']\n\n[[imports.based_on_type]]\n  name = \"null.Int64\"\n  third_party = ['\"github.com/my/int64\"']\n```\n\n##### Templates\n\nIn advanced scenarios it may be desirable to generate additional files that are not go code.\nYou can accomplish this by using the `--templates` flag to specify **all** the directories you\nwish to generate code for. With this flag you specify root directories, that is top-level container\ndirectories.\n\nIf root directories have a `_test` suffix in the name, this folder is considered a folder\nfull of templates for testing only and will be omitted when `--no-tests` is specified and\nits templates will be generated into files with a `_test` suffix.\n\nEach root directory is recursively walked. Each template found will be merged into table_name.ext\nwhere ext is defined by the shared extension of the templates. The directory structure is preserved\nwith the exception of singletons.\n\nFor files that should not be generated for each model, you can use a `singleton` directory inside\nthe directory where the singleton file should be generated. This will make sure that the file is\nonly generated once.\n\nHere's an example:\n\n```text\ntemplates/\n├── 00_struct.go.tpl               # Merged into output_dir/table_name.go\n├── 00_struct.js.tpl               # Merged into output_dir/table_name.js\n├── singleton\n│   └── boil_queries.go.tpl        # Rendered as output_dir/boil_queries.go\n└── js\n    ├── jsmodel.js.tpl             # Merged into output_dir/js/table_name.js\n    └── singleton\n        └── jssingle.js.tpl        # Merged into output_dir/js/jssingle.js\n```\n\nThe output files of which would be:\n\n```\noutput_dir/\n├── boil_queries.go\n├── table_name.go\n├── table_name.js\n└── js\n    ├── table_name.js\n    └── jssingle.js\n```\n\n**Note**: Because the `--templates` flag overrides the embedded templates of `sqlboiler`, if you still\nwish to generate the default templates it's recommended that you include the path to sqlboiler's templates\nas well.\n\n```toml\ntemplates = [\n  \"/path/to/sqlboiler/templates\",\n  \"/path/to/sqlboiler/templates_test\",\n  \"/path/to/your_project/more_templates\"\n]\n```\n\n#### Extending generated models\n\nThere will probably come a time when you want to extend the generated models\nwith some kinds of helper functions. A general guideline is to put your\nextension functions into a separate package so that your functions aren't\naccidentally deleted when regenerating. Past that there are 3 main ways to\nextend the models, the first way is the most desirable:\n\n**Method 1: Simple Functions**\n\n```go\n// Package modext is for SQLBoiler helper methods\npackage modext\n\n// UserFirstTimeSetup is an extension of the user model.\nfunc UserFirstTimeSetup(ctx context.Context, db *sql.DB, u *models.User) error { ... }\n```\n\nCode organization is accomplished by using multiple files, and everything\nis passed as a parameter so these kinds of methods are very easy to test.\n\nCalling code is also very straightforward:\n\n```go\nuser, err := Users().One(ctx, db)\n// elided error check\n\nerr = modext.UserFirstTimeSetup(ctx, db, user)\n// elided error check\n```\n\n**Method 2: Empty struct methods**\n\nThe above is the best way to code extensions for SQLBoiler, however there may\nbe times when the number of methods grows too large and code completion is\nnot as helpful anymore. In these cases you may consider structuring the code\nlike this:\n\n```go\n// Package modext is for SQLBoiler helper methods\npackage modext\n\ntype users struct {}\n\nvar Users = users{}\n\n// FirstTimeSetup is an extension of the user model.\nfunc (users) FirstTimeSetup(ctx context.Context, db *sql.DB, u *models.User) error { ... }\n```\n\nCalling code then looks a little bit different:\n\n```go\nuser, err := Users().One(ctx, db)\n// elided error check\n\nerr = modext.Users.FirstTimeSetup(ctx, db, user)\n// elided error check\n```\n\nThis is almost identical to the method above, but gives slight amounts more\norganization at virtually no cost at runtime. It is however not as desirable\nas the first method since it does have some runtime cost and doesn't offer that\nmuch benefit over it.\n\n**Method 3: Embedding**\n\nThis pattern is not for the faint of heart, what it provides in benefits it\nmore than makes up for in downsides. It's possible to embed the SQLBoiler\nstructs inside your own to enhance them. However it's subject to easy breakages\nand a dependency on these additional objects. It can also introduce\ninconsistencies as some objects may have no extended functionality and therefore\nhave no reason to be embedded so you either have to have a struct for each\ngenerated struct even if it's empty, or have inconsistencies, some places where\nyou use the enhanced model, and some where you do not.\n\n```go\nuser, err := Users().One(ctx, db)\n// elided error check\n\nenhUser := modext.User{user}\nerr = ehnUser.FirstTimeSetup(ctx, db)\n// elided error check\n```\n\nI don't recommend this pattern, but included it so that people know it's an\noption and also know the problems with it.\n\n## Diagnosing Problems\n\nThe most common causes of problems and panics are:\n\n- Forgetting to exclude tables you do not want included in your generation, like migration tables.\n- Tables without a primary key. All tables require one.\n- Forgetting to put foreign key constraints on your columns that reference other tables.\n- The compatibility tests require privileges to create a database for testing purposes, ensure the user\n  supplied in your `sqlboiler.toml` config has adequate privileges.\n- A nil or closed database handle. Ensure your passed in `boil.Executor` is not nil.\n  - If you decide to use the `G` variant of functions instead, make sure you've initialized your\n    global database handle using `boil.SetDB()`.\n- Naming collisions, if the code fails to compile because there are naming collisions, look at the\n  [aliasing](#aliases) feature.\n- Race conditions in tests or when using global variable models and using\n  relationship set helpers in multiple goroutines. Note that Set/Add/Remove\n  relationship helpers modify their input parameters to maintain parity between\n  the `.R` struct relationships and the database foreign keys but this can\n  produce subtle race conditions. Test for this using the `-race` flag on the\n  go tool.\n- A field not being inserted (usually a default true boolean), `boil.Infer` looks at the zero\n  value of your Go type (it doesn't care what the default value in the database is) to determine\n  if it should insert your field or not. In the case of a default true boolean value, when you\n  want to set it to false; you set that in the struct but that's the zero value for the bool\n  field in Go so sqlboiler assumes you do not want to insert that field and you want the default\n  value from the database. Use a whitelist/greylist to add that field to the list of fields\n  to insert.\n- decimal library showing errors like: `pq: encode: unknown type types.NullDecimal`\n  is a result of a too-new and broken version of the github.com/ericlargergren/decimal\n  package, use the following version in your go.mod:\n  github.com/ericlagergren/decimal v0.0.0-20181231230500-73749d4874d5\n\nFor errors with other causes, it may be simple to debug yourself by looking at the generated code.\nSetting `boil.DebugMode` to `true` can help with this. You can change the output using `boil.DebugWriter` (defaults to `os.Stdout`).\n\nIf you're still stuck and/or you think you've found a bug, feel free to leave an issue and we'll do our best to help you.\n\n## Features & Examples\n\nMost examples in this section will be demonstrated using the following Postgres schema, structs and variables:\n\n```sql\nCREATE TABLE pilots (\n  id integer NOT NULL,\n  name text NOT NULL\n);\n\nALTER TABLE pilots ADD CONSTRAINT pilot_pkey PRIMARY KEY (id);\n\nCREATE TABLE jets (\n  id integer NOT NULL,\n  pilot_id integer NOT NULL,\n  age integer NOT NULL,\n  name text NOT NULL,\n  color text NOT NULL\n);\n\nALTER TABLE jets ADD CONSTRAINT jet_pkey PRIMARY KEY (id);\nALTER TABLE jets ADD CONSTRAINT jet_pilots_fkey FOREIGN KEY (pilot_id) REFERENCES pilots(id);\n\nCREATE TABLE languages (\n  id integer NOT NULL,\n  language text NOT NULL\n);\n\nALTER TABLE languages ADD CONSTRAINT language_pkey PRIMARY KEY (id);\n\n-- Join table\nCREATE TABLE pilot_languages (\n  pilot_id integer NOT NULL,\n  language_id integer NOT NULL\n);\n\n-- Composite primary key\nALTER TABLE pilot_languages ADD CONSTRAINT pilot_language_pkey PRIMARY KEY (pilot_id, language_id);\nALTER TABLE pilot_languages ADD CONSTRAINT pilot_language_pilots_fkey FOREIGN KEY (pilot_id) REFERENCES pilots(id);\nALTER TABLE pilot_languages ADD CONSTRAINT pilot_language_languages_fkey FOREIGN KEY (language_id) REFERENCES languages(id);\n```\n\nThe generated model structs for this schema look like the following. Note that we've included the relationship\nstructs as well so you can see how it all pieces together:\n\n```go\ntype Pilot struct {\n  ID   int    `boil:\"id\" json:\"id\" toml:\"id\" yaml:\"id\"`\n  Name string `boil:\"name\" json:\"name\" toml:\"name\" yaml:\"name\"`\n\n  R *pilotR `boil:\"-\" json:\"-\" toml:\"-\" yaml:\"-\"`\n  L pilotR  `boil:\"-\" json:\"-\" toml:\"-\" yaml:\"-\"`\n}\n\ntype pilotR struct {\n  Languages LanguageSlice\n  Jets      JetSlice\n}\n\ntype Jet struct {\n  ID      int    `boil:\"id\" json:\"id\" toml:\"id\" yaml:\"id\"`\n  PilotID int    `boil:\"pilot_id\" json:\"pilot_id\" toml:\"pilot_id\" yaml:\"pilot_id\"`\n  Age     int    `boil:\"age\" json:\"age\" toml:\"age\" yaml:\"age\"`\n  Name    string `boil:\"name\" json:\"name\" toml:\"name\" yaml:\"name\"`\n  Color   string `boil:\"color\" json:\"color\" toml:\"color\" yaml:\"color\"`\n\n  R *jetR `boil:\"-\" json:\"-\" toml:\"-\" yaml:\"-\"`\n  L jetR  `boil:\"-\" json:\"-\" toml:\"-\" yaml:\"-\"`\n}\n\ntype jetR struct {\n  Pilot *Pilot\n}\n\ntype Language struct {\n  ID       int    `boil:\"id\" json:\"id\" toml:\"id\" yaml:\"id\"`\n  Language string `boil:\"language\" json:\"language\" toml:\"language\" yaml:\"language\"`\n\n  R *languageR `boil:\"-\" json:\"-\" toml:\"-\" yaml:\"-\"`\n  L languageR  `boil:\"-\" json:\"-\" toml:\"-\" yaml:\"-\"`\n}\n\ntype languageR struct {\n  Pilots PilotSlice\n}\n```\n\n```go\n// Open handle to database like normal\ndb, err := sql.Open(\"postgres\", \"dbname=fun user=abc\")\nif err != nil {\n  return err\n}\n```\n\n### Automatic CreatedAt/UpdatedAt\n\nIf your generated SQLBoiler models package can find columns with the\nnames `created_at` or `updated_at` it will automatically set them\nto `time.Now()` in your database, and update your object appropriately.\nTo disable this feature use `--no-auto-timestamps`.\n\nNote: You can set the timezone for this feature by calling `boil.SetLocation()`\n\n#### Customizing the timestamp columns\n\nSet the `auto-columns` map in your configuration file\n\n```toml\n[auto-columns]\n    created = \"createdAt\"\n    updated = \"updatedAt\"\n```\n\n#### Skipping Automatic Timestamps\n\nIf for a given query you do not want timestamp columns to be re-computed prior\nto an insert or update then you can use `boil.SkipTimestamps` on the context you\npass in to the query to prevent them from being updated.\n\nKeep in mind this has no effect on whether or not the column is included in the\ninsert/update, it simply stops them from being set to `time.Now()` in the struct\nbefore being sent to the database (if they were going to be sent).\n\n#### Overriding Automatic Timestamps\n\n- **Insert**\n  - Timestamps for both `updated_at` and `created_at` that are zero values will be set automatically.\n  - To set the timestamp to null, set `Valid` to false and `Time` to a non-zero value.\n    This is somewhat of a work around until we can devise a better solution in a later version.\n- **Update**\n  - The `updated_at` column will always be set to `time.Now()`. If you need to override\n    this value you will need to fall back to another method in the meantime: `queries.Raw()`,\n    overriding `updated_at` in all of your objects using a hook, or create your own wrapper.\n- **Upsert**\n  - `created_at` will be set automatically if it is a zero value, otherwise your supplied value\n    will be used. To set `created_at` to `null`, set `Valid` to false and `Time` to a non-zero value.\n  - The `updated_at` column will always be set to `time.Now()`.\n\n### Automatic DeletedAt (Soft Delete)\n\nSoft deletes are a way of deleting records in a database for the average query\nwithout actually removing the data. This type of thing is important in certain\nscenarios where data retention is important. It is typically done by adding a\n`deleted` bool or a `deleted_at` timestamp to each table in the database\nthat can be soft deleted and subsequent queries on that table should always\nmake sure that `deleted != true` or `deleted_at is null` to prevent showing\n\"deleted\" data.\n\nSQLBoiler uses the `deleted_at` variant to provide this functionality. If your\ntable has a nullable timestamp field named `deleted_at` it will be a candidate\nfor soft-deletion.\n\n_NOTE_: As of writing soft-delete is opt-in via `--add-soft-deletes` and is\nliable to change in future versions.\n\n_NOTE_: There is a query mod to bypass soft delete for a specific query by using\n`qm.WithDeleted`, note that there is no way to do this for Exists/Find helpers\nyet.\n\n_NOTE_: The `Delete` helpers will _not_ set `updated_at` currently. The current\nphilosophy is that deleting the object is simply metadata and since it returns\nin no queries (other than raw ones) the updated_at will no longer be relevant.\nThis could change in future versions if people disagree with this but it is\nthe current behavior.\n\n### Query Building\n\nWe generate \"Starter\" methods for you. These methods are named as the plural versions of your model,\nfor example: `models.Jets()`. Starter methods are used to build queries using our\n[Query Mod System](#query-mod-system). They take a slice of [Query Mods](#query-mod-system)\nas parameters, and end with a call to a [Finisher](#finishers) method.\n\nHere are a few examples:\n\n```go\n// SELECT COUNT(*) FROM pilots;\ncount, err := models.Pilots().Count(ctx, db)\n\n// SELECT * FROM \"pilots\" LIMIT 5;\npilots, err := models.Pilots(qm.Limit(5)).All(ctx, db)\n\n// DELETE FROM \"pilots\" WHERE \"id\"=$1;\nerr := models.Pilots(qm.Where(\"id=?\", 1)).DeleteAll(ctx, db)\n// type safe version of above\nerr := models.Pilots(models.PilotWhere.ID.EQ(1)).DeleteAll(ctx, db)\n```\n\nIn the event that you would like to build a query and specify the table yourself, you\ncan do so using `models.NewQuery()`:\n\n```go\n// Select all rows from the pilots table by using the From query mod.\nerr := models.NewQuery(db, qm.From(\"pilots\")).All(ctx, db)\n```\n\nAs you can see, [Query Mods](#query-mod-system) allow you to modify your\nqueries, and [Finishers](#finishers) allow you to execute the final action.\n\nWe also generate query building helper methods for your relationships as well. Take a look at our\n[Relationships Query Building](#relationships) section for some additional query building information.\n\n### Query Mod System\n\nThe query mod system allows you to modify queries created with\n[Starter](#query-building) methods when performing query building.\nSee examples below.\n\n**NOTE:** SQLBoiler generates type-safe identifiers based on your database\ntables, columns and relationships. Using these is a bit more verbose, but is\nespecially safe since when the names change in the database the generated\ncode will be different causing compilation failures instead of runtime\nerrors. It is highly recommended you use these instead of regular strings.\nSee [Constants](#constants) for more details.\n\n**NOTE:** You will notice that there is printf used below mixed with SQL\nstatements. This is normally NOT OK if the user is able to supply any of\nthe sql string, but here we always use a `?` placeholder and pass arguments\nso that the only thing that's being printf'd are constants which makes it\nsafe, but be careful!\n\n```go\n// Dot import so we can access query mods directly instead of prefixing with \"qm.\"\nimport . \"github.com/volatiletech/sqlboiler/v4/queries/qm\"\n\n// Use a raw query against a generated struct (Pilot in this example)\n// If this query mod exists in your call, it will override the others.\n// \"?\" placeholders are not supported here, use \"$1, $2\" etc.\nSQL(\"select * from pilots where id=$1\", 10)\nmodels.Pilots(SQL(\"select * from pilots where id=$1\", 10)).All()\n\nSelect(\"id\", \"name\") // Select specific columns.\nSelect(models.PilotColumns.ID, models.PilotColumns.Name)\nFrom(\"pilots as p\") // Specify the FROM table manually, can be useful for doing complex queries.\nFrom(models.TableNames.Pilots + \" as p\")\n\n// WHERE clause building\nWhere(\"name=?\", \"John\")\nmodels.PilotWhere.Name.EQ(\"John\")\nAnd(\"age=?\", 24)\n// No equivalent type safe query yet\nOr(\"height=?\", 183)\n// No equivalent type safe query yet\n\nWhere(\"(name=? and age=?) or (age=?)\", \"John\", 5, 6)\n// Expr allows manual grouping of statements\nWhere(\n  Expr(\n    models.PilotWhere.Name.EQ(\"John\"),\n    Or2(models.PilotWhere.Age.EQ(5)),\n  ),\n  Or2(models.PilotAge),\n)\n\n// WHERE IN clause building\nWhereIn(\"(name, age) in ?\", \"John\", 24, \"Tim\", 33) // Generates: WHERE (\"name\",\"age\") IN (($1,$2),($3,$4))\nWhereIn(fmt.Sprintf(\"(%s, %s) in ?\", models.PilotColumns.Name, models.PilotColumns.Age), \"John\", 24, \"Tim\", 33)\nAndIn(\"weight in ?\", 84)\nAndIn(models.PilotColumns.Weight + \" in ?\", 84)\nOrIn(\"height in ?\", 183, 177, 204)\nOrIn(models.PilotColumns.Height + \" in ?\", 183, 177, 204)\n\nInnerJoin(\"pilots p on jets.pilot_id=?\", 10)\nInnerJoin(models.TableNames.Pilots + \" p on \" + models.TableNames.Jets + \".\" + models.JetColumns.PilotID + \"=?\", 10)\n\nGroupBy(\"name\")\nGroupBy(\"name like ? DESC, name\", \"John\")\nGroupBy(models.PilotColumns.Name)\nOrderBy(\"age, height\")\nOrderBy(models.PilotColumns.Age, models.PilotColumns.Height)\n\nHaving(\"count(jets) > 2\")\nHaving(fmt.Sprintf(\"count(%s) > 2\", models.TableNames.Jets)\n\nLimit(15)\nOffset(5)\n\n// Explicit locking\nFor(\"update nowait\")\n\n// Common Table Expressions\nWith(\"cte_0 AS (SELECT * FROM table_0 WHERE thing=$1 AND stuff=$2)\")\n\n// Eager Loading -- Load takes the relationship name, ie the struct field name of the\n// Relationship struct field you want to load. Optionally also takes query mods to filter on that query.\nLoad(\"Languages\", Where(...)) // If it's a ToOne relationship it's in singular form, ToMany is plural.\nLoad(models.PilotRels.Languages, Where(...))\n```\n\nNote: We don't force you to break queries apart like this if you don't want to, the following\nis also valid and supported by query mods that take a clause:\n\n```go\nWhere(\"(name=? OR age=?) AND height=?\", \"John\", 24, 183)\n```\n\n### Function Variations\n\nFunctions can have variations generated for them by using the flags\n`--add-global-variants` and `--add-panic-variants`. Once you've used these\nflags or set the appropriate values in your configuration file extra method\noverloads will be generated. We've used the `Delete` method to demonstrate:\n\n```go\n// Set the global db handle for G method variants.\nboil.SetDB(db)\n\npilot, _ := models.FindPilot(ctx, db, 1)\n\nerr := pilot.Delete(ctx, db) // Regular variant, takes a db handle (boil.Executor interface).\npilot.DeleteP(ctx, db)       // Panic variant, takes a db handle and panics on error.\nerr := pilot.DeleteG(ctx)    // Global variant, uses the globally set db handle (boil.SetDB()).\npilot.DeleteGP(ctx)          // Global&Panic variant, combines the global db handle and panic on error.\n\ndb.Begin()                   // Normal sql package way of creating a transaction\nboil.BeginTx(ctx, nil)       // Uses the global database handle set by boil.SetDB() (doesn't require flag)\n```\n\nNote that it's slightly different for query building.\n\n### Finishers\n\nHere are a list of all of the finishers that can be used in combination with\n[Query Building](#query-building).\n\nFinishers all have `P` (panic) [method variations](#function-variations). To specify\nyour db handle use the `G` or regular variation of the [Starter](#query-building) method.\n\n```go\n// These are called like the following:\nmodels.Pilots().All(ctx, db)\n\nOne() // Retrieve one row as object (same as LIMIT(1))\nAll() // Retrieve all rows as objects (same as SELECT * FROM)\nCount() // Number of rows (same as COUNT(*))\nUpdateAll(models.M{\"name\": \"John\", \"age\": 23}) // Update all rows matching the built query.\nDeleteAll() // Delete all rows matching the built query.\nExists() // Returns a bool indicating whether the row(s) for the built query exists.\nBind(&myObj) // Bind the results of a query to your own struct object.\nExec() // Execute an SQL query that does not require any rows returned.\nQueryRow() // Execute an SQL query expected to return only a single row.\nQuery() // Execute an SQL query expected to return multiple rows.\n```\n\n### Raw Query\n\nWe provide `queries.Raw()` for executing raw queries. Generally you will want to use `Bind()` with\nthis, like the following:\n\n```go\nerr := queries.Raw(\"select * from pilots where id=$1\", 5).Bind(ctx, db, &obj)\n```\n\nYou can use your own structs or a generated struct as a parameter to Bind. Bind supports both\na single object for single row queries and a slice of objects for multiple row queries.\n\n`queries.Raw()` also has a method that can execute a query without binding to an object, if required.\n\nYou also have `models.NewQuery()` at your disposal if you would still like to use [Query Building](#query-building)\nin combination with your own custom, non-generated model.\n\n### Binding\n\nFor a comprehensive ruleset for `Bind()` you can refer to our [pkg.go.dev](https://pkg.go.dev/github.com/volatiletech/sqlboiler/v4/queries#Bind).\n\nThe `Bind()` [Finisher](#finisher) allows the results of a query built with\nthe [Raw SQL](#raw-query) method or the [Query Builder](#query-building) methods to be bound\nto your generated struct objects, or your own custom struct objects.\n\nThis can be useful for complex queries, queries that only require a small subset of data\nand have no need for the rest of the object variables, or custom join struct objects like\nthe following:\n\n```go\n// Custom struct using two generated structs\ntype PilotAndJet struct {\n  models.Pilot `boil:\",bind\"`\n  models.Jet   `boil:\",bind\"`\n}\n\nvar paj PilotAndJet\n// Use a raw query\nerr := queries.Raw(`\n  select pilots.id as \"pilots.id\", pilots.name as \"pilots.name\",\n  jets.id as \"jets.id\", jets.pilot_id as \"jets.pilot_id\",\n  jets.age as \"jets.age\", jets.name as \"jets.name\", jets.color as \"jets.color\"\n  from pilots inner join jets on jets.pilot_id=?`, 23,\n).Bind(ctx, db, &paj)\n\n// Use query building\nerr := models.NewQuery(\n  Select(\"pilots.id\", \"pilots.name\", \"jets.id\", \"jets.pilot_id\", \"jets.age\", \"jets.name\", \"jets.color\"),\n  From(\"pilots\"),\n  InnerJoin(\"jets on jets.pilot_id = pilots.id\"),\n).Bind(ctx, db, &paj)\n```\n\n```go\n// Custom struct for selecting a subset of data\ntype JetInfo struct {\n  AgeSum int `boil:\"age_sum\"`\n  Count int `boil:\"juicy_count\"`\n}\n\nvar info JetInfo\n\n// Use query building\nerr := models.NewQuery(Select(\"sum(age) as age_sum\", \"count(*) as juicy_count\", From(\"jets\"))).Bind(ctx, db, &info)\n\n// Use a raw query\nerr := queries.Raw(`select sum(age) as \"age_sum\", count(*) as \"juicy_count\" from jets`).Bind(ctx, db, &info)\n```\n\nWe support the following struct tag modes for `Bind()` control:\n\n```go\ntype CoolObject struct {\n  // Don't specify a name, Bind will TitleCase the column\n  // name, and try to match against this.\n  Frog int\n\n  // Specify an alternative name for the column, it will\n  // be titlecased for matching, can be whatever you like.\n  Cat int  `boil:\"kitten\"`\n\n  // Ignore this struct field, do not attempt to bind it.\n  Pig int  `boil:\"-\"`\n\n  // Instead of binding to this as a regular struct field\n  // (like other sql-able structs eg. time.Time)\n  // Recursively search inside the Dog struct for field names from the query.\n  Dog      `boil:\",bind\"`\n\n  // Same as the above, except specify a different table name\n  Mouse    `boil:\"rodent,bind\"`\n\n  // Ignore this struct field, do not attempt to bind it.\n  Bird     `boil:\"-\"`\n}\n```\n\n### Relationships\n\nHelper methods will be generated for every to one and to many relationship structure\nyou have defined in your database by using foreign keys.\n\nWe attach these helpers directly to your model struct, for example:\n\n```go\njet, _ := models.FindJet(ctx, db, 1)\n\n// \"to one\" relationship helper method.\n// This will retrieve the pilot for the jet.\npilot, err := jet.Pilot().One(ctx, db)\n\n// \"to many\" relationship helper method.\n// This will retrieve all languages for the pilot.\nlanguages, err := pilot.Languages().All(ctx, db)\n```\n\nIf your relationship involves a join table SQLBoiler will figure it out for you transparently.\n\nIt is important to note that you should use `Eager Loading` if you plan\non loading large collections of rows, to avoid N+1 performance problems.\n\nFor example, take the following:\n\n```go\n// Avoid this loop query pattern, it is slow.\njets, _ := models.Jets().All(ctx, db)\npilots := make([]models.Pilot, len(jets))\nfor i := 0; i < len(jets); i++ {\n  pilots[i] = jets[i].Pilot().OneP(ctx, db)\n}\n\n// Instead, use Eager Loading!\njets, _ := models.Jets(Load(\"Pilot\")).All(ctx, db)\n// Type safe relationship names exist too:\njets, _ := models.Jets(Load(models.JetRels.Pilot)).All(ctx, db)\n\n// Then access the loaded structs using the special Relation field\nfor _, j := range jets {\n  _ = j.R.Pilot\n}\n```\n\nEager loading can be combined with other query mods, and it can also eager load recursively.\n\n```go\n// Example of a nested load.\n// Each jet will have its pilot loaded, and each pilot will have its languages loaded.\njets, _ := models.Jets(Load(\"Pilot.Languages\")).All(ctx, db)\n// Note that each level of a nested Load call will be loaded. No need to call Load() multiple times.\n\n// Type safe queries exist for this too!\njets, _ := models.Jets(Load(Rels(models.JetRels.Pilot, models.PilotRels.Languages))).All(ctx, db)\n\n// A larger example. In the below scenario, Pets will only be queried one time, despite\n// showing up twice because they're the same query (the user's pets)\nusers, _ := models.Users(\n  Load(\"Pets.Vets\"),\n  // the query mods passed in below only affect the query for Toys\n  // to use query mods against Pets itself, you must declare it separately\n  Load(\"Pets.Toys\", Where(\"toys.deleted = ?\", isDeleted)),\n  Load(\"Property\"),\n  Where(\"age > ?\", 23),\n).All(ctx, db)\n```\n\nWe provide the following methods for managing relationships on objects:\n\n**To One**\n\n- `SetX()`: Set the foreign key to point to something else: jet.SetPilot(...)\n- `RemoveX()`: Null out the foreign key, effectively removing the relationship between these two objects: jet.RemovePilot(...)\n\n**To Many**\n\n- `AddX()`: Add more relationships to the existing set of related Xs: pilot.AddLanguages(...)\n- `SetX()`: Remove all existing relationships, and replace them with the provided set: pilot.SetLanguages(...)\n- `RemoveX()`: Remove all provided relationships: pilot.RemoveLanguages(...)\n\n**Important**: Remember to use transactions around these set helpers for performance\nand data integrity. SQLBoiler does not do this automatically due to it's transparent API which allows\nyou to batch any number of calls in a transaction without spawning subtransactions you don't know\nabout or are not supported by your database.\n\n**To One** code examples:\n\n```go\n  jet, _ := models.FindJet(ctx, db, 1)\n  pilot, _ := models.FindPilot(ctx, db, 1)\n\n  // Set the pilot to an existing jet\n  err := jet.SetPilot(ctx, db, false, &pilot)\n\n  pilot = models.Pilot{\n    Name: \"Erlich\",\n  }\n\n  // Insert the pilot into the database and assign it to a jet\n  err := jet.SetPilot(ctx, db, true, &pilot)\n\n  // Remove a relationship. This method only exists for foreign keys that can be NULL.\n  err := jet.RemovePilot(ctx, db, &pilot)\n```\n\n**To Many** code examples:\n\n```go\n  pilots, _ := models.Pilots().All(ctx, db)\n  languages, _ := models.Languages().All(ctx, db)\n\n  // Set a group of language relationships\n  err := pilots.SetLanguages(db, false, &languages)\n\n  languages := []*models.Language{\n    {Language: \"Strayan\"},\n    {Language: \"Yupik\"},\n    {Language: \"Pawnee\"},\n  }\n\n  // Insert new a group of languages and assign them to a pilot\n  err := pilots.SetLanguages(ctx, db, true, languages...)\n\n  // Add another language relationship to the existing set of relationships\n  err := pilots.AddLanguages(ctx, db, false, &someOtherLanguage)\n\n  anotherLanguage := models.Language{Language: \"Archi\"}\n\n  // Insert and then add another language relationship\n  err := pilots.AddLanguages(ctx, db, true, &anotherLanguage)\n\n  // Remove a group of relationships\n  err := pilots.RemoveLanguages(ctx, db, languages...)\n```\n\n### Hooks\n\nBefore and After hooks are available for most operations. If you don't need them you can\nshrink the size of the generated code by disabling them with the `--no-hooks` flag.\n\nEvery generated package that includes hooks has the following `HookPoints` defined:\n\n```go\nconst (\n  BeforeInsertHook HookPoint = iota + 1\n  BeforeUpdateHook\n  BeforeDeleteHook\n  BeforeUpsertHook\n  AfterInsertHook\n  AfterSelectHook\n  AfterUpdateHook\n  AfterDeleteHook\n  AfterUpsertHook\n)\n```\n\nTo register a hook for your model you will need to create the hook function, and attach\nit with the `AddModelHook` method. Here is an example of a before insert hook:\n\n```go\n// Define my hook function\nfunc myHook(ctx context.Context, exec boil.ContextExecutor, p *Pilot) error {\n  // Do stuff\n  return nil\n}\n\n// Register my before insert hook for pilots\nmodels.AddPilotHook(boil.BeforeInsertHook, myHook)\n```\n\nYour `ModelHook` will always be defined as `func(context.Context, boil.ContextExecutor, *Model) error` if context is not turned off.\n\n#### Skipping Hooks\n\nYou can skip hooks by using the `boil.SkipHooks` on the context you pass in\nto a given query.\n\n### Transactions\n\nThe `boil.Executor` and `boil.ContextExecutor` interface powers all of SQLBoiler. This means\nanything that conforms to the three `Exec/Query/QueryRow` methods (and their context-aware variants)\ncan be used to execute queries. `sql.DB`, `sql.Tx` as well as other\nlibraries (`sqlx`) conform to this interface, and therefore any of these things may be\nused as an executor for any query in the system. This makes using transactions very simple:\n\n```go\ntx, err := db.BeginTx(ctx, nil)\nif err != nil {\n  return err\n}\n\nusers, _ := models.Pilots().All(ctx, tx)\nusers.DeleteAll(ctx, tx)\n\n// Rollback or commit\ntx.Commit()\ntx.Rollback()\n```\n\nIt's also worth noting that there's a way to take advantage of `boil.SetDB()`\nby using the\n[boil.BeginTx()](https://pkg.go.dev/github.com/volatiletech/sqlboiler/v4/boil#BeginTx)\nfunction. This opens a transaction using the globally stored database.\n\n### Debug Logging\n\nDebug logging will print your generated SQL statement and the arguments it is using.\nDebug logging can be toggled on globally by setting the following global variable to `true`:\n\n```go\nboil.DebugMode = true\n\n// Optionally set the writer as well. Defaults to os.Stdout\nfh, _ := os.Open(\"debug.txt\")\nboil.DebugWriter = fh\n```\n\nNote: Debug output is messy at the moment. This is something we would like addressed.\n\n### Select\n\nSelect is done through [Query Building](#query-building) and [Find](#find). Here's a short example:\n\n```go\n// Select one pilot\npilot, err := models.Pilots(qm.Where(\"name=?\", \"Tim\")).One(ctx, db)\n// Type safe variant\npilot, err := models.Pilots(models.PilotWhere.Name.EQ(\"Tim\")).One(ctx, db)\n\n// Select specific columns of many jets\njets, err := models.Jets(qm.Select(\"age\", \"name\")).All(ctx, db)\n// Type safe variant\njets, err := models.Jets(qm.Select(models.JetColumns.Age, models.JetColumns.Name)).All(ctx, db)\n```\n\n### Find\n\nFind is used to find a single row by primary key:\n\n```go\n// Retrieve pilot with all columns filled\npilot, err := models.FindPilot(ctx, db, 1)\n\n// Retrieve a subset of column values\njet, err := models.FindJet(ctx, db, 1, \"name\", \"color\")\n```\n\n### Insert\n\nThe main thing to be aware of with `Insert` is how the `columns` argument\noperates. You can supply one of the following column lists:\n`boil.Infer`, `boil.Whitelist`, `boil.Blacklist`, or `boil.Greylist`.\n\nThese lists control what fields are inserted into the database, and what values\nare returned to your struct from the database (default, auto incrementing,\ntrigger-based columns are candidates for this). Your struct will have those\nvalues after the insert is complete.\n\nWhen you use inference `sqlboiler` looks at your Go struct field values and if\nthe field value is the Go zero value and that field has a default value in the\ndatabase it will not insert that field, instead it will get the value from the\ndatabase. Keep in mind `sqlboiler` cannot read or understand your default\nvalues set in the database, so the Go zero value is what's important here (this\ncan be especially troubling for default true bool fields). Use a whitelist or\ngreylist in cases where you want to insert a Go zero value.\n\n| Column List | Behavior                                                         |\n| ----------- | ---------------------------------------------------------------- |\n| Infer       | Infer the column list using \"smart\" rules                        |\n| Whitelist   | Insert only the columns specified in this list                   |\n| Blacklist   | Infer the column list, but ensure these columns are not inserted |\n| Greylist    | Infer the column list, but ensure these columns are inserted     |\n\n**NOTE:** CreatedAt/UpdatedAt are not included in `Whitelist` automatically.\n\nSee the documentation for\n[boil.Columns.InsertColumnSet](https://pkg.go.dev/github.com/volatiletech/sqlboiler/v4/boil/#Columns.InsertColumnSet)\nfor more details.\n\n```go\nvar p1 models.Pilot\np1.Name = \"Larry\"\nerr := p1.Insert(ctx, db, boil.Infer()) // Insert the first pilot with name \"Larry\"\n// p1 now has an ID field set to 1\n\nvar p2 models.Pilot\np2.Name = \"Boris\"\nerr := p2.Insert(ctx, db, boil.Infer()) // Insert the second pilot with name \"Boris\"\n// p2 now has an ID field set to 2\n\nvar p3 models.Pilot\np3.ID = 25\np3.Name = \"Rupert\"\nerr := p3.Insert(ctx, db, boil.Infer()) // Insert the third pilot with a specific ID\n// The id for this row was inserted as 25 in the database.\n\nvar p4 models.Pilot\np4.ID = 0\np4.Name = \"Nigel\"\nerr := p4.Insert(ctx, db, boil.Whitelist(\"id\", \"name\")) // Insert the fourth pilot with a zero value ID\n// The id for this row was inserted as 0 in the database.\n// Note: We had to use the whitelist for this, otherwise\n// SQLBoiler would presume you wanted to auto-increment\n```\n\n### Update\n\n`Update` can be performed on a single object, a slice of objects or as a [Finisher](#finishers)\nfor a collection of rows.\n\n`Update` on a single object optionally takes a `whitelist`. The purpose of the\nwhitelist is to specify which columns in your object should be updated in the database.\n\nLike `Insert`, this method also takes a `Columns` type, but the behavior is\nslightly different. Although the descriptions below look similar the full\ndocumentation reveals the differences. Note that all inference is based on\nthe Go types zero value and not the database default value, read the `Insert`\ndocumentation above for more details.\n\n| Column List | Behavior                                                                     |\n| ----------- | ---------------------------------------------------------------------------- |\n| Infer       | Infer the column list using \"smart\" rules                                    |\n| Whitelist   | Update only the columns specified in this list                               |\n| Blacklist   | Infer the column list for updating, but ensure these columns are not updated |\n| Greylist    | Infer the column list, but ensure these columns are updated                  |\n\n**NOTE:** CreatedAt/UpdatedAt are not included in `Whitelist` automatically.\n\nSee the documentation for\n[boil.Columns.UpdateColumnSet](https://pkg.go.dev/github.com/volatiletech/sqlboiler/v4/boil/#Columns.UpdateColumnSet)\nfor more details.\n\n```go\n// Find a pilot and update his name\npilot, _ := models.FindPilot(ctx, db, 1)\npilot.Name = \"Neo\"\nrowsAff, err := pilot.Update(ctx, db, boil.Infer())\n\n// Update a slice of pilots to have the name \"Smith\"\npilots, _ := models.Pilots().All(ctx, db)\nrowsAff, err := pilots.UpdateAll(ctx, db, models.M{\"name\": \"Smith\"})\n\n// Update all pilots in the database to to have the name \"Smith\"\nrowsAff, err := models.Pilots().UpdateAll(ctx, db, models.M{\"name\": \"Smith\"})\n```\n\n### Delete\n\nDelete a single object, a slice of objects or specific objects through [Query Building](#query-building).\n\n```go\npilot, _ := models.FindPilot(db, 1)\n// Delete the pilot from the database\nrowsAff, err := pilot.Delete(ctx, db)\n\n// Delete all pilots from the database\nrowsAff, err := models.Pilots().DeleteAll(ctx, db)\n\n// Delete a slice of pilots from the database\npilots, _ := models.Pilots().All(ctx, db)\nrowsAff, err := pilots.DeleteAll(ctx, db)\n```\n\n### Upsert\n\n[Upsert](https://www.postgresql.org/docs/9.5/static/sql-insert.html) allows you to perform an insert\nthat optionally performs an update when a conflict is found against existing row values.\n\nThe `updateColumns` and `insertColumns` operates in the same fashion that it does for [Update](#update)\nand [Insert](#insert).\n\nIf an insert is performed, your object will be updated with any missing default values from the database,\nsuch as auto-incrementing column values.\n\n```go\nvar p1 models.Pilot\np1.ID = 5\np1.Name = \"Gaben\"\n\n// INSERT INTO pilots (\"id\", \"name\") VALUES($1, $2)\n// ON CONFLICT DO NOTHING\nerr := p1.Upsert(ctx, db, false, nil, boil.Infer())\n\n// INSERT INTO pilots (\"id\", \"name\") VALUES ($1, $2)\n// ON CONFLICT (\"id\") DO UPDATE SET \"name\" = EXCLUDED.\"name\"\nerr := p1.Upsert(ctx, db, true, []string{\"id\"}, boil.Whitelist(\"name\"), boil.Infer())\n\n// Set p1.ID to a zero value. We will have to use the whitelist now.\np1.ID = 0\np1.Name = \"Hogan\"\n\n// INSERT INTO pilots (\"id\", \"name\") VALUES ($1, $2)\n// ON CONFLICT (\"id\") DO UPDATE SET \"name\" = EXCLUDED.\"name\"\nerr := p1.Upsert(ctx, db, true, []string{\"id\"}, boil.Whitelist(\"name\"), boil.Whitelist(\"id\", \"name\"))\n\n// Custom conflict_target expression:\n// INSERT INTO pilots (\"id\", \"name\") VALUES (9, 'Antwerp Design')\n// ON CONFLICT ON CONSTRAINT pilots_pkey DO NOTHING;\nconflictTarget := models.UpsertConflictTarget\nerr := p1.Upsert(ctx, db, false, nil, boil.Whitelist(\"id\", \"name\"), boil.None(), conflictTarget(\"ON CONSTRAINT pilots_pkey\"))\n\n// Custom UPDATE SET expression:\n// INSERT INTO pilots (\"id\", \"name\") VALUES (9, 'Antwerp Design')\n// ON CONFLICT (\"id\") DO UPDATE SET (id, name) = (sub-SELECT)\nupdateSet := models.UpsertUpdateSet\nerr := p1.Upsert(ctx, db, true, []string{\"id\"}, boil.Whitelist(\"id\", \"name\"), boil.None(), updateSet(\"(id, name) = (sub-SELECT)\"))\n```\n\n- **Postgres**\n  - The `updateOnConflict` argument allows you to specify whether you would like Postgres\n    to perform a `DO NOTHING` on conflict, opposed to a `DO UPDATE`. For MySQL and MSSQL, this param will not be generated.\n  - The `conflictColumns` argument allows you to specify the `ON CONFLICT` columns for Postgres.\n    For MySQL and MSSQL, this param will not be generated.\n- **MySQL and MSSQL**\n  - Passing `boil.None()` for `updateColumns` allows to perform a `DO NOTHING` on conflict similar to Postgres.\n\nNote: Passing a different set of column values to the update component is not currently supported.\n\nNote: Upsert is now not guaranteed to be provided by SQLBoiler and it's now up to each driver\nindividually to support it since it's a bit outside of the reach of the sql standard.\n\n### Reload\n\nIn the event that your objects get out of sync with the database for whatever reason,\nyou can use `Reload` and `ReloadAll` to reload the objects using the primary key values\nattached to the objects.\n\n```go\npilot, _ := models.FindPilot(ctx, db, 1)\n\n// > Object becomes out of sync for some reason, perhaps async processing\n\n// Refresh the object with the latest data from the db\nerr := pilot.Reload(ctx, db)\n\n// Reload all objects in a slice\npilots, _ := models.Pilots().All(ctx, db)\nerr := pilots.ReloadAll(ctx, db)\n```\n\nNote: `Reload` and `ReloadAll` are not recursive, if you need your relationships reloaded\nyou will need to call the `Reload` methods on those yourself.\n\n### Exists\n\n```go\njet, err := models.FindJet(ctx, db, 1)\n\n// Check if the pilot assigned to this jet exists.\nexists, err := jet.Pilot().Exists(ctx, db)\n\n// Check if the pilot with ID 5 exists\nexists, err := models.Pilots(Where(\"id=?\", 5)).Exists(ctx, db)\n```\n\n### Enums\n\nIf your MySQL or Postgres tables use enums we will generate constants that hold their values\nthat you can use in your queries. For example:\n\n```sql\nCREATE TYPE workday AS ENUM('monday', 'tuesday', 'wednesday', 'thursday', 'friday');\n\nCREATE TABLE event_one (\n  id     serial PRIMARY KEY NOT NULL,\n  name   VARCHAR(255),\n  day    workday NOT NULL\n);\n```\n\nAn enum type defined like the above, being used by a table, will generate the following enums:\n\n```go\nconst (\n  WorkdayMonday    = \"monday\"\n  WorkdayTuesday   = \"tuesday\"\n  WorkdayWednesday = \"wednesday\"\n  WorkdayThursday  = \"thursday\"\n  WorkdayFriday    = \"friday\"\n)\n```\n\nFor Postgres we use `enum type name + title cased` value to generate the const variable name.\nFor MySQL we use `table name + column name + title cased value` to generate the const variable name.\n\nNote: If your enum holds a value we cannot parse correctly due, to non-alphabet characters for example,\nit may not be generated. In this event, you will receive errors in your generated tests because\nthe value randomizer in the test suite does not know how to generate valid enum values. You will\nstill be able to use your generated library, and it will still work as expected, but the only way\nto get the tests to pass in this event is to either use a parsable enum value or use a regular column\ninstead of an enum.\n\n### Constants\n\nThe models package will also contain some structs that contain all table,\ncolumn, relationship names harvested from the database at generation time. Type\nsafe where query mods are also generated.\n\nThere are type safe identifiers at:\n\n- models.TableNames.TableName\n- models.ModelColumns.ColumnName\n- models.ModelWhere.ColumnName.Operator\n- models.ModelRels.ForeignTableName\n\nFor table names they're generated under `models.TableNames`:\n\n```go\n// Generated code from models package\nvar TableNames = struct {\n  Messages  string\n  Purchases string\n}{\n  Messages:  \"messages\",\n  Purchases: \"purchases\",\n}\n\n// Usage example:\nfmt.Println(models.TableNames.Messages)\n```\n\nFor column names they're generated under `models.{Model}Columns`:\n\n```go\n// Generated code from models package\nvar MessageColumns = struct {\n  ID         string\n  PurchaseID string\n}{\n  ID:         \"id\",\n  PurchaseID: \"purchase_id\",\n}\n\n// Usage example:\nfmt.Println(models.MessageColumns.ID)\n```\n\nFor where clauses they're generated under `models.{Model}Where.{Column}.{Operator}`:\n\n```go\nvar MessageWhere = struct {\n  ID       whereHelperint\n  Text     whereHelperstring\n}{\n  ID:         whereHelperint{field: `id`},\n  PurchaseID: whereHelperstring{field: `purchase_id`},\n}\n\n// Usage example:\nmodels.Messages(models.MessageWhere.PurchaseID.EQ(\"hello\"))\n```\n\nFor eager loading relationships ther're generated under `models.{Model}Rels`:\n\n```go\n// Generated code from models package\nvar MessageRels = struct {\n  Purchase string\n}{\n  Purchase: \"Purchase\",\n}\n\n// Usage example:\nfmt.Println(models.MessageRels.Purchase)\n```\n\n**NOTE:** You can also assign the ModelWhere or ColumnNames to a variable and\nalthough you probably pay some performance penalty with it sometimes the\nreadability increase is worth it:\n\n```go\ncols := &models.UserColumns\nwhere := &models.UserWhere\n\nu, err := models.Users(where.Name.EQ(\"hello\"), qm.Or(cols.Age + \"=?\", 5))\n```\n\n## FAQ\n\n#### Won't compiling models for a huge database be very slow?\n\nNo, because Go's toolchain - unlike traditional toolchains - makes the compiler do most of the work\ninstead of the linker. This means that when the first `go install` is done it can take\na little bit of time because there is a lot of code that is generated. However, because of this\nwork balance between the compiler and linker in Go, linking to that code afterwards in the subsequent\ncompiles is extremely fast.\n\n#### Missing imports for generated package\n\nThe generated models might import a couple of packages that are not on your system already, so\n`cd` into your generated models directory and type `go get -u -t` to fetch them. You will only need\nto run this command once, not per generation.\n\n#### How should I handle multiple schemas?\n\nIf your database uses multiple schemas you should generate a new package for each of your schemas.\nNote that this only applies to databases that use real, SQL standard schemas (like PostgreSQL), not\nfake schemas (like MySQL).\n\n#### How do I use types.BytesArray for Postgres bytea arrays?\n\nOnly \"escaped format\" is supported for types.BytesArray. This means that your byte slice needs to have\na format of \"\\\\x00\" (4 bytes per byte) opposed to \"\\x00\" (1 byte per byte). This is to maintain compatibility\nwith all Postgres drivers. Example:\n\n`x := types.BytesArray{0: []byte(\"\\\\x68\\\\x69\")}`\n\nPlease note that multi-dimensional Postgres ARRAY types are not supported at this time.\n\n#### Why aren't my time.Time or null.Time fields working in MySQL?\n\nYou _must_ use a DSN flag in MySQL connections, see: [Requirements](#requirements)\n\n#### Where is the homepage?\n\nThe homepage for the [SQLBoiler](https://github.com/volatiletech/sqlboiler) [Golang ORM](https://github.com/volatiletech/sqlboiler)\ngenerator is located at: https://github.com/volatiletech/sqlboiler\n\n#### Why are the auto-generated tests failing?\n\nThe tests generated for your models package with sqlboiler are fairly\nerror-prone. They are usually broken by constraints in the database\nthat sqlboiler can't hope to understand.\n\nDuring regular run-time this isn't an issue because your code will throw errors\nand you will fix it however the auto-generated tests can only report those\nerrors and it seems like something is wrong when in reality the only issue is\nthat the auto generated tests can't understand that your `text` column is\nvalidated by a regex that says it must be composed solely of the 'b' character\nrepeated 342 times.\n\nThese tests are broken especially by foreign key constraints because of the\nparallelism we use. There's also no understanding in the tests of dependencies\nbased on these foreign keys. As such there is a process that removes the foreign\nkeys from your schema when they are run, if this process messes up you will get\nerrors relating to foreign key constraints.\n\n## Benchmarks\n\nIf you'd like to run the benchmarks yourself check out our [boilbench](https://github.com/volatiletech/boilbench) repo.\n\n```bash\ngo test -bench . -benchmem\n```\n\n### Results (lower is better)\n\nTest machine:\n\n```text\nOS:  Ubuntu 16.04\nCPU: Intel(R) Core(TM) i7-4771 CPU @ 3.50GHz\nMem: 16GB\nGo:  go version go1.8.1 linux/amd64\n```\n\nThe graphs below have many runs like this as input to calculate errors. Here\nis a sample run:\n\n```text\nBenchmarkGORMSelectAll/gorm-8         20000   66500 ns/op   28998 B/op    455 allocs/op\nBenchmarkGORPSelectAll/gorp-8         50000   31305 ns/op    9141 B/op    318 allocs/op\nBenchmarkXORMSelectAll/xorm-8         20000   66074 ns/op   16317 B/op    417 allocs/op\nBenchmarkKallaxSelectAll/kallax-8    100000   18278 ns/op    7428 B/op    145 allocs/op\nBenchmarkBoilSelectAll/boil-8        100000   12759 ns/op    3145 B/op     67 allocs/op\n\nBenchmarkGORMSelectSubset/gorm-8      20000    69469 ns/op   30008 B/op   462 allocs/op\nBenchmarkGORPSelectSubset/gorp-8      50000    31102 ns/op    9141 B/op   318 allocs/op\nBenchmarkXORMSelectSubset/xorm-8      20000    64151 ns/op   15933 B/op   414 allocs/op\nBenchmarkKallaxSelectSubset/kallax-8 100000    16996 ns/op    6499 B/op   132 allocs/op\nBenchmarkBoilSelectSubset/boil-8     100000    13579 ns/op    3281 B/op    71 allocs/op\n\nBenchmarkGORMSelectComplex/gorm-8     20000    76284 ns/op   34566 B/op   521 allocs/op\nBenchmarkGORPSelectComplex/gorp-8     50000    31886 ns/op    9501 B/op   328 allocs/op\nBenchmarkXORMSelectComplex/xorm-8     20000    68430 ns/op   17694 B/op   464 allocs/op\nBenchmarkKallaxSelectComplex/kallax-8 50000    26095 ns/op   10293 B/op   212 allocs/op\nBenchmarkBoilSelectComplex/boil-8    100000    16403 ns/op    4205 B/op   102 allocs/op\n\nBenchmarkGORMDelete/gorm-8           200000    10356 ns/op    5059 B/op    98 allocs/op\nBenchmarkGORPDelete/gorp-8          1000000     1335 ns/op     352 B/op    13 allocs/op\nBenchmarkXORMDelete/xorm-8           200000    10796 ns/op    4146 B/op   122 allocs/op\nBenchmarkKallaxDelete/kallax-8       300000     5141 ns/op    2241 B/op    48 allocs/op\nBenchmarkBoilDelete/boil-8          2000000      796 ns/op     168 B/op     8 allocs/op\n\nBenchmarkGORMInsert/gorm-8           100000    15238 ns/op    8278 B/op   150 allocs/op\nBenchmarkGORPInsert/gorp-8           300000     4648 ns/op    1616 B/op    38 allocs/op\nBenchmarkXORMInsert/xorm-8           100000    12600 ns/op    6092 B/op   138 allocs/op\nBenchmarkKallaxInsert/kallax-8       100000    15115 ns/op    6003 B/op   126 allocs/op\nBenchmarkBoilInsert/boil-8          1000000     2249 ns/op     984 B/op    23 allocs/op\n\nBenchmarkGORMUpdate/gorm-8           100000    18609 ns/op    9389 B/op   174 allocs/op\nBenchmarkGORPUpdate/gorp-8           500000     3180 ns/op    1536 B/op    35 allocs/op\nBenchmarkXORMUpdate/xorm-8           100000    13149 ns/op    5098 B/op   149 allocs/op\nBenchmarkKallaxUpdate/kallax-8       100000    22880 ns/op   11366 B/op   219 allocs/op\nBenchmarkBoilUpdate/boil-8          1000000     1810 ns/op     936 B/op    18 allocs/op\n\nBenchmarkGORMRawBind/gorm-8           20000    65821 ns/op   30502 B/op   444 allocs/op\nBenchmarkGORPRawBind/gorp-8           50000    31300 ns/op    9141 B/op   318 allocs/op\nBenchmarkXORMRawBind/xorm-8           20000    62024 ns/op   15588 B/op   403 allocs/op\nBenchmarkKallaxRawBind/kallax-8      200000     7843 ns/op    4380 B/op    46 allocs/op\nBenchmarkSQLXRawBind/sqlx-8          100000    13056 ns/op    4572 B/op    55 allocs/op\nBenchmarkBoilRawBind/boil-8          200000    11519 ns/op    4638 B/op    55 allocs/op\n```\n\n<img src=\"http://i.imgur.com/SltE8UQ.png\"/><img src=\"http://i.imgur.com/lzvM5jJ.png\"/><img src=\"http://i.imgur.com/SS0zNd2.png\"/>\n\n<img src=\"http://i.imgur.com/Kk0IM0J.png\"/><img src=\"http://i.imgur.com/1IFtpdP.png\"/><img src=\"http://i.imgur.com/t6Usecx.png\"/>\n\n<img src=\"http://i.imgur.com/98DOzcr.png\"/><img src=\"http://i.imgur.com/NSp5r4Q.png\"/><img src=\"http://i.imgur.com/dEGlOgI.png\"/>\n\n<img src=\"http://i.imgur.com/W0zhuGb.png\"/><img src=\"http://i.imgur.com/YIvDuFv.png\"/><img src=\"http://i.imgur.com/sKwuMaU.png\"/>\n\n<img src=\"http://i.imgur.com/ZUMYVmw.png\"/><img src=\"http://i.imgur.com/T61rH3K.png\"/><img src=\"http://i.imgur.com/lDr0xhY.png\"/>\n\n<img src=\"http://i.imgur.com/LWo10M9.png\"/><img src=\"http://i.imgur.com/Td15owT.png\"/><img src=\"http://i.imgur.com/45XXw4K.png\"/>\n\n<img src=\"http://i.imgur.com/lpP8qds.png\"/><img src=\"http://i.imgur.com/hLyH3jQ.png\"/><img src=\"http://i.imgur.com/C2v10t3.png\"/>\n\n## Third-Party Extensions\n\nBelow are extensions for SQL Boiler developed by community, use them at your own risk.\n\n- [sqlboiler-extensions](https://github.com/tiendc/sqlboiler-extensions): Generates additional methods for models, particlarly for bulk operations.\n- [boilingseed](https://github.com/stephenafamo/boilingseed): Generates helpers to seed the database with data.\n- [boilingfactory](https://github.com/stephenafamo/boilingfactory): Generates helpers to create and insert test models on the fly.\n"
        },
        {
          "name": "boil.sh",
          "type": "blob",
          "size": 10.857421875,
          "content": "#!/bin/sh\n\nDB_USER=\"sqlboiler_root_user\"\nDB_NAME=\"sqlboiler_model_test\"\nDB_PASS=\"sqlboiler\"\nMSSQLPASS=\"Sqlboiler@1234\"\n\nDRIVER_USER=\"sqlboiler_driver_user\"\nDRIVER_DB=\"sqlboiler_driver_test\"\n\n# ====================================\n# Building\n# ====================================\n\nbuild() {\n    driver=$1\n\n    buildPath=github.com/volatiletech/sqlboiler/v4\n    case \"${driver}\" in\n        all)\n            set -o xtrace\n            go build \"${buildPath}\"\n            { set +o xtrace; } 2>/dev/null\n            drivers=\"psql mysql mssql\"\n            shift ;;\n        psql)\n            drivers=\"psql\"\n            shift ;;\n        mysql)\n            drivers=\"mysql\"\n            shift ;;\n        mssql)\n            drivers=\"mssql\"\n            shift ;;\n        *)\n            set -o xtrace\n            go build \"$@\" \"${buildPath}\"\n            { set +o xtrace; } 2>/dev/null\n            return ;;\n    esac\n\n    for d in $drivers; do\n        set -o xtrace\n        go build \"$@\" ${buildPath}/drivers/sqlboiler-\"${d}\"\n        { set +o xtrace; } 2>/dev/null\n    done\n}\n\n# ====================================\n# Generation\n# ====================================\n\ngen() {\n    db=$1\n    shift\n    set -o xtrace\n    ./sqlboiler \"$@\" --wipe \"${db}\"\n}\n\n# ====================================\n# Testing\n# ====================================\n\nruntest() {\n    set -o xtrace\n    go test -v -race \"$@\" ./models\n}\n\n# ====================================\n# Test users\n# ====================================\n\ntest_user() {\n    driver=$1\n\n    case \"${driver}\" in\n        psql)\n            # Can't use createuser because it interactively promtps for a password\n            set -o xtrace\n            psql --host localhost --username postgres --command \"create user ${DB_USER} with superuser password '${DB_PASS}';\"\n            ;;\n        mysql)\n            set -o xtrace\n            mysql --host localhost --execute \"create user ${DB_USER} identified by '${DB_PASS}';\"\n            mysql --host localhost --execute \"grant all privileges on *.* to ${DB_USER};\"\n            ;;\n        mssql)\n            set -o xtrace\n            sqlcmd -S localhost -U sa -P \"${MSSQLPASS}\" -Q \"create login ${DB_USER} with password = '${MSSQLPASS}';\"\n            sqlcmd -S localhost -U sa -P \"${MSSQLPASS}\" -Q \"alter server role sysadmin add member ${DB_USER};\"\n            ;;\n        mssql-docker)\n            set -o xtrace\n            docker exec --interactive --tty mssql /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P \"${MSSQLPASS}\" -Q \"create login ${DB_USER} with password = '${MSSQLPASS}';\"\n            docker exec --interactive --tty mssql /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P \"${MSSQLPASS}\" -Q \"alter server role sysadmin add member ${DB_USER};\"\n            ;;\n        *)\n            echo \"unknown driver\"\n            ;;\n    esac\n}\n\n# ====================================\n# Test DBs\n# ====================================\n\ntest_db() {\n    driver=$1\n\n    case \"${driver}\" in\n        psql)\n            set -o xtrace\n            env PGPASSWORD=${DB_PASS} dropdb --host localhost --username ${DB_USER} --if-exists ${DB_NAME}\n            env PGPASSWORD=${DB_PASS} createdb --host localhost --owner ${DB_USER} --username ${DB_USER} ${DB_NAME}\n            env PGPASSWORD=${DB_PASS} psql --host localhost --username ${DB_USER} --file testdata/psql_test_schema.sql ${DB_NAME}\n            ;;\n        mysql)\n            set -o xtrace\n            mysql --host localhost --user ${DB_USER} --password=${DB_PASS} --execute \"drop database if exists ${DB_NAME};\"\n            mysql --host localhost --user ${DB_USER} --password=${DB_PASS} --execute \"create database ${DB_NAME};\"\n            mysql --host localhost --user ${DB_USER} --password=${DB_PASS} ${DB_NAME} < testdata/mysql_test_schema.sql\n            ;;\n        mssql)\n            set -o xtrace\n            sqlcmd -S localhost -U ${DB_USER} -P ${MSSQLPASS} -Q \"drop database if exists ${DB_NAME}\";\n            sqlcmd -S localhost -U ${DB_USER} -P ${MSSQLPASS} -Q \"create database ${DB_NAME}\";\n            sqlcmd -S localhost -U ${DB_USER} -P ${MSSQLPASS} -d ${DB_NAME} -i testdata/mssql_test_schema.sql\n            ;;\n        mssql-docker)\n            set -o xtrace\n            docker exec --interactive --tty mssql /opt/mssql-tools/bin/sqlcmd -S localhost -U ${DB_USER} -P ${MSSQLPASS} -Q \"drop database if exists ${DB_NAME}\";\n            docker exec --interactive --tty mssql /opt/mssql-tools/bin/sqlcmd -S localhost -U ${DB_USER} -P ${MSSQLPASS} -Q \"create database ${DB_NAME}\";\n            docker exec --interactive --tty mssql /opt/mssql-tools/bin/sqlcmd -S localhost -U ${DB_USER} -P ${MSSQLPASS} -d ${DB_NAME} -i testdata/mssql_test_schema.sql\n            ;;\n        *)\n            echo \"unknown driver\"\n            ;;\n    esac\n}\n\n# ====================================\n# Driver test\n# ====================================\n\ndriver_test() {\n    driver=$1\n    shift\n\n    cd \"drivers/sqlboiler-${driver}/driver\"\n    set -o xtrace\n    go test \"$@\"\n}\n\n# ====================================\n# Driver test users\n# ====================================\n\ndriver_test_user() {\n    driver=$1\n\n    case \"${driver}\" in\n        psql)\n            set -o xtrace\n            env PGPASSWORD=${DB_PASS} psql --host localhost --username ${DB_USER} --command \"create role ${DRIVER_USER} login nocreatedb nocreaterole password '${DB_PASS}';\" ${DRIVER_DB}\n            env PGPASSWORD=${DB_PASS} psql --host localhost --username ${DB_USER} --command \"alter database ${DRIVER_DB} owner to ${DRIVER_USER};\" ${DRIVER_DB}\n            ;;\n        mysql)\n            set -o xtrace\n            mysql --host localhost --execute \"create user ${DRIVER_USER} identified by '${DB_PASS}';\"\n            mysql --host localhost --execute \"grant all privileges on ${DRIVER_DB}.* to ${DRIVER_USER};\"\n            ;;\n        mssql)\n            set -o xtrace\n            sqlcmd -S localhost -U sa -P \"${MSSQLPASS}\" -d \"${DRIVER_DB}\" -Q \"create user ${DRIVER_USER} with password = '${MSSQLPASS}'\";\n            sqlcmd -S localhost -U sa -P \"${MSSQLPASS}\" -d \"${DRIVER_DB}\" -Q \"grant alter, control to ${DRIVER_USER}\";\n            ;;\n        mssql-docker)\n            set -o xtrace\n            docker exec --interactive --tty mssql /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P \"${MSSQLPASS}\" -d \"${DRIVER_DB}\" -Q \"create user ${DRIVER_USER} with password = '${MSSQLPASS}'\";\n            docker exec --interactive --tty mssql /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P \"${MSSQLPASS}\" -d \"${DRIVER_DB}\" -Q \"grant alter, control to ${DRIVER_USER}\";\n            ;;\n        *)\n            echo \"unknown driver\"\n            ;;\n    esac\n}\n\n# ====================================\n# Driver test databases\n# ====================================\n\ndriver_test_db() {\n    driver=$1\n\n    case \"${driver}\" in\n        psql)\n            set -o xtrace\n            env PGPASSWORD=${DB_PASS} createdb --host localhost --username ${DB_USER} --owner ${DB_USER} ${DRIVER_DB}\n            ;;\n        mysql)\n            set -o xtrace\n            mysql --host localhost --user ${DB_USER} --password=${DB_PASS} --execute \"create database ${DRIVER_DB};\"\n            ;;\n        mssql)\n            set -o xtrace\n            sqlcmd -S localhost -U sa -P \"${MSSQLPASS}\" -Q \"create database ${DRIVER_DB};\"\n            sqlcmd -S localhost -U sa -P \"${MSSQLPASS}\" -d \"${DRIVER_DB}\" -Q \"exec sp_configure 'contained database authentication', 1;\"\n            sqlcmd -S localhost -U sa -P \"${MSSQLPASS}\" -d \"${DRIVER_DB}\" -Q \"reconfigure\"\n            sqlcmd -S localhost -U sa -P \"${MSSQLPASS}\" -d \"${DRIVER_DB}\" -Q \"alter database ${DRIVER_DB} set containment = partial;\"\n            ;;\n        mssql-docker)\n            set -o xtrace\n            docker exec --interactive --tty mssql /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P \"${MSSQLPASS}\" -Q \"create database ${DRIVER_DB};\"\n            docker exec --interactive --tty mssql /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P \"${MSSQLPASS}\" -d \"${DRIVER_DB}\" -Q \"exec sp_configure 'contained database authentication', 1;\"\n            docker exec --interactive --tty mssql /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P \"${MSSQLPASS}\" -d \"${DRIVER_DB}\" -Q \"reconfigure\"\n            docker exec --interactive --tty mssql /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P \"${MSSQLPASS}\" -d \"${DRIVER_DB}\" -Q \"alter database ${DRIVER_DB} set containment = partial;\"\n            ;;\n        *)\n            echo \"unknown driver\"\n            ;;\n    esac\n}\n\n# ====================================\n# MSSQL stuff\n# ====================================\n\nmssql_run() {\n    if test \"attach\" = \"${1}\"; then\n        args=\"--interactive --tty\"\n    else\n        args=\"--detach\"\n    fi\n\n    set -o xtrace\n\n    docker run $args --rm \\\n        --env 'ACCEPT_EULA=Y' --env \"SA_PASSWORD=${MSSQLPASS}\" \\\n        --publish 1433:1433 \\\n        --volume \"${PWD}/testdata/mssql_test_schema.sql:/testdata/mssql_test_schema.sql\" \\\n        --name mssql \\\n        mcr.microsoft.com/mssql/server:2019-latest\n}\n\nmssql_stop() {\n    set -o xtrace\n    docker stop mssql\n}\n\nmssql_sqlcmd() {\n    set -o xtrace\n    docker exec --interactive --tty mssql /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P \"${MSSQLPASS}\" -Q \"$@\"\n}\n\n# ====================================\n# Clean\n# ====================================\n\nclean() {\n    set -o xtrace\n    rm -f ./sqlboiler\n    rm -f ./sqlboiler-*\n}\n\n# ====================================\n# CLI\n# ====================================\n\ncommand=$1\nshift\n\ncase \"${command}\" in\n    build)     build \"$@\" ;;\n    gen)       gen \"$@\" ;;\n\n    test)      runtest \"$@\" ;;\n    test-user) test_user \"$1\" ;;\n    test-db)   test_db \"$1\" ;;\n\n    driver-test)      driver_test \"$@\" ;;\n    driver-test-db)   driver_test_db \"$1\" ;;\n    driver-test-user) driver_test_user \"$1\" ;;\n\n    mssql-run)    mssql_run \"$@\" ;;\n    mssql-stop)   mssql_stop \"$@\" ;;\n    mssql-sqlcmd) mssql_sqlcmd \"$@\" ;;\n\n    clean) clean ;;\n    *)\n        echo \"./boil.sh command [args]\"\n        echo \"Helpers to build, test and develop on sqlboiler\"\n        echo\n        echo \"Commands:\"\n        echo \"  build [all|driver]          - builds the driver (or all drivers if all), or sqlboiler if omitted\"\n        echo \"  gen <driver> [args]         - generates models for driver, passing args along to sqlboiler\"\n        echo \"  test [args]                 - runs model tests, passing args to the test binary\"\n        echo \"  test-user <driver>          - creates a user for the tests (superuser)\"\n        echo \"  test-db <driver>            - recreates test datbase for driver using test-user\"\n        echo \"  driver-test <driver> [args] - runs tests for the driver\"\n        echo \"  driver-test-db <driver>     - create driver db (run before driver-test-user)\"\n        echo \"  driver-test-user <driver>   - creates a user for the driver tests (unprivileged)\"\n        echo \"  mssql-run [attach]          - run mssql docker container, if attach is present will not daemonize\"\n        echo \"  mssql-stop                  - stop mssql docker container\"\n        echo \"  mssql-sqlcmd [args...]      - run sql query using sqlcmd in docker container\"\nesac\n"
        },
        {
          "name": "boil",
          "type": "tree",
          "content": null
        },
        {
          "name": "boilingcore",
          "type": "tree",
          "content": null
        },
        {
          "name": "drivers",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 2.13671875,
          "content": "module github.com/volatiletech/sqlboiler/v4\n\ngo 1.16\n\nrequire (\n\tgithub.com/DATA-DOG/go-sqlmock v1.4.1\n\tgithub.com/Masterminds/sprig/v3 v3.2.2\n\tgithub.com/davecgh/go-spew v1.1.1\n\tgithub.com/ericlagergren/decimal v0.0.0-20190420051523-6335edbaa640\n\tgithub.com/friendsofgo/errors v0.9.2\n\tgithub.com/go-sql-driver/mysql v1.6.0\n\tgithub.com/gofrs/uuid v4.2.0+incompatible // indirect\n\tgithub.com/golang-sql/civil v0.0.0-20220223132316-b832511892a9 // indirect\n\tgithub.com/google/go-cmp v0.5.8\n\tgithub.com/huandu/xstrings v1.3.2 // indirect\n\tgithub.com/imdario/mergo v0.3.13 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.0.1 // indirect\n\tgithub.com/kat-co/vala v0.0.0-20170210184112-42e1d8b61f12\n\tgithub.com/lib/pq v1.10.6\n\tgithub.com/microsoft/go-mssqldb v0.17.0\n\tgithub.com/mitchellh/copystructure v1.2.0 // indirect\n\tgithub.com/pelletier/go-toml/v2 v2.0.5 // indirect\n\tgithub.com/shopspring/decimal v1.3.1 // indirect\n\tgithub.com/spf13/afero v1.9.2 // indirect\n\tgithub.com/spf13/cast v1.5.0\n\tgithub.com/spf13/cobra v1.5.0\n\tgithub.com/spf13/viper v1.12.0\n\tgithub.com/stretchr/testify v1.8.0\n\tgithub.com/subosito/gotenv v1.4.1 // indirect\n\tgithub.com/volatiletech/null/v8 v8.1.2\n\tgithub.com/volatiletech/randomize v0.0.1\n\tgithub.com/volatiletech/strmangle v0.0.6\n\tgolang.org/x/crypto v0.0.0-20220826181053-bd7e27e6170d // indirect\n\tgolang.org/x/sys v0.0.0-20220825204002-c680a09ffe64 // indirect\n\tgolang.org/x/tools v0.1.12 // indirect\n\tgolang.org/x/xerrors v0.0.0-20220609144429-65e65417b02f // indirect\n\tgopkg.in/ini.v1 v1.67.0 // indirect\n\tlukechampine.com/uint128 v1.2.0 // indirect\n\tmodernc.org/cc/v3 v3.36.3 // indirect\n\tmodernc.org/ccgo/v3 v3.16.9 // indirect\n\tmodernc.org/libc v1.17.1 // indirect\n\tmodernc.org/opt v0.1.3 // indirect\n\tmodernc.org/sqlite v1.18.1\n\tmodernc.org/strutil v1.1.3 // indirect\n\tmodernc.org/token v1.0.1 // indirect\n)\n\nretract (\n\tv4.17.1 // Generates faulty code for DeleteAll if the table has multiple foreign keys\n\tv4.17.0 // Generates faulty code for DeleteAll if the table has multiple foreign keys\n\tv4.10.0 // Generated models are invalid due to a wrong assignment\n\tv4.9.0 // Generated code shows v4.8.6, messed up commit tagging and untidy go.mod\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 99.3447265625,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=\ncloud.google.com/go v0.44.1/go.mod h1:iSa0KzasP4Uvy3f1mN/7PiObzGgflwredwwASm/v6AU=\ncloud.google.com/go v0.44.2/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=\ncloud.google.com/go v0.44.3/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=\ncloud.google.com/go v0.45.1/go.mod h1:RpBamKRgapWJb87xiFSdk4g1CME7QZg3uwTez+TSTjc=\ncloud.google.com/go v0.46.3/go.mod h1:a6bKKbmY7er1mI7TEI4lsAkts/mkhTSZK8w33B4RAg0=\ncloud.google.com/go v0.50.0/go.mod h1:r9sluTvynVuxRIOHXQEHMFffphuXHOMZMycpNR5e6To=\ncloud.google.com/go v0.52.0/go.mod h1:pXajvRH/6o3+F9jDHZWQ5PbGhn+o8w9qiu/CffaVdO4=\ncloud.google.com/go v0.53.0/go.mod h1:fp/UouUEsRkN6ryDKNW/Upv/JBKnv6WDthjR6+vze6M=\ncloud.google.com/go v0.54.0/go.mod h1:1rq2OEkV3YMf6n/9ZvGWI3GWw0VoqH/1x2nd8Is/bPc=\ncloud.google.com/go v0.56.0/go.mod h1:jr7tqZxxKOVYizybht9+26Z/gUq7tiRzu+ACVAMbKVk=\ncloud.google.com/go v0.57.0/go.mod h1:oXiQ6Rzq3RAkkY7N6t3TcE6jE+CIBBbA36lwQ1JyzZs=\ncloud.google.com/go v0.62.0/go.mod h1:jmCYTdRCQuc1PHIIJ/maLInMho30T/Y0M4hTdTShOYc=\ncloud.google.com/go v0.65.0/go.mod h1:O5N8zS7uWy9vkA9vayVHs65eM1ubvY4h553ofrNHObY=\ncloud.google.com/go v0.72.0/go.mod h1:M+5Vjvlc2wnp6tjzE102Dw08nGShTscUx2nZMufOKPI=\ncloud.google.com/go v0.74.0/go.mod h1:VV1xSbzvo+9QJOxLDaJfTjx5e+MePCpCWwvftOeQmWk=\ncloud.google.com/go v0.75.0/go.mod h1:VGuuCn7PG0dwsd5XPVm2Mm3wlh3EL55/79EKB6hlPTY=\ncloud.google.com/go v0.78.0/go.mod h1:QjdrLG0uq+YwhjoVOLsS1t7TW8fs36kLs4XO5R5ECHg=\ncloud.google.com/go v0.79.0/go.mod h1:3bzgcEeQlzbuEAYu4mrWhKqWjmpprinYgKJLgKHnbb8=\ncloud.google.com/go v0.81.0/go.mod h1:mk/AM35KwGk/Nm2YSeZbxXdrNK3KZOYHmLkOqC2V6E0=\ncloud.google.com/go v0.83.0/go.mod h1:Z7MJUsANfY0pYPdw0lbnivPx4/vhy/e2FEkSkF7vAVY=\ncloud.google.com/go v0.84.0/go.mod h1:RazrYuxIK6Kb7YrzzhPoLmCVzl7Sup4NrbKPg8KHSUM=\ncloud.google.com/go v0.87.0/go.mod h1:TpDYlFy7vuLzZMMZ+B6iRiELaY7z/gJPaqbMx6mlWcY=\ncloud.google.com/go v0.90.0/go.mod h1:kRX0mNRHe0e2rC6oNakvwQqzyDmg57xJ+SZU1eT2aDQ=\ncloud.google.com/go v0.93.3/go.mod h1:8utlLll2EF5XMAV15woO4lSbWQlk8rer9aLOfLh7+YI=\ncloud.google.com/go v0.94.1/go.mod h1:qAlAugsXlC+JWO+Bke5vCtc9ONxjQT3drlTTnAplMW4=\ncloud.google.com/go v0.97.0/go.mod h1:GF7l59pYBVlXQIBLx3a761cZ41F9bBH3JUlihCt2Udc=\ncloud.google.com/go v0.99.0/go.mod h1:w0Xx2nLzqWJPuozYQX+hFfCSI8WioryfRDzkoI/Y2ZA=\ncloud.google.com/go v0.100.2/go.mod h1:4Xra9TjzAeYHrl5+oeLlzbM2k3mjVhZh4UqTZ//w99A=\ncloud.google.com/go/bigquery v1.0.1/go.mod h1:i/xbL2UlR5RvWAURpBYZTtm/cXjCha9lbfbpx4poX+o=\ncloud.google.com/go/bigquery v1.3.0/go.mod h1:PjpwJnslEMmckchkHFfq+HTD2DmtT67aNFKH1/VBDHE=\ncloud.google.com/go/bigquery v1.4.0/go.mod h1:S8dzgnTigyfTmLBfrtrhyYhwRxG72rYxvftPBK2Dvzc=\ncloud.google.com/go/bigquery v1.5.0/go.mod h1:snEHRnqQbz117VIFhE8bmtwIDY80NLUZUMb4Nv6dBIg=\ncloud.google.com/go/bigquery v1.7.0/go.mod h1://okPTzCYNXSlb24MZs83e2Do+h+VXtc4gLoIoXIAPc=\ncloud.google.com/go/bigquery v1.8.0/go.mod h1:J5hqkt3O0uAFnINi6JXValWIb1v0goeZM77hZzJN/fQ=\ncloud.google.com/go/compute v0.1.0/go.mod h1:GAesmwr110a34z04OlxYkATPBEfVhkymfTBXtfbBFow=\ncloud.google.com/go/compute v1.3.0/go.mod h1:cCZiE1NHEtai4wiufUhW8I8S1JKkAnhnQJWM7YD99wM=\ncloud.google.com/go/compute v1.5.0/go.mod h1:9SMHyhJlzhlkJqrPAc839t2BZFTSk6Jdj6mkzQJeu0M=\ncloud.google.com/go/compute v1.6.0/go.mod h1:T29tfhtVbq1wvAPo0E3+7vhgmkOYeXjhFvz/FMzPu0s=\ncloud.google.com/go/compute v1.6.1/go.mod h1:g85FgpzFvNULZ+S8AYq87axRKuf2Kh7deLqV/jJ3thU=\ncloud.google.com/go/datastore v1.0.0/go.mod h1:LXYbyblFSglQ5pkeyhO+Qmw7ukd3C+pD7TKLgZqpHYE=\ncloud.google.com/go/datastore v1.1.0/go.mod h1:umbIZjpQpHh4hmRpGhH4tLFup+FVzqBi1b3c64qFpCk=\ncloud.google.com/go/firestore v1.6.1/go.mod h1:asNXNOzBdyVQmEU+ggO8UPodTkEVFW5Qx+rwHnAz+EY=\ncloud.google.com/go/pubsub v1.0.1/go.mod h1:R0Gpsv3s54REJCy4fxDixWD93lHJMoZTyQ2kNxGRt3I=\ncloud.google.com/go/pubsub v1.1.0/go.mod h1:EwwdRX2sKPjnvnqCa270oGRyludottCI76h+R3AArQw=\ncloud.google.com/go/pubsub v1.2.0/go.mod h1:jhfEVHT8odbXTkndysNHCcx0awwzvfOlguIAii9o8iA=\ncloud.google.com/go/pubsub v1.3.1/go.mod h1:i+ucay31+CNRpDW4Lu78I4xXG+O1r/MAHgjpRVR+TSU=\ncloud.google.com/go/storage v1.0.0/go.mod h1:IhtSnM/ZTZV8YYJWCY8RULGVqBDmpoyjwiyrjsg+URw=\ncloud.google.com/go/storage v1.5.0/go.mod h1:tpKbwo567HUNpVclU5sGELwQWBDZ8gh0ZeosJ0Rtdos=\ncloud.google.com/go/storage v1.6.0/go.mod h1:N7U0C8pVQ/+NIKOBQyamJIeKQKkZ+mxpohlUTyfDhBk=\ncloud.google.com/go/storage v1.8.0/go.mod h1:Wv1Oy7z6Yz3DshWRJFhqM/UCfaWIRTdp0RXyy7KQOVs=\ncloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9ullr3+Kg0=\ncloud.google.com/go/storage v1.14.0/go.mod h1:GrKmX003DSIwi9o29oFT7YDnHYwZoctc3fOKtUw0Xmo=\ndmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\ngithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.0.0/go.mod h1:uGG2W01BaETf0Ozp+QxxKJdMBNRWPdstHG0Fmdwn1/U=\ngithub.com/Azure/azure-sdk-for-go/sdk/azidentity v1.0.0/go.mod h1:+6sju8gk8FRmSajX3Oz4G5Gm7P+mbqE9FVaXXFYTkCM=\ngithub.com/Azure/azure-sdk-for-go/sdk/internal v1.0.0/go.mod h1:eWRD7oawr1Mu1sLCawqVc0CUiF43ia3qQMxLscsKQ9w=\ngithub.com/AzureAD/microsoft-authentication-library-for-go v0.4.0/go.mod h1:Vt9sXTKwMyGcOxSmLDMnGPgqsUg7m8pe215qMLrDXw4=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\ngithub.com/DATA-DOG/go-sqlmock v1.4.1 h1:ThlnYciV1iM/V0OSF/dtkqWb6xo5qITT1TJBG1MRDJM=\ngithub.com/DATA-DOG/go-sqlmock v1.4.1/go.mod h1:f/Ixk793poVmq4qj/V1dPUg2JEAKC73Q5eFN3EC/SaM=\ngithub.com/DataDog/datadog-go v3.2.0+incompatible/go.mod h1:LButxg5PwREeZtORoXG3tL4fMGNddJ+vMq1mwgfaqoQ=\ngithub.com/Masterminds/goutils v1.1.1 h1:5nUrii3FMTL5diU80unEVvNevw1nH4+ZV4DSLVJLSYI=\ngithub.com/Masterminds/goutils v1.1.1/go.mod h1:8cTjp+g8YejhMuvIA5y2vz3BpJxksy863GQaJW2MFNU=\ngithub.com/Masterminds/semver/v3 v3.1.1 h1:hLg3sBzpNErnxhQtUy/mmLR2I9foDujNK030IGemrRc=\ngithub.com/Masterminds/semver/v3 v3.1.1/go.mod h1:VPu/7SZ7ePZ3QOrcuXROw5FAcLl4a0cBrbBpGY/8hQs=\ngithub.com/Masterminds/sprig/v3 v3.2.2 h1:17jRggJu518dr3QaafizSXOjKYp94wKfABxUmyxvxX8=\ngithub.com/Masterminds/sprig/v3 v3.2.2/go.mod h1:UoaO7Yp8KlPnJIYWTFkMaqPUYKTfGFPhxNuwnnxkKlk=\ngithub.com/OneOfOne/xxhash v1.2.2/go.mod h1:HSdplMjZKSmBqAxg5vPj2TmRDmfkzw+cTzAElWljhcU=\ngithub.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=\ngithub.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alecthomas/units v0.0.0-20190717042225-c3de453c63f4/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=\ngithub.com/alecthomas/units v0.0.0-20190924025748-f65c72e2690d/go.mod h1:rBZYJk541a8SKzHPHnH3zbiI+7dagKZ0cgpgrD7Fyho=\ngithub.com/antihax/optional v1.0.0/go.mod h1:uupD/76wgC+ih3iEmQUL+0Ugr19nfwCT1kdvxnR2qWY=\ngithub.com/apmckinlay/gsuneido v0.0.0-20190404155041-0b6cd442a18f/go.mod h1:JU2DOj5Fc6rol0yaT79Csr47QR0vONGwJtBNGRD7jmc=\ngithub.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e/go.mod h1:3U/XgcO3hCbHZ8TKRvWD2dDTCfh9M9ya+I9JpbB7O8o=\ngithub.com/armon/go-metrics v0.0.0-20180917152333-f0300d1749da/go.mod h1:Q73ZrmVTwzkszR9V5SSuryQ31EELlFMUz1kKyl939pY=\ngithub.com/armon/go-metrics v0.3.10/go.mod h1:4O98XIr/9W0sxpJ8UaYkvjk10Iff7SnFrb4QAOwNTFc=\ngithub.com/armon/go-radix v0.0.0-20180808171621-7fddfc383310/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=\ngithub.com/armon/go-radix v1.0.0/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=\ngithub.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=\ngithub.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=\ngithub.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=\ngithub.com/bgentry/speakeasy v0.1.0/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/cespare/xxhash v1.1.0/go.mod h1:XrSqR1VqqWfGrhpAt58auRo0WTKS1nRRg3ghfAqPWnc=\ngithub.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=\ngithub.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\ngithub.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\ngithub.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\ngithub.com/circonus-labs/circonus-gometrics v2.3.1+incompatible/go.mod h1:nmEj6Dob7S7YxXgwXpfOuvO54S+tGdZdw9fuRZt25Ag=\ngithub.com/circonus-labs/circonusllhist v0.1.3/go.mod h1:kMXHVDlOchFAehlya5ePtbp5jckzBHf4XRpQvBOLI+I=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cncf/udpa/go v0.0.0-20200629203442-efcf912fb354/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\ngithub.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\ngithub.com/cncf/udpa/go v0.0.0-20210930031921-04548b0d99d4/go.mod h1:6pvJx4me5XPnfI9Z40ddWsdw2W/uZgQLFXToKeRcDiI=\ngithub.com/cncf/xds/go v0.0.0-20210312221358-fbca930ec8ed/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\ngithub.com/cncf/xds/go v0.0.0-20210805033703-aa0b78936158/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\ngithub.com/cncf/xds/go v0.0.0-20210922020428-25de7278fc84/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\ngithub.com/cncf/xds/go v0.0.0-20211001041855-01bcc9b48dfe/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\ngithub.com/cncf/xds/go v0.0.0-20211011173535-cb28da3451f1/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=\ngithub.com/cockroachdb/apd v1.1.0/go.mod h1:8Sl8LxpKi29FqWXR16WEFZRNSz3SoPzUzeMeY4+DwBQ=\ngithub.com/coreos/go-semver v0.3.0/go.mod h1:nnelYz7RCh+5ahJtPPxZlU+153eP4D4r3EedlOD2RNk=\ngithub.com/coreos/go-systemd/v22 v22.3.2/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dnaeon/go-vcr v1.1.0/go.mod h1:M7tiix8f0r6mKKJ3Yq/kqU1OYf3MnfmBWVbPx/yU9ko=\ngithub.com/dnaeon/go-vcr v1.2.0/go.mod h1:R4UdLID7HZT3taECzJs4YgbbH6PIGXB6W/sc5OLb6RQ=\ngithub.com/dustin/go-humanize v1.0.0 h1:VSnTsYCnlFHaM2/igO1h6X3HA71jcobQuxemgkq4zYo=\ngithub.com/dustin/go-humanize v1.0.0/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/go-control-plane v0.9.7/go.mod h1:cwu0lG7PUMfa9snN8LXBig5ynNVH9qI8YYLbd1fK2po=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20201210154907-fd9021fe5dad/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20210217033140-668b12f5399d/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20210512163311-63b5d3c536b0/go.mod h1:hliV/p42l8fGbc6Y9bQ70uLwIvmJyVE5k4iMKlh8wCQ=\ngithub.com/envoyproxy/go-control-plane v0.9.10-0.20210907150352-cf90f659a021/go.mod h1:AFq3mo9L8Lqqiid3OhADV3RfLJnjiw63cSpi+fDTRC0=\ngithub.com/envoyproxy/go-control-plane v0.10.2-0.20220325020618-49ff273808a1/go.mod h1:KJwIaB5Mv44NWtYuAOFCVOjcI94vtpEz2JU/D2v6IjE=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/ericlagergren/decimal v0.0.0-20190420051523-6335edbaa640 h1:VMAacqPM03GapxpfNORtKNl9o6Uws1BQYL54WjmolN0=\ngithub.com/ericlagergren/decimal v0.0.0-20190420051523-6335edbaa640/go.mod h1:mdYyfAkzn9kyJ/kMk/7WE9ufl9lflh+2NvecQ5mAghs=\ngithub.com/fatih/color v1.7.0/go.mod h1:Zm6kSWBoL9eyXnKyktHP6abPY2pDugNf5KwzbycvMj4=\ngithub.com/fatih/color v1.9.0/go.mod h1:eQcE1qtQxscV5RaZvpXrrb8Drkc3/DdQ+uUYCNjL+zU=\ngithub.com/fatih/color v1.13.0/go.mod h1:kLAiJbzzSOZDVNGyDpeOxJ47H46qBXwg5ILebYFFOfk=\ngithub.com/frankban/quicktest v1.14.3 h1:FJKSZTDHjyhriyC81FLQ0LY93eSai0ZyR/ZIkd3ZUKE=\ngithub.com/frankban/quicktest v1.14.3/go.mod h1:mgiwOwqx65TmIk1wJ6Q7wvnVMocbUorkibMOrVTHZps=\ngithub.com/friendsofgo/errors v0.9.2 h1:X6NYxef4efCBdwI7BgS820zFaN7Cphrmb+Pljdzjtgk=\ngithub.com/friendsofgo/errors v0.9.2/go.mod h1:yCvFW5AkDIL9qn7suHVLiI/gH228n7PC4Pn44IGoTOI=\ngithub.com/fsnotify/fsnotify v1.5.4 h1:jRbGcIw6P2Meqdwuo0H1p6JVLbL5DHKAKlYndzMwVZI=\ngithub.com/fsnotify/fsnotify v1.5.4/go.mod h1:OVB6XrOHzAwXMpEM7uPOzcehqUV2UqJxmVXmkdnm1bU=\ngithub.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\ngithub.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/kit v0.9.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=\ngithub.com/go-kit/log v0.1.0/go.mod h1:zbhenjAZHb184qTLMA9ZjW7ThYL0H2mk7Q6pNt4vbaY=\ngithub.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=\ngithub.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=\ngithub.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=\ngithub.com/go-sql-driver/mysql v1.6.0 h1:BCTh4TKNUYmOmMUcQ3IipzF5prigylS7XXjEkfCHuOE=\ngithub.com/go-sql-driver/mysql v1.6.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=\ngithub.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=\ngithub.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/gofrs/uuid v3.2.0+incompatible/go.mod h1:b2aQJv3Z4Fp6yNu3cdSllBxTCLRxnplIgP/c0N/04lM=\ngithub.com/gofrs/uuid v4.2.0+incompatible h1:yyYWMnhkhrKwwr8gAOcOCYxOOscHgDS9yZgBrnJfGa0=\ngithub.com/gofrs/uuid v4.2.0+incompatible/go.mod h1:b2aQJv3Z4Fp6yNu3cdSllBxTCLRxnplIgP/c0N/04lM=\ngithub.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang-jwt/jwt v3.2.1+incompatible/go.mod h1:8pz2t5EyA70fFQQSrl6XZXzqecmYZeUEB8OUGHkxJ+I=\ngithub.com/golang-jwt/jwt v3.2.2+incompatible/go.mod h1:8pz2t5EyA70fFQQSrl6XZXzqecmYZeUEB8OUGHkxJ+I=\ngithub.com/golang-jwt/jwt/v4 v4.2.0/go.mod h1:/xlHOz8bRuivTWchD4jCa+NbatV+wEUSzwAxVc6locg=\ngithub.com/golang-sql/civil v0.0.0-20190719163853-cb61b32ac6fe/go.mod h1:8vg3r2VgvsThLBIFL93Qb5yWzgyZWhEmBwUJWevAkK0=\ngithub.com/golang-sql/civil v0.0.0-20220223132316-b832511892a9 h1:au07oEsX2xN0ktxqI+Sida1w446QrXBRJ0nee3SNZlA=\ngithub.com/golang-sql/civil v0.0.0-20220223132316-b832511892a9/go.mod h1:8vg3r2VgvsThLBIFL93Qb5yWzgyZWhEmBwUJWevAkK0=\ngithub.com/golang-sql/sqlexp v0.1.0 h1:ZCD6MBpcuOVfGVqsEmY5/4FtYiKz6tSyUv9LPEDei6A=\ngithub.com/golang-sql/sqlexp v0.1.0/go.mod h1:J4ad9Vo8ZCWQ2GMrC4UCQy1JpCbwU9m3EOqtpKwwwHI=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.2.0/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.3.1/go.mod h1:sBzyDLLjw3U8JLTeZvSv8jJB+tU5PVekmnlKIyFUx0Y=\ngithub.com/golang/mock v1.4.0/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.1/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.3/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.4/go.mod h1:l3mdAwkq5BuhzHwde/uurv3sEJeZMXNpwsxVWU71h+4=\ngithub.com/golang/mock v1.5.0/go.mod h1:CWnOUgYIOo4TcNZ0wHX3YZCqsaM1I1Jvs6v3mP3KVu8=\ngithub.com/golang/mock v1.6.0/go.mod h1:p6yTPP+5HYm5mzsMV8JkE6ZKdX+/wYM6Hr+LicevLPs=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.4/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.5/go.mod h1:6O5/vntMXwX2lRkT1hjjk0nAC1IDOTvTlVgjlRvqsdk=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.1/go.mod h1:DopwsBzvsk0Fs44TXzsVbJyPhcCPeIwnvohx4u74HPM=\ngithub.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/golang/snappy v0.0.3/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=\ngithub.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.4.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.6/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.7/go.mod h1:n+brtR0CgQNWTVd5ZUFpTBC8YFBDLK/h/bpaJ8/DtOE=\ngithub.com/google/go-cmp v0.5.8 h1:e6P7q2lk1O+qJJb4BtCQXlK8vWEO8V1ZeuEdJNOqZyg=\ngithub.com/google/go-cmp v0.5.8/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=\ngithub.com/google/martian/v3 v3.0.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\ngithub.com/google/martian/v3 v3.1.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\ngithub.com/google/martian/v3 v3.2.1/go.mod h1:oBOf6HBosgwRXnUGWUB05QECsc6uvmMiJ3+6W4l/CUk=\ngithub.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20190515194954-54271f7e092f/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20191218002539-d4f498aebedc/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200212024743-f11f1df84d12/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200229191704-1ebb73c60ed3/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200430221834-fc25d7d30c6d/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200708004538-1a94d8640e99/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20201023163331-3e6fc7fc9c4c/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20201203190320-1bf35d6f28c2/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20201218002935-b9804c9f04c2/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20210122040257-d980be63207e/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20210226084205-cbba55b83ad5/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20210601050228-01bbb1931b22/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20210609004039-a478d1d731e9/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20210720184732-4bb14d4b1be1/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\ngithub.com/google/uuid v1.1.1/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.3.0 h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=\ngithub.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=\ngithub.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=\ngithub.com/googleapis/gax-go/v2 v2.1.0/go.mod h1:Q3nei7sK6ybPYH7twZdmQpAd1MKb7pfu6SK+H1/DsU0=\ngithub.com/googleapis/gax-go/v2 v2.1.1/go.mod h1:hddJymUZASv3XPyGkUpKj8pPO47Rmb0eJc8R6ouapiM=\ngithub.com/googleapis/gax-go/v2 v2.2.0/go.mod h1:as02EH8zWkzwUoLbBaFeQ+arQaj/OthfcblKl4IGNaM=\ngithub.com/googleapis/gax-go/v2 v2.3.0/go.mod h1:b8LNqSzNabLiUpXKkY7HAR5jr6bIT99EXz9pXxye9YM=\ngithub.com/googleapis/gax-go/v2 v2.4.0/go.mod h1:XOTVJ59hdnfJLIP/dh8n5CGryZR2LxK9wbMD5+iXC6c=\ngithub.com/googleapis/google-cloud-go-testing v0.0.0-20200911160855-bcd43fbb19e8/go.mod h1:dvDLG8qkwmyD9a/MJJN3XJcT3xFxOKAvTZGvuZmac9g=\ngithub.com/grpc-ecosystem/go-grpc-prometheus v1.2.0/go.mod h1:8NvIoxWQoOIhqOTXgfV/d3M/q6VIi02HzZEHgUlZvzk=\ngithub.com/grpc-ecosystem/grpc-gateway v1.16.0/go.mod h1:BDjrQk3hbvj6Nolgz8mAMFbcEtjT1g+wF4CSlocrBnw=\ngithub.com/hashicorp/consul/api v1.12.0/go.mod h1:6pVBMo0ebnYdt2S3H87XhekM/HHrUoTD2XXb/VrZVy0=\ngithub.com/hashicorp/consul/sdk v0.8.0/go.mod h1:GBvyrGALthsZObzUGsfgHZQDXjg4lOjagTIwIR1vPms=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-cleanhttp v0.5.0/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=\ngithub.com/hashicorp/go-cleanhttp v0.5.1/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=\ngithub.com/hashicorp/go-cleanhttp v0.5.2/go.mod h1:kO/YDlP8L1346E6Sodw+PrpBSV4/SoxCXGY6BqNFT48=\ngithub.com/hashicorp/go-hclog v0.12.0/go.mod h1:whpDNt7SSdeAju8AWKIWsul05p54N/39EeqMAyrmvFQ=\ngithub.com/hashicorp/go-hclog v1.2.0/go.mod h1:whpDNt7SSdeAju8AWKIWsul05p54N/39EeqMAyrmvFQ=\ngithub.com/hashicorp/go-immutable-radix v1.0.0/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-immutable-radix v1.3.1/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-msgpack v0.5.3/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=\ngithub.com/hashicorp/go-multierror v1.0.0/go.mod h1:dHtQlpGsu+cZNNAkkCN/P3hoUDHhCYQXV3UM06sGGrk=\ngithub.com/hashicorp/go-multierror v1.1.0/go.mod h1:spPvp8C1qA32ftKqdAHm4hHTbPw+vmowP0z+KUhOZdA=\ngithub.com/hashicorp/go-retryablehttp v0.5.3/go.mod h1:9B5zBasrRhHXnJnui7y6sL7es7NDiJgTc6Er0maI1Xs=\ngithub.com/hashicorp/go-rootcerts v1.0.2/go.mod h1:pqUvnprVnM5bf7AOirdbb01K4ccR319Vf4pU3K5EGc8=\ngithub.com/hashicorp/go-sockaddr v1.0.0/go.mod h1:7Xibr9yA9JjQq1JpNB2Vw7kxv8xerXegt+ozgdvDeDU=\ngithub.com/hashicorp/go-syslog v1.0.0/go.mod h1:qPfqrKkXGihmCqbJM2mZgkZGvKG1dFdvsLplgctolz4=\ngithub.com/hashicorp/go-uuid v1.0.0/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.1/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.4/go.mod h1:iADmTwqILo4mZ8BN3D2Q6+9jd8WM5uGBxy+E8yxSoD4=\ngithub.com/hashicorp/hcl v1.0.0 h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=\ngithub.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=\ngithub.com/hashicorp/logutils v1.0.0/go.mod h1:QIAnNjmIWmVIIkWDTG1z5v++HQmx9WQRO+LraFDTW64=\ngithub.com/hashicorp/mdns v1.0.4/go.mod h1:mtBihi+LeNXGtG8L9dX59gAEa12BDtBQSp4v/YAJqrc=\ngithub.com/hashicorp/memberlist v0.3.0/go.mod h1:MS2lj3INKhZjWNqd3N0m3J+Jxf3DAOnAH9VT3Sh9MUE=\ngithub.com/hashicorp/serf v0.9.6/go.mod h1:TXZNMjZQijwlDvp+r0b63xZ45H7JmCmgg4gpTwn9UV4=\ngithub.com/hashicorp/serf v0.9.7/go.mod h1:TXZNMjZQijwlDvp+r0b63xZ45H7JmCmgg4gpTwn9UV4=\ngithub.com/huandu/xstrings v1.3.1/go.mod h1:y5/lhBue+AyNmUVz9RLU9xbLR0o4KIIExikq4ovT0aE=\ngithub.com/huandu/xstrings v1.3.2 h1:L18LIDzqlW6xN2rEkpdV8+oL/IXWJ1APd+vsdYy4Wdw=\ngithub.com/huandu/xstrings v1.3.2/go.mod h1:y5/lhBue+AyNmUVz9RLU9xbLR0o4KIIExikq4ovT0aE=\ngithub.com/ianlancetaylor/demangle v0.0.0-20181102032728-5e5cf60278f6/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/ianlancetaylor/demangle v0.0.0-20200824232613-28f6c0f3b639/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/imdario/mergo v0.3.11/go.mod h1:jmQim1M+e3UYxmgPu/WyfjB3N3VflVyUjjjwH0dnCYA=\ngithub.com/imdario/mergo v0.3.13 h1:lFzP57bqS/wsqKssCGmtLAb8A0wKjLGrve2q3PPVcBk=\ngithub.com/imdario/mergo v0.3.13/go.mod h1:4lJ1jqUDcsbIECGy0RUJAXNIhg+6ocWgb1ALK2O4oXg=\ngithub.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\ngithub.com/inconshreveable/mousetrap v1.0.1 h1:U3uMjPSQEBMNp1lFxmllqCPM6P5u/Xq7Pgzkat/bFNc=\ngithub.com/inconshreveable/mousetrap v1.0.1/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/jpillora/backoff v1.0.0/go.mod h1:J/6gKK9jxlEcS3zixgDgUAsiuZ7yrSoa/FX5e0EB2j4=\ngithub.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=\ngithub.com/json-iterator/go v1.1.9/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.10/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.11/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=\ngithub.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=\ngithub.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=\ngithub.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=\ngithub.com/julienschmidt/httprouter v1.3.0/go.mod h1:JR6WtHb+2LUe8TCKY3cZOxFyyO8IZAc4RVcycCCAKdM=\ngithub.com/kat-co/vala v0.0.0-20170210184112-42e1d8b61f12 h1:DQVOxR9qdYEybJUr/c7ku34r3PfajaMYXZwgDM7KuSk=\ngithub.com/kat-co/vala v0.0.0-20170210184112-42e1d8b61f12/go.mod h1:u9MdXq/QageOOSGp7qG4XAQsYUMP+V5zEel/Vrl6OOc=\ngithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51 h1:Z9n2FFNUXsshfwJMBgNA0RU6/i7WVaAegv3PtuIHPMs=\ngithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51/go.mod h1:CzGEWj7cYgsdH8dAjBGEr58BoE7ScuLd+fwFZ44+/x8=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/konsorten/go-windows-terminal-sequences v1.0.3/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=\ngithub.com/kr/fs v0.1.0/go.mod h1:FFnZGqtBN9Gxj7eW1uZ42v5BccTP0vu6NEaFoC2HwRg=\ngithub.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pretty v0.2.0/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=\ngithub.com/kr/pretty v0.3.0 h1:WgNl7dwNpEZ6jJ9k1snq4pZsg7DOEN8hP9Xw0Tsjwk0=\ngithub.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=\ngithub.com/lib/pq v1.0.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=\ngithub.com/lib/pq v1.10.6 h1:jbk+ZieJ0D7EVGJYpL9QTz7/YW6UHbmdnZWYyK5cdBs=\ngithub.com/lib/pq v1.10.6/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=\ngithub.com/magiconair/properties v1.8.6 h1:5ibWZ6iY0NctNGWo87LalDlEZ6R41TqbbDamhfG/Qzo=\ngithub.com/magiconair/properties v1.8.6/go.mod h1:y3VJvCyxH9uVvJTWEGAELF3aiYNyPKd5NZ3oSwXrF60=\ngithub.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=\ngithub.com/mattn/go-colorable v0.1.4/go.mod h1:U0ppj6V5qS13XJ6of8GYAs25YV2eR4EVcfRqFIhoBtE=\ngithub.com/mattn/go-colorable v0.1.6/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\ngithub.com/mattn/go-colorable v0.1.9/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=\ngithub.com/mattn/go-colorable v0.1.12/go.mod h1:u5H1YNBxpqRaxsYJYSkiCWKzEfiAb1Gb520KVy5xxl4=\ngithub.com/mattn/go-isatty v0.0.3/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=\ngithub.com/mattn/go-isatty v0.0.8/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\ngithub.com/mattn/go-isatty v0.0.10/go.mod h1:qgIWMr58cqv1PHHyhnkY9lrL7etaEgOFcMEpPG5Rm84=\ngithub.com/mattn/go-isatty v0.0.11/go.mod h1:PhnuNfih5lzO57/f3n+odYbM4JtupLOxQOAqxQCu2WE=\ngithub.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=\ngithub.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=\ngithub.com/mattn/go-isatty v0.0.16 h1:bq3VjFmv/sOjHtdEhmkEV4x1AJtvUvOJ2PFAZ5+peKQ=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-sqlite3 v1.14.14 h1:qZgc/Rwetq+MtyE18WhzjokPD93dNqLGNT3QJuLvBGw=\ngithub.com/mattn/go-sqlite3 v1.14.14/go.mod h1:NyWgC/yNuGj7Q9rpYnZvas74GogHl5/Z4A/KQRfk6bU=\ngithub.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=\ngithub.com/microsoft/go-mssqldb v0.17.0 h1:Fto83dMZPnYv1Zwx5vHHxpNraeEaUlQ/hhHLgZiaenE=\ngithub.com/microsoft/go-mssqldb v0.17.0/go.mod h1:OkoNGhGEs8EZqchVTtochlXruEhEOaO4S0d2sB5aeGQ=\ngithub.com/miekg/dns v1.1.26/go.mod h1:bPDLeHnStXmXAq1m/Ch/hvfNHr14JKNPMBo3VZKjuso=\ngithub.com/miekg/dns v1.1.41/go.mod h1:p6aan82bvRIyn+zDIv9xYNUpwa73JcSh9BKwknJysuI=\ngithub.com/mitchellh/cli v1.1.0/go.mod h1:xcISNoH86gajksDmfB23e/pu+B+GeFRMYmoHXxx3xhI=\ngithub.com/mitchellh/copystructure v1.0.0/go.mod h1:SNtv71yrdKgLRyLFxmLdkAbkKEFWgYaq1OVrnRcwhnw=\ngithub.com/mitchellh/copystructure v1.2.0 h1:vpKXTN4ewci03Vljg/q9QvCGUDttBOGBIa15WveJJGw=\ngithub.com/mitchellh/copystructure v1.2.0/go.mod h1:qLl+cE2AmVv+CoeAwDPye/v+N2HKCj9FbZEVFJRxO9s=\ngithub.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/mitchellh/go-testing-interface v1.0.0/go.mod h1:kRemZodwjscx+RGhAo8eIhFbs2+BFgRtFPeD/KE+zxI=\ngithub.com/mitchellh/mapstructure v0.0.0-20160808181253-ca63d7c062ee/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/mapstructure v1.4.3/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=\ngithub.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/mitchellh/reflectwalk v1.0.0/go.mod h1:mSTlrgnPZtwu0c4WaC2kGObEpuNDbx0jmZXqmk4esnw=\ngithub.com/mitchellh/reflectwalk v1.0.2 h1:G2LzWKi524PWgd3mLHV8Y5k7s6XUvT0Gef6zxSIeXaQ=\ngithub.com/mitchellh/reflectwalk v1.0.2/go.mod h1:mSTlrgnPZtwu0c4WaC2kGObEpuNDbx0jmZXqmk4esnw=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=\ngithub.com/modocache/gover v0.0.0-20171022184752-b58185e213c5/go.mod h1:caMODM3PzxT8aQXRPkAt8xlV/e7d7w8GM5g0fa5F0D8=\ngithub.com/montanaflynn/stats v0.6.6/go.mod h1:etXPPgVO6n31NxCd9KQUMvCM+ve0ruNzt6R8Bnaayow=\ngithub.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=\ngithub.com/pascaldekloe/goe v0.0.0-20180627143212-57f6aae5913c/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=\ngithub.com/pascaldekloe/goe v0.1.0/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=\ngithub.com/pelletier/go-toml v1.9.5 h1:4yBQzkHv+7BHq2PQUZF3Mx0IYxG7LsP222s7Agd3ve8=\ngithub.com/pelletier/go-toml v1.9.5/go.mod h1:u1nR/EPcESfeI/szUZKdtJ0xRNbUoANCkoOuaOx1Y+c=\ngithub.com/pelletier/go-toml/v2 v2.0.1/go.mod h1:r9LEWfGN8R5k0VXJ+0BkIe7MYkRdwZOjgMj2KwnJFUo=\ngithub.com/pelletier/go-toml/v2 v2.0.5 h1:ipoSadvV8oGUjnUbMub59IDPPwfxF694nG/jwbMiyQg=\ngithub.com/pelletier/go-toml/v2 v2.0.5/go.mod h1:OMHamSCAODeSsVrwwvcJOaoN0LIUIaFVNZzmWyNfXas=\ngithub.com/pkg/browser v0.0.0-20210115035449-ce105d075bb4/go.mod h1:N6UoU20jOqggOuDwUaBQpluzLNDqif3kq9z2wpdYEfQ=\ngithub.com/pkg/browser v0.0.0-20210911075715-681adbf594b8/go.mod h1:HKlIX3XHQyzLZPlr7++PzdhaXEj94dEiJgZDTsxEqUI=\ngithub.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/sftp v1.13.1/go.mod h1:3HaPG6Dq1ILlpPZRO0HVMrsydcdLt6HRDccSgb87qRg=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/posener/complete v1.1.1/go.mod h1:em0nMJCgc9GFtwrmVmEMR/ZL6WyhyjMBndrE9hABlRI=\ngithub.com/posener/complete v1.2.3/go.mod h1:WZIdtGGp+qx0sLrYKtIRAruyNpv6hFCicSgv7Sy7s/s=\ngithub.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=\ngithub.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=\ngithub.com/prometheus/client_golang v1.4.0/go.mod h1:e9GMxYsXl05ICDXkRhurwBS4Q3OK1iX/F2sw+iXX5zU=\ngithub.com/prometheus/client_golang v1.7.1/go.mod h1:PY5Wy2awLA44sXw4AOSfFBetzPP4j5+D6mVACh+pe2M=\ngithub.com/prometheus/client_golang v1.11.1/go.mod h1:Z6t4BnS23TR94PD6BsDNk8yVqroYurpAkEiz0P2BEV0=\ngithub.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=\ngithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/client_model v0.2.0/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=\ngithub.com/prometheus/common v0.9.1/go.mod h1:yhUN8i9wzaXS3w1O07YhxHEBxD+W35wd8bs7vj7HSQ4=\ngithub.com/prometheus/common v0.10.0/go.mod h1:Tlit/dnDKsSWFlCLTWaA1cyBgKHSMdTB80sz/V91rCo=\ngithub.com/prometheus/common v0.26.0/go.mod h1:M7rCNAaPfAosfx8veZJCuw84e35h3Cfd9VFqTh1DIvc=\ngithub.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=\ngithub.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=\ngithub.com/prometheus/procfs v0.0.8/go.mod h1:7Qr8sr6344vo1JqZ6HhLceV9o3AJ1Ff+GxbHq6oeK9A=\ngithub.com/prometheus/procfs v0.1.3/go.mod h1:lV6e/gmhEcM9IjHGsFOCxxuZ+z1YqCvr4OA4YeYWdaU=\ngithub.com/prometheus/procfs v0.6.0/go.mod h1:cz+aTbrPOrUb4q7XlbU9ygM+/jj0fzG6c1xBZuNvfVA=\ngithub.com/remyoudompheng/bigfft v0.0.0-20200410134404-eec4a21b6bb0 h1:OdAsTTz6OkFY5QxjkYwrChwuRruF69c169dPK26NUlk=\ngithub.com/remyoudompheng/bigfft v0.0.0-20200410134404-eec4a21b6bb0/go.mod h1:qqbHyh8v60DhA7CoWK5oRCqLrMHRGoxYCSS9EjAz6Eo=\ngithub.com/rogpeppe/fastuuid v1.2.0/go.mod h1:jVj6XXZzXRy/MSR5jhDC/2q6DgLz+nrA6LYCDYWNEvQ=\ngithub.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\ngithub.com/rogpeppe/go-internal v1.6.1 h1:/FiVV8dS/e+YqF2JvO3yXRFbBLTIuSDkuC7aBOAvL+k=\ngithub.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=\ngithub.com/sagikazarmark/crypt v0.6.0/go.mod h1:U8+INwJo3nBv1m6A/8OBXAq7Jnpspk5AxSgDyEQcea8=\ngithub.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529/go.mod h1:DxrIzT+xaE7yg65j358z/aeFdxmN0P9QXhEzd20vsDc=\ngithub.com/shopspring/decimal v0.0.0-20180709203117-cd690d0c9e24/go.mod h1:M+9NzErvs504Cn4c5DxATwIqPbtswREoFCre64PpcG4=\ngithub.com/shopspring/decimal v1.2.0/go.mod h1:DKyhrW/HYNuLGql+MJL6WCR6knT2jwCFRcu2hWCYk4o=\ngithub.com/shopspring/decimal v1.3.1 h1:2Usl1nmF/WZucqkFZhnfFYxxxu8LG21F6nPQBE5gKV8=\ngithub.com/shopspring/decimal v1.3.1/go.mod h1:DKyhrW/HYNuLGql+MJL6WCR6knT2jwCFRcu2hWCYk4o=\ngithub.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=\ngithub.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=\ngithub.com/sirupsen/logrus v1.6.0/go.mod h1:7uNnSEd1DgxDLC74fIahvMZmmYsHGZGEOFrfsX/uA88=\ngithub.com/spaolacci/murmur3 v0.0.0-20180118202830-f09979ecbc72/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=\ngithub.com/spf13/afero v1.8.2/go.mod h1:CtAatgMJh6bJEIs48Ay/FOnkljP3WeGUG0MC1RfAqwo=\ngithub.com/spf13/afero v1.9.2 h1:j49Hj62F0n+DaZ1dDCvhABaPNSGNkt32oRFxI33IEMw=\ngithub.com/spf13/afero v1.9.2/go.mod h1:iUV7ddyEEZPO5gA3zD4fJt6iStLlL+Lg4m2cihcDf8Y=\ngithub.com/spf13/cast v1.3.1/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=\ngithub.com/spf13/cast v1.5.0 h1:rj3WzYc11XZaIZMPKmwP96zkFEnnAmV8s6XbB2aY32w=\ngithub.com/spf13/cast v1.5.0/go.mod h1:SpXXQ5YoyJw6s3/6cMTQuxvgRl3PCJiyaX9p6b155UU=\ngithub.com/spf13/cobra v1.5.0 h1:X+jTBEBqF0bHN+9cSMgmfuvv2VHJ9ezmFNf9Y/XstYU=\ngithub.com/spf13/cobra v1.5.0/go.mod h1:dWXEIy2H428czQCjInthrTRUg7yKbok+2Qi/yBIJoUM=\ngithub.com/spf13/jwalterweatherman v1.1.0 h1:ue6voC5bR5F8YxI5S67j9i582FU4Qvo2bmqnqMYADFk=\ngithub.com/spf13/jwalterweatherman v1.1.0/go.mod h1:aNWZUN0dPAAO/Ljvb5BEdw96iTZ0EXowPYD95IqWIGo=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/spf13/viper v1.12.0 h1:CZ7eSOd3kZoaYDLbXnmzgQI5RlciuXBMA+18HwHRfZQ=\ngithub.com/spf13/viper v1.12.0/go.mod h1:b6COn30jlNxbm/V2IqWiNWkJ+vZNiMNksliPCiuKtSI=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.5/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.0 h1:pSgiaMZlXftHpm5L7V1+rVB+AZJydKsMxsQBIJw4PKk=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/subosito/gotenv v1.3.0/go.mod h1:YzJjq/33h7nrwdY+iHMhEOEEbW0ovIz0tB6t6PwAXzs=\ngithub.com/subosito/gotenv v1.4.1 h1:jyEFiXpy21Wm81FBN71l9VoMMV8H8jG+qIK3GCpY6Qs=\ngithub.com/subosito/gotenv v1.4.1/go.mod h1:ayKnFf/c6rvx/2iiLrJUk1e6plDbT3edrFNGqEflhK0=\ngithub.com/tv42/httpunix v0.0.0-20150427012821-b75d8614f926/go.mod h1:9ESjWnEqriFuLhtthL60Sar/7RFoluCcXsuvEwTV5KM=\ngithub.com/volatiletech/inflect v0.0.1 h1:2a6FcMQyhmPZcLa+uet3VJ8gLn/9svWhJxJYwvE8KsU=\ngithub.com/volatiletech/inflect v0.0.1/go.mod h1:IBti31tG6phkHitLlr5j7shC5SOo//x0AjDzaJU1PLA=\ngithub.com/volatiletech/null/v8 v8.1.2 h1:kiTiX1PpwvuugKwfvUNX/SU/5A2KGZMXfGD0DUHdKEI=\ngithub.com/volatiletech/null/v8 v8.1.2/go.mod h1:98DbwNoKEpRrYtGjWFctievIfm4n4MxG0A6EBUcoS5g=\ngithub.com/volatiletech/randomize v0.0.1 h1:eE5yajattWqTB2/eN8df4dw+8jwAzBtbdo5sbWC4nMk=\ngithub.com/volatiletech/randomize v0.0.1/go.mod h1:GN3U0QYqfZ9FOJ67bzax1cqZ5q2xuj2mXrXBjWaRTlY=\ngithub.com/volatiletech/strmangle v0.0.1/go.mod h1:F6RA6IkB5vq0yTG4GQ0UsbbRcl3ni9P76i+JrTBKFFg=\ngithub.com/volatiletech/strmangle v0.0.5 h1:CompJPy+lAi9h+YU/IzBR4X2RDRuAuEIP+kjFdyZXcU=\ngithub.com/volatiletech/strmangle v0.0.5/go.mod h1:ycDvbDkjDvhC0NUU8w3fWwl5JEMTV56vTKXzR3GeR+0=\ngithub.com/volatiletech/strmangle v0.0.6 h1:AdOYE3B2ygRDq4rXDij/MMwq6KVK/pWAYxpC7CLrkKQ=\ngithub.com/volatiletech/strmangle v0.0.6/go.mod h1:ycDvbDkjDvhC0NUU8w3fWwl5JEMTV56vTKXzR3GeR+0=\ngithub.com/yuin/goldmark v1.1.25/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.32/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngo.etcd.io/etcd/api/v3 v3.5.4/go.mod h1:5GB2vv4A4AOn3yk7MftYGHkUfGtDHnEraIjym4dYz5A=\ngo.etcd.io/etcd/client/pkg/v3 v3.5.4/go.mod h1:IJHfcCEKxYu1Os13ZdwCwIUTUVGYTSAM3YSwc9/Ac1g=\ngo.etcd.io/etcd/client/v2 v2.305.4/go.mod h1:Ud+VUwIi9/uQHOMA+4ekToJ12lTxlv0zB/+DHwTGEbU=\ngo.etcd.io/etcd/client/v3 v3.5.4/go.mod h1:ZaRkVgBZC+L+dLCjTcF1hRXpgZXQPOvnA/Ak/gq3kiY=\ngo.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=\ngo.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=\ngo.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.3/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.4/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.5/go.mod h1:5pWMHQbX5EPX2/62yrJeAkowc+lfs/XD7Uxpq3pI6kk=\ngo.opencensus.io v0.23.0/go.mod h1:XItmlyltB5F7CS4xOC1DcqMoFqwtC6OG2xF7mCv7P7E=\ngo.opentelemetry.io/proto/otlp v0.7.0/go.mod h1:PqfVotwruBrMGOCsRd/89rSnXhoiJIqeYNgFYFoEGnI=\ngo.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=\ngo.uber.org/zap v1.17.0/go.mod h1:MXVU+bhUf/A7Xi2HNOnopQOrmycQ5Ih87HtOu4q5SSo=\ngolang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190923035154-9ee001bba392/go.mod h1:/lpIB1dKB+9EgE3H3cr1v9wB50oz8l4C4h62xy7jSTY=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200414173820-0848c9571904/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210421170649-83a5a9bb288b/go.mod h1:T9bdIzuCu7OtxOm1hfPfRQxPLYneinmdGuTeoZ9dtd4=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.0.0-20211108221036-ceb1ce70b4fa/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.0.0-20220411220226-7b82a4e95df4/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\ngolang.org/x/crypto v0.0.0-20220511200225-c6db032c6c88/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\ngolang.org/x/crypto v0.0.0-20220826181053-bd7e27e6170d h1:3qF+Z8Hkrw9sOhrFHti9TlB1Hkac1x+DNRkv0XQiFjo=\ngolang.org/x/crypto v0.0.0-20220826181053-bd7e27e6170d/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=\ngolang.org/x/exp v0.0.0-20190829153037-c13cbed26979/go.mod h1:86+5VVa7VpoJ4kLfm080zCjGlMRFzhUhsZKEZO7MGek=\ngolang.org/x/exp v0.0.0-20191030013958-a1ab85dbe136/go.mod h1:JXzH8nQsPlswgeRAPE3MuO9GYsAcnJvJ4vnMwN/5qkY=\ngolang.org/x/exp v0.0.0-20191129062945-2f5052295587/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20191227195350-da58074b4299/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200119233911-0405dc783f0a/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200207192155-f17229e696bd/go.mod h1:J/WKrq2StrnmMY6+EHIKF9dgMWnmCNThgcyBT1FY9mM=\ngolang.org/x/exp v0.0.0-20200224162631-6cc2880d07d6/go.mod h1:3jZMyOhIsHpP37uCMkUooju7aAi5cS1Q23tOzKc+0MU=\ngolang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\ngolang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190409202823-959b441ac422/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190909230951-414d861bb4ac/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20191125180803-fdd1cda4f05f/go.mod h1:5qLYkcX4OjUUV8bRuDixDT3tpyyb+LUpUlRWLxfhWrs=\ngolang.org/x/lint v0.0.0-20200130185559-910be7a94367/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20200302205851-738671d3881b/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20201208152925-83fdc39ff7b5/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20210508222113-6edffad5e616/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=\ngolang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=\ngolang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=\ngolang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.1.1-0.20191107180719-034126e5016b/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.1/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4 h1:6zppjxzCulZykYSLyVDYbneBfbaBIQPYMevg0bEwv2s=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190501004415-9ce7a6920f09/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190503192946-f4e77d36d62c/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190628185345-da137c7871d7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190724013045-ca1201d0de80/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190923162816-aa69164e4478/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20191209160850-c0dbc17a3553/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200114155413-6afb5195e5aa/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200222125558-5a598a2470a0/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200301022130-244492dfa37a/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200324143707-d3edc9973b7e/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200501053045-e0ff5e5a1de5/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200506145744-7e3656a0809f/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200513185701-a91f0712d120/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200520182314-0ba52f642ac2/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200625001655-4c5254603344/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200707034311-ab3426394381/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20201010224723-4f7140c49acb/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201031054903-ff519b6c9102/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201209123823-ac852fbbde11/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20201224014010-6772e930b67b/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210119194325-5f4716e94777/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210316092652-d523dce5a7f4/go.mod h1:RBQZq4jEuRlivfhVLdyRGr576XBO4/greRjx4P4O3yc=\ngolang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=\ngolang.org/x/net v0.0.0-20210410081132-afb366fc7cd1/go.mod h1:9tjilg8BloeKEkVJvy7fQ90B1CfIiPueXVOjqfkSzI8=\ngolang.org/x/net v0.0.0-20210503060351-7fd8e65b6420/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20211112202133-69e39bad7dc2/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20220127200216-cd36cc0744dd/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\ngolang.org/x/net v0.0.0-20220225172249-27dd8689420f/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\ngolang.org/x/net v0.0.0-20220325170049-de3da57026de/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\ngolang.org/x/net v0.0.0-20220412020605-290c469a71a5/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\ngolang.org/x/net v0.0.0-20220425223048-2871e0cb64e4/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\ngolang.org/x/net v0.0.0-20220520000938-2e3eb7b945c2/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20191202225959-858c2ad4c8b6/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20200902213428-5d25da1a8d43/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20201109201403-9fd604954f58/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20201208152858-08078c50e5b5/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210218202405-ba52d332ba99/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210220000619-9bb904979d93/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210313182246-cd4f82c27b84/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210514164344-f6687ab2804c/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210628180205-a41e5a781914/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210805134026-6f1e6394065a/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210819190943-2bc19b11175f/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20211005180243-6b3c2da341f1/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20211104180415-d3ed0bb246c8/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20220223155221-ee480838109b/go.mod h1:DAh4E804XQdzx2j+YRIaUnCqCV2RuMz24cGBJ5QYIrc=\ngolang.org/x/oauth2 v0.0.0-20220309155454-6242fa91716a/go.mod h1:DAh4E804XQdzx2j+YRIaUnCqCV2RuMz24cGBJ5QYIrc=\ngolang.org/x/oauth2 v0.0.0-20220411215720-9780585627b5/go.mod h1:DAh4E804XQdzx2j+YRIaUnCqCV2RuMz24cGBJ5QYIrc=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200317015054-43a5402ce75a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201207232520-09787c993a3a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220513210516-0976fa681c29/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20180823144017-11551d06cbcc/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190502145724-3ef323f4f1fd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190507160741-ecd444e8653b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190606165138-5da285871e9c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190624142023-c5567b49c5d0/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190726091711-fc99dfbffb4e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190922100055-0a153f010e69/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190924154521-2837fb4f24fe/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191001151750-bb3f8db39f24/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191008105621-543471e840be/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191228213918-04cbcbbfeed8/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200106162015-b016eb3dc98e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200113162924-86b910548bc1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200124204421-9fbb57f87de9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200212091648-12a6c2dcc1e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200302150141-5c8b2ff67527/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200331124033-c3d80250170d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200501052902-10377860bb8e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200511232937-7e40ca221e25/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200515095857-1151b9dac4a9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200523222454-059865788121/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200615200032-f1bc736245b1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200625212154-ddb9806d33ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200803210538-64077c9b5642/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200905004654-be1d3432aa8f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201201145000-ef89a241ccb3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210104204734-6f8348627aad/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210220050731-9a76102bfb43/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210225134936-a50acf3fe073/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210303074136-134d130e1a04/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210305230114-8fe3ee5dd75b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210315160823-c6e025ad8005/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210403161142-5e06dd20ab57/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423185535-09eb48e85fd7/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210514084401-e8d321eab015/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210603081109-ebe580a85c40/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210603125802-9665404d3644/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210616045830-e2b7044e8c71/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210616094352-59db8d763f22/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210806184541-e5e7981a1069/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210823070655-63515b42dcdf/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210908233432-aa78b53d3365/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210927094055-39ccf1dd6fa6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211007075335-d3039528d8ac/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211124211545-fe61309f8881/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211210111614-af8b64212486/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220128215802-99c3d69c2c27/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220209214540-3681064d5158/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220224120231-95c6836cb0e7/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220227234510-4e6760a101f9/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220328115105-d36c6a25d886/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220412211240-33da011f77ad/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220502124256-b6088ccd6cba/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220825204002-c680a09ffe64 h1:UiNENfZ8gDvpiWw7IpOMQ27spWmThO1RwwdQVbJahJM=\ngolang.org/x/sys v0.0.0-20220825204002-c680a09ffe64/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.5/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7 h1:olpwvP2KacW1ZWvsR7uQhoyTYvKAupfQrRGBFM352Gk=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190425150028-36563e24a262/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190506145303-2d16b83fe98c/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190606124116-d0a3d012864b/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190628153133-6cdbf07be9d0/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190816200558-6889da9d5479/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20190907020128-2ca718005c18/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20190911174233-4f2ddba30aff/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191113191852-77e3bb0ad9e7/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191115202509-3a792d9c32b2/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191125144606-a911d9008d1f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191130070609-6e064ea0cf2d/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191216173652-a0e659d51361/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20191227053925-7b8e75db28f4/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200117161641-43d50277825c/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200122220014-bf1340f18c4a/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200204074204-1cc6d1ef6c74/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200207183749-b753a1ba74fa/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200212150539-ea181f53ac56/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200224181240-023911ca70b2/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200227222343-706bc42d1f0d/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200304193943-95d2e580d8eb/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200312045724-11d5b4c81c7d/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200331025713-a30bf2db82d4/go.mod h1:Sl4aGygMT6LrqrWclx+PTx3U+LnKx/seiNR+3G19Ar8=\ngolang.org/x/tools v0.0.0-20200501065659-ab2804fb9c9d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200512131952-2bc93b1c0c88/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200515010526-7d3b6ebf133d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200618134242-20370b0cb4b2/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200729194436-6467de6f59a7/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200804011535-6c149bb5ef0d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200825202427-b303f430e36d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200904185747-39188db58858/go.mod h1:Cj7w3i3Rnn0Xh82ur9kSqwfTHTeVxaDqrfMjpcNT6bE=\ngolang.org/x/tools v0.0.0-20201110124207-079ba7bd75cd/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201124115921-2c860bdd6e78/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201201161351-ac6f37ff4c2a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201208233053-a543418bbed2/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210105154028-b0ab187a4818/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210108195828-e2f9c7f1fc8e/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=\ngolang.org/x/tools v0.1.1/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.1.2/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.1.3/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.1.4/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.1.5/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.1.12 h1:VveCTK38A2rkS8ZqFY25HIDFscX5X9OoEhJd3quQmXU=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20220411194840-2f41105eb62f/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20220517211312-f3a8303e98df/go.mod h1:K8+ghG5WaK9qNqU5K3HdILfMLy1f3aNYFI/wnl100a8=\ngolang.org/x/xerrors v0.0.0-20220609144429-65e65417b02f h1:uF6paiQQebLeSXkrTqHqz0MXhXXS1KgF41eUdBNvxK0=\ngolang.org/x/xerrors v0.0.0-20220609144429-65e65417b02f/go.mod h1:K8+ghG5WaK9qNqU5K3HdILfMLy1f3aNYFI/wnl100a8=\ngoogle.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=\ngoogle.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=\ngoogle.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.9.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.13.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.14.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.15.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.17.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.18.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.19.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.20.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.22.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.24.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.28.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.29.0/go.mod h1:Lcubydp8VUV7KeIHD9z2Bys/sm/vGKnG1UHuDBSrHWM=\ngoogle.golang.org/api v0.30.0/go.mod h1:QGmEvQ87FHZNiUVJkT14jQNYJ4ZJjdRF23ZXz5138Fc=\ngoogle.golang.org/api v0.35.0/go.mod h1:/XrVsuzM0rZmrsbjJutiuftIzeuTQcEeaYcSk/mQ1dg=\ngoogle.golang.org/api v0.36.0/go.mod h1:+z5ficQTmoYpPn8LCUNVpK5I7hwkpjbcgqA7I34qYtE=\ngoogle.golang.org/api v0.40.0/go.mod h1:fYKFpnQN0DsDSKRVRcQSDQNtqWPfM9i+zNPxepjRCQ8=\ngoogle.golang.org/api v0.41.0/go.mod h1:RkxM5lITDfTzmyKFPt+wGrCJbVfniCr2ool8kTBzRTU=\ngoogle.golang.org/api v0.43.0/go.mod h1:nQsDGjRXMo4lvh5hP0TKqF244gqhGcr/YSIykhUk/94=\ngoogle.golang.org/api v0.47.0/go.mod h1:Wbvgpq1HddcWVtzsVLyfLp8lDg6AA241LmgIL59tHXo=\ngoogle.golang.org/api v0.48.0/go.mod h1:71Pr1vy+TAZRPkPs/xlCf5SsU8WjuAWv1Pfjbtukyy4=\ngoogle.golang.org/api v0.50.0/go.mod h1:4bNT5pAuq5ji4SRZm+5QIkjny9JAyVD/3gaSihNefaw=\ngoogle.golang.org/api v0.51.0/go.mod h1:t4HdrdoNgyN5cbEfm7Lum0lcLDLiise1F8qDKX00sOU=\ngoogle.golang.org/api v0.54.0/go.mod h1:7C4bFFOvVDGXjfDTAsgGwDgAxRDeQ4X8NvUedIt6z3k=\ngoogle.golang.org/api v0.55.0/go.mod h1:38yMfeP1kfjsl8isn0tliTjIb1rJXcQi4UXlbqivdVE=\ngoogle.golang.org/api v0.56.0/go.mod h1:38yMfeP1kfjsl8isn0tliTjIb1rJXcQi4UXlbqivdVE=\ngoogle.golang.org/api v0.57.0/go.mod h1:dVPlbZyBo2/OjBpmvNdpn2GRm6rPy75jyU7bmhdrMgI=\ngoogle.golang.org/api v0.59.0/go.mod h1:sT2boj7M9YJxZzgeZqXogmhfmRWDtPzT31xkieUbuZU=\ngoogle.golang.org/api v0.61.0/go.mod h1:xQRti5UdCmoCEqFxcz93fTl338AVqDgyaDRuOZ3hg9I=\ngoogle.golang.org/api v0.63.0/go.mod h1:gs4ij2ffTRXwuzzgJl/56BdwJaA194ijkfn++9tDuPo=\ngoogle.golang.org/api v0.67.0/go.mod h1:ShHKP8E60yPsKNw/w8w+VYaj9H6buA5UqDp8dhbQZ6g=\ngoogle.golang.org/api v0.70.0/go.mod h1:Bs4ZM2HGifEvXwd50TtW70ovgJffJYw2oRCOFU/SkfA=\ngoogle.golang.org/api v0.71.0/go.mod h1:4PyU6e6JogV1f9eA4voyrTY2batOLdgZ5qZ5HOCc4j8=\ngoogle.golang.org/api v0.74.0/go.mod h1:ZpfMZOVRMywNyvJFeqL9HRWBgAuRfSjJFpe9QtRRyDs=\ngoogle.golang.org/api v0.75.0/go.mod h1:pU9QmyHLnzlpar1Mjt4IbapUCy8J+6HD6GeELN69ljA=\ngoogle.golang.org/api v0.78.0/go.mod h1:1Sg78yoMLOhlQTeF+ARBoytAcH1NNyyl390YMy6rKmw=\ngoogle.golang.org/api v0.81.0/go.mod h1:FA6Mb/bZxj706H2j+j2d6mHEEaHBmbbWnkfvmorOCko=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.6.1/go.mod h1:i06prIuMbXzDqacNJfV5OdTW448YApPu5ww/cMBSeb0=\ngoogle.golang.org/appengine v1.6.5/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.6/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.7/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190801165951-fa694d86fc64/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190911173649-1774047e7e51/go.mod h1:IbNlFCBrqXvoKpeg0TB2l7cyZUmoaFKYIwrEpbDKLA8=\ngoogle.golang.org/genproto v0.0.0-20191108220845-16a3f7862a1a/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191115194625-c23dd37a84c9/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191216164720-4f79533eabd1/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191230161307-f3c370f40bfb/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200115191322-ca5a22157cba/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200122232147-0452cf42e150/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200204135345-fa8e72b47b90/go.mod h1:GmwEX6Z4W5gMy59cAlVYjN9JhxgbQH6Gn+gFDQe2lzA=\ngoogle.golang.org/genproto v0.0.0-20200212174721-66ed5ce911ce/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200224152610-e50cd9704f63/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200228133532-8c2c7df3a383/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200305110556-506484158171/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200312145019-da6875a35672/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200331122359-1ee6d9798940/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200430143042-b979b6f78d84/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200511104702-f5ebc3bea380/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200513103714-09dca8ec2884/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200515170657-fc4c6c6a6587/go.mod h1:YsZOwe1myG/8QRHRsmBRE1LrgQY60beZKjly0O1fX9U=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20200618031413-b414f8b61790/go.mod h1:jDfRM7FcilCzHH/e9qn6dsT145K34l5v+OpcnNgKAAA=\ngoogle.golang.org/genproto v0.0.0-20200729003335-053ba62fc06f/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200804131852-c06518451d9c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200825200019-8632dd797987/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200904004341-0bd0a958aa1d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201109203340-2640f1f9cdfb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201201144952-b05cb90ed32e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201210142538-e3217bee35cc/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201214200347-8c77b98c765d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210108203827-ffc7fda8c3d7/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210222152913-aa3ee6e6a81c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210226172003-ab064af71705/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210303154014-9728d6b83eeb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210310155132-4ce2db91004e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210319143718-93e7006c17a6/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210402141018-6c239bbf2bb1/go.mod h1:9lPAdzaEmUacj36I+k7YKbEc5CXzPIeORRgDAUOu28A=\ngoogle.golang.org/genproto v0.0.0-20210513213006-bf773b8c8384/go.mod h1:P3QM42oQyzQSnHPnZ/vqoCdDmzH28fzWByN9asMeM8A=\ngoogle.golang.org/genproto v0.0.0-20210602131652-f16073e35f0c/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=\ngoogle.golang.org/genproto v0.0.0-20210604141403-392c879c8b08/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=\ngoogle.golang.org/genproto v0.0.0-20210608205507-b6d2f5bf0d7d/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=\ngoogle.golang.org/genproto v0.0.0-20210624195500-8bfb893ecb84/go.mod h1:SzzZ/N+nwJDaO1kznhnlzqS8ocJICar6hYhVyhi++24=\ngoogle.golang.org/genproto v0.0.0-20210713002101-d411969a0d9a/go.mod h1:AxrInvYm1dci+enl5hChSFPOmmUF1+uAa/UsgNRWd7k=\ngoogle.golang.org/genproto v0.0.0-20210716133855-ce7ef5c701ea/go.mod h1:AxrInvYm1dci+enl5hChSFPOmmUF1+uAa/UsgNRWd7k=\ngoogle.golang.org/genproto v0.0.0-20210728212813-7823e685a01f/go.mod h1:ob2IJxKrgPT52GcgX759i1sleT07tiKowYBGbczaW48=\ngoogle.golang.org/genproto v0.0.0-20210805201207-89edb61ffb67/go.mod h1:ob2IJxKrgPT52GcgX759i1sleT07tiKowYBGbczaW48=\ngoogle.golang.org/genproto v0.0.0-20210813162853-db860fec028c/go.mod h1:cFeNkxwySK631ADgubI+/XFU/xp8FD5KIVV4rj8UC5w=\ngoogle.golang.org/genproto v0.0.0-20210821163610-241b8fcbd6c8/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=\ngoogle.golang.org/genproto v0.0.0-20210828152312-66f60bf46e71/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=\ngoogle.golang.org/genproto v0.0.0-20210831024726-fe130286e0e2/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=\ngoogle.golang.org/genproto v0.0.0-20210903162649-d08c68adba83/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=\ngoogle.golang.org/genproto v0.0.0-20210909211513-a8c4777a87af/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=\ngoogle.golang.org/genproto v0.0.0-20210924002016-3dee208752a0/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\ngoogle.golang.org/genproto v0.0.0-20211008145708-270636b82663/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\ngoogle.golang.org/genproto v0.0.0-20211028162531-8db9c33dc351/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\ngoogle.golang.org/genproto v0.0.0-20211118181313-81c1377c94b1/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\ngoogle.golang.org/genproto v0.0.0-20211206160659-862468c7d6e0/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\ngoogle.golang.org/genproto v0.0.0-20211208223120-3a66f561d7aa/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\ngoogle.golang.org/genproto v0.0.0-20211221195035-429b39de9b1c/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\ngoogle.golang.org/genproto v0.0.0-20220126215142-9970aeb2e350/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\ngoogle.golang.org/genproto v0.0.0-20220207164111-0872dc986b00/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=\ngoogle.golang.org/genproto v0.0.0-20220218161850-94dd64e39d7c/go.mod h1:kGP+zUP2Ddo0ayMi4YuN7C3WZyJvGLZRh8Z5wnAqvEI=\ngoogle.golang.org/genproto v0.0.0-20220222213610-43724f9ea8cf/go.mod h1:kGP+zUP2Ddo0ayMi4YuN7C3WZyJvGLZRh8Z5wnAqvEI=\ngoogle.golang.org/genproto v0.0.0-20220304144024-325a89244dc8/go.mod h1:kGP+zUP2Ddo0ayMi4YuN7C3WZyJvGLZRh8Z5wnAqvEI=\ngoogle.golang.org/genproto v0.0.0-20220310185008-1973136f34c6/go.mod h1:kGP+zUP2Ddo0ayMi4YuN7C3WZyJvGLZRh8Z5wnAqvEI=\ngoogle.golang.org/genproto v0.0.0-20220324131243-acbaeb5b85eb/go.mod h1:hAL49I2IFola2sVEjAn7MEwsja0xp51I0tlGAf9hz4E=\ngoogle.golang.org/genproto v0.0.0-20220407144326-9054f6ed7bac/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=\ngoogle.golang.org/genproto v0.0.0-20220413183235-5e96e2839df9/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=\ngoogle.golang.org/genproto v0.0.0-20220414192740-2d67ff6cf2b4/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=\ngoogle.golang.org/genproto v0.0.0-20220421151946-72621c1f0bd3/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=\ngoogle.golang.org/genproto v0.0.0-20220429170224-98d788798c3e/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=\ngoogle.golang.org/genproto v0.0.0-20220505152158-f39f71e6c8f3/go.mod h1:RAyBrSAP7Fh3Nc84ghnVLDPuV51xc9agzmm4Ph6i0Q4=\ngoogle.golang.org/genproto v0.0.0-20220519153652-3a47de7e79bd/go.mod h1:RAyBrSAP7Fh3Nc84ghnVLDPuV51xc9agzmm4Ph6i0Q4=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=\ngoogle.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.1/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.28.0/go.mod h1:rpkK4SK4GF4Ach/+MFLZUBavHOvF2JJB5uozKKal+60=\ngoogle.golang.org/grpc v1.29.1/go.mod h1:itym6AZVZYACWQqET3MqgPpjcuV5QH3BxFS3IjizoKk=\ngoogle.golang.org/grpc v1.30.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.31.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.31.1/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.33.1/go.mod h1:fr5YgcSWrqhRRxogOsw7RzIpsmvOZ6IcH4kBYTpR3n0=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.34.0/go.mod h1:WotjhfgOW/POjDeRt8vscBtXq+2VjORFy659qA51WJ8=\ngoogle.golang.org/grpc v1.35.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.36.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.36.1/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.37.0/go.mod h1:NREThFqKR1f3iQ6oBuvc5LadQuXVGo9rkm5ZGrQdJfM=\ngoogle.golang.org/grpc v1.37.1/go.mod h1:NREThFqKR1f3iQ6oBuvc5LadQuXVGo9rkm5ZGrQdJfM=\ngoogle.golang.org/grpc v1.38.0/go.mod h1:NREThFqKR1f3iQ6oBuvc5LadQuXVGo9rkm5ZGrQdJfM=\ngoogle.golang.org/grpc v1.39.0/go.mod h1:PImNr+rS9TWYb2O4/emRugxiyHZ5JyHW5F+RPnDzfrE=\ngoogle.golang.org/grpc v1.39.1/go.mod h1:PImNr+rS9TWYb2O4/emRugxiyHZ5JyHW5F+RPnDzfrE=\ngoogle.golang.org/grpc v1.40.0/go.mod h1:ogyxbiOoUXAkP+4+xa6PZSE9DZgIHtSpzjDTB9KAK34=\ngoogle.golang.org/grpc v1.40.1/go.mod h1:ogyxbiOoUXAkP+4+xa6PZSE9DZgIHtSpzjDTB9KAK34=\ngoogle.golang.org/grpc v1.44.0/go.mod h1:k+4IHHFw41K8+bbowsex27ge2rCb65oeWqe4jJ590SU=\ngoogle.golang.org/grpc v1.45.0/go.mod h1:lN7owxKUQEqMfSyQikvvk5tf/6zMPsrK+ONuO11+0rQ=\ngoogle.golang.org/grpc v1.46.0/go.mod h1:vN9eftEi1UMyUsIF80+uQXhHjbXYbm0uXoFCACuMGWk=\ngoogle.golang.org/grpc v1.46.2/go.mod h1:vN9eftEi1UMyUsIF80+uQXhHjbXYbm0uXoFCACuMGWk=\ngoogle.golang.org/grpc/cmd/protoc-gen-go-grpc v1.1.0/go.mod h1:6Kw0yEErY5E/yWrBtf03jp27GLLJujG4z/JK95pnjjw=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.24.0/go.mod h1:r/3tXBNzIEhYS9I1OUVjXDlt8tc493IdKGjtUeSXeh4=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.27.1/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngoogle.golang.org/protobuf v1.28.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=\ngopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15 h1:YR8cESwS4TdDjEe65xsg0ogRM/Nc3DYOhEAlW+xobZo=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/inf.v0 v0.9.1/go.mod h1:cWUDdTG/fYaXco+Dcufb5Vnc6Gp2YChqWtbxRZE0mXw=\ngopkg.in/ini.v1 v1.66.4/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/ini.v1 v1.67.0 h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=\ngopkg.in/ini.v1 v1.67.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.3/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.5/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190418001031-e561f6794a2a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=\nhonnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nhonnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nlukechampine.com/uint128 v1.1.1/go.mod h1:c4eWIwlEGaxC/+H1VguhU4PHXNWDCDMUlWdIWl2j1gk=\nlukechampine.com/uint128 v1.2.0 h1:mBi/5l91vocEN8otkC5bDLhi2KdCticRiwbdB0O+rjI=\nlukechampine.com/uint128 v1.2.0/go.mod h1:c4eWIwlEGaxC/+H1VguhU4PHXNWDCDMUlWdIWl2j1gk=\nmodernc.org/cc/v3 v3.36.0/go.mod h1:NFUHyPn4ekoC/JHeZFfZurN6ixxawE1BnVonP/oahEI=\nmodernc.org/cc/v3 v3.36.2/go.mod h1:NFUHyPn4ekoC/JHeZFfZurN6ixxawE1BnVonP/oahEI=\nmodernc.org/cc/v3 v3.36.3 h1:uISP3F66UlixxWEcKuIWERa4TwrZENHSL8tWxZz8bHg=\nmodernc.org/cc/v3 v3.36.3/go.mod h1:NFUHyPn4ekoC/JHeZFfZurN6ixxawE1BnVonP/oahEI=\nmodernc.org/ccgo/v3 v3.0.0-20220428102840-41399a37e894/go.mod h1:eI31LL8EwEBKPpNpA4bU1/i+sKOwOrQy8D87zWUcRZc=\nmodernc.org/ccgo/v3 v3.0.0-20220430103911-bc99d88307be/go.mod h1:bwdAnOoaIt8Ax9YdWGjxWsdkPcZyRPHqrOvJxaKAKGw=\nmodernc.org/ccgo/v3 v3.16.4/go.mod h1:tGtX0gE9Jn7hdZFeU88slbTh1UtCYKusWOoCJuvkWsQ=\nmodernc.org/ccgo/v3 v3.16.6/go.mod h1:tGtX0gE9Jn7hdZFeU88slbTh1UtCYKusWOoCJuvkWsQ=\nmodernc.org/ccgo/v3 v3.16.8/go.mod h1:zNjwkizS+fIFDrDjIAgBSCLkWbJuHF+ar3QRn+Z9aws=\nmodernc.org/ccgo/v3 v3.16.9 h1:AXquSwg7GuMk11pIdw7fmO1Y/ybgazVkMhsZWCV0mHM=\nmodernc.org/ccgo/v3 v3.16.9/go.mod h1:zNMzC9A9xeNUepy6KuZBbugn3c0Mc9TeiJO4lgvkJDo=\nmodernc.org/ccorpus v1.11.6 h1:J16RXiiqiCgua6+ZvQot4yUuUy8zxgqbqEEUuGPlISk=\nmodernc.org/ccorpus v1.11.6/go.mod h1:2gEUTrWqdpH2pXsmTM1ZkjeSrUWDpjMu2T6m29L/ErQ=\nmodernc.org/httpfs v1.0.6 h1:AAgIpFZRXuYnkjftxTAZwMIiwEqAfk8aVB2/oA6nAeM=\nmodernc.org/httpfs v1.0.6/go.mod h1:7dosgurJGp0sPaRanU53W4xZYKh14wfzX420oZADeHM=\nmodernc.org/libc v0.0.0-20220428101251-2d5f3daf273b/go.mod h1:p7Mg4+koNjc8jkqwcoFBJx7tXkpj00G77X7A72jXPXA=\nmodernc.org/libc v1.16.0/go.mod h1:N4LD6DBE9cf+Dzf9buBlzVJndKr/iJHG97vGLHYnb5A=\nmodernc.org/libc v1.16.1/go.mod h1:JjJE0eu4yeK7tab2n4S1w8tlWd9MxXLRzheaRnAKymU=\nmodernc.org/libc v1.16.17/go.mod h1:hYIV5VZczAmGZAnG15Vdngn5HSF5cSkbvfz2B7GRuVU=\nmodernc.org/libc v1.16.19/go.mod h1:p7Mg4+koNjc8jkqwcoFBJx7tXkpj00G77X7A72jXPXA=\nmodernc.org/libc v1.17.0/go.mod h1:XsgLldpP4aWlPlsjqKRdHPqCxCjISdHfM/yeWC5GyW0=\nmodernc.org/libc v1.17.1 h1:Q8/Cpi36V/QBfuQaFVeisEBs3WqoGAJprZzmf7TfEYI=\nmodernc.org/libc v1.17.1/go.mod h1:FZ23b+8LjxZs7XtFMbSzL/EhPxNbfZbErxEHc7cbD9s=\nmodernc.org/mathutil v1.2.2/go.mod h1:mZW8CKdRPY1v87qxC/wUdX5O1qDzXMP5TH3wjfpga6E=\nmodernc.org/mathutil v1.4.1/go.mod h1:mZW8CKdRPY1v87qxC/wUdX5O1qDzXMP5TH3wjfpga6E=\nmodernc.org/mathutil v1.5.0 h1:rV0Ko/6SfM+8G+yKiyI830l3Wuz1zRutdslNoQ0kfiQ=\nmodernc.org/mathutil v1.5.0/go.mod h1:mZW8CKdRPY1v87qxC/wUdX5O1qDzXMP5TH3wjfpga6E=\nmodernc.org/memory v1.1.1/go.mod h1:/0wo5ibyrQiaoUoH7f9D8dnglAmILJ5/cxZlRECf+Nw=\nmodernc.org/memory v1.2.0/go.mod h1:/0wo5ibyrQiaoUoH7f9D8dnglAmILJ5/cxZlRECf+Nw=\nmodernc.org/memory v1.2.1 h1:dkRh86wgmq/bJu2cAS2oqBCz/KsMZU7TUM4CibQ7eBs=\nmodernc.org/memory v1.2.1/go.mod h1:PkUhL0Mugw21sHPeskwZW4D6VscE/GQJOnIpCnW6pSU=\nmodernc.org/opt v0.1.1/go.mod h1:WdSiB5evDcignE70guQKxYUl14mgWtbClRi5wmkkTX0=\nmodernc.org/opt v0.1.3 h1:3XOZf2yznlhC+ibLltsDGzABUGVx8J6pnFMS3E4dcq4=\nmodernc.org/opt v0.1.3/go.mod h1:WdSiB5evDcignE70guQKxYUl14mgWtbClRi5wmkkTX0=\nmodernc.org/sqlite v1.18.1 h1:ko32eKt3jf7eqIkCgPAeHMBXw3riNSLhl2f3loEF7o8=\nmodernc.org/sqlite v1.18.1/go.mod h1:6ho+Gow7oX5V+OiOQ6Tr4xeqbx13UZ6t+Fw9IRUG4d4=\nmodernc.org/strutil v1.1.1/go.mod h1:DE+MQQ/hjKBZS2zNInV5hhcipt5rLPWkmpbGeW5mmdw=\nmodernc.org/strutil v1.1.3 h1:fNMm+oJklMGYfU9Ylcywl0CO5O6nTfaowNsh2wpPjzY=\nmodernc.org/strutil v1.1.3/go.mod h1:MEHNA7PdEnEwLvspRMtWTNnp2nnyvMfkimT1NKNAGbw=\nmodernc.org/tcl v1.13.1 h1:npxzTwFTZYM8ghWicVIX1cRWzj7Nd8i6AqqX2p+IYao=\nmodernc.org/tcl v1.13.1/go.mod h1:XOLfOwzhkljL4itZkK6T72ckMgvj0BDsnKNdZVUOecw=\nmodernc.org/token v1.0.0/go.mod h1:UGzOrNV1mAFSEB63lOFHIpNRUVMvYTc6yu1SMY/XTDM=\nmodernc.org/token v1.0.1 h1:A3qvTqOwexpfZZeyI0FeGPDlSWX5pjZu9hF4lU+EKWg=\nmodernc.org/token v1.0.1/go.mod h1:UGzOrNV1mAFSEB63lOFHIpNRUVMvYTc6yu1SMY/XTDM=\nmodernc.org/z v1.5.1 h1:RTNHdsrOpeoSeOF4FbzTo8gBYByaJ5xT7NgZ9ZqRiJM=\nmodernc.org/z v1.5.1/go.mod h1:eWFB510QWW5Th9YGZT81s+LwvaAs3Q2yr4sP0rmLkv8=\nrsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=\nrsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=\nrsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA=\nsigs.k8s.io/yaml v1.2.0/go.mod h1:yfXDCHCao9+ENCvLSE62v9VSji2MKu5jeNfTrofGhJc=\n"
        },
        {
          "name": "importers",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 12.2177734375,
          "content": "// Package main defines a command line interface for the sqlboiler package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n\n\t\"github.com/friendsofgo/errors\"\n\t\"github.com/spf13/cobra\"\n\t\"github.com/spf13/viper\"\n\n\t\"github.com/volatiletech/sqlboiler/v4/boilingcore\"\n\t\"github.com/volatiletech/sqlboiler/v4/drivers\"\n\t\"github.com/volatiletech/sqlboiler/v4/importers\"\n)\n\nconst sqlBoilerVersion = \"4.18.0\"\n\nvar (\n\tflagConfigFile string\n\tcmdState       *boilingcore.State\n\tcmdConfig      *boilingcore.Config\n)\n\nfunc initConfig() {\n\tif len(flagConfigFile) != 0 {\n\t\tviper.SetConfigFile(flagConfigFile)\n\t\tif err := viper.ReadInConfig(); err != nil {\n\t\t\tfmt.Println(\"Can't read config:\", err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\treturn\n\t}\n\n\tvar err error\n\tviper.SetConfigName(\"sqlboiler\")\n\n\tconfigHome := os.Getenv(\"XDG_CONFIG_HOME\")\n\thomePath := os.Getenv(\"HOME\")\n\twd, err := os.Getwd()\n\tif err != nil {\n\t\twd = \".\"\n\t}\n\n\tconfigPaths := []string{wd}\n\tif len(configHome) > 0 {\n\t\tconfigPaths = append(configPaths, filepath.Join(configHome, \"sqlboiler\"))\n\t} else {\n\t\tconfigPaths = append(configPaths, filepath.Join(homePath, \".config/sqlboiler\"))\n\t}\n\n\tfor _, p := range configPaths {\n\t\tviper.AddConfigPath(p)\n\t}\n\n\t// Ignore errors here, fallback to other validation methods.\n\t// Users can use environment variables if a config is not found.\n\t_ = viper.ReadInConfig()\n}\n\nfunc main() {\n\t// Too much happens between here and cobra's argument handling, for\n\t// something so simple just do it immediately.\n\tfor _, arg := range os.Args {\n\t\tif arg == \"--version\" {\n\t\t\tfmt.Println(\"SQLBoiler v\" + sqlBoilerVersion)\n\t\t\treturn\n\t\t}\n\t}\n\n\t// Set up the cobra root command\n\trootCmd := &cobra.Command{\n\t\tUse:   \"sqlboiler [flags] <driver>\",\n\t\tShort: \"SQL Boiler generates an ORM tailored to your database schema.\",\n\t\tLong: \"SQL Boiler generates a Go ORM from template files, tailored to your database schema.\\n\" +\n\t\t\t`Complete documentation is available at http://github.com/volatiletech/sqlboiler`,\n\t\tExample:       `sqlboiler psql`,\n\t\tPreRunE:       preRun,\n\t\tRunE:          run,\n\t\tPostRunE:      postRun,\n\t\tSilenceErrors: true,\n\t\tSilenceUsage:  true,\n\t}\n\n\tcobra.OnInitialize(initConfig)\n\n\t// Set up the cobra root command flags\n\trootCmd.PersistentFlags().StringVarP(&flagConfigFile, \"config\", \"c\", \"\", \"Filename of config file to override default lookup\")\n\trootCmd.PersistentFlags().StringP(\"output\", \"o\", \"models\", \"The name of the folder to output to\")\n\trootCmd.PersistentFlags().StringP(\"pkgname\", \"p\", \"models\", \"The name you wish to assign to your generated package\")\n\trootCmd.PersistentFlags().StringSliceP(\"templates\", \"\", nil, \"A templates directory, overrides the embedded template folders in sqlboiler\")\n\trootCmd.PersistentFlags().StringSliceP(\"tag\", \"t\", nil, \"Struct tags to be included on your models in addition to json, yaml, toml\")\n\trootCmd.PersistentFlags().StringSliceP(\"replace\", \"\", nil, \"Replace templates by directory: relpath/to_file.tpl:relpath/to_replacement.tpl\")\n\trootCmd.PersistentFlags().BoolP(\"debug\", \"d\", false, \"Debug mode prints stack traces on error\")\n\trootCmd.PersistentFlags().BoolP(\"no-context\", \"\", false, \"Disable context.Context usage in the generated code\")\n\trootCmd.PersistentFlags().BoolP(\"no-tests\", \"\", false, \"Disable generated go test files\")\n\trootCmd.PersistentFlags().BoolP(\"no-hooks\", \"\", false, \"Disable hooks feature for your models\")\n\trootCmd.PersistentFlags().BoolP(\"no-rows-affected\", \"\", false, \"Disable rows affected in the generated API\")\n\trootCmd.PersistentFlags().BoolP(\"no-auto-timestamps\", \"\", false, \"Disable automatic timestamps for created_at/updated_at\")\n\trootCmd.PersistentFlags().BoolP(\"no-driver-templates\", \"\", false, \"Disable parsing of templates defined by the database driver\")\n\trootCmd.PersistentFlags().BoolP(\"no-back-referencing\", \"\", false, \"Disable back referencing in the loaded relationship structs\")\n\trootCmd.PersistentFlags().BoolP(\"no-schema\", \"\", false, \"Disable generating a schema in the output\")\n\trootCmd.PersistentFlags().BoolP(\"always-wrap-errors\", \"\", false, \"Wrap all returned errors with stacktraces, also sql.ErrNoRows\")\n\trootCmd.PersistentFlags().BoolP(\"add-global-variants\", \"\", false, \"Enable generation for global variants\")\n\trootCmd.PersistentFlags().BoolP(\"add-panic-variants\", \"\", false, \"Enable generation for panic variants\")\n\trootCmd.PersistentFlags().BoolP(\"add-soft-deletes\", \"\", false, \"Enable soft deletion by updating deleted_at timestamp\")\n\trootCmd.PersistentFlags().BoolP(\"add-enum-types\", \"\", false, \"Enable generation of types for enums\")\n\trootCmd.PersistentFlags().BoolP(\"skip-replaced-enum-types\", \"\", true, \"Prevents the generation of unused enum types\")\n\trootCmd.PersistentFlags().StringP(\"enum-null-prefix\", \"\", \"Null\", \"Name prefix of nullable enum types\")\n\trootCmd.PersistentFlags().BoolP(\"version\", \"\", false, \"Print the version\")\n\trootCmd.PersistentFlags().BoolP(\"wipe\", \"\", false, \"Delete the output folder (rm -rf) before generation to ensure sanity\")\n\trootCmd.PersistentFlags().StringP(\"struct-tag-casing\", \"\", \"snake\", \"Decides the casing for go structure tag names. camel, title or snake (default snake)\")\n\trootCmd.PersistentFlags().StringP(\"relation-tag\", \"r\", \"-\", \"Relationship struct tag name\")\n\trootCmd.PersistentFlags().StringSliceP(\"tag-ignore\", \"\", nil, \"List of column names that should have tags values set to '-' (ignored during parsing)\")\n\trootCmd.PersistentFlags().BoolP(\"strict-verify-mod-version\", \"\", false, \"Prevent code generation, if project version of sqlboiler not match with executable\")\n\n\t// hide flags not recommended for use\n\trootCmd.PersistentFlags().MarkHidden(\"replace\")\n\n\tviper.BindPFlags(rootCmd.PersistentFlags())\n\tviper.SetEnvKeyReplacer(strings.NewReplacer(\".\", \"_\"))\n\tviper.AutomaticEnv()\n\n\tif err := rootCmd.Execute(); err != nil {\n\t\tif e, ok := err.(commandFailure); ok {\n\t\t\tfmt.Printf(\"Error: %v\\n\\n\", string(e))\n\t\t\trootCmd.Help()\n\t\t} else if !viper.GetBool(\"debug\") {\n\t\t\tfmt.Printf(\"Error: %v\\n\", err)\n\t\t} else {\n\t\t\tfmt.Printf(\"Error: %+v\\n\", err)\n\t\t}\n\n\t\tos.Exit(1)\n\t}\n}\n\ntype commandFailure string\n\nfunc (c commandFailure) Error() string {\n\treturn string(c)\n}\n\nfunc preRun(cmd *cobra.Command, args []string) error {\n\tvar err error\n\n\tif len(args) == 0 {\n\t\treturn commandFailure(\"must provide a driver name\")\n\t}\n\n\tdriverName, driverPath, err := drivers.RegisterBinaryFromCmdArg(args[0])\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"could not register driver\")\n\t}\n\n\tcmdConfig = &boilingcore.Config{\n\t\tDriverName:            driverName,\n\t\tOutFolder:             viper.GetString(\"output\"),\n\t\tPkgName:               viper.GetString(\"pkgname\"),\n\t\tDebug:                 viper.GetBool(\"debug\"),\n\t\tAddGlobal:             viper.GetBool(\"add-global-variants\"),\n\t\tAddPanic:              viper.GetBool(\"add-panic-variants\"),\n\t\tAddSoftDeletes:        viper.GetBool(\"add-soft-deletes\"),\n\t\tSkipReplacedEnumTypes: viper.GetBool(\"skip-replaced-enum-types\"),\n\t\tAddEnumTypes:          viper.GetBool(\"add-enum-types\"),\n\t\tEnumNullPrefix:        viper.GetString(\"enum-null-prefix\"),\n\t\tNoContext:             viper.GetBool(\"no-context\"),\n\t\tNoTests:               viper.GetBool(\"no-tests\"),\n\t\tNoHooks:               viper.GetBool(\"no-hooks\"),\n\t\tNoRowsAffected:        viper.GetBool(\"no-rows-affected\"),\n\t\tNoAutoTimestamps:      viper.GetBool(\"no-auto-timestamps\"),\n\t\tNoDriverTemplates:     viper.GetBool(\"no-driver-templates\"),\n\t\tNoBackReferencing:     viper.GetBool(\"no-back-referencing\"),\n\t\tAlwaysWrapErrors:      viper.GetBool(\"always-wrap-errors\"),\n\t\tWipe:                  viper.GetBool(\"wipe\"),\n\t\tStructTagCasing:       strings.ToLower(viper.GetString(\"struct-tag-casing\")), // camel | snake | title\n\t\tStructTagCases: boilingcore.StructTagCases{\n\t\t\t// make this compatible with the legacy struct-tag-casing config\n\t\t\tJson: withDefaultCase(viper.GetString(\"struct-tag-cases.json\"), viper.GetString(\"struct-tag-casing\")),\n\t\t\tYaml: withDefaultCase(viper.GetString(\"struct-tag-cases.yaml\"), viper.GetString(\"struct-tag-casing\")),\n\t\t\tToml: withDefaultCase(viper.GetString(\"struct-tag-cases.toml\"), viper.GetString(\"struct-tag-casing\")),\n\t\t\tBoil: withDefaultCase(viper.GetString(\"struct-tag-cases.boil\"), viper.GetString(\"struct-tag-casing\")),\n\t\t},\n\t\tTagIgnore:    viper.GetStringSlice(\"tag-ignore\"),\n\t\tRelationTag:  viper.GetString(\"relation-tag\"),\n\t\tTemplateDirs: viper.GetStringSlice(\"templates\"),\n\t\tTags:         viper.GetStringSlice(\"tag\"),\n\t\tReplacements: viper.GetStringSlice(\"replace\"),\n\t\tAliases:      boilingcore.ConvertAliases(viper.Get(\"aliases\")),\n\t\tTypeReplaces: boilingcore.ConvertTypeReplace(viper.Get(\"types\")),\n\t\tAutoColumns: boilingcore.AutoColumns{\n\t\t\tCreated: viper.GetString(\"auto-columns.created\"),\n\t\t\tUpdated: viper.GetString(\"auto-columns.updated\"),\n\t\t\tDeleted: viper.GetString(\"auto-columns.deleted\"),\n\t\t},\n\t\tInflections: boilingcore.Inflections{\n\t\t\tPlural:        viper.GetStringMapString(\"inflections.plural\"),\n\t\t\tPluralExact:   viper.GetStringMapString(\"inflections.plural_exact\"),\n\t\t\tSingular:      viper.GetStringMapString(\"inflections.singular\"),\n\t\t\tSingularExact: viper.GetStringMapString(\"inflections.singular_exact\"),\n\t\t\tIrregular:     viper.GetStringMapString(\"inflections.irregular\"),\n\t\t},\n\t\tForeignKeys:            boilingcore.ConvertForeignKeys(viper.Get(\"foreign_keys\")),\n\t\tStrictVerifyModVersion: viper.GetBool(\"strict-verify-mod-version\"),\n\n\t\tVersion: sqlBoilerVersion,\n\t}\n\n\tif cmdConfig.Debug {\n\t\tfmt.Fprintln(os.Stderr, \"using driver:\", driverPath)\n\t}\n\n\t// Configure the driver\n\tcmdConfig.DriverConfig = map[string]interface{}{\n\t\t\"whitelist\":                  viper.GetStringSlice(driverName + \".whitelist\"),\n\t\t\"blacklist\":                  viper.GetStringSlice(driverName + \".blacklist\"),\n\t\tdrivers.ConfigNoOutputSchema: viper.GetBool(\"no-schema\"),\n\t\t\"add-enum-types\":             cmdConfig.AddEnumTypes,\n\t\t\"enum-null-prefix\":           cmdConfig.EnumNullPrefix,\n\t\t\"foreign-keys\":               cmdConfig.ForeignKeys,\n\t}\n\n\tkeys := allKeys(driverName)\n\tfor _, key := range keys {\n\t\tif key != \"blacklist\" && key != \"whitelist\" {\n\t\t\tprefixedKey := fmt.Sprintf(\"%s.%s\", driverName, key)\n\t\t\tcmdConfig.DriverConfig[key] = viper.Get(prefixedKey)\n\t\t}\n\t}\n\n\tcmdConfig.Imports = configureImports()\n\tcmdConfig.DiscardedEnumTypes = make([]string, 0, 1)\n\n\tcmdState, err = boilingcore.New(cmdConfig)\n\treturn err\n}\n\nfunc configureImports() importers.Collection {\n\timports := importers.NewDefaultImports()\n\n\tmustMap := func(m importers.Map, err error) importers.Map {\n\t\tif err != nil {\n\t\t\tpanic(\"failed to change viper interface into importers.Map: \" + err.Error())\n\t\t}\n\n\t\treturn m\n\t}\n\n\tif viper.IsSet(\"imports.all.standard\") {\n\t\timports.All.Standard = viper.GetStringSlice(\"imports.all.standard\")\n\t}\n\tif viper.IsSet(\"imports.all.third_party\") {\n\t\timports.All.ThirdParty = viper.GetStringSlice(\"imports.all.third_party\")\n\t}\n\tif viper.IsSet(\"imports.test.standard\") {\n\t\timports.Test.Standard = viper.GetStringSlice(\"imports.test.standard\")\n\t}\n\tif viper.IsSet(\"imports.test.third_party\") {\n\t\timports.Test.ThirdParty = viper.GetStringSlice(\"imports.test.third_party\")\n\t}\n\tif viper.IsSet(\"imports.singleton\") {\n\t\timports.Singleton = mustMap(importers.MapFromInterface(viper.Get(\"imports.singleton\")))\n\t}\n\tif viper.IsSet(\"imports.test_singleton\") {\n\t\timports.TestSingleton = mustMap(importers.MapFromInterface(viper.Get(\"imports.test_singleton\")))\n\t}\n\tif viper.IsSet(\"imports.based_on_type\") {\n\t\timports.BasedOnType = mustMap(importers.MapFromInterface(viper.Get(\"imports.based_on_type\")))\n\t}\n\n\treturn imports\n}\n\nfunc run(cmd *cobra.Command, args []string) error {\n\treturn cmdState.Run()\n}\n\nfunc postRun(cmd *cobra.Command, args []string) error {\n\treturn cmdState.Cleanup()\n}\n\nfunc allKeys(prefix string) []string {\n\tkeys := make(map[string]bool)\n\n\tprefix += \".\"\n\n\tfor _, e := range os.Environ() {\n\t\tsplits := strings.SplitN(e, \"=\", 2)\n\t\tkey := strings.ReplaceAll(strings.ToLower(splits[0]), \"_\", \".\")\n\n\t\tif strings.HasPrefix(key, prefix) {\n\t\t\tkeys[strings.ReplaceAll(key, prefix, \"\")] = true\n\t\t}\n\t}\n\n\tfor _, key := range viper.AllKeys() {\n\t\tif strings.HasPrefix(key, prefix) {\n\t\t\tkeys[strings.ReplaceAll(key, prefix, \"\")] = true\n\t\t}\n\t}\n\n\tkeySlice := make([]string, 0, len(keys))\n\tfor k := range keys {\n\t\tkeySlice = append(keySlice, k)\n\t}\n\treturn keySlice\n}\n\nfunc withDefaultCase(configCase string, defaultCases ...string) boilingcore.TagCase {\n\tif len(configCase) > 0 {\n\t\treturn boilingcore.TagCase(strings.ToLower(configCase))\n\t}\n\n\tfor _, c := range defaultCases {\n\t\tif len(c) > 0 {\n\t\t\treturn boilingcore.TagCase(strings.ToLower(c))\n\t\t}\n\t}\n\n\treturn boilingcore.TagCaseSnake\n}\n"
        },
        {
          "name": "queries",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "testdata",
          "type": "tree",
          "content": null
        },
        {
          "name": "types",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}