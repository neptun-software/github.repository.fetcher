{
  "metadata": {
    "timestamp": 1736567731746,
    "page": 318,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "goadesign/goa",
      "stars": 5741,
      "defaultBranch": "v3",
      "files": [
        {
          "name": ".deepsource.toml",
          "type": "blob",
          "size": 0.1416015625,
          "content": "version = 1\n[[analyzers]]\nname = \"test-coverage\"\nenabled = true\n[[analyzers]]\nname = \"go\"\n\n  [analyzers.meta]\n  import_root = \"goa.design/goa/v3\""
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2001953125,
          "content": "# Golang tools artifacts\n**/*.test\ncoverage.out\ntest-report.json\n\n# Executables and test outputs\ncmd/goa/goa\n\n# Editor / IDEs cruft\n.idea/\n*.iml\n.vscode/\n*~\n*.orig\n*.swp\n\n# DeepSource cruft\ncover.out\nbin/\n"
        },
        {
          "name": ".golangci.yml",
          "type": "blob",
          "size": 0.0341796875,
          "content": "linters:\n  enable:\n    - errorlint\n"
        },
        {
          "name": ".golint_exclude",
          "type": "blob",
          "size": 0.33984375,
          "content": "dsl[/\\]http.go\nexpr[/\\]http_response.go\ncodegen[/\\]service[/\\]testing[/\\].*\nhttp[/\\]codegen[/\\]codegen[/\\].openapi[/\\]v3[/\\]ref.go\nhttp[/\\]codegen[/\\]testing[/\\].*\nhttp[/\\]middleware[/\\]trace.go\nhttp[/\\]middleware[/\\]xray[/\\]middleware.go\nhttp[/\\]middleware[/\\]xray[/\\]wrap_doer.go\nhttp[/\\]middleware[/\\]xray[/\\]wrap_doer_test.go\ngrpc[/\\]pb[/\\].*\n\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.705078125,
          "content": "language: go\ndist: xenial\ngo:\n- 1.14.x\nif: branch = v2\ninstall:\n- export PATH=${PATH}:${HOME}/gopath/bin\nscript:\n- export PATH=${PATH}:${HOME}/bin\n- cd ../../.. && mkdir goa.design && cp -r github.com/goadesign/goa goa.design/goa\n- cd goa.design/goa\n# https://graysonkoonce.com/getting-the-current-branch-name-during-a-pull-request-in-travis-ci/\n- export GOA_BRANCH=$(if [ \"$TRAVIS_PULL_REQUEST\" == \"false\" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi) && echo $GOA_BRANCH\n- make travis\nnotifications:\n  slack:\n    secure: bMYXaoSEGoNdqR0t1VnMAv/4V9PSOhEWyekdJM7p9WmKjJi2yKy0k77uRmwf+5Mrz5GLs3CkZnDha/8cSFld3KEN9SC6QYmIBF/1Pd/5mKHFQOI81i7sTlhrdMv897+6sofEtbBNq1jffhVGVttbMrMWwCTNZu0NrCGBVsDmb44=\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.13671875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at info@goa.design. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.8447265625,
          "content": "# Contributing to Goa\n\nThank you for your interest in contributing to the Goa project! We appreciate\ncontributions via submitting Github issues and/or pull requests.\n\nBelow are some guidelines to follow when contributing to this project:\n\n* Before opening an issue in Github, check [open issues](https://github.com/goadesign/goa/issues)\n  and [pull requests](https://github.com/goadesign/goa/pulls) for existing\n  issues and fixes.\n* If your issue has not been addressed, [open a Github issue](https://github.com/goadesign/goa/issues/new)\n  and follow the checklist presented in the issue description section. A simple\n  Goa design that reproduces your issue helps immensely.\n* If you know how to fix your bug, we highly encourage PR contributions. See\n  [How Can I Get Started section](#how-can-i-get-started?) on how to submit a PR.\n* For feature requests and submitting major changes, [open an issue](https://github.com/goadesign/goa/issues/new)\n  or hop on to our slack channel (see https://goa.design to join) to discuss\n  the feature first.\n* Keep conversations friendly! Constructive criticism goes a long way.\n* Have fun contributing!\n\n## How Can I Get Started?\n\n1) Visit https://goa.design for more information on Goa and the getting started\nguide.\n2) To get your hands dirty, fork the Goa repo and issue PRs from the fork.\n**PRO Tip:** Add a [git remote](https://git-scm.com/docs/git-remote.html) to\nyour forked repo in the Goa source code (in $GOPATH/src/goa.design/goa when\ninstalled using `go get`) to avoid messing with import paths while testing\nyour fix.\n3) [Open issues](https://github.com/goadesign/goa/issues) labeled as `good first\nissue` are ideal to understand the source code and make minor contributions.\nIssues labeled `help wanted` are bugs/features that are not currently being\nworked on and contributing to them are most welcome.\n4) Link the issue that the PR intends to solve in the PR description. If an issue\ndoes not exist, adding a description in the PR that describes the issue and the\nfix is recommended.\n5) Making changes to Goa can sometimes break [goa plugins](https://github.com/goadesign/plugins)\nor change the generated [goa examples](https://github.com/goadesign/examples).\nRun `make test-plugins` and `make test-examples` to see the failures. To fix\nsuch failures, create a branch in [plugins](https://github.com/goadesign/plugins)\nand/or [examples](https://github.com/goadesign/examples) repo with the same\nname as the branch in [goa](https://github.com/goadesign/goa) repo and fix the\nfailures. Re-run the above make commands to verify your fix. Don't forget to\nissue PRs for the plugin and example changes if any! Linking the plugins and\nexamples PR to the main Goa PR makes it easier to understand the changes.\n6) Ensure the CI build passes when you issue a PR to Goa.\n7) Join our slack channel (see https://goa.design to join) and participate in the\nconversations.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0751953125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Raphael Simon and goa Contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.9443359375,
          "content": "#! /usr/bin/make\n#\n# Makefile for Goa v3\n#\n# Targets:\n# - \"depend\" retrieves the Go packages needed to run the linter and tests\n# - \"lint\" runs the linter\n# - \"test\" runs the tests\n# - \"release\" creates a new release commit, tags the commit and pushes the tag to GitHub.\n#   \"release\" also updates the examples and plugins repo and pushes the updates to GitHub.\n#\n# Meta targets:\n# - \"all\" is the default target, it runs \"lint\" and \"test\"\n#\nMAJOR=3\nMINOR=19\nBUILD=1\n\nGOOS=$(shell go env GOOS)\nGOARCH=$(shell go env GOARCH)\nGO_FILES=$(shell find . -type f -name '*.go')\nGOPATH=$(shell go env GOPATH)\n\n# Only list test and build dependencies\n# Standard dependencies are installed via go get\nDEPEND=\\\n\tgoogle.golang.org/protobuf/cmd/protoc-gen-go@latest \\\n\tgoogle.golang.org/grpc/cmd/protoc-gen-go-grpc@latest \n\nall: lint test\n\nci: depend all\n\n# Install protoc\nPROTOC_VERSION=25.0\nUNZIP=unzip\nifeq ($(GOOS),linux)\n\tPROTOC=protoc-$(PROTOC_VERSION)-linux-x86_64\n\tPROTOC_EXEC=$(PROTOC)/bin/protoc\nendif\nifeq ($(GOOS),darwin)\n\tifeq ($(GOARCH),arm64)\n\t\tPROTOC=protoc-$(PROTOC_VERSION)-osx-aarch_64\n\t\tPROTOC_EXEC=$(PROTOC)/bin/protoc\n\telse\n\t\tPROTOC=protoc-$(PROTOC_VERSION)-osx-x86_64\n\t\tPROTOC_EXEC=$(PROTOC)/bin/protoc\n\tendif\nendif\nifeq ($(GOOS),windows)\n\tPROTOC=protoc-$(PROTOC_VERSION)-win32\n\tPROTOC_EXEC=\"$(PROTOC)\\bin\\protoc.exe\"\n\tGOPATH:=$(subst \\,/,$(GOPATH))\nendif\n\ndepend:\n\t@echo INSTALLING DEPENDENCIES...\n\t@go mod download\n\t@for package in $(DEPEND); do go install $$package; done\n\t@curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(GOPATH)/bin latest \n\t@go mod tidy -compat=1.17\n\t@echo INSTALLING PROTOC...\n\t@mkdir $(PROTOC)\n\t@cd $(PROTOC); \\\n\tcurl -O -L https://github.com/protocolbuffers/protobuf/releases/download/v$(PROTOC_VERSION)/$(PROTOC).zip; \\\n\t$(UNZIP) $(PROTOC).zip\n\t@cp $(PROTOC_EXEC) $(GOPATH)/bin && \\\n\t\trm -rf $(PROTOC) && \\\n\t\techo \"`protoc --version`\"\n\nlint:\nifneq ($(GOOS),windows)\n\t@if [ \"`golangci-lint run ./... | grep -v \".pb.go\" | tee /dev/stderr`\" ]; then \\\n\t\techo \"^ - lint errors!\" && echo && exit 1; \\\n\tfi\nendif\n\ntest:\n\tgo test ./... --coverprofile=cover.out\n\nrelease: release-goa release-examples release-plugins\n\t@echo \"Release v$(MAJOR).$(MINOR).$(BUILD) complete\"\n\nrelease-goa:\n\t# First make sure all is clean\n\tgit diff-index --quiet HEAD\n\tcd $(GOPATH)/src/goa.design/examples && \\\n\t\tgit checkout master && \\\n\t\tgit pull origin master && \\\n\t\tgit diff-index --quiet HEAD\n\tcd $(GOPATH)/src/goa.design/plugins && \\\n\t\tgit checkout v$(MAJOR) && \\\n\t\tgit pull origin v$(MAJOR) && \\\n\t\tgit diff-index --quiet HEAD\n\tgo mod tidy \n\t# Bump version number, commit and push\n\tsed 's/Major = .*/Major = $(MAJOR)/' pkg/version.go > _tmp && mv _tmp pkg/version.go\n\tsed 's/Minor = .*/Minor = $(MINOR)/' pkg/version.go > _tmp && mv _tmp pkg/version.go\n\tsed 's/Build = .*/Build = $(BUILD)/' pkg/version.go > _tmp && mv _tmp pkg/version.go\n\tsed 's/Current Release: `v3\\..*/Current Release: `v$(MAJOR).$(MINOR).$(BUILD)`/' README.md > _tmp && mv _tmp README.md\n\tsed 's/goa\\/v3@v.*tab=doc/goa\\/v3@v$(MAJOR).$(MINOR).$(BUILD)\\/dsl?tab=doc/' README.md > _tmp && mv _tmp README.md\n\tgit add .\n\tgit commit -m \"Release v$(MAJOR).$(MINOR).$(BUILD)\"\n\tgit tag v$(MAJOR).$(MINOR).$(BUILD)\n\tcd cmd/goa && go install\n\tgit push origin v$(MAJOR)\n\tgit push origin v$(MAJOR).$(MINOR).$(BUILD)\n\nrelease-examples:\n\tcd $(GOPATH)/src/goa.design/examples && \\\n\t\tmake GOA_VERSION=v$(MAJOR).$(MINOR).$(BUILD)&& \\\n\t\tgit add . && \\\n\t\tgit commit -m \"Release v$(MAJOR).$(MINOR).$(BUILD)\" && \\\n\t\tgit tag v$(MAJOR).$(MINOR).$(BUILD) && \\\n\t\tgit push origin master && \\\n\t\tgit push origin v$(MAJOR).$(MINOR).$(BUILD)\n\nrelease-plugins:\n\tcd $(GOPATH)/src/goa.design/plugins && \\\n\t\tsed 's/goa.design\\/goa\\/v.*/goa.design\\/goa\\/v$(MAJOR) v$(MAJOR).$(MINOR).$(BUILD)/' go.mod > _tmp && mv _tmp go.mod && \\\n\t\tmake && \\\n\t\tgit add . && \\\n\t\tgit commit -m \"Release v$(MAJOR).$(MINOR).$(BUILD)\" && \\\n\t\tgit tag v$(MAJOR).$(MINOR).$(BUILD) && \\\n\t\tgit push origin v$(MAJOR) && \\\n\t\tgit push origin v$(MAJOR).$(MINOR).$(BUILD)\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 18.16015625,
          "content": "<p align=\"center\">\n  <p align=\"center\">\n    <img alt=\"Goa\" src=\"https://goa.design/img/goa-banner.png\">\n  </p>\n  <h1 align=\"center\"><b>Design First!</b></h1>\n  <p align=\"center\">\n    <a href=\"https://github.com/goadesign/goa/releases/latest\"><img alt=\"Release\" src=\"https://img.shields.io/github/release/goadesign/goa.svg?style=for-the-badge\"></a>\n    <a href=\"https://pkg.go.dev/goa.design/goa/v3@v3.19.1/dsl?tab=doc\"><img alt=\"Go Doc\" src=\"https://img.shields.io/badge/godoc-reference-blue.svg?style=for-the-badge\"></a>\n    <a href=\"https://github.com/goadesign/goa/actions/workflows/ci.yml\"><img alt=\"GitHub Action: Test\" src=\"https://img.shields.io/github/actions/workflow/status/goadesign/goa/test.yml?branch=v3&style=for-the-badge\"></a>\n    <a href=\"https://goreportcard.com/report/github.com/goadesign/goa\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/goadesign/goa?style=for-the-badge\"></a>\n    <a href=\"/LICENSE\"><img alt=\"Software License\" src=\"https://img.shields.io/badge/license-MIT-brightgreen.svg?style=for-the-badge\"></a>\n    <a href=\"https://gurubase.io/g/goa\"><img alt=\"Gurubase\" src=\"https://img.shields.io/badge/Gurubase-Ask%20Goa%20Guru-006BFF?style=for-the-badge\"></a>\n    </br>\n    <a href=\"https://gophers.slack.com/messages/goa\"><img alt=\"Slack: Goa\" src=\"https://img.shields.io/badge/Goa-gray.svg?longCache=true&logo=slack&colorB=red&style=for-the-badge\"></a>\n    <a href=\"https://invite.slack.golangbridge.org/\"><img alt=\"Slack: Sign-up\" src=\"https://img.shields.io/badge/Signup-gray.svg?longCache=true&logo=slack&colorB=red&style=for-the-badge\"></a>\n    <a href=\"https://bsky.app/profile/goadesign.bsky.social\"><img alt=\"BSky: Goa\" src=\"https://img.shields.io/badge/Bluesky-0285FF?longCache=true&logo=bluesky&logoColor=fff&style=for-the-badge\"></a>\n  </p>\n</p>\n\n<div align=\"center\">\n<table style=\"border-collapse: collapse; width: 500px;\">\n    <tr>\n        <td style=\"border: none; width: 200px;\">\n            <a href=\"https://chat.openai.com/g/g-mLuQDGyro-goa-design-wizard\">\n                <img src=\"docs/Wizard.png\" alt=\"Wizard Logo\" style=\"width: 100%; height: auto;\"/>\n            </a>\n        </td>\n        <td style=\"border: none;\">\n            <div style=\"text-align:center\">\n            <h1>Goa Design Wizard</h1>\n            </div>\n            <p>\n            Use the <a href=\"https://chat.openai.com/g/g-mLuQDGyro-goa-design-wizard\">Goa Design Wizard</a> to:\n            </p>\n            <ul>\n                <li>Create Goa designs in seconds</li>\n                <li>Review existing designs</li>\n                <li>Explore the Goa DSL</li>\n            </ul>\n            <p>\n            (requires a <a href=\"https://openai.com/blog/chatgpt-plus\">ChatGPT Plus</a> subscription)<br/><br/>\n            </p>\n        </td>\n    </tr>\n</table>\n</div>\n\n# Overview\n\nGoa takes a different approach to building services by making it possible to\ndescribe the *design* of the service API using a simple Go DSL. Goa uses the\ndescription to generate specialized service helper code, client code and\ndocumentation. Goa is extensible via plugins, for example the\n[goakit](https://github.com/goadesign/plugins/tree/v3/goakit) plugin\ngenerates code that leverage the Go kit library.\n\nThe service design describes the transport independent layer of the services in\nthe form of simple methods that accept a context and a payload and return a\nresult and an error. The design also describes how the payloads, results and\nerrors are serialized in the transport (HTTP or gRPC). For example a service\nmethod payload may be built from an HTTP request by extracting values from the\nrequest path, headers and body. This clean separation of layers makes it\npossible to expose the same service using multiple transports. It also promotes\ngood design where the service business logic concerns are expressed and\nimplemented separately from the transport logic.\n\nThe Goa DSL consists of Go functions so that it may be extended easily to avoid\nrepetition and promote standards. The design code itself can easily be shared\nacross multiple services by simply importing the corresponding Go package again\npromoting reuse and standardization across services.\n\n# Sponsors\n\n<table width=\"100%\">\n    <tr>\n        <td>\n            <img width=\"1000\" height=\"0\" />\n            <a href=\"https://zuplo.link/goa-web\">\n            <picture>\n                <source media=\"(prefers-color-scheme: dark)\" srcset=\"docs/zuplo-dark.png\">\n                <img src=\"docs/zuplo.png\" alt=\"Zuplo\" width=\"260\" align=\"right\">\n            </picture>\n            </a>\n            <h3>Zuplo: Scale, Protect, and Productize your Goa API</h3>\n            <p>\n                Our API Gateway allows you to secure your API, scale it\n                globally, generate documentation from your OpenAPI, and add\n                monetization.\n            </p>\n            <a href=\"https://zuplo.link/goa-web\">Start for Free</a>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <img width=\"1000\" height=\"0\" />\n            <a href=\"https://www.incident.io\">\n                <img src=\"docs/incidentio.png\" alt=\"incident.io\" width=\"260\" align=\"right\" />\n            </a>\n            <h3>incident.io: Bounce back stronger after every incident</h3>\n            <p>\n                Use our platform to empower your team to run incidents end-to-end. Rapidly fix and\n                learn from incidents, so you can build more resilient products.\n            </p>\n            <a href=\"https://incident.io\">Learn more</a>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <img width=\"1000\" height=\"0\" />\n            <a href=\"https://www.speakeasy.com/docs/api-frameworks/goa?utm_source=goa+repo&utm_medium=github+sponsorship\">\n                <img src=\"docs/speakeasy.png\" alt=\"Speakeasy\" width=\"260\" align=\"right\" />\n            </a>\n            <h3>Speakeasy: Enterprise DevEx for your API</h3>\n            <p>\n                Our platform makes it easy to create feature-rich production ready SDKs.\n                Speed up integrations and reduce errors by giving your API the DevEx it deserves.\n            </p>\n            <a href=\"https://www.speakeasy.com/docs/api-frameworks/goa?utm_source=goa+repo&utm_medium=github+sponsorship\">Integrate with Goa</a>\n        </td>\n    </tr>\n</table>\n\n# Code Generation\n\nThe Goa tool accepts the Go design package import path as input and produces the\ninterface as well as the glue that binds the service and client code with the\nunderlying transport. The code is specific to the API so that for example there\nis no need to cast or \"bind\" any data structure prior to using the request\npayload or response result. The design may define validations in which case the\ngenerated code takes care of validating the incoming request payload prior to\ninvoking the service method on the server, and validating the response prior to\ninvoking the client code.\n\n# Installation\n\n```bash\ngo install goa.design/goa/v3/cmd/goa@v3\n```\n\nCurrent Release: `v3.19.1`\n\n# Getting Started\n\n## 1. Design\n\nCreate a new Goa project:\n\n```bash\nmkdir -p calcsvc/design\ncd calcsvc\ngo mod init calcsvc\n```\n\nCreate the file `design.go` in the `design` directory with the following\ncontent:\n\n```go\npackage design\n\nimport . \"goa.design/goa/v3/dsl\"\n\n// API describes the global properties of the API server.\nvar _ = API(\"calc\", func() {\n        Title(\"Calculator Service\")\n        Description(\"HTTP service for multiplying numbers, a goa teaser\")\n        Server(\"calc\", func() {\n                Host(\"localhost\", func() { URI(\"http://localhost:8088\") })\n        })\n})\n\n// Service describes a service\nvar _ = Service(\"calc\", func() {\n        Description(\"The calc service performs operations on numbers\")\n        // Method describes a service method (endpoint)\n        Method(\"multiply\", func() {\n                // Payload describes the method payload\n                // Here the payload is an object that consists of two fields\n                Payload(func() {\n                        // Attribute describes an object field\n                        Attribute(\"a\", Int, \"Left operand\")\n                        Attribute(\"b\", Int, \"Right operand\")\n                        // Both attributes must be provided when invoking \"multiply\"\n                        Required(\"a\", \"b\")\n                })\n                // Result describes the method result\n                // Here the result is a simple integer value\n                Result(Int)\n                // HTTP describes the HTTP transport mapping\n                HTTP(func() {\n                        // Requests to the service consist of HTTP GET requests\n                        // The payload fields are encoded as path parameters\n                        GET(\"/multiply/{a}/{b}\")\n                        // Responses use a \"200 OK\" HTTP status\n                        // The result is encoded in the response body\n                        Response(StatusOK)\n                })\n        })\n})\n```\n\nThis file contains the design for a `calc` service which accepts HTTP GET\nrequests to `/multiply/{a}/{b}` where `{a}` and `{b}` are placeholders for integer\nvalues. The API returns the product of `a` multiplied by `b` in the HTTP response body.\n\n## 2. Implement\n\nNow that the design is done, let's run `goa` on the design package.\nIn the `calcsvc` directory run:\n\n``` bash\ngoa gen calcsvc/design\n```\n\nThis produces a `gen` directory with the following directory structure:\n\n``` text\ngen\n├── calc\n│   ├── client.go\n│   ├── endpoints.go\n│   └── service.go\n└── http\n    ├── calc\n    │   ├── client\n    │   │   ├── cli.go\n    │   │   ├── client.go\n    │   │   ├── encode_decode.go\n    │   │   ├── paths.go\n    │   │   └── types.go\n    │   └── server\n    │       ├── encode_decode.go\n    │       ├── paths.go\n    │       ├── server.go\n    │       └── types.go\n    ├── cli\n    │   └── calc\n    │       └── cli.go\n    ├── openapi.json\n    └── openapi.yaml\n\n7 directories, 15 files\n```\n\n* `calc` contains the service endpoints and interface as well as a service\n  client.\n* `http` contains the HTTP transport layer. This layer maps the service\n  endpoints to HTTP handlers server side and HTTP client methods client side.\n  The `http` directory also contains a complete\n  [OpenAPI 3.0](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md)\n  spec for the service.\n\nThe `goa` tool can also generate example implementations for both the service\nand client. These examples provide a good starting point:\n\n``` text\ngoa example calcsvc/design\n\ncalc.go\ncmd/calc-cli/http.go\ncmd/calc-cli/main.go\ncmd/calc/http.go\ncmd/calc/main.go\n```\n\nThe tool generated the `main` functions for two commands: one that runs the\nserver and one the client. The tool also generated a dummy service\nimplementation that prints a log message. Again note that the `example` command\nis intended to generate just that: an *example*, in particular it is not\nintended to be re-run each time the design changes (as opposed to the `gen`\ncommand which should be re-run each time the design changes).\n\nLet's implement our service by providing a proper implementation for the `multiply`\nmethod. Goa generated a payload struct for the `multiply` method that contains both\nfields. Goa also generated the transport layer that takes care of decoding the\nrequest so all we have to do is to perform the actual multiplication. Edit the file\n`calc.go` and change the code of the `multiply` function as follows:\n\n```go\n// Multiply returns the multiplied value of attributes a and b of p.\nfunc (s *calcsrvc) Multiply(ctx context.Context, p *calc.MultiplyPayload) (res int, err error) {\n        return p.A * p.B, nil\n}\n```\n\nThat's it! we have now a full-fledged HTTP service with a corresponding OpenAPI\nspecification and a client tool.\n\n## 3. Run\n\nNow let's compile and run the service:\n\n```bash\ncd cmd/calc\ngo build\n./calc\n[calcapi] 16:10:47 HTTP \"Multiply\" mounted on GET /multiply/{a}/{b}\n[calcapi] 16:10:47 HTTP server listening on \"localhost:8088\"\n```\n\nOpen a new console and compile the generated CLI tool:\n\n```bash\ncd calcsvc/cmd/calc-cli\ngo build\n```\n\nand run it:\n\n```bash\n./calc-cli calc multiply -a 2 -b 3\n6\n```\n\nThe tool includes contextual help:\n\n``` bash\n./calc-cli --help\n```\n\nHelp is also available on each command:\n\n``` bash\n./calc-cli calc multiply --help\n```\n\nNow let's see how robust our code is and try to use non integer values:\n\n``` bash\n./calc-cli calc multiply -a 1 -b foo\ninvalid value for b, must be INT\nrun './calccli --help' for detailed usage.\n```\n\nThe generated code validates the command line arguments against the types\ndefined in the design. The server also validates the types when decoding\nincoming requests so that your code only has to deal with the business logic.\n\nThe service now returns an integer, but most OpenAPI services expect JSON.\nLets fix that now!\n\nIn `design.go`, change `Result(Int)` so it reads like this:\n\n```go\nResult(func() {\n    Attribute(\"result\", Int)\n    Required(\"result\")\n})\n```\n\nInside of `calc.go`, replace the `func` block:\n\n```go\nfunc (s *calcsrvc) Multiply(ctx context.Context, p *calc.MultiplyPayload) (res *calc.MultiplyResult, err error) {\n\treturn &calc.MultiplyResult{Result: p.A * p.B}, nil\n}\n```\n\nFinally rebuild the app by running the build parts again:\n\n```bash\ngoa gen calcsvc/design\ncd cmd/calc\ngo build\n./calc\n```\n\nYou can now test and verify that your service is returning JSON:\n\n```bash\ncurl -X 'GET' 'http://localhost:8088/multiply/10/10' -H 'accept: application/json' | jq .\n```\n\nIf all goes well, you should see:\n\n```json\n{\n  \"result\": 100\n}\n```\n\n## 4. Document\n\nThe `http` directory contains OpenAPI 2.0 and 3.0 specifications in both YAML\nand JSON format.\n\nThe specification can easily be served from the service itself using a file\nserver. The [Files](http://godoc.org/goa.design/goa/dsl/http.go#Files) DSL\nfunction makes it possible to serve a static file. Edit the file\n`design/design.go` and add:\n\n```go\nvar _ = Service(\"openapi\", func() {\n\t// Serve the file gen/http/openapi3.json for requests sent to\n\t// /openapi.json. The HTTP file system is created below.\n\tFiles(\"/openapi.json\", \"openapi3.json\")\n})\n```\n\nRe-run `goa gen calcsvc/design` and note the new directory `gen/openapi` and\n`gen/http/openapi` which contain the implementation for a HTTP handler that\nserves the `openapi.json` file.\n\nAll we need to do is mount the handler on the service mux. Add the corresponding\nimport statement to `cmd/calc/http.go`:\n\n```go\nimport openapisvr \"calcsvc/gen/http/openapi/server\"\n```\n\nand mount the handler by adding the following line in the same file and after\nthe mux creation (e.g. one the line after the `// Configure the mux.` comment):\n\n```go\nsvr := openapisvr.New(nil, mux, dec, enc, nil, nil, http.Dir(\"../../gen/http\"))\nopenapisvr.Mount(mux, svr)\n```\n\nThat's it! we now have a self-documenting service. Stop the running service\nwith CTRL-C. Rebuild and re-run it then make requests to the newly added\n`/openapi.json` endpoint:\n\n``` bash\n^C[calcapi] 16:17:37 exiting (interrupt)\n[calcapi] 16:17:37 shutting down HTTP server at \"localhost:8088\"\n[calcapi] 16:17:37 exited\ngo build\n./calc\n```\n\nIn a different console:\n\n``` bash\ncurl localhost:8088/openapi.json\n{\"openapi\":\"3.0.3\",\"info\":{\"title\":\"Calculator Service\",\"description\":...\n```\n\n# Resources\n\n## Docs\n\nThe [goa.design](https://goa.design) website provides a high level overview of\nGoa and the DSL.\n\nIn particular the page\n[Implementing a Goa Service](https://goa.design/implement/implementing/)\nexplains how to leverage the generated code to implement an HTTP or gRPC\nservice.\n\nThe [DSL Go Doc](https://pkg.go.dev/goa.design/goa/v3@v3.19.1/dsl?tab=doc)\ncontains a fully documented reference of all the DSL functions.\n\n## Instrumentation and System Example\n\nThe [clue](https://github.com/goadesign/clue) project provides observability\npackages that work in tandem with Goa. The packages cover\n[logging](https://github.com/goadesign/clue/tree/main/log),\n[tracing](https://github.com/goadesign/clue/tree/main/trace),\n[metrics](https://github.com/goadesign/clue/tree/main/metrics),\n[health checks](https://github.com/goadesign/clue/tree/main/health)\nand service client\n[mocking](https://github.com/goadesign/clue/tree/main/mock). clue also includes a fully featured\n[example](https://github.com/goadesign/clue/tree/main/example/weather)\nconsisting of three instrumented Goa microservices that communicate with each other.\n\n## Getting Started Guides\n\nA couple of Getting Started guides produced by the community.\n\nJoseph Ocol from Pelmorex Corp. goes through a complete example writing a server\nand client service using both HTTP and gRPC transports.\n\n[![GOA Design Tutorial](https://tech.pelmorex.com/wp-content/uploads/2020/07/GOA-Design-Tutorial-Screencap-800x470.png)](https://vimeo.com/437928805)\n\nGleidson Nascimento goes through how to create a complete service that using both\n[CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) and\n[JWT](https://jwt.io/) based authentication to secure access.\n\n[![API Development in Go Using Goa](https://bs-uploads.toptal.io/blackfish-uploads/uploaded_file/file/275966/image-1592349920607-734c25f64461bf3c482bac1d73c26432.png)](https://www.toptal.com/go/goa-api-development)\n\n## Examples\n\nThe [examples](https://github.com/goadesign/examples) directory\ncontains simple examples illustrating basic concepts.\n\n## Troubleshooting\n\nQ: I'm seeing an error that says:\n\n> generated code expected `goa.design/goa/v3/codegen/generator` to be present in the vendor directory, see documentation for more details\n\nHow do I fix this?\n\nA: If you are vendoring your dependencies Goa will not attempt to satisfy its\ndependencies by retrieving them with `go get`. If you see the above error message, it\nmeans that the `goa.design/goa/v3/codegen/generator` package is not included in your\nvendor directory.\n\nTo fix, ensure that `goa.design/goa/v3/codegen/generator` is being imported somewhere in your project. This can be as a bare import (e.g. `import _ \"goa.design/goa/v3/codegen/generator\"`)\nin any file or you can use a dedicated `tools.go` file (see [Manage Go tools via Go modules](https://marcofranssen.nl/manage-go-tools-via-go-modules) and [golang/go/issues/25922](https://github.com/golang/go/issues/25922) for more details.) Finally, run `go mod vendor` to ensure\nthe imported packages are properly vendored.\n\n# Contributing\n\nSee [CONTRIBUTING](https://github.com/goadesign/goa/blob/v3/CONTRIBUTING.md).\n"
        },
        {
          "name": "RELEASE.md",
          "type": "blob",
          "size": 0.71484375,
          "content": "# Releasing Goa\n\nThis document is intended to help Goa maintainers release new versions of Goa.\n\n## Using `make release`\n\n1. Update `MAJOR`, `MINOR` and `BUILD` as needed in `Makefile`.\n2. Run `make release`\n\n## Manual release procedure\n\n1. Update `MAJOR`, `MINOR` and `BUILD` as needed in `Makefile`.\n2. Update `pkg/version.go` and `README.md` to reflect the new version.\n3. Commit and push to v3.\n4. Create and push release git tag.\n5. Update `go.mod` in the examples repo `master` branch.\n6. Run `make` in the examples repo.\n7. Push the examples repo `master` branch.\n8. Create and push release git tag.\n9. Update `go.mod` in the plugins repo `v3` branch.\n10. Run `make` in the plugins repo.\n11. Create and push release git tag.\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "codegen",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "dsl",
          "type": "tree",
          "content": null
        },
        {
          "name": "eval",
          "type": "tree",
          "content": null
        },
        {
          "name": "expr",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.314453125,
          "content": "module goa.design/goa/v3\n\ngo 1.22.0\n\ntoolchain go1.23.1\n\nrequire (\n\tgithub.com/dimfeld/httppath v0.0.0-20170720192232-ee938bf73598\n\tgithub.com/getkin/kin-openapi v0.128.0\n\tgithub.com/go-chi/chi/v5 v5.2.0\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/gorilla/websocket v1.5.3\n\tgithub.com/manveru/faker v0.0.0-20171103152722-9fbc68a78c4d\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/stretchr/testify v1.10.0\n\tgolang.org/x/text v0.21.0\n\tgolang.org/x/tools v0.28.0\n\tgoogle.golang.org/grpc v1.69.2\n\tgoogle.golang.org/protobuf v1.36.1\n\tgopkg.in/yaml.v3 v3.0.1\n)\n\nrequire (\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/go-openapi/jsonpointer v0.21.0 // indirect\n\tgithub.com/go-openapi/swag v0.23.0 // indirect\n\tgithub.com/invopop/yaml v0.3.1 // indirect\n\tgithub.com/josharian/intern v1.0.0 // indirect\n\tgithub.com/mailru/easyjson v0.7.7 // indirect\n\tgithub.com/manveru/gobdd v0.0.0-20131210092515-f1a17fdd710b // indirect\n\tgithub.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826 // indirect\n\tgithub.com/perimeterx/marshmallow v1.1.5 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgolang.org/x/mod v0.22.0 // indirect\n\tgolang.org/x/net v0.32.0 // indirect\n\tgolang.org/x/sync v0.10.0 // indirect\n\tgolang.org/x/sys v0.28.0 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241015192408-796eee8c2d53 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 7.5341796875,
          "content": "github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/dimfeld/httppath v0.0.0-20170720192232-ee938bf73598 h1:MGKhKyiYrvMDZsmLR/+RGffQSXwEkXgfLSA08qDn9AI=\ngithub.com/dimfeld/httppath v0.0.0-20170720192232-ee938bf73598/go.mod h1:0FpDmbrt36utu8jEmeU05dPC9AB5tsLYVVi+ZHfyuwI=\ngithub.com/getkin/kin-openapi v0.128.0 h1:jqq3D9vC9pPq1dGcOCv7yOp1DaEe7c/T1vzcLbITSp4=\ngithub.com/getkin/kin-openapi v0.128.0/go.mod h1:OZrfXzUfGrNbsKj+xmFBx6E5c6yH3At/tAKSc2UszXM=\ngithub.com/go-chi/chi/v5 v5.2.0 h1:Aj1EtB0qR2Rdo2dG4O94RIU35w2lvQSj6BRA4+qwFL0=\ngithub.com/go-chi/chi/v5 v5.2.0/go.mod h1:DslCQbL2OYiznFReuXYUmQ2hGd1aDpCnlMNITLSKoi8=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-openapi/jsonpointer v0.21.0 h1:YgdVicSA9vH5RiHs9TZW5oyafXZFc6+2Vc1rr/O9oNQ=\ngithub.com/go-openapi/jsonpointer v0.21.0/go.mod h1:IUyH9l/+uyhIYQ/PXVA41Rexl+kOkAPDdXEYns6fzUY=\ngithub.com/go-openapi/swag v0.23.0 h1:vsEVJDUo2hPJ2tu0/Xc+4noaxyEffXNIs3cOULZ+GrE=\ngithub.com/go-openapi/swag v0.23.0/go.mod h1:esZ8ITTYEsH1V2trKHjAN8Ai7xHb8RV+YSZ577vPjgQ=\ngithub.com/go-test/deep v1.0.8 h1:TDsG77qcSprGbC6vTN8OuXp5g+J+b5Pcguhf7Zt61VM=\ngithub.com/go-test/deep v1.0.8/go.mod h1:5C2ZWiW0ErCdrYzpqxLbTX7MG14M9iiw8DgHncVwcsE=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/gorilla/websocket v1.5.3 h1:saDtZ6Pbx/0u+bgYQ3q96pZgCzfhKXGPqt7kZ72aNNg=\ngithub.com/gorilla/websocket v1.5.3/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=\ngithub.com/invopop/yaml v0.3.1 h1:f0+ZpmhfBSS4MhG+4HYseMdJhoeeopbSKbq5Rpeelso=\ngithub.com/invopop/yaml v0.3.1/go.mod h1:PMOp3nn4/12yEZUFfmOuNHJsZToEEOwoWsT+D81KkeA=\ngithub.com/josharian/intern v1.0.0 h1:vlS4z54oSdjm0bgjRigI+G1HpF+tI+9rE5LLzOg8HmY=\ngithub.com/josharian/intern v1.0.0/go.mod h1:5DoeVV0s6jJacbCEi61lwdGj/aVlrQvzHFFd8Hwg//Y=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=\ngithub.com/mailru/easyjson v0.7.7/go.mod h1:xzfreul335JAWq5oZzymOObrkdz5UnU4kGfJJLY9Nlc=\ngithub.com/manveru/faker v0.0.0-20171103152722-9fbc68a78c4d h1:Zj+PHjnhRYWBK6RqCDBcAhLXoi3TzC27Zad/Vn+gnVQ=\ngithub.com/manveru/faker v0.0.0-20171103152722-9fbc68a78c4d/go.mod h1:WZy8Q5coAB1zhY9AOBJP0O6J4BuDfbupUDavKY+I3+s=\ngithub.com/manveru/gobdd v0.0.0-20131210092515-f1a17fdd710b h1:3E44bLeN8uKYdfQqVQycPnaVviZdBLbizFhU49mtbe4=\ngithub.com/manveru/gobdd v0.0.0-20131210092515-f1a17fdd710b/go.mod h1:Bj8LjjP0ReT1eKt5QlKjwgi5AFm5mI6O1A2G4ChI0Ag=\ngithub.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826 h1:RWengNIwukTxcDr9M+97sNutRR1RKhG96O6jWumTTnw=\ngithub.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826/go.mod h1:TaXosZuwdSHYgviHp1DAtfrULt5eUgsSMsZf+YrPgl8=\ngithub.com/perimeterx/marshmallow v1.1.5 h1:a2LALqQ1BlHM8PZblsDdidgv1mWi1DgC2UmX50IvK2s=\ngithub.com/perimeterx/marshmallow v1.1.5/go.mod h1:dsXbUu8CRzfYP5a87xpp0xq9S3u0Vchtcl8we9tYaXw=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=\ngithub.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=\ngithub.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=\ngithub.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/ugorji/go/codec v1.2.7 h1:YPXUKf7fYbp/y8xloBqZOw2qaVggbfwMlI8WM3wZUJ0=\ngithub.com/ugorji/go/codec v1.2.7/go.mod h1:WGN1fab3R1fzQlVQTkfxVtIBhWDRqOviHU95kRgeqEY=\ngo.opentelemetry.io/otel v1.31.0 h1:NsJcKPIW0D0H3NgzPDHmo0WW6SptzPdqg/L1zsIm2hY=\ngo.opentelemetry.io/otel v1.31.0/go.mod h1:O0C14Yl9FgkjqcCZAsE053C13OaddMYr/hz6clDkEJE=\ngo.opentelemetry.io/otel/metric v1.31.0 h1:FSErL0ATQAmYHUIzSezZibnyVlft1ybhy4ozRPcF2fE=\ngo.opentelemetry.io/otel/metric v1.31.0/go.mod h1:C3dEloVbLuYoX41KpmAhOqNriGbA+qqH6PQ5E5mUfnY=\ngo.opentelemetry.io/otel/sdk v1.31.0 h1:xLY3abVHYZ5HSfOg3l2E5LUj2Cwva5Y7yGxnSW9H5Gk=\ngo.opentelemetry.io/otel/sdk v1.31.0/go.mod h1:TfRbMdhvxIIr/B2N2LQW2S5v9m3gOQ/08KsbbO5BPT0=\ngo.opentelemetry.io/otel/sdk/metric v1.31.0 h1:i9hxxLJF/9kkvfHppyLL55aW7iIJz4JjxTeYusH7zMc=\ngo.opentelemetry.io/otel/sdk/metric v1.31.0/go.mod h1:CRInTMVvNhUKgSAMbKyTMxqOBC0zgyxzW55lZzX43Y8=\ngo.opentelemetry.io/otel/trace v1.31.0 h1:ffjsj1aRouKewfr85U2aGagJ46+MvodynlQ1HYdmJys=\ngo.opentelemetry.io/otel/trace v1.31.0/go.mod h1:TXZkRk7SM2ZQLtR6eoAWQFIHPvzQ06FJAsO1tJg480A=\ngolang.org/x/mod v0.22.0 h1:D4nJWe9zXqHOmWqj4VMOJhvzj7bEZg4wEYa759z1pH4=\ngolang.org/x/mod v0.22.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.32.0 h1:ZqPmj8Kzc+Y6e0+skZsuACbx+wzMgo5MQsJh9Qd6aYI=\ngolang.org/x/net v0.32.0/go.mod h1:CwU0IoeOlnQQWJ6ioyFrfRuomB8GKF6KbYXZVyeXNfs=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/tools v0.28.0 h1:WuB6qZ4RPCQo5aP3WdKZS7i595EdWqWR8vqJTlwTVK8=\ngolang.org/x/tools v0.28.0/go.mod h1:dcIOrVd3mfQKTgrDVQHqCPMWy6lnhfhtX3hLXYVLfRw=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241015192408-796eee8c2d53 h1:X58yt85/IXCx0Y3ZwN6sEIKZzQtDEYaBWrDvErdXrRE=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241015192408-796eee8c2d53/go.mod h1:GX3210XPVPUjJbTUbvwI8f2IpZDMZuPJWDzDuebbviI=\ngoogle.golang.org/grpc v1.69.2 h1:U3S9QEtbXC0bYNvRtcoklF3xGtLViumSYxWykJS+7AU=\ngoogle.golang.org/grpc v1.69.2/go.mod h1:vyjdE6jLBI76dgpDojsFGNaHlxdjXN9ghpnd2o7JGZ4=\ngoogle.golang.org/protobuf v1.36.1 h1:yBPeRvTftaleIgM3PZ/WBIZ7XM/eEYAaEyCwvyjq/gk=\ngoogle.golang.org/protobuf v1.36.1/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=\ngopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "grpc",
          "type": "tree",
          "content": null
        },
        {
          "name": "http",
          "type": "tree",
          "content": null
        },
        {
          "name": "middleware",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "security",
          "type": "tree",
          "content": null
        },
        {
          "name": "staticcheck.conf",
          "type": "blob",
          "size": 0.0263671875,
          "content": "checks = [\"all\", \"-SA1029\"]"
        }
      ]
    }
  ]
}