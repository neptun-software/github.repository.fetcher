{
  "metadata": {
    "timestamp": 1736566422997,
    "page": 21,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ariya/phantomjs",
      "stars": 29462,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.8154296875,
          "content": ".DS_Store\n*.pro.user*\n*.xcodeproj\nMakefile*\n*~\n*.moc\nmoc_*\nqrc_*\n.qmake.stash\n*.o\n*.swp\n*.pyc\n*.a\n/debian/*.debhelper\n/debian/files\n/debian/*.log\n/debian/*.substvars\n/debian/*/\n/deploy/qt-*.tar.gz\n/deploy/Qt-*\n/symbols\n/src/qt/qtc-debugging-helper\n/src/phantomjs_plugin_import.cpp\n\n# ignore ctags\n/tags\n/tools/dump_syms.app/\n\n# Ignore Visual Studio temporary files, build results, etc\n*.suo\n*.user\n*.sln.docstates\n*_i.c\n*_p.c\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.log\n*.sdf\n*.vcxproj\n*.vcxproj.filters\n*.lib\n*.prl\n*.intermediate.manifest\n\n# Build results\n[Dd]ebug*/\n[Rr]elease/\nbin/\n*.class\nbuild/\n.gradle/\n\n# CMake\nCMakeLists.txt.user\nCMakeCache.txt\nCMakeFiles\nCMakeScripts\nTesting\nMakefile\ncmake_install.cmake\ninstall_manifest.txt\ncompile_commands.json\nCTestTestfile.cmake\n_deps\n*_autogen\n\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 1.20703125,
          "content": "cmake_minimum_required(VERSION 3.5.0)\nproject(phantomjs)\n\nset (CMAKE_CXX_STANDARD 11)\n\nfind_package(Qt5 COMPONENTS Core Network WebKitWidgets REQUIRED)\nfind_package(Threads REQUIRED)\n\nmessage(\"Using Qt version ${Qt5Core_VERSION}\")\nif (Qt5Core_VERSION VERSION_LESS 5.5.0)\n  message(FATAL_ERROR \"This version of Qt is not supported. Please use Qt 5.5 or later\")\nendif()\n\nset(CMAKE_AUTOMOC ON)\nset(CMAKE_AUTORCC ON)\n\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)\n\nfile(GLOB_RECURSE PHANTOMJS_SOURCES src/*.cpp)\ninclude_directories(src)\nset(CMAKE_INCLUDE_CURRENT_DIR ON)\n\nset(THIRDPARTY_SOURCES src/mongoose/mongoose.c src/qcommandline/qcommandline.cpp src/linenoise/src/linenoise.c)\ninclude_directories(src/linenoise/src)\ninclude_directories(src/mongoose)\ninclude_directories(src/qcommandline)\n\nif (WIN32)\n  set(EXTRA_LIBS ws2_32)\n  add_definitions(-DQCOMMANDLINE_STATIC)\nelse()\n  set(EXTRA_LIBS dl)\nendif()\n\nadd_executable(${PROJECT_NAME} src/phantomjs.qrc ${PHANTOMJS_SOURCES} ${THIRDPARTY_SOURCES})\ntarget_link_libraries(${PROJECT_NAME} ${EXTRA_LIBS} Qt5::Core Qt5::Network Qt5::WebKitWidgets Threads::Threads)\ninstall(TARGETS ${PROJECT_NAME} DESTINATION bin)\n\nadd_custom_target(check COMMAND python test/run-tests.py -v)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.3876953125,
          "content": "# Contribution Guide\n\nThis page describes how to contribute changes to PhantomJS.\n\nPlease do **not** create a pull request without reading this guide first. Failure to do so may result in the **rejection** of the pull request.\n\n## For The Impatients\n\n**Work on a feature branch**.\nIf your changes need to be modified due to some reviews, it is less clutter to tweak an isolated feature branch and push it again.\n\n**Create a ticket in the issue tracker**.\nThis serves as a placeholder for important feedback, review, or any future updates.\n\nIn the commit message:\n\n* **Keep the first line < 72 characters**. Write additional paragraphs\n  if necessary.\n* **Put the link to the issue** (see above). This is important for cross-referencing purposes.\n\n## Communicate\n\n*Second opinion is always important.*\n\n**Bug fixing**. If you have a fix for a bug, please attach your patch in the corresponding issue in the [issue tracker](https://github.com/ariya/phantomjs/issues). If there is no entry for the bug yet, then please create a new one. If you are confident working with Git, see the Get Ready section below on how to submit your change.\n\n**Improvement and feature request**. If you have an improvement idea, please send an email to the [mailing list](http://groups.google.com/group/phantomjs) (rather than contacting the developers directly) so that other people can give their insights and opinions. This is also important to avoid duplicate work.\n\n**Task management**. Once the feature idea is agreed upon and translated into concrete actions and tasks, please use the [issue tracker](https://github.com/ariya/phantomjs/issues) to create an issue for each individual task. Further technical discussion about the task and the implementation details should be carried out in the issue tracker.\n\n**Extending with new API**. Whenever you want to introduce a new API, please send an email to the mailing list along with the link to the issue. Consider good API name for the object or function, read the [API Design Principle](http://wiki.qt.io/API_Design_Principles) article. It may require few iterations to agree on the final API and hence it is important to engage all interested parties as early as possible.\n\n## Get Ready\n\nFor your proposed change, you need to have:\n\n* **an issue** (in the issue tracker) which describe your bug or feature\n* **a feature branch** in your git fork\n\nMake sure your code change follows the style guide. To format your code, run `./tools/format-code.sh`.\n\n### Refer the Issue\n\nThe commit message needs to link to the issue. This cross-reference is [very important](http://ariya.ofilabs.com/2012/01/small-scale-software-craftsmanship.html) for the following reasons.\n\nFirst, the commit log is frozen and can not be changed. If it contains a mistake or outdated information, the log can not be amended. However, further updates can be still posted to the linked issue, which can be followed from the commit log itself.\n\nSecond, it provides a placeholder for code review and other feedback.\n\nAn example of a bad commit log:\n\n    Fix Mountain Lion\n\nThe above log is too short and useless in the long run. A better version (and note the issue link):\n\n    Better support for OS X Mountain Lion.\n\n    require('system').os.version should give \"10.8 (Mountain Lion)\".\n\n    https://github.com/ariya/phantomjs/issues/10688\n\n### Use Feature Branch\n\nTo isolate your change, please avoid working on the master branch. Instead, work on a *feature branch* (often also known as *topic branch*). You can create a new branch (example here crash-fix) off the master branch by using:\n\n    git checkout -b crash-fix master\n\nRefer to your favorite Git tutorial/book for further detailed help.\n\nSome good practices for the feature branch:\n\n* Give it a meaningful name instead of, e.g. `prevent-zero-divide` instead of just `fix`\n* Make *granular* and *atomic* commits, e.g. do not mix a typo fix with some major refactoring\n* Keep one branch for one specific issue. If you need to work on other unrelated issues, create another branch.\n\n## Review and Merge\n\nWhen your branch is ready, send the pull request.\n\nWhile it is not always the case, often it is necessary to improve parts of your code in the branch. This is the actual review process.\n\nHere is a check list for the review:\n\n* It does not break the test suite\n* There is no typo\n* The coding style follows the existing one\n* There is a reasonable amount of comment\n* The license header is intact\n* All examples are still working\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 16.80078125,
          "content": "Please see also http://phantomjs.org/releases.html.\n\n2016-01-23: Version 2.1.0\n\n    New features\n\n      * Upgraded Qt to 5.5.1 (issue #13377)\n      * Added support for SSL Client Authentication (issue #11275)\n      * Added support for context menu event (issue #11429)\n      * Allow remote debugging to use random port assigned by the OS (issue #13432)\n\n    Improvements\n\n      * Allow outer context to access arbitrary URLs (issue #11217)\n      * Fixed --local-storage-path and localStoragePath config option (issue #11596)\n      * Restored --local-url-access=no regression (issue #13412)\n      * Fixed an issue with loading JS modules contains a last-line comment (issue #12868)\n      * Fixed an issue with returning binary content in WebServer module (issue #13026)\n      * Fixed encoded URL loading on Windows (issue #12953)\n      * Fixed building with GCC 5 (issue #13518)\n      * Fixed file upload (issue #12506)\n      * Fixed latest OS detection (issue #13829)\n\n2015-01-23: Version 2.0.0\n\n    New features\n\n      * Switched to Qt 5 and updated WebKit (issue 10448)\n      * Implemented clearing of memory cache (issue 10357)\n      * Added support for HTTP header change for every request (issue 11299)\n\n    Improvements\n\n      * Fixed rendering of CJK text by always linking the codecs (issue 10249)\n      * Ensured onResourceReceived is still fired on an error (issue 11163)\n      * Fixed possible crash in handling network requests (issue 11252)\n      * Removed hardcoded GhostDriver launching message (issue 12681)\n      * Allowed disk cache more than 2 GB (issue 12303)\n\n    Examples\n\n      * Netsniff example should exit when fails to load (issue 11333)\n\n2014-01-25: Version 1.9.7\n\n      * Reverted to GhostDriver 1.1.0 instead of 1.1.1 (issue 11915)\n      * Fixed another warning of obsolete userSpaceScaleFactor on OS X 10.9 (issue 11612)\n\n2014-01-20: Version 1.9.6\n\n      * Updated GhostDriver to version 1.1.1 (issue 11877, 11893)\n\n2014-01-19: Version 1.9.3\n\n      * Fixed CoreText performance note on OS X 10.9 (issue 11418)\n      * Fixed warning of obsolete userSpaceScaleFactor on OS X 10.9 (issue 11612)\n\n2013-09-06: Version 1.9.2\n\n      * Fixed graphical artifacts with transparent background on Windows (issue 11276, 11007, 11366)\n      * Updated GhostDriver to version 1.0.4 (issue 11452)\n\n2013-06-04: Version 1.9.1\n\n    Critical bug fixes:\n\n      * Fixed problems with specifying proxy server (issue 10811, 11117)\n      * Fixed UTF-8 encoding with system.stdout and system.stderr (issue 11162)\n      * Ensured that onResourceReceived will be always invoked (issue 11163)\n      * Fixed module loading from an absolute path on Windows (issue 11165)\n      * Fixed typo in the command-line option for setting the cache size (11219)\n      * Fixed possible crash when handling network requests (issue 11252, 11338)\n\n2013-03-20: Version 1.9.0 \"Sakura\"\n\n    New features\n\n      * Added spawn and execFile to execute external programs (issue 10219)\n      * Added the ability to abort network requests (issue 10230)\n      * Added system access to stdin, stdout, and stderr (issue 10333)\n      * Added support for custom CA certificates location (issue 10916)\n      * Added seek function to the File stream (issue 10937)\n      * Implemented file read for a specified number of bytes (issue 10938)\n      * Added a callback to handle network error (issue 10954, 10997)\n      * Added custom encoding support when opening a page (issue 11043)\n      * Implemented require.stub() support for a factory function (issue 11044)\n      * Added page loading indicator and progress (issue 11091)\n      * Added a timeout option for network requests (issue 11129)\n\n    Improvements\n\n      * Fixed the build on FreeBSD (issue 10597)\n      * Ensured a consistent 72 dpi for Linux headless rendering (issue 10659)\n      * Fixed possible PDF error due to invalid CreationDate field (issue 10663)\n      * Fixed crash when uploading non existing files (issue 10941)\n      * Improved the autocomplete internal of the interactive/REPL mode (issue 10943)\n      * Fixed possible crash when accessing inline frames (issue 10947)\n      * Changed Linux binary package setup to be built on CentOS 5 (issue 10963)\n      * Extended SSL ignore setting to synchronous XHR (issue 10985)\n      * Added convenient constants for modifier keys (issue 11056)\n      * Fixed incorrect date handling in the cookies (issue 11068)\n      * Updated GhostDriver to version 1.0.3 (issue 11146)\n\n    Examples\n\n      * Fixed invalid data URI in the netsniff example (issue 10740)\n      * Implemented a new weather example (issue 10794)\n      * Fixed rendering issues in render_multi_url (issue 11021)\n      * Fixed proper event sequence in page_events example (issue 11028)\n      * Miscellanous tweaks (issue 11082)\n\n2013-03-02: Version 1.8.2\n\n    Critical bug fixes:\n\n      * Fixed possible PDF error due to invalid CreationDate field (issue 663)\n      * Fixed crash when uploading non existing files (issue 941)\n      * Fixed possible crash when accessing inline frames (issue 947)\n      * Extended SSL ignore setting to synchronous XHR (issue 985)\n      * Fixed incorrect date handling in the cookies (issue 1068)\n\n2013-01-06: Version 1.8.1\n\n    Critical bug fix:\n\n      * Mac OS X: Fix possible crash when using some TrueType fonts (issue 690)\n\n2012-12-21: Version 1.8.0 \"Blue Winter Rose\"\n\n    New features\n\n      * Integrated GhostDriver as the WebDriver implementation (issue 49)\n      * Added an option to specify the SSL protocol (issue 174)\n      * Added encoding support for WebServer's response (issue 505)\n      * Added process ID (PID) to the System module (issue 769)\n      * Added properties to obtain page and frame title (issue 799)\n      * Added page navigation methods (issue 808)\n      * Added support for modifier keys in keyboard events (issue 835)\n      * Added onFilePicker callback for more generic file upload API (issue 843)\n      * Added the ability to set the page content and location (issue 909)\n\n    Improvements\n\n      * Fixed date parsing in ISO8601 format (issue 187, 267)\n      * Fixed window.location (issue 530, 632)\n      * Deregistered multiple callback handler (issue 807)\n      * Fixed sending of double-click events (issue 848)\n      * Increases maximum number of redirects (issue 849)\n      * Fixed keycodes sent for lowercase characters (issue 852)\n      * Fixed a regression in table row page break (issue 880)\n      * Completed the CoffeeScript version of the examples (issue 907)\n      * Updated Qt to version 4.8.4 (issue 918)\n      * Fixed potential hang in some example scripts (issue 922)\n\n2012-09-22: Version 1.7.0 \"Blazing Star\"\n\n    New features\n\n      * Added a module system modelled after CommonJS/Node.js (issue 47)\n      * Added support for window pop-up (issue 151)\n      * Static build on Linux (issue 413)\n      * Added run-time detection of SSL support (issue 484)\n      * Added more events support (issue 492, 712)\n      * Added support for disabling automatic proxy detection (issue 580)\n      * Provided page closing callback (issue 678)\n      * Added methods to access URL, frames URL, frame Content (issue 758)\n      * Added more cookies-related API (issue 761)\n\n    Improvements\n\n      * Refactored command-line options handling (issue 55)\n      * Improved the workflow for producing release builds (issue 599)\n      * Improved cookies API and implementation (issue 603, 761)\n      * Improved frame switching API (issue 654)\n      * Fixed iframe handling regression (issue 683)\n      * Fixed OS version number with Windows 8 and Mountain Lion (issue 684, 688)\n      * Fixed HAR navigation info in the netsniff example (issue 733)\n      * Fixed compile warnings with Visual Studio (issue 744)\n      * Removed hacks for static linking on Windows (issue 753)\n      * Added ICO image handling on Windows (issue 779)\n      * Fixed font antialiasing on Windows (issue 785)\n      * Improved Jasmine test runner for Jasmine 1.2 (issue 792)\n\n2012-07-22: Version 1.6.1\n\n    Bug fixes\n\n      * Don't build the deploy in debug mode (issue 599)\n      * Fixed building on Windows (issue 424)\n      * Fixed remote inspector when building statically (issue 430)\n\n2012-06-20: Version 1.6.0 \"Lavender\"\n\n    New features\n\n      * Added support for passing arguments to WebPage's evaluate (issue 132)\n      * Added callbacks for JavaScript onConfirm and onPrompt (issue 133)\n      * Added stack trace when error occurs (issue 166)\n      * Added support for local storage path and quota (issue 300)\n      * Added initial support for cookies handling (issue 354)\n      * Added support for header footer when printing the page (issue 410, 512)\n      * Added headers support in the loading request (issue 452)\n      * Added support to render the web page as base64-encoded string (issue 547)\n      * Added hooks for navigation event (issue 562)\n      * Added command-line option to show debug messages (issue 575)\n      * Added support for the zoom factor for web page rendering (issue 579)\n      * Added crash reporter for Mac OS X and Linux, based on Google Breakpad (issue 576)\n      * Added 'os' object to the system module (issue 585)\n      * Added support for asynchronous evaluation (issue 593)\n\n    Improvements\n\n      * Fixed remote debugging to work on Mac OS X and Windows (issue 430)\n      * Fixed web server getting the dropped connection for empty response (issue 451)\n      * Fixed text rendered as boxes (squares) on headless Linux (issue 460)\n      * Updated Qt to version 4.8.2 (issue 495)\n      * Updated CoffeeScript compiler to version 1.3.3 (issue 496)\n      * Fixed the build script to detect and use MAKEFLAGS (issue 503)\n      * Fixed the build script to properly pass Qt config flags (issue 507)\n      * Changed Info.plist to be embedded in Mac OS X executable (issue 528)\n      * Fixed wrong module require in the imagebin example (issue 536)\n      * Fixed example scripts to exit with the right exit code (issue 544)\n      * Fixed build failure with glib 2.31.0+ (issue 559)\n      * Fixed error handler failures in some cases (issue 589)\n      * Fixed Twitter-related examples to work with the new site (issue 609)\n\n2012-03-20: Version 1.5.0 \"Ghost Flower\"\n\n    New features\n\n      * Added interactive mode, also known as REPL (issue 252)\n      * Added setting for web security, to allow cross domain XHR (issue 28)\n      * Added error handler for WebPage object (issue 166)\n      * Added support for custom HTTP header in the network request (issue 77)\n      * Added support for read write encoding in the file system module (issue 367)\n      * Added remote debugging support on Linux (issue 6)\n      * Added support for proxy authentication (issue 105)\n      * Added System module, to retrieve environment variables (issue 271) and arguments (issue 276)\n      * Added fs.readLink function (issue 329)\n      * Added support for reading and writing binary data (issue 400)\n      * Added support to retrieve request data in the WebServer? module (issue 340)\n      * Added support for individual top/bottom/left/right print margins (issue 388)\n      * Added command-line option --help (issue 347)\n      * Added short command-line options -v and -h (issue 408)\n      * Removed support for Flash and other plugins (issue 418)\n\n    Bug fixes\n\n      * Fixed multiple console.log arguments (issue 36)\n      * Fixed file upload (issue 307)\n      * Fixed the web server instance to be asynchronous (issue 326) and still support Keep Alive (issue 416)\n      * Workaround Qt 4.8.0 crash due to empty URL scheme (issue 365)\n      * Fixed a Content-Type problem where POST does not work (issue 337)\n      * Fixed reading body request in the web server even without specific Content-Type (issue 439)\n      * Fixed Jasmine test runner with Jasmine 1.1 (issue 402)\n      * Fixed request URL formatting in the web server (issue 437)\n      * Don't display debugging and warning messages (issue 323)\n\n2011-12-31: Version 1.4.1\n\n    Bug fixes\n\n      * Fix setting the proxy type (issue 266)\n      * Workaround for file upload regression (issue 307)\n      * Fix extraneous messsages in non-debug mode (issue 323)\n\n2011-12-22: Version 1.4.0 \"Glory of the Snow\"\n\n    New features\n\n      * Added embedded HTTP server (issue 115)\n      * Added convenient build script for Linux (issue 197)\n      * Added support for SOCKS5 proxy (issue 266)\n      * Updated CoffeeScript compiler to version 1.2 (issue 312)\n\n    Bug fixes\n\n      * Fix potential crash in QUrl with Qt 4.8 (issue 304)\n      * Fix bug in CookieJar with QSettings and string (PyPhantomJS issue 10)\n      * Prevent showing the icon on Mac OS X Dock (issue 281)\n\n    Examples\n\n      * Added a new example to detect browsers sniffing (issue 263)\n      * Added HTTP server example (issue 115)\n\n2011-09-23: Version 1.3.0 \"Water Lily\"\n\n    Bug fixes\n\n      * Fixed open() and POST method, without specifying the finished handler\n      * Fixed script execution warning dialog (issue 165)\n      * Added WebPage.release() to free the web page from memory (issue 154)\n      * Added special handling of about:blank (issue 235)\n      * Made a separate network access manager for each page (issue 190)\n\n    New features\n\n      * Introduced file system API based on CommonJS Filesystem proposal (issue 129)\n      * Added support for persistent cookies (issue 91)\n      * Added event handling, currently only for mouse events (issue 234)\n      * Added page scroll position (issue 162)\n      * Added HTTP authentication support (issue 45)\n      * Added callback for page initialization (issue 143)\n      * Added support to specify script and output encoding (issue 186)\n      * Added option to allow local content to do cross-domain access (issue 28)\n      * Added support to apply configurations from a JSON file (issue 180)\n      * Added a convenient WebPage initialization construction (issue 206)\n      * Added option to limit the size of disk cache (issue 220)\n\n    Examples\n\n      * Added a new example on using Modernizr to detect features (issue 144)\n      * Fixed pizza.js example to use Mobile Yelp (issue 200)\n      * Fixed netsniff.coffee example due to wrong indentation (issue 225)\n      * Added an example to show live network traffic (issue 227)\n      * Added an example demonstrating different output encodings (issue 186)\n\n2011-06-21: Version 1.2.0 \"Birds of Paradise\"\n\n    Version 1.2.0 is a major update. It introduces a whole set of new API.\n\n    Bug fixes\n\n      * Fixed rendering a very large web page (issue 54)\n      * Fixed reporting of CoffeeScript compile error (issue 125)\n\n    New features\n\n      * Added callback for console message (issue 12)\n      * Improved security model via WebPage object (issue 41)\n      * Added support for POST, HEAD, PUT, and DELETE (issue 88)\n      * Scripts filename is now passed as phantom.scriptName\n      * Added callback to capture resource requests and responses (issue 2)\n      * Added the ability to load external JavaScript (issue 32)\n\n    Examples\n\n      * Ported examples to use WebPage object\n      * Added a new example to upload an image to imagebin.org\n      * Added a new example to show HTTP POST feature\n      * Added a new example to sniff network traffic and save it in HAR format\n\n\n2011-04-27: Version 1.1.0 \"Cherry Blossom\"\n\n    Fixed the script loading to use UTF-8 encoding (Yasuhiro Matsumoto).\n\n    Added check for system proxy setting (Yasuhiro Matsumoto).\n\n    Fixed building with Cygwin and Qt 4.5 (John Dalton).\n\n    Added a new example: driver for QUnit tests (Łukasz Korecki).\n\n    Fixed issue #20: problem with JPG transparent color (Alessandro Portale).\n\n    Fixed issue #9: ignore first line starting with #! (Matthias, aka fourplusone).\n\n    Fixed issue #7: support for file upload for form submission (Matthias, aka fourplusone).\n\n    Fixed issue #35: support for disabling images loading (Ariya Hidayat).\n\n    Fixed issue #14: enable or disable plugins (Ariya Hidayat).\n\n    Added a new example: using Canvas to produce the color wheel (Ariya Hidayat).\n\n    Added support for rasterizing as GIF image (Ariya Hidayat).\n\n    Added support for CoffeeScript (Ariya Hidayat).\n\n    Fixed issue #19: option for setting the proxy (Clint Berry, Ariya Hidayat).\n\n    Python implementation using PyQt (James Roe).\n\n    Fixed issue #17: Specify paper size for PDF export (Alessandro Portale).\n\n    Fixed issue #60: Win32 and OS/2 icon files (Salvador Parra Camacho).\n\n    Added clipping rectangle to the render function (Wouter de Bie).\n\n    Added an example on sychronous waiting (Gabor Torok).\n\n    Added command line option to use disk cache (Jon Turner).\n\n    Added text extracting example (Weston Ruter).\n\n    Fixed issue #93: Build with Qt < 4.7 (Ariya Hidayat).\n\n    Ported all examples to CoffeeScript (Robert Gieseke).\n\n2011-01-17: Version 1.0.0\n\n    Initial launch.\n\n    The API is centralized at the 'phantom' object (as child of\n    window object) which has the properties: args, content,\n    loadStatus, state, userAgent, version, viewportSize, and\n    the following functions: exit, open, render, sleep.\n\n    Several examples are included, among others: web page rasterizer,\n    weather service, headless test framework driver, and many others.\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 1.5703125,
          "content": "Installation Instructions\n*************************\n\nSystem requirements:\n\n  * C++ toolchain such as g++ 7 or later\n  * CMake version 3.5 or later\n  * Qt 5 toolkit\n  * Community QtWebKit version 5.212 or later\n  * Python 2.7 (to run the tests)\n\n\nInstallation on Linux\n---------------------\n\nDue to the required QtWebKit >= 5.212, only the following distributions will\nbe supported:\n\n  * Debian 10 (buster) or later\n  * Ubuntu 18.04 (bionic) or later\n  * Fedora 28 or later\n\nOn Debian/Ubuntu, the requirements can be fulfilled by installing these packages:\n\n  sudo apt install g++ cmake qt5-default libqt5webkit5-dev python\n\nAfter unpacking the source tarball or cloning the repository:\n\n  ./configure && make\n\nDo a quick sanity check:\n\n  ./bin/phantomjs --version\n\nRun the test suite:\n\n  make check\n\nInstall it (may require sudo):\n\n  make install\n\n\nInstallation on Windows\n-----------------------\n\nOnly MinGW is supported for now.\n\nFirst, install MSYS2.\n\nThen, from \"MYS2 MinGW64 32-bit\" shell, install the required packages:\n\n  pacman -S msys/make\n  pacman -S mingw32/mingw-w64-i686-toolchain\n  pacman -S mingw32/mingw-w64-i686-cmake\n  pacman -S mingw32/mingw-w64-i686-qtwebkit\n  pacman -S mingw32/mingw-w64-i686-python2\n\nNote: add --disable-download-timeout as an additional argument, if the\ninstallation failed due to the slow server responses.\n\nAfter unpacking the source tarball or cloning the repository:\n\n  cmake . -G \"MinGW Makefiles\"\n\nAnd then start the build process:\n\n  make\n\nDo a quick sanity check:\n\n  ./bin/phantomjs.exe --version\n\n\nInstallation on macOS\n---------------------\n\nTo be written.\n\n"
        },
        {
          "name": "LICENSE.BSD",
          "type": "blob",
          "size": 1.3955078125,
          "content": "Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n  * Neither the name of the <organization> nor the\n    names of its contributors may be used to endorse or promote products\n    derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.185546875,
          "content": "# [PhantomJS](http://phantomjs.org) - Scriptable Headless WebKit\n\nPhantomJS ([phantomjs.org](http://phantomjs.org)) is a headless WebKit scriptable with JavaScript.  The latest [stable release](http://phantomjs.org/release-2.1.html) is version 2.1.\n\n**Important**: PhantomJS development is suspended until further notice (see [#15344](https://github.com/ariya/phantomjs/issues/15344) for more details).\n\n## Use Cases\n\n- **Headless web testing**. Lightning-fast testing without the browser is now possible!\n- **Page automation**. [Access and manipulate](http://phantomjs.org/page-automation.html) web pages with the standard DOM API, or with usual libraries like jQuery.\n- **Screen capture**. Programmatically [capture web contents](http://phantomjs.org/screen-capture.html), including CSS, SVG and Canvas. Build server-side web graphics apps, from a screenshot service to a vector chart rasterizer.\n- **Network monitoring**. Automate performance analysis, track [page loading](http://phantomjs.org/network-monitoring.html) and export as standard HAR format.\n\n## Features\n\n- **Multiplatform**, available on major operating systems: Windows, Mac OS X, Linux, and other Unices.\n- **Fast and native implementation** of web standards: DOM, CSS, JavaScript, Canvas, and SVG. No emulation!\n- **Pure headless (no X11) on Linux**, ideal for continuous integration systems. Also runs on Amazon EC2, Heroku, and Iron.io.\n- **Easy to install**: [Download](http://phantomjs.org/download.html), unpack, and start having fun in just 5 minutes.\n\n## Questions?\n\n- Explore the complete [documentation](http://phantomjs.org/documentation/).\n- Read tons of [user articles](http://phantomjs.org/buzz.html) on using PhantomJS.\n- Join the [mailing-list](http://groups.google.com/group/phantomjs) and discuss with other PhantomJS fans.\n\nPhantomJS is free software/open source, and is distributed under the [BSD license](http://opensource.org/licenses/BSD-3-Clause). It contains third-party code, see the included `third-party.txt` file for the license information on third-party code.\n\nPhantomJS is created and maintained by  [@ariyahidayat](http://twitter.com/AriyaHidayat), with the help of [many contributors](https://github.com/ariya/phantomjs/contributors)."
        },
        {
          "name": "configure",
          "type": "blob",
          "size": 11.076171875,
          "content": "#!/bin/sh\n\n# Autotools-style (./configure) wrapper for CMake\n# <https://github.com/nemequ/configure-cmake>\n#\n#   *** IMPORTANT ***\n#\n#   You must include the GNUInstallDirs module (which comes with\n#   CMake) in your project.  Just put \"include (GNUInstallDirs)\" in\n#   you CMakeLists.txt and you should be good.\n#\n# This script was originally written for Squash\n# <https://quixdb.github.io/squash/> by Evan Nemerson\n# <evan@nemerson.com>, but has been spun off into a separate\n# repository.  Please feel free to copy it into your own repository,\n# though I would appreciate it if you would post improvements, bugs,\n# feature requests, etc. to the issue tracker at\n# <https://github.com/nemequ/configure-cmake/issues>.\n#\n# To the extent possible under law, the author(s) hereby waive all\n# copyright and related or neighboring rights to this work.  For\n# details, see <https://creativecommons.org/publicdomain/zero/1.0/>\n\nTOP_SRCDIR=\"$(dirname $0)\"\n\nif [ \"${CMAKE_CMD}\" = \"\" ]; then\n    CMAKE_CMD=\"cmake\"\nfi\n\nBUILD_TYPE=\"Debug\"\nPREFIX=/usr/local\nLIBDIR=\nCMAKE_ARGS=\n\nif [ -e \"${TOP_SRCDIR}/.configure-custom.sh\" ]; then\n    . \"${TOP_SRCDIR}/.configure-custom.sh\"\nfi\n\nquote() {\n    echo \"$1\" | sed -e \"s|'|'\\\\\\\\''|g; 1s/^/'/; \\$s/\\$/'/\"\n}\n\nextract_var_string() {\n    VAR_NAME=$1\n    VAR_NAME=$(echo $1 | sed -e 's/[ \\t]*$//')\n    if [ \"x$2\" != \"x\" ]; then\n        VAR_VALUE=$2\n    else\n        VAR_VALUE=yes\n    fi\n\n    if [ \"x$3\" != \"x\" ]; then\n        VAR_UC_NAME=$3\n    else\n        VAR_UC_NAME=$(echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr -c '[:alnum:]' '_' | sed 's/_$//g')\n    fi\n}\n\nset_config_var() {\n    is_with=n\n    case \"$1\" in\n        \"--enable-\"*)\n            name=\"${1#--enable-}\"\n            cfg=\"${ENABLE_VARS}\"\n            ;;\n        \"--disable-\"*)\n            name=\"${1#--disable-}\";\n            cfg=\"${DISABLE_VARS}\";\n            ;;\n        \"--with-\"*)\n            # IFS=\"=\" read -ra WITHARGS <<< \"${1}\"\n            name=\"${1#--with-}\"\n            cfg=\"${WITH_VARS}\"\n            is_with=y\n            ;;\n    esac\n\n    found=n\n    for varstring in $cfg; do\n        extract_var_string $(echo \"${varstring}\" | tr '|' ' ')\n        if [ \"x$VAR_NAME\" = \"x$name\" ]; then\n            found=y\n            break;\n        fi\n    done\n\n    if [ \"$found\" = \"y\" ]; then\n        if [ \"x$is_with\" = \"xy\" ]; then\n            CMAKE_ARGS=\"$CMAKE_ARGS -D${VAR_UC_NAME}=$(quote \"$2\")\"\n        else\n            CMAKE_ARGS=\"$CMAKE_ARGS -D${VAR_UC_NAME}=$(quote \"${VAR_VALUE}\")\"\n        fi\n    else\n        echo \"Unknown parameter: ${1}\"\n        exit 1\n    fi\n}\n\nprefix_to_offset() {\n    expr $(echo \"${1}\" | awk '{ print length }') + 1\n}\n\nprint_help() {\n    cat <<EOF >&2\n  -h, --help              display this help and exit\n  --disable-debug         disable debugging mode\n  --pass-thru             pass remaining arguments through to CMake\n\n  --prefix=PREFIX         install architecture-independent files in PREFIX\n                          [$PREFIX]\n  --bindir=DIR            user executables [PREFIX/bin]\n  --sbindir=DIR           system admin executables [PREFIX/sbin]\n  --libexecdir=DIR        program executables [PREFIX/libexec]\n  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]\n  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]\n  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]\n  --libdir=DIR            object code libraries [PREFIX/lib]\n  --includedir=DIR        C header files [PREFIX/include]\n  --oldincludedir=DIR     C header files for non-gcc [/usr/include]\n  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]\n  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]\n  --infodir=DIR           info documentation [DATAROOTDIR/info]\n  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]\n  --mandir=DIR            man documentation [DATAROOTDIR/man]\n  --docdir=DIR            documentation root [DATAROOTDIR/doc/PROJECT_NAME]\nEOF\n\n    first=y\n    for varstring in ${ENABLE_VARS}; do\n        if [ $first = 'y' ]; then\n            echo \"\"\n            first=n\n        fi\n        extract_var_string $(echo \"${varstring}\" | tr '|' ' ')\n        var_doc_name=\"ENABLE_${VAR_UC_NAME}_DOC\"\n        eval \"docstring=\\$$var_doc_name\"\n        if [ \"x${docstring}\" = \"x\" ]; then\n            printf \"  --enable-%-14s enable %s support\\n\" \"${VAR_NAME}\" \"$(echo -n \"${VAR_NAME}\" | tr '-' ' ')\"\n        else\n            printf \"  --enable-%-14s %s\\n\" \"${VAR_NAME}\" \"$docstring\"\n        fi\n    done\n\n    first=y\n    for varstring in ${DISABLE_VARS}; do\n        if [ $first = 'y' ]; then\n            echo \"\"\n            first=n\n        fi\n        extract_var_string $(echo \"${varstring}\" | tr '|' ' ')\n        var_doc_name=\"DISABLE_${VAR_UC_NAME}_DOC\"\n        eval \"docstring=\\$$var_doc_name\"\n        if [ \"x${docstring}\" = \"x\" ]; then\n            printf \"  --disable-%-13s disable %s support\\n\" \"${VAR_NAME}\" \"$(echo -n \"${VAR_NAME}\" | tr '-' ' ')\"\n        else\n            printf \"  --disable-%-13s %s\\n\" \"${VAR_NAME}\" \"$docstring\"\n        fi\n    done\n\n    first=y\n    for varstring in ${WITH_VARS}; do\n        if [ $first = 'y' ]; then\n            echo \"\"\n            first=n\n        fi\n        extract_var_string $(echo \"${varstring}\" | tr '|' ' ')\n        var_doc_name=\"WITH_${VAR_UC_NAME}_DOC\"\n        eval \"docstring=\\$$var_doc_name\"\n        paraminfo=\"${VAR_NAME}=${VAR_VALUE}\"\n        if [ \"x${docstring}\" = \"x\" ]; then\n            printf \"  --with-%-16s enable %s support\\n\" \"$paraminfo\" \"$(echo -n \"${VAR_NAME}\" | tr '-' ' ')\"\n        else\n            printf \"  --with-%-16s %s\\n\" \"$paraminfo\" \"$docstring\"\n        fi\n    done\n\n    exit 0\n}\n\nwhile [ $# != 0 ]; do\n    case \"$1\" in\n        \"--prefix=\"*)\n            PREFIX=\"${1#*=}\";;\n        \"--prefix\")\n            PREFIX=\"${2}\"; shift;;\n        \"--bindir=\"*)\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_BINDIR=$(quote \"${1#*=}\")\";;\n        \"--bindir\")\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_BINDIR=$(quote \"$2\")\"; shift;;\n        \"--sbindir=\"*)\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_SBINDIR=$(quote \"${1#*=}\")\";;\n        \"--sbindir\")\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_SBINDIR=$(quote \"$2\")\"; shift;;\n        \"--libexecdir=\"*)\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_LIBEXECDIR=$(quote \"${1#*=}\")\";;\n        \"--libexecdir\")\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_LIBEXECDIR=$(quote \"$2\")\"; shift;;\n        \"--sysconfdir=\"*)\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_SYSCONFDIR=$(quote \"${1#*=}\")\";;\n        \"--sysconfdir\")\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_SYSCONFDIR=$(quote \"$2\")\"; shift;;\n        \"--sharedstatedir=\"*)\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_SHAREDSTATEDIR=$(quote \"${1#*=}\")\";;\n        \"--sharedstatedir\")\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_SHAREDSTATEDIR=$(quote \"$2\")\"; shift;;\n        \"--localstatedir=\"*)\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_LOCALSTATEDIR=$(quote \"${1#*=}\")\";;\n        \"--localstatedir\")\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_LOCALSTATEDIR=$(quote \"$2\")\"; shift;;\n        \"--libdir=\"*)\n            LIBDIR=\"${1#*=}\";;\n        \"--libdir\")\n            LIBDIR=\"${2}\"; shift;;\n        \"--includedir=\"*)\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_INCLUDEDIR=$(quote \"${1#*=}\")\";;\n        \"--includedir\")\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_INCLUDEDIR=$(quote \"$2\")\"; shift;;\n        \"--oldincludedir=\"*)\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_OLDINCLUDEDIR=$(quote \"${1#*=}\")\";;\n        \"--oldincludedir\")\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_OLDINCLUDEDIR=$(quote \"$2\")\"; shift;;\n        \"--datarootdir=\"*)\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_DATAROOTDIR=$(quote \"${1#*=}\")\";;\n        \"--datarootdir\")\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_DATAROOTDIR=$(quote \"$2\")\"; shift;;\n        \"--datadir=\"*)\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_DATADIR=$(quote \"${1#*=}\")\";;\n        \"--datadir\")\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_DATADIR=$(quote \"$2\")\"; shift;;\n        \"--infodir=\"*)\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_INFODIR=$(quote \"${1#*=}\")\";;\n        \"--infodir\")\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_INFODIR=$(quote \"$2\")\"; shift;;\n        \"--localedir=\"*)\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_LOCALEDIR=$(quote \"${1#*=}\")\";;\n        \"--localedir\")\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_LOCALEDIR=$(quote \"$2\")\"; shift;;\n        \"--mandir=\"*)\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_MANDIR=$(quote \"${1#*=}\")\";;\n        \"--mandir\")\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_MANDIR=$(quote \"$2\")\"; shift;;\n        \"--docdir=\"*)\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_DOCDIR=$(quote \"${1#*=}\")\";;\n        \"--docdir\")\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_INSTALL_DOCDIR=$(quote \"$2\")\"; shift;;\n\n        \"CC=\"*)\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_C_COMPILER=$(quote \"${1#*=}\")\";;\n        \"CXX=\"*)\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_CXX_COMPILER=$(quote \"${1#*=}\")\";;\n        \"CFLAGS=\"*)\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_C_FLAGS=$(quote \"${1#*=}\")\";;\n        \"CXXFLAGS=\"*)\n            CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_CXX_FLAGS=$(quote \"${1#*=}\")\";;\n        \"LDFLAGS=\"*)\n            LDFLAGS=\"$LDFLAGS ${1#*=}\";;\n\n        \"--help\")\n            print_help;;\n        \"-h\")\n            print_help;;\n\n        # This flag is the only one which may be a bit surprising to\n        # people.  Autotools always builds with debugging symbols enabled\n        # (AFAIK), but for cmake you have to do -DCMAKE_BUILD_TYPE=Debug.\n        # Unfortunately this can change other things as well, so although\n        # I realize there is no --disable-debug flag I thought it would be\n        # prudent to support one here.\n        \"--disable-debug\")\n            BUILD_TYPE=\"Release\";;\n\n        \"--pass-thru\")\n            while [ $# != 1 ]; do\n                shift;\n                CMAKE_ARGS=\"$CMAKE_ARGS $(quote \"${1}\")\";\n            done;;\n\n        \"--enable-\"*)\n            set_config_var \"$1\"\n            ;;\n\n        \"--disable-\"*)\n            set_config_var \"$1\"\n            ;;\n\n        \"--with-\"*)\n            name=$(echo \"${1#--with-}\" | awk '{split($1,v,\"=\"); print v[1]}')\n            case \"${1}\" in\n                \"--with-${name}=\"*)\n                    set_config_var \"--with-${name}\" \"${1#--with-${name}=}\";;\n                \"--with-${name}\")\n                    set_config_var \"$1\" \"$2\";\n                    shift;;\n            esac\n            ;;\n\n        *)\n            echo \"$0: error: unrecognized option: \\`$1'\" >&2\n            echo \"Try \\`$0 --help' for more information\" >&2\n            exit -1\n    esac;\n    shift\ndone\n\nif [ \"x${LIBDIR}\" = \"x\" ]; then\n    LIBDIR=\"${PREFIX}/lib\"\nfi\n\n# Unlike CFLAGS/CXXFLAGS/CC/CXX, LDFLAGS isn't handled by CMake, so we\n# need to parse it here.\nif [ \"x${LDFLAGS}\" != \"x\" ]; then\n    for varname in EXE MODULE SHARED STATIC; do\n        CMAKE_ARGS=\"$CMAKE_ARGS -DCMAKE_${varname}_LINKER_FLAGS=$(quote \"$LDFLAGS\")\"\n    done\nfi\n\neval \"${CMAKE_CMD}\" \"${TOP_SRCDIR}\" -DCMAKE_BUILD_TYPE=\"${BUILD_TYPE}\" -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" -DCMAKE_INSTALL_LIBDIR=\"${LIBDIR}\" ${CMAKE_ARGS}\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "third-party.txt",
          "type": "blob",
          "size": 1.484375,
          "content": "This document contains the list of Third Party Software included with\nPhantomJS, along with the license information.\n\nThird Party Software may impose additional restrictions and it is the\nuser's responsibility to ensure that they have met the licensing\nrequirements of PhantomJS and the relevant license of the Third Party\nSoftware they are using.\n\nQt - http://qt-project.org/\nLicense: GNU Lesser General Public License (LGPL) version 2.1.\nReference: http://qt-project.org/doc/qt-4.8/lgpl.html.\n\nWebKit - http://www.webkit.org/\nLicense: GNU Lesser General Public License (LGPL) version 2.1 and BSD.\nReference: http://www.webkit.org/coding/lgpl-license.html and\nhttp://www.webkit.org/coding/bsd-license.html.\n\nMongoose - https://github.com/cesanta/mongoose\nLicense: MIT\nReference: https://github.com/cesanta/mongoose/commit/abbf27338ef554cce0281ac157aa71a9c1b82a55\n\nOpenSSL - http://www.openssl.org/\nLicense: OpenSSL License, SSLeay License.\nReference: http://www.openssl.org/source/license.html.\n\nLinenoise - https://github.com/tadmarshall/linenoise\nLicense: BSD.\nReference: https://github.com/tadmarshall/linenoise/blob/master/linenoise.h.\n\nQCommandLine - http://xf.iksaif.net/dev/qcommandline.html\nLicense: GNU Lesser General Public License (LGPL) version 2.1.\nReference: http://dev.iksaif.net/projects/qcommandline/repository/revisions/master/entry/COPYING\n\nwkhtmlpdf - http://wkhtmltopdf.org\nLicense: GNU Lesser General Public License (LGPL)\nReference: https://github.com/wkhtmltopdf/wkhtmltopdf/blob/master/LICENSE\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}