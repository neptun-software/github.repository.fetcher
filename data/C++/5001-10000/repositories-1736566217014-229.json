{
  "metadata": {
    "timestamp": 1736566217014,
    "page": 229,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "TigerVNC/tigervnc",
      "stars": 5349,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.150390625,
          "content": "*.[ao]\n*.mo\n*.la\n*.lo\n.deps\n.libs\n\nCMakeFiles\nCMakeCache.txt\nMakefile\nMakefile.in\nconfig.h\ncmake_install.cmake\ncmake_uninstall.cmake\ninstall_manifest.txt\n"
        },
        {
          "name": "BUILDING.txt",
          "type": "blob",
          "size": 12.9521484375,
          "content": "*******************************************************************************\n**     Building TigerVNC\n*******************************************************************************\n\n\n================================\nBuild requirements (all systems)\n================================\n\n-- CMake (http://www.cmake.org) v3.10 or later\n\n-- gcc\n\nDevelopment kits for the following packages:\n\n-- zlib\n\n-- pixman\n\n-- FLTK 1.3.3 or later\n\n-- If building TLS support:\n   * GnuTLS 3.x\n   * See \"Building TLS Support\" below.\n\n-- If building RSA-AES support:\n   * Nettle 3.0 or later\n\n-- If building native language support (NLS):\n   * Gnu gettext 0.14.4 or later\n   * See \"Building Native Language Support\" below.\n\n-- libjpeg-turbo\n   * \"Normal\" libjpegv6 is also supported, although it is not\n     recommended as it is much slower.\n\n\n=========================\nBuild requirements (Unix)\n=========================\n\n-- Non-Mac platforms:\n   * Development kits for all standard X11 libraries\n   * PAM\n\n-- If building Xvnc/libvnc.so:\n   * Xorg server source code, 1.20 or later\n   * All build requirements Xorg imposes (see its documentation)\n   * patch\n\n-- If building x0vncserver with socket activation support:\n   * libsystemd\n\n-- Optional ffmpeg development kit support (libav)\n   * You might have to enable additional repositories for this. E.g.,\n     on RHEL, EPEL and RPMFusion (free + nonfree) need to be enabled.\n\n-- If building vncpasswd with password quality check support:\n   * libpwquality\n\n============================\nBuild requirements (Windows)\n============================\n\n-- MinGW or MinGW-w64\n\n-- Inno Setup (needed to build the TigerVNC installer)\n   Inno Setup can be downloaded from http://www.jrsoftware.org/isinfo.php.\n   You also need the Inno Setup Preprocessor, which is available in the\n   Inno Setup QuickStart Pack.\n\n   Add the directory containing iscc.exe (for instance, \n   C:\\Program Files\\Inno Setup 5) to the system or user PATH environment\n   variable prior to building TigerVNC.\n\n\n=========================\nBuild requirements (Java)\n=========================\n\n-- Sun/Oracle JDK 1.7 or later or OpenJDK 7 or later\n\n-- See \"Building Java support\" below.\n\n\n==================\nOut-of-tree builds\n==================\n\nBinary objects, libraries, and executables are generated in the same directory\nfrom which cmake was executed (the \"binary directory\"), and this directory need\nnot necessarily be the same as the TigerVNC source directory.  You can create\nmultiple independent binary directories, in which different versions of\nTigerVNC can be built from the same source tree using different compilers or\nsettings.  In the sections below, {build_directory} refers to the binary\ndirectory, whereas {source_directory} refers to the TigerVNC source directory.\nFor in-tree builds, these directories are the same.\n\n\n=================\nBuilding TigerVNC\n=================\n\n\nBuilding the TigerVNC viewer on Unix/Mac systems\n------------------------------------------------\n\nThe following procedure will build the TigerVNC viewer on Linux and Unix\nsystems.\n\n  cd {build_directory}\n  cmake -G \"Unix Makefiles\" [additional CMake flags] {source_directory}\n  make\n\n\nBuilding the TigerVNC server on Unix/Linux systems\n--------------------------------------------------\n\nBuilding the TigerVNC server (Xvnc) is a bit trickier. Xvnc is typically built\nto use the X11 shared libraries provided with the system.  The procedure for\nthis is system-specific, since it requires specifying such things as font\ndirectories, but the general outline is as follows (this procedure assumes\nthat the viewer has already been built, per above.)\n\n  > cd {build_directory}\n\n    If performing an out-of-tree build:\n  > cp -R {source_directory}/unix/xserver unix/\n\n  > cp -R {xorg_source}/* unix/xserver/\n    (NOTE: {xorg_source} is the directory containing the Xorg source for the\n    machine on which you are building TigerVNC.  The most recent versions of\n    Red Hat/CentOS/Fedora, for instance, provide an RPM called\n    \"xorg-x11-server-source\", which installs the Xorg source under\n    /usr/share/xorg-x11-server-source.)\n\n  > cd unix/xserver/\n  > patch -p1 < {source_directory}/unix/xserver{version}.patch\n    (where {version} matches the X server version you are building, such as\n    \"120\" for version 1.20.x.)\n  > autoreconf -fiv\n\n  > ./configure --with-pic --without-dtrace --disable-static --disable-dri \\\n      --disable-xinerama --disable-xvfb --disable-xnest --disable-xorg \\\n      --disable-dmx --disable-xwin --disable-xephyr --disable-kdrive \\\n      --disable-config-hal --disable-config-udev --disable-dri2 --enable-glx \\\n      --with-default-font-path=\"catalogue:/etc/X11/fontpath.d,built-ins\" \\\n      --with-xkb-path=/usr/share/X11/xkb \\\n      --with-xkb-output=/var/lib/xkb \\\n      --with-xkb-bin-directory=/usr/bin \\\n      --with-serverconfig-path=/usr/lib64/xorg \\\n      {additional configure options}\n    (NOTE: This is merely an example that works with Red Hat Enterprise/CentOS\n    9 and recent Fedora releases.  You should customize it for your particular\n    system.  In particular, it will be necessary to customize the XKB\n    directory.)\n\n    For a regular, in-tree build:\n  > make TIGERVNC_SRCDIR={source_directory}\n    If performing an out-of-tree build:\n  > make TIGERVNC_SRCDIR={source_directory} TIGERVNC_BUILDDIR={build_directory}\n    (NOTE: Use absolute paths for source_directory and build_directory)\n\n\nBuilding the Windows TigerVNC viewer with MinGW\n-----------------------------------------------\n\nIf building the Windows version of TigerVNC on a Windows build system, use\nthe following procedure.\n\n  cd {build_directory}\n  cmake -G \"MSYS Makefiles\" [additional CMake flags] {source_directory}\n  make\n\nIf cross-compiling on a Unix/Linux system, then see the \"Build Recipes\" section\nbelow.\n\n\nDebug build\n-----------\n\nAdd \"-DCMAKE_BUILD_TYPE=Debug\" to the CMake command line.\n\n\nPortable (semi-static) build\n----------------------------\n\nTigerVNC can under favourble circumstances be built in a way that allows\nthe resulting binaries to run on any system without having to also install\nall the dynamic libraries it depends on. Enable this mode by adding:\n\n  -DBUILD_STATIC=1\n\nto the CMake command line.\n\nNote that the method used to achieve this is very fragile and it may be\nnecessary to tweak cmake/StaticBuild.cmake to make things work on your\nspecific system.\n\n\n=====================\nBuilding Java support\n=====================\n\nTigerVNC includes a Java version of the TigerVNC Viewer, which can be used on\nany platform that has a Java Runtime Environment (JRE) installed.  The Java\nviewer works similarly to the native viewer, but with lower performance.\n\nTo build the Java TigerVNC Viewer, add\n\n  -DBUILD_JAVA=1\n\nto the CMake or build-xorg command line.  The build system will attempt to find\nan installed Java Development Kit (JDK) and determine the appropriate paths for\nthe Java compiler (javac) and the JAR creation utility (jar).  You can override\nthese paths by setting the Java_JAVAC_EXECUTABLE and Java_JAR_EXECUTABLE CMake\nvariables.  You can also override the default flags that are passed to javac\nby setting the JAVACFLAGS CMake variable.  The build system will look for\nkeytool and jarsigner in the same directory as Java_JAR_EXECUTABLE.  These\ntools are needed to sign the JAR file, which is necessary to enable certain\nfunctionality (such as clipboard transfers) when the Java viewer is used as an\napplet.\n\nIf the Java viewer is built along with the Windows TigerVNC server (WinVNC),\nthen the build system will embed the Java viewer into WinVNC4.exe so that it\nwill automatically be served up using WinVNC's built-in HTTP server.\nSimilarly, if the Java viewer is built along with the Unix TigerVNC server\n(Xvnc), then the build system will include the Java viewer in the server\ntarball.\n\nBy default, a self-signed certificate will be generated and used to sign the\njar file.  By specifying the following command line arguments to the CMake\ncommand line, an alternate certificate may be used for signing.\n\n  -DJAVA_KEYSTORE=${keystore_location_or_url}\n  -DJAVA_KEYSTORE_TYPE=${keystore_type} (Default: \"jks\")\n  -DJAVA_KEY_ALIAS=${keytore_key_alias}\n  -DJAVA_STOREPASS=${keystore_password}\n  -DJAVA_KEYPASS=${keystore_entry_password}\n  -DJAVA_TSA_URL=${url_of_timestamping_authority}\n\nThe values of the JAVA_STOREPASS and JAVA_KEYPASS arguments may optionally be\nread from file or environment variables by prefixing the value with \":env \" \nor \":file \" (see the jarsigner documentation for more info): \n\n  export StorePass=tigervnc\n  export KeyPass=tigervnc\n  cmake \\\n    ...\n    -DJAVA_STOREPASS=\":env StorePass\"\n    -DJAVA_KEYPASS=\":env KeyPass\"\n\n\n======================================\nBuilding TLS support\n======================================\n\nTLS requires GnuTLS, which is supplied with most Linux distributions and\nwith MinGW for Windows and can be built from source on OS X and other \nUnix variants. However, GnuTLS versions > 2.12.x && < 3.3.x should be\navoided because of potential incompatibilities during initial handshaking.\n\nYou can override the GNUTLS_LIBRARY and GNUTLS_INCLUDE_DIR CMake variables\nto specify the locations of libgnutls and any dependencies.  For instance,\nadding\n\n  -DGNUTLS_INCLUDE_DIR=/usr/local/include \\\n  -DGNUTLS_LIBRARY=/usr/local/lib/libgnutls.a\n\nto the CMake command line would link TigerVNC against a static version of\nlibgnutls located under /usr/local.\n\n\n======================================\nBuilding native language support (NLS)\n======================================\n\nNLS requires gettext, which is supplied with most Linux distributions and\nwith MinGW for Windows and which can easily be built from source on OS X and\nother Unix variants.\n\nYou can override the ICONV_LIBRARIES and LIBINTL_LIBRARY CMake variables to\nspecify the locations of libiconv and libintl, respectively.  For instance,\nadding\n\n  -DLIBINTL_LIBRARY=/opt/gettext/lib/libintl.a\n\nto the CMake command line would link TigerVNC against a static version of\nlibintl located under /opt/gettext.  Adding\n\n  -DICONV_INCLUDE_DIR=/mingw/include \\\n    -DICONV_LIBRARIES=/mingw/lib/libiconv.a \\\n    -DGETTEXT_INCLUDE_DIR=/mingw/include \\\n    -DLIBINTL_LIBRARY=/mingw/lib/libintl.a\n\nto the CMake command line would link TigerVNC against the static versions of\nlibiconv and libintl included in the MinGW Developer Toolkit.\n\n\n===================\nInstalling TigerVNC\n===================\n\nYou can use the build system to install TigerVNC into a directory of your\nchoosing.  To do this, add:\n\n  -DCMAKE_INSTALL_PREFIX={install_directory}\n\nto the CMake command line.  Then, you can run 'make install' to build and\ninstall it.\n\nIf you don't specify CMAKE_INSTALL_PREFIX, then the default is\nc:\\Program Files\\TigerVNC on Windows and /usr/local on Unix.\n\n\n=========================\nCreating release packages\n=========================\n\nThe following commands can be used to create various types of release packages:\n\n\nUnix\n----\n\nmake tarball\n\n  Create a binary tarball containing the TigerVNC viewer\n\nmake servertarball\n\n  Create a binary tarball containing both the TigerVNC server and viewer\n\nmake dmg\n\n  Create Macintosh disk image file that contains an application bundle of the\n  TigerVNC viewer\n\n\nWindows\n-------\n\nmake installer\n\n  Create a Windows installer using Inno Setup.  The installer package\n  (TigerVNC[64].exe) will be located under {build_directory}.\n\n\n=============\nBuild recipes\n=============\n\n\nMinGW build on Cygwin\n---------------------\n\n  cd {build_directory}\n  CC=/usr/bin/x86_64-w64-mingw32-gcc CXX=/usr/bin/x86_64-w64-mingw32-g++ \\\n    RC=/usr/bin/x86_64-w64-mingw32-windres \\\n    cmake -G \"Unix Makefiles\" -DCMAKE_SYSTEM_NAME=Windows \\\n    -DCMAKE_AR=/usr/bin/x86_64-w64-mingw32-ar \\\n    -DCMAKE_RANLIB=/usr/bin/x86_64-w64-mingw32-ranlib {source_directory}\n  make\n\nThis produces a build of TigerVNC that does not depend on cygwin1.dll or\nother Cygwin DLL's.  The mingw64-x86_64-gcc-core and mingw64-x86_64-gcc-g++\npackages (and their dependencies) must be installed.\n\n\nMinGW-w64 build on Windows\n--------------------------\n\nThis produces a build of TigerVNC using the \"native\" MinGW-w64 toolchain\n(which is faster than the Cygwin version):\n\n  cd {build_directory}\n  CC={mingw-w64_binary_path}/x86_64-w64-mingw32-gcc \\\n    CXX={mingw-w64_binary_path}/x86_64-w64-mingw32-g++ \\\n    RC={mingw-w64_binary_path}/x86_64-w64-mingw32-windres \\\n    cmake -G \"MSYS Makefiles\" \\\n    -DCMAKE_AR={mingw-w64_binary_path}/x86_64-w64-mingw32-ar \\\n    -DCMAKE_RANLIB={mingw-w64_binary_path}/x86_64-w64-mingw32-ranlib \\\n    {source_directory}\n  make\n\n\nMinGW build on Linux\n--------------------\n\n  cd {build_directory}\n  CC={mingw_binary_path}/x86_64-w64-mingw32-gcc \\\n    CXX={mingw_binary_path}/x86_64-w64-mingw32-g++ \\\n    RC={mingw_binary_path}/x86_64-w64-mingw32-windres \\\n    cmake -G \"Unix Makefiles\" -DCMAKE_SYSTEM_NAME=Windows \\\n    -DCMAKE_AR={mingw_binary_path}/x86_64-w64-mingw32-ar \\\n    -DCMAKE_RANLIB={mingw_binary_path}/x86_64-w64-mingw32-ranlib \\\n    {source_directory}\n  make\n\n\n===============================\nDistribution-specific packaging\n===============================\n\nConfiguration for building packages for current versions of RHEL/CentOS\nand Ubuntu LTS can be found under contrib/packages.\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 11.314453125,
          "content": "#\n# Setup\n#\n\ncmake_minimum_required(VERSION 3.10.0)\n\n# Internal cmake modules\nset(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/Modules)\n\ninclude(CheckIncludeFiles)\ninclude(CheckFunctionExists)\ninclude(CheckLibraryExists)\ninclude(CheckVariableExists)\ninclude(CheckTypeSize)\ninclude(CheckCSourceCompiles)\ninclude(CheckCXXSourceCompiles)\ninclude(CheckCSourceRuns)\n\ninclude(CMakeMacroLibtoolFile)\n\ninclude(cmake/TargetLinkDirectories.cmake)\n\nproject(tigervnc)\nset(VERSION 1.14.80)\n\n# The RC version must always be four comma-separated numbers\nstring(REPLACE . , RCVERSION \"${VERSION}.0\")\n\n# Installation paths\ninclude(GNUInstallDirs)\nset(CMAKE_INSTALL_UNITDIR \"lib/systemd/system\" CACHE PATH \"systemd unit files (lib/systemd/system)\")\nif(IS_ABSOLUTE \"${CMAKE_INSTALL_UNITDIR}\")\n  set(CMAKE_INSTALL_FULL_UNITDIR \"${CMAKE_INSTALL_UNITDIR}\")\nelse()\n  set(CMAKE_INSTALL_FULL_UNITDIR \"${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_UNITDIR}\")\nendif()\n\noption(INSTALL_SYSTEMD_UNITS \"Install TigerVNC systemd units\" ON)\n\nif(MSVC)\n  message(FATAL_ERROR \"TigerVNC cannot be built with Visual Studio.  Please use MinGW\")\nendif()\n\nif(NOT BUILD_TIMESTAMP)\n  STRING(TIMESTAMP BUILD_TIMESTAMP \"%Y-%m-%d %H:%M\" UTC)\nendif()\n\n# Default to optimised builds instead of debug ones. Our code has no bugs ;)\n# (CMake makes it fairly easy to toggle this back to Debug if needed)\nif(NOT CMAKE_BUILD_TYPE)\n  set(CMAKE_BUILD_TYPE Release)\nendif()\n\nmessage(STATUS \"CMAKE_BUILD_TYPE = ${CMAKE_BUILD_TYPE}\")\n\nmessage(STATUS \"VERSION = ${VERSION}\")\nmessage(STATUS \"BUILD_TIMESTAMP = ${BUILD_TIMESTAMP}\")\nadd_definitions(-DBUILD_TIMESTAMP=\"${BUILD_TIMESTAMP}\")\n\n# We want to keep our asserts even in release builds so remove NDEBUG\nset(CMAKE_C_FLAGS_RELEASE \"${CMAKE_C_FLAGS_RELEASE} -UNDEBUG\")\nset(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} -UNDEBUG\")\nset(CMAKE_C_FLAGS_RELWITHDEBINFO \"${CMAKE_C_FLAGS_RELWITHDEBINFO} -UNDEBUG\")\nset(CMAKE_CXX_FLAGS_RELWITHDEBINFO \"${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -UNDEBUG\")\nset(CMAKE_C_FLAGS_MINSIZEREL \"${CMAKE_C_FLAGS_MINSIZEREL} -UNDEBUG\")\nset(CMAKE_CXX_FLAGS_MINSIZEREL \"${CMAKE_CXX_FLAGS_MINSIZEREL} -UNDEBUG\")\n\n# But extra debug checks are still gated by this custom define\nIF(CMAKE_BUILD_TYPE MATCHES Debug)\n  add_definitions(-D_DEBUG)\nENDIF()\n\n# Make sure we get a sane C and C++ version\nset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -std=gnu99\")\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=gnu++11\")\n\n# Tell the compiler to be stringent\nset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wall -Wextra -Wformat=2 -Wvla\")\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wall -Wextra -Wformat=2 -Wvla\")\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wzero-as-null-pointer-constant\")\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wsuggest-override\")\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wshadow\")\n# Make sure we catch these issues whilst developing\nIF(CMAKE_BUILD_TYPE MATCHES Debug)\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Werror\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Werror\")\nENDIF()\n# clang doesn't support format_arg, which breaks this warning\nif (CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wno-format-nonliteral -Wno-format-security\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-format-nonliteral -Wno-format-security\")\nendif()\n\noption(ENABLE_ASAN \"Enable address sanitizer support\" OFF)\nif(ENABLE_ASAN AND NOT WIN32 AND NOT APPLE)\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsanitize=address\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=address\")\nendif()\n\noption(ENABLE_TSAN \"Enable thread sanitizer support\" OFF)\nif(ENABLE_TSAN AND NOT WIN32 AND NOT APPLE AND CMAKE_SIZEOF_VOID_P MATCHES 8)\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsanitize=thread\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=thread\")\nendif()\n\nif(NOT DEFINED BUILD_WINVNC)\n  set(BUILD_WINVNC 1)\nendif()\n\n# Minimum version is Windows 7\nif(WIN32)\n  add_definitions(-D_WIN32_WINNT=0x0601)\nendif()\n\n# Legacy macros (macOS 10.12 and older) conflict with our code\nif(APPLE)\n  add_definitions(-D__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES=0)\nendif()\n\n# X11 stuff. It's in a if() so that we can say REQUIRED\nif(UNIX AND NOT APPLE)\n  find_package(X11 REQUIRED)\n  if(X11_Xdamage_LIB)\n    add_definitions(-DHAVE_XDAMAGE)\n  endif()\n  if(X11_Xfixes_LIB)\n    add_definitions(-DHAVE_XFIXES)\n  endif()\n  if(X11_Xrandr_LIB)\n    add_definitions(-DHAVE_XRANDR)\n  endif()\n  if(X11_XTest_LIB)\n    add_definitions(-DHAVE_XTEST)\n  endif()\nendif()\n\n# Check for zlib\nfind_package(ZLIB REQUIRED)\n\n# Check for pixman\nfind_package(Pixman REQUIRED)\n\n# Check for gettext\noption(ENABLE_NLS \"Enable translation of program messages\" ON)\nif(ENABLE_NLS)\n  # Tools\n  find_package(Gettext)\n\n  # Gettext needs iconv\n  find_package(Iconv)\n\n  if(ICONV_FOUND)\n    # Headers and libraries (copied from licq)\n    set(GETTEXT_FOUND FALSE)\n\n    find_path(GETTEXT_INCLUDE_DIR libintl.h)\n    if(GETTEXT_INCLUDE_DIR)\n      set(CMAKE_REQUIRED_LIBRARIES ${ICONV_LIBRARIES})\n      set(CMAKE_REQUIRED_FLAGS -fno-builtin-dgettext)\n      check_function_exists(dgettext LIBC_HAS_DGETTEXT)\n      if(LIBC_HAS_DGETTEXT)\n        set(GETTEXT_FOUND TRUE)\n      else()\n        find_library(LIBINTL_LIBRARY NAMES intl libintl)\n        if(LIBINTL_LIBRARY)\n          check_library_exists(${LIBINTL_LIBRARY} \"dgettext\" \"\" LIBINTL_HAS_DGETTEXT)\n          if(LIBINTL_HAS_DGETTEXT)\n            set(GETTEXT_LIBRARIES ${LIBINTL_LIBRARY} ${ICONV_LIBRARIES})\n            set(GETTEXT_FOUND TRUE)\n          endif()\n        endif()\n      endif()\n      set(CMAKE_REQUIRED_LIBRARIES)\n      set(CMAKE_REQUIRED_FLAGS)\n    endif()\n  endif()\n\n  if(NOT GETTEXT_FOUND OR NOT ICONV_FOUND)\n    message(WARNING \"Gettext NOT found.  Native Language Support disabled.\")\n    set(ENABLE_NLS 0)\n  endif()\nendif()\n\noption(ENABLE_H264 \"Enable H.264 RFB encoding\" ON)\nif(ENABLE_H264)\n  if(WIN32)\n    add_definitions(\"-DHAVE_H264\")\n    set(H264_LIBS \"WIN\")  # may be LIBAV in the future\n    set(H264_LIBRARIES ole32 mfplat mfuuid wmcodecdspuuid)\n\n    set(CMAKE_REQUIRED_LIBRARIES ${H264_LIBRARIES})\n    check_variable_exists(CLSID_VideoProcessorMFT HAVE_VIDEO_PROCESSOR_MFT)\n    set(CMAKE_REQUIRED_LIBRARIES)\n    if(HAVE_VIDEO_PROCESSOR_MFT)\n      add_definitions(\"-DHAVE_VIDEO_PROCESSOR_MFT\")\n    endif()\n  else()\n    find_package(Ffmpeg)\n    if (AVCODEC_FOUND AND AVUTIL_FOUND AND SWSCALE_FOUND)\n      set(H264_INCLUDE_DIRS ${AVCODEC_INCLUDE_DIRS} ${AVUTIL_INCLUDE_DIRS} ${SWSCALE_INCLUDE_DIRS})\n      set(H264_LIBRARIES ${AVCODEC_LIBRARIES} ${AVUTIL_LIBRARIES} ${SWSCALE_LIBRARIES})\n      set(H264_LIBRARY_DIRS ${AVCODEC_LIBRARY_DIRS} ${AVUTIL_LIBRARY_DIRS} ${SWSCALE_LIBRARY_DIRS})\n      add_definitions(\"-D__STDC_CONSTANT_MACROS\")\n      add_definitions(\"-DHAVE_H264\")\n      set(H264_LIBS \"LIBAV\")\n    else()\n      set(H264_LIBS \"NONE\")\n      message(WARNING \"FFMPEG support can't be found\")\n    endif()\n  endif()\n  add_definitions(\"-DH264_${H264_LIBS}\")\nendif()\n\n# Check for libjpeg\nfind_package(JPEG REQUIRED)\n\n# Warn if it doesn't seem to be the accelerated libjpeg that's found\nset(CMAKE_REQUIRED_LIBRARIES ${JPEG_LIBRARIES})\nset(CMAKE_REQUIRED_FLAGS -I${JPEG_INCLUDE_DIR})\n\nset(JPEG_TEST_SOURCE \"\\n\n  #include <stdio.h>\\n\n  #include <jpeglib.h>\\n\n  int main(void) {\\n\n    struct jpeg_compress_struct cinfo;\\n\n    struct jpeg_error_mgr jerr;\\n\n    cinfo.err=jpeg_std_error(&jerr);\\n\n    jpeg_create_compress(&cinfo);\\n\n    cinfo.input_components = 3;\\n\n    jpeg_set_defaults(&cinfo);\\n\n    cinfo.in_color_space = JCS_EXT_RGB;\\n\n    jpeg_default_colorspace(&cinfo);\\n\n    return 0;\\n\n  }\")\n\nif(CMAKE_CROSSCOMPILING)\n  check_c_source_compiles(\"${JPEG_TEST_SOURCE}\" FOUND_LIBJPEG_TURBO)\nelse()\n  check_c_source_runs(\"${JPEG_TEST_SOURCE}\" FOUND_LIBJPEG_TURBO)\nendif()\n\nset(CMAKE_REQUIRED_LIBRARIES)\nset(CMAKE_REQUIRED_FLAGS)\nset(CMAKE_REQUIRED_DEFINITIONS)\n\nif(NOT FOUND_LIBJPEG_TURBO)\n  message(STATUS \"Warning: You are not using libjpeg-turbo. Performance will suffer.\")\nendif()\n\noption(BUILD_JAVA \"Build Java version of the TigerVNC Viewer\" FALSE)\nif(BUILD_JAVA)\n  add_subdirectory(java)\nendif()\n\noption(BUILD_VIEWER \"Build TigerVNC viewer\" ON)\nif(BUILD_VIEWER)\n  # Check for FLTK\n  set(FLTK_SKIP_FLUID TRUE)\n  set(FLTK_SKIP_OPENGL TRUE)\n  set(FLTK_SKIP_FORMS TRUE)\n  find_package(FLTK REQUIRED)\n  if(UNIX AND NOT APPLE)\n    # No proper handling for extra X11 libs that FLTK might need...\n    if(X11_Xft_FOUND)\n      # Xft headers include references to fontconfig, so we need\n      # to link to that as well\n      find_library(FONTCONFIG_LIB fontconfig)\n      set(FLTK_LIBRARIES ${FLTK_LIBRARIES} ${X11_Xft_LIB} ${FONTCONFIG_LIB})\n    endif()\n    if(X11_Xinerama_FOUND)\n      set(FLTK_LIBRARIES ${FLTK_LIBRARIES} ${X11_Xinerama_LIB})\n    endif()\n    if(X11_Xfixes_FOUND)\n      set(FLTK_LIBRARIES ${FLTK_LIBRARIES} ${X11_Xfixes_LIB})\n    endif()\n    if(X11_Xcursor_FOUND)\n      set(FLTK_LIBRARIES ${FLTK_LIBRARIES} ${X11_Xcursor_LIB})\n    endif()\n    if(X11_Xrender_FOUND)\n      set(FLTK_LIBRARIES ${FLTK_LIBRARIES} ${X11_Xrender_LIB})\n    endif()\n  endif()\nendif()\n\n# Check for GNUTLS library\noption(ENABLE_GNUTLS \"Enable protocol encryption and advanced authentication\" ON)\nif(ENABLE_GNUTLS)\n  find_package(GnuTLS)\n  if (GNUTLS_FOUND)\n    add_definitions(\"-DHAVE_GNUTLS\")\n  endif()\nendif()\n\noption(ENABLE_NETTLE \"Enable RSA-AES security types\" ON)\nif (ENABLE_NETTLE)\n  find_package(Nettle)\n  if (NETTLE_FOUND)\n    add_definitions(\"-DHAVE_NETTLE\")\n  endif()\nendif()\n\n# Check for PAM library\nif(UNIX AND NOT APPLE)\n  check_include_files(security/pam_appl.h HAVE_PAM_H)\n  set(CMAKE_REQUIRED_LIBRARIES -lpam)\n  check_function_exists(pam_start HAVE_PAM_START)\n  set(CMAKE_REQUIRED_LIBRARIES)\n  if(HAVE_PAM_H AND HAVE_PAM_START)\n    set(PAM_LIBS pam)\n  else()\n    message(FATAL_ERROR \"Could not find PAM development files\")\n  endif()\nendif()\n\n# Check for SELinux library\nif(UNIX AND NOT APPLE)\n  check_include_files(selinux/selinux.h HAVE_SELINUX_H)\n  if(HAVE_SELINUX_H)\n    set(CMAKE_REQUIRED_LIBRARIES -lselinux)\n    set(CMAKE_REQUIRED_LIBRARIES)\n    set(SELINUX_LIBS selinux)\n    add_definitions(\"-DHAVE_SELINUX\")\n  else()\n    message(WARNING \"Could not find SELinux development files\")\n  endif()\nendif()\n\n# check for systemd support (socket activation)\nif(UNIX AND NOT APPLE)\n  find_package(PkgConfig)\n  if (PKG_CONFIG_FOUND)\n    pkg_check_modules(LIBSYSTEMD libsystemd)\n    if (LIBSYSTEMD_FOUND)\n      add_definitions(-DHAVE_LIBSYSTEMD)\n    endif()\n  endif()\nendif()\n\n# check for password pwquality check support\nif(UNIX AND NOT APPLE)\n  option(ENABLE_PWQUALITY \"Enable password pwquality check\" ON)\n  if(ENABLE_PWQUALITY)\n    find_package(PkgConfig)\n    if(PKG_CONFIG_FOUND)\n      pkg_check_modules(PWQUALITY pwquality)\n      if(PWQUALITY_FOUND)\n        add_definitions(-DHAVE_PWQUALITY)\n      endif()\n    endif()\n  endif()\nendif()\n\n# Generate config.h and make sure the source finds it\nconfigure_file(config.h.in config.h)\nadd_definitions(-DHAVE_CONFIG_H)\ninclude_directories(${CMAKE_BINARY_DIR})\n\ninclude(cmake/StaticBuild.cmake)\n\nadd_subdirectory(common)\n\nif(WIN32)\n  add_subdirectory(win)\nelse()\n  # No interest in building x related parts on Apple\n  if(NOT APPLE)\n    add_subdirectory(unix)\n  endif()\nendif()\n\nif(ENABLE_NLS)\n  add_subdirectory(po)\nendif()\n\nif(BUILD_VIEWER)\n  add_subdirectory(vncviewer)\n  add_subdirectory(media)\nendif()\n\nadd_subdirectory(tests)\n\n\nif(BUILD_VIEWER)\n  add_subdirectory(release)\nendif()\n\n# uninstall\nconfigure_file(\"${CMAKE_SOURCE_DIR}/cmake/cmake_uninstall.cmake.in\"\n  \"cmake_uninstall.cmake\" IMMEDIATE @ONLY)\n\nadd_custom_target(uninstall COMMAND ${CMAKE_COMMAND} -P cmake_uninstall.cmake)\n\nlibtool_generate_control_files()\n"
        },
        {
          "name": "LICENCE.TXT",
          "type": "blob",
          "size": 17.578125,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n\t  Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n\t 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\f\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\f\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\f\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\f\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n\tAppendix: How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) 19yy  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307,\n    USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) 19yy name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Library General\nPublic License instead of this License.\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 6.4169921875,
          "content": "About TigerVNC\n==============\n\nVirtual Network Computing (VNC) is a remote display system which allows you to\nview and interact with a virtual desktop environment that is running on another\ncomputer on the network.  Using VNC, you can run graphical applications on a\nremote machine and send only the display from these applications to your local\nmachine.  VNC is platform-independent and supports a wide variety of operating\nsystems and architectures as both servers and clients.\n\nTigerVNC is a high-speed version of VNC based on the RealVNC 4 and X.org code\nbases.  TigerVNC started as a next-generation development effort for TightVNC\non Unix and Linux platforms, but it split from its parent project in early 2009\nso that TightVNC could focus on Windows platforms.  TigerVNC supports a variant\nof Tight encoding that is greatly accelerated by the use of the libjpeg-turbo\nJPEG codec.\n\n\nLegal\n=====\n\nIncomplete and generally out of date copyright list::\n\n        Copyright (C) 1999 AT&T Laboratories Cambridge\n        Copyright (C) 2002-2005 RealVNC Ltd.\n        Copyright (C) 2000-2006 TightVNC Group\n        Copyright (C) 2005-2006 Martin Koegler\n        Copyright (C) 2005-2006 Sun Microsystems, Inc.\n        Copyright (C) 2006 OCCAM Financial Technology\n        Copyright (C) 2000-2008 Constantin Kaplinsky\n        Copyright (C) 2004-2017 Peter Astrand for Cendio AB\n        Copyright (C) 2010 Antoine Martin\n        Copyright (C) 2010 m-privacy GmbH\n        Copyright (C) 2009-2011 D. R. Commander\n        Copyright (C) 2009-2011 Pierre Ossman for Cendio AB\n        Copyright (C) 2004, 2009-2011 Red Hat, Inc.\n        Copyright (C) 2009-2024 TigerVNC Team\n        All Rights Reserved.\n\nThis software is distributed under the GNU General Public Licence as published\nby the Free Software Foundation.  See the file LICENCE.TXT for the conditions\nunder which this software is made available.  TigerVNC also contains code from\nother sources.  See the Acknowledgements section below, and the individual\nsource files, for details of the conditions under which they are made\navailable.\n\n\nAll Platforms\n=============\n\nAll versions of TigerVNC contain the following programs:\n\n* vncviewer - the cross-platform TigerVNC Viewer, written using FLTK.\n              vncviewer connects to a VNC server and allows you to interact\n              with the remote desktop being displayed by the VNC server.  The\n              VNC server can be running on a Windows or a Unix/Linux machine.\n\n\nWindows-specific\n================\n\nThe Windows version of TigerVNC contains the following programs:\n\n* winvnc - the TigerVNC server for Windows.  winvnc allows a Windows desktop to\n           be accessed remotely using a VNC viewer.\n\nWARNING: winvnc is currently unmaintained and and may not function correctly.\n\nwinvnc may not work if the Fast user switching or Remote desktop features are\nin use.\n\n\nUnix/Linux-specific (not Mac)\n=============================\n\nThe Unix/Linux version of TigerVNC contains the following programs:\n\n* Xvnc - the TigerVNC server for Unix.  Xvnc is both a VNC server and an X\n         server with a \"virtual\" framebuffer.  You should normally use the\n         vncserver service to start Xvnc.\n\n* vncpasswd - a program which allows you to change the VNC password used to\n              access your VNC server sessions (assuming that VNC authentication\n              is being used.) This command must be run to set a password before\n              using VNC authentication with any of the servers or services.\n\n* vncconfig - a program which is used to configure and control a running\n              instance of Xvnc.\n\n* x0vncserver - an inefficient VNC server which continuously polls any X\n                display, allowing it to be controlled via VNC.  It is intended\n                mainly as a demonstration of a simple VNC server.\n\nIt also contains the following systemd service:\n\n* vncserver@.service - a service to start a user session with Xvnc and one of\n                       the desktop environments available on the system.\n\nACKNOWLEDGEMENTS\n================\n\nThis distribution contains public domain DES software by Richard Outerbridge.\nThis is:\n\n    Copyright (c) 1988,1989,1990,1991,1992 by Richard Outerbridge.\n    (GEnie : OUTER; CIS : [71755,204]) Graven Imagery, 1992.\n\n\nThis distribution contains software from the X Window System.  This is:\n\n Copyright 1987, 1988, 1998  The Open Group\n \n Permission to use, copy, modify, distribute, and sell this software and its\n documentation for any purpose is hereby granted without fee, provided that\n the above copyright notice appear in all copies and that both that\n copyright notice and this permission notice appear in supporting\n documentation.\n \n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n \n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\n AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n \n Except as contained in this notice, the name of The Open Group shall not be\n used in advertising or otherwise to promote the sale, use or other dealings\n in this Software without prior written authorization from The Open Group.\n \n \n Copyright 1987, 1988 by Digital Equipment Corporation, Maynard, Massachusetts.\n \n                         All Rights Reserved\n \n Permission to use, copy, modify, and distribute this software and its \n documentation for any purpose and without fee is hereby granted, \n provided that the above copyright notice appear in all copies and that\n both that copyright notice and this permission notice appear in \n supporting documentation, and that the name of Digital not be\n used in advertising or publicity pertaining to distribution of the\n software without specific, written prior permission.  \n \n DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING\n ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL\n DIGITAL BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR\n ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,\n ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS\n SOFTWARE.\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.h.in",
          "type": "blob",
          "size": 0.7373046875,
          "content": "#define PACKAGE_NAME \"@CMAKE_PROJECT_NAME@\"\n#define PACKAGE_VERSION \"@VERSION@\"\n\n#cmakedefine ENABLE_NLS 1\n\n#cmakedefine CMAKE_INSTALL_FULL_LIBEXECDIR \"@CMAKE_INSTALL_FULL_LIBEXECDIR@\"\n#cmakedefine CMAKE_INSTALL_FULL_DATADIR \"@CMAKE_INSTALL_FULL_DATADIR@\"\n#cmakedefine CMAKE_INSTALL_FULL_LOCALEDIR \"@CMAKE_INSTALL_FULL_LOCALEDIR@\"\n\n/* MS Visual Studio 2008 and newer doesn't know ssize_t */\n#if defined(HAVE_GNUTLS) && defined(WIN32) && !defined(__MINGW32__)\n    #if defined(_WIN64)\n        typedef __int64 ssize_t;\n    #else\n        typedef long ssize_t;\n    #endif\n#endif\n\n/* We know we use deprecated stuff, it's to support older macOS */\n#if defined(__APPLE__) && defined(__clang__)\n#pragma clang diagnostic ignored \"-Wdeprecated-declarations\"\n#endif\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "java",
          "type": "tree",
          "content": null
        },
        {
          "name": "media",
          "type": "tree",
          "content": null
        },
        {
          "name": "po",
          "type": "tree",
          "content": null
        },
        {
          "name": "release",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "unix",
          "type": "tree",
          "content": null
        },
        {
          "name": "vncviewer",
          "type": "tree",
          "content": null
        },
        {
          "name": "win",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}