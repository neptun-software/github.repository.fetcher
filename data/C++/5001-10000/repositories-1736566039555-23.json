{
  "metadata": {
    "timestamp": 1736566039555,
    "page": 23,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "monero-project/monero",
      "stars": 9138,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0458984375,
          "content": ".git* export-ignore\nversion.cmake export-subst\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.138671875,
          "content": ".DS_Store\n/doc\n/build\n/tags\nlog/\n\n# vim swap files\n*.swp\n*.swo\nTAGS\n!TAGS/\ntags\n!tags/\ngtags.files\nGTAGS\nGRTAGS\nGPATH\ncscope.files\ncscope.out\ncscope.in.out\ncscope.po.out\n\nexternal/miniupnpc/Makefile\nminiupnpcstrings.h\nversion/\nClangBuildAnalyzerSession.txt\n\n# guix\n/guix\n\n# Created by https://www.gitignore.io\n\n### C++ ###\n# Compiled Object files\n*.slo\n*.lo\n*.o\n*.obj\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n*.dll\n\n# Fortran module files\n*.mod\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n*.lib\n\n# Executables\n*.exe\n*.out\n*.app\n\n\n### CMake ###\nCMakeCache.txt\nCMakeFiles\ncmake_install.cmake\ninstall_manifest.txt\ncmake-build-debug/\n\n### Linux ###\n*~\n\n# KDE directory preferences\n.directory\n\n### VSCode ###\n.vscode/\n\n### Eclipse ###\n*.pydevproject\n.metadata\n.gradle\nbin/\ntmp/\n*.tmp\n*.bak\n*.swp\n*~.nib\nlocal.properties\n.settings/\n.loadpath\n\n# External tool builders\n.externalToolBuilders/\n\n# Locally stored \"Eclipse launch configurations\"\n*.launch\n\n# CDT-specific\n.cproject\n\n# PDT-specific\n.buildpath\n\n# Netbeans-specific\nnbproject\n\n# sbteclipse plugin\n.target\n\n# TeXlipse plugin\n.texlipse\n.idea/\n\n/testnet\n\n__pycache__/\n*.pyc\n*.log\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.53515625,
          "content": "[submodule \"external/miniupnp\"]\n\tpath = external/miniupnp\n\turl = https://github.com/miniupnp/miniupnp\n[submodule \"external/rapidjson\"]\n\tpath = external/rapidjson\n\turl = https://github.com/Tencent/rapidjson\n[submodule \"external/trezor-common\"]\n\tpath = external/trezor-common\n\turl = https://github.com/trezor/trezor-common.git\n[submodule \"external/randomx\"]\n\tpath = external/randomx\n\turl = https://github.com/tevador/RandomX\n[submodule \"external/supercop\"]\n\tpath = external/supercop\n\turl = https://github.com/monero-project/supercop\n\tbranch = monero\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 45.9296875,
          "content": "# Copyright (c) 2014-2024, The Monero Project\n#\n# All rights reserved.\n#\n# Redistribution and use in source and binary forms, with or without modification, are\n# permitted provided that the following conditions are met:\n#\n# 1. Redistributions of source code must retain the above copyright notice, this list of\n#    conditions and the following disclaimer.\n#\n# 2. Redistributions in binary form must reproduce the above copyright notice, this list\n#    of conditions and the following disclaimer in the documentation and/or other\n#    materials provided with the distribution.\n#\n# 3. Neither the name of the copyright holder nor the names of its contributors may be\n#    used to endorse or promote products derived from this software without specific\n#    prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\n# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL\n# THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n# THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n#\n# Parts of this file are originally copyright (c) 2012-2013 The Cryptonote developers\n\ncmake_minimum_required(VERSION 3.5)\nmessage(STATUS \"CMake version ${CMAKE_VERSION}\")\n\nset(CMAKE_EXPORT_COMPILE_COMMANDS ON)\n\nlist(INSERT CMAKE_MODULE_PATH 0\n  \"${CMAKE_CURRENT_SOURCE_DIR}/cmake\")\ninclude(CheckCCompilerFlag)\ninclude(CheckCXXCompilerFlag)\ninclude(CheckLinkerFlag)\ninclude(CheckLibraryExists)\ninclude(CheckFunctionExists)\nif (POLICY CMP0148)\n    cmake_policy(SET CMP0148 OLD) # https://cmake.org/cmake/help/latest/policy/CMP0148.html\nendif()\ninclude(FindPythonInterp)\n\nif (IOS)\n    INCLUDE(CmakeLists_IOS.txt)\nendif()\n\nproject(monero)\n\noption (USE_CCACHE \"Use ccache if a usable instance is found\" ON)\nif (USE_CCACHE)\n\tinclude(FindCcache) # Has to be included after the project() macro, to be able to read the CXX variable.\nelse()\n\tmessage(STATUS \"ccache deselected\")\nendif()\noption (USE_COMPILATION_TIME_PROFILER \"Use compilation time profiler (for CLang >= 9 only)\" OFF)\nif (USE_COMPILATION_TIME_PROFILER)\n\tif (NOT \"${CMAKE_CXX_COMPILER_ID}\" MATCHES \"Clang\")\n\t\tmessage(FATAL_ERROR \"The flag USE_COMPILATION_TIME_PROFILER is meant to be set only for CLang compiler!\")\n\tendif()\n\tadd_compile_options(\"-ftime-trace\")\nendif()\n\nif (${CMAKE_VERSION} VERSION_GREATER \"3.0.0\" AND CMAKE_MAKE_PROGRAM MATCHES \"ninja\")\n  set(MONERO_PARALLEL_COMPILE_JOBS \"\" CACHE STRING \"The maximum number of concurrent compilation jobs.\")\n  if (MONERO_PARALLEL_COMPILE_JOBS)\n    set_property(GLOBAL APPEND PROPERTY JOB_POOLS compile_job_pool=${MONERO_PARALLEL_COMPILE_JOBS})\n    set(CMAKE_JOB_POOL_COMPILE compile_job_pool)\n  endif ()\n\n  set(MONERO_PARALLEL_LINK_JOBS \"\" CACHE STRING \"The maximum number of concurrent link jobs.\")\n  if (MONERO_PARALLEL_LINK_JOBS)\n    set_property(GLOBAL APPEND PROPERTY JOB_POOLS link_job_pool=${MONERO_PARALLEL_LINK_JOBS})\n    set(CMAKE_JOB_POOL_LINK link_job_pool)\n  endif ()\nendif ()\n  \noption (USE_CLANG_TIDY_C   \"Lint the code with clang-tidy - variant C\"   OFF)\noption (USE_CLANG_TIDY_CXX \"Lint the code with clang-tidy - variant C++\" OFF)\nif (USE_CLANG_TIDY_C AND USE_CLANG_TIDY_CXX)\n\tmessage(FATAL_ERROR \"Enabling both USE_CLANG_TIDY_C and USE_CLANG_TIDY_CXX simultaneously crashes clang-tidy.\")\nendif()\nif (USE_CLANG_TIDY_C OR USE_CLANG_TIDY_CXX)\n\tinclude(SetClangTidy)\nendif()\nif (USE_CLANG_TIDY_C)\n\tmonero_clang_tidy(\"C\")\nelseif (USE_CLANG_TIDY_CXX)\n\tmonero_clang_tidy(\"CXX\")\nendif()\n\nenable_language(C ASM)\n\n# Require C11/C++11 and disable extensions for all targets\nset(CMAKE_C_STANDARD 11)\nset(CMAKE_C_STANDARD_REQUIRED ON)\nset(CMAKE_C_EXTENSIONS OFF)\nset(CMAKE_CXX_STANDARD 17)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_CXX_EXTENSIONS OFF)\n\nfunction (die msg)\n  if (NOT WIN32)\n    string(ASCII 27 Esc)\n    set(ColourReset \"${Esc}[m\")\n    set(BoldRed     \"${Esc}[1;31m\")\n  else ()\n    set(ColourReset \"\")\n    set(BoldRed     \"\")\n  endif ()\n\n  message(FATAL_ERROR \"${BoldRed}${msg}${ColourReset}\")\nendfunction ()\n\nfunction (add_c_flag_if_supported flag var)\n  # Prepending the flag with -Werror will only add the flag,\n  # if it doesn't result in generation of a warning of using a flag unknown to the compiler.\n  set(TMP \"-Werror ${flag}\")\n  string(REGEX REPLACE \"[- ]\" \"_\" supported ${TMP}_c)\n  check_c_compiler_flag(${TMP} ${supported})\n  if(${${supported}})\n    set(${var} \"${${var}} ${flag}\" PARENT_SCOPE)\n  endif()\nendfunction()\n\nfunction (add_cxx_flag_if_supported flag var)\n  set(TMP \"-Werror ${flag}\")\n  string(REGEX REPLACE \"[- ]\" \"_\" supported ${TMP}_cxx)\n  check_cxx_compiler_flag(${TMP} ${supported})\n  if(${${supported}})\n    set(${var} \"${${var}} ${flag}\" PARENT_SCOPE)\n  endif()\nendfunction()\n\nfunction (add_linker_flag_if_supported flag var)\n  string(REPLACE \"-\" \"_\" supported ${flag}_ld)\n  string(REPLACE \",\" \"_\" supported ${flag}_ld)\n  check_linker_flag(${flag} ${supported})\n  if(${${supported}})\n    set(${var} \"${${var}} ${flag}\" PARENT_SCOPE)\n  endif()\nendfunction()\n\nfunction (add_definition_if_function_found function var)\n  string(REPLACE \"-\" \"_\" supported ${function}_function)\n  check_function_exists(${function} ${supported})\n  if(${${supported}})\n    add_definitions(\"-D${var}\")\n  endif()\nendfunction()\n\nfunction (add_definition_if_library_exists library function header var)\n  string(REPLACE \"-\" \"_\" supported ${function}_library)\n  check_library_exists(${library} ${function} ${header} ${supported})\n  if(${${supported}})\n    add_definitions(\"-D${var}\")\n  endif()\nendfunction()\n\noption(RELINK_TARGETS \"Relink targets, when just a dependant .so changed, but not its header?\" OFF)\nfunction (monero_set_target_no_relink target)\n  if (RELINK_TARGETS MATCHES OFF)\n    # Will not relink the target, when just its dependant .so has changed, but not it's interface\n    set_target_properties(\"${target}\" PROPERTIES LINK_DEPENDS_NO_SHARED true)\n  endif()\nendfunction()\n\noption(STRIP_TARGETS \"Strip symbols from targets?\" OFF)\nfunction (monero_set_target_strip target)\n  if (STRIP_TARGETS)\n    set_target_properties(\"${target}\" PROPERTIES LINK_FLAGS_RELEASE -s)\n    set_target_properties(\"${target}\" PROPERTIES LINK_FLAGS_DEBUG -s)\n    # Stripping from Debug might make sense if you're low on disk space, but want to test if debug version builds properly.\n  endif()\nendfunction()\n\nfunction (monero_add_minimal_executable name)\n  source_group(\"${name}\"\n    FILES\n      ${ARGN})\n\n  add_executable(\"${name}\"\n    ${ARGN})\n    monero_set_target_no_relink(\"${name}\")\n    monero_set_target_strip    (\"${name}\")\nendfunction()\n\n# Finds all headers in a directory and its subdirs, to be able to search for them and autosave in IDEs.\n#\n# Parameters:\n# - headers_found:    Output variable, which will hold the found headers\n# - module_root_dir:  The search path for the headers. Typically it will be the module's root dir, so \"${CMAKE_CURRENT_SOURCE_DIR}\" or a derivative of it.\nmacro (monero_find_all_headers headers_found module_root_dir)\n  file(GLOB ${headers_found}\n           \"${module_root_dir}/*.h*\"    # h* will include hpps as well.\n           \"${module_root_dir}/**/*.h*\" # Any number of subdirs will be included.\n           \"${module_root_dir}/*.inl\"   # .inl is typically template code and is being treated as headers (it's being included).\n           \"${module_root_dir}/**/*.inl\"\n)\nendmacro()\n\n# Function to forbid undefined symbols and also verify\n# 1) Test project with all types of libraries and without undefined symbols can compile successfully\n# 2) Test project with all types of libraries and undefined symbols can not compile successfully\nfunction(forbid_undefined_symbols)\n  unset(TMP)\n  # https://www.unix.com/man-page/linux/1/ld, --no-undefined, Report unresolved symbol references from regular object files.\n  add_linker_flag_if_supported(-Wl,--no-undefined TMP)\n  # https://www.unix.com/man-page/osx/1/ld/, -undefined, Specifies how undefined symbols are to be treated.\n  add_linker_flag_if_supported(-Wl,-undefined,error TMP)\n  string(APPEND CMAKE_SHARED_LINKER_FLAGS ${TMP})\n  string(APPEND CMAKE_MODULE_LINKER_FLAGS ${TMP})\n  set(CMAKE_SHARED_LINKER_FLAGS ${CMAKE_SHARED_LINKER_FLAGS} PARENT_SCOPE)\n  set(CMAKE_MODULE_LINKER_FLAGS ${CMAKE_MODULE_LINKER_FLAGS} PARENT_SCOPE)\n  set(TEST_PROJECT \"${CMAKE_BINARY_DIR}/${CMAKE_FILES_DIRECTORY}/CMakeTmp/test_project\")\n  foreach(EXPECT IN ITEMS TRUE FALSE)\n    file(REMOVE_RECURSE \"${TEST_PROJECT}\")\n    file(MAKE_DIRECTORY \"${TEST_PROJECT}\")\n    file(WRITE \"${TEST_PROJECT}/CMakeLists.txt\"\n      [=[\ncmake_minimum_required(VERSION 3.5)\nproject(test)\noption(EXPECT_SUCCESS \"\" ON)\nfile(WRITE \"${CMAKE_SOURCE_DIR}/incorrect_source.cpp\" \"void undefined_symbol(); void symbol() { undefined_symbol(); }\")\nif (EXPECT_SUCCESS)\n  file(APPEND \"${CMAKE_SOURCE_DIR}/incorrect_source.cpp\" \" void undefined_symbol() {}; \")\nendif()\nadd_library(l0 SHARED incorrect_source.cpp)\nadd_library(l1 MODULE incorrect_source.cpp)\nadd_library(l2 STATIC incorrect_source.cpp)\nadd_library(l3 OBJECT incorrect_source.cpp)\n]=]\n    )\n    try_compile(SUCCESS \"${TEST_PROJECT}/build\" \"${TEST_PROJECT}\" test\n      CMAKE_FLAGS\n      \"-DCMAKE_SHARED_LINKER_FLAGS=${CMAKE_SHARED_LINKER_FLAGS}\"\n      \"-DCMAKE_MODULE_LINKER_FLAGS=${CMAKE_MODULE_LINKER_FLAGS}\"\n      \"-DEXPECT_SUCCESS=${EXPECT}\"\n    )\n    if (NOT ${SUCCESS} STREQUAL ${EXPECT})\n      message(FATAL_ERROR \"Undefined symbols test failure: expect(${EXPECT}), success(${SUCCESS})\")\n    endif()\n    file(REMOVE_RECURSE \"${TEST_PROJECT}\")\n  endforeach()\nendfunction()\nif (NOT (CMAKE_SYSTEM_NAME MATCHES \"kOpenBSD.*|OpenBSD.*\") AND NOT OSSFUZZ)\n  forbid_undefined_symbols()\nendif()\n\nif (MINGW)\n  function(export_all_symbols)\n    unset(TMP)\n    add_linker_flag_if_supported(-Wl,--export-all-symbols TMP)\n    string(APPEND CMAKE_SHARED_LINKER_FLAGS ${TMP})\n    string(APPEND CMAKE_MODULE_LINKER_FLAGS ${TMP})\n    set(CMAKE_SHARED_LINKER_FLAGS ${CMAKE_SHARED_LINKER_FLAGS} PARENT_SCOPE)\n    set(CMAKE_MODULE_LINKER_FLAGS ${CMAKE_MODULE_LINKER_FLAGS} PARENT_SCOPE)\n  endfunction()\n  export_all_symbols()\nendif()\n\nif(NOT CMAKE_BUILD_TYPE)\n  set(CMAKE_BUILD_TYPE Release CACHE STRING \"Build type\" FORCE)\n  message(STATUS \"Setting default build type: ${CMAKE_BUILD_TYPE}\")\nendif()\nstring(TOLOWER ${CMAKE_BUILD_TYPE} CMAKE_BUILD_TYPE_LOWER)\n\n# ARCH defines the target architecture, either by an explicit identifier or\n# one of the following two keywords. By default, ARCH a value of 'native':\n# target arch = host arch, binary is not portable. When ARCH is set to the\n# string 'default', no -march arg is passed, which creates a binary that is\n# portable across processors in the same family as host processor.  In cases\n# when ARCH is not set to an explicit identifier, cmake's builtin is used\n# to identify the target architecture, to direct logic in this cmake script.\n# Since ARCH is a cached variable, it will not be set on first cmake invocation.\nif (NOT ARCH_ID)\nif (NOT ARCH OR ARCH STREQUAL \"\" OR ARCH STREQUAL \"native\" OR ARCH STREQUAL \"default\")\n  if(CMAKE_SYSTEM_PROCESSOR STREQUAL \"\")\n    set(CMAKE_SYSTEM_PROCESSOR ${CMAKE_HOST_SYSTEM_PROCESSOR})\n  endif()\n  # On Windows, CMake sets CMAKE{_HOST,}_SYSTEM_PROCESSOR to the value of the\n  # PROCESSOR_ARCHITECTURE environment variable. On some systems it may be set to\n  # AMD64. Lowercase it to ensure checks for \"x86_64\" or \"amd64\" work as expected.\n  string(TOLOWER \"${CMAKE_SYSTEM_PROCESSOR}\" ARCH_ID)\nelse()\n  set(ARCH_ID \"${ARCH}\")\nendif()\nendif()\nstring(TOLOWER \"${ARCH_ID}\" ARM_ID)\nstring(SUBSTRING \"${ARM_ID}\" 0 3 ARM_TEST)\nif (ARM_TEST STREQUAL \"arm\")\n  set(ARM 1)\n  string(SUBSTRING \"${ARM_ID}\" 0 5 ARM_TEST)\n  if (ARM_TEST STREQUAL \"armv6\")\n    set(ARM6 1)\n  endif()\n  if (ARM_TEST STREQUAL \"armv7\")\n    set(ARM7 1)\n  endif()\nendif()\n\nif (ARM_ID STREQUAL \"aarch64\" OR ARM_ID STREQUAL \"arm64\" OR ARM_ID STREQUAL \"armv8-a\")\n  set(ARM 1)\n  set(ARM8 1)\n  set(ARCH \"armv8-a\")\nendif()\n\nif(ARCH_ID STREQUAL \"ppc64le\")\n  set(PPC64LE 1)\n  set(PPC64   0)\n  set(PPC     0)\nendif()\n\nif(ARCH_ID STREQUAL \"powerpc64\" OR ARCH_ID STREQUAL \"ppc64\")\n  set(PPC64LE 0)\n  set(PPC64   1)\n  set(PPC     0)\nendif()\n\nif(ARCH_ID STREQUAL \"powerpc\" OR ARCH_ID STREQUAL \"ppc\")\n  set(PPC64LE 0)\n  set(PPC64   0)\n  set(PPC     1)\nendif()\n\nif(ARCH_ID STREQUAL \"s390x\")\n  set(S390X 1)\nendif()\n\nif(ARCH_ID STREQUAL \"riscv64\")\nset(RISCV   1)\nset(RISCV64 1)\nendif()\n\nif(ARCH_ID STREQUAL \"riscv32\")\nset(RISCV   1)\nset(RISCV32 1)\nendif()\n\nif(ARCH_ID STREQUAL \"loongarch64\")\nset(LOONGARCH   1)\nset(LOONGARCH64 1)\nendif()\n\nif(WIN32 OR ARM OR PPC64LE OR PPC64 OR PPC)\n  set(OPT_FLAGS_RELEASE \"-O2\")\nelse()\n  set(OPT_FLAGS_RELEASE \"-Ofast\")\nendif()\n\n# BUILD_TAG is used to select the build type to check for a new version\nif(BUILD_TAG)\n  message(STATUS \"Building build tag ${BUILD_TAG}\")\n  add_definitions(\"-DBUILD_TAG=${BUILD_TAG}\")\nelse()\n  message(STATUS \"Building without build tag\")\nendif()\n\nif(NOT MANUAL_SUBMODULES)\n  find_package(Git)\n  if(GIT_FOUND)\n    function (check_submodule relative_path)\n      execute_process(COMMAND git rev-parse \"HEAD\" WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/${relative_path} OUTPUT_VARIABLE localHead)\n      execute_process(COMMAND git rev-parse \"HEAD:${relative_path}\" WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} OUTPUT_VARIABLE checkedHead)\n      string(COMPARE EQUAL \"${localHead}\" \"${checkedHead}\" upToDate)\n      if (upToDate)\n        message(STATUS \"Submodule '${relative_path}' is up-to-date\")\n      else()\n        message(FATAL_ERROR \"Submodule '${relative_path}' is not up-to-date. Please update all submodules with\\ngit submodule update --init --force\\nor run cmake with -DMANUAL_SUBMODULES=1\\n\")\n      endif()\n    endfunction ()\n    \n    message(STATUS \"Checking submodules\")\n    check_submodule(external/miniupnp)\n    check_submodule(external/rapidjson)\n    check_submodule(external/trezor-common)\n    check_submodule(external/randomx)\n    check_submodule(external/supercop)\n  endif()\nendif()\n\nset(CMAKE_C_FLAGS_RELEASE \"-DNDEBUG ${OPT_FLAGS_RELEASE}\")\nset(CMAKE_CXX_FLAGS_RELEASE \"-DNDEBUG ${OPT_FLAGS_RELEASE}\")\n\noption(PER_BLOCK_CHECKPOINT \"Enable per-block checkpoint\" ON)\nif(PER_BLOCK_CHECKPOINT)\n  add_definitions(\"-DPER_BLOCK_CHECKPOINT\")\nendif()\n\nlist(INSERT CMAKE_MODULE_PATH 0\n  \"${CMAKE_SOURCE_DIR}/cmake\")\n\nif (NOT DEFINED ENV{DEVELOPER_LOCAL_TOOLS})\n  message(STATUS \"Could not find DEVELOPER_LOCAL_TOOLS in env (not required)\")\n  set(BOOST_IGNORE_SYSTEM_PATHS_DEFAULT OFF)\nelseif (\"$ENV{DEVELOPER_LOCAL_TOOLS}\" EQUAL 1)\n  message(STATUS \"Found: env DEVELOPER_LOCAL_TOOLS = 1\")\n  set(BOOST_IGNORE_SYSTEM_PATHS_DEFAULT ON)\nelse()\n  message(STATUS \"Found: env DEVELOPER_LOCAL_TOOLS = 0\")\n  set(BOOST_IGNORE_SYSTEM_PATHS_DEFAULT OFF)\nendif()\n\nmessage(STATUS \"BOOST_IGNORE_SYSTEM_PATHS defaults to ${BOOST_IGNORE_SYSTEM_PATHS_DEFAULT}\")\noption(BOOST_IGNORE_SYSTEM_PATHS \"Ignore boost system paths for local boost installation\" ${BOOST_IGNORE_SYSTEM_PATHS_DEFAULT})\n\nset_property(GLOBAL PROPERTY USE_FOLDERS ON)\nenable_testing()\n\noption(BUILD_DOCUMENTATION \"Build the Doxygen documentation.\" ON)\noption(BUILD_TESTS \"Build tests.\" OFF)\nif (CMAKE_BUILD_TYPE STREQUAL \"Debug\")\n  set(DEFAULT_BUILD_DEBUG_UTILITIES ON)\nelse()\n  set(DEFAULT_BUILD_DEBUG_UTILITIES OFF)\nendif()\noption(BUILD_DEBUG_UTILITIES \"Build debug utilities.\" ${DEFAULT_BUILD_DEBUG_UTILITIES})\n\nif(OSSFUZZ)\n  message(STATUS \"Using OSS-Fuzz fuzzing system\")\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -DOSSFUZZ\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -DOSSFUZZ\")\nendif()\n\n# Check whether we're on a 32-bit or 64-bit system\nif(CMAKE_SIZEOF_VOID_P EQUAL \"8\")\n  set(DEFAULT_BUILD_64 ON)\nelse()\n  set(DEFAULT_BUILD_64 OFF)\nendif()\noption(BUILD_64 \"Build for 64-bit? 'OFF' builds for 32-bit.\" ${DEFAULT_BUILD_64})\n\nif(BUILD_64)\n  set(ARCH_WIDTH \"64\")\nelse()\n  set(ARCH_WIDTH \"32\")\nendif()\nmessage(STATUS \"Building for a ${ARCH_WIDTH}-bit system\")\n\n# Check if we're on FreeBSD so we can exclude the local miniupnpc (it should be installed from ports instead)\n# CMAKE_SYSTEM_NAME checks are commonly known, but specifically taken from libsdl's CMakeLists\nif(CMAKE_SYSTEM_NAME MATCHES \"kFreeBSD.*|FreeBSD\")\n  set(FREEBSD TRUE)\nendif()\n\n# Check if we're on DragonFly BSD. See the README.md for build instructions.\nif(CMAKE_SYSTEM_NAME MATCHES \"DragonFly.*\")\n  set(DRAGONFLY TRUE)\nendif()\n\n# Check if we're on OpenBSD. See the README.md for build instructions.\nif(CMAKE_SYSTEM_NAME MATCHES \"kOpenBSD.*|OpenBSD.*\")\n  set(OPENBSD TRUE)\nelseif(CMAKE_SYSTEM_NAME MATCHES \"kNetBSD.*|NetBSD.*\")\n  set(NETBSD TRUE)\nelseif(CMAKE_SYSTEM_NAME MATCHES \".*BSDI.*\")\n  set(BSDI TRUE)\nendif()\n\ninclude_directories(external/rapidjson/include external/easylogging++ src contrib/epee/include external external/supercop/include)\n\nif(APPLE)\n  cmake_policy(SET CMP0042 NEW)\nendif()\n\nif(MSVC OR MINGW)\n  set(DEFAULT_STATIC true)\nelse()\n  set(DEFAULT_STATIC false)\nendif()\noption(STATIC \"Link libraries statically\" ${DEFAULT_STATIC})\n\n# This is a CMake built-in switch that concerns internal libraries\nset(BUILD_SHARED_LIBS_DEFAULT OFF)\nif (NOT STATIC AND CMAKE_BUILD_TYPE_LOWER STREQUAL \"debug\")\n\tset(BUILD_SHARED_LIBS_DEFAULT ON)\nendif()\noption(BUILD_SHARED_LIBS \"Build internal libraries as shared\" ${BUILD_SHARED_LIBS_DEFAULT})\n\nif (BUILD_SHARED_LIBS)\n  message(STATUS \"Building internal libraries with position independent code\")\n  add_definitions(\"-DBUILD_SHARED_LIBS\")\nelse()\n  message(STATUS \"Building internal libraries as static\")\nendif()\nset(PIC_FLAG \"-fPIC\")\n\nif(MINGW)\n  string(REGEX MATCH \"^[^/]:/[^/]*\" msys2_install_path \"${CMAKE_C_COMPILER}\")\n  message(STATUS \"MSYS location: ${msys2_install_path}\")\n  set(CMAKE_INCLUDE_PATH \"${msys2_install_path}/mingw${ARCH_WIDTH}/include\")\n  # This is necessary because otherwise CMake will make Boost libraries -lfoo\n  # rather than a full path. Unfortunately, this makes the shared libraries get\n  # linked due to a bug in CMake which misses putting -static flags around the\n  # -lfoo arguments.\n  set(DEFLIB ${msys2_install_path}/mingw${ARCH_WIDTH}/lib)\n  list(REMOVE_ITEM CMAKE_C_IMPLICIT_LINK_DIRECTORIES ${DEFLIB})\n  list(REMOVE_ITEM CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES ${DEFLIB})\nendif()\n\nif(STATIC)\n  if(MSVC)\n    set(CMAKE_FIND_LIBRARY_SUFFIXES .lib .dll.a .a ${CMAKE_FIND_LIBRARY_SUFFIXES})\n  else()\n    set(CMAKE_FIND_LIBRARY_SUFFIXES .a ${CMAKE_FIND_LIBRARY_SUFFIXES})\n  endif()\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -DZMQ_STATIC\")\nendif()\n\noption(SANITIZE \"Use ASAN memory sanitizer\" OFF)\nif(SANITIZE)\n  if (MSVC)\n    message(FATAL_ERROR \"Cannot sanitize with MSVC\")\n  else()\n    message(STATUS \"Using ASAN\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsanitize=address\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=address\")\n  endif()\nendif()\n\n# Set default blockchain storage location:\n# memory was the default in Cryptonote before Monero implemented LMDB, it still works but is unnecessary.\n# set(DATABASE memory)\nset(DATABASE lmdb)\nmessage(STATUS \"Using LMDB as default DB type\")\nset(BLOCKCHAIN_DB DB_LMDB)\nadd_definitions(\"-DDEFAULT_DB_TYPE=\\\"lmdb\\\"\")\nadd_definitions(\"-DBLOCKCHAIN_DB=${BLOCKCHAIN_DB}\")\n\n# Can't install hook in static build on OSX, because OSX linker does not support --wrap\n# On ARM, having libunwind package (with .so's only) installed breaks static link.\n# When possible, avoid stack tracing using libunwind in favor of using easylogging++.\nif (APPLE OR NETBSD)\n  set(DEFAULT_STACK_TRACE OFF)\n  set(LIBUNWIND_LIBRARIES \"\")\nelseif (DEPENDS AND NOT LINUX)\n  set(DEFAULT_STACK_TRACE OFF)\n  set(LIBUNWIND_LIBRARIES \"\")\nelseif(CMAKE_C_COMPILER_ID STREQUAL \"GNU\" AND NOT MINGW)\n  set(DEFAULT_STACK_TRACE ON)\n  set(STACK_TRACE_LIB \"easylogging++\") # for diag output only\n  set(LIBUNWIND_LIBRARIES \"\")\nelseif (ARM)\n  set(DEFAULT_STACK_TRACE OFF)\n  set(LIBUNWIND_LIBRARIES \"\")\nelse()\n  find_package(Libunwind)\n  if(LIBUNWIND_FOUND)\n    set(DEFAULT_STACK_TRACE ON)\n    set(STACK_TRACE_LIB \"libunwind\") # for diag output only\n  else()\n    set(DEFAULT_STACK_TRACE OFF)\n    set(LIBUNWIND_LIBRARIES \"\")\n  endif()\nendif()\n\noption(STACK_TRACE \"Install a hook that dumps stack on exception\" ${DEFAULT_STACK_TRACE})\n\nif(STACK_TRACE)\n  message(STATUS \"Stack trace on exception enabled (using ${STACK_TRACE_LIB})\")\nelse()\n  message(STATUS \"Stack trace on exception disabled\")\nendif()\n\nif (UNIX AND NOT APPLE)\n  # Note that at the time of this writing the -Wstrict-prototypes flag added below will make this fail\n  set(THREADS_PREFER_PTHREAD_FLAG ON)\n  find_package(Threads)\n  add_c_flag_if_supported(-pthread CMAKE_C_FLAGS)\n  add_cxx_flag_if_supported(-pthread CMAKE_CXX_FLAGS)\nendif()\n\n# Handle OpenSSL, used for sha256sum on binary updates and light wallet ssl http\nif (CMAKE_SYSTEM_NAME MATCHES \"(SunOS|Solaris)\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -pthreads\")\nendif ()\n\nif (APPLE AND NOT IOS)\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fvisibility=default\")\n  if (NOT OPENSSL_ROOT_DIR)\n      EXECUTE_PROCESS(COMMAND brew --prefix openssl\n        OUTPUT_VARIABLE OPENSSL_ROOT_DIR\n        OUTPUT_STRIP_TRAILING_WHITESPACE)\n    message(STATUS \"Using OpenSSL found at ${OPENSSL_ROOT_DIR}\")\n  endif()\nendif()\n\nfind_package(OpenSSL REQUIRED)\nmessage(STATUS \"Using OpenSSL include dir at ${OPENSSL_INCLUDE_DIR}\")\ninclude_directories(${OPENSSL_INCLUDE_DIR})\nif(STATIC AND NOT IOS)\n  if(UNIX)\n    set(OPENSSL_LIBRARIES \"${OPENSSL_LIBRARIES};${CMAKE_DL_LIBS};${CMAKE_THREAD_LIBS_INIT}\")\n  endif()\nendif()\n\nif (WIN32)\n  list(APPEND OPENSSL_LIBRARIES ws2_32 crypt32)\nendif()\n\nfind_package(HIDAPI)\n\nadd_definition_if_library_exists(c memset_s \"string.h\" HAVE_MEMSET_S)\nadd_definition_if_library_exists(c explicit_bzero \"strings.h\" HAVE_EXPLICIT_BZERO)\nadd_definition_if_function_found(strptime HAVE_STRPTIME)\n\nadd_definitions(-DAUTO_INITIALIZE_EASYLOGGINGPP)\n\nset(MONERO_GENERATED_HEADERS_DIR \"${CMAKE_CURRENT_BINARY_DIR}/generated_include\")\ninclude_directories(${MONERO_GENERATED_HEADERS_DIR})\n\n# As of OpenBSD 6.8, -march=<anything> breaks the build\nfunction(set_default_arch)\n  if (OPENBSD)\n    set(ARCH default)\n  else()\n    set(ARCH native)\n  endif()\n\n  set(ARCH ${ARCH} CACHE STRING \"CPU to build for: -march value or 'default' to not pass -march at all\")\nendfunction()\n\nif (NOT (MSVC OR ARCH))\n    set_default_arch()\nendif()\n\noption(COVERAGE \"Enable profiling for test coverage report\" OFF)\nif(COVERAGE)\n    message(STATUS \"Building with profiling for test coverage report\")\nendif()\nmacro (monero_enable_coverage)\n  if(COVERAGE)\n    foreach(COV_FLAG -fprofile-arcs -ftest-coverage --coverage)\n      set(CMAKE_C_FLAGS   \"${CMAKE_C_FLAGS}   ${COV_FLAG}\")\n      set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${COV_FLAG}\")\n    endforeach()\n  endif()\nendmacro()\n\nfunction (monero_add_library name)\n    monero_add_library_with_deps(NAME \"${name}\" SOURCES ${ARGN})\nendfunction()\n\nfunction (monero_add_library_with_deps)\n  cmake_parse_arguments(MONERO_ADD_LIBRARY \"\" \"NAME\" \"DEPENDS;SOURCES\" ${ARGN})\n  source_group(\"${MONERO_ADD_LIBRARY_NAME}\" FILES ${MONERO_ADD_LIBRARY_SOURCES})\n\n  # Define a (\"virtual\") object library and an actual library that links those\n  # objects together. The virtual libraries can be arbitrarily combined to link\n  # any subset of objects into one library archive. This is used for releasing\n  # libwallet, which combines multiple components.\n  set(objlib obj_${MONERO_ADD_LIBRARY_NAME})\n  add_library(${objlib} OBJECT ${MONERO_ADD_LIBRARY_SOURCES})\n  add_library(\"${MONERO_ADD_LIBRARY_NAME}\" $<TARGET_OBJECTS:${objlib}>)\n  monero_set_target_no_relink(\"${MONERO_ADD_LIBRARY_NAME}\")\n  monero_set_target_strip    (\"${MONERO_ADD_LIBRARY_NAME}\")\n  if (MONERO_ADD_LIBRARY_DEPENDS)\n    add_dependencies(${objlib} ${MONERO_ADD_LIBRARY_DEPENDS})\n  endif()\n  set_property(TARGET \"${MONERO_ADD_LIBRARY_NAME}\" PROPERTY FOLDER \"libs\")\n  target_compile_definitions(${objlib}\n    PRIVATE $<TARGET_PROPERTY:${MONERO_ADD_LIBRARY_NAME},INTERFACE_COMPILE_DEFINITIONS>)\nendfunction ()\n\n# Generate header for embedded translations\n# Generate header for embedded translations, use target toolchain if depends, otherwise use the\n# lrelease and lupdate binaries from the host\ninclude(ExternalProject)\nExternalProject_Add(generate_translations_header\n  SOURCE_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/translations\"\n  BINARY_DIR \"${CMAKE_CURRENT_BINARY_DIR}/translations\"\n  STAMP_DIR ${LRELEASE_PATH}\n  CMAKE_ARGS -DLRELEASE_PATH=${LRELEASE_PATH}\n  INSTALL_COMMAND ${CMAKE_COMMAND} -E echo \"\")\ninclude_directories(\"${CMAKE_CURRENT_BINARY_DIR}/translations\")\nadd_subdirectory(external)\n\n# Final setup for libunbound\ninclude_directories(${UNBOUND_INCLUDE_DIR})\n\n# Final setup for easylogging++\ninclude_directories(${EASYLOGGING_INCLUDE})\nlink_directories(${EASYLOGGING_LIBRARY_DIRS})\n\n# Final setup for liblmdb\ninclude_directories(${LMDB_INCLUDE})\n\n# Final setup for libunwind\ninclude_directories(${LIBUNWIND_INCLUDE})\nlink_directories(${LIBUNWIND_LIBRARY_DIRS})\n\n# Final setup for hid\nif (HIDAPI_FOUND) \n  message(STATUS \"Using HIDAPI include dir at ${HIDAPI_INCLUDE_DIR}\")\n  add_definitions(-DHAVE_HIDAPI)\n  include_directories(${HIDAPI_INCLUDE_DIR})\n  link_directories(${LIBHIDAPI_LIBRARY_DIRS})\nelse()\n  message(STATUS \"Could not find HIDAPI\")\nendif()\n\n# Trezor support check\ninclude(CheckTrezor)\n\nif(MSVC)\n  add_definitions(\"/bigobj /MP /W3 /GS- /D_CRT_SECURE_NO_WARNINGS /wd4996 /wd4345 /D_WIN32_WINNT=0x0600 /DWIN32_LEAN_AND_MEAN /DGTEST_HAS_TR1_TUPLE=0 /D__SSE4_1__\")\n  # set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} /Dinline=__inline\")\n  set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} /STACK:10485760\")\n  if(STATIC)\n    foreach(VAR CMAKE_C_FLAGS_DEBUG CMAKE_CXX_FLAGS_DEBUG CMAKE_C_FLAGS_RELEASE CMAKE_CXX_FLAGS_RELEASE)\n      string(REPLACE \"/MD\" \"/MT\" ${VAR} \"${${VAR}}\")\n    endforeach()\n  endif()\nelse()\n  include(TestCXXAcceptsFlag)\n  message(STATUS \"Building on ${CMAKE_SYSTEM_PROCESSOR} for ${ARCH}\")\n  if(ARCH STREQUAL \"default\")\n    set(ARCH_FLAG \"\")\n  elseif(PPC64LE)\n    set(ARCH_FLAG \"-mcpu=power8\")\n  elseif(PPC64)\n    set(ARCH_FLAG \"-mcpu=970\")\n  elseif(PPC)\n    set(ARCH_FLAG \"-mcpu=7400\")\n  elseif(IOS AND ARCH STREQUAL \"arm64\")\n    message(STATUS \"IOS: Changing arch from arm64 to armv8\")\n    set(ARCH_FLAG \"-march=armv8\")\n  else()\n    set(ARCH_FLAG \"-march=${ARCH}\")\n    if(ARCH STREQUAL \"native\")\n      check_c_compiler_flag(-march=native CC_SUPPORTS_MARCH_NATIVE)\n      if (NOT CC_SUPPORTS_MARCH_NATIVE)\n        check_c_compiler_flag(-mtune=native CC_SUPPORTS_MTUNE_NATIVE)\n        if (CC_SUPPORTS_MTUNE_NATIVE)\n          set(ARCH_FLAG \"-mtune=${ARCH}\")\n        else()\n          set(ARCH_FLAG \"\")\n        endif()\n      endif()\n    endif()\n  endif()\n\n  option(NO_AES \"Explicitly disable AES support\" ${NO_AES})\n\n  if(NO_AES)\n    message(STATUS \"AES support explicitly disabled\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -DNO_AES\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -DNO_AES\")\n  elseif(NOT ARM AND NOT PPC64LE AND NOT PPC64 AND NOT PPC AND NOT S390X AND NOT RISCV AND NOT LOONGARCH)\n    message(STATUS \"AES support enabled\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -maes\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -maes\")\n  elseif(PPC64LE OR PPC64 OR PPC)\n    message(STATUS \"AES support not available on POWER\")\n  elseif(S390X)\n    message(STATUS \"AES support not available on s390x\")\n  elseif(RISCV)\n    message(STATUS \"AES support not available on RISC-V\")\n  elseif(LOONGARCH)\n    message(STATUS \"AES support not available on LOONGARCH\")\n  elseif(ARM6)\n    message(STATUS \"AES support not available on ARMv6\")\n  elseif(ARM7)\n    message(STATUS \"AES support not available on ARMv7\")\n  elseif(ARM8)\n    CHECK_CXX_ACCEPTS_FLAG(\"-march=${ARCH}+crypto\" ARCH_PLUS_CRYPTO)\n    if(ARCH_PLUS_CRYPTO)\n      message(STATUS \"Crypto extensions enabled for ARMv8\")\n      set(ARCH_FLAG \"-march=${ARCH}+crypto\")\n    else()\n      message(STATUS \"Crypto extensions unavailable on your ARMv8 device\")\n    endif()\n  else()\n    message(STATUS \"AES support disabled\")\n  endif()\n\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${ARCH_FLAG}\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${ARCH_FLAG}\")\n\n  set(WARNINGS \"-Wall -Wextra -Wpointer-arith -Wundef -Wvla -Wwrite-strings -Wno-error=extra -Wno-error=deprecated-declarations -Wno-unused-parameter -Wno-error=unused-variable -Wno-error=undef -Wno-error=uninitialized\")\n  if(CMAKE_C_COMPILER_ID MATCHES \"Clang\" OR CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")\n    if(ARM)\n      set(WARNINGS \"${WARNINGS} -Wno-error=inline-asm\")\n    endif()\n  else()\n    set(WARNINGS \"${WARNINGS} -Wlogical-op -Wno-error=maybe-uninitialized -Wno-error=cpp\")\n  endif()\n  if(MINGW)\n    set(WARNINGS \"${WARNINGS} -Wno-error=unused-value -Wno-error=unused-but-set-variable\")\n    set(MINGW_FLAG \"${MINGW_FLAG} -DWIN32_LEAN_AND_MEAN\")\n    set(Boost_THREADAPI win32)\n    # mingw doesn't support LTO (multiple definition errors at link time)\n    set(USE_LTO_DEFAULT false)\n    set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -Wl,--stack,10485760\")\n    if(NOT BUILD_64)\n      add_definitions(-DWINVER=0x0600 -D_WIN32_WINNT=0x0600)\n    endif()\n  endif()\n  set(C_WARNINGS \"-Waggregate-return -Wnested-externs -Wold-style-definition -Wstrict-prototypes\")\n  set(CXX_WARNINGS \"-Wno-reorder -Wno-missing-field-initializers\")\n  try_compile(STATIC_ASSERT_RES \"${CMAKE_CURRENT_BINARY_DIR}/static-assert\" \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/test-static-assert.c\" CMAKE_FLAGS -DCMAKE_C_STANDARD=11)\n  if(STATIC_ASSERT_RES)\n    set(STATIC_ASSERT_FLAG \"\")\n  else()\n    set(STATIC_ASSERT_FLAG \"-Dstatic_assert=_Static_assert\")\n  endif()\n\n  try_compile(STATIC_ASSERT_CPP_RES \"${CMAKE_CURRENT_BINARY_DIR}/static-assert\" \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/test-static-assert.cpp\" CMAKE_FLAGS -DCMAKE_CXX_STANDARD=11)\n  if(STATIC_ASSERT_CPP_RES)\n    set(STATIC_ASSERT_CPP_FLAG \"\")\n  else()\n    set(STATIC_ASSERT_CPP_FLAG \"-Dstatic_assert=_Static_assert\")\n  endif()\n\n  monero_enable_coverage()\n  # With GCC 6.1.1 the compiled binary malfunctions due to aliasing. Until that\n  # is fixed in the code (Issue #847), force compiler to be conservative.\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fno-strict-aliasing\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-strict-aliasing\")\n\n  # if those don't work for your compiler, single it out where appropriate\n  if(CMAKE_BUILD_TYPE STREQUAL \"Release\" AND NOT OPENBSD)\n    set(C_SECURITY_FLAGS \"${C_SECURITY_FLAGS} -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1\")\n    set(CXX_SECURITY_FLAGS \"${CXX_SECURITY_FLAGS} -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1\")\n  endif()\n\n  # warnings\n  add_c_flag_if_supported(-Wformat C_SECURITY_FLAGS)\n  add_cxx_flag_if_supported(-Wformat CXX_SECURITY_FLAGS)\n  add_c_flag_if_supported(-Wformat-security C_SECURITY_FLAGS)\n  add_cxx_flag_if_supported(-Wformat-security CXX_SECURITY_FLAGS)\n\n  # -fstack-protector\n  if (NOT OPENBSD AND NOT (WIN32 AND (CMAKE_C_COMPILER_ID STREQUAL \"GNU\" AND CMAKE_C_COMPILER_VERSION VERSION_LESS 9.1)))\n    add_c_flag_if_supported(-fstack-protector C_SECURITY_FLAGS)\n    add_cxx_flag_if_supported(-fstack-protector CXX_SECURITY_FLAGS)\n    add_c_flag_if_supported(-fstack-protector-strong C_SECURITY_FLAGS)\n    add_cxx_flag_if_supported(-fstack-protector-strong CXX_SECURITY_FLAGS)\n  endif()\n\n  # New in GCC 8.2\n  if (NOT OPENBSD AND NOT (WIN32 AND (CMAKE_C_COMPILER_ID STREQUAL \"GNU\" AND CMAKE_C_COMPILER_VERSION VERSION_LESS 9.1)))\n    add_c_flag_if_supported(-fcf-protection=full C_SECURITY_FLAGS)\n    add_cxx_flag_if_supported(-fcf-protection=full CXX_SECURITY_FLAGS)\n  endif()\n  if (NOT WIN32 AND NOT OPENBSD)\n    add_c_flag_if_supported(-fstack-clash-protection C_SECURITY_FLAGS)\n    add_cxx_flag_if_supported(-fstack-clash-protection CXX_SECURITY_FLAGS)\n  endif()\n\n  # Removed in GCC 9.1 (or before ?), but still accepted, so spams the output\n  if (NOT (CMAKE_C_COMPILER_ID STREQUAL \"GNU\" AND NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 9.1))\n    add_c_flag_if_supported(-mmitigate-rop C_SECURITY_FLAGS)\n    add_cxx_flag_if_supported(-mmitigate-rop CXX_SECURITY_FLAGS)\n  endif()\n\n  # linker\n  if (NOT SANITIZE AND NOT OSSFUZZ AND NOT (WIN32 AND (CMAKE_C_COMPILER_ID STREQUAL \"GNU\" AND (CMAKE_C_COMPILER_VERSION VERSION_LESS 9.1 OR NOT STATIC))))\n    # PIE executables randomly crash at startup with ASAN\n    # Windows binaries die on startup with PIE when compiled with GCC <9.x\n    # Windows dynamically-linked binaries die on startup with PIE regardless of GCC version\n    if (\"${CMAKE_CXX_COMPILER_ID}\" MATCHES \"Clang\")\n      # Clang does not support -pie flag\n      add_linker_flag_if_supported(\"-Wl,-pie\" LD_SECURITY_FLAGS)\n    else()\n      add_linker_flag_if_supported(\"-pie\" LD_SECURITY_FLAGS)\n    endif()\n  endif()\n  add_linker_flag_if_supported(-Wl,-z,relro LD_SECURITY_FLAGS)\n  add_linker_flag_if_supported(-Wl,-z,now LD_SECURITY_FLAGS)\n  add_linker_flag_if_supported(-Wl,-z,noexecstack noexecstack_SUPPORTED)\n  if (noexecstack_SUPPORTED)\n    set(LD_SECURITY_FLAGS \"${LD_SECURITY_FLAGS} -Wl,-z,noexecstack\")\n  endif()\n  add_linker_flag_if_supported(-Wl,-z,noexecheap noexecheap_SUPPORTED)\n  if (noexecheap_SUPPORTED)\n    set(LD_SECURITY_FLAGS \"${LD_SECURITY_FLAGS} -Wl,-z,noexecheap\")\n  endif()\n\n  if(BACKCOMPAT)\n      add_linker_flag_if_supported(-Wl,--wrap=__divmoddi4 LD_BACKCOMPAT_FLAGS)\n      add_linker_flag_if_supported(-Wl,--wrap=glob LD_BACKCOMPAT_FLAGS)\n      message(STATUS \"Using Lib C back compat flags: ${LD_BACKCOMPAT_FLAGS}\")\n  endif()\n\n  # some windows linker bits\n  if (WIN32)\n    add_linker_flag_if_supported(-Wl,--dynamicbase LD_SECURITY_FLAGS)\n    add_linker_flag_if_supported(-Wl,--nxcompat LD_SECURITY_FLAGS)\n    add_linker_flag_if_supported(-Wl,--high-entropy-va LD_SECURITY_FLAGS)\n  endif()\n\n  # Warnings, that when ignored are so severe, that they can segfault or even UB any application.\n  # Treat them as errors.\n  add_c_flag_if_supported(  -Werror=switch      C_SECURITY_FLAGS)\n  add_cxx_flag_if_supported(-Werror=switch      CXX_SECURITY_FLAGS)\n  add_c_flag_if_supported(  -Werror=return-type C_SECURITY_FLAGS)\n  add_cxx_flag_if_supported(-Werror=return-type CXX_SECURITY_FLAGS)\n\n  message(STATUS \"Using C security hardening flags: ${C_SECURITY_FLAGS}\")\n  message(STATUS \"Using C++ security hardening flags: ${CXX_SECURITY_FLAGS}\")\n  message(STATUS \"Using linker security hardening flags: ${LD_SECURITY_FLAGS}\")\n\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -D_GNU_SOURCE ${MINGW_FLAG} ${STATIC_ASSERT_FLAG} ${WARNINGS} ${C_WARNINGS} ${PIC_FLAG} ${C_SECURITY_FLAGS}\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -D_GNU_SOURCE ${MINGW_FLAG} ${STATIC_ASSERT_CPP_FLAG} ${WARNINGS} ${CXX_WARNINGS} ${PIC_FLAG} ${CXX_SECURITY_FLAGS}\")\n  set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} ${LD_SECURITY_FLAGS} ${LD_BACKCOMPAT_FLAGS}\")\n\n  # With GCC 6.1.1 the compiled binary malfunctions due to aliasing. Until that\n  # is fixed in the code (Issue #847), force compiler to be conservative.\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fno-strict-aliasing\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-strict-aliasing\")\n\n  if(ARM)\n    message(STATUS \"Setting FPU Flags for ARM Processors\")\n\n    #NB NEON hardware does not fully implement the IEEE 754 standard for floating-point arithmetic\n    #Need custom assembly code to take full advantage of NEON SIMD\n\n    #Cortex-A5/9  -mfpu=neon-fp16\n    #Cortex-A7/15 -mfpu=neon-vfpv4\n    #Cortex-A8    -mfpu=neon\n    #ARMv8  \t  -FP and SIMD on by default for all ARM8v-A series, NO -mfpu setting needed\n\n    #For custom -mtune, processor IDs for ARMv8-A series:\n    #0xd04 - Cortex-A35\n    #0xd07 - Cortex-A57\n    #0xd08 - Cortex-A72\n    #0xd03 - Cortex-A73\n\n    if(NOT ARM8)\n      CHECK_CXX_ACCEPTS_FLAG(-mfpu=vfp3-d16 CXX_ACCEPTS_VFP3_D16)\n      CHECK_CXX_ACCEPTS_FLAG(-mfpu=vfp4 CXX_ACCEPTS_VFP4)\n      CHECK_CXX_ACCEPTS_FLAG(-mfloat-abi=hard CXX_ACCEPTS_MFLOAT_HARD)\n      CHECK_CXX_ACCEPTS_FLAG(-mfloat-abi=softfp CXX_ACCEPTS_MFLOAT_SOFTFP)\n    endif()\n\n    if(ARM8)\n      CHECK_CXX_ACCEPTS_FLAG(-mfix-cortex-a53-835769 CXX_ACCEPTS_MFIX_CORTEX_A53_835769)\n      CHECK_CXX_ACCEPTS_FLAG(-mfix-cortex-a53-843419 CXX_ACCEPTS_MFIX_CORTEX_A53_843419)\n    endif()\n\n    if(ARM6)\n      message(STATUS \"Selecting VFP for ARMv6\")\n      set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -mfpu=vfp\")\n      set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -mfpu=vfp\")\n      if(DEPENDS)\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -marm\")\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -marm\")\n      endif()\n    endif(ARM6)\n\n    if(ARM7)\n      if(CXX_ACCEPTS_VFP3_D16 AND NOT CXX_ACCEPTS_VFP4)\n        message(STATUS \"Selecting VFP3 for ARMv7\")\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -mfpu=vfp3-d16\")\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -mfpu=vfp3-d16\")\n      endif()\n\n      if(CXX_ACCEPTS_VFP4)\n        message(STATUS \"Selecting VFP4 for ARMv7\")\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -mfpu=vfp4\")\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -mfpu=vfp4\")\n      endif()\n\n      if(CXX_ACCEPTS_MFLOAT_HARD)\n        message(STATUS \"Setting Hardware ABI for Floating Point\")\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -mfloat-abi=hard\")\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -mfloat-abi=hard\")\n      endif()\n\n      if(CXX_ACCEPTS_MFLOAT_SOFTFP AND NOT CXX_ACCEPTS_MFLOAT_HARD)\n        message(STATUS \"Setting Software ABI for Floating Point\")\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -mfloat-abi=softfp\")\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -mfloat-abi=softfp\")\n      endif()\n    endif(ARM7)\n\n    if(ARM8)\n      if(CXX_ACCEPTS_MFIX_CORTEX_A53_835769)\n        message(STATUS \"Enabling Cortex-A53 workaround 835769\")\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -mfix-cortex-a53-835769\")\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -mfix-cortex-a53-835769\")\n      endif()\n\n      if(CXX_ACCEPTS_MFIX_CORTEX_A53_843419)\n        message(STATUS \"Enabling Cortex-A53 workaround 843419\")\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -mfix-cortex-a53-843419\")\n        set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -mfix-cortex-a53-843419\")\n      endif()\n    endif(ARM8)\n\n  endif(ARM)\n\n  # random crash on startup when asan is on if pie is enabled\n  if(NOT SANITIZE AND ANDROID AND NOT BUILD_GUI_DEPS STREQUAL \"ON\" OR IOS)\n    #From Android 5: \"only position independent executables (PIE) are supported\" \n    message(STATUS \"Enabling PIE executable\")\n    set(PIC_FLAG \"\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fPIE\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fPIE\")\n    set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_CXX_FLAGS} -fPIE -pie\")\n  endif()\n\n  if(APPLE)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fvisibility=default -DGTEST_HAS_TR1_TUPLE=0\")\n    if(ARM)\n      set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-aligned-allocation\")\n    endif()\n  endif()\n\n  set(DEBUG_FLAGS \"-g3\")\n\n  # At least some CLANGs default to not enough for monero\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -ftemplate-depth=900\")\n\n  if(NOT DEFINED USE_LTO_DEFAULT)\n    set(USE_LTO_DEFAULT false)\n  endif()\n  set(USE_LTO ${USE_LTO_DEFAULT} CACHE BOOL \"Use Link-Time Optimization (Release mode only)\")\n\n  if(CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")\n    # There is a clang bug that does not allow to compile code that uses AES-NI intrinsics if -flto is enabled, so explicitly disable\n    set(USE_LTO false)\n  endif()\n\n\n  if(USE_LTO)\n    set(RELEASE_FLAGS \"${RELEASE_FLAGS} -flto\")\n    if(STATIC)\n      set(RELEASE_FLAGS \"${RELEASE_FLAGS} -ffat-lto-objects\")\n    endif()\n    # Since gcc 4.9 the LTO format is non-standard (slim), so we need the gcc-specific ar and ranlib binaries\n    if(CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\" AND NOT (CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.9.0) AND NOT OPENBSD AND NOT DRAGONFLY)\n      # When invoking cmake on distributions on which gcc's binaries are prefixed\n      # with an arch-specific triplet, the user must specify -DCHOST=<prefix>\n      if (DEFINED CHOST)\n        set(CMAKE_AR \"${CHOST}-gcc-ar\")\n        set(CMAKE_RANLIB \"${CHOST}-gcc-ranlib\")\n      else()\n        set(CMAKE_AR \"gcc-ar\")\n        set(CMAKE_RANLIB \"gcc-ranlib\")\n      endif()\n    endif()\n  endif()\n\n  set(CMAKE_C_FLAGS_DEBUG \"${CMAKE_C_FLAGS_DEBUG} ${DEBUG_FLAGS}\")\n  set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} ${DEBUG_FLAGS}\")\n  set(CMAKE_C_FLAGS_RELEASE \"${CMAKE_C_FLAGS_RELEASE} ${RELEASE_FLAGS}\")\n  set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} ${RELEASE_FLAGS}\")\n\n  if(STATIC)\n    # STATIC already configures most deps to be linked in statically,\n    # here we make more deps static if the platform permits it\n    if (MINGW)\n      # On Windows, this is as close to fully-static as we get:\n      # this leaves only deps on /c/Windows/system32/*.dll\n      set(STATIC_FLAGS \"-static\")\n    elseif (NOT (APPLE OR FREEBSD OR OPENBSD OR DRAGONFLY))\n      # On Linux, we don't support fully static build, but these can be static\n      set(STATIC_FLAGS \"-static-libgcc -static-libstdc++\")\n    endif()\n    set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} ${STATIC_FLAGS} \")\n  endif()\nendif()\n\nif (${BOOST_IGNORE_SYSTEM_PATHS} STREQUAL \"ON\")\n  set(Boost_NO_SYSTEM_PATHS TRUE)\nendif()\n\nset(OLD_LIB_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES})\nset(Boost_NO_BOOST_CMAKE ON)\nif(STATIC)\n  if(MINGW)\n    set(CMAKE_FIND_LIBRARY_SUFFIXES .a)\n  endif()\n\n  set(Boost_USE_STATIC_LIBS ON)\n  set(Boost_USE_STATIC_RUNTIME ON)\nendif()\n\n# Find Boost headers\nset(BOOST_MIN_VER 1.62)\nfind_package(Boost ${BOOST_MIN_VER} QUIET REQUIRED)\n\nif(NOT Boost_FOUND)\n  die(\"Could not find Boost libraries, please make sure you have installed Boost or libboost-all-dev (>=${BOOST_MIN_VER}) or the equivalent\")\nelseif(Boost_FOUND)\n  message(STATUS \"Found Boost Version: ${Boost_VERSION_STRING}\")\n\n  set(BOOST_COMPONENTS filesystem thread date_time chrono serialization program_options)\n  if (WIN32)\n    list(APPEND BOOST_COMPONENTS locale)\n  endif()\n\n  # Boost System is header-only since 1.69\n  if (Boost_VERSION_STRING VERSION_LESS 1.69.0)\n    list(APPEND BOOST_COMPONENTS system)\n  endif()\n\n  # Boost Regex is header-only since 1.77\n  if (Boost_VERSION_STRING VERSION_LESS 1.77.0)\n    list(APPEND BOOST_COMPONENTS regex)\n  endif()\n\n  message(STATUS \"Boost components: ${BOOST_COMPONENTS}\")\n\n  # Find required Boost libraries\n  find_package(Boost ${BOOST_MIN_VER} QUIET REQUIRED COMPONENTS ${BOOST_COMPONENTS})\n  set(CMAKE_FIND_LIBRARY_SUFFIXES ${OLD_LIB_SUFFIXES})\nendif()\n\nadd_definitions(-DBOOST_ASIO_ENABLE_SEQUENTIAL_STRAND_ALLOCATION)\nadd_definitions(-DBOOST_NO_AUTO_PTR)\nadd_definitions(-DBOOST_UUID_DISABLE_ALIGNMENT) # This restores UUID's std::has_unique_object_representations property\n\ninclude_directories(SYSTEM ${Boost_INCLUDE_DIRS})\nif(MINGW)\n  set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -Wa,-mbig-obj\")\n  set(EXTRA_LIBRARIES mswsock;ws2_32;iphlpapi;crypt32;bcrypt)\n  if(NOT DEPENDS)\n    set(ICU_LIBRARIES icuio icuin icuuc icudt icutu iconv)\n  endif()\nelseif(APPLE OR OPENBSD OR ANDROID)\n  set(EXTRA_LIBRARIES \"\")\nelseif(FREEBSD)\n  set(EXTRA_LIBRARIES execinfo elf)\nelseif(DRAGONFLY)\n  find_library(COMPAT compat)\n  set(EXTRA_LIBRARIES execinfo ${COMPAT})\nelseif(CMAKE_SYSTEM_NAME MATCHES \"(SunOS|Solaris)\")\n  set(EXTRA_LIBRARIES socket nsl resolv)\nelseif(NOT MSVC AND NOT DEPENDS)\n  find_library(RT rt)\n  find_library(Z z)\n  set(EXTRA_LIBRARIES ${RT} ${Z})\nendif()\n\nlist(APPEND EXTRA_LIBRARIES ${CMAKE_DL_LIBS})\n\nif (HIDAPI_FOUND OR LibUSB_COMPILE_TEST_PASSED)\n  if (APPLE)\n    if(DEPENDS)\n      list(APPEND EXTRA_LIBRARIES \"-framework Foundation -framework AppKit -framework IOKit -framework Security\")\n    else()\n      find_library(COREFOUNDATION CoreFoundation)\n      find_library(APPKIT AppKit)\n      find_library(IOKIT IOKit)\n      list(APPEND EXTRA_LIBRARIES ${APPKIT})\n      list(APPEND EXTRA_LIBRARIES ${IOKIT})\n      list(APPEND EXTRA_LIBRARIES ${COREFOUNDATION})\n    endif()\n  endif()\n  if (WIN32)\n    list(APPEND EXTRA_LIBRARIES setupapi)\n  endif()\nendif()\n\nif(NOT OPENBSD)\n  option(USE_READLINE \"Build with GNU readline support.\" ON)\nendif()\nif(USE_READLINE AND NOT DEPENDS)\n  find_package(Readline)\n  if(READLINE_FOUND AND GNU_READLINE_FOUND)\n    add_definitions(-DHAVE_READLINE)\n    include_directories(${Readline_INCLUDE_DIR})\n    message(STATUS \"Found readline library at: ${Readline_ROOT_DIR}\")\n    set(EPEE_READLINE epee_readline)\n  else()\n    message(STATUS \"Could not find GNU readline library so building without readline support\")\n  endif()\nelseif(USE_READLINE AND DEPENDS AND NOT MINGW)\n  find_path(Readline_INCLUDE_PATH readline/readline.h)\n  find_library(Readline_LIBRARY readline)\n  find_library(Terminfo_LIBRARY tinfo)\n  set(Readline_LIBRARY \"${Readline_LIBRARY};${Terminfo_LIBRARY}\")\n  set(GNU_READLINE_LIBRARY ${Readline_LIBRARY})\n  add_definitions(-DHAVE_READLINE)\n  set(EPEE_READLINE epee_readline)\nendif()\n\nif(ANDROID)\n  set(ATOMIC libatomic.a)\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-error=user-defined-warnings\")\nendif()\nif(CMAKE_C_COMPILER_ID MATCHES \"Clang\" AND ARCH_WIDTH EQUAL \"32\" AND NOT IOS AND NOT FREEBSD)\n  find_library(ATOMIC atomic)\n  if (ATOMIC_FOUND)\n    list(APPEND EXTRA_LIBRARIES ${ATOMIC})\n  endif()\nendif()\n\nif(STATIC)\n  set(sodium_USE_STATIC_LIBS ON)\nendif()\nfind_package(Sodium REQUIRED)\n\nfind_package(PkgConfig REQUIRED)\npkg_check_modules(libzmq REQUIRED IMPORTED_TARGET libzmq)\n\ninclude(external/supercop/functions.cmake) # place after setting flags and before src directory inclusion\nadd_subdirectory(contrib)\nadd_subdirectory(src)\n\nfind_package(PythonInterp)\nif(BUILD_TESTS)\n  message(STATUS \"Building tests\")\n  add_subdirectory(tests)\nelse()\n  message(STATUS \"Not building tests\")\nendif()\n\nif(BUILD_DEBUG_UTILITIES)\n  message(STATUS \"Building debug utilities\")\nelse()\n  message(STATUS \"Not building debug utilities\")\nendif()\n\nif(BUILD_DOCUMENTATION)\n  set(DOC_GRAPHS \"YES\" CACHE STRING \"Create dependency graphs (needs graphviz)\")\n  set(DOC_FULLGRAPHS \"NO\" CACHE STRING \"Create call/callee graphs (large)\")\n\n  find_program(DOT_PATH dot)\n\n  if (DOT_PATH STREQUAL \"DOT_PATH-NOTFOUND\")\n    message(\"Doxygen: graphviz not found - graphs disabled\")\n    set(DOC_GRAPHS \"NO\")\n  endif()\n\n  find_package(Doxygen)\n  if(DOXYGEN_FOUND)\n    configure_file(\"cmake/Doxyfile.in\" \"Doxyfile\" @ONLY)\n    configure_file(\"cmake/Doxygen.extra.css.in\" \"Doxygen.extra.css\" @ONLY)\n    add_custom_target(doc\n      ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile\n      WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n      COMMENT \"Generating API documentation with Doxygen..\" VERBATIM)\n  endif()\nendif()\n\n# when ON - will install libwallet_merged into \"lib\"\noption(BUILD_GUI_DEPS \"Build GUI dependencies.\" OFF)\n\nfind_package(PythonInterp)\nfind_program(iwyu_tool_path NAMES iwyu_tool.py iwyu_tool)\nif (iwyu_tool_path AND PYTHONINTERP_FOUND)\n  add_custom_target(iwyu\n    COMMAND \"${PYTHON_EXECUTABLE}\" \"${iwyu_tool_path}\" -p \"${CMAKE_BINARY_DIR}\" -- --no_fwd_decls\n    COMMENT \"Running include-what-you-use tool\"\n    VERBATIM\n  )\nendif()\n"
        },
        {
          "name": "CMakeLists_IOS.txt",
          "type": "blob",
          "size": 7.1591796875,
          "content": "# Portions Copyright (c) 2017-2024, The Monero Project\n# This file is based off of the https://code.google.com/archive/p/ios-cmake/\n# It has been altered for Monero iOS development\n#\n#\n# Options:\n#\n# IOS_PLATFORM = OS (default) or SIMULATOR or SIMULATOR64\n#   This decides if SDKS will be selected from the iPhoneOS.platform or iPhoneSimulator.platform folders\n#   OS - the default, used to build for iPhone and iPad physical devices, which have an arm arch.\n#   SIMULATOR - used to build for the Simulator platforms, which have an x86 arch.\n#\n# CMAKE_IOS_DEVELOPER_ROOT = automatic(default) or /path/to/platform/Developer folder\n#   By default this location is automatcially chosen based on the IOS_PLATFORM value above.\n#   If set manually, it will override the default location and force the user of a particular Developer Platform\n#\n# CMAKE_IOS_SDK_ROOT = automatic(default) or /path/to/platform/Developer/SDKs/SDK folder\n#   By default this location is automatcially chosen based on the CMAKE_IOS_DEVELOPER_ROOT value.\n#   In this case it will always be the most up-to-date SDK found in the CMAKE_IOS_DEVELOPER_ROOT path.\n#   If set manually, this will force the use of a specific SDK version\n\n\n# Standard settings\nset (CMAKE_SYSTEM_NAME Darwin)\nset (CMAKE_SYSTEM_VERSION 1)\nset (UNIX True)\nset (APPLE True)\nset (IOS True)\n\n# Required as of cmake 2.8.10\nset (CMAKE_OSX_DEPLOYMENT_TARGET \"\" CACHE STRING \"Force unset of the deployment target for iOS\" FORCE)\n\n# Determine the cmake host system version so we know where to find the iOS SDKs\nfind_program (CMAKE_UNAME uname /bin /usr/bin /usr/local/bin)\nif (CMAKE_UNAME)\n\texec_program(uname ARGS -r OUTPUT_VARIABLE CMAKE_HOST_SYSTEM_VERSION)\n\tstring (REGEX REPLACE \"^([0-9]+)\\\\.([0-9]+).*$\" \"\\\\1\" DARWIN_MAJOR_VERSION \"${CMAKE_HOST_SYSTEM_VERSION}\")\nendif (CMAKE_UNAME)\n\n# Force the compilers to gcc for iOS\ninclude (CMakeForceCompiler)\n# set (MAKE_C_COMPILER \"/usr/bin/gcc Apple\")\n# set (CMAKE_CXX_COMPILER \"/usr/bin/g++ Apple\")\nset(CMAKE_AR ar CACHE FILEPATH \"\" FORCE)\n\n# Skip the platform compiler checks for cross compiling\nset (CMAKE_CXX_COMPILER_WORKS TRUE)\nset (CMAKE_C_COMPILER_WORKS TRUE)\n\n# All iOS/Darwin specific settings - some may be redundant\nset (CMAKE_SHARED_LIBRARY_PREFIX \"lib\")\nset (CMAKE_SHARED_LIBRARY_SUFFIX \".dylib\")\nset (CMAKE_SHARED_MODULE_PREFIX \"lib\")\nset (CMAKE_SHARED_MODULE_SUFFIX \".so\")\nset (CMAKE_MODULE_EXISTS 1)\nset (CMAKE_DL_LIBS \"\")\n\nset (CMAKE_C_OSX_COMPATIBILITY_VERSION_FLAG \"-compatibility_version \")\nset (CMAKE_C_OSX_CURRENT_VERSION_FLAG \"-current_version \")\nset (CMAKE_CXX_OSX_COMPATIBILITY_VERSION_FLAG \"${CMAKE_C_OSX_COMPATIBILITY_VERSION_FLAG}\")\nset (CMAKE_CXX_OSX_CURRENT_VERSION_FLAG \"${CMAKE_C_OSX_CURRENT_VERSION_FLAG}\")\n\n# Hidden visibilty is required for cxx on iOS \nset (CMAKE_C_FLAGS_INIT \"\")\nset (CMAKE_CXX_FLAGS_INIT \"-fvisibility=hidden -fvisibility-inlines-hidden\")\n\nset (CMAKE_C_LINK_FLAGS \"-Wl,-search_paths_first ${CMAKE_C_LINK_FLAGS}\")\nset (CMAKE_CXX_LINK_FLAGS \"-Wl,-search_paths_first ${CMAKE_CXX_LINK_FLAGS}\")\n\nset (CMAKE_PLATFORM_HAS_INSTALLNAME 1)\nset (CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS \"-dynamiclib -headerpad_max_install_names\")\nset (CMAKE_SHARED_MODULE_CREATE_C_FLAGS \"-bundle -headerpad_max_install_names\")\nset (CMAKE_SHARED_MODULE_LOADER_C_FLAG \"-Wl,-bundle_loader,\")\nset (CMAKE_SHARED_MODULE_LOADER_CXX_FLAG \"-Wl,-bundle_loader,\")\nset (CMAKE_FIND_LIBRARY_SUFFIXES \".dylib\" \".so\" \".a\")\n\n# Setup iOS platform unless specified manually with IOS_PLATFORM\nif (NOT DEFINED IOS_PLATFORM)\n\tset (IOS_PLATFORM \"OS\")\nendif (NOT DEFINED IOS_PLATFORM)\nset (IOS_PLATFORM ${IOS_PLATFORM} CACHE STRING \"Type of iOS Platform\")\n\n# Setup building for arm64 or not\nif (NOT DEFINED BUILD_ARM64)\n    set (BUILD_ARM64 true)\nendif (NOT DEFINED BUILD_ARM64)\nset (BUILD_ARM64 ${BUILD_ARM64} CACHE STRING \"Build arm64 arch or not\")\n\n# Check the platform selection and setup for developer root\nif (${IOS_PLATFORM} STREQUAL \"OS\")\n\tset (IOS_PLATFORM_LOCATION \"iPhoneOS.platform\")\n\n\t# This causes the installers to properly locate the output libraries\n\tset (CMAKE_XCODE_EFFECTIVE_PLATFORMS \"-iphoneos\")\nelseif (${IOS_PLATFORM} STREQUAL \"SIMULATOR\")\n    set (SIMULATOR true)\n\tset (IOS_PLATFORM_LOCATION \"iPhoneSimulator.platform\")\n\n\t# This causes the installers to properly locate the output libraries\n\tset (CMAKE_XCODE_EFFECTIVE_PLATFORMS \"-iphonesimulator\")\nelseif (${IOS_PLATFORM} STREQUAL \"SIMULATOR64\")\n    set (SIMULATOR true)\n\tset (IOS_PLATFORM_LOCATION \"iPhoneSimulator.platform\")\n\n\t# This causes the installers to properly locate the output libraries\n\tset (CMAKE_XCODE_EFFECTIVE_PLATFORMS \"-iphonesimulator\")\nelse (${IOS_PLATFORM} STREQUAL \"OS\")\n\tmessage (FATAL_ERROR \"Unsupported IOS_PLATFORM value selected. Please choose OS or SIMULATOR\")\nendif (${IOS_PLATFORM} STREQUAL \"OS\")\n\n# Setup iOS developer location unless specified manually with CMAKE_IOS_DEVELOPER_ROOT\n# Note Xcode 4.3 changed the installation location, choose the most recent one available\nexec_program(/usr/bin/xcode-select ARGS -print-path OUTPUT_VARIABLE CMAKE_XCODE_DEVELOPER_DIR)\nset (XCODE_POST_43_ROOT \"${CMAKE_XCODE_DEVELOPER_DIR}/Platforms/${IOS_PLATFORM_LOCATION}/Developer\")\nset (XCODE_PRE_43_ROOT \"/Developer/Platforms/${IOS_PLATFORM_LOCATION}/Developer\")\nif (NOT DEFINED CMAKE_IOS_DEVELOPER_ROOT)\n\tif (EXISTS ${XCODE_POST_43_ROOT})\n\t\tset (CMAKE_IOS_DEVELOPER_ROOT ${XCODE_POST_43_ROOT})\n\telseif(EXISTS ${XCODE_PRE_43_ROOT})\n\t\tset (CMAKE_IOS_DEVELOPER_ROOT ${XCODE_PRE_43_ROOT})\n\tendif (EXISTS ${XCODE_POST_43_ROOT})\nendif (NOT DEFINED CMAKE_IOS_DEVELOPER_ROOT)\nset (CMAKE_IOS_DEVELOPER_ROOT ${CMAKE_IOS_DEVELOPER_ROOT} CACHE PATH \"Location of iOS Platform\")\n\n# Find and use the most recent iOS sdk unless specified manually with CMAKE_IOS_SDK_ROOT\nif (NOT DEFINED CMAKE_IOS_SDK_ROOT)\n\tfile (GLOB _CMAKE_IOS_SDKS \"${CMAKE_IOS_DEVELOPER_ROOT}/SDKs/*\")\n\tif (_CMAKE_IOS_SDKS) \n\t\tlist (SORT _CMAKE_IOS_SDKS)\n\t\tlist (REVERSE _CMAKE_IOS_SDKS)\n\t\tlist (GET _CMAKE_IOS_SDKS 0 CMAKE_IOS_SDK_ROOT)\n\telse (_CMAKE_IOS_SDKS)\n\t\tmessage (FATAL_ERROR \"No iOS SDK's found in default search path ${CMAKE_IOS_DEVELOPER_ROOT}. Manually set CMAKE_IOS_SDK_ROOT or install the iOS SDK.\")\n\tendif (_CMAKE_IOS_SDKS)\n\tmessage (STATUS \"Toolchain using default iOS SDK: ${CMAKE_IOS_SDK_ROOT}\")\nendif (NOT DEFINED CMAKE_IOS_SDK_ROOT)\nset (CMAKE_IOS_SDK_ROOT ${CMAKE_IOS_SDK_ROOT} CACHE PATH \"Location of the selected iOS SDK\")\n\n# Set the sysroot default to the most recent SDK\nset (CMAKE_OSX_SYSROOT ${CMAKE_IOS_SDK_ROOT} CACHE PATH \"Sysroot used for iOS support\")\n\n# set the architecture for iOS\nif (NOT DEFINED ARCH)\n    set (ARCH armv7)\nendif()\nset (IOS_ARCH ${ARCH})\n\nset (CMAKE_OSX_ARCHITECTURES ${IOS_ARCH} CACHE string  \"Build architecture for iOS\")\n message(STATUS \"ios arch: ${IOS_ARCH}\")\n\n# Set the find root to the iOS developer roots and to user defined paths\nset (CMAKE_FIND_ROOT_PATH ${CMAKE_IOS_DEVELOPER_ROOT} ${CMAKE_IOS_SDK_ROOT} ${CMAKE_PREFIX_PATH} CACHE string  \"iOS find search path root\")\n\n# default to searching for frameworks first\nset (CMAKE_FIND_FRAMEWORK FIRST)\n\n# set up the default search directories for frameworks\nset (CMAKE_SYSTEM_FRAMEWORK_PATH\n\t${CMAKE_IOS_SDK_ROOT}/System/Library/Frameworks\n\t${CMAKE_IOS_SDK_ROOT}/System/Library/PrivateFrameworks\n\t${CMAKE_IOS_SDK_ROOT}/Developer/Library/Frameworks\n)\n\nmessage(STATUS \"IOS CMAKE conf finished\")"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.5888671875,
          "content": "# Multistage docker build, requires docker 17.05\n\n# builder stage\nFROM ubuntu:20.04 as builder\n\nRUN set -ex && \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends --yes install \\\n        automake \\\n        autotools-dev \\\n        bsdmainutils \\\n        build-essential \\\n        ca-certificates \\\n        ccache \\\n        cmake \\\n        curl \\\n        git \\\n        libtool \\\n        pkg-config \\\n        gperf\n\nWORKDIR /src\nCOPY . .\n\nARG NPROC\nRUN set -ex && \\\n    git submodule init && git submodule update && \\\n    rm -rf build && \\\n    if [ -z \"$NPROC\" ] ; \\\n    then make -j$(nproc) depends target=x86_64-linux-gnu ; \\\n    else make -j$NPROC depends target=x86_64-linux-gnu ; \\\n    fi\n\n# runtime stage\nFROM ubuntu:20.04\n\nRUN set -ex && \\\n    apt-get update && \\\n    apt-get --no-install-recommends --yes install ca-certificates && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt\nCOPY --from=builder /src/build/x86_64-linux-gnu/release/bin /usr/local/bin/\n\n# Create monero user\nRUN adduser --system --group --disabled-password monero && \\\n\tmkdir -p /wallet /home/monero/.bitmonero && \\\n\tchown -R monero:monero /home/monero/.bitmonero && \\\n\tchown -R monero:monero /wallet\n\n# Contains the blockchain\nVOLUME /home/monero/.bitmonero\n\n# Generate your wallet via accessing the container and run:\n# cd /wallet\n# monero-wallet-cli\nVOLUME /wallet\n\nEXPOSE 18080\nEXPOSE 18081\n\n# switch to user monero\nUSER monero\n\nENTRYPOINT [\"monerod\"]\nCMD [\"--p2p-bind-ip=0.0.0.0\", \"--p2p-bind-port=18080\", \"--rpc-bind-ip=0.0.0.0\", \"--rpc-bind-port=18081\", \"--non-interactive\", \"--confirm-external-bind\"]\n\n"
        },
        {
          "name": "Doxyfile",
          "type": "blob",
          "size": 98.453125,
          "content": "# Doxyfile 1.8.7\n\n# This file describes the settings to be used by the documentation system\n# doxygen (www.doxygen.org) for a project.\n#\n# All text after a double hash (##) is considered a comment and is placed in\n# front of the TAG it is preceding.\n#\n# All text after a single hash (#) is considered a comment and will be ignored.\n# The format is:\n# TAG = value [value, ...]\n# For lists, items can also be appended using:\n# TAG += value [value, ...]\n# Values that contain spaces should be placed between quotes (\\\" \\\").\n\n#---------------------------------------------------------------------------\n# Project related configuration options\n#---------------------------------------------------------------------------\n\n# This tag specifies the encoding used for all characters in the config file\n# that follow. The default is UTF-8 which is also the encoding used for all text\n# before the first occurrence of this tag. Doxygen uses libiconv (or the iconv\n# built into libc) for the transcoding. See https://www.gnu.org/software/libiconv\n# for the list of possible encodings.\n# The default value is: UTF-8.\n\nDOXYFILE_ENCODING      = UTF-8\n\n# The PROJECT_NAME tag is a single word (or a sequence of words surrounded by\n# double-quotes, unless you are using Doxywizard) that should identify the\n# project for which the documentation is generated. This name is used in the\n# title of most generated pages and in a few other places.\n# The default value is: My Project.\n\nPROJECT_NAME           = \"Monero\"\n\n# The PROJECT_NUMBER tag can be used to enter a project or revision number. This\n# could be handy for archiving the generated documentation or if some version\n# control system is used.\n\nPROJECT_NUMBER         =\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n# for a project that appears at the top of each page and should give viewer a\n# quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF          =\n\n# With the PROJECT_LOGO tag one can specify an logo or icon that is included in\n# the documentation. The maximum height of the logo should not exceed 55 pixels\n# and the maximum width should not exceed 200 pixels. Doxygen will copy the logo\n# to the output directory.\n\nPROJECT_LOGO           =\n\n# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) path\n# into which the generated documentation will be written. If a relative path is\n# entered, it will be relative to the location where doxygen was started. If\n# left blank the current directory will be used.\n\nOUTPUT_DIRECTORY       = doc\n\n# If the CREATE_SUBDIRS tag is set to YES, then doxygen will create 4096 sub-\n# directories (in 2 levels) under the output directory of each output format and\n# will distribute the generated files over these directories. Enabling this\n# option can be useful when feeding doxygen a huge amount of source files, where\n# putting all generated files in the same directory would otherwise causes\n# performance problems for the file system.\n# The default value is: NO.\n\nCREATE_SUBDIRS         = YES\n\n# If the ALLOW_UNICODE_NAMES tag is set to YES, doxygen will allow non-ASCII\n# characters to appear in the names of generated files. If set to NO, non-ASCII\n# characters will be escaped, for example _xE3_x81_x84 will be used for Unicode\n# U+3044.\n# The default value is: NO.\n\nALLOW_UNICODE_NAMES    = NO\n\n# The OUTPUT_LANGUAGE tag is used to specify the language in which all\n# documentation generated by doxygen is written. Doxygen will use this\n# information to generate all constant output in the proper language.\n# Possible values are: Afrikaans, Arabic, Armenian, Brazilian, Catalan, Chinese,\n# Chinese-Traditional, Croatian, Czech, Danish, Dutch, English (United States),\n# Esperanto, Farsi (Persian), Finnish, French, German, Greek, Hungarian,\n# Indonesian, Italian, Japanese, Japanese-en (Japanese with English messages),\n# Korean, Korean-en (Korean with English messages), Latvian, Lithuanian,\n# Macedonian, Norwegian, Persian (Farsi), Polish, Portuguese, Romanian, Russian,\n# Serbian, Serbian-Cyrillic, Slovak, Slovene, Spanish, Swedish, Turkish,\n# Ukrainian and Vietnamese.\n# The default value is: English.\n\nOUTPUT_LANGUAGE        = English\n\n# If the BRIEF_MEMBER_DESC tag is set to YES doxygen will include brief member\n# descriptions after the members that are listed in the file and class\n# documentation (similar to Javadoc). Set to NO to disable this.\n# The default value is: YES.\n\nBRIEF_MEMBER_DESC      = YES\n\n# If the REPEAT_BRIEF tag is set to YES doxygen will prepend the brief\n# description of a member or function before the detailed description\n#\n# Note: If both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the\n# brief descriptions will be completely suppressed.\n# The default value is: YES.\n\nREPEAT_BRIEF           = YES\n\n# This tag implements a quasi-intelligent brief description abbreviator that is\n# used to form the text in various listings. Each string in this list, if found\n# as the leading text of the brief description, will be stripped from the text\n# and the result, after processing the whole list, is used as the annotated\n# text. Otherwise, the brief description is used as-is. If left blank, the\n# following values are used ($name is automatically replaced with the name of\n# the entity):The $name class, The $name widget, The $name file, is, provides,\n# specifies, contains, represents, a, an and the.\n\nABBREVIATE_BRIEF       =\n\n# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then\n# doxygen will generate a detailed section even if there is only a brief\n# description.\n# The default value is: NO.\n\nALWAYS_DETAILED_SEC    = NO\n\n# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all\n# inherited members of a class in the documentation of that class as if those\n# members were ordinary class members. Constructors, destructors and assignment\n# operators of the base classes will not be shown.\n# The default value is: NO.\n\nINLINE_INHERITED_MEMB  = NO\n\n# If the FULL_PATH_NAMES tag is set to YES doxygen will prepend the full path\n# before files name in the file list and in the header files. If set to NO the\n# shortest path that makes the file name unique will be used\n# The default value is: YES.\n\nFULL_PATH_NAMES        = YES\n\n# The STRIP_FROM_PATH tag can be used to strip a user-defined part of the path.\n# Stripping is only done if one of the specified strings matches the left-hand\n# part of the path. The tag can be used to show relative paths in the file list.\n# If left blank the directory from which doxygen is run is used as the path to\n# strip.\n#\n# Note that you can specify absolute paths here, but also relative paths, which\n# will be relative from the directory where doxygen is started.\n# This tag requires that the tag FULL_PATH_NAMES is set to YES.\n\nSTRIP_FROM_PATH        =\n\n# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of the\n# path mentioned in the documentation of a class, which tells the reader which\n# header file to include in order to use a class. If left blank only the name of\n# the header file containing the class definition is used. Otherwise one should\n# specify the list of include paths that are normally passed to the compiler\n# using the -I flag.\n\nSTRIP_FROM_INC_PATH    =\n\n# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter (but\n# less readable) file names. This can be useful is your file systems doesn't\n# support long names like on DOS, Mac, or CD-ROM.\n# The default value is: NO.\n\nSHORT_NAMES            = NO\n\n# If the JAVADOC_AUTOBRIEF tag is set to YES then doxygen will interpret the\n# first line (until the first dot) of a Javadoc-style comment as the brief\n# description. If set to NO, the Javadoc-style will behave just like regular Qt-\n# style comments (thus requiring an explicit @brief command for a brief\n# description.)\n# The default value is: NO.\n\nJAVADOC_AUTOBRIEF      = NO\n\n# If the QT_AUTOBRIEF tag is set to YES then doxygen will interpret the first\n# line (until the first dot) of a Qt-style comment as the brief description. If\n# set to NO, the Qt-style will behave just like regular Qt-style comments (thus\n# requiring an explicit \\brief command for a brief description.)\n# The default value is: NO.\n\nQT_AUTOBRIEF           = NO\n\n# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make doxygen treat a\n# multi-line C++ special comment block (i.e. a block of //! or /// comments) as\n# a brief description. This used to be the default behavior. The new default is\n# to treat a multi-line C++ comment block as a detailed description. Set this\n# tag to YES if you prefer the old behavior instead.\n#\n# Note that setting this tag to YES also means that rational rose comments are\n# not recognized any more.\n# The default value is: NO.\n\nMULTILINE_CPP_IS_BRIEF = NO\n\n# If the INHERIT_DOCS tag is set to YES then an undocumented member inherits the\n# documentation from any documented member that it re-implements.\n# The default value is: YES.\n\nINHERIT_DOCS           = YES\n\n# If the SEPARATE_MEMBER_PAGES tag is set to YES, then doxygen will produce a\n# new page for each member. If set to NO, the documentation of a member will be\n# part of the file/class/namespace that contains it.\n# The default value is: NO.\n\nSEPARATE_MEMBER_PAGES  = NO\n\n# The TAB_SIZE tag can be used to set the number of spaces in a tab. Doxygen\n# uses this value to replace tabs by spaces in code fragments.\n# Minimum value: 1, maximum value: 16, default value: 4.\n\nTAB_SIZE               = 4\n\n# This tag can be used to specify a number of aliases that act as commands in\n# the documentation. An alias has the form:\n# name=value\n# For example adding\n# \"sideeffect=@par Side Effects:\\n\"\n# will allow you to put the command \\sideeffect (or @sideeffect) in the\n# documentation, which will result in a user-defined paragraph with heading\n# \"Side Effects:\". You can put \\n's in the value part of an alias to insert\n# newlines.\n\nALIASES                =\n\n# This tag can be used to specify a number of word-keyword mappings (TCL only).\n# A mapping has the form \"name=value\". For example adding \"class=itcl::class\"\n# will allow you to use the command class in the itcl::class meaning.\n\nTCL_SUBST              =\n\n# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C sources\n# only. Doxygen will then generate output that is more tailored for C. For\n# instance, some of the names that are used will be different. The list of all\n# members will be omitted, etc.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_FOR_C  = NO\n\n# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java or\n# Python sources only. Doxygen will then generate output that is more tailored\n# for that language. For instance, namespaces will be presented as packages,\n# qualified scopes will look different, etc.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_JAVA   = NO\n\n# Set the OPTIMIZE_FOR_FORTRAN tag to YES if your project consists of Fortran\n# sources. Doxygen will then generate output that is tailored for Fortran.\n# The default value is: NO.\n\nOPTIMIZE_FOR_FORTRAN   = NO\n\n# Set the OPTIMIZE_OUTPUT_VHDL tag to YES if your project consists of VHDL\n# sources. Doxygen will then generate output that is tailored for VHDL.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_VHDL   = NO\n\n# Doxygen selects the parser to use depending on the extension of the files it\n# parses. With this tag you can assign which parser to use for a given\n# extension. Doxygen has a built-in mapping, but you can override or extend it\n# using this tag. The format is ext=language, where ext is a file extension, and\n# language is one of the parsers supported by doxygen: IDL, Java, Javascript,\n# C#, C, C++, D, PHP, Objective-C, Python, Fortran (fixed format Fortran:\n# FortranFixed, free formatted Fortran: FortranFree, unknown formatted Fortran:\n# Fortran. In the later case the parser tries to guess whether the code is fixed\n# or free formatted code, this is the default for Fortran type files), VHDL. For\n# instance to make doxygen treat .inc files as Fortran files (default is PHP),\n# and .f files as C (default is Fortran), use: inc=Fortran f=C.\n#\n# Note For files without extension you can use no_extension as a placeholder.\n#\n# Note that for custom extensions you also need to set FILE_PATTERNS otherwise\n# the files are not read by doxygen.\n\nEXTENSION_MAPPING      =\n\n# If the MARKDOWN_SUPPORT tag is enabled then doxygen pre-processes all comments\n# according to the Markdown format, which allows for more readable\n# documentation. See https://daringfireball.net/projects/markdown/ for details.\n# The output of markdown processing is further processed by doxygen, so you can\n# mix doxygen, HTML, and XML commands with Markdown formatting. Disable only in\n# case of backward compatibilities issues.\n# The default value is: YES.\n\nMARKDOWN_SUPPORT       = YES\n\n# When enabled doxygen tries to link words that correspond to documented\n# classes, or namespaces to their corresponding documentation. Such a link can\n# be prevented in individual cases by by putting a % sign in front of the word\n# or globally by setting AUTOLINK_SUPPORT to NO.\n# The default value is: YES.\n\nAUTOLINK_SUPPORT       = YES\n\n# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want\n# to include (a tag file for) the STL sources as input, then you should set this\n# tag to YES in order to let doxygen match functions declarations and\n# definitions whose arguments contain STL classes (e.g. func(std::string);\n# versus func(std::string) {}). This also make the inheritance and collaboration\n# diagrams that involve STL classes more complete and accurate.\n# The default value is: NO.\n\nBUILTIN_STL_SUPPORT    = NO\n\n# If you use Microsoft's C++/CLI language, you should set this option to YES to\n# enable parsing support.\n# The default value is: NO.\n\nCPP_CLI_SUPPORT        = NO\n\n# Set the SIP_SUPPORT tag to YES if your project consists of sip (see:\n# https://www.riverbankcomputing.co.uk/software/sip/intro) sources only. Doxygen\n# will parse them like normal C++ but will assume all classes use public instead\n# of private inheritance when no explicit protection keyword is present.\n# The default value is: NO.\n\nSIP_SUPPORT            = NO\n\n# For Microsoft's IDL there are propget and propput attributes to indicate\n# getter and setter methods for a property. Setting this option to YES will make\n# doxygen to replace the get and set methods by a property in the documentation.\n# This will only work if the methods are indeed getting or setting a simple\n# type. If this is not the case, or you want to show the methods anyway, you\n# should set this option to NO.\n# The default value is: YES.\n\nIDL_PROPERTY_SUPPORT   = YES\n\n# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC\n# tag is set to YES, then doxygen will reuse the documentation of the first\n# member in the group (if any) for the other members of the group. By default\n# all members of a group must be documented explicitly.\n# The default value is: NO.\n\nDISTRIBUTE_GROUP_DOC   = NO\n\n# Set the SUBGROUPING tag to YES to allow class member groups of the same type\n# (for instance a group of public functions) to be put as a subgroup of that\n# type (e.g. under the Public Functions section). Set it to NO to prevent\n# subgrouping. Alternatively, this can be done per class using the\n# \\nosubgrouping command.\n# The default value is: YES.\n\nSUBGROUPING            = YES\n\n# When the INLINE_GROUPED_CLASSES tag is set to YES, classes, structs and unions\n# are shown inside the group in which they are included (e.g. using \\ingroup)\n# instead of on a separate page (for HTML and Man pages) or section (for LaTeX\n# and RTF).\n#\n# Note that this feature does not work in combination with\n# SEPARATE_MEMBER_PAGES.\n# The default value is: NO.\n\nINLINE_GROUPED_CLASSES = NO\n\n# When the INLINE_SIMPLE_STRUCTS tag is set to YES, structs, classes, and unions\n# with only public data fields or simple typedef fields will be shown inline in\n# the documentation of the scope in which they are defined (i.e. file,\n# namespace, or group documentation), provided this scope is documented. If set\n# to NO, structs, classes, and unions are shown on a separate page (for HTML and\n# Man pages) or section (for LaTeX and RTF).\n# The default value is: NO.\n\nINLINE_SIMPLE_STRUCTS  = NO\n\n# When TYPEDEF_HIDES_STRUCT tag is enabled, a typedef of a struct, union, or\n# enum is documented as struct, union, or enum with the name of the typedef. So\n# typedef struct TypeS {} TypeT, will appear in the documentation as a struct\n# with name TypeT. When disabled the typedef will appear as a member of a file,\n# namespace, or class. And the struct will be named TypeS. This can typically be\n# useful for C code in case the coding convention dictates that all compound\n# types are typedef'ed and only the typedef is referenced, never the tag name.\n# The default value is: NO.\n\nTYPEDEF_HIDES_STRUCT   = NO\n\n# The size of the symbol lookup cache can be set using LOOKUP_CACHE_SIZE. This\n# cache is used to resolve symbols given their name and scope. Since this can be\n# an expensive process and often the same symbol appears multiple times in the\n# code, doxygen keeps a cache of pre-resolved symbols. If the cache is too small\n# doxygen will become slower. If the cache is too large, memory is wasted. The\n# cache size is given by this formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range\n# is 0..9, the default is 0, corresponding to a cache size of 2^16=65536\n# symbols. At the end of a run doxygen will report the cache usage and suggest\n# the optimal cache size from a speed point of view.\n# Minimum value: 0, maximum value: 9, default value: 0.\n\nLOOKUP_CACHE_SIZE      = 0\n\n#---------------------------------------------------------------------------\n# Build related configuration options\n#---------------------------------------------------------------------------\n\n# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in\n# documentation are documented, even if no documentation was available. Private\n# class members and static file members will be hidden unless the\n# EXTRACT_PRIVATE respectively EXTRACT_STATIC tags are set to YES.\n# Note: This will also disable the warnings about undocumented members that are\n# normally produced when WARNINGS is set to YES.\n# The default value is: NO.\n\nEXTRACT_ALL            = YES\n\n# If the EXTRACT_PRIVATE tag is set to YES all private members of a class will\n# be included in the documentation.\n# The default value is: NO.\n\nEXTRACT_PRIVATE        = YES\n\n# If the EXTRACT_PACKAGE tag is set to YES all members with package or internal\n# scope will be included in the documentation.\n# The default value is: NO.\n\nEXTRACT_PACKAGE        = NO\n\n# If the EXTRACT_STATIC tag is set to YES all static members of a file will be\n# included in the documentation.\n# The default value is: NO.\n\nEXTRACT_STATIC         = YES\n\n# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs) defined\n# locally in source files will be included in the documentation. If set to NO\n# only classes defined in header files are included. Does not have any effect\n# for Java sources.\n# The default value is: YES.\n\nEXTRACT_LOCAL_CLASSES  = YES\n\n# This flag is only useful for Objective-C code. When set to YES local methods,\n# which are defined in the implementation section but not in the interface are\n# included in the documentation. If set to NO only methods in the interface are\n# included.\n# The default value is: NO.\n\nEXTRACT_LOCAL_METHODS  = NO\n\n# If this flag is set to YES, the members of anonymous namespaces will be\n# extracted and appear in the documentation as a namespace called\n# 'anonymous_namespace{file}', where file will be replaced with the base name of\n# the file that contains the anonymous namespace. By default anonymous namespace\n# are hidden.\n# The default value is: NO.\n\nEXTRACT_ANON_NSPACES   = NO\n\n# If the HIDE_UNDOC_MEMBERS tag is set to YES, doxygen will hide all\n# undocumented members inside documented classes or files. If set to NO these\n# members will be included in the various overviews, but no documentation\n# section is generated. This option has no effect if EXTRACT_ALL is enabled.\n# The default value is: NO.\n\nHIDE_UNDOC_MEMBERS     = NO\n\n# If the HIDE_UNDOC_CLASSES tag is set to YES, doxygen will hide all\n# undocumented classes that are normally visible in the class hierarchy. If set\n# to NO these classes will be included in the various overviews. This option has\n# no effect if EXTRACT_ALL is enabled.\n# The default value is: NO.\n\nHIDE_UNDOC_CLASSES     = NO\n\n# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, doxygen will hide all friend\n# (class|struct|union) declarations. If set to NO these declarations will be\n# included in the documentation.\n# The default value is: NO.\n\nHIDE_FRIEND_COMPOUNDS  = NO\n\n# If the HIDE_IN_BODY_DOCS tag is set to YES, doxygen will hide any\n# documentation blocks found inside the body of a function. If set to NO these\n# blocks will be appended to the function's detailed documentation block.\n# The default value is: NO.\n\nHIDE_IN_BODY_DOCS      = NO\n\n# The INTERNAL_DOCS tag determines if documentation that is typed after a\n# \\internal command is included. If the tag is set to NO then the documentation\n# will be excluded. Set it to YES to include the internal documentation.\n# The default value is: NO.\n\nINTERNAL_DOCS          = NO\n\n# If the CASE_SENSE_NAMES tag is set to NO then doxygen will only generate file\n# names in lower-case letters. If set to YES upper-case letters are also\n# allowed. This is useful if you have classes or files whose names only differ\n# in case and if your file system supports case sensitive file names. Windows\n# and Mac users are advised to set this option to NO.\n# The default value is: system dependent.\n\nCASE_SENSE_NAMES       = YES\n\n# If the HIDE_SCOPE_NAMES tag is set to NO then doxygen will show members with\n# their full class and namespace scopes in the documentation. If set to YES the\n# scope will be hidden.\n# The default value is: NO.\n\nHIDE_SCOPE_NAMES       = NO\n\n# If the SHOW_INCLUDE_FILES tag is set to YES then doxygen will put a list of\n# the files that are included by a file in the documentation of that file.\n# The default value is: YES.\n\nSHOW_INCLUDE_FILES     = YES\n\n# If the SHOW_GROUPED_MEMB_INC tag is set to YES then Doxygen will add for each\n# grouped member an include statement to the documentation, telling the reader\n# which file to include in order to use the member.\n# The default value is: NO.\n\nSHOW_GROUPED_MEMB_INC  = NO\n\n# If the FORCE_LOCAL_INCLUDES tag is set to YES then doxygen will list include\n# files with double quotes in the documentation rather than with sharp brackets.\n# The default value is: NO.\n\nFORCE_LOCAL_INCLUDES   = NO\n\n# If the INLINE_INFO tag is set to YES then a tag [inline] is inserted in the\n# documentation for inline members.\n# The default value is: YES.\n\nINLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES then doxygen will sort the\n# (detailed) documentation of file and class members alphabetically by member\n# name. If set to NO the members will appear in declaration order.\n# The default value is: YES.\n\nSORT_MEMBER_DOCS       = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the brief\n# descriptions of file, namespace and class members alphabetically by member\n# name. If set to NO the members will appear in declaration order. Note that\n# this will also influence the order of the classes in the class list.\n# The default value is: NO.\n\nSORT_BRIEF_DOCS        = NO\n\n# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen will sort the\n# (brief and detailed) documentation of class members so that constructors and\n# destructors are listed first. If set to NO the constructors will appear in the\n# respective orders defined by SORT_BRIEF_DOCS and SORT_MEMBER_DOCS.\n# Note: If SORT_BRIEF_DOCS is set to NO this option is ignored for sorting brief\n# member documentation.\n# Note: If SORT_MEMBER_DOCS is set to NO this option is ignored for sorting\n# detailed member documentation.\n# The default value is: NO.\n\nSORT_MEMBERS_CTORS_1ST = NO\n\n# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the hierarchy\n# of group names into alphabetical order. If set to NO the group names will\n# appear in their defined order.\n# The default value is: NO.\n\nSORT_GROUP_NAMES       = NO\n\n# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be sorted by\n# fully-qualified names, including namespaces. If set to NO, the class list will\n# be sorted only by class name, not including the namespace part.\n# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES.\n# Note: This option applies only to the class list, not to the alphabetical\n# list.\n# The default value is: NO.\n\nSORT_BY_SCOPE_NAME     = NO\n\n# If the STRICT_PROTO_MATCHING option is enabled and doxygen fails to do proper\n# type resolution of all parameters of a function it will reject a match between\n# the prototype and the implementation of a member function even if there is\n# only one candidate or it is obvious which candidate to choose by doing a\n# simple string match. By disabling STRICT_PROTO_MATCHING doxygen will still\n# accept a match between prototype and implementation in such cases.\n# The default value is: NO.\n\nSTRICT_PROTO_MATCHING  = NO\n\n# The GENERATE_TODOLIST tag can be used to enable ( YES) or disable ( NO) the\n# todo list. This list is created by putting \\todo commands in the\n# documentation.\n# The default value is: YES.\n\nGENERATE_TODOLIST      = YES\n\n# The GENERATE_TESTLIST tag can be used to enable ( YES) or disable ( NO) the\n# test list. This list is created by putting \\test commands in the\n# documentation.\n# The default value is: YES.\n\nGENERATE_TESTLIST      = YES\n\n# The GENERATE_BUGLIST tag can be used to enable ( YES) or disable ( NO) the bug\n# list. This list is created by putting \\bug commands in the documentation.\n# The default value is: YES.\n\nGENERATE_BUGLIST       = YES\n\n# The GENERATE_DEPRECATEDLIST tag can be used to enable ( YES) or disable ( NO)\n# the deprecated list. This list is created by putting \\deprecated commands in\n# the documentation.\n# The default value is: YES.\n\nGENERATE_DEPRECATEDLIST= YES\n\n# The ENABLED_SECTIONS tag can be used to enable conditional documentation\n# sections, marked by \\if <section_label> ... \\endif and \\cond <section_label>\n# ... \\endcond blocks.\n\nENABLED_SECTIONS       =\n\n# The MAX_INITIALIZER_LINES tag determines the maximum number of lines that the\n# initial value of a variable or macro / define can have for it to appear in the\n# documentation. If the initializer consists of more lines than specified here\n# it will be hidden. Use a value of 0 to hide initializers completely. The\n# appearance of the value of individual variables and macros / defines can be\n# controlled using \\showinitializer or \\hideinitializer command in the\n# documentation regardless of this setting.\n# Minimum value: 0, maximum value: 10000, default value: 30.\n\nMAX_INITIALIZER_LINES  = 30\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated at\n# the bottom of the documentation of classes and structs. If set to YES the list\n# will mention the files that were used to generate the documentation.\n# The default value is: YES.\n\nSHOW_USED_FILES        = YES\n\n# Set the SHOW_FILES tag to NO to disable the generation of the Files page. This\n# will remove the Files entry from the Quick Index and from the Folder Tree View\n# (if specified).\n# The default value is: YES.\n\nSHOW_FILES             = YES\n\n# Set the SHOW_NAMESPACES tag to NO to disable the generation of the Namespaces\n# page. This will remove the Namespaces entry from the Quick Index and from the\n# Folder Tree View (if specified).\n# The default value is: YES.\n\nSHOW_NAMESPACES        = YES\n\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command command input-file, where command is the value of the\n# FILE_VERSION_FILTER tag, and input-file is the name of an input file provided\n# by doxygen. Whatever the program writes to standard output is used as the file\n# version. For an example see the documentation.\n\nFILE_VERSION_FILTER    =\n\n# The LAYOUT_FILE tag can be used to specify a layout file which will be parsed\n# by doxygen. The layout file controls the global structure of the generated\n# output files in an output format independent way. To create the layout file\n# that represents doxygen's defaults, run doxygen with the -l option. You can\n# optionally specify a file name after the option, if omitted DoxygenLayout.xml\n# will be used as the name of the layout file.\n#\n# Note that if you run doxygen from a directory containing a file called\n# DoxygenLayout.xml, doxygen will parse it automatically even if the LAYOUT_FILE\n# tag is left empty.\n\nLAYOUT_FILE            =\n\n# The CITE_BIB_FILES tag can be used to specify one or more bib files containing\n# the reference definitions. This must be a list of .bib files. The .bib\n# extension is automatically appended if omitted. This requires the bibtex tool\n# to be installed. See also https://en.wikipedia.org/wiki/BibTeX for more info.\n# For LaTeX the style of the bibliography can be controlled using\n# LATEX_BIB_STYLE. To use this feature you need bibtex and perl available in the\n# search path. Do not use file names with spaces, bibtex cannot handle them. See\n# also \\cite for info how to create references.\n\nCITE_BIB_FILES         =\n\n#---------------------------------------------------------------------------\n# Configuration options related to warning and progress messages\n#---------------------------------------------------------------------------\n\n# The QUIET tag can be used to turn on/off the messages that are generated to\n# standard output by doxygen. If QUIET is set to YES this implies that the\n# messages are off.\n# The default value is: NO.\n\nQUIET                  = NO\n\n# The WARNINGS tag can be used to turn on/off the warning messages that are\n# generated to standard error ( stderr) by doxygen. If WARNINGS is set to YES\n# this implies that the warnings are on.\n#\n# Tip: Turn warnings on while writing the documentation.\n# The default value is: YES.\n\nWARNINGS               = YES\n\n# If the WARN_IF_UNDOCUMENTED tag is set to YES, then doxygen will generate\n# warnings for undocumented members. If EXTRACT_ALL is set to YES then this flag\n# will automatically be disabled.\n# The default value is: YES.\n\nWARN_IF_UNDOCUMENTED   = YES\n\n# If the WARN_IF_DOC_ERROR tag is set to YES, doxygen will generate warnings for\n# potential errors in the documentation, such as not documenting some parameters\n# in a documented function, or documenting parameters that don't exist or using\n# markup commands wrongly.\n# The default value is: YES.\n\nWARN_IF_DOC_ERROR      = YES\n\n# This WARN_NO_PARAMDOC option can be enabled to get warnings for functions that\n# are documented, but have no documentation for their parameters or return\n# value. If set to NO doxygen will only warn about wrong or incomplete parameter\n# documentation, but not about the absence of documentation.\n# The default value is: NO.\n\nWARN_NO_PARAMDOC       = NO\n\n# The WARN_FORMAT tag determines the format of the warning messages that doxygen\n# can produce. The string should contain the $file, $line, and $text tags, which\n# will be replaced by the file and line number from which the warning originated\n# and the warning text. Optionally the format may contain $version, which will\n# be replaced by the version of the file (if it could be obtained via\n# FILE_VERSION_FILTER)\n# The default value is: $file:$line: $text.\n\nWARN_FORMAT            = \"$file:$line: $text\"\n\n# The WARN_LOGFILE tag can be used to specify a file to which warning and error\n# messages should be written. If left blank the output is written to standard\n# error (stderr).\n\nWARN_LOGFILE           =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the input files\n#---------------------------------------------------------------------------\n\n# The INPUT tag is used to specify the files and/or directories that contain\n# documented source files. You may enter file names like myfile.cpp or\n# directories like /usr/src/myproject. Separate the files or directories with\n# spaces.\n# Note: If this tag is empty the current directory is searched.\n\nINPUT                  = contrib/epee external/easylogging++ src \n\n# This tag can be used to specify the character encoding of the source files\n# that doxygen parses. Internally doxygen uses the UTF-8 encoding. Doxygen uses\n# libiconv (or the iconv built into libc) for the transcoding. See the libiconv\n# documentation (see: https://www.gnu.org/software/libiconv) for the list of\n# possible encodings.\n# The default value is: UTF-8.\n\nINPUT_ENCODING         = UTF-8\n\n# If the value of the INPUT tag contains directories, you can use the\n# FILE_PATTERNS tag to specify one or more wildcard patterns (like *.cpp and\n# *.h) to filter out the source-files in the directories. If left blank the\n# following patterns are tested:*.c, *.cc, *.cxx, *.cpp, *.c++, *.java, *.ii,\n# *.ixx, *.ipp, *.i++, *.inl, *.idl, *.ddl, *.odl, *.h, *.hh, *.hxx, *.hpp,\n# *.h++, *.cs, *.d, *.php, *.php4, *.php5, *.phtml, *.inc, *.m, *.markdown,\n# *.md, *.mm, *.dox, *.py, *.f90, *.f, *.for, *.tcl, *.vhd, *.vhdl, *.ucf,\n# *.qsf, *.as and *.js.\n\nFILE_PATTERNS          =\n\n# The RECURSIVE tag can be used to specify whether or not subdirectories should\n# be searched for input files as well.\n# The default value is: NO.\n\nRECURSIVE              = YES\n\n# The EXCLUDE tag can be used to specify files and/or directories that should be\n# excluded from the INPUT source files. This way you can easily exclude a\n# subdirectory from a directory tree whose root is specified with the INPUT tag.\n#\n# Note that relative paths are relative to the directory from which doxygen is\n# run.\n\nEXCLUDE                =\n\n# The EXCLUDE_SYMLINKS tag can be used to select whether or not files or\n# directories that are symbolic links (a Unix file system feature) are excluded\n# from the input.\n# The default value is: NO.\n\nEXCLUDE_SYMLINKS       = NO\n\n# If the value of the INPUT tag contains directories, you can use the\n# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude\n# certain files from those directories.\n#\n# Note that the wildcards are matched against the file with absolute path, so to\n# exclude all test directories for example use the pattern */test/*\n\nEXCLUDE_PATTERNS       = */src/crypto/crypto_ops_builder/ref10*\n\n# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names\n# (namespaces, classes, functions, etc.) that should be excluded from the\n# output. The symbol name can be a fully qualified name, a word, or if the\n# wildcard * is used, a substring. Examples: ANamespace, AClass,\n# AClass::ANamespace, ANamespace::*Test\n#\n# Note that the wildcards are matched against the file with absolute path, so to\n# exclude all test directories use the pattern */test/*\n\nEXCLUDE_SYMBOLS        =\n\n# The EXAMPLE_PATH tag can be used to specify one or more files or directories\n# that contain example code fragments that are included (see the \\include\n# command).\n\nEXAMPLE_PATH           =\n\n# If the value of the EXAMPLE_PATH tag contains directories, you can use the\n# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp and\n# *.h) to filter out the source-files in the directories. If left blank all\n# files are included.\n\nEXAMPLE_PATTERNS       =\n\n# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be\n# searched for input files to be used with the \\include or \\dontinclude commands\n# irrespective of the value of the RECURSIVE tag.\n# The default value is: NO.\n\nEXAMPLE_RECURSIVE      = NO\n\n# The IMAGE_PATH tag can be used to specify one or more files or directories\n# that contain images that are to be included in the documentation (see the\n# \\image command).\n\nIMAGE_PATH             =\n\n# The INPUT_FILTER tag can be used to specify a program that doxygen should\n# invoke to filter for each input file. Doxygen will invoke the filter program\n# by executing (via popen()) the command:\n#\n# <filter> <input-file>\n#\n# where <filter> is the value of the INPUT_FILTER tag, and <input-file> is the\n# name of an input file. Doxygen will then use the output that the filter\n# program writes to standard output. If FILTER_PATTERNS is specified, this tag\n# will be ignored.\n#\n# Note that the filter must not add or remove lines; it is applied before the\n# code is scanned, but not when the output code is generated. If lines are added\n# or removed, the anchors will not be placed correctly.\n\nINPUT_FILTER           =\n\n# The FILTER_PATTERNS tag can be used to specify filters on a per file pattern\n# basis. Doxygen will compare the file name with each pattern and apply the\n# filter if there is a match. The filters are a list of the form: pattern=filter\n# (like *.cpp=my_cpp_filter). See INPUT_FILTER for further information on how\n# filters are used. If the FILTER_PATTERNS tag is empty or if none of the\n# patterns match the file name, INPUT_FILTER is applied.\n\nFILTER_PATTERNS        =\n\n# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using\n# INPUT_FILTER ) will also be used to filter the input files that are used for\n# producing the source files to browse (i.e. when SOURCE_BROWSER is set to YES).\n# The default value is: NO.\n\nFILTER_SOURCE_FILES    = NO\n\n# The FILTER_SOURCE_PATTERNS tag can be used to specify source filters per file\n# pattern. A pattern will override the setting for FILTER_PATTERN (if any) and\n# it is also possible to disable source filtering for a specific pattern using\n# *.ext= (so without naming a filter).\n# This tag requires that the tag FILTER_SOURCE_FILES is set to YES.\n\nFILTER_SOURCE_PATTERNS =\n\n# If the USE_MDFILE_AS_MAINPAGE tag refers to the name of a markdown file that\n# is part of the input, its contents will be placed on the main page\n# (index.html). This can be useful if you have a project on for instance GitHub\n# and want to reuse the introduction page also for the doxygen output.\n\nUSE_MDFILE_AS_MAINPAGE =\n\n#---------------------------------------------------------------------------\n# Configuration options related to source browsing\n#---------------------------------------------------------------------------\n\n# If the SOURCE_BROWSER tag is set to YES then a list of source files will be\n# generated. Documented entities will be cross-referenced with these sources.\n#\n# Note: To get rid of all source code in the generated output, make sure that\n# also VERBATIM_HEADERS is set to NO.\n# The default value is: NO.\n\nSOURCE_BROWSER         = NO\n\n# Setting the INLINE_SOURCES tag to YES will include the body of functions,\n# classes and enums directly into the documentation.\n# The default value is: NO.\n\nINLINE_SOURCES         = NO\n\n# Setting the STRIP_CODE_COMMENTS tag to YES will instruct doxygen to hide any\n# special comment blocks from generated source code fragments. Normal C, C++ and\n# Fortran comments will always remain visible.\n# The default value is: YES.\n\nSTRIP_CODE_COMMENTS    = YES\n\n# If the REFERENCED_BY_RELATION tag is set to YES then for each documented\n# function all documented functions referencing it will be listed.\n# The default value is: NO.\n\nREFERENCED_BY_RELATION = NO\n\n# If the REFERENCES_RELATION tag is set to YES then for each documented function\n# all documented entities called/used by that function will be listed.\n# The default value is: NO.\n\nREFERENCES_RELATION    = NO\n\n# If the REFERENCES_LINK_SOURCE tag is set to YES and SOURCE_BROWSER tag is set\n# to YES, then the hyperlinks from functions in REFERENCES_RELATION and\n# REFERENCED_BY_RELATION lists will link to the source code. Otherwise they will\n# link to the documentation.\n# The default value is: YES.\n\nREFERENCES_LINK_SOURCE = YES\n\n# If SOURCE_TOOLTIPS is enabled (the default) then hovering a hyperlink in the\n# source code will show a tooltip with additional information such as prototype,\n# brief description and links to the definition and documentation. Since this\n# will make the HTML file larger and loading of large files a bit slower, you\n# can opt to disable this feature.\n# The default value is: YES.\n# This tag requires that the tag SOURCE_BROWSER is set to YES.\n\nSOURCE_TOOLTIPS        = YES\n\n# If the USE_HTAGS tag is set to YES then the references to source code will\n# point to the HTML generated by the htags(1) tool instead of doxygen built-in\n# source browser. The htags tool is part of GNU's global source tagging system\n# (see https://www.gnu.org/software/global/global.html). You will need version\n# 4.8.6 or higher.\n#\n# To use it do the following:\n# - Install the latest version of global\n# - Enable SOURCE_BROWSER and USE_HTAGS in the config file\n# - Make sure the INPUT points to the root of the source tree\n# - Run doxygen as normal\n#\n# Doxygen will invoke htags (and that will in turn invoke gtags), so these\n# tools must be available from the command line (i.e. in the search path).\n#\n# The result: instead of the source browser generated by doxygen, the links to\n# source code will now point to the output of htags.\n# The default value is: NO.\n# This tag requires that the tag SOURCE_BROWSER is set to YES.\n\nUSE_HTAGS              = NO\n\n# If the VERBATIM_HEADERS tag is set the YES then doxygen will generate a\n# verbatim copy of the header file for each class for which an include is\n# specified. Set to NO to disable this.\n# See also: Section \\class.\n# The default value is: YES.\n\nVERBATIM_HEADERS       = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to the alphabetical class index\n#---------------------------------------------------------------------------\n\n# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index of all\n# compounds will be generated. Enable this if the project contains a lot of\n# classes, structs, unions or interfaces.\n# The default value is: YES.\n\nALPHABETICAL_INDEX     = YES\n\n# The COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns in\n# which the alphabetical index list will be split.\n# Minimum value: 1, maximum value: 20, default value: 5.\n# This tag requires that the tag ALPHABETICAL_INDEX is set to YES.\n\nCOLS_IN_ALPHA_INDEX    = 5\n\n# In case all classes in a project start with a common prefix, all classes will\n# be put under the same header in the alphabetical index. The IGNORE_PREFIX tag\n# can be used to specify a prefix (or a list of prefixes) that should be ignored\n# while generating the index headers.\n# This tag requires that the tag ALPHABETICAL_INDEX is set to YES.\n\nIGNORE_PREFIX          =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the HTML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_HTML tag is set to YES doxygen will generate HTML output\n# The default value is: YES.\n\nGENERATE_HTML          = YES\n\n# The HTML_OUTPUT tag is used to specify where the HTML docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: html.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_OUTPUT            = html\n\n# The HTML_FILE_EXTENSION tag can be used to specify the file extension for each\n# generated HTML page (for example: .htm, .php, .asp).\n# The default value is: .html.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_FILE_EXTENSION    = .html\n\n# The HTML_HEADER tag can be used to specify a user-defined HTML header file for\n# each generated HTML page. If the tag is left blank doxygen will generate a\n# standard header.\n#\n# To get valid HTML the header file that includes any scripts and style sheets\n# that doxygen needs, which is dependent on the configuration options used (e.g.\n# the setting GENERATE_TREEVIEW). It is highly recommended to start with a\n# default header using\n# doxygen -w html new_header.html new_footer.html new_stylesheet.css\n# YourConfigFile\n# and then modify the file new_header.html. See also section \"Doxygen usage\"\n# for information on how to generate the default header that doxygen normally\n# uses.\n# Note: The header is subject to change so you typically have to regenerate the\n# default header when upgrading to a newer version of doxygen. For a description\n# of the possible markers and block names see the documentation.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_HEADER            =\n\n# The HTML_FOOTER tag can be used to specify a user-defined HTML footer for each\n# generated HTML page. If the tag is left blank doxygen will generate a standard\n# footer. See HTML_HEADER for more information on how to generate a default\n# footer and what special commands can be used inside the footer. See also\n# section \"Doxygen usage\" for information on how to generate the default footer\n# that doxygen normally uses.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_FOOTER            =\n\n# The HTML_STYLESHEET tag can be used to specify a user-defined cascading style\n# sheet that is used by each HTML page. It can be used to fine-tune the look of\n# the HTML output. If left blank doxygen will generate a default style sheet.\n# See also section \"Doxygen usage\" for information on how to generate the style\n# sheet that doxygen normally uses.\n# Note: It is recommended to use HTML_EXTRA_STYLESHEET instead of this tag, as\n# it is more robust and this tag (HTML_STYLESHEET) will in the future become\n# obsolete.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_STYLESHEET        =\n\n# The HTML_EXTRA_STYLESHEET tag can be used to specify an additional user-\n# defined cascading style sheet that is included after the standard style sheets\n# created by doxygen. Using this option one can overrule certain style aspects.\n# This is preferred over using HTML_STYLESHEET since it does not replace the\n# standard style sheet and is therefor more robust against future updates.\n# Doxygen will copy the style sheet file to the output directory. For an example\n# see the documentation.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_EXTRA_STYLESHEET  =\n\n# The HTML_EXTRA_FILES tag can be used to specify one or more extra images or\n# other source files which should be copied to the HTML output directory. Note\n# that these files will be copied to the base HTML output directory. Use the\n# $relpath^ marker in the HTML_HEADER and/or HTML_FOOTER files to load these\n# files. In the HTML_STYLESHEET file, use the file name only. Also note that the\n# files will be copied as-is; there are no commands or markers available.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_EXTRA_FILES       =\n\n# The HTML_COLORSTYLE_HUE tag controls the color of the HTML output. Doxygen\n# will adjust the colors in the stylesheet and background images according to\n# this color. Hue is specified as an angle on a colorwheel, see\n# https://en.wikipedia.org/wiki/Hue for more information. For instance the value\n# 0 represents red, 60 is yellow, 120 is green, 180 is cyan, 240 is blue, 300\n# purple, and 360 is red again.\n# Minimum value: 0, maximum value: 359, default value: 220.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_COLORSTYLE_HUE    = 220\n\n# The HTML_COLORSTYLE_SAT tag controls the purity (or saturation) of the colors\n# in the HTML output. For a value of 0 the output will use grayscales only. A\n# value of 255 will produce the most vivid colors.\n# Minimum value: 0, maximum value: 255, default value: 100.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_COLORSTYLE_SAT    = 100\n\n# The HTML_COLORSTYLE_GAMMA tag controls the gamma correction applied to the\n# luminance component of the colors in the HTML output. Values below 100\n# gradually make the output lighter, whereas values above 100 make the output\n# darker. The value divided by 100 is the actual gamma applied, so 80 represents\n# a gamma of 0.8, The value 220 represents a gamma of 2.2, and 100 does not\n# change the gamma.\n# Minimum value: 40, maximum value: 240, default value: 80.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_COLORSTYLE_GAMMA  = 80\n\n# If the HTML_TIMESTAMP tag is set to YES then the footer of each generated HTML\n# page will contain the date and time when the page was generated. Setting this\n# to NO can help when comparing the output of multiple runs.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_TIMESTAMP         = YES\n\n# If the HTML_DYNAMIC_SECTIONS tag is set to YES then the generated HTML\n# documentation will contain sections that can be hidden and shown after the\n# page has loaded.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_DYNAMIC_SECTIONS  = NO\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n# representing an infinite number of entries and will result in a full expanded\n# tree by default.\n# Minimum value: 0, maximum value: 9999, default value: 100.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_INDEX_NUM_ENTRIES = 100\n\n# If the GENERATE_DOCSET tag is set to YES, additional index files will be\n# generated that can be used as input for Apple's Xcode 3 integrated development\n# environment (see: https://developer.apple.com/tools/xcode/), introduced with\n# OSX 10.5 (Leopard). To create a documentation set, doxygen will generate a\n# Makefile in the HTML output directory. Running make will produce the docset in\n# that directory and running make install will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at\n# startup. See https://developer.apple.com/tools/creatingdocsetswithdoxygen.html\n# for more information.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_DOCSET        = NO\n\n# This tag determines the name of the docset feed. A documentation feed provides\n# an umbrella under which multiple documentation sets from a single provider\n# (such as a company or product suite) can be grouped.\n# The default value is: Doxygen generated docs.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_FEEDNAME        = \"Doxygen generated docs\"\n\n# This tag specifies a string that should uniquely identify the documentation\n# set bundle. This should be a reverse domain-name style string, e.g.\n# com.mycompany.MyDocSet. Doxygen will append .docset to the name.\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_BUNDLE_ID       = org.doxygen.Project\n\n# The DOCSET_PUBLISHER_ID tag specifies a string that should uniquely identify\n# the documentation publisher. This should be a reverse domain-name style\n# string, e.g. com.mycompany.MyDocSet.documentation.\n# The default value is: org.doxygen.Publisher.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_PUBLISHER_ID    = org.doxygen.Publisher\n\n# The DOCSET_PUBLISHER_NAME tag identifies the documentation publisher.\n# The default value is: Publisher.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_PUBLISHER_NAME  = Publisher\n\n# If the GENERATE_HTMLHELP tag is set to YES then doxygen generates three\n# additional HTML index files: index.hhp, index.hhc, and index.hhk. The\n# index.hhp is a project file that can be read by Microsoft's HTML Help Workshop\n# (see: https://www.microsoft.com/en-us/download/details.aspx?id=21138) on\n# Windows.\n#\n# The HTML Help Workshop contains a compiler that can convert all HTML output\n# generated by doxygen into a single compiled HTML file (.chm). Compiled HTML\n# files are now used as the Windows 98 help format, and will replace the old\n# Windows help format (.hlp) on all Windows platforms in the future. Compressed\n# HTML files also contain an index, a table of contents, and you can search for\n# words in the documentation. The HTML workshop also contains a viewer for\n# compressed HTML files.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_HTMLHELP      = NO\n\n# The CHM_FILE tag can be used to specify the file name of the resulting .chm\n# file. You can add a path in front of the file if the result should not be\n# written to the html output directory.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nCHM_FILE               =\n\n# The HHC_LOCATION tag can be used to specify the location (absolute path\n# including file name) of the HTML help compiler ( hhc.exe). If non-empty\n# doxygen will try to run the HTML help compiler on the generated index.hhp.\n# The file has to be specified with full path.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nHHC_LOCATION           =\n\n# The GENERATE_CHI flag controls if a separate .chi index file is generated (\n# YES) or that it should be included in the master .chm file ( NO).\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nGENERATE_CHI           = NO\n\n# The CHM_INDEX_ENCODING is used to encode HtmlHelp index ( hhk), content ( hhc)\n# and project file content.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nCHM_INDEX_ENCODING     =\n\n# The BINARY_TOC flag controls whether a binary table of contents is generated (\n# YES) or a normal table of contents ( NO) in the .chm file. Furthermore it\n# enables the Previous and Next buttons.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nBINARY_TOC             = NO\n\n# The TOC_EXPAND flag can be set to YES to add extra items for group members to\n# the table of contents of the HTML help documentation and to the tree view.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nTOC_EXPAND             = NO\n\n# If the GENERATE_QHP tag is set to YES and both QHP_NAMESPACE and\n# QHP_VIRTUAL_FOLDER are set, an additional index file will be generated that\n# can be used as input for Qt's qhelpgenerator to generate a Qt Compressed Help\n# (.qch) of the generated HTML documentation.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_QHP           = NO\n\n# If the QHG_LOCATION tag is specified, the QCH_FILE tag can be used to specify\n# the file name of the resulting .qch file. The path specified is relative to\n# the HTML output folder.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQCH_FILE               =\n\n# The QHP_NAMESPACE tag specifies the namespace to use when generating Qt Help\n# Project output. For more information please see Qt Help Project / Namespace\n# (see: https://doc.qt.io/archives/qt-4.8/qthelpproject.html#namespace).\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_NAMESPACE          = org.doxygen.Project\n\n# The QHP_VIRTUAL_FOLDER tag specifies the namespace to use when generating Qt\n# Help Project output. For more information please see Qt Help Project / Virtual\n# Folders (see: https://doc.qt.io/archives/qt-4.8/qthelpproject.html#virtual-\n# folders).\n# The default value is: doc.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_VIRTUAL_FOLDER     = doc\n\n# If the QHP_CUST_FILTER_NAME tag is set, it specifies the name of a custom\n# filter to add. For more information please see Qt Help Project / Custom\n# Filters (see: https://doc.qt.io/archives/qt-4.8/qthelpproject.html#custom-\n# filters).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_CUST_FILTER_NAME   =\n\n# The QHP_CUST_FILTER_ATTRS tag specifies the list of the attributes of the\n# custom filter to add. For more information please see Qt Help Project / Custom\n# Filters (see: https://doc.qt.io/archives/qt-4.8/qthelpproject.html#custom-\n# filters).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_CUST_FILTER_ATTRS  =\n\n# The QHP_SECT_FILTER_ATTRS tag specifies the list of the attributes this\n# project's filter section matches. Qt Help Project / Filter Attributes (see:\n# https://doc.qt.io/archives/qt-4.8/qthelpproject.html#filter-attributes).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_SECT_FILTER_ATTRS  =\n\n# The QHG_LOCATION tag can be used to specify the location of Qt's\n# qhelpgenerator. If non-empty doxygen will try to run qhelpgenerator on the\n# generated .qhp file.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHG_LOCATION           =\n\n# If the GENERATE_ECLIPSEHELP tag is set to YES, additional index files will be\n# generated, together with the HTML files, they form an Eclipse help plugin. To\n# install this plugin and make it available under the help contents menu in\n# Eclipse, the contents of the directory containing the HTML and XML files needs\n# to be copied into the plugins directory of eclipse. The name of the directory\n# within the plugins directory should be the same as the ECLIPSE_DOC_ID value.\n# After copying Eclipse needs to be restarted before the help appears.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_ECLIPSEHELP   = NO\n\n# A unique identifier for the Eclipse help plugin. When installing the plugin\n# the directory name containing the HTML and XML files should also have this\n# name. Each documentation set should have its own identifier.\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_ECLIPSEHELP is set to YES.\n\nECLIPSE_DOC_ID         = org.doxygen.Project\n\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n# it. Since the tabs in the index contain the same information as the navigation\n# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nDISABLE_INDEX          = NO\n\n# The GENERATE_TREEVIEW tag is used to specify whether a tree-like index\n# structure should be generated to display hierarchical information. If the tag\n# value is set to YES, a side panel will be generated containing a tree-like\n# index structure (just like the one that is generated for HTML Help). For this\n# to work a browser that supports JavaScript, DHTML, CSS and frames is required\n# (i.e. any modern browser). Windows users are probably better off using the\n# HTML help feature. Via custom stylesheets (see HTML_EXTRA_STYLESHEET) one can\n# further fine-tune the look of the index. As an example, the default style\n# sheet generated by doxygen has an example that shows how to put an image at\n# the root of the tree instead of the PROJECT_NAME. Since the tree basically has\n# the same information as the tab index, you could consider setting\n# DISABLE_INDEX to YES when enabling this option.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_TREEVIEW      = NO\n\n# The ENUM_VALUES_PER_LINE tag can be used to set the number of enum values that\n# doxygen will group on one line in the generated HTML documentation.\n#\n# Note that a value of 0 will completely suppress the enum values from appearing\n# in the overview section.\n# Minimum value: 0, maximum value: 20, default value: 4.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nENUM_VALUES_PER_LINE   = 4\n\n# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be used\n# to set the initial width (in pixels) of the frame in which the tree is shown.\n# Minimum value: 0, maximum value: 1500, default value: 250.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nTREEVIEW_WIDTH         = 250\n\n# When the EXT_LINKS_IN_WINDOW option is set to YES doxygen will open links to\n# external symbols imported via tag files in a separate window.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nEXT_LINKS_IN_WINDOW    = NO\n\n# Use this tag to change the font size of LaTeX formulas included as images in\n# the HTML documentation. When you change the font size after a successful\n# doxygen run you need to manually remove any form_*.png images from the HTML\n# output directory to force them to be regenerated.\n# Minimum value: 8, maximum value: 50, default value: 10.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nFORMULA_FONTSIZE       = 10\n\n# Use the FORMULA_TRANPARENT tag to determine whether or not the images\n# generated for formulas are transparent PNGs. Transparent PNGs are not\n# supported properly for IE 6.0, but are supported on all modern browsers.\n#\n# Note that when changing this option you need to delete any form_*.png files in\n# the HTML output directory before the changes have effect.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nFORMULA_TRANSPARENT    = YES\n\n# Enable the USE_MATHJAX option to render LaTeX formulas using MathJax (see\n# https://www.mathjax.org) which uses client side Javascript for the rendering\n# instead of using prerendered bitmaps. Use this if you do not have LaTeX\n# installed or if you want to formulas look prettier in the HTML output. When\n# enabled you may also need to install MathJax separately and configure the path\n# to it using the MATHJAX_RELPATH option.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nUSE_MATHJAX            = NO\n\n# When MathJax is enabled you can set the default output format to be used for\n# the MathJax output. See the MathJax site (see:\n# https://docs.mathjax.org/en/latest/output.html) for more details.\n# Possible values are: HTML-CSS (which is slower, but has the best\n# compatibility), NativeMML (i.e. MathML) and SVG.\n# The default value is: HTML-CSS.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_FORMAT         = HTML-CSS\n\n# When MathJax is enabled you need to specify the location relative to the HTML\n# output directory using the MATHJAX_RELPATH option. The destination directory\n# should contain the MathJax.js script. For instance, if the mathjax directory\n# is located at the same level as the HTML output directory, then\n# MATHJAX_RELPATH should be ../mathjax. The default value points to the MathJax\n# Content Delivery Network so you can quickly see the result without installing\n# MathJax. However, it is strongly recommended to install a local copy of\n# MathJax from https://www.mathjax.org before deployment.\n# The default value is: https://cdn.mathjax.org/mathjax/latest.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_RELPATH        = https://cdn.mathjax.org/mathjax/latest\n\n# The MATHJAX_EXTENSIONS tag can be used to specify one or more MathJax\n# extension names that should be enabled during MathJax rendering. For example\n# MATHJAX_EXTENSIONS = TeX/AMSmath TeX/AMSsymbols\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_EXTENSIONS     =\n\n# The MATHJAX_CODEFILE tag can be used to specify a file with javascript pieces\n# of code that will be used on startup of the MathJax code. See the MathJax site\n# (see: https://docs.mathjax.org/en/latest/output.html) for more details. For an\n# example see the documentation.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_CODEFILE       =\n\n# When the SEARCHENGINE tag is enabled doxygen will generate a search box for\n# the HTML output. The underlying search engine uses javascript and DHTML and\n# should work on any modern browser. Note that when using HTML help\n# (GENERATE_HTMLHELP), Qt help (GENERATE_QHP), or docsets (GENERATE_DOCSET)\n# there is already a search function so this one should typically be disabled.\n# For large projects the javascript based search engine can be slow, then\n# enabling SERVER_BASED_SEARCH may provide a better solution. It is possible to\n# search using the keyboard; to jump to the search box use <access key> + S\n# (what the <access key> is depends on the OS and browser, but it is typically\n# <CTRL>, <ALT>/<option>, or both). Inside the search box use the <cursor down\n# key> to jump into the search results window, the results can be navigated\n# using the <cursor keys>. Press <Enter> to select an item or <escape> to cancel\n# the search. The filter options can be selected when the cursor is inside the\n# search box by pressing <Shift>+<cursor down>. Also here use the <cursor keys>\n# to select a filter and <Enter> or <escape> to activate or cancel the filter\n# option.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nSEARCHENGINE           = YES\n\n# When the SERVER_BASED_SEARCH tag is enabled the search engine will be\n# implemented using a web server instead of a web client using Javascript. There\n# are two flavors of web server based searching depending on the EXTERNAL_SEARCH\n# setting. When disabled, doxygen will generate a PHP script for searching and\n# an index file used by the script. When EXTERNAL_SEARCH is enabled the indexing\n# and searching needs to be provided by external tools. See the section\n# \"External Indexing and Searching\" for details.\n# The default value is: NO.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSERVER_BASED_SEARCH    = NO\n\n# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP\n# script for searching. Instead the search results are written to an XML file\n# which needs to be processed by an external indexer. Doxygen will invoke an\n# external search engine pointed to by the SEARCHENGINE_URL option to obtain the\n# search results.\n#\n# Doxygen ships with an example indexer ( doxyindexer) and search engine\n# (doxysearch.cgi) which are based on the open source search engine library\n# Xapian (see: https://xapian.org/).\n#\n# See the section \"External Indexing and Searching\" for details.\n# The default value is: NO.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTERNAL_SEARCH        = NO\n\n# The SEARCHENGINE_URL should point to a search engine hosted by a web server\n# which will return the search results when EXTERNAL_SEARCH is enabled.\n#\n# Doxygen ships with an example indexer ( doxyindexer) and search engine\n# (doxysearch.cgi) which are based on the open source search engine library\n# Xapian (see: https://xapian.org/). See the section \"External Indexing and\n# Searching\" for details.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSEARCHENGINE_URL       =\n\n# When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the unindexed\n# search data is written to a file for indexing by an external tool. With the\n# SEARCHDATA_FILE tag the name of this file can be specified.\n# The default file is: searchdata.xml.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSEARCHDATA_FILE        = searchdata.xml\n\n# When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the\n# EXTERNAL_SEARCH_ID tag can be used as an identifier for the project. This is\n# useful in combination with EXTRA_SEARCH_MAPPINGS to search through multiple\n# projects and redirect the results back to the right project.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTERNAL_SEARCH_ID     =\n\n# The EXTRA_SEARCH_MAPPINGS tag can be used to enable searching through doxygen\n# projects other than the one defined by this configuration file, but that are\n# all added to the same external search index. Each project needs to have a\n# unique id set via EXTERNAL_SEARCH_ID. The search mapping then maps the id of\n# to a relative location where the documentation can be found. The format is:\n# EXTRA_SEARCH_MAPPINGS = tagname1=loc1 tagname2=loc2 ...\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTRA_SEARCH_MAPPINGS  =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the LaTeX output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_LATEX tag is set to YES doxygen will generate LaTeX output.\n# The default value is: YES.\n\nGENERATE_LATEX         = NO\n\n# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: latex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_OUTPUT           = latex\n\n# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be\n# invoked.\n#\n# Note that when enabling USE_PDFLATEX this option is only used for generating\n# bitmaps for formulas in the HTML output, but not in the Makefile that is\n# written to the output directory.\n# The default file is: latex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_CMD_NAME         = latex\n\n# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to generate\n# index for LaTeX.\n# The default file is: makeindex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nMAKEINDEX_CMD_NAME     = makeindex\n\n# If the COMPACT_LATEX tag is set to YES doxygen generates more compact LaTeX\n# documents. This may be useful for small projects and may help to save some\n# trees in general.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nCOMPACT_LATEX          = NO\n\n# The PAPER_TYPE tag can be used to set the paper type that is used by the\n# printer.\n# Possible values are: a4 (210 x 297 mm), letter (8.5 x 11 inches), legal (8.5 x\n# 14 inches) and executive (7.25 x 10.5 inches).\n# The default value is: a4.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nPAPER_TYPE             = a4\n\n# The EXTRA_PACKAGES tag can be used to specify one or more LaTeX package names\n# that should be included in the LaTeX output. To get the times font for\n# instance you can specify\n# EXTRA_PACKAGES=times\n# If left blank no extra packages will be included.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nEXTRA_PACKAGES         =\n\n# The LATEX_HEADER tag can be used to specify a personal LaTeX header for the\n# generated LaTeX document. The header should contain everything until the first\n# chapter. If it is left blank doxygen will generate a standard header. See\n# section \"Doxygen usage\" for information on how to let doxygen write the\n# default header to a separate file.\n#\n# Note: Only use a user-defined header if you know what you are doing! The\n# following commands have a special meaning inside the header: $title,\n# $datetime, $date, $doxygenversion, $projectname, $projectnumber. Doxygen will\n# replace them by respectively the title of the page, the current date and time,\n# only the current date, the version number of doxygen, the project name (see\n# PROJECT_NAME), or the project number (see PROJECT_NUMBER).\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_HEADER           =\n\n# The LATEX_FOOTER tag can be used to specify a personal LaTeX footer for the\n# generated LaTeX document. The footer should contain everything after the last\n# chapter. If it is left blank doxygen will generate a standard footer.\n#\n# Note: Only use a user-defined footer if you know what you are doing!\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_FOOTER           =\n\n# The LATEX_EXTRA_FILES tag can be used to specify one or more extra images or\n# other source files which should be copied to the LATEX_OUTPUT output\n# directory. Note that the files will be copied as-is; there are no commands or\n# markers available.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_EXTRA_FILES      =\n\n# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated is\n# prepared for conversion to PDF (using ps2pdf or pdflatex). The PDF file will\n# contain links (just like the HTML output) instead of page references. This\n# makes the output suitable for online browsing using a PDF viewer.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nPDF_HYPERLINKS         = YES\n\n# If the LATEX_PDFLATEX tag is set to YES, doxygen will use pdflatex to generate\n# the PDF file directly from the LaTeX files. Set this option to YES to get a\n# higher quality PDF documentation.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nUSE_PDFLATEX           = YES\n\n# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\batchmode\n# command to the generated LaTeX files. This will instruct LaTeX to keep running\n# if errors occur, instead of asking the user for help. This option is also used\n# when generating formulas in HTML.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_BATCHMODE        = NO\n\n# If the LATEX_HIDE_INDICES tag is set to YES then doxygen will not include the\n# index chapters (such as File Index, Compound Index, etc.) in the output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_HIDE_INDICES     = NO\n\n# If the LATEX_SOURCE_CODE tag is set to YES then doxygen will include source\n# code with syntax highlighting in the LaTeX output.\n#\n# Note that which sources are shown also depends on other settings such as\n# SOURCE_BROWSER.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_SOURCE_CODE      = NO\n\n# The LATEX_BIB_STYLE tag can be used to specify the style to use for the\n# bibliography, e.g. plainnat, or ieeetr. See\n# https://en.wikipedia.org/wiki/BibTeX and \\cite for more info.\n# The default value is: plain.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_BIB_STYLE        = plain\n\n#---------------------------------------------------------------------------\n# Configuration options related to the RTF output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_RTF tag is set to YES doxygen will generate RTF output. The\n# RTF output is optimized for Word 97 and may not look too pretty with other RTF\n# readers/editors.\n# The default value is: NO.\n\nGENERATE_RTF           = NO\n\n# The RTF_OUTPUT tag is used to specify where the RTF docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: rtf.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_OUTPUT             = rtf\n\n# If the COMPACT_RTF tag is set to YES doxygen generates more compact RTF\n# documents. This may be useful for small projects and may help to save some\n# trees in general.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nCOMPACT_RTF            = NO\n\n# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated will\n# contain hyperlink fields. The RTF file will contain links (just like the HTML\n# output) instead of page references. This makes the output suitable for online\n# browsing using Word or some other Word compatible readers that support those\n# fields.\n#\n# Note: WordPad (write) and others do not support links.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_HYPERLINKS         = NO\n\n# Load stylesheet definitions from file. Syntax is similar to doxygen's config\n# file, i.e. a series of assignments. You only have to provide replacements,\n# missing definitions are set to their default value.\n#\n# See also section \"Doxygen usage\" for information on how to generate the\n# default style sheet that doxygen normally uses.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_STYLESHEET_FILE    =\n\n# Set optional variables used in the generation of an RTF document. Syntax is\n# similar to doxygen's config file. A template extensions file can be generated\n# using doxygen -e rtf extensionFile.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_EXTENSIONS_FILE    =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the man page output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_MAN tag is set to YES doxygen will generate man pages for\n# classes and files.\n# The default value is: NO.\n\nGENERATE_MAN           = NO\n\n# The MAN_OUTPUT tag is used to specify where the man pages will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it. A directory man3 will be created inside the directory specified by\n# MAN_OUTPUT.\n# The default directory is: man.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_OUTPUT             = man\n\n# The MAN_EXTENSION tag determines the extension that is added to the generated\n# man pages. In case the manual section does not start with a number, the number\n# 3 is prepended. The dot (.) at the beginning of the MAN_EXTENSION tag is\n# optional.\n# The default value is: .3.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_EXTENSION          = .3\n\n# The MAN_SUBDIR tag determines the name of the directory created within\n# MAN_OUTPUT in which the man pages are placed. If defaults to man followed by\n# MAN_EXTENSION with the initial . removed.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_SUBDIR             =\n\n# If the MAN_LINKS tag is set to YES and doxygen generates man output, then it\n# will generate one additional man file for each entity documented in the real\n# man page(s). These additional files only source the real man page, but without\n# them the man command would be unable to find the correct page.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_LINKS              = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the XML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_XML tag is set to YES doxygen will generate an XML file that\n# captures the structure of the code including all documentation.\n# The default value is: NO.\n\nGENERATE_XML           = NO\n\n# The XML_OUTPUT tag is used to specify where the XML pages will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: xml.\n# This tag requires that the tag GENERATE_XML is set to YES.\n\nXML_OUTPUT             = xml\n\n# If the XML_PROGRAMLISTING tag is set to YES doxygen will dump the program\n# listings (including syntax highlighting and cross-referencing information) to\n# the XML output. Note that enabling this will significantly increase the size\n# of the XML output.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_XML is set to YES.\n\nXML_PROGRAMLISTING     = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to the DOCBOOK output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_DOCBOOK tag is set to YES doxygen will generate Docbook files\n# that can be used to generate PDF.\n# The default value is: NO.\n\nGENERATE_DOCBOOK       = NO\n\n# The DOCBOOK_OUTPUT tag is used to specify where the Docbook pages will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be put in\n# front of it.\n# The default directory is: docbook.\n# This tag requires that the tag GENERATE_DOCBOOK is set to YES.\n\nDOCBOOK_OUTPUT         = docbook\n\n#---------------------------------------------------------------------------\n# Configuration options for the AutoGen Definitions output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_AUTOGEN_DEF tag is set to YES doxygen will generate an AutoGen\n# Definitions (see http://autogen.sf.net) file that captures the structure of\n# the code including all documentation. Note that this feature is still\n# experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES doxygen will generate a Perl module\n# file that captures the structure of the code including all documentation.\n#\n# Note that this feature is still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES doxygen will generate the necessary\n# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI\n# output from the Perl module output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO the\n# size of the Perl module output will be much smaller and Perl will parse it\n# just the same.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_PRETTY         = YES\n\n# The names of the make variables in the generated doxyrules.make file are\n# prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX. This is useful\n# so different doxyrules.make files included by the same Makefile don't\n# overwrite each other's variables.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_MAKEVAR_PREFIX =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the preprocessor\n#---------------------------------------------------------------------------\n\n# If the ENABLE_PREPROCESSING tag is set to YES doxygen will evaluate all\n# C-preprocessor directives found in the sources and include files.\n# The default value is: YES.\n\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES doxygen will expand all macro names\n# in the source code. If set to NO only conditional compilation will be\n# performed. Macro expansion can be done in a controlled way by setting\n# EXPAND_ONLY_PREDEF to YES.\n# The default value is: NO.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nMACRO_EXPANSION        = YES\n\n# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES then\n# the macro expansion is limited to the macros specified with the PREDEFINED and\n# EXPAND_AS_DEFINED tags.\n# The default value is: NO.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nEXPAND_ONLY_PREDEF     = YES\n\n# If the SEARCH_INCLUDES tag is set to YES the includes files in the\n# INCLUDE_PATH will be searched if a #include is found.\n# The default value is: YES.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nSEARCH_INCLUDES        = YES\n\n# The INCLUDE_PATH tag can be used to specify one or more directories that\n# contain include files that are not input files but should be processed by the\n# preprocessor.\n# This tag requires that the tag SEARCH_INCLUDES is set to YES.\n\nINCLUDE_PATH           =\n\n# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard\n# patterns (like *.h and *.hpp) to filter out the header-files in the\n# directories. If left blank, the patterns specified with FILE_PATTERNS will be\n# used.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nINCLUDE_FILE_PATTERNS  =\n\n# The PREDEFINED tag can be used to specify one or more macro names that are\n# defined before the preprocessor is started (similar to the -D option of e.g.\n# gcc). The argument of the tag is a list of macros of the form: name or\n# name=definition (no spaces). If the definition and the \"=\" are omitted, \"=1\"\n# is assumed. To prevent a macro definition from being undefined via #undef or\n# recursively expanded use the := operator instead of the = operator.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nPREDEFINED             = \"BLOCKCHAIN_DB=2\" \\ # DB_LMDB\n\n# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then this\n# tag can be used to specify a list of macro names that should be expanded. The\n# macro definition that is found in the sources will be used. Use the PREDEFINED\n# tag if you want to use a different macro definition that overrules the\n# definition found in the source code.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nEXPAND_AS_DEFINED      =\n\n# If the SKIP_FUNCTION_MACROS tag is set to YES then doxygen's preprocessor will\n# remove all references to function-like macros that are alone on a line, have\n# an all uppercase name, and do not end with a semicolon. Such function macros\n# are typically used for boiler-plate code, and will confuse the parser if not\n# removed.\n# The default value is: YES.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nSKIP_FUNCTION_MACROS   = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to external references\n#---------------------------------------------------------------------------\n\n# The TAGFILES tag can be used to specify one or more tag files. For each tag\n# file the location of the external documentation should be added. The format of\n# a tag file without this location is as follows:\n# TAGFILES = file1 file2 ...\n# Adding location for the tag files is done as follows:\n# TAGFILES = file1=loc1 \"file2 = loc2\" ...\n# where loc1 and loc2 can be relative or absolute paths or URLs. See the\n# section \"Linking to external documentation\" for more information about the use\n# of tag files.\n# Note: Each tag file must have a unique name (where the name does NOT include\n# the path). If a tag file is not located in the directory in which doxygen is\n# run, you must also specify the path to the tagfile here.\n\nTAGFILES               =\n\n# When a file name is specified after GENERATE_TAGFILE, doxygen will create a\n# tag file that is based on the input files it reads. See section \"Linking to\n# external documentation\" for more information about the usage of tag files.\n\nGENERATE_TAGFILE       =\n\n# If the ALLEXTERNALS tag is set to YES all external class will be listed in the\n# class index. If set to NO only the inherited external classes will be listed.\n# The default value is: NO.\n\nALLEXTERNALS           = NO\n\n# If the EXTERNAL_GROUPS tag is set to YES all external groups will be listed in\n# the modules index. If set to NO, only the current project's groups will be\n# listed.\n# The default value is: YES.\n\nEXTERNAL_GROUPS        = YES\n\n# If the EXTERNAL_PAGES tag is set to YES all external pages will be listed in\n# the related pages index. If set to NO, only the current project's pages will\n# be listed.\n# The default value is: YES.\n\nEXTERNAL_PAGES         = YES\n\n# The PERL_PATH should be the absolute path and name of the perl script\n# interpreter (i.e. the result of 'which perl').\n# The default file (with absolute path) is: /usr/bin/perl.\n\nPERL_PATH              = /usr/bin/perl\n\n#---------------------------------------------------------------------------\n# Configuration options related to the dot tool\n#---------------------------------------------------------------------------\n\n# If the CLASS_DIAGRAMS tag is set to YES doxygen will generate a class diagram\n# (in HTML and LaTeX) for classes with base or super classes. Setting the tag to\n# NO turns the diagrams off. Note that this option also works with HAVE_DOT\n# disabled, but it is recommended to install and use dot, since it yields more\n# powerful graphs.\n# The default value is: YES.\n\nCLASS_DIAGRAMS         = YES\n\n# You can define message sequence charts within doxygen comments using the \\msc\n# command. Doxygen will then run the mscgen tool (see:\n# http://www.mcternan.me.uk/mscgen/)) to produce the chart and insert it in the\n# documentation. The MSCGEN_PATH tag allows you to specify the directory where\n# the mscgen tool resides. If left empty the tool is assumed to be found in the\n# default search path.\n\nMSCGEN_PATH            =\n\n# You can include diagrams made with dia in doxygen documentation. Doxygen will\n# then run dia to produce the diagram and insert it in the documentation. The\n# DIA_PATH tag allows you to specify the directory where the dia binary resides.\n# If left empty dia is assumed to be found in the default search path.\n\nDIA_PATH               =\n\n# If set to YES, the inheritance and collaboration graphs will hide inheritance\n# and usage relations if the target is undocumented or is not a class.\n# The default value is: YES.\n\nHIDE_UNDOC_RELATIONS   = YES\n\n# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is\n# available from the path. This tool is part of Graphviz (see:\n# https://www.graphviz.org/), a graph visualization toolkit from AT&T and Lucent\n# Bell Labs. The other options in this section have no effect if this option is\n# set to NO\n# The default value is: NO.\n\nHAVE_DOT               = $(HAVE_DOT)\n\n# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is allowed\n# to run in parallel. When set to 0 doxygen will base this on the number of\n# processors available in the system. You can set it explicitly to a value\n# larger than 0 to get control over the balance between CPU load and processing\n# speed.\n# Minimum value: 0, maximum value: 32, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_NUM_THREADS        = 0\n\n# When you want a differently looking font n the dot files that doxygen\n# generates you can specify the font name using DOT_FONTNAME. You need to make\n# sure dot is able to find the font, which can be done by putting it in a\n# standard location or by setting the DOTFONTPATH environment variable or by\n# setting DOT_FONTPATH to the directory containing the font.\n# The default value is: Helvetica.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTNAME           = Helvetica\n\n# The DOT_FONTSIZE tag can be used to set the size (in points) of the font of\n# dot graphs.\n# Minimum value: 4, maximum value: 24, default value: 10.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTSIZE           = 10\n\n# By default doxygen will tell dot to use the default font as specified with\n# DOT_FONTNAME. If you specify a different font using DOT_FONTNAME you can set\n# the path where dot can find it using this tag.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTPATH           =\n\n# If the CLASS_GRAPH tag is set to YES then doxygen will generate a graph for\n# each documented class showing the direct and indirect inheritance relations.\n# Setting this tag to YES will force the CLASS_DIAGRAMS tag to NO.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCLASS_GRAPH            = YES\n\n# If the COLLABORATION_GRAPH tag is set to YES then doxygen will generate a\n# graph for each documented class showing the direct and indirect implementation\n# dependencies (inheritance, containment, and class references variables) of the\n# class with other documented classes.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCOLLABORATION_GRAPH    = YES\n\n# If the GROUP_GRAPHS tag is set to YES then doxygen will generate a graph for\n# groups, showing the direct groups dependencies.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGROUP_GRAPHS           = YES\n\n# If the UML_LOOK tag is set to YES doxygen will generate inheritance and\n# collaboration diagrams in a style similar to the OMG's Unified Modeling\n# Language.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nUML_LOOK               = NO\n\n# If the UML_LOOK tag is enabled, the fields and methods are shown inside the\n# class node. If there are many fields or methods and many nodes the graph may\n# become too big to be useful. The UML_LIMIT_NUM_FIELDS threshold limits the\n# number of items for each type to make the size more manageable. Set this to 0\n# for no limit. Note that the threshold may be exceeded by 50% before the limit\n# is enforced. So when you set the threshold to 10, up to 15 fields may appear,\n# but if the number exceeds 15, the total amount of fields shown is limited to\n# 10.\n# Minimum value: 0, maximum value: 100, default value: 10.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nUML_LIMIT_NUM_FIELDS   = 10\n\n# If the TEMPLATE_RELATIONS tag is set to YES then the inheritance and\n# collaboration graphs will show the relations between templates and their\n# instances.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nTEMPLATE_RELATIONS     = NO\n\n# If the INCLUDE_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are set to\n# YES then doxygen will generate a graph for each documented file showing the\n# direct and indirect include dependencies of the file with other documented\n# files.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINCLUDE_GRAPH          = YES\n\n# If the INCLUDED_BY_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are\n# set to YES then doxygen will generate a graph for each documented file showing\n# the direct and indirect include dependencies of the file with other documented\n# files.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINCLUDED_BY_GRAPH      = YES\n\n# If the CALL_GRAPH tag is set to YES then doxygen will generate a call\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable call graphs for selected\n# functions only using the \\callgraph command.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCALL_GRAPH             = NO\n\n# If the CALLER_GRAPH tag is set to YES then doxygen will generate a caller\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable caller graphs for selected\n# functions only using the \\callergraph command.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCALLER_GRAPH           = NO\n\n# If the GRAPHICAL_HIERARCHY tag is set to YES then doxygen will graphical\n# hierarchy of all classes instead of a textual one.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGRAPHICAL_HIERARCHY    = YES\n\n# If the DIRECTORY_GRAPH tag is set to YES then doxygen will show the\n# dependencies a directory has on other directories in a graphical way. The\n# dependency relations are determined by the #include relations between the\n# files in the directories.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDIRECTORY_GRAPH        = YES\n\n# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images\n# generated by dot.\n# Note: If you choose svg you need to set HTML_FILE_EXTENSION to xhtml in order\n# to make the SVG files visible in IE 9+ (other browsers do not have this\n# requirement).\n# Possible values are: png, jpg, gif and svg.\n# The default value is: png.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_IMAGE_FORMAT       = png\n\n# If DOT_IMAGE_FORMAT is set to svg, then this option can be set to YES to\n# enable generation of interactive SVG images that allow zooming and panning.\n#\n# Note that this requires a modern browser other than Internet Explorer. Tested\n# and working are Firefox, Chrome, Safari, and Opera.\n# Note: For IE 9+ you need to set HTML_FILE_EXTENSION to xhtml in order to make\n# the SVG files visible. Older versions of IE do not have SVG support.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINTERACTIVE_SVG        = NO\n\n# The DOT_PATH tag can be used to specify the path where the dot tool can be\n# found. If left blank, it is assumed the dot tool can be found in the path.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_PATH               =\n\n# The DOTFILE_DIRS tag can be used to specify one or more directories that\n# contain dot files that are included in the documentation (see the \\dotfile\n# command).\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOTFILE_DIRS           =\n\n# The MSCFILE_DIRS tag can be used to specify one or more directories that\n# contain msc files that are included in the documentation (see the \\mscfile\n# command).\n\nMSCFILE_DIRS           =\n\n# The DIAFILE_DIRS tag can be used to specify one or more directories that\n# contain dia files that are included in the documentation (see the \\diafile\n# command).\n\nDIAFILE_DIRS           =\n\n# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes\n# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that doxygen if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n# Minimum value: 0, maximum value: 10000, default value: 50.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_GRAPH_MAX_NODES    = 50\n\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs\n# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n# Minimum value: 0, maximum value: 1000, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nMAX_DOT_GRAPH_DEPTH    = 0\n\n# Set the DOT_TRANSPARENT tag to YES to generate images with a transparent\n# background. This is disabled by default, because dot on Windows does not seem\n# to support this out of the box.\n#\n# Warning: Depending on the platform used, enabling this option may lead to\n# badly anti-aliased labels on the edges of a graph (i.e. they become hard to\n# read).\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_TRANSPARENT        = NO\n\n# Set the DOT_MULTI_TARGETS tag to YES allow dot to generate multiple output\n# files in one run (i.e. multiple -o and -T options on the command line). This\n# makes dot run faster, but since only newer versions of dot (>1.8.10) support\n# this, this feature is disabled by default.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_MULTI_TARGETS      = NO\n\n# If the GENERATE_LEGEND tag is set to YES doxygen will generate a legend page\n# explaining the meaning of the various boxes and arrows in the dot generated\n# graphs.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGENERATE_LEGEND        = YES\n\n# If the DOT_CLEANUP tag is set to YES doxygen will remove the intermediate dot\n# files that are used to generate the various graphs.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_CLEANUP            = YES\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 2.666015625,
          "content": "Copyright (c) 2014-2024, The Monero Project\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\nmay be used to endorse or promote products derived from this software without\nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nParts of the project are originally copyright (c) 2012-2013 The Cryptonote\ndevelopers\n\nParts of the project are originally copyright (c) 2014 The Boolberry\ndevelopers, distributed under the MIT licence:\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 8.7998046875,
          "content": "# Copyright (c) 2014-2024, The Monero Project\n#\n# All rights reserved.\n#\n# Redistribution and use in source and binary forms, with or without modification, are\n# permitted provided that the following conditions are met:\n#\n# 1. Redistributions of source code must retain the above copyright notice, this list of\n#    conditions and the following disclaimer.\n#\n# 2. Redistributions in binary form must reproduce the above copyright notice, this list\n#    of conditions and the following disclaimer in the documentation and/or other\n#    materials provided with the distribution.\n#\n# 3. Neither the name of the copyright holder nor the names of its contributors may be\n#    used to endorse or promote products derived from this software without specific\n#    prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\n# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL\n# THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n# THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nANDROID_STANDALONE_TOOLCHAIN_PATH ?= /usr/local/toolchain\n\ndotgit=$(shell ls -d .git/config)\nifneq ($(dotgit), .git/config)\n  USE_SINGLE_BUILDDIR=1\nendif\n\nsubbuilddir:=$(shell echo  `uname | sed -e 's|[:/\\\\ \\(\\)]|_|g'`/`git branch | grep '\\* ' | cut -f2- -d' '| sed -e 's|[:/\\\\ \\(\\)]|_|g'`)\nifeq ($(USE_SINGLE_BUILDDIR),)\n  builddir := build/\"$(subbuilddir)\"\n  topdir   := ../../../..\n  deldirs  := $(builddir)\nelse\n  builddir := build\n  topdir   := ../..\n  deldirs  := $(builddir)/debug $(builddir)/release $(builddir)/fuzz\nendif\n\nall: release-all\n\ndepends:\n\tcd contrib/depends && $(MAKE) HOST=$(target) && cd ../.. && mkdir -p build/$(target)/release\n\tcd build/$(target)/release && USE_DEVICE_TREZOR_MANDATORY=1 cmake -DCMAKE_TOOLCHAIN_FILE=$(CURDIR)/contrib/depends/$(target)/share/toolchain.cmake ../../.. && $(MAKE)\n\ncmake-debug:\n\tmkdir -p $(builddir)/debug\n\tcd $(builddir)/debug && cmake -D CMAKE_BUILD_TYPE=Debug $(topdir)\n\ndebug: cmake-debug\n\tcd $(builddir)/debug && $(MAKE)\n\n# Temporarily disable some tests:\n#  * libwallet_api_tests fail (Issue #895)\ndebug-test:\n\tmkdir -p $(builddir)/debug\n\tcd $(builddir)/debug && cmake -D BUILD_TESTS=ON -D CMAKE_BUILD_TYPE=Debug $(topdir) &&  $(MAKE) && $(MAKE) ARGS=\"-E libwallet_api_tests\" test\n\ndebug-test-asan:\n\tmkdir -p $(builddir)/debug\n\tcd $(builddir)/debug && cmake -D BUILD_TESTS=ON -D SANITIZE=ON -D CMAKE_BUILD_TYPE=Debug $(topdir) &&  $(MAKE) && $(MAKE) ARGS=\"-E libwallet_api_tests\" test\n\ndebug-test-trezor:\n\tmkdir -p $(builddir)/debug\n\tcd $(builddir)/debug && cmake -D BUILD_TESTS=ON -D TREZOR_DEBUG=ON -D CMAKE_BUILD_TYPE=Debug $(topdir) &&  $(MAKE) && $(MAKE) ARGS=\"-E libwallet_api_tests\" test\n\ndebug-all:\n\tmkdir -p $(builddir)/debug\n\tcd $(builddir)/debug && cmake -D BUILD_TESTS=ON -D BUILD_SHARED_LIBS=OFF -D CMAKE_BUILD_TYPE=Debug $(topdir) && $(MAKE)\n\ndebug-static-all:\n\tmkdir -p $(builddir)/debug\n\tcd $(builddir)/debug && cmake -D BUILD_TESTS=ON -D STATIC=ON -D CMAKE_BUILD_TYPE=Debug $(topdir) && $(MAKE)\n\ndebug-static-win64:\n\tmkdir -p $(builddir)/debug\n\tcd $(builddir)/debug && cmake -G \"MSYS Makefiles\" -D STATIC=ON -D ARCH=\"x86-64\" -D BUILD_64=ON -D CMAKE_BUILD_TYPE=Debug -D BUILD_TAG=\"win-x64\" $(topdir) && $(MAKE)\n \ndebug-static-win32:\n\tmkdir -p $(builddir)/debug\n\tcd $(builddir)/debug && cmake -G \"MSYS Makefiles\" -D STATIC=ON -D ARCH=\"i686\" -D BUILD_64=OFF -D CMAKE_BUILD_TYPE=Debug -D BUILD_TAG=\"win-x32\" $(topdir) && $(MAKE)\n \ncmake-release:\n\tmkdir -p $(builddir)/release\n\tcd $(builddir)/release && cmake -D CMAKE_BUILD_TYPE=Release $(topdir)\n\nrelease: cmake-release\n\tcd $(builddir)/release && $(MAKE)\n\nrelease-test:\n\tmkdir -p $(builddir)/release\n\tcd $(builddir)/release && cmake -D BUILD_TESTS=ON -D CMAKE_BUILD_TYPE=Release $(topdir) && $(MAKE) && $(MAKE) test\n\nrelease-all:\n\tmkdir -p $(builddir)/release\n\tcd $(builddir)/release && cmake -D BUILD_TESTS=ON -D CMAKE_BUILD_TYPE=Release $(topdir) && $(MAKE)\n\nrelease-static:\n\tmkdir -p $(builddir)/release\n\tcd $(builddir)/release && cmake -D STATIC=ON -D BUILD_64=ON -D CMAKE_BUILD_TYPE=Release $(topdir) && $(MAKE)\n\ncoverage:\n\tmkdir -p $(builddir)/debug\n\tcd $(builddir)/debug && cmake -D BUILD_TESTS=ON -D CMAKE_BUILD_TYPE=Debug -D COVERAGE=ON $(topdir) && $(MAKE) && $(MAKE) test\n\n# Targets for specific prebuilt builds which will be advertised for updates by their build tag\n\nrelease-static-linux-armv6:\n\tmkdir -p $(builddir)/release\n\tcd $(builddir)/release && cmake -D BUILD_TESTS=OFF -D ARCH=\"armv6zk\" -D STATIC=ON -D BUILD_64=OFF -D CMAKE_BUILD_TYPE=Release -D BUILD_TAG=\"linux-armv6\" $(topdir) && $(MAKE)\n\nrelease-static-linux-armv7:\n\tmkdir -p $(builddir)/release\n\tcd $(builddir)/release && cmake -D BUILD_TESTS=OFF -D ARCH=\"armv7-a\" -D STATIC=ON -D BUILD_64=OFF -D CMAKE_BUILD_TYPE=Release -D BUILD_TAG=\"linux-armv7\" $(topdir) && $(MAKE)\n\nrelease-static-android-armv7:\n\tmkdir -p $(builddir)/release/translations\n\tcd $(builddir)/release/translations && cmake ../../../translations && $(MAKE)\n\tcd $(builddir)/release && CC=arm-linux-androideabi-clang CXX=arm-linux-androideabi-clang++ cmake -D BUILD_TESTS=OFF -D ARCH=\"armv7-a\" -D STATIC=ON -D BUILD_64=OFF -D CMAKE_BUILD_TYPE=Release -D ANDROID=true -D BUILD_TAG=\"android-armv7\" -D CMAKE_SYSTEM_NAME=\"Android\" -D CMAKE_ANDROID_STANDALONE_TOOLCHAIN=\"${ANDROID_STANDALONE_TOOLCHAIN_PATH}\" -D CMAKE_ANDROID_ARM_MODE=ON -D CMAKE_ANDROID_ARCH_ABI=\"armeabi-v7a\" ../.. && $(MAKE)\n\nrelease-static-android-armv8:\n\tmkdir -p $(builddir)/release/translations\n\tcd $(builddir)/release/translations && cmake ../../../translations && $(MAKE)\n\tcd $(builddir)/release && CC=aarch64-linux-android-clang CXX=aarch64-linux-android-clang++ cmake -D BUILD_TESTS=OFF -D ARCH=\"armv8-a\" -D STATIC=ON -D BUILD_64=ON -D CMAKE_BUILD_TYPE=Release -D ANDROID=true -D BUILD_TAG=\"android-armv8\" -D CMAKE_SYSTEM_NAME=\"Android\" -D CMAKE_ANDROID_STANDALONE_TOOLCHAIN=\"${ANDROID_STANDALONE_TOOLCHAIN_PATH}\" -D CMAKE_ANDROID_ARCH_ABI=\"arm64-v8a\" ../.. && $(MAKE)\n\nrelease-static-linux-armv8:\n\tmkdir -p $(builddir)/release\n\tcd $(builddir)/release && cmake -D BUILD_TESTS=OFF -D ARCH=\"armv8-a\" -D STATIC=ON -D BUILD_64=ON -D CMAKE_BUILD_TYPE=Release -D BUILD_TAG=\"linux-armv8\" $(topdir) && $(MAKE)\n\nrelease-static-linux-x86_64:\n\tmkdir -p $(builddir)/release\n\tcd $(builddir)/release && cmake -D STATIC=ON -D ARCH=\"x86-64\" -D BUILD_64=ON -D CMAKE_BUILD_TYPE=Release -D BUILD_TAG=\"linux-x64\" $(topdir) && $(MAKE)\n\nrelease-static-freebsd-x86_64:\n\tmkdir -p $(builddir)/release\n\tcd $(builddir)/release && cmake -D STATIC=ON -D ARCH=\"x86-64\" -D BUILD_64=ON -D CMAKE_BUILD_TYPE=Release -D BUILD_TAG=\"freebsd-x64\" $(topdir) && $(MAKE)\n\nrelease-static-mac-x86_64:\n\tmkdir -p $(builddir)/release\n\tcd $(builddir)/release && cmake -D STATIC=ON -D ARCH=\"x86-64\" -D BUILD_64=ON -D CMAKE_BUILD_TYPE=Release -D BUILD_TAG=\"mac-x64\" $(topdir) && $(MAKE)\n\nrelease-static-linux-i686:\n\tmkdir -p $(builddir)/release\n\tcd $(builddir)/release && cmake -D STATIC=ON -D ARCH=\"i686\" -D BUILD_64=OFF -D CMAKE_BUILD_TYPE=Release -D BUILD_TAG=\"linux-x86\" $(topdir) && $(MAKE)\n\nrelease-static-win64:\n\tmkdir -p $(builddir)/release\n\tcd $(builddir)/release && cmake -G \"MSYS Makefiles\" -D STATIC=ON -D ARCH=\"x86-64\" -D BUILD_64=ON -D CMAKE_BUILD_TYPE=Release -D BUILD_TAG=\"win-x64\" $(topdir) && $(MAKE)\n\nrelease-static-win32:\n\tmkdir -p $(builddir)/release\n\tcd $(builddir)/release && cmake -G \"MSYS Makefiles\" -D STATIC=ON -D ARCH=\"i686\" -D BUILD_64=OFF -D CMAKE_BUILD_TYPE=Release -D BUILD_TAG=\"win-x32\" $(topdir) && $(MAKE)\n\nfuzz:\n\tmkdir -p $(builddir)/fuzz\n\tcd $(builddir)/fuzz && cmake -D STATIC=ON -D SANITIZE=ON -D BUILD_TESTS=ON -D USE_LTO=OFF -D CMAKE_C_COMPILER=afl-gcc -D CMAKE_CXX_COMPILER=afl-g++ -D ARCH=\"x86-64\" -D CMAKE_BUILD_TYPE=fuzz -D BUILD_TAG=\"linux-x64\" $(topdir) && $(MAKE)\n\nclean:\n\t@echo \"WARNING: Back-up your wallet if it exists within ./\"$(deldirs)\"!\" ; \\\n    read -r -p \"This will destroy the build directory, continue (y/N)?: \" CONTINUE; \\\n\t[ $$CONTINUE = \"y\" ] || [ $$CONTINUE = \"Y\" ] || (echo \"Exiting.\"; exit 1;)\n\trm -rf $(deldirs)\n\nclean-all:\n\t@echo \"WARNING: Back-up your wallet if it exists within ./build!\" ; \\\n\tread -r -p \"This will destroy all build directories, continue (y/N)?: \" CONTINUE; \\\n\t[ $$CONTINUE = \"y\" ] || [ $$CONTINUE = \"Y\" ] || (echo \"Exiting.\"; exit 1;)\n\trm -rf ./build\n\ntags:\n\tctags -R --sort=1 --c++-kinds=+p --fields=+iaS --extra=+q --language-force=C++ src contrib tests/gtest\n\n.PHONY: all cmake-debug debug debug-test debug-all cmake-release release release-test release-all clean tags\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 42.5830078125,
          "content": "# Monero\n\nCopyright (c) 2014-2024, The Monero Project\nPortions Copyright (c) 2012-2013 The Cryptonote developers.\n\n## Table of Contents\n\n  - [Development resources](#development-resources)\n  - [Vulnerability response](#vulnerability-response)\n  - [Research](#research)\n  - [Announcements](#announcements)\n  - [Translations](#translations)\n  - [Coverage](#coverage)\n  - [Introduction](#introduction)\n  - [About this project](#about-this-project)\n  - [Supporting the project](#supporting-the-project)\n  - [License](#license)\n  - [Contributing](#contributing)\n  - [Scheduled software upgrades](#scheduled-software-upgrades)\n  - [Release staging schedule and protocol](#release-staging-schedule-and-protocol)\n  - [Compiling Monero from source](#compiling-monero-from-source)\n    - [Dependencies](#dependencies)\n    - [Guix builds](#guix-builds)\n  - [Internationalization](#Internationalization)\n  - [Using Tor](#using-tor)\n  - [Pruning](#Pruning)\n  - [Debugging](#Debugging)\n  - [Known issues](#known-issues)\n\n## Development resources\n\n- Web: [getmonero.org](https://getmonero.org)\n- Mail: [dev@getmonero.org](mailto:dev@getmonero.org)\n- GitHub: [https://github.com/monero-project/monero](https://github.com/monero-project/monero)\n- IRC: [#monero-dev on Libera](https://web.libera.chat/#monero-dev)\n- It is HIGHLY recommended that you join the #monero-dev IRC channel if you are developing software that uses Monero. Due to the nature of this open source software project, joining this channel and idling is the best way to stay updated on best practices and new developments in the Monero ecosystem. All you need to do is join the IRC channel and idle to stay updated with the latest in Monero development. If you do not, you risk wasting resources on developing integrations that are not compatible with the Monero network. The Monero core team and community continuously make efforts to communicate updates, developments, and documentation via other platforms – but for the best information, you need to talk to other Monero developers, and they are on IRC. #monero-dev is about Monero development, not getting help about using Monero, or help about development of other software, including yours, unless it also pertains to Monero code itself. For these cases, checkout #monero.\n\n## Vulnerability response\n\n- Our [Vulnerability Response Process](https://github.com/monero-project/meta/blob/master/VULNERABILITY_RESPONSE_PROCESS.md) encourages responsible disclosure\n- We are also available via [HackerOne](https://hackerone.com/monero)\n\n## Research\n\nThe [Monero Research Lab](https://src.getmonero.org/resources/research-lab/) is an open forum where the community coordinates research into Monero cryptography, protocols, fungibility, analysis, and more. We welcome collaboration and contributions from outside researchers! Because not all Lab work and publications are distributed as traditional preprints or articles, they may be easy to miss if you are conducting literature reviews for your own Monero research. You are encouraged to get in touch with the Monero research community if you have questions, wish to collaborate, or would like guidance to help avoid unnecessarily duplicating earlier or known work.\n\nThe Monero research community is available on IRC in [#monero-research-lab on Libera](https://web.libera.chat/#monero-research-lab), which is also accessible via Matrix.\n\n## Announcements\n\n- You can subscribe to an [announcement listserv](https://lists.getmonero.org) to get critical announcements from the Monero core team. The announcement list can be very helpful for knowing when software updates are needed.\n\n## Translations\nThe CLI wallet is available in different languages. If you want to help translate it, see our self-hosted localization platform, Weblate, on [translate.getmonero.org]( https://translate.getmonero.org/projects/monero/cli-wallet/). Every translation *must* be uploaded on the platform, pull requests directly editing the code in this repository will be closed. If you need help with Weblate, you can find a guide with screenshots [here](https://github.com/monero-ecosystem/monero-translations/blob/master/weblate.md).\n&nbsp;\n\nIf you need help/support/info about translations, contact the localization workgroup. You can find the complete list of contacts on the repository of the workgroup: [monero-translations](https://github.com/monero-ecosystem/monero-translations#contacts).\n\n## Coverage\n\n| Type      | Status |\n|-----------|--------|\n| Coverity  | [![Coverity Status](https://scan.coverity.com/projects/9657/badge.svg)](https://scan.coverity.com/projects/9657/)\n| OSS Fuzz  | [![Fuzzing Status](https://oss-fuzz-build-logs.storage.googleapis.com/badges/monero.svg)](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=1&q=proj:monero)\n| Coveralls | [![Coveralls Status](https://coveralls.io/repos/github/monero-project/monero/badge.svg?branch=master)](https://coveralls.io/github/monero-project/monero?branch=master)\n| License   | [![License](https://img.shields.io/badge/license-BSD3-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)\n\n## Introduction\n\nMonero is a private, secure, untraceable, decentralised digital currency. You are your bank, you control your funds, and nobody can trace your transfers unless you allow them to do so.\n\n**Privacy:** Monero uses a cryptographically sound system to allow you to send and receive funds without your transactions being easily revealed on the blockchain (the ledger of transactions that everyone has). This ensures that your purchases, receipts, and all transfers remain private by default.\n\n**Security:** Using the power of a distributed peer-to-peer consensus network, every transaction on the network is cryptographically secured. Individual wallets have a 25-word mnemonic seed that is only displayed once and can be written down to backup the wallet. Wallet files should be encrypted with a strong passphrase to ensure they are useless if ever stolen.\n\n**Untraceability:** By taking advantage of ring signatures, a special property of a certain type of cryptography, Monero is able to ensure that transactions are not only untraceable but have an optional measure of ambiguity that ensures that transactions cannot easily be tied back to an individual user or computer.\n\n**Decentralization:** The utility of Monero depends on its decentralised peer-to-peer consensus network - anyone should be able to run the monero software, validate the integrity of the blockchain, and participate in all aspects of the monero network using consumer-grade commodity hardware. Decentralization of the monero network is maintained by software development that minimizes the costs of running the monero software and inhibits the proliferation of specialized, non-commodity hardware.\n\n## About this project\n\nThis is the core implementation of Monero. It is open source and completely free to use without restrictions, except for those specified in the license agreement below. There are no restrictions on anyone creating an alternative implementation of Monero that uses the protocol and network in a compatible manner.\n\nAs with many development projects, the repository on GitHub is considered to be the \"staging\" area for the latest changes. Before changes are merged into that branch on the main repository, they are tested by individual developers in their own branches, submitted as a pull request, and then subsequently tested by contributors who focus on testing and code reviews. That having been said, the repository should be carefully considered before using it in a production environment, unless there is a patch in the repository for a particular show-stopping issue you are experiencing. It is generally a better idea to use a tagged release for stability.\n\n**Anyone is welcome to contribute to Monero's codebase!** If you have a fix or code change, feel free to submit it as a pull request directly to the \"master\" branch. In cases where the change is relatively small or does not affect other parts of the codebase, it may be merged in immediately by any one of the collaborators. On the other hand, if the change is particularly large or complex, it is expected that it will be discussed at length either well in advance of the pull request being submitted, or even directly on the pull request.\n\n## Supporting the project\n\nMonero is a 100% community-sponsored endeavor. If you want to join our efforts, the easiest thing you can do is support the project financially. Both Monero and Bitcoin donations can be made to **donate.getmonero.org** if using a client that supports the [OpenAlias](https://openalias.org) standard. Alternatively, you can send XMR to the Monero donation address via the `donate` command (type `help` in the command-line wallet for details).\n\nThe Monero donation address is:  \n`888tNkZrPN6JsEgekjMnABU4TBzc2Dt29EPAvkRxbANsAnjyPbb3iQ1YBRk1UXcdRsiKc9dhwMVgN5S9cQUiyoogDavup3H`  \nViewkey:  \n`f359631075708155cc3d92a32b75a7d02a5dcf27756707b47a2b31b21c389501`  \nBase address for restoring with address and viewkey:\n`44AFFq5kSiGBoZ4NMDwYtN18obc8AemS33DBLWs3H7otXft3XjrpDtQGv7SqSsaBYBb98uNbr2VBBEt7f2wfn3RVGQBEP3A`  \n\nThe Bitcoin donation address is:  \n`1KTexdemPdxSBcG55heUuTjDRYqbC5ZL8H`\n\nCore development funding and/or some supporting services are also graciously provided by [sponsors](https://www.getmonero.org/community/sponsorships/):\n\n[<img width=\"150\" src=\"https://www.getmonero.org/img/sponsors/tarilabs.png\"/>](https://tarilabs.com/)\n[<img width=\"150\" src=\"https://www.getmonero.org/img/sponsors/symas.png\"/>](https://symas.com/)\n[<img width=\"150\" src=\"https://www.getmonero.org/img/sponsors/macstadium.png\"/>](https://www.macstadium.com/)\n\nThere are also several mining pools that kindly donate a portion of their fees, [a list of them can be found on our Bitcointalk post](https://bitcointalk.org/index.php?topic=583449.0).\n\n## License\n\nSee [LICENSE](LICENSE).\n\n## Contributing\n\nIf you want to help out, see [CONTRIBUTING](docs/CONTRIBUTING.md) for a set of guidelines.\n\n## Scheduled software/network upgrades\n\nMonero uses a scheduled software/network upgrade (hard fork) mechanism to implement new features into the Monero software and network. This means that users of Monero (end users and service providers) should run current versions and upgrade their software when new releases are available. Software upgrades occur when new features are developed and implemented in the codebase. Network upgrades occur in tandem with software upgrades that modify the consensus rules of the Monero network. The required software for network upgrades will be available prior to the scheduled network upgrade date. Please check the repository prior to this date for the proper Monero software version. Below is the historical schedule and the projected schedule for the next upgrade.\n\nDates are provided in the format YYYY-MM-DD. The \"Minimum\" is the software version that follows the new consensus rules. The \"Recommended\" version may include bug fixes and other new features that do not affect the consensus rules.\n\n\n| Software upgrade block height  | Date       | Fork version      | Minimum Monero version | Recommended Monero version | Details                                                                            |\n| ------------------------------ | -----------| ----------------- | ---------------------- | -------------------------- | ---------------------------------------------------------------------------------- |\n| 1009827                        | 2016-03-22 | v2                | v0.9.4                 | v0.9.4                     | Allow only >= ringsize 3, blocktime = 120 seconds, fee-free blocksize 60 kb       |\n| 1141317                        | 2016-09-21 | v3                | v0.9.4                 | v0.10.0                    | Splits coinbase into denominations  |\n| 1220516                        | 2017-01-05 | v4                | v0.10.1                | v0.10.2.1                  | Allow normal and RingCT transactions |\n| 1288616                        | 2017-04-15 | v5                | v0.10.3.0              | v0.10.3.1                  | Adjusted minimum blocksize and fee algorithm      |\n| 1400000                        | 2017-09-16 | v6                | v0.11.0.0              | v0.11.0.0                  | Allow only RingCT transactions, allow only >= ringsize 5      |\n| 1546000                        | 2018-04-06 | v7                | v0.12.0.0              | v0.12.3.0                  | Cryptonight variant 1, ringsize >= 7, sorted inputs\n| 1685555                        | 2018-10-18 | v8                | v0.13.0.0              | v0.13.0.4                  | max transaction size at half the penalty free block size, bulletproofs enabled, cryptonight variant 2, fixed ringsize [11](https://youtu.be/KOO5S4vxi0o)\n| 1686275                        | 2018-10-19 | v9                | v0.13.0.0              | v0.13.0.4                  | bulletproofs required\n| 1788000                        | 2019-03-09 | v10               | v0.14.0.0              | v0.14.1.2                  | New PoW based on Cryptonight-R, new block weight algorithm, slightly more efficient RingCT format\n| 1788720                        | 2019-03-10 | v11               | v0.14.0.0              | v0.14.1.2                  | forbid old RingCT transaction format\n| 1978433                        | 2019-11-30 | v12               | v0.15.0.0              | v0.16.0.0                  | New PoW based on RandomX, only allow >= 2 outputs, change to the block median used to calculate penalty, v1 coinbases are forbidden, rct sigs in coinbase forbidden, 10 block lock time for incoming outputs\n| 2210000                        | 2020-10-17 | v13               | v0.17.0.0              | v0.17.3.2                  | New CLSAG transaction format\n| 2210720                        | 2020-10-18 | v14               | v0.17.1.1              | v0.17.3.2                  | forbid old MLSAG transaction format\n| 2688888                        | 2022-08-13 | v15               | v0.18.0.0              | v0.18.1.2                  | ringsize = 16, bulletproofs+, view tags, adjusted dynamic block weight algorithm\n| 2689608                        | 2022-08-14 | v16               | v0.18.0.0              | v0.18.1.2                  | forbid old v14 transaction format\n| XXXXXXX                        | XXX-XX-XX | XXX                | vX.XX.X.X              | vX.XX.X.X                  | XXX |\n\nX's indicate that these details have not been determined as of commit date.\n\n\\* indicates estimate as of commit date\n\n## Release staging schedule and protocol\n\nApproximately three months prior to a scheduled software upgrade, a branch from master will be created with the new release version tag. Pull requests that address bugs should then be made to both master and the new release branch. Pull requests that require extensive review and testing (generally, optimizations and new features) should *not* be made to the release branch.\n\n## Compiling Monero from source\n\n### Dependencies\n\nThe following table summarizes the tools and libraries required to build. A\nfew of the libraries are also included in this repository (marked as\n\"Vendored\"). By default, the build uses the library installed on the system\nand ignores the vendored sources. However, if no library is found installed on\nthe system, then the vendored source will be built and used. The vendored\nsources are also used for statically-linked builds because distribution\npackages often include only shared library binaries (`.so`) but not static\nlibrary archives (`.a`).\n\n| Dep          | Min. version  | Vendored | Debian/Ubuntu pkg    | Arch pkg     | Void pkg           | Fedora pkg          | Optional | Purpose         |\n| ------------ | ------------- | -------- | -------------------- | ------------ | ------------------ | ------------------- | -------- | --------------- |\n| GCC          | 7             | NO       | `build-essential`    | `base-devel` | `base-devel`       | `gcc`               | NO       |                 |\n| CMake        | 3.5           | NO       | `cmake`              | `cmake`      | `cmake`            | `cmake`             | NO       |                 |\n| pkg-config   | any           | NO       | `pkg-config`         | `base-devel` | `base-devel`       | `pkgconf`           | NO       |                 |\n| Boost        | 1.62          | NO       | `libboost-all-dev`   | `boost`      | `boost-devel`      | `boost-devel`       | NO       | C++ libraries   |\n| OpenSSL      | basically any | NO       | `libssl-dev`         | `openssl`    | `openssl-devel`    | `openssl-devel`     | NO       | sha256 sum      |\n| libzmq       | 4.2.0         | NO       | `libzmq3-dev`        | `zeromq`     | `zeromq-devel`     | `zeromq-devel`      | NO       | ZeroMQ library  |\n| libunbound   | 1.4.16        | NO       | `libunbound-dev`     | `unbound`    | `unbound-devel`    | `unbound-devel`     | NO       | DNS resolver    |\n| libsodium    | ?             | NO       | `libsodium-dev`      | `libsodium`  | `libsodium-devel`  | `libsodium-devel`   | NO       | cryptography    |\n| libunwind    | any           | NO       | `libunwind8-dev`     | `libunwind`  | `libunwind-devel`  | `libunwind-devel`   | YES      | Stack traces    |\n| liblzma      | any           | NO       | `liblzma-dev`        | `xz`         | `liblzma-devel`    | `xz-devel`          | YES      | For libunwind   |\n| libreadline  | 6.3.0         | NO       | `libreadline6-dev`   | `readline`   | `readline-devel`   | `readline-devel`    | YES      | Input editing   |\n| expat        | 1.1           | NO       | `libexpat1-dev`      | `expat`      | `expat-devel`      | `expat-devel`       | YES      | XML parsing     |\n| GTest        | 1.5           | YES      | `libgtest-dev`       | `gtest`      | `gtest-devel`      | `gtest-devel`       | YES      | Test suite      |\n| ccache       | any           | NO       | `ccache`             | `ccache`     | `ccache`           | `ccache`            | YES      | Compil. cache   |\n| Doxygen      | any           | NO       | `doxygen`            | `doxygen`    | `doxygen`          | `doxygen`           | YES      | Documentation   |\n| Graphviz     | any           | NO       | `graphviz`           | `graphviz`   | `graphviz`         | `graphviz`          | YES      | Documentation   |\n| lrelease     | ?             | NO       | `qttools5-dev-tools` | `qt5-tools`  | `qt5-tools`        | `qt5-linguist`      | YES      | Translations    |\n| libhidapi    | ?             | NO       | `libhidapi-dev`      | `hidapi`     | `hidapi-devel`     | `hidapi-devel`      | YES      | Hardware wallet |\n| libusb       | ?             | NO       | `libusb-1.0-0-dev`   | `libusb`     | `libusb-devel`     | `libusbx-devel`     | YES      | Hardware wallet |\n| libprotobuf  | ?             | NO       | `libprotobuf-dev`    | `protobuf`   | `protobuf-devel`   | `protobuf-devel`    | YES      | Hardware wallet |\n| protoc       | ?             | NO       | `protobuf-compiler`  | `protobuf`   | `protobuf`         | `protobuf-compiler` | YES      | Hardware wallet |\n| libudev      | ?             | NO       | `libudev-dev`        | `systemd`    | `eudev-libudev-devel` | `systemd-devel`  | YES      | Hardware wallet |\n\nInstall all dependencies at once on Debian/Ubuntu:\n\n```\nsudo apt update && sudo apt install build-essential cmake pkg-config libssl-dev libzmq3-dev libunbound-dev libsodium-dev libunwind8-dev liblzma-dev libreadline6-dev libexpat1-dev qttools5-dev-tools libhidapi-dev libusb-1.0-0-dev libprotobuf-dev protobuf-compiler libudev-dev libboost-chrono-dev libboost-date-time-dev libboost-filesystem-dev libboost-locale-dev libboost-program-options-dev libboost-regex-dev libboost-serialization-dev libboost-system-dev libboost-thread-dev python3 ccache doxygen graphviz git curl autoconf libtool gperf\n```\n\nInstall all dependencies at once on Arch:\n```\nsudo pacman -Syu --needed base-devel cmake boost openssl zeromq unbound libsodium libunwind xz readline expat gtest python3 ccache doxygen graphviz qt5-tools hidapi libusb protobuf systemd\n```\n\nInstall all dependencies at once on Fedora:\n```\nsudo dnf install gcc gcc-c++ cmake pkgconf boost-devel openssl-devel zeromq-devel unbound-devel libsodium-devel libunwind-devel xz-devel readline-devel expat-devel gtest-devel ccache doxygen graphviz qt5-linguist hidapi-devel libusbx-devel protobuf-devel protobuf-compiler systemd-devel\n```\n\nInstall all dependencies at once on openSUSE:\n\n```\nsudo zypper ref && sudo zypper in cppzmq-devel libboost_chrono-devel libboost_date_time-devel libboost_filesystem-devel libboost_locale-devel libboost_program_options-devel libboost_regex-devel libboost_serialization-devel libboost_system-devel libboost_thread-devel libexpat-devel libminiupnpc-devel libsodium-devel libunwind-devel unbound-devel cmake doxygen ccache fdupes gcc-c++ libevent-devel libopenssl-devel pkgconf-pkg-config readline-devel xz-devel libqt5-qttools-devel patterns-devel-C-C++-devel_C_C++\n```\n\nInstall all dependencies at once on macOS with the provided Brewfile:\n\n```\nbrew update && brew bundle --file=contrib/brew/Brewfile\n```\n\nFreeBSD 12.1 one-liner required to build dependencies:\n\n```\npkg install git gmake cmake pkgconf boost-libs libzmq4 libsodium unbound\n```\n\n### Cloning the repository\n\nClone recursively to pull-in needed submodule(s):\n\n```\ngit clone --recursive https://github.com/monero-project/monero\n```\n\nIf you already have a repo cloned, initialize and update:\n\n```\ncd monero && git submodule init && git submodule update\n```\n\n*Note*: If there are submodule differences between branches, you may need \nto use `git submodule sync && git submodule update` after changing branches\nto build successfully.\n\n### Build instructions\n\nMonero uses the CMake build system and a top-level [Makefile](Makefile) that\ninvokes cmake commands as needed.\n\n#### On Linux and macOS\n\n* Install the dependencies\n* Change to the root of the source code directory, change to the most recent release branch, and build:\n\n    ```bash\n    cd monero\n    git checkout release-v0.18\n    make\n    ```\n\n    *Optional*: If your machine has several cores and enough memory, enable\n    parallel build by running `make -j<number of threads>` instead of `make`. For\n    this to be worthwhile, the machine should have one core and about 2GB of RAM\n    available per thread.\n\n    *Note*: The instructions above will compile the most stable release of the\n    Monero software. If you would like to use and test the most recent software,\n    use `git checkout master`. The master branch may contain updates that are\n    both unstable and incompatible with release software, though testing is always\n    encouraged.\n\n* The resulting executables can be found in `build/release/bin`\n\n* Add `PATH=\"$PATH:$HOME/monero/build/release/bin\"` to `.profile`\n\n* Run Monero with `monerod --detach`\n\n* **Optional**: build and run the test suite to verify the binaries:\n\n    ```bash\n    make release-test\n    ```\n\n    *NOTE*: `core_tests` test may take a few hours to complete.\n\n* **Optional**: to build binaries suitable for debugging:\n\n    ```bash\n    make debug\n    ```\n\n* **Optional**: to build statically-linked binaries:\n\n    ```bash\n    make release-static\n    ```\n\nDependencies need to be built with -fPIC. Static libraries usually aren't, so you may have to build them yourself with -fPIC. Refer to their documentation for how to build them.\n\n* **Optional**: build documentation in `doc/html` (omit `HAVE_DOT=YES` if `graphviz` is not installed):\n\n    ```bash\n    HAVE_DOT=YES doxygen Doxyfile\n    ```\n\n* **Optional**: use ccache not to rebuild translation units, that haven't really changed. Monero's CMakeLists.txt file automatically handles it\n\n    ```bash\n    sudo apt install ccache\n    ```\n\n#### On the Raspberry Pi\n\nTested on a Raspberry Pi 5B with a clean installation of Raspberry Pi OS (64-bit) with Debian 12 from https://www.raspberrypi.com/software/operating-systems/.\n\n* `apt-get update && apt-get upgrade` to install the latest software\n\n* Install the dependencies for Monero from the 'Debian' column in the table above.\n\n* **Optional**: increase the system swap size:\n\n    ```bash\n    sudo /etc/init.d/dphys-swapfile stop  \n    sudo nano /etc/dphys-swapfile  \n    CONF_SWAPSIZE=2048\n    sudo /etc/init.d/dphys-swapfile start\n    ```\n\n* If using an external hard disk without an external power supply, ensure it gets enough power to avoid hardware issues when syncing, by adding the line \"max_usb_current=1\" to /boot/config.txt\n\n* Clone Monero and checkout the most recent release version:\n\n    ```bash\n    git clone --recursive https://github.com/monero-project/monero.git\n    cd monero\n    git checkout v0.18.3.4\n    ```\n\n* Build:\n\n    ```bash\n    USE_SINGLE_BUILDDIR=1 make release\n    ```\n\n* Wait a few hours\n\n* The resulting executables can be found in `build/release/bin`\n\n* Add `export PATH=\"$PATH:$HOME/monero/build/release/bin\"` to `$HOME/.profile`\n\n* Run `source $HOME/.profile`\n\n* Run Monero with `monerod --detach`\n\n* You may wish to reduce the size of the swap file after the build has finished, and delete the boost directory from your home directory\n\n#### On Windows:\n\nBinaries for Windows can be built on Windows using the MinGW toolchain within\n[MSYS2 environment](https://www.msys2.org). The MSYS2 environment emulates a\nPOSIX system. The toolchain runs within the environment and *cross-compiles*\nbinaries that can run outside of the environment as a regular Windows\napplication.\n\n**Preparing the build environment**\n\n* Download and install the [MSYS2 installer](https://www.msys2.org). Installing MSYS2 requires 64-bit Windows 10 or newer.\n* Open the MSYS shell via the `MSYS2 MSYS` shortcut\n* Update packages using pacman:\n\n    ```bash\n    pacman -Syu\n    ```\n\n* Install dependencies:\n\n    ```bash\n    pacman -S mingw-w64-x86_64-toolchain make mingw-w64-x86_64-cmake mingw-w64-x86_64-boost mingw-w64-x86_64-openssl mingw-w64-x86_64-zeromq mingw-w64-x86_64-libsodium mingw-w64-x86_64-hidapi mingw-w64-x86_64-unbound\n    ```\n\n* Open the MingW shell via `MSYS2 MINGW64` shortcut.\n\n**Cloning**\n\n* To git clone, run:\n\n    ```bash\n    git clone --recursive https://github.com/monero-project/monero.git\n    ```\n\n**Building**\n\n* Change to the cloned directory, run:\n\n    ```bash\n    cd monero\n    ```\n\n* If you would like a specific [version/tag](https://github.com/monero-project/monero/tags), do a git checkout for that version. eg. 'v0.18.3.4'. If you don't care about the version and just want binaries from master, skip this step:\n\n    ```bash\n    git checkout v0.18.3.4\n    ```\n\n* To build Monero, run:\n\n    ```bash\n    make release-static-win64\n    ```\n\n   The resulting executables can be found in `build/release/bin`\n\n\n* **Optional**: to build Windows binaries suitable for debugging, run:\n\n    ```bash\n    make debug-static-win64\n    ```\n\n   The resulting executables can be found in `build/debug/bin`\n\n### On FreeBSD:\n\nThe project can be built from scratch by following instructions for Linux above(but use `gmake` instead of `make`). \nIf you are running Monero in a jail, you need to add `sysvsem=\"new\"` to your jail configuration, otherwise lmdb will throw the error message: `Failed to open lmdb environment: Function not implemented`.\n\nMonero is also available as a port or package as `monero-cli`.\n\n### On OpenBSD:\n\nYou will need to add a few packages to your system. `pkg_add cmake gmake zeromq libiconv boost libunbound`.\n\nThe `doxygen` and `graphviz` packages are optional and require the xbase set.\nRunning the test suite also requires `py3-requests` package.\n\nBuild monero: `gmake`\n\nNote: you may encounter the following error when compiling the latest version of Monero as a normal user:\n\n```\nLLVM ERROR: out of memory\nc++: error: unable to execute command: Abort trap (core dumped)\n```\n\nThen you need to increase the data ulimit size to 2GB and try again: `ulimit -d 2000000`\n\n### On NetBSD:\n\nCheck that the dependencies are present: `pkg_info -c libexecinfo boost-headers boost-libs protobuf readline libusb1 zeromq git-base pkgconf gmake cmake | more`, and install any that are reported missing, using `pkg_add` or from your pkgsrc tree.  Readline is optional but worth having.\n\nThird-party dependencies are usually under `/usr/pkg/`, but if you have a custom setup, adjust the \"/usr/pkg\" (below) accordingly.\n\nClone the monero repository recursively and checkout the most recent release as described above. Then build monero: `gmake BOOST_ROOT=/usr/pkg LDFLAGS=\"-Wl,-R/usr/pkg/lib\" release`.  The resulting executables can be found in `build/NetBSD/[Release version]/Release/bin/`.\n\n### On Solaris:\n\nThe default Solaris linker can't be used, you have to install GNU ld, then run cmake manually with the path to your copy of GNU ld:\n\n```bash\nmkdir -p build/release\ncd build/release\ncmake -DCMAKE_LINKER=/path/to/ld -D CMAKE_BUILD_TYPE=Release ../..\ncd ../..\n```\n\nThen you can run make as usual.\n\n### Building portable statically linked binaries\n\nBy default, in either dynamically or statically linked builds, binaries target the specific host processor on which the build happens and are not portable to other processors. Portable binaries can be built using the following targets:\n\n* ```make release-static-linux-x86_64``` builds binaries on Linux on x86_64 portable across POSIX systems on x86_64 processors\n* ```make release-static-linux-i686``` builds binaries on Linux on x86_64 or i686 portable across POSIX systems on i686 processors\n* ```make release-static-linux-armv8``` builds binaries on Linux portable across POSIX systems on armv8 processors\n* ```make release-static-linux-armv7``` builds binaries on Linux portable across POSIX systems on armv7 processors\n* ```make release-static-linux-armv6``` builds binaries on Linux portable across POSIX systems on armv6 processors\n* ```make release-static-win64``` builds binaries on 64-bit Windows portable across 64-bit Windows systems\n* ```make release-static-win32``` builds binaries on 64-bit or 32-bit Windows portable across 32-bit Windows systems\n\n### Cross Compiling\n\nYou can also cross-compile static binaries on Linux for Windows and macOS with the `depends` system.\n\n* ```make depends target=x86_64-linux-gnu``` for 64-bit linux binaries.\n* ```make depends target=x86_64-w64-mingw32``` for 64-bit windows binaries.\n  * Requires: `g++-mingw-w64-x86-64`\n  * You also need to run:\n    ```shell\n    update-alternatives --set x86_64-w64-mingw32-g++ $(which x86_64-w64-mingw32-g++-posix) && \\\n    update-alternatives --set x86_64-w64-mingw32-gcc $(which x86_64-w64-mingw32-gcc-posix)\n    ```\n* ```make depends target=x86_64-apple-darwin``` for macOS binaries.\n  * Requires: `cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev`\n* ```make depends target=i686-linux-gnu``` for 32-bit linux binaries.\n  * Requires: `g++-multilib bc`\n* ```make depends target=i686-w64-mingw32``` for 32-bit windows binaries.\n  * Requires: `python3 g++-mingw-w64-i686`\n* ```make depends target=arm-linux-gnueabihf``` for armv7 binaries.\n  * Requires: `g++-arm-linux-gnueabihf`\n* ```make depends target=aarch64-linux-gnu``` for armv8 binaries.\n  * Requires: `g++-aarch64-linux-gnu`\n* ```make depends target=riscv64-linux-gnu``` for RISC V 64 bit binaries.\n  * Requires: `g++-riscv64-linux-gnu`\n* ```make depends target=x86_64-unknown-freebsd``` for freebsd binaries.\n  * Requires: `clang-8`\n* ```make depends target=arm-linux-android``` for 32bit android binaries\n* ```make depends target=aarch64-linux-android``` for 64bit android binaries\n\n\nThe required packages are the names for each toolchain on apt. Depending on your distro, they may have different names. The `depends` system has been tested on Ubuntu 18.04 and 20.04.\n\nUsing `depends` might also be easier to compile Monero on Windows than using MSYS. Activate Windows Subsystem for Linux (WSL) with a distro (for example Ubuntu), install the apt build-essentials and follow the `depends` steps as depicted above.\n\nThe produced binaries still link libc dynamically. If the binary is compiled on a current distribution, it might not run on an older distribution with an older installation of libc. Passing `-DBACKCOMPAT=ON` to cmake will make sure that the binary will run on systems having at least libc version 2.17.\n\n### Trezor hardware wallet support\n\nIf you have an issue with building Monero with Trezor support, you can disable it by setting `USE_DEVICE_TREZOR=OFF`, e.g., \n\n```bash\nUSE_DEVICE_TREZOR=OFF make release\n```\n\nFor more information, please check out Trezor [src/device_trezor/README.md](src/device_trezor/README.md).\n\n### Guix builds\n\nSee [contrib/guix/README.md](contrib/guix/README.md).\n\n## Installing Monero from a package\n\n**DISCLAIMER: These packages are not part of this repository or maintained by this project's contributors, and as such, do not go through the same review process to ensure their trustworthiness and security.**\n\nPackages are available for\n\n* Debian Buster\n\n    See the [instructions in the whonix/monero-gui repository](https://gitlab.com/whonix/monero-gui#how-to-install-monero-using-apt-get)\n\n* Debian Bullseye and Sid\n\n    ```bash\n    sudo apt install monero\n    ```\nMore info and versions in the [Debian package tracker](https://tracker.debian.org/pkg/monero).\n\n* Arch Linux [(via Community packages)](https://www.archlinux.org/packages/community/x86_64/monero/):\n\n    ```bash\n    sudo pacman -S monero\n    ```\n\n* NixOS:\n\n    ```bash\n    nix-shell -p monero-cli\n    ```\n\n* GuixSD\n\n    ```bash\n    guix package -i monero\n    ```\n\n* Gentoo [Monero overlay](https://github.com/gentoo-monero/gentoo-monero)\n\n    ```bash\n    emerge --noreplace eselect-repository\n    eselect repository enable monero\n    emaint sync -r monero\n    echo '*/*::monero ~amd64' >> /etc/portage/package.accept_keywords\n    emerge net-p2p/monero\n    ```\n\n* Alpine Linux:\n\n    ```bash\n    apk add monero\n    ```\n\n* macOS [(homebrew)](https://brew.sh/)\n    ```bash\n    brew install monero\n    ```\n\n* Docker\n\n    ```bash\n    # Build using all available cores\n    docker build -t monero .\n\n    # or build using a specific number of cores (reduce RAM requirement)\n    docker build --build-arg NPROC=1 -t monero .\n\n    # either run in foreground\n    docker run -it -v /monero/chain:/home/monero/.bitmonero -v /monero/wallet:/wallet -p 18080:18080 monero\n\n    # or in background\n    docker run -it -d -v /monero/chain:/home/monero/.bitmonero -v /monero/wallet:/wallet -p 18080:18080 monero\n    ```\n\n* The build needs 3 GB space.\n* Wait one hour or more\n\nPackaging for your favorite distribution would be a welcome contribution!\n\n## Running monerod\n\nThe build places the binary in `bin/` sub-directory within the build directory\nfrom which cmake was invoked (repository root by default). To run in the\nforeground:\n\n```bash\n./bin/monerod\n```\n\nTo list all available options, run `./bin/monerod --help`.  Options can be\nspecified either on the command line or in a configuration file passed by the\n`--config-file` argument.  To specify an option in the configuration file, add\na line with the syntax `argumentname=value`, where `argumentname` is the name\nof the argument without the leading dashes, for example, `log-level=1`.\n\nTo run in background:\n\n```bash\n./bin/monerod --log-file monerod.log --detach\n```\n\nTo run as a systemd service, copy\n[monerod.service](utils/systemd/monerod.service) to `/etc/systemd/system/` and\n[monerod.conf](utils/conf/monerod.conf) to `/etc/`. The [example\nservice](utils/systemd/monerod.service) assumes that the user `monero` exists\nand its home is the data directory specified in the [example\nconfig](utils/conf/monerod.conf).\n\nIf you're on Mac, you may need to add the `--max-concurrency 1` option to\nmonero-wallet-cli, and possibly monerod, if you get crashes refreshing.\n\n## Internationalization\n\nSee [README.i18n.md](docs/README.i18n.md).\n\n## Using Tor\n\n> There is a new, still experimental, [integration with Tor](docs/ANONYMITY_NETWORKS.md). The\n> feature allows connecting over IPv4 and Tor simultaneously - IPv4 is used for\n> relaying blocks and relaying transactions received by peers whereas Tor is\n> used solely for relaying transactions received over local RPC. This provides\n> privacy and better protection against surrounding node (sybil) attacks.\n\nWhile Monero isn't made to integrate with Tor, it can be used wrapped with torsocks, by\nsetting the following configuration parameters and environment variables:\n\n* `--p2p-bind-ip 127.0.0.1` on the command line or `p2p-bind-ip=127.0.0.1` in\n  monerod.conf to disable listening for connections on external interfaces.\n* `--no-igd` on the command line or `no-igd=1` in monerod.conf to disable IGD\n  (UPnP port forwarding negotiation), which is pointless with Tor.\n* `DNS_PUBLIC=tcp` or `DNS_PUBLIC=tcp://x.x.x.x` where x.x.x.x is the IP of the\n  desired DNS server, for DNS requests to go over TCP, so that they are routed\n  through Tor. When IP is not specified, monerod uses the default list of\n  servers defined in [src/common/dns_utils.cpp](src/common/dns_utils.cpp).\n* `TORSOCKS_ALLOW_INBOUND=1` to tell torsocks to allow monerod to bind to interfaces\n   to accept connections from the wallet. On some Linux systems, torsocks\n   allows binding to localhost by default, so setting this variable is only\n   necessary to allow binding to local LAN/VPN interfaces to allow wallets to\n   connect from remote hosts. On other systems, it may be needed for local wallets\n   as well.\n* Do NOT pass `--detach` when running through torsocks with systemd, (see\n  [utils/systemd/monerod.service](utils/systemd/monerod.service) for details).\n* If you use the wallet with a Tor daemon via the loopback IP (eg, 127.0.0.1:9050),\n  then use `--untrusted-daemon` unless it is your own hidden service.\n\nExample command line to start monerod through Tor:\n\n```bash\nDNS_PUBLIC=tcp torsocks monerod --p2p-bind-ip 127.0.0.1 --no-igd\n```\n\nA helper script is in contrib/tor/monero-over-tor.sh. It assumes Tor is installed\nalready, and runs Tor and Monero with the right configuration.\n\n### Using Tor on Tails\n\nTAILS ships with a very restrictive set of firewall rules. Therefore, you need\nto add a rule to allow this connection too, in addition to telling torsocks to\nallow inbound connections. Full example:\n\n```bash\nsudo iptables -I OUTPUT 2 -p tcp -d 127.0.0.1 -m tcp --dport 18081 -j ACCEPT\nDNS_PUBLIC=tcp torsocks ./monerod --p2p-bind-ip 127.0.0.1 --no-igd --rpc-bind-ip 127.0.0.1 \\\n    --data-dir /home/amnesia/Persistent/your/directory/to/the/blockchain\n```\n\n## Pruning\n\nAs of April 2022, the full Monero blockchain file is about 130 GB. One can store a pruned blockchain, which is about 45 GB.\nA pruned blockchain can only serve part of the historical chain data to other peers, but is otherwise identical in\nfunctionality to the full blockchain.\nTo use a pruned blockchain, it is best to start the initial sync with `--prune-blockchain`. However, it is also possible\nto prune an existing blockchain using the `monero-blockchain-prune` tool or using the `--prune-blockchain` `monerod` option\nwith an existing chain. If an existing chain exists, pruning will temporarily require disk space to store both the full\nand pruned blockchains.\n\nFor more detailed information see the ['Pruning' entry in the Moneropedia](https://www.getmonero.org/resources/moneropedia/pruning.html)\n\n## Debugging\n\nThis section contains general instructions for debugging failed installs or problems encountered with Monero. First, ensure you are running the latest version built from the GitHub repo.\n\n### Obtaining stack traces and core dumps on Unix systems\n\nWe generally use the tool `gdb` (GNU debugger) to provide stack trace functionality, and `ulimit` to provide core dumps in builds which crash or segfault.\n\n* To use `gdb` in order to obtain a stack trace for a build that has stalled:\n\nRun the build.\n\nOnce it stalls, enter the following command:\n\n```bash\ngdb /path/to/monerod `pidof monerod`\n```\n\nType `thread apply all bt` within gdb in order to obtain the stack trace\n\n* If however the core dumps or segfaults:\n\nEnter `ulimit -c unlimited` on the command line to enable unlimited filesizes for core dumps\n\nEnter `echo core | sudo tee /proc/sys/kernel/core_pattern` to stop cores from being hijacked by other tools\n\nRun the build.\n\nWhen it terminates with an output along the lines of \"Segmentation fault (core dumped)\", there should be a core dump file in the same directory as monerod. It may be named just `core`, or `core.xxxx` with numbers appended.\n\nYou can now analyse this core dump with `gdb` as follows:\n\n```bash\ngdb /path/to/monerod /path/to/dumpfile`\n```\n\nPrint the stack trace with `bt`\n\n * If a program crashed and cores are managed by systemd, the following can also get a stack trace for that crash:\n\n```bash\ncoredumpctl -1 gdb\n```\n\n#### To run Monero within gdb:\n\nType `gdb /path/to/monerod`\n\nPass command-line options with `--args` followed by the relevant arguments\n\nType `run` to run monerod\n\n### Analysing memory corruption\n\nThere are two tools available:\n\n#### ASAN\n\nConfigure Monero with the -D SANITIZE=ON cmake flag, eg:\n\n```bash\ncd build/debug && cmake -D SANITIZE=ON -D CMAKE_BUILD_TYPE=Debug ../..\n```\n\nYou can then run the monero tools normally. Performance will typically halve.\n\n#### valgrind\n\nInstall valgrind and run as `valgrind /path/to/monerod`. It will be very slow.\n\n### LMDB\n\nInstructions for debugging suspected blockchain corruption as per @HYC\n\nThere is an `mdb_stat` command in the LMDB source that can print statistics about the database but it's not routinely built. This can be built with the following command:\n\n```bash\ncd ~/monero/external/db_drivers/liblmdb && make\n```\n\nThe output of `mdb_stat -ea <path to blockchain dir>` will indicate inconsistencies in the blocks, block_heights and block_info table.\n\nThe output of `mdb_dump -s blocks <path to blockchain dir>` and `mdb_dump -s block_info <path to blockchain dir>` is useful for indicating whether blocks and block_info contain the same keys.\n\nThese records are dumped as hex data, where the first line is the key and the second line is the data.\n\n# Known Issues\n\n## Protocols\n\n### Socket-based\n\nBecause of the nature of the socket-based protocols that drive monero, certain protocol weaknesses are somewhat unavoidable at this time. While these weaknesses can theoretically be fully mitigated, the effort required (the means) may not justify the ends. As such, please consider taking the following precautions if you are a monero node operator:\n\n- Run `monerod` on a \"secured\" machine. If operational security is not your forte, at a very minimum, have a dedicated a computer running `monerod` and **do not** browse the web, use email clients, or use any other potentially harmful apps on your `monerod` machine. **Do not click links or load URL/MUA content on the same machine**. Doing so may potentially exploit weaknesses in commands which accept \"localhost\" and \"127.0.0.1\".\n- If you plan on hosting a public \"remote\" node, start `monerod` with `--restricted-rpc`. This is a must.\n\n### Blockchain-based\n\nCertain blockchain \"features\" can be considered \"bugs\" if misused correctly. Consequently, please consider the following:\n\n- When receiving monero, be aware that it may be locked for an arbitrary time if the sender elected to, preventing you from spending that monero until the lock time expires. You may want to hold off acting upon such a transaction until the unlock time lapses. To get a sense of that time, you can consider the remaining blocktime until unlock as seen in the `show_transfers` command.\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "external",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "translations",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}