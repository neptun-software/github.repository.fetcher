{
  "metadata": {
    "timestamp": 1736566035872,
    "page": 20,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "microsoft/napajs",
      "stars": 9239,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5,
          "content": "bin\nbuild\nnode_modules\ntypes\n\n# ignore all js files under lib except explicit ones specified here\nlib/**/*.js\n!lib/core/*.js\n!lib/zone/zone-main.js\n!lib/binding.js\n\n# ignore all js files under test\ntest/**/*.js\ntest/module/test-dir\ntest/module/test-file\n!test/module/node_modules\n!test/module/**/*.js\n\n!unittest/module/test-files/node_modules\n\n# ignore all js files under benchmark\nbenchmark/**/*.js\n\npackage-lock.json\n\n!tsconfig.json\n\n# ignore all VSCode files\n.vscode\n\n# ignore npm related files\nnpm-debug.log\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.2705078125,
          "content": "bin\nbuild\nexamples\n\n# Exclude TypeScript source files.\nbenchmark/**/*.ts\nbenchmark/tsconfig.json\nlib/**/*.ts\nlib/tsconfig.json\ntest/**/*.ts\ntest/module/test-dir\ntest/module/test-file\ntest/tsconfig.json\n\n.vscode\n.npmrc\n.npmignore\n.taskkey\n.travis.yml\nappveyor.yml\nnpm-debug.log\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 2.181640625,
          "content": "language: node_js\ncompiler: default\nmatrix:\n  exclude:\n  # Disable the default build and use customized matrix only.\n  - compiler: default\n  include:\n  # Node 6.x                 Linux (Precise)          G++5.4.1\n  - os: linux\n    dist: precise\n    node_js: '6'\n    compiler: g++-5\n    addons:\n      apt:\n        # The apt source 'ubuntu-toolchain-r-test' is for GCC 5+\n        # The apt source 'george-edison55-precise-backports' is for CMake 3.2+\n        sources:\n        - ubuntu-toolchain-r-test\n        - george-edison55-precise-backports\n        packages:\n        - g++-5\n        - cmake-data\n        - cmake\n    env:\n    - COMPILER_OVERRIDE=\"CXX=g++-5 CC=gcc-5\"\n  # Node 6.x                 OS X (Yosemite)          AppleClang 6.1\n  - os: osx\n    node_js: '6'\n    osx_image: xcode6.4\n  # Node LTS (8.x)           Linux (Trusty)           G++6.4.0\n  - os: linux\n    dist: trusty\n    node_js: '8'\n    compiler: g++-6\n    addons:\n      apt:\n        sources:\n        - ubuntu-toolchain-r-test\n        packages:\n        - g++-6\n    env:\n    - COMPILER_OVERRIDE=\"CXX=g++-6 CC=gcc-6\"\n  # Node LTS (8.x)           OS X (El Capitan)        AppleClang 7.3\n  - os: osx\n    node_js: '8'\n    osx_image: xcode7.3\n  # Node (9.x)               Linux (Trusty)           G++6.4.0\n  - os: linux\n    dist: trusty\n    node_js: '9'\n    compiler: g++-6\n    addons:\n      apt:\n        sources:\n        - ubuntu-toolchain-r-test\n        packages:\n        - g++-6\n    env:\n    - COMPILER_OVERRIDE=\"CXX=g++-6 CC=gcc-6\"\n  # Node (9.x)               macOS (Sierra)           AppleClang 8.1\n  - os: osx\n    node_js: '9'\n    osx_image: xcode8.3\n  # Node Current (10.x)       Linux (Trusty)          G++7.3.0\n  - os: linux\n    dist: trusty\n    node_js: '10'\n    compiler: g++-7\n    addons:\n      apt:\n        sources:\n        - ubuntu-toolchain-r-test\n        packages:\n        - g++-7\n    env:\n    - COMPILER_OVERRIDE=\"CXX=g++-7 CC=gcc-7\"\n  # Node Current (10.x)       macOS (High Sierra)     AppleClang 9.1\n  - os: osx\n    node_js: '10'\n    osx_image: xcode9.3\n\nbefore_install:\n- |\n  if [ $TRAVIS_OS_NAME == linux ]; then\n    export ${COMPILER_OVERRIDE}\n  fi\ninstall:\n- npm install cmake-js -g\n- npm install --no-fetch\nscript:\n- npm test\n- npm run unittest\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 1.6103515625,
          "content": "cmake_minimum_required(VERSION 3.2 FATAL_ERROR)\n\nproject(\"napa\")\n\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${PROJECT_SOURCE_DIR}/bin)\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${PROJECT_SOURCE_DIR}/bin)\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${PROJECT_SOURCE_DIR}/bin)\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${PROJECT_SOURCE_DIR}/bin)\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${PROJECT_SOURCE_DIR}/bin)\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${PROJECT_SOURCE_DIR}/bin)\n\n# Require Cxx14 features\nset(CMAKE_CXX_STANDARD 14)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\n\nif (NOT WIN32 AND NOT APPLE)\n    # Set symbol visibility to hidden by default.\n    # Napa shared library shares a few classes with napa-binding.node with different compile definition,\n    # exposing the same symbols from both shared libraries may cause improper behaviors under gcc.\n    set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n    set(CMAKE_VISIBILITY_INLINES_HIDDEN)\n\n    # Prevent symbol relocations internal to our wrapper library to be overwritten by the application.\n    set (CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -Wl,-Bsymbolic -Wl,-Bsymbolic-functions\")\n    set (CMAKE_MODULE_LINKER_FLAGS \"${CMAKE_MODULE_LINKER_FLAGS} -Wl,-Bsymbolic -Wl,-Bsymbolic-functions\")\n\n    # Mark object non-lazy runtime binding.\n    set (CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -Wl,-z,now\")\n    set (CMAKE_MODULE_LINKER_FLAGS \"${CMAKE_MODULE_LINKER_FLAGS} -Wl,-z,now\")\nendif ()\n\n# Build napa shared library.\nadd_subdirectory(src)\n\nif (CMAKE_JS_VERSION)\n    # Build napa addon for node.\n    add_subdirectory(node)\n    add_subdirectory(test/module/addon)\nendif()\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.0810546875,
          "content": "Napa.JS\n\nCopyright (c) Microsoft Corporation. All rights reserved. \n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"\"Software\"\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.232421875,
          "content": "[![Build Status for Linux/MacOS](https://travis-ci.org/Microsoft/napajs.svg?branch=master)](https://travis-ci.org/Microsoft/napajs)\n[![Build Status for Windows](https://ci.appveyor.com/api/projects/status/github/Microsoft/napajs?branch=master&svg=true)](https://ci.appveyor.com/project/napajs/napajs)\n[![npm version](https://badge.fury.io/js/napajs.svg)](https://www.npmjs.com/package/napajs)\n[![Downloads](https://img.shields.io/npm/dm/napajs.svg)](https://www.npmjs.com/package/napajs)\n\n# Napa.js\nNapa.js is a multi-threaded JavaScript runtime built on [V8](https://github.com/v8/v8), which was originally designed to develop highly iterative services with non-compromised performance in Bing. As it evolves, we find it useful to complement [Node.js](https://nodejs.org) in CPU-bound tasks, with the capability of executing JavaScript in multiple V8 isolates and communicating between them. Napa.js is exposed as a Node.js module, while it can also be embedded in a host process without Node.js dependency.\n\n## Installation\nInstall the latest stable version:\n```\nnpm install napajs\n```\nOther options can be found in [Build Napa.js](https://github.com/Microsoft/napajs/wiki/build-napa.js).\n\n## Quick Start\n```js\nconst napa = require('napajs');\nconst zone1 = napa.zone.create('zone1', { workers: 4 });\n\n// Broadcast code to all 4 workers in 'zone1'.\nzone1.broadcast('console.log(\"hello world\");');\n\n// Execute an anonymous function in any worker thread in 'zone1'.\nzone1.execute(\n    (text) => text, \n    ['hello napa'])\n    .then((result) => {\n        console.log(result.value);\n    });\n```\nMore examples:\n* [Estimate PI in parallel](./examples/tutorial/estimate-pi-in-parallel)\n* [Max sub-matrix of 1s with layered parallelism](./examples/tutorial/max-square-sub-matrix)\n* [Parallel Quick Sort](./examples/tutorial/parallel-quick-sort)\n* [Recursive Fibonacci with multiple JavaScript threads](./examples/tutorial/recursive-fibonacci)\n* [Synchronized loading](./examples/tutorial/synchronized-loading)\n\n## Features\n- Multi-threaded JavaScript runtime.\n- Node.js compatible module architecture with NPM support.\n- API for object transportation, object sharing and synchronization across JavaScript threads.\n- API for pluggable logging, metric and memory allocator.\n- Distributed as a Node.js module, as well as supporting embed scenarios.\n\n## Documentation\n- [Napa.js Home](https://github.com/Microsoft/napajs/wiki)\n- [API Reference](./docs/api/index.md)\n- [FAQ](https://github.com/Microsoft/napajs/wiki/FAQ)\n\n# Contribute\nYou can contribute to Napa.js in following ways:\n\n* [Report issues](https://github.com/Microsoft/napajs/issues) and help us verify fixes as they are checked in.\n* Review the [source code changes](https://github.com/Microsoft/napajs/pulls).\n* Contribute to core module compatibility with Node.\n* Contribute bug fixes.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).<br> For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact opencode@microsoft.com with any additional questions or comments.\n\n# License\nCopyright (c) Microsoft Corporation. All rights reserved.\n\nLicensed under the [MIT](https://github.com/Microsoft/napajs/blob/master/LICENSE.txt) License.\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.78515625,
          "content": "environment:\n  matrix:\n    # Windows Server 2012 R2       Visual C++ Build Tools 2015\n    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015\n      nodejs_version: 6\n    # Windows Server 2012 R2       Visual C++ Build Tools 2015\n    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015\n      nodejs_version: 8\n    # Windows Server 2016          Visual C++ Build Tools 2017\n    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017\n      nodejs_version: 9\n    # Windows Server 2016          Visual C++ Build Tools 2017\n    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017\n      nodejs_version: 10\n\nplatform:\n- x64\n\ninstall:\n- ps: Install-Product node $env:nodejs_version $env:platform\n- npm install cmake-js -g\n- npm install --no-fetch\n\n# Skip MSBuild stage\nbuild: off\n\ntest_script:\n- npm test\n- npm run unittest\n"
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.bat",
          "type": "blob",
          "size": 0.2099609375,
          "content": ":: Copyright (c) Microsoft Corporation. All rights reserved.\n:: Licensed under the MIT license.\n@echo off\n\nset NODE_EXE=%~dp0\\node.exe\nif not exist \"%NODE_EXE%\" (\n  set NODE_EXE=node\n)\n\n%NODE_EXE% %~dp0\\build.js %*\n"
        },
        {
          "name": "build.js",
          "type": "blob",
          "size": 1.009765625,
          "content": "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n// Distinguish between running this file as a script or loading it as a module.\nif (module.parent) {\n    // Loaded as a module - 'require('./build.js')\n    exports.paths = require('./scripts/paths');\n}\nelse {\n    // Loaded as a script - 'node build.js'\n\n    // Remove first two parameters which are node executable and this javascript file.\n    // Transform all parameters to lowercase for easier handling.\n    let params = process.argv.slice(2).map((item) => item.toLowerCase());\n\n    // Specify wheater cleanup is needed.\n    if (params.indexOf('clean') != -1) {\n        require('./scripts/clean').clean();\n    }\n    \n    // Only build if embed was specified as a parameter.\n    if (params.indexOf('embed') != -1) {\n        let embedded = require('./scripts/embedded');\n\n        if (params.indexOf('debug') != -1) {\n            embedded.build('debug');\n        }\n        else {\n            embedded.build('release');\n        }\n    }\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "inc",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "node",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.431640625,
          "content": "{\n  \"name\": \"napajs\",\n  \"description\": \"Napa.js is a multi-threaded JavaScript runtime built on V8\",\n  \"version\": \"0.2.3\",\n  \"author\": \"napajs\",\n  \"main\": \"./lib/index.js\",\n  \"types\": \"./types/index.d.ts\",\n  \"license\": \"MIT\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/Microsoft/napajs.git\"\n  },\n  \"binary\": {\n    \"module_name\": \"napa-binding\",\n    \"module_path\": \"./bin/\",\n    \"host\": \"https://github.com/Microsoft/napajs/releases/download/\",\n    \"remote_path\": \"{version}\"\n  },\n  \"dependencies\": {\n    \"node-pre-gyp\": \"^0.6.36\",\n    \"npmlog\": \"^4.1.2\",\n    \"semver\": \"^5.5.0\"\n  },\n  \"devDependencies\": {\n    \"cmake-js\": \"^3.7.3\",\n    \"node-pre-gyp-github\": \"^1.3.1\",\n    \"mocha\": \"^3.5.0\",\n    \"typescript\": \"^2.4.2\",\n    \"@types/node\": \"^8.0.22\",\n    \"@types/mocha\": \"^2.2.41\",\n    \"markdown-table\": \"^1.1.1\"\n  },\n  \"scripts\": {\n    \"benchmark\": \"node benchmark/bench.js\",\n    \"install\": \"node scripts/install.js\",\n    \"prepare\": \"tsc -p lib && tsc -p test && tsc -p benchmark\",\n    \"test\": \"mocha test -g \\\"^((?!napajs/timers).)*$\\\" --recursive && mocha test -g \\\"^napajs/timers\\\"\",\n    \"rebuild\": \"cmake-js rebuild && tsc -p lib\",\n    \"rebuildd\": \"cmake-js rebuild --debug && tsc -p lib\",\n    \"retest\": \"cmake-js rebuild -d test/module/addon && tsc -p test && mocha test --recursive\",\n    \"reunittest\": \"cmake-js rebuild -d unittest && node unittest/run.js\",\n    \"unittest\": \"cmake-js compile -d unittest && node unittest/run.js\"\n  }\n}\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "third-party",
          "type": "tree",
          "content": null
        },
        {
          "name": "unittest",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}