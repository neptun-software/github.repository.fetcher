{
  "metadata": {
    "timestamp": 1736566079917,
    "page": 70,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Stellarium/stellarium",
      "stars": 8059,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 6.2802734375,
          "content": "version: '{branch}-{build}'\n# build Configuration\nconfiguration: Release\n# clone directory\nclone_folder: c:\\stellarium\n# set clone depth\nclone_depth: 10\n# Do not build feature branch with open Pull Requests\nskip_branch_with_pr: true\n# Do not build on tags\nskip_tags: true\n# Skipping commits\nskip_commits:\n  message: /(GHA|skip)/\n  author: /transifex/\n  files:\n    - guide/*\n# Maximum number of concurrent jobs for the project\nmax_jobs: 5\n# environment variables\nenvironment:\n  matrix:\n  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019\n    qtver: 6.5\n    qtbin: msvc2019_64\n    msvcname: Visual Studio 16 2019\n    cmake_args: -A x64\n    exiv2url: https://github.com/Exiv2/exiv2/releases/download/v0.28.0/exiv2-0.28.0-2019msvc64.zip\n    exiv2baseName: exiv2-0.28.0-2019msvc64\n  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017\n    qtver: 5.12\n    qtbin: msvc2017_64\n    msvcname: Visual Studio 15 2017 Win64\n    cmake_args:\n    exiv2url: https://github.com/10110111/exiv2/releases/download/ver0.28.0-final/exiv2-0.28.0-2017msvc64.zip\n    exiv2baseName: exiv2-0.28.0-2017msvc64\n  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017\n    qtver: 5.12\n    qtbin: msvc2017\n    msvcname: Visual Studio 15 2017\n    cmake_args:\n    exiv2url: https://github.com/10110111/exiv2/releases/download/ver0.28.0-final/exiv2-0.28.0-2017msvc32.zip\n    exiv2baseName: exiv2-0.28.0-2017msvc32\n  - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022\n    qtver: 6.5\n    qtbin: msvc2019_arm64\n    msvcname: Visual Studio 17 2022\n    cmake_args: -A ARM64 -DSTELLARIUM_BUILD_ARM64=ON -DQT_HOST_PATH=C:/Qt/6.5/msvc2019_64 -DQt6LinguistTools_DIR=C:/Qt/6.5/msvc2019_64/lib/cmake/Qt6LinguistTools -DENABLE_QTWEBENGINE=OFF\nbefore_build:\n  - ps: if($env:qtbin.contains('_64')) { $env:BITS=64 } else { $env:BITS=32 }\n  - ps: if($env:qtbin.contains('_64')) { $env:PKGARCH=\"x64\" } else { $env:PKGARCH=\"x86\" }\n  - ps: if($env:qtver.startsWith('6.')) { $env:SSL=\"OpenSSL-\" } else { $env:SSL=\"OpenSSL-1-\" }\n  - set PUBLISH_BINARY=false\n  - set USE_EXT_LIBGLES=false\n  - set SIGNING=false\n  - set INNSPATH=C:\\Program Files (x86)\\Inno Setup 5;C:\\Program Files (x86)\\Inno Setup 6\n  - set PATH=C:\\Qt\\%qtver%\\%qtbin%\\bin;c:\\%exiv2baseName%\\bin;%INNSPATH%;%PATH%\n  - ps: if($env:APPVEYOR_REPO_BRANCH -eq \"stellarium-next\") { $env:PUBLISH_BINARY = 'true' }\n  - ps: if($env:APPVEYOR_REPO_BRANCH -eq \"stellarium-stable\") { $env:PUBLISH_BINARY = 'true' }\n  - ps: if($env:APPVEYOR_REPO_BRANCH -eq \"stellarium-oldstable\") { $env:PUBLISH_BINARY = 'true' }\n  - ps: if($env:APPVEYOR_REPO_COMMIT_MESSAGE.contains('[publish]')) { $env:PUBLISH_BINARY = 'true' }\n  - ps: if($env:APPVEYOR_REPO_BRANCH -eq \"stellarium-next\" -or $env:APPVEYOR_REPO_COMMIT_MESSAGE.contains('[publish]')) { $env:USE_EXTRA_EXE = 'true' } else { $env:USE_EXTRA_EXE = 'false' }\n  - ps: if($env:PUBLISH_BINARY -eq \"true\" -and $env:qtver.startsWith('5.')) { $env:USE_EXT_LIBGLES = 'true' }\n  - ps: if($env:APPVEYOR_REPO_BRANCH -eq \"stellarium-stable\" -and $env:qtver.startsWith('6.')) { $env:SIGNING = 'true' }\n  - ps: if($env:APPVEYOR_REPO_BRANCH -eq \"stellarium-oldstable\" -and $env:qtver.startsWith('5.')) { $env:SIGNING = 'true' }\n  - ps: if($env:exiv2url -ne $null) { appveyor DownloadFile $env:exiv2url -FileName c:\\$env:exiv2baseName.zip }\n  - ps: if($env:exiv2url -ne $null) { 7z e c:\\$env:exiv2baseName.zip -spf -oc:\\ }\n  - if [%PUBLISH_BINARY%]==[true] appveyor DownloadFile https://github.com/Stellarium/stellarium-data/releases/download/guide/guide.pdf -FileName c:\\stellarium\\guide\\guide.pdf\n  - if [%PUBLISH_BINARY%]==[true] mkdir c:\\stellarium-OpenSSL\n  - if [%PUBLISH_BINARY%]==[true] set PATH=C:\\stellarium-OpenSSL;%PATH%\n  - if [%PUBLISH_BINARY%]==[true] appveyor DownloadFile https://github.com/Stellarium/stellarium-data/releases/download/qt-5.6/%SSL%Win%BITS%.zip -FileName c:\\stellarium-OpenSSL.zip\n  - if [%PUBLISH_BINARY%]==[true] 7z e c:\\stellarium-OpenSSL.zip -aoa -oc:\\stellarium-OpenSSL\n  - mkdir stellarium-%qtver%-%qtbin%\n  - cd c:\\stellarium\n  - mkdir build-%qtver%-%qtbin% && cd build-%qtver%-%qtbin%\n  - if [%PUBLISH_BINARY%]==[true] cmake -DCMAKE_PREFIX_PATH=c:\\%exiv2baseName% -DENABLE_MEDIA=On -DCMAKE_INSTALL_PREFIX=c:\\stellarium-%qtver%-%qtbin% -G \"%msvcname%\" %cmake_args% ..\n  - if [%PUBLISH_BINARY%]==[false] cmake -DCMAKE_PREFIX_PATH=c:\\%exiv2baseName% -DENABLE_MEDIA=On -DENABLE_TESTING=On -DENABLE_NLS=Off -DCMAKE_INSTALL_PREFIX=c:\\stellarium-%qtver%-%qtbin% -G \"%msvcname%\" %cmake_args% ..\n\nbuild:\n  project: c:\\stellarium\\build-%qtver%-%qtbin%\\Stellarium.sln\n  parallel: true\n  verbosity: minimal\n\ntest_script:\n  - ps: if($env:PUBLISH_BINARY -eq \"false\" -and $env:qtbin -ne \"msvc2019_arm64\") { ctest --output-on-failure }\n\nafter_test:\n  - if [%PUBLISH_BINARY%]==[true] cmake --build c:\\stellarium\\build-%qtver%-%qtbin%\\ --config %configuration% --target install\n  - if [%USE_EXT_LIBGLES%]==[true] appveyor DownloadFile https://github.com/Stellarium/stellarium-data/releases/download/qt-5.6/libGLES-Win%BITS%.zip -FileName c:\\stellarium\\build-%qtver%-%qtbin%\\libGLES.zip\n  - if [%USE_EXT_LIBGLES%]==[true] 7z e c:\\stellarium\\build-%qtver%-%qtbin%\\libGLES.zip -aoa -oc:\\stellarium-%qtver%-%qtbin%\\qtstuff\n  - if [%PUBLISH_BINARY%]==[true] appveyor DownloadFile https://github.com/Stellarium/stellarium-data/releases/download/mesa-win-20.1.8/opengl32sw-%PKGARCH%.dll -FileName c:\\stellarium-%qtver%-%qtbin%\\qtstuff\\opengl32sw.dll\n  - if [%PUBLISH_BINARY%]==[true] if NOT [%exiv2url%] == [] copy c:\\%exiv2baseName%\\bin\\exiv2.dll c:\\stellarium-%qtver%-%qtbin%\\bin\\\n  - if [%PUBLISH_BINARY%]==[true] cmake --build c:\\stellarium\\build-%qtver%-%qtbin%\\ --config %configuration% --target stellarium-installer\n  - if [%USE_EXTRA_EXE%]==[true] cmake --build c:\\stellarium\\build-%qtver%-%qtbin%\\ --config %configuration% --target stellarium-patch-installer\n  - if [%PUBLISH_BINARY%]==[true] cd c:\\stellarium\\installers\n  - if [%PUBLISH_BINARY%]==[true] for %%i in (*.exe) do appveyor PushArtifact %%i\n\n# deployment\ndeploy:\n- provider: Webhook\n  url: https://app.signpath.io/API/v1/a6a9173a-feb5-41ae-8973-8ca75af5e233/Integrations/AppVeyor?ProjectKey=stellarium&SigningPolicyKey=release-signing\n  authorization:\n    secure: k9Hka8MA6UONiSbKZeAv5koMEljPXgEZ7o1FbvEHRlPFFHMGzQcS6MQsvy53VxeTpG4Kw98FU0VXusbXoKLzug==\n  on:\n    SIGNING: true\n\nnotifications:\n- provider: Email\n  to:\n  - alex.v.wolf@gmail.com\n  on_build_success: false\n  on_build_failure: true\n  on_build_status_changed: true\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.8701171875,
          "content": "---\nLanguage:        Cpp\nAccessModifierOffset: -3\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: AcrossEmptyLinesAndComments\nAlignConsecutiveDeclarations: AcrossEmptyLinesAndComments\nAlignEscapedNewlines: Right\nAlignOperands:   true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: Empty\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: Inline\nAllowShortIfStatementsOnASingleLine: Never\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: Yes\nBinPackArguments: false\nBinPackParameters: false\nBraceWrapping:\n  AfterClass:      true\n  AfterControlStatement: Never\n  AfterEnum:       true\n  AfterFunction:   true\n  AfterNamespace:  true\n  AfterObjCDeclaration: true\n  AfterStruct:     true\n  AfterUnion:      true\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Custom\nBreakBeforeInheritanceComma: true\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: BeforeComma\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     120\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 3\nContinuationIndentWidth: 2\nCpp11BracedListStyle: false\nDerivePointerAlignment: false\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: false\nForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]\nIncludeCategories:\n  - Regex:           '^\"(llvm|llvm-c|clang|clang-c)/'\n    Priority:        2\n  - Regex:           '^(<|\"(gtest|isl|json)/)'\n    Priority:        3\n  - Regex:           '.*'\n    Priority:        1\nIncludeIsMainRegex: '$'\nIndentCaseLabels: true\nIndentWidth:     3\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: true\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: All\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: true\nObjCSpaceBeforeProtocolList: false\nPenaltyBreakAssignment: 2\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 200\nPointerAlignment: Middle\nReflowComments:  true\nSortIncludes: CaseSensitive\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard: c++11\nTabWidth:        3\nUseTab:          Never\n...\n\n\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 1.6728515625,
          "content": "---\nChecks:                 '*,-google-default-arguments,-fuchsia-*,-zircon-*,-abseil-*,-llvmlibc-*'\nWarningsAsErrors:       ''\nHeaderFilterRegex:      ''\nAnalyzeTemporaryDtors:  false\nFormatStyle:            file\nCheckOptions:\n  - key:                cert-dcl16-c.NewSuffixes\n    value:              'L;LL;LU;LLU'\n  - key:                cppcoreguidelines-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic\n    value:              '1'\n  - key:                google-readability-braces-around-statements.ShortStatementLines\n    value:              '1'\n  - key:                google-readability-function-size.StatementThreshold\n    value:              '800'\n  - key:                google-readability-namespace-comments.ShortNamespaceLines\n    value:              '10'\n  - key:                google-readability-namespace-comments.SpacesBeforeComments\n    value:              '2'\n  - key:                modernize-loop-convert.MaxCopySize\n    value:              '16'\n  - key:                modernize-loop-convert.MinConfidence\n    value:              reasonable\n  - key:                modernize-loop-convert.NamingStyle\n    value:              CamelCase\n  - key:                modernize-pass-by-value.IncludeStyle\n    value:              llvm\n  - key:                modernize-replace-auto-ptr.IncludeStyle\n    value:              llvm\n  - key:                modernize-use-nullptr.NullMacros\n    value:              'NULL'\n  - key:                misc-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic\n    value:              '1'\n  - key:                modernize-use-default-member-init.UseAssignment\n    value:              '1'\n...\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.1806640625,
          "content": "__\nbuilds\nbuild\ninstallers\n.DS_Store\nCMakeLists.txt.user*\nCMakeFiles\nCMakeCache*\ncmake-build-*\nCPackConfig.cmake\nCPackSourceConfig.cmake\ncmake_install.cmake\ncmake_uninstall.cmake\n/translations\n/CMakeDoxyfile.in\n/CMakeDoxygenDefaults.cmake\n/Doxyfile\nStellarium.bat\nstellarium.iss\nREADME\ndoc/qt.tag\ndoc/stellarium.pod\ndoc/stellarium.1\nlocale\nutil/locations-editor/Makefile\nutil/locations-editor/locations-editor\nutil/locations-editor/locations-editor.pro.user\nutil/copy-translations.bat\nplugins/Observability/doc\ndata/default_config.ini\ndata/default_cfg.ini\ndata/Info.plist\nsrc/external/config.h\nsrc/external/indiversion.h\nsrc/stellarium\nMakefile\n!guide/Makefile\nguide/*.aux\nguide/*.log\nguide/*.bbl\nguide/*.blg\nguide/*.ilg\nguide/*.idx\nguide/*.toc\nguide/*.ind\nguide/*.ptc\nguide/*.bcf\nguide/*.xml\nguide/*.xref\nguide/*.dvi\nguide/*.4tc\nguide/*.tmp\nguide/*.synctex.gz\nguide/version.tex\nguide/guide.pdf\nguide/SUG.pdf\nguide/pictures/*.xbb\nguide/pictures/GZ_*.png\nguide/pictures/gz_*.png\nguide/pictures/P_BSC*.png\nguide/html/*\nui_*.h\nqrc_*.cpp\n*_autogen\n* - Kopie.*\n*.a\n*.~\n*~\n*.lnk\n# Ignore intellij project files\n*.iml\n.scannerwork\n.idea\n# Ignore KDevelop project files\n.kdev4\n# Ignore Eclipse project files\n.project\n"
        },
        {
          "name": ".whitesource",
          "type": "blob",
          "size": 0.21875,
          "content": "{\n  \"generalSettings\": {\n    \"shouldScanRepo\": true\n  },\n  \"checkRunSettings\": {\n    \"displayMode\": \"diff\",\n    \"vulnerableCheckRunConclusionLevel\": \"failure\"\n  },\n  \"issueSettings\": {\n    \"minSeverityLevel\": \"MEDIUM\"\n  }\n}\n"
        },
        {
          "name": "BACKERS.md",
          "type": "blob",
          "size": 0.7666015625,
          "content": "# Our backers & Sponsors\n\nSince Feb 2019, the Stellarium team accept donations through our [Open Collective page](https://opencollective.com/stellarium).\nThe money will be used transparently to pay for development, servers and other project-related costs.\n\nThe Stellarium team gives a huge thanks to our backers:\n\n## Bronze Sponsors:\n\n - Raul Monraz\n - n8n GmbH\n\n## Silver Sponsors:\n\n[![BairesDev](https://www.stellarium.org/img/logos/BairesDev.png)](https://www.bairesdev.com/sponsoring-open-source-projects/)\n[![dotcom-monitor](https://www.stellarium.org/img/logos/DCM-Logo-54.png)](https://www.dotcom-monitor.com/sponsoring-open-source-projects/)\n[![SSSTwitter](https://stellarium.org/img/logos/SSSTwitter.png)](https://opencollective.com/ssstwitter)\n\n## Gold sponsors:\n\nNone yet!\n\n"
        },
        {
          "name": "BUILDING.md",
          "type": "blob",
          "size": 24.5517578125,
          "content": "# Building Stellarium\n\nHello, and thank you for your interest to Stellarium! \n\nIf you want to test a prebuilt beta version, take a look at https://github.com/Stellarium/stellarium-data/releases/tag/weekly-snapshot\n\n## Why build from source?\n\nEach time Stellarium is released, the source code is released in Github's \npackaging system. Building source code that is released in this way \nshould give you a working copy of Stellarium which is functionally \nidentical to the binaries for that release.\n\nIt is also possible to get the source code \"in development\" using Git. \nThis may contain new features or bugfixes which have been implemented since the last \nrelease of Stellarium, so it's often more fun.\n\n**Warning:** Git versions of the Stellarium source code are work in progress, \nand as such may produce an unstable program, may not work at all, or may \n(rarely) not even compile.\n\n## Integrated Development Environment (IDE)\n\nIf you plan to develop Stellarium, it is highly recommended to utilize \nan IDE. You can use any IDE of your choice, but QtCreator is recommended \nas best suited for Qt development.\n\nInside QtCreator, you open the `CMakeLists.txt` inside Stellarium's source \ndirectory. Default settings create a debug build with all useful plugins. \nIn the Projects tab (button in vertical left bar), you should at least \nconfigure Debug and Release builds.\n\nDo not forget to load the [Code Style File](https://stellarium.org/files/ide/stellarium-ide.xml) \n([TAR.GZ](https://stellarium.org/files/ide/stellarium-ide.xml.tgz)) in \nExtras/Settings/C++/Coding style (Import... button).\n\n## Prerequisite Packages\n\nTo build and develop Stellarium, several packages may be required from \nyour distribution. Here's a list.\n\n### Required dependencies\n\n- A C++ compiler able to compile C++17 code ([GCC](https://gcc.gnu.org/) 7 or later, \n  Clang 6 or later, MSVC 2017 (15.7) or later; MSVC2019 required for Qt6)\n- [CMake](https://www.cmake.org/) 3.16.0 or later - buildsystem used by many open source projects\n- [Qt Framework](https://www.qt.io/) 5.12.0/6.2.0 or later. We recommend 5.15.2 or 6.5.1\n- [OpenGL](https://www.opengl.org/) - graphics library\n- [Zlib](https://www.zlib.net) - compression library\n\n### Dependencies\n\n### Optional dependencies\n\n- [Git](https://git-scm.com) - required for obtaining latest changes in source code\n- [gettext](https://www.gnu.org/software/gettext/) - required for developers for extract of lines for translation\n- [Doxygen](http://doxygen.org/) - if you want to build the API documentation you will need this\n- [Graphviz](http://www.graphviz.org/) - required to build the API documentation and include fancy class diagrams\n- [libgps](https://gpsd.gitlab.io/gpsd/index.html) - if you want to build Stellarium with GPS support (Linux/macOS only)\n\n### Optionally bundled dependencies\n\nIf these are not found on the system, they are downloaded automatically.\nSee [MAINTAINER BUSINESS](MAINTAINER_BUSINESS.md) for details.\n\n- [INDI](https://indilib.org)\n- [QXlsx](https://github.com/QtExcel/QXlsx)\n- [ShowMySky](https://10110111.github.io/CalcMySky/), can be disabled with\n  `-DENABLE_SHOWMYSKY=OFF` CMake parameter. If enabled (the default), it also requires `libglm-dev libeigen3-dev`.\n\n### Installing these packages\n\nTo install all of these, use the following commands:\n\n#### Debian / Ubuntu\n\n##### Qt5\n\n```\nsudo apt install build-essential cmake zlib1g-dev libgl1-mesa-dev libdrm-dev gcc g++ \\\n                 graphviz doxygen gettext git libgps-dev \\\n                 gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-pulseaudio \\\n                 gstreamer1.0-libav gstreamer1.0-vaapi qtbase5-dev \\\n                 qtbase5-private-dev qtscript5-dev libqt5svg5-dev qttools5-dev-tools \\\n                 qttools5-dev libqt5opengl5-dev qtmultimedia5-dev libqt5multimedia5-plugins \\\n                 libqt5serialport5 libqt5serialport5-dev qtpositioning5-dev libqt5positioning5 \\\n                 libqt5positioning5-plugins qtwebengine5-dev libqt5charts5-dev \\\n                 libexiv2-dev libnlopt-cxx-dev libtbb-dev libtbb2 libqt5concurrent5 \n```\n\n##### Qt6\n\nUbuntu 22.04 comes with Qt5.15 and Qt6.2. To build with Qt6:\n\n```\nsudo apt install build-essential cmake zlib1g-dev libgl1-mesa-dev libdrm-dev libglx-dev \\\n                 gcc g++ graphviz doxygen gettext git libxkbcommon-x11-dev libgps-dev \\\n                 gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-pulseaudio \\\n                 gstreamer1.0-libav gstreamer1.0-vaapi \\\n                 qt6-base-private-dev qt6-multimedia-dev qt6-positioning-dev qt6-tools-dev \\\n                 qt6-tools-dev-tools qt6-base-dev-tools qt6-qpa-plugins qt6-image-formats-plugins \\\n                 qt6-l10n-tools qt6-webengine-dev qt6-webengine-dev-tools libqt6charts6-dev \\\n                 libqt6charts6 libqt6opengl6-dev libqt6positioning6-plugins libqt6serialport6-dev \\\n                 qt6-base-dev libqt6webenginecore6-bin libqt6webengine6-data \\\n                 libexiv2-dev libnlopt-cxx-dev libqt6concurrent6 \n```\n\n\n#### Fedora / CentOS / AlmaLinux / Rocky Linux\n\nNote: This should work on RHEL/CentOS/AlmaLinux/Rocky Linux 8 or later and recent versions of Fedora. To build on CentOS 7 or older,\nsee [Linux with outdated Qt](#linux-with-outdated-qt).\n\n```\nsudo dnf install cmake gcc graphviz doxygen gettext git \\\n                 qt5-qtbase-devel qt5-qtbase-private-devel qt5-qttools-devel qt5-qtscript-devel \\\n                 qt5-qtsvg-devel qt5-qtmultimedia-devel qt5-qtserialport-devel qt5-qtlocation-devel \\\n                 qt5-qtcharts-devel qt5-qtwebengine-devel exiv2-devel\n```\n\n#### Linux with outdated Qt\n\nStellarium tracks the recent Qt releases fairly closely and as such many Linux distribution repositories do \nnot contain an up-to-date enough version for building Stellarium. In the case of Ubuntu, the ''backports'' \nrepository is often good enough, but there may be a need to install it \"outside\" your package manager. \nHere's how.\n\nThe Qt development team provides binary installers. If you want to build Qt yourself from source, this is \nfine but it will take a ''long'' time. We recommend the following procedure for manually installing the \nlatest Qt (required: 5.12 or above at the moment):\n- Download the Linux/X11 package from [Qt Company](http://www.qt.io/download-open-source/). Choose 32/64 bit \n  as appropriate.\n- Install it to `/opt/Qt5`\n- When you want to build Stellarium, execute these commands to set up the environment so that the new Qt \n  is used (for 64-bit package):\n```\nexport QTDIR=/opt/Qt5/5.12.12/gcc_64\nexport PATH=$QTDIR/bin:$PATH\nexport LD_LIBRARY_PATH=$QTDIR/lib:$LD_LIBRARY_PATH\n```\n- After installation, you should write a script which sets `LD_LIBRARY_PATH` and then calls Stellarium:\n```\n#!/bin/sh\nexport QTDIR=/opt/Qt5/5.12.12/gcc_64\nexport LD_LIBRARY_PATH=$QTDIR/lib:$LD_LIBRARY_PATH\n./stellarium\n```\n\n#### Linux without QtWebEngine\n\nOn some distributions (known for ARM systems, like Raspberry OS (Raspbian)) there is no QtWebEngine. The \nCMake script will check installed `qtwebengine5` package and if it is not found emits a warning, but \nStellarium will be built without QtWebEngine support. The result is shown in the system web browser.\n\n#### MacOS\n\n- Install the latest version of [Apple's Developer Tools](https://developer.apple.com/xcode/). \n- Install [Homebrew](https://brew.sh/). \n- Install required packages:\n  ```\n  brew install cmake git gettext\n  brew link gettext --force\n  ```\n\n  On MacOS 11 and above, if\n  ```\n  brew link gettext --force\n  ```\n\n  failed due to :\n  ```\n  Linking /usr/local/Cellar/gettext/0.21...\n  Error: Could not symlink include/autosprintf.h\n  /usr/local/include is not writable.\n  ```\n  Try the following:\n\n  ```\n  sudo mkdir /usr/local/include\n  sudo chown -R $(whoami) $(brew --prefix)/*\n\n  ```\n\n- Install latest Qt 5:\n  ```\n  brew install qt@5\n  ```\n- Add Qt to your PATH environment variable  \n  Intel Mac: add the following line to `~/.bash_profile` (Bash) or `~/.zprofile` (Zsh):\n  ```\n  export PATH=/usr/local/opt/qt@5/bin:$PATH\n  ```\n  ARM-based (Apple Silicon) Mac: add the following line to `~/.bash_profile` (Bash) or `~/.zprofile` (Zsh):\n  ```\n  export PATH=/opt/homebrew/opt/qt@5/bin:$PATH\n  ```\n\nYou may using the distribution from the Qt Company to install the [latest stable version](https://www.qt.io/download-qt-installer)\nof Qt. In this case adding Qt to your PATH environment variable will to adding to your `~/.bash_profile` (Bash) or `~/.zprofile` (Zsh)\nfile the following line (for example we installed Qt 5.12.12):\n```\nexport PATH=~/Qt/5.12/clang_64/bin:$PATH\n```\n\n#### MacOS without QtWebEngine\n\nOn ARM-based (Apple Silicon) Macs, there is no support for QtWebEngine or it buggy (QtWebEngine in Qt 5.15.2). \nThe CMake script will check installed `QtWebEngine` libraries and if then is not in system then \nStellarium will build without QtWebEngine support. The result is shown in the system web browser.\n\n#### Windows\n\n- Install the [Microsoft Visual Studio Community 2019 or 2022](https://visualstudio.microsoft.com/downloads/) \n  (or \"better\" - e.g. Professional) from Microsoft Website. Qt 5.15 requires MSVC2019.\n- To get the source code of Stellarium you need to install some git environment. \n  [Git for Windows](https://git-scm.com/download/win) seems ok, or the Git Bash and Git GUI, whatever \n  seems suitable for you. But it is not necessary.\n- Get the [latest version of Qt from Qt Company](http://www.qt.io/download-open-source/). We recommend \n  to use Qt 5.15.2 or, better, Qt6. For Qt5 you must select Qt Script and msvc2019 among so many checkboxes.\n\nAfter installing all required libraries and tools you should configure the build environment.\n\nAdd `C:\\Qt\\Qt5.15.2` to your `PATH` variable - you should add string `C:\\Qt\\Qt5.15.2\\msvc2019;C:\\Qt\\Qt5.15.2\\msvc2019\\bin` \nfor 32-bit or `C:\\Qt\\Qt5.15.2\\msvc2019_64;C:\\Qt\\Qt5.15.2\\msvc2019_64\\bin` for 64-bit to `PATH` variable.\n(Replace the version numbers of Qt and the version of Visual Studio (2017/2019) with the version that you \nhave installed)\nIf you also want to run the ShowMySky sky model, add another directory to the PATH variable. This depends on your build environment. \nIf builds are made into `D:\\StelDev\\GIT\\build-stellarium-Desktop_Qt_6_5_1_MSVC2019_64bit-Release\\`, this would be \n`D:\\StelDev\\GIT\\build-stellarium-Desktop_Qt_6_5_1_MSVC2019_64bit-Release\\_deps\\showmysky-qt6-build\\ShowMySky`\n\n**ANGLE issues:**\n\n- The ANGLE library for Qt5-based builds should be taken from Qt 5.6 (all later versions don't work) and can be downloaded \n- for [x64](https://github.com/Stellarium/stellarium-data/releases/download/qt-5.6/libGLES-x64.zip) \n- and [x32](https://github.com/Stellarium/stellarium-data/releases/download/qt-5.6/libGLES-Win32.zip). \n- (Don't ask us why. Find a solution!)\n\n**WSL: libQt5Core.so.5 not found**\n\nFresh installations of WSL may have issues not finding libQt5Core.so.5. Run\n```\nsudo strip --remove-section=.note.ABI-tag /usr/lib/x86_64-linux-gnu/libQt5Core.so.5\n```\n(https://superuser.com/questions/1347723/arch-on-wsl-libqt5core-so-5-not-found-despite-being-installed)\n\n**Known limitations with Qt 5.15.x:**\n\n- Qt 5.15.0 and 5.15.1 have a buggy `lconvert` and should not be used. Also `lconvert` on Qt 5.15.2 \nstill allocates GBs of memory for translation of a few MBs of strings, if it can get it.\n\n**Note:** After changes to the `PATH` variable you should reboot the computer to apply those changes.\n\n#### Windows (static)\n\nYou can build a static version using MSVC-static kit (for example we installed Qt 5.15.12 with MSVC2019):\n\nTo prepare a static kit, prepare src package of Qt 5.15.12, and configure compilation tool (Python, Ruby, \nPerl and Visual Studio 2019). Enter src folder:\n\n```\nconfigure.bat -static -prefix \"D:\\Qt\\msvc2019_static\" -confirm-license -opensource  -debug-and-release -platform win32-msvc  -nomake examples -nomake tests  -plugin-sql-sqlite -plugin-sql-odbc -qt-zlib -qt-libpng -qt-libjpeg -opengl desktop -mp\nnmake\nnmake install\n```\n\nWhen finishing compilation, configure kit in Qt Creator. Clone Kit \"Desktop Qt 5.15.12 MSVC\" to \"Desktop Qt \n5.15.12 MSVC (static)\". Then configure CMake Generator with NMake Makefiles JOM + Extra generator: CodeBlocks.\n\nFinally, just open CMakeLists.txt in Qt Creator and build it with MSVC-static kit.\n\n## Getting the source code\n\nWe recommend using a copy of our git repository to build your own installation \nas it contains some dependencies required for building.\n\n### Extract the tarball or ZIP containing the source code\n\nYou can find the source code from\n\n```\nhttps://github.com/Stellarium/stellarium/releases\n```\n\nDo this command in a terminal (if you prefer, you might use arK or some other graphical archive tool): \n\n```\n$ tar zxf stellarium-24.4.tar.gz\n```\nYou should now have a directory `stellarium-24.4` with the source code in it.\n\n\n### Clone project from GitHub\n\nTo create the copy install git from your OS distribution repository or from \nhttps://git-scm.com/.\n\nThe git repository has become quite large (about 2GB). You do not need the complete \nhistory to build or continue development, but can try a *blobless clone* \n(https://github.blog/2020-12-21-get-up-to-speed-with-partial-clone-and-shallow-clone/)\n\n```\n$ git clone --filter=blob:none https://github.com/Stellarium/stellarium.git\n$ cd stellarium\n```\n\nElse, to get the full repository, execute the following commands:\n\n```\n$ git clone https://github.com/Stellarium/stellarium.git\n$ cd stellarium\n```\n\nIf you ever want to contribute from a Windows environment, you *must* configure git to use Unix-style line endings. \n(The --global applies to all projects.)\n(https://docs.github.com/en/get-started/getting-started-with-git/configuring-git-to-handle-line-endings)\n\n```\n$ git config [--global] core.autocrlf true\n```\n\n### Download source code from GitHub\n\nYou can [download](https://github.com/Stellarium/stellarium/archive/master.zip) fresh source code from \nGitHub by web.\n\n#### Windows specifics\n\nOn Windows save the file (`master.zip` or `stellarium-24.4.tar.gz`) to the `C:/Devel` directory as \nexample. You will need a decompression program installed in Windows, for example [7-Zip](http://www.7-zip.org/). \nThe root of the source tree will be `C:/Devel/stellarium` for simplicity.\n\n## Building\n\nAssuming you have collected all the necessary libraries, here's\nwhat you need to do to build and run Stellarium:\n\n### On Linux\n```\n$ mkdir -p build/unix\n$ cd build/unix\n$ cmake -DCMAKE_INSTALL_PREFIX=/opt/stellarium ../.. \n$ make -jN\n```\n\n### On macOS\n```\n$ mkdir -p build/macosx\n$ cd build/macosx\n$ cmake ../.. \n$ make -jN\n```\n\n### On Windows\n```\n$ md build\n$ cd build\n$ md msvc\n$ cd msvc\n$ cmake -DCMAKE_INSTALL_PREFIX=c:\\stellarium-bin -G \"Visual Studio 16 2019\" ../..\n$ cmake --build . --  /maxcpucount:N /nologo\n```\n\nFor Visual Studio 2017:\n```\n$ cmake -DCMAKE_INSTALL_PREFIX=c:\\stellarium-bin -G \"Visual Studio 15 2017 Win64\" ../..\n```\n\nInstead of `N` in `-j` (`N` in `/maxcpucount`) pass a number of CPU cores you want to use during\na build.\n\nIf you have Qt5 installed using official Qt installer, then pass parameter\n`CMAKE_PREFIX_PATH` to cmake call used to configure Stellarium, e.g.\n\n```\n$ cmake -DCMAKE_PREFIX_PATH=/opt/Qt5 ../..\n```\n\nWhen you are using QtCreator IDE, build directories are created by the IDE. It appears that on Windows, \na directory name is proposed, but you have to create it manually. \n\nYou can keep your copy up-to-date by typing `git pull --rebase` in ~/stellarium. \nFeel free to send patches to our mailing list stellarium@googlegroups.com\n\n### Supported CMake parameters\n\nList of supported parameters (passed as `-DPARAMETER=VALUE`):\n\n Parameter                           | TYPE   | Default | Description\n-------------------------------------| -------|---------|-----------------------------------------------------\n| CMAKE_INSTALL_PREFIX               | path   | *       | Prefix where to install Stellarium\n| CMAKE_PREFIX_PATH                  | path   |         | Additional path to look for libraries\n| CMAKE_BUILD_TYPE                   | string | Release | Build type of Stellarium\n| CMAKE_OSX_ARCHITECTURES            | string | arm64;x86_64 | macOS architecture**\n| CMAKE_OSX_DEPLOYMENT_TARGET        | string | 11.0    | Minimum macOS deployment version**\n| OPENGL_DEBUG_LOGGING               | bool   | OFF     | Enable to log OpenGL information using the GL_KHR_debug extension/QOpenGLLogger\n| ENABLE_QT6                         | bool   | ON      | Enable building Qt6-based Stellarium\n| ENABLE_NLS                         | bool   | ON      | Enable interface translation\n| ENABLE_SHOWMYSKY                   | bool   | ON      | Enable support for ShowMySky module that implements a realistic atmosphere model\n| ENABLE_GPS                         | bool   | ON      | Enable GPS support\n| ENABLE_LIBGPS                      | bool   | ON      | Enable GPS support with libGPS library (N/A on Windows)\n| ENABLE_MEDIA                       | bool   | ON      | Enable sound and video support\n| ENABLE_XLSX                        | bool   | ON      | Enable support for XLSX (Excel) files\n| ENABLE_SCRIPTING                   | bool   | ON      | Enable the scripting feature\n| ENABLE_RELEASE_BUILD               | bool   | OFF     | This option flags the build as an official release\n| ENABLE_TESTING                     | bool   | OFF     | Enable unit tests\n| ENABLE_QTWEBENGINE                 | bool   | ON      | Enable QtWebEngine module support if it installed\n| ENABLE_INDI                        | bool   | ON      | Activate support for INDI client in Telescope Control plugin\n| USE_BUNDLED_QTCOMPRESS             | bool   | ON      | Use bundled version of qtcompress\n| USE_PLUGIN_ANGLEMEASURE            | bool   | ON      | Enable building the Angle Measure plugin\n| USE_PLUGIN_ARCHAEOLINES            | bool   | ON      | Enable building the ArchaeoLines plugin\n| USE_PLUGIN_CALENDARS               | bool   | ON      | Enable building the Calendars plugin\n| USE_PLUGIN_EQUATIONOFTIME          | bool   | ON      | Enable building the Equation Of Time plugin\n| USE_PLUGIN_EXOPLANETS              | bool   | ON      | Enable building the Exoplanets plugin\n| USE_PLUGIN_HELLOSTELMODULE         | bool   | OFF     | Enable building the HelloStelModule plugin (example of simple plugin)\n| USE_PLUGIN_LENSDISTORTIONESTIMATOR | bool   | ON      | Enable building the Lens Distortion Estimator plugin\n| USE_PLUGIN_METEORSHOWERS           | bool   | ON      | Enable building the Meteor Showers plugin\n| USE_PLUGIN_MISSINGSTARS            | bool   | ON      | Enable building the Missing Stars plugin\n| USE_PLUGIN_NAVSTARS                | bool   | ON      | Enable building the Navigational Stars plugin\n| USE_PLUGIN_NOVAE                   | bool   | ON      | Enable building the Bright Novae plugin\n| USE_PLUGIN_OBSERVABILITY           | bool   | ON      | Enable building the Observability Analysis plugin\n| USE_PLUGIN_OCULARS                 | bool   | ON      | Enable building the Oculars plugin\n| USE_PLUGIN_OCULUS                  | bool   | OFF     | Enable building the Oculus plugin (support for Oculus Rift - outdated)\n| USE_PLUGIN_ONLINEQUERIES           | bool   | ON      | Enable building the Online Queries plugin\n| USE_PLUGIN_POINTERCOORDINATES      | bool   | ON      | Enable building the Pointer Coordinates plugin\n| USE_PLUGIN_PULSARS                 | bool   | ON      | Enable building the Pulsars plugin\n| USE_PLUGIN_QUASARS                 | bool   | ON      | Enable building the Quasars plugin\n| USE_PLUGIN_REMOTECONTROL           | bool   | ON      | Enable building the Remote Control plugin\n| USE_PLUGIN_REMOTESYNC              | bool   | ON      | Enable building the Remote Sync plugin\n| USE_PLUGIN_SATELLITES              | bool   | ON      | Enable building the Satellites plugin\n| USE_PLUGIN_SCENERY3D               | bool   | ON      | Enable building the 3D Scenery plugin\n| USE_PLUGIN_SIMPLEDRAWLINE          | bool   | OFF     | Enable building the SimpleDrawLine plugin (example of simple graphics plugin)\n| USE_PLUGIN_SOLARSYSTEMEDITOR       | bool   | ON      | Enable building the Solar System Editor plugin\n| USE_PLUGIN_SUPERNOVAE              | bool   | ON      | Enable building the Historical Supernovae plugin\n| USE_PLUGIN_TELESCOPECONTROL        | bool   | ON      | Enable building the Telescope Control plugin\n| USE_PLUGIN_TEXTUSERINTERFACE       | bool   | ON      | Enable building the Text User Interface plugin\n| USE_PLUGIN_VTS                     | bool   | OFF     | Enable building the Vts plugin (allow to use Stellarium as a plugin in CNES VTS)\n\nNotes:\n \\* `/usr/local` on Unix-like systems, `C:\\Program Files` or `C:\\Program Files (x86)`\n   on Windows depending on OS type (32 or 64 bit) and build configuration.\n \\** Default values for Qt6 environment on macOS\n\n## Test-run compiled program without installing\n\nAfter compilation, you may run the program when you are in the right directory. \n\n### Linux\nAssuming the stellarium sources are in DEV/stellarium and build in DEV/stellarium/build/unix\n```\ncd DEV/stellarium\n./build/unix/src/stellarium\n```\n\n### Windows\n\nMost users will work with QtCreator which sets its own paths for debug and release builds. \nRunning with the designated buttons (green arrow) from inside QtCreator should work. \nYou can also create a link for the executable in the src subdirectory of the build directory. \nMove this link to the source directory and edit its properties to run inside the source directory. \nThen you can double-click this link, or even place it in your task bar.\n\n## Code testing\n\nThere are several test programs in the repository. To build them, define `-DENABLE_TESTING=ON` (or \n`-DENABLE_TESTING=1`), or configure cmake in QtCreator's Projects tab.\n\nThen configure a Debug build and select a test... application to be executed.\n\nPlease try to test your changes before committing to master. Our automated \n[GitHub Actions](https://github.com/Stellarium/stellarium/actions/workflows/ci.yml) and \n[AppVeyor](https://ci.appveyor.com/project/alex-w/stellarium) builds will signal failure when \ntests don't complete.\n\nTo execute all unit tests in terminal please run:\n```\n$ make test\n```\nor \n```\n$ ctest --output-on-failure\n```\n\n## Packaging\n\nOK, you have built the program from source code and now you may want to install the executable \nfile into your operating system or create a package for distribution.\n\nTo install the executable file (with necessary libraries and data files) into the directory \ndefined in parameter `CMAKE_INSTALL_PREFIX`, run:\n\n```\n$ sudo make install\n```\n\n### Linux specifics\n\nTo create a source packages on linux you need run:\n```\n$ make package_source\n```\n\nTo create a binary package (TGZ) on linux you need run:\n```\n$ make package\n```\n\nAfter building of TGZ binary package you may create a DEB or RPM package also: \n```\n$ cpack -G DEB\n```\nor \n```\n$ cpack -G RPM\n```\n\n### macOS specifics\n\n**IMPORTANT**: you should delete or move aside the old `Stellarium.app` before each new build:\n```\n$ rm -r Stellarium.app\n```\n\nThen build the macOS application:\n```\n$ make install\n```\n\nYou'll find now an application `Stellarium.app` with the correct icon in the build directory.\n\nOn ARM-based (Apple Silicon) Macs, ARM application need to be code signed. To sign the application with an ad-hoc signature:\n```\ncodesign --force --deep -s - Stellarium.app\n```\n\nTo create the DMG file (Apple Disk Image) run:\n```\n$ mkdir Stellarium\n$ cp -r Stellarium.app Stellarium\n$ hdiutil create -format UDZO -srcfolder Stellarium Stellarium.dmg\n```\n\n### Windows specifics\n\nTo create a Windows installer you need to have installed [Inno Setup](http://www.jrsoftware.org/).\n\nIf you have followed all the above procedures the current build will generate the necessary \n`stellarium.iss` file in `C:\\Devel\\stellarium\\builds\\msvc`.\n\nDouble click on it, then from the menu bar \"build-compile\". It will build the stellarium installer \npackage and place it in a folder of the stellarium source tree root folder `installers`. So you \ncan find it in `C:\\Devel\\stellarium\\stellarium\\installers`\n\nOr you can use cmake command for create an installer:\n```\n$ cmake --build c:\\devel\\stellarium\\build\\msvc --target stellarium-installer\n```\n\n### Supported make targets\n\nMake groups various tasks as \"targets\". Starting make without any arguments causes make to build \nthe default target - in our case, building Stellarium, its tests, the localization files, etc.\n Target          | Description\n-----------------|----------------------------------------------------------------------------------------------------\n| install        | Installation of all binaries and related files to the directory determined by `CMAKE_INSTALL_PREFIX`\n| test           | Launch the suite of test executables\n| apidoc         | Generate an API documentation\n| package_source | Create a source package for distributions\n| package        | Create a binary packages for distributions on linux/UNIX\n| installer      | Create a binary packages for distributions on Windows\n\nThanks!\n\n\\- *The Stellarium development team*\n"
        },
        {
          "name": "CHECKLIST.yml",
          "type": "blob",
          "size": 0.890625,
          "content": "paths:\n  \"src/**/*.cpp\":\n    - Are possibly unused includes removed?\n  \"guide/**\":\n    - Did you remember to update screenshots to match new updates?\n    - Did you remember to grammar check in changed part of documentation?\n  \"skycultures/**\":\n    - Did you remember to update `po/stellarium-skycultures/POFILES.in` file respectively to changes in sky cultures?\n    - Did you remember to update `skycultures/CMakeLists.txt` and `skycultures/YOUR-SKYCULTURE-FOLDER/CMakeLists.txt` files respectively to changes in sky cultures?\n    - Did you remember to update `util/skycultures/po4a.config` file respectively to changes in sky cultures?\n    - Did you remember to define classification parameter in sky cultures (see `info.ini` file)?\n    - Did you remember to define license parameter in sky cultures (see `info.ini` file)?\n    - Did you remember to define region parameter in sky culture (see `info.ini` file)?\n"
        },
        {
          "name": "CITATION",
          "type": "blob",
          "size": 0.431640625,
          "content": "To cite Stellarium in publications use:\n\n  Stellarium contributors (2024). Stellarium v24.4 Astronomy Software. \n  URL https://stellarium.org/.\n  DOI: 10.5281/zenodo.14543500\n\nA BibTeX entry for LaTeX users is\n\n.. code-block:: latex\n\n  @Stellarium{,\n    title = {{Stellarium} v24.4 Astronomy Software},\n    author = {{Stellarium contributors}},\n    year = {2024},\n    url = {https://stellarium.org/},\n    doi = {10.5281/zenodo.14543500},\n  }\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 1.728515625,
          "content": "# This CITATION.cff file was generated with cffinit.\n# Visit https://bit.ly/cffinit to generate yours today!\n\ncff-version: 1.2.0\ntitle: Stellarium\nmessage: >-\n  If you use this software, please cite it using the\n  metadata from this file.\ntype: software\nauthors:\n  - given-names: Fabien\n    family-names: Chéreau\n    affiliation: Stellarium Labs\n  - given-names: Alexander\n    family-names: Wolf\n    affiliation: Altai State Pedagogical University\n    orcid: 'https://orcid.org/0000-0002-2047-089X'\n  - family-names: Zotti\n    given-names: Georg\n    affiliation: >-\n      Ludwig Boltzmann Institute for Archaeological\n      Prospection and Virtual Archaeology\n    orcid: 'https://orcid.org/0000-0002-8152-0408'\n  - given-names: Susanne\n    family-names: Hoffmann\n    affiliation: >-\n      Friedrich Schiller University - Michael Stifel Center\n      Jena\n    orcid: 'https://orcid.org/0000-0001-5384-7545'\n  - given-names: Ruslan\n    family-names: Kabatsayev\n  - given-names: Worachate\n    family-names: Boonplod\n  - family-names: Chéreau\n    given-names: Guillaume\n    affiliation: Noctua Software\n  - family-names: Bernardi\n    given-names: Martín\nidentifiers:\n  - type: doi\n    value: 10.5281/zenodo.8377210\nrepository-code: 'https://github.com/Stellarium/stellarium'\nurl: 'https://stellarium.org/'\nrepository-artifact: >-\n  https://github.com/Stellarium/stellarium/releases/tag/v24.4\nabstract: >-\n  Stellarium is a free open source planetarium for your\n  computer. It shows a realistic sky in 3D, just like what\n  you see with the naked eye, binoculars or a telescope.\nkeywords:\n  - stellarium\n  - astronomy\n  - planetarium\n  - universe\n  - sky\nlicense: GPL-2.0-or-later\ncommit: a4e4a7416ebd411658ac4e284cde17deacaf8b82\nversion: '24.4'\ndate-released: '2024-12-22'\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 48.4560546875,
          "content": "CMAKE_MINIMUM_REQUIRED(VERSION 3.16)\n# CMake 3.20+ is required if x-compiling for Windows on ARM\nMESSAGE(STATUS \"Found CMake ${CMAKE_VERSION}\")\n\n# Fix behavior of CMAKE_CXX_STANDARD and CMAKE_C_STANDARD when targeting macOS.\nIF(POLICY CMP0025)\n     CMAKE_POLICY(SET CMP0025 NEW)\nENDIF()\n# Potential dangerous comparison of variables. Details: https://cmake.org/cmake/help/v3.1/policy/CMP0054.html\nIF(POLICY CMP0054)\n     CMAKE_POLICY(SET CMP0054 NEW)\nENDIF()\nIF(POLICY CMP0071)\n     CMAKE_POLICY(SET CMP0071 NEW)\nENDIF()\nIF(POLICY CMP0175)\n     CMAKE_POLICY(SET CMP0175 OLD)\nENDIF()\n\n# warn about deprecated stuff so that we may try fixing it\nSET(CMAKE_WARN_DEPRECATED 1)\n\nSET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)\n\n########### Project name ###########\nPROJECT(Stellarium C CXX)\n\nSET(STELLARIUM_RELEASE_BUILD 0 CACHE BOOL \"Set 1 to build as an official release (0 for development snapshots).\")\n\n########### Detect Qt version\nSET(ENABLE_QT6 1 CACHE BOOL \"Whether to try building with Qt6. If Qt6 is not found, Qt5 will be used.\")\nIF(ENABLE_QT6)\n    FIND_PACKAGE(Qt6 COMPONENTS Core QUIET)\nENDIF()\nif (NOT Qt6_FOUND)\n    FIND_PACKAGE(Qt5 REQUIRED COMPONENTS Core)\nENDIF()\n\n# Activate this to error on all things deprecated in 5.15\n#add_compile_definitions(\"QT_DISABLE_DEPRECATED_BEFORE=0x050F00\")\n\n# Version of Stellarium has format YY.V.YD, where:\n# -- YY (MAJOR) - two last digits of the year of release\n# -- V  (MINOR) - version of the release (0 is used before first release)\n# -- YD (PATCH) - 0 for releases and the day of the current year for snapshots\n# Example: first release in year 2023 has version 23.1.0 and short (public) version 23.1, series 23.0\n# Note: Use integer versions instead of strings for easier handling if required\nSET(STELLARIUM_MAJOR 25)\n# Number of the release (0 is used before first release)\nSET(STELLARIUM_MINOR 0)\nIF(STELLARIUM_RELEASE_BUILD)\n    ADD_DEFINITIONS(-DSTELLARIUM_RELEASE_BUILD)\n    SET(CMAKE_BUILD_TYPE Release)\n    SET(STELLARIUM_PATCH 0)\nELSE()\n    ########### Get revision number for non-release builds ###########\n    STRING(TIMESTAMP CDNUMBER \"%j\")\n    MATH(EXPR STELLARIUM_PATCH_DIGIT \"${CDNUMBER} + 0\" OUTPUT_FORMAT DECIMAL)\n    SET(STELLARIUM_PATCH ${STELLARIUM_PATCH_DIGIT})\nENDIF()\n# Use integer versions instead of strings for easier handling if required\nADD_DEFINITIONS(\n     -DSTELLARIUM_MAJOR=${STELLARIUM_MAJOR}\n     -DSTELLARIUM_MINOR=${STELLARIUM_MINOR}\n     -DSTELLARIUM_PATCH=${STELLARIUM_PATCH}\n)\nSET(VERSION \"${STELLARIUM_MAJOR}.${STELLARIUM_MINOR}.${STELLARIUM_PATCH}\")\nSET(STELLARIUM_SERIES \"${STELLARIUM_MAJOR}.0\")\nSET(STELLARIUM_PUBLIC_VERSION \"${STELLARIUM_MAJOR}.${STELLARIUM_MINOR}\")\nSET(PACKAGE stellarium)\nSTRING(TIMESTAMP CURRENTYEAR \"%Y\")\nSET(COPYRIGHT_YEARS \"2000-${CURRENTYEAR}\")\n\nSET(STELLARIUM_URL \"https://stellarium.org/\")\nADD_DEFINITIONS(-DSTELLARIUM_URL=\"${STELLARIUM_URL}\")\n\n# remembering the name and the version of compiler for StelLogger\nSET(STELLARIUM_COMPILER \"${CMAKE_CXX_COMPILER_ID} ${CMAKE_CXX_COMPILER_VERSION}\")\nADD_DEFINITIONS(-DSTELLARIUM_COMPILER=\"${STELLARIUM_COMPILER}\")\n\n# The line below is copied from src/gui/HelpDialog.cpp file\nSET(STELLARIUM_COPYRIGHT \"Copyright (C) ${COPYRIGHT_YEARS} ${PROJECT_NAME} Developers\")\n# The line below is copied from src/main.cpp file\n#SET(STELLARIUM_COPYRIGHT \"Copyright (C) ${COPYRIGHT_YEARS} Fabien Chereau et al.\")\nADD_DEFINITIONS(-DSTELLARIUM_COPYRIGHT=\"${STELLARIUM_COPYRIGHT}\")\n\n# Define URL for usage within program (feedback URL for plug-ins)\nSET(STELLARIUM_DEV_URL \"https://github.com/Stellarium/stellarium\")\nADD_DEFINITIONS(-DSTELLARIUM_DEV_URL=\"${STELLARIUM_DEV_URL}\")\n\nSET(PACKAGE_VERSION \"${VERSION}\")\nADD_DEFINITIONS(-DPACKAGE_VERSION=\"${PACKAGE_VERSION}\")\nADD_DEFINITIONS(-DCOPYRIGHT_YEARS=\"${COPYRIGHT_YEARS}\")\nADD_DEFINITIONS(-DSTELLARIUM_SOURCE_DIR=\"${PROJECT_SOURCE_DIR}\")\nADD_DEFINITIONS(-DSTELLARIUM_PUBLIC_VERSION=\"${STELLARIUM_PUBLIC_VERSION}\")\nADD_DEFINITIONS(-DSTELLARIUM_SERIES=\"${STELLARIUM_SERIES}\")\n\n# Qt 5.15+ is preferred as it provides version-less CMake functions (QT_WRAP_UI etc.)\nIF(Qt6_FOUND)\n     SET(MINIMAL_QT_VERSION \"6.2.0\")\n     IF(NOT DEFINED QT_VERSION_MAJOR)\n         SET(QT_VERSION_MAJOR 6)\n     ENDIF()\nELSE()\n     SET(MINIMAL_QT_VERSION \"5.12.0\")\n     IF(NOT DEFINED QT_VERSION_MAJOR)\n         SET(QT_VERSION_MAJOR 5)\n     ENDIF()\nENDIF()\n# TODO: Check real minimal supported version of GPSD API\nSET(MINIMAL_GPS_API_VERSION \"6.0\")\n\n### Define minimal version for Windows\n# Use installer for checking minimum requirements\n# Stellarium/MSVC require Windows 7 (6.1) for work\n# Details: http://www.jrsoftware.org/ishelp/index.php?topic=winvernotes\nIF(Qt6_FOUND)\n     SET(ISS_MIN_WIN_VERSION \"10.0\")\nELSE()\n     SET(ISS_MIN_WIN_VERSION \"6.1\")\nENDIF()\n# Define required version for MSVC\n# Details: https://docs.microsoft.com/ru-ru/windows/win32/winprog/using-the-windows-headers\nIF(Qt6_FOUND)\n     SET(MIN_WIN_VERSION \"0x0A00\")\nELSE()\n     SET(MIN_WIN_VERSION \"0x0601\")\nENDIF()\n\n# Use customized cmake macros\nSET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/modules)\nINCLUDE(CPM)\n\n# Show platform info\nMESSAGE(STATUS \"Platform: ${CMAKE_SYSTEM} (${CMAKE_SYSTEM_PROCESSOR})\")\n\n########### Main global variables ###########\nSET(ENABLE_TESTING 0 CACHE BOOL \"Define whether the unit tests should be activated.\")\nSET(ENABLE_LTO 0 CACHE BOOL \"Define whether the Link Time Optimization should be activated.\")\nSET(ENABLE_PCH 1 CACHE BOOL \"Define whether to use precompiled headers.\")\n\nIF(NOT CMAKE_BUILD_TYPE)\n     SET(CMAKE_BUILD_TYPE Release CACHE STRING \"Choose the type of build, options are: None Debug GProf Valgrind ASan UBSan Release RelWithDebInfo MinSizeRel.\" FORCE)\nENDIF()\n\nIF(${CMAKE_BUILD_TYPE} MATCHES \"Debug\")\n     IF(CMAKE_COMPILER_IS_GNUCXX)\n          INCLUDE(CodeCoverage)\n          IF(LCOV_PATH AND ENABLE_TESTING)\n               APPEND_COVERAGE_COMPILER_FLAGS()\n               MESSAGE(STATUS \"Found lcov ${LCOV_PATH} (enable coverage support)\")\n               SETUP_TARGET_FOR_COVERAGE_LCOV(\n                    NAME coverage \n                    EXECUTABLE ctest -j ${PROCESSOR_COUNT} \n                    DEPENDENCIES buildTests\n               )\n          ENDIF()\n     ENDIF()\nENDIF()\n\nIF(STELLARIUM_RELEASE_BUILD)\n     SET(ISS_PACKAGE_VERSION \"${STELLARIUM_PUBLIC_VERSION}\")\n     SET(STELLARIUM_BUIDING_VERSION \"${STELLARIUM_PUBLIC_VERSION}\")\nELSE()\n     SET(STELLARIUM_SERIES \"head\")\n     FIND_PACKAGE(Git QUIET)\n     IF(Git_FOUND)\n          MESSAGE(STATUS \"Found Git ${GIT_VERSION_STRING}\")\n          # get the name of current branch\n          EXECUTE_PROCESS(COMMAND ${GIT_EXECUTABLE} rev-parse --abbrev-ref HEAD WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} TIMEOUT 30 OUTPUT_VARIABLE GIT_BRANCH OUTPUT_STRIP_TRAILING_WHITESPACE ERROR_VARIABLE GIT_ERROR)\n          # get the hash of latest commit\n          EXECUTE_PROCESS(COMMAND ${GIT_EXECUTABLE} log -1 --pretty=format:%h WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} TIMEOUT 30 OUTPUT_VARIABLE GIT_REVISION OUTPUT_STRIP_TRAILING_WHITESPACE ERROR_VARIABLE GIT_ERROR)\n          # get the name of latest annotated tag\n          EXECUTE_PROCESS(COMMAND ${GIT_EXECUTABLE} describe --tags --abbrev=0 WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} TIMEOUT 30 OUTPUT_VARIABLE GIT_TAGS OUTPUT_STRIP_TRAILING_WHITESPACE ERROR_VARIABLE GIT_ERROR)\n\t  IF(GIT_REVISION)\n               # Let's use short hash in all cases\n               STRING(SUBSTRING ${GIT_REVISION} 0 7 REVISION)               \n\t       ADD_DEFINITIONS(-DGIT_REVISION=\"${REVISION}\")\n               ADD_DEFINITIONS(-DGIT_BRANCH=\"${GIT_BRANCH}\")\n\t  ENDIF()\n     ELSE()\n          STRING(TIMESTAMP TODAY \"%j%H%M\")\n          SET(REVISION \"${TODAY}\")\n\t  ADD_DEFINITIONS(-DGIT_REVISION=\"${TODAY}\")\n          ADD_DEFINITIONS(-DGIT_BRANCH=\"tarball\")\n     ENDIF()\n     SET(ISS_PACKAGE_VERSION \"${STELLARIUM_PUBLIC_VERSION}-${REVISION}\")\n     SET(STELLARIUM_BUIDING_VERSION \"${STELLARIUM_PUBLIC_VERSION}+\")\nENDIF()\nMESSAGE(STATUS \"Building ${PROJECT_NAME} ${STELLARIUM_BUIDING_VERSION} (v${PACKAGE_VERSION}; Mode: ${CMAKE_BUILD_TYPE})\")\nADD_DEFINITIONS(-DSTELLARIUM_BUIDING_VERSION=\"${STELLARIUM_BUIDING_VERSION}\")\n\n# Write version and series of Stellarium to Stellarium User Guide\nCONFIGURE_FILE(${PROJECT_SOURCE_DIR}/cmake/version.tex.cmake ${PROJECT_SOURCE_DIR}/guide/version.tex @ONLY NEWLINE_STYLE LF)\n\nSET(OPENGL_DEBUG_LOGGING 0 CACHE BOOL \"Enable to log OpenGL information using the GL_KHR_debug extension/QOpenGLLogger\")\nIF(OPENGL_DEBUG_LOGGING)\n     ADD_DEFINITIONS(-DOPENGL_DEBUG_LOGGING)\n     # This enables logging of QOpenGLFunctions through forced glGetError after each call\n     ADD_DEFINITIONS(-DQ_ENABLE_OPENGL_FUNCTIONS_DEBUG)\nENDIF()\n\n# Use ccache if possible\nIF(NOT WIN32)\n     FIND_PROGRAM(CCACHE_PROGRAM ccache)\n     IF(CCACHE_PROGRAM)\n          MESSAGE(STATUS \"Found ccache ${CCACHE_PROGRAM}\")\n          SET_PROPERTY(GLOBAL PROPERTY RULE_LAUNCH_COMPILE \"${CCACHE_PROGRAM}\")\n     ENDIF()\nENDIF()\n\n# Add gprof build options if necessary.  Note gmon.out will be created in working directory when Stellarium is executed\nIF(${CMAKE_BUILD_TYPE} MATCHES \"GProf\")\n     SET(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fprofile-arcs\")\n     SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fprofile-arcs\")\n     SET(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -pg\")\nENDIF()\n\n# Add valgrind build options if necessary\nIF(${CMAKE_BUILD_TYPE} MATCHES \"Valgrind\")\n     SET(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -O0 -g\")\n     SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -O0 -g\")\nENDIF()\n\n# Add ASan (AddressSanitizer) build options if necessary\n# Details: https://github.com/google/sanitizers/wiki/AddressSanitizer\n#          https://docs.microsoft.com/ru-ru/cpp/build/reference/fsanitize?view=msvc-150\nIF(${CMAKE_BUILD_TYPE} MATCHES \"ASan\")\n     IF(MSVC)\n          SET(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} /fsanitize=address\")\n          SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /fsanitize=address\")\n     ELSE()\n          SET(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsanitize=address -O1 -fno-omit-frame-pointer -g\")\n          SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=address -O1 -fno-omit-frame-pointer -g\")\n     ENDIF()\nENDIF()\n\n# Add UBSan (UndefinedBehaviorSanitizer) build options if necessary\n# Details: https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html\nIF(${CMAKE_BUILD_TYPE} MATCHES \"UBSan\")\n     SET(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsanitize=undefined -g\")\n     SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=undefined -g\")\nENDIF()\n\n# Add Fuzzer (Fuzzer Sanitizer) build options if necessary\n# Details: https://llvm.org/docs/LibFuzzer.html\n#          https://docs.microsoft.com/ru-ru/cpp/build/reference/fsanitize?view=msvc-150\nIF(${CMAKE_BUILD_TYPE} MATCHES \"Fuzzer\")\n     IF(MSVC)\n          SET(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} /fsanitize=fuzzer\")\n          SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /fsanitize=fuzzer\")\n     ELSE()\n          SET(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsanitize=fuzzer -O1 -g\")\n          SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsanitize=fuzzer -O1 -g\")\n     ENDIF()\nENDIF()\n\nIF(APPLE)\n     SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -stdlib=libc++\")\n     # share data location:\n     SET(SDATALOC \"Resources\")\nELSE()\n     IF(HAIKU)\n\t  SET(SDATAPREFIX \"data\")\n     ELSE()\n\t  SET(SDATAPREFIX \"share\")\n     ENDIF()\n     # share data location:\n     SET(SDATALOC \"${SDATAPREFIX}/${PACKAGE}\")\nENDIF()\n\nIF(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_COMPILER_IS_GNUCC)\n     IF(WIN32)\n        # The stars structs rely on gnu gcc packing of bit-fields.\n        SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -mno-ms-bitfields\")\n     ENDIF()\n     SET(GCC_VERSION \"${CMAKE_CXX_COMPILER_VERSION}\")\nELSE()\n     SET(GCC_VERSION \"0.0\")\nENDIF()\n\n# _USE_MATH_DEFINES enables use of math constants like M_PI,\n# which are by default disabled in standard C++ mode (like std=c++11 instead of std=gnu11)\nADD_DEFINITIONS(-D_USE_MATH_DEFINES)\n\n# flags shared for gcc-like compilers (also MinGW/Clang)\n# Qt 5.7 requires C++11 support\nSET(STEL_GCC_C_FLAGS \"-Wall -Wextra -Wno-unused-parameter -Wno-unknown-pragmas\")\nSET(STEL_GCC_CXX_FLAGS \"-Wall -Wextra -Wno-unused-parameter -Wno-unknown-pragmas\")\n# Intel C/C++ compilers do not have an option -Wno-unused-results\nIF(NOT \"${CMAKE_CXX_COMPILER_ID}\" MATCHES \"Intel\")\n     SET(STEL_GCC_C_FLAGS \"${STEL_GCC_C_FLAGS} -Wno-unused-result\")\n     SET(STEL_GCC_CXX_FLAGS \"${STEL_GCC_CXX_FLAGS} -Wno-unused-result\")\nELSE()\n     # Suppress some warning for Intel C/C++ compilers\n     # Diagnostic 1875: offsetof applied to non-POD (Plain Old Data) types is nonstandard\n     # Diagnostic 654: overloaded virtual function\n     SET(STEL_GCC_C_FLAGS \"${STEL_GCC_C_FLAGS} -diag-disable:remark -wd1875,654\")\n     SET(STEL_GCC_CXX_FLAGS \"${STEL_GCC_CXX_FLAGS} -diag-disable:remark -wd1875,654\")\nENDIF()\n\n# Enable using C++17 when compiling.\nSET(CMAKE_CXX_STANDARD 17)\nSET(CMAKE_CXX_STANDARD_REQUIRED ON)\nSET(CMAKE_CXX_EXTENSIONS OFF)\n# NOTE: C_STANDARD 17 and 23 values added in CMake 3.21\n# https://gitlab.kitware.com/cmake/cmake/-/issues/22366\n# Ubuntu 18.04 have GCC 7.5 - so, C11 only\nSET(CMAKE_C_STANDARD 11)\nSET(CMAKE_C_STANDARD_REQUIRED ON)\nSET(CMAKE_C_EXTENSIONS OFF)\n\nIF(WIN32)\n     # We don't need the extra Windows.h stuff, this may speed up compilation a tiny bit\n     # This should also prevent some Winsock.h warnings\n     ADD_DEFINITIONS(-DWIN32_LEAN_AND_MEAN)\n     IF(NOT MSVC)\n          # MinGW requires enabling of exceptions, version number storage and MinGW-specific threading\n          SET(STEL_MINGW_FLAGS \"-fexceptions -fident -mthreads\")\n          SET(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${STEL_GCC_C_FLAGS} ${STEL_MINGW_FLAGS}\")\n          SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${STEL_GCC_CXX_FLAGS} ${STEL_MINGW_FLAGS}\")\n     ELSE()\n          # MSVC\n          # Additional flags:\n          # Disabled warnings\n          # C4244: implicit type conversion to a smaller type\n          # C4305: type truncation\n          # C4351: \"new\" behaviour, member array default initialization. Required since at least C++98, but funny MSVC throws a warning.\n          # C4996: deprecated POSIX names (used in zlib)\n\t  # C5105: defines in macros\n          SET(STEL_MSVC_FLAGS \"/wd4244 /wd4305 /wd4351 /wd4996 /wd5105 /utf-8\")\n          # Avoid type conflict with C++17 standard\n          # SET(STEL_MSVC_FLAGS \"${STEL_MSVC_FLAGS} /D_HAS_STD_BYTE=0\") # Don't do this in Qt6. Just avoid \"using namespace std\" anywhere! https://developercommunity.visualstudio.com/t/error-c2872-byte-ambiguous-symbol/93889\n          # Set multiprocessing and minimal version of Windows\n          SET(STEL_MSVC_FLAGS \"${STEL_MSVC_FLAGS} /MP /D_WIN32_WINNT=${MIN_WIN_VERSION}\")\n\n          FOREACH(flag_var\n               CMAKE_EXE_LINKER_FLAGS_DEBUG CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO\n               CMAKE_SHARED_LINKER_FLAGS_DEBUG CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO)\n               SET(${flag_var} \"${${flag_var}} /DEBUG:FASTLINK\")\n          ENDFOREACH()\n          SET(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${STEL_MSVC_FLAGS}\")\n          SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${STEL_MSVC_FLAGS}\")\n          # Additional defines:\n          # NOMINMAX So that windows.h does not redefine min and max\n          # _CRT_SECURE_NO_WARNINGS Removes warnings about using \"insecure\" C standard functions like scanf instead of MSVC-specific ones\n          ADD_DEFINITIONS(-DNOMINMAX -D_CRT_SECURE_NO_WARNINGS)\n     ENDIF()\nELSE()\n     SET(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${STEL_GCC_C_FLAGS}\")\n     SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${STEL_GCC_CXX_FLAGS}\")\nENDIF()\n\n# CMake 3.0.0 the CMAKE_<LANG>_COMPILER_ID value for Apple-provided Clang is now AppleClang\nIF(\"${CMAKE_CXX_COMPILER_ID}\" MATCHES \"Clang\")\n     # using regular Clang or AppleClang\n     SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Woverloaded-virtual -Wno-unused-private-field -Wno-uninitialized -Wno-tautological-constant-out-of-range-compare\")\n     # The cosmetic fix for Clang 3.4+\n     IF(${CMAKE_CXX_COMPILER_VERSION} VERSION_GREATER 3.3)\n          SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-unused-const-variable -Wno-unused-result\")\n     ENDIF()\n     # The cosmetic fix for Clang 3.5+\n     IF(${CMAKE_CXX_COMPILER_VERSION} VERSION_GREATER 3.4)\n          SET(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wno-string-plus-int\")\n\t  SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-string-plus-int\")\n     ENDIF()\n     IF(APPLE)\n\t  SET(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fno-common -Wall -Wextra -Wno-unused-parameter -Wno-string-plus-int\")\n\t  SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-common -Wall -Wextra -Wno-unknown-warning-option -Wno-string-plus-int\")\n     ENDIF()\nENDIF()\n\n# FreeBSD-specific compiler flags\n# resolve bug for FreeBSD/amd64 and NVIDIA proprietary drivers \nIF(${CMAKE_SYSTEM_NAME} STREQUAL \"FreeBSD\")\n     # Use -pthread compilation option to properly link to threading library\n     SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -pthread -Wno-unused-local-typedefs\")\nENDIF()\n\n# This activates Link Time Optimization\n# LTO has longer build times but optimizes code (smaller by 15-20 percents)\n# LTO fails a test for unknown reasons on Linux/GCC and on Windows/MSVC.\nIF(ENABLE_LTO)\n     IF(WIN32 AND MSVC)\n\t  SET(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} /GL\")\n\t  SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /GL\")\n\t  SET(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} /LTCG\")\n     ELSE()\n\t  SET(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -flto\")\n\t  SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -flto\")\n\t  SET(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} ${CMAKE_CXX_FLAGS}\")\n     ENDIF()\nENDIF()\n\n########### Others ###########\n# Activate translation\nSET(ENABLE_NLS 1 CACHE BOOL \"Define whether program translation should be supported.\")\nIF(ENABLE_NLS)\n     ADD_DEFINITIONS(-DENABLE_NLS)\nENDIF()\n\n# Activate media support\nSET(ENABLE_MEDIA 1 CACHE BOOL \"Define whether media support should be activated.\")\n\n# Activate QtWebEngine support\nSET(ENABLE_QTWEBENGINE 1 CACHE BOOL \"Define whether QtWebEngine module should be supported if it installed.\")\n\n# Activate GPS support. Solution depends on operating system:\n# - Windows: Only directly-attached serial NMEA emitter.\n# - Other systems: libgps if possible and NMEA emitter as fallback.\nSET(ENABLE_GPS 1 CACHE BOOL \"Define whether GPS queries should be supported.\")\n\n# Activate support for ShowMySky atmosphere\nSET(ENABLE_SHOWMYSKY 1 CACHE BOOL \"Define whether to support ShowMySky atmosphere model if installed\")\n\n# Activate support for XLSX (Excel) files\nSET(ENABLE_XLSX 1 CACHE BOOL \"Define whether to support XLSX (Excel) files\")\nIF(ENABLE_XLSX)\n     ADD_DEFINITIONS(-DENABLE_XLSX)\nENDIF()\n\n# Activate support for INDI client in Telescope Control plugin\nIF(WIN32)\n     # Disable support for INDI client in Windows\n     SET(ENABLE_INDI 0)\nELSE()\n     SET(ENABLE_INDI 1 CACHE BOOL \"Define whether to use INDI client in Telescope Control plugin.\")\nENDIF()\nIF(ENABLE_INDI)\n     ADD_DEFINITIONS(-DENABLE_INDI)\nENDIF()\n\n# SPOUT allows relaying the Stellarium OpenGL framebuffer as DirectX texture in other programs.\n# It exists on Windows only. Syphon is a similar system for MacOS, this might be added by a Mac developer.\nIF(WIN32)\n     SET(STELLARIUM_BUILD_ARM64 0 CACHE BOOL \"Build for Windows on ARM\")\n\n     IF(${CMAKE_SYSTEM_VERSION} LESS 6.1 ) # Need Windows 7 or later to enable support of Spout\n          SET(ENABLE_SPOUT 0)\n          MESSAGE(STATUS \"Spout support disabled due to operating system requirement\")\n     ELSE()\n          SET(ENABLE_SPOUT 1 CACHE BOOL \"Define whether SPOUT support should be activated.\")\n     ENDIF()\nELSE()\n     SET(ENABLE_SPOUT 0)\nENDIF()\nIF(ENABLE_SPOUT)\n     ADD_DEFINITIONS(-DENABLE_SPOUT)\n     # let spout2 be found again if SPOUT_PATH_HINT changes\n     UNSET(SPOUT_LIBRARY CACHE)\n     UNSET(SPOUT_LIBRARY_DLL CACHE)\n     IF(STELLARIUM_BUILD_ARM64) # 64bit ARM build?\n          SET(SPOUT_PATH_HINT ${CMAKE_SOURCE_DIR}/util/spout2/ARM64/)\n     ELSEIF(\"${CMAKE_SIZEOF_VOID_P}\" EQUAL \"4\") # 32bit build?\n          SET(SPOUT_PATH_HINT ${CMAKE_SOURCE_DIR}/util/spout2/Win32/)\n     ELSEIF(\"${CMAKE_SIZEOF_VOID_P}\" EQUAL \"8\") # 64bit build?\n          SET(SPOUT_PATH_HINT ${CMAKE_SOURCE_DIR}/util/spout2/x64/)\n     ENDIF()\n\n     # make sure the .lib file is used, otherwise MinGW will try the .dll directly and fails to link\n     FIND_LIBRARY(SPOUT_LIBRARY NAMES SpoutLibrary.lib SpoutLibrary PATHS ${SPOUT_PATH_HINT})\n     MARK_AS_ADVANCED(SPOUT_LIBRARY)\n\n     IF(NOT SPOUT_LIBRARY)\n          MESSAGE(FATAL_ERROR \"Spout library not found. Try setting SPOUT_LIBRARY or disable Spout support.\")\n     ENDIF()\n\n     # try to find the .dll for automatic copy\n     GET_FILENAME_COMPONENT(SPOUT_LIBRARY_DIR ${SPOUT_LIBRARY} DIRECTORY)\n     SET(SPOUT_LIBRARY_DLL ${SPOUT_LIBRARY_DIR}/SpoutLibrary.dll CACHE FILEPATH \"The path to the Spout .dll file\")\n     SET(SPOUT_LIBRARY_LICENCE ${CMAKE_SOURCE_DIR}/util/spout2/licence.txt CACHE FILEPATH \"The path to the Spout licence file\")\n\n     IF(NOT EXISTS ${SPOUT_LIBRARY_DLL})\n          UNSET(SPOUT_LIBRARY_DLL)\n          # try to find it with find_library (note that this does not work with MSVC, but with MinGW it does, so the above manual version is necessary)\n          FIND_LIBRARY(SPOUT_LIBRARY_DLL SpoutLibrary.dll PATHS ${SPOUT_PATH_HINT})\n     ENDIF()\n\n     IF(NOT SPOUT_LIBRARY_DLL)\n          MESSAGE(WARNING \"Could not find SpoutLibrary.dll, you may have to manually copy it to the binary directory.\\\n                           Try setting SPOUT_LIBRARY_DLL. Note that this is necessary for correct installer generation.\")\n     ENDIF()\n     MARK_AS_ADVANCED(SPOUT_LIBRARY_DLL)\nENDIF(ENABLE_SPOUT)\n\nSET(ENABLE_SCRIPTING 1 CACHE BOOL \"Define whether scripting features should be activated.\")\nIF(ENABLE_SCRIPTING)\n     ADD_DEFINITIONS(-DENABLE_SCRIPTING)\n     # (De-)Activate the script edit console\n     SET(ENABLE_SCRIPT_CONSOLE 1 CACHE BOOL \"Define whether to build the script console feature.\")\n     IF(ENABLE_SCRIPT_CONSOLE)\n          ADD_DEFINITIONS(-DENABLE_SCRIPT_CONSOLE)\n     ENDIF(ENABLE_SCRIPT_CONSOLE)\n     IF(Qt5_FOUND)\n          SET(ENABLE_SCRIPT_QML 0 CACHE BOOL \"Define whether scripting should be handled by the QML module, not the deprecated QtScript. Requires Qt5.14 or later.\")\n     ELSE(Qt5_FOUND)\n          # With Qt6, this is compulsory.\n          SET(ENABLE_SCRIPT_QML 1)\n     ENDIF(Qt5_FOUND)\n     IF(ENABLE_SCRIPT_QML)\n          SET(MINIMAL_QT_VERSION \"5.14.0\")\n          ADD_DEFINITIONS(-DENABLE_SCRIPT_QML)\n     ENDIF(ENABLE_SCRIPT_QML)\nENDIF(ENABLE_SCRIPTING)\n\nSET(STELLARIUM_GUI_MODE Standard CACHE STRING \"Choose the type of GUI to build, options are: Standard, None\")\n\nSET(GENERATE_PACKAGE_TARGET 1 CACHE BOOL \"Set to 1 or true if you want to have make package target\")\n\n# On WIN32 we need to split the main binary into a small binary and a dll\n# This is for allowing to link dynamic plug-ins afterward\n# It does not seem to work with MSVC, so I disable it for the moment.\nIF(WIN32 AND NOT MSVC)\n     SET(GENERATE_STELMAINLIB 1)\nELSE()\n     SET(GENERATE_STELMAINLIB 0)\nENDIF()\n\n########### User Guide ###############\nIF(EXISTS \"${CMAKE_SOURCE_DIR}/guide/guide.pdf\")\n     MESSAGE(STATUS \"Found Stellarium User Guide\")\n     INSTALL(FILES guide/guide.pdf DESTINATION ${SDATALOC}/guide)\n     SET(ISS_GUIDE \"Name: \\\"{group}\\\\{cm:UserGuide}\\\"; Filename: \\\"{app}\\\\guide\\\\guide.pdf\\\"\")\nELSE()\n     SET(ISS_GUIDE \"; No link to Stellarium User Guide\")\nENDIF()\n\n########### Plugin setup #############\n\nSET(STELLARIUM_PLUGINS) # Global list of all the plugins.\nMACRO(ADD_PLUGIN NAME DEFAULT)\n     STRING(TOUPPER ${NAME} NAME_UP)\n     SET(USE_PLUGIN_${NAME_UP} ${DEFAULT} CACHE BOOL \"Define whether the ${NAME} plugin should be created.\")\n     SET(STELLARIUM_PLUGINS ${STELLARIUM_PLUGINS} ${NAME})\nENDMACRO()\n\n#### demo plugins ####\nADD_PLUGIN(HelloStelModule 0)\nADD_PLUGIN(SimpleDrawLine 0)\n#### work plugins ####\nADD_PLUGIN(AngleMeasure 1)\nADD_PLUGIN(ArchaeoLines 1)\nADD_PLUGIN(Calendars 1)\nADD_PLUGIN(Exoplanets 1)\nADD_PLUGIN(EquationOfTime 1)\nADD_PLUGIN(MeteorShowers 1)\nADD_PLUGIN(NavStars 1)\nADD_PLUGIN(Novae 1)\nADD_PLUGIN(Observability 1)\nADD_PLUGIN(Oculars 1)\nADD_PLUGIN(Oculus 0)\nADD_PLUGIN(OnlineQueries 1)\nADD_PLUGIN(PointerCoordinates 1)\nADD_PLUGIN(Pulsars 1)\nADD_PLUGIN(Quasars 1)\nIF(ENABLE_SCRIPTING)\n     ADD_PLUGIN(RemoteControl 1)\nELSE()\n     ADD_PLUGIN(RemoteControl 0)\nENDIF()\nADD_PLUGIN(RemoteSync 1)\nADD_PLUGIN(Satellites 1)\nADD_PLUGIN(Scenery3d 1)\nADD_PLUGIN(SolarSystemEditor 1)\nADD_PLUGIN(Supernovae 1)\nADD_PLUGIN(LensDistortionEstimator 1)\n# Candidate to removing as an archaic plugin\nADD_PLUGIN(TextUserInterface 1)\nADD_PLUGIN(TelescopeControl 1)\nADD_PLUGIN(Vts 0)\n\n########## Static plugins need to define includes and libraries\n########## for the compilation of Stellarium itself\n\n# Custom target used to manage dependencies of stellarium -> Static plugins\n# It is important that static plugins are compiled before stellarium main executable is linked\nADD_CUSTOM_TARGET(AllStaticPlugins ALL)\nSET_TARGET_PROPERTIES(AllStaticPlugins PROPERTIES FOLDER \"plugins\")\n\n########### Find packages ###########\nFIND_PACKAGE(Qt${QT_VERSION_MAJOR} COMPONENTS Core REQUIRED)\n# Catch the real path for used Qt Framework\nGET_TARGET_PROPERTY(QMAKE_LOCATION Qt${QT_VERSION_MAJOR}::qmake LOCATION)\nIF(NOT DEFINED QT_VERSION)\n     # Variable ${QT_VERSION} is not defined, but no problem - we can get it from qmake\n     EXECUTE_PROCESS(COMMAND ${QMAKE_LOCATION} -query QT_VERSION OUTPUT_VARIABLE QT_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)\n     STRING(REPLACE \" \" \"\" QT_VERSION ${QT_VERSION})\nENDIF()\nIF(${QT_VERSION} VERSION_LESS MINIMAL_QT_VERSION)\n     MESSAGE(FATAL_ERROR \"Found Qt${QT_VERSION_MAJOR}: ${QMAKE_LOCATION} (found unsuitable version ${QT_VERSION}, required is ${MINIMAL_QT_VERSION})\")\nELSE()\n     MESSAGE(STATUS \"Found Qt${QT_VERSION_MAJOR}: ${QMAKE_LOCATION} (found suitable version ${QT_VERSION})\")\nENDIF()\nFIND_PACKAGE(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS\n     Concurrent Gui Network Widgets Charts)\nIF(USE_PLUGIN_TELESCOPECONTROL OR ENABLE_GPS)\n     FIND_PACKAGE(Qt${QT_VERSION_MAJOR} COMPONENTS SerialPort REQUIRED)\nENDIF()\nIF(WIN32)\n     FIND_PACKAGE(Qt${QT_VERSION_MAJOR} COMPONENTS Svg REQUIRED)\n     IF(${QT_VERSION_MAJOR} EQUAL 5)\n          FIND_PACKAGE(Qt${QT_VERSION_MAJOR} COMPONENTS XmlPatterns REQUIRED)\n     ENDIF()\n\n     # Qt 5.12 (LTS) and newest version of Qt use OpenSSL 1.1*\n     # Source: https://lists.qt-project.org/pipermail/releasing/2019-March/002614.html\n     SET(OPENSSL_LIBRARY_ARCH \"\")\n     IF(\"${CMAKE_SIZEOF_VOID_P}\" EQUAL \"8\")\n\t  SET(OPENSSL_LIBRARY_ARCH \"-x64\")\n     ENDIF()\n     # Try found OpenSSL 3.x DLL's on Windows (newest Qt)\n     FIND_FILE(OPENSSL_SSL_LIBRARY_DLL libssl-3${OPENSSL_LIBRARY_ARCH}.dll)\n     FIND_FILE(OPENSSL_CRYPTO_LIBRARY_DLL libcrypto-3${OPENSSL_LIBRARY_ARCH}.dll)\n     # OK, OpenSSL 3.x is not exist, let's try found OpenSSL 1.1.x DLL's\n     IF(NOT EXISTS ${OPENSSL_SSL_LIBRARY_DLL})\n\t  FIND_FILE(OPENSSL_SSL_LIBRARY_DLL libssl-1_1${OPENSSL_LIBRARY_ARCH}.dll)\n     ENDIF()\n     IF(NOT EXISTS ${OPENSSL_CRYPTO_LIBRARY_DLL})\n\t  FIND_FILE(OPENSSL_CRYPTO_LIBRARY_DLL libcrypto-1_1${OPENSSL_LIBRARY_ARCH}.dll)\n     ENDIF()\n\n     IF(NOT STELLARIUM_BUILD_ARM64)\n       SET(ISS_OPENSSL_LIBS \"; OpenSSL support\")\n       IF(EXISTS ${OPENSSL_SSL_LIBRARY_DLL})\n         MESSAGE(STATUS \"Found OpenSSL SSL library: ${OPENSSL_SSL_LIBRARY_DLL}\")\n         SET(ISS_OPENSSL_LIBS \"${ISS_OPENSSL_LIBS}\\nSource: \\\"${OPENSSL_SSL_LIBRARY_DLL}\\\"; DestDir: \\\"{app}\\\"; Flags: ignoreversion\")\n       ENDIF()\n       IF(EXISTS ${OPENSSL_CRYPTO_LIBRARY_DLL})\n         MESSAGE(STATUS \"Found OpenSSL crypto library: ${OPENSSL_CRYPTO_LIBRARY_DLL}\")\n         SET(ISS_OPENSSL_LIBS \"${ISS_OPENSSL_LIBS}\\nSource: \\\"${OPENSSL_CRYPTO_LIBRARY_DLL}\\\"; DestDir: \\\"{app}\\\"; Flags: ignoreversion\")\n       ENDIF()\n       IF((NOT EXISTS ${OPENSSL_SSL_LIBRARY_DLL}) AND (NOT EXISTS ${OPENSSL_CRYPTO_LIBRARY_DLL}))\n         SET(ISS_OPENSSL_LIBS \"; OpenSSL libraries not found\")\n       ENDIF()\n     ENDIF()\n\n     IF(STELLARIUM_BUILD_ARM64 AND ${QT_VERSION} VERSION_LESS \"6.5.0\")\n       MESSAGE(FATAL_ERROR \"Qt 6.5.0 or later is required for Windows on ARM builds.\")\n     ENDIF()\nENDIF()\n\nIF(APPLE)\n     IF(${QT_VERSION_MAJOR} EQUAL 6)\n\t  FIND_PACKAGE(Qt${QT_VERSION_MAJOR} COMPONENTS DBus REQUIRED)\n     ENDIF()\n     # macOS architectures: x86_64 or arm64\n     IF(NOT CMAKE_OSX_ARCHITECTURES)\n\t  # Find 'lipo' utility\n\t  FIND_PROGRAM(LIPO_COMMAND lipo)\n\t  IF(LIPO_COMMAND)\n\t       MESSAGE(STATUS \"Found lipo: ${LIPO_COMMAND}\")\n\t       # Get architecture of Qt\n\t       EXECUTE_PROCESS(COMMAND ${LIPO_COMMAND} -archs ${QMAKE_LOCATION} TIMEOUT 30 OUTPUT_VARIABLE QT_ARCHS OUTPUT_STRIP_TRAILING_WHITESPACE)\n\t       STRING(REPLACE \" \" \";\" QT_ARCHS ${QT_ARCHS})\n\t       SET(CMAKE_OSX_ARCHITECTURES \"${QT_ARCHS}\" CACHE STRING \"macOS architectures\" FORCE)\n\t  ELSE()\n\t       # If we can't find architecture of Qt, use that of the host system's CPU\n\t       SET(CMAKE_OSX_ARCHITECTURES \"${CMAKE_HOST_SYSTEM_PROCESSOR}\" CACHE STRING \"macOS architectures\" FORCE)\n\t  ENDIF()\n     ENDIF()\n     # macOS deployment targets\n     IF(NOT CMAKE_OSX_DEPLOYMENT_TARGET)\n\t  IF(${QT_VERSION_MAJOR} EQUAL 6)\n\t       # Qt6: by default - universal binary + minimal operating system is macOS Big Sur\n\t       SET(CMAKE_OSX_DEPLOYMENT_TARGET \"11.0\" CACHE STRING \"Minimum macOS deployment version\" FORCE)\n\t  ELSE()\n               SET(CMAKE_OSX_DEPLOYMENT_TARGET \"10.13\" CACHE STRING \"Minimum macOS deployment version\" FORCE)\n\t  ENDIF()\n     ENDIF()\nENDIF()\n\nIF(${QT_VERSION_MAJOR} EQUAL 5)\n     # Since Qt 5.4, linking to OpenGL is basically not required anymore,\n     # because the QtGui module re-implements the GL functions, and perhaps even\n     # dispatches the calls to a dynamically selected GL library.\n     #\n     # The only exception where this does not work with CMake is for\n     # ES2-only/ANGLE-only builds, which are seemingly not included in\n     # official Qt downloads, but may be required as a custom build\n     # for some embedded systems. Interestingly, this works with qmake,\n     # but CMake needs an explicit link definition.\n     # See also this bug: https://bugreports.qt.io/browse/QTBUG-29132\n\n     # Check if we have a GLES-only build\n     # On dynamic builds, this property is also \"GL\"\n     IF(${Qt5Gui_OPENGL_IMPLEMENTATION} MATCHES \"GLES\")\n\t  MESSAGE(STATUS \"Building an OpenGL ES build (${Qt5Gui_OPENGL_IMPLEMENTATION})\")\n\t  SET(STEL_GLES_LIBS Qt5::Gui_EGL Qt5::Gui_GLESv2)\n     ELSE()\n\t  MESSAGE(STATUS \"Building an OpenGL build\")\n     ENDIF()\nELSE()\n     # See https://doc.qt.io/qt-6/qopenglcontext.html#details + https://doc.qt.io/qt-6/qtgui-overview.html#opengl-and-opengl-es-integration\n     MESSAGE(STATUS \"Building an OpenGL/OpenGL ES build\")\nENDIF()\n\n# Tell CMake to run moc when necessary:\nSET(CMAKE_AUTOMOC ON)\nSET(CMAKE_AUTORCC ON) # ?\nSET(CMAKE_AUTOUIC ON) # ?\n# As moc files are generated in the binary dir, tell CMake to always look for includes there:\nSET(CMAKE_INCLUDE_CURRENT_DIR ON)\n\nIF(ENABLE_SHOWMYSKY)\n    ADD_DEFINITIONS(-DENABLE_SHOWMYSKY)\n    CPMFindPackage(NAME ShowMySky-Qt${QT_VERSION_MAJOR}\n        URL https://github.com/10110111/CalcMySky/archive/refs/tags/v0.3.3.tar.gz\n        URL_HASH SHA256=21cce3187009ce62a4a08a72b4e22ae7bc00654edfbc7fa9fe8ab65b412791df\n        EXCLUDE_FROM_ALL yes\n        OPTIONS \"QT_VERSION ${QT_VERSION_MAJOR}\")\n    IF(ShowMySky-Qt${QT_VERSION_MAJOR}_ADDED)\n        # Don't want to link to ShowMySky::ShowMySky directly, so find out its\n        # include dir and lib location manually.\n        GET_TARGET_PROPERTY(ShowMySky_INCLUDE_DIRECTORIES\n            ShowMySky::ShowMySky INTERFACE_INCLUDE_DIRECTORIES)\n        SET(ShowMySky_LIBRARY $<TARGET_FILE:ShowMySky::ShowMySky>)\n        MESSAGE(STATUS \"Will build ShowMySky library\")\n        INCLUDE(GNUInstallDirs)\n\tIF(APPLE)\n\t    INSTALL(TARGETS ShowMySky LIBRARY DESTINATION Frameworks)\t\n\tELSE()\n\t    INSTALL(TARGETS ShowMySky\n\t\t    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n\t\t    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})\n\tENDIF()\n        # We used EXCLUDE_FROM_ALL in CPMFindPackage to avoid building\n        # irrelevant binaries of CalcMySky. But we still need to build\n        # libShowMySky, so add some target which would depend on it.\n        # stelMain is not defined at this point yet, so can't use it.\n        FILE(WRITE ${CMAKE_CURRENT_BINARY_DIR}/fake-show-my-sky-client.cpp \"\")\n        ADD_LIBRARY(fake-show-my-sky-client SHARED\n            ${CMAKE_CURRENT_BINARY_DIR}/fake-show-my-sky-client.cpp)\n        ADD_DEPENDENCIES(fake-show-my-sky-client ShowMySky::ShowMySky)\n    ELSE()\n        GET_TARGET_PROPERTY(ShowMySky_INCLUDE_DIRECTORIES\n            ShowMySky::ShowMySky INTERFACE_INCLUDE_DIRECTORIES)\n        GET_TARGET_PROPERTY(ShowMySky_LIBRARY\n            ShowMySky::ShowMySky LOCATION)\n        IF(EXISTS ${ShowMySky_LIBRARY})\n            MESSAGE(STATUS \"Found ShowMySky library: ${ShowMySky_LIBRARY}\")\t    \n        ELSE()\n            MESSAGE(FATAL_ERROR \"Could NOT found ShowMySky library\")\n        ENDIF()\n    ENDIF()\nENDIF(ENABLE_SHOWMYSKY)\n\nIF(ENABLE_SCRIPTING)\n     IF(ENABLE_SCRIPT_QML)\n          FIND_PACKAGE(Qt${QT_VERSION_MAJOR} COMPONENTS Qml REQUIRED)\n     ELSE(ENABLE_SCRIPT_QML)\n          FIND_PACKAGE(Qt5Script REQUIRED)\n     ENDIF(ENABLE_SCRIPT_QML)\nENDIF(ENABLE_SCRIPTING)\n\nIF(ENABLE_MEDIA)\n     ADD_DEFINITIONS(-DENABLE_MEDIA)\n     FIND_PACKAGE(Qt${QT_VERSION_MAJOR} COMPONENTS Multimedia REQUIRED)\n     FIND_PACKAGE(Qt${QT_VERSION_MAJOR} COMPONENTS MultimediaWidgets REQUIRED)\nENDIF()\n\nIF(ENABLE_GPS)\n     MESSAGE(STATUS \"GPS: support by Qt's NMEA handling enabled.\")\n     FIND_PACKAGE(Qt${QT_VERSION_MAJOR} COMPONENTS Positioning REQUIRED)\n     ADD_DEFINITIONS(-DENABLE_GPS)\n     IF(WIN32)\n          SET(ENABLE_LIBGPS 0)\n     ELSEIF(NOT DEFINED ENABLE_LIBGPS)\n          FIND_PACKAGE(GPS QUIET)\n          IF(GPS_FOUND)\n               IF(${GPS_VERSION_STRING} VERSION_LESS MINIMAL_GPS_API_VERSION)\n                    SET(ENABLE_LIBGPS 0)\n                    MESSAGE(STATUS \"GPS: found GPS library at ${GPS_LIBRARY} (found unsuitable GPSD API version ${GPS_VERSION_STRING}, required is ${MINIMAL_GPS_API_VERSION})\")\n                    MESSAGE(STATUS \"GPS: GPSD query disabled!\")\n               ELSE()\n                    SET(ENABLE_LIBGPS 1)\n                    ADD_DEFINITIONS(-DENABLE_LIBGPS)\n                    MESSAGE(STATUS \"GPS: using GPS library at ${GPS_LIBRARY} (found suitable GPSD API version: ${GPS_VERSION_STRING})\")\n               ENDIF()\n\t  ELSE()\n               SET(ENABLE_LIBGPS 0)\n               MESSAGE(STATUS \"GPS: could not find GPS library - GPSD query disabled!\")\n\t  ENDIF()\n     ENDIF()\nELSE()\n     SET(ENABLE_LIBGPS 0)\n     MESSAGE(STATUS \"GPS: disabled.\")\nENDIF()\n\nIF(ENABLE_MEDIA OR USE_PLUGIN_SCENERY3D)\n     # The Scenery3D plugin requires it directly and the QtMultimediaWidgets module requires it internally\n     FIND_PACKAGE(Qt${QT_VERSION_MAJOR} COMPONENTS OpenGL REQUIRED)\nENDIF()\n\nIF(ENABLE_TESTING)\n    ENABLE_TESTING()\n    ADD_DEFINITIONS(-DENABLE_TESTING)\n    FIND_PACKAGE(Qt${QT_VERSION_MAJOR} COMPONENTS Test REQUIRED)\n    MESSAGE(STATUS \"Unit tests support: enabled\")\nELSE(ENABLE_TESTING)\n    MESSAGE(STATUS \"Unit tests support: disabled\")\nENDIF(ENABLE_TESTING)\n\n### Zlib package\nFIND_PACKAGE(ZLIB QUIET) #quiet warnings about not found, we have our own version anyway\n\n# if a system zlib is found, let the user choose if to instead use our bundled version\nIF(ZLIB_FOUND)\n     IF(WIN32) #on win, we default to \"no\"\n          SET(USE_SYSTEM_ZLIB 0 CACHE BOOL \"Use system-provided zlib instead of the bundled version\")\n     ELSE() #else, we default to \"yes\"\n          SET(USE_SYSTEM_ZLIB 1 CACHE BOOL \"Use system-provided zlib instead of the bundled version\")\n     ENDIF()\nELSE()\n     SET(USE_SYSTEM_ZLIB 0)\nENDIF()\n\nIF(NOT USE_SYSTEM_ZLIB)\n     #use our own zlib\n     MESSAGE(STATUS \"Using bundled zlib version at ${CMAKE_SOURCE_DIR}/src/external/zlib\")\n     SET(ZLIB_LIBRARIES zlib_stel)\nELSE()\n     MESSAGE(STATUS \"Using system-provided zlib at ${ZLIB_LIBRARIES}\")\nENDIF()\n\nSET(USE_BUNDLED_QTCOMPRESS 1 CACHE BOOL \"Use bundled version of qtcompress\")\nIF(USE_BUNDLED_QTCOMPRESS)\n     ADD_DEFINITIONS(-DUSE_BUNDLED_QTCOMPRESS)\n     MESSAGE(STATUS \"Using bundled qtcompress at ${CMAKE_SOURCE_DIR}/src/external/qtcompress\")\nELSE()\n     MESSAGE(STATUS \"Using Qt-provided qtcompress\")\nENDIF()\n\nIF(ENABLE_XLSX)\n     # TODO: switch to something like vcpkg or conan, and plain find_package,\n     # without the fallback of cmake downloading the dep itself.\n     # But some libraries are not available there yet.\n\n     # Version 1.4.4 exports \"QXlsx\", but future (unreleased as of 10 Nov 2022)\n     # version exports \"QXlsxQt5\" (or ...Qt6) instead. Try both, but\n     # download newer one, because 1.4.4 doesn't link on windows when\n     # added via add_subdirectory().\n     FIND_PACKAGE(QXlsx NAMES QXlsxQt${QT_VERSION_MAJOR} QXlsx)\n     IF(QXlsx_FOUND)\n         MESSAGE(STATUS \"Using system-provided QXlsx ${QXlsx_VERSION}\")\n     ELSE()\n         CPMAddPackage(NAME QXlsxQt${QT_VERSION_MAJOR}\n             URL https://github.com/QtExcel/QXlsx/archive/refs/tags/v1.4.8.tar.gz\n             URL_HASH SHA256=5b2a5aad08f07e6b099d934c4c4f75bcd83a0421538aec1e8582d8c8596b0956\n             EXCLUDE_FROM_ALL ON\n             SOURCE_SUBDIR QXlsx)\n     ENDIF()\nENDIF()\n\n########### Set some global variables ###########\nIF(UNIX AND NOT WIN32)\n     IF(APPLE)\n          SET(CMAKE_INSTALL_PREFIX \"${PROJECT_BINARY_DIR}/Stellarium.app/Contents\")\n     ELSE()\n          ADD_DEFINITIONS(-DINSTALL_DATADIR=\"${CMAKE_INSTALL_PREFIX}/${SDATALOC}\")          \n          # Used in generating the documentation (doc/stellarium.pod.cmake):\n          SET(INSTALL_DATADIR \"${CMAKE_INSTALL_PREFIX}/${SDATALOC}\")\n     ENDIF()\nELSE()\n     ADD_DEFINITIONS(-DINSTALL_DATADIR=\".\")\n     ADD_DEFINITIONS(-DINSTALL_LOCALEDIR=\"./locale\")\nENDIF()\n# For not installed debug builds with build directory path that not match sources directory path ${PROJECT_BINARY_DIR} != ${CMAKE_SOURCE_DIR}\nIF(CMAKE_BUILD_TYPE STREQUAL \"Debug\")\n     ADD_DEFINITIONS(-DINSTALL_DATADIR_FOR_DEBUG=\"${CMAKE_SOURCE_DIR}\")\n     ADD_DEFINITIONS(-DINSTALL_LOCALEDIR_FOR_DEBUG=\"${CMAKE_SOURCE_DIR}\")\nENDIF()\n\nIF(WIN32)\n     #######################################################\n     ### Generate icon file name\n     #######################################################\n\n     IF(STELLARIUM_RELEASE_BUILD)\n          SET(PACKAGE_ICON \"stellarium\")\n     ELSE()\n          SET(PACKAGE_ICON \"stellarium-gray\")\n     ENDIF()\n\n     #######################################################\n     ### Generate a VersionInfo file\n     #######################################################\n\n     SET(WINDOWS_PACKAGE_VERSION \"${VERSION}.0\")\n     SET(PACKAGE_VERSION_RC \"${WINDOWS_PACKAGE_VERSION}\")\n     STRING(REGEX REPLACE \"([.]+)\" \",\" PACKAGE_VERSION_RC ${PACKAGE_VERSION_RC})\n     CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/cmake/stellarium.rc.cmake ${CMAKE_CURRENT_BINARY_DIR}/stellarium.rc @ONLY)\n\n     #######################################################\n     ### [Optional] Embed icon in the Windows executable\n     #######################################################\n\n     SET(ENABLE_WINDOWS_EXE_ICON 1 CACHE BOOL \"Determine if it should try to embed the Stellarium icon in the Windows .exe file\")\n     IF(ENABLE_WINDOWS_EXE_ICON AND NOT RC_COMPILER_PATH)\n          IF(NOT MSVC)\n               #The mingGW snapshot distributed with the Qt SDK has it under this name.\n               SET(RC_COMPILER_FILENAME \"windres.exe\")\n               FIND_FILE(RC_COMPILER_PATH ${RC_COMPILER_FILENAME})\n          ENDIF()\n          IF(RC_COMPILER_PATH)\n               MESSAGE(STATUS \"Found .rc compiler: ${RC_COMPILER_PATH}\")\n          ENDIF(RC_COMPILER_PATH)\n     ENDIF(ENABLE_WINDOWS_EXE_ICON AND NOT RC_COMPILER_PATH)\n\n     #######################################################\n     ### Generate an Inno Setup project file\n     #######################################################\n\n     IF(STELLARIUM_BUILD_ARM64) # 64bit ARM build?\n\t  SET(ISS_ARCHITECTURE_SPECIFIC \";Make the installer run only on arm64:\\nArchitecturesAllowed=arm64\\n;Switch to 64-bit install mode:\\nArchitecturesInstallIn64BitMode=arm64\")\n\t  SET(ISS_PACKAGE_PLATFORM \"qt${QT_VERSION_MAJOR}-arm64\")\n     ELSEIF(\"${CMAKE_SIZEOF_VOID_P}\" EQUAL \"4\")\n\t  SET(ISS_ARCHITECTURE_SPECIFIC \"\")\n\t  SET(ISS_PACKAGE_PLATFORM \"qt${QT_VERSION_MAJOR}-win32\")\n     ELSEIF(\"${CMAKE_SIZEOF_VOID_P}\" EQUAL \"8\")\n\t  SET(ISS_ARCHITECTURE_SPECIFIC \";Make the installer run only on win64:\\nArchitecturesAllowed=x64\\n;Switch to 64-bit install mode:\\nArchitecturesInstallIn64BitMode=x64\")\n\t  SET(ISS_PACKAGE_PLATFORM \"qt${QT_VERSION_MAJOR}-win64\")\n     ENDIF()\n     SET(ISS_AUTOGENERATED_WARNING \"Do not edit this file! It has been automatically generated by CMake. Your changes will be lost the next time CMake is run.\")\n\n     GET_FILENAME_COMPONENT(_qt_bin_dir \"${QMAKE_LOCATION}\" DIRECTORY)\n     FIND_PROGRAM(WINDEPLOYQT_COMMAND windeployqt HINTS \"${_qt_bin_dir}\")\n     IF(WINDEPLOYQT_COMMAND)\n\t  MESSAGE(STATUS \"Found windeployqt: ${WINDEPLOYQT_COMMAND}\")\n     ELSE()\n\t  MESSAGE(STATUS \"Could NOT find windeployqt\")\n     ENDIF()\n\n     SET(ISS_STELLARIUM_STUFF \"; Additional libraries\")\n     IF(ENABLE_SPOUT)\n          IF(SPOUT_LIBRARY_DLL) # we know the dll\n               MESSAGE(STATUS \"Found Spout library: ${SPOUT_LIBRARY_DLL}\")\n               SET(ISS_STELLARIUM_STUFF \"${ISS_STELLARIUM_STUFF}\\nSource: \\\"${SPOUT_LIBRARY_DLL}\\\"; DestDir: \\\"{app}\\\"; Flags: ignoreversion\")\n               SET(ISS_STELLARIUM_STUFF \"${ISS_STELLARIUM_STUFF}\\nSource: \\\"${SPOUT_LIBRARY_LICENCE}\\\"; DestDir: \\\"{app}\\\"; DestName: \\\"Spout_licence.txt\\\"; Flags: ignoreversion\")\n          ENDIF()\n          SET(ISS_SPOUT \"Name: \\\"{group}\\\\Stellarium {cm:SpoutMode}\\\"; Filename: \\\"{app}\\\\stellarium.exe\\\"; Parameters: \\\"--spout=sky\\\"; WorkingDir: \\\"{app}\\\"; IconFilename: \\\"{app}\\\\data\\\\stellarium.ico\\\"\\n\")\n     ELSE()\n          SET(ISS_SPOUT \"; Spout support is disabled\")\n     ENDIF(ENABLE_SPOUT)\n     IF(ENABLE_SHOWMYSKY AND NOT ShowMySky-Qt${QT_VERSION_MAJOR}_ADDED)\n          SET(ISS_STELLARIUM_STUFF \"${ISS_STELLARIUM_STUFF}\\nSource: \\\"${ShowMySky_LIBRARY}\\\"; DestDir: \\\"{app}\\\"; Flags: ignoreversion\")\n     ENDIF()\nENDIF(WIN32)\n\n\nIF(CMAKE_BUILD_TYPE STREQUAL \"Release\" OR CMAKE_BUILD_TYPE STREQUAL \"RelWithDebInfo\")\n     ADD_DEFINITIONS(-DQT_NO_DEBUG)\n     ADD_DEFINITIONS(-DNDEBUG)\nENDIF()\n\nCONFIGURE_FILE(${CMAKE_SOURCE_DIR}/cmake/default_cfg.ini.cmake ${CMAKE_SOURCE_DIR}/data/default_cfg.ini @ONLY)\n\n########### uninstall files ###############\nCONFIGURE_FILE(\n     \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/cmake_uninstall.cmake.in\"\n     \"${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake\"\n     IMMEDIATE @ONLY)\n\nADD_CUSTOM_TARGET(uninstall\n     \"${CMAKE_COMMAND}\" -P \"${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake\")\nSET_TARGET_PROPERTIES(uninstall PROPERTIES FOLDER \"src\")\n\n########### Packaging info for CPack ###########\n\nIF(GENERATE_PACKAGE_TARGET)\n     IF(MSVC_VERSION GREATER 1800)\n          SET(CMAKE_INSTALL_UCRT_LIBRARIES TRUE)\n     ENDIF()\n     INCLUDE(InstallRequiredSystemLibraries)\n     SET(CPACK_PACKAGE_NAME \"stellarium\")\n     SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY \"Stellarium is real-time photo-realistic sky generator.\")\n     SET(CPACK_PACKAGE_DESCRIPTION \"Stellarium is a free open source planetarium for your computer. It shows a realistic sky in 3D, just like what you see with the naked eye, binoculars or a telescope.\")\n     SET(CPACK_PACKAGE_VENDOR \"Stellarium's team\")\n     SET(CPACK_PACKAGE_CONTACT \"stellarium@googlegroups.com\")\n     SET(CPACK_PACKAGE_HOMEPAGE_URL \"${STELLARIUM_URL}\")\n     SET(CPACK_PACKAGE_DESCRIPTION_FILE \"${CMAKE_CURRENT_SOURCE_DIR}/README.md\")\n     SET(CPACK_RESOURCE_FILE_LICENSE \"${CMAKE_CURRENT_SOURCE_DIR}/COPYING\")\n     SET(CPACK_PACKAGE_VERSION_MAJOR \"${STELLARIUM_MAJOR}\")\n     SET(CPACK_PACKAGE_VERSION_MINOR \"${STELLARIUM_MINOR}\")\n     SET(CPACK_PACKAGE_VERSION_PATCH \"${STELLARIUM_PATCH}\")\n     SET(CPACK_PACKAGE_INSTALL_DIRECTORY \"stellarium\")\n     IF(STELLARIUM_RELEASE_BUILD)\n\t  SET(CPACK_SOURCE_PACKAGE_FILE_NAME \"stellarium-${STELLARIUM_PUBLIC_VERSION}\")\n          SET(CPACK_PACKAGE_ICON \"${CMAKE_CURRENT_SOURCE_DIR}/data/icons/512x512/stellarium.png\")\n     ELSE()\n\t  SET(CPACK_SOURCE_PACKAGE_FILE_NAME \"stellarium-${STELLARIUM_PUBLIC_VERSION}-${GIT_REVISION}\")\n          SET(CPACK_PACKAGE_ICON \"${CMAKE_CURRENT_SOURCE_DIR}/data/icons/512x512/stellarium-gray.png\")\n     ENDIF()\n     SET(CPACK_SOURCE_GENERATOR \"TBZ2;TXZ;TGZ;ZIP\")\n     SET(CPACK_GENERATOR \"TBZ2;TXZ;TGZ;ZIP\")\n     SET(CPACK_PACKAGE_CHECKSUM \"SHA256\")\n     SET(CPACK_STRIP_FILES \"bin/stellarium\")\n     SET(CPACK_PACKAGE_EXECUTABLES \"stellarium\" \"Stellarium\")\n     SET(CPACK_SOURCE_IGNORE_FILES \"/.git/\" \"/.github/\" \"builds/\" \"installers/\" \"po/stellarium-landscapes-descriptions\" \"po/stellarium-scenery3d-descriptions\" \"po/stellarium-skycultures-descriptions\" \"po/stellarium-desktop\" \"po/stellarium-metainfo\" \"util/spout2\" \"util/DSSToStellarium/toastForShape$\" \"Stellarium.tag$\" \"Stellarium.kdevelop.pcs$\" \"/CMakeLists.txt.user$\" \"/CITATION*\" \"\\\\\\\\.gitignore$\" \"\\\\\\\\.clang-format$\" \"\\\\\\\\.yml$\" \"~$\" \"\\\\\\\\.swp$\" \"\\\\\\\\.#\" \"/#\")\n     SET(CPACK_RPM_PACKAGE_LICENSE \"GNU GPLv2 or later\")\n     SET(CPACK_RPM_PACKAGE_GROUP \"Sciences/Astronomy\")\n     SET(CPACK_DEBIAN_PACKAGE_MAINTAINER \"${CPACK_PACKAGE_VENDOR} <stellarium@googlegroups.com>\")\n     SET(CPACK_DEBIAN_PACKAGE_SECTION \"science\")\n     SET(CPACK_DEBIAN_PACKAGE_VERSION \"${VERSION}-full-qt${QT_VERSION_MAJOR}\")\n     SET(CPACK_DEBIAN_PACKAGE_SHLIBDEPS ON)\n     # package name for deb. If set, then instead of stellarium-24.0.0-Linux.deb\n     # you'll get stellarium_24.0.0_amd64.deb (note the underscores too)\n     SET(CPACK_DEBIAN_FILE_NAME DEB-DEFAULT)\n     INCLUDE(CPack)\nENDIF()\n\n########### macOS Bundling ###############\nIF(APPLE)\n     MESSAGE(STATUS \"macOS deployment target: ${CMAKE_OSX_DEPLOYMENT_TARGET} (${CMAKE_OSX_ARCHITECTURES})\")\n     SET(PACKAGE_OSX_TARGET ${CMAKE_OSX_DEPLOYMENT_TARGET})\n     ADD_DEFINITIONS(-DPACKAGE_OSX_TARGET)\n\n     CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/cmake/Info.plist.cmake ${CMAKE_SOURCE_DIR}/data/Info.plist @ONLY)\n\n     GET_FILENAME_COMPONENT(_qt_bin_dir \"${QMAKE_LOCATION}\" DIRECTORY)\n     FIND_PROGRAM(MACDEPLOYQT_COMMAND macdeployqt HINTS \"${_qt_bin_dir}\")\n     IF(MACDEPLOYQT_COMMAND)\n\t  MESSAGE(STATUS \"Found macdeployqt: ${MACDEPLOYQT_COMMAND}\")\n     ELSE()\n\t  MESSAGE(STATUS \"Could NOT find macdeployqt\")\n     ENDIF()\nENDIF()\n\n########### Windows packaging ###############\nIF(WIN32)\n     CONFIGURE_FILE(${PROJECT_SOURCE_DIR}/cmake/stellarium.iss.cmake ${CMAKE_CURRENT_BINARY_DIR}/stellarium.iss @ONLY)\n     CONFIGURE_FILE(${PROJECT_SOURCE_DIR}/cmake/stellarium-patch.iss.cmake ${CMAKE_CURRENT_BINARY_DIR}/stellarium-patch.iss @ONLY)\n     FIND_PACKAGE(ISCC)\n     IF(ISS_COMPILER_FOUND)\n\t  # Add a full installer target\n          ADD_CUSTOM_TARGET(\n               stellarium-installer\n\t       COMMAND ${ISS_COMPILER_EXECUTABLE} \"${CMAKE_CURRENT_BINARY_DIR}/stellarium.iss\"\n               COMMENT \"Making an installer package for Windows...\"\n               VERBATIM\n          )\n\t  # Add installer target\n\t  ADD_CUSTOM_TARGET(\n\t       stellarium-patch-installer\n\t       COMMAND ${ISS_COMPILER_EXECUTABLE} \"${CMAKE_CURRENT_BINARY_DIR}/stellarium-patch.iss\"\n\t       COMMENT \"Making an installer package for Windows...\"\n\t       VERBATIM\n\t  )\n     ELSE()\n\t  MESSAGE(STATUS \"Could NOT find Inno Setup compiler. You won't be able to build setup files.\")\n     ENDIF()\nENDIF()\n\n########### Generate doxygen doc ###############\nFIND_PACKAGE(Doxygen)\nIF(DOXYGEN_FOUND)\n     IF(DOXYGEN_DOT_FOUND)\n          SET(HAVE_DOT \"YES\")\n          SET(DOT_PATH ${DOXYGEN_DOT_PATH})\n     ELSE()\n          SET(HAVE_DOT \"NO\")\n          SET(DOT_PATH \"\")\n     ENDIF()\n     CONFIGURE_FILE(${PROJECT_SOURCE_DIR}/cmake/Doxyfile.cmake ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile @ONLY)\n     ADD_CUSTOM_TARGET(apidoc ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR} COMMENT \"Generate the doxygen documentation into the doc directory.\")\nENDIF()\n\ninclude(\"cmake/Check-from_chars.cmake\")\nIF(NOT FROM_CHARS_WORKS)\n    CPMFindPackage(NAME FastFloat\n                   GIT_REPOSITORY https://github.com/fastfloat/fast_float\n                   VERSION 6.1.0\n                   EXCLUDE_FROM_ALL yes)\n    GET_TARGET_PROPERTY(FastFloat_INCLUDE_DIRECTORIES\n                        FastFloat::fast_float INTERFACE_INCLUDE_DIRECTORIES)\n    INCLUDE_DIRECTORIES(${FastFloat_INCLUDE_DIRECTORIES})\n    ADD_DEFINITIONS(-DUSE_FAST_FLOAT)\nENDIF()\n\ninclude(\"cmake/Check-std_execution.cmake\")\nIF(STD_EXECUTION_KNOWN)\nADD_DEFINITIONS(-DSTD_EXECUTION_KNOWN)\nENDIF()\n\n########### Top level include directories ###########\n# This will be used for all compilations in sub-directories\nINCLUDE_DIRECTORIES(\n      ${CMAKE_BINARY_DIR}\n      ${CMAKE_SOURCE_DIR}/src\n      ${CMAKE_SOURCE_DIR}/src/core\n      ${CMAKE_SOURCE_DIR}/src/core/modules\n      ${CMAKE_SOURCE_DIR}/src/core/planetsephems\n      ${CMAKE_SOURCE_DIR}/src/gui\n      ${CMAKE_SOURCE_DIR}/src/scripting\n      ${INTL_INCLUDE_DIR}\n      ${CMAKE_BINARY_DIR}/src\n)\n\n########### Subdirectories ###############\nADD_SUBDIRECTORY( data )\nADD_SUBDIRECTORY( models )\nADD_SUBDIRECTORY( src )\nADD_SUBDIRECTORY( textures )\nADD_SUBDIRECTORY( doc )\nADD_SUBDIRECTORY( landscapes )\nADD_SUBDIRECTORY( skycultures )\nADD_SUBDIRECTORY( nebulae )\nADD_SUBDIRECTORY( stars )\nADD_SUBDIRECTORY( plugins )\nIF(ENABLE_SCRIPTING)\n     ADD_SUBDIRECTORY( scripts )\nENDIF()\nIF(USE_PLUGIN_SCENERY3D)\n     # add scenery3d scenes\n     ADD_SUBDIRECTORY( scenery3d )\nENDIF()\nIF(ENABLE_SHOWMYSKY)\n     # add atmosphere models\n     ADD_SUBDIRECTORY( atmosphere )\nENDIF()\nIF(ENABLE_NLS)\n     ADD_SUBDIRECTORY( po )\nENDIF()\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.54296875,
          "content": "# Contributing to Stellarium\nHello, and thank you for your interest in contributing to Stellarium! \nPlease take a minute to review our Contribution Guidelines, as this will \nresult in getting your issue resolved or pull request merged faster.\nContributions are always welcome, no matter how large or small. :)\n\n## Reporting Issues\nBefore reporting an issue around graphics artifacts like missing menu buttons, \nstrange colors, Moon not rendered, or similar, *please make absolutely sure* \nyou are running the latest graphics drivers for your graphics card. \n95% of graphics problems are solved this way.\n\nBefore reporting an issue, please *absolutely make sure* to check the recent \nopen and also [closed issues](https://github.com/Stellarium/stellarium/issues?q=is%3Aissue+is%3Aclosed) \nwhether it has been reported and solved/closed already! Don't report a new \nissue in this case, you may join the discussion.\n\nIf you want to report a bug, please make sure to update and verify the bug \nstill exists in the current version.  In this case please also check \n[current beta builds](https://github.com/Stellarium/stellarium-data/releases/tag/weekly-snapshot) (i.e., the latest development version).\n\nAlso look into the [wiki](https://github.com/Stellarium/stellarium/wiki/Common-Problems-for-the-current-version) \nand [FAQ](https://github.com/Stellarium/stellarium/wiki/FAQ) and check if you are \nattempting to report a known issue. Don't report in this case.\n\nAlso look into the User Guide before reporting unexpected but correct behaviour. \nDon't report in this case.\n\nIf you miss translations, please help us with your language and join our \ntranslators at [Transifex](https://app.transifex.com/stellarium/stellarium/dashboard/).\n\nIf the bug still persists, or you're find any typos, errors, or new feature suggestions \nfeel free to open a new issue.\n\nWhen opening an issue to report a problem, please try and provide a minimal steps that \nreproduces the issue, and also include details of the operating\nsystem, Stellarium versions and Graphics Card info you are using.\n\n## Pull Requests (Contributing code)\nSo you're interested in contributing code to Stellarium? Excellent!\n\nMost contributions to Stellarium are done via pull requests from GitHub users'\nforks of the [Stellarium repository](https://github.com/Stellarium/stellarium). \nIf you're new to this style of development, you'll want to read over our\n[development workflow](https://github.com/Stellarium/stellarium/wiki/Git-Contributor-Workflow).\n\nYou may also/instead be interested in contributing to an stellarium affiliated stuff, like \nlandscapes, sky cultures, DSO or planetary textures and scripts.\n\nOnce you open a pull request (which should be opened against the ``master``\nbranch, not against any of the other branches), please make sure that you\ninclude the following:\n\n- **Code**: the code you are adding, which should follow as much as possible\n  our [coding guidelines](http://stellarium.org/doc/head/codingStyle.html).\n\n- **Tests**: these are usually tests to ensure that code that previously\n  failed now works (regression tests) or tests that cover as much as possible\n  of the new functionality to make sure it doesn't break in future, and also\n  returns consistent results on all platforms (since we run these tests on many\n  platforms/configurations). \n\n- **Documentation**: if you are adding new functionality, be sure to include a \ndescription in the main documentation (in ``docs/``) or doxygen description/comments \nfor code in the ``*.hpp`` files (commenting the code may be extremely helpful!).\n\nThanks!\n\n\\- *The Stellarium development team*\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.5703125,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n 51 Franklin Street, Suite 500, Boston, MA 02110-1335  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\f\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\f\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\f\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\f\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335  USA\n\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year  name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Library General\nPublic License instead of this License.\n"
        },
        {
          "name": "CREDITS.md",
          "type": "blob",
          "size": 46.9697265625,
          "content": "## LICENSE\n```\n   Copyright (C) 2004-2023 Fabien Chereau et al.\n\n   This program is free software; you can redistribute it and/or\n   modify it under the terms of the GNU General Public License\n   as published by the Free Software Foundation; either version 2\n   of the License, or (at your option) any later version.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with this program; if not, write to the Free Software\n   Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA  02110-1335, USA.\n\n   See the COPYING file for more information regarding the GNU General\n   Public License.\n```\n\n## Full Reference & Credits\n```\n1. Technical Articles\n\t1.1 The tone reproductor class\n\t\tThe class mainly performs a fast implementation of the algorithm\n\t\tfrom the paper [1], with more accurate values from [2]. The blue\n\t\tshift formula is taken from [3] and combined with the Scotopic\n\t\tvision formula from [4].\n\t\t[1] \"Tone Reproduction for Realistic Images\", Tumblin and\n\t\t    Rushmeier, IEEE Computer Graphics & Application, November\n\t\t    1993\n\t\t[2] \"Tone Reproduction and Physically Based Spectral Rendering\",\n\t\t    Devlin, Chalmers, Wilkie and Purgathofer in EUROGRAPHICS\n\t\t    2002\n\t\t[3] \"Night Rendering\", H. Wann Jensen, S. Premoze, P. Shirley,\n\t\t    W.B. Thompson, J.A. Ferwerda, M.M. Stark\n\t\t[4] \"A Visibility Matching Tone Reproduction Operator for High\n\t\t    Dynamic Range Scenes\", G.W. Larson, H. Rushmeier, C. Piatko\n\t1.2 The skylight class\n\t\tThe class is a fast implementation of the algorithm from the\n\t\tarticle \"A Practical Analytic Model for Daylight\" by A. J.\n\t\tPreetham, Peter Shirley and Brian Smits.\n\t1.3 The skybright class\n\t\tThe class is a fast reimplementation of the VISLIMIT.BAS basic\n\t\tsource code from Brad Schaefer's article on pages 57-60,  May\n\t\t1998 _Sky & Telescope_,\t\"To the Visual Limits\". The basic\n\t\tsources are available on the Sky and Telescope web site.\n\t\t(code \"offered as-is and without support.\")\n\t1.4 The Delta-T calculations\n\t\tFor implementation of calculation routines for Delta-T we used \n\t\tthe following sources:\n\t\t[1] Delta-T webpage by Rob van Gent: \n\t\t    http://www.staff.science.uu.nl/~gent0113/deltat/deltat.htm\n\t\t[2] \"Five Millennium Canon of Solar Eclipses\", Espenak and Meeus\n\t\t    http://eclipse.gsfc.nasa.gov/SEhelp/deltatpoly2004.html\n\t\t[3] \"On the system of astronomical constants\", Clemence, G. M.,\n\t\t    Astronomical Journal, Vol. 53, p. 169\n\t\t    http://adsabs.harvard.edu/abs/1948AJ.....53..169C\n\t\t[4] \"The Rotation of the Earth, and the Secular Accelerations of\n\t\t    the Sun, Moon and Planets\",\n\t\t    Spencer Jones, Monthly Notices of the Royal Astronomical \n\t\t    Society, 99 (1939), 541-558\n\t\t    http://adsabs.harvard.edu/abs/1939MNRAS..99..541S\n\t\t[5] \"Polynomial approximations for the correction delta T E.T.-\n\t\t    U.T. in the period 1800-1975\",\n\t\t    Schmadel, L. D.; Zech, G., Acta Astronomica, vol. 29, no. 1,\n\t\t    1979, p. 101-104.\n\t\t    http://adsabs.harvard.edu/abs/1979AcA....29..101S\n\t\t[6] \"ELP 2000-85 and the dynamic time-universal time relation\",\n\t\t    Borkowski, K. M.,\n\t\t    Astronomy and Astrophysics (ISSN 0004-6361), vol. 205, no. \n\t\t    1-2, Oct. 1988, p. L8-L10.\n\t\t    http://adsabs.harvard.edu/abs/1988A&A...205L...8B\n\t\t[7] \"Empirical Transformations from U.T. to E.T. for the Period\n\t\t    1800-1988\", \n\t\t    Schmadel, L. D.; Zech, G., Astronomische Nachrichten 309, \n\t\t    219-221\n\t\t    http://adsabs.harvard.edu/abs/1988AN....309..219S\n\t\t[8] \"Historical values of the Earth's clock error DeltaT and the\n\t\t    calculation of eclipses\",\n\t\t    Morrison, L. V.; Stephenson, F. R., Journal for the History\n\t\t    of Astronomy (ISSN 0021-8286), \n\t\t    Vol. 35, Part 3, No. 120, p. 327 - 336 (2004)\n\t\t    http://adsabs.harvard.edu/abs/2004JHA....35..327M\n\t\t[9] \"Addendum: Historical values of the Earth's clock error\", \n\t\t    Morrison, L. V.; Stephenson, F. R.,\n\t\t    Journal for the History of Astronomy (ISSN 0021-8286), Vol.\n\t\t    36, Part 3, No. 124, p. 339 (2005)\n\t\t    http://adsabs.harvard.edu/abs/2005JHA....36..339M\n\t\t[10] \"Polynomial approximations to Delta T, 1620-2000 AD\", \n\t\t    Meeus, J.; Simons, L.,\n\t\t    Journal of the British Astronomical Association, vol.110,\n\t\t    no.6, 323\n\t\t    http://adsabs.harvard.edu/abs/2000JBAA..110..323M\n\t\t[11] \"Einstein's Theory of Relativity Confirmed by Ancient Solar\n\t\t    Eclipses\", Henriksson G.,\n\t\t    http://adsabs.harvard.edu/abs/2009ASPC..409..166H\n\t\t[12] \"Canon of Solar Eclipses\" by Mucke & Meeus (1983)\n\t\t[13] \"The accelerations of the earth and moon from early\n\t\t     astronomical observations\", \n\t\t     Muller P. M., Stephenson F. R.,\n\t\t     http://adsabs.harvard.edu/abs/1975grhe.conf..459M\n\t\t[14] \"Pre-Telescopic Astronomical Observations\", Stephenson F.R.,\n\t\t    http://adsabs.harvard.edu/abs/1978tfer.conf....5S\n\t\t[15] \"Long-term changes in the rotation of the earth - 700 B.C.\n\t\t     to A.D. 1980\", \n\t\t     Stephenson F. R., Morrison L. V., \n\t\t     Philosophical Transactions, Series A (ISSN 0080-4614), vol.\n\t\t     313, no. 1524, Nov. 27, 1984, p. 47-70.\n\t\t     http://adsabs.harvard.edu/abs/1984RSPTA.313...47S\n\t\t[16] \"Long-Term Fluctuations in the Earth's Rotation: 700 BC to\n\t\t    AD 1990\",\n\t\t    Stephenson F. R., Morrison L. V., \n\t\t    Philosophical Transactions: Physical Sciences and \n\t\t    Engineering, Volume 351, Issue 1695, pp. 165-202\n\t\t    http://adsabs.harvard.edu/abs/1995RSPTA.351..165S\n\t\t[17] \"Historical Eclipses and Earth's Rotation\" by F. R. \n\t\t    Stephenson (1997)\n\t\t    http://ebooks.cambridge.org/ebook.jsf?bid=CBO9780511525186\n\t\t[18] \"Astronomical Algorithms\" by J. Meeus (2nd ed., 1998)\n\t\t[19] \"Astronomy on the Personal Computer\" by O. Montenbruck & \n\t\t     T. Pfleger (4nd ed., 2000)\n\t\t[20] \"Calendrical Calculations\" by E. M. Reingold & \n\t\t     N. Dershowitz (2nd ed., 2001)\n\t\t[21] DeltaT webpage by V. Reijs: \n\t\t     http://www.iol.ie/~geniet/eng/DeltaTeval.htm\n\t1.5 An accurate long-time precession model compatible with P03:\n\t\tJ. Vondrak, N. Capitaine, P. Wallace: New precession expressions,\n\t\tvalid for long time intervals.\n\t\tAstronomy&Astrophysics 534, A22 (2011); \n\t\tDOI: 10.1051/0004-6361/201117274\n\t1.6 Nutation: \n\t\tDennis D. McCarthy and Brian J. Luzum: An Abridged Model of the\n\t\tPrecession-Nutation of the Celestial Pole.\n\t\tCelestial Mechanics and Dynamical Astronomy 85: 37-49, 2003.\n\t\tThis model provides accuracy better than 1 milli-arcsecond in the\n\t\ttime 1995-2050. It is applied for years -4000..+8000 only.\n\n2. Included source code\n\t2.1 Some computation of the sidereal time (sidereal_time.h/c) and pluto\n\t    orbit contains code from the libnova library (LGPL) by Liam Girdwood.\n\t2.2 The orbit.cpp/h and solve.h files are directly borrowed from\n\t    Celestia (Chris Laurel). (GPL license)\n\t2.3 Several implementations of IMCCE theories for planet and satellite\n\t    movement by Johannes Gajdosik (MIT-style license,\n\t    see the corresponding files for the license text)\n\t2.4 The tesselation algorithms were originally extracted from the glues \n\t    library version 1.4 Mike Gorchak <mike@malva.ua> (SGI FREE SOFTWARE\n\t    LICENSE B).\n\t2.5 OBJ loader in the Scenery3D plugin based on glObjViewer (c) 2007 \n\t    dhpoware\n\t2.6 Parts of the code to work with DE430 and DE431 data files have been \n\t    taken from Project Pluto (GPL license).\n\t2.7 The SpoutLibrary.dll and header from the SpoutSDK version 2.005 \n\t    available at http://spout.zeal.co (BSD license).\n\n3. Data\n\t3.1 The Hipparcos star catalog\n\t    From ESA (European Space Agency) and the Hipparcos mission.\n\t    ref. ESA, 1997, The Hipparcos and Tycho Catalogues, ESA SP-1200\n\t    http://cdsweb.u-strasbg.fr/ftp/cats/I/239\n\t3.2 The solar system data mainly comes from IMCCE and partly from\n\t    Celestia.\n\t3.3 Polynesian constellations are based on diagrams from the Polynesian\n\t    Voyaging Society\n\t3.4 Chinese constellations are based on diagrams from the Hong Kong\n\t    Space Museum\n\t3.5 Egyptian constellations are based on the work of Juan Antonio\n\t    Belmonte, Instituto de Astrofisica de Canarias\n\t3.6 The Tycho-2 Catalogue of the 2.5 Million Brightest Stars\n\t    Hog E., Fabricius C., Makarov V.V., Urban S., Corbin T.,\n\t    Wycoff G., Bastian U., Schwekendiek P., Wicenec A.\n\t    <Astron. Astrophys. 355, L27 (2000)>\n\t    http://cdsweb.u-strasbg.fr/ftp/cats/I/259\n\t3.7 Naval Observatory Merged Astrometric Dataset (NOMAD) version 1\n\t    http://www.nofs.navy.mil/nomad\n\t    Norbert Zacharias writes:\n\t    \"There are no fees, both UCAC and NOMAD are freely available\n\t    with the only requirement that the source of the data (U.S.\n\t    Naval Observatory) and original product name need to be provided\n\t    with any distribution, as well as a description about any\n\t    changes made to the data, if at all.\"\n\t    The changes made to the data are:\n\t    -) try to compute visual magnitude and color from the b,v,r\n\t       values\n\t    -) compute nr_of_measurements = the number of valid b,v,r values\n\t    -) throw away or keep stars (depending on magnitude,\n\t       nr_of_measurements, combination of flags, tycho2 number)\n\t    -) add all stars from Hipparcos (incl. component solutions), and\n\t       tycho2+1st supplement\n\t    -) reorganize the stars in several brightness levels and\n\t       triangular zones according to position and magnitude\n\t    The programs that are used to generate the star files are called\n\t    \"MakeCombinedCatalogue\", \"ParseHip\", \"ParseNomad\", and can be\n\t    found in the util subdirectory in source code. The position,\n\t    magnitudes, and proper motions of the stars coming from NOMAD\n\t    are unchanged, except for a possible loss of precision,\n\t    especially in magnitude. When there is no v-magnitude, it is\n\t    estimated from r or b magnitude.  When there is no b- or v-\n\t    magnitude, the color B-V is estimated from the other magnitudes.\n\t    Also proper motions of faint stars are neglected at all.\n\t3.8 Stellarium's Catalog of Variable Stars based on General Catalog of\n\t    Variable Stars (GCVS) version 2013Apr.\n\t    http://www.sai.msu.su/gcvs/gcvs/\n\t    Samus N.N., Durlevich O.V., Kazarovets E V., Kireeva N.N., \n\t    Pastukhova E.N., Zharova A.V., et al., General Catalogue of Variable\n\t    Stars (Samus+ 2007-2012)\n\t    http://cdsarc.u-strasbg.fr/viz-bin/Cat?cat=B%2Fgcvs&\n\t3.9 Consolidated DSO catalog was created from various data:\n\t    [1]  NGC/IC data taken from SIMBAD Astronomical Database\n\t         http://simbad.u-strasbg.fr\n\t    [2]  Distance to NGC/IC data taken from NED (NASA/IPAC EXTRAGALACTIC\n\t         DATABASE) \n\t         http://ned.ipac.caltech.edu\n\t    [3]  Catalogue of HII Regions (Sharpless, 1959) taken from VizieR\n\t         http://vizier.u-strasbg.fr/viz-bin/VizieR?-source=VII/20\n\t    [4]  H-α emission regions in Southern Milky Way (Rodgers+, 1960)\n\t         taken from VizieR\n\t         http://vizier.u-strasbg.fr/viz-bin/VizieR?-source=VII/216\n\t    [5]  Catalogue of Reflection Nebulae (Van den Bergh, 1966) taken\n\t         from VizieR\n\t         http://vizier.u-strasbg.fr/viz-bin/VizieR?-source=VII/21\n\t    [6]  Lynds' Catalogue of Dark Nebulae (LDN) (Lynds, 1962) taken\n\t         from VizieR\n\t         http://vizier.u-strasbg.fr/viz-bin/VizieR?-source=VII/7A\n\t    [7]  Lynds' Catalogue of Bright Nebulae (Lynds, 1965) taken from\n\t         VizieR\n\t         http://vizier.u-strasbg.fr/viz-bin/VizieR?-source=VII/9\n\t    [8]  Catalog of bright diffuse Galactic nebulae (Cederblad, 1946)\n\t         taken from VizieR\n\t         http://vizier.u-strasbg.fr/viz-bin/VizieR?-source=VII/231\n\t    [9]  Barnard's Catalogue of 349 Dark Objects in the Sky (Barnard,\n\t         1927) taken from VizieR\n\t         http://vizier.u-strasbg.fr/viz-bin/VizieR?-source=VII/220A\n\t    [10] A Catalogue of Star Clusters shown on Franklin-Adams Chart\n\t         Plates (Melotte, 1915) taken from NASA ADS\n\t         http://adsabs.harvard.edu/abs/1915MmRAS..60..175M\n\t    [11] On Structural Properties of Open Galactic Clusters and their\n\t         Spatial Distribution. Catalog of Open Galactic Clusters.\n\t         (Collinder, 1931) taken from NASA ADS\n\t         http://adsabs.harvard.edu/abs/1931AnLun...2....1C\n\t    [12] The Collinder Catalog of Open Star Clusters. An Observer’s\n\t         Checklist.\n\t         Edited by Thomas Watson. Taken from CloudyNights\n\t         http://www.cloudynights.com/page/articles/cat/articles/the-collinder-catalog-updated-r2467\n\t3.10 Cross-identification of objects in consolidated DSO catalog was\n\t     made with:\n\t    [1]  SIMBAD Astronomical Database\n\t         http://simbad.u-strasbg.fr\n\t    [2]  Merged catalogue of reflection nebulae (Magakian, 2003)\n\t         http://vizier.u-strasbg.fr/viz-bin/VizieR-3?-source=J/A+A/399/141\n\t    [3]  Messier Catalogue was taken from Wikipedia (includes\n\t         morphological classification and distances)\n\t         https://en.wikipedia.org/wiki/List_of_Messier_objects\n\t    [4]  Caldwell Catalogue was taken from Wikipedia (includes\n\t         morphological classification and distances)\n\t         https://en.wikipedia.org/wiki/Caldwell_catalogue\n\t3.11 Morphological classification and magnitudes (partially) for Melotte\n\t     catalogue was taken from DeepSkyPedia\n\t     http://deepskypedia.com/wiki/List:Melotte\n\n\n4. Graphics\n\t4.1 All graphics are copyrighted by the Stellarium's Team (GNU GPLv2 or later) \n\t    except the ones mentioned below :\n\t4.2 The \"earthmap\" texture was created by NASA (Reto Stockli, NASA Earth\n\t    Observatory) using data from the MODIS instrument aboard the\n\t    Terra satellite (Public Domain). See chapter 10.1 for full\n\t    credits.\n\t4.4 Moon texture map was combined from maps by USGS Astrogeology Research\n\t    Program,\n\t    http://astrogeology.usgs.gov (Public Domain, DFSG-free) and by Lunar\n\t    surface textures from Celestia, based on Clementine data (Public\n\t    Domain).\n\t4.5a Jupiter map created by James Hastings-Trew from Cassini data. \"The \n\t     maps are free to download and use as source material or resource\n\t     in artwork or rendering (CGI or real time).\"\n\t4.5b The Sun and Iapetus maps and rings of Uranus \n\t     are from Celestia (http://shatters.net/celestia/)\n\t     under the GNU General Purpose License, version 2 or any later\n\t     version:\n\t     - Iapetus map is from dr. Fridger Schrempp (t00fri).\n\t4.5c The Amalthea, Europa, Ganymede, Gaspra,Mercury, Uranus, Neptune, Mimas,\n\t     Bianca, Epimetheus, Ida, Vesta, Hyperion, Io, Janus, Phoebe, Saturn, \n\t     Tethys, Venus, Ceres, Uranus, Epimetheus, Deimos, Proteus and comet\n             maps are processed by Oleg Pluton a.k.a Helleformer\n\t     License: Creative Commons Attribution 4.0 International\n\t4.5d The Titania, Umbriel, Pluto, Charon, Sedna and 2007 OR10 maps are created\n\t     by Kexitt and postprocessed by Oleg Pluton a.k.a Helleformer\n\t     License: Creative Commons Attribution 4.0 International\n\t4.5e The Ariel, Haumea, Miranda, Oberon and Nereid maps are created by \n\t     Snowfall and postprocessed by Oleg Pluton a.k.a Helleformer\n\t     License: Creative Commons Attribution 4.0 International\n\t4.5f The Eris and Dysnomia maps are created by MrSpace43 and postprocessed by \n\t     Oleg Pluton a.k.a Helleformer\n\t     License: Creative Commons Attribution 4.0 International\n\t4.5g The Rhea map are created by FarGetaNik and postprocessed by Oleg Pluton \n\t     a.k.a Helleformer\n\t     License: Creative Commons Attribution 4.0 International\n\t4.5i The Titan (Clouds) map are created by Magenta Meteorite and postprocessed\n\t     by Oleg Pluton a.k.a Helleformer\n\t     License: Creative Commons Attribution 4.0 International\n\t4.5k Callisto map is created by John van Vliet from PDS\n\t     data and modified by RVS. License: cc-by-sa.\n\t4.5l Dione and Enceladus maps are created by NASA (CICLOPS team) \n\t     from Cassini data, colored by RVS. Public domain.\n\t4.5m All other planet maps from David Seal's site:\n\t     http://maps.jpl.nasa.gov/   see license in section 10.2\n\t4.5n Bennu map is created by NASA from OSIRIS-REx spacecraft data. Public domain.\n\t     Full size mosaic: https://www.asteroidmission.org/bennu_global_mosaic/\n\t4.6 The fullsky milky way panorama is created by Axel Mellinger,\n\t    University of Potsdam, Germany. Further information and more\n\t    pictures available from\n\t    http://home.arcor-online.de/axel.mellinger/\n\t    License: permission given to \"Modify and redistribute this image\n\t    if proper credit to the original image is given.\"\n\t4.7 All messiers nebula pictures except those mentioned below from the\n\t    Grasslands Observatory : \"Images courtesy of Tim Hunter and\n\t    James McGaha, Grasslands Observatory at http://www.3towers.com.\"\n\t    License: permission given to \"use the image freely\" (including\n\t    right to modify and redistribute) \"as long as it is credited.\"\n\t4.8 M31 pictures come from LEE ang HG731GZ\n\t    License: Creative Commons Attribution 3.0 Unported\n\t4.9 Images of NGC4526, NGC6544, NGC6553, Sh2-261\n\t    from Yang Kai\n\t    License: public domain \n\t4.10 Images of M1, M27, M57, M97, NGC6946 from Stephane\n\t     Dumont\n\t4.11 Images of NGC856, NGC884 from Maxime Spano\n\t4.12 Constellation art, GUI buttons, logo created by Johan Meuris\n\t     (Jomejome) (jomejome at users.sourceforge.net)\n\t     http://www.johanmeuris.eu/\n\t     License: released under the Free Art License\n\t     (http://artlibre.org/licence.php/lalgb.html)\n\t     Icon created by Johan Meuris\n\t     License: Creative Commons Attribution-ShareAlike 3.0 Unported\n\t4.13 The \"earth-clouds\" texture includes imagery owned by NASA.\n\t     See NASA's Visible Earth project at http://visibleearth.nasa.gov/\n\t     License: 1. The imagery is free of licensing fees\n\t\t      2. NASA requires that they be provided a credit as the \n\t\t         owners of the imagery\n\t     The cloud texturing was taken from Celestia (GPL),\n\t     http://www.shatters.net/celestia/\n\t4.14 The folder icon derived from the Tango Desktop Project, used under\n\t     the terms of the Creative Commons Attribution Share-Alike\n\t     license.\n\t4.15 Images of NGC7317, NGC7319, NGC7320\n\t     from Andrey Kuznetsov, Kepler Observatory\n\t     http://kepler-observatorium.ru\n\t     License: Creative Commons Attribution 3.0 Unported\n\t4.16 Images of NGC2903, NGC3185, NGC3187, NGC3189,\n\t     NGC3190, NGC3193, NGC3718, NGC3729, NGC5981, NGC5982,\n\t     NGC5985\n\t     from Oleg Bryzgalov \n\t     http://olegbr.astroclub.kiev.ua/\n\t     License: Creative Commons Attribution 3.0 Unported\n\t4.17 Image of eta Carinae \n\t     from Harel Boren\n\t     http://www.pbase.com/\n\t     License: Creative Commons Attribution-Share Alike 4.0 International\n\t4.18 Images of IC1805\n\t     from Aldeabaran66\n\t     https://commons.wikimedia.org/wiki/\n\t     License: Creative Commons Attribution-Share Alike 4.0 International\n\t4.19 Images of M21, M47, NGC3324, NGC7590, RCW158\n\t     from Trevor Gerdes\n\t     http://www.sarcasmogerdes.com/\n\t4.20 Images of NGC1532\n\t     from users of Ice In Space\n\t     http://www.iceinspace.com.au/\n\t4.21 Images of NGC3293\n\t     from ESO/G. Beccari\n\t     http://eso.org/public/\n\t     License: Creative Commons Attribution 4.0 International\n\t4.22 Images of SMC (Magellanic Clouds) from Albert Van\n\t     Donkelaar\n\t4.23 Images of NGC1261, NGC3201, NGC4833, NGC5286, NGC6101, NGC6124,\n\t     NGC6352, NGC6397, NGC6541, NGC6752\n\t     from Tian Mai, Image processing: Sun Shuwei\n\t     License: Creative Commons Attribution 4.0 International\n\t4.24 The Vesta and Ceres map was taken from USGS website\n\t     https://astrogeology.usgs.gov/\n\t     and colored by RVS. License: public domain.\n\t4.25 Images of M15, M24, M51, M58, M63, M76, M81, M82, M96, M101,\n\t     M105, M106, IC405, IC443, IC1727, NGC246, NGC457, NGC467,\n\t     NGC470, NGC474, NGC488, NGC672, NGC691, NGC1514, NGC1961,\n\t     NGC2174, NGC2371, NGC2392, NGC2403, NGC2506, NGC2655, NGC2685,\n\t     NGC2805, NGC2814, NGC2820, NGC2841, NGC3079, NGC3166, NGC3227,\n\t     NGC3310, NGC3344, NGC3359, NGC3504, NGC3512, NGC3521, NGC3628,\n\t     NGC3938, NGC4151, NGC4274, NGC4535, NGC4559, NGC4631, NGC4656,\n\t     NGC4657, NGC5033, NGC5363, NGC7008, NGC7331, NGC7479,\n\t     NGC7635, NGC7640, NGC7789, PGC1803573, Barnard 142, Barnard 173,\n\t     Sh2-101, Sh2-188, LDN1235, Sadr region (Gamma Cygni), Medusa,\n\t     Jones-Emberson 1, NGC2146\n\t     from Peter Vasey, Plover Hill Observatory\n\t     http://www.madpc.co.uk/~peterv/\n\t4.26 Image of IC3568 from Howard Bond (Space Telescope Science Institute), Robin Ciardullo (Pennsylvania State University) and NASA\n\t     License: public domain\n\t4.27 Image of solar corona from eclipse 2008-08-01 by Georg Zotti\n\t4.28 Images of IC410, NGC2359 from Carole Pope\n\t     https://sites.google.com/site/caroleastroimaging/\n\t4.29 Images of NGC2261, NGC2818, NGC2936, NGC3314, NGC3690, NGC3918,\n\t     NGC4038-4039, NGC5257, NGC5307, NGC6027, NGC6050, NGC6369, NGC6826, NGC7742, IC883,\n\t     IC4406, PGC2248, UGC1810, UGC8335, UGC9618, Red Rectangle and Calabash Nebula\n\t     from NASA, ESA, the Hubble Heritage (STScI/AURA)-ESA/Hubble\n\t     Collaboration\n\t     License: public domain; http://hubblesite.org/copyright/\n\t4.30 Image of NGC40 from Steven Bellavia\n\t4.31 Images of NGC1579, NGC2467, NGC6590, Barnard Loop, IC342\n\t     from Sun Shuwei\n\t     License: public domain\n\t4.32 Images of M77, NGC3180, NGC5474, NGC6231, Sh2-264, Sh2-308, LDN1622\n\t     from Wang Lingyi\n\t     License: public domain\n\t4.33 Images of PGC6830, PGC29653, UGC5373 from Lowell Observatory\n\t     http://www2.lowell.edu/\n\t     License: public domain\n\t4.34 Images of M89, IC2220, IC2631, NGC1433, NGC2434, NGC3572, PGC10074,\t     \n\t     RCW32, RCW38, RCW49, Fornax Cluster, Virgo Cluster\n\t     from ESO/Digitized Sky Survey 2\n\t     http://eso.org/public/\n\t     License: Creative Commons Attribution 4.0 International \n\t4.35 Images of NGC3603 from ESO/La Silla Observatory\n\t     http://eso.org/public/\n\t     License: Creative Commons Attribution 4.0 International \n\t4.36 Images of NGC4228, NGC4244\n\t     from Ole Nielsen\n\t     License: Creative Commons Attribution-Share Alike 2.5 Generic \n\t4.37 Images of NGC2808, NGC7023, Hercules Cluster from NASA\n\t     License: public domain\n\t4.38 Images of M44, IC1396 from Giuseppe Donatiello\n\t     License: Creative Commons CC0 1.0 Universal Public Domain Dedication\n\t4.39 Images of M12, M14, M19, M20, M22, M55, M56, M62, M88, M92, M108, \n\t     IC5146, NGC225, NGC281, NGC663, NGC891, NGC1931, NGC6823, NGC7814\n\t     from Hewholooks\n\t     https://commons.wikimedia.org/wiki/\n\t     License: Creative Commons Attribution-Share Alike 3.0 Unported\n\t4.40 Images of NGC4565 from Ken Crawford\n\t     http://www.imagingdeepsky.com/\n\t     License: This work is free and may be used by anyone for any purpose.\n\t     If you wish to use this content, you do not need to request permission\n\t     as long as you follow any licensing requirements mentioned on this page.\n\t4.41 Images of M61, M64, M65, M66, M91, M99, M100, NGC613, NGC772, NGC918, NGC1042, NGC1360, NGC1398,\n\t     NGC1501, NGC1535, NGC1555, NGC2158, NGC2282, NGC2346, NGC2362, NGC2440, NGC2683, NGC2775, NGC3132,\n\t     NGC3242, NGC3486, NGC3750, NGC4170, NGC4216, NGC4361, NGC4395, NGC4414,,NGC4450, NGC4676, NGC4725,\n\t     NGC5216, NGC5248, NGC5426, NGC5466, NGC6302, NGC6522, NGC6543, NGC6563, NGC6781, NGC6894, NGC7000,\n\t     NGC7354, NGC7822, SH2-136, UGC3697, Abell31, Abell33, Abell39, Cassiopeia A, LBN438, Wild's Triplet\n\t     from Adam Block/Mount Lemmon SkyCenter/University of Arizona\n\t     http://www.caelumobservatory.com/\n\t     License: Creative Commons Attribution-Share Alike 3.0 Unported\n\t4.42 Images of IC1295, NGC134, NGC92, NGC55, NGC908, NGC936, NGC1232, NGC1313, NGC1316,\n\t     NGC1792, NGC1978, NGC2207, NGC2736, NGC3199, NGC3699, NGC3766, NGC3532, NGC4945, NGC5128, NGC5189,\n\t     NGC6362, NGC6537, NGC6769, NGC6822, NGC7793\n\t     from ESO\n\t     http://eso.org/public/\n\t     License: Creative Commons Attribution 4.0 International\n \t4.43 Images of M33, M42, NGC253, NGC5566, LBN782, the Pleiades from HG731GZ\n\t     License: Creative Commons Attribution 3.0 Unported\n\t4.44 Images of M8, M17, M94, M104, IC434, IC2944, IC4628, NGC2264, NGC5367, NGC6357,\n\t     NGC6334, NGC7293, LDN43, SMC (Hydrogen Alpha)\n\t     from Dylan O'Donnell\n\t     http://deography.com/\n\t     License: public domain\n\t4.45 Images of NGC247\n\t     No machine-readable source provided. Own work assumed (based on copyright claims).\n\t     No machine-readable author provided. Fany Toporenko assumed (based on copyright claims).\n\t     License: Permission is granted to copy, distribute and/or modify this document\n\t     under the terms of the GNU Free Documentation License, Version 1.2 or any later\n\t     version published by the Free Software Foundation; with no Invariant Sections,\n\t     no Front-Cover Texts, and no Back-Cover Texts. A copy of the license is\n\t     included in the section entitled GNU Free Documentation License.\n\t4.46 Images of Sh2-129\n\t     from Maurizio Cabibbo, post-processing: Sun Shuwei\n\t     https://commons.wikimedia.org/wiki/\n\t     License: Creative Commons Attribution-Share Alike 4.0 International\n\t4.47 Images of M16, IC4592, IC4601, NGC4236, NGC6914, Perseus Cluster\n\t     from Sun Gang\n\t     License: Creative Commons Attribution-Share Alike 3.0 Unported\n\t4.48 Images of NGC4651, NGC5906\n\t     from R. Jay GaBany\n\t     https://www.cosmotography.com/images/\n\t     License: Creative Commons Attribution-Share Alike 3.0 Unported\n\t4.49 Images of NGC7662\n\t     from Gianluca.pollastri\n\t     https://commons.wikimedia.org/wiki/\n\t     License: Creative Commons Attribution-Share Alike 4.0 International\n\t4.50 Images of M2, M3, M4, M5, M13, M10, M28, M30, M53, M54, M69, M71, M75, M78, M85, M102,\n\t     M107, IC10, NGC6144, PGC143, UGC12613\n\t     from Starhopper\n\t     https://commons.wikimedia.org/wiki/\n\t     License: Creative Commons Attribution-Share Alike 4.0 International\n\t4.51 Images of M95, NGC520, NGC660, NGC925, NGC1300, NGC4490, NGC6888, NGC7129, NGC7497\n\t     from Jschulman555\n\t     https://commons.wikimedia.org/wiki/\n\t     License: Creative Commons Attribution 3.0 Unported\n\t4.52 Images of M98\n\t     from Clh288\n\t     https://commons.wikimedia.org/wiki/\n\t     License: Creative Commons Attribution-Share Alike 2.5 Generic\n\t4.53 Images of NGC6818\n\t     from Robert Rubin (NASA/ESA Ames Research Center), Reginald Dufour and Matt Browning (Rice University), Patrick Harrington (University of Maryland), and NASA/ESA\n\t     https://www.spacetelescope.org/\n\t     License: Creative Commons Attribution 4.0 International\n\t4.54 Images of NGC6188\n\t     from Ivan Bok\n\t     https://commons.wikimedia.org/wiki/\n\t     License: Creative Commons Attribution 3.0 Unported\n\t4.55 Images of NGC6188\n\t     from Friendlystar\n\t     https://commons.wikimedia.org/wiki/\n\t     License: Creative Commons Attribution 3.0 Unported\n\t4.56 Images of NGC1023\n\t     from Fryns Fryns\n\t     https://commons.wikimedia.org/wiki/\n\t     License:  public domain\n\t4.57 Images of NGC1269, NGC3195\n\t     from Zhu Ying\n\t     License:  Creative Commons Attribution 3.0 Unported\n\t4.58 Images of IC2118, NGC1499\n\t     from Zhao Jingna\n\t     License:  Creative Commons Attribution 3.0 Unported\n\t4.59 Images of UGC10822\n\t     from Science NASA, ESA, Eduardo Vitral (STScI), Roeland van der Marel (STScI), Sangmo Tony Sohn (STScI), DSS Image Processing: Joseph DePasquale (STScI)\n\t     https://noirlab.edu/public/\n\t     License: Public domain\n\t4.60 Images of IC2169, NGC2244, NGC3077, SH2-155, SH2-263, Barnard 22, Barnard207,\n\t     Abell85\n\t     from Keesscherer\n\t     https://commons.wikimedia.org/wiki/\n\t     License:  Creative Commons Attribution-Share Alike 4.0 International\n\t4.61 Images of NGC3115\n\t     from Mi Lan\n\t     License:  Creative Commons Attribution 3.0 Unported\n\t4.62 Images of NGC3621\n\t     from ESO and Joe DePasquale\n\t     http://eso.org/public/\n\t     License: Creative Commons Attribution 4.0 International \n\t4.63 Images of NGC2547, Vela supernova remnant\n\t     from ESO/J.Perez\n\t     http://eso.org/public/\n\t     License: Creative Commons Attribution 4.0 International \n\t4.64 Images of M83\n\t     from TRAPPIST/E. Jehin/ESO\n\t     http://eso.org/public/\n\t     License: Creative Commons Attribution 4.0 International \n\t4.65 Images of IC2177, NGC288 \n\t     from Giuseppe Donatiello, post-processing: Sun Shuwei\n\t     https://flickr.com/photos/133259498@N05/\n\t     License: Creative Commons CC0 1.0 Universal Public Domain Dedication\n\t4.66 Images of IC1848, NGC1055\n\t     from Jeffjnet\n\t     http://www.iceinspace.com.au/\n\t     License: Creative Commons Attribution-Share Alike 3.0 Unported\n\t4.67 Images of NGC2867, NGC6884\n\t     from Howard Bond (ST ScI) and NASA/ESA\n\t     https://www.spacetelescope.org/\n\t     License: Creative Commons Attribution 4.0 International \n\t4.68 Images of NGC4567\n\t     from Klaus Hohmann\n\t     https://commons.wikimedia.org/wiki\n\t     License: Creative Commons Attribution-Share Alike 3.0 Germany\n\t4.69 Images of RCW53\n\t     from Kong Fanxi\n\t     License: Creative Commons Attribution-Share Alike 3.0 Unported\n\t4.70 Images of NGC5897\n\t     from San Esteban\n\t     http://www.astrosurf.com\n\t     License: Creative Commons Attribution-Share Alike 3.0 Unported\n\t4.71 Images of NGC6388\n\t     from ESO, F. Ferraro (University of Bologna)\n\t     http://eso.org/public/\n\t     License: Creative Commons Attribution 4.0 International \n\t4.72 Images of NGC7380, SH2-80, SH2-106\n\t     from Cristina Cellini\n\t     https://commons.wikimedia.org/wiki/\n\t     License: Creative Commons Attribution 4.0 International\n\t4.73 Images of NGC6744\n\t     from Zhuokai Liu, Jiang Yuhang\n\t     License: Creative Commons Attribution 4.0 International \n\t4.74 Images of NGC2170, SH2-240\n\t     from Rogelio Bernal Andreo\n\t     https://commons.wikimedia.org/wiki/\n\t     License: Creative Commons Attribution-Share Alike 3.0 Unported\n\t4.75 Images of VDB 152\n\t     from Hubble Space Telescope\n\t     https://commons.wikimedia.org/wiki/\n\t     License: Creative Commons Attribution-Share Alike 4.0 International\n\t4.76 Images of M72, NGC6905\n\t     from Tom Wildoner\n\t     https://commons.wikimedia.org/wiki/\n\t     License: Creative Commons Attribution-Share Alike 4.0 International\n\t4.77 Images of NGC2623\n\t     from NASA, ESA and A. Evans (Stony Brook University, New York, University of Virginia & National Radio Astronomy Observatory, Charlottesville, USA)\n\t     https://www.spacetelescope.org/\n\t     License: Creative Commons Attribution 4.0 International\n\t4.78 Images of IC4634, NGC3808, NGC5882, NGC6210, NGC6572, NGC6741\n\t     from ESA/Hubble & NASA\n\t     https://www.spacetelescope.org/\n\t     License: Creative Commons Attribution 4.0 International\n\t4.79 Images of NGC6240, PGC33423\n\t     from NASA, ESA, the Hubble Heritage (STScI/AURA)-ESA/Hubble Collaboration, and A. Evans (University of Virginia, Charlottesville/NRAO/Stony Brook University)\n\t     https://www.spacetelescope.org/\n\t     License: Creative Commons Attribution 4.0 International\n\t4.80 Images of UGC5470\n\t     from Friendlystar\n\t     https://ko.wikipedia.org/\n\t     License: Creative Commons Attribution 3.0 Unported\n\t4.81 Images of UGC6253, UGC9749\n\t     from Giuseppe Donatiello\n\t     https://en.wikipedia.org/\n\t     License: public domain\n\t4.82 Images of UGC10214\n\t     from NASA, Holland Ford (JHU), the ACS Science Team and ESA\n\t     https://www.spacetelescope.org/\n\t     License: Creative Commons Attribution 4.0 International\n\t4.83 Images of NGC6503, NGC7714, Hydra Cluster\n\t     from NASA, ESA, Digitized Sky Survey 2\n\t     https://www.spacetelescope.org/\n\t     License: Creative Commons Attribution 4.0 International\n\t4.84 Images of NGC2477\n\t     from Guillermo Abramson\n\t     https://commons.wikimedia.org/wiki/\n\t     License: Creative Commons Attribution 3.0 Unported\n\t4.85 Images of NGC4755\n\t     from ESO/Y. Beletsky\n\t     http://eso.org/public/\n\t     License: Creative Commons Attribution 4.0 International \n\t4.86 Images of NGC7538\n\t     from J. Aleu\n\t     https://commons.wikimedia.org/wiki/\n\t     License: public domain\n\t4.87 Images of IC2395, IC4756, NGC3114, NGC6025, NGC6087, NGC6633\n\t     from Roberto Mura\n\t     https://en.wikipedia.org/\n\t     License: Creative Commons Attribution-Share Alike 3.0 Unported\n\t4.88 Images of NGC362\n\t     from ESO/VISTA VMC\n\t     http://eso.org/public/\n\t     License: Creative Commons Attribution 4.0 International \n\t4.89 Images of NGC2997\n\t     from Adam Block/ChileScope\n\t     http://www.caelumobservatory.com/\n\t     License: Creative Commons Attribution-Share Alike 3.0 Unported\n\t4.90 Images of M74, NGC1788, NGC5053, Sh2-132, Coma Cluster, Leo Cluster, barnard150, LDN673\n\t     from Bart Delsaert\n\t     https://delsaert.com/\n\t     License: Creative Commons Attribution 3.0 Unported\n\t4.91 Images of NGC1333\n\t     from AAE-Agrupacio Astronomica d'Eivissa\n\t     https://commons.wikimedia.org/wiki/\n\t     License: Creative Commons Attribution-Share Alike 4.0 International\n\t4.92 Images of NGC5139\n\t     from Jose Mtanous\n\t     https://commons.wikimedia.org/wiki/\n\t     License: Creative Commons Attribution-Share Alike 3.0 Unported\n\t4.93 Images of NGC6960\n\t     from Jose Mtanous\n\t     https://commons.wikimedia.org/wiki/\n\t     License: public domain\n\t4.94 Images of NGC6445\n\t     from The Pan-STARRS1 Surveys (PS1) and the PS1 public science archive have been made possible through contributions by the Institute for Astronomy, the University of Hawaii, the Pan-STARRS Project Office, the Max-Planck Society and its participating institutes, the Max Planck Institute for Astronomy, Heidelberg and the Max Planck Institute for Extraterrestrial Physics, Garching, The Johns Hopkins University, Durham University, the University of Edinburgh, the Queen's University Belfast, the Harvard-Smithsonian Center for Astrophysics, the Las Cumbres Observatory Global Telescope Network Incorporated, the National Central University of Taiwan, the Space Telescope Science Institute, the National Aeronautics and Space Administration under Grant No. NNX08AR22G issued through the Planetary Science Division of the NASA Science Mission Directorate, the National Science Foundation Grant No. AST-1238877, the University of Maryland, Eotvos Lorand University (ELTE), the Los Alamos National Laboratory, and the Gordon and Betty Moore Foundation.\n\t     https://ps1images.stsci.edu/cgi-bin/ps1cutouts\n\t     License: public domain\n\t4.95 Images of LMC (Magellanic Clouds)\n\t     from ESO/R. Gendler and Sun Shuwei\n\t     http://eso.org/public/\n\t     License: Creative Commons Attribution 4.0 International. This work is a derivative of \"Map of the Large Magellanic Cloud\" and \"The entire Large Magellanic Cloud with annotations\" by ESO/R. Gendler, used under Creative Commons Attribution 4.0 International. This work is licensed under Creative Commons Attribution 4.0 International by Sun Shuwei.\n\t4.96 Images of rho Oph\n\t     from ESO/S. Guisard\n\t     http://eso.org/public/\n\t     License: Creative Commons Attribution 4.0 International \n\t4.97 Images of IC59, IC63\n\t     from Zhang Ruiping\n\t     License: Creative Commons Attribution 4.0 International \n\t4.98 Images of IC423\n\t     from Astrowicht\n\t     https://commons.wikimedia.org/wiki/\n\t     License: Creative Commons Attribution-Share Alike 3.0 Unported\n\t4.99 Images of IC418, IC4593, NGC5315, NGC6751\n\t     from NASA/ESA and The Hubble Heritage Team (STScI/AURA)\n\t     https://www.spacetelescope.org/\n\t     License: Creative Commons Attribution 4.0 International\n\t4.100 Images of NGC7009 from ESO/J. Walsh\n\t      http://eso.org/public/\n\t      License: Creative Commons Attribution 4.0 International\n\t4.101 Images of NGC7027 from Judy Schmidt\n\t      https://commons.wikimedia.org/wiki/\n\t      License: public domain \n\t4.102 Images of NGC6309, NGC6891 from Fabian RRRR\n\t      https://commons.wikimedia.org/wiki/\n\t      License: Creative Commons Attribution-Share Alike 3.0 Unported\n\t4.103 Images of NGC2022 from ESA/Hubble & NASA, R. Wade\n\t      https://www.spacetelescope.org/\n\t      License: Creative Commons Attribution 4.0 International\n\t4.104 Images of NGC654 from Antonio F. Sanchez\n\t      https://commons.wikimedia.org/wiki/\n\t      License: Creative Commons Attribution-Share Alike 4.0 International\n\t4.105 Images of NGC6496\n\t      from Mohamad Abbas\n\t      https://commons.wikimedia.org/wiki/\n\t      License: Creative Commons Attribution-Share Alike 3.0 Unported\n\t4.106 Images of PGC3589\n\t      from ESA/Hubble, Digitized Sky Survey 2\n\t      https://www.spacetelescope.org/\n\t      License: Creative Commons Attribution 4.0 International\n\t4.107 Images of NGC1672\n\t      from Davide De Martin (ESA/Hubble), the ESA/ESO/NASA Photoshop FITS Liberator & Digitized Sky Survey 2\n\t      https://www.spacetelescope.org/\n\t      License: Creative Commons Attribution 4.0 International\n\t4.108 Images of NGC4298\n\t      from NASA, ESA, Digitized Sky Survey 2; Acknowledgement: Davide De Martin\n\t      https://www.spacetelescope.org/\n\t      License: Creative Commons Attribution 4.0 International\n\t4.109 Images of NGC1502\n\t      from Kamil Pecinovsky\n\t      https://commons.wikimedia.org/wiki/\n\t      License: Creative Commons Attribution-Share Alike 4.0 International\n\t4.110 Images of NGC752\n\t      from Tayson82\n\t      https://commons.wikimedia.org/wiki/\n\t      License: Creative Commons Attribution-Share Alike 4.0 International\n\t4.111 Images of Sh2-170\n\t      from Wang Wei\n\t      License: Creative Commons Attribution-Share Alike 3.0 Unported\n\t4.112 Images of NGC2613\n\t      from ESO/IDA/Danish 1.5 m/R. Gendler, J.-E. Ovaldsen, C. Thone and C. Feron\n\t      http://eso.org/public/\n\t      License: Creative Commons Attribution 4.0 International\n\t4.113 The miscWorldMap.jpg image was created from NASA Blue Marble Next Generation\n\t      dataset for July 2004. Public domain.\n\t      https://visibleearth.nasa.gov/images/74092/july-blue-marble-next-generation\n\t4.114 Images of M80\n\t      from NOIRLab/NSF/AURA, post-processing: Sun Shuwei \n\t      https://commons.wikimedia.org/wiki/\n\t      License: Creative Commons Attribution 4.0 International\n\t4.115 Images of Dark Doodad Nebula, IC1613, NGC300, NGC1216, NGC1365, NGC4372\n\t      from Hansjorg Walchli, post-processing: Sun Shuwei\n\t      https://www.deepskycorner.ch/index.de.php\n\t      License: Creative Commons Attribution 4.0 International\n\t4.116 Images of NGC1566, NGC1808\n\t      from Dark Energy Survey/DOE/FNAL/DECam/CTIO/NOIRLab/NSF/AURA, Image processing: T.A. Rector (University of Alaska Anchorage/NSF NOIRLab), J. Miller (Gemini Observatory/NSF NOIRLab), M. Zamani & D. de Martin (NSF NOIRLab), post-processing: Sun Shuwei\n\t      https://www.deepskycorner.ch/index.de.php\n\t      License: Creative Commons Attribution 4.0 International\n\t4.117 Images of NGC185, NGC4449\n\t      from Thedarksideobservatory, post-processing: Sun Shuwei\n\t      https://commons.wikimedia.org/wiki/\n\t      License: Creative Commons Attribution-Share Alike 4.0 International\n\t4.118 Images of NGC5005\n\t      from KPNO/NOIRLab/NSF/AURA/Ray and Emily Magnani/Adam Block\n\t      https://commons.wikimedia.org/wiki/\n\t      License: Creative Commons Attribution 4.0 International\n\t4.119 Images of M90, M109, IC348, IC5076, NGC80, NGC147, NGC404, NGC1491, NGC1569,\n\t      NGC1624, NGC7026, NGC7048\n\t      from Radek Chromik, post-processing: Sun Shuwei\n\t      https://www.deepskycorner.ch/index.de.php\n\t      License: Creative Commons Attribution 4.0 International\n\t4.120 Images of NGC1097\n\t      from Eduard von Bergen & Hansjorg Walchli, post-processing: Sun Shuwei\n\t      https://www.deepskycorner.ch/index.de.php\n\t      License: Creative Commons Attribution 4.0 International\n\t4.121 Images of IC2574, Sh2-313\n\t      from Jerry Macon, post-processing: Sun Shuwei\n\t      https://commons.wikimedia.org/wiki/\n\t      License: Creative Commons Attribution 4.0 International\n\t4.121 Images of NGC5395\n\t      from KPNO/NOIRLab/NSF/AURA/Doug Matthews and E. J. Jones/Adam Block, post-processing: Sun Shuwei\n\t      https://commons.wikimedia.org/wiki/\n\t      License: Creative Commons Attribution 4.0 International\n\t4.122 Images of RCW77\n\t      from KPNO/NOIRLab/NSF/AURA/Doug Matthews and E. J. Jones/Adam Block, post-processing: Sun Shuwei\n\t      https://esahubble.org/\n\t      License: public domain\n\t4.123 Images of Sh2-216\n\t      from Ram samudrala, post-processing: Sun Shuwei\n\t      https://commons.wikimedia.org/wiki/\n\t      License: Creative Commons Attribution 4.0 International\n\t4.124 Images of Sh2-174, Sh2-239\n\t      from T.A. Rector (University of Alaska Anchorage) and H. Schweiker (WIYN and NOIRLab/NSF/AURA), post-processing: Sun Shuwei\n\t      https://noirlab.edu/public/\n\t      License: Creative Commons Attribution 4.0 International\n\t4.125 Images of Sh2-82, Sh2-91\n\t      from Sebastian Goralik, post-processing: Sun Shuwei\n\t      https://flickr.com/photos/sebastiangoralik/\n\t      License: Creative Commons CC0 1.0 Universal Public Domain Dedication\n\t4.126 Images of NGC4976\n\t      from ESO/Dss2, Giuseppe Donatiello, post-processing: Sun Shuwei\n\t      https://flickr.com/photos/133259498@N05/\n\t      License: Creative Commons CC0 1.0 Universal Public Domain Dedication\n\t4.127 Images of NGC3109\n\t      from DESI LIS, Giuseppe Donatiello, post-processing: Sun Shuwei\n\t      https://flickr.com/photos/133259498@N05/\n\t      License: Creative Commons CC0 1.0 Universal Public Domain Dedication\n\t4.128 Images of Sh2-157\n\t      from Sebastian Goralikpost-processing: Sun Shuwei\n\t      https://flickr.com/photos/sebastiangoralik/\n\t      License: Creative Commons CC0 1.0 Universal Public Domain Dedication\n\t4.129 Images of Sh2-1\n\t      from Nicolarge, post-processing: Sun Shuwei\n\t      https://commons.wikimedia.org/wiki/\n\t      License: Creative Commons Attribution-Share Alike 4.0 International \n\t4.130 Images of RCW86\n\t      from CTIO/NOIRLab/NSF/AURA/T.A. Rector (University of Alaska Anchorage/NSF NOIRLab) Image processing: T.A. Rector (University of Alaska Anchorage/NSF NOIRLab), M. Zamani (NSF NOIRLab) & D. de Martin (NSF NOIRLab), post-processing: Sun Shuwei\n\t      https://noirlab.edu/public/\n\t      License:  Creative Commons Attribution 4.0 International\n\t4.131 Images of NGC7318\n\t      from Juan lacruz, post-processing: Sun Shuwei\n\t      https://commons.wikimedia.org/wiki/\n\t      License: Creative Commons Attribution-Share Alike 4.0 International \n\t4.132 Images of IC1505, NGC70, NGC529, NGC1530, NGC2366, NGC6621, NGC6951,\n\t      NGC7139, NGC7741, Jones1\n\t      from Juan lacruz, post-processing: Sun Shuwei\n\t      https://commons.wikimedia.org/wiki/\n\t      License: Creative Commons Attribution 4.0 International\n\t4.133 Images of NGC6726, LBN437, LDN1251\n\t      from Manuel Peitsch, post-processing: Sun Shuwei\n\t      https://manuel-astro.ch/\n\t      License: Creative Commons Attribution 4.0 International\n\t4.134 Images of NGC2442, NGC2899\n\t      from ESO, post-processing: Sun Shuwei\n\t      http://eso.org/public/\n\t      License: Creative Commons Attribution 4.0 International\n\t4.135 Images of NGC2579\n\t      from Legacy Surveys / D.Lang (Perimeter Institute) & Meli thev, post-processing: Sun Shuwei\n\t      https://www.legacysurvey.org/acknowledgment\n\t      License: Creative Commons Attribution-Share Alike 4.0 International\n\t4.135 Images of Sh2-113\n\t      from Chuck Ayoub, post-processing: Sun Shuwei\n\t      https://commons.wikimedia.org/wiki/\n\t      License: Creative Commons CC0 1.0 Universal Public Domain Dedication\n\t4.136 Images of M49, M59, M60, NGC 6934\n\t      from Sloan Digital Sky Survey\n\t      https://live-sdss4org-dr14.pantheonsite.io/\n\t      License:  Creative Commons Attribution 4.0 International \n```\n\n## Appendix\n```\n1 Full credits for image 4.2\n\tAuthor: Reto Stockli, NASA Earth Observatory,\n\t\trstockli (at) climate.gsfc.nasa.gov\n\tAddress of correspondence:\n\t\tReto Stockli\n\t\tETH/IAC (NFS Klima) & NASA/GSFC Code 913 (SSAI)\n\t\tUniversity Irchel\n\t\tBuilding 25 Room J53\n\t\tWinterthurerstrasse 190\n\t\t8057 Zurich, Switzerland\n\tPhone:  +41 (0)1 635 5209\n\tFax:    +41 (0)1 362 5197\n\tEmail:  rstockli (at) climate.gsfc.nasa.gov\n\thttp://earthobservatory.nasa.gov\n\thttp://www.iac.ethz.ch/staff/stockli\n\tSupervisors:\n\t\tFritz Hasler and David Herring, NASA/Goddard Space Flight Center\n\tFunding:\n\t\tThis project was realized under the SSAI subcontract 2101-01-027\n\t\t(NAS5-01070)\n\n\tLicense :\n\t\t\"Any and all materials published on the Earth Observatory are\n\t\tfreely available for re-publication or re-use, except where\n\t\tcopyright is indicated.\"\n\n2 License for the JPL planets images\n(http://www.jpl.nasa.gov/images/policy/index.cfm)\n\n    Unless otherwise noted, images and video on JPL public web sites (public\n    sites ending with a jpl.nasa.gov address) may be used for any purpose\n    without prior permission, subject to the special cases noted below.\n    Publishers who wish to have authorization may print this page and retain\n    it for their records; JPL does not issue image permissions on an image\n    by image basis.  By electing to download the material from this web site\n    the user agrees:\n    1. that Caltech makes no representations or warranties with respect to\n       ownership of copyrights in the images, and does not represent others\n       who may claim to be authors or owners of copyright of any of the\n       images, and makes no warranties as to the quality of the images.\n       Caltech shall not be responsible for any loss or expenses resulting\n       from the use of the images, and you release and hold Caltech harmless\n       from all liability arising from such use.\n    2. to use a credit line in connection with images. Unless otherwise\n       noted in the caption information for an image, the credit line should\n       be \"Courtesy NASA/JPL-Caltech.\"\n    3. that the endorsement of any product or service by Caltech, JPL or\n       NASA must not be claimed or implied.\n    Special Cases:\n    * Prior written approval must be obtained to use the NASA insignia logo\n      (the blue \"meatball\" insignia), the NASA logotype (the red \"worm\"\n      logo) and the NASA seal. These images may not be used by persons who\n      are not NASA employees or on products (including Web pages) that are\n      not NASA sponsored. In addition, no image may be used to explicitly\n      or implicitly suggest endorsement by NASA, JPL or Caltech of\n      commercial goods or services. Requests to use NASA logos may be\n      directed to Bert Ulrich, Public Services Division, NASA Headquarters,\n      Code POS, Washington, DC 20546, telephone (202) 358-1713, fax (202)\n      358-4331, email bert.ulrich@hq.nasa.gov.\n    * Prior written approval must be obtained to use the JPL logo (stylized\n      JPL letters in red or other colors). Requests to use the JPL logo may\n      be directed to the Television/Imaging Team Leader, Media Relations\n      Office, Mail Stop 186-120, Jet Propulsion Laboratory, Pasadena CA\n      91109, telephone (818) 354-5011, fax (818) 354-4537.\n    * If an image includes an identifiable person, using the image for\n      commercial purposes may infringe that person's right of privacy or\n      publicity, and permission should be obtained from the person. NASA\n      and JPL generally do not permit likenesses of current employees to\n      appear on commercial products. For more information, consult the NASA\n      and JPL points of contact listed above.\n    * JPL/Caltech contractors and vendors who wish to use JPL images in\n      advertising or public relation materials should direct requests to the\n      Television/Imaging Team Leader, Media Relations Office, Mail Stop\n      186-120, Jet Propulsion Laboratory, Pasadena CA 91109, telephone\n      (818) 354-5011, fax (818) 354-4537.\n    * Some image and video materials on JPL public web sites are owned by\n      organizations other than JPL or NASA. These owners have agreed to\n      make their images and video available for journalistic, educational\n      and personal uses, but restrictions are placed on commercial uses.\n      To obtain permission for commercial use, contact the copyright owner\n      listed in each image caption.  Ownership of images and video by\n      parties other than JPL and NASA is noted in the caption material\n      with each image.\n```\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 74.296875,
          "content": "24.4 [2024-12-22]\nThe Stellarium Team has released final version in this year - 24.4.\n\nThe major changes of this version:\n- Changed in DSO rendering\n- Improvements in Core\n- Improvements in Telescope Control plugin\n- Updates in sky cultures\n\nBehind the scenes, many more minor issues were fixed.\n\n24.3 [2024-09-22]\nThe Stellarium Team has released version 24.3.\n\nThe major changes of this version:\n- Performance improvements for computation of Solar system bodies positions\n- Improvements in plugins and AstroCalc tools\n- Updates in sky cultures\n- Updates in GUI\n\nBehind the scenes, many more minor issues were fixed.\n\nTELESCOPE USERS\n\nWe have identified and fixed some bugs in the TelescopeControl plugin on\nthe Qt6-based releases.\n\nTelescope users, please try whether this solves your problems.\nIf not, we are looking for those of you with programming skills to help\nus fixing remaining issues. Reward possible!\n\n24.2 [2024-06-23]\nThe Stellarium Team has released version 24.2.\n\nThe major changes of this version:\n- Improvements in plugins and AstroCalc tools\n- Updates in sky cultures\n- Updates in GUI\n\nBehind the scenes, many more minor issues were fixed.\n\nTELESCOPE USERS\n\nWe have identified and fixed some bugs in the TelescopeControl plugin on\nthe Qt6-based releases.\n\nTelescope users, please try whether this solves your problems.\nIf not, we are looking for those of you with programming skills to help\nus fixing remaining issues. Reward possible!\n\n24.1 [2024-03-25]\nThe Stellarium Team has released version 24.1.\n\nThe major changes of this version:\n- Added low graphics mode\n- Improvements in plugins and AstroCalc tools\n- Improvements in Scripting Engine\n- Updates in Core\n\nBehind the scenes, many more minor issues were fixed.\n\nTELESCOPE USERS\n\nWe have identified and fixed some bugs in the TelescopeControl plugin on\nthe Qt6-based releases.\n\nTelescope users, please try whether this solves your problems.\nIf not, we are looking for those of you with programming skills to help\nus fixing remaining issues. Reward possible!\n\n23.4 [2023-12-23]\nThe Stellarium Team has released version 23.4.\n\nThe major changes of this version:\n- New plugin: Lens Distortion Estimator (experimental)\n- Changed GUI: ability to change the look via normalStyle.css\n- Added new MESA for Windows packages\n- Added support Windows/ARM64 packages\n- Added support the origins of nomenclature names\n- Improvements in plugins and AstroCalc tools\n- Improvements for performance on macOS/ARM64\n\nBehind the scenes, many more minor issues were fixed.\n\nTELESCOPE USERS\n\nWe have identified and fixed some bugs in the TelescopeControl plugin on\nthe Qt6-based releases.\n\nTelescope users, please try whether this solves your problems.\nIf not, we are looking for those of you with programming skills to help\nus fixing remaining issues. Reward possible!\n\n23.3 [2023-09-25]\nThe Stellarium Team has released version 23.3.\n\nThe major changes of this version:\n- New plugin: Missing Stars\n- Allow semitransparent landscapes\n- Added discovery circumstances for Solar system bodies\n- Improve orbit drawing for minor bodies\n- Show named impact features as ellipses\n- Major changes in Navigational Stars plugin\n- Observing List fixes\n- Unambiguous comet names\n\nBehind the scenes, many more minor issues were fixed.\n\nTELESCOPE USERS\n\nWe have identified and fixed some bugs in the TelescopeControl plugin on\nthe Qt6-based releases.\n\nTelescope users, please try whether this solves your problems.\nIf not, we are looking for those of you with programming skills to help\nus fixing remaining issues. Reward possible!\n\n23.2 [2023-07-02]\nThe Stellarium Team has released version 23.2.\n\nThe major changes of this version:\n- vectorize marker of deep-sky objects\n- updated support locations\n- discovery circumstances for solar system objects\n\nBehind the scenes, many more minor issues were fixed.\n\nTELESCOPE USERS\n\nLike in the 1.* series, it seems the TelescopeControl plugin at least on\nWindows works better in the Qt5-based releases. Just install this if you\nare affected. We are looking for telescope users with programming skills\nto help us fixing this issue. Reward possible!\n\n23.1 [2023-03-27]\nThe Stellarium Team has released version 23.1.\n\nFrom now on, releases will have version numbers indicating a year.release \nscheme. For Windows, the version of the Qt framework used is visible as part \nof the package name. Details are in the User Guide.\n\nPLEASE UPDATE!\n\nThis issue mitigates a potential security issue (reported as CVE-2023-28371), \nwhere scripts were allowed to write output text and screenshots to other places \non users' systems apart from the Stellarium user data directory or configured \nscreenshot directory. Running unknown scripts (which is a Bad Idea(tm) to begin \nwith) could have exploited that by attackers (script authors) writing even \ncommand files to vulnerable places. We have not received a report where this\nwould have caused a problem.\n\nHowever, now users must explicitly allow such behaviour in the settings\ntab of the Script Console.\n\nApart from that, this release mostly aimed at fixing issues in the 1.*\nseries, but also brought a few new features:\n- Much improved \"Solar System observer\" and other \"Planet observers\".\n- Solar dates along the ecliptic\n- Fixed issues with Observation Lists, and removed need for the extra\n  edit dialog.\n- Updated shader code for smoother projection\n- Allow texture decimation on the fly for very weak systems like\n  Raspberry Pi 3.\n- Solar limb darkening\n- Proper shadow edge for satellites\n\nBehind the scenes, many more minor issues were fixed.\n\nTELESCOPE USERS\n\nLike in the 1.* series, it seems the TelescopeControl plugin at least on\nWindows works better in the Qt5-based releases. Just install this if you\nare affected. We are looking for telescope users with programming skills\nto help us fixing this issue. Reward possible!\n\n1.2 [2022-12-25]\nThe Stellarium Team has released version 1.2.\n\nThis release mostly aimed at fixing issues but also brought a few new features:\n- New projection: Equirectangular (fills the screen)\n- Improved rendering of Milky Way, Zodiacal Light and landscapes\n- Improved rendering of the Moon\n- Improved HiDPI behaviour\n- Use Noto as default font\n- Added Modern (IAU), Tikuna and Seri sky cultures\n- Added Chinese and Bahai calendars (Calendars plugin)\n\nBehind the scenes, several minor issues were fixed.\n\n1.1 [2022-10-31]\nThe major changes of this version:\n- Added support OpenGL 3.3 Core profile\n- Changed core: switch to use CalcMySky v0.2.1\n- Changed GUI: allow user CSS\n- Fixed compiling with Qt 6.4\n- Fixed Telescope Control plugin\n\n1.0 [2022-10-01]\nThe Stellarium team did it. Stellarium 1.0 is here!\n\nWhat makes this 1.0?\n\n- After more than 20 years of development the program is finally accurate \n  enough for historical application.\n- This is the first release based on the Qt6 framework, so the project is \n  safe for future development. These packages are tagged with a version \n  number like 1.22.3.\n- We keep releasing Qt5-based packages for legacy or obsolete systems. \n  This may include many Windows users who have to run ANGLE mode.\n  These packages are tagged with a version number like 0.22.3.\n\nWhat is new for users?\n\n- A new, much better skylight model (Not for MacOS and OpenGL ES2 systems, \n  sorry.)\n- Many details around eclipses\n- Updated Observation List features\n- New features in AstroCalc tool\n- HiDPI improvements\n- Better dithering\n- Able to use Windows location service (Windows)\n- New skyculture: Samoan\n- Updated several skycultures\n- Updates in Angle Measure, Satellites, Oculars, Remote Control, Pulsars \n  plugins\n- Many more bugfixes.\n\nA huge thanks to the people who helped us a lot by reporting bugs, and\nespecially contributed in development!\n\nClear Skies!\n\nAlexander and Georg\n\n0.22.2 [2022-07-07]\nThe major changes of this version:\n- Added recognition licenses for skycultures\n- Many improvements in the Satellites plugin, esp. display of earth shadow\n  and filtering\n- Improvements in AstroCalc: graphs, eclipses, transits\n- Improvements in Meteor Showers, Exoplanets and the Navigational Stars plugins\n- Updated DSO catalog\n- Fixed ANGLE mode for some rare cases\n- A large number of bug fixes and closed feature requests and enhancements\n  (see full list of changes).\n\nBehind the scenes, we are preparing for a major upgrade of the internal\nQt framework.\n\nEnjoy!\n\nAlexander and Georg\n\n0.22.1 [2022-04-16]\nThe major changes of this version:\n- Added fixed equatorial grid/line\n- Added new sky cultures\n- Fixed building Stellarium (AppImage)\n- Updated DSO catalog\n\n0.22.0 [2022-03-27]\nThe major changes of this version:\n- AstroCalc: Eclipse Finder\n- AstroCalc: RTS (Rises, Transits, Settings)\n- Switch from Bortle scale to physical brightness values for light pollution.\n- Allow tweaks for the atmosphere brightness/color model and tone mapping\n- Several new calendars in the Calendars plugin\n- Seasonal polar caps on Mars\n- New and improved sky cultures\n- Larger textures allowed in Scenery3D\n- Improved OnlineQueries and Satellites plugin\n- Many fixes in core and plugins.\n- Technical preparations towards a major upgrade of the internal Qt framework.\n\n0.21.3 [2021-12-25]\nThe major changes of this version:\n- Better handling of minor bodies with outdated orbital elements\n- \"Goto next day at same altitude\" functionality for selected objects\n- Mark a few special points on the planets\n- Three refined Arab skycultures\n- Updated Mul-Apin skyculture with new artwork\n- Improved OnlineQueries and Satellites plugin\n- Fixed a problem with LX200 telescopes\n- Many fixes in core and plugins\n\n0.21.2 [2021-09-27]\nThe major changes of this version:\n- Annual aberration correction. Planet positions are finally very accurate!\n- Bookmarks replaced by Observation Lists\n- Politically neutral geonames\n- Right-click opens plugin configuration\n- Improved computation of rising, transit, setting times\n- \"Goto next twilight\" functionality\n- Two new Greek skycultures\n- Updated Mul-Apin skyculture with new artwork\n- Improved fidelity of Lunar eclipses\n- Fixed display of stellar proper motion\n- Many fixes in core and plugins\n\n0.21.1 [2021-06-24]\nThe major changes of this version:\n- Updated designations of stars and handling of list of designations \n  and common names those stars\n- Updated Almagest and al-Sufi skycultures\n- Many changes in plugins\n- Many fixes in core and plugins for support HiDPI devices\n- Enhancements in visualization of markings and in scripting engine\n\n0.21.0 [2021-03-28]\nThe major changes of this version:\n- We have finally completed our work on accurate planet axes, \n  including Lunar libration\n- Visualisation of Earth shadow for Lunar eclipses\n- Better texture for the Lunar surface\n- Added the latest algorithms for planet magnitudes\n- Enhanced Calendars plugin\n- Replaced \"arabic\" by more accurate \"al-Sufi\" skyculture\n- Planets are now scalable and Solar glare switchable for didactic \n  applications\n\nWe have also published a scientific paper about the application of\nStellarium in cultural astronomy: https://doi.org/10.1558/jsa.17822\n\n0.20.4 [2020-12-28]\nThe major changes of this version:\n- Added Calendars plugin\n- Many changes in AstroCalc tool and core of Stellarium\n- Many changes in plugins\n- Updated DSO catalog\n\n0.20.3 [2020-09-27]\nThe major changes of this version:\n- Fixed nutation and, with it, season beginning times\n- Many changes in AstroCalc tool and core of Stellarium\n- Many changes in Oculars and Satellites plugins\n- Updated DSO catalog\n\n0.20.2 [2020-06-22]\nThe major changes of this version:\n- Many changes in AstroCalc tool and core of Stellarium\n- Many changes in scripting engine and Script Console\n- Many changes in Oculars and Satellites plugins\n- Updated DSO catalog\n\n0.20.1 [2020-04-20]\nThe major changes of this version:\n- Restore working Stellarium in ANGLE mode on Window\n- Many changes in scripting engline and Script Console\n- Fixes in GUI and plugins\n- Updated DSO catalog\n\n0.20.0 [2020-03-29]\nThe major changes of this version:\n- Refactoring and updating the GUI\n- Deep refactoring code, related to Solar system\n- Many improvements in the code of plugins\n\n0.19.3 [2019-12-22]\nThe major changes of this version:\n- Direct ASCOM support for Telescope Control plugin on Windows\n- Refactoring the GUI\n- Many improvements in the code\n- Added many DSO textures\n- Improvements in DSO catalog\n- Many improvements in AstroCalc tool\n\n0.19.2 [2019-09-29]\nThe second bugfix release for series 0.19\n\n0.19.1 [2019-06-22]\nThe first bugfix release for series 0.19\n\n0.19.0 [2019-03-24]\nThe major changes of this version:\n- 5 new sky cultures\n- Refactoring the code: many improvements and fixes\n- Added many DSO textures\n- Many improvements for Scripting Engine\n\n0.18.3 [2018-12-22]\nThe major changes of this version:\n- Improvements and fixes for AstroCalc tool\n- Added new sky cultures\n- Added many DSO textures\n- Refactoring the GUI\n- Many improvements in the code\n\n0.18.2 [2018-08-15]\nThe major changes of this version:\n- Improvements and fixes for AstroCalc tool and plugins\n- Added support Abell Catalog of Planetary Nebulae and ESO/Uppsala Survey of the ESO(B) Atlas\n- Added few new scripts\n- Updated code and data\n\n0.18.1 [2018-07-01]\nThe major changes of this version:\n- Improvements and fixes for Hierarchical Progressive Surveys [HiPS] support\n- Updated code of plugins\n- Updated code and data\n- Updated GPS handling\n- Added rise, transit and set times for celestial objects\n- Added dithering support\n\n0.18.0 [2018-03-25]\nThe major changes of this version:\n- Added support Hierarchical Progressive Surveys [HiPS] (Hello visualization of \n  multiwavelength universe in the Stellarium)\n- Updated and extended AstroCalc tool\n- Added support a Hickson Compact Group collection\n- Updated code and data\n\n0.17.0 [2017-12-21]\nVersion 0.17.0 is based on Qt 5.9.3, but it can still be built from sources with Qt 5.4.\n\nThe major changes of this version:\n- Added support for nomenclature of planetary surface (SOCIS 2017 project)\n- Added improvements for AstroCalc tool\n- Added improvements for Oculars plugin\n- Added improvements for Exoplanets plugin\n- Added INDI support for Telescope Control plugin\n- Updated code and data\n\n0.16.1 [2017-09-22]\nVersion 0.16.1 is based on Qt 5.6.2, but it can still be built from sources with Qt 5.4.\nThis version is bugfix release with some important features:\n- Added moons of Saturn, Uranus and Pluto\n- Added improvements for AstroCalc tool\n- DSO catalog was updated to version 3.2:\n-- Added support 'The Strasbourg-ESO Catalogue of Galactic Planetary Nebulae' (Acker+, 1992)\n-- Added support 'A catalogue of Galactic supernova remnants' (Green, 2014)\n-- Added support 'A Catalog of Rich Clusters of Galaxies' (Abell+, 1989)\n- Added support asterisms and outlines for DSO\n- Added improvements for the GUI\n\nFull list of changes: https://launchpad.net/stellarium/0.16/0.16.1\n\n0.16.0 [2017-06-21]\nVersion 0.16.0 is based on Qt5.6.2. It can still be built from sources with Qt5.4. \n\n5 blueprints and 38 bugs and wishlist items have been targeted.\nNew features include\n- RemoteSync plugin, which allows running several connected instances of Stellarium. \n- Non-spherical models for solar system objects like asteroids and small moons. \n- Solar system config file is now split into two parts. \n- AstroCalc feature extension: What's Up Tonight, graphs, ... \n- DSO: Addition of catalogs of peculiar galaxies \n- New Skycultures: Belarusian, Hawaiian Star Lines\n- Telescope plugin: support for the RTS2 telescope system.\n- Location can now be read from a GPS device.\n\nFull list of changes: https://launchpad.net/stellarium/0.16/0.16.0\n\n0.15.2 [2017-03-21]\nThe Stellarium development team after three months of development is proud to announce \nthe second correcting release of Stellarium in series 0.15.x - version 0.15.2. This \nversion contains few closed bugs (ported from series 1.x) and some new additions and \nimprovements.\n\nA huge thanks to our community whose contributions help to make Stellarium better!\n\nFull list of changes: https://launchpad.net/stellarium/0.15/0.15.2\n\n0.15.1 [2016-12-25]\n\nVersion 0.15.1 introduces a few new exciting features.\n- The Digital Sky Survey (DSS) can be shown (requires online connection).\n- AstroCalc is now available from the main menu and gives interesting new computational insight.\n- Stellarium can act as Spout sender (important for multimedia environments; Windows only).\nIn addition, a lot of bugs have been fixed.\n- wait() and waitFor() in the Scripting Engine no longer inhibits performance of moves.\n- DE430/431 DeltaT may be OK now. We still want to test a bit more, though.\n- ArchaeoLines also offers two arbitrary declination lines.\n- Added support of time zones dependent by location.\n- Added new skyculture: Sardinian.\n- Added updates and improvements in catalogs.\n- Added improvements in the GUI.\n- Added cross identification data for stars from Bright Star Catalogue, 5th Revised Ed. (Hoffleit+, 1991).\n\nFull list of changes: https://launchpad.net/stellarium/0.15/0.15.1\n\n0.15.0 [2016-07-31]\nIn memory of our team member Barry Gerdes.\n\nVersion 0.15.0 is based on Qt5.6. Starting with this version, some graphics cards \nhave been blacklisted by Qt and are automatically forced to use ANGLE on Windows. \nWe introduce a major internal change with the StelProperty system. \nThis allows simpler access to internal variables and therefore more ways of operation. \nMost notably this version introduces an alternative control option via RemoteControl, \na new webserver interface plugin. \nWe also introduce another milestone towards providing better astronomical accuracy for \nhistorical applications: experimental support of getting planetary positions from JPL DE430 and \n  DE431 ephemerides. This feature is however not fully tested yet. \n\n- Added StelProperty system\n- Added new plugin for exhibitions and planetariums - Remote Control\n- Added new skycultures: Macedonian, Ojibwe, Dakota/Lakota/Nakota, \n  Kamilaroi/Euahlayi\n- Updated code of plugins\n- Added Bookmarks tool and updated AstroCalc tool\n- Added new functions for Scripting Engine and new scripts\n- Added Miller Cylindrical Projection\n- Added updates and improvements in DSO and star catalogues (include initial \n  support of The Washington Double Star Catalog)\n- azimuth lines (also targetting geographic locations) in ArchaeoLines plugin\t\n- Many fixes and improvements...\n\nIn addition, we prepared a new user guide.\n\t\nFull list of changes: https://launchpad.net/stellarium/0.15/0.15.0\n\n0.14.3 [2016-03-20]\nBugfix release:\n- Added Bengali description for landscapes (LP: #1548627)\n- Added background transparency in Oculars plugin (LP: #1511393)\n- Fixed serial port issue on Windows version (LP: #1543813)\n- Fixed MESA mode on Windows (LP: #1509735)\n- Fixed Stellarium crashes in ocular view of Saturn/Neptune/Uranus (LP: #1495232)\n- Fixed artifacts in rendering of Mercury in the Sun (LP: #1533647)\n- Fixed loading scenes for Scenery 3D plugin (LP: #1533069)\n- Fixed movement of radiant when time is switched manually (LP: #1535950)\n- Fixed changing name of planet (LP: #1548008)\n\n0.14.2 [2016-01-08]\nBugfix release:\n- Reduce planet brightness in daylight (LP: #1503248)\n- Fixed perspective mode with offset viewport in scenery3d (LP: #1509728)\n- Fixed wrong altitudes for some locations (LP: #1530759)\n- Fixed some skyculture links\n- Fixed editing some shortcut keys (LP: #1530567)\n- Fixed drawing reticle for telescope (LP: #1526348)\n- Refactoring coloring markers of the DSO\n- Removed info about Moon phases (avoid inconsistency for strings).\n- Updated default config options\n- Updated icons for View dialog\n- Updated Stellarium DSO Catalog\n- Added list of dwarf galaxies (Search Tool)\n- Added improvements in Scenery 3D plugin\n\n0.14.1 [2015-12-02]\nBugfix release:\n- Added support for side-by-side assembly technology (LP: #1400045)\n- Enhancements of the Ocular plugin: add OAG support (LP: #1354427)\n- Added Belarusian translation for landscapes and sky cultures (LP: #1520303)\n- Added designations for few stars in Scorpius (LP: #1518437)\n- Fixed constellation art brightness and zooming (LP: #1520783)\n- Fixed number of satellite orbit segments resets (LP: #1510592)\n- Fixed certain outplanet moons with wrong Longitudes (LP: #1509693, #1509692)\n- Fixed saving settings for some View panel options (LP: #1509639)\n- Fixed fails to run up on Windows when invoked from a different directory (LP: #1410529)\n- Fixed wrong value of ecliptic obliquity (LP: #1520792)\n- Fixed segmentation fault (core dumped) while try update stars catalog (LP: #1514542)\n- Tentative fix for support 4K resolution (GUI scaling) (LP: #1372781)\n\n0.14.0 [2015-10-24]\nA big leap forward in astronomical accuracy for historical applications:\n - Precession now follows the IAU2006 model in the long-time version from Vondrak \n   et al. 2011.\n - Nutation is applied (IAU2000B solution). Given that nobody has observed it without \n   telescope and the model does not give limits of applicability, we limit its application \n   to 1500..2500\n - Application of DeltaT has been simplified and made a bit more intuitive.\n\nWe now dare to add another coordinate system: Ecliptic coordinates of date.\n\nWe can therefore now show that planetary positions given by the commonly used solution \nVSOP87 is applicable to -4000..+8000 only, and its use outside this range will give \nsomewhat artificial results. There is more to follow in future versions.\n\nThe other big addition is a greatly improved collection of DSO data with lots of \npossibilities in a new GUI tab to select for object type and/or catalog. In total, \n15 catalogs are now built-in!\n\nAlso the Meteor Shower, Satellites, Telescope Control and 3D Sceneries plugins have \nbeen improved.\n\nLandscapes can have switchable labels, so you can e.g. indicate mountain peaks.\n\nIn total 83 bugs and wishlist items were fixed or at least decided.\n\nA platform-specific change for Windows: OpenGL binding is now dynamic. That means, there are \nno more separate OpenGL/ANGLE/MESA downloads, but after installation you will have separate \ncommands in the start menu which force ANGLE or MESA modes.\n\nFull list of changes: https://launchpad.net/stellarium/0.14/0.14.0\n\n0.13.3 [2015-04-25]\nBugfix release with few new features.\n\nThis version is contains over 30 closed bugs, who include some wishes and new nice features - like\nvisualization of the 3D landscapes and extra DSO catalogs.\n\nFull list of changes: https://launchpad.net/stellarium/0.13/0.13.3\n\n0.13.2 [2015-01-20]\nMajor bugfix release with few new features.\n\nThis version is contains over 70 closed bugs, who include some wishes and new nice features - like\nvisualization of the zodiacal light and new sky cultures.\n\nFull list of changes: https://launchpad.net/stellarium/0.13/0.13.2\n\n0.13.1 [2014-10-19]\nBugfix release with few new features.\n- Added: Light layer for old_style landscapes\n- Added: Auto-detect location via network lookup.\n- Added: Seasonal rules for displaying constellations\n- Added: Coordinates can be displayed as decimal degrees (LP: #1106743)\n- Added: Support of multi-touch gestures on Windows 8 (LP: #1165754)\n- Added: FOV on bottom bar can be displayed in DMS rather than fractional degrees (LP: #1361582)\n- Added: Oculars plugins support eyepieces with permanent crosshairs (LP: #1364139)\n- Added: Pointer Coordinates Plugin can displayed not only RA/Dec (J2000.0) (LP: #1365784, #1377995)\n- Added: Angle Measure Plugin can measure positional angles to the horizon now (LP: #1208143)\n- Added: Search tool can search position not only for RA/Dec (J2000.0) (LP: #1358706)\n- Fixed: Galactic plane renamed to correct: Galactic equator (LP: #1367744)\n- Fixed: Speed issues when computing lots of comets (LP: #1350418)\n- Fixed: Spherical mirror distortion work correctly now (LP: #676260, #1338252)\n- Fixed: Location coordinates on the bottom bar displayed correctly now (LP: #1357799)\n- Fixed: Ecliptic coordinates for J2000.0 and grids diplayed correctly now (LP: #1366567, #1369166)\n- Fixed: Rule for select a celestial objects (LP: #1357917)\n- Fixed: Loading extra star catalogs (LP: #1329500, #1379241)\n- Fixed: Creates spurious directory on startup (LP: #1357758)\n- Fixed: Various GUI/rendering improvements (LP: #1380502, #1320065, #1338252, #1096050, #1376550, #1382689)\n- Fixed: \"missing disk in drive <whatever>\" (LP: #1371183)\n\nFull list of changes: https://launchpad.net/stellarium/0.13/0.13.1\n\n0.13.0 [2014-07-19]\nThis version based on Qt 5 and has new modulated core, and new features (example: normal mapping) and fixes for 115 bugs, including:\nNew plugin: Equation of Time - provides solution for Equation of Time.\nNew plugin: Field of View - provides shortcuts for quick changes field of view.\nNew plugin: Navigational Stars - marks 58 navigational stars on the sky.\nNew plugin: Pointer Coordinates - shows the coordinates of the mouse pointer.\nNew plugin: Meteor Showers - provides visualization of meteor showers.\nNew translatable strings and new textures.\nImproved Landscapes: New Polygonal type, texture saving for shperical, and optional light pollution/streetlight layer.\nComet Tails\nNew version of the Satellites plugin: introduces star-like satellites and bug fixes.\nNew version of the Exoplanets plugin: displaying of the potential habitable exoplanets; improvements for performance and code refactoring.\nNew version of the Angle Measure plugin: displaying of the position angle.\nNew version of the Quasars plugin: improvements for performance; added marker_color parameter.\nNew version of the Pulsars plugin: improvements for performance; display pulsars with glitches; setting color for marker for different types of the pulsars.\nNew versions of the Compass Marks, Oculars, Historical Supernovae, Observability analysis and Bright Novae plugins: bug fixing, code refactoring and improvements.\n\nFull list of changes: https://launchpad.net/stellarium/0.13/0.13.0\n\n0.12.4 [2013-09-26]\nBugfix release.\n- fixed crash Stellarium when enabled binoculars in the Oculars plugin (LP: #1222742);\n- added render nighttime landscapes without lighting (LP: #1223052);\n\n0.12.3 [2013-09-08]\nBugfix release with new plugin.\n- new plugin - Bright Novae;\n- added intermediate value to ZHR of shooting stars between 80 and 10000 (LP: #1208106);\n- fixed search tool (LP: #1208296, #1211198);\n- fixed behaviour for shortkeys of few plugins (LP: #1208291);\n- fixed Flamsteed designations for few Virgo stars (LP: #1222094);\n- fixed saving Milky Way brightness via GUI (LP: #1220477)\n\n0.12.2 [2013-08-04]\nBugfix release with few new features.\nNew version of the Satellites plug-in (0.8.1):\n- automatic adding of new satellites on update from selected update sources;\nby default, only new naked-eye satellites are auto-added\n- automatic removal of satellites if they are no longer listed in the update\nsources\n- \"user-defined\" flag protecting satellites from update/removal\n- satellites can be added to/removed from satellite groups from the GUI\n- custom satellite groups can be defined\n- the default satellite group names and satellite descriptions are translatable\nAdded:\n- Variable stars support (LP: #665014)\n- Automatic change of landscape on planet change (LP: #1173254)\n- Flamsteed designation for stars and search tool (LP: #1190503)\nChanged:\n- Repacked default star catalogs (LP: #926588)\n- Update DSO features (LP: #1115035, #1172402, #1180493)\n- Improved Quasars plugin (LP: #1169232, #1181688)\n- Improved Pulsars plugin (LP: #1169230, #1181688)\n- Improved Oculars plugin (LP: #1170239, #1188340)\n- Improved Historical Supernovae plugin (LP: #1180962)\n- Improved Observability analysis plugin (LP: #1171182)\n- Improved Exoplanets plugin (LP: #1177871)\n- Improved Satellites plugin (LP: #955780)\n- Improved search tool (LP: #1181534, #1184599, #1180962)\n- Improved scripting engine (LP: #1202637, #1091626)\nFixed:\n- Satellites plugin cause crash when enabled in distant past (LP: #955780)\n- Landscape colour saturation at summer noon (LP: #1115364)\n- wrong rendering of Planet's shadow (LP: #1131847)\n- stellarium crashes (LP: #1157930, #1177871, #1194838, #1173355, #1184599)\n- mismatched malloc/delete (LP: #1172931)\n- error in template code (LP: #1178257)\n- undefined template function in vecmath (LP: #1178391)\n- Setting Startup date and time (Other:) sets time to UTC, not my local (EDT) time (LP: #1198570)\n- Debug messages don't completely convert paths to local directory separator (LP: #682633)\n- Garbled text hovering over time/date (LP: #1176424)\n- Set time to now (Icon not illuminated) (LP: #1178498)\n- Tongan translation discrepancies (LP: #1181945)\n- POD document (LP: #1184459)\n- No orbits displayed for some planets' satellites (LP: #834727)\n\n0.12.1 [2013-04-21]\nBugfix release with few new features.\nAdded:\n- Use different formulae for DeltaT calculations (LP: #1106658)\n- Show/hide starts at magnitude > X feature (LP: #880256, #1132010)\n- Added translations for Inno Setup installer (LP: #1159080)\n- Added Caldwell catalog\n- New skyculture: Tongan\n- New feature for Oculars plugin: support Barlow/Shapley lenses\n- Control brightness of the milky way (LP: #1106755)\n- Satellites plugin: New Galileo satellites (LP: #1169252)\n- Control brightness of the landscapes at startup (LP: #1149882, #603376)\nChanged:\n- Repacked default star catalogs (LP: #1124221)\n- Repacked locations catalog (LP: #1131036)\n- Refactored GUI\n- Update textures for DSO (LP: #1126959, #1114645)\n- Improved accuracy for NEO (LP: #1100766, #1080154)\nFixed:\n- Sidereal day & sunrise/sunset (LP: #1106754)\n- Wrong solar day (LP: #1113249)\n- Pluto and Charon are not tidally locked in Stellarium (LP: #968738)\n- Search problem in different language (LP: #1131034)\n- Bortle light pollution scale setting not working (LP: #1121630)\n- The preference of \"Render Solar Shadow\" cannot be saved (LP: #1114279)\n- Background color of the night sky (LP: #1085375)\n- Time is slightly off (from system time) (LP: #1113222)\n- Dynamic plugins don't load on windows (LP: #1168958)\n- Cursor jumps out of altitude input box (LP: #1156112)\n- Missing splash screen on Windows and Mac OS X (LP: #1131942)\n- Satellite event times differ (LP: #1114644)\n- Plugin \"Time Zone\" display problem on Mac OSX (LP: #1114330)\n- Yellow/Black Checkered Flag while Object Picture is Loading (LP: #1113064)\n- Omega Centauri strange appearance on Mac (LP: #1114645)\n- Planet display bug (LP: #1114036)\n- Star on meridian has wrong hour angle (LP: #1131206)\n- Location window spin box up/down behavior (LP: #1093229)\n\n0.12.0 [2013-01-31]\nNew rendering engine, editable keybindings, bug fixes and improvements.\n\nAdded:\n- New rendering engine (LP: #673183)\n- Editable keybindings (LP: #1098851, #1035635, #832256, #789002)\n- Scripting for plugins (LP: #1040242)\n- Some transneptunian objects (LP: #899084, #1051205)\n- New geographical locations (LP: #1051803)\n- New textures for DSO\n- DeltaT and lunar acceleration computation (LP: #575621)\n\nChanged:\n- Improving the scripting engine (LP: #1059368)\n- Improving the plugins (LP: #1082167, #1042714)\n- Improving the coordinate grids (LP: #1036294)\n- Improving the constellation boundaries (LP: #1039072)\n- Improving the search tool\n\nFixed:\n- Clang Wself-assign warning during build process on some platforms (LP: #1097358)\n- Bugs in Observability plugin (LP: #1042059, #1054599, #1053058)\n- Bugs in TUI plugin (LP: #1083380)\n- Bugs in Satellites plugin (LP: #1048220)\n- Bugs in Compass plugin (LP: #695891)\n- Bugs in scripting engine (LP: #1046518, #1092781)\n- Font corruption bugs (LP: #597633, #778747, #819278, #903310)\n- Screen flashing in fullscreen mode (LP: #716695, #824788)\n- Lost nebula images (LP: #1042393, #1051038)\n- Bugs in Night Vision mode (LP: #578367)\n- Bugs in GUI and Core (LP: #1090722, #1082510, #1071455, #1071458, #1056868, #1054600, #1045111, #1040944, #1077545)\n- Crashes (LP: #1043640, #1044654, #1045783)\n\n0.11.4 [2012-08-26]\nBug fix release with new features.\n\nAdded:\n- New plugin: Exoplanets\n- New plugin: Observability analysis\n- Get geometric altitude and azimuth for script engine (LP: #1010617)\n- Sky image loading with altitude/azimuth coordinates (LP: #1023548)\n- New hotkey for star name labels (LP: #1032989)\n- Option to activate/deactivate the Nebula Background Images button via GUI (LP: #925247)\n- Return to user set location and landscape (LP: #981507)\n- Display degrees and minutes for FOV of CCD (LP: #998761)\n- Adding all possible satellites (LP: #1006495)\n- Building a Windows x64 packages (LP: #1003041, #1027607)\n- Apply atmosphere effect only on bodies with atmosphere (LP: #971875)\n\nFixed:\n- Various Stellarium freezes and crashed (LP: #1005155, #1030913, #940638, #992267, #1033380, #951967, #1040054)\n- Various plugins issues (LP: #751381, #892027, #1006134, #1040066, #1040085)\n- Various issues for nebulae (LP: #1026021, #744517)\n- Add/subtract one sidereal year jumps wrong amount (LP: #1006208)\n- Various small issues, typos and mistakes (LP: #1022506, #1032469, #1019247, #985204)\n- Various issues in Scripting Engine (LP: #1023934, #1017148, #1017154, #730180)\n\nChanged:\n- New tab in the configuration window to control the selected object information.\n- Improvement Night Vision mode\n- Extend list of default scripts\n\n0.11.3 [2012-05-18]\nBug fix release.\n\nAdded:\n- ecliptic grid (LP: #834307)\n- world observatories to the locations list (LP: #891643)\n- allow configuration of url for SIMBAD lookups (LP: #948528)\n- opportunity to freely choose the object information to display (LP: #834325)\n- Pluto texture (LP: #906766)\n\nFixed:\n- No objects under horizon (LP: #952532)\n- (MinGW-w64) CMake does not detect Win64 (LP: #951465)\n- (MinGW-w64) Compilation errors (LP: #951405, #951742)\n- Oculars FOV (LP: #971066, #962691)\n- \"Galactic Plane\" string does not get translated when language is switched (LP: #976515)\n- Use freedesktop specification for Unity quicklists (LP: #959893)\n- Apparent diameter of planets with rings (LP: #960904)\n- Crash [assert] when FOV is small and Quasars or Historical Supernovae plugins is enabled (LP: #961011)\n- Angle Measure plug-in reads the wrong options from the configuration file (LP: #954205)\n- Crash in debug mode on displaying constellation borders (LP: #951967)\n- Star halo \"dances\" for small Solar System objects (LP: #805810)\n- RTL-languages is not displayed correctly when using gravity labels (LP: #801668)\n- Orbits with close perihelions are not displayed correctly (LP: #640455)\n- Precision of angular diameter lower than intended (LP: #955635)\n- Moons' orbit lines broken by parent planet movement with time (LP: #889712)\n- Invalid user defined location cause Stellarium to crash (LP: #860220)\n- Difficulty to select zoomed in planets and moons (LP: #854374)\n- Altazimutal grid not overlapping equatorial grid when located on poles (LP: #775972)\n- Global key bindings not global (LP: #687288)\n- Screenshot write permission fail (Vista/7) (LP: #568086)\n- Wrong planet phases as seen from more outer planets (LP: #803305)\n- Zoom in/out command sticks (LP: #712112)\n- Importing SSOs causes some strange effects (LP: #969211)\n- Not updated values of dimensions of CCD while changes telescopes (LP: #998726)\n- Gravity labels rendered incorrectly (LP: #998121)\n- Keyboard shortcut for subtract one sidereal year don't works (LP: #997873)\n\n0.11.2 [2012-03-10]\nThe main theme of this version seems to be localization:\n- most of the text used by the default plug-ins is now translatable\n- landscape names are now translatable\n- country names are now translatable\n- scripts names and descriptions are now translatable\n\nOculars plug-in:\n- added an optional control panel displayed in the upper-right corner of the screen as an alternative to the pop-up menu that was used to control it in the previous version;\n- overhaul of the pop-up menu, the underlined letters in it can be used as keyboard shortcuts;\n- added the ability to rearrange the items in the lists of oculars, telescopes and sensors;\n- fixed the inappropriate flipping of the binoculars view;\n\nSatellites plug-in:\n- fixed title bar of the Satellites config window not being resized with the rest of the window (LP: #900575)\n- catalog numbers are now used to identify satellites, preventing bugs with duplicate satellites and satellites renamed in the source lists\n- catalog number and international designator are now displayed for each satellite\n- a simple windows to add satellites has been added (LP: #898476)\n\nAdded:\n- Ctrl+C binding to copy selected object info text to clipboard.\n- to the Windows installer options to remove files left over from the previous installation.\n- windows no longer can be dragged to unreachable positions.\n- the \"Save settings\" button now saves the current main window position, too.\n- the language list is now sorted by language name, not language code.\n- the \"Reload style\" action has been removed, as the underlying feature no longer works. If you decide to design a new visual style for Stellarium, please contact us to give you a version where it works.\n- distance in km (if the distance is below 0.1 AU) to the information displayed about Solar System objects. (LP: #894472)\n- the StelGui::getSkyGui() method to allow plug-in developers to create their own toolbars and other GUI elements.\n- an option to show the galactic coordinates grid and the galactic plane.\n- several trans-Neptunian objects (TNOs): Sedna, Quaoar, Orcus, Haumea.\n- the Quasars plug-in.\n- the Pulsars plug-in.\n- more detailed information is now added to the log file for Mac OS X.\n- (experimental) modelling of atmospheric extinction for point objects.\n- changed the position of the text in the Text User Interface plug-in. (LP: #911594)\n- a checkbox allowing the SIMBAD on-line search to be enabled/disabled.\n\nFixed:\n- startup script crash (LP: #689657)\n- plugin names localization in the Configuration window (LP: #807402)\n- resizing of the tabs in Configuration and View windows on language change (LP: #821386)\n- sky lines' labels not translated on language change (LP: #811659)\n- \"Get catalog\" button not translated on language change (LP: #890608)\n- last star catalog not being offered for download (LP: #538291, LP: #890789)\n- proxy configuration without username/password\n- Telescope Control plug-in: mishandling of IP connections in the telescope configuration window (LP: #843837)\n- Pluto's moon Hydra preventing the constellation from being selected in Search and scripts (LP: #894780)\n- scripting code still being included despite ENABLE_SCRIPTING set to 0 (LP: #811505)\n- constellations lines and names not displayed (LP: #945146)\n- newly created location cannot be set as default (LP: #889931)\n\n0.11.1 [2011-11-04]\nBug fix release.\nAdded:\n- new skyculture: Arabic\n- new moons and rings (LP: #815484, #834336)\n- new translations for landscapes and sky cultures (LP: #849292)\n- geostationary satellites (LP: #837274)\n- new cities (LP: #856343, #860206)\nFixed:\n- misspelling on a star name (LP: #884795)\n- location window: map pointer position is updated on longitude/latitude change.\n- location window: fixed checking \"Use as default\" changing the name of the selected location to \"New Location\" (LP: #881613)\n- Solar System Editor plug-in: a bug in the parsing of MPC lists: the epoch's Julian Day value was wrong by 0.5 JD (LP: #836839)\n- Solar System Editor plug-in: crash while trying to browse for a local file (LP: #837396)\n- Historical Supernovae plug-in: the plug-in's name (LP: #803157)\n- Historical Supernovae plug-in: supernovae selected instead of nearby stars (LP: #835815)\n- doesn't load localised description of skyculture/landscape if applanguage=system_default (LP: #845924)\n- add/remove landscapes dialog bug in OSX 10.6.8 (LP: #812008)\n- horizon line setting not saved (LP: #811945)\n- the orbital period of Himalia (LP: #806174)\n- \"flag_show_fps\" and \"flag_show_fov\" had no effect (LP: #728294)\n- crash on selecting a landscape with misspelled planet name (LP: #835422)\n- crash on selecting off-Earth location in the Location window (LP: #834886)\n- crash on switching language while the Location window is open (LP: #824936)\n- crash on using custom distortion file (LP: #871313)\n\n0.11.0\nNew feature: atmosphere refraction support.\nNew plugin: Historical Supernovae.\nNew translatable strings: landscapes.\nNew moons of solar system planets (LP: #730686).\nNew feature: using different symbols for nebula icons.\nTimeZone plug-in: fixed a bug preventing the saving of custom time zones. (LP: #720107)\nOcular plug-in: Corrected the calculation of CCD FOV.\nOcular plug-in: Implemented rotating the CCD bounding box.\nOcular plug-in: Made Telrad & CCD mutually exclusive.\nOcular plug-in: Implemented better binoculars support (LP: #695568).\nOcular plug-in: Redesign dialog.\nSVMT plug-in: Adding QtWebKit dependency.\nSatellite plug-in: improve of code.\nSolar System Editor plug-in: fixed MPES online search and updated hard-coded URLs (LP: #725870).\nSkycultures: two new skyculture descriptions in Norwegian (Bokmål).\nRedesign search tool (LP: #730687).\nImproved texture manager.\nVarious problems resolved (LP: #730069, #772206, #683255, #657455, #785574, #515311, #730075, #711887, #688978, #616748, #589634)\n\n0.10.6 [2010-12-05]\nNew feature for installing landscapes from ZIP archives.\nNew plugin: Solar System editor.\nNew plugin: Time Zone manual override.\nNew translatable strings: stars and nebulae.\nSelected plugins loaded by default.\nFixed on change of sky culture. (LP: #595914).\nFixed clearing of single constellation selection. (LP: #600889).\nFixed constellation art engine, removing distortion of images. (LP: #629405).\nChanged GUI styles (all dialogs now use \"Title Bar\", the two different tabbed widget implementations are styled consistently).\nChanged Solar System engine, allowing \"Comets\" and \"Minor planets\" to be handled as classes of objects separate from \"Planets\".\nTranslatable plugin names, descriptions and some other strings.\nOculars plugin: now uses a configuration file instead of SQL (LP: #596453).\nOculars plugin: added manual override of keyboard shortcuts (LP: #514530).\nOculars plugin: CCD sensors formula fixed (LP: #604975).\nSatellites plugin: added new orbit prediction engine.\nSatellites plugin: added trajectory visualization.\nSatellites plugin: fixed problems leaving satellite TLEs out of date (LP: #616627).\nSatellites plugin: can now update TLEs from a local file.\nSatellites plugin: satellite visibility can now be saved from satellites dialog.\nTelescope control plugin: fixed bad serial port names on Windows (LP: #596167).\nTelescope control plugin: fixed telescopes disappearance on startup (LP: #608533).\nTelescope control plugin: added manual equinox/epoch override (LP: #608544).\nVarious rendering problems resolved (LP: #569701, #596678, #641855, #642990, #666837, #629405, #591971, #615006, #671633).\nSQLite dependency dropped. The Qt SQLite driver no longer needs to be packaged with Stellarium.\n\n\n0.10.5 [2010-06-02]\nBug fix release.\nFixed:\n- various problems with OpenGL shaders. If you experience problems with unreadable fonts, try adding the line \"use_qpaintenginegl2 = false\" in the [main] section of the configuration file (config.ini).\n- distorted menu icons on Windows. (LP: #512060)\n- LC_NUMERIC locale not being set properly, causing problems on some systems with old_style landscapes (LP: #518809) and the Satellites plug-in (LP: #522520). (fix proposed by Hleb Valoshka and others)\n- planet orbits not being toggled by pressing 'O'. (LP: #536684)\n- setting landscape altitude (patch by Georg Zotti).\n- making a series of location changes in a script. (LP: #500192)\n- telescope control sending RA=0 for objects with RA between (12 and 24?) on Intel Macs. (LP: #544250, fix proposed by David Hulse)\n- windows and toolbars not being affected by night vision mode. (LP: #539665)\n- a crash on Windows when exiting Stellarium after a search. (LP: #534674)\n- the Oculars plug-in not closing its SQL database on exit.\n- the last star catalog not being offered for download. (LP: #538291)\n- system clock running fast on some Windows systems using ACPI power managment (LP: #514184)\n- the top labels of vertical grid lines not being displayed, and improper label rotation.\n- script engine was recoded thread-free, this fixes many script related bugs.\n- handling of negative/large dates in scripts.\n- wrong time at startup when a time zone different than \"system_default\" is set in the configuration file (LP: #487232)\n\nChanged:\n- the Date/Time window is now synchronised with the date/time displayed in the toolbar, instead of showing the last date/time that has been entered.\n- the visual style of some plug-ins.\n- optimized loading of cities.\n- optimized loading of planet textures (lazy loading).\n- restructured src/ subdirectories to match code dependencies. Directories modules/, external/ and planetsephems/ are now under core/.\n- stars positions and grid are now coded in float instead of double, to avoid huge memory consomption when loading all 9 star catalogs.\n- improved management of OpenGL context in StelPainter.\n- StelStyle class was moved from core to GUI library.\n- GUI related resources are now compiled as part of GUI library.\n- don't use a generated config.h anymore (use simple compile definitions instead).\n- suppressed most compilation warnings with -Wextra even without the -Wno-unused-parameter flag.\n- suppressed all the TelescopeMgr/Telescope code within the core. It is replaced by the TelescopeControl plugin.\n- suppressed many unused files from installation target.\n\nAdded:\n- option to create a desktop shortcut in the Windows installer.\n- time dragging: Hold down Ctrl+Space and drag the mouse across the sky to change time speed.\n- re-added the \"planet trails\" feature. Toggle with Shift+T.\n- some Sky-Watcher mounts to the list of devices supported by the Telescope Control plug-in.\n- yet unused code for computing atmosphere refraction and extinction.\n\n\n0.10.4 [2010-02-22]\nBug fix release.\nFixed unpredictable openGL related crashes on win32.\nFixed run on MacOSX Tiger/Leopard/Snow Leopard.\nDisable OpenGL shaders by default for stars and atmosphere. User activate it by setting use_glshaders = true in the [main] section of the config.ini\nFixed the handling of the Qt -graphicssystem parameter. Now it is ignored if it is not used properly.\nImproved OpenGLES2 support (not finished yet).\nAdded Qt widgets flags on the main windows to avoid filling background (this boosted the program a lot on linux).\n\n0.10.3 [2010-01-28]\nBased on Qt 4.6.x\nBundling of plugins: Satellites, Oculars, AngleMeasure, CompassMarks, TelescopeControl, TextUserInterface.\nNew script engine improvements including variable script running speed, and a script console (activate with F12).\nMade tabs in GUI smaller by moving titles under the icons.\nUpdated the plugin API to allow to compilation and easy distribution of static plugins.\nAdded plugins window.\nGot rid of the boost library dependency.\nThe whole sky display viewport is now contained in a class deriving from QGraphicsWidget, allowing to move and resize it as a normal widget.\nGeneralized the use of shared pointers for StelObject management.\nUse vertex shaders for computation of atmosphere color if OpenGL supports it.\nOptimized openGL calls by replacing glBegin()/glEnd() by the use of vertexArray.\nOptimization of critical parts of the projection code.\nAdded code for managing and displaying non-convex polygons + unit tests.\nRecoded the StelGrid code to support non ponctual sky regions, and optimized API (new class StelSphericalIndex + unit tests)\nOptimized many part of the code by reducing creation of temporary Vec3d/Vec3f.\nOptimized JSON parser (x25 speed improvement) + unit tests.\nMigrated all text drawing system to QFont. This fixes long standing bugs for displaying arabic and asian characters in the sky. Also allow to get rid of 6 source files and of the freetype dependency (managed internally to Qt)\nSwitch default back end mode to native for Windows as ATI drivers often have problems, still raster default for other platforms.  Add --graphics-system option.\nFixed magnitude computation for most of the planets.\nUse GL Shader for stars rendering if OpenGL >= 2.1.\nRe-organized the startup by moving log and command line processing to main.cpp.\nRe-coded all the management of extra star catalogs.\nImplemented partial support of OpenGLES 2.0.\nMoved official plugins code into plugins/ and changed the cmake config so that they are automatically compiled in static.\nRe-coded the texture engine based on Qt loading features (Got rid of explicit libjpeg and libpng dependencies!).\nAllowed to first render the sky in a frame buffer.\nMoved the code related to viewport distortions into a new class StelViewportEffect based on frame buffer object.\nAdded working cmake targets for compilig and runing unit tests.\nAdded a delay before making Simbad name lookup queries to avoid sending too many requests.\nAdded the Aztec sky culture.\nMany minor fixes and optimizations.\n\n0.10.2 [2009-03-09]\nBased on Qt 4.5.\nDisplay constellations lines using nicely distorted arcs.\nFixed GUI problems when creating a new location.\nFixed the grid lines wrap around at the discontinuities in cylindrical and Mercator projection.\nHide the planet computation problems after year 80608.\nUse the Qt raster engine by default. This fixes mac rendering bugs and speeds up greatly the GUI rendering.\nImproved management of intersection of viewports with large FOV and projections with singularities.\nAdded Hammer-Aitoff projection allowing full sky overview.\nFixed various bugs.\n\n0.10.1 [2009-02-02]\nAdded reset all config options button.\nAdded code for uncompressing gzip files (borrowed from from libkde)\nAllowed for gzip compressed JSON files.\nFixed flip buttons bug.\nFixed min FPS feature.\nImplemented screenshots inverted colors feature + associated GUI.\nRe-coded grid display from scratch. It is now much faster and much more robust.\nRefactored large part of the Navigator and Projector classes. Added a StelPainter class allowing many optimizations and simpler API.\nRe-added telescope control key bindings.\nImproved the doxygen developers documentation.\nAdded Simbad lookup to the search window.\nFixed ecliptic line rendering.\nFixed grid rendering bugs.\nAdded ZIP archive support with code copied from KDE SVN.\nFixed sun's magnitude bug.\nAdded automatic star catalog downloader to GUI. Star catalog settings are now defined in a config file.\nConverted system-dependent star catalog memory mapping code to QFile::map().\nAdded log file for debugging output. Prepends system specs, such as memory and CPU information.\nImported KdeWin32 code for POSIX emulation on Windows.\nFixed build with Qt 4.5.\nFixed full screen problems at init.\nOptimized VecXX contructors (no more default values).\nAdded translations for Albanian and Bosnian.\nFixed many bugs.\n\n0.10.0 beta [2008-09-22]\nGlobal switch to Qt. Don't support SDL main application anymore.\nThe whole StelApp class is managed by a QGraphicsScene, inside a QGraphicsView.\nRemoved deprecated sources from the core of stellarium (old GUI, TUI and scripting).\nContinued API cleaning and simplifications.\nPerformed large refactorings to use portable Qt API (migrated from std::string and std::wstring to QString).\nRe-organized the source files into sub-directories.\nMigrated config file parsing to a QSettings based implementation.\nExposed some methods as slots so that they can be scripted in the future.\nCreated the new Qt-based GUI button bars (QGraphicsItems).\nRecoded from scratch the new QWidget based GUI rendered in the QGraphicsView using style sheets.\nMoved stars/planets halo rendering into SkyDrawer.\nImplemented dynamic eye adaptation for bright objects.\nOptimized atmosphere computation and others, speed can be increased up to a factor of 2.\nImplemented light pollution following the Bortle scale index.\nImproved and optimized stars rendering (updated colors, sizes and added large halo for very bright ones, use GL lists for drawing stars by bunch)\nMade testing python wrappers using SIP (unused)\nCreated a new SkyTile class supporting lazy dynamic multi-resolution images loading and display. Image trees can be stored as JSON files.\nStartup is much faster.\nMigrated the previous nebula textures to the new format.\nAdded a LocationManager for managing observing locations and cleaned the code of observer.\nChanged key bindings, use F1.. F6 for opening dialogs.\nTab completion on the search dialog.\nAdded descriptions for the sky cultures and improved the ones for landscapes.\nAdded a new mars landscape.\nFixed many bugs.\n\n0.9.1 [2008-01-17]\nGot rid of autoconf/automake (Hooray!)\nFixed a grid RA labeling bug.\nImproved the plug-in managment.\nFixed nebula names loading (bug #1740287)\nRecoded time methods based on Qt time function (this fixed bug #1740595, LANG=en_IN crash).\nUse the new Grid class by Guillaume Chéreau for NebulaMgr.\nMade StelUI and StelCommandMgr real StelModules.\nIncreased grid labeling brightness.\nFixed splash screen flickering and logo image truncation in full screen mode.\nFixed wrong nebula size (bug #1673142)\nFixed constellation art intensity bug (bug #1733482)\nGot rid of all wstreamstring and therefore don't require STLPort anymore for MinGW compilation.\nAdded more command line options.\nRe-coded StelAppQt4 init and deinit to prevent GLContext errors.\nNew config parameters for controlling star brigthness, size, color\nCircles around telescope markers indicating ocular FOV\nApplied patches for bugs #1769632 (bad init in get_tm_from_Julian), #1769584 (NebulaMgr.cpp reports wrong name on error) and #1758435 (segfault)\nFixed bug #1781617 (added altitude unit) and #1751366 (segfault when changing projection mode).\nStelModule now derive from QObject.\nFirst testing new script engine based on QObject slots.\nRecoded fully the texture manager now based on Qt signal/slots. It handles multithreading loading and downloading of images. As a direct result, loading time is divided by 2!\nNow use Qt4.3, and replaced CURL by QtNetwork.\nFixed some date display bugs in config window.\nAdded new translations for th ml he fil tl eo lt mk\nAdded new sky culture, Tupi-Guarani from Brazil (thanks to pmarcelopontes)\n\n0.9.0 [2007-06-06]\nLarger star catalog including stars from Hipparcos, Tycho2 and NOMAD\nCan select multiple constellations at one time\nLocal script directory is reread when enter TUI\nInuit constellation art by Johan Meuris\nMore sky cultures\nLarge code reorganization into a modular structure based on StelModule, StelApp singleton and its \"manager\" classes providing services to the modules.\nProjection code cleaned and splitted into Mapping classes.\nMovement control code encapsulated into the MovementMgr module.\nCode cleaning and commenting.\nSidereal day/week keystrokes (ALT -, ALT =, ALT [, ALT ]).\nData files reorganized\nAdded back Hawaiian translations (invented locale \"hw\")\nOrthographic projection, Lamberts Equal Area projection, Cylinder projection.\nInterpolate the elliptic coordinates (or the spherical coordinates in case of the moon).\nDo not place the Earth at the EMB but at its proper position.\nNew orbit type comet_orbit for proper calculation of elliptic, parabolic, hyperbolic orbits.\nAdded loading of jpeg textures and re-coded most of the texture manager.\nAllow loading of plug-ins (unstable until version 1.0).\nSelection of object is managed per module, and by the StelObjectManager.\nRecoded Grid display to allow for adaptative scale wrt zoom and labeling.\nThe main window managed by QT4.2 instead of SDL.\nWindow resizing\nSmooth go to selected solar system body by pressing control-g\nLocation map updates on changing observer to new solar system body\nTitlebar updates after moving to new planet\nLandscapes may now have location, can update observer by selecting landscape\nMore nebula textures and better placement of most existing textures\nBuild is now managed by cmake instead of autoconf/automake. These old tools are still supported for this version.\n\n\n0.8.2 [2006-10-05]\nRe-enabled some script recording features (select, pan/tilt, zoom)\nFixed win95/98 missing .dll bug.\nApplied patch for sun C/C++ compiler to work.\nHopefully fixed buggy text display using patch from David ZH.R. Huang\nApplied patch for MacOSX compilation.\nDisplay real language names instead of two letters codes in the GUI.\nRemoved HR landscape and added Ocean instead.\nMany bug fixes from sf.net.\nAdded new translations for af vi he mt bg th ar and updated the others.\n\n0.8.1 [2006-06-26]\nradial texture for planetary rings\ntelescope control using external telescope server programs\nminimum_fps patch by nuisance78\nimage flipping\nAutomatically get locale codes on win32 (works sometimes)\nMany bugs fixes, thanks to bug reporters on sf.net!\n\n0.8.0 [2006-04-30]\nBaseFont selectable in config\nConstellation select from script fixed\nTUI editing of some colors\nAdded constellation boundaries\nAdded full NGC nebula catalog.\nMouse cursor optional timeout\nRA/DE displays corrected for precession\nOption to allow UI use during scripts (flag_script_allow_ui)\nSelect location by city\nMeridian line (first press of 'z')\nPopup error windows as script debugging option\nAlt-Az readout for selected object\nChanged font rendering system with new TTF compliant font adapted from the glGooey library.\nIntegrated the use of wide characters for all translatable string and UI.\nAdded a Translator class managing all translation in an Object Oriented way over gettext.\nIncluded many increadible patches from Johannes Gajdosik : Reimplemented faster and more accurate solutions for all planet computation (VSOP87A), moon (ELP82B), added Saturnian satellites (TASS17), added Uranus satellites (GUST86), Mars satellites (ESAPHODEI).\nThe observer may be located on any planet (or satellite)\nPlanet twilight zones are darker than bright zones of a planet (as it was already in 0.5.1)\nnew projection types: stereographic (quite ok), spheric_mirror (just early alpha)\nPlanet oblateness\nSplitted StelCore class into two separated classes : StelCore and StelApp.\nAdded many new .po files for translation in more languages.\nAuto-scan available translations.\nAuto-scan available sku cultures.\nImproved mouse zoom control.\nViewport distortion for spheric mirror projection\nReplaced calculation of galilean and mars satellites with newer and better calculations made by V.Lainey\nReplaced current implementation of VSOP87B with faster and more accurate implementation of VSOP87\nWhen displaying Mercury-Neptune orbits, the osculating orbits are shown\nLight travel time compensation for solar system objects\nAdded Language section in the GUI.\nAdded meteor control and other things in the GUI\nRe-made and improved object search feature.\nUpdated GUI button graphics.\nFixed many bugs.\n\n0.7.1 [2005-09-17]\nFixed location saving bug.\nFixed date before 1970 crash on windows\nFixed search star crash.\nAdded the forgotten sts scripts to the package.\nFixed autoconf problem with libpng.\nFixed compilation with --disable-nls\nFixed option saving for flaglandscape and flagmoonscale\n\n0.7.0 [2005-08-08]\nAdded planet trails - hit \"4\" or \",\" once for ecliptic, again for trails (advance time to observe).\nAdded precession of the equinoxes.\nAdded daylight savings accounting for all platforms (needs testing).\nMore realistic and efficient meteor showers.\nAdded and set-up gettext facilities.\nAdded maximum_fps configuration setting to allow limiting CPU usage.\nAdded rudimentary scripting features - see doc/commands.html.\nAtmosphere now darkens during solar eclipses.\nAdded lunar eclipse simulation.\nAdded a fader class, lines and objects fade in/out easily now.\nAdded MacosX Xcode project file from Da-Woon Joung.\nAdded patches from Fumio Yamamoto for various fixes.\nRemoved all the libpng/zlib .c files from the glgpng directory, use host system libpng instead (fix debian bug #318026).\nFix to work with non-US keyboards.\nAdded more sky label languages.\nSky languages are no longer hard coded.\nCardinal points are now translated based on sky language.\nTUI is now using gettext.\nAdded some accented characters to spacefont.\nFixed various typos and other bugs.\nAdded a Loading Bar class.\nStarted a code spring clean aiming at removing the design mistakes with the core class. The goal is to split the current stel_core into 2 classes, one being the actual core managing sky display, the other one stel_app will manage all I/O, parameters managment, UI, locales etc..Added fader on stars labels.\nAdded loading bars for nebulae and stars loading.\nCorrected Sun rotational period.\nAdded missing hipparcos stars to database.\nAdded splash screen, new icons and improved pointers by Johan.\nImproved Milky Way tone conversion.\nAdded more star names.\nSky labels now default to user locale language if possible.\nAdded fader on nebula hints (hints can now draw even when atmosphere is on).\nAdded fader on cardinal points.\nNow display star distances.\nAdded Spanish translation by Sergio Trujillo.\nFixed deselect while zooming in crash bug.\nAdded Dutch translation by Johan Meuris.\nSlowed down pan and tilt speed.\nViewing direction is changed when mouse is dragged.\nAdded configuration menu to select landscape.\nAdded part of Tony Furr's patch to add long nebula names, fix loading bar bugs and fix win32 compilation issue.\nAdded Dev-C++ projetc file and win32 compilation HOWTO by Tony Furr.\nAdded Chinese and Egyptian constellations.\nLimited maximum FOV to 180 deg to prevent buggy side effects, set fisheye projection as default.\nAdded Kdevelop project file.\nAdded Johan last landscape \"Hoge Rielen\".\nAdded some accented characters to courrierfont.\nUpdated windows installer.\n\n0.6.2 [2004-11-18]\nFixed time display bug (1 hour ahead of actual sky time during standard time if your timezone has daylight savings).\nNOTE: Time is only displayed as standard time (no daylight savings effects).\nFixed Milky Way drawing incorrectly (inside out) in desktop mode.\nFixed Milky Way always on regardless of config setting.\nFixed atmosphere flashing bug (for the final time, we hope).\n\n0.6.1 [2004-10-17]\nAdded time control buttons on bottom right part of the screen.\nFixed the flashy background bug when zooming out too much in fisheye mode.\nFixed landscape gap bug in textures on some 3D card on windows.\nAdded all the impressive constellation art images by Johan Meuris.\nApplied patches from Fumio Yamamoto for MacOSX portability.\nRecoded landscape ground displaying.\nAdded a nice landscape from a panorama made in my own village!\nRudimentary sky localization (no accented characters) for English, Spanish, French, and some Hawaiian sky labels (needs UI)\nImproved constellation art fade in/out (still need more art) and added atmosphere fade in/out\nAdded planet orbits feature\nAdded concept of sky cultures for different constellations (currently western and polynesian, needs UI)\nAdded meteor showers (key 9)\nAdded deep space object image credits\nAdded manual (really semi-auto) zoom option (centers for you when you start zooming, zooms in increments with key presses)\nBrightened star labels for readability\n\n0.6.0 [2004-05-31]\nFixed atmosphere flash bug.\nFixed disk viewport windows version bug.\nImproved portability for timezone management.\nMade windows package installer.\n\n0.6.0rc2 [28/04/2004]\nFixed Venus too small bug.\nFixed minor bugs from sourceforge bug reports.\n\n0.6.0rc1 [27/04/2004]\nRemoved the previous patch to configure SDL because it caused some error on some systems.\nChanged the global coordinate system into the conventionnal astronomical one (ie with z axis toward top and x toward us)\nStopped using the previous unreliable astro library with badly defined licence and use 2 libraries created from modified/simplified version of the LGPL library libnova. One called stellastro which manages the astronomical operations like time management etc. and another one called stellplanet which only computes the planetary positions.\nRemoved the module/class planet_mgr and use a hierarchical unified planet class instead to manage all the solar system bodies with objective to add planet satellites, asteroids, comete and manage planet obliquity, and rotation of the textures.\nRemade in a coherent way all the s_utility conversion functions (in double precision).\nCreated a new class \"stel_object\" to manage the selected object in a good object oriented way.\nAbandoned my previous vector class for a recreated version of the vecmath class (originally from celestia).\nUse double precision for every planet, orbit and navigation calculation.\nCentralized all the navigation/time variables and operations in a new class \"navigator\" instead of the non-object old navigation module.\nThe position of the observer on the earth is now taken into account in every calculation : the precision is dramaticaly improved, sun eclipses works etc...\nChanged the command line handling : changes submitted by Cedric Delfosse.\nSimplified 3D lighting operation for planets.\nFixed many many bugs related with coordinate.\nAdded an orbit calculation class stolen from the GPL soft celestia.\nAdded experimentaly jupiter satellites.\nImproved object search and planets hints displaying.\nCreated a new class to render daylight atmosphere, with a faster and better algorithm.\nCreated a new class used to convert tone from high range luminance to CRT display luminance : the aim is to have an homogeneous luminance conversion to use with daylight sky as well as night sky and stars.\nChanged the configuration file parser. The new one is much more convenient. It is based on a library called iniparser made by N.Devillard. I made a c++ wraper (init_parser class).\nRe-made the old ui widget classes in a better way using functor callbacks and painters.\nRe-thinked and made all the interface. stel_ui is now correct object oriented code.\nAdded a tab widget.\nCreated a new class to complete the daylight atmosphere model with the previously used model.\nNow display computed atmosphere moon halo and realistic night sky brightness.\nThe stars appear in function of the sky luminance.\nMade a correct object oriented solarsystem class. The planets are read from a file.\nAdded some planet satellites.\nImproved optimization using gprof.\nFinally fixed the planet shaking bug!\nUpdated fog and decor displaying (faster and nicer).\nAdded a projector class which will handle different projection mode (fisheye, ortho etc..)\nMade a fisheye projection mode which override gl/glu functions so that 3D drawing occures in fisheye projection mode.\nAdded gravity font.\nAdded many options in the configuration files.\nMade a class for landscapes managment. Handle fisheye projection and panoramic fisheye pictures projection. The landscapes are loaded from a file so that it's easy to add custom landscapes.\nStellarium is now fully object oriented.\nReplaced most of the char* with c++ strings to prevent bugs.\nAdded a full text user interface.\nImproved configuration managment.\nAdded a class \"observator\" for observer managment : i.e. observer's position and locales managment for timezone and time formating.\nImproved the mouse selection of objects. The new algorithm is more intelligent.\nUpdated all the nebulas textures with clearly copyrighted pictures (See credits in README). This will fix the debian Bug#198495.\nRe-made the graphical interface using tabs widgets etc..\nColors for lines and grid an other misc things are now a parameter in the config file.\nAdded a screen shot function (big thanks to cmdtab for his code).\nAdded handling of non-integer time zones (Thanks to Cool Andrew for his warning).\nAdded equatorial mode viewing.\nRe-made all the GUI : new functions such as time setting, projection mode choice, saving in config file etc...\n\n0.5.2 [29/04/2003]\nChanged the configuration file to $HOME/.stellarium/VERSION/ on unix system to prevent conflicts between versions.\nCorrectly configure SDL in configure.in (patch by Kipp Canon)\nFixed some configuration files bugs.\nAdded the gui color parameters in the configuration file.\nCatch the --version command line argument.\n\n0.5.1 [11/04/2003]\nAdded an win32 installer script to use with inno setup.\nSucceed compilation on MSYS with MinGW32.\nFixed the seg fault when quiting.\nFixed the fantom planets bug.\nImplemented the ClickablePicture ui component to set the position easily by clicking the world map.\nFound and eliminate the boring memory leak i knew since months.\nSet the gui non-dynamic ie the size in pixel of the windows are fixed.\nFixed the SDL fullscreen bug in linux.\nFixed some gui bugs.\nFixed the timezone +13 bug.\nAdded a config.h.in file to set the compilation macros. The compilation output is now more readable.\nRemoved all the bugs that the glut->SDL change created.\nTotally stopped the use of the glut library! Use the good SDL library instead. Increase the compatibility with every plateforms especially full screen mode in unix.\nAdded the CTRL + Up/Down keys to control the zoom.\nRemoved a lot of warnings which occured during the compilation on some plateforms.\n\n0.5.0 [15/01/2003]\nChanged the directories used for configuration files. They are now in $HOME/.stellarium/ for unix systems. --> Unix standard is respected.\nImproved the grid class for optimisation.\nRemoved the stars drawing bug when zooming.\nFixed the fog texture bug (black vertical line) which occured on some plateform.\nAdded a \"current time\" button to the time control panel.\nCreated a new module stelconfig.h/cpp to manage the configuration files and multiplateform options.\nAdded the CTRL + clic = right clic (usefull for MacOSX users).\nFixed a configure.in problem for MACOSX portability.\n\n0.4.9 [17/10/2002]\nFixed the binary file bug under win32 (just forget a \"b\" in the file open mode....)\nUse the Hipparcos catalog : there are now 120 000 stars (10 000 before).\nAdded a grid class for spherical star data optimisation.\nModified star names files and constellation files structures.\nMACOSX version now compile and execute with the autoconf script.\n\n0.4.8 [14/08/2002]\nImproved automake/autoconf portability.\nFull installation with make intall now supported.\nCompile and works perfectly on CYGWIN.\nFixed the (famous ;) ) negative time display bug (with time zones).\nStarted to work on Hipparcos catalog.\n\n0.4.7 [17/07/2002]\nAutoconf/automake now works! Linux version available.\nAdded the possibility to change the landscape skin.\nAdded a new landscape : rocky mountains.\nAdded location control in the Configuration Panel.\nAdded a time control panel.\nAdded landscape control in the Configuration Panel.\nRemoved bugs in the windows widget.\nADDED REALISTIC ATMOSPHERE RENDERING : it's very impressive!!! : Code borrowed on VISLIMIT.CPP by the author of \"the guide\", who adapted the method from Brad Schaefer's article and code on pages 57-60, May 1998 _Sky & Telescope_,  \"To the Visual Limits\".\nFixed orientation of the moon, improved rendering and make it visible during the day.\nChanged the bottom button bar.\nChanged the landscape : the new one is the mountain borrowed from tuxracer and modified.\nAdded an automatic ground and landscape brightness.\n\n0.4.6 [25/04/2002]\nAdded a real configuration panel for stars with the new ui objects.\nAdded the info window viewable with the \"I\" key.\nImproved the navigation system. You now can track an object : usefull to track a planet in accelered time mode.\nUse fopen fclose etc... in place of the c fstream function which are less portable.\nCompletely changed the texture management : now use classes.\nThe textures are now in png format : use the (included) glpng library.\nAdded the possibility to show the names of the stars.\nAdded some gui elements in s_gui.h/.cpp\nImproved the memory management for objects labels (dynamic variables).\nRemoved a lot of segmentations faults bugs....\nAdded the visualisation of the star's name.\n\n0.4.5 [06/03/2002]\nAdded uranus, neptune and pluto (from the code proposed by Nick Porcino).\nAdded a function to find the planets easily (from the code proposed by Nick Porcino).\nRe-mapped the keys : the new mapping is more intuitive for english speaking people.\nFixed minor bugs.\n\n0.4.4 [04/02/2002]\nAdded a \"Follow earth rotation\" function to compensate the rotation of the earth.\nAdded a goto function and a \"center on selected object\" function.\nFixed the help window problems.\nAdded a MilkyWay Flag. Disabling it improves performances in software rendering mode.\nAdded a background under the selection infos.\nAdded the windows mode support.\n\n0.4.3 [16/01/2002]\nFixed a lot of minor bugs.\nCompiled the new version with gcc/g++ on win32 and linux.\nReorganised the project files structure.\n\n0.4.2 [15/01/2002]\nFinished the full reorganisation : almost a weekend of work!\nThe program looks like the version 0.3.9 but the sources are infinitely more readable and clear.\nAlmost all the variable and file/class names are now in english.\nCreated/renamed a lot of new modules (navigation, stellarium_ui, etc...)\nAdded a GPL header on every sources files.\nGlobaly cleaned the code source.\nContinued the gui.\nHandle the Keyboard on the top of Glut.\nChanged the drawing of the stars : 2D drawing is a lot faster and really only draw those which are in the field of view. The program is 20% faster!!\nWe now can't switch between resolution mode or fullscreen/windowed mode during the execution. This will prevent the program from crashs and hardware dependent bugs. Everything is statically configurable in config.txt.\nFixed hundred of minor bugs (and probably added others...).\nI now have written about 4300 lines of real code for this project!\n\n0.4.1 [13/01/2002]\nStarted a full reorganisation of the modules.\nContinued the gui. Now use it for every interaction with the user.\nHandle the Mouse on the top of Glut : I'd like the program to be glut independent.\nThe program use a file stellarium.h with a lot of macro, commons include ect...\nEncapsuled all the global variables in the struct \"global\" shared bye every module.\nThis version has never worked.\n\n0.4.0.1 [07/01/2002]\nAdded a real manager to use a config file. I have found an excellent library made by NINOMIYA <gm@debian.or.jp> called parsecfg.c. I included it with success (minor changes for windows porting).\nContinued the gui : added classes like windows and label and a full implementation of callbacks.\nStarted to change the structure of the program.\n\n0.4.0 [06/01/2002]\nStarted to write my own Graphic User Interface starting from the embryon of the one made by Chris Laurel in \"Celestia\" because MUI (given with the glut package isn't beautiful enought...). This gui will be independent of stellarium and very re-usable.\nDid an attempt to use a tcl parser to manage a real config file but it was to heavy-> so i changed my mind and stop that...\n\n0.3.9 [04/01/2002]\nCreate my own font manager : faster and more beautiful than before (I used bitmap font before).\nHandle the change of resolution (reduce the menu, the font etc...)\nAdded a texture module to manage textures.\nAdded some messier objects.\nAdded a horizontal line.\nFixed minor bugs.\nCompile under linux, and windows with gcc.\n\n0.3.8 [03/01/2002]\nAdded a config file with date, time and location parameters.\nAdd a button and a functionality to show where are the nebulaes with a dot.\nAdded some messier nebulaes.\n\n0.3.7 [27/12/2001]\nOne more day of work :\nAdded SUPER moving pointers for each type of object.\nPlanets and moon now have shading which works correctly!! I had a lot of problems with that. But it's OK now...\nImprove planet drawing perfomance.\nAdded some messier nebulaes.\nFixed minor bugs and visuals.\n\n0.3.6 [26/12/2001] :\nAdd a class LesNebuleuses to manage Nebulaes and add some nebulaes -> very beautiful and realistic!\nWe can now select with the mouse planets and nebulaes.\nFixed a texture bug when changing resolution.\nTranslate the help in english.\nFixed minor bugs and visuals.\n\n0.3.4 [17/06/2001] :\nFixed the bug for the selection, improve global perfomance, and continue to comment the code.\n\n0.3.3 [Before] :\nI succed to compile my program in linux and windows with the same sources files !\nI decided to share my source code in GPL.\nMy code was yet free but not very \"readable\" so i will try to comment it in english, and to make a version file (this file) etc... I now have to read docs to produce a \"standard GNU code\"...\n"
        },
        {
          "name": "MAINTAINER_BUSINESS.md",
          "type": "blob",
          "size": 3.1474609375,
          "content": "## Using external libraries\n\nStellarium uses [CPM](https://github.com/cpm-cmake/CPM.cmake) to automatically\ndownload several dependencies during build process, if they are missing from\nthe target system. Follow that page for more details, but here's summary.\n\n### Developer point of view\n\nIf you want to use an external library, use\n[`find_package()`](https://cmake.org/cmake/help/latest/command/find_package.html).\nIf you want to provide a fallback of downloading it when they are missing, use\n`CPMFindPackage()`. If `find_package()` is impossible to use because the\nlibrary doesn't provide `<Foo>Config.cmake` and there is no `Find<Foo>.cmake`,\nuse e.g. `find_library()` followed by `CPMAddPackage()`: `CPMFindPackage()`\nitself is essentially `find_package()` followed by `CPMAddPackage()`.\n\nThen it depends on the library. If it can be used without any changes and\nprovides a good `CMakeLists.txt`, the simplest way is to just use that file.\nThis is the default operation mode of CPM. However, if `CMakeLists.txt` is\nmissing or poorly-written, or if some other changes (patches etc) are\nnecessary, use `DOWNLOAD_ONLY YES` option, and use the files from\n`${foo_SOURCE_DIR}` as you please. After making use of the files provide an\nalias for the library to match the name exported by `find_package(Foo)`, so\nthat the rest of cmake config doesn't need to care whether the dependency was\nfound locally, or downloaded automatically.\n\n### Distributions / packaging point of view\n\nIf you already have the dependent library packaged, it should be picked up normally.\nIt may be a good idea to provide `-DCPM_USE_LOCAL_PACKAGES=yes` to cmake to\nask CPM to show an error if the package is missing, instead of trying to download\nanything.\n\n## Compression of newly added images\n\nPNG images can frequently be more efficiently compressed by using a tool designed\nfor the purpose, such as [pngcrush](https://pmt.sourceforge.io/pngcrush/),\n[oxipng](https://github.com/shssoichiro/oxipng), or\n[ect](https://github.com/fhanau/Efficient-Compression-Tool).\n\nWhen adding new images to the Stellarium project, contributors should make sure\nthat added PNGs (and exported images from SVG sources) are compressed as much\nas is reasonably achievable.\n\nBenchmarks [suggest](https://css-ig.net/benchmark/png-lossless) that `ect` is the\nmost efficient recompression tool for full color images, particularly larger ones,\nso that is what we recommend.\n\n### Using ECT to recompress images\n\nECT is an open source tool that compiles and runs on Linux, Windows, and macOS.\nTo compress a PNG image in place, run the following command:\n\n    ect -9 image.png\n\nThe `-9` specifies the maximum effort in searching for optimal compression\nparameters, and is not appropriate for use in CIs or build scripts due to its\nlow speed. `-3` is the default compression speed, which is much faster and\ncompresses almost as well.\n\nNote: when recompressing an entire directory of existing images, it is advisable\nto add the option `--strict`. This prevents `ect` from stripping metadata out of\nimages. In rare cases, this metadata could affect how the image is displayed.\nIf you did not create an image and cannot verify changes to it, avoid making\nchanges to image metadata.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.9638671875,
          "content": "# Stellarium\n[![GitHub release](https://img.shields.io/github/release/Stellarium/stellarium.svg)](https://github.com/Stellarium/stellarium/releases/latest)\n[![GitHub Release Date](https://img.shields.io/github/release-date/Stellarium/stellarium.svg)](https://github.com/Stellarium/stellarium/releases/latest)\n[![Github All Releases](https://img.shields.io/github/downloads/Stellarium/stellarium/total.svg)](https://github.com/Stellarium/stellarium/releases)\n[![Backers and sponsors](https://img.shields.io/opencollective/all/stellarium.svg?style=flat)](https://opencollective.com/stellarium)\n[![CI](https://github.com/Stellarium/stellarium/actions/workflows/ci.yml/badge.svg)](https://github.com/Stellarium/stellarium/actions/workflows/ci.yml)\n[![Build status](https://ci.appveyor.com/api/projects/status/sw8j9l8q95ejkalo?svg=true)](https://ci.appveyor.com/project/alex-w/stellarium)\n[![Coverage Status](https://coveralls.io/repos/github/Stellarium/stellarium/badge.svg)](https://coveralls.io/github/Stellarium/stellarium)\n[![CodeFactor](https://www.codefactor.io/repository/github/stellarium/stellarium/badge)](https://www.codefactor.io/repository/github/stellarium/stellarium)\n[![DOI:10.1558/jsa.17822](http://img.shields.io/badge/DOI-10.1558/jsa.17822-blue.svg)](https://doi.org/10.1558/jsa.17822)\n[![DOI:10.5281/zenodo.8377210](http://img.shields.io/badge/DOI-10.5281/zenodo.8377210-blue.svg)](https://doi.org/10.5281/zenodo.8377210)\n\nStellarium is a free open source planetarium for your computer. It shows a realistic sky\nin 3D, just like what you see with the naked eye, binoculars or a telescope.\n\nIf you are new to Stellarium, go to [www.stellarium.org](https://www.stellarium.org) for loads of additional information.\n\n## Installation Instructions & Quick Start\n\nPlease refer to the [User Guide, Getting Started section](https://github.com/Stellarium/stellarium/releases/download/v24.4/stellarium_user_guide-24.4-1.pdf).\n\n## Get & build the code\n\nSee instructions to [building Stellarium from source code](BUILDING.md).\n\n## Full References and Credits\n\nSee the [full credit file](CREDITS.md).\n\n## Contributing to Stellarium\n\nSee the [contributing guideline](CONTRIBUTING.md).\n\n## Contributors\n\nThis project exists thanks to all the people who contribute! List of contributors [on Github](https://github.com/Stellarium/stellarium/graphs/contributors) (code contributors) and [on Open Collective page](https://opencollective.com/stellarium#contributors) (financial contributors).\n\n## Our backers & sponsors\n\nThank you to all [our backers and sponsors](BACKERS.md)!  Become a [backer](https://opencollective.com/stellarium#backer) or [sponsor](https://opencollective.com/stellarium#sponsor).\n\n## Code Signing\nWindows packages of this program uses free code signing provided by [SignPath.io](https://signpath.io?utm_source=foundation&utm_medium=github&utm_campaign=stellarium), and a free code signing certificate by the [SignPath Foundation](https://signpath.org?utm_source=foundation&utm_medium=github&utm_campaign=stellarium)\n"
        },
        {
          "name": "atmosphere",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "guide",
          "type": "tree",
          "content": null
        },
        {
          "name": "landscapes",
          "type": "tree",
          "content": null
        },
        {
          "name": "models",
          "type": "tree",
          "content": null
        },
        {
          "name": "nebulae",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "po",
          "type": "tree",
          "content": null
        },
        {
          "name": "scenery3d",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "skycultures",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "stars",
          "type": "tree",
          "content": null
        },
        {
          "name": "textures",
          "type": "tree",
          "content": null
        },
        {
          "name": "transifex.yml",
          "type": "blob",
          "size": 2.1201171875,
          "content": "git:\n  filters:\n  - filter_type: file\n    file_format: PO\n    source_file: po/stellarium/stellarium.pot\n    source_language: en\n    translation_files_expression: 'po/stellarium/<lang>.po'\n\n  - filter_type: file\n    file_format: PO\n    source_file: po/stellarium-skycultures/stellarium-skycultures.pot\n    source_language: en\n    translation_files_expression: 'po/stellarium-skycultures/<lang>.po'\n\n  - filter_type: file\n    file_format: PO\n    source_file: po/stellarium-planetary-features/stellarium-planetary-features.pot\n    source_language: en\n    translation_files_expression: 'po/stellarium-planetary-features/<lang>.po'\n\n  - filter_type: file\n    file_format: PO\n    source_file: po/stellarium-remotecontrol/stellarium-remotecontrol.pot\n    source_language: en\n    translation_files_expression: 'po/stellarium-remotecontrol/<lang>.po'\n\n  - filter_type: file\n    file_format: PO\n    source_file: po/stellarium-scripts/stellarium-scripts.pot\n    source_language: en\n    translation_files_expression: 'po/stellarium-scripts/<lang>.po'\n\n  - filter_type: file\n    file_format: PO\n    source_file: po/stellarium-desktop/stellarium-desktop.pot\n    source_language: en\n    translation_files_expression: 'po/stellarium-desktop/<lang>.po'\n\n  - filter_type: file\n    file_format: PO\n    source_file: po/stellarium-metainfo/stellarium-metainfo.pot\n    source_language: en\n    translation_files_expression: 'po/stellarium-metainfo/<lang>.po'\n\n  - filter_type: file\n    file_format: PO\n    source_file: po/stellarium-landscapes-descriptions/stellarium-landscapes-descriptions.pot\n    source_language: en\n    translation_files_expression: 'po/stellarium-landscapes-descriptions/<lang>.po'\n\n  - filter_type: file\n    file_format: PO\n    source_file: po/stellarium-scenery3d-descriptions/stellarium-scenery3d-descriptions.pot\n    source_language: en\n    translation_files_expression: 'po/stellarium-scenery3d-descriptions/<lang>.po'\n\n  - filter_type: file\n    file_format: PO\n    source_file: po/stellarium-skycultures-descriptions/stellarium-skycultures-descriptions.pot\n    source_language: en\n    translation_files_expression: 'po/stellarium-skycultures-descriptions/<lang>.po'\n"
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}